AST dump for Atomics after pass normalize.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[415930]() : void[4] "insert line file info" "module init"
  {
    (506251 return _void[55])
  }
  function chpl_atomic_thread_fence[43975](arg order[43972]:memory_order[186607]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505558 return _void[55])
  }
  function atomic_fence[43987](arg order[43983]:memory_order[186607] =
  memory_order_seq_cst[186951]) : _unknown[51] "no doc" "no return value for void"
  {
    (43992 call chpl_atomic_thread_fence order[43983])
    (474236 'end of statement')
    unknown call_tmp[605924] "expr temp" "maybe param" "maybe type" "temp"
    (605927 'move' call_tmp[605924](44001 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[605924]
    {
      (43999 call chpl_rmem_consist_fence order[43983])
    }
    (505560 return _void[55])
  }
  function atomicFence[44021](param arg order[44017]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[605929] "expr temp" "maybe param" "maybe type" "temp"
    (605932 'move' call_tmp[605929](44027 call c_memory_order order[44017]))
    (44029 call atomic_fence call_tmp[605929])
    (505562 return _void[55])
  }
  function isSupported[44038](arg T[44036]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505566] "RVV" "param" "temp"
    unknown tmp[418395] "maybe param" "temp"
    unknown tmp[418416] "maybe param" "temp"
    unknown tmp[418437] "maybe param" "temp"
    (418448 'move' tmp[418437](44042 call == T[44036] bool[10]))
    unknown call_tmp[605934] "expr temp" "maybe param" "maybe type" "temp"
    (605937 'move' call_tmp[605934](418450 call _cond_invalid tmp[418437]))
    if call_tmp[605934]
    {
      (418453 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554282] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554283] "maybe param" "temp"
    unknown call_tmp[605939] "expr temp" "maybe param" "maybe type" "temp"
    (605942 'move' call_tmp[605939](418438 call isTrue tmp[418437]))
    (554288 'move' tmp[554283](554286 call _cond_test call_tmp[605939]))
    if tmp[554283]
    {
      (554293 'move' tmp[554282](554290 '_paramFoldLogical' tmp[554283] 1))
    }
    {
      unknown tmp[554295] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605944] "expr temp" "maybe param" "maybe type" "temp"
      (605947 'move' call_tmp[605944](44047 call isInt T[44036]))
      (554297 'move' tmp[554295](418442 call isTrue call_tmp[605944]))
      (554302 'move' tmp[554282](554299 '_paramFoldLogical' tmp[554283] tmp[554295]))
    }
    (418427 'move' tmp[418416] tmp[554282])
    unknown call_tmp[605949] "expr temp" "maybe param" "maybe type" "temp"
    (605952 'move' call_tmp[605949](418429 call _cond_invalid tmp[418416]))
    if call_tmp[605949]
    {
      (418432 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554309] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554310] "maybe param" "temp"
    unknown call_tmp[605954] "expr temp" "maybe param" "maybe type" "temp"
    (605957 'move' call_tmp[605954](418417 call isTrue tmp[418416]))
    (554315 'move' tmp[554310](554313 call _cond_test call_tmp[605954]))
    if tmp[554310]
    {
      (554320 'move' tmp[554309](554317 '_paramFoldLogical' tmp[554310] 1))
    }
    {
      unknown tmp[554322] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605959] "expr temp" "maybe param" "maybe type" "temp"
      (605962 'move' call_tmp[605959](44053 call isUint T[44036]))
      (554324 'move' tmp[554322](418421 call isTrue call_tmp[605959]))
      (554329 'move' tmp[554309](554326 '_paramFoldLogical' tmp[554310] tmp[554322]))
    }
    (418406 'move' tmp[418395] tmp[554309])
    unknown call_tmp[605964] "expr temp" "maybe param" "maybe type" "temp"
    (605967 'move' call_tmp[605964](418408 call _cond_invalid tmp[418395]))
    if call_tmp[605964]
    {
      (418411 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554336] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554337] "maybe param" "temp"
    unknown call_tmp[605969] "expr temp" "maybe param" "maybe type" "temp"
    (605972 'move' call_tmp[605969](418396 call isTrue tmp[418395]))
    (554342 'move' tmp[554337](554340 call _cond_test call_tmp[605969]))
    if tmp[554337]
    {
      (554347 'move' tmp[554336](554344 '_paramFoldLogical' tmp[554337] 1))
    }
    {
      unknown tmp[554349] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605974] "expr temp" "maybe param" "maybe type" "temp"
      (605977 'move' call_tmp[605974](44059 call isReal T[44036]))
      (554351 'move' tmp[554349](418400 call isTrue call_tmp[605974]))
      (554356 'move' tmp[554336](554353 '_paramFoldLogical' tmp[554337] tmp[554349]))
    }
    (505571 'move' ret[505566](505570 'deref' tmp[554336]))
    (505568 return ret[505566])
  }
  function externT[44071](arg T[44069]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505575] "RVV" "temp" "type variable"
    type atomic_bool[44077]
    type atomic_int_least8_t[44084]
    type atomic_int_least16_t[44090]
    type atomic_int_least32_t[44096]
    type atomic_int_least64_t[44102]
    type atomic_uint_least8_t[44108]
    type atomic_uint_least16_t[44114]
    type atomic_uint_least32_t[44120]
    type atomic_uint_least64_t[44126]
    type atomic__real64[44132]
    type atomic__real32[44138]
    {
      unknown tmp[44261] "expr temp" "maybe param" "maybe type" "temp"
      (44263 'move' tmp[44261] T[44069])
      unknown call_tmp[605979] "expr temp" "maybe param" "maybe type" "temp"
      (605982 'move' call_tmp[605979](44265 call == tmp[44261] bool[10]))
      unknown call_tmp[605984] "expr temp" "maybe param" "maybe type" "temp"
      (605987 'move' call_tmp[605984](44268 call _cond_test call_tmp[605979]))
      if call_tmp[605984]
      {
        (505580 'move' ret[505575](505579 'deref' atomic_bool[44077]))
        gotoReturn _end_externT[505573] _end_externT[505573]
      }
      {
        unknown call_tmp[605989] "expr temp" "maybe param" "maybe type" "temp"
        (605992 'move' call_tmp[605989](44153 call int(64)[13] 8))
        unknown call_tmp[605994] "expr temp" "maybe param" "maybe type" "temp"
        (605997 'move' call_tmp[605994](44271 call == tmp[44261] call_tmp[605989]))
        unknown call_tmp[605999] "expr temp" "maybe param" "maybe type" "temp"
        (606002 'move' call_tmp[605999](44274 call _cond_test call_tmp[605994]))
        if call_tmp[605999]
        {
          (505585 'move' ret[505575](505584 'deref' atomic_int_least8_t[44084]))
          gotoReturn _end_externT[505573] _end_externT[505573]
        }
        {
          unknown call_tmp[606004] "expr temp" "maybe param" "maybe type" "temp"
          (606007 'move' call_tmp[606004](44164 call int(64)[13] 16))
          unknown call_tmp[606009] "expr temp" "maybe param" "maybe type" "temp"
          (606012 'move' call_tmp[606009](44278 call == tmp[44261] call_tmp[606004]))
          unknown call_tmp[606014] "expr temp" "maybe param" "maybe type" "temp"
          (606017 'move' call_tmp[606014](44281 call _cond_test call_tmp[606009]))
          if call_tmp[606014]
          {
            (505590 'move' ret[505575](505589 'deref' atomic_int_least16_t[44090]))
            gotoReturn _end_externT[505573] _end_externT[505573]
          }
          {
            unknown call_tmp[606019] "expr temp" "maybe param" "maybe type" "temp"
            (606022 'move' call_tmp[606019](44175 call int(64)[13] 32))
            unknown call_tmp[606024] "expr temp" "maybe param" "maybe type" "temp"
            (606027 'move' call_tmp[606024](44285 call == tmp[44261] call_tmp[606019]))
            unknown call_tmp[606029] "expr temp" "maybe param" "maybe type" "temp"
            (606032 'move' call_tmp[606029](44288 call _cond_test call_tmp[606024]))
            if call_tmp[606029]
            {
              (505595 'move' ret[505575](505594 'deref' atomic_int_least32_t[44096]))
              gotoReturn _end_externT[505573] _end_externT[505573]
            }
            {
              unknown call_tmp[606034] "expr temp" "maybe param" "maybe type" "temp"
              (606037 'move' call_tmp[606034](44186 call int(64)[13] 64))
              unknown call_tmp[606039] "expr temp" "maybe param" "maybe type" "temp"
              (606042 'move' call_tmp[606039](44292 call == tmp[44261] call_tmp[606034]))
              unknown call_tmp[606044] "expr temp" "maybe param" "maybe type" "temp"
              (606047 'move' call_tmp[606044](44295 call _cond_test call_tmp[606039]))
              if call_tmp[606044]
              {
                (505600 'move' ret[505575](505599 'deref' atomic_int_least64_t[44102]))
                gotoReturn _end_externT[505573] _end_externT[505573]
              }
              {
                unknown call_tmp[606049] "expr temp" "maybe param" "maybe type" "temp"
                (606052 'move' call_tmp[606049](44197 call uint(64)[115] 8))
                unknown call_tmp[606054] "expr temp" "maybe param" "maybe type" "temp"
                (606057 'move' call_tmp[606054](44299 call == tmp[44261] call_tmp[606049]))
                unknown call_tmp[606059] "expr temp" "maybe param" "maybe type" "temp"
                (606062 'move' call_tmp[606059](44302 call _cond_test call_tmp[606054]))
                if call_tmp[606059]
                {
                  (505605 'move' ret[505575](505604 'deref' atomic_uint_least8_t[44108]))
                  gotoReturn _end_externT[505573] _end_externT[505573]
                }
                {
                  unknown call_tmp[606064] "expr temp" "maybe param" "maybe type" "temp"
                  (606067 'move' call_tmp[606064](44208 call uint(64)[115] 16))
                  unknown call_tmp[606069] "expr temp" "maybe param" "maybe type" "temp"
                  (606072 'move' call_tmp[606069](44306 call == tmp[44261] call_tmp[606064]))
                  unknown call_tmp[606074] "expr temp" "maybe param" "maybe type" "temp"
                  (606077 'move' call_tmp[606074](44309 call _cond_test call_tmp[606069]))
                  if call_tmp[606074]
                  {
                    (505610 'move' ret[505575](505609 'deref' atomic_uint_least16_t[44114]))
                    gotoReturn _end_externT[505573] _end_externT[505573]
                  }
                  {
                    unknown call_tmp[606079] "expr temp" "maybe param" "maybe type" "temp"
                    (606082 'move' call_tmp[606079](44219 call uint(64)[115] 32))
                    unknown call_tmp[606084] "expr temp" "maybe param" "maybe type" "temp"
                    (606087 'move' call_tmp[606084](44313 call == tmp[44261] call_tmp[606079]))
                    unknown call_tmp[606089] "expr temp" "maybe param" "maybe type" "temp"
                    (606092 'move' call_tmp[606089](44316 call _cond_test call_tmp[606084]))
                    if call_tmp[606089]
                    {
                      (505615 'move' ret[505575](505614 'deref' atomic_uint_least32_t[44120]))
                      gotoReturn _end_externT[505573] _end_externT[505573]
                    }
                    {
                      unknown call_tmp[606094] "expr temp" "maybe param" "maybe type" "temp"
                      (606097 'move' call_tmp[606094](44230 call uint(64)[115] 64))
                      unknown call_tmp[606099] "expr temp" "maybe param" "maybe type" "temp"
                      (606102 'move' call_tmp[606099](44320 call == tmp[44261] call_tmp[606094]))
                      unknown call_tmp[606104] "expr temp" "maybe param" "maybe type" "temp"
                      (606107 'move' call_tmp[606104](44323 call _cond_test call_tmp[606099]))
                      if call_tmp[606104]
                      {
                        (505620 'move' ret[505575](505619 'deref' atomic_uint_least64_t[44126]))
                        gotoReturn _end_externT[505573] _end_externT[505573]
                      }
                      {
                        unknown call_tmp[606109] "expr temp" "maybe param" "maybe type" "temp"
                        (606112 'move' call_tmp[606109](44241 call real(64)[16] 32))
                        unknown call_tmp[606114] "expr temp" "maybe param" "maybe type" "temp"
                        (606117 'move' call_tmp[606114](44327 call == tmp[44261] call_tmp[606109]))
                        unknown call_tmp[606119] "expr temp" "maybe param" "maybe type" "temp"
                        (606122 'move' call_tmp[606119](44330 call _cond_test call_tmp[606114]))
                        if call_tmp[606119]
                        {
                          (505625 'move' ret[505575](505624 'deref' atomic__real32[44138]))
                          gotoReturn _end_externT[505573] _end_externT[505573]
                        }
                        {
                          unknown call_tmp[606124] "expr temp" "maybe param" "maybe type" "temp"
                          (606127 'move' call_tmp[606124](44252 call real(64)[16] 64))
                          unknown call_tmp[606129] "expr temp" "maybe param" "maybe type" "temp"
                          (606132 'move' call_tmp[606129](44334 call == tmp[44261] call_tmp[606124]))
                          unknown call_tmp[606134] "expr temp" "maybe param" "maybe type" "temp"
                          (606137 'move' call_tmp[606134](44337 call _cond_test call_tmp[606129]))
                          if call_tmp[606134]
                          {
                            (505630 'move' ret[505575](505629 'deref' atomic__real64[44132]))
                            gotoReturn _end_externT[505573] _end_externT[505573]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505573]
    (505577 return ret[505575])
  }
  function externTString[44348](arg T[44346]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505636] "RVV" "param" "temp"
    unknown call_tmp[606139] "expr temp" "maybe param" "maybe type" "temp"
    (606142 'move' call_tmp[606139](44352 call == T[44346] bool[10]))
    unknown call_tmp[606144] "expr temp" "maybe param" "maybe type" "temp"
    (606147 'move' call_tmp[606144](44373 call _cond_test call_tmp[606139]))
    if call_tmp[606144]
    {
      (505641 'move' ret[505636](505640 'deref' "bool"))
      gotoReturn _end_externTString[505634] _end_externTString[505634]
    }
    unknown call_tmp[606149] "expr temp" "maybe param" "maybe type" "temp"
    (606152 'move' call_tmp[606149](44382 call isInt T[44346]))
    unknown call_tmp[606154] "expr temp" "maybe param" "maybe type" "temp"
    (606157 'move' call_tmp[606154](44430 call _cond_test call_tmp[606149]))
    if call_tmp[606154]
    {
      unknown call_tmp[606159] "expr temp" "maybe param" "maybe type" "temp"
      (606162 'move' call_tmp[606159](44403 call numBits T[44346]))
      unknown call_tmp[606164] "expr temp" "maybe param" "maybe type" "temp"
      (606167 'move' call_tmp[606164](44405 call _cast string[26] call_tmp[606159]))
      unknown call_tmp[606169] "expr temp" "maybe param" "maybe type" "temp"
      (606172 'move' call_tmp[606169](44407 call + "int_least" call_tmp[606164]))
      unknown call_tmp[606174] "expr temp" "maybe param" "maybe type" "temp"
      (606177 'move' call_tmp[606174](44426 call + call_tmp[606169] "_t"))
      (505646 'move' ret[505636](505645 'deref' call_tmp[606174]))
      gotoReturn _end_externTString[505634] _end_externTString[505634]
    }
    unknown call_tmp[606179] "expr temp" "maybe param" "maybe type" "temp"
    (606182 'move' call_tmp[606179](44438 call isUint T[44346]))
    unknown call_tmp[606184] "expr temp" "maybe param" "maybe type" "temp"
    (606187 'move' call_tmp[606184](44470 call _cond_test call_tmp[606179]))
    if call_tmp[606184]
    {
      unknown call_tmp[606189] "expr temp" "maybe param" "maybe type" "temp"
      (606192 'move' call_tmp[606189](44459 call numBits T[44346]))
      unknown call_tmp[606194] "expr temp" "maybe param" "maybe type" "temp"
      (606197 'move' call_tmp[606194](44461 call _cast string[26] call_tmp[606189]))
      unknown call_tmp[606199] "expr temp" "maybe param" "maybe type" "temp"
      (606202 'move' call_tmp[606199](44463 call + "uint_least" call_tmp[606194]))
      unknown call_tmp[606204] "expr temp" "maybe param" "maybe type" "temp"
      (606207 'move' call_tmp[606204](44466 call + call_tmp[606199] "_t"))
      (505651 'move' ret[505636](505650 'deref' call_tmp[606204]))
      gotoReturn _end_externTString[505634] _end_externTString[505634]
    }
    unknown call_tmp[606209] "expr temp" "maybe param" "maybe type" "temp"
    (606212 'move' call_tmp[606209](44478 call isReal T[44346]))
    unknown call_tmp[606214] "expr temp" "maybe param" "maybe type" "temp"
    (606217 'move' call_tmp[606214](44507 call _cond_test call_tmp[606209]))
    if call_tmp[606214]
    {
      unknown call_tmp[606219] "expr temp" "maybe param" "maybe type" "temp"
      (606222 'move' call_tmp[606219](44499 call numBits T[44346]))
      unknown call_tmp[606224] "expr temp" "maybe param" "maybe type" "temp"
      (606227 'move' call_tmp[606224](44501 call _cast string[26] call_tmp[606219]))
      unknown call_tmp[606229] "expr temp" "maybe param" "maybe type" "temp"
      (606232 'move' call_tmp[606229](44503 call + "_real" call_tmp[606224]))
      (505656 'move' ret[505636](505655 'deref' call_tmp[606229]))
      gotoReturn _end_externTString[505634] _end_externTString[505634]
    }
    label _end_externTString[505634]
    (505638 return ret[505636])
  }
  function externFunc[44520](param arg s[44517]:string[26], arg T[44522]:_any[178](?), param arg explicit[44525] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505662] "RVV" "param" "temp"
    unknown call_tmp[606234] "expr temp" "maybe param" "maybe type" "temp"
    (606237 'move' call_tmp[606234](44607 call _cond_test explicit[44525]))
    if call_tmp[606234]
    {
      unknown call_tmp[606239] "expr temp" "maybe param" "maybe type" "temp"
      (606242 'move' call_tmp[606239](44547 call + "atomic_" s[44517]))
      unknown call_tmp[606244] "expr temp" "maybe param" "maybe type" "temp"
      (606247 'move' call_tmp[606244](44566 call + call_tmp[606239] "_explicit_"))
      unknown call_tmp[606249] "expr temp" "maybe param" "maybe type" "temp"
      (606252 'move' call_tmp[606249](44571 call externTString T[44522]))
      unknown call_tmp[606254] "expr temp" "maybe param" "maybe type" "temp"
      (606257 'move' call_tmp[606254](44572 call + call_tmp[606244] call_tmp[606249]))
      (505667 'move' ret[505662](505666 'deref' call_tmp[606254]))
      gotoReturn _end_externFunc[505660] _end_externFunc[505660]
    }
    {
      unknown call_tmp[606259] "expr temp" "maybe param" "maybe type" "temp"
      (606262 'move' call_tmp[606259](44578 call + "atomic_" s[44517]))
      unknown call_tmp[606264] "expr temp" "maybe param" "maybe type" "temp"
      (606267 'move' call_tmp[606264](44597 call + call_tmp[606259] "_"))
      unknown call_tmp[606269] "expr temp" "maybe param" "maybe type" "temp"
      (606272 'move' call_tmp[606269](44602 call externTString T[44522]))
      unknown call_tmp[606274] "expr temp" "maybe param" "maybe type" "temp"
      (606277 'move' call_tmp[606274](44603 call + call_tmp[606264] call_tmp[606269]))
      (505672 'move' ret[505662](505671 'deref' call_tmp[606274]))
      gotoReturn _end_externFunc[505660] _end_externFunc[505660]
    }
    label _end_externFunc[505660]
    (505664 return ret[505662])
  }
  function chpl__processorAtomicType[44620](arg T[44618]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505678] "RVV" "temp" "type variable"
    unknown call_tmp[606279] "expr temp" "maybe param" "maybe type" "temp"
    (606282 'move' call_tmp[606279](44624 call == T[44618] bool[10]))
    unknown call_tmp[606284] "expr temp" "maybe param" "maybe type" "temp"
    (606287 'move' call_tmp[606284](44672 call _cond_test call_tmp[606279]))
    if call_tmp[606284]
    {
      (505683 'move' ret[505678](505682 'deref' AtomicBool[45874]))
      gotoReturn _end_chpl__processorAtomicType[505676] _end_chpl__processorAtomicType[505676]
    }
    {
      unknown call_tmp[606289] "expr temp" "maybe param" "maybe type" "temp"
      (606292 'move' call_tmp[606289](44632 call isSupported T[44618]))
      unknown call_tmp[606294] "expr temp" "maybe param" "maybe type" "temp"
      (606297 'move' call_tmp[606294](44666 call _cond_test call_tmp[606289]))
      if call_tmp[606294]
      {
        unknown call_tmp[606299] "expr temp" "maybe param" "maybe type" "temp"
        (606302 'move' call_tmp[606299](44636 call AtomicT[48077](?) T[44618]))
        (505688 'move' ret[505678](505687 'deref' call_tmp[606299]))
        gotoReturn _end_chpl__processorAtomicType[505676] _end_chpl__processorAtomicType[505676]
      }
      {
        unknown call_tmp[606304] "expr temp" "maybe param" "maybe type" "temp"
        (606307 'move' call_tmp[606304](44659 call _cast string[26] T[44618]))
        unknown call_tmp[606309] "expr temp" "maybe param" "maybe type" "temp"
        (606312 'move' call_tmp[606309](44661 call + "Unsupported atomic type: " call_tmp[606304]))
        (44664 call compilerError call_tmp[606309])
      }
    }
    label _end_chpl__processorAtomicType[505676]
    (505680 return ret[505678])
  }
  function chpl__atomicType[44685](arg T[44683]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505694] "RVV" "temp" "type variable"
    unknown call_tmp[606314] "expr temp" "maybe param" "maybe type" "temp"
    (606317 'move' call_tmp[606314](44689 call == CHPL_NETWORK_ATOMICS[21517] "none"))
    unknown call_tmp[606319] "expr temp" "maybe param" "maybe type" "temp"
    (606322 'move' call_tmp[606319](44705 call _cond_test call_tmp[606314]))
    if call_tmp[606319]
    {
      unknown call_tmp[606324] "expr temp" "maybe param" "maybe type" "temp"
      (606327 'move' call_tmp[606324](44694 call chpl__processorAtomicType T[44683]))
      (505699 'move' ret[505694](505698 'deref' call_tmp[606324]))
      gotoReturn _end_chpl__atomicType[505692] _end_chpl__atomicType[505692]
    }
    {
      unknown call_tmp[606329] "expr temp" "maybe param" "maybe type" "temp"
      (606332 'move' call_tmp[606329](44701 call chpl__networkAtomicType T[44683]))
      (505704 'move' ret[505694](505703 'deref' call_tmp[606329]))
      gotoReturn _end_chpl__atomicType[505692] _end_chpl__atomicType[505692]
    }
    label _end_chpl__atomicType[505692]
    (505696 return ret[505694])
  }
  function AtomicBool[45874].init_helper[44727](arg _mt[45878]:_MT[238], arg this[45876]:AtomicBool[45874], arg value[44724]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44759](ref arg obj[44756] :
    (44755 call externT bool[10]), arg value[44762]:bool[10], arg _chpl_cname[44770]:string[26] =
    (44749 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505710] "RVV" "temp"
      (505712 return ret[505710])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606336] "expr temp" "maybe param" "maybe type" "temp"
    (606339 'move' call_tmp[606336](370873 call _v _mt[243] this[45876]))
    (44779 call atomic_init call_tmp[606336] value[44724])
    (505714 return _void[55])
  }
  function AtomicBool[45874].init[44785](arg _mt[45882]:_MT[238], ref arg this[45880]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454554] "temp"
    unknown call_tmp[606341] "expr temp" "maybe param" "maybe type" "temp"
    (606344 'move' call_tmp[606341](454557 call externT bool[10]))
    (454559 'default init var' tmp[454554] call_tmp[606341])
    (454561 '.=' this[45880] c"_v" tmp[454554])
    (474266 'end of statement')
    const default[44796] "dead at end of block" "const" "insert auto destroy"
    (540585 'default init var' default[44796] bool[10])
    (44799 'end of statement')
    (44803 call(370880 call (partial) init_helper _mt[243] this[45880]) default[44796])
    (474267 'end of statement' default[44796])
    (505716 return _void[55])
  }
  function AtomicBool[45874].init=[44813](arg _mt[45886]:_MT[238], ref arg this[45884]:AtomicBool[45874], arg other[44810]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454565] "temp"
    unknown call_tmp[606348] "expr temp" "maybe param" "maybe type" "temp"
    (606351 'move' call_tmp[606348](454568 call externT bool[10]))
    (454570 'default init var' tmp[454565] call_tmp[606348])
    (454572 '.=' this[45884] c"_v" tmp[454565])
    (474269 'end of statement')
    unknown call_tmp[606357] "expr temp" "maybe param" "maybe type" "temp"
    (606360 'move' call_tmp[606357](44829 call(44825 call (partial) read _mt[243] other[44810])))
    (44831 call(370886 call (partial) init_helper _mt[243] this[45884]) call_tmp[606357])
    (505718 return _void[55])
  }
  function AtomicBool[45874].init=[44841](arg _mt[45890]:_MT[238], ref arg this[45888]:AtomicBool[45874], arg other[44838]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454576] "temp"
    unknown call_tmp[606362] "expr temp" "maybe param" "maybe type" "temp"
    (606365 'move' call_tmp[606362](454579 call externT bool[10]))
    (454581 'default init var' tmp[454576] call_tmp[606362])
    (454583 '.=' this[45888] c"_v" tmp[454576])
    (474271 'end of statement')
    (44854 call(370890 call (partial) init_helper _mt[243] this[45888]) other[44838])
    (505720 return _void[55])
  }
  function AtomicBool[45874].deinit[44860](arg _mt[45894]:_MT[238], arg this[45892]:AtomicBool[45874]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44894](ref arg obj[44891] :
    (44890 call externT bool[10]), arg _chpl_cname[44901]:string[26] =
    (44884 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505724] "RVV" "temp"
      (505726 return ret[505724])
    }
    { scopeless type
      void[4]
    }
    const tmp[44915] "const" "temp"
    unknown call_tmp[606369] "expr temp" "maybe param" "maybe type" "temp"
    (606372 'move' call_tmp[606369](44912 '_wide_get_locale' this[45892]))
    (44917 'move' tmp[44915](44913 'deref' call_tmp[606369]))
    {
      unknown call_tmp[606376] "expr temp" "maybe param" "maybe type" "temp"
      (606379 'move' call_tmp[606376](370897 call _v _mt[243] this[45892]))
      (44910 call atomic_destroy call_tmp[606376])
      (44920 'on block' 0 tmp[44915])
    }
    (505728 return _void[55])
  }
  function AtomicBool[45874].read[44936](arg _mt[45898]:_MT[238], const arg this[45896]:AtomicBool[45874], param arg order[44932]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505738] "RVV" "temp"
    function atomic_load[44969](const  ref arg obj[44966] :
    (44965 call externT bool[10]), arg order[44972]:memory_order[186607], arg _chpl_cname[44980]:string[26] =
    (44959 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505732] "RVV" "temp"
      (505734 return ret[505732])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44986] "dead at end of block" "insert auto destroy"
    (540587 'default init var' ret[44986] bool[10])
    (44989 'end of statement')
    const tmp[45006] "const" "temp"
    unknown call_tmp[606381] "expr temp" "maybe param" "maybe type" "temp"
    (606384 'move' call_tmp[606381](45003 '_wide_get_locale' this[45896]))
    (45008 'move' tmp[45006](45004 'deref' call_tmp[606381]))
    {
      unknown call_tmp[606388] "expr temp" "maybe param" "maybe type" "temp"
      (606391 'move' call_tmp[606388](370906 call _v _mt[243] this[45896]))
      unknown call_tmp[606393] "expr temp" "maybe param" "maybe type" "temp"
      (606396 'move' call_tmp[606393](44998 call c_memory_order order[44932]))
      unknown call_tmp[606398] "expr temp" "maybe param" "maybe type" "temp"
      (606401 'move' call_tmp[606398](44999 call atomic_load call_tmp[606388] call_tmp[606393]))
      (45000 call = ret[44986] call_tmp[606398])
      (474274 'end of statement' ret[44986])
      (45011 'on block' 0 tmp[45006])
    }
    (505744 'move' ret[505738](505743 'coerce' ret[44986] bool[10]))
    gotoReturn _end_read[505736] _end_read[505736]
    (474276 'end of statement' ret[44986])
    label _end_read[505736]
    (505740 return ret[505738])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].write[45026](arg _mt[45902]:_MT[238], arg this[45900]:AtomicBool[45874], arg value[45023]:bool[10], param arg order[45033]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505756] "RVV" "temp"
    function atomic_store[45068](ref arg obj[45065] :
    (45064 call externT bool[10]), arg value[45071]:bool[10], arg order[45075]:memory_order[186607], arg _chpl_cname[45083]:string[26] =
    (45058 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505750] "RVV" "temp"
      (505752 return ret[505750])
    }
    { scopeless type
      void[4]
    }
    const tmp[45102] "const" "temp"
    unknown call_tmp[606403] "expr temp" "maybe param" "maybe type" "temp"
    (606406 'move' call_tmp[606403](45099 '_wide_get_locale' this[45900]))
    (45104 'move' tmp[45102](45100 'deref' call_tmp[606403]))
    {
      unknown call_tmp[606410] "expr temp" "maybe param" "maybe type" "temp"
      (606413 'move' call_tmp[606410](370916 call _v _mt[243] this[45900]))
      unknown call_tmp[606415] "expr temp" "maybe param" "maybe type" "temp"
      (606418 'move' call_tmp[606415](45096 call c_memory_order order[45033]))
      (45097 call atomic_store call_tmp[606410] value[45023] call_tmp[606415])
      (45107 'on block' 0 tmp[45102])
    }
    (505758 return ret[505756])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].exchange[45119](arg _mt[45906]:_MT[238], arg this[45904]:AtomicBool[45874], arg value[45116]:bool[10], param arg order[45126]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505768] "RVV" "temp"
    function atomic_exchange[45161](ref arg obj[45158] :
    (45157 call externT bool[10]), arg value[45164]:bool[10], arg order[45168]:memory_order[186607], arg _chpl_cname[45176]:string[26] =
    (45151 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505762] "RVV" "temp"
      (505764 return ret[505762])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45182] "dead at end of block" "insert auto destroy"
    (540589 'default init var' ret[45182] bool[10])
    (45185 'end of statement')
    const tmp[45203] "const" "temp"
    unknown call_tmp[606420] "expr temp" "maybe param" "maybe type" "temp"
    (606423 'move' call_tmp[606420](45200 '_wide_get_locale' this[45904]))
    (45205 'move' tmp[45203](45201 'deref' call_tmp[606420]))
    {
      unknown call_tmp[606427] "expr temp" "maybe param" "maybe type" "temp"
      (606430 'move' call_tmp[606427](370927 call _v _mt[243] this[45904]))
      unknown call_tmp[606432] "expr temp" "maybe param" "maybe type" "temp"
      (606435 'move' call_tmp[606432](45195 call c_memory_order order[45126]))
      unknown call_tmp[606437] "expr temp" "maybe param" "maybe type" "temp"
      (606440 'move' call_tmp[606437](45196 call atomic_exchange call_tmp[606427] value[45116] call_tmp[606432]))
      (45197 call = ret[45182] call_tmp[606437])
      (474279 'end of statement' ret[45182])
      (45208 'on block' 0 tmp[45203])
    }
    (505774 'move' ret[505768](505773 'coerce' ret[45182] bool[10]))
    gotoReturn _end_exchange[505766] _end_exchange[505766]
    (474281 'end of statement' ret[45182])
    label _end_exchange[505766]
    (505770 return ret[505768])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45223](arg _mt[45910]:_MT[238], arg this[45908]:AtomicBool[45874], ref arg expected[45220]:bool[10], arg desired[45226]:bool[10], param arg order[45234]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505780] "RVV" "temp"
    unknown call_tmp[606444] "expr temp" "maybe param" "maybe type" "temp"
    (606447 'move' call_tmp[606444](45252 call readableOrder order[45234]))
    unknown call_tmp[606449] "expr temp" "maybe param" "maybe type" "temp"
    (606452 'move' call_tmp[606449](45253 call(45242 call (partial) compareExchange _mt[243] this[45908]) expected[45220] desired[45226] order[45234] call_tmp[606444]))
    (505786 'move' ret[505780](505785 'coerce' call_tmp[606449] bool[10]))
    (505782 return ret[505780])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45266](arg _mt[45914]:_MT[238], arg this[45912]:AtomicBool[45874], ref arg expected[45263]:bool[10], arg desired[45269]:bool[10], param arg success[45273]:memoryOrder[186966], param arg failure[45277]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505796] "RVV" "temp"
    function atomic_compare_exchange_strong[45311](ref arg obj[45308] :
    (45307 call externT bool[10]), ref arg expected[45314]:bool[10], arg desired[45318]:bool[10], arg succ[45322]:memory_order[186607], arg fail[45326]:memory_order[186607], arg _chpl_cname[45334]:string[26] =
    (45301 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505790] "RVV" "temp"
      (505792 return ret[505790])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45340] "dead at end of block" "insert auto destroy"
    (540591 'default init var' ret[45340] bool[10])
    (45343 'end of statement')
    const tmp[45385] "const" "temp"
    unknown call_tmp[606454] "expr temp" "maybe param" "maybe type" "temp"
    (606457 'move' call_tmp[606454](45382 '_wide_get_locale' this[45912]))
    (45387 'move' tmp[45385](45383 'deref' call_tmp[606454]))
    {
      {
        unknown localizedExpected[45346] "dead at end of block" "insert auto destroy"
        (540593 'init var' localizedExpected[45346] expected[45263])
        (45349 'end of statement')
        unknown call_tmp[606461] "expr temp" "maybe param" "maybe type" "temp"
        (606464 'move' call_tmp[606461](370947 call _v _mt[243] this[45912]))
        unknown call_tmp[606466] "expr temp" "maybe param" "maybe type" "temp"
        (606469 'move' call_tmp[606466](45360 call c_memory_order success[45273]))
        unknown call_tmp[606471] "expr temp" "maybe param" "maybe type" "temp"
        (606474 'move' call_tmp[606471](45364 call c_memory_order failure[45277]))
        unknown call_tmp[606476] "expr temp" "maybe param" "maybe type" "temp"
        (606479 'move' call_tmp[606476](45365 call atomic_compare_exchange_strong call_tmp[606461] localizedExpected[45346] desired[45269] call_tmp[606466] call_tmp[606471]))
        (45366 call = ret[45340] call_tmp[606476])
        (474284 'end of statement' ret[45340] localizedExpected[45346])
        unknown call_tmp[606481] "expr temp" "maybe param" "maybe type" "temp"
        (606484 'move' call_tmp[606481](45370 call ! ret[45340]))
        unknown call_tmp[606486] "expr temp" "maybe param" "maybe type" "temp"
        (606489 'move' call_tmp[606486](45377 call _cond_test call_tmp[606481]))
        if call_tmp[606486]
        {
          (45374 call = expected[45263] localizedExpected[45346])
          (474287 'end of statement' localizedExpected[45346])
        }
      }
      (45390 'on block' 0 tmp[45385])
    }
    (505802 'move' ret[505796](505801 'coerce' ret[45340] bool[10]))
    gotoReturn _end_compareExchange[505794] _end_compareExchange[505794]
    (474289 'end of statement' ret[45340])
    label _end_compareExchange[505794]
    (505798 return ret[505796])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45405](arg _mt[45918]:_MT[238], arg this[45916]:AtomicBool[45874], ref arg expected[45402]:bool[10], arg desired[45408]:bool[10], param arg order[45416]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505808] "RVV" "temp"
    unknown call_tmp[606493] "expr temp" "maybe param" "maybe type" "temp"
    (606496 'move' call_tmp[606493](45434 call readableOrder order[45416]))
    unknown call_tmp[606498] "expr temp" "maybe param" "maybe type" "temp"
    (606501 'move' call_tmp[606498](45435 call(45424 call (partial) compareExchangeWeak _mt[243] this[45916]) expected[45402] desired[45408] order[45416] call_tmp[606493]))
    (505814 'move' ret[505808](505813 'coerce' call_tmp[606498] bool[10]))
    (505810 return ret[505808])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45448](arg _mt[45922]:_MT[238], arg this[45920]:AtomicBool[45874], ref arg expected[45445]:bool[10], arg desired[45451]:bool[10], param arg success[45455]:memoryOrder[186966], param arg failure[45459]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505824] "RVV" "temp"
    function atomic_compare_exchange_weak[45492](ref arg obj[45489] :
    (45488 call externT bool[10]), ref arg expected[45495]:bool[10], arg desired[45499]:bool[10], arg succ[45503]:memory_order[186607], arg fail[45507]:memory_order[186607], arg _chpl_cname[45515]:string[26] =
    (45482 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505818] "RVV" "temp"
      (505820 return ret[505818])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45521] "dead at end of block" "insert auto destroy"
    (540595 'default init var' ret[45521] bool[10])
    (45524 'end of statement')
    const tmp[45566] "const" "temp"
    unknown call_tmp[606503] "expr temp" "maybe param" "maybe type" "temp"
    (606506 'move' call_tmp[606503](45563 '_wide_get_locale' this[45920]))
    (45568 'move' tmp[45566](45564 'deref' call_tmp[606503]))
    {
      {
        unknown localizedExpected[45527] "dead at end of block" "insert auto destroy"
        (540597 'init var' localizedExpected[45527] expected[45445])
        (45530 'end of statement')
        unknown call_tmp[606510] "expr temp" "maybe param" "maybe type" "temp"
        (606513 'move' call_tmp[606510](370972 call _v _mt[243] this[45920]))
        unknown call_tmp[606515] "expr temp" "maybe param" "maybe type" "temp"
        (606518 'move' call_tmp[606515](45541 call c_memory_order success[45455]))
        unknown call_tmp[606520] "expr temp" "maybe param" "maybe type" "temp"
        (606523 'move' call_tmp[606520](45545 call c_memory_order failure[45459]))
        unknown call_tmp[606525] "expr temp" "maybe param" "maybe type" "temp"
        (606528 'move' call_tmp[606525](45546 call atomic_compare_exchange_weak call_tmp[606510] localizedExpected[45527] desired[45451] call_tmp[606515] call_tmp[606520]))
        (45547 call = ret[45521] call_tmp[606525])
        (474292 'end of statement' ret[45521] localizedExpected[45527])
        unknown call_tmp[606530] "expr temp" "maybe param" "maybe type" "temp"
        (606533 'move' call_tmp[606530](45551 call ! ret[45521]))
        unknown call_tmp[606535] "expr temp" "maybe param" "maybe type" "temp"
        (606538 'move' call_tmp[606535](45558 call _cond_test call_tmp[606530]))
        if call_tmp[606535]
        {
          (45555 call = expected[45445] localizedExpected[45527])
          (474295 'end of statement' localizedExpected[45527])
        }
      }
      (45571 'on block' 0 tmp[45566])
    }
    (505829 'move' ret[505824](505828 'deref' ret[45521]))
    gotoReturn _end_compareExchangeWeak[505822] _end_compareExchangeWeak[505822]
    (474297 'end of statement' ret[45521])
    label _end_compareExchangeWeak[505822]
    (505826 return ret[505824])
  }
  function AtomicBool[45874].compareAndSwap[45585](arg _mt[45926]:_MT[238], arg this[45924]:AtomicBool[45874], arg expected[45582]:bool[10], arg desired[45588]:bool[10], param arg order[45596]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505841] "RVV" "temp"
    function atomic_compare_exchange_strong[45615](ref arg obj[45612] :
    (45611 call externT bool[10]), ref arg expected[45618]:bool[10], arg desired[45622]:bool[10], arg succ[45626]:memory_order[186607], arg fail[45630]:memory_order[186607], arg _chpl_cname[45638]:string[26] =
    (45605 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505835] "RVV" "temp"
      (505837 return ret[505835])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45644] "dead at end of block" "insert auto destroy"
    (540599 'default init var' ret[45644] bool[10])
    (45647 'end of statement')
    const tmp[45679] "const" "temp"
    unknown call_tmp[606540] "expr temp" "maybe param" "maybe type" "temp"
    (606543 'move' call_tmp[606540](45676 '_wide_get_locale' this[45924]))
    (45681 'move' tmp[45679](45677 'deref' call_tmp[606540]))
    {
      {
        unknown mutableExpected[45650] "dead at end of block" "insert auto destroy"
        (540601 'init var' mutableExpected[45650] expected[45582])
        (45653 'end of statement')
        unknown call_tmp[606547] "expr temp" "maybe param" "maybe type" "temp"
        (606550 'move' call_tmp[606547](370991 call _v _mt[243] this[45924]))
        unknown call_tmp[606552] "expr temp" "maybe param" "maybe type" "temp"
        (606555 'move' call_tmp[606552](45664 call c_memory_order order[45596]))
        unknown call_tmp[606557] "expr temp" "maybe param" "maybe type" "temp"
        (606560 'move' call_tmp[606557](45669 call readableOrder order[45596]))
        unknown call_tmp[606562] "expr temp" "maybe param" "maybe type" "temp"
        (606565 'move' call_tmp[606562](45671 call c_memory_order call_tmp[606557]))
        unknown call_tmp[606567] "expr temp" "maybe param" "maybe type" "temp"
        (606570 'move' call_tmp[606567](45672 call atomic_compare_exchange_strong call_tmp[606547] mutableExpected[45650] desired[45588] call_tmp[606552] call_tmp[606562]))
        (45673 call = ret[45644] call_tmp[606567])
        (474299 'end of statement' ret[45644] mutableExpected[45650])
      }
      (45684 'on block' 0 tmp[45679])
    }
    (505847 'move' ret[505841](505846 'coerce' ret[45644] bool[10]))
    gotoReturn _end_compareAndSwap[505839] _end_compareAndSwap[505839]
    (474302 'end of statement' ret[45644])
    label _end_compareAndSwap[505839]
    (505843 return ret[505841])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].testAndSet[45704](arg _mt[45930]:_MT[238], arg this[45928]:AtomicBool[45874], param arg order[45700]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505853] "RVV" "temp"
    unknown call_tmp[606574] "expr temp" "maybe param" "maybe type" "temp"
    (606577 'move' call_tmp[606574](45714 call(45708 call (partial) exchange _mt[243] this[45928]) 1 order[45700]))
    (505859 'move' ret[505853](505858 'coerce' call_tmp[606574] bool[10]))
    (505855 return ret[505853])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].clear[45732](arg _mt[45934]:_MT[238], arg this[45932]:AtomicBool[45874], param arg order[45728]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505863] "RVV" "temp"
    (45742 call(45736 call (partial) write _mt[243] this[45932]) 0 order[45728])
    (505865 return ret[505863])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].waitFor[45754](arg _mt[45938]:_MT[238], const arg this[45936]:AtomicBool[45874], arg value[45751]:bool[10], param arg order[45761]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505869] "RVV" "temp"
    const tmp[45845] "const" "temp"
    unknown call_tmp[606581] "expr temp" "maybe param" "maybe type" "temp"
    (606584 'move' call_tmp[606581](45842 '_wide_get_locale' this[45936]))
    (45847 'move' tmp[45845](45843 'deref' call_tmp[606581]))
    {
      {
        {
          unknown tmp[45788] "temp"
          unknown call_tmp[606588] "expr temp" "maybe param" "maybe type" "temp"
          (606591 'move' call_tmp[606588](45823 call(45820 call (partial) read _mt[243] this[45936])(order = relaxed[186964])))
          unknown call_tmp[606593] "expr temp" "maybe param" "maybe type" "temp"
          (606596 'move' call_tmp[606593](45818 call != call_tmp[606588] value[45751]))
          (45830 'move' tmp[45788](45816 call _cond_test call_tmp[606593]))
          WhileDo[45793]
          {
            {
              (45785 call chpl_task_yield)
            }
            label _continueLabel[45791]
            unknown call_tmp[606600] "expr temp" "maybe param" "maybe type" "temp"
            (606603 'move' call_tmp[606600](45804 call(45801 call (partial) read _mt[243] this[45936])(order = relaxed[186964])))
            unknown call_tmp[606605] "expr temp" "maybe param" "maybe type" "temp"
            (606608 'move' call_tmp[606605](45799 call != call_tmp[606600] value[45751]))
            (45811 'move' tmp[45788](45797 call _cond_test call_tmp[606605]))
            tmp[45788]
          }
          label _breakLabel[45792]
        }
        unknown call_tmp[606610] "expr temp" "maybe param" "maybe type" "temp"
        (606613 'move' call_tmp[606610](45838 call c_memory_order order[45761]))
        (45840 call chpl_atomic_thread_fence call_tmp[606610])
      }
      (45850 'on block' 0 tmp[45845])
    }
    (505871 return ret[505869])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].writeThis[45861](arg _mt[45942]:_MT[238], const arg this[45940]:AtomicBool[45874], arg x[45859]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606617] "expr temp" "maybe param" "maybe type" "temp"
    (606620 'move' call_tmp[606617](45866 call(371010 call (partial) read _mt[243] this[45940])))
    (45867 call <~> x[45859] call_tmp[606617])
    (505873 return _void[55])
  }
  type AtomicBool[45874] unknown _v[44717] "no doc"(44716 call externT bool[10])
  function AtomicT[48077](?).init_helper[45963](arg _mt[48081]:_MT[238], arg this[48079]:AtomicT[48077](?), arg value[45960] :
  (371016 call T _mt[243] this[48079])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45981](ref arg obj[45978] :
    unknown call_tmp[606626] "expr temp" "maybe param" "maybe type" "temp", arg value[45984] :
    (371031 call T _mt[243] this[48079]), arg _chpl_cname[45992]:string[26] =
    unknown call_tmp[606635] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505877] "RVV" "temp"
      (505879 return ret[505877])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606642] "expr temp" "maybe param" "maybe type" "temp"
    (606645 'move' call_tmp[606642](371036 call _v _mt[243] this[48079]))
    (46001 call atomic_init call_tmp[606642] value[45960])
    (505881 return _void[55])
  }
  function AtomicT[48077](?).init[46009](arg _mt[48085]:_MT[238], ref arg this[48083]:AtomicT[48077](?), arg T[46007]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454587] "temp" "type variable"
    (454589 'move' tmp[454587] T[46007])
    (454591 'init field' this[48083] c"T" tmp[454587])
    (474310 'end of statement')
    unknown tmp[454595] "temp"
    unknown call_tmp[606647] "expr temp" "maybe param" "maybe type" "temp"
    (606650 'move' call_tmp[606647](454606 '.v' this[48083] c"T"))
    unknown call_tmp[606652] "expr temp" "maybe param" "maybe type" "temp"
    (606655 'move' call_tmp[606652](454598 call externT call_tmp[606647]))
    (454600 'default init var' tmp[454595] call_tmp[606652])
    (454602 '.=' this[48083] c"_v" tmp[454595])
    (474311 'end of statement')
    const default[46030] "dead at end of block" "const" "insert auto destroy"
    (540603 'default init var' default[46030] T[46007])
    (46033 'end of statement')
    (46037 call(371043 call (partial) init_helper _mt[243] this[48083]) default[46030])
    (474312 'end of statement' default[46030])
    (505883 return _void[55])
  }
  function AtomicT[48077](?).init=[46048](arg _mt[48089]:_MT[238], ref arg this[48087]:AtomicT[48077](?), const  ref arg other[46045]:AtomicT[48077](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454609] "temp" "type variable"
    (454611 'move' tmp[454609](46055 call T _mt[243] other[46045]))
    (454613 'init field' this[48087] c"T" tmp[454609])
    (474314 'end of statement')
    unknown tmp[454617] "temp"
    unknown call_tmp[606661] "expr temp" "maybe param" "maybe type" "temp"
    (606664 'move' call_tmp[606661](454628 '.v' this[48087] c"T"))
    unknown call_tmp[606666] "expr temp" "maybe param" "maybe type" "temp"
    (606669 'move' call_tmp[606666](454620 call externT call_tmp[606661]))
    (454622 'default init var' tmp[454617] call_tmp[606666])
    (454624 '.=' this[48087] c"_v" tmp[454617])
    (474315 'end of statement')
    unknown call_tmp[606675] "expr temp" "maybe param" "maybe type" "temp"
    (606678 'move' call_tmp[606675](46075 call(46071 call (partial) read _mt[243] other[46045])))
    (46077 call(371049 call (partial) init_helper _mt[243] this[48087]) call_tmp[606675])
    (505885 return _void[55])
  }
  function AtomicT[48077](?).init=[46091](arg _mt[48093]:_MT[238], ref arg this[48091]:AtomicT[48077](?), arg other[46088] :
  unknown call_tmp[606680] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454631] "temp" "type variable"
    (454633 'move' tmp[454631](46098 'typeof' other[46088]))
    (454635 'init field' this[48091] c"T" tmp[454631])
    (474317 'end of statement')
    unknown tmp[454639] "temp"
    unknown call_tmp[606687] "expr temp" "maybe param" "maybe type" "temp"
    (606690 'move' call_tmp[606687](454650 '.v' this[48091] c"T"))
    unknown call_tmp[606692] "expr temp" "maybe param" "maybe type" "temp"
    (606695 'move' call_tmp[606692](454642 call externT call_tmp[606687]))
    (454644 'default init var' tmp[454639] call_tmp[606692])
    (454646 '.=' this[48091] c"_v" tmp[454639])
    (474318 'end of statement')
    (46113 call(371055 call (partial) init_helper _mt[243] this[48091]) other[46088])
    (505887 return _void[55])
  }
  function AtomicT[48077](?).deinit[46119](arg _mt[48097]:_MT[238], arg this[48095]:AtomicT[48077](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46137](ref arg obj[46134] :
    unknown call_tmp[606701] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46144]:string[26] =
    unknown call_tmp[606708] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505891] "RVV" "temp"
      (505893 return ret[505891])
    }
    { scopeless type
      void[4]
    }
    const tmp[46158] "const" "temp"
    unknown call_tmp[606713] "expr temp" "maybe param" "maybe type" "temp"
    (606716 'move' call_tmp[606713](46155 '_wide_get_locale' this[48095]))
    (46160 'move' tmp[46158](46156 'deref' call_tmp[606713]))
    {
      unknown call_tmp[606720] "expr temp" "maybe param" "maybe type" "temp"
      (606723 'move' call_tmp[606720](371072 call _v _mt[243] this[48095]))
      (46153 call atomic_destroy call_tmp[606720])
      (46163 'on block' 0 tmp[46158])
    }
    (505895 return _void[55])
  }
  function AtomicT[48077](?).read[46179](arg _mt[48101]:_MT[238], const arg this[48099]:AtomicT[48077](?), param arg order[46175]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505905] "RVV" "temp"
    function atomic_load[46196](const  ref arg obj[46193] :
    unknown call_tmp[606727] "expr temp" "maybe param" "maybe type" "temp", arg order[46199]:memory_order[186607], arg _chpl_cname[46207]:string[26] =
    unknown call_tmp[606734] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505899] "RVV" "temp"
      (505901 return ret[505899])
    }
    { scopeless type
      (371094 call T _mt[243] this[48099])
    }
    unknown ret[46213] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606743] "expr temp" "maybe param" "maybe type" "temp"
    (606746 'move' call_tmp[606743](371099 call T _mt[243] this[48099]))
    (540605 'default init var' ret[46213] call_tmp[606743])
    (46216 'end of statement')
    const tmp[46233] "const" "temp"
    unknown call_tmp[606748] "expr temp" "maybe param" "maybe type" "temp"
    (606751 'move' call_tmp[606748](46230 '_wide_get_locale' this[48099]))
    (46235 'move' tmp[46233](46231 'deref' call_tmp[606748]))
    {
      unknown call_tmp[606755] "expr temp" "maybe param" "maybe type" "temp"
      (606758 'move' call_tmp[606755](371106 call _v _mt[243] this[48099]))
      unknown call_tmp[606760] "expr temp" "maybe param" "maybe type" "temp"
      (606763 'move' call_tmp[606760](46225 call c_memory_order order[46175]))
      unknown call_tmp[606765] "expr temp" "maybe param" "maybe type" "temp"
      (606768 'move' call_tmp[606765](46226 call atomic_load call_tmp[606755] call_tmp[606760]))
      (46227 call = ret[46213] call_tmp[606765])
      (474321 'end of statement' ret[46213])
      (46238 'on block' 0 tmp[46233])
    }
    unknown call_tmp[606772] "expr temp" "maybe param" "maybe type" "temp"
    (606775 'move' call_tmp[606772](505910 call T _mt[243] this[48099]))
    (505914 'move' ret[505905](505913 'coerce' ret[46213] call_tmp[606772]))
    gotoReturn _end_read[505903] _end_read[505903]
    (474323 'end of statement' ret[46213])
    label _end_read[505903]
    (505907 return ret[505905])
  }
  { scopeless type
    (371078 call T _mt[243] this[48099])
  }
  function AtomicT[48077](?).write[46253](arg _mt[48105]:_MT[238], arg this[48103]:AtomicT[48077](?), arg value[46250] :
  (371113 call T _mt[243] this[48103]), param arg order[46260]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505926] "RVV" "temp"
    function atomic_store[46279](ref arg obj[46276] :
    unknown call_tmp[606783] "expr temp" "maybe param" "maybe type" "temp", arg value[46282] :
    (371129 call T _mt[243] this[48103]), arg order[46286]:memory_order[186607], arg _chpl_cname[46294]:string[26] =
    unknown call_tmp[606792] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505920] "RVV" "temp"
      (505922 return ret[505920])
    }
    { scopeless type
      void[4]
    }
    const tmp[46313] "const" "temp"
    unknown call_tmp[606797] "expr temp" "maybe param" "maybe type" "temp"
    (606800 'move' call_tmp[606797](46310 '_wide_get_locale' this[48103]))
    (46315 'move' tmp[46313](46311 'deref' call_tmp[606797]))
    {
      unknown call_tmp[606804] "expr temp" "maybe param" "maybe type" "temp"
      (606807 'move' call_tmp[606804](371136 call _v _mt[243] this[48103]))
      unknown call_tmp[606809] "expr temp" "maybe param" "maybe type" "temp"
      (606812 'move' call_tmp[606809](46307 call c_memory_order order[46260]))
      (46308 call atomic_store call_tmp[606804] value[46250] call_tmp[606809])
      (46318 'on block' 0 tmp[46313])
    }
    (505928 return ret[505926])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).exchange[46330](arg _mt[48109]:_MT[238], arg this[48107]:AtomicT[48077](?), arg value[46327] :
  (371143 call T _mt[243] this[48107]), param arg order[46337]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505938] "RVV" "temp"
    function atomic_exchange[46356](ref arg obj[46353] :
    unknown call_tmp[606818] "expr temp" "maybe param" "maybe type" "temp", arg value[46359] :
    (371164 call T _mt[243] this[48107]), arg order[46363]:memory_order[186607], arg _chpl_cname[46371]:string[26] =
    unknown call_tmp[606827] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505932] "RVV" "temp"
      (505934 return ret[505932])
    }
    { scopeless type
      (371170 call T _mt[243] this[48107])
    }
    unknown ret[46377] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606836] "expr temp" "maybe param" "maybe type" "temp"
    (606839 'move' call_tmp[606836](371175 call T _mt[243] this[48107]))
    (540607 'default init var' ret[46377] call_tmp[606836])
    (46380 'end of statement')
    const tmp[46398] "const" "temp"
    unknown call_tmp[606841] "expr temp" "maybe param" "maybe type" "temp"
    (606844 'move' call_tmp[606841](46395 '_wide_get_locale' this[48107]))
    (46400 'move' tmp[46398](46396 'deref' call_tmp[606841]))
    {
      unknown call_tmp[606848] "expr temp" "maybe param" "maybe type" "temp"
      (606851 'move' call_tmp[606848](371182 call _v _mt[243] this[48107]))
      unknown call_tmp[606853] "expr temp" "maybe param" "maybe type" "temp"
      (606856 'move' call_tmp[606853](46390 call c_memory_order order[46337]))
      unknown call_tmp[606858] "expr temp" "maybe param" "maybe type" "temp"
      (606861 'move' call_tmp[606858](46391 call atomic_exchange call_tmp[606848] value[46327] call_tmp[606853]))
      (46392 call = ret[46377] call_tmp[606858])
      (474326 'end of statement' ret[46377])
      (46403 'on block' 0 tmp[46398])
    }
    unknown call_tmp[606865] "expr temp" "maybe param" "maybe type" "temp"
    (606868 'move' call_tmp[606865](505943 call T _mt[243] this[48107]))
    (505947 'move' ret[505938](505946 'coerce' ret[46377] call_tmp[606865]))
    gotoReturn _end_exchange[505936] _end_exchange[505936]
    (474328 'end of statement' ret[46377])
    label _end_exchange[505936]
    (505940 return ret[505938])
  }
  { scopeless type
    (371149 call T _mt[243] this[48107])
  }
  function AtomicT[48077](?).compareExchange[46418](arg _mt[48113]:_MT[238], arg this[48111]:AtomicT[48077](?), ref arg expected[46415] :
  (371190 call T _mt[243] this[48111]), arg desired[46421] :
  (371195 call T _mt[243] this[48111]), param arg order[46429]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505953] "RVV" "temp"
    unknown call_tmp[606878] "expr temp" "maybe param" "maybe type" "temp"
    (606881 'move' call_tmp[606878](46445 call readableOrder order[46429]))
    unknown call_tmp[606883] "expr temp" "maybe param" "maybe type" "temp"
    (606886 'move' call_tmp[606883](46446 call(46435 call (partial) compareExchange _mt[243] this[48111]) expected[46415] desired[46421] order[46429] call_tmp[606878]))
    (505959 'move' ret[505953](505958 'coerce' call_tmp[606883] bool[10]))
    (505955 return ret[505953])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchange[46459](arg _mt[48117]:_MT[238], arg this[48115]:AtomicT[48077](?), ref arg expected[46456] :
  (371205 call T _mt[243] this[48115]), arg desired[46462] :
  (371210 call T _mt[243] this[48115]), param arg success[46466]:memoryOrder[186966], param arg failure[46470]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505969] "RVV" "temp"
    function atomic_compare_exchange_strong[46488](ref arg obj[46485] :
    unknown call_tmp[606894] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46491] :
    (371227 call T _mt[243] this[48115]), arg desired[46495] :
    (371232 call T _mt[243] this[48115]), arg succ[46499]:memory_order[186607], arg fail[46503]:memory_order[186607], arg _chpl_cname[46511]:string[26] =
    unknown call_tmp[606905] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505963] "RVV" "temp"
      (505965 return ret[505963])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46517] "dead at end of block" "insert auto destroy"
    (540609 'default init var' ret[46517] bool[10])
    (46520 'end of statement')
    const tmp[46562] "const" "temp"
    unknown call_tmp[606910] "expr temp" "maybe param" "maybe type" "temp"
    (606913 'move' call_tmp[606910](46559 '_wide_get_locale' this[48115]))
    (46564 'move' tmp[46562](46560 'deref' call_tmp[606910]))
    {
      {
        unknown localizedExpected[46523] "dead at end of block" "insert auto destroy"
        (540611 'init var' localizedExpected[46523] expected[46456])
        (46526 'end of statement')
        unknown call_tmp[606917] "expr temp" "maybe param" "maybe type" "temp"
        (606920 'move' call_tmp[606917](371242 call _v _mt[243] this[48115]))
        unknown call_tmp[606922] "expr temp" "maybe param" "maybe type" "temp"
        (606925 'move' call_tmp[606922](46537 call c_memory_order success[46466]))
        unknown call_tmp[606927] "expr temp" "maybe param" "maybe type" "temp"
        (606930 'move' call_tmp[606927](46541 call c_memory_order failure[46470]))
        unknown call_tmp[606932] "expr temp" "maybe param" "maybe type" "temp"
        (606935 'move' call_tmp[606932](46542 call atomic_compare_exchange_strong call_tmp[606917] localizedExpected[46523] desired[46462] call_tmp[606922] call_tmp[606927]))
        (46543 call = ret[46517] call_tmp[606932])
        (474331 'end of statement' ret[46517] localizedExpected[46523])
        unknown call_tmp[606937] "expr temp" "maybe param" "maybe type" "temp"
        (606940 'move' call_tmp[606937](46547 call ! ret[46517]))
        unknown call_tmp[606942] "expr temp" "maybe param" "maybe type" "temp"
        (606945 'move' call_tmp[606942](46554 call _cond_test call_tmp[606937]))
        if call_tmp[606942]
        {
          (46551 call = expected[46456] localizedExpected[46523])
          (474334 'end of statement' localizedExpected[46523])
        }
      }
      (46567 'on block' 0 tmp[46562])
    }
    (505975 'move' ret[505969](505974 'coerce' ret[46517] bool[10]))
    gotoReturn _end_compareExchange[505967] _end_compareExchange[505967]
    (474336 'end of statement' ret[46517])
    label _end_compareExchange[505967]
    (505971 return ret[505969])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46582](arg _mt[48121]:_MT[238], arg this[48119]:AtomicT[48077](?), ref arg expected[46579] :
  (371255 call T _mt[243] this[48119]), arg desired[46585] :
  (371260 call T _mt[243] this[48119]), param arg order[46593]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505981] "RVV" "temp"
    unknown call_tmp[606953] "expr temp" "maybe param" "maybe type" "temp"
    (606956 'move' call_tmp[606953](46609 call readableOrder order[46593]))
    unknown call_tmp[606958] "expr temp" "maybe param" "maybe type" "temp"
    (606961 'move' call_tmp[606958](46610 call(46599 call (partial) compareExchangeWeak _mt[243] this[48119]) expected[46579] desired[46585] order[46593] call_tmp[606953]))
    (505987 'move' ret[505981](505986 'coerce' call_tmp[606958] bool[10]))
    (505983 return ret[505981])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46623](arg _mt[48125]:_MT[238], arg this[48123]:AtomicT[48077](?), ref arg expected[46620] :
  (371270 call T _mt[243] this[48123]), arg desired[46626] :
  (371275 call T _mt[243] this[48123]), param arg success[46630]:memoryOrder[186966], param arg failure[46634]:memoryOrder[186966]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505997] "RVV" "temp"
    function atomic_compare_exchange_weak[46652](ref arg obj[46649] :
    unknown call_tmp[606969] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46655] :
    (371292 call T _mt[243] this[48123]), arg desired[46659] :
    (371297 call T _mt[243] this[48123]), arg succ[46663]:memory_order[186607], arg fail[46667]:memory_order[186607], arg _chpl_cname[46675]:string[26] =
    unknown call_tmp[606980] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505991] "RVV" "temp"
      (505993 return ret[505991])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46681] "dead at end of block" "insert auto destroy"
    (540613 'default init var' ret[46681] bool[10])
    (46684 'end of statement')
    const tmp[46726] "const" "temp"
    unknown call_tmp[606985] "expr temp" "maybe param" "maybe type" "temp"
    (606988 'move' call_tmp[606985](46723 '_wide_get_locale' this[48123]))
    (46728 'move' tmp[46726](46724 'deref' call_tmp[606985]))
    {
      {
        unknown localizedExpected[46687] "dead at end of block" "insert auto destroy"
        (540615 'init var' localizedExpected[46687] expected[46620])
        (46690 'end of statement')
        unknown call_tmp[606992] "expr temp" "maybe param" "maybe type" "temp"
        (606995 'move' call_tmp[606992](371307 call _v _mt[243] this[48123]))
        unknown call_tmp[606997] "expr temp" "maybe param" "maybe type" "temp"
        (607000 'move' call_tmp[606997](46701 call c_memory_order success[46630]))
        unknown call_tmp[607002] "expr temp" "maybe param" "maybe type" "temp"
        (607005 'move' call_tmp[607002](46705 call c_memory_order failure[46634]))
        unknown call_tmp[607007] "expr temp" "maybe param" "maybe type" "temp"
        (607010 'move' call_tmp[607007](46706 call atomic_compare_exchange_weak call_tmp[606992] localizedExpected[46687] desired[46626] call_tmp[606997] call_tmp[607002]))
        (46707 call = ret[46681] call_tmp[607007])
        (474339 'end of statement' ret[46681] localizedExpected[46687])
        unknown call_tmp[607012] "expr temp" "maybe param" "maybe type" "temp"
        (607015 'move' call_tmp[607012](46711 call ! ret[46681]))
        unknown call_tmp[607017] "expr temp" "maybe param" "maybe type" "temp"
        (607020 'move' call_tmp[607017](46718 call _cond_test call_tmp[607012]))
        if call_tmp[607017]
        {
          (46715 call = expected[46620] localizedExpected[46687])
          (474342 'end of statement' localizedExpected[46687])
        }
      }
      (46731 'on block' 0 tmp[46726])
    }
    (506003 'move' ret[505997](506002 'coerce' ret[46681] bool[10]))
    gotoReturn _end_compareExchangeWeak[505995] _end_compareExchangeWeak[505995]
    (474344 'end of statement' ret[46681])
    label _end_compareExchangeWeak[505995]
    (505999 return ret[505997])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareAndSwap[46746](arg _mt[48129]:_MT[238], arg this[48127]:AtomicT[48077](?), arg expected[46743] :
  (371320 call T _mt[243] this[48127]), arg desired[46749] :
  (371325 call T _mt[243] this[48127]), param arg order[46757]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506015] "RVV" "temp"
    function atomic_compare_exchange_strong[46776](ref arg obj[46773] :
    unknown call_tmp[607028] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46779] :
    (371341 call T _mt[243] this[48127]), arg desired[46783] :
    (371346 call T _mt[243] this[48127]), arg succ[46787]:memory_order[186607], arg fail[46791]:memory_order[186607], arg _chpl_cname[46799]:string[26] =
    unknown call_tmp[607039] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506009] "RVV" "temp"
      (506011 return ret[506009])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46805] "dead at end of block" "insert auto destroy"
    (540617 'default init var' ret[46805] bool[10])
    (46808 'end of statement')
    const tmp[46840] "const" "temp"
    unknown call_tmp[607044] "expr temp" "maybe param" "maybe type" "temp"
    (607047 'move' call_tmp[607044](46837 '_wide_get_locale' this[48127]))
    (46842 'move' tmp[46840](46838 'deref' call_tmp[607044]))
    {
      {
        unknown mutableExpected[46811] "dead at end of block" "insert auto destroy"
        (540619 'init var' mutableExpected[46811] expected[46743])
        (46814 'end of statement')
        unknown call_tmp[607051] "expr temp" "maybe param" "maybe type" "temp"
        (607054 'move' call_tmp[607051](371356 call _v _mt[243] this[48127]))
        unknown call_tmp[607056] "expr temp" "maybe param" "maybe type" "temp"
        (607059 'move' call_tmp[607056](46825 call c_memory_order order[46757]))
        unknown call_tmp[607061] "expr temp" "maybe param" "maybe type" "temp"
        (607064 'move' call_tmp[607061](46830 call readableOrder order[46757]))
        unknown call_tmp[607066] "expr temp" "maybe param" "maybe type" "temp"
        (607069 'move' call_tmp[607066](46832 call c_memory_order call_tmp[607061]))
        unknown call_tmp[607071] "expr temp" "maybe param" "maybe type" "temp"
        (607074 'move' call_tmp[607071](46833 call atomic_compare_exchange_strong call_tmp[607051] mutableExpected[46811] desired[46749] call_tmp[607056] call_tmp[607066]))
        (46834 call = ret[46805] call_tmp[607071])
        (474346 'end of statement' ret[46805] mutableExpected[46811])
      }
      (46845 'on block' 0 tmp[46840])
    }
    (506021 'move' ret[506015](506020 'coerce' ret[46805] bool[10]))
    gotoReturn _end_compareAndSwap[506013] _end_compareAndSwap[506013]
    (474349 'end of statement' ret[46805])
    label _end_compareAndSwap[506013]
    (506017 return ret[506015])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).fetchAdd[46860](arg _mt[48133]:_MT[238], arg this[48131]:AtomicT[48077](?), arg value[46857] :
  (371366 call T _mt[243] this[48131]), param arg order[46867]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506033] "RVV" "temp"
    function atomic_fetch_add[46902](ref arg obj[46899] :
    unknown call_tmp[607080] "expr temp" "maybe param" "maybe type" "temp", arg operand[46905] :
    (371387 call T _mt[243] this[48131]), arg order[46909]:memory_order[186607], arg _chpl_cname[46917]:string[26] =
    unknown call_tmp[607089] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506027] "RVV" "temp"
      (506029 return ret[506027])
    }
    { scopeless type
      (371393 call T _mt[243] this[48131])
    }
    unknown ret[46923] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607098] "expr temp" "maybe param" "maybe type" "temp"
    (607101 'move' call_tmp[607098](371398 call T _mt[243] this[48131]))
    (540621 'default init var' ret[46923] call_tmp[607098])
    (46926 'end of statement')
    const tmp[46944] "const" "temp"
    unknown call_tmp[607103] "expr temp" "maybe param" "maybe type" "temp"
    (607106 'move' call_tmp[607103](46941 '_wide_get_locale' this[48131]))
    (46946 'move' tmp[46944](46942 'deref' call_tmp[607103]))
    {
      unknown call_tmp[607110] "expr temp" "maybe param" "maybe type" "temp"
      (607113 'move' call_tmp[607110](371405 call _v _mt[243] this[48131]))
      unknown call_tmp[607115] "expr temp" "maybe param" "maybe type" "temp"
      (607118 'move' call_tmp[607115](46936 call c_memory_order order[46867]))
      unknown call_tmp[607120] "expr temp" "maybe param" "maybe type" "temp"
      (607123 'move' call_tmp[607120](46937 call atomic_fetch_add call_tmp[607110] value[46857] call_tmp[607115]))
      (46938 call = ret[46923] call_tmp[607120])
      (474351 'end of statement' ret[46923])
      (46949 'on block' 0 tmp[46944])
    }
    unknown call_tmp[607127] "expr temp" "maybe param" "maybe type" "temp"
    (607130 'move' call_tmp[607127](506038 call T _mt[243] this[48131]))
    (506042 'move' ret[506033](506041 'coerce' ret[46923] call_tmp[607127]))
    gotoReturn _end_fetchAdd[506031] _end_fetchAdd[506031]
    (474353 'end of statement' ret[46923])
    label _end_fetchAdd[506031]
    (506035 return ret[506033])
  }
  { scopeless type
    (371372 call T _mt[243] this[48131])
  }
  function AtomicT[48077](?).add[46964](arg _mt[48137]:_MT[238], arg this[48135]:AtomicT[48077](?), arg value[46961] :
  (371413 call T _mt[243] this[48135]), param arg order[46971]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506054] "RVV" "temp"
    function atomic_fetch_add[46990](ref arg obj[46987] :
    unknown call_tmp[607138] "expr temp" "maybe param" "maybe type" "temp", arg operand[46993] :
    (371429 call T _mt[243] this[48135]), arg order[46997]:memory_order[186607], arg _chpl_cname[47005]:string[26] =
    unknown call_tmp[607147] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506048] "RVV" "temp"
      (506050 return ret[506048])
    }
    { scopeless type
      (371435 call T _mt[243] this[48135])
    }
    const tmp[47024] "const" "temp"
    unknown call_tmp[607154] "expr temp" "maybe param" "maybe type" "temp"
    (607157 'move' call_tmp[607154](47021 '_wide_get_locale' this[48135]))
    (47026 'move' tmp[47024](47022 'deref' call_tmp[607154]))
    {
      unknown call_tmp[607161] "expr temp" "maybe param" "maybe type" "temp"
      (607164 'move' call_tmp[607161](371441 call _v _mt[243] this[48135]))
      unknown call_tmp[607166] "expr temp" "maybe param" "maybe type" "temp"
      (607169 'move' call_tmp[607166](47018 call c_memory_order order[46971]))
      (47019 call atomic_fetch_add call_tmp[607161] value[46961] call_tmp[607166])
      (47029 'on block' 0 tmp[47024])
    }
    (506056 return ret[506054])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchSub[47041](arg _mt[48141]:_MT[238], arg this[48139]:AtomicT[48077](?), arg value[47038] :
  (371448 call T _mt[243] this[48139]), param arg order[47048]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506066] "RVV" "temp"
    function atomic_fetch_sub[47083](ref arg obj[47080] :
    unknown call_tmp[607175] "expr temp" "maybe param" "maybe type" "temp", arg operand[47086] :
    (371469 call T _mt[243] this[48139]), arg order[47090]:memory_order[186607], arg _chpl_cname[47098]:string[26] =
    unknown call_tmp[607184] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506060] "RVV" "temp"
      (506062 return ret[506060])
    }
    { scopeless type
      (371475 call T _mt[243] this[48139])
    }
    unknown ret[47104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607193] "expr temp" "maybe param" "maybe type" "temp"
    (607196 'move' call_tmp[607193](371480 call T _mt[243] this[48139]))
    (540623 'default init var' ret[47104] call_tmp[607193])
    (47107 'end of statement')
    const tmp[47125] "const" "temp"
    unknown call_tmp[607198] "expr temp" "maybe param" "maybe type" "temp"
    (607201 'move' call_tmp[607198](47122 '_wide_get_locale' this[48139]))
    (47127 'move' tmp[47125](47123 'deref' call_tmp[607198]))
    {
      unknown call_tmp[607205] "expr temp" "maybe param" "maybe type" "temp"
      (607208 'move' call_tmp[607205](371487 call _v _mt[243] this[48139]))
      unknown call_tmp[607210] "expr temp" "maybe param" "maybe type" "temp"
      (607213 'move' call_tmp[607210](47117 call c_memory_order order[47048]))
      unknown call_tmp[607215] "expr temp" "maybe param" "maybe type" "temp"
      (607218 'move' call_tmp[607215](47118 call atomic_fetch_sub call_tmp[607205] value[47038] call_tmp[607210]))
      (47119 call = ret[47104] call_tmp[607215])
      (474356 'end of statement' ret[47104])
      (47130 'on block' 0 tmp[47125])
    }
    unknown call_tmp[607222] "expr temp" "maybe param" "maybe type" "temp"
    (607225 'move' call_tmp[607222](506071 call T _mt[243] this[48139]))
    (506075 'move' ret[506066](506074 'coerce' ret[47104] call_tmp[607222]))
    gotoReturn _end_fetchSub[506064] _end_fetchSub[506064]
    (474358 'end of statement' ret[47104])
    label _end_fetchSub[506064]
    (506068 return ret[506066])
  }
  { scopeless type
    (371454 call T _mt[243] this[48139])
  }
  function AtomicT[48077](?).sub[47145](arg _mt[48145]:_MT[238], arg this[48143]:AtomicT[48077](?), arg value[47142] :
  (371495 call T _mt[243] this[48143]), param arg order[47152]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506087] "RVV" "temp"
    function atomic_fetch_sub[47171](ref arg obj[47168] :
    unknown call_tmp[607233] "expr temp" "maybe param" "maybe type" "temp", arg operand[47174] :
    (371511 call T _mt[243] this[48143]), arg order[47178]:memory_order[186607], arg _chpl_cname[47186]:string[26] =
    unknown call_tmp[607242] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506081] "RVV" "temp"
      (506083 return ret[506081])
    }
    { scopeless type
      (371517 call T _mt[243] this[48143])
    }
    const tmp[47205] "const" "temp"
    unknown call_tmp[607249] "expr temp" "maybe param" "maybe type" "temp"
    (607252 'move' call_tmp[607249](47202 '_wide_get_locale' this[48143]))
    (47207 'move' tmp[47205](47203 'deref' call_tmp[607249]))
    {
      unknown call_tmp[607256] "expr temp" "maybe param" "maybe type" "temp"
      (607259 'move' call_tmp[607256](371523 call _v _mt[243] this[48143]))
      unknown call_tmp[607261] "expr temp" "maybe param" "maybe type" "temp"
      (607264 'move' call_tmp[607261](47199 call c_memory_order order[47152]))
      (47200 call atomic_fetch_sub call_tmp[607256] value[47142] call_tmp[607261])
      (47210 'on block' 0 tmp[47205])
    }
    (506089 return ret[506087])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchOr[47222](arg _mt[48149]:_MT[238], arg this[48147]:AtomicT[48077](?), arg value[47219] :
  (371530 call T _mt[243] this[48147]), param arg order[47229]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506099] "RVV" "temp"
    unknown call_tmp[607270] "expr temp" "maybe param" "maybe type" "temp"
    (607273 'move' call_tmp[607270](371541 call T _mt[243] this[48147]))
    unknown call_tmp[607275] "expr temp" "maybe param" "maybe type" "temp"
    (607278 'move' call_tmp[607275](47237 call isIntegral call_tmp[607270]))
    unknown call_tmp[607280] "expr temp" "maybe param" "maybe type" "temp"
    (607283 'move' call_tmp[607280](47238 call ! call_tmp[607275]))
    unknown call_tmp[607285] "expr temp" "maybe param" "maybe type" "temp"
    (607288 'move' call_tmp[607285](47261 call _cond_test call_tmp[607280]))
    if call_tmp[607285]
    {
      (47259 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47297](ref arg obj[47294] :
    unknown call_tmp[607292] "expr temp" "maybe param" "maybe type" "temp", arg operand[47300] :
    (371556 call T _mt[243] this[48147]), arg order[47304]:memory_order[186607], arg _chpl_cname[47312]:string[26] =
    unknown call_tmp[607301] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506093] "RVV" "temp"
      (506095 return ret[506093])
    }
    { scopeless type
      (371562 call T _mt[243] this[48147])
    }
    unknown ret[47317] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607310] "expr temp" "maybe param" "maybe type" "temp"
    (607313 'move' call_tmp[607310](371567 call T _mt[243] this[48147]))
    (540625 'default init var' ret[47317] call_tmp[607310])
    (47320 'end of statement')
    const tmp[47338] "const" "temp"
    unknown call_tmp[607315] "expr temp" "maybe param" "maybe type" "temp"
    (607318 'move' call_tmp[607315](47335 '_wide_get_locale' this[48147]))
    (47340 'move' tmp[47338](47336 'deref' call_tmp[607315]))
    {
      unknown call_tmp[607322] "expr temp" "maybe param" "maybe type" "temp"
      (607325 'move' call_tmp[607322](371574 call _v _mt[243] this[48147]))
      unknown call_tmp[607327] "expr temp" "maybe param" "maybe type" "temp"
      (607330 'move' call_tmp[607327](47330 call c_memory_order order[47229]))
      unknown call_tmp[607332] "expr temp" "maybe param" "maybe type" "temp"
      (607335 'move' call_tmp[607332](47331 call atomic_fetch_or call_tmp[607322] value[47219] call_tmp[607327]))
      (47332 call = ret[47317] call_tmp[607332])
      (474362 'end of statement' ret[47317])
      (47343 'on block' 0 tmp[47338])
    }
    unknown call_tmp[607339] "expr temp" "maybe param" "maybe type" "temp"
    (607342 'move' call_tmp[607339](506104 call T _mt[243] this[48147]))
    (506108 'move' ret[506099](506107 'coerce' ret[47317] call_tmp[607339]))
    gotoReturn _end_fetchOr[506097] _end_fetchOr[506097]
    (474364 'end of statement' ret[47317])
    label _end_fetchOr[506097]
    (506101 return ret[506099])
  }
  { scopeless type
    (371536 call T _mt[243] this[48147])
  }
  function AtomicT[48077](?).or[47358](arg _mt[48153]:_MT[238], arg this[48151]:AtomicT[48077](?), arg value[47355] :
  (371582 call T _mt[243] this[48151]), param arg order[47365]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506120] "RVV" "temp"
    unknown call_tmp[607350] "expr temp" "maybe param" "maybe type" "temp"
    (607353 'move' call_tmp[607350](371588 call T _mt[243] this[48151]))
    unknown call_tmp[607355] "expr temp" "maybe param" "maybe type" "temp"
    (607358 'move' call_tmp[607355](47373 call isIntegral call_tmp[607350]))
    unknown call_tmp[607360] "expr temp" "maybe param" "maybe type" "temp"
    (607363 'move' call_tmp[607360](47374 call ! call_tmp[607355]))
    unknown call_tmp[607365] "expr temp" "maybe param" "maybe type" "temp"
    (607368 'move' call_tmp[607365](47399 call _cond_test call_tmp[607360]))
    if call_tmp[607365]
    {
      (47397 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47419](ref arg obj[47416] :
    unknown call_tmp[607372] "expr temp" "maybe param" "maybe type" "temp", arg operand[47422] :
    (371603 call T _mt[243] this[48151]), arg order[47426]:memory_order[186607], arg _chpl_cname[47434]:string[26] =
    unknown call_tmp[607381] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506114] "RVV" "temp"
      (506116 return ret[506114])
    }
    { scopeless type
      (371609 call T _mt[243] this[48151])
    }
    const tmp[47452] "const" "temp"
    unknown call_tmp[607388] "expr temp" "maybe param" "maybe type" "temp"
    (607391 'move' call_tmp[607388](47449 '_wide_get_locale' this[48151]))
    (47454 'move' tmp[47452](47450 'deref' call_tmp[607388]))
    {
      unknown call_tmp[607395] "expr temp" "maybe param" "maybe type" "temp"
      (607398 'move' call_tmp[607395](371615 call _v _mt[243] this[48151]))
      unknown call_tmp[607400] "expr temp" "maybe param" "maybe type" "temp"
      (607403 'move' call_tmp[607400](47446 call c_memory_order order[47365]))
      (47447 call atomic_fetch_or call_tmp[607395] value[47355] call_tmp[607400])
      (47457 'on block' 0 tmp[47452])
    }
    (506122 return ret[506120])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchAnd[47469](arg _mt[48157]:_MT[238], arg this[48155]:AtomicT[48077](?), arg value[47466] :
  (371622 call T _mt[243] this[48155]), param arg order[47476]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506132] "RVV" "temp"
    unknown call_tmp[607409] "expr temp" "maybe param" "maybe type" "temp"
    (607412 'move' call_tmp[607409](371633 call T _mt[243] this[48155]))
    unknown call_tmp[607414] "expr temp" "maybe param" "maybe type" "temp"
    (607417 'move' call_tmp[607414](47484 call isIntegral call_tmp[607409]))
    unknown call_tmp[607419] "expr temp" "maybe param" "maybe type" "temp"
    (607422 'move' call_tmp[607419](47485 call ! call_tmp[607414]))
    unknown call_tmp[607424] "expr temp" "maybe param" "maybe type" "temp"
    (607427 'move' call_tmp[607424](47508 call _cond_test call_tmp[607419]))
    if call_tmp[607424]
    {
      (47506 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47544](ref arg obj[47541] :
    unknown call_tmp[607431] "expr temp" "maybe param" "maybe type" "temp", arg operand[47547] :
    (371648 call T _mt[243] this[48155]), arg order[47551]:memory_order[186607], arg _chpl_cname[47559]:string[26] =
    unknown call_tmp[607440] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506126] "RVV" "temp"
      (506128 return ret[506126])
    }
    { scopeless type
      (371654 call T _mt[243] this[48155])
    }
    unknown ret[47564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607449] "expr temp" "maybe param" "maybe type" "temp"
    (607452 'move' call_tmp[607449](371659 call T _mt[243] this[48155]))
    (540627 'default init var' ret[47564] call_tmp[607449])
    (47567 'end of statement')
    const tmp[47585] "const" "temp"
    unknown call_tmp[607454] "expr temp" "maybe param" "maybe type" "temp"
    (607457 'move' call_tmp[607454](47582 '_wide_get_locale' this[48155]))
    (47587 'move' tmp[47585](47583 'deref' call_tmp[607454]))
    {
      unknown call_tmp[607461] "expr temp" "maybe param" "maybe type" "temp"
      (607464 'move' call_tmp[607461](371666 call _v _mt[243] this[48155]))
      unknown call_tmp[607466] "expr temp" "maybe param" "maybe type" "temp"
      (607469 'move' call_tmp[607466](47577 call c_memory_order order[47476]))
      unknown call_tmp[607471] "expr temp" "maybe param" "maybe type" "temp"
      (607474 'move' call_tmp[607471](47578 call atomic_fetch_and call_tmp[607461] value[47466] call_tmp[607466]))
      (47579 call = ret[47564] call_tmp[607471])
      (474369 'end of statement' ret[47564])
      (47590 'on block' 0 tmp[47585])
    }
    unknown call_tmp[607478] "expr temp" "maybe param" "maybe type" "temp"
    (607481 'move' call_tmp[607478](506137 call T _mt[243] this[48155]))
    (506141 'move' ret[506132](506140 'coerce' ret[47564] call_tmp[607478]))
    gotoReturn _end_fetchAnd[506130] _end_fetchAnd[506130]
    (474371 'end of statement' ret[47564])
    label _end_fetchAnd[506130]
    (506134 return ret[506132])
  }
  { scopeless type
    (371628 call T _mt[243] this[48155])
  }
  function AtomicT[48077](?).and[47605](arg _mt[48161]:_MT[238], arg this[48159]:AtomicT[48077](?), arg value[47602] :
  (371674 call T _mt[243] this[48159]), param arg order[47612]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506153] "RVV" "temp"
    unknown call_tmp[607489] "expr temp" "maybe param" "maybe type" "temp"
    (607492 'move' call_tmp[607489](371680 call T _mt[243] this[48159]))
    unknown call_tmp[607494] "expr temp" "maybe param" "maybe type" "temp"
    (607497 'move' call_tmp[607494](47620 call isIntegral call_tmp[607489]))
    unknown call_tmp[607499] "expr temp" "maybe param" "maybe type" "temp"
    (607502 'move' call_tmp[607499](47621 call ! call_tmp[607494]))
    unknown call_tmp[607504] "expr temp" "maybe param" "maybe type" "temp"
    (607507 'move' call_tmp[607504](47644 call _cond_test call_tmp[607499]))
    if call_tmp[607504]
    {
      (47642 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47664](ref arg obj[47661] :
    unknown call_tmp[607511] "expr temp" "maybe param" "maybe type" "temp", arg operand[47667] :
    (371695 call T _mt[243] this[48159]), arg order[47671]:memory_order[186607], arg _chpl_cname[47679]:string[26] =
    unknown call_tmp[607520] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506147] "RVV" "temp"
      (506149 return ret[506147])
    }
    { scopeless type
      (371701 call T _mt[243] this[48159])
    }
    const tmp[47697] "const" "temp"
    unknown call_tmp[607527] "expr temp" "maybe param" "maybe type" "temp"
    (607530 'move' call_tmp[607527](47694 '_wide_get_locale' this[48159]))
    (47699 'move' tmp[47697](47695 'deref' call_tmp[607527]))
    {
      unknown call_tmp[607534] "expr temp" "maybe param" "maybe type" "temp"
      (607537 'move' call_tmp[607534](371707 call _v _mt[243] this[48159]))
      unknown call_tmp[607539] "expr temp" "maybe param" "maybe type" "temp"
      (607542 'move' call_tmp[607539](47691 call c_memory_order order[47612]))
      (47692 call atomic_fetch_and call_tmp[607534] value[47602] call_tmp[607539])
      (47702 'on block' 0 tmp[47697])
    }
    (506155 return ret[506153])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchXor[47714](arg _mt[48165]:_MT[238], arg this[48163]:AtomicT[48077](?), arg value[47711] :
  (371714 call T _mt[243] this[48163]), param arg order[47721]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506165] "RVV" "temp"
    unknown call_tmp[607548] "expr temp" "maybe param" "maybe type" "temp"
    (607551 'move' call_tmp[607548](371725 call T _mt[243] this[48163]))
    unknown call_tmp[607553] "expr temp" "maybe param" "maybe type" "temp"
    (607556 'move' call_tmp[607553](47729 call isIntegral call_tmp[607548]))
    unknown call_tmp[607558] "expr temp" "maybe param" "maybe type" "temp"
    (607561 'move' call_tmp[607558](47730 call ! call_tmp[607553]))
    unknown call_tmp[607563] "expr temp" "maybe param" "maybe type" "temp"
    (607566 'move' call_tmp[607563](47753 call _cond_test call_tmp[607558]))
    if call_tmp[607563]
    {
      (47751 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47789](ref arg obj[47786] :
    unknown call_tmp[607570] "expr temp" "maybe param" "maybe type" "temp", arg operand[47792] :
    (371740 call T _mt[243] this[48163]), arg order[47796]:memory_order[186607], arg _chpl_cname[47804]:string[26] =
    unknown call_tmp[607579] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506159] "RVV" "temp"
      (506161 return ret[506159])
    }
    { scopeless type
      (371746 call T _mt[243] this[48163])
    }
    unknown ret[47809] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607588] "expr temp" "maybe param" "maybe type" "temp"
    (607591 'move' call_tmp[607588](371751 call T _mt[243] this[48163]))
    (540629 'default init var' ret[47809] call_tmp[607588])
    (47812 'end of statement')
    const tmp[47830] "const" "temp"
    unknown call_tmp[607593] "expr temp" "maybe param" "maybe type" "temp"
    (607596 'move' call_tmp[607593](47827 '_wide_get_locale' this[48163]))
    (47832 'move' tmp[47830](47828 'deref' call_tmp[607593]))
    {
      unknown call_tmp[607600] "expr temp" "maybe param" "maybe type" "temp"
      (607603 'move' call_tmp[607600](371758 call _v _mt[243] this[48163]))
      unknown call_tmp[607605] "expr temp" "maybe param" "maybe type" "temp"
      (607608 'move' call_tmp[607605](47822 call c_memory_order order[47721]))
      unknown call_tmp[607610] "expr temp" "maybe param" "maybe type" "temp"
      (607613 'move' call_tmp[607610](47823 call atomic_fetch_xor call_tmp[607600] value[47711] call_tmp[607605]))
      (47824 call = ret[47809] call_tmp[607610])
      (474376 'end of statement' ret[47809])
      (47835 'on block' 0 tmp[47830])
    }
    unknown call_tmp[607617] "expr temp" "maybe param" "maybe type" "temp"
    (607620 'move' call_tmp[607617](506170 call T _mt[243] this[48163]))
    (506174 'move' ret[506165](506173 'coerce' ret[47809] call_tmp[607617]))
    gotoReturn _end_fetchXor[506163] _end_fetchXor[506163]
    (474378 'end of statement' ret[47809])
    label _end_fetchXor[506163]
    (506167 return ret[506165])
  }
  { scopeless type
    (371720 call T _mt[243] this[48163])
  }
  function AtomicT[48077](?).xor[47850](arg _mt[48169]:_MT[238], arg this[48167]:AtomicT[48077](?), arg value[47847] :
  (371766 call T _mt[243] this[48167]), param arg order[47857]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506186] "RVV" "temp"
    unknown call_tmp[607628] "expr temp" "maybe param" "maybe type" "temp"
    (607631 'move' call_tmp[607628](371772 call T _mt[243] this[48167]))
    unknown call_tmp[607633] "expr temp" "maybe param" "maybe type" "temp"
    (607636 'move' call_tmp[607633](47865 call isIntegral call_tmp[607628]))
    unknown call_tmp[607638] "expr temp" "maybe param" "maybe type" "temp"
    (607641 'move' call_tmp[607638](47866 call ! call_tmp[607633]))
    unknown call_tmp[607643] "expr temp" "maybe param" "maybe type" "temp"
    (607646 'move' call_tmp[607643](47889 call _cond_test call_tmp[607638]))
    if call_tmp[607643]
    {
      (47887 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47909](ref arg obj[47906] :
    unknown call_tmp[607650] "expr temp" "maybe param" "maybe type" "temp", arg operand[47912] :
    (371787 call T _mt[243] this[48167]), arg order[47916]:memory_order[186607], arg _chpl_cname[47924]:string[26] =
    unknown call_tmp[607659] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506180] "RVV" "temp"
      (506182 return ret[506180])
    }
    { scopeless type
      (371793 call T _mt[243] this[48167])
    }
    const tmp[47942] "const" "temp"
    unknown call_tmp[607666] "expr temp" "maybe param" "maybe type" "temp"
    (607669 'move' call_tmp[607666](47939 '_wide_get_locale' this[48167]))
    (47944 'move' tmp[47942](47940 'deref' call_tmp[607666]))
    {
      unknown call_tmp[607673] "expr temp" "maybe param" "maybe type" "temp"
      (607676 'move' call_tmp[607673](371799 call _v _mt[243] this[48167]))
      unknown call_tmp[607678] "expr temp" "maybe param" "maybe type" "temp"
      (607681 'move' call_tmp[607678](47936 call c_memory_order order[47857]))
      (47937 call atomic_fetch_xor call_tmp[607673] value[47847] call_tmp[607678])
      (47947 'on block' 0 tmp[47942])
    }
    (506188 return ret[506186])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).waitFor[47959](arg _mt[48173]:_MT[238], const arg this[48171]:AtomicT[48077](?), arg value[47956] :
  (371806 call T _mt[243] this[48171]), param arg order[47966]:memoryOrder[186966] =
  seqCst[186956]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506192] "RVV" "temp"
    const tmp[48048] "const" "temp"
    unknown call_tmp[607685] "expr temp" "maybe param" "maybe type" "temp"
    (607688 'move' call_tmp[607685](48045 '_wide_get_locale' this[48171]))
    (48050 'move' tmp[48048](48046 'deref' call_tmp[607685]))
    {
      {
        {
          unknown tmp[47991] "temp"
          unknown call_tmp[607692] "expr temp" "maybe param" "maybe type" "temp"
          (607695 'move' call_tmp[607692](48026 call(48023 call (partial) read _mt[243] this[48171])(order = relaxed[186964])))
          unknown call_tmp[607697] "expr temp" "maybe param" "maybe type" "temp"
          (607700 'move' call_tmp[607697](48021 call != call_tmp[607692] value[47956]))
          (48033 'move' tmp[47991](48019 call _cond_test call_tmp[607697]))
          WhileDo[47996]
          {
            {
              (47988 call chpl_task_yield)
            }
            label _continueLabel[47994]
            unknown call_tmp[607704] "expr temp" "maybe param" "maybe type" "temp"
            (607707 'move' call_tmp[607704](48007 call(48004 call (partial) read _mt[243] this[48171])(order = relaxed[186964])))
            unknown call_tmp[607709] "expr temp" "maybe param" "maybe type" "temp"
            (607712 'move' call_tmp[607709](48002 call != call_tmp[607704] value[47956]))
            (48014 'move' tmp[47991](48000 call _cond_test call_tmp[607709]))
            tmp[47991]
          }
          label _breakLabel[47995]
        }
        unknown call_tmp[607714] "expr temp" "maybe param" "maybe type" "temp"
        (607717 'move' call_tmp[607714](48041 call c_memory_order order[47966]))
        (48043 call chpl_atomic_thread_fence call_tmp[607714])
      }
      (48053 'on block' 0 tmp[48048])
    }
    (506194 return ret[506192])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).writeThis[48064](arg _mt[48177]:_MT[238], const arg this[48175]:AtomicT[48077](?), arg x[48062]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607721] "expr temp" "maybe param" "maybe type" "temp"
    (607724 'move' call_tmp[607721](48069 call(371816 call (partial) read _mt[243] this[48175])))
    (48070 call <~> x[48062] call_tmp[607721])
    (506196 return _void[55])
  }
  type AtomicT[48077](?) unknown T[45946] "no doc" "type variable" unknown _v[45953] "no doc"(45952 call externT T[45946])
  function =[48186](ref arg a[48183]:AtomicBool[45874], const  ref arg b[48189]:AtomicBool[45874]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607730] "expr temp" "maybe param" "maybe type" "temp"
    (607733 'move' call_tmp[607730](48201 call(48197 call (partial) read _mt[243] b[48189])))
    (48203 call(48193 call (partial) write _mt[243] a[48183]) call_tmp[607730])
    (506198 return _void[55])
  }
  function =[48214](ref arg a[48211]:AtomicBool[45874], arg b[48216]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48239 call compilerError "Cannot directly assign atomic variables")
    (506200 return _void[55])
  }
  function =[48250](ref arg a[48247]:AtomicT[48077](?), const  ref arg b[48253]:AtomicT[48077](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607739] "expr temp" "maybe param" "maybe type" "temp"
    (607742 'move' call_tmp[607739](48265 call(48261 call (partial) read _mt[243] b[48253])))
    (48267 call(48257 call (partial) write _mt[243] a[48247]) call_tmp[607739])
    (506202 return _void[55])
  }
  function =[48278](ref arg a[48275]:AtomicT[48077](?), arg b[48280]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48285 call compilerError "Cannot directly assign atomic variables")
    (506204 return _void[55])
  }
  function +[48296](arg a[48293]:AtomicT[48077](?), arg b[48298]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506208] "RVV" "temp"
    (48319 call compilerError "Cannot directly add atomic variables")
    (474389 'end of statement')
    (506213 'move' ret[506208](506212 'deref' a[48293]))
    (506210 return ret[506208])
  }
  function -[48333](arg a[48330]:AtomicT[48077](?), arg b[48335]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506217] "RVV" "temp"
    (48356 call compilerError "Cannot directly subtract atomic variables")
    (474391 'end of statement')
    (506222 'move' ret[506217](506221 'deref' a[48330]))
    (506219 return ret[506217])
  }
  function *[48370](arg a[48367]:AtomicT[48077](?), arg b[48372]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506226] "RVV" "temp"
    (48393 call compilerError "Cannot directly multiply atomic variables")
    (474393 'end of statement')
    (506231 'move' ret[506226](506230 'deref' a[48367]))
    (506228 return ret[506226])
  }
  function /[48407](arg a[48404]:AtomicT[48077](?), arg b[48409]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506235] "RVV" "temp"
    (48430 call compilerError "Cannot directly divide atomic variables")
    (474395 'end of statement')
    (506240 'move' ret[506235](506239 'deref' a[48404]))
    (506237 return ret[506235])
  }
  function %[48444](arg a[48441]:AtomicT[48077](?), arg b[48446]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506244] "RVV" "temp"
    (48451 call compilerError "Cannot directly divide atomic variables")
    (474397 'end of statement')
    (506249 'move' ret[506244](506248 'deref' a[48441]))
    (506246 return ret[506244])
  }
  (355035 'used modules list'(43963 'use' ChapelBase[307])(43967 'use' MemConsistency[186602]))
}