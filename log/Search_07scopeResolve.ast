AST dump for Search after pass scopeResolve.
Module use list: ChapelStandard Sort 

{
  function search[291351](arg Data[291348] :
  (291346 call chpl__buildArrayRuntimeType unknown Dom[291343]), arg val[291353]:_any[178](?), arg comparator[291358] :
  unknown rec[291355] =
  defaultComparator[268065], arg lo[291366] =
  (291363 call . Dom[291343] c"alignedLow"), arg hi[291373] =
  (291370 call . Dom[291343] c"alignedHigh"), arg sorted[291377] =
  0) : _unknown[51]
  {
    if(291401 call _cond_test sorted[291377])
    {
      (291389 return(291388 call binarySearch Data[291348] val[291353] comparator[291358] lo[291366] hi[291373]))
    }
    {
      (291399 return(291398 call linearSearch Data[291348] val[291353] comparator[291358] lo[291366] hi[291373]))
    }
  }
  function search[291420](arg Data[291417] :
  (291415 call chpl__buildArrayRuntimeType unknown Dom[291412]), arg val[291422]:_any[178](?), arg comparator[291427] :
  unknown rec[291424] =
  defaultComparator[268065], arg lo[291435] =
  (291432 call . Dom[291412] c"alignedLow"), arg hi[291442] =
  (291439 call . Dom[291412] c"alignedHigh"), arg sorted[291446] =
  0) : _unknown[51] "no doc" "no return value for void"
  {
    (291475 call compilerError "search() requires 1-D array")
  }
  where {
    (291454 call !=(291450 call . Dom[291412] c"rank") 1)
  }
  function linearSearch[291491](arg Data[291488] :
  (291486 call chpl__buildArrayRuntimeType unknown Dom[291483]), arg val[291493]:_any[178](?), arg comparator[291498] :
  unknown rec[291495] =
  defaultComparator[268065], arg lo[291506] =
  (291503 call . Dom[291483] c"alignedLow"), arg hi[291513] =
  (291510 call . Dom[291483] c"alignedHigh")) : _unknown[51]
  {
    (291523 call chpl_check_comparator comparator[291498](291520 call . Data[291488] c"eltType"))
    const stride[291541] "const"(291538 IfExpr (291527 call . Dom[291483] c"stridable") then
    { scopeless
      (291536 call abs(291532 call . Dom[291483] c"stride"))
    } else
    { scopeless
      1
    } )
    (291544 'end of statement')
    if(291696 call _cond_test(291546 call . Dom[291483] c"stridable"))
    {
      {
        unknown _indexOfInterest[291583] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291584] "expr temp" "temp"
        (291593 'move' _iterator[291584](291591 call _getIterator(291602 call chpl_direct_range_iter lo[291506] hi[291513] stride[291541])))
        Defer
        {
          {
            (291618 call _freeIterator _iterator[291584])
          }
        }
        { scopeless type
          (291607 'move' _indexOfInterest[291583](291604 call iteratorIndex _iterator[291584]))
        }
        ForLoop[291585]
        {
          unknown i[291611] "index var" "insert auto destroy"
          (291613 'move' i[291611] _indexOfInterest[291583])
          {
            if(291577 call _cond_test(291568 call ==(291566 call chpl_compare(291561 call Data[291488] i[291611]) val[291493](comparator = comparator[291498])) 0))
            {
              (291575 return(291573 call _build_tuple 1 i[291611]))
            }
          }
          label _continueLabel[291588]
          _indexOfInterest[291583]
          _iterator[291584]
        }
        label _breakLabel[291589]
      }
    }
    {
      {
        unknown _indexOfInterest[291657] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291658] "expr temp" "temp"
        (291667 'move' _iterator[291658](291665 call _getIterator(291672 call chpl_direct_range_iter lo[291506] hi[291513] 1)))
        Defer
        {
          {
            (291688 call _freeIterator _iterator[291658])
          }
        }
        { scopeless type
          (291677 'move' _indexOfInterest[291657](291674 call iteratorIndex _iterator[291658]))
        }
        ForLoop[291659]
        {
          unknown i[291681] "index var" "insert auto destroy"
          (291683 'move' i[291681] _indexOfInterest[291657])
          {
            if(291651 call _cond_test(291642 call ==(291640 call chpl_compare(291635 call Data[291488] i[291681]) val[291493](comparator = comparator[291498])) 0))
            {
              (291649 return(291647 call _build_tuple 1 i[291681]))
            }
          }
          label _continueLabel[291662]
          _indexOfInterest[291657]
          _iterator[291658]
        }
        label _breakLabel[291663]
      }
    }
    (291708 return(291706 call _build_tuple 0(291703 call + hi[291513] stride[291541])))
  }
  function linearSearch[291722](arg Data[291719] :
  (291717 call chpl__buildArrayRuntimeType unknown Dom[291714]), arg val[291724]:_any[178](?), arg comparator[291729] :
  unknown rec[291726] =
  defaultComparator[268065], arg lo[291737] =
  (291734 call . Dom[291714] c"alignedLow"), arg hi[291744] =
  (291741 call . Dom[291714] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (291773 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (291752 call !=(291748 call . Dom[291714] c"rank") 1)
  }
  function binarySearch[291789](arg Data[291786] :
  (291784 call chpl__buildArrayRuntimeType unknown Dom[291781]), arg val[291791]:_any[178](?), arg comparator[291796] :
  unknown rec[291793] =
  defaultComparator[268065], in arg lo[291804] =
  (291801 call . Dom[291781] c"alignedLow"), in arg hi[291811] =
  (291808 call . Dom[291781] c"alignedHigh")) : _unknown[51]
  {
    (291821 call chpl_check_comparator comparator[291796](291818 call . Data[291786] c"eltType"))
    const stride[291839] "const"(291836 IfExpr (291825 call . Dom[291781] c"stridable") then
    { scopeless
      (291834 call abs(291830 call . Dom[291781] c"stride"))
    } else
    { scopeless
      1
    } )
    (291842 'end of statement')
    {
      unknown tmp[291964] "temp"
      (291988 'move' tmp[291964](291983 call _cond_test(291985 call <= lo[291804] hi[291811])))
      WhileDo[291969]
      {
        {
          const size[291854] "const"(291852 call /(291849 call - hi[291811] lo[291804]) stride[291839])
          const mid[291898] "const"(291895 IfExpr (291859 call == hi[291811] lo[291804]) then
          { scopeless
            hi[291811]
          } else
          { scopeless(291892 IfExpr (291864 call % size[291854] 2) then
            { scopeless
              (291877 call + lo[291804](291875 call *(291872 call /(291869 call - size[291854] 1) 2) stride[291839]))
            } else
            { scopeless
              (291890 call + lo[291804](291888 call *(291885 call -(291882 call / size[291854] 2) 1) stride[291839]))
            } )
          } )
          (291901 'end of statement')
          if(291958 call _cond_test(291914 call ==(291912 call chpl_compare(291907 call Data[291786] mid[291898]) val[291791](comparator = comparator[291796])) 0))
          {
            (291921 return(291919 call _build_tuple 1 mid[291898]))
          }
          {
            if(291952 call _cond_test(291934 call >(291932 call chpl_compare val[291791](291929 call Data[291786] mid[291898])(comparator = comparator[291796])) 0))
            {
              (291941 call = lo[291804](291939 call + mid[291898] stride[291839]))
            }
            {
              (291949 call = hi[291811](291947 call - mid[291898] stride[291839]))
            }
          }
        }
        label _continueLabel[291967]
        (291978 'move' tmp[291964](291973 call _cond_test(291975 call <= lo[291804] hi[291811])))
        tmp[291964]
      }
      label _breakLabel[291968]
    }
    (291996 return(291994 call _build_tuple 0 lo[291804]))
  }
  function binarySearch[292010](arg Data[292007] :
  (292005 call chpl__buildArrayRuntimeType unknown Dom[292002]), arg val[292012]:_any[178](?), arg comparator[292017] :
  unknown rec[292014] =
  defaultComparator[268065], in arg lo[292025] =
  (292022 call . Dom[292002] c"alignedLow"), in arg hi[292032] =
  (292029 call . Dom[292002] c"alignedHigh")) : _unknown[51] "no doc"
  {
    (292048 call chpl_check_comparator comparator[292017](292045 call . Data[292007] c"eltType"))
    {
      unknown tmp[292131] "temp"
      (292155 'move' tmp[292131](292150 call _cond_test(292152 call <= lo[292025] hi[292032])))
      WhileDo[292136]
      {
        {
          const mid[292065] "const"(292063 call +(292060 call /(292057 call - hi[292032] lo[292025]) 2) lo[292025])
          (292068 'end of statement')
          if(292125 call _cond_test(292081 call ==(292079 call chpl_compare(292074 call Data[292007] mid[292065]) val[292012](comparator = comparator[292017])) 0))
          {
            (292088 return(292086 call _build_tuple 1 mid[292065]))
          }
          {
            if(292119 call _cond_test(292101 call >(292099 call chpl_compare val[292012](292096 call Data[292007] mid[292065])(comparator = comparator[292017])) 0))
            {
              (292108 call = lo[292025](292106 call + mid[292065] 1))
            }
            {
              (292116 call = hi[292032](292114 call - mid[292065] 1))
            }
          }
        }
        label _continueLabel[292134]
        (292145 'move' tmp[292131](292140 call _cond_test(292142 call <= lo[292025] hi[292032])))
        tmp[292131]
      }
      label _breakLabel[292135]
    }
    (292163 return(292161 call _build_tuple 0 lo[292025]))
  }
  where {
    (292039 call !(292036 call . Dom[292002] c"stridable"))
  }
  function binarySearch[292178](arg Data[292175] :
  (292173 call chpl__buildArrayRuntimeType unknown Dom[292170]), arg val[292180]:_any[178](?), arg comparator[292185] :
  unknown rec[292182] =
  defaultComparator[268065], in arg lo[292193] =
  (292190 call . Dom[292170] c"alignedLow"), in arg hi[292200] =
  (292197 call . Dom[292170] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (292229 call compilerError "binarySearch() requires 1-D array")
  }
  where {
    (292208 call !=(292204 call . Dom[292170] c"rank") 1)
  }
  (355514 'used modules list'(353163 'use' ChapelStandard[20267])(291335 'use' Sort[268056] 'only' defaultComparator, DefaultComparator, reverseComparator, ReverseComparator)(291339 'use' Sort[268056]))
}