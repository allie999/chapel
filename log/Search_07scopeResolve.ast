AST dump for Search after pass scopeResolve.
Module use list: ChapelStandard Sort 

{
  function search[291167](arg Data[291164] :
  (291162 call chpl__buildArrayRuntimeType unknown Dom[291159]), arg val[291169]:_any[178](?), arg comparator[291174] :
  unknown rec[291171] =
  defaultComparator[267889], arg lo[291182] =
  (291179 call . Dom[291159] c"alignedLow"), arg hi[291189] =
  (291186 call . Dom[291159] c"alignedHigh"), arg sorted[291193] =
  0) : _unknown[51]
  {
    if(291217 call _cond_test sorted[291193])
    {
      (291205 return(291204 call binarySearch Data[291164] val[291169] comparator[291174] lo[291182] hi[291189]))
    }
    {
      (291215 return(291214 call linearSearch Data[291164] val[291169] comparator[291174] lo[291182] hi[291189]))
    }
  }
  function search[291236](arg Data[291233] :
  (291231 call chpl__buildArrayRuntimeType unknown Dom[291228]), arg val[291238]:_any[178](?), arg comparator[291243] :
  unknown rec[291240] =
  defaultComparator[267889], arg lo[291251] =
  (291248 call . Dom[291228] c"alignedLow"), arg hi[291258] =
  (291255 call . Dom[291228] c"alignedHigh"), arg sorted[291262] =
  0) : _unknown[51] "no doc" "no return value for void"
  {
    (291291 call compilerError "search() requires 1-D array")
  }
  where {
    (291270 call !=(291266 call . Dom[291228] c"rank") 1)
  }
  function linearSearch[291307](arg Data[291304] :
  (291302 call chpl__buildArrayRuntimeType unknown Dom[291299]), arg val[291309]:_any[178](?), arg comparator[291314] :
  unknown rec[291311] =
  defaultComparator[267889], arg lo[291322] =
  (291319 call . Dom[291299] c"alignedLow"), arg hi[291329] =
  (291326 call . Dom[291299] c"alignedHigh")) : _unknown[51]
  {
    (291339 call chpl_check_comparator comparator[291314](291336 call . Data[291304] c"eltType"))
    const stride[291357] "const"(291354 IfExpr (291343 call . Dom[291299] c"stridable") then
    { scopeless
      (291352 call abs(291348 call . Dom[291299] c"stride"))
    } else
    { scopeless
      1
    } )
    (291360 'end of statement')
    if(291512 call _cond_test(291362 call . Dom[291299] c"stridable"))
    {
      {
        unknown _indexOfInterest[291399] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291400] "expr temp" "temp"
        (291409 'move' _iterator[291400](291407 call _getIterator(291418 call chpl_direct_range_iter lo[291322] hi[291329] stride[291357])))
        Defer
        {
          {
            (291434 call _freeIterator _iterator[291400])
          }
        }
        { scopeless type
          (291423 'move' _indexOfInterest[291399](291420 call iteratorIndex _iterator[291400]))
        }
        ForLoop[291401]
        {
          unknown i[291427] "index var" "insert auto destroy"
          (291429 'move' i[291427] _indexOfInterest[291399])
          {
            if(291393 call _cond_test(291384 call ==(291382 call chpl_compare(291377 call Data[291304] i[291427]) val[291309](comparator = comparator[291314])) 0))
            {
              (291391 return(291389 call _build_tuple 1 i[291427]))
            }
          }
          label _continueLabel[291404]
          _indexOfInterest[291399]
          _iterator[291400]
        }
        label _breakLabel[291405]
      }
    }
    {
      {
        unknown _indexOfInterest[291473] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291474] "expr temp" "temp"
        (291483 'move' _iterator[291474](291481 call _getIterator(291488 call chpl_direct_range_iter lo[291322] hi[291329] 1)))
        Defer
        {
          {
            (291504 call _freeIterator _iterator[291474])
          }
        }
        { scopeless type
          (291493 'move' _indexOfInterest[291473](291490 call iteratorIndex _iterator[291474]))
        }
        ForLoop[291475]
        {
          unknown i[291497] "index var" "insert auto destroy"
          (291499 'move' i[291497] _indexOfInterest[291473])
          {
            if(291467 call _cond_test(291458 call ==(291456 call chpl_compare(291451 call Data[291304] i[291497]) val[291309](comparator = comparator[291314])) 0))
            {
              (291465 return(291463 call _build_tuple 1 i[291497]))
            }
          }
          label _continueLabel[291478]
          _indexOfInterest[291473]
          _iterator[291474]
        }
        label _breakLabel[291479]
      }
    }
    (291524 return(291522 call _build_tuple 0(291519 call + hi[291329] stride[291357])))
  }
  function linearSearch[291538](arg Data[291535] :
  (291533 call chpl__buildArrayRuntimeType unknown Dom[291530]), arg val[291540]:_any[178](?), arg comparator[291545] :
  unknown rec[291542] =
  defaultComparator[267889], arg lo[291553] =
  (291550 call . Dom[291530] c"alignedLow"), arg hi[291560] =
  (291557 call . Dom[291530] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (291589 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (291568 call !=(291564 call . Dom[291530] c"rank") 1)
  }
  function binarySearch[291605](arg Data[291602] :
  (291600 call chpl__buildArrayRuntimeType unknown Dom[291597]), arg val[291607]:_any[178](?), arg comparator[291612] :
  unknown rec[291609] =
  defaultComparator[267889], in arg lo[291620] =
  (291617 call . Dom[291597] c"alignedLow"), in arg hi[291627] =
  (291624 call . Dom[291597] c"alignedHigh")) : _unknown[51]
  {
    (291637 call chpl_check_comparator comparator[291612](291634 call . Data[291602] c"eltType"))
    const stride[291655] "const"(291652 IfExpr (291641 call . Dom[291597] c"stridable") then
    { scopeless
      (291650 call abs(291646 call . Dom[291597] c"stride"))
    } else
    { scopeless
      1
    } )
    (291658 'end of statement')
    {
      unknown tmp[291780] "temp"
      (291804 'move' tmp[291780](291799 call _cond_test(291801 call <= lo[291620] hi[291627])))
      WhileDo[291785]
      {
        {
          const size[291670] "const"(291668 call /(291665 call - hi[291627] lo[291620]) stride[291655])
          const mid[291714] "const"(291711 IfExpr (291675 call == hi[291627] lo[291620]) then
          { scopeless
            hi[291627]
          } else
          { scopeless(291708 IfExpr (291680 call % size[291670] 2) then
            { scopeless
              (291693 call + lo[291620](291691 call *(291688 call /(291685 call - size[291670] 1) 2) stride[291655]))
            } else
            { scopeless
              (291706 call + lo[291620](291704 call *(291701 call -(291698 call / size[291670] 2) 1) stride[291655]))
            } )
          } )
          (291717 'end of statement')
          if(291774 call _cond_test(291730 call ==(291728 call chpl_compare(291723 call Data[291602] mid[291714]) val[291607](comparator = comparator[291612])) 0))
          {
            (291737 return(291735 call _build_tuple 1 mid[291714]))
          }
          {
            if(291768 call _cond_test(291750 call >(291748 call chpl_compare val[291607](291745 call Data[291602] mid[291714])(comparator = comparator[291612])) 0))
            {
              (291757 call = lo[291620](291755 call + mid[291714] stride[291655]))
            }
            {
              (291765 call = hi[291627](291763 call - mid[291714] stride[291655]))
            }
          }
        }
        label _continueLabel[291783]
        (291794 'move' tmp[291780](291789 call _cond_test(291791 call <= lo[291620] hi[291627])))
        tmp[291780]
      }
      label _breakLabel[291784]
    }
    (291812 return(291810 call _build_tuple 0 lo[291620]))
  }
  function binarySearch[291826](arg Data[291823] :
  (291821 call chpl__buildArrayRuntimeType unknown Dom[291818]), arg val[291828]:_any[178](?), arg comparator[291833] :
  unknown rec[291830] =
  defaultComparator[267889], in arg lo[291841] =
  (291838 call . Dom[291818] c"alignedLow"), in arg hi[291848] =
  (291845 call . Dom[291818] c"alignedHigh")) : _unknown[51] "no doc"
  {
    (291864 call chpl_check_comparator comparator[291833](291861 call . Data[291823] c"eltType"))
    {
      unknown tmp[291947] "temp"
      (291971 'move' tmp[291947](291966 call _cond_test(291968 call <= lo[291841] hi[291848])))
      WhileDo[291952]
      {
        {
          const mid[291881] "const"(291879 call +(291876 call /(291873 call - hi[291848] lo[291841]) 2) lo[291841])
          (291884 'end of statement')
          if(291941 call _cond_test(291897 call ==(291895 call chpl_compare(291890 call Data[291823] mid[291881]) val[291828](comparator = comparator[291833])) 0))
          {
            (291904 return(291902 call _build_tuple 1 mid[291881]))
          }
          {
            if(291935 call _cond_test(291917 call >(291915 call chpl_compare val[291828](291912 call Data[291823] mid[291881])(comparator = comparator[291833])) 0))
            {
              (291924 call = lo[291841](291922 call + mid[291881] 1))
            }
            {
              (291932 call = hi[291848](291930 call - mid[291881] 1))
            }
          }
        }
        label _continueLabel[291950]
        (291961 'move' tmp[291947](291956 call _cond_test(291958 call <= lo[291841] hi[291848])))
        tmp[291947]
      }
      label _breakLabel[291951]
    }
    (291979 return(291977 call _build_tuple 0 lo[291841]))
  }
  where {
    (291855 call !(291852 call . Dom[291818] c"stridable"))
  }
  function binarySearch[291994](arg Data[291991] :
  (291989 call chpl__buildArrayRuntimeType unknown Dom[291986]), arg val[291996]:_any[178](?), arg comparator[292001] :
  unknown rec[291998] =
  defaultComparator[267889], in arg lo[292009] =
  (292006 call . Dom[291986] c"alignedLow"), in arg hi[292016] =
  (292013 call . Dom[291986] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (292045 call compilerError "binarySearch() requires 1-D array")
  }
  where {
    (292024 call !=(292020 call . Dom[291986] c"rank") 1)
  }
  (355315 'used modules list'(352966 'use' ChapelStandard[20264])(291151 'use' Sort[267880] 'only' defaultComparator, DefaultComparator, reverseComparator, ReverseComparator)(291155 'use' Sort[267880]))
}