AST dump for Search after pass scopeResolve.
Module use list: ChapelStandard Sort 

{
  function search[291255](arg Data[291252] :
  (291250 call chpl__buildArrayRuntimeType unknown Dom[291247]), arg val[291257]:_any[178](?), arg comparator[291262] :
  unknown rec[291259] =
  defaultComparator[267977], arg lo[291270] =
  (291267 call . Dom[291247] c"alignedLow"), arg hi[291277] =
  (291274 call . Dom[291247] c"alignedHigh"), arg sorted[291281] =
  0) : _unknown[51]
  {
    if(291305 call _cond_test sorted[291281])
    {
      (291293 return(291292 call binarySearch Data[291252] val[291257] comparator[291262] lo[291270] hi[291277]))
    }
    {
      (291303 return(291302 call linearSearch Data[291252] val[291257] comparator[291262] lo[291270] hi[291277]))
    }
  }
  function search[291324](arg Data[291321] :
  (291319 call chpl__buildArrayRuntimeType unknown Dom[291316]), arg val[291326]:_any[178](?), arg comparator[291331] :
  unknown rec[291328] =
  defaultComparator[267977], arg lo[291339] =
  (291336 call . Dom[291316] c"alignedLow"), arg hi[291346] =
  (291343 call . Dom[291316] c"alignedHigh"), arg sorted[291350] =
  0) : _unknown[51] "no doc" "no return value for void"
  {
    (291379 call compilerError "search() requires 1-D array")
  }
  where {
    (291358 call !=(291354 call . Dom[291316] c"rank") 1)
  }
  function linearSearch[291395](arg Data[291392] :
  (291390 call chpl__buildArrayRuntimeType unknown Dom[291387]), arg val[291397]:_any[178](?), arg comparator[291402] :
  unknown rec[291399] =
  defaultComparator[267977], arg lo[291410] =
  (291407 call . Dom[291387] c"alignedLow"), arg hi[291417] =
  (291414 call . Dom[291387] c"alignedHigh")) : _unknown[51]
  {
    (291427 call chpl_check_comparator comparator[291402](291424 call . Data[291392] c"eltType"))
    const stride[291445] "const"(291442 IfExpr (291431 call . Dom[291387] c"stridable") then
    { scopeless
      (291440 call abs(291436 call . Dom[291387] c"stride"))
    } else
    { scopeless
      1
    } )
    (291448 'end of statement')
    if(291600 call _cond_test(291450 call . Dom[291387] c"stridable"))
    {
      {
        unknown _indexOfInterest[291487] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291488] "expr temp" "temp"
        (291497 'move' _iterator[291488](291495 call _getIterator(291506 call chpl_direct_range_iter lo[291410] hi[291417] stride[291445])))
        Defer
        {
          {
            (291522 call _freeIterator _iterator[291488])
          }
        }
        { scopeless type
          (291511 'move' _indexOfInterest[291487](291508 call iteratorIndex _iterator[291488]))
        }
        ForLoop[291489]
        {
          unknown i[291515] "index var" "insert auto destroy"
          (291517 'move' i[291515] _indexOfInterest[291487])
          {
            if(291481 call _cond_test(291472 call ==(291470 call chpl_compare(291465 call Data[291392] i[291515]) val[291397](comparator = comparator[291402])) 0))
            {
              (291479 return(291477 call _build_tuple 1 i[291515]))
            }
          }
          label _continueLabel[291492]
          _indexOfInterest[291487]
          _iterator[291488]
        }
        label _breakLabel[291493]
      }
    }
    {
      {
        unknown _indexOfInterest[291561] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291562] "expr temp" "temp"
        (291571 'move' _iterator[291562](291569 call _getIterator(291576 call chpl_direct_range_iter lo[291410] hi[291417] 1)))
        Defer
        {
          {
            (291592 call _freeIterator _iterator[291562])
          }
        }
        { scopeless type
          (291581 'move' _indexOfInterest[291561](291578 call iteratorIndex _iterator[291562]))
        }
        ForLoop[291563]
        {
          unknown i[291585] "index var" "insert auto destroy"
          (291587 'move' i[291585] _indexOfInterest[291561])
          {
            if(291555 call _cond_test(291546 call ==(291544 call chpl_compare(291539 call Data[291392] i[291585]) val[291397](comparator = comparator[291402])) 0))
            {
              (291553 return(291551 call _build_tuple 1 i[291585]))
            }
          }
          label _continueLabel[291566]
          _indexOfInterest[291561]
          _iterator[291562]
        }
        label _breakLabel[291567]
      }
    }
    (291612 return(291610 call _build_tuple 0(291607 call + hi[291417] stride[291445])))
  }
  function linearSearch[291626](arg Data[291623] :
  (291621 call chpl__buildArrayRuntimeType unknown Dom[291618]), arg val[291628]:_any[178](?), arg comparator[291633] :
  unknown rec[291630] =
  defaultComparator[267977], arg lo[291641] =
  (291638 call . Dom[291618] c"alignedLow"), arg hi[291648] =
  (291645 call . Dom[291618] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (291677 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (291656 call !=(291652 call . Dom[291618] c"rank") 1)
  }
  function binarySearch[291693](arg Data[291690] :
  (291688 call chpl__buildArrayRuntimeType unknown Dom[291685]), arg val[291695]:_any[178](?), arg comparator[291700] :
  unknown rec[291697] =
  defaultComparator[267977], in arg lo[291708] =
  (291705 call . Dom[291685] c"alignedLow"), in arg hi[291715] =
  (291712 call . Dom[291685] c"alignedHigh")) : _unknown[51]
  {
    (291725 call chpl_check_comparator comparator[291700](291722 call . Data[291690] c"eltType"))
    const stride[291743] "const"(291740 IfExpr (291729 call . Dom[291685] c"stridable") then
    { scopeless
      (291738 call abs(291734 call . Dom[291685] c"stride"))
    } else
    { scopeless
      1
    } )
    (291746 'end of statement')
    {
      unknown tmp[291868] "temp"
      (291892 'move' tmp[291868](291887 call _cond_test(291889 call <= lo[291708] hi[291715])))
      WhileDo[291873]
      {
        {
          const size[291758] "const"(291756 call /(291753 call - hi[291715] lo[291708]) stride[291743])
          const mid[291802] "const"(291799 IfExpr (291763 call == hi[291715] lo[291708]) then
          { scopeless
            hi[291715]
          } else
          { scopeless(291796 IfExpr (291768 call % size[291758] 2) then
            { scopeless
              (291781 call + lo[291708](291779 call *(291776 call /(291773 call - size[291758] 1) 2) stride[291743]))
            } else
            { scopeless
              (291794 call + lo[291708](291792 call *(291789 call -(291786 call / size[291758] 2) 1) stride[291743]))
            } )
          } )
          (291805 'end of statement')
          if(291862 call _cond_test(291818 call ==(291816 call chpl_compare(291811 call Data[291690] mid[291802]) val[291695](comparator = comparator[291700])) 0))
          {
            (291825 return(291823 call _build_tuple 1 mid[291802]))
          }
          {
            if(291856 call _cond_test(291838 call >(291836 call chpl_compare val[291695](291833 call Data[291690] mid[291802])(comparator = comparator[291700])) 0))
            {
              (291845 call = lo[291708](291843 call + mid[291802] stride[291743]))
            }
            {
              (291853 call = hi[291715](291851 call - mid[291802] stride[291743]))
            }
          }
        }
        label _continueLabel[291871]
        (291882 'move' tmp[291868](291877 call _cond_test(291879 call <= lo[291708] hi[291715])))
        tmp[291868]
      }
      label _breakLabel[291872]
    }
    (291900 return(291898 call _build_tuple 0 lo[291708]))
  }
  function binarySearch[291914](arg Data[291911] :
  (291909 call chpl__buildArrayRuntimeType unknown Dom[291906]), arg val[291916]:_any[178](?), arg comparator[291921] :
  unknown rec[291918] =
  defaultComparator[267977], in arg lo[291929] =
  (291926 call . Dom[291906] c"alignedLow"), in arg hi[291936] =
  (291933 call . Dom[291906] c"alignedHigh")) : _unknown[51] "no doc"
  {
    (291952 call chpl_check_comparator comparator[291921](291949 call . Data[291911] c"eltType"))
    {
      unknown tmp[292035] "temp"
      (292059 'move' tmp[292035](292054 call _cond_test(292056 call <= lo[291929] hi[291936])))
      WhileDo[292040]
      {
        {
          const mid[291969] "const"(291967 call +(291964 call /(291961 call - hi[291936] lo[291929]) 2) lo[291929])
          (291972 'end of statement')
          if(292029 call _cond_test(291985 call ==(291983 call chpl_compare(291978 call Data[291911] mid[291969]) val[291916](comparator = comparator[291921])) 0))
          {
            (291992 return(291990 call _build_tuple 1 mid[291969]))
          }
          {
            if(292023 call _cond_test(292005 call >(292003 call chpl_compare val[291916](292000 call Data[291911] mid[291969])(comparator = comparator[291921])) 0))
            {
              (292012 call = lo[291929](292010 call + mid[291969] 1))
            }
            {
              (292020 call = hi[291936](292018 call - mid[291969] 1))
            }
          }
        }
        label _continueLabel[292038]
        (292049 'move' tmp[292035](292044 call _cond_test(292046 call <= lo[291929] hi[291936])))
        tmp[292035]
      }
      label _breakLabel[292039]
    }
    (292067 return(292065 call _build_tuple 0 lo[291929]))
  }
  where {
    (291943 call !(291940 call . Dom[291906] c"stridable"))
  }
  function binarySearch[292082](arg Data[292079] :
  (292077 call chpl__buildArrayRuntimeType unknown Dom[292074]), arg val[292084]:_any[178](?), arg comparator[292089] :
  unknown rec[292086] =
  defaultComparator[267977], in arg lo[292097] =
  (292094 call . Dom[292074] c"alignedLow"), in arg hi[292104] =
  (292101 call . Dom[292074] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (292133 call compilerError "binarySearch() requires 1-D array")
  }
  where {
    (292112 call !=(292108 call . Dom[292074] c"rank") 1)
  }
  (355403 'used modules list'(353054 'use' ChapelStandard[20264])(291239 'use' Sort[267968] 'only' defaultComparator, DefaultComparator, reverseComparator, ReverseComparator)(291243 'use' Sort[267968]))
}