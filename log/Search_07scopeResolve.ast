AST dump for Search after pass scopeResolve.
Module use list: ChapelStandard Sort 

{
  function search[291282](arg Data[291279] :
  (291277 call chpl__buildArrayRuntimeType unknown Dom[291274]), arg val[291284]:_any[178](?), arg comparator[291289] :
  unknown rec[291286] =
  defaultComparator[267996], arg lo[291297] =
  (291294 call . Dom[291274] c"alignedLow"), arg hi[291304] =
  (291301 call . Dom[291274] c"alignedHigh"), arg sorted[291308] =
  0) : _unknown[51]
  {
    if(291332 call _cond_test sorted[291308])
    {
      (291320 return(291319 call binarySearch Data[291279] val[291284] comparator[291289] lo[291297] hi[291304]))
    }
    {
      (291330 return(291329 call linearSearch Data[291279] val[291284] comparator[291289] lo[291297] hi[291304]))
    }
  }
  function search[291351](arg Data[291348] :
  (291346 call chpl__buildArrayRuntimeType unknown Dom[291343]), arg val[291353]:_any[178](?), arg comparator[291358] :
  unknown rec[291355] =
  defaultComparator[267996], arg lo[291366] =
  (291363 call . Dom[291343] c"alignedLow"), arg hi[291373] =
  (291370 call . Dom[291343] c"alignedHigh"), arg sorted[291377] =
  0) : _unknown[51] "no doc" "no return value for void"
  {
    (291406 call compilerError "search() requires 1-D array")
  }
  where {
    (291385 call !=(291381 call . Dom[291343] c"rank") 1)
  }
  function linearSearch[291422](arg Data[291419] :
  (291417 call chpl__buildArrayRuntimeType unknown Dom[291414]), arg val[291424]:_any[178](?), arg comparator[291429] :
  unknown rec[291426] =
  defaultComparator[267996], arg lo[291437] =
  (291434 call . Dom[291414] c"alignedLow"), arg hi[291444] =
  (291441 call . Dom[291414] c"alignedHigh")) : _unknown[51]
  {
    (291454 call chpl_check_comparator comparator[291429](291451 call . Data[291419] c"eltType"))
    const stride[291472] "const"(291469 IfExpr (291458 call . Dom[291414] c"stridable") then
    { scopeless
      (291467 call abs(291463 call . Dom[291414] c"stride"))
    } else
    { scopeless
      1
    } )
    (291475 'end of statement')
    if(291627 call _cond_test(291477 call . Dom[291414] c"stridable"))
    {
      {
        unknown _indexOfInterest[291514] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291515] "expr temp" "temp"
        (291524 'move' _iterator[291515](291522 call _getIterator(291533 call chpl_direct_range_iter lo[291437] hi[291444] stride[291472])))
        Defer
        {
          {
            (291549 call _freeIterator _iterator[291515])
          }
        }
        { scopeless type
          (291538 'move' _indexOfInterest[291514](291535 call iteratorIndex _iterator[291515]))
        }
        ForLoop[291516]
        {
          unknown i[291542] "index var" "insert auto destroy"
          (291544 'move' i[291542] _indexOfInterest[291514])
          {
            if(291508 call _cond_test(291499 call ==(291497 call chpl_compare(291492 call Data[291419] i[291542]) val[291424](comparator = comparator[291429])) 0))
            {
              (291506 return(291504 call _build_tuple 1 i[291542]))
            }
          }
          label _continueLabel[291519]
          _indexOfInterest[291514]
          _iterator[291515]
        }
        label _breakLabel[291520]
      }
    }
    {
      {
        unknown _indexOfInterest[291588] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291589] "expr temp" "temp"
        (291598 'move' _iterator[291589](291596 call _getIterator(291603 call chpl_direct_range_iter lo[291437] hi[291444] 1)))
        Defer
        {
          {
            (291619 call _freeIterator _iterator[291589])
          }
        }
        { scopeless type
          (291608 'move' _indexOfInterest[291588](291605 call iteratorIndex _iterator[291589]))
        }
        ForLoop[291590]
        {
          unknown i[291612] "index var" "insert auto destroy"
          (291614 'move' i[291612] _indexOfInterest[291588])
          {
            if(291582 call _cond_test(291573 call ==(291571 call chpl_compare(291566 call Data[291419] i[291612]) val[291424](comparator = comparator[291429])) 0))
            {
              (291580 return(291578 call _build_tuple 1 i[291612]))
            }
          }
          label _continueLabel[291593]
          _indexOfInterest[291588]
          _iterator[291589]
        }
        label _breakLabel[291594]
      }
    }
    (291639 return(291637 call _build_tuple 0(291634 call + hi[291444] stride[291472])))
  }
  function linearSearch[291653](arg Data[291650] :
  (291648 call chpl__buildArrayRuntimeType unknown Dom[291645]), arg val[291655]:_any[178](?), arg comparator[291660] :
  unknown rec[291657] =
  defaultComparator[267996], arg lo[291668] =
  (291665 call . Dom[291645] c"alignedLow"), arg hi[291675] =
  (291672 call . Dom[291645] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (291704 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (291683 call !=(291679 call . Dom[291645] c"rank") 1)
  }
  function binarySearch[291720](arg Data[291717] :
  (291715 call chpl__buildArrayRuntimeType unknown Dom[291712]), arg val[291722]:_any[178](?), arg comparator[291727] :
  unknown rec[291724] =
  defaultComparator[267996], in arg lo[291735] =
  (291732 call . Dom[291712] c"alignedLow"), in arg hi[291742] =
  (291739 call . Dom[291712] c"alignedHigh")) : _unknown[51]
  {
    (291752 call chpl_check_comparator comparator[291727](291749 call . Data[291717] c"eltType"))
    const stride[291770] "const"(291767 IfExpr (291756 call . Dom[291712] c"stridable") then
    { scopeless
      (291765 call abs(291761 call . Dom[291712] c"stride"))
    } else
    { scopeless
      1
    } )
    (291773 'end of statement')
    {
      unknown tmp[291895] "temp"
      (291919 'move' tmp[291895](291914 call _cond_test(291916 call <= lo[291735] hi[291742])))
      WhileDo[291900]
      {
        {
          const size[291785] "const"(291783 call /(291780 call - hi[291742] lo[291735]) stride[291770])
          const mid[291829] "const"(291826 IfExpr (291790 call == hi[291742] lo[291735]) then
          { scopeless
            hi[291742]
          } else
          { scopeless(291823 IfExpr (291795 call % size[291785] 2) then
            { scopeless
              (291808 call + lo[291735](291806 call *(291803 call /(291800 call - size[291785] 1) 2) stride[291770]))
            } else
            { scopeless
              (291821 call + lo[291735](291819 call *(291816 call -(291813 call / size[291785] 2) 1) stride[291770]))
            } )
          } )
          (291832 'end of statement')
          if(291889 call _cond_test(291845 call ==(291843 call chpl_compare(291838 call Data[291717] mid[291829]) val[291722](comparator = comparator[291727])) 0))
          {
            (291852 return(291850 call _build_tuple 1 mid[291829]))
          }
          {
            if(291883 call _cond_test(291865 call >(291863 call chpl_compare val[291722](291860 call Data[291717] mid[291829])(comparator = comparator[291727])) 0))
            {
              (291872 call = lo[291735](291870 call + mid[291829] stride[291770]))
            }
            {
              (291880 call = hi[291742](291878 call - mid[291829] stride[291770]))
            }
          }
        }
        label _continueLabel[291898]
        (291909 'move' tmp[291895](291904 call _cond_test(291906 call <= lo[291735] hi[291742])))
        tmp[291895]
      }
      label _breakLabel[291899]
    }
    (291927 return(291925 call _build_tuple 0 lo[291735]))
  }
  function binarySearch[291941](arg Data[291938] :
  (291936 call chpl__buildArrayRuntimeType unknown Dom[291933]), arg val[291943]:_any[178](?), arg comparator[291948] :
  unknown rec[291945] =
  defaultComparator[267996], in arg lo[291956] =
  (291953 call . Dom[291933] c"alignedLow"), in arg hi[291963] =
  (291960 call . Dom[291933] c"alignedHigh")) : _unknown[51] "no doc"
  {
    (291979 call chpl_check_comparator comparator[291948](291976 call . Data[291938] c"eltType"))
    {
      unknown tmp[292062] "temp"
      (292086 'move' tmp[292062](292081 call _cond_test(292083 call <= lo[291956] hi[291963])))
      WhileDo[292067]
      {
        {
          const mid[291996] "const"(291994 call +(291991 call /(291988 call - hi[291963] lo[291956]) 2) lo[291956])
          (291999 'end of statement')
          if(292056 call _cond_test(292012 call ==(292010 call chpl_compare(292005 call Data[291938] mid[291996]) val[291943](comparator = comparator[291948])) 0))
          {
            (292019 return(292017 call _build_tuple 1 mid[291996]))
          }
          {
            if(292050 call _cond_test(292032 call >(292030 call chpl_compare val[291943](292027 call Data[291938] mid[291996])(comparator = comparator[291948])) 0))
            {
              (292039 call = lo[291956](292037 call + mid[291996] 1))
            }
            {
              (292047 call = hi[291963](292045 call - mid[291996] 1))
            }
          }
        }
        label _continueLabel[292065]
        (292076 'move' tmp[292062](292071 call _cond_test(292073 call <= lo[291956] hi[291963])))
        tmp[292062]
      }
      label _breakLabel[292066]
    }
    (292094 return(292092 call _build_tuple 0 lo[291956]))
  }
  where {
    (291970 call !(291967 call . Dom[291933] c"stridable"))
  }
  function binarySearch[292109](arg Data[292106] :
  (292104 call chpl__buildArrayRuntimeType unknown Dom[292101]), arg val[292111]:_any[178](?), arg comparator[292116] :
  unknown rec[292113] =
  defaultComparator[267996], in arg lo[292124] =
  (292121 call . Dom[292101] c"alignedLow"), in arg hi[292131] =
  (292128 call . Dom[292101] c"alignedHigh")) : _unknown[51] "no doc" "no return value for void"
  {
    (292160 call compilerError "binarySearch() requires 1-D array")
  }
  where {
    (292139 call !=(292135 call . Dom[292101] c"rank") 1)
  }
  (355443 'used modules list'(353094 'use' ChapelStandard[20267])(291266 'use' Sort[267987] 'only' defaultComparator, DefaultComparator, reverseComparator, ReverseComparator)(291270 'use' Sort[267987]))
}