AST dump for ChapelTuple after pass normalize.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[416064]() : void[4] "insert line file info" "module init"
  {
    (540929 'init var' CHPL_WARN_TUPLE_ITERATION[57026] "unset")
    (57029 'end of statement')
    (509098 return _void[55])
  }
  type _tuple[56202](?) unknown size[56197] "param" int(64)[13]
  function chpl__init_tuple[56211](param arg size[56208]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (508098 return _void[55])
  }
  function _build_tuple[56222](arg t[56219]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508100 return _void[55])
  }
  function _build_tuple[56233](arg x[56230]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[508104] "RVV" "temp"
    (508109 'move' ret[508104](508108 'deref' x[56230]))
    (508106 return ret[508104])
  }
  function _build_tuple_noref[56247](arg t[56244]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (508111 return _void[55])
  }
  function _build_tuple_always_allow_ref[56258](arg x[56255]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[508115] "RVV" "temp"
    (508120 'move' ret[508115](508119 'deref' x[56255]))
    (508117 return ret[508115])
  }
  function chpl__unref[56270](arg t[56268]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[508124] "RVV" "temp" "type variable"
    unknown call_tmp[611365] "expr temp" "maybe param" "maybe type" "temp"
    (611368 'move' call_tmp[611365](56275 call isTupleType t[56268]))
    unknown call_tmp[611370] "expr temp" "maybe param" "maybe type" "temp"
    (611373 'move' call_tmp[611370](56286 call _cond_test call_tmp[611365]))
    if call_tmp[611370]
    {
      unknown call_tmp[611375] "expr temp" "maybe param" "maybe type" "temp"
      (611378 'move' call_tmp[611375](56280 call _build_tuple_noref(56278 'expand_tuple' t[56268])))
      (508129 'move' ret[508124](508128 'deref' call_tmp[611375]))
      gotoReturn _end_chpl__unref[508122] _end_chpl__unref[508122]
    }
    {
      (508134 'move' ret[508124](508133 'deref' t[56268]))
      gotoReturn _end_chpl__unref[508122] _end_chpl__unref[508122]
    }
    label _end_chpl__unref[508122]
    (508126 return ret[508124])
  }
  function *[56301](param arg p[56298]:int(64)[13], arg t[56303]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508138 return _void[55])
  }
  function *[56314](param arg p[56311]:uint(64)[115], arg t[56316]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[508142] "RVV" "temp" "type variable"
    unknown call_tmp[611380] "expr temp" "maybe param" "maybe type" "temp"
    (611383 'move' call_tmp[611380](56322 call max int(64)[13]))
    unknown call_tmp[611385] "expr temp" "maybe param" "maybe type" "temp"
    (611388 'move' call_tmp[611385](56323 call > p[56311] call_tmp[611380]))
    unknown call_tmp[611390] "expr temp" "maybe param" "maybe type" "temp"
    (611393 'move' call_tmp[611390](56374 call _cond_test call_tmp[611385]))
    if call_tmp[611390]
    {
      unknown call_tmp[611395] "expr temp" "maybe param" "maybe type" "temp"
      (611398 'move' call_tmp[611395](56346 call max int(64)[13]))
      unknown call_tmp[611400] "expr temp" "maybe param" "maybe type" "temp"
      (611403 'move' call_tmp[611400](56348 call _cast string[26] call_tmp[611395]))
      unknown call_tmp[611405] "expr temp" "maybe param" "maybe type" "temp"
      (611408 'move' call_tmp[611405](56350 call + "Tuples of size >" call_tmp[611400]))
      unknown call_tmp[611410] "expr temp" "maybe param" "maybe type" "temp"
      (611413 'move' call_tmp[611410](56369 call + call_tmp[611405] " are not currently supported"))
      (56372 call compilerError call_tmp[611410])
    }
    unknown call_tmp[611415] "maybe param" "maybe type" "temp"
    (611418 'move' call_tmp[611415](56382 call _cast int(64)[13] p[56311]))
    unknown pAsInt[56384] "dead at end of block" "param"
    (540925 'init var' pAsInt[56384] call_tmp[611415])
    (56387 'end of statement')
    unknown call_tmp[611420] "expr temp" "maybe param" "maybe type" "temp"
    (611423 'move' call_tmp[611420](56390 call * pAsInt[56384] t[56316]))
    (508147 'move' ret[508142](508146 'deref' call_tmp[611420]))
    (508144 return ret[508142])
  }
  function *[56402](param arg p[56399]:bool[10], arg t[56404]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56425 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508149 return _void[55])
  }
  function *[56436](arg p[56433]:bool[10], arg t[56438]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56443 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508151 return _void[55])
  }
  function _build_star_tuple_noref[56454](param arg p[56451]:int(64)[13], arg t[56456]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508153 return _void[55])
  }
  function *[56465](arg t[56463]:_any[178](?), param arg p[56468]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56492 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (508155 return _void[55])
  }
  function *[56503](arg p[56500]:integral[199](?), arg t[56505]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56526 call compilerError "tuple size must be known at compile-time")
    (508157 return _void[55])
  }
  function chpl__tuplify[56535](arg x[56533]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[508161] "RVV" "temp"
    unknown call_tmp[611425] "expr temp" "maybe param" "maybe type" "temp"
    (611428 'move' call_tmp[611425](56540 call isTuple x[56533]))
    unknown call_tmp[611430] "expr temp" "maybe param" "maybe type" "temp"
    (611433 'move' call_tmp[611430](56549 call _cond_test call_tmp[611425]))
    if call_tmp[611430]
    {
      (508166 'move' ret[508161](508165 'deref' x[56533]))
      gotoReturn _end_chpl__tuplify[508159] _end_chpl__tuplify[508159]
    }
    {
      unknown call_tmp[611435] "expr temp" "maybe param" "maybe type" "temp"
      (611438 'move' call_tmp[611435](56545 call _build_tuple x[56533]))
      (508171 'move' ret[508161](508170 'deref' call_tmp[611435]))
      gotoReturn _end_chpl__tuplify[508159] _end_chpl__tuplify[508159]
    }
    label _end_chpl__tuplify[508159]
    (508163 return ret[508161])
  }
  function isTupleValue[56564](arg x[56561]:_tuple[56202](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508177] "RVV" "param" "temp"
    (508182 'move' ret[508177](508181 'deref' 1))
    (508179 return ret[508177])
  }
  function isTupleValue[56576](arg x[56574]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508186] "RVV" "param" "temp"
    (508191 'move' ret[508186](508190 'deref' 0))
    (508188 return ret[508186])
  }
  function isHomogeneousTupleValue[56588](arg x[56586]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508195] "RVV" "param" "temp"
    unknown call_tmp[611440] "expr temp" "maybe param" "maybe type" "temp"
    (611443 'move' call_tmp[611440](56609 'is star tuple type' x[56586]))
    (508200 'move' ret[508195](508199 'deref' call_tmp[611440]))
    (508197 return ret[508195])
  }
  function _check_tuple_var_decl[56621](arg x[56618]:_tuple[56202](?), param arg p[56623]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508204] "RVV" "param" "temp"
    unknown call_tmp[611447] "expr temp" "maybe param" "maybe type" "temp"
    (611450 'move' call_tmp[611447](56627 call size _mt[243] x[56618]))
    unknown call_tmp[611452] "expr temp" "maybe param" "maybe type" "temp"
    (611455 'move' call_tmp[611452](56630 call == p[56623] call_tmp[611447]))
    unknown call_tmp[611457] "expr temp" "maybe param" "maybe type" "temp"
    (611460 'move' call_tmp[611457](56714 call _cond_test call_tmp[611452]))
    if call_tmp[611457]
    {
      (508209 'move' ret[508204](508208 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[508202] _end__check_tuple_var_decl[508202]
    }
    {
      unknown call_tmp[611464] "expr temp" "maybe param" "maybe type" "temp"
      (611467 'move' call_tmp[611464](56655 call size _mt[243] x[56618]))
      unknown call_tmp[611469] "expr temp" "maybe param" "maybe type" "temp"
      (611472 'move' call_tmp[611469](56659 call _cast string[26] call_tmp[611464]))
      unknown call_tmp[611474] "expr temp" "maybe param" "maybe type" "temp"
      (611477 'move' call_tmp[611474](56661 call + "tuple size (" call_tmp[611469]))
      unknown call_tmp[611479] "expr temp" "maybe param" "maybe type" "temp"
      (611482 'move' call_tmp[611479](56680 call + call_tmp[611474] ") must match the number of grouped variables ("))
      unknown call_tmp[611484] "expr temp" "maybe param" "maybe type" "temp"
      (611487 'move' call_tmp[611484](56684 call _cast string[26] p[56623]))
      unknown call_tmp[611489] "expr temp" "maybe param" "maybe type" "temp"
      (611492 'move' call_tmp[611489](56686 call + call_tmp[611479] call_tmp[611484]))
      unknown call_tmp[611494] "expr temp" "maybe param" "maybe type" "temp"
      (611497 'move' call_tmp[611494](56705 call + call_tmp[611489] ")"))
      (56708 call compilerError call_tmp[611494])
      (474924 'end of statement')
      (508214 'move' ret[508204](508213 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[508202] _end__check_tuple_var_decl[508202]
    }
    label _end__check_tuple_var_decl[508202]
    (508206 return ret[508204])
  }
  function _check_tuple_var_decl[56725](arg x[56723]:_any[178](?), param arg p[56727]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508220] "RVV" "param" "temp"
    (56748 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474926 'end of statement')
    (508225 'move' ret[508220](508224 'deref' 0))
    (508222 return ret[508220])
  }
  function isTupleType[56760](arg t[56758]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508229] "RVV" "param" "temp"
    unknown call_tmp[611499] "expr temp" "maybe param" "maybe type" "temp"
    (611502 'move' call_tmp[611499](56781 'is tuple type' t[56758]))
    (508234 'move' ret[508229](508233 'deref' call_tmp[611499]))
    (508231 return ret[508229])
  }
  function isHomogeneousTupleType[56791](arg t[56789]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508238] "RVV" "param" "temp"
    unknown call_tmp[611504] "expr temp" "maybe param" "maybe type" "temp"
    (611507 'move' call_tmp[611504](56796 'is star tuple type' t[56789]))
    (508243 'move' ret[508238](508242 'deref' call_tmp[611504]))
    (508240 return ret[508238])
  }
  function =[56808](ref arg x[56805]:_tuple[56202](?), arg y[56811]:_tuple[56202](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56845] "dead at end of block" "insert auto destroy"
      (540927 'init var' i[56845] 0)
      unknown tmp[56846] "maybe param" "temp"
      unknown call_tmp[611511] "expr temp" "maybe param" "maybe type" "temp"
      (611514 'move' call_tmp[611511](56826 call size _mt[243] x[56805]))
      unknown call_tmp[611516] "expr temp" "maybe param" "maybe type" "temp"
      (611519 'move' call_tmp[611516](56830 call - call_tmp[611511] 1))
      (56858 'move' tmp[56846](56856 call chpl_compute_low_param_loop_bound 0 call_tmp[611516]))
      unknown tmp[56847] "maybe param" "temp"
      unknown call_tmp[611523] "expr temp" "maybe param" "maybe type" "temp"
      (611526 'move' call_tmp[611523](56865 call size _mt[243] x[56805]))
      unknown call_tmp[611528] "expr temp" "maybe param" "maybe type" "temp"
      (611531 'move' call_tmp[611528](56863 call - call_tmp[611523] 1))
      (56871 'move' tmp[56847](56869 call chpl_compute_high_param_loop_bound 0 call_tmp[611528]))
      unknown tmp[56848] "maybe param" "temp"
      (56874 'move' tmp[56848] 1)
      ParamForLoop[56876]
      { i[56845] tmp[56846] tmp[56847] tmp[56848]
        unknown call_tmp[611533] "expr temp" "maybe param" "maybe type" "temp"
        (611536 'move' call_tmp[611533](56837 call x[56805] i[56845]))
        unknown call_tmp[611538] "expr temp" "maybe param" "maybe type" "temp"
        (611541 'move' call_tmp[611538](56841 call y[56811] i[56845]))
        (56842 call = call_tmp[611533] call_tmp[611538])
      }
      label _unused_continueLabel[56850]
      label _breakLabel[56849]
    }
    (508245 return _void[55])
  }
  where {
    unknown call_tmp[611545] "expr temp" "maybe param" "maybe type" "temp"
    (611548 'move' call_tmp[611545](56815 call size _mt[243] x[56805]))
    unknown call_tmp[611552] "expr temp" "maybe param" "maybe type" "temp"
    (611555 'move' call_tmp[611552](56819 call size _mt[243] y[56811]))
    (56822 call == call_tmp[611545] call_tmp[611552])
  }
  function _tuple[56202](?).this[56896](arg _mt[56901]:_MT[238], arg this[56898]:_tuple[56202](?) :
  _tuple[56202](?), arg i[56893]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508249] "RVV" "temp"
    unknown call_tmp[611557] "expr temp" "maybe param" "maybe type" "temp"
    (611560 'move' call_tmp[611557](56906 call isHomogeneousTuple this[56898]))
    unknown call_tmp[611562] "expr temp" "maybe param" "maybe type" "temp"
    (611565 'move' call_tmp[611562](56907 call ! call_tmp[611557]))
    unknown call_tmp[611567] "expr temp" "maybe param" "maybe type" "temp"
    (611570 'move' call_tmp[611567](56932 call _cond_test call_tmp[611562]))
    if call_tmp[611567]
    {
      (56930 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611572] "expr temp" "maybe param" "maybe type" "temp"
    (611575 'move' call_tmp[611572](56979 call _cond_test 1))
    if call_tmp[611572]
    {
      unknown tmp[418994] "maybe param" "temp"
      (419005 'move' tmp[418994](56941 call < i[56893] 0))
      unknown call_tmp[611577] "expr temp" "maybe param" "maybe type" "temp"
      (611580 'move' call_tmp[611577](419007 call _cond_invalid tmp[418994]))
      if call_tmp[611577]
      {
        (419010 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[555076] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[555077] "maybe param" "temp"
      unknown call_tmp[611582] "expr temp" "maybe param" "maybe type" "temp"
      (611585 'move' call_tmp[611582](418995 call isTrue tmp[418994]))
      (555082 'move' tmp[555077](555080 call _cond_test call_tmp[611582]))
      if tmp[555077]
      {
        (555087 'move' tmp[555076](555084 '_paramFoldLogical' tmp[555077] 1))
      }
      {
        unknown tmp[555089] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611589] "expr temp" "maybe param" "maybe type" "temp"
        (611592 'move' call_tmp[611589](373176 call size _mt[243] this[56898]))
        unknown call_tmp[611594] "expr temp" "maybe param" "maybe type" "temp"
        (611597 'move' call_tmp[611594](56946 call - call_tmp[611589] 1))
        unknown call_tmp[611599] "expr temp" "maybe param" "maybe type" "temp"
        (611602 'move' call_tmp[611599](56948 call > i[56893] call_tmp[611594]))
        (555091 'move' tmp[555089](418999 call isTrue call_tmp[611599]))
        (555096 'move' tmp[555076](555093 '_paramFoldLogical' tmp[555077] tmp[555089]))
      }
      unknown call_tmp[611604] "expr temp" "maybe param" "maybe type" "temp"
      (611607 'move' call_tmp[611604](56974 call _cond_test tmp[555076]))
      if call_tmp[611604]
      {
        (56972 call halt "tuple access out of bounds: " i[56893])
      }
    }
    unknown call_tmp[611609] "expr temp" "maybe param" "maybe type" "temp"
    (611612 'move' call_tmp[611609](57004 'get svec member' this[56898] i[56893]))
    (508254 'move' ret[508249](508253 'addr of' call_tmp[611609]))
    (508251 return ret[508249])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57026] "config" "no doc" "param"
  function _tuple[56202](?).these[57033](arg _mt[57038]:_MT[238], arg this[57035]:_tuple[56202](?) :
  _tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508258] "RVV" "temp"
    unknown call_tmp[611614] "expr temp" "maybe param" "maybe type" "temp"
    (611617 'move' call_tmp[611614](57043 call isHomogeneousTuple this[57035]))
    unknown call_tmp[611619] "expr temp" "maybe param" "maybe type" "temp"
    (611622 'move' call_tmp[611619](57044 call ! call_tmp[611614]))
    unknown call_tmp[611624] "expr temp" "maybe param" "maybe type" "temp"
    (611627 'move' call_tmp[611624](57067 call _cond_test call_tmp[611619]))
    if call_tmp[611624]
    {
      (57065 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611629] "expr temp" "maybe param" "maybe type" "temp"
    (611632 'move' call_tmp[611629](57091 call == CHPL_WARN_TUPLE_ITERATION[57026] "true"))
    unknown call_tmp[611634] "expr temp" "maybe param" "maybe type" "temp"
    (611637 'move' call_tmp[611634](57116 call _cond_test call_tmp[611629]))
    if call_tmp[611634]
    {
      (57114 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57138] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57139] "expr temp" "temp"
      unknown call_tmp[611641] "expr temp" "maybe param" "maybe type" "temp"
      (611644 'move' call_tmp[611641](57154 call size _mt[243] this[57035]))
      unknown call_tmp[611646] "expr temp" "maybe param" "maybe type" "temp"
      (611649 'move' call_tmp[611646](57158 call chpl_direct_counted_range_iter 0 call_tmp[611641]))
      (57148 'move' _iterator[57139](57146 call _getIterator call_tmp[611646]))
      Defer
      {
        {
          (57174 call _freeIterator _iterator[57139])
        }
      }
      { scopeless type
        (57163 'move' _indexOfInterest[57138](57160 call iteratorIndex _iterator[57139]))
      }
      ForLoop[57140]
      {
        unknown i[57167] "index var" "insert auto destroy"
        (474937 'end of statement')
        (57169 'move' i[57167] _indexOfInterest[57138])
        (474938 'end of statement' i[57167])
        {
          unknown yret[508262] "YVV" "temp"
          unknown call_tmp[611651] "expr temp" "maybe param" "maybe type" "temp"
          (611654 'move' call_tmp[611651](57134 call this[57035] i[57167]))
          (508265 'move' yret[508262](508264 'addr of' call_tmp[611651]))
          (508267 yield yret[508262])
          (474940 'end of statement' i[57167])
        }
        label _continueLabel[57143]
        _indexOfInterest[57138]
        _iterator[57139]
      }
      label _breakLabel[57144]
    }
    (508260 return ret[508258])
  }
  function _tuple[56202](?).these[57190](arg _mt[57195]:_MT[238], arg this[57192]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57187]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508271] "RVV" "temp"
    const numTasks[57216] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[555103] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555104] "maybe param" "temp"
    unknown call_tmp[611656] "expr temp" "maybe param" "maybe type" "temp"
    (611659 'move' call_tmp[611656](57206 call == dataParTasksPerLocale[93284] 0))
    (555109 'move' tmp[555104](555107 call _cond_test call_tmp[611656]))
    if tmp[555104]
    {
      unknown tmp[555111] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611661] "expr temp" "maybe param" "maybe type" "temp"
      (611664 'move' call_tmp[611661](357413 call here[90438]))
      (555113 'move' tmp[555111](57209 call maxTaskPar _mt[243] call_tmp[611661]))
      (555118 'move' tmp[555103](555115 '_paramFoldLogical' tmp[555104] tmp[555111]))
    }
    {
      (555123 'move' tmp[555103](555120 '_paramFoldLogical' tmp[555104] dataParTasksPerLocale[93284]))
    }
    (540931 'init var' numTasks[57216] tmp[555103])
    (57219 'end of statement')
    const ignoreRunning[57222] "dead at end of block" "const" "insert auto destroy"
    (540933 'init var' ignoreRunning[57222] dataParIgnoreRunningTasks[93290])
    (57225 'end of statement')
    const minIndicesPerTask[57227] "dead at end of block" "const" "insert auto destroy"
    (540935 'init var' minIndicesPerTask[57227] dataParMinGranularity[93296])
    (57230 'end of statement')
    unknown call_tmp[611670] "maybe param" "maybe type" "temp"
    (611673 'move' call_tmp[611670](57232 call size _mt[243] this[57192]))
    const length[57235] "dead at end of block" "const" "insert auto destroy"
    (540937 'init var' length[57235] call_tmp[611670])
    (57238 'end of statement')
    unknown call_tmp[611675] "expr temp" "maybe param" "maybe type" "temp"
    (611678 'move' call_tmp[611675](57240 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611680] "expr temp" "maybe param" "maybe type" "temp"
    (611683 'move' call_tmp[611680](57243 call # call_tmp[611675] length[57235]))
    unknown call_tmp[611685] "maybe param" "maybe type" "temp"
    (611688 'move' call_tmp[611685](57245 call _build_tuple call_tmp[611680]))
    const myRange[57247] "dead at end of block" "const" "insert auto destroy"
    (540939 'init var' myRange[57247] call_tmp[611685])
    (57250 'end of statement')
    unknown call_tmp[611690] "maybe param" "maybe type" "temp"
    (611693 'move' call_tmp[611690](57262 call _computeChunkStuff numTasks[57216] ignoreRunning[57222] minIndicesPerTask[57227] myRange[57247]))
    unknown tmp[57263] "dead at end of block" "insert auto destroy" "temp"
    (540941 'init var' tmp[57263] call_tmp[611690])
    (57267 call _check_tuple_var_decl tmp[57263] 2)
    (474943 'end of statement')
    unknown call_tmp[611695] "maybe param" "maybe type" "temp"
    (611698 'move' call_tmp[611695](57264 call tmp[57263] 0))
    unknown numChunks[57251] "dead at end of block" "insert auto destroy"
    (540943 'init var' numChunks[57251] call_tmp[611695])
    (57272 'end of statement' length[57235])
    unknown call_tmp[611700] "expr temp" "maybe param" "maybe type" "temp"
    (611703 'move' call_tmp[611700](57275 call == numChunks[57251] 1))
    unknown call_tmp[611705] "expr temp" "maybe param" "maybe type" "temp"
    (611708 'move' call_tmp[611705](57519 call _cond_test call_tmp[611700]))
    if call_tmp[611705]
    {
      unknown yret[508275] "YVV" "temp"
      (508278 'move' yret[508275](508277 'addr of' myRange[57247]))
      (508280 yield yret[508275])
      (474944 'end of statement' myRange[57247])
    }
    {
      {
        unknown tmpIter[57325] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611710] "expr temp" "maybe param" "maybe type" "temp"
        (611713 'move' call_tmp[611710](57283 call chpl_build_low_bounded_range 0))
        (57328 'move' tmpIter[57325](57286 call # call_tmp[611710] numChunks[57251]))
        unknown isRngDomArr[57499] "maybe param" "temp"
        unknown tmp[419015] "maybe param" "temp"
        (419026 'move' tmp[419015](57501 call isBoundedRange tmpIter[57325]))
        unknown call_tmp[611715] "expr temp" "maybe param" "maybe type" "temp"
        (611718 'move' call_tmp[611715](419028 call _cond_invalid tmp[419015]))
        if call_tmp[611715]
        {
          (419031 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[555157] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[555158] "maybe param" "temp"
        unknown call_tmp[611720] "expr temp" "maybe param" "maybe type" "temp"
        (611723 'move' call_tmp[611720](419016 call isTrue tmp[419015]))
        (555163 'move' tmp[555158](555161 call _cond_test call_tmp[611720]))
        if tmp[555158]
        {
          (555168 'move' tmp[555157](555165 '_paramFoldLogical' tmp[555158] 1))
        }
        {
          unknown tmp[419036] "maybe param" "temp"
          (419047 'move' tmp[419036](57504 call isDomain tmpIter[57325]))
          unknown call_tmp[611725] "expr temp" "maybe param" "maybe type" "temp"
          (611728 'move' call_tmp[611725](419049 call _cond_invalid tmp[419036]))
          if call_tmp[611725]
          {
            (419052 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[555130] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[555131] "maybe param" "temp"
          unknown call_tmp[611730] "expr temp" "maybe param" "maybe type" "temp"
          (611733 'move' call_tmp[611730](419037 call isTrue tmp[419036]))
          (555136 'move' tmp[555131](555134 call _cond_test call_tmp[611730]))
          if tmp[555131]
          {
            (555141 'move' tmp[555130](555138 '_paramFoldLogical' tmp[555131] 1))
          }
          {
            unknown tmp[555143] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611735] "expr temp" "maybe param" "maybe type" "temp"
            (611738 'move' call_tmp[611735](57507 call isArray tmpIter[57325]))
            (555145 'move' tmp[555143](419041 call isTrue call_tmp[611735]))
            (555150 'move' tmp[555130](555147 '_paramFoldLogical' tmp[555131] tmp[555143]))
          }
          unknown tmp[555170] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (555172 'move' tmp[555170](419020 call isTrue tmp[555130]))
          (555177 'move' tmp[555157](555174 '_paramFoldLogical' tmp[555158] tmp[555170]))
        }
        (57514 'move' isRngDomArr[57499] tmp[555157])
        if isRngDomArr[57499]
        {
          const _coforallCount[57366] "const" "end count" "temp"
          (57435 'move' _coforallCount[57366](57432 call _endCountAlloc 1))
          unknown numTasks[57367] "temp"
          (57419 'move' numTasks[57367](57415 call size _mt[243] tmpIter[57325]))
          (57410 call _upEndCount _coforallCount[57366] 1 numTasks[57367])
          (474947 'end of statement')
          (57407 call chpl_resetTaskSpawn numTasks[57367])
          (474948 'end of statement')
          unknown _indexOfInterest[57374] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57375] "expr temp" "temp"
          (57384 'move' _iterator[57375](57382 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57400 call _freeIterator _iterator[57375])
            }
          }
          { scopeless type
            (57389 'move' _indexOfInterest[57374](57386 call iteratorIndex _iterator[57375]))
          }
          ForLoop[57376]
          {
            unknown chunk[57393] "coforall index var" "index var" "insert auto destroy"
            (474950 'end of statement')
            (57395 'move' chunk[57393] _indexOfInterest[57374])
            (474951 'end of statement' chunk[57393])
            {
              {
                unknown call_tmp[611742] "expr temp" "maybe param" "maybe type" "temp"
                (611745 'move' call_tmp[611742](57339 call - length[57235] 1))
                unknown call_tmp[611747] "maybe param" "maybe type" "temp"
                (611750 'move' call_tmp[611747](57334 call _computeBlock length[57235] numChunks[57251] chunk[57393] call_tmp[611742]))
                const tmp[57332] "dead at end of block" "const" "insert auto destroy" "temp"
                (540945 'init var' tmp[57332] call_tmp[611747])
                (57344 call _check_tuple_var_decl tmp[57332] 2)
                (474953 'end of statement')
                unknown call_tmp[611752] "maybe param" "maybe type" "temp"
                (611755 'move' call_tmp[611752](57349 call tmp[57332] 0))
                const lo[57347] "dead at end of block" "const" "insert auto destroy"
                (540947 'init var' lo[57347] call_tmp[611752])
                unknown call_tmp[611757] "maybe param" "maybe type" "temp"
                (611760 'move' call_tmp[611757](57354 call tmp[57332] 1))
                const hi[57352] "dead at end of block" "const" "insert auto destroy"
                (540949 'init var' hi[57352] call_tmp[611757])
                (57357 'end of statement')
                unknown yret[508282] "YVV" "temp"
                unknown call_tmp[611762] "expr temp" "maybe param" "maybe type" "temp"
                (611765 'move' call_tmp[611762](57362 call chpl_build_bounded_range lo[57347] hi[57352]))
                unknown call_tmp[611767] "expr temp" "maybe param" "maybe type" "temp"
                (611770 'move' call_tmp[611767](57360 call _build_tuple call_tmp[611762]))
                (508285 'move' yret[508282](508284 'addr of' call_tmp[611767]))
                (508287 yield yret[508282])
                (474954 'end of statement' lo[57347] hi[57352])
              }
              (57369 call _downEndCount _coforallCount[57366] nil[44])
              (57368 'coforall loop')
            }
            label _continueLabel[57379]
            _indexOfInterest[57374]
            _iterator[57375]
          }
          label _breakLabel[57380]
          Defer
          {
            {
              (57422 call _endCountFree _coforallCount[57366])
            }
          }
          (57427 call _waitEndCount _coforallCount[57366] 1 numTasks[57367])
        }
        {
          const _coforallCount[57439] "const" "end count" "temp"
          (57496 'move' _coforallCount[57439](57493 call _endCountAlloc 1))
          unknown _indexOfInterest[57447] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57448] "expr temp" "temp"
          (57457 'move' _iterator[57448](57455 call _getIterator tmpIter[57325]))
          Defer
          {
            {
              (57473 call _freeIterator _iterator[57448])
            }
          }
          { scopeless type
            (57462 'move' _indexOfInterest[57447](57459 call iteratorIndex _iterator[57448]))
          }
          ForLoop[57449]
          {
            unknown chunk[57466] "coforall index var" "index var" "insert auto destroy"
            (474961 'end of statement')
            (57468 'move' chunk[57466] _indexOfInterest[57447])
            (474962 'end of statement' chunk[57466])
            (57480 call _upEndCount _coforallCount[57439] 1)
            (474964 'end of statement')
            {
              {
                unknown call_tmp[611772] "expr temp" "maybe param" "maybe type" "temp"
                (611775 'move' call_tmp[611772](57300 call - length[57235] 1))
                unknown call_tmp[611777] "maybe param" "maybe type" "temp"
                (611780 'move' call_tmp[611777](57302 call _computeBlock length[57235] numChunks[57251] chunk[57466] call_tmp[611772]))
                const tmp[57303] "dead at end of block" "const" "insert auto destroy" "temp"
                (540951 'init var' tmp[57303] call_tmp[611777])
                (57310 call _check_tuple_var_decl tmp[57303] 2)
                (474965 'end of statement')
                unknown call_tmp[611782] "maybe param" "maybe type" "temp"
                (611785 'move' call_tmp[611782](57304 call tmp[57303] 0))
                const lo[57288] "dead at end of block" "const" "insert auto destroy"
                (540953 'init var' lo[57288] call_tmp[611782])
                unknown call_tmp[611787] "maybe param" "maybe type" "temp"
                (611790 'move' call_tmp[611787](57307 call tmp[57303] 1))
                const hi[57290] "dead at end of block" "const" "insert auto destroy"
                (540955 'init var' hi[57290] call_tmp[611787])
                (57315 'end of statement')
                unknown yret[508289] "YVV" "temp"
                unknown call_tmp[611792] "expr temp" "maybe param" "maybe type" "temp"
                (611795 'move' call_tmp[611792](57319 call chpl_build_bounded_range lo[57288] hi[57290]))
                unknown call_tmp[611797] "expr temp" "maybe param" "maybe type" "temp"
                (611800 'move' call_tmp[611797](57321 call _build_tuple call_tmp[611792]))
                (508292 'move' yret[508289](508291 'addr of' call_tmp[611797]))
                (508294 yield yret[508289])
                (474966 'end of statement' lo[57288] hi[57290])
              }
              (57442 call _downEndCount _coforallCount[57439] nil[44])
              (57441 'coforall loop')
            }
            label _continueLabel[57452]
            _indexOfInterest[57447]
            _iterator[57448]
          }
          label _breakLabel[57453]
          Defer
          {
            {
              (57484 call _endCountFree _coforallCount[57439])
            }
          }
          (57489 call _waitEndCount _coforallCount[57439] 1)
        }
      }
    }
    (508273 return ret[508271])
  }
  where {
    (57202 call == tag[57187] leader[447])
  }
  function _tuple[56202](?).these[57533](arg _mt[57542]:_MT[238], arg this[57539]:_tuple[56202](?) :
  _tuple[56202](?), param arg tag[57530]:iterKind[453], arg followThis[57536]:_tuple[56202](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508298] "RVV" "temp"
    unknown call_tmp[611804] "expr temp" "maybe param" "maybe type" "temp"
    (611807 'move' call_tmp[611804](57552 call size _mt[243] followThis[57536]))
    unknown call_tmp[611809] "expr temp" "maybe param" "maybe type" "temp"
    (611812 'move' call_tmp[611809](57556 call != call_tmp[611804] 1))
    unknown call_tmp[611814] "expr temp" "maybe param" "maybe type" "temp"
    (611817 'move' call_tmp[611814](57579 call _cond_test call_tmp[611809]))
    if call_tmp[611814]
    {
      (57577 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611819] "maybe param" "maybe type" "temp"
    (611822 'move' call_tmp[611819](57588 call followThis[57536] 0))
    unknown fThis[57589] "dead at end of block" "insert auto destroy"
    (540957 'init var' fThis[57589] call_tmp[611819])
    (57592 'end of statement')
    {
      unknown _indexOfInterest[57602] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57603] "expr temp" "temp"
      (57612 'move' _iterator[57603](57610 call _getIterator fThis[57589]))
      Defer
      {
        {
          (57628 call _freeIterator _iterator[57603])
        }
      }
      { scopeless type
        (57617 'move' _indexOfInterest[57602](57614 call iteratorIndex _iterator[57603]))
      }
      ForLoop[57604]
      {
        unknown i[57621] "index var" "insert auto destroy"
        (474974 'end of statement')
        (57623 'move' i[57621] _indexOfInterest[57602])
        (474975 'end of statement' i[57621])
        {
          unknown yret[508302] "YVV" "temp"
          unknown call_tmp[611824] "expr temp" "maybe param" "maybe type" "temp"
          (611827 'move' call_tmp[611824](57598 call this[57539] i[57621]))
          (508305 'move' yret[508302](508304 'addr of' call_tmp[611824]))
          (508307 yield yret[508302])
          (474977 'end of statement' i[57621])
        }
        label _continueLabel[57607]
        _indexOfInterest[57602]
        _iterator[57603]
      }
      label _breakLabel[57608]
    }
    (508300 return ret[508298])
  }
  where {
    (57549 call == tag[57530] follower[449])
  }
  function _tuple[56202](?).indices[57641](arg _mt[57646]:_MT[238], arg this[57643]:_tuple[56202](?) :
  _tuple[56202](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508311] "RVV" "temp"
    unknown call_tmp[611831] "expr temp" "maybe param" "maybe type" "temp"
    (611834 'move' call_tmp[611831](57650 call size _mt[243] this[57643]))
    unknown call_tmp[611836] "expr temp" "maybe param" "maybe type" "temp"
    (611839 'move' call_tmp[611836](57654 call - call_tmp[611831] 1))
    unknown call_tmp[611841] "expr temp" "maybe param" "maybe type" "temp"
    (611844 'move' call_tmp[611841](57656 call chpl_build_bounded_range 0 call_tmp[611836]))
    (508316 'move' ret[508311](508315 'deref' call_tmp[611841]))
    (508313 return ret[508311])
  }
  function _cast[57672](arg t[57669] :
  (57668 call complex(128)[140] 64), arg x[57679]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508326] "RVV" "temp"
    function _chpl_complex64[57691](arg re[57688] :
    (57687 call real(64)[16] 32), arg im[57697] :
    (57696 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508320] "RVV" "temp"
      (508322 return ret[508320])
    }
    { scopeless type
      (57703 call complex(128)[140] 64)
    }
    unknown call_tmp[611846] "expr temp" "maybe param" "maybe type" "temp"
    (611849 'move' call_tmp[611846](57716 call real(64)[16] 32))
    unknown call_tmp[611851] "expr temp" "maybe param" "maybe type" "temp"
    (611854 'move' call_tmp[611851](57712 call x[57679] 0))
    unknown call_tmp[611856] "expr temp" "maybe param" "maybe type" "temp"
    (611859 'move' call_tmp[611856](57717 call _cast call_tmp[611846] call_tmp[611851]))
    unknown call_tmp[611861] "expr temp" "maybe param" "maybe type" "temp"
    (611864 'move' call_tmp[611861](57727 call real(64)[16] 32))
    unknown call_tmp[611866] "expr temp" "maybe param" "maybe type" "temp"
    (611869 'move' call_tmp[611866](57723 call x[57679] 1))
    unknown call_tmp[611871] "expr temp" "maybe param" "maybe type" "temp"
    (611874 'move' call_tmp[611871](57728 call _cast call_tmp[611861] call_tmp[611866]))
    unknown call_tmp[611876] "expr temp" "maybe param" "maybe type" "temp"
    (611879 'move' call_tmp[611876](57730 call _chpl_complex64 call_tmp[611856] call_tmp[611871]))
    (508331 'move' ret[508326](508330 'deref' call_tmp[611876]))
    (508328 return ret[508326])
  }
  where {
    unknown call_tmp[611881] "expr temp" "maybe param" "maybe type" "temp"
    (611884 'move' call_tmp[611881](454854 'query' x[57679] c"size"))
    unknown call_tmp[611886] "expr temp" "maybe param" "maybe type" "temp"
    (611889 'move' call_tmp[611886](454855 call == 2 call_tmp[611881]))
    (454859 call & 1 call_tmp[611886])
  }
  function _cast[57744](arg t[57741] :
  (57740 call complex(128)[140] 128), arg x[57751]:_tuple[56202](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508341] "RVV" "temp"
    function _chpl_complex128[57763](arg re[57760] :
    (57759 call real(64)[16] 64), arg im[57769] :
    (57768 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508335] "RVV" "temp"
      (508337 return ret[508335])
    }
    { scopeless type
      (57775 call complex(128)[140] 128)
    }
    unknown call_tmp[611891] "expr temp" "maybe param" "maybe type" "temp"
    (611894 'move' call_tmp[611891](57788 call real(64)[16] 64))
    unknown call_tmp[611896] "expr temp" "maybe param" "maybe type" "temp"
    (611899 'move' call_tmp[611896](57784 call x[57751] 0))
    unknown call_tmp[611901] "expr temp" "maybe param" "maybe type" "temp"
    (611904 'move' call_tmp[611901](57789 call _cast call_tmp[611891] call_tmp[611896]))
    unknown call_tmp[611906] "expr temp" "maybe param" "maybe type" "temp"
    (611909 'move' call_tmp[611906](57799 call real(64)[16] 64))
    unknown call_tmp[611911] "expr temp" "maybe param" "maybe type" "temp"
    (611914 'move' call_tmp[611911](57795 call x[57751] 1))
    unknown call_tmp[611916] "expr temp" "maybe param" "maybe type" "temp"
    (611919 'move' call_tmp[611916](57800 call _cast call_tmp[611906] call_tmp[611911]))
    unknown call_tmp[611921] "expr temp" "maybe param" "maybe type" "temp"
    (611924 'move' call_tmp[611921](57802 call _chpl_complex128 call_tmp[611901] call_tmp[611916]))
    (508346 'move' ret[508341](508345 'deref' call_tmp[611921]))
    (508343 return ret[508341])
  }
  where {
    unknown call_tmp[611926] "expr temp" "maybe param" "maybe type" "temp"
    (611929 'move' call_tmp[611926](454875 'query' x[57751] c"size"))
    unknown call_tmp[611931] "expr temp" "maybe param" "maybe type" "temp"
    (611934 'move' call_tmp[611931](454876 call == 2 call_tmp[611926]))
    (454880 call & 1 call_tmp[611931])
  }
  function _cast[57813](arg t[57810]:_tuple[56202](?), arg x[57816]:_tuple[56202](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508348 return _void[55])
  }
  function chpl__tupleRest[57828](arg t[57825]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508361] "RVV" "temp"
    function chpl__tupleRestHelper[57834](arg first[57832]:_any[178](?), arg rest[57837]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508352] "RVV" "temp"
      (508357 'move' ret[508352](508356 'deref' rest[57837]))
      (508354 return ret[508352])
    }
    unknown call_tmp[611936] "expr temp" "maybe param" "maybe type" "temp"
    (611939 'move' call_tmp[611936](57851 call chpl__tupleRestHelper(57849 'expand_tuple' t[57825])))
    (508366 'move' ret[508361](508365 'deref' call_tmp[611936]))
    (508363 return ret[508361])
  }
  function +[57862](arg a[57859]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508370] "RVV" "temp"
    unknown result[57866] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611941] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611944 'move' call_tmp[611941](57865 'typeof' a[57859]))
    (540959 'default init var' result[57866] call_tmp[611941])
    (57869 'end of statement')
    {
      unknown d[57894] "dead at end of block" "insert auto destroy"
      (540961 'init var' d[57894] 0)
      (474984 'end of statement')
      unknown tmp[57895] "maybe param" "temp"
      unknown call_tmp[611948] "expr temp" "maybe param" "maybe type" "temp"
      (611951 'move' call_tmp[611948](57873 call size _mt[243] a[57859]))
      unknown call_tmp[611953] "expr temp" "maybe param" "maybe type" "temp"
      (611956 'move' call_tmp[611953](57877 call - call_tmp[611948] 1))
      (57907 'move' tmp[57895](57905 call chpl_compute_low_param_loop_bound 0 call_tmp[611953]))
      unknown tmp[57896] "maybe param" "temp"
      unknown call_tmp[611960] "expr temp" "maybe param" "maybe type" "temp"
      (611963 'move' call_tmp[611960](57914 call size _mt[243] a[57859]))
      unknown call_tmp[611965] "expr temp" "maybe param" "maybe type" "temp"
      (611968 'move' call_tmp[611965](57912 call - call_tmp[611960] 1))
      (57920 'move' tmp[57896](57918 call chpl_compute_high_param_loop_bound 0 call_tmp[611965]))
      unknown tmp[57897] "maybe param" "temp"
      (57923 'move' tmp[57897] 1)
      ParamForLoop[57925]
      { d[57894] tmp[57895] tmp[57896] tmp[57897]
        unknown call_tmp[611970] "expr temp" "maybe param" "maybe type" "temp"
        (611973 'move' call_tmp[611970](57884 call result[57866] d[57894]))
        unknown call_tmp[611975] "expr temp" "maybe param" "maybe type" "temp"
        (611978 'move' call_tmp[611975](57888 call a[57859] d[57894]))
        unknown call_tmp[611980] "expr temp" "maybe param" "maybe type" "temp"
        (611983 'move' call_tmp[611980](57889 call + call_tmp[611975]))
        (57891 call = call_tmp[611970] call_tmp[611980])
        (474985 'end of statement' result[57866] d[57894] d[57894])
      }
      label _unused_continueLabel[57899]
      label _breakLabel[57898]
    }
    (508375 'move' ret[508370](508374 'deref' result[57866]))
    gotoReturn _end_+[508368] _end_+[508368]
    (474989 'end of statement' result[57866])
    label _end_+[508368]
    (508372 return ret[508370])
  }
  function -[57945](arg a[57942]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508381] "RVV" "temp"
    unknown result[57949] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611985] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611988 'move' call_tmp[611985](57948 'typeof' a[57942]))
    (540963 'default init var' result[57949] call_tmp[611985])
    (57952 'end of statement')
    {
      unknown d[57977] "dead at end of block" "insert auto destroy"
      (540965 'init var' d[57977] 0)
      (474991 'end of statement')
      unknown tmp[57978] "maybe param" "temp"
      unknown call_tmp[611992] "expr temp" "maybe param" "maybe type" "temp"
      (611995 'move' call_tmp[611992](57956 call size _mt[243] a[57942]))
      unknown call_tmp[611997] "expr temp" "maybe param" "maybe type" "temp"
      (612000 'move' call_tmp[611997](57960 call - call_tmp[611992] 1))
      (57990 'move' tmp[57978](57988 call chpl_compute_low_param_loop_bound 0 call_tmp[611997]))
      unknown tmp[57979] "maybe param" "temp"
      unknown call_tmp[612004] "expr temp" "maybe param" "maybe type" "temp"
      (612007 'move' call_tmp[612004](57997 call size _mt[243] a[57942]))
      unknown call_tmp[612009] "expr temp" "maybe param" "maybe type" "temp"
      (612012 'move' call_tmp[612009](57995 call - call_tmp[612004] 1))
      (58003 'move' tmp[57979](58001 call chpl_compute_high_param_loop_bound 0 call_tmp[612009]))
      unknown tmp[57980] "maybe param" "temp"
      (58006 'move' tmp[57980] 1)
      ParamForLoop[58008]
      { d[57977] tmp[57978] tmp[57979] tmp[57980]
        unknown call_tmp[612014] "expr temp" "maybe param" "maybe type" "temp"
        (612017 'move' call_tmp[612014](57967 call result[57949] d[57977]))
        unknown call_tmp[612019] "expr temp" "maybe param" "maybe type" "temp"
        (612022 'move' call_tmp[612019](57971 call a[57942] d[57977]))
        unknown call_tmp[612024] "expr temp" "maybe param" "maybe type" "temp"
        (612027 'move' call_tmp[612024](57972 call - call_tmp[612019]))
        (57974 call = call_tmp[612014] call_tmp[612024])
        (474992 'end of statement' result[57949] d[57977] d[57977])
      }
      label _unused_continueLabel[57982]
      label _breakLabel[57981]
    }
    (508386 'move' ret[508381](508385 'deref' result[57949]))
    gotoReturn _end_-[508379] _end_-[508379]
    (474996 'end of statement' result[57949])
    label _end_-[508379]
    (508383 return ret[508381])
  }
  function ~[58028](arg a[58025]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508392] "RVV" "temp"
    unknown result[58032] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612029] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (612032 'move' call_tmp[612029](58031 'typeof' a[58025]))
    (540967 'default init var' result[58032] call_tmp[612029])
    (58035 'end of statement')
    {
      unknown d[58060] "dead at end of block" "insert auto destroy"
      (540969 'init var' d[58060] 0)
      (474998 'end of statement')
      unknown tmp[58061] "maybe param" "temp"
      unknown call_tmp[612036] "expr temp" "maybe param" "maybe type" "temp"
      (612039 'move' call_tmp[612036](58039 call size _mt[243] a[58025]))
      unknown call_tmp[612041] "expr temp" "maybe param" "maybe type" "temp"
      (612044 'move' call_tmp[612041](58043 call - call_tmp[612036] 1))
      (58073 'move' tmp[58061](58071 call chpl_compute_low_param_loop_bound 0 call_tmp[612041]))
      unknown tmp[58062] "maybe param" "temp"
      unknown call_tmp[612048] "expr temp" "maybe param" "maybe type" "temp"
      (612051 'move' call_tmp[612048](58080 call size _mt[243] a[58025]))
      unknown call_tmp[612053] "expr temp" "maybe param" "maybe type" "temp"
      (612056 'move' call_tmp[612053](58078 call - call_tmp[612048] 1))
      (58086 'move' tmp[58062](58084 call chpl_compute_high_param_loop_bound 0 call_tmp[612053]))
      unknown tmp[58063] "maybe param" "temp"
      (58089 'move' tmp[58063] 1)
      ParamForLoop[58091]
      { d[58060] tmp[58061] tmp[58062] tmp[58063]
        unknown call_tmp[612058] "expr temp" "maybe param" "maybe type" "temp"
        (612061 'move' call_tmp[612058](58050 call result[58032] d[58060]))
        unknown call_tmp[612063] "expr temp" "maybe param" "maybe type" "temp"
        (612066 'move' call_tmp[612063](58054 call a[58025] d[58060]))
        unknown call_tmp[612068] "expr temp" "maybe param" "maybe type" "temp"
        (612071 'move' call_tmp[612068](58055 call ~ call_tmp[612063]))
        (58057 call = call_tmp[612058] call_tmp[612068])
        (474999 'end of statement' result[58032] d[58060] d[58060])
      }
      label _unused_continueLabel[58065]
      label _breakLabel[58064]
    }
    (508397 'move' ret[508392](508396 'deref' result[58032]))
    gotoReturn _end_~[508390] _end_~[508390]
    (475003 'end of statement' result[58032])
    label _end_~[508390]
    (508394 return ret[508392])
  }
  function ![58111](arg a[58108]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508403] "RVV" "temp"
    unknown result[58115] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612073] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (612076 'move' call_tmp[612073](58114 'typeof' a[58108]))
    (540971 'default init var' result[58115] call_tmp[612073])
    (58118 'end of statement')
    {
      unknown d[58143] "dead at end of block" "insert auto destroy"
      (540973 'init var' d[58143] 0)
      (475005 'end of statement')
      unknown tmp[58144] "maybe param" "temp"
      unknown call_tmp[612080] "expr temp" "maybe param" "maybe type" "temp"
      (612083 'move' call_tmp[612080](58122 call size _mt[243] a[58108]))
      unknown call_tmp[612085] "expr temp" "maybe param" "maybe type" "temp"
      (612088 'move' call_tmp[612085](58126 call - call_tmp[612080] 1))
      (58156 'move' tmp[58144](58154 call chpl_compute_low_param_loop_bound 0 call_tmp[612085]))
      unknown tmp[58145] "maybe param" "temp"
      unknown call_tmp[612092] "expr temp" "maybe param" "maybe type" "temp"
      (612095 'move' call_tmp[612092](58163 call size _mt[243] a[58108]))
      unknown call_tmp[612097] "expr temp" "maybe param" "maybe type" "temp"
      (612100 'move' call_tmp[612097](58161 call - call_tmp[612092] 1))
      (58169 'move' tmp[58145](58167 call chpl_compute_high_param_loop_bound 0 call_tmp[612097]))
      unknown tmp[58146] "maybe param" "temp"
      (58172 'move' tmp[58146] 1)
      ParamForLoop[58174]
      { d[58143] tmp[58144] tmp[58145] tmp[58146]
        unknown call_tmp[612102] "expr temp" "maybe param" "maybe type" "temp"
        (612105 'move' call_tmp[612102](58133 call result[58115] d[58143]))
        unknown call_tmp[612107] "expr temp" "maybe param" "maybe type" "temp"
        (612110 'move' call_tmp[612107](58137 call a[58108] d[58143]))
        unknown call_tmp[612112] "expr temp" "maybe param" "maybe type" "temp"
        (612115 'move' call_tmp[612112](58138 call ! call_tmp[612107]))
        (58140 call = call_tmp[612102] call_tmp[612112])
        (475006 'end of statement' result[58115] d[58143] d[58143])
      }
      label _unused_continueLabel[58148]
      label _breakLabel[58147]
    }
    (508408 'move' ret[508403](508407 'deref' result[58115]))
    gotoReturn _end_![508401] _end_![508401]
    (475010 'end of statement' result[58115])
    label _end_![508401]
    (508405 return ret[508403])
  }
  function max[58192](arg t[58190]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508414] "RVV" "temp"
    unknown result[58200] "dead at end of block" "insert auto destroy"
    (540975 'default init var' result[58200] t[58190])
    (58203 'end of statement')
    {
      unknown i[58230] "dead at end of block" "insert auto destroy"
      (540977 'init var' i[58230] 0)
      (475012 'end of statement')
      unknown tmp[58231] "maybe param" "temp"
      unknown call_tmp[612119] "expr temp" "maybe param" "maybe type" "temp"
      (612122 'move' call_tmp[612119](58207 call size _mt[243] result[58200]))
      unknown call_tmp[612124] "expr temp" "maybe param" "maybe type" "temp"
      (612127 'move' call_tmp[612124](58211 call - call_tmp[612119] 1))
      (58243 'move' tmp[58231](58241 call chpl_compute_low_param_loop_bound 0 call_tmp[612124]))
      unknown tmp[58232] "maybe param" "temp"
      unknown call_tmp[612131] "expr temp" "maybe param" "maybe type" "temp"
      (612134 'move' call_tmp[612131](58250 call size _mt[243] result[58200]))
      unknown call_tmp[612136] "expr temp" "maybe param" "maybe type" "temp"
      (612139 'move' call_tmp[612136](58248 call - call_tmp[612131] 1))
      (58256 'move' tmp[58232](58254 call chpl_compute_high_param_loop_bound 0 call_tmp[612136]))
      unknown tmp[58233] "maybe param" "temp"
      (58259 'move' tmp[58233] 1)
      ParamForLoop[58261]
      { i[58230] tmp[58231] tmp[58232] tmp[58233]
        {
          unknown call_tmp[612141] "expr temp" "maybe param" "maybe type" "temp"
          (612144 'move' call_tmp[612141](58218 call result[58200] i[58230]))
          unknown call_tmp[612146] "expr temp" "maybe param" "maybe type" "temp"
          (612149 'move' call_tmp[612146](58223 call t[58190] i[58230]))
          unknown call_tmp[612151] "expr temp" "maybe param" "maybe type" "temp"
          (612154 'move' call_tmp[612151](58225 call max call_tmp[612146]))
          (58226 call = call_tmp[612141] call_tmp[612151])
          (475013 'end of statement' result[58200] i[58230] i[58230])
        }
      }
      label _unused_continueLabel[58235]
      label _breakLabel[58234]
    }
    (508420 'move' ret[508414](508419 'coerce' result[58200] t[58190]))
    gotoReturn _end_max[508412] _end_max[508412]
    (475017 'end of statement' result[58200])
    label _end_max[508412]
    (508416 return ret[508414])
  }
  where {
    (58198 call isTupleType t[58190])
  }
  { scopeless type
    t[58190]
  }
  function min[58281](arg t[58279]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508426] "RVV" "temp"
    unknown result[58289] "dead at end of block" "insert auto destroy"
    (540979 'default init var' result[58289] t[58279])
    (58292 'end of statement')
    {
      unknown i[58319] "dead at end of block" "insert auto destroy"
      (540981 'init var' i[58319] 0)
      (475019 'end of statement')
      unknown tmp[58320] "maybe param" "temp"
      unknown call_tmp[612158] "expr temp" "maybe param" "maybe type" "temp"
      (612161 'move' call_tmp[612158](58296 call size _mt[243] result[58289]))
      unknown call_tmp[612163] "expr temp" "maybe param" "maybe type" "temp"
      (612166 'move' call_tmp[612163](58300 call - call_tmp[612158] 1))
      (58332 'move' tmp[58320](58330 call chpl_compute_low_param_loop_bound 0 call_tmp[612163]))
      unknown tmp[58321] "maybe param" "temp"
      unknown call_tmp[612170] "expr temp" "maybe param" "maybe type" "temp"
      (612173 'move' call_tmp[612170](58339 call size _mt[243] result[58289]))
      unknown call_tmp[612175] "expr temp" "maybe param" "maybe type" "temp"
      (612178 'move' call_tmp[612175](58337 call - call_tmp[612170] 1))
      (58345 'move' tmp[58321](58343 call chpl_compute_high_param_loop_bound 0 call_tmp[612175]))
      unknown tmp[58322] "maybe param" "temp"
      (58348 'move' tmp[58322] 1)
      ParamForLoop[58350]
      { i[58319] tmp[58320] tmp[58321] tmp[58322]
        {
          unknown call_tmp[612180] "expr temp" "maybe param" "maybe type" "temp"
          (612183 'move' call_tmp[612180](58307 call result[58289] i[58319]))
          unknown call_tmp[612185] "expr temp" "maybe param" "maybe type" "temp"
          (612188 'move' call_tmp[612185](58312 call t[58279] i[58319]))
          unknown call_tmp[612190] "expr temp" "maybe param" "maybe type" "temp"
          (612193 'move' call_tmp[612190](58314 call min call_tmp[612185]))
          (58315 call = call_tmp[612180] call_tmp[612190])
          (475020 'end of statement' result[58289] i[58319] i[58319])
        }
      }
      label _unused_continueLabel[58324]
      label _breakLabel[58323]
    }
    (508432 'move' ret[508426](508431 'coerce' result[58289] t[58279]))
    gotoReturn _end_min[508424] _end_min[508424]
    (475024 'end of statement' result[58289])
    label _end_min[508424]
    (508428 return ret[508426])
  }
  where {
    (58287 call isTupleType t[58279])
  }
  { scopeless type
    t[58279]
  }
  function chpl_TwoHomogTuples[58370](arg t1[58368]:_any[178](?), arg t2[58372]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508438] "RVV" "param" "temp"
    unknown tmp[419057] "maybe param" "temp"
    (419068 'move' tmp[419057](58377 call isHomogeneousTuple t1[58368]))
    unknown call_tmp[612195] "expr temp" "maybe param" "maybe type" "temp"
    (612198 'move' call_tmp[612195](419070 call _cond_invalid tmp[419057]))
    if call_tmp[612195]
    {
      (419073 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555184] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555185] "maybe param" "temp"
    unknown call_tmp[612200] "expr temp" "maybe param" "maybe type" "temp"
    (612203 'move' call_tmp[612200](419058 call isTrue tmp[419057]))
    (555190 'move' tmp[555185](555188 call _cond_test call_tmp[612200]))
    if tmp[555185]
    {
      unknown tmp[555192] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[612205] "expr temp" "maybe param" "maybe type" "temp"
      (612208 'move' call_tmp[612205](58381 call isHomogeneousTuple t2[58372]))
      (555194 'move' tmp[555192](419061 call isTrue call_tmp[612205]))
      (555199 'move' tmp[555184](555196 '_paramFoldLogical' tmp[555185] tmp[555192]))
    }
    {
      (555204 'move' tmp[555184](555201 '_paramFoldLogical' tmp[555185] 0))
    }
    (508443 'move' ret[508438](508442 'deref' tmp[555184]))
    (508440 return ret[508438])
  }
  function +[58395](arg a[58392]:_tuple[56202](?), arg b[58398]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508447] "RVV" "temp"
    unknown call_tmp[612212] "expr temp" "maybe param" "maybe type" "temp"
    (612215 'move' call_tmp[612212](58407 call size _mt[243] a[58392]))
    unknown call_tmp[612219] "expr temp" "maybe param" "maybe type" "temp"
    (612222 'move' call_tmp[612219](58411 call size _mt[243] b[58398]))
    unknown call_tmp[612224] "expr temp" "maybe param" "maybe type" "temp"
    (612227 'move' call_tmp[612224](58414 call != call_tmp[612212] call_tmp[612219]))
    unknown call_tmp[612229] "expr temp" "maybe param" "maybe type" "temp"
    (612232 'move' call_tmp[612229](58437 call _cond_test call_tmp[612224]))
    if call_tmp[612229]
    {
      (58435 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491703] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612234] "expr temp" "maybe param" "maybe type" "temp"
      (612237 'move' call_tmp[612234](58450 call a[58392] 0))
      unknown call_tmp[612239] "expr temp" "maybe param" "maybe type" "temp"
      (612242 'move' call_tmp[612239](58454 call b[58398] 0))
      unknown call_tmp[612244] "expr temp" "maybe param" "maybe type" "temp"
      (612247 'move' call_tmp[612244](58455 call + call_tmp[612234] call_tmp[612239]))
      (491707 'move' call_type_tmp[491703](58457 'typeof' call_tmp[612244]))
    }
    unknown result[58460] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612251] "expr temp" "maybe param" "maybe type" "temp"
    (612254 'move' call_tmp[612251](58444 call size _mt[243] a[58392]))
    unknown call_tmp[612256] "expr temp" "maybe param" "maybe type" "temp"
    (612259 'move' call_tmp[612256](58458 call * call_tmp[612251] call_type_tmp[491703]))
    (540983 'default init var' result[58460] call_tmp[612256])
    (58463 'end of statement')
    {
      unknown d[58491] "dead at end of block" "insert auto destroy"
      (540985 'init var' d[58491] 0)
      (475029 'end of statement')
      unknown tmp[58492] "maybe param" "temp"
      unknown call_tmp[612263] "expr temp" "maybe param" "maybe type" "temp"
      (612266 'move' call_tmp[612263](58466 call size _mt[243] a[58392]))
      unknown call_tmp[612268] "expr temp" "maybe param" "maybe type" "temp"
      (612271 'move' call_tmp[612268](58470 call - call_tmp[612263] 1))
      (58504 'move' tmp[58492](58502 call chpl_compute_low_param_loop_bound 0 call_tmp[612268]))
      unknown tmp[58493] "maybe param" "temp"
      unknown call_tmp[612275] "expr temp" "maybe param" "maybe type" "temp"
      (612278 'move' call_tmp[612275](58511 call size _mt[243] a[58392]))
      unknown call_tmp[612280] "expr temp" "maybe param" "maybe type" "temp"
      (612283 'move' call_tmp[612280](58509 call - call_tmp[612275] 1))
      (58517 'move' tmp[58493](58515 call chpl_compute_high_param_loop_bound 0 call_tmp[612280]))
      unknown tmp[58494] "maybe param" "temp"
      (58520 'move' tmp[58494] 1)
      ParamForLoop[58522]
      { d[58491] tmp[58492] tmp[58493] tmp[58494]
        unknown call_tmp[612285] "expr temp" "maybe param" "maybe type" "temp"
        (612288 'move' call_tmp[612285](58477 call result[58460] d[58491]))
        unknown call_tmp[612290] "expr temp" "maybe param" "maybe type" "temp"
        (612293 'move' call_tmp[612290](58481 call a[58392] d[58491]))
        unknown call_tmp[612295] "expr temp" "maybe param" "maybe type" "temp"
        (612298 'move' call_tmp[612295](58485 call b[58398] d[58491]))
        unknown call_tmp[612300] "expr temp" "maybe param" "maybe type" "temp"
        (612303 'move' call_tmp[612300](58486 call + call_tmp[612290] call_tmp[612295]))
        (58488 call = call_tmp[612285] call_tmp[612300])
        (475030 'end of statement' result[58460] d[58491] d[58491] d[58491])
      }
      label _unused_continueLabel[58496]
      label _breakLabel[58495]
    }
    (508452 'move' ret[508447](508451 'deref' result[58460]))
    gotoReturn _end_+[508445] _end_+[508445]
    (475035 'end of statement' result[58460])
    label _end_+[508445]
    (508449 return ret[508447])
  }
  where {
    (58405 call chpl_TwoHomogTuples a[58392] b[58398])
  }
  function +[58543](arg a[58540]:_tuple[56202](?), arg b[58546]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508458] "RVV" "temp"
    unknown call_tmp[612307] "expr temp" "maybe param" "maybe type" "temp"
    (612310 'move' call_tmp[612307](58550 call size _mt[243] a[58540]))
    unknown call_tmp[612314] "expr temp" "maybe param" "maybe type" "temp"
    (612317 'move' call_tmp[612314](58554 call size _mt[243] b[58546]))
    unknown call_tmp[612319] "expr temp" "maybe param" "maybe type" "temp"
    (612322 'move' call_tmp[612319](58557 call != call_tmp[612307] call_tmp[612314]))
    unknown call_tmp[612324] "expr temp" "maybe param" "maybe type" "temp"
    (612327 'move' call_tmp[612324](58564 call _cond_test call_tmp[612319]))
    if call_tmp[612324]
    {
      (58562 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612331] "expr temp" "maybe param" "maybe type" "temp"
    (612334 'move' call_tmp[612331](58571 call size _mt[243] a[58540]))
    unknown call_tmp[612336] "expr temp" "maybe param" "maybe type" "temp"
    (612339 'move' call_tmp[612336](58575 call == call_tmp[612331] 1))
    unknown call_tmp[612341] "expr temp" "maybe param" "maybe type" "temp"
    (612344 'move' call_tmp[612341](58617 call _cond_test call_tmp[612336]))
    if call_tmp[612341]
    {
      unknown call_tmp[612346] "expr temp" "maybe param" "maybe type" "temp"
      (612349 'move' call_tmp[612346](58580 call a[58540] 0))
      unknown call_tmp[612351] "expr temp" "maybe param" "maybe type" "temp"
      (612354 'move' call_tmp[612351](58584 call b[58546] 0))
      unknown call_tmp[612356] "expr temp" "maybe param" "maybe type" "temp"
      (612359 'move' call_tmp[612356](58585 call + call_tmp[612346] call_tmp[612351]))
      unknown call_tmp[612361] "expr temp" "maybe param" "maybe type" "temp"
      (612364 'move' call_tmp[612361](58587 call _build_tuple call_tmp[612356]))
      (508463 'move' ret[508458](508462 'deref' call_tmp[612361]))
      gotoReturn _end_+[508456] _end_+[508456]
    }
    {
      unknown call_tmp[612366] "expr temp" "maybe param" "maybe type" "temp"
      (612369 'move' call_tmp[612366](58594 call a[58540] 0))
      unknown call_tmp[612371] "expr temp" "maybe param" "maybe type" "temp"
      (612374 'move' call_tmp[612371](58598 call b[58546] 0))
      unknown call_tmp[612376] "expr temp" "maybe param" "maybe type" "temp"
      (612379 'move' call_tmp[612376](58599 call + call_tmp[612366] call_tmp[612371]))
      unknown call_tmp[612381] "expr temp" "maybe param" "maybe type" "temp"
      (612384 'move' call_tmp[612381](58604 call chpl__tupleRest a[58540]))
      unknown call_tmp[612386] "expr temp" "maybe param" "maybe type" "temp"
      (612389 'move' call_tmp[612386](58608 call chpl__tupleRest b[58546]))
      unknown call_tmp[612391] "expr temp" "maybe param" "maybe type" "temp"
      (612394 'move' call_tmp[612391](58609 call + call_tmp[612381] call_tmp[612386]))
      unknown call_tmp[612396] "expr temp" "maybe param" "maybe type" "temp"
      (612399 'move' call_tmp[612396](58613 call _build_tuple call_tmp[612376](58611 'expand_tuple' call_tmp[612391])))
      (508468 'move' ret[508458](508467 'deref' call_tmp[612396]))
      gotoReturn _end_+[508456] _end_+[508456]
    }
    label _end_+[508456]
    (508460 return ret[508458])
  }
  function -[58631](arg a[58628]:_tuple[56202](?), arg b[58634]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508474] "RVV" "temp"
    unknown call_tmp[612403] "expr temp" "maybe param" "maybe type" "temp"
    (612406 'move' call_tmp[612403](58643 call size _mt[243] a[58628]))
    unknown call_tmp[612410] "expr temp" "maybe param" "maybe type" "temp"
    (612413 'move' call_tmp[612410](58647 call size _mt[243] b[58634]))
    unknown call_tmp[612415] "expr temp" "maybe param" "maybe type" "temp"
    (612418 'move' call_tmp[612415](58650 call != call_tmp[612403] call_tmp[612410]))
    unknown call_tmp[612420] "expr temp" "maybe param" "maybe type" "temp"
    (612423 'move' call_tmp[612420](58673 call _cond_test call_tmp[612415]))
    if call_tmp[612420]
    {
      (58671 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491709] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612425] "expr temp" "maybe param" "maybe type" "temp"
      (612428 'move' call_tmp[612425](58686 call a[58628] 0))
      unknown call_tmp[612430] "expr temp" "maybe param" "maybe type" "temp"
      (612433 'move' call_tmp[612430](58690 call b[58634] 0))
      unknown call_tmp[612435] "expr temp" "maybe param" "maybe type" "temp"
      (612438 'move' call_tmp[612435](58691 call - call_tmp[612425] call_tmp[612430]))
      (491713 'move' call_type_tmp[491709](58693 'typeof' call_tmp[612435]))
    }
    unknown result[58696] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612442] "expr temp" "maybe param" "maybe type" "temp"
    (612445 'move' call_tmp[612442](58680 call size _mt[243] a[58628]))
    unknown call_tmp[612447] "expr temp" "maybe param" "maybe type" "temp"
    (612450 'move' call_tmp[612447](58694 call * call_tmp[612442] call_type_tmp[491709]))
    (540987 'default init var' result[58696] call_tmp[612447])
    (58699 'end of statement')
    {
      unknown d[58727] "dead at end of block" "insert auto destroy"
      (540989 'init var' d[58727] 0)
      (475041 'end of statement')
      unknown tmp[58728] "maybe param" "temp"
      unknown call_tmp[612454] "expr temp" "maybe param" "maybe type" "temp"
      (612457 'move' call_tmp[612454](58702 call size _mt[243] a[58628]))
      unknown call_tmp[612459] "expr temp" "maybe param" "maybe type" "temp"
      (612462 'move' call_tmp[612459](58706 call - call_tmp[612454] 1))
      (58740 'move' tmp[58728](58738 call chpl_compute_low_param_loop_bound 0 call_tmp[612459]))
      unknown tmp[58729] "maybe param" "temp"
      unknown call_tmp[612466] "expr temp" "maybe param" "maybe type" "temp"
      (612469 'move' call_tmp[612466](58747 call size _mt[243] a[58628]))
      unknown call_tmp[612471] "expr temp" "maybe param" "maybe type" "temp"
      (612474 'move' call_tmp[612471](58745 call - call_tmp[612466] 1))
      (58753 'move' tmp[58729](58751 call chpl_compute_high_param_loop_bound 0 call_tmp[612471]))
      unknown tmp[58730] "maybe param" "temp"
      (58756 'move' tmp[58730] 1)
      ParamForLoop[58758]
      { d[58727] tmp[58728] tmp[58729] tmp[58730]
        unknown call_tmp[612476] "expr temp" "maybe param" "maybe type" "temp"
        (612479 'move' call_tmp[612476](58713 call result[58696] d[58727]))
        unknown call_tmp[612481] "expr temp" "maybe param" "maybe type" "temp"
        (612484 'move' call_tmp[612481](58717 call a[58628] d[58727]))
        unknown call_tmp[612486] "expr temp" "maybe param" "maybe type" "temp"
        (612489 'move' call_tmp[612486](58721 call b[58634] d[58727]))
        unknown call_tmp[612491] "expr temp" "maybe param" "maybe type" "temp"
        (612494 'move' call_tmp[612491](58722 call - call_tmp[612481] call_tmp[612486]))
        (58724 call = call_tmp[612476] call_tmp[612491])
        (475042 'end of statement' result[58696] d[58727] d[58727] d[58727])
      }
      label _unused_continueLabel[58732]
      label _breakLabel[58731]
    }
    (508479 'move' ret[508474](508478 'deref' result[58696]))
    gotoReturn _end_-[508472] _end_-[508472]
    (475047 'end of statement' result[58696])
    label _end_-[508472]
    (508476 return ret[508474])
  }
  where {
    (58641 call chpl_TwoHomogTuples a[58628] b[58634])
  }
  function -[58779](arg a[58776]:_tuple[56202](?), arg b[58782]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508485] "RVV" "temp"
    unknown call_tmp[612498] "expr temp" "maybe param" "maybe type" "temp"
    (612501 'move' call_tmp[612498](58786 call size _mt[243] a[58776]))
    unknown call_tmp[612505] "expr temp" "maybe param" "maybe type" "temp"
    (612508 'move' call_tmp[612505](58790 call size _mt[243] b[58782]))
    unknown call_tmp[612510] "expr temp" "maybe param" "maybe type" "temp"
    (612513 'move' call_tmp[612510](58793 call != call_tmp[612498] call_tmp[612505]))
    unknown call_tmp[612515] "expr temp" "maybe param" "maybe type" "temp"
    (612518 'move' call_tmp[612515](58800 call _cond_test call_tmp[612510]))
    if call_tmp[612515]
    {
      (58798 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612522] "expr temp" "maybe param" "maybe type" "temp"
    (612525 'move' call_tmp[612522](58807 call size _mt[243] a[58776]))
    unknown call_tmp[612527] "expr temp" "maybe param" "maybe type" "temp"
    (612530 'move' call_tmp[612527](58811 call == call_tmp[612522] 1))
    unknown call_tmp[612532] "expr temp" "maybe param" "maybe type" "temp"
    (612535 'move' call_tmp[612532](58853 call _cond_test call_tmp[612527]))
    if call_tmp[612532]
    {
      unknown call_tmp[612537] "expr temp" "maybe param" "maybe type" "temp"
      (612540 'move' call_tmp[612537](58816 call a[58776] 0))
      unknown call_tmp[612542] "expr temp" "maybe param" "maybe type" "temp"
      (612545 'move' call_tmp[612542](58820 call b[58782] 0))
      unknown call_tmp[612547] "expr temp" "maybe param" "maybe type" "temp"
      (612550 'move' call_tmp[612547](58821 call - call_tmp[612537] call_tmp[612542]))
      unknown call_tmp[612552] "expr temp" "maybe param" "maybe type" "temp"
      (612555 'move' call_tmp[612552](58823 call _build_tuple call_tmp[612547]))
      (508490 'move' ret[508485](508489 'deref' call_tmp[612552]))
      gotoReturn _end_-[508483] _end_-[508483]
    }
    {
      unknown call_tmp[612557] "expr temp" "maybe param" "maybe type" "temp"
      (612560 'move' call_tmp[612557](58830 call a[58776] 0))
      unknown call_tmp[612562] "expr temp" "maybe param" "maybe type" "temp"
      (612565 'move' call_tmp[612562](58834 call b[58782] 0))
      unknown call_tmp[612567] "expr temp" "maybe param" "maybe type" "temp"
      (612570 'move' call_tmp[612567](58835 call - call_tmp[612557] call_tmp[612562]))
      unknown call_tmp[612572] "expr temp" "maybe param" "maybe type" "temp"
      (612575 'move' call_tmp[612572](58840 call chpl__tupleRest a[58776]))
      unknown call_tmp[612577] "expr temp" "maybe param" "maybe type" "temp"
      (612580 'move' call_tmp[612577](58844 call chpl__tupleRest b[58782]))
      unknown call_tmp[612582] "expr temp" "maybe param" "maybe type" "temp"
      (612585 'move' call_tmp[612582](58845 call - call_tmp[612572] call_tmp[612577]))
      unknown call_tmp[612587] "expr temp" "maybe param" "maybe type" "temp"
      (612590 'move' call_tmp[612587](58849 call _build_tuple call_tmp[612567](58847 'expand_tuple' call_tmp[612582])))
      (508495 'move' ret[508485](508494 'deref' call_tmp[612587]))
      gotoReturn _end_-[508483] _end_-[508483]
    }
    label _end_-[508483]
    (508487 return ret[508485])
  }
  function *[58867](arg a[58864]:_tuple[56202](?), arg b[58870]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508501] "RVV" "temp"
    unknown call_tmp[612594] "expr temp" "maybe param" "maybe type" "temp"
    (612597 'move' call_tmp[612594](58879 call size _mt[243] a[58864]))
    unknown call_tmp[612601] "expr temp" "maybe param" "maybe type" "temp"
    (612604 'move' call_tmp[612601](58883 call size _mt[243] b[58870]))
    unknown call_tmp[612606] "expr temp" "maybe param" "maybe type" "temp"
    (612609 'move' call_tmp[612606](58886 call != call_tmp[612594] call_tmp[612601]))
    unknown call_tmp[612611] "expr temp" "maybe param" "maybe type" "temp"
    (612614 'move' call_tmp[612611](58909 call _cond_test call_tmp[612606]))
    if call_tmp[612611]
    {
      (58907 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491715] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612616] "expr temp" "maybe param" "maybe type" "temp"
      (612619 'move' call_tmp[612616](58922 call a[58864] 0))
      unknown call_tmp[612621] "expr temp" "maybe param" "maybe type" "temp"
      (612624 'move' call_tmp[612621](58926 call b[58870] 0))
      unknown call_tmp[612626] "expr temp" "maybe param" "maybe type" "temp"
      (612629 'move' call_tmp[612626](58927 call * call_tmp[612616] call_tmp[612621]))
      (491719 'move' call_type_tmp[491715](58929 'typeof' call_tmp[612626]))
    }
    unknown result[58932] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612633] "expr temp" "maybe param" "maybe type" "temp"
    (612636 'move' call_tmp[612633](58916 call size _mt[243] a[58864]))
    unknown call_tmp[612638] "expr temp" "maybe param" "maybe type" "temp"
    (612641 'move' call_tmp[612638](58930 call * call_tmp[612633] call_type_tmp[491715]))
    (540991 'default init var' result[58932] call_tmp[612638])
    (58935 'end of statement')
    {
      unknown d[58963] "dead at end of block" "insert auto destroy"
      (540993 'init var' d[58963] 0)
      (475053 'end of statement')
      unknown tmp[58964] "maybe param" "temp"
      unknown call_tmp[612645] "expr temp" "maybe param" "maybe type" "temp"
      (612648 'move' call_tmp[612645](58938 call size _mt[243] a[58864]))
      unknown call_tmp[612650] "expr temp" "maybe param" "maybe type" "temp"
      (612653 'move' call_tmp[612650](58942 call - call_tmp[612645] 1))
      (58976 'move' tmp[58964](58974 call chpl_compute_low_param_loop_bound 0 call_tmp[612650]))
      unknown tmp[58965] "maybe param" "temp"
      unknown call_tmp[612657] "expr temp" "maybe param" "maybe type" "temp"
      (612660 'move' call_tmp[612657](58983 call size _mt[243] a[58864]))
      unknown call_tmp[612662] "expr temp" "maybe param" "maybe type" "temp"
      (612665 'move' call_tmp[612662](58981 call - call_tmp[612657] 1))
      (58989 'move' tmp[58965](58987 call chpl_compute_high_param_loop_bound 0 call_tmp[612662]))
      unknown tmp[58966] "maybe param" "temp"
      (58992 'move' tmp[58966] 1)
      ParamForLoop[58994]
      { d[58963] tmp[58964] tmp[58965] tmp[58966]
        unknown call_tmp[612667] "expr temp" "maybe param" "maybe type" "temp"
        (612670 'move' call_tmp[612667](58949 call result[58932] d[58963]))
        unknown call_tmp[612672] "expr temp" "maybe param" "maybe type" "temp"
        (612675 'move' call_tmp[612672](58953 call a[58864] d[58963]))
        unknown call_tmp[612677] "expr temp" "maybe param" "maybe type" "temp"
        (612680 'move' call_tmp[612677](58957 call b[58870] d[58963]))
        unknown call_tmp[612682] "expr temp" "maybe param" "maybe type" "temp"
        (612685 'move' call_tmp[612682](58958 call * call_tmp[612672] call_tmp[612677]))
        (58960 call = call_tmp[612667] call_tmp[612682])
        (475054 'end of statement' result[58932] d[58963] d[58963] d[58963])
      }
      label _unused_continueLabel[58968]
      label _breakLabel[58967]
    }
    (508506 'move' ret[508501](508505 'deref' result[58932]))
    gotoReturn _end_*[508499] _end_*[508499]
    (475059 'end of statement' result[58932])
    label _end_*[508499]
    (508503 return ret[508501])
  }
  where {
    (58877 call chpl_TwoHomogTuples a[58864] b[58870])
  }
  function *[59015](arg a[59012]:_tuple[56202](?), arg b[59018]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508512] "RVV" "temp"
    unknown call_tmp[612689] "expr temp" "maybe param" "maybe type" "temp"
    (612692 'move' call_tmp[612689](59022 call size _mt[243] a[59012]))
    unknown call_tmp[612696] "expr temp" "maybe param" "maybe type" "temp"
    (612699 'move' call_tmp[612696](59026 call size _mt[243] b[59018]))
    unknown call_tmp[612701] "expr temp" "maybe param" "maybe type" "temp"
    (612704 'move' call_tmp[612701](59029 call != call_tmp[612689] call_tmp[612696]))
    unknown call_tmp[612706] "expr temp" "maybe param" "maybe type" "temp"
    (612709 'move' call_tmp[612706](59036 call _cond_test call_tmp[612701]))
    if call_tmp[612706]
    {
      (59034 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612713] "expr temp" "maybe param" "maybe type" "temp"
    (612716 'move' call_tmp[612713](59043 call size _mt[243] a[59012]))
    unknown call_tmp[612718] "expr temp" "maybe param" "maybe type" "temp"
    (612721 'move' call_tmp[612718](59047 call == call_tmp[612713] 1))
    unknown call_tmp[612723] "expr temp" "maybe param" "maybe type" "temp"
    (612726 'move' call_tmp[612723](59089 call _cond_test call_tmp[612718]))
    if call_tmp[612723]
    {
      unknown call_tmp[612728] "expr temp" "maybe param" "maybe type" "temp"
      (612731 'move' call_tmp[612728](59052 call a[59012] 0))
      unknown call_tmp[612733] "expr temp" "maybe param" "maybe type" "temp"
      (612736 'move' call_tmp[612733](59056 call b[59018] 0))
      unknown call_tmp[612738] "expr temp" "maybe param" "maybe type" "temp"
      (612741 'move' call_tmp[612738](59057 call * call_tmp[612728] call_tmp[612733]))
      unknown call_tmp[612743] "expr temp" "maybe param" "maybe type" "temp"
      (612746 'move' call_tmp[612743](59059 call _build_tuple call_tmp[612738]))
      (508517 'move' ret[508512](508516 'deref' call_tmp[612743]))
      gotoReturn _end_*[508510] _end_*[508510]
    }
    {
      unknown call_tmp[612748] "expr temp" "maybe param" "maybe type" "temp"
      (612751 'move' call_tmp[612748](59066 call a[59012] 0))
      unknown call_tmp[612753] "expr temp" "maybe param" "maybe type" "temp"
      (612756 'move' call_tmp[612753](59070 call b[59018] 0))
      unknown call_tmp[612758] "expr temp" "maybe param" "maybe type" "temp"
      (612761 'move' call_tmp[612758](59071 call * call_tmp[612748] call_tmp[612753]))
      unknown call_tmp[612763] "expr temp" "maybe param" "maybe type" "temp"
      (612766 'move' call_tmp[612763](59076 call chpl__tupleRest a[59012]))
      unknown call_tmp[612768] "expr temp" "maybe param" "maybe type" "temp"
      (612771 'move' call_tmp[612768](59080 call chpl__tupleRest b[59018]))
      unknown call_tmp[612773] "expr temp" "maybe param" "maybe type" "temp"
      (612776 'move' call_tmp[612773](59081 call * call_tmp[612763] call_tmp[612768]))
      unknown call_tmp[612778] "expr temp" "maybe param" "maybe type" "temp"
      (612781 'move' call_tmp[612778](59085 call _build_tuple call_tmp[612758](59083 'expand_tuple' call_tmp[612773])))
      (508522 'move' ret[508512](508521 'deref' call_tmp[612778]))
      gotoReturn _end_*[508510] _end_*[508510]
    }
    label _end_*[508510]
    (508514 return ret[508512])
  }
  function /[59103](arg a[59100]:_tuple[56202](?), arg b[59106]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508528] "RVV" "temp"
    unknown call_tmp[612785] "expr temp" "maybe param" "maybe type" "temp"
    (612788 'move' call_tmp[612785](59115 call size _mt[243] a[59100]))
    unknown call_tmp[612792] "expr temp" "maybe param" "maybe type" "temp"
    (612795 'move' call_tmp[612792](59119 call size _mt[243] b[59106]))
    unknown call_tmp[612797] "expr temp" "maybe param" "maybe type" "temp"
    (612800 'move' call_tmp[612797](59122 call != call_tmp[612785] call_tmp[612792]))
    unknown call_tmp[612802] "expr temp" "maybe param" "maybe type" "temp"
    (612805 'move' call_tmp[612802](59145 call _cond_test call_tmp[612797]))
    if call_tmp[612802]
    {
      (59143 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491721] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612807] "expr temp" "maybe param" "maybe type" "temp"
      (612810 'move' call_tmp[612807](59158 call a[59100] 0))
      unknown call_tmp[612812] "expr temp" "maybe param" "maybe type" "temp"
      (612815 'move' call_tmp[612812](59162 call b[59106] 0))
      unknown call_tmp[612817] "expr temp" "maybe param" "maybe type" "temp"
      (612820 'move' call_tmp[612817](59163 call / call_tmp[612807] call_tmp[612812]))
      (491725 'move' call_type_tmp[491721](59165 'typeof' call_tmp[612817]))
    }
    unknown result[59168] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612824] "expr temp" "maybe param" "maybe type" "temp"
    (612827 'move' call_tmp[612824](59152 call size _mt[243] a[59100]))
    unknown call_tmp[612829] "expr temp" "maybe param" "maybe type" "temp"
    (612832 'move' call_tmp[612829](59166 call * call_tmp[612824] call_type_tmp[491721]))
    (540995 'default init var' result[59168] call_tmp[612829])
    (59171 'end of statement')
    {
      unknown d[59199] "dead at end of block" "insert auto destroy"
      (540997 'init var' d[59199] 0)
      (475065 'end of statement')
      unknown tmp[59200] "maybe param" "temp"
      unknown call_tmp[612836] "expr temp" "maybe param" "maybe type" "temp"
      (612839 'move' call_tmp[612836](59174 call size _mt[243] a[59100]))
      unknown call_tmp[612841] "expr temp" "maybe param" "maybe type" "temp"
      (612844 'move' call_tmp[612841](59178 call - call_tmp[612836] 1))
      (59212 'move' tmp[59200](59210 call chpl_compute_low_param_loop_bound 0 call_tmp[612841]))
      unknown tmp[59201] "maybe param" "temp"
      unknown call_tmp[612848] "expr temp" "maybe param" "maybe type" "temp"
      (612851 'move' call_tmp[612848](59219 call size _mt[243] a[59100]))
      unknown call_tmp[612853] "expr temp" "maybe param" "maybe type" "temp"
      (612856 'move' call_tmp[612853](59217 call - call_tmp[612848] 1))
      (59225 'move' tmp[59201](59223 call chpl_compute_high_param_loop_bound 0 call_tmp[612853]))
      unknown tmp[59202] "maybe param" "temp"
      (59228 'move' tmp[59202] 1)
      ParamForLoop[59230]
      { d[59199] tmp[59200] tmp[59201] tmp[59202]
        unknown call_tmp[612858] "expr temp" "maybe param" "maybe type" "temp"
        (612861 'move' call_tmp[612858](59185 call result[59168] d[59199]))
        unknown call_tmp[612863] "expr temp" "maybe param" "maybe type" "temp"
        (612866 'move' call_tmp[612863](59189 call a[59100] d[59199]))
        unknown call_tmp[612868] "expr temp" "maybe param" "maybe type" "temp"
        (612871 'move' call_tmp[612868](59193 call b[59106] d[59199]))
        unknown call_tmp[612873] "expr temp" "maybe param" "maybe type" "temp"
        (612876 'move' call_tmp[612873](59194 call / call_tmp[612863] call_tmp[612868]))
        (59196 call = call_tmp[612858] call_tmp[612873])
        (475066 'end of statement' result[59168] d[59199] d[59199] d[59199])
      }
      label _unused_continueLabel[59204]
      label _breakLabel[59203]
    }
    (508533 'move' ret[508528](508532 'deref' result[59168]))
    gotoReturn _end_/[508526] _end_/[508526]
    (475071 'end of statement' result[59168])
    label _end_/[508526]
    (508530 return ret[508528])
  }
  where {
    (59113 call chpl_TwoHomogTuples a[59100] b[59106])
  }
  function /[59251](arg a[59248]:_tuple[56202](?), arg b[59254]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508539] "RVV" "temp"
    unknown call_tmp[612880] "expr temp" "maybe param" "maybe type" "temp"
    (612883 'move' call_tmp[612880](59258 call size _mt[243] a[59248]))
    unknown call_tmp[612887] "expr temp" "maybe param" "maybe type" "temp"
    (612890 'move' call_tmp[612887](59262 call size _mt[243] b[59254]))
    unknown call_tmp[612892] "expr temp" "maybe param" "maybe type" "temp"
    (612895 'move' call_tmp[612892](59265 call != call_tmp[612880] call_tmp[612887]))
    unknown call_tmp[612897] "expr temp" "maybe param" "maybe type" "temp"
    (612900 'move' call_tmp[612897](59272 call _cond_test call_tmp[612892]))
    if call_tmp[612897]
    {
      (59270 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612904] "expr temp" "maybe param" "maybe type" "temp"
    (612907 'move' call_tmp[612904](59279 call size _mt[243] a[59248]))
    unknown call_tmp[612909] "expr temp" "maybe param" "maybe type" "temp"
    (612912 'move' call_tmp[612909](59283 call == call_tmp[612904] 1))
    unknown call_tmp[612914] "expr temp" "maybe param" "maybe type" "temp"
    (612917 'move' call_tmp[612914](59325 call _cond_test call_tmp[612909]))
    if call_tmp[612914]
    {
      unknown call_tmp[612919] "expr temp" "maybe param" "maybe type" "temp"
      (612922 'move' call_tmp[612919](59288 call a[59248] 0))
      unknown call_tmp[612924] "expr temp" "maybe param" "maybe type" "temp"
      (612927 'move' call_tmp[612924](59292 call b[59254] 0))
      unknown call_tmp[612929] "expr temp" "maybe param" "maybe type" "temp"
      (612932 'move' call_tmp[612929](59293 call / call_tmp[612919] call_tmp[612924]))
      unknown call_tmp[612934] "expr temp" "maybe param" "maybe type" "temp"
      (612937 'move' call_tmp[612934](59295 call _build_tuple call_tmp[612929]))
      (508544 'move' ret[508539](508543 'deref' call_tmp[612934]))
      gotoReturn _end_/[508537] _end_/[508537]
    }
    {
      unknown call_tmp[612939] "expr temp" "maybe param" "maybe type" "temp"
      (612942 'move' call_tmp[612939](59302 call a[59248] 0))
      unknown call_tmp[612944] "expr temp" "maybe param" "maybe type" "temp"
      (612947 'move' call_tmp[612944](59306 call b[59254] 0))
      unknown call_tmp[612949] "expr temp" "maybe param" "maybe type" "temp"
      (612952 'move' call_tmp[612949](59307 call / call_tmp[612939] call_tmp[612944]))
      unknown call_tmp[612954] "expr temp" "maybe param" "maybe type" "temp"
      (612957 'move' call_tmp[612954](59312 call chpl__tupleRest a[59248]))
      unknown call_tmp[612959] "expr temp" "maybe param" "maybe type" "temp"
      (612962 'move' call_tmp[612959](59316 call chpl__tupleRest b[59254]))
      unknown call_tmp[612964] "expr temp" "maybe param" "maybe type" "temp"
      (612967 'move' call_tmp[612964](59317 call / call_tmp[612954] call_tmp[612959]))
      unknown call_tmp[612969] "expr temp" "maybe param" "maybe type" "temp"
      (612972 'move' call_tmp[612969](59321 call _build_tuple call_tmp[612949](59319 'expand_tuple' call_tmp[612964])))
      (508549 'move' ret[508539](508548 'deref' call_tmp[612969]))
      gotoReturn _end_/[508537] _end_/[508537]
    }
    label _end_/[508537]
    (508541 return ret[508539])
  }
  function %[59339](arg a[59336]:_tuple[56202](?), arg b[59342]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508555] "RVV" "temp"
    unknown call_tmp[612976] "expr temp" "maybe param" "maybe type" "temp"
    (612979 'move' call_tmp[612976](59351 call size _mt[243] a[59336]))
    unknown call_tmp[612983] "expr temp" "maybe param" "maybe type" "temp"
    (612986 'move' call_tmp[612983](59355 call size _mt[243] b[59342]))
    unknown call_tmp[612988] "expr temp" "maybe param" "maybe type" "temp"
    (612991 'move' call_tmp[612988](59358 call != call_tmp[612976] call_tmp[612983]))
    unknown call_tmp[612993] "expr temp" "maybe param" "maybe type" "temp"
    (612996 'move' call_tmp[612993](59381 call _cond_test call_tmp[612988]))
    if call_tmp[612993]
    {
      (59379 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491727] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612998] "expr temp" "maybe param" "maybe type" "temp"
      (613001 'move' call_tmp[612998](59394 call a[59336] 0))
      unknown call_tmp[613003] "expr temp" "maybe param" "maybe type" "temp"
      (613006 'move' call_tmp[613003](59398 call b[59342] 0))
      unknown call_tmp[613008] "expr temp" "maybe param" "maybe type" "temp"
      (613011 'move' call_tmp[613008](59399 call % call_tmp[612998] call_tmp[613003]))
      (491731 'move' call_type_tmp[491727](59401 'typeof' call_tmp[613008]))
    }
    unknown result[59404] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613015] "expr temp" "maybe param" "maybe type" "temp"
    (613018 'move' call_tmp[613015](59388 call size _mt[243] a[59336]))
    unknown call_tmp[613020] "expr temp" "maybe param" "maybe type" "temp"
    (613023 'move' call_tmp[613020](59402 call * call_tmp[613015] call_type_tmp[491727]))
    (540999 'default init var' result[59404] call_tmp[613020])
    (59407 'end of statement')
    {
      unknown d[59435] "dead at end of block" "insert auto destroy"
      (541001 'init var' d[59435] 0)
      (475077 'end of statement')
      unknown tmp[59436] "maybe param" "temp"
      unknown call_tmp[613027] "expr temp" "maybe param" "maybe type" "temp"
      (613030 'move' call_tmp[613027](59410 call size _mt[243] a[59336]))
      unknown call_tmp[613032] "expr temp" "maybe param" "maybe type" "temp"
      (613035 'move' call_tmp[613032](59414 call - call_tmp[613027] 1))
      (59448 'move' tmp[59436](59446 call chpl_compute_low_param_loop_bound 0 call_tmp[613032]))
      unknown tmp[59437] "maybe param" "temp"
      unknown call_tmp[613039] "expr temp" "maybe param" "maybe type" "temp"
      (613042 'move' call_tmp[613039](59455 call size _mt[243] a[59336]))
      unknown call_tmp[613044] "expr temp" "maybe param" "maybe type" "temp"
      (613047 'move' call_tmp[613044](59453 call - call_tmp[613039] 1))
      (59461 'move' tmp[59437](59459 call chpl_compute_high_param_loop_bound 0 call_tmp[613044]))
      unknown tmp[59438] "maybe param" "temp"
      (59464 'move' tmp[59438] 1)
      ParamForLoop[59466]
      { d[59435] tmp[59436] tmp[59437] tmp[59438]
        unknown call_tmp[613049] "expr temp" "maybe param" "maybe type" "temp"
        (613052 'move' call_tmp[613049](59421 call result[59404] d[59435]))
        unknown call_tmp[613054] "expr temp" "maybe param" "maybe type" "temp"
        (613057 'move' call_tmp[613054](59425 call a[59336] d[59435]))
        unknown call_tmp[613059] "expr temp" "maybe param" "maybe type" "temp"
        (613062 'move' call_tmp[613059](59429 call b[59342] d[59435]))
        unknown call_tmp[613064] "expr temp" "maybe param" "maybe type" "temp"
        (613067 'move' call_tmp[613064](59430 call % call_tmp[613054] call_tmp[613059]))
        (59432 call = call_tmp[613049] call_tmp[613064])
        (475078 'end of statement' result[59404] d[59435] d[59435] d[59435])
      }
      label _unused_continueLabel[59440]
      label _breakLabel[59439]
    }
    (508560 'move' ret[508555](508559 'deref' result[59404]))
    gotoReturn _end_%[508553] _end_%[508553]
    (475083 'end of statement' result[59404])
    label _end_%[508553]
    (508557 return ret[508555])
  }
  where {
    (59349 call chpl_TwoHomogTuples a[59336] b[59342])
  }
  function %[59487](arg a[59484]:_tuple[56202](?), arg b[59490]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508566] "RVV" "temp"
    unknown call_tmp[613071] "expr temp" "maybe param" "maybe type" "temp"
    (613074 'move' call_tmp[613071](59494 call size _mt[243] a[59484]))
    unknown call_tmp[613078] "expr temp" "maybe param" "maybe type" "temp"
    (613081 'move' call_tmp[613078](59498 call size _mt[243] b[59490]))
    unknown call_tmp[613083] "expr temp" "maybe param" "maybe type" "temp"
    (613086 'move' call_tmp[613083](59501 call != call_tmp[613071] call_tmp[613078]))
    unknown call_tmp[613088] "expr temp" "maybe param" "maybe type" "temp"
    (613091 'move' call_tmp[613088](59508 call _cond_test call_tmp[613083]))
    if call_tmp[613088]
    {
      (59506 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[613095] "expr temp" "maybe param" "maybe type" "temp"
    (613098 'move' call_tmp[613095](59515 call size _mt[243] a[59484]))
    unknown call_tmp[613100] "expr temp" "maybe param" "maybe type" "temp"
    (613103 'move' call_tmp[613100](59519 call == call_tmp[613095] 1))
    unknown call_tmp[613105] "expr temp" "maybe param" "maybe type" "temp"
    (613108 'move' call_tmp[613105](59561 call _cond_test call_tmp[613100]))
    if call_tmp[613105]
    {
      unknown call_tmp[613110] "expr temp" "maybe param" "maybe type" "temp"
      (613113 'move' call_tmp[613110](59524 call a[59484] 0))
      unknown call_tmp[613115] "expr temp" "maybe param" "maybe type" "temp"
      (613118 'move' call_tmp[613115](59528 call b[59490] 0))
      unknown call_tmp[613120] "expr temp" "maybe param" "maybe type" "temp"
      (613123 'move' call_tmp[613120](59529 call % call_tmp[613110] call_tmp[613115]))
      unknown call_tmp[613125] "expr temp" "maybe param" "maybe type" "temp"
      (613128 'move' call_tmp[613125](59531 call _build_tuple call_tmp[613120]))
      (508571 'move' ret[508566](508570 'deref' call_tmp[613125]))
      gotoReturn _end_%[508564] _end_%[508564]
    }
    {
      unknown call_tmp[613130] "expr temp" "maybe param" "maybe type" "temp"
      (613133 'move' call_tmp[613130](59538 call a[59484] 0))
      unknown call_tmp[613135] "expr temp" "maybe param" "maybe type" "temp"
      (613138 'move' call_tmp[613135](59542 call b[59490] 0))
      unknown call_tmp[613140] "expr temp" "maybe param" "maybe type" "temp"
      (613143 'move' call_tmp[613140](59543 call % call_tmp[613130] call_tmp[613135]))
      unknown call_tmp[613145] "expr temp" "maybe param" "maybe type" "temp"
      (613148 'move' call_tmp[613145](59548 call chpl__tupleRest a[59484]))
      unknown call_tmp[613150] "expr temp" "maybe param" "maybe type" "temp"
      (613153 'move' call_tmp[613150](59552 call chpl__tupleRest b[59490]))
      unknown call_tmp[613155] "expr temp" "maybe param" "maybe type" "temp"
      (613158 'move' call_tmp[613155](59553 call % call_tmp[613145] call_tmp[613150]))
      unknown call_tmp[613160] "expr temp" "maybe param" "maybe type" "temp"
      (613163 'move' call_tmp[613160](59557 call _build_tuple call_tmp[613140](59555 'expand_tuple' call_tmp[613155])))
      (508576 'move' ret[508566](508575 'deref' call_tmp[613160]))
      gotoReturn _end_%[508564] _end_%[508564]
    }
    label _end_%[508564]
    (508568 return ret[508566])
  }
  function **[59575](arg a[59572]:_tuple[56202](?), arg b[59578]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508582] "RVV" "temp"
    unknown call_tmp[613167] "expr temp" "maybe param" "maybe type" "temp"
    (613170 'move' call_tmp[613167](59587 call size _mt[243] a[59572]))
    unknown call_tmp[613174] "expr temp" "maybe param" "maybe type" "temp"
    (613177 'move' call_tmp[613174](59591 call size _mt[243] b[59578]))
    unknown call_tmp[613179] "expr temp" "maybe param" "maybe type" "temp"
    (613182 'move' call_tmp[613179](59594 call != call_tmp[613167] call_tmp[613174]))
    unknown call_tmp[613184] "expr temp" "maybe param" "maybe type" "temp"
    (613187 'move' call_tmp[613184](59617 call _cond_test call_tmp[613179]))
    if call_tmp[613184]
    {
      (59615 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491733] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613189] "expr temp" "maybe param" "maybe type" "temp"
      (613192 'move' call_tmp[613189](59630 call a[59572] 0))
      unknown call_tmp[613194] "expr temp" "maybe param" "maybe type" "temp"
      (613197 'move' call_tmp[613194](59634 call b[59578] 0))
      unknown call_tmp[613199] "expr temp" "maybe param" "maybe type" "temp"
      (613202 'move' call_tmp[613199](59635 call ** call_tmp[613189] call_tmp[613194]))
      (491737 'move' call_type_tmp[491733](59637 'typeof' call_tmp[613199]))
    }
    unknown result[59640] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613206] "expr temp" "maybe param" "maybe type" "temp"
    (613209 'move' call_tmp[613206](59624 call size _mt[243] a[59572]))
    unknown call_tmp[613211] "expr temp" "maybe param" "maybe type" "temp"
    (613214 'move' call_tmp[613211](59638 call * call_tmp[613206] call_type_tmp[491733]))
    (541003 'default init var' result[59640] call_tmp[613211])
    (59643 'end of statement')
    {
      unknown d[59671] "dead at end of block" "insert auto destroy"
      (541005 'init var' d[59671] 0)
      (475089 'end of statement')
      unknown tmp[59672] "maybe param" "temp"
      unknown call_tmp[613218] "expr temp" "maybe param" "maybe type" "temp"
      (613221 'move' call_tmp[613218](59646 call size _mt[243] a[59572]))
      unknown call_tmp[613223] "expr temp" "maybe param" "maybe type" "temp"
      (613226 'move' call_tmp[613223](59650 call - call_tmp[613218] 1))
      (59684 'move' tmp[59672](59682 call chpl_compute_low_param_loop_bound 0 call_tmp[613223]))
      unknown tmp[59673] "maybe param" "temp"
      unknown call_tmp[613230] "expr temp" "maybe param" "maybe type" "temp"
      (613233 'move' call_tmp[613230](59691 call size _mt[243] a[59572]))
      unknown call_tmp[613235] "expr temp" "maybe param" "maybe type" "temp"
      (613238 'move' call_tmp[613235](59689 call - call_tmp[613230] 1))
      (59697 'move' tmp[59673](59695 call chpl_compute_high_param_loop_bound 0 call_tmp[613235]))
      unknown tmp[59674] "maybe param" "temp"
      (59700 'move' tmp[59674] 1)
      ParamForLoop[59702]
      { d[59671] tmp[59672] tmp[59673] tmp[59674]
        unknown call_tmp[613240] "expr temp" "maybe param" "maybe type" "temp"
        (613243 'move' call_tmp[613240](59657 call result[59640] d[59671]))
        unknown call_tmp[613245] "expr temp" "maybe param" "maybe type" "temp"
        (613248 'move' call_tmp[613245](59661 call a[59572] d[59671]))
        unknown call_tmp[613250] "expr temp" "maybe param" "maybe type" "temp"
        (613253 'move' call_tmp[613250](59665 call b[59578] d[59671]))
        unknown call_tmp[613255] "expr temp" "maybe param" "maybe type" "temp"
        (613258 'move' call_tmp[613255](59666 call ** call_tmp[613245] call_tmp[613250]))
        (59668 call = call_tmp[613240] call_tmp[613255])
        (475090 'end of statement' result[59640] d[59671] d[59671] d[59671])
      }
      label _unused_continueLabel[59676]
      label _breakLabel[59675]
    }
    (508587 'move' ret[508582](508586 'deref' result[59640]))
    gotoReturn _end_**[508580] _end_**[508580]
    (475095 'end of statement' result[59640])
    label _end_**[508580]
    (508584 return ret[508582])
  }
  where {
    (59585 call chpl_TwoHomogTuples a[59572] b[59578])
  }
  function **[59723](arg a[59720]:_tuple[56202](?), arg b[59726]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508593] "RVV" "temp"
    unknown call_tmp[613262] "expr temp" "maybe param" "maybe type" "temp"
    (613265 'move' call_tmp[613262](59730 call size _mt[243] a[59720]))
    unknown call_tmp[613269] "expr temp" "maybe param" "maybe type" "temp"
    (613272 'move' call_tmp[613269](59734 call size _mt[243] b[59726]))
    unknown call_tmp[613274] "expr temp" "maybe param" "maybe type" "temp"
    (613277 'move' call_tmp[613274](59737 call != call_tmp[613262] call_tmp[613269]))
    unknown call_tmp[613279] "expr temp" "maybe param" "maybe type" "temp"
    (613282 'move' call_tmp[613279](59744 call _cond_test call_tmp[613274]))
    if call_tmp[613279]
    {
      (59742 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613286] "expr temp" "maybe param" "maybe type" "temp"
    (613289 'move' call_tmp[613286](59751 call size _mt[243] a[59720]))
    unknown call_tmp[613291] "expr temp" "maybe param" "maybe type" "temp"
    (613294 'move' call_tmp[613291](59755 call == call_tmp[613286] 1))
    unknown call_tmp[613296] "expr temp" "maybe param" "maybe type" "temp"
    (613299 'move' call_tmp[613296](59797 call _cond_test call_tmp[613291]))
    if call_tmp[613296]
    {
      unknown call_tmp[613301] "expr temp" "maybe param" "maybe type" "temp"
      (613304 'move' call_tmp[613301](59760 call a[59720] 0))
      unknown call_tmp[613306] "expr temp" "maybe param" "maybe type" "temp"
      (613309 'move' call_tmp[613306](59764 call b[59726] 0))
      unknown call_tmp[613311] "expr temp" "maybe param" "maybe type" "temp"
      (613314 'move' call_tmp[613311](59765 call ** call_tmp[613301] call_tmp[613306]))
      unknown call_tmp[613316] "expr temp" "maybe param" "maybe type" "temp"
      (613319 'move' call_tmp[613316](59767 call _build_tuple call_tmp[613311]))
      (508598 'move' ret[508593](508597 'deref' call_tmp[613316]))
      gotoReturn _end_**[508591] _end_**[508591]
    }
    {
      unknown call_tmp[613321] "expr temp" "maybe param" "maybe type" "temp"
      (613324 'move' call_tmp[613321](59774 call a[59720] 0))
      unknown call_tmp[613326] "expr temp" "maybe param" "maybe type" "temp"
      (613329 'move' call_tmp[613326](59778 call b[59726] 0))
      unknown call_tmp[613331] "expr temp" "maybe param" "maybe type" "temp"
      (613334 'move' call_tmp[613331](59779 call ** call_tmp[613321] call_tmp[613326]))
      unknown call_tmp[613336] "expr temp" "maybe param" "maybe type" "temp"
      (613339 'move' call_tmp[613336](59784 call chpl__tupleRest a[59720]))
      unknown call_tmp[613341] "expr temp" "maybe param" "maybe type" "temp"
      (613344 'move' call_tmp[613341](59788 call chpl__tupleRest b[59726]))
      unknown call_tmp[613346] "expr temp" "maybe param" "maybe type" "temp"
      (613349 'move' call_tmp[613346](59789 call ** call_tmp[613336] call_tmp[613341]))
      unknown call_tmp[613351] "expr temp" "maybe param" "maybe type" "temp"
      (613354 'move' call_tmp[613351](59793 call _build_tuple call_tmp[613331](59791 'expand_tuple' call_tmp[613346])))
      (508603 'move' ret[508593](508602 'deref' call_tmp[613351]))
      gotoReturn _end_**[508591] _end_**[508591]
    }
    label _end_**[508591]
    (508595 return ret[508593])
  }
  function &[59811](arg a[59808]:_tuple[56202](?), arg b[59814]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508609] "RVV" "temp"
    unknown call_tmp[613358] "expr temp" "maybe param" "maybe type" "temp"
    (613361 'move' call_tmp[613358](59823 call size _mt[243] a[59808]))
    unknown call_tmp[613365] "expr temp" "maybe param" "maybe type" "temp"
    (613368 'move' call_tmp[613365](59827 call size _mt[243] b[59814]))
    unknown call_tmp[613370] "expr temp" "maybe param" "maybe type" "temp"
    (613373 'move' call_tmp[613370](59830 call != call_tmp[613358] call_tmp[613365]))
    unknown call_tmp[613375] "expr temp" "maybe param" "maybe type" "temp"
    (613378 'move' call_tmp[613375](59853 call _cond_test call_tmp[613370]))
    if call_tmp[613375]
    {
      (59851 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491739] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613380] "expr temp" "maybe param" "maybe type" "temp"
      (613383 'move' call_tmp[613380](59866 call a[59808] 0))
      unknown call_tmp[613385] "expr temp" "maybe param" "maybe type" "temp"
      (613388 'move' call_tmp[613385](59870 call b[59814] 0))
      unknown call_tmp[613390] "expr temp" "maybe param" "maybe type" "temp"
      (613393 'move' call_tmp[613390](59871 call & call_tmp[613380] call_tmp[613385]))
      (491743 'move' call_type_tmp[491739](59873 'typeof' call_tmp[613390]))
    }
    unknown result[59876] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613397] "expr temp" "maybe param" "maybe type" "temp"
    (613400 'move' call_tmp[613397](59860 call size _mt[243] a[59808]))
    unknown call_tmp[613402] "expr temp" "maybe param" "maybe type" "temp"
    (613405 'move' call_tmp[613402](59874 call * call_tmp[613397] call_type_tmp[491739]))
    (541007 'default init var' result[59876] call_tmp[613402])
    (59879 'end of statement')
    {
      unknown d[59907] "dead at end of block" "insert auto destroy"
      (541009 'init var' d[59907] 0)
      (475101 'end of statement')
      unknown tmp[59908] "maybe param" "temp"
      unknown call_tmp[613409] "expr temp" "maybe param" "maybe type" "temp"
      (613412 'move' call_tmp[613409](59882 call size _mt[243] a[59808]))
      unknown call_tmp[613414] "expr temp" "maybe param" "maybe type" "temp"
      (613417 'move' call_tmp[613414](59886 call - call_tmp[613409] 1))
      (59920 'move' tmp[59908](59918 call chpl_compute_low_param_loop_bound 0 call_tmp[613414]))
      unknown tmp[59909] "maybe param" "temp"
      unknown call_tmp[613421] "expr temp" "maybe param" "maybe type" "temp"
      (613424 'move' call_tmp[613421](59927 call size _mt[243] a[59808]))
      unknown call_tmp[613426] "expr temp" "maybe param" "maybe type" "temp"
      (613429 'move' call_tmp[613426](59925 call - call_tmp[613421] 1))
      (59933 'move' tmp[59909](59931 call chpl_compute_high_param_loop_bound 0 call_tmp[613426]))
      unknown tmp[59910] "maybe param" "temp"
      (59936 'move' tmp[59910] 1)
      ParamForLoop[59938]
      { d[59907] tmp[59908] tmp[59909] tmp[59910]
        unknown call_tmp[613431] "expr temp" "maybe param" "maybe type" "temp"
        (613434 'move' call_tmp[613431](59893 call result[59876] d[59907]))
        unknown call_tmp[613436] "expr temp" "maybe param" "maybe type" "temp"
        (613439 'move' call_tmp[613436](59897 call a[59808] d[59907]))
        unknown call_tmp[613441] "expr temp" "maybe param" "maybe type" "temp"
        (613444 'move' call_tmp[613441](59901 call b[59814] d[59907]))
        unknown call_tmp[613446] "expr temp" "maybe param" "maybe type" "temp"
        (613449 'move' call_tmp[613446](59902 call & call_tmp[613436] call_tmp[613441]))
        (59904 call = call_tmp[613431] call_tmp[613446])
        (475102 'end of statement' result[59876] d[59907] d[59907] d[59907])
      }
      label _unused_continueLabel[59912]
      label _breakLabel[59911]
    }
    (508614 'move' ret[508609](508613 'deref' result[59876]))
    gotoReturn _end_&[508607] _end_&[508607]
    (475107 'end of statement' result[59876])
    label _end_&[508607]
    (508611 return ret[508609])
  }
  where {
    (59821 call chpl_TwoHomogTuples a[59808] b[59814])
  }
  function &[59959](arg a[59956]:_tuple[56202](?), arg b[59962]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508620] "RVV" "temp"
    unknown call_tmp[613453] "expr temp" "maybe param" "maybe type" "temp"
    (613456 'move' call_tmp[613453](59966 call size _mt[243] a[59956]))
    unknown call_tmp[613460] "expr temp" "maybe param" "maybe type" "temp"
    (613463 'move' call_tmp[613460](59970 call size _mt[243] b[59962]))
    unknown call_tmp[613465] "expr temp" "maybe param" "maybe type" "temp"
    (613468 'move' call_tmp[613465](59973 call != call_tmp[613453] call_tmp[613460]))
    unknown call_tmp[613470] "expr temp" "maybe param" "maybe type" "temp"
    (613473 'move' call_tmp[613470](59980 call _cond_test call_tmp[613465]))
    if call_tmp[613470]
    {
      (59978 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613477] "expr temp" "maybe param" "maybe type" "temp"
    (613480 'move' call_tmp[613477](59987 call size _mt[243] a[59956]))
    unknown call_tmp[613482] "expr temp" "maybe param" "maybe type" "temp"
    (613485 'move' call_tmp[613482](59991 call == call_tmp[613477] 1))
    unknown call_tmp[613487] "expr temp" "maybe param" "maybe type" "temp"
    (613490 'move' call_tmp[613487](60033 call _cond_test call_tmp[613482]))
    if call_tmp[613487]
    {
      unknown call_tmp[613492] "expr temp" "maybe param" "maybe type" "temp"
      (613495 'move' call_tmp[613492](59996 call a[59956] 0))
      unknown call_tmp[613497] "expr temp" "maybe param" "maybe type" "temp"
      (613500 'move' call_tmp[613497](60000 call b[59962] 0))
      unknown call_tmp[613502] "expr temp" "maybe param" "maybe type" "temp"
      (613505 'move' call_tmp[613502](60001 call & call_tmp[613492] call_tmp[613497]))
      unknown call_tmp[613507] "expr temp" "maybe param" "maybe type" "temp"
      (613510 'move' call_tmp[613507](60003 call _build_tuple call_tmp[613502]))
      (508625 'move' ret[508620](508624 'deref' call_tmp[613507]))
      gotoReturn _end_&[508618] _end_&[508618]
    }
    {
      unknown call_tmp[613512] "expr temp" "maybe param" "maybe type" "temp"
      (613515 'move' call_tmp[613512](60010 call a[59956] 0))
      unknown call_tmp[613517] "expr temp" "maybe param" "maybe type" "temp"
      (613520 'move' call_tmp[613517](60014 call b[59962] 0))
      unknown call_tmp[613522] "expr temp" "maybe param" "maybe type" "temp"
      (613525 'move' call_tmp[613522](60015 call & call_tmp[613512] call_tmp[613517]))
      unknown call_tmp[613527] "expr temp" "maybe param" "maybe type" "temp"
      (613530 'move' call_tmp[613527](60020 call chpl__tupleRest a[59956]))
      unknown call_tmp[613532] "expr temp" "maybe param" "maybe type" "temp"
      (613535 'move' call_tmp[613532](60024 call chpl__tupleRest b[59962]))
      unknown call_tmp[613537] "expr temp" "maybe param" "maybe type" "temp"
      (613540 'move' call_tmp[613537](60025 call & call_tmp[613527] call_tmp[613532]))
      unknown call_tmp[613542] "expr temp" "maybe param" "maybe type" "temp"
      (613545 'move' call_tmp[613542](60029 call _build_tuple call_tmp[613522](60027 'expand_tuple' call_tmp[613537])))
      (508630 'move' ret[508620](508629 'deref' call_tmp[613542]))
      gotoReturn _end_&[508618] _end_&[508618]
    }
    label _end_&[508618]
    (508622 return ret[508620])
  }
  function |[60047](arg a[60044]:_tuple[56202](?), arg b[60050]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508636] "RVV" "temp"
    unknown call_tmp[613549] "expr temp" "maybe param" "maybe type" "temp"
    (613552 'move' call_tmp[613549](60059 call size _mt[243] a[60044]))
    unknown call_tmp[613556] "expr temp" "maybe param" "maybe type" "temp"
    (613559 'move' call_tmp[613556](60063 call size _mt[243] b[60050]))
    unknown call_tmp[613561] "expr temp" "maybe param" "maybe type" "temp"
    (613564 'move' call_tmp[613561](60066 call != call_tmp[613549] call_tmp[613556]))
    unknown call_tmp[613566] "expr temp" "maybe param" "maybe type" "temp"
    (613569 'move' call_tmp[613566](60089 call _cond_test call_tmp[613561]))
    if call_tmp[613566]
    {
      (60087 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491745] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613571] "expr temp" "maybe param" "maybe type" "temp"
      (613574 'move' call_tmp[613571](60102 call a[60044] 0))
      unknown call_tmp[613576] "expr temp" "maybe param" "maybe type" "temp"
      (613579 'move' call_tmp[613576](60106 call b[60050] 0))
      unknown call_tmp[613581] "expr temp" "maybe param" "maybe type" "temp"
      (613584 'move' call_tmp[613581](60107 call | call_tmp[613571] call_tmp[613576]))
      (491749 'move' call_type_tmp[491745](60109 'typeof' call_tmp[613581]))
    }
    unknown result[60112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613588] "expr temp" "maybe param" "maybe type" "temp"
    (613591 'move' call_tmp[613588](60096 call size _mt[243] a[60044]))
    unknown call_tmp[613593] "expr temp" "maybe param" "maybe type" "temp"
    (613596 'move' call_tmp[613593](60110 call * call_tmp[613588] call_type_tmp[491745]))
    (541011 'default init var' result[60112] call_tmp[613593])
    (60115 'end of statement')
    {
      unknown d[60143] "dead at end of block" "insert auto destroy"
      (541013 'init var' d[60143] 0)
      (475113 'end of statement')
      unknown tmp[60144] "maybe param" "temp"
      unknown call_tmp[613600] "expr temp" "maybe param" "maybe type" "temp"
      (613603 'move' call_tmp[613600](60118 call size _mt[243] a[60044]))
      unknown call_tmp[613605] "expr temp" "maybe param" "maybe type" "temp"
      (613608 'move' call_tmp[613605](60122 call - call_tmp[613600] 1))
      (60156 'move' tmp[60144](60154 call chpl_compute_low_param_loop_bound 0 call_tmp[613605]))
      unknown tmp[60145] "maybe param" "temp"
      unknown call_tmp[613612] "expr temp" "maybe param" "maybe type" "temp"
      (613615 'move' call_tmp[613612](60163 call size _mt[243] a[60044]))
      unknown call_tmp[613617] "expr temp" "maybe param" "maybe type" "temp"
      (613620 'move' call_tmp[613617](60161 call - call_tmp[613612] 1))
      (60169 'move' tmp[60145](60167 call chpl_compute_high_param_loop_bound 0 call_tmp[613617]))
      unknown tmp[60146] "maybe param" "temp"
      (60172 'move' tmp[60146] 1)
      ParamForLoop[60174]
      { d[60143] tmp[60144] tmp[60145] tmp[60146]
        unknown call_tmp[613622] "expr temp" "maybe param" "maybe type" "temp"
        (613625 'move' call_tmp[613622](60129 call result[60112] d[60143]))
        unknown call_tmp[613627] "expr temp" "maybe param" "maybe type" "temp"
        (613630 'move' call_tmp[613627](60133 call a[60044] d[60143]))
        unknown call_tmp[613632] "expr temp" "maybe param" "maybe type" "temp"
        (613635 'move' call_tmp[613632](60137 call b[60050] d[60143]))
        unknown call_tmp[613637] "expr temp" "maybe param" "maybe type" "temp"
        (613640 'move' call_tmp[613637](60138 call | call_tmp[613627] call_tmp[613632]))
        (60140 call = call_tmp[613622] call_tmp[613637])
        (475114 'end of statement' result[60112] d[60143] d[60143] d[60143])
      }
      label _unused_continueLabel[60148]
      label _breakLabel[60147]
    }
    (508641 'move' ret[508636](508640 'deref' result[60112]))
    gotoReturn _end_|[508634] _end_|[508634]
    (475119 'end of statement' result[60112])
    label _end_|[508634]
    (508638 return ret[508636])
  }
  where {
    (60057 call chpl_TwoHomogTuples a[60044] b[60050])
  }
  function |[60195](arg a[60192]:_tuple[56202](?), arg b[60198]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508647] "RVV" "temp"
    unknown call_tmp[613644] "expr temp" "maybe param" "maybe type" "temp"
    (613647 'move' call_tmp[613644](60202 call size _mt[243] a[60192]))
    unknown call_tmp[613651] "expr temp" "maybe param" "maybe type" "temp"
    (613654 'move' call_tmp[613651](60206 call size _mt[243] b[60198]))
    unknown call_tmp[613656] "expr temp" "maybe param" "maybe type" "temp"
    (613659 'move' call_tmp[613656](60209 call != call_tmp[613644] call_tmp[613651]))
    unknown call_tmp[613661] "expr temp" "maybe param" "maybe type" "temp"
    (613664 'move' call_tmp[613661](60216 call _cond_test call_tmp[613656]))
    if call_tmp[613661]
    {
      (60214 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613668] "expr temp" "maybe param" "maybe type" "temp"
    (613671 'move' call_tmp[613668](60223 call size _mt[243] a[60192]))
    unknown call_tmp[613673] "expr temp" "maybe param" "maybe type" "temp"
    (613676 'move' call_tmp[613673](60227 call == call_tmp[613668] 1))
    unknown call_tmp[613678] "expr temp" "maybe param" "maybe type" "temp"
    (613681 'move' call_tmp[613678](60269 call _cond_test call_tmp[613673]))
    if call_tmp[613678]
    {
      unknown call_tmp[613683] "expr temp" "maybe param" "maybe type" "temp"
      (613686 'move' call_tmp[613683](60232 call a[60192] 0))
      unknown call_tmp[613688] "expr temp" "maybe param" "maybe type" "temp"
      (613691 'move' call_tmp[613688](60236 call b[60198] 0))
      unknown call_tmp[613693] "expr temp" "maybe param" "maybe type" "temp"
      (613696 'move' call_tmp[613693](60237 call | call_tmp[613683] call_tmp[613688]))
      unknown call_tmp[613698] "expr temp" "maybe param" "maybe type" "temp"
      (613701 'move' call_tmp[613698](60239 call _build_tuple call_tmp[613693]))
      (508652 'move' ret[508647](508651 'deref' call_tmp[613698]))
      gotoReturn _end_|[508645] _end_|[508645]
    }
    {
      unknown call_tmp[613703] "expr temp" "maybe param" "maybe type" "temp"
      (613706 'move' call_tmp[613703](60246 call a[60192] 0))
      unknown call_tmp[613708] "expr temp" "maybe param" "maybe type" "temp"
      (613711 'move' call_tmp[613708](60250 call b[60198] 0))
      unknown call_tmp[613713] "expr temp" "maybe param" "maybe type" "temp"
      (613716 'move' call_tmp[613713](60251 call | call_tmp[613703] call_tmp[613708]))
      unknown call_tmp[613718] "expr temp" "maybe param" "maybe type" "temp"
      (613721 'move' call_tmp[613718](60256 call chpl__tupleRest a[60192]))
      unknown call_tmp[613723] "expr temp" "maybe param" "maybe type" "temp"
      (613726 'move' call_tmp[613723](60260 call chpl__tupleRest b[60198]))
      unknown call_tmp[613728] "expr temp" "maybe param" "maybe type" "temp"
      (613731 'move' call_tmp[613728](60261 call | call_tmp[613718] call_tmp[613723]))
      unknown call_tmp[613733] "expr temp" "maybe param" "maybe type" "temp"
      (613736 'move' call_tmp[613733](60265 call _build_tuple call_tmp[613713](60263 'expand_tuple' call_tmp[613728])))
      (508657 'move' ret[508647](508656 'deref' call_tmp[613733]))
      gotoReturn _end_|[508645] _end_|[508645]
    }
    label _end_|[508645]
    (508649 return ret[508647])
  }
  function ^[60283](arg a[60280]:_tuple[56202](?), arg b[60286]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508663] "RVV" "temp"
    unknown call_tmp[613740] "expr temp" "maybe param" "maybe type" "temp"
    (613743 'move' call_tmp[613740](60295 call size _mt[243] a[60280]))
    unknown call_tmp[613747] "expr temp" "maybe param" "maybe type" "temp"
    (613750 'move' call_tmp[613747](60299 call size _mt[243] b[60286]))
    unknown call_tmp[613752] "expr temp" "maybe param" "maybe type" "temp"
    (613755 'move' call_tmp[613752](60302 call != call_tmp[613740] call_tmp[613747]))
    unknown call_tmp[613757] "expr temp" "maybe param" "maybe type" "temp"
    (613760 'move' call_tmp[613757](60325 call _cond_test call_tmp[613752]))
    if call_tmp[613757]
    {
      (60323 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491751] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613762] "expr temp" "maybe param" "maybe type" "temp"
      (613765 'move' call_tmp[613762](60338 call a[60280] 0))
      unknown call_tmp[613767] "expr temp" "maybe param" "maybe type" "temp"
      (613770 'move' call_tmp[613767](60342 call b[60286] 0))
      unknown call_tmp[613772] "expr temp" "maybe param" "maybe type" "temp"
      (613775 'move' call_tmp[613772](60343 call ^ call_tmp[613762] call_tmp[613767]))
      (491755 'move' call_type_tmp[491751](60345 'typeof' call_tmp[613772]))
    }
    unknown result[60348] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613779] "expr temp" "maybe param" "maybe type" "temp"
    (613782 'move' call_tmp[613779](60332 call size _mt[243] a[60280]))
    unknown call_tmp[613784] "expr temp" "maybe param" "maybe type" "temp"
    (613787 'move' call_tmp[613784](60346 call * call_tmp[613779] call_type_tmp[491751]))
    (541015 'default init var' result[60348] call_tmp[613784])
    (60351 'end of statement')
    {
      unknown d[60379] "dead at end of block" "insert auto destroy"
      (541017 'init var' d[60379] 0)
      (475125 'end of statement')
      unknown tmp[60380] "maybe param" "temp"
      unknown call_tmp[613791] "expr temp" "maybe param" "maybe type" "temp"
      (613794 'move' call_tmp[613791](60354 call size _mt[243] a[60280]))
      unknown call_tmp[613796] "expr temp" "maybe param" "maybe type" "temp"
      (613799 'move' call_tmp[613796](60358 call - call_tmp[613791] 1))
      (60392 'move' tmp[60380](60390 call chpl_compute_low_param_loop_bound 0 call_tmp[613796]))
      unknown tmp[60381] "maybe param" "temp"
      unknown call_tmp[613803] "expr temp" "maybe param" "maybe type" "temp"
      (613806 'move' call_tmp[613803](60399 call size _mt[243] a[60280]))
      unknown call_tmp[613808] "expr temp" "maybe param" "maybe type" "temp"
      (613811 'move' call_tmp[613808](60397 call - call_tmp[613803] 1))
      (60405 'move' tmp[60381](60403 call chpl_compute_high_param_loop_bound 0 call_tmp[613808]))
      unknown tmp[60382] "maybe param" "temp"
      (60408 'move' tmp[60382] 1)
      ParamForLoop[60410]
      { d[60379] tmp[60380] tmp[60381] tmp[60382]
        unknown call_tmp[613813] "expr temp" "maybe param" "maybe type" "temp"
        (613816 'move' call_tmp[613813](60365 call result[60348] d[60379]))
        unknown call_tmp[613818] "expr temp" "maybe param" "maybe type" "temp"
        (613821 'move' call_tmp[613818](60369 call a[60280] d[60379]))
        unknown call_tmp[613823] "expr temp" "maybe param" "maybe type" "temp"
        (613826 'move' call_tmp[613823](60373 call b[60286] d[60379]))
        unknown call_tmp[613828] "expr temp" "maybe param" "maybe type" "temp"
        (613831 'move' call_tmp[613828](60374 call ^ call_tmp[613818] call_tmp[613823]))
        (60376 call = call_tmp[613813] call_tmp[613828])
        (475126 'end of statement' result[60348] d[60379] d[60379] d[60379])
      }
      label _unused_continueLabel[60384]
      label _breakLabel[60383]
    }
    (508668 'move' ret[508663](508667 'deref' result[60348]))
    gotoReturn _end_^[508661] _end_^[508661]
    (475131 'end of statement' result[60348])
    label _end_^[508661]
    (508665 return ret[508663])
  }
  where {
    (60293 call chpl_TwoHomogTuples a[60280] b[60286])
  }
  function ^[60431](arg a[60428]:_tuple[56202](?), arg b[60434]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508674] "RVV" "temp"
    unknown call_tmp[613835] "expr temp" "maybe param" "maybe type" "temp"
    (613838 'move' call_tmp[613835](60438 call size _mt[243] a[60428]))
    unknown call_tmp[613842] "expr temp" "maybe param" "maybe type" "temp"
    (613845 'move' call_tmp[613842](60442 call size _mt[243] b[60434]))
    unknown call_tmp[613847] "expr temp" "maybe param" "maybe type" "temp"
    (613850 'move' call_tmp[613847](60445 call != call_tmp[613835] call_tmp[613842]))
    unknown call_tmp[613852] "expr temp" "maybe param" "maybe type" "temp"
    (613855 'move' call_tmp[613852](60452 call _cond_test call_tmp[613847]))
    if call_tmp[613852]
    {
      (60450 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613859] "expr temp" "maybe param" "maybe type" "temp"
    (613862 'move' call_tmp[613859](60459 call size _mt[243] a[60428]))
    unknown call_tmp[613864] "expr temp" "maybe param" "maybe type" "temp"
    (613867 'move' call_tmp[613864](60463 call == call_tmp[613859] 1))
    unknown call_tmp[613869] "expr temp" "maybe param" "maybe type" "temp"
    (613872 'move' call_tmp[613869](60505 call _cond_test call_tmp[613864]))
    if call_tmp[613869]
    {
      unknown call_tmp[613874] "expr temp" "maybe param" "maybe type" "temp"
      (613877 'move' call_tmp[613874](60468 call a[60428] 0))
      unknown call_tmp[613879] "expr temp" "maybe param" "maybe type" "temp"
      (613882 'move' call_tmp[613879](60472 call b[60434] 0))
      unknown call_tmp[613884] "expr temp" "maybe param" "maybe type" "temp"
      (613887 'move' call_tmp[613884](60473 call ^ call_tmp[613874] call_tmp[613879]))
      unknown call_tmp[613889] "expr temp" "maybe param" "maybe type" "temp"
      (613892 'move' call_tmp[613889](60475 call _build_tuple call_tmp[613884]))
      (508679 'move' ret[508674](508678 'deref' call_tmp[613889]))
      gotoReturn _end_^[508672] _end_^[508672]
    }
    {
      unknown call_tmp[613894] "expr temp" "maybe param" "maybe type" "temp"
      (613897 'move' call_tmp[613894](60482 call a[60428] 0))
      unknown call_tmp[613899] "expr temp" "maybe param" "maybe type" "temp"
      (613902 'move' call_tmp[613899](60486 call b[60434] 0))
      unknown call_tmp[613904] "expr temp" "maybe param" "maybe type" "temp"
      (613907 'move' call_tmp[613904](60487 call ^ call_tmp[613894] call_tmp[613899]))
      unknown call_tmp[613909] "expr temp" "maybe param" "maybe type" "temp"
      (613912 'move' call_tmp[613909](60492 call chpl__tupleRest a[60428]))
      unknown call_tmp[613914] "expr temp" "maybe param" "maybe type" "temp"
      (613917 'move' call_tmp[613914](60496 call chpl__tupleRest b[60434]))
      unknown call_tmp[613919] "expr temp" "maybe param" "maybe type" "temp"
      (613922 'move' call_tmp[613919](60497 call ^ call_tmp[613909] call_tmp[613914]))
      unknown call_tmp[613924] "expr temp" "maybe param" "maybe type" "temp"
      (613927 'move' call_tmp[613924](60501 call _build_tuple call_tmp[613904](60499 'expand_tuple' call_tmp[613919])))
      (508684 'move' ret[508674](508683 'deref' call_tmp[613924]))
      gotoReturn _end_^[508672] _end_^[508672]
    }
    label _end_^[508672]
    (508676 return ret[508674])
  }
  function <<[60519](arg a[60516]:_tuple[56202](?), arg b[60522]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508690] "RVV" "temp"
    unknown call_tmp[613931] "expr temp" "maybe param" "maybe type" "temp"
    (613934 'move' call_tmp[613931](60531 call size _mt[243] a[60516]))
    unknown call_tmp[613938] "expr temp" "maybe param" "maybe type" "temp"
    (613941 'move' call_tmp[613938](60535 call size _mt[243] b[60522]))
    unknown call_tmp[613943] "expr temp" "maybe param" "maybe type" "temp"
    (613946 'move' call_tmp[613943](60538 call != call_tmp[613931] call_tmp[613938]))
    unknown call_tmp[613948] "expr temp" "maybe param" "maybe type" "temp"
    (613951 'move' call_tmp[613948](60561 call _cond_test call_tmp[613943]))
    if call_tmp[613948]
    {
      (60559 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491757] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613953] "expr temp" "maybe param" "maybe type" "temp"
      (613956 'move' call_tmp[613953](60574 call a[60516] 0))
      unknown call_tmp[613958] "expr temp" "maybe param" "maybe type" "temp"
      (613961 'move' call_tmp[613958](60578 call b[60522] 0))
      unknown call_tmp[613963] "expr temp" "maybe param" "maybe type" "temp"
      (613966 'move' call_tmp[613963](60579 call << call_tmp[613953] call_tmp[613958]))
      (491761 'move' call_type_tmp[491757](60581 'typeof' call_tmp[613963]))
    }
    unknown result[60584] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613970] "expr temp" "maybe param" "maybe type" "temp"
    (613973 'move' call_tmp[613970](60568 call size _mt[243] a[60516]))
    unknown call_tmp[613975] "expr temp" "maybe param" "maybe type" "temp"
    (613978 'move' call_tmp[613975](60582 call * call_tmp[613970] call_type_tmp[491757]))
    (541019 'default init var' result[60584] call_tmp[613975])
    (60587 'end of statement')
    {
      unknown d[60615] "dead at end of block" "insert auto destroy"
      (541021 'init var' d[60615] 0)
      (475137 'end of statement')
      unknown tmp[60616] "maybe param" "temp"
      unknown call_tmp[613982] "expr temp" "maybe param" "maybe type" "temp"
      (613985 'move' call_tmp[613982](60590 call size _mt[243] a[60516]))
      unknown call_tmp[613987] "expr temp" "maybe param" "maybe type" "temp"
      (613990 'move' call_tmp[613987](60594 call - call_tmp[613982] 1))
      (60628 'move' tmp[60616](60626 call chpl_compute_low_param_loop_bound 0 call_tmp[613987]))
      unknown tmp[60617] "maybe param" "temp"
      unknown call_tmp[613994] "expr temp" "maybe param" "maybe type" "temp"
      (613997 'move' call_tmp[613994](60635 call size _mt[243] a[60516]))
      unknown call_tmp[613999] "expr temp" "maybe param" "maybe type" "temp"
      (614002 'move' call_tmp[613999](60633 call - call_tmp[613994] 1))
      (60641 'move' tmp[60617](60639 call chpl_compute_high_param_loop_bound 0 call_tmp[613999]))
      unknown tmp[60618] "maybe param" "temp"
      (60644 'move' tmp[60618] 1)
      ParamForLoop[60646]
      { d[60615] tmp[60616] tmp[60617] tmp[60618]
        unknown call_tmp[614004] "expr temp" "maybe param" "maybe type" "temp"
        (614007 'move' call_tmp[614004](60601 call result[60584] d[60615]))
        unknown call_tmp[614009] "expr temp" "maybe param" "maybe type" "temp"
        (614012 'move' call_tmp[614009](60605 call a[60516] d[60615]))
        unknown call_tmp[614014] "expr temp" "maybe param" "maybe type" "temp"
        (614017 'move' call_tmp[614014](60609 call b[60522] d[60615]))
        unknown call_tmp[614019] "expr temp" "maybe param" "maybe type" "temp"
        (614022 'move' call_tmp[614019](60610 call << call_tmp[614009] call_tmp[614014]))
        (60612 call = call_tmp[614004] call_tmp[614019])
        (475138 'end of statement' result[60584] d[60615] d[60615] d[60615])
      }
      label _unused_continueLabel[60620]
      label _breakLabel[60619]
    }
    (508695 'move' ret[508690](508694 'deref' result[60584]))
    gotoReturn _end_<<[508688] _end_<<[508688]
    (475143 'end of statement' result[60584])
    label _end_<<[508688]
    (508692 return ret[508690])
  }
  where {
    (60529 call chpl_TwoHomogTuples a[60516] b[60522])
  }
  function <<[60667](arg a[60664]:_tuple[56202](?), arg b[60670]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508701] "RVV" "temp"
    unknown call_tmp[614026] "expr temp" "maybe param" "maybe type" "temp"
    (614029 'move' call_tmp[614026](60674 call size _mt[243] a[60664]))
    unknown call_tmp[614033] "expr temp" "maybe param" "maybe type" "temp"
    (614036 'move' call_tmp[614033](60678 call size _mt[243] b[60670]))
    unknown call_tmp[614038] "expr temp" "maybe param" "maybe type" "temp"
    (614041 'move' call_tmp[614038](60681 call != call_tmp[614026] call_tmp[614033]))
    unknown call_tmp[614043] "expr temp" "maybe param" "maybe type" "temp"
    (614046 'move' call_tmp[614043](60688 call _cond_test call_tmp[614038]))
    if call_tmp[614043]
    {
      (60686 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[614050] "expr temp" "maybe param" "maybe type" "temp"
    (614053 'move' call_tmp[614050](60695 call size _mt[243] a[60664]))
    unknown call_tmp[614055] "expr temp" "maybe param" "maybe type" "temp"
    (614058 'move' call_tmp[614055](60699 call == call_tmp[614050] 1))
    unknown call_tmp[614060] "expr temp" "maybe param" "maybe type" "temp"
    (614063 'move' call_tmp[614060](60741 call _cond_test call_tmp[614055]))
    if call_tmp[614060]
    {
      unknown call_tmp[614065] "expr temp" "maybe param" "maybe type" "temp"
      (614068 'move' call_tmp[614065](60704 call a[60664] 0))
      unknown call_tmp[614070] "expr temp" "maybe param" "maybe type" "temp"
      (614073 'move' call_tmp[614070](60708 call b[60670] 0))
      unknown call_tmp[614075] "expr temp" "maybe param" "maybe type" "temp"
      (614078 'move' call_tmp[614075](60709 call << call_tmp[614065] call_tmp[614070]))
      unknown call_tmp[614080] "expr temp" "maybe param" "maybe type" "temp"
      (614083 'move' call_tmp[614080](60711 call _build_tuple call_tmp[614075]))
      (508706 'move' ret[508701](508705 'deref' call_tmp[614080]))
      gotoReturn _end_<<[508699] _end_<<[508699]
    }
    {
      unknown call_tmp[614085] "expr temp" "maybe param" "maybe type" "temp"
      (614088 'move' call_tmp[614085](60718 call a[60664] 0))
      unknown call_tmp[614090] "expr temp" "maybe param" "maybe type" "temp"
      (614093 'move' call_tmp[614090](60722 call b[60670] 0))
      unknown call_tmp[614095] "expr temp" "maybe param" "maybe type" "temp"
      (614098 'move' call_tmp[614095](60723 call << call_tmp[614085] call_tmp[614090]))
      unknown call_tmp[614100] "expr temp" "maybe param" "maybe type" "temp"
      (614103 'move' call_tmp[614100](60728 call chpl__tupleRest a[60664]))
      unknown call_tmp[614105] "expr temp" "maybe param" "maybe type" "temp"
      (614108 'move' call_tmp[614105](60732 call chpl__tupleRest b[60670]))
      unknown call_tmp[614110] "expr temp" "maybe param" "maybe type" "temp"
      (614113 'move' call_tmp[614110](60733 call << call_tmp[614100] call_tmp[614105]))
      unknown call_tmp[614115] "expr temp" "maybe param" "maybe type" "temp"
      (614118 'move' call_tmp[614115](60737 call _build_tuple call_tmp[614095](60735 'expand_tuple' call_tmp[614110])))
      (508711 'move' ret[508701](508710 'deref' call_tmp[614115]))
      gotoReturn _end_<<[508699] _end_<<[508699]
    }
    label _end_<<[508699]
    (508703 return ret[508701])
  }
  function >>[60755](arg a[60752]:_tuple[56202](?), arg b[60758]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508717] "RVV" "temp"
    unknown call_tmp[614122] "expr temp" "maybe param" "maybe type" "temp"
    (614125 'move' call_tmp[614122](60767 call size _mt[243] a[60752]))
    unknown call_tmp[614129] "expr temp" "maybe param" "maybe type" "temp"
    (614132 'move' call_tmp[614129](60771 call size _mt[243] b[60758]))
    unknown call_tmp[614134] "expr temp" "maybe param" "maybe type" "temp"
    (614137 'move' call_tmp[614134](60774 call != call_tmp[614122] call_tmp[614129]))
    unknown call_tmp[614139] "expr temp" "maybe param" "maybe type" "temp"
    (614142 'move' call_tmp[614139](60797 call _cond_test call_tmp[614134]))
    if call_tmp[614139]
    {
      (60795 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491763] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614144] "expr temp" "maybe param" "maybe type" "temp"
      (614147 'move' call_tmp[614144](60810 call a[60752] 0))
      unknown call_tmp[614149] "expr temp" "maybe param" "maybe type" "temp"
      (614152 'move' call_tmp[614149](60814 call b[60758] 0))
      unknown call_tmp[614154] "expr temp" "maybe param" "maybe type" "temp"
      (614157 'move' call_tmp[614154](60815 call >> call_tmp[614144] call_tmp[614149]))
      (491767 'move' call_type_tmp[491763](60817 'typeof' call_tmp[614154]))
    }
    unknown result[60820] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614161] "expr temp" "maybe param" "maybe type" "temp"
    (614164 'move' call_tmp[614161](60804 call size _mt[243] a[60752]))
    unknown call_tmp[614166] "expr temp" "maybe param" "maybe type" "temp"
    (614169 'move' call_tmp[614166](60818 call * call_tmp[614161] call_type_tmp[491763]))
    (541023 'default init var' result[60820] call_tmp[614166])
    (60823 'end of statement')
    {
      unknown d[60851] "dead at end of block" "insert auto destroy"
      (541025 'init var' d[60851] 0)
      (475149 'end of statement')
      unknown tmp[60852] "maybe param" "temp"
      unknown call_tmp[614173] "expr temp" "maybe param" "maybe type" "temp"
      (614176 'move' call_tmp[614173](60826 call size _mt[243] a[60752]))
      unknown call_tmp[614178] "expr temp" "maybe param" "maybe type" "temp"
      (614181 'move' call_tmp[614178](60830 call - call_tmp[614173] 1))
      (60864 'move' tmp[60852](60862 call chpl_compute_low_param_loop_bound 0 call_tmp[614178]))
      unknown tmp[60853] "maybe param" "temp"
      unknown call_tmp[614185] "expr temp" "maybe param" "maybe type" "temp"
      (614188 'move' call_tmp[614185](60871 call size _mt[243] a[60752]))
      unknown call_tmp[614190] "expr temp" "maybe param" "maybe type" "temp"
      (614193 'move' call_tmp[614190](60869 call - call_tmp[614185] 1))
      (60877 'move' tmp[60853](60875 call chpl_compute_high_param_loop_bound 0 call_tmp[614190]))
      unknown tmp[60854] "maybe param" "temp"
      (60880 'move' tmp[60854] 1)
      ParamForLoop[60882]
      { d[60851] tmp[60852] tmp[60853] tmp[60854]
        unknown call_tmp[614195] "expr temp" "maybe param" "maybe type" "temp"
        (614198 'move' call_tmp[614195](60837 call result[60820] d[60851]))
        unknown call_tmp[614200] "expr temp" "maybe param" "maybe type" "temp"
        (614203 'move' call_tmp[614200](60841 call a[60752] d[60851]))
        unknown call_tmp[614205] "expr temp" "maybe param" "maybe type" "temp"
        (614208 'move' call_tmp[614205](60845 call b[60758] d[60851]))
        unknown call_tmp[614210] "expr temp" "maybe param" "maybe type" "temp"
        (614213 'move' call_tmp[614210](60846 call >> call_tmp[614200] call_tmp[614205]))
        (60848 call = call_tmp[614195] call_tmp[614210])
        (475150 'end of statement' result[60820] d[60851] d[60851] d[60851])
      }
      label _unused_continueLabel[60856]
      label _breakLabel[60855]
    }
    (508722 'move' ret[508717](508721 'deref' result[60820]))
    gotoReturn _end_>>[508715] _end_>>[508715]
    (475155 'end of statement' result[60820])
    label _end_>>[508715]
    (508719 return ret[508717])
  }
  where {
    (60765 call chpl_TwoHomogTuples a[60752] b[60758])
  }
  function >>[60903](arg a[60900]:_tuple[56202](?), arg b[60906]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508728] "RVV" "temp"
    unknown call_tmp[614217] "expr temp" "maybe param" "maybe type" "temp"
    (614220 'move' call_tmp[614217](60910 call size _mt[243] a[60900]))
    unknown call_tmp[614224] "expr temp" "maybe param" "maybe type" "temp"
    (614227 'move' call_tmp[614224](60914 call size _mt[243] b[60906]))
    unknown call_tmp[614229] "expr temp" "maybe param" "maybe type" "temp"
    (614232 'move' call_tmp[614229](60917 call != call_tmp[614217] call_tmp[614224]))
    unknown call_tmp[614234] "expr temp" "maybe param" "maybe type" "temp"
    (614237 'move' call_tmp[614234](60924 call _cond_test call_tmp[614229]))
    if call_tmp[614234]
    {
      (60922 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614241] "expr temp" "maybe param" "maybe type" "temp"
    (614244 'move' call_tmp[614241](60931 call size _mt[243] a[60900]))
    unknown call_tmp[614246] "expr temp" "maybe param" "maybe type" "temp"
    (614249 'move' call_tmp[614246](60935 call == call_tmp[614241] 1))
    unknown call_tmp[614251] "expr temp" "maybe param" "maybe type" "temp"
    (614254 'move' call_tmp[614251](60977 call _cond_test call_tmp[614246]))
    if call_tmp[614251]
    {
      unknown call_tmp[614256] "expr temp" "maybe param" "maybe type" "temp"
      (614259 'move' call_tmp[614256](60940 call a[60900] 0))
      unknown call_tmp[614261] "expr temp" "maybe param" "maybe type" "temp"
      (614264 'move' call_tmp[614261](60944 call b[60906] 0))
      unknown call_tmp[614266] "expr temp" "maybe param" "maybe type" "temp"
      (614269 'move' call_tmp[614266](60945 call >> call_tmp[614256] call_tmp[614261]))
      unknown call_tmp[614271] "expr temp" "maybe param" "maybe type" "temp"
      (614274 'move' call_tmp[614271](60947 call _build_tuple call_tmp[614266]))
      (508733 'move' ret[508728](508732 'deref' call_tmp[614271]))
      gotoReturn _end_>>[508726] _end_>>[508726]
    }
    {
      unknown call_tmp[614276] "expr temp" "maybe param" "maybe type" "temp"
      (614279 'move' call_tmp[614276](60954 call a[60900] 0))
      unknown call_tmp[614281] "expr temp" "maybe param" "maybe type" "temp"
      (614284 'move' call_tmp[614281](60958 call b[60906] 0))
      unknown call_tmp[614286] "expr temp" "maybe param" "maybe type" "temp"
      (614289 'move' call_tmp[614286](60959 call >> call_tmp[614276] call_tmp[614281]))
      unknown call_tmp[614291] "expr temp" "maybe param" "maybe type" "temp"
      (614294 'move' call_tmp[614291](60964 call chpl__tupleRest a[60900]))
      unknown call_tmp[614296] "expr temp" "maybe param" "maybe type" "temp"
      (614299 'move' call_tmp[614296](60968 call chpl__tupleRest b[60906]))
      unknown call_tmp[614301] "expr temp" "maybe param" "maybe type" "temp"
      (614304 'move' call_tmp[614301](60969 call >> call_tmp[614291] call_tmp[614296]))
      unknown call_tmp[614306] "expr temp" "maybe param" "maybe type" "temp"
      (614309 'move' call_tmp[614306](60973 call _build_tuple call_tmp[614286](60971 'expand_tuple' call_tmp[614301])))
      (508738 'move' ret[508728](508737 'deref' call_tmp[614306]))
      gotoReturn _end_>>[508726] _end_>>[508726]
    }
    label _end_>>[508726]
    (508730 return ret[508728])
  }
  function >[60991](arg a[60988]:_tuple[56202](?), arg b[60994]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508744] "RVV" "temp"
    unknown call_tmp[614313] "expr temp" "maybe param" "maybe type" "temp"
    (614316 'move' call_tmp[614313](60998 call size _mt[243] a[60988]))
    unknown call_tmp[614320] "expr temp" "maybe param" "maybe type" "temp"
    (614323 'move' call_tmp[614320](61002 call size _mt[243] b[60994]))
    unknown call_tmp[614325] "expr temp" "maybe param" "maybe type" "temp"
    (614328 'move' call_tmp[614325](61005 call != call_tmp[614313] call_tmp[614320]))
    unknown call_tmp[614330] "expr temp" "maybe param" "maybe type" "temp"
    (614333 'move' call_tmp[614330](61028 call _cond_test call_tmp[614325]))
    if call_tmp[614330]
    {
      (61026 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61081] "dead at end of block" "insert auto destroy"
      (541027 'init var' i[61081] 0)
      (475161 'end of statement')
      unknown tmp[61082] "maybe param" "temp"
      unknown call_tmp[614337] "expr temp" "maybe param" "maybe type" "temp"
      (614340 'move' call_tmp[614337](61036 call size _mt[243] a[60988]))
      unknown call_tmp[614342] "expr temp" "maybe param" "maybe type" "temp"
      (614345 'move' call_tmp[614342](61040 call - call_tmp[614337] 1))
      (61094 'move' tmp[61082](61092 call chpl_compute_low_param_loop_bound 0 call_tmp[614342]))
      unknown tmp[61083] "maybe param" "temp"
      unknown call_tmp[614349] "expr temp" "maybe param" "maybe type" "temp"
      (614352 'move' call_tmp[614349](61101 call size _mt[243] a[60988]))
      unknown call_tmp[614354] "expr temp" "maybe param" "maybe type" "temp"
      (614357 'move' call_tmp[614354](61099 call - call_tmp[614349] 1))
      (61107 'move' tmp[61083](61105 call chpl_compute_high_param_loop_bound 0 call_tmp[614354]))
      unknown tmp[61084] "maybe param" "temp"
      (61110 'move' tmp[61084] 1)
      ParamForLoop[61112]
      { i[61081] tmp[61082] tmp[61083] tmp[61084]
        unknown call_tmp[614359] "expr temp" "maybe param" "maybe type" "temp"
        (614362 'move' call_tmp[614359](61047 call a[60988] i[61081]))
        unknown call_tmp[614364] "expr temp" "maybe param" "maybe type" "temp"
        (614367 'move' call_tmp[614364](61051 call b[60994] i[61081]))
        unknown call_tmp[614369] "expr temp" "maybe param" "maybe type" "temp"
        (614372 'move' call_tmp[614369](61052 call > call_tmp[614359] call_tmp[614364]))
        unknown call_tmp[614374] "expr temp" "maybe param" "maybe type" "temp"
        (614377 'move' call_tmp[614374](61075 call _cond_test call_tmp[614369]))
        if call_tmp[614374]
        {
          (508749 'move' ret[508744](508748 'deref' 1))
          gotoReturn _end_>[508742] _end_>[508742]
        }
        {
          unknown call_tmp[614379] "expr temp" "maybe param" "maybe type" "temp"
          (614382 'move' call_tmp[614379](61060 call a[60988] i[61081]))
          unknown call_tmp[614384] "expr temp" "maybe param" "maybe type" "temp"
          (614387 'move' call_tmp[614384](61064 call b[60994] i[61081]))
          unknown call_tmp[614389] "expr temp" "maybe param" "maybe type" "temp"
          (614392 'move' call_tmp[614389](61065 call < call_tmp[614379] call_tmp[614384]))
          unknown call_tmp[614394] "expr temp" "maybe param" "maybe type" "temp"
          (614397 'move' call_tmp[614394](61070 call _cond_test call_tmp[614389]))
          if call_tmp[614394]
          {
            (508754 'move' ret[508744](508753 'deref' 0))
            gotoReturn _end_>[508742] _end_>[508742]
          }
        }
      }
      label _unused_continueLabel[61086]
      label _breakLabel[61085]
    }
    (508759 'move' ret[508744](508758 'deref' 0))
    label _end_>[508742]
    (508746 return ret[508744])
  }
  function >=[61132](arg a[61129]:_tuple[56202](?), arg b[61135]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508763] "RVV" "temp"
    unknown call_tmp[614401] "expr temp" "maybe param" "maybe type" "temp"
    (614404 'move' call_tmp[614401](61139 call size _mt[243] a[61129]))
    unknown call_tmp[614408] "expr temp" "maybe param" "maybe type" "temp"
    (614411 'move' call_tmp[614408](61143 call size _mt[243] b[61135]))
    unknown call_tmp[614413] "expr temp" "maybe param" "maybe type" "temp"
    (614416 'move' call_tmp[614413](61146 call != call_tmp[614401] call_tmp[614408]))
    unknown call_tmp[614418] "expr temp" "maybe param" "maybe type" "temp"
    (614421 'move' call_tmp[614418](61169 call _cond_test call_tmp[614413]))
    if call_tmp[614418]
    {
      (61167 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61222] "dead at end of block" "insert auto destroy"
      (541029 'init var' i[61222] 0)
      (475166 'end of statement')
      unknown tmp[61223] "maybe param" "temp"
      unknown call_tmp[614425] "expr temp" "maybe param" "maybe type" "temp"
      (614428 'move' call_tmp[614425](61177 call size _mt[243] a[61129]))
      unknown call_tmp[614430] "expr temp" "maybe param" "maybe type" "temp"
      (614433 'move' call_tmp[614430](61181 call - call_tmp[614425] 1))
      (61235 'move' tmp[61223](61233 call chpl_compute_low_param_loop_bound 0 call_tmp[614430]))
      unknown tmp[61224] "maybe param" "temp"
      unknown call_tmp[614437] "expr temp" "maybe param" "maybe type" "temp"
      (614440 'move' call_tmp[614437](61242 call size _mt[243] a[61129]))
      unknown call_tmp[614442] "expr temp" "maybe param" "maybe type" "temp"
      (614445 'move' call_tmp[614442](61240 call - call_tmp[614437] 1))
      (61248 'move' tmp[61224](61246 call chpl_compute_high_param_loop_bound 0 call_tmp[614442]))
      unknown tmp[61225] "maybe param" "temp"
      (61251 'move' tmp[61225] 1)
      ParamForLoop[61253]
      { i[61222] tmp[61223] tmp[61224] tmp[61225]
        unknown call_tmp[614447] "expr temp" "maybe param" "maybe type" "temp"
        (614450 'move' call_tmp[614447](61188 call a[61129] i[61222]))
        unknown call_tmp[614452] "expr temp" "maybe param" "maybe type" "temp"
        (614455 'move' call_tmp[614452](61192 call b[61135] i[61222]))
        unknown call_tmp[614457] "expr temp" "maybe param" "maybe type" "temp"
        (614460 'move' call_tmp[614457](61193 call > call_tmp[614447] call_tmp[614452]))
        unknown call_tmp[614462] "expr temp" "maybe param" "maybe type" "temp"
        (614465 'move' call_tmp[614462](61216 call _cond_test call_tmp[614457]))
        if call_tmp[614462]
        {
          (508768 'move' ret[508763](508767 'deref' 1))
          gotoReturn _end_>=[508761] _end_>=[508761]
        }
        {
          unknown call_tmp[614467] "expr temp" "maybe param" "maybe type" "temp"
          (614470 'move' call_tmp[614467](61201 call a[61129] i[61222]))
          unknown call_tmp[614472] "expr temp" "maybe param" "maybe type" "temp"
          (614475 'move' call_tmp[614472](61205 call b[61135] i[61222]))
          unknown call_tmp[614477] "expr temp" "maybe param" "maybe type" "temp"
          (614480 'move' call_tmp[614477](61206 call < call_tmp[614467] call_tmp[614472]))
          unknown call_tmp[614482] "expr temp" "maybe param" "maybe type" "temp"
          (614485 'move' call_tmp[614482](61211 call _cond_test call_tmp[614477]))
          if call_tmp[614482]
          {
            (508773 'move' ret[508763](508772 'deref' 0))
            gotoReturn _end_>=[508761] _end_>=[508761]
          }
        }
      }
      label _unused_continueLabel[61227]
      label _breakLabel[61226]
    }
    (508778 'move' ret[508763](508777 'deref' 1))
    label _end_>=[508761]
    (508765 return ret[508763])
  }
  function <[61273](arg a[61270]:_tuple[56202](?), arg b[61276]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508782] "RVV" "temp"
    unknown call_tmp[614489] "expr temp" "maybe param" "maybe type" "temp"
    (614492 'move' call_tmp[614489](61280 call size _mt[243] a[61270]))
    unknown call_tmp[614496] "expr temp" "maybe param" "maybe type" "temp"
    (614499 'move' call_tmp[614496](61284 call size _mt[243] b[61276]))
    unknown call_tmp[614501] "expr temp" "maybe param" "maybe type" "temp"
    (614504 'move' call_tmp[614501](61287 call != call_tmp[614489] call_tmp[614496]))
    unknown call_tmp[614506] "expr temp" "maybe param" "maybe type" "temp"
    (614509 'move' call_tmp[614506](61310 call _cond_test call_tmp[614501]))
    if call_tmp[614506]
    {
      (61308 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61363] "dead at end of block" "insert auto destroy"
      (541031 'init var' i[61363] 0)
      (475171 'end of statement')
      unknown tmp[61364] "maybe param" "temp"
      unknown call_tmp[614513] "expr temp" "maybe param" "maybe type" "temp"
      (614516 'move' call_tmp[614513](61318 call size _mt[243] a[61270]))
      unknown call_tmp[614518] "expr temp" "maybe param" "maybe type" "temp"
      (614521 'move' call_tmp[614518](61322 call - call_tmp[614513] 1))
      (61376 'move' tmp[61364](61374 call chpl_compute_low_param_loop_bound 0 call_tmp[614518]))
      unknown tmp[61365] "maybe param" "temp"
      unknown call_tmp[614525] "expr temp" "maybe param" "maybe type" "temp"
      (614528 'move' call_tmp[614525](61383 call size _mt[243] a[61270]))
      unknown call_tmp[614530] "expr temp" "maybe param" "maybe type" "temp"
      (614533 'move' call_tmp[614530](61381 call - call_tmp[614525] 1))
      (61389 'move' tmp[61365](61387 call chpl_compute_high_param_loop_bound 0 call_tmp[614530]))
      unknown tmp[61366] "maybe param" "temp"
      (61392 'move' tmp[61366] 1)
      ParamForLoop[61394]
      { i[61363] tmp[61364] tmp[61365] tmp[61366]
        unknown call_tmp[614535] "expr temp" "maybe param" "maybe type" "temp"
        (614538 'move' call_tmp[614535](61329 call a[61270] i[61363]))
        unknown call_tmp[614540] "expr temp" "maybe param" "maybe type" "temp"
        (614543 'move' call_tmp[614540](61333 call b[61276] i[61363]))
        unknown call_tmp[614545] "expr temp" "maybe param" "maybe type" "temp"
        (614548 'move' call_tmp[614545](61334 call < call_tmp[614535] call_tmp[614540]))
        unknown call_tmp[614550] "expr temp" "maybe param" "maybe type" "temp"
        (614553 'move' call_tmp[614550](61357 call _cond_test call_tmp[614545]))
        if call_tmp[614550]
        {
          (508787 'move' ret[508782](508786 'deref' 1))
          gotoReturn _end_<[508780] _end_<[508780]
        }
        {
          unknown call_tmp[614555] "expr temp" "maybe param" "maybe type" "temp"
          (614558 'move' call_tmp[614555](61342 call a[61270] i[61363]))
          unknown call_tmp[614560] "expr temp" "maybe param" "maybe type" "temp"
          (614563 'move' call_tmp[614560](61346 call b[61276] i[61363]))
          unknown call_tmp[614565] "expr temp" "maybe param" "maybe type" "temp"
          (614568 'move' call_tmp[614565](61347 call > call_tmp[614555] call_tmp[614560]))
          unknown call_tmp[614570] "expr temp" "maybe param" "maybe type" "temp"
          (614573 'move' call_tmp[614570](61352 call _cond_test call_tmp[614565]))
          if call_tmp[614570]
          {
            (508792 'move' ret[508782](508791 'deref' 0))
            gotoReturn _end_<[508780] _end_<[508780]
          }
        }
      }
      label _unused_continueLabel[61368]
      label _breakLabel[61367]
    }
    (508797 'move' ret[508782](508796 'deref' 0))
    label _end_<[508780]
    (508784 return ret[508782])
  }
  function <=[61414](arg a[61411]:_tuple[56202](?), arg b[61417]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508801] "RVV" "temp"
    unknown call_tmp[614577] "expr temp" "maybe param" "maybe type" "temp"
    (614580 'move' call_tmp[614577](61421 call size _mt[243] a[61411]))
    unknown call_tmp[614584] "expr temp" "maybe param" "maybe type" "temp"
    (614587 'move' call_tmp[614584](61425 call size _mt[243] b[61417]))
    unknown call_tmp[614589] "expr temp" "maybe param" "maybe type" "temp"
    (614592 'move' call_tmp[614589](61428 call != call_tmp[614577] call_tmp[614584]))
    unknown call_tmp[614594] "expr temp" "maybe param" "maybe type" "temp"
    (614597 'move' call_tmp[614594](61451 call _cond_test call_tmp[614589]))
    if call_tmp[614594]
    {
      (61449 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61504] "dead at end of block" "insert auto destroy"
      (541033 'init var' i[61504] 0)
      (475176 'end of statement')
      unknown tmp[61505] "maybe param" "temp"
      unknown call_tmp[614601] "expr temp" "maybe param" "maybe type" "temp"
      (614604 'move' call_tmp[614601](61459 call size _mt[243] a[61411]))
      unknown call_tmp[614606] "expr temp" "maybe param" "maybe type" "temp"
      (614609 'move' call_tmp[614606](61463 call - call_tmp[614601] 1))
      (61517 'move' tmp[61505](61515 call chpl_compute_low_param_loop_bound 0 call_tmp[614606]))
      unknown tmp[61506] "maybe param" "temp"
      unknown call_tmp[614613] "expr temp" "maybe param" "maybe type" "temp"
      (614616 'move' call_tmp[614613](61524 call size _mt[243] a[61411]))
      unknown call_tmp[614618] "expr temp" "maybe param" "maybe type" "temp"
      (614621 'move' call_tmp[614618](61522 call - call_tmp[614613] 1))
      (61530 'move' tmp[61506](61528 call chpl_compute_high_param_loop_bound 0 call_tmp[614618]))
      unknown tmp[61507] "maybe param" "temp"
      (61533 'move' tmp[61507] 1)
      ParamForLoop[61535]
      { i[61504] tmp[61505] tmp[61506] tmp[61507]
        unknown call_tmp[614623] "expr temp" "maybe param" "maybe type" "temp"
        (614626 'move' call_tmp[614623](61470 call a[61411] i[61504]))
        unknown call_tmp[614628] "expr temp" "maybe param" "maybe type" "temp"
        (614631 'move' call_tmp[614628](61474 call b[61417] i[61504]))
        unknown call_tmp[614633] "expr temp" "maybe param" "maybe type" "temp"
        (614636 'move' call_tmp[614633](61475 call < call_tmp[614623] call_tmp[614628]))
        unknown call_tmp[614638] "expr temp" "maybe param" "maybe type" "temp"
        (614641 'move' call_tmp[614638](61498 call _cond_test call_tmp[614633]))
        if call_tmp[614638]
        {
          (508806 'move' ret[508801](508805 'deref' 1))
          gotoReturn _end_<=[508799] _end_<=[508799]
        }
        {
          unknown call_tmp[614643] "expr temp" "maybe param" "maybe type" "temp"
          (614646 'move' call_tmp[614643](61483 call a[61411] i[61504]))
          unknown call_tmp[614648] "expr temp" "maybe param" "maybe type" "temp"
          (614651 'move' call_tmp[614648](61487 call b[61417] i[61504]))
          unknown call_tmp[614653] "expr temp" "maybe param" "maybe type" "temp"
          (614656 'move' call_tmp[614653](61488 call > call_tmp[614643] call_tmp[614648]))
          unknown call_tmp[614658] "expr temp" "maybe param" "maybe type" "temp"
          (614661 'move' call_tmp[614658](61493 call _cond_test call_tmp[614653]))
          if call_tmp[614658]
          {
            (508811 'move' ret[508801](508810 'deref' 0))
            gotoReturn _end_<=[508799] _end_<=[508799]
          }
        }
      }
      label _unused_continueLabel[61509]
      label _breakLabel[61508]
    }
    (508816 'move' ret[508801](508815 'deref' 1))
    label _end_<=[508799]
    (508803 return ret[508801])
  }
  function ==[61555](arg a[61552]:_tuple[56202](?), arg b[61558]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508820] "RVV" "temp"
    unknown call_tmp[614665] "expr temp" "maybe param" "maybe type" "temp"
    (614668 'move' call_tmp[614665](61562 call size _mt[243] a[61552]))
    unknown call_tmp[614672] "expr temp" "maybe param" "maybe type" "temp"
    (614675 'move' call_tmp[614672](61566 call size _mt[243] b[61558]))
    unknown call_tmp[614677] "expr temp" "maybe param" "maybe type" "temp"
    (614680 'move' call_tmp[614677](61569 call != call_tmp[614665] call_tmp[614672]))
    unknown call_tmp[614682] "expr temp" "maybe param" "maybe type" "temp"
    (614685 'move' call_tmp[614682](61644 call _cond_test call_tmp[614677]))
    if call_tmp[614682]
    {
      (508825 'move' ret[508820](508824 'deref' 0))
      gotoReturn _end_==[508818] _end_==[508818]
    }
    {
      {
        unknown i[61603] "dead at end of block" "insert auto destroy"
        (541035 'init var' i[61603] 0)
        (475181 'end of statement')
        unknown tmp[61604] "maybe param" "temp"
        unknown call_tmp[614689] "expr temp" "maybe param" "maybe type" "temp"
        (614692 'move' call_tmp[614689](61577 call size _mt[243] a[61552]))
        unknown call_tmp[614694] "expr temp" "maybe param" "maybe type" "temp"
        (614697 'move' call_tmp[614694](61581 call - call_tmp[614689] 1))
        (61616 'move' tmp[61604](61614 call chpl_compute_low_param_loop_bound 0 call_tmp[614694]))
        unknown tmp[61605] "maybe param" "temp"
        unknown call_tmp[614701] "expr temp" "maybe param" "maybe type" "temp"
        (614704 'move' call_tmp[614701](61623 call size _mt[243] a[61552]))
        unknown call_tmp[614706] "expr temp" "maybe param" "maybe type" "temp"
        (614709 'move' call_tmp[614706](61621 call - call_tmp[614701] 1))
        (61629 'move' tmp[61605](61627 call chpl_compute_high_param_loop_bound 0 call_tmp[614706]))
        unknown tmp[61606] "maybe param" "temp"
        (61632 'move' tmp[61606] 1)
        ParamForLoop[61634]
        { i[61603] tmp[61604] tmp[61605] tmp[61606]
          unknown call_tmp[614711] "expr temp" "maybe param" "maybe type" "temp"
          (614714 'move' call_tmp[614711](61588 call a[61552] i[61603]))
          unknown call_tmp[614716] "expr temp" "maybe param" "maybe type" "temp"
          (614719 'move' call_tmp[614716](61592 call b[61558] i[61603]))
          unknown call_tmp[614721] "expr temp" "maybe param" "maybe type" "temp"
          (614724 'move' call_tmp[614721](61593 call != call_tmp[614711] call_tmp[614716]))
          unknown call_tmp[614726] "expr temp" "maybe param" "maybe type" "temp"
          (614729 'move' call_tmp[614726](61598 call _cond_test call_tmp[614721]))
          if call_tmp[614726]
          {
            (508830 'move' ret[508820](508829 'deref' 0))
            gotoReturn _end_==[508818] _end_==[508818]
          }
        }
        label _unused_continueLabel[61608]
        label _breakLabel[61607]
      }
    }
    (508835 'move' ret[508820](508834 'deref' 1))
    label _end_==[508818]
    (508822 return ret[508820])
  }
  function !=[61660](arg a[61657]:_tuple[56202](?), arg b[61663]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508839] "RVV" "temp"
    unknown call_tmp[614733] "expr temp" "maybe param" "maybe type" "temp"
    (614736 'move' call_tmp[614733](61667 call size _mt[243] a[61657]))
    unknown call_tmp[614740] "expr temp" "maybe param" "maybe type" "temp"
    (614743 'move' call_tmp[614740](61671 call size _mt[243] b[61663]))
    unknown call_tmp[614745] "expr temp" "maybe param" "maybe type" "temp"
    (614748 'move' call_tmp[614745](61674 call != call_tmp[614733] call_tmp[614740]))
    unknown call_tmp[614750] "expr temp" "maybe param" "maybe type" "temp"
    (614753 'move' call_tmp[614750](61749 call _cond_test call_tmp[614745]))
    if call_tmp[614750]
    {
      (508844 'move' ret[508839](508843 'deref' 1))
      gotoReturn _end_!=[508837] _end_!=[508837]
    }
    {
      {
        unknown i[61708] "dead at end of block" "insert auto destroy"
        (541037 'init var' i[61708] 0)
        (475185 'end of statement')
        unknown tmp[61709] "maybe param" "temp"
        unknown call_tmp[614757] "expr temp" "maybe param" "maybe type" "temp"
        (614760 'move' call_tmp[614757](61682 call size _mt[243] a[61657]))
        unknown call_tmp[614762] "expr temp" "maybe param" "maybe type" "temp"
        (614765 'move' call_tmp[614762](61686 call - call_tmp[614757] 1))
        (61721 'move' tmp[61709](61719 call chpl_compute_low_param_loop_bound 0 call_tmp[614762]))
        unknown tmp[61710] "maybe param" "temp"
        unknown call_tmp[614769] "expr temp" "maybe param" "maybe type" "temp"
        (614772 'move' call_tmp[614769](61728 call size _mt[243] a[61657]))
        unknown call_tmp[614774] "expr temp" "maybe param" "maybe type" "temp"
        (614777 'move' call_tmp[614774](61726 call - call_tmp[614769] 1))
        (61734 'move' tmp[61710](61732 call chpl_compute_high_param_loop_bound 0 call_tmp[614774]))
        unknown tmp[61711] "maybe param" "temp"
        (61737 'move' tmp[61711] 1)
        ParamForLoop[61739]
        { i[61708] tmp[61709] tmp[61710] tmp[61711]
          unknown call_tmp[614779] "expr temp" "maybe param" "maybe type" "temp"
          (614782 'move' call_tmp[614779](61693 call a[61657] i[61708]))
          unknown call_tmp[614784] "expr temp" "maybe param" "maybe type" "temp"
          (614787 'move' call_tmp[614784](61697 call b[61663] i[61708]))
          unknown call_tmp[614789] "expr temp" "maybe param" "maybe type" "temp"
          (614792 'move' call_tmp[614789](61698 call != call_tmp[614779] call_tmp[614784]))
          unknown call_tmp[614794] "expr temp" "maybe param" "maybe type" "temp"
          (614797 'move' call_tmp[614794](61703 call _cond_test call_tmp[614789]))
          if call_tmp[614794]
          {
            (508849 'move' ret[508839](508848 'deref' 1))
            gotoReturn _end_!=[508837] _end_!=[508837]
          }
        }
        label _unused_continueLabel[61713]
        label _breakLabel[61712]
      }
    }
    (508854 'move' ret[508839](508853 'deref' 0))
    label _end_!=[508837]
    (508841 return ret[508839])
  }
  function +[61765](arg x[61762]:_tuple[56202](?), arg y[61772] :
  unknown call_tmp[614799] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508858] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491769] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614804] "expr temp" "maybe param" "maybe type" "temp"
      (614807 'move' call_tmp[614804](61786 call x[61762] 0))
      (491773 'move' call_type_tmp[491769](61787 'typeof' call_tmp[614804]))
    }
    unknown result[61790] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614811] "expr temp" "maybe param" "maybe type" "temp"
    (614814 'move' call_tmp[614811](61780 call size _mt[243] x[61762]))
    unknown call_tmp[614816] "expr temp" "maybe param" "maybe type" "temp"
    (614819 'move' call_tmp[614816](61788 call * call_tmp[614811] call_type_tmp[491769]))
    (541039 'default init var' result[61790] call_tmp[614816])
    (61793 'end of statement')
    {
      unknown d[61819] "dead at end of block" "insert auto destroy"
      (541041 'init var' d[61819] 0)
      (475188 'end of statement')
      unknown tmp[61820] "maybe param" "temp"
      unknown call_tmp[614823] "expr temp" "maybe param" "maybe type" "temp"
      (614826 'move' call_tmp[614823](61797 call size _mt[243] x[61762]))
      unknown call_tmp[614828] "expr temp" "maybe param" "maybe type" "temp"
      (614831 'move' call_tmp[614828](61801 call - call_tmp[614823] 1))
      (61832 'move' tmp[61820](61830 call chpl_compute_low_param_loop_bound 0 call_tmp[614828]))
      unknown tmp[61821] "maybe param" "temp"
      unknown call_tmp[614835] "expr temp" "maybe param" "maybe type" "temp"
      (614838 'move' call_tmp[614835](61839 call size _mt[243] x[61762]))
      unknown call_tmp[614840] "expr temp" "maybe param" "maybe type" "temp"
      (614843 'move' call_tmp[614840](61837 call - call_tmp[614835] 1))
      (61845 'move' tmp[61821](61843 call chpl_compute_high_param_loop_bound 0 call_tmp[614840]))
      unknown tmp[61822] "maybe param" "temp"
      (61848 'move' tmp[61822] 1)
      ParamForLoop[61850]
      { d[61819] tmp[61820] tmp[61821] tmp[61822]
        unknown call_tmp[614845] "expr temp" "maybe param" "maybe type" "temp"
        (614848 'move' call_tmp[614845](61808 call result[61790] d[61819]))
        unknown call_tmp[614850] "expr temp" "maybe param" "maybe type" "temp"
        (614853 'move' call_tmp[614850](61812 call x[61762] d[61819]))
        unknown call_tmp[614855] "expr temp" "maybe param" "maybe type" "temp"
        (614858 'move' call_tmp[614855](61814 call + call_tmp[614850] y[61772]))
        (61816 call = call_tmp[614845] call_tmp[614855])
        (475189 'end of statement' result[61790] d[61819] d[61819])
      }
      label _unused_continueLabel[61824]
      label _breakLabel[61823]
    }
    (508863 'move' ret[508858](508862 'deref' result[61790]))
    gotoReturn _end_+[508856] _end_+[508856]
    (475193 'end of statement' result[61790])
    label _end_+[508856]
    (508860 return ret[508858])
  }
  where {
    (61778 call isHomogeneousTuple x[61762])
  }
  function +[61872](arg x[61869]:_any[178](?), arg y[61875]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508869] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491775] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614860] "expr temp" "maybe param" "maybe type" "temp"
      (614863 'move' call_tmp[614860](61900 call y[61875] 0))
      (491779 'move' call_type_tmp[491775](61901 'typeof' call_tmp[614860]))
    }
    unknown result[61904] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614867] "expr temp" "maybe param" "maybe type" "temp"
    (614870 'move' call_tmp[614867](61894 call size _mt[243] y[61875]))
    unknown call_tmp[614872] "expr temp" "maybe param" "maybe type" "temp"
    (614875 'move' call_tmp[614872](61902 call * call_tmp[614867] call_type_tmp[491775]))
    (541043 'default init var' result[61904] call_tmp[614872])
    (61907 'end of statement')
    {
      unknown d[61933] "dead at end of block" "insert auto destroy"
      (541045 'init var' d[61933] 0)
      (475195 'end of statement')
      unknown tmp[61934] "maybe param" "temp"
      unknown call_tmp[614879] "expr temp" "maybe param" "maybe type" "temp"
      (614882 'move' call_tmp[614879](61911 call size _mt[243] y[61875]))
      unknown call_tmp[614884] "expr temp" "maybe param" "maybe type" "temp"
      (614887 'move' call_tmp[614884](61915 call - call_tmp[614879] 1))
      (61946 'move' tmp[61934](61944 call chpl_compute_low_param_loop_bound 0 call_tmp[614884]))
      unknown tmp[61935] "maybe param" "temp"
      unknown call_tmp[614891] "expr temp" "maybe param" "maybe type" "temp"
      (614894 'move' call_tmp[614891](61953 call size _mt[243] y[61875]))
      unknown call_tmp[614896] "expr temp" "maybe param" "maybe type" "temp"
      (614899 'move' call_tmp[614896](61951 call - call_tmp[614891] 1))
      (61959 'move' tmp[61935](61957 call chpl_compute_high_param_loop_bound 0 call_tmp[614896]))
      unknown tmp[61936] "maybe param" "temp"
      (61962 'move' tmp[61936] 1)
      ParamForLoop[61964]
      { d[61933] tmp[61934] tmp[61935] tmp[61936]
        unknown call_tmp[614901] "expr temp" "maybe param" "maybe type" "temp"
        (614904 'move' call_tmp[614901](61922 call result[61904] d[61933]))
        unknown call_tmp[614906] "expr temp" "maybe param" "maybe type" "temp"
        (614909 'move' call_tmp[614906](61927 call y[61875] d[61933]))
        unknown call_tmp[614911] "expr temp" "maybe param" "maybe type" "temp"
        (614914 'move' call_tmp[614911](61928 call + x[61869] call_tmp[614906]))
        (61930 call = call_tmp[614901] call_tmp[614911])
        (475196 'end of statement' result[61904] d[61933] d[61933])
      }
      label _unused_continueLabel[61938]
      label _breakLabel[61937]
    }
    (508874 'move' ret[508869](508873 'deref' result[61904]))
    gotoReturn _end_+[508867] _end_+[508867]
    (475200 'end of statement' result[61904])
    label _end_+[508867]
    (508871 return ret[508869])
  }
  where {
    unknown tmp[419078] "maybe param" "temp"
    (419089 'move' tmp[419078](61881 call isHomogeneousTuple y[61875]))
    unknown call_tmp[614916] "expr temp" "maybe param" "maybe type" "temp"
    (614919 'move' call_tmp[614916](419091 call _cond_invalid tmp[419078]))
    if call_tmp[614916]
    {
      (419094 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555211] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555212] "maybe param" "temp"
    unknown call_tmp[614921] "expr temp" "maybe param" "maybe type" "temp"
    (614924 'move' call_tmp[614921](419079 call isTrue tmp[419078]))
    (555217 'move' tmp[555212](555215 call _cond_test call_tmp[614921]))
    if tmp[555212]
    {
      { scopeless type
        unknown call_type_tmp[491781] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614926] "expr temp" "maybe param" "maybe type" "temp"
        (614929 'move' call_tmp[614926](61888 call y[61875] 0))
        (491785 'move' call_type_tmp[491781](61889 'typeof' call_tmp[614926]))
      }
      unknown tmp[555219] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614931] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614934 'move' call_tmp[614931](454892 'typeof' x[61869]))
      unknown call_tmp[614936] "expr temp" "maybe param" "maybe type" "temp"
      (614939 'move' call_tmp[614936](354321 'is_subtype' call_type_tmp[491781] call_tmp[614931]))
      (555221 'move' tmp[555219](419082 call isTrue call_tmp[614936]))
      (555226 'move' tmp[555211](555223 '_paramFoldLogical' tmp[555212] tmp[555219]))
    }
    {
      (555231 'move' tmp[555211](555228 '_paramFoldLogical' tmp[555212] 0))
    }
    (748391 call chpl_statementLevelSymbol tmp[555211])
  }
  function -[61985](arg x[61982]:_tuple[56202](?), arg y[61992] :
  unknown call_tmp[614941] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508880] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491787] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614946] "expr temp" "maybe param" "maybe type" "temp"
      (614949 'move' call_tmp[614946](62006 call x[61982] 0))
      (491791 'move' call_type_tmp[491787](62007 'typeof' call_tmp[614946]))
    }
    unknown result[62010] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614953] "expr temp" "maybe param" "maybe type" "temp"
    (614956 'move' call_tmp[614953](62000 call size _mt[243] x[61982]))
    unknown call_tmp[614958] "expr temp" "maybe param" "maybe type" "temp"
    (614961 'move' call_tmp[614958](62008 call * call_tmp[614953] call_type_tmp[491787]))
    (541047 'default init var' result[62010] call_tmp[614958])
    (62013 'end of statement')
    {
      unknown d[62039] "dead at end of block" "insert auto destroy"
      (541049 'init var' d[62039] 0)
      (475202 'end of statement')
      unknown tmp[62040] "maybe param" "temp"
      unknown call_tmp[614965] "expr temp" "maybe param" "maybe type" "temp"
      (614968 'move' call_tmp[614965](62017 call size _mt[243] x[61982]))
      unknown call_tmp[614970] "expr temp" "maybe param" "maybe type" "temp"
      (614973 'move' call_tmp[614970](62021 call - call_tmp[614965] 1))
      (62052 'move' tmp[62040](62050 call chpl_compute_low_param_loop_bound 0 call_tmp[614970]))
      unknown tmp[62041] "maybe param" "temp"
      unknown call_tmp[614977] "expr temp" "maybe param" "maybe type" "temp"
      (614980 'move' call_tmp[614977](62059 call size _mt[243] x[61982]))
      unknown call_tmp[614982] "expr temp" "maybe param" "maybe type" "temp"
      (614985 'move' call_tmp[614982](62057 call - call_tmp[614977] 1))
      (62065 'move' tmp[62041](62063 call chpl_compute_high_param_loop_bound 0 call_tmp[614982]))
      unknown tmp[62042] "maybe param" "temp"
      (62068 'move' tmp[62042] 1)
      ParamForLoop[62070]
      { d[62039] tmp[62040] tmp[62041] tmp[62042]
        unknown call_tmp[614987] "expr temp" "maybe param" "maybe type" "temp"
        (614990 'move' call_tmp[614987](62028 call result[62010] d[62039]))
        unknown call_tmp[614992] "expr temp" "maybe param" "maybe type" "temp"
        (614995 'move' call_tmp[614992](62032 call x[61982] d[62039]))
        unknown call_tmp[614997] "expr temp" "maybe param" "maybe type" "temp"
        (615000 'move' call_tmp[614997](62034 call - call_tmp[614992] y[61992]))
        (62036 call = call_tmp[614987] call_tmp[614997])
        (475203 'end of statement' result[62010] d[62039] d[62039])
      }
      label _unused_continueLabel[62044]
      label _breakLabel[62043]
    }
    (508885 'move' ret[508880](508884 'deref' result[62010]))
    gotoReturn _end_-[508878] _end_-[508878]
    (475207 'end of statement' result[62010])
    label _end_-[508878]
    (508882 return ret[508880])
  }
  where {
    (61998 call isHomogeneousTuple x[61982])
  }
  function -[62092](arg x[62089]:_any[178](?), arg y[62095]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508891] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491793] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615002] "expr temp" "maybe param" "maybe type" "temp"
      (615005 'move' call_tmp[615002](62120 call y[62095] 0))
      (491797 'move' call_type_tmp[491793](62121 'typeof' call_tmp[615002]))
    }
    unknown result[62124] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615009] "expr temp" "maybe param" "maybe type" "temp"
    (615012 'move' call_tmp[615009](62114 call size _mt[243] y[62095]))
    unknown call_tmp[615014] "expr temp" "maybe param" "maybe type" "temp"
    (615017 'move' call_tmp[615014](62122 call * call_tmp[615009] call_type_tmp[491793]))
    (541051 'default init var' result[62124] call_tmp[615014])
    (62127 'end of statement')
    {
      unknown d[62153] "dead at end of block" "insert auto destroy"
      (541053 'init var' d[62153] 0)
      (475209 'end of statement')
      unknown tmp[62154] "maybe param" "temp"
      unknown call_tmp[615021] "expr temp" "maybe param" "maybe type" "temp"
      (615024 'move' call_tmp[615021](62131 call size _mt[243] y[62095]))
      unknown call_tmp[615026] "expr temp" "maybe param" "maybe type" "temp"
      (615029 'move' call_tmp[615026](62135 call - call_tmp[615021] 1))
      (62166 'move' tmp[62154](62164 call chpl_compute_low_param_loop_bound 0 call_tmp[615026]))
      unknown tmp[62155] "maybe param" "temp"
      unknown call_tmp[615033] "expr temp" "maybe param" "maybe type" "temp"
      (615036 'move' call_tmp[615033](62173 call size _mt[243] y[62095]))
      unknown call_tmp[615038] "expr temp" "maybe param" "maybe type" "temp"
      (615041 'move' call_tmp[615038](62171 call - call_tmp[615033] 1))
      (62179 'move' tmp[62155](62177 call chpl_compute_high_param_loop_bound 0 call_tmp[615038]))
      unknown tmp[62156] "maybe param" "temp"
      (62182 'move' tmp[62156] 1)
      ParamForLoop[62184]
      { d[62153] tmp[62154] tmp[62155] tmp[62156]
        unknown call_tmp[615043] "expr temp" "maybe param" "maybe type" "temp"
        (615046 'move' call_tmp[615043](62142 call result[62124] d[62153]))
        unknown call_tmp[615048] "expr temp" "maybe param" "maybe type" "temp"
        (615051 'move' call_tmp[615048](62147 call y[62095] d[62153]))
        unknown call_tmp[615053] "expr temp" "maybe param" "maybe type" "temp"
        (615056 'move' call_tmp[615053](62148 call - x[62089] call_tmp[615048]))
        (62150 call = call_tmp[615043] call_tmp[615053])
        (475210 'end of statement' result[62124] d[62153] d[62153])
      }
      label _unused_continueLabel[62158]
      label _breakLabel[62157]
    }
    (508896 'move' ret[508891](508895 'deref' result[62124]))
    gotoReturn _end_-[508889] _end_-[508889]
    (475214 'end of statement' result[62124])
    label _end_-[508889]
    (508893 return ret[508891])
  }
  where {
    unknown tmp[419099] "maybe param" "temp"
    (419110 'move' tmp[419099](62101 call isHomogeneousTuple y[62095]))
    unknown call_tmp[615058] "expr temp" "maybe param" "maybe type" "temp"
    (615061 'move' call_tmp[615058](419112 call _cond_invalid tmp[419099]))
    if call_tmp[615058]
    {
      (419115 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555238] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555239] "maybe param" "temp"
    unknown call_tmp[615063] "expr temp" "maybe param" "maybe type" "temp"
    (615066 'move' call_tmp[615063](419100 call isTrue tmp[419099]))
    (555244 'move' tmp[555239](555242 call _cond_test call_tmp[615063]))
    if tmp[555239]
    {
      { scopeless type
        unknown call_type_tmp[491799] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615068] "expr temp" "maybe param" "maybe type" "temp"
        (615071 'move' call_tmp[615068](62108 call y[62095] 0))
        (491803 'move' call_type_tmp[491799](62109 'typeof' call_tmp[615068]))
      }
      unknown tmp[555246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615073] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615076 'move' call_tmp[615073](454894 'typeof' x[62089]))
      unknown call_tmp[615078] "expr temp" "maybe param" "maybe type" "temp"
      (615081 'move' call_tmp[615078](354322 'is_subtype' call_type_tmp[491799] call_tmp[615073]))
      (555248 'move' tmp[555246](419103 call isTrue call_tmp[615078]))
      (555253 'move' tmp[555238](555250 '_paramFoldLogical' tmp[555239] tmp[555246]))
    }
    {
      (555258 'move' tmp[555238](555255 '_paramFoldLogical' tmp[555239] 0))
    }
    (748393 call chpl_statementLevelSymbol tmp[555238])
  }
  function *[62205](arg x[62202]:_tuple[56202](?), arg y[62212] :
  unknown call_tmp[615083] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508902] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491805] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615088] "expr temp" "maybe param" "maybe type" "temp"
      (615091 'move' call_tmp[615088](62226 call x[62202] 0))
      (491809 'move' call_type_tmp[491805](62227 'typeof' call_tmp[615088]))
    }
    unknown result[62230] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615095] "expr temp" "maybe param" "maybe type" "temp"
    (615098 'move' call_tmp[615095](62220 call size _mt[243] x[62202]))
    unknown call_tmp[615100] "expr temp" "maybe param" "maybe type" "temp"
    (615103 'move' call_tmp[615100](62228 call * call_tmp[615095] call_type_tmp[491805]))
    (541055 'default init var' result[62230] call_tmp[615100])
    (62233 'end of statement')
    {
      unknown d[62259] "dead at end of block" "insert auto destroy"
      (541057 'init var' d[62259] 0)
      (475216 'end of statement')
      unknown tmp[62260] "maybe param" "temp"
      unknown call_tmp[615107] "expr temp" "maybe param" "maybe type" "temp"
      (615110 'move' call_tmp[615107](62237 call size _mt[243] x[62202]))
      unknown call_tmp[615112] "expr temp" "maybe param" "maybe type" "temp"
      (615115 'move' call_tmp[615112](62241 call - call_tmp[615107] 1))
      (62272 'move' tmp[62260](62270 call chpl_compute_low_param_loop_bound 0 call_tmp[615112]))
      unknown tmp[62261] "maybe param" "temp"
      unknown call_tmp[615119] "expr temp" "maybe param" "maybe type" "temp"
      (615122 'move' call_tmp[615119](62279 call size _mt[243] x[62202]))
      unknown call_tmp[615124] "expr temp" "maybe param" "maybe type" "temp"
      (615127 'move' call_tmp[615124](62277 call - call_tmp[615119] 1))
      (62285 'move' tmp[62261](62283 call chpl_compute_high_param_loop_bound 0 call_tmp[615124]))
      unknown tmp[62262] "maybe param" "temp"
      (62288 'move' tmp[62262] 1)
      ParamForLoop[62290]
      { d[62259] tmp[62260] tmp[62261] tmp[62262]
        unknown call_tmp[615129] "expr temp" "maybe param" "maybe type" "temp"
        (615132 'move' call_tmp[615129](62248 call result[62230] d[62259]))
        unknown call_tmp[615134] "expr temp" "maybe param" "maybe type" "temp"
        (615137 'move' call_tmp[615134](62252 call x[62202] d[62259]))
        unknown call_tmp[615139] "expr temp" "maybe param" "maybe type" "temp"
        (615142 'move' call_tmp[615139](62254 call * call_tmp[615134] y[62212]))
        (62256 call = call_tmp[615129] call_tmp[615139])
        (475217 'end of statement' result[62230] d[62259] d[62259])
      }
      label _unused_continueLabel[62264]
      label _breakLabel[62263]
    }
    (508907 'move' ret[508902](508906 'deref' result[62230]))
    gotoReturn _end_*[508900] _end_*[508900]
    (475221 'end of statement' result[62230])
    label _end_*[508900]
    (508904 return ret[508902])
  }
  where {
    (62218 call isHomogeneousTuple x[62202])
  }
  function *[62312](arg x[62309]:_any[178](?), arg y[62315]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508913] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491811] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615144] "expr temp" "maybe param" "maybe type" "temp"
      (615147 'move' call_tmp[615144](62340 call y[62315] 0))
      (491815 'move' call_type_tmp[491811](62341 'typeof' call_tmp[615144]))
    }
    unknown result[62344] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615151] "expr temp" "maybe param" "maybe type" "temp"
    (615154 'move' call_tmp[615151](62334 call size _mt[243] y[62315]))
    unknown call_tmp[615156] "expr temp" "maybe param" "maybe type" "temp"
    (615159 'move' call_tmp[615156](62342 call * call_tmp[615151] call_type_tmp[491811]))
    (541059 'default init var' result[62344] call_tmp[615156])
    (62347 'end of statement')
    {
      unknown d[62373] "dead at end of block" "insert auto destroy"
      (541061 'init var' d[62373] 0)
      (475223 'end of statement')
      unknown tmp[62374] "maybe param" "temp"
      unknown call_tmp[615163] "expr temp" "maybe param" "maybe type" "temp"
      (615166 'move' call_tmp[615163](62351 call size _mt[243] y[62315]))
      unknown call_tmp[615168] "expr temp" "maybe param" "maybe type" "temp"
      (615171 'move' call_tmp[615168](62355 call - call_tmp[615163] 1))
      (62386 'move' tmp[62374](62384 call chpl_compute_low_param_loop_bound 0 call_tmp[615168]))
      unknown tmp[62375] "maybe param" "temp"
      unknown call_tmp[615175] "expr temp" "maybe param" "maybe type" "temp"
      (615178 'move' call_tmp[615175](62393 call size _mt[243] y[62315]))
      unknown call_tmp[615180] "expr temp" "maybe param" "maybe type" "temp"
      (615183 'move' call_tmp[615180](62391 call - call_tmp[615175] 1))
      (62399 'move' tmp[62375](62397 call chpl_compute_high_param_loop_bound 0 call_tmp[615180]))
      unknown tmp[62376] "maybe param" "temp"
      (62402 'move' tmp[62376] 1)
      ParamForLoop[62404]
      { d[62373] tmp[62374] tmp[62375] tmp[62376]
        unknown call_tmp[615185] "expr temp" "maybe param" "maybe type" "temp"
        (615188 'move' call_tmp[615185](62362 call result[62344] d[62373]))
        unknown call_tmp[615190] "expr temp" "maybe param" "maybe type" "temp"
        (615193 'move' call_tmp[615190](62367 call y[62315] d[62373]))
        unknown call_tmp[615195] "expr temp" "maybe param" "maybe type" "temp"
        (615198 'move' call_tmp[615195](62368 call * x[62309] call_tmp[615190]))
        (62370 call = call_tmp[615185] call_tmp[615195])
        (475224 'end of statement' result[62344] d[62373] d[62373])
      }
      label _unused_continueLabel[62378]
      label _breakLabel[62377]
    }
    (508918 'move' ret[508913](508917 'deref' result[62344]))
    gotoReturn _end_*[508911] _end_*[508911]
    (475228 'end of statement' result[62344])
    label _end_*[508911]
    (508915 return ret[508913])
  }
  where {
    unknown tmp[419120] "maybe param" "temp"
    (419131 'move' tmp[419120](62321 call isHomogeneousTuple y[62315]))
    unknown call_tmp[615200] "expr temp" "maybe param" "maybe type" "temp"
    (615203 'move' call_tmp[615200](419133 call _cond_invalid tmp[419120]))
    if call_tmp[615200]
    {
      (419136 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555265] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555266] "maybe param" "temp"
    unknown call_tmp[615205] "expr temp" "maybe param" "maybe type" "temp"
    (615208 'move' call_tmp[615205](419121 call isTrue tmp[419120]))
    (555271 'move' tmp[555266](555269 call _cond_test call_tmp[615205]))
    if tmp[555266]
    {
      { scopeless type
        unknown call_type_tmp[491817] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615210] "expr temp" "maybe param" "maybe type" "temp"
        (615213 'move' call_tmp[615210](62328 call y[62315] 0))
        (491821 'move' call_type_tmp[491817](62329 'typeof' call_tmp[615210]))
      }
      unknown tmp[555273] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615215] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615218 'move' call_tmp[615215](454896 'typeof' x[62309]))
      unknown call_tmp[615220] "expr temp" "maybe param" "maybe type" "temp"
      (615223 'move' call_tmp[615220](354323 'is_subtype' call_type_tmp[491817] call_tmp[615215]))
      (555275 'move' tmp[555273](419124 call isTrue call_tmp[615220]))
      (555280 'move' tmp[555265](555277 '_paramFoldLogical' tmp[555266] tmp[555273]))
    }
    {
      (555285 'move' tmp[555265](555282 '_paramFoldLogical' tmp[555266] 0))
    }
    (748395 call chpl_statementLevelSymbol tmp[555265])
  }
  function /[62425](arg x[62422]:_tuple[56202](?), arg y[62432] :
  unknown call_tmp[615225] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508924] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491823] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615230] "expr temp" "maybe param" "maybe type" "temp"
      (615233 'move' call_tmp[615230](62446 call x[62422] 0))
      (491827 'move' call_type_tmp[491823](62447 'typeof' call_tmp[615230]))
    }
    unknown result[62450] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615237] "expr temp" "maybe param" "maybe type" "temp"
    (615240 'move' call_tmp[615237](62440 call size _mt[243] x[62422]))
    unknown call_tmp[615242] "expr temp" "maybe param" "maybe type" "temp"
    (615245 'move' call_tmp[615242](62448 call * call_tmp[615237] call_type_tmp[491823]))
    (541063 'default init var' result[62450] call_tmp[615242])
    (62453 'end of statement')
    {
      unknown d[62479] "dead at end of block" "insert auto destroy"
      (541065 'init var' d[62479] 0)
      (475230 'end of statement')
      unknown tmp[62480] "maybe param" "temp"
      unknown call_tmp[615249] "expr temp" "maybe param" "maybe type" "temp"
      (615252 'move' call_tmp[615249](62457 call size _mt[243] x[62422]))
      unknown call_tmp[615254] "expr temp" "maybe param" "maybe type" "temp"
      (615257 'move' call_tmp[615254](62461 call - call_tmp[615249] 1))
      (62492 'move' tmp[62480](62490 call chpl_compute_low_param_loop_bound 0 call_tmp[615254]))
      unknown tmp[62481] "maybe param" "temp"
      unknown call_tmp[615261] "expr temp" "maybe param" "maybe type" "temp"
      (615264 'move' call_tmp[615261](62499 call size _mt[243] x[62422]))
      unknown call_tmp[615266] "expr temp" "maybe param" "maybe type" "temp"
      (615269 'move' call_tmp[615266](62497 call - call_tmp[615261] 1))
      (62505 'move' tmp[62481](62503 call chpl_compute_high_param_loop_bound 0 call_tmp[615266]))
      unknown tmp[62482] "maybe param" "temp"
      (62508 'move' tmp[62482] 1)
      ParamForLoop[62510]
      { d[62479] tmp[62480] tmp[62481] tmp[62482]
        unknown call_tmp[615271] "expr temp" "maybe param" "maybe type" "temp"
        (615274 'move' call_tmp[615271](62468 call result[62450] d[62479]))
        unknown call_tmp[615276] "expr temp" "maybe param" "maybe type" "temp"
        (615279 'move' call_tmp[615276](62472 call x[62422] d[62479]))
        unknown call_tmp[615281] "expr temp" "maybe param" "maybe type" "temp"
        (615284 'move' call_tmp[615281](62474 call / call_tmp[615276] y[62432]))
        (62476 call = call_tmp[615271] call_tmp[615281])
        (475231 'end of statement' result[62450] d[62479] d[62479])
      }
      label _unused_continueLabel[62484]
      label _breakLabel[62483]
    }
    (508929 'move' ret[508924](508928 'deref' result[62450]))
    gotoReturn _end_/[508922] _end_/[508922]
    (475235 'end of statement' result[62450])
    label _end_/[508922]
    (508926 return ret[508924])
  }
  where {
    (62438 call isHomogeneousTuple x[62422])
  }
  function /[62532](arg x[62529]:_any[178](?), arg y[62535]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508935] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491829] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615286] "expr temp" "maybe param" "maybe type" "temp"
      (615289 'move' call_tmp[615286](62560 call y[62535] 0))
      (491833 'move' call_type_tmp[491829](62561 'typeof' call_tmp[615286]))
    }
    unknown result[62564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615293] "expr temp" "maybe param" "maybe type" "temp"
    (615296 'move' call_tmp[615293](62554 call size _mt[243] y[62535]))
    unknown call_tmp[615298] "expr temp" "maybe param" "maybe type" "temp"
    (615301 'move' call_tmp[615298](62562 call * call_tmp[615293] call_type_tmp[491829]))
    (541067 'default init var' result[62564] call_tmp[615298])
    (62567 'end of statement')
    {
      unknown d[62593] "dead at end of block" "insert auto destroy"
      (541069 'init var' d[62593] 0)
      (475237 'end of statement')
      unknown tmp[62594] "maybe param" "temp"
      unknown call_tmp[615305] "expr temp" "maybe param" "maybe type" "temp"
      (615308 'move' call_tmp[615305](62571 call size _mt[243] y[62535]))
      unknown call_tmp[615310] "expr temp" "maybe param" "maybe type" "temp"
      (615313 'move' call_tmp[615310](62575 call - call_tmp[615305] 1))
      (62606 'move' tmp[62594](62604 call chpl_compute_low_param_loop_bound 0 call_tmp[615310]))
      unknown tmp[62595] "maybe param" "temp"
      unknown call_tmp[615317] "expr temp" "maybe param" "maybe type" "temp"
      (615320 'move' call_tmp[615317](62613 call size _mt[243] y[62535]))
      unknown call_tmp[615322] "expr temp" "maybe param" "maybe type" "temp"
      (615325 'move' call_tmp[615322](62611 call - call_tmp[615317] 1))
      (62619 'move' tmp[62595](62617 call chpl_compute_high_param_loop_bound 0 call_tmp[615322]))
      unknown tmp[62596] "maybe param" "temp"
      (62622 'move' tmp[62596] 1)
      ParamForLoop[62624]
      { d[62593] tmp[62594] tmp[62595] tmp[62596]
        unknown call_tmp[615327] "expr temp" "maybe param" "maybe type" "temp"
        (615330 'move' call_tmp[615327](62582 call result[62564] d[62593]))
        unknown call_tmp[615332] "expr temp" "maybe param" "maybe type" "temp"
        (615335 'move' call_tmp[615332](62587 call y[62535] d[62593]))
        unknown call_tmp[615337] "expr temp" "maybe param" "maybe type" "temp"
        (615340 'move' call_tmp[615337](62588 call / x[62529] call_tmp[615332]))
        (62590 call = call_tmp[615327] call_tmp[615337])
        (475238 'end of statement' result[62564] d[62593] d[62593])
      }
      label _unused_continueLabel[62598]
      label _breakLabel[62597]
    }
    (508940 'move' ret[508935](508939 'deref' result[62564]))
    gotoReturn _end_/[508933] _end_/[508933]
    (475242 'end of statement' result[62564])
    label _end_/[508933]
    (508937 return ret[508935])
  }
  where {
    unknown tmp[419141] "maybe param" "temp"
    (419152 'move' tmp[419141](62541 call isHomogeneousTuple y[62535]))
    unknown call_tmp[615342] "expr temp" "maybe param" "maybe type" "temp"
    (615345 'move' call_tmp[615342](419154 call _cond_invalid tmp[419141]))
    if call_tmp[615342]
    {
      (419157 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555292] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555293] "maybe param" "temp"
    unknown call_tmp[615347] "expr temp" "maybe param" "maybe type" "temp"
    (615350 'move' call_tmp[615347](419142 call isTrue tmp[419141]))
    (555298 'move' tmp[555293](555296 call _cond_test call_tmp[615347]))
    if tmp[555293]
    {
      { scopeless type
        unknown call_type_tmp[491835] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615352] "expr temp" "maybe param" "maybe type" "temp"
        (615355 'move' call_tmp[615352](62548 call y[62535] 0))
        (491839 'move' call_type_tmp[491835](62549 'typeof' call_tmp[615352]))
      }
      unknown tmp[555300] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615357] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615360 'move' call_tmp[615357](454898 'typeof' x[62529]))
      unknown call_tmp[615362] "expr temp" "maybe param" "maybe type" "temp"
      (615365 'move' call_tmp[615362](354324 'is_subtype' call_type_tmp[491835] call_tmp[615357]))
      (555302 'move' tmp[555300](419145 call isTrue call_tmp[615362]))
      (555307 'move' tmp[555292](555304 '_paramFoldLogical' tmp[555293] tmp[555300]))
    }
    {
      (555312 'move' tmp[555292](555309 '_paramFoldLogical' tmp[555293] 0))
    }
    (748397 call chpl_statementLevelSymbol tmp[555292])
  }
  function %[62645](arg x[62642]:_tuple[56202](?), arg y[62652] :
  unknown call_tmp[615367] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508946] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491841] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615372] "expr temp" "maybe param" "maybe type" "temp"
      (615375 'move' call_tmp[615372](62666 call x[62642] 0))
      (491845 'move' call_type_tmp[491841](62667 'typeof' call_tmp[615372]))
    }
    unknown result[62670] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615379] "expr temp" "maybe param" "maybe type" "temp"
    (615382 'move' call_tmp[615379](62660 call size _mt[243] x[62642]))
    unknown call_tmp[615384] "expr temp" "maybe param" "maybe type" "temp"
    (615387 'move' call_tmp[615384](62668 call * call_tmp[615379] call_type_tmp[491841]))
    (541071 'default init var' result[62670] call_tmp[615384])
    (62673 'end of statement')
    {
      unknown d[62699] "dead at end of block" "insert auto destroy"
      (541073 'init var' d[62699] 0)
      (475244 'end of statement')
      unknown tmp[62700] "maybe param" "temp"
      unknown call_tmp[615391] "expr temp" "maybe param" "maybe type" "temp"
      (615394 'move' call_tmp[615391](62677 call size _mt[243] x[62642]))
      unknown call_tmp[615396] "expr temp" "maybe param" "maybe type" "temp"
      (615399 'move' call_tmp[615396](62681 call - call_tmp[615391] 1))
      (62712 'move' tmp[62700](62710 call chpl_compute_low_param_loop_bound 0 call_tmp[615396]))
      unknown tmp[62701] "maybe param" "temp"
      unknown call_tmp[615403] "expr temp" "maybe param" "maybe type" "temp"
      (615406 'move' call_tmp[615403](62719 call size _mt[243] x[62642]))
      unknown call_tmp[615408] "expr temp" "maybe param" "maybe type" "temp"
      (615411 'move' call_tmp[615408](62717 call - call_tmp[615403] 1))
      (62725 'move' tmp[62701](62723 call chpl_compute_high_param_loop_bound 0 call_tmp[615408]))
      unknown tmp[62702] "maybe param" "temp"
      (62728 'move' tmp[62702] 1)
      ParamForLoop[62730]
      { d[62699] tmp[62700] tmp[62701] tmp[62702]
        unknown call_tmp[615413] "expr temp" "maybe param" "maybe type" "temp"
        (615416 'move' call_tmp[615413](62688 call result[62670] d[62699]))
        unknown call_tmp[615418] "expr temp" "maybe param" "maybe type" "temp"
        (615421 'move' call_tmp[615418](62692 call x[62642] d[62699]))
        unknown call_tmp[615423] "expr temp" "maybe param" "maybe type" "temp"
        (615426 'move' call_tmp[615423](62694 call % call_tmp[615418] y[62652]))
        (62696 call = call_tmp[615413] call_tmp[615423])
        (475245 'end of statement' result[62670] d[62699] d[62699])
      }
      label _unused_continueLabel[62704]
      label _breakLabel[62703]
    }
    (508951 'move' ret[508946](508950 'deref' result[62670]))
    gotoReturn _end_%[508944] _end_%[508944]
    (475249 'end of statement' result[62670])
    label _end_%[508944]
    (508948 return ret[508946])
  }
  where {
    (62658 call isHomogeneousTuple x[62642])
  }
  function %[62752](arg x[62749]:_any[178](?), arg y[62755]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508957] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491847] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615428] "expr temp" "maybe param" "maybe type" "temp"
      (615431 'move' call_tmp[615428](62780 call y[62755] 0))
      (491851 'move' call_type_tmp[491847](62781 'typeof' call_tmp[615428]))
    }
    unknown result[62784] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615435] "expr temp" "maybe param" "maybe type" "temp"
    (615438 'move' call_tmp[615435](62774 call size _mt[243] y[62755]))
    unknown call_tmp[615440] "expr temp" "maybe param" "maybe type" "temp"
    (615443 'move' call_tmp[615440](62782 call * call_tmp[615435] call_type_tmp[491847]))
    (541075 'default init var' result[62784] call_tmp[615440])
    (62787 'end of statement')
    {
      unknown d[62813] "dead at end of block" "insert auto destroy"
      (541077 'init var' d[62813] 0)
      (475251 'end of statement')
      unknown tmp[62814] "maybe param" "temp"
      unknown call_tmp[615447] "expr temp" "maybe param" "maybe type" "temp"
      (615450 'move' call_tmp[615447](62791 call size _mt[243] y[62755]))
      unknown call_tmp[615452] "expr temp" "maybe param" "maybe type" "temp"
      (615455 'move' call_tmp[615452](62795 call - call_tmp[615447] 1))
      (62826 'move' tmp[62814](62824 call chpl_compute_low_param_loop_bound 0 call_tmp[615452]))
      unknown tmp[62815] "maybe param" "temp"
      unknown call_tmp[615459] "expr temp" "maybe param" "maybe type" "temp"
      (615462 'move' call_tmp[615459](62833 call size _mt[243] y[62755]))
      unknown call_tmp[615464] "expr temp" "maybe param" "maybe type" "temp"
      (615467 'move' call_tmp[615464](62831 call - call_tmp[615459] 1))
      (62839 'move' tmp[62815](62837 call chpl_compute_high_param_loop_bound 0 call_tmp[615464]))
      unknown tmp[62816] "maybe param" "temp"
      (62842 'move' tmp[62816] 1)
      ParamForLoop[62844]
      { d[62813] tmp[62814] tmp[62815] tmp[62816]
        unknown call_tmp[615469] "expr temp" "maybe param" "maybe type" "temp"
        (615472 'move' call_tmp[615469](62802 call result[62784] d[62813]))
        unknown call_tmp[615474] "expr temp" "maybe param" "maybe type" "temp"
        (615477 'move' call_tmp[615474](62807 call y[62755] d[62813]))
        unknown call_tmp[615479] "expr temp" "maybe param" "maybe type" "temp"
        (615482 'move' call_tmp[615479](62808 call % x[62749] call_tmp[615474]))
        (62810 call = call_tmp[615469] call_tmp[615479])
        (475252 'end of statement' result[62784] d[62813] d[62813])
      }
      label _unused_continueLabel[62818]
      label _breakLabel[62817]
    }
    (508962 'move' ret[508957](508961 'deref' result[62784]))
    gotoReturn _end_%[508955] _end_%[508955]
    (475256 'end of statement' result[62784])
    label _end_%[508955]
    (508959 return ret[508957])
  }
  where {
    unknown tmp[419162] "maybe param" "temp"
    (419173 'move' tmp[419162](62761 call isHomogeneousTuple y[62755]))
    unknown call_tmp[615484] "expr temp" "maybe param" "maybe type" "temp"
    (615487 'move' call_tmp[615484](419175 call _cond_invalid tmp[419162]))
    if call_tmp[615484]
    {
      (419178 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555319] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555320] "maybe param" "temp"
    unknown call_tmp[615489] "expr temp" "maybe param" "maybe type" "temp"
    (615492 'move' call_tmp[615489](419163 call isTrue tmp[419162]))
    (555325 'move' tmp[555320](555323 call _cond_test call_tmp[615489]))
    if tmp[555320]
    {
      { scopeless type
        unknown call_type_tmp[491853] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615494] "expr temp" "maybe param" "maybe type" "temp"
        (615497 'move' call_tmp[615494](62768 call y[62755] 0))
        (491857 'move' call_type_tmp[491853](62769 'typeof' call_tmp[615494]))
      }
      unknown tmp[555327] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615499] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615502 'move' call_tmp[615499](454900 'typeof' x[62749]))
      unknown call_tmp[615504] "expr temp" "maybe param" "maybe type" "temp"
      (615507 'move' call_tmp[615504](354325 'is_subtype' call_type_tmp[491853] call_tmp[615499]))
      (555329 'move' tmp[555327](419166 call isTrue call_tmp[615504]))
      (555334 'move' tmp[555319](555331 '_paramFoldLogical' tmp[555320] tmp[555327]))
    }
    {
      (555339 'move' tmp[555319](555336 '_paramFoldLogical' tmp[555320] 0))
    }
    (748399 call chpl_statementLevelSymbol tmp[555319])
  }
  function **[62865](arg x[62862]:_tuple[56202](?), arg y[62872] :
  unknown call_tmp[615509] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508968] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491859] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615514] "expr temp" "maybe param" "maybe type" "temp"
      (615517 'move' call_tmp[615514](62886 call x[62862] 0))
      (491863 'move' call_type_tmp[491859](62887 'typeof' call_tmp[615514]))
    }
    unknown result[62890] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615521] "expr temp" "maybe param" "maybe type" "temp"
    (615524 'move' call_tmp[615521](62880 call size _mt[243] x[62862]))
    unknown call_tmp[615526] "expr temp" "maybe param" "maybe type" "temp"
    (615529 'move' call_tmp[615526](62888 call * call_tmp[615521] call_type_tmp[491859]))
    (541079 'default init var' result[62890] call_tmp[615526])
    (62893 'end of statement')
    {
      unknown d[62919] "dead at end of block" "insert auto destroy"
      (541081 'init var' d[62919] 0)
      (475258 'end of statement')
      unknown tmp[62920] "maybe param" "temp"
      unknown call_tmp[615533] "expr temp" "maybe param" "maybe type" "temp"
      (615536 'move' call_tmp[615533](62897 call size _mt[243] x[62862]))
      unknown call_tmp[615538] "expr temp" "maybe param" "maybe type" "temp"
      (615541 'move' call_tmp[615538](62901 call - call_tmp[615533] 1))
      (62932 'move' tmp[62920](62930 call chpl_compute_low_param_loop_bound 0 call_tmp[615538]))
      unknown tmp[62921] "maybe param" "temp"
      unknown call_tmp[615545] "expr temp" "maybe param" "maybe type" "temp"
      (615548 'move' call_tmp[615545](62939 call size _mt[243] x[62862]))
      unknown call_tmp[615550] "expr temp" "maybe param" "maybe type" "temp"
      (615553 'move' call_tmp[615550](62937 call - call_tmp[615545] 1))
      (62945 'move' tmp[62921](62943 call chpl_compute_high_param_loop_bound 0 call_tmp[615550]))
      unknown tmp[62922] "maybe param" "temp"
      (62948 'move' tmp[62922] 1)
      ParamForLoop[62950]
      { d[62919] tmp[62920] tmp[62921] tmp[62922]
        unknown call_tmp[615555] "expr temp" "maybe param" "maybe type" "temp"
        (615558 'move' call_tmp[615555](62908 call result[62890] d[62919]))
        unknown call_tmp[615560] "expr temp" "maybe param" "maybe type" "temp"
        (615563 'move' call_tmp[615560](62912 call x[62862] d[62919]))
        unknown call_tmp[615565] "expr temp" "maybe param" "maybe type" "temp"
        (615568 'move' call_tmp[615565](62914 call ** call_tmp[615560] y[62872]))
        (62916 call = call_tmp[615555] call_tmp[615565])
        (475259 'end of statement' result[62890] d[62919] d[62919])
      }
      label _unused_continueLabel[62924]
      label _breakLabel[62923]
    }
    (508973 'move' ret[508968](508972 'deref' result[62890]))
    gotoReturn _end_**[508966] _end_**[508966]
    (475263 'end of statement' result[62890])
    label _end_**[508966]
    (508970 return ret[508968])
  }
  where {
    (62878 call isHomogeneousTuple x[62862])
  }
  function **[62972](arg x[62969]:_any[178](?), arg y[62975]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[508979] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491865] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615570] "expr temp" "maybe param" "maybe type" "temp"
      (615573 'move' call_tmp[615570](63000 call y[62975] 0))
      (491869 'move' call_type_tmp[491865](63001 'typeof' call_tmp[615570]))
    }
    unknown result[63004] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615577] "expr temp" "maybe param" "maybe type" "temp"
    (615580 'move' call_tmp[615577](62994 call size _mt[243] y[62975]))
    unknown call_tmp[615582] "expr temp" "maybe param" "maybe type" "temp"
    (615585 'move' call_tmp[615582](63002 call * call_tmp[615577] call_type_tmp[491865]))
    (541083 'default init var' result[63004] call_tmp[615582])
    (63007 'end of statement')
    {
      unknown d[63033] "dead at end of block" "insert auto destroy"
      (541085 'init var' d[63033] 0)
      (475265 'end of statement')
      unknown tmp[63034] "maybe param" "temp"
      unknown call_tmp[615589] "expr temp" "maybe param" "maybe type" "temp"
      (615592 'move' call_tmp[615589](63011 call size _mt[243] y[62975]))
      unknown call_tmp[615594] "expr temp" "maybe param" "maybe type" "temp"
      (615597 'move' call_tmp[615594](63015 call - call_tmp[615589] 1))
      (63046 'move' tmp[63034](63044 call chpl_compute_low_param_loop_bound 0 call_tmp[615594]))
      unknown tmp[63035] "maybe param" "temp"
      unknown call_tmp[615601] "expr temp" "maybe param" "maybe type" "temp"
      (615604 'move' call_tmp[615601](63053 call size _mt[243] y[62975]))
      unknown call_tmp[615606] "expr temp" "maybe param" "maybe type" "temp"
      (615609 'move' call_tmp[615606](63051 call - call_tmp[615601] 1))
      (63059 'move' tmp[63035](63057 call chpl_compute_high_param_loop_bound 0 call_tmp[615606]))
      unknown tmp[63036] "maybe param" "temp"
      (63062 'move' tmp[63036] 1)
      ParamForLoop[63064]
      { d[63033] tmp[63034] tmp[63035] tmp[63036]
        unknown call_tmp[615611] "expr temp" "maybe param" "maybe type" "temp"
        (615614 'move' call_tmp[615611](63022 call result[63004] d[63033]))
        unknown call_tmp[615616] "expr temp" "maybe param" "maybe type" "temp"
        (615619 'move' call_tmp[615616](63027 call y[62975] d[63033]))
        unknown call_tmp[615621] "expr temp" "maybe param" "maybe type" "temp"
        (615624 'move' call_tmp[615621](63028 call ** x[62969] call_tmp[615616]))
        (63030 call = call_tmp[615611] call_tmp[615621])
        (475266 'end of statement' result[63004] d[63033] d[63033])
      }
      label _unused_continueLabel[63038]
      label _breakLabel[63037]
    }
    (508984 'move' ret[508979](508983 'deref' result[63004]))
    gotoReturn _end_**[508977] _end_**[508977]
    (475270 'end of statement' result[63004])
    label _end_**[508977]
    (508981 return ret[508979])
  }
  where {
    unknown tmp[419183] "maybe param" "temp"
    (419194 'move' tmp[419183](62981 call isHomogeneousTuple y[62975]))
    unknown call_tmp[615626] "expr temp" "maybe param" "maybe type" "temp"
    (615629 'move' call_tmp[615626](419196 call _cond_invalid tmp[419183]))
    if call_tmp[615626]
    {
      (419199 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555346] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555347] "maybe param" "temp"
    unknown call_tmp[615631] "expr temp" "maybe param" "maybe type" "temp"
    (615634 'move' call_tmp[615631](419184 call isTrue tmp[419183]))
    (555352 'move' tmp[555347](555350 call _cond_test call_tmp[615631]))
    if tmp[555347]
    {
      { scopeless type
        unknown call_type_tmp[491871] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615636] "expr temp" "maybe param" "maybe type" "temp"
        (615639 'move' call_tmp[615636](62988 call y[62975] 0))
        (491875 'move' call_type_tmp[491871](62989 'typeof' call_tmp[615636]))
      }
      unknown tmp[555354] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615641] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615644 'move' call_tmp[615641](454902 'typeof' x[62969]))
      unknown call_tmp[615646] "expr temp" "maybe param" "maybe type" "temp"
      (615649 'move' call_tmp[615646](354326 'is_subtype' call_type_tmp[491871] call_tmp[615641]))
      (555356 'move' tmp[555354](419187 call isTrue call_tmp[615646]))
      (555361 'move' tmp[555346](555358 '_paramFoldLogical' tmp[555347] tmp[555354]))
    }
    {
      (555366 'move' tmp[555346](555363 '_paramFoldLogical' tmp[555347] 0))
    }
    (748401 call chpl_statementLevelSymbol tmp[555346])
  }
  function &[63085](arg x[63082]:_tuple[56202](?), arg y[63092] :
  unknown call_tmp[615651] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508990] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491877] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615656] "expr temp" "maybe param" "maybe type" "temp"
      (615659 'move' call_tmp[615656](63106 call x[63082] 0))
      (491881 'move' call_type_tmp[491877](63107 'typeof' call_tmp[615656]))
    }
    unknown result[63110] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615663] "expr temp" "maybe param" "maybe type" "temp"
    (615666 'move' call_tmp[615663](63100 call size _mt[243] x[63082]))
    unknown call_tmp[615668] "expr temp" "maybe param" "maybe type" "temp"
    (615671 'move' call_tmp[615668](63108 call * call_tmp[615663] call_type_tmp[491877]))
    (541087 'default init var' result[63110] call_tmp[615668])
    (63113 'end of statement')
    {
      unknown d[63139] "dead at end of block" "insert auto destroy"
      (541089 'init var' d[63139] 0)
      (475272 'end of statement')
      unknown tmp[63140] "maybe param" "temp"
      unknown call_tmp[615675] "expr temp" "maybe param" "maybe type" "temp"
      (615678 'move' call_tmp[615675](63117 call size _mt[243] x[63082]))
      unknown call_tmp[615680] "expr temp" "maybe param" "maybe type" "temp"
      (615683 'move' call_tmp[615680](63121 call - call_tmp[615675] 1))
      (63152 'move' tmp[63140](63150 call chpl_compute_low_param_loop_bound 0 call_tmp[615680]))
      unknown tmp[63141] "maybe param" "temp"
      unknown call_tmp[615687] "expr temp" "maybe param" "maybe type" "temp"
      (615690 'move' call_tmp[615687](63159 call size _mt[243] x[63082]))
      unknown call_tmp[615692] "expr temp" "maybe param" "maybe type" "temp"
      (615695 'move' call_tmp[615692](63157 call - call_tmp[615687] 1))
      (63165 'move' tmp[63141](63163 call chpl_compute_high_param_loop_bound 0 call_tmp[615692]))
      unknown tmp[63142] "maybe param" "temp"
      (63168 'move' tmp[63142] 1)
      ParamForLoop[63170]
      { d[63139] tmp[63140] tmp[63141] tmp[63142]
        unknown call_tmp[615697] "expr temp" "maybe param" "maybe type" "temp"
        (615700 'move' call_tmp[615697](63128 call result[63110] d[63139]))
        unknown call_tmp[615702] "expr temp" "maybe param" "maybe type" "temp"
        (615705 'move' call_tmp[615702](63132 call x[63082] d[63139]))
        unknown call_tmp[615707] "expr temp" "maybe param" "maybe type" "temp"
        (615710 'move' call_tmp[615707](63134 call & call_tmp[615702] y[63092]))
        (63136 call = call_tmp[615697] call_tmp[615707])
        (475273 'end of statement' result[63110] d[63139] d[63139])
      }
      label _unused_continueLabel[63144]
      label _breakLabel[63143]
    }
    (508995 'move' ret[508990](508994 'deref' result[63110]))
    gotoReturn _end_&[508988] _end_&[508988]
    (475277 'end of statement' result[63110])
    label _end_&[508988]
    (508992 return ret[508990])
  }
  where {
    (63098 call isHomogeneousTuple x[63082])
  }
  function &[63192](arg x[63189]:_any[178](?), arg y[63195]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509001] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491883] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615712] "expr temp" "maybe param" "maybe type" "temp"
      (615715 'move' call_tmp[615712](63220 call y[63195] 0))
      (491887 'move' call_type_tmp[491883](63221 'typeof' call_tmp[615712]))
    }
    unknown result[63224] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615719] "expr temp" "maybe param" "maybe type" "temp"
    (615722 'move' call_tmp[615719](63214 call size _mt[243] y[63195]))
    unknown call_tmp[615724] "expr temp" "maybe param" "maybe type" "temp"
    (615727 'move' call_tmp[615724](63222 call * call_tmp[615719] call_type_tmp[491883]))
    (541091 'default init var' result[63224] call_tmp[615724])
    (63227 'end of statement')
    {
      unknown d[63253] "dead at end of block" "insert auto destroy"
      (541093 'init var' d[63253] 0)
      (475279 'end of statement')
      unknown tmp[63254] "maybe param" "temp"
      unknown call_tmp[615731] "expr temp" "maybe param" "maybe type" "temp"
      (615734 'move' call_tmp[615731](63231 call size _mt[243] y[63195]))
      unknown call_tmp[615736] "expr temp" "maybe param" "maybe type" "temp"
      (615739 'move' call_tmp[615736](63235 call - call_tmp[615731] 1))
      (63266 'move' tmp[63254](63264 call chpl_compute_low_param_loop_bound 0 call_tmp[615736]))
      unknown tmp[63255] "maybe param" "temp"
      unknown call_tmp[615743] "expr temp" "maybe param" "maybe type" "temp"
      (615746 'move' call_tmp[615743](63273 call size _mt[243] y[63195]))
      unknown call_tmp[615748] "expr temp" "maybe param" "maybe type" "temp"
      (615751 'move' call_tmp[615748](63271 call - call_tmp[615743] 1))
      (63279 'move' tmp[63255](63277 call chpl_compute_high_param_loop_bound 0 call_tmp[615748]))
      unknown tmp[63256] "maybe param" "temp"
      (63282 'move' tmp[63256] 1)
      ParamForLoop[63284]
      { d[63253] tmp[63254] tmp[63255] tmp[63256]
        unknown call_tmp[615753] "expr temp" "maybe param" "maybe type" "temp"
        (615756 'move' call_tmp[615753](63242 call result[63224] d[63253]))
        unknown call_tmp[615758] "expr temp" "maybe param" "maybe type" "temp"
        (615761 'move' call_tmp[615758](63247 call y[63195] d[63253]))
        unknown call_tmp[615763] "expr temp" "maybe param" "maybe type" "temp"
        (615766 'move' call_tmp[615763](63248 call & x[63189] call_tmp[615758]))
        (63250 call = call_tmp[615753] call_tmp[615763])
        (475280 'end of statement' result[63224] d[63253] d[63253])
      }
      label _unused_continueLabel[63258]
      label _breakLabel[63257]
    }
    (509006 'move' ret[509001](509005 'deref' result[63224]))
    gotoReturn _end_&[508999] _end_&[508999]
    (475284 'end of statement' result[63224])
    label _end_&[508999]
    (509003 return ret[509001])
  }
  where {
    unknown tmp[419204] "maybe param" "temp"
    (419215 'move' tmp[419204](63201 call isHomogeneousTuple y[63195]))
    unknown call_tmp[615768] "expr temp" "maybe param" "maybe type" "temp"
    (615771 'move' call_tmp[615768](419217 call _cond_invalid tmp[419204]))
    if call_tmp[615768]
    {
      (419220 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555373] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555374] "maybe param" "temp"
    unknown call_tmp[615773] "expr temp" "maybe param" "maybe type" "temp"
    (615776 'move' call_tmp[615773](419205 call isTrue tmp[419204]))
    (555379 'move' tmp[555374](555377 call _cond_test call_tmp[615773]))
    if tmp[555374]
    {
      { scopeless type
        unknown call_type_tmp[491889] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615778] "expr temp" "maybe param" "maybe type" "temp"
        (615781 'move' call_tmp[615778](63208 call y[63195] 0))
        (491893 'move' call_type_tmp[491889](63209 'typeof' call_tmp[615778]))
      }
      unknown tmp[555381] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615783] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615786 'move' call_tmp[615783](454904 'typeof' x[63189]))
      unknown call_tmp[615788] "expr temp" "maybe param" "maybe type" "temp"
      (615791 'move' call_tmp[615788](354327 'is_subtype' call_type_tmp[491889] call_tmp[615783]))
      (555383 'move' tmp[555381](419208 call isTrue call_tmp[615788]))
      (555388 'move' tmp[555373](555385 '_paramFoldLogical' tmp[555374] tmp[555381]))
    }
    {
      (555393 'move' tmp[555373](555390 '_paramFoldLogical' tmp[555374] 0))
    }
    (748403 call chpl_statementLevelSymbol tmp[555373])
  }
  function |[63305](arg x[63302]:_tuple[56202](?), arg y[63312] :
  unknown call_tmp[615793] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509012] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491895] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615798] "expr temp" "maybe param" "maybe type" "temp"
      (615801 'move' call_tmp[615798](63326 call x[63302] 0))
      (491899 'move' call_type_tmp[491895](63327 'typeof' call_tmp[615798]))
    }
    unknown result[63330] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615805] "expr temp" "maybe param" "maybe type" "temp"
    (615808 'move' call_tmp[615805](63320 call size _mt[243] x[63302]))
    unknown call_tmp[615810] "expr temp" "maybe param" "maybe type" "temp"
    (615813 'move' call_tmp[615810](63328 call * call_tmp[615805] call_type_tmp[491895]))
    (541095 'default init var' result[63330] call_tmp[615810])
    (63333 'end of statement')
    {
      unknown d[63359] "dead at end of block" "insert auto destroy"
      (541097 'init var' d[63359] 0)
      (475286 'end of statement')
      unknown tmp[63360] "maybe param" "temp"
      unknown call_tmp[615817] "expr temp" "maybe param" "maybe type" "temp"
      (615820 'move' call_tmp[615817](63337 call size _mt[243] x[63302]))
      unknown call_tmp[615822] "expr temp" "maybe param" "maybe type" "temp"
      (615825 'move' call_tmp[615822](63341 call - call_tmp[615817] 1))
      (63372 'move' tmp[63360](63370 call chpl_compute_low_param_loop_bound 0 call_tmp[615822]))
      unknown tmp[63361] "maybe param" "temp"
      unknown call_tmp[615829] "expr temp" "maybe param" "maybe type" "temp"
      (615832 'move' call_tmp[615829](63379 call size _mt[243] x[63302]))
      unknown call_tmp[615834] "expr temp" "maybe param" "maybe type" "temp"
      (615837 'move' call_tmp[615834](63377 call - call_tmp[615829] 1))
      (63385 'move' tmp[63361](63383 call chpl_compute_high_param_loop_bound 0 call_tmp[615834]))
      unknown tmp[63362] "maybe param" "temp"
      (63388 'move' tmp[63362] 1)
      ParamForLoop[63390]
      { d[63359] tmp[63360] tmp[63361] tmp[63362]
        unknown call_tmp[615839] "expr temp" "maybe param" "maybe type" "temp"
        (615842 'move' call_tmp[615839](63348 call result[63330] d[63359]))
        unknown call_tmp[615844] "expr temp" "maybe param" "maybe type" "temp"
        (615847 'move' call_tmp[615844](63352 call x[63302] d[63359]))
        unknown call_tmp[615849] "expr temp" "maybe param" "maybe type" "temp"
        (615852 'move' call_tmp[615849](63354 call | call_tmp[615844] y[63312]))
        (63356 call = call_tmp[615839] call_tmp[615849])
        (475287 'end of statement' result[63330] d[63359] d[63359])
      }
      label _unused_continueLabel[63364]
      label _breakLabel[63363]
    }
    (509017 'move' ret[509012](509016 'deref' result[63330]))
    gotoReturn _end_|[509010] _end_|[509010]
    (475291 'end of statement' result[63330])
    label _end_|[509010]
    (509014 return ret[509012])
  }
  where {
    (63318 call isHomogeneousTuple x[63302])
  }
  function |[63412](arg x[63409]:_any[178](?), arg y[63415]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509023] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491901] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615854] "expr temp" "maybe param" "maybe type" "temp"
      (615857 'move' call_tmp[615854](63440 call y[63415] 0))
      (491905 'move' call_type_tmp[491901](63441 'typeof' call_tmp[615854]))
    }
    unknown result[63444] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615861] "expr temp" "maybe param" "maybe type" "temp"
    (615864 'move' call_tmp[615861](63434 call size _mt[243] y[63415]))
    unknown call_tmp[615866] "expr temp" "maybe param" "maybe type" "temp"
    (615869 'move' call_tmp[615866](63442 call * call_tmp[615861] call_type_tmp[491901]))
    (541099 'default init var' result[63444] call_tmp[615866])
    (63447 'end of statement')
    {
      unknown d[63473] "dead at end of block" "insert auto destroy"
      (541101 'init var' d[63473] 0)
      (475293 'end of statement')
      unknown tmp[63474] "maybe param" "temp"
      unknown call_tmp[615873] "expr temp" "maybe param" "maybe type" "temp"
      (615876 'move' call_tmp[615873](63451 call size _mt[243] y[63415]))
      unknown call_tmp[615878] "expr temp" "maybe param" "maybe type" "temp"
      (615881 'move' call_tmp[615878](63455 call - call_tmp[615873] 1))
      (63486 'move' tmp[63474](63484 call chpl_compute_low_param_loop_bound 0 call_tmp[615878]))
      unknown tmp[63475] "maybe param" "temp"
      unknown call_tmp[615885] "expr temp" "maybe param" "maybe type" "temp"
      (615888 'move' call_tmp[615885](63493 call size _mt[243] y[63415]))
      unknown call_tmp[615890] "expr temp" "maybe param" "maybe type" "temp"
      (615893 'move' call_tmp[615890](63491 call - call_tmp[615885] 1))
      (63499 'move' tmp[63475](63497 call chpl_compute_high_param_loop_bound 0 call_tmp[615890]))
      unknown tmp[63476] "maybe param" "temp"
      (63502 'move' tmp[63476] 1)
      ParamForLoop[63504]
      { d[63473] tmp[63474] tmp[63475] tmp[63476]
        unknown call_tmp[615895] "expr temp" "maybe param" "maybe type" "temp"
        (615898 'move' call_tmp[615895](63462 call result[63444] d[63473]))
        unknown call_tmp[615900] "expr temp" "maybe param" "maybe type" "temp"
        (615903 'move' call_tmp[615900](63467 call y[63415] d[63473]))
        unknown call_tmp[615905] "expr temp" "maybe param" "maybe type" "temp"
        (615908 'move' call_tmp[615905](63468 call | x[63409] call_tmp[615900]))
        (63470 call = call_tmp[615895] call_tmp[615905])
        (475294 'end of statement' result[63444] d[63473] d[63473])
      }
      label _unused_continueLabel[63478]
      label _breakLabel[63477]
    }
    (509028 'move' ret[509023](509027 'deref' result[63444]))
    gotoReturn _end_|[509021] _end_|[509021]
    (475298 'end of statement' result[63444])
    label _end_|[509021]
    (509025 return ret[509023])
  }
  where {
    unknown tmp[419225] "maybe param" "temp"
    (419236 'move' tmp[419225](63421 call isHomogeneousTuple y[63415]))
    unknown call_tmp[615910] "expr temp" "maybe param" "maybe type" "temp"
    (615913 'move' call_tmp[615910](419238 call _cond_invalid tmp[419225]))
    if call_tmp[615910]
    {
      (419241 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555400] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555401] "maybe param" "temp"
    unknown call_tmp[615915] "expr temp" "maybe param" "maybe type" "temp"
    (615918 'move' call_tmp[615915](419226 call isTrue tmp[419225]))
    (555406 'move' tmp[555401](555404 call _cond_test call_tmp[615915]))
    if tmp[555401]
    {
      { scopeless type
        unknown call_type_tmp[491907] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615920] "expr temp" "maybe param" "maybe type" "temp"
        (615923 'move' call_tmp[615920](63428 call y[63415] 0))
        (491911 'move' call_type_tmp[491907](63429 'typeof' call_tmp[615920]))
      }
      unknown tmp[555408] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615925] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615928 'move' call_tmp[615925](454906 'typeof' x[63409]))
      unknown call_tmp[615930] "expr temp" "maybe param" "maybe type" "temp"
      (615933 'move' call_tmp[615930](354328 'is_subtype' call_type_tmp[491907] call_tmp[615925]))
      (555410 'move' tmp[555408](419229 call isTrue call_tmp[615930]))
      (555415 'move' tmp[555400](555412 '_paramFoldLogical' tmp[555401] tmp[555408]))
    }
    {
      (555420 'move' tmp[555400](555417 '_paramFoldLogical' tmp[555401] 0))
    }
    (748405 call chpl_statementLevelSymbol tmp[555400])
  }
  function ^[63525](arg x[63522]:_tuple[56202](?), arg y[63532] :
  unknown call_tmp[615935] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509034] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491913] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615940] "expr temp" "maybe param" "maybe type" "temp"
      (615943 'move' call_tmp[615940](63546 call x[63522] 0))
      (491917 'move' call_type_tmp[491913](63547 'typeof' call_tmp[615940]))
    }
    unknown result[63550] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615947] "expr temp" "maybe param" "maybe type" "temp"
    (615950 'move' call_tmp[615947](63540 call size _mt[243] x[63522]))
    unknown call_tmp[615952] "expr temp" "maybe param" "maybe type" "temp"
    (615955 'move' call_tmp[615952](63548 call * call_tmp[615947] call_type_tmp[491913]))
    (541103 'default init var' result[63550] call_tmp[615952])
    (63553 'end of statement')
    {
      unknown d[63579] "dead at end of block" "insert auto destroy"
      (541105 'init var' d[63579] 0)
      (475300 'end of statement')
      unknown tmp[63580] "maybe param" "temp"
      unknown call_tmp[615959] "expr temp" "maybe param" "maybe type" "temp"
      (615962 'move' call_tmp[615959](63557 call size _mt[243] x[63522]))
      unknown call_tmp[615964] "expr temp" "maybe param" "maybe type" "temp"
      (615967 'move' call_tmp[615964](63561 call - call_tmp[615959] 1))
      (63592 'move' tmp[63580](63590 call chpl_compute_low_param_loop_bound 0 call_tmp[615964]))
      unknown tmp[63581] "maybe param" "temp"
      unknown call_tmp[615971] "expr temp" "maybe param" "maybe type" "temp"
      (615974 'move' call_tmp[615971](63599 call size _mt[243] x[63522]))
      unknown call_tmp[615976] "expr temp" "maybe param" "maybe type" "temp"
      (615979 'move' call_tmp[615976](63597 call - call_tmp[615971] 1))
      (63605 'move' tmp[63581](63603 call chpl_compute_high_param_loop_bound 0 call_tmp[615976]))
      unknown tmp[63582] "maybe param" "temp"
      (63608 'move' tmp[63582] 1)
      ParamForLoop[63610]
      { d[63579] tmp[63580] tmp[63581] tmp[63582]
        unknown call_tmp[615981] "expr temp" "maybe param" "maybe type" "temp"
        (615984 'move' call_tmp[615981](63568 call result[63550] d[63579]))
        unknown call_tmp[615986] "expr temp" "maybe param" "maybe type" "temp"
        (615989 'move' call_tmp[615986](63572 call x[63522] d[63579]))
        unknown call_tmp[615991] "expr temp" "maybe param" "maybe type" "temp"
        (615994 'move' call_tmp[615991](63574 call ^ call_tmp[615986] y[63532]))
        (63576 call = call_tmp[615981] call_tmp[615991])
        (475301 'end of statement' result[63550] d[63579] d[63579])
      }
      label _unused_continueLabel[63584]
      label _breakLabel[63583]
    }
    (509039 'move' ret[509034](509038 'deref' result[63550]))
    gotoReturn _end_^[509032] _end_^[509032]
    (475305 'end of statement' result[63550])
    label _end_^[509032]
    (509036 return ret[509034])
  }
  where {
    (63538 call isHomogeneousTuple x[63522])
  }
  function ^[63632](arg x[63629]:_any[178](?), arg y[63635]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509045] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491919] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615996] "expr temp" "maybe param" "maybe type" "temp"
      (615999 'move' call_tmp[615996](63660 call y[63635] 0))
      (491923 'move' call_type_tmp[491919](63661 'typeof' call_tmp[615996]))
    }
    unknown result[63664] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616003] "expr temp" "maybe param" "maybe type" "temp"
    (616006 'move' call_tmp[616003](63654 call size _mt[243] y[63635]))
    unknown call_tmp[616008] "expr temp" "maybe param" "maybe type" "temp"
    (616011 'move' call_tmp[616008](63662 call * call_tmp[616003] call_type_tmp[491919]))
    (541107 'default init var' result[63664] call_tmp[616008])
    (63667 'end of statement')
    {
      unknown d[63693] "dead at end of block" "insert auto destroy"
      (541109 'init var' d[63693] 0)
      (475307 'end of statement')
      unknown tmp[63694] "maybe param" "temp"
      unknown call_tmp[616015] "expr temp" "maybe param" "maybe type" "temp"
      (616018 'move' call_tmp[616015](63671 call size _mt[243] y[63635]))
      unknown call_tmp[616020] "expr temp" "maybe param" "maybe type" "temp"
      (616023 'move' call_tmp[616020](63675 call - call_tmp[616015] 1))
      (63706 'move' tmp[63694](63704 call chpl_compute_low_param_loop_bound 0 call_tmp[616020]))
      unknown tmp[63695] "maybe param" "temp"
      unknown call_tmp[616027] "expr temp" "maybe param" "maybe type" "temp"
      (616030 'move' call_tmp[616027](63713 call size _mt[243] y[63635]))
      unknown call_tmp[616032] "expr temp" "maybe param" "maybe type" "temp"
      (616035 'move' call_tmp[616032](63711 call - call_tmp[616027] 1))
      (63719 'move' tmp[63695](63717 call chpl_compute_high_param_loop_bound 0 call_tmp[616032]))
      unknown tmp[63696] "maybe param" "temp"
      (63722 'move' tmp[63696] 1)
      ParamForLoop[63724]
      { d[63693] tmp[63694] tmp[63695] tmp[63696]
        unknown call_tmp[616037] "expr temp" "maybe param" "maybe type" "temp"
        (616040 'move' call_tmp[616037](63682 call result[63664] d[63693]))
        unknown call_tmp[616042] "expr temp" "maybe param" "maybe type" "temp"
        (616045 'move' call_tmp[616042](63687 call y[63635] d[63693]))
        unknown call_tmp[616047] "expr temp" "maybe param" "maybe type" "temp"
        (616050 'move' call_tmp[616047](63688 call ^ x[63629] call_tmp[616042]))
        (63690 call = call_tmp[616037] call_tmp[616047])
        (475308 'end of statement' result[63664] d[63693] d[63693])
      }
      label _unused_continueLabel[63698]
      label _breakLabel[63697]
    }
    (509050 'move' ret[509045](509049 'deref' result[63664]))
    gotoReturn _end_^[509043] _end_^[509043]
    (475312 'end of statement' result[63664])
    label _end_^[509043]
    (509047 return ret[509045])
  }
  where {
    unknown tmp[419246] "maybe param" "temp"
    (419257 'move' tmp[419246](63641 call isHomogeneousTuple y[63635]))
    unknown call_tmp[616052] "expr temp" "maybe param" "maybe type" "temp"
    (616055 'move' call_tmp[616052](419259 call _cond_invalid tmp[419246]))
    if call_tmp[616052]
    {
      (419262 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555427] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555428] "maybe param" "temp"
    unknown call_tmp[616057] "expr temp" "maybe param" "maybe type" "temp"
    (616060 'move' call_tmp[616057](419247 call isTrue tmp[419246]))
    (555433 'move' tmp[555428](555431 call _cond_test call_tmp[616057]))
    if tmp[555428]
    {
      { scopeless type
        unknown call_type_tmp[491925] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616062] "expr temp" "maybe param" "maybe type" "temp"
        (616065 'move' call_tmp[616062](63648 call y[63635] 0))
        (491929 'move' call_type_tmp[491925](63649 'typeof' call_tmp[616062]))
      }
      unknown tmp[555435] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616067] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616070 'move' call_tmp[616067](454908 'typeof' x[63629]))
      unknown call_tmp[616072] "expr temp" "maybe param" "maybe type" "temp"
      (616075 'move' call_tmp[616072](354329 'is_subtype' call_type_tmp[491925] call_tmp[616067]))
      (555437 'move' tmp[555435](419250 call isTrue call_tmp[616072]))
      (555442 'move' tmp[555427](555439 '_paramFoldLogical' tmp[555428] tmp[555435]))
    }
    {
      (555447 'move' tmp[555427](555444 '_paramFoldLogical' tmp[555428] 0))
    }
    (748407 call chpl_statementLevelSymbol tmp[555427])
  }
  function <<[63745](arg x[63742]:_tuple[56202](?), arg y[63752] :
  unknown call_tmp[616077] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509056] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491931] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616082] "expr temp" "maybe param" "maybe type" "temp"
      (616085 'move' call_tmp[616082](63766 call x[63742] 0))
      (491935 'move' call_type_tmp[491931](63767 'typeof' call_tmp[616082]))
    }
    unknown result[63770] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616089] "expr temp" "maybe param" "maybe type" "temp"
    (616092 'move' call_tmp[616089](63760 call size _mt[243] x[63742]))
    unknown call_tmp[616094] "expr temp" "maybe param" "maybe type" "temp"
    (616097 'move' call_tmp[616094](63768 call * call_tmp[616089] call_type_tmp[491931]))
    (541111 'default init var' result[63770] call_tmp[616094])
    (63773 'end of statement')
    {
      unknown d[63799] "dead at end of block" "insert auto destroy"
      (541113 'init var' d[63799] 0)
      (475314 'end of statement')
      unknown tmp[63800] "maybe param" "temp"
      unknown call_tmp[616101] "expr temp" "maybe param" "maybe type" "temp"
      (616104 'move' call_tmp[616101](63777 call size _mt[243] x[63742]))
      unknown call_tmp[616106] "expr temp" "maybe param" "maybe type" "temp"
      (616109 'move' call_tmp[616106](63781 call - call_tmp[616101] 1))
      (63812 'move' tmp[63800](63810 call chpl_compute_low_param_loop_bound 0 call_tmp[616106]))
      unknown tmp[63801] "maybe param" "temp"
      unknown call_tmp[616113] "expr temp" "maybe param" "maybe type" "temp"
      (616116 'move' call_tmp[616113](63819 call size _mt[243] x[63742]))
      unknown call_tmp[616118] "expr temp" "maybe param" "maybe type" "temp"
      (616121 'move' call_tmp[616118](63817 call - call_tmp[616113] 1))
      (63825 'move' tmp[63801](63823 call chpl_compute_high_param_loop_bound 0 call_tmp[616118]))
      unknown tmp[63802] "maybe param" "temp"
      (63828 'move' tmp[63802] 1)
      ParamForLoop[63830]
      { d[63799] tmp[63800] tmp[63801] tmp[63802]
        unknown call_tmp[616123] "expr temp" "maybe param" "maybe type" "temp"
        (616126 'move' call_tmp[616123](63788 call result[63770] d[63799]))
        unknown call_tmp[616128] "expr temp" "maybe param" "maybe type" "temp"
        (616131 'move' call_tmp[616128](63792 call x[63742] d[63799]))
        unknown call_tmp[616133] "expr temp" "maybe param" "maybe type" "temp"
        (616136 'move' call_tmp[616133](63794 call << call_tmp[616128] y[63752]))
        (63796 call = call_tmp[616123] call_tmp[616133])
        (475315 'end of statement' result[63770] d[63799] d[63799])
      }
      label _unused_continueLabel[63804]
      label _breakLabel[63803]
    }
    (509061 'move' ret[509056](509060 'deref' result[63770]))
    gotoReturn _end_<<[509054] _end_<<[509054]
    (475319 'end of statement' result[63770])
    label _end_<<[509054]
    (509058 return ret[509056])
  }
  where {
    (63758 call isHomogeneousTuple x[63742])
  }
  function <<[63852](arg x[63849]:_any[178](?), arg y[63855]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509067] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491937] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616138] "expr temp" "maybe param" "maybe type" "temp"
      (616141 'move' call_tmp[616138](63880 call y[63855] 0))
      (491941 'move' call_type_tmp[491937](63881 'typeof' call_tmp[616138]))
    }
    unknown result[63884] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616145] "expr temp" "maybe param" "maybe type" "temp"
    (616148 'move' call_tmp[616145](63874 call size _mt[243] y[63855]))
    unknown call_tmp[616150] "expr temp" "maybe param" "maybe type" "temp"
    (616153 'move' call_tmp[616150](63882 call * call_tmp[616145] call_type_tmp[491937]))
    (541115 'default init var' result[63884] call_tmp[616150])
    (63887 'end of statement')
    {
      unknown d[63913] "dead at end of block" "insert auto destroy"
      (541117 'init var' d[63913] 0)
      (475321 'end of statement')
      unknown tmp[63914] "maybe param" "temp"
      unknown call_tmp[616157] "expr temp" "maybe param" "maybe type" "temp"
      (616160 'move' call_tmp[616157](63891 call size _mt[243] y[63855]))
      unknown call_tmp[616162] "expr temp" "maybe param" "maybe type" "temp"
      (616165 'move' call_tmp[616162](63895 call - call_tmp[616157] 1))
      (63926 'move' tmp[63914](63924 call chpl_compute_low_param_loop_bound 0 call_tmp[616162]))
      unknown tmp[63915] "maybe param" "temp"
      unknown call_tmp[616169] "expr temp" "maybe param" "maybe type" "temp"
      (616172 'move' call_tmp[616169](63933 call size _mt[243] y[63855]))
      unknown call_tmp[616174] "expr temp" "maybe param" "maybe type" "temp"
      (616177 'move' call_tmp[616174](63931 call - call_tmp[616169] 1))
      (63939 'move' tmp[63915](63937 call chpl_compute_high_param_loop_bound 0 call_tmp[616174]))
      unknown tmp[63916] "maybe param" "temp"
      (63942 'move' tmp[63916] 1)
      ParamForLoop[63944]
      { d[63913] tmp[63914] tmp[63915] tmp[63916]
        unknown call_tmp[616179] "expr temp" "maybe param" "maybe type" "temp"
        (616182 'move' call_tmp[616179](63902 call result[63884] d[63913]))
        unknown call_tmp[616184] "expr temp" "maybe param" "maybe type" "temp"
        (616187 'move' call_tmp[616184](63907 call y[63855] d[63913]))
        unknown call_tmp[616189] "expr temp" "maybe param" "maybe type" "temp"
        (616192 'move' call_tmp[616189](63908 call << x[63849] call_tmp[616184]))
        (63910 call = call_tmp[616179] call_tmp[616189])
        (475322 'end of statement' result[63884] d[63913] d[63913])
      }
      label _unused_continueLabel[63918]
      label _breakLabel[63917]
    }
    (509072 'move' ret[509067](509071 'deref' result[63884]))
    gotoReturn _end_<<[509065] _end_<<[509065]
    (475326 'end of statement' result[63884])
    label _end_<<[509065]
    (509069 return ret[509067])
  }
  where {
    unknown tmp[419267] "maybe param" "temp"
    (419278 'move' tmp[419267](63861 call isHomogeneousTuple y[63855]))
    unknown call_tmp[616194] "expr temp" "maybe param" "maybe type" "temp"
    (616197 'move' call_tmp[616194](419280 call _cond_invalid tmp[419267]))
    if call_tmp[616194]
    {
      (419283 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555454] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555455] "maybe param" "temp"
    unknown call_tmp[616199] "expr temp" "maybe param" "maybe type" "temp"
    (616202 'move' call_tmp[616199](419268 call isTrue tmp[419267]))
    (555460 'move' tmp[555455](555458 call _cond_test call_tmp[616199]))
    if tmp[555455]
    {
      { scopeless type
        unknown call_type_tmp[491943] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616204] "expr temp" "maybe param" "maybe type" "temp"
        (616207 'move' call_tmp[616204](63868 call y[63855] 0))
        (491947 'move' call_type_tmp[491943](63869 'typeof' call_tmp[616204]))
      }
      unknown tmp[555462] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616209] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616212 'move' call_tmp[616209](454910 'typeof' x[63849]))
      unknown call_tmp[616214] "expr temp" "maybe param" "maybe type" "temp"
      (616217 'move' call_tmp[616214](354330 'is_subtype' call_type_tmp[491943] call_tmp[616209]))
      (555464 'move' tmp[555462](419271 call isTrue call_tmp[616214]))
      (555469 'move' tmp[555454](555466 '_paramFoldLogical' tmp[555455] tmp[555462]))
    }
    {
      (555474 'move' tmp[555454](555471 '_paramFoldLogical' tmp[555455] 0))
    }
    (748409 call chpl_statementLevelSymbol tmp[555454])
  }
  function >>[63965](arg x[63962]:_tuple[56202](?), arg y[63972] :
  unknown call_tmp[616219] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[509078] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491949] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616224] "expr temp" "maybe param" "maybe type" "temp"
      (616227 'move' call_tmp[616224](63986 call x[63962] 0))
      (491953 'move' call_type_tmp[491949](63987 'typeof' call_tmp[616224]))
    }
    unknown result[63990] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616231] "expr temp" "maybe param" "maybe type" "temp"
    (616234 'move' call_tmp[616231](63980 call size _mt[243] x[63962]))
    unknown call_tmp[616236] "expr temp" "maybe param" "maybe type" "temp"
    (616239 'move' call_tmp[616236](63988 call * call_tmp[616231] call_type_tmp[491949]))
    (541119 'default init var' result[63990] call_tmp[616236])
    (63993 'end of statement')
    {
      unknown d[64019] "dead at end of block" "insert auto destroy"
      (541121 'init var' d[64019] 0)
      (475328 'end of statement')
      unknown tmp[64020] "maybe param" "temp"
      unknown call_tmp[616243] "expr temp" "maybe param" "maybe type" "temp"
      (616246 'move' call_tmp[616243](63997 call size _mt[243] x[63962]))
      unknown call_tmp[616248] "expr temp" "maybe param" "maybe type" "temp"
      (616251 'move' call_tmp[616248](64001 call - call_tmp[616243] 1))
      (64032 'move' tmp[64020](64030 call chpl_compute_low_param_loop_bound 0 call_tmp[616248]))
      unknown tmp[64021] "maybe param" "temp"
      unknown call_tmp[616255] "expr temp" "maybe param" "maybe type" "temp"
      (616258 'move' call_tmp[616255](64039 call size _mt[243] x[63962]))
      unknown call_tmp[616260] "expr temp" "maybe param" "maybe type" "temp"
      (616263 'move' call_tmp[616260](64037 call - call_tmp[616255] 1))
      (64045 'move' tmp[64021](64043 call chpl_compute_high_param_loop_bound 0 call_tmp[616260]))
      unknown tmp[64022] "maybe param" "temp"
      (64048 'move' tmp[64022] 1)
      ParamForLoop[64050]
      { d[64019] tmp[64020] tmp[64021] tmp[64022]
        unknown call_tmp[616265] "expr temp" "maybe param" "maybe type" "temp"
        (616268 'move' call_tmp[616265](64008 call result[63990] d[64019]))
        unknown call_tmp[616270] "expr temp" "maybe param" "maybe type" "temp"
        (616273 'move' call_tmp[616270](64012 call x[63962] d[64019]))
        unknown call_tmp[616275] "expr temp" "maybe param" "maybe type" "temp"
        (616278 'move' call_tmp[616275](64014 call >> call_tmp[616270] y[63972]))
        (64016 call = call_tmp[616265] call_tmp[616275])
        (475329 'end of statement' result[63990] d[64019] d[64019])
      }
      label _unused_continueLabel[64024]
      label _breakLabel[64023]
    }
    (509083 'move' ret[509078](509082 'deref' result[63990]))
    gotoReturn _end_>>[509076] _end_>>[509076]
    (475333 'end of statement' result[63990])
    label _end_>>[509076]
    (509080 return ret[509078])
  }
  where {
    (63978 call isHomogeneousTuple x[63962])
  }
  function >>[64072](arg x[64069]:_any[178](?), arg y[64075]:_tuple[56202](?)) : _unknown[51] "inline"
  {
    unknown ret[509089] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491955] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616280] "expr temp" "maybe param" "maybe type" "temp"
      (616283 'move' call_tmp[616280](64100 call y[64075] 0))
      (491959 'move' call_type_tmp[491955](64101 'typeof' call_tmp[616280]))
    }
    unknown result[64104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616287] "expr temp" "maybe param" "maybe type" "temp"
    (616290 'move' call_tmp[616287](64094 call size _mt[243] y[64075]))
    unknown call_tmp[616292] "expr temp" "maybe param" "maybe type" "temp"
    (616295 'move' call_tmp[616292](64102 call * call_tmp[616287] call_type_tmp[491955]))
    (541123 'default init var' result[64104] call_tmp[616292])
    (64107 'end of statement')
    {
      unknown d[64133] "dead at end of block" "insert auto destroy"
      (541125 'init var' d[64133] 0)
      (475335 'end of statement')
      unknown tmp[64134] "maybe param" "temp"
      unknown call_tmp[616299] "expr temp" "maybe param" "maybe type" "temp"
      (616302 'move' call_tmp[616299](64111 call size _mt[243] y[64075]))
      unknown call_tmp[616304] "expr temp" "maybe param" "maybe type" "temp"
      (616307 'move' call_tmp[616304](64115 call - call_tmp[616299] 1))
      (64146 'move' tmp[64134](64144 call chpl_compute_low_param_loop_bound 0 call_tmp[616304]))
      unknown tmp[64135] "maybe param" "temp"
      unknown call_tmp[616311] "expr temp" "maybe param" "maybe type" "temp"
      (616314 'move' call_tmp[616311](64153 call size _mt[243] y[64075]))
      unknown call_tmp[616316] "expr temp" "maybe param" "maybe type" "temp"
      (616319 'move' call_tmp[616316](64151 call - call_tmp[616311] 1))
      (64159 'move' tmp[64135](64157 call chpl_compute_high_param_loop_bound 0 call_tmp[616316]))
      unknown tmp[64136] "maybe param" "temp"
      (64162 'move' tmp[64136] 1)
      ParamForLoop[64164]
      { d[64133] tmp[64134] tmp[64135] tmp[64136]
        unknown call_tmp[616321] "expr temp" "maybe param" "maybe type" "temp"
        (616324 'move' call_tmp[616321](64122 call result[64104] d[64133]))
        unknown call_tmp[616326] "expr temp" "maybe param" "maybe type" "temp"
        (616329 'move' call_tmp[616326](64127 call y[64075] d[64133]))
        unknown call_tmp[616331] "expr temp" "maybe param" "maybe type" "temp"
        (616334 'move' call_tmp[616331](64128 call >> x[64069] call_tmp[616326]))
        (64130 call = call_tmp[616321] call_tmp[616331])
        (475336 'end of statement' result[64104] d[64133] d[64133])
      }
      label _unused_continueLabel[64138]
      label _breakLabel[64137]
    }
    (509094 'move' ret[509089](509093 'deref' result[64104]))
    gotoReturn _end_>>[509087] _end_>>[509087]
    (475340 'end of statement' result[64104])
    label _end_>>[509087]
    (509091 return ret[509089])
  }
  where {
    unknown tmp[419288] "maybe param" "temp"
    (419299 'move' tmp[419288](64081 call isHomogeneousTuple y[64075]))
    unknown call_tmp[616336] "expr temp" "maybe param" "maybe type" "temp"
    (616339 'move' call_tmp[616336](419301 call _cond_invalid tmp[419288]))
    if call_tmp[616336]
    {
      (419304 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555481] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555482] "maybe param" "temp"
    unknown call_tmp[616341] "expr temp" "maybe param" "maybe type" "temp"
    (616344 'move' call_tmp[616341](419289 call isTrue tmp[419288]))
    (555487 'move' tmp[555482](555485 call _cond_test call_tmp[616341]))
    if tmp[555482]
    {
      { scopeless type
        unknown call_type_tmp[491961] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616346] "expr temp" "maybe param" "maybe type" "temp"
        (616349 'move' call_tmp[616346](64088 call y[64075] 0))
        (491965 'move' call_type_tmp[491961](64089 'typeof' call_tmp[616346]))
      }
      unknown tmp[555489] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616351] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616354 'move' call_tmp[616351](454912 'typeof' x[64069]))
      unknown call_tmp[616356] "expr temp" "maybe param" "maybe type" "temp"
      (616359 'move' call_tmp[616356](354331 'is_subtype' call_type_tmp[491961] call_tmp[616351]))
      (555491 'move' tmp[555489](419292 call isTrue call_tmp[616356]))
      (555496 'move' tmp[555481](555493 '_paramFoldLogical' tmp[555482] tmp[555489]))
    }
    {
      (555501 'move' tmp[555481](555498 '_paramFoldLogical' tmp[555482] 0))
    }
    (748411 call chpl_statementLevelSymbol tmp[555481])
  }
  (355157 'used modules list'(56191 'use' ChapelStandard[20267])(56193 'use' DSIUtil[230976]))
}