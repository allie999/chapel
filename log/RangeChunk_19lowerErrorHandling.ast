AST dump for RangeChunk after pass lowerErrorHandling.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416238]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537603 return _void[55])
  }
  type RemElems[266554] def Thru[266548]:RemElems[266554] def Pack[266550]:RemElems[266554] def Mod[266552]:RemElems[266554]
  function _ic_chunks[1400360].advance[1400386](const in arg this[1400388]:_ic_chunks[1400360]) : void[4] "auto ii" "method" "resolved"
  {
    (1400393 return _void[55])
  }
  function _ic_chunks[1400360].zip1[1400395](const in arg this[1400397]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400402 return _void[55])
  }
  function _ic_chunks[1400360].zip2[1400404](const in arg this[1400406]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400411 return _void[55])
  }
  function _ic_chunks[1400360].zip3[1400413](const in arg this[1400415]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400420 return _void[55])
  }
  function _ic_chunks[1400360].zip4[1400422](const in arg this[1400424]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400429 return _void[55])
  }
  function _ic_chunks[1400360].hasMore[1400431](const in arg this[1400433]:_ic_chunks[1400360]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    (1400438 return _void[55])
  }
  function _ic_chunks[1400360].getValue[1400440](const in arg this[1400442]:_ic_chunks[1400360]) : range(int(64),bounded,false)[1027003] "auto ii" "inline" "method" "resolved"
  {
    (1400447 return _void[55])
  }
  function _ic_chunks[1400360].init[1400449](const in arg this[1400451]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400456 return _void[55])
  }
  function _ic_chunks[1400360].incr[1400458](const in arg this[1400460]:_ic_chunks[1400360]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400465 return _void[55])
  }
  type _ic_chunks[1400360] val super[1400361]:object[22] "super class" val more[1400363]:int(64)[13]
  type unmanaged _ic_chunks?[1881255]
  type unmanaged _ic_chunks[1881252]
  type borrowed _ic_chunks?[1881249]
  type _ir_chunks[1400366]
  function _getIterator[1400375](const  ref arg ir[1400377]:_ir_chunks[1400366]) : _ic_chunks[1400360] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400484]:_ic_chunks[1400360] "dead after last mention" "RVV" "temp"
    val _ic_[1400367]:_ic_chunks[1400360] "dead after last mention" "temp"
    val call_tmp[1400491]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400494 'move' call_tmp[1400491](1400506 'sizeof_bundle' _ic_chunks[1400360]))
    val cast_tmp[1400509]:c_void_ptr[149] "dead after last mention" "temp"
    (1400511 'move' cast_tmp[1400509](1400372 call chpl_here_alloc[187788] call_tmp[1400491] 79))
    (1400380 'move' _ic_[1400367](1400513 'cast' _ic_chunks[1400360] cast_tmp[1400509]))
    (1400382 'setcid' _ic_[1400367])
    (1400480 'end of statement')
    (1400489 'move' ret[1400484] _ic_[1400367])
    (1400486 return ret[1400484])
  }
  function chunks[1399928](const in arg r[1399930]:range(int(64),bounded,false)[1027003], const in arg numChunks[1399932]:int(64)[13], const in arg remPol[1399936]:RemElems[266554]) : _ir_chunks[1400366] "compiler added where" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val ret[1399978]:_ir_chunks[1400366] "dead at end of block" "RVV" "temp"
    {
      val _indexOfInterest[1400520]:2*int(64)[1040245] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1400522]:_ic_chunksOrder[1400824] "dead at end of block" "expr temp" "temp"
      val call_tmp[1400524]:_ir_chunksOrder[1400830] "dead at end of block" "expr temp" "maybe param" "temp"
      (1400526 'move' call_tmp[1400524](1400529 call chunksOrder[1400758] r[1399930] numChunks[1399932] remPol[1399936]))
      (1400533 'move' _iterator[1400522](1400536 call _getIterator[1400839] call_tmp[1400524]))
      Defer
      {
        {
          (1400540 call _freeIterator[1402902] _iterator[1400522])
        }
      }
      ForLoop[1400549]
      {
        1
        (1400556 'end of statement')
        const startOrder[1400557]:int(64)[13] "const" "index var" "insert auto destroy"
        (1400559 'end of statement')
        (1400560 'move' startOrder[1400557](1402971 '.v' _indexOfInterest[1400520] x0[1040241]))
        (1400565 'end of statement' startOrder[1400557])
        const endOrder[1400567]:int(64)[13] "const" "index var" "insert auto destroy"
        (1400569 'end of statement')
        (1400570 'move' endOrder[1400567](1402976 '.v' _indexOfInterest[1400520] x1[1040243]))
        (1400575 'end of statement' endOrder[1400567])
        {
          val call_tmp[1400578]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1400580 'move' call_tmp[1400578](1400586 call orderToIndex[1104229] r[1399930] startOrder[1400557]))
          const start[1400588]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1400590 'move' start[1400588] call_tmp[1400578])
          (1400593 'end of statement')
          val call_tmp[1400594]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1400596 'move' call_tmp[1400594](1400602 call orderToIndex[1104229] r[1399930] endOrder[1400567]))
          const end[1400604]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1400606 'move' end[1400604] call_tmp[1400594])
          (1400609 'end of statement' startOrder[1400557] endOrder[1400567])
          val yret[1400612]:range(int(64),bounded,false)[1027003] "dead after last mention" "YVV" "temp"
          val tmp[1400614]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val tmp[1400662]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          (1400664 'move' tmp[1400662](1400667 call chpl_build_bounded_range[455253] start[1400588] end[1400604]))
          (1400670 'move' tmp[1400614] tmp[1400662])
          val call_tmp[1400676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1400690]:range(int(64),bounded,false)[1027003] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1403007 'move' yret[1400612] tmp[1400614])
          (1400704 yield yret[1400612])
          (1400706 'end of statement' start[1400588] end[1400604] start[1400588] end[1400604] start[1400588] end[1400604] start[1400588] end[1400604])
        }
        label _continueLabel[1400711]
        _indexOfInterest[1400520]
        _iterator[1400522]
      }
      label _breakLabel[1400713]
    }
    (1400715 return ret[1399978])
  }
  function _ic_chunksOrder[1400824].advance[1400850](const in arg this[1400852]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "method" "resolved"
  {
    (1400857 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip1[1400859](const in arg this[1400861]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400866 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip2[1400868](const in arg this[1400870]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400875 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip3[1400877](const in arg this[1400879]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400884 return _void[55])
  }
  function _ic_chunksOrder[1400824].zip4[1400886](const in arg this[1400888]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400893 return _void[55])
  }
  function _ic_chunksOrder[1400824].hasMore[1400895](const in arg this[1400897]:_ic_chunksOrder[1400824]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    (1400902 return _void[55])
  }
  function _ic_chunksOrder[1400824].getValue[1400904](const in arg this[1400906]:_ic_chunksOrder[1400824]) : 2*int(64)[1040245] "auto ii" "inline" "method" "resolved"
  {
    (1400911 return _void[55])
  }
  function _ic_chunksOrder[1400824].init[1400913](const in arg this[1400915]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400920 return _void[55])
  }
  function _ic_chunksOrder[1400824].incr[1400922](const in arg this[1400924]:_ic_chunksOrder[1400824]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1400929 return _void[55])
  }
  type _ic_chunksOrder[1400824] val super[1400825]:object[22] "super class" val more[1400827]:int(64)[13]
  type unmanaged _ic_chunksOrder?[1881264]
  type unmanaged _ic_chunksOrder[1881261]
  type borrowed _ic_chunksOrder?[1881258]
  type _ir_chunksOrder[1400830]
  function _getIterator[1400839](const  ref arg ir[1400841]:_ir_chunksOrder[1400830]) : _ic_chunksOrder[1400824] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400948]:_ic_chunksOrder[1400824] "dead after last mention" "RVV" "temp"
    val _ic_[1400831]:_ic_chunksOrder[1400824] "dead after last mention" "temp"
    val call_tmp[1400955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400958 'move' call_tmp[1400955](1400970 'sizeof_bundle' _ic_chunksOrder[1400824]))
    val cast_tmp[1400973]:c_void_ptr[149] "dead after last mention" "temp"
    (1400975 'move' cast_tmp[1400973](1400836 call chpl_here_alloc[187788] call_tmp[1400955] 80))
    (1400844 'move' _ic_[1400831](1400977 'cast' _ic_chunksOrder[1400824] cast_tmp[1400973]))
    (1400846 'setcid' _ic_[1400831])
    (1400944 'end of statement')
    (1400953 'move' ret[1400948] _ic_[1400831])
    (1400950 return ret[1400948])
  }
  function chunksOrder[1400758](const in arg r[1400760]:range(int(64),bounded,false)[1027003], const in arg numChunks[1400762]:int(64)[13], const in arg remPol[1400766]:RemElems[266554]) : _ir_chunksOrder[1400830] "compiler added where" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val ret[1400800]:_ir_chunksOrder[1400830] "dead at end of block" "RVV" "temp"
    val tmp[1400983]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1400985]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400987 'move' call_tmp[1400985](1400990 call size[1035978] r[1400760]))
    (1400993 'move' tmp[1400983](1400996 call ==[435744] call_tmp[1400985] 0))
    (1401511 'end of statement')
    val tmp[1401012]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1401014]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1401016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401018 'move' call_tmp[1401016] tmp[1400983])
    (1401023 'move' tmp[1401014] call_tmp[1401016])
    if tmp[1401014]
    {
      (1401030 'move' tmp[1401012] 1)
    }
    {
      val tmp[1401036]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1401038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401040 'move' call_tmp[1401038](1401043 call <=[437128] numChunks[1400762] 0))
      (1401046 'move' tmp[1401036] call_tmp[1401038])
      (1401051 'move' tmp[1401012] tmp[1401036])
    }
    val call_tmp[1401057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401059 'move' call_tmp[1401057] tmp[1401012])
    if call_tmp[1401057]
    {
      gotoReturn _end_chunksOrder[1401502] _end_chunksOrder[1401502]
    }
    val call_tmp[1401069]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401071 'move' call_tmp[1401069](1401074 call size[1035978] r[1400760]))
    const nElems[1401077]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1401079 'move' nElems[1401077] call_tmp[1401069])
    (1401082 'end of statement')
    val call_tmp[1401083]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1401090]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1401092 'move' call_tmp[1401090](1401095 call min[450112] numChunks[1400762] nElems[1401077]))
    val call_tmp[1401098]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401100 'move' call_tmp[1401098] call_tmp[1401090])
    val nChunks[1401106]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1401108 'move' nChunks[1401106] call_tmp[1401098])
    (1401111 'end of statement')
    val chunkSize[1401112]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1401114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402793 'move' chunkSize[1401112] 0)
    val rem[1401124]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1401126]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402796 'move' rem[1401124] 0)
    (1401135 'end of statement' nElems[1401077] chunkSize[1401112])
    {
      val tmp[1401139]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401141 'move' tmp[1401139] remPol[1400766])
      val call_tmp[1401144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401146 'move' call_tmp[1401144](1401149 call ==[1401528] tmp[1401139] Pack[266550]))
      val call_tmp[1401152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1401154 'move' call_tmp[1401152] call_tmp[1401144])
      if call_tmp[1401152]
      {
        val call_tmp[1401161]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401163 'move' call_tmp[1401161](1401166 call /[442796] nElems[1401077] nChunks[1401106]))
        (1401170 call =[435443] chunkSize[1401112] call_tmp[1401161])
        (1401173 'end of statement' chunkSize[1401112] nElems[1401077] nChunks[1401106])
        val call_tmp[1401177]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401179 'move' call_tmp[1401177](1401182 call *[441944] chunkSize[1401112] nChunks[1401106]))
        val call_tmp[1401185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401187 'move' call_tmp[1401185](1401190 call !=[436128] call_tmp[1401177] nElems[1401077]))
        val call_tmp[1401193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401195 'move' call_tmp[1401193] call_tmp[1401185])
        if call_tmp[1401193]
        {
          (1401203 call +=[451431] chunkSize[1401112] 1)
          (1401206 'end of statement' chunkSize[1401112])
          val call_tmp[1401208]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1401210 'move' call_tmp[1401208](1401213 call divceil[1401581] nElems[1401077] chunkSize[1401112]))
          (1401217 call =[435443] nChunks[1401106] call_tmp[1401208])
          (1401220 'end of statement' nChunks[1401106] nElems[1401077] chunkSize[1401112])
        }
      }
      {
        val call_tmp[1401226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401228 'move' call_tmp[1401226](1401231 call ==[1401528] tmp[1401139] Mod[266552]))
        val call_tmp[1401234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1401236 'move' call_tmp[1401234] call_tmp[1401226])
        if call_tmp[1401234]
        {
          val call_tmp[1401243]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1401245 'move' call_tmp[1401243](1401248 call /[442796] nElems[1401077] nChunks[1401106]))
          (1401252 call =[435443] chunkSize[1401112] call_tmp[1401243])
          (1401255 'end of statement' chunkSize[1401112] nElems[1401077] nChunks[1401106])
          val call_tmp[1401259]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1401261 'move' call_tmp[1401259](1401264 call *[441944] chunkSize[1401112] nChunks[1401106]))
          val call_tmp[1401267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1401269 'move' call_tmp[1401267](1401272 call -[440532] nElems[1401077] call_tmp[1401259]))
          (1401276 call =[435443] rem[1401124] call_tmp[1401267])
          (1401279 'end of statement' rem[1401124] nElems[1401077] chunkSize[1401112] nChunks[1401106])
        }
      }
    }
    {
      val _indexOfInterest[1401287]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1401289]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
      val call_tmp[1401291]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401293 'move' call_tmp[1401291](1401296 call chpl_direct_counted_range_iter[458112] 0 nChunks[1401106]))
      (1401299 'move' _iterator[1401289](1401302 call _getIterator[1103994] call_tmp[1401291]))
      Defer
      {
        {
          (1401306 call _freeIterator[1104163] _iterator[1401289])
        }
      }
      ForLoop[1401315]
      {
        const i[1401318]:int(64)[13] "const" "index var" "insert auto destroy"
        (1401320 'end of statement')
        (1401321 'move' i[1401318] _indexOfInterest[1401287])
        (1401324 'end of statement' i[1401318])
        {
          val chunk[1401327]:2*int(64)[1040245] "dead at end of block" "insert auto destroy"
          val call_tmp[1401329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1401336]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1402801 'move' chunk[1401327](1402798 call _defaultOf[1402803]))
          (1401347 'end of statement')
          {
            val tmp[1401349]:RemElems[266554] "dead after last mention" "expr temp" "maybe param" "temp"
            (1401351 'move' tmp[1401349] remPol[1400766])
            val call_tmp[1401354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1401356 'move' call_tmp[1401354](1401359 call ==[1401528] tmp[1401349] Thru[266548]))
            val call_tmp[1401362]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1401364 'move' call_tmp[1401362] call_tmp[1401354])
            if call_tmp[1401362]
            {
              val call_tmp[1401371]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              (1401373 'move' call_tmp[1401371](1401376 call chunkOrderThru[1401798] nElems[1401077] nChunks[1401106] i[1401318]))
              (1401381 call =[1402050] chunk[1401327] call_tmp[1401371])
              (1401384 'end of statement' chunk[1401327] nElems[1401077] nChunks[1401106] i[1401318])
            }
            {
              val call_tmp[1401390]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1401392 'move' call_tmp[1401390](1401395 call ==[1401528] tmp[1401349] Pack[266550]))
              val call_tmp[1401398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1401400 'move' call_tmp[1401398] call_tmp[1401390])
              if call_tmp[1401398]
              {
                val call_tmp[1401407]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                (1401409 'move' call_tmp[1401407](1401412 call chunkOrderPack[1402274] chunkSize[1401112] nElems[1401077] i[1401318]))
                (1401417 call =[1402050] chunk[1401327] call_tmp[1401407])
                (1401420 'end of statement' chunk[1401327] chunkSize[1401112] nElems[1401077] i[1401318])
              }
              {
                val call_tmp[1401426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1401428 'move' call_tmp[1401426](1401431 call ==[1401528] tmp[1401349] Mod[266552]))
                val call_tmp[1401434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1401436 'move' call_tmp[1401434] call_tmp[1401426])
                if call_tmp[1401434]
                {
                  val call_tmp[1401443]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  (1401445 'move' call_tmp[1401443](1401448 call chunkOrderMod[1402531] chunkSize[1401112] rem[1401124] nElems[1401077] nChunks[1401106] i[1401318]))
                  (1401455 call =[1402050] chunk[1401327] call_tmp[1401443])
                  (1401458 'end of statement' chunk[1401327] chunkSize[1401112] rem[1401124] nElems[1401077] nChunks[1401106] i[1401318])
                }
                {
                  (1401467 call halt[154111] "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          val yret[1401472]:2*int(64)[1040245] "dead after last mention" "YVV" "temp"
          val call_tmp[1401474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1401481]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (1402790 'move' yret[1401472] chunk[1401327])
          (1401494 yield yret[1401472])
          (1401496 'end of statement' chunk[1401327])
        }
        label _continueLabel[1401498]
        _indexOfInterest[1401287]
        _iterator[1401289]
      }
      label _breakLabel[1401500]
    }
    label _end_chunksOrder[1401502]
    (1401504 return ret[1400800])
  }
  function chunkOrderThru[1401798](const in arg nElems[1401800]:int(64)[13], const in arg nChunks[1401805]:int(64)[13], const in arg i[1401810]:int(64)[13]) : 2*int(64)[1040245] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1401829]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val call_tmp[1401839]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401841 'move' call_tmp[1401839](1401844 call *[441944] nElems[1401800] i[1401810]))
    const m[1401847]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1401849 'move' m[1401847] call_tmp[1401839])
    (1401852 'end of statement')
    const start[1401853]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401855]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1401857]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1401859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401861 'move' call_tmp[1401859](1401864 call ==[435744] i[1401810] 0))
    (1401867 'move' tmp[1401857] call_tmp[1401859])
    if tmp[1401857]
    {
      val call_tmp[1401876]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1401888 'move' tmp[1401855] 0)
    }
    {
      val tmp[1401894]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401896 'move' tmp[1401894](1401899 call divceil[1401581] m[1401847] nChunks[1401805]))
      (1401902 'move' tmp[1401855] tmp[1401894])
    }
    (1401908 'move' start[1401853] tmp[1401855])
    (1401911 'end of statement')
    const end[1401912]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401914]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    val tmp[1401916]:bool[10] "dead after last mention" "maybe param" "temp"
    val call_tmp[1401918]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401920 'move' call_tmp[1401918](1401923 call -[962415] nChunks[1401805]))
    val call_tmp[1401926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401928 'move' call_tmp[1401926](1401931 call ==[435744] i[1401810] call_tmp[1401918]))
    (1401934 'move' tmp[1401916] call_tmp[1401926])
    if tmp[1401916]
    {
      val tmp[1401941]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401943 'move' tmp[1401941](1401946 call -[962415] nElems[1401800]))
      (1401949 'move' tmp[1401914] tmp[1401941])
    }
    {
      val tmp[1401955]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      val call_tmp[1401957]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401959 'move' call_tmp[1401957](1401962 call +[439752] m[1401847] nElems[1401800]))
      val call_tmp[1401965]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401967 'move' call_tmp[1401965](1401970 call divceil[1401581] call_tmp[1401957] nChunks[1401805]))
      (1401973 'move' tmp[1401955](1401976 call -[962415] call_tmp[1401965]))
      (1401979 'move' tmp[1401914] tmp[1401955])
    }
    (1401985 'move' end[1401912] tmp[1401914])
    (1401988 'end of statement' m[1401847] m[1401847])
    val call_tmp[1401991]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1401993 'move' call_tmp[1401991](1401996 call _build_tuple[1040203] start[1401853] end[1401912]))
    val call_tmp[1401999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402011]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402048 'move' ret[1401829] call_tmp[1401991])
    gotoReturn _end_chunkOrderThru[1402029] _end_chunkOrderThru[1402029]
    label _end_chunkOrderThru[1402029]
    (1402031 return ret[1401829])
  }
  function chunkOrderPack[1402274](const in arg chunkSize[1402276]:int(64)[13], const in arg nElems[1402281]:int(64)[13], const in arg i[1402286]:int(64)[13]) : 2*int(64)[1040245] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1402305]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val call_tmp[1402315]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402317 'move' call_tmp[1402315](1402320 call *[441944] chunkSize[1402276] i[1402286]))
    const start[1402323]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1402325 'move' start[1402323] call_tmp[1402315])
    (1402328 'end of statement')
    val call_tmp[1402329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402331 'move' call_tmp[1402329](1402334 call >=[437348] start[1402323] nElems[1402281]))
    val call_tmp[1402337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402339 'move' call_tmp[1402337] call_tmp[1402329])
    if call_tmp[1402337]
    {
      val call_tmp[1402346]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402374]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (1402376 'move' call_tmp[1402374](1402379 call _build_tuple[1040203] 1 0))
      val call_tmp[1402382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402388]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402394]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1402524 'move' ret[1402305] call_tmp[1402374])
      gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    }
    val call_tmp[1402410]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1402412 'move' call_tmp[1402410](1402415 call +[439752] start[1402323] chunkSize[1402276]))
    val call_tmp[1402418]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402420 'move' call_tmp[1402418](1402423 call -[962415] call_tmp[1402410]))
    val end[1402426]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1402428 'move' end[1402426] call_tmp[1402418])
    (1402431 'end of statement' start[1402323])
    val call_tmp[1402433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402435 'move' call_tmp[1402433](1402438 call >=[437348] end[1402426] nElems[1402281]))
    val call_tmp[1402441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402443 'move' call_tmp[1402441] call_tmp[1402433])
    if call_tmp[1402441]
    {
      val call_tmp[1402450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402452 'move' call_tmp[1402450](1402455 call -[962415] nElems[1402281]))
      (1402459 call =[435443] end[1402426] call_tmp[1402450])
      (1402462 'end of statement' end[1402426])
    }
    val call_tmp[1402465]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1402467 'move' call_tmp[1402465](1402470 call _build_tuple[1040203] start[1402323] end[1402426]))
    val call_tmp[1402473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402485]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402527 'move' ret[1402305] call_tmp[1402465])
    gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    label _end_chunkOrderPack[1402503]
    (1402505 return ret[1402305])
  }
  function chunkOrderMod[1402531](const in arg chunkSize[1402533]:int(64)[13], const in arg rem[1402538]:int(64)[13], const in arg nElems[1402543]:int(64)[13], const in arg nChunks[1402548]:int(64)[13], const in arg i[1402553]:int(64)[13]) : 2*int(64)[1040245] "instantiated generic" "invisible fn" "no doc" "private" "resolved"
  {
    val ret[1402572]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val start[1402582]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1402584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402778 'move' start[1402582] 0)
    val end[1402593]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1402595]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    (1402604 'end of statement' start[1402582])
    val call_tmp[1402606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402608 'move' call_tmp[1402606](1402611 call <[437568] i[1402553] rem[1402538]))
    val call_tmp[1402614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402616 'move' call_tmp[1402614] call_tmp[1402606])
    if call_tmp[1402614]
    {
      val call_tmp[1402623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402625 'move' call_tmp[1402623](1402628 call +[949855] chunkSize[1402533]))
      val call_tmp[1402631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402633 'move' call_tmp[1402631](1402636 call *[441944] i[1402553] call_tmp[1402623]))
      (1402640 call =[435443] start[1402582] call_tmp[1402631])
      (1402643 'end of statement' start[1402582])
      val call_tmp[1402645]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402647 'move' call_tmp[1402645](1402650 call +[439752] start[1402582] chunkSize[1402533]))
      (1402653 'move' end[1402593] call_tmp[1402645])
      (1402657 'end of statement' end[1402593] start[1402582])
    }
    {
      val call_tmp[1402661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402663 'move' call_tmp[1402661](1402666 call -[440532] nChunks[1402548] i[1402553]))
      val call_tmp[1402669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402671 'move' call_tmp[1402669](1402674 call *[441944] call_tmp[1402661] chunkSize[1402533]))
      val call_tmp[1402677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402679 'move' call_tmp[1402677](1402682 call -[440532] nElems[1402543] call_tmp[1402669]))
      (1402686 call =[435443] start[1402582] call_tmp[1402677])
      (1402689 'end of statement' start[1402582])
      val call_tmp[1402691]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1402693 'move' call_tmp[1402691](1402696 call +[439752] start[1402582] chunkSize[1402533]))
      val call_tmp[1402699]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402701 'move' call_tmp[1402699](1402704 call -[962415] call_tmp[1402691]))
      (1402707 'move' end[1402593] call_tmp[1402699])
      (1402711 'end of statement' end[1402593] start[1402582])
    }
    val call_tmp[1402715]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (1402717 'move' call_tmp[1402715](1402720 call _build_tuple[1040203] start[1402582] end[1402593]))
    val call_tmp[1402723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402735]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402775 'move' ret[1402572] call_tmp[1402715])
    gotoReturn _end_chunkOrderMod[1402753] _end_chunkOrderMod[1402753]
    label _end_chunkOrderMod[1402753]
    (1402755 return ret[1402572])
  }
}