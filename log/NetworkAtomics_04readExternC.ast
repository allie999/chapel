AST dump for NetworkAtomics after pass readExternC.
Module use list: 

{
  (48465 'use' ChapelStandard)
  (48469 'use' MemConsistency)
  function externFunc[48477](param arg s[48474] :
  string[26], arg T[48479]:_any[178](?)) param : _unknown[51] "private"
  {
    if(48535 call _cond_test(48484 call isInt T))
    {
      { scopeless
        (48533 return(48531 call +(48522 call +(48503 call + "chpl_comm_atomic_" s) "_int")(48529 call _cast string[26](48527 call numBits T))))
      }
    }
    if(48579 call _cond_test(48544 call isUint T))
    {
      { scopeless
        (48577 return(48575 call +(48566 call +(48547 call + "chpl_comm_atomic_" s) "_uint")(48573 call _cast string[26](48571 call numBits T))))
      }
    }
    if(48606 call _cond_test(48587 call isReal T))
    {
      { scopeless
        (48604 return(48602 call +(48593 call +(48590 call + "chpl_comm_atomic_" s) "_real")(48600 call _cast string[26](48598 call numBits T))))
      }
    }
  }
  type RAtomicBool[49673] unknown _v[48618](48617 call int[13] 64) function RAtomicBool[49673].init=[48628](arg _mt[49677]:_MT[238], arg this[49675]:RAtomicBool[49673], arg other[48625] :
  RAtomicBool) : _unknown[51] "method" "primary method"
  {
    (48648 call =(48633 call . this c"_v")(48646 call _cast(48645 call int[13] 64)(48641 call(48637 call . other c"read"))))
  } function RAtomicBool[49673].init=[48660](arg _mt[49681]:_MT[238], arg this[49679]:RAtomicBool[49673], arg other[48657] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    (48673 call =(48663 call . this c"_v")(48671 call _cast(48670 call int[13] 64) other))
  } function RAtomicBool[49673]._localeid[48681](arg _mt[49685]:_MT[238], arg this[49683]:RAtomicBool[49673]) : _unknown[51] "inline" "method" "primary method"
  {
    (48698 return(48696 call _cast(48695 call int[13] 32)(48691 '_wide_get_node' _v)))
  }
  { scopeless type
    (48686 call int[13] 32)
  } function RAtomicBool[49673]._addr[48706](arg _mt[49689]:_MT[238], arg this[49687]:RAtomicBool[49673]) : _unknown[51] "inline" "method" "primary method"
  {
    (48713 return(48712 '_wide_get_addr' _v))
  }
  { scopeless type
    c_void_ptr
  } function RAtomicBool[49673].read[48730](arg _mt[49693]:_MT[238], const arg this[49691]:RAtomicBool[49673], param arg order[48726] :
  memoryOrder =
  (48723 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_read[48764](ref arg result[48761] :
    (48760 call int[13] 64), arg l[48770] :
    (48769 call int[13] 32), const arg obj[48774] :
    c_void_ptr, arg order[48778] :
    memory_order, arg _chpl_cname[48786] :
    string[26] =
    (48754 call externFunc "read"(48753 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[48795](48794 call int[13] 64)
      (48798 'end of statement')
    }
    (48812 call atomic_read ret(48804 call _localeid)(48807 call _addr)(48811 call c_memory_order order))
    (48818 return(48816 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].write[48829](arg _mt[49697]:_MT[238], arg this[49695]:RAtomicBool[49673], arg value[48826] :
  bool[10], param arg order[48836] :
  memoryOrder =
  (48833 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_write[48872](ref arg desired[48869] :
    (48868 call int[13] 64), arg l[48878] :
    (48877 call int[13] 32), arg obj[48882] :
    c_void_ptr, arg order[48886] :
    memory_order, arg _chpl_cname[48894] :
    string[26] =
    (48862 call externFunc "write"(48861 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[48906](48904 call _cast(48903 call int[13] 64) value)
      (48909 'end of statement')
    }
    (48923 call atomic_write v(48915 call _localeid)(48918 call _addr)(48922 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49673].exchange[48934](arg _mt[49701]:_MT[238], arg this[49699]:RAtomicBool[49673], arg value[48931] :
  bool[10], param arg order[48941] :
  memoryOrder =
  (48938 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_xchg[48979](ref arg desired[48976] :
    (48975 call int[13] 64), arg l[48985] :
    (48984 call int[13] 32), arg obj[48989] :
    c_void_ptr, ref arg result[48996] :
    (48995 call int[13] 64), arg order[49000] :
    memory_order, arg _chpl_cname[49008] :
    string[26] =
    (48969 call externFunc "xchg"(48968 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49017](49016 call int[13] 64)
      (49020 'end of statement')
    }
    { scopeless
      unknown v[49028](49026 call _cast(49025 call int[13] 64) value)
      (49031 'end of statement')
    }
    (49046 call atomic_xchg v(49037 call _localeid)(49040 call _addr) ret(49045 call c_memory_order order))
    (49052 return(49050 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].compareExchange[49063](arg _mt[49705]:_MT[238], arg this[49703]:RAtomicBool[49673], ref arg expected[49060] :
  bool[10], arg desired[49066] :
  bool[10], param arg order[49074] :
  memoryOrder =
  (49071 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49092 return(49091 call(49080 call . this c"compareExchange") expected desired order(49090 call readableOrder order)))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].compareExchange[49104](arg _mt[49709]:_MT[238], arg this[49707]:RAtomicBool[49673], ref arg expected[49101] :
  bool[10], arg desired[49107] :
  bool[10], param arg success[49111] :
  memoryOrder, param arg failure[49115] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[49152](ref arg expected[49149] :
    (49148 call int[13] 64), ref arg desired[49158] :
    (49157 call int[13] 64), arg l[49165] :
    (49164 call int[13] 32), arg obj[49169] :
    c_void_ptr, ref arg result[49176] :
    (49175 call bool[10] 32), arg succ[49180] :
    memory_order, arg fail[49184] :
    memory_order, arg _chpl_cname[49192] :
    string[26] =
    (49142 call externFunc "cmpxchg"(49141 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49201](49200 call bool[10] 32)
      (49204 'end of statement')
    }
    { scopeless
      unknown te[49212](49210 call _cast(49209 call int[13] 64) expected)
      (49215 'end of statement')
    }
    { scopeless
      unknown td[49223](49221 call _cast(49220 call int[13] 64) desired)
      (49226 'end of statement')
    }
    (49246 call atomic_cmpxchg te td(49233 call _localeid)(49236 call _addr) ret(49241 call c_memory_order success)(49245 call c_memory_order failure))
    if(49259 call _cond_test(49249 call ! ret))
    {
      { scopeless
        (49256 call = expected(49254 call _cast bool[10] te))
      }
    }
    (49268 return(49266 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].compareExchangeWeak[49279](arg _mt[49713]:_MT[238], arg this[49711]:RAtomicBool[49673], ref arg expected[49276] :
  bool[10], arg desired[49282] :
  bool[10], param arg order[49290] :
  memoryOrder =
  (49287 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49304 return(49303 call(49296 call . this c"compareExchange") expected desired order))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].compareExchangeWeak[49316](arg _mt[49717]:_MT[238], arg this[49715]:RAtomicBool[49673], ref arg expected[49313] :
  bool[10], arg desired[49319] :
  bool[10], param arg success[49323] :
  memoryOrder, param arg failure[49327] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    (49341 return(49340 call(49332 call . this c"compareExchange") expected desired success failure))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].compareAndSwap[49353](arg _mt[49721]:_MT[238], arg this[49719]:RAtomicBool[49673], arg expected[49350] :
  bool[10], arg desired[49356] :
  bool[10], param arg order[49364] :
  memoryOrder =
  (49361 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[49386](ref arg expected[49383] :
    (49382 call int[13] 64), ref arg desired[49392] :
    (49391 call int[13] 64), arg l[49399] :
    (49398 call int[13] 32), arg obj[49403] :
    c_void_ptr, ref arg result[49410] :
    (49409 call bool[10] 32), arg succ[49414] :
    memory_order, arg fail[49418] :
    memory_order, arg _chpl_cname[49426] :
    string[26] =
    (49376 call externFunc "cmpxchg"(49375 call int[13] 64))) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49435](49434 call bool[10] 32)
      (49438 'end of statement')
    }
    { scopeless
      unknown te[49446](49444 call _cast(49443 call int[13] 64) expected)
      (49449 'end of statement')
    }
    { scopeless
      unknown td[49457](49455 call _cast(49454 call int[13] 64) desired)
      (49460 'end of statement')
    }
    (49483 call atomic_cmpxchg te td(49467 call _localeid)(49470 call _addr) ret(49475 call c_memory_order order)(49482 call c_memory_order(49480 call readableOrder order)))
    (49489 return(49487 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].testAndSet[49505](arg _mt[49725]:_MT[238], arg this[49723]:RAtomicBool[49673], param arg order[49501] :
  memoryOrder =
  (49498 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49516 return(49515 call(49509 call . this c"exchange") 1 order))
  }
  { scopeless type
    bool[10]
  } function RAtomicBool[49673].clear[49533](arg _mt[49729]:_MT[238], arg this[49727]:RAtomicBool[49673], param arg order[49529] :
  memoryOrder =
  (49526 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (49543 call(49537 call . this c"write") 0 order)
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49673].waitFor[49555](arg _mt[49733]:_MT[238], const arg this[49731]:RAtomicBool[49673], arg value[49552] :
  bool[10], param arg order[49562] :
  memoryOrder =
  (49559 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[49644] "const" "temp"
      (49646 'move' tmp[49644](49642 'deref'(49641 '_wide_get_locale' this)))
      {
        {
          {
            unknown tmp[49587] "temp"
            (49629 'move' tmp[49587](49615 call _cond_test(49617 call !=(49622 call(49619 call . this c"read")(order =(49624 call . memoryOrder c"relaxed"))) value)))
            WhileDo[49592]
            {
              {
                (49584 call chpl_task_yield)
              }
              label _continueLabel[49590]
              (49610 'move' tmp[49587](49596 call _cond_test(49598 call !=(49603 call(49600 call . this c"read")(order =(49605 call . memoryOrder c"relaxed"))) value)))
              tmp[49587]
            }
            label _breakLabel[49591]
          }
          (49639 call chpl_atomic_thread_fence(49637 call c_memory_order order))
        }
        (49649 'on block' 0 tmp[49644])
      }
    }
  }
  { scopeless type
    void[4]
  } function RAtomicBool[49673].writeThis[49660](arg _mt[49737]:_MT[238], const arg this[49735]:RAtomicBool[49673], arg x[49658]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (49666 call <~> x(49665 call read))
  }
  type RAtomicT[51633](?) unknown T[49741] "type variable" unknown _v[49745] T function RAtomicT[51633](?).init=[49756](arg _mt[51637]:_MT[238], arg this[51635]:RAtomicT[51633](?), arg other[49753] :
  (49752 'typeof' this)) : _unknown[51] "method" "primary method"
  {
    (49766 call =(49759 call . this c"T")(49763 call . other c"T"))
    (49780 call =(49771 call . this c"_v")(49779 call(49775 call . other c"read")))
  } function RAtomicT[51633](?).init=[49795](arg _mt[51641]:_MT[238], arg this[51639]:RAtomicT[51633](?), arg other[49792] :
  (49789 call .(49788 'typeof' this) c"T")) : _unknown[51] "method" "primary method"
  {
    (49803 call =(49798 call . this c"T")(49802 'typeof' other))
    (49812 call =(49808 call . this c"_v") other)
  } function RAtomicT[51633](?)._localeid[49819](arg _mt[51645]:_MT[238], arg this[51643]:RAtomicT[51633](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (49836 return(49834 call _cast(49833 call int[13] 32)(49829 '_wide_get_node' _v)))
  }
  { scopeless type
    (49824 call int[13] 32)
  } function RAtomicT[51633](?)._addr[49844](arg _mt[51649]:_MT[238], arg this[51647]:RAtomicT[51633](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (49851 return(49850 '_wide_get_addr' _v))
  }
  { scopeless type
    c_void_ptr
  } function RAtomicT[51633](?).read[49868](arg _mt[51653]:_MT[238], const arg this[51651]:RAtomicT[51633](?), param arg order[49864] :
  memoryOrder =
  (49861 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_read[49882](ref arg result[49879] :
    T, arg l[49888] :
    (49887 call int[13] 32), const arg obj[49892] :
    c_void_ptr, arg order[49896] :
    memory_order, arg _chpl_cname[49904] :
    string[26] =
    (49875 call externFunc "read" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[49910] T
      (49913 'end of statement')
    }
    (49927 call atomic_read ret(49919 call _localeid)(49922 call _addr)(49926 call c_memory_order order))
    (49930 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).write[49941](arg _mt[51657]:_MT[238], arg this[51655]:RAtomicT[51633](?), arg value[49938] :
  T, param arg order[49948] :
  memoryOrder =
  (49945 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_write[49964](ref arg desired[49961] :
    T, arg l[49970] :
    (49969 call int[13] 32), arg obj[49974] :
    c_void_ptr, arg order[49978] :
    memory_order, arg _chpl_cname[49986] :
    string[26] =
    (49957 call externFunc "write" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[49992] value
      (49995 'end of statement')
    }
    (50009 call atomic_write v(50001 call _localeid)(50004 call _addr)(50008 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).exchange[50020](arg _mt[51661]:_MT[238], arg this[51659]:RAtomicT[51633](?), arg value[50017] :
  T, param arg order[50027] :
  memoryOrder =
  (50024 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_xchg[50043](ref arg desired[50040] :
    T, arg l[50049] :
    (50048 call int[13] 32), arg obj[50053] :
    c_void_ptr, ref arg result[50057] :
    T, arg order[50061] :
    memory_order, arg _chpl_cname[50069] :
    string[26] =
    (50036 call externFunc "xchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50075] T
      (50078 'end of statement')
    }
    { scopeless
      unknown v[50080] value
      (50083 'end of statement')
    }
    (50098 call atomic_xchg v(50089 call _localeid)(50092 call _addr) ret(50097 call c_memory_order order))
    (50101 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).compareExchange[50112](arg _mt[51665]:_MT[238], arg this[51663]:RAtomicT[51633](?), ref arg expected[50109] :
  T, arg desired[50115] :
  T, param arg order[50123] :
  memoryOrder =
  (50120 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (50141 return(50140 call(50129 call . this c"compareExchange") expected desired order(50139 call readableOrder order)))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51633](?).compareExchange[50153](arg _mt[51669]:_MT[238], arg this[51667]:RAtomicT[51633](?), ref arg expected[50150] :
  T, arg desired[50156] :
  T, param arg success[50160] :
  memoryOrder, param arg failure[50164] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[50179](ref arg expected[50176] :
    T, ref arg desired[50182] :
    T, arg l[50189] :
    (50188 call int[13] 32), arg obj[50193] :
    c_void_ptr, ref arg result[50200] :
    (50199 call bool[10] 32), arg succ[50204] :
    memory_order, arg fail[50208] :
    memory_order, arg _chpl_cname[50216] :
    string[26] =
    (50172 call externFunc "cmpxchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown te[50222] expected
      (50225 'end of statement')
    }
    { scopeless
      unknown ret[50230](50229 call bool[10] 32)
      (50233 'end of statement')
    }
    { scopeless
      unknown td[50235] desired
      (50238 'end of statement')
    }
    (50258 call atomic_cmpxchg te td(50245 call _localeid)(50248 call _addr) ret(50253 call c_memory_order success)(50257 call c_memory_order failure))
    if(50268 call _cond_test(50261 call ! ret))
    {
      { scopeless
        (50265 call = expected te)
      }
    }
    (50277 return(50275 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51633](?).compareExchangeWeak[50288](arg _mt[51673]:_MT[238], arg this[51671]:RAtomicT[51633](?), ref arg expected[50285] :
  T, arg desired[50291] :
  T, param arg order[50299] :
  memoryOrder =
  (50296 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    (50313 return(50312 call(50305 call . this c"compareExchange") expected desired order))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51633](?).compareExchangeWeak[50325](arg _mt[51677]:_MT[238], arg this[51675]:RAtomicT[51633](?), ref arg expected[50322] :
  T, arg desired[50328] :
  T, param arg success[50332] :
  memoryOrder, param arg failure[50336] :
  memoryOrder) : _unknown[51] "inline" "method" "primary method"
  {
    (50350 return(50349 call(50341 call . this c"compareExchange") expected desired success failure))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51633](?).compareAndSwap[50362](arg _mt[51681]:_MT[238], arg this[51679]:RAtomicT[51633](?), arg expected[50359] :
  T, arg desired[50365] :
  T, param arg order[50373] :
  memoryOrder =
  (50370 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_cmpxchg[50389](ref arg expected[50386] :
    T, ref arg desired[50392] :
    T, arg l[50399] :
    (50398 call int[13] 32), arg obj[50403] :
    c_void_ptr, ref arg result[50410] :
    (50409 call bool[10] 32), arg succ[50414] :
    memory_order, arg fail[50418] :
    memory_order, arg _chpl_cname[50426] :
    string[26] =
    (50382 call externFunc "cmpxchg" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50435](50434 call bool[10] 32)
      (50438 'end of statement')
    }
    { scopeless
      unknown te[50440] expected
      (50443 'end of statement')
    }
    { scopeless
      unknown td[50445] desired
      (50448 'end of statement')
    }
    (50471 call atomic_cmpxchg te td(50455 call _localeid)(50458 call _addr) ret(50463 call c_memory_order order)(50470 call c_memory_order(50468 call readableOrder order)))
    (50477 return(50475 call _cast bool[10] ret))
  }
  { scopeless type
    bool[10]
  } function RAtomicT[51633](?).fetchAdd[50488](arg _mt[51685]:_MT[238], arg this[51683]:RAtomicT[51633](?), arg value[50485] :
  T, param arg order[50495] :
  memoryOrder =
  (50492 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_fetch_add[50511](ref arg op[50508] :
    T, arg l[50517] :
    (50516 call int[13] 32), arg obj[50521] :
    c_void_ptr, ref arg result[50525] :
    T, arg order[50529] :
    memory_order, arg _chpl_cname[50537] :
    string[26] =
    (50504 call externFunc "fetch_add" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50543] T
      (50546 'end of statement')
    }
    { scopeless
      unknown v[50548] value
      (50551 'end of statement')
    }
    (50566 call atomic_fetch_add v(50557 call _localeid)(50560 call _addr) ret(50565 call c_memory_order order))
    (50569 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).add[50580](arg _mt[51689]:_MT[238], arg this[51687]:RAtomicT[51633](?), arg value[50577] :
  T, param arg order[50587] :
  memoryOrder =
  (50584 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_add[50617](ref arg op[50614] :
    T, arg l[50623] :
    (50622 call int[13] 32), arg obj[50627] :
    c_void_ptr, arg order[50631] :
    memory_order, arg _chpl_cname[50639] :
    string[26] =
    (50610 call externFunc "add" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[50645] value
      (50648 'end of statement')
    }
    (50662 call atomic_add v(50654 call _localeid)(50657 call _addr)(50661 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).fetchSub[50673](arg _mt[51693]:_MT[238], arg this[51691]:RAtomicT[51633](?), arg value[50670] :
  T, param arg order[50680] :
  memoryOrder =
  (50677 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_fetch_sub[50696](ref arg op[50693] :
    T, arg l[50702] :
    (50701 call int[13] 32), arg obj[50706] :
    c_void_ptr, ref arg result[50710] :
    T, arg order[50714] :
    memory_order, arg _chpl_cname[50722] :
    string[26] =
    (50689 call externFunc "fetch_sub" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50728] T
      (50731 'end of statement')
    }
    { scopeless
      unknown v[50733] value
      (50736 'end of statement')
    }
    (50751 call atomic_fetch_sub v(50742 call _localeid)(50745 call _addr) ret(50750 call c_memory_order order))
    (50754 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).sub[50765](arg _mt[51697]:_MT[238], arg this[51695]:RAtomicT[51633](?), arg value[50762] :
  T, param arg order[50772] :
  memoryOrder =
  (50769 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    function atomic_sub[50802](ref arg op[50799] :
    T, arg l[50808] :
    (50807 call int[13] 32), arg obj[50812] :
    c_void_ptr, arg order[50816] :
    memory_order, arg _chpl_cname[50824] :
    string[26] =
    (50795 call externFunc "sub" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[50830] value
      (50833 'end of statement')
    }
    (50847 call atomic_sub v(50839 call _localeid)(50842 call _addr)(50846 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).fetchOr[50858](arg _mt[51701]:_MT[238], arg this[51699]:RAtomicT[51633](?), arg value[50855] :
  T, param arg order[50865] :
  memoryOrder =
  (50862 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(50881 call _cond_test(50874 call !(50873 call isIntegral T)))
    {
      { scopeless
        (50879 call compilerError "fetchOr is only defined for integer atomic types")
      }
    }
    function atomic_fetch_or[50898](ref arg op[50895] :
    T, arg l[50904] :
    (50903 call int[13] 32), arg obj[50908] :
    c_void_ptr, ref arg result[50912] :
    T, arg order[50916] :
    memory_order, arg _chpl_cname[50924] :
    string[26] =
    (50891 call externFunc "fetch_or" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[50929] T
      (50932 'end of statement')
    }
    { scopeless
      unknown v[50934] value
      (50937 'end of statement')
    }
    (50952 call atomic_fetch_or v(50943 call _localeid)(50946 call _addr) ret(50951 call c_memory_order order))
    (50955 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).or[50966](arg _mt[51705]:_MT[238], arg this[51703]:RAtomicT[51633](?), arg value[50963] :
  T, param arg order[50973] :
  memoryOrder =
  (50970 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(50989 call _cond_test(50982 call !(50981 call isIntegral T)))
    {
      { scopeless
        (50987 call compilerError "or is only defined for integer atomic types")
      }
    }
    function atomic_or[51022](ref arg op[51019] :
    T, arg l[51028] :
    (51027 call int[13] 32), arg obj[51032] :
    c_void_ptr, arg order[51036] :
    memory_order, arg _chpl_cname[51044] :
    string[26] =
    (51015 call externFunc "or" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51049] value
      (51052 'end of statement')
    }
    (51066 call atomic_or v(51058 call _localeid)(51061 call _addr)(51065 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).fetchAnd[51077](arg _mt[51709]:_MT[238], arg this[51707]:RAtomicT[51633](?), arg value[51074] :
  T, param arg order[51084] :
  memoryOrder =
  (51081 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51100 call _cond_test(51093 call !(51092 call isIntegral T)))
    {
      { scopeless
        (51098 call compilerError "fetchAnd is only defined for integer atomic types")
      }
    }
    function atomic_fetch_and[51117](ref arg op[51114] :
    T, arg l[51123] :
    (51122 call int[13] 32), arg obj[51127] :
    c_void_ptr, ref arg result[51131] :
    T, arg order[51135] :
    memory_order, arg _chpl_cname[51143] :
    string[26] =
    (51110 call externFunc "fetch_and" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[51148] T
      (51151 'end of statement')
    }
    { scopeless
      unknown v[51153] value
      (51156 'end of statement')
    }
    (51171 call atomic_fetch_and v(51162 call _localeid)(51165 call _addr) ret(51170 call c_memory_order order))
    (51174 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).and[51185](arg _mt[51713]:_MT[238], arg this[51711]:RAtomicT[51633](?), arg value[51182] :
  T, param arg order[51192] :
  memoryOrder =
  (51189 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51208 call _cond_test(51201 call !(51200 call isIntegral T)))
    {
      { scopeless
        (51206 call compilerError "and is only defined for integer atomic types")
      }
    }
    function atomic_and[51241](ref arg op[51238] :
    T, arg l[51247] :
    (51246 call int[13] 32), arg obj[51251] :
    c_void_ptr, arg order[51255] :
    memory_order, arg _chpl_cname[51263] :
    string[26] =
    (51234 call externFunc "and" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51268] value
      (51271 'end of statement')
    }
    (51285 call atomic_and v(51277 call _localeid)(51280 call _addr)(51284 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).fetchXor[51296](arg _mt[51717]:_MT[238], arg this[51715]:RAtomicT[51633](?), arg value[51293] :
  T, param arg order[51303] :
  memoryOrder =
  (51300 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51319 call _cond_test(51312 call !(51311 call isIntegral T)))
    {
      { scopeless
        (51317 call compilerError "fetchXor is only defined for integer atomic types")
      }
    }
    function atomic_fetch_xor[51336](ref arg op[51333] :
    T, arg l[51342] :
    (51341 call int[13] 32), arg obj[51346] :
    c_void_ptr, ref arg result[51350] :
    T, arg order[51354] :
    memory_order, arg _chpl_cname[51362] :
    string[26] =
    (51329 call externFunc "fetch_xor" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown ret[51367] T
      (51370 'end of statement')
    }
    { scopeless
      unknown v[51372] value
      (51375 'end of statement')
    }
    (51390 call atomic_fetch_xor v(51381 call _localeid)(51384 call _addr) ret(51389 call c_memory_order order))
    (51393 return ret)
  }
  { scopeless type
    T
  } function RAtomicT[51633](?).xor[51404](arg _mt[51721]:_MT[238], arg this[51719]:RAtomicT[51633](?), arg value[51401] :
  T, param arg order[51411] :
  memoryOrder =
  (51408 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    if(51427 call _cond_test(51420 call !(51419 call isIntegral T)))
    {
      { scopeless
        (51425 call compilerError "xor is only defined for integer atomic types")
      }
    }
    function atomic_xor[51460](ref arg op[51457] :
    T, arg l[51466] :
    (51465 call int[13] 32), arg obj[51470] :
    c_void_ptr, arg order[51474] :
    memory_order, arg _chpl_cname[51482] :
    string[26] =
    (51453 call externFunc "xor" T)) : _unknown[51] "extern" "insert line file info" "local args" "no fn body"
    {
    }
    { scopeless type
      void[4]
    }
    { scopeless
      unknown v[51487] value
      (51490 'end of statement')
    }
    (51504 call atomic_xor v(51496 call _localeid)(51499 call _addr)(51503 call c_memory_order order))
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).waitFor[51515](arg _mt[51725]:_MT[238], const arg this[51723]:RAtomicT[51633](?), arg value[51512] :
  T, param arg order[51522] :
  memoryOrder =
  (51519 call . memoryOrder c"seqCst")) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[51604] "const" "temp"
      (51606 'move' tmp[51604](51602 'deref'(51601 '_wide_get_locale' this)))
      {
        {
          {
            unknown tmp[51547] "temp"
            (51589 'move' tmp[51547](51575 call _cond_test(51577 call !=(51582 call(51579 call . this c"read")(order =(51584 call . memoryOrder c"relaxed"))) value)))
            WhileDo[51552]
            {
              {
                (51544 call chpl_task_yield)
              }
              label _continueLabel[51550]
              (51570 'move' tmp[51547](51556 call _cond_test(51558 call !=(51563 call(51560 call . this c"read")(order =(51565 call . memoryOrder c"relaxed"))) value)))
              tmp[51547]
            }
            label _breakLabel[51551]
          }
          (51599 call chpl_atomic_thread_fence(51597 call c_memory_order order))
        }
        (51609 'on block' 0 tmp[51604])
      }
    }
  }
  { scopeless type
    void[4]
  } function RAtomicT[51633](?).writeThis[51620](arg _mt[51729]:_MT[238], const arg this[51727]:RAtomicT[51633](?), arg x[51618]:_any[178](?)) : _unknown[51] throws "method" "primary method"
  {
    (51626 call <~> x(51625 call read))
  }
  function =[51738](ref arg a[51735] :
  RAtomicBool, const arg b[51741] :
  RAtomicBool) : _unknown[51] "assignop" "inline"
  {
    (51755 call(51745 call . a c"write")(51753 call(51749 call . b c"read")))
  }
  function =[51766](ref arg a[51763] :
  RAtomicBool, arg b[51768]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (51773 call compilerError "Cannot directly assign atomic variables")
  }
  function =[51784](ref arg a[51781] :
  RAtomicT, const arg b[51787] :
  RAtomicT) : _unknown[51] "assignop" "inline"
  {
    (51801 call(51791 call . a c"write")(51799 call(51795 call . b c"read")))
  }
  function =[51812](ref arg a[51809] :
  RAtomicT, arg b[51814]:_any[178](?)) : _unknown[51] "assignop" "inline"
  {
    (51819 call compilerError "Cannot directly assign atomic variables")
  }
  function +[51830](arg a[51827] :
  RAtomicT, arg b[51832]:_any[178](?)) : _unknown[51] "inline"
  {
    (51837 call compilerError "Cannot directly add atomic variables")
    (51841 return a)
  }
  function -[51851](arg a[51848] :
  RAtomicT, arg b[51853]:_any[178](?)) : _unknown[51] "inline"
  {
    (51858 call compilerError "Cannot directly subtract atomic variables")
    (51862 return a)
  }
  function *[51872](arg a[51869] :
  RAtomicT, arg b[51874]:_any[178](?)) : _unknown[51] "inline"
  {
    (51879 call compilerError "Cannot directly multiply atomic variables")
    (51883 return a)
  }
  function /[51893](arg a[51890] :
  RAtomicT, arg b[51895]:_any[178](?)) : _unknown[51] "inline"
  {
    (51900 call compilerError "Cannot directly divide atomic variables")
    (51904 return a)
  }
  function %[51914](arg a[51911] :
  RAtomicT, arg b[51916]:_any[178](?)) : _unknown[51] "inline"
  {
    (51921 call compilerError "Cannot directly divide atomic variables")
    (51925 return a)
  }
}