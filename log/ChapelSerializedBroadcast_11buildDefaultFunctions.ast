AST dump for ChapelSerializedBroadcast after pass buildDefaultFunctions.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[416061]() : void[4] "insert line file info" "module init"
  {
    (544791 'init var' chpl__enableSerializedGlobals[171469] 1)
    (171472 'end of statement')
    (522460 return _void[55])
  }
  unknown chpl__enableSerializedGlobals[171469] "config" "param"
  function chpl_get_global_serialize_table[171479](arg idx[171476]:int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[522452] "RVV" "temp"
    (522454 return ret[522452])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171492](ref arg localeZeroGlobal[171489]:_any[178](?), arg id[171495]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown tmp[428534] "maybe param" "temp"
    (428545 'move' tmp[428534](171502 call isArray localeZeroGlobal[171489]))
    unknown call_tmp[681082] "expr temp" "maybe param" "maybe type" "temp"
    (681085 'move' call_tmp[681082](428547 call _cond_invalid tmp[428534]))
    if call_tmp[681082]
    {
      (428550 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570600] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570601] "maybe param" "temp"
    unknown call_tmp[681087] "expr temp" "maybe param" "maybe type" "temp"
    (681090 'move' call_tmp[681087](428535 call isTrue tmp[428534]))
    (570606 'move' tmp[570601](570604 call _cond_test call_tmp[681087]))
    if tmp[570601]
    {
      unknown tmp[570608] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[681092] "expr temp" "maybe param" "maybe type" "temp"
      (681095 'move' call_tmp[681092](171506 call chpl__isArrayView localeZeroGlobal[171489]))
      (570610 'move' tmp[570608](428538 call isTrue call_tmp[681092]))
      (570615 'move' tmp[570600](570612 '_paramFoldLogical' tmp[570601] tmp[570608]))
    }
    {
      (570620 'move' tmp[570600](570617 '_paramFoldLogical' tmp[570601] 0))
    }
    unknown call_tmp[681097] "expr temp" "maybe param" "maybe type" "temp"
    (681100 'move' call_tmp[681097](171833 call _cond_test tmp[570600]))
    if call_tmp[681097]
    {
      (171528 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[681104] "maybe param" "maybe type" "temp"
      (681107 'move' call_tmp[681104](171536 call(171532 call (partial) chpl__serialize _mt[243] localeZeroGlobal[171489])))
      const data[171537] "dead at end of block" "const" "insert auto destroy"
      (544793 'init var' data[171537] call_tmp[681104])
      (171540 'end of statement')
      unknown call_tmp[681109] "expr temp" "maybe param" "maybe type" "temp"
      (681112 'move' call_tmp[681109](361473 call here[90438]))
      unknown call_tmp[681116] "maybe param" "maybe type" "temp"
      (681119 'move' call_tmp[681116](171543 call id _mt[243] call_tmp[681109]))
      const root[171546] "dead at end of block" "const" "insert auto destroy"
      (544795 'init var' root[171546] call_tmp[681116])
      (171549 'end of statement')
      {
        unknown tmpIter[171620] "expr temp" "maybe ref" "no copy" "temp"
        (171623 'move' tmpIter[171620] Locales[113662])
        unknown isRngDomArr[171814] "maybe param" "temp"
        unknown tmp[428492] "maybe param" "temp"
        (428503 'move' tmp[428492](171816 call isBoundedRange tmpIter[171620]))
        unknown call_tmp[681121] "expr temp" "maybe param" "maybe type" "temp"
        (681124 'move' call_tmp[681121](428505 call _cond_invalid tmp[428492]))
        if call_tmp[681121]
        {
          (428508 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570654] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570655] "maybe param" "temp"
        unknown call_tmp[681126] "expr temp" "maybe param" "maybe type" "temp"
        (681129 'move' call_tmp[681126](428493 call isTrue tmp[428492]))
        (570660 'move' tmp[570655](570658 call _cond_test call_tmp[681126]))
        if tmp[570655]
        {
          (570665 'move' tmp[570654](570662 '_paramFoldLogical' tmp[570655] 1))
        }
        {
          unknown tmp[428513] "maybe param" "temp"
          (428524 'move' tmp[428513](171819 call isDomain tmpIter[171620]))
          unknown call_tmp[681131] "expr temp" "maybe param" "maybe type" "temp"
          (681134 'move' call_tmp[681131](428526 call _cond_invalid tmp[428513]))
          if call_tmp[681131]
          {
            (428529 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570627] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570628] "maybe param" "temp"
          unknown call_tmp[681136] "expr temp" "maybe param" "maybe type" "temp"
          (681139 'move' call_tmp[681136](428514 call isTrue tmp[428513]))
          (570633 'move' tmp[570628](570631 call _cond_test call_tmp[681136]))
          if tmp[570628]
          {
            (570638 'move' tmp[570627](570635 '_paramFoldLogical' tmp[570628] 1))
          }
          {
            unknown tmp[570640] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[681141] "expr temp" "maybe param" "maybe type" "temp"
            (681144 'move' call_tmp[681141](171822 call isArray tmpIter[171620]))
            (570642 'move' tmp[570640](428518 call isTrue call_tmp[681141]))
            (570647 'move' tmp[570627](570644 '_paramFoldLogical' tmp[570628] tmp[570640]))
          }
          unknown tmp[570667] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570669 'move' tmp[570667](428497 call isTrue tmp[570627]))
          (570674 'move' tmp[570654](570671 '_paramFoldLogical' tmp[570655] tmp[570667]))
        }
        (171829 'move' isRngDomArr[171814] tmp[570654])
        if isRngDomArr[171814]
        {
          const _coforallCount[171686] "const" "end count" "temp"
          (171751 'move' _coforallCount[171686](171748 call _endCountAlloc 0))
          unknown numTasks[171687] "temp"
          (171735 'move' numTasks[171687](171731 call size _mt[243] tmpIter[171620]))
          (171726 call _upEndCount _coforallCount[171686] 0 numTasks[171687])
          (483299 'end of statement')
          unknown _indexOfInterest[171693] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171694] "expr temp" "temp"
          (171703 'move' _iterator[171694](171701 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171719 call _freeIterator _iterator[171694])
            }
          }
          { scopeless type
            (171708 'move' _indexOfInterest[171693](171705 call iteratorIndex _iterator[171694]))
          }
          ForLoop[171695]
          {
            unknown loc[171712] "coforall index var" "index var" "insert auto destroy"
            (483301 'end of statement')
            (171714 'move' loc[171712] _indexOfInterest[171693])
            (483302 'end of statement' loc[171712])
            const tmp[171626] "const" "temp"
            unknown call_tmp[681148] "expr temp" "maybe param" "maybe type" "temp"
            (681151 'move' call_tmp[681148](171631 '_wide_get_locale' loc[171712]))
            (171628 'move' tmp[171626](171630 'deref' call_tmp[681148]))
            {
              {
                unknown call_tmp[681153] "expr temp" "maybe param" "maybe type" "temp"
                (681156 'move' call_tmp[681153](361478 call here[90438]))
                unknown call_tmp[681160] "expr temp" "maybe param" "maybe type" "temp"
                (681163 'move' call_tmp[681160](171643 call id _mt[243] call_tmp[681153]))
                unknown call_tmp[681165] "expr temp" "maybe param" "maybe type" "temp"
                (681168 'move' call_tmp[681165](171641 call != call_tmp[681160] root[171546]))
                unknown call_tmp[681170] "expr temp" "maybe param" "maybe type" "temp"
                (681173 'move' call_tmp[681170](171639 call _cond_test call_tmp[681165]))
                if call_tmp[681170]
                {
                  unknown call_tmp[681175] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681178 'move' call_tmp[681175](171652 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681182] "maybe param" "maybe type" "temp"
                  (681185 'move' call_tmp[681182](171655 call(171651 call (partial) chpl__deserialize _mt[243] call_tmp[681175]) data[171537]))
                  unknown temp[171649] "dead at end of block" "no auto destroy" "no copy"
                  (544797 'init var' temp[171649] call_tmp[681182])
                  (171658 'end of statement')
                  unknown call_tmp[681187] "maybe param" "maybe type" "temp"
                  (681190 'move' call_tmp[681187](171662 call chpl_get_global_serialize_table id[171495]))
                  const destVoidPtr[171660] "dead at end of block" "const" "insert auto destroy"
                  (544799 'init var' destVoidPtr[171660] call_tmp[681187])
                  (171665 'end of statement')
                  unknown call_tmp[681192] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681195 'move' call_tmp[681192](171672 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681197] "expr temp" "maybe param" "maybe type" "temp"
                  (681200 'move' call_tmp[681197](171671 call c_ptr[205100](?) call_tmp[681192]))
                  unknown call_tmp[681202] "maybe param" "maybe type" "temp"
                  (681205 'move' call_tmp[681202](171669 call _cast call_tmp[681197] destVoidPtr[171660]))
                  const dest[171667] "dead at end of block" "const" "insert auto destroy"
                  (544801 'init var' dest[171667] call_tmp[681202])
                  (171676 'end of statement' data[171537] destVoidPtr[171660])
                  unknown call_tmp[681209] "expr temp" "maybe param" "maybe type" "temp"
                  (681212 'move' call_tmp[681209](171682 call(171679 call (partial) deref _mt[243] dest[171667])))
                  (171677 '=' call_tmp[681209] temp[171649])
                  (483306 'end of statement' dest[171667] temp[171649])
                }
              }
              (171688 call _downEndCount _coforallCount[171686] nil[44])
              (171634 'coforall on block' 0 tmp[171626])
            }
            label _continueLabel[171698]
            _indexOfInterest[171693]
            _iterator[171694]
          }
          label _breakLabel[171699]
          Defer
          {
            {
              (171738 call _endCountFree _coforallCount[171686])
            }
          }
          (171743 call _waitEndCount _coforallCount[171686] 0 numTasks[171687])
        }
        {
          const _coforallCount[171755] "const" "end count" "temp"
          (171811 'move' _coforallCount[171755](171808 call _endCountAlloc 0))
          unknown _indexOfInterest[171762] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171763] "expr temp" "temp"
          (171772 'move' _iterator[171763](171770 call _getIterator tmpIter[171620]))
          Defer
          {
            {
              (171788 call _freeIterator _iterator[171763])
            }
          }
          { scopeless type
            (171777 'move' _indexOfInterest[171762](171774 call iteratorIndex _iterator[171763]))
          }
          ForLoop[171764]
          {
            unknown loc[171781] "coforall index var" "index var" "insert auto destroy"
            (483313 'end of statement')
            (171783 'move' loc[171781] _indexOfInterest[171762])
            (483314 'end of statement' loc[171781])
            (171795 call _upEndCount _coforallCount[171755] 0)
            (483316 'end of statement')
            const tmp[171612] "const" "temp"
            unknown call_tmp[681214] "expr temp" "maybe param" "maybe type" "temp"
            (681217 'move' call_tmp[681214](171609 '_wide_get_locale' loc[171781]))
            (171614 'move' tmp[171612](171610 'deref' call_tmp[681214]))
            {
              {
                unknown call_tmp[681219] "expr temp" "maybe param" "maybe type" "temp"
                (681222 'move' call_tmp[681219](361475 call here[90438]))
                unknown call_tmp[681226] "expr temp" "maybe param" "maybe type" "temp"
                (681229 'move' call_tmp[681226](171554 call id _mt[243] call_tmp[681219]))
                unknown call_tmp[681231] "expr temp" "maybe param" "maybe type" "temp"
                (681234 'move' call_tmp[681231](171558 call != call_tmp[681226] root[171546]))
                unknown call_tmp[681236] "expr temp" "maybe param" "maybe type" "temp"
                (681239 'move' call_tmp[681236](171604 call _cond_test call_tmp[681231]))
                if call_tmp[681236]
                {
                  unknown call_tmp[681241] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681244 'move' call_tmp[681241](171561 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681248] "maybe param" "maybe type" "temp"
                  (681251 'move' call_tmp[681248](171567 call(171562 call (partial) chpl__deserialize _mt[243] call_tmp[681241]) data[171537]))
                  unknown temp[171568] "dead at end of block" "no auto destroy" "no copy"
                  (544803 'init var' temp[171568] call_tmp[681248])
                  (171571 'end of statement')
                  unknown call_tmp[681253] "maybe param" "maybe type" "temp"
                  (681256 'move' call_tmp[681253](171576 call chpl_get_global_serialize_table id[171495]))
                  const destVoidPtr[171577] "dead at end of block" "const" "insert auto destroy"
                  (544805 'init var' destVoidPtr[171577] call_tmp[681253])
                  (171580 'end of statement')
                  unknown call_tmp[681258] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681261 'move' call_tmp[681258](171584 'typeof' localeZeroGlobal[171489]))
                  unknown call_tmp[681263] "expr temp" "maybe param" "maybe type" "temp"
                  (681266 'move' call_tmp[681263](171586 call c_ptr[205100](?) call_tmp[681258]))
                  unknown call_tmp[681268] "maybe param" "maybe type" "temp"
                  (681271 'move' call_tmp[681268](171587 call _cast call_tmp[681263] destVoidPtr[171577]))
                  const dest[171589] "dead at end of block" "const" "insert auto destroy"
                  (544807 'init var' dest[171589] call_tmp[681268])
                  (171592 'end of statement' data[171537] destVoidPtr[171577])
                  unknown call_tmp[681275] "expr temp" "maybe param" "maybe type" "temp"
                  (681278 'move' call_tmp[681275](171600 call(171596 call (partial) deref _mt[243] dest[171589])))
                  (171602 '=' call_tmp[681275] temp[171568])
                  (483319 'end of statement' dest[171589] temp[171568])
                }
              }
              (171757 call _downEndCount _coforallCount[171755] nil[44])
              (171617 'coforall on block' 0 tmp[171612])
            }
            label _continueLabel[171767]
            _indexOfInterest[171762]
            _iterator[171763]
          }
          label _breakLabel[171768]
          Defer
          {
            {
              (171799 call _endCountFree _coforallCount[171755])
            }
          }
          (171804 call _waitEndCount _coforallCount[171755] 0)
        }
      }
    }
    (522456 return _void[55])
  }
  where {
    (748169 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171469])
  }
  function chpl__destroyBroadcastedGlobal[171845](ref arg localeZeroGlobal[171843]:_any[178](?), arg id[171848]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171854] "dead at end of block" "insert auto destroy" "type variable"(171853 'typeof' localeZeroGlobal[171843])
    (544811 'move' globalType[171854](544809 'typeof' localeZeroGlobal[171843]))
    unknown call_tmp[681280] "expr temp" "maybe param" "maybe type" "temp"
    (681283 'move' call_tmp[681280](361481 call here[90438]))
    unknown call_tmp[681287] "maybe param" "maybe type" "temp"
    (681290 'move' call_tmp[681287](171859 call id _mt[243] call_tmp[681280]))
    const root[171862] "dead at end of block" "const" "insert auto destroy"
    (544813 'init var' root[171862] call_tmp[681287])
    (171865 'end of statement')
    {
      unknown tmpIter[171927] "expr temp" "maybe ref" "no copy" "temp"
      (171930 'move' tmpIter[171927] Locales[113662])
      unknown isRngDomArr[172114] "maybe param" "temp"
      unknown tmp[428555] "maybe param" "temp"
      (428566 'move' tmp[428555](172116 call isBoundedRange tmpIter[171927]))
      unknown call_tmp[681292] "expr temp" "maybe param" "maybe type" "temp"
      (681295 'move' call_tmp[681292](428568 call _cond_invalid tmp[428555]))
      if call_tmp[681292]
      {
        (428571 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570708] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570709] "maybe param" "temp"
      unknown call_tmp[681297] "expr temp" "maybe param" "maybe type" "temp"
      (681300 'move' call_tmp[681297](428556 call isTrue tmp[428555]))
      (570714 'move' tmp[570709](570712 call _cond_test call_tmp[681297]))
      if tmp[570709]
      {
        (570719 'move' tmp[570708](570716 '_paramFoldLogical' tmp[570709] 1))
      }
      {
        unknown tmp[428576] "maybe param" "temp"
        (428587 'move' tmp[428576](172119 call isDomain tmpIter[171927]))
        unknown call_tmp[681302] "expr temp" "maybe param" "maybe type" "temp"
        (681305 'move' call_tmp[681302](428589 call _cond_invalid tmp[428576]))
        if call_tmp[681302]
        {
          (428592 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570681] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570682] "maybe param" "temp"
        unknown call_tmp[681307] "expr temp" "maybe param" "maybe type" "temp"
        (681310 'move' call_tmp[681307](428577 call isTrue tmp[428576]))
        (570687 'move' tmp[570682](570685 call _cond_test call_tmp[681307]))
        if tmp[570682]
        {
          (570692 'move' tmp[570681](570689 '_paramFoldLogical' tmp[570682] 1))
        }
        {
          unknown tmp[570694] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[681312] "expr temp" "maybe param" "maybe type" "temp"
          (681315 'move' call_tmp[681312](172122 call isArray tmpIter[171927]))
          (570696 'move' tmp[570694](428581 call isTrue call_tmp[681312]))
          (570701 'move' tmp[570681](570698 '_paramFoldLogical' tmp[570682] tmp[570694]))
        }
        unknown tmp[570721] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570723 'move' tmp[570721](428560 call isTrue tmp[570681]))
        (570728 'move' tmp[570708](570725 '_paramFoldLogical' tmp[570709] tmp[570721]))
      }
      (172129 'move' isRngDomArr[172114] tmp[570708])
      if isRngDomArr[172114]
      {
        const _coforallCount[171986] "const" "end count" "temp"
        (172051 'move' _coforallCount[171986](172048 call _endCountAlloc 0))
        unknown numTasks[171987] "temp"
        (172035 'move' numTasks[171987](172031 call size _mt[243] tmpIter[171927]))
        (172026 call _upEndCount _coforallCount[171986] 0 numTasks[171987])
        (483326 'end of statement')
        unknown _indexOfInterest[171993] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171994] "expr temp" "temp"
        (172003 'move' _iterator[171994](172001 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172019 call _freeIterator _iterator[171994])
          }
        }
        { scopeless type
          (172008 'move' _indexOfInterest[171993](172005 call iteratorIndex _iterator[171994]))
        }
        ForLoop[171995]
        {
          unknown loc[172012] "coforall index var" "index var" "insert auto destroy"
          (483328 'end of statement')
          (172014 'move' loc[172012] _indexOfInterest[171993])
          (483329 'end of statement' loc[172012])
          const tmp[171933] "const" "temp"
          unknown call_tmp[681319] "expr temp" "maybe param" "maybe type" "temp"
          (681322 'move' call_tmp[681319](171938 '_wide_get_locale' loc[172012]))
          (171935 'move' tmp[171933](171937 'deref' call_tmp[681319]))
          {
            {
              unknown call_tmp[681324] "expr temp" "maybe param" "maybe type" "temp"
              (681327 'move' call_tmp[681324](361486 call here[90438]))
              unknown call_tmp[681331] "expr temp" "maybe param" "maybe type" "temp"
              (681334 'move' call_tmp[681331](171950 call id _mt[243] call_tmp[681324]))
              unknown call_tmp[681336] "expr temp" "maybe param" "maybe type" "temp"
              (681339 'move' call_tmp[681336](171948 call != call_tmp[681331] root[171862]))
              unknown call_tmp[681341] "expr temp" "maybe param" "maybe type" "temp"
              (681344 'move' call_tmp[681341](171946 call _cond_test call_tmp[681336]))
              if call_tmp[681341]
              {
                unknown call_tmp[681346] "maybe param" "maybe type" "temp"
                (681349 'move' call_tmp[681346](171958 call chpl_get_global_serialize_table id[171848]))
                const voidPtr[171956] "dead at end of block" "const" "insert auto destroy"
                (544815 'init var' voidPtr[171956] call_tmp[681346])
                (171961 'end of statement')
                unknown call_tmp[681351] "expr temp" "maybe param" "maybe type" "temp"
                (681354 'move' call_tmp[681351](171967 call c_ptr[205100](?) globalType[171854]))
                unknown call_tmp[681356] "maybe param" "maybe type" "temp"
                (681359 'move' call_tmp[681356](171965 call _cast call_tmp[681351] voidPtr[171956]))
                unknown ptr[171963] "dead at end of block" "insert auto destroy"
                (544817 'init var' ptr[171963] call_tmp[681356])
                (171971 'end of statement')
                unknown call_tmp[681363] "maybe param" "maybe type" "temp"
                (681366 'move' call_tmp[681363](171978 call(171975 call (partial) deref _mt[243] ptr[171963])))
                unknown temp[171973] "dead at end of block" "no auto destroy" "no copy"
                (544819 'init var' temp[171973] call_tmp[681363])
                (171980 'end of statement' globalType[171854] voidPtr[171956] ptr[171963])
                (171982 call chpl__autoDestroy temp[171973])
                (483334 'end of statement' temp[171973])
              }
            }
            (171988 call _downEndCount _coforallCount[171986] nil[44])
            (171941 'coforall on block' 0 tmp[171933])
          }
          label _continueLabel[171998]
          _indexOfInterest[171993]
          _iterator[171994]
        }
        label _breakLabel[171999]
        Defer
        {
          {
            (172038 call _endCountFree _coforallCount[171986])
          }
        }
        (172043 call _waitEndCount _coforallCount[171986] 0 numTasks[171987])
      }
      {
        const _coforallCount[172055] "const" "end count" "temp"
        (172111 'move' _coforallCount[172055](172108 call _endCountAlloc 0))
        unknown _indexOfInterest[172062] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172063] "expr temp" "temp"
        (172072 'move' _iterator[172063](172070 call _getIterator tmpIter[171927]))
        Defer
        {
          {
            (172088 call _freeIterator _iterator[172063])
          }
        }
        { scopeless type
          (172077 'move' _indexOfInterest[172062](172074 call iteratorIndex _iterator[172063]))
        }
        ForLoop[172064]
        {
          unknown loc[172081] "coforall index var" "index var" "insert auto destroy"
          (483340 'end of statement')
          (172083 'move' loc[172081] _indexOfInterest[172062])
          (483341 'end of statement' loc[172081])
          (172095 call _upEndCount _coforallCount[172055] 0)
          (483343 'end of statement')
          const tmp[171919] "const" "temp"
          unknown call_tmp[681368] "expr temp" "maybe param" "maybe type" "temp"
          (681371 'move' call_tmp[681368](171916 '_wide_get_locale' loc[172081]))
          (171921 'move' tmp[171919](171917 'deref' call_tmp[681368]))
          {
            {
              unknown call_tmp[681373] "expr temp" "maybe param" "maybe type" "temp"
              (681376 'move' call_tmp[681373](361483 call here[90438]))
              unknown call_tmp[681380] "expr temp" "maybe param" "maybe type" "temp"
              (681383 'move' call_tmp[681380](171870 call id _mt[243] call_tmp[681373]))
              unknown call_tmp[681385] "expr temp" "maybe param" "maybe type" "temp"
              (681388 'move' call_tmp[681385](171874 call != call_tmp[681380] root[171862]))
              unknown call_tmp[681390] "expr temp" "maybe param" "maybe type" "temp"
              (681393 'move' call_tmp[681390](171911 call _cond_test call_tmp[681385]))
              if call_tmp[681390]
              {
                unknown call_tmp[681395] "maybe param" "maybe type" "temp"
                (681398 'move' call_tmp[681395](171879 call chpl_get_global_serialize_table id[171848]))
                const voidPtr[171880] "dead at end of block" "const" "insert auto destroy"
                (544821 'init var' voidPtr[171880] call_tmp[681395])
                (171883 'end of statement')
                unknown call_tmp[681400] "expr temp" "maybe param" "maybe type" "temp"
                (681403 'move' call_tmp[681400](171889 call c_ptr[205100](?) globalType[171854]))
                unknown call_tmp[681405] "maybe param" "maybe type" "temp"
                (681408 'move' call_tmp[681405](171890 call _cast call_tmp[681400] voidPtr[171880]))
                unknown ptr[171892] "dead at end of block" "insert auto destroy"
                (544823 'init var' ptr[171892] call_tmp[681405])
                (171895 'end of statement')
                unknown call_tmp[681412] "maybe param" "maybe type" "temp"
                (681415 'move' call_tmp[681412](171901 call(171897 call (partial) deref _mt[243] ptr[171892])))
                unknown temp[171902] "dead at end of block" "no auto destroy" "no copy"
                (544825 'init var' temp[171902] call_tmp[681412])
                (171905 'end of statement' globalType[171854] voidPtr[171880] ptr[171892])
                (171909 call chpl__autoDestroy temp[171902])
                (483347 'end of statement' temp[171902])
              }
            }
            (172057 call _downEndCount _coforallCount[172055] nil[44])
            (171924 'coforall on block' 0 tmp[171919])
          }
          label _continueLabel[172067]
          _indexOfInterest[172062]
          _iterator[172063]
        }
        label _breakLabel[172068]
        Defer
        {
          {
            (172099 call _endCountFree _coforallCount[172055])
          }
        }
        (172104 call _waitEndCount _coforallCount[172055] 0)
      }
    }
    (522458 return _void[55])
  }
  where {
    (748171 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171469])
  }
  (355222 'used modules list'(171462 'use' ChapelLocale[89847])(171466 'use' CPtr[204989]))
}