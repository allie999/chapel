AST dump for ChapelSerializedBroadcast after pass buildDefaultFunctions.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[416023]() : void[4] "insert line file info" "module init"
  {
    (544750 'init var' chpl__enableSerializedGlobals[171423] 1)
    (171426 'end of statement')
    (522419 return _void[55])
  }
  unknown chpl__enableSerializedGlobals[171423] "config" "param"
  function chpl_get_global_serialize_table[171433](arg idx[171430]:int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[522411] "RVV" "temp"
    (522413 return ret[522411])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171446](ref arg localeZeroGlobal[171443]:_any[178](?), arg id[171449]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown tmp[428496] "maybe param" "temp"
    (428507 'move' tmp[428496](171456 call isArray localeZeroGlobal[171443]))
    unknown call_tmp[681043] "expr temp" "maybe param" "maybe type" "temp"
    (681046 'move' call_tmp[681043](428509 call _cond_invalid tmp[428496]))
    if call_tmp[681043]
    {
      (428512 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570561] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570562] "maybe param" "temp"
    unknown call_tmp[681048] "expr temp" "maybe param" "maybe type" "temp"
    (681051 'move' call_tmp[681048](428497 call isTrue tmp[428496]))
    (570567 'move' tmp[570562](570565 call _cond_test call_tmp[681048]))
    if tmp[570562]
    {
      unknown tmp[570569] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[681053] "expr temp" "maybe param" "maybe type" "temp"
      (681056 'move' call_tmp[681053](171460 call chpl__isArrayView localeZeroGlobal[171443]))
      (570571 'move' tmp[570569](428500 call isTrue call_tmp[681053]))
      (570576 'move' tmp[570561](570573 '_paramFoldLogical' tmp[570562] tmp[570569]))
    }
    {
      (570581 'move' tmp[570561](570578 '_paramFoldLogical' tmp[570562] 0))
    }
    unknown call_tmp[681058] "expr temp" "maybe param" "maybe type" "temp"
    (681061 'move' call_tmp[681058](171787 call _cond_test tmp[570561]))
    if call_tmp[681058]
    {
      (171482 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[681065] "maybe param" "maybe type" "temp"
      (681068 'move' call_tmp[681065](171490 call(171486 call (partial) chpl__serialize _mt[243] localeZeroGlobal[171443])))
      const data[171491] "dead at end of block" "const" "insert auto destroy"
      (544752 'init var' data[171491] call_tmp[681065])
      (171494 'end of statement')
      unknown call_tmp[681070] "expr temp" "maybe param" "maybe type" "temp"
      (681073 'move' call_tmp[681070](361433 call here[90435]))
      unknown call_tmp[681077] "maybe param" "maybe type" "temp"
      (681080 'move' call_tmp[681077](171497 call id _mt[243] call_tmp[681070]))
      const root[171500] "dead at end of block" "const" "insert auto destroy"
      (544754 'init var' root[171500] call_tmp[681077])
      (171503 'end of statement')
      {
        unknown tmpIter[171574] "expr temp" "maybe ref" "no copy" "temp"
        (171577 'move' tmpIter[171574] Locales[113656])
        unknown isRngDomArr[171768] "maybe param" "temp"
        unknown tmp[428454] "maybe param" "temp"
        (428465 'move' tmp[428454](171770 call isBoundedRange tmpIter[171574]))
        unknown call_tmp[681082] "expr temp" "maybe param" "maybe type" "temp"
        (681085 'move' call_tmp[681082](428467 call _cond_invalid tmp[428454]))
        if call_tmp[681082]
        {
          (428470 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570615] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570616] "maybe param" "temp"
        unknown call_tmp[681087] "expr temp" "maybe param" "maybe type" "temp"
        (681090 'move' call_tmp[681087](428455 call isTrue tmp[428454]))
        (570621 'move' tmp[570616](570619 call _cond_test call_tmp[681087]))
        if tmp[570616]
        {
          (570626 'move' tmp[570615](570623 '_paramFoldLogical' tmp[570616] 1))
        }
        {
          unknown tmp[428475] "maybe param" "temp"
          (428486 'move' tmp[428475](171773 call isDomain tmpIter[171574]))
          unknown call_tmp[681092] "expr temp" "maybe param" "maybe type" "temp"
          (681095 'move' call_tmp[681092](428488 call _cond_invalid tmp[428475]))
          if call_tmp[681092]
          {
            (428491 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570588] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570589] "maybe param" "temp"
          unknown call_tmp[681097] "expr temp" "maybe param" "maybe type" "temp"
          (681100 'move' call_tmp[681097](428476 call isTrue tmp[428475]))
          (570594 'move' tmp[570589](570592 call _cond_test call_tmp[681097]))
          if tmp[570589]
          {
            (570599 'move' tmp[570588](570596 '_paramFoldLogical' tmp[570589] 1))
          }
          {
            unknown tmp[570601] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[681102] "expr temp" "maybe param" "maybe type" "temp"
            (681105 'move' call_tmp[681102](171776 call isArray tmpIter[171574]))
            (570603 'move' tmp[570601](428480 call isTrue call_tmp[681102]))
            (570608 'move' tmp[570588](570605 '_paramFoldLogical' tmp[570589] tmp[570601]))
          }
          unknown tmp[570628] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570630 'move' tmp[570628](428459 call isTrue tmp[570588]))
          (570635 'move' tmp[570615](570632 '_paramFoldLogical' tmp[570616] tmp[570628]))
        }
        (171783 'move' isRngDomArr[171768] tmp[570615])
        if isRngDomArr[171768]
        {
          const _coforallCount[171640] "const" "end count" "temp"
          (171705 'move' _coforallCount[171640](171702 call _endCountAlloc 0))
          unknown numTasks[171641] "temp"
          (171689 'move' numTasks[171641](171685 call size _mt[243] tmpIter[171574]))
          (171680 call _upEndCount _coforallCount[171640] 0 numTasks[171641])
          (483257 'end of statement')
          unknown _indexOfInterest[171647] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171648] "expr temp" "temp"
          (171657 'move' _iterator[171648](171655 call _getIterator tmpIter[171574]))
          Defer
          {
            {
              (171673 call _freeIterator _iterator[171648])
            }
          }
          { scopeless type
            (171662 'move' _indexOfInterest[171647](171659 call iteratorIndex _iterator[171648]))
          }
          ForLoop[171649]
          {
            unknown loc[171666] "coforall index var" "index var" "insert auto destroy"
            (483259 'end of statement')
            (171668 'move' loc[171666] _indexOfInterest[171647])
            (483260 'end of statement' loc[171666])
            const tmp[171580] "const" "temp"
            unknown call_tmp[681109] "expr temp" "maybe param" "maybe type" "temp"
            (681112 'move' call_tmp[681109](171585 '_wide_get_locale' loc[171666]))
            (171582 'move' tmp[171580](171584 'deref' call_tmp[681109]))
            {
              {
                unknown call_tmp[681114] "expr temp" "maybe param" "maybe type" "temp"
                (681117 'move' call_tmp[681114](361438 call here[90435]))
                unknown call_tmp[681121] "expr temp" "maybe param" "maybe type" "temp"
                (681124 'move' call_tmp[681121](171597 call id _mt[243] call_tmp[681114]))
                unknown call_tmp[681126] "expr temp" "maybe param" "maybe type" "temp"
                (681129 'move' call_tmp[681126](171595 call != call_tmp[681121] root[171500]))
                unknown call_tmp[681131] "expr temp" "maybe param" "maybe type" "temp"
                (681134 'move' call_tmp[681131](171593 call _cond_test call_tmp[681126]))
                if call_tmp[681131]
                {
                  unknown call_tmp[681136] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681139 'move' call_tmp[681136](171606 'typeof' localeZeroGlobal[171443]))
                  unknown call_tmp[681143] "maybe param" "maybe type" "temp"
                  (681146 'move' call_tmp[681143](171609 call(171605 call (partial) chpl__deserialize _mt[243] call_tmp[681136]) data[171491]))
                  unknown temp[171603] "dead at end of block" "no auto destroy" "no copy"
                  (544756 'init var' temp[171603] call_tmp[681143])
                  (171612 'end of statement')
                  unknown call_tmp[681148] "maybe param" "maybe type" "temp"
                  (681151 'move' call_tmp[681148](171616 call chpl_get_global_serialize_table id[171449]))
                  const destVoidPtr[171614] "dead at end of block" "const" "insert auto destroy"
                  (544758 'init var' destVoidPtr[171614] call_tmp[681148])
                  (171619 'end of statement')
                  unknown call_tmp[681153] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681156 'move' call_tmp[681153](171626 'typeof' localeZeroGlobal[171443]))
                  unknown call_tmp[681158] "expr temp" "maybe param" "maybe type" "temp"
                  (681161 'move' call_tmp[681158](171625 call c_ptr[205045](?) call_tmp[681153]))
                  unknown call_tmp[681163] "maybe param" "maybe type" "temp"
                  (681166 'move' call_tmp[681163](171623 call _cast call_tmp[681158] destVoidPtr[171614]))
                  const dest[171621] "dead at end of block" "const" "insert auto destroy"
                  (544760 'init var' dest[171621] call_tmp[681163])
                  (171630 'end of statement' data[171491] destVoidPtr[171614])
                  unknown call_tmp[681170] "expr temp" "maybe param" "maybe type" "temp"
                  (681173 'move' call_tmp[681170](171636 call(171633 call (partial) deref _mt[243] dest[171621])))
                  (171631 '=' call_tmp[681170] temp[171603])
                  (483264 'end of statement' dest[171621] temp[171603])
                }
              }
              (171642 call _downEndCount _coforallCount[171640] nil[44])
              (171588 'coforall on block' 0 tmp[171580])
            }
            label _continueLabel[171652]
            _indexOfInterest[171647]
            _iterator[171648]
          }
          label _breakLabel[171653]
          Defer
          {
            {
              (171692 call _endCountFree _coforallCount[171640])
            }
          }
          (171697 call _waitEndCount _coforallCount[171640] 0 numTasks[171641])
        }
        {
          const _coforallCount[171709] "const" "end count" "temp"
          (171765 'move' _coforallCount[171709](171762 call _endCountAlloc 0))
          unknown _indexOfInterest[171716] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171717] "expr temp" "temp"
          (171726 'move' _iterator[171717](171724 call _getIterator tmpIter[171574]))
          Defer
          {
            {
              (171742 call _freeIterator _iterator[171717])
            }
          }
          { scopeless type
            (171731 'move' _indexOfInterest[171716](171728 call iteratorIndex _iterator[171717]))
          }
          ForLoop[171718]
          {
            unknown loc[171735] "coforall index var" "index var" "insert auto destroy"
            (483271 'end of statement')
            (171737 'move' loc[171735] _indexOfInterest[171716])
            (483272 'end of statement' loc[171735])
            (171749 call _upEndCount _coforallCount[171709] 0)
            (483274 'end of statement')
            const tmp[171566] "const" "temp"
            unknown call_tmp[681175] "expr temp" "maybe param" "maybe type" "temp"
            (681178 'move' call_tmp[681175](171563 '_wide_get_locale' loc[171735]))
            (171568 'move' tmp[171566](171564 'deref' call_tmp[681175]))
            {
              {
                unknown call_tmp[681180] "expr temp" "maybe param" "maybe type" "temp"
                (681183 'move' call_tmp[681180](361435 call here[90435]))
                unknown call_tmp[681187] "expr temp" "maybe param" "maybe type" "temp"
                (681190 'move' call_tmp[681187](171508 call id _mt[243] call_tmp[681180]))
                unknown call_tmp[681192] "expr temp" "maybe param" "maybe type" "temp"
                (681195 'move' call_tmp[681192](171512 call != call_tmp[681187] root[171500]))
                unknown call_tmp[681197] "expr temp" "maybe param" "maybe type" "temp"
                (681200 'move' call_tmp[681197](171558 call _cond_test call_tmp[681192]))
                if call_tmp[681197]
                {
                  unknown call_tmp[681202] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681205 'move' call_tmp[681202](171515 'typeof' localeZeroGlobal[171443]))
                  unknown call_tmp[681209] "maybe param" "maybe type" "temp"
                  (681212 'move' call_tmp[681209](171521 call(171516 call (partial) chpl__deserialize _mt[243] call_tmp[681202]) data[171491]))
                  unknown temp[171522] "dead at end of block" "no auto destroy" "no copy"
                  (544762 'init var' temp[171522] call_tmp[681209])
                  (171525 'end of statement')
                  unknown call_tmp[681214] "maybe param" "maybe type" "temp"
                  (681217 'move' call_tmp[681214](171530 call chpl_get_global_serialize_table id[171449]))
                  const destVoidPtr[171531] "dead at end of block" "const" "insert auto destroy"
                  (544764 'init var' destVoidPtr[171531] call_tmp[681214])
                  (171534 'end of statement')
                  unknown call_tmp[681219] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681222 'move' call_tmp[681219](171538 'typeof' localeZeroGlobal[171443]))
                  unknown call_tmp[681224] "expr temp" "maybe param" "maybe type" "temp"
                  (681227 'move' call_tmp[681224](171540 call c_ptr[205045](?) call_tmp[681219]))
                  unknown call_tmp[681229] "maybe param" "maybe type" "temp"
                  (681232 'move' call_tmp[681229](171541 call _cast call_tmp[681224] destVoidPtr[171531]))
                  const dest[171543] "dead at end of block" "const" "insert auto destroy"
                  (544766 'init var' dest[171543] call_tmp[681229])
                  (171546 'end of statement' data[171491] destVoidPtr[171531])
                  unknown call_tmp[681236] "expr temp" "maybe param" "maybe type" "temp"
                  (681239 'move' call_tmp[681236](171554 call(171550 call (partial) deref _mt[243] dest[171543])))
                  (171556 '=' call_tmp[681236] temp[171522])
                  (483277 'end of statement' dest[171543] temp[171522])
                }
              }
              (171711 call _downEndCount _coforallCount[171709] nil[44])
              (171571 'coforall on block' 0 tmp[171566])
            }
            label _continueLabel[171721]
            _indexOfInterest[171716]
            _iterator[171717]
          }
          label _breakLabel[171722]
          Defer
          {
            {
              (171753 call _endCountFree _coforallCount[171709])
            }
          }
          (171758 call _waitEndCount _coforallCount[171709] 0)
        }
      }
    }
    (522415 return _void[55])
  }
  where {
    (748150 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171423])
  }
  function chpl__destroyBroadcastedGlobal[171799](ref arg localeZeroGlobal[171797]:_any[178](?), arg id[171802]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171808] "dead at end of block" "insert auto destroy" "type variable"(171807 'typeof' localeZeroGlobal[171797])
    (544770 'move' globalType[171808](544768 'typeof' localeZeroGlobal[171797]))
    unknown call_tmp[681241] "expr temp" "maybe param" "maybe type" "temp"
    (681244 'move' call_tmp[681241](361441 call here[90435]))
    unknown call_tmp[681248] "maybe param" "maybe type" "temp"
    (681251 'move' call_tmp[681248](171813 call id _mt[243] call_tmp[681241]))
    const root[171816] "dead at end of block" "const" "insert auto destroy"
    (544772 'init var' root[171816] call_tmp[681248])
    (171819 'end of statement')
    {
      unknown tmpIter[171881] "expr temp" "maybe ref" "no copy" "temp"
      (171884 'move' tmpIter[171881] Locales[113656])
      unknown isRngDomArr[172068] "maybe param" "temp"
      unknown tmp[428517] "maybe param" "temp"
      (428528 'move' tmp[428517](172070 call isBoundedRange tmpIter[171881]))
      unknown call_tmp[681253] "expr temp" "maybe param" "maybe type" "temp"
      (681256 'move' call_tmp[681253](428530 call _cond_invalid tmp[428517]))
      if call_tmp[681253]
      {
        (428533 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570669] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570670] "maybe param" "temp"
      unknown call_tmp[681258] "expr temp" "maybe param" "maybe type" "temp"
      (681261 'move' call_tmp[681258](428518 call isTrue tmp[428517]))
      (570675 'move' tmp[570670](570673 call _cond_test call_tmp[681258]))
      if tmp[570670]
      {
        (570680 'move' tmp[570669](570677 '_paramFoldLogical' tmp[570670] 1))
      }
      {
        unknown tmp[428538] "maybe param" "temp"
        (428549 'move' tmp[428538](172073 call isDomain tmpIter[171881]))
        unknown call_tmp[681263] "expr temp" "maybe param" "maybe type" "temp"
        (681266 'move' call_tmp[681263](428551 call _cond_invalid tmp[428538]))
        if call_tmp[681263]
        {
          (428554 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570642] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570643] "maybe param" "temp"
        unknown call_tmp[681268] "expr temp" "maybe param" "maybe type" "temp"
        (681271 'move' call_tmp[681268](428539 call isTrue tmp[428538]))
        (570648 'move' tmp[570643](570646 call _cond_test call_tmp[681268]))
        if tmp[570643]
        {
          (570653 'move' tmp[570642](570650 '_paramFoldLogical' tmp[570643] 1))
        }
        {
          unknown tmp[570655] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[681273] "expr temp" "maybe param" "maybe type" "temp"
          (681276 'move' call_tmp[681273](172076 call isArray tmpIter[171881]))
          (570657 'move' tmp[570655](428543 call isTrue call_tmp[681273]))
          (570662 'move' tmp[570642](570659 '_paramFoldLogical' tmp[570643] tmp[570655]))
        }
        unknown tmp[570682] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570684 'move' tmp[570682](428522 call isTrue tmp[570642]))
        (570689 'move' tmp[570669](570686 '_paramFoldLogical' tmp[570670] tmp[570682]))
      }
      (172083 'move' isRngDomArr[172068] tmp[570669])
      if isRngDomArr[172068]
      {
        const _coforallCount[171940] "const" "end count" "temp"
        (172005 'move' _coforallCount[171940](172002 call _endCountAlloc 0))
        unknown numTasks[171941] "temp"
        (171989 'move' numTasks[171941](171985 call size _mt[243] tmpIter[171881]))
        (171980 call _upEndCount _coforallCount[171940] 0 numTasks[171941])
        (483284 'end of statement')
        unknown _indexOfInterest[171947] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171948] "expr temp" "temp"
        (171957 'move' _iterator[171948](171955 call _getIterator tmpIter[171881]))
        Defer
        {
          {
            (171973 call _freeIterator _iterator[171948])
          }
        }
        { scopeless type
          (171962 'move' _indexOfInterest[171947](171959 call iteratorIndex _iterator[171948]))
        }
        ForLoop[171949]
        {
          unknown loc[171966] "coforall index var" "index var" "insert auto destroy"
          (483286 'end of statement')
          (171968 'move' loc[171966] _indexOfInterest[171947])
          (483287 'end of statement' loc[171966])
          const tmp[171887] "const" "temp"
          unknown call_tmp[681280] "expr temp" "maybe param" "maybe type" "temp"
          (681283 'move' call_tmp[681280](171892 '_wide_get_locale' loc[171966]))
          (171889 'move' tmp[171887](171891 'deref' call_tmp[681280]))
          {
            {
              unknown call_tmp[681285] "expr temp" "maybe param" "maybe type" "temp"
              (681288 'move' call_tmp[681285](361446 call here[90435]))
              unknown call_tmp[681292] "expr temp" "maybe param" "maybe type" "temp"
              (681295 'move' call_tmp[681292](171904 call id _mt[243] call_tmp[681285]))
              unknown call_tmp[681297] "expr temp" "maybe param" "maybe type" "temp"
              (681300 'move' call_tmp[681297](171902 call != call_tmp[681292] root[171816]))
              unknown call_tmp[681302] "expr temp" "maybe param" "maybe type" "temp"
              (681305 'move' call_tmp[681302](171900 call _cond_test call_tmp[681297]))
              if call_tmp[681302]
              {
                unknown call_tmp[681307] "maybe param" "maybe type" "temp"
                (681310 'move' call_tmp[681307](171912 call chpl_get_global_serialize_table id[171802]))
                const voidPtr[171910] "dead at end of block" "const" "insert auto destroy"
                (544774 'init var' voidPtr[171910] call_tmp[681307])
                (171915 'end of statement')
                unknown call_tmp[681312] "expr temp" "maybe param" "maybe type" "temp"
                (681315 'move' call_tmp[681312](171921 call c_ptr[205045](?) globalType[171808]))
                unknown call_tmp[681317] "maybe param" "maybe type" "temp"
                (681320 'move' call_tmp[681317](171919 call _cast call_tmp[681312] voidPtr[171910]))
                unknown ptr[171917] "dead at end of block" "insert auto destroy"
                (544776 'init var' ptr[171917] call_tmp[681317])
                (171925 'end of statement')
                unknown call_tmp[681324] "maybe param" "maybe type" "temp"
                (681327 'move' call_tmp[681324](171932 call(171929 call (partial) deref _mt[243] ptr[171917])))
                unknown temp[171927] "dead at end of block" "no auto destroy" "no copy"
                (544778 'init var' temp[171927] call_tmp[681324])
                (171934 'end of statement' globalType[171808] voidPtr[171910] ptr[171917])
                (171936 call chpl__autoDestroy temp[171927])
                (483292 'end of statement' temp[171927])
              }
            }
            (171942 call _downEndCount _coforallCount[171940] nil[44])
            (171895 'coforall on block' 0 tmp[171887])
          }
          label _continueLabel[171952]
          _indexOfInterest[171947]
          _iterator[171948]
        }
        label _breakLabel[171953]
        Defer
        {
          {
            (171992 call _endCountFree _coforallCount[171940])
          }
        }
        (171997 call _waitEndCount _coforallCount[171940] 0 numTasks[171941])
      }
      {
        const _coforallCount[172009] "const" "end count" "temp"
        (172065 'move' _coforallCount[172009](172062 call _endCountAlloc 0))
        unknown _indexOfInterest[172016] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172017] "expr temp" "temp"
        (172026 'move' _iterator[172017](172024 call _getIterator tmpIter[171881]))
        Defer
        {
          {
            (172042 call _freeIterator _iterator[172017])
          }
        }
        { scopeless type
          (172031 'move' _indexOfInterest[172016](172028 call iteratorIndex _iterator[172017]))
        }
        ForLoop[172018]
        {
          unknown loc[172035] "coforall index var" "index var" "insert auto destroy"
          (483298 'end of statement')
          (172037 'move' loc[172035] _indexOfInterest[172016])
          (483299 'end of statement' loc[172035])
          (172049 call _upEndCount _coforallCount[172009] 0)
          (483301 'end of statement')
          const tmp[171873] "const" "temp"
          unknown call_tmp[681329] "expr temp" "maybe param" "maybe type" "temp"
          (681332 'move' call_tmp[681329](171870 '_wide_get_locale' loc[172035]))
          (171875 'move' tmp[171873](171871 'deref' call_tmp[681329]))
          {
            {
              unknown call_tmp[681334] "expr temp" "maybe param" "maybe type" "temp"
              (681337 'move' call_tmp[681334](361443 call here[90435]))
              unknown call_tmp[681341] "expr temp" "maybe param" "maybe type" "temp"
              (681344 'move' call_tmp[681341](171824 call id _mt[243] call_tmp[681334]))
              unknown call_tmp[681346] "expr temp" "maybe param" "maybe type" "temp"
              (681349 'move' call_tmp[681346](171828 call != call_tmp[681341] root[171816]))
              unknown call_tmp[681351] "expr temp" "maybe param" "maybe type" "temp"
              (681354 'move' call_tmp[681351](171865 call _cond_test call_tmp[681346]))
              if call_tmp[681351]
              {
                unknown call_tmp[681356] "maybe param" "maybe type" "temp"
                (681359 'move' call_tmp[681356](171833 call chpl_get_global_serialize_table id[171802]))
                const voidPtr[171834] "dead at end of block" "const" "insert auto destroy"
                (544780 'init var' voidPtr[171834] call_tmp[681356])
                (171837 'end of statement')
                unknown call_tmp[681361] "expr temp" "maybe param" "maybe type" "temp"
                (681364 'move' call_tmp[681361](171843 call c_ptr[205045](?) globalType[171808]))
                unknown call_tmp[681366] "maybe param" "maybe type" "temp"
                (681369 'move' call_tmp[681366](171844 call _cast call_tmp[681361] voidPtr[171834]))
                unknown ptr[171846] "dead at end of block" "insert auto destroy"
                (544782 'init var' ptr[171846] call_tmp[681366])
                (171849 'end of statement')
                unknown call_tmp[681373] "maybe param" "maybe type" "temp"
                (681376 'move' call_tmp[681373](171855 call(171851 call (partial) deref _mt[243] ptr[171846])))
                unknown temp[171856] "dead at end of block" "no auto destroy" "no copy"
                (544784 'init var' temp[171856] call_tmp[681373])
                (171859 'end of statement' globalType[171808] voidPtr[171834] ptr[171846])
                (171863 call chpl__autoDestroy temp[171856])
                (483305 'end of statement' temp[171856])
              }
            }
            (172011 call _downEndCount _coforallCount[172009] nil[44])
            (171878 'coforall on block' 0 tmp[171873])
          }
          label _continueLabel[172021]
          _indexOfInterest[172016]
          _iterator[172017]
        }
        label _breakLabel[172022]
        Defer
        {
          {
            (172053 call _endCountFree _coforallCount[172009])
          }
        }
        (172058 call _waitEndCount _coforallCount[172009] 0)
      }
    }
    (522417 return _void[55])
  }
  where {
    (748152 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171423])
  }
  (355182 'used modules list'(171416 'use' ChapelLocale[89844])(171420 'use' CPtr[204934]))
}