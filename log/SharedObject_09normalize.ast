AST dump for SharedObject after pass normalize.
Module use list: ChapelError Atomics ChapelBase OwnedObject HaltWrappers 

{
  function chpl__init_SharedObject[415985]() : void[4] "insert line file info" "module init"
  {
    (505620 return _void[55])
  }
  function ReferenceCount[41751].init[41687](arg _mt[41755]:_MT[238], arg this[41753]:ReferenceCount[41751]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[454322] "temporary of super field" "temp"
    (454330 'move' super_tmp[454322](454323 '.v' this[41753] c"super"))
    (454326 call init _mt[243] super_tmp[454322])
    (474170 'end of statement')
    unknown tmp[454293] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491613] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[604416] "expr temp" "maybe param" "maybe type" "temp"
      (604419 'move' call_tmp[604416](454295 '.v' this[41753] c"super"))
      (491617 'move' call_type_tmp[491613](454298 'typeof' call_tmp[604416]))
    }
    (454299 'move' tmp[454293] call_type_tmp[491613])
    unknown call_tmp[604421] "maybe param" "maybe type" "temp"
    (604424 'move' call_tmp[604421](454304 'cast' tmp[454293] this[41753]))
    unknown chpl__thisAsParent[454301] "dead at end of block" "insert auto destroy" "temp"
    (540615 'init var' chpl__thisAsParent[454301] call_tmp[604421] tmp[454293])
    (454307 'setcid' chpl__thisAsParent[454301])
    (474171 'end of statement')
    unknown tmp[454309] "temp"
    unknown call_tmp[604426] "expr temp" "maybe param" "maybe type" "temp"
    (604429 'move' call_tmp[604426](454312 call chpl__atomicType int(64)[13]))
    (454314 'default init var' tmp[454309] call_tmp[604426])
    (454316 '.=' this[41753] c"count" tmp[454309])
    (474172 'end of statement')
    (454321 'setcid' this[41753])
    (474173 'end of statement')
    unknown call_tmp[604433] "expr temp" "maybe param" "maybe type" "temp"
    (604436 'move' call_tmp[604433](357021 call count _mt[243] this[41753]))
    (41705 call(41700 call (partial) write _mt[243] call_tmp[604433]) 1)
    (505395 return _void[55])
  }
  function ReferenceCount[41751].retain[41711](arg _mt[41759]:_MT[238], arg this[41757]:ReferenceCount[41751]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604442] "expr temp" "maybe param" "maybe type" "temp"
    (604445 'move' call_tmp[604442](357026 call count _mt[243] this[41757]))
    (41719 call(41714 call (partial) add _mt[243] call_tmp[604442]) 1)
    (505397 return _void[55])
  }
  function ReferenceCount[41751].release[41726](arg _mt[41763]:_MT[238], arg this[41761]:ReferenceCount[41751]) : _unknown[51] "method" "primary method"
  {
    unknown ret[505401] "RVV" "temp"
    unknown call_tmp[604451] "expr temp" "maybe param" "maybe type" "temp"
    (604454 'move' call_tmp[604451](357031 call count _mt[243] this[41761]))
    unknown call_tmp[604458] "maybe param" "maybe type" "temp"
    (604461 'move' call_tmp[604458](41736 call(41731 call (partial) fetchSub _mt[243] call_tmp[604451]) 1))
    unknown oldValue[41737] "dead at end of block" "insert auto destroy"
    (540617 'init var' oldValue[41737] call_tmp[604458])
    (41740 'end of statement')
    unknown call_tmp[604463] "expr temp" "maybe param" "maybe type" "temp"
    (604466 'move' call_tmp[604463](41744 call - oldValue[41737] 1))
    (505406 'move' ret[505401](505405 'deref' call_tmp[604463]))
    gotoReturn _end_release[505399] _end_release[505399]
    (474176 'end of statement' oldValue[41737])
    label _end_release[505399]
    (505403 return ret[505401])
  }
  type ReferenceCount[41751] val super[355661]:object[22] "super class" unknown count[41681](41679 call chpl__atomicType int(64)[13])
  type unmanaged ReferenceCount?[415435]
  type ReferenceCount?[415432](?)
  type ReferenceCount[370659](?)
  function _shared[32](?).chpl_forwarding_expr2[41781](arg _mt[42956]:_MT[238], arg this[42954]:_shared[32](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[505412] "RVV" "temp"
    (505416 'move' ret[505412](41780 call(370655 call (partial) borrow _mt[243] this[42954])))
    (505414 return ret[505412])
  }
  function _shared[32](?).init[41798](arg _mt[42960]:_MT[238], ref arg this[42958]:_shared[32](?), arg chpl_t[41796]:_any[178](?)) : void[4] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604470] "expr temp" "maybe param" "maybe type" "temp"
    (604473 'move' call_tmp[604470](41803 call isClass chpl_t[41796]))
    unknown call_tmp[604475] "expr temp" "maybe param" "maybe type" "temp"
    (604478 'move' call_tmp[604475](41804 call ! call_tmp[604470]))
    unknown call_tmp[604480] "expr temp" "maybe param" "maybe type" "temp"
    (604483 'move' call_tmp[604480](41827 call _cond_test call_tmp[604475]))
    if call_tmp[604480]
    {
      (41825 call compilerError "shared only works with classes")
    }
    unknown tmp[454333] "temp" "type variable"
    (454335 'move' tmp[454333](41840 call _to_borrowed chpl_t[41796]))
    (454337 'init field' this[42958] c"chpl_t" tmp[454333])
    (474179 'end of statement')
    unknown call_tmp[604485] "expr temp" "maybe param" "maybe type" "temp"
    (604488 'move' call_tmp[604485](454351 '.v' this[42958] c"chpl_t"))
    unknown call_tmp[604490] "maybe param" "maybe type" "temp"
    (604493 'move' call_tmp[604490](454343 'to nilable class' call_tmp[604485]))
    unknown tmp[454341] "temp"
    (454345 'init var' tmp[454341] nil[44] call_tmp[604490])
    (454347 'init field' this[42958] c"chpl_p" tmp[454341])
    (474180 'end of statement')
    unknown tmp[454354] "temp"
    (454357 'init var' tmp[454354] nil[44] unmanaged ReferenceCount?[415435])
    (454359 'init field' this[42958] c"chpl_pn" tmp[454354])
    (474181 'end of statement')
    (505418 return _void[55])
  }
  function _shared[32](?).init[41870](arg _mt[42964]:_MT[238], ref arg this[42962]:_shared[32](?), arg p[41867]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (41891 call compilerError "cannot initialize shared from a borrow")
    (474182 'end of statement')
    unknown call_tmp[604497] "expr temp" "maybe param" "maybe type" "temp"
    (604500 'move' call_tmp[604497](41901 call _to_unmanaged p[41867]))
    (41903 call(41895 call (partial) init _mt[243] this[42962]) call_tmp[604497])
    (505420 return _void[55])
  }
  function _shared[32](?).init[41913](arg _mt[42968]:_MT[238], ref arg this[42966]:_shared[32](?), arg p[41910]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454363] "temp" "type variable"
    unknown call_tmp[604502] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604505 'move' call_tmp[604502](41921 'typeof' p[41910]))
    (454365 'move' tmp[454363](41923 call _to_borrowed call_tmp[604502]))
    (454367 'init field' this[42966] c"chpl_t" tmp[454363])
    (474184 'end of statement')
    unknown rc[41932] "dead at end of block" "insert auto destroy"
    (540619 'init var' rc[41932] nil[44] unmanaged ReferenceCount?[415435])
    (41935 'end of statement')
    unknown call_tmp[604507] "expr temp" "maybe param" "maybe type" "temp"
    (604510 'move' call_tmp[604507](41938 call != p[41910] nil[44]))
    unknown call_tmp[604512] "expr temp" "maybe param" "maybe type" "temp"
    (604515 'move' call_tmp[604512](41950 call _cond_test call_tmp[604507]))
    if call_tmp[604512]
    {
      unknown call_tmp[604517] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604520 'move' call_tmp[604517](747786 'new' ReferenceCount[370659](?)(_chpl_manager = unmanaged[220](?))))
      (41947 call = rc[41932] call_tmp[604517])
      (474185 'end of statement' rc[41932])
    }
    unknown call_tmp[604522] "maybe param" "maybe type" "temp"
    (604525 'move' call_tmp[604522](41962 call _to_borrowed p[41910]))
    unknown call_tmp[604527] "expr temp" "maybe param" "maybe type" "temp"
    (604530 'move' call_tmp[604527](454381 '.v' this[42966] c"chpl_t"))
    unknown call_tmp[604532] "maybe param" "maybe type" "temp"
    (604535 'move' call_tmp[604532](454373 'to nilable class' call_tmp[604527]))
    unknown tmp[454371] "temp"
    (454375 'init var' tmp[454371] call_tmp[604522] call_tmp[604532])
    (454377 'init field' this[42966] c"chpl_p" tmp[454371])
    (474187 'end of statement')
    unknown tmp[454384] "temp"
    (454387 'init var' tmp[454384] rc[41932] unmanaged ReferenceCount?[415435])
    (454389 'init field' this[42966] c"chpl_pn" tmp[454384])
    (474188 'end of statement' rc[41932])
    (505422 return _void[55])
  }
  function _shared[32](?).init[41990](arg _mt[42972]:_MT[238], ref arg this[42970]:_shared[32](?), arg p[41987]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42021 call compilerError "shared only works with classes")
    (474190 'end of statement')
    unknown tmp[454399] "temp" "type variable"
    (454401 'move' tmp[454399](454393 'typeof' p[41987]))
    (454403 'init field' this[42970] c"chpl_t" tmp[454399])
    (474191 'end of statement')
    unknown call_tmp[604537] "expr temp" "maybe param" "maybe type" "temp"
    (604540 'move' call_tmp[604537](454417 '.v' this[42970] c"chpl_t"))
    unknown call_tmp[604542] "maybe param" "maybe type" "temp"
    (604545 'move' call_tmp[604542](454409 'to nilable class' call_tmp[604537]))
    unknown tmp[454407] "temp"
    (454411 'init var' tmp[454407] p[41987] call_tmp[604542])
    (454413 'init field' this[42970] c"chpl_p" tmp[454407])
    (474192 'end of statement')
    val tmp[454421]:unmanaged ReferenceCount?[415435] "temp"
    (454424 'default init var' tmp[454421] unmanaged ReferenceCount?[415435])
    (454426 '.=' this[42970] c"chpl_pn" tmp[454421])
    (474193 'end of statement')
    (505424 return _void[55])
  }
  where {
    unknown tmp[418285] "maybe param" "temp"
    unknown tmp[418306] "maybe param" "temp"
    unknown call_tmp[604547] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604550 'move' call_tmp[604547](454395 'typeof' p[41987]))
    unknown call_tmp[604552] "expr temp" "maybe param" "maybe type" "temp"
    (604555 'move' call_tmp[604552](41995 call isClass call_tmp[604547]))
    (418317 'move' tmp[418306](41997 call == call_tmp[604552] 0))
    unknown call_tmp[604557] "expr temp" "maybe param" "maybe type" "temp"
    (604560 'move' call_tmp[604557](418319 call _cond_invalid tmp[418306]))
    if call_tmp[604557]
    {
      (418322 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554099] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554100] "maybe param" "temp"
    unknown call_tmp[604562] "expr temp" "maybe param" "maybe type" "temp"
    (604565 'move' call_tmp[604562](418307 call isTrue tmp[418306]))
    (554105 'move' tmp[554100](554103 call _cond_test call_tmp[604562]))
    if tmp[554100]
    {
      unknown tmp[554107] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604567] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604570 'move' call_tmp[604567](454397 'typeof' p[41987]))
      unknown call_tmp[604572] "expr temp" "maybe param" "maybe type" "temp"
      (604575 'move' call_tmp[604572](354255 'is_subtype' _shared[32](?) call_tmp[604567]))
      unknown call_tmp[604577] "expr temp" "maybe param" "maybe type" "temp"
      (604580 'move' call_tmp[604577](42005 call == call_tmp[604572] 0))
      (554109 'move' tmp[554107](418310 call isTrue call_tmp[604577]))
      (554114 'move' tmp[554099](554111 '_paramFoldLogical' tmp[554100] tmp[554107]))
    }
    {
      (554119 'move' tmp[554099](554116 '_paramFoldLogical' tmp[554100] 0))
    }
    (418296 'move' tmp[418285] tmp[554099])
    unknown call_tmp[604582] "expr temp" "maybe param" "maybe type" "temp"
    (604585 'move' call_tmp[604582](418298 call _cond_invalid tmp[418285]))
    if call_tmp[604582]
    {
      (418301 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554126] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554127] "maybe param" "temp"
    unknown call_tmp[604587] "expr temp" "maybe param" "maybe type" "temp"
    (604590 'move' call_tmp[604587](418286 call isTrue tmp[418285]))
    (554132 'move' tmp[554127](554130 call _cond_test call_tmp[604587]))
    if tmp[554127]
    {
      unknown tmp[554134] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604592] "expr temp" "maybe param" "maybe type" "temp"
      (604595 'move' call_tmp[604592](42012 call isIterator p[41987]))
      unknown call_tmp[604597] "expr temp" "maybe param" "maybe type" "temp"
      (604600 'move' call_tmp[604597](42014 call == call_tmp[604592] 0))
      (554136 'move' tmp[554134](418289 call isTrue call_tmp[604597]))
      (554141 'move' tmp[554126](554138 '_paramFoldLogical' tmp[554127] tmp[554134]))
    }
    {
      (554146 'move' tmp[554126](554143 '_paramFoldLogical' tmp[554127] 0))
    }
    (748217 call chpl_statementLevelSymbol tmp[554126])
  }
  function _shared[32](?).init[42049](arg _mt[42976]:_MT[238], ref arg this[42974]:_shared[32](?), in arg take[42046]:_owned[30](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604604] "maybe param" "maybe type" "temp"
    (604607 'move' call_tmp[604604](42056 call(42052 call (partial) release _mt[243] take[42046])))
    unknown p[42057] "dead at end of block" "insert auto destroy"
    (540621 'init var' p[42057] call_tmp[604604])
    (42060 'end of statement')
    unknown tmp[454430] "temp" "type variable"
    unknown tmp[554153] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554154] "maybe param" "temp"
    unknown call_tmp[604609] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604612 'move' call_tmp[604609](42067 'typeof' this[42974]))
    unknown call_tmp[604616] "expr temp" "maybe param" "maybe type" "temp"
    (604619 'move' call_tmp[604616](42068 call chpl_t _mt[243] call_tmp[604609]))
    unknown call_tmp[604621] "expr temp" "maybe param" "maybe type" "temp"
    (604624 'move' call_tmp[604621](42072 call == call_tmp[604616] ?[260]))
    (554159 'move' tmp[554154](554157 call _cond_test call_tmp[604621]))
    if tmp[554154]
    {
      unknown tmp[554161] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604626] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604629 'move' call_tmp[604626](42076 'typeof' p[42057]))
      (554163 'move' tmp[554161](42078 call _to_borrowed call_tmp[604626]))
      (554168 'move' tmp[554153](554165 '_paramFoldLogical' tmp[554154] tmp[554161]))
    }
    {
      unknown tmp[554170] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604631] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604634 'move' call_tmp[604631](42080 'typeof' this[42974]))
      (554172 'move' tmp[554170](42081 call chpl_t _mt[243] call_tmp[604631]))
      (554177 'move' tmp[554153](554174 '_paramFoldLogical' tmp[554154] tmp[554170]))
    }
    (454432 'move' tmp[454430] tmp[554153])
    (454434 'init field' this[42974] c"chpl_t" tmp[454430])
    (474194 'end of statement')
    unknown call_tmp[604638] "expr temp" "maybe param" "maybe type" "temp"
    (604641 'move' call_tmp[604638](42093 call isClass p[42057]))
    unknown call_tmp[604643] "expr temp" "maybe param" "maybe type" "temp"
    (604646 'move' call_tmp[604643](42094 call ! call_tmp[604638]))
    unknown call_tmp[604648] "expr temp" "maybe param" "maybe type" "temp"
    (604651 'move' call_tmp[604648](42101 call _cond_test call_tmp[604643]))
    if call_tmp[604648]
    {
      (42099 call compilerError "shared only works with classes")
    }
    unknown rc[42110] "dead at end of block" "insert auto destroy"
    (540623 'init var' rc[42110] nil[44] unmanaged ReferenceCount?[415435])
    (42113 'end of statement')
    unknown call_tmp[604653] "expr temp" "maybe param" "maybe type" "temp"
    (604656 'move' call_tmp[604653](42116 call != p[42057] nil[44]))
    unknown call_tmp[604658] "expr temp" "maybe param" "maybe type" "temp"
    (604661 'move' call_tmp[604658](42128 call _cond_test call_tmp[604653]))
    if call_tmp[604658]
    {
      unknown call_tmp[604663] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604666 'move' call_tmp[604663](747787 'new' ReferenceCount[370659](?)(_chpl_manager = unmanaged[220](?))))
      (42125 call = rc[42110] call_tmp[604663])
      (474196 'end of statement' rc[42110])
    }
    unknown call_tmp[604668] "expr temp" "maybe param" "maybe type" "temp"
    (604671 'move' call_tmp[604668](454448 '.v' this[42974] c"chpl_t"))
    unknown call_tmp[604673] "maybe param" "maybe type" "temp"
    (604676 'move' call_tmp[604673](454440 'to nilable class' call_tmp[604668]))
    unknown tmp[454438] "temp"
    (454442 'init var' tmp[454438] p[42057] call_tmp[604673])
    (454444 'init field' this[42974] c"chpl_p" tmp[454438])
    (474198 'end of statement' p[42057])
    unknown tmp[454451] "temp"
    (454454 'init var' tmp[454451] rc[42110] unmanaged ReferenceCount?[415435])
    (454456 'init field' this[42974] c"chpl_pn" tmp[454451])
    (474200 'end of statement' rc[42110])
    (505426 return _void[55])
  }
  function _shared[32](?).init[42164](arg _mt[42980]:_MT[238], ref arg this[42978]:_shared[32](?), arg _private[42161]:bool[10], arg t[42166]:_any[178](?), ref arg src[42169]:_shared[32](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454460] "temp" "type variable"
    (454462 'move' tmp[454460] t[42166])
    (454464 'init field' this[42978] c"chpl_t" tmp[454460])
    (474202 'end of statement')
    unknown call_tmp[604678] "expr temp" "maybe param" "maybe type" "temp"
    (604681 'move' call_tmp[604678](42193 call _to_unmanaged t[42166]))
    unknown call_tmp[604683] "expr temp" "maybe param" "maybe type" "temp"
    (604686 'move' call_tmp[604683](42195 call _to_nilable call_tmp[604678]))
    unknown call_tmp[604690] "expr temp" "maybe param" "maybe type" "temp"
    (604693 'move' call_tmp[604690](42186 call chpl_p _mt[243] src[42169]))
    unknown call_tmp[604695] "maybe param" "maybe type" "temp"
    (604698 'move' call_tmp[604695](42196 call _cast call_tmp[604683] call_tmp[604690]))
    unknown call_tmp[604700] "expr temp" "maybe param" "maybe type" "temp"
    (604703 'move' call_tmp[604700](454478 '.v' this[42978] c"chpl_t"))
    unknown call_tmp[604705] "maybe param" "maybe type" "temp"
    (604708 'move' call_tmp[604705](454470 'to nilable class' call_tmp[604700]))
    unknown tmp[454468] "temp"
    (454472 'init var' tmp[454468] call_tmp[604695] call_tmp[604705])
    (454474 'init field' this[42978] c"chpl_p" tmp[454468])
    (474203 'end of statement')
    unknown call_tmp[604712] "maybe param" "maybe type" "temp"
    (604715 'move' call_tmp[604712](42206 call chpl_pn _mt[243] src[42169]))
    unknown tmp[454481] "temp"
    (454484 'init var' tmp[454481] call_tmp[604712] unmanaged ReferenceCount?[415435])
    (454486 'init field' this[42978] c"chpl_pn" tmp[454481])
    (474204 'end of statement')
    unknown call_tmp[604719] "expr temp" "maybe param" "maybe type" "temp"
    (604722 'move' call_tmp[604719](42213 call chpl_p _mt[243] src[42169]))
    (42217 call = call_tmp[604719] nil[44])
    (474205 'end of statement')
    unknown call_tmp[604726] "expr temp" "maybe param" "maybe type" "temp"
    (604729 'move' call_tmp[604726](42221 call chpl_pn _mt[243] src[42169]))
    (42225 call = call_tmp[604726] nil[44])
    (505428 return _void[55])
  }
  function _shared[32](?).init[42236](arg _mt[42984]:_MT[238], ref arg this[42982]:_shared[32](?), arg _private[42233]:bool[10], arg t[42238]:_any[178](?), arg p[42240]:_any[178](?), arg pn[42242]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604731] "expr temp" "maybe param" "maybe type" "temp"
    (604734 'move' call_tmp[604731](42249 call _to_unmanaged t[42238]))
    unknown call_tmp[604736] "expr temp" "maybe param" "maybe type" "temp"
    (604739 'move' call_tmp[604736](42251 call _to_nilable call_tmp[604731]))
    unknown call_tmp[604741] "maybe param" "maybe type" "temp"
    (604744 'move' call_tmp[604741](42252 call _cast call_tmp[604736] p[42240]))
    unknown ptr[42254] "dead at end of block" "insert auto destroy"
    (540625 'init var' ptr[42254] call_tmp[604741])
    (42257 'end of statement')
    unknown count[42260] "dead at end of block" "insert auto destroy"
    (540627 'init var' count[42260] pn[42242])
    (42263 'end of statement')
    unknown call_tmp[604746] "expr temp" "maybe param" "maybe type" "temp"
    (604749 'move' call_tmp[604746](42266 call != ptr[42254] nil[44]))
    unknown call_tmp[604751] "expr temp" "maybe param" "maybe type" "temp"
    (604754 'move' call_tmp[604751](42284 call _cond_test call_tmp[604746]))
    if call_tmp[604751]
    {
      unknown call_tmp[604756] "expr temp" "maybe param" "maybe type" "temp"
      (604759 'move' call_tmp[604756](42269 call postfix! count[42260]))
      (42275 call(42271 call (partial) retain _mt[243] call_tmp[604756]))
      (474207 'end of statement' count[42260])
    }
    {
      (42280 call = count[42260] nil[44])
      (474209 'end of statement' count[42260])
    }
    unknown tmp[454490] "temp" "type variable"
    (454492 'move' tmp[454490] t[42238])
    (454494 'init field' this[42982] c"chpl_t" tmp[454490])
    (474211 'end of statement')
    unknown call_tmp[604763] "expr temp" "maybe param" "maybe type" "temp"
    (604766 'move' call_tmp[604763](454508 '.v' this[42982] c"chpl_t"))
    unknown call_tmp[604768] "maybe param" "maybe type" "temp"
    (604771 'move' call_tmp[604768](454500 'to nilable class' call_tmp[604763]))
    unknown tmp[454498] "temp"
    (454502 'init var' tmp[454498] ptr[42254] call_tmp[604768])
    (454504 'init field' this[42982] c"chpl_p" tmp[454498])
    (474212 'end of statement' ptr[42254])
    unknown tmp[454511] "temp"
    (454514 'init var' tmp[454511] count[42260] unmanaged ReferenceCount?[415435])
    (454516 'init field' this[42982] c"chpl_pn" tmp[454511])
    (474214 'end of statement' count[42260])
    (505430 return _void[55])
  }
  function _shared[32](?).init=[42320](arg _mt[42988]:_MT[238], ref arg this[42986]:_shared[32](?), in arg take[42317]:_owned[30](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418327] "maybe param" "temp"
    unknown call_tmp[604773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604776 'move' call_tmp[604773](42324 'typeof' this[42986]))
    (418338 'move' tmp[418327](42326 call isNonNilableClass call_tmp[604773]))
    unknown call_tmp[604778] "expr temp" "maybe param" "maybe type" "temp"
    (604781 'move' call_tmp[604778](418340 call _cond_invalid tmp[418327]))
    if call_tmp[604778]
    {
      (418343 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554184] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554185] "maybe param" "temp"
    unknown call_tmp[604783] "expr temp" "maybe param" "maybe type" "temp"
    (604786 'move' call_tmp[604783](418328 call isTrue tmp[418327]))
    (554190 'move' tmp[554185](554188 call _cond_test call_tmp[604783]))
    if tmp[554185]
    {
      unknown tmp[554192] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604788] "expr temp" "maybe param" "maybe type" "temp"
      (604791 'move' call_tmp[604788](42330 call isNilableClass take[42317]))
      (554194 'move' tmp[554192](418331 call isTrue call_tmp[604788]))
      (554199 'move' tmp[554184](554196 '_paramFoldLogical' tmp[554185] tmp[554192]))
    }
    {
      (554204 'move' tmp[554184](554201 '_paramFoldLogical' tmp[554185] 0))
    }
    unknown call_tmp[604793] "expr temp" "maybe param" "maybe type" "temp"
    (604796 'move' call_tmp[604793](42356 call _cond_test tmp[554184]))
    if call_tmp[604793]
    {
      (42354 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (42368 call(42363 call (partial) init _mt[243] this[42986]) take[42317])
    (505432 return _void[55])
  }
  function _shared[32](?).init=[42378](arg _mt[42992]:_MT[238], ref arg this[42990]:_shared[32](?), const  ref arg src[42375]:_shared[32](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[418348] "maybe param" "temp"
    unknown call_tmp[604800] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604803 'move' call_tmp[604800](42382 'typeof' this[42990]))
    (418359 'move' tmp[418348](42384 call isNonNilableClass call_tmp[604800]))
    unknown call_tmp[604805] "expr temp" "maybe param" "maybe type" "temp"
    (604808 'move' call_tmp[604805](418361 call _cond_invalid tmp[418348]))
    if call_tmp[604805]
    {
      (418364 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554211] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554212] "maybe param" "temp"
    unknown call_tmp[604810] "expr temp" "maybe param" "maybe type" "temp"
    (604813 'move' call_tmp[604810](418349 call isTrue tmp[418348]))
    (554217 'move' tmp[554212](554215 call _cond_test call_tmp[604810]))
    if tmp[554212]
    {
      unknown tmp[554219] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604815] "expr temp" "maybe param" "maybe type" "temp"
      (604818 'move' call_tmp[604815](42388 call isNilableClass src[42375]))
      (554221 'move' tmp[554219](418352 call isTrue call_tmp[604815]))
      (554226 'move' tmp[554211](554223 '_paramFoldLogical' tmp[554212] tmp[554219]))
    }
    {
      (554231 'move' tmp[554211](554228 '_paramFoldLogical' tmp[554212] 0))
    }
    unknown call_tmp[604820] "expr temp" "maybe param" "maybe type" "temp"
    (604823 'move' call_tmp[604820](42396 call _cond_test tmp[554211]))
    if call_tmp[604820]
    {
      (42394 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    unknown call_tmp[604825] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604828 'move' call_tmp[604825](42409 'typeof' this[42990]))
    unknown call_tmp[604832] "expr temp" "maybe param" "maybe type" "temp"
    (604835 'move' call_tmp[604832](42410 call chpl_t _mt[243] call_tmp[604825]))
    unknown call_tmp[604839] "expr temp" "maybe param" "maybe type" "temp"
    (604842 'move' call_tmp[604839](42404 call chpl_t _mt[243] src[42375]))
    unknown call_tmp[604844] "expr temp" "maybe param" "maybe type" "temp"
    (604847 'move' call_tmp[604844](354256 'is_coercible' call_tmp[604832] call_tmp[604839]))
    unknown call_tmp[604849] "expr temp" "maybe param" "maybe type" "temp"
    (604852 'move' call_tmp[604849](42415 call == call_tmp[604844] 0))
    unknown call_tmp[604854] "expr temp" "maybe param" "maybe type" "temp"
    (604857 'move' call_tmp[604854](42434 call _cond_test call_tmp[604849]))
    if call_tmp[604854]
    {
      unknown call_tmp[604859] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604862 'move' call_tmp[604859](42421 'typeof' src[42375]))
      unknown call_tmp[604864] "expr temp" "maybe param" "maybe type" "temp"
      (604867 'move' call_tmp[604864](42423 call _cast string[26] call_tmp[604859]))
      unknown call_tmp[604869] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604872 'move' call_tmp[604869](42427 'typeof' this[42990]))
      unknown call_tmp[604874] "expr temp" "maybe param" "maybe type" "temp"
      (604877 'move' call_tmp[604874](42429 call _cast string[26] call_tmp[604869]))
      (42432 call compilerError "cannot coerce '" call_tmp[604864] "' to '" call_tmp[604874] "' in initialization")
    }
    unknown tmp[454520] "temp" "type variable"
    unknown call_tmp[604879] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604882 'move' call_tmp[604879](42444 'typeof' this[42990]))
    (454522 'move' tmp[454520](42445 call chpl_t _mt[243] call_tmp[604879]))
    (454524 'init field' this[42990] c"chpl_t" tmp[454520])
    (474222 'end of statement')
    unknown call_tmp[604888] "maybe param" "maybe type" "temp"
    (604891 'move' call_tmp[604888](42456 call chpl_p _mt[243] src[42375]))
    unknown call_tmp[604893] "expr temp" "maybe param" "maybe type" "temp"
    (604896 'move' call_tmp[604893](454538 '.v' this[42990] c"chpl_t"))
    unknown call_tmp[604898] "maybe param" "maybe type" "temp"
    (604901 'move' call_tmp[604898](454530 'to nilable class' call_tmp[604893]))
    unknown tmp[454528] "temp"
    (454532 'init var' tmp[454528] call_tmp[604888] call_tmp[604898])
    (454534 'init field' this[42990] c"chpl_p" tmp[454528])
    (474223 'end of statement')
    unknown call_tmp[604905] "maybe param" "maybe type" "temp"
    (604908 'move' call_tmp[604905](42467 call chpl_pn _mt[243] src[42375]))
    unknown tmp[454541] "temp"
    (454544 'init var' tmp[454541] call_tmp[604905] unmanaged ReferenceCount?[415435])
    (454546 'init field' this[42990] c"chpl_pn" tmp[454541])
    (474224 'end of statement')
    unknown call_tmp[604912] "expr temp" "maybe param" "maybe type" "temp"
    (604915 'move' call_tmp[604912](42481 call chpl_pn _mt[243] this[42990]))
    unknown call_tmp[604917] "expr temp" "maybe param" "maybe type" "temp"
    (604920 'move' call_tmp[604917](42485 call != call_tmp[604912] nil[44]))
    unknown call_tmp[604922] "expr temp" "maybe param" "maybe type" "temp"
    (604925 'move' call_tmp[604922](42499 call _cond_test call_tmp[604917]))
    if call_tmp[604922]
    {
      unknown call_tmp[604929] "expr temp" "maybe param" "maybe type" "temp"
      (604932 'move' call_tmp[604929](42488 call chpl_pn _mt[243] this[42990]))
      unknown call_tmp[604934] "expr temp" "maybe param" "maybe type" "temp"
      (604937 'move' call_tmp[604934](42491 call postfix! call_tmp[604929]))
      (42497 call(42493 call (partial) retain _mt[243] call_tmp[604934]))
    }
    (505434 return _void[55])
  }
  function _shared[32](?).init=[42512](arg _mt[42996]:_MT[238], ref arg this[42994]:_shared[32](?), arg src[42509]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42533 call compilerError "cannot create a shared variable from a borrowed class instance")
    (474226 'end of statement')
    unknown tmp[454550] "temp" "type variable"
    (454552 'move' tmp[454550] int(64)[13])
    (454554 'init field' this[42994] c"chpl_t" tmp[454550])
    (474227 'end of statement')
    unknown tmp[454559] "temp"
    unknown call_tmp[604941] "expr temp" "maybe param" "maybe type" "temp"
    (604944 'move' call_tmp[604941](454569 '.v' this[42994] c"chpl_t"))
    unknown call_tmp[604946] "expr temp" "maybe param" "maybe type" "temp"
    (604949 'move' call_tmp[604946](454561 'to nilable class' call_tmp[604941]))
    (454563 'default init var' tmp[454559] call_tmp[604946])
    (454565 '.=' this[42994] c"chpl_p" tmp[454559])
    (474228 'end of statement')
    val tmp[454572]:unmanaged ReferenceCount?[415435] "temp"
    (454575 'default init var' tmp[454572] unmanaged ReferenceCount?[415435])
    (454577 '.=' this[42994] c"chpl_pn" tmp[454572])
    (474229 'end of statement')
    (505436 return _void[55])
  }
  function _shared[32](?).init=[42552](arg _mt[43000]:_MT[238], ref arg this[42998]:_shared[32](?), arg src[42549]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42573 call compilerError "cannot create a shared variable from an unmanaged class instance")
    (474230 'end of statement')
    unknown tmp[454581] "temp" "type variable"
    (454583 'move' tmp[454581] int(64)[13])
    (454585 'init field' this[42998] c"chpl_t" tmp[454581])
    (474231 'end of statement')
    unknown tmp[454590] "temp"
    unknown call_tmp[604951] "expr temp" "maybe param" "maybe type" "temp"
    (604954 'move' call_tmp[604951](454600 '.v' this[42998] c"chpl_t"))
    unknown call_tmp[604956] "expr temp" "maybe param" "maybe type" "temp"
    (604959 'move' call_tmp[604956](454592 'to nilable class' call_tmp[604951]))
    (454594 'default init var' tmp[454590] call_tmp[604956])
    (454596 '.=' this[42998] c"chpl_p" tmp[454590])
    (474232 'end of statement')
    val tmp[454603]:unmanaged ReferenceCount?[415435] "temp"
    (454606 'default init var' tmp[454603] unmanaged ReferenceCount?[415435])
    (454608 '.=' this[42998] c"chpl_pn" tmp[454603])
    (474233 'end of statement')
    (505438 return _void[55])
  }
  function _shared[32](?).init=[42592](arg _mt[43004]:_MT[238], ref arg this[43002]:_shared[32](?), arg src[42589]:_nilType[42]) : void[4] "leaves this nil" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604963] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604966 'move' call_tmp[604963](42599 'typeof' this[43002]))
    unknown call_tmp[604970] "expr temp" "maybe param" "maybe type" "temp"
    (604973 'move' call_tmp[604970](42600 call chpl_t _mt[243] call_tmp[604963]))
    (42604 call(42595 call (partial) init _mt[243] this[43002]) call_tmp[604970])
    (474234 'end of statement')
    unknown call_tmp[604977] "expr temp" "maybe param" "maybe type" "temp"
    (604980 'move' call_tmp[604977](370716 call chpl_t _mt[243] this[43002]))
    unknown call_tmp[604982] "expr temp" "maybe param" "maybe type" "temp"
    (604985 'move' call_tmp[604982](42610 call isNonNilableClass call_tmp[604977]))
    unknown call_tmp[604987] "expr temp" "maybe param" "maybe type" "temp"
    (604990 'move' call_tmp[604987](42632 call _cond_test call_tmp[604982]))
    if call_tmp[604987]
    {
      (42630 call compilerError "Assigning non-nilable shared to nil")
    }
    (505440 return _void[55])
  }
  function _shared[32](?).doClear[42641](arg _mt[43008]:_MT[238], ref arg this[43006]:_shared[32](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418369] "maybe param" "temp"
    unknown call_tmp[604994] "expr temp" "maybe param" "maybe type" "temp"
    (604997 'move' call_tmp[604994](370721 call chpl_p _mt[243] this[43006]))
    (418380 'move' tmp[418369](42645 call != call_tmp[604994] nil[44]))
    unknown call_tmp[604999] "expr temp" "maybe param" "maybe type" "temp"
    (605002 'move' call_tmp[604999](418382 call _cond_invalid tmp[418369]))
    if call_tmp[604999]
    {
      (418385 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554238] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554239] "maybe param" "temp"
    unknown call_tmp[605004] "expr temp" "maybe param" "maybe type" "temp"
    (605007 'move' call_tmp[605004](418370 call isTrue tmp[418369]))
    (554244 'move' tmp[554239](554242 call _cond_test call_tmp[605004]))
    if tmp[554239]
    {
      unknown tmp[554246] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605011] "expr temp" "maybe param" "maybe type" "temp"
      (605014 'move' call_tmp[605011](370726 call chpl_pn _mt[243] this[43006]))
      unknown call_tmp[605016] "expr temp" "maybe param" "maybe type" "temp"
      (605019 'move' call_tmp[605016](42649 call != call_tmp[605011] nil[44]))
      (554248 'move' tmp[554246](418373 call isTrue call_tmp[605016]))
      (554253 'move' tmp[554238](554250 '_paramFoldLogical' tmp[554239] tmp[554246]))
    }
    {
      (554258 'move' tmp[554238](554255 '_paramFoldLogical' tmp[554239] 0))
    }
    unknown call_tmp[605021] "expr temp" "maybe param" "maybe type" "temp"
    (605024 'move' call_tmp[605021](42688 call _cond_test tmp[554238]))
    if call_tmp[605021]
    {
      unknown call_tmp[605028] "expr temp" "maybe param" "maybe type" "temp"
      (605031 'move' call_tmp[605028](370731 call chpl_pn _mt[243] this[43006]))
      unknown call_tmp[605033] "expr temp" "maybe param" "maybe type" "temp"
      (605036 'move' call_tmp[605033](42654 call postfix! call_tmp[605028]))
      unknown call_tmp[605040] "maybe param" "maybe type" "temp"
      (605043 'move' call_tmp[605040](42660 call(42656 call (partial) release _mt[243] call_tmp[605033])))
      unknown count[42661] "dead at end of block" "insert auto destroy"
      (540629 'init var' count[42661] call_tmp[605040])
      (42664 'end of statement')
      unknown call_tmp[605045] "expr temp" "maybe param" "maybe type" "temp"
      (605048 'move' call_tmp[605045](42668 call == count[42661] 0))
      unknown call_tmp[605050] "expr temp" "maybe param" "maybe type" "temp"
      (605053 'move' call_tmp[605050](42684 call _cond_test call_tmp[605045]))
      if call_tmp[605050]
      {
        unknown call_tmp[605057] "expr temp" "maybe param" "maybe type" "temp"
        (605060 'move' call_tmp[605057](370737 call chpl_p _mt[243] this[43006]))
        unknown call_tmp[605062] "expr temp" "maybe param" "maybe type" "temp"
        (605065 'move' call_tmp[605062](42673 call _to_unmanaged call_tmp[605057]))
        (42675 call chpl__delete call_tmp[605062])
        (474237 'end of statement')
        unknown call_tmp[605069] "expr temp" "maybe param" "maybe type" "temp"
        (605072 'move' call_tmp[605069](370742 call chpl_pn _mt[243] this[43006]))
        (42681 call chpl__delete call_tmp[605069])
      }
    }
    unknown call_tmp[605076] "expr temp" "maybe param" "maybe type" "temp"
    (605079 'move' call_tmp[605076](370747 call chpl_p _mt[243] this[43006]))
    (42695 call = call_tmp[605076] nil[44])
    (474239 'end of statement')
    unknown call_tmp[605083] "expr temp" "maybe param" "maybe type" "temp"
    (605086 'move' call_tmp[605083](370752 call chpl_pn _mt[243] this[43006]))
    (42700 call = call_tmp[605083] nil[44])
    (505442 return _void[55])
  }
  function _shared[32](?).create[42709](arg _mt[43012]:_MT[238], arg this[43010]:_shared[32](?), arg source[42707]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[605088] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605091 'move' call_tmp[605088](42731 'typeof' source[42707]))
    unknown call_tmp[605093] "expr temp" "maybe param" "maybe type" "temp"
    (605096 'move' call_tmp[605093](42733 call _cast string[26] call_tmp[605088]))
    (42735 call compilerError "cannot create a 'shared' from " call_tmp[605093])
    (505444 return _void[55])
  }
  function _shared[32](?).create[42746](arg _mt[43016]:_MT[238], arg this[43014]:_shared[32](?), in arg take[42743]:_owned[30](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505448] "RVV" "temp"
    unknown result[42750] "dead at end of block" "insert auto destroy"
    (540631 'init var' result[42750] take[42743] _shared[32](?))
    (42753 'end of statement')
    (505453 'move' ret[505448](505452 'deref' result[42750]))
    gotoReturn _end_create[505446] _end_create[505446]
    (474242 'end of statement' result[42750])
    label _end_create[505446]
    (505450 return ret[505448])
  }
  function _shared[32](?).create[42766](arg _mt[43020]:_MT[238], arg this[43018]:_shared[32](?), in arg src[42763]:_shared[32](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505459] "RVV" "temp"
    (505464 'move' ret[505459](505463 'deref' src[42763]))
    (505461 return ret[505459])
  }
  function _shared[32](?).create[42780](arg _mt[43024]:_MT[238], arg this[43022]:_shared[32](?), arg p[42777]:unmanaged[220](?)) : _unknown[51] "inline" "method" "primary method" "unsafe"
  {
    unknown ret[505468] "RVV" "temp"
    unknown result[42787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[605098] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605101 'move' call_tmp[605098](42783 'typeof' p[42777]))
    unknown call_tmp[605103] "expr temp" "maybe param" "maybe type" "temp"
    (605106 'move' call_tmp[605103](42785 call _cast _shared[32](?) call_tmp[605098]))
    (540633 'default init var' result[42787] call_tmp[605103])
    (42790 'end of statement')
    (42798 call(42793 call (partial) retain _mt[243] result[42787]) p[42777])
    (474245 'end of statement' result[42787])
    (505473 'move' ret[505468](505472 'deref' result[42787]))
    gotoReturn _end_create[505466] _end_create[505466]
    (474247 'end of statement' result[42787])
    label _end_create[505466]
    (505470 return ret[505468])
  }
  function _shared[32](?).deinit[42807](arg _mt[43028]:_MT[238], arg this[43026]:_shared[32](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605112] "expr temp" "maybe param" "maybe type" "temp"
    (605115 'move' call_tmp[605112](370768 call chpl_p _mt[243] this[43026]))
    unknown call_tmp[605117] "expr temp" "maybe param" "maybe type" "temp"
    (605120 'move' call_tmp[605117](42812 call isClass call_tmp[605112]))
    unknown call_tmp[605122] "expr temp" "maybe param" "maybe type" "temp"
    (605125 'move' call_tmp[605122](42818 call _cond_test call_tmp[605117]))
    if call_tmp[605122]
    {
      (42815 call(370772 call (partial) doClear _mt[243] this[43026]))
    }
    (505477 return _void[55])
  }
  function _shared[32](?).retain[42831](arg _mt[43032]:_MT[238], ref arg this[43030]:_shared[32](?), arg newPtr[42828]:unmanaged[220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605131] "expr temp" "maybe param" "maybe type" "temp"
    (605134 'move' call_tmp[605131](370778 call chpl_t _mt[243] this[43030]))
    unknown call_tmp[605136] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605139 'move' call_tmp[605136](42835 'typeof' newPtr[42828]))
    unknown call_tmp[605141] "expr temp" "maybe param" "maybe type" "temp"
    (605144 'move' call_tmp[605141](354257 'is_coercible' call_tmp[605131] call_tmp[605136]))
    unknown call_tmp[605146] "expr temp" "maybe param" "maybe type" "temp"
    (605149 'move' call_tmp[605146](42839 call ! call_tmp[605141]))
    unknown call_tmp[605151] "expr temp" "maybe param" "maybe type" "temp"
    (605154 'move' call_tmp[605151](42871 call _cond_test call_tmp[605146]))
    if call_tmp[605151]
    {
      unknown call_tmp[605156] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (605159 'move' call_tmp[605156](42844 'typeof' newPtr[42828]))
      unknown call_tmp[605161] "expr temp" "maybe param" "maybe type" "temp"
      (605164 'move' call_tmp[605161](42846 call _cast string[26] call_tmp[605156]))
      unknown call_tmp[605166] "expr temp" "maybe param" "maybe type" "temp"
      (605169 'move' call_tmp[605166](42848 call + "cannot retain '" call_tmp[605161]))
      unknown call_tmp[605171] "expr temp" "maybe param" "maybe type" "temp"
      (605174 'move' call_tmp[605171](42851 call + call_tmp[605166] "' "))
      unknown call_tmp[605176] "expr temp" "maybe param" "maybe type" "temp"
      (605179 'move' call_tmp[605176](42854 call + call_tmp[605171] "(expected '"))
      unknown call_tmp[605183] "expr temp" "maybe param" "maybe type" "temp"
      (605186 'move' call_tmp[605183](370784 call chpl_t _mt[243] this[43030]))
      unknown call_tmp[605188] "expr temp" "maybe param" "maybe type" "temp"
      (605191 'move' call_tmp[605188](42859 call _to_unmanaged call_tmp[605183]))
      unknown call_tmp[605193] "expr temp" "maybe param" "maybe type" "temp"
      (605196 'move' call_tmp[605193](42861 call _cast string[26] call_tmp[605188]))
      unknown call_tmp[605198] "expr temp" "maybe param" "maybe type" "temp"
      (605201 'move' call_tmp[605198](42863 call + call_tmp[605176] call_tmp[605193]))
      unknown call_tmp[605203] "expr temp" "maybe param" "maybe type" "temp"
      (605206 'move' call_tmp[605203](42866 call + call_tmp[605198] "')"))
      (42869 call compilerError call_tmp[605203])
    }
    (42879 call(370788 call (partial) doClear _mt[243] this[43030]))
    (474251 'end of statement')
    unknown call_tmp[605212] "expr temp" "maybe param" "maybe type" "temp"
    (605215 'move' call_tmp[605212](42882 call chpl_p _mt[243] this[43030]))
    (42886 call = call_tmp[605212] newPtr[42828])
    (474252 'end of statement')
    unknown call_tmp[605217] "expr temp" "maybe param" "maybe type" "temp"
    (605220 'move' call_tmp[605217](42891 call != newPtr[42828] nil[44]))
    unknown call_tmp[605222] "expr temp" "maybe param" "maybe type" "temp"
    (605225 'move' call_tmp[605222](42907 call _cond_test call_tmp[605217]))
    if call_tmp[605222]
    {
      unknown call_tmp[605229] "expr temp" "maybe param" "maybe type" "temp"
      (605232 'move' call_tmp[605229](42894 call chpl_pn _mt[243] this[43030]))
      unknown call_tmp[605234] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605237 'move' call_tmp[605234](747788 'new' ReferenceCount[370659](?)(_chpl_manager = unmanaged[220](?))))
      (42903 call = call_tmp[605229] call_tmp[605234])
    }
    (505479 return _void[55])
  }
  function _shared[32](?).clear[42915](arg _mt[43036]:_MT[238], ref arg this[43034]:_shared[32](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    (42919 call(370795 call (partial) doClear _mt[243] this[43034]))
    (505481 return _void[55])
  }
  function _shared[32](?).borrow[42926](arg _mt[43040]:_MT[238], arg this[43038]:_shared[32](?)) : _unknown[51] "nil from this" "method" "primary method"
  {
    unknown ret[505485] "RVV" "temp"
    unknown call_tmp[605243] "expr temp" "maybe param" "maybe type" "temp"
    (605246 'move' call_tmp[605243](370800 call chpl_t _mt[243] this[43038]))
    unknown call_tmp[605248] "expr temp" "maybe param" "maybe type" "temp"
    (605251 'move' call_tmp[605248](42931 call _to_nilable call_tmp[605243]))
    unknown call_tmp[605255] "expr temp" "maybe param" "maybe type" "temp"
    (605258 'move' call_tmp[605255](370805 call chpl_t _mt[243] this[43038]))
    unknown call_tmp[605260] "expr temp" "maybe param" "maybe type" "temp"
    (605263 'move' call_tmp[605260](42933 call == call_tmp[605248] call_tmp[605255]))
    unknown call_tmp[605265] "expr temp" "maybe param" "maybe type" "temp"
    (605268 'move' call_tmp[605265](42945 call _cond_test call_tmp[605260]))
    if call_tmp[605265]
    {
      unknown call_tmp[605272] "expr temp" "maybe param" "maybe type" "temp"
      (605275 'move' call_tmp[605272](370810 call chpl_p _mt[243] this[43038]))
      (505490 'move' ret[505485](505489 'deref' call_tmp[605272]))
      gotoReturn _end_borrow[505483] _end_borrow[505483]
    }
    {
      unknown call_tmp[605279] "expr temp" "maybe param" "maybe type" "temp"
      (605282 'move' call_tmp[605279](370815 call chpl_p _mt[243] this[43038]))
      unknown call_tmp[605284] "expr temp" "maybe param" "maybe type" "temp"
      (605287 'move' call_tmp[605284](42940 call postfix! call_tmp[605279]))
      (505495 'move' ret[505485](505494 'deref' call_tmp[605284]))
      gotoReturn _end_borrow[505483] _end_borrow[505483]
    }
    label _end_borrow[505483]
    (505487 return ret[505485])
  }
  type _shared[32](?) unknown chpl_t[41767] "no doc" "type variable" unknown chpl_p[41774] "no doc" "owned"(41773 'to nilable class' chpl_t[41767]) val chpl_pn[41790]:unmanaged ReferenceCount?[415435] "no doc" "owned" unmanaged ReferenceCount?[415435] forwarding ( )
  type shared[415442](?)
  type shared?[415438](?)
  function =[43049](ref arg lhs[43046]:_shared[32](?), arg rhs[43052]:_shared[32](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605291] "expr temp" "maybe param" "maybe type" "temp"
    (605294 'move' call_tmp[605291](43068 call chpl_pn _mt[243] rhs[43052]))
    unknown call_tmp[605296] "expr temp" "maybe param" "maybe type" "temp"
    (605299 'move' call_tmp[605296](43072 call != call_tmp[605291] nil[44]))
    unknown call_tmp[605301] "expr temp" "maybe param" "maybe type" "temp"
    (605304 'move' call_tmp[605301](43086 call _cond_test call_tmp[605296]))
    if call_tmp[605301]
    {
      unknown call_tmp[605308] "expr temp" "maybe param" "maybe type" "temp"
      (605311 'move' call_tmp[605308](43075 call chpl_pn _mt[243] rhs[43052]))
      unknown call_tmp[605313] "expr temp" "maybe param" "maybe type" "temp"
      (605316 'move' call_tmp[605313](43078 call postfix! call_tmp[605308]))
      (43084 call(43080 call (partial) retain _mt[243] call_tmp[605313]))
    }
    unknown call_tmp[605322] "maybe param" "maybe type" "temp"
    (605325 'move' call_tmp[605322](43093 call chpl_p _mt[243] rhs[43052]))
    const chpl_p_tmp[43096] "dead at end of block" "const" "insert auto destroy"
    (540635 'init var' chpl_p_tmp[43096] call_tmp[605322])
    (43099 'end of statement')
    unknown call_tmp[605329] "maybe param" "maybe type" "temp"
    (605332 'move' call_tmp[605329](43101 call chpl_pn _mt[243] rhs[43052]))
    const chpl_pn_tmp[43104] "dead at end of block" "const" "insert auto destroy"
    (540637 'init var' chpl_pn_tmp[43104] call_tmp[605329])
    (43107 'end of statement')
    (43115 call(43111 call (partial) doClear _mt[243] lhs[43046]))
    (474258 'end of statement')
    unknown call_tmp[605338] "expr temp" "maybe param" "maybe type" "temp"
    (605341 'move' call_tmp[605338](43118 call chpl_p _mt[243] lhs[43046]))
    (43122 call = call_tmp[605338] chpl_p_tmp[43096])
    (474259 'end of statement' chpl_p_tmp[43096])
    unknown call_tmp[605345] "expr temp" "maybe param" "maybe type" "temp"
    (605348 'move' call_tmp[605345](43126 call chpl_pn _mt[243] lhs[43046]))
    (43130 call = call_tmp[605345] chpl_pn_tmp[43104])
    (474261 'end of statement' chpl_pn_tmp[43104])
    (505499 return _void[55])
  }
  where {
    unknown tmp[418390] "maybe param" "temp"
    (418401 'move' tmp[418390](43058 call isNonNilableClass lhs[43046]))
    unknown call_tmp[605350] "expr temp" "maybe param" "maybe type" "temp"
    (605353 'move' call_tmp[605350](418403 call _cond_invalid tmp[418390]))
    if call_tmp[605350]
    {
      (418406 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554265] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554266] "maybe param" "temp"
    unknown call_tmp[605355] "expr temp" "maybe param" "maybe type" "temp"
    (605358 'move' call_tmp[605355](418391 call isTrue tmp[418390]))
    (554271 'move' tmp[554266](554269 call _cond_test call_tmp[605355]))
    if tmp[554266]
    {
      unknown tmp[554273] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605360] "expr temp" "maybe param" "maybe type" "temp"
      (605363 'move' call_tmp[605360](43062 call isNilableClass rhs[43052]))
      (554275 'move' tmp[554273](418394 call isTrue call_tmp[605360]))
      (554280 'move' tmp[554265](554277 '_paramFoldLogical' tmp[554266] tmp[554273]))
    }
    {
      (554285 'move' tmp[554265](554282 '_paramFoldLogical' tmp[554266] 0))
    }
    (43065 call ! tmp[554265])
  }
  function =[43142](ref arg lhs[43139]:_shared[32](?), in arg rhs[43145]:_owned[30](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605369] "expr temp" "maybe param" "maybe type" "temp"
    (605372 'move' call_tmp[605369](43169 call(43165 call (partial) release _mt[243] rhs[43145])))
    (43171 call(43161 call (partial) retain _mt[243] lhs[43139]) call_tmp[605369])
    (505501 return _void[55])
  }
  where {
    unknown tmp[418411] "maybe param" "temp"
    (418422 'move' tmp[418411](43151 call isNonNilableClass lhs[43139]))
    unknown call_tmp[605374] "expr temp" "maybe param" "maybe type" "temp"
    (605377 'move' call_tmp[605374](418424 call _cond_invalid tmp[418411]))
    if call_tmp[605374]
    {
      (418427 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554292] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554293] "maybe param" "temp"
    unknown call_tmp[605379] "expr temp" "maybe param" "maybe type" "temp"
    (605382 'move' call_tmp[605379](418412 call isTrue tmp[418411]))
    (554298 'move' tmp[554293](554296 call _cond_test call_tmp[605379]))
    if tmp[554293]
    {
      unknown tmp[554300] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605384] "expr temp" "maybe param" "maybe type" "temp"
      (605387 'move' call_tmp[605384](43155 call isNilableClass rhs[43145]))
      (554302 'move' tmp[554300](418415 call isTrue call_tmp[605384]))
      (554307 'move' tmp[554292](554304 '_paramFoldLogical' tmp[554293] tmp[554300]))
    }
    {
      (554312 'move' tmp[554292](554309 '_paramFoldLogical' tmp[554293] 0))
    }
    (43158 call ! tmp[554292])
  }
  function =[43183](ref arg lhs[43180]:_shared[32](?), arg rhs[43186]:_nilType[42]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (43200 call(43196 call (partial) clear _mt[243] lhs[43180]))
    (505503 return _void[55])
  }
  where {
    unknown call_tmp[605391] "expr temp" "maybe param" "maybe type" "temp"
    (605394 'move' call_tmp[605391](43192 call isNonNilableClass lhs[43180]))
    (43193 call ! call_tmp[605391])
  }
  function <=>[43212](ref arg lhs[43209]:_shared[32](?), ref arg rhs[43215]:_shared[32](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[605398] "expr temp" "maybe param" "maybe type" "temp"
    (605401 'move' call_tmp[605398](43219 call chpl_pn _mt[243] lhs[43209]))
    unknown call_tmp[605405] "expr temp" "maybe param" "maybe type" "temp"
    (605408 'move' call_tmp[605405](43223 call chpl_pn _mt[243] rhs[43215]))
    (43226 call <=> call_tmp[605398] call_tmp[605405])
    (474265 'end of statement')
    unknown call_tmp[605412] "expr temp" "maybe param" "maybe type" "temp"
    (605415 'move' call_tmp[605412](43231 call chpl_p _mt[243] lhs[43209]))
    unknown call_tmp[605419] "expr temp" "maybe param" "maybe type" "temp"
    (605422 'move' call_tmp[605419](43235 call chpl_p _mt[243] rhs[43215]))
    (43238 call <=> call_tmp[605412] call_tmp[605419])
    (505505 return _void[55])
  }
  function chpl__autoDestroy[43249](ref arg x[43246]:_shared[32](?)) : _unknown[51] "auto destroy fn" "no doc" "no return value for void"
  {
    unknown call_tmp[605424] "expr temp" "maybe param" "maybe type" "temp"
    (605427 'move' call_tmp[605424](43256 'deref' x[43246]))
    (43257 'call destructor' call_tmp[605424])
    (505507 return _void[55])
  }
  function _shared[32](?).readWriteThis[43267](arg _mt[43272]:_MT[238], arg this[43269]:_shared[32](?) :
  _shared[32](?), arg f[43265]:_any[178](?)) : _unknown[51] throws "method" "no doc" "no return value for void"
  {
    unknown call_tmp[605431] "expr temp" "maybe param" "maybe type" "temp"
    (605434 'move' call_tmp[605431](43276 call chpl_p _mt[243] this[43269]))
    (43279 call <~> f[43265] call_tmp[605431])
    (505509 return _void[55])
  }
  function _cast[43291](arg t[43288]:borrowed[211](?), const  ref arg x[43294]:_shared[32](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505513] "RVV" "temp"
    unknown call_tmp[605438] "expr temp" "maybe param" "maybe type" "temp"
    (605441 'move' call_tmp[605438](43312 call(43308 call (partial) borrow _mt[243] x[43294])))
    (505518 'move' ret[505513](505517 'deref' call_tmp[605438]))
    (505515 return ret[505513])
  }
  where {
    unknown call_tmp[605445] "expr temp" "maybe param" "maybe type" "temp"
    (605448 'move' call_tmp[605445](43301 call chpl_t _mt[243] x[43294]))
    (354258 'is_subtype' call_tmp[605445] t[43288])
  }
  function _cast[43328](arg t[43325]:shared?[415438](?), in arg x[43333]:shared[415442](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505522] "RVV" "temp"
    unknown call_tmp[605452] "expr temp" "maybe param" "maybe type" "temp"
    (605455 'move' call_tmp[605452](43356 call chpl_t _mt[243] t[43325]))
    unknown call_tmp[605457] "expr temp" "maybe param" "maybe type" "temp"
    (605460 'move' call_tmp[605457](43360 call _to_nilable call_tmp[605452]))
    unknown call_tmp[605462] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605465 'move' call_tmp[605462](747789 'new' _shared[32](?) 1 call_tmp[605457] x[43333]))
    (505527 'move' ret[505522](505526 'deref' call_tmp[605462]))
    (505524 return ret[505522])
  }
  where {
    unknown call_tmp[605469] "expr temp" "maybe param" "maybe type" "temp"
    (605472 'move' call_tmp[605469](43344 call chpl_t _mt[243] t[43325]))
    unknown call_tmp[605474] "expr temp" "maybe param" "maybe type" "temp"
    (605477 'move' call_tmp[605474](43348 call _to_nonnil call_tmp[605469]))
    unknown call_tmp[605481] "expr temp" "maybe param" "maybe type" "temp"
    (605484 'move' call_tmp[605481](43338 call chpl_t _mt[243] x[43333]))
    (354259 'is_subtype' call_tmp[605474] call_tmp[605481])
  }
  function _cast[43378](arg t[43375]:shared?[415438](?), in arg x[43384]:shared?[415438](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505531] "RVV" "temp"
    unknown call_tmp[605488] "expr temp" "maybe param" "maybe type" "temp"
    (605491 'move' call_tmp[605488](43403 call chpl_t _mt[243] t[43375]))
    unknown call_tmp[605493] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605496 'move' call_tmp[605493](747790 'new' _shared[32](?) 1 call_tmp[605488] x[43384]))
    (505536 'move' ret[505531](505535 'deref' call_tmp[605493]))
    (505533 return ret[505531])
  }
  where {
    unknown call_tmp[605500] "expr temp" "maybe param" "maybe type" "temp"
    (605503 'move' call_tmp[605500](43394 call chpl_t _mt[243] t[43375]))
    unknown call_tmp[605507] "expr temp" "maybe param" "maybe type" "temp"
    (605510 'move' call_tmp[605507](43389 call chpl_t _mt[243] x[43384]))
    (354260 'is_subtype' call_tmp[605500] call_tmp[605507])
  }
  function _cast[43422](arg t[43419]:shared[415442](?), in arg x[43427]:shared[415442](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505540] "RVV" "temp"
    unknown call_tmp[605514] "expr temp" "maybe param" "maybe type" "temp"
    (605517 'move' call_tmp[605514](43446 call chpl_t _mt[243] t[43419]))
    unknown call_tmp[605519] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605522 'move' call_tmp[605519](747791 'new' _shared[32](?) 1 call_tmp[605514] x[43427]))
    (505545 'move' ret[505540](505544 'deref' call_tmp[605519]))
    (505542 return ret[505540])
  }
  where {
    unknown call_tmp[605526] "expr temp" "maybe param" "maybe type" "temp"
    (605529 'move' call_tmp[605526](43437 call chpl_t _mt[243] t[43419]))
    unknown call_tmp[605533] "expr temp" "maybe param" "maybe type" "temp"
    (605536 'move' call_tmp[605533](43432 call chpl_t _mt[243] x[43427]))
    (354261 'is_subtype' call_tmp[605526] call_tmp[605533])
  }
  function _cast[43465](arg t[43462]:shared[415442](?), in arg x[43471]:shared?[415438](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505549] "RVV" "temp"
    unknown call_tmp[605540] "expr temp" "maybe param" "maybe type" "temp"
    (605543 'move' call_tmp[605540](43489 call chpl_p _mt[243] x[43471]))
    unknown call_tmp[605545] "expr temp" "maybe param" "maybe type" "temp"
    (605548 'move' call_tmp[605545](43493 call == call_tmp[605540] nil[44]))
    unknown call_tmp[605550] "expr temp" "maybe param" "maybe type" "temp"
    (605553 'move' call_tmp[605550](43504 call _cond_test call_tmp[605545]))
    if call_tmp[605550]
    {
      unknown call_tmp[605555] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605558 'move' call_tmp[605555](747792 'new' NilClassError[368342](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605560] "expr temp" "maybe param" "maybe type" "temp"
      (605563 'move' call_tmp[605560](468091 call chpl_fix_thrown_error call_tmp[605555]))
      (43501 'throw' call_tmp[605560])
    }
    unknown call_tmp[605567] "expr temp" "maybe param" "maybe type" "temp"
    (605570 'move' call_tmp[605567](43515 call chpl_t _mt[243] t[43462]))
    unknown call_tmp[605572] "expr temp" "maybe param" "maybe type" "temp"
    (605575 'move' call_tmp[605572](43519 call _to_nonnil call_tmp[605567]))
    unknown call_tmp[605577] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605580 'move' call_tmp[605577](747793 'new' _shared[32](?) 1 call_tmp[605572] x[43471]))
    (505554 'move' ret[505549](505553 'deref' call_tmp[605577]))
    (505551 return ret[505549])
  }
  where {
    unknown call_tmp[605584] "expr temp" "maybe param" "maybe type" "temp"
    (605587 'move' call_tmp[605584](43484 call chpl_t _mt[243] t[43462]))
    unknown call_tmp[605591] "expr temp" "maybe param" "maybe type" "temp"
    (605594 'move' call_tmp[605591](43477 call chpl_t _mt[243] x[43471]))
    unknown call_tmp[605596] "expr temp" "maybe param" "maybe type" "temp"
    (605599 'move' call_tmp[605596](43481 call _to_nonnil call_tmp[605591]))
    (354262 'is_subtype' call_tmp[605584] call_tmp[605596])
  }
  function _cast[43535](arg t[43532]:shared[415442](?), const  ref arg x[43541]:shared?[415438](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505558] "RVV" "temp"
    unknown call_tmp[605603] "expr temp" "maybe param" "maybe type" "temp"
    (605606 'move' call_tmp[605603](43559 call chpl_p _mt[243] x[43541]))
    unknown call_tmp[605608] "expr temp" "maybe param" "maybe type" "temp"
    (605611 'move' call_tmp[605608](43563 call == call_tmp[605603] nil[44]))
    unknown call_tmp[605613] "expr temp" "maybe param" "maybe type" "temp"
    (605616 'move' call_tmp[605613](43574 call _cond_test call_tmp[605608]))
    if call_tmp[605613]
    {
      unknown call_tmp[605618] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605621 'move' call_tmp[605618](747794 'new' NilClassError[368342](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605623] "expr temp" "maybe param" "maybe type" "temp"
      (605626 'move' call_tmp[605623](468093 call chpl_fix_thrown_error call_tmp[605618]))
      (43571 'throw' call_tmp[605623])
    }
    unknown call_tmp[605630] "expr temp" "maybe param" "maybe type" "temp"
    (605633 'move' call_tmp[605630](43586 call chpl_t _mt[243] t[43532]))
    unknown call_tmp[605635] "expr temp" "maybe param" "maybe type" "temp"
    (605638 'move' call_tmp[605635](43590 call _to_unmanaged call_tmp[605630]))
    unknown call_tmp[605640] "expr temp" "maybe param" "maybe type" "temp"
    (605643 'move' call_tmp[605640](43592 call _to_nonnil call_tmp[605635]))
    unknown call_tmp[605647] "expr temp" "maybe param" "maybe type" "temp"
    (605650 'move' call_tmp[605647](43580 call chpl_p _mt[243] x[43541]))
    unknown call_tmp[605652] "maybe param" "maybe type" "temp"
    (605655 'move' call_tmp[605652](43593 call _cast call_tmp[605640] call_tmp[605647]))
    unknown p[43596] "dead at end of block" "insert auto destroy"
    (540639 'init var' p[43596] call_tmp[605652])
    (43599 'end of statement')
    unknown call_tmp[605657] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605660 'move' call_tmp[605657](43606 'typeof' p[43596]))
    unknown call_tmp[605662] "expr temp" "maybe param" "maybe type" "temp"
    (605665 'move' call_tmp[605662](43608 call _to_borrowed call_tmp[605657]))
    unknown call_tmp[605669] "expr temp" "maybe param" "maybe type" "temp"
    (605672 'move' call_tmp[605669](43611 call chpl_pn _mt[243] x[43541]))
    unknown call_tmp[605674] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605677 'move' call_tmp[605674](747795 'new' _shared[32](?) 1 call_tmp[605662] p[43596] call_tmp[605669]))
    (505563 'move' ret[505558](505562 'deref' call_tmp[605674]))
    gotoReturn _end__cast[505556] _end__cast[505556]
    (474276 'end of statement' p[43596] p[43596])
    label _end__cast[505556]
    (505560 return ret[505558])
  }
  where {
    unknown call_tmp[605681] "expr temp" "maybe param" "maybe type" "temp"
    (605684 'move' call_tmp[605681](43552 call chpl_t _mt[243] x[43541]))
    unknown call_tmp[605686] "expr temp" "maybe param" "maybe type" "temp"
    (605689 'move' call_tmp[605686](43556 call _to_nonnil call_tmp[605681]))
    unknown call_tmp[605693] "expr temp" "maybe param" "maybe type" "temp"
    (605696 'move' call_tmp[605693](43546 call chpl_t _mt[243] t[43532]))
    (354263 'is_proper_subtype' call_tmp[605686] call_tmp[605693])
  }
  function _cast[43628](arg t[43625]:shared[415442](?), const  ref arg x[43633]:shared[415442](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505569] "RVV" "temp"
    unknown call_tmp[605700] "expr temp" "maybe param" "maybe type" "temp"
    (605703 'move' call_tmp[605700](43654 call chpl_t _mt[243] t[43625]))
    unknown call_tmp[605705] "expr temp" "maybe param" "maybe type" "temp"
    (605708 'move' call_tmp[605705](43658 call _to_unmanaged call_tmp[605700]))
    unknown call_tmp[605710] "expr temp" "maybe param" "maybe type" "temp"
    (605713 'move' call_tmp[605710](43660 call _to_nonnil call_tmp[605705]))
    unknown call_tmp[605717] "expr temp" "maybe param" "maybe type" "temp"
    (605720 'move' call_tmp[605717](43648 call chpl_p _mt[243] x[43633]))
    unknown call_tmp[605722] "maybe param" "maybe type" "temp"
    (605725 'move' call_tmp[605722](43661 call _cast call_tmp[605710] call_tmp[605717]))
    unknown p[43664] "dead at end of block" "insert auto destroy"
    (540641 'init var' p[43664] call_tmp[605722])
    (43667 'end of statement')
    unknown call_tmp[605727] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605730 'move' call_tmp[605727](43675 'typeof' p[43664]))
    unknown call_tmp[605732] "expr temp" "maybe param" "maybe type" "temp"
    (605735 'move' call_tmp[605732](43677 call _to_borrowed call_tmp[605727]))
    unknown call_tmp[605739] "expr temp" "maybe param" "maybe type" "temp"
    (605742 'move' call_tmp[605739](43680 call chpl_pn _mt[243] x[43633]))
    unknown call_tmp[605744] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605747 'move' call_tmp[605744](747796 'new' _shared[32](?) 1 call_tmp[605732] p[43664] call_tmp[605739]))
    (505574 'move' ret[505569](505573 'deref' call_tmp[605744]))
    gotoReturn _end__cast[505567] _end__cast[505567]
    (474279 'end of statement' p[43664] p[43664])
    label _end__cast[505567]
    (505571 return ret[505569])
  }
  where {
    unknown call_tmp[605751] "expr temp" "maybe param" "maybe type" "temp"
    (605754 'move' call_tmp[605751](43643 call chpl_t _mt[243] x[43633]))
    unknown call_tmp[605758] "expr temp" "maybe param" "maybe type" "temp"
    (605761 'move' call_tmp[605758](43638 call chpl_t _mt[243] t[43625]))
    (354264 'is_proper_subtype' call_tmp[605751] call_tmp[605758])
  }
  function _cast[43698](arg t[43695]:shared?[415438](?), const  ref arg x[43704]:shared?[415438](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505580] "RVV" "temp"
    unknown call_tmp[605765] "expr temp" "maybe param" "maybe type" "temp"
    (605768 'move' call_tmp[605765](43725 call chpl_t _mt[243] t[43695]))
    unknown call_tmp[605770] "expr temp" "maybe param" "maybe type" "temp"
    (605773 'move' call_tmp[605770](43729 call _to_unmanaged call_tmp[605765]))
    unknown call_tmp[605775] "expr temp" "maybe param" "maybe type" "temp"
    (605778 'move' call_tmp[605775](43731 call _to_nilable call_tmp[605770]))
    unknown call_tmp[605782] "expr temp" "maybe param" "maybe type" "temp"
    (605785 'move' call_tmp[605782](43719 call chpl_p _mt[243] x[43704]))
    unknown call_tmp[605787] "maybe param" "maybe type" "temp"
    (605790 'move' call_tmp[605787](43732 call _cast call_tmp[605775] call_tmp[605782]))
    unknown p[43734] "dead at end of block" "insert auto destroy"
    (540643 'init var' p[43734] call_tmp[605787])
    (43737 'end of statement')
    unknown call_tmp[605792] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605795 'move' call_tmp[605792](43745 'typeof' p[43734]))
    unknown call_tmp[605797] "expr temp" "maybe param" "maybe type" "temp"
    (605800 'move' call_tmp[605797](43747 call _to_borrowed call_tmp[605792]))
    unknown call_tmp[605804] "expr temp" "maybe param" "maybe type" "temp"
    (605807 'move' call_tmp[605804](43750 call chpl_pn _mt[243] x[43704]))
    unknown call_tmp[605809] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605812 'move' call_tmp[605809](747797 'new' _shared[32](?) 1 call_tmp[605797] p[43734] call_tmp[605804]))
    (505585 'move' ret[505580](505584 'deref' call_tmp[605809]))
    gotoReturn _end__cast[505578] _end__cast[505578]
    (474282 'end of statement' p[43734] p[43734])
    label _end__cast[505578]
    (505582 return ret[505580])
  }
  where {
    unknown call_tmp[605816] "expr temp" "maybe param" "maybe type" "temp"
    (605819 'move' call_tmp[605816](43714 call chpl_t _mt[243] x[43704]))
    unknown call_tmp[605823] "expr temp" "maybe param" "maybe type" "temp"
    (605826 'move' call_tmp[605823](43709 call chpl_t _mt[243] t[43695]))
    (354265 'is_proper_subtype' call_tmp[605816] call_tmp[605823])
  }
  function _cast[43768](arg t[43765]:shared?[415438](?), const  ref arg x[43773]:shared[415442](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505591] "RVV" "temp"
    unknown call_tmp[605830] "expr temp" "maybe param" "maybe type" "temp"
    (605833 'move' call_tmp[605830](43797 call chpl_t _mt[243] t[43765]))
    unknown call_tmp[605835] "expr temp" "maybe param" "maybe type" "temp"
    (605838 'move' call_tmp[605835](43801 call _to_unmanaged call_tmp[605830]))
    unknown call_tmp[605840] "expr temp" "maybe param" "maybe type" "temp"
    (605843 'move' call_tmp[605840](43803 call _to_nilable call_tmp[605835]))
    unknown call_tmp[605847] "expr temp" "maybe param" "maybe type" "temp"
    (605850 'move' call_tmp[605847](43791 call chpl_p _mt[243] x[43773]))
    unknown call_tmp[605852] "maybe param" "maybe type" "temp"
    (605855 'move' call_tmp[605852](43804 call _cast call_tmp[605840] call_tmp[605847]))
    unknown p[43806] "dead at end of block" "insert auto destroy"
    (540645 'init var' p[43806] call_tmp[605852])
    (43809 'end of statement')
    unknown call_tmp[605857] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605860 'move' call_tmp[605857](43817 'typeof' p[43806]))
    unknown call_tmp[605862] "expr temp" "maybe param" "maybe type" "temp"
    (605865 'move' call_tmp[605862](43819 call _to_borrowed call_tmp[605857]))
    unknown call_tmp[605869] "expr temp" "maybe param" "maybe type" "temp"
    (605872 'move' call_tmp[605869](43822 call chpl_pn _mt[243] x[43773]))
    unknown call_tmp[605874] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605877 'move' call_tmp[605874](747798 'new' _shared[32](?) 1 call_tmp[605862] p[43806] call_tmp[605869]))
    (505596 'move' ret[505591](505595 'deref' call_tmp[605874]))
    gotoReturn _end__cast[505589] _end__cast[505589]
    (474285 'end of statement' p[43806] p[43806])
    label _end__cast[505589]
    (505593 return ret[505591])
  }
  where {
    unknown call_tmp[605881] "expr temp" "maybe param" "maybe type" "temp"
    (605884 'move' call_tmp[605881](43784 call chpl_t _mt[243] x[43773]))
    unknown call_tmp[605886] "expr temp" "maybe param" "maybe type" "temp"
    (605889 'move' call_tmp[605886](43788 call _to_nilable call_tmp[605881]))
    unknown call_tmp[605893] "expr temp" "maybe param" "maybe type" "temp"
    (605896 'move' call_tmp[605893](43778 call chpl_t _mt[243] t[43765]))
    (354266 'is_proper_subtype' call_tmp[605886] call_tmp[605893])
  }
  function _cast[43837](arg t[43834]:_shared[32](?), arg x[43840]:_nilType[42]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505602] "RVV" "temp"
    unknown call_tmp[605900] "expr temp" "maybe param" "maybe type" "temp"
    (605903 'move' call_tmp[605900](43845 call chpl_t _mt[243] t[43834]))
    unknown call_tmp[605905] "expr temp" "maybe param" "maybe type" "temp"
    (605908 'move' call_tmp[605905](43849 call isNonNilableClass call_tmp[605900]))
    unknown call_tmp[605910] "expr temp" "maybe param" "maybe type" "temp"
    (605913 'move' call_tmp[605910](43871 call _cond_test call_tmp[605905]))
    if call_tmp[605910]
    {
      (43869 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[43878] "dead at end of block" "insert auto destroy"
    (540647 'default init var' tmp[43878] t[43834])
    (43881 'end of statement')
    (505607 'move' ret[505602](505606 'deref' tmp[43878]))
    gotoReturn _end__cast[505600] _end__cast[505600]
    (474289 'end of statement' tmp[43878])
    label _end__cast[505600]
    (505604 return ret[505602])
  }
  function postfix![43893](arg x[43890]:_shared[32](?)) : _unknown[51] "always propagate line file info" "inline" "no doc"
  {
    unknown ret[505613] "RVV" "temp"
    unknown tmp[418432] "maybe param" "temp"
    (418443 'move' tmp[418432] 1)
    unknown call_tmp[605915] "expr temp" "maybe param" "maybe type" "temp"
    (605918 'move' call_tmp[605915](418445 call _cond_invalid tmp[418432]))
    if call_tmp[605915]
    {
      (418448 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554319] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554320] "maybe param" "temp"
    unknown call_tmp[605920] "expr temp" "maybe param" "maybe type" "temp"
    (605923 'move' call_tmp[605920](418433 call isTrue tmp[418432]))
    (554325 'move' tmp[554320](554323 call _cond_test call_tmp[605920]))
    if tmp[554320]
    {
      (554330 'move' tmp[554319](554327 '_paramFoldLogical' tmp[554320] 1))
    }
    {
      unknown tmp[554332] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (554334 'move' tmp[554332](418437 call isTrue enablePostfixBangChecks[324]))
      (554339 'move' tmp[554319](554336 '_paramFoldLogical' tmp[554320] tmp[554332]))
    }
    unknown call_tmp[605925] "expr temp" "maybe param" "maybe type" "temp"
    (605928 'move' call_tmp[605925](43942 call _cond_test tmp[554319]))
    if call_tmp[605925]
    {
      unknown call_tmp[605932] "expr temp" "maybe param" "maybe type" "temp"
      (605935 'move' call_tmp[605932](43905 call chpl_t _mt[243] x[43890]))
      unknown call_tmp[605937] "expr temp" "maybe param" "maybe type" "temp"
      (605940 'move' call_tmp[605937](43909 call _to_nilable call_tmp[605932]))
      unknown call_tmp[605944] "expr temp" "maybe param" "maybe type" "temp"
      (605947 'move' call_tmp[605944](43911 call chpl_t _mt[243] x[43890]))
      unknown call_tmp[605949] "expr temp" "maybe param" "maybe type" "temp"
      (605952 'move' call_tmp[605949](43914 call == call_tmp[605937] call_tmp[605944]))
      unknown call_tmp[605954] "expr temp" "maybe param" "maybe type" "temp"
      (605957 'move' call_tmp[605954](43937 call _cond_test call_tmp[605949]))
      if call_tmp[605954]
      {
        unknown call_tmp[605961] "expr temp" "maybe param" "maybe type" "temp"
        (605964 'move' call_tmp[605961](43917 call chpl_p _mt[243] x[43890]))
        unknown call_tmp[605966] "expr temp" "maybe param" "maybe type" "temp"
        (605969 'move' call_tmp[605966](43921 call == call_tmp[605961] nil[44]))
        unknown call_tmp[605971] "expr temp" "maybe param" "maybe type" "temp"
        (605974 'move' call_tmp[605971](43932 call _cond_test call_tmp[605966]))
        if call_tmp[605971]
        {
          (43929 call nilCheckHalt module=[255] HaltWrappers[209915] "argument to ! is nil")
          (357131 'referenced modules list' HaltWrappers[209915])
        }
      }
    }
    unknown call_tmp[605978] "expr temp" "maybe param" "maybe type" "temp"
    (605981 'move' call_tmp[605978](43948 call chpl_p _mt[243] x[43890]))
    unknown call_tmp[605983] "expr temp" "maybe param" "maybe type" "temp"
    (605986 'move' call_tmp[605983](43952 call _to_nonnil call_tmp[605978]))
    (505618 'move' ret[505613](505617 'deref' call_tmp[605983]))
    (505615 return ret[505613])
    (355090 'used modules list'(43896 'import' HaltWrappers[209915]))
  }
  (355085 'used modules list'(41669 'use' ChapelError[167857])(41671 'use' Atomics[43961])(41672 'use' ChapelBase[307])(41675 'use' OwnedObject[39583]))
}