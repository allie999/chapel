AST dump for SharedObject after pass normalize.
Module use list: ChapelError Atomics ChapelBase OwnedObject HaltWrappers 

{
  function chpl__init_SharedObject[415970]() : void[4] "insert line file info" "module init"
  {
    (505602 return _void[55])
  }
  function ReferenceCount[41754].init[41690](arg _mt[41758]:_MT[238], arg this[41756]:ReferenceCount[41754]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[454307] "temporary of super field" "temp"
    (454315 'move' super_tmp[454307](454308 '.v' this[41756] c"super"))
    (454311 call init _mt[243] super_tmp[454307])
    (474157 'end of statement')
    unknown tmp[454278] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491595] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[604407] "expr temp" "maybe param" "maybe type" "temp"
      (604410 'move' call_tmp[604407](454280 '.v' this[41756] c"super"))
      (491599 'move' call_type_tmp[491595](454283 'typeof' call_tmp[604407]))
    }
    (454284 'move' tmp[454278] call_type_tmp[491595])
    unknown call_tmp[604412] "maybe param" "maybe type" "temp"
    (604415 'move' call_tmp[604412](454289 'cast' tmp[454278] this[41756]))
    unknown chpl__thisAsParent[454286] "dead at end of block" "insert auto destroy" "temp"
    (540606 'init var' chpl__thisAsParent[454286] call_tmp[604412] tmp[454278])
    (454292 'setcid' chpl__thisAsParent[454286])
    (474158 'end of statement')
    unknown tmp[454294] "temp"
    unknown call_tmp[604417] "expr temp" "maybe param" "maybe type" "temp"
    (604420 'move' call_tmp[604417](454297 call chpl__atomicType int(64)[13]))
    (454299 'default init var' tmp[454294] call_tmp[604417])
    (454301 '.=' this[41756] c"count" tmp[454294])
    (474159 'end of statement')
    (454306 'setcid' this[41756])
    (474160 'end of statement')
    unknown call_tmp[604424] "expr temp" "maybe param" "maybe type" "temp"
    (604427 'move' call_tmp[604424](357007 call count _mt[243] this[41756]))
    (41708 call(41703 call (partial) write _mt[243] call_tmp[604424]) 1)
    (505377 return _void[55])
  }
  function ReferenceCount[41754].retain[41714](arg _mt[41762]:_MT[238], arg this[41760]:ReferenceCount[41754]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604433] "expr temp" "maybe param" "maybe type" "temp"
    (604436 'move' call_tmp[604433](357012 call count _mt[243] this[41760]))
    (41722 call(41717 call (partial) add _mt[243] call_tmp[604433]) 1)
    (505379 return _void[55])
  }
  function ReferenceCount[41754].release[41729](arg _mt[41766]:_MT[238], arg this[41764]:ReferenceCount[41754]) : _unknown[51] "method" "primary method"
  {
    unknown ret[505383] "RVV" "temp"
    unknown call_tmp[604442] "expr temp" "maybe param" "maybe type" "temp"
    (604445 'move' call_tmp[604442](357017 call count _mt[243] this[41764]))
    unknown call_tmp[604449] "maybe param" "maybe type" "temp"
    (604452 'move' call_tmp[604449](41739 call(41734 call (partial) fetchSub _mt[243] call_tmp[604442]) 1))
    unknown oldValue[41740] "dead at end of block" "insert auto destroy"
    (540608 'init var' oldValue[41740] call_tmp[604449])
    (41743 'end of statement')
    unknown call_tmp[604454] "expr temp" "maybe param" "maybe type" "temp"
    (604457 'move' call_tmp[604454](41747 call - oldValue[41740] 1))
    (505388 'move' ret[505383](505387 'deref' call_tmp[604454]))
    gotoReturn _end_release[505381] _end_release[505381]
    (474163 'end of statement' oldValue[41740])
    label _end_release[505381]
    (505385 return ret[505383])
  }
  type ReferenceCount[41754] val super[355647]:object[22] "super class" unknown count[41684](41682 call chpl__atomicType int(64)[13])
  type unmanaged ReferenceCount?[415420]
  type ReferenceCount?[415417](?)
  type ReferenceCount[370645](?)
  function _shared[32](?).chpl_forwarding_expr2[41784](arg _mt[42959]:_MT[238], arg this[42957]:_shared[32](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[505394] "RVV" "temp"
    (505398 'move' ret[505394](41783 call(370641 call (partial) borrow _mt[243] this[42957])))
    (505396 return ret[505394])
  }
  function _shared[32](?).init[41801](arg _mt[42963]:_MT[238], ref arg this[42961]:_shared[32](?), arg chpl_t[41799]:_any[178](?)) : void[4] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604461] "expr temp" "maybe param" "maybe type" "temp"
    (604464 'move' call_tmp[604461](41806 call isClass chpl_t[41799]))
    unknown call_tmp[604466] "expr temp" "maybe param" "maybe type" "temp"
    (604469 'move' call_tmp[604466](41807 call ! call_tmp[604461]))
    unknown call_tmp[604471] "expr temp" "maybe param" "maybe type" "temp"
    (604474 'move' call_tmp[604471](41830 call _cond_test call_tmp[604466]))
    if call_tmp[604471]
    {
      (41828 call compilerError "shared only works with classes")
    }
    unknown tmp[454318] "temp" "type variable"
    (454320 'move' tmp[454318](41843 call _to_borrowed chpl_t[41799]))
    (454322 'init field' this[42961] c"chpl_t" tmp[454318])
    (474166 'end of statement')
    unknown call_tmp[604476] "expr temp" "maybe param" "maybe type" "temp"
    (604479 'move' call_tmp[604476](454336 '.v' this[42961] c"chpl_t"))
    unknown call_tmp[604481] "maybe param" "maybe type" "temp"
    (604484 'move' call_tmp[604481](454328 'to nilable class' call_tmp[604476]))
    unknown tmp[454326] "temp"
    (454330 'init var' tmp[454326] nil[44] call_tmp[604481])
    (454332 'init field' this[42961] c"chpl_p" tmp[454326])
    (474167 'end of statement')
    unknown tmp[454339] "temp"
    (454342 'init var' tmp[454339] nil[44] unmanaged ReferenceCount?[415420])
    (454344 'init field' this[42961] c"chpl_pn" tmp[454339])
    (474168 'end of statement')
    (505400 return _void[55])
  }
  function _shared[32](?).init[41873](arg _mt[42967]:_MT[238], ref arg this[42965]:_shared[32](?), arg p[41870]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (41894 call compilerError "cannot initialize shared from a borrow")
    (474169 'end of statement')
    unknown call_tmp[604488] "expr temp" "maybe param" "maybe type" "temp"
    (604491 'move' call_tmp[604488](41904 call _to_unmanaged p[41870]))
    (41906 call(41898 call (partial) init _mt[243] this[42965]) call_tmp[604488])
    (505402 return _void[55])
  }
  function _shared[32](?).init[41916](arg _mt[42971]:_MT[238], ref arg this[42969]:_shared[32](?), arg p[41913]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454348] "temp" "type variable"
    unknown call_tmp[604493] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604496 'move' call_tmp[604493](41924 'typeof' p[41913]))
    (454350 'move' tmp[454348](41926 call _to_borrowed call_tmp[604493]))
    (454352 'init field' this[42969] c"chpl_t" tmp[454348])
    (474171 'end of statement')
    unknown rc[41935] "dead at end of block" "insert auto destroy"
    (540610 'init var' rc[41935] nil[44] unmanaged ReferenceCount?[415420])
    (41938 'end of statement')
    unknown call_tmp[604498] "expr temp" "maybe param" "maybe type" "temp"
    (604501 'move' call_tmp[604498](41941 call != p[41913] nil[44]))
    unknown call_tmp[604503] "expr temp" "maybe param" "maybe type" "temp"
    (604506 'move' call_tmp[604503](41953 call _cond_test call_tmp[604498]))
    if call_tmp[604503]
    {
      unknown call_tmp[604508] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604511 'move' call_tmp[604508](747807 'new' ReferenceCount[370645](?)(_chpl_manager = unmanaged[220](?))))
      (41950 call = rc[41935] call_tmp[604508])
      (474172 'end of statement' rc[41935])
    }
    unknown call_tmp[604513] "maybe param" "maybe type" "temp"
    (604516 'move' call_tmp[604513](41965 call _to_borrowed p[41913]))
    unknown call_tmp[604518] "expr temp" "maybe param" "maybe type" "temp"
    (604521 'move' call_tmp[604518](454366 '.v' this[42969] c"chpl_t"))
    unknown call_tmp[604523] "maybe param" "maybe type" "temp"
    (604526 'move' call_tmp[604523](454358 'to nilable class' call_tmp[604518]))
    unknown tmp[454356] "temp"
    (454360 'init var' tmp[454356] call_tmp[604513] call_tmp[604523])
    (454362 'init field' this[42969] c"chpl_p" tmp[454356])
    (474174 'end of statement')
    unknown tmp[454369] "temp"
    (454372 'init var' tmp[454369] rc[41935] unmanaged ReferenceCount?[415420])
    (454374 'init field' this[42969] c"chpl_pn" tmp[454369])
    (474175 'end of statement' rc[41935])
    (505404 return _void[55])
  }
  function _shared[32](?).init[41993](arg _mt[42975]:_MT[238], ref arg this[42973]:_shared[32](?), arg p[41990]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42024 call compilerError "shared only works with classes")
    (474177 'end of statement')
    unknown tmp[454384] "temp" "type variable"
    (454386 'move' tmp[454384](454378 'typeof' p[41990]))
    (454388 'init field' this[42973] c"chpl_t" tmp[454384])
    (474178 'end of statement')
    unknown call_tmp[604528] "expr temp" "maybe param" "maybe type" "temp"
    (604531 'move' call_tmp[604528](454402 '.v' this[42973] c"chpl_t"))
    unknown call_tmp[604533] "maybe param" "maybe type" "temp"
    (604536 'move' call_tmp[604533](454394 'to nilable class' call_tmp[604528]))
    unknown tmp[454392] "temp"
    (454396 'init var' tmp[454392] p[41990] call_tmp[604533])
    (454398 'init field' this[42973] c"chpl_p" tmp[454392])
    (474179 'end of statement')
    val tmp[454406]:unmanaged ReferenceCount?[415420] "temp"
    (454409 'default init var' tmp[454406] unmanaged ReferenceCount?[415420])
    (454411 '.=' this[42973] c"chpl_pn" tmp[454406])
    (474180 'end of statement')
    (505406 return _void[55])
  }
  where {
    unknown tmp[418270] "maybe param" "temp"
    unknown tmp[418291] "maybe param" "temp"
    unknown call_tmp[604538] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604541 'move' call_tmp[604538](454380 'typeof' p[41990]))
    unknown call_tmp[604543] "expr temp" "maybe param" "maybe type" "temp"
    (604546 'move' call_tmp[604543](41998 call isClass call_tmp[604538]))
    (418302 'move' tmp[418291](42000 call == call_tmp[604543] 0))
    unknown call_tmp[604548] "expr temp" "maybe param" "maybe type" "temp"
    (604551 'move' call_tmp[604548](418304 call _cond_invalid tmp[418291]))
    if call_tmp[604548]
    {
      (418307 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554090] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554091] "maybe param" "temp"
    unknown call_tmp[604553] "expr temp" "maybe param" "maybe type" "temp"
    (604556 'move' call_tmp[604553](418292 call isTrue tmp[418291]))
    (554096 'move' tmp[554091](554094 call _cond_test call_tmp[604553]))
    if tmp[554091]
    {
      unknown tmp[554098] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604558] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604561 'move' call_tmp[604558](454382 'typeof' p[41990]))
      unknown call_tmp[604563] "expr temp" "maybe param" "maybe type" "temp"
      (604566 'move' call_tmp[604563](354240 'is_subtype' _shared[32](?) call_tmp[604558]))
      unknown call_tmp[604568] "expr temp" "maybe param" "maybe type" "temp"
      (604571 'move' call_tmp[604568](42008 call == call_tmp[604563] 0))
      (554100 'move' tmp[554098](418295 call isTrue call_tmp[604568]))
      (554105 'move' tmp[554090](554102 '_paramFoldLogical' tmp[554091] tmp[554098]))
    }
    {
      (554110 'move' tmp[554090](554107 '_paramFoldLogical' tmp[554091] 0))
    }
    (418281 'move' tmp[418270] tmp[554090])
    unknown call_tmp[604573] "expr temp" "maybe param" "maybe type" "temp"
    (604576 'move' call_tmp[604573](418283 call _cond_invalid tmp[418270]))
    if call_tmp[604573]
    {
      (418286 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554117] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554118] "maybe param" "temp"
    unknown call_tmp[604578] "expr temp" "maybe param" "maybe type" "temp"
    (604581 'move' call_tmp[604578](418271 call isTrue tmp[418270]))
    (554123 'move' tmp[554118](554121 call _cond_test call_tmp[604578]))
    if tmp[554118]
    {
      unknown tmp[554125] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604583] "expr temp" "maybe param" "maybe type" "temp"
      (604586 'move' call_tmp[604583](42015 call isIterator p[41990]))
      unknown call_tmp[604588] "expr temp" "maybe param" "maybe type" "temp"
      (604591 'move' call_tmp[604588](42017 call == call_tmp[604583] 0))
      (554127 'move' tmp[554125](418274 call isTrue call_tmp[604588]))
      (554132 'move' tmp[554117](554129 '_paramFoldLogical' tmp[554118] tmp[554125]))
    }
    {
      (554137 'move' tmp[554117](554134 '_paramFoldLogical' tmp[554118] 0))
    }
    (748239 call chpl_statementLevelSymbol tmp[554117])
  }
  function _shared[32](?).init[42052](arg _mt[42979]:_MT[238], ref arg this[42977]:_shared[32](?), in arg take[42049]:_owned[30](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604595] "maybe param" "maybe type" "temp"
    (604598 'move' call_tmp[604595](42059 call(42055 call (partial) release _mt[243] take[42049])))
    unknown p[42060] "dead at end of block" "insert auto destroy"
    (540612 'init var' p[42060] call_tmp[604595])
    (42063 'end of statement')
    unknown tmp[454415] "temp" "type variable"
    unknown tmp[554144] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554145] "maybe param" "temp"
    unknown call_tmp[604600] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604603 'move' call_tmp[604600](42070 'typeof' this[42977]))
    unknown call_tmp[604607] "expr temp" "maybe param" "maybe type" "temp"
    (604610 'move' call_tmp[604607](42071 call chpl_t _mt[243] call_tmp[604600]))
    unknown call_tmp[604612] "expr temp" "maybe param" "maybe type" "temp"
    (604615 'move' call_tmp[604612](42075 call == call_tmp[604607] ?[260]))
    (554150 'move' tmp[554145](554148 call _cond_test call_tmp[604612]))
    if tmp[554145]
    {
      unknown tmp[554152] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604617] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604620 'move' call_tmp[604617](42079 'typeof' p[42060]))
      (554154 'move' tmp[554152](42081 call _to_borrowed call_tmp[604617]))
      (554159 'move' tmp[554144](554156 '_paramFoldLogical' tmp[554145] tmp[554152]))
    }
    {
      unknown tmp[554161] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604622] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604625 'move' call_tmp[604622](42083 'typeof' this[42977]))
      (554163 'move' tmp[554161](42084 call chpl_t _mt[243] call_tmp[604622]))
      (554168 'move' tmp[554144](554165 '_paramFoldLogical' tmp[554145] tmp[554161]))
    }
    (454417 'move' tmp[454415] tmp[554144])
    (454419 'init field' this[42977] c"chpl_t" tmp[454415])
    (474181 'end of statement')
    unknown call_tmp[604629] "expr temp" "maybe param" "maybe type" "temp"
    (604632 'move' call_tmp[604629](42096 call isClass p[42060]))
    unknown call_tmp[604634] "expr temp" "maybe param" "maybe type" "temp"
    (604637 'move' call_tmp[604634](42097 call ! call_tmp[604629]))
    unknown call_tmp[604639] "expr temp" "maybe param" "maybe type" "temp"
    (604642 'move' call_tmp[604639](42104 call _cond_test call_tmp[604634]))
    if call_tmp[604639]
    {
      (42102 call compilerError "shared only works with classes")
    }
    unknown rc[42113] "dead at end of block" "insert auto destroy"
    (540614 'init var' rc[42113] nil[44] unmanaged ReferenceCount?[415420])
    (42116 'end of statement')
    unknown call_tmp[604644] "expr temp" "maybe param" "maybe type" "temp"
    (604647 'move' call_tmp[604644](42119 call != p[42060] nil[44]))
    unknown call_tmp[604649] "expr temp" "maybe param" "maybe type" "temp"
    (604652 'move' call_tmp[604649](42131 call _cond_test call_tmp[604644]))
    if call_tmp[604649]
    {
      unknown call_tmp[604654] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604657 'move' call_tmp[604654](747808 'new' ReferenceCount[370645](?)(_chpl_manager = unmanaged[220](?))))
      (42128 call = rc[42113] call_tmp[604654])
      (474183 'end of statement' rc[42113])
    }
    unknown call_tmp[604659] "expr temp" "maybe param" "maybe type" "temp"
    (604662 'move' call_tmp[604659](454433 '.v' this[42977] c"chpl_t"))
    unknown call_tmp[604664] "maybe param" "maybe type" "temp"
    (604667 'move' call_tmp[604664](454425 'to nilable class' call_tmp[604659]))
    unknown tmp[454423] "temp"
    (454427 'init var' tmp[454423] p[42060] call_tmp[604664])
    (454429 'init field' this[42977] c"chpl_p" tmp[454423])
    (474185 'end of statement' p[42060])
    unknown tmp[454436] "temp"
    (454439 'init var' tmp[454436] rc[42113] unmanaged ReferenceCount?[415420])
    (454441 'init field' this[42977] c"chpl_pn" tmp[454436])
    (474187 'end of statement' rc[42113])
    (505408 return _void[55])
  }
  function _shared[32](?).init[42167](arg _mt[42983]:_MT[238], ref arg this[42981]:_shared[32](?), arg _private[42164]:bool[10], arg t[42169]:_any[178](?), ref arg src[42172]:_shared[32](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454445] "temp" "type variable"
    (454447 'move' tmp[454445] t[42169])
    (454449 'init field' this[42981] c"chpl_t" tmp[454445])
    (474189 'end of statement')
    unknown call_tmp[604669] "expr temp" "maybe param" "maybe type" "temp"
    (604672 'move' call_tmp[604669](42196 call _to_unmanaged t[42169]))
    unknown call_tmp[604674] "expr temp" "maybe param" "maybe type" "temp"
    (604677 'move' call_tmp[604674](42198 call _to_nilable call_tmp[604669]))
    unknown call_tmp[604681] "expr temp" "maybe param" "maybe type" "temp"
    (604684 'move' call_tmp[604681](42189 call chpl_p _mt[243] src[42172]))
    unknown call_tmp[604686] "maybe param" "maybe type" "temp"
    (604689 'move' call_tmp[604686](42199 call _cast call_tmp[604674] call_tmp[604681]))
    unknown call_tmp[604691] "expr temp" "maybe param" "maybe type" "temp"
    (604694 'move' call_tmp[604691](454463 '.v' this[42981] c"chpl_t"))
    unknown call_tmp[604696] "maybe param" "maybe type" "temp"
    (604699 'move' call_tmp[604696](454455 'to nilable class' call_tmp[604691]))
    unknown tmp[454453] "temp"
    (454457 'init var' tmp[454453] call_tmp[604686] call_tmp[604696])
    (454459 'init field' this[42981] c"chpl_p" tmp[454453])
    (474190 'end of statement')
    unknown call_tmp[604703] "maybe param" "maybe type" "temp"
    (604706 'move' call_tmp[604703](42209 call chpl_pn _mt[243] src[42172]))
    unknown tmp[454466] "temp"
    (454469 'init var' tmp[454466] call_tmp[604703] unmanaged ReferenceCount?[415420])
    (454471 'init field' this[42981] c"chpl_pn" tmp[454466])
    (474191 'end of statement')
    unknown call_tmp[604710] "expr temp" "maybe param" "maybe type" "temp"
    (604713 'move' call_tmp[604710](42216 call chpl_p _mt[243] src[42172]))
    (42220 call = call_tmp[604710] nil[44])
    (474192 'end of statement')
    unknown call_tmp[604717] "expr temp" "maybe param" "maybe type" "temp"
    (604720 'move' call_tmp[604717](42224 call chpl_pn _mt[243] src[42172]))
    (42228 call = call_tmp[604717] nil[44])
    (505410 return _void[55])
  }
  function _shared[32](?).init[42239](arg _mt[42987]:_MT[238], ref arg this[42985]:_shared[32](?), arg _private[42236]:bool[10], arg t[42241]:_any[178](?), arg p[42243]:_any[178](?), arg pn[42245]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604722] "expr temp" "maybe param" "maybe type" "temp"
    (604725 'move' call_tmp[604722](42252 call _to_unmanaged t[42241]))
    unknown call_tmp[604727] "expr temp" "maybe param" "maybe type" "temp"
    (604730 'move' call_tmp[604727](42254 call _to_nilable call_tmp[604722]))
    unknown call_tmp[604732] "maybe param" "maybe type" "temp"
    (604735 'move' call_tmp[604732](42255 call _cast call_tmp[604727] p[42243]))
    unknown ptr[42257] "dead at end of block" "insert auto destroy"
    (540616 'init var' ptr[42257] call_tmp[604732])
    (42260 'end of statement')
    unknown count[42263] "dead at end of block" "insert auto destroy"
    (540618 'init var' count[42263] pn[42245])
    (42266 'end of statement')
    unknown call_tmp[604737] "expr temp" "maybe param" "maybe type" "temp"
    (604740 'move' call_tmp[604737](42269 call != ptr[42257] nil[44]))
    unknown call_tmp[604742] "expr temp" "maybe param" "maybe type" "temp"
    (604745 'move' call_tmp[604742](42287 call _cond_test call_tmp[604737]))
    if call_tmp[604742]
    {
      unknown call_tmp[604747] "expr temp" "maybe param" "maybe type" "temp"
      (604750 'move' call_tmp[604747](42272 call postfix! count[42263]))
      (42278 call(42274 call (partial) retain _mt[243] call_tmp[604747]))
      (474194 'end of statement' count[42263])
    }
    {
      (42283 call = count[42263] nil[44])
      (474196 'end of statement' count[42263])
    }
    unknown tmp[454475] "temp" "type variable"
    (454477 'move' tmp[454475] t[42241])
    (454479 'init field' this[42985] c"chpl_t" tmp[454475])
    (474198 'end of statement')
    unknown call_tmp[604754] "expr temp" "maybe param" "maybe type" "temp"
    (604757 'move' call_tmp[604754](454493 '.v' this[42985] c"chpl_t"))
    unknown call_tmp[604759] "maybe param" "maybe type" "temp"
    (604762 'move' call_tmp[604759](454485 'to nilable class' call_tmp[604754]))
    unknown tmp[454483] "temp"
    (454487 'init var' tmp[454483] ptr[42257] call_tmp[604759])
    (454489 'init field' this[42985] c"chpl_p" tmp[454483])
    (474199 'end of statement' ptr[42257])
    unknown tmp[454496] "temp"
    (454499 'init var' tmp[454496] count[42263] unmanaged ReferenceCount?[415420])
    (454501 'init field' this[42985] c"chpl_pn" tmp[454496])
    (474201 'end of statement' count[42263])
    (505412 return _void[55])
  }
  function _shared[32](?).init=[42323](arg _mt[42991]:_MT[238], ref arg this[42989]:_shared[32](?), in arg take[42320]:_owned[30](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418312] "maybe param" "temp"
    unknown call_tmp[604764] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604767 'move' call_tmp[604764](42327 'typeof' this[42989]))
    (418323 'move' tmp[418312](42329 call isNonNilableClass call_tmp[604764]))
    unknown call_tmp[604769] "expr temp" "maybe param" "maybe type" "temp"
    (604772 'move' call_tmp[604769](418325 call _cond_invalid tmp[418312]))
    if call_tmp[604769]
    {
      (418328 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554175] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554176] "maybe param" "temp"
    unknown call_tmp[604774] "expr temp" "maybe param" "maybe type" "temp"
    (604777 'move' call_tmp[604774](418313 call isTrue tmp[418312]))
    (554181 'move' tmp[554176](554179 call _cond_test call_tmp[604774]))
    if tmp[554176]
    {
      unknown tmp[554183] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604779] "expr temp" "maybe param" "maybe type" "temp"
      (604782 'move' call_tmp[604779](42333 call isNilableClass take[42320]))
      (554185 'move' tmp[554183](418316 call isTrue call_tmp[604779]))
      (554190 'move' tmp[554175](554187 '_paramFoldLogical' tmp[554176] tmp[554183]))
    }
    {
      (554195 'move' tmp[554175](554192 '_paramFoldLogical' tmp[554176] 0))
    }
    unknown call_tmp[604784] "expr temp" "maybe param" "maybe type" "temp"
    (604787 'move' call_tmp[604784](42359 call _cond_test tmp[554175]))
    if call_tmp[604784]
    {
      (42357 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (42371 call(42366 call (partial) init _mt[243] this[42989]) take[42320])
    (505414 return _void[55])
  }
  function _shared[32](?).init=[42381](arg _mt[42995]:_MT[238], ref arg this[42993]:_shared[32](?), const  ref arg src[42378]:_shared[32](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[418333] "maybe param" "temp"
    unknown call_tmp[604791] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604794 'move' call_tmp[604791](42385 'typeof' this[42993]))
    (418344 'move' tmp[418333](42387 call isNonNilableClass call_tmp[604791]))
    unknown call_tmp[604796] "expr temp" "maybe param" "maybe type" "temp"
    (604799 'move' call_tmp[604796](418346 call _cond_invalid tmp[418333]))
    if call_tmp[604796]
    {
      (418349 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554202] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554203] "maybe param" "temp"
    unknown call_tmp[604801] "expr temp" "maybe param" "maybe type" "temp"
    (604804 'move' call_tmp[604801](418334 call isTrue tmp[418333]))
    (554208 'move' tmp[554203](554206 call _cond_test call_tmp[604801]))
    if tmp[554203]
    {
      unknown tmp[554210] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604806] "expr temp" "maybe param" "maybe type" "temp"
      (604809 'move' call_tmp[604806](42391 call isNilableClass src[42378]))
      (554212 'move' tmp[554210](418337 call isTrue call_tmp[604806]))
      (554217 'move' tmp[554202](554214 '_paramFoldLogical' tmp[554203] tmp[554210]))
    }
    {
      (554222 'move' tmp[554202](554219 '_paramFoldLogical' tmp[554203] 0))
    }
    unknown call_tmp[604811] "expr temp" "maybe param" "maybe type" "temp"
    (604814 'move' call_tmp[604811](42399 call _cond_test tmp[554202]))
    if call_tmp[604811]
    {
      (42397 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    unknown call_tmp[604816] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604819 'move' call_tmp[604816](42412 'typeof' this[42993]))
    unknown call_tmp[604823] "expr temp" "maybe param" "maybe type" "temp"
    (604826 'move' call_tmp[604823](42413 call chpl_t _mt[243] call_tmp[604816]))
    unknown call_tmp[604830] "expr temp" "maybe param" "maybe type" "temp"
    (604833 'move' call_tmp[604830](42407 call chpl_t _mt[243] src[42378]))
    unknown call_tmp[604835] "expr temp" "maybe param" "maybe type" "temp"
    (604838 'move' call_tmp[604835](354241 'is_coercible' call_tmp[604823] call_tmp[604830]))
    unknown call_tmp[604840] "expr temp" "maybe param" "maybe type" "temp"
    (604843 'move' call_tmp[604840](42418 call == call_tmp[604835] 0))
    unknown call_tmp[604845] "expr temp" "maybe param" "maybe type" "temp"
    (604848 'move' call_tmp[604845](42437 call _cond_test call_tmp[604840]))
    if call_tmp[604845]
    {
      unknown call_tmp[604850] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604853 'move' call_tmp[604850](42424 'typeof' src[42378]))
      unknown call_tmp[604855] "expr temp" "maybe param" "maybe type" "temp"
      (604858 'move' call_tmp[604855](42426 call _cast string[26] call_tmp[604850]))
      unknown call_tmp[604860] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604863 'move' call_tmp[604860](42430 'typeof' this[42993]))
      unknown call_tmp[604865] "expr temp" "maybe param" "maybe type" "temp"
      (604868 'move' call_tmp[604865](42432 call _cast string[26] call_tmp[604860]))
      (42435 call compilerError "cannot coerce '" call_tmp[604855] "' to '" call_tmp[604865] "' in initialization")
    }
    unknown tmp[454505] "temp" "type variable"
    unknown call_tmp[604870] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604873 'move' call_tmp[604870](42447 'typeof' this[42993]))
    (454507 'move' tmp[454505](42448 call chpl_t _mt[243] call_tmp[604870]))
    (454509 'init field' this[42993] c"chpl_t" tmp[454505])
    (474209 'end of statement')
    unknown call_tmp[604879] "maybe param" "maybe type" "temp"
    (604882 'move' call_tmp[604879](42459 call chpl_p _mt[243] src[42378]))
    unknown call_tmp[604884] "expr temp" "maybe param" "maybe type" "temp"
    (604887 'move' call_tmp[604884](454523 '.v' this[42993] c"chpl_t"))
    unknown call_tmp[604889] "maybe param" "maybe type" "temp"
    (604892 'move' call_tmp[604889](454515 'to nilable class' call_tmp[604884]))
    unknown tmp[454513] "temp"
    (454517 'init var' tmp[454513] call_tmp[604879] call_tmp[604889])
    (454519 'init field' this[42993] c"chpl_p" tmp[454513])
    (474210 'end of statement')
    unknown call_tmp[604896] "maybe param" "maybe type" "temp"
    (604899 'move' call_tmp[604896](42470 call chpl_pn _mt[243] src[42378]))
    unknown tmp[454526] "temp"
    (454529 'init var' tmp[454526] call_tmp[604896] unmanaged ReferenceCount?[415420])
    (454531 'init field' this[42993] c"chpl_pn" tmp[454526])
    (474211 'end of statement')
    unknown call_tmp[604903] "expr temp" "maybe param" "maybe type" "temp"
    (604906 'move' call_tmp[604903](42484 call chpl_pn _mt[243] this[42993]))
    unknown call_tmp[604908] "expr temp" "maybe param" "maybe type" "temp"
    (604911 'move' call_tmp[604908](42488 call != call_tmp[604903] nil[44]))
    unknown call_tmp[604913] "expr temp" "maybe param" "maybe type" "temp"
    (604916 'move' call_tmp[604913](42502 call _cond_test call_tmp[604908]))
    if call_tmp[604913]
    {
      unknown call_tmp[604920] "expr temp" "maybe param" "maybe type" "temp"
      (604923 'move' call_tmp[604920](42491 call chpl_pn _mt[243] this[42993]))
      unknown call_tmp[604925] "expr temp" "maybe param" "maybe type" "temp"
      (604928 'move' call_tmp[604925](42494 call postfix! call_tmp[604920]))
      (42500 call(42496 call (partial) retain _mt[243] call_tmp[604925]))
    }
    (505416 return _void[55])
  }
  function _shared[32](?).init=[42515](arg _mt[42999]:_MT[238], ref arg this[42997]:_shared[32](?), arg src[42512]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42536 call compilerError "cannot create a shared variable from a borrowed class instance")
    (474213 'end of statement')
    unknown tmp[454535] "temp" "type variable"
    (454537 'move' tmp[454535] int(64)[13])
    (454539 'init field' this[42997] c"chpl_t" tmp[454535])
    (474214 'end of statement')
    unknown tmp[454544] "temp"
    unknown call_tmp[604932] "expr temp" "maybe param" "maybe type" "temp"
    (604935 'move' call_tmp[604932](454554 '.v' this[42997] c"chpl_t"))
    unknown call_tmp[604937] "expr temp" "maybe param" "maybe type" "temp"
    (604940 'move' call_tmp[604937](454546 'to nilable class' call_tmp[604932]))
    (454548 'default init var' tmp[454544] call_tmp[604937])
    (454550 '.=' this[42997] c"chpl_p" tmp[454544])
    (474215 'end of statement')
    val tmp[454557]:unmanaged ReferenceCount?[415420] "temp"
    (454560 'default init var' tmp[454557] unmanaged ReferenceCount?[415420])
    (454562 '.=' this[42997] c"chpl_pn" tmp[454557])
    (474216 'end of statement')
    (505418 return _void[55])
  }
  function _shared[32](?).init=[42555](arg _mt[43003]:_MT[238], ref arg this[43001]:_shared[32](?), arg src[42552]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42576 call compilerError "cannot create a shared variable from an unmanaged class instance")
    (474217 'end of statement')
    unknown tmp[454566] "temp" "type variable"
    (454568 'move' tmp[454566] int(64)[13])
    (454570 'init field' this[43001] c"chpl_t" tmp[454566])
    (474218 'end of statement')
    unknown tmp[454575] "temp"
    unknown call_tmp[604942] "expr temp" "maybe param" "maybe type" "temp"
    (604945 'move' call_tmp[604942](454585 '.v' this[43001] c"chpl_t"))
    unknown call_tmp[604947] "expr temp" "maybe param" "maybe type" "temp"
    (604950 'move' call_tmp[604947](454577 'to nilable class' call_tmp[604942]))
    (454579 'default init var' tmp[454575] call_tmp[604947])
    (454581 '.=' this[43001] c"chpl_p" tmp[454575])
    (474219 'end of statement')
    val tmp[454588]:unmanaged ReferenceCount?[415420] "temp"
    (454591 'default init var' tmp[454588] unmanaged ReferenceCount?[415420])
    (454593 '.=' this[43001] c"chpl_pn" tmp[454588])
    (474220 'end of statement')
    (505420 return _void[55])
  }
  function _shared[32](?).init=[42595](arg _mt[43007]:_MT[238], ref arg this[43005]:_shared[32](?), arg src[42592]:_nilType[42]) : void[4] "leaves this nil" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604954] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604957 'move' call_tmp[604954](42602 'typeof' this[43005]))
    unknown call_tmp[604961] "expr temp" "maybe param" "maybe type" "temp"
    (604964 'move' call_tmp[604961](42603 call chpl_t _mt[243] call_tmp[604954]))
    (42607 call(42598 call (partial) init _mt[243] this[43005]) call_tmp[604961])
    (474221 'end of statement')
    unknown call_tmp[604968] "expr temp" "maybe param" "maybe type" "temp"
    (604971 'move' call_tmp[604968](370702 call chpl_t _mt[243] this[43005]))
    unknown call_tmp[604973] "expr temp" "maybe param" "maybe type" "temp"
    (604976 'move' call_tmp[604973](42613 call isNonNilableClass call_tmp[604968]))
    unknown call_tmp[604978] "expr temp" "maybe param" "maybe type" "temp"
    (604981 'move' call_tmp[604978](42635 call _cond_test call_tmp[604973]))
    if call_tmp[604978]
    {
      (42633 call compilerError "Assigning non-nilable shared to nil")
    }
    (505422 return _void[55])
  }
  function _shared[32](?).doClear[42644](arg _mt[43011]:_MT[238], ref arg this[43009]:_shared[32](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418354] "maybe param" "temp"
    unknown call_tmp[604985] "expr temp" "maybe param" "maybe type" "temp"
    (604988 'move' call_tmp[604985](370707 call chpl_p _mt[243] this[43009]))
    (418365 'move' tmp[418354](42648 call != call_tmp[604985] nil[44]))
    unknown call_tmp[604990] "expr temp" "maybe param" "maybe type" "temp"
    (604993 'move' call_tmp[604990](418367 call _cond_invalid tmp[418354]))
    if call_tmp[604990]
    {
      (418370 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554229] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554230] "maybe param" "temp"
    unknown call_tmp[604995] "expr temp" "maybe param" "maybe type" "temp"
    (604998 'move' call_tmp[604995](418355 call isTrue tmp[418354]))
    (554235 'move' tmp[554230](554233 call _cond_test call_tmp[604995]))
    if tmp[554230]
    {
      unknown tmp[554237] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605002] "expr temp" "maybe param" "maybe type" "temp"
      (605005 'move' call_tmp[605002](370712 call chpl_pn _mt[243] this[43009]))
      unknown call_tmp[605007] "expr temp" "maybe param" "maybe type" "temp"
      (605010 'move' call_tmp[605007](42652 call != call_tmp[605002] nil[44]))
      (554239 'move' tmp[554237](418358 call isTrue call_tmp[605007]))
      (554244 'move' tmp[554229](554241 '_paramFoldLogical' tmp[554230] tmp[554237]))
    }
    {
      (554249 'move' tmp[554229](554246 '_paramFoldLogical' tmp[554230] 0))
    }
    unknown call_tmp[605012] "expr temp" "maybe param" "maybe type" "temp"
    (605015 'move' call_tmp[605012](42691 call _cond_test tmp[554229]))
    if call_tmp[605012]
    {
      unknown call_tmp[605019] "expr temp" "maybe param" "maybe type" "temp"
      (605022 'move' call_tmp[605019](370717 call chpl_pn _mt[243] this[43009]))
      unknown call_tmp[605024] "expr temp" "maybe param" "maybe type" "temp"
      (605027 'move' call_tmp[605024](42657 call postfix! call_tmp[605019]))
      unknown call_tmp[605031] "maybe param" "maybe type" "temp"
      (605034 'move' call_tmp[605031](42663 call(42659 call (partial) release _mt[243] call_tmp[605024])))
      unknown count[42664] "dead at end of block" "insert auto destroy"
      (540620 'init var' count[42664] call_tmp[605031])
      (42667 'end of statement')
      unknown call_tmp[605036] "expr temp" "maybe param" "maybe type" "temp"
      (605039 'move' call_tmp[605036](42671 call == count[42664] 0))
      unknown call_tmp[605041] "expr temp" "maybe param" "maybe type" "temp"
      (605044 'move' call_tmp[605041](42687 call _cond_test call_tmp[605036]))
      if call_tmp[605041]
      {
        unknown call_tmp[605048] "expr temp" "maybe param" "maybe type" "temp"
        (605051 'move' call_tmp[605048](370723 call chpl_p _mt[243] this[43009]))
        unknown call_tmp[605053] "expr temp" "maybe param" "maybe type" "temp"
        (605056 'move' call_tmp[605053](42676 call _to_unmanaged call_tmp[605048]))
        (42678 call chpl__delete call_tmp[605053])
        (474224 'end of statement')
        unknown call_tmp[605060] "expr temp" "maybe param" "maybe type" "temp"
        (605063 'move' call_tmp[605060](370728 call chpl_pn _mt[243] this[43009]))
        (42684 call chpl__delete call_tmp[605060])
      }
    }
    unknown call_tmp[605067] "expr temp" "maybe param" "maybe type" "temp"
    (605070 'move' call_tmp[605067](370733 call chpl_p _mt[243] this[43009]))
    (42698 call = call_tmp[605067] nil[44])
    (474226 'end of statement')
    unknown call_tmp[605074] "expr temp" "maybe param" "maybe type" "temp"
    (605077 'move' call_tmp[605074](370738 call chpl_pn _mt[243] this[43009]))
    (42703 call = call_tmp[605074] nil[44])
    (505424 return _void[55])
  }
  function _shared[32](?).create[42712](arg _mt[43015]:_MT[238], arg this[43013]:_shared[32](?), arg source[42710]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[605079] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605082 'move' call_tmp[605079](42734 'typeof' source[42710]))
    unknown call_tmp[605084] "expr temp" "maybe param" "maybe type" "temp"
    (605087 'move' call_tmp[605084](42736 call _cast string[26] call_tmp[605079]))
    (42738 call compilerError "cannot create a 'shared' from " call_tmp[605084])
    (505426 return _void[55])
  }
  function _shared[32](?).create[42749](arg _mt[43019]:_MT[238], arg this[43017]:_shared[32](?), in arg take[42746]:_owned[30](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505430] "RVV" "temp"
    unknown result[42753] "dead at end of block" "insert auto destroy"
    (540622 'init var' result[42753] take[42746] _shared[32](?))
    (42756 'end of statement')
    (505435 'move' ret[505430](505434 'deref' result[42753]))
    gotoReturn _end_create[505428] _end_create[505428]
    (474229 'end of statement' result[42753])
    label _end_create[505428]
    (505432 return ret[505430])
  }
  function _shared[32](?).create[42769](arg _mt[43023]:_MT[238], arg this[43021]:_shared[32](?), in arg src[42766]:_shared[32](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505441] "RVV" "temp"
    (505446 'move' ret[505441](505445 'deref' src[42766]))
    (505443 return ret[505441])
  }
  function _shared[32](?).create[42783](arg _mt[43027]:_MT[238], arg this[43025]:_shared[32](?), arg p[42780]:unmanaged[220](?)) : _unknown[51] "inline" "method" "primary method" "unsafe"
  {
    unknown ret[505450] "RVV" "temp"
    unknown result[42790] "dead at end of block" "insert auto destroy"
    unknown call_tmp[605089] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605092 'move' call_tmp[605089](42786 'typeof' p[42780]))
    unknown call_tmp[605094] "expr temp" "maybe param" "maybe type" "temp"
    (605097 'move' call_tmp[605094](42788 call _cast _shared[32](?) call_tmp[605089]))
    (540624 'default init var' result[42790] call_tmp[605094])
    (42793 'end of statement')
    (42801 call(42796 call (partial) retain _mt[243] result[42790]) p[42780])
    (474232 'end of statement' result[42790])
    (505455 'move' ret[505450](505454 'deref' result[42790]))
    gotoReturn _end_create[505448] _end_create[505448]
    (474234 'end of statement' result[42790])
    label _end_create[505448]
    (505452 return ret[505450])
  }
  function _shared[32](?).deinit[42810](arg _mt[43031]:_MT[238], arg this[43029]:_shared[32](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605103] "expr temp" "maybe param" "maybe type" "temp"
    (605106 'move' call_tmp[605103](370754 call chpl_p _mt[243] this[43029]))
    unknown call_tmp[605108] "expr temp" "maybe param" "maybe type" "temp"
    (605111 'move' call_tmp[605108](42815 call isClass call_tmp[605103]))
    unknown call_tmp[605113] "expr temp" "maybe param" "maybe type" "temp"
    (605116 'move' call_tmp[605113](42821 call _cond_test call_tmp[605108]))
    if call_tmp[605113]
    {
      (42818 call(370758 call (partial) doClear _mt[243] this[43029]))
    }
    (505459 return _void[55])
  }
  function _shared[32](?).retain[42834](arg _mt[43035]:_MT[238], ref arg this[43033]:_shared[32](?), arg newPtr[42831]:unmanaged[220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605122] "expr temp" "maybe param" "maybe type" "temp"
    (605125 'move' call_tmp[605122](370764 call chpl_t _mt[243] this[43033]))
    unknown call_tmp[605127] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605130 'move' call_tmp[605127](42838 'typeof' newPtr[42831]))
    unknown call_tmp[605132] "expr temp" "maybe param" "maybe type" "temp"
    (605135 'move' call_tmp[605132](354242 'is_coercible' call_tmp[605122] call_tmp[605127]))
    unknown call_tmp[605137] "expr temp" "maybe param" "maybe type" "temp"
    (605140 'move' call_tmp[605137](42842 call ! call_tmp[605132]))
    unknown call_tmp[605142] "expr temp" "maybe param" "maybe type" "temp"
    (605145 'move' call_tmp[605142](42874 call _cond_test call_tmp[605137]))
    if call_tmp[605142]
    {
      unknown call_tmp[605147] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (605150 'move' call_tmp[605147](42847 'typeof' newPtr[42831]))
      unknown call_tmp[605152] "expr temp" "maybe param" "maybe type" "temp"
      (605155 'move' call_tmp[605152](42849 call _cast string[26] call_tmp[605147]))
      unknown call_tmp[605157] "expr temp" "maybe param" "maybe type" "temp"
      (605160 'move' call_tmp[605157](42851 call + "cannot retain '" call_tmp[605152]))
      unknown call_tmp[605162] "expr temp" "maybe param" "maybe type" "temp"
      (605165 'move' call_tmp[605162](42854 call + call_tmp[605157] "' "))
      unknown call_tmp[605167] "expr temp" "maybe param" "maybe type" "temp"
      (605170 'move' call_tmp[605167](42857 call + call_tmp[605162] "(expected '"))
      unknown call_tmp[605174] "expr temp" "maybe param" "maybe type" "temp"
      (605177 'move' call_tmp[605174](370770 call chpl_t _mt[243] this[43033]))
      unknown call_tmp[605179] "expr temp" "maybe param" "maybe type" "temp"
      (605182 'move' call_tmp[605179](42862 call _to_unmanaged call_tmp[605174]))
      unknown call_tmp[605184] "expr temp" "maybe param" "maybe type" "temp"
      (605187 'move' call_tmp[605184](42864 call _cast string[26] call_tmp[605179]))
      unknown call_tmp[605189] "expr temp" "maybe param" "maybe type" "temp"
      (605192 'move' call_tmp[605189](42866 call + call_tmp[605167] call_tmp[605184]))
      unknown call_tmp[605194] "expr temp" "maybe param" "maybe type" "temp"
      (605197 'move' call_tmp[605194](42869 call + call_tmp[605189] "')"))
      (42872 call compilerError call_tmp[605194])
    }
    (42882 call(370774 call (partial) doClear _mt[243] this[43033]))
    (474238 'end of statement')
    unknown call_tmp[605203] "expr temp" "maybe param" "maybe type" "temp"
    (605206 'move' call_tmp[605203](42885 call chpl_p _mt[243] this[43033]))
    (42889 call = call_tmp[605203] newPtr[42831])
    (474239 'end of statement')
    unknown call_tmp[605208] "expr temp" "maybe param" "maybe type" "temp"
    (605211 'move' call_tmp[605208](42894 call != newPtr[42831] nil[44]))
    unknown call_tmp[605213] "expr temp" "maybe param" "maybe type" "temp"
    (605216 'move' call_tmp[605213](42910 call _cond_test call_tmp[605208]))
    if call_tmp[605213]
    {
      unknown call_tmp[605220] "expr temp" "maybe param" "maybe type" "temp"
      (605223 'move' call_tmp[605220](42897 call chpl_pn _mt[243] this[43033]))
      unknown call_tmp[605225] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605228 'move' call_tmp[605225](747809 'new' ReferenceCount[370645](?)(_chpl_manager = unmanaged[220](?))))
      (42906 call = call_tmp[605220] call_tmp[605225])
    }
    (505461 return _void[55])
  }
  function _shared[32](?).clear[42918](arg _mt[43039]:_MT[238], ref arg this[43037]:_shared[32](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    (42922 call(370781 call (partial) doClear _mt[243] this[43037]))
    (505463 return _void[55])
  }
  function _shared[32](?).borrow[42929](arg _mt[43043]:_MT[238], arg this[43041]:_shared[32](?)) : _unknown[51] "nil from this" "method" "primary method"
  {
    unknown ret[505467] "RVV" "temp"
    unknown call_tmp[605234] "expr temp" "maybe param" "maybe type" "temp"
    (605237 'move' call_tmp[605234](370786 call chpl_t _mt[243] this[43041]))
    unknown call_tmp[605239] "expr temp" "maybe param" "maybe type" "temp"
    (605242 'move' call_tmp[605239](42934 call _to_nilable call_tmp[605234]))
    unknown call_tmp[605246] "expr temp" "maybe param" "maybe type" "temp"
    (605249 'move' call_tmp[605246](370791 call chpl_t _mt[243] this[43041]))
    unknown call_tmp[605251] "expr temp" "maybe param" "maybe type" "temp"
    (605254 'move' call_tmp[605251](42936 call == call_tmp[605239] call_tmp[605246]))
    unknown call_tmp[605256] "expr temp" "maybe param" "maybe type" "temp"
    (605259 'move' call_tmp[605256](42948 call _cond_test call_tmp[605251]))
    if call_tmp[605256]
    {
      unknown call_tmp[605263] "expr temp" "maybe param" "maybe type" "temp"
      (605266 'move' call_tmp[605263](370796 call chpl_p _mt[243] this[43041]))
      (505472 'move' ret[505467](505471 'deref' call_tmp[605263]))
      gotoReturn _end_borrow[505465] _end_borrow[505465]
    }
    {
      unknown call_tmp[605270] "expr temp" "maybe param" "maybe type" "temp"
      (605273 'move' call_tmp[605270](370801 call chpl_p _mt[243] this[43041]))
      unknown call_tmp[605275] "expr temp" "maybe param" "maybe type" "temp"
      (605278 'move' call_tmp[605275](42943 call postfix! call_tmp[605270]))
      (505477 'move' ret[505467](505476 'deref' call_tmp[605275]))
      gotoReturn _end_borrow[505465] _end_borrow[505465]
    }
    label _end_borrow[505465]
    (505469 return ret[505467])
  }
  type _shared[32](?) unknown chpl_t[41770] "no doc" "type variable" unknown chpl_p[41777] "no doc" "owned"(41776 'to nilable class' chpl_t[41770]) val chpl_pn[41793]:unmanaged ReferenceCount?[415420] "no doc" "owned" unmanaged ReferenceCount?[415420] forwarding ( )
  type shared[415427](?)
  type shared?[415423](?)
  function =[43052](ref arg lhs[43049]:_shared[32](?), arg rhs[43055]:_shared[32](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605282] "expr temp" "maybe param" "maybe type" "temp"
    (605285 'move' call_tmp[605282](43071 call chpl_pn _mt[243] rhs[43055]))
    unknown call_tmp[605287] "expr temp" "maybe param" "maybe type" "temp"
    (605290 'move' call_tmp[605287](43075 call != call_tmp[605282] nil[44]))
    unknown call_tmp[605292] "expr temp" "maybe param" "maybe type" "temp"
    (605295 'move' call_tmp[605292](43089 call _cond_test call_tmp[605287]))
    if call_tmp[605292]
    {
      unknown call_tmp[605299] "expr temp" "maybe param" "maybe type" "temp"
      (605302 'move' call_tmp[605299](43078 call chpl_pn _mt[243] rhs[43055]))
      unknown call_tmp[605304] "expr temp" "maybe param" "maybe type" "temp"
      (605307 'move' call_tmp[605304](43081 call postfix! call_tmp[605299]))
      (43087 call(43083 call (partial) retain _mt[243] call_tmp[605304]))
    }
    unknown call_tmp[605313] "maybe param" "maybe type" "temp"
    (605316 'move' call_tmp[605313](43096 call chpl_p _mt[243] rhs[43055]))
    const chpl_p_tmp[43099] "dead at end of block" "const" "insert auto destroy"
    (540626 'init var' chpl_p_tmp[43099] call_tmp[605313])
    (43102 'end of statement')
    unknown call_tmp[605320] "maybe param" "maybe type" "temp"
    (605323 'move' call_tmp[605320](43104 call chpl_pn _mt[243] rhs[43055]))
    const chpl_pn_tmp[43107] "dead at end of block" "const" "insert auto destroy"
    (540628 'init var' chpl_pn_tmp[43107] call_tmp[605320])
    (43110 'end of statement')
    (43118 call(43114 call (partial) doClear _mt[243] lhs[43049]))
    (474245 'end of statement')
    unknown call_tmp[605329] "expr temp" "maybe param" "maybe type" "temp"
    (605332 'move' call_tmp[605329](43121 call chpl_p _mt[243] lhs[43049]))
    (43125 call = call_tmp[605329] chpl_p_tmp[43099])
    (474246 'end of statement' chpl_p_tmp[43099])
    unknown call_tmp[605336] "expr temp" "maybe param" "maybe type" "temp"
    (605339 'move' call_tmp[605336](43129 call chpl_pn _mt[243] lhs[43049]))
    (43133 call = call_tmp[605336] chpl_pn_tmp[43107])
    (474248 'end of statement' chpl_pn_tmp[43107])
    (505481 return _void[55])
  }
  where {
    unknown tmp[418375] "maybe param" "temp"
    (418386 'move' tmp[418375](43061 call isNonNilableClass lhs[43049]))
    unknown call_tmp[605341] "expr temp" "maybe param" "maybe type" "temp"
    (605344 'move' call_tmp[605341](418388 call _cond_invalid tmp[418375]))
    if call_tmp[605341]
    {
      (418391 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554256] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554257] "maybe param" "temp"
    unknown call_tmp[605346] "expr temp" "maybe param" "maybe type" "temp"
    (605349 'move' call_tmp[605346](418376 call isTrue tmp[418375]))
    (554262 'move' tmp[554257](554260 call _cond_test call_tmp[605346]))
    if tmp[554257]
    {
      unknown tmp[554264] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605351] "expr temp" "maybe param" "maybe type" "temp"
      (605354 'move' call_tmp[605351](43065 call isNilableClass rhs[43055]))
      (554266 'move' tmp[554264](418379 call isTrue call_tmp[605351]))
      (554271 'move' tmp[554256](554268 '_paramFoldLogical' tmp[554257] tmp[554264]))
    }
    {
      (554276 'move' tmp[554256](554273 '_paramFoldLogical' tmp[554257] 0))
    }
    (43068 call ! tmp[554256])
  }
  function =[43145](ref arg lhs[43142]:_shared[32](?), in arg rhs[43148]:_owned[30](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605360] "expr temp" "maybe param" "maybe type" "temp"
    (605363 'move' call_tmp[605360](43172 call(43168 call (partial) release _mt[243] rhs[43148])))
    (43174 call(43164 call (partial) retain _mt[243] lhs[43142]) call_tmp[605360])
    (505483 return _void[55])
  }
  where {
    unknown tmp[418396] "maybe param" "temp"
    (418407 'move' tmp[418396](43154 call isNonNilableClass lhs[43142]))
    unknown call_tmp[605365] "expr temp" "maybe param" "maybe type" "temp"
    (605368 'move' call_tmp[605365](418409 call _cond_invalid tmp[418396]))
    if call_tmp[605365]
    {
      (418412 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554283] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554284] "maybe param" "temp"
    unknown call_tmp[605370] "expr temp" "maybe param" "maybe type" "temp"
    (605373 'move' call_tmp[605370](418397 call isTrue tmp[418396]))
    (554289 'move' tmp[554284](554287 call _cond_test call_tmp[605370]))
    if tmp[554284]
    {
      unknown tmp[554291] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605375] "expr temp" "maybe param" "maybe type" "temp"
      (605378 'move' call_tmp[605375](43158 call isNilableClass rhs[43148]))
      (554293 'move' tmp[554291](418400 call isTrue call_tmp[605375]))
      (554298 'move' tmp[554283](554295 '_paramFoldLogical' tmp[554284] tmp[554291]))
    }
    {
      (554303 'move' tmp[554283](554300 '_paramFoldLogical' tmp[554284] 0))
    }
    (43161 call ! tmp[554283])
  }
  function =[43186](ref arg lhs[43183]:_shared[32](?), arg rhs[43189]:_nilType[42]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (43203 call(43199 call (partial) clear _mt[243] lhs[43183]))
    (505485 return _void[55])
  }
  where {
    unknown call_tmp[605382] "expr temp" "maybe param" "maybe type" "temp"
    (605385 'move' call_tmp[605382](43195 call isNonNilableClass lhs[43183]))
    (43196 call ! call_tmp[605382])
  }
  function <=>[43215](ref arg lhs[43212]:_shared[32](?), ref arg rhs[43218]:_shared[32](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[605389] "expr temp" "maybe param" "maybe type" "temp"
    (605392 'move' call_tmp[605389](43222 call chpl_pn _mt[243] lhs[43212]))
    unknown call_tmp[605396] "expr temp" "maybe param" "maybe type" "temp"
    (605399 'move' call_tmp[605396](43226 call chpl_pn _mt[243] rhs[43218]))
    (43229 call <=> call_tmp[605389] call_tmp[605396])
    (474252 'end of statement')
    unknown call_tmp[605403] "expr temp" "maybe param" "maybe type" "temp"
    (605406 'move' call_tmp[605403](43234 call chpl_p _mt[243] lhs[43212]))
    unknown call_tmp[605410] "expr temp" "maybe param" "maybe type" "temp"
    (605413 'move' call_tmp[605410](43238 call chpl_p _mt[243] rhs[43218]))
    (43241 call <=> call_tmp[605403] call_tmp[605410])
    (505487 return _void[55])
  }
  function chpl__autoDestroy[43252](ref arg x[43249]:_shared[32](?)) : _unknown[51] "auto destroy fn" "no doc" "no return value for void"
  {
    unknown call_tmp[605415] "expr temp" "maybe param" "maybe type" "temp"
    (605418 'move' call_tmp[605415](43259 'deref' x[43249]))
    (43260 'call destructor' call_tmp[605415])
    (505489 return _void[55])
  }
  function _shared[32](?).readWriteThis[43270](arg _mt[43275]:_MT[238], arg this[43272]:_shared[32](?) :
  _shared[32](?), arg f[43268]:_any[178](?)) : _unknown[51] throws "method" "no doc" "no return value for void"
  {
    unknown call_tmp[605422] "expr temp" "maybe param" "maybe type" "temp"
    (605425 'move' call_tmp[605422](43279 call chpl_p _mt[243] this[43272]))
    (43282 call <~> f[43268] call_tmp[605422])
    (505491 return _void[55])
  }
  function _cast[43294](arg t[43291]:borrowed[211](?), const  ref arg x[43297]:_shared[32](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505495] "RVV" "temp"
    unknown call_tmp[605429] "expr temp" "maybe param" "maybe type" "temp"
    (605432 'move' call_tmp[605429](43315 call(43311 call (partial) borrow _mt[243] x[43297])))
    (505500 'move' ret[505495](505499 'deref' call_tmp[605429]))
    (505497 return ret[505495])
  }
  where {
    unknown call_tmp[605436] "expr temp" "maybe param" "maybe type" "temp"
    (605439 'move' call_tmp[605436](43304 call chpl_t _mt[243] x[43297]))
    (354243 'is_subtype' call_tmp[605436] t[43291])
  }
  function _cast[43331](arg t[43328]:shared?[415423](?), in arg x[43336]:shared[415427](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505504] "RVV" "temp"
    unknown call_tmp[605443] "expr temp" "maybe param" "maybe type" "temp"
    (605446 'move' call_tmp[605443](43359 call chpl_t _mt[243] t[43328]))
    unknown call_tmp[605448] "expr temp" "maybe param" "maybe type" "temp"
    (605451 'move' call_tmp[605448](43363 call _to_nilable call_tmp[605443]))
    unknown call_tmp[605453] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605456 'move' call_tmp[605453](747810 'new' _shared[32](?) 1 call_tmp[605448] x[43336]))
    (505509 'move' ret[505504](505508 'deref' call_tmp[605453]))
    (505506 return ret[505504])
  }
  where {
    unknown call_tmp[605460] "expr temp" "maybe param" "maybe type" "temp"
    (605463 'move' call_tmp[605460](43347 call chpl_t _mt[243] t[43328]))
    unknown call_tmp[605465] "expr temp" "maybe param" "maybe type" "temp"
    (605468 'move' call_tmp[605465](43351 call _to_nonnil call_tmp[605460]))
    unknown call_tmp[605472] "expr temp" "maybe param" "maybe type" "temp"
    (605475 'move' call_tmp[605472](43341 call chpl_t _mt[243] x[43336]))
    (354244 'is_subtype' call_tmp[605465] call_tmp[605472])
  }
  function _cast[43381](arg t[43378]:shared?[415423](?), in arg x[43387]:shared?[415423](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505513] "RVV" "temp"
    unknown call_tmp[605479] "expr temp" "maybe param" "maybe type" "temp"
    (605482 'move' call_tmp[605479](43406 call chpl_t _mt[243] t[43378]))
    unknown call_tmp[605484] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605487 'move' call_tmp[605484](747811 'new' _shared[32](?) 1 call_tmp[605479] x[43387]))
    (505518 'move' ret[505513](505517 'deref' call_tmp[605484]))
    (505515 return ret[505513])
  }
  where {
    unknown call_tmp[605491] "expr temp" "maybe param" "maybe type" "temp"
    (605494 'move' call_tmp[605491](43397 call chpl_t _mt[243] t[43378]))
    unknown call_tmp[605498] "expr temp" "maybe param" "maybe type" "temp"
    (605501 'move' call_tmp[605498](43392 call chpl_t _mt[243] x[43387]))
    (354245 'is_subtype' call_tmp[605491] call_tmp[605498])
  }
  function _cast[43425](arg t[43422]:shared[415427](?), in arg x[43430]:shared[415427](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505522] "RVV" "temp"
    unknown call_tmp[605505] "expr temp" "maybe param" "maybe type" "temp"
    (605508 'move' call_tmp[605505](43449 call chpl_t _mt[243] t[43422]))
    unknown call_tmp[605510] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605513 'move' call_tmp[605510](747812 'new' _shared[32](?) 1 call_tmp[605505] x[43430]))
    (505527 'move' ret[505522](505526 'deref' call_tmp[605510]))
    (505524 return ret[505522])
  }
  where {
    unknown call_tmp[605517] "expr temp" "maybe param" "maybe type" "temp"
    (605520 'move' call_tmp[605517](43440 call chpl_t _mt[243] t[43422]))
    unknown call_tmp[605524] "expr temp" "maybe param" "maybe type" "temp"
    (605527 'move' call_tmp[605524](43435 call chpl_t _mt[243] x[43430]))
    (354246 'is_subtype' call_tmp[605517] call_tmp[605524])
  }
  function _cast[43468](arg t[43465]:shared[415427](?), in arg x[43474]:shared?[415423](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505531] "RVV" "temp"
    unknown call_tmp[605531] "expr temp" "maybe param" "maybe type" "temp"
    (605534 'move' call_tmp[605531](43492 call chpl_p _mt[243] x[43474]))
    unknown call_tmp[605536] "expr temp" "maybe param" "maybe type" "temp"
    (605539 'move' call_tmp[605536](43496 call == call_tmp[605531] nil[44]))
    unknown call_tmp[605541] "expr temp" "maybe param" "maybe type" "temp"
    (605544 'move' call_tmp[605541](43507 call _cond_test call_tmp[605536]))
    if call_tmp[605541]
    {
      unknown call_tmp[605546] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605549 'move' call_tmp[605546](747813 'new' NilClassError[368328](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605551] "expr temp" "maybe param" "maybe type" "temp"
      (605554 'move' call_tmp[605551](468076 call chpl_fix_thrown_error call_tmp[605546]))
      (43504 'throw' call_tmp[605551])
    }
    unknown call_tmp[605558] "expr temp" "maybe param" "maybe type" "temp"
    (605561 'move' call_tmp[605558](43518 call chpl_t _mt[243] t[43465]))
    unknown call_tmp[605563] "expr temp" "maybe param" "maybe type" "temp"
    (605566 'move' call_tmp[605563](43522 call _to_nonnil call_tmp[605558]))
    unknown call_tmp[605568] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605571 'move' call_tmp[605568](747814 'new' _shared[32](?) 1 call_tmp[605563] x[43474]))
    (505536 'move' ret[505531](505535 'deref' call_tmp[605568]))
    (505533 return ret[505531])
  }
  where {
    unknown call_tmp[605575] "expr temp" "maybe param" "maybe type" "temp"
    (605578 'move' call_tmp[605575](43487 call chpl_t _mt[243] t[43465]))
    unknown call_tmp[605582] "expr temp" "maybe param" "maybe type" "temp"
    (605585 'move' call_tmp[605582](43480 call chpl_t _mt[243] x[43474]))
    unknown call_tmp[605587] "expr temp" "maybe param" "maybe type" "temp"
    (605590 'move' call_tmp[605587](43484 call _to_nonnil call_tmp[605582]))
    (354247 'is_subtype' call_tmp[605575] call_tmp[605587])
  }
  function _cast[43538](arg t[43535]:shared[415427](?), const  ref arg x[43544]:shared?[415423](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505540] "RVV" "temp"
    unknown call_tmp[605594] "expr temp" "maybe param" "maybe type" "temp"
    (605597 'move' call_tmp[605594](43562 call chpl_p _mt[243] x[43544]))
    unknown call_tmp[605599] "expr temp" "maybe param" "maybe type" "temp"
    (605602 'move' call_tmp[605599](43566 call == call_tmp[605594] nil[44]))
    unknown call_tmp[605604] "expr temp" "maybe param" "maybe type" "temp"
    (605607 'move' call_tmp[605604](43577 call _cond_test call_tmp[605599]))
    if call_tmp[605604]
    {
      unknown call_tmp[605609] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605612 'move' call_tmp[605609](747815 'new' NilClassError[368328](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605614] "expr temp" "maybe param" "maybe type" "temp"
      (605617 'move' call_tmp[605614](468078 call chpl_fix_thrown_error call_tmp[605609]))
      (43574 'throw' call_tmp[605614])
    }
    unknown call_tmp[605621] "expr temp" "maybe param" "maybe type" "temp"
    (605624 'move' call_tmp[605621](43589 call chpl_t _mt[243] t[43535]))
    unknown call_tmp[605626] "expr temp" "maybe param" "maybe type" "temp"
    (605629 'move' call_tmp[605626](43593 call _to_unmanaged call_tmp[605621]))
    unknown call_tmp[605631] "expr temp" "maybe param" "maybe type" "temp"
    (605634 'move' call_tmp[605631](43595 call _to_nonnil call_tmp[605626]))
    unknown call_tmp[605638] "expr temp" "maybe param" "maybe type" "temp"
    (605641 'move' call_tmp[605638](43583 call chpl_p _mt[243] x[43544]))
    unknown call_tmp[605643] "maybe param" "maybe type" "temp"
    (605646 'move' call_tmp[605643](43596 call _cast call_tmp[605631] call_tmp[605638]))
    unknown p[43599] "dead at end of block" "insert auto destroy"
    (540630 'init var' p[43599] call_tmp[605643])
    (43602 'end of statement')
    unknown call_tmp[605648] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605651 'move' call_tmp[605648](43609 'typeof' p[43599]))
    unknown call_tmp[605653] "expr temp" "maybe param" "maybe type" "temp"
    (605656 'move' call_tmp[605653](43611 call _to_borrowed call_tmp[605648]))
    unknown call_tmp[605660] "expr temp" "maybe param" "maybe type" "temp"
    (605663 'move' call_tmp[605660](43614 call chpl_pn _mt[243] x[43544]))
    unknown call_tmp[605665] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605668 'move' call_tmp[605665](747816 'new' _shared[32](?) 1 call_tmp[605653] p[43599] call_tmp[605660]))
    (505545 'move' ret[505540](505544 'deref' call_tmp[605665]))
    gotoReturn _end__cast[505538] _end__cast[505538]
    (474263 'end of statement' p[43599] p[43599])
    label _end__cast[505538]
    (505542 return ret[505540])
  }
  where {
    unknown call_tmp[605672] "expr temp" "maybe param" "maybe type" "temp"
    (605675 'move' call_tmp[605672](43555 call chpl_t _mt[243] x[43544]))
    unknown call_tmp[605677] "expr temp" "maybe param" "maybe type" "temp"
    (605680 'move' call_tmp[605677](43559 call _to_nonnil call_tmp[605672]))
    unknown call_tmp[605684] "expr temp" "maybe param" "maybe type" "temp"
    (605687 'move' call_tmp[605684](43549 call chpl_t _mt[243] t[43535]))
    (354248 'is_proper_subtype' call_tmp[605677] call_tmp[605684])
  }
  function _cast[43631](arg t[43628]:shared[415427](?), const  ref arg x[43636]:shared[415427](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505551] "RVV" "temp"
    unknown call_tmp[605691] "expr temp" "maybe param" "maybe type" "temp"
    (605694 'move' call_tmp[605691](43657 call chpl_t _mt[243] t[43628]))
    unknown call_tmp[605696] "expr temp" "maybe param" "maybe type" "temp"
    (605699 'move' call_tmp[605696](43661 call _to_unmanaged call_tmp[605691]))
    unknown call_tmp[605701] "expr temp" "maybe param" "maybe type" "temp"
    (605704 'move' call_tmp[605701](43663 call _to_nonnil call_tmp[605696]))
    unknown call_tmp[605708] "expr temp" "maybe param" "maybe type" "temp"
    (605711 'move' call_tmp[605708](43651 call chpl_p _mt[243] x[43636]))
    unknown call_tmp[605713] "maybe param" "maybe type" "temp"
    (605716 'move' call_tmp[605713](43664 call _cast call_tmp[605701] call_tmp[605708]))
    unknown p[43667] "dead at end of block" "insert auto destroy"
    (540632 'init var' p[43667] call_tmp[605713])
    (43670 'end of statement')
    unknown call_tmp[605718] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605721 'move' call_tmp[605718](43678 'typeof' p[43667]))
    unknown call_tmp[605723] "expr temp" "maybe param" "maybe type" "temp"
    (605726 'move' call_tmp[605723](43680 call _to_borrowed call_tmp[605718]))
    unknown call_tmp[605730] "expr temp" "maybe param" "maybe type" "temp"
    (605733 'move' call_tmp[605730](43683 call chpl_pn _mt[243] x[43636]))
    unknown call_tmp[605735] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605738 'move' call_tmp[605735](747817 'new' _shared[32](?) 1 call_tmp[605723] p[43667] call_tmp[605730]))
    (505556 'move' ret[505551](505555 'deref' call_tmp[605735]))
    gotoReturn _end__cast[505549] _end__cast[505549]
    (474266 'end of statement' p[43667] p[43667])
    label _end__cast[505549]
    (505553 return ret[505551])
  }
  where {
    unknown call_tmp[605742] "expr temp" "maybe param" "maybe type" "temp"
    (605745 'move' call_tmp[605742](43646 call chpl_t _mt[243] x[43636]))
    unknown call_tmp[605749] "expr temp" "maybe param" "maybe type" "temp"
    (605752 'move' call_tmp[605749](43641 call chpl_t _mt[243] t[43628]))
    (354249 'is_proper_subtype' call_tmp[605742] call_tmp[605749])
  }
  function _cast[43701](arg t[43698]:shared?[415423](?), const  ref arg x[43707]:shared?[415423](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505562] "RVV" "temp"
    unknown call_tmp[605756] "expr temp" "maybe param" "maybe type" "temp"
    (605759 'move' call_tmp[605756](43728 call chpl_t _mt[243] t[43698]))
    unknown call_tmp[605761] "expr temp" "maybe param" "maybe type" "temp"
    (605764 'move' call_tmp[605761](43732 call _to_unmanaged call_tmp[605756]))
    unknown call_tmp[605766] "expr temp" "maybe param" "maybe type" "temp"
    (605769 'move' call_tmp[605766](43734 call _to_nilable call_tmp[605761]))
    unknown call_tmp[605773] "expr temp" "maybe param" "maybe type" "temp"
    (605776 'move' call_tmp[605773](43722 call chpl_p _mt[243] x[43707]))
    unknown call_tmp[605778] "maybe param" "maybe type" "temp"
    (605781 'move' call_tmp[605778](43735 call _cast call_tmp[605766] call_tmp[605773]))
    unknown p[43737] "dead at end of block" "insert auto destroy"
    (540634 'init var' p[43737] call_tmp[605778])
    (43740 'end of statement')
    unknown call_tmp[605783] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605786 'move' call_tmp[605783](43748 'typeof' p[43737]))
    unknown call_tmp[605788] "expr temp" "maybe param" "maybe type" "temp"
    (605791 'move' call_tmp[605788](43750 call _to_borrowed call_tmp[605783]))
    unknown call_tmp[605795] "expr temp" "maybe param" "maybe type" "temp"
    (605798 'move' call_tmp[605795](43753 call chpl_pn _mt[243] x[43707]))
    unknown call_tmp[605800] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605803 'move' call_tmp[605800](747818 'new' _shared[32](?) 1 call_tmp[605788] p[43737] call_tmp[605795]))
    (505567 'move' ret[505562](505566 'deref' call_tmp[605800]))
    gotoReturn _end__cast[505560] _end__cast[505560]
    (474269 'end of statement' p[43737] p[43737])
    label _end__cast[505560]
    (505564 return ret[505562])
  }
  where {
    unknown call_tmp[605807] "expr temp" "maybe param" "maybe type" "temp"
    (605810 'move' call_tmp[605807](43717 call chpl_t _mt[243] x[43707]))
    unknown call_tmp[605814] "expr temp" "maybe param" "maybe type" "temp"
    (605817 'move' call_tmp[605814](43712 call chpl_t _mt[243] t[43698]))
    (354250 'is_proper_subtype' call_tmp[605807] call_tmp[605814])
  }
  function _cast[43771](arg t[43768]:shared?[415423](?), const  ref arg x[43776]:shared[415427](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505573] "RVV" "temp"
    unknown call_tmp[605821] "expr temp" "maybe param" "maybe type" "temp"
    (605824 'move' call_tmp[605821](43800 call chpl_t _mt[243] t[43768]))
    unknown call_tmp[605826] "expr temp" "maybe param" "maybe type" "temp"
    (605829 'move' call_tmp[605826](43804 call _to_unmanaged call_tmp[605821]))
    unknown call_tmp[605831] "expr temp" "maybe param" "maybe type" "temp"
    (605834 'move' call_tmp[605831](43806 call _to_nilable call_tmp[605826]))
    unknown call_tmp[605838] "expr temp" "maybe param" "maybe type" "temp"
    (605841 'move' call_tmp[605838](43794 call chpl_p _mt[243] x[43776]))
    unknown call_tmp[605843] "maybe param" "maybe type" "temp"
    (605846 'move' call_tmp[605843](43807 call _cast call_tmp[605831] call_tmp[605838]))
    unknown p[43809] "dead at end of block" "insert auto destroy"
    (540636 'init var' p[43809] call_tmp[605843])
    (43812 'end of statement')
    unknown call_tmp[605848] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605851 'move' call_tmp[605848](43820 'typeof' p[43809]))
    unknown call_tmp[605853] "expr temp" "maybe param" "maybe type" "temp"
    (605856 'move' call_tmp[605853](43822 call _to_borrowed call_tmp[605848]))
    unknown call_tmp[605860] "expr temp" "maybe param" "maybe type" "temp"
    (605863 'move' call_tmp[605860](43825 call chpl_pn _mt[243] x[43776]))
    unknown call_tmp[605865] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605868 'move' call_tmp[605865](747819 'new' _shared[32](?) 1 call_tmp[605853] p[43809] call_tmp[605860]))
    (505578 'move' ret[505573](505577 'deref' call_tmp[605865]))
    gotoReturn _end__cast[505571] _end__cast[505571]
    (474272 'end of statement' p[43809] p[43809])
    label _end__cast[505571]
    (505575 return ret[505573])
  }
  where {
    unknown call_tmp[605872] "expr temp" "maybe param" "maybe type" "temp"
    (605875 'move' call_tmp[605872](43787 call chpl_t _mt[243] x[43776]))
    unknown call_tmp[605877] "expr temp" "maybe param" "maybe type" "temp"
    (605880 'move' call_tmp[605877](43791 call _to_nilable call_tmp[605872]))
    unknown call_tmp[605884] "expr temp" "maybe param" "maybe type" "temp"
    (605887 'move' call_tmp[605884](43781 call chpl_t _mt[243] t[43768]))
    (354251 'is_proper_subtype' call_tmp[605877] call_tmp[605884])
  }
  function _cast[43840](arg t[43837]:_shared[32](?), arg x[43843]:_nilType[42]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505584] "RVV" "temp"
    unknown call_tmp[605891] "expr temp" "maybe param" "maybe type" "temp"
    (605894 'move' call_tmp[605891](43848 call chpl_t _mt[243] t[43837]))
    unknown call_tmp[605896] "expr temp" "maybe param" "maybe type" "temp"
    (605899 'move' call_tmp[605896](43852 call isNonNilableClass call_tmp[605891]))
    unknown call_tmp[605901] "expr temp" "maybe param" "maybe type" "temp"
    (605904 'move' call_tmp[605901](43874 call _cond_test call_tmp[605896]))
    if call_tmp[605901]
    {
      (43872 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[43881] "dead at end of block" "insert auto destroy"
    (540638 'default init var' tmp[43881] t[43837])
    (43884 'end of statement')
    (505589 'move' ret[505584](505588 'deref' tmp[43881]))
    gotoReturn _end__cast[505582] _end__cast[505582]
    (474276 'end of statement' tmp[43881])
    label _end__cast[505582]
    (505586 return ret[505584])
  }
  function postfix![43896](arg x[43893]:_shared[32](?)) : _unknown[51] "always propagate line file info" "inline" "no doc"
  {
    unknown ret[505595] "RVV" "temp"
    unknown tmp[418417] "maybe param" "temp"
    (418428 'move' tmp[418417] 1)
    unknown call_tmp[605906] "expr temp" "maybe param" "maybe type" "temp"
    (605909 'move' call_tmp[605906](418430 call _cond_invalid tmp[418417]))
    if call_tmp[605906]
    {
      (418433 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554310] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554311] "maybe param" "temp"
    unknown call_tmp[605911] "expr temp" "maybe param" "maybe type" "temp"
    (605914 'move' call_tmp[605911](418418 call isTrue tmp[418417]))
    (554316 'move' tmp[554311](554314 call _cond_test call_tmp[605911]))
    if tmp[554311]
    {
      (554321 'move' tmp[554310](554318 '_paramFoldLogical' tmp[554311] 1))
    }
    {
      unknown tmp[554323] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (554325 'move' tmp[554323](418422 call isTrue enablePostfixBangChecks[324]))
      (554330 'move' tmp[554310](554327 '_paramFoldLogical' tmp[554311] tmp[554323]))
    }
    unknown call_tmp[605916] "expr temp" "maybe param" "maybe type" "temp"
    (605919 'move' call_tmp[605916](43945 call _cond_test tmp[554310]))
    if call_tmp[605916]
    {
      unknown call_tmp[605923] "expr temp" "maybe param" "maybe type" "temp"
      (605926 'move' call_tmp[605923](43908 call chpl_t _mt[243] x[43893]))
      unknown call_tmp[605928] "expr temp" "maybe param" "maybe type" "temp"
      (605931 'move' call_tmp[605928](43912 call _to_nilable call_tmp[605923]))
      unknown call_tmp[605935] "expr temp" "maybe param" "maybe type" "temp"
      (605938 'move' call_tmp[605935](43914 call chpl_t _mt[243] x[43893]))
      unknown call_tmp[605940] "expr temp" "maybe param" "maybe type" "temp"
      (605943 'move' call_tmp[605940](43917 call == call_tmp[605928] call_tmp[605935]))
      unknown call_tmp[605945] "expr temp" "maybe param" "maybe type" "temp"
      (605948 'move' call_tmp[605945](43940 call _cond_test call_tmp[605940]))
      if call_tmp[605945]
      {
        unknown call_tmp[605952] "expr temp" "maybe param" "maybe type" "temp"
        (605955 'move' call_tmp[605952](43920 call chpl_p _mt[243] x[43893]))
        unknown call_tmp[605957] "expr temp" "maybe param" "maybe type" "temp"
        (605960 'move' call_tmp[605957](43924 call == call_tmp[605952] nil[44]))
        unknown call_tmp[605962] "expr temp" "maybe param" "maybe type" "temp"
        (605965 'move' call_tmp[605962](43935 call _cond_test call_tmp[605957]))
        if call_tmp[605962]
        {
          (43932 call nilCheckHalt module=[255] HaltWrappers[210018] "argument to ! is nil")
          (357117 'referenced modules list' HaltWrappers[210018])
        }
      }
    }
    unknown call_tmp[605969] "expr temp" "maybe param" "maybe type" "temp"
    (605972 'move' call_tmp[605969](43951 call chpl_p _mt[243] x[43893]))
    unknown call_tmp[605974] "expr temp" "maybe param" "maybe type" "temp"
    (605977 'move' call_tmp[605974](43955 call _to_nonnil call_tmp[605969]))
    (505600 'move' ret[505595](505599 'deref' call_tmp[605974]))
    (505597 return ret[505595])
    (355076 'used modules list'(43899 'import' HaltWrappers[210018]))
  }
  (355071 'used modules list'(41672 'use' ChapelError[167899])(41674 'use' Atomics[43964])(41675 'use' ChapelBase[307])(41678 'use' OwnedObject[39586]))
}