AST dump for SharedObject after pass normalize.
Module use list: ChapelError Atomics ChapelBase OwnedObject HaltWrappers 

{
  function chpl__init_SharedObject[416043]() : void[4] "insert line file info" "module init"
  {
    (505680 return _void[55])
  }
  function ReferenceCount[41754].init[41690](arg _mt[41758]:_MT[238], arg this[41756]:ReferenceCount[41754]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[454380] "temporary of super field" "temp"
    (454388 'move' super_tmp[454380](454381 '.v' this[41756] c"super"))
    (454384 call init _mt[243] super_tmp[454380])
    (474230 'end of statement')
    unknown tmp[454351] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491673] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[604494] "expr temp" "maybe param" "maybe type" "temp"
      (604497 'move' call_tmp[604494](454353 '.v' this[41756] c"super"))
      (491677 'move' call_type_tmp[491673](454356 'typeof' call_tmp[604494]))
    }
    (454357 'move' tmp[454351] call_type_tmp[491673])
    unknown call_tmp[604499] "maybe param" "maybe type" "temp"
    (604502 'move' call_tmp[604499](454362 'cast' tmp[454351] this[41756]))
    unknown chpl__thisAsParent[454359] "dead at end of block" "insert auto destroy" "temp"
    (540693 'init var' chpl__thisAsParent[454359] call_tmp[604499] tmp[454351])
    (454365 'setcid' chpl__thisAsParent[454359])
    (474231 'end of statement')
    unknown tmp[454367] "temp"
    unknown call_tmp[604504] "expr temp" "maybe param" "maybe type" "temp"
    (604507 'move' call_tmp[604504](454370 call chpl__atomicType int(64)[13]))
    (454372 'default init var' tmp[454367] call_tmp[604504])
    (454374 '.=' this[41756] c"count" tmp[454367])
    (474232 'end of statement')
    (454379 'setcid' this[41756])
    (474233 'end of statement')
    unknown call_tmp[604511] "expr temp" "maybe param" "maybe type" "temp"
    (604514 'move' call_tmp[604511](357075 call count _mt[243] this[41756]))
    (41708 call(41703 call (partial) write _mt[243] call_tmp[604511]) 1)
    (505455 return _void[55])
  }
  function ReferenceCount[41754].retain[41714](arg _mt[41762]:_MT[238], arg this[41760]:ReferenceCount[41754]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604520] "expr temp" "maybe param" "maybe type" "temp"
    (604523 'move' call_tmp[604520](357080 call count _mt[243] this[41760]))
    (41722 call(41717 call (partial) add _mt[243] call_tmp[604520]) 1)
    (505457 return _void[55])
  }
  function ReferenceCount[41754].release[41729](arg _mt[41766]:_MT[238], arg this[41764]:ReferenceCount[41754]) : _unknown[51] "method" "primary method"
  {
    unknown ret[505461] "RVV" "temp"
    unknown call_tmp[604529] "expr temp" "maybe param" "maybe type" "temp"
    (604532 'move' call_tmp[604529](357085 call count _mt[243] this[41764]))
    unknown call_tmp[604536] "maybe param" "maybe type" "temp"
    (604539 'move' call_tmp[604536](41739 call(41734 call (partial) fetchSub _mt[243] call_tmp[604529]) 1))
    unknown oldValue[41740] "dead at end of block" "insert auto destroy"
    (540695 'init var' oldValue[41740] call_tmp[604536])
    (41743 'end of statement')
    unknown call_tmp[604541] "expr temp" "maybe param" "maybe type" "temp"
    (604544 'move' call_tmp[604541](41747 call - oldValue[41740] 1))
    (505466 'move' ret[505461](505465 'deref' call_tmp[604541]))
    gotoReturn _end_release[505459] _end_release[505459]
    (474236 'end of statement' oldValue[41740])
    label _end_release[505459]
    (505463 return ret[505461])
  }
  type ReferenceCount[41754] val super[355715]:object[22] "super class" unknown count[41684](41682 call chpl__atomicType int(64)[13])
  type unmanaged ReferenceCount?[415493]
  type ReferenceCount?[415490](?)
  type ReferenceCount[370713](?)
  function _shared[32](?).chpl_forwarding_expr2[41784](arg _mt[42959]:_MT[238], arg this[42957]:_shared[32](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[505472] "RVV" "temp"
    (505476 'move' ret[505472](41783 call(370709 call (partial) borrow _mt[243] this[42957])))
    (505474 return ret[505472])
  }
  function _shared[32](?).init[41801](arg _mt[42963]:_MT[238], ref arg this[42961]:_shared[32](?), arg chpl_t[41799]:_any[178](?)) : void[4] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604548] "expr temp" "maybe param" "maybe type" "temp"
    (604551 'move' call_tmp[604548](41806 call isClass chpl_t[41799]))
    unknown call_tmp[604553] "expr temp" "maybe param" "maybe type" "temp"
    (604556 'move' call_tmp[604553](41807 call ! call_tmp[604548]))
    unknown call_tmp[604558] "expr temp" "maybe param" "maybe type" "temp"
    (604561 'move' call_tmp[604558](41830 call _cond_test call_tmp[604553]))
    if call_tmp[604558]
    {
      (41828 call compilerError "shared only works with classes")
    }
    unknown tmp[454391] "temp" "type variable"
    (454393 'move' tmp[454391](41843 call _to_borrowed chpl_t[41799]))
    (454395 'init field' this[42961] c"chpl_t" tmp[454391])
    (474239 'end of statement')
    unknown call_tmp[604563] "expr temp" "maybe param" "maybe type" "temp"
    (604566 'move' call_tmp[604563](454409 '.v' this[42961] c"chpl_t"))
    unknown call_tmp[604568] "maybe param" "maybe type" "temp"
    (604571 'move' call_tmp[604568](454401 'to nilable class' call_tmp[604563]))
    unknown tmp[454399] "temp"
    (454403 'init var' tmp[454399] nil[44] call_tmp[604568])
    (454405 'init field' this[42961] c"chpl_p" tmp[454399])
    (474240 'end of statement')
    unknown tmp[454412] "temp"
    (454415 'init var' tmp[454412] nil[44] unmanaged ReferenceCount?[415493])
    (454417 'init field' this[42961] c"chpl_pn" tmp[454412])
    (474241 'end of statement')
    (505478 return _void[55])
  }
  function _shared[32](?).init[41873](arg _mt[42967]:_MT[238], ref arg this[42965]:_shared[32](?), arg p[41870]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (41894 call compilerError "cannot initialize shared from a borrow")
    (474242 'end of statement')
    unknown call_tmp[604575] "expr temp" "maybe param" "maybe type" "temp"
    (604578 'move' call_tmp[604575](41904 call _to_unmanaged p[41870]))
    (41906 call(41898 call (partial) init _mt[243] this[42965]) call_tmp[604575])
    (505480 return _void[55])
  }
  function _shared[32](?).init[41916](arg _mt[42971]:_MT[238], ref arg this[42969]:_shared[32](?), arg p[41913]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454421] "temp" "type variable"
    unknown call_tmp[604580] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604583 'move' call_tmp[604580](41924 'typeof' p[41913]))
    (454423 'move' tmp[454421](41926 call _to_borrowed call_tmp[604580]))
    (454425 'init field' this[42969] c"chpl_t" tmp[454421])
    (474244 'end of statement')
    unknown rc[41935] "dead at end of block" "insert auto destroy"
    (540697 'init var' rc[41935] nil[44] unmanaged ReferenceCount?[415493])
    (41938 'end of statement')
    unknown call_tmp[604585] "expr temp" "maybe param" "maybe type" "temp"
    (604588 'move' call_tmp[604585](41941 call != p[41913] nil[44]))
    unknown call_tmp[604590] "expr temp" "maybe param" "maybe type" "temp"
    (604593 'move' call_tmp[604590](41953 call _cond_test call_tmp[604585]))
    if call_tmp[604590]
    {
      unknown call_tmp[604595] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604598 'move' call_tmp[604595](747934 'new' ReferenceCount[370713](?)(_chpl_manager = unmanaged[220](?))))
      (41950 call = rc[41935] call_tmp[604595])
      (474245 'end of statement' rc[41935])
    }
    unknown call_tmp[604600] "maybe param" "maybe type" "temp"
    (604603 'move' call_tmp[604600](41965 call _to_borrowed p[41913]))
    unknown call_tmp[604605] "expr temp" "maybe param" "maybe type" "temp"
    (604608 'move' call_tmp[604605](454439 '.v' this[42969] c"chpl_t"))
    unknown call_tmp[604610] "maybe param" "maybe type" "temp"
    (604613 'move' call_tmp[604610](454431 'to nilable class' call_tmp[604605]))
    unknown tmp[454429] "temp"
    (454433 'init var' tmp[454429] call_tmp[604600] call_tmp[604610])
    (454435 'init field' this[42969] c"chpl_p" tmp[454429])
    (474247 'end of statement')
    unknown tmp[454442] "temp"
    (454445 'init var' tmp[454442] rc[41935] unmanaged ReferenceCount?[415493])
    (454447 'init field' this[42969] c"chpl_pn" tmp[454442])
    (474248 'end of statement' rc[41935])
    (505482 return _void[55])
  }
  function _shared[32](?).init[41993](arg _mt[42975]:_MT[238], ref arg this[42973]:_shared[32](?), arg p[41990]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42024 call compilerError "shared only works with classes")
    (474250 'end of statement')
    unknown tmp[454457] "temp" "type variable"
    (454459 'move' tmp[454457](454451 'typeof' p[41990]))
    (454461 'init field' this[42973] c"chpl_t" tmp[454457])
    (474251 'end of statement')
    unknown call_tmp[604615] "expr temp" "maybe param" "maybe type" "temp"
    (604618 'move' call_tmp[604615](454475 '.v' this[42973] c"chpl_t"))
    unknown call_tmp[604620] "maybe param" "maybe type" "temp"
    (604623 'move' call_tmp[604620](454467 'to nilable class' call_tmp[604615]))
    unknown tmp[454465] "temp"
    (454469 'init var' tmp[454465] p[41990] call_tmp[604620])
    (454471 'init field' this[42973] c"chpl_p" tmp[454465])
    (474252 'end of statement')
    val tmp[454479]:unmanaged ReferenceCount?[415493] "temp"
    (454482 'default init var' tmp[454479] unmanaged ReferenceCount?[415493])
    (454484 '.=' this[42973] c"chpl_pn" tmp[454479])
    (474253 'end of statement')
    (505484 return _void[55])
  }
  where {
    unknown tmp[418343] "maybe param" "temp"
    unknown tmp[418364] "maybe param" "temp"
    unknown call_tmp[604625] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604628 'move' call_tmp[604625](454453 'typeof' p[41990]))
    unknown call_tmp[604630] "expr temp" "maybe param" "maybe type" "temp"
    (604633 'move' call_tmp[604630](41998 call isClass call_tmp[604625]))
    (418375 'move' tmp[418364](42000 call == call_tmp[604630] 0))
    unknown call_tmp[604635] "expr temp" "maybe param" "maybe type" "temp"
    (604638 'move' call_tmp[604635](418377 call _cond_invalid tmp[418364]))
    if call_tmp[604635]
    {
      (418380 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554177] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554178] "maybe param" "temp"
    unknown call_tmp[604640] "expr temp" "maybe param" "maybe type" "temp"
    (604643 'move' call_tmp[604640](418365 call isTrue tmp[418364]))
    (554183 'move' tmp[554178](554181 call _cond_test call_tmp[604640]))
    if tmp[554178]
    {
      unknown tmp[554185] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604645] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604648 'move' call_tmp[604645](454455 'typeof' p[41990]))
      unknown call_tmp[604650] "expr temp" "maybe param" "maybe type" "temp"
      (604653 'move' call_tmp[604650](354307 'is_subtype' _shared[32](?) call_tmp[604645]))
      unknown call_tmp[604655] "expr temp" "maybe param" "maybe type" "temp"
      (604658 'move' call_tmp[604655](42008 call == call_tmp[604650] 0))
      (554187 'move' tmp[554185](418368 call isTrue call_tmp[604655]))
      (554192 'move' tmp[554177](554189 '_paramFoldLogical' tmp[554178] tmp[554185]))
    }
    {
      (554197 'move' tmp[554177](554194 '_paramFoldLogical' tmp[554178] 0))
    }
    (418354 'move' tmp[418343] tmp[554177])
    unknown call_tmp[604660] "expr temp" "maybe param" "maybe type" "temp"
    (604663 'move' call_tmp[604660](418356 call _cond_invalid tmp[418343]))
    if call_tmp[604660]
    {
      (418359 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554204] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554205] "maybe param" "temp"
    unknown call_tmp[604665] "expr temp" "maybe param" "maybe type" "temp"
    (604668 'move' call_tmp[604665](418344 call isTrue tmp[418343]))
    (554210 'move' tmp[554205](554208 call _cond_test call_tmp[604665]))
    if tmp[554205]
    {
      unknown tmp[554212] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604670] "expr temp" "maybe param" "maybe type" "temp"
      (604673 'move' call_tmp[604670](42015 call isIterator p[41990]))
      unknown call_tmp[604675] "expr temp" "maybe param" "maybe type" "temp"
      (604678 'move' call_tmp[604675](42017 call == call_tmp[604670] 0))
      (554214 'move' tmp[554212](418347 call isTrue call_tmp[604675]))
      (554219 'move' tmp[554204](554216 '_paramFoldLogical' tmp[554205] tmp[554212]))
    }
    {
      (554224 'move' tmp[554204](554221 '_paramFoldLogical' tmp[554205] 0))
    }
    (748367 call chpl_statementLevelSymbol tmp[554204])
  }
  function _shared[32](?).init[42052](arg _mt[42979]:_MT[238], ref arg this[42977]:_shared[32](?), in arg take[42049]:_owned[30](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604682] "maybe param" "maybe type" "temp"
    (604685 'move' call_tmp[604682](42059 call(42055 call (partial) release _mt[243] take[42049])))
    unknown p[42060] "dead at end of block" "insert auto destroy"
    (540699 'init var' p[42060] call_tmp[604682])
    (42063 'end of statement')
    unknown tmp[454488] "temp" "type variable"
    unknown tmp[554231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554232] "maybe param" "temp"
    unknown call_tmp[604687] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604690 'move' call_tmp[604687](42070 'typeof' this[42977]))
    unknown call_tmp[604694] "expr temp" "maybe param" "maybe type" "temp"
    (604697 'move' call_tmp[604694](42071 call chpl_t _mt[243] call_tmp[604687]))
    unknown call_tmp[604699] "expr temp" "maybe param" "maybe type" "temp"
    (604702 'move' call_tmp[604699](42075 call == call_tmp[604694] ?[260]))
    (554237 'move' tmp[554232](554235 call _cond_test call_tmp[604699]))
    if tmp[554232]
    {
      unknown tmp[554239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604704] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604707 'move' call_tmp[604704](42079 'typeof' p[42060]))
      (554241 'move' tmp[554239](42081 call _to_borrowed call_tmp[604704]))
      (554246 'move' tmp[554231](554243 '_paramFoldLogical' tmp[554232] tmp[554239]))
    }
    {
      unknown tmp[554248] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604712 'move' call_tmp[604709](42083 'typeof' this[42977]))
      (554250 'move' tmp[554248](42084 call chpl_t _mt[243] call_tmp[604709]))
      (554255 'move' tmp[554231](554252 '_paramFoldLogical' tmp[554232] tmp[554248]))
    }
    (454490 'move' tmp[454488] tmp[554231])
    (454492 'init field' this[42977] c"chpl_t" tmp[454488])
    (474254 'end of statement')
    unknown call_tmp[604716] "expr temp" "maybe param" "maybe type" "temp"
    (604719 'move' call_tmp[604716](42096 call isClass p[42060]))
    unknown call_tmp[604721] "expr temp" "maybe param" "maybe type" "temp"
    (604724 'move' call_tmp[604721](42097 call ! call_tmp[604716]))
    unknown call_tmp[604726] "expr temp" "maybe param" "maybe type" "temp"
    (604729 'move' call_tmp[604726](42104 call _cond_test call_tmp[604721]))
    if call_tmp[604726]
    {
      (42102 call compilerError "shared only works with classes")
    }
    unknown rc[42113] "dead at end of block" "insert auto destroy"
    (540701 'init var' rc[42113] nil[44] unmanaged ReferenceCount?[415493])
    (42116 'end of statement')
    unknown call_tmp[604731] "expr temp" "maybe param" "maybe type" "temp"
    (604734 'move' call_tmp[604731](42119 call != p[42060] nil[44]))
    unknown call_tmp[604736] "expr temp" "maybe param" "maybe type" "temp"
    (604739 'move' call_tmp[604736](42131 call _cond_test call_tmp[604731]))
    if call_tmp[604736]
    {
      unknown call_tmp[604741] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604744 'move' call_tmp[604741](747935 'new' ReferenceCount[370713](?)(_chpl_manager = unmanaged[220](?))))
      (42128 call = rc[42113] call_tmp[604741])
      (474256 'end of statement' rc[42113])
    }
    unknown call_tmp[604746] "expr temp" "maybe param" "maybe type" "temp"
    (604749 'move' call_tmp[604746](454506 '.v' this[42977] c"chpl_t"))
    unknown call_tmp[604751] "maybe param" "maybe type" "temp"
    (604754 'move' call_tmp[604751](454498 'to nilable class' call_tmp[604746]))
    unknown tmp[454496] "temp"
    (454500 'init var' tmp[454496] p[42060] call_tmp[604751])
    (454502 'init field' this[42977] c"chpl_p" tmp[454496])
    (474258 'end of statement' p[42060])
    unknown tmp[454509] "temp"
    (454512 'init var' tmp[454509] rc[42113] unmanaged ReferenceCount?[415493])
    (454514 'init field' this[42977] c"chpl_pn" tmp[454509])
    (474260 'end of statement' rc[42113])
    (505486 return _void[55])
  }
  function _shared[32](?).init[42167](arg _mt[42983]:_MT[238], ref arg this[42981]:_shared[32](?), arg _private[42164]:bool[10], arg t[42169]:_any[178](?), ref arg src[42172]:_shared[32](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454518] "temp" "type variable"
    (454520 'move' tmp[454518] t[42169])
    (454522 'init field' this[42981] c"chpl_t" tmp[454518])
    (474262 'end of statement')
    unknown call_tmp[604756] "expr temp" "maybe param" "maybe type" "temp"
    (604759 'move' call_tmp[604756](42196 call _to_unmanaged t[42169]))
    unknown call_tmp[604761] "expr temp" "maybe param" "maybe type" "temp"
    (604764 'move' call_tmp[604761](42198 call _to_nilable call_tmp[604756]))
    unknown call_tmp[604768] "expr temp" "maybe param" "maybe type" "temp"
    (604771 'move' call_tmp[604768](42189 call chpl_p _mt[243] src[42172]))
    unknown call_tmp[604773] "maybe param" "maybe type" "temp"
    (604776 'move' call_tmp[604773](42199 call _cast call_tmp[604761] call_tmp[604768]))
    unknown call_tmp[604778] "expr temp" "maybe param" "maybe type" "temp"
    (604781 'move' call_tmp[604778](454536 '.v' this[42981] c"chpl_t"))
    unknown call_tmp[604783] "maybe param" "maybe type" "temp"
    (604786 'move' call_tmp[604783](454528 'to nilable class' call_tmp[604778]))
    unknown tmp[454526] "temp"
    (454530 'init var' tmp[454526] call_tmp[604773] call_tmp[604783])
    (454532 'init field' this[42981] c"chpl_p" tmp[454526])
    (474263 'end of statement')
    unknown call_tmp[604790] "maybe param" "maybe type" "temp"
    (604793 'move' call_tmp[604790](42209 call chpl_pn _mt[243] src[42172]))
    unknown tmp[454539] "temp"
    (454542 'init var' tmp[454539] call_tmp[604790] unmanaged ReferenceCount?[415493])
    (454544 'init field' this[42981] c"chpl_pn" tmp[454539])
    (474264 'end of statement')
    unknown call_tmp[604797] "expr temp" "maybe param" "maybe type" "temp"
    (604800 'move' call_tmp[604797](42216 call chpl_p _mt[243] src[42172]))
    (42220 call = call_tmp[604797] nil[44])
    (474265 'end of statement')
    unknown call_tmp[604804] "expr temp" "maybe param" "maybe type" "temp"
    (604807 'move' call_tmp[604804](42224 call chpl_pn _mt[243] src[42172]))
    (42228 call = call_tmp[604804] nil[44])
    (505488 return _void[55])
  }
  function _shared[32](?).init[42239](arg _mt[42987]:_MT[238], ref arg this[42985]:_shared[32](?), arg _private[42236]:bool[10], arg t[42241]:_any[178](?), arg p[42243]:_any[178](?), arg pn[42245]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604809] "expr temp" "maybe param" "maybe type" "temp"
    (604812 'move' call_tmp[604809](42252 call _to_unmanaged t[42241]))
    unknown call_tmp[604814] "expr temp" "maybe param" "maybe type" "temp"
    (604817 'move' call_tmp[604814](42254 call _to_nilable call_tmp[604809]))
    unknown call_tmp[604819] "maybe param" "maybe type" "temp"
    (604822 'move' call_tmp[604819](42255 call _cast call_tmp[604814] p[42243]))
    unknown ptr[42257] "dead at end of block" "insert auto destroy"
    (540703 'init var' ptr[42257] call_tmp[604819])
    (42260 'end of statement')
    unknown count[42263] "dead at end of block" "insert auto destroy"
    (540705 'init var' count[42263] pn[42245])
    (42266 'end of statement')
    unknown call_tmp[604824] "expr temp" "maybe param" "maybe type" "temp"
    (604827 'move' call_tmp[604824](42269 call != ptr[42257] nil[44]))
    unknown call_tmp[604829] "expr temp" "maybe param" "maybe type" "temp"
    (604832 'move' call_tmp[604829](42287 call _cond_test call_tmp[604824]))
    if call_tmp[604829]
    {
      unknown call_tmp[604834] "expr temp" "maybe param" "maybe type" "temp"
      (604837 'move' call_tmp[604834](42272 call postfix! count[42263]))
      (42278 call(42274 call (partial) retain _mt[243] call_tmp[604834]))
      (474267 'end of statement' count[42263])
    }
    {
      (42283 call = count[42263] nil[44])
      (474269 'end of statement' count[42263])
    }
    unknown tmp[454548] "temp" "type variable"
    (454550 'move' tmp[454548] t[42241])
    (454552 'init field' this[42985] c"chpl_t" tmp[454548])
    (474271 'end of statement')
    unknown call_tmp[604841] "expr temp" "maybe param" "maybe type" "temp"
    (604844 'move' call_tmp[604841](454566 '.v' this[42985] c"chpl_t"))
    unknown call_tmp[604846] "maybe param" "maybe type" "temp"
    (604849 'move' call_tmp[604846](454558 'to nilable class' call_tmp[604841]))
    unknown tmp[454556] "temp"
    (454560 'init var' tmp[454556] ptr[42257] call_tmp[604846])
    (454562 'init field' this[42985] c"chpl_p" tmp[454556])
    (474272 'end of statement' ptr[42257])
    unknown tmp[454569] "temp"
    (454572 'init var' tmp[454569] count[42263] unmanaged ReferenceCount?[415493])
    (454574 'init field' this[42985] c"chpl_pn" tmp[454569])
    (474274 'end of statement' count[42263])
    (505490 return _void[55])
  }
  function _shared[32](?).init=[42323](arg _mt[42991]:_MT[238], ref arg this[42989]:_shared[32](?), in arg take[42320]:_owned[30](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418385] "maybe param" "temp"
    unknown call_tmp[604851] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604854 'move' call_tmp[604851](42327 'typeof' this[42989]))
    (418396 'move' tmp[418385](42329 call isNonNilableClass call_tmp[604851]))
    unknown call_tmp[604856] "expr temp" "maybe param" "maybe type" "temp"
    (604859 'move' call_tmp[604856](418398 call _cond_invalid tmp[418385]))
    if call_tmp[604856]
    {
      (418401 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554262] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554263] "maybe param" "temp"
    unknown call_tmp[604861] "expr temp" "maybe param" "maybe type" "temp"
    (604864 'move' call_tmp[604861](418386 call isTrue tmp[418385]))
    (554268 'move' tmp[554263](554266 call _cond_test call_tmp[604861]))
    if tmp[554263]
    {
      unknown tmp[554270] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604866] "expr temp" "maybe param" "maybe type" "temp"
      (604869 'move' call_tmp[604866](42333 call isNilableClass take[42320]))
      (554272 'move' tmp[554270](418389 call isTrue call_tmp[604866]))
      (554277 'move' tmp[554262](554274 '_paramFoldLogical' tmp[554263] tmp[554270]))
    }
    {
      (554282 'move' tmp[554262](554279 '_paramFoldLogical' tmp[554263] 0))
    }
    unknown call_tmp[604871] "expr temp" "maybe param" "maybe type" "temp"
    (604874 'move' call_tmp[604871](42359 call _cond_test tmp[554262]))
    if call_tmp[604871]
    {
      (42357 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (42371 call(42366 call (partial) init _mt[243] this[42989]) take[42320])
    (505492 return _void[55])
  }
  function _shared[32](?).init=[42381](arg _mt[42995]:_MT[238], ref arg this[42993]:_shared[32](?), const  ref arg src[42378]:_shared[32](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[418406] "maybe param" "temp"
    unknown call_tmp[604878] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604881 'move' call_tmp[604878](42385 'typeof' this[42993]))
    (418417 'move' tmp[418406](42387 call isNonNilableClass call_tmp[604878]))
    unknown call_tmp[604883] "expr temp" "maybe param" "maybe type" "temp"
    (604886 'move' call_tmp[604883](418419 call _cond_invalid tmp[418406]))
    if call_tmp[604883]
    {
      (418422 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554289] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554290] "maybe param" "temp"
    unknown call_tmp[604888] "expr temp" "maybe param" "maybe type" "temp"
    (604891 'move' call_tmp[604888](418407 call isTrue tmp[418406]))
    (554295 'move' tmp[554290](554293 call _cond_test call_tmp[604888]))
    if tmp[554290]
    {
      unknown tmp[554297] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604893] "expr temp" "maybe param" "maybe type" "temp"
      (604896 'move' call_tmp[604893](42391 call isNilableClass src[42378]))
      (554299 'move' tmp[554297](418410 call isTrue call_tmp[604893]))
      (554304 'move' tmp[554289](554301 '_paramFoldLogical' tmp[554290] tmp[554297]))
    }
    {
      (554309 'move' tmp[554289](554306 '_paramFoldLogical' tmp[554290] 0))
    }
    unknown call_tmp[604898] "expr temp" "maybe param" "maybe type" "temp"
    (604901 'move' call_tmp[604898](42399 call _cond_test tmp[554289]))
    if call_tmp[604898]
    {
      (42397 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    unknown call_tmp[604903] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604906 'move' call_tmp[604903](42412 'typeof' this[42993]))
    unknown call_tmp[604910] "expr temp" "maybe param" "maybe type" "temp"
    (604913 'move' call_tmp[604910](42413 call chpl_t _mt[243] call_tmp[604903]))
    unknown call_tmp[604917] "expr temp" "maybe param" "maybe type" "temp"
    (604920 'move' call_tmp[604917](42407 call chpl_t _mt[243] src[42378]))
    unknown call_tmp[604922] "expr temp" "maybe param" "maybe type" "temp"
    (604925 'move' call_tmp[604922](354308 'is_coercible' call_tmp[604910] call_tmp[604917]))
    unknown call_tmp[604927] "expr temp" "maybe param" "maybe type" "temp"
    (604930 'move' call_tmp[604927](42418 call == call_tmp[604922] 0))
    unknown call_tmp[604932] "expr temp" "maybe param" "maybe type" "temp"
    (604935 'move' call_tmp[604932](42437 call _cond_test call_tmp[604927]))
    if call_tmp[604932]
    {
      unknown call_tmp[604937] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604940 'move' call_tmp[604937](42424 'typeof' src[42378]))
      unknown call_tmp[604942] "expr temp" "maybe param" "maybe type" "temp"
      (604945 'move' call_tmp[604942](42426 call _cast string[26] call_tmp[604937]))
      unknown call_tmp[604947] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604950 'move' call_tmp[604947](42430 'typeof' this[42993]))
      unknown call_tmp[604952] "expr temp" "maybe param" "maybe type" "temp"
      (604955 'move' call_tmp[604952](42432 call _cast string[26] call_tmp[604947]))
      (42435 call compilerError "cannot coerce '" call_tmp[604942] "' to '" call_tmp[604952] "' in initialization")
    }
    unknown tmp[454578] "temp" "type variable"
    unknown call_tmp[604957] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604960 'move' call_tmp[604957](42447 'typeof' this[42993]))
    (454580 'move' tmp[454578](42448 call chpl_t _mt[243] call_tmp[604957]))
    (454582 'init field' this[42993] c"chpl_t" tmp[454578])
    (474282 'end of statement')
    unknown call_tmp[604966] "maybe param" "maybe type" "temp"
    (604969 'move' call_tmp[604966](42459 call chpl_p _mt[243] src[42378]))
    unknown call_tmp[604971] "expr temp" "maybe param" "maybe type" "temp"
    (604974 'move' call_tmp[604971](454596 '.v' this[42993] c"chpl_t"))
    unknown call_tmp[604976] "maybe param" "maybe type" "temp"
    (604979 'move' call_tmp[604976](454588 'to nilable class' call_tmp[604971]))
    unknown tmp[454586] "temp"
    (454590 'init var' tmp[454586] call_tmp[604966] call_tmp[604976])
    (454592 'init field' this[42993] c"chpl_p" tmp[454586])
    (474283 'end of statement')
    unknown call_tmp[604983] "maybe param" "maybe type" "temp"
    (604986 'move' call_tmp[604983](42470 call chpl_pn _mt[243] src[42378]))
    unknown tmp[454599] "temp"
    (454602 'init var' tmp[454599] call_tmp[604983] unmanaged ReferenceCount?[415493])
    (454604 'init field' this[42993] c"chpl_pn" tmp[454599])
    (474284 'end of statement')
    unknown call_tmp[604990] "expr temp" "maybe param" "maybe type" "temp"
    (604993 'move' call_tmp[604990](42484 call chpl_pn _mt[243] this[42993]))
    unknown call_tmp[604995] "expr temp" "maybe param" "maybe type" "temp"
    (604998 'move' call_tmp[604995](42488 call != call_tmp[604990] nil[44]))
    unknown call_tmp[605000] "expr temp" "maybe param" "maybe type" "temp"
    (605003 'move' call_tmp[605000](42502 call _cond_test call_tmp[604995]))
    if call_tmp[605000]
    {
      unknown call_tmp[605007] "expr temp" "maybe param" "maybe type" "temp"
      (605010 'move' call_tmp[605007](42491 call chpl_pn _mt[243] this[42993]))
      unknown call_tmp[605012] "expr temp" "maybe param" "maybe type" "temp"
      (605015 'move' call_tmp[605012](42494 call postfix! call_tmp[605007]))
      (42500 call(42496 call (partial) retain _mt[243] call_tmp[605012]))
    }
    (505494 return _void[55])
  }
  function _shared[32](?).init=[42515](arg _mt[42999]:_MT[238], ref arg this[42997]:_shared[32](?), arg src[42512]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42536 call compilerError "cannot create a shared variable from a borrowed class instance")
    (474286 'end of statement')
    unknown tmp[454608] "temp" "type variable"
    (454610 'move' tmp[454608] int(64)[13])
    (454612 'init field' this[42997] c"chpl_t" tmp[454608])
    (474287 'end of statement')
    unknown tmp[454617] "temp"
    unknown call_tmp[605019] "expr temp" "maybe param" "maybe type" "temp"
    (605022 'move' call_tmp[605019](454627 '.v' this[42997] c"chpl_t"))
    unknown call_tmp[605024] "expr temp" "maybe param" "maybe type" "temp"
    (605027 'move' call_tmp[605024](454619 'to nilable class' call_tmp[605019]))
    (454621 'default init var' tmp[454617] call_tmp[605024])
    (454623 '.=' this[42997] c"chpl_p" tmp[454617])
    (474288 'end of statement')
    val tmp[454630]:unmanaged ReferenceCount?[415493] "temp"
    (454633 'default init var' tmp[454630] unmanaged ReferenceCount?[415493])
    (454635 '.=' this[42997] c"chpl_pn" tmp[454630])
    (474289 'end of statement')
    (505496 return _void[55])
  }
  function _shared[32](?).init=[42555](arg _mt[43003]:_MT[238], ref arg this[43001]:_shared[32](?), arg src[42552]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42576 call compilerError "cannot create a shared variable from an unmanaged class instance")
    (474290 'end of statement')
    unknown tmp[454639] "temp" "type variable"
    (454641 'move' tmp[454639] int(64)[13])
    (454643 'init field' this[43001] c"chpl_t" tmp[454639])
    (474291 'end of statement')
    unknown tmp[454648] "temp"
    unknown call_tmp[605029] "expr temp" "maybe param" "maybe type" "temp"
    (605032 'move' call_tmp[605029](454658 '.v' this[43001] c"chpl_t"))
    unknown call_tmp[605034] "expr temp" "maybe param" "maybe type" "temp"
    (605037 'move' call_tmp[605034](454650 'to nilable class' call_tmp[605029]))
    (454652 'default init var' tmp[454648] call_tmp[605034])
    (454654 '.=' this[43001] c"chpl_p" tmp[454648])
    (474292 'end of statement')
    val tmp[454661]:unmanaged ReferenceCount?[415493] "temp"
    (454664 'default init var' tmp[454661] unmanaged ReferenceCount?[415493])
    (454666 '.=' this[43001] c"chpl_pn" tmp[454661])
    (474293 'end of statement')
    (505498 return _void[55])
  }
  function _shared[32](?).init=[42595](arg _mt[43007]:_MT[238], ref arg this[43005]:_shared[32](?), arg src[42592]:_nilType[42]) : void[4] "leaves this nil" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[605041] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605044 'move' call_tmp[605041](42602 'typeof' this[43005]))
    unknown call_tmp[605048] "expr temp" "maybe param" "maybe type" "temp"
    (605051 'move' call_tmp[605048](42603 call chpl_t _mt[243] call_tmp[605041]))
    (42607 call(42598 call (partial) init _mt[243] this[43005]) call_tmp[605048])
    (474294 'end of statement')
    unknown call_tmp[605055] "expr temp" "maybe param" "maybe type" "temp"
    (605058 'move' call_tmp[605055](370770 call chpl_t _mt[243] this[43005]))
    unknown call_tmp[605060] "expr temp" "maybe param" "maybe type" "temp"
    (605063 'move' call_tmp[605060](42613 call isNonNilableClass call_tmp[605055]))
    unknown call_tmp[605065] "expr temp" "maybe param" "maybe type" "temp"
    (605068 'move' call_tmp[605065](42635 call _cond_test call_tmp[605060]))
    if call_tmp[605065]
    {
      (42633 call compilerError "Assigning non-nilable shared to nil")
    }
    (505500 return _void[55])
  }
  function _shared[32](?).doClear[42644](arg _mt[43011]:_MT[238], ref arg this[43009]:_shared[32](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418427] "maybe param" "temp"
    unknown call_tmp[605072] "expr temp" "maybe param" "maybe type" "temp"
    (605075 'move' call_tmp[605072](370775 call chpl_p _mt[243] this[43009]))
    (418438 'move' tmp[418427](42648 call != call_tmp[605072] nil[44]))
    unknown call_tmp[605077] "expr temp" "maybe param" "maybe type" "temp"
    (605080 'move' call_tmp[605077](418440 call _cond_invalid tmp[418427]))
    if call_tmp[605077]
    {
      (418443 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554316] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554317] "maybe param" "temp"
    unknown call_tmp[605082] "expr temp" "maybe param" "maybe type" "temp"
    (605085 'move' call_tmp[605082](418428 call isTrue tmp[418427]))
    (554322 'move' tmp[554317](554320 call _cond_test call_tmp[605082]))
    if tmp[554317]
    {
      unknown tmp[554324] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605089] "expr temp" "maybe param" "maybe type" "temp"
      (605092 'move' call_tmp[605089](370780 call chpl_pn _mt[243] this[43009]))
      unknown call_tmp[605094] "expr temp" "maybe param" "maybe type" "temp"
      (605097 'move' call_tmp[605094](42652 call != call_tmp[605089] nil[44]))
      (554326 'move' tmp[554324](418431 call isTrue call_tmp[605094]))
      (554331 'move' tmp[554316](554328 '_paramFoldLogical' tmp[554317] tmp[554324]))
    }
    {
      (554336 'move' tmp[554316](554333 '_paramFoldLogical' tmp[554317] 0))
    }
    unknown call_tmp[605099] "expr temp" "maybe param" "maybe type" "temp"
    (605102 'move' call_tmp[605099](42691 call _cond_test tmp[554316]))
    if call_tmp[605099]
    {
      unknown call_tmp[605106] "expr temp" "maybe param" "maybe type" "temp"
      (605109 'move' call_tmp[605106](370785 call chpl_pn _mt[243] this[43009]))
      unknown call_tmp[605111] "expr temp" "maybe param" "maybe type" "temp"
      (605114 'move' call_tmp[605111](42657 call postfix! call_tmp[605106]))
      unknown call_tmp[605118] "maybe param" "maybe type" "temp"
      (605121 'move' call_tmp[605118](42663 call(42659 call (partial) release _mt[243] call_tmp[605111])))
      unknown count[42664] "dead at end of block" "insert auto destroy"
      (540707 'init var' count[42664] call_tmp[605118])
      (42667 'end of statement')
      unknown call_tmp[605123] "expr temp" "maybe param" "maybe type" "temp"
      (605126 'move' call_tmp[605123](42671 call == count[42664] 0))
      unknown call_tmp[605128] "expr temp" "maybe param" "maybe type" "temp"
      (605131 'move' call_tmp[605128](42687 call _cond_test call_tmp[605123]))
      if call_tmp[605128]
      {
        unknown call_tmp[605135] "expr temp" "maybe param" "maybe type" "temp"
        (605138 'move' call_tmp[605135](370791 call chpl_p _mt[243] this[43009]))
        unknown call_tmp[605140] "expr temp" "maybe param" "maybe type" "temp"
        (605143 'move' call_tmp[605140](42676 call _to_unmanaged call_tmp[605135]))
        (42678 call chpl__delete call_tmp[605140])
        (474297 'end of statement')
        unknown call_tmp[605147] "expr temp" "maybe param" "maybe type" "temp"
        (605150 'move' call_tmp[605147](370796 call chpl_pn _mt[243] this[43009]))
        (42684 call chpl__delete call_tmp[605147])
      }
    }
    unknown call_tmp[605154] "expr temp" "maybe param" "maybe type" "temp"
    (605157 'move' call_tmp[605154](370801 call chpl_p _mt[243] this[43009]))
    (42698 call = call_tmp[605154] nil[44])
    (474299 'end of statement')
    unknown call_tmp[605161] "expr temp" "maybe param" "maybe type" "temp"
    (605164 'move' call_tmp[605161](370806 call chpl_pn _mt[243] this[43009]))
    (42703 call = call_tmp[605161] nil[44])
    (505502 return _void[55])
  }
  function _shared[32](?).create[42712](arg _mt[43015]:_MT[238], arg this[43013]:_shared[32](?), arg source[42710]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[605166] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605169 'move' call_tmp[605166](42734 'typeof' source[42710]))
    unknown call_tmp[605171] "expr temp" "maybe param" "maybe type" "temp"
    (605174 'move' call_tmp[605171](42736 call _cast string[26] call_tmp[605166]))
    (42738 call compilerError "cannot create a 'shared' from " call_tmp[605171])
    (505504 return _void[55])
  }
  function _shared[32](?).create[42749](arg _mt[43019]:_MT[238], arg this[43017]:_shared[32](?), in arg take[42746]:_owned[30](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505508] "RVV" "temp"
    unknown result[42753] "dead at end of block" "insert auto destroy"
    (540709 'init var' result[42753] take[42746] _shared[32](?))
    (42756 'end of statement')
    (505513 'move' ret[505508](505512 'deref' result[42753]))
    gotoReturn _end_create[505506] _end_create[505506]
    (474302 'end of statement' result[42753])
    label _end_create[505506]
    (505510 return ret[505508])
  }
  function _shared[32](?).create[42769](arg _mt[43023]:_MT[238], arg this[43021]:_shared[32](?), in arg src[42766]:_shared[32](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505519] "RVV" "temp"
    (505524 'move' ret[505519](505523 'deref' src[42766]))
    (505521 return ret[505519])
  }
  function _shared[32](?).create[42783](arg _mt[43027]:_MT[238], arg this[43025]:_shared[32](?), arg p[42780]:unmanaged[220](?)) : _unknown[51] "inline" "method" "primary method" "unsafe"
  {
    unknown ret[505528] "RVV" "temp"
    unknown result[42790] "dead at end of block" "insert auto destroy"
    unknown call_tmp[605176] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605179 'move' call_tmp[605176](42786 'typeof' p[42780]))
    unknown call_tmp[605181] "expr temp" "maybe param" "maybe type" "temp"
    (605184 'move' call_tmp[605181](42788 call _cast _shared[32](?) call_tmp[605176]))
    (540711 'default init var' result[42790] call_tmp[605181])
    (42793 'end of statement')
    (42801 call(42796 call (partial) retain _mt[243] result[42790]) p[42780])
    (474305 'end of statement' result[42790])
    (505533 'move' ret[505528](505532 'deref' result[42790]))
    gotoReturn _end_create[505526] _end_create[505526]
    (474307 'end of statement' result[42790])
    label _end_create[505526]
    (505530 return ret[505528])
  }
  function _shared[32](?).deinit[42810](arg _mt[43031]:_MT[238], arg this[43029]:_shared[32](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605190] "expr temp" "maybe param" "maybe type" "temp"
    (605193 'move' call_tmp[605190](370822 call chpl_p _mt[243] this[43029]))
    unknown call_tmp[605195] "expr temp" "maybe param" "maybe type" "temp"
    (605198 'move' call_tmp[605195](42815 call isClass call_tmp[605190]))
    unknown call_tmp[605200] "expr temp" "maybe param" "maybe type" "temp"
    (605203 'move' call_tmp[605200](42821 call _cond_test call_tmp[605195]))
    if call_tmp[605200]
    {
      (42818 call(370826 call (partial) doClear _mt[243] this[43029]))
    }
    (505537 return _void[55])
  }
  function _shared[32](?).retain[42834](arg _mt[43035]:_MT[238], ref arg this[43033]:_shared[32](?), arg newPtr[42831]:unmanaged[220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[605209] "expr temp" "maybe param" "maybe type" "temp"
    (605212 'move' call_tmp[605209](370832 call chpl_t _mt[243] this[43033]))
    unknown call_tmp[605214] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605217 'move' call_tmp[605214](42838 'typeof' newPtr[42831]))
    unknown call_tmp[605219] "expr temp" "maybe param" "maybe type" "temp"
    (605222 'move' call_tmp[605219](354309 'is_coercible' call_tmp[605209] call_tmp[605214]))
    unknown call_tmp[605224] "expr temp" "maybe param" "maybe type" "temp"
    (605227 'move' call_tmp[605224](42842 call ! call_tmp[605219]))
    unknown call_tmp[605229] "expr temp" "maybe param" "maybe type" "temp"
    (605232 'move' call_tmp[605229](42874 call _cond_test call_tmp[605224]))
    if call_tmp[605229]
    {
      unknown call_tmp[605234] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (605237 'move' call_tmp[605234](42847 'typeof' newPtr[42831]))
      unknown call_tmp[605239] "expr temp" "maybe param" "maybe type" "temp"
      (605242 'move' call_tmp[605239](42849 call _cast string[26] call_tmp[605234]))
      unknown call_tmp[605244] "expr temp" "maybe param" "maybe type" "temp"
      (605247 'move' call_tmp[605244](42851 call + "cannot retain '" call_tmp[605239]))
      unknown call_tmp[605249] "expr temp" "maybe param" "maybe type" "temp"
      (605252 'move' call_tmp[605249](42854 call + call_tmp[605244] "' "))
      unknown call_tmp[605254] "expr temp" "maybe param" "maybe type" "temp"
      (605257 'move' call_tmp[605254](42857 call + call_tmp[605249] "(expected '"))
      unknown call_tmp[605261] "expr temp" "maybe param" "maybe type" "temp"
      (605264 'move' call_tmp[605261](370838 call chpl_t _mt[243] this[43033]))
      unknown call_tmp[605266] "expr temp" "maybe param" "maybe type" "temp"
      (605269 'move' call_tmp[605266](42862 call _to_unmanaged call_tmp[605261]))
      unknown call_tmp[605271] "expr temp" "maybe param" "maybe type" "temp"
      (605274 'move' call_tmp[605271](42864 call _cast string[26] call_tmp[605266]))
      unknown call_tmp[605276] "expr temp" "maybe param" "maybe type" "temp"
      (605279 'move' call_tmp[605276](42866 call + call_tmp[605254] call_tmp[605271]))
      unknown call_tmp[605281] "expr temp" "maybe param" "maybe type" "temp"
      (605284 'move' call_tmp[605281](42869 call + call_tmp[605276] "')"))
      (42872 call compilerError call_tmp[605281])
    }
    (42882 call(370842 call (partial) doClear _mt[243] this[43033]))
    (474311 'end of statement')
    unknown call_tmp[605290] "expr temp" "maybe param" "maybe type" "temp"
    (605293 'move' call_tmp[605290](42885 call chpl_p _mt[243] this[43033]))
    (42889 call = call_tmp[605290] newPtr[42831])
    (474312 'end of statement')
    unknown call_tmp[605295] "expr temp" "maybe param" "maybe type" "temp"
    (605298 'move' call_tmp[605295](42894 call != newPtr[42831] nil[44]))
    unknown call_tmp[605300] "expr temp" "maybe param" "maybe type" "temp"
    (605303 'move' call_tmp[605300](42910 call _cond_test call_tmp[605295]))
    if call_tmp[605300]
    {
      unknown call_tmp[605307] "expr temp" "maybe param" "maybe type" "temp"
      (605310 'move' call_tmp[605307](42897 call chpl_pn _mt[243] this[43033]))
      unknown call_tmp[605312] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605315 'move' call_tmp[605312](747936 'new' ReferenceCount[370713](?)(_chpl_manager = unmanaged[220](?))))
      (42906 call = call_tmp[605307] call_tmp[605312])
    }
    (505539 return _void[55])
  }
  function _shared[32](?).clear[42918](arg _mt[43039]:_MT[238], ref arg this[43037]:_shared[32](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    (42922 call(370849 call (partial) doClear _mt[243] this[43037]))
    (505541 return _void[55])
  }
  function _shared[32](?).borrow[42929](arg _mt[43043]:_MT[238], arg this[43041]:_shared[32](?)) : _unknown[51] "nil from this" "method" "primary method"
  {
    unknown ret[505545] "RVV" "temp"
    unknown call_tmp[605321] "expr temp" "maybe param" "maybe type" "temp"
    (605324 'move' call_tmp[605321](370854 call chpl_t _mt[243] this[43041]))
    unknown call_tmp[605326] "expr temp" "maybe param" "maybe type" "temp"
    (605329 'move' call_tmp[605326](42934 call _to_nilable call_tmp[605321]))
    unknown call_tmp[605333] "expr temp" "maybe param" "maybe type" "temp"
    (605336 'move' call_tmp[605333](370859 call chpl_t _mt[243] this[43041]))
    unknown call_tmp[605338] "expr temp" "maybe param" "maybe type" "temp"
    (605341 'move' call_tmp[605338](42936 call == call_tmp[605326] call_tmp[605333]))
    unknown call_tmp[605343] "expr temp" "maybe param" "maybe type" "temp"
    (605346 'move' call_tmp[605343](42948 call _cond_test call_tmp[605338]))
    if call_tmp[605343]
    {
      unknown call_tmp[605350] "expr temp" "maybe param" "maybe type" "temp"
      (605353 'move' call_tmp[605350](370864 call chpl_p _mt[243] this[43041]))
      (505550 'move' ret[505545](505549 'deref' call_tmp[605350]))
      gotoReturn _end_borrow[505543] _end_borrow[505543]
    }
    {
      unknown call_tmp[605357] "expr temp" "maybe param" "maybe type" "temp"
      (605360 'move' call_tmp[605357](370869 call chpl_p _mt[243] this[43041]))
      unknown call_tmp[605362] "expr temp" "maybe param" "maybe type" "temp"
      (605365 'move' call_tmp[605362](42943 call postfix! call_tmp[605357]))
      (505555 'move' ret[505545](505554 'deref' call_tmp[605362]))
      gotoReturn _end_borrow[505543] _end_borrow[505543]
    }
    label _end_borrow[505543]
    (505547 return ret[505545])
  }
  type _shared[32](?) unknown chpl_t[41770] "no doc" "type variable" unknown chpl_p[41777] "no doc" "owned"(41776 'to nilable class' chpl_t[41770]) val chpl_pn[41793]:unmanaged ReferenceCount?[415493] "no doc" "owned" unmanaged ReferenceCount?[415493] forwarding ( )
  type shared[415500](?)
  type shared?[415496](?)
  function =[43052](ref arg lhs[43049]:_shared[32](?), arg rhs[43055]:_shared[32](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605369] "expr temp" "maybe param" "maybe type" "temp"
    (605372 'move' call_tmp[605369](43071 call chpl_pn _mt[243] rhs[43055]))
    unknown call_tmp[605374] "expr temp" "maybe param" "maybe type" "temp"
    (605377 'move' call_tmp[605374](43075 call != call_tmp[605369] nil[44]))
    unknown call_tmp[605379] "expr temp" "maybe param" "maybe type" "temp"
    (605382 'move' call_tmp[605379](43089 call _cond_test call_tmp[605374]))
    if call_tmp[605379]
    {
      unknown call_tmp[605386] "expr temp" "maybe param" "maybe type" "temp"
      (605389 'move' call_tmp[605386](43078 call chpl_pn _mt[243] rhs[43055]))
      unknown call_tmp[605391] "expr temp" "maybe param" "maybe type" "temp"
      (605394 'move' call_tmp[605391](43081 call postfix! call_tmp[605386]))
      (43087 call(43083 call (partial) retain _mt[243] call_tmp[605391]))
    }
    unknown call_tmp[605400] "maybe param" "maybe type" "temp"
    (605403 'move' call_tmp[605400](43096 call chpl_p _mt[243] rhs[43055]))
    const chpl_p_tmp[43099] "dead at end of block" "const" "insert auto destroy"
    (540713 'init var' chpl_p_tmp[43099] call_tmp[605400])
    (43102 'end of statement')
    unknown call_tmp[605407] "maybe param" "maybe type" "temp"
    (605410 'move' call_tmp[605407](43104 call chpl_pn _mt[243] rhs[43055]))
    const chpl_pn_tmp[43107] "dead at end of block" "const" "insert auto destroy"
    (540715 'init var' chpl_pn_tmp[43107] call_tmp[605407])
    (43110 'end of statement')
    (43118 call(43114 call (partial) doClear _mt[243] lhs[43049]))
    (474318 'end of statement')
    unknown call_tmp[605416] "expr temp" "maybe param" "maybe type" "temp"
    (605419 'move' call_tmp[605416](43121 call chpl_p _mt[243] lhs[43049]))
    (43125 call = call_tmp[605416] chpl_p_tmp[43099])
    (474319 'end of statement' chpl_p_tmp[43099])
    unknown call_tmp[605423] "expr temp" "maybe param" "maybe type" "temp"
    (605426 'move' call_tmp[605423](43129 call chpl_pn _mt[243] lhs[43049]))
    (43133 call = call_tmp[605423] chpl_pn_tmp[43107])
    (474321 'end of statement' chpl_pn_tmp[43107])
    (505559 return _void[55])
  }
  where {
    unknown tmp[418448] "maybe param" "temp"
    (418459 'move' tmp[418448](43061 call isNonNilableClass lhs[43049]))
    unknown call_tmp[605428] "expr temp" "maybe param" "maybe type" "temp"
    (605431 'move' call_tmp[605428](418461 call _cond_invalid tmp[418448]))
    if call_tmp[605428]
    {
      (418464 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554343] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554344] "maybe param" "temp"
    unknown call_tmp[605433] "expr temp" "maybe param" "maybe type" "temp"
    (605436 'move' call_tmp[605433](418449 call isTrue tmp[418448]))
    (554349 'move' tmp[554344](554347 call _cond_test call_tmp[605433]))
    if tmp[554344]
    {
      unknown tmp[554351] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605438] "expr temp" "maybe param" "maybe type" "temp"
      (605441 'move' call_tmp[605438](43065 call isNilableClass rhs[43055]))
      (554353 'move' tmp[554351](418452 call isTrue call_tmp[605438]))
      (554358 'move' tmp[554343](554355 '_paramFoldLogical' tmp[554344] tmp[554351]))
    }
    {
      (554363 'move' tmp[554343](554360 '_paramFoldLogical' tmp[554344] 0))
    }
    (43068 call ! tmp[554343])
  }
  function =[43145](ref arg lhs[43142]:_shared[32](?), in arg rhs[43148]:_owned[30](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605447] "expr temp" "maybe param" "maybe type" "temp"
    (605450 'move' call_tmp[605447](43172 call(43168 call (partial) release _mt[243] rhs[43148])))
    (43174 call(43164 call (partial) retain _mt[243] lhs[43142]) call_tmp[605447])
    (505561 return _void[55])
  }
  where {
    unknown tmp[418469] "maybe param" "temp"
    (418480 'move' tmp[418469](43154 call isNonNilableClass lhs[43142]))
    unknown call_tmp[605452] "expr temp" "maybe param" "maybe type" "temp"
    (605455 'move' call_tmp[605452](418482 call _cond_invalid tmp[418469]))
    if call_tmp[605452]
    {
      (418485 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554370] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554371] "maybe param" "temp"
    unknown call_tmp[605457] "expr temp" "maybe param" "maybe type" "temp"
    (605460 'move' call_tmp[605457](418470 call isTrue tmp[418469]))
    (554376 'move' tmp[554371](554374 call _cond_test call_tmp[605457]))
    if tmp[554371]
    {
      unknown tmp[554378] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605462] "expr temp" "maybe param" "maybe type" "temp"
      (605465 'move' call_tmp[605462](43158 call isNilableClass rhs[43148]))
      (554380 'move' tmp[554378](418473 call isTrue call_tmp[605462]))
      (554385 'move' tmp[554370](554382 '_paramFoldLogical' tmp[554371] tmp[554378]))
    }
    {
      (554390 'move' tmp[554370](554387 '_paramFoldLogical' tmp[554371] 0))
    }
    (43161 call ! tmp[554370])
  }
  function =[43186](ref arg lhs[43183]:_shared[32](?), arg rhs[43189]:_nilType[42]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (43203 call(43199 call (partial) clear _mt[243] lhs[43183]))
    (505563 return _void[55])
  }
  where {
    unknown call_tmp[605469] "expr temp" "maybe param" "maybe type" "temp"
    (605472 'move' call_tmp[605469](43195 call isNonNilableClass lhs[43183]))
    (43196 call ! call_tmp[605469])
  }
  function <=>[43215](ref arg lhs[43212]:_shared[32](?), ref arg rhs[43218]:_shared[32](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[605476] "expr temp" "maybe param" "maybe type" "temp"
    (605479 'move' call_tmp[605476](43222 call chpl_pn _mt[243] lhs[43212]))
    unknown call_tmp[605483] "expr temp" "maybe param" "maybe type" "temp"
    (605486 'move' call_tmp[605483](43226 call chpl_pn _mt[243] rhs[43218]))
    (43229 call <=> call_tmp[605476] call_tmp[605483])
    (474325 'end of statement')
    unknown call_tmp[605490] "expr temp" "maybe param" "maybe type" "temp"
    (605493 'move' call_tmp[605490](43234 call chpl_p _mt[243] lhs[43212]))
    unknown call_tmp[605497] "expr temp" "maybe param" "maybe type" "temp"
    (605500 'move' call_tmp[605497](43238 call chpl_p _mt[243] rhs[43218]))
    (43241 call <=> call_tmp[605490] call_tmp[605497])
    (505565 return _void[55])
  }
  function chpl__autoDestroy[43252](ref arg x[43249]:_shared[32](?)) : _unknown[51] "auto destroy fn" "no doc" "no return value for void"
  {
    unknown call_tmp[605502] "expr temp" "maybe param" "maybe type" "temp"
    (605505 'move' call_tmp[605502](43259 'deref' x[43249]))
    (43260 'call destructor' call_tmp[605502])
    (505567 return _void[55])
  }
  function _shared[32](?).readWriteThis[43270](arg _mt[43275]:_MT[238], arg this[43272]:_shared[32](?) :
  _shared[32](?), arg f[43268]:_any[178](?)) : _unknown[51] throws "method" "no doc" "no return value for void"
  {
    unknown call_tmp[605509] "expr temp" "maybe param" "maybe type" "temp"
    (605512 'move' call_tmp[605509](43279 call chpl_p _mt[243] this[43272]))
    (43282 call <~> f[43268] call_tmp[605509])
    (505569 return _void[55])
  }
  function _cast[43294](arg t[43291]:borrowed[211](?), const  ref arg x[43297]:_shared[32](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505573] "RVV" "temp"
    unknown call_tmp[605516] "expr temp" "maybe param" "maybe type" "temp"
    (605519 'move' call_tmp[605516](43315 call(43311 call (partial) borrow _mt[243] x[43297])))
    (505578 'move' ret[505573](505577 'deref' call_tmp[605516]))
    (505575 return ret[505573])
  }
  where {
    unknown call_tmp[605523] "expr temp" "maybe param" "maybe type" "temp"
    (605526 'move' call_tmp[605523](43304 call chpl_t _mt[243] x[43297]))
    (354310 'is_subtype' call_tmp[605523] t[43291])
  }
  function _cast[43331](arg t[43328]:shared?[415496](?), in arg x[43336]:shared[415500](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505582] "RVV" "temp"
    unknown call_tmp[605530] "expr temp" "maybe param" "maybe type" "temp"
    (605533 'move' call_tmp[605530](43359 call chpl_t _mt[243] t[43328]))
    unknown call_tmp[605535] "expr temp" "maybe param" "maybe type" "temp"
    (605538 'move' call_tmp[605535](43363 call _to_nilable call_tmp[605530]))
    unknown call_tmp[605540] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605543 'move' call_tmp[605540](747937 'new' _shared[32](?) 1 call_tmp[605535] x[43336]))
    (505587 'move' ret[505582](505586 'deref' call_tmp[605540]))
    (505584 return ret[505582])
  }
  where {
    unknown call_tmp[605547] "expr temp" "maybe param" "maybe type" "temp"
    (605550 'move' call_tmp[605547](43347 call chpl_t _mt[243] t[43328]))
    unknown call_tmp[605552] "expr temp" "maybe param" "maybe type" "temp"
    (605555 'move' call_tmp[605552](43351 call _to_nonnil call_tmp[605547]))
    unknown call_tmp[605559] "expr temp" "maybe param" "maybe type" "temp"
    (605562 'move' call_tmp[605559](43341 call chpl_t _mt[243] x[43336]))
    (354311 'is_subtype' call_tmp[605552] call_tmp[605559])
  }
  function _cast[43381](arg t[43378]:shared?[415496](?), in arg x[43387]:shared?[415496](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505591] "RVV" "temp"
    unknown call_tmp[605566] "expr temp" "maybe param" "maybe type" "temp"
    (605569 'move' call_tmp[605566](43406 call chpl_t _mt[243] t[43378]))
    unknown call_tmp[605571] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605574 'move' call_tmp[605571](747938 'new' _shared[32](?) 1 call_tmp[605566] x[43387]))
    (505596 'move' ret[505591](505595 'deref' call_tmp[605571]))
    (505593 return ret[505591])
  }
  where {
    unknown call_tmp[605578] "expr temp" "maybe param" "maybe type" "temp"
    (605581 'move' call_tmp[605578](43397 call chpl_t _mt[243] t[43378]))
    unknown call_tmp[605585] "expr temp" "maybe param" "maybe type" "temp"
    (605588 'move' call_tmp[605585](43392 call chpl_t _mt[243] x[43387]))
    (354312 'is_subtype' call_tmp[605578] call_tmp[605585])
  }
  function _cast[43425](arg t[43422]:shared[415500](?), in arg x[43430]:shared[415500](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505600] "RVV" "temp"
    unknown call_tmp[605592] "expr temp" "maybe param" "maybe type" "temp"
    (605595 'move' call_tmp[605592](43449 call chpl_t _mt[243] t[43422]))
    unknown call_tmp[605597] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605600 'move' call_tmp[605597](747939 'new' _shared[32](?) 1 call_tmp[605592] x[43430]))
    (505605 'move' ret[505600](505604 'deref' call_tmp[605597]))
    (505602 return ret[505600])
  }
  where {
    unknown call_tmp[605604] "expr temp" "maybe param" "maybe type" "temp"
    (605607 'move' call_tmp[605604](43440 call chpl_t _mt[243] t[43422]))
    unknown call_tmp[605611] "expr temp" "maybe param" "maybe type" "temp"
    (605614 'move' call_tmp[605611](43435 call chpl_t _mt[243] x[43430]))
    (354313 'is_subtype' call_tmp[605604] call_tmp[605611])
  }
  function _cast[43468](arg t[43465]:shared[415500](?), in arg x[43474]:shared?[415496](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505609] "RVV" "temp"
    unknown call_tmp[605618] "expr temp" "maybe param" "maybe type" "temp"
    (605621 'move' call_tmp[605618](43492 call chpl_p _mt[243] x[43474]))
    unknown call_tmp[605623] "expr temp" "maybe param" "maybe type" "temp"
    (605626 'move' call_tmp[605623](43496 call == call_tmp[605618] nil[44]))
    unknown call_tmp[605628] "expr temp" "maybe param" "maybe type" "temp"
    (605631 'move' call_tmp[605628](43507 call _cond_test call_tmp[605623]))
    if call_tmp[605628]
    {
      unknown call_tmp[605633] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605636 'move' call_tmp[605633](747940 'new' NilClassError[368396](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605638] "expr temp" "maybe param" "maybe type" "temp"
      (605641 'move' call_tmp[605638](468149 call chpl_fix_thrown_error call_tmp[605633]))
      (43504 'throw' call_tmp[605638])
    }
    unknown call_tmp[605645] "expr temp" "maybe param" "maybe type" "temp"
    (605648 'move' call_tmp[605645](43518 call chpl_t _mt[243] t[43465]))
    unknown call_tmp[605650] "expr temp" "maybe param" "maybe type" "temp"
    (605653 'move' call_tmp[605650](43522 call _to_nonnil call_tmp[605645]))
    unknown call_tmp[605655] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605658 'move' call_tmp[605655](747941 'new' _shared[32](?) 1 call_tmp[605650] x[43474]))
    (505614 'move' ret[505609](505613 'deref' call_tmp[605655]))
    (505611 return ret[505609])
  }
  where {
    unknown call_tmp[605662] "expr temp" "maybe param" "maybe type" "temp"
    (605665 'move' call_tmp[605662](43487 call chpl_t _mt[243] t[43465]))
    unknown call_tmp[605669] "expr temp" "maybe param" "maybe type" "temp"
    (605672 'move' call_tmp[605669](43480 call chpl_t _mt[243] x[43474]))
    unknown call_tmp[605674] "expr temp" "maybe param" "maybe type" "temp"
    (605677 'move' call_tmp[605674](43484 call _to_nonnil call_tmp[605669]))
    (354314 'is_subtype' call_tmp[605662] call_tmp[605674])
  }
  function _cast[43538](arg t[43535]:shared[415500](?), const  ref arg x[43544]:shared?[415496](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505618] "RVV" "temp"
    unknown call_tmp[605681] "expr temp" "maybe param" "maybe type" "temp"
    (605684 'move' call_tmp[605681](43562 call chpl_p _mt[243] x[43544]))
    unknown call_tmp[605686] "expr temp" "maybe param" "maybe type" "temp"
    (605689 'move' call_tmp[605686](43566 call == call_tmp[605681] nil[44]))
    unknown call_tmp[605691] "expr temp" "maybe param" "maybe type" "temp"
    (605694 'move' call_tmp[605691](43577 call _cond_test call_tmp[605686]))
    if call_tmp[605691]
    {
      unknown call_tmp[605696] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605699 'move' call_tmp[605696](747942 'new' NilClassError[368396](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605701] "expr temp" "maybe param" "maybe type" "temp"
      (605704 'move' call_tmp[605701](468151 call chpl_fix_thrown_error call_tmp[605696]))
      (43574 'throw' call_tmp[605701])
    }
    unknown call_tmp[605708] "expr temp" "maybe param" "maybe type" "temp"
    (605711 'move' call_tmp[605708](43589 call chpl_t _mt[243] t[43535]))
    unknown call_tmp[605713] "expr temp" "maybe param" "maybe type" "temp"
    (605716 'move' call_tmp[605713](43593 call _to_unmanaged call_tmp[605708]))
    unknown call_tmp[605718] "expr temp" "maybe param" "maybe type" "temp"
    (605721 'move' call_tmp[605718](43595 call _to_nonnil call_tmp[605713]))
    unknown call_tmp[605725] "expr temp" "maybe param" "maybe type" "temp"
    (605728 'move' call_tmp[605725](43583 call chpl_p _mt[243] x[43544]))
    unknown call_tmp[605730] "maybe param" "maybe type" "temp"
    (605733 'move' call_tmp[605730](43596 call _cast call_tmp[605718] call_tmp[605725]))
    unknown p[43599] "dead at end of block" "insert auto destroy"
    (540717 'init var' p[43599] call_tmp[605730])
    (43602 'end of statement')
    unknown call_tmp[605735] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605738 'move' call_tmp[605735](43609 'typeof' p[43599]))
    unknown call_tmp[605740] "expr temp" "maybe param" "maybe type" "temp"
    (605743 'move' call_tmp[605740](43611 call _to_borrowed call_tmp[605735]))
    unknown call_tmp[605747] "expr temp" "maybe param" "maybe type" "temp"
    (605750 'move' call_tmp[605747](43614 call chpl_pn _mt[243] x[43544]))
    unknown call_tmp[605752] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605755 'move' call_tmp[605752](747943 'new' _shared[32](?) 1 call_tmp[605740] p[43599] call_tmp[605747]))
    (505623 'move' ret[505618](505622 'deref' call_tmp[605752]))
    gotoReturn _end__cast[505616] _end__cast[505616]
    (474336 'end of statement' p[43599] p[43599])
    label _end__cast[505616]
    (505620 return ret[505618])
  }
  where {
    unknown call_tmp[605759] "expr temp" "maybe param" "maybe type" "temp"
    (605762 'move' call_tmp[605759](43555 call chpl_t _mt[243] x[43544]))
    unknown call_tmp[605764] "expr temp" "maybe param" "maybe type" "temp"
    (605767 'move' call_tmp[605764](43559 call _to_nonnil call_tmp[605759]))
    unknown call_tmp[605771] "expr temp" "maybe param" "maybe type" "temp"
    (605774 'move' call_tmp[605771](43549 call chpl_t _mt[243] t[43535]))
    (354315 'is_proper_subtype' call_tmp[605764] call_tmp[605771])
  }
  function _cast[43631](arg t[43628]:shared[415500](?), const  ref arg x[43636]:shared[415500](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505629] "RVV" "temp"
    unknown call_tmp[605778] "expr temp" "maybe param" "maybe type" "temp"
    (605781 'move' call_tmp[605778](43657 call chpl_t _mt[243] t[43628]))
    unknown call_tmp[605783] "expr temp" "maybe param" "maybe type" "temp"
    (605786 'move' call_tmp[605783](43661 call _to_unmanaged call_tmp[605778]))
    unknown call_tmp[605788] "expr temp" "maybe param" "maybe type" "temp"
    (605791 'move' call_tmp[605788](43663 call _to_nonnil call_tmp[605783]))
    unknown call_tmp[605795] "expr temp" "maybe param" "maybe type" "temp"
    (605798 'move' call_tmp[605795](43651 call chpl_p _mt[243] x[43636]))
    unknown call_tmp[605800] "maybe param" "maybe type" "temp"
    (605803 'move' call_tmp[605800](43664 call _cast call_tmp[605788] call_tmp[605795]))
    unknown p[43667] "dead at end of block" "insert auto destroy"
    (540719 'init var' p[43667] call_tmp[605800])
    (43670 'end of statement')
    unknown call_tmp[605805] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605808 'move' call_tmp[605805](43678 'typeof' p[43667]))
    unknown call_tmp[605810] "expr temp" "maybe param" "maybe type" "temp"
    (605813 'move' call_tmp[605810](43680 call _to_borrowed call_tmp[605805]))
    unknown call_tmp[605817] "expr temp" "maybe param" "maybe type" "temp"
    (605820 'move' call_tmp[605817](43683 call chpl_pn _mt[243] x[43636]))
    unknown call_tmp[605822] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605825 'move' call_tmp[605822](747944 'new' _shared[32](?) 1 call_tmp[605810] p[43667] call_tmp[605817]))
    (505634 'move' ret[505629](505633 'deref' call_tmp[605822]))
    gotoReturn _end__cast[505627] _end__cast[505627]
    (474339 'end of statement' p[43667] p[43667])
    label _end__cast[505627]
    (505631 return ret[505629])
  }
  where {
    unknown call_tmp[605829] "expr temp" "maybe param" "maybe type" "temp"
    (605832 'move' call_tmp[605829](43646 call chpl_t _mt[243] x[43636]))
    unknown call_tmp[605836] "expr temp" "maybe param" "maybe type" "temp"
    (605839 'move' call_tmp[605836](43641 call chpl_t _mt[243] t[43628]))
    (354316 'is_proper_subtype' call_tmp[605829] call_tmp[605836])
  }
  function _cast[43701](arg t[43698]:shared?[415496](?), const  ref arg x[43707]:shared?[415496](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505640] "RVV" "temp"
    unknown call_tmp[605843] "expr temp" "maybe param" "maybe type" "temp"
    (605846 'move' call_tmp[605843](43728 call chpl_t _mt[243] t[43698]))
    unknown call_tmp[605848] "expr temp" "maybe param" "maybe type" "temp"
    (605851 'move' call_tmp[605848](43732 call _to_unmanaged call_tmp[605843]))
    unknown call_tmp[605853] "expr temp" "maybe param" "maybe type" "temp"
    (605856 'move' call_tmp[605853](43734 call _to_nilable call_tmp[605848]))
    unknown call_tmp[605860] "expr temp" "maybe param" "maybe type" "temp"
    (605863 'move' call_tmp[605860](43722 call chpl_p _mt[243] x[43707]))
    unknown call_tmp[605865] "maybe param" "maybe type" "temp"
    (605868 'move' call_tmp[605865](43735 call _cast call_tmp[605853] call_tmp[605860]))
    unknown p[43737] "dead at end of block" "insert auto destroy"
    (540721 'init var' p[43737] call_tmp[605865])
    (43740 'end of statement')
    unknown call_tmp[605870] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605873 'move' call_tmp[605870](43748 'typeof' p[43737]))
    unknown call_tmp[605875] "expr temp" "maybe param" "maybe type" "temp"
    (605878 'move' call_tmp[605875](43750 call _to_borrowed call_tmp[605870]))
    unknown call_tmp[605882] "expr temp" "maybe param" "maybe type" "temp"
    (605885 'move' call_tmp[605882](43753 call chpl_pn _mt[243] x[43707]))
    unknown call_tmp[605887] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605890 'move' call_tmp[605887](747945 'new' _shared[32](?) 1 call_tmp[605875] p[43737] call_tmp[605882]))
    (505645 'move' ret[505640](505644 'deref' call_tmp[605887]))
    gotoReturn _end__cast[505638] _end__cast[505638]
    (474342 'end of statement' p[43737] p[43737])
    label _end__cast[505638]
    (505642 return ret[505640])
  }
  where {
    unknown call_tmp[605894] "expr temp" "maybe param" "maybe type" "temp"
    (605897 'move' call_tmp[605894](43717 call chpl_t _mt[243] x[43707]))
    unknown call_tmp[605901] "expr temp" "maybe param" "maybe type" "temp"
    (605904 'move' call_tmp[605901](43712 call chpl_t _mt[243] t[43698]))
    (354317 'is_proper_subtype' call_tmp[605894] call_tmp[605901])
  }
  function _cast[43771](arg t[43768]:shared?[415496](?), const  ref arg x[43776]:shared[415500](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505651] "RVV" "temp"
    unknown call_tmp[605908] "expr temp" "maybe param" "maybe type" "temp"
    (605911 'move' call_tmp[605908](43800 call chpl_t _mt[243] t[43768]))
    unknown call_tmp[605913] "expr temp" "maybe param" "maybe type" "temp"
    (605916 'move' call_tmp[605913](43804 call _to_unmanaged call_tmp[605908]))
    unknown call_tmp[605918] "expr temp" "maybe param" "maybe type" "temp"
    (605921 'move' call_tmp[605918](43806 call _to_nilable call_tmp[605913]))
    unknown call_tmp[605925] "expr temp" "maybe param" "maybe type" "temp"
    (605928 'move' call_tmp[605925](43794 call chpl_p _mt[243] x[43776]))
    unknown call_tmp[605930] "maybe param" "maybe type" "temp"
    (605933 'move' call_tmp[605930](43807 call _cast call_tmp[605918] call_tmp[605925]))
    unknown p[43809] "dead at end of block" "insert auto destroy"
    (540723 'init var' p[43809] call_tmp[605930])
    (43812 'end of statement')
    unknown call_tmp[605935] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605938 'move' call_tmp[605935](43820 'typeof' p[43809]))
    unknown call_tmp[605940] "expr temp" "maybe param" "maybe type" "temp"
    (605943 'move' call_tmp[605940](43822 call _to_borrowed call_tmp[605935]))
    unknown call_tmp[605947] "expr temp" "maybe param" "maybe type" "temp"
    (605950 'move' call_tmp[605947](43825 call chpl_pn _mt[243] x[43776]))
    unknown call_tmp[605952] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605955 'move' call_tmp[605952](747946 'new' _shared[32](?) 1 call_tmp[605940] p[43809] call_tmp[605947]))
    (505656 'move' ret[505651](505655 'deref' call_tmp[605952]))
    gotoReturn _end__cast[505649] _end__cast[505649]
    (474345 'end of statement' p[43809] p[43809])
    label _end__cast[505649]
    (505653 return ret[505651])
  }
  where {
    unknown call_tmp[605959] "expr temp" "maybe param" "maybe type" "temp"
    (605962 'move' call_tmp[605959](43787 call chpl_t _mt[243] x[43776]))
    unknown call_tmp[605964] "expr temp" "maybe param" "maybe type" "temp"
    (605967 'move' call_tmp[605964](43791 call _to_nilable call_tmp[605959]))
    unknown call_tmp[605971] "expr temp" "maybe param" "maybe type" "temp"
    (605974 'move' call_tmp[605971](43781 call chpl_t _mt[243] t[43768]))
    (354318 'is_proper_subtype' call_tmp[605964] call_tmp[605971])
  }
  function _cast[43840](arg t[43837]:_shared[32](?), arg x[43843]:_nilType[42]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505662] "RVV" "temp"
    unknown call_tmp[605978] "expr temp" "maybe param" "maybe type" "temp"
    (605981 'move' call_tmp[605978](43848 call chpl_t _mt[243] t[43837]))
    unknown call_tmp[605983] "expr temp" "maybe param" "maybe type" "temp"
    (605986 'move' call_tmp[605983](43852 call isNonNilableClass call_tmp[605978]))
    unknown call_tmp[605988] "expr temp" "maybe param" "maybe type" "temp"
    (605991 'move' call_tmp[605988](43874 call _cond_test call_tmp[605983]))
    if call_tmp[605988]
    {
      (43872 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[43881] "dead at end of block" "insert auto destroy"
    (540725 'default init var' tmp[43881] t[43837])
    (43884 'end of statement')
    (505667 'move' ret[505662](505666 'deref' tmp[43881]))
    gotoReturn _end__cast[505660] _end__cast[505660]
    (474349 'end of statement' tmp[43881])
    label _end__cast[505660]
    (505664 return ret[505662])
  }
  function postfix![43896](arg x[43893]:_shared[32](?)) : _unknown[51] "always propagate line file info" "inline" "no doc"
  {
    unknown ret[505673] "RVV" "temp"
    unknown tmp[418490] "maybe param" "temp"
    (418501 'move' tmp[418490] 1)
    unknown call_tmp[605993] "expr temp" "maybe param" "maybe type" "temp"
    (605996 'move' call_tmp[605993](418503 call _cond_invalid tmp[418490]))
    if call_tmp[605993]
    {
      (418506 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554397] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554398] "maybe param" "temp"
    unknown call_tmp[605998] "expr temp" "maybe param" "maybe type" "temp"
    (606001 'move' call_tmp[605998](418491 call isTrue tmp[418490]))
    (554403 'move' tmp[554398](554401 call _cond_test call_tmp[605998]))
    if tmp[554398]
    {
      (554408 'move' tmp[554397](554405 '_paramFoldLogical' tmp[554398] 1))
    }
    {
      unknown tmp[554410] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (554412 'move' tmp[554410](418495 call isTrue enablePostfixBangChecks[324]))
      (554417 'move' tmp[554397](554414 '_paramFoldLogical' tmp[554398] tmp[554410]))
    }
    unknown call_tmp[606003] "expr temp" "maybe param" "maybe type" "temp"
    (606006 'move' call_tmp[606003](43945 call _cond_test tmp[554397]))
    if call_tmp[606003]
    {
      unknown call_tmp[606010] "expr temp" "maybe param" "maybe type" "temp"
      (606013 'move' call_tmp[606010](43908 call chpl_t _mt[243] x[43893]))
      unknown call_tmp[606015] "expr temp" "maybe param" "maybe type" "temp"
      (606018 'move' call_tmp[606015](43912 call _to_nilable call_tmp[606010]))
      unknown call_tmp[606022] "expr temp" "maybe param" "maybe type" "temp"
      (606025 'move' call_tmp[606022](43914 call chpl_t _mt[243] x[43893]))
      unknown call_tmp[606027] "expr temp" "maybe param" "maybe type" "temp"
      (606030 'move' call_tmp[606027](43917 call == call_tmp[606015] call_tmp[606022]))
      unknown call_tmp[606032] "expr temp" "maybe param" "maybe type" "temp"
      (606035 'move' call_tmp[606032](43940 call _cond_test call_tmp[606027]))
      if call_tmp[606032]
      {
        unknown call_tmp[606039] "expr temp" "maybe param" "maybe type" "temp"
        (606042 'move' call_tmp[606039](43920 call chpl_p _mt[243] x[43893]))
        unknown call_tmp[606044] "expr temp" "maybe param" "maybe type" "temp"
        (606047 'move' call_tmp[606044](43924 call == call_tmp[606039] nil[44]))
        unknown call_tmp[606049] "expr temp" "maybe param" "maybe type" "temp"
        (606052 'move' call_tmp[606049](43935 call _cond_test call_tmp[606044]))
        if call_tmp[606049]
        {
          (43932 call nilCheckHalt module=[255] HaltWrappers[210085] "argument to ! is nil")
          (357185 'referenced modules list' HaltWrappers[210085])
        }
      }
    }
    unknown call_tmp[606056] "expr temp" "maybe param" "maybe type" "temp"
    (606059 'move' call_tmp[606056](43951 call chpl_p _mt[243] x[43893]))
    unknown call_tmp[606061] "expr temp" "maybe param" "maybe type" "temp"
    (606064 'move' call_tmp[606061](43955 call _to_nonnil call_tmp[606056]))
    (505678 'move' ret[505673](505677 'deref' call_tmp[606061]))
    (505675 return ret[505673])
    (355144 'used modules list'(43899 'import' HaltWrappers[210085]))
  }
  (355139 'used modules list'(41672 'use' ChapelError[167899])(41674 'use' Atomics[43964])(41675 'use' ChapelBase[307])(41678 'use' OwnedObject[39586]))
}