AST dump for SharedObject after pass normalize.
Module use list: ChapelError Atomics ChapelBase OwnedObject HaltWrappers 

{
  function chpl__init_SharedObject[415838]() : void[4] "insert line file info" "module init"
  {
    (505465 return _void[55])
  }
  function ReferenceCount[41751].init[41687](arg _mt[41755]:_MT[238], arg this[41753]:ReferenceCount[41751]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[454175] "temporary of super field" "temp"
    (454183 'move' super_tmp[454175](454176 '.v' this[41753] c"super"))
    (454179 call init _mt[243] super_tmp[454175])
    (474023 'end of statement')
    unknown tmp[454146] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491458] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[604278] "expr temp" "maybe param" "maybe type" "temp"
      (604281 'move' call_tmp[604278](454148 '.v' this[41753] c"super"))
      (491462 'move' call_type_tmp[491458](454151 'typeof' call_tmp[604278]))
    }
    (454152 'move' tmp[454146] call_type_tmp[491458])
    unknown call_tmp[604283] "maybe param" "maybe type" "temp"
    (604286 'move' call_tmp[604283](454157 'cast' tmp[454146] this[41753]))
    unknown chpl__thisAsParent[454154] "dead at end of block" "insert auto destroy" "temp"
    (540460 'init var' chpl__thisAsParent[454154] call_tmp[604283] tmp[454146])
    (454160 'setcid' chpl__thisAsParent[454154])
    (474024 'end of statement')
    unknown tmp[454162] "temp"
    unknown call_tmp[604288] "expr temp" "maybe param" "maybe type" "temp"
    (604291 'move' call_tmp[604288](454165 call chpl__atomicType int(64)[13]))
    (454167 'default init var' tmp[454162] call_tmp[604288])
    (454169 '.=' this[41753] c"count" tmp[454162])
    (474025 'end of statement')
    (454174 'setcid' this[41753])
    (474026 'end of statement')
    unknown call_tmp[604295] "expr temp" "maybe param" "maybe type" "temp"
    (604298 'move' call_tmp[604295](356876 call count _mt[243] this[41753]))
    (41705 call(41700 call (partial) write _mt[243] call_tmp[604295]) 1)
    (505240 return _void[55])
  }
  function ReferenceCount[41751].retain[41711](arg _mt[41759]:_MT[238], arg this[41757]:ReferenceCount[41751]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604304] "expr temp" "maybe param" "maybe type" "temp"
    (604307 'move' call_tmp[604304](356881 call count _mt[243] this[41757]))
    (41719 call(41714 call (partial) add _mt[243] call_tmp[604304]) 1)
    (505242 return _void[55])
  }
  function ReferenceCount[41751].release[41726](arg _mt[41763]:_MT[238], arg this[41761]:ReferenceCount[41751]) : _unknown[51] "method" "primary method"
  {
    unknown ret[505246] "RVV" "temp"
    unknown call_tmp[604313] "expr temp" "maybe param" "maybe type" "temp"
    (604316 'move' call_tmp[604313](356886 call count _mt[243] this[41761]))
    unknown call_tmp[604320] "maybe param" "maybe type" "temp"
    (604323 'move' call_tmp[604320](41736 call(41731 call (partial) fetchSub _mt[243] call_tmp[604313]) 1))
    unknown oldValue[41737] "dead at end of block" "insert auto destroy"
    (540462 'init var' oldValue[41737] call_tmp[604320])
    (41740 'end of statement')
    unknown call_tmp[604325] "expr temp" "maybe param" "maybe type" "temp"
    (604328 'move' call_tmp[604325](41744 call - oldValue[41737] 1))
    (505251 'move' ret[505246](505250 'deref' call_tmp[604325]))
    gotoReturn _end_release[505244] _end_release[505244]
    (474029 'end of statement' oldValue[41737])
    label _end_release[505244]
    (505248 return ret[505246])
  }
  type ReferenceCount[41751] val super[355516]:object[22] "super class" unknown count[41681](41679 call chpl__atomicType int(64)[13])
  type unmanaged ReferenceCount?[415288]
  type ReferenceCount?[415285](?)
  type ReferenceCount[370514](?)
  function _shared[32](?).chpl_forwarding_expr2[41781](arg _mt[42956]:_MT[238], arg this[42954]:_shared[32](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[505257] "RVV" "temp"
    (505261 'move' ret[505257](41780 call(370510 call (partial) borrow _mt[243] this[42954])))
    (505259 return ret[505257])
  }
  function _shared[32](?).init[41798](arg _mt[42960]:_MT[238], ref arg this[42958]:_shared[32](?), arg chpl_t[41796]:_any[178](?)) : void[4] "leaves this nil" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604332] "expr temp" "maybe param" "maybe type" "temp"
    (604335 'move' call_tmp[604332](41803 call isClass chpl_t[41796]))
    unknown call_tmp[604337] "expr temp" "maybe param" "maybe type" "temp"
    (604340 'move' call_tmp[604337](41804 call ! call_tmp[604332]))
    unknown call_tmp[604342] "expr temp" "maybe param" "maybe type" "temp"
    (604345 'move' call_tmp[604342](41827 call _cond_test call_tmp[604337]))
    if call_tmp[604342]
    {
      (41825 call compilerError "shared only works with classes")
    }
    unknown tmp[454186] "temp" "type variable"
    (454188 'move' tmp[454186](41840 call _to_borrowed chpl_t[41796]))
    (454190 'init field' this[42958] c"chpl_t" tmp[454186])
    (474032 'end of statement')
    unknown call_tmp[604347] "expr temp" "maybe param" "maybe type" "temp"
    (604350 'move' call_tmp[604347](454204 '.v' this[42958] c"chpl_t"))
    unknown call_tmp[604352] "maybe param" "maybe type" "temp"
    (604355 'move' call_tmp[604352](454196 'to nilable class' call_tmp[604347]))
    unknown tmp[454194] "temp"
    (454198 'init var' tmp[454194] nil[44] call_tmp[604352])
    (454200 'init field' this[42958] c"chpl_p" tmp[454194])
    (474033 'end of statement')
    unknown tmp[454207] "temp"
    (454210 'init var' tmp[454207] nil[44] unmanaged ReferenceCount?[415288])
    (454212 'init field' this[42958] c"chpl_pn" tmp[454207])
    (474034 'end of statement')
    (505263 return _void[55])
  }
  function _shared[32](?).init[41870](arg _mt[42964]:_MT[238], ref arg this[42962]:_shared[32](?), arg p[41867]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (41891 call compilerError "cannot initialize shared from a borrow")
    (474035 'end of statement')
    unknown call_tmp[604359] "expr temp" "maybe param" "maybe type" "temp"
    (604362 'move' call_tmp[604359](41901 call _to_unmanaged p[41867]))
    (41903 call(41895 call (partial) init _mt[243] this[42962]) call_tmp[604359])
    (505265 return _void[55])
  }
  function _shared[32](?).init[41913](arg _mt[42968]:_MT[238], ref arg this[42966]:_shared[32](?), arg p[41910]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454216] "temp" "type variable"
    unknown call_tmp[604364] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604367 'move' call_tmp[604364](41921 'typeof' p[41910]))
    (454218 'move' tmp[454216](41923 call _to_borrowed call_tmp[604364]))
    (454220 'init field' this[42966] c"chpl_t" tmp[454216])
    (474037 'end of statement')
    unknown rc[41932] "dead at end of block" "insert auto destroy"
    (540464 'init var' rc[41932] nil[44] unmanaged ReferenceCount?[415288])
    (41935 'end of statement')
    unknown call_tmp[604369] "expr temp" "maybe param" "maybe type" "temp"
    (604372 'move' call_tmp[604369](41938 call != p[41910] nil[44]))
    unknown call_tmp[604374] "expr temp" "maybe param" "maybe type" "temp"
    (604377 'move' call_tmp[604374](41950 call _cond_test call_tmp[604369]))
    if call_tmp[604374]
    {
      unknown call_tmp[604379] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604382 'move' call_tmp[604379](747658 'new' ReferenceCount[370514](?)(_chpl_manager = unmanaged[220](?))))
      (41947 call = rc[41932] call_tmp[604379])
      (474038 'end of statement' rc[41932])
    }
    unknown call_tmp[604384] "maybe param" "maybe type" "temp"
    (604387 'move' call_tmp[604384](41962 call _to_borrowed p[41910]))
    unknown call_tmp[604389] "expr temp" "maybe param" "maybe type" "temp"
    (604392 'move' call_tmp[604389](454234 '.v' this[42966] c"chpl_t"))
    unknown call_tmp[604394] "maybe param" "maybe type" "temp"
    (604397 'move' call_tmp[604394](454226 'to nilable class' call_tmp[604389]))
    unknown tmp[454224] "temp"
    (454228 'init var' tmp[454224] call_tmp[604384] call_tmp[604394])
    (454230 'init field' this[42966] c"chpl_p" tmp[454224])
    (474040 'end of statement')
    unknown tmp[454237] "temp"
    (454240 'init var' tmp[454237] rc[41932] unmanaged ReferenceCount?[415288])
    (454242 'init field' this[42966] c"chpl_pn" tmp[454237])
    (474041 'end of statement' rc[41932])
    (505267 return _void[55])
  }
  function _shared[32](?).init[41990](arg _mt[42972]:_MT[238], ref arg this[42970]:_shared[32](?), arg p[41987]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42021 call compilerError "shared only works with classes")
    (474043 'end of statement')
    unknown tmp[454252] "temp" "type variable"
    (454254 'move' tmp[454252](454246 'typeof' p[41987]))
    (454256 'init field' this[42970] c"chpl_t" tmp[454252])
    (474044 'end of statement')
    unknown call_tmp[604399] "expr temp" "maybe param" "maybe type" "temp"
    (604402 'move' call_tmp[604399](454270 '.v' this[42970] c"chpl_t"))
    unknown call_tmp[604404] "maybe param" "maybe type" "temp"
    (604407 'move' call_tmp[604404](454262 'to nilable class' call_tmp[604399]))
    unknown tmp[454260] "temp"
    (454264 'init var' tmp[454260] p[41987] call_tmp[604404])
    (454266 'init field' this[42970] c"chpl_p" tmp[454260])
    (474045 'end of statement')
    val tmp[454274]:unmanaged ReferenceCount?[415288] "temp"
    (454277 'default init var' tmp[454274] unmanaged ReferenceCount?[415288])
    (454279 '.=' this[42970] c"chpl_pn" tmp[454274])
    (474046 'end of statement')
    (505269 return _void[55])
  }
  where {
    unknown tmp[418138] "maybe param" "temp"
    unknown tmp[418159] "maybe param" "temp"
    unknown call_tmp[604409] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604412 'move' call_tmp[604409](454248 'typeof' p[41987]))
    unknown call_tmp[604414] "expr temp" "maybe param" "maybe type" "temp"
    (604417 'move' call_tmp[604414](41995 call isClass call_tmp[604409]))
    (418170 'move' tmp[418159](41997 call == call_tmp[604414] 0))
    unknown call_tmp[604419] "expr temp" "maybe param" "maybe type" "temp"
    (604422 'move' call_tmp[604419](418172 call _cond_invalid tmp[418159]))
    if call_tmp[604419]
    {
      (418175 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[553961] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[553962] "maybe param" "temp"
    unknown call_tmp[604424] "expr temp" "maybe param" "maybe type" "temp"
    (604427 'move' call_tmp[604424](418160 call isTrue tmp[418159]))
    (553967 'move' tmp[553962](553965 call _cond_test call_tmp[604424]))
    if tmp[553962]
    {
      unknown tmp[553969] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604429] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604432 'move' call_tmp[604429](454250 'typeof' p[41987]))
      unknown call_tmp[604434] "expr temp" "maybe param" "maybe type" "temp"
      (604437 'move' call_tmp[604434](354110 'is_subtype' _shared[32](?) call_tmp[604429]))
      unknown call_tmp[604439] "expr temp" "maybe param" "maybe type" "temp"
      (604442 'move' call_tmp[604439](42005 call == call_tmp[604434] 0))
      (553971 'move' tmp[553969](418163 call isTrue call_tmp[604439]))
      (553976 'move' tmp[553961](553973 '_paramFoldLogical' tmp[553962] tmp[553969]))
    }
    {
      (553981 'move' tmp[553961](553978 '_paramFoldLogical' tmp[553962] 0))
    }
    (418149 'move' tmp[418138] tmp[553961])
    unknown call_tmp[604444] "expr temp" "maybe param" "maybe type" "temp"
    (604447 'move' call_tmp[604444](418151 call _cond_invalid tmp[418138]))
    if call_tmp[604444]
    {
      (418154 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[553988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[553989] "maybe param" "temp"
    unknown call_tmp[604449] "expr temp" "maybe param" "maybe type" "temp"
    (604452 'move' call_tmp[604449](418139 call isTrue tmp[418138]))
    (553994 'move' tmp[553989](553992 call _cond_test call_tmp[604449]))
    if tmp[553989]
    {
      unknown tmp[553996] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604454] "expr temp" "maybe param" "maybe type" "temp"
      (604457 'move' call_tmp[604454](42012 call isIterator p[41987]))
      unknown call_tmp[604459] "expr temp" "maybe param" "maybe type" "temp"
      (604462 'move' call_tmp[604459](42014 call == call_tmp[604454] 0))
      (553998 'move' tmp[553996](418142 call isTrue call_tmp[604459]))
      (554003 'move' tmp[553988](554000 '_paramFoldLogical' tmp[553989] tmp[553996]))
    }
    {
      (554008 'move' tmp[553988](554005 '_paramFoldLogical' tmp[553989] 0))
    }
    (748089 call chpl_statementLevelSymbol tmp[553988])
  }
  function _shared[32](?).init[42049](arg _mt[42976]:_MT[238], ref arg this[42974]:_shared[32](?), in arg take[42046]:_owned[30](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604466] "maybe param" "maybe type" "temp"
    (604469 'move' call_tmp[604466](42056 call(42052 call (partial) release _mt[243] take[42046])))
    unknown p[42057] "dead at end of block" "insert auto destroy"
    (540466 'init var' p[42057] call_tmp[604466])
    (42060 'end of statement')
    unknown tmp[454283] "temp" "type variable"
    unknown tmp[554015] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554016] "maybe param" "temp"
    unknown call_tmp[604471] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604474 'move' call_tmp[604471](42067 'typeof' this[42974]))
    unknown call_tmp[604478] "expr temp" "maybe param" "maybe type" "temp"
    (604481 'move' call_tmp[604478](42068 call chpl_t _mt[243] call_tmp[604471]))
    unknown call_tmp[604483] "expr temp" "maybe param" "maybe type" "temp"
    (604486 'move' call_tmp[604483](42072 call == call_tmp[604478] ?[260]))
    (554021 'move' tmp[554016](554019 call _cond_test call_tmp[604483]))
    if tmp[554016]
    {
      unknown tmp[554023] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604488] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604491 'move' call_tmp[604488](42076 'typeof' p[42057]))
      (554025 'move' tmp[554023](42078 call _to_borrowed call_tmp[604488]))
      (554030 'move' tmp[554015](554027 '_paramFoldLogical' tmp[554016] tmp[554023]))
    }
    {
      unknown tmp[554032] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604493] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604496 'move' call_tmp[604493](42080 'typeof' this[42974]))
      (554034 'move' tmp[554032](42081 call chpl_t _mt[243] call_tmp[604493]))
      (554039 'move' tmp[554015](554036 '_paramFoldLogical' tmp[554016] tmp[554032]))
    }
    (454285 'move' tmp[454283] tmp[554015])
    (454287 'init field' this[42974] c"chpl_t" tmp[454283])
    (474047 'end of statement')
    unknown call_tmp[604500] "expr temp" "maybe param" "maybe type" "temp"
    (604503 'move' call_tmp[604500](42093 call isClass p[42057]))
    unknown call_tmp[604505] "expr temp" "maybe param" "maybe type" "temp"
    (604508 'move' call_tmp[604505](42094 call ! call_tmp[604500]))
    unknown call_tmp[604510] "expr temp" "maybe param" "maybe type" "temp"
    (604513 'move' call_tmp[604510](42101 call _cond_test call_tmp[604505]))
    if call_tmp[604510]
    {
      (42099 call compilerError "shared only works with classes")
    }
    unknown rc[42110] "dead at end of block" "insert auto destroy"
    (540468 'init var' rc[42110] nil[44] unmanaged ReferenceCount?[415288])
    (42113 'end of statement')
    unknown call_tmp[604515] "expr temp" "maybe param" "maybe type" "temp"
    (604518 'move' call_tmp[604515](42116 call != p[42057] nil[44]))
    unknown call_tmp[604520] "expr temp" "maybe param" "maybe type" "temp"
    (604523 'move' call_tmp[604520](42128 call _cond_test call_tmp[604515]))
    if call_tmp[604520]
    {
      unknown call_tmp[604525] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (604528 'move' call_tmp[604525](747659 'new' ReferenceCount[370514](?)(_chpl_manager = unmanaged[220](?))))
      (42125 call = rc[42110] call_tmp[604525])
      (474049 'end of statement' rc[42110])
    }
    unknown call_tmp[604530] "expr temp" "maybe param" "maybe type" "temp"
    (604533 'move' call_tmp[604530](454301 '.v' this[42974] c"chpl_t"))
    unknown call_tmp[604535] "maybe param" "maybe type" "temp"
    (604538 'move' call_tmp[604535](454293 'to nilable class' call_tmp[604530]))
    unknown tmp[454291] "temp"
    (454295 'init var' tmp[454291] p[42057] call_tmp[604535])
    (454297 'init field' this[42974] c"chpl_p" tmp[454291])
    (474051 'end of statement' p[42057])
    unknown tmp[454304] "temp"
    (454307 'init var' tmp[454304] rc[42110] unmanaged ReferenceCount?[415288])
    (454309 'init field' this[42974] c"chpl_pn" tmp[454304])
    (474053 'end of statement' rc[42110])
    (505271 return _void[55])
  }
  function _shared[32](?).init[42164](arg _mt[42980]:_MT[238], ref arg this[42978]:_shared[32](?), arg _private[42161]:bool[10], arg t[42166]:_any[178](?), ref arg src[42169]:_shared[32](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454313] "temp" "type variable"
    (454315 'move' tmp[454313] t[42166])
    (454317 'init field' this[42978] c"chpl_t" tmp[454313])
    (474055 'end of statement')
    unknown call_tmp[604540] "expr temp" "maybe param" "maybe type" "temp"
    (604543 'move' call_tmp[604540](42193 call _to_unmanaged t[42166]))
    unknown call_tmp[604545] "expr temp" "maybe param" "maybe type" "temp"
    (604548 'move' call_tmp[604545](42195 call _to_nilable call_tmp[604540]))
    unknown call_tmp[604552] "expr temp" "maybe param" "maybe type" "temp"
    (604555 'move' call_tmp[604552](42186 call chpl_p _mt[243] src[42169]))
    unknown call_tmp[604557] "maybe param" "maybe type" "temp"
    (604560 'move' call_tmp[604557](42196 call _cast call_tmp[604545] call_tmp[604552]))
    unknown call_tmp[604562] "expr temp" "maybe param" "maybe type" "temp"
    (604565 'move' call_tmp[604562](454331 '.v' this[42978] c"chpl_t"))
    unknown call_tmp[604567] "maybe param" "maybe type" "temp"
    (604570 'move' call_tmp[604567](454323 'to nilable class' call_tmp[604562]))
    unknown tmp[454321] "temp"
    (454325 'init var' tmp[454321] call_tmp[604557] call_tmp[604567])
    (454327 'init field' this[42978] c"chpl_p" tmp[454321])
    (474056 'end of statement')
    unknown call_tmp[604574] "maybe param" "maybe type" "temp"
    (604577 'move' call_tmp[604574](42206 call chpl_pn _mt[243] src[42169]))
    unknown tmp[454334] "temp"
    (454337 'init var' tmp[454334] call_tmp[604574] unmanaged ReferenceCount?[415288])
    (454339 'init field' this[42978] c"chpl_pn" tmp[454334])
    (474057 'end of statement')
    unknown call_tmp[604581] "expr temp" "maybe param" "maybe type" "temp"
    (604584 'move' call_tmp[604581](42213 call chpl_p _mt[243] src[42169]))
    (42217 call = call_tmp[604581] nil[44])
    (474058 'end of statement')
    unknown call_tmp[604588] "expr temp" "maybe param" "maybe type" "temp"
    (604591 'move' call_tmp[604588](42221 call chpl_pn _mt[243] src[42169]))
    (42225 call = call_tmp[604588] nil[44])
    (505273 return _void[55])
  }
  function _shared[32](?).init[42236](arg _mt[42984]:_MT[238], ref arg this[42982]:_shared[32](?), arg _private[42233]:bool[10], arg t[42238]:_any[178](?), arg p[42240]:_any[178](?), arg pn[42242]:_any[178](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604593] "expr temp" "maybe param" "maybe type" "temp"
    (604596 'move' call_tmp[604593](42249 call _to_unmanaged t[42238]))
    unknown call_tmp[604598] "expr temp" "maybe param" "maybe type" "temp"
    (604601 'move' call_tmp[604598](42251 call _to_nilable call_tmp[604593]))
    unknown call_tmp[604603] "maybe param" "maybe type" "temp"
    (604606 'move' call_tmp[604603](42252 call _cast call_tmp[604598] p[42240]))
    unknown ptr[42254] "dead at end of block" "insert auto destroy"
    (540470 'init var' ptr[42254] call_tmp[604603])
    (42257 'end of statement')
    unknown count[42260] "dead at end of block" "insert auto destroy"
    (540472 'init var' count[42260] pn[42242])
    (42263 'end of statement')
    unknown call_tmp[604608] "expr temp" "maybe param" "maybe type" "temp"
    (604611 'move' call_tmp[604608](42266 call != ptr[42254] nil[44]))
    unknown call_tmp[604613] "expr temp" "maybe param" "maybe type" "temp"
    (604616 'move' call_tmp[604613](42284 call _cond_test call_tmp[604608]))
    if call_tmp[604613]
    {
      unknown call_tmp[604618] "expr temp" "maybe param" "maybe type" "temp"
      (604621 'move' call_tmp[604618](42269 call postfix! count[42260]))
      (42275 call(42271 call (partial) retain _mt[243] call_tmp[604618]))
      (474060 'end of statement' count[42260])
    }
    {
      (42280 call = count[42260] nil[44])
      (474062 'end of statement' count[42260])
    }
    unknown tmp[454343] "temp" "type variable"
    (454345 'move' tmp[454343] t[42238])
    (454347 'init field' this[42982] c"chpl_t" tmp[454343])
    (474064 'end of statement')
    unknown call_tmp[604625] "expr temp" "maybe param" "maybe type" "temp"
    (604628 'move' call_tmp[604625](454361 '.v' this[42982] c"chpl_t"))
    unknown call_tmp[604630] "maybe param" "maybe type" "temp"
    (604633 'move' call_tmp[604630](454353 'to nilable class' call_tmp[604625]))
    unknown tmp[454351] "temp"
    (454355 'init var' tmp[454351] ptr[42254] call_tmp[604630])
    (454357 'init field' this[42982] c"chpl_p" tmp[454351])
    (474065 'end of statement' ptr[42254])
    unknown tmp[454364] "temp"
    (454367 'init var' tmp[454364] count[42260] unmanaged ReferenceCount?[415288])
    (454369 'init field' this[42982] c"chpl_pn" tmp[454364])
    (474067 'end of statement' count[42260])
    (505275 return _void[55])
  }
  function _shared[32](?).init=[42320](arg _mt[42988]:_MT[238], ref arg this[42986]:_shared[32](?), in arg take[42317]:_owned[30](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418180] "maybe param" "temp"
    unknown call_tmp[604635] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604638 'move' call_tmp[604635](42324 'typeof' this[42986]))
    (418191 'move' tmp[418180](42326 call isNonNilableClass call_tmp[604635]))
    unknown call_tmp[604640] "expr temp" "maybe param" "maybe type" "temp"
    (604643 'move' call_tmp[604640](418193 call _cond_invalid tmp[418180]))
    if call_tmp[604640]
    {
      (418196 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554046] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554047] "maybe param" "temp"
    unknown call_tmp[604645] "expr temp" "maybe param" "maybe type" "temp"
    (604648 'move' call_tmp[604645](418181 call isTrue tmp[418180]))
    (554052 'move' tmp[554047](554050 call _cond_test call_tmp[604645]))
    if tmp[554047]
    {
      unknown tmp[554054] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604650] "expr temp" "maybe param" "maybe type" "temp"
      (604653 'move' call_tmp[604650](42330 call isNilableClass take[42317]))
      (554056 'move' tmp[554054](418184 call isTrue call_tmp[604650]))
      (554061 'move' tmp[554046](554058 '_paramFoldLogical' tmp[554047] tmp[554054]))
    }
    {
      (554066 'move' tmp[554046](554063 '_paramFoldLogical' tmp[554047] 0))
    }
    unknown call_tmp[604655] "expr temp" "maybe param" "maybe type" "temp"
    (604658 'move' call_tmp[604655](42356 call _cond_test tmp[554046]))
    if call_tmp[604655]
    {
      (42354 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    (42368 call(42363 call (partial) init _mt[243] this[42986]) take[42317])
    (505277 return _void[55])
  }
  function _shared[32](?).init=[42378](arg _mt[42992]:_MT[238], ref arg this[42990]:_shared[32](?), const  ref arg src[42375]:_shared[32](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown tmp[418201] "maybe param" "temp"
    unknown call_tmp[604662] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604665 'move' call_tmp[604662](42382 'typeof' this[42990]))
    (418212 'move' tmp[418201](42384 call isNonNilableClass call_tmp[604662]))
    unknown call_tmp[604667] "expr temp" "maybe param" "maybe type" "temp"
    (604670 'move' call_tmp[604667](418214 call _cond_invalid tmp[418201]))
    if call_tmp[604667]
    {
      (418217 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554073] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554074] "maybe param" "temp"
    unknown call_tmp[604672] "expr temp" "maybe param" "maybe type" "temp"
    (604675 'move' call_tmp[604672](418202 call isTrue tmp[418201]))
    (554079 'move' tmp[554074](554077 call _cond_test call_tmp[604672]))
    if tmp[554074]
    {
      unknown tmp[554081] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604677] "expr temp" "maybe param" "maybe type" "temp"
      (604680 'move' call_tmp[604677](42388 call isNilableClass src[42375]))
      (554083 'move' tmp[554081](418205 call isTrue call_tmp[604677]))
      (554088 'move' tmp[554073](554085 '_paramFoldLogical' tmp[554074] tmp[554081]))
    }
    {
      (554093 'move' tmp[554073](554090 '_paramFoldLogical' tmp[554074] 0))
    }
    unknown call_tmp[604682] "expr temp" "maybe param" "maybe type" "temp"
    (604685 'move' call_tmp[604682](42396 call _cond_test tmp[554073]))
    if call_tmp[604682]
    {
      (42394 call compilerError "cannot create a non-nilable shared variable from a nilable class instance")
    }
    unknown call_tmp[604687] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604690 'move' call_tmp[604687](42409 'typeof' this[42990]))
    unknown call_tmp[604694] "expr temp" "maybe param" "maybe type" "temp"
    (604697 'move' call_tmp[604694](42410 call chpl_t _mt[243] call_tmp[604687]))
    unknown call_tmp[604701] "expr temp" "maybe param" "maybe type" "temp"
    (604704 'move' call_tmp[604701](42404 call chpl_t _mt[243] src[42375]))
    unknown call_tmp[604706] "expr temp" "maybe param" "maybe type" "temp"
    (604709 'move' call_tmp[604706](354111 'is_coercible' call_tmp[604694] call_tmp[604701]))
    unknown call_tmp[604711] "expr temp" "maybe param" "maybe type" "temp"
    (604714 'move' call_tmp[604711](42415 call == call_tmp[604706] 0))
    unknown call_tmp[604716] "expr temp" "maybe param" "maybe type" "temp"
    (604719 'move' call_tmp[604716](42434 call _cond_test call_tmp[604711]))
    if call_tmp[604716]
    {
      unknown call_tmp[604721] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604724 'move' call_tmp[604721](42421 'typeof' src[42375]))
      unknown call_tmp[604726] "expr temp" "maybe param" "maybe type" "temp"
      (604729 'move' call_tmp[604726](42423 call _cast string[26] call_tmp[604721]))
      unknown call_tmp[604731] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (604734 'move' call_tmp[604731](42427 'typeof' this[42990]))
      unknown call_tmp[604736] "expr temp" "maybe param" "maybe type" "temp"
      (604739 'move' call_tmp[604736](42429 call _cast string[26] call_tmp[604731]))
      (42432 call compilerError "cannot coerce '" call_tmp[604726] "' to '" call_tmp[604736] "' in initialization")
    }
    unknown tmp[454373] "temp" "type variable"
    unknown call_tmp[604741] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604744 'move' call_tmp[604741](42444 'typeof' this[42990]))
    (454375 'move' tmp[454373](42445 call chpl_t _mt[243] call_tmp[604741]))
    (454377 'init field' this[42990] c"chpl_t" tmp[454373])
    (474075 'end of statement')
    unknown call_tmp[604750] "maybe param" "maybe type" "temp"
    (604753 'move' call_tmp[604750](42456 call chpl_p _mt[243] src[42375]))
    unknown call_tmp[604755] "expr temp" "maybe param" "maybe type" "temp"
    (604758 'move' call_tmp[604755](454391 '.v' this[42990] c"chpl_t"))
    unknown call_tmp[604760] "maybe param" "maybe type" "temp"
    (604763 'move' call_tmp[604760](454383 'to nilable class' call_tmp[604755]))
    unknown tmp[454381] "temp"
    (454385 'init var' tmp[454381] call_tmp[604750] call_tmp[604760])
    (454387 'init field' this[42990] c"chpl_p" tmp[454381])
    (474076 'end of statement')
    unknown call_tmp[604767] "maybe param" "maybe type" "temp"
    (604770 'move' call_tmp[604767](42467 call chpl_pn _mt[243] src[42375]))
    unknown tmp[454394] "temp"
    (454397 'init var' tmp[454394] call_tmp[604767] unmanaged ReferenceCount?[415288])
    (454399 'init field' this[42990] c"chpl_pn" tmp[454394])
    (474077 'end of statement')
    unknown call_tmp[604774] "expr temp" "maybe param" "maybe type" "temp"
    (604777 'move' call_tmp[604774](42481 call chpl_pn _mt[243] this[42990]))
    unknown call_tmp[604779] "expr temp" "maybe param" "maybe type" "temp"
    (604782 'move' call_tmp[604779](42485 call != call_tmp[604774] nil[44]))
    unknown call_tmp[604784] "expr temp" "maybe param" "maybe type" "temp"
    (604787 'move' call_tmp[604784](42499 call _cond_test call_tmp[604779]))
    if call_tmp[604784]
    {
      unknown call_tmp[604791] "expr temp" "maybe param" "maybe type" "temp"
      (604794 'move' call_tmp[604791](42488 call chpl_pn _mt[243] this[42990]))
      unknown call_tmp[604796] "expr temp" "maybe param" "maybe type" "temp"
      (604799 'move' call_tmp[604796](42491 call postfix! call_tmp[604791]))
      (42497 call(42493 call (partial) retain _mt[243] call_tmp[604796]))
    }
    (505279 return _void[55])
  }
  function _shared[32](?).init=[42512](arg _mt[42996]:_MT[238], ref arg this[42994]:_shared[32](?), arg src[42509]:borrowed[211](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42533 call compilerError "cannot create a shared variable from a borrowed class instance")
    (474079 'end of statement')
    unknown tmp[454403] "temp" "type variable"
    (454405 'move' tmp[454403] int(64)[13])
    (454407 'init field' this[42994] c"chpl_t" tmp[454403])
    (474080 'end of statement')
    unknown tmp[454412] "temp"
    unknown call_tmp[604803] "expr temp" "maybe param" "maybe type" "temp"
    (604806 'move' call_tmp[604803](454422 '.v' this[42994] c"chpl_t"))
    unknown call_tmp[604808] "expr temp" "maybe param" "maybe type" "temp"
    (604811 'move' call_tmp[604808](454414 'to nilable class' call_tmp[604803]))
    (454416 'default init var' tmp[454412] call_tmp[604808])
    (454418 '.=' this[42994] c"chpl_p" tmp[454412])
    (474081 'end of statement')
    val tmp[454425]:unmanaged ReferenceCount?[415288] "temp"
    (454428 'default init var' tmp[454425] unmanaged ReferenceCount?[415288])
    (454430 '.=' this[42994] c"chpl_pn" tmp[454425])
    (474082 'end of statement')
    (505281 return _void[55])
  }
  function _shared[32](?).init=[42552](arg _mt[43000]:_MT[238], ref arg this[42998]:_shared[32](?), arg src[42549]:unmanaged[220](?)) : void[4] "method" "primary method" "no doc" "no return value for void"
  {
    (42573 call compilerError "cannot create a shared variable from an unmanaged class instance")
    (474083 'end of statement')
    unknown tmp[454434] "temp" "type variable"
    (454436 'move' tmp[454434] int(64)[13])
    (454438 'init field' this[42998] c"chpl_t" tmp[454434])
    (474084 'end of statement')
    unknown tmp[454443] "temp"
    unknown call_tmp[604813] "expr temp" "maybe param" "maybe type" "temp"
    (604816 'move' call_tmp[604813](454453 '.v' this[42998] c"chpl_t"))
    unknown call_tmp[604818] "expr temp" "maybe param" "maybe type" "temp"
    (604821 'move' call_tmp[604818](454445 'to nilable class' call_tmp[604813]))
    (454447 'default init var' tmp[454443] call_tmp[604818])
    (454449 '.=' this[42998] c"chpl_p" tmp[454443])
    (474085 'end of statement')
    val tmp[454456]:unmanaged ReferenceCount?[415288] "temp"
    (454459 'default init var' tmp[454456] unmanaged ReferenceCount?[415288])
    (454461 '.=' this[42998] c"chpl_pn" tmp[454456])
    (474086 'end of statement')
    (505283 return _void[55])
  }
  function _shared[32](?).init=[42592](arg _mt[43004]:_MT[238], ref arg this[43002]:_shared[32](?), arg src[42589]:_nilType[42]) : void[4] "leaves this nil" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604825] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604828 'move' call_tmp[604825](42599 'typeof' this[43002]))
    unknown call_tmp[604832] "expr temp" "maybe param" "maybe type" "temp"
    (604835 'move' call_tmp[604832](42600 call chpl_t _mt[243] call_tmp[604825]))
    (42604 call(42595 call (partial) init _mt[243] this[43002]) call_tmp[604832])
    (474087 'end of statement')
    unknown call_tmp[604839] "expr temp" "maybe param" "maybe type" "temp"
    (604842 'move' call_tmp[604839](370571 call chpl_t _mt[243] this[43002]))
    unknown call_tmp[604844] "expr temp" "maybe param" "maybe type" "temp"
    (604847 'move' call_tmp[604844](42610 call isNonNilableClass call_tmp[604839]))
    unknown call_tmp[604849] "expr temp" "maybe param" "maybe type" "temp"
    (604852 'move' call_tmp[604849](42632 call _cond_test call_tmp[604844]))
    if call_tmp[604849]
    {
      (42630 call compilerError "Assigning non-nilable shared to nil")
    }
    (505285 return _void[55])
  }
  function _shared[32](?).doClear[42641](arg _mt[43008]:_MT[238], ref arg this[43006]:_shared[32](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[418222] "maybe param" "temp"
    unknown call_tmp[604856] "expr temp" "maybe param" "maybe type" "temp"
    (604859 'move' call_tmp[604856](370576 call chpl_p _mt[243] this[43006]))
    (418233 'move' tmp[418222](42645 call != call_tmp[604856] nil[44]))
    unknown call_tmp[604861] "expr temp" "maybe param" "maybe type" "temp"
    (604864 'move' call_tmp[604861](418235 call _cond_invalid tmp[418222]))
    if call_tmp[604861]
    {
      (418238 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554100] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554101] "maybe param" "temp"
    unknown call_tmp[604866] "expr temp" "maybe param" "maybe type" "temp"
    (604869 'move' call_tmp[604866](418223 call isTrue tmp[418222]))
    (554106 'move' tmp[554101](554104 call _cond_test call_tmp[604866]))
    if tmp[554101]
    {
      unknown tmp[554108] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[604873] "expr temp" "maybe param" "maybe type" "temp"
      (604876 'move' call_tmp[604873](370581 call chpl_pn _mt[243] this[43006]))
      unknown call_tmp[604878] "expr temp" "maybe param" "maybe type" "temp"
      (604881 'move' call_tmp[604878](42649 call != call_tmp[604873] nil[44]))
      (554110 'move' tmp[554108](418226 call isTrue call_tmp[604878]))
      (554115 'move' tmp[554100](554112 '_paramFoldLogical' tmp[554101] tmp[554108]))
    }
    {
      (554120 'move' tmp[554100](554117 '_paramFoldLogical' tmp[554101] 0))
    }
    unknown call_tmp[604883] "expr temp" "maybe param" "maybe type" "temp"
    (604886 'move' call_tmp[604883](42688 call _cond_test tmp[554100]))
    if call_tmp[604883]
    {
      unknown call_tmp[604890] "expr temp" "maybe param" "maybe type" "temp"
      (604893 'move' call_tmp[604890](370586 call chpl_pn _mt[243] this[43006]))
      unknown call_tmp[604895] "expr temp" "maybe param" "maybe type" "temp"
      (604898 'move' call_tmp[604895](42654 call postfix! call_tmp[604890]))
      unknown call_tmp[604902] "maybe param" "maybe type" "temp"
      (604905 'move' call_tmp[604902](42660 call(42656 call (partial) release _mt[243] call_tmp[604895])))
      unknown count[42661] "dead at end of block" "insert auto destroy"
      (540474 'init var' count[42661] call_tmp[604902])
      (42664 'end of statement')
      unknown call_tmp[604907] "expr temp" "maybe param" "maybe type" "temp"
      (604910 'move' call_tmp[604907](42668 call == count[42661] 0))
      unknown call_tmp[604912] "expr temp" "maybe param" "maybe type" "temp"
      (604915 'move' call_tmp[604912](42684 call _cond_test call_tmp[604907]))
      if call_tmp[604912]
      {
        unknown call_tmp[604919] "expr temp" "maybe param" "maybe type" "temp"
        (604922 'move' call_tmp[604919](370592 call chpl_p _mt[243] this[43006]))
        unknown call_tmp[604924] "expr temp" "maybe param" "maybe type" "temp"
        (604927 'move' call_tmp[604924](42673 call _to_unmanaged call_tmp[604919]))
        (42675 call chpl__delete call_tmp[604924])
        (474090 'end of statement')
        unknown call_tmp[604931] "expr temp" "maybe param" "maybe type" "temp"
        (604934 'move' call_tmp[604931](370597 call chpl_pn _mt[243] this[43006]))
        (42681 call chpl__delete call_tmp[604931])
      }
    }
    unknown call_tmp[604938] "expr temp" "maybe param" "maybe type" "temp"
    (604941 'move' call_tmp[604938](370602 call chpl_p _mt[243] this[43006]))
    (42695 call = call_tmp[604938] nil[44])
    (474092 'end of statement')
    unknown call_tmp[604945] "expr temp" "maybe param" "maybe type" "temp"
    (604948 'move' call_tmp[604945](370607 call chpl_pn _mt[243] this[43006]))
    (42700 call = call_tmp[604945] nil[44])
    (505287 return _void[55])
  }
  function _shared[32](?).create[42709](arg _mt[43012]:_MT[238], arg this[43010]:_shared[32](?), arg source[42707]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[604950] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604953 'move' call_tmp[604950](42731 'typeof' source[42707]))
    unknown call_tmp[604955] "expr temp" "maybe param" "maybe type" "temp"
    (604958 'move' call_tmp[604955](42733 call _cast string[26] call_tmp[604950]))
    (42735 call compilerError "cannot create a 'shared' from " call_tmp[604955])
    (505289 return _void[55])
  }
  function _shared[32](?).create[42746](arg _mt[43016]:_MT[238], arg this[43014]:_shared[32](?), in arg take[42743]:_owned[30](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505293] "RVV" "temp"
    unknown result[42750] "dead at end of block" "insert auto destroy"
    (540476 'init var' result[42750] take[42743] _shared[32](?))
    (42753 'end of statement')
    (505298 'move' ret[505293](505297 'deref' result[42750]))
    gotoReturn _end_create[505291] _end_create[505291]
    (474095 'end of statement' result[42750])
    label _end_create[505291]
    (505295 return ret[505293])
  }
  function _shared[32](?).create[42766](arg _mt[43020]:_MT[238], arg this[43018]:_shared[32](?), in arg src[42763]:_shared[32](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[505304] "RVV" "temp"
    (505309 'move' ret[505304](505308 'deref' src[42763]))
    (505306 return ret[505304])
  }
  function _shared[32](?).create[42780](arg _mt[43024]:_MT[238], arg this[43022]:_shared[32](?), arg p[42777]:unmanaged[220](?)) : _unknown[51] "inline" "method" "primary method" "unsafe"
  {
    unknown ret[505313] "RVV" "temp"
    unknown result[42787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[604960] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (604963 'move' call_tmp[604960](42783 'typeof' p[42777]))
    unknown call_tmp[604965] "expr temp" "maybe param" "maybe type" "temp"
    (604968 'move' call_tmp[604965](42785 call _cast _shared[32](?) call_tmp[604960]))
    (540478 'default init var' result[42787] call_tmp[604965])
    (42790 'end of statement')
    (42798 call(42793 call (partial) retain _mt[243] result[42787]) p[42777])
    (474098 'end of statement' result[42787])
    (505318 'move' ret[505313](505317 'deref' result[42787]))
    gotoReturn _end_create[505311] _end_create[505311]
    (474100 'end of statement' result[42787])
    label _end_create[505311]
    (505315 return ret[505313])
  }
  function _shared[32](?).deinit[42807](arg _mt[43028]:_MT[238], arg this[43026]:_shared[32](?)) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604974] "expr temp" "maybe param" "maybe type" "temp"
    (604977 'move' call_tmp[604974](370623 call chpl_p _mt[243] this[43026]))
    unknown call_tmp[604979] "expr temp" "maybe param" "maybe type" "temp"
    (604982 'move' call_tmp[604979](42812 call isClass call_tmp[604974]))
    unknown call_tmp[604984] "expr temp" "maybe param" "maybe type" "temp"
    (604987 'move' call_tmp[604984](42818 call _cond_test call_tmp[604979]))
    if call_tmp[604984]
    {
      (42815 call(370627 call (partial) doClear _mt[243] this[43026]))
    }
    (505322 return _void[55])
  }
  function _shared[32](?).retain[42831](arg _mt[43032]:_MT[238], ref arg this[43030]:_shared[32](?), arg newPtr[42828]:unmanaged[220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[604993] "expr temp" "maybe param" "maybe type" "temp"
    (604996 'move' call_tmp[604993](370633 call chpl_t _mt[243] this[43030]))
    unknown call_tmp[604998] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605001 'move' call_tmp[604998](42835 'typeof' newPtr[42828]))
    unknown call_tmp[605003] "expr temp" "maybe param" "maybe type" "temp"
    (605006 'move' call_tmp[605003](354112 'is_coercible' call_tmp[604993] call_tmp[604998]))
    unknown call_tmp[605008] "expr temp" "maybe param" "maybe type" "temp"
    (605011 'move' call_tmp[605008](42839 call ! call_tmp[605003]))
    unknown call_tmp[605013] "expr temp" "maybe param" "maybe type" "temp"
    (605016 'move' call_tmp[605013](42871 call _cond_test call_tmp[605008]))
    if call_tmp[605013]
    {
      unknown call_tmp[605018] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (605021 'move' call_tmp[605018](42844 'typeof' newPtr[42828]))
      unknown call_tmp[605023] "expr temp" "maybe param" "maybe type" "temp"
      (605026 'move' call_tmp[605023](42846 call _cast string[26] call_tmp[605018]))
      unknown call_tmp[605028] "expr temp" "maybe param" "maybe type" "temp"
      (605031 'move' call_tmp[605028](42848 call + "cannot retain '" call_tmp[605023]))
      unknown call_tmp[605033] "expr temp" "maybe param" "maybe type" "temp"
      (605036 'move' call_tmp[605033](42851 call + call_tmp[605028] "' "))
      unknown call_tmp[605038] "expr temp" "maybe param" "maybe type" "temp"
      (605041 'move' call_tmp[605038](42854 call + call_tmp[605033] "(expected '"))
      unknown call_tmp[605045] "expr temp" "maybe param" "maybe type" "temp"
      (605048 'move' call_tmp[605045](370639 call chpl_t _mt[243] this[43030]))
      unknown call_tmp[605050] "expr temp" "maybe param" "maybe type" "temp"
      (605053 'move' call_tmp[605050](42859 call _to_unmanaged call_tmp[605045]))
      unknown call_tmp[605055] "expr temp" "maybe param" "maybe type" "temp"
      (605058 'move' call_tmp[605055](42861 call _cast string[26] call_tmp[605050]))
      unknown call_tmp[605060] "expr temp" "maybe param" "maybe type" "temp"
      (605063 'move' call_tmp[605060](42863 call + call_tmp[605038] call_tmp[605055]))
      unknown call_tmp[605065] "expr temp" "maybe param" "maybe type" "temp"
      (605068 'move' call_tmp[605065](42866 call + call_tmp[605060] "')"))
      (42869 call compilerError call_tmp[605065])
    }
    (42879 call(370643 call (partial) doClear _mt[243] this[43030]))
    (474104 'end of statement')
    unknown call_tmp[605074] "expr temp" "maybe param" "maybe type" "temp"
    (605077 'move' call_tmp[605074](42882 call chpl_p _mt[243] this[43030]))
    (42886 call = call_tmp[605074] newPtr[42828])
    (474105 'end of statement')
    unknown call_tmp[605079] "expr temp" "maybe param" "maybe type" "temp"
    (605082 'move' call_tmp[605079](42891 call != newPtr[42828] nil[44]))
    unknown call_tmp[605084] "expr temp" "maybe param" "maybe type" "temp"
    (605087 'move' call_tmp[605084](42907 call _cond_test call_tmp[605079]))
    if call_tmp[605084]
    {
      unknown call_tmp[605091] "expr temp" "maybe param" "maybe type" "temp"
      (605094 'move' call_tmp[605091](42894 call chpl_pn _mt[243] this[43030]))
      unknown call_tmp[605096] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605099 'move' call_tmp[605096](747660 'new' ReferenceCount[370514](?)(_chpl_manager = unmanaged[220](?))))
      (42903 call = call_tmp[605091] call_tmp[605096])
    }
    (505324 return _void[55])
  }
  function _shared[32](?).clear[42915](arg _mt[43036]:_MT[238], ref arg this[43034]:_shared[32](?)) : _unknown[51] "leaves this nil" "method" "primary method" "no return value for void"
  {
    (42919 call(370650 call (partial) doClear _mt[243] this[43034]))
    (505326 return _void[55])
  }
  function _shared[32](?).borrow[42926](arg _mt[43040]:_MT[238], arg this[43038]:_shared[32](?)) : _unknown[51] "nil from this" "method" "primary method"
  {
    unknown ret[505330] "RVV" "temp"
    unknown call_tmp[605105] "expr temp" "maybe param" "maybe type" "temp"
    (605108 'move' call_tmp[605105](370655 call chpl_t _mt[243] this[43038]))
    unknown call_tmp[605110] "expr temp" "maybe param" "maybe type" "temp"
    (605113 'move' call_tmp[605110](42931 call _to_nilable call_tmp[605105]))
    unknown call_tmp[605117] "expr temp" "maybe param" "maybe type" "temp"
    (605120 'move' call_tmp[605117](370660 call chpl_t _mt[243] this[43038]))
    unknown call_tmp[605122] "expr temp" "maybe param" "maybe type" "temp"
    (605125 'move' call_tmp[605122](42933 call == call_tmp[605110] call_tmp[605117]))
    unknown call_tmp[605127] "expr temp" "maybe param" "maybe type" "temp"
    (605130 'move' call_tmp[605127](42945 call _cond_test call_tmp[605122]))
    if call_tmp[605127]
    {
      unknown call_tmp[605134] "expr temp" "maybe param" "maybe type" "temp"
      (605137 'move' call_tmp[605134](370665 call chpl_p _mt[243] this[43038]))
      (505335 'move' ret[505330](505334 'deref' call_tmp[605134]))
      gotoReturn _end_borrow[505328] _end_borrow[505328]
    }
    {
      unknown call_tmp[605141] "expr temp" "maybe param" "maybe type" "temp"
      (605144 'move' call_tmp[605141](370670 call chpl_p _mt[243] this[43038]))
      unknown call_tmp[605146] "expr temp" "maybe param" "maybe type" "temp"
      (605149 'move' call_tmp[605146](42940 call postfix! call_tmp[605141]))
      (505340 'move' ret[505330](505339 'deref' call_tmp[605146]))
      gotoReturn _end_borrow[505328] _end_borrow[505328]
    }
    label _end_borrow[505328]
    (505332 return ret[505330])
  }
  type _shared[32](?) unknown chpl_t[41767] "no doc" "type variable" unknown chpl_p[41774] "no doc" "owned"(41773 'to nilable class' chpl_t[41767]) val chpl_pn[41790]:unmanaged ReferenceCount?[415288] "no doc" "owned" unmanaged ReferenceCount?[415288] forwarding ( )
  type shared[415295](?)
  type shared?[415291](?)
  function =[43049](ref arg lhs[43046]:_shared[32](?), arg rhs[43052]:_shared[32](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605153] "expr temp" "maybe param" "maybe type" "temp"
    (605156 'move' call_tmp[605153](43068 call chpl_pn _mt[243] rhs[43052]))
    unknown call_tmp[605158] "expr temp" "maybe param" "maybe type" "temp"
    (605161 'move' call_tmp[605158](43072 call != call_tmp[605153] nil[44]))
    unknown call_tmp[605163] "expr temp" "maybe param" "maybe type" "temp"
    (605166 'move' call_tmp[605163](43086 call _cond_test call_tmp[605158]))
    if call_tmp[605163]
    {
      unknown call_tmp[605170] "expr temp" "maybe param" "maybe type" "temp"
      (605173 'move' call_tmp[605170](43075 call chpl_pn _mt[243] rhs[43052]))
      unknown call_tmp[605175] "expr temp" "maybe param" "maybe type" "temp"
      (605178 'move' call_tmp[605175](43078 call postfix! call_tmp[605170]))
      (43084 call(43080 call (partial) retain _mt[243] call_tmp[605175]))
    }
    unknown call_tmp[605184] "maybe param" "maybe type" "temp"
    (605187 'move' call_tmp[605184](43093 call chpl_p _mt[243] rhs[43052]))
    const chpl_p_tmp[43096] "dead at end of block" "const" "insert auto destroy"
    (540480 'init var' chpl_p_tmp[43096] call_tmp[605184])
    (43099 'end of statement')
    unknown call_tmp[605191] "maybe param" "maybe type" "temp"
    (605194 'move' call_tmp[605191](43101 call chpl_pn _mt[243] rhs[43052]))
    const chpl_pn_tmp[43104] "dead at end of block" "const" "insert auto destroy"
    (540482 'init var' chpl_pn_tmp[43104] call_tmp[605191])
    (43107 'end of statement')
    (43115 call(43111 call (partial) doClear _mt[243] lhs[43046]))
    (474111 'end of statement')
    unknown call_tmp[605200] "expr temp" "maybe param" "maybe type" "temp"
    (605203 'move' call_tmp[605200](43118 call chpl_p _mt[243] lhs[43046]))
    (43122 call = call_tmp[605200] chpl_p_tmp[43096])
    (474112 'end of statement' chpl_p_tmp[43096])
    unknown call_tmp[605207] "expr temp" "maybe param" "maybe type" "temp"
    (605210 'move' call_tmp[605207](43126 call chpl_pn _mt[243] lhs[43046]))
    (43130 call = call_tmp[605207] chpl_pn_tmp[43104])
    (474114 'end of statement' chpl_pn_tmp[43104])
    (505344 return _void[55])
  }
  where {
    unknown tmp[418243] "maybe param" "temp"
    (418254 'move' tmp[418243](43058 call isNonNilableClass lhs[43046]))
    unknown call_tmp[605212] "expr temp" "maybe param" "maybe type" "temp"
    (605215 'move' call_tmp[605212](418256 call _cond_invalid tmp[418243]))
    if call_tmp[605212]
    {
      (418259 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554127] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554128] "maybe param" "temp"
    unknown call_tmp[605217] "expr temp" "maybe param" "maybe type" "temp"
    (605220 'move' call_tmp[605217](418244 call isTrue tmp[418243]))
    (554133 'move' tmp[554128](554131 call _cond_test call_tmp[605217]))
    if tmp[554128]
    {
      unknown tmp[554135] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605222] "expr temp" "maybe param" "maybe type" "temp"
      (605225 'move' call_tmp[605222](43062 call isNilableClass rhs[43052]))
      (554137 'move' tmp[554135](418247 call isTrue call_tmp[605222]))
      (554142 'move' tmp[554127](554139 '_paramFoldLogical' tmp[554128] tmp[554135]))
    }
    {
      (554147 'move' tmp[554127](554144 '_paramFoldLogical' tmp[554128] 0))
    }
    (43065 call ! tmp[554127])
  }
  function =[43142](ref arg lhs[43139]:_shared[32](?), in arg rhs[43145]:_owned[30](?)) : _unknown[51] "assignop" "no return value for void"
  {
    unknown call_tmp[605231] "expr temp" "maybe param" "maybe type" "temp"
    (605234 'move' call_tmp[605231](43169 call(43165 call (partial) release _mt[243] rhs[43145])))
    (43171 call(43161 call (partial) retain _mt[243] lhs[43139]) call_tmp[605231])
    (505346 return _void[55])
  }
  where {
    unknown tmp[418264] "maybe param" "temp"
    (418275 'move' tmp[418264](43151 call isNonNilableClass lhs[43139]))
    unknown call_tmp[605236] "expr temp" "maybe param" "maybe type" "temp"
    (605239 'move' call_tmp[605236](418277 call _cond_invalid tmp[418264]))
    if call_tmp[605236]
    {
      (418280 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[554154] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554155] "maybe param" "temp"
    unknown call_tmp[605241] "expr temp" "maybe param" "maybe type" "temp"
    (605244 'move' call_tmp[605241](418265 call isTrue tmp[418264]))
    (554160 'move' tmp[554155](554158 call _cond_test call_tmp[605241]))
    if tmp[554155]
    {
      unknown tmp[554162] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[605246] "expr temp" "maybe param" "maybe type" "temp"
      (605249 'move' call_tmp[605246](43155 call isNilableClass rhs[43145]))
      (554164 'move' tmp[554162](418268 call isTrue call_tmp[605246]))
      (554169 'move' tmp[554154](554166 '_paramFoldLogical' tmp[554155] tmp[554162]))
    }
    {
      (554174 'move' tmp[554154](554171 '_paramFoldLogical' tmp[554155] 0))
    }
    (43158 call ! tmp[554154])
  }
  function =[43183](ref arg lhs[43180]:_shared[32](?), arg rhs[43186]:_nilType[42]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    (43200 call(43196 call (partial) clear _mt[243] lhs[43180]))
    (505348 return _void[55])
  }
  where {
    unknown call_tmp[605253] "expr temp" "maybe param" "maybe type" "temp"
    (605256 'move' call_tmp[605253](43192 call isNonNilableClass lhs[43180]))
    (43193 call ! call_tmp[605253])
  }
  function <=>[43212](ref arg lhs[43209]:_shared[32](?), ref arg rhs[43215]:_shared[32](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[605260] "expr temp" "maybe param" "maybe type" "temp"
    (605263 'move' call_tmp[605260](43219 call chpl_pn _mt[243] lhs[43209]))
    unknown call_tmp[605267] "expr temp" "maybe param" "maybe type" "temp"
    (605270 'move' call_tmp[605267](43223 call chpl_pn _mt[243] rhs[43215]))
    (43226 call <=> call_tmp[605260] call_tmp[605267])
    (474118 'end of statement')
    unknown call_tmp[605274] "expr temp" "maybe param" "maybe type" "temp"
    (605277 'move' call_tmp[605274](43231 call chpl_p _mt[243] lhs[43209]))
    unknown call_tmp[605281] "expr temp" "maybe param" "maybe type" "temp"
    (605284 'move' call_tmp[605281](43235 call chpl_p _mt[243] rhs[43215]))
    (43238 call <=> call_tmp[605274] call_tmp[605281])
    (505350 return _void[55])
  }
  function chpl__autoDestroy[43249](ref arg x[43246]:_shared[32](?)) : _unknown[51] "auto destroy fn" "no doc" "no return value for void"
  {
    unknown call_tmp[605286] "expr temp" "maybe param" "maybe type" "temp"
    (605289 'move' call_tmp[605286](43256 'deref' x[43246]))
    (43257 'call destructor' call_tmp[605286])
    (505352 return _void[55])
  }
  function _shared[32](?).readWriteThis[43267](arg _mt[43272]:_MT[238], arg this[43269]:_shared[32](?) :
  _shared[32](?), arg f[43265]:_any[178](?)) : _unknown[51] throws "method" "no doc" "no return value for void"
  {
    unknown call_tmp[605293] "expr temp" "maybe param" "maybe type" "temp"
    (605296 'move' call_tmp[605293](43276 call chpl_p _mt[243] this[43269]))
    (43279 call <~> f[43265] call_tmp[605293])
    (505354 return _void[55])
  }
  function _cast[43291](arg t[43288]:borrowed[211](?), const  ref arg x[43294]:_shared[32](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505358] "RVV" "temp"
    unknown call_tmp[605300] "expr temp" "maybe param" "maybe type" "temp"
    (605303 'move' call_tmp[605300](43312 call(43308 call (partial) borrow _mt[243] x[43294])))
    (505363 'move' ret[505358](505362 'deref' call_tmp[605300]))
    (505360 return ret[505358])
  }
  where {
    unknown call_tmp[605307] "expr temp" "maybe param" "maybe type" "temp"
    (605310 'move' call_tmp[605307](43301 call chpl_t _mt[243] x[43294]))
    (354113 'is_subtype' call_tmp[605307] t[43288])
  }
  function _cast[43328](arg t[43325]:shared?[415291](?), in arg x[43333]:shared[415295](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505367] "RVV" "temp"
    unknown call_tmp[605314] "expr temp" "maybe param" "maybe type" "temp"
    (605317 'move' call_tmp[605314](43356 call chpl_t _mt[243] t[43325]))
    unknown call_tmp[605319] "expr temp" "maybe param" "maybe type" "temp"
    (605322 'move' call_tmp[605319](43360 call _to_nilable call_tmp[605314]))
    unknown call_tmp[605324] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605327 'move' call_tmp[605324](747661 'new' _shared[32](?) 1 call_tmp[605319] x[43333]))
    (505372 'move' ret[505367](505371 'deref' call_tmp[605324]))
    (505369 return ret[505367])
  }
  where {
    unknown call_tmp[605331] "expr temp" "maybe param" "maybe type" "temp"
    (605334 'move' call_tmp[605331](43344 call chpl_t _mt[243] t[43325]))
    unknown call_tmp[605336] "expr temp" "maybe param" "maybe type" "temp"
    (605339 'move' call_tmp[605336](43348 call _to_nonnil call_tmp[605331]))
    unknown call_tmp[605343] "expr temp" "maybe param" "maybe type" "temp"
    (605346 'move' call_tmp[605343](43338 call chpl_t _mt[243] x[43333]))
    (354114 'is_subtype' call_tmp[605336] call_tmp[605343])
  }
  function _cast[43378](arg t[43375]:shared?[415291](?), in arg x[43384]:shared?[415291](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505376] "RVV" "temp"
    unknown call_tmp[605350] "expr temp" "maybe param" "maybe type" "temp"
    (605353 'move' call_tmp[605350](43403 call chpl_t _mt[243] t[43375]))
    unknown call_tmp[605355] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605358 'move' call_tmp[605355](747662 'new' _shared[32](?) 1 call_tmp[605350] x[43384]))
    (505381 'move' ret[505376](505380 'deref' call_tmp[605355]))
    (505378 return ret[505376])
  }
  where {
    unknown call_tmp[605362] "expr temp" "maybe param" "maybe type" "temp"
    (605365 'move' call_tmp[605362](43394 call chpl_t _mt[243] t[43375]))
    unknown call_tmp[605369] "expr temp" "maybe param" "maybe type" "temp"
    (605372 'move' call_tmp[605369](43389 call chpl_t _mt[243] x[43384]))
    (354115 'is_subtype' call_tmp[605362] call_tmp[605369])
  }
  function _cast[43422](arg t[43419]:shared[415295](?), in arg x[43427]:shared[415295](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505385] "RVV" "temp"
    unknown call_tmp[605376] "expr temp" "maybe param" "maybe type" "temp"
    (605379 'move' call_tmp[605376](43446 call chpl_t _mt[243] t[43419]))
    unknown call_tmp[605381] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605384 'move' call_tmp[605381](747663 'new' _shared[32](?) 1 call_tmp[605376] x[43427]))
    (505390 'move' ret[505385](505389 'deref' call_tmp[605381]))
    (505387 return ret[505385])
  }
  where {
    unknown call_tmp[605388] "expr temp" "maybe param" "maybe type" "temp"
    (605391 'move' call_tmp[605388](43437 call chpl_t _mt[243] t[43419]))
    unknown call_tmp[605395] "expr temp" "maybe param" "maybe type" "temp"
    (605398 'move' call_tmp[605395](43432 call chpl_t _mt[243] x[43427]))
    (354116 'is_subtype' call_tmp[605388] call_tmp[605395])
  }
  function _cast[43465](arg t[43462]:shared[415295](?), in arg x[43471]:shared?[415291](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505394] "RVV" "temp"
    unknown call_tmp[605402] "expr temp" "maybe param" "maybe type" "temp"
    (605405 'move' call_tmp[605402](43489 call chpl_p _mt[243] x[43471]))
    unknown call_tmp[605407] "expr temp" "maybe param" "maybe type" "temp"
    (605410 'move' call_tmp[605407](43493 call == call_tmp[605402] nil[44]))
    unknown call_tmp[605412] "expr temp" "maybe param" "maybe type" "temp"
    (605415 'move' call_tmp[605412](43504 call _cond_test call_tmp[605407]))
    if call_tmp[605412]
    {
      unknown call_tmp[605417] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605420 'move' call_tmp[605417](747664 'new' NilClassError[368197](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605422] "expr temp" "maybe param" "maybe type" "temp"
      (605425 'move' call_tmp[605422](467944 call chpl_fix_thrown_error call_tmp[605417]))
      (43501 'throw' call_tmp[605422])
    }
    unknown call_tmp[605429] "expr temp" "maybe param" "maybe type" "temp"
    (605432 'move' call_tmp[605429](43515 call chpl_t _mt[243] t[43462]))
    unknown call_tmp[605434] "expr temp" "maybe param" "maybe type" "temp"
    (605437 'move' call_tmp[605434](43519 call _to_nonnil call_tmp[605429]))
    unknown call_tmp[605439] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605442 'move' call_tmp[605439](747665 'new' _shared[32](?) 1 call_tmp[605434] x[43471]))
    (505399 'move' ret[505394](505398 'deref' call_tmp[605439]))
    (505396 return ret[505394])
  }
  where {
    unknown call_tmp[605446] "expr temp" "maybe param" "maybe type" "temp"
    (605449 'move' call_tmp[605446](43484 call chpl_t _mt[243] t[43462]))
    unknown call_tmp[605453] "expr temp" "maybe param" "maybe type" "temp"
    (605456 'move' call_tmp[605453](43477 call chpl_t _mt[243] x[43471]))
    unknown call_tmp[605458] "expr temp" "maybe param" "maybe type" "temp"
    (605461 'move' call_tmp[605458](43481 call _to_nonnil call_tmp[605453]))
    (354117 'is_subtype' call_tmp[605446] call_tmp[605458])
  }
  function _cast[43535](arg t[43532]:shared[415295](?), const  ref arg x[43541]:shared?[415291](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505403] "RVV" "temp"
    unknown call_tmp[605465] "expr temp" "maybe param" "maybe type" "temp"
    (605468 'move' call_tmp[605465](43559 call chpl_p _mt[243] x[43541]))
    unknown call_tmp[605470] "expr temp" "maybe param" "maybe type" "temp"
    (605473 'move' call_tmp[605470](43563 call == call_tmp[605465] nil[44]))
    unknown call_tmp[605475] "expr temp" "maybe param" "maybe type" "temp"
    (605478 'move' call_tmp[605475](43574 call _cond_test call_tmp[605470]))
    if call_tmp[605475]
    {
      unknown call_tmp[605480] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (605483 'move' call_tmp[605480](747666 'new' NilClassError[368197](?)(_chpl_manager = _owned[30](?))))
      unknown call_tmp[605485] "expr temp" "maybe param" "maybe type" "temp"
      (605488 'move' call_tmp[605485](467946 call chpl_fix_thrown_error call_tmp[605480]))
      (43571 'throw' call_tmp[605485])
    }
    unknown call_tmp[605492] "expr temp" "maybe param" "maybe type" "temp"
    (605495 'move' call_tmp[605492](43586 call chpl_t _mt[243] t[43532]))
    unknown call_tmp[605497] "expr temp" "maybe param" "maybe type" "temp"
    (605500 'move' call_tmp[605497](43590 call _to_unmanaged call_tmp[605492]))
    unknown call_tmp[605502] "expr temp" "maybe param" "maybe type" "temp"
    (605505 'move' call_tmp[605502](43592 call _to_nonnil call_tmp[605497]))
    unknown call_tmp[605509] "expr temp" "maybe param" "maybe type" "temp"
    (605512 'move' call_tmp[605509](43580 call chpl_p _mt[243] x[43541]))
    unknown call_tmp[605514] "maybe param" "maybe type" "temp"
    (605517 'move' call_tmp[605514](43593 call _cast call_tmp[605502] call_tmp[605509]))
    unknown p[43596] "dead at end of block" "insert auto destroy"
    (540484 'init var' p[43596] call_tmp[605514])
    (43599 'end of statement')
    unknown call_tmp[605519] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605522 'move' call_tmp[605519](43606 'typeof' p[43596]))
    unknown call_tmp[605524] "expr temp" "maybe param" "maybe type" "temp"
    (605527 'move' call_tmp[605524](43608 call _to_borrowed call_tmp[605519]))
    unknown call_tmp[605531] "expr temp" "maybe param" "maybe type" "temp"
    (605534 'move' call_tmp[605531](43611 call chpl_pn _mt[243] x[43541]))
    unknown call_tmp[605536] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605539 'move' call_tmp[605536](747667 'new' _shared[32](?) 1 call_tmp[605524] p[43596] call_tmp[605531]))
    (505408 'move' ret[505403](505407 'deref' call_tmp[605536]))
    gotoReturn _end__cast[505401] _end__cast[505401]
    (474129 'end of statement' p[43596] p[43596])
    label _end__cast[505401]
    (505405 return ret[505403])
  }
  where {
    unknown call_tmp[605543] "expr temp" "maybe param" "maybe type" "temp"
    (605546 'move' call_tmp[605543](43552 call chpl_t _mt[243] x[43541]))
    unknown call_tmp[605548] "expr temp" "maybe param" "maybe type" "temp"
    (605551 'move' call_tmp[605548](43556 call _to_nonnil call_tmp[605543]))
    unknown call_tmp[605555] "expr temp" "maybe param" "maybe type" "temp"
    (605558 'move' call_tmp[605555](43546 call chpl_t _mt[243] t[43532]))
    (354118 'is_proper_subtype' call_tmp[605548] call_tmp[605555])
  }
  function _cast[43628](arg t[43625]:shared[415295](?), const  ref arg x[43633]:shared[415295](?)) : _unknown[51] throws "inline" "no doc"
  {
    unknown ret[505414] "RVV" "temp"
    unknown call_tmp[605562] "expr temp" "maybe param" "maybe type" "temp"
    (605565 'move' call_tmp[605562](43654 call chpl_t _mt[243] t[43625]))
    unknown call_tmp[605567] "expr temp" "maybe param" "maybe type" "temp"
    (605570 'move' call_tmp[605567](43658 call _to_unmanaged call_tmp[605562]))
    unknown call_tmp[605572] "expr temp" "maybe param" "maybe type" "temp"
    (605575 'move' call_tmp[605572](43660 call _to_nonnil call_tmp[605567]))
    unknown call_tmp[605579] "expr temp" "maybe param" "maybe type" "temp"
    (605582 'move' call_tmp[605579](43648 call chpl_p _mt[243] x[43633]))
    unknown call_tmp[605584] "maybe param" "maybe type" "temp"
    (605587 'move' call_tmp[605584](43661 call _cast call_tmp[605572] call_tmp[605579]))
    unknown p[43664] "dead at end of block" "insert auto destroy"
    (540486 'init var' p[43664] call_tmp[605584])
    (43667 'end of statement')
    unknown call_tmp[605589] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605592 'move' call_tmp[605589](43675 'typeof' p[43664]))
    unknown call_tmp[605594] "expr temp" "maybe param" "maybe type" "temp"
    (605597 'move' call_tmp[605594](43677 call _to_borrowed call_tmp[605589]))
    unknown call_tmp[605601] "expr temp" "maybe param" "maybe type" "temp"
    (605604 'move' call_tmp[605601](43680 call chpl_pn _mt[243] x[43633]))
    unknown call_tmp[605606] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605609 'move' call_tmp[605606](747668 'new' _shared[32](?) 1 call_tmp[605594] p[43664] call_tmp[605601]))
    (505419 'move' ret[505414](505418 'deref' call_tmp[605606]))
    gotoReturn _end__cast[505412] _end__cast[505412]
    (474132 'end of statement' p[43664] p[43664])
    label _end__cast[505412]
    (505416 return ret[505414])
  }
  where {
    unknown call_tmp[605613] "expr temp" "maybe param" "maybe type" "temp"
    (605616 'move' call_tmp[605613](43643 call chpl_t _mt[243] x[43633]))
    unknown call_tmp[605620] "expr temp" "maybe param" "maybe type" "temp"
    (605623 'move' call_tmp[605620](43638 call chpl_t _mt[243] t[43625]))
    (354119 'is_proper_subtype' call_tmp[605613] call_tmp[605620])
  }
  function _cast[43698](arg t[43695]:shared?[415291](?), const  ref arg x[43704]:shared?[415291](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505425] "RVV" "temp"
    unknown call_tmp[605627] "expr temp" "maybe param" "maybe type" "temp"
    (605630 'move' call_tmp[605627](43725 call chpl_t _mt[243] t[43695]))
    unknown call_tmp[605632] "expr temp" "maybe param" "maybe type" "temp"
    (605635 'move' call_tmp[605632](43729 call _to_unmanaged call_tmp[605627]))
    unknown call_tmp[605637] "expr temp" "maybe param" "maybe type" "temp"
    (605640 'move' call_tmp[605637](43731 call _to_nilable call_tmp[605632]))
    unknown call_tmp[605644] "expr temp" "maybe param" "maybe type" "temp"
    (605647 'move' call_tmp[605644](43719 call chpl_p _mt[243] x[43704]))
    unknown call_tmp[605649] "maybe param" "maybe type" "temp"
    (605652 'move' call_tmp[605649](43732 call _cast call_tmp[605637] call_tmp[605644]))
    unknown p[43734] "dead at end of block" "insert auto destroy"
    (540488 'init var' p[43734] call_tmp[605649])
    (43737 'end of statement')
    unknown call_tmp[605654] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605657 'move' call_tmp[605654](43745 'typeof' p[43734]))
    unknown call_tmp[605659] "expr temp" "maybe param" "maybe type" "temp"
    (605662 'move' call_tmp[605659](43747 call _to_borrowed call_tmp[605654]))
    unknown call_tmp[605666] "expr temp" "maybe param" "maybe type" "temp"
    (605669 'move' call_tmp[605666](43750 call chpl_pn _mt[243] x[43704]))
    unknown call_tmp[605671] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605674 'move' call_tmp[605671](747669 'new' _shared[32](?) 1 call_tmp[605659] p[43734] call_tmp[605666]))
    (505430 'move' ret[505425](505429 'deref' call_tmp[605671]))
    gotoReturn _end__cast[505423] _end__cast[505423]
    (474135 'end of statement' p[43734] p[43734])
    label _end__cast[505423]
    (505427 return ret[505425])
  }
  where {
    unknown call_tmp[605678] "expr temp" "maybe param" "maybe type" "temp"
    (605681 'move' call_tmp[605678](43714 call chpl_t _mt[243] x[43704]))
    unknown call_tmp[605685] "expr temp" "maybe param" "maybe type" "temp"
    (605688 'move' call_tmp[605685](43709 call chpl_t _mt[243] t[43695]))
    (354120 'is_proper_subtype' call_tmp[605678] call_tmp[605685])
  }
  function _cast[43768](arg t[43765]:shared?[415291](?), const  ref arg x[43773]:shared[415295](?)) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505436] "RVV" "temp"
    unknown call_tmp[605692] "expr temp" "maybe param" "maybe type" "temp"
    (605695 'move' call_tmp[605692](43797 call chpl_t _mt[243] t[43765]))
    unknown call_tmp[605697] "expr temp" "maybe param" "maybe type" "temp"
    (605700 'move' call_tmp[605697](43801 call _to_unmanaged call_tmp[605692]))
    unknown call_tmp[605702] "expr temp" "maybe param" "maybe type" "temp"
    (605705 'move' call_tmp[605702](43803 call _to_nilable call_tmp[605697]))
    unknown call_tmp[605709] "expr temp" "maybe param" "maybe type" "temp"
    (605712 'move' call_tmp[605709](43791 call chpl_p _mt[243] x[43773]))
    unknown call_tmp[605714] "maybe param" "maybe type" "temp"
    (605717 'move' call_tmp[605714](43804 call _cast call_tmp[605702] call_tmp[605709]))
    unknown p[43806] "dead at end of block" "insert auto destroy"
    (540490 'init var' p[43806] call_tmp[605714])
    (43809 'end of statement')
    unknown call_tmp[605719] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (605722 'move' call_tmp[605719](43817 'typeof' p[43806]))
    unknown call_tmp[605724] "expr temp" "maybe param" "maybe type" "temp"
    (605727 'move' call_tmp[605724](43819 call _to_borrowed call_tmp[605719]))
    unknown call_tmp[605731] "expr temp" "maybe param" "maybe type" "temp"
    (605734 'move' call_tmp[605731](43822 call chpl_pn _mt[243] x[43773]))
    unknown call_tmp[605736] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (605739 'move' call_tmp[605736](747670 'new' _shared[32](?) 1 call_tmp[605724] p[43806] call_tmp[605731]))
    (505441 'move' ret[505436](505440 'deref' call_tmp[605736]))
    gotoReturn _end__cast[505434] _end__cast[505434]
    (474138 'end of statement' p[43806] p[43806])
    label _end__cast[505434]
    (505438 return ret[505436])
  }
  where {
    unknown call_tmp[605743] "expr temp" "maybe param" "maybe type" "temp"
    (605746 'move' call_tmp[605743](43784 call chpl_t _mt[243] x[43773]))
    unknown call_tmp[605748] "expr temp" "maybe param" "maybe type" "temp"
    (605751 'move' call_tmp[605748](43788 call _to_nilable call_tmp[605743]))
    unknown call_tmp[605755] "expr temp" "maybe param" "maybe type" "temp"
    (605758 'move' call_tmp[605755](43778 call chpl_t _mt[243] t[43765]))
    (354121 'is_proper_subtype' call_tmp[605748] call_tmp[605755])
  }
  function _cast[43837](arg t[43834]:_shared[32](?), arg x[43840]:_nilType[42]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[505447] "RVV" "temp"
    unknown call_tmp[605762] "expr temp" "maybe param" "maybe type" "temp"
    (605765 'move' call_tmp[605762](43845 call chpl_t _mt[243] t[43834]))
    unknown call_tmp[605767] "expr temp" "maybe param" "maybe type" "temp"
    (605770 'move' call_tmp[605767](43849 call isNonNilableClass call_tmp[605762]))
    unknown call_tmp[605772] "expr temp" "maybe param" "maybe type" "temp"
    (605775 'move' call_tmp[605772](43871 call _cond_test call_tmp[605767]))
    if call_tmp[605772]
    {
      (43869 call compilerError "Illegal cast from nil to non-nilable shared type")
    }
    unknown tmp[43878] "dead at end of block" "insert auto destroy"
    (540492 'default init var' tmp[43878] t[43834])
    (43881 'end of statement')
    (505452 'move' ret[505447](505451 'deref' tmp[43878]))
    gotoReturn _end__cast[505445] _end__cast[505445]
    (474142 'end of statement' tmp[43878])
    label _end__cast[505445]
    (505449 return ret[505447])
  }
  function postfix![43893](arg x[43890]:_shared[32](?)) : _unknown[51] "always propagate line file info" "inline" "no doc"
  {
    unknown ret[505458] "RVV" "temp"
    unknown tmp[418285] "maybe param" "temp"
    (418296 'move' tmp[418285] 1)
    unknown call_tmp[605777] "expr temp" "maybe param" "maybe type" "temp"
    (605780 'move' call_tmp[605777](418298 call _cond_invalid tmp[418285]))
    if call_tmp[605777]
    {
      (418301 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554181] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554182] "maybe param" "temp"
    unknown call_tmp[605782] "expr temp" "maybe param" "maybe type" "temp"
    (605785 'move' call_tmp[605782](418286 call isTrue tmp[418285]))
    (554187 'move' tmp[554182](554185 call _cond_test call_tmp[605782]))
    if tmp[554182]
    {
      (554192 'move' tmp[554181](554189 '_paramFoldLogical' tmp[554182] 1))
    }
    {
      unknown tmp[554194] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (554196 'move' tmp[554194](418290 call isTrue enablePostfixBangChecks[324]))
      (554201 'move' tmp[554181](554198 '_paramFoldLogical' tmp[554182] tmp[554194]))
    }
    unknown call_tmp[605787] "expr temp" "maybe param" "maybe type" "temp"
    (605790 'move' call_tmp[605787](43942 call _cond_test tmp[554181]))
    if call_tmp[605787]
    {
      unknown call_tmp[605794] "expr temp" "maybe param" "maybe type" "temp"
      (605797 'move' call_tmp[605794](43905 call chpl_t _mt[243] x[43890]))
      unknown call_tmp[605799] "expr temp" "maybe param" "maybe type" "temp"
      (605802 'move' call_tmp[605799](43909 call _to_nilable call_tmp[605794]))
      unknown call_tmp[605806] "expr temp" "maybe param" "maybe type" "temp"
      (605809 'move' call_tmp[605806](43911 call chpl_t _mt[243] x[43890]))
      unknown call_tmp[605811] "expr temp" "maybe param" "maybe type" "temp"
      (605814 'move' call_tmp[605811](43914 call == call_tmp[605799] call_tmp[605806]))
      unknown call_tmp[605816] "expr temp" "maybe param" "maybe type" "temp"
      (605819 'move' call_tmp[605816](43937 call _cond_test call_tmp[605811]))
      if call_tmp[605816]
      {
        unknown call_tmp[605823] "expr temp" "maybe param" "maybe type" "temp"
        (605826 'move' call_tmp[605823](43917 call chpl_p _mt[243] x[43890]))
        unknown call_tmp[605828] "expr temp" "maybe param" "maybe type" "temp"
        (605831 'move' call_tmp[605828](43921 call == call_tmp[605823] nil[44]))
        unknown call_tmp[605833] "expr temp" "maybe param" "maybe type" "temp"
        (605836 'move' call_tmp[605833](43932 call _cond_test call_tmp[605828]))
        if call_tmp[605833]
        {
          (43929 call nilCheckHalt module=[255] HaltWrappers[209910] "argument to ! is nil")
          (356986 'referenced modules list' HaltWrappers[209910])
        }
      }
    }
    unknown call_tmp[605840] "expr temp" "maybe param" "maybe type" "temp"
    (605843 'move' call_tmp[605840](43948 call chpl_p _mt[243] x[43890]))
    unknown call_tmp[605845] "expr temp" "maybe param" "maybe type" "temp"
    (605848 'move' call_tmp[605845](43952 call _to_nonnil call_tmp[605840]))
    (505463 'move' ret[505458](505462 'deref' call_tmp[605845]))
    (505460 return ret[505458])
    (354945 'used modules list'(43896 'import' HaltWrappers[209910]))
  }
  (354940 'used modules list'(41669 'use' ChapelError[167853])(41671 'use' Atomics[43961])(41672 'use' ChapelBase[307])(41675 'use' OwnedObject[39583]))
}