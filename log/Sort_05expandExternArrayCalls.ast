AST dump for Sort after pass expandExternArrayCalls.
Module use list: 

{
  (353058 'use' ChapelStandard)
  (267989 'use' List)
  (267993 'use' Reflection)
  { scopeless
    const defaultComparator[267996] "const" DefaultComparator
    (267999 'end of statement')
  }
  { scopeless
    const reverseComparator[268004] "const"(268003 call ReverseComparator DefaultComparator)
    (268007 'end of statement')
  }
  function compareByPart[268015](arg a[268012] :
  unknown t[268010], arg b[268018] :
  t, arg comparator[268023] :
  unknown rec[268021]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown curPart[268027] 0
      (268030 'end of statement')
    }
    {
      unknown tmp[268140] "temp"
      (268158 'move' tmp[268140](268156 call _cond_test 1))
      WhileDo[268145]
      {
        {
          { scopeless
            unknown tmp[268048] "temp"(268047 call(268041 call . comparator c"keyPart") a curPart)
            (268055 call _check_tuple_var_decl tmp[268048] 2)
            unknown aSection[268033](268049 call tmp[268048] 0)
            unknown aPart[268035](268052 call tmp[268048] 1)
            (268060 'end of statement')
          }
          { scopeless
            unknown tmp[268075] "temp"(268074 call(268068 call . comparator c"keyPart") b curPart)
            (268082 call _check_tuple_var_decl tmp[268075] 2)
            unknown bSection[268062](268076 call tmp[268075] 0)
            unknown bPart[268064](268079 call tmp[268075] 1)
            (268087 'end of statement')
          }
          if(268105 call _cond_test(268096 call ||(268090 call != aSection 0)(268094 call != bSection 0)))
          {
            (268102 return(268100 call - aSection bSection))
          }
          if(268119 call _cond_test(268111 call < aPart bPart))
          {
            (268116 return(268114 call - 1))
          }
          if(268131 call _cond_test(268125 call > aPart bPart))
          {
            (268128 return 1)
          }
          (268137 call += curPart 1)
        }
        label _continueLabel[268143]
        (268151 'move' tmp[268140](268149 call _cond_test 1))
        tmp[268140]
      }
      label _breakLabel[268144]
    }
    (268162 return 1)
  }
  function chpl_compare[268173](arg a[268170] :
  unknown t[268168], arg b[268176] :
  t, arg comparator[268181] :
  unknown rec[268179]) : _unknown[51] "inline" "no doc"
  {
    if(268348 call _cond_test(268203 call canResolveMethod comparator "key" a))
    {
      (268226 return(268225 call(268207 call . defaultComparator c"compare")(268216 call(268211 call . comparator c"key") a)(268224 call(268219 call . comparator c"key") b)))
    }
    {
      { scopeless
        if(268343 call _cond_test(268249 call canResolveMethod comparator "compare" a b))
        {
          (268258 return(268257 call(268251 call . comparator c"compare") a b))
        }
        {
          { scopeless
            if(268339 call _cond_test(268281 call canResolveMethod comparator "keyPart" a 0))
            {
              (268288 return(268287 call compareByPart a b comparator))
            }
            {
              (268336 call compilerError(268333 call +(268314 call + "The comparator "(268312 call _cast string[26](268310 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method"))
            }
          }
        }
      }
    }
  }
  function chpl_check_comparator[268360](arg comparator[268358]:_any[178](?), arg eltType[268362]:_any[178](?)) param : _unknown[51] "no doc" "unsafe"
  {
    { scopeless
      const data[268365] "const" eltType
      (268368 'end of statement')
    }
    { scopeless
      unknown errorDepth[268371] "param" 2
      (268374 'end of statement')
    }
    if(268906 call _cond_test(268378 call ==(268376 'typeof' comparator) DefaultComparator))
    {
    }
    {
      { scopeless
        if(268901 call _cond_test(268386 call canResolveMethod comparator "key" data))
        {
          { scopeless
            const keydata[268394] "const"(268393 call(268388 call . comparator c"key") data)
            (268397 'end of statement')
          }
          unknown keytype[268401] "type variable"(268400 'typeof' keydata)
          if(268462 call _cond_test(268410 call !(268409 call canResolve "<" keydata keydata)))
          {
            { scopeless
              (268460 call compilerError(errorDepth = errorDepth) "The key method in "(268436 call _cast string[26](268434 'typeof' comparator)) " must return an object that supports the '<' function when used with "(268457 call _cast string[26] eltType) " elements")
            }
          }
          if(268503 call _cond_test(268473 call canResolveMethod comparator "compare" data data))
          {
            (268500 call compilerError(errorDepth = errorDepth)(268481 call _cast string[26](268479 'typeof' comparator)) " contains both a key method and a compare method")
          }
          if(268543 call _cond_test(268513 call canResolveMethod comparator "keyPart" data 0))
          {
            (268540 call compilerError(errorDepth = errorDepth)(268521 call _cast string[26](268519 'typeof' comparator)) " contains both a key method and a keyPart method")
          }
        }
        {
          { scopeless
            if(268896 call _cond_test(268553 call canResolveMethod comparator "compare" data data))
            {
              unknown comparetype[268563] "type variable"(268562 'typeof'(268561 call(268555 call . comparator c"compare") data data))
              if(268623 call _cond_test(268571 call !(268570 call isNumericType comparetype)))
              {
                { scopeless
                  (268621 call compilerError(errorDepth = errorDepth) "The compare method in "(268597 call _cast string[26](268595 'typeof' comparator)) " must return a numeric type when used with "(268618 call _cast string[26] eltType) " elements")
                }
              }
            }
            {
              { scopeless
                if(268892 call _cond_test(268634 call canResolveMethod comparator "keyPart" data 0))
                {
                  { scopeless
                    unknown idx[268637] 0 int[13]
                    (268640 'end of statement')
                  }
                  unknown partType[268651] "type variable"(268650 'typeof'(268649 call(268643 call . comparator c"keyPart") data idx))
                  if(268710 call _cond_test(268658 call !(268657 call isTupleType partType)))
                  {
                    { scopeless
                      (268708 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268684 call _cast string[26](268682 'typeof' comparator)) " must return a tuple when used with "(268705 call _cast string[26] eltType) " elements")
                    }
                  }
                  { scopeless
                    unknown tmp[268716] partType
                    (268719 'end of statement')
                  }
                  { scopeless
                    unknown expectInt[268724](268723 call tmp 0)
                    (268727 'end of statement')
                  }
                  { scopeless
                    unknown expectIntUint[268732](268731 call tmp 1)
                    (268735 'end of statement')
                  }
                  if(268777 call _cond_test(268741 call !(268740 call isInt(268738 'typeof' expectInt))))
                  {
                    { scopeless
                      (268775 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268751 call _cast string[26](268749 'typeof' comparator)) " must return a tuple with element 0 of type int(\?) when used with "(268772 call _cast string[26] eltType) " elements")
                    }
                  }
                  if(268828 call _cond_test(268792 call !(268790 call ||(268785 call isInt expectIntUint)(268789 call isUint expectIntUint))))
                  {
                    { scopeless
                      (268826 call compilerError(errorDepth = errorDepth) "The keyPart method in "(268802 call _cast string[26](268800 'typeof' comparator)) " must return a tuple with element 1 of type  int(\?) or uint(\?) when used with "(268823 call _cast string[26] eltType) " elements")
                    }
                  }
                }
                {
                  (268889 call compilerError(errorDepth = errorDepth)(268887 call +(268881 call +(268862 call +(268843 call + "The comparator "(268841 call _cast string[26](268839 'typeof' comparator))) " requires a 'key(a)', 'compare(a, b)', or 'keyPart(a, i)' method ") " for element type ")(268885 call _cast string[26] eltType)))
                }
              }
            }
          }
        }
      }
    }
    (268912 return 1)
  }
  function radixSortOk[268928](arg Data[268925] :
  (268923 call chpl__buildArrayRuntimeType unknown Dom[268918] unknown eltType[268921]), arg comparator[268930]:_any[178](?)) param : _unknown[51] "private" "unsafe"
  {
    if(269005 call _cond_test(268936 call !(268933 call . Dom c"stridable")))
    {
      { scopeless
        unknown tmp[268946](268945 'typeof'(268944 call Data(268940 call . Dom c"alignedLow")))
        (268949 'end of statement')
      }
      if(269000 call _cond_test(268957 call canResolveMethod comparator "keyPart" tmp 0))
      {
        (268959 return 1)
      }
      {
        { scopeless
          if(268996 call _cond_test(268967 call canResolveMethod comparator "key" tmp))
          {
            { scopeless
              unknown key[268976](268975 'typeof'(268974 call(268969 call . comparator c"key") tmp))
              (268979 'end of statement')
            }
            if(268991 call _cond_test(268987 call canResolveMethod defaultComparator "keyPart" key 0))
            {
              { scopeless
                (268989 return 1)
              }
            }
          }
        }
      }
    }
    (269011 return 0)
  }
  function sort[269027](arg Data[269024] :
  (269022 call chpl__buildArrayRuntimeType unknown Dom[269017] unknown eltType[269020]), arg comparator[269032] :
  unknown rec[269029] =
  defaultComparator) : _unknown[51]
  {
    (269040 call chpl_check_comparator comparator eltType)
    if(269055 call _cond_test(269051 call >=(269044 call . Dom c"low")(269048 call . Dom c"high")))
    {
      { scopeless
        (269053 return)
      }
    }
    if(269091 call _cond_test(269064 call radixSortOk Data comparator))
    {
      (269075 call(269068 call . MSBRadixSort c"msbRadixSort") Data(comparator = comparator))
    }
    {
      (269088 call(269081 call . QuickSort c"quickSort") Data(comparator = comparator))
    }
  }
  function sort[269109](arg Data[269106] :
  (269104 call chpl__buildArrayRuntimeType unknown Dom[269099] unknown eltType[269102]), arg comparator[269114] :
  unknown rec[269111] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269144 call compilerError "sort() requires 1-D array")
  }
  where {
    (269123 call !=(269119 call . Dom c"rank") 1)
  }
  function isSorted[269162](arg Data[269159] :
  (269157 call chpl__buildArrayRuntimeType unknown Dom[269152] unknown eltType[269155]), arg comparator[269167] :
  unknown rec[269164] =
  defaultComparator) : _unknown[51]
  {
    (269176 call chpl_check_comparator comparator eltType)
    { scopeless
      const stride[269194] "const"(269191 IfExpr (269180 call . Dom c"stridable") then
      { scopeless
        (269189 call abs(269185 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (269197 'end of statement')
    }
    { scopeless
      unknown sorted[269199] 1
      (269202 'end of statement')
    }
    Forall {
      induction variables:
        
        unknown element[269262] "index var" "insert auto destroy"
        
        unknown i[269264] "index var" "insert auto destroy"
      iterated expressions:
        Data
        Dom
      shadow variables:
        sorted[269214] 'reduce' intent
          init block
          {
          }
          deinit block
          {
          }
      other variables
        forall body
      {
        if(269256 call _cond_test(269225 call > i(269222 call . Dom c"alignedLow")))
        {
          {
            unknown tmp[269244] "temp"
            (269247 'move' tmp[269244](269246 'addr of' sorted))
            (269252 call = tmp[269244](269249 call && tmp[269244](269241 call <=(269239 call chpl_compare(269235 call Data(269232 call - i stride)) element comparator) 0)))
          }
        }
      }
    }
    (269269 return sorted)
  }
  { scopeless type
    bool[10]
  }
  function isSorted[269286](arg Data[269283] :
  (269281 call chpl__buildArrayRuntimeType unknown Dom[269276] unknown eltType[269279]), arg comparator[269291] :
  unknown rec[269288] =
  defaultComparator) : _unknown[51] "no doc"
  {
    (269321 call compilerError "isSorted() requires 1-D array")
  }
  where {
    (269300 call !=(269296 call . Dom c"rank") 1)
  }
  function sorted[269331](arg x[269329]:_any[178](?), arg comparator[269336] :
  unknown rec[269333] =
  defaultComparator) : _unknown[51] "iterator fn"
  {
    { scopeless
      unknown y[269341] x
      (269344 'end of statement')
    }
    if(269373 call _cond_test(269350 call !(269349 call isArrayValue y)))
    {
      { scopeless
        (269371 call compilerError "Sort.sorted called on non-iterable")
      }
    }
    (269383 call sort y(comparator = comparator))
    {
      unknown _indexOfInterest[269390] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[269391] "expr temp" "temp"
      (269400 'move' _iterator[269391](269398 call _getIterator y))
      Defer
      {
        {
          (269416 call _freeIterator _iterator[269391])
        }
      }
      { scopeless type
        (269405 'move' _indexOfInterest[269390](269402 call iteratorIndex _iterator[269391]))
      }
      ForLoop[269392]
      {
        unknown i[269409] "index var" "insert auto destroy"
        (269411 'move' i[269409] _indexOfInterest[269390])
        { scopeless
          (269388 yield i)
        }
        label _continueLabel[269395]
        _indexOfInterest[269390]
        _iterator[269391]
      }
      label _breakLabel[269396]
    }
  }
  def module BubbleSort[269425]  
  def module HeapSort[269658]  
  def module InsertionSort[270112]  
  def module BinaryInsertionSort[270715]  
  def module MergeSort[271215]  
  def module QuickSort[272059]  
  def module SelectionSort[273300]  
  def module ShellSort[273541]  
  def module SampleSortHelp[273917]  
  def module RadixSortHelp[276095]  
  def module ShallowCopy[277402]  
  def module SequentialInPlacePartitioning[278117]  
  def module TwoArrayPartitioning[279215]  
  def module TwoArrayRadixSort[287609]  
  def module TwoArraySampleSort[287806]  
  def module InPlacePartitioning[288010]  
  def module MSBRadixSort[288014]  
  type DefaultComparator[290564] function DefaultComparator[290564].compare[289927](arg _mt[290568]:_MT[238], arg this[290566]:DefaultComparator[290564], arg a[289925]:_any[178](?), arg b[289929]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(289957 call _cond_test(289933 call < a b))
    {
      (289938 return(289936 call - 1))
    }
    {
      { scopeless
        if(289952 call _cond_test(289943 call < b a))
        {
          (289946 return 1)
        }
        {
          { scopeless
            (289950 return 0)
          }
        }
      }
    }
  } function DefaultComparator[290564].keyPart[289971](arg _mt[290572]:_MT[238], arg this[290570]:DefaultComparator[290564], arg x[289968] :
  integral, arg i[289974] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290013](290010 IfExpr (289992 call > i 0) then
      { scopeless
        (290001 call -(289999 call _cast(289998 call int[13] 8) 1))
      } else
      { scopeless
        (290008 call _cast(290007 call int[13] 8) 0)
      } )(289989 call int[13] 8)
      (290016 'end of statement')
    }
    (290023 return(290021 call _build_tuple section x))
  }
  { scopeless type
    (289984 call _build_tuple(289980 call int[13] 8)(289982 'typeof' x))
  } function DefaultComparator[290564].keyPart[290034](arg _mt[290576]:_MT[238], arg this[290574]:DefaultComparator[290564], arg x[290031] :
  chpl_anyreal, arg i[290037] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown section[290082](290079 IfExpr (290061 call > i 0) then
      { scopeless
        (290070 call -(290068 call _cast(290067 call int[13] 8) 1))
      } else
      { scopeless
        (290077 call _cast(290076 call int[13] 8) 0)
      } )(290058 call int[13] 8)
      (290085 'end of statement')
    }
    { scopeless
      unknown nbits[290092] "param"(290091 call numBits(290089 'typeof' x))
      (290095 'end of statement')
    }
    { scopeless
      unknown src[290097] x
      (290100 'end of statement')
    }
    { scopeless
      unknown dst[290105](290104 call uint[115] nbits)
      (290108 'end of statement')
    }
    (290124 call c_memcpy(290113 call c_ptrTo dst)(290118 call c_ptrTo src)(290123 call c_sizeof(290121 'typeof' src)))
    if(290168 call _cond_test(290134 call ==(290131 call >> dst(290129 call - nbits 1)) 1))
    {
      (290140 call = dst(290138 call ~ dst))
    }
    {
      { scopeless
        const one[290149] "const" 1(290147 call uint[115] nbits)
        (290152 'end of statement')
      }
      (290165 call = dst(290163 call ^ dst(290161 call << one(290159 call - nbits 1))))
    }
    (290177 return(290175 call _build_tuple section dst))
  }
  { scopeless type
    (290053 call _build_tuple(290043 call int[13] 8)(290051 call uint[115](290049 call numBits(290047 'typeof' x))))
  } function DefaultComparator[290564].keyPart[290188](arg _mt[290580]:_MT[238], arg this[290578]:DefaultComparator[290564], arg x[290185] :
  chpl_anyimag, arg i[290191] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    (290224 return(290223 call keyPart(290219 call _cast(290218 call real[16](290216 call numBits(290214 'typeof' x))) x) i))
  }
  { scopeless type
    (290207 call _build_tuple(290197 call int[13] 8)(290205 call uint[115](290203 call numBits(290201 'typeof' x))))
  } function DefaultComparator[290564].keyPart[290236](arg _mt[290584]:_MT[238], arg this[290582]:DefaultComparator[290564], arg x[290233] :
  _tuple, arg i[290239] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const tmp[290298] "const" "temp"(290297 call(290288 call . this c"keyPart")(290294 call x i) 1)
      (290302 call _check_tuple_var_decl tmp[290298] 2)
      const part[290284] "const"(290299 call tmp[290298] 1)
      (290307 'end of statement')
    }
    if(290336 call _cond_test(290314 call >= i(290311 call . x c"size")))
    {
      { scopeless
        (290327 return(290325 call _build_tuple(290317 call - 1)(290322 call _cast(290321 'typeof' part) 0)))
      }
    }
    {
      { scopeless
        (290334 return(290332 call _build_tuple 0 part))
      }
    }
  }
  where {
    (290280 call &&(290245 call isHomogeneousTuple x)(290278 call ||(290269 call ||(290260 call ||(290252 call isInt(290250 call x 0))(290259 call isUint(290257 call x 0)))(290268 call isReal(290266 call x 0)))(290277 call isImag(290275 call x 0))))
  } function DefaultComparator[290564].keyPart[290351](arg _mt[290588]:_MT[238], arg this[290586]:DefaultComparator[290564], arg x[290348] :
  string[26], arg i[290354] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    if(290383 call _cond_test boundsChecking)
    {
      { scopeless
        (290381 call assert(290378 call ==(290371 call . x c"locale_id")(290375 call . here c"id")))
      }
    }
    { scopeless
      unknown ptr[290404](290402 call _cast(290401 call c_ptr(290399 call uint[115] 8))(290394 call(290390 call . x c"c_str")))
      (290407 'end of statement')
    }
    { scopeless
      unknown len[290412](290409 call . x c"numBytes")
      (290415 'end of statement')
    }
    { scopeless
      unknown section[290439](290436 IfExpr (290418 call < i len) then
      { scopeless
        (290425 call _cast(290424 call int[13] 8) 0)
      } else
      { scopeless
        (290434 call -(290432 call _cast(290431 call int[13] 8) 1))
      } )
      (290442 'end of statement')
    }
    { scopeless
      unknown part[290461](290458 IfExpr (290445 call < i len) then
      { scopeless
        (290450 call ptr i)
      } else
      { scopeless
        (290456 call _cast(290455 call uint[115] 8) 0)
      } )
      (290464 'end of statement')
    }
    (290470 return(290468 call _build_tuple section part))
  }
  { scopeless type
    (290366 call _build_tuple(290360 call int[13] 8)(290364 call uint[115] 8))
  } function DefaultComparator[290564].keyPart[290481](arg _mt[290592]:_MT[238], arg this[290590]:DefaultComparator[290564], arg x[290478] :
  c_string, arg i[290484] :
  int[13]) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      unknown ptr[290508](290506 call _cast(290505 call c_ptr(290503 call uint[115] 8)) x)
      (290511 'end of statement')
    }
    { scopeless
      unknown byte[290517](290516 call ptr i)
      (290520 'end of statement')
    }
    { scopeless
      unknown section[290544](290541 IfExpr (290523 call != byte 0) then
      { scopeless
        (290530 call _cast(290529 call int[13] 8) 0)
      } else
      { scopeless
        (290539 call -(290537 call _cast(290536 call int[13] 8) 1))
      } )
      (290547 'end of statement')
    }
    { scopeless
      unknown part[290549] byte
      (290552 'end of statement')
    }
    (290558 return(290556 call _build_tuple section part))
  }
  { scopeless type
    (290496 call _build_tuple(290490 call int[13] 8)(290494 call uint[115] 8))
  }
  type ReverseComparator[291201](?) unknown comparator[290596] function ReverseComparator[291201](?).init[290602](arg _mt[291205]:_MT[238], arg this[291203]:ReverseComparator[291201](?)) : _unknown[51] "method" "primary method"
  {
    (290611 call =(290607 call . this c"comparator") defaultComparator)
  } function ReverseComparator[291201](?).init[290621](arg _mt[291209]:_MT[238], arg this[291207]:ReverseComparator[291201](?), arg comparator[290619]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (290628 call =(290624 call . this c"comparator") comparator)
  } function ReverseComparator[291201](?).init=[290643](arg _mt[291213]:_MT[238], arg this[291211]:ReverseComparator[291201](?), arg revcomp[290640] :
  (290639 call ReverseComparator ?[260])) : _unknown[51] "method" "primary method" "no doc"
  {
    (290653 call =(290646 call . this c"comparator")(290650 call . revcomp c"comparator"))
  } function ReverseComparator[291201](?).typeIsBitReversible[290663](arg _mt[291217]:_MT[238], arg this[291215]:ReverseComparator[291201](?), arg t[290661]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290685 call _cond_test(290668 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290670] t
        (290673 'end of statement')
      }
      (290683 return(290682 call typeIsBitReversible(290680 'typeof'(290679 call tmp 0))))
    }
    if(290697 call _cond_test(290693 call isUintType t))
    {
      { scopeless
        (290695 return 1)
      }
    }
    if(290709 call _cond_test(290705 call isIntType t))
    {
      { scopeless
        (290707 return 1)
      }
    }
    (290715 return 0)
  } function ReverseComparator[291201](?).typeIsNegateReversible[290723](arg _mt[291221]:_MT[238], arg this[291219]:ReverseComparator[291201](?), arg t[290721]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290745 call _cond_test(290728 call isHomogeneousTupleType t))
    {
      { scopeless
        unknown tmp[290730] t
        (290733 'end of statement')
      }
      (290743 return(290742 call typeIsNegateReversible(290740 'typeof'(290739 call tmp 0))))
    }
    if(290763 call _cond_test(290758 call ||(290753 call isIntType t)(290757 call isUintType t)))
    {
      { scopeless
        (290761 return 0)
      }
    }
    if(290775 call _cond_test(290771 call isNumericType t))
    {
      { scopeless
        (290773 return 1)
      }
    }
    (290781 return 0)
  } function ReverseComparator[291201](?).hasKeyPart[290789](arg _mt[291225]:_MT[238], arg this[291223]:ReverseComparator[291201](?), arg a[290787]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290801 return(290800 call canResolveMethod(290793 call . this c"comparator") "keyPart" a 0))
  } function ReverseComparator[291201](?).hasKeyPartFromKey[290810](arg _mt[291229]:_MT[238], arg this[291227]:ReverseComparator[291201](?), arg a[290808]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290843 call _cond_test(290820 call canResolveMethod(290814 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290829](290828 'typeof'(290827 call(290822 call . comparator c"key") a))
        (290832 'end of statement')
      }
      (290841 return(290840 call canResolveMethod defaultComparator "keyPart" key 0))
    }
    (290849 return 0)
  } function ReverseComparator[291201](?).hasCompare[290857](arg _mt[291233]:_MT[238], arg this[291231]:ReverseComparator[291201](?), arg a[290855]:_any[178](?), arg b[290859]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    (290871 return(290870 call canResolveMethod(290863 call . this c"comparator") "compare" a b))
  } function ReverseComparator[291201](?).hasCompareFromKey[290880](arg _mt[291237]:_MT[238], arg this[291235]:ReverseComparator[291201](?), arg a[290878]:_any[178](?)) param : _unknown[51] "method" "primary method" "no doc"
  {
    if(290913 call _cond_test(290890 call canResolveMethod(290884 call . this c"comparator") "key" a))
    {
      { scopeless
        unknown key[290899](290898 'typeof'(290897 call(290892 call . comparator c"key") a))
        (290902 'end of statement')
      }
      (290911 return(290910 call canResolveMethod defaultComparator "compare" key key))
    }
    (290919 return 0)
  } function ReverseComparator[291201](?).getKeyPart[290927](arg _mt[291241]:_MT[238], arg this[291239]:ReverseComparator[291201](?), arg cmp[290925]:_any[178](?), arg a[290929]:_any[178](?), arg i[290931]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    { scopeless
      unknown tmp[290946] "temp"(290945 call(290939 call . cmp c"keyPart") a i)
      (290953 call _check_tuple_var_decl tmp[290946] 2)
      unknown section[290933](290947 call tmp[290946] 0)
      unknown part[290935](290950 call tmp[290946] 1)
      (290958 'end of statement')
    }
    if(291020 call _cond_test(290964 call typeIsBitReversible(290962 'typeof' part)))
    {
      (290974 return(290972 call _build_tuple(290966 call - section)(290969 call ~ part)))
    }
    {
      { scopeless
        if(291016 call _cond_test(290981 call typeIsNegateReversible(290979 'typeof' part)))
        {
          (290991 return(290989 call _build_tuple(290983 call - section)(290986 call - part)))
        }
        {
          (291013 call compilerError "keyPart must return int or uint")
        }
      }
    }
  } function ReverseComparator[291201](?).keyPart[291031](arg _mt[291245]:_MT[238], arg this[291243]:ReverseComparator[291201](?), arg a[291029]:_any[178](?), arg i[291033]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291053 call chpl_check_comparator(291047 call . this c"comparator")(291052 'typeof' a))
    if(291090 call _cond_test(291059 call hasKeyPartFromKey a))
    {
      (291075 return(291074 call getKeyPart defaultComparator(291072 call(291067 call .(291064 call . this c"comparator") c"key") a) i))
    }
    {
      (291087 return(291086 call getKeyPart(291080 call . this c"comparator") a i))
    }
  }
  where {
    (291043 call ||(291038 call hasKeyPart a)(291042 call hasKeyPartFromKey a))
  } function ReverseComparator[291201](?).doCompare[291101](arg _mt[291249]:_MT[238], arg this[291247]:ReverseComparator[291201](?), arg cmp[291099]:_any[178](?), arg a[291103]:_any[178](?), arg b[291105]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (291115 return(291114 call(291108 call . cmp c"compare") b a))
  } function ReverseComparator[291201](?).compare[291124](arg _mt[291253]:_MT[238], arg this[291251]:ReverseComparator[291201](?), arg a[291122]:_any[178](?), arg b[291126]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (291147 call chpl_check_comparator(291141 call . this c"comparator")(291146 'typeof' a))
    if(291193 call _cond_test(291153 call hasCompareFromKey a))
    {
      (291178 return(291177 call doCompare defaultComparator(291166 call(291161 call .(291158 call . this c"comparator") c"key") a)(291176 call(291171 call .(291168 call . this c"comparator") c"key") b)))
    }
    {
      (291190 return(291189 call doCompare(291183 call . this c"comparator") a b))
    }
  }
  where {
    (291137 call ||(291132 call hasCompare a b)(291136 call hasCompareFromKey a))
  }
}