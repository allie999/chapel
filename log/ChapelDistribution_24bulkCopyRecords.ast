AST dump for ChapelDistribution after pass bulkCopyRecords.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  type _class_localson_fn[2060431] val _runtime_hdr[2060432]:chpl_comm_on_bundle_t[209359] val _0_tmp[2060434]:chpl_localeID_t[209352] val _1_this[2060436]:BaseDom[146767] val _2_x[2060438]:BaseArr[149584] ref _3_count[2060440]:int(64)[13]
  type _class_localson_fn[2058597] val _runtime_hdr[2058598]:chpl_comm_on_bundle_t[209359] val _0_tmp[2058600]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2058602]:BaseArrOverRectangularDom(1,int(64),false)[1256238]
  type _class_localson_fn[2058464] val _runtime_hdr[2058465]:chpl_comm_on_bundle_t[209359] val _0_tmp[2058467]:chpl_localeID_t[209352] val _1_e[2058469]:BaseArr[149584] val _2_rvfDerefTmp[2058471]:BaseArrOverRectangularDom(1,int(64),false)[1256238] val _3_rhs_data[2058473]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] ref _4_idxType[2058475]:int(64)[13]
  type _class_localson_fn[2058362] val _runtime_hdr[2058363]:chpl_comm_on_bundle_t[209359] val _0_tmp[2058365]:chpl_localeID_t[209352] val _1_this[2058367]:BaseDom[146767] val _2_x[2058369]:BaseArr[149584]
  type _class_localson_fn[2051589] val _runtime_hdr[2051590]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051592]:chpl_localeID_t[209352] val _1_this[2051594]:BaseDom[146767] ref _2_free_dom[2051596]:bool[10] val _3_rvfDerefTmp[2051598]:BaseDist[145968] ref _4_remove_dist[2051600]:bool[10]
  type _class_localson_fn[2051467] val _runtime_hdr[2051468]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051470]:chpl_localeID_t[209352] val _1_this[2051472]:BaseDist[145968] val _2_x[2051474]:BaseDom[146767] ref _3_count[2051476]:int(64)[13]
  type _class_localson_fn[2051360] val _runtime_hdr[2051361]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051363]:chpl_localeID_t[209352] val _1_this[2051365]:BaseDist[145968] ref _2_free_dist[2051367]:bool[10]
  function chpl__init_ChapelDistribution[416022]() : void[4] "insert line file info" "module init" "resolved"
  {
    (520440 return _void[55])
  }
  function BaseDist[145968].deinit[145498](const in arg this[145970]:BaseDist[145968]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1787932]
    ref _field_destructor_tmp_[1787930]:_ref(chpl_LocalSpinlock)[941090] "temp"
    (1787937 'move' _field_destructor_tmp_[1787930](1787934 '.' this[145970] _domsLock[145481]))
    (1787939 call deinit[820413] _field_destructor_tmp_[1787930])
    ref _field_destructor_tmp_[1787942]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "temp"
    (1787947 'move' _field_destructor_tmp_[1787942](1787944 '.' this[145970] _doms[145476]))
    (1787949 call deinit[1523078] _field_destructor_tmp_[1787942])
    val _parent_destructor_tmp_[1787952]:object[22] "temp"
    (1787957 'move' _parent_destructor_tmp_[1787952](1787953 'cast' object[22] this[145970]))
    (1787959 call deinit[749398] _parent_destructor_tmp_[1787952])
    (519716 return _void[55])
  }
  function BaseDist[145968].remove[145505](const in arg this[145974]:BaseDist[145968]) : BaseDist[145968] "dont disable remote value forwarding" "method" "primary method" "resolved"
  {
    val ret[519720]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    val free_dist[145511]:bool[10] "dead at end of block" "insert auto destroy"
    (543558 'move' free_dist[145511] 0)
    const-val call_tmp[667440]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1775195]:int(32)[95] "temp"
    (1775199 'move' _virtual_method_tmp_[1775195](1775197 'getcid' this[145974]))
    (667443 'move' call_tmp[667440](145518 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1775195] this[145974]))
    const-val call_tmp[667445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667448 'move' call_tmp[667445] call_tmp[667440])
    if call_tmp[667445]
    {
      const-val tmp[145576]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[667450]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (667453 'move' call_tmp[667450](145573 '_wide_get_locale' this[145974]))
      (145578 'move' tmp[145576] call_tmp[667450])
      val isdirect[2051343]:bool[10] "temp"
      (2051348 'move' isdirect[2051343](2051345 call chpl_doDirectExecuteOn[187469] tmp[145576]))
      if isdirect[2051343]
      {
        (2051352 call on_fn[935171] this[145974] free_dist[145511])
      }
      {
        val _args_foron_fn[2051370]:_class_localson_fn[2051360] "temp"
        (2051374 'move' _args_foron_fn[2051370](2051372 'stack allocate class' _class_localson_fn[2051360]))
        (2051376 '.=' _args_foron_fn[2051370] _0_tmp[2051363] tmp[145576])
        (2051380 '.=' _args_foron_fn[2051370] _1_this[2051365] this[145974])
        ref tmp[2051384]:bool[10] "temp"
        (2051388 'move' tmp[2051384](2051386 'set reference' free_dist[145511]))
        (2051390 '.=' _args_foron_fn[2051370] _2_free_dist[2051367] tmp[2051384])
        val _args_vforon_fn[2051394]:c_void_ptr[149] "temp"
        (2051398 'move' _args_vforon_fn[2051394](2051396 'cast_to_void_star' _args_foron_fn[2051370]))
        val _args_sizeon_fn[2051400]:int(64)[13] "temp"
        (2051404 'move' _args_sizeon_fn[2051400](2051402 'sizeof_bundle' _class_localson_fn[2051360]))
        on(2051444 call wrapon_fn[2051406] tmp[145576] _args_vforon_fn[2051394] _args_sizeon_fn[2051400] _args_foron_fn[2051370])
      }
      {
      }
    }
    {
      (145587 call =[435212] free_dist[145511] 1)
    }
    const-val call_tmp[667509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667512 'move' call_tmp[667509] free_dist[145511])
    if call_tmp[667509]
    {
      val call_tmp[667514]:BaseDist[145968] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (667517 'move' call_tmp[667514](145599 call _to_unmanaged[1423734] this[145974]))
      (519726 'move' ret[519720] call_tmp[667514])
      gotoReturn _end_remove[519718] _end_remove[519718]
    }
    {
      (519732 'move' ret[519720](1423781 'cast' BaseDist[145968] nil[44]))
      gotoReturn _end_remove[519718] _end_remove[519718]
    }
    label _end_remove[519718]
    (519722 return ret[519720])
  }
  function BaseDist[145968].remove_dom[145621](const in arg this[145978]:BaseDist[145968], const in arg x[145618]:BaseDom[146767]) : bool[10] "inline" "method" "primary method" "resolved"
  {
    val ret[519738]:bool[10] "dead after last mention" "RVV" "temp"
    val count[145627]:int(64)[13] "dead at end of block" "insert auto destroy"
    (543562 'move' count[145627] -1)
    const-val tmp[145696]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[667524]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667527 'move' call_tmp[667524](145693 '_wide_get_locale' this[145978]))
    (145698 'move' tmp[145696] call_tmp[667524])
    val isdirect[2051449]:bool[10] "temp"
    (2051454 'move' isdirect[2051449](2051451 call chpl_doDirectExecuteOn[187469] tmp[145696]))
    if isdirect[2051449]
    {
      (2051458 call on_fn[935180] this[145978] x[145618] count[145627])
    }
    {
      val _args_foron_fn[2051479]:_class_localson_fn[2051467] "temp"
      (2051483 'move' _args_foron_fn[2051479](2051481 'stack allocate class' _class_localson_fn[2051467]))
      (2051485 '.=' _args_foron_fn[2051479] _0_tmp[2051470] tmp[145696])
      (2051489 '.=' _args_foron_fn[2051479] _1_this[2051472] this[145978])
      (2051493 '.=' _args_foron_fn[2051479] _2_x[2051474] x[145618])
      ref tmp[2051497]:int(64)[13] "temp"
      (2051501 'move' tmp[2051497](2051499 'set reference' count[145627]))
      (2051503 '.=' _args_foron_fn[2051479] _3_count[2051476] tmp[2051497])
      val _args_vforon_fn[2051507]:c_void_ptr[149] "temp"
      (2051511 'move' _args_vforon_fn[2051507](2051509 'cast_to_void_star' _args_foron_fn[2051479]))
      val _args_sizeon_fn[2051513]:int(64)[13] "temp"
      (2051517 'move' _args_sizeon_fn[2051513](2051515 'sizeof_bundle' _class_localson_fn[2051467]))
      on(2051565 call wrapon_fn[2051519] tmp[145696] _args_vforon_fn[2051507] _args_sizeon_fn[2051513] _args_foron_fn[2051479])
    }
    {
    }
    const-val call_tmp[667592]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667595 'move' call_tmp[667592](145706 call ==[435666] count[145627] 0))
    (1423134 'move' ret[519738] call_tmp[667592])
    gotoReturn _end_remove_dom[519736] _end_remove_dom[519736]
    label _end_remove_dom[519736]
    (519740 return ret[519738])
  }
  function BaseDist[145968].dsiDestroyDist[145894](const in arg this[146006]:BaseDist[145968]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519774 return _void[55])
  }
  function BaseDist[145968].dsiTrackDomains[145939](const in arg this[146018]:BaseDist[145968]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519789]:bool[10] "dead after last mention" "RVV" "temp"
    (519794 'move' ret[519789] 1)
    (519791 return ret[519789])
  }
  function BaseDist[145968].init[786808](const in arg this[786811]:BaseDist[145968], const  ref arg _doms[786822]:chpl__simpleSet(unmanaged BaseDom)[1208661], const  ref arg _domsLock[786837]:chpl_LocalSpinlock[187432], const in arg _free_when_no_doms[786850]:bool[10], const in arg pid[786863]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__doms[1208968]:chpl__simpleSet(unmanaged BaseDom)[1208661] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208974 'move' _formal_tmp__doms[1208968] _doms[786822])
    val _formal_tmp__domsLock[1208969]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208978 'move' _formal_tmp__domsLock[1208969] _domsLock[786837])
    val _formal_tmp__free_when_no_doms[1208970]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1208985 'move' _formal_tmp__free_when_no_doms[1208970](1208982 call chpl__initCopy[1034903] _free_when_no_doms[786850]))
    val _formal_tmp_pid[1208971]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1208991 'move' _formal_tmp_pid[1208971](1208988 call chpl__initCopy[955351] pid[786863]))
    val super_tmp[786880]:object[22] "dead after last mention" "temporary of super field" "temp"
    (786882 'move' super_tmp[786880](786879 '.v' this[786811] super[355692]))
    (786821 call init[749382] super_tmp[786880])
    val tmp[786885]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[786937]:object[22] "dead at end of block" "maybe param" "temp"
    (786940 'move' call_tmp[786937](786896 'cast' object[22] this[786811]))
    val chpl__thisAsParent[786893]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (786928 'move' chpl__thisAsParent[786893](1208997 call chpl__initCopy[945290] call_tmp[786937]))
    (786899 'setcid' chpl__thisAsParent[786893])
    (786901 '.=' this[786811] _doms[145476] _formal_tmp__doms[1208968])
    (786904 '.=' this[786811] _domsLock[145481] _formal_tmp__domsLock[1208969])
    (786907 '.=' this[786811] _free_when_no_doms[145486] _formal_tmp__free_when_no_doms[1208970])
    (786910 '.=' this[786811] pid[145492] _formal_tmp_pid[1208971])
    (786913 'setcid' this[786811])
    (786926 return _void[55])
  }
  function BaseDist[145968]._doms[801246](const in arg this[801250]:BaseDist[145968]) ref : _ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801260]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "dead after last mention" "RVV" "temp"
    ref call_tmp[801267]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "dead after last mention" "maybe param" "temp"
    (801270 'move' call_tmp[801267](801254 '.' this[801250] _doms[145476]))
    (801265 'move' ret[801260] call_tmp[801267])
    (801262 return ret[801260])
  }
  function BaseDist[145968]._domsLock[801272](const in arg this[801276]:BaseDist[145968]) ref : _ref(chpl_LocalSpinlock)[941090] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801286]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[801293]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
    (801296 'move' call_tmp[801293](801280 '.' this[801276] _domsLock[145481]))
    (801291 'move' ret[801286] call_tmp[801293])
    (801288 return ret[801286])
  }
  function BaseDist[145968]._free_when_no_doms[801298](const in arg this[801302]:BaseDist[145968]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801312]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[801319]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (801322 'move' call_tmp[801319](801306 '.' this[801302] _free_when_no_doms[145486]))
    (801317 'move' ret[801312] call_tmp[801319])
    (801314 return ret[801312])
  }
  function BaseDist[145968].pid[801324](const in arg this[801328]:BaseDist[145968]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801338]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[801345]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (801348 'move' call_tmp[801345](801332 '.' this[801328] pid[145492]))
    (801343 'move' ret[801338] call_tmp[801345])
    (801340 return ret[801338])
  }
  type BaseDist[145968] val super[355692]:object[22] "super class" val _doms[145476]:chpl__simpleSet(unmanaged BaseDom)[1208661] val _domsLock[145481]:chpl_LocalSpinlock[187432] val _free_when_no_doms[145486]:bool[10] val pid[145492]:int(64)[13]
  function BaseDom[146767].init[146064](const in arg this[146769]:BaseDom[146767]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[461725]:object[22] "dead after last mention" "temporary of super field" "temp"
    (461733 'move' super_tmp[461725](461726 '.v' this[146769] super[355696]))
    (461729 call init[749382] super_tmp[461725])
    val tmp[461660]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[667634]:object[22] "dead at end of block" "maybe param" "temp"
    (667637 'move' call_tmp[667634](461671 'cast' object[22] this[146769]))
    val chpl__thisAsParent[461668]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (543566 'move' chpl__thisAsParent[461668](1247460 call chpl__initCopy[945290] call_tmp[667634]))
    (461674 'setcid' chpl__thisAsParent[461668])
    val tmp[461677]:chpl__simpleSet(unmanaged BaseArr)[1208361] "dead after last mention" "temp"
    val call_tmp[667639]:chpl__simpleSet(unmanaged BaseArr)[1208361] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_table[1250825]:chpl__hashtable(unmanaged BaseArr,nothing)[1208447] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1808883]:chpl__hashtable(unmanaged BaseArr,nothing)[1208447] "temp"
    (1250827 call init_default_table[1247547] ret_tmp[1808883])
    (1808886 'move' default_arg_table[1250825] ret_tmp[1808883])
    (1247482 call init[1247487] tmp[461677] default_arg_table[1250825])
    (461684 '.=' this[146769] _arrs[146037] tmp[461677])
    val tmp[461688]:int(64)[13] "dead after last mention" "temp"
    (1250834 'move' tmp[461688] 0)
    (461693 '.=' this[146769] _arrs_containing_dom[146042] tmp[461688])
    val tmp[461697]:chpl_LocalSpinlock[187432] "dead after last mention" "temp"
    const-val default_arg_l[1250844]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1805274]:AtomicBool[45877] "temp"
    (1250846 call init_default_l[944847] ret_tmp[1805274])
    (1805277 'move' default_arg_l[1250844] ret_tmp[1805274])
    (1250836 call init[820340] tmp[461697] default_arg_l[1250844])
    (461702 '.=' this[146769] _arrsLock[146047] tmp[461697])
    val tmp[461706]:bool[10] "dead after last mention" "temp"
    (1250853 'move' tmp[461706] 0)
    (461711 '.=' this[146769] _free_when_no_arrs[146052] tmp[461706])
    val tmp[461716]:int(64)[13] "dead after last mention" "temp"
    (461719 'move' tmp[461716] -1)
    (461721 '.=' this[146769] pid[146058] tmp[461716])
    (461736 'setcid' this[146769])
    (519814 return _void[55])
  }
  function BaseDom[146767].deinit[146071](const in arg this[146773]:BaseDom[146767]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1787964]
    ref _field_destructor_tmp_[1787962]:_ref(chpl_LocalSpinlock)[941090] "temp"
    (1787969 'move' _field_destructor_tmp_[1787962](1787966 '.' this[146773] _arrsLock[146047]))
    (1787971 call deinit[820413] _field_destructor_tmp_[1787962])
    ref _field_destructor_tmp_[1787974]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
    (1787979 'move' _field_destructor_tmp_[1787974](1787976 '.' this[146773] _arrs[146037]))
    (1787981 call deinit[1519994] _field_destructor_tmp_[1787974])
    val _parent_destructor_tmp_[1787984]:object[22] "temp"
    (1787989 'move' _parent_destructor_tmp_[1787984](1787985 'cast' object[22] this[146773]))
    (1787991 call deinit[749398] _parent_destructor_tmp_[1787984])
    (519816 return _void[55])
  }
  function BaseDom[146767].dsiMyDist[146078](const in arg this[146777]:BaseDom[146767]) : BaseDist[145968] "method" "primary method" "resolved" "virtual"
  {
    val ret[519820]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    (146101 call halt[154111] "internal error: dsiMyDist is not implemented")
    val ret[146106]:BaseDist[145968] "dead at end of block" "insert auto destroy" "unsafe"
    (1418972 'move' ret[146106](1418970 'cast' BaseDist[145968] nil[44]))
    (1418967 'move' ret[519820] ret[146106])
    gotoReturn _end_dsiMyDist[519818] _end_dsiMyDist[519818]
    label _end_dsiMyDist[519818]
    (519822 return ret[519820])
  }
  function BaseDom[146767].remove[146118](const in arg this[146781]:BaseDom[146767], ref arg _retArg[1804402]:_ref((unmanaged BaseDom?,unmanaged BaseDist?))[1418941]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[519832]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "RVV" "temp"
    val call_tmp[667646]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1775202]:int(32)[95] "temp"
    (1775206 'move' _virtual_method_tmp_[1775202](1775204 'getcid' this[146781]))
    (667649 'move' call_tmp[667646](146132 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1775202] this[146781]))
    const-val call_tmp[667653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1418974]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1418979 'move' coerce_tmp[1418974] call_tmp[667646])
    const-val _virtual_method_tmp_[1775209]:int(32)[95] "temp"
    (1775213 'move' _virtual_method_tmp_[1775209](1775211 'getcid' coerce_tmp[1418974]))
    (667656 'move' call_tmp[667653](146139 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1775209] coerce_tmp[1418974]))
    const-val call_tmp[667660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1775216]:int(32)[95] "temp"
    (1775220 'move' _virtual_method_tmp_[1775216](1775218 'getcid' this[146781]))
    (667663 'move' call_tmp[667660](146142 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1775216] this[146781]))
    const-val call_tmp[667665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667668 'move' call_tmp[667665](146143 call ==[938] call_tmp[667653] call_tmp[667660]))
    (146146 call assert[210363] call_tmp[667665])
    val ret_dom[146153]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1418985]:BaseDom[146767] "dead at end of block" "temp"
    (1418988 'move' init_coerce_tmp[1418985](1423315 'cast' BaseDom[146767] nil[44]))
    (543570 'move' ret_dom[146153] init_coerce_tmp[1418985])
    val ret_dist[146161]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1418991]:BaseDist[145968] "dead at end of block" "temp"
    (1418994 'move' init_coerce_tmp[1418991](1423319 'cast' BaseDist[145968] nil[44]))
    (543572 'move' ret_dist[146161] init_coerce_tmp[1418991])
    val call_tmp[667672]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1775223]:int(32)[95] "temp"
    (1775227 'move' _virtual_method_tmp_[1775223](1775225 'getcid' this[146781]))
    (667675 'move' call_tmp[667672](146167 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1775223] this[146781]))
    val dist[146168]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    (543574 'move' dist[146168](1418998 call chpl__initCopy[1419000] call_tmp[667672]))
    val free_dom[146173]:bool[10] "dead at end of block" "insert auto destroy"
    (543576 'move' free_dom[146173] 0)
    val remove_dist[146178]:bool[10] "dead at end of block" "insert auto destroy"
    (543578 'move' remove_dist[146178] 0)
    const-val tmp[146266]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[667677]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667680 'move' call_tmp[667677](146263 '_wide_get_locale' this[146781]))
    (146268 'move' tmp[146266] call_tmp[667677])
    val rvfDerefTmp[2048850]:BaseDist[145968] "concurrently accessed" "temp"
    (2048853 'move' rvfDerefTmp[2048850] dist[146168])
    val isdirect[2051570]:bool[10] "temp"
    (2051575 'move' isdirect[2051570](2051572 call chpl_doDirectExecuteOn[187469] tmp[146266]))
    if isdirect[2051570]
    {
      (2051579 call on_fn[935198] this[146781] free_dom[146173] rvfDerefTmp[2048850] remove_dist[146178])
    }
    {
      val _args_foron_fn[2051603]:_class_localson_fn[2051589] "temp"
      (2051607 'move' _args_foron_fn[2051603](2051605 'stack allocate class' _class_localson_fn[2051589]))
      (2051609 '.=' _args_foron_fn[2051603] _0_tmp[2051592] tmp[146266])
      (2051613 '.=' _args_foron_fn[2051603] _1_this[2051594] this[146781])
      ref tmp[2051617]:bool[10] "temp"
      (2051621 'move' tmp[2051617](2051619 'set reference' free_dom[146173]))
      (2051623 '.=' _args_foron_fn[2051603] _2_free_dom[2051596] tmp[2051617])
      (2051627 '.=' _args_foron_fn[2051603] _3_rvfDerefTmp[2051598] rvfDerefTmp[2048850])
      ref tmp[2051631]:bool[10] "temp"
      (2051635 'move' tmp[2051631](2051633 'set reference' remove_dist[146178]))
      (2051637 '.=' _args_foron_fn[2051603] _4_remove_dist[2051600] tmp[2051631])
      val _args_vforon_fn[2051641]:c_void_ptr[149] "temp"
      (2051645 'move' _args_vforon_fn[2051641](2051643 'cast_to_void_star' _args_foron_fn[2051603]))
      val _args_sizeon_fn[2051647]:int(64)[13] "temp"
      (2051651 'move' _args_sizeon_fn[2051647](2051649 'sizeof_bundle' _class_localson_fn[2051589]))
      on(2051707 call wrapon_fn[2051653] tmp[146266] _args_vforon_fn[2051641] _args_sizeon_fn[2051647] _args_foron_fn[2051603])
    }
    {
    }
    const-val call_tmp[667762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667765 'move' call_tmp[667762] free_dom[146173])
    if call_tmp[667762]
    {
      val call_tmp[667767]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
      (667770 'move' call_tmp[667767](146279 call _to_unmanaged[1419040] this[146781]))
      val coerce_tmp[1423138]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1423144 'move' coerce_tmp[1423138] call_tmp[667767])
      (146280 call =[1417998] ret_dom[146153] coerce_tmp[1423138])
    }
    const-val call_tmp[667772]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667775 'move' call_tmp[667772] remove_dist[146178])
    if call_tmp[667772]
    {
      val coerce_tmp[1423223]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1423229 'move' coerce_tmp[1423223] dist[146168])
      (146291 call =[1423188] ret_dist[146161] coerce_tmp[1423223])
    }
    const-val call_tmp[667777]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811867]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
    (146302 call _build_tuple[1423232] ret_dom[146153] ret_dist[146161] ret_tmp[1811867])
    (1811870 'move' call_tmp[667777] ret_tmp[1811867])
    val call_tmp[667782]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1423324 'move' ret[519832] call_tmp[667777])
    gotoReturn _end_remove[519830] _end_remove[519830]
    label _end_remove[519830]
    (1804404 '=' _retArg[1804402] ret[519832])
    (1804406 return _void[55])
  }
  function BaseDom[146767].remove_arr[1416538](const in arg this[1416542]:BaseDom[146767], const in arg x[1416544]:BaseArr[149584]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1416554]:bool[10] "dead after last mention" "RVV" "temp"
    val count[1416567]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1416569 'move' count[1416567] -1)
    const-val tmp[1416573]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[1416575]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416577 'move' call_tmp[1416575](1416579 '_wide_get_locale' this[1416542]))
    (1416581 'move' tmp[1416573] call_tmp[1416575])
    val isdirect[2060413]:bool[10] "temp"
    (2060418 'move' isdirect[2060413](2060415 call chpl_doDirectExecuteOn[187469] tmp[1416573]))
    if isdirect[2060413]
    {
      (2060422 call on_fn[1416588] this[1416542] x[1416544] count[1416567])
    }
    {
      val _args_foron_fn[2060443]:_class_localson_fn[2060431] "temp"
      (2060447 'move' _args_foron_fn[2060443](2060445 'stack allocate class' _class_localson_fn[2060431]))
      (2060449 '.=' _args_foron_fn[2060443] _0_tmp[2060434] tmp[1416573])
      (2060453 '.=' _args_foron_fn[2060443] _1_this[2060436] this[1416542])
      (2060457 '.=' _args_foron_fn[2060443] _2_x[2060438] x[1416544])
      ref tmp[2060461]:int(64)[13] "temp"
      (2060465 'move' tmp[2060461](2060463 'set reference' count[1416567]))
      (2060467 '.=' _args_foron_fn[2060443] _3_count[2060440] tmp[2060461])
      val _args_vforon_fn[2060471]:c_void_ptr[149] "temp"
      (2060475 'move' _args_vforon_fn[2060471](2060473 'cast_to_void_star' _args_foron_fn[2060443]))
      val _args_sizeon_fn[2060477]:int(64)[13] "temp"
      (2060481 'move' _args_sizeon_fn[2060477](2060479 'sizeof_bundle' _class_localson_fn[2060431]))
      on(2060529 call wrapon_fn[2060483] tmp[1416573] _args_vforon_fn[2060471] _args_sizeon_fn[2060477] _args_foron_fn[2060443])
    }
    {
    }
    const-val call_tmp[1416752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416754 'move' call_tmp[1416752](1416757 call ==[435666] count[1416567] 0))
    (1417954 'move' ret[1416554] call_tmp[1416752])
    gotoReturn _end_remove_arr[1416769] _end_remove_arr[1416769]
    label _end_remove_arr[1416769]
    (1416771 return ret[1416554])
  }
  function BaseDom[146767].add_arr[1264761](const in arg this[1264765]:BaseDom[146767], const in arg x[1264767]:BaseArr[149584]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1264783]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[1264785]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264787 'move' call_tmp[1264785](1264789 '_wide_get_locale' this[1264765]))
    (1264791 'move' tmp[1264783] call_tmp[1264785])
    val isdirect[2058345]:bool[10] "temp"
    (2058350 'move' isdirect[2058345](2058347 call chpl_doDirectExecuteOn[187469] tmp[1264783]))
    if isdirect[2058345]
    {
      (2058354 call on_fn[1264798] this[1264765] x[1264767])
    }
    {
      val _args_foron_fn[2058372]:_class_localson_fn[2058362] "temp"
      (2058376 'move' _args_foron_fn[2058372](2058374 'stack allocate class' _class_localson_fn[2058362]))
      (2058378 '.=' _args_foron_fn[2058372] _0_tmp[2058365] tmp[1264783])
      (2058382 '.=' _args_foron_fn[2058372] _1_this[2058367] this[1264765])
      (2058386 '.=' _args_foron_fn[2058372] _2_x[2058369] x[1264767])
      val _args_vforon_fn[2058390]:c_void_ptr[149] "temp"
      (2058394 'move' _args_vforon_fn[2058390](2058392 'cast_to_void_star' _args_foron_fn[2058372]))
      val _args_sizeon_fn[2058396]:int(64)[13] "temp"
      (2058400 'move' _args_sizeon_fn[2058396](2058398 'sizeof_bundle' _class_localson_fn[2058362]))
      on(2058440 call wrapon_fn[2058402] tmp[1264783] _args_vforon_fn[2058390] _args_sizeon_fn[2058396] _args_foron_fn[2058372])
    }
    {
    }
    (1264891 return _void[55])
  }
  function BaseDom[146767].dsiLinksDistribution[146679](const in arg this[146813]:BaseDom[146767]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519901]:bool[10] "dead after last mention" "RVV" "temp"
    (519906 'move' ret[519901] 1)
    (519903 return ret[519901])
  }
  function BaseDom[146767].dsiDestroyDom[146689](const in arg this[146817]:BaseDom[146767]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519908 return _void[55])
  }
  function BaseDom[146767]._arrs[801408](const in arg this[801412]:BaseDom[146767]) ref : _ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801422]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "RVV" "temp"
    ref call_tmp[801429]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "maybe param" "temp"
    (801432 'move' call_tmp[801429](801416 '.' this[801412] _arrs[146037]))
    (801427 'move' ret[801422] call_tmp[801429])
    (801424 return ret[801422])
  }
  function BaseDom[146767]._arrs_containing_dom[801434](const in arg this[801438]:BaseDom[146767]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801448]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[801455]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (801458 'move' call_tmp[801455](801442 '.' this[801438] _arrs_containing_dom[146042]))
    (801453 'move' ret[801448] call_tmp[801455])
    (801450 return ret[801448])
  }
  function BaseDom[146767]._arrsLock[801460](const in arg this[801464]:BaseDom[146767]) ref : _ref(chpl_LocalSpinlock)[941090] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801474]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "RVV" "temp"
    ref call_tmp[801481]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
    (801484 'move' call_tmp[801481](801468 '.' this[801464] _arrsLock[146047]))
    (801479 'move' ret[801474] call_tmp[801481])
    (801476 return ret[801474])
  }
  function BaseDom[146767]._free_when_no_arrs[801486](const in arg this[801490]:BaseDom[146767]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801500]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[801507]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (801510 'move' call_tmp[801507](801494 '.' this[801490] _free_when_no_arrs[146052]))
    (801505 'move' ret[801500] call_tmp[801507])
    (801502 return ret[801500])
  }
  function BaseDom[146767].pid[801512](const in arg this[801516]:BaseDom[146767]) ref : _ref(int(64))[936591] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801526]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[801533]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (801536 'move' call_tmp[801533](801520 '.' this[801516] pid[146058]))
    (801531 'move' ret[801526] call_tmp[801533])
    (801528 return ret[801526])
  }
  type BaseDom[146767] val super[355696]:object[22] "super class" val _arrs[146037]:chpl__simpleSet(unmanaged BaseArr)[1208361] val _arrs_containing_dom[146042]:int(64)[13] val _arrsLock[146047]:chpl_LocalSpinlock[187432] val _free_when_no_arrs[146052]:bool[10] val pid[146058]:int(64)[13]
  function BaseRectangularDom(1,int(64),false)[1250918].deinit[1736432](const in arg this[1736436]:BaseRectangularDom(1,int(64),false)[1250918]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789735]
    val _parent_destructor_tmp_[1789730]:BaseDom[146767] "temp"
    (1789737 'move' _parent_destructor_tmp_[1789730](1789731 'cast' BaseDom[146767] this[1736436]))
    (1789739 call deinit[146071] _parent_destructor_tmp_[1789730])
    (1736442 return _void[55])
  }
  function BaseRectangularDom(1,int(64),false)[1250918].init[1247349](const in arg this[1247353]:BaseRectangularDom(1,int(64),false)[1250918]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779231]:int(64)[13] "temp"
    val super_tmp[1247369]:BaseDom[146767] "dead after last mention" "temporary of super field" "temp"
    (1247371 'move' super_tmp[1247369](1247373 '.v' this[1247353] super[1250908]))
    (1247380 call init[146064] super_tmp[1247369])
    val tmp[1247382]:BaseDom[146767] "dead after last mention" "temp" "type variable"
    val call_tmp[1247401]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    (1247403 'move' call_tmp[1247401](1247405 'cast' BaseDom[146767] this[1247353]))
    val chpl__thisAsParent[1247408]:BaseDom[146767] "dead at end of block" "insert auto destroy" "temp"
    (1247410 'move' chpl__thisAsParent[1247408](1250856 call chpl__initCopy[1250858] call_tmp[1247401]))
    (1247414 'setcid' chpl__thisAsParent[1247408])
    (1247446 'setcid' this[1247353])
    (1247448 return _void[55])
  }
  type BaseRectangularDom(1,int(64),false)[1250918] val super[1250908]:BaseDom[146767] "super class"
  function BaseArr[149584].deinit[148925](const in arg this[149602]:BaseArr[149584]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1787999]
    val _parent_destructor_tmp_[1787994]:object[22] "temp"
    (1788001 'move' _parent_destructor_tmp_[1787994](1787995 'cast' object[22] this[149602]))
    (1788003 call deinit[749398] _parent_destructor_tmp_[1787994])
    (520260 return _void[55])
  }
  function BaseArr[149584].dsiGetBaseDom[148944](const in arg this[149610]:BaseArr[149584]) : BaseDom[146767] "method" "primary method" "resolved" "virtual"
  {
    val ret[520273]:BaseDom[146767] "dead after last mention" "RVV" "temp"
    (148967 call halt[154111] "internal error: dsiGetBaseDom is not implemented")
    val ret[148972]:BaseDom[146767] "dead at end of block" "insert auto destroy" "unsafe"
    (1416472 'move' ret[148972](1416470 'cast' BaseDom[146767] nil[44]))
    (1416467 'move' ret[520273] ret[148972])
    gotoReturn _end_dsiGetBaseDom[520271] _end_dsiGetBaseDom[520271]
    label _end_dsiGetBaseDom[520271]
    (520275 return ret[520273])
  }
  function BaseArr[149584].remove[1416323](const in arg this[1416327]:BaseArr[149584], ref arg _retArg[1811773]:_ref((BaseArr,unmanaged BaseDom?))[1418174]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1416331]:(BaseArr,unmanaged BaseDom?)[1418084] "dead after last mention" "RVV" "temp"
    val ret_arr[1416339]:BaseArr[149584] "dead at end of block" "insert auto destroy"
    (1416341 'move' ret_arr[1416339](1416444 call chpl__initCopy[1256178] this[1416327]))
    val ret_dom[1416345]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1416457]:BaseDom[146767] "dead at end of block" "temp"
    (1416460 'move' init_coerce_tmp[1416457](1418224 'cast' BaseDom[146767] nil[44]))
    (1416347 'move' ret_dom[1416345] init_coerce_tmp[1416457])
    val rm_dom[1416352]:bool[10] "dead at end of block" "insert auto destroy"
    (1416354 'move' rm_dom[1416352] 0)
    val call_tmp[1416358]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1775335]:int(32)[95] "temp"
    (1775339 'move' _virtual_method_tmp_[1775335](1775337 'getcid' this[1416327]))
    (1416360 'move' call_tmp[1416358](1416366 'virtual method call' dsiGetBaseDom[148944] _virtual_method_tmp_[1775335] this[1416327]))
    val dom[1416367]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    (1416369 'move' dom[1416367](1416474 call chpl__initCopy[1416476] call_tmp[1416358]))
    val call_tmp[1416373]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416375 'move' call_tmp[1416373](1416378 call _to_unmanaged[1416495] this[1416327]))
    const-val call_tmp[1416380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1416773]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1416778 'move' coerce_tmp[1416773] dom[1416367])
    (1416382 'move' call_tmp[1416380](1416388 call remove_arr[1416538] coerce_tmp[1416773] call_tmp[1416373]))
    (1416392 call =[435212] rm_dom[1416352] call_tmp[1416380])
    const-val call_tmp[1416398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416400 'move' call_tmp[1416398] rm_dom[1416352])
    if call_tmp[1416398]
    {
      val coerce_tmp[1418033]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1418039 'move' coerce_tmp[1418033] dom[1416367])
      (1416408 call =[1417998] ret_dom[1416345] coerce_tmp[1418033])
    }
    const-val call_tmp[1416415]:(BaseArr,unmanaged BaseDom?)[1418084] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811791]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
    (1416420 call _build_tuple[1418042] ret_arr[1416339] ret_dom[1416345] ret_tmp[1811791])
    (1811794 'move' call_tmp[1416415] ret_tmp[1811791])
    (1416423 'move' ret[1416331] call_tmp[1416415])
    gotoReturn _end_remove[1416432] _end_remove[1416432]
    label _end_remove[1416432]
    (1811775 '=' _retArg[1811773] ret[1416331])
    (1811777 return _void[55])
  }
  function BaseArr[149584].dsiDestroyArr[149115](const in arg this[149626]:BaseArr[149584], const in arg deinitElts[149112]:bool[10]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (149136 call halt[154111] "dsiDestroyArr must be defined")
    (520298 return _void[55])
  }
  function BaseArr[149584].decEltCountsIfNeeded[149578](const in arg this[149706]:BaseArr[149584]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (520380 return _void[55])
  }
  function BaseArr[149584]._decEltRefCounts[806699](const in arg this[806703]:BaseArr[149584]) ref : _ref(bool)[937218] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[806713]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[806720]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (806723 'move' call_tmp[806720](806707 '.' this[806703] _decEltRefCounts[148879]))
    (806718 'move' ret[806713] call_tmp[806720])
    (806715 return ret[806713])
  }
  function BaseArr[149584].init[806725](const in arg this[806728]:BaseArr[149584], const in arg pid[806739]:int(64)[13], const in arg _decEltRefCounts[806754]:bool[10]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_pid[1256151]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1256158 'move' _formal_tmp_pid[1256151](1256155 call chpl__initCopy[955351] pid[806739]))
    val _formal_tmp__decEltRefCounts[1256152]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1256164 'move' _formal_tmp__decEltRefCounts[1256152](1256161 call chpl__initCopy[1034903] _decEltRefCounts[806754]))
    val super_tmp[806771]:object[22] "dead after last mention" "temporary of super field" "temp"
    (806773 'move' super_tmp[806771](806770 '.v' this[806728] super[355704]))
    (806738 call init[749382] super_tmp[806771])
    val tmp[806776]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[806821]:object[22] "dead at end of block" "maybe param" "temp"
    (806824 'move' call_tmp[806821](806787 'cast' object[22] this[806728]))
    val chpl__thisAsParent[806784]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (806812 'move' chpl__thisAsParent[806784](1256170 call chpl__initCopy[945290] call_tmp[806821]))
    (806790 'setcid' chpl__thisAsParent[806784])
    (806792 '.=' this[806728] pid[148873] _formal_tmp_pid[1256151])
    (806795 '.=' this[806728] _decEltRefCounts[148879] _formal_tmp__decEltRefCounts[1256152])
    (806798 'setcid' this[806728])
    (806810 return _void[55])
  }
  type BaseArr[149584] val super[355704]:object[22] "super class" val pid[148873]:int(64)[13] val _decEltRefCounts[148879]:bool[10]
  function BaseArrOverRectangularDom(1,int(64),false)[1256238].dsiReallocate[1297511](const in arg this[1297515]:BaseArrOverRectangularDom(1,int(64),false)[1256238], const  ref arg bounds[1297555]:1*range(int(64),bounded,false)[1244715]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (1297574 call halt[154111] "reallocating not supported for this array type")
    (1297576 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256238].dsiPostReallocate[1297638](const in arg this[1297642]:BaseArrOverRectangularDom(1,int(64),false)[1256238]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1297648 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256238].deinit[1736493](const in arg this[1736497]:BaseArrOverRectangularDom(1,int(64),false)[1256238]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789747]
    val _parent_destructor_tmp_[1789742]:BaseArr[149584] "temp"
    (1789749 'move' _parent_destructor_tmp_[1789742](1789743 'cast' BaseArr[149584] this[1736497]))
    (1789751 call deinit[148925] _parent_destructor_tmp_[1789742])
    (1736503 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256238].init[1256028](const in arg this[1256032]:BaseArrOverRectangularDom(1,int(64),false)[1256238], const in arg pid[1256038]:int(64)[13], const in arg _decEltRefCounts[1256044]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779276]:int(64)[13] "temp"
    val super_tmp[1256060]:BaseArr[149584] "dead after last mention" "temporary of super field" "temp"
    (1256062 'move' super_tmp[1256060](1256064 '.v' this[1256032] super[1256228]))
    (1256071 call init[806725] super_tmp[1256060] pid[1256038] _decEltRefCounts[1256044])
    val tmp[1256075]:BaseArr[149584] "dead after last mention" "temp" "type variable"
    val call_tmp[1256094]:BaseArr[149584] "dead at end of block" "maybe param" "temp"
    (1256096 'move' call_tmp[1256094](1256098 'cast' BaseArr[149584] this[1256032]))
    val chpl__thisAsParent[1256101]:BaseArr[149584] "dead at end of block" "insert auto destroy" "temp"
    (1256103 'move' chpl__thisAsParent[1256101](1256176 call chpl__initCopy[1256178] call_tmp[1256094]))
    (1256107 'setcid' chpl__thisAsParent[1256101])
    (1256139 'setcid' this[1256032])
    (1256141 return _void[55])
  }
  type BaseArrOverRectangularDom(1,int(64),false)[1256238] val super[1256228]:BaseArr[149584] "super class"
  function BaseRectangularArr(1,int(64),false,locale)[1256291].deinit[1736505](const in arg this[1736509]:BaseRectangularArr(1,int(64),false,locale)[1256291]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789759]
    val _parent_destructor_tmp_[1789754]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1789761 'move' _parent_destructor_tmp_[1789754](1789755 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1736509]))
    (1789763 call deinit[1736493] _parent_destructor_tmp_[1789754])
    (1736515 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017].deinit[1736529](const in arg this[1736533]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789823]
    val _parent_destructor_tmp_[1789818]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1789825 'move' _parent_destructor_tmp_[1789818](1789819 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1736533]))
    (1789827 call deinit[1736493] _parent_destructor_tmp_[1789818])
    (1736539 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358560].deinit[1736553](const in arg this[1736557]:BaseRectangularArr(1,int(64),false,real(64))[1358560]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789887]
    val _parent_destructor_tmp_[1789882]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1789889 'move' _parent_destructor_tmp_[1789882](1789883 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1736557]))
    (1789891 call deinit[1736493] _parent_destructor_tmp_[1789882])
    (1736563 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368480].deinit[1736577](const in arg this[1736581]:BaseRectangularArr(1,int(64),false,int(64))[1368480]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1789951]
    val _parent_destructor_tmp_[1789946]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1789953 'move' _parent_destructor_tmp_[1789946](1789947 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1736581]))
    (1789955 call deinit[1736493] _parent_destructor_tmp_[1789946])
    (1736587 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1563521].deinit[1736601](const in arg this[1736605]:BaseRectangularArr(1,int(64),false,uint(64))[1563521]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1790015]
    val _parent_destructor_tmp_[1790010]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1790017 'move' _parent_destructor_tmp_[1790010](1790011 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1736605]))
    (1790019 call deinit[1736493] _parent_destructor_tmp_[1790010])
    (1736611 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256291].decEltCountsIfNeeded[1741480](const in arg this[1741484]:BaseRectangularArr(1,int(64),false,locale)[1256291]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1741490]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1741529]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1741535 'move' coerce_tmp[1741529](1741531 'cast' BaseArr[149584] this[1741484]))
    (1741492 'move' call_tmp[1741490](1741495 call _decEltRefCounts[806699] coerce_tmp[1741529]))
    const-val call_tmp[1741498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1741538]:bool[10] "dead after last mention" "const" "temp"
    (1741540 'move' tmp[1741538](1741542 'deref' call_tmp[1741490]))
    (1741500 'move' call_tmp[1741498] tmp[1741538])
    if call_tmp[1741498]
    {
      val call_tmp[1741507]:BaseRectangularArr(1,int(64),false,locale)[1256291] "dead after last mention" "expr temp" "maybe param" "temp"
      (1741509 'move' call_tmp[1741507](1741512 call _to_unmanaged[1741544] this[1741484]))
      val call_tmp[1741514]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1741949]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1741955 'move' coerce_tmp[1741949](1741951 'cast' BaseArr[149584] call_tmp[1741507]))
      (1741523 call chpl_decRefCountsForDomainsInArrayEltTypes[1741607] coerce_tmp[1741949])
    }
    (1741527 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017].decEltCountsIfNeeded[1741962](const in arg this[1741966]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1741972]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1742011]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1742017 'move' coerce_tmp[1742011](1742013 'cast' BaseArr[149584] this[1741966]))
    (1741974 'move' call_tmp[1741972](1741977 call _decEltRefCounts[806699] coerce_tmp[1742011]))
    const-val call_tmp[1741980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1742020]:bool[10] "dead after last mention" "const" "temp"
    (1742022 'move' tmp[1742020](1742024 'deref' call_tmp[1741972]))
    (1741982 'move' call_tmp[1741980] tmp[1742020])
    if call_tmp[1741980]
    {
      val call_tmp[1741989]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017] "dead after last mention" "expr temp" "maybe param" "temp"
      (1741991 'move' call_tmp[1741989](1741994 call _to_unmanaged[1742026] this[1741966]))
      val call_tmp[1741996]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1742431]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1742437 'move' coerce_tmp[1742431](1742433 'cast' BaseArr[149584] call_tmp[1741989]))
      (1742005 call chpl_decRefCountsForDomainsInArrayEltTypes[1742089] coerce_tmp[1742431])
    }
    (1742009 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358560].decEltCountsIfNeeded[1742444](const in arg this[1742448]:BaseRectangularArr(1,int(64),false,real(64))[1358560]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1742454]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1742493]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1742499 'move' coerce_tmp[1742493](1742495 'cast' BaseArr[149584] this[1742448]))
    (1742456 'move' call_tmp[1742454](1742459 call _decEltRefCounts[806699] coerce_tmp[1742493]))
    const-val call_tmp[1742462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1742502]:bool[10] "dead after last mention" "const" "temp"
    (1742504 'move' tmp[1742502](1742506 'deref' call_tmp[1742454]))
    (1742464 'move' call_tmp[1742462] tmp[1742502])
    if call_tmp[1742462]
    {
      val call_tmp[1742471]:BaseRectangularArr(1,int(64),false,real(64))[1358560] "dead after last mention" "expr temp" "maybe param" "temp"
      (1742473 'move' call_tmp[1742471](1742476 call _to_unmanaged[1742508] this[1742448]))
      val call_tmp[1742478]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1742913]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1742919 'move' coerce_tmp[1742913](1742915 'cast' BaseArr[149584] call_tmp[1742471]))
      (1742487 call chpl_decRefCountsForDomainsInArrayEltTypes[1742571] coerce_tmp[1742913])
    }
    (1742491 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368480].decEltCountsIfNeeded[1742926](const in arg this[1742930]:BaseRectangularArr(1,int(64),false,int(64))[1368480]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1742936]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1742975]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1742981 'move' coerce_tmp[1742975](1742977 'cast' BaseArr[149584] this[1742930]))
    (1742938 'move' call_tmp[1742936](1742941 call _decEltRefCounts[806699] coerce_tmp[1742975]))
    const-val call_tmp[1742944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1742984]:bool[10] "dead after last mention" "const" "temp"
    (1742986 'move' tmp[1742984](1742988 'deref' call_tmp[1742936]))
    (1742946 'move' call_tmp[1742944] tmp[1742984])
    if call_tmp[1742944]
    {
      val call_tmp[1742953]:BaseRectangularArr(1,int(64),false,int(64))[1368480] "dead after last mention" "expr temp" "maybe param" "temp"
      (1742955 'move' call_tmp[1742953](1742958 call _to_unmanaged[1742990] this[1742930]))
      val call_tmp[1742960]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1743395]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1743401 'move' coerce_tmp[1743395](1743397 'cast' BaseArr[149584] call_tmp[1742953]))
      (1742969 call chpl_decRefCountsForDomainsInArrayEltTypes[1743053] coerce_tmp[1743395])
    }
    (1742973 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1563521].decEltCountsIfNeeded[1743408](const in arg this[1743412]:BaseRectangularArr(1,int(64),false,uint(64))[1563521]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1743418]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1743457]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1743463 'move' coerce_tmp[1743457](1743459 'cast' BaseArr[149584] this[1743412]))
    (1743420 'move' call_tmp[1743418](1743423 call _decEltRefCounts[806699] coerce_tmp[1743457]))
    const-val call_tmp[1743426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1743466]:bool[10] "dead after last mention" "const" "temp"
    (1743468 'move' tmp[1743466](1743470 'deref' call_tmp[1743418]))
    (1743428 'move' call_tmp[1743426] tmp[1743466])
    if call_tmp[1743426]
    {
      val call_tmp[1743435]:BaseRectangularArr(1,int(64),false,uint(64))[1563521] "dead after last mention" "expr temp" "maybe param" "temp"
      (1743437 'move' call_tmp[1743435](1743440 call _to_unmanaged[1743472] this[1743412]))
      val call_tmp[1743442]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1743877]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1743883 'move' coerce_tmp[1743877](1743879 'cast' BaseArr[149584] call_tmp[1743435]))
      (1743451 call chpl_decRefCountsForDomainsInArrayEltTypes[1743535] coerce_tmp[1743877])
    }
    (1743455 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256291].init[1255842](const in arg this[1255846]:BaseRectangularArr(1,int(64),false,locale)[1256291], const in arg pid[1255852]:int(64)[13], const in arg _decEltRefCounts[1255858]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779274]:locale[28] "temp"
    val _formal_type_tmp_[1779272]:int(64)[13] "temp"
    val super_tmp[1255878]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temporary of super field" "temp"
    (1255880 'move' super_tmp[1255878](1255882 '.v' this[1255846] super[1256287]))
    (1255889 call init[1256028] super_tmp[1255878] pid[1255852] _decEltRefCounts[1255858])
    val tmp[1255896]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temp" "type variable"
    val call_tmp[1255915]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
    (1255917 'move' call_tmp[1255915](1255919 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1255846]))
    val chpl__thisAsParent[1255922]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "temp"
    (1255924 'move' chpl__thisAsParent[1255922](1256265 call chpl__initCopy[1256267] call_tmp[1255915]))
    (1255928 'setcid' chpl__thisAsParent[1255922])
    (1255935 'setcid' this[1255846])
    (1255937 return _void[55])
  }
  function init_default__decEltRefCounts[1255988]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255990]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1255995]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255999]:bool[10] "dead after last mention" "temp"
    val _formal_type[1256001]:bool[10] "dead after last mention" "temp" "type variable"
    (1256009 'move' tmp[1255999] 0)
    (1256012 'move' _decEltRefCounts[1255995] tmp[1255999])
    (1256017 'move' ret[1255990] _decEltRefCounts[1255995])
    (1255993 return ret[1255990])
  }
  function init_default_pid[1255948]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255950]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1255955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255959]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1255961]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1255969 'move' tmp[1255959] -1)
    (1255972 'move' pid[1255955] tmp[1255959])
    (1255977 'move' ret[1255950] pid[1255955])
    (1255953 return ret[1255950])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017].init[1317821](const in arg this[1317825]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017], const in arg pid[1317831]:int(64)[13], const in arg _decEltRefCounts[1317837]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779335]:localesSignal[92278] "temp"
    val _formal_type_tmp_[1779333]:int(64)[13] "temp"
    val super_tmp[1317857]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temporary of super field" "temp"
    (1317859 'move' super_tmp[1317857](1317861 '.v' this[1317825] super[1318013]))
    (1317868 call init[1256028] super_tmp[1317857] pid[1317831] _decEltRefCounts[1317837])
    val tmp[1317875]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temp" "type variable"
    val call_tmp[1317894]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
    (1317896 'move' call_tmp[1317894](1317898 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1317825]))
    val chpl__thisAsParent[1317901]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "temp"
    (1317903 'move' chpl__thisAsParent[1317901](1318009 call chpl__initCopy[1256267] call_tmp[1317894]))
    (1317907 'setcid' chpl__thisAsParent[1317901])
    (1317914 'setcid' this[1317825])
    (1317916 return _void[55])
  }
  function init_default__decEltRefCounts[1317967]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317969]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1317974]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317978]:bool[10] "dead after last mention" "temp"
    val _formal_type[1317980]:bool[10] "dead after last mention" "temp" "type variable"
    (1317988 'move' tmp[1317978] 0)
    (1317991 'move' _decEltRefCounts[1317974] tmp[1317978])
    (1317996 'move' ret[1317969] _decEltRefCounts[1317974])
    (1317972 return ret[1317969])
  }
  function init_default_pid[1317927]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317929]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1317934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317938]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1317940]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1317948 'move' tmp[1317938] -1)
    (1317951 'move' pid[1317934] tmp[1317938])
    (1317956 'move' ret[1317929] pid[1317934])
    (1317932 return ret[1317929])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358560].init[1358364](const in arg this[1358368]:BaseRectangularArr(1,int(64),false,real(64))[1358560], const in arg pid[1358374]:int(64)[13], const in arg _decEltRefCounts[1358380]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779422]:real(64)[16] "temp"
    val _formal_type_tmp_[1779420]:int(64)[13] "temp"
    val super_tmp[1358400]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temporary of super field" "temp"
    (1358402 'move' super_tmp[1358400](1358404 '.v' this[1358368] super[1358556]))
    (1358411 call init[1256028] super_tmp[1358400] pid[1358374] _decEltRefCounts[1358380])
    val tmp[1358418]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temp" "type variable"
    val call_tmp[1358437]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
    (1358439 'move' call_tmp[1358437](1358441 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1358368]))
    val chpl__thisAsParent[1358444]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "temp"
    (1358446 'move' chpl__thisAsParent[1358444](1358552 call chpl__initCopy[1256267] call_tmp[1358437]))
    (1358450 'setcid' chpl__thisAsParent[1358444])
    (1358457 'setcid' this[1358368])
    (1358459 return _void[55])
  }
  function init_default__decEltRefCounts[1358510]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358512]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1358517]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358521]:bool[10] "dead after last mention" "temp"
    val _formal_type[1358523]:bool[10] "dead after last mention" "temp" "type variable"
    (1358531 'move' tmp[1358521] 0)
    (1358534 'move' _decEltRefCounts[1358517] tmp[1358521])
    (1358539 'move' ret[1358512] _decEltRefCounts[1358517])
    (1358515 return ret[1358512])
  }
  function init_default_pid[1358470]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358472]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1358477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358481]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1358483]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1358491 'move' tmp[1358481] -1)
    (1358494 'move' pid[1358477] tmp[1358481])
    (1358499 'move' ret[1358472] pid[1358477])
    (1358475 return ret[1358472])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368480].init[1368284](const in arg this[1368288]:BaseRectangularArr(1,int(64),false,int(64))[1368480], const in arg pid[1368294]:int(64)[13], const in arg _decEltRefCounts[1368300]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779458]:int(64)[13] "temp"
    val _formal_type_tmp_[1779456]:int(64)[13] "temp"
    val super_tmp[1368320]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temporary of super field" "temp"
    (1368322 'move' super_tmp[1368320](1368324 '.v' this[1368288] super[1368476]))
    (1368331 call init[1256028] super_tmp[1368320] pid[1368294] _decEltRefCounts[1368300])
    val tmp[1368338]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temp" "type variable"
    val call_tmp[1368357]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
    (1368359 'move' call_tmp[1368357](1368361 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1368288]))
    val chpl__thisAsParent[1368364]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "temp"
    (1368366 'move' chpl__thisAsParent[1368364](1368472 call chpl__initCopy[1256267] call_tmp[1368357]))
    (1368370 'setcid' chpl__thisAsParent[1368364])
    (1368377 'setcid' this[1368288])
    (1368379 return _void[55])
  }
  function init_default__decEltRefCounts[1368430]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368432]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1368437]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1368441]:bool[10] "dead after last mention" "temp"
    val _formal_type[1368443]:bool[10] "dead after last mention" "temp" "type variable"
    (1368451 'move' tmp[1368441] 0)
    (1368454 'move' _decEltRefCounts[1368437] tmp[1368441])
    (1368459 'move' ret[1368432] _decEltRefCounts[1368437])
    (1368435 return ret[1368432])
  }
  function init_default_pid[1368390]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368392]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1368397]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1368401]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1368403]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1368411 'move' tmp[1368401] -1)
    (1368414 'move' pid[1368397] tmp[1368401])
    (1368419 'move' ret[1368392] pid[1368397])
    (1368395 return ret[1368392])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1563521].init[1563325](const in arg this[1563329]:BaseRectangularArr(1,int(64),false,uint(64))[1563521], const in arg pid[1563335]:int(64)[13], const in arg _decEltRefCounts[1563341]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1779552]:uint(64)[115] "temp"
    val _formal_type_tmp_[1779550]:int(64)[13] "temp"
    val super_tmp[1563361]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temporary of super field" "temp"
    (1563363 'move' super_tmp[1563361](1563365 '.v' this[1563329] super[1563517]))
    (1563372 call init[1256028] super_tmp[1563361] pid[1563335] _decEltRefCounts[1563341])
    val tmp[1563379]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "temp" "type variable"
    val call_tmp[1563398]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
    (1563400 'move' call_tmp[1563398](1563402 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256238] this[1563329]))
    val chpl__thisAsParent[1563405]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "temp"
    (1563407 'move' chpl__thisAsParent[1563405](1563513 call chpl__initCopy[1256267] call_tmp[1563398]))
    (1563411 'setcid' chpl__thisAsParent[1563405])
    (1563418 'setcid' this[1563329])
    (1563420 return _void[55])
  }
  function init_default__decEltRefCounts[1563471]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1563473]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1563478]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1563482]:bool[10] "dead after last mention" "temp"
    val _formal_type[1563484]:bool[10] "dead after last mention" "temp" "type variable"
    (1563492 'move' tmp[1563482] 0)
    (1563495 'move' _decEltRefCounts[1563478] tmp[1563482])
    (1563500 'move' ret[1563473] _decEltRefCounts[1563478])
    (1563476 return ret[1563473])
  }
  function init_default_pid[1563431]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1563433]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1563438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1563442]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1563444]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1563452 'move' tmp[1563442] -1)
    (1563455 'move' pid[1563438] tmp[1563442])
    (1563460 'move' ret[1563433] pid[1563438])
    (1563436 return ret[1563433])
  }
  type BaseRectangularArr(1,int(64),false,locale)[1256291] val super[1256287]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "super class"
  type BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017] val super[1318013]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "super class"
  type BaseRectangularArr(1,int(64),false,real(64))[1358560] val super[1358556]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "super class"
  type BaseRectangularArr(1,int(64),false,int(64))[1368480] val super[1368476]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "super class"
  type BaseRectangularArr(1,int(64),false,uint(64))[1563521] val super[1563517]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "super class"
  function _delete_dist[150617](const in arg dist[150614]:BaseDist[145968], const in arg privatized[150620]:bool[10]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[1428363]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1428368 'move' coerce_tmp[1428363] dist[150614])
    (150630 call dsiDestroyDist[145894] coerce_tmp[1428363])
    const-val tmp[568698]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[568706]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (568708 'move' tmp[568706] privatized[150620])
    (568713 'move' tmp[568698] tmp[568706])
    const-val call_tmp[669632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (669635 'move' call_tmp[669632] tmp[568698])
    if call_tmp[669632]
    {
      ref call_tmp[669639]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1428376]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1428381 'move' coerce_tmp[1428376] dist[150614])
      (669642 'move' call_tmp[669639](150639 call pid[801324] coerce_tmp[1428376]))
      const-val coerce_tmp[1428384]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1428388 'move' coerce_tmp[1428384](1428386 'deref' call_tmp[669639]))
      val coerce_tmp[1428390]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1428396 'move' coerce_tmp[1428390](1428392 'cast' object[22] dist[150614]))
      (150644 call _freePrivatizedClass[1425383] coerce_tmp[1428384] coerce_tmp[1428390])
    }
    (150653 call chpl__delete[1428399] dist[150614])
    (520430 return _void[55])
  }
  function _delete_dom[1425263](const in arg dom[1425265]:BaseDom[146767], const in arg privatized[1425267]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1425362]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1425367 'move' coerce_tmp[1425362] dom[1425265])
    (1425277 call dsiDestroyDom[146689] coerce_tmp[1425362])
    const-val tmp[1425297]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1425315]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1425317 'move' tmp[1425315] privatized[1425267])
    (1425322 'move' tmp[1425297] tmp[1425315])
    const-val call_tmp[1425334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425336 'move' call_tmp[1425334] tmp[1425297])
    if call_tmp[1425334]
    {
      ref call_tmp[1425343]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1425375]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1425380 'move' coerce_tmp[1425375] dom[1425265])
      (1425345 'move' call_tmp[1425343](1425348 call pid[801512] coerce_tmp[1425375]))
      const-val coerce_tmp[1425716]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1425720 'move' coerce_tmp[1425716](1425718 'deref' call_tmp[1425343]))
      val coerce_tmp[1425722]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1425728 'move' coerce_tmp[1425722](1425724 'cast' object[22] dom[1425265]))
      (1425352 call _freePrivatizedClass[1425383] coerce_tmp[1425716] coerce_tmp[1425722])
    }
    (1425357 call chpl__delete[1427294] dom[1425265])
    (1425359 return _void[55])
  }
  function _delete_dom[1529542](const in arg dom[1529544]:domain(1,int(64),false)[1250953], const in arg privatized[1529546]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1529641]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1529646 'move' coerce_tmp[1529641](1529643 'cast' BaseDom[146767] dom[1529544]))
    (1529556 call dsiDestroyDom[146689] coerce_tmp[1529641])
    const-val tmp[1529576]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1529594]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1529596 'move' tmp[1529594] privatized[1529546])
    (1529601 'move' tmp[1529576] tmp[1529594])
    const-val call_tmp[1529613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1529615 'move' call_tmp[1529613] tmp[1529576])
    if call_tmp[1529613]
    {
      ref call_tmp[1529622]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1529654]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1529659 'move' coerce_tmp[1529654](1529656 'cast' BaseDom[146767] dom[1529544]))
      (1529624 'move' call_tmp[1529622](1529627 call pid[801512] coerce_tmp[1529654]))
      const-val coerce_tmp[1529662]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1529666 'move' coerce_tmp[1529662](1529664 'deref' call_tmp[1529622]))
      val coerce_tmp[1529668]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1529674 'move' coerce_tmp[1529668](1529670 'cast' object[22] dom[1529544]))
      (1529631 call _freePrivatizedClass[1425383] coerce_tmp[1529662] coerce_tmp[1529668])
    }
    (1529636 call chpl__delete[1529677] dom[1529544])
    (1529638 return _void[55])
  }
  function _delete_arr[1424135](const in arg arr[1424137]:BaseArr[149584], const in arg deinitElts[1424145]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1424248]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1424253 'move' coerce_tmp[1424248] arr[1424137])
    val _virtual_method_tmp_[1775342]:int(32)[95] "temp"
    (1775346 'move' _virtual_method_tmp_[1775342](1775344 'getcid' coerce_tmp[1424248]))
    (1424155 'virtual method call' dsiDestroyArr[149115] _virtual_method_tmp_[1775342] coerce_tmp[1424248] deinitElts[1424145])
    val coerce_tmp[1424257]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1424262 'move' coerce_tmp[1424257] arr[1424137])
    val _virtual_method_tmp_[1775349]:int(32)[95] "temp"
    (1775353 'move' _virtual_method_tmp_[1775349](1775351 'getcid' coerce_tmp[1424257]))
    (1424163 'virtual method call' decEltCountsIfNeeded[149578] _virtual_method_tmp_[1775349] coerce_tmp[1424257])
    (1424243 call chpl__delete[1424272] arr[1424137])
    (1424245 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[1288471](const in arg lhs[1288473]:domain(1,int(64),false)[1250953], const  ref arg rhs[1288475]:domain(1,int(64),false)[1252616]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val arrType[1288537]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289127]:BaseRectangularDom(1,int(64),false)[1250918] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289133 'move' coerce_tmp[1289127](1289129 'cast' BaseRectangularDom(1,int(64),false)[1250918] lhs[1288473]))
    const-val idxType[1288565]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289382]:BaseRectangularDom(1,int(64),false)[1250918] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289388 'move' coerce_tmp[1289382](1289384 'cast' BaseRectangularDom(1,int(64),false)[1250918] lhs[1288473]))
    {
      val _indexOfInterest[1288592]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288594]:_ic_these__ref_chpl__simpleSet_BaseArr[1290238] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288596]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1289394]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1289400 'move' coerce_tmp[1289394](1289396 'cast' BaseDom[146767] lhs[1288473]))
      (1288598 'move' call_tmp[1288596](1288601 call _arrs[801408] coerce_tmp[1289394]))
      (1288604 'move' _iterator[1288594](1288607 call _getIterator[1289403] call_tmp[1288596]))
      {
        val ret[1886817]:_ir_these__ref_chpl__simpleSet_BaseArr[1290244] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1886819]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1886821]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289664] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1886823]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead at end of block" "maybe param" "temp"
        ref this[1886965]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
        (1886970 'move' this[1886965](1886967 '.v' _iterator[1288594] F0_this[1985695]))
        (1886825 'move' call_tmp[1886823](1886828 call table[1265088] this[1886965]))
        const-val call_tmp[1886830]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1886832]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "temp"
        (1886835 call allSlots[1289573] call_tmp[1886823] ret_tmp[1886832])
        (1886838 'move' call_tmp[1886830] ret_tmp[1886832])
        (1886841 'move' _iterator[1886821](1886844 call _getIterator[1289679] call_tmp[1886830]))
        {
          val ret[1944305]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1944307]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1944309]:_ic__allSlots[1221619] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1944311]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
          ref this[1944605]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "temp"
          (1944610 'move' this[1944605](1944607 '.v' _iterator[1886821] F0_this[1986155]))
          (1944313 'move' call_tmp[1944311](1944316 call tableSize[1247887] this[1944605]))
          const-val call_tmp[1944318]:_ir__allSlots[1221625] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1944320]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1944322 'move' coerce_tmp[1944320](1944324 'deref' call_tmp[1944311]))
          const-val ret_tmp[1944326]:_ir__allSlots[1221625] "temp"
          (1944329 call _allSlots[201320] coerce_tmp[1944320] ret_tmp[1944326])
          (1944332 'move' call_tmp[1944318] ret_tmp[1944326])
          (1944335 'move' _iterator[1944309](1944338 call _getIterator[1221634] call_tmp[1944318]))
          {
            val ret[1944341]:_ir__allSlots[1221625] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1944343]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1944345]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1944347]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1944349]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
            const-val size[1944351]:int(64)[13] "temp"
            (1944353 'move' size[1944351](1944355 '.v' _iterator[1944309] F0_size[1973066]))
            (1944359 call chpl_direct_counted_range_iter[458034] 0 size[1944351] ret_tmp[1944349])
            (1944363 'move' call_tmp[1944347] ret_tmp[1944349])
            (1944366 'move' _iterator[1944345](1944369 call _getIterator[1103824] call_tmp[1944347]))
            {
              val ret[1944372]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1944374]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1944376]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1944378]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1944380]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
              const-val low[1944382]:int(64)[13] "temp"
              (1944384 'move' low[1944382](1944386 '.v' _iterator[1944345] F0_low[1976900]))
              const-val count[1944389]:int(64)[13] "temp"
              (1944391 'move' count[1944389](1944393 '.v' _iterator[1944345] F1_count[1976904]))
              (1944397 call chpl_direct_counted_range_iter_helper[1102117] low[1944382] count[1944389] ret_tmp[1944380])
              (1944401 'move' call_tmp[1944378] ret_tmp[1944380])
              (1944404 'move' _iterator[1944376](1944407 call _getIterator[1103574] call_tmp[1944378]))
              {
                val ret[1961672]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                val call_tmp[1961674]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1961676]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1961678]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1961680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1962182]:int(64)[13] "temp"
                (1962187 'move' count[1962182](1962184 '.v' _iterator[1944376] F1_count[1981376]))
                (1961682 'move' call_tmp[1961680](1961685 call <[948417] count[1962182]))
                (1961687 'move' tmp[1961678] call_tmp[1961680])
                (1961690 'move' tmp[1961676] call_tmp[1961680])
                const-val call_tmp[1961693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1961695 'move' call_tmp[1961693] call_tmp[1961680])
                if call_tmp[1961680]
                {
                  (1961701 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1961704]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1961706]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1961708]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1961710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1962189]:int(64)[13] "temp"
                (1962194 'move' count[1962189](1962191 '.v' _iterator[1944376] F1_count[1981376]))
                (1961712 'move' call_tmp[1961710](1961715 call ==[435666] count[1962189] 0))
                (1961718 'move' tmp[1961708] call_tmp[1961710])
                if call_tmp[1961710]
                {
                  const-val tmp[1961723]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1961725]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1961727]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1962196]:int(64)[13] "temp"
                  (1962201 'move' low[1962196](1962198 '.v' _iterator[1944376] F0_low[1981372]))
                  (1961729 'move' call_tmp[1961727](1961732 call _cast[956053] low[1962196]))
                  const-val call_tmp[1961734]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1961736]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1961738 'move' coerce_tmp[1961736](1961740 'cast' uint(64)[115] 1))
                  (1961743 'move' call_tmp[1961734](1961746 call -[962212] call_tmp[1961727]))
                  const-val call_tmp[1961748]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1961750 'move' call_tmp[1961748](1961753 call _cast[953562] call_tmp[1961734]))
                  const-val ret_tmp[1961755]:2*int(64)[1040075] "temp"
                  const-val low[1962203]:int(64)[13] "temp"
                  (1962208 'move' low[1962203](1962205 '.v' _iterator[1944376] F0_low[1981372]))
                  (1961758 call _build_tuple[1040033] low[1962203] call_tmp[1961748] ret_tmp[1961755])
                  (1961762 'move' tmp[1961723] ret_tmp[1961755])
                  (1961765 'move' tmp[1961706] tmp[1961723])
                }
                {
                  const-val tmp[1961769]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1961771]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1961773]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1962210]:int(64)[13] "temp"
                  (1962215 'move' count[1962210](1962212 '.v' _iterator[1944376] F1_count[1981376]))
                  (1961775 'move' call_tmp[1961773] count[1962210])
                  const-val call_tmp[1961778]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1962217]:int(64)[13] "temp"
                  (1962222 'move' count[1962217](1962219 '.v' _iterator[1944376] F1_count[1981376]))
                  (1961780 'move' call_tmp[1961778](1961783 call -[962245] count[1962217]))
                  const-val call_tmp[1961785]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1962224]:int(64)[13] "temp"
                  (1962229 'move' low[1962224](1962226 '.v' _iterator[1944376] F0_low[1981372]))
                  (1961787 'move' call_tmp[1961785](1961790 call +[439674] low[1962224] call_tmp[1961778]))
                  const-val ret_tmp[1961793]:2*int(64)[1040075] "temp"
                  const-val low[1962231]:int(64)[13] "temp"
                  (1962236 'move' low[1962231](1962233 '.v' _iterator[1944376] F0_low[1981372]))
                  (1961796 call _build_tuple[1040033] low[1962231] call_tmp[1961785] ret_tmp[1961793])
                  (1961800 'move' tmp[1961769] ret_tmp[1961793])
                  (1961803 'move' tmp[1961706] tmp[1961769])
                }
                (1961807 '=' tmp[1961704] tmp[1961706])
                (1961810 'noop')
                1
                ref call_tmp[1961812]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1961814 'move' call_tmp[1961812](1961816 '.' tmp[1961704] x0[1040071]))
                const-val start[1961819]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1961821]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1961823 'move' coerce_tmp[1961821](1961825 'deref' call_tmp[1961812]))
                (1961827 '=' start[1961819] coerce_tmp[1961821])
                (1961830 'noop')
                ref call_tmp[1961831]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1961833 'move' call_tmp[1961831](1961835 '.' tmp[1961704] x1[1040073]))
                const-val end[1961838]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1961840]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1961842 'move' coerce_tmp[1961840](1961844 'deref' call_tmp[1961831]))
                (1961846 '=' end[1961838] coerce_tmp[1961840])
                (1961849 'noop')
                val _indexOfInterest[1961850]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1961852]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1961854]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1961856]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                (1961859 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1961821] coerce_tmp[1961840] ret_tmp[1961856])
                (1961863 'move' call_tmp[1961854] ret_tmp[1961856])
                (1961866 'move' _iterator[1961852](1961869 call _getIterator[1103320] call_tmp[1961854]))
                {
                  val ret[1961872]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                  val call_tmp[1961874]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1961877 call chpl_range_check_stride[1102863])
                  val i[1961878]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1961880]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1961882 'move' i[1961878] 0)
                  val call_tmp[1961885]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1961887]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1961889]:int(64)[13] "temp"
                  (1961891 'move' low[1961889](1961893 '.v' _iterator[1961852] F0_low[1982870]))
                  (1961896 'move' default_arg_first[1961887](1961899 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1961889]))
                  const-val default_arg_last[1961901]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1961903]:int(64)[13] "temp"
                  (1961905 'move' high[1961903](1961907 '.v' _iterator[1961852] F1_high[1982874]))
                  (1961910 'move' default_arg_last[1961901](1961913 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1961903]))
                  const-val _return_tmp_[1961915]:bool[10] "dead after last mention" "temp"
                  const-val low[1961917]:int(64)[13] "temp"
                  (1961919 'move' low[1961917](1961921 '.v' _iterator[1961852] F0_low[1982870]))
                  const-val high[1961924]:int(64)[13] "temp"
                  (1961926 'move' high[1961924](1961928 '.v' _iterator[1961852] F1_high[1982874]))
                  (1961931 'move' _return_tmp_[1961915](1961934 call chpl_checkIfRangeIterWillOverflow[1096095] low[1961917] high[1961924] 1 default_arg_first[1961887] default_arg_last[1961901] 1))
                  CForLoop[1961941] hazard
                  {
                    const-val yret[1961970]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1961972 'move' yret[1961970] i[1961878])
                    const-val _yieldedIndex[1961975]:int(64)[13] "temp"
                    (1961977 'move' _yieldedIndex[1961975] i[1961878])
                    {
                      const-val i[1961981]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1961983 'move' i[1961981] _yieldedIndex[1961975])
                      const-val yret[1961986]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1961988 'move' yret[1961986] _yieldedIndex[1961975])
                      const-val _yieldedIndex[1962016]:int(64)[13] "temp"
                      (1962180 'move' _yieldedIndex[1962016] _yieldedIndex[1961975])
                      {
                        const-val i[1962018]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1962020 'move' i[1962018] _yieldedIndex[1962016])
                        const-val yret[1962023]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1962025 'move' yret[1962023] _yieldedIndex[1962016])
                        const-val _yieldedIndex[1962028]:int(64)[13] "temp"
                        (1962030 'move' _yieldedIndex[1962028] _yieldedIndex[1962016])
                        {
                          const-val slot[1962034]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1962036 'move' slot[1962034] _yieldedIndex[1962028])
                          const-val yret[1962039]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1962041 'move' yret[1962039] _yieldedIndex[1962028])
                          const-val _yieldedIndex[1962044]:int(64)[13] "temp"
                          (1962046 'move' _yieldedIndex[1962044] _yieldedIndex[1962028])
                          {
                            const-val slot[1962050]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1962052 'move' slot[1962050] _yieldedIndex[1962044])
                            const-val yret[1962055]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1962057 'move' yret[1962055] _yieldedIndex[1962044])
                            const-val _yieldedIndex[1962060]:int(64)[13] "temp"
                            (1962062 'move' _yieldedIndex[1962060] _yieldedIndex[1962044])
                            {
                              const-val slot[1962066]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1962068 'move' slot[1962066] _yieldedIndex[1962060])
                              ref call_tmp[1962071]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead after last mention" "maybe param" "temp"
                              ref this[1962073]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
                              (1962075 'move' this[1962073](1962077 '.v' _iterator[1288594] F0_this[1985695]))
                              (1962080 'move' call_tmp[1962071](1962083 call table[1265088] this[1962073]))
                              const-val call_tmp[1962085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1962087 'move' call_tmp[1962085](1962090 call isSlotFull[1290142] call_tmp[1962071] _yieldedIndex[1962060]))
                              const-val call_tmp[1962093]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1962095 'move' call_tmp[1962093] call_tmp[1962085])
                              if call_tmp[1962085]
                              {
                                val yret[1962100]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1962102]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead after last mention" "maybe param" "temp"
                                ref this[1962104]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
                                (1962106 'move' this[1962104](1962108 '.v' _iterator[1288594] F0_this[1985695]))
                                (1962111 'move' call_tmp[1962102](1962114 call table[1265088] this[1962104]))
                                ref call_tmp[1962116]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208499] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1962118]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208522] "dead after last mention" "temp"
                                (1962120 'move' _this_tmp_[1962118](1962123 call table[1247859] call_tmp[1962102]))
                                val coerce_tmp[1962125]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208513] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1962127 'move' coerce_tmp[1962125](1962129 'deref' _this_tmp_[1962118]))
                                (1962131 'move' call_tmp[1962116](1962134 call this[1250409] coerce_tmp[1962125] slot[1962066]))
                                ref call_tmp[1962137]:_ref(BaseArr)[1208336] "dead after last mention" "maybe param" "temp"
                                (1962139 'move' call_tmp[1962137](1962142 call key[1267273] call_tmp[1962116]))
                                val _yieldedIndex[1962144]:BaseArr[149584] "temp"
                                (1962146 'move' _yieldedIndex[1962144](1962148 'deref' call_tmp[1962137]))
                                {
                                  const e[1962151]:BaseArr[149584] "concurrently accessed" "const" "index var" "insert auto destroy"
                                  (1962153 'move' e[1962151] _yieldedIndex[1962144])
                                  {
                                    const-val tmp[1962157]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1962159]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1962161 'move' call_tmp[1962159](1962163 '_wide_get_locale' e[1962151]))
                                    (1962165 'move' tmp[1962157] call_tmp[1962159])
                                    val rvfDerefTmp[2049689]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "concurrently accessed" "temp"
                                    (2049692 'move' rvfDerefTmp[2049689] arrType[1288537])
                                    val rhs_data[2049695]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
                                    (2049697 call chpl__serialize[1770822] rhs[1288475] rhs_data[2049695])
                                    val isdirect[2058445]:bool[10] "temp"
                                    (2058450 'move' isdirect[2058445](2058447 call chpl_doDirectExecuteOn[187469] tmp[1962157]))
                                    if isdirect[2058445]
                                    {
                                      (2058454 call on_fn[1288647] e[1962151] rvfDerefTmp[2049689] rhs_data[2049695] idxType[1288565])
                                    }
                                    {
                                      val _args_foron_fn[2058478]:_class_localson_fn[2058464] "temp"
                                      (2058482 'move' _args_foron_fn[2058478](2058480 'stack allocate class' _class_localson_fn[2058464]))
                                      (2058484 '.=' _args_foron_fn[2058478] _0_tmp[2058467] tmp[1962157])
                                      (2058488 '.=' _args_foron_fn[2058478] _1_e[2058469] e[1962151])
                                      (2058492 '.=' _args_foron_fn[2058478] _2_rvfDerefTmp[2058471] rvfDerefTmp[2049689])
                                      (2058496 '.=' _args_foron_fn[2058478] _3_rhs_data[2058473] rhs_data[2049695])
                                      ref tmp[2058500]:int(64)[13] "temp"
                                      (2058504 'move' tmp[2058500](2058502 'set reference' idxType[1288565]))
                                      (2058506 '.=' _args_foron_fn[2058478] _4_idxType[2058475] tmp[2058500])
                                      val _args_vforon_fn[2058510]:c_void_ptr[149] "temp"
                                      (2058514 'move' _args_vforon_fn[2058510](2058512 'cast_to_void_star' _args_foron_fn[2058478]))
                                      val _args_sizeon_fn[2058516]:int(64)[13] "temp"
                                      (2058520 'move' _args_sizeon_fn[2058516](2058518 'sizeof_bundle' _class_localson_fn[2058464]))
                                      on(2058576 call wrapon_fn[2058522] tmp[1962157] _args_vforon_fn[2058510] _args_sizeon_fn[2058516] _args_foron_fn[2058478])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1962176]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1961943]:int(64)[13] "temp"
                      (1961945 'move' low[1961943](1961947 '.v' _iterator[1961852] F0_low[1982870]))
                      (1961950 '=' i[1961878] low[1961943])
                    }
                    {
                      const-val high[1961954]:int(64)[13] "temp"
                      (1961956 'move' high[1961954](1961958 '.v' _iterator[1961852] F1_high[1982874]))
                      (1961961 '<=' i[1961878] high[1961954])
                    }
                    {
                      val call_tmp[1961965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1961967 '+=' i[1961878] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1962004]
                }
                (1962007 call _freeIterator[1103493] _iterator[1961852])
                (1962010 call chpl__autoDestroy[1508492] tmp[1961704])
                label _endchpl_direct_counted_range_iter_helper[1962012]
              }
              (1944471 call _freeIterator[1103743] _iterator[1944376])
              label _endchpl_direct_counted_range_iter[1944473]
            }
            (1944476 call _freeIterator[1103993] _iterator[1944345])
            label _end_allSlots[1944478]
          }
          (1944481 call _freeIterator[1223163] _iterator[1944309])
          label _endallSlots[1944483]
        }
        (1886929 call _freeIterator[1290076] _iterator[1886821])
        label _endthese[1886931]
      }
      label _breakLabel[1288896]
      (1820726 call _freeIterator[1290422] _iterator[1288594])
    }
    const-val call_tmp[1288898]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810339]:1*range(int(64),bounded,false)[1244715] "temp"
    (1288906 call getIndices[1296792] rhs[1288475] ret_tmp[1810339])
    (1810342 'move' call_tmp[1288898] ret_tmp[1810339])
    (1288911 call dsiSetIndices[1251327] lhs[1288473] call_tmp[1288898])
    (1820728 call chpl__autoDestroy[1528835] call_tmp[1288898])
    {
      val _indexOfInterest[1288915]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288917]:_ic_these__ref_chpl__simpleSet_BaseArr[1290238] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288919]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1297609]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1297615 'move' coerce_tmp[1297609](1297611 'cast' BaseDom[146767] lhs[1288473]))
      (1288921 'move' call_tmp[1288919](1288924 call _arrs[801408] coerce_tmp[1297609]))
      (1288927 'move' _iterator[1288917](1288930 call _getIterator[1289403] call_tmp[1288919]))
      {
        val ret[1886987]:_ir_these__ref_chpl__simpleSet_BaseArr[1290244] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1886989]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1886991]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289664] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1886993]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead at end of block" "maybe param" "temp"
        ref this[1887167]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
        (1887172 'move' this[1887167](1887169 '.v' _iterator[1288917] F0_this[1985695]))
        (1886995 'move' call_tmp[1886993](1886998 call table[1265088] this[1887167]))
        const-val call_tmp[1887000]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1887002]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "temp"
        (1887005 call allSlots[1289573] call_tmp[1886993] ret_tmp[1887002])
        (1887008 'move' call_tmp[1887000] ret_tmp[1887002])
        (1887011 'move' _iterator[1886991](1887014 call _getIterator[1289679] call_tmp[1887000]))
        {
          val ret[1944613]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289670] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1944615]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1944617]:_ic__allSlots[1221619] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1944619]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
          ref this[1944945]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "temp"
          (1944950 'move' this[1944945](1944947 '.v' _iterator[1886991] F0_this[1986155]))
          (1944621 'move' call_tmp[1944619](1944624 call tableSize[1247887] this[1944945]))
          const-val call_tmp[1944626]:_ir__allSlots[1221625] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1944628]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1944630 'move' coerce_tmp[1944628](1944632 'deref' call_tmp[1944619]))
          const-val ret_tmp[1944634]:_ir__allSlots[1221625] "temp"
          (1944637 call _allSlots[201320] coerce_tmp[1944628] ret_tmp[1944634])
          (1944640 'move' call_tmp[1944626] ret_tmp[1944634])
          (1944643 'move' _iterator[1944617](1944646 call _getIterator[1221634] call_tmp[1944626]))
          {
            val ret[1944649]:_ir__allSlots[1221625] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1944651]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1944653]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1944655]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1944657]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
            const-val size[1944659]:int(64)[13] "temp"
            (1944661 'move' size[1944659](1944663 '.v' _iterator[1944617] F0_size[1973066]))
            (1944667 call chpl_direct_counted_range_iter[458034] 0 size[1944659] ret_tmp[1944657])
            (1944671 'move' call_tmp[1944655] ret_tmp[1944657])
            (1944674 'move' _iterator[1944653](1944677 call _getIterator[1103824] call_tmp[1944655]))
            {
              val ret[1944680]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1944682]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1944684]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1944686]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1944688]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
              const-val low[1944690]:int(64)[13] "temp"
              (1944692 'move' low[1944690](1944694 '.v' _iterator[1944653] F0_low[1976900]))
              const-val count[1944697]:int(64)[13] "temp"
              (1944699 'move' count[1944697](1944701 '.v' _iterator[1944653] F1_count[1976904]))
              (1944705 call chpl_direct_counted_range_iter_helper[1102117] low[1944690] count[1944697] ret_tmp[1944688])
              (1944709 'move' call_tmp[1944686] ret_tmp[1944688])
              (1944712 'move' _iterator[1944684](1944715 call _getIterator[1103574] call_tmp[1944686]))
              {
                val ret[1962239]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                val call_tmp[1962241]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1962243]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1962245]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1962247]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1962781]:int(64)[13] "temp"
                (1962786 'move' count[1962781](1962783 '.v' _iterator[1944684] F1_count[1981376]))
                (1962249 'move' call_tmp[1962247](1962252 call <[948417] count[1962781]))
                (1962254 'move' tmp[1962245] call_tmp[1962247])
                (1962257 'move' tmp[1962243] call_tmp[1962247])
                const-val call_tmp[1962260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1962262 'move' call_tmp[1962260] call_tmp[1962247])
                if call_tmp[1962247]
                {
                  (1962268 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1962271]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1962273]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1962275]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1962277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1962788]:int(64)[13] "temp"
                (1962793 'move' count[1962788](1962790 '.v' _iterator[1944684] F1_count[1981376]))
                (1962279 'move' call_tmp[1962277](1962282 call ==[435666] count[1962788] 0))
                (1962285 'move' tmp[1962275] call_tmp[1962277])
                if call_tmp[1962277]
                {
                  const-val tmp[1962290]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1962292]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1962294]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1962795]:int(64)[13] "temp"
                  (1962800 'move' low[1962795](1962797 '.v' _iterator[1944684] F0_low[1981372]))
                  (1962296 'move' call_tmp[1962294](1962299 call _cast[956053] low[1962795]))
                  const-val call_tmp[1962301]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1962303]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1962305 'move' coerce_tmp[1962303](1962307 'cast' uint(64)[115] 1))
                  (1962310 'move' call_tmp[1962301](1962313 call -[962212] call_tmp[1962294]))
                  const-val call_tmp[1962315]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1962317 'move' call_tmp[1962315](1962320 call _cast[953562] call_tmp[1962301]))
                  const-val ret_tmp[1962322]:2*int(64)[1040075] "temp"
                  const-val low[1962802]:int(64)[13] "temp"
                  (1962807 'move' low[1962802](1962804 '.v' _iterator[1944684] F0_low[1981372]))
                  (1962325 call _build_tuple[1040033] low[1962802] call_tmp[1962315] ret_tmp[1962322])
                  (1962329 'move' tmp[1962290] ret_tmp[1962322])
                  (1962332 'move' tmp[1962273] tmp[1962290])
                }
                {
                  const-val tmp[1962336]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1962338]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1962340]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1962809]:int(64)[13] "temp"
                  (1962814 'move' count[1962809](1962811 '.v' _iterator[1944684] F1_count[1981376]))
                  (1962342 'move' call_tmp[1962340] count[1962809])
                  const-val call_tmp[1962345]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1962816]:int(64)[13] "temp"
                  (1962821 'move' count[1962816](1962818 '.v' _iterator[1944684] F1_count[1981376]))
                  (1962347 'move' call_tmp[1962345](1962350 call -[962245] count[1962816]))
                  const-val call_tmp[1962352]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1962823]:int(64)[13] "temp"
                  (1962828 'move' low[1962823](1962825 '.v' _iterator[1944684] F0_low[1981372]))
                  (1962354 'move' call_tmp[1962352](1962357 call +[439674] low[1962823] call_tmp[1962345]))
                  const-val ret_tmp[1962360]:2*int(64)[1040075] "temp"
                  const-val low[1962830]:int(64)[13] "temp"
                  (1962835 'move' low[1962830](1962832 '.v' _iterator[1944684] F0_low[1981372]))
                  (1962363 call _build_tuple[1040033] low[1962830] call_tmp[1962352] ret_tmp[1962360])
                  (1962367 'move' tmp[1962336] ret_tmp[1962360])
                  (1962370 'move' tmp[1962273] tmp[1962336])
                }
                (1962374 '=' tmp[1962271] tmp[1962273])
                (1962377 'noop')
                1
                ref call_tmp[1962379]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1962381 'move' call_tmp[1962379](1962383 '.' tmp[1962271] x0[1040071]))
                const-val start[1962386]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1962388]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1962390 'move' coerce_tmp[1962388](1962392 'deref' call_tmp[1962379]))
                (1962394 '=' start[1962386] coerce_tmp[1962388])
                (1962397 'noop')
                ref call_tmp[1962398]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1962400 'move' call_tmp[1962398](1962402 '.' tmp[1962271] x1[1040073]))
                const-val end[1962405]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1962407]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1962409 'move' coerce_tmp[1962407](1962411 'deref' call_tmp[1962398]))
                (1962413 '=' end[1962405] coerce_tmp[1962407])
                (1962416 'noop')
                val _indexOfInterest[1962417]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1962419]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1962421]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1962423]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                (1962426 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1962388] coerce_tmp[1962407] ret_tmp[1962423])
                (1962430 'move' call_tmp[1962421] ret_tmp[1962423])
                (1962433 'move' _iterator[1962419](1962436 call _getIterator[1103320] call_tmp[1962421]))
                {
                  val ret[1962439]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                  val call_tmp[1962441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1962444 call chpl_range_check_stride[1102863])
                  val i[1962445]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1962447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1962449 'move' i[1962445] 0)
                  val call_tmp[1962452]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1962454]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1962456]:int(64)[13] "temp"
                  (1962458 'move' low[1962456](1962460 '.v' _iterator[1962419] F0_low[1982870]))
                  (1962463 'move' default_arg_first[1962454](1962466 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1962456]))
                  const-val default_arg_last[1962468]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1962470]:int(64)[13] "temp"
                  (1962472 'move' high[1962470](1962474 '.v' _iterator[1962419] F1_high[1982874]))
                  (1962477 'move' default_arg_last[1962468](1962480 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1962470]))
                  const-val _return_tmp_[1962482]:bool[10] "dead after last mention" "temp"
                  const-val low[1962484]:int(64)[13] "temp"
                  (1962486 'move' low[1962484](1962488 '.v' _iterator[1962419] F0_low[1982870]))
                  const-val high[1962491]:int(64)[13] "temp"
                  (1962493 'move' high[1962491](1962495 '.v' _iterator[1962419] F1_high[1982874]))
                  (1962498 'move' _return_tmp_[1962482](1962501 call chpl_checkIfRangeIterWillOverflow[1096095] low[1962484] high[1962491] 1 default_arg_first[1962454] default_arg_last[1962468] 1))
                  CForLoop[1962508] hazard
                  {
                    const-val yret[1962537]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1962539 'move' yret[1962537] i[1962445])
                    const-val _yieldedIndex[1962542]:int(64)[13] "temp"
                    (1962544 'move' _yieldedIndex[1962542] i[1962445])
                    {
                      const-val i[1962548]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1962550 'move' i[1962548] _yieldedIndex[1962542])
                      const-val yret[1962553]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1962555 'move' yret[1962553] _yieldedIndex[1962542])
                      const-val _yieldedIndex[1962583]:int(64)[13] "temp"
                      (1962779 'move' _yieldedIndex[1962583] _yieldedIndex[1962542])
                      {
                        const-val i[1962585]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1962587 'move' i[1962585] _yieldedIndex[1962583])
                        const-val yret[1962590]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1962592 'move' yret[1962590] _yieldedIndex[1962583])
                        const-val _yieldedIndex[1962595]:int(64)[13] "temp"
                        (1962597 'move' _yieldedIndex[1962595] _yieldedIndex[1962583])
                        {
                          const-val slot[1962601]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1962603 'move' slot[1962601] _yieldedIndex[1962595])
                          const-val yret[1962606]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1962608 'move' yret[1962606] _yieldedIndex[1962595])
                          const-val _yieldedIndex[1962611]:int(64)[13] "temp"
                          (1962613 'move' _yieldedIndex[1962611] _yieldedIndex[1962595])
                          {
                            const-val slot[1962617]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1962619 'move' slot[1962617] _yieldedIndex[1962611])
                            const-val yret[1962622]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1962624 'move' yret[1962622] _yieldedIndex[1962611])
                            const-val _yieldedIndex[1962627]:int(64)[13] "temp"
                            (1962629 'move' _yieldedIndex[1962627] _yieldedIndex[1962611])
                            {
                              const-val slot[1962633]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1962635 'move' slot[1962633] _yieldedIndex[1962627])
                              ref call_tmp[1962638]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead after last mention" "maybe param" "temp"
                              ref this[1962640]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
                              (1962642 'move' this[1962640](1962644 '.v' _iterator[1288917] F0_this[1985695]))
                              (1962647 'move' call_tmp[1962638](1962650 call table[1265088] this[1962640]))
                              const-val call_tmp[1962652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1962654 'move' call_tmp[1962652](1962657 call isSlotFull[1290142] call_tmp[1962638] _yieldedIndex[1962627]))
                              const-val call_tmp[1962660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1962662 'move' call_tmp[1962660] call_tmp[1962652])
                              if call_tmp[1962652]
                              {
                                val yret[1962667]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1962669]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208456] "dead after last mention" "maybe param" "temp"
                                ref this[1962671]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "temp"
                                (1962673 'move' this[1962671](1962675 '.v' _iterator[1288917] F0_this[1985695]))
                                (1962678 'move' call_tmp[1962669](1962681 call table[1265088] this[1962671]))
                                ref call_tmp[1962683]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208499] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1962685]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208522] "dead after last mention" "temp"
                                (1962687 'move' _this_tmp_[1962685](1962690 call table[1247859] call_tmp[1962669]))
                                val coerce_tmp[1962692]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208513] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1962694 'move' coerce_tmp[1962692](1962696 'deref' _this_tmp_[1962685]))
                                (1962698 'move' call_tmp[1962683](1962701 call this[1250409] coerce_tmp[1962692] slot[1962633]))
                                ref call_tmp[1962704]:_ref(BaseArr)[1208336] "dead after last mention" "maybe param" "temp"
                                (1962706 'move' call_tmp[1962704](1962709 call key[1267273] call_tmp[1962683]))
                                val _yieldedIndex[1962711]:BaseArr[149584] "temp"
                                (1962713 'move' _yieldedIndex[1962711](1962715 'deref' call_tmp[1962704]))
                                {
                                  const e[1962718]:BaseArr[149584] "const" "index var" "insert auto destroy"
                                  (1962720 'move' e[1962718] _yieldedIndex[1962711])
                                  {
                                    val call_tmp[1962724]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                    val call_tmp[1962726]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
                                    val coerce_tmp[1962728]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                    (1962730 'move' coerce_tmp[1962728] e[1962718])
                                    (1962733 'move' call_tmp[1962726](1962736 call _cast[1290735] coerce_tmp[1962728]))
                                    val eCastQ[1962738]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy"
                                    (1962740 'move' eCastQ[1962738](1962743 call chpl__initCopy[1290943] call_tmp[1962726]))
                                    val call_tmp[1962745]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
                                    (1962747 'move' call_tmp[1962745](1962750 call postfix![1296504] eCastQ[1962738]))
                                    val eCast[1962752]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy"
                                    (1962754 'move' eCast[1962752](1962757 call chpl__initCopy[1289360] call_tmp[1962745]))
                                    const-val tmp[1962759]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1962761]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1962763 'move' call_tmp[1962761](1962765 '_wide_get_locale' e[1962718]))
                                    (1962767 'move' tmp[1962759] call_tmp[1962761])
                                    val rvfDerefTmp[2049729]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "concurrently accessed" "temp"
                                    (2049732 'move' rvfDerefTmp[2049729] eCast[1962752])
                                    val isdirect[2058581]:bool[10] "temp"
                                    (2058586 'move' isdirect[2058581](2058583 call chpl_doDirectExecuteOn[187469] tmp[1962759]))
                                    if isdirect[2058581]
                                    {
                                      (2058590 call on_fn[1289006] rvfDerefTmp[2049729])
                                    }
                                    {
                                      val _args_foron_fn[2058605]:_class_localson_fn[2058597] "temp"
                                      (2058609 'move' _args_foron_fn[2058605](2058607 'stack allocate class' _class_localson_fn[2058597]))
                                      (2058611 '.=' _args_foron_fn[2058605] _0_tmp[2058600] tmp[1962759])
                                      (2058615 '.=' _args_foron_fn[2058605] _1_rvfDerefTmp[2058602] rvfDerefTmp[2049729])
                                      val _args_vforon_fn[2058619]:c_void_ptr[149] "temp"
                                      (2058623 'move' _args_vforon_fn[2058619](2058621 'cast_to_void_star' _args_foron_fn[2058605]))
                                      val _args_sizeon_fn[2058625]:int(64)[13] "temp"
                                      (2058629 'move' _args_sizeon_fn[2058625](2058627 'sizeof_bundle' _class_localson_fn[2058597]))
                                      on(2058661 call wrapon_fn[2058631] tmp[1962759] _args_vforon_fn[2058619] _args_sizeon_fn[2058625] _args_foron_fn[2058605])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1962775]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1962510]:int(64)[13] "temp"
                      (1962512 'move' low[1962510](1962514 '.v' _iterator[1962419] F0_low[1982870]))
                      (1962517 '=' i[1962445] low[1962510])
                    }
                    {
                      const-val high[1962521]:int(64)[13] "temp"
                      (1962523 'move' high[1962521](1962525 '.v' _iterator[1962419] F1_high[1982874]))
                      (1962528 '<=' i[1962445] high[1962521])
                    }
                    {
                      val call_tmp[1962532]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1962534 '+=' i[1962445] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1962571]
                }
                (1962574 call _freeIterator[1103493] _iterator[1962419])
                (1962577 call chpl__autoDestroy[1508492] tmp[1962271])
                label _endchpl_direct_counted_range_iter_helper[1962579]
              }
              (1944779 call _freeIterator[1103743] _iterator[1944684])
              label _endchpl_direct_counted_range_iter[1944781]
            }
            (1944784 call _freeIterator[1103993] _iterator[1944653])
            label _end_allSlots[1944786]
          }
          (1944789 call _freeIterator[1223163] _iterator[1944617])
          label _endallSlots[1944791]
        }
        (1887099 call _freeIterator[1290076] _iterator[1886991])
        label _endthese[1887101]
      }
      label _breakLabel[1289024]
      (1820734 call _freeIterator[1290422] _iterator[1288917])
    }
    (1289048 return _void[55])
  }
  function on_fn[935171](const in arg this[1781225]:BaseDist[145968], ref arg free_dist[1781227]:_ref(bool)[937218]) : void[4] "on" "resolved"
  {
    {
      val dom_count[145523]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543560 'move' dom_count[145523] -1)
      {
        {
          ref call_tmp[667462]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667465 'move' call_tmp[667462](360489 call _domsLock[801272] this[1781225]))
          (145533 call lock[187323] call_tmp[667462])
          ref call_tmp[667471]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
          (667474 'move' call_tmp[667471](385420 call _free_when_no_doms[801298] this[1781225]))
          (145538 call =[435212] call_tmp[667471] 1)
          ref call_tmp[667478]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "dead after last mention" "maybe param" "temp"
          (667481 'move' call_tmp[667478](360494 call _doms[801246] this[1781225]))
          const-val call_tmp[667485]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667488 'move' call_tmp[667485](145543 call size[1423080] call_tmp[667478]))
          (145546 call =[435365] dom_count[145523] call_tmp[667485])
          ref call_tmp[667492]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667495 'move' call_tmp[667492](360499 call _domsLock[801272] this[1781225]))
          (145554 call unlock[187415] call_tmp[667492])
        }
        (145558 'local block')
      }
      const-val call_tmp[667499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667502 'move' call_tmp[667499](145561 call ==[435666] dom_count[145523] 0))
      const-val call_tmp[667504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667507 'move' call_tmp[667504] call_tmp[667499])
      if call_tmp[667504]
      {
        (145565 call =[435212] free_dist[1781227] 1)
      }
    }
    (935178 return _void[55])
  }
  function on_fn[935180](const in arg this[1781229]:BaseDist[145968], const in arg x[1781231]:BaseDom[146767], ref arg count[1781233]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    {
      val cnt[145636]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543564 'move' cnt[145636] -1)
      {
        {
          ref call_tmp[667536]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667539 'move' call_tmp[667536](360504 call _domsLock[801272] this[1781229]))
          (145646 call lock[187323] call_tmp[667536])
          ref call_tmp[667545]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "dead after last mention" "maybe param" "temp"
          (667548 'move' call_tmp[667545](360509 call _doms[801246] this[1781229]))
          (145655 call remove[1419099] call_tmp[667545] x[1781231])
          ref call_tmp[667554]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208670] "dead after last mention" "maybe param" "temp"
          (667557 'move' call_tmp[667554](360514 call _doms[801246] this[1781229]))
          const-val call_tmp[667561]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667564 'move' call_tmp[667561](145659 call size[1423080] call_tmp[667554]))
          (145662 call =[435365] cnt[145636] call_tmp[667561])
          ref call_tmp[667568]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
          (667571 'move' call_tmp[667568](385435 call _free_when_no_doms[801298] this[1781229]))
          const-val call_tmp[667573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1423121]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1423125 'move' coerce_tmp[1423121](1423123 'deref' call_tmp[667568]))
          (667576 'move' call_tmp[667573](145666 call ![7494] coerce_tmp[1423121]))
          const-val call_tmp[667578]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (667581 'move' call_tmp[667578] call_tmp[667573])
          if call_tmp[667578]
          {
            (145670 call +=[451353] cnt[145636] 1)
          }
          ref call_tmp[667585]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667588 'move' call_tmp[667585](360519 call _domsLock[801272] this[1781229]))
          (145683 call unlock[187415] call_tmp[667585])
        }
        (145687 'local block')
      }
      (145690 call =[435365] count[1781233] cnt[145636])
    }
    (935187 return _void[55])
  }
  function on_fn[935198](const in arg this[1781235]:BaseDom[146767], ref arg free_dom[1781237]:_ref(bool)[937218], const in arg dist[1781239]:BaseDist[145968], ref arg remove_dist[1781241]:_ref(bool)[937218]) : void[4] "on" "resolved"
  {
    {
      val arr_count[146184]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543580 'move' arr_count[146184] 0)
      {
        {
          ref call_tmp[667684]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667687 'move' call_tmp[667684](360541 call _arrsLock[801460] this[1781235]))
          (146194 call lock[187323] call_tmp[667684])
          ref call_tmp[667693]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "maybe param" "temp"
          (667696 'move' call_tmp[667693](360546 call _arrs[801408] this[1781235]))
          const-val call_tmp[667700]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667703 'move' call_tmp[667700](146199 call size[1417892] call_tmp[667693]))
          (146202 call =[435365] arr_count[146184] call_tmp[667700])
          ref call_tmp[667707]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (667710 'move' call_tmp[667707](385480 call _arrs_containing_dom[801434] this[1781235]))
          const-val coerce_tmp[1419026]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1419030 'move' coerce_tmp[1419026](1419028 'deref' call_tmp[667707]))
          (146207 call +=[451353] arr_count[146184] coerce_tmp[1419026])
          ref call_tmp[667714]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
          (667717 'move' call_tmp[667714](385485 call _free_when_no_arrs[801486] this[1781235]))
          (146212 call =[435212] call_tmp[667714] 1)
          ref call_tmp[667721]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (667724 'move' call_tmp[667721](360551 call _arrsLock[801460] this[1781235]))
          (146220 call unlock[187415] call_tmp[667721])
        }
        (146224 'local block')
      }
      const-val call_tmp[667728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667731 'move' call_tmp[667728](146227 call ==[435666] arr_count[146184] 0))
      const-val call_tmp[667733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667736 'move' call_tmp[667733] call_tmp[667728])
      if call_tmp[667733]
      {
        (146231 call =[435212] free_dom[1781237] 1)
        const-val call_tmp[667740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val _virtual_method_tmp_[1775230]:int(32)[95] "temp"
        (1775234 'move' _virtual_method_tmp_[1775230](1775232 'getcid' this[1781235]))
        (667743 'move' call_tmp[667740](146237 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1775230] this[1781235]))
        const-val call_tmp[667745]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (667748 'move' call_tmp[667745] call_tmp[667740])
        if call_tmp[667745]
        {
          val call_tmp[667752]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
          (667755 'move' call_tmp[667752](146248 call _to_unmanaged[1419040] this[1781235]))
          const-val call_tmp[667757]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1419083]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[1781925]:BaseDist[145968] "temp"
          (1781928 'move' tmp[1781925] dist[1781239])
          (1419088 'move' coerce_tmp[1419083] tmp[1781925])
          (667760 'move' call_tmp[667757](146250 call remove_dom[145621] coerce_tmp[1419083] call_tmp[667752]))
          (146251 call =[435212] remove_dist[1781241] call_tmp[667757])
        }
      }
    }
    (935205 return _void[55])
  }
  function on_fn[1264798](const in arg this[1781571]:BaseDom[146767], const in arg x[1781573]:BaseArr[149584]) : void[4] "on" "resolved"
  {
    {
      {
        ref call_tmp[1264813]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
        (1264815 'move' call_tmp[1264813](1264818 call _arrsLock[801460] this[1781571]))
        (1264825 call lock[187323] call_tmp[1264813])
      }
      {
        ref call_tmp[1264836]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "maybe param" "temp"
        (1264838 'move' call_tmp[1264836](1264841 call _arrs[801408] this[1781571]))
        (1264848 call add[1264988] call_tmp[1264836] x[1781573])
      }
      {
        ref call_tmp[1264873]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
        (1264875 'move' call_tmp[1264873](1264878 call _arrsLock[801460] this[1781571]))
        (1264885 call unlock[187415] call_tmp[1264873])
      }
    }
    (1264887 return _void[55])
  }
  function on_fn[1288647](const in arg e[1781575]:BaseArr[149584], const in arg arrType[1781577]:BaseArrOverRectangularDom(1,int(64),false)[1256238], const in arg rhs[1781579]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125], const  ref arg idxType[1781581]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    val rhs[2049702]:domain(1,int(64),false)[1252616] "temp"
    ref rhs[2049703]:domain(1,int(64),false)[1252616] "temp"
    val ds_info[2049709]:_RuntimeTypeInfo[1253692]
    ref tmp[2049712]:domain(1,int(64),false)[1252616] "temp"
    (2049716 'move' tmp[2049712](2049714 'set reference' rhs[2049702]))
    (2049706 call chpl__deserialize[1771660] ds_info[2049709] rhs[1781579] tmp[2049712])
    (2049721 'move' rhs[2049703](2049719 'set reference' rhs[2049702]))
    {
      val call_tmp[1288653]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288659]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1290924]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1290929 'move' coerce_tmp[1290924] e[1781575])
      (1288661 'move' call_tmp[1288659](1288664 call _cast[1290735] coerce_tmp[1290924]))
      val eCastQ[1288667]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy"
      (1288669 'move' eCastQ[1288667](1291052 call chpl__initCopy[1290943] call_tmp[1288659]))
      const-val call_tmp[1288673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1291055]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1291060 'move' coerce_tmp[1291055](1291057 'cast' object[22] eCastQ[1288667]))
      (1288675 'move' call_tmp[1288673](1288678 call ==[1146] coerce_tmp[1291055] nil[44]))
      const-val call_tmp[1288681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1288683 'move' call_tmp[1288681] call_tmp[1288673])
      if call_tmp[1288681]
      {
        val call_tmp[1288690]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1288713 call halt[1291097] "internal error: " "borrowed domain(1,int(64),false)" " contains an bad array type " "unmanaged BaseArrOverRectangularDom(1,int(64),false)")
      }
      val call_tmp[1288721]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "maybe param" "temp"
      (1288723 'move' call_tmp[1288721](1288726 call postfix![1296504] eCastQ[1288667]))
      val eCast[1288728]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead at end of block" "insert auto destroy"
      (1288730 'move' eCast[1288728](1296775 call chpl__initCopy[1289360] call_tmp[1288721]))
      const-val call_tmp[1288734]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1810333]:1*range(int(64),bounded,false)[1244715] "temp"
      (1288742 call getIndices[1296792] rhs[2049703] ret_tmp[1810333])
      (1810336 'move' call_tmp[1288734] ret_tmp[1810333])
      const-val inds[1288743]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "insert auto destroy"
      (1288745 'move' inds[1288743] call_tmp[1288734])
      val tmp[1288749]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "insert auto destroy"
      val call_tmp[1288751]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288760]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val ret_tmp[1808919]:1*range(int(64),bounded,false)[1244715] "temp"
      (1297587 call _defaultOf[1251084] ret_tmp[1808919])
      (1808922 'move' tmp[1288749] ret_tmp[1808919])
      {
        const-val i[1288777]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1288779 'move' i[1288777] 0)
        {
          {
            ref call_tmp[1296971]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
            (1296973 'move' call_tmp[1296971](1297023 '.' inds[1288743] x0[1244713]))
            const-val from[1296978]:range(int(64),bounded,false)[1026833] "dead at end of block" "insert auto destroy"
            (1296980 'move' from[1296978](1297026 'deref' call_tmp[1296971]))
            ref call_tmp[1296986]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
            (1296988 'move' call_tmp[1296986](1297029 '.' tmp[1288749] x0[1244713]))
            val call_tmp[1296993]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1297002]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1810365]:range(int(64),bounded,false)[1026833] "temp"
            (1297010 call safeCast[1297036] from[1296978] ret_tmp[1810365])
            (1810368 'move' call_tmp[1297002] ret_tmp[1810365])
            (1297013 call =[1251569] call_tmp[1296986] call_tmp[1297002])
            (1820737 call chpl__autoDestroy[1508195] call_tmp[1297002])
            (1820740 call chpl__autoDestroy[1508195] from[1296978])
          }
        }
        label _continueLabel0[1296967]
        label _unused_continueLabel[1288877]
        label _breakLabel[1288879]
      }
      val coerce_tmp[1297578]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1297583 'move' coerce_tmp[1297578] eCast[1288728])
      val _virtual_method_tmp_[1775321]:int(32)[95] "temp"
      (1775325 'move' _virtual_method_tmp_[1775321](1775323 'getcid' coerce_tmp[1297578]))
      (1288885 'virtual method call' dsiReallocate[1297511] _virtual_method_tmp_[1775321] coerce_tmp[1297578] tmp[1288749])
      (1820744 call chpl__autoDestroy[1528835] tmp[1288749])
      (1820747 call chpl__autoDestroy[1528835] inds[1288743])
    }
    (2049723 call chpl__autoDestroy[1771579] rhs[1781579])
    (2049726 call chpl__autoDestroy[1530701] rhs[2049702])
    (1288890 return _void[55])
  }
  function on_fn[1289006](const in arg eCast[1781583]:BaseArrOverRectangularDom(1,int(64),false)[1256238]) : void[4] "on" "resolved"
  {
    val coerce_tmp[1297650]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1781985]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (1781988 'move' tmp[1781985] eCast[1781583])
    (1297655 'move' coerce_tmp[1297650] tmp[1781985])
    val _virtual_method_tmp_[1775328]:int(32)[95] "temp"
    (1775332 'move' _virtual_method_tmp_[1775328](1775330 'getcid' coerce_tmp[1297650]))
    (1289015 'virtual method call' dsiPostReallocate[1297638] _virtual_method_tmp_[1775328] coerce_tmp[1297650])
    (1289018 return _void[55])
  }
  function on_fn[1416588](const in arg this[1781679]:BaseDom[146767], const in arg x[1781681]:BaseArr[149584], ref arg count[1781683]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    {
      val cnt[1416601]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1416603 'move' cnt[1416601] -1)
      {
        {
          ref call_tmp[1416610]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (1416612 'move' call_tmp[1416610](1416615 call _arrsLock[801460] this[1781679]))
          (1416622 call lock[187323] call_tmp[1416610])
          {
            ref call_tmp[1416633]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "maybe param" "temp"
            (1416635 'move' call_tmp[1416633](1416638 call _arrs[801408] this[1781679]))
            (1416645 call remove[1416791] call_tmp[1416633] x[1781681])
          }
          ref call_tmp[1416661]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208370] "dead after last mention" "maybe param" "temp"
          (1416663 'move' call_tmp[1416661](1416666 call _arrs[801408] this[1781679]))
          const-val call_tmp[1416669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1416671 'move' call_tmp[1416669](1416674 call size[1417892] call_tmp[1416661]))
          (1416678 call =[435365] cnt[1416601] call_tmp[1416669])
          ref call_tmp[1416683]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1416685 'move' call_tmp[1416683](1416688 call _arrs_containing_dom[801434] this[1781679]))
          const-val coerce_tmp[1417933]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1417937 'move' coerce_tmp[1417933](1417935 'deref' call_tmp[1416683]))
          (1416692 call +=[451353] cnt[1416601] coerce_tmp[1417933])
          ref call_tmp[1416697]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
          (1416699 'move' call_tmp[1416697](1416702 call _free_when_no_arrs[801486] this[1781679]))
          const-val call_tmp[1416705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1417941]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1417945 'move' coerce_tmp[1417941](1417943 'deref' call_tmp[1416697]))
          (1416707 'move' call_tmp[1416705](1416710 call ![7494] coerce_tmp[1417941]))
          const-val call_tmp[1416712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1416714 'move' call_tmp[1416712] call_tmp[1416705])
          if call_tmp[1416712]
          {
            (1416722 call +=[451353] cnt[1416601] 1)
          }
          ref call_tmp[1416728]:_ref(chpl_LocalSpinlock)[941090] "dead after last mention" "maybe param" "temp"
          (1416730 'move' call_tmp[1416728](1416733 call _arrsLock[801460] this[1781679]))
          (1416740 call unlock[187415] call_tmp[1416728])
        }
        (1416608 'local block')
      }
      (1416742 call =[435365] count[1781683] cnt[1416601])
    }
    (1416748 return _void[55])
  }
  function wrapon_fn[2051406](const in arg dummy_locale_arg[2051408]:chpl_localeID_t[209352], in arg buf[2051410]:c_void_ptr[149], in arg buf_size[2051412]:int(64)[13], in arg c[2051414]:_class_localson_fn[2051360]) : void[4] "on block"
  {
    val _0_tmp[2051419]:chpl_localeID_t[209352] "temp"
    (2051424 'move' _0_tmp[2051419](2051421 '.v' c[2051414] _0_tmp[2051363]))
    val _1_this[2051426]:BaseDist[145968] "temp"
    (2051431 'move' _1_this[2051426](2051428 '.v' c[2051414] _1_this[2051365]))
    ref _2_free_dist[2051434]:bool[10] "temp"
    (2051439 'move' _2_free_dist[2051434](2051436 '.v' c[2051414] _2_free_dist[2051367]))
    (2051417 call on_fn[935171] _1_this[2051426] _2_free_dist[2051434])
    (2051442 return _void[55])
  }
  function wrapon_fn[2051519](const in arg dummy_locale_arg[2051521]:chpl_localeID_t[209352], in arg buf[2051523]:c_void_ptr[149], in arg buf_size[2051525]:int(64)[13], in arg c[2051527]:_class_localson_fn[2051467]) : void[4] "on block"
  {
    val _0_tmp[2051532]:chpl_localeID_t[209352] "temp"
    (2051537 'move' _0_tmp[2051532](2051534 '.v' c[2051527] _0_tmp[2051470]))
    val _1_this[2051539]:BaseDist[145968] "temp"
    (2051544 'move' _1_this[2051539](2051541 '.v' c[2051527] _1_this[2051472]))
    val _2_x[2051547]:BaseDom[146767] "temp"
    (2051552 'move' _2_x[2051547](2051549 '.v' c[2051527] _2_x[2051474]))
    ref _3_count[2051555]:int(64)[13] "temp"
    (2051560 'move' _3_count[2051555](2051557 '.v' c[2051527] _3_count[2051476]))
    (2051530 call on_fn[935180] _1_this[2051539] _2_x[2051547] _3_count[2051555])
    (2051563 return _void[55])
  }
  function wrapon_fn[2051653](const in arg dummy_locale_arg[2051655]:chpl_localeID_t[209352], in arg buf[2051657]:c_void_ptr[149], in arg buf_size[2051659]:int(64)[13], in arg c[2051661]:_class_localson_fn[2051589]) : void[4] "on block"
  {
    val _0_tmp[2051666]:chpl_localeID_t[209352] "temp"
    (2051671 'move' _0_tmp[2051666](2051668 '.v' c[2051661] _0_tmp[2051592]))
    val _1_this[2051673]:BaseDom[146767] "temp"
    (2051678 'move' _1_this[2051673](2051675 '.v' c[2051661] _1_this[2051594]))
    ref _2_free_dom[2051681]:bool[10] "temp"
    (2051686 'move' _2_free_dom[2051681](2051683 '.v' c[2051661] _2_free_dom[2051596]))
    val _3_rvfDerefTmp[2051689]:BaseDist[145968] "temp"
    (2051694 'move' _3_rvfDerefTmp[2051689](2051691 '.v' c[2051661] _3_rvfDerefTmp[2051598]))
    ref _4_remove_dist[2051697]:bool[10] "temp"
    (2051702 'move' _4_remove_dist[2051697](2051699 '.v' c[2051661] _4_remove_dist[2051600]))
    (2051664 call on_fn[935198] _1_this[2051673] _2_free_dom[2051681] _3_rvfDerefTmp[2051689] _4_remove_dist[2051697])
    (2051705 return _void[55])
  }
  function wrapon_fn[2058402](const in arg dummy_locale_arg[2058404]:chpl_localeID_t[209352], in arg buf[2058406]:c_void_ptr[149], in arg buf_size[2058408]:int(64)[13], in arg c[2058410]:_class_localson_fn[2058362]) : void[4] "on block"
  {
    val _0_tmp[2058415]:chpl_localeID_t[209352] "temp"
    (2058420 'move' _0_tmp[2058415](2058417 '.v' c[2058410] _0_tmp[2058365]))
    val _1_this[2058422]:BaseDom[146767] "temp"
    (2058427 'move' _1_this[2058422](2058424 '.v' c[2058410] _1_this[2058367]))
    val _2_x[2058430]:BaseArr[149584] "temp"
    (2058435 'move' _2_x[2058430](2058432 '.v' c[2058410] _2_x[2058369]))
    (2058413 call on_fn[1264798] _1_this[2058422] _2_x[2058430])
    (2058438 return _void[55])
  }
  function wrapon_fn[2058522](const in arg dummy_locale_arg[2058524]:chpl_localeID_t[209352], in arg buf[2058526]:c_void_ptr[149], in arg buf_size[2058528]:int(64)[13], in arg c[2058530]:_class_localson_fn[2058464]) : void[4] "on block"
  {
    val _0_tmp[2058535]:chpl_localeID_t[209352] "temp"
    (2058540 'move' _0_tmp[2058535](2058537 '.v' c[2058530] _0_tmp[2058467]))
    val _1_e[2058542]:BaseArr[149584] "temp"
    (2058547 'move' _1_e[2058542](2058544 '.v' c[2058530] _1_e[2058469]))
    val _2_rvfDerefTmp[2058550]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (2058555 'move' _2_rvfDerefTmp[2058550](2058552 '.v' c[2058530] _2_rvfDerefTmp[2058471]))
    val _3_rhs_data[2058558]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
    (2058563 'move' _3_rhs_data[2058558](2058560 '.v' c[2058530] _3_rhs_data[2058473]))
    ref _4_idxType[2058566]:int(64)[13] "temp"
    (2058571 'move' _4_idxType[2058566](2058568 '.v' c[2058530] _4_idxType[2058475]))
    (2058533 call on_fn[1288647] _1_e[2058542] _2_rvfDerefTmp[2058550] _3_rhs_data[2058558] _4_idxType[2058566])
    (2058574 return _void[55])
  }
  function wrapon_fn[2058631](const in arg dummy_locale_arg[2058633]:chpl_localeID_t[209352], in arg buf[2058635]:c_void_ptr[149], in arg buf_size[2058637]:int(64)[13], in arg c[2058639]:_class_localson_fn[2058597]) : void[4] "on block"
  {
    val _0_tmp[2058644]:chpl_localeID_t[209352] "temp"
    (2058649 'move' _0_tmp[2058644](2058646 '.v' c[2058639] _0_tmp[2058600]))
    val _1_rvfDerefTmp[2058651]:BaseArrOverRectangularDom(1,int(64),false)[1256238] "temp"
    (2058656 'move' _1_rvfDerefTmp[2058651](2058653 '.v' c[2058639] _1_rvfDerefTmp[2058602]))
    (2058642 call on_fn[1289006] _1_rvfDerefTmp[2058651])
    (2058659 return _void[55])
  }
  function wrapon_fn[2060483](const in arg dummy_locale_arg[2060485]:chpl_localeID_t[209352], in arg buf[2060487]:c_void_ptr[149], in arg buf_size[2060489]:int(64)[13], in arg c[2060491]:_class_localson_fn[2060431]) : void[4] "on block"
  {
    val _0_tmp[2060496]:chpl_localeID_t[209352] "temp"
    (2060501 'move' _0_tmp[2060496](2060498 '.v' c[2060491] _0_tmp[2060434]))
    val _1_this[2060503]:BaseDom[146767] "temp"
    (2060508 'move' _1_this[2060503](2060505 '.v' c[2060491] _1_this[2060436]))
    val _2_x[2060511]:BaseArr[149584] "temp"
    (2060516 'move' _2_x[2060511](2060513 '.v' c[2060491] _2_x[2060438]))
    ref _3_count[2060519]:int(64)[13] "temp"
    (2060524 'move' _3_count[2060519](2060521 '.v' c[2060491] _3_count[2060440]))
    (2060494 call on_fn[1416588] _1_this[2060503] _2_x[2060511] _3_count[2060519])
    (2060527 return _void[55])
  }
}