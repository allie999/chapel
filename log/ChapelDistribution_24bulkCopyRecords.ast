AST dump for ChapelDistribution after pass bulkCopyRecords.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  type _class_localson_fn[2042953] val _runtime_hdr[2042954]:chpl_comm_on_bundle_t[209301] val _0_tmp[2042956]:chpl_localeID_t[209294] val _1_this[2042958]:BaseDom[146725] val _2_x[2042960]:BaseArr[149541] ref _3_count[2042962]:int(64)[13]
  type _class_localson_fn[2041688] val _runtime_hdr[2041689]:chpl_comm_on_bundle_t[209301] val _0_tmp[2041691]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2041693]:BaseArrOverRectangularDom(1,int(64),false)[1256130]
  type _class_localson_fn[2041555] val _runtime_hdr[2041556]:chpl_comm_on_bundle_t[209301] val _0_tmp[2041558]:chpl_localeID_t[209294] val _1_e[2041560]:BaseArr[149541] val _2_rvfDerefTmp[2041562]:BaseArrOverRectangularDom(1,int(64),false)[1256130] val _3_rhs_data[2041564]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1755379] ref _4_idxType[2041566]:int(64)[13]
  type _class_localson_fn[2041453] val _runtime_hdr[2041454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2041456]:chpl_localeID_t[209294] val _1_this[2041458]:BaseDom[146725] val _2_x[2041460]:BaseArr[149541]
  type _class_localson_fn[2034680] val _runtime_hdr[2034681]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034683]:chpl_localeID_t[209294] val _1_this[2034685]:BaseDom[146725] ref _2_free_dom[2034687]:bool[10] val _3_rvfDerefTmp[2034689]:BaseDist[145926] ref _4_remove_dist[2034691]:bool[10]
  type _class_localson_fn[2034558] val _runtime_hdr[2034559]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034561]:chpl_localeID_t[209294] val _1_this[2034563]:BaseDist[145926] val _2_x[2034565]:BaseDom[146725] ref _3_count[2034567]:int(64)[13]
  type _class_localson_fn[2034451] val _runtime_hdr[2034452]:chpl_comm_on_bundle_t[209301] val _0_tmp[2034454]:chpl_localeID_t[209294] val _1_this[2034456]:BaseDist[145926] ref _2_free_dist[2034458]:bool[10]
  function chpl__init_ChapelDistribution[415895]() : void[4] "insert line file info" "module init" "resolved"
  {
    (520308 return _void[55])
  }
  function BaseDist[145926].deinit[145456](const in arg this[145928]:BaseDist[145926]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1771499]
    ref _field_destructor_tmp_[1771497]:_ref(chpl_LocalSpinlock)[940982] "temp"
    (1771504 'move' _field_destructor_tmp_[1771497](1771501 '.' this[145928] _domsLock[145439]))
    (1771506 call deinit[820305] _field_destructor_tmp_[1771497])
    ref _field_destructor_tmp_[1771509]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "temp"
    (1771514 'move' _field_destructor_tmp_[1771509](1771511 '.' this[145928] _doms[145434]))
    (1771516 call deinit[1582205] _field_destructor_tmp_[1771509])
    val _parent_destructor_tmp_[1771519]:object[22] "temp"
    (1771524 'move' _parent_destructor_tmp_[1771519](1771520 'cast' object[22] this[145928]))
    (1771526 call deinit[749290] _parent_destructor_tmp_[1771519])
    (519584 return _void[55])
  }
  function BaseDist[145926].remove[145463](const in arg this[145932]:BaseDist[145926]) : BaseDist[145926] "dont disable remote value forwarding" "method" "primary method" "resolved"
  {
    val ret[519588]:BaseDist[145926] "dead after last mention" "RVV" "temp"
    val free_dist[145469]:bool[10] "dead at end of block" "insert auto destroy"
    (543426 'move' free_dist[145469] 0)
    const-val call_tmp[667327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1759427]:int(32)[95] "temp"
    (1759431 'move' _virtual_method_tmp_[1759427](1759429 'getcid' this[145932]))
    (667330 'move' call_tmp[667327](145476 'virtual method call' dsiTrackDomains[145897] _virtual_method_tmp_[1759427] this[145932]))
    const-val call_tmp[667332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667335 'move' call_tmp[667332] call_tmp[667327])
    if call_tmp[667332]
    {
      const-val tmp[145534]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      const-val call_tmp[667337]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (667340 'move' call_tmp[667337](145531 '_wide_get_locale' this[145932]))
      (145536 'move' tmp[145534] call_tmp[667337])
      val isdirect[2034434]:bool[10] "temp"
      (2034439 'move' isdirect[2034434](2034436 call chpl_doDirectExecuteOn[187423] tmp[145534]))
      if isdirect[2034434]
      {
        (2034443 call on_fn[935063] this[145932] free_dist[145469])
      }
      {
        val _args_foron_fn[2034461]:_class_localson_fn[2034451] "temp"
        (2034465 'move' _args_foron_fn[2034461](2034463 'stack allocate class' _class_localson_fn[2034451]))
        (2034467 '.=' _args_foron_fn[2034461] _0_tmp[2034454] tmp[145534])
        (2034471 '.=' _args_foron_fn[2034461] _1_this[2034456] this[145932])
        ref tmp[2034475]:bool[10] "temp"
        (2034479 'move' tmp[2034475](2034477 'set reference' free_dist[145469]))
        (2034481 '.=' _args_foron_fn[2034461] _2_free_dist[2034458] tmp[2034475])
        val _args_vforon_fn[2034485]:c_void_ptr[149] "temp"
        (2034489 'move' _args_vforon_fn[2034485](2034487 'cast_to_void_star' _args_foron_fn[2034461]))
        val _args_sizeon_fn[2034491]:int(64)[13] "temp"
        (2034495 'move' _args_sizeon_fn[2034491](2034493 'sizeof_bundle' _class_localson_fn[2034451]))
        on(2034535 call wrapon_fn[2034497] tmp[145534] _args_vforon_fn[2034485] _args_sizeon_fn[2034491] _args_foron_fn[2034461])
      }
      {
      }
    }
    {
      (145545 call =[435085] free_dist[145469] 1)
    }
    const-val call_tmp[667396]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667399 'move' call_tmp[667396] free_dist[145469])
    if call_tmp[667396]
    {
      val call_tmp[667401]:BaseDist[145926] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (667404 'move' call_tmp[667401](145557 call _to_unmanaged[1474923] this[145932]))
      (519594 'move' ret[519588] call_tmp[667401])
      gotoReturn _end_remove[519586] _end_remove[519586]
    }
    {
      (519600 'move' ret[519588](1474970 'cast' BaseDist[145926] nil[44]))
      gotoReturn _end_remove[519586] _end_remove[519586]
    }
    label _end_remove[519586]
    (519590 return ret[519588])
  }
  function BaseDist[145926].remove_dom[145579](const in arg this[145936]:BaseDist[145926], const in arg x[145576]:BaseDom[146725]) : bool[10] "inline" "method" "primary method" "resolved"
  {
    val ret[519606]:bool[10] "dead after last mention" "RVV" "temp"
    val count[145585]:int(64)[13] "dead at end of block" "insert auto destroy"
    (543430 'move' count[145585] -1)
    const-val tmp[145654]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[667411]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (667414 'move' call_tmp[667411](145651 '_wide_get_locale' this[145936]))
    (145656 'move' tmp[145654] call_tmp[667411])
    val isdirect[2034540]:bool[10] "temp"
    (2034545 'move' isdirect[2034540](2034542 call chpl_doDirectExecuteOn[187423] tmp[145654]))
    if isdirect[2034540]
    {
      (2034549 call on_fn[935072] this[145936] x[145576] count[145585])
    }
    {
      val _args_foron_fn[2034570]:_class_localson_fn[2034558] "temp"
      (2034574 'move' _args_foron_fn[2034570](2034572 'stack allocate class' _class_localson_fn[2034558]))
      (2034576 '.=' _args_foron_fn[2034570] _0_tmp[2034561] tmp[145654])
      (2034580 '.=' _args_foron_fn[2034570] _1_this[2034563] this[145936])
      (2034584 '.=' _args_foron_fn[2034570] _2_x[2034565] x[145576])
      ref tmp[2034588]:int(64)[13] "temp"
      (2034592 'move' tmp[2034588](2034590 'set reference' count[145585]))
      (2034594 '.=' _args_foron_fn[2034570] _3_count[2034567] tmp[2034588])
      val _args_vforon_fn[2034598]:c_void_ptr[149] "temp"
      (2034602 'move' _args_vforon_fn[2034598](2034600 'cast_to_void_star' _args_foron_fn[2034570]))
      val _args_sizeon_fn[2034604]:int(64)[13] "temp"
      (2034608 'move' _args_sizeon_fn[2034604](2034606 'sizeof_bundle' _class_localson_fn[2034558]))
      on(2034656 call wrapon_fn[2034610] tmp[145654] _args_vforon_fn[2034598] _args_sizeon_fn[2034604] _args_foron_fn[2034570])
    }
    {
    }
    const-val call_tmp[667479]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667482 'move' call_tmp[667479](145664 call ==[435539] count[145585] 0))
    (1474323 'move' ret[519606] call_tmp[667479])
    gotoReturn _end_remove_dom[519604] _end_remove_dom[519604]
    label _end_remove_dom[519604]
    (519608 return ret[519606])
  }
  function BaseDist[145926].dsiDestroyDist[145852](const in arg this[145964]:BaseDist[145926]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519642 return _void[55])
  }
  function BaseDist[145926].dsiTrackDomains[145897](const in arg this[145976]:BaseDist[145926]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519657]:bool[10] "dead after last mention" "RVV" "temp"
    (519662 'move' ret[519657] 1)
    (519659 return ret[519657])
  }
  function BaseDist[145926].init[786700](const in arg this[786703]:BaseDist[145926], const  ref arg _doms[786714]:chpl__simpleSet(unmanaged BaseDom)[1208553], const  ref arg _domsLock[786729]:chpl_LocalSpinlock[187386], const in arg _free_when_no_doms[786742]:bool[10], const in arg pid[786755]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__doms[1208860]:chpl__simpleSet(unmanaged BaseDom)[1208553] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208866 'move' _formal_tmp__doms[1208860] _doms[786714])
    val _formal_tmp__domsLock[1208861]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208870 'move' _formal_tmp__domsLock[1208861] _domsLock[786729])
    val _formal_tmp__free_when_no_doms[1208862]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1208877 'move' _formal_tmp__free_when_no_doms[1208862](1208874 call chpl__initCopy[1034795] _free_when_no_doms[786742]))
    val _formal_tmp_pid[1208863]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1208883 'move' _formal_tmp_pid[1208863](1208880 call chpl__initCopy[955243] pid[786755]))
    val super_tmp[786772]:object[22] "dead after last mention" "temporary of super field" "temp"
    (786774 'move' super_tmp[786772](786771 '.v' this[786703] super[355564]))
    (786713 call init[749274] super_tmp[786772])
    val tmp[786777]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[786829]:object[22] "dead at end of block" "maybe param" "temp"
    (786832 'move' call_tmp[786829](786788 'cast' object[22] this[786703]))
    val chpl__thisAsParent[786785]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (786820 'move' chpl__thisAsParent[786785](1208889 call chpl__initCopy[945182] call_tmp[786829]))
    (786791 'setcid' chpl__thisAsParent[786785])
    (786793 '.=' this[786703] _doms[145434] _formal_tmp__doms[1208860])
    (786796 '.=' this[786703] _domsLock[145439] _formal_tmp__domsLock[1208861])
    (786799 '.=' this[786703] _free_when_no_doms[145444] _formal_tmp__free_when_no_doms[1208862])
    (786802 '.=' this[786703] pid[145450] _formal_tmp_pid[1208863])
    (786805 'setcid' this[786703])
    (786818 return _void[55])
  }
  function BaseDist[145926]._doms[801138](const in arg this[801142]:BaseDist[145926]) ref : _ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801152]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "dead after last mention" "RVV" "temp"
    ref call_tmp[801159]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "dead after last mention" "maybe param" "temp"
    (801162 'move' call_tmp[801159](801146 '.' this[801142] _doms[145434]))
    (801157 'move' ret[801152] call_tmp[801159])
    (801154 return ret[801152])
  }
  function BaseDist[145926]._domsLock[801164](const in arg this[801168]:BaseDist[145926]) ref : _ref(chpl_LocalSpinlock)[940982] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801178]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "RVV" "temp"
    ref call_tmp[801185]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
    (801188 'move' call_tmp[801185](801172 '.' this[801168] _domsLock[145439]))
    (801183 'move' ret[801178] call_tmp[801185])
    (801180 return ret[801178])
  }
  function BaseDist[145926]._free_when_no_doms[801190](const in arg this[801194]:BaseDist[145926]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801204]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[801211]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (801214 'move' call_tmp[801211](801198 '.' this[801194] _free_when_no_doms[145444]))
    (801209 'move' ret[801204] call_tmp[801211])
    (801206 return ret[801204])
  }
  function BaseDist[145926].pid[801216](const in arg this[801220]:BaseDist[145926]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801230]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[801237]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (801240 'move' call_tmp[801237](801224 '.' this[801220] pid[145450]))
    (801235 'move' ret[801230] call_tmp[801237])
    (801232 return ret[801230])
  }
  type BaseDist[145926] val super[355564]:object[22] "super class" val _doms[145434]:chpl__simpleSet(unmanaged BaseDom)[1208553] val _domsLock[145439]:chpl_LocalSpinlock[187386] val _free_when_no_doms[145444]:bool[10] val pid[145450]:int(64)[13]
  function BaseDom[146725].init[146022](const in arg this[146727]:BaseDom[146725]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[461598]:object[22] "dead after last mention" "temporary of super field" "temp"
    (461606 'move' super_tmp[461598](461599 '.v' this[146727] super[355568]))
    (461602 call init[749274] super_tmp[461598])
    val tmp[461533]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[667521]:object[22] "dead at end of block" "maybe param" "temp"
    (667524 'move' call_tmp[667521](461544 'cast' object[22] this[146727]))
    val chpl__thisAsParent[461541]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (543434 'move' chpl__thisAsParent[461541](1247352 call chpl__initCopy[945182] call_tmp[667521]))
    (461547 'setcid' chpl__thisAsParent[461541])
    val tmp[461550]:chpl__simpleSet(unmanaged BaseArr)[1208253] "dead after last mention" "temp"
    val call_tmp[667526]:chpl__simpleSet(unmanaged BaseArr)[1208253] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_table[1250717]:chpl__hashtable(unmanaged BaseArr,nothing)[1208339] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1792380]:chpl__hashtable(unmanaged BaseArr,nothing)[1208339] "temp"
    (1250719 call init_default_table[1247439] ret_tmp[1792380])
    (1792383 'move' default_arg_table[1250717] ret_tmp[1792380])
    (1247374 call init[1247379] tmp[461550] default_arg_table[1250717])
    (461557 '.=' this[146727] _arrs[145995] tmp[461550])
    val tmp[461561]:int(64)[13] "dead after last mention" "temp"
    (1250726 'move' tmp[461561] 0)
    (461566 '.=' this[146727] _arrs_containing_dom[146000] tmp[461561])
    val tmp[461570]:chpl_LocalSpinlock[187386] "dead after last mention" "temp"
    const-val default_arg_l[1250736]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1788783]:AtomicBool[45874] "temp"
    (1250738 call init_default_l[944739] ret_tmp[1788783])
    (1788786 'move' default_arg_l[1250736] ret_tmp[1788783])
    (1250728 call init[820232] tmp[461570] default_arg_l[1250736])
    (461575 '.=' this[146727] _arrsLock[146005] tmp[461570])
    val tmp[461579]:bool[10] "dead after last mention" "temp"
    (1250745 'move' tmp[461579] 0)
    (461584 '.=' this[146727] _free_when_no_arrs[146010] tmp[461579])
    val tmp[461589]:int(64)[13] "dead after last mention" "temp"
    (461592 'move' tmp[461589] -1)
    (461594 '.=' this[146727] pid[146016] tmp[461589])
    (461609 'setcid' this[146727])
    (519682 return _void[55])
  }
  function BaseDom[146725].deinit[146029](const in arg this[146731]:BaseDom[146725]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1771531]
    ref _field_destructor_tmp_[1771529]:_ref(chpl_LocalSpinlock)[940982] "temp"
    (1771536 'move' _field_destructor_tmp_[1771529](1771533 '.' this[146731] _arrsLock[146005]))
    (1771538 call deinit[820305] _field_destructor_tmp_[1771529])
    ref _field_destructor_tmp_[1771541]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
    (1771546 'move' _field_destructor_tmp_[1771541](1771543 '.' this[146731] _arrs[145995]))
    (1771548 call deinit[1579121] _field_destructor_tmp_[1771541])
    val _parent_destructor_tmp_[1771551]:object[22] "temp"
    (1771556 'move' _parent_destructor_tmp_[1771551](1771552 'cast' object[22] this[146731]))
    (1771558 call deinit[749290] _parent_destructor_tmp_[1771551])
    (519684 return _void[55])
  }
  function BaseDom[146725].dsiMyDist[146036](const in arg this[146735]:BaseDom[146725]) : BaseDist[145926] "method" "primary method" "resolved" "virtual"
  {
    val ret[519688]:BaseDist[145926] "dead after last mention" "RVV" "temp"
    (146059 call halt[154067] "internal error: dsiMyDist is not implemented")
    val ret[146064]:BaseDist[145926] "dead at end of block" "insert auto destroy" "unsafe"
    (1470161 'move' ret[146064](1470159 'cast' BaseDist[145926] nil[44]))
    (1470156 'move' ret[519688] ret[146064])
    gotoReturn _end_dsiMyDist[519686] _end_dsiMyDist[519686]
    label _end_dsiMyDist[519686]
    (519690 return ret[519688])
  }
  function BaseDom[146725].remove[146076](const in arg this[146739]:BaseDom[146725], ref arg _retArg[1787905]:_ref((unmanaged BaseDom?,unmanaged BaseDist?))[1470130]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[519700]:(unmanaged BaseDom?,unmanaged BaseDist?)[1470067] "dead after last mention" "RVV" "temp"
    val call_tmp[667533]:BaseDist[145926] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1759434]:int(32)[95] "temp"
    (1759438 'move' _virtual_method_tmp_[1759434](1759436 'getcid' this[146739]))
    (667536 'move' call_tmp[667533](146090 'virtual method call' dsiMyDist[146036] _virtual_method_tmp_[1759434] this[146739]))
    const-val call_tmp[667540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1470163]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1470168 'move' coerce_tmp[1470163] call_tmp[667533])
    const-val _virtual_method_tmp_[1759441]:int(32)[95] "temp"
    (1759445 'move' _virtual_method_tmp_[1759441](1759443 'getcid' coerce_tmp[1470163]))
    (667543 'move' call_tmp[667540](146097 'virtual method call' dsiTrackDomains[145897] _virtual_method_tmp_[1759441] coerce_tmp[1470163]))
    const-val call_tmp[667547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1759448]:int(32)[95] "temp"
    (1759452 'move' _virtual_method_tmp_[1759448](1759450 'getcid' this[146739]))
    (667550 'move' call_tmp[667547](146100 'virtual method call' dsiLinksDistribution[146637] _virtual_method_tmp_[1759448] this[146739]))
    const-val call_tmp[667552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667555 'move' call_tmp[667552](146101 call ==[938] call_tmp[667540] call_tmp[667547]))
    (146104 call assert[210257] call_tmp[667552])
    val ret_dom[146111]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1470174]:BaseDom[146725] "dead at end of block" "temp"
    (1470177 'move' init_coerce_tmp[1470174](1474504 'cast' BaseDom[146725] nil[44]))
    (543438 'move' ret_dom[146111] init_coerce_tmp[1470174])
    val ret_dist[146119]:BaseDist[145926] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1470180]:BaseDist[145926] "dead at end of block" "temp"
    (1470183 'move' init_coerce_tmp[1470180](1474508 'cast' BaseDist[145926] nil[44]))
    (543440 'move' ret_dist[146119] init_coerce_tmp[1470180])
    val call_tmp[667559]:BaseDist[145926] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1759455]:int(32)[95] "temp"
    (1759459 'move' _virtual_method_tmp_[1759455](1759457 'getcid' this[146739]))
    (667562 'move' call_tmp[667559](146125 'virtual method call' dsiMyDist[146036] _virtual_method_tmp_[1759455] this[146739]))
    val dist[146126]:BaseDist[145926] "dead at end of block" "insert auto destroy"
    (543442 'move' dist[146126](1470187 call chpl__initCopy[1470189] call_tmp[667559]))
    val free_dom[146131]:bool[10] "dead at end of block" "insert auto destroy"
    (543444 'move' free_dom[146131] 0)
    val remove_dist[146136]:bool[10] "dead at end of block" "insert auto destroy"
    (543446 'move' remove_dist[146136] 0)
    const-val tmp[146224]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[667564]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (667567 'move' call_tmp[667564](146221 '_wide_get_locale' this[146739]))
    (146226 'move' tmp[146224] call_tmp[667564])
    val rvfDerefTmp[2032115]:BaseDist[145926] "concurrently accessed" "temp"
    (2032118 'move' rvfDerefTmp[2032115] dist[146126])
    val isdirect[2034661]:bool[10] "temp"
    (2034666 'move' isdirect[2034661](2034663 call chpl_doDirectExecuteOn[187423] tmp[146224]))
    if isdirect[2034661]
    {
      (2034670 call on_fn[935090] this[146739] free_dom[146131] rvfDerefTmp[2032115] remove_dist[146136])
    }
    {
      val _args_foron_fn[2034694]:_class_localson_fn[2034680] "temp"
      (2034698 'move' _args_foron_fn[2034694](2034696 'stack allocate class' _class_localson_fn[2034680]))
      (2034700 '.=' _args_foron_fn[2034694] _0_tmp[2034683] tmp[146224])
      (2034704 '.=' _args_foron_fn[2034694] _1_this[2034685] this[146739])
      ref tmp[2034708]:bool[10] "temp"
      (2034712 'move' tmp[2034708](2034710 'set reference' free_dom[146131]))
      (2034714 '.=' _args_foron_fn[2034694] _2_free_dom[2034687] tmp[2034708])
      (2034718 '.=' _args_foron_fn[2034694] _3_rvfDerefTmp[2034689] rvfDerefTmp[2032115])
      ref tmp[2034722]:bool[10] "temp"
      (2034726 'move' tmp[2034722](2034724 'set reference' remove_dist[146136]))
      (2034728 '.=' _args_foron_fn[2034694] _4_remove_dist[2034691] tmp[2034722])
      val _args_vforon_fn[2034732]:c_void_ptr[149] "temp"
      (2034736 'move' _args_vforon_fn[2034732](2034734 'cast_to_void_star' _args_foron_fn[2034694]))
      val _args_sizeon_fn[2034738]:int(64)[13] "temp"
      (2034742 'move' _args_sizeon_fn[2034738](2034740 'sizeof_bundle' _class_localson_fn[2034680]))
      on(2034798 call wrapon_fn[2034744] tmp[146224] _args_vforon_fn[2034732] _args_sizeon_fn[2034738] _args_foron_fn[2034694])
    }
    {
    }
    const-val call_tmp[667649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667652 'move' call_tmp[667649] free_dom[146131])
    if call_tmp[667649]
    {
      val call_tmp[667654]:BaseDom[146725] "dead after last mention" "expr temp" "maybe param" "temp"
      (667657 'move' call_tmp[667654](146237 call _to_unmanaged[1470229] this[146739]))
      val coerce_tmp[1474327]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1474333 'move' coerce_tmp[1474327] call_tmp[667654])
      (146238 call =[1469187] ret_dom[146111] coerce_tmp[1474327])
    }
    const-val call_tmp[667659]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667662 'move' call_tmp[667659] remove_dist[146136])
    if call_tmp[667659]
    {
      val coerce_tmp[1474412]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1474418 'move' coerce_tmp[1474412] dist[146126])
      (146249 call =[1474377] ret_dist[146119] coerce_tmp[1474412])
    }
    const-val call_tmp[667664]:(unmanaged BaseDom?,unmanaged BaseDist?)[1470067] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1796228]:(unmanaged BaseDom?,unmanaged BaseDist?)[1470067] "temp"
    (146260 call _build_tuple[1474421] ret_dom[146111] ret_dist[146119] ret_tmp[1796228])
    (1796231 'move' call_tmp[667664] ret_tmp[1796228])
    val call_tmp[667669]:(unmanaged BaseDom?,unmanaged BaseDist?)[1470067] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1474513 'move' ret[519700] call_tmp[667664])
    gotoReturn _end_remove[519698] _end_remove[519698]
    label _end_remove[519698]
    (1787907 '=' _retArg[1787905] ret[519700])
    (1787909 return _void[55])
  }
  function BaseDom[146725].remove_arr[1467727](const in arg this[1467731]:BaseDom[146725], const in arg x[1467733]:BaseArr[149541]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1467743]:bool[10] "dead after last mention" "RVV" "temp"
    val count[1467756]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1467758 'move' count[1467756] -1)
    const-val tmp[1467762]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[1467764]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1467766 'move' call_tmp[1467764](1467768 '_wide_get_locale' this[1467731]))
    (1467770 'move' tmp[1467762] call_tmp[1467764])
    val isdirect[2042935]:bool[10] "temp"
    (2042940 'move' isdirect[2042935](2042937 call chpl_doDirectExecuteOn[187423] tmp[1467762]))
    if isdirect[2042935]
    {
      (2042944 call on_fn[1467777] this[1467731] x[1467733] count[1467756])
    }
    {
      val _args_foron_fn[2042965]:_class_localson_fn[2042953] "temp"
      (2042969 'move' _args_foron_fn[2042965](2042967 'stack allocate class' _class_localson_fn[2042953]))
      (2042971 '.=' _args_foron_fn[2042965] _0_tmp[2042956] tmp[1467762])
      (2042975 '.=' _args_foron_fn[2042965] _1_this[2042958] this[1467731])
      (2042979 '.=' _args_foron_fn[2042965] _2_x[2042960] x[1467733])
      ref tmp[2042983]:int(64)[13] "temp"
      (2042987 'move' tmp[2042983](2042985 'set reference' count[1467756]))
      (2042989 '.=' _args_foron_fn[2042965] _3_count[2042962] tmp[2042983])
      val _args_vforon_fn[2042993]:c_void_ptr[149] "temp"
      (2042997 'move' _args_vforon_fn[2042993](2042995 'cast_to_void_star' _args_foron_fn[2042965]))
      val _args_sizeon_fn[2042999]:int(64)[13] "temp"
      (2043003 'move' _args_sizeon_fn[2042999](2043001 'sizeof_bundle' _class_localson_fn[2042953]))
      on(2043051 call wrapon_fn[2043005] tmp[1467762] _args_vforon_fn[2042993] _args_sizeon_fn[2042999] _args_foron_fn[2042965])
    }
    {
    }
    const-val call_tmp[1467941]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1467943 'move' call_tmp[1467941](1467946 call ==[435539] count[1467756] 0))
    (1469143 'move' ret[1467743] call_tmp[1467941])
    gotoReturn _end_remove_arr[1467958] _end_remove_arr[1467958]
    label _end_remove_arr[1467958]
    (1467960 return ret[1467743])
  }
  function BaseDom[146725].add_arr[1264653](const in arg this[1264657]:BaseDom[146725], const in arg x[1264659]:BaseArr[149541]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1264675]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[1264677]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264679 'move' call_tmp[1264677](1264681 '_wide_get_locale' this[1264657]))
    (1264683 'move' tmp[1264675] call_tmp[1264677])
    val isdirect[2041436]:bool[10] "temp"
    (2041441 'move' isdirect[2041436](2041438 call chpl_doDirectExecuteOn[187423] tmp[1264675]))
    if isdirect[2041436]
    {
      (2041445 call on_fn[1264690] this[1264657] x[1264659])
    }
    {
      val _args_foron_fn[2041463]:_class_localson_fn[2041453] "temp"
      (2041467 'move' _args_foron_fn[2041463](2041465 'stack allocate class' _class_localson_fn[2041453]))
      (2041469 '.=' _args_foron_fn[2041463] _0_tmp[2041456] tmp[1264675])
      (2041473 '.=' _args_foron_fn[2041463] _1_this[2041458] this[1264657])
      (2041477 '.=' _args_foron_fn[2041463] _2_x[2041460] x[1264659])
      val _args_vforon_fn[2041481]:c_void_ptr[149] "temp"
      (2041485 'move' _args_vforon_fn[2041481](2041483 'cast_to_void_star' _args_foron_fn[2041463]))
      val _args_sizeon_fn[2041487]:int(64)[13] "temp"
      (2041491 'move' _args_sizeon_fn[2041487](2041489 'sizeof_bundle' _class_localson_fn[2041453]))
      on(2041531 call wrapon_fn[2041493] tmp[1264675] _args_vforon_fn[2041481] _args_sizeon_fn[2041487] _args_foron_fn[2041463])
    }
    {
    }
    (1264783 return _void[55])
  }
  function BaseDom[146725].dsiLinksDistribution[146637](const in arg this[146771]:BaseDom[146725]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519769]:bool[10] "dead after last mention" "RVV" "temp"
    (519774 'move' ret[519769] 1)
    (519771 return ret[519769])
  }
  function BaseDom[146725].dsiDestroyDom[146647](const in arg this[146775]:BaseDom[146725]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519776 return _void[55])
  }
  function BaseDom[146725]._arrs[801300](const in arg this[801304]:BaseDom[146725]) ref : _ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801314]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "RVV" "temp"
    ref call_tmp[801321]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "maybe param" "temp"
    (801324 'move' call_tmp[801321](801308 '.' this[801304] _arrs[145995]))
    (801319 'move' ret[801314] call_tmp[801321])
    (801316 return ret[801314])
  }
  function BaseDom[146725]._arrs_containing_dom[801326](const in arg this[801330]:BaseDom[146725]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801340]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[801347]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (801350 'move' call_tmp[801347](801334 '.' this[801330] _arrs_containing_dom[146000]))
    (801345 'move' ret[801340] call_tmp[801347])
    (801342 return ret[801340])
  }
  function BaseDom[146725]._arrsLock[801352](const in arg this[801356]:BaseDom[146725]) ref : _ref(chpl_LocalSpinlock)[940982] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801366]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "RVV" "temp"
    ref call_tmp[801373]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
    (801376 'move' call_tmp[801373](801360 '.' this[801356] _arrsLock[146005]))
    (801371 'move' ret[801366] call_tmp[801373])
    (801368 return ret[801366])
  }
  function BaseDom[146725]._free_when_no_arrs[801378](const in arg this[801382]:BaseDom[146725]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801392]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[801399]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (801402 'move' call_tmp[801399](801386 '.' this[801382] _free_when_no_arrs[146010]))
    (801397 'move' ret[801392] call_tmp[801399])
    (801394 return ret[801392])
  }
  function BaseDom[146725].pid[801404](const in arg this[801408]:BaseDom[146725]) ref : _ref(int(64))[936483] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801418]:_ref(int(64))[936483] "dead after last mention" "RVV" "temp"
    ref call_tmp[801425]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
    (801428 'move' call_tmp[801425](801412 '.' this[801408] pid[146016]))
    (801423 'move' ret[801418] call_tmp[801425])
    (801420 return ret[801418])
  }
  type BaseDom[146725] val super[355568]:object[22] "super class" val _arrs[145995]:chpl__simpleSet(unmanaged BaseArr)[1208253] val _arrs_containing_dom[146000]:int(64)[13] val _arrsLock[146005]:chpl_LocalSpinlock[187386] val _free_when_no_arrs[146010]:bool[10] val pid[146016]:int(64)[13]
  function BaseRectangularDom(1,int(64),false)[1250810].deinit[1720686](const in arg this[1720690]:BaseRectangularDom(1,int(64),false)[1250810]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773302]
    val _parent_destructor_tmp_[1773297]:BaseDom[146725] "temp"
    (1773304 'move' _parent_destructor_tmp_[1773297](1773298 'cast' BaseDom[146725] this[1720690]))
    (1773306 call deinit[146029] _parent_destructor_tmp_[1773297])
    (1720696 return _void[55])
  }
  function BaseRectangularDom(1,int(64),false)[1250810].init[1247241](const in arg this[1247245]:BaseRectangularDom(1,int(64),false)[1250810]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763442]:int(64)[13] "temp"
    val super_tmp[1247261]:BaseDom[146725] "dead after last mention" "temporary of super field" "temp"
    (1247263 'move' super_tmp[1247261](1247265 '.v' this[1247245] super[1250800]))
    (1247272 call init[146022] super_tmp[1247261])
    val tmp[1247274]:BaseDom[146725] "dead after last mention" "temp" "type variable"
    val call_tmp[1247293]:BaseDom[146725] "dead at end of block" "maybe param" "temp"
    (1247295 'move' call_tmp[1247293](1247297 'cast' BaseDom[146725] this[1247245]))
    val chpl__thisAsParent[1247300]:BaseDom[146725] "dead at end of block" "insert auto destroy" "temp"
    (1247302 'move' chpl__thisAsParent[1247300](1250748 call chpl__initCopy[1250750] call_tmp[1247293]))
    (1247306 'setcid' chpl__thisAsParent[1247300])
    (1247338 'setcid' this[1247245])
    (1247340 return _void[55])
  }
  type BaseRectangularDom(1,int(64),false)[1250810] val super[1250800]:BaseDom[146725] "super class"
  function BaseArr[149541].deinit[148882](const in arg this[149559]:BaseArr[149541]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1771566]
    val _parent_destructor_tmp_[1771561]:object[22] "temp"
    (1771568 'move' _parent_destructor_tmp_[1771561](1771562 'cast' object[22] this[149559]))
    (1771570 call deinit[749290] _parent_destructor_tmp_[1771561])
    (520128 return _void[55])
  }
  function BaseArr[149541].dsiGetBaseDom[148901](const in arg this[149567]:BaseArr[149541]) : BaseDom[146725] "method" "primary method" "resolved" "virtual"
  {
    val ret[520141]:BaseDom[146725] "dead after last mention" "RVV" "temp"
    (148924 call halt[154067] "internal error: dsiGetBaseDom is not implemented")
    val ret[148929]:BaseDom[146725] "dead at end of block" "insert auto destroy" "unsafe"
    (1467643 'move' ret[148929](1467641 'cast' BaseDom[146725] nil[44]))
    (1467638 'move' ret[520141] ret[148929])
    gotoReturn _end_dsiGetBaseDom[520139] _end_dsiGetBaseDom[520139]
    label _end_dsiGetBaseDom[520139]
    (520143 return ret[520141])
  }
  function BaseArr[149541].remove[1467494](const in arg this[1467498]:BaseArr[149541], ref arg _retArg[1796134]:_ref((BaseArr,unmanaged BaseDom?))[1469363]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1467502]:(BaseArr,unmanaged BaseDom?)[1469273] "dead after last mention" "RVV" "temp"
    val ret_arr[1467510]:BaseArr[149541] "dead at end of block" "insert auto destroy"
    (1467512 'move' ret_arr[1467510](1467615 call chpl__initCopy[1256070] this[1467498]))
    val ret_dom[1467516]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1467628]:BaseDom[146725] "dead at end of block" "temp"
    (1467631 'move' init_coerce_tmp[1467628](1469413 'cast' BaseDom[146725] nil[44]))
    (1467518 'move' ret_dom[1467516] init_coerce_tmp[1467628])
    val rm_dom[1467523]:bool[10] "dead at end of block" "insert auto destroy"
    (1467525 'move' rm_dom[1467523] 0)
    val call_tmp[1467529]:BaseDom[146725] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1759567]:int(32)[95] "temp"
    (1759571 'move' _virtual_method_tmp_[1759567](1759569 'getcid' this[1467498]))
    (1467531 'move' call_tmp[1467529](1467537 'virtual method call' dsiGetBaseDom[148901] _virtual_method_tmp_[1759567] this[1467498]))
    val dom[1467538]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    (1467540 'move' dom[1467538](1467645 call chpl__initCopy[1467647] call_tmp[1467529]))
    val call_tmp[1467544]:BaseArr[149541] "dead after last mention" "expr temp" "maybe param" "temp"
    (1467546 'move' call_tmp[1467544](1467549 call _to_unmanaged[1467666] this[1467498]))
    const-val call_tmp[1467551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1467962]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1467967 'move' coerce_tmp[1467962] dom[1467538])
    (1467553 'move' call_tmp[1467551](1467559 call remove_arr[1467727] coerce_tmp[1467962] call_tmp[1467544]))
    (1467563 call =[435085] rm_dom[1467523] call_tmp[1467551])
    const-val call_tmp[1467569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1467571 'move' call_tmp[1467569] rm_dom[1467523])
    if call_tmp[1467569]
    {
      val coerce_tmp[1469222]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1469228 'move' coerce_tmp[1469222] dom[1467538])
      (1467579 call =[1469187] ret_dom[1467516] coerce_tmp[1469222])
    }
    const-val call_tmp[1467586]:(BaseArr,unmanaged BaseDom?)[1469273] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1796152]:(BaseArr,unmanaged BaseDom?)[1469273] "temp"
    (1467591 call _build_tuple[1469231] ret_arr[1467510] ret_dom[1467516] ret_tmp[1796152])
    (1796155 'move' call_tmp[1467586] ret_tmp[1796152])
    (1467594 'move' ret[1467502] call_tmp[1467586])
    gotoReturn _end_remove[1467603] _end_remove[1467603]
    label _end_remove[1467603]
    (1796136 '=' _retArg[1796134] ret[1467502])
    (1796138 return _void[55])
  }
  function BaseArr[149541].dsiDestroyArr[149072](const in arg this[149583]:BaseArr[149541], const in arg deinitElts[149069]:bool[10]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (149093 call halt[154067] "dsiDestroyArr must be defined")
    (520166 return _void[55])
  }
  function BaseArr[149541].decEltCountsIfNeeded[149535](const in arg this[149663]:BaseArr[149541]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (520248 return _void[55])
  }
  function BaseArr[149541]._decEltRefCounts[806591](const in arg this[806595]:BaseArr[149541]) ref : _ref(bool)[937110] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[806605]:_ref(bool)[937110] "dead after last mention" "RVV" "temp"
    ref call_tmp[806612]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    (806615 'move' call_tmp[806612](806599 '.' this[806595] _decEltRefCounts[148836]))
    (806610 'move' ret[806605] call_tmp[806612])
    (806607 return ret[806605])
  }
  function BaseArr[149541].init[806617](const in arg this[806620]:BaseArr[149541], const in arg pid[806631]:int(64)[13], const in arg _decEltRefCounts[806646]:bool[10]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_pid[1256043]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1256050 'move' _formal_tmp_pid[1256043](1256047 call chpl__initCopy[955243] pid[806631]))
    val _formal_tmp__decEltRefCounts[1256044]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1256056 'move' _formal_tmp__decEltRefCounts[1256044](1256053 call chpl__initCopy[1034795] _decEltRefCounts[806646]))
    val super_tmp[806663]:object[22] "dead after last mention" "temporary of super field" "temp"
    (806665 'move' super_tmp[806663](806662 '.v' this[806620] super[355576]))
    (806630 call init[749274] super_tmp[806663])
    val tmp[806668]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[806713]:object[22] "dead at end of block" "maybe param" "temp"
    (806716 'move' call_tmp[806713](806679 'cast' object[22] this[806620]))
    val chpl__thisAsParent[806676]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (806704 'move' chpl__thisAsParent[806676](1256062 call chpl__initCopy[945182] call_tmp[806713]))
    (806682 'setcid' chpl__thisAsParent[806676])
    (806684 '.=' this[806620] pid[148830] _formal_tmp_pid[1256043])
    (806687 '.=' this[806620] _decEltRefCounts[148836] _formal_tmp__decEltRefCounts[1256044])
    (806690 'setcid' this[806620])
    (806702 return _void[55])
  }
  type BaseArr[149541] val super[355576]:object[22] "super class" val pid[148830]:int(64)[13] val _decEltRefCounts[148836]:bool[10]
  function BaseArrOverRectangularDom(1,int(64),false)[1256130].dsiReallocate[1297403](const in arg this[1297407]:BaseArrOverRectangularDom(1,int(64),false)[1256130], const  ref arg bounds[1297447]:1*range(int(64),bounded,false)[1244607]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (1297466 call halt[154067] "reallocating not supported for this array type")
    (1297468 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256130].dsiPostReallocate[1297530](const in arg this[1297534]:BaseArrOverRectangularDom(1,int(64),false)[1256130]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1297540 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256130].deinit[1720747](const in arg this[1720751]:BaseArrOverRectangularDom(1,int(64),false)[1256130]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773314]
    val _parent_destructor_tmp_[1773309]:BaseArr[149541] "temp"
    (1773316 'move' _parent_destructor_tmp_[1773309](1773310 'cast' BaseArr[149541] this[1720751]))
    (1773318 call deinit[148882] _parent_destructor_tmp_[1773309])
    (1720757 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256130].init[1255920](const in arg this[1255924]:BaseArrOverRectangularDom(1,int(64),false)[1256130], const in arg pid[1255930]:int(64)[13], const in arg _decEltRefCounts[1255936]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763487]:int(64)[13] "temp"
    val super_tmp[1255952]:BaseArr[149541] "dead after last mention" "temporary of super field" "temp"
    (1255954 'move' super_tmp[1255952](1255956 '.v' this[1255924] super[1256120]))
    (1255963 call init[806617] super_tmp[1255952] pid[1255930] _decEltRefCounts[1255936])
    val tmp[1255967]:BaseArr[149541] "dead after last mention" "temp" "type variable"
    val call_tmp[1255986]:BaseArr[149541] "dead at end of block" "maybe param" "temp"
    (1255988 'move' call_tmp[1255986](1255990 'cast' BaseArr[149541] this[1255924]))
    val chpl__thisAsParent[1255993]:BaseArr[149541] "dead at end of block" "insert auto destroy" "temp"
    (1255995 'move' chpl__thisAsParent[1255993](1256068 call chpl__initCopy[1256070] call_tmp[1255986]))
    (1255999 'setcid' chpl__thisAsParent[1255993])
    (1256031 'setcid' this[1255924])
    (1256033 return _void[55])
  }
  type BaseArrOverRectangularDom(1,int(64),false)[1256130] val super[1256120]:BaseArr[149541] "super class"
  function BaseRectangularArr(1,int(64),false,locale)[1256183].deinit[1720759](const in arg this[1720763]:BaseRectangularArr(1,int(64),false,locale)[1256183]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773326]
    val _parent_destructor_tmp_[1773321]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1773328 'move' _parent_destructor_tmp_[1773321](1773322 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1720763]))
    (1773330 call deinit[1720747] _parent_destructor_tmp_[1773321])
    (1720769 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909].deinit[1720783](const in arg this[1720787]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773390]
    val _parent_destructor_tmp_[1773385]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1773392 'move' _parent_destructor_tmp_[1773385](1773386 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1720787]))
    (1773394 call deinit[1720747] _parent_destructor_tmp_[1773385])
    (1720793 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358452].deinit[1720807](const in arg this[1720811]:BaseRectangularArr(1,int(64),false,real(64))[1358452]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773454]
    val _parent_destructor_tmp_[1773449]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1773456 'move' _parent_destructor_tmp_[1773449](1773450 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1720811]))
    (1773458 call deinit[1720747] _parent_destructor_tmp_[1773449])
    (1720817 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368375].deinit[1720831](const in arg this[1720835]:BaseRectangularArr(1,int(64),false,int(64))[1368375]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773518]
    val _parent_destructor_tmp_[1773513]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1773520 'move' _parent_destructor_tmp_[1773513](1773514 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1720835]))
    (1773522 call deinit[1720747] _parent_destructor_tmp_[1773513])
    (1720841 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1423773].deinit[1720855](const in arg this[1720859]:BaseRectangularArr(1,int(64),false,uint(64))[1423773]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1773582]
    val _parent_destructor_tmp_[1773577]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1773584 'move' _parent_destructor_tmp_[1773577](1773578 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1720859]))
    (1773586 call deinit[1720747] _parent_destructor_tmp_[1773577])
    (1720865 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256183].decEltCountsIfNeeded[1725734](const in arg this[1725738]:BaseRectangularArr(1,int(64),false,locale)[1256183]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1725744]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1725783]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1725789 'move' coerce_tmp[1725783](1725785 'cast' BaseArr[149541] this[1725738]))
    (1725746 'move' call_tmp[1725744](1725749 call _decEltRefCounts[806591] coerce_tmp[1725783]))
    const-val call_tmp[1725752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1725792]:bool[10] "dead after last mention" "const" "temp"
    (1725794 'move' tmp[1725792](1725796 'deref' call_tmp[1725744]))
    (1725754 'move' call_tmp[1725752] tmp[1725792])
    if call_tmp[1725752]
    {
      val call_tmp[1725761]:BaseRectangularArr(1,int(64),false,locale)[1256183] "dead after last mention" "expr temp" "maybe param" "temp"
      (1725763 'move' call_tmp[1725761](1725766 call _to_unmanaged[1725798] this[1725738]))
      val call_tmp[1725768]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1726203]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1726209 'move' coerce_tmp[1726203](1726205 'cast' BaseArr[149541] call_tmp[1725761]))
      (1725777 call chpl_decRefCountsForDomainsInArrayEltTypes[1725861] coerce_tmp[1726203])
    }
    (1725781 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909].decEltCountsIfNeeded[1726216](const in arg this[1726220]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1726226]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1726265]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1726271 'move' coerce_tmp[1726265](1726267 'cast' BaseArr[149541] this[1726220]))
    (1726228 'move' call_tmp[1726226](1726231 call _decEltRefCounts[806591] coerce_tmp[1726265]))
    const-val call_tmp[1726234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1726274]:bool[10] "dead after last mention" "const" "temp"
    (1726276 'move' tmp[1726274](1726278 'deref' call_tmp[1726226]))
    (1726236 'move' call_tmp[1726234] tmp[1726274])
    if call_tmp[1726234]
    {
      val call_tmp[1726243]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909] "dead after last mention" "expr temp" "maybe param" "temp"
      (1726245 'move' call_tmp[1726243](1726248 call _to_unmanaged[1726280] this[1726220]))
      val call_tmp[1726250]:localesSignal[92275] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1726685]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1726691 'move' coerce_tmp[1726685](1726687 'cast' BaseArr[149541] call_tmp[1726243]))
      (1726259 call chpl_decRefCountsForDomainsInArrayEltTypes[1726343] coerce_tmp[1726685])
    }
    (1726263 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358452].decEltCountsIfNeeded[1726698](const in arg this[1726702]:BaseRectangularArr(1,int(64),false,real(64))[1358452]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1726708]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1726747]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1726753 'move' coerce_tmp[1726747](1726749 'cast' BaseArr[149541] this[1726702]))
    (1726710 'move' call_tmp[1726708](1726713 call _decEltRefCounts[806591] coerce_tmp[1726747]))
    const-val call_tmp[1726716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1726756]:bool[10] "dead after last mention" "const" "temp"
    (1726758 'move' tmp[1726756](1726760 'deref' call_tmp[1726708]))
    (1726718 'move' call_tmp[1726716] tmp[1726756])
    if call_tmp[1726716]
    {
      val call_tmp[1726725]:BaseRectangularArr(1,int(64),false,real(64))[1358452] "dead after last mention" "expr temp" "maybe param" "temp"
      (1726727 'move' call_tmp[1726725](1726730 call _to_unmanaged[1726762] this[1726702]))
      val call_tmp[1726732]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1727167]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1727173 'move' coerce_tmp[1727167](1727169 'cast' BaseArr[149541] call_tmp[1726725]))
      (1726741 call chpl_decRefCountsForDomainsInArrayEltTypes[1726825] coerce_tmp[1727167])
    }
    (1726745 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368375].decEltCountsIfNeeded[1727180](const in arg this[1727184]:BaseRectangularArr(1,int(64),false,int(64))[1368375]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1727190]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1727229]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1727235 'move' coerce_tmp[1727229](1727231 'cast' BaseArr[149541] this[1727184]))
    (1727192 'move' call_tmp[1727190](1727195 call _decEltRefCounts[806591] coerce_tmp[1727229]))
    const-val call_tmp[1727198]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1727238]:bool[10] "dead after last mention" "const" "temp"
    (1727240 'move' tmp[1727238](1727242 'deref' call_tmp[1727190]))
    (1727200 'move' call_tmp[1727198] tmp[1727238])
    if call_tmp[1727198]
    {
      val call_tmp[1727207]:BaseRectangularArr(1,int(64),false,int(64))[1368375] "dead after last mention" "expr temp" "maybe param" "temp"
      (1727209 'move' call_tmp[1727207](1727212 call _to_unmanaged[1727244] this[1727184]))
      val call_tmp[1727214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1727649]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1727655 'move' coerce_tmp[1727649](1727651 'cast' BaseArr[149541] call_tmp[1727207]))
      (1727223 call chpl_decRefCountsForDomainsInArrayEltTypes[1727307] coerce_tmp[1727649])
    }
    (1727227 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1423773].decEltCountsIfNeeded[1727662](const in arg this[1727666]:BaseRectangularArr(1,int(64),false,uint(64))[1423773]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1727672]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1727711]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1727717 'move' coerce_tmp[1727711](1727713 'cast' BaseArr[149541] this[1727666]))
    (1727674 'move' call_tmp[1727672](1727677 call _decEltRefCounts[806591] coerce_tmp[1727711]))
    const-val call_tmp[1727680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1727720]:bool[10] "dead after last mention" "const" "temp"
    (1727722 'move' tmp[1727720](1727724 'deref' call_tmp[1727672]))
    (1727682 'move' call_tmp[1727680] tmp[1727720])
    if call_tmp[1727680]
    {
      val call_tmp[1727689]:BaseRectangularArr(1,int(64),false,uint(64))[1423773] "dead after last mention" "expr temp" "maybe param" "temp"
      (1727691 'move' call_tmp[1727689](1727694 call _to_unmanaged[1727726] this[1727666]))
      val call_tmp[1727696]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1728131]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1728137 'move' coerce_tmp[1728131](1728133 'cast' BaseArr[149541] call_tmp[1727689]))
      (1727705 call chpl_decRefCountsForDomainsInArrayEltTypes[1727789] coerce_tmp[1728131])
    }
    (1727709 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256183].init[1255734](const in arg this[1255738]:BaseRectangularArr(1,int(64),false,locale)[1256183], const in arg pid[1255744]:int(64)[13], const in arg _decEltRefCounts[1255750]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763485]:locale[28] "temp"
    val _formal_type_tmp_[1763483]:int(64)[13] "temp"
    val super_tmp[1255770]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temporary of super field" "temp"
    (1255772 'move' super_tmp[1255770](1255774 '.v' this[1255738] super[1256179]))
    (1255781 call init[1255920] super_tmp[1255770] pid[1255744] _decEltRefCounts[1255750])
    val tmp[1255788]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temp" "type variable"
    val call_tmp[1255807]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
    (1255809 'move' call_tmp[1255807](1255811 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1255738]))
    val chpl__thisAsParent[1255814]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "temp"
    (1255816 'move' chpl__thisAsParent[1255814](1256157 call chpl__initCopy[1256159] call_tmp[1255807]))
    (1255820 'setcid' chpl__thisAsParent[1255814])
    (1255827 'setcid' this[1255738])
    (1255829 return _void[55])
  }
  function init_default__decEltRefCounts[1255880]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255882]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1255887]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255891]:bool[10] "dead after last mention" "temp"
    val _formal_type[1255893]:bool[10] "dead after last mention" "temp" "type variable"
    (1255901 'move' tmp[1255891] 0)
    (1255904 'move' _decEltRefCounts[1255887] tmp[1255891])
    (1255909 'move' ret[1255882] _decEltRefCounts[1255887])
    (1255885 return ret[1255882])
  }
  function init_default_pid[1255840]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255842]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1255847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255851]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1255853]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1255861 'move' tmp[1255851] -1)
    (1255864 'move' pid[1255847] tmp[1255851])
    (1255869 'move' ret[1255842] pid[1255847])
    (1255845 return ret[1255842])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909].init[1317713](const in arg this[1317717]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909], const in arg pid[1317723]:int(64)[13], const in arg _decEltRefCounts[1317729]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763546]:localesSignal[92275] "temp"
    val _formal_type_tmp_[1763544]:int(64)[13] "temp"
    val super_tmp[1317749]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temporary of super field" "temp"
    (1317751 'move' super_tmp[1317749](1317753 '.v' this[1317717] super[1317905]))
    (1317760 call init[1255920] super_tmp[1317749] pid[1317723] _decEltRefCounts[1317729])
    val tmp[1317767]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temp" "type variable"
    val call_tmp[1317786]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
    (1317788 'move' call_tmp[1317786](1317790 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1317717]))
    val chpl__thisAsParent[1317793]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "temp"
    (1317795 'move' chpl__thisAsParent[1317793](1317901 call chpl__initCopy[1256159] call_tmp[1317786]))
    (1317799 'setcid' chpl__thisAsParent[1317793])
    (1317806 'setcid' this[1317717])
    (1317808 return _void[55])
  }
  function init_default__decEltRefCounts[1317859]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317861]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1317866]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317870]:bool[10] "dead after last mention" "temp"
    val _formal_type[1317872]:bool[10] "dead after last mention" "temp" "type variable"
    (1317880 'move' tmp[1317870] 0)
    (1317883 'move' _decEltRefCounts[1317866] tmp[1317870])
    (1317888 'move' ret[1317861] _decEltRefCounts[1317866])
    (1317864 return ret[1317861])
  }
  function init_default_pid[1317819]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317821]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1317826]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317830]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1317832]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1317840 'move' tmp[1317830] -1)
    (1317843 'move' pid[1317826] tmp[1317830])
    (1317848 'move' ret[1317821] pid[1317826])
    (1317824 return ret[1317821])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358452].init[1358256](const in arg this[1358260]:BaseRectangularArr(1,int(64),false,real(64))[1358452], const in arg pid[1358266]:int(64)[13], const in arg _decEltRefCounts[1358272]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763633]:real(64)[16] "temp"
    val _formal_type_tmp_[1763631]:int(64)[13] "temp"
    val super_tmp[1358292]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temporary of super field" "temp"
    (1358294 'move' super_tmp[1358292](1358296 '.v' this[1358260] super[1358448]))
    (1358303 call init[1255920] super_tmp[1358292] pid[1358266] _decEltRefCounts[1358272])
    val tmp[1358310]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temp" "type variable"
    val call_tmp[1358329]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
    (1358331 'move' call_tmp[1358329](1358333 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1358260]))
    val chpl__thisAsParent[1358336]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "temp"
    (1358338 'move' chpl__thisAsParent[1358336](1358444 call chpl__initCopy[1256159] call_tmp[1358329]))
    (1358342 'setcid' chpl__thisAsParent[1358336])
    (1358349 'setcid' this[1358260])
    (1358351 return _void[55])
  }
  function init_default__decEltRefCounts[1358402]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358404]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1358409]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358413]:bool[10] "dead after last mention" "temp"
    val _formal_type[1358415]:bool[10] "dead after last mention" "temp" "type variable"
    (1358423 'move' tmp[1358413] 0)
    (1358426 'move' _decEltRefCounts[1358409] tmp[1358413])
    (1358431 'move' ret[1358404] _decEltRefCounts[1358409])
    (1358407 return ret[1358404])
  }
  function init_default_pid[1358362]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358364]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1358369]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358373]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1358375]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1358383 'move' tmp[1358373] -1)
    (1358386 'move' pid[1358369] tmp[1358373])
    (1358391 'move' ret[1358364] pid[1358369])
    (1358367 return ret[1358364])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1368375].init[1368179](const in arg this[1368183]:BaseRectangularArr(1,int(64),false,int(64))[1368375], const in arg pid[1368189]:int(64)[13], const in arg _decEltRefCounts[1368195]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763669]:int(64)[13] "temp"
    val _formal_type_tmp_[1763667]:int(64)[13] "temp"
    val super_tmp[1368215]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temporary of super field" "temp"
    (1368217 'move' super_tmp[1368215](1368219 '.v' this[1368183] super[1368371]))
    (1368226 call init[1255920] super_tmp[1368215] pid[1368189] _decEltRefCounts[1368195])
    val tmp[1368233]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temp" "type variable"
    val call_tmp[1368252]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
    (1368254 'move' call_tmp[1368252](1368256 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1368183]))
    val chpl__thisAsParent[1368259]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "temp"
    (1368261 'move' chpl__thisAsParent[1368259](1368367 call chpl__initCopy[1256159] call_tmp[1368252]))
    (1368265 'setcid' chpl__thisAsParent[1368259])
    (1368272 'setcid' this[1368183])
    (1368274 return _void[55])
  }
  function init_default__decEltRefCounts[1368325]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368327]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1368332]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1368336]:bool[10] "dead after last mention" "temp"
    val _formal_type[1368338]:bool[10] "dead after last mention" "temp" "type variable"
    (1368346 'move' tmp[1368336] 0)
    (1368349 'move' _decEltRefCounts[1368332] tmp[1368336])
    (1368354 'move' ret[1368327] _decEltRefCounts[1368332])
    (1368330 return ret[1368327])
  }
  function init_default_pid[1368285]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1368287]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1368292]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1368296]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1368298]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1368306 'move' tmp[1368296] -1)
    (1368309 'move' pid[1368292] tmp[1368296])
    (1368314 'move' ret[1368287] pid[1368292])
    (1368290 return ret[1368287])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1423773].init[1423577](const in arg this[1423581]:BaseRectangularArr(1,int(64),false,uint(64))[1423773], const in arg pid[1423587]:int(64)[13], const in arg _decEltRefCounts[1423593]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1763729]:uint(64)[115] "temp"
    val _formal_type_tmp_[1763727]:int(64)[13] "temp"
    val super_tmp[1423613]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temporary of super field" "temp"
    (1423615 'move' super_tmp[1423613](1423617 '.v' this[1423581] super[1423769]))
    (1423624 call init[1255920] super_tmp[1423613] pid[1423587] _decEltRefCounts[1423593])
    val tmp[1423631]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "temp" "type variable"
    val call_tmp[1423650]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
    (1423652 'move' call_tmp[1423650](1423654 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256130] this[1423581]))
    val chpl__thisAsParent[1423657]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "temp"
    (1423659 'move' chpl__thisAsParent[1423657](1423765 call chpl__initCopy[1256159] call_tmp[1423650]))
    (1423663 'setcid' chpl__thisAsParent[1423657])
    (1423670 'setcid' this[1423581])
    (1423672 return _void[55])
  }
  function init_default__decEltRefCounts[1423723]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1423725]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1423730]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1423734]:bool[10] "dead after last mention" "temp"
    val _formal_type[1423736]:bool[10] "dead after last mention" "temp" "type variable"
    (1423744 'move' tmp[1423734] 0)
    (1423747 'move' _decEltRefCounts[1423730] tmp[1423734])
    (1423752 'move' ret[1423725] _decEltRefCounts[1423730])
    (1423728 return ret[1423725])
  }
  function init_default_pid[1423683]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1423685]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1423690]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1423694]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1423696]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1423704 'move' tmp[1423694] -1)
    (1423707 'move' pid[1423690] tmp[1423694])
    (1423712 'move' ret[1423685] pid[1423690])
    (1423688 return ret[1423685])
  }
  type BaseRectangularArr(1,int(64),false,locale)[1256183] val super[1256179]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "super class"
  type BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317909] val super[1317905]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "super class"
  type BaseRectangularArr(1,int(64),false,real(64))[1358452] val super[1358448]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "super class"
  type BaseRectangularArr(1,int(64),false,int(64))[1368375] val super[1368371]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "super class"
  type BaseRectangularArr(1,int(64),false,uint(64))[1423773] val super[1423769]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "super class"
  function _delete_dist[150573](const in arg dist[150570]:BaseDist[145926], const in arg privatized[150576]:bool[10]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[1479339]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1479344 'move' coerce_tmp[1479339] dist[150570])
    (150586 call dsiDestroyDist[145852] coerce_tmp[1479339])
    const-val tmp[568585]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[568593]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (568595 'move' tmp[568593] privatized[150576])
    (568600 'move' tmp[568585] tmp[568593])
    const-val call_tmp[669519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (669522 'move' call_tmp[669519] tmp[568585])
    if call_tmp[669519]
    {
      ref call_tmp[669526]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1479352]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1479357 'move' coerce_tmp[1479352] dist[150570])
      (669529 'move' call_tmp[669526](150595 call pid[801216] coerce_tmp[1479352]))
      const-val coerce_tmp[1479360]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1479364 'move' coerce_tmp[1479360](1479362 'deref' call_tmp[669526]))
      val coerce_tmp[1479366]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1479372 'move' coerce_tmp[1479366](1479368 'cast' object[22] dist[150570]))
      (150600 call _freePrivatizedClass[1476359] coerce_tmp[1479360] coerce_tmp[1479366])
    }
    (150609 call chpl__delete[1479375] dist[150570])
    (520298 return _void[55])
  }
  function _delete_dom[1476239](const in arg dom[1476241]:BaseDom[146725], const in arg privatized[1476243]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1476338]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1476343 'move' coerce_tmp[1476338] dom[1476241])
    (1476253 call dsiDestroyDom[146647] coerce_tmp[1476338])
    const-val tmp[1476273]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1476291]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1476293 'move' tmp[1476291] privatized[1476243])
    (1476298 'move' tmp[1476273] tmp[1476291])
    const-val call_tmp[1476310]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1476312 'move' call_tmp[1476310] tmp[1476273])
    if call_tmp[1476310]
    {
      ref call_tmp[1476319]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1476351]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1476356 'move' coerce_tmp[1476351] dom[1476241])
      (1476321 'move' call_tmp[1476319](1476324 call pid[801404] coerce_tmp[1476351]))
      const-val coerce_tmp[1476692]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1476696 'move' coerce_tmp[1476692](1476694 'deref' call_tmp[1476319]))
      val coerce_tmp[1476698]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1476704 'move' coerce_tmp[1476698](1476700 'cast' object[22] dom[1476241]))
      (1476328 call _freePrivatizedClass[1476359] coerce_tmp[1476692] coerce_tmp[1476698])
    }
    (1476333 call chpl__delete[1478270] dom[1476241])
    (1476335 return _void[55])
  }
  function _delete_dom[1588669](const in arg dom[1588671]:domain(1,int(64),false)[1250845], const in arg privatized[1588673]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1588768]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1588773 'move' coerce_tmp[1588768](1588770 'cast' BaseDom[146725] dom[1588671]))
    (1588683 call dsiDestroyDom[146647] coerce_tmp[1588768])
    const-val tmp[1588703]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1588721]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1588723 'move' tmp[1588721] privatized[1588673])
    (1588728 'move' tmp[1588703] tmp[1588721])
    const-val call_tmp[1588740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1588742 'move' call_tmp[1588740] tmp[1588703])
    if call_tmp[1588740]
    {
      ref call_tmp[1588749]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1588781]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1588786 'move' coerce_tmp[1588781](1588783 'cast' BaseDom[146725] dom[1588671]))
      (1588751 'move' call_tmp[1588749](1588754 call pid[801404] coerce_tmp[1588781]))
      const-val coerce_tmp[1588789]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1588793 'move' coerce_tmp[1588789](1588791 'deref' call_tmp[1588749]))
      val coerce_tmp[1588795]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1588801 'move' coerce_tmp[1588795](1588797 'cast' object[22] dom[1588671]))
      (1588758 call _freePrivatizedClass[1476359] coerce_tmp[1588789] coerce_tmp[1588795])
    }
    (1588763 call chpl__delete[1588804] dom[1588671])
    (1588765 return _void[55])
  }
  function _delete_arr[1475008](const in arg arr[1475010]:BaseArr[149541], const in arg deinitElts[1475018]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1475129]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1475134 'move' coerce_tmp[1475129] arr[1475010])
    val _virtual_method_tmp_[1759574]:int(32)[95] "temp"
    (1759578 'move' _virtual_method_tmp_[1759574](1759576 'getcid' coerce_tmp[1475129]))
    (1475028 'virtual method call' dsiDestroyArr[149072] _virtual_method_tmp_[1759574] coerce_tmp[1475129] deinitElts[1475018])
    val coerce_tmp[1475138]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1475143 'move' coerce_tmp[1475138] arr[1475010])
    val _virtual_method_tmp_[1759581]:int(32)[95] "temp"
    (1759585 'move' _virtual_method_tmp_[1759581](1759583 'getcid' coerce_tmp[1475138]))
    (1475036 'virtual method call' decEltCountsIfNeeded[149535] _virtual_method_tmp_[1759581] coerce_tmp[1475138])
    (1475116 call chpl__delete[1475153] arr[1475010])
    (1475118 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[1288363](const in arg lhs[1288365]:domain(1,int(64),false)[1250845], const  ref arg rhs[1288367]:domain(1,int(64),false)[1252508]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val arrType[1288429]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289019]:BaseRectangularDom(1,int(64),false)[1250810] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289025 'move' coerce_tmp[1289019](1289021 'cast' BaseRectangularDom(1,int(64),false)[1250810] lhs[1288365]))
    const-val idxType[1288457]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289274]:BaseRectangularDom(1,int(64),false)[1250810] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289280 'move' coerce_tmp[1289274](1289276 'cast' BaseRectangularDom(1,int(64),false)[1250810] lhs[1288365]))
    {
      val _indexOfInterest[1288484]:BaseArr[149541] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288486]:_ic_these__ref_chpl__simpleSet_BaseArr[1290130] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288488]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1289286]:BaseDom[146725] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1289292 'move' coerce_tmp[1289286](1289288 'cast' BaseDom[146725] lhs[1288365]))
      (1288490 'move' call_tmp[1288488](1288493 call _arrs[801300] coerce_tmp[1289286]))
      (1288496 'move' _iterator[1288486](1288499 call _getIterator[1289295] call_tmp[1288488]))
      {
        val ret[1870082]:_ir_these__ref_chpl__simpleSet_BaseArr[1290136] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1870084]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1870086]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289556] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1870088]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead at end of block" "maybe param" "temp"
        ref this[1870230]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
        (1870235 'move' this[1870230](1870232 '.v' _iterator[1288486] F0_this[1968960]))
        (1870090 'move' call_tmp[1870088](1870093 call table[1264980] this[1870230]))
        const-val call_tmp[1870095]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1870097]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "temp"
        (1870100 call allSlots[1289465] call_tmp[1870088] ret_tmp[1870097])
        (1870103 'move' call_tmp[1870095] ret_tmp[1870097])
        (1870106 'move' _iterator[1870086](1870109 call _getIterator[1289571] call_tmp[1870095]))
        {
          val ret[1927570]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1927572]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1927574]:_ic__allSlots[1221511] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1927576]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
          ref this[1927870]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "temp"
          (1927875 'move' this[1927870](1927872 '.v' _iterator[1870086] F0_this[1969420]))
          (1927578 'move' call_tmp[1927576](1927581 call tableSize[1247779] this[1927870]))
          const-val call_tmp[1927583]:_ir__allSlots[1221517] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1927585]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1927587 'move' coerce_tmp[1927585](1927589 'deref' call_tmp[1927576]))
          const-val ret_tmp[1927591]:_ir__allSlots[1221517] "temp"
          (1927594 call _allSlots[201266] coerce_tmp[1927585] ret_tmp[1927591])
          (1927597 'move' call_tmp[1927583] ret_tmp[1927591])
          (1927600 'move' _iterator[1927574](1927603 call _getIterator[1221526] call_tmp[1927583]))
          {
            val ret[1927606]:_ir__allSlots[1221517] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1927608]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1927610]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1927612]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1927614]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
            const-val size[1927616]:int(64)[13] "temp"
            (1927618 'move' size[1927616](1927620 '.v' _iterator[1927574] F0_size[1956331]))
            (1927624 call chpl_direct_counted_range_iter[457907] 0 size[1927616] ret_tmp[1927614])
            (1927628 'move' call_tmp[1927612] ret_tmp[1927614])
            (1927631 'move' _iterator[1927610](1927634 call _getIterator[1103716] call_tmp[1927612]))
            {
              val ret[1927637]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1927639]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1927641]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1927643]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1927645]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
              const-val low[1927647]:int(64)[13] "temp"
              (1927649 'move' low[1927647](1927651 '.v' _iterator[1927610] F0_low[1960165]))
              const-val count[1927654]:int(64)[13] "temp"
              (1927656 'move' count[1927654](1927658 '.v' _iterator[1927610] F1_count[1960169]))
              (1927662 call chpl_direct_counted_range_iter_helper[1102009] low[1927647] count[1927654] ret_tmp[1927645])
              (1927666 'move' call_tmp[1927643] ret_tmp[1927645])
              (1927669 'move' _iterator[1927641](1927672 call _getIterator[1103466] call_tmp[1927643]))
              {
                val ret[1944937]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                val call_tmp[1944939]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1944941]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1944943]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1944945]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1945447]:int(64)[13] "temp"
                (1945452 'move' count[1945447](1945449 '.v' _iterator[1927641] F1_count[1964641]))
                (1944947 'move' call_tmp[1944945](1944950 call <[948309] count[1945447]))
                (1944952 'move' tmp[1944943] call_tmp[1944945])
                (1944955 'move' tmp[1944941] call_tmp[1944945])
                const-val call_tmp[1944958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1944960 'move' call_tmp[1944958] call_tmp[1944945])
                if call_tmp[1944945]
                {
                  (1944966 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1944969]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1944971]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1944973]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1944975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1945454]:int(64)[13] "temp"
                (1945459 'move' count[1945454](1945456 '.v' _iterator[1927641] F1_count[1964641]))
                (1944977 'move' call_tmp[1944975](1944980 call ==[435539] count[1945454] 0))
                (1944983 'move' tmp[1944973] call_tmp[1944975])
                if call_tmp[1944975]
                {
                  const-val tmp[1944988]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1944990]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1944992]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1945461]:int(64)[13] "temp"
                  (1945466 'move' low[1945461](1945463 '.v' _iterator[1927641] F0_low[1964637]))
                  (1944994 'move' call_tmp[1944992](1944997 call _cast[955945] low[1945461]))
                  const-val call_tmp[1944999]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1945001]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1945003 'move' coerce_tmp[1945001](1945005 'cast' uint(64)[115] 1))
                  (1945008 'move' call_tmp[1944999](1945011 call -[962104] call_tmp[1944992]))
                  const-val call_tmp[1945013]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1945015 'move' call_tmp[1945013](1945018 call _cast[953454] call_tmp[1944999]))
                  const-val ret_tmp[1945020]:2*int(64)[1039967] "temp"
                  const-val low[1945468]:int(64)[13] "temp"
                  (1945473 'move' low[1945468](1945470 '.v' _iterator[1927641] F0_low[1964637]))
                  (1945023 call _build_tuple[1039925] low[1945468] call_tmp[1945013] ret_tmp[1945020])
                  (1945027 'move' tmp[1944988] ret_tmp[1945020])
                  (1945030 'move' tmp[1944971] tmp[1944988])
                }
                {
                  const-val tmp[1945034]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1945036]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1945038]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1945475]:int(64)[13] "temp"
                  (1945480 'move' count[1945475](1945477 '.v' _iterator[1927641] F1_count[1964641]))
                  (1945040 'move' call_tmp[1945038] count[1945475])
                  const-val call_tmp[1945043]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1945482]:int(64)[13] "temp"
                  (1945487 'move' count[1945482](1945484 '.v' _iterator[1927641] F1_count[1964641]))
                  (1945045 'move' call_tmp[1945043](1945048 call -[962137] count[1945482]))
                  const-val call_tmp[1945050]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1945489]:int(64)[13] "temp"
                  (1945494 'move' low[1945489](1945491 '.v' _iterator[1927641] F0_low[1964637]))
                  (1945052 'move' call_tmp[1945050](1945055 call +[439547] low[1945489] call_tmp[1945043]))
                  const-val ret_tmp[1945058]:2*int(64)[1039967] "temp"
                  const-val low[1945496]:int(64)[13] "temp"
                  (1945501 'move' low[1945496](1945498 '.v' _iterator[1927641] F0_low[1964637]))
                  (1945061 call _build_tuple[1039925] low[1945496] call_tmp[1945050] ret_tmp[1945058])
                  (1945065 'move' tmp[1945034] ret_tmp[1945058])
                  (1945068 'move' tmp[1944971] tmp[1945034])
                }
                (1945072 '=' tmp[1944969] tmp[1944971])
                (1945075 'noop')
                1
                ref call_tmp[1945077]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1945079 'move' call_tmp[1945077](1945081 '.' tmp[1944969] x0[1039963]))
                const-val start[1945084]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1945086]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1945088 'move' coerce_tmp[1945086](1945090 'deref' call_tmp[1945077]))
                (1945092 '=' start[1945084] coerce_tmp[1945086])
                (1945095 'noop')
                ref call_tmp[1945096]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1945098 'move' call_tmp[1945096](1945100 '.' tmp[1944969] x1[1039965]))
                const-val end[1945103]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1945105]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1945107 'move' coerce_tmp[1945105](1945109 'deref' call_tmp[1945096]))
                (1945111 '=' end[1945103] coerce_tmp[1945105])
                (1945114 'noop')
                val _indexOfInterest[1945115]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1945117]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1945119]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1945121]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                (1945124 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1945086] coerce_tmp[1945105] ret_tmp[1945121])
                (1945128 'move' call_tmp[1945119] ret_tmp[1945121])
                (1945131 'move' _iterator[1945117](1945134 call _getIterator[1103212] call_tmp[1945119]))
                {
                  val ret[1945137]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                  val call_tmp[1945139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1945142 call chpl_range_check_stride[1102755])
                  val i[1945143]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1945145]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1945147 'move' i[1945143] 0)
                  val call_tmp[1945150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1945152]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1945154]:int(64)[13] "temp"
                  (1945156 'move' low[1945154](1945158 '.v' _iterator[1945117] F0_low[1966135]))
                  (1945161 'move' default_arg_first[1945152](1945164 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1945154]))
                  const-val default_arg_last[1945166]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1945168]:int(64)[13] "temp"
                  (1945170 'move' high[1945168](1945172 '.v' _iterator[1945117] F1_high[1966139]))
                  (1945175 'move' default_arg_last[1945166](1945178 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1945168]))
                  const-val _return_tmp_[1945180]:bool[10] "dead after last mention" "temp"
                  const-val low[1945182]:int(64)[13] "temp"
                  (1945184 'move' low[1945182](1945186 '.v' _iterator[1945117] F0_low[1966135]))
                  const-val high[1945189]:int(64)[13] "temp"
                  (1945191 'move' high[1945189](1945193 '.v' _iterator[1945117] F1_high[1966139]))
                  (1945196 'move' _return_tmp_[1945180](1945199 call chpl_checkIfRangeIterWillOverflow[1095987] low[1945182] high[1945189] 1 default_arg_first[1945152] default_arg_last[1945166] 1))
                  CForLoop[1945206] hazard
                  {
                    const-val yret[1945235]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1945237 'move' yret[1945235] i[1945143])
                    const-val _yieldedIndex[1945240]:int(64)[13] "temp"
                    (1945242 'move' _yieldedIndex[1945240] i[1945143])
                    {
                      const-val i[1945246]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1945248 'move' i[1945246] _yieldedIndex[1945240])
                      const-val yret[1945251]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1945253 'move' yret[1945251] _yieldedIndex[1945240])
                      const-val _yieldedIndex[1945281]:int(64)[13] "temp"
                      (1945445 'move' _yieldedIndex[1945281] _yieldedIndex[1945240])
                      {
                        const-val i[1945283]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1945285 'move' i[1945283] _yieldedIndex[1945281])
                        const-val yret[1945288]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1945290 'move' yret[1945288] _yieldedIndex[1945281])
                        const-val _yieldedIndex[1945293]:int(64)[13] "temp"
                        (1945295 'move' _yieldedIndex[1945293] _yieldedIndex[1945281])
                        {
                          const-val slot[1945299]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1945301 'move' slot[1945299] _yieldedIndex[1945293])
                          const-val yret[1945304]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1945306 'move' yret[1945304] _yieldedIndex[1945293])
                          const-val _yieldedIndex[1945309]:int(64)[13] "temp"
                          (1945311 'move' _yieldedIndex[1945309] _yieldedIndex[1945293])
                          {
                            const-val slot[1945315]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1945317 'move' slot[1945315] _yieldedIndex[1945309])
                            const-val yret[1945320]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1945322 'move' yret[1945320] _yieldedIndex[1945309])
                            const-val _yieldedIndex[1945325]:int(64)[13] "temp"
                            (1945327 'move' _yieldedIndex[1945325] _yieldedIndex[1945309])
                            {
                              const-val slot[1945331]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1945333 'move' slot[1945331] _yieldedIndex[1945325])
                              ref call_tmp[1945336]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead after last mention" "maybe param" "temp"
                              ref this[1945338]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
                              (1945340 'move' this[1945338](1945342 '.v' _iterator[1288486] F0_this[1968960]))
                              (1945345 'move' call_tmp[1945336](1945348 call table[1264980] this[1945338]))
                              const-val call_tmp[1945350]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1945352 'move' call_tmp[1945350](1945355 call isSlotFull[1290034] call_tmp[1945336] _yieldedIndex[1945325]))
                              const-val call_tmp[1945358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1945360 'move' call_tmp[1945358] call_tmp[1945350])
                              if call_tmp[1945350]
                              {
                                val yret[1945365]:BaseArr[149541] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1945367]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead after last mention" "maybe param" "temp"
                                ref this[1945369]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
                                (1945371 'move' this[1945369](1945373 '.v' _iterator[1288486] F0_this[1968960]))
                                (1945376 'move' call_tmp[1945367](1945379 call table[1264980] this[1945369]))
                                ref call_tmp[1945381]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208391] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1945383]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208414] "dead after last mention" "temp"
                                (1945385 'move' _this_tmp_[1945383](1945388 call table[1247751] call_tmp[1945367]))
                                val coerce_tmp[1945390]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208405] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1945392 'move' coerce_tmp[1945390](1945394 'deref' _this_tmp_[1945383]))
                                (1945396 'move' call_tmp[1945381](1945399 call this[1250301] coerce_tmp[1945390] slot[1945331]))
                                ref call_tmp[1945402]:_ref(BaseArr)[1208228] "dead after last mention" "maybe param" "temp"
                                (1945404 'move' call_tmp[1945402](1945407 call key[1267165] call_tmp[1945381]))
                                val _yieldedIndex[1945409]:BaseArr[149541] "temp"
                                (1945411 'move' _yieldedIndex[1945409](1945413 'deref' call_tmp[1945402]))
                                {
                                  const e[1945416]:BaseArr[149541] "concurrently accessed" "const" "index var" "insert auto destroy"
                                  (1945418 'move' e[1945416] _yieldedIndex[1945409])
                                  {
                                    const-val tmp[1945422]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1945424]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1945426 'move' call_tmp[1945424](1945428 '_wide_get_locale' e[1945416]))
                                    (1945430 'move' tmp[1945422] call_tmp[1945424])
                                    val rvfDerefTmp[2032954]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "concurrently accessed" "temp"
                                    (2032957 'move' rvfDerefTmp[2032954] arrType[1288429])
                                    val rhs_data[2032960]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1755379] "temp"
                                    (2032962 call chpl__serialize[1755076] rhs[1288367] rhs_data[2032960])
                                    val isdirect[2041536]:bool[10] "temp"
                                    (2041541 'move' isdirect[2041536](2041538 call chpl_doDirectExecuteOn[187423] tmp[1945422]))
                                    if isdirect[2041536]
                                    {
                                      (2041545 call on_fn[1288539] e[1945416] rvfDerefTmp[2032954] rhs_data[2032960] idxType[1288457])
                                    }
                                    {
                                      val _args_foron_fn[2041569]:_class_localson_fn[2041555] "temp"
                                      (2041573 'move' _args_foron_fn[2041569](2041571 'stack allocate class' _class_localson_fn[2041555]))
                                      (2041575 '.=' _args_foron_fn[2041569] _0_tmp[2041558] tmp[1945422])
                                      (2041579 '.=' _args_foron_fn[2041569] _1_e[2041560] e[1945416])
                                      (2041583 '.=' _args_foron_fn[2041569] _2_rvfDerefTmp[2041562] rvfDerefTmp[2032954])
                                      (2041587 '.=' _args_foron_fn[2041569] _3_rhs_data[2041564] rhs_data[2032960])
                                      ref tmp[2041591]:int(64)[13] "temp"
                                      (2041595 'move' tmp[2041591](2041593 'set reference' idxType[1288457]))
                                      (2041597 '.=' _args_foron_fn[2041569] _4_idxType[2041566] tmp[2041591])
                                      val _args_vforon_fn[2041601]:c_void_ptr[149] "temp"
                                      (2041605 'move' _args_vforon_fn[2041601](2041603 'cast_to_void_star' _args_foron_fn[2041569]))
                                      val _args_sizeon_fn[2041607]:int(64)[13] "temp"
                                      (2041611 'move' _args_sizeon_fn[2041607](2041609 'sizeof_bundle' _class_localson_fn[2041555]))
                                      on(2041667 call wrapon_fn[2041613] tmp[1945422] _args_vforon_fn[2041601] _args_sizeon_fn[2041607] _args_foron_fn[2041569])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1945441]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1945208]:int(64)[13] "temp"
                      (1945210 'move' low[1945208](1945212 '.v' _iterator[1945117] F0_low[1966135]))
                      (1945215 '=' i[1945143] low[1945208])
                    }
                    {
                      const-val high[1945219]:int(64)[13] "temp"
                      (1945221 'move' high[1945219](1945223 '.v' _iterator[1945117] F1_high[1966139]))
                      (1945226 '<=' i[1945143] high[1945219])
                    }
                    {
                      val call_tmp[1945230]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1945232 '+=' i[1945143] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1945269]
                }
                (1945272 call _freeIterator[1103385] _iterator[1945117])
                (1945275 call chpl__autoDestroy[1567619] tmp[1944969])
                label _endchpl_direct_counted_range_iter_helper[1945277]
              }
              (1927736 call _freeIterator[1103635] _iterator[1927641])
              label _endchpl_direct_counted_range_iter[1927738]
            }
            (1927741 call _freeIterator[1103885] _iterator[1927610])
            label _end_allSlots[1927743]
          }
          (1927746 call _freeIterator[1223055] _iterator[1927574])
          label _endallSlots[1927748]
        }
        (1870194 call _freeIterator[1289968] _iterator[1870086])
        label _endthese[1870196]
      }
      label _breakLabel[1288788]
      (1804118 call _freeIterator[1290314] _iterator[1288486])
    }
    const-val call_tmp[1288790]:1*range(int(64),bounded,false)[1244607] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1793812]:1*range(int(64),bounded,false)[1244607] "temp"
    (1288798 call getIndices[1296684] rhs[1288367] ret_tmp[1793812])
    (1793815 'move' call_tmp[1288790] ret_tmp[1793812])
    (1288803 call dsiSetIndices[1251219] lhs[1288365] call_tmp[1288790])
    (1804120 call chpl__autoDestroy[1587962] call_tmp[1288790])
    {
      val _indexOfInterest[1288807]:BaseArr[149541] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288809]:_ic_these__ref_chpl__simpleSet_BaseArr[1290130] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288811]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1297501]:BaseDom[146725] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1297507 'move' coerce_tmp[1297501](1297503 'cast' BaseDom[146725] lhs[1288365]))
      (1288813 'move' call_tmp[1288811](1288816 call _arrs[801300] coerce_tmp[1297501]))
      (1288819 'move' _iterator[1288809](1288822 call _getIterator[1289295] call_tmp[1288811]))
      {
        val ret[1870252]:_ir_these__ref_chpl__simpleSet_BaseArr[1290136] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1870254]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1870256]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289556] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1870258]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead at end of block" "maybe param" "temp"
        ref this[1870432]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
        (1870437 'move' this[1870432](1870434 '.v' _iterator[1288809] F0_this[1968960]))
        (1870260 'move' call_tmp[1870258](1870263 call table[1264980] this[1870432]))
        const-val call_tmp[1870265]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1870267]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "temp"
        (1870270 call allSlots[1289465] call_tmp[1870258] ret_tmp[1870267])
        (1870273 'move' call_tmp[1870265] ret_tmp[1870267])
        (1870276 'move' _iterator[1870256](1870279 call _getIterator[1289571] call_tmp[1870265]))
        {
          val ret[1927878]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289562] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1927880]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1927882]:_ic__allSlots[1221511] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1927884]:_ref(int(64))[936483] "dead at end of block" "maybe param" "temp"
          ref this[1928210]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "temp"
          (1928215 'move' this[1928210](1928212 '.v' _iterator[1870256] F0_this[1969420]))
          (1927886 'move' call_tmp[1927884](1927889 call tableSize[1247779] this[1928210]))
          const-val call_tmp[1927891]:_ir__allSlots[1221517] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1927893]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1927895 'move' coerce_tmp[1927893](1927897 'deref' call_tmp[1927884]))
          const-val ret_tmp[1927899]:_ir__allSlots[1221517] "temp"
          (1927902 call _allSlots[201266] coerce_tmp[1927893] ret_tmp[1927899])
          (1927905 'move' call_tmp[1927891] ret_tmp[1927899])
          (1927908 'move' _iterator[1927882](1927911 call _getIterator[1221526] call_tmp[1927891]))
          {
            val ret[1927914]:_ir__allSlots[1221517] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1927916]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1927918]:_ic_chpl_direct_counted_range_iter[1103701] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1927920]:_ir_chpl_direct_counted_range_iter[1103707] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1927922]:_ir_chpl_direct_counted_range_iter[1103707] "temp"
            const-val size[1927924]:int(64)[13] "temp"
            (1927926 'move' size[1927924](1927928 '.v' _iterator[1927882] F0_size[1956331]))
            (1927932 call chpl_direct_counted_range_iter[457907] 0 size[1927924] ret_tmp[1927922])
            (1927936 'move' call_tmp[1927920] ret_tmp[1927922])
            (1927939 'move' _iterator[1927918](1927942 call _getIterator[1103716] call_tmp[1927920]))
            {
              val ret[1927945]:_ir_chpl_direct_counted_range_iter[1103707] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1927947]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1927949]:_ic_chpl_direct_counted_range_iter_helper[1103451] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1927951]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1927953]:_ir_chpl_direct_counted_range_iter_helper[1103457] "temp"
              const-val low[1927955]:int(64)[13] "temp"
              (1927957 'move' low[1927955](1927959 '.v' _iterator[1927918] F0_low[1960165]))
              const-val count[1927962]:int(64)[13] "temp"
              (1927964 'move' count[1927962](1927966 '.v' _iterator[1927918] F1_count[1960169]))
              (1927970 call chpl_direct_counted_range_iter_helper[1102009] low[1927955] count[1927962] ret_tmp[1927953])
              (1927974 'move' call_tmp[1927951] ret_tmp[1927953])
              (1927977 'move' _iterator[1927949](1927980 call _getIterator[1103466] call_tmp[1927951]))
              {
                val ret[1945504]:_ir_chpl_direct_counted_range_iter_helper[1103457] "dead after last mention" "RVV" "temp"
                val call_tmp[1945506]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1945508]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1945510]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1945512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1946046]:int(64)[13] "temp"
                (1946051 'move' count[1946046](1946048 '.v' _iterator[1927949] F1_count[1964641]))
                (1945514 'move' call_tmp[1945512](1945517 call <[948309] count[1946046]))
                (1945519 'move' tmp[1945510] call_tmp[1945512])
                (1945522 'move' tmp[1945508] call_tmp[1945512])
                const-val call_tmp[1945525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1945527 'move' call_tmp[1945525] call_tmp[1945512])
                if call_tmp[1945512]
                {
                  (1945533 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1945536]:2*int(64)[1039967] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1945538]:2*int(64)[1039967] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1945540]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1945542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1946053]:int(64)[13] "temp"
                (1946058 'move' count[1946053](1946055 '.v' _iterator[1927949] F1_count[1964641]))
                (1945544 'move' call_tmp[1945542](1945547 call ==[435539] count[1946053] 0))
                (1945550 'move' tmp[1945540] call_tmp[1945542])
                if call_tmp[1945542]
                {
                  const-val tmp[1945555]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1945557]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1945559]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1946060]:int(64)[13] "temp"
                  (1946065 'move' low[1946060](1946062 '.v' _iterator[1927949] F0_low[1964637]))
                  (1945561 'move' call_tmp[1945559](1945564 call _cast[955945] low[1946060]))
                  const-val call_tmp[1945566]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1945568]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1945570 'move' coerce_tmp[1945568](1945572 'cast' uint(64)[115] 1))
                  (1945575 'move' call_tmp[1945566](1945578 call -[962104] call_tmp[1945559]))
                  const-val call_tmp[1945580]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1945582 'move' call_tmp[1945580](1945585 call _cast[953454] call_tmp[1945566]))
                  const-val ret_tmp[1945587]:2*int(64)[1039967] "temp"
                  const-val low[1946067]:int(64)[13] "temp"
                  (1946072 'move' low[1946067](1946069 '.v' _iterator[1927949] F0_low[1964637]))
                  (1945590 call _build_tuple[1039925] low[1946067] call_tmp[1945580] ret_tmp[1945587])
                  (1945594 'move' tmp[1945555] ret_tmp[1945587])
                  (1945597 'move' tmp[1945538] tmp[1945555])
                }
                {
                  const-val tmp[1945601]:2*int(64)[1039967] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1945603]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1945605]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1946074]:int(64)[13] "temp"
                  (1946079 'move' count[1946074](1946076 '.v' _iterator[1927949] F1_count[1964641]))
                  (1945607 'move' call_tmp[1945605] count[1946074])
                  const-val call_tmp[1945610]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1946081]:int(64)[13] "temp"
                  (1946086 'move' count[1946081](1946083 '.v' _iterator[1927949] F1_count[1964641]))
                  (1945612 'move' call_tmp[1945610](1945615 call -[962137] count[1946081]))
                  const-val call_tmp[1945617]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1946088]:int(64)[13] "temp"
                  (1946093 'move' low[1946088](1946090 '.v' _iterator[1927949] F0_low[1964637]))
                  (1945619 'move' call_tmp[1945617](1945622 call +[439547] low[1946088] call_tmp[1945610]))
                  const-val ret_tmp[1945625]:2*int(64)[1039967] "temp"
                  const-val low[1946095]:int(64)[13] "temp"
                  (1946100 'move' low[1946095](1946097 '.v' _iterator[1927949] F0_low[1964637]))
                  (1945628 call _build_tuple[1039925] low[1946095] call_tmp[1945617] ret_tmp[1945625])
                  (1945632 'move' tmp[1945601] ret_tmp[1945625])
                  (1945635 'move' tmp[1945538] tmp[1945601])
                }
                (1945639 '=' tmp[1945536] tmp[1945538])
                (1945642 'noop')
                1
                ref call_tmp[1945644]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1945646 'move' call_tmp[1945644](1945648 '.' tmp[1945536] x0[1039963]))
                const-val start[1945651]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1945653]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1945655 'move' coerce_tmp[1945653](1945657 'deref' call_tmp[1945644]))
                (1945659 '=' start[1945651] coerce_tmp[1945653])
                (1945662 'noop')
                ref call_tmp[1945663]:_ref(int(64))[936483] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1945665 'move' call_tmp[1945663](1945667 '.' tmp[1945536] x1[1039965]))
                const-val end[1945670]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1945672]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1945674 'move' coerce_tmp[1945672](1945676 'deref' call_tmp[1945663]))
                (1945678 '=' end[1945670] coerce_tmp[1945672])
                (1945681 'noop')
                val _indexOfInterest[1945682]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1945684]:_ic_chpl_direct_param_stride_range_iter[1103197] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1945686]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1945688]:_ir_chpl_direct_param_stride_range_iter[1103203] "temp"
                (1945691 call chpl_direct_param_stride_range_iter[1102435] coerce_tmp[1945653] coerce_tmp[1945672] ret_tmp[1945688])
                (1945695 'move' call_tmp[1945686] ret_tmp[1945688])
                (1945698 'move' _iterator[1945684](1945701 call _getIterator[1103212] call_tmp[1945686]))
                {
                  val ret[1945704]:_ir_chpl_direct_param_stride_range_iter[1103203] "dead after last mention" "RVV" "temp"
                  val call_tmp[1945706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1945709 call chpl_range_check_stride[1102755])
                  val i[1945710]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1945712]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1945714 'move' i[1945710] 0)
                  val call_tmp[1945717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1945719]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1945721]:int(64)[13] "temp"
                  (1945723 'move' low[1945721](1945725 '.v' _iterator[1945684] F0_low[1966135]))
                  (1945728 'move' default_arg_first[1945719](1945731 call chpl_checkIfRangeIterWillOverflow_default_first[1103109] low[1945721]))
                  const-val default_arg_last[1945733]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1945735]:int(64)[13] "temp"
                  (1945737 'move' high[1945735](1945739 '.v' _iterator[1945684] F1_high[1966139]))
                  (1945742 'move' default_arg_last[1945733](1945745 call chpl_checkIfRangeIterWillOverflow_default_last[1103137] high[1945735]))
                  const-val _return_tmp_[1945747]:bool[10] "dead after last mention" "temp"
                  const-val low[1945749]:int(64)[13] "temp"
                  (1945751 'move' low[1945749](1945753 '.v' _iterator[1945684] F0_low[1966135]))
                  const-val high[1945756]:int(64)[13] "temp"
                  (1945758 'move' high[1945756](1945760 '.v' _iterator[1945684] F1_high[1966139]))
                  (1945763 'move' _return_tmp_[1945747](1945766 call chpl_checkIfRangeIterWillOverflow[1095987] low[1945749] high[1945756] 1 default_arg_first[1945719] default_arg_last[1945733] 1))
                  CForLoop[1945773] hazard
                  {
                    const-val yret[1945802]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1945804 'move' yret[1945802] i[1945710])
                    const-val _yieldedIndex[1945807]:int(64)[13] "temp"
                    (1945809 'move' _yieldedIndex[1945807] i[1945710])
                    {
                      const-val i[1945813]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1945815 'move' i[1945813] _yieldedIndex[1945807])
                      const-val yret[1945818]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1945820 'move' yret[1945818] _yieldedIndex[1945807])
                      const-val _yieldedIndex[1945848]:int(64)[13] "temp"
                      (1946044 'move' _yieldedIndex[1945848] _yieldedIndex[1945807])
                      {
                        const-val i[1945850]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1945852 'move' i[1945850] _yieldedIndex[1945848])
                        const-val yret[1945855]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1945857 'move' yret[1945855] _yieldedIndex[1945848])
                        const-val _yieldedIndex[1945860]:int(64)[13] "temp"
                        (1945862 'move' _yieldedIndex[1945860] _yieldedIndex[1945848])
                        {
                          const-val slot[1945866]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1945868 'move' slot[1945866] _yieldedIndex[1945860])
                          const-val yret[1945871]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1945873 'move' yret[1945871] _yieldedIndex[1945860])
                          const-val _yieldedIndex[1945876]:int(64)[13] "temp"
                          (1945878 'move' _yieldedIndex[1945876] _yieldedIndex[1945860])
                          {
                            const-val slot[1945882]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1945884 'move' slot[1945882] _yieldedIndex[1945876])
                            const-val yret[1945887]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1945889 'move' yret[1945887] _yieldedIndex[1945876])
                            const-val _yieldedIndex[1945892]:int(64)[13] "temp"
                            (1945894 'move' _yieldedIndex[1945892] _yieldedIndex[1945876])
                            {
                              const-val slot[1945898]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1945900 'move' slot[1945898] _yieldedIndex[1945892])
                              ref call_tmp[1945903]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead after last mention" "maybe param" "temp"
                              ref this[1945905]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
                              (1945907 'move' this[1945905](1945909 '.v' _iterator[1288809] F0_this[1968960]))
                              (1945912 'move' call_tmp[1945903](1945915 call table[1264980] this[1945905]))
                              const-val call_tmp[1945917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1945919 'move' call_tmp[1945917](1945922 call isSlotFull[1290034] call_tmp[1945903] _yieldedIndex[1945892]))
                              const-val call_tmp[1945925]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1945927 'move' call_tmp[1945925] call_tmp[1945917])
                              if call_tmp[1945917]
                              {
                                val yret[1945932]:BaseArr[149541] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1945934]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208348] "dead after last mention" "maybe param" "temp"
                                ref this[1945936]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "temp"
                                (1945938 'move' this[1945936](1945940 '.v' _iterator[1288809] F0_this[1968960]))
                                (1945943 'move' call_tmp[1945934](1945946 call table[1264980] this[1945936]))
                                ref call_tmp[1945948]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208391] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1945950]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208414] "dead after last mention" "temp"
                                (1945952 'move' _this_tmp_[1945950](1945955 call table[1247751] call_tmp[1945934]))
                                val coerce_tmp[1945957]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208405] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1945959 'move' coerce_tmp[1945957](1945961 'deref' _this_tmp_[1945950]))
                                (1945963 'move' call_tmp[1945948](1945966 call this[1250301] coerce_tmp[1945957] slot[1945898]))
                                ref call_tmp[1945969]:_ref(BaseArr)[1208228] "dead after last mention" "maybe param" "temp"
                                (1945971 'move' call_tmp[1945969](1945974 call key[1267165] call_tmp[1945948]))
                                val _yieldedIndex[1945976]:BaseArr[149541] "temp"
                                (1945978 'move' _yieldedIndex[1945976](1945980 'deref' call_tmp[1945969]))
                                {
                                  const e[1945983]:BaseArr[149541] "const" "index var" "insert auto destroy"
                                  (1945985 'move' e[1945983] _yieldedIndex[1945976])
                                  {
                                    val call_tmp[1945989]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                    val call_tmp[1945991]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
                                    val coerce_tmp[1945993]:BaseArr[149541] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                    (1945995 'move' coerce_tmp[1945993] e[1945983])
                                    (1945998 'move' call_tmp[1945991](1946001 call _cast[1290627] coerce_tmp[1945993]))
                                    val eCastQ[1946003]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy"
                                    (1946005 'move' eCastQ[1946003](1946008 call chpl__initCopy[1290835] call_tmp[1945991]))
                                    val call_tmp[1946010]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
                                    (1946012 'move' call_tmp[1946010](1946015 call postfix![1296396] eCastQ[1946003]))
                                    val eCast[1946017]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy"
                                    (1946019 'move' eCast[1946017](1946022 call chpl__initCopy[1289252] call_tmp[1946010]))
                                    const-val tmp[1946024]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1946026]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1946028 'move' call_tmp[1946026](1946030 '_wide_get_locale' e[1945983]))
                                    (1946032 'move' tmp[1946024] call_tmp[1946026])
                                    val rvfDerefTmp[2032994]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "concurrently accessed" "temp"
                                    (2032997 'move' rvfDerefTmp[2032994] eCast[1946017])
                                    val isdirect[2041672]:bool[10] "temp"
                                    (2041677 'move' isdirect[2041672](2041674 call chpl_doDirectExecuteOn[187423] tmp[1946024]))
                                    if isdirect[2041672]
                                    {
                                      (2041681 call on_fn[1288898] rvfDerefTmp[2032994])
                                    }
                                    {
                                      val _args_foron_fn[2041696]:_class_localson_fn[2041688] "temp"
                                      (2041700 'move' _args_foron_fn[2041696](2041698 'stack allocate class' _class_localson_fn[2041688]))
                                      (2041702 '.=' _args_foron_fn[2041696] _0_tmp[2041691] tmp[1946024])
                                      (2041706 '.=' _args_foron_fn[2041696] _1_rvfDerefTmp[2041693] rvfDerefTmp[2032994])
                                      val _args_vforon_fn[2041710]:c_void_ptr[149] "temp"
                                      (2041714 'move' _args_vforon_fn[2041710](2041712 'cast_to_void_star' _args_foron_fn[2041696]))
                                      val _args_sizeon_fn[2041716]:int(64)[13] "temp"
                                      (2041720 'move' _args_sizeon_fn[2041716](2041718 'sizeof_bundle' _class_localson_fn[2041688]))
                                      on(2041752 call wrapon_fn[2041722] tmp[1946024] _args_vforon_fn[2041710] _args_sizeon_fn[2041716] _args_foron_fn[2041696])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1946040]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1945775]:int(64)[13] "temp"
                      (1945777 'move' low[1945775](1945779 '.v' _iterator[1945684] F0_low[1966135]))
                      (1945782 '=' i[1945710] low[1945775])
                    }
                    {
                      const-val high[1945786]:int(64)[13] "temp"
                      (1945788 'move' high[1945786](1945790 '.v' _iterator[1945684] F1_high[1966139]))
                      (1945793 '<=' i[1945710] high[1945786])
                    }
                    {
                      val call_tmp[1945797]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1945799 '+=' i[1945710] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1945836]
                }
                (1945839 call _freeIterator[1103385] _iterator[1945684])
                (1945842 call chpl__autoDestroy[1567619] tmp[1945536])
                label _endchpl_direct_counted_range_iter_helper[1945844]
              }
              (1928044 call _freeIterator[1103635] _iterator[1927949])
              label _endchpl_direct_counted_range_iter[1928046]
            }
            (1928049 call _freeIterator[1103885] _iterator[1927918])
            label _end_allSlots[1928051]
          }
          (1928054 call _freeIterator[1223055] _iterator[1927882])
          label _endallSlots[1928056]
        }
        (1870364 call _freeIterator[1289968] _iterator[1870256])
        label _endthese[1870366]
      }
      label _breakLabel[1288916]
      (1804126 call _freeIterator[1290314] _iterator[1288809])
    }
    (1288940 return _void[55])
  }
  function on_fn[935063](const in arg this[1765424]:BaseDist[145926], ref arg free_dist[1765426]:_ref(bool)[937110]) : void[4] "on" "resolved"
  {
    {
      val dom_count[145481]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543428 'move' dom_count[145481] -1)
      {
        {
          ref call_tmp[667349]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667352 'move' call_tmp[667349](360361 call _domsLock[801164] this[1765424]))
          (145491 call lock[187277] call_tmp[667349])
          ref call_tmp[667358]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
          (667361 'move' call_tmp[667358](385292 call _free_when_no_doms[801190] this[1765424]))
          (145496 call =[435085] call_tmp[667358] 1)
          ref call_tmp[667365]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "dead after last mention" "maybe param" "temp"
          (667368 'move' call_tmp[667365](360366 call _doms[801138] this[1765424]))
          const-val call_tmp[667372]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667375 'move' call_tmp[667372](145501 call size[1474269] call_tmp[667365]))
          (145504 call =[435238] dom_count[145481] call_tmp[667372])
          ref call_tmp[667379]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667382 'move' call_tmp[667379](360371 call _domsLock[801164] this[1765424]))
          (145512 call unlock[187369] call_tmp[667379])
        }
        (145516 'local block')
      }
      const-val call_tmp[667386]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667389 'move' call_tmp[667386](145519 call ==[435539] dom_count[145481] 0))
      const-val call_tmp[667391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667394 'move' call_tmp[667391] call_tmp[667386])
      if call_tmp[667391]
      {
        (145523 call =[435085] free_dist[1765426] 1)
      }
    }
    (935070 return _void[55])
  }
  function on_fn[935072](const in arg this[1765428]:BaseDist[145926], const in arg x[1765430]:BaseDom[146725], ref arg count[1765432]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    {
      val cnt[145594]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543432 'move' cnt[145594] -1)
      {
        {
          ref call_tmp[667423]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667426 'move' call_tmp[667423](360376 call _domsLock[801164] this[1765428]))
          (145604 call lock[187277] call_tmp[667423])
          ref call_tmp[667432]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "dead after last mention" "maybe param" "temp"
          (667435 'move' call_tmp[667432](360381 call _doms[801138] this[1765428]))
          (145613 call remove[1470288] call_tmp[667432] x[1765430])
          ref call_tmp[667441]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208562] "dead after last mention" "maybe param" "temp"
          (667444 'move' call_tmp[667441](360386 call _doms[801138] this[1765428]))
          const-val call_tmp[667448]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667451 'move' call_tmp[667448](145617 call size[1474269] call_tmp[667441]))
          (145620 call =[435238] cnt[145594] call_tmp[667448])
          ref call_tmp[667455]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
          (667458 'move' call_tmp[667455](385307 call _free_when_no_doms[801190] this[1765428]))
          const-val call_tmp[667460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1474310]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1474314 'move' coerce_tmp[1474310](1474312 'deref' call_tmp[667455]))
          (667463 'move' call_tmp[667460](145624 call ![7494] coerce_tmp[1474310]))
          const-val call_tmp[667465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (667468 'move' call_tmp[667465] call_tmp[667460])
          if call_tmp[667465]
          {
            (145628 call +=[451226] cnt[145594] 1)
          }
          ref call_tmp[667472]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667475 'move' call_tmp[667472](360391 call _domsLock[801164] this[1765428]))
          (145641 call unlock[187369] call_tmp[667472])
        }
        (145645 'local block')
      }
      (145648 call =[435238] count[1765432] cnt[145594])
    }
    (935079 return _void[55])
  }
  function on_fn[935090](const in arg this[1765434]:BaseDom[146725], ref arg free_dom[1765436]:_ref(bool)[937110], const in arg dist[1765438]:BaseDist[145926], ref arg remove_dist[1765440]:_ref(bool)[937110]) : void[4] "on" "resolved"
  {
    {
      val arr_count[146142]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543448 'move' arr_count[146142] 0)
      {
        {
          ref call_tmp[667571]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667574 'move' call_tmp[667571](360413 call _arrsLock[801352] this[1765434]))
          (146152 call lock[187277] call_tmp[667571])
          ref call_tmp[667580]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "maybe param" "temp"
          (667583 'move' call_tmp[667580](360418 call _arrs[801300] this[1765434]))
          const-val call_tmp[667587]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667590 'move' call_tmp[667587](146157 call size[1469081] call_tmp[667580]))
          (146160 call =[435238] arr_count[146142] call_tmp[667587])
          ref call_tmp[667594]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (667597 'move' call_tmp[667594](385352 call _arrs_containing_dom[801326] this[1765434]))
          const-val coerce_tmp[1470215]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1470219 'move' coerce_tmp[1470215](1470217 'deref' call_tmp[667594]))
          (146165 call +=[451226] arr_count[146142] coerce_tmp[1470215])
          ref call_tmp[667601]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
          (667604 'move' call_tmp[667601](385357 call _free_when_no_arrs[801378] this[1765434]))
          (146170 call =[435085] call_tmp[667601] 1)
          ref call_tmp[667608]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (667611 'move' call_tmp[667608](360423 call _arrsLock[801352] this[1765434]))
          (146178 call unlock[187369] call_tmp[667608])
        }
        (146182 'local block')
      }
      const-val call_tmp[667615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667618 'move' call_tmp[667615](146185 call ==[435539] arr_count[146142] 0))
      const-val call_tmp[667620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667623 'move' call_tmp[667620] call_tmp[667615])
      if call_tmp[667620]
      {
        (146189 call =[435085] free_dom[1765436] 1)
        const-val call_tmp[667627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val _virtual_method_tmp_[1759462]:int(32)[95] "temp"
        (1759466 'move' _virtual_method_tmp_[1759462](1759464 'getcid' this[1765434]))
        (667630 'move' call_tmp[667627](146195 'virtual method call' dsiLinksDistribution[146637] _virtual_method_tmp_[1759462] this[1765434]))
        const-val call_tmp[667632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (667635 'move' call_tmp[667632] call_tmp[667627])
        if call_tmp[667632]
        {
          val call_tmp[667639]:BaseDom[146725] "dead after last mention" "expr temp" "maybe param" "temp"
          (667642 'move' call_tmp[667639](146206 call _to_unmanaged[1470229] this[1765434]))
          const-val call_tmp[667644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1470272]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[1766100]:BaseDist[145926] "temp"
          (1766103 'move' tmp[1766100] dist[1765438])
          (1470277 'move' coerce_tmp[1470272] tmp[1766100])
          (667647 'move' call_tmp[667644](146208 call remove_dom[145579] coerce_tmp[1470272] call_tmp[667639]))
          (146209 call =[435085] remove_dist[1765440] call_tmp[667644])
        }
      }
    }
    (935097 return _void[55])
  }
  function on_fn[1264690](const in arg this[1765770]:BaseDom[146725], const in arg x[1765772]:BaseArr[149541]) : void[4] "on" "resolved"
  {
    {
      {
        ref call_tmp[1264705]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
        (1264707 'move' call_tmp[1264705](1264710 call _arrsLock[801352] this[1765770]))
        (1264717 call lock[187277] call_tmp[1264705])
      }
      {
        ref call_tmp[1264728]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "maybe param" "temp"
        (1264730 'move' call_tmp[1264728](1264733 call _arrs[801300] this[1765770]))
        (1264740 call add[1264880] call_tmp[1264728] x[1765772])
      }
      {
        ref call_tmp[1264765]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
        (1264767 'move' call_tmp[1264765](1264770 call _arrsLock[801352] this[1765770]))
        (1264777 call unlock[187369] call_tmp[1264765])
      }
    }
    (1264779 return _void[55])
  }
  function on_fn[1288539](const in arg e[1765774]:BaseArr[149541], const in arg arrType[1765776]:BaseArrOverRectangularDom(1,int(64),false)[1256130], const in arg rhs[1765778]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1755379], const  ref arg idxType[1765780]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    val rhs[2032967]:domain(1,int(64),false)[1252508] "temp"
    ref rhs[2032968]:domain(1,int(64),false)[1252508] "temp"
    val ds_info[2032974]:_RuntimeTypeInfo[1253584]
    ref tmp[2032977]:domain(1,int(64),false)[1252508] "temp"
    (2032981 'move' tmp[2032977](2032979 'set reference' rhs[2032967]))
    (2032971 call chpl__deserialize[1755914] ds_info[2032974] rhs[1765778] tmp[2032977])
    (2032986 'move' rhs[2032968](2032984 'set reference' rhs[2032967]))
    {
      val call_tmp[1288545]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288551]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1290816]:BaseArr[149541] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1290821 'move' coerce_tmp[1290816] e[1765774])
      (1288553 'move' call_tmp[1288551](1288556 call _cast[1290627] coerce_tmp[1290816]))
      val eCastQ[1288559]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy"
      (1288561 'move' eCastQ[1288559](1290944 call chpl__initCopy[1290835] call_tmp[1288551]))
      const-val call_tmp[1288565]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1290947]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1290952 'move' coerce_tmp[1290947](1290949 'cast' object[22] eCastQ[1288559]))
      (1288567 'move' call_tmp[1288565](1288570 call ==[1146] coerce_tmp[1290947] nil[44]))
      const-val call_tmp[1288573]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1288575 'move' call_tmp[1288573] call_tmp[1288565])
      if call_tmp[1288573]
      {
        val call_tmp[1288582]:domain(1,int(64),false)[1250845] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1288605 call halt[1290989] "internal error: " "borrowed domain(1,int(64),false)" " contains an bad array type " "unmanaged BaseArrOverRectangularDom(1,int(64),false)")
      }
      val call_tmp[1288613]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "maybe param" "temp"
      (1288615 'move' call_tmp[1288613](1288618 call postfix![1296396] eCastQ[1288559]))
      val eCast[1288620]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead at end of block" "insert auto destroy"
      (1288622 'move' eCast[1288620](1296667 call chpl__initCopy[1289252] call_tmp[1288613]))
      const-val call_tmp[1288626]:1*range(int(64),bounded,false)[1244607] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1793806]:1*range(int(64),bounded,false)[1244607] "temp"
      (1288634 call getIndices[1296684] rhs[2032968] ret_tmp[1793806])
      (1793809 'move' call_tmp[1288626] ret_tmp[1793806])
      const-val inds[1288635]:1*range(int(64),bounded,false)[1244607] "dead at end of block" "insert auto destroy"
      (1288637 'move' inds[1288635] call_tmp[1288626])
      val tmp[1288641]:1*range(int(64),bounded,false)[1244607] "dead at end of block" "insert auto destroy"
      val call_tmp[1288643]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288652]:1*range(int(64),bounded,false)[1244607] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val ret_tmp[1792416]:1*range(int(64),bounded,false)[1244607] "temp"
      (1297479 call _defaultOf[1250976] ret_tmp[1792416])
      (1792419 'move' tmp[1288641] ret_tmp[1792416])
      {
        const-val i[1288669]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1288671 'move' i[1288669] 0)
        {
          {
            ref call_tmp[1296863]:_ref(range(int(64),bounded,false))[1026769] "dead at end of block" "maybe param" "temp"
            (1296865 'move' call_tmp[1296863](1296915 '.' inds[1288635] x0[1244605]))
            const-val from[1296870]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
            (1296872 'move' from[1296870](1296918 'deref' call_tmp[1296863]))
            ref call_tmp[1296878]:_ref(range(int(64),bounded,false))[1026769] "dead after last mention" "maybe param" "temp"
            (1296880 'move' call_tmp[1296878](1296921 '.' tmp[1288641] x0[1244605]))
            val call_tmp[1296885]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1296894]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1793838]:range(int(64),bounded,false)[1026725] "temp"
            (1296902 call safeCast[1296928] from[1296870] ret_tmp[1793838])
            (1793841 'move' call_tmp[1296894] ret_tmp[1793838])
            (1296905 call =[1251461] call_tmp[1296878] call_tmp[1296894])
            (1804129 call chpl__autoDestroy[1567322] call_tmp[1296894])
            (1804132 call chpl__autoDestroy[1567322] from[1296870])
          }
        }
        label _continueLabel0[1296859]
        label _unused_continueLabel[1288769]
        label _breakLabel[1288771]
      }
      val coerce_tmp[1297470]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1297475 'move' coerce_tmp[1297470] eCast[1288620])
      val _virtual_method_tmp_[1759553]:int(32)[95] "temp"
      (1759557 'move' _virtual_method_tmp_[1759553](1759555 'getcid' coerce_tmp[1297470]))
      (1288777 'virtual method call' dsiReallocate[1297403] _virtual_method_tmp_[1759553] coerce_tmp[1297470] tmp[1288641])
      (1804136 call chpl__autoDestroy[1587962] tmp[1288641])
      (1804139 call chpl__autoDestroy[1587962] inds[1288635])
    }
    (2032988 call chpl__autoDestroy[1755833] rhs[1765778])
    (2032991 call chpl__autoDestroy[1589828] rhs[2032967])
    (1288782 return _void[55])
  }
  function on_fn[1288898](const in arg eCast[1765782]:BaseArrOverRectangularDom(1,int(64),false)[1256130]) : void[4] "on" "resolved"
  {
    val coerce_tmp[1297542]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1766160]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (1766163 'move' tmp[1766160] eCast[1765782])
    (1297547 'move' coerce_tmp[1297542] tmp[1766160])
    val _virtual_method_tmp_[1759560]:int(32)[95] "temp"
    (1759564 'move' _virtual_method_tmp_[1759560](1759562 'getcid' coerce_tmp[1297542]))
    (1288907 'virtual method call' dsiPostReallocate[1297530] _virtual_method_tmp_[1759560] coerce_tmp[1297542])
    (1288910 return _void[55])
  }
  function on_fn[1467777](const in arg this[1765874]:BaseDom[146725], const in arg x[1765876]:BaseArr[149541], ref arg count[1765878]:_ref(int(64))[936483]) : void[4] "on" "resolved"
  {
    {
      val cnt[1467790]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1467792 'move' cnt[1467790] -1)
      {
        {
          ref call_tmp[1467799]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (1467801 'move' call_tmp[1467799](1467804 call _arrsLock[801352] this[1765874]))
          (1467811 call lock[187277] call_tmp[1467799])
          {
            ref call_tmp[1467822]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "maybe param" "temp"
            (1467824 'move' call_tmp[1467822](1467827 call _arrs[801300] this[1765874]))
            (1467834 call remove[1467980] call_tmp[1467822] x[1765876])
          }
          ref call_tmp[1467850]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208262] "dead after last mention" "maybe param" "temp"
          (1467852 'move' call_tmp[1467850](1467855 call _arrs[801300] this[1765874]))
          const-val call_tmp[1467858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1467860 'move' call_tmp[1467858](1467863 call size[1469081] call_tmp[1467850]))
          (1467867 call =[435238] cnt[1467790] call_tmp[1467858])
          ref call_tmp[1467872]:_ref(int(64))[936483] "dead after last mention" "maybe param" "temp"
          (1467874 'move' call_tmp[1467872](1467877 call _arrs_containing_dom[801326] this[1765874]))
          const-val coerce_tmp[1469122]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1469126 'move' coerce_tmp[1469122](1469124 'deref' call_tmp[1467872]))
          (1467881 call +=[451226] cnt[1467790] coerce_tmp[1469122])
          ref call_tmp[1467886]:_ref(bool)[937110] "dead after last mention" "maybe param" "temp"
          (1467888 'move' call_tmp[1467886](1467891 call _free_when_no_arrs[801378] this[1765874]))
          const-val call_tmp[1467894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1469130]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1469134 'move' coerce_tmp[1469130](1469132 'deref' call_tmp[1467886]))
          (1467896 'move' call_tmp[1467894](1467899 call ![7494] coerce_tmp[1469130]))
          const-val call_tmp[1467901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1467903 'move' call_tmp[1467901] call_tmp[1467894])
          if call_tmp[1467901]
          {
            (1467911 call +=[451226] cnt[1467790] 1)
          }
          ref call_tmp[1467917]:_ref(chpl_LocalSpinlock)[940982] "dead after last mention" "maybe param" "temp"
          (1467919 'move' call_tmp[1467917](1467922 call _arrsLock[801352] this[1765874]))
          (1467929 call unlock[187369] call_tmp[1467917])
        }
        (1467797 'local block')
      }
      (1467931 call =[435238] count[1765878] cnt[1467790])
    }
    (1467937 return _void[55])
  }
  function wrapon_fn[2034497](const in arg dummy_locale_arg[2034499]:chpl_localeID_t[209294], in arg buf[2034501]:c_void_ptr[149], in arg buf_size[2034503]:int(64)[13], in arg c[2034505]:_class_localson_fn[2034451]) : void[4] "on block"
  {
    val _0_tmp[2034510]:chpl_localeID_t[209294] "temp"
    (2034515 'move' _0_tmp[2034510](2034512 '.v' c[2034505] _0_tmp[2034454]))
    val _1_this[2034517]:BaseDist[145926] "temp"
    (2034522 'move' _1_this[2034517](2034519 '.v' c[2034505] _1_this[2034456]))
    ref _2_free_dist[2034525]:bool[10] "temp"
    (2034530 'move' _2_free_dist[2034525](2034527 '.v' c[2034505] _2_free_dist[2034458]))
    (2034508 call on_fn[935063] _1_this[2034517] _2_free_dist[2034525])
    (2034533 return _void[55])
  }
  function wrapon_fn[2034610](const in arg dummy_locale_arg[2034612]:chpl_localeID_t[209294], in arg buf[2034614]:c_void_ptr[149], in arg buf_size[2034616]:int(64)[13], in arg c[2034618]:_class_localson_fn[2034558]) : void[4] "on block"
  {
    val _0_tmp[2034623]:chpl_localeID_t[209294] "temp"
    (2034628 'move' _0_tmp[2034623](2034625 '.v' c[2034618] _0_tmp[2034561]))
    val _1_this[2034630]:BaseDist[145926] "temp"
    (2034635 'move' _1_this[2034630](2034632 '.v' c[2034618] _1_this[2034563]))
    val _2_x[2034638]:BaseDom[146725] "temp"
    (2034643 'move' _2_x[2034638](2034640 '.v' c[2034618] _2_x[2034565]))
    ref _3_count[2034646]:int(64)[13] "temp"
    (2034651 'move' _3_count[2034646](2034648 '.v' c[2034618] _3_count[2034567]))
    (2034621 call on_fn[935072] _1_this[2034630] _2_x[2034638] _3_count[2034646])
    (2034654 return _void[55])
  }
  function wrapon_fn[2034744](const in arg dummy_locale_arg[2034746]:chpl_localeID_t[209294], in arg buf[2034748]:c_void_ptr[149], in arg buf_size[2034750]:int(64)[13], in arg c[2034752]:_class_localson_fn[2034680]) : void[4] "on block"
  {
    val _0_tmp[2034757]:chpl_localeID_t[209294] "temp"
    (2034762 'move' _0_tmp[2034757](2034759 '.v' c[2034752] _0_tmp[2034683]))
    val _1_this[2034764]:BaseDom[146725] "temp"
    (2034769 'move' _1_this[2034764](2034766 '.v' c[2034752] _1_this[2034685]))
    ref _2_free_dom[2034772]:bool[10] "temp"
    (2034777 'move' _2_free_dom[2034772](2034774 '.v' c[2034752] _2_free_dom[2034687]))
    val _3_rvfDerefTmp[2034780]:BaseDist[145926] "temp"
    (2034785 'move' _3_rvfDerefTmp[2034780](2034782 '.v' c[2034752] _3_rvfDerefTmp[2034689]))
    ref _4_remove_dist[2034788]:bool[10] "temp"
    (2034793 'move' _4_remove_dist[2034788](2034790 '.v' c[2034752] _4_remove_dist[2034691]))
    (2034755 call on_fn[935090] _1_this[2034764] _2_free_dom[2034772] _3_rvfDerefTmp[2034780] _4_remove_dist[2034788])
    (2034796 return _void[55])
  }
  function wrapon_fn[2041493](const in arg dummy_locale_arg[2041495]:chpl_localeID_t[209294], in arg buf[2041497]:c_void_ptr[149], in arg buf_size[2041499]:int(64)[13], in arg c[2041501]:_class_localson_fn[2041453]) : void[4] "on block"
  {
    val _0_tmp[2041506]:chpl_localeID_t[209294] "temp"
    (2041511 'move' _0_tmp[2041506](2041508 '.v' c[2041501] _0_tmp[2041456]))
    val _1_this[2041513]:BaseDom[146725] "temp"
    (2041518 'move' _1_this[2041513](2041515 '.v' c[2041501] _1_this[2041458]))
    val _2_x[2041521]:BaseArr[149541] "temp"
    (2041526 'move' _2_x[2041521](2041523 '.v' c[2041501] _2_x[2041460]))
    (2041504 call on_fn[1264690] _1_this[2041513] _2_x[2041521])
    (2041529 return _void[55])
  }
  function wrapon_fn[2041613](const in arg dummy_locale_arg[2041615]:chpl_localeID_t[209294], in arg buf[2041617]:c_void_ptr[149], in arg buf_size[2041619]:int(64)[13], in arg c[2041621]:_class_localson_fn[2041555]) : void[4] "on block"
  {
    val _0_tmp[2041626]:chpl_localeID_t[209294] "temp"
    (2041631 'move' _0_tmp[2041626](2041628 '.v' c[2041621] _0_tmp[2041558]))
    val _1_e[2041633]:BaseArr[149541] "temp"
    (2041638 'move' _1_e[2041633](2041635 '.v' c[2041621] _1_e[2041560]))
    val _2_rvfDerefTmp[2041641]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (2041646 'move' _2_rvfDerefTmp[2041641](2041643 '.v' c[2041621] _2_rvfDerefTmp[2041562]))
    val _3_rhs_data[2041649]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1755379] "temp"
    (2041654 'move' _3_rhs_data[2041649](2041651 '.v' c[2041621] _3_rhs_data[2041564]))
    ref _4_idxType[2041657]:int(64)[13] "temp"
    (2041662 'move' _4_idxType[2041657](2041659 '.v' c[2041621] _4_idxType[2041566]))
    (2041624 call on_fn[1288539] _1_e[2041633] _2_rvfDerefTmp[2041641] _3_rhs_data[2041649] _4_idxType[2041657])
    (2041665 return _void[55])
  }
  function wrapon_fn[2041722](const in arg dummy_locale_arg[2041724]:chpl_localeID_t[209294], in arg buf[2041726]:c_void_ptr[149], in arg buf_size[2041728]:int(64)[13], in arg c[2041730]:_class_localson_fn[2041688]) : void[4] "on block"
  {
    val _0_tmp[2041735]:chpl_localeID_t[209294] "temp"
    (2041740 'move' _0_tmp[2041735](2041737 '.v' c[2041730] _0_tmp[2041691]))
    val _1_rvfDerefTmp[2041742]:BaseArrOverRectangularDom(1,int(64),false)[1256130] "temp"
    (2041747 'move' _1_rvfDerefTmp[2041742](2041744 '.v' c[2041730] _1_rvfDerefTmp[2041693]))
    (2041733 call on_fn[1288898] _1_rvfDerefTmp[2041742])
    (2041750 return _void[55])
  }
  function wrapon_fn[2043005](const in arg dummy_locale_arg[2043007]:chpl_localeID_t[209294], in arg buf[2043009]:c_void_ptr[149], in arg buf_size[2043011]:int(64)[13], in arg c[2043013]:_class_localson_fn[2042953]) : void[4] "on block"
  {
    val _0_tmp[2043018]:chpl_localeID_t[209294] "temp"
    (2043023 'move' _0_tmp[2043018](2043020 '.v' c[2043013] _0_tmp[2042956]))
    val _1_this[2043025]:BaseDom[146725] "temp"
    (2043030 'move' _1_this[2043025](2043027 '.v' c[2043013] _1_this[2042958]))
    val _2_x[2043033]:BaseArr[149541] "temp"
    (2043038 'move' _2_x[2043033](2043035 '.v' c[2043013] _2_x[2042960]))
    ref _3_count[2043041]:int(64)[13] "temp"
    (2043046 'move' _3_count[2043041](2043043 '.v' c[2043013] _3_count[2042962]))
    (2043016 call on_fn[1467777] _1_this[2043025] _2_x[2043033] _3_count[2043041])
    (2043049 return _void[55])
  }
}