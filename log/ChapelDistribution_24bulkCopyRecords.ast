AST dump for ChapelDistribution after pass bulkCopyRecords.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  type _class_localson_fn[2156232] val _runtime_hdr[2156233]:chpl_comm_on_bundle_t[209359] val _0_tmp[2156235]:chpl_localeID_t[209352] val _1_this[2156237]:BaseDom[146767] val _2_x[2156239]:BaseArr[149584] ref _3_count[2156241]:int(64)[13]
  type _class_localson_fn[2154983] val _runtime_hdr[2154984]:chpl_comm_on_bundle_t[209359] val _0_tmp[2154986]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2154988]:BaseArrOverRectangularDom(1,int(64),false)[1256280]
  type _class_localson_fn[2154850] val _runtime_hdr[2154851]:chpl_comm_on_bundle_t[209359] val _0_tmp[2154853]:chpl_localeID_t[209352] val _1_e[2154855]:BaseArr[149584] val _2_rvfDerefTmp[2154857]:BaseArrOverRectangularDom(1,int(64),false)[1256280] val _3_rhs_data[2154859]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] ref _4_idxType[2154861]:int(64)[13]
  type _class_localson_fn[2154748] val _runtime_hdr[2154749]:chpl_comm_on_bundle_t[209359] val _0_tmp[2154751]:chpl_localeID_t[209352] val _1_this[2154753]:BaseDom[146767] val _2_x[2154755]:BaseArr[149584]
  type _class_localson_fn[2147945] val _runtime_hdr[2147946]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147948]:chpl_localeID_t[209352] val _1_this[2147950]:BaseDom[146767] ref _2_free_dom[2147952]:bool[10] val _3_rvfDerefTmp[2147954]:BaseDist[145968] ref _4_remove_dist[2147956]:bool[10]
  type _class_localson_fn[2147823] val _runtime_hdr[2147824]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147826]:chpl_localeID_t[209352] val _1_this[2147828]:BaseDist[145968] val _2_x[2147830]:BaseDom[146767] ref _3_count[2147832]:int(64)[13]
  type _class_localson_fn[2147716] val _runtime_hdr[2147717]:chpl_comm_on_bundle_t[209359] val _0_tmp[2147719]:chpl_localeID_t[209352] val _1_this[2147721]:BaseDist[145968] ref _2_free_dist[2147723]:bool[10]
  function chpl__init_ChapelDistribution[416027]() : void[4] "insert line file info" "module init" "resolved"
  {
    (520445 return _void[55])
  }
  function BaseDist[145968].deinit[145498](const in arg this[145970]:BaseDist[145968]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1847962]
    ref _field_destructor_tmp_[1847960]:_ref(chpl_LocalSpinlock)[941132] "temp"
    (1847967 'move' _field_destructor_tmp_[1847960](1847964 '.' this[145970] _domsLock[145481]))
    (1847969 call deinit[820455] _field_destructor_tmp_[1847960])
    ref _field_destructor_tmp_[1847972]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "temp"
    (1847977 'move' _field_destructor_tmp_[1847972](1847974 '.' this[145970] _doms[145476]))
    (1847979 call deinit[1650021] _field_destructor_tmp_[1847972])
    val _parent_destructor_tmp_[1847982]:object[22] "temp"
    (1847987 'move' _parent_destructor_tmp_[1847982](1847983 'cast' object[22] this[145970]))
    (1847989 call deinit[749440] _parent_destructor_tmp_[1847982])
    (519721 return _void[55])
  }
  function BaseDist[145968].remove[145505](const in arg this[145974]:BaseDist[145968]) : BaseDist[145968] "dont disable remote value forwarding" "method" "primary method" "resolved"
  {
    val ret[519725]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    val free_dist[145511]:bool[10] "dead at end of block" "insert auto destroy"
    (543572 'move' free_dist[145511] 0)
    const-val call_tmp[667456]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1834816]:int(32)[95] "temp"
    (1834820 'move' _virtual_method_tmp_[1834816](1834818 'getcid' this[145974]))
    (667459 'move' call_tmp[667456](145518 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1834816] this[145974]))
    const-val call_tmp[667461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667464 'move' call_tmp[667461] call_tmp[667456])
    if call_tmp[667461]
    {
      const-val tmp[145576]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[667466]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (667469 'move' call_tmp[667466](145573 '_wide_get_locale' this[145974]))
      (145578 'move' tmp[145576] call_tmp[667466])
      val isdirect[2147699]:bool[10] "temp"
      (2147704 'move' isdirect[2147699](2147701 call chpl_doDirectExecuteOn[187469] tmp[145576]))
      if isdirect[2147699]
      {
        (2147708 call on_fn[935213] this[145974] free_dist[145511])
      }
      {
        val _args_foron_fn[2147726]:_class_localson_fn[2147716] "temp"
        (2147730 'move' _args_foron_fn[2147726](2147728 'stack allocate class' _class_localson_fn[2147716]))
        (2147732 '.=' _args_foron_fn[2147726] _0_tmp[2147719] tmp[145576])
        (2147736 '.=' _args_foron_fn[2147726] _1_this[2147721] this[145974])
        ref tmp[2147740]:bool[10] "temp"
        (2147744 'move' tmp[2147740](2147742 'set reference' free_dist[145511]))
        (2147746 '.=' _args_foron_fn[2147726] _2_free_dist[2147723] tmp[2147740])
        val _args_vforon_fn[2147750]:c_void_ptr[149] "temp"
        (2147754 'move' _args_vforon_fn[2147750](2147752 'cast_to_void_star' _args_foron_fn[2147726]))
        val _args_sizeon_fn[2147756]:int(64)[13] "temp"
        (2147760 'move' _args_sizeon_fn[2147756](2147758 'sizeof_bundle' _class_localson_fn[2147716]))
        on(2147800 call wrapon_fn[2147762] tmp[145576] _args_vforon_fn[2147750] _args_sizeon_fn[2147756] _args_foron_fn[2147726])
      }
      {
      }
    }
    {
      (145587 call =[435217] free_dist[145511] 1)
    }
    const-val call_tmp[667525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667528 'move' call_tmp[667525] free_dist[145511])
    if call_tmp[667525]
    {
      val call_tmp[667530]:BaseDist[145968] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (667533 'move' call_tmp[667530](145599 call _to_unmanaged[1491798] this[145974]))
      (519731 'move' ret[519725] call_tmp[667530])
      gotoReturn _end_remove[519723] _end_remove[519723]
    }
    {
      (519737 'move' ret[519725](1491845 'cast' BaseDist[145968] nil[44]))
      gotoReturn _end_remove[519723] _end_remove[519723]
    }
    label _end_remove[519723]
    (519727 return ret[519725])
  }
  function BaseDist[145968].remove_dom[145621](const in arg this[145978]:BaseDist[145968], const in arg x[145618]:BaseDom[146767]) : bool[10] "inline" "method" "primary method" "resolved"
  {
    val ret[519743]:bool[10] "dead after last mention" "RVV" "temp"
    val count[145627]:int(64)[13] "dead at end of block" "insert auto destroy"
    (543576 'move' count[145627] -1)
    const-val tmp[145696]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[667540]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667543 'move' call_tmp[667540](145693 '_wide_get_locale' this[145978]))
    (145698 'move' tmp[145696] call_tmp[667540])
    val isdirect[2147805]:bool[10] "temp"
    (2147810 'move' isdirect[2147805](2147807 call chpl_doDirectExecuteOn[187469] tmp[145696]))
    if isdirect[2147805]
    {
      (2147814 call on_fn[935222] this[145978] x[145618] count[145627])
    }
    {
      val _args_foron_fn[2147835]:_class_localson_fn[2147823] "temp"
      (2147839 'move' _args_foron_fn[2147835](2147837 'stack allocate class' _class_localson_fn[2147823]))
      (2147841 '.=' _args_foron_fn[2147835] _0_tmp[2147826] tmp[145696])
      (2147845 '.=' _args_foron_fn[2147835] _1_this[2147828] this[145978])
      (2147849 '.=' _args_foron_fn[2147835] _2_x[2147830] x[145618])
      ref tmp[2147853]:int(64)[13] "temp"
      (2147857 'move' tmp[2147853](2147855 'set reference' count[145627]))
      (2147859 '.=' _args_foron_fn[2147835] _3_count[2147832] tmp[2147853])
      val _args_vforon_fn[2147863]:c_void_ptr[149] "temp"
      (2147867 'move' _args_vforon_fn[2147863](2147865 'cast_to_void_star' _args_foron_fn[2147835]))
      val _args_sizeon_fn[2147869]:int(64)[13] "temp"
      (2147873 'move' _args_sizeon_fn[2147869](2147871 'sizeof_bundle' _class_localson_fn[2147823]))
      on(2147921 call wrapon_fn[2147875] tmp[145696] _args_vforon_fn[2147863] _args_sizeon_fn[2147869] _args_foron_fn[2147835])
    }
    {
    }
    const-val call_tmp[667608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667611 'move' call_tmp[667608](145706 call ==[435671] count[145627] 0))
    (1491198 'move' ret[519743] call_tmp[667608])
    gotoReturn _end_remove_dom[519741] _end_remove_dom[519741]
    label _end_remove_dom[519741]
    (519745 return ret[519743])
  }
  function BaseDist[145968].dsiDestroyDist[145894](const in arg this[146006]:BaseDist[145968]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519779 return _void[55])
  }
  function BaseDist[145968].dsiTrackDomains[145939](const in arg this[146018]:BaseDist[145968]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519794]:bool[10] "dead after last mention" "RVV" "temp"
    (519799 'move' ret[519794] 1)
    (519796 return ret[519794])
  }
  function BaseDist[145968].init[786850](const in arg this[786853]:BaseDist[145968], const  ref arg _doms[786864]:chpl__simpleSet(unmanaged BaseDom)[1208703], const  ref arg _domsLock[786879]:chpl_LocalSpinlock[187432], const in arg _free_when_no_doms[786892]:bool[10], const in arg pid[786905]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__doms[1209010]:chpl__simpleSet(unmanaged BaseDom)[1208703] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209016 'move' _formal_tmp__doms[1209010] _doms[786864])
    val _formal_tmp__domsLock[1209011]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209020 'move' _formal_tmp__domsLock[1209011] _domsLock[786879])
    val _formal_tmp__free_when_no_doms[1209012]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1209027 'move' _formal_tmp__free_when_no_doms[1209012](1209024 call chpl__initCopy[1034945] _free_when_no_doms[786892]))
    val _formal_tmp_pid[1209013]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1209033 'move' _formal_tmp_pid[1209013](1209030 call chpl__initCopy[955393] pid[786905]))
    val super_tmp[786922]:object[22] "dead after last mention" "temporary of super field" "temp"
    (786924 'move' super_tmp[786922](786921 '.v' this[786853] super[355695]))
    (786863 call init[749424] super_tmp[786922])
    val tmp[786927]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[786979]:object[22] "dead at end of block" "maybe param" "temp"
    (786982 'move' call_tmp[786979](786938 'cast' object[22] this[786853]))
    val chpl__thisAsParent[786935]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (786970 'move' chpl__thisAsParent[786935](1209039 call chpl__initCopy[945332] call_tmp[786979]))
    (786941 'setcid' chpl__thisAsParent[786935])
    (786943 '.=' this[786853] _doms[145476] _formal_tmp__doms[1209010])
    (786946 '.=' this[786853] _domsLock[145481] _formal_tmp__domsLock[1209011])
    (786949 '.=' this[786853] _free_when_no_doms[145486] _formal_tmp__free_when_no_doms[1209012])
    (786952 '.=' this[786853] pid[145492] _formal_tmp_pid[1209013])
    (786955 'setcid' this[786853])
    (786968 return _void[55])
  }
  function BaseDist[145968]._doms[801288](const in arg this[801292]:BaseDist[145968]) ref : _ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801302]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "dead after last mention" "RVV" "temp"
    ref call_tmp[801309]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "dead after last mention" "maybe param" "temp"
    (801312 'move' call_tmp[801309](801296 '.' this[801292] _doms[145476]))
    (801307 'move' ret[801302] call_tmp[801309])
    (801304 return ret[801302])
  }
  function BaseDist[145968]._domsLock[801314](const in arg this[801318]:BaseDist[145968]) ref : _ref(chpl_LocalSpinlock)[941132] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801328]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "RVV" "temp"
    ref call_tmp[801335]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
    (801338 'move' call_tmp[801335](801322 '.' this[801318] _domsLock[145481]))
    (801333 'move' ret[801328] call_tmp[801335])
    (801330 return ret[801328])
  }
  function BaseDist[145968]._free_when_no_doms[801340](const in arg this[801344]:BaseDist[145968]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801354]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[801361]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (801364 'move' call_tmp[801361](801348 '.' this[801344] _free_when_no_doms[145486]))
    (801359 'move' ret[801354] call_tmp[801361])
    (801356 return ret[801354])
  }
  function BaseDist[145968].pid[801366](const in arg this[801370]:BaseDist[145968]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801380]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[801387]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (801390 'move' call_tmp[801387](801374 '.' this[801370] pid[145492]))
    (801385 'move' ret[801380] call_tmp[801387])
    (801382 return ret[801380])
  }
  type BaseDist[145968] val super[355695]:object[22] "super class" val _doms[145476]:chpl__simpleSet(unmanaged BaseDom)[1208703] val _domsLock[145481]:chpl_LocalSpinlock[187432] val _free_when_no_doms[145486]:bool[10] val pid[145492]:int(64)[13]
  function BaseDom[146767].init[146064](const in arg this[146769]:BaseDom[146767]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[461730]:object[22] "dead after last mention" "temporary of super field" "temp"
    (461738 'move' super_tmp[461730](461731 '.v' this[146769] super[355699]))
    (461734 call init[749424] super_tmp[461730])
    val tmp[461665]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[667650]:object[22] "dead at end of block" "maybe param" "temp"
    (667653 'move' call_tmp[667650](461676 'cast' object[22] this[146769]))
    val chpl__thisAsParent[461673]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (543580 'move' chpl__thisAsParent[461673](1247502 call chpl__initCopy[945332] call_tmp[667650]))
    (461679 'setcid' chpl__thisAsParent[461673])
    val tmp[461682]:chpl__simpleSet(unmanaged BaseArr)[1208403] "dead after last mention" "temp"
    val call_tmp[667655]:chpl__simpleSet(unmanaged BaseArr)[1208403] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_table[1250867]:chpl__hashtable(unmanaged BaseArr,nothing)[1208489] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1869306]:chpl__hashtable(unmanaged BaseArr,nothing)[1208489] "temp"
    (1250869 call init_default_table[1247589] ret_tmp[1869306])
    (1869309 'move' default_arg_table[1250867] ret_tmp[1869306])
    (1247524 call init[1247529] tmp[461682] default_arg_table[1250867])
    (461689 '.=' this[146769] _arrs[146037] tmp[461682])
    val tmp[461693]:int(64)[13] "dead after last mention" "temp"
    (1250876 'move' tmp[461693] 0)
    (461698 '.=' this[146769] _arrs_containing_dom[146042] tmp[461693])
    val tmp[461702]:chpl_LocalSpinlock[187432] "dead after last mention" "temp"
    const-val default_arg_l[1250886]:AtomicBool[45877] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1865556]:AtomicBool[45877] "temp"
    (1250888 call init_default_l[944889] ret_tmp[1865556])
    (1865559 'move' default_arg_l[1250886] ret_tmp[1865556])
    (1250878 call init[820382] tmp[461702] default_arg_l[1250886])
    (461707 '.=' this[146769] _arrsLock[146047] tmp[461702])
    val tmp[461711]:bool[10] "dead after last mention" "temp"
    (1250895 'move' tmp[461711] 0)
    (461716 '.=' this[146769] _free_when_no_arrs[146052] tmp[461711])
    val tmp[461721]:int(64)[13] "dead after last mention" "temp"
    (461724 'move' tmp[461721] -1)
    (461726 '.=' this[146769] pid[146058] tmp[461721])
    (461741 'setcid' this[146769])
    (519819 return _void[55])
  }
  function BaseDom[146767].deinit[146071](const in arg this[146773]:BaseDom[146767]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1847994]
    ref _field_destructor_tmp_[1847992]:_ref(chpl_LocalSpinlock)[941132] "temp"
    (1847999 'move' _field_destructor_tmp_[1847992](1847996 '.' this[146773] _arrsLock[146047]))
    (1848001 call deinit[820455] _field_destructor_tmp_[1847992])
    ref _field_destructor_tmp_[1848004]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
    (1848009 'move' _field_destructor_tmp_[1848004](1848006 '.' this[146773] _arrs[146037]))
    (1848011 call deinit[1646937] _field_destructor_tmp_[1848004])
    val _parent_destructor_tmp_[1848014]:object[22] "temp"
    (1848019 'move' _parent_destructor_tmp_[1848014](1848015 'cast' object[22] this[146773]))
    (1848021 call deinit[749440] _parent_destructor_tmp_[1848014])
    (519821 return _void[55])
  }
  function BaseDom[146767].dsiMyDist[146078](const in arg this[146777]:BaseDom[146767]) : BaseDist[145968] "method" "primary method" "resolved" "virtual"
  {
    val ret[519825]:BaseDist[145968] "dead after last mention" "RVV" "temp"
    (146101 call halt[154111] "internal error: dsiMyDist is not implemented")
    val ret[146106]:BaseDist[145968] "dead at end of block" "insert auto destroy" "unsafe"
    (1487036 'move' ret[146106](1487034 'cast' BaseDist[145968] nil[44]))
    (1487031 'move' ret[519825] ret[146106])
    gotoReturn _end_dsiMyDist[519823] _end_dsiMyDist[519823]
    label _end_dsiMyDist[519823]
    (519827 return ret[519825])
  }
  function BaseDom[146767].remove[146118](const in arg this[146781]:BaseDom[146767], ref arg _retArg[1864608]:_ref((unmanaged BaseDom?,unmanaged BaseDist?))[1487005]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[519837]:(unmanaged BaseDom?,unmanaged BaseDist?)[1486942] "dead after last mention" "RVV" "temp"
    val call_tmp[667662]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1834823]:int(32)[95] "temp"
    (1834827 'move' _virtual_method_tmp_[1834823](1834825 'getcid' this[146781]))
    (667665 'move' call_tmp[667662](146132 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1834823] this[146781]))
    const-val call_tmp[667669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1487038]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487043 'move' coerce_tmp[1487038] call_tmp[667662])
    const-val _virtual_method_tmp_[1834830]:int(32)[95] "temp"
    (1834834 'move' _virtual_method_tmp_[1834830](1834832 'getcid' coerce_tmp[1487038]))
    (667672 'move' call_tmp[667669](146139 'virtual method call' dsiTrackDomains[145939] _virtual_method_tmp_[1834830] coerce_tmp[1487038]))
    const-val call_tmp[667676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1834837]:int(32)[95] "temp"
    (1834841 'move' _virtual_method_tmp_[1834837](1834839 'getcid' this[146781]))
    (667679 'move' call_tmp[667676](146142 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1834837] this[146781]))
    const-val call_tmp[667681]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667684 'move' call_tmp[667681](146143 call ==[938] call_tmp[667669] call_tmp[667676]))
    (146146 call assert[210365] call_tmp[667681])
    val ret_dom[146153]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1487049]:BaseDom[146767] "dead at end of block" "temp"
    (1487052 'move' init_coerce_tmp[1487049](1491379 'cast' BaseDom[146767] nil[44]))
    (543584 'move' ret_dom[146153] init_coerce_tmp[1487049])
    val ret_dist[146161]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1487055]:BaseDist[145968] "dead at end of block" "temp"
    (1487058 'move' init_coerce_tmp[1487055](1491383 'cast' BaseDist[145968] nil[44]))
    (543586 'move' ret_dist[146161] init_coerce_tmp[1487055])
    val call_tmp[667688]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1834844]:int(32)[95] "temp"
    (1834848 'move' _virtual_method_tmp_[1834844](1834846 'getcid' this[146781]))
    (667691 'move' call_tmp[667688](146167 'virtual method call' dsiMyDist[146078] _virtual_method_tmp_[1834844] this[146781]))
    val dist[146168]:BaseDist[145968] "dead at end of block" "insert auto destroy"
    (543588 'move' dist[146168](1487062 call chpl__initCopy[1487064] call_tmp[667688]))
    val free_dom[146173]:bool[10] "dead at end of block" "insert auto destroy"
    (543590 'move' free_dom[146173] 0)
    val remove_dist[146178]:bool[10] "dead at end of block" "insert auto destroy"
    (543592 'move' remove_dist[146178] 0)
    const-val tmp[146266]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[667693]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (667696 'move' call_tmp[667693](146263 '_wide_get_locale' this[146781]))
    (146268 'move' tmp[146266] call_tmp[667693])
    val rvfDerefTmp[2145185]:BaseDist[145968] "concurrently accessed" "temp"
    (2145188 'move' rvfDerefTmp[2145185] dist[146168])
    val isdirect[2147926]:bool[10] "temp"
    (2147931 'move' isdirect[2147926](2147928 call chpl_doDirectExecuteOn[187469] tmp[146266]))
    if isdirect[2147926]
    {
      (2147935 call on_fn[935240] this[146781] free_dom[146173] rvfDerefTmp[2145185] remove_dist[146178])
    }
    {
      val _args_foron_fn[2147959]:_class_localson_fn[2147945] "temp"
      (2147963 'move' _args_foron_fn[2147959](2147961 'stack allocate class' _class_localson_fn[2147945]))
      (2147965 '.=' _args_foron_fn[2147959] _0_tmp[2147948] tmp[146266])
      (2147969 '.=' _args_foron_fn[2147959] _1_this[2147950] this[146781])
      ref tmp[2147973]:bool[10] "temp"
      (2147977 'move' tmp[2147973](2147975 'set reference' free_dom[146173]))
      (2147979 '.=' _args_foron_fn[2147959] _2_free_dom[2147952] tmp[2147973])
      (2147983 '.=' _args_foron_fn[2147959] _3_rvfDerefTmp[2147954] rvfDerefTmp[2145185])
      ref tmp[2147987]:bool[10] "temp"
      (2147991 'move' tmp[2147987](2147989 'set reference' remove_dist[146178]))
      (2147993 '.=' _args_foron_fn[2147959] _4_remove_dist[2147956] tmp[2147987])
      val _args_vforon_fn[2147997]:c_void_ptr[149] "temp"
      (2148001 'move' _args_vforon_fn[2147997](2147999 'cast_to_void_star' _args_foron_fn[2147959]))
      val _args_sizeon_fn[2148003]:int(64)[13] "temp"
      (2148007 'move' _args_sizeon_fn[2148003](2148005 'sizeof_bundle' _class_localson_fn[2147945]))
      on(2148063 call wrapon_fn[2148009] tmp[146266] _args_vforon_fn[2147997] _args_sizeon_fn[2148003] _args_foron_fn[2147959])
    }
    {
    }
    const-val call_tmp[667778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667781 'move' call_tmp[667778] free_dom[146173])
    if call_tmp[667778]
    {
      val call_tmp[667783]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
      (667786 'move' call_tmp[667783](146279 call _to_unmanaged[1487104] this[146781]))
      val coerce_tmp[1491202]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1491208 'move' coerce_tmp[1491202] call_tmp[667783])
      (146280 call =[1486062] ret_dom[146153] coerce_tmp[1491202])
    }
    const-val call_tmp[667788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667791 'move' call_tmp[667788] remove_dist[146178])
    if call_tmp[667788]
    {
      val coerce_tmp[1491287]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1491293 'move' coerce_tmp[1491287] dist[146168])
      (146291 call =[1491252] ret_dist[146161] coerce_tmp[1491287])
    }
    const-val call_tmp[667793]:(unmanaged BaseDom?,unmanaged BaseDist?)[1486942] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1873719]:(unmanaged BaseDom?,unmanaged BaseDist?)[1486942] "temp"
    (146302 call _build_tuple[1491296] ret_dom[146153] ret_dist[146161] ret_tmp[1873719])
    (1873722 'move' call_tmp[667793] ret_tmp[1873719])
    val call_tmp[667798]:(unmanaged BaseDom?,unmanaged BaseDist?)[1486942] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1491388 'move' ret[519837] call_tmp[667793])
    gotoReturn _end_remove[519835] _end_remove[519835]
    label _end_remove[519835]
    (1864610 '=' _retArg[1864608] ret[519837])
    (1864612 return _void[55])
  }
  function BaseDom[146767].remove_arr[1484602](const in arg this[1484606]:BaseDom[146767], const in arg x[1484608]:BaseArr[149584]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1484618]:bool[10] "dead after last mention" "RVV" "temp"
    val count[1484631]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1484633 'move' count[1484631] -1)
    const-val tmp[1484637]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[1484639]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1484641 'move' call_tmp[1484639](1484643 '_wide_get_locale' this[1484606]))
    (1484645 'move' tmp[1484637] call_tmp[1484639])
    val isdirect[2156214]:bool[10] "temp"
    (2156219 'move' isdirect[2156214](2156216 call chpl_doDirectExecuteOn[187469] tmp[1484637]))
    if isdirect[2156214]
    {
      (2156223 call on_fn[1484652] this[1484606] x[1484608] count[1484631])
    }
    {
      val _args_foron_fn[2156244]:_class_localson_fn[2156232] "temp"
      (2156248 'move' _args_foron_fn[2156244](2156246 'stack allocate class' _class_localson_fn[2156232]))
      (2156250 '.=' _args_foron_fn[2156244] _0_tmp[2156235] tmp[1484637])
      (2156254 '.=' _args_foron_fn[2156244] _1_this[2156237] this[1484606])
      (2156258 '.=' _args_foron_fn[2156244] _2_x[2156239] x[1484608])
      ref tmp[2156262]:int(64)[13] "temp"
      (2156266 'move' tmp[2156262](2156264 'set reference' count[1484631]))
      (2156268 '.=' _args_foron_fn[2156244] _3_count[2156241] tmp[2156262])
      val _args_vforon_fn[2156272]:c_void_ptr[149] "temp"
      (2156276 'move' _args_vforon_fn[2156272](2156274 'cast_to_void_star' _args_foron_fn[2156244]))
      val _args_sizeon_fn[2156278]:int(64)[13] "temp"
      (2156282 'move' _args_sizeon_fn[2156278](2156280 'sizeof_bundle' _class_localson_fn[2156232]))
      on(2156330 call wrapon_fn[2156284] tmp[1484637] _args_vforon_fn[2156272] _args_sizeon_fn[2156278] _args_foron_fn[2156244])
    }
    {
    }
    const-val call_tmp[1484816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1484818 'move' call_tmp[1484816](1484821 call ==[435671] count[1484631] 0))
    (1486018 'move' ret[1484618] call_tmp[1484816])
    gotoReturn _end_remove_arr[1484833] _end_remove_arr[1484833]
    label _end_remove_arr[1484833]
    (1484835 return ret[1484618])
  }
  function BaseDom[146767].add_arr[1264803](const in arg this[1264807]:BaseDom[146767], const in arg x[1264809]:BaseArr[149584]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1264825]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    const-val call_tmp[1264827]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264829 'move' call_tmp[1264827](1264831 '_wide_get_locale' this[1264807]))
    (1264833 'move' tmp[1264825] call_tmp[1264827])
    val isdirect[2154731]:bool[10] "temp"
    (2154736 'move' isdirect[2154731](2154733 call chpl_doDirectExecuteOn[187469] tmp[1264825]))
    if isdirect[2154731]
    {
      (2154740 call on_fn[1264840] this[1264807] x[1264809])
    }
    {
      val _args_foron_fn[2154758]:_class_localson_fn[2154748] "temp"
      (2154762 'move' _args_foron_fn[2154758](2154760 'stack allocate class' _class_localson_fn[2154748]))
      (2154764 '.=' _args_foron_fn[2154758] _0_tmp[2154751] tmp[1264825])
      (2154768 '.=' _args_foron_fn[2154758] _1_this[2154753] this[1264807])
      (2154772 '.=' _args_foron_fn[2154758] _2_x[2154755] x[1264809])
      val _args_vforon_fn[2154776]:c_void_ptr[149] "temp"
      (2154780 'move' _args_vforon_fn[2154776](2154778 'cast_to_void_star' _args_foron_fn[2154758]))
      val _args_sizeon_fn[2154782]:int(64)[13] "temp"
      (2154786 'move' _args_sizeon_fn[2154782](2154784 'sizeof_bundle' _class_localson_fn[2154748]))
      on(2154826 call wrapon_fn[2154788] tmp[1264825] _args_vforon_fn[2154776] _args_sizeon_fn[2154782] _args_foron_fn[2154758])
    }
    {
    }
    (1264933 return _void[55])
  }
  function BaseDom[146767].dsiLinksDistribution[146679](const in arg this[146813]:BaseDom[146767]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519906]:bool[10] "dead after last mention" "RVV" "temp"
    (519911 'move' ret[519906] 1)
    (519908 return ret[519906])
  }
  function BaseDom[146767].dsiDestroyDom[146689](const in arg this[146817]:BaseDom[146767]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519913 return _void[55])
  }
  function BaseDom[146767]._arrs[801450](const in arg this[801454]:BaseDom[146767]) ref : _ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801464]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "RVV" "temp"
    ref call_tmp[801471]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "maybe param" "temp"
    (801474 'move' call_tmp[801471](801458 '.' this[801454] _arrs[146037]))
    (801469 'move' ret[801464] call_tmp[801471])
    (801466 return ret[801464])
  }
  function BaseDom[146767]._arrs_containing_dom[801476](const in arg this[801480]:BaseDom[146767]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801490]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[801497]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (801500 'move' call_tmp[801497](801484 '.' this[801480] _arrs_containing_dom[146042]))
    (801495 'move' ret[801490] call_tmp[801497])
    (801492 return ret[801490])
  }
  function BaseDom[146767]._arrsLock[801502](const in arg this[801506]:BaseDom[146767]) ref : _ref(chpl_LocalSpinlock)[941132] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801516]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "RVV" "temp"
    ref call_tmp[801523]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
    (801526 'move' call_tmp[801523](801510 '.' this[801506] _arrsLock[146047]))
    (801521 'move' ret[801516] call_tmp[801523])
    (801518 return ret[801516])
  }
  function BaseDom[146767]._free_when_no_arrs[801528](const in arg this[801532]:BaseDom[146767]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801542]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[801549]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (801552 'move' call_tmp[801549](801536 '.' this[801532] _free_when_no_arrs[146052]))
    (801547 'move' ret[801542] call_tmp[801549])
    (801544 return ret[801542])
  }
  function BaseDom[146767].pid[801554](const in arg this[801558]:BaseDom[146767]) ref : _ref(int(64))[936633] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801568]:_ref(int(64))[936633] "dead after last mention" "RVV" "temp"
    ref call_tmp[801575]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
    (801578 'move' call_tmp[801575](801562 '.' this[801558] pid[146058]))
    (801573 'move' ret[801568] call_tmp[801575])
    (801570 return ret[801568])
  }
  type BaseDom[146767] val super[355699]:object[22] "super class" val _arrs[146037]:chpl__simpleSet(unmanaged BaseArr)[1208403] val _arrs_containing_dom[146042]:int(64)[13] val _arrsLock[146047]:chpl_LocalSpinlock[187432] val _free_when_no_arrs[146052]:bool[10] val pid[146058]:int(64)[13]
  function BaseRectangularDom(1,int(64),false)[1250960].deinit[1791091](const in arg this[1791095]:BaseRectangularDom(1,int(64),false)[1250960]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1849821]
    val _parent_destructor_tmp_[1849816]:BaseDom[146767] "temp"
    (1849823 'move' _parent_destructor_tmp_[1849816](1849817 'cast' BaseDom[146767] this[1791095]))
    (1849825 call deinit[146071] _parent_destructor_tmp_[1849816])
    (1791101 return _void[55])
  }
  function BaseRectangularDom(1,int(64),false)[1250960].init[1247391](const in arg this[1247395]:BaseRectangularDom(1,int(64),false)[1250960]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1838975]:int(64)[13] "temp"
    val super_tmp[1247411]:BaseDom[146767] "dead after last mention" "temporary of super field" "temp"
    (1247413 'move' super_tmp[1247411](1247415 '.v' this[1247395] super[1250950]))
    (1247422 call init[146064] super_tmp[1247411])
    val tmp[1247424]:BaseDom[146767] "dead after last mention" "temp" "type variable"
    val call_tmp[1247443]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    (1247445 'move' call_tmp[1247443](1247447 'cast' BaseDom[146767] this[1247395]))
    val chpl__thisAsParent[1247450]:BaseDom[146767] "dead at end of block" "insert auto destroy" "temp"
    (1247452 'move' chpl__thisAsParent[1247450](1250898 call chpl__initCopy[1250900] call_tmp[1247443]))
    (1247456 'setcid' chpl__thisAsParent[1247450])
    (1247488 'setcid' this[1247395])
    (1247490 return _void[55])
  }
  type BaseRectangularDom(1,int(64),false)[1250960] val super[1250950]:BaseDom[146767] "super class"
  function BaseArr[149584].deinit[148925](const in arg this[149602]:BaseArr[149584]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1848029]
    val _parent_destructor_tmp_[1848024]:object[22] "temp"
    (1848031 'move' _parent_destructor_tmp_[1848024](1848025 'cast' object[22] this[149602]))
    (1848033 call deinit[749440] _parent_destructor_tmp_[1848024])
    (520265 return _void[55])
  }
  function BaseArr[149584].dsiGetBaseDom[148944](const in arg this[149610]:BaseArr[149584]) : BaseDom[146767] "method" "primary method" "resolved" "virtual"
  {
    val ret[520278]:BaseDom[146767] "dead after last mention" "RVV" "temp"
    (148967 call halt[154111] "internal error: dsiGetBaseDom is not implemented")
    val ret[148972]:BaseDom[146767] "dead at end of block" "insert auto destroy" "unsafe"
    (1484518 'move' ret[148972](1484516 'cast' BaseDom[146767] nil[44]))
    (1484513 'move' ret[520278] ret[148972])
    gotoReturn _end_dsiGetBaseDom[520276] _end_dsiGetBaseDom[520276]
    label _end_dsiGetBaseDom[520276]
    (520280 return ret[520278])
  }
  function BaseArr[149584].remove[1484369](const in arg this[1484373]:BaseArr[149584], ref arg _retArg[1873625]:_ref((BaseArr,unmanaged BaseDom?))[1486238]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1484377]:(BaseArr,unmanaged BaseDom?)[1486148] "dead after last mention" "RVV" "temp"
    val ret_arr[1484385]:BaseArr[149584] "dead at end of block" "insert auto destroy"
    (1484387 'move' ret_arr[1484385](1484490 call chpl__initCopy[1256220] this[1484373]))
    val ret_dom[1484391]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1484503]:BaseDom[146767] "dead at end of block" "temp"
    (1484506 'move' init_coerce_tmp[1484503](1486288 'cast' BaseDom[146767] nil[44]))
    (1484393 'move' ret_dom[1484391] init_coerce_tmp[1484503])
    val rm_dom[1484398]:bool[10] "dead at end of block" "insert auto destroy"
    (1484400 'move' rm_dom[1484398] 0)
    val call_tmp[1484404]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1834956]:int(32)[95] "temp"
    (1834960 'move' _virtual_method_tmp_[1834956](1834958 'getcid' this[1484373]))
    (1484406 'move' call_tmp[1484404](1484412 'virtual method call' dsiGetBaseDom[148944] _virtual_method_tmp_[1834956] this[1484373]))
    val dom[1484413]:BaseDom[146767] "dead at end of block" "insert auto destroy"
    (1484415 'move' dom[1484413](1484520 call chpl__initCopy[1484522] call_tmp[1484404]))
    val call_tmp[1484419]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp"
    (1484421 'move' call_tmp[1484419](1484424 call _to_unmanaged[1484541] this[1484373]))
    const-val call_tmp[1484426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1484837]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1484842 'move' coerce_tmp[1484837] dom[1484413])
    (1484428 'move' call_tmp[1484426](1484434 call remove_arr[1484602] coerce_tmp[1484837] call_tmp[1484419]))
    (1484438 call =[435217] rm_dom[1484398] call_tmp[1484426])
    const-val call_tmp[1484444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1484446 'move' call_tmp[1484444] rm_dom[1484398])
    if call_tmp[1484444]
    {
      val coerce_tmp[1486097]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1486103 'move' coerce_tmp[1486097] dom[1484413])
      (1484454 call =[1486062] ret_dom[1484391] coerce_tmp[1486097])
    }
    const-val call_tmp[1484461]:(BaseArr,unmanaged BaseDom?)[1486148] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1873643]:(BaseArr,unmanaged BaseDom?)[1486148] "temp"
    (1484466 call _build_tuple[1486106] ret_arr[1484385] ret_dom[1484391] ret_tmp[1873643])
    (1873646 'move' call_tmp[1484461] ret_tmp[1873643])
    (1484469 'move' ret[1484377] call_tmp[1484461])
    gotoReturn _end_remove[1484478] _end_remove[1484478]
    label _end_remove[1484478]
    (1873627 '=' _retArg[1873625] ret[1484377])
    (1873629 return _void[55])
  }
  function BaseArr[149584].dsiDestroyArr[149115](const in arg this[149626]:BaseArr[149584], const in arg deinitElts[149112]:bool[10]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (149136 call halt[154111] "dsiDestroyArr must be defined")
    (520303 return _void[55])
  }
  function BaseArr[149584].decEltCountsIfNeeded[149578](const in arg this[149706]:BaseArr[149584]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (520385 return _void[55])
  }
  function BaseArr[149584]._decEltRefCounts[806741](const in arg this[806745]:BaseArr[149584]) ref : _ref(bool)[937260] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[806755]:_ref(bool)[937260] "dead after last mention" "RVV" "temp"
    ref call_tmp[806762]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    (806765 'move' call_tmp[806762](806749 '.' this[806745] _decEltRefCounts[148879]))
    (806760 'move' ret[806755] call_tmp[806762])
    (806757 return ret[806755])
  }
  function BaseArr[149584].init[806767](const in arg this[806770]:BaseArr[149584], const in arg pid[806781]:int(64)[13], const in arg _decEltRefCounts[806796]:bool[10]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_pid[1256193]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1256200 'move' _formal_tmp_pid[1256193](1256197 call chpl__initCopy[955393] pid[806781]))
    val _formal_tmp__decEltRefCounts[1256194]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1256206 'move' _formal_tmp__decEltRefCounts[1256194](1256203 call chpl__initCopy[1034945] _decEltRefCounts[806796]))
    val super_tmp[806813]:object[22] "dead after last mention" "temporary of super field" "temp"
    (806815 'move' super_tmp[806813](806812 '.v' this[806770] super[355707]))
    (806780 call init[749424] super_tmp[806813])
    val tmp[806818]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[806863]:object[22] "dead at end of block" "maybe param" "temp"
    (806866 'move' call_tmp[806863](806829 'cast' object[22] this[806770]))
    val chpl__thisAsParent[806826]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (806854 'move' chpl__thisAsParent[806826](1256212 call chpl__initCopy[945332] call_tmp[806863]))
    (806832 'setcid' chpl__thisAsParent[806826])
    (806834 '.=' this[806770] pid[148873] _formal_tmp_pid[1256193])
    (806837 '.=' this[806770] _decEltRefCounts[148879] _formal_tmp__decEltRefCounts[1256194])
    (806840 'setcid' this[806770])
    (806852 return _void[55])
  }
  type BaseArr[149584] val super[355707]:object[22] "super class" val pid[148873]:int(64)[13] val _decEltRefCounts[148879]:bool[10]
  function BaseArrOverRectangularDom(1,int(64),false)[1256280].dsiReallocate[1297553](const in arg this[1297557]:BaseArrOverRectangularDom(1,int(64),false)[1256280], const  ref arg bounds[1297597]:1*range(int(64),bounded,false)[1244757]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (1297616 call halt[154111] "reallocating not supported for this array type")
    (1297618 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256280].dsiPostReallocate[1297680](const in arg this[1297684]:BaseArrOverRectangularDom(1,int(64),false)[1256280]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1297690 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256280].deinit[1791152](const in arg this[1791156]:BaseArrOverRectangularDom(1,int(64),false)[1256280]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1849833]
    val _parent_destructor_tmp_[1849828]:BaseArr[149584] "temp"
    (1849835 'move' _parent_destructor_tmp_[1849828](1849829 'cast' BaseArr[149584] this[1791156]))
    (1849837 call deinit[148925] _parent_destructor_tmp_[1849828])
    (1791162 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256280].init[1256070](const in arg this[1256074]:BaseArrOverRectangularDom(1,int(64),false)[1256280], const in arg pid[1256080]:int(64)[13], const in arg _decEltRefCounts[1256086]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839020]:int(64)[13] "temp"
    val super_tmp[1256102]:BaseArr[149584] "dead after last mention" "temporary of super field" "temp"
    (1256104 'move' super_tmp[1256102](1256106 '.v' this[1256074] super[1256270]))
    (1256113 call init[806767] super_tmp[1256102] pid[1256080] _decEltRefCounts[1256086])
    val tmp[1256117]:BaseArr[149584] "dead after last mention" "temp" "type variable"
    val call_tmp[1256136]:BaseArr[149584] "dead at end of block" "maybe param" "temp"
    (1256138 'move' call_tmp[1256136](1256140 'cast' BaseArr[149584] this[1256074]))
    val chpl__thisAsParent[1256143]:BaseArr[149584] "dead at end of block" "insert auto destroy" "temp"
    (1256145 'move' chpl__thisAsParent[1256143](1256218 call chpl__initCopy[1256220] call_tmp[1256136]))
    (1256149 'setcid' chpl__thisAsParent[1256143])
    (1256181 'setcid' this[1256074])
    (1256183 return _void[55])
  }
  type BaseArrOverRectangularDom(1,int(64),false)[1256280] val super[1256270]:BaseArr[149584] "super class"
  function BaseRectangularArr(1,int(64),false,locale)[1256333].deinit[1791164](const in arg this[1791168]:BaseRectangularArr(1,int(64),false,locale)[1256333]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1849845]
    val _parent_destructor_tmp_[1849840]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1849847 'move' _parent_destructor_tmp_[1849840](1849841 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791168]))
    (1849849 call deinit[1791152] _parent_destructor_tmp_[1849840])
    (1791174 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059].deinit[1791188](const in arg this[1791192]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1849909]
    val _parent_destructor_tmp_[1849904]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1849911 'move' _parent_destructor_tmp_[1849904](1849905 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791192]))
    (1849913 call deinit[1791152] _parent_destructor_tmp_[1849904])
    (1791198 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358602].deinit[1791212](const in arg this[1791216]:BaseRectangularArr(1,int(64),false,real(64))[1358602]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1849973]
    val _parent_destructor_tmp_[1849968]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1849975 'move' _parent_destructor_tmp_[1849968](1849969 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791216]))
    (1849977 call deinit[1791152] _parent_destructor_tmp_[1849968])
    (1791222 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800].deinit[1791236](const in arg this[1791240]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1850037]
    val _parent_destructor_tmp_[1850032]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1850039 'move' _parent_destructor_tmp_[1850032](1850033 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791240]))
    (1850041 call deinit[1791152] _parent_destructor_tmp_[1850032])
    (1791246 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1419794].deinit[1791260](const in arg this[1791264]:BaseRectangularArr(1,int(64),false,int(64))[1419794]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1850101]
    val _parent_destructor_tmp_[1850096]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1850103 'move' _parent_destructor_tmp_[1850096](1850097 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791264]))
    (1850105 call deinit[1791152] _parent_destructor_tmp_[1850096])
    (1791270 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1438377].deinit[1791284](const in arg this[1791288]:BaseRectangularArr(1,int(64),false,uint(64))[1438377]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1850165]
    val _parent_destructor_tmp_[1850160]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1850167 'move' _parent_destructor_tmp_[1850160](1850161 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1791288]))
    (1850169 call deinit[1791152] _parent_destructor_tmp_[1850160])
    (1791294 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256333].decEltCountsIfNeeded[1797123](const in arg this[1797127]:BaseRectangularArr(1,int(64),false,locale)[1256333]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1797133]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1797172]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1797178 'move' coerce_tmp[1797172](1797174 'cast' BaseArr[149584] this[1797127]))
    (1797135 'move' call_tmp[1797133](1797138 call _decEltRefCounts[806741] coerce_tmp[1797172]))
    const-val call_tmp[1797141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1797181]:bool[10] "dead after last mention" "const" "temp"
    (1797183 'move' tmp[1797181](1797185 'deref' call_tmp[1797133]))
    (1797143 'move' call_tmp[1797141] tmp[1797181])
    if call_tmp[1797141]
    {
      val call_tmp[1797150]:BaseRectangularArr(1,int(64),false,locale)[1256333] "dead after last mention" "expr temp" "maybe param" "temp"
      (1797152 'move' call_tmp[1797150](1797155 call _to_unmanaged[1797187] this[1797127]))
      val call_tmp[1797157]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1797592]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1797598 'move' coerce_tmp[1797592](1797594 'cast' BaseArr[149584] call_tmp[1797150]))
      (1797166 call chpl_decRefCountsForDomainsInArrayEltTypes[1797250] coerce_tmp[1797592])
    }
    (1797170 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059].decEltCountsIfNeeded[1797605](const in arg this[1797609]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1797615]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1797654]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1797660 'move' coerce_tmp[1797654](1797656 'cast' BaseArr[149584] this[1797609]))
    (1797617 'move' call_tmp[1797615](1797620 call _decEltRefCounts[806741] coerce_tmp[1797654]))
    const-val call_tmp[1797623]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1797663]:bool[10] "dead after last mention" "const" "temp"
    (1797665 'move' tmp[1797663](1797667 'deref' call_tmp[1797615]))
    (1797625 'move' call_tmp[1797623] tmp[1797663])
    if call_tmp[1797623]
    {
      val call_tmp[1797632]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059] "dead after last mention" "expr temp" "maybe param" "temp"
      (1797634 'move' call_tmp[1797632](1797637 call _to_unmanaged[1797669] this[1797609]))
      val call_tmp[1797639]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1798074]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1798080 'move' coerce_tmp[1798074](1798076 'cast' BaseArr[149584] call_tmp[1797632]))
      (1797648 call chpl_decRefCountsForDomainsInArrayEltTypes[1797732] coerce_tmp[1798074])
    }
    (1797652 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358602].decEltCountsIfNeeded[1798087](const in arg this[1798091]:BaseRectangularArr(1,int(64),false,real(64))[1358602]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1798097]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1798136]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1798142 'move' coerce_tmp[1798136](1798138 'cast' BaseArr[149584] this[1798091]))
    (1798099 'move' call_tmp[1798097](1798102 call _decEltRefCounts[806741] coerce_tmp[1798136]))
    const-val call_tmp[1798105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1798145]:bool[10] "dead after last mention" "const" "temp"
    (1798147 'move' tmp[1798145](1798149 'deref' call_tmp[1798097]))
    (1798107 'move' call_tmp[1798105] tmp[1798145])
    if call_tmp[1798105]
    {
      val call_tmp[1798114]:BaseRectangularArr(1,int(64),false,real(64))[1358602] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798116 'move' call_tmp[1798114](1798119 call _to_unmanaged[1798151] this[1798091]))
      val call_tmp[1798121]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1798556]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1798562 'move' coerce_tmp[1798556](1798558 'cast' BaseArr[149584] call_tmp[1798114]))
      (1798130 call chpl_decRefCountsForDomainsInArrayEltTypes[1798214] coerce_tmp[1798556])
    }
    (1798134 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800].decEltCountsIfNeeded[1798569](const in arg this[1798573]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1798579]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1798618]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1798624 'move' coerce_tmp[1798618](1798620 'cast' BaseArr[149584] this[1798573]))
    (1798581 'move' call_tmp[1798579](1798584 call _decEltRefCounts[806741] coerce_tmp[1798618]))
    const-val call_tmp[1798587]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1798627]:bool[10] "dead after last mention" "const" "temp"
    (1798629 'move' tmp[1798627](1798631 'deref' call_tmp[1798579]))
    (1798589 'move' call_tmp[1798587] tmp[1798627])
    if call_tmp[1798587]
    {
      val call_tmp[1798596]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798598 'move' call_tmp[1798596](1798601 call _to_unmanaged[1798633] this[1798573]))
      val call_tmp[1798603]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1798696]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1798702 'move' coerce_tmp[1798696](1798698 'cast' BaseArr[149584] call_tmp[1798596]))
      (1798612 call chpl_decRefCountsForDomainsInArrayEltTypes[1500448] coerce_tmp[1798696])
    }
    (1798616 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1419794].decEltCountsIfNeeded[1798705](const in arg this[1798709]:BaseRectangularArr(1,int(64),false,int(64))[1419794]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1798715]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1798754]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1798760 'move' coerce_tmp[1798754](1798756 'cast' BaseArr[149584] this[1798709]))
    (1798717 'move' call_tmp[1798715](1798720 call _decEltRefCounts[806741] coerce_tmp[1798754]))
    const-val call_tmp[1798723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1798763]:bool[10] "dead after last mention" "const" "temp"
    (1798765 'move' tmp[1798763](1798767 'deref' call_tmp[1798715]))
    (1798725 'move' call_tmp[1798723] tmp[1798763])
    if call_tmp[1798723]
    {
      val call_tmp[1798732]:BaseRectangularArr(1,int(64),false,int(64))[1419794] "dead after last mention" "expr temp" "maybe param" "temp"
      (1798734 'move' call_tmp[1798732](1798737 call _to_unmanaged[1798769] this[1798709]))
      val call_tmp[1798739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1799174]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1799180 'move' coerce_tmp[1799174](1799176 'cast' BaseArr[149584] call_tmp[1798732]))
      (1798748 call chpl_decRefCountsForDomainsInArrayEltTypes[1798832] coerce_tmp[1799174])
    }
    (1798752 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1438377].decEltCountsIfNeeded[1799187](const in arg this[1799191]:BaseRectangularArr(1,int(64),false,uint(64))[1438377]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1799197]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1799236]:BaseArr[149584] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1799242 'move' coerce_tmp[1799236](1799238 'cast' BaseArr[149584] this[1799191]))
    (1799199 'move' call_tmp[1799197](1799202 call _decEltRefCounts[806741] coerce_tmp[1799236]))
    const-val call_tmp[1799205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1799245]:bool[10] "dead after last mention" "const" "temp"
    (1799247 'move' tmp[1799245](1799249 'deref' call_tmp[1799197]))
    (1799207 'move' call_tmp[1799205] tmp[1799245])
    if call_tmp[1799205]
    {
      val call_tmp[1799214]:BaseRectangularArr(1,int(64),false,uint(64))[1438377] "dead after last mention" "expr temp" "maybe param" "temp"
      (1799216 'move' call_tmp[1799214](1799219 call _to_unmanaged[1799251] this[1799191]))
      val call_tmp[1799221]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1799656]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1799662 'move' coerce_tmp[1799656](1799658 'cast' BaseArr[149584] call_tmp[1799214]))
      (1799230 call chpl_decRefCountsForDomainsInArrayEltTypes[1799314] coerce_tmp[1799656])
    }
    (1799234 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256333].init[1255884](const in arg this[1255888]:BaseRectangularArr(1,int(64),false,locale)[1256333], const in arg pid[1255894]:int(64)[13], const in arg _decEltRefCounts[1255900]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839018]:locale[28] "temp"
    val _formal_type_tmp_[1839016]:int(64)[13] "temp"
    val super_tmp[1255920]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1255922 'move' super_tmp[1255920](1255924 '.v' this[1255888] super[1256329]))
    (1255931 call init[1256070] super_tmp[1255920] pid[1255894] _decEltRefCounts[1255900])
    val tmp[1255938]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1255957]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1255959 'move' call_tmp[1255957](1255961 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1255888]))
    val chpl__thisAsParent[1255964]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1255966 'move' chpl__thisAsParent[1255964](1256307 call chpl__initCopy[1256309] call_tmp[1255957]))
    (1255970 'setcid' chpl__thisAsParent[1255964])
    (1255977 'setcid' this[1255888])
    (1255979 return _void[55])
  }
  function init_default__decEltRefCounts[1256030]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1256032]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1256037]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1256041]:bool[10] "dead after last mention" "temp"
    val _formal_type[1256043]:bool[10] "dead after last mention" "temp" "type variable"
    (1256051 'move' tmp[1256041] 0)
    (1256054 'move' _decEltRefCounts[1256037] tmp[1256041])
    (1256059 'move' ret[1256032] _decEltRefCounts[1256037])
    (1256035 return ret[1256032])
  }
  function init_default_pid[1255990]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255992]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1255997]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1256001]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1256003]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1256011 'move' tmp[1256001] -1)
    (1256014 'move' pid[1255997] tmp[1256001])
    (1256019 'move' ret[1255992] pid[1255997])
    (1255995 return ret[1255992])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059].init[1317863](const in arg this[1317867]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059], const in arg pid[1317873]:int(64)[13], const in arg _decEltRefCounts[1317879]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839079]:localesSignal[92278] "temp"
    val _formal_type_tmp_[1839077]:int(64)[13] "temp"
    val super_tmp[1317899]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1317901 'move' super_tmp[1317899](1317903 '.v' this[1317867] super[1318055]))
    (1317910 call init[1256070] super_tmp[1317899] pid[1317873] _decEltRefCounts[1317879])
    val tmp[1317917]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1317936]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1317938 'move' call_tmp[1317936](1317940 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1317867]))
    val chpl__thisAsParent[1317943]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1317945 'move' chpl__thisAsParent[1317943](1318051 call chpl__initCopy[1256309] call_tmp[1317936]))
    (1317949 'setcid' chpl__thisAsParent[1317943])
    (1317956 'setcid' this[1317867])
    (1317958 return _void[55])
  }
  function init_default__decEltRefCounts[1318009]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1318011]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1318016]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1318020]:bool[10] "dead after last mention" "temp"
    val _formal_type[1318022]:bool[10] "dead after last mention" "temp" "type variable"
    (1318030 'move' tmp[1318020] 0)
    (1318033 'move' _decEltRefCounts[1318016] tmp[1318020])
    (1318038 'move' ret[1318011] _decEltRefCounts[1318016])
    (1318014 return ret[1318011])
  }
  function init_default_pid[1317969]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317971]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1317976]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317980]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1317982]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1317990 'move' tmp[1317980] -1)
    (1317993 'move' pid[1317976] tmp[1317980])
    (1317998 'move' ret[1317971] pid[1317976])
    (1317974 return ret[1317971])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358602].init[1358406](const in arg this[1358410]:BaseRectangularArr(1,int(64),false,real(64))[1358602], const in arg pid[1358416]:int(64)[13], const in arg _decEltRefCounts[1358422]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839166]:real(64)[16] "temp"
    val _formal_type_tmp_[1839164]:int(64)[13] "temp"
    val super_tmp[1358442]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1358444 'move' super_tmp[1358442](1358446 '.v' this[1358410] super[1358598]))
    (1358453 call init[1256070] super_tmp[1358442] pid[1358416] _decEltRefCounts[1358422])
    val tmp[1358460]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1358479]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1358481 'move' call_tmp[1358479](1358483 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1358410]))
    val chpl__thisAsParent[1358486]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1358488 'move' chpl__thisAsParent[1358486](1358594 call chpl__initCopy[1256309] call_tmp[1358479]))
    (1358492 'setcid' chpl__thisAsParent[1358486])
    (1358499 'setcid' this[1358410])
    (1358501 return _void[55])
  }
  function init_default__decEltRefCounts[1358552]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358554]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1358559]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358563]:bool[10] "dead after last mention" "temp"
    val _formal_type[1358565]:bool[10] "dead after last mention" "temp" "type variable"
    (1358573 'move' tmp[1358563] 0)
    (1358576 'move' _decEltRefCounts[1358559] tmp[1358563])
    (1358581 'move' ret[1358554] _decEltRefCounts[1358559])
    (1358557 return ret[1358554])
  }
  function init_default_pid[1358512]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358514]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1358519]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358523]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1358525]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1358533 'move' tmp[1358523] -1)
    (1358536 'move' pid[1358519] tmp[1358523])
    (1358541 'move' ret[1358514] pid[1358519])
    (1358517 return ret[1358514])
  }
  function BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800].init[1384604](const in arg this[1384608]:BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800], const in arg pid[1384614]:int(64)[13], const in arg _decEltRefCounts[1384620]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839216]:range(int(64),bounded,false)[1026875] "temp"
    val _formal_type_tmp_[1839214]:int(64)[13] "temp"
    val super_tmp[1384640]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1384642 'move' super_tmp[1384640](1384644 '.v' this[1384608] super[1384796]))
    (1384651 call init[1256070] super_tmp[1384640] pid[1384614] _decEltRefCounts[1384620])
    val tmp[1384658]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1384677]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1384679 'move' call_tmp[1384677](1384681 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1384608]))
    val chpl__thisAsParent[1384684]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1384686 'move' chpl__thisAsParent[1384684](1384792 call chpl__initCopy[1256309] call_tmp[1384677]))
    (1384690 'setcid' chpl__thisAsParent[1384684])
    (1384697 'setcid' this[1384608])
    (1384699 return _void[55])
  }
  function init_default__decEltRefCounts[1384750]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1384752]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1384757]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1384761]:bool[10] "dead after last mention" "temp"
    val _formal_type[1384763]:bool[10] "dead after last mention" "temp" "type variable"
    (1384771 'move' tmp[1384761] 0)
    (1384774 'move' _decEltRefCounts[1384757] tmp[1384761])
    (1384779 'move' ret[1384752] _decEltRefCounts[1384757])
    (1384755 return ret[1384752])
  }
  function init_default_pid[1384710]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1384712]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1384717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1384721]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1384723]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1384731 'move' tmp[1384721] -1)
    (1384734 'move' pid[1384717] tmp[1384721])
    (1384739 'move' ret[1384712] pid[1384717])
    (1384715 return ret[1384712])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1419794].init[1419598](const in arg this[1419602]:BaseRectangularArr(1,int(64),false,int(64))[1419794], const in arg pid[1419608]:int(64)[13], const in arg _decEltRefCounts[1419614]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839269]:int(64)[13] "temp"
    val _formal_type_tmp_[1839267]:int(64)[13] "temp"
    val super_tmp[1419634]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1419636 'move' super_tmp[1419634](1419638 '.v' this[1419602] super[1419790]))
    (1419645 call init[1256070] super_tmp[1419634] pid[1419608] _decEltRefCounts[1419614])
    val tmp[1419652]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1419671]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1419673 'move' call_tmp[1419671](1419675 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1419602]))
    val chpl__thisAsParent[1419678]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1419680 'move' chpl__thisAsParent[1419678](1419786 call chpl__initCopy[1256309] call_tmp[1419671]))
    (1419684 'setcid' chpl__thisAsParent[1419678])
    (1419691 'setcid' this[1419602])
    (1419693 return _void[55])
  }
  function init_default__decEltRefCounts[1419744]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1419746]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1419751]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1419755]:bool[10] "dead after last mention" "temp"
    val _formal_type[1419757]:bool[10] "dead after last mention" "temp" "type variable"
    (1419765 'move' tmp[1419755] 0)
    (1419768 'move' _decEltRefCounts[1419751] tmp[1419755])
    (1419773 'move' ret[1419746] _decEltRefCounts[1419751])
    (1419749 return ret[1419746])
  }
  function init_default_pid[1419704]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1419706]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1419711]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1419715]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1419717]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1419725 'move' tmp[1419715] -1)
    (1419728 'move' pid[1419711] tmp[1419715])
    (1419733 'move' ret[1419706] pid[1419711])
    (1419709 return ret[1419706])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1438377].init[1438181](const in arg this[1438185]:BaseRectangularArr(1,int(64),false,uint(64))[1438377], const in arg pid[1438191]:int(64)[13], const in arg _decEltRefCounts[1438197]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1839307]:uint(64)[115] "temp"
    val _formal_type_tmp_[1839305]:int(64)[13] "temp"
    val super_tmp[1438217]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temporary of super field" "temp"
    (1438219 'move' super_tmp[1438217](1438221 '.v' this[1438185] super[1438373]))
    (1438228 call init[1256070] super_tmp[1438217] pid[1438191] _decEltRefCounts[1438197])
    val tmp[1438235]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "temp" "type variable"
    val call_tmp[1438254]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
    (1438256 'move' call_tmp[1438254](1438258 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256280] this[1438185]))
    val chpl__thisAsParent[1438261]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "temp"
    (1438263 'move' chpl__thisAsParent[1438261](1438369 call chpl__initCopy[1256309] call_tmp[1438254]))
    (1438267 'setcid' chpl__thisAsParent[1438261])
    (1438274 'setcid' this[1438185])
    (1438276 return _void[55])
  }
  function init_default__decEltRefCounts[1438327]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1438329]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1438334]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1438338]:bool[10] "dead after last mention" "temp"
    val _formal_type[1438340]:bool[10] "dead after last mention" "temp" "type variable"
    (1438348 'move' tmp[1438338] 0)
    (1438351 'move' _decEltRefCounts[1438334] tmp[1438338])
    (1438356 'move' ret[1438329] _decEltRefCounts[1438334])
    (1438332 return ret[1438329])
  }
  function init_default_pid[1438287]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1438289]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1438294]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1438298]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1438300]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1438308 'move' tmp[1438298] -1)
    (1438311 'move' pid[1438294] tmp[1438298])
    (1438316 'move' ret[1438289] pid[1438294])
    (1438292 return ret[1438289])
  }
  type BaseRectangularArr(1,int(64),false,locale)[1256333] val super[1256329]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  type BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318059] val super[1318055]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  type BaseRectangularArr(1,int(64),false,real(64))[1358602] val super[1358598]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  type BaseRectangularArr(1,int(64),false,range(int(64),bounded,false))[1384800] val super[1384796]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  type BaseRectangularArr(1,int(64),false,int(64))[1419794] val super[1419790]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  type BaseRectangularArr(1,int(64),false,uint(64))[1438377] val super[1438373]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "super class"
  function _delete_dist[150617](const in arg dist[150614]:BaseDist[145968], const in arg privatized[150620]:bool[10]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[1496214]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1496219 'move' coerce_tmp[1496214] dist[150614])
    (150630 call dsiDestroyDist[145894] coerce_tmp[1496214])
    const-val tmp[568714]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[568722]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (568724 'move' tmp[568722] privatized[150620])
    (568729 'move' tmp[568714] tmp[568722])
    const-val call_tmp[669648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (669651 'move' call_tmp[669648] tmp[568714])
    if call_tmp[669648]
    {
      ref call_tmp[669655]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1496227]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1496232 'move' coerce_tmp[1496227] dist[150614])
      (669658 'move' call_tmp[669655](150639 call pid[801366] coerce_tmp[1496227]))
      const-val coerce_tmp[1496235]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1496239 'move' coerce_tmp[1496235](1496237 'deref' call_tmp[669655]))
      val coerce_tmp[1496241]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1496247 'move' coerce_tmp[1496241](1496243 'cast' object[22] dist[150614]))
      (150644 call _freePrivatizedClass[1493234] coerce_tmp[1496235] coerce_tmp[1496241])
    }
    (150653 call chpl__delete[1496250] dist[150614])
    (520435 return _void[55])
  }
  function _delete_dom[1493114](const in arg dom[1493116]:BaseDom[146767], const in arg privatized[1493118]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1493213]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1493218 'move' coerce_tmp[1493213] dom[1493116])
    (1493128 call dsiDestroyDom[146689] coerce_tmp[1493213])
    const-val tmp[1493148]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1493166]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1493168 'move' tmp[1493166] privatized[1493118])
    (1493173 'move' tmp[1493148] tmp[1493166])
    const-val call_tmp[1493185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1493187 'move' call_tmp[1493185] tmp[1493148])
    if call_tmp[1493185]
    {
      ref call_tmp[1493194]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1493226]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1493231 'move' coerce_tmp[1493226] dom[1493116])
      (1493196 'move' call_tmp[1493194](1493199 call pid[801554] coerce_tmp[1493226]))
      const-val coerce_tmp[1493567]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1493571 'move' coerce_tmp[1493567](1493569 'deref' call_tmp[1493194]))
      val coerce_tmp[1493573]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1493579 'move' coerce_tmp[1493573](1493575 'cast' object[22] dom[1493116]))
      (1493203 call _freePrivatizedClass[1493234] coerce_tmp[1493567] coerce_tmp[1493573])
    }
    (1493208 call chpl__delete[1495145] dom[1493116])
    (1493210 return _void[55])
  }
  function _delete_dom[1656485](const in arg dom[1656487]:domain(1,int(64),false)[1250995], const in arg privatized[1656489]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1656584]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1656589 'move' coerce_tmp[1656584](1656586 'cast' BaseDom[146767] dom[1656487]))
    (1656499 call dsiDestroyDom[146689] coerce_tmp[1656584])
    const-val tmp[1656519]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1656537]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1656539 'move' tmp[1656537] privatized[1656489])
    (1656544 'move' tmp[1656519] tmp[1656537])
    const-val call_tmp[1656556]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1656558 'move' call_tmp[1656556] tmp[1656519])
    if call_tmp[1656556]
    {
      ref call_tmp[1656565]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1656597]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1656602 'move' coerce_tmp[1656597](1656599 'cast' BaseDom[146767] dom[1656487]))
      (1656567 'move' call_tmp[1656565](1656570 call pid[801554] coerce_tmp[1656597]))
      const-val coerce_tmp[1656605]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1656609 'move' coerce_tmp[1656605](1656607 'deref' call_tmp[1656565]))
      val coerce_tmp[1656611]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1656617 'move' coerce_tmp[1656611](1656613 'cast' object[22] dom[1656487]))
      (1656574 call _freePrivatizedClass[1493234] coerce_tmp[1656605] coerce_tmp[1656611])
    }
    (1656579 call chpl__delete[1656620] dom[1656487])
    (1656581 return _void[55])
  }
  function _delete_arr[1491883](const in arg arr[1491885]:BaseArr[149584], const in arg deinitElts[1491893]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1492004]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1492009 'move' coerce_tmp[1492004] arr[1491885])
    val _virtual_method_tmp_[1834963]:int(32)[95] "temp"
    (1834967 'move' _virtual_method_tmp_[1834963](1834965 'getcid' coerce_tmp[1492004]))
    (1491903 'virtual method call' dsiDestroyArr[149115] _virtual_method_tmp_[1834963] coerce_tmp[1492004] deinitElts[1491893])
    val coerce_tmp[1492013]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1492018 'move' coerce_tmp[1492013] arr[1491885])
    val _virtual_method_tmp_[1834970]:int(32)[95] "temp"
    (1834974 'move' _virtual_method_tmp_[1834970](1834972 'getcid' coerce_tmp[1492013]))
    (1491911 'virtual method call' decEltCountsIfNeeded[149578] _virtual_method_tmp_[1834970] coerce_tmp[1492013])
    (1491991 call chpl__delete[1492028] arr[1491885])
    (1491993 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[1288513](const in arg lhs[1288515]:domain(1,int(64),false)[1250995], const  ref arg rhs[1288517]:domain(1,int(64),false)[1252658]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val arrType[1288579]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289169]:BaseRectangularDom(1,int(64),false)[1250960] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289175 'move' coerce_tmp[1289169](1289171 'cast' BaseRectangularDom(1,int(64),false)[1250960] lhs[1288515]))
    const-val idxType[1288607]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289424]:BaseRectangularDom(1,int(64),false)[1250960] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289430 'move' coerce_tmp[1289424](1289426 'cast' BaseRectangularDom(1,int(64),false)[1250960] lhs[1288515]))
    {
      val _indexOfInterest[1288634]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288636]:_ic_these__ref_chpl__simpleSet_BaseArr[1290280] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288638]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1289436]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1289442 'move' coerce_tmp[1289436](1289438 'cast' BaseDom[146767] lhs[1288515]))
      (1288640 'move' call_tmp[1288638](1288643 call _arrs[801450] coerce_tmp[1289436]))
      (1288646 'move' _iterator[1288636](1288649 call _getIterator[1289445] call_tmp[1288638]))
      {
        val ret[1954398]:_ir_these__ref_chpl__simpleSet_BaseArr[1290286] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1954400]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1954402]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289706] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1954404]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead at end of block" "maybe param" "temp"
        ref this[1954546]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
        (1954551 'move' this[1954546](1954548 '.v' _iterator[1288636] F0_this[2068587]))
        (1954406 'move' call_tmp[1954404](1954409 call table[1265130] this[1954546]))
        const-val call_tmp[1954411]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1954413]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "temp"
        (1954416 call allSlots[1289615] call_tmp[1954404] ret_tmp[1954413])
        (1954419 'move' call_tmp[1954411] ret_tmp[1954413])
        (1954422 'move' _iterator[1954402](1954425 call _getIterator[1289721] call_tmp[1954411]))
        {
          val ret[2020899]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2020901]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2020903]:_ic__allSlots[1221661] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2020905]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
          ref this[2021199]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "temp"
          (2021204 'move' this[2021199](2021201 '.v' _iterator[1954402] F0_this[2069047]))
          (2020907 'move' call_tmp[2020905](2020910 call tableSize[1247929] this[2021199]))
          const-val call_tmp[2020912]:_ir__allSlots[1221667] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2020914]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2020916 'move' coerce_tmp[2020914](2020918 'deref' call_tmp[2020905]))
          const-val ret_tmp[2020920]:_ir__allSlots[1221667] "temp"
          (2020923 call _allSlots[201320] coerce_tmp[2020914] ret_tmp[2020920])
          (2020926 'move' call_tmp[2020912] ret_tmp[2020920])
          (2020929 'move' _iterator[2020903](2020932 call _getIterator[1221676] call_tmp[2020912]))
          {
            val ret[2020935]:_ir__allSlots[1221667] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2020937]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2020939]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2020941]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2020943]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
            const-val size[2020945]:int(64)[13] "temp"
            (2020947 'move' size[2020945](2020949 '.v' _iterator[2020903] F0_size[2054272]))
            (2020953 call chpl_direct_counted_range_iter[458039] 0 size[2020945] ret_tmp[2020943])
            (2020957 'move' call_tmp[2020941] ret_tmp[2020943])
            (2020960 'move' _iterator[2020939](2020963 call _getIterator[1103866] call_tmp[2020941]))
            {
              val ret[2020966]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2020968]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2020970]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2020972]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2020974]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
              const-val low[2020976]:int(64)[13] "temp"
              (2020978 'move' low[2020976](2020980 '.v' _iterator[2020939] F0_low[2058106]))
              const-val count[2020983]:int(64)[13] "temp"
              (2020985 'move' count[2020983](2020987 '.v' _iterator[2020939] F1_count[2058110]))
              (2020991 call chpl_direct_counted_range_iter_helper[1102159] low[2020976] count[2020983] ret_tmp[2020974])
              (2020995 'move' call_tmp[2020972] ret_tmp[2020974])
              (2020998 'move' _iterator[2020970](2021001 call _getIterator[1103616] call_tmp[2020972]))
              {
                val ret[2042423]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                val call_tmp[2042425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2042427]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2042429]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2042431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2042933]:int(64)[13] "temp"
                (2042938 'move' count[2042933](2042935 '.v' _iterator[2020970] F1_count[2064268]))
                (2042433 'move' call_tmp[2042431](2042436 call <[948459] count[2042933]))
                (2042438 'move' tmp[2042429] call_tmp[2042431])
                (2042441 'move' tmp[2042427] call_tmp[2042431])
                const-val call_tmp[2042444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2042446 'move' call_tmp[2042444] call_tmp[2042431])
                if call_tmp[2042431]
                {
                  (2042452 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2042455]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2042457]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2042459]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2042461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2042940]:int(64)[13] "temp"
                (2042945 'move' count[2042940](2042942 '.v' _iterator[2020970] F1_count[2064268]))
                (2042463 'move' call_tmp[2042461](2042466 call ==[435671] count[2042940] 0))
                (2042469 'move' tmp[2042459] call_tmp[2042461])
                if call_tmp[2042461]
                {
                  const-val tmp[2042474]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2042476]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2042478]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2042947]:int(64)[13] "temp"
                  (2042952 'move' low[2042947](2042949 '.v' _iterator[2020970] F0_low[2064264]))
                  (2042480 'move' call_tmp[2042478](2042483 call _cast[956095] low[2042947]))
                  const-val call_tmp[2042485]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2042487]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2042489 'move' coerce_tmp[2042487](2042491 'cast' uint(64)[115] 1))
                  (2042494 'move' call_tmp[2042485](2042497 call -[962254] call_tmp[2042478]))
                  const-val call_tmp[2042499]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2042501 'move' call_tmp[2042499](2042504 call _cast[953604] call_tmp[2042485]))
                  const-val ret_tmp[2042506]:2*int(64)[1040117] "temp"
                  const-val low[2042954]:int(64)[13] "temp"
                  (2042959 'move' low[2042954](2042956 '.v' _iterator[2020970] F0_low[2064264]))
                  (2042509 call _build_tuple[1040075] low[2042954] call_tmp[2042499] ret_tmp[2042506])
                  (2042513 'move' tmp[2042474] ret_tmp[2042506])
                  (2042516 'move' tmp[2042457] tmp[2042474])
                }
                {
                  const-val tmp[2042520]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2042522]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2042524]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2042961]:int(64)[13] "temp"
                  (2042966 'move' count[2042961](2042963 '.v' _iterator[2020970] F1_count[2064268]))
                  (2042526 'move' call_tmp[2042524] count[2042961])
                  const-val call_tmp[2042529]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2042968]:int(64)[13] "temp"
                  (2042973 'move' count[2042968](2042970 '.v' _iterator[2020970] F1_count[2064268]))
                  (2042531 'move' call_tmp[2042529](2042534 call -[962287] count[2042968]))
                  const-val call_tmp[2042536]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2042975]:int(64)[13] "temp"
                  (2042980 'move' low[2042975](2042977 '.v' _iterator[2020970] F0_low[2064264]))
                  (2042538 'move' call_tmp[2042536](2042541 call +[439679] low[2042975] call_tmp[2042529]))
                  const-val ret_tmp[2042544]:2*int(64)[1040117] "temp"
                  const-val low[2042982]:int(64)[13] "temp"
                  (2042987 'move' low[2042982](2042984 '.v' _iterator[2020970] F0_low[2064264]))
                  (2042547 call _build_tuple[1040075] low[2042982] call_tmp[2042536] ret_tmp[2042544])
                  (2042551 'move' tmp[2042520] ret_tmp[2042544])
                  (2042554 'move' tmp[2042457] tmp[2042520])
                }
                (2042558 '=' tmp[2042455] tmp[2042457])
                (2042561 'noop')
                1
                ref call_tmp[2042563]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2042565 'move' call_tmp[2042563](2042567 '.' tmp[2042455] x0[1040113]))
                const-val start[2042570]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2042572]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2042574 'move' coerce_tmp[2042572](2042576 'deref' call_tmp[2042563]))
                (2042578 '=' start[2042570] coerce_tmp[2042572])
                (2042581 'noop')
                ref call_tmp[2042582]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2042584 'move' call_tmp[2042582](2042586 '.' tmp[2042455] x1[1040115]))
                const-val end[2042589]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2042591]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2042593 'move' coerce_tmp[2042591](2042595 'deref' call_tmp[2042582]))
                (2042597 '=' end[2042589] coerce_tmp[2042591])
                (2042600 'noop')
                val _indexOfInterest[2042601]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2042603]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2042605]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2042607]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                (2042610 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2042572] coerce_tmp[2042591] ret_tmp[2042607])
                (2042614 'move' call_tmp[2042605] ret_tmp[2042607])
                (2042617 'move' _iterator[2042603](2042620 call _getIterator[1103362] call_tmp[2042605]))
                {
                  val ret[2042623]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                  val call_tmp[2042625]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2042628 call chpl_range_check_stride[1102905])
                  val i[2042629]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2042631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2042633 'move' i[2042629] 0)
                  val call_tmp[2042636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2042638]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2042640]:int(64)[13] "temp"
                  (2042642 'move' low[2042640](2042644 '.v' _iterator[2042603] F0_low[2065762]))
                  (2042647 'move' default_arg_first[2042638](2042650 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2042640]))
                  const-val default_arg_last[2042652]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2042654]:int(64)[13] "temp"
                  (2042656 'move' high[2042654](2042658 '.v' _iterator[2042603] F1_high[2065766]))
                  (2042661 'move' default_arg_last[2042652](2042664 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2042654]))
                  const-val _return_tmp_[2042666]:bool[10] "dead after last mention" "temp"
                  const-val low[2042668]:int(64)[13] "temp"
                  (2042670 'move' low[2042668](2042672 '.v' _iterator[2042603] F0_low[2065762]))
                  const-val high[2042675]:int(64)[13] "temp"
                  (2042677 'move' high[2042675](2042679 '.v' _iterator[2042603] F1_high[2065766]))
                  (2042682 'move' _return_tmp_[2042666](2042685 call chpl_checkIfRangeIterWillOverflow[1096137] low[2042668] high[2042675] 1 default_arg_first[2042638] default_arg_last[2042652] 1))
                  CForLoop[2042692] hazard
                  {
                    const-val yret[2042721]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2042723 'move' yret[2042721] i[2042629])
                    const-val _yieldedIndex[2042726]:int(64)[13] "temp"
                    (2042728 'move' _yieldedIndex[2042726] i[2042629])
                    {
                      const-val i[2042732]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2042734 'move' i[2042732] _yieldedIndex[2042726])
                      const-val yret[2042737]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2042739 'move' yret[2042737] _yieldedIndex[2042726])
                      const-val _yieldedIndex[2042767]:int(64)[13] "temp"
                      (2042931 'move' _yieldedIndex[2042767] _yieldedIndex[2042726])
                      {
                        const-val i[2042769]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2042771 'move' i[2042769] _yieldedIndex[2042767])
                        const-val yret[2042774]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2042776 'move' yret[2042774] _yieldedIndex[2042767])
                        const-val _yieldedIndex[2042779]:int(64)[13] "temp"
                        (2042781 'move' _yieldedIndex[2042779] _yieldedIndex[2042767])
                        {
                          const-val slot[2042785]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2042787 'move' slot[2042785] _yieldedIndex[2042779])
                          const-val yret[2042790]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2042792 'move' yret[2042790] _yieldedIndex[2042779])
                          const-val _yieldedIndex[2042795]:int(64)[13] "temp"
                          (2042797 'move' _yieldedIndex[2042795] _yieldedIndex[2042779])
                          {
                            const-val slot[2042801]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2042803 'move' slot[2042801] _yieldedIndex[2042795])
                            const-val yret[2042806]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2042808 'move' yret[2042806] _yieldedIndex[2042795])
                            const-val _yieldedIndex[2042811]:int(64)[13] "temp"
                            (2042813 'move' _yieldedIndex[2042811] _yieldedIndex[2042795])
                            {
                              const-val slot[2042817]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2042819 'move' slot[2042817] _yieldedIndex[2042811])
                              ref call_tmp[2042822]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead after last mention" "maybe param" "temp"
                              ref this[2042824]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
                              (2042826 'move' this[2042824](2042828 '.v' _iterator[1288636] F0_this[2068587]))
                              (2042831 'move' call_tmp[2042822](2042834 call table[1265130] this[2042824]))
                              const-val call_tmp[2042836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2042838 'move' call_tmp[2042836](2042841 call isSlotFull[1290184] call_tmp[2042822] _yieldedIndex[2042811]))
                              const-val call_tmp[2042844]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2042846 'move' call_tmp[2042844] call_tmp[2042836])
                              if call_tmp[2042836]
                              {
                                val yret[2042851]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2042853]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead after last mention" "maybe param" "temp"
                                ref this[2042855]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
                                (2042857 'move' this[2042855](2042859 '.v' _iterator[1288636] F0_this[2068587]))
                                (2042862 'move' call_tmp[2042853](2042865 call table[1265130] this[2042855]))
                                ref call_tmp[2042867]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208541] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2042869]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208564] "dead after last mention" "temp"
                                (2042871 'move' _this_tmp_[2042869](2042874 call table[1247901] call_tmp[2042853]))
                                val coerce_tmp[2042876]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208555] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2042878 'move' coerce_tmp[2042876](2042880 'deref' _this_tmp_[2042869]))
                                (2042882 'move' call_tmp[2042867](2042885 call this[1250451] coerce_tmp[2042876] slot[2042817]))
                                ref call_tmp[2042888]:_ref(BaseArr)[1208378] "dead after last mention" "maybe param" "temp"
                                (2042890 'move' call_tmp[2042888](2042893 call key[1267315] call_tmp[2042867]))
                                val _yieldedIndex[2042895]:BaseArr[149584] "temp"
                                (2042897 'move' _yieldedIndex[2042895](2042899 'deref' call_tmp[2042888]))
                                {
                                  const e[2042902]:BaseArr[149584] "concurrently accessed" "const" "index var" "insert auto destroy"
                                  (2042904 'move' e[2042902] _yieldedIndex[2042895])
                                  {
                                    const-val tmp[2042908]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    const-val call_tmp[2042910]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2042912 'move' call_tmp[2042910](2042914 '_wide_get_locale' e[2042902]))
                                    (2042916 'move' tmp[2042908] call_tmp[2042910])
                                    val rvfDerefTmp[2146050]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "concurrently accessed" "temp"
                                    (2146053 'move' rvfDerefTmp[2146050] arrType[1288579])
                                    val rhs_data[2146056]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
                                    (2146058 call chpl__serialize[1830267] rhs[1288517] rhs_data[2146056])
                                    val isdirect[2154831]:bool[10] "temp"
                                    (2154836 'move' isdirect[2154831](2154833 call chpl_doDirectExecuteOn[187469] tmp[2042908]))
                                    if isdirect[2154831]
                                    {
                                      (2154840 call on_fn[1288689] e[2042902] rvfDerefTmp[2146050] rhs_data[2146056] idxType[1288607])
                                    }
                                    {
                                      val _args_foron_fn[2154864]:_class_localson_fn[2154850] "temp"
                                      (2154868 'move' _args_foron_fn[2154864](2154866 'stack allocate class' _class_localson_fn[2154850]))
                                      (2154870 '.=' _args_foron_fn[2154864] _0_tmp[2154853] tmp[2042908])
                                      (2154874 '.=' _args_foron_fn[2154864] _1_e[2154855] e[2042902])
                                      (2154878 '.=' _args_foron_fn[2154864] _2_rvfDerefTmp[2154857] rvfDerefTmp[2146050])
                                      (2154882 '.=' _args_foron_fn[2154864] _3_rhs_data[2154859] rhs_data[2146056])
                                      ref tmp[2154886]:int(64)[13] "temp"
                                      (2154890 'move' tmp[2154886](2154888 'set reference' idxType[1288607]))
                                      (2154892 '.=' _args_foron_fn[2154864] _4_idxType[2154861] tmp[2154886])
                                      val _args_vforon_fn[2154896]:c_void_ptr[149] "temp"
                                      (2154900 'move' _args_vforon_fn[2154896](2154898 'cast_to_void_star' _args_foron_fn[2154864]))
                                      val _args_sizeon_fn[2154902]:int(64)[13] "temp"
                                      (2154906 'move' _args_sizeon_fn[2154902](2154904 'sizeof_bundle' _class_localson_fn[2154850]))
                                      on(2154962 call wrapon_fn[2154908] tmp[2042908] _args_vforon_fn[2154896] _args_sizeon_fn[2154902] _args_foron_fn[2154864])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[2042927]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2042694]:int(64)[13] "temp"
                      (2042696 'move' low[2042694](2042698 '.v' _iterator[2042603] F0_low[2065762]))
                      (2042701 '=' i[2042629] low[2042694])
                    }
                    {
                      const-val high[2042705]:int(64)[13] "temp"
                      (2042707 'move' high[2042705](2042709 '.v' _iterator[2042603] F1_high[2065766]))
                      (2042712 '<=' i[2042629] high[2042705])
                    }
                    {
                      val call_tmp[2042716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2042718 '+=' i[2042629] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2042755]
                }
                (2042758 call _freeIterator[1103535] _iterator[2042603])
                (2042761 call chpl__autoDestroy[1635435] tmp[2042455])
                label _endchpl_direct_counted_range_iter_helper[2042763]
              }
              (2021065 call _freeIterator[1103785] _iterator[2020970])
              label _endchpl_direct_counted_range_iter[2021067]
            }
            (2021070 call _freeIterator[1104035] _iterator[2020939])
            label _end_allSlots[2021072]
          }
          (2021075 call _freeIterator[1223205] _iterator[2020903])
          label _endallSlots[2021077]
        }
        (1954510 call _freeIterator[1290118] _iterator[1954402])
        label _endthese[1954512]
      }
      label _breakLabel[1288938]
      (1882356 call _freeIterator[1290464] _iterator[1288636])
    }
    const-val call_tmp[1288940]:1*range(int(64),bounded,false)[1244757] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1870954]:1*range(int(64),bounded,false)[1244757] "temp"
    (1288948 call getIndices[1296834] rhs[1288517] ret_tmp[1870954])
    (1870957 'move' call_tmp[1288940] ret_tmp[1870954])
    (1288953 call dsiSetIndices[1251369] lhs[1288515] call_tmp[1288940])
    (1882358 call chpl__autoDestroy[1655778] call_tmp[1288940])
    {
      val _indexOfInterest[1288957]:BaseArr[149584] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288959]:_ic_these__ref_chpl__simpleSet_BaseArr[1290280] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288961]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1297651]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1297657 'move' coerce_tmp[1297651](1297653 'cast' BaseDom[146767] lhs[1288515]))
      (1288963 'move' call_tmp[1288961](1288966 call _arrs[801450] coerce_tmp[1297651]))
      (1288969 'move' _iterator[1288959](1288972 call _getIterator[1289445] call_tmp[1288961]))
      {
        val ret[1954568]:_ir_these__ref_chpl__simpleSet_BaseArr[1290286] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1954570]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1954572]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289706] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1954574]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead at end of block" "maybe param" "temp"
        ref this[1954748]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
        (1954753 'move' this[1954748](1954750 '.v' _iterator[1288959] F0_this[2068587]))
        (1954576 'move' call_tmp[1954574](1954579 call table[1265130] this[1954748]))
        const-val call_tmp[1954581]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1954583]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "temp"
        (1954586 call allSlots[1289615] call_tmp[1954574] ret_tmp[1954583])
        (1954589 'move' call_tmp[1954581] ret_tmp[1954583])
        (1954592 'move' _iterator[1954572](1954595 call _getIterator[1289721] call_tmp[1954581]))
        {
          val ret[2021207]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289712] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[2021209]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[2021211]:_ic__allSlots[1221661] "dead at end of block" "expr temp" "temp"
          ref call_tmp[2021213]:_ref(int(64))[936633] "dead at end of block" "maybe param" "temp"
          ref this[2021539]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "temp"
          (2021544 'move' this[2021539](2021541 '.v' _iterator[1954572] F0_this[2069047]))
          (2021215 'move' call_tmp[2021213](2021218 call tableSize[1247929] this[2021539]))
          const-val call_tmp[2021220]:_ir__allSlots[1221667] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2021222]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2021224 'move' coerce_tmp[2021222](2021226 'deref' call_tmp[2021213]))
          const-val ret_tmp[2021228]:_ir__allSlots[1221667] "temp"
          (2021231 call _allSlots[201320] coerce_tmp[2021222] ret_tmp[2021228])
          (2021234 'move' call_tmp[2021220] ret_tmp[2021228])
          (2021237 'move' _iterator[2021211](2021240 call _getIterator[1221676] call_tmp[2021220]))
          {
            val ret[2021243]:_ir__allSlots[1221667] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2021245]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2021247]:_ic_chpl_direct_counted_range_iter[1103851] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2021249]:_ir_chpl_direct_counted_range_iter[1103857] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2021251]:_ir_chpl_direct_counted_range_iter[1103857] "temp"
            const-val size[2021253]:int(64)[13] "temp"
            (2021255 'move' size[2021253](2021257 '.v' _iterator[2021211] F0_size[2054272]))
            (2021261 call chpl_direct_counted_range_iter[458039] 0 size[2021253] ret_tmp[2021251])
            (2021265 'move' call_tmp[2021249] ret_tmp[2021251])
            (2021268 'move' _iterator[2021247](2021271 call _getIterator[1103866] call_tmp[2021249]))
            {
              val ret[2021274]:_ir_chpl_direct_counted_range_iter[1103857] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[2021276]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[2021278]:_ic_chpl_direct_counted_range_iter_helper[1103601] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[2021280]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[2021282]:_ir_chpl_direct_counted_range_iter_helper[1103607] "temp"
              const-val low[2021284]:int(64)[13] "temp"
              (2021286 'move' low[2021284](2021288 '.v' _iterator[2021247] F0_low[2058106]))
              const-val count[2021291]:int(64)[13] "temp"
              (2021293 'move' count[2021291](2021295 '.v' _iterator[2021247] F1_count[2058110]))
              (2021299 call chpl_direct_counted_range_iter_helper[1102159] low[2021284] count[2021291] ret_tmp[2021282])
              (2021303 'move' call_tmp[2021280] ret_tmp[2021282])
              (2021306 'move' _iterator[2021278](2021309 call _getIterator[1103616] call_tmp[2021280]))
              {
                val ret[2042990]:_ir_chpl_direct_counted_range_iter_helper[1103607] "dead after last mention" "RVV" "temp"
                val call_tmp[2042992]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[2042994]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[2042996]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[2042998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2043532]:int(64)[13] "temp"
                (2043537 'move' count[2043532](2043534 '.v' _iterator[2021278] F1_count[2064268]))
                (2043000 'move' call_tmp[2042998](2043003 call <[948459] count[2043532]))
                (2043005 'move' tmp[2042996] call_tmp[2042998])
                (2043008 'move' tmp[2042994] call_tmp[2042998])
                const-val call_tmp[2043011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2043013 'move' call_tmp[2043011] call_tmp[2042998])
                if call_tmp[2042998]
                {
                  (2043019 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
                }
                const-val tmp[2043022]:2*int(64)[1040117] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[2043024]:2*int(64)[1040117] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[2043026]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[2043028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[2043539]:int(64)[13] "temp"
                (2043544 'move' count[2043539](2043541 '.v' _iterator[2021278] F1_count[2064268]))
                (2043030 'move' call_tmp[2043028](2043033 call ==[435671] count[2043539] 0))
                (2043036 'move' tmp[2043026] call_tmp[2043028])
                if call_tmp[2043028]
                {
                  const-val tmp[2043041]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2043043]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2043045]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2043546]:int(64)[13] "temp"
                  (2043551 'move' low[2043546](2043548 '.v' _iterator[2021278] F0_low[2064264]))
                  (2043047 'move' call_tmp[2043045](2043050 call _cast[956095] low[2043546]))
                  const-val call_tmp[2043052]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[2043054]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (2043056 'move' coerce_tmp[2043054](2043058 'cast' uint(64)[115] 1))
                  (2043061 'move' call_tmp[2043052](2043064 call -[962254] call_tmp[2043045]))
                  const-val call_tmp[2043066]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (2043068 'move' call_tmp[2043066](2043071 call _cast[953604] call_tmp[2043052]))
                  const-val ret_tmp[2043073]:2*int(64)[1040117] "temp"
                  const-val low[2043553]:int(64)[13] "temp"
                  (2043558 'move' low[2043553](2043555 '.v' _iterator[2021278] F0_low[2064264]))
                  (2043076 call _build_tuple[1040075] low[2043553] call_tmp[2043066] ret_tmp[2043073])
                  (2043080 'move' tmp[2043041] ret_tmp[2043073])
                  (2043083 'move' tmp[2043024] tmp[2043041])
                }
                {
                  const-val tmp[2043087]:2*int(64)[1040117] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[2043089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[2043091]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2043560]:int(64)[13] "temp"
                  (2043565 'move' count[2043560](2043562 '.v' _iterator[2021278] F1_count[2064268]))
                  (2043093 'move' call_tmp[2043091] count[2043560])
                  const-val call_tmp[2043096]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[2043567]:int(64)[13] "temp"
                  (2043572 'move' count[2043567](2043569 '.v' _iterator[2021278] F1_count[2064268]))
                  (2043098 'move' call_tmp[2043096](2043101 call -[962287] count[2043567]))
                  const-val call_tmp[2043103]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[2043574]:int(64)[13] "temp"
                  (2043579 'move' low[2043574](2043576 '.v' _iterator[2021278] F0_low[2064264]))
                  (2043105 'move' call_tmp[2043103](2043108 call +[439679] low[2043574] call_tmp[2043096]))
                  const-val ret_tmp[2043111]:2*int(64)[1040117] "temp"
                  const-val low[2043581]:int(64)[13] "temp"
                  (2043586 'move' low[2043581](2043583 '.v' _iterator[2021278] F0_low[2064264]))
                  (2043114 call _build_tuple[1040075] low[2043581] call_tmp[2043103] ret_tmp[2043111])
                  (2043118 'move' tmp[2043087] ret_tmp[2043111])
                  (2043121 'move' tmp[2043024] tmp[2043087])
                }
                (2043125 '=' tmp[2043022] tmp[2043024])
                (2043128 'noop')
                1
                ref call_tmp[2043130]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2043132 'move' call_tmp[2043130](2043134 '.' tmp[2043022] x0[1040113]))
                const-val start[2043137]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2043139]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2043141 'move' coerce_tmp[2043139](2043143 'deref' call_tmp[2043130]))
                (2043145 '=' start[2043137] coerce_tmp[2043139])
                (2043148 'noop')
                ref call_tmp[2043149]:_ref(int(64))[936633] "dead at end of block" "maybe param" "reference to a const" "temp"
                (2043151 'move' call_tmp[2043149](2043153 '.' tmp[2043022] x1[1040115]))
                const-val end[2043156]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[2043158]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (2043160 'move' coerce_tmp[2043158](2043162 'deref' call_tmp[2043149]))
                (2043164 '=' end[2043156] coerce_tmp[2043158])
                (2043167 'noop')
                val _indexOfInterest[2043168]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[2043170]:_ic_chpl_direct_param_stride_range_iter[1103347] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[2043172]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[2043174]:_ir_chpl_direct_param_stride_range_iter[1103353] "temp"
                (2043177 call chpl_direct_param_stride_range_iter[1102585] coerce_tmp[2043139] coerce_tmp[2043158] ret_tmp[2043174])
                (2043181 'move' call_tmp[2043172] ret_tmp[2043174])
                (2043184 'move' _iterator[2043170](2043187 call _getIterator[1103362] call_tmp[2043172]))
                {
                  val ret[2043190]:_ir_chpl_direct_param_stride_range_iter[1103353] "dead after last mention" "RVV" "temp"
                  val call_tmp[2043192]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2043195 call chpl_range_check_stride[1102905])
                  val i[2043196]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[2043198]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (2043200 'move' i[2043196] 0)
                  val call_tmp[2043203]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[2043205]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[2043207]:int(64)[13] "temp"
                  (2043209 'move' low[2043207](2043211 '.v' _iterator[2043170] F0_low[2065762]))
                  (2043214 'move' default_arg_first[2043205](2043217 call chpl_checkIfRangeIterWillOverflow_default_first[1103259] low[2043207]))
                  const-val default_arg_last[2043219]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[2043221]:int(64)[13] "temp"
                  (2043223 'move' high[2043221](2043225 '.v' _iterator[2043170] F1_high[2065766]))
                  (2043228 'move' default_arg_last[2043219](2043231 call chpl_checkIfRangeIterWillOverflow_default_last[1103287] high[2043221]))
                  const-val _return_tmp_[2043233]:bool[10] "dead after last mention" "temp"
                  const-val low[2043235]:int(64)[13] "temp"
                  (2043237 'move' low[2043235](2043239 '.v' _iterator[2043170] F0_low[2065762]))
                  const-val high[2043242]:int(64)[13] "temp"
                  (2043244 'move' high[2043242](2043246 '.v' _iterator[2043170] F1_high[2065766]))
                  (2043249 'move' _return_tmp_[2043233](2043252 call chpl_checkIfRangeIterWillOverflow[1096137] low[2043235] high[2043242] 1 default_arg_first[2043205] default_arg_last[2043219] 1))
                  CForLoop[2043259] hazard
                  {
                    const-val yret[2043288]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (2043290 'move' yret[2043288] i[2043196])
                    const-val _yieldedIndex[2043293]:int(64)[13] "temp"
                    (2043295 'move' _yieldedIndex[2043293] i[2043196])
                    {
                      const-val i[2043299]:int(64)[13] "const" "index var" "insert auto destroy"
                      (2043301 'move' i[2043299] _yieldedIndex[2043293])
                      const-val yret[2043304]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (2043306 'move' yret[2043304] _yieldedIndex[2043293])
                      const-val _yieldedIndex[2043334]:int(64)[13] "temp"
                      (2043530 'move' _yieldedIndex[2043334] _yieldedIndex[2043293])
                      {
                        const-val i[2043336]:int(64)[13] "const" "index var" "insert auto destroy"
                        (2043338 'move' i[2043336] _yieldedIndex[2043334])
                        const-val yret[2043341]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (2043343 'move' yret[2043341] _yieldedIndex[2043334])
                        const-val _yieldedIndex[2043346]:int(64)[13] "temp"
                        (2043348 'move' _yieldedIndex[2043346] _yieldedIndex[2043334])
                        {
                          const-val slot[2043352]:int(64)[13] "const" "index var" "insert auto destroy"
                          (2043354 'move' slot[2043352] _yieldedIndex[2043346])
                          const-val yret[2043357]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (2043359 'move' yret[2043357] _yieldedIndex[2043346])
                          const-val _yieldedIndex[2043362]:int(64)[13] "temp"
                          (2043364 'move' _yieldedIndex[2043362] _yieldedIndex[2043346])
                          {
                            const-val slot[2043368]:int(64)[13] "const" "index var" "insert auto destroy"
                            (2043370 'move' slot[2043368] _yieldedIndex[2043362])
                            const-val yret[2043373]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (2043375 'move' yret[2043373] _yieldedIndex[2043362])
                            const-val _yieldedIndex[2043378]:int(64)[13] "temp"
                            (2043380 'move' _yieldedIndex[2043378] _yieldedIndex[2043362])
                            {
                              const-val slot[2043384]:int(64)[13] "const" "index var" "insert auto destroy"
                              (2043386 'move' slot[2043384] _yieldedIndex[2043378])
                              ref call_tmp[2043389]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead after last mention" "maybe param" "temp"
                              ref this[2043391]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
                              (2043393 'move' this[2043391](2043395 '.v' _iterator[1288959] F0_this[2068587]))
                              (2043398 'move' call_tmp[2043389](2043401 call table[1265130] this[2043391]))
                              const-val call_tmp[2043403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2043405 'move' call_tmp[2043403](2043408 call isSlotFull[1290184] call_tmp[2043389] _yieldedIndex[2043378]))
                              const-val call_tmp[2043411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (2043413 'move' call_tmp[2043411] call_tmp[2043403])
                              if call_tmp[2043403]
                              {
                                val yret[2043418]:BaseArr[149584] "dead after last mention" "YVV" "temp"
                                ref call_tmp[2043420]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208498] "dead after last mention" "maybe param" "temp"
                                ref this[2043422]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "temp"
                                (2043424 'move' this[2043422](2043426 '.v' _iterator[1288959] F0_this[2068587]))
                                (2043429 'move' call_tmp[2043420](2043432 call table[1265130] this[2043422]))
                                ref call_tmp[2043434]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208541] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[2043436]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208564] "dead after last mention" "temp"
                                (2043438 'move' _this_tmp_[2043436](2043441 call table[1247901] call_tmp[2043420]))
                                val coerce_tmp[2043443]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208555] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (2043445 'move' coerce_tmp[2043443](2043447 'deref' _this_tmp_[2043436]))
                                (2043449 'move' call_tmp[2043434](2043452 call this[1250451] coerce_tmp[2043443] slot[2043384]))
                                ref call_tmp[2043455]:_ref(BaseArr)[1208378] "dead after last mention" "maybe param" "temp"
                                (2043457 'move' call_tmp[2043455](2043460 call key[1267315] call_tmp[2043434]))
                                val _yieldedIndex[2043462]:BaseArr[149584] "temp"
                                (2043464 'move' _yieldedIndex[2043462](2043466 'deref' call_tmp[2043455]))
                                {
                                  const e[2043469]:BaseArr[149584] "const" "index var" "insert auto destroy"
                                  (2043471 'move' e[2043469] _yieldedIndex[2043462])
                                  {
                                    val call_tmp[2043475]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                    val call_tmp[2043477]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
                                    val coerce_tmp[2043479]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                    (2043481 'move' coerce_tmp[2043479] e[2043469])
                                    (2043484 'move' call_tmp[2043477](2043487 call _cast[1290777] coerce_tmp[2043479]))
                                    val eCastQ[2043489]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy"
                                    (2043491 'move' eCastQ[2043489](2043494 call chpl__initCopy[1290985] call_tmp[2043477]))
                                    val call_tmp[2043496]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
                                    (2043498 'move' call_tmp[2043496](2043501 call postfix![1296546] eCastQ[2043489]))
                                    val eCast[2043503]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy"
                                    (2043505 'move' eCast[2043503](2043508 call chpl__initCopy[1289402] call_tmp[2043496]))
                                    const-val tmp[2043510]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
                                    const-val call_tmp[2043512]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (2043514 'move' call_tmp[2043512](2043516 '_wide_get_locale' e[2043469]))
                                    (2043518 'move' tmp[2043510] call_tmp[2043512])
                                    val rvfDerefTmp[2146090]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "concurrently accessed" "temp"
                                    (2146093 'move' rvfDerefTmp[2146090] eCast[2043503])
                                    val isdirect[2154967]:bool[10] "temp"
                                    (2154972 'move' isdirect[2154967](2154969 call chpl_doDirectExecuteOn[187469] tmp[2043510]))
                                    if isdirect[2154967]
                                    {
                                      (2154976 call on_fn[1289048] rvfDerefTmp[2146090])
                                    }
                                    {
                                      val _args_foron_fn[2154991]:_class_localson_fn[2154983] "temp"
                                      (2154995 'move' _args_foron_fn[2154991](2154993 'stack allocate class' _class_localson_fn[2154983]))
                                      (2154997 '.=' _args_foron_fn[2154991] _0_tmp[2154986] tmp[2043510])
                                      (2155001 '.=' _args_foron_fn[2154991] _1_rvfDerefTmp[2154988] rvfDerefTmp[2146090])
                                      val _args_vforon_fn[2155005]:c_void_ptr[149] "temp"
                                      (2155009 'move' _args_vforon_fn[2155005](2155007 'cast_to_void_star' _args_foron_fn[2154991]))
                                      val _args_sizeon_fn[2155011]:int(64)[13] "temp"
                                      (2155015 'move' _args_sizeon_fn[2155011](2155013 'sizeof_bundle' _class_localson_fn[2154983]))
                                      on(2155047 call wrapon_fn[2155017] tmp[2043510] _args_vforon_fn[2155005] _args_sizeon_fn[2155011] _args_foron_fn[2154991])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[2043526]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[2043261]:int(64)[13] "temp"
                      (2043263 'move' low[2043261](2043265 '.v' _iterator[2043170] F0_low[2065762]))
                      (2043268 '=' i[2043196] low[2043261])
                    }
                    {
                      const-val high[2043272]:int(64)[13] "temp"
                      (2043274 'move' high[2043272](2043276 '.v' _iterator[2043170] F1_high[2065766]))
                      (2043279 '<=' i[2043196] high[2043272])
                    }
                    {
                      val call_tmp[2043283]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (2043285 '+=' i[2043196] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[2043322]
                }
                (2043325 call _freeIterator[1103535] _iterator[2043170])
                (2043328 call chpl__autoDestroy[1635435] tmp[2043022])
                label _endchpl_direct_counted_range_iter_helper[2043330]
              }
              (2021373 call _freeIterator[1103785] _iterator[2021278])
              label _endchpl_direct_counted_range_iter[2021375]
            }
            (2021378 call _freeIterator[1104035] _iterator[2021247])
            label _end_allSlots[2021380]
          }
          (2021383 call _freeIterator[1223205] _iterator[2021211])
          label _endallSlots[2021385]
        }
        (1954680 call _freeIterator[1290118] _iterator[1954572])
        label _endthese[1954682]
      }
      label _breakLabel[1289066]
      (1882364 call _freeIterator[1290464] _iterator[1288959])
    }
    (1289090 return _void[55])
  }
  function on_fn[935213](const in arg this[1841172]:BaseDist[145968], ref arg free_dist[1841174]:_ref(bool)[937260]) : void[4] "on" "resolved"
  {
    {
      val dom_count[145523]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543574 'move' dom_count[145523] -1)
      {
        {
          ref call_tmp[667478]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667481 'move' call_tmp[667478](360492 call _domsLock[801314] this[1841172]))
          (145533 call lock[187323] call_tmp[667478])
          ref call_tmp[667487]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
          (667490 'move' call_tmp[667487](385423 call _free_when_no_doms[801340] this[1841172]))
          (145538 call =[435217] call_tmp[667487] 1)
          ref call_tmp[667494]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "dead after last mention" "maybe param" "temp"
          (667497 'move' call_tmp[667494](360497 call _doms[801288] this[1841172]))
          const-val call_tmp[667501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667504 'move' call_tmp[667501](145543 call size[1491144] call_tmp[667494]))
          (145546 call =[435370] dom_count[145523] call_tmp[667501])
          ref call_tmp[667508]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667511 'move' call_tmp[667508](360502 call _domsLock[801314] this[1841172]))
          (145554 call unlock[187415] call_tmp[667508])
        }
        (145558 'local block')
      }
      const-val call_tmp[667515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667518 'move' call_tmp[667515](145561 call ==[435671] dom_count[145523] 0))
      const-val call_tmp[667520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667523 'move' call_tmp[667520] call_tmp[667515])
      if call_tmp[667520]
      {
        (145565 call =[435217] free_dist[1841174] 1)
      }
    }
    (935220 return _void[55])
  }
  function on_fn[935222](const in arg this[1841176]:BaseDist[145968], const in arg x[1841178]:BaseDom[146767], ref arg count[1841180]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    {
      val cnt[145636]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543578 'move' cnt[145636] -1)
      {
        {
          ref call_tmp[667552]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667555 'move' call_tmp[667552](360507 call _domsLock[801314] this[1841176]))
          (145646 call lock[187323] call_tmp[667552])
          ref call_tmp[667561]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "dead after last mention" "maybe param" "temp"
          (667564 'move' call_tmp[667561](360512 call _doms[801288] this[1841176]))
          (145655 call remove[1487163] call_tmp[667561] x[1841178])
          ref call_tmp[667570]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208712] "dead after last mention" "maybe param" "temp"
          (667573 'move' call_tmp[667570](360517 call _doms[801288] this[1841176]))
          const-val call_tmp[667577]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667580 'move' call_tmp[667577](145659 call size[1491144] call_tmp[667570]))
          (145662 call =[435370] cnt[145636] call_tmp[667577])
          ref call_tmp[667584]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
          (667587 'move' call_tmp[667584](385438 call _free_when_no_doms[801340] this[1841176]))
          const-val call_tmp[667589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1491185]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1491189 'move' coerce_tmp[1491185](1491187 'deref' call_tmp[667584]))
          (667592 'move' call_tmp[667589](145666 call ![7494] coerce_tmp[1491185]))
          const-val call_tmp[667594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (667597 'move' call_tmp[667594] call_tmp[667589])
          if call_tmp[667594]
          {
            (145670 call +=[451358] cnt[145636] 1)
          }
          ref call_tmp[667601]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667604 'move' call_tmp[667601](360522 call _domsLock[801314] this[1841176]))
          (145683 call unlock[187415] call_tmp[667601])
        }
        (145687 'local block')
      }
      (145690 call =[435370] count[1841180] cnt[145636])
    }
    (935229 return _void[55])
  }
  function on_fn[935240](const in arg this[1841182]:BaseDom[146767], ref arg free_dom[1841184]:_ref(bool)[937260], const in arg dist[1841186]:BaseDist[145968], ref arg remove_dist[1841188]:_ref(bool)[937260]) : void[4] "on" "resolved"
  {
    {
      val arr_count[146184]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543594 'move' arr_count[146184] 0)
      {
        {
          ref call_tmp[667700]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667703 'move' call_tmp[667700](360544 call _arrsLock[801502] this[1841182]))
          (146194 call lock[187323] call_tmp[667700])
          ref call_tmp[667709]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "maybe param" "temp"
          (667712 'move' call_tmp[667709](360549 call _arrs[801450] this[1841182]))
          const-val call_tmp[667716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667719 'move' call_tmp[667716](146199 call size[1485956] call_tmp[667709]))
          (146202 call =[435370] arr_count[146184] call_tmp[667716])
          ref call_tmp[667723]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (667726 'move' call_tmp[667723](385483 call _arrs_containing_dom[801476] this[1841182]))
          const-val coerce_tmp[1487090]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1487094 'move' coerce_tmp[1487090](1487092 'deref' call_tmp[667723]))
          (146207 call +=[451358] arr_count[146184] coerce_tmp[1487090])
          ref call_tmp[667730]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
          (667733 'move' call_tmp[667730](385488 call _free_when_no_arrs[801528] this[1841182]))
          (146212 call =[435217] call_tmp[667730] 1)
          ref call_tmp[667737]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (667740 'move' call_tmp[667737](360554 call _arrsLock[801502] this[1841182]))
          (146220 call unlock[187415] call_tmp[667737])
        }
        (146224 'local block')
      }
      const-val call_tmp[667744]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667747 'move' call_tmp[667744](146227 call ==[435671] arr_count[146184] 0))
      const-val call_tmp[667749]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667752 'move' call_tmp[667749] call_tmp[667744])
      if call_tmp[667749]
      {
        (146231 call =[435217] free_dom[1841184] 1)
        const-val call_tmp[667756]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val _virtual_method_tmp_[1834851]:int(32)[95] "temp"
        (1834855 'move' _virtual_method_tmp_[1834851](1834853 'getcid' this[1841182]))
        (667759 'move' call_tmp[667756](146237 'virtual method call' dsiLinksDistribution[146679] _virtual_method_tmp_[1834851] this[1841182]))
        const-val call_tmp[667761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (667764 'move' call_tmp[667761] call_tmp[667756])
        if call_tmp[667761]
        {
          val call_tmp[667768]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
          (667771 'move' call_tmp[667768](146248 call _to_unmanaged[1487104] this[1841182]))
          const-val call_tmp[667773]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1487147]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[1841942]:BaseDist[145968] "temp"
          (1841945 'move' tmp[1841942] dist[1841186])
          (1487152 'move' coerce_tmp[1487147] tmp[1841942])
          (667776 'move' call_tmp[667773](146250 call remove_dom[145621] coerce_tmp[1487147] call_tmp[667768]))
          (146251 call =[435217] remove_dist[1841188] call_tmp[667773])
        }
      }
    }
    (935247 return _void[55])
  }
  function on_fn[1264840](const in arg this[1841522]:BaseDom[146767], const in arg x[1841524]:BaseArr[149584]) : void[4] "on" "resolved"
  {
    {
      {
        ref call_tmp[1264855]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
        (1264857 'move' call_tmp[1264855](1264860 call _arrsLock[801502] this[1841522]))
        (1264867 call lock[187323] call_tmp[1264855])
      }
      {
        ref call_tmp[1264878]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "maybe param" "temp"
        (1264880 'move' call_tmp[1264878](1264883 call _arrs[801450] this[1841522]))
        (1264890 call add[1265030] call_tmp[1264878] x[1841524])
      }
      {
        ref call_tmp[1264915]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
        (1264917 'move' call_tmp[1264915](1264920 call _arrsLock[801502] this[1841522]))
        (1264927 call unlock[187415] call_tmp[1264915])
      }
    }
    (1264929 return _void[55])
  }
  function on_fn[1288689](const in arg e[1841526]:BaseArr[149584], const in arg arrType[1841528]:BaseArrOverRectangularDom(1,int(64),false)[1256280], const in arg rhs[1841530]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570], const  ref arg idxType[1841532]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    val rhs[2146063]:domain(1,int(64),false)[1252658] "temp"
    ref rhs[2146064]:domain(1,int(64),false)[1252658] "temp"
    val ds_info[2146070]:_RuntimeTypeInfo[1253734]
    ref tmp[2146073]:domain(1,int(64),false)[1252658] "temp"
    (2146077 'move' tmp[2146073](2146075 'set reference' rhs[2146063]))
    (2146067 call chpl__deserialize[1831105] ds_info[2146070] rhs[1841530] tmp[2146073])
    (2146082 'move' rhs[2146064](2146080 'set reference' rhs[2146063]))
    {
      val call_tmp[1288695]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288701]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1290966]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1290971 'move' coerce_tmp[1290966] e[1841526])
      (1288703 'move' call_tmp[1288701](1288706 call _cast[1290777] coerce_tmp[1290966]))
      val eCastQ[1288709]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy"
      (1288711 'move' eCastQ[1288709](1291094 call chpl__initCopy[1290985] call_tmp[1288701]))
      const-val call_tmp[1288715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1291097]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1291102 'move' coerce_tmp[1291097](1291099 'cast' object[22] eCastQ[1288709]))
      (1288717 'move' call_tmp[1288715](1288720 call ==[1146] coerce_tmp[1291097] nil[44]))
      const-val call_tmp[1288723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1288725 'move' call_tmp[1288723] call_tmp[1288715])
      if call_tmp[1288723]
      {
        val call_tmp[1288732]:domain(1,int(64),false)[1250995] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1288755 call halt[1291139] "internal error: " "borrowed domain(1,int(64),false)" " contains an bad array type " "unmanaged BaseArrOverRectangularDom(1,int(64),false)")
      }
      val call_tmp[1288763]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "maybe param" "temp"
      (1288765 'move' call_tmp[1288763](1288768 call postfix![1296546] eCastQ[1288709]))
      val eCast[1288770]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead at end of block" "insert auto destroy"
      (1288772 'move' eCast[1288770](1296817 call chpl__initCopy[1289402] call_tmp[1288763]))
      const-val call_tmp[1288776]:1*range(int(64),bounded,false)[1244757] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1870948]:1*range(int(64),bounded,false)[1244757] "temp"
      (1288784 call getIndices[1296834] rhs[2146064] ret_tmp[1870948])
      (1870951 'move' call_tmp[1288776] ret_tmp[1870948])
      const-val inds[1288785]:1*range(int(64),bounded,false)[1244757] "dead at end of block" "insert auto destroy"
      (1288787 'move' inds[1288785] call_tmp[1288776])
      val tmp[1288791]:1*range(int(64),bounded,false)[1244757] "dead at end of block" "insert auto destroy"
      val call_tmp[1288793]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288802]:1*range(int(64),bounded,false)[1244757] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val ret_tmp[1869342]:1*range(int(64),bounded,false)[1244757] "temp"
      (1297629 call _defaultOf[1251126] ret_tmp[1869342])
      (1869345 'move' tmp[1288791] ret_tmp[1869342])
      {
        const-val i[1288819]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1288821 'move' i[1288819] 0)
        {
          {
            ref call_tmp[1297013]:_ref(range(int(64),bounded,false))[1026919] "dead at end of block" "maybe param" "temp"
            (1297015 'move' call_tmp[1297013](1297065 '.' inds[1288785] x0[1244755]))
            const-val from[1297020]:range(int(64),bounded,false)[1026875] "dead at end of block" "insert auto destroy"
            (1297022 'move' from[1297020](1297068 'deref' call_tmp[1297013]))
            ref call_tmp[1297028]:_ref(range(int(64),bounded,false))[1026919] "dead after last mention" "maybe param" "temp"
            (1297030 'move' call_tmp[1297028](1297071 '.' tmp[1288791] x0[1244755]))
            val call_tmp[1297035]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1297044]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1870980]:range(int(64),bounded,false)[1026875] "temp"
            (1297052 call safeCast[1297078] from[1297020] ret_tmp[1870980])
            (1870983 'move' call_tmp[1297044] ret_tmp[1870980])
            (1297055 call =[1251611] call_tmp[1297028] call_tmp[1297044])
            (1882367 call chpl__autoDestroy[1383553] call_tmp[1297044])
            (1882370 call chpl__autoDestroy[1383553] from[1297020])
          }
        }
        label _continueLabel0[1297009]
        label _unused_continueLabel[1288919]
        label _breakLabel[1288921]
      }
      val coerce_tmp[1297620]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1297625 'move' coerce_tmp[1297620] eCast[1288770])
      val _virtual_method_tmp_[1834942]:int(32)[95] "temp"
      (1834946 'move' _virtual_method_tmp_[1834942](1834944 'getcid' coerce_tmp[1297620]))
      (1288927 'virtual method call' dsiReallocate[1297553] _virtual_method_tmp_[1834942] coerce_tmp[1297620] tmp[1288791])
      (1882374 call chpl__autoDestroy[1655778] tmp[1288791])
      (1882377 call chpl__autoDestroy[1655778] inds[1288785])
    }
    (2146084 call chpl__autoDestroy[1831024] rhs[1841530])
    (2146087 call chpl__autoDestroy[1657644] rhs[2146063])
    (1288932 return _void[55])
  }
  function on_fn[1289048](const in arg eCast[1841534]:BaseArrOverRectangularDom(1,int(64),false)[1256280]) : void[4] "on" "resolved"
  {
    val coerce_tmp[1297692]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1842002]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (1842005 'move' tmp[1842002] eCast[1841534])
    (1297697 'move' coerce_tmp[1297692] tmp[1842002])
    val _virtual_method_tmp_[1834949]:int(32)[95] "temp"
    (1834953 'move' _virtual_method_tmp_[1834949](1834951 'getcid' coerce_tmp[1297692]))
    (1289057 'virtual method call' dsiPostReallocate[1297680] _virtual_method_tmp_[1834949] coerce_tmp[1297692])
    (1289060 return _void[55])
  }
  function on_fn[1484652](const in arg this[1841642]:BaseDom[146767], const in arg x[1841644]:BaseArr[149584], ref arg count[1841646]:_ref(int(64))[936633]) : void[4] "on" "resolved"
  {
    {
      val cnt[1484665]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1484667 'move' cnt[1484665] -1)
      {
        {
          ref call_tmp[1484674]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (1484676 'move' call_tmp[1484674](1484679 call _arrsLock[801502] this[1841642]))
          (1484686 call lock[187323] call_tmp[1484674])
          {
            ref call_tmp[1484697]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "maybe param" "temp"
            (1484699 'move' call_tmp[1484697](1484702 call _arrs[801450] this[1841642]))
            (1484709 call remove[1484855] call_tmp[1484697] x[1841644])
          }
          ref call_tmp[1484725]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208412] "dead after last mention" "maybe param" "temp"
          (1484727 'move' call_tmp[1484725](1484730 call _arrs[801450] this[1841642]))
          const-val call_tmp[1484733]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1484735 'move' call_tmp[1484733](1484738 call size[1485956] call_tmp[1484725]))
          (1484742 call =[435370] cnt[1484665] call_tmp[1484733])
          ref call_tmp[1484747]:_ref(int(64))[936633] "dead after last mention" "maybe param" "temp"
          (1484749 'move' call_tmp[1484747](1484752 call _arrs_containing_dom[801476] this[1841642]))
          const-val coerce_tmp[1485997]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1486001 'move' coerce_tmp[1485997](1485999 'deref' call_tmp[1484747]))
          (1484756 call +=[451358] cnt[1484665] coerce_tmp[1485997])
          ref call_tmp[1484761]:_ref(bool)[937260] "dead after last mention" "maybe param" "temp"
          (1484763 'move' call_tmp[1484761](1484766 call _free_when_no_arrs[801528] this[1841642]))
          const-val call_tmp[1484769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1486005]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1486009 'move' coerce_tmp[1486005](1486007 'deref' call_tmp[1484761]))
          (1484771 'move' call_tmp[1484769](1484774 call ![7494] coerce_tmp[1486005]))
          const-val call_tmp[1484776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1484778 'move' call_tmp[1484776] call_tmp[1484769])
          if call_tmp[1484776]
          {
            (1484786 call +=[451358] cnt[1484665] 1)
          }
          ref call_tmp[1484792]:_ref(chpl_LocalSpinlock)[941132] "dead after last mention" "maybe param" "temp"
          (1484794 'move' call_tmp[1484792](1484797 call _arrsLock[801502] this[1841642]))
          (1484804 call unlock[187415] call_tmp[1484792])
        }
        (1484672 'local block')
      }
      (1484806 call =[435370] count[1841646] cnt[1484665])
    }
    (1484812 return _void[55])
  }
  function wrapon_fn[2147762](const in arg dummy_locale_arg[2147764]:chpl_localeID_t[209352], in arg buf[2147766]:c_void_ptr[149], in arg buf_size[2147768]:int(64)[13], in arg c[2147770]:_class_localson_fn[2147716]) : void[4] "on block"
  {
    val _0_tmp[2147775]:chpl_localeID_t[209352] "temp"
    (2147780 'move' _0_tmp[2147775](2147777 '.v' c[2147770] _0_tmp[2147719]))
    val _1_this[2147782]:BaseDist[145968] "temp"
    (2147787 'move' _1_this[2147782](2147784 '.v' c[2147770] _1_this[2147721]))
    ref _2_free_dist[2147790]:bool[10] "temp"
    (2147795 'move' _2_free_dist[2147790](2147792 '.v' c[2147770] _2_free_dist[2147723]))
    (2147773 call on_fn[935213] _1_this[2147782] _2_free_dist[2147790])
    (2147798 return _void[55])
  }
  function wrapon_fn[2147875](const in arg dummy_locale_arg[2147877]:chpl_localeID_t[209352], in arg buf[2147879]:c_void_ptr[149], in arg buf_size[2147881]:int(64)[13], in arg c[2147883]:_class_localson_fn[2147823]) : void[4] "on block"
  {
    val _0_tmp[2147888]:chpl_localeID_t[209352] "temp"
    (2147893 'move' _0_tmp[2147888](2147890 '.v' c[2147883] _0_tmp[2147826]))
    val _1_this[2147895]:BaseDist[145968] "temp"
    (2147900 'move' _1_this[2147895](2147897 '.v' c[2147883] _1_this[2147828]))
    val _2_x[2147903]:BaseDom[146767] "temp"
    (2147908 'move' _2_x[2147903](2147905 '.v' c[2147883] _2_x[2147830]))
    ref _3_count[2147911]:int(64)[13] "temp"
    (2147916 'move' _3_count[2147911](2147913 '.v' c[2147883] _3_count[2147832]))
    (2147886 call on_fn[935222] _1_this[2147895] _2_x[2147903] _3_count[2147911])
    (2147919 return _void[55])
  }
  function wrapon_fn[2148009](const in arg dummy_locale_arg[2148011]:chpl_localeID_t[209352], in arg buf[2148013]:c_void_ptr[149], in arg buf_size[2148015]:int(64)[13], in arg c[2148017]:_class_localson_fn[2147945]) : void[4] "on block"
  {
    val _0_tmp[2148022]:chpl_localeID_t[209352] "temp"
    (2148027 'move' _0_tmp[2148022](2148024 '.v' c[2148017] _0_tmp[2147948]))
    val _1_this[2148029]:BaseDom[146767] "temp"
    (2148034 'move' _1_this[2148029](2148031 '.v' c[2148017] _1_this[2147950]))
    ref _2_free_dom[2148037]:bool[10] "temp"
    (2148042 'move' _2_free_dom[2148037](2148039 '.v' c[2148017] _2_free_dom[2147952]))
    val _3_rvfDerefTmp[2148045]:BaseDist[145968] "temp"
    (2148050 'move' _3_rvfDerefTmp[2148045](2148047 '.v' c[2148017] _3_rvfDerefTmp[2147954]))
    ref _4_remove_dist[2148053]:bool[10] "temp"
    (2148058 'move' _4_remove_dist[2148053](2148055 '.v' c[2148017] _4_remove_dist[2147956]))
    (2148020 call on_fn[935240] _1_this[2148029] _2_free_dom[2148037] _3_rvfDerefTmp[2148045] _4_remove_dist[2148053])
    (2148061 return _void[55])
  }
  function wrapon_fn[2154788](const in arg dummy_locale_arg[2154790]:chpl_localeID_t[209352], in arg buf[2154792]:c_void_ptr[149], in arg buf_size[2154794]:int(64)[13], in arg c[2154796]:_class_localson_fn[2154748]) : void[4] "on block"
  {
    val _0_tmp[2154801]:chpl_localeID_t[209352] "temp"
    (2154806 'move' _0_tmp[2154801](2154803 '.v' c[2154796] _0_tmp[2154751]))
    val _1_this[2154808]:BaseDom[146767] "temp"
    (2154813 'move' _1_this[2154808](2154810 '.v' c[2154796] _1_this[2154753]))
    val _2_x[2154816]:BaseArr[149584] "temp"
    (2154821 'move' _2_x[2154816](2154818 '.v' c[2154796] _2_x[2154755]))
    (2154799 call on_fn[1264840] _1_this[2154808] _2_x[2154816])
    (2154824 return _void[55])
  }
  function wrapon_fn[2154908](const in arg dummy_locale_arg[2154910]:chpl_localeID_t[209352], in arg buf[2154912]:c_void_ptr[149], in arg buf_size[2154914]:int(64)[13], in arg c[2154916]:_class_localson_fn[2154850]) : void[4] "on block"
  {
    val _0_tmp[2154921]:chpl_localeID_t[209352] "temp"
    (2154926 'move' _0_tmp[2154921](2154923 '.v' c[2154916] _0_tmp[2154853]))
    val _1_e[2154928]:BaseArr[149584] "temp"
    (2154933 'move' _1_e[2154928](2154930 '.v' c[2154916] _1_e[2154855]))
    val _2_rvfDerefTmp[2154936]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (2154941 'move' _2_rvfDerefTmp[2154936](2154938 '.v' c[2154916] _2_rvfDerefTmp[2154857]))
    val _3_rhs_data[2154944]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1830570] "temp"
    (2154949 'move' _3_rhs_data[2154944](2154946 '.v' c[2154916] _3_rhs_data[2154859]))
    ref _4_idxType[2154952]:int(64)[13] "temp"
    (2154957 'move' _4_idxType[2154952](2154954 '.v' c[2154916] _4_idxType[2154861]))
    (2154919 call on_fn[1288689] _1_e[2154928] _2_rvfDerefTmp[2154936] _3_rhs_data[2154944] _4_idxType[2154952])
    (2154960 return _void[55])
  }
  function wrapon_fn[2155017](const in arg dummy_locale_arg[2155019]:chpl_localeID_t[209352], in arg buf[2155021]:c_void_ptr[149], in arg buf_size[2155023]:int(64)[13], in arg c[2155025]:_class_localson_fn[2154983]) : void[4] "on block"
  {
    val _0_tmp[2155030]:chpl_localeID_t[209352] "temp"
    (2155035 'move' _0_tmp[2155030](2155032 '.v' c[2155025] _0_tmp[2154986]))
    val _1_rvfDerefTmp[2155037]:BaseArrOverRectangularDom(1,int(64),false)[1256280] "temp"
    (2155042 'move' _1_rvfDerefTmp[2155037](2155039 '.v' c[2155025] _1_rvfDerefTmp[2154988]))
    (2155028 call on_fn[1289048] _1_rvfDerefTmp[2155037])
    (2155045 return _void[55])
  }
  function wrapon_fn[2156284](const in arg dummy_locale_arg[2156286]:chpl_localeID_t[209352], in arg buf[2156288]:c_void_ptr[149], in arg buf_size[2156290]:int(64)[13], in arg c[2156292]:_class_localson_fn[2156232]) : void[4] "on block"
  {
    val _0_tmp[2156297]:chpl_localeID_t[209352] "temp"
    (2156302 'move' _0_tmp[2156297](2156299 '.v' c[2156292] _0_tmp[2156235]))
    val _1_this[2156304]:BaseDom[146767] "temp"
    (2156309 'move' _1_this[2156304](2156306 '.v' c[2156292] _1_this[2156237]))
    val _2_x[2156312]:BaseArr[149584] "temp"
    (2156317 'move' _2_x[2156312](2156314 '.v' c[2156292] _2_x[2156239]))
    ref _3_count[2156320]:int(64)[13] "temp"
    (2156325 'move' _3_count[2156320](2156322 '.v' c[2156292] _3_count[2156241]))
    (2156295 call on_fn[1484652] _1_this[2156304] _2_x[2156312] _3_count[2156320])
    (2156328 return _void[55])
  }
}