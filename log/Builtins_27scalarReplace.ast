AST dump for Builtins after pass scalarReplace.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416003]() : void[4] "insert line file info" "module init" "resolved"
  {
    (527749 return _void[55])
  }
  function assert[210257](const in arg test[210254]:bool[10]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[704673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2060226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060228 'move' call_tmp[2060226](2060230 '!' test[210254]))
    (704676 'move' call_tmp[704673] call_tmp[2060226])
    const-val call_tmp[704678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (704681 'move' call_tmp[704678] call_tmp[704673])
    if call_tmp[704678]
    {
      (210267 'chpl_error' c"assert failed")
    }
    (527727 return _void[55])
  }
  function assert[1416138](const in arg test[1416140]:bool[10], const  ref arg _e0_args[1416142]:string[26]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1416151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2060703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060705 'move' call_tmp[2060703](2060707 '!' test[1416140]))
    (1416153 'move' call_tmp[1416151] call_tmp[2060703])
    const-val call_tmp[1416158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1416160 'move' call_tmp[1416158] call_tmp[1416151])
    if call_tmp[1416158]
    {
      const-val call_tmp[1416167]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1795240]:string[26] "temp"
      (1416172 call stringify[1416206] _e0_args[1416142] ret_tmp[1795240])
      (1795243 'move' call_tmp[1416167] ret_tmp[1795240])
      const-val call_tmp[1416174]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1787225]:string[26] "temp"
      (1416179 call +[38342] "assert failed - " call_tmp[1416167] ret_tmp[1787225])
      (1787228 'move' call_tmp[1416174] ret_tmp[1787225])
      const-val tmpstring[1416182]:string[26] "dead at end of block" "insert auto destroy"
      (1416184 'move' tmpstring[1416182] call_tmp[1416174])
      val call_tmp[1416188]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2097965]:string[26] "temp"
      (2097969 'move' i_this[2097965](2097967 'set reference' tmpstring[1416182]))
      const-val coerce_tmp[2097972]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2097974 'move' coerce_tmp[2097972](2097976 '.v' i_this[2097965] locale_id[30754]))
      const-val call_tmp[2097979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2097981 'move' call_tmp[2097979](2097983 '!=' coerce_tmp[2097972] chpl_nodeID[208152]))
      if call_tmp[2097979]
      {
        (2097989 call halt[154067] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2097992]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2097994 'move' coerce_tmp[2097992](2097996 '.v' i_this[2097965] buff[30737]))
      const-val call_tmp[2097999]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098001 'move' call_tmp[2097999](2098003 'cast' c_string[19] coerce_tmp[2097992]))
      (1416190 'move' call_tmp[1416188] call_tmp[2097999])
      (1416197 'chpl_error' call_tmp[1416188])
      ref i_x[2079138]:string[26] "temp"
      (2079142 'move' i_x[2079138](2079140 'set reference' tmpstring[1416182]))
      (2079146 call deinit[30831] i_x[2079138])
      ref i_x[2079150]:string[26] "temp"
      (2079154 'move' i_x[2079150](2079152 'set reference' call_tmp[1416167]))
      (2079158 call deinit[30831] i_x[2079150])
    }
    (1416202 return _void[55])
  }
  function assert[1439669](const in arg test[1439671]:bool[10], const  ref arg _e0_args[1439673]:string[26], const in arg _e1_args[1439675]:uint(64)[115], const  ref arg _e2_args[1439677]:string[26], const in arg _e3_args[1439679]:int(64)[13]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1439694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2060739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060741 'move' call_tmp[2060739](2060743 '!' test[1439671]))
    (1439696 'move' call_tmp[1439694] call_tmp[2060739])
    const-val call_tmp[1439701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1439703 'move' call_tmp[1439701] call_tmp[1439694])
    if call_tmp[1439701]
    {
      const-val call_tmp[1439710]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1795447]:string[26] "temp"
      (1439715 call stringify[1439758] _e0_args[1439673] _e1_args[1439675] _e2_args[1439677] _e3_args[1439679] ret_tmp[1795447])
      (1795450 'move' call_tmp[1439710] ret_tmp[1795447])
      const-val call_tmp[1439720]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1787231]:string[26] "temp"
      (1439725 call +[38342] "assert failed - " call_tmp[1439710] ret_tmp[1787231])
      (1787234 'move' call_tmp[1439720] ret_tmp[1787231])
      const-val tmpstring[1439728]:string[26] "dead at end of block" "insert auto destroy"
      (1439730 'move' tmpstring[1439728] call_tmp[1439720])
      val call_tmp[1439734]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      ref i_this[2098008]:string[26] "temp"
      (2098012 'move' i_this[2098008](2098010 'set reference' tmpstring[1439728]))
      const-val coerce_tmp[2098015]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2098017 'move' coerce_tmp[2098015](2098019 '.v' i_this[2098008] locale_id[30754]))
      const-val call_tmp[2098022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098024 'move' call_tmp[2098022](2098026 '!=' coerce_tmp[2098015] chpl_nodeID[208152]))
      if call_tmp[2098022]
      {
        (2098032 call halt[154067] "Cannot call .c_str() on a remote string")
      }
      val coerce_tmp[2098035]:c_ptr(uint(8))[937334] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2098037 'move' coerce_tmp[2098035](2098039 '.v' i_this[2098008] buff[30737]))
      const-val call_tmp[2098042]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2098044 'move' call_tmp[2098042](2098046 'cast' c_string[19] coerce_tmp[2098035]))
      (1439736 'move' call_tmp[1439734] call_tmp[2098042])
      (1439743 'chpl_error' call_tmp[1439734])
      ref i_x[2079162]:string[26] "temp"
      (2079166 'move' i_x[2079162](2079164 'set reference' tmpstring[1439728]))
      (2079170 call deinit[30831] i_x[2079162])
      ref i_x[2079174]:string[26] "temp"
      (2079178 'move' i_x[2079174](2079176 'set reference' call_tmp[1439710]))
      (2079182 call deinit[30831] i_x[2079174])
    }
    (1439748 return _void[55])
  }
  function compilerAssert[973801]() : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    (973829 return _void[55])
  }
}