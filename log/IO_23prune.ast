AST dump for IO after pass prune.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2099532] val _runtime_hdr[2099533]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099535]:chpl_localeID_t[209294] ref _1_this[2099537]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2099271] val _runtime_hdr[2099272]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099274]:chpl_localeID_t[209294] ref _1_this[2099276]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2099095] val _runtime_hdr[2099096]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099098]:chpl_localeID_t[209294] ref _1_this[2099100]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2097304] val _runtime_hdr[2097305]:chpl_comm_on_bundle_t[209301] val _0_tmp[2097307]:chpl_localeID_t[209294] ref _1_this[2097309]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2095274] val _runtime_hdr[2095275]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095277]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2095279]:channel(true,dynamic,true)[1021825] ref _2_args[2095281]:(int(64),ioNewline)[1433256] val _3_rvfDerefTmp[2095283]:locale[28] ref _4_error[2095285]:Error[167938] "error variable"
  type _class_localson_fn[2095132] val _runtime_hdr[2095133]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095135]:chpl_localeID_t[209294] ref _1_this[2095137]:channel(true,dynamic,false)[1060947] val _2_x[2095139]:real(64)[16] val _3_rvfDerefTmp[2095141]:locale[28] ref _4_error[2095143]:Error[167938] "error variable"
  type _class_localson_fn[2094990] val _runtime_hdr[2094991]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094993]:chpl_localeID_t[209294] ref _1_this[2094995]:channel(true,dynamic,false)[1060947] val _2_rvfDerefTmp[2094997]:ioLiteral[238753] val _3_rvfDerefTmp[2094999]:locale[28] ref _4_error[2095001]:Error[167938] "error variable"
  type _class_localson_fn[2094828] val _runtime_hdr[2094829]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094831]:chpl_localeID_t[209294] ref _1_this[2094833]:channel(true,dynamic,false)[1060947] val _2_x[2094835]:_ddata(real(64))[1357916] val _3_len[2094837]:int(64)[13] ref _4_err[2094839]:syserr[223584] ref _5_error[2094841]:Error[167938] "error variable"
  type _class_localson_fn[2094713] val _runtime_hdr[2094714]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094716]:chpl_localeID_t[209294] ref _1_this[2094718]:channel(true,dynamic,false)[1060947] ref _2_ret[2094720]:uint(8)[100]
  type _class_localson_fn[2094587] val _runtime_hdr[2094588]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094590]:chpl_localeID_t[209294] ref _1_this[2094592]:channel(true,dynamic,false)[1060947] val _2_element[2094594]:int(64)[13] ref _3_ret[2094596]:int(64)[13]
  type _class_localson_fn[2094500] val _runtime_hdr[2094501]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094503]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094505]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2094355] val _runtime_hdr[2094356]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094358]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094360]:channel(true,dynamic,true)[1021825] ref _2_path[2094362]:string[26] ref _3_offset[2094364]:int(64)[13] ref _4_error[2094366]:Error[167938] "error variable"
  type _class_localson_fn[2094247] val _runtime_hdr[2094248]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094250]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094252]:channel(true,dynamic,true)[1021825] ref _2_err[2094254]:syserr[223584]
  type _class_localson_fn[2094107] val _runtime_hdr[2094108]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094110]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094112]:channel(true,dynamic,true)[1021825] ref _2_args[2094114]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] val _3_rvfDerefTmp[2094116]:locale[28] ref _4_error[2094118]:Error[167938] "error variable"
  type _class_localson_fn[2091285] val _runtime_hdr[2091286]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091288]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091290]:channel(true,dynamic,false)[1060947] ref _2_args[2091292]:(string,codepointIndex,string,int(64))[1176520] val _3_rvfDerefTmp[2091294]:locale[28] ref _4_error[2091296]:Error[167938] "error variable"
  type _class_localson_fn[2091143] val _runtime_hdr[2091144]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091146]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091148]:channel(true,dynamic,false)[1060947] ref _2_args[2091150]:(string,codepointIndex,string)[1158555] val _3_rvfDerefTmp[2091152]:locale[28] ref _4_error[2091154]:Error[167938] "error variable"
  type _class_localson_fn[2090853] val _runtime_hdr[2090854]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090856]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090858]:channel(false,dynamic,false)[1080682] ref _2_path[2090860]:string[26] ref _3_offset[2090862]:int(64)[13] ref _4_error[2090864]:Error[167938] "error variable"
  type _class_localson_fn[2090745] val _runtime_hdr[2090746]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090748]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090750]:channel(false,dynamic,false)[1080682] ref _2_err[2090752]:syserr[223584]
  type _class_localson_fn[2090653] val _runtime_hdr[2090654]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090656]:chpl_localeID_t[209294] ref _1_lhs[2090658]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090568] val _runtime_hdr[2090569]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090571]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090573]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090387] val _runtime_hdr[2090388]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090390]:chpl_localeID_t[209294] val _1_end[2090392]:int(64)[13] val _2_hints[2090394]:int(32)[95] val _3_rvfDerefTmp[2090396]:iostyle[231844] ref _4_this[2090398]:channel(false,dynamic,false)[1080682] val _5_start[2090400]:int(64)[13] val _6_rvfDerefTmp[2090402]:file[235580] ref _7__formal_tmp_error[2090404]:syserr[223584]
  type _class_localson_fn[2090180] val _runtime_hdr[2090181]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090183]:chpl_localeID_t[209294] val _1_start[2090185]:int(64)[13] ref _2_ret[2090187]:channel(false,dynamic,false)[1080682] val _3_rvfDerefTmp[2090189]:iostyle[231844] val _4_end[2090191]:int(64)[13] val _5_rvfDerefTmp[2090193]:file[235580] ref _6_err[2090195]:syserr[223584] val _7_hints[2090197]:int(32)[95] ref _8_error[2090199]:Error[167938] "error variable"
  type _class_localson_fn[2090068] val _runtime_hdr[2090069]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090071]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090073]:channel(true,dynamic,false)[1060947] ref _2_ret[2090075]:int(64)[13]
  type _class_localson_fn[2089928] val _runtime_hdr[2089929]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089931]:chpl_localeID_t[209294] ref _1_this[2089933]:channel(true,dynamic,false)[1060947] val _2_x[2089935]:int(64)[13] val _3_rvfDerefTmp[2089937]:locale[28] ref _4_error[2089939]:Error[167938] "error variable"
  type _class_localson_fn[2089786] val _runtime_hdr[2089787]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089789]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089791]:channel(true,dynamic,false)[1060947] ref _2_args[2089793]:1*byteIndex[1057081] val _3_rvfDerefTmp[2089795]:locale[28] ref _4_error[2089797]:Error[167938] "error variable"
  type _class_localson_fn[2089632] val _runtime_hdr[2089633]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089635]:chpl_localeID_t[209294] ref _1_this[2089637]:channel(true,dynamic,false)[1060947] ref _2_path[2089639]:string[26] ref _3_offset[2089641]:int(64)[13] ref _4_error[2089643]:Error[167938] "error variable"
  type _class_localson_fn[2089524] val _runtime_hdr[2089525]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089527]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089529]:channel(true,dynamic,false)[1060947] ref _2_err[2089531]:syserr[223584]
  type _class_localson_fn[2089432] val _runtime_hdr[2089433]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089435]:chpl_localeID_t[209294] ref _1_lhs[2089437]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089347] val _runtime_hdr[2089348]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089350]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089352]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089166] val _runtime_hdr[2089167]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089169]:chpl_localeID_t[209294] ref _1__formal_tmp_error[2089171]:syserr[223584] val _2_end[2089173]:int(64)[13] val _3_hints[2089175]:int(32)[95] val _4_rvfDerefTmp[2089177]:iostyle[231844] ref _5_this[2089179]:channel(true,dynamic,false)[1060947] val _6_start[2089181]:int(64)[13] val _7_rvfDerefTmp[2089183]:file[235580]
  type _class_localson_fn[2088959] val _runtime_hdr[2088960]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088962]:chpl_localeID_t[209294] val _1_start[2088964]:int(64)[13] ref _2_ret[2088966]:channel(true,dynamic,false)[1060947] val _3_end[2088968]:int(64)[13] val _4_rvfDerefTmp[2088970]:iostyle[231844] val _5_rvfDerefTmp[2088972]:file[235580] ref _6_err[2088974]:syserr[223584] val _7_hints[2088976]:int(32)[95] ref _8_error[2088978]:Error[167938] "error variable"
  type _class_localson_fn[2088719] val _runtime_hdr[2088720]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088722]:chpl_localeID_t[209294] ref _1_lhs[2088724]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088634] val _runtime_hdr[2088635]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088637]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088639]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088453] val _runtime_hdr[2088454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088456]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088458]:file[235580] ref _2__formal_tmp_error[2088460]:syserr[223584] val _3_end[2088462]:int(64)[13] ref _4_this[2088464]:channel(true,dynamic,true)[1021825] val _5_hints[2088466]:int(32)[95] val _6_rvfDerefTmp[2088468]:iostyle[231844] val _7_start[2088470]:int(64)[13]
  type _class_localson_fn[2088246] val _runtime_hdr[2088247]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088249]:chpl_localeID_t[209294] val _1_end[2088251]:int(64)[13] val _2_rvfDerefTmp[2088253]:iostyle[231844] val _3_rvfDerefTmp[2088255]:file[235580] ref _4_ret[2088257]:channel(true,dynamic,true)[1021825] val _5_hints[2088259]:int(32)[95] val _6_start[2088261]:int(64)[13] ref _7_err[2088263]:syserr[223584] ref _8_error[2088265]:Error[167938] "error variable"
  type _class_localson_fn[2088036] val _runtime_hdr[2088037]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088039]:chpl_localeID_t[209294] ref _1_lhs[2088041]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087951] val _runtime_hdr[2087952]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087954]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087956]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087770] val _runtime_hdr[2087771]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087773]:chpl_localeID_t[209294] ref _1_this[2087775]:channel(false,dynamic,true)[985627] val _2_hints[2087777]:int(32)[95] val _3_rvfDerefTmp[2087779]:iostyle[231844] val _4_end[2087781]:int(64)[13] val _5_start[2087783]:int(64)[13] val _6_rvfDerefTmp[2087785]:file[235580] ref _7__formal_tmp_error[2087787]:syserr[223584]
  type _class_localson_fn[2087563] val _runtime_hdr[2087564]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087566]:chpl_localeID_t[209294] ref _1_err[2087568]:syserr[223584] val _2_start[2087570]:int(64)[13] val _3_end[2087572]:int(64)[13] val _4_rvfDerefTmp[2087574]:iostyle[231844] val _5_rvfDerefTmp[2087576]:file[235580] ref _6_ret[2087578]:channel(false,dynamic,true)[985627] val _7_hints[2087580]:int(32)[95] ref _8_error[2087582]:Error[167938] "error variable"
  type _class_localson_fn[2087214] val _runtime_hdr[2087215]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087217]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087219]:file[235580] ref _2_err[2087221]:syserr[223584] ref _3_ret[2087223]:string[26] ref _4_error[2087225]:Error[167938] "error variable"
  type _class_localson_fn[2087106] val _runtime_hdr[2087107]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087109]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087111]:file[235580] ref _2_err[2087113]:syserr[223584]
  type _class_localson_fn[2086980] val _runtime_hdr[2086981]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086983]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2086985]:file[235580] ref _2_ret[2086987]:iostyle[231844] ref _3_error[2086989]:Error[167938] "error variable"
  type _class_localson_fn[2086887] val _runtime_hdr[2086888]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086890]:chpl_localeID_t[209294] ref _1_this[2086892]:file[235580]
  function chpl__init_IO[416113]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546810 'move' IOHINT_NONE[231411] 0)
    (2085055 '_private_broadcast' IOHINT_NONE[231411])
    (546812 'move' IOHINT_RANDOM[231416] QIO_HINT_RANDOM[231363])
    (2085057 '_private_broadcast' IOHINT_RANDOM[231416])
    (546814 'move' IOHINT_SEQUENTIAL[231421] QIO_HINT_SEQUENTIAL[231368])
    (2085059 '_private_broadcast' IOHINT_SEQUENTIAL[231421])
    (546816 'move' IOHINT_CACHED[231426] QIO_HINT_CACHED[231383])
    (2085061 '_private_broadcast' IOHINT_CACHED[231426])
    (546818 'move' IOHINT_PARALLEL[231431] QIO_HINT_PARALLEL[231388])
    (2085063 '_private_broadcast' IOHINT_PARALLEL[231431])
    const-val ret_tmp[1832185]:6*string[985051] "temp"
    (246559 call _build_tuple[984977] "a" "b" "c" "d" "e" "f" ret_tmp[1832185])
    (1832188 'move' call_tmp[721866] ret_tmp[1832185])
    val tmp[2085330]:6*string[985217] "temp"
    (2085332 'move' tmp[2085330](985156 call chpl__initCopy[985158] call_tmp[721866]))
    (2085335 '.=' _arg_to_proto_names[246561] value[2085328] tmp[2085330])
    val type_tmp[547538]:channel(false,dynamic,true)[985627] "dead after last mention" "maybe param" "temp" "type variable"
    const-val coerce_tmp[985694]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985700 'move' coerce_tmp[985694](985696 'cast' int(32)[95] 0))
    const-val default_arg_hints[985736]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808697]:Error[167938] "error variable" "temp"
    (1808699 'move' error[1808697] nil[44])
    (985741 'move' default_arg_hints[985736](985738 call openfd_default_hints[985703] error[1808697]))
    val errorExists[2108176]:bool[10] "temp"
    (2108181 'move' errorExists[2108176](2108178 '!=' error[1808697] nil[44]))
    if errorExists[2108176]
    {
      (1808702 call chpl_propagate_error[170472] error[1808697])
    }
    const-val default_arg_style[985793]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808710]:Error[167938] "error variable" "temp"
    (1808712 'move' error[1808710] nil[44])
    (985798 'move' default_arg_style[985793](985795 call openfd_default_style[985745] error[1808710]))
    val errorExists[2108184]:bool[10] "temp"
    (2108189 'move' errorExists[2108184](2108186 '!=' error[1808710] nil[44]))
    if errorExists[2108184]
    {
      (1808715 call chpl_propagate_error[170472] error[1808710])
    }
    val error[1808723]:Error[167938] "error variable" "temp"
    (1808725 'move' error[1808723] nil[44])
    const-val ret_tmp[1831469]:file[235580] "temp"
    (250216 call openfd[237271] coerce_tmp[985694] default_arg_hints[985736] default_arg_style[985793] error[1808723] ret_tmp[1831469])
    (1831472 'move' call_tmp[723997] ret_tmp[1831469])
    val errorExists[2108192]:bool[10] "temp"
    (2108197 'move' errorExists[2108192](2108194 '!=' error[1808723] nil[44]))
    if errorExists[2108192]
    {
      (1808728 call chpl_propagate_error[170472] error[1808723])
    }
    val error[1808736]:Error[167938] "error variable" "temp"
    (1808738 'move' error[1808736] nil[44])
    (1016904 'move' default_arg_start[1016897](1016899 call reader_default_start[1016861] call_tmp[723997] error[1808736]))
    val errorExists[2108200]:bool[10] "temp"
    (2108205 'move' errorExists[2108200](2108202 '!=' error[1808736] nil[44]))
    if errorExists[2108200]
    {
      (1808741 call chpl_propagate_error[170472] error[1808736])
    }
    val error[1808749]:Error[167938] "error variable" "temp"
    (1808751 'move' error[1808749] nil[44])
    (1016968 'move' default_arg_end[1016961](1016963 call reader_default_end[1016908] call_tmp[723997] error[1808749]))
    val errorExists[2108208]:bool[10] "temp"
    (2108213 'move' errorExists[2108208](2108210 '!=' error[1808749] nil[44]))
    if errorExists[2108208]
    {
      (1808754 call chpl_propagate_error[170472] error[1808749])
    }
    val error[1808762]:Error[167938] "error variable" "temp"
    (1808764 'move' error[1808762] nil[44])
    (1017016 'move' default_arg_hints[1017009](1017011 call reader_default_hints[1016972] call_tmp[723997] error[1808762]))
    val errorExists[2108216]:bool[10] "temp"
    (2108221 'move' errorExists[2108216](2108218 '!=' error[1808762] nil[44]))
    if errorExists[2108216]
    {
      (1808767 call chpl_propagate_error[170472] error[1808762])
    }
    val error[1808775]:Error[167938] "error variable" "temp"
    (1808777 'move' error[1808775] nil[44])
    (1017594 'move' default_arg_style[1017587](1017589 call reader_default_style[1017020] call_tmp[723997] error[1808775]))
    val errorExists[2108224]:bool[10] "temp"
    (2108229 'move' errorExists[2108224](2108226 '!=' error[1808775] nil[44]))
    if errorExists[2108224]
    {
      (1808780 call chpl_propagate_error[170472] error[1808775])
    }
    val error[1808788]:Error[167938] "error variable" "temp"
    (1808790 'move' error[1808788] nil[44])
    const-val ret_tmp[1832521]:channel(false,dynamic,true)[985627] "temp"
    (250221 call reader[1016561] call_tmp[723997] default_arg_start[1016897] default_arg_end[1016961] default_arg_hints[1017009] default_arg_style[1017587] error[1808788] ret_tmp[1832521])
    (1832524 'move' call_tmp[724004] ret_tmp[1832521])
    val errorExists[2108232]:bool[10] "temp"
    (2108237 'move' errorExists[2108232](2108234 '!=' error[1808788] nil[44]))
    if errorExists[2108232]
    {
      (1808793 call chpl_propagate_error[170472] error[1808788])
    }
    (547550 'move' stdin[250208] call_tmp[724004])
    (2085065 '_private_broadcast' stdin[250208])
    val type_tmp[547553]:channel(true,dynamic,true)[1021825] "dead after last mention" "maybe param" "temp" "type variable"
    (724012 'move' call_tmp[724009](250243 call chpl_cstdout[223558]))
    const-val default_arg_hints[1021885]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808801]:Error[167938] "error variable" "temp"
    (1808803 'move' error[1808801] nil[44])
    (1021890 'move' default_arg_hints[1021885](1021887 call openfp_default_hints[1021852] error[1808801]))
    val errorExists[2108240]:bool[10] "temp"
    (2108245 'move' errorExists[2108240](2108242 '!=' error[1808801] nil[44]))
    if errorExists[2108240]
    {
      (1808806 call chpl_propagate_error[170472] error[1808801])
    }
    const-val default_arg_style[1021914]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808814]:Error[167938] "error variable" "temp"
    (1808816 'move' error[1808814] nil[44])
    (1021919 'move' default_arg_style[1021914](1021916 call openfp_default_style[1021894] error[1808814]))
    val errorExists[2108248]:bool[10] "temp"
    (2108253 'move' errorExists[2108248](2108250 '!=' error[1808814] nil[44]))
    if errorExists[2108248]
    {
      (1808819 call chpl_propagate_error[170472] error[1808814])
    }
    val error[1808827]:Error[167938] "error variable" "temp"
    (1808829 'move' error[1808827] nil[44])
    const-val ret_tmp[1831483]:file[235580] "temp"
    (250245 call openfp[237400] call_tmp[724009] default_arg_hints[1021885] default_arg_style[1021914] error[1808827] ret_tmp[1831483])
    (1831486 'move' call_tmp[724014] ret_tmp[1831483])
    val errorExists[2108256]:bool[10] "temp"
    (2108261 'move' errorExists[2108256](2108258 '!=' error[1808827] nil[44]))
    if errorExists[2108256]
    {
      (1808832 call chpl_propagate_error[170472] error[1808827])
    }
    val error[1808840]:Error[167938] "error variable" "temp"
    (1808842 'move' error[1808840] nil[44])
    (1022479 'move' default_arg_start[1022472](1022474 call writer_default_start[1022436] call_tmp[724014] error[1808840]))
    val errorExists[2108264]:bool[10] "temp"
    (2108269 'move' errorExists[2108264](2108266 '!=' error[1808840] nil[44]))
    if errorExists[2108264]
    {
      (1808845 call chpl_propagate_error[170472] error[1808840])
    }
    val error[1808853]:Error[167938] "error variable" "temp"
    (1808855 'move' error[1808853] nil[44])
    (1022543 'move' default_arg_end[1022536](1022538 call writer_default_end[1022483] call_tmp[724014] error[1808853]))
    val errorExists[2108272]:bool[10] "temp"
    (2108277 'move' errorExists[2108272](2108274 '!=' error[1808853] nil[44]))
    if errorExists[2108272]
    {
      (1808858 call chpl_propagate_error[170472] error[1808853])
    }
    val error[1808866]:Error[167938] "error variable" "temp"
    (1808868 'move' error[1808866] nil[44])
    (1022594 'move' default_arg_hints[1022587](1022589 call writer_default_hints[1022547] call_tmp[724014] error[1808866]))
    val errorExists[2108280]:bool[10] "temp"
    (2108285 'move' errorExists[2108280](2108282 '!=' error[1808866] nil[44]))
    if errorExists[2108280]
    {
      (1808871 call chpl_propagate_error[170472] error[1808866])
    }
    val error[1808879]:Error[167938] "error variable" "temp"
    (1808881 'move' error[1808879] nil[44])
    (1022631 'move' default_arg_style[1022624](1022626 call writer_default_style[1022598] call_tmp[724014] error[1808879]))
    val errorExists[2108288]:bool[10] "temp"
    (2108293 'move' errorExists[2108288](2108290 '!=' error[1808879] nil[44]))
    if errorExists[2108288]
    {
      (1808884 call chpl_propagate_error[170472] error[1808879])
    }
    val error[1808892]:Error[167938] "error variable" "temp"
    (1808894 'move' error[1808892] nil[44])
    const-val ret_tmp[1832581]:channel(true,dynamic,true)[1021825] "temp"
    (250250 call writer[1022136] call_tmp[724014] default_arg_start[1022472] default_arg_end[1022536] default_arg_hints[1022587] default_arg_style[1022624] error[1808892] ret_tmp[1832581])
    (1832584 'move' call_tmp[724021] ret_tmp[1832581])
    val errorExists[2108296]:bool[10] "temp"
    (2108301 'move' errorExists[2108296](2108298 '!=' error[1808892] nil[44]))
    if errorExists[2108296]
    {
      (1808897 call chpl_propagate_error[170472] error[1808892])
    }
    (547565 'move' stdout[250235] call_tmp[724021])
    (2085067 '_private_broadcast' stdout[250235])
    val type_tmp[547568]:channel(true,dynamic,true)[1021825] "dead after last mention" "maybe param" "temp" "type variable"
    (724029 'move' call_tmp[724026](250272 call chpl_cstderr[223566]))
    const-val default_arg_hints[1023857]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1808905]:Error[167938] "error variable" "temp"
    (1808907 'move' error[1808905] nil[44])
    (1023862 'move' default_arg_hints[1023857](1023859 call openfp_default_hints[1021852] error[1808905]))
    val errorExists[2108304]:bool[10] "temp"
    (2108309 'move' errorExists[2108304](2108306 '!=' error[1808905] nil[44]))
    if errorExists[2108304]
    {
      (1808910 call chpl_propagate_error[170472] error[1808905])
    }
    const-val default_arg_style[1023866]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808918]:Error[167938] "error variable" "temp"
    (1808920 'move' error[1808918] nil[44])
    (1023871 'move' default_arg_style[1023866](1023868 call openfp_default_style[1021894] error[1808918]))
    val errorExists[2108312]:bool[10] "temp"
    (2108317 'move' errorExists[2108312](2108314 '!=' error[1808918] nil[44]))
    if errorExists[2108312]
    {
      (1808923 call chpl_propagate_error[170472] error[1808918])
    }
    val error[1808931]:Error[167938] "error variable" "temp"
    (1808933 'move' error[1808931] nil[44])
    const-val ret_tmp[1831489]:file[235580] "temp"
    (250274 call openfp[237400] call_tmp[724026] default_arg_hints[1023857] default_arg_style[1023866] error[1808931] ret_tmp[1831489])
    (1831492 'move' call_tmp[724031] ret_tmp[1831489])
    val errorExists[2108320]:bool[10] "temp"
    (2108325 'move' errorExists[2108320](2108322 '!=' error[1808931] nil[44]))
    if errorExists[2108320]
    {
      (1808936 call chpl_propagate_error[170472] error[1808931])
    }
    val error[1808944]:Error[167938] "error variable" "temp"
    (1808946 'move' error[1808944] nil[44])
    (1023915 'move' default_arg_start[1023908](1023910 call writer_default_start[1022436] call_tmp[724031] error[1808944]))
    val errorExists[2108328]:bool[10] "temp"
    (2108333 'move' errorExists[2108328](2108330 '!=' error[1808944] nil[44]))
    if errorExists[2108328]
    {
      (1808949 call chpl_propagate_error[170472] error[1808944])
    }
    val error[1808957]:Error[167938] "error variable" "temp"
    (1808959 'move' error[1808957] nil[44])
    (1023926 'move' default_arg_end[1023919](1023921 call writer_default_end[1022483] call_tmp[724031] error[1808957]))
    val errorExists[2108336]:bool[10] "temp"
    (2108341 'move' errorExists[2108336](2108338 '!=' error[1808957] nil[44]))
    if errorExists[2108336]
    {
      (1808962 call chpl_propagate_error[170472] error[1808957])
    }
    val error[1808970]:Error[167938] "error variable" "temp"
    (1808972 'move' error[1808970] nil[44])
    (1023937 'move' default_arg_hints[1023930](1023932 call writer_default_hints[1022547] call_tmp[724031] error[1808970]))
    val errorExists[2108344]:bool[10] "temp"
    (2108349 'move' errorExists[2108344](2108346 '!=' error[1808970] nil[44]))
    if errorExists[2108344]
    {
      (1808975 call chpl_propagate_error[170472] error[1808970])
    }
    val error[1808983]:Error[167938] "error variable" "temp"
    (1808985 'move' error[1808983] nil[44])
    (1023948 'move' default_arg_style[1023941](1023943 call writer_default_style[1022598] call_tmp[724031] error[1808983]))
    val errorExists[2108352]:bool[10] "temp"
    (2108357 'move' errorExists[2108352](2108354 '!=' error[1808983] nil[44]))
    if errorExists[2108352]
    {
      (1808988 call chpl_propagate_error[170472] error[1808983])
    }
    val error[1808996]:Error[167938] "error variable" "temp"
    (1808998 'move' error[1808996] nil[44])
    const-val ret_tmp[1832587]:channel(true,dynamic,true)[1021825] "temp"
    (250279 call writer[1022136] call_tmp[724031] default_arg_start[1023908] default_arg_end[1023919] default_arg_hints[1023930] default_arg_style[1023941] error[1808996] ret_tmp[1832587])
    (1832590 'move' call_tmp[724038] ret_tmp[1832587])
    val errorExists[2108360]:bool[10] "temp"
    (2108365 'move' errorExists[2108360](2108362 '!=' error[1808996] nil[44]))
    if errorExists[2108360]
    {
      (1809001 call chpl_propagate_error[170472] error[1808996])
    }
    (547580 'move' stderr[250264] call_tmp[724038])
    (2085069 '_private_broadcast' stderr[250264])
    (536188 return _void[55])
  }
  def module FormattedIO[251268]  
  type iomode[230915] def r[230904]:iomode[230915] 1 def cw[230907]:iomode[230915] 2 def rw[230910]:iomode[230915] 3 def cwr[230913]:iomode[230915] 4
  type iokind[230931] def dynamic[230920]:iokind[230931] 0 def native[230923]:iokind[230931] 1 def big[230926]:iokind[230931] 2 def little[230929]:iokind[230931] 3
  type iostringstyle[231014] def len1b_data[230978]:iostringstyle[231014] -1 def len2b_data[230983]:iostringstyle[231014] -2 def len4b_data[230988]:iostringstyle[231014] -4 def len8b_data[230993]:iostringstyle[231014] -8 def lenVb_data[230998]:iostringstyle[231014] -10 def data_toeof[231005]:iostringstyle[231014] -65280 def data_null[231012]:iostringstyle[231014] -256
  type iostringformat[231036] def word[231019]:iostringformat[231036] 0 def basic[231022]:iostringformat[231036] 1 def chpl[231025]:iostringformat[231036] 2 def json[231028]:iostringformat[231036] 3 def toend[231031]:iostringformat[231036] 4 def toeof[231034]:iostringformat[231036] 5
  const QIO_FDFLAG_UNK[231298]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231303]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231308]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231313]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231318]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231323]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231328]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231333]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231338]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231343]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231348]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231353]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231358]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231363]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231368]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231373]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231378]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231383]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231388]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231393]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231398]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231403]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231411]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231416]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231421]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231426]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231431]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  function =[859772](ref arg _arg1[859774]:_ref(qio_file_ptr_t)[936873], const in arg _arg2[859775]:qio_file_ptr_t[231439]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (859778 '=' _arg1[859774] _arg2[859775])
    (859783 return _void[55])
  }
  type qio_file_ptr_t[231439]
  const-val QIO_FILE_PTR_NULL[231442]:qio_file_ptr_t[231439] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function =[861480](ref arg _arg1[861482]:_ref(qio_channel_ptr_t)[936884], const in arg _arg2[861483]:qio_channel_ptr_t[231465]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (861486 '=' _arg1[861482] _arg2[861483])
    (861491 return _void[55])
  }
  type qio_channel_ptr_t[231465]
  const-val QIO_CHANNEL_PTR_NULL[231468]:qio_channel_ptr_t[231465] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231476]
  const-val QBUFFER_PTR_NULL[231479]:qbuffer_ptr_t[231476] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231494]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231502]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231510]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231518]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231526]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231534]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function =[879089](ref arg _arg1[879091]:_ref(iostyle)[967550], const  ref arg _arg2[879092]:iostyle[231844]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (879102 '=' _arg1[879091] _arg2[879092])
    (879107 return _void[55])
  }
  type iostyle[231844] val binary[231544]:uint(8)[100] val byteorder[231562]:uint(8)[100] val str_style[231582]:int(64)[13] val min_width_columns[231591]:uint(32)[110] val max_width_columns[231606]:uint(32)[110] val max_width_characters[231621]:uint(32)[110] val max_width_bytes[231636]:uint(32)[110] val string_start[231642]:uint(8)[100] val string_end[231648]:uint(8)[100] val string_format[231668]:uint(8)[100] val bytes_prefix[231674]:uint(8)[100] val base[231683]:uint(8)[100] val point_char[231689]:uint(8)[100] val exponent_char[231697]:uint(8)[100] val other_exponent_char[231703]:uint(8)[100] val positive_char[231709]:uint(8)[100] val negative_char[231715]:uint(8)[100] val i_char[231723]:uint(8)[100] val prefix_base[231732]:uint(8)[100] val pad_char[231738]:uint(8)[100] val showplus[231747]:uint(8)[100] val uppercase[231756]:uint(8)[100] val leftjustify[231765]:uint(8)[100] val showpoint[231774]:uint(8)[100] val showpointzero[231783]:uint(8)[100] val precision[231794]:int(32)[95] val realfmt[231803]:uint(8)[100] val complex_style[231812]:uint(8)[100] val array_style[231821]:uint(8)[100] val aggregate_style[231830]:uint(8)[100] val tuple_style[231839]:uint(8)[100]
  function QioPluginFile[232010].setupChannel[231856](const in arg this[232012]:QioPluginFile[232010], ref arg pluginChannel[231853]:_ref(QioPluginChannel)[1456444], const in arg start[231862]:int(64)[13], const in arg end[231869]:int(64)[13], const in arg qioChannelPtr[231873]:qio_channel_ptr_t[231465]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1456483]:QioPluginChannel[232093] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1456508 'move' _formal_tmp_pluginChannel[1456483](1456506 'cast' QioPluginChannel[232093] nil[44]))
    val ret[533653]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1456499 call =[224133] ret[533653] ENOSYS[224684])
    label _endsetupChannel[1456493]
    (1842427 '=' pluginChannel[231853] _formal_tmp_pluginChannel[1456483])
    (533655 return ret[533653])
  }
  function QioPluginFile[232010].filelength[231893](const in arg this[232016]:QioPluginFile[232010], ref arg length[231890]:_ref(int(64))[936572]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1458120]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458143 'move' _formal_tmp_length[1458120] 0)
    val ret[533663]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458136 call =[224133] ret[533663] ENOSYS[224684])
    label _endfilelength[1458130]
    (1842430 '=' length[231890] _formal_tmp_length[1458120])
    (533665 return ret[533663])
  }
  function QioPluginFile[232010].getpath[231909](const in arg this[232020]:QioPluginFile[232010], ref arg path[231906]:_ref(c_string)[937227], ref arg len[231915]:_ref(int(64))[936572]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1458178]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458213 'move' _formal_tmp_path[1458178](1458211 'cast' c_string[19] nil[44]))
    const-val _formal_tmp_len[1458179]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458216 'move' _formal_tmp_len[1458179] 0)
    val ret[533673]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458204 call =[224133] ret[533673] ENOSYS[224684])
    label _endgetpath[1458189]
    (1842433 '=' path[231906] _formal_tmp_path[1458178])
    (1842436 '=' len[231915] _formal_tmp_len[1458179])
    (533675 return ret[533673])
  }
  function QioPluginFile[232010].fsync[231928](const in arg this[232024]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533683]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458239 call =[224133] ret[533683] ENOSYS[224684])
    (533685 return ret[533683])
  }
  function QioPluginFile[232010].getChunk[231947](const in arg this[232028]:QioPluginFile[232010], ref arg length[231944]:_ref(int(64))[936572]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1458270]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458293 'move' _formal_tmp_length[1458270] 0)
    val ret[533693]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458286 call =[224133] ret[533693] ENOSYS[224684])
    label _endgetChunk[1458280]
    (1842439 '=' length[231944] _formal_tmp_length[1458270])
    (533695 return ret[533693])
  }
  function QioPluginFile[232010].getLocalesForRegion[231966](const in arg this[232032]:QioPluginFile[232010], const in arg start[231963]:int(64)[13], const in arg end[231972]:int(64)[13], ref arg localeNames[231979]:_ref(c_ptr(c_string))[1458314], ref arg nLocales[231986]:_ref(int(64))[936572]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1458357]:c_ptr(c_string)[1458305] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458382 'move' _formal_tmp_localeNames[1458357](1458380 'cast' c_ptr(c_string)[1458305] nil[44]))
    val ret[533703]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458373 call =[224133] ret[533703] ENOSYS[224684])
    label _endgetLocalesForRegion[1458367]
    (1842442 '=' localeNames[231979] _formal_tmp_localeNames[1458357])
    (533705 return ret[533703])
  }
  function QioPluginFile[232010].close[231999](const in arg this[232036]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533713]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1458459 call =[224133] ret[533713] ENOSYS[224684])
    (533715 return ret[533713])
  }
  function QioPluginFile[232010].deinit[879961](const in arg this[879965]:QioPluginFile[232010]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814966]
    val _parent_destructor_tmp_[1814961]:object[22] "temp"
    (1814968 'move' _parent_destructor_tmp_[1814961](1814962 'cast' object[22] this[879965]))
    (1814970 call deinit[749379] _parent_destructor_tmp_[1814961])
    (879973 return _void[55])
  }
  type QioPluginFile[232010] val super[355724]:object[22] "super class"
  function QioPluginChannel[232093].readAtLeast[232051](const in arg this[232095]:QioPluginChannel[232093], const in arg amt[232048]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533723]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1456982 call =[224133] ret[533723] ENOSYS[224684])
    (533725 return ret[533723])
  }
  function QioPluginChannel[232093].write[232070](const in arg this[232099]:QioPluginChannel[232093], const in arg amt[232067]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533733]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1457005 call =[224133] ret[533733] ENOSYS[224684])
    (533735 return ret[533733])
  }
  function QioPluginChannel[232093].close[232082](const in arg this[232103]:QioPluginChannel[232093]) : syserr[223584] "method" "primary method" "resolved"
  {
    val ret[533743]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    (1457027 call =[224133] ret[533743] ENOSYS[224684])
    (533745 return ret[533743])
  }
  function QioPluginChannel[232093].deinit[880097](const in arg this[880101]:QioPluginChannel[232093]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814978]
    val _parent_destructor_tmp_[1814973]:object[22] "temp"
    (1814980 'move' _parent_destructor_tmp_[1814973](1814974 'cast' object[22] this[880101]))
    (1814982 call deinit[749379] _parent_destructor_tmp_[1814973])
    (880109 return _void[55])
  }
  type QioPluginChannel[232093] val super[355726]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232114](const in arg file[232111]:c_void_ptr[149], ref arg plugin_ch[232117]:_ref(c_void_ptr)[938122], const in arg start[232124]:int(64)[13], const in arg end[232131]:int(64)[13], const in arg qio_ch[232135]:qio_channel_ptr_t[231465]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533753]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715106]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715109 'move' call_tmp[715106](232143 call _cast[1456077] file[232111]))
    val call_tmp[715111]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715114 'move' call_tmp[715111](232145 call postfix![1456106] call_tmp[715106]))
    val f[232147]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546853 'move' f[232147](1456418 call chpl__initCopy[1456399] call_tmp[715111]))
    val pluginChannel[232156]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1456460]:QioPluginChannel[232093] "dead at end of block" "temp"
    (1456463 'move' init_coerce_tmp[1456460](1456628 'cast' QioPluginChannel[232093] nil[44]))
    (546855 'move' pluginChannel[232156] init_coerce_tmp[1456460])
    const-val call_tmp[715118]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1456468]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1456473 'move' coerce_tmp[1456468] f[232147])
    val _formal_tmp_out_pluginChannel[1456475]:QioPluginChannel[232093] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715121 'move' call_tmp[715118](232171 call setupChannel[231856] coerce_tmp[1456468] _formal_tmp_out_pluginChannel[1456475] start[232124] end[232131] qio_ch[232135]))
    (1456477 call =[1456548] pluginChannel[232156] _formal_tmp_out_pluginChannel[1456475])
    const-val ret[232172]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546857 'move' ret[232172](1456584 call chpl__initCopy[964485] call_tmp[715118]))
    const-val call_tmp[715123]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715126 'move' call_tmp[715123](232179 call _cast[1456598] pluginChannel[232156]))
    (232181 call =[15832] plugin_ch[232117] call_tmp[715123])
    (1456633 'move' ret[533753] ret[232172])
    gotoReturn _end_chpl_qio_setup_plugin_channel[533751] _end_chpl_qio_setup_plugin_channel[533751]
    label _end_chpl_qio_setup_plugin_channel[533751]
    (533755 return ret[533753])
  }
  function chpl_qio_read_atleast[232196](const in arg ch_plugin[232193]:c_void_ptr[149], const in arg amt[232202]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533765]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715128]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    (715131 'move' call_tmp[715128](232209 call _cast[1456636] ch_plugin[232193]))
    val call_tmp[715133]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    (715136 'move' call_tmp[715133](232211 call postfix![1456665] call_tmp[715128]))
    val c[232213]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546859 'move' c[232213](1456967 call chpl__initCopy[1456948] call_tmp[715133]))
    const-val call_tmp[715140]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1456971]:QioPluginChannel[232093] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1456976 'move' coerce_tmp[1456971] c[232213])
    (715143 'move' call_tmp[715140](232226 call readAtLeast[232051] coerce_tmp[1456971] amt[232202]))
    (533770 'move' ret[533765] call_tmp[715140])
    gotoReturn _end_chpl_qio_read_atleast[533763] _end_chpl_qio_read_atleast[533763]
    label _end_chpl_qio_read_atleast[533763]
    (533767 return ret[533765])
  }
  function chpl_qio_write[232237](const in arg ch_plugin[232234]:c_void_ptr[149], const in arg amt[232243]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533776]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715145]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    (715148 'move' call_tmp[715145](232250 call _cast[1456636] ch_plugin[232234]))
    val call_tmp[715150]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    (715153 'move' call_tmp[715150](232252 call postfix![1456665] call_tmp[715145]))
    val c[232254]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546861 'move' c[232254](1456991 call chpl__initCopy[1456948] call_tmp[715150]))
    const-val call_tmp[715157]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1456994]:QioPluginChannel[232093] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1456999 'move' coerce_tmp[1456994] c[232254])
    (715160 'move' call_tmp[715157](232265 call write[232070] coerce_tmp[1456994] amt[232243]))
    (533781 'move' ret[533776] call_tmp[715157])
    gotoReturn _end_chpl_qio_write[533774] _end_chpl_qio_write[533774]
    label _end_chpl_qio_write[533774]
    (533778 return ret[533776])
  }
  function chpl_qio_channel_close[232276](const in arg ch[232273]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533787]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715162]:QioPluginChannel[232093] "dead at end of block" "expr temp" "maybe param" "temp"
    (715165 'move' call_tmp[715162](232283 call _cast[1456636] ch[232273]))
    val call_tmp[715167]:QioPluginChannel[232093] "dead at end of block" "maybe param" "temp"
    (715170 'move' call_tmp[715167](232285 call postfix![1456665] call_tmp[715162]))
    val c[232287]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546863 'move' c[232287](1457013 call chpl__initCopy[1456948] call_tmp[715167]))
    const-val call_tmp[715174]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1457016]:QioPluginChannel[232093] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1457021 'move' coerce_tmp[1457016] c[232287])
    (715177 'move' call_tmp[715174](232299 call close[232082] coerce_tmp[1457016]))
    const-val err[232300]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546865 'move' err[232300](1457033 call chpl__initCopy[964485] call_tmp[715174]))
    (232306 call chpl__delete[1457036] c[232287])
    (1458096 'move' ret[533787] err[232300])
    gotoReturn _end_chpl_qio_channel_close[533785] _end_chpl_qio_channel_close[533785]
    label _end_chpl_qio_channel_close[533785]
    (533789 return ret[533787])
  }
  function chpl_qio_filelength[232321](const in arg file[232318]:c_void_ptr[149], ref arg length[232327]:_ref(int(64))[936572]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533799]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715179]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715182 'move' call_tmp[715179](232335 call _cast[1456077] file[232318]))
    val call_tmp[715184]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715187 'move' call_tmp[715184](232337 call postfix![1456106] call_tmp[715179]))
    val f[232339]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546867 'move' f[232339](1458101 call chpl__initCopy[1456399] call_tmp[715184]))
    const-val call_tmp[715191]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458105]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458110 'move' coerce_tmp[1458105] f[232339])
    val _formal_tmp_out_length[1458112]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715194 'move' call_tmp[715191](232352 call filelength[231893] coerce_tmp[1458105] _formal_tmp_out_length[1458112]))
    (1458114 call =[435327] length[232327] _formal_tmp_out_length[1458112])
    (1458147 'move' ret[533799] call_tmp[715191])
    gotoReturn _end_chpl_qio_filelength[533797] _end_chpl_qio_filelength[533797]
    label _end_chpl_qio_filelength[533797]
    (533801 return ret[533799])
  }
  function chpl_qio_getpath[232364](const in arg file[232361]:c_void_ptr[149], ref arg str[232367]:_ref(c_string)[937227], ref arg len[232374]:_ref(int(64))[936572]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533811]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715196]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715199 'move' call_tmp[715196](232382 call _cast[1456077] file[232361]))
    val call_tmp[715201]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715204 'move' call_tmp[715201](232384 call postfix![1456106] call_tmp[715196]))
    val f[232386]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546869 'move' f[232386](1458152 call chpl__initCopy[1456399] call_tmp[715201]))
    const-val call_tmp[715208]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458156]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458161 'move' coerce_tmp[1458156] f[232386])
    val _formal_tmp_out_path[1458163]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1458170]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715211 'move' call_tmp[715208](232400 call getpath[231909] coerce_tmp[1458156] _formal_tmp_out_path[1458163] _formal_tmp_out_len[1458170]))
    (1458165 call =[21893] str[232367] _formal_tmp_out_path[1458163])
    (1458172 call =[435327] len[232374] _formal_tmp_out_len[1458170])
    (1458221 'move' ret[533811] call_tmp[715208])
    gotoReturn _end_chpl_qio_getpath[533809] _end_chpl_qio_getpath[533809]
    label _end_chpl_qio_getpath[533809]
    (533813 return ret[533811])
  }
  function chpl_qio_fsync[232412](const in arg file[232409]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533823]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715213]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715216 'move' call_tmp[715213](232419 call _cast[1456077] file[232409]))
    val call_tmp[715218]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715221 'move' call_tmp[715218](232421 call postfix![1456106] call_tmp[715213]))
    val f[232423]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546871 'move' f[232423](1458225 call chpl__initCopy[1456399] call_tmp[715218]))
    const-val call_tmp[715225]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458228]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458233 'move' coerce_tmp[1458228] f[232423])
    (715228 'move' call_tmp[715225](232435 call fsync[231928] coerce_tmp[1458228]))
    (1458246 'move' ret[533823] call_tmp[715225])
    gotoReturn _end_chpl_qio_fsync[533821] _end_chpl_qio_fsync[533821]
    label _end_chpl_qio_fsync[533821]
    (533825 return ret[533823])
  }
  function chpl_qio_get_chunk[232447](const in arg file[232444]:c_void_ptr[149], ref arg length[232453]:_ref(int(64))[936572]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533835]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715230]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715233 'move' call_tmp[715230](232461 call _cast[1456077] file[232444]))
    val call_tmp[715235]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715238 'move' call_tmp[715235](232463 call postfix![1456106] call_tmp[715230]))
    val f[232465]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546873 'move' f[232465](1458251 call chpl__initCopy[1456399] call_tmp[715235]))
    const-val call_tmp[715242]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1458255]:QioPluginFile[232010] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1458260 'move' coerce_tmp[1458255] f[232465])
    val _formal_tmp_out_length[1458262]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715245 'move' call_tmp[715242](232478 call getChunk[231947] coerce_tmp[1458255] _formal_tmp_out_length[1458262]))
    (1458264 call =[435327] length[232453] _formal_tmp_out_length[1458262])
    (1458297 'move' ret[533835] call_tmp[715242])
    gotoReturn _end_chpl_qio_get_chunk[533833] _end_chpl_qio_get_chunk[533833]
    label _end_chpl_qio_get_chunk[533833]
    (533837 return ret[533835])
  }
  function chpl_qio_get_locales_for_region[232490](const in arg file[232487]:c_void_ptr[149], const in arg start[232496]:int(64)[13], const in arg end[232503]:int(64)[13], ref arg localeNames[232507]:_ref(c_void_ptr)[938122], const  ref arg nLocales[232514]:_ref(int(64))[936572]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533847]:syserr[223584] "dead after last mention" "RVV" "temp"
    val strPtr[232522]:c_ptr(c_string)[1458305] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[715247]:c_ptr(c_string)[1458305] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[715252]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715255 'move' call_tmp[715252](232531 call _cast[1456077] file[232487]))
    val call_tmp[715257]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715260 'move' call_tmp[715257](232533 call postfix![1456106] call_tmp[715252]))
    val f[232535]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546877 'move' f[232535](1458328 call chpl__initCopy[1456399] call_tmp[715257]))
    const-val call_tmp[715264]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1458342]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1458347 'move' coerce_tmp[1458342] f[232535])
    val _formal_tmp_out_localeNames[1458349]:c_ptr(c_string)[1458305] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715267 'move' call_tmp[715264](232550 call getLocalesForRegion[231966] coerce_tmp[1458342] start[232496] end[232503] _formal_tmp_out_localeNames[1458349] nLocales[232514]))
    (1842445 '=' strPtr[232522] _formal_tmp_out_localeNames[1458349])
    (1458416 'noop')
    const-val ret[232551]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546879 'move' ret[232551](1458411 call chpl__initCopy[964485] call_tmp[715264]))
    const-val call_tmp[715269]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715272 'move' call_tmp[715269](232558 'cast' c_void_ptr[149] strPtr[232522]))
    (232560 call =[15832] localeNames[232507] call_tmp[715269])
    (1458441 'move' ret[533847] ret[232551])
    gotoReturn _end_chpl_qio_get_locales_for_region[533845] _end_chpl_qio_get_locales_for_region[533845]
    label _end_chpl_qio_get_locales_for_region[533845]
    (533849 return ret[533847])
  }
  function chpl_qio_file_close[232575](const in arg file[232572]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    val ret[533859]:syserr[223584] "dead after last mention" "RVV" "temp"
    val call_tmp[715274]:QioPluginFile[232010] "dead at end of block" "expr temp" "maybe param" "temp"
    (715277 'move' call_tmp[715274](232582 call _cast[1456077] file[232572]))
    val call_tmp[715279]:QioPluginFile[232010] "dead at end of block" "maybe param" "temp"
    (715282 'move' call_tmp[715279](232584 call postfix![1456106] call_tmp[715274]))
    val f[232586]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546881 'move' f[232586](1458445 call chpl__initCopy[1456399] call_tmp[715279]))
    const-val call_tmp[715286]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1458448]:QioPluginFile[232010] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1458453 'move' coerce_tmp[1458448] f[232586])
    (715289 'move' call_tmp[715286](232596 call close[231999] coerce_tmp[1458448]))
    const-val err[232597]:syserr[223584] "dead at end of block" "insert auto destroy"
    (546883 'move' err[232597](1458465 call chpl__initCopy[964485] call_tmp[715286]))
    (232603 call chpl__delete[1458468] f[232586])
    (1459528 'move' ret[533859] err[232597])
    gotoReturn _end_chpl_qio_file_close[533857] _end_chpl_qio_file_close[533857]
    label _end_chpl_qio_file_close[533857]
    (533861 return ret[533859])
  }
  function qio_style_init_default[232618](ref arg s[232615]:_ref(iostyle)[967550]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533869 return _void[55])
  }
  function qio_file_release[232638](const in arg f[232635]:qio_file_ptr_t[231439]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533873 return _void[55])
  }
  function qio_file_init[232648](ref arg file_out[232645]:_ref(qio_file_ptr_t)[936873], const in arg fp[232651]:_file[155], const in arg fd[232655]:int(32)[95], const in arg iohints[232659]:int(32)[95], const  ref arg style[232663]:_ref(iostyle)[967550], const in arg usefilestar[232667]:int(32)[95]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533877]:syserr[223584] "RVV" "temp"
    (533879 return ret[533877])
  }
  function qio_file_open_mem[232728](ref arg file_out[232725]:_ref(qio_file_ptr_t)[936873], const in arg buf[232731]:qbuffer_ptr_t[231476], const  ref arg style[232735]:_ref(iostyle)[967550]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533895]:syserr[223584] "RVV" "temp"
    (533897 return ret[533895])
  }
  function qio_file_close[232748](const in arg f[232745]:qio_file_ptr_t[231439]) : syserr[223584] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533901]:syserr[223584] "RVV" "temp"
    (533903 return ret[533901])
  }
  function qio_file_isopen[232782](const in arg f[232779]:qio_file_ptr_t[231439]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533915]:bool[10] "RVV" "temp"
    (533917 return ret[533915])
  }
  function qio_file_get_style[232821](const in arg f[232818]:qio_file_ptr_t[231439], ref arg style[232824]:_ref(iostyle)[967550]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533931 return _void[55])
  }
  function qio_channel_create[232878](ref arg ch[232875]:_ref(qio_channel_ptr_t)[936884], const in arg file[232881]:qio_file_ptr_t[231439], const in arg hints[232885]:int(32)[95], const in arg readable[232889]:int(32)[95], const in arg writeable[232893]:int(32)[95], const in arg start[232900]:int(64)[13], const in arg end[232907]:int(64)[13], const  ref arg style[232911]:_ref(iostyle)[967550]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533953]:syserr[223584] "RVV" "temp"
    (533955 return ret[533953])
  }
  function qio_channel_path_offset[232924](const in arg threadsafe[232921]:int(32)[95], const in arg ch[232927]:qio_channel_ptr_t[231465], ref arg path[232931]:_ref(c_string)[937227], ref arg offset[232938]:_ref(int(64))[936572]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533959]:syserr[223584] "RVV" "temp"
    (533961 return ret[533959])
  }
  function qio_channel_retain[232951](const in arg ch[232948]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533963 return _void[55])
  }
  function qio_channel_release[232961](const in arg ch[232958]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533965 return _void[55])
  }
  function qio_channel_lock[233007](const in arg ch[233004]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533979]:syserr[223584] "RVV" "temp"
    (533981 return ret[533979])
  }
  function qio_channel_unlock[233019](const in arg ch[233016]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533983 return _void[55])
  }
  function qio_channel_binary[233057](const in arg ch[233054]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533991]:uint(8)[100] "RVV" "temp"
    (533993 return ret[533991])
  }
  function qio_channel_byteorder[233072](const in arg ch[233069]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533997]:uint(8)[100] "RVV" "temp"
    (533999 return ret[533997])
  }
  function qio_channel_str_style[233087](const in arg ch[233084]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534003]:int(64)[13] "RVV" "temp"
    (534005 return ret[534003])
  }
  function qio_channel_style_element[233102](const in arg ch[233099]:qio_channel_ptr_t[231465], const in arg element[233108]:int(64)[13]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534009]:int(64)[13] "RVV" "temp"
    (534011 return ret[534009])
  }
  function qio_channel_close[233140](const in arg threadsafe[233137]:int(32)[95], const in arg ch[233143]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534021]:syserr[223584] "RVV" "temp"
    (534023 return ret[534021])
  }
  function qio_channel_read_amt[1083283](const in arg threadsafe[1083287]:int(32)[95], const in arg ch[1083289]:qio_channel_ptr_t[231465], const in arg ptr[1083291]:c_ptr(uint(8))[937423], const in arg len[1083295]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083299]:syserr[223584] "RVV" "temp"
    (1083307 return ret[1083299])
  }
  function qio_channel_write_amt[1407983](const in arg threadsafe[1407987]:int(32)[95], const in arg ch[1407989]:qio_channel_ptr_t[231465], const in arg ptr[1407991]:_ddata(real(64))[1357916], const in arg len[1407995]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "no doc" "private" "resolved" "no return value for void"
  {
    val ret[1407999]:syserr[223584] "RVV" "temp"
    (1408007 return ret[1407999])
  }
  function qio_channel_offset_unlocked[233382](const in arg ch[233379]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534087]:int(64)[13] "RVV" "temp"
    (534089 return ret[534087])
  }
  function qio_file_path_for_fd[233647](const in arg fd[233644]:int(32)[95], ref arg path[233650]:_ref(c_string)[937227]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534157]:syserr[223584] "RVV" "temp"
    (534159 return ret[534157])
  }
  function qio_file_path_for_fp[233663](const in arg fp[233660]:_file[155], ref arg path[233666]:_ref(c_string)[937227]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534163]:syserr[223584] "RVV" "temp"
    (534165 return ret[534163])
  }
  function qio_file_path[233679](const in arg f[233676]:qio_file_ptr_t[231439], ref arg path[233682]:_ref(c_string)[937227]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534169]:syserr[223584] "RVV" "temp"
    (534171 return ret[534169])
  }
  function qio_shortest_path[233695](const in arg fl[233692]:qio_file_ptr_t[231439], ref arg path_out[233698]:_ref(c_string)[937227], const in arg path_in[233702]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534175]:syserr[223584] "RVV" "temp"
    (534177 return ret[534175])
  }
  function qio_channel_write_int64[234050](const in arg threadsafe[234047]:int(32)[95], const in arg byteorder[234053]:int(32)[95], const in arg ch[234057]:qio_channel_ptr_t[231465], const in arg x[234064]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534259]:syserr[223584] "RVV" "temp"
    (534261 return ret[534259])
  }
  function qio_channel_write_float64[234266](const in arg threadsafe[234263]:int(32)[95], const in arg byteorder[234269]:int(32)[95], const in arg ch[234273]:qio_channel_ptr_t[231465], const in arg x[234280]:real(64)[16]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534307]:syserr[223584] "RVV" "temp"
    (534309 return ret[534307])
  }
  function qio_channel_write_string[234389](const in arg threadsafe[234386]:int(32)[95], const in arg byteorder[234392]:int(32)[95], const in arg str_style[234399]:int(64)[13], const in arg ch[234403]:qio_channel_ptr_t[231465], const in arg s[234407]:c_string[19], const in arg len[234411]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534331]:syserr[223584] "RVV" "temp"
    (534333 return ret[534331])
  }
  function qio_channel_print_int[1079525](const in arg threadsafe[1079529]:int(32)[95], const in arg ch[1079531]:qio_channel_ptr_t[231465], const  ref arg ptr[1079533]:_ref(int(64))[936572], const in arg len[1079537]:uint(64)[115], const in arg issigned[1079541]:int(32)[95]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079545]:syserr[223584] "RVV" "temp"
    (1079553 return ret[1079545])
  }
  function qio_channel_print_float[1428545](const in arg threadsafe[1428549]:int(32)[95], const in arg ch[1428551]:qio_channel_ptr_t[231465], const  ref arg ptr[1428553]:_ref(real(64))[936717], const in arg len[1428557]:uint(64)[115]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1428561]:syserr[223584] "RVV" "temp"
    (1428569 return ret[1428561])
  }
  function qio_channel_write_newline[234735](const in arg threadsafe[234732]:int(32)[95], const in arg ch[234738]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534421]:syserr[223584] "RVV" "temp"
    (534423 return ret[534421])
  }
  function qio_channel_print_string[234837](const in arg threadsafe[234834]:int(32)[95], const in arg ch[234840]:qio_channel_ptr_t[231465], const in arg ptr[234844]:c_string[19], const in arg len[234848]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534445]:syserr[223584] "RVV" "temp"
    (534447 return ret[534445])
  }
  function qio_channel_print_literal[234917](const in arg threadsafe[234914]:int(32)[95], const in arg ch[234920]:qio_channel_ptr_t[231465], const in arg match[234924]:c_string[19], const in arg len[234928]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534463]:syserr[223584] "RVV" "temp"
    (534465 return ret[534463])
  }
  const QIO_CONV_UNK[235060]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235065]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235070]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235075]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235080]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235085]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235090]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235095]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235100]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235105]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235110]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235115]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235120]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235125]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235130]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235135]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235140]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235145]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235150]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235155]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235160]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235165]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235170]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235175]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235180]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235185]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235190]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235195]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235200]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235205]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235210]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235295]() : iostyle[231844] "resolved"
  {
    val ret[534517]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235299]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (235307 call qio_style_init_default[232618] ret[235299])
    (985787 'move' ret[534517] ret[235299])
    gotoReturn _end_defaultIOStyle[534515] _end_defaultIOStyle[534515]
    label _end_defaultIOStyle[534515]
    (534519 return ret[534517])
  }
  val iohints[235556]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function _ref(file)[948734].init[235574](ref arg this[235582]:_ref(file)[948734]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[715391]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830517]:locale[28] "temp"
    (465253 call here[90435] ret_tmp[1830517])
    (1830520 'move' call_tmp[715391] ret_tmp[1830517])
    val tmp[465254]:locale[28] "dead after last mention" "temp"
    (465257 'move' tmp[465254] call_tmp[715391])
    (465259 '.=' this[235582] home[235562] tmp[465254])
    val tmp[465264]:qio_file_ptr_t[231439] "dead after last mention" "temp"
    (465267 'move' tmp[465264](1016534 call chpl__initCopy[1016536] QIO_FILE_PTR_NULL[231442]))
    (465269 '.=' this[235582] _file_internal[235568] tmp[465264])
    (534575 return _void[55])
  }
  function _ref(file)[948734].home[886949](ref arg this[886953]:_ref(file)[948734]) ref : _ref(locale)[948844] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[886963]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[886970]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (886973 'move' call_tmp[886970](886957 '.' this[886953] home[235562]))
    (886968 'move' ret[886963] call_tmp[886970])
    (886965 return ret[886963])
  }
  function _ref(file)[948734]._file_internal[886975](ref arg this[886979]:_ref(file)[948734]) ref : _ref(qio_file_ptr_t)[936873] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[886989]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "RVV" "temp"
    ref call_tmp[886996]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
    (886999 'move' call_tmp[886996](886983 '.' this[886979] _file_internal[235568]))
    (886994 'move' ret[886989] call_tmp[886996])
    (886991 return ret[886989])
  }
  type file[235580] val home[235562]:locale[28] "no doc" val _file_internal[235568]:qio_file_ptr_t[231439] "no doc"
  function _ref(file)[948734].checkAssumingLocal[235768](const  ref arg this[235770]:_ref(file)[948734], ref arg error_out[1808254]:Error[167938]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[715499]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
    (715502 'move' call_tmp[715499](396380 call _file_internal[886975] this[235770]))
    const-val call_tmp[715504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017098]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017102 'move' coerce_tmp[1017098](1017100 'deref' call_tmp[715499]))
    (715507 'move' call_tmp[715504](235778 call is_c_nil[1017056] coerce_tmp[1017098]))
    const-val call_tmp[715509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715512 'move' call_tmp[715509] call_tmp[715504])
    if call_tmp[715509]
    {
      const-val call_tmp[715516]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017164 'move' coerce_tmp[1017158](1017160 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832533]:owned SystemError[1000238] "temp"
      (235802 call fromSyserr[1017113] coerce_tmp[1017158] "Operation attempted on an invalid file" ret_tmp[1832533])
      (1832536 'move' call_tmp[715516] ret_tmp[1832533])
      val call_tmp[715521]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017173]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832461]:owned Error[966458] "temp"
      (1017175 call _cast[1015747] call_tmp[715516] ret_tmp[1832461])
      (1832464 'move' coerce_tmp[1017173] ret_tmp[1832461])
      const-val _formal_tmp_in_err[1017352]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017356 'move' _formal_tmp_in_err[1017352] coerce_tmp[1017173])
      (715524 'move' call_tmp[715521](468115 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017352]))
      {
        val castedError[1808259]:Error[167938] "temp"
        (1808265 'move' castedError[1808259] call_tmp[715521])
        (1808267 '=' error_out[1808254] castedError[1808259])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
      }
    }
    ref call_tmp[715528]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
    (715531 'move' call_tmp[715528](396386 call _file_internal[886975] this[235770]))
    const-val call_tmp[715533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017362]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017366 'move' coerce_tmp[1017362](1017364 'deref' call_tmp[715528]))
    (715536 'move' call_tmp[715533](235814 call qio_file_isopen[232782] coerce_tmp[1017362]))
    const-val call_tmp[715538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715541 'move' call_tmp[715538](235815 call ![7494] call_tmp[715533]))
    const-val call_tmp[715543]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715546 'move' call_tmp[715543] call_tmp[715538])
    if call_tmp[715543]
    {
      const-val call_tmp[715550]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017372]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017378 'move' coerce_tmp[1017372](1017374 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832539]:owned SystemError[1000238] "temp"
      (235840 call fromSyserr[1017113] coerce_tmp[1017372] "Operation attempted on closed file" ret_tmp[1832539])
      (1832542 'move' call_tmp[715550] ret_tmp[1832539])
      val call_tmp[715555]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017381]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832467]:owned Error[966458] "temp"
      (1017383 call _cast[1015747] call_tmp[715550] ret_tmp[1832467])
      (1832470 'move' coerce_tmp[1017381] ret_tmp[1832467])
      const-val _formal_tmp_in_err[1017560]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017564 'move' _formal_tmp_in_err[1017560] coerce_tmp[1017381])
      (715558 'move' call_tmp[715555](468117 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017560]))
      {
        val castedError[1808272]:Error[167938] "temp"
        (1808278 'move' castedError[1808272] call_tmp[715555])
        (1808280 '=' error_out[1808254] castedError[1808272])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
      }
    }
    label _endcheckAssumingLocal[1808256]
    (534583 return _void[55])
  }
  function _ref(file)[948734].deinit[235891](ref arg this[235893]:_ref(file)[948734]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[235919]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715576]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (715579 'move' call_tmp[715576](235899 call home[886949] this[235893]))
    const-val call_tmp[715581]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[985663]:BaseLocale[91201] "dead after last mention" "temp"
    (985668 'move' _locale_tmp_[985663](985665 call _value[89981] call_tmp[715576]))
    (715584 'move' call_tmp[715581](235916 '_wide_get_locale' _locale_tmp_[985663]))
    (235921 'move' tmp[235919] call_tmp[715581])
    val isdirect[2086871]:bool[10] "temp"
    (2086876 'move' isdirect[2086871](2086873 call chpl_doDirectExecuteOn[187423] tmp[235919]))
    if isdirect[2086871]
    {
      (2086880 call on_fn[935597] this[235893])
    }
    {
      val _args_foron_fn[2086895]:_class_localson_fn[2086887] "temp"
      (2086899 'move' _args_foron_fn[2086895](2086897 'stack allocate class' _class_localson_fn[2086887]))
      (2086901 '.=' _args_foron_fn[2086895] _0_tmp[2086890] tmp[235919])
      ref tmp[2086905]:file[235580] "temp"
      (2086909 'move' tmp[2086905](2086907 'set reference' this[235893]))
      (2086911 '.=' _args_foron_fn[2086895] _1_this[2086892] tmp[2086905])
      val _args_vforon_fn[2086915]:c_void_ptr[149] "temp"
      (2086919 'move' _args_vforon_fn[2086915](2086917 'cast_to_void_star' _args_foron_fn[2086895]))
      val _args_sizeon_fn[2086921]:int(64)[13] "temp"
      (2086925 'move' _args_sizeon_fn[2086921](2086923 'sizeof_bundle' _class_localson_fn[2086887]))
      on(2086957 call wrapon_fn[2086927] tmp[235919] _args_vforon_fn[2086915] _args_sizeon_fn[2086921] _args_foron_fn[2086895])
    }
    {
    }
    label _enddeinit[1814579]
    ref _field_destructor_tmp_[1814577]:_ref(locale)[948844] "temp"
    (1814584 'move' _field_destructor_tmp_[1814577](1814581 '.' this[235893] home[235562]))
    (1814586 call deinit[90185] _field_destructor_tmp_[1814577])
    (534587 return _void[55])
  }
  function _ref(file)[948734]._style[235960](const  ref arg this[235962]:_ref(file)[948734], ref arg error_out[1808284]:Error[167938]) : iostyle[231844] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534601]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235969]:iostyle[231844] "dead at end of block" "insert auto destroy"
    const-val tmp[236007]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715614]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (715617 'move' call_tmp[715614](235975 call home[886949] this[235962]))
    const-val call_tmp[715619]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017044]:BaseLocale[91201] "dead after last mention" "temp"
    (1017049 'move' _locale_tmp_[1017044](1017046 call _value[89981] call_tmp[715614]))
    (715622 'move' call_tmp[715619](236004 '_wide_get_locale' _locale_tmp_[1017044]))
    (236009 'move' tmp[236007] call_tmp[715619])
    val error[1808287]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1808289 'move' error[1808287] nil[44])
    val rvfDerefTmp[2083413]:file[235580] "temp"
    (2083417 'move' rvfDerefTmp[2083413](2083415 'deref' this[235962]))
    val isdirect[2086962]:bool[10] "temp"
    (2086967 'move' isdirect[2086962](2086964 call chpl_doDirectExecuteOn[187423] tmp[236007]))
    if isdirect[2086962]
    {
      (2086971 call on_fn[935606] rvfDerefTmp[2083413] ret[235969] error[1808287])
    }
    {
      val _args_foron_fn[2086992]:_class_localson_fn[2086980] "temp"
      (2086996 'move' _args_foron_fn[2086992](2086994 'stack allocate class' _class_localson_fn[2086980]))
      (2086998 '.=' _args_foron_fn[2086992] _0_tmp[2086983] tmp[236007])
      (2087002 '.=' _args_foron_fn[2086992] _1_rvfDerefTmp[2086985] rvfDerefTmp[2083413])
      ref tmp[2087006]:iostyle[231844] "temp"
      (2087010 'move' tmp[2087006](2087008 'set reference' ret[235969]))
      (2087012 '.=' _args_foron_fn[2086992] _2_ret[2086987] tmp[2087006])
      ref tmp[2087016]:Error[167938] "temp"
      (2087020 'move' tmp[2087016](2087018 'set reference' error[1808287]))
      (2087022 '.=' _args_foron_fn[2086992] _3_error[2086989] tmp[2087016])
      val _args_vforon_fn[2087026]:c_void_ptr[149] "temp"
      (2087030 'move' _args_vforon_fn[2087026](2087028 'cast_to_void_star' _args_foron_fn[2086992]))
      val _args_sizeon_fn[2087032]:int(64)[13] "temp"
      (2087036 'move' _args_sizeon_fn[2087032](2087034 'sizeof_bundle' _class_localson_fn[2086980]))
      on(2087084 call wrapon_fn[2087038] tmp[236007] _args_vforon_fn[2087026] _args_sizeon_fn[2087032] _args_foron_fn[2086992])
    }
    val errorExists[2107968]:bool[10] "temp"
    (2107973 'move' errorExists[2107968](2107970 '!=' error[1808287] nil[44]))
    if errorExists[2107968]
    {
      (1808293 '=' error_out[1808284] error[1808287])
      gotoErrorHandlingReturn _end__style[534599] _end__style[534599]
    }
    {
    }
    (1017581 'move' ret[534601] ret[235969])
    gotoReturn _end__style[534599] _end__style[534599]
    label _end__style[534599]
    (534603 return ret[534601])
  }
  function _ref(file)[948734].close[236024](const  ref arg this[236026]:_ref(file)[948734], ref arg error_out[1808301]:Error[167938]) : void[4] throws "method" "resolved" "no return value for void"
  {
    ref call_tmp[715635]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
    (715638 'move' call_tmp[715635](396411 call _file_internal[886975] this[236026]))
    const-val call_tmp[715640]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060608]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060612 'move' coerce_tmp[1060608](1060610 'deref' call_tmp[715635]))
    (715643 'move' call_tmp[715640](236034 call is_c_nil[1017056] coerce_tmp[1060608]))
    const-val call_tmp[715645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715648 'move' call_tmp[715645] call_tmp[715640])
    if call_tmp[715645]
    {
      const-val call_tmp[715652]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060617]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060623 'move' coerce_tmp[1060617](1060619 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832545]:owned SystemError[1000238] "temp"
      (236042 call fromSyserr[1017113] coerce_tmp[1060617] "Operation attempted on an invalid file" ret_tmp[1832545])
      (1832548 'move' call_tmp[715652] ret_tmp[1832545])
      val call_tmp[715657]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060626]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832479]:owned Error[966458] "temp"
      (1060628 call _cast[1015747] call_tmp[715652] ret_tmp[1832479])
      (1832482 'move' coerce_tmp[1060626] ret_tmp[1832479])
      const-val _formal_tmp_in_err[1060805]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060809 'move' _formal_tmp_in_err[1060805] coerce_tmp[1060626])
      (715660 'move' call_tmp[715657](468119 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1060805]))
      {
        val castedError[1808306]:Error[167938] "temp"
        (1808312 'move' castedError[1808306] call_tmp[715657])
        (1808314 '=' error_out[1808301] castedError[1808306])
        gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
      }
    }
    const-val call_tmp[715662]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715665 'move' call_tmp[715662](396416 call ENOERR[223654]))
    val err[236053]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1060815]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1060847 call =[224133] init_coerce_tmp[1060815] call_tmp[715662])
    (547000 'move' err[236053] init_coerce_tmp[1060815])
    const-val tmp[236073]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715669]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (715672 'move' call_tmp[715669](236058 call home[886949] this[236026]))
    const-val call_tmp[715674]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1060822]:BaseLocale[91201] "dead after last mention" "temp"
    (1060827 'move' _locale_tmp_[1060822](1060824 call _value[89981] call_tmp[715669]))
    (715677 'move' call_tmp[715674](236070 '_wide_get_locale' _locale_tmp_[1060822]))
    (236075 'move' tmp[236073] call_tmp[715674])
    val rvfDerefTmp[2083434]:file[235580] "temp"
    (2083438 'move' rvfDerefTmp[2083434](2083436 'deref' this[236026]))
    val isdirect[2087089]:bool[10] "temp"
    (2087094 'move' isdirect[2087089](2087091 call chpl_doDirectExecuteOn[187423] tmp[236073]))
    if isdirect[2087089]
    {
      (2087098 call on_fn[935615] rvfDerefTmp[2083434] err[236053])
    }
    {
      val _args_foron_fn[2087116]:_class_localson_fn[2087106] "temp"
      (2087120 'move' _args_foron_fn[2087116](2087118 'stack allocate class' _class_localson_fn[2087106]))
      (2087122 '.=' _args_foron_fn[2087116] _0_tmp[2087109] tmp[236073])
      (2087126 '.=' _args_foron_fn[2087116] _1_rvfDerefTmp[2087111] rvfDerefTmp[2083434])
      ref tmp[2087130]:syserr[223584] "temp"
      (2087134 'move' tmp[2087130](2087132 'set reference' err[236053]))
      (2087136 '.=' _args_foron_fn[2087116] _2_err[2087113] tmp[2087130])
      val _args_vforon_fn[2087140]:c_void_ptr[149] "temp"
      (2087144 'move' _args_vforon_fn[2087140](2087142 'cast_to_void_star' _args_foron_fn[2087116]))
      val _args_sizeon_fn[2087146]:int(64)[13] "temp"
      (2087150 'move' _args_sizeon_fn[2087146](2087148 'sizeof_bundle' _class_localson_fn[2087106]))
      on(2087190 call wrapon_fn[2087152] tmp[236073] _args_vforon_fn[2087140] _args_sizeon_fn[2087146] _args_foron_fn[2087116])
    }
    {
    }
    const-val call_tmp[715691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715694 'move' call_tmp[715691](236114 call _cond_test[223981] err[236053]))
    if call_tmp[715691]
    {
      {
        val error[1808318]:Error[167938] "error variable" "temp"
        (1808327 'move' error[1808318] nil[44])
        const-val call_tmp[715698]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831431]:string[26] "temp"
        (236109 call tryGetPath[236364] this[236026] ret_tmp[1831431])
        (1831434 'move' call_tmp[715698] ret_tmp[1831431])
        (236110 call ioerror[266250] err[236053] "in file.close" call_tmp[715698] error[1808318])
        val errorExists[2107976]:bool[10] "temp"
        (2107981 'move' errorExists[2107976](2107978 '!=' error[1808318] nil[44]))
        if errorExists[2107976]
        {
          (1842451 call chpl__autoDestroy[1461530] call_tmp[715698])
          gotoErrorHandling handler[1808319] handler[1808319]
        }
        (1842454 call chpl__autoDestroy[1461530] call_tmp[715698])
        label handler[1808319]
        const-val shouldHandleError[1808338]:bool[10] "temp"
        val errorExists[2107984]:bool[10] "temp"
        (2107989 'move' errorExists[2107984](2107986 '!=' error[1808318] nil[44]))
        (1808342 'move' shouldHandleError[1808338] errorExists[2107984])
        if shouldHandleError[1808338]
        {
          (1808334 '=' error_out[1808301] error[1808318])
          gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
        }
      }
    }
    label _endclose[1808303]
    (534611 return _void[55])
  }
  function _ref(file)[948734].path[236212](const  ref arg this[236214]:_ref(file)[948734], ref arg error_out[1808346]:Error[167938], ref arg _retArg[1831425]:_ref(string)[937939]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534617]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236221]:string[26] "dead at end of block" "insert auto destroy"
    (1021681 call init[30760] ret[236221])
    const-val call_tmp[715746]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715749 'move' call_tmp[715746](396438 call ENOERR[223654]))
    val err[236228]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1019098]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1021671 call =[224133] init_coerce_tmp[1019098] call_tmp[715746])
    (547006 'move' err[236228] init_coerce_tmp[1019098])
    const-val tmp[236317]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[715753]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (715756 'move' call_tmp[715753](236233 call home[886949] this[236214]))
    const-val call_tmp[715758]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019105]:BaseLocale[91201] "dead after last mention" "temp"
    (1019110 'move' _locale_tmp_[1019105](1019107 call _value[89981] call_tmp[715753]))
    (715761 'move' call_tmp[715758](236314 '_wide_get_locale' _locale_tmp_[1019105]))
    (236319 'move' tmp[236317] call_tmp[715758])
    val error[1808349]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1808351 'move' error[1808349] nil[44])
    val rvfDerefTmp[2083448]:file[235580] "temp"
    (2083452 'move' rvfDerefTmp[2083448](2083450 'deref' this[236214]))
    val isdirect[2087195]:bool[10] "temp"
    (2087200 'move' isdirect[2087195](2087197 call chpl_doDirectExecuteOn[187423] tmp[236317]))
    if isdirect[2087195]
    {
      (2087204 call on_fn[935633] rvfDerefTmp[2083448] err[236228] ret[236221] error[1808349])
    }
    {
      val _args_foron_fn[2087228]:_class_localson_fn[2087214] "temp"
      (2087232 'move' _args_foron_fn[2087228](2087230 'stack allocate class' _class_localson_fn[2087214]))
      (2087234 '.=' _args_foron_fn[2087228] _0_tmp[2087217] tmp[236317])
      (2087238 '.=' _args_foron_fn[2087228] _1_rvfDerefTmp[2087219] rvfDerefTmp[2083448])
      ref tmp[2087242]:syserr[223584] "temp"
      (2087246 'move' tmp[2087242](2087244 'set reference' err[236228]))
      (2087248 '.=' _args_foron_fn[2087228] _2_err[2087221] tmp[2087242])
      ref tmp[2087252]:string[26] "temp"
      (2087256 'move' tmp[2087252](2087254 'set reference' ret[236221]))
      (2087258 '.=' _args_foron_fn[2087228] _3_ret[2087223] tmp[2087252])
      ref tmp[2087262]:Error[167938] "temp"
      (2087266 'move' tmp[2087262](2087264 'set reference' error[1808349]))
      (2087268 '.=' _args_foron_fn[2087228] _4_error[2087225] tmp[2087262])
      val _args_vforon_fn[2087272]:c_void_ptr[149] "temp"
      (2087276 'move' _args_vforon_fn[2087272](2087274 'cast_to_void_star' _args_foron_fn[2087228]))
      val _args_sizeon_fn[2087278]:int(64)[13] "temp"
      (2087282 'move' _args_sizeon_fn[2087278](2087280 'sizeof_bundle' _class_localson_fn[2087214]))
      on(2087338 call wrapon_fn[2087284] tmp[236317] _args_vforon_fn[2087272] _args_sizeon_fn[2087278] _args_foron_fn[2087228])
    }
    val errorExists[2107992]:bool[10] "temp"
    (2107997 'move' errorExists[2107992](2107994 '!=' error[1808349] nil[44]))
    if errorExists[2107992]
    {
      (1808355 '=' error_out[1808346] error[1808349])
      (1842457 call chpl__autoDestroy[1461530] ret[236221])
      gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
    }
    {
    }
    const-val call_tmp[715814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715817 'move' call_tmp[715814](236350 call _cond_test[223981] err[236228]))
    if call_tmp[715814]
    {
      {
        val error[1808363]:Error[167938] "error variable" "temp"
        (1808372 'move' error[1808363] nil[44])
        (236346 call ioerror[266311] err[236228] "in file.path" error[1808363])
        val errorExists[2108000]:bool[10] "temp"
        (2108005 'move' errorExists[2108000](2108002 '!=' error[1808363] nil[44]))
        if errorExists[2108000]
        {
          gotoErrorHandling handler[1808364] handler[1808364]
        }
        label handler[1808364]
        const-val shouldHandleError[1808383]:bool[10] "temp"
        val errorExists[2108008]:bool[10] "temp"
        (2108013 'move' errorExists[2108008](2108010 '!=' error[1808363] nil[44]))
        (1808387 'move' shouldHandleError[1808383] errorExists[2108008])
        if shouldHandleError[1808383]
        {
          (1808379 '=' error_out[1808346] error[1808363])
          (1842460 call chpl__autoDestroy[1461530] ret[236221])
          gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
        }
      }
    }
    (1021679 'move' ret[534617] ret[236221])
    gotoReturn _end_path[534615] _end_path[534615]
    label _end_path[534615]
    (1831427 '=' _retArg[1831425] ret[534617])
    (1831429 return _void[55])
  }
  function _ref(file)[948734].tryGetPath[236364](const  ref arg this[236366]:_ref(file)[948734], ref arg _retArg[1831461]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534629]:string[26] "dead after last mention" "RVV" "temp"
    {
      val error[1808391]:Error[167938] "error variable" "temp"
      (1808400 'move' error[1808391] nil[44])
      const-val call_tmp[715821]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831419]:string[26] "temp"
      (236375 call path[236212] this[236366] error[1808391] ret_tmp[1831419])
      (1831422 'move' call_tmp[715821] ret_tmp[1831419])
      val errorExists[2108016]:bool[10] "temp"
      (2108021 'move' errorExists[2108016](2108018 '!=' error[1808391] nil[44]))
      if errorExists[2108016]
      {
        gotoErrorHandling handler[1808392] handler[1808392]
      }
      (1021713 'move' ret[534629] call_tmp[715821])
      gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
      label handler[1808392]
      const-val shouldHandleError[1808407]:bool[10] "temp"
      val errorExists[2108024]:bool[10] "temp"
      (2108029 'move' errorExists[2108024](2108026 '!=' error[1808391] nil[44]))
      (1808411 'move' shouldHandleError[1808407] errorExists[2108024])
      if shouldHandleError[1808407]
      {
        {
          val call_tmp[715826]:Error[167938] "dead at end of block" "maybe param" "temp"
          (715829 'move' call_tmp[715826] error[1808391])
          val tmp[354527]:Error[167938] "dead at end of block" "insert auto destroy" "temp"
          (547012 'move' tmp[354527](1021686 call chpl__initCopy[968055] call_tmp[715826]))
          val call_tmp[715831]:Error[167938] "dead at end of block" "expr temp" "maybe param" "temp"
          (715834 'move' call_tmp[715831] tmp[354527])
          const-val call_tmp[715836]:owned Error[966458] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[1021693]:owned Error[966458] "dead at end of block" "delay instantiation" "temp"
          (1021696 call init[968094] initTemp[1021693] call_tmp[715831])
          (715839 'move' call_tmp[715836] initTemp[1021693])
          const-val chpl_anon_error[354533]:owned Error[966458] "dead at end of block" "delay instantiation" "insert auto destroy"
          (547014 'move' chpl_anon_error[354533] call_tmp[715836])
          {
            (534641 'move' ret[534629](1831465 call chpl__initCopy[981348] "unknown"))
            (1842463 call chpl__autoDestroy[1468631] chpl_anon_error[354533])
            gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
          }
          (1842467 call chpl__autoDestroy[1468631] chpl_anon_error[354533])
        }
      }
    }
    label _end_tryGetPath[534627]
    (1831463 '=' _retArg[1831461] ret[534629])
    (1831467 return _void[55])
  }
  function openfd[237271](const in arg fd[237268]:int(32)[95], const in arg hints[237275]:int(32)[95], const  ref arg style[237283]:iostyle[231844], ref arg error_out[1808415]:Error[167938], ref arg _retArg[1831475]:_ref(file)[948734]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534728]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237289]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547050 'move' local_style[237289] style[237283])
    val ret[237295]:file[235580] "dead at end of block" "insert auto destroy"
    (1016521 call init[235574] ret[237295])
    ref call_tmp[716120]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (716123 'move' call_tmp[716120](237300 call home[886949] ret[237295]))
    const-val call_tmp[716125]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830499]:locale[28] "temp"
    (396556 call here[90435] ret_tmp[1830499])
    (1830502 'move' call_tmp[716125] ret_tmp[1830499])
    (237304 call =[90631] call_tmp[716120] call_tmp[716125])
    (1842470 call chpl__autoDestroy[1461594] call_tmp[716125])
    ref call_tmp[716132]:_ref(qio_file_ptr_t)[936873] "dead at end of block" "maybe param" "temp"
    (716135 'move' call_tmp[716132](237309 call _file_internal[886975] ret[237295]))
    const-val call_tmp[716137]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716140 'move' call_tmp[716137](237315 call chpl_cnullfile[223574]))
    const-val call_tmp[716142]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986524]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986530 'move' coerce_tmp[986524](986526 'cast' int(32)[95] 0))
    (716145 'move' call_tmp[716142](237320 call qio_file_init[232648] call_tmp[716132] call_tmp[716137] fd[237268] hints[237275] local_style[237289] coerce_tmp[986524]))
    const-val err[237321]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547054 'move' err[237321](986533 call chpl__initCopy[964485] call_tmp[716142]))
    const-val call_tmp[716147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716150 'move' call_tmp[716147](237384 call _cond_test[223981] err[237321]))
    if call_tmp[716147]
    {
      val path_cs[237327]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016559 'move' path_cs[237327](1016557 'cast' c_string[19] nil[44]))
      const-val call_tmp[716152]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716155 'move' call_tmp[716152](237336 call qio_file_path_for_fd[233647] fd[237268] path_cs[237327]))
      const-val path_err[237337]:syserr[223584] "dead at end of block" "insert auto destroy"
      (547058 'move' path_err[237337](986549 call chpl__initCopy[964485] call_tmp[716152]))
      const-val path[237355]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576721]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576722]:bool[10] "dead after last mention" "maybe param" "temp"
      (576727 'move' tmp[576722](576725 call _cond_test[223981] path_err[237337]))
      if tmp[576722]
      {
        (576732 'move' tmp[576721](1831479 call chpl__initCopy[981348] "unknown"))
      }
      {
        const-val tmp[576734]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[986557]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1808418]:Error[167938] "error variable" "temp"
        (1808420 'move' error[1808418] nil[44])
        (986562 'move' default_arg_length[986557](986559 call createStringWithNewBuffer_default_length[964046] path_cs[237327] error[1808418]))
        val errorExists[2108032]:bool[10] "temp"
        (2108037 'move' errorExists[2108032](2108034 '!=' error[1808418] nil[44]))
        if errorExists[2108032]
        {
          (1808424 '=' error_out[1808415] error[1808418])
          (1842473 call chpl__autoDestroy[1463349] ret[237295])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        val error[1808433]:Error[167938] "error variable" "temp"
        (1808435 'move' error[1808433] nil[44])
        const-val ret_tmp[1829045]:string[26] "temp"
        (237351 call createStringWithNewBuffer[30410] path_cs[237327] default_arg_length[986557] replace[173648] error[1808433] ret_tmp[1829045])
        (1829048 'move' tmp[576734] ret_tmp[1829045])
        val errorExists[2108040]:bool[10] "temp"
        (2108045 'move' errorExists[2108040](2108042 '!=' error[1808433] nil[44]))
        if errorExists[2108040]
        {
          (1808439 '=' error_out[1808415] error[1808433])
          (1842476 call chpl__autoDestroy[1463349] ret[237295])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        (576741 'move' tmp[576721] tmp[576734])
      }
      (547060 'move' path[237355] tmp[576721])
      {
        val error[1808447]:Error[167938] "error variable" "temp"
        (1808456 'move' error[1808447] nil[44])
        (237380 call ioerror[266250] err[237321] "in openfd" path[237355] error[1808447])
        val errorExists[2108048]:bool[10] "temp"
        (2108053 'move' errorExists[2108048](2108050 '!=' error[1808447] nil[44]))
        if errorExists[2108048]
        {
          gotoErrorHandling handler[1808448] handler[1808448]
        }
        label handler[1808448]
        const-val shouldHandleError[1808467]:bool[10] "temp"
        val errorExists[2108056]:bool[10] "temp"
        (2108061 'move' errorExists[2108056](2108058 '!=' error[1808447] nil[44]))
        (1808471 'move' shouldHandleError[1808467] errorExists[2108056])
        if shouldHandleError[1808467]
        {
          (1808463 '=' error_out[1808415] error[1808447])
          (1842479 call chpl__autoDestroy[1461530] path[237355])
          (1842482 call chpl__autoDestroy[1463349] ret[237295])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
      }
      (1842486 call chpl__autoDestroy[1461530] path[237355])
    }
    (1016519 'move' ret[534728] ret[237295])
    gotoReturn _end_openfd[534726] _end_openfd[534726]
    label _end_openfd[534726]
    (1831477 '=' _retArg[1831475] ret[534728])
    (1831481 return _void[55])
  }
  function openfd_default_style[985745](ref arg error_out[1809156]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985747]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[985752]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (985757 'move' style[985752](985756 call defaultIOStyle[235295]))
    (985789 'move' ret[985747] style[985752])
    label _endopenfd_default_style[1809158]
    (985750 return ret[985747])
  }
  function openfd_default_hints[985703](ref arg error_out[1809152]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985705]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[985710]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[985714]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[985716]:int(32)[95] "dead after last mention" "temp" "type variable"
    (985734 'move' tmp[985714] IOHINT_NONE[231411])
    (985727 'move' hints[985710] tmp[985714])
    (985730 'move' ret[985705] hints[985710])
    label _endopenfd_default_hints[1809154]
    (985708 return ret[985705])
  }
  function openfp[237400](const in arg fp[237397]:_file[155], const in arg hints[237404]:int(32)[95], const  ref arg style[237412]:iostyle[231844], ref arg error_out[1808475]:Error[167938], ref arg _retArg[1831495]:_ref(file)[948734]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534740]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237418]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547062 'move' local_style[237418] style[237412])
    val ret[237424]:file[235580] "dead at end of block" "insert auto destroy"
    (1022126 call init[235574] ret[237424])
    ref call_tmp[716159]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (716162 'move' call_tmp[716159](237429 call home[886949] ret[237424]))
    const-val call_tmp[716164]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830505]:locale[28] "temp"
    (396577 call here[90435] ret_tmp[1830505])
    (1830508 'move' call_tmp[716164] ret_tmp[1830505])
    (237433 call =[90631] call_tmp[716159] call_tmp[716164])
    (1842489 call chpl__autoDestroy[1461594] call_tmp[716164])
    ref call_tmp[716171]:_ref(qio_file_ptr_t)[936873] "dead at end of block" "maybe param" "temp"
    (716174 'move' call_tmp[716171](237438 call _file_internal[886975] ret[237424]))
    const-val call_tmp[716181]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022081]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022087 'move' coerce_tmp[1022081](1022083 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022089]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022095 'move' coerce_tmp[1022089](1022091 'cast' int(32)[95] 1))
    (716184 'move' call_tmp[716181](237449 call qio_file_init[232648] call_tmp[716171] fp[237397] coerce_tmp[1022081] hints[237404] local_style[237418] coerce_tmp[1022089]))
    const-val err[237450]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547066 'move' err[237450](1022098 call chpl__initCopy[964485] call_tmp[716181]))
    const-val call_tmp[716186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716189 'move' call_tmp[716186](237518 call _cond_test[223981] err[237450]))
    if call_tmp[716186]
    {
      val path_cs[237456]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022134 'move' path_cs[237456](1022132 'cast' c_string[19] nil[44]))
      const-val call_tmp[716191]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716194 'move' call_tmp[716191](237465 call qio_file_path_for_fp[233663] fp[237397] path_cs[237456]))
      const-val path_err[237466]:syserr[223584] "dead at end of block" "insert auto destroy"
      (547070 'move' path_err[237466](1022104 call chpl__initCopy[964485] call_tmp[716191]))
      const-val path[237484]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576748]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576749]:bool[10] "dead after last mention" "maybe param" "temp"
      (576754 'move' tmp[576749](576752 call _cond_test[223981] path_err[237466]))
      if tmp[576749]
      {
        (576759 'move' tmp[576748](1831499 call chpl__initCopy[981348] "unknown"))
      }
      {
        const-val tmp[576761]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[1022112]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1808478]:Error[167938] "error variable" "temp"
        (1808480 'move' error[1808478] nil[44])
        (1022117 'move' default_arg_length[1022112](1022114 call createStringWithNewBuffer_default_length[964046] path_cs[237456] error[1808478]))
        val errorExists[2108064]:bool[10] "temp"
        (2108069 'move' errorExists[2108064](2108066 '!=' error[1808478] nil[44]))
        if errorExists[2108064]
        {
          (1808484 '=' error_out[1808475] error[1808478])
          (1842492 call chpl__autoDestroy[1463349] ret[237424])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        val error[1808493]:Error[167938] "error variable" "temp"
        (1808495 'move' error[1808493] nil[44])
        const-val ret_tmp[1829051]:string[26] "temp"
        (237480 call createStringWithNewBuffer[30410] path_cs[237456] default_arg_length[1022112] replace[173648] error[1808493] ret_tmp[1829051])
        (1829054 'move' tmp[576761] ret_tmp[1829051])
        val errorExists[2108072]:bool[10] "temp"
        (2108077 'move' errorExists[2108072](2108074 '!=' error[1808493] nil[44]))
        if errorExists[2108072]
        {
          (1808499 '=' error_out[1808475] error[1808493])
          (1842495 call chpl__autoDestroy[1463349] ret[237424])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        (576768 'move' tmp[576748] tmp[576761])
      }
      (547072 'move' path[237484] tmp[576748])
      (237491 call chpl_free_c_string[22706] path_cs[237456])
      {
        val error[1808507]:Error[167938] "error variable" "temp"
        (1808516 'move' error[1808507] nil[44])
        (237514 call ioerror[266250] err[237450] "in openfp" path[237484] error[1808507])
        val errorExists[2108080]:bool[10] "temp"
        (2108085 'move' errorExists[2108080](2108082 '!=' error[1808507] nil[44]))
        if errorExists[2108080]
        {
          gotoErrorHandling handler[1808508] handler[1808508]
        }
        label handler[1808508]
        const-val shouldHandleError[1808527]:bool[10] "temp"
        val errorExists[2108088]:bool[10] "temp"
        (2108093 'move' errorExists[2108088](2108090 '!=' error[1808507] nil[44]))
        (1808531 'move' shouldHandleError[1808527] errorExists[2108088])
        if shouldHandleError[1808527]
        {
          (1808523 '=' error_out[1808475] error[1808507])
          (1842498 call chpl__autoDestroy[1461530] path[237484])
          (1842501 call chpl__autoDestroy[1463349] ret[237424])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
      }
      (1842505 call chpl__autoDestroy[1461530] path[237484])
    }
    (1022124 'move' ret[534740] ret[237424])
    gotoReturn _end_openfp[534738] _end_openfp[534738]
    label _end_openfp[534738]
    (1831497 '=' _retArg[1831495] ret[534740])
    (1831501 return _void[55])
  }
  function openfp_default_style[1021894](ref arg error_out[1809291]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021896]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1021901]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1021906 'move' style[1021901](1021905 call defaultIOStyle[235295]))
    (1021910 'move' ret[1021896] style[1021901])
    label _endopenfp_default_style[1809293]
    (1021899 return ret[1021896])
  }
  function openfp_default_hints[1021852](ref arg error_out[1809287]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1021854]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1021859]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1021863]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1021865]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1021883 'move' tmp[1021863] IOHINT_NONE[231411])
    (1021876 'move' hints[1021859] tmp[1021863])
    (1021879 'move' ret[1021854] hints[1021859])
    label _endopenfp_default_hints[1809289]
    (1021857 return ret[1021854])
  }
  function openmem[237625](const  ref arg style[237621]:iostyle[231844], ref arg error_out[1808535]:Error[167938], ref arg _retArg[1831521]:_ref(file)[948734]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534764]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237629]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547080 'move' local_style[237629] style[237621])
    val ret[237635]:file[235580] "dead at end of block" "insert auto destroy"
    (1060601 call init[235574] ret[237635])
    ref call_tmp[716227]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (716230 'move' call_tmp[716227](237640 call home[886949] ret[237635]))
    const-val call_tmp[716232]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830511]:locale[28] "temp"
    (396609 call here[90435] ret_tmp[1830511])
    (1830514 'move' call_tmp[716232] ret_tmp[1830511])
    (237644 call =[90631] call_tmp[716227] call_tmp[716232])
    (1842508 call chpl__autoDestroy[1461594] call_tmp[716232])
    ref call_tmp[716239]:_ref(qio_file_ptr_t)[936873] "dead at end of block" "maybe param" "temp"
    (716242 'move' call_tmp[716239](237649 call _file_internal[886975] ret[237635]))
    const-val call_tmp[716244]:syserr[223584] "dead at end of block" "maybe param" "temp"
    (716247 'move' call_tmp[716244](237655 call qio_file_open_mem[232728] call_tmp[716239] QBUFFER_PTR_NULL[231479] local_style[237629]))
    const-val err[237656]:syserr[223584] "dead at end of block" "insert auto destroy"
    (547084 'move' err[237656](1060593 call chpl__initCopy[964485] call_tmp[716244]))
    const-val call_tmp[716249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716252 'move' call_tmp[716249](237685 call _cond_test[223981] err[237656]))
    if call_tmp[716249]
    {
      {
        val error[1808537]:Error[167938] "error variable" "temp"
        (1808546 'move' error[1808537] nil[44])
        (237681 call ioerror[266311] err[237656] "in openmem" error[1808537])
        val errorExists[2108096]:bool[10] "temp"
        (2108101 'move' errorExists[2108096](2108098 '!=' error[1808537] nil[44]))
        if errorExists[2108096]
        {
          gotoErrorHandling handler[1808538] handler[1808538]
        }
        label handler[1808538]
        const-val shouldHandleError[1808557]:bool[10] "temp"
        val errorExists[2108104]:bool[10] "temp"
        (2108109 'move' errorExists[2108104](2108106 '!=' error[1808537] nil[44]))
        (1808561 'move' shouldHandleError[1808557] errorExists[2108104])
        if shouldHandleError[1808557]
        {
          (1808553 '=' error_out[1808535] error[1808537])
          (1842511 call chpl__autoDestroy[1463349] ret[237635])
          gotoErrorHandlingReturn _end_openmem[534762] _end_openmem[534762]
        }
      }
    }
    (1060599 'move' ret[534764] ret[237635])
    gotoReturn _end_openmem[534762] _end_openmem[534762]
    label _end_openmem[534762]
    (1831523 '=' _retArg[1831521] ret[534764])
    (1831525 return _void[55])
  }
  function openmem_default_style[1060559](ref arg error_out[1809722]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1060561]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1060566]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1060571 'move' style[1060566](1060570 call defaultIOStyle[235295]))
    (1060575 'move' ret[1060561] style[1060566])
    label _endopenmem_default_style[1809724]
    (1060564 return ret[1060561])
  }
  function _ref(channel(false,dynamic,true))[985636].home[1018024](ref arg this[1018028]:_ref(channel(false,dynamic,true))[985636]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018030]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018038]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1018040 'move' call_tmp[1018038](1018042 '.' this[1018028] home[985615]))
    (1018045 'move' ret[1018030] call_tmp[1018038])
    (1018049 return ret[1018030])
  }
  function _ref(channel(true,dynamic,true))[1021834].home[1023042](ref arg this[1023046]:_ref(channel(true,dynamic,true))[1021834]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023048]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023056]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1023058 'move' call_tmp[1023056](1023060 '.' this[1023046] home[1021813]))
    (1023063 'move' ret[1023048] call_tmp[1023056])
    (1023067 return ret[1023048])
  }
  function _ref(channel(true,dynamic,false))[1060956].home[1061755](ref arg this[1061759]:_ref(channel(true,dynamic,false))[1060956]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1061761]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061769]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1061771 'move' call_tmp[1061769](1061773 '.' this[1061759] home[1060935]))
    (1061776 'move' ret[1061761] call_tmp[1061769])
    (1061780 return ret[1061761])
  }
  function _ref(channel(false,dynamic,false))[1080691].home[1081487](ref arg this[1081491]:_ref(channel(false,dynamic,false))[1080691]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081493]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081501]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1081503 'move' call_tmp[1081501](1081505 '.' this[1081491] home[1080670]))
    (1081508 'move' ret[1081493] call_tmp[1081501])
    (1081512 return ret[1081493])
  }
  function _ref(channel(false,dynamic,true))[985636]._channel_internal[1018366](ref arg this[1018370]:_ref(channel(false,dynamic,true))[985636]) ref : _ref(qio_channel_ptr_t)[936884] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018372]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018380]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1018382 'move' call_tmp[1018380](1018384 '.' this[1018370] _channel_internal[985620]))
    (1018387 'move' ret[1018372] call_tmp[1018380])
    (1018391 return ret[1018372])
  }
  function _ref(channel(true,dynamic,true))[1021834]._channel_internal[1023076](ref arg this[1023080]:_ref(channel(true,dynamic,true))[1021834]) ref : _ref(qio_channel_ptr_t)[936884] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023082]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023090]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1023092 'move' call_tmp[1023090](1023094 '.' this[1023080] _channel_internal[1021818]))
    (1023097 'move' ret[1023082] call_tmp[1023090])
    (1023101 return ret[1023082])
  }
  function _ref(channel(true,dynamic,false))[1060956]._channel_internal[1061789](ref arg this[1061793]:_ref(channel(true,dynamic,false))[1060956]) ref : _ref(qio_channel_ptr_t)[936884] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1061795]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061803]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1061805 'move' call_tmp[1061803](1061807 '.' this[1061793] _channel_internal[1060940]))
    (1061810 'move' ret[1061795] call_tmp[1061803])
    (1061814 return ret[1061795])
  }
  function _ref(channel(false,dynamic,false))[1080691]._channel_internal[1081521](ref arg this[1081525]:_ref(channel(false,dynamic,false))[1080691]) ref : _ref(qio_channel_ptr_t)[936884] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081527]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081535]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1081537 'move' call_tmp[1081535](1081539 '.' this[1081525] _channel_internal[1080675]))
    (1081542 'move' ret[1081527] call_tmp[1081535])
    (1081546 return ret[1081527])
  }
  function _ref(channel(true,dynamic,false))[1060956]._readWriteThisFromLocale[1066316](ref arg this[1066320]:_ref(channel(true,dynamic,false))[1060956]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1066322]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066330]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1066332 'move' call_tmp[1066330](1066334 '.' this[1066320] _readWriteThisFromLocale[1060944]))
    (1066337 'move' ret[1066322] call_tmp[1066330])
    (1066341 return ret[1066322])
  }
  function _ref(channel(true,dynamic,true))[1021834]._readWriteThisFromLocale[1392759](ref arg this[1392763]:_ref(channel(true,dynamic,true))[1021834]) ref : _ref(locale)[948844] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1392765]:_ref(locale)[948844] "dead after last mention" "RVV" "temp"
    ref call_tmp[1392773]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1392775 'move' call_tmp[1392773](1392777 '.' this[1392763] _readWriteThisFromLocale[1021822]))
    (1392780 'move' ret[1392765] call_tmp[1392773])
    (1392784 return ret[1392765])
  }
  type channel(false,dynamic,true)[985627] val home[985615]:locale[28] "no doc" val _channel_internal[985620]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[985624]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080682] val home[1080670]:locale[28] "no doc" val _channel_internal[1080675]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1080679]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021825] val home[1021813]:locale[28] "no doc" val _channel_internal[1021818]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1021822]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060947] val home[1060935]:locale[28] "no doc" val _channel_internal[1060940]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1060944]:locale[28] "no doc"
  function =[1018439](ref arg lhs[1018441]:_ref(channel(false,dynamic,true))[985636], const  ref arg rhs[1018443]:channel(false,dynamic,true)[985627]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1018642]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1018644]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018646 'move' call_tmp[1018644](1018649 call home[1018024] rhs[1018443]))
    const-val call_tmp[1018652]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019044]:BaseLocale[91201] "dead after last mention" "temp"
    (1019049 'move' _locale_tmp_[1019044](1019046 call _value[89981] call_tmp[1018644]))
    (1018654 'move' call_tmp[1018652](1018656 '_wide_get_locale' _locale_tmp_[1019044]))
    (1018658 'move' tmp[1018642] call_tmp[1018652])
    val rvfDerefTmp[2083539]:channel(false,dynamic,true)[985627] "temp"
    (2083543 'move' rvfDerefTmp[2083539](2083541 'deref' rhs[1018443]))
    val isdirect[2087935]:bool[10] "temp"
    (2087940 'move' isdirect[2087935](2087937 call chpl_doDirectExecuteOn[187423] tmp[1018642]))
    if isdirect[2087935]
    {
      (2087944 call on_fn[1018665] rvfDerefTmp[2083539])
    }
    {
      val _args_foron_fn[2087959]:_class_localson_fn[2087951] "temp"
      (2087963 'move' _args_foron_fn[2087959](2087961 'stack allocate class' _class_localson_fn[2087951]))
      (2087965 '.=' _args_foron_fn[2087959] _0_tmp[2087954] tmp[1018642])
      (2087969 '.=' _args_foron_fn[2087959] _1_rvfDerefTmp[2087956] rvfDerefTmp[2083539])
      val _args_vforon_fn[2087973]:c_void_ptr[149] "temp"
      (2087977 'move' _args_vforon_fn[2087973](2087975 'cast_to_void_star' _args_foron_fn[2087959]))
      val _args_sizeon_fn[2087979]:int(64)[13] "temp"
      (2087983 'move' _args_sizeon_fn[2087979](2087981 'sizeof_bundle' _class_localson_fn[2087951]))
      on(2088015 call wrapon_fn[2087985] tmp[1018642] _args_vforon_fn[2087973] _args_sizeon_fn[2087979] _args_foron_fn[2087959])
    }
    {
    }
    const-val tmp[1018686]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1018688]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1018690 'move' call_tmp[1018688](1018693 call home[1018024] lhs[1018441]))
    const-val call_tmp[1018696]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019063]:BaseLocale[91201] "dead after last mention" "temp"
    (1019068 'move' _locale_tmp_[1019063](1019065 call _value[89981] call_tmp[1018688]))
    (1018698 'move' call_tmp[1018696](1018700 '_wide_get_locale' _locale_tmp_[1019063]))
    (1018702 'move' tmp[1018686] call_tmp[1018696])
    val isdirect[2088020]:bool[10] "temp"
    (2088025 'move' isdirect[2088020](2088022 call chpl_doDirectExecuteOn[187423] tmp[1018686]))
    if isdirect[2088020]
    {
      (2088029 call on_fn[1018709] lhs[1018441])
    }
    {
      val _args_foron_fn[2088044]:_class_localson_fn[2088036] "temp"
      (2088048 'move' _args_foron_fn[2088044](2088046 'stack allocate class' _class_localson_fn[2088036]))
      (2088050 '.=' _args_foron_fn[2088044] _0_tmp[2088039] tmp[1018686])
      ref tmp[2088054]:channel(false,dynamic,true)[985627] "temp"
      (2088058 'move' tmp[2088054](2088056 'set reference' lhs[1018441]))
      (2088060 '.=' _args_foron_fn[2088044] _1_lhs[2088041] tmp[2088054])
      val _args_vforon_fn[2088064]:c_void_ptr[149] "temp"
      (2088068 'move' _args_vforon_fn[2088064](2088066 'cast_to_void_star' _args_foron_fn[2088044]))
      val _args_sizeon_fn[2088070]:int(64)[13] "temp"
      (2088074 'move' _args_sizeon_fn[2088070](2088072 'sizeof_bundle' _class_localson_fn[2088036]))
      on(2088106 call wrapon_fn[2088076] tmp[1018686] _args_vforon_fn[2088064] _args_sizeon_fn[2088070] _args_foron_fn[2088044])
    }
    {
    }
    ref call_tmp[1018730]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1018732 'move' call_tmp[1018730](1018735 call home[1018024] lhs[1018441]))
    ref call_tmp[1018738]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018740 'move' call_tmp[1018738](1018743 call home[1018024] rhs[1018443]))
    (1018747 call =[90631] call_tmp[1018730] call_tmp[1018738])
    ref call_tmp[1018751]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1018753 'move' call_tmp[1018751](1018756 call _channel_internal[1018366] lhs[1018441]))
    ref call_tmp[1018759]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018761 'move' call_tmp[1018759](1018764 call _channel_internal[1018366] rhs[1018443]))
    const-val coerce_tmp[1019086]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019090 'move' coerce_tmp[1019086](1019088 'deref' call_tmp[1018759]))
    (1018768 call =[861480] call_tmp[1018751] coerce_tmp[1019086])
    (1018771 return _void[55])
  }
  function =[1023147](ref arg lhs[1023149]:_ref(channel(true,dynamic,true))[1021834], const  ref arg rhs[1023151]:channel(true,dynamic,true)[1021825]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1023350]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1023352]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023354 'move' call_tmp[1023352](1023357 call home[1023042] rhs[1023151]))
    const-val call_tmp[1023360]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023752]:BaseLocale[91201] "dead after last mention" "temp"
    (1023757 'move' _locale_tmp_[1023752](1023754 call _value[89981] call_tmp[1023352]))
    (1023362 'move' call_tmp[1023360](1023364 '_wide_get_locale' _locale_tmp_[1023752]))
    (1023366 'move' tmp[1023350] call_tmp[1023360])
    val rvfDerefTmp[2083616]:channel(true,dynamic,true)[1021825] "temp"
    (2083620 'move' rvfDerefTmp[2083616](2083618 'deref' rhs[1023151]))
    val isdirect[2088618]:bool[10] "temp"
    (2088623 'move' isdirect[2088618](2088620 call chpl_doDirectExecuteOn[187423] tmp[1023350]))
    if isdirect[2088618]
    {
      (2088627 call on_fn[1023373] rvfDerefTmp[2083616])
    }
    {
      val _args_foron_fn[2088642]:_class_localson_fn[2088634] "temp"
      (2088646 'move' _args_foron_fn[2088642](2088644 'stack allocate class' _class_localson_fn[2088634]))
      (2088648 '.=' _args_foron_fn[2088642] _0_tmp[2088637] tmp[1023350])
      (2088652 '.=' _args_foron_fn[2088642] _1_rvfDerefTmp[2088639] rvfDerefTmp[2083616])
      val _args_vforon_fn[2088656]:c_void_ptr[149] "temp"
      (2088660 'move' _args_vforon_fn[2088656](2088658 'cast_to_void_star' _args_foron_fn[2088642]))
      val _args_sizeon_fn[2088662]:int(64)[13] "temp"
      (2088666 'move' _args_sizeon_fn[2088662](2088664 'sizeof_bundle' _class_localson_fn[2088634]))
      on(2088698 call wrapon_fn[2088668] tmp[1023350] _args_vforon_fn[2088656] _args_sizeon_fn[2088662] _args_foron_fn[2088642])
    }
    {
    }
    const-val tmp[1023394]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1023396]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1023398 'move' call_tmp[1023396](1023401 call home[1023042] lhs[1023149]))
    const-val call_tmp[1023404]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023771]:BaseLocale[91201] "dead after last mention" "temp"
    (1023776 'move' _locale_tmp_[1023771](1023773 call _value[89981] call_tmp[1023396]))
    (1023406 'move' call_tmp[1023404](1023408 '_wide_get_locale' _locale_tmp_[1023771]))
    (1023410 'move' tmp[1023394] call_tmp[1023404])
    val isdirect[2088703]:bool[10] "temp"
    (2088708 'move' isdirect[2088703](2088705 call chpl_doDirectExecuteOn[187423] tmp[1023394]))
    if isdirect[2088703]
    {
      (2088712 call on_fn[1023417] lhs[1023149])
    }
    {
      val _args_foron_fn[2088727]:_class_localson_fn[2088719] "temp"
      (2088731 'move' _args_foron_fn[2088727](2088729 'stack allocate class' _class_localson_fn[2088719]))
      (2088733 '.=' _args_foron_fn[2088727] _0_tmp[2088722] tmp[1023394])
      ref tmp[2088737]:channel(true,dynamic,true)[1021825] "temp"
      (2088741 'move' tmp[2088737](2088739 'set reference' lhs[1023149]))
      (2088743 '.=' _args_foron_fn[2088727] _1_lhs[2088724] tmp[2088737])
      val _args_vforon_fn[2088747]:c_void_ptr[149] "temp"
      (2088751 'move' _args_vforon_fn[2088747](2088749 'cast_to_void_star' _args_foron_fn[2088727]))
      val _args_sizeon_fn[2088753]:int(64)[13] "temp"
      (2088757 'move' _args_sizeon_fn[2088753](2088755 'sizeof_bundle' _class_localson_fn[2088719]))
      on(2088789 call wrapon_fn[2088759] tmp[1023394] _args_vforon_fn[2088747] _args_sizeon_fn[2088753] _args_foron_fn[2088727])
    }
    {
    }
    ref call_tmp[1023438]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1023440 'move' call_tmp[1023438](1023443 call home[1023042] lhs[1023149]))
    ref call_tmp[1023446]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023448 'move' call_tmp[1023446](1023451 call home[1023042] rhs[1023151]))
    (1023455 call =[90631] call_tmp[1023438] call_tmp[1023446])
    ref call_tmp[1023459]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1023461 'move' call_tmp[1023459](1023464 call _channel_internal[1023076] lhs[1023149]))
    ref call_tmp[1023467]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023469 'move' call_tmp[1023467](1023472 call _channel_internal[1023076] rhs[1023151]))
    const-val coerce_tmp[1023794]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023798 'move' coerce_tmp[1023794](1023796 'deref' call_tmp[1023467]))
    (1023476 call =[861480] call_tmp[1023459] coerce_tmp[1023794])
    (1023479 return _void[55])
  }
  function =[1061860](ref arg lhs[1061862]:_ref(channel(true,dynamic,false))[1060956], const  ref arg rhs[1061864]:channel(true,dynamic,false)[1060947]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1062063]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062065]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062067 'move' call_tmp[1062065](1062070 call home[1061755] rhs[1061864]))
    const-val call_tmp[1062073]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062274]:BaseLocale[91201] "dead after last mention" "temp"
    (1062279 'move' _locale_tmp_[1062274](1062276 call _value[89981] call_tmp[1062065]))
    (1062075 'move' call_tmp[1062073](1062077 '_wide_get_locale' _locale_tmp_[1062274]))
    (1062079 'move' tmp[1062063] call_tmp[1062073])
    val rvfDerefTmp[2083724]:channel(true,dynamic,false)[1060947] "temp"
    (2083728 'move' rvfDerefTmp[2083724](2083726 'deref' rhs[1061864]))
    val isdirect[2089331]:bool[10] "temp"
    (2089336 'move' isdirect[2089331](2089333 call chpl_doDirectExecuteOn[187423] tmp[1062063]))
    if isdirect[2089331]
    {
      (2089340 call on_fn[1062086] rvfDerefTmp[2083724])
    }
    {
      val _args_foron_fn[2089355]:_class_localson_fn[2089347] "temp"
      (2089359 'move' _args_foron_fn[2089355](2089357 'stack allocate class' _class_localson_fn[2089347]))
      (2089361 '.=' _args_foron_fn[2089355] _0_tmp[2089350] tmp[1062063])
      (2089365 '.=' _args_foron_fn[2089355] _1_rvfDerefTmp[2089352] rvfDerefTmp[2083724])
      val _args_vforon_fn[2089369]:c_void_ptr[149] "temp"
      (2089373 'move' _args_vforon_fn[2089369](2089371 'cast_to_void_star' _args_foron_fn[2089355]))
      val _args_sizeon_fn[2089375]:int(64)[13] "temp"
      (2089379 'move' _args_sizeon_fn[2089375](2089377 'sizeof_bundle' _class_localson_fn[2089347]))
      on(2089411 call wrapon_fn[2089381] tmp[1062063] _args_vforon_fn[2089369] _args_sizeon_fn[2089375] _args_foron_fn[2089355])
    }
    {
    }
    const-val tmp[1062107]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062109]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1062111 'move' call_tmp[1062109](1062114 call home[1061755] lhs[1061862]))
    const-val call_tmp[1062117]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062293]:BaseLocale[91201] "dead after last mention" "temp"
    (1062298 'move' _locale_tmp_[1062293](1062295 call _value[89981] call_tmp[1062109]))
    (1062119 'move' call_tmp[1062117](1062121 '_wide_get_locale' _locale_tmp_[1062293]))
    (1062123 'move' tmp[1062107] call_tmp[1062117])
    val isdirect[2089416]:bool[10] "temp"
    (2089421 'move' isdirect[2089416](2089418 call chpl_doDirectExecuteOn[187423] tmp[1062107]))
    if isdirect[2089416]
    {
      (2089425 call on_fn[1062130] lhs[1061862])
    }
    {
      val _args_foron_fn[2089440]:_class_localson_fn[2089432] "temp"
      (2089444 'move' _args_foron_fn[2089440](2089442 'stack allocate class' _class_localson_fn[2089432]))
      (2089446 '.=' _args_foron_fn[2089440] _0_tmp[2089435] tmp[1062107])
      ref tmp[2089450]:channel(true,dynamic,false)[1060947] "temp"
      (2089454 'move' tmp[2089450](2089452 'set reference' lhs[1061862]))
      (2089456 '.=' _args_foron_fn[2089440] _1_lhs[2089437] tmp[2089450])
      val _args_vforon_fn[2089460]:c_void_ptr[149] "temp"
      (2089464 'move' _args_vforon_fn[2089460](2089462 'cast_to_void_star' _args_foron_fn[2089440]))
      val _args_sizeon_fn[2089466]:int(64)[13] "temp"
      (2089470 'move' _args_sizeon_fn[2089466](2089468 'sizeof_bundle' _class_localson_fn[2089432]))
      on(2089502 call wrapon_fn[2089472] tmp[1062107] _args_vforon_fn[2089460] _args_sizeon_fn[2089466] _args_foron_fn[2089440])
    }
    {
    }
    ref call_tmp[1062151]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1062153 'move' call_tmp[1062151](1062156 call home[1061755] lhs[1061862]))
    ref call_tmp[1062159]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062161 'move' call_tmp[1062159](1062164 call home[1061755] rhs[1061864]))
    (1062168 call =[90631] call_tmp[1062151] call_tmp[1062159])
    ref call_tmp[1062172]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1062174 'move' call_tmp[1062172](1062177 call _channel_internal[1061789] lhs[1061862]))
    ref call_tmp[1062180]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062182 'move' call_tmp[1062180](1062185 call _channel_internal[1061789] rhs[1061864]))
    const-val coerce_tmp[1062316]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062320 'move' coerce_tmp[1062316](1062318 'deref' call_tmp[1062180]))
    (1062189 call =[861480] call_tmp[1062172] coerce_tmp[1062316])
    (1062192 return _void[55])
  }
  function =[1081592](ref arg lhs[1081594]:_ref(channel(false,dynamic,false))[1080691], const  ref arg rhs[1081596]:channel(false,dynamic,false)[1080682]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1081795]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081797]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081799 'move' call_tmp[1081797](1081802 call home[1081487] rhs[1081596]))
    const-val call_tmp[1081805]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082006]:BaseLocale[91201] "dead after last mention" "temp"
    (1082011 'move' _locale_tmp_[1082006](1082008 call _value[89981] call_tmp[1081797]))
    (1081807 'move' call_tmp[1081805](1081809 '_wide_get_locale' _locale_tmp_[1082006]))
    (1081811 'move' tmp[1081795] call_tmp[1081805])
    val rvfDerefTmp[2083902]:channel(false,dynamic,false)[1080682] "temp"
    (2083906 'move' rvfDerefTmp[2083902](2083904 'deref' rhs[1081596]))
    val isdirect[2090552]:bool[10] "temp"
    (2090557 'move' isdirect[2090552](2090554 call chpl_doDirectExecuteOn[187423] tmp[1081795]))
    if isdirect[2090552]
    {
      (2090561 call on_fn[1081818] rvfDerefTmp[2083902])
    }
    {
      val _args_foron_fn[2090576]:_class_localson_fn[2090568] "temp"
      (2090580 'move' _args_foron_fn[2090576](2090578 'stack allocate class' _class_localson_fn[2090568]))
      (2090582 '.=' _args_foron_fn[2090576] _0_tmp[2090571] tmp[1081795])
      (2090586 '.=' _args_foron_fn[2090576] _1_rvfDerefTmp[2090573] rvfDerefTmp[2083902])
      val _args_vforon_fn[2090590]:c_void_ptr[149] "temp"
      (2090594 'move' _args_vforon_fn[2090590](2090592 'cast_to_void_star' _args_foron_fn[2090576]))
      val _args_sizeon_fn[2090596]:int(64)[13] "temp"
      (2090600 'move' _args_sizeon_fn[2090596](2090598 'sizeof_bundle' _class_localson_fn[2090568]))
      on(2090632 call wrapon_fn[2090602] tmp[1081795] _args_vforon_fn[2090590] _args_sizeon_fn[2090596] _args_foron_fn[2090576])
    }
    {
    }
    const-val tmp[1081839]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081841]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1081843 'move' call_tmp[1081841](1081846 call home[1081487] lhs[1081594]))
    const-val call_tmp[1081849]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082025]:BaseLocale[91201] "dead after last mention" "temp"
    (1082030 'move' _locale_tmp_[1082025](1082027 call _value[89981] call_tmp[1081841]))
    (1081851 'move' call_tmp[1081849](1081853 '_wide_get_locale' _locale_tmp_[1082025]))
    (1081855 'move' tmp[1081839] call_tmp[1081849])
    val isdirect[2090637]:bool[10] "temp"
    (2090642 'move' isdirect[2090637](2090639 call chpl_doDirectExecuteOn[187423] tmp[1081839]))
    if isdirect[2090637]
    {
      (2090646 call on_fn[1081862] lhs[1081594])
    }
    {
      val _args_foron_fn[2090661]:_class_localson_fn[2090653] "temp"
      (2090665 'move' _args_foron_fn[2090661](2090663 'stack allocate class' _class_localson_fn[2090653]))
      (2090667 '.=' _args_foron_fn[2090661] _0_tmp[2090656] tmp[1081839])
      ref tmp[2090671]:channel(false,dynamic,false)[1080682] "temp"
      (2090675 'move' tmp[2090671](2090673 'set reference' lhs[1081594]))
      (2090677 '.=' _args_foron_fn[2090661] _1_lhs[2090658] tmp[2090671])
      val _args_vforon_fn[2090681]:c_void_ptr[149] "temp"
      (2090685 'move' _args_vforon_fn[2090681](2090683 'cast_to_void_star' _args_foron_fn[2090661]))
      val _args_sizeon_fn[2090687]:int(64)[13] "temp"
      (2090691 'move' _args_sizeon_fn[2090687](2090689 'sizeof_bundle' _class_localson_fn[2090653]))
      on(2090723 call wrapon_fn[2090693] tmp[1081839] _args_vforon_fn[2090681] _args_sizeon_fn[2090687] _args_foron_fn[2090661])
    }
    {
    }
    ref call_tmp[1081883]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1081885 'move' call_tmp[1081883](1081888 call home[1081487] lhs[1081594]))
    ref call_tmp[1081891]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081893 'move' call_tmp[1081891](1081896 call home[1081487] rhs[1081596]))
    (1081900 call =[90631] call_tmp[1081883] call_tmp[1081891])
    ref call_tmp[1081904]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1081906 'move' call_tmp[1081904](1081909 call _channel_internal[1081521] lhs[1081594]))
    ref call_tmp[1081912]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081914 'move' call_tmp[1081912](1081917 call _channel_internal[1081521] rhs[1081596]))
    const-val coerce_tmp[1082048]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082052 'move' coerce_tmp[1082048](1082050 'deref' call_tmp[1081912]))
    (1081921 call =[861480] call_tmp[1081904] coerce_tmp[1082048])
    (1081924 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017871](ref arg this[1017877]:channel(false,dynamic,true)[985627]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1017931]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830523]:locale[28] "temp"
    (1017936 call here[90435] ret_tmp[1830523])
    (1830526 'move' call_tmp[1017931] ret_tmp[1830523])
    val tmp[1017937]:locale[28] "dead after last mention" "temp"
    (1017939 'move' tmp[1017937] call_tmp[1017931])
    (1017943 '.=' this[1017877] home[985615] tmp[1017937])
    val tmp[1017948]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1017950 'move' tmp[1017948](1017986 call chpl__initCopy[1017988] QIO_CHANNEL_PTR_NULL[231468]))
    (1017954 '.=' this[1017877] _channel_internal[985620] tmp[1017948])
    val tmp[1017959]:locale[28] "dead after last mention" "temp"
    (1017961 call init=[90167] tmp[1017959] nilLocale[89939])
    (1017964 '.=' this[1017877] _readWriteThisFromLocale[985624] tmp[1017959])
    (1017969 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022907](ref arg this[1022913]:channel(true,dynamic,true)[1021825]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1022967]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830529]:locale[28] "temp"
    (1022972 call here[90435] ret_tmp[1830529])
    (1830532 'move' call_tmp[1022967] ret_tmp[1830529])
    val tmp[1022973]:locale[28] "dead after last mention" "temp"
    (1022975 'move' tmp[1022973] call_tmp[1022967])
    (1022979 '.=' this[1022913] home[1021813] tmp[1022973])
    val tmp[1022984]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1022986 'move' tmp[1022984](1023022 call chpl__initCopy[1017988] QIO_CHANNEL_PTR_NULL[231468]))
    (1022990 '.=' this[1022913] _channel_internal[1021818] tmp[1022984])
    val tmp[1022995]:locale[28] "dead after last mention" "temp"
    (1022997 call init=[90167] tmp[1022995] nilLocale[89939])
    (1023000 '.=' this[1022913] _readWriteThisFromLocale[1021822] tmp[1022995])
    (1023005 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061620](ref arg this[1061626]:channel(true,dynamic,false)[1060947]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1061680]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830535]:locale[28] "temp"
    (1061685 call here[90435] ret_tmp[1830535])
    (1830538 'move' call_tmp[1061680] ret_tmp[1830535])
    val tmp[1061686]:locale[28] "dead after last mention" "temp"
    (1061688 'move' tmp[1061686] call_tmp[1061680])
    (1061692 '.=' this[1061626] home[1060935] tmp[1061686])
    val tmp[1061697]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1061699 'move' tmp[1061697](1061735 call chpl__initCopy[1017988] QIO_CHANNEL_PTR_NULL[231468]))
    (1061703 '.=' this[1061626] _channel_internal[1060940] tmp[1061697])
    val tmp[1061708]:locale[28] "dead after last mention" "temp"
    (1061710 call init=[90167] tmp[1061708] nilLocale[89939])
    (1061713 '.=' this[1061626] _readWriteThisFromLocale[1060944] tmp[1061708])
    (1061718 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081352](ref arg this[1081358]:channel(false,dynamic,false)[1080682]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1081412]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1830553]:locale[28] "temp"
    (1081417 call here[90435] ret_tmp[1830553])
    (1830556 'move' call_tmp[1081412] ret_tmp[1830553])
    val tmp[1081418]:locale[28] "dead after last mention" "temp"
    (1081420 'move' tmp[1081418] call_tmp[1081412])
    (1081424 '.=' this[1081358] home[1080670] tmp[1081418])
    val tmp[1081429]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1081431 'move' tmp[1081429](1081467 call chpl__initCopy[1017988] QIO_CHANNEL_PTR_NULL[231468]))
    (1081435 '.=' this[1081358] _channel_internal[1080675] tmp[1081429])
    val tmp[1081440]:locale[28] "dead after last mention" "temp"
    (1081442 call init=[90167] tmp[1081440] nilLocale[89939])
    (1081445 '.=' this[1081358] _readWriteThisFromLocale[1080679] tmp[1081440])
    (1081450 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1068388](ref arg this[1068394]:channel(true,dynamic,false)[1060947], const  ref arg home[1068402]:locale[28], const in arg _channel_internal[1068404]:qio_channel_ptr_t[231465], const  ref arg _readWriteThisFromLocale[1068406]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068454]:locale[28] "dead after last mention" "temp"
    (1068456 call init=[90167] tmp[1068454] home[1068402])
    (1068460 '.=' this[1068394] home[1060935] tmp[1068454])
    val tmp[1068465]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1068467 'move' tmp[1068465](1068505 call chpl__initCopy[1017988] _channel_internal[1068404]))
    (1068471 '.=' this[1068394] _channel_internal[1060940] tmp[1068465])
    val tmp[1068476]:locale[28] "dead after last mention" "temp"
    (1068478 call init=[90167] tmp[1068476] _readWriteThisFromLocale[1068406])
    (1068481 '.=' this[1068394] _readWriteThisFromLocale[1060944] tmp[1068476])
    (1068486 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017647](ref arg this[1017653]:channel(false,dynamic,true)[985627], const  ref arg f[1017661]:file[235580], ref arg error[1017663]:_ref(syserr)[948832], const in arg hints[1017667]:int(32)[95], const in arg start[1017673]:int(64)[13], const in arg end[1017679]:int(64)[13], const in arg local_style[1017681]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1017858]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017697 call init[1017871] this[1017653])
    const-val tmp[1017702]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1017704]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1017706 'move' call_tmp[1017704](1017709 call home[886949] f[1017661]))
    const-val call_tmp[1017712]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018014]:BaseLocale[91201] "dead after last mention" "temp"
    (1018019 'move' _locale_tmp_[1018014](1018016 call _value[89981] call_tmp[1017704]))
    (1017714 'move' call_tmp[1017712](1017716 '_wide_get_locale' _locale_tmp_[1018014]))
    (1017718 'move' tmp[1017702] call_tmp[1017712])
    val rvfDerefTmp[2083505]:iostyle[231844] "temp"
    (2083508 'move' rvfDerefTmp[2083505] local_style[1017681])
    val rvfDerefTmp[2083518]:file[235580] "temp"
    (2083522 'move' rvfDerefTmp[2083518](2083520 'deref' f[1017661]))
    val isdirect[2087748]:bool[10] "temp"
    (2087753 'move' isdirect[2087748](2087750 call chpl_doDirectExecuteOn[187423] tmp[1017702]))
    if isdirect[2087748]
    {
      (2087757 call on_fn[1017725] this[1017653] hints[1017667] rvfDerefTmp[2083505] end[1017679] start[1017673] rvfDerefTmp[2083518] _formal_tmp_error[1017858])
    }
    {
      val _args_foron_fn[2087790]:_class_localson_fn[2087770] "temp"
      (2087794 'move' _args_foron_fn[2087790](2087792 'stack allocate class' _class_localson_fn[2087770]))
      (2087796 '.=' _args_foron_fn[2087790] _0_tmp[2087773] tmp[1017702])
      ref tmp[2087800]:channel(false,dynamic,true)[985627] "temp"
      (2087804 'move' tmp[2087800](2087802 'set reference' this[1017653]))
      (2087806 '.=' _args_foron_fn[2087790] _1_this[2087775] tmp[2087800])
      (2087810 '.=' _args_foron_fn[2087790] _2_hints[2087777] hints[1017667])
      (2087814 '.=' _args_foron_fn[2087790] _3_rvfDerefTmp[2087779] rvfDerefTmp[2083505])
      (2087818 '.=' _args_foron_fn[2087790] _4_end[2087781] end[1017679])
      (2087822 '.=' _args_foron_fn[2087790] _5_start[2087783] start[1017673])
      (2087826 '.=' _args_foron_fn[2087790] _6_rvfDerefTmp[2087785] rvfDerefTmp[2083518])
      ref tmp[2087830]:syserr[223584] "temp"
      (2087834 'move' tmp[2087830](2087832 'set reference' _formal_tmp_error[1017858]))
      (2087836 '.=' _args_foron_fn[2087790] _7__formal_tmp_error[2087787] tmp[2087830])
      val _args_vforon_fn[2087840]:c_void_ptr[149] "temp"
      (2087844 'move' _args_vforon_fn[2087840](2087842 'cast_to_void_star' _args_foron_fn[2087790]))
      val _args_sizeon_fn[2087846]:int(64)[13] "temp"
      (2087850 'move' _args_sizeon_fn[2087846](2087848 'sizeof_bundle' _class_localson_fn[2087770]))
      on(2087930 call wrapon_fn[2087852] tmp[1017702] _args_vforon_fn[2087840] _args_sizeon_fn[2087846] _args_foron_fn[2087790])
    }
    {
    }
    label _endinit[1017868]
    (1842798 '=' error[1017663] _formal_tmp_error[1017858])
    (1017855 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022683](ref arg this[1022689]:channel(true,dynamic,true)[1021825], const  ref arg f[1022697]:file[235580], ref arg error[1022699]:_ref(syserr)[948832], const in arg hints[1022703]:int(32)[95], const in arg start[1022709]:int(64)[13], const in arg end[1022715]:int(64)[13], const in arg local_style[1022717]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1022894]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022733 call init[1022907] this[1022689])
    const-val tmp[1022738]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1022740]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1022742 'move' call_tmp[1022740](1022745 call home[886949] f[1022697]))
    const-val call_tmp[1022748]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023032]:BaseLocale[91201] "dead after last mention" "temp"
    (1023037 'move' _locale_tmp_[1023032](1023034 call _value[89981] call_tmp[1022740]))
    (1022750 'move' call_tmp[1022748](1022752 '_wide_get_locale' _locale_tmp_[1023032]))
    (1022754 'move' tmp[1022738] call_tmp[1022748])
    val rvfDerefTmp[2083582]:file[235580] "temp"
    (2083586 'move' rvfDerefTmp[2083582](2083584 'deref' f[1022697]))
    val rvfDerefTmp[2083603]:iostyle[231844] "temp"
    (2083606 'move' rvfDerefTmp[2083603] local_style[1022717])
    val isdirect[2088431]:bool[10] "temp"
    (2088436 'move' isdirect[2088431](2088433 call chpl_doDirectExecuteOn[187423] tmp[1022738]))
    if isdirect[2088431]
    {
      (2088440 call on_fn[1022761] rvfDerefTmp[2083582] _formal_tmp_error[1022894] end[1022715] this[1022689] hints[1022703] rvfDerefTmp[2083603] start[1022709])
    }
    {
      val _args_foron_fn[2088473]:_class_localson_fn[2088453] "temp"
      (2088477 'move' _args_foron_fn[2088473](2088475 'stack allocate class' _class_localson_fn[2088453]))
      (2088479 '.=' _args_foron_fn[2088473] _0_tmp[2088456] tmp[1022738])
      (2088483 '.=' _args_foron_fn[2088473] _1_rvfDerefTmp[2088458] rvfDerefTmp[2083582])
      ref tmp[2088487]:syserr[223584] "temp"
      (2088491 'move' tmp[2088487](2088489 'set reference' _formal_tmp_error[1022894]))
      (2088493 '.=' _args_foron_fn[2088473] _2__formal_tmp_error[2088460] tmp[2088487])
      (2088497 '.=' _args_foron_fn[2088473] _3_end[2088462] end[1022715])
      ref tmp[2088501]:channel(true,dynamic,true)[1021825] "temp"
      (2088505 'move' tmp[2088501](2088503 'set reference' this[1022689]))
      (2088507 '.=' _args_foron_fn[2088473] _4_this[2088464] tmp[2088501])
      (2088511 '.=' _args_foron_fn[2088473] _5_hints[2088466] hints[1022703])
      (2088515 '.=' _args_foron_fn[2088473] _6_rvfDerefTmp[2088468] rvfDerefTmp[2083603])
      (2088519 '.=' _args_foron_fn[2088473] _7_start[2088470] start[1022709])
      val _args_vforon_fn[2088523]:c_void_ptr[149] "temp"
      (2088527 'move' _args_vforon_fn[2088523](2088525 'cast_to_void_star' _args_foron_fn[2088473]))
      val _args_sizeon_fn[2088529]:int(64)[13] "temp"
      (2088533 'move' _args_sizeon_fn[2088529](2088531 'sizeof_bundle' _class_localson_fn[2088453]))
      on(2088613 call wrapon_fn[2088535] tmp[1022738] _args_vforon_fn[2088523] _args_sizeon_fn[2088529] _args_foron_fn[2088473])
    }
    {
    }
    label _endinit[1022904]
    (1842821 '=' error[1022699] _formal_tmp_error[1022894])
    (1022891 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061396](ref arg this[1061402]:channel(true,dynamic,false)[1060947], const  ref arg f[1061410]:file[235580], ref arg error[1061412]:_ref(syserr)[948832], const in arg hints[1061416]:int(32)[95], const in arg start[1061422]:int(64)[13], const in arg end[1061428]:int(64)[13], const in arg local_style[1061430]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061607]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061446 call init[1061620] this[1061402])
    const-val tmp[1061451]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1061453]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1061455 'move' call_tmp[1061453](1061458 call home[886949] f[1061410]))
    const-val call_tmp[1061461]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061745]:BaseLocale[91201] "dead after last mention" "temp"
    (1061750 'move' _locale_tmp_[1061745](1061747 call _value[89981] call_tmp[1061453]))
    (1061463 'move' call_tmp[1061461](1061465 '_wide_get_locale' _locale_tmp_[1061745]))
    (1061467 'move' tmp[1061451] call_tmp[1061461])
    val rvfDerefTmp[2083690]:iostyle[231844] "temp"
    (2083693 'move' rvfDerefTmp[2083690] local_style[1061430])
    val rvfDerefTmp[2083703]:file[235580] "temp"
    (2083707 'move' rvfDerefTmp[2083703](2083705 'deref' f[1061410]))
    val isdirect[2089144]:bool[10] "temp"
    (2089149 'move' isdirect[2089144](2089146 call chpl_doDirectExecuteOn[187423] tmp[1061451]))
    if isdirect[2089144]
    {
      (2089153 call on_fn[1061474] _formal_tmp_error[1061607] end[1061428] hints[1061416] rvfDerefTmp[2083690] this[1061402] start[1061422] rvfDerefTmp[2083703])
    }
    {
      val _args_foron_fn[2089186]:_class_localson_fn[2089166] "temp"
      (2089190 'move' _args_foron_fn[2089186](2089188 'stack allocate class' _class_localson_fn[2089166]))
      (2089192 '.=' _args_foron_fn[2089186] _0_tmp[2089169] tmp[1061451])
      ref tmp[2089196]:syserr[223584] "temp"
      (2089200 'move' tmp[2089196](2089198 'set reference' _formal_tmp_error[1061607]))
      (2089202 '.=' _args_foron_fn[2089186] _1__formal_tmp_error[2089171] tmp[2089196])
      (2089206 '.=' _args_foron_fn[2089186] _2_end[2089173] end[1061428])
      (2089210 '.=' _args_foron_fn[2089186] _3_hints[2089175] hints[1061416])
      (2089214 '.=' _args_foron_fn[2089186] _4_rvfDerefTmp[2089177] rvfDerefTmp[2083690])
      ref tmp[2089218]:channel(true,dynamic,false)[1060947] "temp"
      (2089222 'move' tmp[2089218](2089220 'set reference' this[1061402]))
      (2089224 '.=' _args_foron_fn[2089186] _5_this[2089179] tmp[2089218])
      (2089228 '.=' _args_foron_fn[2089186] _6_start[2089181] start[1061422])
      (2089232 '.=' _args_foron_fn[2089186] _7_rvfDerefTmp[2089183] rvfDerefTmp[2083703])
      val _args_vforon_fn[2089236]:c_void_ptr[149] "temp"
      (2089240 'move' _args_vforon_fn[2089236](2089238 'cast_to_void_star' _args_foron_fn[2089186]))
      val _args_sizeon_fn[2089242]:int(64)[13] "temp"
      (2089246 'move' _args_sizeon_fn[2089242](2089244 'sizeof_bundle' _class_localson_fn[2089166]))
      on(2089326 call wrapon_fn[2089248] tmp[1061451] _args_vforon_fn[2089236] _args_sizeon_fn[2089242] _args_foron_fn[2089186])
    }
    {
    }
    label _endinit[1061617]
    (1844046 '=' error[1061412] _formal_tmp_error[1061607])
    (1061604 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081128](ref arg this[1081134]:channel(false,dynamic,false)[1080682], const  ref arg f[1081142]:file[235580], ref arg error[1081144]:_ref(syserr)[948832], const in arg hints[1081148]:int(32)[95], const in arg start[1081154]:int(64)[13], const in arg end[1081160]:int(64)[13], const in arg local_style[1081162]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081339]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081178 call init[1081352] this[1081134])
    const-val tmp[1081183]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1081185]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081187 'move' call_tmp[1081185](1081190 call home[886949] f[1081142]))
    const-val call_tmp[1081193]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081477]:BaseLocale[91201] "dead after last mention" "temp"
    (1081482 'move' _locale_tmp_[1081477](1081479 call _value[89981] call_tmp[1081185]))
    (1081195 'move' call_tmp[1081193](1081197 '_wide_get_locale' _locale_tmp_[1081477]))
    (1081199 'move' tmp[1081183] call_tmp[1081193])
    val rvfDerefTmp[2083868]:iostyle[231844] "temp"
    (2083871 'move' rvfDerefTmp[2083868] local_style[1081162])
    val rvfDerefTmp[2083881]:file[235580] "temp"
    (2083885 'move' rvfDerefTmp[2083881](2083883 'deref' f[1081142]))
    val isdirect[2090365]:bool[10] "temp"
    (2090370 'move' isdirect[2090365](2090367 call chpl_doDirectExecuteOn[187423] tmp[1081183]))
    if isdirect[2090365]
    {
      (2090374 call on_fn[1081206] end[1081160] hints[1081148] rvfDerefTmp[2083868] this[1081134] start[1081154] rvfDerefTmp[2083881] _formal_tmp_error[1081339])
    }
    {
      val _args_foron_fn[2090407]:_class_localson_fn[2090387] "temp"
      (2090411 'move' _args_foron_fn[2090407](2090409 'stack allocate class' _class_localson_fn[2090387]))
      (2090413 '.=' _args_foron_fn[2090407] _0_tmp[2090390] tmp[1081183])
      (2090417 '.=' _args_foron_fn[2090407] _1_end[2090392] end[1081160])
      (2090421 '.=' _args_foron_fn[2090407] _2_hints[2090394] hints[1081148])
      (2090425 '.=' _args_foron_fn[2090407] _3_rvfDerefTmp[2090396] rvfDerefTmp[2083868])
      ref tmp[2090429]:channel(false,dynamic,false)[1080682] "temp"
      (2090433 'move' tmp[2090429](2090431 'set reference' this[1081134]))
      (2090435 '.=' _args_foron_fn[2090407] _4_this[2090398] tmp[2090429])
      (2090439 '.=' _args_foron_fn[2090407] _5_start[2090400] start[1081154])
      (2090443 '.=' _args_foron_fn[2090407] _6_rvfDerefTmp[2090402] rvfDerefTmp[2083881])
      ref tmp[2090447]:syserr[223584] "temp"
      (2090451 'move' tmp[2090447](2090449 'set reference' _formal_tmp_error[1081339]))
      (2090453 '.=' _args_foron_fn[2090407] _7__formal_tmp_error[2090404] tmp[2090447])
      val _args_vforon_fn[2090457]:c_void_ptr[149] "temp"
      (2090461 'move' _args_vforon_fn[2090457](2090459 'cast_to_void_star' _args_foron_fn[2090407]))
      val _args_sizeon_fn[2090463]:int(64)[13] "temp"
      (2090467 'move' _args_sizeon_fn[2090463](2090465 'sizeof_bundle' _class_localson_fn[2090387]))
      on(2090547 call wrapon_fn[2090469] tmp[1081183] _args_vforon_fn[2090457] _args_sizeon_fn[2090463] _args_foron_fn[2090407])
    }
    {
    }
    label _endinit[1081349]
    (1844207 '=' error[1081144] _formal_tmp_error[1081339])
    (1081336 return _void[55])
  }
  function _ref(channel(false,dynamic,true))[985636].deinit[1471060](ref arg this[1471066]:_ref(channel(false,dynamic,true))[985636]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1471072]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1471074]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1471076 'move' call_tmp[1471074](1471079 call home[1018024] this[1471066]))
    const-val call_tmp[1471082]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1471133]:BaseLocale[91201] "dead after last mention" "temp"
    (1471138 'move' _locale_tmp_[1471133](1471135 call _value[89981] call_tmp[1471074]))
    (1471084 'move' call_tmp[1471082](1471086 '_wide_get_locale' _locale_tmp_[1471133]))
    (1471088 'move' tmp[1471072] call_tmp[1471082])
    val isdirect[2097288]:bool[10] "temp"
    (2097293 'move' isdirect[2097288](2097290 call chpl_doDirectExecuteOn[187423] tmp[1471072]))
    if isdirect[2097288]
    {
      (2097297 call on_fn[1471095] this[1471066])
    }
    {
      val _args_foron_fn[2097312]:_class_localson_fn[2097304] "temp"
      (2097316 'move' _args_foron_fn[2097312](2097314 'stack allocate class' _class_localson_fn[2097304]))
      (2097318 '.=' _args_foron_fn[2097312] _0_tmp[2097307] tmp[1471072])
      ref tmp[2097322]:channel(false,dynamic,true)[985627] "temp"
      (2097326 'move' tmp[2097322](2097324 'set reference' this[1471066]))
      (2097328 '.=' _args_foron_fn[2097312] _1_this[2097309] tmp[2097322])
      val _args_vforon_fn[2097332]:c_void_ptr[149] "temp"
      (2097336 'move' _args_vforon_fn[2097332](2097334 'cast_to_void_star' _args_foron_fn[2097312]))
      val _args_sizeon_fn[2097338]:int(64)[13] "temp"
      (2097342 'move' _args_sizeon_fn[2097338](2097340 'sizeof_bundle' _class_localson_fn[2097304]))
      on(2097374 call wrapon_fn[2097344] tmp[1471072] _args_vforon_fn[2097332] _args_sizeon_fn[2097338] _args_foron_fn[2097312])
    }
    {
    }
    label _enddeinit[1815895]
    ref _field_destructor_tmp_[1815893]:_ref(locale)[948844] "temp"
    (1815900 'move' _field_destructor_tmp_[1815893](1815897 '.' this[1471066] _readWriteThisFromLocale[985624]))
    (1815902 call deinit[90185] _field_destructor_tmp_[1815893])
    ref _field_destructor_tmp_[1815905]:_ref(locale)[948844] "temp"
    (1815910 'move' _field_destructor_tmp_[1815905](1815907 '.' this[1471066] home[985615]))
    (1815912 call deinit[90185] _field_destructor_tmp_[1815905])
    (1471129 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834].deinit[1534039](ref arg this[1534045]:_ref(channel(true,dynamic,true))[1021834]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1534051]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1534053]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1534055 'move' call_tmp[1534053](1534058 call home[1023042] this[1534045]))
    const-val call_tmp[1534061]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1534112]:BaseLocale[91201] "dead after last mention" "temp"
    (1534117 'move' _locale_tmp_[1534112](1534114 call _value[89981] call_tmp[1534053]))
    (1534063 'move' call_tmp[1534061](1534065 '_wide_get_locale' _locale_tmp_[1534112]))
    (1534067 'move' tmp[1534051] call_tmp[1534061])
    val isdirect[2099079]:bool[10] "temp"
    (2099084 'move' isdirect[2099079](2099081 call chpl_doDirectExecuteOn[187423] tmp[1534051]))
    if isdirect[2099079]
    {
      (2099088 call on_fn[1534074] this[1534045])
    }
    {
      val _args_foron_fn[2099103]:_class_localson_fn[2099095] "temp"
      (2099107 'move' _args_foron_fn[2099103](2099105 'stack allocate class' _class_localson_fn[2099095]))
      (2099109 '.=' _args_foron_fn[2099103] _0_tmp[2099098] tmp[1534051])
      ref tmp[2099113]:channel(true,dynamic,true)[1021825] "temp"
      (2099117 'move' tmp[2099113](2099115 'set reference' this[1534045]))
      (2099119 '.=' _args_foron_fn[2099103] _1_this[2099100] tmp[2099113])
      val _args_vforon_fn[2099123]:c_void_ptr[149] "temp"
      (2099127 'move' _args_vforon_fn[2099123](2099125 'cast_to_void_star' _args_foron_fn[2099103]))
      val _args_sizeon_fn[2099129]:int(64)[13] "temp"
      (2099133 'move' _args_sizeon_fn[2099129](2099131 'sizeof_bundle' _class_localson_fn[2099095]))
      on(2099165 call wrapon_fn[2099135] tmp[1534051] _args_vforon_fn[2099123] _args_sizeon_fn[2099129] _args_foron_fn[2099103])
    }
    {
    }
    label _enddeinit[1815917]
    ref _field_destructor_tmp_[1815915]:_ref(locale)[948844] "temp"
    (1815922 'move' _field_destructor_tmp_[1815915](1815919 '.' this[1534045] _readWriteThisFromLocale[1021822]))
    (1815924 call deinit[90185] _field_destructor_tmp_[1815915])
    ref _field_destructor_tmp_[1815927]:_ref(locale)[948844] "temp"
    (1815932 'move' _field_destructor_tmp_[1815927](1815929 '.' this[1534045] home[1021813]))
    (1815934 call deinit[90185] _field_destructor_tmp_[1815927])
    (1534108 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].deinit[1536215](ref arg this[1536221]:_ref(channel(true,dynamic,false))[1060956]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1536227]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1536229]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1536231 'move' call_tmp[1536229](1536234 call home[1061755] this[1536221]))
    const-val call_tmp[1536237]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1536288]:BaseLocale[91201] "dead after last mention" "temp"
    (1536293 'move' _locale_tmp_[1536288](1536290 call _value[89981] call_tmp[1536229]))
    (1536239 'move' call_tmp[1536237](1536241 '_wide_get_locale' _locale_tmp_[1536288]))
    (1536243 'move' tmp[1536227] call_tmp[1536237])
    val isdirect[2099255]:bool[10] "temp"
    (2099260 'move' isdirect[2099255](2099257 call chpl_doDirectExecuteOn[187423] tmp[1536227]))
    if isdirect[2099255]
    {
      (2099264 call on_fn[1536250] this[1536221])
    }
    {
      val _args_foron_fn[2099279]:_class_localson_fn[2099271] "temp"
      (2099283 'move' _args_foron_fn[2099279](2099281 'stack allocate class' _class_localson_fn[2099271]))
      (2099285 '.=' _args_foron_fn[2099279] _0_tmp[2099274] tmp[1536227])
      ref tmp[2099289]:channel(true,dynamic,false)[1060947] "temp"
      (2099293 'move' tmp[2099289](2099291 'set reference' this[1536221]))
      (2099295 '.=' _args_foron_fn[2099279] _1_this[2099276] tmp[2099289])
      val _args_vforon_fn[2099299]:c_void_ptr[149] "temp"
      (2099303 'move' _args_vforon_fn[2099299](2099301 'cast_to_void_star' _args_foron_fn[2099279]))
      val _args_sizeon_fn[2099305]:int(64)[13] "temp"
      (2099309 'move' _args_sizeon_fn[2099305](2099307 'sizeof_bundle' _class_localson_fn[2099271]))
      on(2099341 call wrapon_fn[2099311] tmp[1536227] _args_vforon_fn[2099299] _args_sizeon_fn[2099305] _args_foron_fn[2099279])
    }
    {
    }
    label _enddeinit[1815951]
    ref _field_destructor_tmp_[1815949]:_ref(locale)[948844] "temp"
    (1815956 'move' _field_destructor_tmp_[1815949](1815953 '.' this[1536221] _readWriteThisFromLocale[1060944]))
    (1815958 call deinit[90185] _field_destructor_tmp_[1815949])
    ref _field_destructor_tmp_[1815961]:_ref(locale)[948844] "temp"
    (1815966 'move' _field_destructor_tmp_[1815961](1815963 '.' this[1536221] home[1060935]))
    (1815968 call deinit[90185] _field_destructor_tmp_[1815961])
    (1536284 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080691].deinit[1540469](ref arg this[1540475]:_ref(channel(false,dynamic,false))[1080691]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1540481]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1540483]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1540485 'move' call_tmp[1540483](1540488 call home[1081487] this[1540475]))
    const-val call_tmp[1540491]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1540542]:BaseLocale[91201] "dead after last mention" "temp"
    (1540547 'move' _locale_tmp_[1540542](1540544 call _value[89981] call_tmp[1540483]))
    (1540493 'move' call_tmp[1540491](1540495 '_wide_get_locale' _locale_tmp_[1540542]))
    (1540497 'move' tmp[1540481] call_tmp[1540491])
    val isdirect[2099516]:bool[10] "temp"
    (2099521 'move' isdirect[2099516](2099518 call chpl_doDirectExecuteOn[187423] tmp[1540481]))
    if isdirect[2099516]
    {
      (2099525 call on_fn[1540504] this[1540475])
    }
    {
      val _args_foron_fn[2099540]:_class_localson_fn[2099532] "temp"
      (2099544 'move' _args_foron_fn[2099540](2099542 'stack allocate class' _class_localson_fn[2099532]))
      (2099546 '.=' _args_foron_fn[2099540] _0_tmp[2099535] tmp[1540481])
      ref tmp[2099550]:channel(false,dynamic,false)[1080682] "temp"
      (2099554 'move' tmp[2099550](2099552 'set reference' this[1540475]))
      (2099556 '.=' _args_foron_fn[2099540] _1_this[2099537] tmp[2099550])
      val _args_vforon_fn[2099560]:c_void_ptr[149] "temp"
      (2099564 'move' _args_vforon_fn[2099560](2099562 'cast_to_void_star' _args_foron_fn[2099540]))
      val _args_sizeon_fn[2099566]:int(64)[13] "temp"
      (2099570 'move' _args_sizeon_fn[2099566](2099568 'sizeof_bundle' _class_localson_fn[2099532]))
      on(2099602 call wrapon_fn[2099572] tmp[1540481] _args_vforon_fn[2099560] _args_sizeon_fn[2099566] _args_foron_fn[2099540])
    }
    {
    }
    label _enddeinit[1815973]
    ref _field_destructor_tmp_[1815971]:_ref(locale)[948844] "temp"
    (1815978 'move' _field_destructor_tmp_[1815971](1815975 '.' this[1540475] _readWriteThisFromLocale[1080679]))
    (1815980 call deinit[90185] _field_destructor_tmp_[1815971])
    ref _field_destructor_tmp_[1815983]:_ref(locale)[948844] "temp"
    (1815988 'move' _field_destructor_tmp_[1815983](1815985 '.' this[1540475] home[1080670]))
    (1815990 call deinit[90185] _field_destructor_tmp_[1815983])
    (1540538 return _void[55])
  }
  function _ref(ioNewline)[967580].init[893669](ref arg this[893672]:_ref(ioNewline)[967580], in arg skipWhitespaceOnly[893675]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893691 '.=' this[893672] skipWhitespaceOnly[238682] skipWhitespaceOnly[893675])
    (893695 return _void[55])
  }
  function init_default_skipWhitespaceOnly[1392328]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1392330]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val skipWhitespaceOnly[1392335]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1392339]:bool[10] "dead after last mention" "temp"
    val _formal_type[1392341]:bool[10] "dead after last mention" "temp" "type variable"
    (1392349 'move' tmp[1392339] 0)
    (1392352 'move' skipWhitespaceOnly[1392335] tmp[1392339])
    (1392357 'move' ret[1392330] skipWhitespaceOnly[1392335])
    (1392333 return ret[1392330])
  }
  function _ref(ioNewline)[967580].deinit[893735](const  ref arg this[893739]:_ref(ioNewline)[967580]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (893747 return _void[55])
  }
  type ioNewline[238701] val skipWhitespaceOnly[238682]:bool[10]
  function _ref(ioLiteral)[967590].val[894746](ref arg this[894750]:_ref(ioLiteral)[967590]) ref : _ref(string)[937939] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[894760]:_ref(string)[937939] "dead after last mention" "RVV" "temp"
    ref call_tmp[894767]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
    (894770 'move' call_tmp[894767](894754 '.' this[894750] val[238728]))
    (894765 'move' ret[894760] call_tmp[894767])
    (894762 return ret[894760])
  }
  function _ref(ioLiteral)[967590].init[894798](ref arg this[894801]:_ref(ioLiteral)[967590], const  ref arg val[894804]:string[26], in arg ignoreWhiteSpace[894817]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_val[1408295]:string[26] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1408298 'move' _formal_tmp_val[1408295] val[894804])
    (894833 '.=' this[894801] val[238728] _formal_tmp_val[1408295])
    (894836 '.=' this[894801] ignoreWhiteSpace[238734] ignoreWhiteSpace[894817])
    (894840 return _void[55])
  }
  function init_default_ignoreWhiteSpace[1408323]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free" "was compiler generated"
  {
    val ret[1408325]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreWhiteSpace[1408330]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1408334]:bool[10] "dead after last mention" "temp"
    val _formal_type[1408336]:bool[10] "dead after last mention" "temp" "type variable"
    (1408344 'move' tmp[1408334] 1)
    (1408347 'move' ignoreWhiteSpace[1408330] tmp[1408334])
    (1408352 'move' ret[1408325] ignoreWhiteSpace[1408330])
    (1408328 return ret[1408325])
  }
  function _ref(ioLiteral)[967590].deinit[894907](const  ref arg this[894911]:_ref(ioLiteral)[967590]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    label _enddeinit[1814987]
    ref _field_destructor_tmp_[1814985]:_ref(string)[937939] "temp"
    (1814992 'move' _field_destructor_tmp_[1814985](1814989 '.' this[894911] val[238728]))
    (1814994 call deinit[30831] _field_destructor_tmp_[1814985])
    (894919 return _void[55])
  }
  type ioLiteral[238753] val val[238728]:string[26] val ignoreWhiteSpace[238734]:bool[10]
  function _cast[238766](const  ref arg x[238769]:ioLiteral[238753], ref arg _retArg[1831533]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1804460]:string[26] "temp"
    const-val ret[534816]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[716851]:_ref(string)[937939] "dead after last mention" "maybe param" "reference to a const" "temp"
    (716854 'move' call_tmp[716851](238773 call val[894746] x[238769]))
    (534821 'move' ret[534816](1831537 call chpl__initCopy[981348] call_tmp[716851]))
    (1831535 '=' _retArg[1831533] ret[534816])
    (1831539 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._ch_ioerror[1062865](const  ref arg this[1062871]:_ref(channel(true,dynamic,false))[1060956], const in arg error[1062873]:syserr[223584], const  ref arg msg[1062875]:string[26], ref arg error_out[1809879]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1062881]:string[26] "dead at end of block" "insert auto destroy"
    (1062883 'move' path[1062881] "unknown")
    val call_tmp[1062895]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1062902]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062904 'move' offset[1062902] -1)
    const-val tmp[1062909]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062911]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1062913 'move' call_tmp[1062911](1062916 call home[1061755] this[1062871]))
    const-val call_tmp[1062919]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1063071]:BaseLocale[91201] "dead after last mention" "temp"
    (1063076 'move' _locale_tmp_[1063071](1063073 call _value[89981] call_tmp[1062911]))
    (1062921 'move' call_tmp[1062919](1062923 '_wide_get_locale' _locale_tmp_[1063071]))
    (1062925 'move' tmp[1062909] call_tmp[1062919])
    val error[1809884]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809886 'move' error[1809884] nil[44])
    val isdirect[2089613]:bool[10] "temp"
    (2089618 'move' isdirect[2089613](2089615 call chpl_doDirectExecuteOn[187423] tmp[1062909]))
    if isdirect[2089613]
    {
      (2089622 call on_fn[1062932] this[1062871] path[1062881] offset[1062902] error[1809884])
    }
    {
      val _args_foron_fn[2089646]:_class_localson_fn[2089632] "temp"
      (2089650 'move' _args_foron_fn[2089646](2089648 'stack allocate class' _class_localson_fn[2089632]))
      (2089652 '.=' _args_foron_fn[2089646] _0_tmp[2089635] tmp[1062909])
      ref tmp[2089656]:channel(true,dynamic,false)[1060947] "temp"
      (2089660 'move' tmp[2089656](2089658 'set reference' this[1062871]))
      (2089662 '.=' _args_foron_fn[2089646] _1_this[2089637] tmp[2089656])
      ref tmp[2089666]:string[26] "temp"
      (2089670 'move' tmp[2089666](2089668 'set reference' path[1062881]))
      (2089672 '.=' _args_foron_fn[2089646] _2_path[2089639] tmp[2089666])
      ref tmp[2089676]:int(64)[13] "temp"
      (2089680 'move' tmp[2089676](2089678 'set reference' offset[1062902]))
      (2089682 '.=' _args_foron_fn[2089646] _3_offset[2089641] tmp[2089676])
      ref tmp[2089686]:Error[167938] "temp"
      (2089690 'move' tmp[2089686](2089688 'set reference' error[1809884]))
      (2089692 '.=' _args_foron_fn[2089646] _4_error[2089643] tmp[2089686])
      val _args_vforon_fn[2089696]:c_void_ptr[149] "temp"
      (2089700 'move' _args_vforon_fn[2089696](2089698 'cast_to_void_star' _args_foron_fn[2089646]))
      val _args_sizeon_fn[2089702]:int(64)[13] "temp"
      (2089706 'move' _args_sizeon_fn[2089702](2089704 'sizeof_bundle' _class_localson_fn[2089632]))
      on(2089762 call wrapon_fn[2089708] tmp[1062909] _args_vforon_fn[2089696] _args_sizeon_fn[2089702] _args_foron_fn[2089646])
    }
    val errorExists[2108784]:bool[10] "temp"
    (2108789 'move' errorExists[2108784](2108786 '!=' error[1809884] nil[44]))
    if errorExists[2108784]
    {
      (1809890 '=' error_out[1809879] error[1809884])
      (1844049 call chpl__autoDestroy[1461530] path[1062881])
      gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
    }
    {
    }
    {
      val error[1809898]:Error[167938] "error variable" "temp"
      (1809907 'move' error[1809898] nil[44])
      (1063055 call ioerror[266141] error[1062873] msg[1062875] path[1062881] offset[1062902] error[1809898])
      val errorExists[2108792]:bool[10] "temp"
      (2108797 'move' errorExists[2108792](2108794 '!=' error[1809898] nil[44]))
      if errorExists[2108792]
      {
        gotoErrorHandling handler[1809899] handler[1809899]
      }
      label handler[1809899]
      const-val shouldHandleError[1809918]:bool[10] "temp"
      val errorExists[2108800]:bool[10] "temp"
      (2108805 'move' errorExists[2108800](2108802 '!=' error[1809898] nil[44]))
      (1809922 'move' shouldHandleError[1809918] errorExists[2108800])
      if shouldHandleError[1809918]
      {
        (1809914 '=' error_out[1809879] error[1809898])
        (1844052 call chpl__autoDestroy[1461530] path[1062881])
        gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
      }
    }
    (1844055 call chpl__autoDestroy[1461530] path[1062881])
    label _end_ch_ioerror[1809881]
    (1063064 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080691]._ch_ioerror[1082549](const  ref arg this[1082555]:_ref(channel(false,dynamic,false))[1080691], const in arg error[1082557]:syserr[223584], const  ref arg msg[1082559]:string[26], ref arg error_out[1810675]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082565]:string[26] "dead at end of block" "insert auto destroy"
    (1082567 'move' path[1082565] "unknown")
    val call_tmp[1082579]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1082586]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082588 'move' offset[1082586] -1)
    const-val tmp[1082593]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1082595]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1082597 'move' call_tmp[1082595](1082600 call home[1081487] this[1082555]))
    const-val call_tmp[1082603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082755]:BaseLocale[91201] "dead after last mention" "temp"
    (1082760 'move' _locale_tmp_[1082755](1082757 call _value[89981] call_tmp[1082595]))
    (1082605 'move' call_tmp[1082603](1082607 '_wide_get_locale' _locale_tmp_[1082755]))
    (1082609 'move' tmp[1082593] call_tmp[1082603])
    val error[1810680]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810682 'move' error[1810680] nil[44])
    val rvfDerefTmp[2083930]:channel(false,dynamic,false)[1080682] "temp"
    (2083934 'move' rvfDerefTmp[2083930](2083932 'deref' this[1082555]))
    val isdirect[2090834]:bool[10] "temp"
    (2090839 'move' isdirect[2090834](2090836 call chpl_doDirectExecuteOn[187423] tmp[1082593]))
    if isdirect[2090834]
    {
      (2090843 call on_fn[1082616] rvfDerefTmp[2083930] path[1082565] offset[1082586] error[1810680])
    }
    {
      val _args_foron_fn[2090867]:_class_localson_fn[2090853] "temp"
      (2090871 'move' _args_foron_fn[2090867](2090869 'stack allocate class' _class_localson_fn[2090853]))
      (2090873 '.=' _args_foron_fn[2090867] _0_tmp[2090856] tmp[1082593])
      (2090877 '.=' _args_foron_fn[2090867] _1_rvfDerefTmp[2090858] rvfDerefTmp[2083930])
      ref tmp[2090881]:string[26] "temp"
      (2090885 'move' tmp[2090881](2090883 'set reference' path[1082565]))
      (2090887 '.=' _args_foron_fn[2090867] _2_path[2090860] tmp[2090881])
      ref tmp[2090891]:int(64)[13] "temp"
      (2090895 'move' tmp[2090891](2090893 'set reference' offset[1082586]))
      (2090897 '.=' _args_foron_fn[2090867] _3_offset[2090862] tmp[2090891])
      ref tmp[2090901]:Error[167938] "temp"
      (2090905 'move' tmp[2090901](2090903 'set reference' error[1810680]))
      (2090907 '.=' _args_foron_fn[2090867] _4_error[2090864] tmp[2090901])
      val _args_vforon_fn[2090911]:c_void_ptr[149] "temp"
      (2090915 'move' _args_vforon_fn[2090911](2090913 'cast_to_void_star' _args_foron_fn[2090867]))
      val _args_sizeon_fn[2090917]:int(64)[13] "temp"
      (2090921 'move' _args_sizeon_fn[2090917](2090919 'sizeof_bundle' _class_localson_fn[2090853]))
      on(2090977 call wrapon_fn[2090923] tmp[1082593] _args_vforon_fn[2090911] _args_sizeon_fn[2090917] _args_foron_fn[2090867])
    }
    val errorExists[2109144]:bool[10] "temp"
    (2109149 'move' errorExists[2109144](2109146 '!=' error[1810680] nil[44]))
    if errorExists[2109144]
    {
      (1810686 '=' error_out[1810675] error[1810680])
      (1844210 call chpl__autoDestroy[1461530] path[1082565])
      gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
    }
    {
    }
    {
      val error[1810694]:Error[167938] "error variable" "temp"
      (1810703 'move' error[1810694] nil[44])
      (1082739 call ioerror[266141] error[1082557] msg[1082559] path[1082565] offset[1082586] error[1810694])
      val errorExists[2109152]:bool[10] "temp"
      (2109157 'move' errorExists[2109152](2109154 '!=' error[1810694] nil[44]))
      if errorExists[2109152]
      {
        gotoErrorHandling handler[1810695] handler[1810695]
      }
      label handler[1810695]
      const-val shouldHandleError[1810714]:bool[10] "temp"
      val errorExists[2109160]:bool[10] "temp"
      (2109165 'move' errorExists[2109160](2109162 '!=' error[1810694] nil[44]))
      (1810718 'move' shouldHandleError[1810714] errorExists[2109160])
      if shouldHandleError[1810714]
      {
        (1810710 '=' error_out[1810675] error[1810694])
        (1844213 call chpl__autoDestroy[1461530] path[1082565])
        gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
      }
    }
    (1844216 call chpl__autoDestroy[1461530] path[1082565])
    label _end_ch_ioerror[1810677]
    (1082748 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._ch_ioerror[1393261](const  ref arg this[1393267]:_ref(channel(true,dynamic,true))[1021834], const in arg error[1393269]:syserr[223584], const  ref arg msg[1393271]:string[26], ref arg error_out[1812507]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1393277]:string[26] "dead at end of block" "insert auto destroy"
    (1393279 'move' path[1393277] "unknown")
    val call_tmp[1393291]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1393298]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1393300 'move' offset[1393298] -1)
    const-val tmp[1393305]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1393307]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1393309 'move' call_tmp[1393307](1393312 call home[1023042] this[1393267]))
    const-val call_tmp[1393315]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1393467]:BaseLocale[91201] "dead after last mention" "temp"
    (1393472 'move' _locale_tmp_[1393467](1393469 call _value[89981] call_tmp[1393307]))
    (1393317 'move' call_tmp[1393315](1393319 '_wide_get_locale' _locale_tmp_[1393467]))
    (1393321 'move' tmp[1393305] call_tmp[1393315])
    val error[1812512]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1812514 'move' error[1812512] nil[44])
    val rvfDerefTmp[2084359]:channel(true,dynamic,true)[1021825] "temp"
    (2084363 'move' rvfDerefTmp[2084359](2084361 'deref' this[1393267]))
    val isdirect[2094336]:bool[10] "temp"
    (2094341 'move' isdirect[2094336](2094338 call chpl_doDirectExecuteOn[187423] tmp[1393305]))
    if isdirect[2094336]
    {
      (2094345 call on_fn[1393328] rvfDerefTmp[2084359] path[1393277] offset[1393298] error[1812512])
    }
    {
      val _args_foron_fn[2094369]:_class_localson_fn[2094355] "temp"
      (2094373 'move' _args_foron_fn[2094369](2094371 'stack allocate class' _class_localson_fn[2094355]))
      (2094375 '.=' _args_foron_fn[2094369] _0_tmp[2094358] tmp[1393305])
      (2094379 '.=' _args_foron_fn[2094369] _1_rvfDerefTmp[2094360] rvfDerefTmp[2084359])
      ref tmp[2094383]:string[26] "temp"
      (2094387 'move' tmp[2094383](2094385 'set reference' path[1393277]))
      (2094389 '.=' _args_foron_fn[2094369] _2_path[2094362] tmp[2094383])
      ref tmp[2094393]:int(64)[13] "temp"
      (2094397 'move' tmp[2094393](2094395 'set reference' offset[1393298]))
      (2094399 '.=' _args_foron_fn[2094369] _3_offset[2094364] tmp[2094393])
      ref tmp[2094403]:Error[167938] "temp"
      (2094407 'move' tmp[2094403](2094405 'set reference' error[1812512]))
      (2094409 '.=' _args_foron_fn[2094369] _4_error[2094366] tmp[2094403])
      val _args_vforon_fn[2094413]:c_void_ptr[149] "temp"
      (2094417 'move' _args_vforon_fn[2094413](2094415 'cast_to_void_star' _args_foron_fn[2094369]))
      val _args_sizeon_fn[2094419]:int(64)[13] "temp"
      (2094423 'move' _args_sizeon_fn[2094419](2094421 'sizeof_bundle' _class_localson_fn[2094355]))
      on(2094479 call wrapon_fn[2094425] tmp[1393305] _args_vforon_fn[2094413] _args_sizeon_fn[2094419] _args_foron_fn[2094369])
    }
    val errorExists[2110080]:bool[10] "temp"
    (2110085 'move' errorExists[2110080](2110082 '!=' error[1812512] nil[44]))
    if errorExists[2110080]
    {
      (1812518 '=' error_out[1812507] error[1812512])
      (1848408 call chpl__autoDestroy[1461530] path[1393277])
      gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
    }
    {
    }
    {
      val error[1812526]:Error[167938] "error variable" "temp"
      (1812535 'move' error[1812526] nil[44])
      (1393451 call ioerror[266141] error[1393269] msg[1393271] path[1393277] offset[1393298] error[1812526])
      val errorExists[2110088]:bool[10] "temp"
      (2110093 'move' errorExists[2110088](2110090 '!=' error[1812526] nil[44]))
      if errorExists[2110088]
      {
        gotoErrorHandling handler[1812527] handler[1812527]
      }
      label handler[1812527]
      const-val shouldHandleError[1812546]:bool[10] "temp"
      val errorExists[2110096]:bool[10] "temp"
      (2110101 'move' errorExists[2110096](2110098 '!=' error[1812526] nil[44]))
      (1812550 'move' shouldHandleError[1812546] errorExists[2110096])
      if shouldHandleError[1812546]
      {
        (1812542 '=' error_out[1812507] error[1812526])
        (1848411 call chpl__autoDestroy[1461530] path[1393277])
        gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
      }
    }
    (1848414 call chpl__autoDestroy[1461530] path[1393277])
    label _end_ch_ioerror[1812509]
    (1393460 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].lock[1066428](const  ref arg this[1066434]:_ref(channel(true,dynamic,false))[1060956], ref arg error_out[1810071]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1066440]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1066442 'move' call_tmp[1066440](1066445 call ENOERR[223654]))
    const-val err[1066446]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1066595]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1066819 call =[224133] init_coerce_tmp[1066595] call_tmp[1066440])
    (1066448 'move' err[1066446] init_coerce_tmp[1066595])
    ref call_tmp[1066453]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1066455 'move' call_tmp[1066453](1066458 call _channel_internal[1061789] this[1066434]))
    const-val call_tmp[1066461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1066602]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1066606 'move' coerce_tmp[1066602](1066604 'deref' call_tmp[1066453]))
    (1066463 'move' call_tmp[1066461](1066466 call is_c_nil[1062527] coerce_tmp[1066602]))
    const-val call_tmp[1066468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066470 'move' call_tmp[1066468] call_tmp[1066461])
    if call_tmp[1066468]
    {
      const-val call_tmp[1066477]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1066611]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1066617 'move' coerce_tmp[1066611](1066613 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832557]:owned SystemError[1000238] "temp"
      (1066485 call fromSyserr[1017113] coerce_tmp[1066611] "Operation attempted on an invalid channel" ret_tmp[1832557])
      (1832560 'move' call_tmp[1066477] ret_tmp[1832557])
      val call_tmp[1066488]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1066620]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832497]:owned Error[966458] "temp"
      (1066622 call _cast[1015747] call_tmp[1066477] ret_tmp[1832497])
      (1832500 'move' coerce_tmp[1066620] ret_tmp[1832497])
      const-val _formal_tmp_in_err[1066799]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1066803 'move' _formal_tmp_in_err[1066799] coerce_tmp[1066620])
      (1066490 'move' call_tmp[1066488](1066493 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1066799]))
      {
        val castedError[1810076]:Error[167938] "temp"
        (1810082 'move' castedError[1810076] call_tmp[1066488])
        (1810084 '=' error_out[1810071] castedError[1810076])
        gotoErrorHandlingReturn _endlock[1810073] _endlock[1810073]
      }
    }
    const-val call_tmp[1066570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066572 'move' call_tmp[1066570](1066575 call _cond_test[223981] err[1066446]))
    if call_tmp[1066570]
    {
      {
        val error[1810088]:Error[167938] "error variable" "temp"
        (1810097 'move' error[1810088] nil[44])
        (1066584 call _ch_ioerror[1062865] this[1066434] err[1066446] "in lock" error[1810088])
        val errorExists[2108872]:bool[10] "temp"
        (2108877 'move' errorExists[2108872](2108874 '!=' error[1810088] nil[44]))
        if errorExists[2108872]
        {
          gotoErrorHandling handler[1810089] handler[1810089]
        }
        label handler[1810089]
        const-val shouldHandleError[1810108]:bool[10] "temp"
        val errorExists[2108880]:bool[10] "temp"
        (2108885 'move' errorExists[2108880](2108882 '!=' error[1810088] nil[44]))
        (1810112 'move' shouldHandleError[1810108] errorExists[2108880])
        if shouldHandleError[1810108]
        {
          (1810104 '=' error_out[1810071] error[1810088])
          gotoErrorHandlingReturn _endlock[1810073] _endlock[1810073]
        }
      }
    }
    label _endlock[1810073]
    (1066591 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834].lock[1392801](const  ref arg this[1392807]:_ref(channel(true,dynamic,true))[1021834], ref arg error_out[1812462]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1392813]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1392815 'move' call_tmp[1392813](1392818 call ENOERR[223654]))
    val err[1392819]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1392968]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1393544 call =[224133] init_coerce_tmp[1392968] call_tmp[1392813])
    (1392821 'move' err[1392819] init_coerce_tmp[1392968])
    ref call_tmp[1392826]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1392828 'move' call_tmp[1392826](1392831 call _channel_internal[1023076] this[1392807]))
    const-val call_tmp[1392834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1392975]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1392979 'move' coerce_tmp[1392975](1392977 'deref' call_tmp[1392826]))
    (1392836 'move' call_tmp[1392834](1392839 call is_c_nil[1062527] coerce_tmp[1392975]))
    const-val call_tmp[1392841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1392843 'move' call_tmp[1392841] call_tmp[1392834])
    if call_tmp[1392841]
    {
      const-val call_tmp[1392850]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1392984]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1392990 'move' coerce_tmp[1392984](1392986 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832569]:owned SystemError[1000238] "temp"
      (1392858 call fromSyserr[1017113] coerce_tmp[1392984] "Operation attempted on an invalid channel" ret_tmp[1832569])
      (1832572 'move' call_tmp[1392850] ret_tmp[1832569])
      val call_tmp[1392861]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1392993]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832509]:owned Error[966458] "temp"
      (1392995 call _cast[1015747] call_tmp[1392850] ret_tmp[1832509])
      (1832512 'move' coerce_tmp[1392993] ret_tmp[1832509])
      const-val _formal_tmp_in_err[1393172]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1393176 'move' _formal_tmp_in_err[1393172] coerce_tmp[1392993])
      (1392863 'move' call_tmp[1392861](1392866 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1393172]))
      {
        val castedError[1812467]:Error[167938] "temp"
        (1812473 'move' castedError[1812467] call_tmp[1392861])
        (1812475 '=' error_out[1812462] castedError[1812467])
        gotoErrorHandlingReturn _endlock[1812464] _endlock[1812464]
      }
    }
    {
      const-val tmp[1392888]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[1392890]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1392892 'move' call_tmp[1392890](1392895 call home[1023042] this[1392807]))
      const-val call_tmp[1392898]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1393241]:BaseLocale[91201] "dead after last mention" "temp"
      (1393246 'move' _locale_tmp_[1393241](1393243 call _value[89981] call_tmp[1392890]))
      (1392900 'move' call_tmp[1392898](1392902 '_wide_get_locale' _locale_tmp_[1393241]))
      (1392904 'move' tmp[1392888] call_tmp[1392898])
      val rvfDerefTmp[2084345]:channel(true,dynamic,true)[1021825] "temp"
      (2084349 'move' rvfDerefTmp[2084345](2084347 'deref' this[1392807]))
      val isdirect[2094230]:bool[10] "temp"
      (2094235 'move' isdirect[2094230](2094232 call chpl_doDirectExecuteOn[187423] tmp[1392888]))
      if isdirect[2094230]
      {
        (2094239 call on_fn[1392911] rvfDerefTmp[2084345] err[1392819])
      }
      {
        val _args_foron_fn[2094257]:_class_localson_fn[2094247] "temp"
        (2094261 'move' _args_foron_fn[2094257](2094259 'stack allocate class' _class_localson_fn[2094247]))
        (2094263 '.=' _args_foron_fn[2094257] _0_tmp[2094250] tmp[1392888])
        (2094267 '.=' _args_foron_fn[2094257] _1_rvfDerefTmp[2094252] rvfDerefTmp[2084345])
        ref tmp[2094271]:syserr[223584] "temp"
        (2094275 'move' tmp[2094271](2094273 'set reference' err[1392819]))
        (2094277 '.=' _args_foron_fn[2094257] _2_err[2094254] tmp[2094271])
        val _args_vforon_fn[2094281]:c_void_ptr[149] "temp"
        (2094285 'move' _args_vforon_fn[2094281](2094283 'cast_to_void_star' _args_foron_fn[2094257]))
        val _args_sizeon_fn[2094287]:int(64)[13] "temp"
        (2094291 'move' _args_sizeon_fn[2094287](2094289 'sizeof_bundle' _class_localson_fn[2094247]))
        on(2094331 call wrapon_fn[2094293] tmp[1392888] _args_vforon_fn[2094281] _args_sizeon_fn[2094287] _args_foron_fn[2094257])
      }
      {
      }
    }
    const-val call_tmp[1392943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1392945 'move' call_tmp[1392943](1392948 call _cond_test[223981] err[1392819]))
    if call_tmp[1392943]
    {
      {
        val error[1812479]:Error[167938] "error variable" "temp"
        (1812488 'move' error[1812479] nil[44])
        (1392957 call _ch_ioerror[1393261] this[1392807] err[1392819] "in lock" error[1812479])
        val errorExists[2110064]:bool[10] "temp"
        (2110069 'move' errorExists[2110064](2110066 '!=' error[1812479] nil[44]))
        if errorExists[2110064]
        {
          gotoErrorHandling handler[1812480] handler[1812480]
        }
        label handler[1812480]
        const-val shouldHandleError[1812499]:bool[10] "temp"
        val errorExists[2110072]:bool[10] "temp"
        (2110077 'move' errorExists[2110072](2110074 '!=' error[1812479] nil[44]))
        (1812503 'move' shouldHandleError[1812499] errorExists[2110072])
        if shouldHandleError[1812499]
        {
          (1812495 '=' error_out[1812462] error[1812479])
          gotoErrorHandlingReturn _endlock[1812464] _endlock[1812464]
        }
      }
    }
    label _endlock[1812464]
    (1392964 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].unlock[1066825](const  ref arg this[1066831]:_ref(channel(true,dynamic,false))[1060956]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1066899 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834].unlock[1393550](const  ref arg this[1393556]:_ref(channel(true,dynamic,true))[1021834]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      const-val tmp[1393579]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      ref call_tmp[1393581]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1393583 'move' call_tmp[1393581](1393586 call home[1023042] this[1393556]))
      const-val call_tmp[1393589]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1393632]:BaseLocale[91201] "dead after last mention" "temp"
      (1393637 'move' _locale_tmp_[1393632](1393634 call _value[89981] call_tmp[1393581]))
      (1393591 'move' call_tmp[1393589](1393593 '_wide_get_locale' _locale_tmp_[1393632]))
      (1393595 'move' tmp[1393579] call_tmp[1393589])
      val rvfDerefTmp[2084373]:channel(true,dynamic,true)[1021825] "temp"
      (2084377 'move' rvfDerefTmp[2084373](2084375 'deref' this[1393556]))
      val isdirect[2094484]:bool[10] "temp"
      (2094489 'move' isdirect[2094484](2094486 call chpl_doDirectExecuteOn[187423] tmp[1393579]))
      if isdirect[2094484]
      {
        (2094493 call on_fn[1393602] rvfDerefTmp[2084373])
      }
      {
        val _args_foron_fn[2094508]:_class_localson_fn[2094500] "temp"
        (2094512 'move' _args_foron_fn[2094508](2094510 'stack allocate class' _class_localson_fn[2094500]))
        (2094514 '.=' _args_foron_fn[2094508] _0_tmp[2094503] tmp[1393579])
        (2094518 '.=' _args_foron_fn[2094508] _1_rvfDerefTmp[2094505] rvfDerefTmp[2084373])
        val _args_vforon_fn[2094522]:c_void_ptr[149] "temp"
        (2094526 'move' _args_vforon_fn[2094522](2094524 'cast_to_void_star' _args_foron_fn[2094508]))
        val _args_sizeon_fn[2094528]:int(64)[13] "temp"
        (2094532 'move' _args_sizeon_fn[2094528](2094530 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2094564 call wrapon_fn[2094534] tmp[1393579] _args_vforon_fn[2094522] _args_sizeon_fn[2094528] _args_foron_fn[2094508])
      }
      {
      }
    }
    (1393624 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].offset[1080148](const  ref arg this[1080154]:_ref(channel(true,dynamic,false))[1060956]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080160]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080169]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1080171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080299 'move' ret[1080169] 0)
    const-val tmp[1080182]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1080184]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1080186 'move' call_tmp[1080184](1080189 call home[1061755] this[1080154]))
    const-val call_tmp[1080192]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1080272]:BaseLocale[91201] "dead after last mention" "temp"
    (1080277 'move' _locale_tmp_[1080272](1080274 call _value[89981] call_tmp[1080184]))
    (1080194 'move' call_tmp[1080192](1080196 '_wide_get_locale' _locale_tmp_[1080272]))
    (1080198 'move' tmp[1080182] call_tmp[1080192])
    val rvfDerefTmp[2083811]:channel(true,dynamic,false)[1060947] "temp"
    (2083815 'move' rvfDerefTmp[2083811](2083813 'deref' this[1080154]))
    val isdirect[2090051]:bool[10] "temp"
    (2090056 'move' isdirect[2090051](2090053 call chpl_doDirectExecuteOn[187423] tmp[1080182]))
    if isdirect[2090051]
    {
      (2090060 call on_fn[1080205] rvfDerefTmp[2083811] ret[1080169])
    }
    {
      val _args_foron_fn[2090078]:_class_localson_fn[2090068] "temp"
      (2090082 'move' _args_foron_fn[2090078](2090080 'stack allocate class' _class_localson_fn[2090068]))
      (2090084 '.=' _args_foron_fn[2090078] _0_tmp[2090071] tmp[1080182])
      (2090088 '.=' _args_foron_fn[2090078] _1_rvfDerefTmp[2090073] rvfDerefTmp[2083811])
      ref tmp[2090092]:int(64)[13] "temp"
      (2090096 'move' tmp[2090092](2090094 'set reference' ret[1080169]))
      (2090098 '.=' _args_foron_fn[2090078] _2_ret[2090075] tmp[2090092])
      val _args_vforon_fn[2090102]:c_void_ptr[149] "temp"
      (2090106 'move' _args_vforon_fn[2090102](2090104 'cast_to_void_star' _args_foron_fn[2090078]))
      val _args_sizeon_fn[2090108]:int(64)[13] "temp"
      (2090112 'move' _args_sizeon_fn[2090108](2090110 'sizeof_bundle' _class_localson_fn[2090068]))
      on(2090152 call wrapon_fn[2090114] tmp[1080182] _args_vforon_fn[2090102] _args_sizeon_fn[2090108] _args_foron_fn[2090078])
    }
    {
    }
    val call_tmp[1080248]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080296 'move' ret[1080160] ret[1080169])
    gotoReturn _end_offset[1080264] _end_offset[1080264]
    label _end_offset[1080264]
    (1080266 return ret[1080160])
  }
  function _ref(channel(true,dynamic,false))[1060956].readWriteThisFromLocale[1066285](const  ref arg this[1066291]:_ref(channel(true,dynamic,false))[1060956], ref arg _retArg[1833377]:_ref(locale)[948844]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1066293]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066301]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1066303 'move' call_tmp[1066301](1066306 call _readWriteThisFromLocale[1066316] this[1066291]))
    (1066309 'move' ret[1066293](1833381 call chpl__initCopy[1461549] call_tmp[1066301]))
    (1833379 '=' _retArg[1833377] ret[1066293])
    (1833383 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834].readWriteThisFromLocale[1392728](const  ref arg this[1392734]:_ref(channel(true,dynamic,true))[1021834], ref arg _retArg[1838312]:_ref(locale)[948844]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1392736]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1392744]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1392746 'move' call_tmp[1392744](1392749 call _readWriteThisFromLocale[1392759] this[1392734]))
    (1392752 'move' ret[1392736](1838316 call chpl__initCopy[1461549] call_tmp[1392744]))
    (1838314 '=' _retArg[1838312] ret[1392736])
    (1838318 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].getLocaleOfIoRequest[1066211](const  ref arg this[1066217]:_ref(channel(true,dynamic,false))[1060956], ref arg _retArg[1833365]:_ref(locale)[948844]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1066219]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066227]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833371]:locale[28] "temp"
    (1066235 call readWriteThisFromLocale[1066285] this[1066217] ret_tmp[1833371])
    (1833374 'move' call_tmp[1066227] ret_tmp[1833371])
    val ret[1066236]:locale[28] "dead at end of block" "insert auto destroy"
    (1066238 'move' ret[1066236] call_tmp[1066227])
    const-val call_tmp[1066242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066244 'move' call_tmp[1066242](1066247 call ==[782781] ret[1066236] nilLocale[89939]))
    const-val call_tmp[1066250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066252 'move' call_tmp[1066250] call_tmp[1066242])
    if call_tmp[1066250]
    {
      const-val call_tmp[1066259]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830541]:locale[28] "temp"
      (1066264 call here[90435] ret_tmp[1830541])
      (1830544 'move' call_tmp[1066259] ret_tmp[1830541])
      (1066266 call =[90631] ret[1066236] call_tmp[1066259])
      (1844087 call chpl__autoDestroy[1461594] call_tmp[1066259])
    }
    (1066272 'move' ret[1066219] ret[1066236])
    gotoReturn _end_getLocaleOfIoRequest[1066280] _end_getLocaleOfIoRequest[1066280]
    label _end_getLocaleOfIoRequest[1066280]
    (1833367 '=' _retArg[1833365] ret[1066219])
    (1833369 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834].getLocaleOfIoRequest[1392654](const  ref arg this[1392660]:_ref(channel(true,dynamic,true))[1021834], ref arg _retArg[1838300]:_ref(locale)[948844]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1392662]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1392670]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1838306]:locale[28] "temp"
    (1392678 call readWriteThisFromLocale[1392728] this[1392660] ret_tmp[1838306])
    (1838309 'move' call_tmp[1392670] ret_tmp[1838306])
    val ret[1392679]:locale[28] "dead at end of block" "insert auto destroy"
    (1392681 'move' ret[1392679] call_tmp[1392670])
    const-val call_tmp[1392685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1392687 'move' call_tmp[1392685](1392690 call ==[782781] ret[1392679] nilLocale[89939]))
    const-val call_tmp[1392693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1392695 'move' call_tmp[1392693] call_tmp[1392685])
    if call_tmp[1392693]
    {
      const-val call_tmp[1392702]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1830637]:locale[28] "temp"
      (1392707 call here[90435] ret_tmp[1830637])
      (1830640 'move' call_tmp[1392702] ret_tmp[1830637])
      (1392709 call =[90631] ret[1392679] call_tmp[1392702])
      (1848405 call chpl__autoDestroy[1461594] call_tmp[1392702])
    }
    (1392715 'move' ret[1392662] ret[1392679])
    gotoReturn _end_getLocaleOfIoRequest[1392723] _end_getLocaleOfIoRequest[1392723]
    label _end_getLocaleOfIoRequest[1392723]
    (1838302 '=' _retArg[1838300] ret[1392662])
    (1838304 return _void[55])
  }
  function _ref(file)[948734].reader[1016561](const  ref arg this[1016567]:_ref(file)[948734], const in arg start[1016587]:int(64)[13], const in arg end[1016604]:int(64)[13], const in arg hints[1016610]:int(32)[95], const  ref arg style[1016617]:iostyle[231844], ref arg error_out[1809179]:Error[167938], ref arg _retArg[1832527]:_ref(channel(false,dynamic,true))[985636]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016625]:channel(false,dynamic,true)[985627] "dead after last mention" "RVV" "temp"
    val ret[1016644]:channel(false,dynamic,true)[985627] "dead at end of block" "insert auto destroy"
    val call_tmp[1016646]:channel(false,dynamic,true)[985627] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021741 call init[1017871] ret[1016644])
    const-val call_tmp[1016659]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1016661 'move' call_tmp[1016659](1016664 call ENOERR[223654]))
    val err[1016665]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1017612]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1021730 call =[224133] init_coerce_tmp[1017612] call_tmp[1016659])
    (1016667 'move' err[1016665] init_coerce_tmp[1017612])
    const-val tmp[1016672]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1016674]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1016676 'move' call_tmp[1016674](1016679 call home[886949] this[1016567]))
    const-val call_tmp[1016682]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017619]:BaseLocale[91201] "dead after last mention" "temp"
    (1017624 'move' _locale_tmp_[1017619](1017621 call _value[89981] call_tmp[1016674]))
    (1016684 'move' call_tmp[1016682](1016686 '_wide_get_locale' _locale_tmp_[1017619]))
    (1016688 'move' tmp[1016672] call_tmp[1016682])
    val error[1809182]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809184 'move' error[1809182] nil[44])
    val rvfDerefTmp[2083476]:iostyle[231844] "temp"
    (2083480 'move' rvfDerefTmp[2083476](2083478 'deref' style[1016617]))
    val rvfDerefTmp[2083484]:file[235580] "temp"
    (2083488 'move' rvfDerefTmp[2083484](2083486 'deref' this[1016567]))
    val isdirect[2087540]:bool[10] "temp"
    (2087545 'move' isdirect[2087540](2087542 call chpl_doDirectExecuteOn[187423] tmp[1016672]))
    if isdirect[2087540]
    {
      (2087549 call on_fn[1016695] err[1016665] start[1016587] end[1016604] rvfDerefTmp[2083476] rvfDerefTmp[2083484] ret[1016644] hints[1016610] error[1809182])
    }
    {
      val _args_foron_fn[2087585]:_class_localson_fn[2087563] "temp"
      (2087589 'move' _args_foron_fn[2087585](2087587 'stack allocate class' _class_localson_fn[2087563]))
      (2087591 '.=' _args_foron_fn[2087585] _0_tmp[2087566] tmp[1016672])
      ref tmp[2087595]:syserr[223584] "temp"
      (2087599 'move' tmp[2087595](2087597 'set reference' err[1016665]))
      (2087601 '.=' _args_foron_fn[2087585] _1_err[2087568] tmp[2087595])
      (2087605 '.=' _args_foron_fn[2087585] _2_start[2087570] start[1016587])
      (2087609 '.=' _args_foron_fn[2087585] _3_end[2087572] end[1016604])
      (2087613 '.=' _args_foron_fn[2087585] _4_rvfDerefTmp[2087574] rvfDerefTmp[2083476])
      (2087617 '.=' _args_foron_fn[2087585] _5_rvfDerefTmp[2087576] rvfDerefTmp[2083484])
      ref tmp[2087621]:channel(false,dynamic,true)[985627] "temp"
      (2087625 'move' tmp[2087621](2087623 'set reference' ret[1016644]))
      (2087627 '.=' _args_foron_fn[2087585] _6_ret[2087578] tmp[2087621])
      (2087631 '.=' _args_foron_fn[2087585] _7_hints[2087580] hints[1016610])
      ref tmp[2087635]:Error[167938] "temp"
      (2087639 'move' tmp[2087635](2087637 'set reference' error[1809182]))
      (2087641 '.=' _args_foron_fn[2087585] _8_error[2087582] tmp[2087635])
      val _args_vforon_fn[2087645]:c_void_ptr[149] "temp"
      (2087649 'move' _args_vforon_fn[2087645](2087647 'cast_to_void_star' _args_foron_fn[2087585]))
      val _args_sizeon_fn[2087651]:int(64)[13] "temp"
      (2087655 'move' _args_sizeon_fn[2087651](2087653 'sizeof_bundle' _class_localson_fn[2087563]))
      on(2087743 call wrapon_fn[2087657] tmp[1016672] _args_vforon_fn[2087645] _args_sizeon_fn[2087651] _args_foron_fn[2087585])
    }
    val errorExists[2108448]:bool[10] "temp"
    (2108453 'move' errorExists[2108448](2108450 '!=' error[1809182] nil[44]))
    if errorExists[2108448]
    {
      (1809188 '=' error_out[1809179] error[1809182])
      (1842782 call chpl__autoDestroy[1471159] ret[1016644])
      gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
    }
    {
    }
    const-val call_tmp[1016734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1016736 'move' call_tmp[1016734](1016739 call _cond_test[223981] err[1016665]))
    if call_tmp[1016734]
    {
      {
        val error[1809196]:Error[167938] "error variable" "temp"
        (1809205 'move' error[1809196] nil[44])
        const-val call_tmp[1016744]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831437]:string[26] "temp"
        (1016752 call tryGetPath[236364] this[1016567] ret_tmp[1831437])
        (1831440 'move' call_tmp[1016744] ret_tmp[1831437])
        (1016754 call ioerror[266250] err[1016665] "in file.reader" call_tmp[1016744] error[1809196])
        val errorExists[2108456]:bool[10] "temp"
        (2108461 'move' errorExists[2108456](2108458 '!=' error[1809196] nil[44]))
        if errorExists[2108456]
        {
          (1842785 call chpl__autoDestroy[1461530] call_tmp[1016744])
          gotoErrorHandling handler[1809197] handler[1809197]
        }
        (1842788 call chpl__autoDestroy[1461530] call_tmp[1016744])
        label handler[1809197]
        const-val shouldHandleError[1809216]:bool[10] "temp"
        val errorExists[2108464]:bool[10] "temp"
        (2108469 'move' errorExists[2108464](2108466 '!=' error[1809196] nil[44]))
        (1809220 'move' shouldHandleError[1809216] errorExists[2108464])
        if shouldHandleError[1809216]
        {
          (1809212 '=' error_out[1809179] error[1809196])
          (1842791 call chpl__autoDestroy[1471159] ret[1016644])
          gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
        }
      }
    }
    val call_tmp[1016762]:channel(false,dynamic,true)[985627] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021737 'move' ret[1016625] ret[1016644])
    gotoReturn _end_reader[1016780] _end_reader[1016780]
    label _end_reader[1016780]
    (1832529 '=' _retArg[1832527] ret[1016625])
    (1832531 return _void[55])
  }
  function _ref(file)[948734].reader_default_style[1017020](const  ref arg this[1017023]:_ref(file)[948734], ref arg error_out[1809268]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017026]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1017031]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1809273]:Error[167938] "error variable" "temp"
    (1809275 'move' error[1809273] nil[44])
    (1017038 'move' style[1017031](1017035 call _style[235960] this[1017023] error[1809273]))
    val errorExists[2108488]:bool[10] "temp"
    (2108493 'move' errorExists[2108488](2108490 '!=' error[1809273] nil[44]))
    if errorExists[2108488]
    {
      (1809279 '=' error_out[1809268] error[1809273])
      gotoErrorHandlingReturn _endreader_default_style[1809270] _endreader_default_style[1809270]
    }
    (1017583 'move' ret[1017026] style[1017031])
    label _endreader_default_style[1809270]
    (1017029 return ret[1017026])
  }
  function _ref(file)[948734].reader_default_hints[1016972](const  ref arg this[1016975]:_ref(file)[948734], ref arg error_out[1809264]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016978]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1016983]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1016987]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1016989]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1017007 'move' tmp[1016987] IOHINT_NONE[231411])
    (1017000 'move' hints[1016983] tmp[1016987])
    (1017003 'move' ret[1016978] hints[1016983])
    label _endreader_default_hints[1809266]
    (1016981 return ret[1016978])
  }
  function _ref(file)[948734].reader_default_end[1016908](const  ref arg this[1016911]:_ref(file)[948734], ref arg error_out[1809260]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016914]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1016919]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1016922]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1016932]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016934]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1016942 'move' tmp[1016932] 9223372036854775807)
    (1016945 'move' end[1016919] tmp[1016932])
    (1016958 'move' ret[1016914] end[1016919])
    label _endreader_default_end[1809262]
    (1016917 return ret[1016914])
  }
  function _ref(file)[948734].reader_default_start[1016861](const  ref arg this[1016864]:_ref(file)[948734], ref arg error_out[1809256]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1016867]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1016872]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1016876]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1016878]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1016886 'move' tmp[1016876] 0)
    (1016889 'move' start[1016872] tmp[1016876])
    (1016894 'move' ret[1016867] start[1016872])
    label _endreader_default_start[1809258]
    (1016870 return ret[1016867])
  }
  function _ref(file)[948734].reader[1080588](const  ref arg this[1080594]:_ref(file)[948734], const in arg start[1080614]:int(64)[13], const in arg end[1080631]:int(64)[13], const in arg hints[1080637]:int(32)[95], const  ref arg style[1080644]:iostyle[231844], ref arg error_out[1810522]:Error[167938], ref arg _retArg[1833443]:_ref(channel(false,dynamic,false))[1080691]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080652]:channel(false,dynamic,false)[1080682] "dead after last mention" "RVV" "temp"
    val ret[1080706]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    val call_tmp[1080708]:channel(false,dynamic,false)[1080682] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082083 call init[1081352] ret[1080706])
    const-val call_tmp[1080721]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1080723 'move' call_tmp[1080721](1080726 call ENOERR[223654]))
    val err[1080727]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1081093]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1082072 call =[224133] init_coerce_tmp[1081093] call_tmp[1080721])
    (1080729 'move' err[1080727] init_coerce_tmp[1081093])
    const-val tmp[1080734]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1080736]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1080738 'move' call_tmp[1080736](1080741 call home[886949] this[1080594]))
    const-val call_tmp[1080744]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081100]:BaseLocale[91201] "dead after last mention" "temp"
    (1081105 'move' _locale_tmp_[1081100](1081102 call _value[89981] call_tmp[1080736]))
    (1080746 'move' call_tmp[1080744](1080748 '_wide_get_locale' _locale_tmp_[1081100]))
    (1080750 'move' tmp[1080734] call_tmp[1080744])
    val error[1810525]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810527 'move' error[1810525] nil[44])
    val rvfDerefTmp[2083839]:iostyle[231844] "temp"
    (2083843 'move' rvfDerefTmp[2083839](2083841 'deref' style[1080644]))
    val rvfDerefTmp[2083847]:file[235580] "temp"
    (2083851 'move' rvfDerefTmp[2083847](2083849 'deref' this[1080594]))
    val isdirect[2090157]:bool[10] "temp"
    (2090162 'move' isdirect[2090157](2090159 call chpl_doDirectExecuteOn[187423] tmp[1080734]))
    if isdirect[2090157]
    {
      (2090166 call on_fn[1080757] start[1080614] ret[1080706] rvfDerefTmp[2083839] end[1080631] rvfDerefTmp[2083847] err[1080727] hints[1080637] error[1810525])
    }
    {
      val _args_foron_fn[2090202]:_class_localson_fn[2090180] "temp"
      (2090206 'move' _args_foron_fn[2090202](2090204 'stack allocate class' _class_localson_fn[2090180]))
      (2090208 '.=' _args_foron_fn[2090202] _0_tmp[2090183] tmp[1080734])
      (2090212 '.=' _args_foron_fn[2090202] _1_start[2090185] start[1080614])
      ref tmp[2090216]:channel(false,dynamic,false)[1080682] "temp"
      (2090220 'move' tmp[2090216](2090218 'set reference' ret[1080706]))
      (2090222 '.=' _args_foron_fn[2090202] _2_ret[2090187] tmp[2090216])
      (2090226 '.=' _args_foron_fn[2090202] _3_rvfDerefTmp[2090189] rvfDerefTmp[2083839])
      (2090230 '.=' _args_foron_fn[2090202] _4_end[2090191] end[1080631])
      (2090234 '.=' _args_foron_fn[2090202] _5_rvfDerefTmp[2090193] rvfDerefTmp[2083847])
      ref tmp[2090238]:syserr[223584] "temp"
      (2090242 'move' tmp[2090238](2090240 'set reference' err[1080727]))
      (2090244 '.=' _args_foron_fn[2090202] _6_err[2090195] tmp[2090238])
      (2090248 '.=' _args_foron_fn[2090202] _7_hints[2090197] hints[1080637])
      ref tmp[2090252]:Error[167938] "temp"
      (2090256 'move' tmp[2090252](2090254 'set reference' error[1810525]))
      (2090258 '.=' _args_foron_fn[2090202] _8_error[2090199] tmp[2090252])
      val _args_vforon_fn[2090262]:c_void_ptr[149] "temp"
      (2090266 'move' _args_vforon_fn[2090262](2090264 'cast_to_void_star' _args_foron_fn[2090202]))
      val _args_sizeon_fn[2090268]:int(64)[13] "temp"
      (2090272 'move' _args_sizeon_fn[2090268](2090270 'sizeof_bundle' _class_localson_fn[2090180]))
      on(2090360 call wrapon_fn[2090274] tmp[1080734] _args_vforon_fn[2090262] _args_sizeon_fn[2090268] _args_foron_fn[2090202])
    }
    val errorExists[2109080]:bool[10] "temp"
    (2109085 'move' errorExists[2109080](2109082 '!=' error[1810525] nil[44]))
    if errorExists[2109080]
    {
      (1810531 '=' error_out[1810522] error[1810525])
      (1844191 call chpl__autoDestroy[1540568] ret[1080706])
      gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
    }
    {
    }
    const-val call_tmp[1080796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080798 'move' call_tmp[1080796](1080801 call _cond_test[223981] err[1080727]))
    if call_tmp[1080796]
    {
      {
        val error[1810539]:Error[167938] "error variable" "temp"
        (1810548 'move' error[1810539] nil[44])
        const-val call_tmp[1080806]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831455]:string[26] "temp"
        (1080814 call tryGetPath[236364] this[1080594] ret_tmp[1831455])
        (1831458 'move' call_tmp[1080806] ret_tmp[1831455])
        (1080816 call ioerror[266250] err[1080727] "in file.reader" call_tmp[1080806] error[1810539])
        val errorExists[2109088]:bool[10] "temp"
        (2109093 'move' errorExists[2109088](2109090 '!=' error[1810539] nil[44]))
        if errorExists[2109088]
        {
          (1844194 call chpl__autoDestroy[1461530] call_tmp[1080806])
          gotoErrorHandling handler[1810540] handler[1810540]
        }
        (1844197 call chpl__autoDestroy[1461530] call_tmp[1080806])
        label handler[1810540]
        const-val shouldHandleError[1810559]:bool[10] "temp"
        val errorExists[2109096]:bool[10] "temp"
        (2109101 'move' errorExists[2109096](2109098 '!=' error[1810539] nil[44]))
        (1810563 'move' shouldHandleError[1810559] errorExists[2109096])
        if shouldHandleError[1810559]
        {
          (1810555 '=' error_out[1810522] error[1810539])
          (1844200 call chpl__autoDestroy[1540568] ret[1080706])
          gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
        }
      }
    }
    val call_tmp[1080824]:channel(false,dynamic,false)[1080682] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082079 'move' ret[1080652] ret[1080706])
    gotoReturn _end_reader[1080842] _end_reader[1080842]
    label _end_reader[1080842]
    (1833445 '=' _retArg[1833443] ret[1080652])
    (1833447 return _void[55])
  }
  function _ref(file)[948734].reader_default_style[1081044](const  ref arg this[1081047]:_ref(file)[948734], ref arg error_out[1810611]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081050]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1081055]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1810616]:Error[167938] "error variable" "temp"
    (1810618 'move' error[1810616] nil[44])
    (1081062 'move' style[1081055](1081059 call _style[235960] this[1081047] error[1810616]))
    val errorExists[2109120]:bool[10] "temp"
    (2109125 'move' errorExists[2109120](2109122 '!=' error[1810616] nil[44]))
    if errorExists[2109120]
    {
      (1810622 '=' error_out[1810611] error[1810616])
      gotoErrorHandlingReturn _endreader_default_style[1810613] _endreader_default_style[1810613]
    }
    (1081066 'move' ret[1081050] style[1081055])
    label _endreader_default_style[1810613]
    (1081053 return ret[1081050])
  }
  function _ref(file)[948734].reader_default_hints[1080997](const  ref arg this[1081000]:_ref(file)[948734], ref arg error_out[1810607]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081003]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1081008]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1081012]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1081014]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1081032 'move' tmp[1081012] IOHINT_NONE[231411])
    (1081025 'move' hints[1081008] tmp[1081012])
    (1081028 'move' ret[1081003] hints[1081008])
    label _endreader_default_hints[1810609]
    (1081006 return ret[1081003])
  }
  function _ref(file)[948734].reader_default_end[1080934](const  ref arg this[1080937]:_ref(file)[948734], ref arg error_out[1810603]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080940]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1080945]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1080948]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1080958]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1080960]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1080968 'move' tmp[1080958] 9223372036854775807)
    (1080971 'move' end[1080945] tmp[1080958])
    (1080984 'move' ret[1080940] end[1080945])
    label _endreader_default_end[1810605]
    (1080943 return ret[1080940])
  }
  function _ref(file)[948734].reader_default_start[1080888](const  ref arg this[1080891]:_ref(file)[948734], ref arg error_out[1810599]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1080894]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1080899]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1080903]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1080905]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1080913 'move' tmp[1080903] 0)
    (1080916 'move' start[1080899] tmp[1080903])
    (1080921 'move' ret[1080894] start[1080899])
    label _endreader_default_start[1810601]
    (1080897 return ret[1080894])
  }
  function _ref(file)[948734].writer[1022136](const  ref arg this[1022142]:_ref(file)[948734], const in arg start[1022162]:int(64)[13], const in arg end[1022179]:int(64)[13], const in arg hints[1022185]:int(32)[95], const  ref arg style[1022192]:iostyle[231844], ref arg error_out[1809295]:Error[167938], ref arg _retArg[1832593]:_ref(channel(true,dynamic,true))[1021834]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022200]:channel(true,dynamic,true)[1021825] "dead after last mention" "RVV" "temp"
    val ret[1022219]:channel(true,dynamic,true)[1021825] "dead at end of block" "insert auto destroy"
    val call_tmp[1022221]:channel(true,dynamic,true)[1021825] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023829 call init[1022907] ret[1022219])
    const-val call_tmp[1022234]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1022236 'move' call_tmp[1022234](1022239 call ENOERR[223654]))
    val err[1022240]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1022648]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1023818 call =[224133] init_coerce_tmp[1022648] call_tmp[1022234])
    (1022242 'move' err[1022240] init_coerce_tmp[1022648])
    const-val tmp[1022247]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1022249]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1022251 'move' call_tmp[1022249](1022254 call home[886949] this[1022142]))
    const-val call_tmp[1022257]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022655]:BaseLocale[91201] "dead after last mention" "temp"
    (1022660 'move' _locale_tmp_[1022655](1022657 call _value[89981] call_tmp[1022249]))
    (1022259 'move' call_tmp[1022257](1022261 '_wide_get_locale' _locale_tmp_[1022655]))
    (1022263 'move' tmp[1022247] call_tmp[1022257])
    val error[1809298]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809300 'move' error[1809298] nil[44])
    val rvfDerefTmp[2083553]:iostyle[231844] "temp"
    (2083557 'move' rvfDerefTmp[2083553](2083555 'deref' style[1022192]))
    val rvfDerefTmp[2083561]:file[235580] "temp"
    (2083565 'move' rvfDerefTmp[2083561](2083563 'deref' this[1022142]))
    val isdirect[2088223]:bool[10] "temp"
    (2088228 'move' isdirect[2088223](2088225 call chpl_doDirectExecuteOn[187423] tmp[1022247]))
    if isdirect[2088223]
    {
      (2088232 call on_fn[1022270] end[1022179] rvfDerefTmp[2083553] rvfDerefTmp[2083561] ret[1022219] hints[1022185] start[1022162] err[1022240] error[1809298])
    }
    {
      val _args_foron_fn[2088268]:_class_localson_fn[2088246] "temp"
      (2088272 'move' _args_foron_fn[2088268](2088270 'stack allocate class' _class_localson_fn[2088246]))
      (2088274 '.=' _args_foron_fn[2088268] _0_tmp[2088249] tmp[1022247])
      (2088278 '.=' _args_foron_fn[2088268] _1_end[2088251] end[1022179])
      (2088282 '.=' _args_foron_fn[2088268] _2_rvfDerefTmp[2088253] rvfDerefTmp[2083553])
      (2088286 '.=' _args_foron_fn[2088268] _3_rvfDerefTmp[2088255] rvfDerefTmp[2083561])
      ref tmp[2088290]:channel(true,dynamic,true)[1021825] "temp"
      (2088294 'move' tmp[2088290](2088292 'set reference' ret[1022219]))
      (2088296 '.=' _args_foron_fn[2088268] _4_ret[2088257] tmp[2088290])
      (2088300 '.=' _args_foron_fn[2088268] _5_hints[2088259] hints[1022185])
      (2088304 '.=' _args_foron_fn[2088268] _6_start[2088261] start[1022162])
      ref tmp[2088308]:syserr[223584] "temp"
      (2088312 'move' tmp[2088308](2088310 'set reference' err[1022240]))
      (2088314 '.=' _args_foron_fn[2088268] _7_err[2088263] tmp[2088308])
      ref tmp[2088318]:Error[167938] "temp"
      (2088322 'move' tmp[2088318](2088320 'set reference' error[1809298]))
      (2088324 '.=' _args_foron_fn[2088268] _8_error[2088265] tmp[2088318])
      val _args_vforon_fn[2088328]:c_void_ptr[149] "temp"
      (2088332 'move' _args_vforon_fn[2088328](2088330 'cast_to_void_star' _args_foron_fn[2088268]))
      val _args_sizeon_fn[2088334]:int(64)[13] "temp"
      (2088338 'move' _args_sizeon_fn[2088334](2088336 'sizeof_bundle' _class_localson_fn[2088246]))
      on(2088426 call wrapon_fn[2088340] tmp[1022247] _args_vforon_fn[2088328] _args_sizeon_fn[2088334] _args_foron_fn[2088268])
    }
    val errorExists[2108496]:bool[10] "temp"
    (2108501 'move' errorExists[2108496](2108498 '!=' error[1809298] nil[44]))
    if errorExists[2108496]
    {
      (1809304 '=' error_out[1809295] error[1809298])
      (1842805 call chpl__autoDestroy[1534138] ret[1022219])
      gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
    }
    {
    }
    const-val call_tmp[1022309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1022311 'move' call_tmp[1022309](1022314 call _cond_test[223981] err[1022240]))
    if call_tmp[1022309]
    {
      {
        val error[1809312]:Error[167938] "error variable" "temp"
        (1809321 'move' error[1809312] nil[44])
        const-val call_tmp[1022319]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831443]:string[26] "temp"
        (1022327 call tryGetPath[236364] this[1022142] ret_tmp[1831443])
        (1831446 'move' call_tmp[1022319] ret_tmp[1831443])
        (1022329 call ioerror[266250] err[1022240] "in file.writer" call_tmp[1022319] error[1809312])
        val errorExists[2108504]:bool[10] "temp"
        (2108509 'move' errorExists[2108504](2108506 '!=' error[1809312] nil[44]))
        if errorExists[2108504]
        {
          (1842808 call chpl__autoDestroy[1461530] call_tmp[1022319])
          gotoErrorHandling handler[1809313] handler[1809313]
        }
        (1842811 call chpl__autoDestroy[1461530] call_tmp[1022319])
        label handler[1809313]
        const-val shouldHandleError[1809332]:bool[10] "temp"
        val errorExists[2108512]:bool[10] "temp"
        (2108517 'move' errorExists[2108512](2108514 '!=' error[1809312] nil[44]))
        (1809336 'move' shouldHandleError[1809332] errorExists[2108512])
        if shouldHandleError[1809332]
        {
          (1809328 '=' error_out[1809295] error[1809312])
          (1842814 call chpl__autoDestroy[1534138] ret[1022219])
          gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
        }
      }
    }
    val call_tmp[1022337]:channel(true,dynamic,true)[1021825] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1023825 'move' ret[1022200] ret[1022219])
    gotoReturn _end_writer[1022355] _end_writer[1022355]
    label _end_writer[1022355]
    (1832595 '=' _retArg[1832593] ret[1022200])
    (1832597 return _void[55])
  }
  function _ref(file)[948734].writer_default_style[1022598](const  ref arg this[1022601]:_ref(file)[948734], ref arg error_out[1809384]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022604]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1022609]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1809389]:Error[167938] "error variable" "temp"
    (1809391 'move' error[1809389] nil[44])
    (1022616 'move' style[1022609](1022613 call _style[235960] this[1022601] error[1809389]))
    val errorExists[2108536]:bool[10] "temp"
    (2108541 'move' errorExists[2108536](2108538 '!=' error[1809389] nil[44]))
    if errorExists[2108536]
    {
      (1809395 '=' error_out[1809384] error[1809389])
      gotoErrorHandlingReturn _endwriter_default_style[1809386] _endwriter_default_style[1809386]
    }
    (1022620 'move' ret[1022604] style[1022609])
    label _endwriter_default_style[1809386]
    (1022607 return ret[1022604])
  }
  function _ref(file)[948734].writer_default_hints[1022547](const  ref arg this[1022550]:_ref(file)[948734], ref arg error_out[1809380]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022553]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1022558]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022562]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1022564]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1022572 'move' tmp[1022562](1022583 'cast' int(32)[95] 0))
    (1022575 'move' hints[1022558] tmp[1022562])
    (1022580 'move' ret[1022553] hints[1022558])
    label _endwriter_default_hints[1809382]
    (1022556 return ret[1022553])
  }
  function _ref(file)[948734].writer_default_end[1022483](const  ref arg this[1022486]:_ref(file)[948734], ref arg error_out[1809376]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022489]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1022494]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1022497]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1022507]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022509]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022517 'move' tmp[1022507] 9223372036854775807)
    (1022520 'move' end[1022494] tmp[1022507])
    (1022533 'move' ret[1022489] end[1022494])
    label _endwriter_default_end[1809378]
    (1022492 return ret[1022489])
  }
  function _ref(file)[948734].writer_default_start[1022436](const  ref arg this[1022439]:_ref(file)[948734], ref arg error_out[1809372]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022442]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1022447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022451]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022453]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022461 'move' tmp[1022451] 0)
    (1022464 'move' start[1022447] tmp[1022451])
    (1022469 'move' ret[1022442] start[1022447])
    label _endwriter_default_start[1809374]
    (1022445 return ret[1022442])
  }
  function _ref(file)[948734].writer[1060853](const  ref arg this[1060859]:_ref(file)[948734], const in arg start[1060879]:int(64)[13], const in arg end[1060896]:int(64)[13], const in arg hints[1060902]:int(32)[95], const  ref arg style[1060909]:iostyle[231844], ref arg error_out[1809726]:Error[167938], ref arg _retArg[1833041]:_ref(channel(true,dynamic,false))[1060956]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1060917]:channel(true,dynamic,false)[1060947] "dead after last mention" "RVV" "temp"
    val ret[1060971]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    val call_tmp[1060973]:channel(true,dynamic,false)[1060947] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062351 call init[1061620] ret[1060971])
    const-val call_tmp[1060986]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1060988 'move' call_tmp[1060986](1060991 call ENOERR[223654]))
    val err[1060992]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061361]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1062340 call =[224133] init_coerce_tmp[1061361] call_tmp[1060986])
    (1060994 'move' err[1060992] init_coerce_tmp[1061361])
    const-val tmp[1060999]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1061001]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1061003 'move' call_tmp[1061001](1061006 call home[886949] this[1060859]))
    const-val call_tmp[1061009]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061368]:BaseLocale[91201] "dead after last mention" "temp"
    (1061373 'move' _locale_tmp_[1061368](1061370 call _value[89981] call_tmp[1061001]))
    (1061011 'move' call_tmp[1061009](1061013 '_wide_get_locale' _locale_tmp_[1061368]))
    (1061015 'move' tmp[1060999] call_tmp[1061009])
    val error[1809729]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809731 'move' error[1809729] nil[44])
    val rvfDerefTmp[2083661]:iostyle[231844] "temp"
    (2083665 'move' rvfDerefTmp[2083661](2083663 'deref' style[1060909]))
    val rvfDerefTmp[2083669]:file[235580] "temp"
    (2083673 'move' rvfDerefTmp[2083669](2083671 'deref' this[1060859]))
    val isdirect[2088936]:bool[10] "temp"
    (2088941 'move' isdirect[2088936](2088938 call chpl_doDirectExecuteOn[187423] tmp[1060999]))
    if isdirect[2088936]
    {
      (2088945 call on_fn[1061022] start[1060879] ret[1060971] end[1060896] rvfDerefTmp[2083661] rvfDerefTmp[2083669] err[1060992] hints[1060902] error[1809729])
    }
    {
      val _args_foron_fn[2088981]:_class_localson_fn[2088959] "temp"
      (2088985 'move' _args_foron_fn[2088981](2088983 'stack allocate class' _class_localson_fn[2088959]))
      (2088987 '.=' _args_foron_fn[2088981] _0_tmp[2088962] tmp[1060999])
      (2088991 '.=' _args_foron_fn[2088981] _1_start[2088964] start[1060879])
      ref tmp[2088995]:channel(true,dynamic,false)[1060947] "temp"
      (2088999 'move' tmp[2088995](2088997 'set reference' ret[1060971]))
      (2089001 '.=' _args_foron_fn[2088981] _2_ret[2088966] tmp[2088995])
      (2089005 '.=' _args_foron_fn[2088981] _3_end[2088968] end[1060896])
      (2089009 '.=' _args_foron_fn[2088981] _4_rvfDerefTmp[2088970] rvfDerefTmp[2083661])
      (2089013 '.=' _args_foron_fn[2088981] _5_rvfDerefTmp[2088972] rvfDerefTmp[2083669])
      ref tmp[2089017]:syserr[223584] "temp"
      (2089021 'move' tmp[2089017](2089019 'set reference' err[1060992]))
      (2089023 '.=' _args_foron_fn[2088981] _6_err[2088974] tmp[2089017])
      (2089027 '.=' _args_foron_fn[2088981] _7_hints[2088976] hints[1060902])
      ref tmp[2089031]:Error[167938] "temp"
      (2089035 'move' tmp[2089031](2089033 'set reference' error[1809729]))
      (2089037 '.=' _args_foron_fn[2088981] _8_error[2088978] tmp[2089031])
      val _args_vforon_fn[2089041]:c_void_ptr[149] "temp"
      (2089045 'move' _args_vforon_fn[2089041](2089043 'cast_to_void_star' _args_foron_fn[2088981]))
      val _args_sizeon_fn[2089047]:int(64)[13] "temp"
      (2089051 'move' _args_sizeon_fn[2089047](2089049 'sizeof_bundle' _class_localson_fn[2088959]))
      on(2089139 call wrapon_fn[2089053] tmp[1060999] _args_vforon_fn[2089041] _args_sizeon_fn[2089047] _args_foron_fn[2088981])
    }
    val errorExists[2108720]:bool[10] "temp"
    (2108725 'move' errorExists[2108720](2108722 '!=' error[1809729] nil[44]))
    if errorExists[2108720]
    {
      (1809735 '=' error_out[1809726] error[1809729])
      (1844030 call chpl__autoDestroy[1536314] ret[1060971])
      gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
    }
    {
    }
    const-val call_tmp[1061061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1061063 'move' call_tmp[1061061](1061066 call _cond_test[223981] err[1060992]))
    if call_tmp[1061061]
    {
      {
        val error[1809743]:Error[167938] "error variable" "temp"
        (1809752 'move' error[1809743] nil[44])
        const-val call_tmp[1061071]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1831449]:string[26] "temp"
        (1061079 call tryGetPath[236364] this[1060859] ret_tmp[1831449])
        (1831452 'move' call_tmp[1061071] ret_tmp[1831449])
        (1061081 call ioerror[266250] err[1060992] "in file.writer" call_tmp[1061071] error[1809743])
        val errorExists[2108728]:bool[10] "temp"
        (2108733 'move' errorExists[2108728](2108730 '!=' error[1809743] nil[44]))
        if errorExists[2108728]
        {
          (1844033 call chpl__autoDestroy[1461530] call_tmp[1061071])
          gotoErrorHandling handler[1809744] handler[1809744]
        }
        (1844036 call chpl__autoDestroy[1461530] call_tmp[1061071])
        label handler[1809744]
        const-val shouldHandleError[1809763]:bool[10] "temp"
        val errorExists[2108736]:bool[10] "temp"
        (2108741 'move' errorExists[2108736](2108738 '!=' error[1809743] nil[44]))
        (1809767 'move' shouldHandleError[1809763] errorExists[2108736])
        if shouldHandleError[1809763]
        {
          (1809759 '=' error_out[1809726] error[1809743])
          (1844039 call chpl__autoDestroy[1536314] ret[1060971])
          gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
        }
      }
    }
    val call_tmp[1061089]:channel(true,dynamic,false)[1060947] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062347 'move' ret[1060917] ret[1060971])
    gotoReturn _end_writer[1061107] _end_writer[1061107]
    label _end_writer[1061107]
    (1833043 '=' _retArg[1833041] ret[1060917])
    (1833045 return _void[55])
  }
  function _ref(file)[948734].writer_default_style[1061312](const  ref arg this[1061315]:_ref(file)[948734], ref arg error_out[1809815]:Error[167938]) : iostyle[231844] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061318]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1061323]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1809820]:Error[167938] "error variable" "temp"
    (1809822 'move' error[1809820] nil[44])
    (1061330 'move' style[1061323](1061327 call _style[235960] this[1061315] error[1809820]))
    val errorExists[2108760]:bool[10] "temp"
    (2108765 'move' errorExists[2108760](2108762 '!=' error[1809820] nil[44]))
    if errorExists[2108760]
    {
      (1809826 '=' error_out[1809815] error[1809820])
      gotoErrorHandlingReturn _endwriter_default_style[1809817] _endwriter_default_style[1809817]
    }
    (1061334 'move' ret[1061318] style[1061323])
    label _endwriter_default_style[1809817]
    (1061321 return ret[1061318])
  }
  function _ref(file)[948734].writer_default_hints[1061262](const  ref arg this[1061265]:_ref(file)[948734], ref arg error_out[1809811]:Error[167938]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061268]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1061273]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061277]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1061279]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1061287 'move' tmp[1061277](1061298 'cast' int(32)[95] 0))
    (1061290 'move' hints[1061273] tmp[1061277])
    (1061295 'move' ret[1061268] hints[1061273])
    label _endwriter_default_hints[1809813]
    (1061271 return ret[1061268])
  }
  function _ref(file)[948734].writer_default_end[1061199](const  ref arg this[1061202]:_ref(file)[948734], ref arg error_out[1809807]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061205]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1061210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1061213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1061223]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061225]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061233 'move' tmp[1061223] 9223372036854775807)
    (1061236 'move' end[1061210] tmp[1061223])
    (1061249 'move' ret[1061205] end[1061210])
    label _endwriter_default_end[1809809]
    (1061208 return ret[1061205])
  }
  function _ref(file)[948734].writer_default_start[1061153](const  ref arg this[1061156]:_ref(file)[948734], ref arg error_out[1809803]:Error[167938]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061159]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1061164]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061168]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061170]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061178 'move' tmp[1061168] 0)
    (1061181 'move' start[1061164] tmp[1061168])
    (1061186 'move' ret[1061159] start[1061164])
    label _endwriter_default_start[1809805]
    (1061162 return ret[1061159])
  }
  function _write_text_internal[1078760](const in arg _channel_internal[1078762]:qio_channel_ptr_t[231465], const in arg x[1078764]:int(64)[13]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1078778]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1078788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1078888]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1078910]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1078923]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1078936]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1079555]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079561 'move' coerce_tmp[1079555](1079557 'cast' int(32)[95] 0))
        const-val coerce_tmp[1079563]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079569 'move' coerce_tmp[1079563](1079565 'cast' uint(64)[115] 8))
        const-val coerce_tmp[1079571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079577 'move' coerce_tmp[1079571](1079573 'cast' int(32)[95] 1))
        (1078938 'move' call_tmp[1078936](1078941 call qio_channel_print_int[1079525] coerce_tmp[1079555] _channel_internal[1078762] x[1078764] coerce_tmp[1079563] coerce_tmp[1079571]))
        (1079581 'move' ret[1078778] call_tmp[1078936])
        gotoReturn _end__write_text_internal[1079508] _end__write_text_internal[1079508]
      }
    }
    label _end__write_text_internal[1079508]
    (1079510 return ret[1078778])
  }
  function _write_text_internal[1172844](const in arg _channel_internal[1172846]:qio_channel_ptr_t[231465], const  ref arg x[1172848]:string[26]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1172862]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1172872]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1172972]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1173039]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1173092]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1173145]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1173231]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                const-val call_tmp[1173254]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1829545]:string[26] "temp"
                (1173262 call localize[32886] x[1172848] ret_tmp[1829545])
                (1829548 'move' call_tmp[1173254] ret_tmp[1829545])
                const local_x[1173263]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1173265 'move' local_x[1173263] call_tmp[1173254])
                ref call_tmp[1173269]:_ref(bool)[937199] "dead after last mention" "maybe param" "reference to a const" "temp"
                (1173271 'move' call_tmp[1173269](1173274 call hasEscapes[758016] local_x[1173263]))
                const-val call_tmp[1173277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1173622]:bool[10] "dead after last mention" "const" "temp"
                (1173624 'move' tmp[1173622](1173626 'deref' call_tmp[1173269]))
                (1173279 'move' call_tmp[1173277] tmp[1173622])
                if call_tmp[1173277]
                {
                  (1173643 call =[224133] ret[1172862] EILSEQ[224444])
                  (1845887 call chpl__autoDestroy[1461530] local_x[1173263])
                  gotoReturn _end__write_text_internal[1173592] _end__write_text_internal[1173592]
                }
                const-val call_tmp[1173294]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173296 'move' call_tmp[1173294](1173302 call c_str[32932] local_x[1173263]))
                const-val call_tmp[1173303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173305 'move' call_tmp[1173303](1173308 call numBytes[32807] local_x[1173263]))
                const-val call_tmp[1173311]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173313 'move' call_tmp[1173311] call_tmp[1173303])
                const-val call_tmp[1173319]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1173631]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1173637 'move' coerce_tmp[1173631](1173633 'cast' int(32)[95] 0))
                (1173321 'move' call_tmp[1173319](1173324 call qio_channel_print_string[234837] coerce_tmp[1173631] _channel_internal[1172846] call_tmp[1173294] call_tmp[1173311]))
                (1173650 'move' ret[1172862] call_tmp[1173319])
                (1845890 call chpl__autoDestroy[1461530] local_x[1173263])
                gotoReturn _end__write_text_internal[1173592] _end__write_text_internal[1173592]
              }
            }
          }
        }
      }
    }
    label _end__write_text_internal[1173592]
    (1173594 return ret[1172862])
  }
  function _write_text_internal[1427778](const in arg _channel_internal[1427780]:qio_channel_ptr_t[231465], const in arg x[1427782]:real(64)[16]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1427796]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1427806]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1427906]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1427973]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1427995]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[1428008]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1428571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1428577 'move' coerce_tmp[1428571](1428573 'cast' int(32)[95] 0))
          const-val coerce_tmp[1428579]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1428585 'move' coerce_tmp[1428579](1428581 'cast' uint(64)[115] 8))
          (1428010 'move' call_tmp[1428008](1428013 call qio_channel_print_float[1428545] coerce_tmp[1428571] _channel_internal[1427780] x[1427782] coerce_tmp[1428579]))
          (1428589 'move' ret[1427796] call_tmp[1428008])
          gotoReturn _end__write_text_internal[1428526] _end__write_text_internal[1428526]
        }
      }
    }
    label _end__write_text_internal[1428526]
    (1428528 return ret[1427796])
  }
  function _write_binary_internal[1073798](const in arg _channel_internal[1073800]:qio_channel_ptr_t[231465], const in arg x[1073804]:int(64)[13]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1073818]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1073830]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1073938]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1073960]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1074022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1074028]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1074078]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1074084]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1074134]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1074140]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1074190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1074196]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1074246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1074252]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1074284]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1075603]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1075609 'move' coerce_tmp[1075603](1075605 'cast' int(32)[95] 0))
                    (1074286 'move' call_tmp[1074284](1074289 call qio_channel_write_int64[234050] coerce_tmp[1075603] 2 _channel_internal[1073800] x[1073804]))
                    (1075613 'move' ret[1073818] call_tmp[1074284])
                    gotoReturn _end__write_binary_internal[1075302] _end__write_binary_internal[1075302]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1075302]
    (1075304 return ret[1073818])
  }
  function _write_binary_internal[1075626](const in arg _channel_internal[1075628]:qio_channel_ptr_t[231465], const in arg x[1075632]:int(64)[13]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1075646]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1075658]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1075766]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1075788]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1075850]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1075856]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1075906]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1075912]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1075962]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1075968]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1076018]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1076024]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1076074]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1076080]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1076112]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1077172]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1077178 'move' coerce_tmp[1077172](1077174 'cast' int(32)[95] 0))
                    (1076114 'move' call_tmp[1076112](1076117 call qio_channel_write_int64[234050] coerce_tmp[1077172] 3 _channel_internal[1075628] x[1075632]))
                    (1077182 'move' ret[1075646] call_tmp[1076112])
                    gotoReturn _end__write_binary_internal[1077130] _end__write_binary_internal[1077130]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1077130]
    (1077132 return ret[1075646])
  }
  function _write_binary_internal[1077194](const in arg _channel_internal[1077196]:qio_channel_ptr_t[231465], const in arg x[1077200]:int(64)[13]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1077214]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1077226]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1077334]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1077356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1077418]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1077424]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1077474]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1077480]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1077530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1077536]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1077586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1077592]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1077642]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1077648]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1077680]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1078738]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1078744 'move' coerce_tmp[1078738](1078740 'cast' int(32)[95] 0))
                    (1077682 'move' call_tmp[1077680](1077685 call qio_channel_write_int64[234050] coerce_tmp[1078738] 1 _channel_internal[1077196] x[1077200]))
                    (1078748 'move' ret[1077214] call_tmp[1077680])
                    gotoReturn _end__write_binary_internal[1078698] _end__write_binary_internal[1078698]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1078698]
    (1078700 return ret[1077214])
  }
  function _write_binary_internal[1168125](const in arg _channel_internal[1168127]:qio_channel_ptr_t[231465], const  ref arg x[1168131]:string[26]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1168145]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1168157]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1168265]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1168711]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1169008]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1169297]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1169320]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1829527]:string[26] "temp"
              (1169328 call localize[32886] x[1168131] ret_tmp[1829527])
              (1829530 'move' call_tmp[1169320] ret_tmp[1829527])
              val local_x[1169329]:string[26] "dead at end of block" "insert auto destroy"
              (1169331 'move' local_x[1169329] call_tmp[1169320])
              ref call_tmp[1169335]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
              (1169337 'move' call_tmp[1169335](1169340 call hasEscapes[758016] local_x[1169329]))
              const-val call_tmp[1169343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1169655]:bool[10] "dead after last mention" "const" "temp"
              (1169657 'move' tmp[1169655](1169659 'deref' call_tmp[1169335]))
              (1169345 'move' call_tmp[1169343] tmp[1169655])
              if call_tmp[1169343]
              {
                (1169680 call =[224133] ret[1168145] EILSEQ[224444])
                (1845869 call chpl__autoDestroy[1461530] local_x[1169329])
                gotoReturn _end__write_binary_internal[1169629] _end__write_binary_internal[1169629]
              }
              const-val call_tmp[1169368]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169370 'move' call_tmp[1169368](1169373 call qio_channel_str_style[233087] _channel_internal[1168127]))
              const-val call_tmp[1169375]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169377 'move' call_tmp[1169375](1169383 call c_str[32932] local_x[1169329]))
              const-val call_tmp[1169384]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169386 'move' call_tmp[1169384](1169389 call numBytes[32807] local_x[1169329]))
              const-val call_tmp[1169392]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169394 'move' call_tmp[1169392] call_tmp[1169384])
              const-val call_tmp[1169400]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1169668]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1169674 'move' coerce_tmp[1169668](1169670 'cast' int(32)[95] 0))
              (1169402 'move' call_tmp[1169400](1169405 call qio_channel_write_string[234389] coerce_tmp[1169668] 2 call_tmp[1169368] _channel_internal[1168127] call_tmp[1169375] call_tmp[1169392]))
              (1169687 'move' ret[1168145] call_tmp[1169400])
              (1845872 call chpl__autoDestroy[1461530] local_x[1169329])
              gotoReturn _end__write_binary_internal[1169629] _end__write_binary_internal[1169629]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1169629]
    (1169631 return ret[1168145])
  }
  function _write_binary_internal[1169700](const in arg _channel_internal[1169702]:qio_channel_ptr_t[231465], const  ref arg x[1169706]:string[26]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1169720]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1169732]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1169840]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1170286]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1170583]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1170872]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1170895]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1829533]:string[26] "temp"
              (1170903 call localize[32886] x[1169706] ret_tmp[1829533])
              (1829536 'move' call_tmp[1170895] ret_tmp[1829533])
              val local_x[1170904]:string[26] "dead at end of block" "insert auto destroy"
              (1170906 'move' local_x[1170904] call_tmp[1170895])
              ref call_tmp[1170910]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
              (1170912 'move' call_tmp[1170910](1170915 call hasEscapes[758016] local_x[1170904]))
              const-val call_tmp[1170918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1171230]:bool[10] "dead after last mention" "const" "temp"
              (1171232 'move' tmp[1171230](1171234 'deref' call_tmp[1170910]))
              (1170920 'move' call_tmp[1170918] tmp[1171230])
              if call_tmp[1170918]
              {
                (1171253 call =[224133] ret[1169720] EILSEQ[224444])
                (1845875 call chpl__autoDestroy[1461530] local_x[1170904])
                gotoReturn _end__write_binary_internal[1171204] _end__write_binary_internal[1171204]
              }
              const-val call_tmp[1170943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170945 'move' call_tmp[1170943](1170948 call qio_channel_str_style[233087] _channel_internal[1169702]))
              const-val call_tmp[1170950]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170952 'move' call_tmp[1170950](1170958 call c_str[32932] local_x[1170904]))
              const-val call_tmp[1170959]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170961 'move' call_tmp[1170959](1170964 call numBytes[32807] local_x[1170904]))
              const-val call_tmp[1170967]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1170969 'move' call_tmp[1170967] call_tmp[1170959])
              const-val call_tmp[1170975]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1171241]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1171247 'move' coerce_tmp[1171241](1171243 'cast' int(32)[95] 0))
              (1170977 'move' call_tmp[1170975](1170980 call qio_channel_write_string[234389] coerce_tmp[1171241] 3 call_tmp[1170943] _channel_internal[1169702] call_tmp[1170950] call_tmp[1170967]))
              (1171260 'move' ret[1169720] call_tmp[1170975])
              (1845878 call chpl__autoDestroy[1461530] local_x[1170904])
              gotoReturn _end__write_binary_internal[1171204] _end__write_binary_internal[1171204]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1171204]
    (1171206 return ret[1169720])
  }
  function _write_binary_internal[1171272](const in arg _channel_internal[1171274]:qio_channel_ptr_t[231465], const  ref arg x[1171278]:string[26]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1171292]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1171304]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1171412]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1171858]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1172155]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1172444]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1172467]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1829539]:string[26] "temp"
              (1172475 call localize[32886] x[1171278] ret_tmp[1829539])
              (1829542 'move' call_tmp[1172467] ret_tmp[1829539])
              val local_x[1172476]:string[26] "dead at end of block" "insert auto destroy"
              (1172478 'move' local_x[1172476] call_tmp[1172467])
              ref call_tmp[1172482]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
              (1172484 'move' call_tmp[1172482](1172487 call hasEscapes[758016] local_x[1172476]))
              const-val call_tmp[1172490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1172802]:bool[10] "dead after last mention" "const" "temp"
              (1172804 'move' tmp[1172802](1172806 'deref' call_tmp[1172482]))
              (1172492 'move' call_tmp[1172490] tmp[1172802])
              if call_tmp[1172490]
              {
                (1172825 call =[224133] ret[1171292] EILSEQ[224444])
                (1845881 call chpl__autoDestroy[1461530] local_x[1172476])
                gotoReturn _end__write_binary_internal[1172776] _end__write_binary_internal[1172776]
              }
              const-val call_tmp[1172515]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172517 'move' call_tmp[1172515](1172520 call qio_channel_str_style[233087] _channel_internal[1171274]))
              const-val call_tmp[1172522]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172524 'move' call_tmp[1172522](1172530 call c_str[32932] local_x[1172476]))
              const-val call_tmp[1172531]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172533 'move' call_tmp[1172531](1172536 call numBytes[32807] local_x[1172476]))
              const-val call_tmp[1172539]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172541 'move' call_tmp[1172539] call_tmp[1172531])
              const-val call_tmp[1172547]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1172813]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1172819 'move' coerce_tmp[1172813](1172815 'cast' int(32)[95] 0))
              (1172549 'move' call_tmp[1172547](1172552 call qio_channel_write_string[234389] coerce_tmp[1172813] 1 call_tmp[1172515] _channel_internal[1171274] call_tmp[1172522] call_tmp[1172539]))
              (1172832 'move' ret[1171292] call_tmp[1172547])
              (1845884 call chpl__autoDestroy[1461530] local_x[1172476])
              gotoReturn _end__write_binary_internal[1172776] _end__write_binary_internal[1172776]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1172776]
    (1172778 return ret[1171292])
  }
  function _write_binary_internal[1423083](const in arg _channel_internal[1423085]:qio_channel_ptr_t[231465], const in arg x[1423089]:real(64)[16]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1423103]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1423115]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1423223]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1423669]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1423693]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1423699]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1423751]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1423757]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1423820]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1423826]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1423927]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1424627]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1424633 'move' coerce_tmp[1424627](1424629 'cast' int(32)[95] 0))
              (1423929 'move' call_tmp[1423927](1423932 call qio_channel_write_float64[234266] coerce_tmp[1424627] 2 _channel_internal[1423085] x[1423089]))
              (1424637 'move' ret[1423103] call_tmp[1423927])
              gotoReturn _end__write_binary_internal[1424587] _end__write_binary_internal[1424587]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1424587]
    (1424589 return ret[1423103])
  }
  function _write_binary_internal[1424650](const in arg _channel_internal[1424652]:qio_channel_ptr_t[231465], const in arg x[1424656]:real(64)[16]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1424670]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1424682]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1424790]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1425236]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1425260]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1425266]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1425318]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1425324]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1425387]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1425393]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1425494]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1426192]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1426198 'move' coerce_tmp[1426192](1426194 'cast' int(32)[95] 0))
              (1425496 'move' call_tmp[1425494](1425499 call qio_channel_write_float64[234266] coerce_tmp[1426192] 3 _channel_internal[1424652] x[1424656]))
              (1426202 'move' ret[1424670] call_tmp[1425494])
              gotoReturn _end__write_binary_internal[1426154] _end__write_binary_internal[1426154]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1426154]
    (1426156 return ret[1424670])
  }
  function _write_binary_internal[1426214](const in arg _channel_internal[1426216]:qio_channel_ptr_t[231465], const in arg x[1426220]:real(64)[16]) : syserr[223584] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1426234]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1426246]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1426354]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1426800]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1426824]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1426830]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1426882]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1426888]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1426951]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1426957]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1427058]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1427756]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1427762 'move' coerce_tmp[1427756](1427758 'cast' int(32)[95] 0))
              (1427060 'move' call_tmp[1427058](1427063 call qio_channel_write_float64[234266] coerce_tmp[1427756] 1 _channel_internal[1426216] x[1426220]))
              (1427766 'move' ret[1426234] call_tmp[1427058])
              gotoReturn _end__write_binary_internal[1427718] _end__write_binary_internal[1427718]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1427718]
    (1427720 return ret[1426234])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1079612](const  ref arg this[1079618]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1079622]:int(64)[13], ref arg _retArg[1833403]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079626]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079638]:string[26] "dead at end of block" "insert auto destroy"
    (1079640 'move' result[1079638](1833407 call chpl__initCopy[981348] "while "))
    (1079677 call +=[38797] result[1079638] "writing ")
    val call_tmp[1079682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079697 call +=[38797] result[1079638] "int(64)")
    {
      val tmp[1079703]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1079831 'move' ret[1079626] result[1079638])
    gotoReturn _end__constructIoErrorMsg[1079807] _end__constructIoErrorMsg[1079807]
    label _end__constructIoErrorMsg[1079807]
    (1833405 '=' _retArg[1833403] ret[1079626])
    (1833409 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1079905](const  ref arg this[1079911]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1079915]:byteIndex[28170], ref arg _retArg[1833417]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079919]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079931]:string[26] "dead at end of block" "insert auto destroy"
    (1079933 'move' result[1079931](1833421 call chpl__initCopy[981348] "while "))
    (1079970 call +=[38797] result[1079931] "writing ")
    val call_tmp[1079975]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079990 call +=[38797] result[1079931] "byteIndex")
    {
      val tmp[1079996]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1080138 'move' ret[1079919] result[1079931])
    gotoReturn _end__constructIoErrorMsg[1080100] _end__constructIoErrorMsg[1080100]
    label _end__constructIoErrorMsg[1080100]
    (1833419 '=' _retArg[1833417] ret[1079919])
    (1833423 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1173679](const  ref arg this[1173685]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1173689]:string[26], ref arg _retArg[1834636]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173693]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173705]:string[26] "dead at end of block" "insert auto destroy"
    (1173707 'move' result[1173705](1834640 call chpl__initCopy[981348] "while "))
    (1173744 call +=[38797] result[1173705] "writing ")
    val call_tmp[1173749]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173764 call +=[38797] result[1173705] "string")
    {
      val tmp[1173770]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1173898 'move' ret[1173693] result[1173705])
    gotoReturn _end__constructIoErrorMsg[1173874] _end__constructIoErrorMsg[1173874]
    label _end__constructIoErrorMsg[1173874]
    (1834638 '=' _retArg[1834636] ret[1173693])
    (1834642 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1175397](const  ref arg this[1175403]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1175407]:codepointIndex[28274], ref arg _retArg[1834650]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175411]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175423]:string[26] "dead at end of block" "insert auto destroy"
    (1175425 'move' result[1175423](1834654 call chpl__initCopy[981348] "while "))
    (1175462 call +=[38797] result[1175423] "writing ")
    val call_tmp[1175467]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175482 call +=[38797] result[1175423] "codepointIndex")
    {
      val tmp[1175488]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1175632 'move' ret[1175411] result[1175423])
    gotoReturn _end__constructIoErrorMsg[1175592] _end__constructIoErrorMsg[1175592]
    label _end__constructIoErrorMsg[1175592]
    (1834652 '=' _retArg[1834650] ret[1175411])
    (1834656 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1411634](const  ref arg this[1411640]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1411644]:ioLiteral[238753], ref arg _retArg[1838382]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1411648]:string[26] "dead after last mention" "RVV" "temp"
    val result[1411660]:string[26] "dead at end of block" "insert auto destroy"
    (1411662 'move' result[1411660](1838386 call chpl__initCopy[981348] "while "))
    (1411699 call +=[38797] result[1411660] "writing ")
    val call_tmp[1411704]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1411719 call +=[38797] result[1411660] "ioLiteral")
    {
      val tmp[1411725]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        {
          const-val call_tmp[1411788]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1831527]:string[26] "temp"
          (1411793 call _cast[238766] x[1411644] ret_tmp[1831527])
          (1831530 'move' call_tmp[1411788] ret_tmp[1831527])
          const-val call_tmp[1411796]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1830319]:string[26] "temp"
          (1411801 call +[38342] " \"" call_tmp[1411788] ret_tmp[1830319])
          (1830322 'move' call_tmp[1411796] ret_tmp[1830319])
          const-val call_tmp[1411804]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1830325]:string[26] "temp"
          (1411809 call +[38342] call_tmp[1411796] "\"" ret_tmp[1830325])
          (1830328 'move' call_tmp[1411804] ret_tmp[1830325])
          (1411813 call +=[38797] result[1411660] call_tmp[1411804])
          (1848766 call chpl__autoDestroy[1461530] call_tmp[1411804])
          (1848769 call chpl__autoDestroy[1461530] call_tmp[1411796])
          (1848772 call chpl__autoDestroy[1461530] call_tmp[1411788])
        }
      }
    }
    (1411923 'move' ret[1411648] result[1411660])
    gotoReturn _end__constructIoErrorMsg[1411829] _end__constructIoErrorMsg[1411829]
    label _end__constructIoErrorMsg[1411829]
    (1838384 '=' _retArg[1838382] ret[1411648])
    (1838388 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._constructIoErrorMsg[1428618](const  ref arg this[1428624]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1428628]:real(64)[16], ref arg _retArg[1838436]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1428632]:string[26] "dead after last mention" "RVV" "temp"
    val result[1428644]:string[26] "dead at end of block" "insert auto destroy"
    (1428646 'move' result[1428644](1838440 call chpl__initCopy[981348] "while "))
    (1428683 call +=[38797] result[1428644] "writing ")
    val call_tmp[1428688]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1428703 call +=[38797] result[1428644] "real(64)")
    {
      val tmp[1428709]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1428853 'move' ret[1428632] result[1428644])
    gotoReturn _end__constructIoErrorMsg[1428813] _end__constructIoErrorMsg[1428813]
    label _end__constructIoErrorMsg[1428813]
    (1838438 '=' _retArg[1838436] ret[1428632])
    (1838442 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._constructIoErrorMsg[1429191](const  ref arg this[1429197]:_ref(channel(true,dynamic,true))[1021834], const  ref arg x[1429201]:[domain(1,int(64),false)] real(64)[1365840], ref arg _retArg[1838450]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1429205]:string[26] "dead after last mention" "RVV" "temp"
    val result[1429217]:string[26] "dead at end of block" "insert auto destroy"
    (1429219 'move' result[1429217](1838454 call chpl__initCopy[981348] "while "))
    (1429256 call +=[38797] result[1429217] "writing ")
    const-val call_tmp[1429261]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429263 'move' call_tmp[1429261](1429395 call chpl__convertValueToRuntimeType[1393963] x[1429201]))
    (1429276 call +=[38797] result[1429217] "[domain(1,int(64),false)] real(64)")
    {
      const-val tmp[1429282]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
      (1429284 'move' tmp[1429282](1429416 call chpl__convertValueToRuntimeType[1393963] x[1429201]))
      {
      }
    }
    (1429432 'move' ret[1429205] result[1429217])
    gotoReturn _end__constructIoErrorMsg[1429386] _end__constructIoErrorMsg[1429386]
    label _end__constructIoErrorMsg[1429386]
    (1838452 '=' _retArg[1838450] ret[1429205])
    (1838456 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._constructIoErrorMsg[1432375](const  ref arg this[1432381]:_ref(channel(true,dynamic,true))[1021834], const  ref arg x[1432385]:ioNewline[238701], ref arg _retArg[1838464]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1432389]:string[26] "dead after last mention" "RVV" "temp"
    val result[1432401]:string[26] "dead at end of block" "insert auto destroy"
    (1432403 'move' result[1432401](1838468 call chpl__initCopy[981348] "while "))
    (1432440 call +=[38797] result[1432401] "writing ")
    val call_tmp[1432445]:ioNewline[238701] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1432460 call +=[38797] result[1432401] "ioNewline")
    {
      val tmp[1432466]:ioNewline[238701] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        (1432498 call +=[38797] result[1432401] " newline")
      }
    }
    (1432655 'move' ret[1432389] result[1432401])
    gotoReturn _end__constructIoErrorMsg[1432570] _end__constructIoErrorMsg[1432570]
    label _end__constructIoErrorMsg[1432570]
    (1838466 '=' _retArg[1838464] ret[1432389])
    (1838470 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._constructIoErrorMsg[1433585](const  ref arg this[1433591]:_ref(channel(true,dynamic,true))[1021834], const in arg x[1433595]:int(64)[13], ref arg _retArg[1838490]:_ref(string)[937939]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1433599]:string[26] "dead after last mention" "RVV" "temp"
    val result[1433611]:string[26] "dead at end of block" "insert auto destroy"
    (1433613 'move' result[1433611](1838494 call chpl__initCopy[981348] "while "))
    (1433650 call +=[38797] result[1433611] "writing ")
    val call_tmp[1433655]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1433670 call +=[38797] result[1433611] "int(64)")
    {
      val tmp[1433676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1433804 'move' ret[1433599] result[1433611])
    gotoReturn _end__constructIoErrorMsg[1433780] _end__constructIoErrorMsg[1433780]
    label _end__constructIoErrorMsg[1433780]
    (1838492 '=' _retArg[1838490] ret[1433599])
    (1838496 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1067012](const  ref arg this[1067018]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1067022]:byteIndex[28170], const  ref arg loc[1067024]:locale[28], ref arg error_out[1810116]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1067034]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1067036 'move' call_tmp[1067034](1067039 call _channel_internal[1061789] this[1067018]))
    const-val call_tmp[1067042]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1068361]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068365 'move' coerce_tmp[1068361](1068363 'deref' call_tmp[1067034]))
    val error[1810121]:Error[167938] "error variable" "temp"
    (1810123 'move' error[1810121] nil[44])
    (1067044 'move' call_tmp[1067042](1067047 call _write_one_internal[1067935] coerce_tmp[1068361] x[1067022] loc[1067024] error[1810121]))
    val errorExists[2108888]:bool[10] "temp"
    (2108893 'move' errorExists[2108888](2108890 '!=' error[1810121] nil[44]))
    if errorExists[2108888]
    {
      (1810127 '=' error_out[1810116] error[1810121])
      gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
    }
    const-val err[1067052]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1067054 'move' err[1067052](1079900 call chpl__initCopy[964485] call_tmp[1067042]))
    const-val call_tmp[1067058]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067060 'move' call_tmp[1067058](1067063 call ENOERR[223654]))
    const-val call_tmp[1067064]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067066 'move' call_tmp[1067064](1067069 call !=[223854] err[1067052] call_tmp[1067058]))
    const-val call_tmp[1067072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067074 'move' call_tmp[1067072] call_tmp[1067064])
    if call_tmp[1067072]
    {
      const-val call_tmp[1067081]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833411]:string[26] "temp"
      (1067089 call _constructIoErrorMsg[1079905] this[1067018] x[1067022] ret_tmp[1833411])
      (1833414 'move' call_tmp[1067081] ret_tmp[1833411])
      val msg[1067092]:string[26] "dead at end of block" "insert auto destroy"
      (1067094 'move' msg[1067092] call_tmp[1067081])
      const-val call_tmp[1067098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067100 'move' call_tmp[1067098](1067103 call ==[223699] err[1067052] EILSEQ[224444]))
      const-val call_tmp[1067106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067108 'move' call_tmp[1067106] call_tmp[1067098])
      if call_tmp[1067106]
      {
        const-val call_tmp[1067123]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830007]:string[26] "temp"
        (1067128 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067092] ret_tmp[1830007])
        (1830010 'move' call_tmp[1067123] ret_tmp[1830007])
        (1067132 call =[38269] msg[1067092] call_tmp[1067123])
        (1844091 call chpl__autoDestroy[1461530] call_tmp[1067123])
      }
      {
        val error[1810135]:Error[167938] "error variable" "temp"
        (1810144 'move' error[1810135] nil[44])
        (1067144 call _ch_ioerror[1062865] this[1067018] err[1067052] msg[1067092] error[1810135])
        val errorExists[2108896]:bool[10] "temp"
        (2108901 'move' errorExists[2108896](2108898 '!=' error[1810135] nil[44]))
        if errorExists[2108896]
        {
          gotoErrorHandling handler[1810136] handler[1810136]
        }
        label handler[1810136]
        const-val shouldHandleError[1810155]:bool[10] "temp"
        val errorExists[2108904]:bool[10] "temp"
        (2108909 'move' errorExists[2108904](2108906 '!=' error[1810135] nil[44]))
        (1810159 'move' shouldHandleError[1810155] errorExists[2108904])
        if shouldHandleError[1810155]
        {
          (1810151 '=' error_out[1810116] error[1810135])
          (1844094 call chpl__autoDestroy[1461530] msg[1067092])
          gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
        }
      }
      (1844098 call chpl__autoDestroy[1461530] msg[1067092])
    }
    label _end_writeOne[1810118]
    (1067152 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1068937](const  ref arg this[1068943]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1068947]:int(64)[13], const  ref arg loc[1068949]:locale[28], ref arg error_out[1810353]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1068959]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1068961 'move' call_tmp[1068959](1068964 call _channel_internal[1061789] this[1068943]))
    const-val call_tmp[1068967]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070205]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070209 'move' coerce_tmp[1070205](1070207 'deref' call_tmp[1068959]))
    val error[1810358]:Error[167938] "error variable" "temp"
    (1810360 'move' error[1810358] nil[44])
    (1068969 'move' call_tmp[1068967](1068972 call _write_one_internal[1069081] coerce_tmp[1070205] x[1068947] loc[1068949] error[1810358]))
    val errorExists[2109008]:bool[10] "temp"
    (2109013 'move' errorExists[2109008](2109010 '!=' error[1810358] nil[44]))
    if errorExists[2109008]
    {
      (1810364 '=' error_out[1810353] error[1810358])
      gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
    }
    const-val err[1068977]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1068979 'move' err[1068977](1079605 call chpl__initCopy[964485] call_tmp[1068967]))
    const-val call_tmp[1068983]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068985 'move' call_tmp[1068983](1068988 call ENOERR[223654]))
    const-val call_tmp[1068989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068991 'move' call_tmp[1068989](1068994 call !=[223854] err[1068977] call_tmp[1068983]))
    const-val call_tmp[1068997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1068999 'move' call_tmp[1068997] call_tmp[1068989])
    if call_tmp[1068997]
    {
      const-val call_tmp[1069006]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833397]:string[26] "temp"
      (1069014 call _constructIoErrorMsg[1079612] this[1068943] x[1068947] ret_tmp[1833397])
      (1833400 'move' call_tmp[1069006] ret_tmp[1833397])
      val msg[1069017]:string[26] "dead at end of block" "insert auto destroy"
      (1069019 'move' msg[1069017] call_tmp[1069006])
      const-val call_tmp[1069023]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069025 'move' call_tmp[1069023](1069028 call ==[223699] err[1068977] EILSEQ[224444]))
      const-val call_tmp[1069031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069033 'move' call_tmp[1069031] call_tmp[1069023])
      if call_tmp[1069031]
      {
        const-val call_tmp[1069048]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830013]:string[26] "temp"
        (1069053 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069017] ret_tmp[1830013])
        (1830016 'move' call_tmp[1069048] ret_tmp[1830013])
        (1069057 call =[38269] msg[1069017] call_tmp[1069048])
        (1844157 call chpl__autoDestroy[1461530] call_tmp[1069048])
      }
      {
        val error[1810372]:Error[167938] "error variable" "temp"
        (1810381 'move' error[1810372] nil[44])
        (1069069 call _ch_ioerror[1062865] this[1068943] err[1068977] msg[1069017] error[1810372])
        val errorExists[2109016]:bool[10] "temp"
        (2109021 'move' errorExists[2109016](2109018 '!=' error[1810372] nil[44]))
        if errorExists[2109016]
        {
          gotoErrorHandling handler[1810373] handler[1810373]
        }
        label handler[1810373]
        const-val shouldHandleError[1810392]:bool[10] "temp"
        val errorExists[2109024]:bool[10] "temp"
        (2109029 'move' errorExists[2109024](2109026 '!=' error[1810372] nil[44]))
        (1810396 'move' shouldHandleError[1810392] errorExists[2109024])
        if shouldHandleError[1810392]
        {
          (1810388 '=' error_out[1810353] error[1810372])
          (1844160 call chpl__autoDestroy[1461530] msg[1069017])
          gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
        }
      }
      (1844164 call chpl__autoDestroy[1461530] msg[1069017])
    }
    label _end_writeOne[1810355]
    (1069077 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1165160](const  ref arg this[1165166]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1165170]:string[26], const  ref arg loc[1165172]:locale[28], ref arg error_out[1811151]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1165182]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1165184 'move' call_tmp[1165182](1165187 call _channel_internal[1061789] this[1165166]))
    const-val call_tmp[1165190]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1168030]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168034 'move' coerce_tmp[1168030](1168032 'deref' call_tmp[1165182]))
    val error[1811156]:Error[167938] "error variable" "temp"
    (1811158 'move' error[1811156] nil[44])
    (1165192 'move' call_tmp[1165190](1165195 call _write_one_internal[1165304] coerce_tmp[1168030] x[1165170] loc[1165172] error[1811156]))
    val errorExists[2109400]:bool[10] "temp"
    (2109405 'move' errorExists[2109400](2109402 '!=' error[1811156] nil[44]))
    if errorExists[2109400]
    {
      (1811162 '=' error_out[1811151] error[1811156])
      gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
    }
    const-val err[1165200]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1165202 'move' err[1165200](1173674 call chpl__initCopy[964485] call_tmp[1165190]))
    const-val call_tmp[1165206]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165208 'move' call_tmp[1165206](1165211 call ENOERR[223654]))
    const-val call_tmp[1165212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165214 'move' call_tmp[1165212](1165217 call !=[223854] err[1165200] call_tmp[1165206]))
    const-val call_tmp[1165220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165222 'move' call_tmp[1165220] call_tmp[1165212])
    if call_tmp[1165220]
    {
      const-val call_tmp[1165229]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834630]:string[26] "temp"
      (1165237 call _constructIoErrorMsg[1173679] this[1165166] x[1165170] ret_tmp[1834630])
      (1834633 'move' call_tmp[1165229] ret_tmp[1834630])
      val msg[1165240]:string[26] "dead at end of block" "insert auto destroy"
      (1165242 'move' msg[1165240] call_tmp[1165229])
      const-val call_tmp[1165246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165248 'move' call_tmp[1165246](1165251 call ==[223699] err[1165200] EILSEQ[224444]))
      const-val call_tmp[1165254]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165256 'move' call_tmp[1165254] call_tmp[1165246])
      if call_tmp[1165254]
      {
        const-val call_tmp[1165271]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830097]:string[26] "temp"
        (1165276 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165240] ret_tmp[1830097])
        (1830100 'move' call_tmp[1165271] ret_tmp[1830097])
        (1165280 call =[38269] msg[1165240] call_tmp[1165271])
        (1845859 call chpl__autoDestroy[1461530] call_tmp[1165271])
      }
      {
        val error[1811170]:Error[167938] "error variable" "temp"
        (1811179 'move' error[1811170] nil[44])
        (1165292 call _ch_ioerror[1062865] this[1165166] err[1165200] msg[1165240] error[1811170])
        val errorExists[2109408]:bool[10] "temp"
        (2109413 'move' errorExists[2109408](2109410 '!=' error[1811170] nil[44]))
        if errorExists[2109408]
        {
          gotoErrorHandling handler[1811171] handler[1811171]
        }
        label handler[1811171]
        const-val shouldHandleError[1811190]:bool[10] "temp"
        val errorExists[2109416]:bool[10] "temp"
        (2109421 'move' errorExists[2109416](2109418 '!=' error[1811170] nil[44]))
        (1811194 'move' shouldHandleError[1811190] errorExists[2109416])
        if shouldHandleError[1811190]
        {
          (1811186 '=' error_out[1811151] error[1811170])
          (1845862 call chpl__autoDestroy[1461530] msg[1165240])
          gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
        }
      }
      (1845866 call chpl__autoDestroy[1461530] msg[1165240])
    }
    label _end_writeOne[1811153]
    (1165300 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1173913](const  ref arg this[1173919]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1173923]:codepointIndex[28274], const  ref arg loc[1173925]:locale[28], ref arg error_out[1811215]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1173935]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1173937 'move' call_tmp[1173935](1173940 call _channel_internal[1061789] this[1173919]))
    const-val call_tmp[1173943]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1175210]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175214 'move' coerce_tmp[1175210](1175212 'deref' call_tmp[1173935]))
    val error[1811220]:Error[167938] "error variable" "temp"
    (1811222 'move' error[1811220] nil[44])
    (1173945 'move' call_tmp[1173943](1173948 call _write_one_internal[1174784] coerce_tmp[1175210] x[1173923] loc[1173925] error[1811220]))
    val errorExists[2109432]:bool[10] "temp"
    (2109437 'move' errorExists[2109432](2109434 '!=' error[1811220] nil[44]))
    if errorExists[2109432]
    {
      (1811226 '=' error_out[1811215] error[1811220])
      gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
    }
    const-val err[1173953]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1173955 'move' err[1173953](1175392 call chpl__initCopy[964485] call_tmp[1173943]))
    const-val call_tmp[1173959]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173961 'move' call_tmp[1173959](1173964 call ENOERR[223654]))
    const-val call_tmp[1173965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173967 'move' call_tmp[1173965](1173970 call !=[223854] err[1173953] call_tmp[1173959]))
    const-val call_tmp[1173973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1173975 'move' call_tmp[1173973] call_tmp[1173965])
    if call_tmp[1173973]
    {
      const-val call_tmp[1173982]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834644]:string[26] "temp"
      (1173990 call _constructIoErrorMsg[1175397] this[1173919] x[1173923] ret_tmp[1834644])
      (1834647 'move' call_tmp[1173982] ret_tmp[1834644])
      val msg[1173993]:string[26] "dead at end of block" "insert auto destroy"
      (1173995 'move' msg[1173993] call_tmp[1173982])
      const-val call_tmp[1173999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174001 'move' call_tmp[1173999](1174004 call ==[223699] err[1173953] EILSEQ[224444]))
      const-val call_tmp[1174007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174009 'move' call_tmp[1174007] call_tmp[1173999])
      if call_tmp[1174007]
      {
        const-val call_tmp[1174024]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830103]:string[26] "temp"
        (1174029 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1173993] ret_tmp[1830103])
        (1830106 'move' call_tmp[1174024] ret_tmp[1830103])
        (1174033 call =[38269] msg[1173993] call_tmp[1174024])
        (1845894 call chpl__autoDestroy[1461530] call_tmp[1174024])
      }
      {
        val error[1811234]:Error[167938] "error variable" "temp"
        (1811243 'move' error[1811234] nil[44])
        (1174045 call _ch_ioerror[1062865] this[1173919] err[1173953] msg[1173993] error[1811234])
        val errorExists[2109440]:bool[10] "temp"
        (2109445 'move' errorExists[2109440](2109442 '!=' error[1811234] nil[44]))
        if errorExists[2109440]
        {
          gotoErrorHandling handler[1811235] handler[1811235]
        }
        label handler[1811235]
        const-val shouldHandleError[1811254]:bool[10] "temp"
        val errorExists[2109448]:bool[10] "temp"
        (2109453 'move' errorExists[2109448](2109450 '!=' error[1811234] nil[44]))
        (1811258 'move' shouldHandleError[1811254] errorExists[2109448])
        if shouldHandleError[1811254]
        {
          (1811250 '=' error_out[1811215] error[1811234])
          (1845897 call chpl__autoDestroy[1461530] msg[1173993])
          gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
        }
      }
      (1845901 call chpl__autoDestroy[1461530] msg[1173993])
    }
    label _end_writeOne[1811217]
    (1174053 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._writeOne[1393788](const  ref arg this[1393794]:_ref(channel(true,dynamic,true))[1021834], const  ref arg x[1393798]:[domain(1,int(64),false)] real(64)[1365840], const  ref arg loc[1393800]:locale[28], ref arg error_out[1812588]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1393810]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1393812 'move' call_tmp[1393810](1393815 call _channel_internal[1023076] this[1393794]))
    const-val call_tmp[1393818]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1396717]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1396721 'move' coerce_tmp[1396717](1396719 'deref' call_tmp[1393810]))
    val error[1812593]:Error[167938] "error variable" "temp"
    (1812595 'move' error[1812593] nil[44])
    (1393820 'move' call_tmp[1393818](1393823 call _write_one_internal[1396291] coerce_tmp[1396717] x[1393798] loc[1393800] error[1812593]))
    val errorExists[2110120]:bool[10] "temp"
    (2110125 'move' errorExists[2110120](2110122 '!=' error[1812593] nil[44]))
    if errorExists[2110120]
    {
      (1812599 '=' error_out[1812588] error[1812593])
      gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
    }
    const-val err[1393828]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1393830 'move' err[1393828](1429186 call chpl__initCopy[964485] call_tmp[1393818]))
    const-val call_tmp[1393834]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393836 'move' call_tmp[1393834](1393839 call ENOERR[223654]))
    const-val call_tmp[1393840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393842 'move' call_tmp[1393840](1393845 call !=[223854] err[1393828] call_tmp[1393834]))
    const-val call_tmp[1393848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1393850 'move' call_tmp[1393848] call_tmp[1393840])
    if call_tmp[1393848]
    {
      const-val call_tmp[1393857]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838444]:string[26] "temp"
      (1393865 call _constructIoErrorMsg[1429191] this[1393794] x[1393798] ret_tmp[1838444])
      (1838447 'move' call_tmp[1393857] ret_tmp[1838444])
      val msg[1393868]:string[26] "dead at end of block" "insert auto destroy"
      (1393870 'move' msg[1393868] call_tmp[1393857])
      const-val call_tmp[1393874]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1393876 'move' call_tmp[1393874](1393879 call ==[223699] err[1393828] EILSEQ[224444]))
      const-val call_tmp[1393882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1393884 'move' call_tmp[1393882] call_tmp[1393874])
      if call_tmp[1393882]
      {
        const-val call_tmp[1393899]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830301]:string[26] "temp"
        (1393904 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1393868] ret_tmp[1830301])
        (1830304 'move' call_tmp[1393899] ret_tmp[1830301])
        (1393908 call =[38269] msg[1393868] call_tmp[1393899])
        (1848422 call chpl__autoDestroy[1461530] call_tmp[1393899])
      }
      {
        val error[1812607]:Error[167938] "error variable" "temp"
        (1812616 'move' error[1812607] nil[44])
        (1393920 call _ch_ioerror[1393261] this[1393794] err[1393828] msg[1393868] error[1812607])
        val errorExists[2110128]:bool[10] "temp"
        (2110133 'move' errorExists[2110128](2110130 '!=' error[1812607] nil[44]))
        if errorExists[2110128]
        {
          gotoErrorHandling handler[1812608] handler[1812608]
        }
        label handler[1812608]
        const-val shouldHandleError[1812627]:bool[10] "temp"
        val errorExists[2110136]:bool[10] "temp"
        (2110141 'move' errorExists[2110136](2110138 '!=' error[1812607] nil[44]))
        (1812631 'move' shouldHandleError[1812627] errorExists[2110136])
        if shouldHandleError[1812627]
        {
          (1812623 '=' error_out[1812588] error[1812607])
          (1848425 call chpl__autoDestroy[1461530] msg[1393868])
          gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
        }
      }
      (1848429 call chpl__autoDestroy[1461530] msg[1393868])
    }
    label _end_writeOne[1812590]
    (1393928 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1408673](const  ref arg this[1408679]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1408683]:ioLiteral[238753], const  ref arg loc[1408685]:locale[28], ref arg error_out[1813269]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1408695]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1408697 'move' call_tmp[1408695](1408700 call _channel_internal[1061789] this[1408679]))
    const-val call_tmp[1408703]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1411546]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1411550 'move' coerce_tmp[1411546](1411548 'deref' call_tmp[1408695]))
    val error[1813274]:Error[167938] "error variable" "temp"
    (1813276 'move' error[1813274] nil[44])
    (1408705 'move' call_tmp[1408703](1408708 call _write_one_internal[1408817] coerce_tmp[1411546] x[1408683] loc[1408685] error[1813274]))
    val errorExists[2110400]:bool[10] "temp"
    (2110405 'move' errorExists[2110400](2110402 '!=' error[1813274] nil[44]))
    if errorExists[2110400]
    {
      (1813280 '=' error_out[1813269] error[1813274])
      gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
    }
    const-val err[1408713]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1408715 'move' err[1408713](1411629 call chpl__initCopy[964485] call_tmp[1408703]))
    const-val call_tmp[1408719]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408721 'move' call_tmp[1408719](1408724 call ENOERR[223654]))
    const-val call_tmp[1408725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408727 'move' call_tmp[1408725](1408730 call !=[223854] err[1408713] call_tmp[1408719]))
    const-val call_tmp[1408733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1408735 'move' call_tmp[1408733] call_tmp[1408725])
    if call_tmp[1408733]
    {
      const-val call_tmp[1408742]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838376]:string[26] "temp"
      (1408750 call _constructIoErrorMsg[1411634] this[1408679] x[1408683] ret_tmp[1838376])
      (1838379 'move' call_tmp[1408742] ret_tmp[1838376])
      val msg[1408753]:string[26] "dead at end of block" "insert auto destroy"
      (1408755 'move' msg[1408753] call_tmp[1408742])
      const-val call_tmp[1408759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1408761 'move' call_tmp[1408759](1408764 call ==[223699] err[1408713] EILSEQ[224444]))
      const-val call_tmp[1408767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1408769 'move' call_tmp[1408767] call_tmp[1408759])
      if call_tmp[1408767]
      {
        const-val call_tmp[1408784]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830313]:string[26] "temp"
        (1408789 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1408753] ret_tmp[1830313])
        (1830316 'move' call_tmp[1408784] ret_tmp[1830313])
        (1408793 call =[38269] msg[1408753] call_tmp[1408784])
        (1848752 call chpl__autoDestroy[1461530] call_tmp[1408784])
      }
      {
        val error[1813288]:Error[167938] "error variable" "temp"
        (1813297 'move' error[1813288] nil[44])
        (1408805 call _ch_ioerror[1062865] this[1408679] err[1408713] msg[1408753] error[1813288])
        val errorExists[2110408]:bool[10] "temp"
        (2110413 'move' errorExists[2110408](2110410 '!=' error[1813288] nil[44]))
        if errorExists[2110408]
        {
          gotoErrorHandling handler[1813289] handler[1813289]
        }
        label handler[1813289]
        const-val shouldHandleError[1813308]:bool[10] "temp"
        val errorExists[2110416]:bool[10] "temp"
        (2110421 'move' errorExists[2110416](2110418 '!=' error[1813288] nil[44]))
        (1813312 'move' shouldHandleError[1813308] errorExists[2110416])
        if shouldHandleError[1813308]
        {
          (1813304 '=' error_out[1813269] error[1813288])
          (1848755 call chpl__autoDestroy[1461530] msg[1408753])
          gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
        }
      }
      (1848759 call chpl__autoDestroy[1461530] msg[1408753])
    }
    label _end_writeOne[1813271]
    (1408813 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956]._writeOne[1421879](const  ref arg this[1421885]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1421889]:real(64)[16], const  ref arg loc[1421891]:locale[28], ref arg error_out[1813459]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1421901]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1421903 'move' call_tmp[1421901](1421906 call _channel_internal[1061789] this[1421885]))
    const-val call_tmp[1421909]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1422988]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1422992 'move' coerce_tmp[1422988](1422990 'deref' call_tmp[1421901]))
    val error[1813464]:Error[167938] "error variable" "temp"
    (1813466 'move' error[1813464] nil[44])
    (1421911 'move' call_tmp[1421909](1421914 call _write_one_internal[1422023] coerce_tmp[1422988] x[1421889] loc[1421891] error[1813464]))
    val errorExists[2110496]:bool[10] "temp"
    (2110501 'move' errorExists[2110496](2110498 '!=' error[1813464] nil[44]))
    if errorExists[2110496]
    {
      (1813470 '=' error_out[1813459] error[1813464])
      gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
    }
    const-val err[1421919]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1421921 'move' err[1421919](1428613 call chpl__initCopy[964485] call_tmp[1421909]))
    const-val call_tmp[1421925]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421927 'move' call_tmp[1421925](1421930 call ENOERR[223654]))
    const-val call_tmp[1421931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421933 'move' call_tmp[1421931](1421936 call !=[223854] err[1421919] call_tmp[1421925]))
    const-val call_tmp[1421939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1421941 'move' call_tmp[1421939] call_tmp[1421931])
    if call_tmp[1421939]
    {
      const-val call_tmp[1421948]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838430]:string[26] "temp"
      (1421956 call _constructIoErrorMsg[1428618] this[1421885] x[1421889] ret_tmp[1838430])
      (1838433 'move' call_tmp[1421948] ret_tmp[1838430])
      val msg[1421959]:string[26] "dead at end of block" "insert auto destroy"
      (1421961 'move' msg[1421959] call_tmp[1421948])
      const-val call_tmp[1421965]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1421967 'move' call_tmp[1421965](1421970 call ==[223699] err[1421919] EILSEQ[224444]))
      const-val call_tmp[1421973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1421975 'move' call_tmp[1421973] call_tmp[1421965])
      if call_tmp[1421973]
      {
        const-val call_tmp[1421990]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830331]:string[26] "temp"
        (1421995 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1421959] ret_tmp[1830331])
        (1830334 'move' call_tmp[1421990] ret_tmp[1830331])
        (1421999 call =[38269] msg[1421959] call_tmp[1421990])
        (1848806 call chpl__autoDestroy[1461530] call_tmp[1421990])
      }
      {
        val error[1813478]:Error[167938] "error variable" "temp"
        (1813487 'move' error[1813478] nil[44])
        (1422011 call _ch_ioerror[1062865] this[1421885] err[1421919] msg[1421959] error[1813478])
        val errorExists[2110504]:bool[10] "temp"
        (2110509 'move' errorExists[2110504](2110506 '!=' error[1813478] nil[44]))
        if errorExists[2110504]
        {
          gotoErrorHandling handler[1813479] handler[1813479]
        }
        label handler[1813479]
        const-val shouldHandleError[1813498]:bool[10] "temp"
        val errorExists[2110512]:bool[10] "temp"
        (2110517 'move' errorExists[2110512](2110514 '!=' error[1813478] nil[44]))
        (1813502 'move' shouldHandleError[1813498] errorExists[2110512])
        if shouldHandleError[1813498]
        {
          (1813494 '=' error_out[1813459] error[1813478])
          (1848809 call chpl__autoDestroy[1461530] msg[1421959])
          gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
        }
      }
      (1848813 call chpl__autoDestroy[1461530] msg[1421959])
    }
    label _end_writeOne[1813461]
    (1422019 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._writeOne[1429447](const  ref arg this[1429453]:_ref(channel(true,dynamic,true))[1021834], const  ref arg x[1429457]:ioNewline[238701], const  ref arg loc[1429459]:locale[28], ref arg error_out[1813523]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1429469]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1429471 'move' call_tmp[1429469](1429474 call _channel_internal[1023076] this[1429453]))
    const-val call_tmp[1429477]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1432319]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1432323 'move' coerce_tmp[1432319](1432321 'deref' call_tmp[1429469]))
    val error[1813528]:Error[167938] "error variable" "temp"
    (1813530 'move' error[1813528] nil[44])
    (1429479 'move' call_tmp[1429477](1429482 call _write_one_internal[1429591] coerce_tmp[1432319] x[1429457] loc[1429459] error[1813528]))
    val errorExists[2110528]:bool[10] "temp"
    (2110533 'move' errorExists[2110528](2110530 '!=' error[1813528] nil[44]))
    if errorExists[2110528]
    {
      (1813534 '=' error_out[1813523] error[1813528])
      gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
    }
    const-val err[1429487]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1429489 'move' err[1429487](1432370 call chpl__initCopy[964485] call_tmp[1429477]))
    const-val call_tmp[1429493]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429495 'move' call_tmp[1429493](1429498 call ENOERR[223654]))
    const-val call_tmp[1429499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429501 'move' call_tmp[1429499](1429504 call !=[223854] err[1429487] call_tmp[1429493]))
    const-val call_tmp[1429507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1429509 'move' call_tmp[1429507] call_tmp[1429499])
    if call_tmp[1429507]
    {
      const-val call_tmp[1429516]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838458]:string[26] "temp"
      (1429524 call _constructIoErrorMsg[1432375] this[1429453] x[1429457] ret_tmp[1838458])
      (1838461 'move' call_tmp[1429516] ret_tmp[1838458])
      val msg[1429527]:string[26] "dead at end of block" "insert auto destroy"
      (1429529 'move' msg[1429527] call_tmp[1429516])
      const-val call_tmp[1429533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1429535 'move' call_tmp[1429533](1429538 call ==[223699] err[1429487] EILSEQ[224444]))
      const-val call_tmp[1429541]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1429543 'move' call_tmp[1429541] call_tmp[1429533])
      if call_tmp[1429541]
      {
        const-val call_tmp[1429558]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830337]:string[26] "temp"
        (1429563 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1429527] ret_tmp[1830337])
        (1830340 'move' call_tmp[1429558] ret_tmp[1830337])
        (1429567 call =[38269] msg[1429527] call_tmp[1429558])
        (1848817 call chpl__autoDestroy[1461530] call_tmp[1429558])
      }
      {
        val error[1813542]:Error[167938] "error variable" "temp"
        (1813551 'move' error[1813542] nil[44])
        (1429579 call _ch_ioerror[1393261] this[1429453] err[1429487] msg[1429527] error[1813542])
        val errorExists[2110536]:bool[10] "temp"
        (2110541 'move' errorExists[2110536](2110538 '!=' error[1813542] nil[44]))
        if errorExists[2110536]
        {
          gotoErrorHandling handler[1813543] handler[1813543]
        }
        label handler[1813543]
        const-val shouldHandleError[1813562]:bool[10] "temp"
        val errorExists[2110544]:bool[10] "temp"
        (2110549 'move' errorExists[2110544](2110546 '!=' error[1813542] nil[44]))
        (1813566 'move' shouldHandleError[1813562] errorExists[2110544])
        if shouldHandleError[1813562]
        {
          (1813558 '=' error_out[1813523] error[1813542])
          (1848820 call chpl__autoDestroy[1461530] msg[1429527])
          gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
        }
      }
      (1848824 call chpl__autoDestroy[1461530] msg[1429527])
    }
    label _end_writeOne[1813525]
    (1429587 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1021834]._writeOne[1433423](const  ref arg this[1433429]:_ref(channel(true,dynamic,true))[1021834], const in arg x[1433433]:int(64)[13], const  ref arg loc[1433435]:locale[28], ref arg error_out[1813724]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1433445]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1433447 'move' call_tmp[1433445](1433450 call _channel_internal[1023076] this[1433429]))
    const-val call_tmp[1433453]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1433573]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1433577 'move' coerce_tmp[1433573](1433575 'deref' call_tmp[1433445]))
    val error[1813729]:Error[167938] "error variable" "temp"
    (1813731 'move' error[1813729] nil[44])
    (1433455 'move' call_tmp[1433453](1433458 call _write_one_internal[1069081] coerce_tmp[1433573] x[1433433] loc[1433435] error[1813729]))
    val errorExists[2110632]:bool[10] "temp"
    (2110637 'move' errorExists[2110632](2110634 '!=' error[1813729] nil[44]))
    if errorExists[2110632]
    {
      (1813735 '=' error_out[1813724] error[1813729])
      gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
    }
    const-val err[1433463]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1433465 'move' err[1433463](1433580 call chpl__initCopy[964485] call_tmp[1433453]))
    const-val call_tmp[1433469]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433471 'move' call_tmp[1433469](1433474 call ENOERR[223654]))
    const-val call_tmp[1433475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433477 'move' call_tmp[1433475](1433480 call !=[223854] err[1433463] call_tmp[1433469]))
    const-val call_tmp[1433483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1433485 'move' call_tmp[1433483] call_tmp[1433475])
    if call_tmp[1433483]
    {
      const-val call_tmp[1433492]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838484]:string[26] "temp"
      (1433500 call _constructIoErrorMsg[1433585] this[1433429] x[1433433] ret_tmp[1838484])
      (1838487 'move' call_tmp[1433492] ret_tmp[1838484])
      val msg[1433503]:string[26] "dead at end of block" "insert auto destroy"
      (1433505 'move' msg[1433503] call_tmp[1433492])
      const-val call_tmp[1433509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433511 'move' call_tmp[1433509](1433514 call ==[223699] err[1433463] EILSEQ[224444]))
      const-val call_tmp[1433517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1433519 'move' call_tmp[1433517] call_tmp[1433509])
      if call_tmp[1433517]
      {
        const-val call_tmp[1433534]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830343]:string[26] "temp"
        (1433539 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1433503] ret_tmp[1830343])
        (1830346 'move' call_tmp[1433534] ret_tmp[1830343])
        (1433543 call =[38269] msg[1433503] call_tmp[1433534])
        (1848859 call chpl__autoDestroy[1461530] call_tmp[1433534])
      }
      {
        val error[1813743]:Error[167938] "error variable" "temp"
        (1813752 'move' error[1813743] nil[44])
        (1433555 call _ch_ioerror[1393261] this[1433429] err[1433463] msg[1433503] error[1813743])
        val errorExists[2110640]:bool[10] "temp"
        (2110645 'move' errorExists[2110640](2110642 '!=' error[1813743] nil[44]))
        if errorExists[2110640]
        {
          gotoErrorHandling handler[1813744] handler[1813744]
        }
        label handler[1813744]
        const-val shouldHandleError[1813763]:bool[10] "temp"
        val errorExists[2110648]:bool[10] "temp"
        (2110653 'move' errorExists[2110648](2110650 '!=' error[1813743] nil[44]))
        (1813767 'move' shouldHandleError[1813763] errorExists[2110648])
        if shouldHandleError[1813763]
        {
          (1813759 '=' error_out[1813724] error[1813743])
          (1848862 call chpl__autoDestroy[1461530] msg[1433503])
          gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
        }
      }
      (1848866 call chpl__autoDestroy[1461530] msg[1433503])
    }
    label _end_writeOne[1813726]
    (1433563 return _void[55])
  }
  function _write_one_internal[1069081](const in arg _channel_internal[1069083]:qio_channel_ptr_t[231465], const in arg x[1069087]:int(64)[13], const  ref arg loc[1069089]:locale[28], ref arg error_out[1810400]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1069103]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1069747]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1069749 'move' call_tmp[1069747](1069752 call ENOERR[223654]))
    val e[1069753]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1070213]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1079596 call =[224133] init_coerce_tmp[1070213] call_tmp[1069747])
    (1069755 'move' e[1069753] init_coerce_tmp[1070213])
    val call_tmp[1069760]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1069799]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1069847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1069938]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1070012]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070014 'move' call_tmp[1070012](1070017 call qio_channel_binary[233057] _channel_internal[1069083]))
              val call_tmp[1070019]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1070026]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070028 'move' binary[1070026] call_tmp[1070012])
              const-val call_tmp[1070033]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070035 'move' call_tmp[1070033](1070038 call qio_channel_byteorder[233072] _channel_internal[1069083]))
              val call_tmp[1070040]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1070047]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070049 'move' byteorder[1070047] call_tmp[1070033])
              const-val call_tmp[1070054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1070298]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1070304 'move' coerce_tmp[1070298](1070300 'cast' int(64)[13] binary[1070026]))
              (1070056 'move' call_tmp[1070054](1070059 call _cond_test[9912] coerce_tmp[1070298]))
              if call_tmp[1070054]
              {
                {
                  const-val tmp[1070064]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1810403]:Error[167938] "error variable" "temp"
                  (1810405 'move' error[1810403] nil[44])
                  (1070066 'move' tmp[1070064](1070069 call _cast[1070308] byteorder[1070047] error[1810403]))
                  val errorExists[2109032]:bool[10] "temp"
                  (2109037 'move' errorExists[2109032](2109034 '!=' error[1810403] nil[44]))
                  if errorExists[2109032]
                  {
                    (1810409 '=' error_out[1810400] error[1810403])
                    gotoErrorHandlingReturn _end__write_one_internal[1070201] _end__write_one_internal[1070201]
                  }
                  const-val call_tmp[1070072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070074 'move' call_tmp[1070072](1070077 call ==[1018273] tmp[1070064] big[230926]))
                  const-val call_tmp[1070080]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070082 'move' call_tmp[1070080] call_tmp[1070072])
                  if call_tmp[1070080]
                  {
                    const-val call_tmp[1070089]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070091 'move' call_tmp[1070089](1070094 call _write_binary_internal[1073798] _channel_internal[1069083] x[1069087]))
                    (1070099 call =[224112] e[1069753] call_tmp[1070089])
                  }
                  {
                    const-val call_tmp[1070105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070107 'move' call_tmp[1070105](1070110 call ==[1018273] tmp[1070064] little[230929]))
                    const-val call_tmp[1070113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070115 'move' call_tmp[1070113] call_tmp[1070105])
                    if call_tmp[1070113]
                    {
                      const-val call_tmp[1070122]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070124 'move' call_tmp[1070122](1070127 call _write_binary_internal[1075626] _channel_internal[1069083] x[1069087]))
                      (1070132 call =[224112] e[1069753] call_tmp[1070122])
                    }
                    {
                      const-val call_tmp[1070138]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070140 'move' call_tmp[1070138](1070143 call _write_binary_internal[1077194] _channel_internal[1069083] x[1069087]))
                      (1070148 call =[224112] e[1069753] call_tmp[1070138])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1070156]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                (1070158 'move' call_tmp[1070156](1070161 call _write_text_internal[1078760] _channel_internal[1069083] x[1069087]))
                (1070165 call =[224112] e[1069753] call_tmp[1070156])
              }
            }
          }
        }
      }
    }
    (1079603 'move' ret[1069103] e[1069753])
    gotoReturn _end__write_one_internal[1070201] _end__write_one_internal[1070201]
    label _end__write_one_internal[1070201]
    (1070203 return ret[1069103])
  }
  function _write_one_internal[1165304](const in arg _channel_internal[1165306]:qio_channel_ptr_t[231465], const  ref arg x[1165310]:string[26], const  ref arg loc[1165312]:locale[28], ref arg error_out[1811198]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1165326]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1167572]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1167574 'move' call_tmp[1167572](1167577 call ENOERR[223654]))
    val e[1167578]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1168038]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1173665 call =[224133] init_coerce_tmp[1168038] call_tmp[1167572])
    (1167580 'move' e[1167578] init_coerce_tmp[1168038])
    val call_tmp[1167585]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1167624]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1167672]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1167763]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1167837]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167839 'move' call_tmp[1167837](1167842 call qio_channel_binary[233057] _channel_internal[1165306]))
              val call_tmp[1167844]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1167851]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167853 'move' binary[1167851] call_tmp[1167837])
              const-val call_tmp[1167858]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1167860 'move' call_tmp[1167858](1167863 call qio_channel_byteorder[233072] _channel_internal[1165306]))
              val call_tmp[1167865]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1167872]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1167874 'move' byteorder[1167872] call_tmp[1167858])
              const-val call_tmp[1167879]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1168114]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1168120 'move' coerce_tmp[1168114](1168116 'cast' int(64)[13] binary[1167851]))
              (1167881 'move' call_tmp[1167879](1167884 call _cond_test[9912] coerce_tmp[1168114]))
              if call_tmp[1167879]
              {
                {
                  const-val tmp[1167889]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1811201]:Error[167938] "error variable" "temp"
                  (1811203 'move' error[1811201] nil[44])
                  (1167891 'move' tmp[1167889](1167894 call _cast[1070308] byteorder[1167872] error[1811201]))
                  val errorExists[2109424]:bool[10] "temp"
                  (2109429 'move' errorExists[2109424](2109426 '!=' error[1811201] nil[44]))
                  if errorExists[2109424]
                  {
                    (1811207 '=' error_out[1811198] error[1811201])
                    gotoErrorHandlingReturn _end__write_one_internal[1168026] _end__write_one_internal[1168026]
                  }
                  const-val call_tmp[1167897]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167899 'move' call_tmp[1167897](1167902 call ==[1018273] tmp[1167889] big[230926]))
                  const-val call_tmp[1167905]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1167907 'move' call_tmp[1167905] call_tmp[1167897])
                  if call_tmp[1167905]
                  {
                    const-val call_tmp[1167914]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167916 'move' call_tmp[1167914](1167919 call _write_binary_internal[1168125] _channel_internal[1165306] x[1165310]))
                    (1167924 call =[224112] e[1167578] call_tmp[1167914])
                  }
                  {
                    const-val call_tmp[1167930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167932 'move' call_tmp[1167930](1167935 call ==[1018273] tmp[1167889] little[230929]))
                    const-val call_tmp[1167938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1167940 'move' call_tmp[1167938] call_tmp[1167930])
                    if call_tmp[1167938]
                    {
                      const-val call_tmp[1167947]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1167949 'move' call_tmp[1167947](1167952 call _write_binary_internal[1169700] _channel_internal[1165306] x[1165310]))
                      (1167957 call =[224112] e[1167578] call_tmp[1167947])
                    }
                    {
                      const-val call_tmp[1167963]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1167965 'move' call_tmp[1167963](1167968 call _write_binary_internal[1171272] _channel_internal[1165306] x[1165310]))
                      (1167973 call =[224112] e[1167578] call_tmp[1167963])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1167981]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                (1167983 'move' call_tmp[1167981](1167986 call _write_text_internal[1172844] _channel_internal[1165306] x[1165310]))
                (1167990 call =[224112] e[1167578] call_tmp[1167981])
              }
            }
          }
        }
      }
    }
    (1173672 'move' ret[1165326] e[1167578])
    gotoReturn _end__write_one_internal[1168026] _end__write_one_internal[1168026]
    label _end__write_one_internal[1168026]
    (1168028 return ret[1165326])
  }
  function _write_one_internal[1408817](const in arg _channel_internal[1408819]:qio_channel_ptr_t[231465], const  ref arg x[1408823]:ioLiteral[238753], const  ref arg loc[1408825]:locale[28], ref arg error_out[1813316]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1408839]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1411088]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1411090 'move' call_tmp[1411088](1411093 call ENOERR[223654]))
    const-val e[1411094]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1411554]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1411617 call =[224133] init_coerce_tmp[1411554] call_tmp[1411088])
    (1411096 'move' e[1411094] init_coerce_tmp[1411554])
    val call_tmp[1411101]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1411140]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1411188]:ioLiteral[238753] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[1411211]:_ref(string)[937939] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1411213 'move' call_tmp[1411211](1411216 call val[894746] x[1408823]))
          const-val call_tmp[1411219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1829581]:string[26] "temp"
          (1411227 call localize[32886] call_tmp[1411211] ret_tmp[1829581])
          (1829584 'move' call_tmp[1411219] ret_tmp[1829581])
          const-val call_tmp[1411228]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (1411230 'move' call_tmp[1411228](1411236 call c_str[32932] call_tmp[1411219]))
          ref call_tmp[1411237]:_ref(string)[937939] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1411239 'move' call_tmp[1411237](1411242 call val[894746] x[1408823]))
          const-val call_tmp[1411245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1411247 'move' call_tmp[1411245](1411250 call numBytes[32807] call_tmp[1411237]))
          const-val call_tmp[1411253]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1411255 'move' call_tmp[1411253] call_tmp[1411245])
          const-val call_tmp[1411261]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1411605]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1411611 'move' coerce_tmp[1411605](1411607 'cast' int(32)[95] 0))
          (1411263 'move' call_tmp[1411261](1411266 call qio_channel_print_literal[234917] coerce_tmp[1411605] _channel_internal[1408819] call_tmp[1411228] call_tmp[1411253]))
          (1411624 'move' ret[1408839] call_tmp[1411261])
          (1848762 call chpl__autoDestroy[1461530] call_tmp[1411219])
          gotoReturn _end__write_one_internal[1411542] _end__write_one_internal[1411542]
        }
      }
    }
    label _end__write_one_internal[1411542]
    (1411544 return ret[1408839])
  }
  function _write_one_internal[1422023](const in arg _channel_internal[1422025]:qio_channel_ptr_t[231465], const in arg x[1422029]:real(64)[16], const  ref arg loc[1422031]:locale[28], ref arg error_out[1813506]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1422045]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1422530]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1422532 'move' call_tmp[1422530](1422535 call ENOERR[223654]))
    val e[1422536]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1422996]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1428604 call =[224133] init_coerce_tmp[1422996] call_tmp[1422530])
    (1422538 'move' e[1422536] init_coerce_tmp[1422996])
    val call_tmp[1422543]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1422582]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1422630]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1422721]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1422795]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1422797 'move' call_tmp[1422795](1422800 call qio_channel_binary[233057] _channel_internal[1422025]))
              val call_tmp[1422802]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1422809]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1422811 'move' binary[1422809] call_tmp[1422795])
              const-val call_tmp[1422816]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1422818 'move' call_tmp[1422816](1422821 call qio_channel_byteorder[233072] _channel_internal[1422025]))
              val call_tmp[1422823]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1422830]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1422832 'move' byteorder[1422830] call_tmp[1422816])
              const-val call_tmp[1422837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1423072]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1423078 'move' coerce_tmp[1423072](1423074 'cast' int(64)[13] binary[1422809]))
              (1422839 'move' call_tmp[1422837](1422842 call _cond_test[9912] coerce_tmp[1423072]))
              if call_tmp[1422837]
              {
                {
                  const-val tmp[1422847]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1813509]:Error[167938] "error variable" "temp"
                  (1813511 'move' error[1813509] nil[44])
                  (1422849 'move' tmp[1422847](1422852 call _cast[1070308] byteorder[1422830] error[1813509]))
                  val errorExists[2110520]:bool[10] "temp"
                  (2110525 'move' errorExists[2110520](2110522 '!=' error[1813509] nil[44]))
                  if errorExists[2110520]
                  {
                    (1813515 '=' error_out[1813506] error[1813509])
                    gotoErrorHandlingReturn _end__write_one_internal[1422984] _end__write_one_internal[1422984]
                  }
                  const-val call_tmp[1422855]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1422857 'move' call_tmp[1422855](1422860 call ==[1018273] tmp[1422847] big[230926]))
                  const-val call_tmp[1422863]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1422865 'move' call_tmp[1422863] call_tmp[1422855])
                  if call_tmp[1422863]
                  {
                    const-val call_tmp[1422872]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1422874 'move' call_tmp[1422872](1422877 call _write_binary_internal[1423083] _channel_internal[1422025] x[1422029]))
                    (1422882 call =[224112] e[1422536] call_tmp[1422872])
                  }
                  {
                    const-val call_tmp[1422888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1422890 'move' call_tmp[1422888](1422893 call ==[1018273] tmp[1422847] little[230929]))
                    const-val call_tmp[1422896]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1422898 'move' call_tmp[1422896] call_tmp[1422888])
                    if call_tmp[1422896]
                    {
                      const-val call_tmp[1422905]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1422907 'move' call_tmp[1422905](1422910 call _write_binary_internal[1424650] _channel_internal[1422025] x[1422029]))
                      (1422915 call =[224112] e[1422536] call_tmp[1422905])
                    }
                    {
                      const-val call_tmp[1422921]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1422923 'move' call_tmp[1422921](1422926 call _write_binary_internal[1426214] _channel_internal[1422025] x[1422029]))
                      (1422931 call =[224112] e[1422536] call_tmp[1422921])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1422939]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
                (1422941 'move' call_tmp[1422939](1422944 call _write_text_internal[1427778] _channel_internal[1422025] x[1422029]))
                (1422948 call =[224112] e[1422536] call_tmp[1422939])
              }
            }
          }
        }
      }
    }
    (1428611 'move' ret[1422045] e[1422536])
    gotoReturn _end__write_one_internal[1422984] _end__write_one_internal[1422984]
    label _end__write_one_internal[1422984]
    (1422986 return ret[1422045])
  }
  function _write_one_internal[1429591](const in arg _channel_internal[1429593]:qio_channel_ptr_t[231465], const  ref arg x[1429597]:ioNewline[238701], const  ref arg loc[1429599]:locale[28], ref arg error_out[1813570]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1429613]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1431861]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1431863 'move' call_tmp[1431861](1431866 call ENOERR[223654]))
    const-val e[1431867]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1432327]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1432358 call =[224133] init_coerce_tmp[1432327] call_tmp[1431861])
    (1431869 'move' e[1431867] init_coerce_tmp[1432327])
    val call_tmp[1431874]:ioNewline[238701] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1431897]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1432346]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1432352 'move' coerce_tmp[1432346](1432348 'cast' int(32)[95] 0))
      (1431899 'move' call_tmp[1431897](1431902 call qio_channel_write_newline[234735] coerce_tmp[1432346] _channel_internal[1429593]))
      (1432365 'move' ret[1429613] call_tmp[1431897])
      gotoReturn _end__write_one_internal[1432315] _end__write_one_internal[1432315]
    }
    label _end__write_one_internal[1432315]
    (1432317 return ret[1429613])
  }
  function _write_one_internal[1067935](const in arg _channel_internal[1067937]:qio_channel_ptr_t[231465], const  ref arg x[1067941]:byteIndex[28170], const  ref arg loc[1067943]:locale[28], ref arg error_out[1810163]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1067947]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1067957]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830547]:locale[28] "temp"
    (1067962 call here[90435] ret_tmp[1830547])
    (1830550 'move' call_tmp[1067957] ret_tmp[1830547])
    const-val call_tmp[1067963]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1068370]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (1068373 call init[1068388] initTemp[1068370] call_tmp[1067957] _channel_internal[1067937] loc[1067943])
    (1067965 'move' call_tmp[1067963] initTemp[1068370])
    val writer[1067980]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1067982 'move' writer[1067980] call_tmp[1067963])
    const-val call_tmp[1068002]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1068004 'move' call_tmp[1068002](1068007 call ENOERR[223654]))
    const-val err[1068008]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1068524]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1079891 call =[224133] init_coerce_tmp[1068524] call_tmp[1068002])
    (1068010 'move' err[1068008] init_coerce_tmp[1068524])
    val call_tmp[1068019]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068069]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068135]:byteIndex[28170] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1810165]:Error[167938] "error variable" "temp"
        (1810174 'move' error[1810165] nil[44])
        (1068342 call writeThis[1068620] x[1067941] writer[1067980] error[1810165])
        val errorExists[2108912]:bool[10] "temp"
        (2108917 'move' errorExists[2108912](2108914 '!=' error[1810165] nil[44]))
        if errorExists[2108912]
        {
          gotoErrorHandling handler[1810166] handler[1810166]
        }
        label handler[1810166]
        const-val shouldHandleError[1810185]:bool[10] "temp"
        val errorExists[2108920]:bool[10] "temp"
        (2108925 'move' errorExists[2108920](2108922 '!=' error[1810165] nil[44]))
        (1810189 'move' shouldHandleError[1810185] errorExists[2108920])
        if shouldHandleError[1810185]
        {
          (1810181 '=' error_out[1810163] error[1810165])
          ref call_tmp[1844102]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
          (1844104 'move' call_tmp[1844102](1844107 call _channel_internal[1061789] writer[1067980]))
          (1844110 call =[861480] call_tmp[1844102] QIO_CHANNEL_PTR_NULL[231468])
          (1844115 call chpl__autoDestroy[1536314] writer[1067980])
          (1844118 call chpl__autoDestroy[1461594] call_tmp[1067957])
          gotoErrorHandlingReturn _end__write_one_internal[1068357] _end__write_one_internal[1068357]
        }
      }
    }
    (1079898 'move' ret[1067947] err[1068008])
    ref call_tmp[1844122]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1844124 'move' call_tmp[1844122](1844127 call _channel_internal[1061789] writer[1067980]))
    (1844130 call =[861480] call_tmp[1844122] QIO_CHANNEL_PTR_NULL[231468])
    (1844135 call chpl__autoDestroy[1536314] writer[1067980])
    (1844138 call chpl__autoDestroy[1461594] call_tmp[1067957])
    gotoReturn _end__write_one_internal[1068357] _end__write_one_internal[1068357]
    label _end__write_one_internal[1068357]
    (1068359 return ret[1067947])
  }
  function _write_one_internal[1174784](const in arg _channel_internal[1174786]:qio_channel_ptr_t[231465], const  ref arg x[1174790]:codepointIndex[28274], const  ref arg loc[1174792]:locale[28], ref arg error_out[1811262]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1174796]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1174806]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830565]:locale[28] "temp"
    (1174811 call here[90435] ret_tmp[1830565])
    (1830568 'move' call_tmp[1174806] ret_tmp[1830565])
    const-val call_tmp[1174812]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1175219]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (1175222 call init[1068388] initTemp[1175219] call_tmp[1174806] _channel_internal[1174786] loc[1174792])
    (1174814 'move' call_tmp[1174812] initTemp[1175219])
    val writer[1174829]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1174831 'move' writer[1174829] call_tmp[1174812])
    const-val call_tmp[1174851]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1174853 'move' call_tmp[1174851](1174856 call ENOERR[223654]))
    const-val err[1174857]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1175249]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1175383 call =[224133] init_coerce_tmp[1175249] call_tmp[1174851])
    (1174859 'move' err[1174857] init_coerce_tmp[1175249])
    val call_tmp[1174868]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1174918]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1174984]:codepointIndex[28274] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1811264]:Error[167938] "error variable" "temp"
        (1811273 'move' error[1811264] nil[44])
        (1175191 call writeThis[1175345] x[1174790] writer[1174829] error[1811264])
        val errorExists[2109456]:bool[10] "temp"
        (2109461 'move' errorExists[2109456](2109458 '!=' error[1811264] nil[44]))
        if errorExists[2109456]
        {
          gotoErrorHandling handler[1811265] handler[1811265]
        }
        label handler[1811265]
        const-val shouldHandleError[1811284]:bool[10] "temp"
        val errorExists[2109464]:bool[10] "temp"
        (2109469 'move' errorExists[2109464](2109466 '!=' error[1811264] nil[44]))
        (1811288 'move' shouldHandleError[1811284] errorExists[2109464])
        if shouldHandleError[1811284]
        {
          (1811280 '=' error_out[1811262] error[1811264])
          ref call_tmp[1845905]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
          (1845907 'move' call_tmp[1845905](1845910 call _channel_internal[1061789] writer[1174829]))
          (1845913 call =[861480] call_tmp[1845905] QIO_CHANNEL_PTR_NULL[231468])
          (1845918 call chpl__autoDestroy[1536314] writer[1174829])
          (1845921 call chpl__autoDestroy[1461594] call_tmp[1174806])
          gotoErrorHandlingReturn _end__write_one_internal[1175206] _end__write_one_internal[1175206]
        }
      }
    }
    (1175390 'move' ret[1174796] err[1174857])
    ref call_tmp[1845925]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1845927 'move' call_tmp[1845925](1845930 call _channel_internal[1061789] writer[1174829]))
    (1845933 call =[861480] call_tmp[1845925] QIO_CHANNEL_PTR_NULL[231468])
    (1845938 call chpl__autoDestroy[1536314] writer[1174829])
    (1845941 call chpl__autoDestroy[1461594] call_tmp[1174806])
    gotoReturn _end__write_one_internal[1175206] _end__write_one_internal[1175206]
    label _end__write_one_internal[1175206]
    (1175208 return ret[1174796])
  }
  function _write_one_internal[1396291](const in arg _channel_internal[1396293]:qio_channel_ptr_t[231465], const  ref arg x[1396297]:[domain(1,int(64),false)] real(64)[1365840], const  ref arg loc[1396299]:locale[28], ref arg error_out[1812635]:Error[167938]) : syserr[223584] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1396303]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1396313]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830643]:locale[28] "temp"
    (1396318 call here[90435] ret_tmp[1830643])
    (1830646 'move' call_tmp[1396313] ret_tmp[1830643])
    const-val call_tmp[1396319]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1396726]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (1396729 call init[1068388] initTemp[1396726] call_tmp[1396313] _channel_internal[1396293] loc[1396299])
    (1396321 'move' call_tmp[1396319] initTemp[1396726])
    val writer[1396336]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1396338 'move' writer[1396336] call_tmp[1396319])
    const-val call_tmp[1396358]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1396360 'move' call_tmp[1396358](1396363 call ENOERR[223654]))
    const-val err[1396364]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1396756]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1429177 call =[224133] init_coerce_tmp[1396756] call_tmp[1396358])
    (1396366 'move' err[1396364] init_coerce_tmp[1396756])
    const-val call_tmp[1396375]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1396377 'move' call_tmp[1396375](1396762 call chpl__convertValueToRuntimeType[1393963] x[1396297]))
    const-val call_tmp[1396425]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1396427 'move' call_tmp[1396425](1396797 call chpl__convertValueToRuntimeType[1393963] x[1396297]))
    const-val call_tmp[1396491]:_RuntimeTypeInfo[1366073] "dead after last mention" "expr temp" "maybe param" "temp"
    (1396493 'move' call_tmp[1396491](1396825 call chpl__convertValueToRuntimeType[1393963] x[1396297]))
    {
      {
        val error[1812637]:Error[167938] "error variable" "temp"
        (1812646 'move' error[1812637] nil[44])
        (1396698 call writeThis[1396898] x[1396297] writer[1396336] error[1812637])
        val errorExists[2110144]:bool[10] "temp"
        (2110149 'move' errorExists[2110144](2110146 '!=' error[1812637] nil[44]))
        if errorExists[2110144]
        {
          gotoErrorHandling handler[1812638] handler[1812638]
        }
        label handler[1812638]
        const-val shouldHandleError[1812657]:bool[10] "temp"
        val errorExists[2110152]:bool[10] "temp"
        (2110157 'move' errorExists[2110152](2110154 '!=' error[1812637] nil[44]))
        (1812661 'move' shouldHandleError[1812657] errorExists[2110152])
        if shouldHandleError[1812657]
        {
          (1812653 '=' error_out[1812635] error[1812637])
          ref call_tmp[1848436]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
          (1848438 'move' call_tmp[1848436](1848441 call _channel_internal[1061789] writer[1396336]))
          (1848444 call =[861480] call_tmp[1848436] QIO_CHANNEL_PTR_NULL[231468])
          (1848449 call chpl__autoDestroy[1536314] writer[1396336])
          (1848452 call chpl__autoDestroy[1461594] call_tmp[1396313])
          gotoErrorHandlingReturn _end__write_one_internal[1396713] _end__write_one_internal[1396713]
        }
      }
    }
    (1429184 'move' ret[1396303] err[1396364])
    ref call_tmp[1848456]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1848458 'move' call_tmp[1848456](1848461 call _channel_internal[1061789] writer[1396336]))
    (1848464 call =[861480] call_tmp[1848456] QIO_CHANNEL_PTR_NULL[231468])
    (1848469 call chpl__autoDestroy[1536314] writer[1396336])
    (1848472 call chpl__autoDestroy[1461594] call_tmp[1396313])
    gotoReturn _end__write_one_internal[1396713] _end__write_one_internal[1396713]
    label _end__write_one_internal[1396713]
    (1396715 return ret[1396303])
  }
  function _ref(channel(true,dynamic,false))[1060956].writeIt[1068786](const  ref arg this[1068792]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1068794]:int(64)[13], ref arg error_out[1810276]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1068830]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833335]:locale[28] "temp"
    (1068838 call getLocaleOfIoRequest[1066211] this[1068792] ret_tmp[1833335])
    (1833338 'move' call_tmp[1068830] ret_tmp[1833335])
    const-val origLocale[1068839]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068841 'move' origLocale[1068839] call_tmp[1068830])
    const-val tmp[1068845]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1068847]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1068849 'move' call_tmp[1068847](1068852 call home[1061755] this[1068792]))
    const-val call_tmp[1068855]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1068923]:BaseLocale[91201] "dead after last mention" "temp"
    (1068928 'move' _locale_tmp_[1068923](1068925 call _value[89981] call_tmp[1068847]))
    (1068857 'move' call_tmp[1068855](1068859 '_wide_get_locale' _locale_tmp_[1068923]))
    (1068861 'move' tmp[1068845] call_tmp[1068855])
    val error[1810281]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1810283 'move' error[1810281] nil[44])
    val rvfDerefTmp[2083799]:locale[28] "temp"
    (2083802 'move' rvfDerefTmp[2083799] origLocale[1068839])
    val isdirect[2089909]:bool[10] "temp"
    (2089914 'move' isdirect[2089909](2089911 call chpl_doDirectExecuteOn[187423] tmp[1068845]))
    if isdirect[2089909]
    {
      (2089918 call on_fn[1068868] this[1068792] x[1068794] rvfDerefTmp[2083799] error[1810281])
    }
    {
      val _args_foron_fn[2089942]:_class_localson_fn[2089928] "temp"
      (2089946 'move' _args_foron_fn[2089942](2089944 'stack allocate class' _class_localson_fn[2089928]))
      (2089948 '.=' _args_foron_fn[2089942] _0_tmp[2089931] tmp[1068845])
      ref tmp[2089952]:channel(true,dynamic,false)[1060947] "temp"
      (2089956 'move' tmp[2089952](2089954 'set reference' this[1068792]))
      (2089958 '.=' _args_foron_fn[2089942] _1_this[2089933] tmp[2089952])
      (2089962 '.=' _args_foron_fn[2089942] _2_x[2089935] x[1068794])
      (2089966 '.=' _args_foron_fn[2089942] _3_rvfDerefTmp[2089937] rvfDerefTmp[2083799])
      ref tmp[2089970]:Error[167938] "temp"
      (2089974 'move' tmp[2089970](2089972 'set reference' error[1810281]))
      (2089976 '.=' _args_foron_fn[2089942] _4_error[2089939] tmp[2089970])
      val _args_vforon_fn[2089980]:c_void_ptr[149] "temp"
      (2089984 'move' _args_vforon_fn[2089980](2089982 'cast_to_void_star' _args_foron_fn[2089942]))
      val _args_sizeon_fn[2089986]:int(64)[13] "temp"
      (2089990 'move' _args_sizeon_fn[2089986](2089988 'sizeof_bundle' _class_localson_fn[2089928]))
      on(2090046 call wrapon_fn[2089992] tmp[1068845] _args_vforon_fn[2089980] _args_sizeon_fn[2089986] _args_foron_fn[2089942])
    }
    val errorExists[2108968]:bool[10] "temp"
    (2108973 'move' errorExists[2108968](2108970 '!=' error[1810281] nil[44]))
    if errorExists[2108968]
    {
      (1810287 '=' error_out[1810276] error[1810281])
      (1844141 call chpl__autoDestroy[1461594] origLocale[1068839])
      gotoErrorHandlingReturn _endwriteIt[1810278] _endwriteIt[1810278]
    }
    {
    }
    (1844144 call chpl__autoDestroy[1461594] origLocale[1068839])
    label _endwriteIt[1810278]
    (1068912 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].writeIt[1408522](const  ref arg this[1408528]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1408530]:ioLiteral[238753], ref arg error_out[1813192]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1408566]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833353]:locale[28] "temp"
    (1408574 call getLocaleOfIoRequest[1066211] this[1408528] ret_tmp[1833353])
    (1833356 'move' call_tmp[1408566] ret_tmp[1833353])
    const-val origLocale[1408575]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1408577 'move' origLocale[1408575] call_tmp[1408566])
    const-val tmp[1408581]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1408583]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1408585 'move' call_tmp[1408583](1408588 call home[1061755] this[1408528]))
    const-val call_tmp[1408591]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1408659]:BaseLocale[91201] "dead after last mention" "temp"
    (1408664 'move' _locale_tmp_[1408659](1408661 call _value[89981] call_tmp[1408583]))
    (1408593 'move' call_tmp[1408591](1408595 '_wide_get_locale' _locale_tmp_[1408659]))
    (1408597 'move' tmp[1408581] call_tmp[1408591])
    val error[1813197]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813199 'move' error[1813197] nil[44])
    val rvfDerefTmp[2084387]:ioLiteral[238753] "temp"
    (2084391 'move' rvfDerefTmp[2084387](2084389 'deref' x[1408530]))
    val rvfDerefTmp[2084401]:locale[28] "temp"
    (2084404 'move' rvfDerefTmp[2084401] origLocale[1408575])
    val isdirect[2094971]:bool[10] "temp"
    (2094976 'move' isdirect[2094971](2094973 call chpl_doDirectExecuteOn[187423] tmp[1408581]))
    if isdirect[2094971]
    {
      (2094980 call on_fn[1408604] this[1408528] rvfDerefTmp[2084387] rvfDerefTmp[2084401] error[1813197])
    }
    {
      val _args_foron_fn[2095004]:_class_localson_fn[2094990] "temp"
      (2095008 'move' _args_foron_fn[2095004](2095006 'stack allocate class' _class_localson_fn[2094990]))
      (2095010 '.=' _args_foron_fn[2095004] _0_tmp[2094993] tmp[1408581])
      ref tmp[2095014]:channel(true,dynamic,false)[1060947] "temp"
      (2095018 'move' tmp[2095014](2095016 'set reference' this[1408528]))
      (2095020 '.=' _args_foron_fn[2095004] _1_this[2094995] tmp[2095014])
      (2095024 '.=' _args_foron_fn[2095004] _2_rvfDerefTmp[2094997] rvfDerefTmp[2084387])
      (2095028 '.=' _args_foron_fn[2095004] _3_rvfDerefTmp[2094999] rvfDerefTmp[2084401])
      ref tmp[2095032]:Error[167938] "temp"
      (2095036 'move' tmp[2095032](2095034 'set reference' error[1813197]))
      (2095038 '.=' _args_foron_fn[2095004] _4_error[2095001] tmp[2095032])
      val _args_vforon_fn[2095042]:c_void_ptr[149] "temp"
      (2095046 'move' _args_vforon_fn[2095042](2095044 'cast_to_void_star' _args_foron_fn[2095004]))
      val _args_sizeon_fn[2095048]:int(64)[13] "temp"
      (2095052 'move' _args_sizeon_fn[2095048](2095050 'sizeof_bundle' _class_localson_fn[2094990]))
      on(2095108 call wrapon_fn[2095054] tmp[1408581] _args_vforon_fn[2095042] _args_sizeon_fn[2095048] _args_foron_fn[2095004])
    }
    val errorExists[2110360]:bool[10] "temp"
    (2110365 'move' errorExists[2110360](2110362 '!=' error[1813197] nil[44]))
    if errorExists[2110360]
    {
      (1813203 '=' error_out[1813192] error[1813197])
      (1848736 call chpl__autoDestroy[1461594] origLocale[1408575])
      gotoErrorHandlingReturn _endwriteIt[1813194] _endwriteIt[1813194]
    }
    {
    }
    (1848739 call chpl__autoDestroy[1461594] origLocale[1408575])
    label _endwriteIt[1813194]
    (1408648 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].writeIt[1421728](const  ref arg this[1421734]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1421736]:real(64)[16], ref arg error_out[1813382]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1421772]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833359]:locale[28] "temp"
    (1421780 call getLocaleOfIoRequest[1066211] this[1421734] ret_tmp[1833359])
    (1833362 'move' call_tmp[1421772] ret_tmp[1833359])
    const-val origLocale[1421781]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1421783 'move' origLocale[1421781] call_tmp[1421772])
    const-val tmp[1421787]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1421789]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1421791 'move' call_tmp[1421789](1421794 call home[1061755] this[1421734]))
    const-val call_tmp[1421797]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1421865]:BaseLocale[91201] "dead after last mention" "temp"
    (1421870 'move' _locale_tmp_[1421865](1421867 call _value[89981] call_tmp[1421789]))
    (1421799 'move' call_tmp[1421797](1421801 '_wide_get_locale' _locale_tmp_[1421865]))
    (1421803 'move' tmp[1421787] call_tmp[1421797])
    val error[1813387]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813389 'move' error[1813387] nil[44])
    val rvfDerefTmp[2084413]:locale[28] "temp"
    (2084416 'move' rvfDerefTmp[2084413] origLocale[1421781])
    val isdirect[2095113]:bool[10] "temp"
    (2095118 'move' isdirect[2095113](2095115 call chpl_doDirectExecuteOn[187423] tmp[1421787]))
    if isdirect[2095113]
    {
      (2095122 call on_fn[1421810] this[1421734] x[1421736] rvfDerefTmp[2084413] error[1813387])
    }
    {
      val _args_foron_fn[2095146]:_class_localson_fn[2095132] "temp"
      (2095150 'move' _args_foron_fn[2095146](2095148 'stack allocate class' _class_localson_fn[2095132]))
      (2095152 '.=' _args_foron_fn[2095146] _0_tmp[2095135] tmp[1421787])
      ref tmp[2095156]:channel(true,dynamic,false)[1060947] "temp"
      (2095160 'move' tmp[2095156](2095158 'set reference' this[1421734]))
      (2095162 '.=' _args_foron_fn[2095146] _1_this[2095137] tmp[2095156])
      (2095166 '.=' _args_foron_fn[2095146] _2_x[2095139] x[1421736])
      (2095170 '.=' _args_foron_fn[2095146] _3_rvfDerefTmp[2095141] rvfDerefTmp[2084413])
      ref tmp[2095174]:Error[167938] "temp"
      (2095178 'move' tmp[2095174](2095176 'set reference' error[1813387]))
      (2095180 '.=' _args_foron_fn[2095146] _4_error[2095143] tmp[2095174])
      val _args_vforon_fn[2095184]:c_void_ptr[149] "temp"
      (2095188 'move' _args_vforon_fn[2095184](2095186 'cast_to_void_star' _args_foron_fn[2095146]))
      val _args_sizeon_fn[2095190]:int(64)[13] "temp"
      (2095194 'move' _args_sizeon_fn[2095190](2095192 'sizeof_bundle' _class_localson_fn[2095132]))
      on(2095250 call wrapon_fn[2095196] tmp[1421787] _args_vforon_fn[2095184] _args_sizeon_fn[2095190] _args_foron_fn[2095146])
    }
    val errorExists[2110456]:bool[10] "temp"
    (2110461 'move' errorExists[2110456](2110458 '!=' error[1813387] nil[44]))
    if errorExists[2110456]
    {
      (1813393 '=' error_out[1813382] error[1813387])
      (1848790 call chpl__autoDestroy[1461594] origLocale[1421781])
      gotoErrorHandlingReturn _endwriteIt[1813384] _endwriteIt[1813384]
    }
    {
    }
    (1848793 call chpl__autoDestroy[1461594] origLocale[1421781])
    label _endwriteIt[1813384]
    (1421854 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].readwrite[1068721](const  ref arg this[1068727]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1068729]:int(64)[13], ref arg error_out[1810244]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1810248]:Error[167938] "error variable" "temp"
      (1810257 'move' error[1810248] nil[44])
      (1068780 call writeIt[1068786] this[1068727] x[1068729] error[1810248])
      val errorExists[2108952]:bool[10] "temp"
      (2108957 'move' errorExists[2108952](2108954 '!=' error[1810248] nil[44]))
      if errorExists[2108952]
      {
        gotoErrorHandling handler[1810249] handler[1810249]
      }
      label handler[1810249]
      const-val shouldHandleError[1810268]:bool[10] "temp"
      val errorExists[2108960]:bool[10] "temp"
      (2108965 'move' errorExists[2108960](2108962 '!=' error[1810248] nil[44]))
      (1810272 'move' shouldHandleError[1810268] errorExists[2108960])
      if shouldHandleError[1810268]
      {
        (1810264 '=' error_out[1810244] error[1810248])
        gotoErrorHandlingReturn _endreadwrite[1810246] _endreadwrite[1810246]
      }
    }
    label _endreadwrite[1810246]
    (1068783 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].readwrite[1408457](const  ref arg this[1408463]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1408465]:ioLiteral[238753], ref arg error_out[1813160]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1813164]:Error[167938] "error variable" "temp"
      (1813173 'move' error[1813164] nil[44])
      (1408516 call writeIt[1408522] this[1408463] x[1408465] error[1813164])
      val errorExists[2110344]:bool[10] "temp"
      (2110349 'move' errorExists[2110344](2110346 '!=' error[1813164] nil[44]))
      if errorExists[2110344]
      {
        gotoErrorHandling handler[1813165] handler[1813165]
      }
      label handler[1813165]
      const-val shouldHandleError[1813184]:bool[10] "temp"
      val errorExists[2110352]:bool[10] "temp"
      (2110357 'move' errorExists[2110352](2110354 '!=' error[1813164] nil[44]))
      (1813188 'move' shouldHandleError[1813184] errorExists[2110352])
      if shouldHandleError[1813184]
      {
        (1813180 '=' error_out[1813160] error[1813164])
        gotoErrorHandlingReturn _endreadwrite[1813162] _endreadwrite[1813162]
      }
    }
    label _endreadwrite[1813162]
    (1408519 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1060956].readwrite[1421663](const  ref arg this[1421669]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1421671]:real(64)[16], ref arg error_out[1813350]:Error[167938]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1813354]:Error[167938] "error variable" "temp"
      (1813363 'move' error[1813354] nil[44])
      (1421722 call writeIt[1421728] this[1421669] x[1421671] error[1813354])
      val errorExists[2110440]:bool[10] "temp"
      (2110445 'move' errorExists[2110440](2110442 '!=' error[1813354] nil[44]))
      if errorExists[2110440]
      {
        gotoErrorHandling handler[1813355] handler[1813355]
      }
      label handler[1813355]
      const-val shouldHandleError[1813374]:bool[10] "temp"
      val errorExists[2110448]:bool[10] "temp"
      (2110453 'move' errorExists[2110448](2110450 '!=' error[1813354] nil[44]))
      (1813378 'move' shouldHandleError[1813374] errorExists[2110448])
      if shouldHandleError[1813374]
      {
        (1813370 '=' error_out[1813350] error[1813354])
        gotoErrorHandlingReturn _endreadwrite[1813352] _endreadwrite[1813352]
      }
    }
    label _endreadwrite[1813352]
    (1421725 return _void[55])
  }
  function <~>[1068648](const  ref arg ch[1068650]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1068652]:int(64)[13], ref arg error_out[1810212]:Error[167938]) const ref : _ref(channel(true,dynamic,false))[1060956] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1068659]:_ref(channel(true,dynamic,false))[1060956] "dead after last mention" "RVV" "temp"
    {
      val error[1810216]:Error[167938] "error variable" "temp"
      (1810225 'move' error[1810216] nil[44])
      (1068705 call readwrite[1068721] ch[1068650] x[1068652] error[1810216])
      val errorExists[2108936]:bool[10] "temp"
      (2108941 'move' errorExists[2108936](2108938 '!=' error[1810216] nil[44]))
      if errorExists[2108936]
      {
        gotoErrorHandling handler[1810217] handler[1810217]
      }
      label handler[1810217]
      const-val shouldHandleError[1810236]:bool[10] "temp"
      val errorExists[2108944]:bool[10] "temp"
      (2108949 'move' errorExists[2108944](2108946 '!=' error[1810216] nil[44]))
      (1810240 'move' shouldHandleError[1810236] errorExists[2108944])
      if shouldHandleError[1810236]
      {
        (1810232 '=' error_out[1810212] error[1810216])
        gotoErrorHandlingReturn _end<~>[1810214] _end<~>[1810214]
      }
    }
    (1068708 'move' ret[1068659] ch[1068650])
    label _end<~>[1810214]
    (1068712 return ret[1068659])
  }
  function <~>[1408363](const  ref arg ch[1408365]:_ref(channel(true,dynamic,false))[1060956], const  ref arg x[1408367]:ioLiteral[238753], ref arg error_out[1813128]:Error[167938]) const ref : _ref(channel(true,dynamic,false))[1060956] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1408374]:_ref(channel(true,dynamic,false))[1060956] "dead after last mention" "RVV" "temp"
    {
      val error[1813132]:Error[167938] "error variable" "temp"
      (1813141 'move' error[1813132] nil[44])
      (1408447 call readwrite[1408457] ch[1408365] x[1408367] error[1813132])
      val errorExists[2110328]:bool[10] "temp"
      (2110333 'move' errorExists[2110328](2110330 '!=' error[1813132] nil[44]))
      if errorExists[2110328]
      {
        gotoErrorHandling handler[1813133] handler[1813133]
      }
      label handler[1813133]
      const-val shouldHandleError[1813152]:bool[10] "temp"
      val errorExists[2110336]:bool[10] "temp"
      (2110341 'move' errorExists[2110336](2110338 '!=' error[1813132] nil[44]))
      (1813156 'move' shouldHandleError[1813152] errorExists[2110336])
      if shouldHandleError[1813152]
      {
        (1813148 '=' error_out[1813128] error[1813132])
        gotoErrorHandlingReturn _end<~>[1813130] _end<~>[1813130]
      }
    }
    (1408450 'move' ret[1408374] ch[1408365])
    label _end<~>[1813130]
    (1408454 return ret[1408374])
  }
  function <~>[1421590](const  ref arg ch[1421592]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1421594]:real(64)[16], ref arg error_out[1813318]:Error[167938]) const ref : _ref(channel(true,dynamic,false))[1060956] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1421601]:_ref(channel(true,dynamic,false))[1060956] "dead after last mention" "RVV" "temp"
    {
      val error[1813322]:Error[167938] "error variable" "temp"
      (1813331 'move' error[1813322] nil[44])
      (1421647 call readwrite[1421663] ch[1421592] x[1421594] error[1813322])
      val errorExists[2110424]:bool[10] "temp"
      (2110429 'move' errorExists[2110424](2110426 '!=' error[1813322] nil[44]))
      if errorExists[2110424]
      {
        gotoErrorHandling handler[1813323] handler[1813323]
      }
      label handler[1813323]
      const-val shouldHandleError[1813342]:bool[10] "temp"
      val errorExists[2110432]:bool[10] "temp"
      (2110437 'move' errorExists[2110432](2110434 '!=' error[1813322] nil[44]))
      (1813346 'move' shouldHandleError[1813342] errorExists[2110432])
      if shouldHandleError[1813342]
      {
        (1813338 '=' error_out[1813318] error[1813322])
        gotoErrorHandlingReturn _end<~>[1813320] _end<~>[1813320]
      }
    }
    (1421650 'move' ret[1421601] ch[1421592])
    label _end<~>[1813320]
    (1421654 return ret[1421601])
  }
  function _ref(channel(true,dynamic,false))[1060956].binary[1401775](const  ref arg this[1401781]:_ref(channel(true,dynamic,false))[1060956]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1401785]:bool[10] "dead after last mention" "RVV" "temp"
    val ret[1401793]:uint(8)[100] "dead at end of block" "insert auto destroy"
    val call_tmp[1401795]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1401917 'move' ret[1401793] 0)
    const-val tmp[1401806]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1401808]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1401810 'move' call_tmp[1401808](1401813 call home[1061755] this[1401781]))
    const-val call_tmp[1401816]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1401885]:BaseLocale[91201] "dead after last mention" "temp"
    (1401890 'move' _locale_tmp_[1401885](1401887 call _value[89981] call_tmp[1401808]))
    (1401818 'move' call_tmp[1401816](1401820 '_wide_get_locale' _locale_tmp_[1401885]))
    (1401822 'move' tmp[1401806] call_tmp[1401816])
    val isdirect[2094696]:bool[10] "temp"
    (2094701 'move' isdirect[2094696](2094698 call chpl_doDirectExecuteOn[187423] tmp[1401806]))
    if isdirect[2094696]
    {
      (2094705 call on_fn[1401829] this[1401781] ret[1401793])
    }
    {
      val _args_foron_fn[2094723]:_class_localson_fn[2094713] "temp"
      (2094727 'move' _args_foron_fn[2094723](2094725 'stack allocate class' _class_localson_fn[2094713]))
      (2094729 '.=' _args_foron_fn[2094723] _0_tmp[2094716] tmp[1401806])
      ref tmp[2094733]:channel(true,dynamic,false)[1060947] "temp"
      (2094737 'move' tmp[2094733](2094735 'set reference' this[1401781]))
      (2094739 '.=' _args_foron_fn[2094723] _1_this[2094718] tmp[2094733])
      ref tmp[2094743]:uint(8)[100] "temp"
      (2094747 'move' tmp[2094743](2094745 'set reference' ret[1401793]))
      (2094749 '.=' _args_foron_fn[2094723] _2_ret[2094720] tmp[2094743])
      val _args_vforon_fn[2094753]:c_void_ptr[149] "temp"
      (2094757 'move' _args_vforon_fn[2094753](2094755 'cast_to_void_star' _args_foron_fn[2094723]))
      val _args_sizeon_fn[2094759]:int(64)[13] "temp"
      (2094763 'move' _args_sizeon_fn[2094759](2094761 'sizeof_bundle' _class_localson_fn[2094713]))
      on(2094803 call wrapon_fn[2094765] tmp[1401806] _args_vforon_fn[2094753] _args_sizeon_fn[2094759] _args_foron_fn[2094723])
    }
    {
    }
    const-val call_tmp[1401860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1401904]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1401910 'move' coerce_tmp[1401904](1401906 'cast' uint(8)[100] 0))
    (1401862 'move' call_tmp[1401860](1401865 call !=[436034] ret[1401793] coerce_tmp[1401904]))
    (1401914 'move' ret[1401785] call_tmp[1401860])
    gotoReturn _end_binary[1401877] _end_binary[1401877]
    label _end_binary[1401877]
    (1401879 return ret[1401785])
  }
  function _ref(channel(true,dynamic,false))[1060956].styleElement[1400739](const  ref arg this[1400745]:_ref(channel(true,dynamic,false))[1060956], const in arg element[1400747]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1400751]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1400759]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1400761 'move' ret[1400759] 0)
    const-val tmp[1400766]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1400768]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1400770 'move' call_tmp[1400768](1400773 call home[1061755] this[1400745]))
    const-val call_tmp[1400776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1400836]:BaseLocale[91201] "dead after last mention" "temp"
    (1400841 'move' _locale_tmp_[1400836](1400838 call _value[89981] call_tmp[1400768]))
    (1400778 'move' call_tmp[1400776](1400780 '_wide_get_locale' _locale_tmp_[1400836]))
    (1400782 'move' tmp[1400766] call_tmp[1400776])
    val isdirect[2094569]:bool[10] "temp"
    (2094574 'move' isdirect[2094569](2094571 call chpl_doDirectExecuteOn[187423] tmp[1400766]))
    if isdirect[2094569]
    {
      (2094578 call on_fn[1400789] this[1400745] element[1400747] ret[1400759])
    }
    {
      val _args_foron_fn[2094599]:_class_localson_fn[2094587] "temp"
      (2094603 'move' _args_foron_fn[2094599](2094601 'stack allocate class' _class_localson_fn[2094587]))
      (2094605 '.=' _args_foron_fn[2094599] _0_tmp[2094590] tmp[1400766])
      ref tmp[2094609]:channel(true,dynamic,false)[1060947] "temp"
      (2094613 'move' tmp[2094609](2094611 'set reference' this[1400745]))
      (2094615 '.=' _args_foron_fn[2094599] _1_this[2094592] tmp[2094609])
      (2094619 '.=' _args_foron_fn[2094599] _2_element[2094594] element[1400747])
      ref tmp[2094623]:int(64)[13] "temp"
      (2094627 'move' tmp[2094623](2094625 'set reference' ret[1400759]))
      (2094629 '.=' _args_foron_fn[2094599] _3_ret[2094596] tmp[2094623])
      val _args_vforon_fn[2094633]:c_void_ptr[149] "temp"
      (2094637 'move' _args_vforon_fn[2094633](2094635 'cast_to_void_star' _args_foron_fn[2094599]))
      val _args_sizeon_fn[2094639]:int(64)[13] "temp"
      (2094643 'move' _args_sizeon_fn[2094639](2094641 'sizeof_bundle' _class_localson_fn[2094587]))
      on(2094691 call wrapon_fn[2094645] tmp[1400766] _args_vforon_fn[2094633] _args_sizeon_fn[2094639] _args_foron_fn[2094599])
    }
    {
    }
    (1400858 'move' ret[1400751] ret[1400759])
    gotoReturn _end_styleElement[1400830] _end_styleElement[1400830]
    label _end_styleElement[1400830]
    (1400832 return ret[1400751])
  }
  function _ref(channel(true,dynamic,false))[1060956].writeBytes[1407802](const  ref arg this[1407808]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1407810]:_ddata(real(64))[1357916], const in arg len[1407814]:int(64)[13], ref arg error_out[1813049]:Error[167938]) : bool[10] throws "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1407818]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1407828]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1407830 'move' call_tmp[1407828](1407833 call ENOERR[223654]))
    val err[1407834]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1407942]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1408032 call =[224133] init_coerce_tmp[1407942] call_tmp[1407828])
    (1407836 'move' err[1407834] init_coerce_tmp[1407942])
    const-val tmp[1407841]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1407843]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1407845 'move' call_tmp[1407843](1407848 call home[1061755] this[1407808]))
    const-val call_tmp[1407851]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1407949]:BaseLocale[91201] "dead after last mention" "temp"
    (1407954 'move' _locale_tmp_[1407949](1407951 call _value[89981] call_tmp[1407843]))
    (1407853 'move' call_tmp[1407851](1407855 '_wide_get_locale' _locale_tmp_[1407949]))
    (1407857 'move' tmp[1407841] call_tmp[1407851])
    val error[1813054]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813056 'move' error[1813054] nil[44])
    val isdirect[2094808]:bool[10] "temp"
    (2094813 'move' isdirect[2094808](2094810 call chpl_doDirectExecuteOn[187423] tmp[1407841]))
    if isdirect[2094808]
    {
      (2094817 call on_fn[1407864] this[1407808] x[1407810] len[1407814] err[1407834] error[1813054])
    }
    {
      val _args_foron_fn[2094844]:_class_localson_fn[2094828] "temp"
      (2094848 'move' _args_foron_fn[2094844](2094846 'stack allocate class' _class_localson_fn[2094828]))
      (2094850 '.=' _args_foron_fn[2094844] _0_tmp[2094831] tmp[1407841])
      ref tmp[2094854]:channel(true,dynamic,false)[1060947] "temp"
      (2094858 'move' tmp[2094854](2094856 'set reference' this[1407808]))
      (2094860 '.=' _args_foron_fn[2094844] _1_this[2094833] tmp[2094854])
      (2094864 '.=' _args_foron_fn[2094844] _2_x[2094835] x[1407810])
      (2094868 '.=' _args_foron_fn[2094844] _3_len[2094837] len[1407814])
      ref tmp[2094872]:syserr[223584] "temp"
      (2094876 'move' tmp[2094872](2094874 'set reference' err[1407834]))
      (2094878 '.=' _args_foron_fn[2094844] _4_err[2094839] tmp[2094872])
      ref tmp[2094882]:Error[167938] "temp"
      (2094886 'move' tmp[2094882](2094884 'set reference' error[1813054]))
      (2094888 '.=' _args_foron_fn[2094844] _5_error[2094841] tmp[2094882])
      val _args_vforon_fn[2094892]:c_void_ptr[149] "temp"
      (2094896 'move' _args_vforon_fn[2094892](2094894 'cast_to_void_star' _args_foron_fn[2094844]))
      val _args_sizeon_fn[2094898]:int(64)[13] "temp"
      (2094902 'move' _args_sizeon_fn[2094898](2094900 'sizeof_bundle' _class_localson_fn[2094828]))
      on(2094966 call wrapon_fn[2094904] tmp[1407841] _args_vforon_fn[2094892] _args_sizeon_fn[2094898] _args_foron_fn[2094844])
    }
    val errorExists[2110288]:bool[10] "temp"
    (2110293 'move' errorExists[2110288](2110290 '!=' error[1813054] nil[44]))
    if errorExists[2110288]
    {
      (1813060 '=' error_out[1813049] error[1813054])
      gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
    }
    {
    }
    const-val call_tmp[1407912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1407914 'move' call_tmp[1407912](1407917 call _cond_test[223981] err[1407834]))
    if call_tmp[1407912]
    {
      {
        val error[1813068]:Error[167938] "error variable" "temp"
        (1813077 'move' error[1813068] nil[44])
        (1407926 call _ch_ioerror[1062865] this[1407808] err[1407834] "in channel.writeBytes()" error[1813068])
        val errorExists[2110296]:bool[10] "temp"
        (2110301 'move' errorExists[2110296](2110298 '!=' error[1813068] nil[44]))
        if errorExists[2110296]
        {
          gotoErrorHandling handler[1813069] handler[1813069]
        }
        label handler[1813069]
        const-val shouldHandleError[1813088]:bool[10] "temp"
        val errorExists[2110304]:bool[10] "temp"
        (2110309 'move' errorExists[2110304](2110306 '!=' error[1813068] nil[44]))
        (1813092 'move' shouldHandleError[1813088] errorExists[2110304])
        if shouldHandleError[1813088]
        {
          (1813084 '=' error_out[1813049] error[1813068])
          gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
        }
      }
    }
    (1407933 'move' ret[1407818] 1)
    label _endwriteBytes[1813051]
    (1407938 return ret[1407818])
  }
  function stringify[958787](const in arg _e0_args[958789]:c_string[19], ref arg _retArg[1832047]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[958799]:1*c_string[959462] "insert auto destroy"
    const-val ret_tmp[1832055]:1*c_string[959462] "temp"
    (958804 call chpl__init_tuple[959480] _e0_args[958789] ret_tmp[1832055])
    (1832058 'move' args[958799] ret_tmp[1832055])
    const-val ret[958793]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[958825]:string[26] "dead at end of block" "insert auto destroy"
      (958827 'move' str[958825](1832051 call chpl__initCopy[981348] ""))
      {
        const-val i[958832]:int(64)[13] "dead at end of block" "insert auto destroy"
        (958834 'move' i[958832] 0)
        {
          {
            {
              {
                {
                  val error[1809115]:Error[167938] "error variable" "temp"
                  (1809131 'move' error[1809115] nil[44])
                  ref call_tmp[963704]:_ref(c_string)[937227] "dead after last mention" "maybe param" "temp"
                  (963706 'move' call_tmp[963704](964021 '.' args[958799] x0[959460]))
                  const-val call_tmp[963711]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val coerce_tmp[964039]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (964043 'move' coerce_tmp[964039](964041 'deref' call_tmp[963704]))
                  const-val default_arg_length[964070]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  (964075 'move' default_arg_length[964070](964072 call createStringWithNewBuffer_default_length[964046] coerce_tmp[964039] error[1809115]))
                  val errorExists[2108424]:bool[10] "temp"
                  (2108429 'move' errorExists[2108424](2108426 '!=' error[1809115] nil[44]))
                  if errorExists[2108424]
                  {
                    gotoErrorHandling handler[1809116] handler[1809116]
                  }
                  const-val ret_tmp[1829057]:string[26] "temp"
                  (963716 call createStringWithNewBuffer[30410] coerce_tmp[964039] default_arg_length[964070] replace[173648] error[1809115] ret_tmp[1829057])
                  (1829060 'move' call_tmp[963711] ret_tmp[1829057])
                  val errorExists[2108432]:bool[10] "temp"
                  (2108437 'move' errorExists[2108432](2108434 '!=' error[1809115] nil[44]))
                  if errorExists[2108432]
                  {
                    gotoErrorHandling handler[1809116] handler[1809116]
                  }
                  (963721 call +=[38797] str[958825] call_tmp[963711])
                  (1842648 call chpl__autoDestroy[1461530] call_tmp[963711])
                  label handler[1809116]
                  const-val shouldHandleError[1809140]:bool[10] "temp"
                  val errorExists[2108440]:bool[10] "temp"
                  (2108445 'move' errorExists[2108440](2108442 '!=' error[1809115] nil[44]))
                  (1809144 'move' shouldHandleError[1809140] errorExists[2108440])
                  if shouldHandleError[1809140]
                  {
                    (1809137 call chpl_uncaught_error[170243] error[1809115])
                  }
                }
              }
            }
          }
        }
        label _continueLabel0[963622]
        label _unused_continueLabel[959223]
        label _breakLabel[959225]
      }
      (980860 'move' ret[958793] str[958825])
      (1842651 call chpl__autoDestroy[1465237] args[958799])
      gotoReturn _end_stringify[959450] _end_stringify[959450]
    }
    (1842654 call chpl__autoDestroy[1465237] args[958799])
    label _end_stringify[959450]
    (1832049 '=' _retArg[1832047] ret[958793])
    (1832053 return _void[55])
  }
  function stringify[1056406](const  ref arg _e0_args[1056408]:byteIndex[28170], ref arg _retArg[1832999]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1056418]:1*byteIndex[1057081] "insert auto destroy"
    const-val ret_tmp[1833005]:1*byteIndex[1057081] "temp"
    (1056423 call chpl__init_tuple[1057099] _e0_args[1056408] ret_tmp[1833005])
    (1833008 'move' args[1056418] ret_tmp[1833005])
    const-val ret[1056412]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1809520]:Error[167938] "error variable" "temp"
        (1809705 'move' error[1809520] nil[44])
        const-val call_tmp[1056857]:file[235580] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1060579]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1060583 'move' default_arg_style[1060579](1060581 call openmem_default_style[1060559] error[1809520]))
        val errorExists[2108592]:bool[10] "temp"
        (2108597 'move' errorExists[2108592](2108594 '!=' error[1809520] nil[44]))
        if errorExists[2108592]
        {
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val ret_tmp[1831503]:file[235580] "temp"
        (1056862 call openmem[237625] default_arg_style[1060579] error[1809520] ret_tmp[1831503])
        (1831506 'move' call_tmp[1056857] ret_tmp[1831503])
        val errorExists[2108600]:bool[10] "temp"
        (2108605 'move' errorExists[2108600](2108602 '!=' error[1809520] nil[44]))
        if errorExists[2108600]
        {
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val f[1056863]:file[235580] "dead at end of block" "insert auto destroy"
        (1056865 'move' f[1056863] call_tmp[1056857])
        const-val call_tmp[1056880]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1061189]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061195 'move' default_arg_start[1061189](1061191 call writer_default_start[1061153] f[1056863] error[1809520]))
        val errorExists[2108608]:bool[10] "temp"
        (2108613 'move' errorExists[2108608](2108610 '!=' error[1809520] nil[44]))
        if errorExists[2108608]
        {
          {
            val error[1843090]:Error[167938] "error variable" "temp"
            (1843092 'move' error[1843090] nil[44])
            (1843096 call close[236024] f[1056863] error[1843090])
            val errorExists[2110712]:bool[10] "temp"
            (2110717 'move' errorExists[2110712](2110714 '!=' error[1843090] nil[44]))
            if errorExists[2110712]
            {
              gotoErrorHandling handler[1843107] handler[1843107]
            }
            label handler[1843107]
            const-val shouldHandleError[1843109]:bool[10] "temp"
            val errorExists[2110720]:bool[10] "temp"
            (2110725 'move' errorExists[2110720](2110722 '!=' error[1843090] nil[44]))
            (1843111 'move' shouldHandleError[1843109] errorExists[2110720])
            if shouldHandleError[1843109]
            {
              (1843118 call chpl_uncaught_error[170243] error[1843090])
            }
          }
          (1843121 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_end[1061252]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061258 'move' default_arg_end[1061252](1061254 call writer_default_end[1061199] f[1056863] error[1809520]))
        val errorExists[2108616]:bool[10] "temp"
        (2108621 'move' errorExists[2108616](2108618 '!=' error[1809520] nil[44]))
        if errorExists[2108616]
        {
          {
            val error[1843126]:Error[167938] "error variable" "temp"
            (1843128 'move' error[1843126] nil[44])
            (1843132 call close[236024] f[1056863] error[1843126])
            val errorExists[2110728]:bool[10] "temp"
            (2110733 'move' errorExists[2110728](2110730 '!=' error[1843126] nil[44]))
            if errorExists[2110728]
            {
              gotoErrorHandling handler[1843143] handler[1843143]
            }
            label handler[1843143]
            const-val shouldHandleError[1843145]:bool[10] "temp"
            val errorExists[2110736]:bool[10] "temp"
            (2110741 'move' errorExists[2110736](2110738 '!=' error[1843126] nil[44]))
            (1843147 'move' shouldHandleError[1843145] errorExists[2110736])
            if shouldHandleError[1843145]
            {
              (1843154 call chpl_uncaught_error[170243] error[1843126])
            }
          }
          (1843157 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_hints[1061302]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061308 'move' default_arg_hints[1061302](1061304 call writer_default_hints[1061262] f[1056863] error[1809520]))
        val errorExists[2108624]:bool[10] "temp"
        (2108629 'move' errorExists[2108624](2108626 '!=' error[1809520] nil[44]))
        if errorExists[2108624]
        {
          {
            val error[1843162]:Error[167938] "error variable" "temp"
            (1843164 'move' error[1843162] nil[44])
            (1843168 call close[236024] f[1056863] error[1843162])
            val errorExists[2110744]:bool[10] "temp"
            (2110749 'move' errorExists[2110744](2110746 '!=' error[1843162] nil[44]))
            if errorExists[2110744]
            {
              gotoErrorHandling handler[1843179] handler[1843179]
            }
            label handler[1843179]
            const-val shouldHandleError[1843181]:bool[10] "temp"
            val errorExists[2110752]:bool[10] "temp"
            (2110757 'move' errorExists[2110752](2110754 '!=' error[1843162] nil[44]))
            (1843183 'move' shouldHandleError[1843181] errorExists[2110752])
            if shouldHandleError[1843181]
            {
              (1843190 call chpl_uncaught_error[170243] error[1843162])
            }
          }
          (1843193 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_style[1061338]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1061344 'move' default_arg_style[1061338](1061340 call writer_default_style[1061312] f[1056863] error[1809520]))
        val errorExists[2108632]:bool[10] "temp"
        (2108637 'move' errorExists[2108632](2108634 '!=' error[1809520] nil[44]))
        if errorExists[2108632]
        {
          {
            val error[1843198]:Error[167938] "error variable" "temp"
            (1843200 'move' error[1843198] nil[44])
            (1843204 call close[236024] f[1056863] error[1843198])
            val errorExists[2110760]:bool[10] "temp"
            (2110765 'move' errorExists[2110760](2110762 '!=' error[1843198] nil[44]))
            if errorExists[2110760]
            {
              gotoErrorHandling handler[1843215] handler[1843215]
            }
            label handler[1843215]
            const-val shouldHandleError[1843217]:bool[10] "temp"
            val errorExists[2110768]:bool[10] "temp"
            (2110773 'move' errorExists[2110768](2110770 '!=' error[1843198] nil[44]))
            (1843219 'move' shouldHandleError[1843217] errorExists[2110768])
            if shouldHandleError[1843217]
            {
              (1843226 call chpl_uncaught_error[170243] error[1843198])
            }
          }
          (1843229 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val ret_tmp[1833023]:channel(true,dynamic,false)[1060947] "temp"
        (1056888 call writer[1060853] f[1056863] default_arg_start[1061189] default_arg_end[1061252] default_arg_hints[1061302] default_arg_style[1061338] error[1809520] ret_tmp[1833023])
        (1833026 'move' call_tmp[1056880] ret_tmp[1833023])
        val errorExists[2108640]:bool[10] "temp"
        (2108645 'move' errorExists[2108640](2108642 '!=' error[1809520] nil[44]))
        if errorExists[2108640]
        {
          {
            val error[1843234]:Error[167938] "error variable" "temp"
            (1843236 'move' error[1843234] nil[44])
            (1843240 call close[236024] f[1056863] error[1843234])
            val errorExists[2110776]:bool[10] "temp"
            (2110781 'move' errorExists[2110776](2110778 '!=' error[1843234] nil[44]))
            if errorExists[2110776]
            {
              gotoErrorHandling handler[1843251] handler[1843251]
            }
            label handler[1843251]
            const-val shouldHandleError[1843253]:bool[10] "temp"
            val errorExists[2110784]:bool[10] "temp"
            (2110789 'move' errorExists[2110784](2110786 '!=' error[1843234] nil[44]))
            (1843255 'move' shouldHandleError[1843253] errorExists[2110784])
            if shouldHandleError[1843253]
            {
              (1843262 call chpl_uncaught_error[170243] error[1843234])
            }
          }
          (1843265 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val w[1056891]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
        (1056893 'move' w[1056891] call_tmp[1056880])
        ref _tuple_expand_tmp_0[1065730]:_ref(byteIndex)[948759] "dead after last mention" "temp"
        (1065736 'move' _tuple_expand_tmp_0[1065730](1065740 '.v' args[1056418] x0[1057079]))
        const-val _return_tmp_[1800572]:bool[10] "dead after last mention" "temp"
        (1800574 'move' _return_tmp_[1800572](1056912 call write[1065956] w[1056891] _tuple_expand_tmp_0[1065730] error[1809520]))
        val errorExists[2108648]:bool[10] "temp"
        (2108653 'move' errorExists[2108648](2108650 '!=' error[1809520] nil[44]))
        if errorExists[2108648]
        {
          {
            val error[1843270]:Error[167938] "error variable" "temp"
            (1843272 'move' error[1843270] nil[44])
            (1843276 call close[1062362] w[1056891] error[1843270])
            val errorExists[2110792]:bool[10] "temp"
            (2110797 'move' errorExists[2110792](2110794 '!=' error[1843270] nil[44]))
            if errorExists[2110792]
            {
              gotoErrorHandling handler[1843287] handler[1843287]
            }
            label handler[1843287]
            const-val shouldHandleError[1843289]:bool[10] "temp"
            val errorExists[2110800]:bool[10] "temp"
            (2110805 'move' errorExists[2110800](2110802 '!=' error[1843270] nil[44]))
            (1843291 'move' shouldHandleError[1843289] errorExists[2110800])
            if shouldHandleError[1843289]
            {
              (1843298 call chpl_uncaught_error[170243] error[1843270])
            }
          }
          (1843301 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843306]:Error[167938] "error variable" "temp"
            (1843308 'move' error[1843306] nil[44])
            (1843312 call close[236024] f[1056863] error[1843306])
            val errorExists[2110808]:bool[10] "temp"
            (2110813 'move' errorExists[2110808](2110810 '!=' error[1843306] nil[44]))
            if errorExists[2110808]
            {
              gotoErrorHandling handler[1843323] handler[1843323]
            }
            label handler[1843323]
            const-val shouldHandleError[1843325]:bool[10] "temp"
            val errorExists[2110816]:bool[10] "temp"
            (2110821 'move' errorExists[2110816](2110818 '!=' error[1843306] nil[44]))
            (1843327 'move' shouldHandleError[1843325] errorExists[2110816])
            if shouldHandleError[1843325]
            {
              (1843334 call chpl_uncaught_error[170243] error[1843306])
            }
          }
          (1843337 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val call_tmp[1056917]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1056919 'move' call_tmp[1056917](1056925 call offset[1080148] w[1056891]))
        const-val offset[1056926]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1056928 'move' offset[1056926] call_tmp[1056917])
        val call_tmp[1056932]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1056939]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1056941 'move' call_tmp[1056939](1056944 call +[949666] offset[1056926]))
        val call_tmp[1056947]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
        (1056949 'move' call_tmp[1056947](1056952 call c_malloc[1080303] call_tmp[1056939]))
        val buf[1056955]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
        (1056957 'move' buf[1056955](1080585 call chpl__initCopy[954030] call_tmp[1056947]))
        const-val call_tmp[1056961]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1080924]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080930 'move' default_arg_start[1080924](1080926 call reader_default_start[1080888] f[1056863] error[1809520]))
        val errorExists[2108656]:bool[10] "temp"
        (2108661 'move' errorExists[2108656](2108658 '!=' error[1809520] nil[44]))
        if errorExists[2108656]
        {
          {
            val error[1843342]:Error[167938] "error variable" "temp"
            (1843344 'move' error[1843342] nil[44])
            (1843348 call close[1062362] w[1056891] error[1843342])
            val errorExists[2110824]:bool[10] "temp"
            (2110829 'move' errorExists[2110824](2110826 '!=' error[1843342] nil[44]))
            if errorExists[2110824]
            {
              gotoErrorHandling handler[1843359] handler[1843359]
            }
            label handler[1843359]
            const-val shouldHandleError[1843361]:bool[10] "temp"
            val errorExists[2110832]:bool[10] "temp"
            (2110837 'move' errorExists[2110832](2110834 '!=' error[1843342] nil[44]))
            (1843363 'move' shouldHandleError[1843361] errorExists[2110832])
            if shouldHandleError[1843361]
            {
              (1843370 call chpl_uncaught_error[170243] error[1843342])
            }
          }
          (1843373 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843378]:Error[167938] "error variable" "temp"
            (1843380 'move' error[1843378] nil[44])
            (1843384 call close[236024] f[1056863] error[1843378])
            val errorExists[2110840]:bool[10] "temp"
            (2110845 'move' errorExists[2110840](2110842 '!=' error[1843378] nil[44]))
            if errorExists[2110840]
            {
              gotoErrorHandling handler[1843395] handler[1843395]
            }
            label handler[1843395]
            const-val shouldHandleError[1843397]:bool[10] "temp"
            val errorExists[2110848]:bool[10] "temp"
            (2110853 'move' errorExists[2110848](2110850 '!=' error[1843378] nil[44]))
            (1843399 'move' shouldHandleError[1843397] errorExists[2110848])
            if shouldHandleError[1843397]
            {
              (1843406 call chpl_uncaught_error[170243] error[1843378])
            }
          }
          (1843409 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_end[1080987]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1080993 'move' default_arg_end[1080987](1080989 call reader_default_end[1080934] f[1056863] error[1809520]))
        val errorExists[2108664]:bool[10] "temp"
        (2108669 'move' errorExists[2108664](2108666 '!=' error[1809520] nil[44]))
        if errorExists[2108664]
        {
          {
            val error[1843414]:Error[167938] "error variable" "temp"
            (1843416 'move' error[1843414] nil[44])
            (1843420 call close[1062362] w[1056891] error[1843414])
            val errorExists[2110856]:bool[10] "temp"
            (2110861 'move' errorExists[2110856](2110858 '!=' error[1843414] nil[44]))
            if errorExists[2110856]
            {
              gotoErrorHandling handler[1843431] handler[1843431]
            }
            label handler[1843431]
            const-val shouldHandleError[1843433]:bool[10] "temp"
            val errorExists[2110864]:bool[10] "temp"
            (2110869 'move' errorExists[2110864](2110866 '!=' error[1843414] nil[44]))
            (1843435 'move' shouldHandleError[1843433] errorExists[2110864])
            if shouldHandleError[1843433]
            {
              (1843442 call chpl_uncaught_error[170243] error[1843414])
            }
          }
          (1843445 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843450]:Error[167938] "error variable" "temp"
            (1843452 'move' error[1843450] nil[44])
            (1843456 call close[236024] f[1056863] error[1843450])
            val errorExists[2110872]:bool[10] "temp"
            (2110877 'move' errorExists[2110872](2110874 '!=' error[1843450] nil[44]))
            if errorExists[2110872]
            {
              gotoErrorHandling handler[1843467] handler[1843467]
            }
            label handler[1843467]
            const-val shouldHandleError[1843469]:bool[10] "temp"
            val errorExists[2110880]:bool[10] "temp"
            (2110885 'move' errorExists[2110880](2110882 '!=' error[1843450] nil[44]))
            (1843471 'move' shouldHandleError[1843469] errorExists[2110880])
            if shouldHandleError[1843469]
            {
              (1843478 call chpl_uncaught_error[170243] error[1843450])
            }
          }
          (1843481 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_hints[1081034]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081040 'move' default_arg_hints[1081034](1081036 call reader_default_hints[1080997] f[1056863] error[1809520]))
        val errorExists[2108672]:bool[10] "temp"
        (2108677 'move' errorExists[2108672](2108674 '!=' error[1809520] nil[44]))
        if errorExists[2108672]
        {
          {
            val error[1843486]:Error[167938] "error variable" "temp"
            (1843488 'move' error[1843486] nil[44])
            (1843492 call close[1062362] w[1056891] error[1843486])
            val errorExists[2110888]:bool[10] "temp"
            (2110893 'move' errorExists[2110888](2110890 '!=' error[1843486] nil[44]))
            if errorExists[2110888]
            {
              gotoErrorHandling handler[1843503] handler[1843503]
            }
            label handler[1843503]
            const-val shouldHandleError[1843505]:bool[10] "temp"
            val errorExists[2110896]:bool[10] "temp"
            (2110901 'move' errorExists[2110896](2110898 '!=' error[1843486] nil[44]))
            (1843507 'move' shouldHandleError[1843505] errorExists[2110896])
            if shouldHandleError[1843505]
            {
              (1843514 call chpl_uncaught_error[170243] error[1843486])
            }
          }
          (1843517 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843522]:Error[167938] "error variable" "temp"
            (1843524 'move' error[1843522] nil[44])
            (1843528 call close[236024] f[1056863] error[1843522])
            val errorExists[2110904]:bool[10] "temp"
            (2110909 'move' errorExists[2110904](2110906 '!=' error[1843522] nil[44]))
            if errorExists[2110904]
            {
              gotoErrorHandling handler[1843539] handler[1843539]
            }
            label handler[1843539]
            const-val shouldHandleError[1843541]:bool[10] "temp"
            val errorExists[2110912]:bool[10] "temp"
            (2110917 'move' errorExists[2110912](2110914 '!=' error[1843522] nil[44]))
            (1843543 'move' shouldHandleError[1843541] errorExists[2110912])
            if shouldHandleError[1843541]
            {
              (1843550 call chpl_uncaught_error[170243] error[1843522])
            }
          }
          (1843553 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val default_arg_style[1081070]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1081076 'move' default_arg_style[1081070](1081072 call reader_default_style[1081044] f[1056863] error[1809520]))
        val errorExists[2108680]:bool[10] "temp"
        (2108685 'move' errorExists[2108680](2108682 '!=' error[1809520] nil[44]))
        if errorExists[2108680]
        {
          {
            val error[1843558]:Error[167938] "error variable" "temp"
            (1843560 'move' error[1843558] nil[44])
            (1843564 call close[1062362] w[1056891] error[1843558])
            val errorExists[2110920]:bool[10] "temp"
            (2110925 'move' errorExists[2110920](2110922 '!=' error[1843558] nil[44]))
            if errorExists[2110920]
            {
              gotoErrorHandling handler[1843575] handler[1843575]
            }
            label handler[1843575]
            const-val shouldHandleError[1843577]:bool[10] "temp"
            val errorExists[2110928]:bool[10] "temp"
            (2110933 'move' errorExists[2110928](2110930 '!=' error[1843558] nil[44]))
            (1843579 'move' shouldHandleError[1843577] errorExists[2110928])
            if shouldHandleError[1843577]
            {
              (1843586 call chpl_uncaught_error[170243] error[1843558])
            }
          }
          (1843589 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843594]:Error[167938] "error variable" "temp"
            (1843596 'move' error[1843594] nil[44])
            (1843600 call close[236024] f[1056863] error[1843594])
            val errorExists[2110936]:bool[10] "temp"
            (2110941 'move' errorExists[2110936](2110938 '!=' error[1843594] nil[44]))
            if errorExists[2110936]
            {
              gotoErrorHandling handler[1843611] handler[1843611]
            }
            label handler[1843611]
            const-val shouldHandleError[1843613]:bool[10] "temp"
            val errorExists[2110944]:bool[10] "temp"
            (2110949 'move' errorExists[2110944](2110946 '!=' error[1843594] nil[44]))
            (1843615 'move' shouldHandleError[1843613] errorExists[2110944])
            if shouldHandleError[1843613]
            {
              (1843622 call chpl_uncaught_error[170243] error[1843594])
            }
          }
          (1843625 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val ret_tmp[1833425]:channel(false,dynamic,false)[1080682] "temp"
        (1056969 call reader[1080588] f[1056863] default_arg_start[1080924] default_arg_end[1080987] default_arg_hints[1081034] default_arg_style[1081070] error[1809520] ret_tmp[1833425])
        (1833428 'move' call_tmp[1056961] ret_tmp[1833425])
        val errorExists[2108688]:bool[10] "temp"
        (2108693 'move' errorExists[2108688](2108690 '!=' error[1809520] nil[44]))
        if errorExists[2108688]
        {
          {
            val error[1843630]:Error[167938] "error variable" "temp"
            (1843632 'move' error[1843630] nil[44])
            (1843636 call close[1062362] w[1056891] error[1843630])
            val errorExists[2110952]:bool[10] "temp"
            (2110957 'move' errorExists[2110952](2110954 '!=' error[1843630] nil[44]))
            if errorExists[2110952]
            {
              gotoErrorHandling handler[1843647] handler[1843647]
            }
            label handler[1843647]
            const-val shouldHandleError[1843649]:bool[10] "temp"
            val errorExists[2110960]:bool[10] "temp"
            (2110965 'move' errorExists[2110960](2110962 '!=' error[1843630] nil[44]))
            (1843651 'move' shouldHandleError[1843649] errorExists[2110960])
            if shouldHandleError[1843649]
            {
              (1843658 call chpl_uncaught_error[170243] error[1843630])
            }
          }
          (1843661 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843666]:Error[167938] "error variable" "temp"
            (1843668 'move' error[1843666] nil[44])
            (1843672 call close[236024] f[1056863] error[1843666])
            val errorExists[2110968]:bool[10] "temp"
            (2110973 'move' errorExists[2110968](2110970 '!=' error[1843666] nil[44]))
            if errorExists[2110968]
            {
              gotoErrorHandling handler[1843683] handler[1843683]
            }
            label handler[1843683]
            const-val shouldHandleError[1843685]:bool[10] "temp"
            val errorExists[2110976]:bool[10] "temp"
            (2110981 'move' errorExists[2110976](2110978 '!=' error[1843666] nil[44]))
            (1843687 'move' shouldHandleError[1843685] errorExists[2110976])
            if shouldHandleError[1843685]
            {
              (1843694 call chpl_uncaught_error[170243] error[1843666])
            }
          }
          (1843697 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val r[1056972]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
        (1056974 'move' r[1056972] call_tmp[1056961])
        const-val call_tmp[1056989]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1056991 'move' call_tmp[1056989] offset[1056926])
        (1057001 call readBytes[1082839] r[1056972] buf[1056955] call_tmp[1056989] error[1809520])
        val errorExists[2108696]:bool[10] "temp"
        (2108701 'move' errorExists[2108696](2108698 '!=' error[1809520] nil[44]))
        if errorExists[2108696]
        {
          {
            val error[1843702]:Error[167938] "error variable" "temp"
            (1843704 'move' error[1843702] nil[44])
            (1843708 call close[1082094] r[1056972] error[1843702])
            val errorExists[2110984]:bool[10] "temp"
            (2110989 'move' errorExists[2110984](2110986 '!=' error[1843702] nil[44]))
            if errorExists[2110984]
            {
              gotoErrorHandling handler[1843719] handler[1843719]
            }
            label handler[1843719]
            const-val shouldHandleError[1843721]:bool[10] "temp"
            val errorExists[2110992]:bool[10] "temp"
            (2110997 'move' errorExists[2110992](2110994 '!=' error[1843702] nil[44]))
            (1843723 'move' shouldHandleError[1843721] errorExists[2110992])
            if shouldHandleError[1843721]
            {
              (1843730 call chpl_uncaught_error[170243] error[1843702])
            }
          }
          (1843733 call chpl__autoDestroy[1540568] r[1056972])
          {
            val error[1843738]:Error[167938] "error variable" "temp"
            (1843740 'move' error[1843738] nil[44])
            (1843744 call close[1062362] w[1056891] error[1843738])
            val errorExists[2111000]:bool[10] "temp"
            (2111005 'move' errorExists[2111000](2111002 '!=' error[1843738] nil[44]))
            if errorExists[2111000]
            {
              gotoErrorHandling handler[1843755] handler[1843755]
            }
            label handler[1843755]
            const-val shouldHandleError[1843757]:bool[10] "temp"
            val errorExists[2111008]:bool[10] "temp"
            (2111013 'move' errorExists[2111008](2111010 '!=' error[1843738] nil[44]))
            (1843759 'move' shouldHandleError[1843757] errorExists[2111008])
            if shouldHandleError[1843757]
            {
              (1843766 call chpl_uncaught_error[170243] error[1843738])
            }
          }
          (1843769 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843774]:Error[167938] "error variable" "temp"
            (1843776 'move' error[1843774] nil[44])
            (1843780 call close[236024] f[1056863] error[1843774])
            val errorExists[2111016]:bool[10] "temp"
            (2111021 'move' errorExists[2111016](2111018 '!=' error[1843774] nil[44]))
            if errorExists[2111016]
            {
              gotoErrorHandling handler[1843791] handler[1843791]
            }
            label handler[1843791]
            const-val shouldHandleError[1843793]:bool[10] "temp"
            val errorExists[2111024]:bool[10] "temp"
            (2111029 'move' errorExists[2111024](2111026 '!=' error[1843774] nil[44]))
            (1843795 'move' shouldHandleError[1843793] errorExists[2111024])
            if shouldHandleError[1843793]
            {
              (1843802 call chpl_uncaught_error[170243] error[1843774])
            }
          }
          (1843805 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        ref call_tmp[1057008]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        (1057010 'move' call_tmp[1057008](1057013 call this[954091] buf[1056955] offset[1056926]))
        const-val coerce_tmp[1083332]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083338 'move' coerce_tmp[1083332](1083334 'cast' uint(8)[100] 0))
        (1057016 call =[435348] call_tmp[1057008] coerce_tmp[1083332])
        const-val call_tmp[1057022]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1057024 'move' call_tmp[1057022](1057027 call +[949666] offset[1056926]))
        const-val call_tmp[1057030]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829117]:string[26] "temp"
        (1057035 call createStringWithNewBuffer[30490] buf[1056955] offset[1056926] call_tmp[1057022] replace[173648] error[1809520] ret_tmp[1829117])
        (1829120 'move' call_tmp[1057030] ret_tmp[1829117])
        val errorExists[2108704]:bool[10] "temp"
        (2108709 'move' errorExists[2108704](2108706 '!=' error[1809520] nil[44]))
        if errorExists[2108704]
        {
          {
            val error[1843810]:Error[167938] "error variable" "temp"
            (1843812 'move' error[1843810] nil[44])
            (1843816 call close[1082094] r[1056972] error[1843810])
            val errorExists[2111032]:bool[10] "temp"
            (2111037 'move' errorExists[2111032](2111034 '!=' error[1843810] nil[44]))
            if errorExists[2111032]
            {
              gotoErrorHandling handler[1843827] handler[1843827]
            }
            label handler[1843827]
            const-val shouldHandleError[1843829]:bool[10] "temp"
            val errorExists[2111040]:bool[10] "temp"
            (2111045 'move' errorExists[2111040](2111042 '!=' error[1843810] nil[44]))
            (1843831 'move' shouldHandleError[1843829] errorExists[2111040])
            if shouldHandleError[1843829]
            {
              (1843838 call chpl_uncaught_error[170243] error[1843810])
            }
          }
          (1843841 call chpl__autoDestroy[1540568] r[1056972])
          {
            val error[1843846]:Error[167938] "error variable" "temp"
            (1843848 'move' error[1843846] nil[44])
            (1843852 call close[1062362] w[1056891] error[1843846])
            val errorExists[2111048]:bool[10] "temp"
            (2111053 'move' errorExists[2111048](2111050 '!=' error[1843846] nil[44]))
            if errorExists[2111048]
            {
              gotoErrorHandling handler[1843863] handler[1843863]
            }
            label handler[1843863]
            const-val shouldHandleError[1843865]:bool[10] "temp"
            val errorExists[2111056]:bool[10] "temp"
            (2111061 'move' errorExists[2111056](2111058 '!=' error[1843846] nil[44]))
            (1843867 'move' shouldHandleError[1843865] errorExists[2111056])
            if shouldHandleError[1843865]
            {
              (1843874 call chpl_uncaught_error[170243] error[1843846])
            }
          }
          (1843877 call chpl__autoDestroy[1536314] w[1056891])
          {
            val error[1843882]:Error[167938] "error variable" "temp"
            (1843884 'move' error[1843882] nil[44])
            (1843888 call close[236024] f[1056863] error[1843882])
            val errorExists[2111064]:bool[10] "temp"
            (2111069 'move' errorExists[2111064](2111066 '!=' error[1843882] nil[44]))
            if errorExists[2111064]
            {
              gotoErrorHandling handler[1843899] handler[1843899]
            }
            label handler[1843899]
            const-val shouldHandleError[1843901]:bool[10] "temp"
            val errorExists[2111072]:bool[10] "temp"
            (2111077 'move' errorExists[2111072](2111074 '!=' error[1843882] nil[44]))
            (1843903 'move' shouldHandleError[1843901] errorExists[2111072])
            if shouldHandleError[1843901]
            {
              (1843910 call chpl_uncaught_error[170243] error[1843882])
            }
          }
          (1843913 call chpl__autoDestroy[1463349] f[1056863])
          gotoErrorHandling handler[1809521] handler[1809521]
        }
        const-val ret[1057040]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1057042 'move' ret[1057040] call_tmp[1057030])
        const-val coerce_tmp[1083343]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083349 'move' coerce_tmp[1083343](1083345 'cast' c_void_ptr[149] buf[1056955]))
        (1057054 call c_free[207852] coerce_tmp[1083343])
        (1083354 'move' ret[1056412] ret[1057040])
        {
          val error[1843918]:Error[167938] "error variable" "temp"
          (1843920 'move' error[1843918] nil[44])
          (1843924 call close[1082094] r[1056972] error[1843918])
          val errorExists[2111080]:bool[10] "temp"
          (2111085 'move' errorExists[2111080](2111082 '!=' error[1843918] nil[44]))
          if errorExists[2111080]
          {
            gotoErrorHandling handler[1843935] handler[1843935]
          }
          label handler[1843935]
          const-val shouldHandleError[1843937]:bool[10] "temp"
          val errorExists[2111088]:bool[10] "temp"
          (2111093 'move' errorExists[2111088](2111090 '!=' error[1843918] nil[44]))
          (1843939 'move' shouldHandleError[1843937] errorExists[2111088])
          if shouldHandleError[1843937]
          {
            (1843946 call chpl_uncaught_error[170243] error[1843918])
          }
        }
        (1843949 call chpl__autoDestroy[1540568] r[1056972])
        {
          val error[1843954]:Error[167938] "error variable" "temp"
          (1843956 'move' error[1843954] nil[44])
          (1843960 call close[1062362] w[1056891] error[1843954])
          val errorExists[2111096]:bool[10] "temp"
          (2111101 'move' errorExists[2111096](2111098 '!=' error[1843954] nil[44]))
          if errorExists[2111096]
          {
            gotoErrorHandling handler[1843971] handler[1843971]
          }
          label handler[1843971]
          const-val shouldHandleError[1843973]:bool[10] "temp"
          val errorExists[2111104]:bool[10] "temp"
          (2111109 'move' errorExists[2111104](2111106 '!=' error[1843954] nil[44]))
          (1843975 'move' shouldHandleError[1843973] errorExists[2111104])
          if shouldHandleError[1843973]
          {
            (1843982 call chpl_uncaught_error[170243] error[1843954])
          }
        }
        (1843985 call chpl__autoDestroy[1536314] w[1056891])
        {
          val error[1843990]:Error[167938] "error variable" "temp"
          (1843992 'move' error[1843990] nil[44])
          (1843996 call close[236024] f[1056863] error[1843990])
          val errorExists[2111112]:bool[10] "temp"
          (2111117 'move' errorExists[2111112](2111114 '!=' error[1843990] nil[44]))
          if errorExists[2111112]
          {
            gotoErrorHandling handler[1844007] handler[1844007]
          }
          label handler[1844007]
          const-val shouldHandleError[1844009]:bool[10] "temp"
          val errorExists[2111120]:bool[10] "temp"
          (2111125 'move' errorExists[2111120](2111122 '!=' error[1843990] nil[44]))
          (1844011 'move' shouldHandleError[1844009] errorExists[2111120])
          if shouldHandleError[1844009]
          {
            (1844018 call chpl_uncaught_error[170243] error[1843990])
          }
        }
        (1844021 call chpl__autoDestroy[1463349] f[1056863])
        (1844024 call chpl__autoDestroy[1535252] args[1056418])
        gotoReturn _end_stringify[1057069] _end_stringify[1057069]
        label handler[1809521]
        const-val shouldHandleError[1809714]:bool[10] "temp"
        val errorExists[2108712]:bool[10] "temp"
        (2108717 'move' errorExists[2108712](2108714 '!=' error[1809520] nil[44]))
        (1809718 'move' shouldHandleError[1809714] errorExists[2108712])
        if shouldHandleError[1809714]
        {
          (1809711 call chpl_uncaught_error[170243] error[1809520])
        }
      }
    }
    (1844027 call chpl__autoDestroy[1535252] args[1056418])
    label _end_stringify[1057069]
    (1833001 '=' _retArg[1832999] ret[1056412])
    (1833003 return _void[55])
  }
  function stringify[1043702](const  ref arg _e0_args[1043704]:string[26], const in arg _e1_args[1043706]:range(byteIndex,bounded,false)[1025792], const  ref arg _e2_args[1043708]:string[26], const in arg _e3_args[1043710]:int(64)[13], ref arg _retArg[1832917]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1043726]:(string,range(byteIndex,bounded,false),string,int(64))[1044401] "insert auto destroy"
    const-val ret_tmp[1832927]:(string,range(byteIndex,bounded,false),string,int(64))[1044401] "temp"
    (1043731 call chpl__init_tuple[1044416] _e0_args[1043704] _e1_args[1043706] _e2_args[1043708] _e3_args[1043710] ret_tmp[1832927])
    (1832930 'move' args[1043726] ret_tmp[1832927])
    const-val ret[1043714]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1043755]:string[26] "dead at end of block" "insert auto destroy"
      (1043757 'move' str[1043755](1832923 call chpl__initCopy[981348] ""))
      {
        const-val i[1043762]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1043764 'move' i[1043762] 0)
        {
          {
            {
              ref call_tmp[1052880]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1052882 'move' call_tmp[1052880](1054255 '.v' args[1043726] x0[1044393]))
              (1052888 call +=[38797] str[1043755] call_tmp[1052880])
            }
          }
        }
        label _continueLabel0[1052845]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1053456]:_ref(range(byteIndex,bounded,false))[1025801] "dead after last mention" "maybe param" "temp"
                    (1053458 'move' call_tmp[1053456](1054355 '.' args[1043726] x1[1044395]))
                    const-val call_tmp[1053463]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1054626]:range(byteIndex,bounded,false)[1025792] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1054630 'move' coerce_tmp[1054626](1832921 call chpl__initCopy[1044510] call_tmp[1053456]))
                    const-val ret_tmp[1832951]:string[26] "temp"
                    (1053468 call _cast[1054358] coerce_tmp[1054626] ret_tmp[1832951])
                    (1832954 'move' call_tmp[1053463] ret_tmp[1832951])
                    (1053472 call +=[38797] str[1043755] call_tmp[1053463])
                    (1843043 call chpl__autoDestroy[1461530] call_tmp[1053463])
                    (1843046 call chpl__autoDestroy[1534330] coerce_tmp[1054626])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1053190]
        {
          {
            {
              ref call_tmp[1053570]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1053572 'move' call_tmp[1053570](1084744 '.v' args[1043726] x2[1044397]))
              (1053578 call +=[38797] str[1043755] call_tmp[1053570])
            }
          }
        }
        label _continueLabel2[1053535]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1054146]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1054148 'move' call_tmp[1054146](1084851 '.' args[1043726] x3[1044399]))
                    const-val call_tmp[1054153]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1084854]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1084858 'move' coerce_tmp[1084854](1084856 'deref' call_tmp[1054146]))
                    const-val ret_tmp[1833077]:string[26] "temp"
                    (1054158 call _cast[1063153] coerce_tmp[1084854] ret_tmp[1833077])
                    (1833080 'move' call_tmp[1054153] ret_tmp[1833077])
                    (1054162 call +=[38797] str[1043755] call_tmp[1054153])
                    (1843050 call chpl__autoDestroy[1461530] call_tmp[1054153])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1053880]
        label _unused_continueLabel[1044153]
        label _breakLabel[1044155]
      }
      (1084863 'move' ret[1043714] str[1043755])
      (1843053 call chpl__autoDestroy[1534837] args[1043726])
      gotoReturn _end_stringify[1044380] _end_stringify[1044380]
    }
    (1843056 call chpl__autoDestroy[1534837] args[1043726])
    label _end_stringify[1044380]
    (1832919 '=' _retArg[1832917] ret[1043714])
    (1832925 return _void[55])
  }
  function stringify[1113520](const  ref arg _e0_args[1113522]:string[26], const in arg _e1_args[1113524]:range(int(64),bounded,false)[1026814], const  ref arg _e2_args[1113526]:string[26], const in arg _e3_args[1113528]:int(64)[13], ref arg _retArg[1833990]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1113544]:(string,range(int(64),bounded,false),string,int(64))[1114219] "insert auto destroy"
    const-val ret_tmp[1834000]:(string,range(int(64),bounded,false),string,int(64))[1114219] "temp"
    (1113549 call chpl__init_tuple[1114234] _e0_args[1113522] _e1_args[1113524] _e2_args[1113526] _e3_args[1113528] ret_tmp[1834000])
    (1834003 'move' args[1113544] ret_tmp[1834000])
    const-val ret[1113532]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1113573]:string[26] "dead at end of block" "insert auto destroy"
      (1113575 'move' str[1113573](1833996 call chpl__initCopy[981348] ""))
      {
        const-val i[1113580]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113582 'move' i[1113580] 0)
        {
          {
            {
              ref call_tmp[1117959]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1117961 'move' call_tmp[1117959](1119334 '.v' args[1113544] x0[1114211]))
              (1117967 call +=[38797] str[1113573] call_tmp[1117959])
            }
          }
        }
        label _continueLabel0[1117924]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1118535]:_ref(range(int(64),bounded,false))[1026858] "dead after last mention" "maybe param" "temp"
                    (1118537 'move' call_tmp[1118535](1119434 '.' args[1113544] x1[1114213]))
                    const-val call_tmp[1118542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1119705]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1119709 'move' coerce_tmp[1119705](1833994 call chpl__initCopy[1085006] call_tmp[1118535]))
                    const-val ret_tmp[1834012]:string[26] "temp"
                    (1118547 call _cast[1119437] coerce_tmp[1119705] ret_tmp[1834012])
                    (1834015 'move' call_tmp[1118542] ret_tmp[1834012])
                    (1118551 call +=[38797] str[1113573] call_tmp[1118542])
                    (1844506 call chpl__autoDestroy[1461530] call_tmp[1118542])
                    (1844509 call chpl__autoDestroy[1534375] coerce_tmp[1119705])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1118269]
        {
          {
            {
              ref call_tmp[1118649]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1118651 'move' call_tmp[1118649](1120780 '.v' args[1113544] x2[1114215]))
              (1118657 call +=[38797] str[1113573] call_tmp[1118649])
            }
          }
        }
        label _continueLabel2[1118614]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1119225]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1119227 'move' call_tmp[1119225](1120887 '.' args[1113544] x3[1114217]))
                    const-val call_tmp[1119232]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1120890]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1120894 'move' coerce_tmp[1120890](1120892 'deref' call_tmp[1119225]))
                    const-val ret_tmp[1833101]:string[26] "temp"
                    (1119237 call _cast[1063153] coerce_tmp[1120890] ret_tmp[1833101])
                    (1833104 'move' call_tmp[1119232] ret_tmp[1833101])
                    (1119241 call +=[38797] str[1113573] call_tmp[1119232])
                    (1844513 call chpl__autoDestroy[1461530] call_tmp[1119232])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1118959]
        label _unused_continueLabel[1113971]
        label _breakLabel[1113973]
      }
      (1120899 'move' ret[1113532] str[1113573])
      (1844516 call chpl__autoDestroy[1541809] args[1113544])
      gotoReturn _end_stringify[1114198] _end_stringify[1114198]
    }
    (1844519 call chpl__autoDestroy[1541809] args[1113544])
    label _end_stringify[1114198]
    (1833992 '=' _retArg[1833990] ret[1113532])
    (1833998 return _void[55])
  }
  function stringify[1128344](const  ref arg _e0_args[1128346]:string[26], const in arg _e1_args[1128348]:range(int(64),boundedLow,false)[1087565], const  ref arg _e2_args[1128350]:string[26], const in arg _e3_args[1128352]:int(64)[13], ref arg _retArg[1834284]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1128368]:(string,range(int(64),boundedLow,false),string,int(64))[1129043] "insert auto destroy"
    const-val ret_tmp[1834294]:(string,range(int(64),boundedLow,false),string,int(64))[1129043] "temp"
    (1128373 call chpl__init_tuple[1129058] _e0_args[1128346] _e1_args[1128348] _e2_args[1128350] _e3_args[1128352] ret_tmp[1834294])
    (1834297 'move' args[1128368] ret_tmp[1834294])
    const-val ret[1128356]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1128397]:string[26] "dead at end of block" "insert auto destroy"
      (1128399 'move' str[1128397](1834290 call chpl__initCopy[981348] ""))
      {
        const-val i[1128404]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1128406 'move' i[1128404] 0)
        {
          {
            {
              ref call_tmp[1134482]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1134484 'move' call_tmp[1134482](1135857 '.v' args[1128368] x0[1129035]))
              (1134490 call +=[38797] str[1128397] call_tmp[1134482])
            }
          }
        }
        label _continueLabel0[1134447]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135058]:_ref(range(int(64),boundedLow,false))[1087609] "dead after last mention" "maybe param" "temp"
                    (1135060 'move' call_tmp[1135058](1135957 '.' args[1128368] x1[1129037]))
                    const-val call_tmp[1135065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1136228]:range(int(64),boundedLow,false)[1087565] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1136232 'move' coerce_tmp[1136228](1834288 call chpl__initCopy[1129152] call_tmp[1135058]))
                    const-val ret_tmp[1834306]:string[26] "temp"
                    (1135070 call _cast[1135960] coerce_tmp[1136228] ret_tmp[1834306])
                    (1834309 'move' call_tmp[1135065] ret_tmp[1834306])
                    (1135074 call +=[38797] str[1128397] call_tmp[1135065])
                    (1844714 call chpl__autoDestroy[1461530] call_tmp[1135065])
                    (1844717 call chpl__autoDestroy[1540744] coerce_tmp[1136228])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1134792]
        {
          {
            {
              ref call_tmp[1135172]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1135174 'move' call_tmp[1135172](1138834 '.v' args[1128368] x2[1129039]))
              (1135180 call +=[38797] str[1128397] call_tmp[1135172])
            }
          }
        }
        label _continueLabel2[1135137]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135748]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1135750 'move' call_tmp[1135748](1138941 '.' args[1128368] x3[1129041]))
                    const-val call_tmp[1135755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1138944]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1138948 'move' coerce_tmp[1138944](1138946 'deref' call_tmp[1135748]))
                    const-val ret_tmp[1833119]:string[26] "temp"
                    (1135760 call _cast[1063153] coerce_tmp[1138944] ret_tmp[1833119])
                    (1833122 'move' call_tmp[1135755] ret_tmp[1833119])
                    (1135764 call +=[38797] str[1128397] call_tmp[1135755])
                    (1844721 call chpl__autoDestroy[1461530] call_tmp[1135755])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1135482]
        label _unused_continueLabel[1128795]
        label _breakLabel[1128797]
      }
      (1138953 'move' ret[1128356] str[1128397])
      (1844724 call chpl__autoDestroy[1542592] args[1128368])
      gotoReturn _end_stringify[1129022] _end_stringify[1129022]
    }
    (1844727 call chpl__autoDestroy[1542592] args[1128368])
    label _end_stringify[1129022]
    (1834286 '=' _retArg[1834284] ret[1128356])
    (1834292 return _void[55])
  }
  function stringify[1146515](const  ref arg _e0_args[1146517]:string[26], const in arg _e1_args[1146519]:range(byteIndex,boundedLow,false)[1143403], const  ref arg _e2_args[1146521]:string[26], const in arg _e3_args[1146523]:int(64)[13], ref arg _retArg[1834548]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1146539]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147214] "insert auto destroy"
    const-val ret_tmp[1834558]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147214] "temp"
    (1146544 call chpl__init_tuple[1147229] _e0_args[1146517] _e1_args[1146519] _e2_args[1146521] _e3_args[1146523] ret_tmp[1834558])
    (1834561 'move' args[1146539] ret_tmp[1834558])
    const-val ret[1146527]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1146568]:string[26] "dead at end of block" "insert auto destroy"
      (1146570 'move' str[1146568](1834554 call chpl__initCopy[981348] ""))
      {
        const-val i[1146575]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1146577 'move' i[1146575] 0)
        {
          {
            {
              ref call_tmp[1152946]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1152948 'move' call_tmp[1152946](1154321 '.v' args[1146539] x0[1147206]))
              (1152954 call +=[38797] str[1146568] call_tmp[1152946])
            }
          }
        }
        label _continueLabel0[1152911]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1153522]:_ref(range(byteIndex,boundedLow,false))[1143447] "dead after last mention" "maybe param" "temp"
                    (1153524 'move' call_tmp[1153522](1154421 '.' args[1146539] x1[1147208]))
                    const-val call_tmp[1153529]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1154692]:range(byteIndex,boundedLow,false)[1143403] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1154696 'move' coerce_tmp[1154692](1834552 call chpl__initCopy[1147323] call_tmp[1153522]))
                    const-val ret_tmp[1834588]:string[26] "temp"
                    (1153534 call _cast[1154424] coerce_tmp[1154692] ret_tmp[1834588])
                    (1834591 'move' call_tmp[1153529] ret_tmp[1834588])
                    (1153538 call +=[38797] str[1146568] call_tmp[1153529])
                    (1844833 call chpl__autoDestroy[1461530] call_tmp[1153529])
                    (1844836 call chpl__autoDestroy[1542826] coerce_tmp[1154692])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1153256]
        {
          {
            {
              ref call_tmp[1153636]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1153638 'move' call_tmp[1153636](1156155 '.v' args[1146539] x2[1147210]))
              (1153644 call +=[38797] str[1146568] call_tmp[1153636])
            }
          }
        }
        label _continueLabel2[1153601]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1154212]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1154214 'move' call_tmp[1154212](1156262 '.' args[1146539] x3[1147212]))
                    const-val call_tmp[1154219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1156265]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1156269 'move' coerce_tmp[1156265](1156267 'deref' call_tmp[1154212]))
                    const-val ret_tmp[1833137]:string[26] "temp"
                    (1154224 call _cast[1063153] coerce_tmp[1156265] ret_tmp[1833137])
                    (1833140 'move' call_tmp[1154219] ret_tmp[1833137])
                    (1154228 call +=[38797] str[1146568] call_tmp[1154219])
                    (1844840 call chpl__autoDestroy[1461530] call_tmp[1154219])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1153946]
        label _unused_continueLabel[1146966]
        label _breakLabel[1146968]
      }
      (1156274 'move' ret[1146527] str[1146568])
      (1844843 call chpl__autoDestroy[1542991] args[1146539])
      gotoReturn _end_stringify[1147193] _end_stringify[1147193]
    }
    (1844846 call chpl__autoDestroy[1542991] args[1146539])
    label _end_stringify[1147193]
    (1834550 '=' _retArg[1834548] ret[1146527])
    (1834556 return _void[55])
  }
  function stringify[1175821](const  ref arg _e0_args[1175823]:string[26], const  ref arg _e1_args[1175825]:codepointIndex[28274], const  ref arg _e2_args[1175827]:string[26], const in arg _e3_args[1175829]:int(64)[13], ref arg _retArg[1834664]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1175845]:(string,codepointIndex,string,int(64))[1176520] "insert auto destroy"
    const-val ret_tmp[1834670]:(string,codepointIndex,string,int(64))[1176520] "temp"
    (1175850 call chpl__init_tuple[1176535] _e0_args[1175823] _e1_args[1175825] _e2_args[1175827] _e3_args[1175829] ret_tmp[1834670])
    (1834673 'move' args[1175845] ret_tmp[1834670])
    const-val ret[1175833]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1811311]:Error[167938] "error variable" "temp"
        (1811496 'move' error[1811311] nil[44])
        const-val call_tmp[1176287]:file[235580] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1179625]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179629 'move' default_arg_style[1179625](1179627 call openmem_default_style[1060559] error[1811311]))
        val errorExists[2109480]:bool[10] "temp"
        (2109485 'move' errorExists[2109480](2109482 '!=' error[1811311] nil[44]))
        if errorExists[2109480]
        {
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val ret_tmp[1831515]:file[235580] "temp"
        (1176292 call openmem[237625] default_arg_style[1179625] error[1811311] ret_tmp[1831515])
        (1831518 'move' call_tmp[1176287] ret_tmp[1831515])
        val errorExists[2109488]:bool[10] "temp"
        (2109493 'move' errorExists[2109488](2109490 '!=' error[1811311] nil[44]))
        if errorExists[2109488]
        {
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val f[1176293]:file[235580] "dead at end of block" "insert auto destroy"
        (1176295 'move' f[1176293] call_tmp[1176287])
        const-val call_tmp[1176310]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1179654]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179660 'move' default_arg_start[1179654](1179656 call writer_default_start[1061153] f[1176293] error[1811311]))
        val errorExists[2109496]:bool[10] "temp"
        (2109501 'move' errorExists[2109496](2109498 '!=' error[1811311] nil[44]))
        if errorExists[2109496]
        {
          {
            val error[1845952]:Error[167938] "error variable" "temp"
            (1845954 'move' error[1845952] nil[44])
            (1845958 call close[236024] f[1176293] error[1845952])
            val errorExists[2111544]:bool[10] "temp"
            (2111549 'move' errorExists[2111544](2111546 '!=' error[1845952] nil[44]))
            if errorExists[2111544]
            {
              gotoErrorHandling handler[1845969] handler[1845969]
            }
            label handler[1845969]
            const-val shouldHandleError[1845971]:bool[10] "temp"
            val errorExists[2111552]:bool[10] "temp"
            (2111557 'move' errorExists[2111552](2111554 '!=' error[1845952] nil[44]))
            (1845973 'move' shouldHandleError[1845971] errorExists[2111552])
            if shouldHandleError[1845971]
            {
              (1845980 call chpl_uncaught_error[170243] error[1845952])
            }
          }
          (1845983 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_end[1179664]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179670 'move' default_arg_end[1179664](1179666 call writer_default_end[1061199] f[1176293] error[1811311]))
        val errorExists[2109504]:bool[10] "temp"
        (2109509 'move' errorExists[2109504](2109506 '!=' error[1811311] nil[44]))
        if errorExists[2109504]
        {
          {
            val error[1845988]:Error[167938] "error variable" "temp"
            (1845990 'move' error[1845988] nil[44])
            (1845994 call close[236024] f[1176293] error[1845988])
            val errorExists[2111560]:bool[10] "temp"
            (2111565 'move' errorExists[2111560](2111562 '!=' error[1845988] nil[44]))
            if errorExists[2111560]
            {
              gotoErrorHandling handler[1846005] handler[1846005]
            }
            label handler[1846005]
            const-val shouldHandleError[1846007]:bool[10] "temp"
            val errorExists[2111568]:bool[10] "temp"
            (2111573 'move' errorExists[2111568](2111570 '!=' error[1845988] nil[44]))
            (1846009 'move' shouldHandleError[1846007] errorExists[2111568])
            if shouldHandleError[1846007]
            {
              (1846016 call chpl_uncaught_error[170243] error[1845988])
            }
          }
          (1846019 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_hints[1179674]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179680 'move' default_arg_hints[1179674](1179676 call writer_default_hints[1061262] f[1176293] error[1811311]))
        val errorExists[2109512]:bool[10] "temp"
        (2109517 'move' errorExists[2109512](2109514 '!=' error[1811311] nil[44]))
        if errorExists[2109512]
        {
          {
            val error[1846024]:Error[167938] "error variable" "temp"
            (1846026 'move' error[1846024] nil[44])
            (1846030 call close[236024] f[1176293] error[1846024])
            val errorExists[2111576]:bool[10] "temp"
            (2111581 'move' errorExists[2111576](2111578 '!=' error[1846024] nil[44]))
            if errorExists[2111576]
            {
              gotoErrorHandling handler[1846041] handler[1846041]
            }
            label handler[1846041]
            const-val shouldHandleError[1846043]:bool[10] "temp"
            val errorExists[2111584]:bool[10] "temp"
            (2111589 'move' errorExists[2111584](2111586 '!=' error[1846024] nil[44]))
            (1846045 'move' shouldHandleError[1846043] errorExists[2111584])
            if shouldHandleError[1846043]
            {
              (1846052 call chpl_uncaught_error[170243] error[1846024])
            }
          }
          (1846055 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_style[1179684]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179690 'move' default_arg_style[1179684](1179686 call writer_default_style[1061312] f[1176293] error[1811311]))
        val errorExists[2109520]:bool[10] "temp"
        (2109525 'move' errorExists[2109520](2109522 '!=' error[1811311] nil[44]))
        if errorExists[2109520]
        {
          {
            val error[1846060]:Error[167938] "error variable" "temp"
            (1846062 'move' error[1846060] nil[44])
            (1846066 call close[236024] f[1176293] error[1846060])
            val errorExists[2111592]:bool[10] "temp"
            (2111597 'move' errorExists[2111592](2111594 '!=' error[1846060] nil[44]))
            if errorExists[2111592]
            {
              gotoErrorHandling handler[1846077] handler[1846077]
            }
            label handler[1846077]
            const-val shouldHandleError[1846079]:bool[10] "temp"
            val errorExists[2111600]:bool[10] "temp"
            (2111605 'move' errorExists[2111600](2111602 '!=' error[1846060] nil[44]))
            (1846081 'move' shouldHandleError[1846079] errorExists[2111600])
            if shouldHandleError[1846079]
            {
              (1846088 call chpl_uncaught_error[170243] error[1846060])
            }
          }
          (1846091 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val ret_tmp[1833035]:channel(true,dynamic,false)[1060947] "temp"
        (1176318 call writer[1060853] f[1176293] default_arg_start[1179654] default_arg_end[1179664] default_arg_hints[1179674] default_arg_style[1179684] error[1811311] ret_tmp[1833035])
        (1833038 'move' call_tmp[1176310] ret_tmp[1833035])
        val errorExists[2109528]:bool[10] "temp"
        (2109533 'move' errorExists[2109528](2109530 '!=' error[1811311] nil[44]))
        if errorExists[2109528]
        {
          {
            val error[1846096]:Error[167938] "error variable" "temp"
            (1846098 'move' error[1846096] nil[44])
            (1846102 call close[236024] f[1176293] error[1846096])
            val errorExists[2111608]:bool[10] "temp"
            (2111613 'move' errorExists[2111608](2111610 '!=' error[1846096] nil[44]))
            if errorExists[2111608]
            {
              gotoErrorHandling handler[1846113] handler[1846113]
            }
            label handler[1846113]
            const-val shouldHandleError[1846115]:bool[10] "temp"
            val errorExists[2111616]:bool[10] "temp"
            (2111621 'move' errorExists[2111616](2111618 '!=' error[1846096] nil[44]))
            (1846117 'move' shouldHandleError[1846115] errorExists[2111616])
            if shouldHandleError[1846115]
            {
              (1846124 call chpl_uncaught_error[170243] error[1846096])
            }
          }
          (1846127 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val w[1176321]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
        (1176323 'move' w[1176321] call_tmp[1176310])
        ref _tuple_expand_tmp_0[1179696]:_ref(string)[937939] "dead after last mention" "temp"
        (1179702 'move' _tuple_expand_tmp_0[1179696](1179730 '.v' args[1175845] x0[1176512]))
        ref _tuple_expand_tmp_1[1179704]:_ref(codepointIndex)[948769] "dead after last mention" "temp"
        (1179710 'move' _tuple_expand_tmp_1[1179704](1179735 '.v' args[1175845] x1[1176514]))
        ref _tuple_expand_tmp_2[1179712]:_ref(string)[937939] "dead after last mention" "temp"
        (1179718 'move' _tuple_expand_tmp_2[1179712](1179740 '.v' args[1175845] x2[1176516]))
        ref _tuple_expand_tmp_3[1179720]:_ref(int(64))[936572] "dead after last mention" "temp"
        (1179726 'move' _tuple_expand_tmp_3[1179720](1179745 '.' args[1175845] x3[1176518]))
        const-val coerce_tmp[1180500]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180504 'move' coerce_tmp[1180500](1180502 'deref' _tuple_expand_tmp_3[1179720]))
        const-val _return_tmp_[1800596]:bool[10] "dead after last mention" "temp"
        (1800598 'move' _return_tmp_[1800596](1176342 call write[1179975] w[1176321] _tuple_expand_tmp_0[1179696] _tuple_expand_tmp_1[1179704] _tuple_expand_tmp_2[1179712] coerce_tmp[1180500] error[1811311]))
        val errorExists[2109536]:bool[10] "temp"
        (2109541 'move' errorExists[2109536](2109538 '!=' error[1811311] nil[44]))
        if errorExists[2109536]
        {
          {
            val error[1846132]:Error[167938] "error variable" "temp"
            (1846134 'move' error[1846132] nil[44])
            (1846138 call close[1062362] w[1176321] error[1846132])
            val errorExists[2111624]:bool[10] "temp"
            (2111629 'move' errorExists[2111624](2111626 '!=' error[1846132] nil[44]))
            if errorExists[2111624]
            {
              gotoErrorHandling handler[1846149] handler[1846149]
            }
            label handler[1846149]
            const-val shouldHandleError[1846151]:bool[10] "temp"
            val errorExists[2111632]:bool[10] "temp"
            (2111637 'move' errorExists[2111632](2111634 '!=' error[1846132] nil[44]))
            (1846153 'move' shouldHandleError[1846151] errorExists[2111632])
            if shouldHandleError[1846151]
            {
              (1846160 call chpl_uncaught_error[170243] error[1846132])
            }
          }
          (1846163 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846168]:Error[167938] "error variable" "temp"
            (1846170 'move' error[1846168] nil[44])
            (1846174 call close[236024] f[1176293] error[1846168])
            val errorExists[2111640]:bool[10] "temp"
            (2111645 'move' errorExists[2111640](2111642 '!=' error[1846168] nil[44]))
            if errorExists[2111640]
            {
              gotoErrorHandling handler[1846185] handler[1846185]
            }
            label handler[1846185]
            const-val shouldHandleError[1846187]:bool[10] "temp"
            val errorExists[2111648]:bool[10] "temp"
            (2111653 'move' errorExists[2111648](2111650 '!=' error[1846168] nil[44]))
            (1846189 'move' shouldHandleError[1846187] errorExists[2111648])
            if shouldHandleError[1846187]
            {
              (1846196 call chpl_uncaught_error[170243] error[1846168])
            }
          }
          (1846199 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val call_tmp[1176347]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1176349 'move' call_tmp[1176347](1176355 call offset[1080148] w[1176321]))
        const-val offset[1176356]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1176358 'move' offset[1176356] call_tmp[1176347])
        val call_tmp[1176362]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1176369]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176371 'move' call_tmp[1176369](1176374 call +[949666] offset[1176356]))
        val call_tmp[1176377]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
        (1176379 'move' call_tmp[1176377](1176382 call c_malloc[1080303] call_tmp[1176369]))
        val buf[1176385]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
        (1176387 'move' buf[1176385](1180714 call chpl__initCopy[954030] call_tmp[1176377]))
        const-val call_tmp[1176391]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1180737]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180743 'move' default_arg_start[1180737](1180739 call reader_default_start[1080888] f[1176293] error[1811311]))
        val errorExists[2109544]:bool[10] "temp"
        (2109549 'move' errorExists[2109544](2109546 '!=' error[1811311] nil[44]))
        if errorExists[2109544]
        {
          {
            val error[1846204]:Error[167938] "error variable" "temp"
            (1846206 'move' error[1846204] nil[44])
            (1846210 call close[1062362] w[1176321] error[1846204])
            val errorExists[2111656]:bool[10] "temp"
            (2111661 'move' errorExists[2111656](2111658 '!=' error[1846204] nil[44]))
            if errorExists[2111656]
            {
              gotoErrorHandling handler[1846221] handler[1846221]
            }
            label handler[1846221]
            const-val shouldHandleError[1846223]:bool[10] "temp"
            val errorExists[2111664]:bool[10] "temp"
            (2111669 'move' errorExists[2111664](2111666 '!=' error[1846204] nil[44]))
            (1846225 'move' shouldHandleError[1846223] errorExists[2111664])
            if shouldHandleError[1846223]
            {
              (1846232 call chpl_uncaught_error[170243] error[1846204])
            }
          }
          (1846235 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846240]:Error[167938] "error variable" "temp"
            (1846242 'move' error[1846240] nil[44])
            (1846246 call close[236024] f[1176293] error[1846240])
            val errorExists[2111672]:bool[10] "temp"
            (2111677 'move' errorExists[2111672](2111674 '!=' error[1846240] nil[44]))
            if errorExists[2111672]
            {
              gotoErrorHandling handler[1846257] handler[1846257]
            }
            label handler[1846257]
            const-val shouldHandleError[1846259]:bool[10] "temp"
            val errorExists[2111680]:bool[10] "temp"
            (2111685 'move' errorExists[2111680](2111682 '!=' error[1846240] nil[44]))
            (1846261 'move' shouldHandleError[1846259] errorExists[2111680])
            if shouldHandleError[1846259]
            {
              (1846268 call chpl_uncaught_error[170243] error[1846240])
            }
          }
          (1846271 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_end[1180747]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180753 'move' default_arg_end[1180747](1180749 call reader_default_end[1080934] f[1176293] error[1811311]))
        val errorExists[2109552]:bool[10] "temp"
        (2109557 'move' errorExists[2109552](2109554 '!=' error[1811311] nil[44]))
        if errorExists[2109552]
        {
          {
            val error[1846276]:Error[167938] "error variable" "temp"
            (1846278 'move' error[1846276] nil[44])
            (1846282 call close[1062362] w[1176321] error[1846276])
            val errorExists[2111688]:bool[10] "temp"
            (2111693 'move' errorExists[2111688](2111690 '!=' error[1846276] nil[44]))
            if errorExists[2111688]
            {
              gotoErrorHandling handler[1846293] handler[1846293]
            }
            label handler[1846293]
            const-val shouldHandleError[1846295]:bool[10] "temp"
            val errorExists[2111696]:bool[10] "temp"
            (2111701 'move' errorExists[2111696](2111698 '!=' error[1846276] nil[44]))
            (1846297 'move' shouldHandleError[1846295] errorExists[2111696])
            if shouldHandleError[1846295]
            {
              (1846304 call chpl_uncaught_error[170243] error[1846276])
            }
          }
          (1846307 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846312]:Error[167938] "error variable" "temp"
            (1846314 'move' error[1846312] nil[44])
            (1846318 call close[236024] f[1176293] error[1846312])
            val errorExists[2111704]:bool[10] "temp"
            (2111709 'move' errorExists[2111704](2111706 '!=' error[1846312] nil[44]))
            if errorExists[2111704]
            {
              gotoErrorHandling handler[1846329] handler[1846329]
            }
            label handler[1846329]
            const-val shouldHandleError[1846331]:bool[10] "temp"
            val errorExists[2111712]:bool[10] "temp"
            (2111717 'move' errorExists[2111712](2111714 '!=' error[1846312] nil[44]))
            (1846333 'move' shouldHandleError[1846331] errorExists[2111712])
            if shouldHandleError[1846331]
            {
              (1846340 call chpl_uncaught_error[170243] error[1846312])
            }
          }
          (1846343 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_hints[1180757]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180763 'move' default_arg_hints[1180757](1180759 call reader_default_hints[1080997] f[1176293] error[1811311]))
        val errorExists[2109560]:bool[10] "temp"
        (2109565 'move' errorExists[2109560](2109562 '!=' error[1811311] nil[44]))
        if errorExists[2109560]
        {
          {
            val error[1846348]:Error[167938] "error variable" "temp"
            (1846350 'move' error[1846348] nil[44])
            (1846354 call close[1062362] w[1176321] error[1846348])
            val errorExists[2111720]:bool[10] "temp"
            (2111725 'move' errorExists[2111720](2111722 '!=' error[1846348] nil[44]))
            if errorExists[2111720]
            {
              gotoErrorHandling handler[1846365] handler[1846365]
            }
            label handler[1846365]
            const-val shouldHandleError[1846367]:bool[10] "temp"
            val errorExists[2111728]:bool[10] "temp"
            (2111733 'move' errorExists[2111728](2111730 '!=' error[1846348] nil[44]))
            (1846369 'move' shouldHandleError[1846367] errorExists[2111728])
            if shouldHandleError[1846367]
            {
              (1846376 call chpl_uncaught_error[170243] error[1846348])
            }
          }
          (1846379 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846384]:Error[167938] "error variable" "temp"
            (1846386 'move' error[1846384] nil[44])
            (1846390 call close[236024] f[1176293] error[1846384])
            val errorExists[2111736]:bool[10] "temp"
            (2111741 'move' errorExists[2111736](2111738 '!=' error[1846384] nil[44]))
            if errorExists[2111736]
            {
              gotoErrorHandling handler[1846401] handler[1846401]
            }
            label handler[1846401]
            const-val shouldHandleError[1846403]:bool[10] "temp"
            val errorExists[2111744]:bool[10] "temp"
            (2111749 'move' errorExists[2111744](2111746 '!=' error[1846384] nil[44]))
            (1846405 'move' shouldHandleError[1846403] errorExists[2111744])
            if shouldHandleError[1846403]
            {
              (1846412 call chpl_uncaught_error[170243] error[1846384])
            }
          }
          (1846415 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val default_arg_style[1180767]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1180773 'move' default_arg_style[1180767](1180769 call reader_default_style[1081044] f[1176293] error[1811311]))
        val errorExists[2109568]:bool[10] "temp"
        (2109573 'move' errorExists[2109568](2109570 '!=' error[1811311] nil[44]))
        if errorExists[2109568]
        {
          {
            val error[1846420]:Error[167938] "error variable" "temp"
            (1846422 'move' error[1846420] nil[44])
            (1846426 call close[1062362] w[1176321] error[1846420])
            val errorExists[2111752]:bool[10] "temp"
            (2111757 'move' errorExists[2111752](2111754 '!=' error[1846420] nil[44]))
            if errorExists[2111752]
            {
              gotoErrorHandling handler[1846437] handler[1846437]
            }
            label handler[1846437]
            const-val shouldHandleError[1846439]:bool[10] "temp"
            val errorExists[2111760]:bool[10] "temp"
            (2111765 'move' errorExists[2111760](2111762 '!=' error[1846420] nil[44]))
            (1846441 'move' shouldHandleError[1846439] errorExists[2111760])
            if shouldHandleError[1846439]
            {
              (1846448 call chpl_uncaught_error[170243] error[1846420])
            }
          }
          (1846451 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846456]:Error[167938] "error variable" "temp"
            (1846458 'move' error[1846456] nil[44])
            (1846462 call close[236024] f[1176293] error[1846456])
            val errorExists[2111768]:bool[10] "temp"
            (2111773 'move' errorExists[2111768](2111770 '!=' error[1846456] nil[44]))
            if errorExists[2111768]
            {
              gotoErrorHandling handler[1846473] handler[1846473]
            }
            label handler[1846473]
            const-val shouldHandleError[1846475]:bool[10] "temp"
            val errorExists[2111776]:bool[10] "temp"
            (2111781 'move' errorExists[2111776](2111778 '!=' error[1846456] nil[44]))
            (1846477 'move' shouldHandleError[1846475] errorExists[2111776])
            if shouldHandleError[1846475]
            {
              (1846484 call chpl_uncaught_error[170243] error[1846456])
            }
          }
          (1846487 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val ret_tmp[1833437]:channel(false,dynamic,false)[1080682] "temp"
        (1176399 call reader[1080588] f[1176293] default_arg_start[1180737] default_arg_end[1180747] default_arg_hints[1180757] default_arg_style[1180767] error[1811311] ret_tmp[1833437])
        (1833440 'move' call_tmp[1176391] ret_tmp[1833437])
        val errorExists[2109576]:bool[10] "temp"
        (2109581 'move' errorExists[2109576](2109578 '!=' error[1811311] nil[44]))
        if errorExists[2109576]
        {
          {
            val error[1846492]:Error[167938] "error variable" "temp"
            (1846494 'move' error[1846492] nil[44])
            (1846498 call close[1062362] w[1176321] error[1846492])
            val errorExists[2111784]:bool[10] "temp"
            (2111789 'move' errorExists[2111784](2111786 '!=' error[1846492] nil[44]))
            if errorExists[2111784]
            {
              gotoErrorHandling handler[1846509] handler[1846509]
            }
            label handler[1846509]
            const-val shouldHandleError[1846511]:bool[10] "temp"
            val errorExists[2111792]:bool[10] "temp"
            (2111797 'move' errorExists[2111792](2111794 '!=' error[1846492] nil[44]))
            (1846513 'move' shouldHandleError[1846511] errorExists[2111792])
            if shouldHandleError[1846511]
            {
              (1846520 call chpl_uncaught_error[170243] error[1846492])
            }
          }
          (1846523 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846528]:Error[167938] "error variable" "temp"
            (1846530 'move' error[1846528] nil[44])
            (1846534 call close[236024] f[1176293] error[1846528])
            val errorExists[2111800]:bool[10] "temp"
            (2111805 'move' errorExists[2111800](2111802 '!=' error[1846528] nil[44]))
            if errorExists[2111800]
            {
              gotoErrorHandling handler[1846545] handler[1846545]
            }
            label handler[1846545]
            const-val shouldHandleError[1846547]:bool[10] "temp"
            val errorExists[2111808]:bool[10] "temp"
            (2111813 'move' errorExists[2111808](2111810 '!=' error[1846528] nil[44]))
            (1846549 'move' shouldHandleError[1846547] errorExists[2111808])
            if shouldHandleError[1846547]
            {
              (1846556 call chpl_uncaught_error[170243] error[1846528])
            }
          }
          (1846559 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val r[1176402]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
        (1176404 'move' r[1176402] call_tmp[1176391])
        const-val call_tmp[1176419]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1176421 'move' call_tmp[1176419] offset[1176356])
        (1176431 call readBytes[1082839] r[1176402] buf[1176385] call_tmp[1176419] error[1811311])
        val errorExists[2109584]:bool[10] "temp"
        (2109589 'move' errorExists[2109584](2109586 '!=' error[1811311] nil[44]))
        if errorExists[2109584]
        {
          {
            val error[1846564]:Error[167938] "error variable" "temp"
            (1846566 'move' error[1846564] nil[44])
            (1846570 call close[1082094] r[1176402] error[1846564])
            val errorExists[2111816]:bool[10] "temp"
            (2111821 'move' errorExists[2111816](2111818 '!=' error[1846564] nil[44]))
            if errorExists[2111816]
            {
              gotoErrorHandling handler[1846581] handler[1846581]
            }
            label handler[1846581]
            const-val shouldHandleError[1846583]:bool[10] "temp"
            val errorExists[2111824]:bool[10] "temp"
            (2111829 'move' errorExists[2111824](2111826 '!=' error[1846564] nil[44]))
            (1846585 'move' shouldHandleError[1846583] errorExists[2111824])
            if shouldHandleError[1846583]
            {
              (1846592 call chpl_uncaught_error[170243] error[1846564])
            }
          }
          (1846595 call chpl__autoDestroy[1540568] r[1176402])
          {
            val error[1846600]:Error[167938] "error variable" "temp"
            (1846602 'move' error[1846600] nil[44])
            (1846606 call close[1062362] w[1176321] error[1846600])
            val errorExists[2111832]:bool[10] "temp"
            (2111837 'move' errorExists[2111832](2111834 '!=' error[1846600] nil[44]))
            if errorExists[2111832]
            {
              gotoErrorHandling handler[1846617] handler[1846617]
            }
            label handler[1846617]
            const-val shouldHandleError[1846619]:bool[10] "temp"
            val errorExists[2111840]:bool[10] "temp"
            (2111845 'move' errorExists[2111840](2111842 '!=' error[1846600] nil[44]))
            (1846621 'move' shouldHandleError[1846619] errorExists[2111840])
            if shouldHandleError[1846619]
            {
              (1846628 call chpl_uncaught_error[170243] error[1846600])
            }
          }
          (1846631 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846636]:Error[167938] "error variable" "temp"
            (1846638 'move' error[1846636] nil[44])
            (1846642 call close[236024] f[1176293] error[1846636])
            val errorExists[2111848]:bool[10] "temp"
            (2111853 'move' errorExists[2111848](2111850 '!=' error[1846636] nil[44]))
            if errorExists[2111848]
            {
              gotoErrorHandling handler[1846653] handler[1846653]
            }
            label handler[1846653]
            const-val shouldHandleError[1846655]:bool[10] "temp"
            val errorExists[2111856]:bool[10] "temp"
            (2111861 'move' errorExists[2111856](2111858 '!=' error[1846636] nil[44]))
            (1846657 'move' shouldHandleError[1846655] errorExists[2111856])
            if shouldHandleError[1846655]
            {
              (1846664 call chpl_uncaught_error[170243] error[1846636])
            }
          }
          (1846667 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        ref call_tmp[1176438]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        (1176440 'move' call_tmp[1176438](1176443 call this[954091] buf[1176385] offset[1176356]))
        const-val coerce_tmp[1180783]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180789 'move' coerce_tmp[1180783](1180785 'cast' uint(8)[100] 0))
        (1176446 call =[435348] call_tmp[1176438] coerce_tmp[1180783])
        const-val call_tmp[1176452]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176454 'move' call_tmp[1176452](1176457 call +[949666] offset[1176356]))
        const-val call_tmp[1176460]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829129]:string[26] "temp"
        (1176465 call createStringWithNewBuffer[30490] buf[1176385] offset[1176356] call_tmp[1176452] replace[173648] error[1811311] ret_tmp[1829129])
        (1829132 'move' call_tmp[1176460] ret_tmp[1829129])
        val errorExists[2109592]:bool[10] "temp"
        (2109597 'move' errorExists[2109592](2109594 '!=' error[1811311] nil[44]))
        if errorExists[2109592]
        {
          {
            val error[1846672]:Error[167938] "error variable" "temp"
            (1846674 'move' error[1846672] nil[44])
            (1846678 call close[1082094] r[1176402] error[1846672])
            val errorExists[2111864]:bool[10] "temp"
            (2111869 'move' errorExists[2111864](2111866 '!=' error[1846672] nil[44]))
            if errorExists[2111864]
            {
              gotoErrorHandling handler[1846689] handler[1846689]
            }
            label handler[1846689]
            const-val shouldHandleError[1846691]:bool[10] "temp"
            val errorExists[2111872]:bool[10] "temp"
            (2111877 'move' errorExists[2111872](2111874 '!=' error[1846672] nil[44]))
            (1846693 'move' shouldHandleError[1846691] errorExists[2111872])
            if shouldHandleError[1846691]
            {
              (1846700 call chpl_uncaught_error[170243] error[1846672])
            }
          }
          (1846703 call chpl__autoDestroy[1540568] r[1176402])
          {
            val error[1846708]:Error[167938] "error variable" "temp"
            (1846710 'move' error[1846708] nil[44])
            (1846714 call close[1062362] w[1176321] error[1846708])
            val errorExists[2111880]:bool[10] "temp"
            (2111885 'move' errorExists[2111880](2111882 '!=' error[1846708] nil[44]))
            if errorExists[2111880]
            {
              gotoErrorHandling handler[1846725] handler[1846725]
            }
            label handler[1846725]
            const-val shouldHandleError[1846727]:bool[10] "temp"
            val errorExists[2111888]:bool[10] "temp"
            (2111893 'move' errorExists[2111888](2111890 '!=' error[1846708] nil[44]))
            (1846729 'move' shouldHandleError[1846727] errorExists[2111888])
            if shouldHandleError[1846727]
            {
              (1846736 call chpl_uncaught_error[170243] error[1846708])
            }
          }
          (1846739 call chpl__autoDestroy[1536314] w[1176321])
          {
            val error[1846744]:Error[167938] "error variable" "temp"
            (1846746 'move' error[1846744] nil[44])
            (1846750 call close[236024] f[1176293] error[1846744])
            val errorExists[2111896]:bool[10] "temp"
            (2111901 'move' errorExists[2111896](2111898 '!=' error[1846744] nil[44]))
            if errorExists[2111896]
            {
              gotoErrorHandling handler[1846761] handler[1846761]
            }
            label handler[1846761]
            const-val shouldHandleError[1846763]:bool[10] "temp"
            val errorExists[2111904]:bool[10] "temp"
            (2111909 'move' errorExists[2111904](2111906 '!=' error[1846744] nil[44]))
            (1846765 'move' shouldHandleError[1846763] errorExists[2111904])
            if shouldHandleError[1846763]
            {
              (1846772 call chpl_uncaught_error[170243] error[1846744])
            }
          }
          (1846775 call chpl__autoDestroy[1463349] f[1176293])
          gotoErrorHandling handler[1811312] handler[1811312]
        }
        const-val ret[1176470]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1176472 'move' ret[1176470] call_tmp[1176460])
        const-val coerce_tmp[1180794]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180800 'move' coerce_tmp[1180794](1180796 'cast' c_void_ptr[149] buf[1176385]))
        (1176484 call c_free[207852] coerce_tmp[1180794])
        (1180804 'move' ret[1175833] ret[1176470])
        {
          val error[1846780]:Error[167938] "error variable" "temp"
          (1846782 'move' error[1846780] nil[44])
          (1846786 call close[1082094] r[1176402] error[1846780])
          val errorExists[2111912]:bool[10] "temp"
          (2111917 'move' errorExists[2111912](2111914 '!=' error[1846780] nil[44]))
          if errorExists[2111912]
          {
            gotoErrorHandling handler[1846797] handler[1846797]
          }
          label handler[1846797]
          const-val shouldHandleError[1846799]:bool[10] "temp"
          val errorExists[2111920]:bool[10] "temp"
          (2111925 'move' errorExists[2111920](2111922 '!=' error[1846780] nil[44]))
          (1846801 'move' shouldHandleError[1846799] errorExists[2111920])
          if shouldHandleError[1846799]
          {
            (1846808 call chpl_uncaught_error[170243] error[1846780])
          }
        }
        (1846811 call chpl__autoDestroy[1540568] r[1176402])
        {
          val error[1846816]:Error[167938] "error variable" "temp"
          (1846818 'move' error[1846816] nil[44])
          (1846822 call close[1062362] w[1176321] error[1846816])
          val errorExists[2111928]:bool[10] "temp"
          (2111933 'move' errorExists[2111928](2111930 '!=' error[1846816] nil[44]))
          if errorExists[2111928]
          {
            gotoErrorHandling handler[1846833] handler[1846833]
          }
          label handler[1846833]
          const-val shouldHandleError[1846835]:bool[10] "temp"
          val errorExists[2111936]:bool[10] "temp"
          (2111941 'move' errorExists[2111936](2111938 '!=' error[1846816] nil[44]))
          (1846837 'move' shouldHandleError[1846835] errorExists[2111936])
          if shouldHandleError[1846835]
          {
            (1846844 call chpl_uncaught_error[170243] error[1846816])
          }
        }
        (1846847 call chpl__autoDestroy[1536314] w[1176321])
        {
          val error[1846852]:Error[167938] "error variable" "temp"
          (1846854 'move' error[1846852] nil[44])
          (1846858 call close[236024] f[1176293] error[1846852])
          val errorExists[2111944]:bool[10] "temp"
          (2111949 'move' errorExists[2111944](2111946 '!=' error[1846852] nil[44]))
          if errorExists[2111944]
          {
            gotoErrorHandling handler[1846869] handler[1846869]
          }
          label handler[1846869]
          const-val shouldHandleError[1846871]:bool[10] "temp"
          val errorExists[2111952]:bool[10] "temp"
          (2111957 'move' errorExists[2111952](2111954 '!=' error[1846852] nil[44]))
          (1846873 'move' shouldHandleError[1846871] errorExists[2111952])
          if shouldHandleError[1846871]
          {
            (1846880 call chpl_uncaught_error[170243] error[1846852])
          }
        }
        (1846883 call chpl__autoDestroy[1463349] f[1176293])
        (1846886 call chpl__autoDestroy[1543655] args[1175845])
        gotoReturn _end_stringify[1176499] _end_stringify[1176499]
        label handler[1811312]
        const-val shouldHandleError[1811505]:bool[10] "temp"
        val errorExists[2109600]:bool[10] "temp"
        (2109605 'move' errorExists[2109600](2109602 '!=' error[1811311] nil[44]))
        (1811509 'move' shouldHandleError[1811505] errorExists[2109600])
        if shouldHandleError[1811505]
        {
          (1811502 call chpl_uncaught_error[170243] error[1811311])
        }
      }
    }
    (1846889 call chpl__autoDestroy[1543655] args[1175845])
    label _end_stringify[1176499]
    (1834666 '=' _retArg[1834664] ret[1175833])
    (1834668 return _void[55])
  }
  function stringify[1190720](const  ref arg _e0_args[1190722]:string[26], const in arg _e1_args[1190724]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg _e2_args[1190726]:string[26], const in arg _e3_args[1190728]:int(64)[13], ref arg _retArg[1834870]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1190744]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191419] "insert auto destroy"
    const-val ret_tmp[1834880]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191419] "temp"
    (1190749 call chpl__init_tuple[1191434] _e0_args[1190722] _e1_args[1190724] _e2_args[1190726] _e3_args[1190728] ret_tmp[1834880])
    (1834883 'move' args[1190744] ret_tmp[1834880])
    const-val ret[1190732]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1190773]:string[26] "dead at end of block" "insert auto destroy"
      (1190775 'move' str[1190773](1834876 call chpl__initCopy[981348] ""))
      {
        const-val i[1190780]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1190782 'move' i[1190780] 0)
        {
          {
            {
              ref call_tmp[1197153]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1197155 'move' call_tmp[1197153](1198528 '.v' args[1190744] x0[1191411]))
              (1197161 call +=[38797] str[1190773] call_tmp[1197153])
            }
          }
        }
        label _continueLabel0[1197118]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1197729]:_ref(range(byteIndex,boundedHigh,false))[1184963] "dead after last mention" "maybe param" "temp"
                    (1197731 'move' call_tmp[1197729](1198628 '.' args[1190744] x1[1191413]))
                    const-val call_tmp[1197736]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1198899]:range(byteIndex,boundedHigh,false)[1184919] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1198903 'move' coerce_tmp[1198899](1834874 call chpl__initCopy[1191528] call_tmp[1197729]))
                    const-val ret_tmp[1834910]:string[26] "temp"
                    (1197741 call _cast[1198631] coerce_tmp[1198899] ret_tmp[1834910])
                    (1834913 'move' call_tmp[1197736] ret_tmp[1834910])
                    (1197745 call +=[38797] str[1190773] call_tmp[1197736])
                    (1847105 call chpl__autoDestroy[1461530] call_tmp[1197736])
                    (1847108 call chpl__autoDestroy[1543883] coerce_tmp[1198899])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1197463]
        {
          {
            {
              ref call_tmp[1197843]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1197845 'move' call_tmp[1197843](1200214 '.v' args[1190744] x2[1191415]))
              (1197851 call +=[38797] str[1190773] call_tmp[1197843])
            }
          }
        }
        label _continueLabel2[1197808]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1198419]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1198421 'move' call_tmp[1198419](1200321 '.' args[1190744] x3[1191417]))
                    const-val call_tmp[1198426]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1200324]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1200328 'move' coerce_tmp[1200324](1200326 'deref' call_tmp[1198419]))
                    const-val ret_tmp[1833149]:string[26] "temp"
                    (1198431 call _cast[1063153] coerce_tmp[1200324] ret_tmp[1833149])
                    (1833152 'move' call_tmp[1198426] ret_tmp[1833149])
                    (1198435 call +=[38797] str[1190773] call_tmp[1198426])
                    (1847112 call chpl__autoDestroy[1461530] call_tmp[1198426])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1198153]
        label _unused_continueLabel[1191171]
        label _breakLabel[1191173]
      }
      (1200333 'move' ret[1190732] str[1190773])
      (1847115 call chpl__autoDestroy[1545565] args[1190744])
      gotoReturn _end_stringify[1191398] _end_stringify[1191398]
    }
    (1847118 call chpl__autoDestroy[1545565] args[1190744])
    label _end_stringify[1191398]
    (1834872 '=' _retArg[1834870] ret[1190732])
    (1834878 return _void[55])
  }
  function stringify[1291138](const  ref arg _e0_args[1291140]:string[26], const  ref arg _e1_args[1291142]:string[26], const  ref arg _e2_args[1291144]:string[26], const  ref arg _e3_args[1291146]:string[26], ref arg _retArg[1837026]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1291162]:4*string[1291837] "insert auto destroy"
    const-val ret_tmp[1837034]:4*string[1291837] "temp"
    (1291167 call chpl__init_tuple[1291861] _e0_args[1291140] _e1_args[1291142] _e2_args[1291144] _e3_args[1291146] ret_tmp[1837034])
    (1837037 'move' args[1291162] ret_tmp[1837034])
    const-val ret[1291150]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1291191]:string[26] "dead at end of block" "insert auto destroy"
      (1291193 'move' str[1291191](1837030 call chpl__initCopy[981348] ""))
      {
        const-val i[1291198]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1291200 'move' i[1291198] 0)
        {
          {
            {
              ref call_tmp[1294999]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1295001 'move' call_tmp[1294999](1296374 '.v' args[1291162] x0[1291829]))
              (1295007 call +=[38797] str[1291191] call_tmp[1294999])
            }
          }
        }
        label _continueLabel0[1294964]
        {
          {
            {
              ref call_tmp[1295344]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1295346 'move' call_tmp[1295344](1296408 '.v' args[1291162] x1[1291831]))
              (1295352 call +=[38797] str[1291191] call_tmp[1295344])
            }
          }
        }
        label _continueLabel1[1295309]
        {
          {
            {
              ref call_tmp[1295689]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1295691 'move' call_tmp[1295689](1296442 '.v' args[1291162] x2[1291833]))
              (1295697 call +=[38797] str[1291191] call_tmp[1295689])
            }
          }
        }
        label _continueLabel2[1295654]
        {
          {
            {
              ref call_tmp[1296034]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1296036 'move' call_tmp[1296034](1296476 '.v' args[1291162] x3[1291835]))
              (1296042 call +=[38797] str[1291191] call_tmp[1296034])
            }
          }
        }
        label _continueLabel3[1295999]
        label _unused_continueLabel[1291589]
        label _breakLabel[1291591]
      }
      (1296481 'move' ret[1291150] str[1291191])
      (1847628 call chpl__autoDestroy[1632526] args[1291162])
      gotoReturn _end_stringify[1291816] _end_stringify[1291816]
    }
    (1847631 call chpl__autoDestroy[1632526] args[1291162])
    label _end_stringify[1291816]
    (1837028 '=' _retArg[1837026] ret[1291150])
    (1837032 return _void[55])
  }
  function stringify[1157864](const  ref arg _e0_args[1157866]:string[26], const  ref arg _e1_args[1157868]:codepointIndex[28274], const  ref arg _e2_args[1157870]:string[26], ref arg _retArg[1834606]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1157884]:(string,codepointIndex,string)[1158555] "insert auto destroy"
    const-val ret_tmp[1834612]:(string,codepointIndex,string)[1158555] "temp"
    (1157889 call chpl__init_tuple[1158568] _e0_args[1157866] _e1_args[1157868] _e2_args[1157870] ret_tmp[1834612])
    (1834615 'move' args[1157884] ret_tmp[1834612])
    const-val ret[1157874]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1810814]:Error[167938] "error variable" "temp"
        (1810999 'move' error[1810814] nil[44])
        const-val call_tmp[1158325]:file[235580] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1164179]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164183 'move' default_arg_style[1164179](1164181 call openmem_default_style[1060559] error[1810814]))
        val errorExists[2109200]:bool[10] "temp"
        (2109205 'move' errorExists[2109200](2109202 '!=' error[1810814] nil[44]))
        if errorExists[2109200]
        {
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val ret_tmp[1831509]:file[235580] "temp"
        (1158330 call openmem[237625] default_arg_style[1164179] error[1810814] ret_tmp[1831509])
        (1831512 'move' call_tmp[1158325] ret_tmp[1831509])
        val errorExists[2109208]:bool[10] "temp"
        (2109213 'move' errorExists[2109208](2109210 '!=' error[1810814] nil[44]))
        if errorExists[2109208]
        {
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val f[1158331]:file[235580] "dead at end of block" "insert auto destroy"
        (1158333 'move' f[1158331] call_tmp[1158325])
        const-val call_tmp[1158348]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1164208]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164214 'move' default_arg_start[1164208](1164210 call writer_default_start[1061153] f[1158331] error[1810814]))
        val errorExists[2109216]:bool[10] "temp"
        (2109221 'move' errorExists[2109216](2109218 '!=' error[1810814] nil[44]))
        if errorExists[2109216]
        {
          {
            val error[1844889]:Error[167938] "error variable" "temp"
            (1844891 'move' error[1844889] nil[44])
            (1844895 call close[236024] f[1158331] error[1844889])
            val errorExists[2111128]:bool[10] "temp"
            (2111133 'move' errorExists[2111128](2111130 '!=' error[1844889] nil[44]))
            if errorExists[2111128]
            {
              gotoErrorHandling handler[1844906] handler[1844906]
            }
            label handler[1844906]
            const-val shouldHandleError[1844908]:bool[10] "temp"
            val errorExists[2111136]:bool[10] "temp"
            (2111141 'move' errorExists[2111136](2111138 '!=' error[1844889] nil[44]))
            (1844910 'move' shouldHandleError[1844908] errorExists[2111136])
            if shouldHandleError[1844908]
            {
              (1844917 call chpl_uncaught_error[170243] error[1844889])
            }
          }
          (1844920 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_end[1164218]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164224 'move' default_arg_end[1164218](1164220 call writer_default_end[1061199] f[1158331] error[1810814]))
        val errorExists[2109224]:bool[10] "temp"
        (2109229 'move' errorExists[2109224](2109226 '!=' error[1810814] nil[44]))
        if errorExists[2109224]
        {
          {
            val error[1844925]:Error[167938] "error variable" "temp"
            (1844927 'move' error[1844925] nil[44])
            (1844931 call close[236024] f[1158331] error[1844925])
            val errorExists[2111144]:bool[10] "temp"
            (2111149 'move' errorExists[2111144](2111146 '!=' error[1844925] nil[44]))
            if errorExists[2111144]
            {
              gotoErrorHandling handler[1844942] handler[1844942]
            }
            label handler[1844942]
            const-val shouldHandleError[1844944]:bool[10] "temp"
            val errorExists[2111152]:bool[10] "temp"
            (2111157 'move' errorExists[2111152](2111154 '!=' error[1844925] nil[44]))
            (1844946 'move' shouldHandleError[1844944] errorExists[2111152])
            if shouldHandleError[1844944]
            {
              (1844953 call chpl_uncaught_error[170243] error[1844925])
            }
          }
          (1844956 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_hints[1164228]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164234 'move' default_arg_hints[1164228](1164230 call writer_default_hints[1061262] f[1158331] error[1810814]))
        val errorExists[2109232]:bool[10] "temp"
        (2109237 'move' errorExists[2109232](2109234 '!=' error[1810814] nil[44]))
        if errorExists[2109232]
        {
          {
            val error[1844961]:Error[167938] "error variable" "temp"
            (1844963 'move' error[1844961] nil[44])
            (1844967 call close[236024] f[1158331] error[1844961])
            val errorExists[2111160]:bool[10] "temp"
            (2111165 'move' errorExists[2111160](2111162 '!=' error[1844961] nil[44]))
            if errorExists[2111160]
            {
              gotoErrorHandling handler[1844978] handler[1844978]
            }
            label handler[1844978]
            const-val shouldHandleError[1844980]:bool[10] "temp"
            val errorExists[2111168]:bool[10] "temp"
            (2111173 'move' errorExists[2111168](2111170 '!=' error[1844961] nil[44]))
            (1844982 'move' shouldHandleError[1844980] errorExists[2111168])
            if shouldHandleError[1844980]
            {
              (1844989 call chpl_uncaught_error[170243] error[1844961])
            }
          }
          (1844992 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_style[1164238]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164244 'move' default_arg_style[1164238](1164240 call writer_default_style[1061312] f[1158331] error[1810814]))
        val errorExists[2109240]:bool[10] "temp"
        (2109245 'move' errorExists[2109240](2109242 '!=' error[1810814] nil[44]))
        if errorExists[2109240]
        {
          {
            val error[1844997]:Error[167938] "error variable" "temp"
            (1844999 'move' error[1844997] nil[44])
            (1845003 call close[236024] f[1158331] error[1844997])
            val errorExists[2111176]:bool[10] "temp"
            (2111181 'move' errorExists[2111176](2111178 '!=' error[1844997] nil[44]))
            if errorExists[2111176]
            {
              gotoErrorHandling handler[1845014] handler[1845014]
            }
            label handler[1845014]
            const-val shouldHandleError[1845016]:bool[10] "temp"
            val errorExists[2111184]:bool[10] "temp"
            (2111189 'move' errorExists[2111184](2111186 '!=' error[1844997] nil[44]))
            (1845018 'move' shouldHandleError[1845016] errorExists[2111184])
            if shouldHandleError[1845016]
            {
              (1845025 call chpl_uncaught_error[170243] error[1844997])
            }
          }
          (1845028 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val ret_tmp[1833029]:channel(true,dynamic,false)[1060947] "temp"
        (1158356 call writer[1060853] f[1158331] default_arg_start[1164208] default_arg_end[1164218] default_arg_hints[1164228] default_arg_style[1164238] error[1810814] ret_tmp[1833029])
        (1833032 'move' call_tmp[1158348] ret_tmp[1833029])
        val errorExists[2109248]:bool[10] "temp"
        (2109253 'move' errorExists[2109248](2109250 '!=' error[1810814] nil[44]))
        if errorExists[2109248]
        {
          {
            val error[1845033]:Error[167938] "error variable" "temp"
            (1845035 'move' error[1845033] nil[44])
            (1845039 call close[236024] f[1158331] error[1845033])
            val errorExists[2111192]:bool[10] "temp"
            (2111197 'move' errorExists[2111192](2111194 '!=' error[1845033] nil[44]))
            if errorExists[2111192]
            {
              gotoErrorHandling handler[1845050] handler[1845050]
            }
            label handler[1845050]
            const-val shouldHandleError[1845052]:bool[10] "temp"
            val errorExists[2111200]:bool[10] "temp"
            (2111205 'move' errorExists[2111200](2111202 '!=' error[1845033] nil[44]))
            (1845054 'move' shouldHandleError[1845052] errorExists[2111200])
            if shouldHandleError[1845052]
            {
              (1845061 call chpl_uncaught_error[170243] error[1845033])
            }
          }
          (1845064 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val w[1158359]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
        (1158361 'move' w[1158359] call_tmp[1158348])
        ref _tuple_expand_tmp_0[1164250]:_ref(string)[937939] "dead after last mention" "temp"
        (1164256 'move' _tuple_expand_tmp_0[1164250](1164276 '.v' args[1157884] x0[1158549]))
        ref _tuple_expand_tmp_1[1164258]:_ref(codepointIndex)[948769] "dead after last mention" "temp"
        (1164264 'move' _tuple_expand_tmp_1[1164258](1164281 '.v' args[1157884] x1[1158551]))
        ref _tuple_expand_tmp_2[1164266]:_ref(string)[937939] "dead after last mention" "temp"
        (1164272 'move' _tuple_expand_tmp_2[1164266](1164286 '.v' args[1157884] x2[1158553]))
        const-val _return_tmp_[1800588]:bool[10] "dead after last mention" "temp"
        (1800590 'move' _return_tmp_[1800588](1158380 call write[1164511] w[1158359] _tuple_expand_tmp_0[1164250] _tuple_expand_tmp_1[1164258] _tuple_expand_tmp_2[1164266] error[1810814]))
        val errorExists[2109256]:bool[10] "temp"
        (2109261 'move' errorExists[2109256](2109258 '!=' error[1810814] nil[44]))
        if errorExists[2109256]
        {
          {
            val error[1845069]:Error[167938] "error variable" "temp"
            (1845071 'move' error[1845069] nil[44])
            (1845075 call close[1062362] w[1158359] error[1845069])
            val errorExists[2111208]:bool[10] "temp"
            (2111213 'move' errorExists[2111208](2111210 '!=' error[1845069] nil[44]))
            if errorExists[2111208]
            {
              gotoErrorHandling handler[1845086] handler[1845086]
            }
            label handler[1845086]
            const-val shouldHandleError[1845088]:bool[10] "temp"
            val errorExists[2111216]:bool[10] "temp"
            (2111221 'move' errorExists[2111216](2111218 '!=' error[1845069] nil[44]))
            (1845090 'move' shouldHandleError[1845088] errorExists[2111216])
            if shouldHandleError[1845088]
            {
              (1845097 call chpl_uncaught_error[170243] error[1845069])
            }
          }
          (1845100 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845105]:Error[167938] "error variable" "temp"
            (1845107 'move' error[1845105] nil[44])
            (1845111 call close[236024] f[1158331] error[1845105])
            val errorExists[2111224]:bool[10] "temp"
            (2111229 'move' errorExists[2111224](2111226 '!=' error[1845105] nil[44]))
            if errorExists[2111224]
            {
              gotoErrorHandling handler[1845122] handler[1845122]
            }
            label handler[1845122]
            const-val shouldHandleError[1845124]:bool[10] "temp"
            val errorExists[2111232]:bool[10] "temp"
            (2111237 'move' errorExists[2111232](2111234 '!=' error[1845105] nil[44]))
            (1845126 'move' shouldHandleError[1845124] errorExists[2111232])
            if shouldHandleError[1845124]
            {
              (1845133 call chpl_uncaught_error[170243] error[1845105])
            }
          }
          (1845136 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val call_tmp[1158385]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1158387 'move' call_tmp[1158385](1158393 call offset[1080148] w[1158359]))
        const-val offset[1158394]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1158396 'move' offset[1158394] call_tmp[1158385])
        val call_tmp[1158400]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1158407]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158409 'move' call_tmp[1158407](1158412 call +[949666] offset[1158394]))
        val call_tmp[1158415]:c_ptr(uint(8))[937423] "dead at end of block" "maybe param" "temp"
        (1158417 'move' call_tmp[1158415](1158420 call c_malloc[1080303] call_tmp[1158407]))
        val buf[1158423]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
        (1158425 'move' buf[1158423](1175654 call chpl__initCopy[954030] call_tmp[1158415]))
        const-val call_tmp[1158429]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1175677]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175683 'move' default_arg_start[1175677](1175679 call reader_default_start[1080888] f[1158331] error[1810814]))
        val errorExists[2109264]:bool[10] "temp"
        (2109269 'move' errorExists[2109264](2109266 '!=' error[1810814] nil[44]))
        if errorExists[2109264]
        {
          {
            val error[1845141]:Error[167938] "error variable" "temp"
            (1845143 'move' error[1845141] nil[44])
            (1845147 call close[1062362] w[1158359] error[1845141])
            val errorExists[2111240]:bool[10] "temp"
            (2111245 'move' errorExists[2111240](2111242 '!=' error[1845141] nil[44]))
            if errorExists[2111240]
            {
              gotoErrorHandling handler[1845158] handler[1845158]
            }
            label handler[1845158]
            const-val shouldHandleError[1845160]:bool[10] "temp"
            val errorExists[2111248]:bool[10] "temp"
            (2111253 'move' errorExists[2111248](2111250 '!=' error[1845141] nil[44]))
            (1845162 'move' shouldHandleError[1845160] errorExists[2111248])
            if shouldHandleError[1845160]
            {
              (1845169 call chpl_uncaught_error[170243] error[1845141])
            }
          }
          (1845172 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845177]:Error[167938] "error variable" "temp"
            (1845179 'move' error[1845177] nil[44])
            (1845183 call close[236024] f[1158331] error[1845177])
            val errorExists[2111256]:bool[10] "temp"
            (2111261 'move' errorExists[2111256](2111258 '!=' error[1845177] nil[44]))
            if errorExists[2111256]
            {
              gotoErrorHandling handler[1845194] handler[1845194]
            }
            label handler[1845194]
            const-val shouldHandleError[1845196]:bool[10] "temp"
            val errorExists[2111264]:bool[10] "temp"
            (2111269 'move' errorExists[2111264](2111266 '!=' error[1845177] nil[44]))
            (1845198 'move' shouldHandleError[1845196] errorExists[2111264])
            if shouldHandleError[1845196]
            {
              (1845205 call chpl_uncaught_error[170243] error[1845177])
            }
          }
          (1845208 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_end[1175687]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175693 'move' default_arg_end[1175687](1175689 call reader_default_end[1080934] f[1158331] error[1810814]))
        val errorExists[2109272]:bool[10] "temp"
        (2109277 'move' errorExists[2109272](2109274 '!=' error[1810814] nil[44]))
        if errorExists[2109272]
        {
          {
            val error[1845213]:Error[167938] "error variable" "temp"
            (1845215 'move' error[1845213] nil[44])
            (1845219 call close[1062362] w[1158359] error[1845213])
            val errorExists[2111272]:bool[10] "temp"
            (2111277 'move' errorExists[2111272](2111274 '!=' error[1845213] nil[44]))
            if errorExists[2111272]
            {
              gotoErrorHandling handler[1845230] handler[1845230]
            }
            label handler[1845230]
            const-val shouldHandleError[1845232]:bool[10] "temp"
            val errorExists[2111280]:bool[10] "temp"
            (2111285 'move' errorExists[2111280](2111282 '!=' error[1845213] nil[44]))
            (1845234 'move' shouldHandleError[1845232] errorExists[2111280])
            if shouldHandleError[1845232]
            {
              (1845241 call chpl_uncaught_error[170243] error[1845213])
            }
          }
          (1845244 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845249]:Error[167938] "error variable" "temp"
            (1845251 'move' error[1845249] nil[44])
            (1845255 call close[236024] f[1158331] error[1845249])
            val errorExists[2111288]:bool[10] "temp"
            (2111293 'move' errorExists[2111288](2111290 '!=' error[1845249] nil[44]))
            if errorExists[2111288]
            {
              gotoErrorHandling handler[1845266] handler[1845266]
            }
            label handler[1845266]
            const-val shouldHandleError[1845268]:bool[10] "temp"
            val errorExists[2111296]:bool[10] "temp"
            (2111301 'move' errorExists[2111296](2111298 '!=' error[1845249] nil[44]))
            (1845270 'move' shouldHandleError[1845268] errorExists[2111296])
            if shouldHandleError[1845268]
            {
              (1845277 call chpl_uncaught_error[170243] error[1845249])
            }
          }
          (1845280 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_hints[1175697]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175703 'move' default_arg_hints[1175697](1175699 call reader_default_hints[1080997] f[1158331] error[1810814]))
        val errorExists[2109280]:bool[10] "temp"
        (2109285 'move' errorExists[2109280](2109282 '!=' error[1810814] nil[44]))
        if errorExists[2109280]
        {
          {
            val error[1845285]:Error[167938] "error variable" "temp"
            (1845287 'move' error[1845285] nil[44])
            (1845291 call close[1062362] w[1158359] error[1845285])
            val errorExists[2111304]:bool[10] "temp"
            (2111309 'move' errorExists[2111304](2111306 '!=' error[1845285] nil[44]))
            if errorExists[2111304]
            {
              gotoErrorHandling handler[1845302] handler[1845302]
            }
            label handler[1845302]
            const-val shouldHandleError[1845304]:bool[10] "temp"
            val errorExists[2111312]:bool[10] "temp"
            (2111317 'move' errorExists[2111312](2111314 '!=' error[1845285] nil[44]))
            (1845306 'move' shouldHandleError[1845304] errorExists[2111312])
            if shouldHandleError[1845304]
            {
              (1845313 call chpl_uncaught_error[170243] error[1845285])
            }
          }
          (1845316 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845321]:Error[167938] "error variable" "temp"
            (1845323 'move' error[1845321] nil[44])
            (1845327 call close[236024] f[1158331] error[1845321])
            val errorExists[2111320]:bool[10] "temp"
            (2111325 'move' errorExists[2111320](2111322 '!=' error[1845321] nil[44]))
            if errorExists[2111320]
            {
              gotoErrorHandling handler[1845338] handler[1845338]
            }
            label handler[1845338]
            const-val shouldHandleError[1845340]:bool[10] "temp"
            val errorExists[2111328]:bool[10] "temp"
            (2111333 'move' errorExists[2111328](2111330 '!=' error[1845321] nil[44]))
            (1845342 'move' shouldHandleError[1845340] errorExists[2111328])
            if shouldHandleError[1845340]
            {
              (1845349 call chpl_uncaught_error[170243] error[1845321])
            }
          }
          (1845352 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val default_arg_style[1175707]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1175713 'move' default_arg_style[1175707](1175709 call reader_default_style[1081044] f[1158331] error[1810814]))
        val errorExists[2109288]:bool[10] "temp"
        (2109293 'move' errorExists[2109288](2109290 '!=' error[1810814] nil[44]))
        if errorExists[2109288]
        {
          {
            val error[1845357]:Error[167938] "error variable" "temp"
            (1845359 'move' error[1845357] nil[44])
            (1845363 call close[1062362] w[1158359] error[1845357])
            val errorExists[2111336]:bool[10] "temp"
            (2111341 'move' errorExists[2111336](2111338 '!=' error[1845357] nil[44]))
            if errorExists[2111336]
            {
              gotoErrorHandling handler[1845374] handler[1845374]
            }
            label handler[1845374]
            const-val shouldHandleError[1845376]:bool[10] "temp"
            val errorExists[2111344]:bool[10] "temp"
            (2111349 'move' errorExists[2111344](2111346 '!=' error[1845357] nil[44]))
            (1845378 'move' shouldHandleError[1845376] errorExists[2111344])
            if shouldHandleError[1845376]
            {
              (1845385 call chpl_uncaught_error[170243] error[1845357])
            }
          }
          (1845388 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845393]:Error[167938] "error variable" "temp"
            (1845395 'move' error[1845393] nil[44])
            (1845399 call close[236024] f[1158331] error[1845393])
            val errorExists[2111352]:bool[10] "temp"
            (2111357 'move' errorExists[2111352](2111354 '!=' error[1845393] nil[44]))
            if errorExists[2111352]
            {
              gotoErrorHandling handler[1845410] handler[1845410]
            }
            label handler[1845410]
            const-val shouldHandleError[1845412]:bool[10] "temp"
            val errorExists[2111360]:bool[10] "temp"
            (2111365 'move' errorExists[2111360](2111362 '!=' error[1845393] nil[44]))
            (1845414 'move' shouldHandleError[1845412] errorExists[2111360])
            if shouldHandleError[1845412]
            {
              (1845421 call chpl_uncaught_error[170243] error[1845393])
            }
          }
          (1845424 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val ret_tmp[1833431]:channel(false,dynamic,false)[1080682] "temp"
        (1158437 call reader[1080588] f[1158331] default_arg_start[1175677] default_arg_end[1175687] default_arg_hints[1175697] default_arg_style[1175707] error[1810814] ret_tmp[1833431])
        (1833434 'move' call_tmp[1158429] ret_tmp[1833431])
        val errorExists[2109296]:bool[10] "temp"
        (2109301 'move' errorExists[2109296](2109298 '!=' error[1810814] nil[44]))
        if errorExists[2109296]
        {
          {
            val error[1845429]:Error[167938] "error variable" "temp"
            (1845431 'move' error[1845429] nil[44])
            (1845435 call close[1062362] w[1158359] error[1845429])
            val errorExists[2111368]:bool[10] "temp"
            (2111373 'move' errorExists[2111368](2111370 '!=' error[1845429] nil[44]))
            if errorExists[2111368]
            {
              gotoErrorHandling handler[1845446] handler[1845446]
            }
            label handler[1845446]
            const-val shouldHandleError[1845448]:bool[10] "temp"
            val errorExists[2111376]:bool[10] "temp"
            (2111381 'move' errorExists[2111376](2111378 '!=' error[1845429] nil[44]))
            (1845450 'move' shouldHandleError[1845448] errorExists[2111376])
            if shouldHandleError[1845448]
            {
              (1845457 call chpl_uncaught_error[170243] error[1845429])
            }
          }
          (1845460 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845465]:Error[167938] "error variable" "temp"
            (1845467 'move' error[1845465] nil[44])
            (1845471 call close[236024] f[1158331] error[1845465])
            val errorExists[2111384]:bool[10] "temp"
            (2111389 'move' errorExists[2111384](2111386 '!=' error[1845465] nil[44]))
            if errorExists[2111384]
            {
              gotoErrorHandling handler[1845482] handler[1845482]
            }
            label handler[1845482]
            const-val shouldHandleError[1845484]:bool[10] "temp"
            val errorExists[2111392]:bool[10] "temp"
            (2111397 'move' errorExists[2111392](2111394 '!=' error[1845465] nil[44]))
            (1845486 'move' shouldHandleError[1845484] errorExists[2111392])
            if shouldHandleError[1845484]
            {
              (1845493 call chpl_uncaught_error[170243] error[1845465])
            }
          }
          (1845496 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val r[1158440]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
        (1158442 'move' r[1158440] call_tmp[1158429])
        const-val call_tmp[1158457]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1158459 'move' call_tmp[1158457] offset[1158394])
        (1158469 call readBytes[1082839] r[1158440] buf[1158423] call_tmp[1158457] error[1810814])
        val errorExists[2109304]:bool[10] "temp"
        (2109309 'move' errorExists[2109304](2109306 '!=' error[1810814] nil[44]))
        if errorExists[2109304]
        {
          {
            val error[1845501]:Error[167938] "error variable" "temp"
            (1845503 'move' error[1845501] nil[44])
            (1845507 call close[1082094] r[1158440] error[1845501])
            val errorExists[2111400]:bool[10] "temp"
            (2111405 'move' errorExists[2111400](2111402 '!=' error[1845501] nil[44]))
            if errorExists[2111400]
            {
              gotoErrorHandling handler[1845518] handler[1845518]
            }
            label handler[1845518]
            const-val shouldHandleError[1845520]:bool[10] "temp"
            val errorExists[2111408]:bool[10] "temp"
            (2111413 'move' errorExists[2111408](2111410 '!=' error[1845501] nil[44]))
            (1845522 'move' shouldHandleError[1845520] errorExists[2111408])
            if shouldHandleError[1845520]
            {
              (1845529 call chpl_uncaught_error[170243] error[1845501])
            }
          }
          (1845532 call chpl__autoDestroy[1540568] r[1158440])
          {
            val error[1845537]:Error[167938] "error variable" "temp"
            (1845539 'move' error[1845537] nil[44])
            (1845543 call close[1062362] w[1158359] error[1845537])
            val errorExists[2111416]:bool[10] "temp"
            (2111421 'move' errorExists[2111416](2111418 '!=' error[1845537] nil[44]))
            if errorExists[2111416]
            {
              gotoErrorHandling handler[1845554] handler[1845554]
            }
            label handler[1845554]
            const-val shouldHandleError[1845556]:bool[10] "temp"
            val errorExists[2111424]:bool[10] "temp"
            (2111429 'move' errorExists[2111424](2111426 '!=' error[1845537] nil[44]))
            (1845558 'move' shouldHandleError[1845556] errorExists[2111424])
            if shouldHandleError[1845556]
            {
              (1845565 call chpl_uncaught_error[170243] error[1845537])
            }
          }
          (1845568 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845573]:Error[167938] "error variable" "temp"
            (1845575 'move' error[1845573] nil[44])
            (1845579 call close[236024] f[1158331] error[1845573])
            val errorExists[2111432]:bool[10] "temp"
            (2111437 'move' errorExists[2111432](2111434 '!=' error[1845573] nil[44]))
            if errorExists[2111432]
            {
              gotoErrorHandling handler[1845590] handler[1845590]
            }
            label handler[1845590]
            const-val shouldHandleError[1845592]:bool[10] "temp"
            val errorExists[2111440]:bool[10] "temp"
            (2111445 'move' errorExists[2111440](2111442 '!=' error[1845573] nil[44]))
            (1845594 'move' shouldHandleError[1845592] errorExists[2111440])
            if shouldHandleError[1845592]
            {
              (1845601 call chpl_uncaught_error[170243] error[1845573])
            }
          }
          (1845604 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        ref call_tmp[1158476]:_ref(uint(8))[936908] "dead after last mention" "maybe param" "temp"
        (1158478 'move' call_tmp[1158476](1158481 call this[954091] buf[1158423] offset[1158394]))
        const-val coerce_tmp[1175723]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175729 'move' coerce_tmp[1175723](1175725 'cast' uint(8)[100] 0))
        (1158484 call =[435348] call_tmp[1158476] coerce_tmp[1175723])
        const-val call_tmp[1158490]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158492 'move' call_tmp[1158490](1158495 call +[949666] offset[1158394]))
        const-val call_tmp[1158498]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1829123]:string[26] "temp"
        (1158503 call createStringWithNewBuffer[30490] buf[1158423] offset[1158394] call_tmp[1158490] replace[173648] error[1810814] ret_tmp[1829123])
        (1829126 'move' call_tmp[1158498] ret_tmp[1829123])
        val errorExists[2109312]:bool[10] "temp"
        (2109317 'move' errorExists[2109312](2109314 '!=' error[1810814] nil[44]))
        if errorExists[2109312]
        {
          {
            val error[1845609]:Error[167938] "error variable" "temp"
            (1845611 'move' error[1845609] nil[44])
            (1845615 call close[1082094] r[1158440] error[1845609])
            val errorExists[2111448]:bool[10] "temp"
            (2111453 'move' errorExists[2111448](2111450 '!=' error[1845609] nil[44]))
            if errorExists[2111448]
            {
              gotoErrorHandling handler[1845626] handler[1845626]
            }
            label handler[1845626]
            const-val shouldHandleError[1845628]:bool[10] "temp"
            val errorExists[2111456]:bool[10] "temp"
            (2111461 'move' errorExists[2111456](2111458 '!=' error[1845609] nil[44]))
            (1845630 'move' shouldHandleError[1845628] errorExists[2111456])
            if shouldHandleError[1845628]
            {
              (1845637 call chpl_uncaught_error[170243] error[1845609])
            }
          }
          (1845640 call chpl__autoDestroy[1540568] r[1158440])
          {
            val error[1845645]:Error[167938] "error variable" "temp"
            (1845647 'move' error[1845645] nil[44])
            (1845651 call close[1062362] w[1158359] error[1845645])
            val errorExists[2111464]:bool[10] "temp"
            (2111469 'move' errorExists[2111464](2111466 '!=' error[1845645] nil[44]))
            if errorExists[2111464]
            {
              gotoErrorHandling handler[1845662] handler[1845662]
            }
            label handler[1845662]
            const-val shouldHandleError[1845664]:bool[10] "temp"
            val errorExists[2111472]:bool[10] "temp"
            (2111477 'move' errorExists[2111472](2111474 '!=' error[1845645] nil[44]))
            (1845666 'move' shouldHandleError[1845664] errorExists[2111472])
            if shouldHandleError[1845664]
            {
              (1845673 call chpl_uncaught_error[170243] error[1845645])
            }
          }
          (1845676 call chpl__autoDestroy[1536314] w[1158359])
          {
            val error[1845681]:Error[167938] "error variable" "temp"
            (1845683 'move' error[1845681] nil[44])
            (1845687 call close[236024] f[1158331] error[1845681])
            val errorExists[2111480]:bool[10] "temp"
            (2111485 'move' errorExists[2111480](2111482 '!=' error[1845681] nil[44]))
            if errorExists[2111480]
            {
              gotoErrorHandling handler[1845698] handler[1845698]
            }
            label handler[1845698]
            const-val shouldHandleError[1845700]:bool[10] "temp"
            val errorExists[2111488]:bool[10] "temp"
            (2111493 'move' errorExists[2111488](2111490 '!=' error[1845681] nil[44]))
            (1845702 'move' shouldHandleError[1845700] errorExists[2111488])
            if shouldHandleError[1845700]
            {
              (1845709 call chpl_uncaught_error[170243] error[1845681])
            }
          }
          (1845712 call chpl__autoDestroy[1463349] f[1158331])
          gotoErrorHandling handler[1810815] handler[1810815]
        }
        const-val ret[1158508]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1158510 'move' ret[1158508] call_tmp[1158498])
        const-val coerce_tmp[1175734]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175740 'move' coerce_tmp[1175734](1175736 'cast' c_void_ptr[149] buf[1158423]))
        (1158522 call c_free[207852] coerce_tmp[1175734])
        (1175744 'move' ret[1157874] ret[1158508])
        {
          val error[1845717]:Error[167938] "error variable" "temp"
          (1845719 'move' error[1845717] nil[44])
          (1845723 call close[1082094] r[1158440] error[1845717])
          val errorExists[2111496]:bool[10] "temp"
          (2111501 'move' errorExists[2111496](2111498 '!=' error[1845717] nil[44]))
          if errorExists[2111496]
          {
            gotoErrorHandling handler[1845734] handler[1845734]
          }
          label handler[1845734]
          const-val shouldHandleError[1845736]:bool[10] "temp"
          val errorExists[2111504]:bool[10] "temp"
          (2111509 'move' errorExists[2111504](2111506 '!=' error[1845717] nil[44]))
          (1845738 'move' shouldHandleError[1845736] errorExists[2111504])
          if shouldHandleError[1845736]
          {
            (1845745 call chpl_uncaught_error[170243] error[1845717])
          }
        }
        (1845748 call chpl__autoDestroy[1540568] r[1158440])
        {
          val error[1845753]:Error[167938] "error variable" "temp"
          (1845755 'move' error[1845753] nil[44])
          (1845759 call close[1062362] w[1158359] error[1845753])
          val errorExists[2111512]:bool[10] "temp"
          (2111517 'move' errorExists[2111512](2111514 '!=' error[1845753] nil[44]))
          if errorExists[2111512]
          {
            gotoErrorHandling handler[1845770] handler[1845770]
          }
          label handler[1845770]
          const-val shouldHandleError[1845772]:bool[10] "temp"
          val errorExists[2111520]:bool[10] "temp"
          (2111525 'move' errorExists[2111520](2111522 '!=' error[1845753] nil[44]))
          (1845774 'move' shouldHandleError[1845772] errorExists[2111520])
          if shouldHandleError[1845772]
          {
            (1845781 call chpl_uncaught_error[170243] error[1845753])
          }
        }
        (1845784 call chpl__autoDestroy[1536314] w[1158359])
        {
          val error[1845789]:Error[167938] "error variable" "temp"
          (1845791 'move' error[1845789] nil[44])
          (1845795 call close[236024] f[1158331] error[1845789])
          val errorExists[2111528]:bool[10] "temp"
          (2111533 'move' errorExists[2111528](2111530 '!=' error[1845789] nil[44]))
          if errorExists[2111528]
          {
            gotoErrorHandling handler[1845806] handler[1845806]
          }
          label handler[1845806]
          const-val shouldHandleError[1845808]:bool[10] "temp"
          val errorExists[2111536]:bool[10] "temp"
          (2111541 'move' errorExists[2111536](2111538 '!=' error[1845789] nil[44]))
          (1845810 'move' shouldHandleError[1845808] errorExists[2111536])
          if shouldHandleError[1845808]
          {
            (1845817 call chpl_uncaught_error[170243] error[1845789])
          }
        }
        (1845820 call chpl__autoDestroy[1463349] f[1158331])
        (1845823 call chpl__autoDestroy[1543334] args[1157884])
        gotoReturn _end_stringify[1158537] _end_stringify[1158537]
        label handler[1810815]
        const-val shouldHandleError[1811008]:bool[10] "temp"
        val errorExists[2109320]:bool[10] "temp"
        (2109325 'move' errorExists[2109320](2109322 '!=' error[1810814] nil[44]))
        (1811012 'move' shouldHandleError[1811008] errorExists[2109320])
        if shouldHandleError[1811008]
        {
          (1811005 call chpl_uncaught_error[170243] error[1810814])
        }
      }
    }
    (1845826 call chpl__autoDestroy[1543334] args[1157884])
    label _end_stringify[1158537]
    (1834608 '=' _retArg[1834606] ret[1157874])
    (1834610 return _void[55])
  }
  function stringify[1272493](const  ref arg _e0_args[1272495]:string[26], const in arg _e1_args[1272497]:int(64)[13], const  ref arg _e2_args[1272499]:string[26], ref arg _retArg[1836870]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1272513]:(string,int(64),string)[1273184] "insert auto destroy"
    const-val ret_tmp[1836878]:(string,int(64),string)[1273184] "temp"
    (1272518 call chpl__init_tuple[1273197] _e0_args[1272495] _e1_args[1272497] _e2_args[1272499] ret_tmp[1836878])
    (1836881 'move' args[1272513] ret_tmp[1836878])
    const-val ret[1272503]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1272541]:string[26] "dead at end of block" "insert auto destroy"
      (1272543 'move' str[1272541](1836874 call chpl__initCopy[981348] ""))
      {
        const-val i[1272548]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1272550 'move' i[1272548] 0)
        {
          {
            {
              ref call_tmp[1276256]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1276258 'move' call_tmp[1276256](1277286 '.v' args[1272513] x0[1273178]))
              (1276264 call +=[38797] str[1272541] call_tmp[1276256])
            }
          }
        }
        label _continueLabel0[1276221]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1276832]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1276834 'move' call_tmp[1276832](1277393 '.' args[1272513] x1[1273180]))
                    const-val call_tmp[1276839]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1277396]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1277400 'move' coerce_tmp[1277396](1277398 'deref' call_tmp[1276832]))
                    const-val ret_tmp[1833191]:string[26] "temp"
                    (1276844 call _cast[1063153] coerce_tmp[1277396] ret_tmp[1833191])
                    (1833194 'move' call_tmp[1276839] ret_tmp[1833191])
                    (1276848 call +=[38797] str[1272541] call_tmp[1276839])
                    (1847539 call chpl__autoDestroy[1461530] call_tmp[1276839])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1276566]
        {
          {
            {
              ref call_tmp[1276946]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1276948 'move' call_tmp[1276946](1277434 '.v' args[1272513] x2[1273182]))
              (1276954 call +=[38797] str[1272541] call_tmp[1276946])
            }
          }
        }
        label _continueLabel2[1276911]
        label _unused_continueLabel[1272939]
        label _breakLabel[1272941]
      }
      (1277439 'move' ret[1272503] str[1272541])
      (1847542 call chpl__autoDestroy[1557467] args[1272513])
      gotoReturn _end_stringify[1273166] _end_stringify[1273166]
    }
    (1847545 call chpl__autoDestroy[1557467] args[1272513])
    label _end_stringify[1273166]
    (1836872 '=' _retArg[1836870] ret[1272503])
    (1836876 return _void[55])
  }
  function stringify[1402793](const  ref arg _e0_args[1402795]:string[26], const  ref arg _e1_args[1402797]:string[26], const  ref arg _e2_args[1402799]:string[26], ref arg _retArg[1838356]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1402813]:3*string[1403484] "insert auto destroy"
    const-val ret_tmp[1838364]:3*string[1403484] "temp"
    (1402818 call chpl__init_tuple[1403506] _e0_args[1402795] _e1_args[1402797] _e2_args[1402799] ret_tmp[1838364])
    (1838367 'move' args[1402813] ret_tmp[1838364])
    const-val ret[1402803]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1402841]:string[26] "dead at end of block" "insert auto destroy"
      (1402843 'move' str[1402841](1838360 call chpl__initCopy[981348] ""))
      {
        const-val i[1402848]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1402850 'move' i[1402848] 0)
        {
          {
            {
              ref call_tmp[1406566]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1406568 'move' call_tmp[1406566](1407596 '.v' args[1402813] x0[1403478]))
              (1406574 call +=[38797] str[1402841] call_tmp[1406566])
            }
          }
        }
        label _continueLabel0[1406531]
        {
          {
            {
              ref call_tmp[1406911]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1406913 'move' call_tmp[1406911](1407630 '.v' args[1402813] x1[1403480]))
              (1406919 call +=[38797] str[1402841] call_tmp[1406911])
            }
          }
        }
        label _continueLabel1[1406876]
        {
          {
            {
              ref call_tmp[1407256]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1407258 'move' call_tmp[1407256](1407664 '.v' args[1402813] x2[1403482]))
              (1407264 call +=[38797] str[1402841] call_tmp[1407256])
            }
          }
        }
        label _continueLabel2[1407221]
        label _unused_continueLabel[1403239]
        label _breakLabel[1403241]
      }
      (1407669 'move' ret[1402803] str[1402841])
      (1848722 call chpl__autoDestroy[1721432] args[1402813])
      gotoReturn _end_stringify[1403466] _end_stringify[1403466]
    }
    (1848725 call chpl__autoDestroy[1721432] args[1402813])
    label _end_stringify[1403466]
    (1838358 '=' _retArg[1838356] ret[1402803])
    (1838362 return _void[55])
  }
  function stringify[1212978](const  ref arg _e0_args[1212980]:string[26], const in arg _e1_args[1212982]:int(64)[13], ref arg _retArg[1834994]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1212994]:(string,int(64))[1213661] "insert auto destroy"
    const-val ret_tmp[1835002]:(string,int(64))[1213661] "temp"
    (1212999 call chpl__init_tuple[1213672] _e0_args[1212980] _e1_args[1212982] ret_tmp[1835002])
    (1835005 'move' args[1212994] ret_tmp[1835002])
    const-val ret[1212986]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1213021]:string[26] "dead at end of block" "insert auto destroy"
      (1213023 'move' str[1213021](1834998 call chpl__initCopy[981348] ""))
      {
        const-val i[1213028]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1213030 'move' i[1213028] 0)
        {
          {
            {
              ref call_tmp[1216653]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1216655 'move' call_tmp[1216653](1217338 '.v' args[1212994] x0[1213657]))
              (1216661 call +=[38797] str[1213021] call_tmp[1216653])
            }
          }
        }
        label _continueLabel0[1216618]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1217229]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1217231 'move' call_tmp[1217229](1217445 '.' args[1212994] x1[1213659]))
                    const-val call_tmp[1217236]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1217448]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1217452 'move' coerce_tmp[1217448](1217450 'deref' call_tmp[1217229]))
                    const-val ret_tmp[1833161]:string[26] "temp"
                    (1217241 call _cast[1063153] coerce_tmp[1217448] ret_tmp[1833161])
                    (1833164 'move' call_tmp[1217236] ret_tmp[1833161])
                    (1217245 call +=[38797] str[1213021] call_tmp[1217236])
                    (1847224 call chpl__autoDestroy[1461530] call_tmp[1217236])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1216963]
        label _unused_continueLabel[1213419]
        label _breakLabel[1213421]
      }
      (1217457 'move' ret[1212986] str[1213021])
      (1847227 call chpl__autoDestroy[1552246] args[1212994])
      gotoReturn _end_stringify[1213646] _end_stringify[1213646]
    }
    (1847230 call chpl__autoDestroy[1552246] args[1212994])
    label _end_stringify[1213646]
    (1834996 '=' _retArg[1834994] ret[1212986])
    (1835000 return _void[55])
  }
  function stringify[1278990](const  ref arg _e0_args[1278992]:string[26], const in arg _e1_args[1278994]:int(64)[13], const  ref arg _e2_args[1278996]:string[26], const in arg _e3_args[1278998]:int(64)[13], const  ref arg _e4_args[1279000]:string[26], ref arg _retArg[1836896]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1279018]:(string,int(64),string,int(64),string)[1279697] "insert auto destroy"
    const-val ret_tmp[1836904]:(string,int(64),string,int(64),string)[1279697] "temp"
    (1279023 call chpl__init_tuple[1279714] _e0_args[1278992] _e1_args[1278994] _e2_args[1278996] _e3_args[1278998] _e4_args[1279000] ret_tmp[1836904])
    (1836907 'move' args[1279018] ret_tmp[1836904])
    const-val ret[1279004]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1279048]:string[26] "dead at end of block" "insert auto destroy"
      (1279050 'move' str[1279048](1836900 call chpl__initCopy[981348] ""))
      {
        const-val i[1279055]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1279057 'move' i[1279055] 0)
        {
          {
            {
              ref call_tmp[1283571]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1283573 'move' call_tmp[1283571](1285291 '.v' args[1279018] x0[1279687]))
              (1283579 call +=[38797] str[1279048] call_tmp[1283571])
            }
          }
        }
        label _continueLabel0[1283536]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284147]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1284149 'move' call_tmp[1284147](1285398 '.' args[1279018] x1[1279689]))
                    const-val call_tmp[1284154]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285401]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285405 'move' coerce_tmp[1285401](1285403 'deref' call_tmp[1284147]))
                    const-val ret_tmp[1833197]:string[26] "temp"
                    (1284159 call _cast[1063153] coerce_tmp[1285401] ret_tmp[1833197])
                    (1833200 'move' call_tmp[1284154] ret_tmp[1833197])
                    (1284163 call +=[38797] str[1279048] call_tmp[1284154])
                    (1847555 call chpl__autoDestroy[1461530] call_tmp[1284154])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1283881]
        {
          {
            {
              ref call_tmp[1284261]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1284263 'move' call_tmp[1284261](1285439 '.v' args[1279018] x2[1279691]))
              (1284269 call +=[38797] str[1279048] call_tmp[1284261])
            }
          }
        }
        label _continueLabel2[1284226]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284837]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1284839 'move' call_tmp[1284837](1285546 '.' args[1279018] x3[1279693]))
                    const-val call_tmp[1284844]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285549]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285553 'move' coerce_tmp[1285549](1285551 'deref' call_tmp[1284837]))
                    const-val ret_tmp[1833203]:string[26] "temp"
                    (1284849 call _cast[1063153] coerce_tmp[1285549] ret_tmp[1833203])
                    (1833206 'move' call_tmp[1284844] ret_tmp[1833203])
                    (1284853 call +=[38797] str[1279048] call_tmp[1284844])
                    (1847559 call chpl__autoDestroy[1461530] call_tmp[1284844])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1284571]
        {
          {
            {
              ref call_tmp[1284951]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1284953 'move' call_tmp[1284951](1285587 '.v' args[1279018] x4[1279695]))
              (1284959 call +=[38797] str[1279048] call_tmp[1284951])
            }
          }
        }
        label _continueLabel4[1284916]
        label _unused_continueLabel[1279446]
        label _breakLabel[1279448]
      }
      (1285592 'move' ret[1279004] str[1279048])
      (1847562 call chpl__autoDestroy[1557803] args[1279018])
      gotoReturn _end_stringify[1279673] _end_stringify[1279673]
    }
    (1847565 call chpl__autoDestroy[1557803] args[1279018])
    label _end_stringify[1279673]
    (1836898 '=' _retArg[1836896] ret[1279004])
    (1836902 return _void[55])
  }
  function stringify[1337788](const  ref arg _e0_args[1337790]:string[26], const  ref arg _e1_args[1337792]:string[26], const in arg _e2_args[1337794]:int(64)[13], const  ref arg _e3_args[1337796]:string[26], const in arg _e4_args[1337798]:range(int(64),bounded,false)[1026814], ref arg _retArg[1837603]:_ref(string)[937939]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1337816]:(string,string,int(64),string,range(int(64),bounded,false))[1338495] "insert auto destroy"
    const-val ret_tmp[1837613]:(string,string,int(64),string,range(int(64),bounded,false))[1338495] "temp"
    (1337821 call chpl__init_tuple[1338512] _e0_args[1337790] _e1_args[1337792] _e2_args[1337794] _e3_args[1337796] _e4_args[1337798] ret_tmp[1837613])
    (1837616 'move' args[1337816] ret_tmp[1837613])
    const-val ret[1337802]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1337846]:string[26] "dead at end of block" "insert auto destroy"
      (1337848 'move' str[1337846](1837609 call chpl__initCopy[981348] ""))
      {
        const-val i[1337853]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1337855 'move' i[1337853] 0)
        {
          {
            {
              ref call_tmp[1341735]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1341737 'move' call_tmp[1341735](1343455 '.v' args[1337816] x0[1338485]))
              (1341743 call +=[38797] str[1337846] call_tmp[1341735])
            }
          }
        }
        label _continueLabel0[1341700]
        {
          {
            {
              ref call_tmp[1342080]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1342082 'move' call_tmp[1342080](1343489 '.v' args[1337816] x1[1338487]))
              (1342088 call +=[38797] str[1337846] call_tmp[1342080])
            }
          }
        }
        label _continueLabel1[1342045]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1342656]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
                    (1342658 'move' call_tmp[1342656](1343596 '.' args[1337816] x2[1338489]))
                    const-val call_tmp[1342663]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343599]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343603 'move' coerce_tmp[1343599](1343601 'deref' call_tmp[1342656]))
                    const-val ret_tmp[1833209]:string[26] "temp"
                    (1342668 call _cast[1063153] coerce_tmp[1343599] ret_tmp[1833209])
                    (1833212 'move' call_tmp[1342663] ret_tmp[1833209])
                    (1342672 call +=[38797] str[1337846] call_tmp[1342663])
                    (1848053 call chpl__autoDestroy[1461530] call_tmp[1342663])
                  }
                }
              }
            }
          }
        }
        label _continueLabel2[1342390]
        {
          {
            {
              ref call_tmp[1342770]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1342772 'move' call_tmp[1342770](1343637 '.v' args[1337816] x3[1338491]))
              (1342778 call +=[38797] str[1337846] call_tmp[1342770])
            }
          }
        }
        label _continueLabel3[1342735]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1343346]:_ref(range(int(64),bounded,false))[1026858] "dead after last mention" "maybe param" "temp"
                    (1343348 'move' call_tmp[1343346](1343737 '.' args[1337816] x4[1338493]))
                    const-val call_tmp[1343353]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343740]:range(int(64),bounded,false)[1026814] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343744 'move' coerce_tmp[1343740](1837607 call chpl__initCopy[1085006] call_tmp[1343346]))
                    const-val ret_tmp[1834018]:string[26] "temp"
                    (1343358 call _cast[1119437] coerce_tmp[1343740] ret_tmp[1834018])
                    (1834021 'move' call_tmp[1343353] ret_tmp[1834018])
                    (1343362 call +=[38797] str[1337846] call_tmp[1343353])
                    (1848057 call chpl__autoDestroy[1461530] call_tmp[1343353])
                    (1848060 call chpl__autoDestroy[1534375] coerce_tmp[1343740])
                  }
                }
              }
            }
          }
        }
        label _continueLabel4[1343080]
        label _unused_continueLabel[1338244]
        label _breakLabel[1338246]
      }
      (1343749 'move' ret[1337802] str[1337846])
      (1848063 call chpl__autoDestroy[1660905] args[1337816])
      gotoReturn _end_stringify[1338471] _end_stringify[1338471]
    }
    (1848066 call chpl__autoDestroy[1660905] args[1337816])
    label _end_stringify[1338471]
    (1837605 '=' _retArg[1837603] ret[1337802])
    (1837611 return _void[55])
  }
  val _arg_to_proto_names[246561]:heap__tuple_6_star_string[2085326] "dead at end of block" "insert auto destroy" "private"
  function _ref(channel(true,dynamic,false))[1060956].write[1065956](const  ref arg this[1065962]:_ref(channel(true,dynamic,false))[1060956], const  ref arg _e0_args[1065964]:byteIndex[28170], ref arg error_out[1809992]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1066013]:1*byteIndex[1057081] "insert auto destroy"
    const-val ret_tmp[1833011]:1*byteIndex[1057081] "temp"
    (1066018 call chpl__init_tuple[1057099] _e0_args[1065964] ret_tmp[1833011])
    (1833014 'move' args[1066013] ret_tmp[1833011])
    val ret[1065968]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066051]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833329]:locale[28] "temp"
    (1066059 call getLocaleOfIoRequest[1066211] this[1065962] ret_tmp[1833329])
    (1833332 'move' call_tmp[1066051] ret_tmp[1833329])
    const-val origLocale[1066060]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1066062 'move' origLocale[1066060] call_tmp[1066051])
    const-val tmp[1066066]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1066068]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1066070 'move' call_tmp[1066068](1066073 call home[1061755] this[1065962]))
    const-val call_tmp[1066076]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1066418]:BaseLocale[91201] "dead after last mention" "temp"
    (1066423 'move' _locale_tmp_[1066418](1066420 call _value[89981] call_tmp[1066068]))
    (1066078 'move' call_tmp[1066076](1066080 '_wide_get_locale' _locale_tmp_[1066418]))
    (1066082 'move' tmp[1066066] call_tmp[1066076])
    val error[1809997]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1809999 'move' error[1809997] nil[44])
    val rvfDerefTmp[2083752]:channel(true,dynamic,false)[1060947] "temp"
    (2083756 'move' rvfDerefTmp[2083752](2083754 'deref' this[1065962]))
    val rvfDerefTmp[2083787]:locale[28] "temp"
    (2083790 'move' rvfDerefTmp[2083787] origLocale[1066060])
    val isdirect[2089767]:bool[10] "temp"
    (2089772 'move' isdirect[2089767](2089769 call chpl_doDirectExecuteOn[187423] tmp[1066066]))
    if isdirect[2089767]
    {
      (2089776 call on_fn[1066089] rvfDerefTmp[2083752] args[1066013] rvfDerefTmp[2083787] error[1809997])
    }
    {
      val _args_foron_fn[2089800]:_class_localson_fn[2089786] "temp"
      (2089804 'move' _args_foron_fn[2089800](2089802 'stack allocate class' _class_localson_fn[2089786]))
      (2089806 '.=' _args_foron_fn[2089800] _0_tmp[2089789] tmp[1066066])
      (2089810 '.=' _args_foron_fn[2089800] _1_rvfDerefTmp[2089791] rvfDerefTmp[2083752])
      ref tmp[2089814]:1*byteIndex[1057081] "temp"
      (2089818 'move' tmp[2089814](2089816 'set reference' args[1066013]))
      (2089820 '.=' _args_foron_fn[2089800] _2_args[2089793] tmp[2089814])
      (2089824 '.=' _args_foron_fn[2089800] _3_rvfDerefTmp[2089795] rvfDerefTmp[2083787])
      ref tmp[2089828]:Error[167938] "temp"
      (2089832 'move' tmp[2089828](2089830 'set reference' error[1809997]))
      (2089834 '.=' _args_foron_fn[2089800] _4_error[2089797] tmp[2089828])
      val _args_vforon_fn[2089838]:c_void_ptr[149] "temp"
      (2089842 'move' _args_vforon_fn[2089838](2089840 'cast_to_void_star' _args_foron_fn[2089800]))
      val _args_sizeon_fn[2089844]:int(64)[13] "temp"
      (2089848 'move' _args_sizeon_fn[2089844](2089846 'sizeof_bundle' _class_localson_fn[2089786]))
      on(2089904 call wrapon_fn[2089850] tmp[1066066] _args_vforon_fn[2089838] _args_sizeon_fn[2089844] _args_foron_fn[2089800])
    }
    val errorExists[2108832]:bool[10] "temp"
    (2108837 'move' errorExists[2108832](2108834 '!=' error[1809997] nil[44]))
    if errorExists[2108832]
    {
      (1810003 '=' error_out[1809992] error[1809997])
      (1844065 call chpl__autoDestroy[1461594] origLocale[1066060])
      (1844068 call chpl__autoDestroy[1535252] args[1066013])
      gotoErrorHandlingReturn _endwrite[1809994] _endwrite[1809994]
    }
    {
    }
    (1066196 'move' ret[1065968] 1)
    (1844071 call chpl__autoDestroy[1461594] origLocale[1066060])
    (1844074 call chpl__autoDestroy[1535252] args[1066013])
    label _endwrite[1809994]
    (1066201 return ret[1065968])
  }
  function _ref(channel(true,dynamic,false))[1060956].write[1164511](const  ref arg this[1164517]:_ref(channel(true,dynamic,false))[1060956], const  ref arg _e0_args[1164519]:string[26], const  ref arg _e1_args[1164521]:codepointIndex[28274], const  ref arg _e2_args[1164523]:string[26], ref arg error_out[1811016]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1164829]:(string,codepointIndex,string)[1158555] "insert auto destroy"
    const-val ret_tmp[1834618]:(string,codepointIndex,string)[1158555] "temp"
    (1164834 call chpl__init_tuple[1158568] _e0_args[1164519] _e1_args[1164521] _e2_args[1164523] ret_tmp[1834618])
    (1834621 'move' args[1164829] ret_tmp[1834618])
    val ret[1164527]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1164869]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833341]:locale[28] "temp"
    (1164877 call getLocaleOfIoRequest[1066211] this[1164517] ret_tmp[1833341])
    (1833344 'move' call_tmp[1164869] ret_tmp[1833341])
    const-val origLocale[1164878]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1164880 'move' origLocale[1164878] call_tmp[1164869])
    const-val tmp[1164884]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1164886]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1164888 'move' call_tmp[1164886](1164891 call home[1061755] this[1164517]))
    const-val call_tmp[1164894]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1165031]:BaseLocale[91201] "dead after last mention" "temp"
    (1165036 'move' _locale_tmp_[1165031](1165033 call _value[89981] call_tmp[1164886]))
    (1164896 'move' call_tmp[1164894](1164898 '_wide_get_locale' _locale_tmp_[1165031]))
    (1164900 'move' tmp[1164884] call_tmp[1164894])
    val error[1811021]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1811023 'move' error[1811021] nil[44])
    val rvfDerefTmp[2083975]:channel(true,dynamic,false)[1060947] "temp"
    (2083979 'move' rvfDerefTmp[2083975](2083977 'deref' this[1164517]))
    val rvfDerefTmp[2084038]:locale[28] "temp"
    (2084041 'move' rvfDerefTmp[2084038] origLocale[1164878])
    val isdirect[2091124]:bool[10] "temp"
    (2091129 'move' isdirect[2091124](2091126 call chpl_doDirectExecuteOn[187423] tmp[1164884]))
    if isdirect[2091124]
    {
      (2091133 call on_fn[1164907] rvfDerefTmp[2083975] args[1164829] rvfDerefTmp[2084038] error[1811021])
    }
    {
      val _args_foron_fn[2091157]:_class_localson_fn[2091143] "temp"
      (2091161 'move' _args_foron_fn[2091157](2091159 'stack allocate class' _class_localson_fn[2091143]))
      (2091163 '.=' _args_foron_fn[2091157] _0_tmp[2091146] tmp[1164884])
      (2091167 '.=' _args_foron_fn[2091157] _1_rvfDerefTmp[2091148] rvfDerefTmp[2083975])
      ref tmp[2091171]:(string,codepointIndex,string)[1158555] "temp"
      (2091175 'move' tmp[2091171](2091173 'set reference' args[1164829]))
      (2091177 '.=' _args_foron_fn[2091157] _2_args[2091150] tmp[2091171])
      (2091181 '.=' _args_foron_fn[2091157] _3_rvfDerefTmp[2091152] rvfDerefTmp[2084038])
      ref tmp[2091185]:Error[167938] "temp"
      (2091189 'move' tmp[2091185](2091187 'set reference' error[1811021]))
      (2091191 '.=' _args_foron_fn[2091157] _4_error[2091154] tmp[2091185])
      val _args_vforon_fn[2091195]:c_void_ptr[149] "temp"
      (2091199 'move' _args_vforon_fn[2091195](2091197 'cast_to_void_star' _args_foron_fn[2091157]))
      val _args_sizeon_fn[2091201]:int(64)[13] "temp"
      (2091205 'move' _args_sizeon_fn[2091201](2091203 'sizeof_bundle' _class_localson_fn[2091143]))
      on(2091261 call wrapon_fn[2091207] tmp[1164884] _args_vforon_fn[2091195] _args_sizeon_fn[2091201] _args_foron_fn[2091157])
    }
    val errorExists[2109328]:bool[10] "temp"
    (2109333 'move' errorExists[2109328](2109330 '!=' error[1811021] nil[44]))
    if errorExists[2109328]
    {
      (1811027 '=' error_out[1811016] error[1811021])
      (1845829 call chpl__autoDestroy[1461594] origLocale[1164878])
      (1845832 call chpl__autoDestroy[1543334] args[1164829])
      gotoErrorHandlingReturn _endwrite[1811018] _endwrite[1811018]
    }
    {
    }
    (1165014 'move' ret[1164527] 1)
    (1845835 call chpl__autoDestroy[1461594] origLocale[1164878])
    (1845838 call chpl__autoDestroy[1543334] args[1164829])
    label _endwrite[1811018]
    (1165019 return ret[1164527])
  }
  function _ref(channel(true,dynamic,false))[1060956].write[1179975](const  ref arg this[1179981]:_ref(channel(true,dynamic,false))[1060956], const  ref arg _e0_args[1179983]:string[26], const  ref arg _e1_args[1179985]:codepointIndex[28274], const  ref arg _e2_args[1179987]:string[26], const in arg _e3_args[1179989]:int(64)[13], ref arg error_out[1811513]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1180307]:(string,codepointIndex,string,int(64))[1176520] "insert auto destroy"
    const-val ret_tmp[1834676]:(string,codepointIndex,string,int(64))[1176520] "temp"
    (1180312 call chpl__init_tuple[1176535] _e0_args[1179983] _e1_args[1179985] _e2_args[1179987] _e3_args[1179989] ret_tmp[1834676])
    (1834679 'move' args[1180307] ret_tmp[1834676])
    val ret[1179993]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1180348]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1833347]:locale[28] "temp"
    (1180356 call getLocaleOfIoRequest[1066211] this[1179981] ret_tmp[1833347])
    (1833350 'move' call_tmp[1180348] ret_tmp[1833347])
    const-val origLocale[1180357]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1180359 'move' origLocale[1180357] call_tmp[1180348])
    const-val tmp[1180363]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1180365]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1180367 'move' call_tmp[1180365](1180370 call home[1061755] this[1179981]))
    const-val call_tmp[1180373]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1180516]:BaseLocale[91201] "dead after last mention" "temp"
    (1180521 'move' _locale_tmp_[1180516](1180518 call _value[89981] call_tmp[1180365]))
    (1180375 'move' call_tmp[1180373](1180377 '_wide_get_locale' _locale_tmp_[1180516]))
    (1180379 'move' tmp[1180363] call_tmp[1180373])
    val error[1811518]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1811520 'move' error[1811518] nil[44])
    val rvfDerefTmp[2084062]:channel(true,dynamic,false)[1060947] "temp"
    (2084066 'move' rvfDerefTmp[2084062](2084064 'deref' this[1179981]))
    val rvfDerefTmp[2084139]:locale[28] "temp"
    (2084142 'move' rvfDerefTmp[2084139] origLocale[1180357])
    val isdirect[2091266]:bool[10] "temp"
    (2091271 'move' isdirect[2091266](2091268 call chpl_doDirectExecuteOn[187423] tmp[1180363]))
    if isdirect[2091266]
    {
      (2091275 call on_fn[1180386] rvfDerefTmp[2084062] args[1180307] rvfDerefTmp[2084139] error[1811518])
    }
    {
      val _args_foron_fn[2091299]:_class_localson_fn[2091285] "temp"
      (2091303 'move' _args_foron_fn[2091299](2091301 'stack allocate class' _class_localson_fn[2091285]))
      (2091305 '.=' _args_foron_fn[2091299] _0_tmp[2091288] tmp[1180363])
      (2091309 '.=' _args_foron_fn[2091299] _1_rvfDerefTmp[2091290] rvfDerefTmp[2084062])
      ref tmp[2091313]:(string,codepointIndex,string,int(64))[1176520] "temp"
      (2091317 'move' tmp[2091313](2091315 'set reference' args[1180307]))
      (2091319 '.=' _args_foron_fn[2091299] _2_args[2091292] tmp[2091313])
      (2091323 '.=' _args_foron_fn[2091299] _3_rvfDerefTmp[2091294] rvfDerefTmp[2084139])
      ref tmp[2091327]:Error[167938] "temp"
      (2091331 'move' tmp[2091327](2091329 'set reference' error[1811518]))
      (2091333 '.=' _args_foron_fn[2091299] _4_error[2091296] tmp[2091327])
      val _args_vforon_fn[2091337]:c_void_ptr[149] "temp"
      (2091341 'move' _args_vforon_fn[2091337](2091339 'cast_to_void_star' _args_foron_fn[2091299]))
      val _args_sizeon_fn[2091343]:int(64)[13] "temp"
      (2091347 'move' _args_sizeon_fn[2091343](2091345 'sizeof_bundle' _class_localson_fn[2091285]))
      on(2091403 call wrapon_fn[2091349] tmp[1180363] _args_vforon_fn[2091337] _args_sizeon_fn[2091343] _args_foron_fn[2091299])
    }
    val errorExists[2109608]:bool[10] "temp"
    (2109613 'move' errorExists[2109608](2109610 '!=' error[1811518] nil[44]))
    if errorExists[2109608]
    {
      (1811524 '=' error_out[1811513] error[1811518])
      (1846892 call chpl__autoDestroy[1461594] origLocale[1180357])
      (1846895 call chpl__autoDestroy[1543655] args[1180307])
      gotoErrorHandlingReturn _endwrite[1811515] _endwrite[1811515]
    }
    {
    }
    (1180493 'move' ret[1179993] 1)
    (1846898 call chpl__autoDestroy[1461594] origLocale[1180357])
    (1846901 call chpl__autoDestroy[1543655] args[1180307])
    label _endwrite[1811515]
    (1180498 return ret[1179993])
  }
  function _ref(channel(true,dynamic,true))[1021834].write[1392368](const  ref arg this[1392374]:_ref(channel(true,dynamic,true))[1021834], const  ref arg _e0_args[1392376]:[domain(1,int(64),false)] real(64)[1365840], const  ref arg _e1_args[1392378]:ioNewline[238701], ref arg error_out[1812355]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1392392]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "insert auto destroy"
    const-val ret_tmp[1838276]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
    (1392397 call chpl__init_tuple[1392605] _e0_args[1392376] _e1_args[1392378] ret_tmp[1838276])
    (1838279 'move' args[1392392] ret_tmp[1838276])
    val ret[1392382]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1392431]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1838288]:locale[28] "temp"
    (1392439 call getLocaleOfIoRequest[1392654] this[1392374] ret_tmp[1838288])
    (1838291 'move' call_tmp[1392431] ret_tmp[1838288])
    const-val origLocale[1392440]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1392442 'move' origLocale[1392440] call_tmp[1392431])
    const-val tmp[1392446]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1392448]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1392450 'move' call_tmp[1392448](1392453 call home[1023042] this[1392374]))
    const-val call_tmp[1392456]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1392791]:BaseLocale[91201] "dead after last mention" "temp"
    (1392796 'move' _locale_tmp_[1392791](1392793 call _value[89981] call_tmp[1392448]))
    (1392458 'move' call_tmp[1392456](1392460 '_wide_get_locale' _locale_tmp_[1392791]))
    (1392462 'move' tmp[1392446] call_tmp[1392456])
    val error[1812360]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1812362 'move' error[1812360] nil[44])
    val rvfDerefTmp[2084278]:channel(true,dynamic,true)[1021825] "temp"
    (2084282 'move' rvfDerefTmp[2084278](2084280 'deref' this[1392374]))
    val rvfDerefTmp[2084327]:locale[28] "temp"
    (2084330 'move' rvfDerefTmp[2084327] origLocale[1392440])
    val isdirect[2094088]:bool[10] "temp"
    (2094093 'move' isdirect[2094088](2094090 call chpl_doDirectExecuteOn[187423] tmp[1392446]))
    if isdirect[2094088]
    {
      (2094097 call on_fn[1392469] rvfDerefTmp[2084278] args[1392392] rvfDerefTmp[2084327] error[1812360])
    }
    {
      val _args_foron_fn[2094121]:_class_localson_fn[2094107] "temp"
      (2094125 'move' _args_foron_fn[2094121](2094123 'stack allocate class' _class_localson_fn[2094107]))
      (2094127 '.=' _args_foron_fn[2094121] _0_tmp[2094110] tmp[1392446])
      (2094131 '.=' _args_foron_fn[2094121] _1_rvfDerefTmp[2094112] rvfDerefTmp[2084278])
      ref tmp[2094135]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
      (2094139 'move' tmp[2094135](2094137 'set reference' args[1392392]))
      (2094141 '.=' _args_foron_fn[2094121] _2_args[2094114] tmp[2094135])
      (2094145 '.=' _args_foron_fn[2094121] _3_rvfDerefTmp[2094116] rvfDerefTmp[2084327])
      ref tmp[2094149]:Error[167938] "temp"
      (2094153 'move' tmp[2094149](2094151 'set reference' error[1812360]))
      (2094155 '.=' _args_foron_fn[2094121] _4_error[2094118] tmp[2094149])
      val _args_vforon_fn[2094159]:c_void_ptr[149] "temp"
      (2094163 'move' _args_vforon_fn[2094159](2094161 'cast_to_void_star' _args_foron_fn[2094121]))
      val _args_sizeon_fn[2094165]:int(64)[13] "temp"
      (2094169 'move' _args_sizeon_fn[2094165](2094167 'sizeof_bundle' _class_localson_fn[2094107]))
      on(2094225 call wrapon_fn[2094171] tmp[1392446] _args_vforon_fn[2094159] _args_sizeon_fn[2094165] _args_foron_fn[2094121])
    }
    val errorExists[2110008]:bool[10] "temp"
    (2110013 'move' errorExists[2110008](2110010 '!=' error[1812360] nil[44]))
    if errorExists[2110008]
    {
      (1812366 '=' error_out[1812355] error[1812360])
      (1848379 call chpl__autoDestroy[1461594] origLocale[1392440])
      (1848382 call chpl__autoDestroy[1721320] args[1392392])
      gotoErrorHandlingReturn _endwrite[1812357] _endwrite[1812357]
    }
    {
    }
    (1392576 'move' ret[1392382] 1)
    (1848385 call chpl__autoDestroy[1461594] origLocale[1392440])
    (1848388 call chpl__autoDestroy[1721320] args[1392392])
    label _endwrite[1812357]
    (1392581 return ret[1392382])
  }
  function _ref(channel(true,dynamic,true))[1021834].write[1433030](const  ref arg this[1433036]:_ref(channel(true,dynamic,true))[1021834], const in arg _e0_args[1433038]:int(64)[13], const  ref arg _e1_args[1433040]:ioNewline[238701], ref arg error_out[1813617]:Error[167938]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1433054]:(int(64),ioNewline)[1433256] "insert auto destroy"
    const-val ret_tmp[1838472]:(int(64),ioNewline)[1433256] "temp"
    (1433059 call chpl__init_tuple[1433267] _e0_args[1433038] _e1_args[1433040] ret_tmp[1838472])
    (1838475 'move' args[1433054] ret_tmp[1838472])
    val ret[1433044]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1433093]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1838294]:locale[28] "temp"
    (1433101 call getLocaleOfIoRequest[1392654] this[1433036] ret_tmp[1838294])
    (1838297 'move' call_tmp[1433093] ret_tmp[1838294])
    const-val origLocale[1433102]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1433104 'move' origLocale[1433102] call_tmp[1433093])
    const-val tmp[1433108]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1433110]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1433112 'move' call_tmp[1433110](1433115 call home[1023042] this[1433036]))
    const-val call_tmp[1433118]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1433326]:BaseLocale[91201] "dead after last mention" "temp"
    (1433331 'move' _locale_tmp_[1433326](1433328 call _value[89981] call_tmp[1433110]))
    (1433120 'move' call_tmp[1433118](1433122 '_wide_get_locale' _locale_tmp_[1433326]))
    (1433124 'move' tmp[1433108] call_tmp[1433118])
    val error[1813622]:Error[167938] "concurrently accessed" "error variable" "temp"
    (1813624 'move' error[1813622] nil[44])
    val rvfDerefTmp[2084425]:channel(true,dynamic,true)[1021825] "temp"
    (2084429 'move' rvfDerefTmp[2084425](2084427 'deref' this[1433036]))
    val rvfDerefTmp[2084474]:locale[28] "temp"
    (2084477 'move' rvfDerefTmp[2084474] origLocale[1433102])
    val isdirect[2095255]:bool[10] "temp"
    (2095260 'move' isdirect[2095255](2095257 call chpl_doDirectExecuteOn[187423] tmp[1433108]))
    if isdirect[2095255]
    {
      (2095264 call on_fn[1433131] rvfDerefTmp[2084425] args[1433054] rvfDerefTmp[2084474] error[1813622])
    }
    {
      val _args_foron_fn[2095288]:_class_localson_fn[2095274] "temp"
      (2095292 'move' _args_foron_fn[2095288](2095290 'stack allocate class' _class_localson_fn[2095274]))
      (2095294 '.=' _args_foron_fn[2095288] _0_tmp[2095277] tmp[1433108])
      (2095298 '.=' _args_foron_fn[2095288] _1_rvfDerefTmp[2095279] rvfDerefTmp[2084425])
      ref tmp[2095302]:(int(64),ioNewline)[1433256] "temp"
      (2095306 'move' tmp[2095302](2095304 'set reference' args[1433054]))
      (2095308 '.=' _args_foron_fn[2095288] _2_args[2095281] tmp[2095302])
      (2095312 '.=' _args_foron_fn[2095288] _3_rvfDerefTmp[2095283] rvfDerefTmp[2084474])
      ref tmp[2095316]:Error[167938] "temp"
      (2095320 'move' tmp[2095316](2095318 'set reference' error[1813622]))
      (2095322 '.=' _args_foron_fn[2095288] _4_error[2095285] tmp[2095316])
      val _args_vforon_fn[2095326]:c_void_ptr[149] "temp"
      (2095330 'move' _args_vforon_fn[2095326](2095328 'cast_to_void_star' _args_foron_fn[2095288]))
      val _args_sizeon_fn[2095332]:int(64)[13] "temp"
      (2095336 'move' _args_sizeon_fn[2095332](2095334 'sizeof_bundle' _class_localson_fn[2095274]))
      on(2095392 call wrapon_fn[2095338] tmp[1433108] _args_vforon_fn[2095326] _args_sizeon_fn[2095332] _args_foron_fn[2095288])
    }
    val errorExists[2110576]:bool[10] "temp"
    (2110581 'move' errorExists[2110576](2110578 '!=' error[1813622] nil[44]))
    if errorExists[2110576]
    {
      (1813628 '=' error_out[1813617] error[1813622])
      (1848833 call chpl__autoDestroy[1461594] origLocale[1433102])
      (1848836 call chpl__autoDestroy[1723426] args[1433054])
      gotoErrorHandlingReturn _endwrite[1813619] _endwrite[1813619]
    }
    {
    }
    (1433238 'move' ret[1433044] 1)
    (1848839 call chpl__autoDestroy[1461594] origLocale[1433102])
    (1848842 call chpl__autoDestroy[1723426] args[1433054])
    label _endwrite[1813619]
    (1433243 return ret[1433044])
  }
  function _ref(channel(true,dynamic,true))[1021834].writeln[1392223](const  ref arg this[1392229]:_ref(channel(true,dynamic,true))[1021834], const  ref arg _e0_args[1392231]:[domain(1,int(64),false)] real(64)[1365840], ref arg error_out[1812336]:Error[167938]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1392235]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1392282]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1392308]:ioNewline[238701] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1392360]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1392364 'move' default_arg_skipWhitespaceOnly[1392360](1392362 call init_default_skipWhitespaceOnly[1392328]))
    (1392311 call init[893669] initTemp[1392308] default_arg_skipWhitespaceOnly[1392360])
    (1392284 'move' call_tmp[1392282] initTemp[1392308])
    const-val call_tmp[1392288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1812341]:Error[167938] "error variable" "temp"
    (1812343 'move' error[1812341] nil[44])
    (1392290 'move' call_tmp[1392288](1392296 call write[1392368] this[1392229] _e0_args[1392231] call_tmp[1392282] error[1812341]))
    val errorExists[2110000]:bool[10] "temp"
    (2110005 'move' errorExists[2110000](2110002 '!=' error[1812341] nil[44]))
    if errorExists[2110000]
    {
      (1812347 '=' error_out[1812336] error[1812341])
      (1848373 call chpl__autoDestroy[1463493] call_tmp[1392282])
      gotoErrorHandlingReturn _endwriteln[1812338] _endwriteln[1812338]
    }
    (1432666 'move' ret[1392235] call_tmp[1392288])
    (1848376 call chpl__autoDestroy[1463493] call_tmp[1392282])
    label _endwriteln[1812338]
    (1392304 return ret[1392235])
  }
  function _ref(channel(true,dynamic,true))[1021834].writeln[1432955](const  ref arg this[1432961]:_ref(channel(true,dynamic,true))[1021834], const in arg _e0_args[1432963]:int(64)[13], ref arg error_out[1813598]:Error[167938]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1432967]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1432977]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1433003]:ioNewline[238701] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1433022]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1433026 'move' default_arg_skipWhitespaceOnly[1433022](1433024 call init_default_skipWhitespaceOnly[1392328]))
    (1433006 call init[893669] initTemp[1433003] default_arg_skipWhitespaceOnly[1433022])
    (1432979 'move' call_tmp[1432977] initTemp[1433003])
    const-val call_tmp[1432983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1813603]:Error[167938] "error variable" "temp"
    (1813605 'move' error[1813603] nil[44])
    (1432985 'move' call_tmp[1432983](1432991 call write[1433030] this[1432961] _e0_args[1432963] call_tmp[1432977] error[1813603]))
    val errorExists[2110568]:bool[10] "temp"
    (2110573 'move' errorExists[2110568](2110570 '!=' error[1813603] nil[44]))
    if errorExists[2110568]
    {
      (1813609 '=' error_out[1813598] error[1813603])
      (1848827 call chpl__autoDestroy[1463493] call_tmp[1432977])
      gotoErrorHandlingReturn _endwriteln[1813600] _endwriteln[1813600]
    }
    (1433823 'move' ret[1432967] call_tmp[1432983])
    (1848830 call chpl__autoDestroy[1463493] call_tmp[1432977])
    label _endwriteln[1813600]
    (1432999 return ret[1432967])
  }
  function _ref(channel(true,dynamic,false))[1060956].close[1062362](const  ref arg this[1062368]:_ref(channel(true,dynamic,false))[1060956], ref arg error_out[1809834]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1062374]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062376 'move' call_tmp[1062374](1062379 call ENOERR[223654]))
    val err[1062380]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1062520]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1065723 call =[224133] init_coerce_tmp[1062520] call_tmp[1062374])
    (1062382 'move' err[1062380] init_coerce_tmp[1062520])
    ref call_tmp[1062387]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1062389 'move' call_tmp[1062387](1062392 call _channel_internal[1061789] this[1062368]))
    const-val call_tmp[1062395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062569]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062573 'move' coerce_tmp[1062569](1062571 'deref' call_tmp[1062387]))
    (1062397 'move' call_tmp[1062395](1062400 call is_c_nil[1062527] coerce_tmp[1062569]))
    const-val call_tmp[1062402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062404 'move' call_tmp[1062402] call_tmp[1062395])
    if call_tmp[1062402]
    {
      const-val call_tmp[1062411]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062584]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062590 'move' coerce_tmp[1062584](1062586 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832551]:owned SystemError[1000238] "temp"
      (1062419 call fromSyserr[1017113] coerce_tmp[1062584] "cannot close invalid channel" ret_tmp[1832551])
      (1832554 'move' call_tmp[1062411] ret_tmp[1832551])
      val call_tmp[1062422]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062593]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832485]:owned Error[966458] "temp"
      (1062595 call _cast[1015747] call_tmp[1062411] ret_tmp[1832485])
      (1832488 'move' coerce_tmp[1062593] ret_tmp[1832485])
      const-val _formal_tmp_in_err[1062772]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062776 'move' _formal_tmp_in_err[1062772] coerce_tmp[1062593])
      (1062424 'move' call_tmp[1062422](1062427 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1062772]))
      {
        val castedError[1809839]:Error[167938] "temp"
        (1809845 'move' castedError[1809839] call_tmp[1062422])
        (1809847 '=' error_out[1809834] castedError[1809839])
        gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
      }
    }
    const-val tmp[1062432]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1062434]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1062436 'move' call_tmp[1062434](1062439 call home[1061755] this[1062368]))
    const-val call_tmp[1062442]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062782]:BaseLocale[91201] "dead after last mention" "temp"
    (1062787 'move' _locale_tmp_[1062782](1062784 call _value[89981] call_tmp[1062434]))
    (1062444 'move' call_tmp[1062442](1062446 '_wide_get_locale' _locale_tmp_[1062782]))
    (1062448 'move' tmp[1062432] call_tmp[1062442])
    val rvfDerefTmp[2083738]:channel(true,dynamic,false)[1060947] "temp"
    (2083742 'move' rvfDerefTmp[2083738](2083740 'deref' this[1062368]))
    val isdirect[2089507]:bool[10] "temp"
    (2089512 'move' isdirect[2089507](2089509 call chpl_doDirectExecuteOn[187423] tmp[1062432]))
    if isdirect[2089507]
    {
      (2089516 call on_fn[1062455] rvfDerefTmp[2083738] err[1062380])
    }
    {
      val _args_foron_fn[2089534]:_class_localson_fn[2089524] "temp"
      (2089538 'move' _args_foron_fn[2089534](2089536 'stack allocate class' _class_localson_fn[2089524]))
      (2089540 '.=' _args_foron_fn[2089534] _0_tmp[2089527] tmp[1062432])
      (2089544 '.=' _args_foron_fn[2089534] _1_rvfDerefTmp[2089529] rvfDerefTmp[2083738])
      ref tmp[2089548]:syserr[223584] "temp"
      (2089552 'move' tmp[2089548](2089550 'set reference' err[1062380]))
      (2089554 '.=' _args_foron_fn[2089534] _2_err[2089531] tmp[2089548])
      val _args_vforon_fn[2089558]:c_void_ptr[149] "temp"
      (2089562 'move' _args_vforon_fn[2089558](2089560 'cast_to_void_star' _args_foron_fn[2089534]))
      val _args_sizeon_fn[2089564]:int(64)[13] "temp"
      (2089568 'move' _args_sizeon_fn[2089564](2089566 'sizeof_bundle' _class_localson_fn[2089524]))
      on(2089608 call wrapon_fn[2089570] tmp[1062432] _args_vforon_fn[2089558] _args_sizeon_fn[2089564] _args_foron_fn[2089534])
    }
    {
    }
    const-val call_tmp[1062495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062497 'move' call_tmp[1062495](1062500 call _cond_test[223981] err[1062380]))
    if call_tmp[1062495]
    {
      {
        val error[1809851]:Error[167938] "error variable" "temp"
        (1809860 'move' error[1809851] nil[44])
        (1062509 call _ch_ioerror[1062865] this[1062368] err[1062380] "in channel.close" error[1809851])
        val errorExists[2108768]:bool[10] "temp"
        (2108773 'move' errorExists[2108768](2108770 '!=' error[1809851] nil[44]))
        if errorExists[2108768]
        {
          gotoErrorHandling handler[1809852] handler[1809852]
        }
        label handler[1809852]
        const-val shouldHandleError[1809871]:bool[10] "temp"
        val errorExists[2108776]:bool[10] "temp"
        (2108781 'move' errorExists[2108776](2108778 '!=' error[1809851] nil[44]))
        (1809875 'move' shouldHandleError[1809871] errorExists[2108776])
        if shouldHandleError[1809871]
        {
          (1809867 '=' error_out[1809834] error[1809851])
          gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
        }
      }
    }
    label _endclose[1809836]
    (1062516 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080691].close[1082094](const  ref arg this[1082100]:_ref(channel(false,dynamic,false))[1080691], ref arg error_out[1810630]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1082106]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082108 'move' call_tmp[1082106](1082111 call ENOERR[223654]))
    val err[1082112]:syserr[223584] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082252]:syserr[223584] "dead at end of block" "initialized later" "temp"
    (1082832 call =[224133] init_coerce_tmp[1082252] call_tmp[1082106])
    (1082114 'move' err[1082112] init_coerce_tmp[1082252])
    ref call_tmp[1082119]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
    (1082121 'move' call_tmp[1082119](1082124 call _channel_internal[1081521] this[1082100]))
    const-val call_tmp[1082127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082259]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082263 'move' coerce_tmp[1082259](1082261 'deref' call_tmp[1082119]))
    (1082129 'move' call_tmp[1082127](1082132 call is_c_nil[1062527] coerce_tmp[1082259]))
    const-val call_tmp[1082134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082136 'move' call_tmp[1082134] call_tmp[1082127])
    if call_tmp[1082134]
    {
      const-val call_tmp[1082143]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082268]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082274 'move' coerce_tmp[1082268](1082270 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832563]:owned SystemError[1000238] "temp"
      (1082151 call fromSyserr[1017113] coerce_tmp[1082268] "cannot close invalid channel" ret_tmp[1832563])
      (1832566 'move' call_tmp[1082143] ret_tmp[1832563])
      val call_tmp[1082154]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082277]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832503]:owned Error[966458] "temp"
      (1082279 call _cast[1015747] call_tmp[1082143] ret_tmp[1832503])
      (1832506 'move' coerce_tmp[1082277] ret_tmp[1832503])
      const-val _formal_tmp_in_err[1082456]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082460 'move' _formal_tmp_in_err[1082456] coerce_tmp[1082277])
      (1082156 'move' call_tmp[1082154](1082159 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1082456]))
      {
        val castedError[1810635]:Error[167938] "temp"
        (1810641 'move' castedError[1810635] call_tmp[1082154])
        (1810643 '=' error_out[1810630] castedError[1810635])
        gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
      }
    }
    const-val tmp[1082164]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    ref call_tmp[1082166]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1082168 'move' call_tmp[1082166](1082171 call home[1081487] this[1082100]))
    const-val call_tmp[1082174]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082466]:BaseLocale[91201] "dead after last mention" "temp"
    (1082471 'move' _locale_tmp_[1082466](1082468 call _value[89981] call_tmp[1082166]))
    (1082176 'move' call_tmp[1082174](1082178 '_wide_get_locale' _locale_tmp_[1082466]))
    (1082180 'move' tmp[1082164] call_tmp[1082174])
    val rvfDerefTmp[2083916]:channel(false,dynamic,false)[1080682] "temp"
    (2083920 'move' rvfDerefTmp[2083916](2083918 'deref' this[1082100]))
    val isdirect[2090728]:bool[10] "temp"
    (2090733 'move' isdirect[2090728](2090730 call chpl_doDirectExecuteOn[187423] tmp[1082164]))
    if isdirect[2090728]
    {
      (2090737 call on_fn[1082187] rvfDerefTmp[2083916] err[1082112])
    }
    {
      val _args_foron_fn[2090755]:_class_localson_fn[2090745] "temp"
      (2090759 'move' _args_foron_fn[2090755](2090757 'stack allocate class' _class_localson_fn[2090745]))
      (2090761 '.=' _args_foron_fn[2090755] _0_tmp[2090748] tmp[1082164])
      (2090765 '.=' _args_foron_fn[2090755] _1_rvfDerefTmp[2090750] rvfDerefTmp[2083916])
      ref tmp[2090769]:syserr[223584] "temp"
      (2090773 'move' tmp[2090769](2090771 'set reference' err[1082112]))
      (2090775 '.=' _args_foron_fn[2090755] _2_err[2090752] tmp[2090769])
      val _args_vforon_fn[2090779]:c_void_ptr[149] "temp"
      (2090783 'move' _args_vforon_fn[2090779](2090781 'cast_to_void_star' _args_foron_fn[2090755]))
      val _args_sizeon_fn[2090785]:int(64)[13] "temp"
      (2090789 'move' _args_sizeon_fn[2090785](2090787 'sizeof_bundle' _class_localson_fn[2090745]))
      on(2090829 call wrapon_fn[2090791] tmp[1082164] _args_vforon_fn[2090779] _args_sizeon_fn[2090785] _args_foron_fn[2090755])
    }
    {
    }
    const-val call_tmp[1082227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082229 'move' call_tmp[1082227](1082232 call _cond_test[223981] err[1082112]))
    if call_tmp[1082227]
    {
      {
        val error[1810647]:Error[167938] "error variable" "temp"
        (1810656 'move' error[1810647] nil[44])
        (1082241 call _ch_ioerror[1082549] this[1082100] err[1082112] "in channel.close" error[1810647])
        val errorExists[2109128]:bool[10] "temp"
        (2109133 'move' errorExists[2109128](2109130 '!=' error[1810647] nil[44]))
        if errorExists[2109128]
        {
          gotoErrorHandling handler[1810648] handler[1810648]
        }
        label handler[1810648]
        const-val shouldHandleError[1810667]:bool[10] "temp"
        val errorExists[2109136]:bool[10] "temp"
        (2109141 'move' errorExists[2109136](2109138 '!=' error[1810647] nil[44]))
        (1810671 'move' shouldHandleError[1810667] errorExists[2109136])
        if shouldHandleError[1810667]
        {
          (1810663 '=' error_out[1810630] error[1810647])
          gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
        }
      }
    }
    label _endclose[1810632]
    (1082248 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080691].readBytes[1082839](const  ref arg this[1082845]:_ref(channel(false,dynamic,false))[1080691], const in arg x[1082847]:c_ptr(uint(8))[937423], const in arg len[1082851]:int(64)[13], ref arg error_out[1810756]:Error[167938]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1082859]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830559]:locale[28] "temp"
    (1082864 call here[90435] ret_tmp[1830559])
    (1830562 'move' call_tmp[1082859] ret_tmp[1830559])
    ref call_tmp[1082865]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
    (1082867 'move' call_tmp[1082865](1082870 call home[1081487] this[1082845]))
    const-val call_tmp[1082873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082875 'move' call_tmp[1082873](1082878 call !=[782910] call_tmp[1082859] call_tmp[1082865]))
    const-val call_tmp[1082881]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082883 'move' call_tmp[1082881] call_tmp[1082873])
    if call_tmp[1082881]
    {
      const-val call_tmp[1082890]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083047]:IllegalArgumentError[168200] "dead after last mention" "temp"
      (1083049 'move' new_temp[1083047](1083034 call _new[1064107] "bad remote channel.readBytes"))
      const-val initTemp[1083056]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "temp"
      (1083059 call init[1064209] initTemp[1083056] new_temp[1083047])
      (1082892 'move' call_tmp[1082890] initTemp[1083056])
      val call_tmp[1082899]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083073]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1833263]:owned Error[966458] "temp"
      (1083075 call _cast[1064730] call_tmp[1082890] ret_tmp[1833263])
      (1833266 'move' coerce_tmp[1083073] ret_tmp[1833263])
      const-val _formal_tmp_in_err[1083252]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083256 'move' _formal_tmp_in_err[1083252] coerce_tmp[1083073])
      (1082901 'move' call_tmp[1082899](1082904 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1083252]))
      {
        val castedError[1810761]:Error[167938] "temp"
        (1810767 'move' castedError[1810761] call_tmp[1082899])
        (1810769 '=' error_out[1810756] castedError[1810761])
        (1844223 call chpl__autoDestroy[1461594] call_tmp[1082859])
        gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
      }
    }
    (1844226 call chpl__autoDestroy[1461594] call_tmp[1082859])
    ref call_tmp[1082909]:_ref(qio_channel_ptr_t)[936884] "dead at end of block" "maybe param" "temp"
    (1082911 'move' call_tmp[1082909](1082914 call _channel_internal[1081521] this[1082845]))
    const-val call_tmp[1082917]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083309]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083315 'move' coerce_tmp[1083309](1083311 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083317]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083321 'move' coerce_tmp[1083317](1083319 'deref' call_tmp[1082909]))
    (1082919 'move' call_tmp[1082917](1082922 call qio_channel_read_amt[1083283] coerce_tmp[1083309] coerce_tmp[1083317] x[1082847] len[1082851]))
    const-val err[1082927]:syserr[223584] "dead at end of block" "insert auto destroy"
    (1082929 'move' err[1082927](1083324 call chpl__initCopy[964485] call_tmp[1082917]))
    const-val call_tmp[1082933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082935 'move' call_tmp[1082933](1082938 call _cond_test[223981] err[1082927]))
    if call_tmp[1082933]
    {
      {
        val error[1810773]:Error[167938] "error variable" "temp"
        (1810782 'move' error[1810773] nil[44])
        (1082947 call _ch_ioerror[1082549] this[1082845] err[1082927] "in channel.readBytes" error[1810773])
        val errorExists[2109184]:bool[10] "temp"
        (2109189 'move' errorExists[2109184](2109186 '!=' error[1810773] nil[44]))
        if errorExists[2109184]
        {
          gotoErrorHandling handler[1810774] handler[1810774]
        }
        label handler[1810774]
        const-val shouldHandleError[1810793]:bool[10] "temp"
        val errorExists[2109192]:bool[10] "temp"
        (2109197 'move' errorExists[2109192](2109194 '!=' error[1810773] nil[44]))
        (1810797 'move' shouldHandleError[1810793] errorExists[2109192])
        if shouldHandleError[1810793]
        {
          (1810789 '=' error_out[1810756] error[1810773])
          gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
        }
      }
    }
    label _endreadBytes[1810758]
    (1082954 return _void[55])
  }
  const-val stdin[250208]:channel(false,dynamic,true)[985627] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250235]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250264]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250494]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250499]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721866]:6*string[985051] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[723997]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724004]:channel(false,dynamic,true)[985627] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016897]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016961]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017009]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017587]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724009]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724014]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724021]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022472]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022536]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022587]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022624]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724026]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724031]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724038]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023908]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023919]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023930]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023941]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935597](ref arg this[1806914]:_ref(file)[948734]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715588]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
      (715591 'move' call_tmp[715588](396392 call _file_internal[886975] this[1806914]))
      const-val coerce_tmp[985682]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (985686 'move' coerce_tmp[985682](985684 'deref' call_tmp[715588]))
      (235905 call qio_file_release[232638] coerce_tmp[985682])
      ref call_tmp[715595]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
      (715598 'move' call_tmp[715595](235909 call _file_internal[886975] this[1806914]))
      (235913 call =[859772] call_tmp[715595] QIO_FILE_PTR_NULL[231442])
    }
    (935604 return _void[55])
  }
  function on_fn[935606](const in arg this[1806916]:file[235580], ref arg ret[1806918]:_ref(iostyle)[967550], ref arg error_out[1809021]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1809025]:Error[167938] "error variable" "temp"
        (1809034 'move' error[1809025] nil[44])
        ref rvfRerefTmp[2083427]:_ref(file)[948734] "temp"
        (2083431 'move' rvfRerefTmp[2083427](2083428 'set reference' this[1806916]))
        (235983 call checkAssumingLocal[235768] rvfRerefTmp[2083427] error[1809025])
        val errorExists[2108376]:bool[10] "temp"
        (2108381 'move' errorExists[2108376](2108378 '!=' error[1809025] nil[44]))
        if errorExists[2108376]
        {
          gotoErrorHandling handler[1809026] handler[1809026]
        }
        label handler[1809026]
        const-val shouldHandleError[1809045]:bool[10] "temp"
        val errorExists[2108384]:bool[10] "temp"
        (2108389 'move' errorExists[2108384](2108386 '!=' error[1809025] nil[44]))
        (1809049 'move' shouldHandleError[1809045] errorExists[2108384])
        if shouldHandleError[1809045]
        {
          (1809041 '=' error_out[1809021] error[1809025])
          gotoErrorHandlingReturn _endon_fn[1809023] _endon_fn[1809023]
        }
      }
      val local_style[235989]:iostyle[231844] "dead at end of block" "insert auto destroy"
      ref call_tmp[715628]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083420]:_ref(file)[948734] "temp"
      (2083424 'move' rvfRerefTmp[2083420](2083421 'set reference' this[1806916]))
      (715631 'move' call_tmp[715628](396402 call _file_internal[886975] rvfRerefTmp[2083420]))
      const-val coerce_tmp[1017571]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017575 'move' coerce_tmp[1017571](1017573 'deref' call_tmp[715628]))
      (235997 call qio_file_get_style[232821] coerce_tmp[1017571] local_style[235989])
      (236001 call =[879089] ret[1806918] local_style[235989])
    }
    label _endon_fn[1809023]
    (935613 return _void[55])
  }
  function on_fn[935615](const in arg this[1806920]:file[235580], ref arg err[1806922]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715681]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083441]:_ref(file)[948734] "temp"
      (2083445 'move' rvfRerefTmp[2083441](2083442 'set reference' this[1806920]))
      (715684 'move' call_tmp[715681](396421 call _file_internal[886975] rvfRerefTmp[2083441]))
      const-val call_tmp[715686]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060833]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060837 'move' coerce_tmp[1060833](1060835 'deref' call_tmp[715681]))
      (715689 'move' call_tmp[715686](236065 call qio_file_close[232748] coerce_tmp[1060833]))
      (236066 call =[224112] err[1806922] call_tmp[715686])
    }
    (935622 return _void[55])
  }
  function on_fn[935633](const in arg this[1806924]:file[235580], ref arg err[1806926]:_ref(syserr)[948832], ref arg ret[1806928]:_ref(string)[937939], ref arg error_out[1809053]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1809057]:Error[167938] "error variable" "temp"
        (1809066 'move' error[1809057] nil[44])
        ref rvfRerefTmp[2083469]:_ref(file)[948734] "temp"
        (2083473 'move' rvfRerefTmp[2083469](2083470 'set reference' this[1806924]))
        (236241 call checkAssumingLocal[235768] rvfRerefTmp[2083469] error[1809057])
        val errorExists[2108392]:bool[10] "temp"
        (2108397 'move' errorExists[2108392](2108394 '!=' error[1809057] nil[44]))
        if errorExists[2108392]
        {
          gotoErrorHandling handler[1809058] handler[1809058]
        }
        label handler[1809058]
        const-val shouldHandleError[1809077]:bool[10] "temp"
        val errorExists[2108400]:bool[10] "temp"
        (2108405 'move' errorExists[2108400](2108402 '!=' error[1809057] nil[44]))
        (1809081 'move' shouldHandleError[1809077] errorExists[2108400])
        if shouldHandleError[1809077]
        {
          (1809073 '=' error_out[1809053] error[1809057])
          gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
        }
      }
      val tmp[236247]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021467 'move' tmp[236247](1021465 'cast' c_string[19] nil[44]))
      val tmp2[236252]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021472 'move' tmp2[236252](1021470 'cast' c_string[19] nil[44]))
      ref call_tmp[715767]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083455]:_ref(file)[948734] "temp"
      (2083459 'move' rvfRerefTmp[2083455](2083456 'set reference' this[1806924]))
      (715770 'move' call_tmp[715767](396445 call _file_internal[886975] rvfRerefTmp[2083455]))
      const-val call_tmp[715772]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019119]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019123 'move' coerce_tmp[1019119](1019121 'deref' call_tmp[715767]))
      (715775 'move' call_tmp[715772](236261 call qio_file_path[233679] coerce_tmp[1019119] tmp[236247]))
      (236262 call =[224112] err[1806926] call_tmp[715772])
      const-val call_tmp[715777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1807636]:syserr[223584] "temp"
      (1807639 'move' tmp[1807636](1807637 'deref' err[1806926]))
      (715780 'move' call_tmp[715777](236266 call ![223958] tmp[1807636]))
      const-val call_tmp[715782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715785 'move' call_tmp[715782] call_tmp[715777])
      if call_tmp[715782]
      {
        ref call_tmp[715789]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2083462]:_ref(file)[948734] "temp"
        (2083466 'move' rvfRerefTmp[2083462](2083463 'set reference' this[1806924]))
        (715792 'move' call_tmp[715789](396453 call _file_internal[886975] rvfRerefTmp[2083462]))
        const-val call_tmp[715794]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1019132]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1019136 'move' coerce_tmp[1019132](1019134 'deref' call_tmp[715789]))
        (715797 'move' call_tmp[715794](236274 call qio_shortest_path[233695] coerce_tmp[1019132] tmp2[236252] tmp[236247]))
        (236275 call =[224112] err[1806926] call_tmp[715794])
      }
      (236286 call chpl_free_c_string[22706] tmp[236247])
      const-val call_tmp[715799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1807642]:syserr[223584] "temp"
      (1807645 'move' tmp[1807642](1807643 'deref' err[1806926]))
      (715802 'move' call_tmp[715799](236289 call ![223958] tmp[1807642]))
      const-val call_tmp[715804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715807 'move' call_tmp[715804] call_tmp[715799])
      if call_tmp[715804]
      {
        const-val call_tmp[715809]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1019158]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1809086]:Error[167938] "error variable" "temp"
        (1809088 'move' error[1809086] nil[44])
        (1019163 'move' default_arg_length[1019158](1019160 call createStringWithNewBuffer_default_length[964046] tmp2[236252] error[1809086]))
        val errorExists[2108408]:bool[10] "temp"
        (2108413 'move' errorExists[2108408](2108410 '!=' error[1809086] nil[44]))
        if errorExists[2108408]
        {
          (1809092 '=' error_out[1809053] error[1809086])
          gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
        }
        val error[1809101]:Error[167938] "error variable" "temp"
        (1809103 'move' error[1809101] nil[44])
        const-val ret_tmp[1829039]:string[26] "temp"
        (236300 call createStringWithNewBuffer[30410] tmp2[236252] default_arg_length[1019158] escape[173652] error[1809101] ret_tmp[1829039])
        (1829042 'move' call_tmp[715809] ret_tmp[1829039])
        val errorExists[2108416]:bool[10] "temp"
        (2108421 'move' errorExists[2108416](2108418 '!=' error[1809101] nil[44]))
        if errorExists[2108416]
        {
          (1809107 '=' error_out[1809053] error[1809101])
          gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
        }
        (236301 call =[38269] ret[1806928] call_tmp[715809])
        (1842629 call chpl__autoDestroy[1461530] call_tmp[715809])
      }
      (236312 call chpl_free_c_string[22706] tmp2[236252])
    }
    label _endon_fn[1809055]
    (935640 return _void[55])
  }
  function on_fn[1016695](ref arg err[1806936]:_ref(syserr)[948832], const in arg start[1806938]:int(64)[13], const in arg end[1806940]:int(64)[13], const in arg style[1806942]:iostyle[231844], const in arg this[1806944]:file[235580], ref arg ret[1806946]:_ref(channel(false,dynamic,true))[985636], const in arg hints[1806948]:int(32)[95], ref arg error_out[1809224]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1809228]:Error[167938] "error variable" "temp"
        (1809237 'move' error[1809228] nil[44])
        ref rvfRerefTmp[2083498]:_ref(file)[948734] "temp"
        (2083502 'move' rvfRerefTmp[2083498](2083499 'set reference' this[1806944]))
        (1016706 call checkAssumingLocal[235768] rvfRerefTmp[2083498] error[1809228])
        val errorExists[2108472]:bool[10] "temp"
        (2108477 'move' errorExists[2108472](2108474 '!=' error[1809228] nil[44]))
        if errorExists[2108472]
        {
          gotoErrorHandling handler[1809229] handler[1809229]
        }
        label handler[1809229]
        const-val shouldHandleError[1809248]:bool[10] "temp"
        val errorExists[2108480]:bool[10] "temp"
        (2108485 'move' errorExists[2108480](2108482 '!=' error[1809228] nil[44]))
        (1809252 'move' shouldHandleError[1809248] errorExists[2108480])
        if shouldHandleError[1809248]
        {
          (1809244 '=' error_out[1809224] error[1809228])
          gotoErrorHandlingReturn _endon_fn[1809226] _endon_fn[1809226]
        }
      }
      const-val call_tmp[1016708]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1017631]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1018430]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1807648]:iostyle[231844] "temp"
      (1807651 'move' tmp[1807648] style[1806942])
      ref rvfRerefTmp[2083491]:_ref(file)[948734] "temp"
      (2083495 'move' rvfRerefTmp[2083491](2083492 'set reference' this[1806944]))
      (1017634 call init[1017647] initTemp[1017631] rvfRerefTmp[2083491] _formal_tmp_out_error[1018430] hints[1806948] start[1806938] end[1806940] tmp[1807648])
      (1018432 call =[224112] err[1806936] _formal_tmp_out_error[1018430])
      (1016710 'move' call_tmp[1016708] initTemp[1017631])
      (1016724 call =[1018439] ret[1806946] call_tmp[1016708])
      (1842795 call chpl__autoDestroy[1471159] call_tmp[1016708])
    }
    label _endon_fn[1809226]
    (1016730 return _void[55])
  }
  function on_fn[1017725](ref arg this[1806950]:_ref(channel(false,dynamic,true))[985636], const in arg hints[1806952]:int(32)[95], const in arg local_style[1806954]:iostyle[231844], const in arg end[1806956]:int(64)[13], const in arg start[1806958]:int(64)[13], const in arg f[1806960]:file[235580], ref arg _formal_tmp_error[1806962]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1017731]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1017733 'move' call_tmp[1017731](1017736 call home[1018024] this[1806950]))
      ref call_tmp[1017739]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083525]:_ref(file)[948734] "temp"
      (2083529 'move' rvfRerefTmp[2083525](2083526 'set reference' f[1806960]))
      (1017741 'move' call_tmp[1017739](1017744 call home[886949] rvfRerefTmp[2083525]))
      (1017748 call =[90631] call_tmp[1017731] call_tmp[1017739])
      ref call_tmp[1017810]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1017812 'move' call_tmp[1017810](1017815 call _channel_internal[1018366] this[1806950]))
      ref call_tmp[1017818]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083532]:_ref(file)[948734] "temp"
      (2083536 'move' rvfRerefTmp[2083532](2083533 'set reference' f[1806960]))
      (1017820 'move' call_tmp[1017818](1017823 call _file_internal[886975] rvfRerefTmp[2083532]))
      const-val call_tmp[1017833]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1018399]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018403 'move' coerce_tmp[1018399](1018401 'deref' call_tmp[1017818]))
      const-val coerce_tmp[1018405]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018411 'move' coerce_tmp[1018405](1018407 'cast' int(32)[95] 1))
      const-val coerce_tmp[1018413]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018419 'move' coerce_tmp[1018413](1018415 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2083511]:_ref(iostyle)[967550] "temp"
      (2083515 'move' rvfRerefTmp[2083511](2083512 'set reference' local_style[1806954]))
      (1017835 'move' call_tmp[1017833](1017838 call qio_channel_create[232878] call_tmp[1017810] coerce_tmp[1018399] hints[1806952] coerce_tmp[1018405] coerce_tmp[1018413] start[1806958] end[1806956] rvfRerefTmp[2083511]))
      (1017848 call =[224112] _formal_tmp_error[1806962] call_tmp[1017833])
    }
    (1017851 return _void[55])
  }
  function on_fn[1018665](const in arg rhs[1806964]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018671]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083546]:_ref(channel(false,dynamic,true))[985636] "temp"
      (2083550 'move' rvfRerefTmp[2083546](2083547 'set reference' rhs[1806964]))
      (1018673 'move' call_tmp[1018671](1018676 call _channel_internal[1018366] rvfRerefTmp[2083546]))
      const-val coerce_tmp[1019055]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019059 'move' coerce_tmp[1019055](1019057 'deref' call_tmp[1018671]))
      (1018680 call qio_channel_retain[232951] coerce_tmp[1019055])
    }
    (1018682 return _void[55])
  }
  function on_fn[1018709](const  ref arg lhs[1806966]:_ref(channel(false,dynamic,true))[985636]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018715]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1018717 'move' call_tmp[1018715](1018720 call _channel_internal[1018366] lhs[1806966]))
      const-val coerce_tmp[1019074]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019078 'move' coerce_tmp[1019074](1019076 'deref' call_tmp[1018715]))
      (1018724 call qio_channel_release[232961] coerce_tmp[1019074])
    }
    (1018726 return _void[55])
  }
  function on_fn[1022270](const in arg end[1806972]:int(64)[13], const in arg style[1806974]:iostyle[231844], const in arg this[1806976]:file[235580], ref arg ret[1806978]:_ref(channel(true,dynamic,true))[1021834], const in arg hints[1806980]:int(32)[95], const in arg start[1806982]:int(64)[13], ref arg err[1806984]:_ref(syserr)[948832], ref arg error_out[1809340]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1809344]:Error[167938] "error variable" "temp"
        (1809353 'move' error[1809344] nil[44])
        ref rvfRerefTmp[2083575]:_ref(file)[948734] "temp"
        (2083579 'move' rvfRerefTmp[2083575](2083576 'set reference' this[1806976]))
        (1022281 call checkAssumingLocal[235768] rvfRerefTmp[2083575] error[1809344])
        val errorExists[2108520]:bool[10] "temp"
        (2108525 'move' errorExists[2108520](2108522 '!=' error[1809344] nil[44]))
        if errorExists[2108520]
        {
          gotoErrorHandling handler[1809345] handler[1809345]
        }
        label handler[1809345]
        const-val shouldHandleError[1809364]:bool[10] "temp"
        val errorExists[2108528]:bool[10] "temp"
        (2108533 'move' errorExists[2108528](2108530 '!=' error[1809344] nil[44]))
        (1809368 'move' shouldHandleError[1809364] errorExists[2108528])
        if shouldHandleError[1809364]
        {
          (1809360 '=' error_out[1809340] error[1809344])
          gotoErrorHandlingReturn _endon_fn[1809342] _endon_fn[1809342]
        }
      }
      const-val call_tmp[1022283]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1022667]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1023138]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1807654]:iostyle[231844] "temp"
      (1807657 'move' tmp[1807654] style[1806974])
      ref rvfRerefTmp[2083568]:_ref(file)[948734] "temp"
      (2083572 'move' rvfRerefTmp[2083568](2083569 'set reference' this[1806976]))
      (1022670 call init[1022683] initTemp[1022667] rvfRerefTmp[2083568] _formal_tmp_out_error[1023138] hints[1806980] start[1806982] end[1806972] tmp[1807654])
      (1023140 call =[224112] err[1806984] _formal_tmp_out_error[1023138])
      (1022285 'move' call_tmp[1022283] initTemp[1022667])
      (1022299 call =[1023147] ret[1806978] call_tmp[1022283])
      (1842818 call chpl__autoDestroy[1534138] call_tmp[1022283])
    }
    label _endon_fn[1809342]
    (1022305 return _void[55])
  }
  function on_fn[1022761](const in arg f[1806986]:file[235580], ref arg _formal_tmp_error[1806988]:_ref(syserr)[948832], const in arg end[1806990]:int(64)[13], ref arg this[1806992]:_ref(channel(true,dynamic,true))[1021834], const in arg hints[1806994]:int(32)[95], const in arg local_style[1806996]:iostyle[231844], const in arg start[1806998]:int(64)[13]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1022767]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1022769 'move' call_tmp[1022767](1022772 call home[1023042] this[1806992]))
      ref call_tmp[1022775]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083589]:_ref(file)[948734] "temp"
      (2083593 'move' rvfRerefTmp[2083589](2083590 'set reference' f[1806986]))
      (1022777 'move' call_tmp[1022775](1022780 call home[886949] rvfRerefTmp[2083589]))
      (1022784 call =[90631] call_tmp[1022767] call_tmp[1022775])
      ref call_tmp[1022846]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1022848 'move' call_tmp[1022846](1022851 call _channel_internal[1023076] this[1806992]))
      ref call_tmp[1022854]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083596]:_ref(file)[948734] "temp"
      (2083600 'move' rvfRerefTmp[2083596](2083597 'set reference' f[1806986]))
      (1022856 'move' call_tmp[1022854](1022859 call _file_internal[886975] rvfRerefTmp[2083596]))
      const-val call_tmp[1022869]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1023107]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023111 'move' coerce_tmp[1023107](1023109 'deref' call_tmp[1022854]))
      const-val coerce_tmp[1023113]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023119 'move' coerce_tmp[1023113](1023115 'cast' int(32)[95] 0))
      const-val coerce_tmp[1023121]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023127 'move' coerce_tmp[1023121](1023123 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2083609]:_ref(iostyle)[967550] "temp"
      (2083613 'move' rvfRerefTmp[2083609](2083610 'set reference' local_style[1806996]))
      (1022871 'move' call_tmp[1022869](1022874 call qio_channel_create[232878] call_tmp[1022846] coerce_tmp[1023107] hints[1806994] coerce_tmp[1023113] coerce_tmp[1023121] start[1806998] end[1806990] rvfRerefTmp[2083609]))
      (1022884 call =[224112] _formal_tmp_error[1806988] call_tmp[1022869])
    }
    (1022887 return _void[55])
  }
  function on_fn[1023373](const in arg rhs[1807000]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023379]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083623]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2083627 'move' rvfRerefTmp[2083623](2083624 'set reference' rhs[1807000]))
      (1023381 'move' call_tmp[1023379](1023384 call _channel_internal[1023076] rvfRerefTmp[2083623]))
      const-val coerce_tmp[1023763]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023767 'move' coerce_tmp[1023763](1023765 'deref' call_tmp[1023379]))
      (1023388 call qio_channel_retain[232951] coerce_tmp[1023763])
    }
    (1023390 return _void[55])
  }
  function on_fn[1023417](const  ref arg lhs[1807002]:_ref(channel(true,dynamic,true))[1021834]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023423]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1023425 'move' call_tmp[1023423](1023428 call _channel_internal[1023076] lhs[1807002]))
      const-val coerce_tmp[1023782]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023786 'move' coerce_tmp[1023782](1023784 'deref' call_tmp[1023423]))
      (1023432 call qio_channel_release[232961] coerce_tmp[1023782])
    }
    (1023434 return _void[55])
  }
  function on_fn[1061022](const in arg start[1807016]:int(64)[13], ref arg ret[1807018]:_ref(channel(true,dynamic,false))[1060956], const in arg end[1807020]:int(64)[13], const in arg style[1807022]:iostyle[231844], const in arg this[1807024]:file[235580], ref arg err[1807026]:_ref(syserr)[948832], const in arg hints[1807028]:int(32)[95], ref arg error_out[1809771]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1809775]:Error[167938] "error variable" "temp"
        (1809784 'move' error[1809775] nil[44])
        ref rvfRerefTmp[2083683]:_ref(file)[948734] "temp"
        (2083687 'move' rvfRerefTmp[2083683](2083684 'set reference' this[1807024]))
        (1061033 call checkAssumingLocal[235768] rvfRerefTmp[2083683] error[1809775])
        val errorExists[2108744]:bool[10] "temp"
        (2108749 'move' errorExists[2108744](2108746 '!=' error[1809775] nil[44]))
        if errorExists[2108744]
        {
          gotoErrorHandling handler[1809776] handler[1809776]
        }
        label handler[1809776]
        const-val shouldHandleError[1809795]:bool[10] "temp"
        val errorExists[2108752]:bool[10] "temp"
        (2108757 'move' errorExists[2108752](2108754 '!=' error[1809775] nil[44]))
        (1809799 'move' shouldHandleError[1809795] errorExists[2108752])
        if shouldHandleError[1809795]
        {
          (1809791 '=' error_out[1809771] error[1809775])
          gotoErrorHandlingReturn _endon_fn[1809773] _endon_fn[1809773]
        }
      }
      const-val call_tmp[1061035]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1061380]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1061851]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1807660]:iostyle[231844] "temp"
      (1807663 'move' tmp[1807660] style[1807022])
      ref rvfRerefTmp[2083676]:_ref(file)[948734] "temp"
      (2083680 'move' rvfRerefTmp[2083676](2083677 'set reference' this[1807024]))
      (1061383 call init[1061396] initTemp[1061380] rvfRerefTmp[2083676] _formal_tmp_out_error[1061851] hints[1807028] start[1807016] end[1807020] tmp[1807660])
      (1061853 call =[224112] err[1807026] _formal_tmp_out_error[1061851])
      (1061037 'move' call_tmp[1061035] initTemp[1061380])
      (1061051 call =[1061860] ret[1807018] call_tmp[1061035])
      (1844043 call chpl__autoDestroy[1536314] call_tmp[1061035])
    }
    label _endon_fn[1809773]
    (1061057 return _void[55])
  }
  function on_fn[1061474](ref arg _formal_tmp_error[1807030]:_ref(syserr)[948832], const in arg end[1807032]:int(64)[13], const in arg hints[1807034]:int(32)[95], const in arg local_style[1807036]:iostyle[231844], ref arg this[1807038]:_ref(channel(true,dynamic,false))[1060956], const in arg start[1807040]:int(64)[13], const in arg f[1807042]:file[235580]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1061480]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1061482 'move' call_tmp[1061480](1061485 call home[1061755] this[1807038]))
      ref call_tmp[1061488]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083710]:_ref(file)[948734] "temp"
      (2083714 'move' rvfRerefTmp[2083710](2083711 'set reference' f[1807042]))
      (1061490 'move' call_tmp[1061488](1061493 call home[886949] rvfRerefTmp[2083710]))
      (1061497 call =[90631] call_tmp[1061480] call_tmp[1061488])
      ref call_tmp[1061559]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1061561 'move' call_tmp[1061559](1061564 call _channel_internal[1061789] this[1807038]))
      ref call_tmp[1061567]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083717]:_ref(file)[948734] "temp"
      (2083721 'move' rvfRerefTmp[2083717](2083718 'set reference' f[1807042]))
      (1061569 'move' call_tmp[1061567](1061572 call _file_internal[886975] rvfRerefTmp[2083717]))
      const-val call_tmp[1061582]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1061820]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061824 'move' coerce_tmp[1061820](1061822 'deref' call_tmp[1061567]))
      const-val coerce_tmp[1061826]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061832 'move' coerce_tmp[1061826](1061828 'cast' int(32)[95] 0))
      const-val coerce_tmp[1061834]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061840 'move' coerce_tmp[1061834](1061836 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2083696]:_ref(iostyle)[967550] "temp"
      (2083700 'move' rvfRerefTmp[2083696](2083697 'set reference' local_style[1807036]))
      (1061584 'move' call_tmp[1061582](1061587 call qio_channel_create[232878] call_tmp[1061559] coerce_tmp[1061820] hints[1807034] coerce_tmp[1061826] coerce_tmp[1061834] start[1807040] end[1807032] rvfRerefTmp[2083696]))
      (1061597 call =[224112] _formal_tmp_error[1807030] call_tmp[1061582])
    }
    (1061600 return _void[55])
  }
  function on_fn[1062086](const in arg rhs[1807044]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062092]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083731]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2083735 'move' rvfRerefTmp[2083731](2083732 'set reference' rhs[1807044]))
      (1062094 'move' call_tmp[1062092](1062097 call _channel_internal[1061789] rvfRerefTmp[2083731]))
      const-val coerce_tmp[1062285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062289 'move' coerce_tmp[1062285](1062287 'deref' call_tmp[1062092]))
      (1062101 call qio_channel_retain[232951] coerce_tmp[1062285])
    }
    (1062103 return _void[55])
  }
  function on_fn[1062130](const  ref arg lhs[1807046]:_ref(channel(true,dynamic,false))[1060956]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062136]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1062138 'move' call_tmp[1062136](1062141 call _channel_internal[1061789] lhs[1807046]))
      const-val coerce_tmp[1062304]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062308 'move' coerce_tmp[1062304](1062306 'deref' call_tmp[1062136]))
      (1062145 call qio_channel_release[232961] coerce_tmp[1062304])
    }
    (1062147 return _void[55])
  }
  function on_fn[1062455](const in arg this[1807048]:channel(true,dynamic,false)[1060947], ref arg err[1807050]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062469]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083745]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2083749 'move' rvfRerefTmp[2083745](2083746 'set reference' this[1807048]))
      (1062471 'move' call_tmp[1062469](1062474 call _channel_internal[1061789] rvfRerefTmp[2083745]))
      const-val call_tmp[1062477]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062848]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062854 'move' coerce_tmp[1062848](1062850 'cast' int(32)[95] 0))
      const-val coerce_tmp[1062856]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062860 'move' coerce_tmp[1062856](1062858 'deref' call_tmp[1062469]))
      (1062479 'move' call_tmp[1062477](1062482 call qio_channel_close[233140] coerce_tmp[1062848] coerce_tmp[1062856]))
      (1062486 call =[224112] err[1807050] call_tmp[1062477])
    }
    (1062491 return _void[55])
  }
  function on_fn[1062932](const  ref arg this[1807052]:_ref(channel(true,dynamic,false))[1060956], ref arg path[1807054]:_ref(string)[937939], ref arg offset[1807056]:_ref(int(64))[936572], ref arg error_out[1809926]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1062938]:c_string[19] "dead at end of block" "insert auto destroy"
      (1063140 'move' tmp_path[1062938](1063138 'cast' c_string[19] nil[44]))
      val tmp_offset[1062944]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1062946]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1063143 'move' tmp_offset[1062944] 0)
      const-val call_tmp[1062957]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1062959 'move' call_tmp[1062957](1062962 call ENOERR[223654]))
      val err[1062963]:syserr[223584] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1063085]:syserr[223584] "dead at end of block" "initialized later" "temp"
      (1063131 call =[224133] init_coerce_tmp[1063085] call_tmp[1062957])
      (1062965 'move' err[1062963] init_coerce_tmp[1063085])
      ref call_tmp[1062978]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1062980 'move' call_tmp[1062978](1062983 call _channel_internal[1061789] this[1807052]))
      const-val call_tmp[1062986]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1063095]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063101 'move' coerce_tmp[1063095](1063097 'cast' int(32)[95] 0))
      const-val coerce_tmp[1063103]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063107 'move' coerce_tmp[1063103](1063105 'deref' call_tmp[1062978]))
      (1062988 'move' call_tmp[1062986](1062991 call qio_channel_path_offset[232924] coerce_tmp[1063095] coerce_tmp[1063103] tmp_path[1062938] tmp_offset[1062944]))
      (1062997 call =[224112] err[1062963] call_tmp[1062986])
      const-val call_tmp[1063004]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063006 'move' call_tmp[1063004](1063009 call ![223958] err[1062963]))
      const-val call_tmp[1063011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063013 'move' call_tmp[1063011] call_tmp[1063004])
      if call_tmp[1063011]
      {
        const-val call_tmp[1063020]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1063116]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1809931]:Error[167938] "error variable" "temp"
        (1809933 'move' error[1809931] nil[44])
        (1063121 'move' default_arg_length[1063116](1063118 call createStringWithNewBuffer_default_length[964046] tmp_path[1062938] error[1809931]))
        val errorExists[2108808]:bool[10] "temp"
        (2108813 'move' errorExists[2108808](2108810 '!=' error[1809931] nil[44]))
        if errorExists[2108808]
        {
          (1809937 '=' error_out[1809926] error[1809931])
          gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
        }
        val error[1809946]:Error[167938] "error variable" "temp"
        (1809948 'move' error[1809946] nil[44])
        const-val ret_tmp[1829069]:string[26] "temp"
        (1063025 call createStringWithNewBuffer[30410] tmp_path[1062938] default_arg_length[1063116] replace[173648] error[1809946] ret_tmp[1829069])
        (1829072 'move' call_tmp[1063020] ret_tmp[1829069])
        val errorExists[2108816]:bool[10] "temp"
        (2108821 'move' errorExists[2108816](2108818 '!=' error[1809946] nil[44]))
        if errorExists[2108816]
        {
          (1809952 '=' error_out[1809926] error[1809946])
          gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
        }
        (1063030 call =[38269] path[1807054] call_tmp[1063020])
        (1844058 call chpl__autoDestroy[1461530] call_tmp[1063020])
        (1063037 call chpl_free_c_string[22706] tmp_path[1062938])
        (1063042 call =[435327] offset[1807056] tmp_offset[1062944])
      }
    }
    label _endon_fn[1809928]
    (1063049 return _void[55])
  }
  function on_fn[1066089](const in arg this[1807058]:channel(true,dynamic,false)[1060947], const  ref arg args[1807060]:_ref(1*byteIndex)[1057131], const in arg origLocale[1807062]:locale[28], ref arg error_out[1810011]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1810015]:Error[167938] "error variable" "temp"
        (1810024 'move' error[1810015] nil[44])
        ref rvfRerefTmp[2083759]:_ref(channel(true,dynamic,false))[1060956] "temp"
        (2083763 'move' rvfRerefTmp[2083759](2083760 'set reference' this[1807058]))
        (1066100 call lock[1066428] rvfRerefTmp[2083759] error[1810015])
        val errorExists[2108840]:bool[10] "temp"
        (2108845 'move' errorExists[2108840](2108842 '!=' error[1810015] nil[44]))
        if errorExists[2108840]
        {
          gotoErrorHandling handler[1810016] handler[1810016]
        }
        label handler[1810016]
        const-val shouldHandleError[1810035]:bool[10] "temp"
        val errorExists[2108848]:bool[10] "temp"
        (2108853 'move' errorExists[2108848](2108850 '!=' error[1810015] nil[44]))
        (1810039 'move' shouldHandleError[1810035] errorExists[2108848])
        if shouldHandleError[1810035]
        {
          (1810031 '=' error_out[1810011] error[1810015])
          gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
        }
      }
      {
        const-val i[1066110]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1066112 'move' i[1066110] 0)
        {
          {
            {
              val error[1810043]:Error[167938] "error variable" "temp"
              (1810052 'move' error[1810043] nil[44])
              ref call_tmp[1066933]:_ref(byteIndex)[948759] "dead after last mention" "maybe param" "temp"
              (1066935 'move' call_tmp[1066933](1067009 '.v' args[1807060] x0[1057079]))
              ref rvfRerefTmp[2083766]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2083770 'move' rvfRerefTmp[2083766](2083767 'set reference' this[1807058]))
              val rvfRerefTmp[2083793]:locale[28] "temp"
              (2083796 'move' rvfRerefTmp[2083793] origLocale[1807062])
              (1066944 call _writeOne[1067012] rvfRerefTmp[2083766] call_tmp[1066933] rvfRerefTmp[2083793] error[1810043])
              val errorExists[2108856]:bool[10] "temp"
              (2108861 'move' errorExists[2108856](2108858 '!=' error[1810043] nil[44]))
              if errorExists[2108856]
              {
                gotoErrorHandling handler[1810044] handler[1810044]
              }
              label handler[1810044]
              const-val shouldHandleError[1810063]:bool[10] "temp"
              val errorExists[2108864]:bool[10] "temp"
              (2108869 'move' errorExists[2108864](2108866 '!=' error[1810043] nil[44]))
              (1810067 'move' shouldHandleError[1810063] errorExists[2108864])
              if shouldHandleError[1810063]
              {
                (1810059 '=' error_out[1810011] error[1810043])
                ref rvfRerefTmp[2083773]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2083777 'move' rvfRerefTmp[2083773](2083774 'set reference' this[1807058]))
                (1844079 call unlock[1066825] rvfRerefTmp[2083773])
                gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
              }
            }
          }
        }
        label _continueLabel0[1066920]
        label _unused_continueLabel[1066188]
        label _breakLabel[1066190]
      }
      ref rvfRerefTmp[2083780]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2083784 'move' rvfRerefTmp[2083780](2083781 'set reference' this[1807058]))
      (1844084 call unlock[1066825] rvfRerefTmp[2083780])
    }
    label _endon_fn[1810013]
    (1066192 return _void[55])
  }
  function on_fn[1068868](const  ref arg this[1807064]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1807066]:int(64)[13], const in arg origLocale[1807068]:locale[28], ref arg error_out[1810295]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1810299]:Error[167938] "error variable" "temp"
        (1810308 'move' error[1810299] nil[44])
        (1068879 call lock[1066428] this[1807064] error[1810299])
        val errorExists[2108976]:bool[10] "temp"
        (2108981 'move' errorExists[2108976](2108978 '!=' error[1810299] nil[44]))
        if errorExists[2108976]
        {
          gotoErrorHandling handler[1810300] handler[1810300]
        }
        label handler[1810300]
        const-val shouldHandleError[1810317]:bool[10] "temp"
        val errorExists[2108984]:bool[10] "temp"
        (2108989 'move' errorExists[2108984](2108986 '!=' error[1810299] nil[44]))
        (1810321 'move' shouldHandleError[1810317] errorExists[2108984])
        if shouldHandleError[1810317]
        {
          (1810314 call chpl_uncaught_error[170243] error[1810299])
        }
      }
      {
        val error[1810325]:Error[167938] "error variable" "temp"
        (1810334 'move' error[1810325] nil[44])
        val rvfRerefTmp[2083805]:locale[28] "temp"
        (2083808 'move' rvfRerefTmp[2083805] origLocale[1807068])
        (1068901 call _writeOne[1068937] this[1807064] x[1807066] rvfRerefTmp[2083805] error[1810325])
        val errorExists[2108992]:bool[10] "temp"
        (2108997 'move' errorExists[2108992](2108994 '!=' error[1810325] nil[44]))
        if errorExists[2108992]
        {
          gotoErrorHandling handler[1810326] handler[1810326]
        }
        label handler[1810326]
        const-val shouldHandleError[1810345]:bool[10] "temp"
        val errorExists[2109000]:bool[10] "temp"
        (2109005 'move' errorExists[2109000](2109002 '!=' error[1810325] nil[44]))
        (1810349 'move' shouldHandleError[1810345] errorExists[2109000])
        if shouldHandleError[1810345]
        {
          (1810341 '=' error_out[1810295] error[1810325])
          (1844149 call unlock[1066825] this[1807064])
          gotoErrorHandlingReturn _endon_fn[1810297] _endon_fn[1810297]
        }
      }
      (1844154 call unlock[1066825] this[1807064])
    }
    label _endon_fn[1810297]
    (1068908 return _void[55])
  }
  function on_fn[1080205](const in arg this[1807070]:channel(true,dynamic,false)[1060947], ref arg ret[1807072]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    {
      {
        val error[1810496]:Error[167938] "error variable" "temp"
        (1810505 'move' error[1810496] nil[44])
        ref rvfRerefTmp[2083832]:_ref(channel(true,dynamic,false))[1060956] "temp"
        (2083836 'move' rvfRerefTmp[2083832](2083833 'set reference' this[1807070]))
        (1080216 call lock[1066428] rvfRerefTmp[2083832] error[1810496])
        val errorExists[2109064]:bool[10] "temp"
        (2109069 'move' errorExists[2109064](2109066 '!=' error[1810496] nil[44]))
        if errorExists[2109064]
        {
          gotoErrorHandling handler[1810497] handler[1810497]
        }
        label handler[1810497]
        const-val shouldHandleError[1810514]:bool[10] "temp"
        val errorExists[2109072]:bool[10] "temp"
        (2109077 'move' errorExists[2109072](2109074 '!=' error[1810496] nil[44]))
        (1810518 'move' shouldHandleError[1810514] errorExists[2109072])
        if shouldHandleError[1810514]
        {
          (1810511 call chpl_uncaught_error[170243] error[1810496])
        }
      }
      ref call_tmp[1080218]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083818]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2083822 'move' rvfRerefTmp[2083818](2083819 'set reference' this[1807070]))
      (1080220 'move' call_tmp[1080218](1080223 call _channel_internal[1061789] rvfRerefTmp[2083818]))
      const-val call_tmp[1080226]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1080285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1080289 'move' coerce_tmp[1080285](1080287 'deref' call_tmp[1080218]))
      (1080228 'move' call_tmp[1080226](1080231 call qio_channel_offset_unlocked[233382] coerce_tmp[1080285]))
      (1080234 call =[435327] ret[1807072] call_tmp[1080226])
      ref rvfRerefTmp[2083825]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2083829 'move' rvfRerefTmp[2083825](2083826 'set reference' this[1807070]))
      (1080243 call unlock[1066825] rvfRerefTmp[2083825])
    }
    (1080244 return _void[55])
  }
  function on_fn[1080757](const in arg start[1807074]:int(64)[13], ref arg ret[1807076]:_ref(channel(false,dynamic,false))[1080691], const in arg style[1807078]:iostyle[231844], const in arg end[1807080]:int(64)[13], const in arg this[1807082]:file[235580], ref arg err[1807084]:_ref(syserr)[948832], const in arg hints[1807086]:int(32)[95], ref arg error_out[1810567]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1810571]:Error[167938] "error variable" "temp"
        (1810580 'move' error[1810571] nil[44])
        ref rvfRerefTmp[2083861]:_ref(file)[948734] "temp"
        (2083865 'move' rvfRerefTmp[2083861](2083862 'set reference' this[1807082]))
        (1080768 call checkAssumingLocal[235768] rvfRerefTmp[2083861] error[1810571])
        val errorExists[2109104]:bool[10] "temp"
        (2109109 'move' errorExists[2109104](2109106 '!=' error[1810571] nil[44]))
        if errorExists[2109104]
        {
          gotoErrorHandling handler[1810572] handler[1810572]
        }
        label handler[1810572]
        const-val shouldHandleError[1810591]:bool[10] "temp"
        val errorExists[2109112]:bool[10] "temp"
        (2109117 'move' errorExists[2109112](2109114 '!=' error[1810571] nil[44]))
        (1810595 'move' shouldHandleError[1810591] errorExists[2109112])
        if shouldHandleError[1810591]
        {
          (1810587 '=' error_out[1810567] error[1810571])
          gotoErrorHandlingReturn _endon_fn[1810569] _endon_fn[1810569]
        }
      }
      const-val call_tmp[1080770]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1081112]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1081583]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1807666]:iostyle[231844] "temp"
      (1807669 'move' tmp[1807666] style[1807078])
      ref rvfRerefTmp[2083854]:_ref(file)[948734] "temp"
      (2083858 'move' rvfRerefTmp[2083854](2083855 'set reference' this[1807082]))
      (1081115 call init[1081128] initTemp[1081112] rvfRerefTmp[2083854] _formal_tmp_out_error[1081583] hints[1807086] start[1807074] end[1807080] tmp[1807666])
      (1081585 call =[224112] err[1807084] _formal_tmp_out_error[1081583])
      (1080772 'move' call_tmp[1080770] initTemp[1081112])
      (1080786 call =[1081592] ret[1807076] call_tmp[1080770])
      (1844204 call chpl__autoDestroy[1540568] call_tmp[1080770])
    }
    label _endon_fn[1810569]
    (1080792 return _void[55])
  }
  function on_fn[1081206](const in arg end[1807088]:int(64)[13], const in arg hints[1807090]:int(32)[95], const in arg local_style[1807092]:iostyle[231844], ref arg this[1807094]:_ref(channel(false,dynamic,false))[1080691], const in arg start[1807096]:int(64)[13], const in arg f[1807098]:file[235580], ref arg _formal_tmp_error[1807100]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081212]:_ref(locale)[948844] "dead after last mention" "maybe param" "temp"
      (1081214 'move' call_tmp[1081212](1081217 call home[1081487] this[1807094]))
      ref call_tmp[1081220]:_ref(locale)[948844] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083888]:_ref(file)[948734] "temp"
      (2083892 'move' rvfRerefTmp[2083888](2083889 'set reference' f[1807098]))
      (1081222 'move' call_tmp[1081220](1081225 call home[886949] rvfRerefTmp[2083888]))
      (1081229 call =[90631] call_tmp[1081212] call_tmp[1081220])
      ref call_tmp[1081291]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1081293 'move' call_tmp[1081291](1081296 call _channel_internal[1081521] this[1807094]))
      ref call_tmp[1081299]:_ref(qio_file_ptr_t)[936873] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083895]:_ref(file)[948734] "temp"
      (2083899 'move' rvfRerefTmp[2083895](2083896 'set reference' f[1807098]))
      (1081301 'move' call_tmp[1081299](1081304 call _file_internal[886975] rvfRerefTmp[2083895]))
      const-val call_tmp[1081314]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1081552]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081556 'move' coerce_tmp[1081552](1081554 'deref' call_tmp[1081299]))
      const-val coerce_tmp[1081558]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081564 'move' coerce_tmp[1081558](1081560 'cast' int(32)[95] 1))
      const-val coerce_tmp[1081566]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081572 'move' coerce_tmp[1081566](1081568 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2083874]:_ref(iostyle)[967550] "temp"
      (2083878 'move' rvfRerefTmp[2083874](2083875 'set reference' local_style[1807092]))
      (1081316 'move' call_tmp[1081314](1081319 call qio_channel_create[232878] call_tmp[1081291] coerce_tmp[1081552] hints[1807090] coerce_tmp[1081558] coerce_tmp[1081566] start[1807096] end[1807088] rvfRerefTmp[2083874]))
      (1081329 call =[224112] _formal_tmp_error[1807100] call_tmp[1081314])
    }
    (1081332 return _void[55])
  }
  function on_fn[1081818](const in arg rhs[1807102]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081824]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2083909]:_ref(channel(false,dynamic,false))[1080691] "temp"
      (2083913 'move' rvfRerefTmp[2083909](2083910 'set reference' rhs[1807102]))
      (1081826 'move' call_tmp[1081824](1081829 call _channel_internal[1081521] rvfRerefTmp[2083909]))
      const-val coerce_tmp[1082017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082021 'move' coerce_tmp[1082017](1082019 'deref' call_tmp[1081824]))
      (1081833 call qio_channel_retain[232951] coerce_tmp[1082017])
    }
    (1081835 return _void[55])
  }
  function on_fn[1081862](const  ref arg lhs[1807104]:_ref(channel(false,dynamic,false))[1080691]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081868]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1081870 'move' call_tmp[1081868](1081873 call _channel_internal[1081521] lhs[1807104]))
      const-val coerce_tmp[1082036]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082040 'move' coerce_tmp[1082036](1082038 'deref' call_tmp[1081868]))
      (1081877 call qio_channel_release[232961] coerce_tmp[1082036])
    }
    (1081879 return _void[55])
  }
  function on_fn[1082187](const in arg this[1807106]:channel(false,dynamic,false)[1080682], ref arg err[1807108]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082201]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083923]:_ref(channel(false,dynamic,false))[1080691] "temp"
      (2083927 'move' rvfRerefTmp[2083923](2083924 'set reference' this[1807106]))
      (1082203 'move' call_tmp[1082201](1082206 call _channel_internal[1081521] rvfRerefTmp[2083923]))
      const-val call_tmp[1082209]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082532]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082538 'move' coerce_tmp[1082532](1082534 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082540]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082544 'move' coerce_tmp[1082540](1082542 'deref' call_tmp[1082201]))
      (1082211 'move' call_tmp[1082209](1082214 call qio_channel_close[233140] coerce_tmp[1082532] coerce_tmp[1082540]))
      (1082218 call =[224112] err[1807108] call_tmp[1082209])
    }
    (1082223 return _void[55])
  }
  function on_fn[1082616](const in arg this[1807110]:channel(false,dynamic,false)[1080682], ref arg path[1807112]:_ref(string)[937939], ref arg offset[1807114]:_ref(int(64))[936572], ref arg error_out[1810722]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1082622]:c_string[19] "dead at end of block" "insert auto destroy"
      (1082823 'move' tmp_path[1082622](1082821 'cast' c_string[19] nil[44]))
      val tmp_offset[1082628]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1082630]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1082826 'move' tmp_offset[1082628] 0)
      const-val call_tmp[1082641]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1082643 'move' call_tmp[1082641](1082646 call ENOERR[223654]))
      val err[1082647]:syserr[223584] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1082769]:syserr[223584] "dead at end of block" "initialized later" "temp"
      (1082814 call =[224133] init_coerce_tmp[1082769] call_tmp[1082641])
      (1082649 'move' err[1082647] init_coerce_tmp[1082769])
      ref call_tmp[1082662]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2083937]:_ref(channel(false,dynamic,false))[1080691] "temp"
      (2083941 'move' rvfRerefTmp[2083937](2083938 'set reference' this[1807110]))
      (1082664 'move' call_tmp[1082662](1082667 call _channel_internal[1081521] rvfRerefTmp[2083937]))
      const-val call_tmp[1082670]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082778]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082784 'move' coerce_tmp[1082778](1082780 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082786]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082790 'move' coerce_tmp[1082786](1082788 'deref' call_tmp[1082662]))
      (1082672 'move' call_tmp[1082670](1082675 call qio_channel_path_offset[232924] coerce_tmp[1082778] coerce_tmp[1082786] tmp_path[1082622] tmp_offset[1082628]))
      (1082681 call =[224112] err[1082647] call_tmp[1082670])
      const-val call_tmp[1082688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082690 'move' call_tmp[1082688](1082693 call ![223958] err[1082647]))
      const-val call_tmp[1082695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082697 'move' call_tmp[1082695] call_tmp[1082688])
      if call_tmp[1082695]
      {
        const-val call_tmp[1082704]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1082799]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1810727]:Error[167938] "error variable" "temp"
        (1810729 'move' error[1810727] nil[44])
        (1082804 'move' default_arg_length[1082799](1082801 call createStringWithNewBuffer_default_length[964046] tmp_path[1082622] error[1810727]))
        val errorExists[2109168]:bool[10] "temp"
        (2109173 'move' errorExists[2109168](2109170 '!=' error[1810727] nil[44]))
        if errorExists[2109168]
        {
          (1810733 '=' error_out[1810722] error[1810727])
          gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
        }
        val error[1810742]:Error[167938] "error variable" "temp"
        (1810744 'move' error[1810742] nil[44])
        const-val ret_tmp[1829075]:string[26] "temp"
        (1082709 call createStringWithNewBuffer[30410] tmp_path[1082622] default_arg_length[1082799] replace[173648] error[1810742] ret_tmp[1829075])
        (1829078 'move' call_tmp[1082704] ret_tmp[1829075])
        val errorExists[2109176]:bool[10] "temp"
        (2109181 'move' errorExists[2109176](2109178 '!=' error[1810742] nil[44]))
        if errorExists[2109176]
        {
          (1810748 '=' error_out[1810722] error[1810742])
          gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
        }
        (1082714 call =[38269] path[1807112] call_tmp[1082704])
        (1844219 call chpl__autoDestroy[1461530] call_tmp[1082704])
        (1082721 call chpl_free_c_string[22706] tmp_path[1082622])
        (1082726 call =[435327] offset[1807114] tmp_offset[1082628])
      }
    }
    label _endon_fn[1810724]
    (1082733 return _void[55])
  }
  function on_fn[1164907](const in arg this[1807142]:channel(true,dynamic,false)[1060947], const  ref arg args[1807144]:_ref((string,codepointIndex,string))[1158612], const in arg origLocale[1807146]:locale[28], ref arg error_out[1811035]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1811039]:Error[167938] "error variable" "temp"
        (1811048 'move' error[1811039] nil[44])
        ref rvfRerefTmp[2083982]:_ref(channel(true,dynamic,false))[1060956] "temp"
        (2083986 'move' rvfRerefTmp[2083982](2083983 'set reference' this[1807142]))
        (1164918 call lock[1066428] rvfRerefTmp[2083982] error[1811039])
        val errorExists[2109336]:bool[10] "temp"
        (2109341 'move' errorExists[2109336](2109338 '!=' error[1811039] nil[44]))
        if errorExists[2109336]
        {
          gotoErrorHandling handler[1811040] handler[1811040]
        }
        label handler[1811040]
        const-val shouldHandleError[1811059]:bool[10] "temp"
        val errorExists[2109344]:bool[10] "temp"
        (2109349 'move' errorExists[2109344](2109346 '!=' error[1811039] nil[44]))
        (1811063 'move' shouldHandleError[1811059] errorExists[2109344])
        if shouldHandleError[1811059]
        {
          (1811055 '=' error_out[1811035] error[1811039])
          gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
        }
      }
      {
        const-val i[1164928]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1164930 'move' i[1164928] 0)
        {
          {
            {
              val error[1811067]:Error[167938] "error variable" "temp"
              (1811076 'move' error[1811067] nil[44])
              ref call_tmp[1165070]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1165072 'move' call_tmp[1165070](1165157 '.v' args[1807144] x0[1158549]))
              ref rvfRerefTmp[2083989]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2083993 'move' rvfRerefTmp[2083989](2083990 'set reference' this[1807142]))
              val rvfRerefTmp[2084044]:locale[28] "temp"
              (2084047 'move' rvfRerefTmp[2084044] origLocale[1807146])
              (1165081 call _writeOne[1165160] rvfRerefTmp[2083989] call_tmp[1165070] rvfRerefTmp[2084044] error[1811067])
              val errorExists[2109352]:bool[10] "temp"
              (2109357 'move' errorExists[2109352](2109354 '!=' error[1811067] nil[44]))
              if errorExists[2109352]
              {
                gotoErrorHandling handler[1811068] handler[1811068]
              }
              label handler[1811068]
              const-val shouldHandleError[1811087]:bool[10] "temp"
              val errorExists[2109360]:bool[10] "temp"
              (2109365 'move' errorExists[2109360](2109362 '!=' error[1811067] nil[44]))
              (1811091 'move' shouldHandleError[1811087] errorExists[2109360])
              if shouldHandleError[1811087]
              {
                (1811083 '=' error_out[1811035] error[1811067])
                ref rvfRerefTmp[2084010]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084014 'move' rvfRerefTmp[2084010](2084011 'set reference' this[1807142]))
                (1845843 call unlock[1066825] rvfRerefTmp[2084010])
                gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
              }
            }
          }
        }
        label _continueLabel0[1165057]
        {
          {
            {
              val error[1811095]:Error[167938] "error variable" "temp"
              (1811104 'move' error[1811095] nil[44])
              ref call_tmp[1165102]:_ref(codepointIndex)[948769] "dead after last mention" "maybe param" "temp"
              (1165104 'move' call_tmp[1165102](1173910 '.v' args[1807144] x1[1158551]))
              ref rvfRerefTmp[2083996]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084000 'move' rvfRerefTmp[2083996](2083997 'set reference' this[1807142]))
              val rvfRerefTmp[2084050]:locale[28] "temp"
              (2084053 'move' rvfRerefTmp[2084050] origLocale[1807146])
              (1165113 call _writeOne[1173913] rvfRerefTmp[2083996] call_tmp[1165102] rvfRerefTmp[2084050] error[1811095])
              val errorExists[2109368]:bool[10] "temp"
              (2109373 'move' errorExists[2109368](2109370 '!=' error[1811095] nil[44]))
              if errorExists[2109368]
              {
                gotoErrorHandling handler[1811096] handler[1811096]
              }
              label handler[1811096]
              const-val shouldHandleError[1811115]:bool[10] "temp"
              val errorExists[2109376]:bool[10] "temp"
              (2109381 'move' errorExists[2109376](2109378 '!=' error[1811095] nil[44]))
              (1811119 'move' shouldHandleError[1811115] errorExists[2109376])
              if shouldHandleError[1811115]
              {
                (1811111 '=' error_out[1811035] error[1811095])
                ref rvfRerefTmp[2084017]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084021 'move' rvfRerefTmp[2084017](2084018 'set reference' this[1807142]))
                (1845847 call unlock[1066825] rvfRerefTmp[2084017])
                gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
              }
            }
          }
        }
        label _continueLabel1[1165089]
        {
          {
            {
              val error[1811123]:Error[167938] "error variable" "temp"
              (1811132 'move' error[1811123] nil[44])
              ref call_tmp[1165134]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1165136 'move' call_tmp[1165134](1175644 '.v' args[1807144] x2[1158553]))
              ref rvfRerefTmp[2084003]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084007 'move' rvfRerefTmp[2084003](2084004 'set reference' this[1807142]))
              val rvfRerefTmp[2084056]:locale[28] "temp"
              (2084059 'move' rvfRerefTmp[2084056] origLocale[1807146])
              (1165145 call _writeOne[1165160] rvfRerefTmp[2084003] call_tmp[1165134] rvfRerefTmp[2084056] error[1811123])
              val errorExists[2109384]:bool[10] "temp"
              (2109389 'move' errorExists[2109384](2109386 '!=' error[1811123] nil[44]))
              if errorExists[2109384]
              {
                gotoErrorHandling handler[1811124] handler[1811124]
              }
              label handler[1811124]
              const-val shouldHandleError[1811143]:bool[10] "temp"
              val errorExists[2109392]:bool[10] "temp"
              (2109397 'move' errorExists[2109392](2109394 '!=' error[1811123] nil[44]))
              (1811147 'move' shouldHandleError[1811143] errorExists[2109392])
              if shouldHandleError[1811143]
              {
                (1811139 '=' error_out[1811035] error[1811123])
                ref rvfRerefTmp[2084024]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084028 'move' rvfRerefTmp[2084024](2084025 'set reference' this[1807142]))
                (1845851 call unlock[1066825] rvfRerefTmp[2084024])
                gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
              }
            }
          }
        }
        label _continueLabel2[1165121]
        label _unused_continueLabel[1165006]
        label _breakLabel[1165008]
      }
      ref rvfRerefTmp[2084031]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2084035 'move' rvfRerefTmp[2084031](2084032 'set reference' this[1807142]))
      (1845856 call unlock[1066825] rvfRerefTmp[2084031])
    }
    label _endon_fn[1811037]
    (1165010 return _void[55])
  }
  function on_fn[1180386](const in arg this[1807148]:channel(true,dynamic,false)[1060947], const  ref arg args[1807150]:_ref((string,codepointIndex,string,int(64)))[1176592], const in arg origLocale[1807152]:locale[28], ref arg error_out[1811532]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1811536]:Error[167938] "error variable" "temp"
        (1811545 'move' error[1811536] nil[44])
        ref rvfRerefTmp[2084069]:_ref(channel(true,dynamic,false))[1060956] "temp"
        (2084073 'move' rvfRerefTmp[2084069](2084070 'set reference' this[1807148]))
        (1180397 call lock[1066428] rvfRerefTmp[2084069] error[1811536])
        val errorExists[2109616]:bool[10] "temp"
        (2109621 'move' errorExists[2109616](2109618 '!=' error[1811536] nil[44]))
        if errorExists[2109616]
        {
          gotoErrorHandling handler[1811537] handler[1811537]
        }
        label handler[1811537]
        const-val shouldHandleError[1811556]:bool[10] "temp"
        val errorExists[2109624]:bool[10] "temp"
        (2109629 'move' errorExists[2109624](2109626 '!=' error[1811536] nil[44]))
        (1811560 'move' shouldHandleError[1811556] errorExists[2109624])
        if shouldHandleError[1811556]
        {
          (1811552 '=' error_out[1811532] error[1811536])
          gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
        }
      }
      {
        const-val i[1180407]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1180409 'move' i[1180407] 0)
        {
          {
            {
              val error[1811564]:Error[167938] "error variable" "temp"
              (1811573 'move' error[1811564] nil[44])
              ref call_tmp[1180555]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1180557 'move' call_tmp[1180555](1180674 '.v' args[1807150] x0[1176512]))
              ref rvfRerefTmp[2084076]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084080 'move' rvfRerefTmp[2084076](2084077 'set reference' this[1807148]))
              val rvfRerefTmp[2084145]:locale[28] "temp"
              (2084148 'move' rvfRerefTmp[2084145] origLocale[1807152])
              (1180566 call _writeOne[1165160] rvfRerefTmp[2084076] call_tmp[1180555] rvfRerefTmp[2084145] error[1811564])
              val errorExists[2109632]:bool[10] "temp"
              (2109637 'move' errorExists[2109632](2109634 '!=' error[1811564] nil[44]))
              if errorExists[2109632]
              {
                gotoErrorHandling handler[1811565] handler[1811565]
              }
              label handler[1811565]
              const-val shouldHandleError[1811584]:bool[10] "temp"
              val errorExists[2109640]:bool[10] "temp"
              (2109645 'move' errorExists[2109640](2109642 '!=' error[1811564] nil[44]))
              (1811588 'move' shouldHandleError[1811584] errorExists[2109640])
              if shouldHandleError[1811584]
              {
                (1811580 '=' error_out[1811532] error[1811564])
                ref rvfRerefTmp[2084104]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084108 'move' rvfRerefTmp[2084104](2084105 'set reference' this[1807148]))
                (1846906 call unlock[1066825] rvfRerefTmp[2084104])
                gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
              }
            }
          }
        }
        label _continueLabel0[1180542]
        {
          {
            {
              val error[1811592]:Error[167938] "error variable" "temp"
              (1811601 'move' error[1811592] nil[44])
              ref call_tmp[1180587]:_ref(codepointIndex)[948769] "dead after last mention" "maybe param" "temp"
              (1180589 'move' call_tmp[1180587](1180682 '.v' args[1807150] x1[1176514]))
              ref rvfRerefTmp[2084083]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084087 'move' rvfRerefTmp[2084083](2084084 'set reference' this[1807148]))
              val rvfRerefTmp[2084151]:locale[28] "temp"
              (2084154 'move' rvfRerefTmp[2084151] origLocale[1807152])
              (1180598 call _writeOne[1173913] rvfRerefTmp[2084083] call_tmp[1180587] rvfRerefTmp[2084151] error[1811592])
              val errorExists[2109648]:bool[10] "temp"
              (2109653 'move' errorExists[2109648](2109650 '!=' error[1811592] nil[44]))
              if errorExists[2109648]
              {
                gotoErrorHandling handler[1811593] handler[1811593]
              }
              label handler[1811593]
              const-val shouldHandleError[1811612]:bool[10] "temp"
              val errorExists[2109656]:bool[10] "temp"
              (2109661 'move' errorExists[2109656](2109658 '!=' error[1811592] nil[44]))
              (1811616 'move' shouldHandleError[1811612] errorExists[2109656])
              if shouldHandleError[1811612]
              {
                (1811608 '=' error_out[1811532] error[1811592])
                ref rvfRerefTmp[2084111]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084115 'move' rvfRerefTmp[2084111](2084112 'set reference' this[1807148]))
                (1846910 call unlock[1066825] rvfRerefTmp[2084111])
                gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
              }
            }
          }
        }
        label _continueLabel1[1180574]
        {
          {
            {
              val error[1811620]:Error[167938] "error variable" "temp"
              (1811629 'move' error[1811620] nil[44])
              ref call_tmp[1180619]:_ref(string)[937939] "dead after last mention" "maybe param" "temp"
              (1180621 'move' call_tmp[1180619](1180690 '.v' args[1807150] x2[1176516]))
              ref rvfRerefTmp[2084090]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084094 'move' rvfRerefTmp[2084090](2084091 'set reference' this[1807148]))
              val rvfRerefTmp[2084157]:locale[28] "temp"
              (2084160 'move' rvfRerefTmp[2084157] origLocale[1807152])
              (1180630 call _writeOne[1165160] rvfRerefTmp[2084090] call_tmp[1180619] rvfRerefTmp[2084157] error[1811620])
              val errorExists[2109664]:bool[10] "temp"
              (2109669 'move' errorExists[2109664](2109666 '!=' error[1811620] nil[44]))
              if errorExists[2109664]
              {
                gotoErrorHandling handler[1811621] handler[1811621]
              }
              label handler[1811621]
              const-val shouldHandleError[1811640]:bool[10] "temp"
              val errorExists[2109672]:bool[10] "temp"
              (2109677 'move' errorExists[2109672](2109674 '!=' error[1811620] nil[44]))
              (1811644 'move' shouldHandleError[1811640] errorExists[2109672])
              if shouldHandleError[1811640]
              {
                (1811636 '=' error_out[1811532] error[1811620])
                ref rvfRerefTmp[2084118]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084122 'move' rvfRerefTmp[2084118](2084119 'set reference' this[1807148]))
                (1846914 call unlock[1066825] rvfRerefTmp[2084118])
                gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
              }
            }
          }
        }
        label _continueLabel2[1180606]
        {
          {
            {
              val error[1811648]:Error[167938] "error variable" "temp"
              (1811657 'move' error[1811648] nil[44])
              ref call_tmp[1180651]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1180653 'move' call_tmp[1180651](1180698 '.' args[1807150] x3[1176518]))
              const-val coerce_tmp[1180701]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1180705 'move' coerce_tmp[1180701](1180703 'deref' call_tmp[1180651]))
              ref rvfRerefTmp[2084097]:_ref(channel(true,dynamic,false))[1060956] "temp"
              (2084101 'move' rvfRerefTmp[2084097](2084098 'set reference' this[1807148]))
              val rvfRerefTmp[2084163]:locale[28] "temp"
              (2084166 'move' rvfRerefTmp[2084163] origLocale[1807152])
              (1180662 call _writeOne[1068937] rvfRerefTmp[2084097] coerce_tmp[1180701] rvfRerefTmp[2084163] error[1811648])
              val errorExists[2109680]:bool[10] "temp"
              (2109685 'move' errorExists[2109680](2109682 '!=' error[1811648] nil[44]))
              if errorExists[2109680]
              {
                gotoErrorHandling handler[1811649] handler[1811649]
              }
              label handler[1811649]
              const-val shouldHandleError[1811668]:bool[10] "temp"
              val errorExists[2109688]:bool[10] "temp"
              (2109693 'move' errorExists[2109688](2109690 '!=' error[1811648] nil[44]))
              (1811672 'move' shouldHandleError[1811668] errorExists[2109688])
              if shouldHandleError[1811668]
              {
                (1811664 '=' error_out[1811532] error[1811648])
                ref rvfRerefTmp[2084125]:_ref(channel(true,dynamic,false))[1060956] "temp"
                (2084129 'move' rvfRerefTmp[2084125](2084126 'set reference' this[1807148]))
                (1846918 call unlock[1066825] rvfRerefTmp[2084125])
                gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
              }
            }
          }
        }
        label _continueLabel3[1180638]
        label _unused_continueLabel[1180485]
        label _breakLabel[1180487]
      }
      ref rvfRerefTmp[2084132]:_ref(channel(true,dynamic,false))[1060956] "temp"
      (2084136 'move' rvfRerefTmp[2084132](2084133 'set reference' this[1807148]))
      (1846923 call unlock[1066825] rvfRerefTmp[2084132])
    }
    label _endon_fn[1811534]
    (1180489 return _void[55])
  }
  function on_fn[1392469](const in arg this[1807296]:channel(true,dynamic,true)[1021825], const  ref arg args[1807298]:_ref(([domain(1,int(64),false)] real(64),ioNewline))[1392643], const in arg origLocale[1807300]:locale[28], ref arg error_out[1812374]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1812378]:Error[167938] "error variable" "temp"
        (1812387 'move' error[1812378] nil[44])
        ref rvfRerefTmp[2084285]:_ref(channel(true,dynamic,true))[1021834] "temp"
        (2084289 'move' rvfRerefTmp[2084285](2084286 'set reference' this[1807296]))
        (1392480 call lock[1392801] rvfRerefTmp[2084285] error[1812378])
        val errorExists[2110016]:bool[10] "temp"
        (2110021 'move' errorExists[2110016](2110018 '!=' error[1812378] nil[44]))
        if errorExists[2110016]
        {
          gotoErrorHandling handler[1812379] handler[1812379]
        }
        label handler[1812379]
        const-val shouldHandleError[1812398]:bool[10] "temp"
        val errorExists[2110024]:bool[10] "temp"
        (2110029 'move' errorExists[2110024](2110026 '!=' error[1812378] nil[44]))
        (1812402 'move' shouldHandleError[1812398] errorExists[2110024])
        if shouldHandleError[1812398]
        {
          (1812394 '=' error_out[1812374] error[1812378])
          gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
        }
      }
      {
        const-val i[1392490]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1392492 'move' i[1392490] 0)
        {
          {
            {
              val error[1812406]:Error[167938] "error variable" "temp"
              (1812415 'move' error[1812406] nil[44])
              const-val call_tmp[1393677]:[domain(1,int(64),false)] real(64)[1365840] "dead after last mention" "maybe param" "temp"
              (1393679 'move' call_tmp[1393677](1393785 '.v' args[1807298] x0[1392590]))
              ref rvfRerefTmp[2084292]:_ref(channel(true,dynamic,true))[1021834] "temp"
              (2084296 'move' rvfRerefTmp[2084292](2084293 'set reference' this[1807296]))
              val rvfRerefTmp[2084333]:locale[28] "temp"
              (2084336 'move' rvfRerefTmp[2084333] origLocale[1807300])
              (1393688 call _writeOne[1393788] rvfRerefTmp[2084292] call_tmp[1393677] rvfRerefTmp[2084333] error[1812406])
              val errorExists[2110032]:bool[10] "temp"
              (2110037 'move' errorExists[2110032](2110034 '!=' error[1812406] nil[44]))
              if errorExists[2110032]
              {
                gotoErrorHandling handler[1812407] handler[1812407]
              }
              label handler[1812407]
              const-val shouldHandleError[1812426]:bool[10] "temp"
              val errorExists[2110040]:bool[10] "temp"
              (2110045 'move' errorExists[2110040](2110042 '!=' error[1812406] nil[44]))
              (1812430 'move' shouldHandleError[1812426] errorExists[2110040])
              if shouldHandleError[1812426]
              {
                (1812422 '=' error_out[1812374] error[1812406])
                ref rvfRerefTmp[2084306]:_ref(channel(true,dynamic,true))[1021834] "temp"
                (2084310 'move' rvfRerefTmp[2084306](2084307 'set reference' this[1807296]))
                (1848393 call unlock[1393550] rvfRerefTmp[2084306])
                gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
              }
            }
          }
        }
        label _continueLabel0[1393664]
        {
          {
            {
              val error[1812434]:Error[167938] "error variable" "temp"
              (1812443 'move' error[1812434] nil[44])
              ref call_tmp[1393709]:_ref(ioNewline)[967580] "dead after last mention" "maybe param" "temp"
              (1393711 'move' call_tmp[1393709](1429444 '.v' args[1807298] x1[1392592]))
              ref rvfRerefTmp[2084299]:_ref(channel(true,dynamic,true))[1021834] "temp"
              (2084303 'move' rvfRerefTmp[2084299](2084300 'set reference' this[1807296]))
              val rvfRerefTmp[2084339]:locale[28] "temp"
              (2084342 'move' rvfRerefTmp[2084339] origLocale[1807300])
              (1393720 call _writeOne[1429447] rvfRerefTmp[2084299] call_tmp[1393709] rvfRerefTmp[2084339] error[1812434])
              val errorExists[2110048]:bool[10] "temp"
              (2110053 'move' errorExists[2110048](2110050 '!=' error[1812434] nil[44]))
              if errorExists[2110048]
              {
                gotoErrorHandling handler[1812435] handler[1812435]
              }
              label handler[1812435]
              const-val shouldHandleError[1812454]:bool[10] "temp"
              val errorExists[2110056]:bool[10] "temp"
              (2110061 'move' errorExists[2110056](2110058 '!=' error[1812434] nil[44]))
              (1812458 'move' shouldHandleError[1812454] errorExists[2110056])
              if shouldHandleError[1812454]
              {
                (1812450 '=' error_out[1812374] error[1812434])
                ref rvfRerefTmp[2084313]:_ref(channel(true,dynamic,true))[1021834] "temp"
                (2084317 'move' rvfRerefTmp[2084313](2084314 'set reference' this[1807296]))
                (1848397 call unlock[1393550] rvfRerefTmp[2084313])
                gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
              }
            }
          }
        }
        label _continueLabel1[1393696]
        label _unused_continueLabel[1392568]
        label _breakLabel[1392570]
      }
      ref rvfRerefTmp[2084320]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2084324 'move' rvfRerefTmp[2084320](2084321 'set reference' this[1807296]))
      (1848402 call unlock[1393550] rvfRerefTmp[2084320])
    }
    label _endon_fn[1812376]
    (1392572 return _void[55])
  }
  function on_fn[1392911](const in arg this[1807302]:channel(true,dynamic,true)[1021825], ref arg err[1807304]:_ref(syserr)[948832]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1392917]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2084352]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2084356 'move' rvfRerefTmp[2084352](2084353 'set reference' this[1807302]))
      (1392919 'move' call_tmp[1392917](1392922 call _channel_internal[1023076] rvfRerefTmp[2084352]))
      const-val call_tmp[1392925]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1393252]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1393256 'move' coerce_tmp[1393252](1393254 'deref' call_tmp[1392917]))
      (1392927 'move' call_tmp[1392925](1392930 call qio_channel_lock[233007] coerce_tmp[1393252]))
      (1392933 call =[224112] err[1807304] call_tmp[1392925])
    }
    (1392938 return _void[55])
  }
  function on_fn[1393328](const in arg this[1807306]:channel(true,dynamic,true)[1021825], ref arg path[1807308]:_ref(string)[937939], ref arg offset[1807310]:_ref(int(64))[936572], ref arg error_out[1812554]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1393334]:c_string[19] "dead at end of block" "insert auto destroy"
      (1393535 'move' tmp_path[1393334](1393533 'cast' c_string[19] nil[44]))
      val tmp_offset[1393340]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1393342]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1393538 'move' tmp_offset[1393340] 0)
      const-val call_tmp[1393353]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1393355 'move' call_tmp[1393353](1393358 call ENOERR[223654]))
      val err[1393359]:syserr[223584] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1393481]:syserr[223584] "dead at end of block" "initialized later" "temp"
      (1393526 call =[224133] init_coerce_tmp[1393481] call_tmp[1393353])
      (1393361 'move' err[1393359] init_coerce_tmp[1393481])
      ref call_tmp[1393374]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2084366]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2084370 'move' rvfRerefTmp[2084366](2084367 'set reference' this[1807306]))
      (1393376 'move' call_tmp[1393374](1393379 call _channel_internal[1023076] rvfRerefTmp[2084366]))
      const-val call_tmp[1393382]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1393490]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1393496 'move' coerce_tmp[1393490](1393492 'cast' int(32)[95] 1))
      const-val coerce_tmp[1393498]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1393502 'move' coerce_tmp[1393498](1393500 'deref' call_tmp[1393374]))
      (1393384 'move' call_tmp[1393382](1393387 call qio_channel_path_offset[232924] coerce_tmp[1393490] coerce_tmp[1393498] tmp_path[1393334] tmp_offset[1393340]))
      (1393393 call =[224112] err[1393359] call_tmp[1393382])
      const-val call_tmp[1393400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1393402 'move' call_tmp[1393400](1393405 call ![223958] err[1393359]))
      const-val call_tmp[1393407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1393409 'move' call_tmp[1393407] call_tmp[1393400])
      if call_tmp[1393407]
      {
        const-val call_tmp[1393416]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1393511]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1812559]:Error[167938] "error variable" "temp"
        (1812561 'move' error[1812559] nil[44])
        (1393516 'move' default_arg_length[1393511](1393513 call createStringWithNewBuffer_default_length[964046] tmp_path[1393334] error[1812559]))
        val errorExists[2110104]:bool[10] "temp"
        (2110109 'move' errorExists[2110104](2110106 '!=' error[1812559] nil[44]))
        if errorExists[2110104]
        {
          (1812565 '=' error_out[1812554] error[1812559])
          gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
        }
        val error[1812574]:Error[167938] "error variable" "temp"
        (1812576 'move' error[1812574] nil[44])
        const-val ret_tmp[1829099]:string[26] "temp"
        (1393421 call createStringWithNewBuffer[30410] tmp_path[1393334] default_arg_length[1393511] replace[173648] error[1812574] ret_tmp[1829099])
        (1829102 'move' call_tmp[1393416] ret_tmp[1829099])
        val errorExists[2110112]:bool[10] "temp"
        (2110117 'move' errorExists[2110112](2110114 '!=' error[1812574] nil[44]))
        if errorExists[2110112]
        {
          (1812580 '=' error_out[1812554] error[1812574])
          gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
        }
        (1393426 call =[38269] path[1807308] call_tmp[1393416])
        (1848417 call chpl__autoDestroy[1461530] call_tmp[1393416])
        (1393433 call chpl_free_c_string[22706] tmp_path[1393334])
        (1393438 call =[435327] offset[1807310] tmp_offset[1393340])
      }
    }
    label _endon_fn[1812556]
    (1393445 return _void[55])
  }
  function on_fn[1393602](const in arg this[1807312]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1393608]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2084380]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2084384 'move' rvfRerefTmp[2084380](2084381 'set reference' this[1807312]))
      (1393610 'move' call_tmp[1393608](1393613 call _channel_internal[1023076] rvfRerefTmp[2084380]))
      const-val coerce_tmp[1393643]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1393647 'move' coerce_tmp[1393643](1393645 'deref' call_tmp[1393608]))
      (1393617 call qio_channel_unlock[233019] coerce_tmp[1393643])
    }
    (1393619 return _void[55])
  }
  function on_fn[1400789](const  ref arg this[1807322]:_ref(channel(true,dynamic,false))[1060956], const in arg element[1807324]:int(64)[13], ref arg ret[1807326]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1400795]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1400797 'move' call_tmp[1400795](1400800 call _channel_internal[1061789] this[1807322]))
      const-val call_tmp[1400803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1400849]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1400853 'move' coerce_tmp[1400849](1400851 'deref' call_tmp[1400795]))
      (1400805 'move' call_tmp[1400803](1400808 call qio_channel_style_element[233102] coerce_tmp[1400849] element[1807324]))
      (1400812 call =[435327] ret[1807326] call_tmp[1400803])
    }
    (1400817 return _void[55])
  }
  function on_fn[1401829](const  ref arg this[1807328]:_ref(channel(true,dynamic,false))[1060956], ref arg ret[1807330]:_ref(uint(8))[936908]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1401835]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1401837 'move' call_tmp[1401835](1401840 call _channel_internal[1061789] this[1807328]))
      const-val call_tmp[1401843]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1401896]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1401900 'move' coerce_tmp[1401896](1401898 'deref' call_tmp[1401835]))
      (1401845 'move' call_tmp[1401843](1401848 call qio_channel_binary[233057] coerce_tmp[1401896]))
      (1401851 call =[435348] ret[1807330] call_tmp[1401843])
    }
    (1401856 return _void[55])
  }
  function on_fn[1407864](const  ref arg this[1807332]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1807334]:_ddata(real(64))[1357916], const in arg len[1807336]:int(64)[13], ref arg err[1807338]:_ref(syserr)[948832], ref arg error_out[1813096]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1813100]:Error[167938] "error variable" "temp"
        (1813109 'move' error[1813100] nil[44])
        (1407875 call lock[1066428] this[1807332] error[1813100])
        val errorExists[2110312]:bool[10] "temp"
        (2110317 'move' errorExists[2110312](2110314 '!=' error[1813100] nil[44]))
        if errorExists[2110312]
        {
          gotoErrorHandling handler[1813101] handler[1813101]
        }
        label handler[1813101]
        const-val shouldHandleError[1813120]:bool[10] "temp"
        val errorExists[2110320]:bool[10] "temp"
        (2110325 'move' errorExists[2110320](2110322 '!=' error[1813100] nil[44]))
        (1813124 'move' shouldHandleError[1813120] errorExists[2110320])
        if shouldHandleError[1813120]
        {
          (1813116 '=' error_out[1813096] error[1813100])
          gotoErrorHandlingReturn _endon_fn[1813098] _endon_fn[1813098]
        }
      }
      ref call_tmp[1407884]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1407886 'move' call_tmp[1407884](1407889 call _channel_internal[1061789] this[1807332]))
      const-val call_tmp[1407892]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1408009]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1408015 'move' coerce_tmp[1408009](1408011 'cast' int(32)[95] 0))
      const-val coerce_tmp[1408017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1408021 'move' coerce_tmp[1408017](1408019 'deref' call_tmp[1407884]))
      (1407894 'move' call_tmp[1407892](1407897 call qio_channel_write_amt[1407983] coerce_tmp[1408009] coerce_tmp[1408017] x[1807334] len[1807336]))
      (1407903 call =[224112] err[1807338] call_tmp[1407892])
      (1848731 call unlock[1066825] this[1807332])
    }
    label _endon_fn[1813098]
    (1407908 return _void[55])
  }
  function on_fn[1408604](const  ref arg this[1807340]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1807342]:ioLiteral[238753], const in arg origLocale[1807344]:locale[28], ref arg error_out[1813211]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1813215]:Error[167938] "error variable" "temp"
        (1813224 'move' error[1813215] nil[44])
        (1408615 call lock[1066428] this[1807340] error[1813215])
        val errorExists[2110368]:bool[10] "temp"
        (2110373 'move' errorExists[2110368](2110370 '!=' error[1813215] nil[44]))
        if errorExists[2110368]
        {
          gotoErrorHandling handler[1813216] handler[1813216]
        }
        label handler[1813216]
        const-val shouldHandleError[1813233]:bool[10] "temp"
        val errorExists[2110376]:bool[10] "temp"
        (2110381 'move' errorExists[2110376](2110378 '!=' error[1813215] nil[44]))
        (1813237 'move' shouldHandleError[1813233] errorExists[2110376])
        if shouldHandleError[1813233]
        {
          (1813230 call chpl_uncaught_error[170243] error[1813215])
        }
      }
      {
        val error[1813241]:Error[167938] "error variable" "temp"
        (1813250 'move' error[1813241] nil[44])
        ref rvfRerefTmp[2084394]:_ref(ioLiteral)[967590] "temp"
        (2084398 'move' rvfRerefTmp[2084394](2084395 'set reference' x[1807342]))
        val rvfRerefTmp[2084407]:locale[28] "temp"
        (2084410 'move' rvfRerefTmp[2084407] origLocale[1807344])
        (1408637 call _writeOne[1408673] this[1807340] rvfRerefTmp[2084394] rvfRerefTmp[2084407] error[1813241])
        val errorExists[2110384]:bool[10] "temp"
        (2110389 'move' errorExists[2110384](2110386 '!=' error[1813241] nil[44]))
        if errorExists[2110384]
        {
          gotoErrorHandling handler[1813242] handler[1813242]
        }
        label handler[1813242]
        const-val shouldHandleError[1813261]:bool[10] "temp"
        val errorExists[2110392]:bool[10] "temp"
        (2110397 'move' errorExists[2110392](2110394 '!=' error[1813241] nil[44]))
        (1813265 'move' shouldHandleError[1813261] errorExists[2110392])
        if shouldHandleError[1813261]
        {
          (1813257 '=' error_out[1813211] error[1813241])
          (1848744 call unlock[1066825] this[1807340])
          gotoErrorHandlingReturn _endon_fn[1813213] _endon_fn[1813213]
        }
      }
      (1848749 call unlock[1066825] this[1807340])
    }
    label _endon_fn[1813213]
    (1408644 return _void[55])
  }
  function on_fn[1421810](const  ref arg this[1807346]:_ref(channel(true,dynamic,false))[1060956], const in arg x[1807348]:real(64)[16], const in arg origLocale[1807350]:locale[28], ref arg error_out[1813401]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1813405]:Error[167938] "error variable" "temp"
        (1813414 'move' error[1813405] nil[44])
        (1421821 call lock[1066428] this[1807346] error[1813405])
        val errorExists[2110464]:bool[10] "temp"
        (2110469 'move' errorExists[2110464](2110466 '!=' error[1813405] nil[44]))
        if errorExists[2110464]
        {
          gotoErrorHandling handler[1813406] handler[1813406]
        }
        label handler[1813406]
        const-val shouldHandleError[1813423]:bool[10] "temp"
        val errorExists[2110472]:bool[10] "temp"
        (2110477 'move' errorExists[2110472](2110474 '!=' error[1813405] nil[44]))
        (1813427 'move' shouldHandleError[1813423] errorExists[2110472])
        if shouldHandleError[1813423]
        {
          (1813420 call chpl_uncaught_error[170243] error[1813405])
        }
      }
      {
        val error[1813431]:Error[167938] "error variable" "temp"
        (1813440 'move' error[1813431] nil[44])
        val rvfRerefTmp[2084419]:locale[28] "temp"
        (2084422 'move' rvfRerefTmp[2084419] origLocale[1807350])
        (1421843 call _writeOne[1421879] this[1807346] x[1807348] rvfRerefTmp[2084419] error[1813431])
        val errorExists[2110480]:bool[10] "temp"
        (2110485 'move' errorExists[2110480](2110482 '!=' error[1813431] nil[44]))
        if errorExists[2110480]
        {
          gotoErrorHandling handler[1813432] handler[1813432]
        }
        label handler[1813432]
        const-val shouldHandleError[1813451]:bool[10] "temp"
        val errorExists[2110488]:bool[10] "temp"
        (2110493 'move' errorExists[2110488](2110490 '!=' error[1813431] nil[44]))
        (1813455 'move' shouldHandleError[1813451] errorExists[2110488])
        if shouldHandleError[1813451]
        {
          (1813447 '=' error_out[1813401] error[1813431])
          (1848798 call unlock[1066825] this[1807346])
          gotoErrorHandlingReturn _endon_fn[1813403] _endon_fn[1813403]
        }
      }
      (1848803 call unlock[1066825] this[1807346])
    }
    label _endon_fn[1813403]
    (1421850 return _void[55])
  }
  function on_fn[1433131](const in arg this[1807352]:channel(true,dynamic,true)[1021825], const  ref arg args[1807354]:_ref((int(64),ioNewline))[1433313], const in arg origLocale[1807356]:locale[28], ref arg error_out[1813636]:Error[167938]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1813640]:Error[167938] "error variable" "temp"
        (1813649 'move' error[1813640] nil[44])
        ref rvfRerefTmp[2084432]:_ref(channel(true,dynamic,true))[1021834] "temp"
        (2084436 'move' rvfRerefTmp[2084432](2084433 'set reference' this[1807352]))
        (1433142 call lock[1392801] rvfRerefTmp[2084432] error[1813640])
        val errorExists[2110584]:bool[10] "temp"
        (2110589 'move' errorExists[2110584](2110586 '!=' error[1813640] nil[44]))
        if errorExists[2110584]
        {
          gotoErrorHandling handler[1813641] handler[1813641]
        }
        label handler[1813641]
        const-val shouldHandleError[1813660]:bool[10] "temp"
        val errorExists[2110592]:bool[10] "temp"
        (2110597 'move' errorExists[2110592](2110594 '!=' error[1813640] nil[44]))
        (1813664 'move' shouldHandleError[1813660] errorExists[2110592])
        if shouldHandleError[1813660]
        {
          (1813656 '=' error_out[1813636] error[1813640])
          gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
        }
      }
      {
        const-val i[1433152]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1433154 'move' i[1433152] 0)
        {
          {
            {
              val error[1813668]:Error[167938] "error variable" "temp"
              (1813677 'move' error[1813668] nil[44])
              ref call_tmp[1433365]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
              (1433367 'move' call_tmp[1433365](1433420 '.' args[1807354] x0[1433252]))
              const-val coerce_tmp[1433565]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1433569 'move' coerce_tmp[1433565](1433567 'deref' call_tmp[1433365]))
              ref rvfRerefTmp[2084439]:_ref(channel(true,dynamic,true))[1021834] "temp"
              (2084443 'move' rvfRerefTmp[2084439](2084440 'set reference' this[1807352]))
              val rvfRerefTmp[2084480]:locale[28] "temp"
              (2084483 'move' rvfRerefTmp[2084480] origLocale[1807356])
              (1433376 call _writeOne[1433423] rvfRerefTmp[2084439] coerce_tmp[1433565] rvfRerefTmp[2084480] error[1813668])
              val errorExists[2110600]:bool[10] "temp"
              (2110605 'move' errorExists[2110600](2110602 '!=' error[1813668] nil[44]))
              if errorExists[2110600]
              {
                gotoErrorHandling handler[1813669] handler[1813669]
              }
              label handler[1813669]
              const-val shouldHandleError[1813688]:bool[10] "temp"
              val errorExists[2110608]:bool[10] "temp"
              (2110613 'move' errorExists[2110608](2110610 '!=' error[1813668] nil[44]))
              (1813692 'move' shouldHandleError[1813688] errorExists[2110608])
              if shouldHandleError[1813688]
              {
                (1813684 '=' error_out[1813636] error[1813668])
                ref rvfRerefTmp[2084453]:_ref(channel(true,dynamic,true))[1021834] "temp"
                (2084457 'move' rvfRerefTmp[2084453](2084454 'set reference' this[1807352]))
                (1848847 call unlock[1393550] rvfRerefTmp[2084453])
                gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
              }
            }
          }
        }
        label _continueLabel0[1433352]
        {
          {
            {
              val error[1813696]:Error[167938] "error variable" "temp"
              (1813705 'move' error[1813696] nil[44])
              ref call_tmp[1433397]:_ref(ioNewline)[967580] "dead after last mention" "maybe param" "temp"
              (1433399 'move' call_tmp[1433397](1433816 '.v' args[1807354] x1[1433254]))
              ref rvfRerefTmp[2084446]:_ref(channel(true,dynamic,true))[1021834] "temp"
              (2084450 'move' rvfRerefTmp[2084446](2084447 'set reference' this[1807352]))
              val rvfRerefTmp[2084486]:locale[28] "temp"
              (2084489 'move' rvfRerefTmp[2084486] origLocale[1807356])
              (1433408 call _writeOne[1429447] rvfRerefTmp[2084446] call_tmp[1433397] rvfRerefTmp[2084486] error[1813696])
              val errorExists[2110616]:bool[10] "temp"
              (2110621 'move' errorExists[2110616](2110618 '!=' error[1813696] nil[44]))
              if errorExists[2110616]
              {
                gotoErrorHandling handler[1813697] handler[1813697]
              }
              label handler[1813697]
              const-val shouldHandleError[1813716]:bool[10] "temp"
              val errorExists[2110624]:bool[10] "temp"
              (2110629 'move' errorExists[2110624](2110626 '!=' error[1813696] nil[44]))
              (1813720 'move' shouldHandleError[1813716] errorExists[2110624])
              if shouldHandleError[1813716]
              {
                (1813712 '=' error_out[1813636] error[1813696])
                ref rvfRerefTmp[2084460]:_ref(channel(true,dynamic,true))[1021834] "temp"
                (2084464 'move' rvfRerefTmp[2084460](2084461 'set reference' this[1807352]))
                (1848851 call unlock[1393550] rvfRerefTmp[2084460])
                gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
              }
            }
          }
        }
        label _continueLabel1[1433384]
        label _unused_continueLabel[1433230]
        label _breakLabel[1433232]
      }
      ref rvfRerefTmp[2084467]:_ref(channel(true,dynamic,true))[1021834] "temp"
      (2084471 'move' rvfRerefTmp[2084467](2084468 'set reference' this[1807352]))
      (1848856 call unlock[1393550] rvfRerefTmp[2084467])
    }
    label _endon_fn[1813638]
    (1433234 return _void[55])
  }
  function on_fn[1471095](ref arg this[1807416]:_ref(channel(false,dynamic,true))[985636]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1471101]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1471103 'move' call_tmp[1471101](1471106 call _channel_internal[1018366] this[1807416]))
      const-val coerce_tmp[1471144]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1471148 'move' coerce_tmp[1471144](1471146 'deref' call_tmp[1471101]))
      (1471110 call qio_channel_release[232961] coerce_tmp[1471144])
      ref call_tmp[1471113]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1471115 'move' call_tmp[1471113](1471118 call _channel_internal[1018366] this[1807416]))
      (1471122 call =[861480] call_tmp[1471113] QIO_CHANNEL_PTR_NULL[231468])
    }
    (1471125 return _void[55])
  }
  function on_fn[1534074](ref arg this[1807458]:_ref(channel(true,dynamic,true))[1021834]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1534080]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1534082 'move' call_tmp[1534080](1534085 call _channel_internal[1023076] this[1807458]))
      const-val coerce_tmp[1534123]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1534127 'move' coerce_tmp[1534123](1534125 'deref' call_tmp[1534080]))
      (1534089 call qio_channel_release[232961] coerce_tmp[1534123])
      ref call_tmp[1534092]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1534094 'move' call_tmp[1534092](1534097 call _channel_internal[1023076] this[1807458]))
      (1534101 call =[861480] call_tmp[1534092] QIO_CHANNEL_PTR_NULL[231468])
    }
    (1534104 return _void[55])
  }
  function on_fn[1536250](ref arg this[1807462]:_ref(channel(true,dynamic,false))[1060956]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1536256]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1536258 'move' call_tmp[1536256](1536261 call _channel_internal[1061789] this[1807462]))
      const-val coerce_tmp[1536299]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1536303 'move' coerce_tmp[1536299](1536301 'deref' call_tmp[1536256]))
      (1536265 call qio_channel_release[232961] coerce_tmp[1536299])
      ref call_tmp[1536268]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1536270 'move' call_tmp[1536268](1536273 call _channel_internal[1061789] this[1807462]))
      (1536277 call =[861480] call_tmp[1536268] QIO_CHANNEL_PTR_NULL[231468])
    }
    (1536280 return _void[55])
  }
  function on_fn[1540504](ref arg this[1807468]:_ref(channel(false,dynamic,false))[1080691]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1540510]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1540512 'move' call_tmp[1540510](1540515 call _channel_internal[1081521] this[1807468]))
      const-val coerce_tmp[1540553]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1540557 'move' coerce_tmp[1540553](1540555 'deref' call_tmp[1540510]))
      (1540519 call qio_channel_release[232961] coerce_tmp[1540553])
      ref call_tmp[1540522]:_ref(qio_channel_ptr_t)[936884] "dead after last mention" "maybe param" "temp"
      (1540524 'move' call_tmp[1540522](1540527 call _channel_internal[1081521] this[1807468]))
      (1540531 call =[861480] call_tmp[1540522] QIO_CHANNEL_PTR_NULL[231468])
    }
    (1540534 return _void[55])
  }
  function chpl__deinit_IO[1852165]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1852171]
    (1852191 call chpl__autoDestroy[1463349] call_tmp[724031])
    (1852188 call chpl__autoDestroy[1463349] call_tmp[724014])
    (1852185 call chpl__autoDestroy[1463349] call_tmp[723997])
    (1852182 call chpl__autoDestroy[1534138] stderr[250264])
    (1852179 call chpl__autoDestroy[1534138] stdout[250235])
    (1852176 call chpl__autoDestroy[1471159] stdin[250208])
    ref tmp[2085338]:6*string[985217] "temp"
    (2085343 'move' tmp[2085338](2085340 '.' _arg_to_proto_names[246561] value[2085328]))
    (1852173 call chpl__autoDestroy[1470186] tmp[2085338])
    (1852168 return _void[55])
  }
  function wrapon_fn[2086927](const in arg dummy_locale_arg[2086929]:chpl_localeID_t[209294], in arg buf[2086931]:c_void_ptr[149], in arg buf_size[2086933]:int(64)[13], in arg c[2086935]:_class_localson_fn[2086887]) : void[4] "on block"
  {
    val _0_tmp[2086940]:chpl_localeID_t[209294] "temp"
    (2086945 'move' _0_tmp[2086940](2086942 '.v' c[2086935] _0_tmp[2086890]))
    ref _1_this[2086947]:file[235580] "temp"
    (2086952 'move' _1_this[2086947](2086949 '.v' c[2086935] _1_this[2086892]))
    (2086938 call on_fn[935597] _1_this[2086947])
    (2086955 return _void[55])
  }
  function wrapon_fn[2087038](const in arg dummy_locale_arg[2087040]:chpl_localeID_t[209294], in arg buf[2087042]:c_void_ptr[149], in arg buf_size[2087044]:int(64)[13], in arg c[2087046]:_class_localson_fn[2086980]) : void[4] "on block"
  {
    val _0_tmp[2087051]:chpl_localeID_t[209294] "temp"
    (2087056 'move' _0_tmp[2087051](2087053 '.v' c[2087046] _0_tmp[2086983]))
    val _1_rvfDerefTmp[2087058]:file[235580] "temp"
    (2087063 'move' _1_rvfDerefTmp[2087058](2087060 '.v' c[2087046] _1_rvfDerefTmp[2086985]))
    ref _2_ret[2087066]:iostyle[231844] "temp"
    (2087071 'move' _2_ret[2087066](2087068 '.v' c[2087046] _2_ret[2086987]))
    ref _3_error[2087074]:Error[167938] "temp"
    (2087079 'move' _3_error[2087074](2087076 '.v' c[2087046] _3_error[2086989]))
    (2087049 call on_fn[935606] _1_rvfDerefTmp[2087058] _2_ret[2087066] _3_error[2087074])
    (2087082 return _void[55])
  }
  function wrapon_fn[2087152](const in arg dummy_locale_arg[2087154]:chpl_localeID_t[209294], in arg buf[2087156]:c_void_ptr[149], in arg buf_size[2087158]:int(64)[13], in arg c[2087160]:_class_localson_fn[2087106]) : void[4] "on block"
  {
    val _0_tmp[2087165]:chpl_localeID_t[209294] "temp"
    (2087170 'move' _0_tmp[2087165](2087167 '.v' c[2087160] _0_tmp[2087109]))
    val _1_rvfDerefTmp[2087172]:file[235580] "temp"
    (2087177 'move' _1_rvfDerefTmp[2087172](2087174 '.v' c[2087160] _1_rvfDerefTmp[2087111]))
    ref _2_err[2087180]:syserr[223584] "temp"
    (2087185 'move' _2_err[2087180](2087182 '.v' c[2087160] _2_err[2087113]))
    (2087163 call on_fn[935615] _1_rvfDerefTmp[2087172] _2_err[2087180])
    (2087188 return _void[55])
  }
  function wrapon_fn[2087284](const in arg dummy_locale_arg[2087286]:chpl_localeID_t[209294], in arg buf[2087288]:c_void_ptr[149], in arg buf_size[2087290]:int(64)[13], in arg c[2087292]:_class_localson_fn[2087214]) : void[4] "on block"
  {
    val _0_tmp[2087297]:chpl_localeID_t[209294] "temp"
    (2087302 'move' _0_tmp[2087297](2087299 '.v' c[2087292] _0_tmp[2087217]))
    val _1_rvfDerefTmp[2087304]:file[235580] "temp"
    (2087309 'move' _1_rvfDerefTmp[2087304](2087306 '.v' c[2087292] _1_rvfDerefTmp[2087219]))
    ref _2_err[2087312]:syserr[223584] "temp"
    (2087317 'move' _2_err[2087312](2087314 '.v' c[2087292] _2_err[2087221]))
    ref _3_ret[2087320]:string[26] "temp"
    (2087325 'move' _3_ret[2087320](2087322 '.v' c[2087292] _3_ret[2087223]))
    ref _4_error[2087328]:Error[167938] "temp"
    (2087333 'move' _4_error[2087328](2087330 '.v' c[2087292] _4_error[2087225]))
    (2087295 call on_fn[935633] _1_rvfDerefTmp[2087304] _2_err[2087312] _3_ret[2087320] _4_error[2087328])
    (2087336 return _void[55])
  }
  function wrapon_fn[2087657](const in arg dummy_locale_arg[2087659]:chpl_localeID_t[209294], in arg buf[2087661]:c_void_ptr[149], in arg buf_size[2087663]:int(64)[13], in arg c[2087665]:_class_localson_fn[2087563]) : void[4] "on block"
  {
    val _0_tmp[2087670]:chpl_localeID_t[209294] "temp"
    (2087675 'move' _0_tmp[2087670](2087672 '.v' c[2087665] _0_tmp[2087566]))
    ref _1_err[2087677]:syserr[223584] "temp"
    (2087682 'move' _1_err[2087677](2087679 '.v' c[2087665] _1_err[2087568]))
    val _2_start[2087685]:int(64)[13] "temp"
    (2087690 'move' _2_start[2087685](2087687 '.v' c[2087665] _2_start[2087570]))
    val _3_end[2087693]:int(64)[13] "temp"
    (2087698 'move' _3_end[2087693](2087695 '.v' c[2087665] _3_end[2087572]))
    val _4_rvfDerefTmp[2087701]:iostyle[231844] "temp"
    (2087706 'move' _4_rvfDerefTmp[2087701](2087703 '.v' c[2087665] _4_rvfDerefTmp[2087574]))
    val _5_rvfDerefTmp[2087709]:file[235580] "temp"
    (2087714 'move' _5_rvfDerefTmp[2087709](2087711 '.v' c[2087665] _5_rvfDerefTmp[2087576]))
    ref _6_ret[2087717]:channel(false,dynamic,true)[985627] "temp"
    (2087722 'move' _6_ret[2087717](2087719 '.v' c[2087665] _6_ret[2087578]))
    val _7_hints[2087725]:int(32)[95] "temp"
    (2087730 'move' _7_hints[2087725](2087727 '.v' c[2087665] _7_hints[2087580]))
    ref _8_error[2087733]:Error[167938] "temp"
    (2087738 'move' _8_error[2087733](2087735 '.v' c[2087665] _8_error[2087582]))
    (2087668 call on_fn[1016695] _1_err[2087677] _2_start[2087685] _3_end[2087693] _4_rvfDerefTmp[2087701] _5_rvfDerefTmp[2087709] _6_ret[2087717] _7_hints[2087725] _8_error[2087733])
    (2087741 return _void[55])
  }
  function wrapon_fn[2087852](const in arg dummy_locale_arg[2087854]:chpl_localeID_t[209294], in arg buf[2087856]:c_void_ptr[149], in arg buf_size[2087858]:int(64)[13], in arg c[2087860]:_class_localson_fn[2087770]) : void[4] "on block"
  {
    val _0_tmp[2087865]:chpl_localeID_t[209294] "temp"
    (2087870 'move' _0_tmp[2087865](2087867 '.v' c[2087860] _0_tmp[2087773]))
    ref _1_this[2087872]:channel(false,dynamic,true)[985627] "temp"
    (2087877 'move' _1_this[2087872](2087874 '.v' c[2087860] _1_this[2087775]))
    val _2_hints[2087880]:int(32)[95] "temp"
    (2087885 'move' _2_hints[2087880](2087882 '.v' c[2087860] _2_hints[2087777]))
    val _3_rvfDerefTmp[2087888]:iostyle[231844] "temp"
    (2087893 'move' _3_rvfDerefTmp[2087888](2087890 '.v' c[2087860] _3_rvfDerefTmp[2087779]))
    val _4_end[2087896]:int(64)[13] "temp"
    (2087901 'move' _4_end[2087896](2087898 '.v' c[2087860] _4_end[2087781]))
    val _5_start[2087904]:int(64)[13] "temp"
    (2087909 'move' _5_start[2087904](2087906 '.v' c[2087860] _5_start[2087783]))
    val _6_rvfDerefTmp[2087912]:file[235580] "temp"
    (2087917 'move' _6_rvfDerefTmp[2087912](2087914 '.v' c[2087860] _6_rvfDerefTmp[2087785]))
    ref _7__formal_tmp_error[2087920]:syserr[223584] "temp"
    (2087925 'move' _7__formal_tmp_error[2087920](2087922 '.v' c[2087860] _7__formal_tmp_error[2087787]))
    (2087863 call on_fn[1017725] _1_this[2087872] _2_hints[2087880] _3_rvfDerefTmp[2087888] _4_end[2087896] _5_start[2087904] _6_rvfDerefTmp[2087912] _7__formal_tmp_error[2087920])
    (2087928 return _void[55])
  }
  function wrapon_fn[2087985](const in arg dummy_locale_arg[2087987]:chpl_localeID_t[209294], in arg buf[2087989]:c_void_ptr[149], in arg buf_size[2087991]:int(64)[13], in arg c[2087993]:_class_localson_fn[2087951]) : void[4] "on block"
  {
    val _0_tmp[2087998]:chpl_localeID_t[209294] "temp"
    (2088003 'move' _0_tmp[2087998](2088000 '.v' c[2087993] _0_tmp[2087954]))
    val _1_rvfDerefTmp[2088005]:channel(false,dynamic,true)[985627] "temp"
    (2088010 'move' _1_rvfDerefTmp[2088005](2088007 '.v' c[2087993] _1_rvfDerefTmp[2087956]))
    (2087996 call on_fn[1018665] _1_rvfDerefTmp[2088005])
    (2088013 return _void[55])
  }
  function wrapon_fn[2088076](const in arg dummy_locale_arg[2088078]:chpl_localeID_t[209294], in arg buf[2088080]:c_void_ptr[149], in arg buf_size[2088082]:int(64)[13], in arg c[2088084]:_class_localson_fn[2088036]) : void[4] "on block"
  {
    val _0_tmp[2088089]:chpl_localeID_t[209294] "temp"
    (2088094 'move' _0_tmp[2088089](2088091 '.v' c[2088084] _0_tmp[2088039]))
    ref _1_lhs[2088096]:channel(false,dynamic,true)[985627] "temp"
    (2088101 'move' _1_lhs[2088096](2088098 '.v' c[2088084] _1_lhs[2088041]))
    (2088087 call on_fn[1018709] _1_lhs[2088096])
    (2088104 return _void[55])
  }
  function wrapon_fn[2088340](const in arg dummy_locale_arg[2088342]:chpl_localeID_t[209294], in arg buf[2088344]:c_void_ptr[149], in arg buf_size[2088346]:int(64)[13], in arg c[2088348]:_class_localson_fn[2088246]) : void[4] "on block"
  {
    val _0_tmp[2088353]:chpl_localeID_t[209294] "temp"
    (2088358 'move' _0_tmp[2088353](2088355 '.v' c[2088348] _0_tmp[2088249]))
    val _1_end[2088360]:int(64)[13] "temp"
    (2088365 'move' _1_end[2088360](2088362 '.v' c[2088348] _1_end[2088251]))
    val _2_rvfDerefTmp[2088368]:iostyle[231844] "temp"
    (2088373 'move' _2_rvfDerefTmp[2088368](2088370 '.v' c[2088348] _2_rvfDerefTmp[2088253]))
    val _3_rvfDerefTmp[2088376]:file[235580] "temp"
    (2088381 'move' _3_rvfDerefTmp[2088376](2088378 '.v' c[2088348] _3_rvfDerefTmp[2088255]))
    ref _4_ret[2088384]:channel(true,dynamic,true)[1021825] "temp"
    (2088389 'move' _4_ret[2088384](2088386 '.v' c[2088348] _4_ret[2088257]))
    val _5_hints[2088392]:int(32)[95] "temp"
    (2088397 'move' _5_hints[2088392](2088394 '.v' c[2088348] _5_hints[2088259]))
    val _6_start[2088400]:int(64)[13] "temp"
    (2088405 'move' _6_start[2088400](2088402 '.v' c[2088348] _6_start[2088261]))
    ref _7_err[2088408]:syserr[223584] "temp"
    (2088413 'move' _7_err[2088408](2088410 '.v' c[2088348] _7_err[2088263]))
    ref _8_error[2088416]:Error[167938] "temp"
    (2088421 'move' _8_error[2088416](2088418 '.v' c[2088348] _8_error[2088265]))
    (2088351 call on_fn[1022270] _1_end[2088360] _2_rvfDerefTmp[2088368] _3_rvfDerefTmp[2088376] _4_ret[2088384] _5_hints[2088392] _6_start[2088400] _7_err[2088408] _8_error[2088416])
    (2088424 return _void[55])
  }
  function wrapon_fn[2088535](const in arg dummy_locale_arg[2088537]:chpl_localeID_t[209294], in arg buf[2088539]:c_void_ptr[149], in arg buf_size[2088541]:int(64)[13], in arg c[2088543]:_class_localson_fn[2088453]) : void[4] "on block"
  {
    val _0_tmp[2088548]:chpl_localeID_t[209294] "temp"
    (2088553 'move' _0_tmp[2088548](2088550 '.v' c[2088543] _0_tmp[2088456]))
    val _1_rvfDerefTmp[2088555]:file[235580] "temp"
    (2088560 'move' _1_rvfDerefTmp[2088555](2088557 '.v' c[2088543] _1_rvfDerefTmp[2088458]))
    ref _2__formal_tmp_error[2088563]:syserr[223584] "temp"
    (2088568 'move' _2__formal_tmp_error[2088563](2088565 '.v' c[2088543] _2__formal_tmp_error[2088460]))
    val _3_end[2088571]:int(64)[13] "temp"
    (2088576 'move' _3_end[2088571](2088573 '.v' c[2088543] _3_end[2088462]))
    ref _4_this[2088579]:channel(true,dynamic,true)[1021825] "temp"
    (2088584 'move' _4_this[2088579](2088581 '.v' c[2088543] _4_this[2088464]))
    val _5_hints[2088587]:int(32)[95] "temp"
    (2088592 'move' _5_hints[2088587](2088589 '.v' c[2088543] _5_hints[2088466]))
    val _6_rvfDerefTmp[2088595]:iostyle[231844] "temp"
    (2088600 'move' _6_rvfDerefTmp[2088595](2088597 '.v' c[2088543] _6_rvfDerefTmp[2088468]))
    val _7_start[2088603]:int(64)[13] "temp"
    (2088608 'move' _7_start[2088603](2088605 '.v' c[2088543] _7_start[2088470]))
    (2088546 call on_fn[1022761] _1_rvfDerefTmp[2088555] _2__formal_tmp_error[2088563] _3_end[2088571] _4_this[2088579] _5_hints[2088587] _6_rvfDerefTmp[2088595] _7_start[2088603])
    (2088611 return _void[55])
  }
  function wrapon_fn[2088668](const in arg dummy_locale_arg[2088670]:chpl_localeID_t[209294], in arg buf[2088672]:c_void_ptr[149], in arg buf_size[2088674]:int(64)[13], in arg c[2088676]:_class_localson_fn[2088634]) : void[4] "on block"
  {
    val _0_tmp[2088681]:chpl_localeID_t[209294] "temp"
    (2088686 'move' _0_tmp[2088681](2088683 '.v' c[2088676] _0_tmp[2088637]))
    val _1_rvfDerefTmp[2088688]:channel(true,dynamic,true)[1021825] "temp"
    (2088693 'move' _1_rvfDerefTmp[2088688](2088690 '.v' c[2088676] _1_rvfDerefTmp[2088639]))
    (2088679 call on_fn[1023373] _1_rvfDerefTmp[2088688])
    (2088696 return _void[55])
  }
  function wrapon_fn[2088759](const in arg dummy_locale_arg[2088761]:chpl_localeID_t[209294], in arg buf[2088763]:c_void_ptr[149], in arg buf_size[2088765]:int(64)[13], in arg c[2088767]:_class_localson_fn[2088719]) : void[4] "on block"
  {
    val _0_tmp[2088772]:chpl_localeID_t[209294] "temp"
    (2088777 'move' _0_tmp[2088772](2088774 '.v' c[2088767] _0_tmp[2088722]))
    ref _1_lhs[2088779]:channel(true,dynamic,true)[1021825] "temp"
    (2088784 'move' _1_lhs[2088779](2088781 '.v' c[2088767] _1_lhs[2088724]))
    (2088770 call on_fn[1023417] _1_lhs[2088779])
    (2088787 return _void[55])
  }
  function wrapon_fn[2089053](const in arg dummy_locale_arg[2089055]:chpl_localeID_t[209294], in arg buf[2089057]:c_void_ptr[149], in arg buf_size[2089059]:int(64)[13], in arg c[2089061]:_class_localson_fn[2088959]) : void[4] "on block"
  {
    val _0_tmp[2089066]:chpl_localeID_t[209294] "temp"
    (2089071 'move' _0_tmp[2089066](2089068 '.v' c[2089061] _0_tmp[2088962]))
    val _1_start[2089073]:int(64)[13] "temp"
    (2089078 'move' _1_start[2089073](2089075 '.v' c[2089061] _1_start[2088964]))
    ref _2_ret[2089081]:channel(true,dynamic,false)[1060947] "temp"
    (2089086 'move' _2_ret[2089081](2089083 '.v' c[2089061] _2_ret[2088966]))
    val _3_end[2089089]:int(64)[13] "temp"
    (2089094 'move' _3_end[2089089](2089091 '.v' c[2089061] _3_end[2088968]))
    val _4_rvfDerefTmp[2089097]:iostyle[231844] "temp"
    (2089102 'move' _4_rvfDerefTmp[2089097](2089099 '.v' c[2089061] _4_rvfDerefTmp[2088970]))
    val _5_rvfDerefTmp[2089105]:file[235580] "temp"
    (2089110 'move' _5_rvfDerefTmp[2089105](2089107 '.v' c[2089061] _5_rvfDerefTmp[2088972]))
    ref _6_err[2089113]:syserr[223584] "temp"
    (2089118 'move' _6_err[2089113](2089115 '.v' c[2089061] _6_err[2088974]))
    val _7_hints[2089121]:int(32)[95] "temp"
    (2089126 'move' _7_hints[2089121](2089123 '.v' c[2089061] _7_hints[2088976]))
    ref _8_error[2089129]:Error[167938] "temp"
    (2089134 'move' _8_error[2089129](2089131 '.v' c[2089061] _8_error[2088978]))
    (2089064 call on_fn[1061022] _1_start[2089073] _2_ret[2089081] _3_end[2089089] _4_rvfDerefTmp[2089097] _5_rvfDerefTmp[2089105] _6_err[2089113] _7_hints[2089121] _8_error[2089129])
    (2089137 return _void[55])
  }
  function wrapon_fn[2089248](const in arg dummy_locale_arg[2089250]:chpl_localeID_t[209294], in arg buf[2089252]:c_void_ptr[149], in arg buf_size[2089254]:int(64)[13], in arg c[2089256]:_class_localson_fn[2089166]) : void[4] "on block"
  {
    val _0_tmp[2089261]:chpl_localeID_t[209294] "temp"
    (2089266 'move' _0_tmp[2089261](2089263 '.v' c[2089256] _0_tmp[2089169]))
    ref _1__formal_tmp_error[2089268]:syserr[223584] "temp"
    (2089273 'move' _1__formal_tmp_error[2089268](2089270 '.v' c[2089256] _1__formal_tmp_error[2089171]))
    val _2_end[2089276]:int(64)[13] "temp"
    (2089281 'move' _2_end[2089276](2089278 '.v' c[2089256] _2_end[2089173]))
    val _3_hints[2089284]:int(32)[95] "temp"
    (2089289 'move' _3_hints[2089284](2089286 '.v' c[2089256] _3_hints[2089175]))
    val _4_rvfDerefTmp[2089292]:iostyle[231844] "temp"
    (2089297 'move' _4_rvfDerefTmp[2089292](2089294 '.v' c[2089256] _4_rvfDerefTmp[2089177]))
    ref _5_this[2089300]:channel(true,dynamic,false)[1060947] "temp"
    (2089305 'move' _5_this[2089300](2089302 '.v' c[2089256] _5_this[2089179]))
    val _6_start[2089308]:int(64)[13] "temp"
    (2089313 'move' _6_start[2089308](2089310 '.v' c[2089256] _6_start[2089181]))
    val _7_rvfDerefTmp[2089316]:file[235580] "temp"
    (2089321 'move' _7_rvfDerefTmp[2089316](2089318 '.v' c[2089256] _7_rvfDerefTmp[2089183]))
    (2089259 call on_fn[1061474] _1__formal_tmp_error[2089268] _2_end[2089276] _3_hints[2089284] _4_rvfDerefTmp[2089292] _5_this[2089300] _6_start[2089308] _7_rvfDerefTmp[2089316])
    (2089324 return _void[55])
  }
  function wrapon_fn[2089381](const in arg dummy_locale_arg[2089383]:chpl_localeID_t[209294], in arg buf[2089385]:c_void_ptr[149], in arg buf_size[2089387]:int(64)[13], in arg c[2089389]:_class_localson_fn[2089347]) : void[4] "on block"
  {
    val _0_tmp[2089394]:chpl_localeID_t[209294] "temp"
    (2089399 'move' _0_tmp[2089394](2089396 '.v' c[2089389] _0_tmp[2089350]))
    val _1_rvfDerefTmp[2089401]:channel(true,dynamic,false)[1060947] "temp"
    (2089406 'move' _1_rvfDerefTmp[2089401](2089403 '.v' c[2089389] _1_rvfDerefTmp[2089352]))
    (2089392 call on_fn[1062086] _1_rvfDerefTmp[2089401])
    (2089409 return _void[55])
  }
  function wrapon_fn[2089472](const in arg dummy_locale_arg[2089474]:chpl_localeID_t[209294], in arg buf[2089476]:c_void_ptr[149], in arg buf_size[2089478]:int(64)[13], in arg c[2089480]:_class_localson_fn[2089432]) : void[4] "on block"
  {
    val _0_tmp[2089485]:chpl_localeID_t[209294] "temp"
    (2089490 'move' _0_tmp[2089485](2089487 '.v' c[2089480] _0_tmp[2089435]))
    ref _1_lhs[2089492]:channel(true,dynamic,false)[1060947] "temp"
    (2089497 'move' _1_lhs[2089492](2089494 '.v' c[2089480] _1_lhs[2089437]))
    (2089483 call on_fn[1062130] _1_lhs[2089492])
    (2089500 return _void[55])
  }
  function wrapon_fn[2089570](const in arg dummy_locale_arg[2089572]:chpl_localeID_t[209294], in arg buf[2089574]:c_void_ptr[149], in arg buf_size[2089576]:int(64)[13], in arg c[2089578]:_class_localson_fn[2089524]) : void[4] "on block"
  {
    val _0_tmp[2089583]:chpl_localeID_t[209294] "temp"
    (2089588 'move' _0_tmp[2089583](2089585 '.v' c[2089578] _0_tmp[2089527]))
    val _1_rvfDerefTmp[2089590]:channel(true,dynamic,false)[1060947] "temp"
    (2089595 'move' _1_rvfDerefTmp[2089590](2089592 '.v' c[2089578] _1_rvfDerefTmp[2089529]))
    ref _2_err[2089598]:syserr[223584] "temp"
    (2089603 'move' _2_err[2089598](2089600 '.v' c[2089578] _2_err[2089531]))
    (2089581 call on_fn[1062455] _1_rvfDerefTmp[2089590] _2_err[2089598])
    (2089606 return _void[55])
  }
  function wrapon_fn[2089708](const in arg dummy_locale_arg[2089710]:chpl_localeID_t[209294], in arg buf[2089712]:c_void_ptr[149], in arg buf_size[2089714]:int(64)[13], in arg c[2089716]:_class_localson_fn[2089632]) : void[4] "on block"
  {
    val _0_tmp[2089721]:chpl_localeID_t[209294] "temp"
    (2089726 'move' _0_tmp[2089721](2089723 '.v' c[2089716] _0_tmp[2089635]))
    ref _1_this[2089728]:channel(true,dynamic,false)[1060947] "temp"
    (2089733 'move' _1_this[2089728](2089730 '.v' c[2089716] _1_this[2089637]))
    ref _2_path[2089736]:string[26] "temp"
    (2089741 'move' _2_path[2089736](2089738 '.v' c[2089716] _2_path[2089639]))
    ref _3_offset[2089744]:int(64)[13] "temp"
    (2089749 'move' _3_offset[2089744](2089746 '.v' c[2089716] _3_offset[2089641]))
    ref _4_error[2089752]:Error[167938] "temp"
    (2089757 'move' _4_error[2089752](2089754 '.v' c[2089716] _4_error[2089643]))
    (2089719 call on_fn[1062932] _1_this[2089728] _2_path[2089736] _3_offset[2089744] _4_error[2089752])
    (2089760 return _void[55])
  }
  function wrapon_fn[2089850](const in arg dummy_locale_arg[2089852]:chpl_localeID_t[209294], in arg buf[2089854]:c_void_ptr[149], in arg buf_size[2089856]:int(64)[13], in arg c[2089858]:_class_localson_fn[2089786]) : void[4] "on block"
  {
    val _0_tmp[2089863]:chpl_localeID_t[209294] "temp"
    (2089868 'move' _0_tmp[2089863](2089865 '.v' c[2089858] _0_tmp[2089789]))
    val _1_rvfDerefTmp[2089870]:channel(true,dynamic,false)[1060947] "temp"
    (2089875 'move' _1_rvfDerefTmp[2089870](2089872 '.v' c[2089858] _1_rvfDerefTmp[2089791]))
    ref _2_args[2089878]:1*byteIndex[1057081] "temp"
    (2089883 'move' _2_args[2089878](2089880 '.v' c[2089858] _2_args[2089793]))
    val _3_rvfDerefTmp[2089886]:locale[28] "temp"
    (2089891 'move' _3_rvfDerefTmp[2089886](2089888 '.v' c[2089858] _3_rvfDerefTmp[2089795]))
    ref _4_error[2089894]:Error[167938] "temp"
    (2089899 'move' _4_error[2089894](2089896 '.v' c[2089858] _4_error[2089797]))
    (2089861 call on_fn[1066089] _1_rvfDerefTmp[2089870] _2_args[2089878] _3_rvfDerefTmp[2089886] _4_error[2089894])
    (2089902 return _void[55])
  }
  function wrapon_fn[2089992](const in arg dummy_locale_arg[2089994]:chpl_localeID_t[209294], in arg buf[2089996]:c_void_ptr[149], in arg buf_size[2089998]:int(64)[13], in arg c[2090000]:_class_localson_fn[2089928]) : void[4] "on block"
  {
    val _0_tmp[2090005]:chpl_localeID_t[209294] "temp"
    (2090010 'move' _0_tmp[2090005](2090007 '.v' c[2090000] _0_tmp[2089931]))
    ref _1_this[2090012]:channel(true,dynamic,false)[1060947] "temp"
    (2090017 'move' _1_this[2090012](2090014 '.v' c[2090000] _1_this[2089933]))
    val _2_x[2090020]:int(64)[13] "temp"
    (2090025 'move' _2_x[2090020](2090022 '.v' c[2090000] _2_x[2089935]))
    val _3_rvfDerefTmp[2090028]:locale[28] "temp"
    (2090033 'move' _3_rvfDerefTmp[2090028](2090030 '.v' c[2090000] _3_rvfDerefTmp[2089937]))
    ref _4_error[2090036]:Error[167938] "temp"
    (2090041 'move' _4_error[2090036](2090038 '.v' c[2090000] _4_error[2089939]))
    (2090003 call on_fn[1068868] _1_this[2090012] _2_x[2090020] _3_rvfDerefTmp[2090028] _4_error[2090036])
    (2090044 return _void[55])
  }
  function wrapon_fn[2090114](const in arg dummy_locale_arg[2090116]:chpl_localeID_t[209294], in arg buf[2090118]:c_void_ptr[149], in arg buf_size[2090120]:int(64)[13], in arg c[2090122]:_class_localson_fn[2090068]) : void[4] "on block"
  {
    val _0_tmp[2090127]:chpl_localeID_t[209294] "temp"
    (2090132 'move' _0_tmp[2090127](2090129 '.v' c[2090122] _0_tmp[2090071]))
    val _1_rvfDerefTmp[2090134]:channel(true,dynamic,false)[1060947] "temp"
    (2090139 'move' _1_rvfDerefTmp[2090134](2090136 '.v' c[2090122] _1_rvfDerefTmp[2090073]))
    ref _2_ret[2090142]:int(64)[13] "temp"
    (2090147 'move' _2_ret[2090142](2090144 '.v' c[2090122] _2_ret[2090075]))
    (2090125 call on_fn[1080205] _1_rvfDerefTmp[2090134] _2_ret[2090142])
    (2090150 return _void[55])
  }
  function wrapon_fn[2090274](const in arg dummy_locale_arg[2090276]:chpl_localeID_t[209294], in arg buf[2090278]:c_void_ptr[149], in arg buf_size[2090280]:int(64)[13], in arg c[2090282]:_class_localson_fn[2090180]) : void[4] "on block"
  {
    val _0_tmp[2090287]:chpl_localeID_t[209294] "temp"
    (2090292 'move' _0_tmp[2090287](2090289 '.v' c[2090282] _0_tmp[2090183]))
    val _1_start[2090294]:int(64)[13] "temp"
    (2090299 'move' _1_start[2090294](2090296 '.v' c[2090282] _1_start[2090185]))
    ref _2_ret[2090302]:channel(false,dynamic,false)[1080682] "temp"
    (2090307 'move' _2_ret[2090302](2090304 '.v' c[2090282] _2_ret[2090187]))
    val _3_rvfDerefTmp[2090310]:iostyle[231844] "temp"
    (2090315 'move' _3_rvfDerefTmp[2090310](2090312 '.v' c[2090282] _3_rvfDerefTmp[2090189]))
    val _4_end[2090318]:int(64)[13] "temp"
    (2090323 'move' _4_end[2090318](2090320 '.v' c[2090282] _4_end[2090191]))
    val _5_rvfDerefTmp[2090326]:file[235580] "temp"
    (2090331 'move' _5_rvfDerefTmp[2090326](2090328 '.v' c[2090282] _5_rvfDerefTmp[2090193]))
    ref _6_err[2090334]:syserr[223584] "temp"
    (2090339 'move' _6_err[2090334](2090336 '.v' c[2090282] _6_err[2090195]))
    val _7_hints[2090342]:int(32)[95] "temp"
    (2090347 'move' _7_hints[2090342](2090344 '.v' c[2090282] _7_hints[2090197]))
    ref _8_error[2090350]:Error[167938] "temp"
    (2090355 'move' _8_error[2090350](2090352 '.v' c[2090282] _8_error[2090199]))
    (2090285 call on_fn[1080757] _1_start[2090294] _2_ret[2090302] _3_rvfDerefTmp[2090310] _4_end[2090318] _5_rvfDerefTmp[2090326] _6_err[2090334] _7_hints[2090342] _8_error[2090350])
    (2090358 return _void[55])
  }
  function wrapon_fn[2090469](const in arg dummy_locale_arg[2090471]:chpl_localeID_t[209294], in arg buf[2090473]:c_void_ptr[149], in arg buf_size[2090475]:int(64)[13], in arg c[2090477]:_class_localson_fn[2090387]) : void[4] "on block"
  {
    val _0_tmp[2090482]:chpl_localeID_t[209294] "temp"
    (2090487 'move' _0_tmp[2090482](2090484 '.v' c[2090477] _0_tmp[2090390]))
    val _1_end[2090489]:int(64)[13] "temp"
    (2090494 'move' _1_end[2090489](2090491 '.v' c[2090477] _1_end[2090392]))
    val _2_hints[2090497]:int(32)[95] "temp"
    (2090502 'move' _2_hints[2090497](2090499 '.v' c[2090477] _2_hints[2090394]))
    val _3_rvfDerefTmp[2090505]:iostyle[231844] "temp"
    (2090510 'move' _3_rvfDerefTmp[2090505](2090507 '.v' c[2090477] _3_rvfDerefTmp[2090396]))
    ref _4_this[2090513]:channel(false,dynamic,false)[1080682] "temp"
    (2090518 'move' _4_this[2090513](2090515 '.v' c[2090477] _4_this[2090398]))
    val _5_start[2090521]:int(64)[13] "temp"
    (2090526 'move' _5_start[2090521](2090523 '.v' c[2090477] _5_start[2090400]))
    val _6_rvfDerefTmp[2090529]:file[235580] "temp"
    (2090534 'move' _6_rvfDerefTmp[2090529](2090531 '.v' c[2090477] _6_rvfDerefTmp[2090402]))
    ref _7__formal_tmp_error[2090537]:syserr[223584] "temp"
    (2090542 'move' _7__formal_tmp_error[2090537](2090539 '.v' c[2090477] _7__formal_tmp_error[2090404]))
    (2090480 call on_fn[1081206] _1_end[2090489] _2_hints[2090497] _3_rvfDerefTmp[2090505] _4_this[2090513] _5_start[2090521] _6_rvfDerefTmp[2090529] _7__formal_tmp_error[2090537])
    (2090545 return _void[55])
  }
  function wrapon_fn[2090602](const in arg dummy_locale_arg[2090604]:chpl_localeID_t[209294], in arg buf[2090606]:c_void_ptr[149], in arg buf_size[2090608]:int(64)[13], in arg c[2090610]:_class_localson_fn[2090568]) : void[4] "on block"
  {
    val _0_tmp[2090615]:chpl_localeID_t[209294] "temp"
    (2090620 'move' _0_tmp[2090615](2090617 '.v' c[2090610] _0_tmp[2090571]))
    val _1_rvfDerefTmp[2090622]:channel(false,dynamic,false)[1080682] "temp"
    (2090627 'move' _1_rvfDerefTmp[2090622](2090624 '.v' c[2090610] _1_rvfDerefTmp[2090573]))
    (2090613 call on_fn[1081818] _1_rvfDerefTmp[2090622])
    (2090630 return _void[55])
  }
  function wrapon_fn[2090693](const in arg dummy_locale_arg[2090695]:chpl_localeID_t[209294], in arg buf[2090697]:c_void_ptr[149], in arg buf_size[2090699]:int(64)[13], in arg c[2090701]:_class_localson_fn[2090653]) : void[4] "on block"
  {
    val _0_tmp[2090706]:chpl_localeID_t[209294] "temp"
    (2090711 'move' _0_tmp[2090706](2090708 '.v' c[2090701] _0_tmp[2090656]))
    ref _1_lhs[2090713]:channel(false,dynamic,false)[1080682] "temp"
    (2090718 'move' _1_lhs[2090713](2090715 '.v' c[2090701] _1_lhs[2090658]))
    (2090704 call on_fn[1081862] _1_lhs[2090713])
    (2090721 return _void[55])
  }
  function wrapon_fn[2090791](const in arg dummy_locale_arg[2090793]:chpl_localeID_t[209294], in arg buf[2090795]:c_void_ptr[149], in arg buf_size[2090797]:int(64)[13], in arg c[2090799]:_class_localson_fn[2090745]) : void[4] "on block"
  {
    val _0_tmp[2090804]:chpl_localeID_t[209294] "temp"
    (2090809 'move' _0_tmp[2090804](2090806 '.v' c[2090799] _0_tmp[2090748]))
    val _1_rvfDerefTmp[2090811]:channel(false,dynamic,false)[1080682] "temp"
    (2090816 'move' _1_rvfDerefTmp[2090811](2090813 '.v' c[2090799] _1_rvfDerefTmp[2090750]))
    ref _2_err[2090819]:syserr[223584] "temp"
    (2090824 'move' _2_err[2090819](2090821 '.v' c[2090799] _2_err[2090752]))
    (2090802 call on_fn[1082187] _1_rvfDerefTmp[2090811] _2_err[2090819])
    (2090827 return _void[55])
  }
  function wrapon_fn[2090923](const in arg dummy_locale_arg[2090925]:chpl_localeID_t[209294], in arg buf[2090927]:c_void_ptr[149], in arg buf_size[2090929]:int(64)[13], in arg c[2090931]:_class_localson_fn[2090853]) : void[4] "on block"
  {
    val _0_tmp[2090936]:chpl_localeID_t[209294] "temp"
    (2090941 'move' _0_tmp[2090936](2090938 '.v' c[2090931] _0_tmp[2090856]))
    val _1_rvfDerefTmp[2090943]:channel(false,dynamic,false)[1080682] "temp"
    (2090948 'move' _1_rvfDerefTmp[2090943](2090945 '.v' c[2090931] _1_rvfDerefTmp[2090858]))
    ref _2_path[2090951]:string[26] "temp"
    (2090956 'move' _2_path[2090951](2090953 '.v' c[2090931] _2_path[2090860]))
    ref _3_offset[2090959]:int(64)[13] "temp"
    (2090964 'move' _3_offset[2090959](2090961 '.v' c[2090931] _3_offset[2090862]))
    ref _4_error[2090967]:Error[167938] "temp"
    (2090972 'move' _4_error[2090967](2090969 '.v' c[2090931] _4_error[2090864]))
    (2090934 call on_fn[1082616] _1_rvfDerefTmp[2090943] _2_path[2090951] _3_offset[2090959] _4_error[2090967])
    (2090975 return _void[55])
  }
  function wrapon_fn[2091207](const in arg dummy_locale_arg[2091209]:chpl_localeID_t[209294], in arg buf[2091211]:c_void_ptr[149], in arg buf_size[2091213]:int(64)[13], in arg c[2091215]:_class_localson_fn[2091143]) : void[4] "on block"
  {
    val _0_tmp[2091220]:chpl_localeID_t[209294] "temp"
    (2091225 'move' _0_tmp[2091220](2091222 '.v' c[2091215] _0_tmp[2091146]))
    val _1_rvfDerefTmp[2091227]:channel(true,dynamic,false)[1060947] "temp"
    (2091232 'move' _1_rvfDerefTmp[2091227](2091229 '.v' c[2091215] _1_rvfDerefTmp[2091148]))
    ref _2_args[2091235]:(string,codepointIndex,string)[1158555] "temp"
    (2091240 'move' _2_args[2091235](2091237 '.v' c[2091215] _2_args[2091150]))
    val _3_rvfDerefTmp[2091243]:locale[28] "temp"
    (2091248 'move' _3_rvfDerefTmp[2091243](2091245 '.v' c[2091215] _3_rvfDerefTmp[2091152]))
    ref _4_error[2091251]:Error[167938] "temp"
    (2091256 'move' _4_error[2091251](2091253 '.v' c[2091215] _4_error[2091154]))
    (2091218 call on_fn[1164907] _1_rvfDerefTmp[2091227] _2_args[2091235] _3_rvfDerefTmp[2091243] _4_error[2091251])
    (2091259 return _void[55])
  }
  function wrapon_fn[2091349](const in arg dummy_locale_arg[2091351]:chpl_localeID_t[209294], in arg buf[2091353]:c_void_ptr[149], in arg buf_size[2091355]:int(64)[13], in arg c[2091357]:_class_localson_fn[2091285]) : void[4] "on block"
  {
    val _0_tmp[2091362]:chpl_localeID_t[209294] "temp"
    (2091367 'move' _0_tmp[2091362](2091364 '.v' c[2091357] _0_tmp[2091288]))
    val _1_rvfDerefTmp[2091369]:channel(true,dynamic,false)[1060947] "temp"
    (2091374 'move' _1_rvfDerefTmp[2091369](2091371 '.v' c[2091357] _1_rvfDerefTmp[2091290]))
    ref _2_args[2091377]:(string,codepointIndex,string,int(64))[1176520] "temp"
    (2091382 'move' _2_args[2091377](2091379 '.v' c[2091357] _2_args[2091292]))
    val _3_rvfDerefTmp[2091385]:locale[28] "temp"
    (2091390 'move' _3_rvfDerefTmp[2091385](2091387 '.v' c[2091357] _3_rvfDerefTmp[2091294]))
    ref _4_error[2091393]:Error[167938] "temp"
    (2091398 'move' _4_error[2091393](2091395 '.v' c[2091357] _4_error[2091296]))
    (2091360 call on_fn[1180386] _1_rvfDerefTmp[2091369] _2_args[2091377] _3_rvfDerefTmp[2091385] _4_error[2091393])
    (2091401 return _void[55])
  }
  function wrapon_fn[2094171](const in arg dummy_locale_arg[2094173]:chpl_localeID_t[209294], in arg buf[2094175]:c_void_ptr[149], in arg buf_size[2094177]:int(64)[13], in arg c[2094179]:_class_localson_fn[2094107]) : void[4] "on block"
  {
    val _0_tmp[2094184]:chpl_localeID_t[209294] "temp"
    (2094189 'move' _0_tmp[2094184](2094186 '.v' c[2094179] _0_tmp[2094110]))
    val _1_rvfDerefTmp[2094191]:channel(true,dynamic,true)[1021825] "temp"
    (2094196 'move' _1_rvfDerefTmp[2094191](2094193 '.v' c[2094179] _1_rvfDerefTmp[2094112]))
    ref _2_args[2094199]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
    (2094204 'move' _2_args[2094199](2094201 '.v' c[2094179] _2_args[2094114]))
    val _3_rvfDerefTmp[2094207]:locale[28] "temp"
    (2094212 'move' _3_rvfDerefTmp[2094207](2094209 '.v' c[2094179] _3_rvfDerefTmp[2094116]))
    ref _4_error[2094215]:Error[167938] "temp"
    (2094220 'move' _4_error[2094215](2094217 '.v' c[2094179] _4_error[2094118]))
    (2094182 call on_fn[1392469] _1_rvfDerefTmp[2094191] _2_args[2094199] _3_rvfDerefTmp[2094207] _4_error[2094215])
    (2094223 return _void[55])
  }
  function wrapon_fn[2094293](const in arg dummy_locale_arg[2094295]:chpl_localeID_t[209294], in arg buf[2094297]:c_void_ptr[149], in arg buf_size[2094299]:int(64)[13], in arg c[2094301]:_class_localson_fn[2094247]) : void[4] "on block"
  {
    val _0_tmp[2094306]:chpl_localeID_t[209294] "temp"
    (2094311 'move' _0_tmp[2094306](2094308 '.v' c[2094301] _0_tmp[2094250]))
    val _1_rvfDerefTmp[2094313]:channel(true,dynamic,true)[1021825] "temp"
    (2094318 'move' _1_rvfDerefTmp[2094313](2094315 '.v' c[2094301] _1_rvfDerefTmp[2094252]))
    ref _2_err[2094321]:syserr[223584] "temp"
    (2094326 'move' _2_err[2094321](2094323 '.v' c[2094301] _2_err[2094254]))
    (2094304 call on_fn[1392911] _1_rvfDerefTmp[2094313] _2_err[2094321])
    (2094329 return _void[55])
  }
  function wrapon_fn[2094425](const in arg dummy_locale_arg[2094427]:chpl_localeID_t[209294], in arg buf[2094429]:c_void_ptr[149], in arg buf_size[2094431]:int(64)[13], in arg c[2094433]:_class_localson_fn[2094355]) : void[4] "on block"
  {
    val _0_tmp[2094438]:chpl_localeID_t[209294] "temp"
    (2094443 'move' _0_tmp[2094438](2094440 '.v' c[2094433] _0_tmp[2094358]))
    val _1_rvfDerefTmp[2094445]:channel(true,dynamic,true)[1021825] "temp"
    (2094450 'move' _1_rvfDerefTmp[2094445](2094447 '.v' c[2094433] _1_rvfDerefTmp[2094360]))
    ref _2_path[2094453]:string[26] "temp"
    (2094458 'move' _2_path[2094453](2094455 '.v' c[2094433] _2_path[2094362]))
    ref _3_offset[2094461]:int(64)[13] "temp"
    (2094466 'move' _3_offset[2094461](2094463 '.v' c[2094433] _3_offset[2094364]))
    ref _4_error[2094469]:Error[167938] "temp"
    (2094474 'move' _4_error[2094469](2094471 '.v' c[2094433] _4_error[2094366]))
    (2094436 call on_fn[1393328] _1_rvfDerefTmp[2094445] _2_path[2094453] _3_offset[2094461] _4_error[2094469])
    (2094477 return _void[55])
  }
  function wrapon_fn[2094534](const in arg dummy_locale_arg[2094536]:chpl_localeID_t[209294], in arg buf[2094538]:c_void_ptr[149], in arg buf_size[2094540]:int(64)[13], in arg c[2094542]:_class_localson_fn[2094500]) : void[4] "on block"
  {
    val _0_tmp[2094547]:chpl_localeID_t[209294] "temp"
    (2094552 'move' _0_tmp[2094547](2094549 '.v' c[2094542] _0_tmp[2094503]))
    val _1_rvfDerefTmp[2094554]:channel(true,dynamic,true)[1021825] "temp"
    (2094559 'move' _1_rvfDerefTmp[2094554](2094556 '.v' c[2094542] _1_rvfDerefTmp[2094505]))
    (2094545 call on_fn[1393602] _1_rvfDerefTmp[2094554])
    (2094562 return _void[55])
  }
  function wrapon_fn[2094645](const in arg dummy_locale_arg[2094647]:chpl_localeID_t[209294], in arg buf[2094649]:c_void_ptr[149], in arg buf_size[2094651]:int(64)[13], in arg c[2094653]:_class_localson_fn[2094587]) : void[4] "on block"
  {
    val _0_tmp[2094658]:chpl_localeID_t[209294] "temp"
    (2094663 'move' _0_tmp[2094658](2094660 '.v' c[2094653] _0_tmp[2094590]))
    ref _1_this[2094665]:channel(true,dynamic,false)[1060947] "temp"
    (2094670 'move' _1_this[2094665](2094667 '.v' c[2094653] _1_this[2094592]))
    val _2_element[2094673]:int(64)[13] "temp"
    (2094678 'move' _2_element[2094673](2094675 '.v' c[2094653] _2_element[2094594]))
    ref _3_ret[2094681]:int(64)[13] "temp"
    (2094686 'move' _3_ret[2094681](2094683 '.v' c[2094653] _3_ret[2094596]))
    (2094656 call on_fn[1400789] _1_this[2094665] _2_element[2094673] _3_ret[2094681])
    (2094689 return _void[55])
  }
  function wrapon_fn[2094765](const in arg dummy_locale_arg[2094767]:chpl_localeID_t[209294], in arg buf[2094769]:c_void_ptr[149], in arg buf_size[2094771]:int(64)[13], in arg c[2094773]:_class_localson_fn[2094713]) : void[4] "on block"
  {
    val _0_tmp[2094778]:chpl_localeID_t[209294] "temp"
    (2094783 'move' _0_tmp[2094778](2094780 '.v' c[2094773] _0_tmp[2094716]))
    ref _1_this[2094785]:channel(true,dynamic,false)[1060947] "temp"
    (2094790 'move' _1_this[2094785](2094787 '.v' c[2094773] _1_this[2094718]))
    ref _2_ret[2094793]:uint(8)[100] "temp"
    (2094798 'move' _2_ret[2094793](2094795 '.v' c[2094773] _2_ret[2094720]))
    (2094776 call on_fn[1401829] _1_this[2094785] _2_ret[2094793])
    (2094801 return _void[55])
  }
  function wrapon_fn[2094904](const in arg dummy_locale_arg[2094906]:chpl_localeID_t[209294], in arg buf[2094908]:c_void_ptr[149], in arg buf_size[2094910]:int(64)[13], in arg c[2094912]:_class_localson_fn[2094828]) : void[4] "on block"
  {
    val _0_tmp[2094917]:chpl_localeID_t[209294] "temp"
    (2094922 'move' _0_tmp[2094917](2094919 '.v' c[2094912] _0_tmp[2094831]))
    ref _1_this[2094924]:channel(true,dynamic,false)[1060947] "temp"
    (2094929 'move' _1_this[2094924](2094926 '.v' c[2094912] _1_this[2094833]))
    val _2_x[2094932]:_ddata(real(64))[1357916] "temp"
    (2094937 'move' _2_x[2094932](2094934 '.v' c[2094912] _2_x[2094835]))
    val _3_len[2094940]:int(64)[13] "temp"
    (2094945 'move' _3_len[2094940](2094942 '.v' c[2094912] _3_len[2094837]))
    ref _4_err[2094948]:syserr[223584] "temp"
    (2094953 'move' _4_err[2094948](2094950 '.v' c[2094912] _4_err[2094839]))
    ref _5_error[2094956]:Error[167938] "temp"
    (2094961 'move' _5_error[2094956](2094958 '.v' c[2094912] _5_error[2094841]))
    (2094915 call on_fn[1407864] _1_this[2094924] _2_x[2094932] _3_len[2094940] _4_err[2094948] _5_error[2094956])
    (2094964 return _void[55])
  }
  function wrapon_fn[2095054](const in arg dummy_locale_arg[2095056]:chpl_localeID_t[209294], in arg buf[2095058]:c_void_ptr[149], in arg buf_size[2095060]:int(64)[13], in arg c[2095062]:_class_localson_fn[2094990]) : void[4] "on block"
  {
    val _0_tmp[2095067]:chpl_localeID_t[209294] "temp"
    (2095072 'move' _0_tmp[2095067](2095069 '.v' c[2095062] _0_tmp[2094993]))
    ref _1_this[2095074]:channel(true,dynamic,false)[1060947] "temp"
    (2095079 'move' _1_this[2095074](2095076 '.v' c[2095062] _1_this[2094995]))
    val _2_rvfDerefTmp[2095082]:ioLiteral[238753] "temp"
    (2095087 'move' _2_rvfDerefTmp[2095082](2095084 '.v' c[2095062] _2_rvfDerefTmp[2094997]))
    val _3_rvfDerefTmp[2095090]:locale[28] "temp"
    (2095095 'move' _3_rvfDerefTmp[2095090](2095092 '.v' c[2095062] _3_rvfDerefTmp[2094999]))
    ref _4_error[2095098]:Error[167938] "temp"
    (2095103 'move' _4_error[2095098](2095100 '.v' c[2095062] _4_error[2095001]))
    (2095065 call on_fn[1408604] _1_this[2095074] _2_rvfDerefTmp[2095082] _3_rvfDerefTmp[2095090] _4_error[2095098])
    (2095106 return _void[55])
  }
  function wrapon_fn[2095196](const in arg dummy_locale_arg[2095198]:chpl_localeID_t[209294], in arg buf[2095200]:c_void_ptr[149], in arg buf_size[2095202]:int(64)[13], in arg c[2095204]:_class_localson_fn[2095132]) : void[4] "on block"
  {
    val _0_tmp[2095209]:chpl_localeID_t[209294] "temp"
    (2095214 'move' _0_tmp[2095209](2095211 '.v' c[2095204] _0_tmp[2095135]))
    ref _1_this[2095216]:channel(true,dynamic,false)[1060947] "temp"
    (2095221 'move' _1_this[2095216](2095218 '.v' c[2095204] _1_this[2095137]))
    val _2_x[2095224]:real(64)[16] "temp"
    (2095229 'move' _2_x[2095224](2095226 '.v' c[2095204] _2_x[2095139]))
    val _3_rvfDerefTmp[2095232]:locale[28] "temp"
    (2095237 'move' _3_rvfDerefTmp[2095232](2095234 '.v' c[2095204] _3_rvfDerefTmp[2095141]))
    ref _4_error[2095240]:Error[167938] "temp"
    (2095245 'move' _4_error[2095240](2095242 '.v' c[2095204] _4_error[2095143]))
    (2095207 call on_fn[1421810] _1_this[2095216] _2_x[2095224] _3_rvfDerefTmp[2095232] _4_error[2095240])
    (2095248 return _void[55])
  }
  function wrapon_fn[2095338](const in arg dummy_locale_arg[2095340]:chpl_localeID_t[209294], in arg buf[2095342]:c_void_ptr[149], in arg buf_size[2095344]:int(64)[13], in arg c[2095346]:_class_localson_fn[2095274]) : void[4] "on block"
  {
    val _0_tmp[2095351]:chpl_localeID_t[209294] "temp"
    (2095356 'move' _0_tmp[2095351](2095353 '.v' c[2095346] _0_tmp[2095277]))
    val _1_rvfDerefTmp[2095358]:channel(true,dynamic,true)[1021825] "temp"
    (2095363 'move' _1_rvfDerefTmp[2095358](2095360 '.v' c[2095346] _1_rvfDerefTmp[2095279]))
    ref _2_args[2095366]:(int(64),ioNewline)[1433256] "temp"
    (2095371 'move' _2_args[2095366](2095368 '.v' c[2095346] _2_args[2095281]))
    val _3_rvfDerefTmp[2095374]:locale[28] "temp"
    (2095379 'move' _3_rvfDerefTmp[2095374](2095376 '.v' c[2095346] _3_rvfDerefTmp[2095283]))
    ref _4_error[2095382]:Error[167938] "temp"
    (2095387 'move' _4_error[2095382](2095384 '.v' c[2095346] _4_error[2095285]))
    (2095349 call on_fn[1433131] _1_rvfDerefTmp[2095358] _2_args[2095366] _3_rvfDerefTmp[2095374] _4_error[2095382])
    (2095390 return _void[55])
  }
  function wrapon_fn[2097344](const in arg dummy_locale_arg[2097346]:chpl_localeID_t[209294], in arg buf[2097348]:c_void_ptr[149], in arg buf_size[2097350]:int(64)[13], in arg c[2097352]:_class_localson_fn[2097304]) : void[4] "on block"
  {
    val _0_tmp[2097357]:chpl_localeID_t[209294] "temp"
    (2097362 'move' _0_tmp[2097357](2097359 '.v' c[2097352] _0_tmp[2097307]))
    ref _1_this[2097364]:channel(false,dynamic,true)[985627] "temp"
    (2097369 'move' _1_this[2097364](2097366 '.v' c[2097352] _1_this[2097309]))
    (2097355 call on_fn[1471095] _1_this[2097364])
    (2097372 return _void[55])
  }
  function wrapon_fn[2099135](const in arg dummy_locale_arg[2099137]:chpl_localeID_t[209294], in arg buf[2099139]:c_void_ptr[149], in arg buf_size[2099141]:int(64)[13], in arg c[2099143]:_class_localson_fn[2099095]) : void[4] "on block"
  {
    val _0_tmp[2099148]:chpl_localeID_t[209294] "temp"
    (2099153 'move' _0_tmp[2099148](2099150 '.v' c[2099143] _0_tmp[2099098]))
    ref _1_this[2099155]:channel(true,dynamic,true)[1021825] "temp"
    (2099160 'move' _1_this[2099155](2099157 '.v' c[2099143] _1_this[2099100]))
    (2099146 call on_fn[1534074] _1_this[2099155])
    (2099163 return _void[55])
  }
  function wrapon_fn[2099311](const in arg dummy_locale_arg[2099313]:chpl_localeID_t[209294], in arg buf[2099315]:c_void_ptr[149], in arg buf_size[2099317]:int(64)[13], in arg c[2099319]:_class_localson_fn[2099271]) : void[4] "on block"
  {
    val _0_tmp[2099324]:chpl_localeID_t[209294] "temp"
    (2099329 'move' _0_tmp[2099324](2099326 '.v' c[2099319] _0_tmp[2099274]))
    ref _1_this[2099331]:channel(true,dynamic,false)[1060947] "temp"
    (2099336 'move' _1_this[2099331](2099333 '.v' c[2099319] _1_this[2099276]))
    (2099322 call on_fn[1536250] _1_this[2099331])
    (2099339 return _void[55])
  }
  function wrapon_fn[2099572](const in arg dummy_locale_arg[2099574]:chpl_localeID_t[209294], in arg buf[2099576]:c_void_ptr[149], in arg buf_size[2099578]:int(64)[13], in arg c[2099580]:_class_localson_fn[2099532]) : void[4] "on block"
  {
    val _0_tmp[2099585]:chpl_localeID_t[209294] "temp"
    (2099590 'move' _0_tmp[2099585](2099587 '.v' c[2099580] _0_tmp[2099535]))
    ref _1_this[2099592]:channel(false,dynamic,false)[1080682] "temp"
    (2099597 'move' _1_this[2099592](2099594 '.v' c[2099580] _1_this[2099537]))
    (2099583 call on_fn[1540504] _1_this[2099592])
    (2099600 return _void[55])
  }
}