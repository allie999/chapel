AST dump for IO after pass prune.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2212981] val _runtime_hdr[2212982]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212984]:chpl_localeID_t[209352] ref _1_this[2212986]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2212720] val _runtime_hdr[2212721]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212723]:chpl_localeID_t[209352] ref _1_this[2212725]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2212544] val _runtime_hdr[2212545]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212547]:chpl_localeID_t[209352] ref _1_this[2212549]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2210753] val _runtime_hdr[2210754]:chpl_comm_on_bundle_t[209359] val _0_tmp[2210756]:chpl_localeID_t[209352] ref _1_this[2210758]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2209710] val _runtime_hdr[2209711]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209713]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2209715]:channel(true,dynamic,true)[1022014] ref _2_args[2209717]:(string,ioNewline)[1589826] val _3_rvfDerefTmp[2209719]:locale[28] ref _4_error[2209721]:Error[167984] "error variable"
  type _class_localson_fn[2209568] val _runtime_hdr[2209569]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209571]:chpl_localeID_t[209352] ref _1_this[2209573]:channel(true,dynamic,false)[1061136] val _2_x[2209575]:real(64)[16] val _3_rvfDerefTmp[2209577]:locale[28] ref _4_error[2209579]:Error[167984] "error variable"
  type _class_localson_fn[2209426] val _runtime_hdr[2209427]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209429]:chpl_localeID_t[209352] ref _1_this[2209431]:channel(true,dynamic,false)[1061136] val _2_rvfDerefTmp[2209433]:ioLiteral[238841] val _3_rvfDerefTmp[2209435]:locale[28] ref _4_error[2209437]:Error[167984] "error variable"
  type _class_localson_fn[2209264] val _runtime_hdr[2209265]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209267]:chpl_localeID_t[209352] ref _1_this[2209269]:channel(true,dynamic,false)[1061136] val _2_x[2209271]:_ddata(real(64))[1358105] val _3_len[2209273]:int(64)[13] ref _4_err[2209275]:syserr[223672] ref _5_error[2209277]:Error[167984] "error variable"
  type _class_localson_fn[2209149] val _runtime_hdr[2209150]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209152]:chpl_localeID_t[209352] ref _1_this[2209154]:channel(true,dynamic,false)[1061136] ref _2_ret[2209156]:uint(8)[100]
  type _class_localson_fn[2209023] val _runtime_hdr[2209024]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209026]:chpl_localeID_t[209352] ref _1_this[2209028]:channel(true,dynamic,false)[1061136] val _2_element[2209030]:int(64)[13] ref _3_ret[2209032]:int(64)[13]
  type _class_localson_fn[2208936] val _runtime_hdr[2208937]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208939]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208941]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2208791] val _runtime_hdr[2208792]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208794]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208796]:channel(true,dynamic,true)[1022014] ref _2_path[2208798]:string[26] ref _3_offset[2208800]:int(64)[13] ref _4_error[2208802]:Error[167984] "error variable"
  type _class_localson_fn[2208683] val _runtime_hdr[2208684]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208686]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208688]:channel(true,dynamic,true)[1022014] ref _2_err[2208690]:syserr[223672]
  type _class_localson_fn[2208543] val _runtime_hdr[2208544]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208546]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208548]:channel(true,dynamic,true)[1022014] ref _2_args[2208550]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] val _3_rvfDerefTmp[2208552]:locale[28] ref _4_error[2208554]:Error[167984] "error variable"
  type _class_localson_fn[2203635] val _runtime_hdr[2203636]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203638]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203640]:channel(true,dynamic,false)[1061136] ref _2_args[2203642]:(string,codepointIndex,string,int(64))[1176709] val _3_rvfDerefTmp[2203644]:locale[28] ref _4_error[2203646]:Error[167984] "error variable"
  type _class_localson_fn[2203493] val _runtime_hdr[2203494]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203496]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203498]:channel(true,dynamic,false)[1061136] ref _2_args[2203500]:(string,codepointIndex,string)[1158744] val _3_rvfDerefTmp[2203502]:locale[28] ref _4_error[2203504]:Error[167984] "error variable"
  type _class_localson_fn[2203203] val _runtime_hdr[2203204]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203206]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203208]:channel(false,dynamic,false)[1080871] ref _2_path[2203210]:string[26] ref _3_offset[2203212]:int(64)[13] ref _4_error[2203214]:Error[167984] "error variable"
  type _class_localson_fn[2203095] val _runtime_hdr[2203096]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203098]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203100]:channel(false,dynamic,false)[1080871] ref _2_err[2203102]:syserr[223672]
  type _class_localson_fn[2203003] val _runtime_hdr[2203004]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203006]:chpl_localeID_t[209352] ref _1_lhs[2203008]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202918] val _runtime_hdr[2202919]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202921]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202923]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202737] val _runtime_hdr[2202738]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202740]:chpl_localeID_t[209352] val _1_start[2202742]:int(64)[13] val _2_rvfDerefTmp[2202744]:file[235668] ref _3__formal_tmp_error[2202746]:syserr[223672] val _4_end[2202748]:int(64)[13] val _5_hints[2202750]:int(32)[95] val _6_rvfDerefTmp[2202752]:iostyle[231932] ref _7_this[2202754]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202530] val _runtime_hdr[2202531]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202533]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202535]:iostyle[231932] val _2_end[2202537]:int(64)[13] val _3_rvfDerefTmp[2202539]:file[235668] ref _4_err[2202541]:syserr[223672] val _5_hints[2202543]:int(32)[95] val _6_start[2202545]:int(64)[13] ref _7_ret[2202547]:channel(false,dynamic,false)[1080871] ref _8_error[2202549]:Error[167984] "error variable"
  type _class_localson_fn[2202418] val _runtime_hdr[2202419]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202421]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202423]:channel(true,dynamic,false)[1061136] ref _2_ret[2202425]:int(64)[13]
  type _class_localson_fn[2202278] val _runtime_hdr[2202279]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202281]:chpl_localeID_t[209352] ref _1_this[2202283]:channel(true,dynamic,false)[1061136] val _2_x[2202285]:int(64)[13] val _3_rvfDerefTmp[2202287]:locale[28] ref _4_error[2202289]:Error[167984] "error variable"
  type _class_localson_fn[2202136] val _runtime_hdr[2202137]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202139]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202141]:channel(true,dynamic,false)[1061136] ref _2_args[2202143]:1*byteIndex[1057270] val _3_rvfDerefTmp[2202145]:locale[28] ref _4_error[2202147]:Error[167984] "error variable"
  type _class_localson_fn[2201982] val _runtime_hdr[2201983]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201985]:chpl_localeID_t[209352] ref _1_this[2201987]:channel(true,dynamic,false)[1061136] ref _2_path[2201989]:string[26] ref _3_offset[2201991]:int(64)[13] ref _4_error[2201993]:Error[167984] "error variable"
  type _class_localson_fn[2201874] val _runtime_hdr[2201875]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201877]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201879]:channel(true,dynamic,false)[1061136] ref _2_err[2201881]:syserr[223672]
  type _class_localson_fn[2201782] val _runtime_hdr[2201783]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201785]:chpl_localeID_t[209352] ref _1_lhs[2201787]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2201697] val _runtime_hdr[2201698]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201700]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201702]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2201516] val _runtime_hdr[2201517]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201519]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201521]:iostyle[231932] ref _2_this[2201523]:channel(true,dynamic,false)[1061136] val _3_start[2201525]:int(64)[13] val _4_rvfDerefTmp[2201527]:file[235668] ref _5__formal_tmp_error[2201529]:syserr[223672] val _6_end[2201531]:int(64)[13] val _7_hints[2201533]:int(32)[95]
  type _class_localson_fn[2201309] val _runtime_hdr[2201310]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201312]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201314]:iostyle[231932] val _2_rvfDerefTmp[2201316]:file[235668] ref _3_err[2201318]:syserr[223672] val _4_hints[2201320]:int(32)[95] val _5_start[2201322]:int(64)[13] ref _6_ret[2201324]:channel(true,dynamic,false)[1061136] val _7_end[2201326]:int(64)[13] ref _8_error[2201328]:Error[167984] "error variable"
  type _class_localson_fn[2201069] val _runtime_hdr[2201070]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201072]:chpl_localeID_t[209352] ref _1_lhs[2201074]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2200984] val _runtime_hdr[2200985]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200987]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2200989]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2200803] val _runtime_hdr[2200804]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200806]:chpl_localeID_t[209352] ref _1_this[2200808]:channel(true,dynamic,true)[1022014] val _2_hints[2200810]:int(32)[95] val _3_rvfDerefTmp[2200812]:iostyle[231932] val _4_start[2200814]:int(64)[13] val _5_rvfDerefTmp[2200816]:file[235668] ref _6__formal_tmp_error[2200818]:syserr[223672] val _7_end[2200820]:int(64)[13]
  type _class_localson_fn[2200596] val _runtime_hdr[2200597]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200599]:chpl_localeID_t[209352] ref _1_ret[2200601]:channel(true,dynamic,true)[1022014] val _2_hints[2200603]:int(32)[95] val _3_start[2200605]:int(64)[13] ref _4_err[2200607]:syserr[223672] val _5_end[2200609]:int(64)[13] val _6_rvfDerefTmp[2200611]:iostyle[231932] val _7_rvfDerefTmp[2200613]:file[235668] ref _8_error[2200615]:Error[167984] "error variable"
  type _class_localson_fn[2200386] val _runtime_hdr[2200387]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200389]:chpl_localeID_t[209352] ref _1_lhs[2200391]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2200301] val _runtime_hdr[2200302]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200304]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2200306]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2200120] val _runtime_hdr[2200121]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200123]:chpl_localeID_t[209352] val _1_start[2200125]:int(64)[13] val _2_rvfDerefTmp[2200127]:file[235668] ref _3__formal_tmp_error[2200129]:syserr[223672] ref _4_this[2200131]:channel(false,dynamic,true)[985816] val _5_hints[2200133]:int(32)[95] val _6_rvfDerefTmp[2200135]:iostyle[231932] val _7_end[2200137]:int(64)[13]
  type _class_localson_fn[2199913] val _runtime_hdr[2199914]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199916]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199918]:file[235668] ref _2_ret[2199920]:channel(false,dynamic,true)[985816] val _3_hints[2199922]:int(32)[95] ref _4_err[2199924]:syserr[223672] val _5_start[2199926]:int(64)[13] val _6_end[2199928]:int(64)[13] val _7_rvfDerefTmp[2199930]:iostyle[231932] ref _8_error[2199932]:Error[167984] "error variable"
  type _class_localson_fn[2199564] val _runtime_hdr[2199565]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199567]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199569]:file[235668] ref _2_err[2199571]:syserr[223672] ref _3_ret[2199573]:string[26] ref _4_error[2199575]:Error[167984] "error variable"
  type _class_localson_fn[2199456] val _runtime_hdr[2199457]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199459]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199461]:file[235668] ref _2_err[2199463]:syserr[223672]
  type _class_localson_fn[2199330] val _runtime_hdr[2199331]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199333]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199335]:file[235668] ref _2_ret[2199337]:iostyle[231932] ref _3_error[2199339]:Error[167984] "error variable"
  type _class_localson_fn[2199237] val _runtime_hdr[2199238]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199240]:chpl_localeID_t[209352] ref _1_this[2199242]:file[235668]
  function chpl__init_IO[416229]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546952 'move' IOHINT_NONE[231499] 0)
    (2197382 '_private_broadcast' IOHINT_NONE[231499])
    (546954 'move' IOHINT_RANDOM[231504] QIO_HINT_RANDOM[231451])
    (2197384 '_private_broadcast' IOHINT_RANDOM[231504])
    (546956 'move' IOHINT_SEQUENTIAL[231509] QIO_HINT_SEQUENTIAL[231456])
    (2197386 '_private_broadcast' IOHINT_SEQUENTIAL[231509])
    (546958 'move' IOHINT_CACHED[231514] QIO_HINT_CACHED[231471])
    (2197388 '_private_broadcast' IOHINT_CACHED[231514])
    (546960 'move' IOHINT_PARALLEL[231519] QIO_HINT_PARALLEL[231476])
    (2197390 '_private_broadcast' IOHINT_PARALLEL[231519])
    const-val ret_tmp[1908084]:6*string[985240] "temp"
    (246647 call _build_tuple[985166] "a" "b" "c" "d" "e" "f" ret_tmp[1908084])
    (1908087 'move' call_tmp[722053] ret_tmp[1908084])
    val tmp[2197665]:6*string[985406] "temp"
    (2197667 'move' tmp[2197665](985345 call chpl__initCopy[985347] call_tmp[722053]))
    (2197670 '.=' _arg_to_proto_names[246649] value[2197663] tmp[2197665])
    val type_tmp[547680]:channel(false,dynamic,true)[985816] "dead after last mention" "maybe param" "temp" "type variable"
    const-val coerce_tmp[985883]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985889 'move' coerce_tmp[985883](985885 'cast' int(32)[95] 0))
    const-val default_arg_hints[985925]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1884158]:Error[167984] "error variable" "temp"
    (1884160 'move' error[1884158] nil[44])
    (985930 'move' default_arg_hints[985925](985927 call openfd_default_hints[985892] error[1884158]))
    val errorExists[2222064]:bool[10] "temp"
    (2222069 'move' errorExists[2222064](2222066 '!=' error[1884158] nil[44]))
    if errorExists[2222064]
    {
      (1884163 call chpl_propagate_error[170518] error[1884158])
    }
    const-val default_arg_style[985982]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884171]:Error[167984] "error variable" "temp"
    (1884173 'move' error[1884171] nil[44])
    (985987 'move' default_arg_style[985982](985984 call openfd_default_style[985934] error[1884171]))
    val errorExists[2222072]:bool[10] "temp"
    (2222077 'move' errorExists[2222072](2222074 '!=' error[1884171] nil[44]))
    if errorExists[2222072]
    {
      (1884176 call chpl_propagate_error[170518] error[1884171])
    }
    val error[1884184]:Error[167984] "error variable" "temp"
    (1884186 'move' error[1884184] nil[44])
    const-val ret_tmp[1907292]:file[235668] "temp"
    (250304 call openfd[237359] coerce_tmp[985883] default_arg_hints[985925] default_arg_style[985982] error[1884184] ret_tmp[1907292])
    (1907295 'move' call_tmp[724184] ret_tmp[1907292])
    val errorExists[2222080]:bool[10] "temp"
    (2222085 'move' errorExists[2222080](2222082 '!=' error[1884184] nil[44]))
    if errorExists[2222080]
    {
      (1884189 call chpl_propagate_error[170518] error[1884184])
    }
    val error[1884197]:Error[167984] "error variable" "temp"
    (1884199 'move' error[1884197] nil[44])
    (1017093 'move' default_arg_start[1017086](1017088 call reader_default_start[1017050] call_tmp[724184] error[1884197]))
    val errorExists[2222088]:bool[10] "temp"
    (2222093 'move' errorExists[2222088](2222090 '!=' error[1884197] nil[44]))
    if errorExists[2222088]
    {
      (1884202 call chpl_propagate_error[170518] error[1884197])
    }
    val error[1884210]:Error[167984] "error variable" "temp"
    (1884212 'move' error[1884210] nil[44])
    (1017157 'move' default_arg_end[1017150](1017152 call reader_default_end[1017097] call_tmp[724184] error[1884210]))
    val errorExists[2222096]:bool[10] "temp"
    (2222101 'move' errorExists[2222096](2222098 '!=' error[1884210] nil[44]))
    if errorExists[2222096]
    {
      (1884215 call chpl_propagate_error[170518] error[1884210])
    }
    val error[1884223]:Error[167984] "error variable" "temp"
    (1884225 'move' error[1884223] nil[44])
    (1017205 'move' default_arg_hints[1017198](1017200 call reader_default_hints[1017161] call_tmp[724184] error[1884223]))
    val errorExists[2222104]:bool[10] "temp"
    (2222109 'move' errorExists[2222104](2222106 '!=' error[1884223] nil[44]))
    if errorExists[2222104]
    {
      (1884228 call chpl_propagate_error[170518] error[1884223])
    }
    val error[1884236]:Error[167984] "error variable" "temp"
    (1884238 'move' error[1884236] nil[44])
    (1017783 'move' default_arg_style[1017776](1017778 call reader_default_style[1017209] call_tmp[724184] error[1884236]))
    val errorExists[2222112]:bool[10] "temp"
    (2222117 'move' errorExists[2222112](2222114 '!=' error[1884236] nil[44]))
    if errorExists[2222112]
    {
      (1884241 call chpl_propagate_error[170518] error[1884236])
    }
    val error[1884249]:Error[167984] "error variable" "temp"
    (1884251 'move' error[1884249] nil[44])
    const-val ret_tmp[1908420]:channel(false,dynamic,true)[985816] "temp"
    (250309 call reader[1016750] call_tmp[724184] default_arg_start[1017086] default_arg_end[1017150] default_arg_hints[1017198] default_arg_style[1017776] error[1884249] ret_tmp[1908420])
    (1908423 'move' call_tmp[724191] ret_tmp[1908420])
    val errorExists[2222120]:bool[10] "temp"
    (2222125 'move' errorExists[2222120](2222122 '!=' error[1884249] nil[44]))
    if errorExists[2222120]
    {
      (1884254 call chpl_propagate_error[170518] error[1884249])
    }
    (547692 'move' stdin[250296] call_tmp[724191])
    (2197392 '_private_broadcast' stdin[250296])
    val type_tmp[547695]:channel(true,dynamic,true)[1022014] "dead after last mention" "maybe param" "temp" "type variable"
    (724199 'move' call_tmp[724196](250331 call chpl_cstdout[223646]))
    const-val default_arg_hints[1022074]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1884262]:Error[167984] "error variable" "temp"
    (1884264 'move' error[1884262] nil[44])
    (1022079 'move' default_arg_hints[1022074](1022076 call openfp_default_hints[1022041] error[1884262]))
    val errorExists[2222128]:bool[10] "temp"
    (2222133 'move' errorExists[2222128](2222130 '!=' error[1884262] nil[44]))
    if errorExists[2222128]
    {
      (1884267 call chpl_propagate_error[170518] error[1884262])
    }
    const-val default_arg_style[1022103]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884275]:Error[167984] "error variable" "temp"
    (1884277 'move' error[1884275] nil[44])
    (1022108 'move' default_arg_style[1022103](1022105 call openfp_default_style[1022083] error[1884275]))
    val errorExists[2222136]:bool[10] "temp"
    (2222141 'move' errorExists[2222136](2222138 '!=' error[1884275] nil[44]))
    if errorExists[2222136]
    {
      (1884280 call chpl_propagate_error[170518] error[1884275])
    }
    val error[1884288]:Error[167984] "error variable" "temp"
    (1884290 'move' error[1884288] nil[44])
    const-val ret_tmp[1907306]:file[235668] "temp"
    (250333 call openfp[237488] call_tmp[724196] default_arg_hints[1022074] default_arg_style[1022103] error[1884288] ret_tmp[1907306])
    (1907309 'move' call_tmp[724201] ret_tmp[1907306])
    val errorExists[2222144]:bool[10] "temp"
    (2222149 'move' errorExists[2222144](2222146 '!=' error[1884288] nil[44]))
    if errorExists[2222144]
    {
      (1884293 call chpl_propagate_error[170518] error[1884288])
    }
    val error[1884301]:Error[167984] "error variable" "temp"
    (1884303 'move' error[1884301] nil[44])
    (1022668 'move' default_arg_start[1022661](1022663 call writer_default_start[1022625] call_tmp[724201] error[1884301]))
    val errorExists[2222152]:bool[10] "temp"
    (2222157 'move' errorExists[2222152](2222154 '!=' error[1884301] nil[44]))
    if errorExists[2222152]
    {
      (1884306 call chpl_propagate_error[170518] error[1884301])
    }
    val error[1884314]:Error[167984] "error variable" "temp"
    (1884316 'move' error[1884314] nil[44])
    (1022732 'move' default_arg_end[1022725](1022727 call writer_default_end[1022672] call_tmp[724201] error[1884314]))
    val errorExists[2222160]:bool[10] "temp"
    (2222165 'move' errorExists[2222160](2222162 '!=' error[1884314] nil[44]))
    if errorExists[2222160]
    {
      (1884319 call chpl_propagate_error[170518] error[1884314])
    }
    val error[1884327]:Error[167984] "error variable" "temp"
    (1884329 'move' error[1884327] nil[44])
    (1022783 'move' default_arg_hints[1022776](1022778 call writer_default_hints[1022736] call_tmp[724201] error[1884327]))
    val errorExists[2222168]:bool[10] "temp"
    (2222173 'move' errorExists[2222168](2222170 '!=' error[1884327] nil[44]))
    if errorExists[2222168]
    {
      (1884332 call chpl_propagate_error[170518] error[1884327])
    }
    val error[1884340]:Error[167984] "error variable" "temp"
    (1884342 'move' error[1884340] nil[44])
    (1022820 'move' default_arg_style[1022813](1022815 call writer_default_style[1022787] call_tmp[724201] error[1884340]))
    val errorExists[2222176]:bool[10] "temp"
    (2222181 'move' errorExists[2222176](2222178 '!=' error[1884340] nil[44]))
    if errorExists[2222176]
    {
      (1884345 call chpl_propagate_error[170518] error[1884340])
    }
    val error[1884353]:Error[167984] "error variable" "temp"
    (1884355 'move' error[1884353] nil[44])
    const-val ret_tmp[1908480]:channel(true,dynamic,true)[1022014] "temp"
    (250338 call writer[1022325] call_tmp[724201] default_arg_start[1022661] default_arg_end[1022725] default_arg_hints[1022776] default_arg_style[1022813] error[1884353] ret_tmp[1908480])
    (1908483 'move' call_tmp[724208] ret_tmp[1908480])
    val errorExists[2222184]:bool[10] "temp"
    (2222189 'move' errorExists[2222184](2222186 '!=' error[1884353] nil[44]))
    if errorExists[2222184]
    {
      (1884358 call chpl_propagate_error[170518] error[1884353])
    }
    (547707 'move' stdout[250323] call_tmp[724208])
    (2197394 '_private_broadcast' stdout[250323])
    val type_tmp[547710]:channel(true,dynamic,true)[1022014] "dead after last mention" "maybe param" "temp" "type variable"
    (724216 'move' call_tmp[724213](250360 call chpl_cstderr[223654]))
    const-val default_arg_hints[1024046]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    val error[1884366]:Error[167984] "error variable" "temp"
    (1884368 'move' error[1884366] nil[44])
    (1024051 'move' default_arg_hints[1024046](1024048 call openfp_default_hints[1022041] error[1884366]))
    val errorExists[2222192]:bool[10] "temp"
    (2222197 'move' errorExists[2222192](2222194 '!=' error[1884366] nil[44]))
    if errorExists[2222192]
    {
      (1884371 call chpl_propagate_error[170518] error[1884366])
    }
    const-val default_arg_style[1024055]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884379]:Error[167984] "error variable" "temp"
    (1884381 'move' error[1884379] nil[44])
    (1024060 'move' default_arg_style[1024055](1024057 call openfp_default_style[1022083] error[1884379]))
    val errorExists[2222200]:bool[10] "temp"
    (2222205 'move' errorExists[2222200](2222202 '!=' error[1884379] nil[44]))
    if errorExists[2222200]
    {
      (1884384 call chpl_propagate_error[170518] error[1884379])
    }
    val error[1884392]:Error[167984] "error variable" "temp"
    (1884394 'move' error[1884392] nil[44])
    const-val ret_tmp[1907312]:file[235668] "temp"
    (250362 call openfp[237488] call_tmp[724213] default_arg_hints[1024046] default_arg_style[1024055] error[1884392] ret_tmp[1907312])
    (1907315 'move' call_tmp[724218] ret_tmp[1907312])
    val errorExists[2222208]:bool[10] "temp"
    (2222213 'move' errorExists[2222208](2222210 '!=' error[1884392] nil[44]))
    if errorExists[2222208]
    {
      (1884397 call chpl_propagate_error[170518] error[1884392])
    }
    val error[1884405]:Error[167984] "error variable" "temp"
    (1884407 'move' error[1884405] nil[44])
    (1024104 'move' default_arg_start[1024097](1024099 call writer_default_start[1022625] call_tmp[724218] error[1884405]))
    val errorExists[2222216]:bool[10] "temp"
    (2222221 'move' errorExists[2222216](2222218 '!=' error[1884405] nil[44]))
    if errorExists[2222216]
    {
      (1884410 call chpl_propagate_error[170518] error[1884405])
    }
    val error[1884418]:Error[167984] "error variable" "temp"
    (1884420 'move' error[1884418] nil[44])
    (1024115 'move' default_arg_end[1024108](1024110 call writer_default_end[1022672] call_tmp[724218] error[1884418]))
    val errorExists[2222224]:bool[10] "temp"
    (2222229 'move' errorExists[2222224](2222226 '!=' error[1884418] nil[44]))
    if errorExists[2222224]
    {
      (1884423 call chpl_propagate_error[170518] error[1884418])
    }
    val error[1884431]:Error[167984] "error variable" "temp"
    (1884433 'move' error[1884431] nil[44])
    (1024126 'move' default_arg_hints[1024119](1024121 call writer_default_hints[1022736] call_tmp[724218] error[1884431]))
    val errorExists[2222232]:bool[10] "temp"
    (2222237 'move' errorExists[2222232](2222234 '!=' error[1884431] nil[44]))
    if errorExists[2222232]
    {
      (1884436 call chpl_propagate_error[170518] error[1884431])
    }
    val error[1884444]:Error[167984] "error variable" "temp"
    (1884446 'move' error[1884444] nil[44])
    (1024137 'move' default_arg_style[1024130](1024132 call writer_default_style[1022787] call_tmp[724218] error[1884444]))
    val errorExists[2222240]:bool[10] "temp"
    (2222245 'move' errorExists[2222240](2222242 '!=' error[1884444] nil[44]))
    if errorExists[2222240]
    {
      (1884449 call chpl_propagate_error[170518] error[1884444])
    }
    val error[1884457]:Error[167984] "error variable" "temp"
    (1884459 'move' error[1884457] nil[44])
    const-val ret_tmp[1908486]:channel(true,dynamic,true)[1022014] "temp"
    (250367 call writer[1022325] call_tmp[724218] default_arg_start[1024097] default_arg_end[1024108] default_arg_hints[1024119] default_arg_style[1024130] error[1884457] ret_tmp[1908486])
    (1908489 'move' call_tmp[724225] ret_tmp[1908486])
    val errorExists[2222248]:bool[10] "temp"
    (2222253 'move' errorExists[2222248](2222250 '!=' error[1884457] nil[44]))
    if errorExists[2222248]
    {
      (1884462 call chpl_propagate_error[170518] error[1884457])
    }
    (547722 'move' stderr[250352] call_tmp[724225])
    (2197396 '_private_broadcast' stderr[250352])
    (536330 return _void[55])
  }
  def module FormattedIO[251356]  
  type iomode[231003] def r[230992]:iomode[231003] 1 def cw[230995]:iomode[231003] 2 def rw[230998]:iomode[231003] 3 def cwr[231001]:iomode[231003] 4
  type iokind[231019] def dynamic[231008]:iokind[231019] 0 def native[231011]:iokind[231019] 1 def big[231014]:iokind[231019] 2 def little[231017]:iokind[231019] 3
  type iostringstyle[231102] def len1b_data[231066]:iostringstyle[231102] -1 def len2b_data[231071]:iostringstyle[231102] -2 def len4b_data[231076]:iostringstyle[231102] -4 def len8b_data[231081]:iostringstyle[231102] -8 def lenVb_data[231086]:iostringstyle[231102] -10 def data_toeof[231093]:iostringstyle[231102] -65280 def data_null[231100]:iostringstyle[231102] -256
  type iostringformat[231124] def word[231107]:iostringformat[231124] 0 def basic[231110]:iostringformat[231124] 1 def chpl[231113]:iostringformat[231124] 2 def json[231116]:iostringformat[231124] 3 def toend[231119]:iostringformat[231124] 4 def toeof[231122]:iostringformat[231124] 5
  const QIO_FDFLAG_UNK[231386]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231391]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231396]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231401]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231406]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231411]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231416]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231421]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231426]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231431]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231436]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231441]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231446]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231451]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231456]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231461]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231466]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231471]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231476]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231481]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231486]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231491]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231499]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231504]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231509]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231514]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231519]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  function =[859961](ref arg _arg1[859963]:_ref(qio_file_ptr_t)[937062], const in arg _arg2[859964]:qio_file_ptr_t[231527]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (859967 '=' _arg1[859963] _arg2[859964])
    (859972 return _void[55])
  }
  type qio_file_ptr_t[231527]
  const-val QIO_FILE_PTR_NULL[231530]:qio_file_ptr_t[231527] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function =[861669](ref arg _arg1[861671]:_ref(qio_channel_ptr_t)[937073], const in arg _arg2[861672]:qio_channel_ptr_t[231553]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (861675 '=' _arg1[861671] _arg2[861672])
    (861680 return _void[55])
  }
  type qio_channel_ptr_t[231553]
  const-val QIO_CHANNEL_PTR_NULL[231556]:qio_channel_ptr_t[231553] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231564]
  const-val QBUFFER_PTR_NULL[231567]:qbuffer_ptr_t[231564] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231582]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231590]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231598]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231606]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231614]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231622]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function =[879278](ref arg _arg1[879280]:_ref(iostyle)[967739], const  ref arg _arg2[879281]:iostyle[231932]) : void[4] "assignop" "compiler generated" "inline" "last resort" "resolved"
  {
    (879291 '=' _arg1[879280] _arg2[879281])
    (879296 return _void[55])
  }
  type iostyle[231932] val binary[231632]:uint(8)[100] val byteorder[231650]:uint(8)[100] val str_style[231670]:int(64)[13] val min_width_columns[231679]:uint(32)[110] val max_width_columns[231694]:uint(32)[110] val max_width_characters[231709]:uint(32)[110] val max_width_bytes[231724]:uint(32)[110] val string_start[231730]:uint(8)[100] val string_end[231736]:uint(8)[100] val string_format[231756]:uint(8)[100] val bytes_prefix[231762]:uint(8)[100] val base[231771]:uint(8)[100] val point_char[231777]:uint(8)[100] val exponent_char[231785]:uint(8)[100] val other_exponent_char[231791]:uint(8)[100] val positive_char[231797]:uint(8)[100] val negative_char[231803]:uint(8)[100] val i_char[231811]:uint(8)[100] val prefix_base[231820]:uint(8)[100] val pad_char[231826]:uint(8)[100] val showplus[231835]:uint(8)[100] val uppercase[231844]:uint(8)[100] val leftjustify[231853]:uint(8)[100] val showpoint[231862]:uint(8)[100] val showpointzero[231871]:uint(8)[100] val precision[231882]:int(32)[95] val realfmt[231891]:uint(8)[100] val complex_style[231900]:uint(8)[100] val array_style[231909]:uint(8)[100] val aggregate_style[231918]:uint(8)[100] val tuple_style[231927]:uint(8)[100]
  function QioPluginFile[232098].setupChannel[231944](const in arg this[232100]:QioPluginFile[232098], ref arg pluginChannel[231941]:_ref(QioPluginChannel)[1596573], const in arg start[231950]:int(64)[13], const in arg end[231957]:int(64)[13], const in arg qioChannelPtr[231961]:qio_channel_ptr_t[231553]) : syserr[223672] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1596612]:QioPluginChannel[232181] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1596637 'move' _formal_tmp_pluginChannel[1596612](1596635 'cast' QioPluginChannel[232181] nil[44]))
    val ret[533795]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1596628 call =[224221] ret[533795] ENOSYS[224772])
    label _endsetupChannel[1596622]
    (1919779 '=' pluginChannel[231941] _formal_tmp_pluginChannel[1596612])
    (533797 return ret[533795])
  }
  function QioPluginFile[232098].filelength[231981](const in arg this[232104]:QioPluginFile[232098], ref arg length[231978]:_ref(int(64))[936761]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1598249]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598272 'move' _formal_tmp_length[1598249] 0)
    val ret[533805]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598265 call =[224221] ret[533805] ENOSYS[224772])
    label _endfilelength[1598259]
    (1919782 '=' length[231978] _formal_tmp_length[1598249])
    (533807 return ret[533805])
  }
  function QioPluginFile[232098].getpath[231997](const in arg this[232108]:QioPluginFile[232098], ref arg path[231994]:_ref(c_string)[937416], ref arg len[232003]:_ref(int(64))[936761]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1598307]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598342 'move' _formal_tmp_path[1598307](1598340 'cast' c_string[19] nil[44]))
    const-val _formal_tmp_len[1598308]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598345 'move' _formal_tmp_len[1598308] 0)
    val ret[533815]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598333 call =[224221] ret[533815] ENOSYS[224772])
    label _endgetpath[1598318]
    (1919785 '=' path[231994] _formal_tmp_path[1598307])
    (1919788 '=' len[232003] _formal_tmp_len[1598308])
    (533817 return ret[533815])
  }
  function QioPluginFile[232098].fsync[232016](const in arg this[232112]:QioPluginFile[232098]) : syserr[223672] "method" "primary method" "resolved"
  {
    val ret[533825]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598368 call =[224221] ret[533825] ENOSYS[224772])
    (533827 return ret[533825])
  }
  function QioPluginFile[232098].getChunk[232035](const in arg this[232116]:QioPluginFile[232098], ref arg length[232032]:_ref(int(64))[936761]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_length[1598399]:int(64)[13] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598422 'move' _formal_tmp_length[1598399] 0)
    val ret[533835]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598415 call =[224221] ret[533835] ENOSYS[224772])
    label _endgetChunk[1598409]
    (1919791 '=' length[232032] _formal_tmp_length[1598399])
    (533837 return ret[533835])
  }
  function QioPluginFile[232098].getLocalesForRegion[232054](const in arg this[232120]:QioPluginFile[232098], const in arg start[232051]:int(64)[13], const in arg end[232060]:int(64)[13], ref arg localeNames[232067]:_ref(c_ptr(c_string))[1598443], ref arg nLocales[232074]:_ref(int(64))[936761]) : syserr[223672] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1598486]:c_ptr(c_string)[1598434] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598511 'move' _formal_tmp_localeNames[1598486](1598509 'cast' c_ptr(c_string)[1598434] nil[44]))
    val ret[533845]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598502 call =[224221] ret[533845] ENOSYS[224772])
    label _endgetLocalesForRegion[1598496]
    (1919794 '=' localeNames[232067] _formal_tmp_localeNames[1598486])
    (533847 return ret[533845])
  }
  function QioPluginFile[232098].close[232087](const in arg this[232124]:QioPluginFile[232098]) : syserr[223672] "method" "primary method" "resolved"
  {
    val ret[533855]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1598588 call =[224221] ret[533855] ENOSYS[224772])
    (533857 return ret[533855])
  }
  function QioPluginFile[232098].deinit[880150](const in arg this[880154]:QioPluginFile[232098]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890575]
    val _parent_destructor_tmp_[1890570]:object[22] "temp"
    (1890577 'move' _parent_destructor_tmp_[1890570](1890571 'cast' object[22] this[880154]))
    (1890579 call deinit[749568] _parent_destructor_tmp_[1890570])
    (880162 return _void[55])
  }
  type QioPluginFile[232098] val super[355835]:object[22] "super class"
  function QioPluginChannel[232181].readAtLeast[232139](const in arg this[232183]:QioPluginChannel[232181], const in arg amt[232136]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    val ret[533865]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1597111 call =[224221] ret[533865] ENOSYS[224772])
    (533867 return ret[533865])
  }
  function QioPluginChannel[232181].write[232158](const in arg this[232187]:QioPluginChannel[232181], const in arg amt[232155]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    val ret[533875]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1597134 call =[224221] ret[533875] ENOSYS[224772])
    (533877 return ret[533875])
  }
  function QioPluginChannel[232181].close[232170](const in arg this[232191]:QioPluginChannel[232181]) : syserr[223672] "method" "primary method" "resolved"
  {
    val ret[533885]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    (1597156 call =[224221] ret[533885] ENOSYS[224772])
    (533887 return ret[533885])
  }
  function QioPluginChannel[232181].deinit[880286](const in arg this[880290]:QioPluginChannel[232181]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890587]
    val _parent_destructor_tmp_[1890582]:object[22] "temp"
    (1890589 'move' _parent_destructor_tmp_[1890582](1890583 'cast' object[22] this[880290]))
    (1890591 call deinit[749568] _parent_destructor_tmp_[1890582])
    (880298 return _void[55])
  }
  type QioPluginChannel[232181] val super[355837]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232202](const in arg file[232199]:c_void_ptr[149], ref arg plugin_ch[232205]:_ref(c_void_ptr)[938311], const in arg start[232212]:int(64)[13], const in arg end[232219]:int(64)[13], const in arg qio_ch[232223]:qio_channel_ptr_t[231553]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533895]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715293]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715296 'move' call_tmp[715293](232231 call _cast[1596206] file[232199]))
    val call_tmp[715298]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715301 'move' call_tmp[715298](232233 call postfix![1596235] call_tmp[715293]))
    val f[232235]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (546995 'move' f[232235](1596547 call chpl__initCopy[1596528] call_tmp[715298]))
    val pluginChannel[232244]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1596589]:QioPluginChannel[232181] "dead at end of block" "temp"
    (1596592 'move' init_coerce_tmp[1596589](1596757 'cast' QioPluginChannel[232181] nil[44]))
    (546997 'move' pluginChannel[232244] init_coerce_tmp[1596589])
    const-val call_tmp[715305]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1596597]:QioPluginFile[232098] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1596602 'move' coerce_tmp[1596597] f[232235])
    val _formal_tmp_out_pluginChannel[1596604]:QioPluginChannel[232181] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715308 'move' call_tmp[715305](232259 call setupChannel[231944] coerce_tmp[1596597] _formal_tmp_out_pluginChannel[1596604] start[232212] end[232219] qio_ch[232223]))
    (1596606 call =[1596677] pluginChannel[232244] _formal_tmp_out_pluginChannel[1596604])
    const-val ret[232260]:syserr[223672] "dead at end of block" "insert auto destroy"
    (546999 'move' ret[232260](1596713 call chpl__initCopy[964674] call_tmp[715305]))
    const-val call_tmp[715310]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715313 'move' call_tmp[715310](232267 call _cast[1596727] pluginChannel[232244]))
    (232269 call =[15835] plugin_ch[232205] call_tmp[715310])
    (1596762 'move' ret[533895] ret[232260])
    gotoReturn _end_chpl_qio_setup_plugin_channel[533893] _end_chpl_qio_setup_plugin_channel[533893]
    label _end_chpl_qio_setup_plugin_channel[533893]
    (533897 return ret[533895])
  }
  function chpl_qio_read_atleast[232284](const in arg ch_plugin[232281]:c_void_ptr[149], const in arg amt[232290]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533907]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715315]:QioPluginChannel[232181] "dead at end of block" "expr temp" "maybe param" "temp"
    (715318 'move' call_tmp[715315](232297 call _cast[1596765] ch_plugin[232281]))
    val call_tmp[715320]:QioPluginChannel[232181] "dead at end of block" "maybe param" "temp"
    (715323 'move' call_tmp[715320](232299 call postfix![1596794] call_tmp[715315]))
    val c[232301]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    (547001 'move' c[232301](1597096 call chpl__initCopy[1597077] call_tmp[715320]))
    const-val call_tmp[715327]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1597100]:QioPluginChannel[232181] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1597105 'move' coerce_tmp[1597100] c[232301])
    (715330 'move' call_tmp[715327](232314 call readAtLeast[232139] coerce_tmp[1597100] amt[232290]))
    (533912 'move' ret[533907] call_tmp[715327])
    gotoReturn _end_chpl_qio_read_atleast[533905] _end_chpl_qio_read_atleast[533905]
    label _end_chpl_qio_read_atleast[533905]
    (533909 return ret[533907])
  }
  function chpl_qio_write[232325](const in arg ch_plugin[232322]:c_void_ptr[149], const in arg amt[232331]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533918]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715332]:QioPluginChannel[232181] "dead at end of block" "expr temp" "maybe param" "temp"
    (715335 'move' call_tmp[715332](232338 call _cast[1596765] ch_plugin[232322]))
    val call_tmp[715337]:QioPluginChannel[232181] "dead at end of block" "maybe param" "temp"
    (715340 'move' call_tmp[715337](232340 call postfix![1596794] call_tmp[715332]))
    val c[232342]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    (547003 'move' c[232342](1597120 call chpl__initCopy[1597077] call_tmp[715337]))
    const-val call_tmp[715344]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1597123]:QioPluginChannel[232181] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1597128 'move' coerce_tmp[1597123] c[232342])
    (715347 'move' call_tmp[715344](232353 call write[232158] coerce_tmp[1597123] amt[232331]))
    (533923 'move' ret[533918] call_tmp[715344])
    gotoReturn _end_chpl_qio_write[533916] _end_chpl_qio_write[533916]
    label _end_chpl_qio_write[533916]
    (533920 return ret[533918])
  }
  function chpl_qio_channel_close[232364](const in arg ch[232361]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533929]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715349]:QioPluginChannel[232181] "dead at end of block" "expr temp" "maybe param" "temp"
    (715352 'move' call_tmp[715349](232371 call _cast[1596765] ch[232361]))
    val call_tmp[715354]:QioPluginChannel[232181] "dead at end of block" "maybe param" "temp"
    (715357 'move' call_tmp[715354](232373 call postfix![1596794] call_tmp[715349]))
    val c[232375]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    (547005 'move' c[232375](1597142 call chpl__initCopy[1597077] call_tmp[715354]))
    const-val call_tmp[715361]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1597145]:QioPluginChannel[232181] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1597150 'move' coerce_tmp[1597145] c[232375])
    (715364 'move' call_tmp[715361](232387 call close[232170] coerce_tmp[1597145]))
    const-val err[232388]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547007 'move' err[232388](1597162 call chpl__initCopy[964674] call_tmp[715361]))
    (232394 call chpl__delete[1597165] c[232375])
    (1598225 'move' ret[533929] err[232388])
    gotoReturn _end_chpl_qio_channel_close[533927] _end_chpl_qio_channel_close[533927]
    label _end_chpl_qio_channel_close[533927]
    (533931 return ret[533929])
  }
  function chpl_qio_filelength[232409](const in arg file[232406]:c_void_ptr[149], ref arg length[232415]:_ref(int(64))[936761]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533941]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715366]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715369 'move' call_tmp[715366](232423 call _cast[1596206] file[232406]))
    val call_tmp[715371]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715374 'move' call_tmp[715371](232425 call postfix![1596235] call_tmp[715366]))
    val f[232427]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547009 'move' f[232427](1598230 call chpl__initCopy[1596528] call_tmp[715371]))
    const-val call_tmp[715378]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1598234]:QioPluginFile[232098] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1598239 'move' coerce_tmp[1598234] f[232427])
    val _formal_tmp_out_length[1598241]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715381 'move' call_tmp[715378](232440 call filelength[231981] coerce_tmp[1598234] _formal_tmp_out_length[1598241]))
    (1598243 call =[435443] length[232415] _formal_tmp_out_length[1598241])
    (1598276 'move' ret[533941] call_tmp[715378])
    gotoReturn _end_chpl_qio_filelength[533939] _end_chpl_qio_filelength[533939]
    label _end_chpl_qio_filelength[533939]
    (533943 return ret[533941])
  }
  function chpl_qio_getpath[232452](const in arg file[232449]:c_void_ptr[149], ref arg str[232455]:_ref(c_string)[937416], ref arg len[232462]:_ref(int(64))[936761]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533953]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715383]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715386 'move' call_tmp[715383](232470 call _cast[1596206] file[232449]))
    val call_tmp[715388]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715391 'move' call_tmp[715388](232472 call postfix![1596235] call_tmp[715383]))
    val f[232474]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547011 'move' f[232474](1598281 call chpl__initCopy[1596528] call_tmp[715388]))
    const-val call_tmp[715395]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1598285]:QioPluginFile[232098] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1598290 'move' coerce_tmp[1598285] f[232474])
    val _formal_tmp_out_path[1598292]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1598299]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715398 'move' call_tmp[715395](232488 call getpath[231997] coerce_tmp[1598285] _formal_tmp_out_path[1598292] _formal_tmp_out_len[1598299]))
    (1598294 call =[21896] str[232455] _formal_tmp_out_path[1598292])
    (1598301 call =[435443] len[232462] _formal_tmp_out_len[1598299])
    (1598350 'move' ret[533953] call_tmp[715395])
    gotoReturn _end_chpl_qio_getpath[533951] _end_chpl_qio_getpath[533951]
    label _end_chpl_qio_getpath[533951]
    (533955 return ret[533953])
  }
  function chpl_qio_fsync[232500](const in arg file[232497]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533965]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715400]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715403 'move' call_tmp[715400](232507 call _cast[1596206] file[232497]))
    val call_tmp[715405]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715408 'move' call_tmp[715405](232509 call postfix![1596235] call_tmp[715400]))
    val f[232511]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547013 'move' f[232511](1598354 call chpl__initCopy[1596528] call_tmp[715405]))
    const-val call_tmp[715412]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1598357]:QioPluginFile[232098] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1598362 'move' coerce_tmp[1598357] f[232511])
    (715415 'move' call_tmp[715412](232523 call fsync[232016] coerce_tmp[1598357]))
    (1598375 'move' ret[533965] call_tmp[715412])
    gotoReturn _end_chpl_qio_fsync[533963] _end_chpl_qio_fsync[533963]
    label _end_chpl_qio_fsync[533963]
    (533967 return ret[533965])
  }
  function chpl_qio_get_chunk[232535](const in arg file[232532]:c_void_ptr[149], ref arg length[232541]:_ref(int(64))[936761]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533977]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715417]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715420 'move' call_tmp[715417](232549 call _cast[1596206] file[232532]))
    val call_tmp[715422]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715425 'move' call_tmp[715422](232551 call postfix![1596235] call_tmp[715417]))
    val f[232553]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547015 'move' f[232553](1598380 call chpl__initCopy[1596528] call_tmp[715422]))
    const-val call_tmp[715429]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1598384]:QioPluginFile[232098] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1598389 'move' coerce_tmp[1598384] f[232553])
    val _formal_tmp_out_length[1598391]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715432 'move' call_tmp[715429](232566 call getChunk[232035] coerce_tmp[1598384] _formal_tmp_out_length[1598391]))
    (1598393 call =[435443] length[232541] _formal_tmp_out_length[1598391])
    (1598426 'move' ret[533977] call_tmp[715429])
    gotoReturn _end_chpl_qio_get_chunk[533975] _end_chpl_qio_get_chunk[533975]
    label _end_chpl_qio_get_chunk[533975]
    (533979 return ret[533977])
  }
  function chpl_qio_get_locales_for_region[232578](const in arg file[232575]:c_void_ptr[149], const in arg start[232584]:int(64)[13], const in arg end[232591]:int(64)[13], ref arg localeNames[232595]:_ref(c_void_ptr)[938311], const  ref arg nLocales[232602]:_ref(int(64))[936761]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[533989]:syserr[223672] "dead after last mention" "RVV" "temp"
    val strPtr[232610]:c_ptr(c_string)[1598434] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[715434]:c_ptr(c_string)[1598434] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[715439]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715442 'move' call_tmp[715439](232619 call _cast[1596206] file[232575]))
    val call_tmp[715444]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715447 'move' call_tmp[715444](232621 call postfix![1596235] call_tmp[715439]))
    val f[232623]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547019 'move' f[232623](1598457 call chpl__initCopy[1596528] call_tmp[715444]))
    const-val call_tmp[715451]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1598471]:QioPluginFile[232098] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1598476 'move' coerce_tmp[1598471] f[232623])
    val _formal_tmp_out_localeNames[1598478]:c_ptr(c_string)[1598434] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715454 'move' call_tmp[715451](232638 call getLocalesForRegion[232054] coerce_tmp[1598471] start[232584] end[232591] _formal_tmp_out_localeNames[1598478] nLocales[232602]))
    (1919797 '=' strPtr[232610] _formal_tmp_out_localeNames[1598478])
    (1598545 'noop')
    const-val ret[232639]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547021 'move' ret[232639](1598540 call chpl__initCopy[964674] call_tmp[715451]))
    const-val call_tmp[715456]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715459 'move' call_tmp[715456](232646 'cast' c_void_ptr[149] strPtr[232610]))
    (232648 call =[15835] localeNames[232595] call_tmp[715456])
    (1598570 'move' ret[533989] ret[232639])
    gotoReturn _end_chpl_qio_get_locales_for_region[533987] _end_chpl_qio_get_locales_for_region[533987]
    label _end_chpl_qio_get_locales_for_region[533987]
    (533991 return ret[533989])
  }
  function chpl_qio_file_close[232663](const in arg file[232660]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val ret[534001]:syserr[223672] "dead after last mention" "RVV" "temp"
    val call_tmp[715461]:QioPluginFile[232098] "dead at end of block" "expr temp" "maybe param" "temp"
    (715464 'move' call_tmp[715461](232670 call _cast[1596206] file[232660]))
    val call_tmp[715466]:QioPluginFile[232098] "dead at end of block" "maybe param" "temp"
    (715469 'move' call_tmp[715466](232672 call postfix![1596235] call_tmp[715461]))
    val f[232674]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547023 'move' f[232674](1598574 call chpl__initCopy[1596528] call_tmp[715466]))
    const-val call_tmp[715473]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1598577]:QioPluginFile[232098] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1598582 'move' coerce_tmp[1598577] f[232674])
    (715476 'move' call_tmp[715473](232684 call close[232087] coerce_tmp[1598577]))
    const-val err[232685]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547025 'move' err[232685](1598594 call chpl__initCopy[964674] call_tmp[715473]))
    (232691 call chpl__delete[1598597] f[232674])
    (1599657 'move' ret[534001] err[232685])
    gotoReturn _end_chpl_qio_file_close[533999] _end_chpl_qio_file_close[533999]
    label _end_chpl_qio_file_close[533999]
    (534003 return ret[534001])
  }
  function qio_style_init_default[232706](ref arg s[232703]:_ref(iostyle)[967739]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534011 return _void[55])
  }
  function qio_file_release[232726](const in arg f[232723]:qio_file_ptr_t[231527]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534015 return _void[55])
  }
  function qio_file_init[232736](ref arg file_out[232733]:_ref(qio_file_ptr_t)[937062], const in arg fp[232739]:_file[155], const in arg fd[232743]:int(32)[95], const in arg iohints[232747]:int(32)[95], const  ref arg style[232751]:_ref(iostyle)[967739], const in arg usefilestar[232755]:int(32)[95]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534019]:syserr[223672] "RVV" "temp"
    (534021 return ret[534019])
  }
  function qio_file_open_mem[232816](ref arg file_out[232813]:_ref(qio_file_ptr_t)[937062], const in arg buf[232819]:qbuffer_ptr_t[231564], const  ref arg style[232823]:_ref(iostyle)[967739]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534037]:syserr[223672] "RVV" "temp"
    (534039 return ret[534037])
  }
  function qio_file_close[232836](const in arg f[232833]:qio_file_ptr_t[231527]) : syserr[223672] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[534043]:syserr[223672] "RVV" "temp"
    (534045 return ret[534043])
  }
  function qio_file_isopen[232870](const in arg f[232867]:qio_file_ptr_t[231527]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534057]:bool[10] "RVV" "temp"
    (534059 return ret[534057])
  }
  function qio_file_get_style[232909](const in arg f[232906]:qio_file_ptr_t[231527], ref arg style[232912]:_ref(iostyle)[967739]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534073 return _void[55])
  }
  function qio_channel_create[232966](ref arg ch[232963]:_ref(qio_channel_ptr_t)[937073], const in arg file[232969]:qio_file_ptr_t[231527], const in arg hints[232973]:int(32)[95], const in arg readable[232977]:int(32)[95], const in arg writeable[232981]:int(32)[95], const in arg start[232988]:int(64)[13], const in arg end[232995]:int(64)[13], const  ref arg style[232999]:_ref(iostyle)[967739]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534095]:syserr[223672] "RVV" "temp"
    (534097 return ret[534095])
  }
  function qio_channel_path_offset[233012](const in arg threadsafe[233009]:int(32)[95], const in arg ch[233015]:qio_channel_ptr_t[231553], ref arg path[233019]:_ref(c_string)[937416], ref arg offset[233026]:_ref(int(64))[936761]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534101]:syserr[223672] "RVV" "temp"
    (534103 return ret[534101])
  }
  function qio_channel_retain[233039](const in arg ch[233036]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534105 return _void[55])
  }
  function qio_channel_release[233049](const in arg ch[233046]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534107 return _void[55])
  }
  function qio_channel_lock[233095](const in arg ch[233092]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534121]:syserr[223672] "RVV" "temp"
    (534123 return ret[534121])
  }
  function qio_channel_unlock[233107](const in arg ch[233104]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534125 return _void[55])
  }
  function qio_channel_binary[233145](const in arg ch[233142]:qio_channel_ptr_t[231553]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534133]:uint(8)[100] "RVV" "temp"
    (534135 return ret[534133])
  }
  function qio_channel_byteorder[233160](const in arg ch[233157]:qio_channel_ptr_t[231553]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534139]:uint(8)[100] "RVV" "temp"
    (534141 return ret[534139])
  }
  function qio_channel_str_style[233175](const in arg ch[233172]:qio_channel_ptr_t[231553]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534145]:int(64)[13] "RVV" "temp"
    (534147 return ret[534145])
  }
  function qio_channel_style_element[233190](const in arg ch[233187]:qio_channel_ptr_t[231553], const in arg element[233196]:int(64)[13]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534151]:int(64)[13] "RVV" "temp"
    (534153 return ret[534151])
  }
  function qio_channel_close[233228](const in arg threadsafe[233225]:int(32)[95], const in arg ch[233231]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534163]:syserr[223672] "RVV" "temp"
    (534165 return ret[534163])
  }
  function qio_channel_read_amt[1083472](const in arg threadsafe[1083476]:int(32)[95], const in arg ch[1083478]:qio_channel_ptr_t[231553], const in arg ptr[1083480]:c_ptr(uint(8))[937612], const in arg len[1083484]:int(64)[13]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083488]:syserr[223672] "RVV" "temp"
    (1083496 return ret[1083488])
  }
  function qio_channel_write_amt[1565157](const in arg threadsafe[1565161]:int(32)[95], const in arg ch[1565163]:qio_channel_ptr_t[231553], const in arg ptr[1565165]:_ddata(real(64))[1358105], const in arg len[1565169]:int(64)[13]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "no doc" "private" "resolved" "no return value for void"
  {
    val ret[1565173]:syserr[223672] "RVV" "temp"
    (1565181 return ret[1565173])
  }
  function qio_channel_offset_unlocked[233470](const in arg ch[233467]:qio_channel_ptr_t[231553]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534229]:int(64)[13] "RVV" "temp"
    (534231 return ret[534229])
  }
  function qio_file_path_for_fd[233735](const in arg fd[233732]:int(32)[95], ref arg path[233738]:_ref(c_string)[937416]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534299]:syserr[223672] "RVV" "temp"
    (534301 return ret[534299])
  }
  function qio_file_path_for_fp[233751](const in arg fp[233748]:_file[155], ref arg path[233754]:_ref(c_string)[937416]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534305]:syserr[223672] "RVV" "temp"
    (534307 return ret[534305])
  }
  function qio_file_path[233767](const in arg f[233764]:qio_file_ptr_t[231527], ref arg path[233770]:_ref(c_string)[937416]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534311]:syserr[223672] "RVV" "temp"
    (534313 return ret[534311])
  }
  function qio_shortest_path[233783](const in arg fl[233780]:qio_file_ptr_t[231527], ref arg path_out[233786]:_ref(c_string)[937416], const in arg path_in[233790]:c_string[19]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534317]:syserr[223672] "RVV" "temp"
    (534319 return ret[534317])
  }
  function qio_channel_write_int64[234138](const in arg threadsafe[234135]:int(32)[95], const in arg byteorder[234141]:int(32)[95], const in arg ch[234145]:qio_channel_ptr_t[231553], const in arg x[234152]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534401]:syserr[223672] "RVV" "temp"
    (534403 return ret[534401])
  }
  function qio_channel_write_float64[234354](const in arg threadsafe[234351]:int(32)[95], const in arg byteorder[234357]:int(32)[95], const in arg ch[234361]:qio_channel_ptr_t[231553], const in arg x[234368]:real(64)[16]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534449]:syserr[223672] "RVV" "temp"
    (534451 return ret[534449])
  }
  function qio_channel_write_string[234477](const in arg threadsafe[234474]:int(32)[95], const in arg byteorder[234480]:int(32)[95], const in arg str_style[234487]:int(64)[13], const in arg ch[234491]:qio_channel_ptr_t[231553], const in arg s[234495]:c_string[19], const in arg len[234499]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534473]:syserr[223672] "RVV" "temp"
    (534475 return ret[534473])
  }
  function qio_channel_print_int[1079714](const in arg threadsafe[1079718]:int(32)[95], const in arg ch[1079720]:qio_channel_ptr_t[231553], const  ref arg ptr[1079722]:_ref(int(64))[936761], const in arg len[1079726]:uint(64)[115], const in arg issigned[1079730]:int(32)[95]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079734]:syserr[223672] "RVV" "temp"
    (1079742 return ret[1079734])
  }
  function qio_channel_print_float[1585383](const in arg threadsafe[1585387]:int(32)[95], const in arg ch[1585389]:qio_channel_ptr_t[231553], const  ref arg ptr[1585391]:_ref(real(64))[936906], const in arg len[1585395]:uint(64)[115]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1585399]:syserr[223672] "RVV" "temp"
    (1585407 return ret[1585399])
  }
  function qio_channel_write_newline[234823](const in arg threadsafe[234820]:int(32)[95], const in arg ch[234826]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534563]:syserr[223672] "RVV" "temp"
    (534565 return ret[534563])
  }
  function qio_channel_print_string[234925](const in arg threadsafe[234922]:int(32)[95], const in arg ch[234928]:qio_channel_ptr_t[231553], const in arg ptr[234932]:c_string[19], const in arg len[234936]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534587]:syserr[223672] "RVV" "temp"
    (534589 return ret[534587])
  }
  function qio_channel_print_literal[235005](const in arg threadsafe[235002]:int(32)[95], const in arg ch[235008]:qio_channel_ptr_t[231553], const in arg match[235012]:c_string[19], const in arg len[235016]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534605]:syserr[223672] "RVV" "temp"
    (534607 return ret[534605])
  }
  const QIO_CONV_UNK[235148]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235153]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235158]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235163]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235168]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235173]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235178]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235183]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235188]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235193]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235198]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235203]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235208]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235213]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235218]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235223]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235228]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235233]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235238]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235243]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235248]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235253]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235258]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235263]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235268]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235273]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235278]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235283]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235288]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235293]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235298]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235383]() : iostyle[231932] "resolved"
  {
    val ret[534659]:iostyle[231932] "dead after last mention" "RVV" "temp"
    val ret[235387]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (235395 call qio_style_init_default[232706] ret[235387])
    (985976 'move' ret[534659] ret[235387])
    gotoReturn _end_defaultIOStyle[534657] _end_defaultIOStyle[534657]
    label _end_defaultIOStyle[534657]
    (534661 return ret[534659])
  }
  val iohints[235644]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function _ref(file)[948923].init[235662](ref arg this[235670]:_ref(file)[948923]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[715578]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1906286]:locale[28] "temp"
    (465369 call here[90438] ret_tmp[1906286])
    (1906289 'move' call_tmp[715578] ret_tmp[1906286])
    val tmp[465370]:locale[28] "dead after last mention" "temp"
    (465373 'move' tmp[465370] call_tmp[715578])
    (465375 '.=' this[235670] home[235650] tmp[465370])
    val tmp[465380]:qio_file_ptr_t[231527] "dead after last mention" "temp"
    (465383 'move' tmp[465380](1016723 call chpl__initCopy[1016725] QIO_FILE_PTR_NULL[231530]))
    (465385 '.=' this[235670] _file_internal[235656] tmp[465380])
    (534717 return _void[55])
  }
  function _ref(file)[948923].home[887138](ref arg this[887142]:_ref(file)[948923]) ref : _ref(locale)[949033] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[887152]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[887159]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (887162 'move' call_tmp[887159](887146 '.' this[887142] home[235650]))
    (887157 'move' ret[887152] call_tmp[887159])
    (887154 return ret[887152])
  }
  function _ref(file)[948923]._file_internal[887164](ref arg this[887168]:_ref(file)[948923]) ref : _ref(qio_file_ptr_t)[937062] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[887178]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "RVV" "temp"
    ref call_tmp[887185]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
    (887188 'move' call_tmp[887185](887172 '.' this[887168] _file_internal[235656]))
    (887183 'move' ret[887178] call_tmp[887185])
    (887180 return ret[887178])
  }
  type file[235668] val home[235650]:locale[28] "no doc" val _file_internal[235656]:qio_file_ptr_t[231527] "no doc"
  function _ref(file)[948923].checkAssumingLocal[235856](const  ref arg this[235858]:_ref(file)[948923], ref arg error_out[1883715]:Error[167984]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[715686]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
    (715689 'move' call_tmp[715686](396496 call _file_internal[887164] this[235858]))
    const-val call_tmp[715691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017287]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017291 'move' coerce_tmp[1017287](1017289 'deref' call_tmp[715686]))
    (715694 'move' call_tmp[715691](235866 call is_c_nil[1017245] coerce_tmp[1017287]))
    const-val call_tmp[715696]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715699 'move' call_tmp[715696] call_tmp[715691])
    if call_tmp[715696]
    {
      const-val call_tmp[715703]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017347]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017353 'move' coerce_tmp[1017347](1017349 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908432]:owned SystemError[1000427] "temp"
      (235890 call fromSyserr[1017302] coerce_tmp[1017347] "Operation attempted on an invalid file" ret_tmp[1908432])
      (1908435 'move' call_tmp[715703] ret_tmp[1908432])
      val call_tmp[715708]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017362]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908360]:owned Error[966647] "temp"
      (1017364 call _cast[1015936] call_tmp[715703] ret_tmp[1908360])
      (1908363 'move' coerce_tmp[1017362] ret_tmp[1908360])
      const-val _formal_tmp_in_err[1017541]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017545 'move' _formal_tmp_in_err[1017541] coerce_tmp[1017362])
      (715711 'move' call_tmp[715708](468231 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017541]))
      {
        val castedError[1883720]:Error[167984] "temp"
        (1883726 'move' castedError[1883720] call_tmp[715708])
        (1883728 '=' error_out[1883715] castedError[1883720])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1883717] _endcheckAssumingLocal[1883717]
      }
    }
    ref call_tmp[715715]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
    (715718 'move' call_tmp[715715](396502 call _file_internal[887164] this[235858]))
    const-val call_tmp[715720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017551]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017555 'move' coerce_tmp[1017551](1017553 'deref' call_tmp[715715]))
    (715723 'move' call_tmp[715720](235902 call qio_file_isopen[232870] coerce_tmp[1017551]))
    const-val call_tmp[715725]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715728 'move' call_tmp[715725](235903 call ![7494] call_tmp[715720]))
    const-val call_tmp[715730]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715733 'move' call_tmp[715730] call_tmp[715725])
    if call_tmp[715730]
    {
      const-val call_tmp[715737]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017561]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017567 'move' coerce_tmp[1017561](1017563 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908438]:owned SystemError[1000427] "temp"
      (235928 call fromSyserr[1017302] coerce_tmp[1017561] "Operation attempted on closed file" ret_tmp[1908438])
      (1908441 'move' call_tmp[715737] ret_tmp[1908438])
      val call_tmp[715742]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017570]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908366]:owned Error[966647] "temp"
      (1017572 call _cast[1015936] call_tmp[715737] ret_tmp[1908366])
      (1908369 'move' coerce_tmp[1017570] ret_tmp[1908366])
      const-val _formal_tmp_in_err[1017749]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017753 'move' _formal_tmp_in_err[1017749] coerce_tmp[1017570])
      (715745 'move' call_tmp[715742](468233 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017749]))
      {
        val castedError[1883733]:Error[167984] "temp"
        (1883739 'move' castedError[1883733] call_tmp[715742])
        (1883741 '=' error_out[1883715] castedError[1883733])
        gotoErrorHandlingReturn _endcheckAssumingLocal[1883717] _endcheckAssumingLocal[1883717]
      }
    }
    label _endcheckAssumingLocal[1883717]
    (534725 return _void[55])
  }
  function _ref(file)[948923].deinit[235979](ref arg this[235981]:_ref(file)[948923]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[236007]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715763]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (715766 'move' call_tmp[715763](235987 call home[887138] this[235981]))
    const-val call_tmp[715768]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[985852]:BaseLocale[91204] "dead after last mention" "temp"
    (985857 'move' _locale_tmp_[985852](985854 call _value[89984] call_tmp[715763]))
    (715771 'move' call_tmp[715768](236004 '_wide_get_locale' _locale_tmp_[985852]))
    (236009 'move' tmp[236007] call_tmp[715768])
    val isdirect[2199221]:bool[10] "temp"
    (2199226 'move' isdirect[2199221](2199223 call chpl_doDirectExecuteOn[187469] tmp[236007]))
    if isdirect[2199221]
    {
      (2199230 call on_fn[935786] this[235981])
    }
    {
      val _args_foron_fn[2199245]:_class_localson_fn[2199237] "temp"
      (2199249 'move' _args_foron_fn[2199245](2199247 'stack allocate class' _class_localson_fn[2199237]))
      (2199251 '.=' _args_foron_fn[2199245] _0_tmp[2199240] tmp[236007])
      ref tmp[2199255]:file[235668] "temp"
      (2199259 'move' tmp[2199255](2199257 'set reference' this[235981]))
      (2199261 '.=' _args_foron_fn[2199245] _1_this[2199242] tmp[2199255])
      val _args_vforon_fn[2199265]:c_void_ptr[149] "temp"
      (2199269 'move' _args_vforon_fn[2199265](2199267 'cast_to_void_star' _args_foron_fn[2199245]))
      val _args_sizeon_fn[2199271]:int(64)[13] "temp"
      (2199275 'move' _args_sizeon_fn[2199271](2199273 'sizeof_bundle' _class_localson_fn[2199237]))
      on(2199307 call wrapon_fn[2199277] tmp[236007] _args_vforon_fn[2199265] _args_sizeon_fn[2199271] _args_foron_fn[2199245])
    }
    {
    }
    label _enddeinit[1890188]
    ref _field_destructor_tmp_[1890186]:_ref(locale)[949033] "temp"
    (1890193 'move' _field_destructor_tmp_[1890186](1890190 '.' this[235981] home[235650]))
    (1890195 call deinit[90188] _field_destructor_tmp_[1890186])
    (534729 return _void[55])
  }
  function _ref(file)[948923]._style[236048](const  ref arg this[236050]:_ref(file)[948923], ref arg error_out[1883745]:Error[167984]) : iostyle[231932] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534743]:iostyle[231932] "dead after last mention" "RVV" "temp"
    val ret[236057]:iostyle[231932] "dead at end of block" "insert auto destroy"
    const-val tmp[236095]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715801]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (715804 'move' call_tmp[715801](236063 call home[887138] this[236050]))
    const-val call_tmp[715806]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017233]:BaseLocale[91204] "dead after last mention" "temp"
    (1017238 'move' _locale_tmp_[1017233](1017235 call _value[89984] call_tmp[715801]))
    (715809 'move' call_tmp[715806](236092 '_wide_get_locale' _locale_tmp_[1017233]))
    (236097 'move' tmp[236095] call_tmp[715806])
    val error[1883748]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1883750 'move' error[1883748] nil[44])
    val rvfDerefTmp[2195672]:file[235668] "temp"
    (2195676 'move' rvfDerefTmp[2195672](2195674 'deref' this[236050]))
    val isdirect[2199312]:bool[10] "temp"
    (2199317 'move' isdirect[2199312](2199314 call chpl_doDirectExecuteOn[187469] tmp[236095]))
    if isdirect[2199312]
    {
      (2199321 call on_fn[935795] rvfDerefTmp[2195672] ret[236057] error[1883748])
    }
    {
      val _args_foron_fn[2199342]:_class_localson_fn[2199330] "temp"
      (2199346 'move' _args_foron_fn[2199342](2199344 'stack allocate class' _class_localson_fn[2199330]))
      (2199348 '.=' _args_foron_fn[2199342] _0_tmp[2199333] tmp[236095])
      (2199352 '.=' _args_foron_fn[2199342] _1_rvfDerefTmp[2199335] rvfDerefTmp[2195672])
      ref tmp[2199356]:iostyle[231932] "temp"
      (2199360 'move' tmp[2199356](2199358 'set reference' ret[236057]))
      (2199362 '.=' _args_foron_fn[2199342] _2_ret[2199337] tmp[2199356])
      ref tmp[2199366]:Error[167984] "temp"
      (2199370 'move' tmp[2199366](2199368 'set reference' error[1883748]))
      (2199372 '.=' _args_foron_fn[2199342] _3_error[2199339] tmp[2199366])
      val _args_vforon_fn[2199376]:c_void_ptr[149] "temp"
      (2199380 'move' _args_vforon_fn[2199376](2199378 'cast_to_void_star' _args_foron_fn[2199342]))
      val _args_sizeon_fn[2199382]:int(64)[13] "temp"
      (2199386 'move' _args_sizeon_fn[2199382](2199384 'sizeof_bundle' _class_localson_fn[2199330]))
      on(2199434 call wrapon_fn[2199388] tmp[236095] _args_vforon_fn[2199376] _args_sizeon_fn[2199382] _args_foron_fn[2199342])
    }
    val errorExists[2221856]:bool[10] "temp"
    (2221861 'move' errorExists[2221856](2221858 '!=' error[1883748] nil[44]))
    if errorExists[2221856]
    {
      (1883754 '=' error_out[1883745] error[1883748])
      gotoErrorHandlingReturn _end__style[534741] _end__style[534741]
    }
    {
    }
    (1017770 'move' ret[534743] ret[236057])
    gotoReturn _end__style[534741] _end__style[534741]
    label _end__style[534741]
    (534745 return ret[534743])
  }
  function _ref(file)[948923].close[236112](const  ref arg this[236114]:_ref(file)[948923], ref arg error_out[1883762]:Error[167984]) : void[4] throws "method" "resolved" "no return value for void"
  {
    ref call_tmp[715822]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
    (715825 'move' call_tmp[715822](396527 call _file_internal[887164] this[236114]))
    const-val call_tmp[715827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060797]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060801 'move' coerce_tmp[1060797](1060799 'deref' call_tmp[715822]))
    (715830 'move' call_tmp[715827](236122 call is_c_nil[1017245] coerce_tmp[1060797]))
    const-val call_tmp[715832]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715835 'move' call_tmp[715832] call_tmp[715827])
    if call_tmp[715832]
    {
      const-val call_tmp[715839]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060806]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060812 'move' coerce_tmp[1060806](1060808 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908444]:owned SystemError[1000427] "temp"
      (236130 call fromSyserr[1017302] coerce_tmp[1060806] "Operation attempted on an invalid file" ret_tmp[1908444])
      (1908447 'move' call_tmp[715839] ret_tmp[1908444])
      val call_tmp[715844]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060815]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908378]:owned Error[966647] "temp"
      (1060817 call _cast[1015936] call_tmp[715839] ret_tmp[1908378])
      (1908381 'move' coerce_tmp[1060815] ret_tmp[1908378])
      const-val _formal_tmp_in_err[1060994]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060998 'move' _formal_tmp_in_err[1060994] coerce_tmp[1060815])
      (715847 'move' call_tmp[715844](468235 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1060994]))
      {
        val castedError[1883767]:Error[167984] "temp"
        (1883773 'move' castedError[1883767] call_tmp[715844])
        (1883775 '=' error_out[1883762] castedError[1883767])
        gotoErrorHandlingReturn _endclose[1883764] _endclose[1883764]
      }
    }
    const-val call_tmp[715849]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715852 'move' call_tmp[715849](396532 call ENOERR[223742]))
    val err[236141]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061004]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1061036 call =[224221] init_coerce_tmp[1061004] call_tmp[715849])
    (547142 'move' err[236141] init_coerce_tmp[1061004])
    const-val tmp[236161]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715856]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (715859 'move' call_tmp[715856](236146 call home[887138] this[236114]))
    const-val call_tmp[715861]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061011]:BaseLocale[91204] "dead after last mention" "temp"
    (1061016 'move' _locale_tmp_[1061011](1061013 call _value[89984] call_tmp[715856]))
    (715864 'move' call_tmp[715861](236158 '_wide_get_locale' _locale_tmp_[1061011]))
    (236163 'move' tmp[236161] call_tmp[715861])
    val rvfDerefTmp[2195693]:file[235668] "temp"
    (2195697 'move' rvfDerefTmp[2195693](2195695 'deref' this[236114]))
    val isdirect[2199439]:bool[10] "temp"
    (2199444 'move' isdirect[2199439](2199441 call chpl_doDirectExecuteOn[187469] tmp[236161]))
    if isdirect[2199439]
    {
      (2199448 call on_fn[935804] rvfDerefTmp[2195693] err[236141])
    }
    {
      val _args_foron_fn[2199466]:_class_localson_fn[2199456] "temp"
      (2199470 'move' _args_foron_fn[2199466](2199468 'stack allocate class' _class_localson_fn[2199456]))
      (2199472 '.=' _args_foron_fn[2199466] _0_tmp[2199459] tmp[236161])
      (2199476 '.=' _args_foron_fn[2199466] _1_rvfDerefTmp[2199461] rvfDerefTmp[2195693])
      ref tmp[2199480]:syserr[223672] "temp"
      (2199484 'move' tmp[2199480](2199482 'set reference' err[236141]))
      (2199486 '.=' _args_foron_fn[2199466] _2_err[2199463] tmp[2199480])
      val _args_vforon_fn[2199490]:c_void_ptr[149] "temp"
      (2199494 'move' _args_vforon_fn[2199490](2199492 'cast_to_void_star' _args_foron_fn[2199466]))
      val _args_sizeon_fn[2199496]:int(64)[13] "temp"
      (2199500 'move' _args_sizeon_fn[2199496](2199498 'sizeof_bundle' _class_localson_fn[2199456]))
      on(2199540 call wrapon_fn[2199502] tmp[236161] _args_vforon_fn[2199490] _args_sizeon_fn[2199496] _args_foron_fn[2199466])
    }
    {
    }
    const-val call_tmp[715878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (715881 'move' call_tmp[715878](236202 call _cond_test[224069] err[236141]))
    if call_tmp[715878]
    {
      {
        val error[1883779]:Error[167984] "error variable" "temp"
        (1883788 'move' error[1883779] nil[44])
        const-val call_tmp[715885]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1907254]:string[26] "temp"
        (236197 call tryGetPath[236452] this[236114] ret_tmp[1907254])
        (1907257 'move' call_tmp[715885] ret_tmp[1907254])
        (236198 call ioerror[266338] err[236141] "in file.close" call_tmp[715885] error[1883779])
        val errorExists[2221864]:bool[10] "temp"
        (2221869 'move' errorExists[2221864](2221866 '!=' error[1883779] nil[44]))
        if errorExists[2221864]
        {
          (1919803 call chpl__autoDestroy[1601673] call_tmp[715885])
          gotoErrorHandling handler[1883780] handler[1883780]
        }
        (1919806 call chpl__autoDestroy[1601673] call_tmp[715885])
        label handler[1883780]
        const-val shouldHandleError[1883799]:bool[10] "temp"
        val errorExists[2221872]:bool[10] "temp"
        (2221877 'move' errorExists[2221872](2221874 '!=' error[1883779] nil[44]))
        (1883803 'move' shouldHandleError[1883799] errorExists[2221872])
        if shouldHandleError[1883799]
        {
          (1883795 '=' error_out[1883762] error[1883779])
          gotoErrorHandlingReturn _endclose[1883764] _endclose[1883764]
        }
      }
    }
    label _endclose[1883764]
    (534753 return _void[55])
  }
  function _ref(file)[948923].path[236300](const  ref arg this[236302]:_ref(file)[948923], ref arg error_out[1883807]:Error[167984], ref arg _retArg[1907248]:_ref(string)[938128]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534759]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236309]:string[26] "dead at end of block" "insert auto destroy"
    (1021870 call init[30763] ret[236309])
    const-val call_tmp[715933]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (715936 'move' call_tmp[715933](396554 call ENOERR[223742]))
    val err[236316]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1019287]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1021860 call =[224221] init_coerce_tmp[1019287] call_tmp[715933])
    (547148 'move' err[236316] init_coerce_tmp[1019287])
    const-val tmp[236405]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[715940]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (715943 'move' call_tmp[715940](236321 call home[887138] this[236302]))
    const-val call_tmp[715945]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019294]:BaseLocale[91204] "dead after last mention" "temp"
    (1019299 'move' _locale_tmp_[1019294](1019296 call _value[89984] call_tmp[715940]))
    (715948 'move' call_tmp[715945](236402 '_wide_get_locale' _locale_tmp_[1019294]))
    (236407 'move' tmp[236405] call_tmp[715945])
    val error[1883810]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1883812 'move' error[1883810] nil[44])
    val rvfDerefTmp[2195707]:file[235668] "temp"
    (2195711 'move' rvfDerefTmp[2195707](2195709 'deref' this[236302]))
    val isdirect[2199545]:bool[10] "temp"
    (2199550 'move' isdirect[2199545](2199547 call chpl_doDirectExecuteOn[187469] tmp[236405]))
    if isdirect[2199545]
    {
      (2199554 call on_fn[935822] rvfDerefTmp[2195707] err[236316] ret[236309] error[1883810])
    }
    {
      val _args_foron_fn[2199578]:_class_localson_fn[2199564] "temp"
      (2199582 'move' _args_foron_fn[2199578](2199580 'stack allocate class' _class_localson_fn[2199564]))
      (2199584 '.=' _args_foron_fn[2199578] _0_tmp[2199567] tmp[236405])
      (2199588 '.=' _args_foron_fn[2199578] _1_rvfDerefTmp[2199569] rvfDerefTmp[2195707])
      ref tmp[2199592]:syserr[223672] "temp"
      (2199596 'move' tmp[2199592](2199594 'set reference' err[236316]))
      (2199598 '.=' _args_foron_fn[2199578] _2_err[2199571] tmp[2199592])
      ref tmp[2199602]:string[26] "temp"
      (2199606 'move' tmp[2199602](2199604 'set reference' ret[236309]))
      (2199608 '.=' _args_foron_fn[2199578] _3_ret[2199573] tmp[2199602])
      ref tmp[2199612]:Error[167984] "temp"
      (2199616 'move' tmp[2199612](2199614 'set reference' error[1883810]))
      (2199618 '.=' _args_foron_fn[2199578] _4_error[2199575] tmp[2199612])
      val _args_vforon_fn[2199622]:c_void_ptr[149] "temp"
      (2199626 'move' _args_vforon_fn[2199622](2199624 'cast_to_void_star' _args_foron_fn[2199578]))
      val _args_sizeon_fn[2199628]:int(64)[13] "temp"
      (2199632 'move' _args_sizeon_fn[2199628](2199630 'sizeof_bundle' _class_localson_fn[2199564]))
      on(2199688 call wrapon_fn[2199634] tmp[236405] _args_vforon_fn[2199622] _args_sizeon_fn[2199628] _args_foron_fn[2199578])
    }
    val errorExists[2221880]:bool[10] "temp"
    (2221885 'move' errorExists[2221880](2221882 '!=' error[1883810] nil[44]))
    if errorExists[2221880]
    {
      (1883816 '=' error_out[1883807] error[1883810])
      (1919809 call chpl__autoDestroy[1601673] ret[236309])
      gotoErrorHandlingReturn _end_path[534757] _end_path[534757]
    }
    {
    }
    const-val call_tmp[716001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716004 'move' call_tmp[716001](236438 call _cond_test[224069] err[236316]))
    if call_tmp[716001]
    {
      {
        val error[1883824]:Error[167984] "error variable" "temp"
        (1883833 'move' error[1883824] nil[44])
        (236434 call ioerror[266399] err[236316] "in file.path" error[1883824])
        val errorExists[2221888]:bool[10] "temp"
        (2221893 'move' errorExists[2221888](2221890 '!=' error[1883824] nil[44]))
        if errorExists[2221888]
        {
          gotoErrorHandling handler[1883825] handler[1883825]
        }
        label handler[1883825]
        const-val shouldHandleError[1883844]:bool[10] "temp"
        val errorExists[2221896]:bool[10] "temp"
        (2221901 'move' errorExists[2221896](2221898 '!=' error[1883824] nil[44]))
        (1883848 'move' shouldHandleError[1883844] errorExists[2221896])
        if shouldHandleError[1883844]
        {
          (1883840 '=' error_out[1883807] error[1883824])
          (1919812 call chpl__autoDestroy[1601673] ret[236309])
          gotoErrorHandlingReturn _end_path[534757] _end_path[534757]
        }
      }
    }
    (1021868 'move' ret[534759] ret[236309])
    gotoReturn _end_path[534757] _end_path[534757]
    label _end_path[534757]
    (1907250 '=' _retArg[1907248] ret[534759])
    (1907252 return _void[55])
  }
  function _ref(file)[948923].tryGetPath[236452](const  ref arg this[236454]:_ref(file)[948923], ref arg _retArg[1907284]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534771]:string[26] "dead after last mention" "RVV" "temp"
    {
      val error[1883852]:Error[167984] "error variable" "temp"
      (1883861 'move' error[1883852] nil[44])
      const-val call_tmp[716008]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907242]:string[26] "temp"
      (236463 call path[236300] this[236454] error[1883852] ret_tmp[1907242])
      (1907245 'move' call_tmp[716008] ret_tmp[1907242])
      val errorExists[2221904]:bool[10] "temp"
      (2221909 'move' errorExists[2221904](2221906 '!=' error[1883852] nil[44]))
      if errorExists[2221904]
      {
        gotoErrorHandling handler[1883853] handler[1883853]
      }
      (1021902 'move' ret[534771] call_tmp[716008])
      gotoReturn _end_tryGetPath[534769] _end_tryGetPath[534769]
      label handler[1883853]
      const-val shouldHandleError[1883868]:bool[10] "temp"
      val errorExists[2221912]:bool[10] "temp"
      (2221917 'move' errorExists[2221912](2221914 '!=' error[1883852] nil[44]))
      (1883872 'move' shouldHandleError[1883868] errorExists[2221912])
      if shouldHandleError[1883868]
      {
        {
          val call_tmp[716013]:Error[167984] "dead at end of block" "maybe param" "temp"
          (716016 'move' call_tmp[716013] error[1883852])
          val tmp[354638]:Error[167984] "dead at end of block" "insert auto destroy" "temp"
          (547154 'move' tmp[354638](1021875 call chpl__initCopy[968244] call_tmp[716013]))
          val call_tmp[716018]:Error[167984] "dead at end of block" "expr temp" "maybe param" "temp"
          (716021 'move' call_tmp[716018] tmp[354638])
          const-val call_tmp[716023]:owned Error[966647] "dead at end of block" "delay instantiation" "maybe param" "temp"
          const-val initTemp[1021882]:owned Error[966647] "dead at end of block" "delay instantiation" "temp"
          (1021885 call init[968283] initTemp[1021882] call_tmp[716018])
          (716026 'move' call_tmp[716023] initTemp[1021882])
          const-val chpl_anon_error[354644]:owned Error[966647] "dead at end of block" "delay instantiation" "insert auto destroy"
          (547156 'move' chpl_anon_error[354644] call_tmp[716023])
          {
            (534783 'move' ret[534771](1907288 call chpl__initCopy[981537] "unknown"))
            (1919815 call chpl__autoDestroy[1608774] chpl_anon_error[354644])
            gotoReturn _end_tryGetPath[534769] _end_tryGetPath[534769]
          }
          (1919819 call chpl__autoDestroy[1608774] chpl_anon_error[354644])
        }
      }
    }
    label _end_tryGetPath[534769]
    (1907286 '=' _retArg[1907284] ret[534771])
    (1907290 return _void[55])
  }
  function openfd[237359](const in arg fd[237356]:int(32)[95], const in arg hints[237363]:int(32)[95], const  ref arg style[237371]:iostyle[231932], ref arg error_out[1883876]:Error[167984], ref arg _retArg[1907298]:_ref(file)[948923]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534870]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237377]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547192 'move' local_style[237377] style[237371])
    val ret[237383]:file[235668] "dead at end of block" "insert auto destroy"
    (1016710 call init[235662] ret[237383])
    ref call_tmp[716307]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (716310 'move' call_tmp[716307](237388 call home[887138] ret[237383]))
    const-val call_tmp[716312]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906268]:locale[28] "temp"
    (396672 call here[90438] ret_tmp[1906268])
    (1906271 'move' call_tmp[716312] ret_tmp[1906268])
    (237392 call =[90634] call_tmp[716307] call_tmp[716312])
    (1919822 call chpl__autoDestroy[1601737] call_tmp[716312])
    ref call_tmp[716319]:_ref(qio_file_ptr_t)[937062] "dead at end of block" "maybe param" "temp"
    (716322 'move' call_tmp[716319](237397 call _file_internal[887164] ret[237383]))
    const-val call_tmp[716324]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716327 'move' call_tmp[716324](237403 call chpl_cnullfile[223662]))
    const-val call_tmp[716329]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986713]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986719 'move' coerce_tmp[986713](986715 'cast' int(32)[95] 0))
    (716332 'move' call_tmp[716329](237408 call qio_file_init[232736] call_tmp[716319] call_tmp[716324] fd[237356] hints[237363] local_style[237377] coerce_tmp[986713]))
    const-val err[237409]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547196 'move' err[237409](986722 call chpl__initCopy[964674] call_tmp[716329]))
    const-val call_tmp[716334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716337 'move' call_tmp[716334](237472 call _cond_test[224069] err[237409]))
    if call_tmp[716334]
    {
      val path_cs[237415]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016748 'move' path_cs[237415](1016746 'cast' c_string[19] nil[44]))
      const-val call_tmp[716339]:syserr[223672] "dead at end of block" "maybe param" "temp"
      (716342 'move' call_tmp[716339](237424 call qio_file_path_for_fd[233735] fd[237356] path_cs[237415]))
      const-val path_err[237425]:syserr[223672] "dead at end of block" "insert auto destroy"
      (547200 'move' path_err[237425](986738 call chpl__initCopy[964674] call_tmp[716339]))
      const-val path[237443]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576863]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576864]:bool[10] "dead after last mention" "maybe param" "temp"
      (576869 'move' tmp[576864](576867 call _cond_test[224069] path_err[237425]))
      if tmp[576864]
      {
        (576874 'move' tmp[576863](1907302 call chpl__initCopy[981537] "unknown"))
      }
      {
        const-val tmp[576876]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[986746]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1883879]:Error[167984] "error variable" "temp"
        (1883881 'move' error[1883879] nil[44])
        (986751 'move' default_arg_length[986746](986748 call createStringWithNewBuffer_default_length[964235] path_cs[237415] error[1883879]))
        val errorExists[2221920]:bool[10] "temp"
        (2221925 'move' errorExists[2221920](2221922 '!=' error[1883879] nil[44]))
        if errorExists[2221920]
        {
          (1883885 '=' error_out[1883876] error[1883879])
          (1919825 call chpl__autoDestroy[1603492] ret[237383])
          gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
        }
        val error[1883894]:Error[167984] "error variable" "temp"
        (1883896 'move' error[1883894] nil[44])
        const-val ret_tmp[1904814]:string[26] "temp"
        (237439 call createStringWithNewBuffer[30413] path_cs[237415] default_arg_length[986746] replace[173694] error[1883894] ret_tmp[1904814])
        (1904817 'move' tmp[576876] ret_tmp[1904814])
        val errorExists[2221928]:bool[10] "temp"
        (2221933 'move' errorExists[2221928](2221930 '!=' error[1883894] nil[44]))
        if errorExists[2221928]
        {
          (1883900 '=' error_out[1883876] error[1883894])
          (1919828 call chpl__autoDestroy[1603492] ret[237383])
          gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
        }
        (576883 'move' tmp[576863] tmp[576876])
      }
      (547202 'move' path[237443] tmp[576863])
      {
        val error[1883908]:Error[167984] "error variable" "temp"
        (1883917 'move' error[1883908] nil[44])
        (237468 call ioerror[266338] err[237409] "in openfd" path[237443] error[1883908])
        val errorExists[2221936]:bool[10] "temp"
        (2221941 'move' errorExists[2221936](2221938 '!=' error[1883908] nil[44]))
        if errorExists[2221936]
        {
          gotoErrorHandling handler[1883909] handler[1883909]
        }
        label handler[1883909]
        const-val shouldHandleError[1883928]:bool[10] "temp"
        val errorExists[2221944]:bool[10] "temp"
        (2221949 'move' errorExists[2221944](2221946 '!=' error[1883908] nil[44]))
        (1883932 'move' shouldHandleError[1883928] errorExists[2221944])
        if shouldHandleError[1883928]
        {
          (1883924 '=' error_out[1883876] error[1883908])
          (1919831 call chpl__autoDestroy[1601673] path[237443])
          (1919834 call chpl__autoDestroy[1603492] ret[237383])
          gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
        }
      }
      (1919838 call chpl__autoDestroy[1601673] path[237443])
    }
    (1016708 'move' ret[534870] ret[237383])
    gotoReturn _end_openfd[534868] _end_openfd[534868]
    label _end_openfd[534868]
    (1907300 '=' _retArg[1907298] ret[534870])
    (1907304 return _void[55])
  }
  function openfd_default_style[985934](ref arg error_out[1884617]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985936]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[985941]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (985946 'move' style[985941](985945 call defaultIOStyle[235383]))
    (985978 'move' ret[985936] style[985941])
    label _endopenfd_default_style[1884619]
    (985939 return ret[985936])
  }
  function openfd_default_hints[985892](ref arg error_out[1884613]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[985894]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[985899]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[985903]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[985905]:int(32)[95] "dead after last mention" "temp" "type variable"
    (985923 'move' tmp[985903] IOHINT_NONE[231499])
    (985916 'move' hints[985899] tmp[985903])
    (985919 'move' ret[985894] hints[985899])
    label _endopenfd_default_hints[1884615]
    (985897 return ret[985894])
  }
  function openfp[237488](const in arg fp[237485]:_file[155], const in arg hints[237492]:int(32)[95], const  ref arg style[237500]:iostyle[231932], ref arg error_out[1883936]:Error[167984], ref arg _retArg[1907318]:_ref(file)[948923]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534882]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237506]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547204 'move' local_style[237506] style[237500])
    val ret[237512]:file[235668] "dead at end of block" "insert auto destroy"
    (1022315 call init[235662] ret[237512])
    ref call_tmp[716346]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (716349 'move' call_tmp[716346](237517 call home[887138] ret[237512]))
    const-val call_tmp[716351]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906274]:locale[28] "temp"
    (396693 call here[90438] ret_tmp[1906274])
    (1906277 'move' call_tmp[716351] ret_tmp[1906274])
    (237521 call =[90634] call_tmp[716346] call_tmp[716351])
    (1919841 call chpl__autoDestroy[1601737] call_tmp[716351])
    ref call_tmp[716358]:_ref(qio_file_ptr_t)[937062] "dead at end of block" "maybe param" "temp"
    (716361 'move' call_tmp[716358](237526 call _file_internal[887164] ret[237512]))
    const-val call_tmp[716368]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022270]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022276 'move' coerce_tmp[1022270](1022272 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022278]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022284 'move' coerce_tmp[1022278](1022280 'cast' int(32)[95] 1))
    (716371 'move' call_tmp[716368](237537 call qio_file_init[232736] call_tmp[716358] fp[237485] coerce_tmp[1022270] hints[237492] local_style[237506] coerce_tmp[1022278]))
    const-val err[237538]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547208 'move' err[237538](1022287 call chpl__initCopy[964674] call_tmp[716368]))
    const-val call_tmp[716373]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716376 'move' call_tmp[716373](237606 call _cond_test[224069] err[237538]))
    if call_tmp[716373]
    {
      val path_cs[237544]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022323 'move' path_cs[237544](1022321 'cast' c_string[19] nil[44]))
      const-val call_tmp[716378]:syserr[223672] "dead at end of block" "maybe param" "temp"
      (716381 'move' call_tmp[716378](237553 call qio_file_path_for_fp[233751] fp[237485] path_cs[237544]))
      const-val path_err[237554]:syserr[223672] "dead at end of block" "insert auto destroy"
      (547212 'move' path_err[237554](1022293 call chpl__initCopy[964674] call_tmp[716378]))
      const-val path[237572]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576890]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val tmp[576891]:bool[10] "dead after last mention" "maybe param" "temp"
      (576896 'move' tmp[576891](576894 call _cond_test[224069] path_err[237554]))
      if tmp[576891]
      {
        (576901 'move' tmp[576890](1907322 call chpl__initCopy[981537] "unknown"))
      }
      {
        const-val tmp[576903]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val default_arg_length[1022301]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1883939]:Error[167984] "error variable" "temp"
        (1883941 'move' error[1883939] nil[44])
        (1022306 'move' default_arg_length[1022301](1022303 call createStringWithNewBuffer_default_length[964235] path_cs[237544] error[1883939]))
        val errorExists[2221952]:bool[10] "temp"
        (2221957 'move' errorExists[2221952](2221954 '!=' error[1883939] nil[44]))
        if errorExists[2221952]
        {
          (1883945 '=' error_out[1883936] error[1883939])
          (1919844 call chpl__autoDestroy[1603492] ret[237512])
          gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
        }
        val error[1883954]:Error[167984] "error variable" "temp"
        (1883956 'move' error[1883954] nil[44])
        const-val ret_tmp[1904820]:string[26] "temp"
        (237568 call createStringWithNewBuffer[30413] path_cs[237544] default_arg_length[1022301] replace[173694] error[1883954] ret_tmp[1904820])
        (1904823 'move' tmp[576903] ret_tmp[1904820])
        val errorExists[2221960]:bool[10] "temp"
        (2221965 'move' errorExists[2221960](2221962 '!=' error[1883954] nil[44]))
        if errorExists[2221960]
        {
          (1883960 '=' error_out[1883936] error[1883954])
          (1919847 call chpl__autoDestroy[1603492] ret[237512])
          gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
        }
        (576910 'move' tmp[576890] tmp[576903])
      }
      (547214 'move' path[237572] tmp[576890])
      (237579 call chpl_free_c_string[22709] path_cs[237544])
      {
        val error[1883968]:Error[167984] "error variable" "temp"
        (1883977 'move' error[1883968] nil[44])
        (237602 call ioerror[266338] err[237538] "in openfp" path[237572] error[1883968])
        val errorExists[2221968]:bool[10] "temp"
        (2221973 'move' errorExists[2221968](2221970 '!=' error[1883968] nil[44]))
        if errorExists[2221968]
        {
          gotoErrorHandling handler[1883969] handler[1883969]
        }
        label handler[1883969]
        const-val shouldHandleError[1883988]:bool[10] "temp"
        val errorExists[2221976]:bool[10] "temp"
        (2221981 'move' errorExists[2221976](2221978 '!=' error[1883968] nil[44]))
        (1883992 'move' shouldHandleError[1883988] errorExists[2221976])
        if shouldHandleError[1883988]
        {
          (1883984 '=' error_out[1883936] error[1883968])
          (1919850 call chpl__autoDestroy[1601673] path[237572])
          (1919853 call chpl__autoDestroy[1603492] ret[237512])
          gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
        }
      }
      (1919857 call chpl__autoDestroy[1601673] path[237572])
    }
    (1022313 'move' ret[534882] ret[237512])
    gotoReturn _end_openfp[534880] _end_openfp[534880]
    label _end_openfp[534880]
    (1907320 '=' _retArg[1907318] ret[534882])
    (1907324 return _void[55])
  }
  function openfp_default_style[1022083](ref arg error_out[1884752]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1022085]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1022090]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1022095 'move' style[1022090](1022094 call defaultIOStyle[235383]))
    (1022099 'move' ret[1022085] style[1022090])
    label _endopenfp_default_style[1884754]
    (1022088 return ret[1022085])
  }
  function openfp_default_hints[1022041](ref arg error_out[1884748]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1022043]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1022048]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022052]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1022054]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1022072 'move' tmp[1022052] IOHINT_NONE[231499])
    (1022065 'move' hints[1022048] tmp[1022052])
    (1022068 'move' ret[1022043] hints[1022048])
    label _endopenfp_default_hints[1884750]
    (1022046 return ret[1022043])
  }
  function openmem[237713](const  ref arg style[237709]:iostyle[231932], ref arg error_out[1883996]:Error[167984], ref arg _retArg[1907344]:_ref(file)[948923]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534906]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237717]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547222 'move' local_style[237717] style[237709])
    val ret[237723]:file[235668] "dead at end of block" "insert auto destroy"
    (1060790 call init[235662] ret[237723])
    ref call_tmp[716414]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (716417 'move' call_tmp[716414](237728 call home[887138] ret[237723]))
    const-val call_tmp[716419]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906280]:locale[28] "temp"
    (396725 call here[90438] ret_tmp[1906280])
    (1906283 'move' call_tmp[716419] ret_tmp[1906280])
    (237732 call =[90634] call_tmp[716414] call_tmp[716419])
    (1919860 call chpl__autoDestroy[1601737] call_tmp[716419])
    ref call_tmp[716426]:_ref(qio_file_ptr_t)[937062] "dead at end of block" "maybe param" "temp"
    (716429 'move' call_tmp[716426](237737 call _file_internal[887164] ret[237723]))
    const-val call_tmp[716431]:syserr[223672] "dead at end of block" "maybe param" "temp"
    (716434 'move' call_tmp[716431](237743 call qio_file_open_mem[232816] call_tmp[716426] QBUFFER_PTR_NULL[231567] local_style[237717]))
    const-val err[237744]:syserr[223672] "dead at end of block" "insert auto destroy"
    (547226 'move' err[237744](1060782 call chpl__initCopy[964674] call_tmp[716431]))
    const-val call_tmp[716436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (716439 'move' call_tmp[716436](237773 call _cond_test[224069] err[237744]))
    if call_tmp[716436]
    {
      {
        val error[1883998]:Error[167984] "error variable" "temp"
        (1884007 'move' error[1883998] nil[44])
        (237769 call ioerror[266399] err[237744] "in openmem" error[1883998])
        val errorExists[2221984]:bool[10] "temp"
        (2221989 'move' errorExists[2221984](2221986 '!=' error[1883998] nil[44]))
        if errorExists[2221984]
        {
          gotoErrorHandling handler[1883999] handler[1883999]
        }
        label handler[1883999]
        const-val shouldHandleError[1884018]:bool[10] "temp"
        val errorExists[2221992]:bool[10] "temp"
        (2221997 'move' errorExists[2221992](2221994 '!=' error[1883998] nil[44]))
        (1884022 'move' shouldHandleError[1884018] errorExists[2221992])
        if shouldHandleError[1884018]
        {
          (1884014 '=' error_out[1883996] error[1883998])
          (1919863 call chpl__autoDestroy[1603492] ret[237723])
          gotoErrorHandlingReturn _end_openmem[534904] _end_openmem[534904]
        }
      }
    }
    (1060788 'move' ret[534906] ret[237723])
    gotoReturn _end_openmem[534904] _end_openmem[534904]
    label _end_openmem[534904]
    (1907346 '=' _retArg[1907344] ret[534906])
    (1907348 return _void[55])
  }
  function openmem_default_style[1060748](ref arg error_out[1885183]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "resolved"
  {
    val ret[1060750]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1060755]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (1060760 'move' style[1060755](1060759 call defaultIOStyle[235383]))
    (1060764 'move' ret[1060750] style[1060755])
    label _endopenmem_default_style[1885185]
    (1060753 return ret[1060750])
  }
  function _ref(channel(false,dynamic,true))[985825].home[1018213](ref arg this[1018217]:_ref(channel(false,dynamic,true))[985825]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018219]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018227]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1018229 'move' call_tmp[1018227](1018231 '.' this[1018217] home[985804]))
    (1018234 'move' ret[1018219] call_tmp[1018227])
    (1018238 return ret[1018219])
  }
  function _ref(channel(true,dynamic,true))[1022023].home[1023231](ref arg this[1023235]:_ref(channel(true,dynamic,true))[1022023]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023237]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023245]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1023247 'move' call_tmp[1023245](1023249 '.' this[1023235] home[1022002]))
    (1023252 'move' ret[1023237] call_tmp[1023245])
    (1023256 return ret[1023237])
  }
  function _ref(channel(true,dynamic,false))[1061145].home[1061944](ref arg this[1061948]:_ref(channel(true,dynamic,false))[1061145]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1061950]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061958]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1061960 'move' call_tmp[1061958](1061962 '.' this[1061948] home[1061124]))
    (1061965 'move' ret[1061950] call_tmp[1061958])
    (1061969 return ret[1061950])
  }
  function _ref(channel(false,dynamic,false))[1080880].home[1081676](ref arg this[1081680]:_ref(channel(false,dynamic,false))[1080880]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081682]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081690]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1081692 'move' call_tmp[1081690](1081694 '.' this[1081680] home[1080859]))
    (1081697 'move' ret[1081682] call_tmp[1081690])
    (1081701 return ret[1081682])
  }
  function _ref(channel(false,dynamic,true))[985825]._channel_internal[1018555](ref arg this[1018559]:_ref(channel(false,dynamic,true))[985825]) ref : _ref(qio_channel_ptr_t)[937073] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1018561]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "RVV" "temp"
    ref call_tmp[1018569]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1018571 'move' call_tmp[1018569](1018573 '.' this[1018559] _channel_internal[985809]))
    (1018576 'move' ret[1018561] call_tmp[1018569])
    (1018580 return ret[1018561])
  }
  function _ref(channel(true,dynamic,true))[1022023]._channel_internal[1023265](ref arg this[1023269]:_ref(channel(true,dynamic,true))[1022023]) ref : _ref(qio_channel_ptr_t)[937073] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1023271]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "RVV" "temp"
    ref call_tmp[1023279]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1023281 'move' call_tmp[1023279](1023283 '.' this[1023269] _channel_internal[1022007]))
    (1023286 'move' ret[1023271] call_tmp[1023279])
    (1023290 return ret[1023271])
  }
  function _ref(channel(true,dynamic,false))[1061145]._channel_internal[1061978](ref arg this[1061982]:_ref(channel(true,dynamic,false))[1061145]) ref : _ref(qio_channel_ptr_t)[937073] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1061984]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "RVV" "temp"
    ref call_tmp[1061992]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1061994 'move' call_tmp[1061992](1061996 '.' this[1061982] _channel_internal[1061129]))
    (1061999 'move' ret[1061984] call_tmp[1061992])
    (1062003 return ret[1061984])
  }
  function _ref(channel(false,dynamic,false))[1080880]._channel_internal[1081710](ref arg this[1081714]:_ref(channel(false,dynamic,false))[1080880]) ref : _ref(qio_channel_ptr_t)[937073] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1081716]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "RVV" "temp"
    ref call_tmp[1081724]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1081726 'move' call_tmp[1081724](1081728 '.' this[1081714] _channel_internal[1080864]))
    (1081731 'move' ret[1081716] call_tmp[1081724])
    (1081735 return ret[1081716])
  }
  function _ref(channel(true,dynamic,false))[1061145]._readWriteThisFromLocale[1066505](ref arg this[1066509]:_ref(channel(true,dynamic,false))[1061145]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1066511]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066519]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1066521 'move' call_tmp[1066519](1066523 '.' this[1066509] _readWriteThisFromLocale[1061133]))
    (1066526 'move' ret[1066511] call_tmp[1066519])
    (1066530 return ret[1066511])
  }
  function _ref(channel(true,dynamic,true))[1022023]._readWriteThisFromLocale[1552446](ref arg this[1552450]:_ref(channel(true,dynamic,true))[1022023]) ref : _ref(locale)[949033] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1552452]:_ref(locale)[949033] "dead after last mention" "RVV" "temp"
    ref call_tmp[1552460]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1552462 'move' call_tmp[1552460](1552464 '.' this[1552450] _readWriteThisFromLocale[1022011]))
    (1552467 'move' ret[1552452] call_tmp[1552460])
    (1552471 return ret[1552452])
  }
  type channel(false,dynamic,true)[985816] val home[985804]:locale[28] "no doc" val _channel_internal[985809]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[985813]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080871] val home[1080859]:locale[28] "no doc" val _channel_internal[1080864]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1080868]:locale[28] "no doc"
  type channel(true,dynamic,true)[1022014] val home[1022002]:locale[28] "no doc" val _channel_internal[1022007]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1022011]:locale[28] "no doc"
  type channel(true,dynamic,false)[1061136] val home[1061124]:locale[28] "no doc" val _channel_internal[1061129]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1061133]:locale[28] "no doc"
  function =[1018628](ref arg lhs[1018630]:_ref(channel(false,dynamic,true))[985825], const  ref arg rhs[1018632]:channel(false,dynamic,true)[985816]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1018831]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1018833]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018835 'move' call_tmp[1018833](1018838 call home[1018213] rhs[1018632]))
    const-val call_tmp[1018841]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019233]:BaseLocale[91204] "dead after last mention" "temp"
    (1019238 'move' _locale_tmp_[1019233](1019235 call _value[89984] call_tmp[1018833]))
    (1018843 'move' call_tmp[1018841](1018845 '_wide_get_locale' _locale_tmp_[1019233]))
    (1018847 'move' tmp[1018831] call_tmp[1018841])
    val rvfDerefTmp[2195798]:channel(false,dynamic,true)[985816] "temp"
    (2195802 'move' rvfDerefTmp[2195798](2195800 'deref' rhs[1018632]))
    val isdirect[2200285]:bool[10] "temp"
    (2200290 'move' isdirect[2200285](2200287 call chpl_doDirectExecuteOn[187469] tmp[1018831]))
    if isdirect[2200285]
    {
      (2200294 call on_fn[1018854] rvfDerefTmp[2195798])
    }
    {
      val _args_foron_fn[2200309]:_class_localson_fn[2200301] "temp"
      (2200313 'move' _args_foron_fn[2200309](2200311 'stack allocate class' _class_localson_fn[2200301]))
      (2200315 '.=' _args_foron_fn[2200309] _0_tmp[2200304] tmp[1018831])
      (2200319 '.=' _args_foron_fn[2200309] _1_rvfDerefTmp[2200306] rvfDerefTmp[2195798])
      val _args_vforon_fn[2200323]:c_void_ptr[149] "temp"
      (2200327 'move' _args_vforon_fn[2200323](2200325 'cast_to_void_star' _args_foron_fn[2200309]))
      val _args_sizeon_fn[2200329]:int(64)[13] "temp"
      (2200333 'move' _args_sizeon_fn[2200329](2200331 'sizeof_bundle' _class_localson_fn[2200301]))
      on(2200365 call wrapon_fn[2200335] tmp[1018831] _args_vforon_fn[2200323] _args_sizeon_fn[2200329] _args_foron_fn[2200309])
    }
    {
    }
    const-val tmp[1018875]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1018877]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1018879 'move' call_tmp[1018877](1018882 call home[1018213] lhs[1018630]))
    const-val call_tmp[1018885]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1019252]:BaseLocale[91204] "dead after last mention" "temp"
    (1019257 'move' _locale_tmp_[1019252](1019254 call _value[89984] call_tmp[1018877]))
    (1018887 'move' call_tmp[1018885](1018889 '_wide_get_locale' _locale_tmp_[1019252]))
    (1018891 'move' tmp[1018875] call_tmp[1018885])
    val isdirect[2200370]:bool[10] "temp"
    (2200375 'move' isdirect[2200370](2200372 call chpl_doDirectExecuteOn[187469] tmp[1018875]))
    if isdirect[2200370]
    {
      (2200379 call on_fn[1018898] lhs[1018630])
    }
    {
      val _args_foron_fn[2200394]:_class_localson_fn[2200386] "temp"
      (2200398 'move' _args_foron_fn[2200394](2200396 'stack allocate class' _class_localson_fn[2200386]))
      (2200400 '.=' _args_foron_fn[2200394] _0_tmp[2200389] tmp[1018875])
      ref tmp[2200404]:channel(false,dynamic,true)[985816] "temp"
      (2200408 'move' tmp[2200404](2200406 'set reference' lhs[1018630]))
      (2200410 '.=' _args_foron_fn[2200394] _1_lhs[2200391] tmp[2200404])
      val _args_vforon_fn[2200414]:c_void_ptr[149] "temp"
      (2200418 'move' _args_vforon_fn[2200414](2200416 'cast_to_void_star' _args_foron_fn[2200394]))
      val _args_sizeon_fn[2200420]:int(64)[13] "temp"
      (2200424 'move' _args_sizeon_fn[2200420](2200422 'sizeof_bundle' _class_localson_fn[2200386]))
      on(2200456 call wrapon_fn[2200426] tmp[1018875] _args_vforon_fn[2200414] _args_sizeon_fn[2200420] _args_foron_fn[2200394])
    }
    {
    }
    ref call_tmp[1018919]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1018921 'move' call_tmp[1018919](1018924 call home[1018213] lhs[1018630]))
    ref call_tmp[1018927]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018929 'move' call_tmp[1018927](1018932 call home[1018213] rhs[1018632]))
    (1018936 call =[90634] call_tmp[1018919] call_tmp[1018927])
    ref call_tmp[1018940]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1018942 'move' call_tmp[1018940](1018945 call _channel_internal[1018555] lhs[1018630]))
    ref call_tmp[1018948]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1018950 'move' call_tmp[1018948](1018953 call _channel_internal[1018555] rhs[1018632]))
    const-val coerce_tmp[1019275]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019279 'move' coerce_tmp[1019275](1019277 'deref' call_tmp[1018948]))
    (1018957 call =[861669] call_tmp[1018940] coerce_tmp[1019275])
    (1018960 return _void[55])
  }
  function =[1023336](ref arg lhs[1023338]:_ref(channel(true,dynamic,true))[1022023], const  ref arg rhs[1023340]:channel(true,dynamic,true)[1022014]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1023539]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1023541]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023543 'move' call_tmp[1023541](1023546 call home[1023231] rhs[1023340]))
    const-val call_tmp[1023549]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023941]:BaseLocale[91204] "dead after last mention" "temp"
    (1023946 'move' _locale_tmp_[1023941](1023943 call _value[89984] call_tmp[1023541]))
    (1023551 'move' call_tmp[1023549](1023553 '_wide_get_locale' _locale_tmp_[1023941]))
    (1023555 'move' tmp[1023539] call_tmp[1023549])
    val rvfDerefTmp[2195875]:channel(true,dynamic,true)[1022014] "temp"
    (2195879 'move' rvfDerefTmp[2195875](2195877 'deref' rhs[1023340]))
    val isdirect[2200968]:bool[10] "temp"
    (2200973 'move' isdirect[2200968](2200970 call chpl_doDirectExecuteOn[187469] tmp[1023539]))
    if isdirect[2200968]
    {
      (2200977 call on_fn[1023562] rvfDerefTmp[2195875])
    }
    {
      val _args_foron_fn[2200992]:_class_localson_fn[2200984] "temp"
      (2200996 'move' _args_foron_fn[2200992](2200994 'stack allocate class' _class_localson_fn[2200984]))
      (2200998 '.=' _args_foron_fn[2200992] _0_tmp[2200987] tmp[1023539])
      (2201002 '.=' _args_foron_fn[2200992] _1_rvfDerefTmp[2200989] rvfDerefTmp[2195875])
      val _args_vforon_fn[2201006]:c_void_ptr[149] "temp"
      (2201010 'move' _args_vforon_fn[2201006](2201008 'cast_to_void_star' _args_foron_fn[2200992]))
      val _args_sizeon_fn[2201012]:int(64)[13] "temp"
      (2201016 'move' _args_sizeon_fn[2201012](2201014 'sizeof_bundle' _class_localson_fn[2200984]))
      on(2201048 call wrapon_fn[2201018] tmp[1023539] _args_vforon_fn[2201006] _args_sizeon_fn[2201012] _args_foron_fn[2200992])
    }
    {
    }
    const-val tmp[1023583]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1023585]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1023587 'move' call_tmp[1023585](1023590 call home[1023231] lhs[1023338]))
    const-val call_tmp[1023593]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023960]:BaseLocale[91204] "dead after last mention" "temp"
    (1023965 'move' _locale_tmp_[1023960](1023962 call _value[89984] call_tmp[1023585]))
    (1023595 'move' call_tmp[1023593](1023597 '_wide_get_locale' _locale_tmp_[1023960]))
    (1023599 'move' tmp[1023583] call_tmp[1023593])
    val isdirect[2201053]:bool[10] "temp"
    (2201058 'move' isdirect[2201053](2201055 call chpl_doDirectExecuteOn[187469] tmp[1023583]))
    if isdirect[2201053]
    {
      (2201062 call on_fn[1023606] lhs[1023338])
    }
    {
      val _args_foron_fn[2201077]:_class_localson_fn[2201069] "temp"
      (2201081 'move' _args_foron_fn[2201077](2201079 'stack allocate class' _class_localson_fn[2201069]))
      (2201083 '.=' _args_foron_fn[2201077] _0_tmp[2201072] tmp[1023583])
      ref tmp[2201087]:channel(true,dynamic,true)[1022014] "temp"
      (2201091 'move' tmp[2201087](2201089 'set reference' lhs[1023338]))
      (2201093 '.=' _args_foron_fn[2201077] _1_lhs[2201074] tmp[2201087])
      val _args_vforon_fn[2201097]:c_void_ptr[149] "temp"
      (2201101 'move' _args_vforon_fn[2201097](2201099 'cast_to_void_star' _args_foron_fn[2201077]))
      val _args_sizeon_fn[2201103]:int(64)[13] "temp"
      (2201107 'move' _args_sizeon_fn[2201103](2201105 'sizeof_bundle' _class_localson_fn[2201069]))
      on(2201139 call wrapon_fn[2201109] tmp[1023583] _args_vforon_fn[2201097] _args_sizeon_fn[2201103] _args_foron_fn[2201077])
    }
    {
    }
    ref call_tmp[1023627]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1023629 'move' call_tmp[1023627](1023632 call home[1023231] lhs[1023338]))
    ref call_tmp[1023635]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023637 'move' call_tmp[1023635](1023640 call home[1023231] rhs[1023340]))
    (1023644 call =[90634] call_tmp[1023627] call_tmp[1023635])
    ref call_tmp[1023648]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1023650 'move' call_tmp[1023648](1023653 call _channel_internal[1023265] lhs[1023338]))
    ref call_tmp[1023656]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1023658 'move' call_tmp[1023656](1023661 call _channel_internal[1023265] rhs[1023340]))
    const-val coerce_tmp[1023983]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023987 'move' coerce_tmp[1023983](1023985 'deref' call_tmp[1023656]))
    (1023665 call =[861669] call_tmp[1023648] coerce_tmp[1023983])
    (1023668 return _void[55])
  }
  function =[1062049](ref arg lhs[1062051]:_ref(channel(true,dynamic,false))[1061145], const  ref arg rhs[1062053]:channel(true,dynamic,false)[1061136]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1062252]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062254]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062256 'move' call_tmp[1062254](1062259 call home[1061944] rhs[1062053]))
    const-val call_tmp[1062262]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062463]:BaseLocale[91204] "dead after last mention" "temp"
    (1062468 'move' _locale_tmp_[1062463](1062465 call _value[89984] call_tmp[1062254]))
    (1062264 'move' call_tmp[1062262](1062266 '_wide_get_locale' _locale_tmp_[1062463]))
    (1062268 'move' tmp[1062252] call_tmp[1062262])
    val rvfDerefTmp[2195983]:channel(true,dynamic,false)[1061136] "temp"
    (2195987 'move' rvfDerefTmp[2195983](2195985 'deref' rhs[1062053]))
    val isdirect[2201681]:bool[10] "temp"
    (2201686 'move' isdirect[2201681](2201683 call chpl_doDirectExecuteOn[187469] tmp[1062252]))
    if isdirect[2201681]
    {
      (2201690 call on_fn[1062275] rvfDerefTmp[2195983])
    }
    {
      val _args_foron_fn[2201705]:_class_localson_fn[2201697] "temp"
      (2201709 'move' _args_foron_fn[2201705](2201707 'stack allocate class' _class_localson_fn[2201697]))
      (2201711 '.=' _args_foron_fn[2201705] _0_tmp[2201700] tmp[1062252])
      (2201715 '.=' _args_foron_fn[2201705] _1_rvfDerefTmp[2201702] rvfDerefTmp[2195983])
      val _args_vforon_fn[2201719]:c_void_ptr[149] "temp"
      (2201723 'move' _args_vforon_fn[2201719](2201721 'cast_to_void_star' _args_foron_fn[2201705]))
      val _args_sizeon_fn[2201725]:int(64)[13] "temp"
      (2201729 'move' _args_sizeon_fn[2201725](2201727 'sizeof_bundle' _class_localson_fn[2201697]))
      on(2201761 call wrapon_fn[2201731] tmp[1062252] _args_vforon_fn[2201719] _args_sizeon_fn[2201725] _args_foron_fn[2201705])
    }
    {
    }
    const-val tmp[1062296]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062298]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1062300 'move' call_tmp[1062298](1062303 call home[1061944] lhs[1062051]))
    const-val call_tmp[1062306]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062482]:BaseLocale[91204] "dead after last mention" "temp"
    (1062487 'move' _locale_tmp_[1062482](1062484 call _value[89984] call_tmp[1062298]))
    (1062308 'move' call_tmp[1062306](1062310 '_wide_get_locale' _locale_tmp_[1062482]))
    (1062312 'move' tmp[1062296] call_tmp[1062306])
    val isdirect[2201766]:bool[10] "temp"
    (2201771 'move' isdirect[2201766](2201768 call chpl_doDirectExecuteOn[187469] tmp[1062296]))
    if isdirect[2201766]
    {
      (2201775 call on_fn[1062319] lhs[1062051])
    }
    {
      val _args_foron_fn[2201790]:_class_localson_fn[2201782] "temp"
      (2201794 'move' _args_foron_fn[2201790](2201792 'stack allocate class' _class_localson_fn[2201782]))
      (2201796 '.=' _args_foron_fn[2201790] _0_tmp[2201785] tmp[1062296])
      ref tmp[2201800]:channel(true,dynamic,false)[1061136] "temp"
      (2201804 'move' tmp[2201800](2201802 'set reference' lhs[1062051]))
      (2201806 '.=' _args_foron_fn[2201790] _1_lhs[2201787] tmp[2201800])
      val _args_vforon_fn[2201810]:c_void_ptr[149] "temp"
      (2201814 'move' _args_vforon_fn[2201810](2201812 'cast_to_void_star' _args_foron_fn[2201790]))
      val _args_sizeon_fn[2201816]:int(64)[13] "temp"
      (2201820 'move' _args_sizeon_fn[2201816](2201818 'sizeof_bundle' _class_localson_fn[2201782]))
      on(2201852 call wrapon_fn[2201822] tmp[1062296] _args_vforon_fn[2201810] _args_sizeon_fn[2201816] _args_foron_fn[2201790])
    }
    {
    }
    ref call_tmp[1062340]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1062342 'move' call_tmp[1062340](1062345 call home[1061944] lhs[1062051]))
    ref call_tmp[1062348]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062350 'move' call_tmp[1062348](1062353 call home[1061944] rhs[1062053]))
    (1062357 call =[90634] call_tmp[1062340] call_tmp[1062348])
    ref call_tmp[1062361]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1062363 'move' call_tmp[1062361](1062366 call _channel_internal[1061978] lhs[1062051]))
    ref call_tmp[1062369]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1062371 'move' call_tmp[1062369](1062374 call _channel_internal[1061978] rhs[1062053]))
    const-val coerce_tmp[1062505]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062509 'move' coerce_tmp[1062505](1062507 'deref' call_tmp[1062369]))
    (1062378 call =[861669] call_tmp[1062361] coerce_tmp[1062505])
    (1062381 return _void[55])
  }
  function =[1081781](ref arg lhs[1081783]:_ref(channel(false,dynamic,false))[1080880], const  ref arg rhs[1081785]:channel(false,dynamic,false)[1080871]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    {
    }
    const-val tmp[1081984]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1081986]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081988 'move' call_tmp[1081986](1081991 call home[1081676] rhs[1081785]))
    const-val call_tmp[1081994]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082195]:BaseLocale[91204] "dead after last mention" "temp"
    (1082200 'move' _locale_tmp_[1082195](1082197 call _value[89984] call_tmp[1081986]))
    (1081996 'move' call_tmp[1081994](1081998 '_wide_get_locale' _locale_tmp_[1082195]))
    (1082000 'move' tmp[1081984] call_tmp[1081994])
    val rvfDerefTmp[2196161]:channel(false,dynamic,false)[1080871] "temp"
    (2196165 'move' rvfDerefTmp[2196161](2196163 'deref' rhs[1081785]))
    val isdirect[2202902]:bool[10] "temp"
    (2202907 'move' isdirect[2202902](2202904 call chpl_doDirectExecuteOn[187469] tmp[1081984]))
    if isdirect[2202902]
    {
      (2202911 call on_fn[1082007] rvfDerefTmp[2196161])
    }
    {
      val _args_foron_fn[2202926]:_class_localson_fn[2202918] "temp"
      (2202930 'move' _args_foron_fn[2202926](2202928 'stack allocate class' _class_localson_fn[2202918]))
      (2202932 '.=' _args_foron_fn[2202926] _0_tmp[2202921] tmp[1081984])
      (2202936 '.=' _args_foron_fn[2202926] _1_rvfDerefTmp[2202923] rvfDerefTmp[2196161])
      val _args_vforon_fn[2202940]:c_void_ptr[149] "temp"
      (2202944 'move' _args_vforon_fn[2202940](2202942 'cast_to_void_star' _args_foron_fn[2202926]))
      val _args_sizeon_fn[2202946]:int(64)[13] "temp"
      (2202950 'move' _args_sizeon_fn[2202946](2202948 'sizeof_bundle' _class_localson_fn[2202918]))
      on(2202982 call wrapon_fn[2202952] tmp[1081984] _args_vforon_fn[2202940] _args_sizeon_fn[2202946] _args_foron_fn[2202926])
    }
    {
    }
    const-val tmp[1082028]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1082030]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1082032 'move' call_tmp[1082030](1082035 call home[1081676] lhs[1081783]))
    const-val call_tmp[1082038]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082214]:BaseLocale[91204] "dead after last mention" "temp"
    (1082219 'move' _locale_tmp_[1082214](1082216 call _value[89984] call_tmp[1082030]))
    (1082040 'move' call_tmp[1082038](1082042 '_wide_get_locale' _locale_tmp_[1082214]))
    (1082044 'move' tmp[1082028] call_tmp[1082038])
    val isdirect[2202987]:bool[10] "temp"
    (2202992 'move' isdirect[2202987](2202989 call chpl_doDirectExecuteOn[187469] tmp[1082028]))
    if isdirect[2202987]
    {
      (2202996 call on_fn[1082051] lhs[1081783])
    }
    {
      val _args_foron_fn[2203011]:_class_localson_fn[2203003] "temp"
      (2203015 'move' _args_foron_fn[2203011](2203013 'stack allocate class' _class_localson_fn[2203003]))
      (2203017 '.=' _args_foron_fn[2203011] _0_tmp[2203006] tmp[1082028])
      ref tmp[2203021]:channel(false,dynamic,false)[1080871] "temp"
      (2203025 'move' tmp[2203021](2203023 'set reference' lhs[1081783]))
      (2203027 '.=' _args_foron_fn[2203011] _1_lhs[2203008] tmp[2203021])
      val _args_vforon_fn[2203031]:c_void_ptr[149] "temp"
      (2203035 'move' _args_vforon_fn[2203031](2203033 'cast_to_void_star' _args_foron_fn[2203011]))
      val _args_sizeon_fn[2203037]:int(64)[13] "temp"
      (2203041 'move' _args_sizeon_fn[2203037](2203039 'sizeof_bundle' _class_localson_fn[2203003]))
      on(2203073 call wrapon_fn[2203043] tmp[1082028] _args_vforon_fn[2203031] _args_sizeon_fn[2203037] _args_foron_fn[2203011])
    }
    {
    }
    ref call_tmp[1082072]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1082074 'move' call_tmp[1082072](1082077 call home[1081676] lhs[1081783]))
    ref call_tmp[1082080]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1082082 'move' call_tmp[1082080](1082085 call home[1081676] rhs[1081785]))
    (1082089 call =[90634] call_tmp[1082072] call_tmp[1082080])
    ref call_tmp[1082093]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1082095 'move' call_tmp[1082093](1082098 call _channel_internal[1081710] lhs[1081783]))
    ref call_tmp[1082101]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1082103 'move' call_tmp[1082101](1082106 call _channel_internal[1081710] rhs[1081785]))
    const-val coerce_tmp[1082237]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082241 'move' coerce_tmp[1082237](1082239 'deref' call_tmp[1082101]))
    (1082110 call =[861669] call_tmp[1082093] coerce_tmp[1082237])
    (1082113 return _void[55])
  }
  function channel(false,dynamic,true)[985816].init[1018060](ref arg this[1018066]:channel(false,dynamic,true)[985816]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1018120]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1906292]:locale[28] "temp"
    (1018125 call here[90438] ret_tmp[1906292])
    (1906295 'move' call_tmp[1018120] ret_tmp[1906292])
    val tmp[1018126]:locale[28] "dead after last mention" "temp"
    (1018128 'move' tmp[1018126] call_tmp[1018120])
    (1018132 '.=' this[1018066] home[985804] tmp[1018126])
    val tmp[1018137]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1018139 'move' tmp[1018137](1018175 call chpl__initCopy[1018177] QIO_CHANNEL_PTR_NULL[231556]))
    (1018143 '.=' this[1018066] _channel_internal[985809] tmp[1018137])
    val tmp[1018148]:locale[28] "dead after last mention" "temp"
    (1018150 call init=[90170] tmp[1018148] nilLocale[89942])
    (1018153 '.=' this[1018066] _readWriteThisFromLocale[985813] tmp[1018148])
    (1018158 return _void[55])
  }
  function channel(true,dynamic,true)[1022014].init[1023096](ref arg this[1023102]:channel(true,dynamic,true)[1022014]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1023156]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1906298]:locale[28] "temp"
    (1023161 call here[90438] ret_tmp[1906298])
    (1906301 'move' call_tmp[1023156] ret_tmp[1906298])
    val tmp[1023162]:locale[28] "dead after last mention" "temp"
    (1023164 'move' tmp[1023162] call_tmp[1023156])
    (1023168 '.=' this[1023102] home[1022002] tmp[1023162])
    val tmp[1023173]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1023175 'move' tmp[1023173](1023211 call chpl__initCopy[1018177] QIO_CHANNEL_PTR_NULL[231556]))
    (1023179 '.=' this[1023102] _channel_internal[1022007] tmp[1023173])
    val tmp[1023184]:locale[28] "dead after last mention" "temp"
    (1023186 call init=[90170] tmp[1023184] nilLocale[89942])
    (1023189 '.=' this[1023102] _readWriteThisFromLocale[1022011] tmp[1023184])
    (1023194 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1061809](ref arg this[1061815]:channel(true,dynamic,false)[1061136]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1061869]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1906304]:locale[28] "temp"
    (1061874 call here[90438] ret_tmp[1906304])
    (1906307 'move' call_tmp[1061869] ret_tmp[1906304])
    val tmp[1061875]:locale[28] "dead after last mention" "temp"
    (1061877 'move' tmp[1061875] call_tmp[1061869])
    (1061881 '.=' this[1061815] home[1061124] tmp[1061875])
    val tmp[1061886]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1061888 'move' tmp[1061886](1061924 call chpl__initCopy[1018177] QIO_CHANNEL_PTR_NULL[231556]))
    (1061892 '.=' this[1061815] _channel_internal[1061129] tmp[1061886])
    val tmp[1061897]:locale[28] "dead after last mention" "temp"
    (1061899 call init=[90170] tmp[1061897] nilLocale[89942])
    (1061902 '.=' this[1061815] _readWriteThisFromLocale[1061133] tmp[1061897])
    (1061907 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].init[1081541](ref arg this[1081547]:channel(false,dynamic,false)[1080871]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1081601]:locale[28] "dead after last mention" "maybe param" "temp"
    const-val ret_tmp[1906322]:locale[28] "temp"
    (1081606 call here[90438] ret_tmp[1906322])
    (1906325 'move' call_tmp[1081601] ret_tmp[1906322])
    val tmp[1081607]:locale[28] "dead after last mention" "temp"
    (1081609 'move' tmp[1081607] call_tmp[1081601])
    (1081613 '.=' this[1081547] home[1080859] tmp[1081607])
    val tmp[1081618]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1081620 'move' tmp[1081618](1081656 call chpl__initCopy[1018177] QIO_CHANNEL_PTR_NULL[231556]))
    (1081624 '.=' this[1081547] _channel_internal[1080864] tmp[1081618])
    val tmp[1081629]:locale[28] "dead after last mention" "temp"
    (1081631 call init=[90170] tmp[1081629] nilLocale[89942])
    (1081634 '.=' this[1081547] _readWriteThisFromLocale[1080868] tmp[1081629])
    (1081639 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1068577](ref arg this[1068583]:channel(true,dynamic,false)[1061136], const  ref arg home[1068591]:locale[28], const in arg _channel_internal[1068593]:qio_channel_ptr_t[231553], const  ref arg _readWriteThisFromLocale[1068595]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068643]:locale[28] "dead after last mention" "temp"
    (1068645 call init=[90170] tmp[1068643] home[1068591])
    (1068649 '.=' this[1068583] home[1061124] tmp[1068643])
    val tmp[1068654]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1068656 'move' tmp[1068654](1068694 call chpl__initCopy[1018177] _channel_internal[1068593]))
    (1068660 '.=' this[1068583] _channel_internal[1061129] tmp[1068654])
    val tmp[1068665]:locale[28] "dead after last mention" "temp"
    (1068667 call init=[90170] tmp[1068665] _readWriteThisFromLocale[1068595])
    (1068670 '.=' this[1068583] _readWriteThisFromLocale[1061133] tmp[1068665])
    (1068675 return _void[55])
  }
  function channel(false,dynamic,true)[985816].init[1017836](ref arg this[1017842]:channel(false,dynamic,true)[985816], const  ref arg f[1017850]:file[235668], ref arg error[1017852]:_ref(syserr)[949021], const in arg hints[1017856]:int(32)[95], const in arg start[1017862]:int(64)[13], const in arg end[1017868]:int(64)[13], const in arg local_style[1017870]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1018047]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017886 call init[1018060] this[1017842])
    const-val tmp[1017891]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1017893]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1017895 'move' call_tmp[1017893](1017898 call home[887138] f[1017850]))
    const-val call_tmp[1017901]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1018203]:BaseLocale[91204] "dead after last mention" "temp"
    (1018208 'move' _locale_tmp_[1018203](1018205 call _value[89984] call_tmp[1017893]))
    (1017903 'move' call_tmp[1017901](1017905 '_wide_get_locale' _locale_tmp_[1018203]))
    (1017907 'move' tmp[1017891] call_tmp[1017901])
    val rvfDerefTmp[2195764]:file[235668] "temp"
    (2195768 'move' rvfDerefTmp[2195764](2195766 'deref' f[1017850]))
    val rvfDerefTmp[2195785]:iostyle[231932] "temp"
    (2195788 'move' rvfDerefTmp[2195785] local_style[1017870])
    val isdirect[2200098]:bool[10] "temp"
    (2200103 'move' isdirect[2200098](2200100 call chpl_doDirectExecuteOn[187469] tmp[1017891]))
    if isdirect[2200098]
    {
      (2200107 call on_fn[1017914] start[1017862] rvfDerefTmp[2195764] _formal_tmp_error[1018047] this[1017842] hints[1017856] rvfDerefTmp[2195785] end[1017868])
    }
    {
      val _args_foron_fn[2200140]:_class_localson_fn[2200120] "temp"
      (2200144 'move' _args_foron_fn[2200140](2200142 'stack allocate class' _class_localson_fn[2200120]))
      (2200146 '.=' _args_foron_fn[2200140] _0_tmp[2200123] tmp[1017891])
      (2200150 '.=' _args_foron_fn[2200140] _1_start[2200125] start[1017862])
      (2200154 '.=' _args_foron_fn[2200140] _2_rvfDerefTmp[2200127] rvfDerefTmp[2195764])
      ref tmp[2200158]:syserr[223672] "temp"
      (2200162 'move' tmp[2200158](2200160 'set reference' _formal_tmp_error[1018047]))
      (2200164 '.=' _args_foron_fn[2200140] _3__formal_tmp_error[2200129] tmp[2200158])
      ref tmp[2200168]:channel(false,dynamic,true)[985816] "temp"
      (2200172 'move' tmp[2200168](2200170 'set reference' this[1017842]))
      (2200174 '.=' _args_foron_fn[2200140] _4_this[2200131] tmp[2200168])
      (2200178 '.=' _args_foron_fn[2200140] _5_hints[2200133] hints[1017856])
      (2200182 '.=' _args_foron_fn[2200140] _6_rvfDerefTmp[2200135] rvfDerefTmp[2195785])
      (2200186 '.=' _args_foron_fn[2200140] _7_end[2200137] end[1017868])
      val _args_vforon_fn[2200190]:c_void_ptr[149] "temp"
      (2200194 'move' _args_vforon_fn[2200190](2200192 'cast_to_void_star' _args_foron_fn[2200140]))
      val _args_sizeon_fn[2200196]:int(64)[13] "temp"
      (2200200 'move' _args_sizeon_fn[2200196](2200198 'sizeof_bundle' _class_localson_fn[2200120]))
      on(2200280 call wrapon_fn[2200202] tmp[1017891] _args_vforon_fn[2200190] _args_sizeon_fn[2200196] _args_foron_fn[2200140])
    }
    {
    }
    label _endinit[1018057]
    (1920162 '=' error[1017852] _formal_tmp_error[1018047])
    (1018044 return _void[55])
  }
  function channel(true,dynamic,true)[1022014].init[1022872](ref arg this[1022878]:channel(true,dynamic,true)[1022014], const  ref arg f[1022886]:file[235668], ref arg error[1022888]:_ref(syserr)[949021], const in arg hints[1022892]:int(32)[95], const in arg start[1022898]:int(64)[13], const in arg end[1022904]:int(64)[13], const in arg local_style[1022906]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1023083]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022922 call init[1023096] this[1022878])
    const-val tmp[1022927]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1022929]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1022931 'move' call_tmp[1022929](1022934 call home[887138] f[1022886]))
    const-val call_tmp[1022937]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1023221]:BaseLocale[91204] "dead after last mention" "temp"
    (1023226 'move' _locale_tmp_[1023221](1023223 call _value[89984] call_tmp[1022929]))
    (1022939 'move' call_tmp[1022937](1022941 '_wide_get_locale' _locale_tmp_[1023221]))
    (1022943 'move' tmp[1022927] call_tmp[1022937])
    val rvfDerefTmp[2195841]:iostyle[231932] "temp"
    (2195844 'move' rvfDerefTmp[2195841] local_style[1022906])
    val rvfDerefTmp[2195854]:file[235668] "temp"
    (2195858 'move' rvfDerefTmp[2195854](2195856 'deref' f[1022886]))
    val isdirect[2200781]:bool[10] "temp"
    (2200786 'move' isdirect[2200781](2200783 call chpl_doDirectExecuteOn[187469] tmp[1022927]))
    if isdirect[2200781]
    {
      (2200790 call on_fn[1022950] this[1022878] hints[1022892] rvfDerefTmp[2195841] start[1022898] rvfDerefTmp[2195854] _formal_tmp_error[1023083] end[1022904])
    }
    {
      val _args_foron_fn[2200823]:_class_localson_fn[2200803] "temp"
      (2200827 'move' _args_foron_fn[2200823](2200825 'stack allocate class' _class_localson_fn[2200803]))
      (2200829 '.=' _args_foron_fn[2200823] _0_tmp[2200806] tmp[1022927])
      ref tmp[2200833]:channel(true,dynamic,true)[1022014] "temp"
      (2200837 'move' tmp[2200833](2200835 'set reference' this[1022878]))
      (2200839 '.=' _args_foron_fn[2200823] _1_this[2200808] tmp[2200833])
      (2200843 '.=' _args_foron_fn[2200823] _2_hints[2200810] hints[1022892])
      (2200847 '.=' _args_foron_fn[2200823] _3_rvfDerefTmp[2200812] rvfDerefTmp[2195841])
      (2200851 '.=' _args_foron_fn[2200823] _4_start[2200814] start[1022898])
      (2200855 '.=' _args_foron_fn[2200823] _5_rvfDerefTmp[2200816] rvfDerefTmp[2195854])
      ref tmp[2200859]:syserr[223672] "temp"
      (2200863 'move' tmp[2200859](2200861 'set reference' _formal_tmp_error[1023083]))
      (2200865 '.=' _args_foron_fn[2200823] _6__formal_tmp_error[2200818] tmp[2200859])
      (2200869 '.=' _args_foron_fn[2200823] _7_end[2200820] end[1022904])
      val _args_vforon_fn[2200873]:c_void_ptr[149] "temp"
      (2200877 'move' _args_vforon_fn[2200873](2200875 'cast_to_void_star' _args_foron_fn[2200823]))
      val _args_sizeon_fn[2200879]:int(64)[13] "temp"
      (2200883 'move' _args_sizeon_fn[2200879](2200881 'sizeof_bundle' _class_localson_fn[2200803]))
      on(2200963 call wrapon_fn[2200885] tmp[1022927] _args_vforon_fn[2200873] _args_sizeon_fn[2200879] _args_foron_fn[2200823])
    }
    {
    }
    label _endinit[1023093]
    (1920185 '=' error[1022888] _formal_tmp_error[1023083])
    (1023080 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1061585](ref arg this[1061591]:channel(true,dynamic,false)[1061136], const  ref arg f[1061599]:file[235668], ref arg error[1061601]:_ref(syserr)[949021], const in arg hints[1061605]:int(32)[95], const in arg start[1061611]:int(64)[13], const in arg end[1061617]:int(64)[13], const in arg local_style[1061619]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061796]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061635 call init[1061809] this[1061591])
    const-val tmp[1061640]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1061642]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1061644 'move' call_tmp[1061642](1061647 call home[887138] f[1061599]))
    const-val call_tmp[1061650]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061934]:BaseLocale[91204] "dead after last mention" "temp"
    (1061939 'move' _locale_tmp_[1061934](1061936 call _value[89984] call_tmp[1061642]))
    (1061652 'move' call_tmp[1061650](1061654 '_wide_get_locale' _locale_tmp_[1061934]))
    (1061656 'move' tmp[1061640] call_tmp[1061650])
    val rvfDerefTmp[2195949]:iostyle[231932] "temp"
    (2195952 'move' rvfDerefTmp[2195949] local_style[1061619])
    val rvfDerefTmp[2195962]:file[235668] "temp"
    (2195966 'move' rvfDerefTmp[2195962](2195964 'deref' f[1061599]))
    val isdirect[2201494]:bool[10] "temp"
    (2201499 'move' isdirect[2201494](2201496 call chpl_doDirectExecuteOn[187469] tmp[1061640]))
    if isdirect[2201494]
    {
      (2201503 call on_fn[1061663] rvfDerefTmp[2195949] this[1061591] start[1061611] rvfDerefTmp[2195962] _formal_tmp_error[1061796] end[1061617] hints[1061605])
    }
    {
      val _args_foron_fn[2201536]:_class_localson_fn[2201516] "temp"
      (2201540 'move' _args_foron_fn[2201536](2201538 'stack allocate class' _class_localson_fn[2201516]))
      (2201542 '.=' _args_foron_fn[2201536] _0_tmp[2201519] tmp[1061640])
      (2201546 '.=' _args_foron_fn[2201536] _1_rvfDerefTmp[2201521] rvfDerefTmp[2195949])
      ref tmp[2201550]:channel(true,dynamic,false)[1061136] "temp"
      (2201554 'move' tmp[2201550](2201552 'set reference' this[1061591]))
      (2201556 '.=' _args_foron_fn[2201536] _2_this[2201523] tmp[2201550])
      (2201560 '.=' _args_foron_fn[2201536] _3_start[2201525] start[1061611])
      (2201564 '.=' _args_foron_fn[2201536] _4_rvfDerefTmp[2201527] rvfDerefTmp[2195962])
      ref tmp[2201568]:syserr[223672] "temp"
      (2201572 'move' tmp[2201568](2201570 'set reference' _formal_tmp_error[1061796]))
      (2201574 '.=' _args_foron_fn[2201536] _5__formal_tmp_error[2201529] tmp[2201568])
      (2201578 '.=' _args_foron_fn[2201536] _6_end[2201531] end[1061617])
      (2201582 '.=' _args_foron_fn[2201536] _7_hints[2201533] hints[1061605])
      val _args_vforon_fn[2201586]:c_void_ptr[149] "temp"
      (2201590 'move' _args_vforon_fn[2201586](2201588 'cast_to_void_star' _args_foron_fn[2201536]))
      val _args_sizeon_fn[2201592]:int(64)[13] "temp"
      (2201596 'move' _args_sizeon_fn[2201592](2201594 'sizeof_bundle' _class_localson_fn[2201516]))
      on(2201676 call wrapon_fn[2201598] tmp[1061640] _args_vforon_fn[2201586] _args_sizeon_fn[2201592] _args_foron_fn[2201536])
    }
    {
    }
    label _endinit[1061806]
    (1921410 '=' error[1061601] _formal_tmp_error[1061796])
    (1061793 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].init[1081317](ref arg this[1081323]:channel(false,dynamic,false)[1080871], const  ref arg f[1081331]:file[235668], ref arg error[1081333]:_ref(syserr)[949021], const in arg hints[1081337]:int(32)[95], const in arg start[1081343]:int(64)[13], const in arg end[1081349]:int(64)[13], const in arg local_style[1081351]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081528]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081367 call init[1081541] this[1081323])
    const-val tmp[1081372]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1081374]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1081376 'move' call_tmp[1081374](1081379 call home[887138] f[1081331]))
    const-val call_tmp[1081382]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081666]:BaseLocale[91204] "dead after last mention" "temp"
    (1081671 'move' _locale_tmp_[1081666](1081668 call _value[89984] call_tmp[1081374]))
    (1081384 'move' call_tmp[1081382](1081386 '_wide_get_locale' _locale_tmp_[1081666]))
    (1081388 'move' tmp[1081372] call_tmp[1081382])
    val rvfDerefTmp[2196127]:file[235668] "temp"
    (2196131 'move' rvfDerefTmp[2196127](2196129 'deref' f[1081331]))
    val rvfDerefTmp[2196148]:iostyle[231932] "temp"
    (2196151 'move' rvfDerefTmp[2196148] local_style[1081351])
    val isdirect[2202715]:bool[10] "temp"
    (2202720 'move' isdirect[2202715](2202717 call chpl_doDirectExecuteOn[187469] tmp[1081372]))
    if isdirect[2202715]
    {
      (2202724 call on_fn[1081395] start[1081343] rvfDerefTmp[2196127] _formal_tmp_error[1081528] end[1081349] hints[1081337] rvfDerefTmp[2196148] this[1081323])
    }
    {
      val _args_foron_fn[2202757]:_class_localson_fn[2202737] "temp"
      (2202761 'move' _args_foron_fn[2202757](2202759 'stack allocate class' _class_localson_fn[2202737]))
      (2202763 '.=' _args_foron_fn[2202757] _0_tmp[2202740] tmp[1081372])
      (2202767 '.=' _args_foron_fn[2202757] _1_start[2202742] start[1081343])
      (2202771 '.=' _args_foron_fn[2202757] _2_rvfDerefTmp[2202744] rvfDerefTmp[2196127])
      ref tmp[2202775]:syserr[223672] "temp"
      (2202779 'move' tmp[2202775](2202777 'set reference' _formal_tmp_error[1081528]))
      (2202781 '.=' _args_foron_fn[2202757] _3__formal_tmp_error[2202746] tmp[2202775])
      (2202785 '.=' _args_foron_fn[2202757] _4_end[2202748] end[1081349])
      (2202789 '.=' _args_foron_fn[2202757] _5_hints[2202750] hints[1081337])
      (2202793 '.=' _args_foron_fn[2202757] _6_rvfDerefTmp[2202752] rvfDerefTmp[2196148])
      ref tmp[2202797]:channel(false,dynamic,false)[1080871] "temp"
      (2202801 'move' tmp[2202797](2202799 'set reference' this[1081323]))
      (2202803 '.=' _args_foron_fn[2202757] _7_this[2202754] tmp[2202797])
      val _args_vforon_fn[2202807]:c_void_ptr[149] "temp"
      (2202811 'move' _args_vforon_fn[2202807](2202809 'cast_to_void_star' _args_foron_fn[2202757]))
      val _args_sizeon_fn[2202813]:int(64)[13] "temp"
      (2202817 'move' _args_sizeon_fn[2202813](2202815 'sizeof_bundle' _class_localson_fn[2202737]))
      on(2202897 call wrapon_fn[2202819] tmp[1081372] _args_vforon_fn[2202807] _args_sizeon_fn[2202813] _args_foron_fn[2202757])
    }
    {
    }
    label _endinit[1081538]
    (1921571 '=' error[1081333] _formal_tmp_error[1081528])
    (1081525 return _void[55])
  }
  function _ref(channel(false,dynamic,true))[985825].deinit[1611203](ref arg this[1611209]:_ref(channel(false,dynamic,true))[985825]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1611215]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1611217]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1611219 'move' call_tmp[1611217](1611222 call home[1018213] this[1611209]))
    const-val call_tmp[1611225]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1611276]:BaseLocale[91204] "dead after last mention" "temp"
    (1611281 'move' _locale_tmp_[1611276](1611278 call _value[89984] call_tmp[1611217]))
    (1611227 'move' call_tmp[1611225](1611229 '_wide_get_locale' _locale_tmp_[1611276]))
    (1611231 'move' tmp[1611215] call_tmp[1611225])
    val isdirect[2210737]:bool[10] "temp"
    (2210742 'move' isdirect[2210737](2210739 call chpl_doDirectExecuteOn[187469] tmp[1611215]))
    if isdirect[2210737]
    {
      (2210746 call on_fn[1611238] this[1611209])
    }
    {
      val _args_foron_fn[2210761]:_class_localson_fn[2210753] "temp"
      (2210765 'move' _args_foron_fn[2210761](2210763 'stack allocate class' _class_localson_fn[2210753]))
      (2210767 '.=' _args_foron_fn[2210761] _0_tmp[2210756] tmp[1611215])
      ref tmp[2210771]:channel(false,dynamic,true)[985816] "temp"
      (2210775 'move' tmp[2210771](2210773 'set reference' this[1611209]))
      (2210777 '.=' _args_foron_fn[2210761] _1_this[2210758] tmp[2210771])
      val _args_vforon_fn[2210781]:c_void_ptr[149] "temp"
      (2210785 'move' _args_vforon_fn[2210781](2210783 'cast_to_void_star' _args_foron_fn[2210761]))
      val _args_sizeon_fn[2210787]:int(64)[13] "temp"
      (2210791 'move' _args_sizeon_fn[2210787](2210789 'sizeof_bundle' _class_localson_fn[2210753]))
      on(2210823 call wrapon_fn[2210793] tmp[1611215] _args_vforon_fn[2210781] _args_sizeon_fn[2210787] _args_foron_fn[2210761])
    }
    {
    }
    label _enddeinit[1891694]
    ref _field_destructor_tmp_[1891692]:_ref(locale)[949033] "temp"
    (1891699 'move' _field_destructor_tmp_[1891692](1891696 '.' this[1611209] _readWriteThisFromLocale[985813]))
    (1891701 call deinit[90188] _field_destructor_tmp_[1891692])
    ref _field_destructor_tmp_[1891704]:_ref(locale)[949033] "temp"
    (1891709 'move' _field_destructor_tmp_[1891704](1891706 '.' this[1611209] home[985804]))
    (1891711 call deinit[90188] _field_destructor_tmp_[1891704])
    (1611272 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023].deinit[1674182](ref arg this[1674188]:_ref(channel(true,dynamic,true))[1022023]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1674194]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1674196]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1674198 'move' call_tmp[1674196](1674201 call home[1023231] this[1674188]))
    const-val call_tmp[1674204]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1674255]:BaseLocale[91204] "dead after last mention" "temp"
    (1674260 'move' _locale_tmp_[1674255](1674257 call _value[89984] call_tmp[1674196]))
    (1674206 'move' call_tmp[1674204](1674208 '_wide_get_locale' _locale_tmp_[1674255]))
    (1674210 'move' tmp[1674194] call_tmp[1674204])
    val isdirect[2212528]:bool[10] "temp"
    (2212533 'move' isdirect[2212528](2212530 call chpl_doDirectExecuteOn[187469] tmp[1674194]))
    if isdirect[2212528]
    {
      (2212537 call on_fn[1674217] this[1674188])
    }
    {
      val _args_foron_fn[2212552]:_class_localson_fn[2212544] "temp"
      (2212556 'move' _args_foron_fn[2212552](2212554 'stack allocate class' _class_localson_fn[2212544]))
      (2212558 '.=' _args_foron_fn[2212552] _0_tmp[2212547] tmp[1674194])
      ref tmp[2212562]:channel(true,dynamic,true)[1022014] "temp"
      (2212566 'move' tmp[2212562](2212564 'set reference' this[1674188]))
      (2212568 '.=' _args_foron_fn[2212552] _1_this[2212549] tmp[2212562])
      val _args_vforon_fn[2212572]:c_void_ptr[149] "temp"
      (2212576 'move' _args_vforon_fn[2212572](2212574 'cast_to_void_star' _args_foron_fn[2212552]))
      val _args_sizeon_fn[2212578]:int(64)[13] "temp"
      (2212582 'move' _args_sizeon_fn[2212578](2212580 'sizeof_bundle' _class_localson_fn[2212544]))
      on(2212614 call wrapon_fn[2212584] tmp[1674194] _args_vforon_fn[2212572] _args_sizeon_fn[2212578] _args_foron_fn[2212552])
    }
    {
    }
    label _enddeinit[1891716]
    ref _field_destructor_tmp_[1891714]:_ref(locale)[949033] "temp"
    (1891721 'move' _field_destructor_tmp_[1891714](1891718 '.' this[1674188] _readWriteThisFromLocale[1022011]))
    (1891723 call deinit[90188] _field_destructor_tmp_[1891714])
    ref _field_destructor_tmp_[1891726]:_ref(locale)[949033] "temp"
    (1891731 'move' _field_destructor_tmp_[1891726](1891728 '.' this[1674188] home[1022002]))
    (1891733 call deinit[90188] _field_destructor_tmp_[1891726])
    (1674251 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].deinit[1676346](ref arg this[1676352]:_ref(channel(true,dynamic,false))[1061145]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1676358]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1676360]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1676362 'move' call_tmp[1676360](1676365 call home[1061944] this[1676352]))
    const-val call_tmp[1676368]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1676419]:BaseLocale[91204] "dead after last mention" "temp"
    (1676424 'move' _locale_tmp_[1676419](1676421 call _value[89984] call_tmp[1676360]))
    (1676370 'move' call_tmp[1676368](1676372 '_wide_get_locale' _locale_tmp_[1676419]))
    (1676374 'move' tmp[1676358] call_tmp[1676368])
    val isdirect[2212704]:bool[10] "temp"
    (2212709 'move' isdirect[2212704](2212706 call chpl_doDirectExecuteOn[187469] tmp[1676358]))
    if isdirect[2212704]
    {
      (2212713 call on_fn[1676381] this[1676352])
    }
    {
      val _args_foron_fn[2212728]:_class_localson_fn[2212720] "temp"
      (2212732 'move' _args_foron_fn[2212728](2212730 'stack allocate class' _class_localson_fn[2212720]))
      (2212734 '.=' _args_foron_fn[2212728] _0_tmp[2212723] tmp[1676358])
      ref tmp[2212738]:channel(true,dynamic,false)[1061136] "temp"
      (2212742 'move' tmp[2212738](2212740 'set reference' this[1676352]))
      (2212744 '.=' _args_foron_fn[2212728] _1_this[2212725] tmp[2212738])
      val _args_vforon_fn[2212748]:c_void_ptr[149] "temp"
      (2212752 'move' _args_vforon_fn[2212748](2212750 'cast_to_void_star' _args_foron_fn[2212728]))
      val _args_sizeon_fn[2212754]:int(64)[13] "temp"
      (2212758 'move' _args_sizeon_fn[2212754](2212756 'sizeof_bundle' _class_localson_fn[2212720]))
      on(2212790 call wrapon_fn[2212760] tmp[1676358] _args_vforon_fn[2212748] _args_sizeon_fn[2212754] _args_foron_fn[2212728])
    }
    {
    }
    label _enddeinit[1891750]
    ref _field_destructor_tmp_[1891748]:_ref(locale)[949033] "temp"
    (1891755 'move' _field_destructor_tmp_[1891748](1891752 '.' this[1676352] _readWriteThisFromLocale[1061133]))
    (1891757 call deinit[90188] _field_destructor_tmp_[1891748])
    ref _field_destructor_tmp_[1891760]:_ref(locale)[949033] "temp"
    (1891765 'move' _field_destructor_tmp_[1891760](1891762 '.' this[1676352] home[1061124]))
    (1891767 call deinit[90188] _field_destructor_tmp_[1891760])
    (1676415 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080880].deinit[1680600](ref arg this[1680606]:_ref(channel(false,dynamic,false))[1080880]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val tmp[1680612]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1680614]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1680616 'move' call_tmp[1680614](1680619 call home[1081676] this[1680606]))
    const-val call_tmp[1680622]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1680673]:BaseLocale[91204] "dead after last mention" "temp"
    (1680678 'move' _locale_tmp_[1680673](1680675 call _value[89984] call_tmp[1680614]))
    (1680624 'move' call_tmp[1680622](1680626 '_wide_get_locale' _locale_tmp_[1680673]))
    (1680628 'move' tmp[1680612] call_tmp[1680622])
    val isdirect[2212965]:bool[10] "temp"
    (2212970 'move' isdirect[2212965](2212967 call chpl_doDirectExecuteOn[187469] tmp[1680612]))
    if isdirect[2212965]
    {
      (2212974 call on_fn[1680635] this[1680606])
    }
    {
      val _args_foron_fn[2212989]:_class_localson_fn[2212981] "temp"
      (2212993 'move' _args_foron_fn[2212989](2212991 'stack allocate class' _class_localson_fn[2212981]))
      (2212995 '.=' _args_foron_fn[2212989] _0_tmp[2212984] tmp[1680612])
      ref tmp[2212999]:channel(false,dynamic,false)[1080871] "temp"
      (2213003 'move' tmp[2212999](2213001 'set reference' this[1680606]))
      (2213005 '.=' _args_foron_fn[2212989] _1_this[2212986] tmp[2212999])
      val _args_vforon_fn[2213009]:c_void_ptr[149] "temp"
      (2213013 'move' _args_vforon_fn[2213009](2213011 'cast_to_void_star' _args_foron_fn[2212989]))
      val _args_sizeon_fn[2213015]:int(64)[13] "temp"
      (2213019 'move' _args_sizeon_fn[2213015](2213017 'sizeof_bundle' _class_localson_fn[2212981]))
      on(2213051 call wrapon_fn[2213021] tmp[1680612] _args_vforon_fn[2213009] _args_sizeon_fn[2213015] _args_foron_fn[2212989])
    }
    {
    }
    label _enddeinit[1891772]
    ref _field_destructor_tmp_[1891770]:_ref(locale)[949033] "temp"
    (1891777 'move' _field_destructor_tmp_[1891770](1891774 '.' this[1680606] _readWriteThisFromLocale[1080868]))
    (1891779 call deinit[90188] _field_destructor_tmp_[1891770])
    ref _field_destructor_tmp_[1891782]:_ref(locale)[949033] "temp"
    (1891787 'move' _field_destructor_tmp_[1891782](1891784 '.' this[1680606] home[1080859]))
    (1891789 call deinit[90188] _field_destructor_tmp_[1891782])
    (1680669 return _void[55])
  }
  function _ref(ioNewline)[967769].init[893858](ref arg this[893861]:_ref(ioNewline)[967769], in arg skipWhitespaceOnly[893864]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893880 '.=' this[893861] skipWhitespaceOnly[238770] skipWhitespaceOnly[893864])
    (893884 return _void[55])
  }
  function init_default_skipWhitespaceOnly[1552015]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1552017]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val skipWhitespaceOnly[1552022]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1552026]:bool[10] "dead after last mention" "temp"
    val _formal_type[1552028]:bool[10] "dead after last mention" "temp" "type variable"
    (1552036 'move' tmp[1552026] 0)
    (1552039 'move' skipWhitespaceOnly[1552022] tmp[1552026])
    (1552044 'move' ret[1552017] skipWhitespaceOnly[1552022])
    (1552020 return ret[1552017])
  }
  function _ref(ioNewline)[967769].deinit[893924](const  ref arg this[893928]:_ref(ioNewline)[967769]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved"
  {
    (893936 return _void[55])
  }
  type ioNewline[238789] val skipWhitespaceOnly[238770]:bool[10]
  function _ref(ioLiteral)[967779].val[894935](ref arg this[894939]:_ref(ioLiteral)[967779]) ref : _ref(string)[938128] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[894949]:_ref(string)[938128] "dead after last mention" "RVV" "temp"
    ref call_tmp[894956]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
    (894959 'move' call_tmp[894956](894943 '.' this[894939] val[238816]))
    (894954 'move' ret[894949] call_tmp[894956])
    (894951 return ret[894949])
  }
  function _ref(ioLiteral)[967779].init[894987](ref arg this[894990]:_ref(ioLiteral)[967779], const  ref arg val[894993]:string[26], in arg ignoreWhiteSpace[895006]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_val[1565371]:string[26] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1565374 'move' _formal_tmp_val[1565371] val[894993])
    (895022 '.=' this[894990] val[238816] _formal_tmp_val[1565371])
    (895025 '.=' this[894990] ignoreWhiteSpace[238822] ignoreWhiteSpace[895006])
    (895029 return _void[55])
  }
  function init_default_ignoreWhiteSpace[1565399]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "fn synchronization free" "was compiler generated"
  {
    val ret[1565401]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val ignoreWhiteSpace[1565406]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1565410]:bool[10] "dead after last mention" "temp"
    val _formal_type[1565412]:bool[10] "dead after last mention" "temp" "type variable"
    (1565420 'move' tmp[1565410] 1)
    (1565423 'move' ignoreWhiteSpace[1565406] tmp[1565410])
    (1565428 'move' ret[1565401] ignoreWhiteSpace[1565406])
    (1565404 return ret[1565401])
  }
  function _ref(ioLiteral)[967779].deinit[895096](const  ref arg this[895100]:_ref(ioLiteral)[967779]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free"
  {
    label _enddeinit[1890596]
    ref _field_destructor_tmp_[1890594]:_ref(string)[938128] "temp"
    (1890601 'move' _field_destructor_tmp_[1890594](1890598 '.' this[895100] val[238816]))
    (1890603 call deinit[30834] _field_destructor_tmp_[1890594])
    (895108 return _void[55])
  }
  type ioLiteral[238841] val val[238816]:string[26] val ignoreWhiteSpace[238822]:bool[10]
  function _cast[238854](const  ref arg x[238857]:ioLiteral[238841], ref arg _retArg[1907356]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "inline" "no doc" "resolved" "fn synchronization free"
  {
    val _formal_type_tmp_[1879498]:string[26] "temp"
    const-val ret[534958]:string[26] "dead after last mention" "RVV" "temp"
    ref call_tmp[717038]:_ref(string)[938128] "dead after last mention" "maybe param" "reference to a const" "temp"
    (717041 'move' call_tmp[717038](238861 call val[894935] x[238857]))
    (534963 'move' ret[534958](1907360 call chpl__initCopy[981537] call_tmp[717038]))
    (1907358 '=' _retArg[1907356] ret[534958])
    (1907362 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._ch_ioerror[1063054](const  ref arg this[1063060]:_ref(channel(true,dynamic,false))[1061145], const in arg error[1063062]:syserr[223672], const  ref arg msg[1063064]:string[26], ref arg error_out[1885340]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1063070]:string[26] "dead at end of block" "insert auto destroy"
    (1063072 'move' path[1063070] "unknown")
    val call_tmp[1063084]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1063091]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063093 'move' offset[1063091] -1)
    const-val tmp[1063098]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1063100]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1063102 'move' call_tmp[1063100](1063105 call home[1061944] this[1063060]))
    const-val call_tmp[1063108]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1063260]:BaseLocale[91204] "dead after last mention" "temp"
    (1063265 'move' _locale_tmp_[1063260](1063262 call _value[89984] call_tmp[1063100]))
    (1063110 'move' call_tmp[1063108](1063112 '_wide_get_locale' _locale_tmp_[1063260]))
    (1063114 'move' tmp[1063098] call_tmp[1063108])
    val error[1885345]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885347 'move' error[1885345] nil[44])
    val isdirect[2201963]:bool[10] "temp"
    (2201968 'move' isdirect[2201963](2201965 call chpl_doDirectExecuteOn[187469] tmp[1063098]))
    if isdirect[2201963]
    {
      (2201972 call on_fn[1063121] this[1063060] path[1063070] offset[1063091] error[1885345])
    }
    {
      val _args_foron_fn[2201996]:_class_localson_fn[2201982] "temp"
      (2202000 'move' _args_foron_fn[2201996](2201998 'stack allocate class' _class_localson_fn[2201982]))
      (2202002 '.=' _args_foron_fn[2201996] _0_tmp[2201985] tmp[1063098])
      ref tmp[2202006]:channel(true,dynamic,false)[1061136] "temp"
      (2202010 'move' tmp[2202006](2202008 'set reference' this[1063060]))
      (2202012 '.=' _args_foron_fn[2201996] _1_this[2201987] tmp[2202006])
      ref tmp[2202016]:string[26] "temp"
      (2202020 'move' tmp[2202016](2202018 'set reference' path[1063070]))
      (2202022 '.=' _args_foron_fn[2201996] _2_path[2201989] tmp[2202016])
      ref tmp[2202026]:int(64)[13] "temp"
      (2202030 'move' tmp[2202026](2202028 'set reference' offset[1063091]))
      (2202032 '.=' _args_foron_fn[2201996] _3_offset[2201991] tmp[2202026])
      ref tmp[2202036]:Error[167984] "temp"
      (2202040 'move' tmp[2202036](2202038 'set reference' error[1885345]))
      (2202042 '.=' _args_foron_fn[2201996] _4_error[2201993] tmp[2202036])
      val _args_vforon_fn[2202046]:c_void_ptr[149] "temp"
      (2202050 'move' _args_vforon_fn[2202046](2202048 'cast_to_void_star' _args_foron_fn[2201996]))
      val _args_sizeon_fn[2202052]:int(64)[13] "temp"
      (2202056 'move' _args_sizeon_fn[2202052](2202054 'sizeof_bundle' _class_localson_fn[2201982]))
      on(2202112 call wrapon_fn[2202058] tmp[1063098] _args_vforon_fn[2202046] _args_sizeon_fn[2202052] _args_foron_fn[2201996])
    }
    val errorExists[2222672]:bool[10] "temp"
    (2222677 'move' errorExists[2222672](2222674 '!=' error[1885345] nil[44]))
    if errorExists[2222672]
    {
      (1885351 '=' error_out[1885340] error[1885345])
      (1921413 call chpl__autoDestroy[1601673] path[1063070])
      gotoErrorHandlingReturn _end_ch_ioerror[1885342] _end_ch_ioerror[1885342]
    }
    {
    }
    {
      val error[1885359]:Error[167984] "error variable" "temp"
      (1885368 'move' error[1885359] nil[44])
      (1063244 call ioerror[266229] error[1063062] msg[1063064] path[1063070] offset[1063091] error[1885359])
      val errorExists[2222680]:bool[10] "temp"
      (2222685 'move' errorExists[2222680](2222682 '!=' error[1885359] nil[44]))
      if errorExists[2222680]
      {
        gotoErrorHandling handler[1885360] handler[1885360]
      }
      label handler[1885360]
      const-val shouldHandleError[1885379]:bool[10] "temp"
      val errorExists[2222688]:bool[10] "temp"
      (2222693 'move' errorExists[2222688](2222690 '!=' error[1885359] nil[44]))
      (1885383 'move' shouldHandleError[1885379] errorExists[2222688])
      if shouldHandleError[1885379]
      {
        (1885375 '=' error_out[1885340] error[1885359])
        (1921416 call chpl__autoDestroy[1601673] path[1063070])
        gotoErrorHandlingReturn _end_ch_ioerror[1885342] _end_ch_ioerror[1885342]
      }
    }
    (1921419 call chpl__autoDestroy[1601673] path[1063070])
    label _end_ch_ioerror[1885342]
    (1063253 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080880]._ch_ioerror[1082738](const  ref arg this[1082744]:_ref(channel(false,dynamic,false))[1080880], const in arg error[1082746]:syserr[223672], const  ref arg msg[1082748]:string[26], ref arg error_out[1886136]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082754]:string[26] "dead at end of block" "insert auto destroy"
    (1082756 'move' path[1082754] "unknown")
    val call_tmp[1082768]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1082775]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082777 'move' offset[1082775] -1)
    const-val tmp[1082782]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1082784]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1082786 'move' call_tmp[1082784](1082789 call home[1081676] this[1082744]))
    const-val call_tmp[1082792]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082944]:BaseLocale[91204] "dead after last mention" "temp"
    (1082949 'move' _locale_tmp_[1082944](1082946 call _value[89984] call_tmp[1082784]))
    (1082794 'move' call_tmp[1082792](1082796 '_wide_get_locale' _locale_tmp_[1082944]))
    (1082798 'move' tmp[1082782] call_tmp[1082792])
    val error[1886141]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1886143 'move' error[1886141] nil[44])
    val rvfDerefTmp[2196189]:channel(false,dynamic,false)[1080871] "temp"
    (2196193 'move' rvfDerefTmp[2196189](2196191 'deref' this[1082744]))
    val isdirect[2203184]:bool[10] "temp"
    (2203189 'move' isdirect[2203184](2203186 call chpl_doDirectExecuteOn[187469] tmp[1082782]))
    if isdirect[2203184]
    {
      (2203193 call on_fn[1082805] rvfDerefTmp[2196189] path[1082754] offset[1082775] error[1886141])
    }
    {
      val _args_foron_fn[2203217]:_class_localson_fn[2203203] "temp"
      (2203221 'move' _args_foron_fn[2203217](2203219 'stack allocate class' _class_localson_fn[2203203]))
      (2203223 '.=' _args_foron_fn[2203217] _0_tmp[2203206] tmp[1082782])
      (2203227 '.=' _args_foron_fn[2203217] _1_rvfDerefTmp[2203208] rvfDerefTmp[2196189])
      ref tmp[2203231]:string[26] "temp"
      (2203235 'move' tmp[2203231](2203233 'set reference' path[1082754]))
      (2203237 '.=' _args_foron_fn[2203217] _2_path[2203210] tmp[2203231])
      ref tmp[2203241]:int(64)[13] "temp"
      (2203245 'move' tmp[2203241](2203243 'set reference' offset[1082775]))
      (2203247 '.=' _args_foron_fn[2203217] _3_offset[2203212] tmp[2203241])
      ref tmp[2203251]:Error[167984] "temp"
      (2203255 'move' tmp[2203251](2203253 'set reference' error[1886141]))
      (2203257 '.=' _args_foron_fn[2203217] _4_error[2203214] tmp[2203251])
      val _args_vforon_fn[2203261]:c_void_ptr[149] "temp"
      (2203265 'move' _args_vforon_fn[2203261](2203263 'cast_to_void_star' _args_foron_fn[2203217]))
      val _args_sizeon_fn[2203267]:int(64)[13] "temp"
      (2203271 'move' _args_sizeon_fn[2203267](2203269 'sizeof_bundle' _class_localson_fn[2203203]))
      on(2203327 call wrapon_fn[2203273] tmp[1082782] _args_vforon_fn[2203261] _args_sizeon_fn[2203267] _args_foron_fn[2203217])
    }
    val errorExists[2223032]:bool[10] "temp"
    (2223037 'move' errorExists[2223032](2223034 '!=' error[1886141] nil[44]))
    if errorExists[2223032]
    {
      (1886147 '=' error_out[1886136] error[1886141])
      (1921574 call chpl__autoDestroy[1601673] path[1082754])
      gotoErrorHandlingReturn _end_ch_ioerror[1886138] _end_ch_ioerror[1886138]
    }
    {
    }
    {
      val error[1886155]:Error[167984] "error variable" "temp"
      (1886164 'move' error[1886155] nil[44])
      (1082928 call ioerror[266229] error[1082746] msg[1082748] path[1082754] offset[1082775] error[1886155])
      val errorExists[2223040]:bool[10] "temp"
      (2223045 'move' errorExists[2223040](2223042 '!=' error[1886155] nil[44]))
      if errorExists[2223040]
      {
        gotoErrorHandling handler[1886156] handler[1886156]
      }
      label handler[1886156]
      const-val shouldHandleError[1886175]:bool[10] "temp"
      val errorExists[2223048]:bool[10] "temp"
      (2223053 'move' errorExists[2223048](2223050 '!=' error[1886155] nil[44]))
      (1886179 'move' shouldHandleError[1886175] errorExists[2223048])
      if shouldHandleError[1886175]
      {
        (1886171 '=' error_out[1886136] error[1886155])
        (1921577 call chpl__autoDestroy[1601673] path[1082754])
        gotoErrorHandlingReturn _end_ch_ioerror[1886138] _end_ch_ioerror[1886138]
      }
    }
    (1921580 call chpl__autoDestroy[1601673] path[1082754])
    label _end_ch_ioerror[1886138]
    (1082937 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._ch_ioerror[1552948](const  ref arg this[1552954]:_ref(channel(true,dynamic,true))[1022023], const in arg error[1552956]:syserr[223672], const  ref arg msg[1552958]:string[26], ref arg error_out[1888054]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1552964]:string[26] "dead at end of block" "insert auto destroy"
    (1552966 'move' path[1552964] "unknown")
    val call_tmp[1552978]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    val offset[1552985]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1552987 'move' offset[1552985] -1)
    const-val tmp[1552992]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1552994]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1552996 'move' call_tmp[1552994](1552999 call home[1023231] this[1552954]))
    const-val call_tmp[1553002]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1553154]:BaseLocale[91204] "dead after last mention" "temp"
    (1553159 'move' _locale_tmp_[1553154](1553156 call _value[89984] call_tmp[1552994]))
    (1553004 'move' call_tmp[1553002](1553006 '_wide_get_locale' _locale_tmp_[1553154]))
    (1553008 'move' tmp[1552992] call_tmp[1553002])
    val error[1888059]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888061 'move' error[1888059] nil[44])
    val rvfDerefTmp[2196754]:channel(true,dynamic,true)[1022014] "temp"
    (2196758 'move' rvfDerefTmp[2196754](2196756 'deref' this[1552954]))
    val isdirect[2208772]:bool[10] "temp"
    (2208777 'move' isdirect[2208772](2208774 call chpl_doDirectExecuteOn[187469] tmp[1552992]))
    if isdirect[2208772]
    {
      (2208781 call on_fn[1553015] rvfDerefTmp[2196754] path[1552964] offset[1552985] error[1888059])
    }
    {
      val _args_foron_fn[2208805]:_class_localson_fn[2208791] "temp"
      (2208809 'move' _args_foron_fn[2208805](2208807 'stack allocate class' _class_localson_fn[2208791]))
      (2208811 '.=' _args_foron_fn[2208805] _0_tmp[2208794] tmp[1552992])
      (2208815 '.=' _args_foron_fn[2208805] _1_rvfDerefTmp[2208796] rvfDerefTmp[2196754])
      ref tmp[2208819]:string[26] "temp"
      (2208823 'move' tmp[2208819](2208821 'set reference' path[1552964]))
      (2208825 '.=' _args_foron_fn[2208805] _2_path[2208798] tmp[2208819])
      ref tmp[2208829]:int(64)[13] "temp"
      (2208833 'move' tmp[2208829](2208831 'set reference' offset[1552985]))
      (2208835 '.=' _args_foron_fn[2208805] _3_offset[2208800] tmp[2208829])
      ref tmp[2208839]:Error[167984] "temp"
      (2208843 'move' tmp[2208839](2208841 'set reference' error[1888059]))
      (2208845 '.=' _args_foron_fn[2208805] _4_error[2208802] tmp[2208839])
      val _args_vforon_fn[2208849]:c_void_ptr[149] "temp"
      (2208853 'move' _args_vforon_fn[2208849](2208851 'cast_to_void_star' _args_foron_fn[2208805]))
      val _args_sizeon_fn[2208855]:int(64)[13] "temp"
      (2208859 'move' _args_sizeon_fn[2208855](2208857 'sizeof_bundle' _class_localson_fn[2208791]))
      on(2208915 call wrapon_fn[2208861] tmp[1552992] _args_vforon_fn[2208849] _args_sizeon_fn[2208855] _args_foron_fn[2208805])
    }
    val errorExists[2224016]:bool[10] "temp"
    (2224021 'move' errorExists[2224016](2224018 '!=' error[1888059] nil[44]))
    if errorExists[2224016]
    {
      (1888065 '=' error_out[1888054] error[1888059])
      (1927221 call chpl__autoDestroy[1601673] path[1552964])
      gotoErrorHandlingReturn _end_ch_ioerror[1888056] _end_ch_ioerror[1888056]
    }
    {
    }
    {
      val error[1888073]:Error[167984] "error variable" "temp"
      (1888082 'move' error[1888073] nil[44])
      (1553138 call ioerror[266229] error[1552956] msg[1552958] path[1552964] offset[1552985] error[1888073])
      val errorExists[2224024]:bool[10] "temp"
      (2224029 'move' errorExists[2224024](2224026 '!=' error[1888073] nil[44]))
      if errorExists[2224024]
      {
        gotoErrorHandling handler[1888074] handler[1888074]
      }
      label handler[1888074]
      const-val shouldHandleError[1888093]:bool[10] "temp"
      val errorExists[2224032]:bool[10] "temp"
      (2224037 'move' errorExists[2224032](2224034 '!=' error[1888073] nil[44]))
      (1888097 'move' shouldHandleError[1888093] errorExists[2224032])
      if shouldHandleError[1888093]
      {
        (1888089 '=' error_out[1888054] error[1888073])
        (1927224 call chpl__autoDestroy[1601673] path[1552964])
        gotoErrorHandlingReturn _end_ch_ioerror[1888056] _end_ch_ioerror[1888056]
      }
    }
    (1927227 call chpl__autoDestroy[1601673] path[1552964])
    label _end_ch_ioerror[1888056]
    (1553147 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].lock[1066617](const  ref arg this[1066623]:_ref(channel(true,dynamic,false))[1061145], ref arg error_out[1885532]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1066629]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1066631 'move' call_tmp[1066629](1066634 call ENOERR[223742]))
    const-val err[1066635]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1066784]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1067008 call =[224221] init_coerce_tmp[1066784] call_tmp[1066629])
    (1066637 'move' err[1066635] init_coerce_tmp[1066784])
    ref call_tmp[1066642]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1066644 'move' call_tmp[1066642](1066647 call _channel_internal[1061978] this[1066623]))
    const-val call_tmp[1066650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1066791]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1066795 'move' coerce_tmp[1066791](1066793 'deref' call_tmp[1066642]))
    (1066652 'move' call_tmp[1066650](1066655 call is_c_nil[1062716] coerce_tmp[1066791]))
    const-val call_tmp[1066657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066659 'move' call_tmp[1066657] call_tmp[1066650])
    if call_tmp[1066657]
    {
      const-val call_tmp[1066666]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1066800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1066806 'move' coerce_tmp[1066800](1066802 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908456]:owned SystemError[1000427] "temp"
      (1066674 call fromSyserr[1017302] coerce_tmp[1066800] "Operation attempted on an invalid channel" ret_tmp[1908456])
      (1908459 'move' call_tmp[1066666] ret_tmp[1908456])
      val call_tmp[1066677]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1066809]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908396]:owned Error[966647] "temp"
      (1066811 call _cast[1015936] call_tmp[1066666] ret_tmp[1908396])
      (1908399 'move' coerce_tmp[1066809] ret_tmp[1908396])
      const-val _formal_tmp_in_err[1066988]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1066992 'move' _formal_tmp_in_err[1066988] coerce_tmp[1066809])
      (1066679 'move' call_tmp[1066677](1066682 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1066988]))
      {
        val castedError[1885537]:Error[167984] "temp"
        (1885543 'move' castedError[1885537] call_tmp[1066677])
        (1885545 '=' error_out[1885532] castedError[1885537])
        gotoErrorHandlingReturn _endlock[1885534] _endlock[1885534]
      }
    }
    const-val call_tmp[1066759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066761 'move' call_tmp[1066759](1066764 call _cond_test[224069] err[1066635]))
    if call_tmp[1066759]
    {
      {
        val error[1885549]:Error[167984] "error variable" "temp"
        (1885558 'move' error[1885549] nil[44])
        (1066773 call _ch_ioerror[1063054] this[1066623] err[1066635] "in lock" error[1885549])
        val errorExists[2222760]:bool[10] "temp"
        (2222765 'move' errorExists[2222760](2222762 '!=' error[1885549] nil[44]))
        if errorExists[2222760]
        {
          gotoErrorHandling handler[1885550] handler[1885550]
        }
        label handler[1885550]
        const-val shouldHandleError[1885569]:bool[10] "temp"
        val errorExists[2222768]:bool[10] "temp"
        (2222773 'move' errorExists[2222768](2222770 '!=' error[1885549] nil[44]))
        (1885573 'move' shouldHandleError[1885569] errorExists[2222768])
        if shouldHandleError[1885569]
        {
          (1885565 '=' error_out[1885532] error[1885549])
          gotoErrorHandlingReturn _endlock[1885534] _endlock[1885534]
        }
      }
    }
    label _endlock[1885534]
    (1066780 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023].lock[1552488](const  ref arg this[1552494]:_ref(channel(true,dynamic,true))[1022023], ref arg error_out[1888009]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1552500]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1552502 'move' call_tmp[1552500](1552505 call ENOERR[223742]))
    val err[1552506]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1552655]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1553231 call =[224221] init_coerce_tmp[1552655] call_tmp[1552500])
    (1552508 'move' err[1552506] init_coerce_tmp[1552655])
    ref call_tmp[1552513]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1552515 'move' call_tmp[1552513](1552518 call _channel_internal[1023265] this[1552494]))
    const-val call_tmp[1552521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1552662]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1552666 'move' coerce_tmp[1552662](1552664 'deref' call_tmp[1552513]))
    (1552523 'move' call_tmp[1552521](1552526 call is_c_nil[1062716] coerce_tmp[1552662]))
    const-val call_tmp[1552528]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1552530 'move' call_tmp[1552528] call_tmp[1552521])
    if call_tmp[1552528]
    {
      const-val call_tmp[1552537]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1552671]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552677 'move' coerce_tmp[1552671](1552673 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908468]:owned SystemError[1000427] "temp"
      (1552545 call fromSyserr[1017302] coerce_tmp[1552671] "Operation attempted on an invalid channel" ret_tmp[1908468])
      (1908471 'move' call_tmp[1552537] ret_tmp[1908468])
      val call_tmp[1552548]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1552680]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908408]:owned Error[966647] "temp"
      (1552682 call _cast[1015936] call_tmp[1552537] ret_tmp[1908408])
      (1908411 'move' coerce_tmp[1552680] ret_tmp[1908408])
      const-val _formal_tmp_in_err[1552859]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1552863 'move' _formal_tmp_in_err[1552859] coerce_tmp[1552680])
      (1552550 'move' call_tmp[1552548](1552553 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1552859]))
      {
        val castedError[1888014]:Error[167984] "temp"
        (1888020 'move' castedError[1888014] call_tmp[1552548])
        (1888022 '=' error_out[1888009] castedError[1888014])
        gotoErrorHandlingReturn _endlock[1888011] _endlock[1888011]
      }
    }
    {
      const-val tmp[1552575]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1552577]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1552579 'move' call_tmp[1552577](1552582 call home[1023231] this[1552494]))
      const-val call_tmp[1552585]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1552928]:BaseLocale[91204] "dead after last mention" "temp"
      (1552933 'move' _locale_tmp_[1552928](1552930 call _value[89984] call_tmp[1552577]))
      (1552587 'move' call_tmp[1552585](1552589 '_wide_get_locale' _locale_tmp_[1552928]))
      (1552591 'move' tmp[1552575] call_tmp[1552585])
      val rvfDerefTmp[2196740]:channel(true,dynamic,true)[1022014] "temp"
      (2196744 'move' rvfDerefTmp[2196740](2196742 'deref' this[1552494]))
      val isdirect[2208666]:bool[10] "temp"
      (2208671 'move' isdirect[2208666](2208668 call chpl_doDirectExecuteOn[187469] tmp[1552575]))
      if isdirect[2208666]
      {
        (2208675 call on_fn[1552598] rvfDerefTmp[2196740] err[1552506])
      }
      {
        val _args_foron_fn[2208693]:_class_localson_fn[2208683] "temp"
        (2208697 'move' _args_foron_fn[2208693](2208695 'stack allocate class' _class_localson_fn[2208683]))
        (2208699 '.=' _args_foron_fn[2208693] _0_tmp[2208686] tmp[1552575])
        (2208703 '.=' _args_foron_fn[2208693] _1_rvfDerefTmp[2208688] rvfDerefTmp[2196740])
        ref tmp[2208707]:syserr[223672] "temp"
        (2208711 'move' tmp[2208707](2208709 'set reference' err[1552506]))
        (2208713 '.=' _args_foron_fn[2208693] _2_err[2208690] tmp[2208707])
        val _args_vforon_fn[2208717]:c_void_ptr[149] "temp"
        (2208721 'move' _args_vforon_fn[2208717](2208719 'cast_to_void_star' _args_foron_fn[2208693]))
        val _args_sizeon_fn[2208723]:int(64)[13] "temp"
        (2208727 'move' _args_sizeon_fn[2208723](2208725 'sizeof_bundle' _class_localson_fn[2208683]))
        on(2208767 call wrapon_fn[2208729] tmp[1552575] _args_vforon_fn[2208717] _args_sizeon_fn[2208723] _args_foron_fn[2208693])
      }
      {
      }
    }
    const-val call_tmp[1552630]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1552632 'move' call_tmp[1552630](1552635 call _cond_test[224069] err[1552506]))
    if call_tmp[1552630]
    {
      {
        val error[1888026]:Error[167984] "error variable" "temp"
        (1888035 'move' error[1888026] nil[44])
        (1552644 call _ch_ioerror[1552948] this[1552494] err[1552506] "in lock" error[1888026])
        val errorExists[2224000]:bool[10] "temp"
        (2224005 'move' errorExists[2224000](2224002 '!=' error[1888026] nil[44]))
        if errorExists[2224000]
        {
          gotoErrorHandling handler[1888027] handler[1888027]
        }
        label handler[1888027]
        const-val shouldHandleError[1888046]:bool[10] "temp"
        val errorExists[2224008]:bool[10] "temp"
        (2224013 'move' errorExists[2224008](2224010 '!=' error[1888026] nil[44]))
        (1888050 'move' shouldHandleError[1888046] errorExists[2224008])
        if shouldHandleError[1888046]
        {
          (1888042 '=' error_out[1888009] error[1888026])
          gotoErrorHandlingReturn _endlock[1888011] _endlock[1888011]
        }
      }
    }
    label _endlock[1888011]
    (1552651 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].unlock[1067014](const  ref arg this[1067020]:_ref(channel(true,dynamic,false))[1061145]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free" "no return value for void"
  {
    (1067088 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023].unlock[1553237](const  ref arg this[1553243]:_ref(channel(true,dynamic,true))[1022023]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      const-val tmp[1553266]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1553268]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1553270 'move' call_tmp[1553268](1553273 call home[1023231] this[1553243]))
      const-val call_tmp[1553276]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1553319]:BaseLocale[91204] "dead after last mention" "temp"
      (1553324 'move' _locale_tmp_[1553319](1553321 call _value[89984] call_tmp[1553268]))
      (1553278 'move' call_tmp[1553276](1553280 '_wide_get_locale' _locale_tmp_[1553319]))
      (1553282 'move' tmp[1553266] call_tmp[1553276])
      val rvfDerefTmp[2196768]:channel(true,dynamic,true)[1022014] "temp"
      (2196772 'move' rvfDerefTmp[2196768](2196770 'deref' this[1553243]))
      val isdirect[2208920]:bool[10] "temp"
      (2208925 'move' isdirect[2208920](2208922 call chpl_doDirectExecuteOn[187469] tmp[1553266]))
      if isdirect[2208920]
      {
        (2208929 call on_fn[1553289] rvfDerefTmp[2196768])
      }
      {
        val _args_foron_fn[2208944]:_class_localson_fn[2208936] "temp"
        (2208948 'move' _args_foron_fn[2208944](2208946 'stack allocate class' _class_localson_fn[2208936]))
        (2208950 '.=' _args_foron_fn[2208944] _0_tmp[2208939] tmp[1553266])
        (2208954 '.=' _args_foron_fn[2208944] _1_rvfDerefTmp[2208941] rvfDerefTmp[2196768])
        val _args_vforon_fn[2208958]:c_void_ptr[149] "temp"
        (2208962 'move' _args_vforon_fn[2208958](2208960 'cast_to_void_star' _args_foron_fn[2208944]))
        val _args_sizeon_fn[2208964]:int(64)[13] "temp"
        (2208968 'move' _args_sizeon_fn[2208964](2208966 'sizeof_bundle' _class_localson_fn[2208936]))
        on(2209000 call wrapon_fn[2208970] tmp[1553266] _args_vforon_fn[2208958] _args_sizeon_fn[2208964] _args_foron_fn[2208944])
      }
      {
      }
    }
    (1553311 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].offset[1080337](const  ref arg this[1080343]:_ref(channel(true,dynamic,false))[1061145]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080349]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080358]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1080360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080488 'move' ret[1080358] 0)
    const-val tmp[1080371]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1080373]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1080375 'move' call_tmp[1080373](1080378 call home[1061944] this[1080343]))
    const-val call_tmp[1080381]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1080461]:BaseLocale[91204] "dead after last mention" "temp"
    (1080466 'move' _locale_tmp_[1080461](1080463 call _value[89984] call_tmp[1080373]))
    (1080383 'move' call_tmp[1080381](1080385 '_wide_get_locale' _locale_tmp_[1080461]))
    (1080387 'move' tmp[1080371] call_tmp[1080381])
    val rvfDerefTmp[2196070]:channel(true,dynamic,false)[1061136] "temp"
    (2196074 'move' rvfDerefTmp[2196070](2196072 'deref' this[1080343]))
    val isdirect[2202401]:bool[10] "temp"
    (2202406 'move' isdirect[2202401](2202403 call chpl_doDirectExecuteOn[187469] tmp[1080371]))
    if isdirect[2202401]
    {
      (2202410 call on_fn[1080394] rvfDerefTmp[2196070] ret[1080358])
    }
    {
      val _args_foron_fn[2202428]:_class_localson_fn[2202418] "temp"
      (2202432 'move' _args_foron_fn[2202428](2202430 'stack allocate class' _class_localson_fn[2202418]))
      (2202434 '.=' _args_foron_fn[2202428] _0_tmp[2202421] tmp[1080371])
      (2202438 '.=' _args_foron_fn[2202428] _1_rvfDerefTmp[2202423] rvfDerefTmp[2196070])
      ref tmp[2202442]:int(64)[13] "temp"
      (2202446 'move' tmp[2202442](2202444 'set reference' ret[1080358]))
      (2202448 '.=' _args_foron_fn[2202428] _2_ret[2202425] tmp[2202442])
      val _args_vforon_fn[2202452]:c_void_ptr[149] "temp"
      (2202456 'move' _args_vforon_fn[2202452](2202454 'cast_to_void_star' _args_foron_fn[2202428]))
      val _args_sizeon_fn[2202458]:int(64)[13] "temp"
      (2202462 'move' _args_sizeon_fn[2202458](2202460 'sizeof_bundle' _class_localson_fn[2202418]))
      on(2202502 call wrapon_fn[2202464] tmp[1080371] _args_vforon_fn[2202452] _args_sizeon_fn[2202458] _args_foron_fn[2202428])
    }
    {
    }
    val call_tmp[1080437]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080485 'move' ret[1080349] ret[1080358])
    gotoReturn _end_offset[1080453] _end_offset[1080453]
    label _end_offset[1080453]
    (1080455 return ret[1080349])
  }
  function _ref(channel(true,dynamic,false))[1061145].readWriteThisFromLocale[1066474](const  ref arg this[1066480]:_ref(channel(true,dynamic,false))[1061145], ref arg _retArg[1909312]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved" "fn synchronization free"
  {
    const-val ret[1066482]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1066490]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1066492 'move' call_tmp[1066490](1066495 call _readWriteThisFromLocale[1066505] this[1066480]))
    (1066498 'move' ret[1066482](1909316 call chpl__initCopy[1601692] call_tmp[1066490]))
    (1909314 '=' _retArg[1909312] ret[1066482])
    (1909318 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023].readWriteThisFromLocale[1552415](const  ref arg this[1552421]:_ref(channel(true,dynamic,true))[1022023], ref arg _retArg[1916853]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1552423]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[1552431]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1552433 'move' call_tmp[1552431](1552436 call _readWriteThisFromLocale[1552446] this[1552421]))
    (1552439 'move' ret[1552423](1916857 call chpl__initCopy[1601692] call_tmp[1552431]))
    (1916855 '=' _retArg[1916853] ret[1552423])
    (1916859 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].getLocaleOfIoRequest[1066400](const  ref arg this[1066406]:_ref(channel(true,dynamic,false))[1061145], ref arg _retArg[1909300]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1066408]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066416]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909306]:locale[28] "temp"
    (1066424 call readWriteThisFromLocale[1066474] this[1066406] ret_tmp[1909306])
    (1909309 'move' call_tmp[1066416] ret_tmp[1909306])
    val ret[1066425]:locale[28] "dead at end of block" "insert auto destroy"
    (1066427 'move' ret[1066425] call_tmp[1066416])
    const-val call_tmp[1066431]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066433 'move' call_tmp[1066431](1066436 call ==[782970] ret[1066425] nilLocale[89942]))
    const-val call_tmp[1066439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1066441 'move' call_tmp[1066439] call_tmp[1066431])
    if call_tmp[1066439]
    {
      const-val call_tmp[1066448]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906310]:locale[28] "temp"
      (1066453 call here[90438] ret_tmp[1906310])
      (1906313 'move' call_tmp[1066448] ret_tmp[1906310])
      (1066455 call =[90634] ret[1066425] call_tmp[1066448])
      (1921451 call chpl__autoDestroy[1601737] call_tmp[1066448])
    }
    (1066461 'move' ret[1066408] ret[1066425])
    gotoReturn _end_getLocaleOfIoRequest[1066469] _end_getLocaleOfIoRequest[1066469]
    label _end_getLocaleOfIoRequest[1066469]
    (1909302 '=' _retArg[1909300] ret[1066408])
    (1909304 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023].getLocaleOfIoRequest[1552341](const  ref arg this[1552347]:_ref(channel(true,dynamic,true))[1022023], ref arg _retArg[1916841]:_ref(locale)[949033]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1552349]:locale[28] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1552357]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916847]:locale[28] "temp"
    (1552365 call readWriteThisFromLocale[1552415] this[1552347] ret_tmp[1916847])
    (1916850 'move' call_tmp[1552357] ret_tmp[1916847])
    val ret[1552366]:locale[28] "dead at end of block" "insert auto destroy"
    (1552368 'move' ret[1552366] call_tmp[1552357])
    const-val call_tmp[1552372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1552374 'move' call_tmp[1552372](1552377 call ==[782970] ret[1552366] nilLocale[89942]))
    const-val call_tmp[1552380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1552382 'move' call_tmp[1552380] call_tmp[1552372])
    if call_tmp[1552380]
    {
      const-val call_tmp[1552389]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906466]:locale[28] "temp"
      (1552394 call here[90438] ret_tmp[1906466])
      (1906469 'move' call_tmp[1552389] ret_tmp[1906466])
      (1552396 call =[90634] ret[1552366] call_tmp[1552389])
      (1927218 call chpl__autoDestroy[1601737] call_tmp[1552389])
    }
    (1552402 'move' ret[1552349] ret[1552366])
    gotoReturn _end_getLocaleOfIoRequest[1552410] _end_getLocaleOfIoRequest[1552410]
    label _end_getLocaleOfIoRequest[1552410]
    (1916843 '=' _retArg[1916841] ret[1552349])
    (1916845 return _void[55])
  }
  function _ref(file)[948923].reader[1016750](const  ref arg this[1016756]:_ref(file)[948923], const in arg start[1016776]:int(64)[13], const in arg end[1016793]:int(64)[13], const in arg hints[1016799]:int(32)[95], const  ref arg style[1016806]:iostyle[231932], ref arg error_out[1884640]:Error[167984], ref arg _retArg[1908426]:_ref(channel(false,dynamic,true))[985825]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016814]:channel(false,dynamic,true)[985816] "dead after last mention" "RVV" "temp"
    val ret[1016833]:channel(false,dynamic,true)[985816] "dead at end of block" "insert auto destroy"
    val call_tmp[1016835]:channel(false,dynamic,true)[985816] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021930 call init[1018060] ret[1016833])
    const-val call_tmp[1016848]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1016850 'move' call_tmp[1016848](1016853 call ENOERR[223742]))
    val err[1016854]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1017801]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1021919 call =[224221] init_coerce_tmp[1017801] call_tmp[1016848])
    (1016856 'move' err[1016854] init_coerce_tmp[1017801])
    const-val tmp[1016861]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1016863]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1016865 'move' call_tmp[1016863](1016868 call home[887138] this[1016756]))
    const-val call_tmp[1016871]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1017808]:BaseLocale[91204] "dead after last mention" "temp"
    (1017813 'move' _locale_tmp_[1017808](1017810 call _value[89984] call_tmp[1016863]))
    (1016873 'move' call_tmp[1016871](1016875 '_wide_get_locale' _locale_tmp_[1017808]))
    (1016877 'move' tmp[1016861] call_tmp[1016871])
    val error[1884643]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1884645 'move' error[1884643] nil[44])
    val rvfDerefTmp[2195735]:file[235668] "temp"
    (2195739 'move' rvfDerefTmp[2195735](2195737 'deref' this[1016756]))
    val rvfDerefTmp[2195756]:iostyle[231932] "temp"
    (2195760 'move' rvfDerefTmp[2195756](2195758 'deref' style[1016806]))
    val isdirect[2199890]:bool[10] "temp"
    (2199895 'move' isdirect[2199890](2199892 call chpl_doDirectExecuteOn[187469] tmp[1016861]))
    if isdirect[2199890]
    {
      (2199899 call on_fn[1016884] rvfDerefTmp[2195735] ret[1016833] hints[1016799] err[1016854] start[1016776] end[1016793] rvfDerefTmp[2195756] error[1884643])
    }
    {
      val _args_foron_fn[2199935]:_class_localson_fn[2199913] "temp"
      (2199939 'move' _args_foron_fn[2199935](2199937 'stack allocate class' _class_localson_fn[2199913]))
      (2199941 '.=' _args_foron_fn[2199935] _0_tmp[2199916] tmp[1016861])
      (2199945 '.=' _args_foron_fn[2199935] _1_rvfDerefTmp[2199918] rvfDerefTmp[2195735])
      ref tmp[2199949]:channel(false,dynamic,true)[985816] "temp"
      (2199953 'move' tmp[2199949](2199951 'set reference' ret[1016833]))
      (2199955 '.=' _args_foron_fn[2199935] _2_ret[2199920] tmp[2199949])
      (2199959 '.=' _args_foron_fn[2199935] _3_hints[2199922] hints[1016799])
      ref tmp[2199963]:syserr[223672] "temp"
      (2199967 'move' tmp[2199963](2199965 'set reference' err[1016854]))
      (2199969 '.=' _args_foron_fn[2199935] _4_err[2199924] tmp[2199963])
      (2199973 '.=' _args_foron_fn[2199935] _5_start[2199926] start[1016776])
      (2199977 '.=' _args_foron_fn[2199935] _6_end[2199928] end[1016793])
      (2199981 '.=' _args_foron_fn[2199935] _7_rvfDerefTmp[2199930] rvfDerefTmp[2195756])
      ref tmp[2199985]:Error[167984] "temp"
      (2199989 'move' tmp[2199985](2199987 'set reference' error[1884643]))
      (2199991 '.=' _args_foron_fn[2199935] _8_error[2199932] tmp[2199985])
      val _args_vforon_fn[2199995]:c_void_ptr[149] "temp"
      (2199999 'move' _args_vforon_fn[2199995](2199997 'cast_to_void_star' _args_foron_fn[2199935]))
      val _args_sizeon_fn[2200001]:int(64)[13] "temp"
      (2200005 'move' _args_sizeon_fn[2200001](2200003 'sizeof_bundle' _class_localson_fn[2199913]))
      on(2200093 call wrapon_fn[2200007] tmp[1016861] _args_vforon_fn[2199995] _args_sizeon_fn[2200001] _args_foron_fn[2199935])
    }
    val errorExists[2222336]:bool[10] "temp"
    (2222341 'move' errorExists[2222336](2222338 '!=' error[1884643] nil[44]))
    if errorExists[2222336]
    {
      (1884649 '=' error_out[1884640] error[1884643])
      (1920146 call chpl__autoDestroy[1611302] ret[1016833])
      gotoErrorHandlingReturn _end_reader[1016969] _end_reader[1016969]
    }
    {
    }
    const-val call_tmp[1016923]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1016925 'move' call_tmp[1016923](1016928 call _cond_test[224069] err[1016854]))
    if call_tmp[1016923]
    {
      {
        val error[1884657]:Error[167984] "error variable" "temp"
        (1884666 'move' error[1884657] nil[44])
        const-val call_tmp[1016933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1907260]:string[26] "temp"
        (1016941 call tryGetPath[236452] this[1016756] ret_tmp[1907260])
        (1907263 'move' call_tmp[1016933] ret_tmp[1907260])
        (1016943 call ioerror[266338] err[1016854] "in file.reader" call_tmp[1016933] error[1884657])
        val errorExists[2222344]:bool[10] "temp"
        (2222349 'move' errorExists[2222344](2222346 '!=' error[1884657] nil[44]))
        if errorExists[2222344]
        {
          (1920149 call chpl__autoDestroy[1601673] call_tmp[1016933])
          gotoErrorHandling handler[1884658] handler[1884658]
        }
        (1920152 call chpl__autoDestroy[1601673] call_tmp[1016933])
        label handler[1884658]
        const-val shouldHandleError[1884677]:bool[10] "temp"
        val errorExists[2222352]:bool[10] "temp"
        (2222357 'move' errorExists[2222352](2222354 '!=' error[1884657] nil[44]))
        (1884681 'move' shouldHandleError[1884677] errorExists[2222352])
        if shouldHandleError[1884677]
        {
          (1884673 '=' error_out[1884640] error[1884657])
          (1920155 call chpl__autoDestroy[1611302] ret[1016833])
          gotoErrorHandlingReturn _end_reader[1016969] _end_reader[1016969]
        }
      }
    }
    val call_tmp[1016951]:channel(false,dynamic,true)[985816] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1021926 'move' ret[1016814] ret[1016833])
    gotoReturn _end_reader[1016969] _end_reader[1016969]
    label _end_reader[1016969]
    (1908428 '=' _retArg[1908426] ret[1016814])
    (1908430 return _void[55])
  }
  function _ref(file)[948923].reader_default_style[1017209](const  ref arg this[1017212]:_ref(file)[948923], ref arg error_out[1884729]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017215]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1017220]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1884734]:Error[167984] "error variable" "temp"
    (1884736 'move' error[1884734] nil[44])
    (1017227 'move' style[1017220](1017224 call _style[236048] this[1017212] error[1884734]))
    val errorExists[2222376]:bool[10] "temp"
    (2222381 'move' errorExists[2222376](2222378 '!=' error[1884734] nil[44]))
    if errorExists[2222376]
    {
      (1884740 '=' error_out[1884729] error[1884734])
      gotoErrorHandlingReturn _endreader_default_style[1884731] _endreader_default_style[1884731]
    }
    (1017772 'move' ret[1017215] style[1017220])
    label _endreader_default_style[1884731]
    (1017218 return ret[1017215])
  }
  function _ref(file)[948923].reader_default_hints[1017161](const  ref arg this[1017164]:_ref(file)[948923], ref arg error_out[1884725]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017167]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1017172]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1017176]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1017178]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1017196 'move' tmp[1017176] IOHINT_NONE[231499])
    (1017189 'move' hints[1017172] tmp[1017176])
    (1017192 'move' ret[1017167] hints[1017172])
    label _endreader_default_hints[1884727]
    (1017170 return ret[1017167])
  }
  function _ref(file)[948923].reader_default_end[1017097](const  ref arg this[1017100]:_ref(file)[948923], ref arg error_out[1884721]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017103]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1017108]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1017111]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1017121]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1017123]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1017131 'move' tmp[1017121] 9223372036854775807)
    (1017134 'move' end[1017108] tmp[1017121])
    (1017147 'move' ret[1017103] end[1017108])
    label _endreader_default_end[1884723]
    (1017106 return ret[1017103])
  }
  function _ref(file)[948923].reader_default_start[1017050](const  ref arg this[1017053]:_ref(file)[948923], ref arg error_out[1884717]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1017056]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1017061]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1017065]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1017067]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1017075 'move' tmp[1017065] 0)
    (1017078 'move' start[1017061] tmp[1017065])
    (1017083 'move' ret[1017056] start[1017061])
    label _endreader_default_start[1884719]
    (1017059 return ret[1017056])
  }
  function _ref(file)[948923].reader[1080777](const  ref arg this[1080783]:_ref(file)[948923], const in arg start[1080803]:int(64)[13], const in arg end[1080820]:int(64)[13], const in arg hints[1080826]:int(32)[95], const  ref arg style[1080833]:iostyle[231932], ref arg error_out[1885983]:Error[167984], ref arg _retArg[1909378]:_ref(channel(false,dynamic,false))[1080880]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080841]:channel(false,dynamic,false)[1080871] "dead after last mention" "RVV" "temp"
    val ret[1080895]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
    val call_tmp[1080897]:channel(false,dynamic,false)[1080871] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082272 call init[1081541] ret[1080895])
    const-val call_tmp[1080910]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1080912 'move' call_tmp[1080910](1080915 call ENOERR[223742]))
    val err[1080916]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1081282]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1082261 call =[224221] init_coerce_tmp[1081282] call_tmp[1080910])
    (1080918 'move' err[1080916] init_coerce_tmp[1081282])
    const-val tmp[1080923]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1080925]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1080927 'move' call_tmp[1080925](1080930 call home[887138] this[1080783]))
    const-val call_tmp[1080933]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1081289]:BaseLocale[91204] "dead after last mention" "temp"
    (1081294 'move' _locale_tmp_[1081289](1081291 call _value[89984] call_tmp[1080925]))
    (1080935 'move' call_tmp[1080933](1080937 '_wide_get_locale' _locale_tmp_[1081289]))
    (1080939 'move' tmp[1080923] call_tmp[1080933])
    val error[1885986]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885988 'move' error[1885986] nil[44])
    val rvfDerefTmp[2196098]:iostyle[231932] "temp"
    (2196102 'move' rvfDerefTmp[2196098](2196100 'deref' style[1080833]))
    val rvfDerefTmp[2196106]:file[235668] "temp"
    (2196110 'move' rvfDerefTmp[2196106](2196108 'deref' this[1080783]))
    val isdirect[2202507]:bool[10] "temp"
    (2202512 'move' isdirect[2202507](2202509 call chpl_doDirectExecuteOn[187469] tmp[1080923]))
    if isdirect[2202507]
    {
      (2202516 call on_fn[1080946] rvfDerefTmp[2196098] end[1080820] rvfDerefTmp[2196106] err[1080916] hints[1080826] start[1080803] ret[1080895] error[1885986])
    }
    {
      val _args_foron_fn[2202552]:_class_localson_fn[2202530] "temp"
      (2202556 'move' _args_foron_fn[2202552](2202554 'stack allocate class' _class_localson_fn[2202530]))
      (2202558 '.=' _args_foron_fn[2202552] _0_tmp[2202533] tmp[1080923])
      (2202562 '.=' _args_foron_fn[2202552] _1_rvfDerefTmp[2202535] rvfDerefTmp[2196098])
      (2202566 '.=' _args_foron_fn[2202552] _2_end[2202537] end[1080820])
      (2202570 '.=' _args_foron_fn[2202552] _3_rvfDerefTmp[2202539] rvfDerefTmp[2196106])
      ref tmp[2202574]:syserr[223672] "temp"
      (2202578 'move' tmp[2202574](2202576 'set reference' err[1080916]))
      (2202580 '.=' _args_foron_fn[2202552] _4_err[2202541] tmp[2202574])
      (2202584 '.=' _args_foron_fn[2202552] _5_hints[2202543] hints[1080826])
      (2202588 '.=' _args_foron_fn[2202552] _6_start[2202545] start[1080803])
      ref tmp[2202592]:channel(false,dynamic,false)[1080871] "temp"
      (2202596 'move' tmp[2202592](2202594 'set reference' ret[1080895]))
      (2202598 '.=' _args_foron_fn[2202552] _7_ret[2202547] tmp[2202592])
      ref tmp[2202602]:Error[167984] "temp"
      (2202606 'move' tmp[2202602](2202604 'set reference' error[1885986]))
      (2202608 '.=' _args_foron_fn[2202552] _8_error[2202549] tmp[2202602])
      val _args_vforon_fn[2202612]:c_void_ptr[149] "temp"
      (2202616 'move' _args_vforon_fn[2202612](2202614 'cast_to_void_star' _args_foron_fn[2202552]))
      val _args_sizeon_fn[2202618]:int(64)[13] "temp"
      (2202622 'move' _args_sizeon_fn[2202618](2202620 'sizeof_bundle' _class_localson_fn[2202530]))
      on(2202710 call wrapon_fn[2202624] tmp[1080923] _args_vforon_fn[2202612] _args_sizeon_fn[2202618] _args_foron_fn[2202552])
    }
    val errorExists[2222968]:bool[10] "temp"
    (2222973 'move' errorExists[2222968](2222970 '!=' error[1885986] nil[44]))
    if errorExists[2222968]
    {
      (1885992 '=' error_out[1885983] error[1885986])
      (1921555 call chpl__autoDestroy[1680699] ret[1080895])
      gotoErrorHandlingReturn _end_reader[1081031] _end_reader[1081031]
    }
    {
    }
    const-val call_tmp[1080985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080987 'move' call_tmp[1080985](1080990 call _cond_test[224069] err[1080916]))
    if call_tmp[1080985]
    {
      {
        val error[1886000]:Error[167984] "error variable" "temp"
        (1886009 'move' error[1886000] nil[44])
        const-val call_tmp[1080995]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1907278]:string[26] "temp"
        (1081003 call tryGetPath[236452] this[1080783] ret_tmp[1907278])
        (1907281 'move' call_tmp[1080995] ret_tmp[1907278])
        (1081005 call ioerror[266338] err[1080916] "in file.reader" call_tmp[1080995] error[1886000])
        val errorExists[2222976]:bool[10] "temp"
        (2222981 'move' errorExists[2222976](2222978 '!=' error[1886000] nil[44]))
        if errorExists[2222976]
        {
          (1921558 call chpl__autoDestroy[1601673] call_tmp[1080995])
          gotoErrorHandling handler[1886001] handler[1886001]
        }
        (1921561 call chpl__autoDestroy[1601673] call_tmp[1080995])
        label handler[1886001]
        const-val shouldHandleError[1886020]:bool[10] "temp"
        val errorExists[2222984]:bool[10] "temp"
        (2222989 'move' errorExists[2222984](2222986 '!=' error[1886000] nil[44]))
        (1886024 'move' shouldHandleError[1886020] errorExists[2222984])
        if shouldHandleError[1886020]
        {
          (1886016 '=' error_out[1885983] error[1886000])
          (1921564 call chpl__autoDestroy[1680699] ret[1080895])
          gotoErrorHandlingReturn _end_reader[1081031] _end_reader[1081031]
        }
      }
    }
    val call_tmp[1081013]:channel(false,dynamic,false)[1080871] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1082268 'move' ret[1080841] ret[1080895])
    gotoReturn _end_reader[1081031] _end_reader[1081031]
    label _end_reader[1081031]
    (1909380 '=' _retArg[1909378] ret[1080841])
    (1909382 return _void[55])
  }
  function _ref(file)[948923].reader_default_style[1081233](const  ref arg this[1081236]:_ref(file)[948923], ref arg error_out[1886072]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081239]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1081244]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1886077]:Error[167984] "error variable" "temp"
    (1886079 'move' error[1886077] nil[44])
    (1081251 'move' style[1081244](1081248 call _style[236048] this[1081236] error[1886077]))
    val errorExists[2223008]:bool[10] "temp"
    (2223013 'move' errorExists[2223008](2223010 '!=' error[1886077] nil[44]))
    if errorExists[2223008]
    {
      (1886083 '=' error_out[1886072] error[1886077])
      gotoErrorHandlingReturn _endreader_default_style[1886074] _endreader_default_style[1886074]
    }
    (1081255 'move' ret[1081239] style[1081244])
    label _endreader_default_style[1886074]
    (1081242 return ret[1081239])
  }
  function _ref(file)[948923].reader_default_hints[1081186](const  ref arg this[1081189]:_ref(file)[948923], ref arg error_out[1886068]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081192]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1081197]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1081201]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1081203]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1081221 'move' tmp[1081201] IOHINT_NONE[231499])
    (1081214 'move' hints[1081197] tmp[1081201])
    (1081217 'move' ret[1081192] hints[1081197])
    label _endreader_default_hints[1886070]
    (1081195 return ret[1081192])
  }
  function _ref(file)[948923].reader_default_end[1081123](const  ref arg this[1081126]:_ref(file)[948923], ref arg error_out[1886064]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081129]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1081134]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1081137]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1081147]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1081149]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1081157 'move' tmp[1081147] 9223372036854775807)
    (1081160 'move' end[1081134] tmp[1081147])
    (1081173 'move' ret[1081129] end[1081134])
    label _endreader_default_end[1886066]
    (1081132 return ret[1081129])
  }
  function _ref(file)[948923].reader_default_start[1081077](const  ref arg this[1081080]:_ref(file)[948923], ref arg error_out[1886060]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1081083]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1081088]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1081092]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1081094]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1081102 'move' tmp[1081092] 0)
    (1081105 'move' start[1081088] tmp[1081092])
    (1081110 'move' ret[1081083] start[1081088])
    label _endreader_default_start[1886062]
    (1081086 return ret[1081083])
  }
  function _ref(file)[948923].writer[1022325](const  ref arg this[1022331]:_ref(file)[948923], const in arg start[1022351]:int(64)[13], const in arg end[1022368]:int(64)[13], const in arg hints[1022374]:int(32)[95], const  ref arg style[1022381]:iostyle[231932], ref arg error_out[1884756]:Error[167984], ref arg _retArg[1908492]:_ref(channel(true,dynamic,true))[1022023]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022389]:channel(true,dynamic,true)[1022014] "dead after last mention" "RVV" "temp"
    val ret[1022408]:channel(true,dynamic,true)[1022014] "dead at end of block" "insert auto destroy"
    val call_tmp[1022410]:channel(true,dynamic,true)[1022014] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1024018 call init[1023096] ret[1022408])
    const-val call_tmp[1022423]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1022425 'move' call_tmp[1022423](1022428 call ENOERR[223742]))
    val err[1022429]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1022837]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1024007 call =[224221] init_coerce_tmp[1022837] call_tmp[1022423])
    (1022431 'move' err[1022429] init_coerce_tmp[1022837])
    const-val tmp[1022436]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1022438]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1022440 'move' call_tmp[1022438](1022443 call home[887138] this[1022331]))
    const-val call_tmp[1022446]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1022844]:BaseLocale[91204] "dead after last mention" "temp"
    (1022849 'move' _locale_tmp_[1022844](1022846 call _value[89984] call_tmp[1022438]))
    (1022448 'move' call_tmp[1022446](1022450 '_wide_get_locale' _locale_tmp_[1022844]))
    (1022452 'move' tmp[1022436] call_tmp[1022446])
    val error[1884759]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1884761 'move' error[1884759] nil[44])
    val rvfDerefTmp[2195812]:iostyle[231932] "temp"
    (2195816 'move' rvfDerefTmp[2195812](2195814 'deref' style[1022381]))
    val rvfDerefTmp[2195820]:file[235668] "temp"
    (2195824 'move' rvfDerefTmp[2195820](2195822 'deref' this[1022331]))
    val isdirect[2200573]:bool[10] "temp"
    (2200578 'move' isdirect[2200573](2200575 call chpl_doDirectExecuteOn[187469] tmp[1022436]))
    if isdirect[2200573]
    {
      (2200582 call on_fn[1022459] ret[1022408] hints[1022374] start[1022351] err[1022429] end[1022368] rvfDerefTmp[2195812] rvfDerefTmp[2195820] error[1884759])
    }
    {
      val _args_foron_fn[2200618]:_class_localson_fn[2200596] "temp"
      (2200622 'move' _args_foron_fn[2200618](2200620 'stack allocate class' _class_localson_fn[2200596]))
      (2200624 '.=' _args_foron_fn[2200618] _0_tmp[2200599] tmp[1022436])
      ref tmp[2200628]:channel(true,dynamic,true)[1022014] "temp"
      (2200632 'move' tmp[2200628](2200630 'set reference' ret[1022408]))
      (2200634 '.=' _args_foron_fn[2200618] _1_ret[2200601] tmp[2200628])
      (2200638 '.=' _args_foron_fn[2200618] _2_hints[2200603] hints[1022374])
      (2200642 '.=' _args_foron_fn[2200618] _3_start[2200605] start[1022351])
      ref tmp[2200646]:syserr[223672] "temp"
      (2200650 'move' tmp[2200646](2200648 'set reference' err[1022429]))
      (2200652 '.=' _args_foron_fn[2200618] _4_err[2200607] tmp[2200646])
      (2200656 '.=' _args_foron_fn[2200618] _5_end[2200609] end[1022368])
      (2200660 '.=' _args_foron_fn[2200618] _6_rvfDerefTmp[2200611] rvfDerefTmp[2195812])
      (2200664 '.=' _args_foron_fn[2200618] _7_rvfDerefTmp[2200613] rvfDerefTmp[2195820])
      ref tmp[2200668]:Error[167984] "temp"
      (2200672 'move' tmp[2200668](2200670 'set reference' error[1884759]))
      (2200674 '.=' _args_foron_fn[2200618] _8_error[2200615] tmp[2200668])
      val _args_vforon_fn[2200678]:c_void_ptr[149] "temp"
      (2200682 'move' _args_vforon_fn[2200678](2200680 'cast_to_void_star' _args_foron_fn[2200618]))
      val _args_sizeon_fn[2200684]:int(64)[13] "temp"
      (2200688 'move' _args_sizeon_fn[2200684](2200686 'sizeof_bundle' _class_localson_fn[2200596]))
      on(2200776 call wrapon_fn[2200690] tmp[1022436] _args_vforon_fn[2200678] _args_sizeon_fn[2200684] _args_foron_fn[2200618])
    }
    val errorExists[2222384]:bool[10] "temp"
    (2222389 'move' errorExists[2222384](2222386 '!=' error[1884759] nil[44]))
    if errorExists[2222384]
    {
      (1884765 '=' error_out[1884756] error[1884759])
      (1920169 call chpl__autoDestroy[1674281] ret[1022408])
      gotoErrorHandlingReturn _end_writer[1022544] _end_writer[1022544]
    }
    {
    }
    const-val call_tmp[1022498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1022500 'move' call_tmp[1022498](1022503 call _cond_test[224069] err[1022429]))
    if call_tmp[1022498]
    {
      {
        val error[1884773]:Error[167984] "error variable" "temp"
        (1884782 'move' error[1884773] nil[44])
        const-val call_tmp[1022508]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1907266]:string[26] "temp"
        (1022516 call tryGetPath[236452] this[1022331] ret_tmp[1907266])
        (1907269 'move' call_tmp[1022508] ret_tmp[1907266])
        (1022518 call ioerror[266338] err[1022429] "in file.writer" call_tmp[1022508] error[1884773])
        val errorExists[2222392]:bool[10] "temp"
        (2222397 'move' errorExists[2222392](2222394 '!=' error[1884773] nil[44]))
        if errorExists[2222392]
        {
          (1920172 call chpl__autoDestroy[1601673] call_tmp[1022508])
          gotoErrorHandling handler[1884774] handler[1884774]
        }
        (1920175 call chpl__autoDestroy[1601673] call_tmp[1022508])
        label handler[1884774]
        const-val shouldHandleError[1884793]:bool[10] "temp"
        val errorExists[2222400]:bool[10] "temp"
        (2222405 'move' errorExists[2222400](2222402 '!=' error[1884773] nil[44]))
        (1884797 'move' shouldHandleError[1884793] errorExists[2222400])
        if shouldHandleError[1884793]
        {
          (1884789 '=' error_out[1884756] error[1884773])
          (1920178 call chpl__autoDestroy[1674281] ret[1022408])
          gotoErrorHandlingReturn _end_writer[1022544] _end_writer[1022544]
        }
      }
    }
    val call_tmp[1022526]:channel(true,dynamic,true)[1022014] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1024014 'move' ret[1022389] ret[1022408])
    gotoReturn _end_writer[1022544] _end_writer[1022544]
    label _end_writer[1022544]
    (1908494 '=' _retArg[1908492] ret[1022389])
    (1908496 return _void[55])
  }
  function _ref(file)[948923].writer_default_style[1022787](const  ref arg this[1022790]:_ref(file)[948923], ref arg error_out[1884845]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022793]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1022798]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1884850]:Error[167984] "error variable" "temp"
    (1884852 'move' error[1884850] nil[44])
    (1022805 'move' style[1022798](1022802 call _style[236048] this[1022790] error[1884850]))
    val errorExists[2222424]:bool[10] "temp"
    (2222429 'move' errorExists[2222424](2222426 '!=' error[1884850] nil[44]))
    if errorExists[2222424]
    {
      (1884856 '=' error_out[1884845] error[1884850])
      gotoErrorHandlingReturn _endwriter_default_style[1884847] _endwriter_default_style[1884847]
    }
    (1022809 'move' ret[1022793] style[1022798])
    label _endwriter_default_style[1884847]
    (1022796 return ret[1022793])
  }
  function _ref(file)[948923].writer_default_hints[1022736](const  ref arg this[1022739]:_ref(file)[948923], ref arg error_out[1884841]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022742]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1022747]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022751]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1022753]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1022761 'move' tmp[1022751](1022772 'cast' int(32)[95] 0))
    (1022764 'move' hints[1022747] tmp[1022751])
    (1022769 'move' ret[1022742] hints[1022747])
    label _endwriter_default_hints[1884843]
    (1022745 return ret[1022742])
  }
  function _ref(file)[948923].writer_default_end[1022672](const  ref arg this[1022675]:_ref(file)[948923], ref arg error_out[1884837]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022678]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1022683]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1022686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1022696]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022698]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022706 'move' tmp[1022696] 9223372036854775807)
    (1022709 'move' end[1022683] tmp[1022696])
    (1022722 'move' ret[1022678] end[1022683])
    label _endwriter_default_end[1884839]
    (1022681 return ret[1022678])
  }
  function _ref(file)[948923].writer_default_start[1022625](const  ref arg this[1022628]:_ref(file)[948923], ref arg error_out[1884833]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1022631]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1022636]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1022640]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1022642]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1022650 'move' tmp[1022640] 0)
    (1022653 'move' start[1022636] tmp[1022640])
    (1022658 'move' ret[1022631] start[1022636])
    label _endwriter_default_start[1884835]
    (1022634 return ret[1022631])
  }
  function _ref(file)[948923].writer[1061042](const  ref arg this[1061048]:_ref(file)[948923], const in arg start[1061068]:int(64)[13], const in arg end[1061085]:int(64)[13], const in arg hints[1061091]:int(32)[95], const  ref arg style[1061098]:iostyle[231932], ref arg error_out[1885187]:Error[167984], ref arg _retArg[1908976]:_ref(channel(true,dynamic,false))[1061145]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1061106]:channel(true,dynamic,false)[1061136] "dead after last mention" "RVV" "temp"
    val ret[1061160]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
    val call_tmp[1061162]:channel(true,dynamic,false)[1061136] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062540 call init[1061809] ret[1061160])
    const-val call_tmp[1061175]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1061177 'move' call_tmp[1061175](1061180 call ENOERR[223742]))
    val err[1061181]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1061550]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1062529 call =[224221] init_coerce_tmp[1061550] call_tmp[1061175])
    (1061183 'move' err[1061181] init_coerce_tmp[1061550])
    const-val tmp[1061188]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1061190]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1061192 'move' call_tmp[1061190](1061195 call home[887138] this[1061048]))
    const-val call_tmp[1061198]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1061557]:BaseLocale[91204] "dead after last mention" "temp"
    (1061562 'move' _locale_tmp_[1061557](1061559 call _value[89984] call_tmp[1061190]))
    (1061200 'move' call_tmp[1061198](1061202 '_wide_get_locale' _locale_tmp_[1061557]))
    (1061204 'move' tmp[1061188] call_tmp[1061198])
    val error[1885190]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885192 'move' error[1885190] nil[44])
    val rvfDerefTmp[2195920]:iostyle[231932] "temp"
    (2195924 'move' rvfDerefTmp[2195920](2195922 'deref' style[1061098]))
    val rvfDerefTmp[2195928]:file[235668] "temp"
    (2195932 'move' rvfDerefTmp[2195928](2195930 'deref' this[1061048]))
    val isdirect[2201286]:bool[10] "temp"
    (2201291 'move' isdirect[2201286](2201288 call chpl_doDirectExecuteOn[187469] tmp[1061188]))
    if isdirect[2201286]
    {
      (2201295 call on_fn[1061211] rvfDerefTmp[2195920] rvfDerefTmp[2195928] err[1061181] hints[1061091] start[1061068] ret[1061160] end[1061085] error[1885190])
    }
    {
      val _args_foron_fn[2201331]:_class_localson_fn[2201309] "temp"
      (2201335 'move' _args_foron_fn[2201331](2201333 'stack allocate class' _class_localson_fn[2201309]))
      (2201337 '.=' _args_foron_fn[2201331] _0_tmp[2201312] tmp[1061188])
      (2201341 '.=' _args_foron_fn[2201331] _1_rvfDerefTmp[2201314] rvfDerefTmp[2195920])
      (2201345 '.=' _args_foron_fn[2201331] _2_rvfDerefTmp[2201316] rvfDerefTmp[2195928])
      ref tmp[2201349]:syserr[223672] "temp"
      (2201353 'move' tmp[2201349](2201351 'set reference' err[1061181]))
      (2201355 '.=' _args_foron_fn[2201331] _3_err[2201318] tmp[2201349])
      (2201359 '.=' _args_foron_fn[2201331] _4_hints[2201320] hints[1061091])
      (2201363 '.=' _args_foron_fn[2201331] _5_start[2201322] start[1061068])
      ref tmp[2201367]:channel(true,dynamic,false)[1061136] "temp"
      (2201371 'move' tmp[2201367](2201369 'set reference' ret[1061160]))
      (2201373 '.=' _args_foron_fn[2201331] _6_ret[2201324] tmp[2201367])
      (2201377 '.=' _args_foron_fn[2201331] _7_end[2201326] end[1061085])
      ref tmp[2201381]:Error[167984] "temp"
      (2201385 'move' tmp[2201381](2201383 'set reference' error[1885190]))
      (2201387 '.=' _args_foron_fn[2201331] _8_error[2201328] tmp[2201381])
      val _args_vforon_fn[2201391]:c_void_ptr[149] "temp"
      (2201395 'move' _args_vforon_fn[2201391](2201393 'cast_to_void_star' _args_foron_fn[2201331]))
      val _args_sizeon_fn[2201397]:int(64)[13] "temp"
      (2201401 'move' _args_sizeon_fn[2201397](2201399 'sizeof_bundle' _class_localson_fn[2201309]))
      on(2201489 call wrapon_fn[2201403] tmp[1061188] _args_vforon_fn[2201391] _args_sizeon_fn[2201397] _args_foron_fn[2201331])
    }
    val errorExists[2222608]:bool[10] "temp"
    (2222613 'move' errorExists[2222608](2222610 '!=' error[1885190] nil[44]))
    if errorExists[2222608]
    {
      (1885196 '=' error_out[1885187] error[1885190])
      (1921394 call chpl__autoDestroy[1676445] ret[1061160])
      gotoErrorHandlingReturn _end_writer[1061296] _end_writer[1061296]
    }
    {
    }
    const-val call_tmp[1061250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1061252 'move' call_tmp[1061250](1061255 call _cond_test[224069] err[1061181]))
    if call_tmp[1061250]
    {
      {
        val error[1885204]:Error[167984] "error variable" "temp"
        (1885213 'move' error[1885204] nil[44])
        const-val call_tmp[1061260]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1907272]:string[26] "temp"
        (1061268 call tryGetPath[236452] this[1061048] ret_tmp[1907272])
        (1907275 'move' call_tmp[1061260] ret_tmp[1907272])
        (1061270 call ioerror[266338] err[1061181] "in file.writer" call_tmp[1061260] error[1885204])
        val errorExists[2222616]:bool[10] "temp"
        (2222621 'move' errorExists[2222616](2222618 '!=' error[1885204] nil[44]))
        if errorExists[2222616]
        {
          (1921397 call chpl__autoDestroy[1601673] call_tmp[1061260])
          gotoErrorHandling handler[1885205] handler[1885205]
        }
        (1921400 call chpl__autoDestroy[1601673] call_tmp[1061260])
        label handler[1885205]
        const-val shouldHandleError[1885224]:bool[10] "temp"
        val errorExists[2222624]:bool[10] "temp"
        (2222629 'move' errorExists[2222624](2222626 '!=' error[1885204] nil[44]))
        (1885228 'move' shouldHandleError[1885224] errorExists[2222624])
        if shouldHandleError[1885224]
        {
          (1885220 '=' error_out[1885187] error[1885204])
          (1921403 call chpl__autoDestroy[1676445] ret[1061160])
          gotoErrorHandlingReturn _end_writer[1061296] _end_writer[1061296]
        }
      }
    }
    val call_tmp[1061278]:channel(true,dynamic,false)[1061136] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1062536 'move' ret[1061106] ret[1061160])
    gotoReturn _end_writer[1061296] _end_writer[1061296]
    label _end_writer[1061296]
    (1908978 '=' _retArg[1908976] ret[1061106])
    (1908980 return _void[55])
  }
  function _ref(file)[948923].writer_default_style[1061501](const  ref arg this[1061504]:_ref(file)[948923], ref arg error_out[1885276]:Error[167984]) : iostyle[231932] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061507]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[1061512]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[1885281]:Error[167984] "error variable" "temp"
    (1885283 'move' error[1885281] nil[44])
    (1061519 'move' style[1061512](1061516 call _style[236048] this[1061504] error[1885281]))
    val errorExists[2222648]:bool[10] "temp"
    (2222653 'move' errorExists[2222648](2222650 '!=' error[1885281] nil[44]))
    if errorExists[2222648]
    {
      (1885287 '=' error_out[1885276] error[1885281])
      gotoErrorHandlingReturn _endwriter_default_style[1885278] _endwriter_default_style[1885278]
    }
    (1061523 'move' ret[1061507] style[1061512])
    label _endwriter_default_style[1885278]
    (1061510 return ret[1061507])
  }
  function _ref(file)[948923].writer_default_hints[1061451](const  ref arg this[1061454]:_ref(file)[948923], ref arg error_out[1885272]:Error[167984]) : int(32)[95] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061457]:int(32)[95] "dead after last mention" "RVV" "maybe param" "temp"
    const-val hints[1061462]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061466]:int(32)[95] "dead after last mention" "temp"
    val _formal_type[1061468]:int(32)[95] "dead after last mention" "temp" "type variable"
    (1061476 'move' tmp[1061466](1061487 'cast' int(32)[95] 0))
    (1061479 'move' hints[1061462] tmp[1061466])
    (1061484 'move' ret[1061457] hints[1061462])
    label _endwriter_default_hints[1885274]
    (1061460 return ret[1061457])
  }
  function _ref(file)[948923].writer_default_end[1061388](const  ref arg this[1061391]:_ref(file)[948923], ref arg error_out[1885268]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061394]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val end[1061399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    val call_tmp[1061402]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1061412]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061414]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061422 'move' tmp[1061412] 9223372036854775807)
    (1061425 'move' end[1061399] tmp[1061412])
    (1061438 'move' ret[1061394] end[1061399])
    label _endwriter_default_end[1885270]
    (1061397 return ret[1061394])
  }
  function _ref(file)[948923].writer_default_start[1061342](const  ref arg this[1061345]:_ref(file)[948923], ref arg error_out[1885264]:Error[167984]) : int(64)[13] throws "compiler generated" "default actual function" "inline" "invisible fn" "lineno ok" "maybe param" "maybe type" "method" "resolved"
  {
    val ret[1061348]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val start[1061353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1061357]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1061359]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1061367 'move' tmp[1061357] 0)
    (1061370 'move' start[1061353] tmp[1061357])
    (1061375 'move' ret[1061348] start[1061353])
    label _endwriter_default_start[1885266]
    (1061351 return ret[1061348])
  }
  function _write_text_internal[1078949](const in arg _channel_internal[1078951]:qio_channel_ptr_t[231553], const in arg x[1078953]:int(64)[13]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1078967]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1078977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1079077]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1079099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val call_tmp[1079112]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1079125]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1079744]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079750 'move' coerce_tmp[1079744](1079746 'cast' int(32)[95] 0))
        const-val coerce_tmp[1079752]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079758 'move' coerce_tmp[1079752](1079754 'cast' uint(64)[115] 8))
        const-val coerce_tmp[1079760]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1079766 'move' coerce_tmp[1079760](1079762 'cast' int(32)[95] 1))
        (1079127 'move' call_tmp[1079125](1079130 call qio_channel_print_int[1079714] coerce_tmp[1079744] _channel_internal[1078951] x[1078953] coerce_tmp[1079752] coerce_tmp[1079760]))
        (1079770 'move' ret[1078967] call_tmp[1079125])
        gotoReturn _end__write_text_internal[1079697] _end__write_text_internal[1079697]
      }
    }
    label _end__write_text_internal[1079697]
    (1079699 return ret[1078967])
  }
  function _write_text_internal[1173033](const in arg _channel_internal[1173035]:qio_channel_ptr_t[231553], const  ref arg x[1173037]:string[26]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1173051]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1173061]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1173161]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1173228]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1173281]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1173334]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1173420]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                const-val call_tmp[1173443]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1905314]:string[26] "temp"
                (1173451 call localize[32889] x[1173037] ret_tmp[1905314])
                (1905317 'move' call_tmp[1173443] ret_tmp[1905314])
                const local_x[1173452]:string[26] "dead at end of block" "const" "insert auto destroy"
                (1173454 'move' local_x[1173452] call_tmp[1173443])
                ref call_tmp[1173458]:_ref(bool)[937388] "dead after last mention" "maybe param" "reference to a const" "temp"
                (1173460 'move' call_tmp[1173458](1173463 call hasEscapes[758205] local_x[1173452]))
                const-val call_tmp[1173466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1173811]:bool[10] "dead after last mention" "const" "temp"
                (1173813 'move' tmp[1173811](1173815 'deref' call_tmp[1173458]))
                (1173468 'move' call_tmp[1173466] tmp[1173811])
                if call_tmp[1173466]
                {
                  (1173832 call =[224221] ret[1173051] EILSEQ[224532])
                  (1923251 call chpl__autoDestroy[1601673] local_x[1173452])
                  gotoReturn _end__write_text_internal[1173781] _end__write_text_internal[1173781]
                }
                const-val call_tmp[1173483]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173485 'move' call_tmp[1173483](1173491 call c_str[32935] local_x[1173452]))
                const-val call_tmp[1173492]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173494 'move' call_tmp[1173492](1173497 call numBytes[32810] local_x[1173452]))
                const-val call_tmp[1173500]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1173502 'move' call_tmp[1173500] call_tmp[1173492])
                const-val call_tmp[1173508]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1173820]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1173826 'move' coerce_tmp[1173820](1173822 'cast' int(32)[95] 0))
                (1173510 'move' call_tmp[1173508](1173513 call qio_channel_print_string[234925] coerce_tmp[1173820] _channel_internal[1173035] call_tmp[1173483] call_tmp[1173500]))
                (1173839 'move' ret[1173051] call_tmp[1173508])
                (1923254 call chpl__autoDestroy[1601673] local_x[1173452])
                gotoReturn _end__write_text_internal[1173781] _end__write_text_internal[1173781]
              }
            }
          }
        }
      }
    }
    label _end__write_text_internal[1173781]
    (1173783 return ret[1173051])
  }
  function _write_text_internal[1584616](const in arg _channel_internal[1584618]:qio_channel_ptr_t[231553], const in arg x[1584620]:real(64)[16]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1584634]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1584644]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1584744]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1584811]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1584833]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[1584846]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1585409]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1585415 'move' coerce_tmp[1585409](1585411 'cast' int(32)[95] 0))
          const-val coerce_tmp[1585417]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1585423 'move' coerce_tmp[1585417](1585419 'cast' uint(64)[115] 8))
          (1584848 'move' call_tmp[1584846](1584851 call qio_channel_print_float[1585383] coerce_tmp[1585409] _channel_internal[1584618] x[1584620] coerce_tmp[1585417]))
          (1585427 'move' ret[1584634] call_tmp[1584846])
          gotoReturn _end__write_text_internal[1585364] _end__write_text_internal[1585364]
        }
      }
    }
    label _end__write_text_internal[1585364]
    (1585366 return ret[1584634])
  }
  function _write_binary_internal[1073987](const in arg _channel_internal[1073989]:qio_channel_ptr_t[231553], const in arg x[1073993]:int(64)[13]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1074007]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1074019]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1074127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1074149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1074211]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1074217]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1074267]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1074273]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1074323]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1074329]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1074379]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1074385]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1074435]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1074441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1074473]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1075792]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1075798 'move' coerce_tmp[1075792](1075794 'cast' int(32)[95] 0))
                    (1074475 'move' call_tmp[1074473](1074478 call qio_channel_write_int64[234138] coerce_tmp[1075792] 2 _channel_internal[1073989] x[1073993]))
                    (1075802 'move' ret[1074007] call_tmp[1074473])
                    gotoReturn _end__write_binary_internal[1075491] _end__write_binary_internal[1075491]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1075491]
    (1075493 return ret[1074007])
  }
  function _write_binary_internal[1075815](const in arg _channel_internal[1075817]:qio_channel_ptr_t[231553], const in arg x[1075821]:int(64)[13]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1075835]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1075847]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1075955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1075977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1076039]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1076045]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1076095]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1076101]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1076151]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1076157]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1076207]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1076213]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1076263]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1076269]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1076301]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1077361]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1077367 'move' coerce_tmp[1077361](1077363 'cast' int(32)[95] 0))
                    (1076303 'move' call_tmp[1076301](1076306 call qio_channel_write_int64[234138] coerce_tmp[1077361] 3 _channel_internal[1075817] x[1075821]))
                    (1077371 'move' ret[1075835] call_tmp[1076301])
                    gotoReturn _end__write_binary_internal[1077319] _end__write_binary_internal[1077319]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1077319]
    (1077321 return ret[1075835])
  }
  function _write_binary_internal[1077383](const in arg _channel_internal[1077385]:qio_channel_ptr_t[231553], const in arg x[1077389]:int(64)[13]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1077403]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1077415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1077523]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1077545]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1077607]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1077613]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1077663]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1077669]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              val call_tmp[1077719]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              val call_tmp[1077725]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              {
                val call_tmp[1077775]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                val call_tmp[1077781]:uint(32)[110] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                {
                  val call_tmp[1077831]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  val call_tmp[1077837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  {
                    const-val call_tmp[1077869]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1078927]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1078933 'move' coerce_tmp[1078927](1078929 'cast' int(32)[95] 0))
                    (1077871 'move' call_tmp[1077869](1077874 call qio_channel_write_int64[234138] coerce_tmp[1078927] 1 _channel_internal[1077385] x[1077389]))
                    (1078937 'move' ret[1077403] call_tmp[1077869])
                    gotoReturn _end__write_binary_internal[1078887] _end__write_binary_internal[1078887]
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1078887]
    (1078889 return ret[1077403])
  }
  function _write_binary_internal[1168314](const in arg _channel_internal[1168316]:qio_channel_ptr_t[231553], const  ref arg x[1168320]:string[26]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1168334]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1168346]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1168454]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1168900]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1169197]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1169486]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1169509]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1905296]:string[26] "temp"
              (1169517 call localize[32889] x[1168320] ret_tmp[1905296])
              (1905299 'move' call_tmp[1169509] ret_tmp[1905296])
              val local_x[1169518]:string[26] "dead at end of block" "insert auto destroy"
              (1169520 'move' local_x[1169518] call_tmp[1169509])
              ref call_tmp[1169524]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
              (1169526 'move' call_tmp[1169524](1169529 call hasEscapes[758205] local_x[1169518]))
              const-val call_tmp[1169532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1169844]:bool[10] "dead after last mention" "const" "temp"
              (1169846 'move' tmp[1169844](1169848 'deref' call_tmp[1169524]))
              (1169534 'move' call_tmp[1169532] tmp[1169844])
              if call_tmp[1169532]
              {
                (1169869 call =[224221] ret[1168334] EILSEQ[224532])
                (1923233 call chpl__autoDestroy[1601673] local_x[1169518])
                gotoReturn _end__write_binary_internal[1169818] _end__write_binary_internal[1169818]
              }
              const-val call_tmp[1169557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169559 'move' call_tmp[1169557](1169562 call qio_channel_str_style[233175] _channel_internal[1168316]))
              const-val call_tmp[1169564]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169566 'move' call_tmp[1169564](1169572 call c_str[32935] local_x[1169518]))
              const-val call_tmp[1169573]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169575 'move' call_tmp[1169573](1169578 call numBytes[32810] local_x[1169518]))
              const-val call_tmp[1169581]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1169583 'move' call_tmp[1169581] call_tmp[1169573])
              const-val call_tmp[1169589]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1169857]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1169863 'move' coerce_tmp[1169857](1169859 'cast' int(32)[95] 0))
              (1169591 'move' call_tmp[1169589](1169594 call qio_channel_write_string[234477] coerce_tmp[1169857] 2 call_tmp[1169557] _channel_internal[1168316] call_tmp[1169564] call_tmp[1169581]))
              (1169876 'move' ret[1168334] call_tmp[1169589])
              (1923236 call chpl__autoDestroy[1601673] local_x[1169518])
              gotoReturn _end__write_binary_internal[1169818] _end__write_binary_internal[1169818]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1169818]
    (1169820 return ret[1168334])
  }
  function _write_binary_internal[1169889](const in arg _channel_internal[1169891]:qio_channel_ptr_t[231553], const  ref arg x[1169895]:string[26]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1169909]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1169921]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1170029]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1170475]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1170772]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1171061]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1171084]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1905302]:string[26] "temp"
              (1171092 call localize[32889] x[1169895] ret_tmp[1905302])
              (1905305 'move' call_tmp[1171084] ret_tmp[1905302])
              val local_x[1171093]:string[26] "dead at end of block" "insert auto destroy"
              (1171095 'move' local_x[1171093] call_tmp[1171084])
              ref call_tmp[1171099]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
              (1171101 'move' call_tmp[1171099](1171104 call hasEscapes[758205] local_x[1171093]))
              const-val call_tmp[1171107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1171419]:bool[10] "dead after last mention" "const" "temp"
              (1171421 'move' tmp[1171419](1171423 'deref' call_tmp[1171099]))
              (1171109 'move' call_tmp[1171107] tmp[1171419])
              if call_tmp[1171107]
              {
                (1171442 call =[224221] ret[1169909] EILSEQ[224532])
                (1923239 call chpl__autoDestroy[1601673] local_x[1171093])
                gotoReturn _end__write_binary_internal[1171393] _end__write_binary_internal[1171393]
              }
              const-val call_tmp[1171132]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171134 'move' call_tmp[1171132](1171137 call qio_channel_str_style[233175] _channel_internal[1169891]))
              const-val call_tmp[1171139]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171141 'move' call_tmp[1171139](1171147 call c_str[32935] local_x[1171093]))
              const-val call_tmp[1171148]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171150 'move' call_tmp[1171148](1171153 call numBytes[32810] local_x[1171093]))
              const-val call_tmp[1171156]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1171158 'move' call_tmp[1171156] call_tmp[1171148])
              const-val call_tmp[1171164]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1171430]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1171436 'move' coerce_tmp[1171430](1171432 'cast' int(32)[95] 0))
              (1171166 'move' call_tmp[1171164](1171169 call qio_channel_write_string[234477] coerce_tmp[1171430] 3 call_tmp[1171132] _channel_internal[1169891] call_tmp[1171139] call_tmp[1171156]))
              (1171449 'move' ret[1169909] call_tmp[1171164])
              (1923242 call chpl__autoDestroy[1601673] local_x[1171093])
              gotoReturn _end__write_binary_internal[1171393] _end__write_binary_internal[1171393]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1171393]
    (1171395 return ret[1169909])
  }
  function _write_binary_internal[1171461](const in arg _channel_internal[1171463]:qio_channel_ptr_t[231553], const  ref arg x[1171467]:string[26]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1171481]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1171493]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1171601]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1172047]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1172344]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1172633]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1172656]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1905308]:string[26] "temp"
              (1172664 call localize[32889] x[1171467] ret_tmp[1905308])
              (1905311 'move' call_tmp[1172656] ret_tmp[1905308])
              val local_x[1172665]:string[26] "dead at end of block" "insert auto destroy"
              (1172667 'move' local_x[1172665] call_tmp[1172656])
              ref call_tmp[1172671]:_ref(bool)[937388] "dead after last mention" "maybe param" "temp"
              (1172673 'move' call_tmp[1172671](1172676 call hasEscapes[758205] local_x[1172665]))
              const-val call_tmp[1172679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val tmp[1172991]:bool[10] "dead after last mention" "const" "temp"
              (1172993 'move' tmp[1172991](1172995 'deref' call_tmp[1172671]))
              (1172681 'move' call_tmp[1172679] tmp[1172991])
              if call_tmp[1172679]
              {
                (1173014 call =[224221] ret[1171481] EILSEQ[224532])
                (1923245 call chpl__autoDestroy[1601673] local_x[1172665])
                gotoReturn _end__write_binary_internal[1172965] _end__write_binary_internal[1172965]
              }
              const-val call_tmp[1172704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172706 'move' call_tmp[1172704](1172709 call qio_channel_str_style[233175] _channel_internal[1171463]))
              const-val call_tmp[1172711]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172713 'move' call_tmp[1172711](1172719 call c_str[32935] local_x[1172665]))
              const-val call_tmp[1172720]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172722 'move' call_tmp[1172720](1172725 call numBytes[32810] local_x[1172665]))
              const-val call_tmp[1172728]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (1172730 'move' call_tmp[1172728] call_tmp[1172720])
              const-val call_tmp[1172736]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1173002]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1173008 'move' coerce_tmp[1173002](1173004 'cast' int(32)[95] 0))
              (1172738 'move' call_tmp[1172736](1172741 call qio_channel_write_string[234477] coerce_tmp[1173002] 1 call_tmp[1172704] _channel_internal[1171463] call_tmp[1172711] call_tmp[1172728]))
              (1173021 'move' ret[1171481] call_tmp[1172736])
              (1923248 call chpl__autoDestroy[1601673] local_x[1172665])
              gotoReturn _end__write_binary_internal[1172965] _end__write_binary_internal[1172965]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1172965]
    (1172967 return ret[1171481])
  }
  function _write_binary_internal[1579921](const in arg _channel_internal[1579923]:qio_channel_ptr_t[231553], const in arg x[1579927]:real(64)[16]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1579941]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1579953]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1580061]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1580507]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1580531]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1580537]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1580589]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1580595]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1580658]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1580664]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1580765]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1581465]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1581471 'move' coerce_tmp[1581465](1581467 'cast' int(32)[95] 0))
              (1580767 'move' call_tmp[1580765](1580770 call qio_channel_write_float64[234354] coerce_tmp[1581465] 2 _channel_internal[1579923] x[1579927]))
              (1581475 'move' ret[1579941] call_tmp[1580765])
              gotoReturn _end__write_binary_internal[1581425] _end__write_binary_internal[1581425]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1581425]
    (1581427 return ret[1579941])
  }
  function _write_binary_internal[1581488](const in arg _channel_internal[1581490]:qio_channel_ptr_t[231553], const in arg x[1581494]:real(64)[16]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1581508]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1581520]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1581628]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1582074]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1582098]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1582104]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1582156]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1582162]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1582225]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1582231]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1582332]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1583030]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1583036 'move' coerce_tmp[1583030](1583032 'cast' int(32)[95] 0))
              (1582334 'move' call_tmp[1582332](1582337 call qio_channel_write_float64[234354] coerce_tmp[1583030] 3 _channel_internal[1581490] x[1581494]))
              (1583040 'move' ret[1581508] call_tmp[1582332])
              gotoReturn _end__write_binary_internal[1582992] _end__write_binary_internal[1582992]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1582992]
    (1582994 return ret[1581508])
  }
  function _write_binary_internal[1583052](const in arg _channel_internal[1583054]:qio_channel_ptr_t[231553], const in arg x[1583058]:real(64)[16]) : syserr[223672] "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1583072]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val call_tmp[1583084]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1583192]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1583638]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1583662]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1583668]:real(32)[120] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1583720]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val call_tmp[1583726]:imag(32)[125] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            val call_tmp[1583789]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val call_tmp[1583795]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            {
              const-val call_tmp[1583896]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1584594]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1584600 'move' coerce_tmp[1584594](1584596 'cast' int(32)[95] 0))
              (1583898 'move' call_tmp[1583896](1583901 call qio_channel_write_float64[234354] coerce_tmp[1584594] 1 _channel_internal[1583054] x[1583058]))
              (1584604 'move' ret[1583072] call_tmp[1583896])
              gotoReturn _end__write_binary_internal[1584556] _end__write_binary_internal[1584556]
            }
          }
        }
      }
    }
    label _end__write_binary_internal[1584556]
    (1584558 return ret[1583072])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1079801](const  ref arg this[1079807]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1079811]:int(64)[13], ref arg _retArg[1909338]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079815]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079827]:string[26] "dead at end of block" "insert auto destroy"
    (1079829 'move' result[1079827](1909342 call chpl__initCopy[981537] "while "))
    (1079866 call +=[38800] result[1079827] "writing ")
    val call_tmp[1079871]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1079886 call +=[38800] result[1079827] "int(64)")
    {
      val tmp[1079892]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1080020 'move' ret[1079815] result[1079827])
    gotoReturn _end__constructIoErrorMsg[1079996] _end__constructIoErrorMsg[1079996]
    label _end__constructIoErrorMsg[1079996]
    (1909340 '=' _retArg[1909338] ret[1079815])
    (1909344 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1080094](const  ref arg this[1080100]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1080104]:byteIndex[28173], ref arg _retArg[1909352]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1080108]:string[26] "dead after last mention" "RVV" "temp"
    val result[1080120]:string[26] "dead at end of block" "insert auto destroy"
    (1080122 'move' result[1080120](1909356 call chpl__initCopy[981537] "while "))
    (1080159 call +=[38800] result[1080120] "writing ")
    val call_tmp[1080164]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1080179 call +=[38800] result[1080120] "byteIndex")
    {
      val tmp[1080185]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1080327 'move' ret[1080108] result[1080120])
    gotoReturn _end__constructIoErrorMsg[1080289] _end__constructIoErrorMsg[1080289]
    label _end__constructIoErrorMsg[1080289]
    (1909354 '=' _retArg[1909352] ret[1080108])
    (1909358 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1173868](const  ref arg this[1173874]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1173878]:string[26], ref arg _retArg[1910602]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173882]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173894]:string[26] "dead at end of block" "insert auto destroy"
    (1173896 'move' result[1173894](1910606 call chpl__initCopy[981537] "while "))
    (1173933 call +=[38800] result[1173894] "writing ")
    val call_tmp[1173938]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1173953 call +=[38800] result[1173894] "string")
    {
      val tmp[1173959]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1174087 'move' ret[1173882] result[1173894])
    gotoReturn _end__constructIoErrorMsg[1174063] _end__constructIoErrorMsg[1174063]
    label _end__constructIoErrorMsg[1174063]
    (1910604 '=' _retArg[1910602] ret[1173882])
    (1910608 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1175586](const  ref arg this[1175592]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1175596]:codepointIndex[28277], ref arg _retArg[1910616]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175600]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175612]:string[26] "dead at end of block" "insert auto destroy"
    (1175614 'move' result[1175612](1910620 call chpl__initCopy[981537] "while "))
    (1175651 call +=[38800] result[1175612] "writing ")
    val call_tmp[1175656]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1175671 call +=[38800] result[1175612] "codepointIndex")
    {
      val tmp[1175677]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1175821 'move' ret[1175600] result[1175612])
    gotoReturn _end__constructIoErrorMsg[1175781] _end__constructIoErrorMsg[1175781]
    label _end__constructIoErrorMsg[1175781]
    (1910618 '=' _retArg[1910616] ret[1175600])
    (1910622 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1568710](const  ref arg this[1568716]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1568720]:ioLiteral[238841], ref arg _retArg[1916893]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1568724]:string[26] "dead after last mention" "RVV" "temp"
    val result[1568736]:string[26] "dead at end of block" "insert auto destroy"
    (1568738 'move' result[1568736](1916897 call chpl__initCopy[981537] "while "))
    (1568775 call +=[38800] result[1568736] "writing ")
    val call_tmp[1568780]:ioLiteral[238841] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1568795 call +=[38800] result[1568736] "ioLiteral")
    {
      val tmp[1568801]:ioLiteral[238841] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        {
          const-val call_tmp[1568864]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1907350]:string[26] "temp"
          (1568869 call _cast[238854] x[1568720] ret_tmp[1907350])
          (1907353 'move' call_tmp[1568864] ret_tmp[1907350])
          const-val call_tmp[1568872]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1906106]:string[26] "temp"
          (1568877 call +[38345] " \"" call_tmp[1568864] ret_tmp[1906106])
          (1906109 'move' call_tmp[1568872] ret_tmp[1906106])
          const-val call_tmp[1568880]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1906112]:string[26] "temp"
          (1568885 call +[38345] call_tmp[1568872] "\"" ret_tmp[1906112])
          (1906115 'move' call_tmp[1568880] ret_tmp[1906112])
          (1568889 call +=[38800] result[1568736] call_tmp[1568880])
          (1927573 call chpl__autoDestroy[1601673] call_tmp[1568880])
          (1927576 call chpl__autoDestroy[1601673] call_tmp[1568872])
          (1927579 call chpl__autoDestroy[1601673] call_tmp[1568864])
        }
      }
    }
    (1568999 'move' ret[1568724] result[1568736])
    gotoReturn _end__constructIoErrorMsg[1568905] _end__constructIoErrorMsg[1568905]
    label _end__constructIoErrorMsg[1568905]
    (1916895 '=' _retArg[1916893] ret[1568724])
    (1916899 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._constructIoErrorMsg[1585456](const  ref arg this[1585462]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1585466]:real(64)[16], ref arg _retArg[1916947]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1585470]:string[26] "dead after last mention" "RVV" "temp"
    val result[1585482]:string[26] "dead at end of block" "insert auto destroy"
    (1585484 'move' result[1585482](1916951 call chpl__initCopy[981537] "while "))
    (1585521 call +=[38800] result[1585482] "writing ")
    val call_tmp[1585526]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1585541 call +=[38800] result[1585482] "real(64)")
    {
      val tmp[1585547]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1585691 'move' ret[1585470] result[1585482])
    gotoReturn _end__constructIoErrorMsg[1585651] _end__constructIoErrorMsg[1585651]
    label _end__constructIoErrorMsg[1585651]
    (1916949 '=' _retArg[1916947] ret[1585470])
    (1916953 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._constructIoErrorMsg[1586029](const  ref arg this[1586035]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1586039]:[domain(1,int(64),false)] real(64)[1366029], ref arg _retArg[1916961]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1586043]:string[26] "dead after last mention" "RVV" "temp"
    val result[1586055]:string[26] "dead at end of block" "insert auto destroy"
    (1586057 'move' result[1586055](1916965 call chpl__initCopy[981537] "while "))
    (1586094 call +=[38800] result[1586055] "writing ")
    const-val call_tmp[1586099]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1586101 'move' call_tmp[1586099](1586233 call chpl__convertValueToRuntimeType[1517719] x[1586039]))
    (1586114 call +=[38800] result[1586055] "[domain(1,int(64),false)] real(64)")
    {
      const-val tmp[1586120]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
      (1586122 'move' tmp[1586120](1586254 call chpl__convertValueToRuntimeType[1517719] x[1586039]))
      {
      }
    }
    (1586270 'move' ret[1586043] result[1586055])
    gotoReturn _end__constructIoErrorMsg[1586224] _end__constructIoErrorMsg[1586224]
    label _end__constructIoErrorMsg[1586224]
    (1916963 '=' _retArg[1916961] ret[1586043])
    (1916967 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._constructIoErrorMsg[1589213](const  ref arg this[1589219]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1589223]:ioNewline[238789], ref arg _retArg[1916975]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1589227]:string[26] "dead after last mention" "RVV" "temp"
    val result[1589239]:string[26] "dead at end of block" "insert auto destroy"
    (1589241 'move' result[1589239](1916979 call chpl__initCopy[981537] "while "))
    (1589278 call +=[38800] result[1589239] "writing ")
    val call_tmp[1589283]:ioNewline[238789] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1589298 call +=[38800] result[1589239] "ioNewline")
    {
      val tmp[1589304]:ioNewline[238789] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        (1589336 call +=[38800] result[1589239] " newline")
      }
    }
    (1589493 'move' ret[1589227] result[1589239])
    gotoReturn _end__constructIoErrorMsg[1589408] _end__constructIoErrorMsg[1589408]
    label _end__constructIoErrorMsg[1589408]
    (1916977 '=' _retArg[1916975] ret[1589227])
    (1916981 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._constructIoErrorMsg[1590141](const  ref arg this[1590147]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1590151]:string[26], ref arg _retArg[1917001]:_ref(string)[938128]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1590155]:string[26] "dead after last mention" "RVV" "temp"
    val result[1590167]:string[26] "dead at end of block" "insert auto destroy"
    (1590169 'move' result[1590167](1917005 call chpl__initCopy[981537] "while "))
    (1590206 call +=[38800] result[1590167] "writing ")
    val call_tmp[1590211]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1590226 call +=[38800] result[1590167] "string")
    {
      val tmp[1590232]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
      }
    }
    (1590360 'move' ret[1590155] result[1590167])
    gotoReturn _end__constructIoErrorMsg[1590336] _end__constructIoErrorMsg[1590336]
    label _end__constructIoErrorMsg[1590336]
    (1917003 '=' _retArg[1917001] ret[1590155])
    (1917007 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1067201](const  ref arg this[1067207]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1067211]:byteIndex[28173], const  ref arg loc[1067213]:locale[28], ref arg error_out[1885577]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1067223]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1067225 'move' call_tmp[1067223](1067228 call _channel_internal[1061978] this[1067207]))
    const-val call_tmp[1067231]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1068550]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068554 'move' coerce_tmp[1068550](1068552 'deref' call_tmp[1067223]))
    val error[1885582]:Error[167984] "error variable" "temp"
    (1885584 'move' error[1885582] nil[44])
    (1067233 'move' call_tmp[1067231](1067236 call _write_one_internal[1068124] coerce_tmp[1068550] x[1067211] loc[1067213] error[1885582]))
    val errorExists[2222776]:bool[10] "temp"
    (2222781 'move' errorExists[2222776](2222778 '!=' error[1885582] nil[44]))
    if errorExists[2222776]
    {
      (1885588 '=' error_out[1885577] error[1885582])
      gotoErrorHandlingReturn _end_writeOne[1885579] _end_writeOne[1885579]
    }
    const-val err[1067241]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1067243 'move' err[1067241](1080089 call chpl__initCopy[964674] call_tmp[1067231]))
    const-val call_tmp[1067247]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067249 'move' call_tmp[1067247](1067252 call ENOERR[223742]))
    const-val call_tmp[1067253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067255 'move' call_tmp[1067253](1067258 call !=[223942] err[1067241] call_tmp[1067247]))
    const-val call_tmp[1067261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1067263 'move' call_tmp[1067261] call_tmp[1067253])
    if call_tmp[1067261]
    {
      const-val call_tmp[1067270]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1909346]:string[26] "temp"
      (1067278 call _constructIoErrorMsg[1080094] this[1067207] x[1067211] ret_tmp[1909346])
      (1909349 'move' call_tmp[1067270] ret_tmp[1909346])
      val msg[1067281]:string[26] "dead at end of block" "insert auto destroy"
      (1067283 'move' msg[1067281] call_tmp[1067270])
      const-val call_tmp[1067287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067289 'move' call_tmp[1067287](1067292 call ==[223787] err[1067241] EILSEQ[224532]))
      const-val call_tmp[1067295]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1067297 'move' call_tmp[1067295] call_tmp[1067287])
      if call_tmp[1067295]
      {
        const-val call_tmp[1067312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905776]:string[26] "temp"
        (1067317 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067281] ret_tmp[1905776])
        (1905779 'move' call_tmp[1067312] ret_tmp[1905776])
        (1067321 call =[38272] msg[1067281] call_tmp[1067312])
        (1921455 call chpl__autoDestroy[1601673] call_tmp[1067312])
      }
      {
        val error[1885596]:Error[167984] "error variable" "temp"
        (1885605 'move' error[1885596] nil[44])
        (1067333 call _ch_ioerror[1063054] this[1067207] err[1067241] msg[1067281] error[1885596])
        val errorExists[2222784]:bool[10] "temp"
        (2222789 'move' errorExists[2222784](2222786 '!=' error[1885596] nil[44]))
        if errorExists[2222784]
        {
          gotoErrorHandling handler[1885597] handler[1885597]
        }
        label handler[1885597]
        const-val shouldHandleError[1885616]:bool[10] "temp"
        val errorExists[2222792]:bool[10] "temp"
        (2222797 'move' errorExists[2222792](2222794 '!=' error[1885596] nil[44]))
        (1885620 'move' shouldHandleError[1885616] errorExists[2222792])
        if shouldHandleError[1885616]
        {
          (1885612 '=' error_out[1885577] error[1885596])
          (1921458 call chpl__autoDestroy[1601673] msg[1067281])
          gotoErrorHandlingReturn _end_writeOne[1885579] _end_writeOne[1885579]
        }
      }
      (1921462 call chpl__autoDestroy[1601673] msg[1067281])
    }
    label _end_writeOne[1885579]
    (1067341 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1069126](const  ref arg this[1069132]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1069136]:int(64)[13], const  ref arg loc[1069138]:locale[28], ref arg error_out[1885814]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1069148]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1069150 'move' call_tmp[1069148](1069153 call _channel_internal[1061978] this[1069132]))
    const-val call_tmp[1069156]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1070394]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070398 'move' coerce_tmp[1070394](1070396 'deref' call_tmp[1069148]))
    val error[1885819]:Error[167984] "error variable" "temp"
    (1885821 'move' error[1885819] nil[44])
    (1069158 'move' call_tmp[1069156](1069161 call _write_one_internal[1069270] coerce_tmp[1070394] x[1069136] loc[1069138] error[1885819]))
    val errorExists[2222896]:bool[10] "temp"
    (2222901 'move' errorExists[2222896](2222898 '!=' error[1885819] nil[44]))
    if errorExists[2222896]
    {
      (1885825 '=' error_out[1885814] error[1885819])
      gotoErrorHandlingReturn _end_writeOne[1885816] _end_writeOne[1885816]
    }
    const-val err[1069166]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1069168 'move' err[1069166](1079794 call chpl__initCopy[964674] call_tmp[1069156]))
    const-val call_tmp[1069172]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069174 'move' call_tmp[1069172](1069177 call ENOERR[223742]))
    const-val call_tmp[1069178]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069180 'move' call_tmp[1069178](1069183 call !=[223942] err[1069166] call_tmp[1069172]))
    const-val call_tmp[1069186]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1069188 'move' call_tmp[1069186] call_tmp[1069178])
    if call_tmp[1069186]
    {
      const-val call_tmp[1069195]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1909332]:string[26] "temp"
      (1069203 call _constructIoErrorMsg[1079801] this[1069132] x[1069136] ret_tmp[1909332])
      (1909335 'move' call_tmp[1069195] ret_tmp[1909332])
      val msg[1069206]:string[26] "dead at end of block" "insert auto destroy"
      (1069208 'move' msg[1069206] call_tmp[1069195])
      const-val call_tmp[1069212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069214 'move' call_tmp[1069212](1069217 call ==[223787] err[1069166] EILSEQ[224532]))
      const-val call_tmp[1069220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1069222 'move' call_tmp[1069220] call_tmp[1069212])
      if call_tmp[1069220]
      {
        const-val call_tmp[1069237]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905782]:string[26] "temp"
        (1069242 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069206] ret_tmp[1905782])
        (1905785 'move' call_tmp[1069237] ret_tmp[1905782])
        (1069246 call =[38272] msg[1069206] call_tmp[1069237])
        (1921521 call chpl__autoDestroy[1601673] call_tmp[1069237])
      }
      {
        val error[1885833]:Error[167984] "error variable" "temp"
        (1885842 'move' error[1885833] nil[44])
        (1069258 call _ch_ioerror[1063054] this[1069132] err[1069166] msg[1069206] error[1885833])
        val errorExists[2222904]:bool[10] "temp"
        (2222909 'move' errorExists[2222904](2222906 '!=' error[1885833] nil[44]))
        if errorExists[2222904]
        {
          gotoErrorHandling handler[1885834] handler[1885834]
        }
        label handler[1885834]
        const-val shouldHandleError[1885853]:bool[10] "temp"
        val errorExists[2222912]:bool[10] "temp"
        (2222917 'move' errorExists[2222912](2222914 '!=' error[1885833] nil[44]))
        (1885857 'move' shouldHandleError[1885853] errorExists[2222912])
        if shouldHandleError[1885853]
        {
          (1885849 '=' error_out[1885814] error[1885833])
          (1921524 call chpl__autoDestroy[1601673] msg[1069206])
          gotoErrorHandlingReturn _end_writeOne[1885816] _end_writeOne[1885816]
        }
      }
      (1921528 call chpl__autoDestroy[1601673] msg[1069206])
    }
    label _end_writeOne[1885816]
    (1069266 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1165349](const  ref arg this[1165355]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1165359]:string[26], const  ref arg loc[1165361]:locale[28], ref arg error_out[1886612]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1165371]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1165373 'move' call_tmp[1165371](1165376 call _channel_internal[1061978] this[1165355]))
    const-val call_tmp[1165379]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1168219]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168223 'move' coerce_tmp[1168219](1168221 'deref' call_tmp[1165371]))
    val error[1886617]:Error[167984] "error variable" "temp"
    (1886619 'move' error[1886617] nil[44])
    (1165381 'move' call_tmp[1165379](1165384 call _write_one_internal[1165493] coerce_tmp[1168219] x[1165359] loc[1165361] error[1886617]))
    val errorExists[2223288]:bool[10] "temp"
    (2223293 'move' errorExists[2223288](2223290 '!=' error[1886617] nil[44]))
    if errorExists[2223288]
    {
      (1886623 '=' error_out[1886612] error[1886617])
      gotoErrorHandlingReturn _end_writeOne[1886614] _end_writeOne[1886614]
    }
    const-val err[1165389]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1165391 'move' err[1165389](1173863 call chpl__initCopy[964674] call_tmp[1165379]))
    const-val call_tmp[1165395]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165397 'move' call_tmp[1165395](1165400 call ENOERR[223742]))
    const-val call_tmp[1165401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165403 'move' call_tmp[1165401](1165406 call !=[223942] err[1165389] call_tmp[1165395]))
    const-val call_tmp[1165409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1165411 'move' call_tmp[1165409] call_tmp[1165401])
    if call_tmp[1165409]
    {
      const-val call_tmp[1165418]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1910596]:string[26] "temp"
      (1165426 call _constructIoErrorMsg[1173868] this[1165355] x[1165359] ret_tmp[1910596])
      (1910599 'move' call_tmp[1165418] ret_tmp[1910596])
      val msg[1165429]:string[26] "dead at end of block" "insert auto destroy"
      (1165431 'move' msg[1165429] call_tmp[1165418])
      const-val call_tmp[1165435]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165437 'move' call_tmp[1165435](1165440 call ==[223787] err[1165389] EILSEQ[224532]))
      const-val call_tmp[1165443]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1165445 'move' call_tmp[1165443] call_tmp[1165435])
      if call_tmp[1165443]
      {
        const-val call_tmp[1165460]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905866]:string[26] "temp"
        (1165465 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165429] ret_tmp[1905866])
        (1905869 'move' call_tmp[1165460] ret_tmp[1905866])
        (1165469 call =[38272] msg[1165429] call_tmp[1165460])
        (1923223 call chpl__autoDestroy[1601673] call_tmp[1165460])
      }
      {
        val error[1886631]:Error[167984] "error variable" "temp"
        (1886640 'move' error[1886631] nil[44])
        (1165481 call _ch_ioerror[1063054] this[1165355] err[1165389] msg[1165429] error[1886631])
        val errorExists[2223296]:bool[10] "temp"
        (2223301 'move' errorExists[2223296](2223298 '!=' error[1886631] nil[44]))
        if errorExists[2223296]
        {
          gotoErrorHandling handler[1886632] handler[1886632]
        }
        label handler[1886632]
        const-val shouldHandleError[1886651]:bool[10] "temp"
        val errorExists[2223304]:bool[10] "temp"
        (2223309 'move' errorExists[2223304](2223306 '!=' error[1886631] nil[44]))
        (1886655 'move' shouldHandleError[1886651] errorExists[2223304])
        if shouldHandleError[1886651]
        {
          (1886647 '=' error_out[1886612] error[1886631])
          (1923226 call chpl__autoDestroy[1601673] msg[1165429])
          gotoErrorHandlingReturn _end_writeOne[1886614] _end_writeOne[1886614]
        }
      }
      (1923230 call chpl__autoDestroy[1601673] msg[1165429])
    }
    label _end_writeOne[1886614]
    (1165489 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1174102](const  ref arg this[1174108]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1174112]:codepointIndex[28277], const  ref arg loc[1174114]:locale[28], ref arg error_out[1886676]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1174124]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1174126 'move' call_tmp[1174124](1174129 call _channel_internal[1061978] this[1174108]))
    const-val call_tmp[1174132]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1175399]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175403 'move' coerce_tmp[1175399](1175401 'deref' call_tmp[1174124]))
    val error[1886681]:Error[167984] "error variable" "temp"
    (1886683 'move' error[1886681] nil[44])
    (1174134 'move' call_tmp[1174132](1174137 call _write_one_internal[1174973] coerce_tmp[1175399] x[1174112] loc[1174114] error[1886681]))
    val errorExists[2223320]:bool[10] "temp"
    (2223325 'move' errorExists[2223320](2223322 '!=' error[1886681] nil[44]))
    if errorExists[2223320]
    {
      (1886687 '=' error_out[1886676] error[1886681])
      gotoErrorHandlingReturn _end_writeOne[1886678] _end_writeOne[1886678]
    }
    const-val err[1174142]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1174144 'move' err[1174142](1175581 call chpl__initCopy[964674] call_tmp[1174132]))
    const-val call_tmp[1174148]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174150 'move' call_tmp[1174148](1174153 call ENOERR[223742]))
    const-val call_tmp[1174154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174156 'move' call_tmp[1174154](1174159 call !=[223942] err[1174142] call_tmp[1174148]))
    const-val call_tmp[1174162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1174164 'move' call_tmp[1174162] call_tmp[1174154])
    if call_tmp[1174162]
    {
      const-val call_tmp[1174171]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1910610]:string[26] "temp"
      (1174179 call _constructIoErrorMsg[1175586] this[1174108] x[1174112] ret_tmp[1910610])
      (1910613 'move' call_tmp[1174171] ret_tmp[1910610])
      val msg[1174182]:string[26] "dead at end of block" "insert auto destroy"
      (1174184 'move' msg[1174182] call_tmp[1174171])
      const-val call_tmp[1174188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174190 'move' call_tmp[1174188](1174193 call ==[223787] err[1174142] EILSEQ[224532]))
      const-val call_tmp[1174196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1174198 'move' call_tmp[1174196] call_tmp[1174188])
      if call_tmp[1174196]
      {
        const-val call_tmp[1174213]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905872]:string[26] "temp"
        (1174218 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1174182] ret_tmp[1905872])
        (1905875 'move' call_tmp[1174213] ret_tmp[1905872])
        (1174222 call =[38272] msg[1174182] call_tmp[1174213])
        (1923258 call chpl__autoDestroy[1601673] call_tmp[1174213])
      }
      {
        val error[1886695]:Error[167984] "error variable" "temp"
        (1886704 'move' error[1886695] nil[44])
        (1174234 call _ch_ioerror[1063054] this[1174108] err[1174142] msg[1174182] error[1886695])
        val errorExists[2223328]:bool[10] "temp"
        (2223333 'move' errorExists[2223328](2223330 '!=' error[1886695] nil[44]))
        if errorExists[2223328]
        {
          gotoErrorHandling handler[1886696] handler[1886696]
        }
        label handler[1886696]
        const-val shouldHandleError[1886715]:bool[10] "temp"
        val errorExists[2223336]:bool[10] "temp"
        (2223341 'move' errorExists[2223336](2223338 '!=' error[1886695] nil[44]))
        (1886719 'move' shouldHandleError[1886715] errorExists[2223336])
        if shouldHandleError[1886715]
        {
          (1886711 '=' error_out[1886676] error[1886695])
          (1923261 call chpl__autoDestroy[1601673] msg[1174182])
          gotoErrorHandlingReturn _end_writeOne[1886678] _end_writeOne[1886678]
        }
      }
      (1923265 call chpl__autoDestroy[1601673] msg[1174182])
    }
    label _end_writeOne[1886678]
    (1174242 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._writeOne[1553475](const  ref arg this[1553481]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1553485]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg loc[1553487]:locale[28], ref arg error_out[1888135]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1553497]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1553499 'move' call_tmp[1553497](1553502 call _channel_internal[1023265] this[1553481]))
    const-val call_tmp[1553505]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1555244]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1555248 'move' coerce_tmp[1555244](1555246 'deref' call_tmp[1553497]))
    val error[1888140]:Error[167984] "error variable" "temp"
    (1888142 'move' error[1888140] nil[44])
    (1553507 'move' call_tmp[1553505](1553510 call _write_one_internal[1554818] coerce_tmp[1555244] x[1553485] loc[1553487] error[1888140]))
    val errorExists[2224056]:bool[10] "temp"
    (2224061 'move' errorExists[2224056](2224058 '!=' error[1888140] nil[44]))
    if errorExists[2224056]
    {
      (1888146 '=' error_out[1888135] error[1888140])
      gotoErrorHandlingReturn _end_writeOne[1888137] _end_writeOne[1888137]
    }
    const-val err[1553515]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1553517 'move' err[1553515](1586024 call chpl__initCopy[964674] call_tmp[1553505]))
    const-val call_tmp[1553521]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1553523 'move' call_tmp[1553521](1553526 call ENOERR[223742]))
    const-val call_tmp[1553527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1553529 'move' call_tmp[1553527](1553532 call !=[223942] err[1553515] call_tmp[1553521]))
    const-val call_tmp[1553535]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1553537 'move' call_tmp[1553535] call_tmp[1553527])
    if call_tmp[1553535]
    {
      const-val call_tmp[1553544]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916955]:string[26] "temp"
      (1553552 call _constructIoErrorMsg[1586029] this[1553481] x[1553485] ret_tmp[1916955])
      (1916958 'move' call_tmp[1553544] ret_tmp[1916955])
      val msg[1553555]:string[26] "dead at end of block" "insert auto destroy"
      (1553557 'move' msg[1553555] call_tmp[1553544])
      const-val call_tmp[1553561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1553563 'move' call_tmp[1553561](1553566 call ==[223787] err[1553515] EILSEQ[224532]))
      const-val call_tmp[1553569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1553571 'move' call_tmp[1553569] call_tmp[1553561])
      if call_tmp[1553569]
      {
        const-val call_tmp[1553586]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906088]:string[26] "temp"
        (1553591 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1553555] ret_tmp[1906088])
        (1906091 'move' call_tmp[1553586] ret_tmp[1906088])
        (1553595 call =[38272] msg[1553555] call_tmp[1553586])
        (1927235 call chpl__autoDestroy[1601673] call_tmp[1553586])
      }
      {
        val error[1888154]:Error[167984] "error variable" "temp"
        (1888163 'move' error[1888154] nil[44])
        (1553607 call _ch_ioerror[1552948] this[1553481] err[1553515] msg[1553555] error[1888154])
        val errorExists[2224064]:bool[10] "temp"
        (2224069 'move' errorExists[2224064](2224066 '!=' error[1888154] nil[44]))
        if errorExists[2224064]
        {
          gotoErrorHandling handler[1888155] handler[1888155]
        }
        label handler[1888155]
        const-val shouldHandleError[1888174]:bool[10] "temp"
        val errorExists[2224072]:bool[10] "temp"
        (2224077 'move' errorExists[2224072](2224074 '!=' error[1888154] nil[44]))
        (1888178 'move' shouldHandleError[1888174] errorExists[2224072])
        if shouldHandleError[1888174]
        {
          (1888170 '=' error_out[1888135] error[1888154])
          (1927238 call chpl__autoDestroy[1601673] msg[1553555])
          gotoErrorHandlingReturn _end_writeOne[1888137] _end_writeOne[1888137]
        }
      }
      (1927242 call chpl__autoDestroy[1601673] msg[1553555])
    }
    label _end_writeOne[1888137]
    (1553615 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1565749](const  ref arg this[1565755]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1565759]:ioLiteral[238841], const  ref arg loc[1565761]:locale[28], ref arg error_out[1888816]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1565771]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1565773 'move' call_tmp[1565771](1565776 call _channel_internal[1061978] this[1565755]))
    const-val call_tmp[1565779]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1568622]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1568626 'move' coerce_tmp[1568622](1568624 'deref' call_tmp[1565771]))
    val error[1888821]:Error[167984] "error variable" "temp"
    (1888823 'move' error[1888821] nil[44])
    (1565781 'move' call_tmp[1565779](1565784 call _write_one_internal[1565893] coerce_tmp[1568622] x[1565759] loc[1565761] error[1888821]))
    val errorExists[2224336]:bool[10] "temp"
    (2224341 'move' errorExists[2224336](2224338 '!=' error[1888821] nil[44]))
    if errorExists[2224336]
    {
      (1888827 '=' error_out[1888816] error[1888821])
      gotoErrorHandlingReturn _end_writeOne[1888818] _end_writeOne[1888818]
    }
    const-val err[1565789]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1565791 'move' err[1565789](1568705 call chpl__initCopy[964674] call_tmp[1565779]))
    const-val call_tmp[1565795]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1565797 'move' call_tmp[1565795](1565800 call ENOERR[223742]))
    const-val call_tmp[1565801]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1565803 'move' call_tmp[1565801](1565806 call !=[223942] err[1565789] call_tmp[1565795]))
    const-val call_tmp[1565809]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1565811 'move' call_tmp[1565809] call_tmp[1565801])
    if call_tmp[1565809]
    {
      const-val call_tmp[1565818]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916887]:string[26] "temp"
      (1565826 call _constructIoErrorMsg[1568710] this[1565755] x[1565759] ret_tmp[1916887])
      (1916890 'move' call_tmp[1565818] ret_tmp[1916887])
      val msg[1565829]:string[26] "dead at end of block" "insert auto destroy"
      (1565831 'move' msg[1565829] call_tmp[1565818])
      const-val call_tmp[1565835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1565837 'move' call_tmp[1565835](1565840 call ==[223787] err[1565789] EILSEQ[224532]))
      const-val call_tmp[1565843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1565845 'move' call_tmp[1565843] call_tmp[1565835])
      if call_tmp[1565843]
      {
        const-val call_tmp[1565860]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906100]:string[26] "temp"
        (1565865 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1565829] ret_tmp[1906100])
        (1906103 'move' call_tmp[1565860] ret_tmp[1906100])
        (1565869 call =[38272] msg[1565829] call_tmp[1565860])
        (1927559 call chpl__autoDestroy[1601673] call_tmp[1565860])
      }
      {
        val error[1888835]:Error[167984] "error variable" "temp"
        (1888844 'move' error[1888835] nil[44])
        (1565881 call _ch_ioerror[1063054] this[1565755] err[1565789] msg[1565829] error[1888835])
        val errorExists[2224344]:bool[10] "temp"
        (2224349 'move' errorExists[2224344](2224346 '!=' error[1888835] nil[44]))
        if errorExists[2224344]
        {
          gotoErrorHandling handler[1888836] handler[1888836]
        }
        label handler[1888836]
        const-val shouldHandleError[1888855]:bool[10] "temp"
        val errorExists[2224352]:bool[10] "temp"
        (2224357 'move' errorExists[2224352](2224354 '!=' error[1888835] nil[44]))
        (1888859 'move' shouldHandleError[1888855] errorExists[2224352])
        if shouldHandleError[1888855]
        {
          (1888851 '=' error_out[1888816] error[1888835])
          (1927562 call chpl__autoDestroy[1601673] msg[1565829])
          gotoErrorHandlingReturn _end_writeOne[1888818] _end_writeOne[1888818]
        }
      }
      (1927566 call chpl__autoDestroy[1601673] msg[1565829])
    }
    label _end_writeOne[1888818]
    (1565889 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145]._writeOne[1578717](const  ref arg this[1578723]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1578727]:real(64)[16], const  ref arg loc[1578729]:locale[28], ref arg error_out[1889006]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1578739]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1578741 'move' call_tmp[1578739](1578744 call _channel_internal[1061978] this[1578723]))
    const-val call_tmp[1578747]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1579826]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1579830 'move' coerce_tmp[1579826](1579828 'deref' call_tmp[1578739]))
    val error[1889011]:Error[167984] "error variable" "temp"
    (1889013 'move' error[1889011] nil[44])
    (1578749 'move' call_tmp[1578747](1578752 call _write_one_internal[1578861] coerce_tmp[1579826] x[1578727] loc[1578729] error[1889011]))
    val errorExists[2224432]:bool[10] "temp"
    (2224437 'move' errorExists[2224432](2224434 '!=' error[1889011] nil[44]))
    if errorExists[2224432]
    {
      (1889017 '=' error_out[1889006] error[1889011])
      gotoErrorHandlingReturn _end_writeOne[1889008] _end_writeOne[1889008]
    }
    const-val err[1578757]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1578759 'move' err[1578757](1585451 call chpl__initCopy[964674] call_tmp[1578747]))
    const-val call_tmp[1578763]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1578765 'move' call_tmp[1578763](1578768 call ENOERR[223742]))
    const-val call_tmp[1578769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1578771 'move' call_tmp[1578769](1578774 call !=[223942] err[1578757] call_tmp[1578763]))
    const-val call_tmp[1578777]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1578779 'move' call_tmp[1578777] call_tmp[1578769])
    if call_tmp[1578777]
    {
      const-val call_tmp[1578786]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916941]:string[26] "temp"
      (1578794 call _constructIoErrorMsg[1585456] this[1578723] x[1578727] ret_tmp[1916941])
      (1916944 'move' call_tmp[1578786] ret_tmp[1916941])
      val msg[1578797]:string[26] "dead at end of block" "insert auto destroy"
      (1578799 'move' msg[1578797] call_tmp[1578786])
      const-val call_tmp[1578803]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1578805 'move' call_tmp[1578803](1578808 call ==[223787] err[1578757] EILSEQ[224532]))
      const-val call_tmp[1578811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1578813 'move' call_tmp[1578811] call_tmp[1578803])
      if call_tmp[1578811]
      {
        const-val call_tmp[1578828]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906118]:string[26] "temp"
        (1578833 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1578797] ret_tmp[1906118])
        (1906121 'move' call_tmp[1578828] ret_tmp[1906118])
        (1578837 call =[38272] msg[1578797] call_tmp[1578828])
        (1927613 call chpl__autoDestroy[1601673] call_tmp[1578828])
      }
      {
        val error[1889025]:Error[167984] "error variable" "temp"
        (1889034 'move' error[1889025] nil[44])
        (1578849 call _ch_ioerror[1063054] this[1578723] err[1578757] msg[1578797] error[1889025])
        val errorExists[2224440]:bool[10] "temp"
        (2224445 'move' errorExists[2224440](2224442 '!=' error[1889025] nil[44]))
        if errorExists[2224440]
        {
          gotoErrorHandling handler[1889026] handler[1889026]
        }
        label handler[1889026]
        const-val shouldHandleError[1889045]:bool[10] "temp"
        val errorExists[2224448]:bool[10] "temp"
        (2224453 'move' errorExists[2224448](2224450 '!=' error[1889025] nil[44]))
        (1889049 'move' shouldHandleError[1889045] errorExists[2224448])
        if shouldHandleError[1889045]
        {
          (1889041 '=' error_out[1889006] error[1889025])
          (1927616 call chpl__autoDestroy[1601673] msg[1578797])
          gotoErrorHandlingReturn _end_writeOne[1889008] _end_writeOne[1889008]
        }
      }
      (1927620 call chpl__autoDestroy[1601673] msg[1578797])
    }
    label _end_writeOne[1889008]
    (1578857 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._writeOne[1586285](const  ref arg this[1586291]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1586295]:ioNewline[238789], const  ref arg loc[1586297]:locale[28], ref arg error_out[1889070]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1586307]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1586309 'move' call_tmp[1586307](1586312 call _channel_internal[1023265] this[1586291]))
    const-val call_tmp[1586315]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1589157]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1589161 'move' coerce_tmp[1589157](1589159 'deref' call_tmp[1586307]))
    val error[1889075]:Error[167984] "error variable" "temp"
    (1889077 'move' error[1889075] nil[44])
    (1586317 'move' call_tmp[1586315](1586320 call _write_one_internal[1586429] coerce_tmp[1589157] x[1586295] loc[1586297] error[1889075]))
    val errorExists[2224464]:bool[10] "temp"
    (2224469 'move' errorExists[2224464](2224466 '!=' error[1889075] nil[44]))
    if errorExists[2224464]
    {
      (1889081 '=' error_out[1889070] error[1889075])
      gotoErrorHandlingReturn _end_writeOne[1889072] _end_writeOne[1889072]
    }
    const-val err[1586325]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1586327 'move' err[1586325](1589208 call chpl__initCopy[964674] call_tmp[1586315]))
    const-val call_tmp[1586331]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1586333 'move' call_tmp[1586331](1586336 call ENOERR[223742]))
    const-val call_tmp[1586337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1586339 'move' call_tmp[1586337](1586342 call !=[223942] err[1586325] call_tmp[1586331]))
    const-val call_tmp[1586345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1586347 'move' call_tmp[1586345] call_tmp[1586337])
    if call_tmp[1586345]
    {
      const-val call_tmp[1586354]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916969]:string[26] "temp"
      (1586362 call _constructIoErrorMsg[1589213] this[1586291] x[1586295] ret_tmp[1916969])
      (1916972 'move' call_tmp[1586354] ret_tmp[1916969])
      val msg[1586365]:string[26] "dead at end of block" "insert auto destroy"
      (1586367 'move' msg[1586365] call_tmp[1586354])
      const-val call_tmp[1586371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1586373 'move' call_tmp[1586371](1586376 call ==[223787] err[1586325] EILSEQ[224532]))
      const-val call_tmp[1586379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1586381 'move' call_tmp[1586379] call_tmp[1586371])
      if call_tmp[1586379]
      {
        const-val call_tmp[1586396]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906124]:string[26] "temp"
        (1586401 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1586365] ret_tmp[1906124])
        (1906127 'move' call_tmp[1586396] ret_tmp[1906124])
        (1586405 call =[38272] msg[1586365] call_tmp[1586396])
        (1927624 call chpl__autoDestroy[1601673] call_tmp[1586396])
      }
      {
        val error[1889089]:Error[167984] "error variable" "temp"
        (1889098 'move' error[1889089] nil[44])
        (1586417 call _ch_ioerror[1552948] this[1586291] err[1586325] msg[1586365] error[1889089])
        val errorExists[2224472]:bool[10] "temp"
        (2224477 'move' errorExists[2224472](2224474 '!=' error[1889089] nil[44]))
        if errorExists[2224472]
        {
          gotoErrorHandling handler[1889090] handler[1889090]
        }
        label handler[1889090]
        const-val shouldHandleError[1889109]:bool[10] "temp"
        val errorExists[2224480]:bool[10] "temp"
        (2224485 'move' errorExists[2224480](2224482 '!=' error[1889089] nil[44]))
        (1889113 'move' shouldHandleError[1889109] errorExists[2224480])
        if shouldHandleError[1889109]
        {
          (1889105 '=' error_out[1889070] error[1889089])
          (1927627 call chpl__autoDestroy[1601673] msg[1586365])
          gotoErrorHandlingReturn _end_writeOne[1889072] _end_writeOne[1889072]
        }
      }
      (1927631 call chpl__autoDestroy[1601673] msg[1586365])
    }
    label _end_writeOne[1889072]
    (1586425 return _void[55])
  }
  function _ref(channel(true,dynamic,true))[1022023]._writeOne[1589985](const  ref arg this[1589991]:_ref(channel(true,dynamic,true))[1022023], const  ref arg x[1589995]:string[26], const  ref arg loc[1589997]:locale[28], ref arg error_out[1889271]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1590007]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1590009 'move' call_tmp[1590007](1590012 call _channel_internal[1023265] this[1589991]))
    const-val call_tmp[1590015]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1590129]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1590133 'move' coerce_tmp[1590129](1590131 'deref' call_tmp[1590007]))
    val error[1889276]:Error[167984] "error variable" "temp"
    (1889278 'move' error[1889276] nil[44])
    (1590017 'move' call_tmp[1590015](1590020 call _write_one_internal[1165493] coerce_tmp[1590129] x[1589995] loc[1589997] error[1889276]))
    val errorExists[2224568]:bool[10] "temp"
    (2224573 'move' errorExists[2224568](2224570 '!=' error[1889276] nil[44]))
    if errorExists[2224568]
    {
      (1889282 '=' error_out[1889271] error[1889276])
      gotoErrorHandlingReturn _end_writeOne[1889273] _end_writeOne[1889273]
    }
    const-val err[1590025]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1590027 'move' err[1590025](1590136 call chpl__initCopy[964674] call_tmp[1590015]))
    const-val call_tmp[1590031]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (1590033 'move' call_tmp[1590031](1590036 call ENOERR[223742]))
    const-val call_tmp[1590037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1590039 'move' call_tmp[1590037](1590042 call !=[223942] err[1590025] call_tmp[1590031]))
    const-val call_tmp[1590045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1590047 'move' call_tmp[1590045] call_tmp[1590037])
    if call_tmp[1590045]
    {
      const-val call_tmp[1590054]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916995]:string[26] "temp"
      (1590062 call _constructIoErrorMsg[1590141] this[1589991] x[1589995] ret_tmp[1916995])
      (1916998 'move' call_tmp[1590054] ret_tmp[1916995])
      val msg[1590065]:string[26] "dead at end of block" "insert auto destroy"
      (1590067 'move' msg[1590065] call_tmp[1590054])
      const-val call_tmp[1590071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1590073 'move' call_tmp[1590071](1590076 call ==[223787] err[1590025] EILSEQ[224532]))
      const-val call_tmp[1590079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1590081 'move' call_tmp[1590079] call_tmp[1590071])
      if call_tmp[1590079]
      {
        const-val call_tmp[1590096]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906130]:string[26] "temp"
        (1590101 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1590065] ret_tmp[1906130])
        (1906133 'move' call_tmp[1590096] ret_tmp[1906130])
        (1590105 call =[38272] msg[1590065] call_tmp[1590096])
        (1927666 call chpl__autoDestroy[1601673] call_tmp[1590096])
      }
      {
        val error[1889290]:Error[167984] "error variable" "temp"
        (1889299 'move' error[1889290] nil[44])
        (1590117 call _ch_ioerror[1552948] this[1589991] err[1590025] msg[1590065] error[1889290])
        val errorExists[2224576]:bool[10] "temp"
        (2224581 'move' errorExists[2224576](2224578 '!=' error[1889290] nil[44]))
        if errorExists[2224576]
        {
          gotoErrorHandling handler[1889291] handler[1889291]
        }
        label handler[1889291]
        const-val shouldHandleError[1889310]:bool[10] "temp"
        val errorExists[2224584]:bool[10] "temp"
        (2224589 'move' errorExists[2224584](2224586 '!=' error[1889290] nil[44]))
        (1889314 'move' shouldHandleError[1889310] errorExists[2224584])
        if shouldHandleError[1889310]
        {
          (1889306 '=' error_out[1889271] error[1889290])
          (1927669 call chpl__autoDestroy[1601673] msg[1590065])
          gotoErrorHandlingReturn _end_writeOne[1889273] _end_writeOne[1889273]
        }
      }
      (1927673 call chpl__autoDestroy[1601673] msg[1590065])
    }
    label _end_writeOne[1889273]
    (1590125 return _void[55])
  }
  function _write_one_internal[1069270](const in arg _channel_internal[1069272]:qio_channel_ptr_t[231553], const in arg x[1069276]:int(64)[13], const  ref arg loc[1069278]:locale[28], ref arg error_out[1885861]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1069292]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1069936]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1069938 'move' call_tmp[1069936](1069941 call ENOERR[223742]))
    val e[1069942]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1070402]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1079785 call =[224221] init_coerce_tmp[1070402] call_tmp[1069936])
    (1069944 'move' e[1069942] init_coerce_tmp[1070402])
    val call_tmp[1069949]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1069988]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1070036]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1070127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1070201]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070203 'move' call_tmp[1070201](1070206 call qio_channel_binary[233145] _channel_internal[1069272]))
              val call_tmp[1070208]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1070215]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070217 'move' binary[1070215] call_tmp[1070201])
              const-val call_tmp[1070222]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1070224 'move' call_tmp[1070222](1070227 call qio_channel_byteorder[233160] _channel_internal[1069272]))
              val call_tmp[1070229]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1070236]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1070238 'move' byteorder[1070236] call_tmp[1070222])
              const-val call_tmp[1070243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1070487]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1070493 'move' coerce_tmp[1070487](1070489 'cast' int(64)[13] binary[1070215]))
              (1070245 'move' call_tmp[1070243](1070248 call _cond_test[9912] coerce_tmp[1070487]))
              if call_tmp[1070243]
              {
                {
                  const-val tmp[1070253]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1885864]:Error[167984] "error variable" "temp"
                  (1885866 'move' error[1885864] nil[44])
                  (1070255 'move' tmp[1070253](1070258 call _cast[1070497] byteorder[1070236] error[1885864]))
                  val errorExists[2222920]:bool[10] "temp"
                  (2222925 'move' errorExists[2222920](2222922 '!=' error[1885864] nil[44]))
                  if errorExists[2222920]
                  {
                    (1885870 '=' error_out[1885861] error[1885864])
                    gotoErrorHandlingReturn _end__write_one_internal[1070390] _end__write_one_internal[1070390]
                  }
                  const-val call_tmp[1070261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070263 'move' call_tmp[1070261](1070266 call ==[1018462] tmp[1070253] big[231014]))
                  const-val call_tmp[1070269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1070271 'move' call_tmp[1070269] call_tmp[1070261])
                  if call_tmp[1070269]
                  {
                    const-val call_tmp[1070278]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070280 'move' call_tmp[1070278](1070283 call _write_binary_internal[1073987] _channel_internal[1069272] x[1069276]))
                    (1070288 call =[224200] e[1069942] call_tmp[1070278])
                  }
                  {
                    const-val call_tmp[1070294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070296 'move' call_tmp[1070294](1070299 call ==[1018462] tmp[1070253] little[231017]))
                    const-val call_tmp[1070302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1070304 'move' call_tmp[1070302] call_tmp[1070294])
                    if call_tmp[1070302]
                    {
                      const-val call_tmp[1070311]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070313 'move' call_tmp[1070311](1070316 call _write_binary_internal[1075815] _channel_internal[1069272] x[1069276]))
                      (1070321 call =[224200] e[1069942] call_tmp[1070311])
                    }
                    {
                      const-val call_tmp[1070327]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1070329 'move' call_tmp[1070327](1070332 call _write_binary_internal[1077383] _channel_internal[1069272] x[1069276]))
                      (1070337 call =[224200] e[1069942] call_tmp[1070327])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1070345]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                (1070347 'move' call_tmp[1070345](1070350 call _write_text_internal[1078949] _channel_internal[1069272] x[1069276]))
                (1070354 call =[224200] e[1069942] call_tmp[1070345])
              }
            }
          }
        }
      }
    }
    (1079792 'move' ret[1069292] e[1069942])
    gotoReturn _end__write_one_internal[1070390] _end__write_one_internal[1070390]
    label _end__write_one_internal[1070390]
    (1070392 return ret[1069292])
  }
  function _write_one_internal[1165493](const in arg _channel_internal[1165495]:qio_channel_ptr_t[231553], const  ref arg x[1165499]:string[26], const  ref arg loc[1165501]:locale[28], ref arg error_out[1886659]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1165515]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1167761]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1167763 'move' call_tmp[1167761](1167766 call ENOERR[223742]))
    val e[1167767]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1168227]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1173854 call =[224221] init_coerce_tmp[1168227] call_tmp[1167761])
    (1167769 'move' e[1167767] init_coerce_tmp[1168227])
    val call_tmp[1167774]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1167813]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1167861]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1167952]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1168026]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1168028 'move' call_tmp[1168026](1168031 call qio_channel_binary[233145] _channel_internal[1165495]))
              val call_tmp[1168033]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1168040]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1168042 'move' binary[1168040] call_tmp[1168026])
              const-val call_tmp[1168047]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1168049 'move' call_tmp[1168047](1168052 call qio_channel_byteorder[233160] _channel_internal[1165495]))
              val call_tmp[1168054]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1168061]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1168063 'move' byteorder[1168061] call_tmp[1168047])
              const-val call_tmp[1168068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1168303]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1168309 'move' coerce_tmp[1168303](1168305 'cast' int(64)[13] binary[1168040]))
              (1168070 'move' call_tmp[1168068](1168073 call _cond_test[9912] coerce_tmp[1168303]))
              if call_tmp[1168068]
              {
                {
                  const-val tmp[1168078]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1886662]:Error[167984] "error variable" "temp"
                  (1886664 'move' error[1886662] nil[44])
                  (1168080 'move' tmp[1168078](1168083 call _cast[1070497] byteorder[1168061] error[1886662]))
                  val errorExists[2223312]:bool[10] "temp"
                  (2223317 'move' errorExists[2223312](2223314 '!=' error[1886662] nil[44]))
                  if errorExists[2223312]
                  {
                    (1886668 '=' error_out[1886659] error[1886662])
                    gotoErrorHandlingReturn _end__write_one_internal[1168215] _end__write_one_internal[1168215]
                  }
                  const-val call_tmp[1168086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1168088 'move' call_tmp[1168086](1168091 call ==[1018462] tmp[1168078] big[231014]))
                  const-val call_tmp[1168094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1168096 'move' call_tmp[1168094] call_tmp[1168086])
                  if call_tmp[1168094]
                  {
                    const-val call_tmp[1168103]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1168105 'move' call_tmp[1168103](1168108 call _write_binary_internal[1168314] _channel_internal[1165495] x[1165499]))
                    (1168113 call =[224200] e[1167767] call_tmp[1168103])
                  }
                  {
                    const-val call_tmp[1168119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1168121 'move' call_tmp[1168119](1168124 call ==[1018462] tmp[1168078] little[231017]))
                    const-val call_tmp[1168127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1168129 'move' call_tmp[1168127] call_tmp[1168119])
                    if call_tmp[1168127]
                    {
                      const-val call_tmp[1168136]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1168138 'move' call_tmp[1168136](1168141 call _write_binary_internal[1169889] _channel_internal[1165495] x[1165499]))
                      (1168146 call =[224200] e[1167767] call_tmp[1168136])
                    }
                    {
                      const-val call_tmp[1168152]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1168154 'move' call_tmp[1168152](1168157 call _write_binary_internal[1171461] _channel_internal[1165495] x[1165499]))
                      (1168162 call =[224200] e[1167767] call_tmp[1168152])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1168170]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                (1168172 'move' call_tmp[1168170](1168175 call _write_text_internal[1173033] _channel_internal[1165495] x[1165499]))
                (1168179 call =[224200] e[1167767] call_tmp[1168170])
              }
            }
          }
        }
      }
    }
    (1173861 'move' ret[1165515] e[1167767])
    gotoReturn _end__write_one_internal[1168215] _end__write_one_internal[1168215]
    label _end__write_one_internal[1168215]
    (1168217 return ret[1165515])
  }
  function _write_one_internal[1565893](const in arg _channel_internal[1565895]:qio_channel_ptr_t[231553], const  ref arg x[1565899]:ioLiteral[238841], const  ref arg loc[1565901]:locale[28], ref arg error_out[1888863]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1565915]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1568164]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1568166 'move' call_tmp[1568164](1568169 call ENOERR[223742]))
    const-val e[1568170]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1568630]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1568693 call =[224221] init_coerce_tmp[1568630] call_tmp[1568164])
    (1568172 'move' e[1568170] init_coerce_tmp[1568630])
    val call_tmp[1568177]:ioLiteral[238841] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1568216]:ioLiteral[238841] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1568264]:ioLiteral[238841] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[1568287]:_ref(string)[938128] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1568289 'move' call_tmp[1568287](1568292 call val[894935] x[1565899]))
          const-val call_tmp[1568295]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1905350]:string[26] "temp"
          (1568303 call localize[32889] call_tmp[1568287] ret_tmp[1905350])
          (1905353 'move' call_tmp[1568295] ret_tmp[1905350])
          const-val call_tmp[1568304]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (1568306 'move' call_tmp[1568304](1568312 call c_str[32935] call_tmp[1568295]))
          ref call_tmp[1568313]:_ref(string)[938128] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1568315 'move' call_tmp[1568313](1568318 call val[894935] x[1565899]))
          const-val call_tmp[1568321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1568323 'move' call_tmp[1568321](1568326 call numBytes[32810] call_tmp[1568313]))
          const-val call_tmp[1568329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1568331 'move' call_tmp[1568329] call_tmp[1568321])
          const-val call_tmp[1568337]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1568681]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1568687 'move' coerce_tmp[1568681](1568683 'cast' int(32)[95] 0))
          (1568339 'move' call_tmp[1568337](1568342 call qio_channel_print_literal[235005] coerce_tmp[1568681] _channel_internal[1565895] call_tmp[1568304] call_tmp[1568329]))
          (1568700 'move' ret[1565915] call_tmp[1568337])
          (1927569 call chpl__autoDestroy[1601673] call_tmp[1568295])
          gotoReturn _end__write_one_internal[1568618] _end__write_one_internal[1568618]
        }
      }
    }
    label _end__write_one_internal[1568618]
    (1568620 return ret[1565915])
  }
  function _write_one_internal[1578861](const in arg _channel_internal[1578863]:qio_channel_ptr_t[231553], const in arg x[1578867]:real(64)[16], const  ref arg loc[1578869]:locale[28], ref arg error_out[1889053]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1578883]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1579368]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1579370 'move' call_tmp[1579368](1579373 call ENOERR[223742]))
    val e[1579374]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1579834]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1585442 call =[224221] init_coerce_tmp[1579834] call_tmp[1579368])
    (1579376 'move' e[1579374] init_coerce_tmp[1579834])
    val call_tmp[1579381]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1579420]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        val call_tmp[1579468]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          val call_tmp[1579559]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          {
            {
              const-val call_tmp[1579633]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1579635 'move' call_tmp[1579633](1579638 call qio_channel_binary[233145] _channel_internal[1578863]))
              val call_tmp[1579640]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val binary[1579647]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1579649 'move' binary[1579647] call_tmp[1579633])
              const-val call_tmp[1579654]:uint(8)[100] "dead at end of block" "maybe param" "temp"
              (1579656 'move' call_tmp[1579654](1579659 call qio_channel_byteorder[233160] _channel_internal[1578863]))
              val call_tmp[1579661]:uint(8)[100] "dead after last mention" "maybe param" "temp" "type variable"
              const-val byteorder[1579668]:uint(8)[100] "dead at end of block" "insert auto destroy"
              (1579670 'move' byteorder[1579668] call_tmp[1579654])
              const-val call_tmp[1579675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1579910]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1579916 'move' coerce_tmp[1579910](1579912 'cast' int(64)[13] binary[1579647]))
              (1579677 'move' call_tmp[1579675](1579680 call _cond_test[9912] coerce_tmp[1579910]))
              if call_tmp[1579675]
              {
                {
                  const-val tmp[1579685]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
                  val error[1889056]:Error[167984] "error variable" "temp"
                  (1889058 'move' error[1889056] nil[44])
                  (1579687 'move' tmp[1579685](1579690 call _cast[1070497] byteorder[1579668] error[1889056]))
                  val errorExists[2224456]:bool[10] "temp"
                  (2224461 'move' errorExists[2224456](2224458 '!=' error[1889056] nil[44]))
                  if errorExists[2224456]
                  {
                    (1889062 '=' error_out[1889053] error[1889056])
                    gotoErrorHandlingReturn _end__write_one_internal[1579822] _end__write_one_internal[1579822]
                  }
                  const-val call_tmp[1579693]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1579695 'move' call_tmp[1579693](1579698 call ==[1018462] tmp[1579685] big[231014]))
                  const-val call_tmp[1579701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1579703 'move' call_tmp[1579701] call_tmp[1579693])
                  if call_tmp[1579701]
                  {
                    const-val call_tmp[1579710]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1579712 'move' call_tmp[1579710](1579715 call _write_binary_internal[1579921] _channel_internal[1578863] x[1578867]))
                    (1579720 call =[224200] e[1579374] call_tmp[1579710])
                  }
                  {
                    const-val call_tmp[1579726]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1579728 'move' call_tmp[1579726](1579731 call ==[1018462] tmp[1579685] little[231017]))
                    const-val call_tmp[1579734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1579736 'move' call_tmp[1579734] call_tmp[1579726])
                    if call_tmp[1579734]
                    {
                      const-val call_tmp[1579743]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1579745 'move' call_tmp[1579743](1579748 call _write_binary_internal[1581488] _channel_internal[1578863] x[1578867]))
                      (1579753 call =[224200] e[1579374] call_tmp[1579743])
                    }
                    {
                      const-val call_tmp[1579759]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1579761 'move' call_tmp[1579759](1579764 call _write_binary_internal[1583052] _channel_internal[1578863] x[1578867]))
                      (1579769 call =[224200] e[1579374] call_tmp[1579759])
                    }
                  }
                }
              }
              {
                const-val call_tmp[1579777]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
                (1579779 'move' call_tmp[1579777](1579782 call _write_text_internal[1584616] _channel_internal[1578863] x[1578867]))
                (1579786 call =[224200] e[1579374] call_tmp[1579777])
              }
            }
          }
        }
      }
    }
    (1585449 'move' ret[1578883] e[1579374])
    gotoReturn _end__write_one_internal[1579822] _end__write_one_internal[1579822]
    label _end__write_one_internal[1579822]
    (1579824 return ret[1578883])
  }
  function _write_one_internal[1586429](const in arg _channel_internal[1586431]:qio_channel_ptr_t[231553], const  ref arg x[1586435]:ioNewline[238789], const  ref arg loc[1586437]:locale[28], ref arg error_out[1889117]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1586451]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1588699]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1588701 'move' call_tmp[1588699](1588704 call ENOERR[223742]))
    const-val e[1588705]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1589165]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1589196 call =[224221] init_coerce_tmp[1589165] call_tmp[1588699])
    (1588707 'move' e[1588705] init_coerce_tmp[1589165])
    val call_tmp[1588712]:ioNewline[238789] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1588735]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1589184]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1589190 'move' coerce_tmp[1589184](1589186 'cast' int(32)[95] 0))
      (1588737 'move' call_tmp[1588735](1588740 call qio_channel_write_newline[234823] coerce_tmp[1589184] _channel_internal[1586431]))
      (1589203 'move' ret[1586451] call_tmp[1588735])
      gotoReturn _end__write_one_internal[1589153] _end__write_one_internal[1589153]
    }
    label _end__write_one_internal[1589153]
    (1589155 return ret[1586451])
  }
  function _write_one_internal[1068124](const in arg _channel_internal[1068126]:qio_channel_ptr_t[231553], const  ref arg x[1068130]:byteIndex[28173], const  ref arg loc[1068132]:locale[28], ref arg error_out[1885624]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1068136]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1068146]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906316]:locale[28] "temp"
    (1068151 call here[90438] ret_tmp[1906316])
    (1906319 'move' call_tmp[1068146] ret_tmp[1906316])
    const-val call_tmp[1068152]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1068559]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (1068562 call init[1068577] initTemp[1068559] call_tmp[1068146] _channel_internal[1068126] loc[1068132])
    (1068154 'move' call_tmp[1068152] initTemp[1068559])
    val writer[1068169]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1068171 'move' writer[1068169] call_tmp[1068152])
    const-val call_tmp[1068191]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1068193 'move' call_tmp[1068191](1068196 call ENOERR[223742]))
    const-val err[1068197]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1068713]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1080080 call =[224221] init_coerce_tmp[1068713] call_tmp[1068191])
    (1068199 'move' err[1068197] init_coerce_tmp[1068713])
    val call_tmp[1068208]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068258]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1068324]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1885626]:Error[167984] "error variable" "temp"
        (1885635 'move' error[1885626] nil[44])
        (1068531 call writeThis[1068809] x[1068130] writer[1068169] error[1885626])
        val errorExists[2222800]:bool[10] "temp"
        (2222805 'move' errorExists[2222800](2222802 '!=' error[1885626] nil[44]))
        if errorExists[2222800]
        {
          gotoErrorHandling handler[1885627] handler[1885627]
        }
        label handler[1885627]
        const-val shouldHandleError[1885646]:bool[10] "temp"
        val errorExists[2222808]:bool[10] "temp"
        (2222813 'move' errorExists[2222808](2222810 '!=' error[1885626] nil[44]))
        (1885650 'move' shouldHandleError[1885646] errorExists[2222808])
        if shouldHandleError[1885646]
        {
          (1885642 '=' error_out[1885624] error[1885626])
          ref call_tmp[1921466]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
          (1921468 'move' call_tmp[1921466](1921471 call _channel_internal[1061978] writer[1068169]))
          (1921474 call =[861669] call_tmp[1921466] QIO_CHANNEL_PTR_NULL[231556])
          (1921479 call chpl__autoDestroy[1676445] writer[1068169])
          (1921482 call chpl__autoDestroy[1601737] call_tmp[1068146])
          gotoErrorHandlingReturn _end__write_one_internal[1068546] _end__write_one_internal[1068546]
        }
      }
    }
    (1080087 'move' ret[1068136] err[1068197])
    ref call_tmp[1921486]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1921488 'move' call_tmp[1921486](1921491 call _channel_internal[1061978] writer[1068169]))
    (1921494 call =[861669] call_tmp[1921486] QIO_CHANNEL_PTR_NULL[231556])
    (1921499 call chpl__autoDestroy[1676445] writer[1068169])
    (1921502 call chpl__autoDestroy[1601737] call_tmp[1068146])
    gotoReturn _end__write_one_internal[1068546] _end__write_one_internal[1068546]
    label _end__write_one_internal[1068546]
    (1068548 return ret[1068136])
  }
  function _write_one_internal[1174973](const in arg _channel_internal[1174975]:qio_channel_ptr_t[231553], const  ref arg x[1174979]:codepointIndex[28277], const  ref arg loc[1174981]:locale[28], ref arg error_out[1886723]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1174985]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1174995]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906334]:locale[28] "temp"
    (1175000 call here[90438] ret_tmp[1906334])
    (1906337 'move' call_tmp[1174995] ret_tmp[1906334])
    const-val call_tmp[1175001]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1175408]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (1175411 call init[1068577] initTemp[1175408] call_tmp[1174995] _channel_internal[1174975] loc[1174981])
    (1175003 'move' call_tmp[1175001] initTemp[1175408])
    val writer[1175018]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1175020 'move' writer[1175018] call_tmp[1175001])
    const-val call_tmp[1175040]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1175042 'move' call_tmp[1175040](1175045 call ENOERR[223742]))
    const-val err[1175046]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1175438]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1175572 call =[224221] init_coerce_tmp[1175438] call_tmp[1175040])
    (1175048 'move' err[1175046] init_coerce_tmp[1175438])
    val call_tmp[1175057]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1175107]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1175173]:codepointIndex[28277] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      {
        val error[1886725]:Error[167984] "error variable" "temp"
        (1886734 'move' error[1886725] nil[44])
        (1175380 call writeThis[1175534] x[1174979] writer[1175018] error[1886725])
        val errorExists[2223344]:bool[10] "temp"
        (2223349 'move' errorExists[2223344](2223346 '!=' error[1886725] nil[44]))
        if errorExists[2223344]
        {
          gotoErrorHandling handler[1886726] handler[1886726]
        }
        label handler[1886726]
        const-val shouldHandleError[1886745]:bool[10] "temp"
        val errorExists[2223352]:bool[10] "temp"
        (2223357 'move' errorExists[2223352](2223354 '!=' error[1886725] nil[44]))
        (1886749 'move' shouldHandleError[1886745] errorExists[2223352])
        if shouldHandleError[1886745]
        {
          (1886741 '=' error_out[1886723] error[1886725])
          ref call_tmp[1923269]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
          (1923271 'move' call_tmp[1923269](1923274 call _channel_internal[1061978] writer[1175018]))
          (1923277 call =[861669] call_tmp[1923269] QIO_CHANNEL_PTR_NULL[231556])
          (1923282 call chpl__autoDestroy[1676445] writer[1175018])
          (1923285 call chpl__autoDestroy[1601737] call_tmp[1174995])
          gotoErrorHandlingReturn _end__write_one_internal[1175395] _end__write_one_internal[1175395]
        }
      }
    }
    (1175579 'move' ret[1174985] err[1175046])
    ref call_tmp[1923289]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1923291 'move' call_tmp[1923289](1923294 call _channel_internal[1061978] writer[1175018]))
    (1923297 call =[861669] call_tmp[1923289] QIO_CHANNEL_PTR_NULL[231556])
    (1923302 call chpl__autoDestroy[1676445] writer[1175018])
    (1923305 call chpl__autoDestroy[1601737] call_tmp[1174995])
    gotoReturn _end__write_one_internal[1175395] _end__write_one_internal[1175395]
    label _end__write_one_internal[1175395]
    (1175397 return ret[1174985])
  }
  function _write_one_internal[1554818](const in arg _channel_internal[1554820]:qio_channel_ptr_t[231553], const  ref arg x[1554824]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg loc[1554826]:locale[28], ref arg error_out[1888182]:Error[167984]) : syserr[223672] throws "inline" "instantiated generic" "invisible fn" "private" "resolved" "suppress lvalue error"
  {
    val ret[1554830]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1554840]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906472]:locale[28] "temp"
    (1554845 call here[90438] ret_tmp[1906472])
    (1906475 'move' call_tmp[1554840] ret_tmp[1906472])
    const-val call_tmp[1554846]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1555253]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (1555256 call init[1068577] initTemp[1555253] call_tmp[1554840] _channel_internal[1554820] loc[1554826])
    (1554848 'move' call_tmp[1554846] initTemp[1555253])
    val writer[1554863]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (1554865 'move' writer[1554863] call_tmp[1554846])
    const-val call_tmp[1554885]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1554887 'move' call_tmp[1554885](1554890 call ENOERR[223742]))
    const-val err[1554891]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1555283]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1586015 call =[224221] init_coerce_tmp[1555283] call_tmp[1554885])
    (1554893 'move' err[1554891] init_coerce_tmp[1555283])
    const-val call_tmp[1554902]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1554904 'move' call_tmp[1554902](1555289 call chpl__convertValueToRuntimeType[1517719] x[1554824]))
    const-val call_tmp[1554952]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1554954 'move' call_tmp[1554952](1555324 call chpl__convertValueToRuntimeType[1517719] x[1554824]))
    const-val call_tmp[1555018]:_RuntimeTypeInfo[1366262] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555020 'move' call_tmp[1555018](1555352 call chpl__convertValueToRuntimeType[1517719] x[1554824]))
    {
      {
        val error[1888184]:Error[167984] "error variable" "temp"
        (1888193 'move' error[1888184] nil[44])
        (1555225 call writeThis[1555402] x[1554824] writer[1554863] error[1888184])
        val errorExists[2224080]:bool[10] "temp"
        (2224085 'move' errorExists[2224080](2224082 '!=' error[1888184] nil[44]))
        if errorExists[2224080]
        {
          gotoErrorHandling handler[1888185] handler[1888185]
        }
        label handler[1888185]
        const-val shouldHandleError[1888204]:bool[10] "temp"
        val errorExists[2224088]:bool[10] "temp"
        (2224093 'move' errorExists[2224088](2224090 '!=' error[1888184] nil[44]))
        (1888208 'move' shouldHandleError[1888204] errorExists[2224088])
        if shouldHandleError[1888204]
        {
          (1888200 '=' error_out[1888182] error[1888184])
          ref call_tmp[1927246]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
          (1927248 'move' call_tmp[1927246](1927251 call _channel_internal[1061978] writer[1554863]))
          (1927254 call =[861669] call_tmp[1927246] QIO_CHANNEL_PTR_NULL[231556])
          (1927259 call chpl__autoDestroy[1676445] writer[1554863])
          (1927262 call chpl__autoDestroy[1601737] call_tmp[1554840])
          gotoErrorHandlingReturn _end__write_one_internal[1555240] _end__write_one_internal[1555240]
        }
      }
    }
    (1586022 'move' ret[1554830] err[1554891])
    ref call_tmp[1927266]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1927268 'move' call_tmp[1927266](1927271 call _channel_internal[1061978] writer[1554863]))
    (1927274 call =[861669] call_tmp[1927266] QIO_CHANNEL_PTR_NULL[231556])
    (1927279 call chpl__autoDestroy[1676445] writer[1554863])
    (1927282 call chpl__autoDestroy[1601737] call_tmp[1554840])
    gotoReturn _end__write_one_internal[1555240] _end__write_one_internal[1555240]
    label _end__write_one_internal[1555240]
    (1555242 return ret[1554830])
  }
  function _ref(channel(true,dynamic,false))[1061145].writeIt[1068975](const  ref arg this[1068981]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1068983]:int(64)[13], ref arg error_out[1885737]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1069019]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909270]:locale[28] "temp"
    (1069027 call getLocaleOfIoRequest[1066400] this[1068981] ret_tmp[1909270])
    (1909273 'move' call_tmp[1069019] ret_tmp[1909270])
    const-val origLocale[1069028]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1069030 'move' origLocale[1069028] call_tmp[1069019])
    const-val tmp[1069034]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1069036]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1069038 'move' call_tmp[1069036](1069041 call home[1061944] this[1068981]))
    const-val call_tmp[1069044]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1069112]:BaseLocale[91204] "dead after last mention" "temp"
    (1069117 'move' _locale_tmp_[1069112](1069114 call _value[89984] call_tmp[1069036]))
    (1069046 'move' call_tmp[1069044](1069048 '_wide_get_locale' _locale_tmp_[1069112]))
    (1069050 'move' tmp[1069034] call_tmp[1069044])
    val error[1885742]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885744 'move' error[1885742] nil[44])
    val rvfDerefTmp[2196058]:locale[28] "temp"
    (2196061 'move' rvfDerefTmp[2196058] origLocale[1069028])
    val isdirect[2202259]:bool[10] "temp"
    (2202264 'move' isdirect[2202259](2202261 call chpl_doDirectExecuteOn[187469] tmp[1069034]))
    if isdirect[2202259]
    {
      (2202268 call on_fn[1069057] this[1068981] x[1068983] rvfDerefTmp[2196058] error[1885742])
    }
    {
      val _args_foron_fn[2202292]:_class_localson_fn[2202278] "temp"
      (2202296 'move' _args_foron_fn[2202292](2202294 'stack allocate class' _class_localson_fn[2202278]))
      (2202298 '.=' _args_foron_fn[2202292] _0_tmp[2202281] tmp[1069034])
      ref tmp[2202302]:channel(true,dynamic,false)[1061136] "temp"
      (2202306 'move' tmp[2202302](2202304 'set reference' this[1068981]))
      (2202308 '.=' _args_foron_fn[2202292] _1_this[2202283] tmp[2202302])
      (2202312 '.=' _args_foron_fn[2202292] _2_x[2202285] x[1068983])
      (2202316 '.=' _args_foron_fn[2202292] _3_rvfDerefTmp[2202287] rvfDerefTmp[2196058])
      ref tmp[2202320]:Error[167984] "temp"
      (2202324 'move' tmp[2202320](2202322 'set reference' error[1885742]))
      (2202326 '.=' _args_foron_fn[2202292] _4_error[2202289] tmp[2202320])
      val _args_vforon_fn[2202330]:c_void_ptr[149] "temp"
      (2202334 'move' _args_vforon_fn[2202330](2202332 'cast_to_void_star' _args_foron_fn[2202292]))
      val _args_sizeon_fn[2202336]:int(64)[13] "temp"
      (2202340 'move' _args_sizeon_fn[2202336](2202338 'sizeof_bundle' _class_localson_fn[2202278]))
      on(2202396 call wrapon_fn[2202342] tmp[1069034] _args_vforon_fn[2202330] _args_sizeon_fn[2202336] _args_foron_fn[2202292])
    }
    val errorExists[2222856]:bool[10] "temp"
    (2222861 'move' errorExists[2222856](2222858 '!=' error[1885742] nil[44]))
    if errorExists[2222856]
    {
      (1885748 '=' error_out[1885737] error[1885742])
      (1921505 call chpl__autoDestroy[1601737] origLocale[1069028])
      gotoErrorHandlingReturn _endwriteIt[1885739] _endwriteIt[1885739]
    }
    {
    }
    (1921508 call chpl__autoDestroy[1601737] origLocale[1069028])
    label _endwriteIt[1885739]
    (1069101 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].writeIt[1565598](const  ref arg this[1565604]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1565606]:ioLiteral[238841], ref arg error_out[1888739]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1565642]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909288]:locale[28] "temp"
    (1565650 call getLocaleOfIoRequest[1066400] this[1565604] ret_tmp[1909288])
    (1909291 'move' call_tmp[1565642] ret_tmp[1909288])
    const-val origLocale[1565651]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1565653 'move' origLocale[1565651] call_tmp[1565642])
    const-val tmp[1565657]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1565659]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1565661 'move' call_tmp[1565659](1565664 call home[1061944] this[1565604]))
    const-val call_tmp[1565667]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1565735]:BaseLocale[91204] "dead after last mention" "temp"
    (1565740 'move' _locale_tmp_[1565735](1565737 call _value[89984] call_tmp[1565659]))
    (1565669 'move' call_tmp[1565667](1565671 '_wide_get_locale' _locale_tmp_[1565735]))
    (1565673 'move' tmp[1565657] call_tmp[1565667])
    val error[1888744]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888746 'move' error[1888744] nil[44])
    val rvfDerefTmp[2196782]:ioLiteral[238841] "temp"
    (2196786 'move' rvfDerefTmp[2196782](2196784 'deref' x[1565606]))
    val rvfDerefTmp[2196796]:locale[28] "temp"
    (2196799 'move' rvfDerefTmp[2196796] origLocale[1565651])
    val isdirect[2209407]:bool[10] "temp"
    (2209412 'move' isdirect[2209407](2209409 call chpl_doDirectExecuteOn[187469] tmp[1565657]))
    if isdirect[2209407]
    {
      (2209416 call on_fn[1565680] this[1565604] rvfDerefTmp[2196782] rvfDerefTmp[2196796] error[1888744])
    }
    {
      val _args_foron_fn[2209440]:_class_localson_fn[2209426] "temp"
      (2209444 'move' _args_foron_fn[2209440](2209442 'stack allocate class' _class_localson_fn[2209426]))
      (2209446 '.=' _args_foron_fn[2209440] _0_tmp[2209429] tmp[1565657])
      ref tmp[2209450]:channel(true,dynamic,false)[1061136] "temp"
      (2209454 'move' tmp[2209450](2209452 'set reference' this[1565604]))
      (2209456 '.=' _args_foron_fn[2209440] _1_this[2209431] tmp[2209450])
      (2209460 '.=' _args_foron_fn[2209440] _2_rvfDerefTmp[2209433] rvfDerefTmp[2196782])
      (2209464 '.=' _args_foron_fn[2209440] _3_rvfDerefTmp[2209435] rvfDerefTmp[2196796])
      ref tmp[2209468]:Error[167984] "temp"
      (2209472 'move' tmp[2209468](2209470 'set reference' error[1888744]))
      (2209474 '.=' _args_foron_fn[2209440] _4_error[2209437] tmp[2209468])
      val _args_vforon_fn[2209478]:c_void_ptr[149] "temp"
      (2209482 'move' _args_vforon_fn[2209478](2209480 'cast_to_void_star' _args_foron_fn[2209440]))
      val _args_sizeon_fn[2209484]:int(64)[13] "temp"
      (2209488 'move' _args_sizeon_fn[2209484](2209486 'sizeof_bundle' _class_localson_fn[2209426]))
      on(2209544 call wrapon_fn[2209490] tmp[1565657] _args_vforon_fn[2209478] _args_sizeon_fn[2209484] _args_foron_fn[2209440])
    }
    val errorExists[2224296]:bool[10] "temp"
    (2224301 'move' errorExists[2224296](2224298 '!=' error[1888744] nil[44]))
    if errorExists[2224296]
    {
      (1888750 '=' error_out[1888739] error[1888744])
      (1927543 call chpl__autoDestroy[1601737] origLocale[1565651])
      gotoErrorHandlingReturn _endwriteIt[1888741] _endwriteIt[1888741]
    }
    {
    }
    (1927546 call chpl__autoDestroy[1601737] origLocale[1565651])
    label _endwriteIt[1888741]
    (1565724 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].writeIt[1578566](const  ref arg this[1578572]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1578574]:real(64)[16], ref arg error_out[1888929]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1578610]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909294]:locale[28] "temp"
    (1578618 call getLocaleOfIoRequest[1066400] this[1578572] ret_tmp[1909294])
    (1909297 'move' call_tmp[1578610] ret_tmp[1909294])
    const-val origLocale[1578619]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1578621 'move' origLocale[1578619] call_tmp[1578610])
    const-val tmp[1578625]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1578627]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1578629 'move' call_tmp[1578627](1578632 call home[1061944] this[1578572]))
    const-val call_tmp[1578635]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1578703]:BaseLocale[91204] "dead after last mention" "temp"
    (1578708 'move' _locale_tmp_[1578703](1578705 call _value[89984] call_tmp[1578627]))
    (1578637 'move' call_tmp[1578635](1578639 '_wide_get_locale' _locale_tmp_[1578703]))
    (1578641 'move' tmp[1578625] call_tmp[1578635])
    val error[1888934]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888936 'move' error[1888934] nil[44])
    val rvfDerefTmp[2196808]:locale[28] "temp"
    (2196811 'move' rvfDerefTmp[2196808] origLocale[1578619])
    val isdirect[2209549]:bool[10] "temp"
    (2209554 'move' isdirect[2209549](2209551 call chpl_doDirectExecuteOn[187469] tmp[1578625]))
    if isdirect[2209549]
    {
      (2209558 call on_fn[1578648] this[1578572] x[1578574] rvfDerefTmp[2196808] error[1888934])
    }
    {
      val _args_foron_fn[2209582]:_class_localson_fn[2209568] "temp"
      (2209586 'move' _args_foron_fn[2209582](2209584 'stack allocate class' _class_localson_fn[2209568]))
      (2209588 '.=' _args_foron_fn[2209582] _0_tmp[2209571] tmp[1578625])
      ref tmp[2209592]:channel(true,dynamic,false)[1061136] "temp"
      (2209596 'move' tmp[2209592](2209594 'set reference' this[1578572]))
      (2209598 '.=' _args_foron_fn[2209582] _1_this[2209573] tmp[2209592])
      (2209602 '.=' _args_foron_fn[2209582] _2_x[2209575] x[1578574])
      (2209606 '.=' _args_foron_fn[2209582] _3_rvfDerefTmp[2209577] rvfDerefTmp[2196808])
      ref tmp[2209610]:Error[167984] "temp"
      (2209614 'move' tmp[2209610](2209612 'set reference' error[1888934]))
      (2209616 '.=' _args_foron_fn[2209582] _4_error[2209579] tmp[2209610])
      val _args_vforon_fn[2209620]:c_void_ptr[149] "temp"
      (2209624 'move' _args_vforon_fn[2209620](2209622 'cast_to_void_star' _args_foron_fn[2209582]))
      val _args_sizeon_fn[2209626]:int(64)[13] "temp"
      (2209630 'move' _args_sizeon_fn[2209626](2209628 'sizeof_bundle' _class_localson_fn[2209568]))
      on(2209686 call wrapon_fn[2209632] tmp[1578625] _args_vforon_fn[2209620] _args_sizeon_fn[2209626] _args_foron_fn[2209582])
    }
    val errorExists[2224392]:bool[10] "temp"
    (2224397 'move' errorExists[2224392](2224394 '!=' error[1888934] nil[44]))
    if errorExists[2224392]
    {
      (1888940 '=' error_out[1888929] error[1888934])
      (1927597 call chpl__autoDestroy[1601737] origLocale[1578619])
      gotoErrorHandlingReturn _endwriteIt[1888931] _endwriteIt[1888931]
    }
    {
    }
    (1927600 call chpl__autoDestroy[1601737] origLocale[1578619])
    label _endwriteIt[1888931]
    (1578692 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].readwrite[1068910](const  ref arg this[1068916]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1068918]:int(64)[13], ref arg error_out[1885705]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1885709]:Error[167984] "error variable" "temp"
      (1885718 'move' error[1885709] nil[44])
      (1068969 call writeIt[1068975] this[1068916] x[1068918] error[1885709])
      val errorExists[2222840]:bool[10] "temp"
      (2222845 'move' errorExists[2222840](2222842 '!=' error[1885709] nil[44]))
      if errorExists[2222840]
      {
        gotoErrorHandling handler[1885710] handler[1885710]
      }
      label handler[1885710]
      const-val shouldHandleError[1885729]:bool[10] "temp"
      val errorExists[2222848]:bool[10] "temp"
      (2222853 'move' errorExists[2222848](2222850 '!=' error[1885709] nil[44]))
      (1885733 'move' shouldHandleError[1885729] errorExists[2222848])
      if shouldHandleError[1885729]
      {
        (1885725 '=' error_out[1885705] error[1885709])
        gotoErrorHandlingReturn _endreadwrite[1885707] _endreadwrite[1885707]
      }
    }
    label _endreadwrite[1885707]
    (1068972 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].readwrite[1565533](const  ref arg this[1565539]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1565541]:ioLiteral[238841], ref arg error_out[1888707]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1888711]:Error[167984] "error variable" "temp"
      (1888720 'move' error[1888711] nil[44])
      (1565592 call writeIt[1565598] this[1565539] x[1565541] error[1888711])
      val errorExists[2224280]:bool[10] "temp"
      (2224285 'move' errorExists[2224280](2224282 '!=' error[1888711] nil[44]))
      if errorExists[2224280]
      {
        gotoErrorHandling handler[1888712] handler[1888712]
      }
      label handler[1888712]
      const-val shouldHandleError[1888731]:bool[10] "temp"
      val errorExists[2224288]:bool[10] "temp"
      (2224293 'move' errorExists[2224288](2224290 '!=' error[1888711] nil[44]))
      (1888735 'move' shouldHandleError[1888731] errorExists[2224288])
      if shouldHandleError[1888731]
      {
        (1888727 '=' error_out[1888707] error[1888711])
        gotoErrorHandlingReturn _endreadwrite[1888709] _endreadwrite[1888709]
      }
    }
    label _endreadwrite[1888709]
    (1565595 return _void[55])
  }
  function _ref(channel(true,dynamic,false))[1061145].readwrite[1578501](const  ref arg this[1578507]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1578509]:real(64)[16], ref arg error_out[1888897]:Error[167984]) : void[4] throws "inline" "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    {
      val error[1888901]:Error[167984] "error variable" "temp"
      (1888910 'move' error[1888901] nil[44])
      (1578560 call writeIt[1578566] this[1578507] x[1578509] error[1888901])
      val errorExists[2224376]:bool[10] "temp"
      (2224381 'move' errorExists[2224376](2224378 '!=' error[1888901] nil[44]))
      if errorExists[2224376]
      {
        gotoErrorHandling handler[1888902] handler[1888902]
      }
      label handler[1888902]
      const-val shouldHandleError[1888921]:bool[10] "temp"
      val errorExists[2224384]:bool[10] "temp"
      (2224389 'move' errorExists[2224384](2224386 '!=' error[1888901] nil[44]))
      (1888925 'move' shouldHandleError[1888921] errorExists[2224384])
      if shouldHandleError[1888921]
      {
        (1888917 '=' error_out[1888897] error[1888901])
        gotoErrorHandlingReturn _endreadwrite[1888899] _endreadwrite[1888899]
      }
    }
    label _endreadwrite[1888899]
    (1578563 return _void[55])
  }
  function <~>[1068837](const  ref arg ch[1068839]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1068841]:int(64)[13], ref arg error_out[1885673]:Error[167984]) const ref : _ref(channel(true,dynamic,false))[1061145] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1068848]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "RVV" "temp"
    {
      val error[1885677]:Error[167984] "error variable" "temp"
      (1885686 'move' error[1885677] nil[44])
      (1068894 call readwrite[1068910] ch[1068839] x[1068841] error[1885677])
      val errorExists[2222824]:bool[10] "temp"
      (2222829 'move' errorExists[2222824](2222826 '!=' error[1885677] nil[44]))
      if errorExists[2222824]
      {
        gotoErrorHandling handler[1885678] handler[1885678]
      }
      label handler[1885678]
      const-val shouldHandleError[1885697]:bool[10] "temp"
      val errorExists[2222832]:bool[10] "temp"
      (2222837 'move' errorExists[2222832](2222834 '!=' error[1885677] nil[44]))
      (1885701 'move' shouldHandleError[1885697] errorExists[2222832])
      if shouldHandleError[1885697]
      {
        (1885693 '=' error_out[1885673] error[1885677])
        gotoErrorHandlingReturn _end<~>[1885675] _end<~>[1885675]
      }
    }
    (1068897 'move' ret[1068848] ch[1068839])
    label _end<~>[1885675]
    (1068901 return ret[1068848])
  }
  function <~>[1565439](const  ref arg ch[1565441]:_ref(channel(true,dynamic,false))[1061145], const  ref arg x[1565443]:ioLiteral[238841], ref arg error_out[1888675]:Error[167984]) const ref : _ref(channel(true,dynamic,false))[1061145] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1565450]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "RVV" "temp"
    {
      val error[1888679]:Error[167984] "error variable" "temp"
      (1888688 'move' error[1888679] nil[44])
      (1565523 call readwrite[1565533] ch[1565441] x[1565443] error[1888679])
      val errorExists[2224264]:bool[10] "temp"
      (2224269 'move' errorExists[2224264](2224266 '!=' error[1888679] nil[44]))
      if errorExists[2224264]
      {
        gotoErrorHandling handler[1888680] handler[1888680]
      }
      label handler[1888680]
      const-val shouldHandleError[1888699]:bool[10] "temp"
      val errorExists[2224272]:bool[10] "temp"
      (2224277 'move' errorExists[2224272](2224274 '!=' error[1888679] nil[44]))
      (1888703 'move' shouldHandleError[1888699] errorExists[2224272])
      if shouldHandleError[1888699]
      {
        (1888695 '=' error_out[1888675] error[1888679])
        gotoErrorHandlingReturn _end<~>[1888677] _end<~>[1888677]
      }
    }
    (1565526 'move' ret[1565450] ch[1565441])
    label _end<~>[1888677]
    (1565530 return ret[1565450])
  }
  function <~>[1578428](const  ref arg ch[1578430]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1578432]:real(64)[16], ref arg error_out[1888865]:Error[167984]) const ref : _ref(channel(true,dynamic,false))[1061145] throws "inline" "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1578439]:_ref(channel(true,dynamic,false))[1061145] "dead after last mention" "RVV" "temp"
    {
      val error[1888869]:Error[167984] "error variable" "temp"
      (1888878 'move' error[1888869] nil[44])
      (1578485 call readwrite[1578501] ch[1578430] x[1578432] error[1888869])
      val errorExists[2224360]:bool[10] "temp"
      (2224365 'move' errorExists[2224360](2224362 '!=' error[1888869] nil[44]))
      if errorExists[2224360]
      {
        gotoErrorHandling handler[1888870] handler[1888870]
      }
      label handler[1888870]
      const-val shouldHandleError[1888889]:bool[10] "temp"
      val errorExists[2224368]:bool[10] "temp"
      (2224373 'move' errorExists[2224368](2224370 '!=' error[1888869] nil[44]))
      (1888893 'move' shouldHandleError[1888889] errorExists[2224368])
      if shouldHandleError[1888889]
      {
        (1888885 '=' error_out[1888865] error[1888869])
        gotoErrorHandlingReturn _end<~>[1888867] _end<~>[1888867]
      }
    }
    (1578488 'move' ret[1578439] ch[1578430])
    label _end<~>[1888867]
    (1578492 return ret[1578439])
  }
  function _ref(channel(true,dynamic,false))[1061145].binary[1559617](const  ref arg this[1559623]:_ref(channel(true,dynamic,false))[1061145]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1559627]:bool[10] "dead after last mention" "RVV" "temp"
    val ret[1559635]:uint(8)[100] "dead at end of block" "insert auto destroy"
    val call_tmp[1559637]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1559759 'move' ret[1559635] 0)
    const-val tmp[1559648]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1559650]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1559652 'move' call_tmp[1559650](1559655 call home[1061944] this[1559623]))
    const-val call_tmp[1559658]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1559727]:BaseLocale[91204] "dead after last mention" "temp"
    (1559732 'move' _locale_tmp_[1559727](1559729 call _value[89984] call_tmp[1559650]))
    (1559660 'move' call_tmp[1559658](1559662 '_wide_get_locale' _locale_tmp_[1559727]))
    (1559664 'move' tmp[1559648] call_tmp[1559658])
    val isdirect[2209132]:bool[10] "temp"
    (2209137 'move' isdirect[2209132](2209134 call chpl_doDirectExecuteOn[187469] tmp[1559648]))
    if isdirect[2209132]
    {
      (2209141 call on_fn[1559671] this[1559623] ret[1559635])
    }
    {
      val _args_foron_fn[2209159]:_class_localson_fn[2209149] "temp"
      (2209163 'move' _args_foron_fn[2209159](2209161 'stack allocate class' _class_localson_fn[2209149]))
      (2209165 '.=' _args_foron_fn[2209159] _0_tmp[2209152] tmp[1559648])
      ref tmp[2209169]:channel(true,dynamic,false)[1061136] "temp"
      (2209173 'move' tmp[2209169](2209171 'set reference' this[1559623]))
      (2209175 '.=' _args_foron_fn[2209159] _1_this[2209154] tmp[2209169])
      ref tmp[2209179]:uint(8)[100] "temp"
      (2209183 'move' tmp[2209179](2209181 'set reference' ret[1559635]))
      (2209185 '.=' _args_foron_fn[2209159] _2_ret[2209156] tmp[2209179])
      val _args_vforon_fn[2209189]:c_void_ptr[149] "temp"
      (2209193 'move' _args_vforon_fn[2209189](2209191 'cast_to_void_star' _args_foron_fn[2209159]))
      val _args_sizeon_fn[2209195]:int(64)[13] "temp"
      (2209199 'move' _args_sizeon_fn[2209195](2209197 'sizeof_bundle' _class_localson_fn[2209149]))
      on(2209239 call wrapon_fn[2209201] tmp[1559648] _args_vforon_fn[2209189] _args_sizeon_fn[2209195] _args_foron_fn[2209159])
    }
    {
    }
    const-val call_tmp[1559702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1559746]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1559752 'move' coerce_tmp[1559746](1559748 'cast' uint(8)[100] 0))
    (1559704 'move' call_tmp[1559702](1559707 call !=[436150] ret[1559635] coerce_tmp[1559746]))
    (1559756 'move' ret[1559627] call_tmp[1559702])
    gotoReturn _end_binary[1559719] _end_binary[1559719]
    label _end_binary[1559719]
    (1559721 return ret[1559627])
  }
  function _ref(channel(true,dynamic,false))[1061145].styleElement[1559243](const  ref arg this[1559249]:_ref(channel(true,dynamic,false))[1061145], const in arg element[1559251]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1559255]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1559263]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1559265 'move' ret[1559263] 0)
    const-val tmp[1559270]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1559272]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1559274 'move' call_tmp[1559272](1559277 call home[1061944] this[1559249]))
    const-val call_tmp[1559280]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1559340]:BaseLocale[91204] "dead after last mention" "temp"
    (1559345 'move' _locale_tmp_[1559340](1559342 call _value[89984] call_tmp[1559272]))
    (1559282 'move' call_tmp[1559280](1559284 '_wide_get_locale' _locale_tmp_[1559340]))
    (1559286 'move' tmp[1559270] call_tmp[1559280])
    val isdirect[2209005]:bool[10] "temp"
    (2209010 'move' isdirect[2209005](2209007 call chpl_doDirectExecuteOn[187469] tmp[1559270]))
    if isdirect[2209005]
    {
      (2209014 call on_fn[1559293] this[1559249] element[1559251] ret[1559263])
    }
    {
      val _args_foron_fn[2209035]:_class_localson_fn[2209023] "temp"
      (2209039 'move' _args_foron_fn[2209035](2209037 'stack allocate class' _class_localson_fn[2209023]))
      (2209041 '.=' _args_foron_fn[2209035] _0_tmp[2209026] tmp[1559270])
      ref tmp[2209045]:channel(true,dynamic,false)[1061136] "temp"
      (2209049 'move' tmp[2209045](2209047 'set reference' this[1559249]))
      (2209051 '.=' _args_foron_fn[2209035] _1_this[2209028] tmp[2209045])
      (2209055 '.=' _args_foron_fn[2209035] _2_element[2209030] element[1559251])
      ref tmp[2209059]:int(64)[13] "temp"
      (2209063 'move' tmp[2209059](2209061 'set reference' ret[1559263]))
      (2209065 '.=' _args_foron_fn[2209035] _3_ret[2209032] tmp[2209059])
      val _args_vforon_fn[2209069]:c_void_ptr[149] "temp"
      (2209073 'move' _args_vforon_fn[2209069](2209071 'cast_to_void_star' _args_foron_fn[2209035]))
      val _args_sizeon_fn[2209075]:int(64)[13] "temp"
      (2209079 'move' _args_sizeon_fn[2209075](2209077 'sizeof_bundle' _class_localson_fn[2209023]))
      on(2209127 call wrapon_fn[2209081] tmp[1559270] _args_vforon_fn[2209069] _args_sizeon_fn[2209075] _args_foron_fn[2209035])
    }
    {
    }
    (1559362 'move' ret[1559255] ret[1559263])
    gotoReturn _end_styleElement[1559334] _end_styleElement[1559334]
    label _end_styleElement[1559334]
    (1559336 return ret[1559255])
  }
  function _ref(channel(true,dynamic,false))[1061145].writeBytes[1564976](const  ref arg this[1564982]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1564984]:_ddata(real(64))[1358105], const in arg len[1564988]:int(64)[13], ref arg error_out[1888596]:Error[167984]) : bool[10] throws "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1564992]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1565002]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1565004 'move' call_tmp[1565002](1565007 call ENOERR[223742]))
    val err[1565008]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1565116]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1565206 call =[224221] init_coerce_tmp[1565116] call_tmp[1565002])
    (1565010 'move' err[1565008] init_coerce_tmp[1565116])
    const-val tmp[1565015]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1565017]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1565019 'move' call_tmp[1565017](1565022 call home[1061944] this[1564982]))
    const-val call_tmp[1565025]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1565123]:BaseLocale[91204] "dead after last mention" "temp"
    (1565128 'move' _locale_tmp_[1565123](1565125 call _value[89984] call_tmp[1565017]))
    (1565027 'move' call_tmp[1565025](1565029 '_wide_get_locale' _locale_tmp_[1565123]))
    (1565031 'move' tmp[1565015] call_tmp[1565025])
    val error[1888601]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888603 'move' error[1888601] nil[44])
    val isdirect[2209244]:bool[10] "temp"
    (2209249 'move' isdirect[2209244](2209246 call chpl_doDirectExecuteOn[187469] tmp[1565015]))
    if isdirect[2209244]
    {
      (2209253 call on_fn[1565038] this[1564982] x[1564984] len[1564988] err[1565008] error[1888601])
    }
    {
      val _args_foron_fn[2209280]:_class_localson_fn[2209264] "temp"
      (2209284 'move' _args_foron_fn[2209280](2209282 'stack allocate class' _class_localson_fn[2209264]))
      (2209286 '.=' _args_foron_fn[2209280] _0_tmp[2209267] tmp[1565015])
      ref tmp[2209290]:channel(true,dynamic,false)[1061136] "temp"
      (2209294 'move' tmp[2209290](2209292 'set reference' this[1564982]))
      (2209296 '.=' _args_foron_fn[2209280] _1_this[2209269] tmp[2209290])
      (2209300 '.=' _args_foron_fn[2209280] _2_x[2209271] x[1564984])
      (2209304 '.=' _args_foron_fn[2209280] _3_len[2209273] len[1564988])
      ref tmp[2209308]:syserr[223672] "temp"
      (2209312 'move' tmp[2209308](2209310 'set reference' err[1565008]))
      (2209314 '.=' _args_foron_fn[2209280] _4_err[2209275] tmp[2209308])
      ref tmp[2209318]:Error[167984] "temp"
      (2209322 'move' tmp[2209318](2209320 'set reference' error[1888601]))
      (2209324 '.=' _args_foron_fn[2209280] _5_error[2209277] tmp[2209318])
      val _args_vforon_fn[2209328]:c_void_ptr[149] "temp"
      (2209332 'move' _args_vforon_fn[2209328](2209330 'cast_to_void_star' _args_foron_fn[2209280]))
      val _args_sizeon_fn[2209334]:int(64)[13] "temp"
      (2209338 'move' _args_sizeon_fn[2209334](2209336 'sizeof_bundle' _class_localson_fn[2209264]))
      on(2209402 call wrapon_fn[2209340] tmp[1565015] _args_vforon_fn[2209328] _args_sizeon_fn[2209334] _args_foron_fn[2209280])
    }
    val errorExists[2224224]:bool[10] "temp"
    (2224229 'move' errorExists[2224224](2224226 '!=' error[1888601] nil[44]))
    if errorExists[2224224]
    {
      (1888607 '=' error_out[1888596] error[1888601])
      gotoErrorHandlingReturn _endwriteBytes[1888598] _endwriteBytes[1888598]
    }
    {
    }
    const-val call_tmp[1565086]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1565088 'move' call_tmp[1565086](1565091 call _cond_test[224069] err[1565008]))
    if call_tmp[1565086]
    {
      {
        val error[1888615]:Error[167984] "error variable" "temp"
        (1888624 'move' error[1888615] nil[44])
        (1565100 call _ch_ioerror[1063054] this[1564982] err[1565008] "in channel.writeBytes()" error[1888615])
        val errorExists[2224232]:bool[10] "temp"
        (2224237 'move' errorExists[2224232](2224234 '!=' error[1888615] nil[44]))
        if errorExists[2224232]
        {
          gotoErrorHandling handler[1888616] handler[1888616]
        }
        label handler[1888616]
        const-val shouldHandleError[1888635]:bool[10] "temp"
        val errorExists[2224240]:bool[10] "temp"
        (2224245 'move' errorExists[2224240](2224242 '!=' error[1888615] nil[44]))
        (1888639 'move' shouldHandleError[1888635] errorExists[2224240])
        if shouldHandleError[1888635]
        {
          (1888631 '=' error_out[1888596] error[1888615])
          gotoErrorHandlingReturn _endwriteBytes[1888598] _endwriteBytes[1888598]
        }
      }
    }
    (1565107 'move' ret[1564992] 1)
    label _endwriteBytes[1888598]
    (1565112 return ret[1564992])
  }
  function stringify[958976](const in arg _e0_args[958978]:c_string[19], ref arg _retArg[1907946]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[958988]:1*c_string[959651] "insert auto destroy"
    const-val ret_tmp[1907954]:1*c_string[959651] "temp"
    (958993 call chpl__init_tuple[959669] _e0_args[958978] ret_tmp[1907954])
    (1907957 'move' args[958988] ret_tmp[1907954])
    const-val ret[958982]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[959014]:string[26] "dead at end of block" "insert auto destroy"
      (959016 'move' str[959014](1907950 call chpl__initCopy[981537] ""))
      {
        const-val i[959021]:int(64)[13] "dead at end of block" "insert auto destroy"
        (959023 'move' i[959021] 0)
        {
          {
            {
              {
                {
                  val error[1884576]:Error[167984] "error variable" "temp"
                  (1884592 'move' error[1884576] nil[44])
                  ref call_tmp[963893]:_ref(c_string)[937416] "dead after last mention" "maybe param" "temp"
                  (963895 'move' call_tmp[963893](964210 '.' args[958988] x0[959649]))
                  const-val call_tmp[963900]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val coerce_tmp[964228]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (964232 'move' coerce_tmp[964228](964230 'deref' call_tmp[963893]))
                  const-val default_arg_length[964259]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  (964264 'move' default_arg_length[964259](964261 call createStringWithNewBuffer_default_length[964235] coerce_tmp[964228] error[1884576]))
                  val errorExists[2222312]:bool[10] "temp"
                  (2222317 'move' errorExists[2222312](2222314 '!=' error[1884576] nil[44]))
                  if errorExists[2222312]
                  {
                    gotoErrorHandling handler[1884577] handler[1884577]
                  }
                  const-val ret_tmp[1904826]:string[26] "temp"
                  (963905 call createStringWithNewBuffer[30413] coerce_tmp[964228] default_arg_length[964259] replace[173694] error[1884576] ret_tmp[1904826])
                  (1904829 'move' call_tmp[963900] ret_tmp[1904826])
                  val errorExists[2222320]:bool[10] "temp"
                  (2222325 'move' errorExists[2222320](2222322 '!=' error[1884576] nil[44]))
                  if errorExists[2222320]
                  {
                    gotoErrorHandling handler[1884577] handler[1884577]
                  }
                  (963910 call +=[38800] str[959014] call_tmp[963900])
                  (1920012 call chpl__autoDestroy[1601673] call_tmp[963900])
                  label handler[1884577]
                  const-val shouldHandleError[1884601]:bool[10] "temp"
                  val errorExists[2222328]:bool[10] "temp"
                  (2222333 'move' errorExists[2222328](2222330 '!=' error[1884576] nil[44]))
                  (1884605 'move' shouldHandleError[1884601] errorExists[2222328])
                  if shouldHandleError[1884601]
                  {
                    (1884598 call chpl_uncaught_error[170289] error[1884576])
                  }
                }
              }
            }
          }
        }
        label _continueLabel0[963811]
        label _unused_continueLabel[959412]
        label _breakLabel[959414]
      }
      (981049 'move' ret[958982] str[959014])
      (1920015 call chpl__autoDestroy[1605380] args[958988])
      gotoReturn _end_stringify[959639] _end_stringify[959639]
    }
    (1920018 call chpl__autoDestroy[1605380] args[958988])
    label _end_stringify[959639]
    (1907948 '=' _retArg[1907946] ret[958982])
    (1907952 return _void[55])
  }
  function stringify[1056595](const  ref arg _e0_args[1056597]:byteIndex[28173], ref arg _retArg[1908934]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1056607]:1*byteIndex[1057270] "insert auto destroy"
    const-val ret_tmp[1908940]:1*byteIndex[1057270] "temp"
    (1056612 call chpl__init_tuple[1057288] _e0_args[1056597] ret_tmp[1908940])
    (1908943 'move' args[1056607] ret_tmp[1908940])
    const-val ret[1056601]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1884981]:Error[167984] "error variable" "temp"
        (1885166 'move' error[1884981] nil[44])
        const-val call_tmp[1057046]:file[235668] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1060768]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1060772 'move' default_arg_style[1060768](1060770 call openmem_default_style[1060748] error[1884981]))
        val errorExists[2222480]:bool[10] "temp"
        (2222485 'move' errorExists[2222480](2222482 '!=' error[1884981] nil[44]))
        if errorExists[2222480]
        {
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val ret_tmp[1907326]:file[235668] "temp"
        (1057051 call openmem[237713] default_arg_style[1060768] error[1884981] ret_tmp[1907326])
        (1907329 'move' call_tmp[1057046] ret_tmp[1907326])
        val errorExists[2222488]:bool[10] "temp"
        (2222493 'move' errorExists[2222488](2222490 '!=' error[1884981] nil[44]))
        if errorExists[2222488]
        {
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val f[1057052]:file[235668] "dead at end of block" "insert auto destroy"
        (1057054 'move' f[1057052] call_tmp[1057046])
        const-val call_tmp[1057069]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1061378]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061384 'move' default_arg_start[1061378](1061380 call writer_default_start[1061342] f[1057052] error[1884981]))
        val errorExists[2222496]:bool[10] "temp"
        (2222501 'move' errorExists[2222496](2222498 '!=' error[1884981] nil[44]))
        if errorExists[2222496]
        {
          {
            val error[1920454]:Error[167984] "error variable" "temp"
            (1920456 'move' error[1920454] nil[44])
            (1920460 call close[236112] f[1057052] error[1920454])
            val errorExists[2224640]:bool[10] "temp"
            (2224645 'move' errorExists[2224640](2224642 '!=' error[1920454] nil[44]))
            if errorExists[2224640]
            {
              gotoErrorHandling handler[1920471] handler[1920471]
            }
            label handler[1920471]
            const-val shouldHandleError[1920473]:bool[10] "temp"
            val errorExists[2224648]:bool[10] "temp"
            (2224653 'move' errorExists[2224648](2224650 '!=' error[1920454] nil[44]))
            (1920475 'move' shouldHandleError[1920473] errorExists[2224648])
            if shouldHandleError[1920473]
            {
              (1920482 call chpl_uncaught_error[170289] error[1920454])
            }
          }
          (1920485 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_end[1061441]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061447 'move' default_arg_end[1061441](1061443 call writer_default_end[1061388] f[1057052] error[1884981]))
        val errorExists[2222504]:bool[10] "temp"
        (2222509 'move' errorExists[2222504](2222506 '!=' error[1884981] nil[44]))
        if errorExists[2222504]
        {
          {
            val error[1920490]:Error[167984] "error variable" "temp"
            (1920492 'move' error[1920490] nil[44])
            (1920496 call close[236112] f[1057052] error[1920490])
            val errorExists[2224656]:bool[10] "temp"
            (2224661 'move' errorExists[2224656](2224658 '!=' error[1920490] nil[44]))
            if errorExists[2224656]
            {
              gotoErrorHandling handler[1920507] handler[1920507]
            }
            label handler[1920507]
            const-val shouldHandleError[1920509]:bool[10] "temp"
            val errorExists[2224664]:bool[10] "temp"
            (2224669 'move' errorExists[2224664](2224666 '!=' error[1920490] nil[44]))
            (1920511 'move' shouldHandleError[1920509] errorExists[2224664])
            if shouldHandleError[1920509]
            {
              (1920518 call chpl_uncaught_error[170289] error[1920490])
            }
          }
          (1920521 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_hints[1061491]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1061497 'move' default_arg_hints[1061491](1061493 call writer_default_hints[1061451] f[1057052] error[1884981]))
        val errorExists[2222512]:bool[10] "temp"
        (2222517 'move' errorExists[2222512](2222514 '!=' error[1884981] nil[44]))
        if errorExists[2222512]
        {
          {
            val error[1920526]:Error[167984] "error variable" "temp"
            (1920528 'move' error[1920526] nil[44])
            (1920532 call close[236112] f[1057052] error[1920526])
            val errorExists[2224672]:bool[10] "temp"
            (2224677 'move' errorExists[2224672](2224674 '!=' error[1920526] nil[44]))
            if errorExists[2224672]
            {
              gotoErrorHandling handler[1920543] handler[1920543]
            }
            label handler[1920543]
            const-val shouldHandleError[1920545]:bool[10] "temp"
            val errorExists[2224680]:bool[10] "temp"
            (2224685 'move' errorExists[2224680](2224682 '!=' error[1920526] nil[44]))
            (1920547 'move' shouldHandleError[1920545] errorExists[2224680])
            if shouldHandleError[1920545]
            {
              (1920554 call chpl_uncaught_error[170289] error[1920526])
            }
          }
          (1920557 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_style[1061527]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1061533 'move' default_arg_style[1061527](1061529 call writer_default_style[1061501] f[1057052] error[1884981]))
        val errorExists[2222520]:bool[10] "temp"
        (2222525 'move' errorExists[2222520](2222522 '!=' error[1884981] nil[44]))
        if errorExists[2222520]
        {
          {
            val error[1920562]:Error[167984] "error variable" "temp"
            (1920564 'move' error[1920562] nil[44])
            (1920568 call close[236112] f[1057052] error[1920562])
            val errorExists[2224688]:bool[10] "temp"
            (2224693 'move' errorExists[2224688](2224690 '!=' error[1920562] nil[44]))
            if errorExists[2224688]
            {
              gotoErrorHandling handler[1920579] handler[1920579]
            }
            label handler[1920579]
            const-val shouldHandleError[1920581]:bool[10] "temp"
            val errorExists[2224696]:bool[10] "temp"
            (2224701 'move' errorExists[2224696](2224698 '!=' error[1920562] nil[44]))
            (1920583 'move' shouldHandleError[1920581] errorExists[2224696])
            if shouldHandleError[1920581]
            {
              (1920590 call chpl_uncaught_error[170289] error[1920562])
            }
          }
          (1920593 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val ret_tmp[1908958]:channel(true,dynamic,false)[1061136] "temp"
        (1057077 call writer[1061042] f[1057052] default_arg_start[1061378] default_arg_end[1061441] default_arg_hints[1061491] default_arg_style[1061527] error[1884981] ret_tmp[1908958])
        (1908961 'move' call_tmp[1057069] ret_tmp[1908958])
        val errorExists[2222528]:bool[10] "temp"
        (2222533 'move' errorExists[2222528](2222530 '!=' error[1884981] nil[44]))
        if errorExists[2222528]
        {
          {
            val error[1920598]:Error[167984] "error variable" "temp"
            (1920600 'move' error[1920598] nil[44])
            (1920604 call close[236112] f[1057052] error[1920598])
            val errorExists[2224704]:bool[10] "temp"
            (2224709 'move' errorExists[2224704](2224706 '!=' error[1920598] nil[44]))
            if errorExists[2224704]
            {
              gotoErrorHandling handler[1920615] handler[1920615]
            }
            label handler[1920615]
            const-val shouldHandleError[1920617]:bool[10] "temp"
            val errorExists[2224712]:bool[10] "temp"
            (2224717 'move' errorExists[2224712](2224714 '!=' error[1920598] nil[44]))
            (1920619 'move' shouldHandleError[1920617] errorExists[2224712])
            if shouldHandleError[1920617]
            {
              (1920626 call chpl_uncaught_error[170289] error[1920598])
            }
          }
          (1920629 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val w[1057080]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
        (1057082 'move' w[1057080] call_tmp[1057069])
        ref _tuple_expand_tmp_0[1065919]:_ref(byteIndex)[948948] "dead after last mention" "temp"
        (1065925 'move' _tuple_expand_tmp_0[1065919](1065929 '.v' args[1056607] x0[1057268]))
        const-val _return_tmp_[1875472]:bool[10] "dead after last mention" "temp"
        (1875474 'move' _return_tmp_[1875472](1057101 call write[1066145] w[1057080] _tuple_expand_tmp_0[1065919] error[1884981]))
        val errorExists[2222536]:bool[10] "temp"
        (2222541 'move' errorExists[2222536](2222538 '!=' error[1884981] nil[44]))
        if errorExists[2222536]
        {
          {
            val error[1920634]:Error[167984] "error variable" "temp"
            (1920636 'move' error[1920634] nil[44])
            (1920640 call close[1062551] w[1057080] error[1920634])
            val errorExists[2224720]:bool[10] "temp"
            (2224725 'move' errorExists[2224720](2224722 '!=' error[1920634] nil[44]))
            if errorExists[2224720]
            {
              gotoErrorHandling handler[1920651] handler[1920651]
            }
            label handler[1920651]
            const-val shouldHandleError[1920653]:bool[10] "temp"
            val errorExists[2224728]:bool[10] "temp"
            (2224733 'move' errorExists[2224728](2224730 '!=' error[1920634] nil[44]))
            (1920655 'move' shouldHandleError[1920653] errorExists[2224728])
            if shouldHandleError[1920653]
            {
              (1920662 call chpl_uncaught_error[170289] error[1920634])
            }
          }
          (1920665 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1920670]:Error[167984] "error variable" "temp"
            (1920672 'move' error[1920670] nil[44])
            (1920676 call close[236112] f[1057052] error[1920670])
            val errorExists[2224736]:bool[10] "temp"
            (2224741 'move' errorExists[2224736](2224738 '!=' error[1920670] nil[44]))
            if errorExists[2224736]
            {
              gotoErrorHandling handler[1920687] handler[1920687]
            }
            label handler[1920687]
            const-val shouldHandleError[1920689]:bool[10] "temp"
            val errorExists[2224744]:bool[10] "temp"
            (2224749 'move' errorExists[2224744](2224746 '!=' error[1920670] nil[44]))
            (1920691 'move' shouldHandleError[1920689] errorExists[2224744])
            if shouldHandleError[1920689]
            {
              (1920698 call chpl_uncaught_error[170289] error[1920670])
            }
          }
          (1920701 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val call_tmp[1057106]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1057108 'move' call_tmp[1057106](1057114 call offset[1080337] w[1057080]))
        const-val offset[1057115]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1057117 'move' offset[1057115] call_tmp[1057106])
        val call_tmp[1057121]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1057128]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1057130 'move' call_tmp[1057128](1057133 call +[949855] offset[1057115]))
        val call_tmp[1057136]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        (1057138 'move' call_tmp[1057136](1057141 call c_malloc[1080492] call_tmp[1057128]))
        val buf[1057144]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
        (1057146 'move' buf[1057144](1080774 call chpl__initCopy[954219] call_tmp[1057136]))
        const-val call_tmp[1057150]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1081113]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081119 'move' default_arg_start[1081113](1081115 call reader_default_start[1081077] f[1057052] error[1884981]))
        val errorExists[2222544]:bool[10] "temp"
        (2222549 'move' errorExists[2222544](2222546 '!=' error[1884981] nil[44]))
        if errorExists[2222544]
        {
          {
            val error[1920706]:Error[167984] "error variable" "temp"
            (1920708 'move' error[1920706] nil[44])
            (1920712 call close[1062551] w[1057080] error[1920706])
            val errorExists[2224752]:bool[10] "temp"
            (2224757 'move' errorExists[2224752](2224754 '!=' error[1920706] nil[44]))
            if errorExists[2224752]
            {
              gotoErrorHandling handler[1920723] handler[1920723]
            }
            label handler[1920723]
            const-val shouldHandleError[1920725]:bool[10] "temp"
            val errorExists[2224760]:bool[10] "temp"
            (2224765 'move' errorExists[2224760](2224762 '!=' error[1920706] nil[44]))
            (1920727 'move' shouldHandleError[1920725] errorExists[2224760])
            if shouldHandleError[1920725]
            {
              (1920734 call chpl_uncaught_error[170289] error[1920706])
            }
          }
          (1920737 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1920742]:Error[167984] "error variable" "temp"
            (1920744 'move' error[1920742] nil[44])
            (1920748 call close[236112] f[1057052] error[1920742])
            val errorExists[2224768]:bool[10] "temp"
            (2224773 'move' errorExists[2224768](2224770 '!=' error[1920742] nil[44]))
            if errorExists[2224768]
            {
              gotoErrorHandling handler[1920759] handler[1920759]
            }
            label handler[1920759]
            const-val shouldHandleError[1920761]:bool[10] "temp"
            val errorExists[2224776]:bool[10] "temp"
            (2224781 'move' errorExists[2224776](2224778 '!=' error[1920742] nil[44]))
            (1920763 'move' shouldHandleError[1920761] errorExists[2224776])
            if shouldHandleError[1920761]
            {
              (1920770 call chpl_uncaught_error[170289] error[1920742])
            }
          }
          (1920773 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_end[1081176]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081182 'move' default_arg_end[1081176](1081178 call reader_default_end[1081123] f[1057052] error[1884981]))
        val errorExists[2222552]:bool[10] "temp"
        (2222557 'move' errorExists[2222552](2222554 '!=' error[1884981] nil[44]))
        if errorExists[2222552]
        {
          {
            val error[1920778]:Error[167984] "error variable" "temp"
            (1920780 'move' error[1920778] nil[44])
            (1920784 call close[1062551] w[1057080] error[1920778])
            val errorExists[2224784]:bool[10] "temp"
            (2224789 'move' errorExists[2224784](2224786 '!=' error[1920778] nil[44]))
            if errorExists[2224784]
            {
              gotoErrorHandling handler[1920795] handler[1920795]
            }
            label handler[1920795]
            const-val shouldHandleError[1920797]:bool[10] "temp"
            val errorExists[2224792]:bool[10] "temp"
            (2224797 'move' errorExists[2224792](2224794 '!=' error[1920778] nil[44]))
            (1920799 'move' shouldHandleError[1920797] errorExists[2224792])
            if shouldHandleError[1920797]
            {
              (1920806 call chpl_uncaught_error[170289] error[1920778])
            }
          }
          (1920809 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1920814]:Error[167984] "error variable" "temp"
            (1920816 'move' error[1920814] nil[44])
            (1920820 call close[236112] f[1057052] error[1920814])
            val errorExists[2224800]:bool[10] "temp"
            (2224805 'move' errorExists[2224800](2224802 '!=' error[1920814] nil[44]))
            if errorExists[2224800]
            {
              gotoErrorHandling handler[1920831] handler[1920831]
            }
            label handler[1920831]
            const-val shouldHandleError[1920833]:bool[10] "temp"
            val errorExists[2224808]:bool[10] "temp"
            (2224813 'move' errorExists[2224808](2224810 '!=' error[1920814] nil[44]))
            (1920835 'move' shouldHandleError[1920833] errorExists[2224808])
            if shouldHandleError[1920833]
            {
              (1920842 call chpl_uncaught_error[170289] error[1920814])
            }
          }
          (1920845 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_hints[1081223]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1081229 'move' default_arg_hints[1081223](1081225 call reader_default_hints[1081186] f[1057052] error[1884981]))
        val errorExists[2222560]:bool[10] "temp"
        (2222565 'move' errorExists[2222560](2222562 '!=' error[1884981] nil[44]))
        if errorExists[2222560]
        {
          {
            val error[1920850]:Error[167984] "error variable" "temp"
            (1920852 'move' error[1920850] nil[44])
            (1920856 call close[1062551] w[1057080] error[1920850])
            val errorExists[2224816]:bool[10] "temp"
            (2224821 'move' errorExists[2224816](2224818 '!=' error[1920850] nil[44]))
            if errorExists[2224816]
            {
              gotoErrorHandling handler[1920867] handler[1920867]
            }
            label handler[1920867]
            const-val shouldHandleError[1920869]:bool[10] "temp"
            val errorExists[2224824]:bool[10] "temp"
            (2224829 'move' errorExists[2224824](2224826 '!=' error[1920850] nil[44]))
            (1920871 'move' shouldHandleError[1920869] errorExists[2224824])
            if shouldHandleError[1920869]
            {
              (1920878 call chpl_uncaught_error[170289] error[1920850])
            }
          }
          (1920881 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1920886]:Error[167984] "error variable" "temp"
            (1920888 'move' error[1920886] nil[44])
            (1920892 call close[236112] f[1057052] error[1920886])
            val errorExists[2224832]:bool[10] "temp"
            (2224837 'move' errorExists[2224832](2224834 '!=' error[1920886] nil[44]))
            if errorExists[2224832]
            {
              gotoErrorHandling handler[1920903] handler[1920903]
            }
            label handler[1920903]
            const-val shouldHandleError[1920905]:bool[10] "temp"
            val errorExists[2224840]:bool[10] "temp"
            (2224845 'move' errorExists[2224840](2224842 '!=' error[1920886] nil[44]))
            (1920907 'move' shouldHandleError[1920905] errorExists[2224840])
            if shouldHandleError[1920905]
            {
              (1920914 call chpl_uncaught_error[170289] error[1920886])
            }
          }
          (1920917 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val default_arg_style[1081259]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1081265 'move' default_arg_style[1081259](1081261 call reader_default_style[1081233] f[1057052] error[1884981]))
        val errorExists[2222568]:bool[10] "temp"
        (2222573 'move' errorExists[2222568](2222570 '!=' error[1884981] nil[44]))
        if errorExists[2222568]
        {
          {
            val error[1920922]:Error[167984] "error variable" "temp"
            (1920924 'move' error[1920922] nil[44])
            (1920928 call close[1062551] w[1057080] error[1920922])
            val errorExists[2224848]:bool[10] "temp"
            (2224853 'move' errorExists[2224848](2224850 '!=' error[1920922] nil[44]))
            if errorExists[2224848]
            {
              gotoErrorHandling handler[1920939] handler[1920939]
            }
            label handler[1920939]
            const-val shouldHandleError[1920941]:bool[10] "temp"
            val errorExists[2224856]:bool[10] "temp"
            (2224861 'move' errorExists[2224856](2224858 '!=' error[1920922] nil[44]))
            (1920943 'move' shouldHandleError[1920941] errorExists[2224856])
            if shouldHandleError[1920941]
            {
              (1920950 call chpl_uncaught_error[170289] error[1920922])
            }
          }
          (1920953 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1920958]:Error[167984] "error variable" "temp"
            (1920960 'move' error[1920958] nil[44])
            (1920964 call close[236112] f[1057052] error[1920958])
            val errorExists[2224864]:bool[10] "temp"
            (2224869 'move' errorExists[2224864](2224866 '!=' error[1920958] nil[44]))
            if errorExists[2224864]
            {
              gotoErrorHandling handler[1920975] handler[1920975]
            }
            label handler[1920975]
            const-val shouldHandleError[1920977]:bool[10] "temp"
            val errorExists[2224872]:bool[10] "temp"
            (2224877 'move' errorExists[2224872](2224874 '!=' error[1920958] nil[44]))
            (1920979 'move' shouldHandleError[1920977] errorExists[2224872])
            if shouldHandleError[1920977]
            {
              (1920986 call chpl_uncaught_error[170289] error[1920958])
            }
          }
          (1920989 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val ret_tmp[1909360]:channel(false,dynamic,false)[1080871] "temp"
        (1057158 call reader[1080777] f[1057052] default_arg_start[1081113] default_arg_end[1081176] default_arg_hints[1081223] default_arg_style[1081259] error[1884981] ret_tmp[1909360])
        (1909363 'move' call_tmp[1057150] ret_tmp[1909360])
        val errorExists[2222576]:bool[10] "temp"
        (2222581 'move' errorExists[2222576](2222578 '!=' error[1884981] nil[44]))
        if errorExists[2222576]
        {
          {
            val error[1920994]:Error[167984] "error variable" "temp"
            (1920996 'move' error[1920994] nil[44])
            (1921000 call close[1062551] w[1057080] error[1920994])
            val errorExists[2224880]:bool[10] "temp"
            (2224885 'move' errorExists[2224880](2224882 '!=' error[1920994] nil[44]))
            if errorExists[2224880]
            {
              gotoErrorHandling handler[1921011] handler[1921011]
            }
            label handler[1921011]
            const-val shouldHandleError[1921013]:bool[10] "temp"
            val errorExists[2224888]:bool[10] "temp"
            (2224893 'move' errorExists[2224888](2224890 '!=' error[1920994] nil[44]))
            (1921015 'move' shouldHandleError[1921013] errorExists[2224888])
            if shouldHandleError[1921013]
            {
              (1921022 call chpl_uncaught_error[170289] error[1920994])
            }
          }
          (1921025 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1921030]:Error[167984] "error variable" "temp"
            (1921032 'move' error[1921030] nil[44])
            (1921036 call close[236112] f[1057052] error[1921030])
            val errorExists[2224896]:bool[10] "temp"
            (2224901 'move' errorExists[2224896](2224898 '!=' error[1921030] nil[44]))
            if errorExists[2224896]
            {
              gotoErrorHandling handler[1921047] handler[1921047]
            }
            label handler[1921047]
            const-val shouldHandleError[1921049]:bool[10] "temp"
            val errorExists[2224904]:bool[10] "temp"
            (2224909 'move' errorExists[2224904](2224906 '!=' error[1921030] nil[44]))
            (1921051 'move' shouldHandleError[1921049] errorExists[2224904])
            if shouldHandleError[1921049]
            {
              (1921058 call chpl_uncaught_error[170289] error[1921030])
            }
          }
          (1921061 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val r[1057161]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
        (1057163 'move' r[1057161] call_tmp[1057150])
        const-val call_tmp[1057178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1057180 'move' call_tmp[1057178] offset[1057115])
        (1057190 call readBytes[1083028] r[1057161] buf[1057144] call_tmp[1057178] error[1884981])
        val errorExists[2222584]:bool[10] "temp"
        (2222589 'move' errorExists[2222584](2222586 '!=' error[1884981] nil[44]))
        if errorExists[2222584]
        {
          {
            val error[1921066]:Error[167984] "error variable" "temp"
            (1921068 'move' error[1921066] nil[44])
            (1921072 call close[1082283] r[1057161] error[1921066])
            val errorExists[2224912]:bool[10] "temp"
            (2224917 'move' errorExists[2224912](2224914 '!=' error[1921066] nil[44]))
            if errorExists[2224912]
            {
              gotoErrorHandling handler[1921083] handler[1921083]
            }
            label handler[1921083]
            const-val shouldHandleError[1921085]:bool[10] "temp"
            val errorExists[2224920]:bool[10] "temp"
            (2224925 'move' errorExists[2224920](2224922 '!=' error[1921066] nil[44]))
            (1921087 'move' shouldHandleError[1921085] errorExists[2224920])
            if shouldHandleError[1921085]
            {
              (1921094 call chpl_uncaught_error[170289] error[1921066])
            }
          }
          (1921097 call chpl__autoDestroy[1680699] r[1057161])
          {
            val error[1921102]:Error[167984] "error variable" "temp"
            (1921104 'move' error[1921102] nil[44])
            (1921108 call close[1062551] w[1057080] error[1921102])
            val errorExists[2224928]:bool[10] "temp"
            (2224933 'move' errorExists[2224928](2224930 '!=' error[1921102] nil[44]))
            if errorExists[2224928]
            {
              gotoErrorHandling handler[1921119] handler[1921119]
            }
            label handler[1921119]
            const-val shouldHandleError[1921121]:bool[10] "temp"
            val errorExists[2224936]:bool[10] "temp"
            (2224941 'move' errorExists[2224936](2224938 '!=' error[1921102] nil[44]))
            (1921123 'move' shouldHandleError[1921121] errorExists[2224936])
            if shouldHandleError[1921121]
            {
              (1921130 call chpl_uncaught_error[170289] error[1921102])
            }
          }
          (1921133 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1921138]:Error[167984] "error variable" "temp"
            (1921140 'move' error[1921138] nil[44])
            (1921144 call close[236112] f[1057052] error[1921138])
            val errorExists[2224944]:bool[10] "temp"
            (2224949 'move' errorExists[2224944](2224946 '!=' error[1921138] nil[44]))
            if errorExists[2224944]
            {
              gotoErrorHandling handler[1921155] handler[1921155]
            }
            label handler[1921155]
            const-val shouldHandleError[1921157]:bool[10] "temp"
            val errorExists[2224952]:bool[10] "temp"
            (2224957 'move' errorExists[2224952](2224954 '!=' error[1921138] nil[44]))
            (1921159 'move' shouldHandleError[1921157] errorExists[2224952])
            if shouldHandleError[1921157]
            {
              (1921166 call chpl_uncaught_error[170289] error[1921138])
            }
          }
          (1921169 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        ref call_tmp[1057197]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        (1057199 'move' call_tmp[1057197](1057202 call this[954280] buf[1057144] offset[1057115]))
        const-val coerce_tmp[1083521]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083527 'move' coerce_tmp[1083521](1083523 'cast' uint(8)[100] 0))
        (1057205 call =[435464] call_tmp[1057197] coerce_tmp[1083521])
        const-val call_tmp[1057211]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1057213 'move' call_tmp[1057211](1057216 call +[949855] offset[1057115]))
        const-val call_tmp[1057219]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1904886]:string[26] "temp"
        (1057224 call createStringWithNewBuffer[30493] buf[1057144] offset[1057115] call_tmp[1057211] replace[173694] error[1884981] ret_tmp[1904886])
        (1904889 'move' call_tmp[1057219] ret_tmp[1904886])
        val errorExists[2222592]:bool[10] "temp"
        (2222597 'move' errorExists[2222592](2222594 '!=' error[1884981] nil[44]))
        if errorExists[2222592]
        {
          {
            val error[1921174]:Error[167984] "error variable" "temp"
            (1921176 'move' error[1921174] nil[44])
            (1921180 call close[1082283] r[1057161] error[1921174])
            val errorExists[2224960]:bool[10] "temp"
            (2224965 'move' errorExists[2224960](2224962 '!=' error[1921174] nil[44]))
            if errorExists[2224960]
            {
              gotoErrorHandling handler[1921191] handler[1921191]
            }
            label handler[1921191]
            const-val shouldHandleError[1921193]:bool[10] "temp"
            val errorExists[2224968]:bool[10] "temp"
            (2224973 'move' errorExists[2224968](2224970 '!=' error[1921174] nil[44]))
            (1921195 'move' shouldHandleError[1921193] errorExists[2224968])
            if shouldHandleError[1921193]
            {
              (1921202 call chpl_uncaught_error[170289] error[1921174])
            }
          }
          (1921205 call chpl__autoDestroy[1680699] r[1057161])
          {
            val error[1921210]:Error[167984] "error variable" "temp"
            (1921212 'move' error[1921210] nil[44])
            (1921216 call close[1062551] w[1057080] error[1921210])
            val errorExists[2224976]:bool[10] "temp"
            (2224981 'move' errorExists[2224976](2224978 '!=' error[1921210] nil[44]))
            if errorExists[2224976]
            {
              gotoErrorHandling handler[1921227] handler[1921227]
            }
            label handler[1921227]
            const-val shouldHandleError[1921229]:bool[10] "temp"
            val errorExists[2224984]:bool[10] "temp"
            (2224989 'move' errorExists[2224984](2224986 '!=' error[1921210] nil[44]))
            (1921231 'move' shouldHandleError[1921229] errorExists[2224984])
            if shouldHandleError[1921229]
            {
              (1921238 call chpl_uncaught_error[170289] error[1921210])
            }
          }
          (1921241 call chpl__autoDestroy[1676445] w[1057080])
          {
            val error[1921246]:Error[167984] "error variable" "temp"
            (1921248 'move' error[1921246] nil[44])
            (1921252 call close[236112] f[1057052] error[1921246])
            val errorExists[2224992]:bool[10] "temp"
            (2224997 'move' errorExists[2224992](2224994 '!=' error[1921246] nil[44]))
            if errorExists[2224992]
            {
              gotoErrorHandling handler[1921263] handler[1921263]
            }
            label handler[1921263]
            const-val shouldHandleError[1921265]:bool[10] "temp"
            val errorExists[2225000]:bool[10] "temp"
            (2225005 'move' errorExists[2225000](2225002 '!=' error[1921246] nil[44]))
            (1921267 'move' shouldHandleError[1921265] errorExists[2225000])
            if shouldHandleError[1921265]
            {
              (1921274 call chpl_uncaught_error[170289] error[1921246])
            }
          }
          (1921277 call chpl__autoDestroy[1603492] f[1057052])
          gotoErrorHandling handler[1884982] handler[1884982]
        }
        const-val ret[1057229]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1057231 'move' ret[1057229] call_tmp[1057219])
        const-val coerce_tmp[1083532]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1083538 'move' coerce_tmp[1083532](1083534 'cast' c_void_ptr[149] buf[1057144]))
        (1057243 call c_free[207907] coerce_tmp[1083532])
        (1083543 'move' ret[1056601] ret[1057229])
        {
          val error[1921282]:Error[167984] "error variable" "temp"
          (1921284 'move' error[1921282] nil[44])
          (1921288 call close[1082283] r[1057161] error[1921282])
          val errorExists[2225008]:bool[10] "temp"
          (2225013 'move' errorExists[2225008](2225010 '!=' error[1921282] nil[44]))
          if errorExists[2225008]
          {
            gotoErrorHandling handler[1921299] handler[1921299]
          }
          label handler[1921299]
          const-val shouldHandleError[1921301]:bool[10] "temp"
          val errorExists[2225016]:bool[10] "temp"
          (2225021 'move' errorExists[2225016](2225018 '!=' error[1921282] nil[44]))
          (1921303 'move' shouldHandleError[1921301] errorExists[2225016])
          if shouldHandleError[1921301]
          {
            (1921310 call chpl_uncaught_error[170289] error[1921282])
          }
        }
        (1921313 call chpl__autoDestroy[1680699] r[1057161])
        {
          val error[1921318]:Error[167984] "error variable" "temp"
          (1921320 'move' error[1921318] nil[44])
          (1921324 call close[1062551] w[1057080] error[1921318])
          val errorExists[2225024]:bool[10] "temp"
          (2225029 'move' errorExists[2225024](2225026 '!=' error[1921318] nil[44]))
          if errorExists[2225024]
          {
            gotoErrorHandling handler[1921335] handler[1921335]
          }
          label handler[1921335]
          const-val shouldHandleError[1921337]:bool[10] "temp"
          val errorExists[2225032]:bool[10] "temp"
          (2225037 'move' errorExists[2225032](2225034 '!=' error[1921318] nil[44]))
          (1921339 'move' shouldHandleError[1921337] errorExists[2225032])
          if shouldHandleError[1921337]
          {
            (1921346 call chpl_uncaught_error[170289] error[1921318])
          }
        }
        (1921349 call chpl__autoDestroy[1676445] w[1057080])
        {
          val error[1921354]:Error[167984] "error variable" "temp"
          (1921356 'move' error[1921354] nil[44])
          (1921360 call close[236112] f[1057052] error[1921354])
          val errorExists[2225040]:bool[10] "temp"
          (2225045 'move' errorExists[2225040](2225042 '!=' error[1921354] nil[44]))
          if errorExists[2225040]
          {
            gotoErrorHandling handler[1921371] handler[1921371]
          }
          label handler[1921371]
          const-val shouldHandleError[1921373]:bool[10] "temp"
          val errorExists[2225048]:bool[10] "temp"
          (2225053 'move' errorExists[2225048](2225050 '!=' error[1921354] nil[44]))
          (1921375 'move' shouldHandleError[1921373] errorExists[2225048])
          if shouldHandleError[1921373]
          {
            (1921382 call chpl_uncaught_error[170289] error[1921354])
          }
        }
        (1921385 call chpl__autoDestroy[1603492] f[1057052])
        (1921388 call chpl__autoDestroy[1675383] args[1056607])
        gotoReturn _end_stringify[1057258] _end_stringify[1057258]
        label handler[1884982]
        const-val shouldHandleError[1885175]:bool[10] "temp"
        val errorExists[2222600]:bool[10] "temp"
        (2222605 'move' errorExists[2222600](2222602 '!=' error[1884981] nil[44]))
        (1885179 'move' shouldHandleError[1885175] errorExists[2222600])
        if shouldHandleError[1885175]
        {
          (1885172 call chpl_uncaught_error[170289] error[1884981])
        }
      }
    }
    (1921391 call chpl__autoDestroy[1675383] args[1056607])
    label _end_stringify[1057258]
    (1908936 '=' _retArg[1908934] ret[1056601])
    (1908938 return _void[55])
  }
  function stringify[1442480](const  ref arg _e0_args[1442482]:string[26], ref arg _retArg[1915127]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1442492]:1*string[1443155] "insert auto destroy"
    const-val ret_tmp[1915135]:1*string[1443155] "temp"
    (1442497 call chpl__init_tuple[1443173] _e0_args[1442482] ret_tmp[1915135])
    (1915138 'move' args[1442492] ret_tmp[1915135])
    const-val ret[1442486]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1442518]:string[26] "dead at end of block" "insert auto destroy"
      (1442520 'move' str[1442518](1915131 call chpl__initCopy[981537] ""))
      {
        const-val i[1442525]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1442527 'move' i[1442525] 0)
        {
          {
            {
              ref call_tmp[1446077]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1446079 'move' call_tmp[1446077](1446417 '.v' args[1442492] x0[1443153]))
              (1446085 call +=[38800] str[1442518] call_tmp[1446077])
            }
          }
        }
        label _continueLabel0[1446042]
        label _unused_continueLabel[1442916]
        label _breakLabel[1442918]
      }
      (1446422 'move' ret[1442486] str[1442518])
      (1926289 call chpl__autoDestroy[1790787] args[1442492])
      gotoReturn _end_stringify[1443143] _end_stringify[1443143]
    }
    (1926292 call chpl__autoDestroy[1790787] args[1442492])
    label _end_stringify[1443143]
    (1915129 '=' _retArg[1915127] ret[1442486])
    (1915133 return _void[55])
  }
  function stringify[1043891](const  ref arg _e0_args[1043893]:string[26], const in arg _e1_args[1043895]:range(byteIndex,bounded,false)[1025981], const  ref arg _e2_args[1043897]:string[26], const in arg _e3_args[1043899]:int(64)[13], ref arg _retArg[1908852]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1043915]:(string,range(byteIndex,bounded,false),string,int(64))[1044590] "insert auto destroy"
    const-val ret_tmp[1908862]:(string,range(byteIndex,bounded,false),string,int(64))[1044590] "temp"
    (1043920 call chpl__init_tuple[1044605] _e0_args[1043893] _e1_args[1043895] _e2_args[1043897] _e3_args[1043899] ret_tmp[1908862])
    (1908865 'move' args[1043915] ret_tmp[1908862])
    const-val ret[1043903]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1043944]:string[26] "dead at end of block" "insert auto destroy"
      (1043946 'move' str[1043944](1908858 call chpl__initCopy[981537] ""))
      {
        const-val i[1043951]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1043953 'move' i[1043951] 0)
        {
          {
            {
              ref call_tmp[1053069]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1053071 'move' call_tmp[1053069](1054444 '.v' args[1043915] x0[1044582]))
              (1053077 call +=[38800] str[1043944] call_tmp[1053069])
            }
          }
        }
        label _continueLabel0[1053034]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1053645]:_ref(range(byteIndex,bounded,false))[1025990] "dead after last mention" "maybe param" "temp"
                    (1053647 'move' call_tmp[1053645](1054544 '.' args[1043915] x1[1044584]))
                    const-val call_tmp[1053652]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1054815]:range(byteIndex,bounded,false)[1025981] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1054819 'move' coerce_tmp[1054815](1908856 call chpl__initCopy[1044699] call_tmp[1053645]))
                    const-val ret_tmp[1908886]:string[26] "temp"
                    (1053657 call _cast[1054547] coerce_tmp[1054815] ret_tmp[1908886])
                    (1908889 'move' call_tmp[1053652] ret_tmp[1908886])
                    (1053661 call +=[38800] str[1043944] call_tmp[1053652])
                    (1920407 call chpl__autoDestroy[1601673] call_tmp[1053652])
                    (1920410 call chpl__autoDestroy[1674473] coerce_tmp[1054815])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1053379]
        {
          {
            {
              ref call_tmp[1053759]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1053761 'move' call_tmp[1053759](1084933 '.v' args[1043915] x2[1044586]))
              (1053767 call +=[38800] str[1043944] call_tmp[1053759])
            }
          }
        }
        label _continueLabel2[1053724]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1054335]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1054337 'move' call_tmp[1054335](1085040 '.' args[1043915] x3[1044588]))
                    const-val call_tmp[1054342]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1085043]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1085047 'move' coerce_tmp[1085043](1085045 'deref' call_tmp[1054335]))
                    const-val ret_tmp[1909012]:string[26] "temp"
                    (1054347 call _cast[1063342] coerce_tmp[1085043] ret_tmp[1909012])
                    (1909015 'move' call_tmp[1054342] ret_tmp[1909012])
                    (1054351 call +=[38800] str[1043944] call_tmp[1054342])
                    (1920414 call chpl__autoDestroy[1601673] call_tmp[1054342])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1054069]
        label _unused_continueLabel[1044342]
        label _breakLabel[1044344]
      }
      (1085052 'move' ret[1043903] str[1043944])
      (1920417 call chpl__autoDestroy[1674968] args[1043915])
      gotoReturn _end_stringify[1044569] _end_stringify[1044569]
    }
    (1920420 call chpl__autoDestroy[1674968] args[1043915])
    label _end_stringify[1044569]
    (1908854 '=' _retArg[1908852] ret[1043903])
    (1908860 return _void[55])
  }
  function stringify[1113709](const  ref arg _e0_args[1113711]:string[26], const in arg _e1_args[1113713]:range(int(64),bounded,false)[1027003], const  ref arg _e2_args[1113715]:string[26], const in arg _e3_args[1113717]:int(64)[13], ref arg _retArg[1909956]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1113733]:(string,range(int(64),bounded,false),string,int(64))[1114408] "insert auto destroy"
    const-val ret_tmp[1909966]:(string,range(int(64),bounded,false),string,int(64))[1114408] "temp"
    (1113738 call chpl__init_tuple[1114423] _e0_args[1113711] _e1_args[1113713] _e2_args[1113715] _e3_args[1113717] ret_tmp[1909966])
    (1909969 'move' args[1113733] ret_tmp[1909966])
    const-val ret[1113721]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1113762]:string[26] "dead at end of block" "insert auto destroy"
      (1113764 'move' str[1113762](1909962 call chpl__initCopy[981537] ""))
      {
        const-val i[1113769]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113771 'move' i[1113769] 0)
        {
          {
            {
              ref call_tmp[1118148]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1118150 'move' call_tmp[1118148](1119523 '.v' args[1113733] x0[1114400]))
              (1118156 call +=[38800] str[1113762] call_tmp[1118148])
            }
          }
        }
        label _continueLabel0[1118113]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1118724]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                    (1118726 'move' call_tmp[1118724](1119623 '.' args[1113733] x1[1114402]))
                    const-val call_tmp[1118731]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1119894]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1119898 'move' coerce_tmp[1119894](1909960 call chpl__initCopy[1085195] call_tmp[1118724]))
                    const-val ret_tmp[1909978]:string[26] "temp"
                    (1118736 call _cast[1119626] coerce_tmp[1119894] ret_tmp[1909978])
                    (1909981 'move' call_tmp[1118731] ret_tmp[1909978])
                    (1118740 call +=[38800] str[1113762] call_tmp[1118731])
                    (1921870 call chpl__autoDestroy[1601673] call_tmp[1118731])
                    (1921873 call chpl__autoDestroy[1407763] coerce_tmp[1119894])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1118458]
        {
          {
            {
              ref call_tmp[1118838]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1118840 'move' call_tmp[1118838](1120969 '.v' args[1113733] x2[1114404]))
              (1118846 call +=[38800] str[1113762] call_tmp[1118838])
            }
          }
        }
        label _continueLabel2[1118803]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1119414]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1119416 'move' call_tmp[1119414](1121076 '.' args[1113733] x3[1114406]))
                    const-val call_tmp[1119421]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1121079]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1121083 'move' coerce_tmp[1121079](1121081 'deref' call_tmp[1119414]))
                    const-val ret_tmp[1909036]:string[26] "temp"
                    (1119426 call _cast[1063342] coerce_tmp[1121079] ret_tmp[1909036])
                    (1909039 'move' call_tmp[1119421] ret_tmp[1909036])
                    (1119430 call +=[38800] str[1113762] call_tmp[1119421])
                    (1921877 call chpl__autoDestroy[1601673] call_tmp[1119421])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1119148]
        label _unused_continueLabel[1114160]
        label _breakLabel[1114162]
      }
      (1121088 'move' ret[1113721] str[1113762])
      (1921880 call chpl__autoDestroy[1681940] args[1113733])
      gotoReturn _end_stringify[1114387] _end_stringify[1114387]
    }
    (1921883 call chpl__autoDestroy[1681940] args[1113733])
    label _end_stringify[1114387]
    (1909958 '=' _retArg[1909956] ret[1113721])
    (1909964 return _void[55])
  }
  function stringify[1128533](const  ref arg _e0_args[1128535]:string[26], const in arg _e1_args[1128537]:range(int(64),boundedLow,false)[1087754], const  ref arg _e2_args[1128539]:string[26], const in arg _e3_args[1128541]:int(64)[13], ref arg _retArg[1910250]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1128557]:(string,range(int(64),boundedLow,false),string,int(64))[1129232] "insert auto destroy"
    const-val ret_tmp[1910260]:(string,range(int(64),boundedLow,false),string,int(64))[1129232] "temp"
    (1128562 call chpl__init_tuple[1129247] _e0_args[1128535] _e1_args[1128537] _e2_args[1128539] _e3_args[1128541] ret_tmp[1910260])
    (1910263 'move' args[1128557] ret_tmp[1910260])
    const-val ret[1128545]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1128586]:string[26] "dead at end of block" "insert auto destroy"
      (1128588 'move' str[1128586](1910256 call chpl__initCopy[981537] ""))
      {
        const-val i[1128593]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1128595 'move' i[1128593] 0)
        {
          {
            {
              ref call_tmp[1134671]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1134673 'move' call_tmp[1134671](1136046 '.v' args[1128557] x0[1129224]))
              (1134679 call +=[38800] str[1128586] call_tmp[1134671])
            }
          }
        }
        label _continueLabel0[1134636]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135247]:_ref(range(int(64),boundedLow,false))[1087798] "dead after last mention" "maybe param" "temp"
                    (1135249 'move' call_tmp[1135247](1136146 '.' args[1128557] x1[1129226]))
                    const-val call_tmp[1135254]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1136417]:range(int(64),boundedLow,false)[1087754] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1136421 'move' coerce_tmp[1136417](1910254 call chpl__initCopy[1129341] call_tmp[1135247]))
                    const-val ret_tmp[1910272]:string[26] "temp"
                    (1135259 call _cast[1136149] coerce_tmp[1136417] ret_tmp[1910272])
                    (1910275 'move' call_tmp[1135254] ret_tmp[1910272])
                    (1135263 call +=[38800] str[1128586] call_tmp[1135254])
                    (1922078 call chpl__autoDestroy[1601673] call_tmp[1135254])
                    (1922081 call chpl__autoDestroy[1680875] coerce_tmp[1136417])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1134981]
        {
          {
            {
              ref call_tmp[1135361]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1135363 'move' call_tmp[1135361](1139023 '.v' args[1128557] x2[1129228]))
              (1135369 call +=[38800] str[1128586] call_tmp[1135361])
            }
          }
        }
        label _continueLabel2[1135326]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1135937]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1135939 'move' call_tmp[1135937](1139130 '.' args[1128557] x3[1129230]))
                    const-val call_tmp[1135944]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1139133]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1139137 'move' coerce_tmp[1139133](1139135 'deref' call_tmp[1135937]))
                    const-val ret_tmp[1909054]:string[26] "temp"
                    (1135949 call _cast[1063342] coerce_tmp[1139133] ret_tmp[1909054])
                    (1909057 'move' call_tmp[1135944] ret_tmp[1909054])
                    (1135953 call +=[38800] str[1128586] call_tmp[1135944])
                    (1922085 call chpl__autoDestroy[1601673] call_tmp[1135944])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1135671]
        label _unused_continueLabel[1128984]
        label _breakLabel[1128986]
      }
      (1139142 'move' ret[1128545] str[1128586])
      (1922088 call chpl__autoDestroy[1682723] args[1128557])
      gotoReturn _end_stringify[1129211] _end_stringify[1129211]
    }
    (1922091 call chpl__autoDestroy[1682723] args[1128557])
    label _end_stringify[1129211]
    (1910252 '=' _retArg[1910250] ret[1128545])
    (1910258 return _void[55])
  }
  function stringify[1146704](const  ref arg _e0_args[1146706]:string[26], const in arg _e1_args[1146708]:range(byteIndex,boundedLow,false)[1143592], const  ref arg _e2_args[1146710]:string[26], const in arg _e3_args[1146712]:int(64)[13], ref arg _retArg[1910514]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1146728]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147403] "insert auto destroy"
    const-val ret_tmp[1910524]:(string,range(byteIndex,boundedLow,false),string,int(64))[1147403] "temp"
    (1146733 call chpl__init_tuple[1147418] _e0_args[1146706] _e1_args[1146708] _e2_args[1146710] _e3_args[1146712] ret_tmp[1910524])
    (1910527 'move' args[1146728] ret_tmp[1910524])
    const-val ret[1146716]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1146757]:string[26] "dead at end of block" "insert auto destroy"
      (1146759 'move' str[1146757](1910520 call chpl__initCopy[981537] ""))
      {
        const-val i[1146764]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1146766 'move' i[1146764] 0)
        {
          {
            {
              ref call_tmp[1153135]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1153137 'move' call_tmp[1153135](1154510 '.v' args[1146728] x0[1147395]))
              (1153143 call +=[38800] str[1146757] call_tmp[1153135])
            }
          }
        }
        label _continueLabel0[1153100]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1153711]:_ref(range(byteIndex,boundedLow,false))[1143636] "dead after last mention" "maybe param" "temp"
                    (1153713 'move' call_tmp[1153711](1154610 '.' args[1146728] x1[1147397]))
                    const-val call_tmp[1153718]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1154881]:range(byteIndex,boundedLow,false)[1143592] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1154885 'move' coerce_tmp[1154881](1910518 call chpl__initCopy[1147512] call_tmp[1153711]))
                    const-val ret_tmp[1910554]:string[26] "temp"
                    (1153723 call _cast[1154613] coerce_tmp[1154881] ret_tmp[1910554])
                    (1910557 'move' call_tmp[1153718] ret_tmp[1910554])
                    (1153727 call +=[38800] str[1146757] call_tmp[1153718])
                    (1922197 call chpl__autoDestroy[1601673] call_tmp[1153718])
                    (1922200 call chpl__autoDestroy[1682957] coerce_tmp[1154881])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1153445]
        {
          {
            {
              ref call_tmp[1153825]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1153827 'move' call_tmp[1153825](1156344 '.v' args[1146728] x2[1147399]))
              (1153833 call +=[38800] str[1146757] call_tmp[1153825])
            }
          }
        }
        label _continueLabel2[1153790]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1154401]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1154403 'move' call_tmp[1154401](1156451 '.' args[1146728] x3[1147401]))
                    const-val call_tmp[1154408]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1156454]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1156458 'move' coerce_tmp[1156454](1156456 'deref' call_tmp[1154401]))
                    const-val ret_tmp[1909072]:string[26] "temp"
                    (1154413 call _cast[1063342] coerce_tmp[1156454] ret_tmp[1909072])
                    (1909075 'move' call_tmp[1154408] ret_tmp[1909072])
                    (1154417 call +=[38800] str[1146757] call_tmp[1154408])
                    (1922204 call chpl__autoDestroy[1601673] call_tmp[1154408])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1154135]
        label _unused_continueLabel[1147155]
        label _breakLabel[1147157]
      }
      (1156463 'move' ret[1146716] str[1146757])
      (1922207 call chpl__autoDestroy[1683122] args[1146728])
      gotoReturn _end_stringify[1147382] _end_stringify[1147382]
    }
    (1922210 call chpl__autoDestroy[1683122] args[1146728])
    label _end_stringify[1147382]
    (1910516 '=' _retArg[1910514] ret[1146716])
    (1910522 return _void[55])
  }
  function stringify[1176010](const  ref arg _e0_args[1176012]:string[26], const  ref arg _e1_args[1176014]:codepointIndex[28277], const  ref arg _e2_args[1176016]:string[26], const in arg _e3_args[1176018]:int(64)[13], ref arg _retArg[1910630]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1176034]:(string,codepointIndex,string,int(64))[1176709] "insert auto destroy"
    const-val ret_tmp[1910636]:(string,codepointIndex,string,int(64))[1176709] "temp"
    (1176039 call chpl__init_tuple[1176724] _e0_args[1176012] _e1_args[1176014] _e2_args[1176016] _e3_args[1176018] ret_tmp[1910636])
    (1910639 'move' args[1176034] ret_tmp[1910636])
    const-val ret[1176022]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1886772]:Error[167984] "error variable" "temp"
        (1886957 'move' error[1886772] nil[44])
        const-val call_tmp[1176476]:file[235668] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1179814]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179818 'move' default_arg_style[1179814](1179816 call openmem_default_style[1060748] error[1886772]))
        val errorExists[2223368]:bool[10] "temp"
        (2223373 'move' errorExists[2223368](2223370 '!=' error[1886772] nil[44]))
        if errorExists[2223368]
        {
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val ret_tmp[1907338]:file[235668] "temp"
        (1176481 call openmem[237713] default_arg_style[1179814] error[1886772] ret_tmp[1907338])
        (1907341 'move' call_tmp[1176476] ret_tmp[1907338])
        val errorExists[2223376]:bool[10] "temp"
        (2223381 'move' errorExists[2223376](2223378 '!=' error[1886772] nil[44]))
        if errorExists[2223376]
        {
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val f[1176482]:file[235668] "dead at end of block" "insert auto destroy"
        (1176484 'move' f[1176482] call_tmp[1176476])
        const-val call_tmp[1176499]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1179843]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179849 'move' default_arg_start[1179843](1179845 call writer_default_start[1061342] f[1176482] error[1886772]))
        val errorExists[2223384]:bool[10] "temp"
        (2223389 'move' errorExists[2223384](2223386 '!=' error[1886772] nil[44]))
        if errorExists[2223384]
        {
          {
            val error[1923316]:Error[167984] "error variable" "temp"
            (1923318 'move' error[1923316] nil[44])
            (1923322 call close[236112] f[1176482] error[1923316])
            val errorExists[2225472]:bool[10] "temp"
            (2225477 'move' errorExists[2225472](2225474 '!=' error[1923316] nil[44]))
            if errorExists[2225472]
            {
              gotoErrorHandling handler[1923333] handler[1923333]
            }
            label handler[1923333]
            const-val shouldHandleError[1923335]:bool[10] "temp"
            val errorExists[2225480]:bool[10] "temp"
            (2225485 'move' errorExists[2225480](2225482 '!=' error[1923316] nil[44]))
            (1923337 'move' shouldHandleError[1923335] errorExists[2225480])
            if shouldHandleError[1923335]
            {
              (1923344 call chpl_uncaught_error[170289] error[1923316])
            }
          }
          (1923347 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_end[1179853]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179859 'move' default_arg_end[1179853](1179855 call writer_default_end[1061388] f[1176482] error[1886772]))
        val errorExists[2223392]:bool[10] "temp"
        (2223397 'move' errorExists[2223392](2223394 '!=' error[1886772] nil[44]))
        if errorExists[2223392]
        {
          {
            val error[1923352]:Error[167984] "error variable" "temp"
            (1923354 'move' error[1923352] nil[44])
            (1923358 call close[236112] f[1176482] error[1923352])
            val errorExists[2225488]:bool[10] "temp"
            (2225493 'move' errorExists[2225488](2225490 '!=' error[1923352] nil[44]))
            if errorExists[2225488]
            {
              gotoErrorHandling handler[1923369] handler[1923369]
            }
            label handler[1923369]
            const-val shouldHandleError[1923371]:bool[10] "temp"
            val errorExists[2225496]:bool[10] "temp"
            (2225501 'move' errorExists[2225496](2225498 '!=' error[1923352] nil[44]))
            (1923373 'move' shouldHandleError[1923371] errorExists[2225496])
            if shouldHandleError[1923371]
            {
              (1923380 call chpl_uncaught_error[170289] error[1923352])
            }
          }
          (1923383 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_hints[1179863]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1179869 'move' default_arg_hints[1179863](1179865 call writer_default_hints[1061451] f[1176482] error[1886772]))
        val errorExists[2223400]:bool[10] "temp"
        (2223405 'move' errorExists[2223400](2223402 '!=' error[1886772] nil[44]))
        if errorExists[2223400]
        {
          {
            val error[1923388]:Error[167984] "error variable" "temp"
            (1923390 'move' error[1923388] nil[44])
            (1923394 call close[236112] f[1176482] error[1923388])
            val errorExists[2225504]:bool[10] "temp"
            (2225509 'move' errorExists[2225504](2225506 '!=' error[1923388] nil[44]))
            if errorExists[2225504]
            {
              gotoErrorHandling handler[1923405] handler[1923405]
            }
            label handler[1923405]
            const-val shouldHandleError[1923407]:bool[10] "temp"
            val errorExists[2225512]:bool[10] "temp"
            (2225517 'move' errorExists[2225512](2225514 '!=' error[1923388] nil[44]))
            (1923409 'move' shouldHandleError[1923407] errorExists[2225512])
            if shouldHandleError[1923407]
            {
              (1923416 call chpl_uncaught_error[170289] error[1923388])
            }
          }
          (1923419 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_style[1179873]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1179879 'move' default_arg_style[1179873](1179875 call writer_default_style[1061501] f[1176482] error[1886772]))
        val errorExists[2223408]:bool[10] "temp"
        (2223413 'move' errorExists[2223408](2223410 '!=' error[1886772] nil[44]))
        if errorExists[2223408]
        {
          {
            val error[1923424]:Error[167984] "error variable" "temp"
            (1923426 'move' error[1923424] nil[44])
            (1923430 call close[236112] f[1176482] error[1923424])
            val errorExists[2225520]:bool[10] "temp"
            (2225525 'move' errorExists[2225520](2225522 '!=' error[1923424] nil[44]))
            if errorExists[2225520]
            {
              gotoErrorHandling handler[1923441] handler[1923441]
            }
            label handler[1923441]
            const-val shouldHandleError[1923443]:bool[10] "temp"
            val errorExists[2225528]:bool[10] "temp"
            (2225533 'move' errorExists[2225528](2225530 '!=' error[1923424] nil[44]))
            (1923445 'move' shouldHandleError[1923443] errorExists[2225528])
            if shouldHandleError[1923443]
            {
              (1923452 call chpl_uncaught_error[170289] error[1923424])
            }
          }
          (1923455 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val ret_tmp[1908970]:channel(true,dynamic,false)[1061136] "temp"
        (1176507 call writer[1061042] f[1176482] default_arg_start[1179843] default_arg_end[1179853] default_arg_hints[1179863] default_arg_style[1179873] error[1886772] ret_tmp[1908970])
        (1908973 'move' call_tmp[1176499] ret_tmp[1908970])
        val errorExists[2223416]:bool[10] "temp"
        (2223421 'move' errorExists[2223416](2223418 '!=' error[1886772] nil[44]))
        if errorExists[2223416]
        {
          {
            val error[1923460]:Error[167984] "error variable" "temp"
            (1923462 'move' error[1923460] nil[44])
            (1923466 call close[236112] f[1176482] error[1923460])
            val errorExists[2225536]:bool[10] "temp"
            (2225541 'move' errorExists[2225536](2225538 '!=' error[1923460] nil[44]))
            if errorExists[2225536]
            {
              gotoErrorHandling handler[1923477] handler[1923477]
            }
            label handler[1923477]
            const-val shouldHandleError[1923479]:bool[10] "temp"
            val errorExists[2225544]:bool[10] "temp"
            (2225549 'move' errorExists[2225544](2225546 '!=' error[1923460] nil[44]))
            (1923481 'move' shouldHandleError[1923479] errorExists[2225544])
            if shouldHandleError[1923479]
            {
              (1923488 call chpl_uncaught_error[170289] error[1923460])
            }
          }
          (1923491 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val w[1176510]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
        (1176512 'move' w[1176510] call_tmp[1176499])
        ref _tuple_expand_tmp_0[1179885]:_ref(string)[938128] "dead after last mention" "temp"
        (1179891 'move' _tuple_expand_tmp_0[1179885](1179919 '.v' args[1176034] x0[1176701]))
        ref _tuple_expand_tmp_1[1179893]:_ref(codepointIndex)[948958] "dead after last mention" "temp"
        (1179899 'move' _tuple_expand_tmp_1[1179893](1179924 '.v' args[1176034] x1[1176703]))
        ref _tuple_expand_tmp_2[1179901]:_ref(string)[938128] "dead after last mention" "temp"
        (1179907 'move' _tuple_expand_tmp_2[1179901](1179929 '.v' args[1176034] x2[1176705]))
        ref _tuple_expand_tmp_3[1179909]:_ref(int(64))[936761] "dead after last mention" "temp"
        (1179915 'move' _tuple_expand_tmp_3[1179909](1179934 '.' args[1176034] x3[1176707]))
        const-val coerce_tmp[1180689]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180693 'move' coerce_tmp[1180689](1180691 'deref' _tuple_expand_tmp_3[1179909]))
        const-val _return_tmp_[1875496]:bool[10] "dead after last mention" "temp"
        (1875498 'move' _return_tmp_[1875496](1176531 call write[1180164] w[1176510] _tuple_expand_tmp_0[1179885] _tuple_expand_tmp_1[1179893] _tuple_expand_tmp_2[1179901] coerce_tmp[1180689] error[1886772]))
        val errorExists[2223424]:bool[10] "temp"
        (2223429 'move' errorExists[2223424](2223426 '!=' error[1886772] nil[44]))
        if errorExists[2223424]
        {
          {
            val error[1923496]:Error[167984] "error variable" "temp"
            (1923498 'move' error[1923496] nil[44])
            (1923502 call close[1062551] w[1176510] error[1923496])
            val errorExists[2225552]:bool[10] "temp"
            (2225557 'move' errorExists[2225552](2225554 '!=' error[1923496] nil[44]))
            if errorExists[2225552]
            {
              gotoErrorHandling handler[1923513] handler[1923513]
            }
            label handler[1923513]
            const-val shouldHandleError[1923515]:bool[10] "temp"
            val errorExists[2225560]:bool[10] "temp"
            (2225565 'move' errorExists[2225560](2225562 '!=' error[1923496] nil[44]))
            (1923517 'move' shouldHandleError[1923515] errorExists[2225560])
            if shouldHandleError[1923515]
            {
              (1923524 call chpl_uncaught_error[170289] error[1923496])
            }
          }
          (1923527 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923532]:Error[167984] "error variable" "temp"
            (1923534 'move' error[1923532] nil[44])
            (1923538 call close[236112] f[1176482] error[1923532])
            val errorExists[2225568]:bool[10] "temp"
            (2225573 'move' errorExists[2225568](2225570 '!=' error[1923532] nil[44]))
            if errorExists[2225568]
            {
              gotoErrorHandling handler[1923549] handler[1923549]
            }
            label handler[1923549]
            const-val shouldHandleError[1923551]:bool[10] "temp"
            val errorExists[2225576]:bool[10] "temp"
            (2225581 'move' errorExists[2225576](2225578 '!=' error[1923532] nil[44]))
            (1923553 'move' shouldHandleError[1923551] errorExists[2225576])
            if shouldHandleError[1923551]
            {
              (1923560 call chpl_uncaught_error[170289] error[1923532])
            }
          }
          (1923563 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val call_tmp[1176536]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1176538 'move' call_tmp[1176536](1176544 call offset[1080337] w[1176510]))
        const-val offset[1176545]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1176547 'move' offset[1176545] call_tmp[1176536])
        val call_tmp[1176551]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1176558]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176560 'move' call_tmp[1176558](1176563 call +[949855] offset[1176545]))
        val call_tmp[1176566]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        (1176568 'move' call_tmp[1176566](1176571 call c_malloc[1080492] call_tmp[1176558]))
        val buf[1176574]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
        (1176576 'move' buf[1176574](1180903 call chpl__initCopy[954219] call_tmp[1176566]))
        const-val call_tmp[1176580]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1180926]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180932 'move' default_arg_start[1180926](1180928 call reader_default_start[1081077] f[1176482] error[1886772]))
        val errorExists[2223432]:bool[10] "temp"
        (2223437 'move' errorExists[2223432](2223434 '!=' error[1886772] nil[44]))
        if errorExists[2223432]
        {
          {
            val error[1923568]:Error[167984] "error variable" "temp"
            (1923570 'move' error[1923568] nil[44])
            (1923574 call close[1062551] w[1176510] error[1923568])
            val errorExists[2225584]:bool[10] "temp"
            (2225589 'move' errorExists[2225584](2225586 '!=' error[1923568] nil[44]))
            if errorExists[2225584]
            {
              gotoErrorHandling handler[1923585] handler[1923585]
            }
            label handler[1923585]
            const-val shouldHandleError[1923587]:bool[10] "temp"
            val errorExists[2225592]:bool[10] "temp"
            (2225597 'move' errorExists[2225592](2225594 '!=' error[1923568] nil[44]))
            (1923589 'move' shouldHandleError[1923587] errorExists[2225592])
            if shouldHandleError[1923587]
            {
              (1923596 call chpl_uncaught_error[170289] error[1923568])
            }
          }
          (1923599 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923604]:Error[167984] "error variable" "temp"
            (1923606 'move' error[1923604] nil[44])
            (1923610 call close[236112] f[1176482] error[1923604])
            val errorExists[2225600]:bool[10] "temp"
            (2225605 'move' errorExists[2225600](2225602 '!=' error[1923604] nil[44]))
            if errorExists[2225600]
            {
              gotoErrorHandling handler[1923621] handler[1923621]
            }
            label handler[1923621]
            const-val shouldHandleError[1923623]:bool[10] "temp"
            val errorExists[2225608]:bool[10] "temp"
            (2225613 'move' errorExists[2225608](2225610 '!=' error[1923604] nil[44]))
            (1923625 'move' shouldHandleError[1923623] errorExists[2225608])
            if shouldHandleError[1923623]
            {
              (1923632 call chpl_uncaught_error[170289] error[1923604])
            }
          }
          (1923635 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_end[1180936]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180942 'move' default_arg_end[1180936](1180938 call reader_default_end[1081123] f[1176482] error[1886772]))
        val errorExists[2223440]:bool[10] "temp"
        (2223445 'move' errorExists[2223440](2223442 '!=' error[1886772] nil[44]))
        if errorExists[2223440]
        {
          {
            val error[1923640]:Error[167984] "error variable" "temp"
            (1923642 'move' error[1923640] nil[44])
            (1923646 call close[1062551] w[1176510] error[1923640])
            val errorExists[2225616]:bool[10] "temp"
            (2225621 'move' errorExists[2225616](2225618 '!=' error[1923640] nil[44]))
            if errorExists[2225616]
            {
              gotoErrorHandling handler[1923657] handler[1923657]
            }
            label handler[1923657]
            const-val shouldHandleError[1923659]:bool[10] "temp"
            val errorExists[2225624]:bool[10] "temp"
            (2225629 'move' errorExists[2225624](2225626 '!=' error[1923640] nil[44]))
            (1923661 'move' shouldHandleError[1923659] errorExists[2225624])
            if shouldHandleError[1923659]
            {
              (1923668 call chpl_uncaught_error[170289] error[1923640])
            }
          }
          (1923671 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923676]:Error[167984] "error variable" "temp"
            (1923678 'move' error[1923676] nil[44])
            (1923682 call close[236112] f[1176482] error[1923676])
            val errorExists[2225632]:bool[10] "temp"
            (2225637 'move' errorExists[2225632](2225634 '!=' error[1923676] nil[44]))
            if errorExists[2225632]
            {
              gotoErrorHandling handler[1923693] handler[1923693]
            }
            label handler[1923693]
            const-val shouldHandleError[1923695]:bool[10] "temp"
            val errorExists[2225640]:bool[10] "temp"
            (2225645 'move' errorExists[2225640](2225642 '!=' error[1923676] nil[44]))
            (1923697 'move' shouldHandleError[1923695] errorExists[2225640])
            if shouldHandleError[1923695]
            {
              (1923704 call chpl_uncaught_error[170289] error[1923676])
            }
          }
          (1923707 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_hints[1180946]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1180952 'move' default_arg_hints[1180946](1180948 call reader_default_hints[1081186] f[1176482] error[1886772]))
        val errorExists[2223448]:bool[10] "temp"
        (2223453 'move' errorExists[2223448](2223450 '!=' error[1886772] nil[44]))
        if errorExists[2223448]
        {
          {
            val error[1923712]:Error[167984] "error variable" "temp"
            (1923714 'move' error[1923712] nil[44])
            (1923718 call close[1062551] w[1176510] error[1923712])
            val errorExists[2225648]:bool[10] "temp"
            (2225653 'move' errorExists[2225648](2225650 '!=' error[1923712] nil[44]))
            if errorExists[2225648]
            {
              gotoErrorHandling handler[1923729] handler[1923729]
            }
            label handler[1923729]
            const-val shouldHandleError[1923731]:bool[10] "temp"
            val errorExists[2225656]:bool[10] "temp"
            (2225661 'move' errorExists[2225656](2225658 '!=' error[1923712] nil[44]))
            (1923733 'move' shouldHandleError[1923731] errorExists[2225656])
            if shouldHandleError[1923731]
            {
              (1923740 call chpl_uncaught_error[170289] error[1923712])
            }
          }
          (1923743 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923748]:Error[167984] "error variable" "temp"
            (1923750 'move' error[1923748] nil[44])
            (1923754 call close[236112] f[1176482] error[1923748])
            val errorExists[2225664]:bool[10] "temp"
            (2225669 'move' errorExists[2225664](2225666 '!=' error[1923748] nil[44]))
            if errorExists[2225664]
            {
              gotoErrorHandling handler[1923765] handler[1923765]
            }
            label handler[1923765]
            const-val shouldHandleError[1923767]:bool[10] "temp"
            val errorExists[2225672]:bool[10] "temp"
            (2225677 'move' errorExists[2225672](2225674 '!=' error[1923748] nil[44]))
            (1923769 'move' shouldHandleError[1923767] errorExists[2225672])
            if shouldHandleError[1923767]
            {
              (1923776 call chpl_uncaught_error[170289] error[1923748])
            }
          }
          (1923779 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val default_arg_style[1180956]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1180962 'move' default_arg_style[1180956](1180958 call reader_default_style[1081233] f[1176482] error[1886772]))
        val errorExists[2223456]:bool[10] "temp"
        (2223461 'move' errorExists[2223456](2223458 '!=' error[1886772] nil[44]))
        if errorExists[2223456]
        {
          {
            val error[1923784]:Error[167984] "error variable" "temp"
            (1923786 'move' error[1923784] nil[44])
            (1923790 call close[1062551] w[1176510] error[1923784])
            val errorExists[2225680]:bool[10] "temp"
            (2225685 'move' errorExists[2225680](2225682 '!=' error[1923784] nil[44]))
            if errorExists[2225680]
            {
              gotoErrorHandling handler[1923801] handler[1923801]
            }
            label handler[1923801]
            const-val shouldHandleError[1923803]:bool[10] "temp"
            val errorExists[2225688]:bool[10] "temp"
            (2225693 'move' errorExists[2225688](2225690 '!=' error[1923784] nil[44]))
            (1923805 'move' shouldHandleError[1923803] errorExists[2225688])
            if shouldHandleError[1923803]
            {
              (1923812 call chpl_uncaught_error[170289] error[1923784])
            }
          }
          (1923815 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923820]:Error[167984] "error variable" "temp"
            (1923822 'move' error[1923820] nil[44])
            (1923826 call close[236112] f[1176482] error[1923820])
            val errorExists[2225696]:bool[10] "temp"
            (2225701 'move' errorExists[2225696](2225698 '!=' error[1923820] nil[44]))
            if errorExists[2225696]
            {
              gotoErrorHandling handler[1923837] handler[1923837]
            }
            label handler[1923837]
            const-val shouldHandleError[1923839]:bool[10] "temp"
            val errorExists[2225704]:bool[10] "temp"
            (2225709 'move' errorExists[2225704](2225706 '!=' error[1923820] nil[44]))
            (1923841 'move' shouldHandleError[1923839] errorExists[2225704])
            if shouldHandleError[1923839]
            {
              (1923848 call chpl_uncaught_error[170289] error[1923820])
            }
          }
          (1923851 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val ret_tmp[1909372]:channel(false,dynamic,false)[1080871] "temp"
        (1176588 call reader[1080777] f[1176482] default_arg_start[1180926] default_arg_end[1180936] default_arg_hints[1180946] default_arg_style[1180956] error[1886772] ret_tmp[1909372])
        (1909375 'move' call_tmp[1176580] ret_tmp[1909372])
        val errorExists[2223464]:bool[10] "temp"
        (2223469 'move' errorExists[2223464](2223466 '!=' error[1886772] nil[44]))
        if errorExists[2223464]
        {
          {
            val error[1923856]:Error[167984] "error variable" "temp"
            (1923858 'move' error[1923856] nil[44])
            (1923862 call close[1062551] w[1176510] error[1923856])
            val errorExists[2225712]:bool[10] "temp"
            (2225717 'move' errorExists[2225712](2225714 '!=' error[1923856] nil[44]))
            if errorExists[2225712]
            {
              gotoErrorHandling handler[1923873] handler[1923873]
            }
            label handler[1923873]
            const-val shouldHandleError[1923875]:bool[10] "temp"
            val errorExists[2225720]:bool[10] "temp"
            (2225725 'move' errorExists[2225720](2225722 '!=' error[1923856] nil[44]))
            (1923877 'move' shouldHandleError[1923875] errorExists[2225720])
            if shouldHandleError[1923875]
            {
              (1923884 call chpl_uncaught_error[170289] error[1923856])
            }
          }
          (1923887 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1923892]:Error[167984] "error variable" "temp"
            (1923894 'move' error[1923892] nil[44])
            (1923898 call close[236112] f[1176482] error[1923892])
            val errorExists[2225728]:bool[10] "temp"
            (2225733 'move' errorExists[2225728](2225730 '!=' error[1923892] nil[44]))
            if errorExists[2225728]
            {
              gotoErrorHandling handler[1923909] handler[1923909]
            }
            label handler[1923909]
            const-val shouldHandleError[1923911]:bool[10] "temp"
            val errorExists[2225736]:bool[10] "temp"
            (2225741 'move' errorExists[2225736](2225738 '!=' error[1923892] nil[44]))
            (1923913 'move' shouldHandleError[1923911] errorExists[2225736])
            if shouldHandleError[1923911]
            {
              (1923920 call chpl_uncaught_error[170289] error[1923892])
            }
          }
          (1923923 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val r[1176591]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
        (1176593 'move' r[1176591] call_tmp[1176580])
        const-val call_tmp[1176608]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1176610 'move' call_tmp[1176608] offset[1176545])
        (1176620 call readBytes[1083028] r[1176591] buf[1176574] call_tmp[1176608] error[1886772])
        val errorExists[2223472]:bool[10] "temp"
        (2223477 'move' errorExists[2223472](2223474 '!=' error[1886772] nil[44]))
        if errorExists[2223472]
        {
          {
            val error[1923928]:Error[167984] "error variable" "temp"
            (1923930 'move' error[1923928] nil[44])
            (1923934 call close[1082283] r[1176591] error[1923928])
            val errorExists[2225744]:bool[10] "temp"
            (2225749 'move' errorExists[2225744](2225746 '!=' error[1923928] nil[44]))
            if errorExists[2225744]
            {
              gotoErrorHandling handler[1923945] handler[1923945]
            }
            label handler[1923945]
            const-val shouldHandleError[1923947]:bool[10] "temp"
            val errorExists[2225752]:bool[10] "temp"
            (2225757 'move' errorExists[2225752](2225754 '!=' error[1923928] nil[44]))
            (1923949 'move' shouldHandleError[1923947] errorExists[2225752])
            if shouldHandleError[1923947]
            {
              (1923956 call chpl_uncaught_error[170289] error[1923928])
            }
          }
          (1923959 call chpl__autoDestroy[1680699] r[1176591])
          {
            val error[1923964]:Error[167984] "error variable" "temp"
            (1923966 'move' error[1923964] nil[44])
            (1923970 call close[1062551] w[1176510] error[1923964])
            val errorExists[2225760]:bool[10] "temp"
            (2225765 'move' errorExists[2225760](2225762 '!=' error[1923964] nil[44]))
            if errorExists[2225760]
            {
              gotoErrorHandling handler[1923981] handler[1923981]
            }
            label handler[1923981]
            const-val shouldHandleError[1923983]:bool[10] "temp"
            val errorExists[2225768]:bool[10] "temp"
            (2225773 'move' errorExists[2225768](2225770 '!=' error[1923964] nil[44]))
            (1923985 'move' shouldHandleError[1923983] errorExists[2225768])
            if shouldHandleError[1923983]
            {
              (1923992 call chpl_uncaught_error[170289] error[1923964])
            }
          }
          (1923995 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1924000]:Error[167984] "error variable" "temp"
            (1924002 'move' error[1924000] nil[44])
            (1924006 call close[236112] f[1176482] error[1924000])
            val errorExists[2225776]:bool[10] "temp"
            (2225781 'move' errorExists[2225776](2225778 '!=' error[1924000] nil[44]))
            if errorExists[2225776]
            {
              gotoErrorHandling handler[1924017] handler[1924017]
            }
            label handler[1924017]
            const-val shouldHandleError[1924019]:bool[10] "temp"
            val errorExists[2225784]:bool[10] "temp"
            (2225789 'move' errorExists[2225784](2225786 '!=' error[1924000] nil[44]))
            (1924021 'move' shouldHandleError[1924019] errorExists[2225784])
            if shouldHandleError[1924019]
            {
              (1924028 call chpl_uncaught_error[170289] error[1924000])
            }
          }
          (1924031 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        ref call_tmp[1176627]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        (1176629 'move' call_tmp[1176627](1176632 call this[954280] buf[1176574] offset[1176545]))
        const-val coerce_tmp[1180972]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180978 'move' coerce_tmp[1180972](1180974 'cast' uint(8)[100] 0))
        (1176635 call =[435464] call_tmp[1176627] coerce_tmp[1180972])
        const-val call_tmp[1176641]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1176643 'move' call_tmp[1176641](1176646 call +[949855] offset[1176545]))
        const-val call_tmp[1176649]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1904898]:string[26] "temp"
        (1176654 call createStringWithNewBuffer[30493] buf[1176574] offset[1176545] call_tmp[1176641] replace[173694] error[1886772] ret_tmp[1904898])
        (1904901 'move' call_tmp[1176649] ret_tmp[1904898])
        val errorExists[2223480]:bool[10] "temp"
        (2223485 'move' errorExists[2223480](2223482 '!=' error[1886772] nil[44]))
        if errorExists[2223480]
        {
          {
            val error[1924036]:Error[167984] "error variable" "temp"
            (1924038 'move' error[1924036] nil[44])
            (1924042 call close[1082283] r[1176591] error[1924036])
            val errorExists[2225792]:bool[10] "temp"
            (2225797 'move' errorExists[2225792](2225794 '!=' error[1924036] nil[44]))
            if errorExists[2225792]
            {
              gotoErrorHandling handler[1924053] handler[1924053]
            }
            label handler[1924053]
            const-val shouldHandleError[1924055]:bool[10] "temp"
            val errorExists[2225800]:bool[10] "temp"
            (2225805 'move' errorExists[2225800](2225802 '!=' error[1924036] nil[44]))
            (1924057 'move' shouldHandleError[1924055] errorExists[2225800])
            if shouldHandleError[1924055]
            {
              (1924064 call chpl_uncaught_error[170289] error[1924036])
            }
          }
          (1924067 call chpl__autoDestroy[1680699] r[1176591])
          {
            val error[1924072]:Error[167984] "error variable" "temp"
            (1924074 'move' error[1924072] nil[44])
            (1924078 call close[1062551] w[1176510] error[1924072])
            val errorExists[2225808]:bool[10] "temp"
            (2225813 'move' errorExists[2225808](2225810 '!=' error[1924072] nil[44]))
            if errorExists[2225808]
            {
              gotoErrorHandling handler[1924089] handler[1924089]
            }
            label handler[1924089]
            const-val shouldHandleError[1924091]:bool[10] "temp"
            val errorExists[2225816]:bool[10] "temp"
            (2225821 'move' errorExists[2225816](2225818 '!=' error[1924072] nil[44]))
            (1924093 'move' shouldHandleError[1924091] errorExists[2225816])
            if shouldHandleError[1924091]
            {
              (1924100 call chpl_uncaught_error[170289] error[1924072])
            }
          }
          (1924103 call chpl__autoDestroy[1676445] w[1176510])
          {
            val error[1924108]:Error[167984] "error variable" "temp"
            (1924110 'move' error[1924108] nil[44])
            (1924114 call close[236112] f[1176482] error[1924108])
            val errorExists[2225824]:bool[10] "temp"
            (2225829 'move' errorExists[2225824](2225826 '!=' error[1924108] nil[44]))
            if errorExists[2225824]
            {
              gotoErrorHandling handler[1924125] handler[1924125]
            }
            label handler[1924125]
            const-val shouldHandleError[1924127]:bool[10] "temp"
            val errorExists[2225832]:bool[10] "temp"
            (2225837 'move' errorExists[2225832](2225834 '!=' error[1924108] nil[44]))
            (1924129 'move' shouldHandleError[1924127] errorExists[2225832])
            if shouldHandleError[1924127]
            {
              (1924136 call chpl_uncaught_error[170289] error[1924108])
            }
          }
          (1924139 call chpl__autoDestroy[1603492] f[1176482])
          gotoErrorHandling handler[1886773] handler[1886773]
        }
        const-val ret[1176659]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1176661 'move' ret[1176659] call_tmp[1176649])
        const-val coerce_tmp[1180983]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1180989 'move' coerce_tmp[1180983](1180985 'cast' c_void_ptr[149] buf[1176574]))
        (1176673 call c_free[207907] coerce_tmp[1180983])
        (1180993 'move' ret[1176022] ret[1176659])
        {
          val error[1924144]:Error[167984] "error variable" "temp"
          (1924146 'move' error[1924144] nil[44])
          (1924150 call close[1082283] r[1176591] error[1924144])
          val errorExists[2225840]:bool[10] "temp"
          (2225845 'move' errorExists[2225840](2225842 '!=' error[1924144] nil[44]))
          if errorExists[2225840]
          {
            gotoErrorHandling handler[1924161] handler[1924161]
          }
          label handler[1924161]
          const-val shouldHandleError[1924163]:bool[10] "temp"
          val errorExists[2225848]:bool[10] "temp"
          (2225853 'move' errorExists[2225848](2225850 '!=' error[1924144] nil[44]))
          (1924165 'move' shouldHandleError[1924163] errorExists[2225848])
          if shouldHandleError[1924163]
          {
            (1924172 call chpl_uncaught_error[170289] error[1924144])
          }
        }
        (1924175 call chpl__autoDestroy[1680699] r[1176591])
        {
          val error[1924180]:Error[167984] "error variable" "temp"
          (1924182 'move' error[1924180] nil[44])
          (1924186 call close[1062551] w[1176510] error[1924180])
          val errorExists[2225856]:bool[10] "temp"
          (2225861 'move' errorExists[2225856](2225858 '!=' error[1924180] nil[44]))
          if errorExists[2225856]
          {
            gotoErrorHandling handler[1924197] handler[1924197]
          }
          label handler[1924197]
          const-val shouldHandleError[1924199]:bool[10] "temp"
          val errorExists[2225864]:bool[10] "temp"
          (2225869 'move' errorExists[2225864](2225866 '!=' error[1924180] nil[44]))
          (1924201 'move' shouldHandleError[1924199] errorExists[2225864])
          if shouldHandleError[1924199]
          {
            (1924208 call chpl_uncaught_error[170289] error[1924180])
          }
        }
        (1924211 call chpl__autoDestroy[1676445] w[1176510])
        {
          val error[1924216]:Error[167984] "error variable" "temp"
          (1924218 'move' error[1924216] nil[44])
          (1924222 call close[236112] f[1176482] error[1924216])
          val errorExists[2225872]:bool[10] "temp"
          (2225877 'move' errorExists[2225872](2225874 '!=' error[1924216] nil[44]))
          if errorExists[2225872]
          {
            gotoErrorHandling handler[1924233] handler[1924233]
          }
          label handler[1924233]
          const-val shouldHandleError[1924235]:bool[10] "temp"
          val errorExists[2225880]:bool[10] "temp"
          (2225885 'move' errorExists[2225880](2225882 '!=' error[1924216] nil[44]))
          (1924237 'move' shouldHandleError[1924235] errorExists[2225880])
          if shouldHandleError[1924235]
          {
            (1924244 call chpl_uncaught_error[170289] error[1924216])
          }
        }
        (1924247 call chpl__autoDestroy[1603492] f[1176482])
        (1924250 call chpl__autoDestroy[1683786] args[1176034])
        gotoReturn _end_stringify[1176688] _end_stringify[1176688]
        label handler[1886773]
        const-val shouldHandleError[1886966]:bool[10] "temp"
        val errorExists[2223488]:bool[10] "temp"
        (2223493 'move' errorExists[2223488](2223490 '!=' error[1886772] nil[44]))
        (1886970 'move' shouldHandleError[1886966] errorExists[2223488])
        if shouldHandleError[1886966]
        {
          (1886963 call chpl_uncaught_error[170289] error[1886772])
        }
      }
    }
    (1924253 call chpl__autoDestroy[1683786] args[1176034])
    label _end_stringify[1176688]
    (1910632 '=' _retArg[1910630] ret[1176022])
    (1910634 return _void[55])
  }
  function stringify[1190909](const  ref arg _e0_args[1190911]:string[26], const in arg _e1_args[1190913]:range(byteIndex,boundedHigh,false)[1185108], const  ref arg _e2_args[1190915]:string[26], const in arg _e3_args[1190917]:int(64)[13], ref arg _retArg[1910836]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1190933]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191608] "insert auto destroy"
    const-val ret_tmp[1910846]:(string,range(byteIndex,boundedHigh,false),string,int(64))[1191608] "temp"
    (1190938 call chpl__init_tuple[1191623] _e0_args[1190911] _e1_args[1190913] _e2_args[1190915] _e3_args[1190917] ret_tmp[1910846])
    (1910849 'move' args[1190933] ret_tmp[1910846])
    const-val ret[1190921]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1190962]:string[26] "dead at end of block" "insert auto destroy"
      (1190964 'move' str[1190962](1910842 call chpl__initCopy[981537] ""))
      {
        const-val i[1190969]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1190971 'move' i[1190969] 0)
        {
          {
            {
              ref call_tmp[1197342]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1197344 'move' call_tmp[1197342](1198717 '.v' args[1190933] x0[1191600]))
              (1197350 call +=[38800] str[1190962] call_tmp[1197342])
            }
          }
        }
        label _continueLabel0[1197307]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1197918]:_ref(range(byteIndex,boundedHigh,false))[1185152] "dead after last mention" "maybe param" "temp"
                    (1197920 'move' call_tmp[1197918](1198817 '.' args[1190933] x1[1191602]))
                    const-val call_tmp[1197925]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1199088]:range(byteIndex,boundedHigh,false)[1185108] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1199092 'move' coerce_tmp[1199088](1910840 call chpl__initCopy[1191717] call_tmp[1197918]))
                    const-val ret_tmp[1910876]:string[26] "temp"
                    (1197930 call _cast[1198820] coerce_tmp[1199088] ret_tmp[1910876])
                    (1910879 'move' call_tmp[1197925] ret_tmp[1910876])
                    (1197934 call +=[38800] str[1190962] call_tmp[1197925])
                    (1924469 call chpl__autoDestroy[1601673] call_tmp[1197925])
                    (1924472 call chpl__autoDestroy[1684014] coerce_tmp[1199088])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1197652]
        {
          {
            {
              ref call_tmp[1198032]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1198034 'move' call_tmp[1198032](1200403 '.v' args[1190933] x2[1191604]))
              (1198040 call +=[38800] str[1190962] call_tmp[1198032])
            }
          }
        }
        label _continueLabel2[1197997]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1198608]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1198610 'move' call_tmp[1198608](1200510 '.' args[1190933] x3[1191606]))
                    const-val call_tmp[1198615]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1200513]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1200517 'move' coerce_tmp[1200513](1200515 'deref' call_tmp[1198608]))
                    const-val ret_tmp[1909084]:string[26] "temp"
                    (1198620 call _cast[1063342] coerce_tmp[1200513] ret_tmp[1909084])
                    (1909087 'move' call_tmp[1198615] ret_tmp[1909084])
                    (1198624 call +=[38800] str[1190962] call_tmp[1198615])
                    (1924476 call chpl__autoDestroy[1601673] call_tmp[1198615])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1198342]
        label _unused_continueLabel[1191360]
        label _breakLabel[1191362]
      }
      (1200522 'move' ret[1190921] str[1190962])
      (1924479 call chpl__autoDestroy[1685696] args[1190933])
      gotoReturn _end_stringify[1191587] _end_stringify[1191587]
    }
    (1924482 call chpl__autoDestroy[1685696] args[1190933])
    label _end_stringify[1191587]
    (1910838 '=' _retArg[1910836] ret[1190921])
    (1910844 return _void[55])
  }
  function stringify[1291327](const  ref arg _e0_args[1291329]:string[26], const  ref arg _e1_args[1291331]:string[26], const  ref arg _e2_args[1291333]:string[26], const  ref arg _e3_args[1291335]:string[26], ref arg _retArg[1913300]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1291351]:4*string[1292026] "insert auto destroy"
    const-val ret_tmp[1913308]:4*string[1292026] "temp"
    (1291356 call chpl__init_tuple[1292050] _e0_args[1291329] _e1_args[1291331] _e2_args[1291333] _e3_args[1291335] ret_tmp[1913308])
    (1913311 'move' args[1291351] ret_tmp[1913308])
    const-val ret[1291339]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1291380]:string[26] "dead at end of block" "insert auto destroy"
      (1291382 'move' str[1291380](1913304 call chpl__initCopy[981537] ""))
      {
        const-val i[1291387]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1291389 'move' i[1291387] 0)
        {
          {
            {
              ref call_tmp[1295188]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1295190 'move' call_tmp[1295188](1296563 '.v' args[1291351] x0[1292018]))
              (1295196 call +=[38800] str[1291380] call_tmp[1295188])
            }
          }
        }
        label _continueLabel0[1295153]
        {
          {
            {
              ref call_tmp[1295533]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1295535 'move' call_tmp[1295533](1296597 '.v' args[1291351] x1[1292020]))
              (1295541 call +=[38800] str[1291380] call_tmp[1295533])
            }
          }
        }
        label _continueLabel1[1295498]
        {
          {
            {
              ref call_tmp[1295878]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1295880 'move' call_tmp[1295878](1296631 '.v' args[1291351] x2[1292022]))
              (1295886 call +=[38800] str[1291380] call_tmp[1295878])
            }
          }
        }
        label _continueLabel2[1295843]
        {
          {
            {
              ref call_tmp[1296223]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1296225 'move' call_tmp[1296223](1296665 '.v' args[1291351] x3[1292024]))
              (1296231 call +=[38800] str[1291380] call_tmp[1296223])
            }
          }
        }
        label _continueLabel3[1296188]
        label _unused_continueLabel[1291778]
        label _breakLabel[1291780]
      }
      (1296670 'move' ret[1291339] str[1291380])
      (1924992 call chpl__autoDestroy[1727549] args[1291351])
      gotoReturn _end_stringify[1292005] _end_stringify[1292005]
    }
    (1924995 call chpl__autoDestroy[1727549] args[1291351])
    label _end_stringify[1292005]
    (1913302 '=' _retArg[1913300] ret[1291339])
    (1913306 return _void[55])
  }
  function stringify[1466032](const  ref arg _e0_args[1466034]:string[26], const in arg _e1_args[1466036]:uint(64)[115], const  ref arg _e2_args[1466038]:string[26], const in arg _e3_args[1466040]:int(64)[13], ref arg _retArg[1915346]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1466056]:(string,uint(64),string,int(64))[1466731] "insert auto destroy"
    const-val ret_tmp[1915354]:(string,uint(64),string,int(64))[1466731] "temp"
    (1466061 call chpl__init_tuple[1466746] _e0_args[1466034] _e1_args[1466036] _e2_args[1466038] _e3_args[1466040] ret_tmp[1915354])
    (1915357 'move' args[1466056] ret_tmp[1915354])
    const-val ret[1466044]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1466085]:string[26] "dead at end of block" "insert auto destroy"
      (1466087 'move' str[1466085](1915350 call chpl__initCopy[981537] ""))
      {
        const-val i[1466092]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1466094 'move' i[1466092] 0)
        {
          {
            {
              ref call_tmp[1470910]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1470912 'move' call_tmp[1470910](1472285 '.v' args[1466056] x0[1466723]))
              (1470918 call +=[38800] str[1466085] call_tmp[1470910])
            }
          }
        }
        label _continueLabel0[1470875]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1471486]:_ref(uint(64))[936790] "dead after last mention" "maybe param" "temp"
                    (1471488 'move' call_tmp[1471486](1472392 '.' args[1466056] x1[1466725]))
                    const-val call_tmp[1471493]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1472395]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1472399 'move' coerce_tmp[1472395](1472397 'deref' call_tmp[1471486]))
                    const-val ret_tmp[1913036]:string[26] "temp"
                    (1471498 call _cast[1268654] coerce_tmp[1472395] ret_tmp[1913036])
                    (1913039 'move' call_tmp[1471493] ret_tmp[1913036])
                    (1471502 call +=[38800] str[1466085] call_tmp[1471493])
                    (1926413 call chpl__autoDestroy[1601673] call_tmp[1471493])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1471220]
        {
          {
            {
              ref call_tmp[1471600]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1471602 'move' call_tmp[1471600](1472433 '.v' args[1466056] x2[1466727]))
              (1471608 call +=[38800] str[1466085] call_tmp[1471600])
            }
          }
        }
        label _continueLabel2[1471565]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1472176]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1472178 'move' call_tmp[1472176](1472540 '.' args[1466056] x3[1466729]))
                    const-val call_tmp[1472183]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1472543]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1472547 'move' coerce_tmp[1472543](1472545 'deref' call_tmp[1472176]))
                    const-val ret_tmp[1909168]:string[26] "temp"
                    (1472188 call _cast[1063342] coerce_tmp[1472543] ret_tmp[1909168])
                    (1909171 'move' call_tmp[1472183] ret_tmp[1909168])
                    (1472192 call +=[38800] str[1466085] call_tmp[1472183])
                    (1926417 call chpl__autoDestroy[1601673] call_tmp[1472183])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1471910]
        label _unused_continueLabel[1466483]
        label _breakLabel[1466485]
      }
      (1472552 'move' ret[1466044] str[1466085])
      (1926420 call chpl__autoDestroy[1820350] args[1466056])
      gotoReturn _end_stringify[1466710] _end_stringify[1466710]
    }
    (1926423 call chpl__autoDestroy[1820350] args[1466056])
    label _end_stringify[1466710]
    (1915348 '=' _retArg[1915346] ret[1466044])
    (1915352 return _void[55])
  }
  function stringify[1158053](const  ref arg _e0_args[1158055]:string[26], const  ref arg _e1_args[1158057]:codepointIndex[28277], const  ref arg _e2_args[1158059]:string[26], ref arg _retArg[1910572]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1158073]:(string,codepointIndex,string)[1158744] "insert auto destroy"
    const-val ret_tmp[1910578]:(string,codepointIndex,string)[1158744] "temp"
    (1158078 call chpl__init_tuple[1158757] _e0_args[1158055] _e1_args[1158057] _e2_args[1158059] ret_tmp[1910578])
    (1910581 'move' args[1158073] ret_tmp[1910578])
    const-val ret[1158063]:string[26] "dead after last mention" "RVV" "temp"
    {
      {
        val error[1886275]:Error[167984] "error variable" "temp"
        (1886460 'move' error[1886275] nil[44])
        const-val call_tmp[1158514]:file[235668] "dead at end of block" "maybe param" "temp"
        const-val default_arg_style[1164368]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164372 'move' default_arg_style[1164368](1164370 call openmem_default_style[1060748] error[1886275]))
        val errorExists[2223088]:bool[10] "temp"
        (2223093 'move' errorExists[2223088](2223090 '!=' error[1886275] nil[44]))
        if errorExists[2223088]
        {
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val ret_tmp[1907332]:file[235668] "temp"
        (1158519 call openmem[237713] default_arg_style[1164368] error[1886275] ret_tmp[1907332])
        (1907335 'move' call_tmp[1158514] ret_tmp[1907332])
        val errorExists[2223096]:bool[10] "temp"
        (2223101 'move' errorExists[2223096](2223098 '!=' error[1886275] nil[44]))
        if errorExists[2223096]
        {
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val f[1158520]:file[235668] "dead at end of block" "insert auto destroy"
        (1158522 'move' f[1158520] call_tmp[1158514])
        const-val call_tmp[1158537]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1164397]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164403 'move' default_arg_start[1164397](1164399 call writer_default_start[1061342] f[1158520] error[1886275]))
        val errorExists[2223104]:bool[10] "temp"
        (2223109 'move' errorExists[2223104](2223106 '!=' error[1886275] nil[44]))
        if errorExists[2223104]
        {
          {
            val error[1922253]:Error[167984] "error variable" "temp"
            (1922255 'move' error[1922253] nil[44])
            (1922259 call close[236112] f[1158520] error[1922253])
            val errorExists[2225056]:bool[10] "temp"
            (2225061 'move' errorExists[2225056](2225058 '!=' error[1922253] nil[44]))
            if errorExists[2225056]
            {
              gotoErrorHandling handler[1922270] handler[1922270]
            }
            label handler[1922270]
            const-val shouldHandleError[1922272]:bool[10] "temp"
            val errorExists[2225064]:bool[10] "temp"
            (2225069 'move' errorExists[2225064](2225066 '!=' error[1922253] nil[44]))
            (1922274 'move' shouldHandleError[1922272] errorExists[2225064])
            if shouldHandleError[1922272]
            {
              (1922281 call chpl_uncaught_error[170289] error[1922253])
            }
          }
          (1922284 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_end[1164407]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164413 'move' default_arg_end[1164407](1164409 call writer_default_end[1061388] f[1158520] error[1886275]))
        val errorExists[2223112]:bool[10] "temp"
        (2223117 'move' errorExists[2223112](2223114 '!=' error[1886275] nil[44]))
        if errorExists[2223112]
        {
          {
            val error[1922289]:Error[167984] "error variable" "temp"
            (1922291 'move' error[1922289] nil[44])
            (1922295 call close[236112] f[1158520] error[1922289])
            val errorExists[2225072]:bool[10] "temp"
            (2225077 'move' errorExists[2225072](2225074 '!=' error[1922289] nil[44]))
            if errorExists[2225072]
            {
              gotoErrorHandling handler[1922306] handler[1922306]
            }
            label handler[1922306]
            const-val shouldHandleError[1922308]:bool[10] "temp"
            val errorExists[2225080]:bool[10] "temp"
            (2225085 'move' errorExists[2225080](2225082 '!=' error[1922289] nil[44]))
            (1922310 'move' shouldHandleError[1922308] errorExists[2225080])
            if shouldHandleError[1922308]
            {
              (1922317 call chpl_uncaught_error[170289] error[1922289])
            }
          }
          (1922320 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_hints[1164417]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1164423 'move' default_arg_hints[1164417](1164419 call writer_default_hints[1061451] f[1158520] error[1886275]))
        val errorExists[2223120]:bool[10] "temp"
        (2223125 'move' errorExists[2223120](2223122 '!=' error[1886275] nil[44]))
        if errorExists[2223120]
        {
          {
            val error[1922325]:Error[167984] "error variable" "temp"
            (1922327 'move' error[1922325] nil[44])
            (1922331 call close[236112] f[1158520] error[1922325])
            val errorExists[2225088]:bool[10] "temp"
            (2225093 'move' errorExists[2225088](2225090 '!=' error[1922325] nil[44]))
            if errorExists[2225088]
            {
              gotoErrorHandling handler[1922342] handler[1922342]
            }
            label handler[1922342]
            const-val shouldHandleError[1922344]:bool[10] "temp"
            val errorExists[2225096]:bool[10] "temp"
            (2225101 'move' errorExists[2225096](2225098 '!=' error[1922325] nil[44]))
            (1922346 'move' shouldHandleError[1922344] errorExists[2225096])
            if shouldHandleError[1922344]
            {
              (1922353 call chpl_uncaught_error[170289] error[1922325])
            }
          }
          (1922356 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_style[1164427]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1164433 'move' default_arg_style[1164427](1164429 call writer_default_style[1061501] f[1158520] error[1886275]))
        val errorExists[2223128]:bool[10] "temp"
        (2223133 'move' errorExists[2223128](2223130 '!=' error[1886275] nil[44]))
        if errorExists[2223128]
        {
          {
            val error[1922361]:Error[167984] "error variable" "temp"
            (1922363 'move' error[1922361] nil[44])
            (1922367 call close[236112] f[1158520] error[1922361])
            val errorExists[2225104]:bool[10] "temp"
            (2225109 'move' errorExists[2225104](2225106 '!=' error[1922361] nil[44]))
            if errorExists[2225104]
            {
              gotoErrorHandling handler[1922378] handler[1922378]
            }
            label handler[1922378]
            const-val shouldHandleError[1922380]:bool[10] "temp"
            val errorExists[2225112]:bool[10] "temp"
            (2225117 'move' errorExists[2225112](2225114 '!=' error[1922361] nil[44]))
            (1922382 'move' shouldHandleError[1922380] errorExists[2225112])
            if shouldHandleError[1922380]
            {
              (1922389 call chpl_uncaught_error[170289] error[1922361])
            }
          }
          (1922392 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val ret_tmp[1908964]:channel(true,dynamic,false)[1061136] "temp"
        (1158545 call writer[1061042] f[1158520] default_arg_start[1164397] default_arg_end[1164407] default_arg_hints[1164417] default_arg_style[1164427] error[1886275] ret_tmp[1908964])
        (1908967 'move' call_tmp[1158537] ret_tmp[1908964])
        val errorExists[2223136]:bool[10] "temp"
        (2223141 'move' errorExists[2223136](2223138 '!=' error[1886275] nil[44]))
        if errorExists[2223136]
        {
          {
            val error[1922397]:Error[167984] "error variable" "temp"
            (1922399 'move' error[1922397] nil[44])
            (1922403 call close[236112] f[1158520] error[1922397])
            val errorExists[2225120]:bool[10] "temp"
            (2225125 'move' errorExists[2225120](2225122 '!=' error[1922397] nil[44]))
            if errorExists[2225120]
            {
              gotoErrorHandling handler[1922414] handler[1922414]
            }
            label handler[1922414]
            const-val shouldHandleError[1922416]:bool[10] "temp"
            val errorExists[2225128]:bool[10] "temp"
            (2225133 'move' errorExists[2225128](2225130 '!=' error[1922397] nil[44]))
            (1922418 'move' shouldHandleError[1922416] errorExists[2225128])
            if shouldHandleError[1922416]
            {
              (1922425 call chpl_uncaught_error[170289] error[1922397])
            }
          }
          (1922428 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val w[1158548]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
        (1158550 'move' w[1158548] call_tmp[1158537])
        ref _tuple_expand_tmp_0[1164439]:_ref(string)[938128] "dead after last mention" "temp"
        (1164445 'move' _tuple_expand_tmp_0[1164439](1164465 '.v' args[1158073] x0[1158738]))
        ref _tuple_expand_tmp_1[1164447]:_ref(codepointIndex)[948958] "dead after last mention" "temp"
        (1164453 'move' _tuple_expand_tmp_1[1164447](1164470 '.v' args[1158073] x1[1158740]))
        ref _tuple_expand_tmp_2[1164455]:_ref(string)[938128] "dead after last mention" "temp"
        (1164461 'move' _tuple_expand_tmp_2[1164455](1164475 '.v' args[1158073] x2[1158742]))
        const-val _return_tmp_[1875488]:bool[10] "dead after last mention" "temp"
        (1875490 'move' _return_tmp_[1875488](1158569 call write[1164700] w[1158548] _tuple_expand_tmp_0[1164439] _tuple_expand_tmp_1[1164447] _tuple_expand_tmp_2[1164455] error[1886275]))
        val errorExists[2223144]:bool[10] "temp"
        (2223149 'move' errorExists[2223144](2223146 '!=' error[1886275] nil[44]))
        if errorExists[2223144]
        {
          {
            val error[1922433]:Error[167984] "error variable" "temp"
            (1922435 'move' error[1922433] nil[44])
            (1922439 call close[1062551] w[1158548] error[1922433])
            val errorExists[2225136]:bool[10] "temp"
            (2225141 'move' errorExists[2225136](2225138 '!=' error[1922433] nil[44]))
            if errorExists[2225136]
            {
              gotoErrorHandling handler[1922450] handler[1922450]
            }
            label handler[1922450]
            const-val shouldHandleError[1922452]:bool[10] "temp"
            val errorExists[2225144]:bool[10] "temp"
            (2225149 'move' errorExists[2225144](2225146 '!=' error[1922433] nil[44]))
            (1922454 'move' shouldHandleError[1922452] errorExists[2225144])
            if shouldHandleError[1922452]
            {
              (1922461 call chpl_uncaught_error[170289] error[1922433])
            }
          }
          (1922464 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922469]:Error[167984] "error variable" "temp"
            (1922471 'move' error[1922469] nil[44])
            (1922475 call close[236112] f[1158520] error[1922469])
            val errorExists[2225152]:bool[10] "temp"
            (2225157 'move' errorExists[2225152](2225154 '!=' error[1922469] nil[44]))
            if errorExists[2225152]
            {
              gotoErrorHandling handler[1922486] handler[1922486]
            }
            label handler[1922486]
            const-val shouldHandleError[1922488]:bool[10] "temp"
            val errorExists[2225160]:bool[10] "temp"
            (2225165 'move' errorExists[2225160](2225162 '!=' error[1922469] nil[44]))
            (1922490 'move' shouldHandleError[1922488] errorExists[2225160])
            if shouldHandleError[1922488]
            {
              (1922497 call chpl_uncaught_error[170289] error[1922469])
            }
          }
          (1922500 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val call_tmp[1158574]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1158576 'move' call_tmp[1158574](1158582 call offset[1080337] w[1158548]))
        const-val offset[1158583]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1158585 'move' offset[1158583] call_tmp[1158574])
        val call_tmp[1158589]:uint(8)[100] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1158596]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158598 'move' call_tmp[1158596](1158601 call +[949855] offset[1158583]))
        val call_tmp[1158604]:c_ptr(uint(8))[937612] "dead at end of block" "maybe param" "temp"
        (1158606 'move' call_tmp[1158604](1158609 call c_malloc[1080492] call_tmp[1158596]))
        val buf[1158612]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
        (1158614 'move' buf[1158612](1175843 call chpl__initCopy[954219] call_tmp[1158604]))
        const-val call_tmp[1158618]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
        const-val default_arg_start[1175866]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175872 'move' default_arg_start[1175866](1175868 call reader_default_start[1081077] f[1158520] error[1886275]))
        val errorExists[2223152]:bool[10] "temp"
        (2223157 'move' errorExists[2223152](2223154 '!=' error[1886275] nil[44]))
        if errorExists[2223152]
        {
          {
            val error[1922505]:Error[167984] "error variable" "temp"
            (1922507 'move' error[1922505] nil[44])
            (1922511 call close[1062551] w[1158548] error[1922505])
            val errorExists[2225168]:bool[10] "temp"
            (2225173 'move' errorExists[2225168](2225170 '!=' error[1922505] nil[44]))
            if errorExists[2225168]
            {
              gotoErrorHandling handler[1922522] handler[1922522]
            }
            label handler[1922522]
            const-val shouldHandleError[1922524]:bool[10] "temp"
            val errorExists[2225176]:bool[10] "temp"
            (2225181 'move' errorExists[2225176](2225178 '!=' error[1922505] nil[44]))
            (1922526 'move' shouldHandleError[1922524] errorExists[2225176])
            if shouldHandleError[1922524]
            {
              (1922533 call chpl_uncaught_error[170289] error[1922505])
            }
          }
          (1922536 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922541]:Error[167984] "error variable" "temp"
            (1922543 'move' error[1922541] nil[44])
            (1922547 call close[236112] f[1158520] error[1922541])
            val errorExists[2225184]:bool[10] "temp"
            (2225189 'move' errorExists[2225184](2225186 '!=' error[1922541] nil[44]))
            if errorExists[2225184]
            {
              gotoErrorHandling handler[1922558] handler[1922558]
            }
            label handler[1922558]
            const-val shouldHandleError[1922560]:bool[10] "temp"
            val errorExists[2225192]:bool[10] "temp"
            (2225197 'move' errorExists[2225192](2225194 '!=' error[1922541] nil[44]))
            (1922562 'move' shouldHandleError[1922560] errorExists[2225192])
            if shouldHandleError[1922560]
            {
              (1922569 call chpl_uncaught_error[170289] error[1922541])
            }
          }
          (1922572 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_end[1175876]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175882 'move' default_arg_end[1175876](1175878 call reader_default_end[1081123] f[1158520] error[1886275]))
        val errorExists[2223160]:bool[10] "temp"
        (2223165 'move' errorExists[2223160](2223162 '!=' error[1886275] nil[44]))
        if errorExists[2223160]
        {
          {
            val error[1922577]:Error[167984] "error variable" "temp"
            (1922579 'move' error[1922577] nil[44])
            (1922583 call close[1062551] w[1158548] error[1922577])
            val errorExists[2225200]:bool[10] "temp"
            (2225205 'move' errorExists[2225200](2225202 '!=' error[1922577] nil[44]))
            if errorExists[2225200]
            {
              gotoErrorHandling handler[1922594] handler[1922594]
            }
            label handler[1922594]
            const-val shouldHandleError[1922596]:bool[10] "temp"
            val errorExists[2225208]:bool[10] "temp"
            (2225213 'move' errorExists[2225208](2225210 '!=' error[1922577] nil[44]))
            (1922598 'move' shouldHandleError[1922596] errorExists[2225208])
            if shouldHandleError[1922596]
            {
              (1922605 call chpl_uncaught_error[170289] error[1922577])
            }
          }
          (1922608 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922613]:Error[167984] "error variable" "temp"
            (1922615 'move' error[1922613] nil[44])
            (1922619 call close[236112] f[1158520] error[1922613])
            val errorExists[2225216]:bool[10] "temp"
            (2225221 'move' errorExists[2225216](2225218 '!=' error[1922613] nil[44]))
            if errorExists[2225216]
            {
              gotoErrorHandling handler[1922630] handler[1922630]
            }
            label handler[1922630]
            const-val shouldHandleError[1922632]:bool[10] "temp"
            val errorExists[2225224]:bool[10] "temp"
            (2225229 'move' errorExists[2225224](2225226 '!=' error[1922613] nil[44]))
            (1922634 'move' shouldHandleError[1922632] errorExists[2225224])
            if shouldHandleError[1922632]
            {
              (1922641 call chpl_uncaught_error[170289] error[1922613])
            }
          }
          (1922644 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_hints[1175886]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        (1175892 'move' default_arg_hints[1175886](1175888 call reader_default_hints[1081186] f[1158520] error[1886275]))
        val errorExists[2223168]:bool[10] "temp"
        (2223173 'move' errorExists[2223168](2223170 '!=' error[1886275] nil[44]))
        if errorExists[2223168]
        {
          {
            val error[1922649]:Error[167984] "error variable" "temp"
            (1922651 'move' error[1922649] nil[44])
            (1922655 call close[1062551] w[1158548] error[1922649])
            val errorExists[2225232]:bool[10] "temp"
            (2225237 'move' errorExists[2225232](2225234 '!=' error[1922649] nil[44]))
            if errorExists[2225232]
            {
              gotoErrorHandling handler[1922666] handler[1922666]
            }
            label handler[1922666]
            const-val shouldHandleError[1922668]:bool[10] "temp"
            val errorExists[2225240]:bool[10] "temp"
            (2225245 'move' errorExists[2225240](2225242 '!=' error[1922649] nil[44]))
            (1922670 'move' shouldHandleError[1922668] errorExists[2225240])
            if shouldHandleError[1922668]
            {
              (1922677 call chpl_uncaught_error[170289] error[1922649])
            }
          }
          (1922680 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922685]:Error[167984] "error variable" "temp"
            (1922687 'move' error[1922685] nil[44])
            (1922691 call close[236112] f[1158520] error[1922685])
            val errorExists[2225248]:bool[10] "temp"
            (2225253 'move' errorExists[2225248](2225250 '!=' error[1922685] nil[44]))
            if errorExists[2225248]
            {
              gotoErrorHandling handler[1922702] handler[1922702]
            }
            label handler[1922702]
            const-val shouldHandleError[1922704]:bool[10] "temp"
            val errorExists[2225256]:bool[10] "temp"
            (2225261 'move' errorExists[2225256](2225258 '!=' error[1922685] nil[44]))
            (1922706 'move' shouldHandleError[1922704] errorExists[2225256])
            if shouldHandleError[1922704]
            {
              (1922713 call chpl_uncaught_error[170289] error[1922685])
            }
          }
          (1922716 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val default_arg_style[1175896]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
        (1175902 'move' default_arg_style[1175896](1175898 call reader_default_style[1081233] f[1158520] error[1886275]))
        val errorExists[2223176]:bool[10] "temp"
        (2223181 'move' errorExists[2223176](2223178 '!=' error[1886275] nil[44]))
        if errorExists[2223176]
        {
          {
            val error[1922721]:Error[167984] "error variable" "temp"
            (1922723 'move' error[1922721] nil[44])
            (1922727 call close[1062551] w[1158548] error[1922721])
            val errorExists[2225264]:bool[10] "temp"
            (2225269 'move' errorExists[2225264](2225266 '!=' error[1922721] nil[44]))
            if errorExists[2225264]
            {
              gotoErrorHandling handler[1922738] handler[1922738]
            }
            label handler[1922738]
            const-val shouldHandleError[1922740]:bool[10] "temp"
            val errorExists[2225272]:bool[10] "temp"
            (2225277 'move' errorExists[2225272](2225274 '!=' error[1922721] nil[44]))
            (1922742 'move' shouldHandleError[1922740] errorExists[2225272])
            if shouldHandleError[1922740]
            {
              (1922749 call chpl_uncaught_error[170289] error[1922721])
            }
          }
          (1922752 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922757]:Error[167984] "error variable" "temp"
            (1922759 'move' error[1922757] nil[44])
            (1922763 call close[236112] f[1158520] error[1922757])
            val errorExists[2225280]:bool[10] "temp"
            (2225285 'move' errorExists[2225280](2225282 '!=' error[1922757] nil[44]))
            if errorExists[2225280]
            {
              gotoErrorHandling handler[1922774] handler[1922774]
            }
            label handler[1922774]
            const-val shouldHandleError[1922776]:bool[10] "temp"
            val errorExists[2225288]:bool[10] "temp"
            (2225293 'move' errorExists[2225288](2225290 '!=' error[1922757] nil[44]))
            (1922778 'move' shouldHandleError[1922776] errorExists[2225288])
            if shouldHandleError[1922776]
            {
              (1922785 call chpl_uncaught_error[170289] error[1922757])
            }
          }
          (1922788 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val ret_tmp[1909366]:channel(false,dynamic,false)[1080871] "temp"
        (1158626 call reader[1080777] f[1158520] default_arg_start[1175866] default_arg_end[1175876] default_arg_hints[1175886] default_arg_style[1175896] error[1886275] ret_tmp[1909366])
        (1909369 'move' call_tmp[1158618] ret_tmp[1909366])
        val errorExists[2223184]:bool[10] "temp"
        (2223189 'move' errorExists[2223184](2223186 '!=' error[1886275] nil[44]))
        if errorExists[2223184]
        {
          {
            val error[1922793]:Error[167984] "error variable" "temp"
            (1922795 'move' error[1922793] nil[44])
            (1922799 call close[1062551] w[1158548] error[1922793])
            val errorExists[2225296]:bool[10] "temp"
            (2225301 'move' errorExists[2225296](2225298 '!=' error[1922793] nil[44]))
            if errorExists[2225296]
            {
              gotoErrorHandling handler[1922810] handler[1922810]
            }
            label handler[1922810]
            const-val shouldHandleError[1922812]:bool[10] "temp"
            val errorExists[2225304]:bool[10] "temp"
            (2225309 'move' errorExists[2225304](2225306 '!=' error[1922793] nil[44]))
            (1922814 'move' shouldHandleError[1922812] errorExists[2225304])
            if shouldHandleError[1922812]
            {
              (1922821 call chpl_uncaught_error[170289] error[1922793])
            }
          }
          (1922824 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922829]:Error[167984] "error variable" "temp"
            (1922831 'move' error[1922829] nil[44])
            (1922835 call close[236112] f[1158520] error[1922829])
            val errorExists[2225312]:bool[10] "temp"
            (2225317 'move' errorExists[2225312](2225314 '!=' error[1922829] nil[44]))
            if errorExists[2225312]
            {
              gotoErrorHandling handler[1922846] handler[1922846]
            }
            label handler[1922846]
            const-val shouldHandleError[1922848]:bool[10] "temp"
            val errorExists[2225320]:bool[10] "temp"
            (2225325 'move' errorExists[2225320](2225322 '!=' error[1922829] nil[44]))
            (1922850 'move' shouldHandleError[1922848] errorExists[2225320])
            if shouldHandleError[1922848]
            {
              (1922857 call chpl_uncaught_error[170289] error[1922829])
            }
          }
          (1922860 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val r[1158629]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
        (1158631 'move' r[1158629] call_tmp[1158618])
        const-val call_tmp[1158646]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1158648 'move' call_tmp[1158646] offset[1158583])
        (1158658 call readBytes[1083028] r[1158629] buf[1158612] call_tmp[1158646] error[1886275])
        val errorExists[2223192]:bool[10] "temp"
        (2223197 'move' errorExists[2223192](2223194 '!=' error[1886275] nil[44]))
        if errorExists[2223192]
        {
          {
            val error[1922865]:Error[167984] "error variable" "temp"
            (1922867 'move' error[1922865] nil[44])
            (1922871 call close[1082283] r[1158629] error[1922865])
            val errorExists[2225328]:bool[10] "temp"
            (2225333 'move' errorExists[2225328](2225330 '!=' error[1922865] nil[44]))
            if errorExists[2225328]
            {
              gotoErrorHandling handler[1922882] handler[1922882]
            }
            label handler[1922882]
            const-val shouldHandleError[1922884]:bool[10] "temp"
            val errorExists[2225336]:bool[10] "temp"
            (2225341 'move' errorExists[2225336](2225338 '!=' error[1922865] nil[44]))
            (1922886 'move' shouldHandleError[1922884] errorExists[2225336])
            if shouldHandleError[1922884]
            {
              (1922893 call chpl_uncaught_error[170289] error[1922865])
            }
          }
          (1922896 call chpl__autoDestroy[1680699] r[1158629])
          {
            val error[1922901]:Error[167984] "error variable" "temp"
            (1922903 'move' error[1922901] nil[44])
            (1922907 call close[1062551] w[1158548] error[1922901])
            val errorExists[2225344]:bool[10] "temp"
            (2225349 'move' errorExists[2225344](2225346 '!=' error[1922901] nil[44]))
            if errorExists[2225344]
            {
              gotoErrorHandling handler[1922918] handler[1922918]
            }
            label handler[1922918]
            const-val shouldHandleError[1922920]:bool[10] "temp"
            val errorExists[2225352]:bool[10] "temp"
            (2225357 'move' errorExists[2225352](2225354 '!=' error[1922901] nil[44]))
            (1922922 'move' shouldHandleError[1922920] errorExists[2225352])
            if shouldHandleError[1922920]
            {
              (1922929 call chpl_uncaught_error[170289] error[1922901])
            }
          }
          (1922932 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1922937]:Error[167984] "error variable" "temp"
            (1922939 'move' error[1922937] nil[44])
            (1922943 call close[236112] f[1158520] error[1922937])
            val errorExists[2225360]:bool[10] "temp"
            (2225365 'move' errorExists[2225360](2225362 '!=' error[1922937] nil[44]))
            if errorExists[2225360]
            {
              gotoErrorHandling handler[1922954] handler[1922954]
            }
            label handler[1922954]
            const-val shouldHandleError[1922956]:bool[10] "temp"
            val errorExists[2225368]:bool[10] "temp"
            (2225373 'move' errorExists[2225368](2225370 '!=' error[1922937] nil[44]))
            (1922958 'move' shouldHandleError[1922956] errorExists[2225368])
            if shouldHandleError[1922956]
            {
              (1922965 call chpl_uncaught_error[170289] error[1922937])
            }
          }
          (1922968 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        ref call_tmp[1158665]:_ref(uint(8))[937097] "dead after last mention" "maybe param" "temp"
        (1158667 'move' call_tmp[1158665](1158670 call this[954280] buf[1158612] offset[1158583]))
        const-val coerce_tmp[1175912]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175918 'move' coerce_tmp[1175912](1175914 'cast' uint(8)[100] 0))
        (1158673 call =[435464] call_tmp[1158665] coerce_tmp[1175912])
        const-val call_tmp[1158679]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1158681 'move' call_tmp[1158679](1158684 call +[949855] offset[1158583]))
        const-val call_tmp[1158687]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1904892]:string[26] "temp"
        (1158692 call createStringWithNewBuffer[30493] buf[1158612] offset[1158583] call_tmp[1158679] replace[173694] error[1886275] ret_tmp[1904892])
        (1904895 'move' call_tmp[1158687] ret_tmp[1904892])
        val errorExists[2223200]:bool[10] "temp"
        (2223205 'move' errorExists[2223200](2223202 '!=' error[1886275] nil[44]))
        if errorExists[2223200]
        {
          {
            val error[1922973]:Error[167984] "error variable" "temp"
            (1922975 'move' error[1922973] nil[44])
            (1922979 call close[1082283] r[1158629] error[1922973])
            val errorExists[2225376]:bool[10] "temp"
            (2225381 'move' errorExists[2225376](2225378 '!=' error[1922973] nil[44]))
            if errorExists[2225376]
            {
              gotoErrorHandling handler[1922990] handler[1922990]
            }
            label handler[1922990]
            const-val shouldHandleError[1922992]:bool[10] "temp"
            val errorExists[2225384]:bool[10] "temp"
            (2225389 'move' errorExists[2225384](2225386 '!=' error[1922973] nil[44]))
            (1922994 'move' shouldHandleError[1922992] errorExists[2225384])
            if shouldHandleError[1922992]
            {
              (1923001 call chpl_uncaught_error[170289] error[1922973])
            }
          }
          (1923004 call chpl__autoDestroy[1680699] r[1158629])
          {
            val error[1923009]:Error[167984] "error variable" "temp"
            (1923011 'move' error[1923009] nil[44])
            (1923015 call close[1062551] w[1158548] error[1923009])
            val errorExists[2225392]:bool[10] "temp"
            (2225397 'move' errorExists[2225392](2225394 '!=' error[1923009] nil[44]))
            if errorExists[2225392]
            {
              gotoErrorHandling handler[1923026] handler[1923026]
            }
            label handler[1923026]
            const-val shouldHandleError[1923028]:bool[10] "temp"
            val errorExists[2225400]:bool[10] "temp"
            (2225405 'move' errorExists[2225400](2225402 '!=' error[1923009] nil[44]))
            (1923030 'move' shouldHandleError[1923028] errorExists[2225400])
            if shouldHandleError[1923028]
            {
              (1923037 call chpl_uncaught_error[170289] error[1923009])
            }
          }
          (1923040 call chpl__autoDestroy[1676445] w[1158548])
          {
            val error[1923045]:Error[167984] "error variable" "temp"
            (1923047 'move' error[1923045] nil[44])
            (1923051 call close[236112] f[1158520] error[1923045])
            val errorExists[2225408]:bool[10] "temp"
            (2225413 'move' errorExists[2225408](2225410 '!=' error[1923045] nil[44]))
            if errorExists[2225408]
            {
              gotoErrorHandling handler[1923062] handler[1923062]
            }
            label handler[1923062]
            const-val shouldHandleError[1923064]:bool[10] "temp"
            val errorExists[2225416]:bool[10] "temp"
            (2225421 'move' errorExists[2225416](2225418 '!=' error[1923045] nil[44]))
            (1923066 'move' shouldHandleError[1923064] errorExists[2225416])
            if shouldHandleError[1923064]
            {
              (1923073 call chpl_uncaught_error[170289] error[1923045])
            }
          }
          (1923076 call chpl__autoDestroy[1603492] f[1158520])
          gotoErrorHandling handler[1886276] handler[1886276]
        }
        const-val ret[1158697]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1158699 'move' ret[1158697] call_tmp[1158687])
        const-val coerce_tmp[1175923]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1175929 'move' coerce_tmp[1175923](1175925 'cast' c_void_ptr[149] buf[1158612]))
        (1158711 call c_free[207907] coerce_tmp[1175923])
        (1175933 'move' ret[1158063] ret[1158697])
        {
          val error[1923081]:Error[167984] "error variable" "temp"
          (1923083 'move' error[1923081] nil[44])
          (1923087 call close[1082283] r[1158629] error[1923081])
          val errorExists[2225424]:bool[10] "temp"
          (2225429 'move' errorExists[2225424](2225426 '!=' error[1923081] nil[44]))
          if errorExists[2225424]
          {
            gotoErrorHandling handler[1923098] handler[1923098]
          }
          label handler[1923098]
          const-val shouldHandleError[1923100]:bool[10] "temp"
          val errorExists[2225432]:bool[10] "temp"
          (2225437 'move' errorExists[2225432](2225434 '!=' error[1923081] nil[44]))
          (1923102 'move' shouldHandleError[1923100] errorExists[2225432])
          if shouldHandleError[1923100]
          {
            (1923109 call chpl_uncaught_error[170289] error[1923081])
          }
        }
        (1923112 call chpl__autoDestroy[1680699] r[1158629])
        {
          val error[1923117]:Error[167984] "error variable" "temp"
          (1923119 'move' error[1923117] nil[44])
          (1923123 call close[1062551] w[1158548] error[1923117])
          val errorExists[2225440]:bool[10] "temp"
          (2225445 'move' errorExists[2225440](2225442 '!=' error[1923117] nil[44]))
          if errorExists[2225440]
          {
            gotoErrorHandling handler[1923134] handler[1923134]
          }
          label handler[1923134]
          const-val shouldHandleError[1923136]:bool[10] "temp"
          val errorExists[2225448]:bool[10] "temp"
          (2225453 'move' errorExists[2225448](2225450 '!=' error[1923117] nil[44]))
          (1923138 'move' shouldHandleError[1923136] errorExists[2225448])
          if shouldHandleError[1923136]
          {
            (1923145 call chpl_uncaught_error[170289] error[1923117])
          }
        }
        (1923148 call chpl__autoDestroy[1676445] w[1158548])
        {
          val error[1923153]:Error[167984] "error variable" "temp"
          (1923155 'move' error[1923153] nil[44])
          (1923159 call close[236112] f[1158520] error[1923153])
          val errorExists[2225456]:bool[10] "temp"
          (2225461 'move' errorExists[2225456](2225458 '!=' error[1923153] nil[44]))
          if errorExists[2225456]
          {
            gotoErrorHandling handler[1923170] handler[1923170]
          }
          label handler[1923170]
          const-val shouldHandleError[1923172]:bool[10] "temp"
          val errorExists[2225464]:bool[10] "temp"
          (2225469 'move' errorExists[2225464](2225466 '!=' error[1923153] nil[44]))
          (1923174 'move' shouldHandleError[1923172] errorExists[2225464])
          if shouldHandleError[1923172]
          {
            (1923181 call chpl_uncaught_error[170289] error[1923153])
          }
        }
        (1923184 call chpl__autoDestroy[1603492] f[1158520])
        (1923187 call chpl__autoDestroy[1683465] args[1158073])
        gotoReturn _end_stringify[1158726] _end_stringify[1158726]
        label handler[1886276]
        const-val shouldHandleError[1886469]:bool[10] "temp"
        val errorExists[2223208]:bool[10] "temp"
        (2223213 'move' errorExists[2223208](2223210 '!=' error[1886275] nil[44]))
        (1886473 'move' shouldHandleError[1886469] errorExists[2223208])
        if shouldHandleError[1886469]
        {
          (1886466 call chpl_uncaught_error[170289] error[1886275])
        }
      }
    }
    (1923190 call chpl__autoDestroy[1683465] args[1158073])
    label _end_stringify[1158726]
    (1910574 '=' _retArg[1910572] ret[1158063])
    (1910576 return _void[55])
  }
  function stringify[1272682](const  ref arg _e0_args[1272684]:string[26], const in arg _e1_args[1272686]:int(64)[13], const  ref arg _e2_args[1272688]:string[26], ref arg _retArg[1913144]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1272702]:(string,int(64),string)[1273373] "insert auto destroy"
    const-val ret_tmp[1913152]:(string,int(64),string)[1273373] "temp"
    (1272707 call chpl__init_tuple[1273386] _e0_args[1272684] _e1_args[1272686] _e2_args[1272688] ret_tmp[1913152])
    (1913155 'move' args[1272702] ret_tmp[1913152])
    const-val ret[1272692]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1272730]:string[26] "dead at end of block" "insert auto destroy"
      (1272732 'move' str[1272730](1913148 call chpl__initCopy[981537] ""))
      {
        const-val i[1272737]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1272739 'move' i[1272737] 0)
        {
          {
            {
              ref call_tmp[1276445]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1276447 'move' call_tmp[1276445](1277475 '.v' args[1272702] x0[1273367]))
              (1276453 call +=[38800] str[1272730] call_tmp[1276445])
            }
          }
        }
        label _continueLabel0[1276410]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1277021]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1277023 'move' call_tmp[1277021](1277582 '.' args[1272702] x1[1273369]))
                    const-val call_tmp[1277028]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1277585]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1277589 'move' coerce_tmp[1277585](1277587 'deref' call_tmp[1277021]))
                    const-val ret_tmp[1909126]:string[26] "temp"
                    (1277033 call _cast[1063342] coerce_tmp[1277585] ret_tmp[1909126])
                    (1909129 'move' call_tmp[1277028] ret_tmp[1909126])
                    (1277037 call +=[38800] str[1272730] call_tmp[1277028])
                    (1924903 call chpl__autoDestroy[1601673] call_tmp[1277028])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1276755]
        {
          {
            {
              ref call_tmp[1277135]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1277137 'move' call_tmp[1277135](1277623 '.v' args[1272702] x2[1273371]))
              (1277143 call +=[38800] str[1272730] call_tmp[1277135])
            }
          }
        }
        label _continueLabel2[1277100]
        label _unused_continueLabel[1273128]
        label _breakLabel[1273130]
      }
      (1277628 'move' ret[1272692] str[1272730])
      (1924906 call chpl__autoDestroy[1697598] args[1272702])
      gotoReturn _end_stringify[1273355] _end_stringify[1273355]
    }
    (1924909 call chpl__autoDestroy[1697598] args[1272702])
    label _end_stringify[1273355]
    (1913146 '=' _retArg[1913144] ret[1272692])
    (1913150 return _void[55])
  }
  function stringify[1560024](const  ref arg _e0_args[1560026]:string[26], const  ref arg _e1_args[1560028]:string[26], const  ref arg _e2_args[1560030]:string[26], ref arg _retArg[1916867]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1560044]:3*string[1560715] "insert auto destroy"
    const-val ret_tmp[1916875]:3*string[1560715] "temp"
    (1560049 call chpl__init_tuple[1560737] _e0_args[1560026] _e1_args[1560028] _e2_args[1560030] ret_tmp[1916875])
    (1916878 'move' args[1560044] ret_tmp[1916875])
    const-val ret[1560034]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1560072]:string[26] "dead at end of block" "insert auto destroy"
      (1560074 'move' str[1560072](1916871 call chpl__initCopy[981537] ""))
      {
        const-val i[1560079]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1560081 'move' i[1560079] 0)
        {
          {
            {
              ref call_tmp[1563797]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1563799 'move' call_tmp[1563797](1564827 '.v' args[1560044] x0[1560709]))
              (1563805 call +=[38800] str[1560072] call_tmp[1563797])
            }
          }
        }
        label _continueLabel0[1563762]
        {
          {
            {
              ref call_tmp[1564142]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1564144 'move' call_tmp[1564142](1564861 '.v' args[1560044] x1[1560711]))
              (1564150 call +=[38800] str[1560072] call_tmp[1564142])
            }
          }
        }
        label _continueLabel1[1564107]
        {
          {
            {
              ref call_tmp[1564487]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1564489 'move' call_tmp[1564487](1564895 '.v' args[1560044] x2[1560713]))
              (1564495 call +=[38800] str[1560072] call_tmp[1564487])
            }
          }
        }
        label _continueLabel2[1564452]
        label _unused_continueLabel[1560470]
        label _breakLabel[1560472]
      }
      (1564900 'move' ret[1560034] str[1560072])
      (1927532 call chpl__autoDestroy[1823322] args[1560044])
      gotoReturn _end_stringify[1560697] _end_stringify[1560697]
    }
    (1927535 call chpl__autoDestroy[1823322] args[1560044])
    label _end_stringify[1560697]
    (1916869 '=' _retArg[1916867] ret[1560034])
    (1916873 return _void[55])
  }
  function stringify[1213167](const  ref arg _e0_args[1213169]:string[26], const in arg _e1_args[1213171]:int(64)[13], ref arg _retArg[1910960]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1213183]:(string,int(64))[1213850] "insert auto destroy"
    const-val ret_tmp[1910968]:(string,int(64))[1213850] "temp"
    (1213188 call chpl__init_tuple[1213861] _e0_args[1213169] _e1_args[1213171] ret_tmp[1910968])
    (1910971 'move' args[1213183] ret_tmp[1910968])
    const-val ret[1213175]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1213210]:string[26] "dead at end of block" "insert auto destroy"
      (1213212 'move' str[1213210](1910964 call chpl__initCopy[981537] ""))
      {
        const-val i[1213217]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1213219 'move' i[1213217] 0)
        {
          {
            {
              ref call_tmp[1216842]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1216844 'move' call_tmp[1216842](1217527 '.v' args[1213183] x0[1213846]))
              (1216850 call +=[38800] str[1213210] call_tmp[1216842])
            }
          }
        }
        label _continueLabel0[1216807]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1217418]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1217420 'move' call_tmp[1217418](1217634 '.' args[1213183] x1[1213848]))
                    const-val call_tmp[1217425]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1217637]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1217641 'move' coerce_tmp[1217637](1217639 'deref' call_tmp[1217418]))
                    const-val ret_tmp[1909096]:string[26] "temp"
                    (1217430 call _cast[1063342] coerce_tmp[1217637] ret_tmp[1909096])
                    (1909099 'move' call_tmp[1217425] ret_tmp[1909096])
                    (1217434 call +=[38800] str[1213210] call_tmp[1217425])
                    (1924588 call chpl__autoDestroy[1601673] call_tmp[1217425])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1217152]
        label _unused_continueLabel[1213608]
        label _breakLabel[1213610]
      }
      (1217646 'move' ret[1213175] str[1213210])
      (1924591 call chpl__autoDestroy[1692377] args[1213183])
      gotoReturn _end_stringify[1213835] _end_stringify[1213835]
    }
    (1924594 call chpl__autoDestroy[1692377] args[1213183])
    label _end_stringify[1213835]
    (1910962 '=' _retArg[1910960] ret[1213175])
    (1910966 return _void[55])
  }
  function stringify[1279179](const  ref arg _e0_args[1279181]:string[26], const in arg _e1_args[1279183]:int(64)[13], const  ref arg _e2_args[1279185]:string[26], const in arg _e3_args[1279187]:int(64)[13], const  ref arg _e4_args[1279189]:string[26], ref arg _retArg[1913170]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1279207]:(string,int(64),string,int(64),string)[1279886] "insert auto destroy"
    const-val ret_tmp[1913178]:(string,int(64),string,int(64),string)[1279886] "temp"
    (1279212 call chpl__init_tuple[1279903] _e0_args[1279181] _e1_args[1279183] _e2_args[1279185] _e3_args[1279187] _e4_args[1279189] ret_tmp[1913178])
    (1913181 'move' args[1279207] ret_tmp[1913178])
    const-val ret[1279193]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1279237]:string[26] "dead at end of block" "insert auto destroy"
      (1279239 'move' str[1279237](1913174 call chpl__initCopy[981537] ""))
      {
        const-val i[1279244]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1279246 'move' i[1279244] 0)
        {
          {
            {
              ref call_tmp[1283760]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1283762 'move' call_tmp[1283760](1285480 '.v' args[1279207] x0[1279876]))
              (1283768 call +=[38800] str[1279237] call_tmp[1283760])
            }
          }
        }
        label _continueLabel0[1283725]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1284336]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1284338 'move' call_tmp[1284336](1285587 '.' args[1279207] x1[1279878]))
                    const-val call_tmp[1284343]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285590]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285594 'move' coerce_tmp[1285590](1285592 'deref' call_tmp[1284336]))
                    const-val ret_tmp[1909132]:string[26] "temp"
                    (1284348 call _cast[1063342] coerce_tmp[1285590] ret_tmp[1909132])
                    (1909135 'move' call_tmp[1284343] ret_tmp[1909132])
                    (1284352 call +=[38800] str[1279237] call_tmp[1284343])
                    (1924919 call chpl__autoDestroy[1601673] call_tmp[1284343])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1284070]
        {
          {
            {
              ref call_tmp[1284450]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1284452 'move' call_tmp[1284450](1285628 '.v' args[1279207] x2[1279880]))
              (1284458 call +=[38800] str[1279237] call_tmp[1284450])
            }
          }
        }
        label _continueLabel2[1284415]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1285026]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1285028 'move' call_tmp[1285026](1285735 '.' args[1279207] x3[1279882]))
                    const-val call_tmp[1285033]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1285738]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1285742 'move' coerce_tmp[1285738](1285740 'deref' call_tmp[1285026]))
                    const-val ret_tmp[1909138]:string[26] "temp"
                    (1285038 call _cast[1063342] coerce_tmp[1285738] ret_tmp[1909138])
                    (1909141 'move' call_tmp[1285033] ret_tmp[1909138])
                    (1285042 call +=[38800] str[1279237] call_tmp[1285033])
                    (1924923 call chpl__autoDestroy[1601673] call_tmp[1285033])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1284760]
        {
          {
            {
              ref call_tmp[1285140]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1285142 'move' call_tmp[1285140](1285776 '.v' args[1279207] x4[1279884]))
              (1285148 call +=[38800] str[1279237] call_tmp[1285140])
            }
          }
        }
        label _continueLabel4[1285105]
        label _unused_continueLabel[1279635]
        label _breakLabel[1279637]
      }
      (1285781 'move' ret[1279193] str[1279237])
      (1924926 call chpl__autoDestroy[1697934] args[1279207])
      gotoReturn _end_stringify[1279862] _end_stringify[1279862]
    }
    (1924929 call chpl__autoDestroy[1697934] args[1279207])
    label _end_stringify[1279862]
    (1913172 '=' _retArg[1913170] ret[1279193])
    (1913176 return _void[55])
  }
  function stringify[1337977](const  ref arg _e0_args[1337979]:string[26], const  ref arg _e1_args[1337981]:string[26], const in arg _e2_args[1337983]:int(64)[13], const  ref arg _e3_args[1337985]:string[26], const in arg _e4_args[1337987]:range(int(64),bounded,false)[1027003], ref arg _retArg[1913903]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1338005]:(string,string,int(64),string,range(int(64),bounded,false))[1338684] "insert auto destroy"
    const-val ret_tmp[1913913]:(string,string,int(64),string,range(int(64),bounded,false))[1338684] "temp"
    (1338010 call chpl__init_tuple[1338701] _e0_args[1337979] _e1_args[1337981] _e2_args[1337983] _e3_args[1337985] _e4_args[1337987] ret_tmp[1913913])
    (1913916 'move' args[1338005] ret_tmp[1913913])
    const-val ret[1337991]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1338035]:string[26] "dead at end of block" "insert auto destroy"
      (1338037 'move' str[1338035](1913909 call chpl__initCopy[981537] ""))
      {
        const-val i[1338042]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1338044 'move' i[1338042] 0)
        {
          {
            {
              ref call_tmp[1341924]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1341926 'move' call_tmp[1341924](1343644 '.v' args[1338005] x0[1338674]))
              (1341932 call +=[38800] str[1338035] call_tmp[1341924])
            }
          }
        }
        label _continueLabel0[1341889]
        {
          {
            {
              ref call_tmp[1342269]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1342271 'move' call_tmp[1342269](1343678 '.v' args[1338005] x1[1338676]))
              (1342277 call +=[38800] str[1338035] call_tmp[1342269])
            }
          }
        }
        label _continueLabel1[1342234]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1342845]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1342847 'move' call_tmp[1342845](1343785 '.' args[1338005] x2[1338678]))
                    const-val call_tmp[1342852]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343788]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343792 'move' coerce_tmp[1343788](1343790 'deref' call_tmp[1342845]))
                    const-val ret_tmp[1909144]:string[26] "temp"
                    (1342857 call _cast[1063342] coerce_tmp[1343788] ret_tmp[1909144])
                    (1909147 'move' call_tmp[1342852] ret_tmp[1909144])
                    (1342861 call +=[38800] str[1338035] call_tmp[1342852])
                    (1925417 call chpl__autoDestroy[1601673] call_tmp[1342852])
                  }
                }
              }
            }
          }
        }
        label _continueLabel2[1342579]
        {
          {
            {
              ref call_tmp[1342959]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1342961 'move' call_tmp[1342959](1343826 '.v' args[1338005] x3[1338680]))
              (1342967 call +=[38800] str[1338035] call_tmp[1342959])
            }
          }
        }
        label _continueLabel3[1342924]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1343535]:_ref(range(int(64),bounded,false))[1027047] "dead after last mention" "maybe param" "temp"
                    (1343537 'move' call_tmp[1343535](1343926 '.' args[1338005] x4[1338682]))
                    const-val call_tmp[1343542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1343929]:range(int(64),bounded,false)[1027003] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1343933 'move' coerce_tmp[1343929](1913907 call chpl__initCopy[1085195] call_tmp[1343535]))
                    const-val ret_tmp[1909984]:string[26] "temp"
                    (1343547 call _cast[1119626] coerce_tmp[1343929] ret_tmp[1909984])
                    (1909987 'move' call_tmp[1343542] ret_tmp[1909984])
                    (1343551 call +=[38800] str[1338035] call_tmp[1343542])
                    (1925421 call chpl__autoDestroy[1601673] call_tmp[1343542])
                    (1925424 call chpl__autoDestroy[1407763] coerce_tmp[1343929])
                  }
                }
              }
            }
          }
        }
        label _continueLabel4[1343269]
        label _unused_continueLabel[1338433]
        label _breakLabel[1338435]
      }
      (1343938 'move' ret[1337991] str[1338035])
      (1925427 call chpl__autoDestroy[1755928] args[1338005])
      gotoReturn _end_stringify[1338660] _end_stringify[1338660]
    }
    (1925430 call chpl__autoDestroy[1755928] args[1338005])
    label _end_stringify[1338660]
    (1913905 '=' _retArg[1913903] ret[1337991])
    (1913911 return _void[55])
  }
  function stringify[1423263](const  ref arg _e0_args[1423265]:string[26], const in arg _e1_args[1423267]:int(64)[13], const  ref arg _e2_args[1423269]:string[26], const in arg _e3_args[1423271]:int(64)[13], const  ref arg _e4_args[1423273]:string[26], const in arg _e5_args[1423275]:int(64)[13], ref arg _retArg[1915023]:_ref(string)[938128]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val args[1423295]:(string,int(64),string,int(64),string,int(64))[1423978] "insert auto destroy"
    const-val ret_tmp[1915031]:(string,int(64),string,int(64),string,int(64))[1423978] "temp"
    (1423300 call chpl__init_tuple[1423997] _e0_args[1423265] _e1_args[1423267] _e2_args[1423269] _e3_args[1423271] _e4_args[1423273] _e5_args[1423275] ret_tmp[1915031])
    (1915034 'move' args[1423295] ret_tmp[1915031])
    const-val ret[1423279]:string[26] "dead after last mention" "RVV" "temp"
    {
      val str[1423326]:string[26] "dead at end of block" "insert auto destroy"
      (1423328 'move' str[1423326](1915027 call chpl__initCopy[981537] ""))
      {
        const-val i[1423333]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1423335 'move' i[1423333] 0)
        {
          {
            {
              ref call_tmp[1427940]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1427942 'move' call_tmp[1427940](1430005 '.v' args[1423295] x0[1423966]))
              (1427948 call +=[38800] str[1423326] call_tmp[1427940])
            }
          }
        }
        label _continueLabel0[1427905]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1428516]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1428518 'move' call_tmp[1428516](1430112 '.' args[1423295] x1[1423968]))
                    const-val call_tmp[1428523]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1430115]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1430119 'move' coerce_tmp[1430115](1430117 'deref' call_tmp[1428516]))
                    const-val ret_tmp[1909150]:string[26] "temp"
                    (1428528 call _cast[1063342] coerce_tmp[1430115] ret_tmp[1909150])
                    (1909153 'move' call_tmp[1428523] ret_tmp[1909150])
                    (1428532 call +=[38800] str[1423326] call_tmp[1428523])
                    (1926029 call chpl__autoDestroy[1601673] call_tmp[1428523])
                  }
                }
              }
            }
          }
        }
        label _continueLabel1[1428250]
        {
          {
            {
              ref call_tmp[1428630]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1428632 'move' call_tmp[1428630](1430153 '.v' args[1423295] x2[1423970]))
              (1428638 call +=[38800] str[1423326] call_tmp[1428630])
            }
          }
        }
        label _continueLabel2[1428595]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1429206]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1429208 'move' call_tmp[1429206](1430260 '.' args[1423295] x3[1423972]))
                    const-val call_tmp[1429213]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1430263]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1430267 'move' coerce_tmp[1430263](1430265 'deref' call_tmp[1429206]))
                    const-val ret_tmp[1909156]:string[26] "temp"
                    (1429218 call _cast[1063342] coerce_tmp[1430263] ret_tmp[1909156])
                    (1909159 'move' call_tmp[1429213] ret_tmp[1909156])
                    (1429222 call +=[38800] str[1423326] call_tmp[1429213])
                    (1926033 call chpl__autoDestroy[1601673] call_tmp[1429213])
                  }
                }
              }
            }
          }
        }
        label _continueLabel3[1428940]
        {
          {
            {
              ref call_tmp[1429320]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1429322 'move' call_tmp[1429320](1430301 '.v' args[1423295] x4[1423974]))
              (1429328 call +=[38800] str[1423326] call_tmp[1429320])
            }
          }
        }
        label _continueLabel4[1429285]
        {
          {
            {
              {
                {
                  {
                    ref call_tmp[1429896]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
                    (1429898 'move' call_tmp[1429896](1430408 '.' args[1423295] x5[1423976]))
                    const-val call_tmp[1429903]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                    const-val coerce_tmp[1430411]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1430415 'move' coerce_tmp[1430411](1430413 'deref' call_tmp[1429896]))
                    const-val ret_tmp[1909162]:string[26] "temp"
                    (1429908 call _cast[1063342] coerce_tmp[1430411] ret_tmp[1909162])
                    (1909165 'move' call_tmp[1429903] ret_tmp[1909162])
                    (1429912 call +=[38800] str[1423326] call_tmp[1429903])
                    (1926037 call chpl__autoDestroy[1601673] call_tmp[1429903])
                  }
                }
              }
            }
          }
        }
        label _continueLabel5[1429630]
        label _unused_continueLabel[1423724]
        label _breakLabel[1423726]
      }
      (1430420 'move' ret[1423279] str[1423326])
      (1926040 call chpl__autoDestroy[1790172] args[1423295])
      gotoReturn _end_stringify[1423951] _end_stringify[1423951]
    }
    (1926043 call chpl__autoDestroy[1790172] args[1423295])
    label _end_stringify[1423951]
    (1915025 '=' _retArg[1915023] ret[1423279])
    (1915029 return _void[55])
  }
  val _arg_to_proto_names[246649]:heap__tuple_6_star_string[2197661] "dead at end of block" "insert auto destroy" "private"
  function _ref(channel(true,dynamic,false))[1061145].write[1066145](const  ref arg this[1066151]:_ref(channel(true,dynamic,false))[1061145], const  ref arg _e0_args[1066153]:byteIndex[28173], ref arg error_out[1885453]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1066202]:1*byteIndex[1057270] "insert auto destroy"
    const-val ret_tmp[1908946]:1*byteIndex[1057270] "temp"
    (1066207 call chpl__init_tuple[1057288] _e0_args[1066153] ret_tmp[1908946])
    (1908949 'move' args[1066202] ret_tmp[1908946])
    val ret[1066157]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1066240]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909264]:locale[28] "temp"
    (1066248 call getLocaleOfIoRequest[1066400] this[1066151] ret_tmp[1909264])
    (1909267 'move' call_tmp[1066240] ret_tmp[1909264])
    const-val origLocale[1066249]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1066251 'move' origLocale[1066249] call_tmp[1066240])
    const-val tmp[1066255]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1066257]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1066259 'move' call_tmp[1066257](1066262 call home[1061944] this[1066151]))
    const-val call_tmp[1066265]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1066607]:BaseLocale[91204] "dead after last mention" "temp"
    (1066612 'move' _locale_tmp_[1066607](1066609 call _value[89984] call_tmp[1066257]))
    (1066267 'move' call_tmp[1066265](1066269 '_wide_get_locale' _locale_tmp_[1066607]))
    (1066271 'move' tmp[1066255] call_tmp[1066265])
    val error[1885458]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885460 'move' error[1885458] nil[44])
    val rvfDerefTmp[2196011]:channel(true,dynamic,false)[1061136] "temp"
    (2196015 'move' rvfDerefTmp[2196011](2196013 'deref' this[1066151]))
    val rvfDerefTmp[2196046]:locale[28] "temp"
    (2196049 'move' rvfDerefTmp[2196046] origLocale[1066249])
    val isdirect[2202117]:bool[10] "temp"
    (2202122 'move' isdirect[2202117](2202119 call chpl_doDirectExecuteOn[187469] tmp[1066255]))
    if isdirect[2202117]
    {
      (2202126 call on_fn[1066278] rvfDerefTmp[2196011] args[1066202] rvfDerefTmp[2196046] error[1885458])
    }
    {
      val _args_foron_fn[2202150]:_class_localson_fn[2202136] "temp"
      (2202154 'move' _args_foron_fn[2202150](2202152 'stack allocate class' _class_localson_fn[2202136]))
      (2202156 '.=' _args_foron_fn[2202150] _0_tmp[2202139] tmp[1066255])
      (2202160 '.=' _args_foron_fn[2202150] _1_rvfDerefTmp[2202141] rvfDerefTmp[2196011])
      ref tmp[2202164]:1*byteIndex[1057270] "temp"
      (2202168 'move' tmp[2202164](2202166 'set reference' args[1066202]))
      (2202170 '.=' _args_foron_fn[2202150] _2_args[2202143] tmp[2202164])
      (2202174 '.=' _args_foron_fn[2202150] _3_rvfDerefTmp[2202145] rvfDerefTmp[2196046])
      ref tmp[2202178]:Error[167984] "temp"
      (2202182 'move' tmp[2202178](2202180 'set reference' error[1885458]))
      (2202184 '.=' _args_foron_fn[2202150] _4_error[2202147] tmp[2202178])
      val _args_vforon_fn[2202188]:c_void_ptr[149] "temp"
      (2202192 'move' _args_vforon_fn[2202188](2202190 'cast_to_void_star' _args_foron_fn[2202150]))
      val _args_sizeon_fn[2202194]:int(64)[13] "temp"
      (2202198 'move' _args_sizeon_fn[2202194](2202196 'sizeof_bundle' _class_localson_fn[2202136]))
      on(2202254 call wrapon_fn[2202200] tmp[1066255] _args_vforon_fn[2202188] _args_sizeon_fn[2202194] _args_foron_fn[2202150])
    }
    val errorExists[2222720]:bool[10] "temp"
    (2222725 'move' errorExists[2222720](2222722 '!=' error[1885458] nil[44]))
    if errorExists[2222720]
    {
      (1885464 '=' error_out[1885453] error[1885458])
      (1921429 call chpl__autoDestroy[1601737] origLocale[1066249])
      (1921432 call chpl__autoDestroy[1675383] args[1066202])
      gotoErrorHandlingReturn _endwrite[1885455] _endwrite[1885455]
    }
    {
    }
    (1066385 'move' ret[1066157] 1)
    (1921435 call chpl__autoDestroy[1601737] origLocale[1066249])
    (1921438 call chpl__autoDestroy[1675383] args[1066202])
    label _endwrite[1885455]
    (1066390 return ret[1066157])
  }
  function _ref(channel(true,dynamic,false))[1061145].write[1164700](const  ref arg this[1164706]:_ref(channel(true,dynamic,false))[1061145], const  ref arg _e0_args[1164708]:string[26], const  ref arg _e1_args[1164710]:codepointIndex[28277], const  ref arg _e2_args[1164712]:string[26], ref arg error_out[1886477]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1165018]:(string,codepointIndex,string)[1158744] "insert auto destroy"
    const-val ret_tmp[1910584]:(string,codepointIndex,string)[1158744] "temp"
    (1165023 call chpl__init_tuple[1158757] _e0_args[1164708] _e1_args[1164710] _e2_args[1164712] ret_tmp[1910584])
    (1910587 'move' args[1165018] ret_tmp[1910584])
    val ret[1164716]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1165058]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909276]:locale[28] "temp"
    (1165066 call getLocaleOfIoRequest[1066400] this[1164706] ret_tmp[1909276])
    (1909279 'move' call_tmp[1165058] ret_tmp[1909276])
    const-val origLocale[1165067]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1165069 'move' origLocale[1165067] call_tmp[1165058])
    const-val tmp[1165073]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1165075]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1165077 'move' call_tmp[1165075](1165080 call home[1061944] this[1164706]))
    const-val call_tmp[1165083]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1165220]:BaseLocale[91204] "dead after last mention" "temp"
    (1165225 'move' _locale_tmp_[1165220](1165222 call _value[89984] call_tmp[1165075]))
    (1165085 'move' call_tmp[1165083](1165087 '_wide_get_locale' _locale_tmp_[1165220]))
    (1165089 'move' tmp[1165073] call_tmp[1165083])
    val error[1886482]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1886484 'move' error[1886482] nil[44])
    val rvfDerefTmp[2196234]:channel(true,dynamic,false)[1061136] "temp"
    (2196238 'move' rvfDerefTmp[2196234](2196236 'deref' this[1164706]))
    val rvfDerefTmp[2196297]:locale[28] "temp"
    (2196300 'move' rvfDerefTmp[2196297] origLocale[1165067])
    val isdirect[2203474]:bool[10] "temp"
    (2203479 'move' isdirect[2203474](2203476 call chpl_doDirectExecuteOn[187469] tmp[1165073]))
    if isdirect[2203474]
    {
      (2203483 call on_fn[1165096] rvfDerefTmp[2196234] args[1165018] rvfDerefTmp[2196297] error[1886482])
    }
    {
      val _args_foron_fn[2203507]:_class_localson_fn[2203493] "temp"
      (2203511 'move' _args_foron_fn[2203507](2203509 'stack allocate class' _class_localson_fn[2203493]))
      (2203513 '.=' _args_foron_fn[2203507] _0_tmp[2203496] tmp[1165073])
      (2203517 '.=' _args_foron_fn[2203507] _1_rvfDerefTmp[2203498] rvfDerefTmp[2196234])
      ref tmp[2203521]:(string,codepointIndex,string)[1158744] "temp"
      (2203525 'move' tmp[2203521](2203523 'set reference' args[1165018]))
      (2203527 '.=' _args_foron_fn[2203507] _2_args[2203500] tmp[2203521])
      (2203531 '.=' _args_foron_fn[2203507] _3_rvfDerefTmp[2203502] rvfDerefTmp[2196297])
      ref tmp[2203535]:Error[167984] "temp"
      (2203539 'move' tmp[2203535](2203537 'set reference' error[1886482]))
      (2203541 '.=' _args_foron_fn[2203507] _4_error[2203504] tmp[2203535])
      val _args_vforon_fn[2203545]:c_void_ptr[149] "temp"
      (2203549 'move' _args_vforon_fn[2203545](2203547 'cast_to_void_star' _args_foron_fn[2203507]))
      val _args_sizeon_fn[2203551]:int(64)[13] "temp"
      (2203555 'move' _args_sizeon_fn[2203551](2203553 'sizeof_bundle' _class_localson_fn[2203493]))
      on(2203611 call wrapon_fn[2203557] tmp[1165073] _args_vforon_fn[2203545] _args_sizeon_fn[2203551] _args_foron_fn[2203507])
    }
    val errorExists[2223216]:bool[10] "temp"
    (2223221 'move' errorExists[2223216](2223218 '!=' error[1886482] nil[44]))
    if errorExists[2223216]
    {
      (1886488 '=' error_out[1886477] error[1886482])
      (1923193 call chpl__autoDestroy[1601737] origLocale[1165067])
      (1923196 call chpl__autoDestroy[1683465] args[1165018])
      gotoErrorHandlingReturn _endwrite[1886479] _endwrite[1886479]
    }
    {
    }
    (1165203 'move' ret[1164716] 1)
    (1923199 call chpl__autoDestroy[1601737] origLocale[1165067])
    (1923202 call chpl__autoDestroy[1683465] args[1165018])
    label _endwrite[1886479]
    (1165208 return ret[1164716])
  }
  function _ref(channel(true,dynamic,false))[1061145].write[1180164](const  ref arg this[1180170]:_ref(channel(true,dynamic,false))[1061145], const  ref arg _e0_args[1180172]:string[26], const  ref arg _e1_args[1180174]:codepointIndex[28277], const  ref arg _e2_args[1180176]:string[26], const in arg _e3_args[1180178]:int(64)[13], ref arg error_out[1886974]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1180496]:(string,codepointIndex,string,int(64))[1176709] "insert auto destroy"
    const-val ret_tmp[1910642]:(string,codepointIndex,string,int(64))[1176709] "temp"
    (1180501 call chpl__init_tuple[1176724] _e0_args[1180172] _e1_args[1180174] _e2_args[1180176] _e3_args[1180178] ret_tmp[1910642])
    (1910645 'move' args[1180496] ret_tmp[1910642])
    val ret[1180182]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1180537]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1909282]:locale[28] "temp"
    (1180545 call getLocaleOfIoRequest[1066400] this[1180170] ret_tmp[1909282])
    (1909285 'move' call_tmp[1180537] ret_tmp[1909282])
    const-val origLocale[1180546]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1180548 'move' origLocale[1180546] call_tmp[1180537])
    const-val tmp[1180552]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1180554]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1180556 'move' call_tmp[1180554](1180559 call home[1061944] this[1180170]))
    const-val call_tmp[1180562]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1180705]:BaseLocale[91204] "dead after last mention" "temp"
    (1180710 'move' _locale_tmp_[1180705](1180707 call _value[89984] call_tmp[1180554]))
    (1180564 'move' call_tmp[1180562](1180566 '_wide_get_locale' _locale_tmp_[1180705]))
    (1180568 'move' tmp[1180552] call_tmp[1180562])
    val error[1886979]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1886981 'move' error[1886979] nil[44])
    val rvfDerefTmp[2196321]:channel(true,dynamic,false)[1061136] "temp"
    (2196325 'move' rvfDerefTmp[2196321](2196323 'deref' this[1180170]))
    val rvfDerefTmp[2196398]:locale[28] "temp"
    (2196401 'move' rvfDerefTmp[2196398] origLocale[1180546])
    val isdirect[2203616]:bool[10] "temp"
    (2203621 'move' isdirect[2203616](2203618 call chpl_doDirectExecuteOn[187469] tmp[1180552]))
    if isdirect[2203616]
    {
      (2203625 call on_fn[1180575] rvfDerefTmp[2196321] args[1180496] rvfDerefTmp[2196398] error[1886979])
    }
    {
      val _args_foron_fn[2203649]:_class_localson_fn[2203635] "temp"
      (2203653 'move' _args_foron_fn[2203649](2203651 'stack allocate class' _class_localson_fn[2203635]))
      (2203655 '.=' _args_foron_fn[2203649] _0_tmp[2203638] tmp[1180552])
      (2203659 '.=' _args_foron_fn[2203649] _1_rvfDerefTmp[2203640] rvfDerefTmp[2196321])
      ref tmp[2203663]:(string,codepointIndex,string,int(64))[1176709] "temp"
      (2203667 'move' tmp[2203663](2203665 'set reference' args[1180496]))
      (2203669 '.=' _args_foron_fn[2203649] _2_args[2203642] tmp[2203663])
      (2203673 '.=' _args_foron_fn[2203649] _3_rvfDerefTmp[2203644] rvfDerefTmp[2196398])
      ref tmp[2203677]:Error[167984] "temp"
      (2203681 'move' tmp[2203677](2203679 'set reference' error[1886979]))
      (2203683 '.=' _args_foron_fn[2203649] _4_error[2203646] tmp[2203677])
      val _args_vforon_fn[2203687]:c_void_ptr[149] "temp"
      (2203691 'move' _args_vforon_fn[2203687](2203689 'cast_to_void_star' _args_foron_fn[2203649]))
      val _args_sizeon_fn[2203693]:int(64)[13] "temp"
      (2203697 'move' _args_sizeon_fn[2203693](2203695 'sizeof_bundle' _class_localson_fn[2203635]))
      on(2203753 call wrapon_fn[2203699] tmp[1180552] _args_vforon_fn[2203687] _args_sizeon_fn[2203693] _args_foron_fn[2203649])
    }
    val errorExists[2223496]:bool[10] "temp"
    (2223501 'move' errorExists[2223496](2223498 '!=' error[1886979] nil[44]))
    if errorExists[2223496]
    {
      (1886985 '=' error_out[1886974] error[1886979])
      (1924256 call chpl__autoDestroy[1601737] origLocale[1180546])
      (1924259 call chpl__autoDestroy[1683786] args[1180496])
      gotoErrorHandlingReturn _endwrite[1886976] _endwrite[1886976]
    }
    {
    }
    (1180682 'move' ret[1180182] 1)
    (1924262 call chpl__autoDestroy[1601737] origLocale[1180546])
    (1924265 call chpl__autoDestroy[1683786] args[1180496])
    label _endwrite[1886976]
    (1180687 return ret[1180182])
  }
  function _ref(channel(true,dynamic,true))[1022023].write[1552055](const  ref arg this[1552061]:_ref(channel(true,dynamic,true))[1022023], const  ref arg _e0_args[1552063]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg _e1_args[1552065]:ioNewline[238789], ref arg error_out[1887902]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1552079]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "insert auto destroy"
    const-val ret_tmp[1916817]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "temp"
    (1552084 call chpl__init_tuple[1552292] _e0_args[1552063] _e1_args[1552065] ret_tmp[1916817])
    (1916820 'move' args[1552079] ret_tmp[1916817])
    val ret[1552069]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1552118]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916829]:locale[28] "temp"
    (1552126 call getLocaleOfIoRequest[1552341] this[1552061] ret_tmp[1916829])
    (1916832 'move' call_tmp[1552118] ret_tmp[1916829])
    const-val origLocale[1552127]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1552129 'move' origLocale[1552127] call_tmp[1552118])
    const-val tmp[1552133]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1552135]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1552137 'move' call_tmp[1552135](1552140 call home[1023231] this[1552061]))
    const-val call_tmp[1552143]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1552478]:BaseLocale[91204] "dead after last mention" "temp"
    (1552483 'move' _locale_tmp_[1552478](1552480 call _value[89984] call_tmp[1552135]))
    (1552145 'move' call_tmp[1552143](1552147 '_wide_get_locale' _locale_tmp_[1552478]))
    (1552149 'move' tmp[1552133] call_tmp[1552143])
    val error[1887907]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1887909 'move' error[1887907] nil[44])
    val rvfDerefTmp[2196673]:channel(true,dynamic,true)[1022014] "temp"
    (2196677 'move' rvfDerefTmp[2196673](2196675 'deref' this[1552061]))
    val rvfDerefTmp[2196722]:locale[28] "temp"
    (2196725 'move' rvfDerefTmp[2196722] origLocale[1552127])
    val isdirect[2208524]:bool[10] "temp"
    (2208529 'move' isdirect[2208524](2208526 call chpl_doDirectExecuteOn[187469] tmp[1552133]))
    if isdirect[2208524]
    {
      (2208533 call on_fn[1552156] rvfDerefTmp[2196673] args[1552079] rvfDerefTmp[2196722] error[1887907])
    }
    {
      val _args_foron_fn[2208557]:_class_localson_fn[2208543] "temp"
      (2208561 'move' _args_foron_fn[2208557](2208559 'stack allocate class' _class_localson_fn[2208543]))
      (2208563 '.=' _args_foron_fn[2208557] _0_tmp[2208546] tmp[1552133])
      (2208567 '.=' _args_foron_fn[2208557] _1_rvfDerefTmp[2208548] rvfDerefTmp[2196673])
      ref tmp[2208571]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "temp"
      (2208575 'move' tmp[2208571](2208573 'set reference' args[1552079]))
      (2208577 '.=' _args_foron_fn[2208557] _2_args[2208550] tmp[2208571])
      (2208581 '.=' _args_foron_fn[2208557] _3_rvfDerefTmp[2208552] rvfDerefTmp[2196722])
      ref tmp[2208585]:Error[167984] "temp"
      (2208589 'move' tmp[2208585](2208587 'set reference' error[1887907]))
      (2208591 '.=' _args_foron_fn[2208557] _4_error[2208554] tmp[2208585])
      val _args_vforon_fn[2208595]:c_void_ptr[149] "temp"
      (2208599 'move' _args_vforon_fn[2208595](2208597 'cast_to_void_star' _args_foron_fn[2208557]))
      val _args_sizeon_fn[2208601]:int(64)[13] "temp"
      (2208605 'move' _args_sizeon_fn[2208601](2208603 'sizeof_bundle' _class_localson_fn[2208543]))
      on(2208661 call wrapon_fn[2208607] tmp[1552133] _args_vforon_fn[2208595] _args_sizeon_fn[2208601] _args_foron_fn[2208557])
    }
    val errorExists[2223944]:bool[10] "temp"
    (2223949 'move' errorExists[2223944](2223946 '!=' error[1887907] nil[44]))
    if errorExists[2223944]
    {
      (1887913 '=' error_out[1887902] error[1887907])
      (1927192 call chpl__autoDestroy[1601737] origLocale[1552127])
      (1927195 call chpl__autoDestroy[1823210] args[1552079])
      gotoErrorHandlingReturn _endwrite[1887904] _endwrite[1887904]
    }
    {
    }
    (1552263 'move' ret[1552069] 1)
    (1927198 call chpl__autoDestroy[1601737] origLocale[1552127])
    (1927201 call chpl__autoDestroy[1823210] args[1552079])
    label _endwrite[1887904]
    (1552268 return ret[1552069])
  }
  function _ref(channel(true,dynamic,true))[1022023].write[1589600](const  ref arg this[1589606]:_ref(channel(true,dynamic,true))[1022023], const  ref arg _e0_args[1589608]:string[26], const  ref arg _e1_args[1589610]:ioNewline[238789], ref arg error_out[1889164]:Error[167984]) : bool[10] throws "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val args[1589624]:(string,ioNewline)[1589826] "insert auto destroy"
    const-val ret_tmp[1916983]:(string,ioNewline)[1589826] "temp"
    (1589629 call chpl__init_tuple[1589837] _e0_args[1589608] _e1_args[1589610] ret_tmp[1916983])
    (1916986 'move' args[1589624] ret_tmp[1916983])
    val ret[1589614]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1589663]:locale[28] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916835]:locale[28] "temp"
    (1589671 call getLocaleOfIoRequest[1552341] this[1589606] ret_tmp[1916835])
    (1916838 'move' call_tmp[1589663] ret_tmp[1916835])
    const-val origLocale[1589672]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1589674 'move' origLocale[1589672] call_tmp[1589663])
    const-val tmp[1589678]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1589680]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1589682 'move' call_tmp[1589680](1589685 call home[1023231] this[1589606]))
    const-val call_tmp[1589688]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1589888]:BaseLocale[91204] "dead after last mention" "temp"
    (1589893 'move' _locale_tmp_[1589888](1589890 call _value[89984] call_tmp[1589680]))
    (1589690 'move' call_tmp[1589688](1589692 '_wide_get_locale' _locale_tmp_[1589888]))
    (1589694 'move' tmp[1589678] call_tmp[1589688])
    val error[1889169]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1889171 'move' error[1889169] nil[44])
    val rvfDerefTmp[2196820]:channel(true,dynamic,true)[1022014] "temp"
    (2196824 'move' rvfDerefTmp[2196820](2196822 'deref' this[1589606]))
    val rvfDerefTmp[2196869]:locale[28] "temp"
    (2196872 'move' rvfDerefTmp[2196869] origLocale[1589672])
    val isdirect[2209691]:bool[10] "temp"
    (2209696 'move' isdirect[2209691](2209693 call chpl_doDirectExecuteOn[187469] tmp[1589678]))
    if isdirect[2209691]
    {
      (2209700 call on_fn[1589701] rvfDerefTmp[2196820] args[1589624] rvfDerefTmp[2196869] error[1889169])
    }
    {
      val _args_foron_fn[2209724]:_class_localson_fn[2209710] "temp"
      (2209728 'move' _args_foron_fn[2209724](2209726 'stack allocate class' _class_localson_fn[2209710]))
      (2209730 '.=' _args_foron_fn[2209724] _0_tmp[2209713] tmp[1589678])
      (2209734 '.=' _args_foron_fn[2209724] _1_rvfDerefTmp[2209715] rvfDerefTmp[2196820])
      ref tmp[2209738]:(string,ioNewline)[1589826] "temp"
      (2209742 'move' tmp[2209738](2209740 'set reference' args[1589624]))
      (2209744 '.=' _args_foron_fn[2209724] _2_args[2209717] tmp[2209738])
      (2209748 '.=' _args_foron_fn[2209724] _3_rvfDerefTmp[2209719] rvfDerefTmp[2196869])
      ref tmp[2209752]:Error[167984] "temp"
      (2209756 'move' tmp[2209752](2209754 'set reference' error[1889169]))
      (2209758 '.=' _args_foron_fn[2209724] _4_error[2209721] tmp[2209752])
      val _args_vforon_fn[2209762]:c_void_ptr[149] "temp"
      (2209766 'move' _args_vforon_fn[2209762](2209764 'cast_to_void_star' _args_foron_fn[2209724]))
      val _args_sizeon_fn[2209768]:int(64)[13] "temp"
      (2209772 'move' _args_sizeon_fn[2209768](2209770 'sizeof_bundle' _class_localson_fn[2209710]))
      on(2209828 call wrapon_fn[2209774] tmp[1589678] _args_vforon_fn[2209762] _args_sizeon_fn[2209768] _args_foron_fn[2209724])
    }
    val errorExists[2224512]:bool[10] "temp"
    (2224517 'move' errorExists[2224512](2224514 '!=' error[1889169] nil[44]))
    if errorExists[2224512]
    {
      (1889175 '=' error_out[1889164] error[1889169])
      (1927640 call chpl__autoDestroy[1601737] origLocale[1589672])
      (1927643 call chpl__autoDestroy[1825298] args[1589624])
      gotoErrorHandlingReturn _endwrite[1889166] _endwrite[1889166]
    }
    {
    }
    (1589808 'move' ret[1589614] 1)
    (1927646 call chpl__autoDestroy[1601737] origLocale[1589672])
    (1927649 call chpl__autoDestroy[1825298] args[1589624])
    label _endwrite[1889166]
    (1589813 return ret[1589614])
  }
  function _ref(channel(true,dynamic,true))[1022023].writeln[1551910](const  ref arg this[1551916]:_ref(channel(true,dynamic,true))[1022023], const  ref arg _e0_args[1551918]:[domain(1,int(64),false)] real(64)[1366029], ref arg error_out[1887883]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1551922]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1551969]:ioNewline[238789] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1551995]:ioNewline[238789] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1552047]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1552051 'move' default_arg_skipWhitespaceOnly[1552047](1552049 call init_default_skipWhitespaceOnly[1552015]))
    (1551998 call init[893858] initTemp[1551995] default_arg_skipWhitespaceOnly[1552047])
    (1551971 'move' call_tmp[1551969] initTemp[1551995])
    const-val call_tmp[1551975]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1887888]:Error[167984] "error variable" "temp"
    (1887890 'move' error[1887888] nil[44])
    (1551977 'move' call_tmp[1551975](1551983 call write[1552055] this[1551916] _e0_args[1551918] call_tmp[1551969] error[1887888]))
    val errorExists[2223936]:bool[10] "temp"
    (2223941 'move' errorExists[2223936](2223938 '!=' error[1887888] nil[44]))
    if errorExists[2223936]
    {
      (1887894 '=' error_out[1887883] error[1887888])
      (1927186 call chpl__autoDestroy[1603636] call_tmp[1551969])
      gotoErrorHandlingReturn _endwriteln[1887885] _endwriteln[1887885]
    }
    (1589504 'move' ret[1551922] call_tmp[1551975])
    (1927189 call chpl__autoDestroy[1603636] call_tmp[1551969])
    label _endwriteln[1887885]
    (1551991 return ret[1551922])
  }
  function _ref(channel(true,dynamic,true))[1022023].writeln[1589525](const  ref arg this[1589531]:_ref(channel(true,dynamic,true))[1022023], const  ref arg _e0_args[1589533]:string[26], ref arg error_out[1889145]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1589537]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1589547]:ioNewline[238789] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1589573]:ioNewline[238789] "dead after last mention" "temp"
    const-val default_arg_skipWhitespaceOnly[1589592]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    (1589596 'move' default_arg_skipWhitespaceOnly[1589592](1589594 call init_default_skipWhitespaceOnly[1552015]))
    (1589576 call init[893858] initTemp[1589573] default_arg_skipWhitespaceOnly[1589592])
    (1589549 'move' call_tmp[1589547] initTemp[1589573])
    const-val call_tmp[1589553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val error[1889150]:Error[167984] "error variable" "temp"
    (1889152 'move' error[1889150] nil[44])
    (1589555 'move' call_tmp[1589553](1589561 call write[1589600] this[1589531] _e0_args[1589533] call_tmp[1589547] error[1889150]))
    val errorExists[2224504]:bool[10] "temp"
    (2224509 'move' errorExists[2224504](2224506 '!=' error[1889150] nil[44]))
    if errorExists[2224504]
    {
      (1889156 '=' error_out[1889145] error[1889150])
      (1927634 call chpl__autoDestroy[1603636] call_tmp[1589547])
      gotoErrorHandlingReturn _endwriteln[1889147] _endwriteln[1889147]
    }
    (1590379 'move' ret[1589537] call_tmp[1589553])
    (1927637 call chpl__autoDestroy[1603636] call_tmp[1589547])
    label _endwriteln[1889147]
    (1589569 return ret[1589537])
  }
  function _ref(channel(true,dynamic,false))[1061145].close[1062551](const  ref arg this[1062557]:_ref(channel(true,dynamic,false))[1061145], ref arg error_out[1885295]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1062563]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1062565 'move' call_tmp[1062563](1062568 call ENOERR[223742]))
    val err[1062569]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1062709]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1065912 call =[224221] init_coerce_tmp[1062709] call_tmp[1062563])
    (1062571 'move' err[1062569] init_coerce_tmp[1062709])
    ref call_tmp[1062576]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1062578 'move' call_tmp[1062576](1062581 call _channel_internal[1061978] this[1062557]))
    const-val call_tmp[1062584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062758]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062762 'move' coerce_tmp[1062758](1062760 'deref' call_tmp[1062576]))
    (1062586 'move' call_tmp[1062584](1062589 call is_c_nil[1062716] coerce_tmp[1062758]))
    const-val call_tmp[1062591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062593 'move' call_tmp[1062591] call_tmp[1062584])
    if call_tmp[1062591]
    {
      const-val call_tmp[1062600]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062779 'move' coerce_tmp[1062773](1062775 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908450]:owned SystemError[1000427] "temp"
      (1062608 call fromSyserr[1017302] coerce_tmp[1062773] "cannot close invalid channel" ret_tmp[1908450])
      (1908453 'move' call_tmp[1062600] ret_tmp[1908450])
      val call_tmp[1062611]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062782]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908384]:owned Error[966647] "temp"
      (1062784 call _cast[1015936] call_tmp[1062600] ret_tmp[1908384])
      (1908387 'move' coerce_tmp[1062782] ret_tmp[1908384])
      const-val _formal_tmp_in_err[1062961]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062965 'move' _formal_tmp_in_err[1062961] coerce_tmp[1062782])
      (1062613 'move' call_tmp[1062611](1062616 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1062961]))
      {
        val castedError[1885300]:Error[167984] "temp"
        (1885306 'move' castedError[1885300] call_tmp[1062611])
        (1885308 '=' error_out[1885295] castedError[1885300])
        gotoErrorHandlingReturn _endclose[1885297] _endclose[1885297]
      }
    }
    const-val tmp[1062621]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1062623]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1062625 'move' call_tmp[1062623](1062628 call home[1061944] this[1062557]))
    const-val call_tmp[1062631]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1062971]:BaseLocale[91204] "dead after last mention" "temp"
    (1062976 'move' _locale_tmp_[1062971](1062973 call _value[89984] call_tmp[1062623]))
    (1062633 'move' call_tmp[1062631](1062635 '_wide_get_locale' _locale_tmp_[1062971]))
    (1062637 'move' tmp[1062621] call_tmp[1062631])
    val rvfDerefTmp[2195997]:channel(true,dynamic,false)[1061136] "temp"
    (2196001 'move' rvfDerefTmp[2195997](2195999 'deref' this[1062557]))
    val isdirect[2201857]:bool[10] "temp"
    (2201862 'move' isdirect[2201857](2201859 call chpl_doDirectExecuteOn[187469] tmp[1062621]))
    if isdirect[2201857]
    {
      (2201866 call on_fn[1062644] rvfDerefTmp[2195997] err[1062569])
    }
    {
      val _args_foron_fn[2201884]:_class_localson_fn[2201874] "temp"
      (2201888 'move' _args_foron_fn[2201884](2201886 'stack allocate class' _class_localson_fn[2201874]))
      (2201890 '.=' _args_foron_fn[2201884] _0_tmp[2201877] tmp[1062621])
      (2201894 '.=' _args_foron_fn[2201884] _1_rvfDerefTmp[2201879] rvfDerefTmp[2195997])
      ref tmp[2201898]:syserr[223672] "temp"
      (2201902 'move' tmp[2201898](2201900 'set reference' err[1062569]))
      (2201904 '.=' _args_foron_fn[2201884] _2_err[2201881] tmp[2201898])
      val _args_vforon_fn[2201908]:c_void_ptr[149] "temp"
      (2201912 'move' _args_vforon_fn[2201908](2201910 'cast_to_void_star' _args_foron_fn[2201884]))
      val _args_sizeon_fn[2201914]:int(64)[13] "temp"
      (2201918 'move' _args_sizeon_fn[2201914](2201916 'sizeof_bundle' _class_localson_fn[2201874]))
      on(2201958 call wrapon_fn[2201920] tmp[1062621] _args_vforon_fn[2201908] _args_sizeon_fn[2201914] _args_foron_fn[2201884])
    }
    {
    }
    const-val call_tmp[1062684]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1062686 'move' call_tmp[1062684](1062689 call _cond_test[224069] err[1062569]))
    if call_tmp[1062684]
    {
      {
        val error[1885312]:Error[167984] "error variable" "temp"
        (1885321 'move' error[1885312] nil[44])
        (1062698 call _ch_ioerror[1063054] this[1062557] err[1062569] "in channel.close" error[1885312])
        val errorExists[2222656]:bool[10] "temp"
        (2222661 'move' errorExists[2222656](2222658 '!=' error[1885312] nil[44]))
        if errorExists[2222656]
        {
          gotoErrorHandling handler[1885313] handler[1885313]
        }
        label handler[1885313]
        const-val shouldHandleError[1885332]:bool[10] "temp"
        val errorExists[2222664]:bool[10] "temp"
        (2222669 'move' errorExists[2222664](2222666 '!=' error[1885312] nil[44]))
        (1885336 'move' shouldHandleError[1885332] errorExists[2222664])
        if shouldHandleError[1885332]
        {
          (1885328 '=' error_out[1885295] error[1885312])
          gotoErrorHandlingReturn _endclose[1885297] _endclose[1885297]
        }
      }
    }
    label _endclose[1885297]
    (1062705 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080880].close[1082283](const  ref arg this[1082289]:_ref(channel(false,dynamic,false))[1080880], ref arg error_out[1886091]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val call_tmp[1082295]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
    (1082297 'move' call_tmp[1082295](1082300 call ENOERR[223742]))
    val err[1082301]:syserr[223672] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1082441]:syserr[223672] "dead at end of block" "initialized later" "temp"
    (1083021 call =[224221] init_coerce_tmp[1082441] call_tmp[1082295])
    (1082303 'move' err[1082301] init_coerce_tmp[1082441])
    ref call_tmp[1082308]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
    (1082310 'move' call_tmp[1082308](1082313 call _channel_internal[1081710] this[1082289]))
    const-val call_tmp[1082316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082448]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082452 'move' coerce_tmp[1082448](1082450 'deref' call_tmp[1082308]))
    (1082318 'move' call_tmp[1082316](1082321 call is_c_nil[1062716] coerce_tmp[1082448]))
    const-val call_tmp[1082323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082325 'move' call_tmp[1082323] call_tmp[1082316])
    if call_tmp[1082323]
    {
      const-val call_tmp[1082332]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082457]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082463 'move' coerce_tmp[1082457](1082459 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908462]:owned SystemError[1000427] "temp"
      (1082340 call fromSyserr[1017302] coerce_tmp[1082457] "cannot close invalid channel" ret_tmp[1908462])
      (1908465 'move' call_tmp[1082332] ret_tmp[1908462])
      val call_tmp[1082343]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082466]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908402]:owned Error[966647] "temp"
      (1082468 call _cast[1015936] call_tmp[1082332] ret_tmp[1908402])
      (1908405 'move' coerce_tmp[1082466] ret_tmp[1908402])
      const-val _formal_tmp_in_err[1082645]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082649 'move' _formal_tmp_in_err[1082645] coerce_tmp[1082466])
      (1082345 'move' call_tmp[1082343](1082348 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1082645]))
      {
        val castedError[1886096]:Error[167984] "temp"
        (1886102 'move' castedError[1886096] call_tmp[1082343])
        (1886104 '=' error_out[1886091] castedError[1886096])
        gotoErrorHandlingReturn _endclose[1886093] _endclose[1886093]
      }
    }
    const-val tmp[1082353]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1082355]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1082357 'move' call_tmp[1082355](1082360 call home[1081676] this[1082289]))
    const-val call_tmp[1082363]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1082655]:BaseLocale[91204] "dead after last mention" "temp"
    (1082660 'move' _locale_tmp_[1082655](1082657 call _value[89984] call_tmp[1082355]))
    (1082365 'move' call_tmp[1082363](1082367 '_wide_get_locale' _locale_tmp_[1082655]))
    (1082369 'move' tmp[1082353] call_tmp[1082363])
    val rvfDerefTmp[2196175]:channel(false,dynamic,false)[1080871] "temp"
    (2196179 'move' rvfDerefTmp[2196175](2196177 'deref' this[1082289]))
    val isdirect[2203078]:bool[10] "temp"
    (2203083 'move' isdirect[2203078](2203080 call chpl_doDirectExecuteOn[187469] tmp[1082353]))
    if isdirect[2203078]
    {
      (2203087 call on_fn[1082376] rvfDerefTmp[2196175] err[1082301])
    }
    {
      val _args_foron_fn[2203105]:_class_localson_fn[2203095] "temp"
      (2203109 'move' _args_foron_fn[2203105](2203107 'stack allocate class' _class_localson_fn[2203095]))
      (2203111 '.=' _args_foron_fn[2203105] _0_tmp[2203098] tmp[1082353])
      (2203115 '.=' _args_foron_fn[2203105] _1_rvfDerefTmp[2203100] rvfDerefTmp[2196175])
      ref tmp[2203119]:syserr[223672] "temp"
      (2203123 'move' tmp[2203119](2203121 'set reference' err[1082301]))
      (2203125 '.=' _args_foron_fn[2203105] _2_err[2203102] tmp[2203119])
      val _args_vforon_fn[2203129]:c_void_ptr[149] "temp"
      (2203133 'move' _args_vforon_fn[2203129](2203131 'cast_to_void_star' _args_foron_fn[2203105]))
      val _args_sizeon_fn[2203135]:int(64)[13] "temp"
      (2203139 'move' _args_sizeon_fn[2203135](2203137 'sizeof_bundle' _class_localson_fn[2203095]))
      on(2203179 call wrapon_fn[2203141] tmp[1082353] _args_vforon_fn[2203129] _args_sizeon_fn[2203135] _args_foron_fn[2203105])
    }
    {
    }
    const-val call_tmp[1082416]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082418 'move' call_tmp[1082416](1082421 call _cond_test[224069] err[1082301]))
    if call_tmp[1082416]
    {
      {
        val error[1886108]:Error[167984] "error variable" "temp"
        (1886117 'move' error[1886108] nil[44])
        (1082430 call _ch_ioerror[1082738] this[1082289] err[1082301] "in channel.close" error[1886108])
        val errorExists[2223016]:bool[10] "temp"
        (2223021 'move' errorExists[2223016](2223018 '!=' error[1886108] nil[44]))
        if errorExists[2223016]
        {
          gotoErrorHandling handler[1886109] handler[1886109]
        }
        label handler[1886109]
        const-val shouldHandleError[1886128]:bool[10] "temp"
        val errorExists[2223024]:bool[10] "temp"
        (2223029 'move' errorExists[2223024](2223026 '!=' error[1886108] nil[44]))
        (1886132 'move' shouldHandleError[1886128] errorExists[2223024])
        if shouldHandleError[1886128]
        {
          (1886124 '=' error_out[1886091] error[1886108])
          gotoErrorHandlingReturn _endclose[1886093] _endclose[1886093]
        }
      }
    }
    label _endclose[1886093]
    (1082437 return _void[55])
  }
  function _ref(channel(false,dynamic,false))[1080880].readBytes[1083028](const  ref arg this[1083034]:_ref(channel(false,dynamic,false))[1080880], const in arg x[1083036]:c_ptr(uint(8))[937612], const in arg len[1083040]:int(64)[13], ref arg error_out[1886217]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1083048]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906328]:locale[28] "temp"
    (1083053 call here[90438] ret_tmp[1906328])
    (1906331 'move' call_tmp[1083048] ret_tmp[1906328])
    ref call_tmp[1083054]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
    (1083056 'move' call_tmp[1083054](1083059 call home[1081676] this[1083034]))
    const-val call_tmp[1083062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1083064 'move' call_tmp[1083062](1083067 call !=[783099] call_tmp[1083048] call_tmp[1083054]))
    const-val call_tmp[1083070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1083072 'move' call_tmp[1083070] call_tmp[1083062])
    if call_tmp[1083070]
    {
      const-val call_tmp[1083079]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083236]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1083238 'move' new_temp[1083236](1083223 call _new[1064296] "bad remote channel.readBytes"))
      const-val initTemp[1083245]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1083248 call init[1064398] initTemp[1083245] new_temp[1083236])
      (1083081 'move' call_tmp[1083079] initTemp[1083245])
      val call_tmp[1083088]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083262]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909198]:owned Error[966647] "temp"
      (1083264 call _cast[1064919] call_tmp[1083079] ret_tmp[1909198])
      (1909201 'move' coerce_tmp[1083262] ret_tmp[1909198])
      const-val _formal_tmp_in_err[1083441]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083445 'move' _formal_tmp_in_err[1083441] coerce_tmp[1083262])
      (1083090 'move' call_tmp[1083088](1083093 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1083441]))
      {
        val castedError[1886222]:Error[167984] "temp"
        (1886228 'move' castedError[1886222] call_tmp[1083088])
        (1886230 '=' error_out[1886217] castedError[1886222])
        (1921587 call chpl__autoDestroy[1601737] call_tmp[1083048])
        gotoErrorHandlingReturn _endreadBytes[1886219] _endreadBytes[1886219]
      }
    }
    (1921590 call chpl__autoDestroy[1601737] call_tmp[1083048])
    ref call_tmp[1083098]:_ref(qio_channel_ptr_t)[937073] "dead at end of block" "maybe param" "temp"
    (1083100 'move' call_tmp[1083098](1083103 call _channel_internal[1081710] this[1083034]))
    const-val call_tmp[1083106]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083498]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083504 'move' coerce_tmp[1083498](1083500 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083506]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083510 'move' coerce_tmp[1083506](1083508 'deref' call_tmp[1083098]))
    (1083108 'move' call_tmp[1083106](1083111 call qio_channel_read_amt[1083472] coerce_tmp[1083498] coerce_tmp[1083506] x[1083036] len[1083040]))
    const-val err[1083116]:syserr[223672] "dead at end of block" "insert auto destroy"
    (1083118 'move' err[1083116](1083513 call chpl__initCopy[964674] call_tmp[1083106]))
    const-val call_tmp[1083122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1083124 'move' call_tmp[1083122](1083127 call _cond_test[224069] err[1083116]))
    if call_tmp[1083122]
    {
      {
        val error[1886234]:Error[167984] "error variable" "temp"
        (1886243 'move' error[1886234] nil[44])
        (1083136 call _ch_ioerror[1082738] this[1083034] err[1083116] "in channel.readBytes" error[1886234])
        val errorExists[2223072]:bool[10] "temp"
        (2223077 'move' errorExists[2223072](2223074 '!=' error[1886234] nil[44]))
        if errorExists[2223072]
        {
          gotoErrorHandling handler[1886235] handler[1886235]
        }
        label handler[1886235]
        const-val shouldHandleError[1886254]:bool[10] "temp"
        val errorExists[2223080]:bool[10] "temp"
        (2223085 'move' errorExists[2223080](2223082 '!=' error[1886234] nil[44]))
        (1886258 'move' shouldHandleError[1886254] errorExists[2223080])
        if shouldHandleError[1886254]
        {
          (1886250 '=' error_out[1886217] error[1886234])
          gotoErrorHandlingReturn _endreadBytes[1886219] _endreadBytes[1886219]
        }
      }
    }
    label _endreadBytes[1886219]
    (1083143 return _void[55])
  }
  const-val stdin[250296]:channel(false,dynamic,true)[985816] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250323]:channel(true,dynamic,true)[1022014] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250352]:channel(true,dynamic,true)[1022014] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250582]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250587]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[722053]:6*string[985240] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[724184]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724191]:channel(false,dynamic,true)[985816] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1017086]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1017150]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017198]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017776]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724196]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724201]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724208]:channel(true,dynamic,true)[1022014] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022661]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022725]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022776]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022813]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724213]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724218]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724225]:channel(true,dynamic,true)[1022014] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1024097]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1024108]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1024119]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1024130]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935786](ref arg this[1882184]:_ref(file)[948923]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715775]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
      (715778 'move' call_tmp[715775](396508 call _file_internal[887164] this[1882184]))
      const-val coerce_tmp[985871]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (985875 'move' coerce_tmp[985871](985873 'deref' call_tmp[715775]))
      (235993 call qio_file_release[232726] coerce_tmp[985871])
      ref call_tmp[715782]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
      (715785 'move' call_tmp[715782](235997 call _file_internal[887164] this[1882184]))
      (236001 call =[859961] call_tmp[715782] QIO_FILE_PTR_NULL[231530])
    }
    (935793 return _void[55])
  }
  function on_fn[935795](const in arg this[1882186]:file[235668], ref arg ret[1882188]:_ref(iostyle)[967739], ref arg error_out[1884482]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1884486]:Error[167984] "error variable" "temp"
        (1884495 'move' error[1884486] nil[44])
        ref rvfRerefTmp[2195686]:_ref(file)[948923] "temp"
        (2195690 'move' rvfRerefTmp[2195686](2195687 'set reference' this[1882186]))
        (236071 call checkAssumingLocal[235856] rvfRerefTmp[2195686] error[1884486])
        val errorExists[2222264]:bool[10] "temp"
        (2222269 'move' errorExists[2222264](2222266 '!=' error[1884486] nil[44]))
        if errorExists[2222264]
        {
          gotoErrorHandling handler[1884487] handler[1884487]
        }
        label handler[1884487]
        const-val shouldHandleError[1884506]:bool[10] "temp"
        val errorExists[2222272]:bool[10] "temp"
        (2222277 'move' errorExists[2222272](2222274 '!=' error[1884486] nil[44]))
        (1884510 'move' shouldHandleError[1884506] errorExists[2222272])
        if shouldHandleError[1884506]
        {
          (1884502 '=' error_out[1884482] error[1884486])
          gotoErrorHandlingReturn _endon_fn[1884484] _endon_fn[1884484]
        }
      }
      val local_style[236077]:iostyle[231932] "dead at end of block" "insert auto destroy"
      ref call_tmp[715815]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2195679]:_ref(file)[948923] "temp"
      (2195683 'move' rvfRerefTmp[2195679](2195680 'set reference' this[1882186]))
      (715818 'move' call_tmp[715815](396518 call _file_internal[887164] rvfRerefTmp[2195679]))
      const-val coerce_tmp[1017760]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017764 'move' coerce_tmp[1017760](1017762 'deref' call_tmp[715815]))
      (236085 call qio_file_get_style[232909] coerce_tmp[1017760] local_style[236077])
      (236089 call =[879278] ret[1882188] local_style[236077])
    }
    label _endon_fn[1884484]
    (935802 return _void[55])
  }
  function on_fn[935804](const in arg this[1882190]:file[235668], ref arg err[1882192]:_ref(syserr)[949021]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[715868]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2195700]:_ref(file)[948923] "temp"
      (2195704 'move' rvfRerefTmp[2195700](2195701 'set reference' this[1882190]))
      (715871 'move' call_tmp[715868](396537 call _file_internal[887164] rvfRerefTmp[2195700]))
      const-val call_tmp[715873]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1061022]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1061026 'move' coerce_tmp[1061022](1061024 'deref' call_tmp[715868]))
      (715876 'move' call_tmp[715873](236153 call qio_file_close[232836] coerce_tmp[1061022]))
      (236154 call =[224200] err[1882192] call_tmp[715873])
    }
    (935811 return _void[55])
  }
  function on_fn[935822](const in arg this[1882194]:file[235668], ref arg err[1882196]:_ref(syserr)[949021], ref arg ret[1882198]:_ref(string)[938128], ref arg error_out[1884514]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1884518]:Error[167984] "error variable" "temp"
        (1884527 'move' error[1884518] nil[44])
        ref rvfRerefTmp[2195728]:_ref(file)[948923] "temp"
        (2195732 'move' rvfRerefTmp[2195728](2195729 'set reference' this[1882194]))
        (236329 call checkAssumingLocal[235856] rvfRerefTmp[2195728] error[1884518])
        val errorExists[2222280]:bool[10] "temp"
        (2222285 'move' errorExists[2222280](2222282 '!=' error[1884518] nil[44]))
        if errorExists[2222280]
        {
          gotoErrorHandling handler[1884519] handler[1884519]
        }
        label handler[1884519]
        const-val shouldHandleError[1884538]:bool[10] "temp"
        val errorExists[2222288]:bool[10] "temp"
        (2222293 'move' errorExists[2222288](2222290 '!=' error[1884518] nil[44]))
        (1884542 'move' shouldHandleError[1884538] errorExists[2222288])
        if shouldHandleError[1884538]
        {
          (1884534 '=' error_out[1884514] error[1884518])
          gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
        }
      }
      val tmp[236335]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021656 'move' tmp[236335](1021654 'cast' c_string[19] nil[44]))
      val tmp2[236340]:c_string[19] "dead at end of block" "insert auto destroy"
      (1021661 'move' tmp2[236340](1021659 'cast' c_string[19] nil[44]))
      ref call_tmp[715954]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2195714]:_ref(file)[948923] "temp"
      (2195718 'move' rvfRerefTmp[2195714](2195715 'set reference' this[1882194]))
      (715957 'move' call_tmp[715954](396561 call _file_internal[887164] rvfRerefTmp[2195714]))
      const-val call_tmp[715959]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019308]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019312 'move' coerce_tmp[1019308](1019310 'deref' call_tmp[715954]))
      (715962 'move' call_tmp[715959](236349 call qio_file_path[233767] coerce_tmp[1019308] tmp[236335]))
      (236350 call =[224200] err[1882196] call_tmp[715959])
      const-val call_tmp[715964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1882984]:syserr[223672] "temp"
      (1882987 'move' tmp[1882984](1882985 'deref' err[1882196]))
      (715967 'move' call_tmp[715964](236354 call ![224046] tmp[1882984]))
      const-val call_tmp[715969]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715972 'move' call_tmp[715969] call_tmp[715964])
      if call_tmp[715969]
      {
        ref call_tmp[715976]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2195721]:_ref(file)[948923] "temp"
        (2195725 'move' rvfRerefTmp[2195721](2195722 'set reference' this[1882194]))
        (715979 'move' call_tmp[715976](396569 call _file_internal[887164] rvfRerefTmp[2195721]))
        const-val call_tmp[715981]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1019321]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1019325 'move' coerce_tmp[1019321](1019323 'deref' call_tmp[715976]))
        (715984 'move' call_tmp[715981](236362 call qio_shortest_path[233783] coerce_tmp[1019321] tmp2[236340] tmp[236335]))
        (236363 call =[224200] err[1882196] call_tmp[715981])
      }
      (236374 call chpl_free_c_string[22709] tmp[236335])
      const-val call_tmp[715986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1882990]:syserr[223672] "temp"
      (1882993 'move' tmp[1882990](1882991 'deref' err[1882196]))
      (715989 'move' call_tmp[715986](236377 call ![224046] tmp[1882990]))
      const-val call_tmp[715991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (715994 'move' call_tmp[715991] call_tmp[715986])
      if call_tmp[715991]
      {
        const-val call_tmp[715996]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1019347]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1884547]:Error[167984] "error variable" "temp"
        (1884549 'move' error[1884547] nil[44])
        (1019352 'move' default_arg_length[1019347](1019349 call createStringWithNewBuffer_default_length[964235] tmp2[236340] error[1884547]))
        val errorExists[2222296]:bool[10] "temp"
        (2222301 'move' errorExists[2222296](2222298 '!=' error[1884547] nil[44]))
        if errorExists[2222296]
        {
          (1884553 '=' error_out[1884514] error[1884547])
          gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
        }
        val error[1884562]:Error[167984] "error variable" "temp"
        (1884564 'move' error[1884562] nil[44])
        const-val ret_tmp[1904808]:string[26] "temp"
        (236388 call createStringWithNewBuffer[30413] tmp2[236340] default_arg_length[1019347] escape[173698] error[1884562] ret_tmp[1904808])
        (1904811 'move' call_tmp[715996] ret_tmp[1904808])
        val errorExists[2222304]:bool[10] "temp"
        (2222309 'move' errorExists[2222304](2222306 '!=' error[1884562] nil[44]))
        if errorExists[2222304]
        {
          (1884568 '=' error_out[1884514] error[1884562])
          gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
        }
        (236389 call =[38272] ret[1882198] call_tmp[715996])
        (1919993 call chpl__autoDestroy[1601673] call_tmp[715996])
      }
      (236400 call chpl_free_c_string[22709] tmp2[236340])
    }
    label _endon_fn[1884516]
    (935829 return _void[55])
  }
  function on_fn[1016884](const in arg this[1882206]:file[235668], ref arg ret[1882208]:_ref(channel(false,dynamic,true))[985825], const in arg hints[1882210]:int(32)[95], ref arg err[1882212]:_ref(syserr)[949021], const in arg start[1882214]:int(64)[13], const in arg end[1882216]:int(64)[13], const in arg style[1882218]:iostyle[231932], ref arg error_out[1884685]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1884689]:Error[167984] "error variable" "temp"
        (1884698 'move' error[1884689] nil[44])
        ref rvfRerefTmp[2195749]:_ref(file)[948923] "temp"
        (2195753 'move' rvfRerefTmp[2195749](2195750 'set reference' this[1882206]))
        (1016895 call checkAssumingLocal[235856] rvfRerefTmp[2195749] error[1884689])
        val errorExists[2222360]:bool[10] "temp"
        (2222365 'move' errorExists[2222360](2222362 '!=' error[1884689] nil[44]))
        if errorExists[2222360]
        {
          gotoErrorHandling handler[1884690] handler[1884690]
        }
        label handler[1884690]
        const-val shouldHandleError[1884709]:bool[10] "temp"
        val errorExists[2222368]:bool[10] "temp"
        (2222373 'move' errorExists[2222368](2222370 '!=' error[1884689] nil[44]))
        (1884713 'move' shouldHandleError[1884709] errorExists[2222368])
        if shouldHandleError[1884709]
        {
          (1884705 '=' error_out[1884685] error[1884689])
          gotoErrorHandlingReturn _endon_fn[1884687] _endon_fn[1884687]
        }
      }
      const-val call_tmp[1016897]:channel(false,dynamic,true)[985816] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1017820]:channel(false,dynamic,true)[985816] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1018619]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1882996]:iostyle[231932] "temp"
      (1882999 'move' tmp[1882996] style[1882218])
      ref rvfRerefTmp[2195742]:_ref(file)[948923] "temp"
      (2195746 'move' rvfRerefTmp[2195742](2195743 'set reference' this[1882206]))
      (1017823 call init[1017836] initTemp[1017820] rvfRerefTmp[2195742] _formal_tmp_out_error[1018619] hints[1882210] start[1882214] end[1882216] tmp[1882996])
      (1018621 call =[224200] err[1882212] _formal_tmp_out_error[1018619])
      (1016899 'move' call_tmp[1016897] initTemp[1017820])
      (1016913 call =[1018628] ret[1882208] call_tmp[1016897])
      (1920159 call chpl__autoDestroy[1611302] call_tmp[1016897])
    }
    label _endon_fn[1884687]
    (1016919 return _void[55])
  }
  function on_fn[1017914](const in arg start[1882220]:int(64)[13], const in arg f[1882222]:file[235668], ref arg _formal_tmp_error[1882224]:_ref(syserr)[949021], ref arg this[1882226]:_ref(channel(false,dynamic,true))[985825], const in arg hints[1882228]:int(32)[95], const in arg local_style[1882230]:iostyle[231932], const in arg end[1882232]:int(64)[13]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1017920]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1017922 'move' call_tmp[1017920](1017925 call home[1018213] this[1882226]))
      ref call_tmp[1017928]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195771]:_ref(file)[948923] "temp"
      (2195775 'move' rvfRerefTmp[2195771](2195772 'set reference' f[1882222]))
      (1017930 'move' call_tmp[1017928](1017933 call home[887138] rvfRerefTmp[2195771]))
      (1017937 call =[90634] call_tmp[1017920] call_tmp[1017928])
      ref call_tmp[1017999]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1018001 'move' call_tmp[1017999](1018004 call _channel_internal[1018555] this[1882226]))
      ref call_tmp[1018007]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195778]:_ref(file)[948923] "temp"
      (2195782 'move' rvfRerefTmp[2195778](2195779 'set reference' f[1882222]))
      (1018009 'move' call_tmp[1018007](1018012 call _file_internal[887164] rvfRerefTmp[2195778]))
      const-val call_tmp[1018022]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1018588]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018592 'move' coerce_tmp[1018588](1018590 'deref' call_tmp[1018007]))
      const-val coerce_tmp[1018594]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018600 'move' coerce_tmp[1018594](1018596 'cast' int(32)[95] 1))
      const-val coerce_tmp[1018602]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1018608 'move' coerce_tmp[1018602](1018604 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2195791]:_ref(iostyle)[967739] "temp"
      (2195795 'move' rvfRerefTmp[2195791](2195792 'set reference' local_style[1882230]))
      (1018024 'move' call_tmp[1018022](1018027 call qio_channel_create[232966] call_tmp[1017999] coerce_tmp[1018588] hints[1882228] coerce_tmp[1018594] coerce_tmp[1018602] start[1882220] end[1882232] rvfRerefTmp[2195791]))
      (1018037 call =[224200] _formal_tmp_error[1882224] call_tmp[1018022])
    }
    (1018040 return _void[55])
  }
  function on_fn[1018854](const in arg rhs[1882234]:channel(false,dynamic,true)[985816]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018860]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195805]:_ref(channel(false,dynamic,true))[985825] "temp"
      (2195809 'move' rvfRerefTmp[2195805](2195806 'set reference' rhs[1882234]))
      (1018862 'move' call_tmp[1018860](1018865 call _channel_internal[1018555] rvfRerefTmp[2195805]))
      const-val coerce_tmp[1019244]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019248 'move' coerce_tmp[1019244](1019246 'deref' call_tmp[1018860]))
      (1018869 call qio_channel_retain[233039] coerce_tmp[1019244])
    }
    (1018871 return _void[55])
  }
  function on_fn[1018898](const  ref arg lhs[1882236]:_ref(channel(false,dynamic,true))[985825]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1018904]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1018906 'move' call_tmp[1018904](1018909 call _channel_internal[1018555] lhs[1882236]))
      const-val coerce_tmp[1019263]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019267 'move' coerce_tmp[1019263](1019265 'deref' call_tmp[1018904]))
      (1018913 call qio_channel_release[233049] coerce_tmp[1019263])
    }
    (1018915 return _void[55])
  }
  function on_fn[1022459](ref arg ret[1882242]:_ref(channel(true,dynamic,true))[1022023], const in arg hints[1882244]:int(32)[95], const in arg start[1882246]:int(64)[13], ref arg err[1882248]:_ref(syserr)[949021], const in arg end[1882250]:int(64)[13], const in arg style[1882252]:iostyle[231932], const in arg this[1882254]:file[235668], ref arg error_out[1884801]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1884805]:Error[167984] "error variable" "temp"
        (1884814 'move' error[1884805] nil[44])
        ref rvfRerefTmp[2195834]:_ref(file)[948923] "temp"
        (2195838 'move' rvfRerefTmp[2195834](2195835 'set reference' this[1882254]))
        (1022470 call checkAssumingLocal[235856] rvfRerefTmp[2195834] error[1884805])
        val errorExists[2222408]:bool[10] "temp"
        (2222413 'move' errorExists[2222408](2222410 '!=' error[1884805] nil[44]))
        if errorExists[2222408]
        {
          gotoErrorHandling handler[1884806] handler[1884806]
        }
        label handler[1884806]
        const-val shouldHandleError[1884825]:bool[10] "temp"
        val errorExists[2222416]:bool[10] "temp"
        (2222421 'move' errorExists[2222416](2222418 '!=' error[1884805] nil[44]))
        (1884829 'move' shouldHandleError[1884825] errorExists[2222416])
        if shouldHandleError[1884825]
        {
          (1884821 '=' error_out[1884801] error[1884805])
          gotoErrorHandlingReturn _endon_fn[1884803] _endon_fn[1884803]
        }
      }
      const-val call_tmp[1022472]:channel(true,dynamic,true)[1022014] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1022856]:channel(true,dynamic,true)[1022014] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1023327]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1883002]:iostyle[231932] "temp"
      (1883005 'move' tmp[1883002] style[1882252])
      ref rvfRerefTmp[2195827]:_ref(file)[948923] "temp"
      (2195831 'move' rvfRerefTmp[2195827](2195828 'set reference' this[1882254]))
      (1022859 call init[1022872] initTemp[1022856] rvfRerefTmp[2195827] _formal_tmp_out_error[1023327] hints[1882244] start[1882246] end[1882250] tmp[1883002])
      (1023329 call =[224200] err[1882248] _formal_tmp_out_error[1023327])
      (1022474 'move' call_tmp[1022472] initTemp[1022856])
      (1022488 call =[1023336] ret[1882242] call_tmp[1022472])
      (1920182 call chpl__autoDestroy[1674281] call_tmp[1022472])
    }
    label _endon_fn[1884803]
    (1022494 return _void[55])
  }
  function on_fn[1022950](ref arg this[1882256]:_ref(channel(true,dynamic,true))[1022023], const in arg hints[1882258]:int(32)[95], const in arg local_style[1882260]:iostyle[231932], const in arg start[1882262]:int(64)[13], const in arg f[1882264]:file[235668], ref arg _formal_tmp_error[1882266]:_ref(syserr)[949021], const in arg end[1882268]:int(64)[13]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1022956]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1022958 'move' call_tmp[1022956](1022961 call home[1023231] this[1882256]))
      ref call_tmp[1022964]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195861]:_ref(file)[948923] "temp"
      (2195865 'move' rvfRerefTmp[2195861](2195862 'set reference' f[1882264]))
      (1022966 'move' call_tmp[1022964](1022969 call home[887138] rvfRerefTmp[2195861]))
      (1022973 call =[90634] call_tmp[1022956] call_tmp[1022964])
      ref call_tmp[1023035]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1023037 'move' call_tmp[1023035](1023040 call _channel_internal[1023265] this[1882256]))
      ref call_tmp[1023043]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195868]:_ref(file)[948923] "temp"
      (2195872 'move' rvfRerefTmp[2195868](2195869 'set reference' f[1882264]))
      (1023045 'move' call_tmp[1023043](1023048 call _file_internal[887164] rvfRerefTmp[2195868]))
      const-val call_tmp[1023058]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1023296]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023300 'move' coerce_tmp[1023296](1023298 'deref' call_tmp[1023043]))
      const-val coerce_tmp[1023302]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023308 'move' coerce_tmp[1023302](1023304 'cast' int(32)[95] 0))
      const-val coerce_tmp[1023310]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023316 'move' coerce_tmp[1023310](1023312 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2195847]:_ref(iostyle)[967739] "temp"
      (2195851 'move' rvfRerefTmp[2195847](2195848 'set reference' local_style[1882260]))
      (1023060 'move' call_tmp[1023058](1023063 call qio_channel_create[232966] call_tmp[1023035] coerce_tmp[1023296] hints[1882258] coerce_tmp[1023302] coerce_tmp[1023310] start[1882262] end[1882268] rvfRerefTmp[2195847]))
      (1023073 call =[224200] _formal_tmp_error[1882266] call_tmp[1023058])
    }
    (1023076 return _void[55])
  }
  function on_fn[1023562](const in arg rhs[1882270]:channel(true,dynamic,true)[1022014]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023568]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195882]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2195886 'move' rvfRerefTmp[2195882](2195883 'set reference' rhs[1882270]))
      (1023570 'move' call_tmp[1023568](1023573 call _channel_internal[1023265] rvfRerefTmp[2195882]))
      const-val coerce_tmp[1023952]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023956 'move' coerce_tmp[1023952](1023954 'deref' call_tmp[1023568]))
      (1023577 call qio_channel_retain[233039] coerce_tmp[1023952])
    }
    (1023579 return _void[55])
  }
  function on_fn[1023606](const  ref arg lhs[1882272]:_ref(channel(true,dynamic,true))[1022023]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1023612]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1023614 'move' call_tmp[1023612](1023617 call _channel_internal[1023265] lhs[1882272]))
      const-val coerce_tmp[1023971]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1023975 'move' coerce_tmp[1023971](1023973 'deref' call_tmp[1023612]))
      (1023621 call qio_channel_release[233049] coerce_tmp[1023971])
    }
    (1023623 return _void[55])
  }
  function on_fn[1061211](const in arg style[1882286]:iostyle[231932], const in arg this[1882288]:file[235668], ref arg err[1882290]:_ref(syserr)[949021], const in arg hints[1882292]:int(32)[95], const in arg start[1882294]:int(64)[13], ref arg ret[1882296]:_ref(channel(true,dynamic,false))[1061145], const in arg end[1882298]:int(64)[13], ref arg error_out[1885232]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1885236]:Error[167984] "error variable" "temp"
        (1885245 'move' error[1885236] nil[44])
        ref rvfRerefTmp[2195942]:_ref(file)[948923] "temp"
        (2195946 'move' rvfRerefTmp[2195942](2195943 'set reference' this[1882288]))
        (1061222 call checkAssumingLocal[235856] rvfRerefTmp[2195942] error[1885236])
        val errorExists[2222632]:bool[10] "temp"
        (2222637 'move' errorExists[2222632](2222634 '!=' error[1885236] nil[44]))
        if errorExists[2222632]
        {
          gotoErrorHandling handler[1885237] handler[1885237]
        }
        label handler[1885237]
        const-val shouldHandleError[1885256]:bool[10] "temp"
        val errorExists[2222640]:bool[10] "temp"
        (2222645 'move' errorExists[2222640](2222642 '!=' error[1885236] nil[44]))
        (1885260 'move' shouldHandleError[1885256] errorExists[2222640])
        if shouldHandleError[1885256]
        {
          (1885252 '=' error_out[1885232] error[1885236])
          gotoErrorHandlingReturn _endon_fn[1885234] _endon_fn[1885234]
        }
      }
      const-val call_tmp[1061224]:channel(true,dynamic,false)[1061136] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1061569]:channel(true,dynamic,false)[1061136] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1062040]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1883008]:iostyle[231932] "temp"
      (1883011 'move' tmp[1883008] style[1882286])
      ref rvfRerefTmp[2195935]:_ref(file)[948923] "temp"
      (2195939 'move' rvfRerefTmp[2195935](2195936 'set reference' this[1882288]))
      (1061572 call init[1061585] initTemp[1061569] rvfRerefTmp[2195935] _formal_tmp_out_error[1062040] hints[1882292] start[1882294] end[1882298] tmp[1883008])
      (1062042 call =[224200] err[1882290] _formal_tmp_out_error[1062040])
      (1061226 'move' call_tmp[1061224] initTemp[1061569])
      (1061240 call =[1062049] ret[1882296] call_tmp[1061224])
      (1921407 call chpl__autoDestroy[1676445] call_tmp[1061224])
    }
    label _endon_fn[1885234]
    (1061246 return _void[55])
  }
  function on_fn[1061663](const in arg local_style[1882300]:iostyle[231932], ref arg this[1882302]:_ref(channel(true,dynamic,false))[1061145], const in arg start[1882304]:int(64)[13], const in arg f[1882306]:file[235668], ref arg _formal_tmp_error[1882308]:_ref(syserr)[949021], const in arg end[1882310]:int(64)[13], const in arg hints[1882312]:int(32)[95]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1061669]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1061671 'move' call_tmp[1061669](1061674 call home[1061944] this[1882302]))
      ref call_tmp[1061677]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195969]:_ref(file)[948923] "temp"
      (2195973 'move' rvfRerefTmp[2195969](2195970 'set reference' f[1882306]))
      (1061679 'move' call_tmp[1061677](1061682 call home[887138] rvfRerefTmp[2195969]))
      (1061686 call =[90634] call_tmp[1061669] call_tmp[1061677])
      ref call_tmp[1061748]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1061750 'move' call_tmp[1061748](1061753 call _channel_internal[1061978] this[1882302]))
      ref call_tmp[1061756]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195976]:_ref(file)[948923] "temp"
      (2195980 'move' rvfRerefTmp[2195976](2195977 'set reference' f[1882306]))
      (1061758 'move' call_tmp[1061756](1061761 call _file_internal[887164] rvfRerefTmp[2195976]))
      const-val call_tmp[1061771]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062009]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062013 'move' coerce_tmp[1062009](1062011 'deref' call_tmp[1061756]))
      const-val coerce_tmp[1062015]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062021 'move' coerce_tmp[1062015](1062017 'cast' int(32)[95] 0))
      const-val coerce_tmp[1062023]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062029 'move' coerce_tmp[1062023](1062025 'cast' int(32)[95] 1))
      ref rvfRerefTmp[2195955]:_ref(iostyle)[967739] "temp"
      (2195959 'move' rvfRerefTmp[2195955](2195956 'set reference' local_style[1882300]))
      (1061773 'move' call_tmp[1061771](1061776 call qio_channel_create[232966] call_tmp[1061748] coerce_tmp[1062009] hints[1882312] coerce_tmp[1062015] coerce_tmp[1062023] start[1882304] end[1882310] rvfRerefTmp[2195955]))
      (1061786 call =[224200] _formal_tmp_error[1882308] call_tmp[1061771])
    }
    (1061789 return _void[55])
  }
  function on_fn[1062275](const in arg rhs[1882314]:channel(true,dynamic,false)[1061136]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062281]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2195990]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2195994 'move' rvfRerefTmp[2195990](2195991 'set reference' rhs[1882314]))
      (1062283 'move' call_tmp[1062281](1062286 call _channel_internal[1061978] rvfRerefTmp[2195990]))
      const-val coerce_tmp[1062474]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062478 'move' coerce_tmp[1062474](1062476 'deref' call_tmp[1062281]))
      (1062290 call qio_channel_retain[233039] coerce_tmp[1062474])
    }
    (1062292 return _void[55])
  }
  function on_fn[1062319](const  ref arg lhs[1882316]:_ref(channel(true,dynamic,false))[1061145]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062325]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1062327 'move' call_tmp[1062325](1062330 call _channel_internal[1061978] lhs[1882316]))
      const-val coerce_tmp[1062493]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062497 'move' coerce_tmp[1062493](1062495 'deref' call_tmp[1062325]))
      (1062334 call qio_channel_release[233049] coerce_tmp[1062493])
    }
    (1062336 return _void[55])
  }
  function on_fn[1062644](const in arg this[1882318]:channel(true,dynamic,false)[1061136], ref arg err[1882320]:_ref(syserr)[949021]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1062658]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196004]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196008 'move' rvfRerefTmp[2196004](2196005 'set reference' this[1882318]))
      (1062660 'move' call_tmp[1062658](1062663 call _channel_internal[1061978] rvfRerefTmp[2196004]))
      const-val call_tmp[1062666]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1063037]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063043 'move' coerce_tmp[1063037](1063039 'cast' int(32)[95] 0))
      const-val coerce_tmp[1063045]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063049 'move' coerce_tmp[1063045](1063047 'deref' call_tmp[1062658]))
      (1062668 'move' call_tmp[1062666](1062671 call qio_channel_close[233228] coerce_tmp[1063037] coerce_tmp[1063045]))
      (1062675 call =[224200] err[1882320] call_tmp[1062666])
    }
    (1062680 return _void[55])
  }
  function on_fn[1063121](const  ref arg this[1882322]:_ref(channel(true,dynamic,false))[1061145], ref arg path[1882324]:_ref(string)[938128], ref arg offset[1882326]:_ref(int(64))[936761], ref arg error_out[1885387]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1063127]:c_string[19] "dead at end of block" "insert auto destroy"
      (1063329 'move' tmp_path[1063127](1063327 'cast' c_string[19] nil[44]))
      val tmp_offset[1063133]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1063135]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1063332 'move' tmp_offset[1063133] 0)
      const-val call_tmp[1063146]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1063148 'move' call_tmp[1063146](1063151 call ENOERR[223742]))
      val err[1063152]:syserr[223672] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1063274]:syserr[223672] "dead at end of block" "initialized later" "temp"
      (1063320 call =[224221] init_coerce_tmp[1063274] call_tmp[1063146])
      (1063154 'move' err[1063152] init_coerce_tmp[1063274])
      ref call_tmp[1063167]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1063169 'move' call_tmp[1063167](1063172 call _channel_internal[1061978] this[1882322]))
      const-val call_tmp[1063175]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1063284]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063290 'move' coerce_tmp[1063284](1063286 'cast' int(32)[95] 0))
      const-val coerce_tmp[1063292]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1063296 'move' coerce_tmp[1063292](1063294 'deref' call_tmp[1063167]))
      (1063177 'move' call_tmp[1063175](1063180 call qio_channel_path_offset[233012] coerce_tmp[1063284] coerce_tmp[1063292] tmp_path[1063127] tmp_offset[1063133]))
      (1063186 call =[224200] err[1063152] call_tmp[1063175])
      const-val call_tmp[1063193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063195 'move' call_tmp[1063193](1063198 call ![224046] err[1063152]))
      const-val call_tmp[1063200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1063202 'move' call_tmp[1063200] call_tmp[1063193])
      if call_tmp[1063200]
      {
        const-val call_tmp[1063209]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1063305]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1885392]:Error[167984] "error variable" "temp"
        (1885394 'move' error[1885392] nil[44])
        (1063310 'move' default_arg_length[1063305](1063307 call createStringWithNewBuffer_default_length[964235] tmp_path[1063127] error[1885392]))
        val errorExists[2222696]:bool[10] "temp"
        (2222701 'move' errorExists[2222696](2222698 '!=' error[1885392] nil[44]))
        if errorExists[2222696]
        {
          (1885398 '=' error_out[1885387] error[1885392])
          gotoErrorHandlingReturn _endon_fn[1885389] _endon_fn[1885389]
        }
        val error[1885407]:Error[167984] "error variable" "temp"
        (1885409 'move' error[1885407] nil[44])
        const-val ret_tmp[1904838]:string[26] "temp"
        (1063214 call createStringWithNewBuffer[30413] tmp_path[1063127] default_arg_length[1063305] replace[173694] error[1885407] ret_tmp[1904838])
        (1904841 'move' call_tmp[1063209] ret_tmp[1904838])
        val errorExists[2222704]:bool[10] "temp"
        (2222709 'move' errorExists[2222704](2222706 '!=' error[1885407] nil[44]))
        if errorExists[2222704]
        {
          (1885413 '=' error_out[1885387] error[1885407])
          gotoErrorHandlingReturn _endon_fn[1885389] _endon_fn[1885389]
        }
        (1063219 call =[38272] path[1882324] call_tmp[1063209])
        (1921422 call chpl__autoDestroy[1601673] call_tmp[1063209])
        (1063226 call chpl_free_c_string[22709] tmp_path[1063127])
        (1063231 call =[435443] offset[1882326] tmp_offset[1063133])
      }
    }
    label _endon_fn[1885389]
    (1063238 return _void[55])
  }
  function on_fn[1066278](const in arg this[1882328]:channel(true,dynamic,false)[1061136], const  ref arg args[1882330]:_ref(1*byteIndex)[1057320], const in arg origLocale[1882332]:locale[28], ref arg error_out[1885472]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1885476]:Error[167984] "error variable" "temp"
        (1885485 'move' error[1885476] nil[44])
        ref rvfRerefTmp[2196018]:_ref(channel(true,dynamic,false))[1061145] "temp"
        (2196022 'move' rvfRerefTmp[2196018](2196019 'set reference' this[1882328]))
        (1066289 call lock[1066617] rvfRerefTmp[2196018] error[1885476])
        val errorExists[2222728]:bool[10] "temp"
        (2222733 'move' errorExists[2222728](2222730 '!=' error[1885476] nil[44]))
        if errorExists[2222728]
        {
          gotoErrorHandling handler[1885477] handler[1885477]
        }
        label handler[1885477]
        const-val shouldHandleError[1885496]:bool[10] "temp"
        val errorExists[2222736]:bool[10] "temp"
        (2222741 'move' errorExists[2222736](2222738 '!=' error[1885476] nil[44]))
        (1885500 'move' shouldHandleError[1885496] errorExists[2222736])
        if shouldHandleError[1885496]
        {
          (1885492 '=' error_out[1885472] error[1885476])
          gotoErrorHandlingReturn _endon_fn[1885474] _endon_fn[1885474]
        }
      }
      {
        const-val i[1066299]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1066301 'move' i[1066299] 0)
        {
          {
            {
              val error[1885504]:Error[167984] "error variable" "temp"
              (1885513 'move' error[1885504] nil[44])
              ref call_tmp[1067122]:_ref(byteIndex)[948948] "dead after last mention" "maybe param" "temp"
              (1067124 'move' call_tmp[1067122](1067198 '.v' args[1882330] x0[1057268]))
              ref rvfRerefTmp[2196025]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196029 'move' rvfRerefTmp[2196025](2196026 'set reference' this[1882328]))
              val rvfRerefTmp[2196052]:locale[28] "temp"
              (2196055 'move' rvfRerefTmp[2196052] origLocale[1882332])
              (1067133 call _writeOne[1067201] rvfRerefTmp[2196025] call_tmp[1067122] rvfRerefTmp[2196052] error[1885504])
              val errorExists[2222744]:bool[10] "temp"
              (2222749 'move' errorExists[2222744](2222746 '!=' error[1885504] nil[44]))
              if errorExists[2222744]
              {
                gotoErrorHandling handler[1885505] handler[1885505]
              }
              label handler[1885505]
              const-val shouldHandleError[1885524]:bool[10] "temp"
              val errorExists[2222752]:bool[10] "temp"
              (2222757 'move' errorExists[2222752](2222754 '!=' error[1885504] nil[44]))
              (1885528 'move' shouldHandleError[1885524] errorExists[2222752])
              if shouldHandleError[1885524]
              {
                (1885520 '=' error_out[1885472] error[1885504])
                ref rvfRerefTmp[2196032]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196036 'move' rvfRerefTmp[2196032](2196033 'set reference' this[1882328]))
                (1921443 call unlock[1067014] rvfRerefTmp[2196032])
                gotoErrorHandlingReturn _endon_fn[1885474] _endon_fn[1885474]
              }
            }
          }
        }
        label _continueLabel0[1067109]
        label _unused_continueLabel[1066377]
        label _breakLabel[1066379]
      }
      ref rvfRerefTmp[2196039]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196043 'move' rvfRerefTmp[2196039](2196040 'set reference' this[1882328]))
      (1921448 call unlock[1067014] rvfRerefTmp[2196039])
    }
    label _endon_fn[1885474]
    (1066381 return _void[55])
  }
  function on_fn[1069057](const  ref arg this[1882334]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1882336]:int(64)[13], const in arg origLocale[1882338]:locale[28], ref arg error_out[1885756]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1885760]:Error[167984] "error variable" "temp"
        (1885769 'move' error[1885760] nil[44])
        (1069068 call lock[1066617] this[1882334] error[1885760])
        val errorExists[2222864]:bool[10] "temp"
        (2222869 'move' errorExists[2222864](2222866 '!=' error[1885760] nil[44]))
        if errorExists[2222864]
        {
          gotoErrorHandling handler[1885761] handler[1885761]
        }
        label handler[1885761]
        const-val shouldHandleError[1885778]:bool[10] "temp"
        val errorExists[2222872]:bool[10] "temp"
        (2222877 'move' errorExists[2222872](2222874 '!=' error[1885760] nil[44]))
        (1885782 'move' shouldHandleError[1885778] errorExists[2222872])
        if shouldHandleError[1885778]
        {
          (1885775 call chpl_uncaught_error[170289] error[1885760])
        }
      }
      {
        val error[1885786]:Error[167984] "error variable" "temp"
        (1885795 'move' error[1885786] nil[44])
        val rvfRerefTmp[2196064]:locale[28] "temp"
        (2196067 'move' rvfRerefTmp[2196064] origLocale[1882338])
        (1069090 call _writeOne[1069126] this[1882334] x[1882336] rvfRerefTmp[2196064] error[1885786])
        val errorExists[2222880]:bool[10] "temp"
        (2222885 'move' errorExists[2222880](2222882 '!=' error[1885786] nil[44]))
        if errorExists[2222880]
        {
          gotoErrorHandling handler[1885787] handler[1885787]
        }
        label handler[1885787]
        const-val shouldHandleError[1885806]:bool[10] "temp"
        val errorExists[2222888]:bool[10] "temp"
        (2222893 'move' errorExists[2222888](2222890 '!=' error[1885786] nil[44]))
        (1885810 'move' shouldHandleError[1885806] errorExists[2222888])
        if shouldHandleError[1885806]
        {
          (1885802 '=' error_out[1885756] error[1885786])
          (1921513 call unlock[1067014] this[1882334])
          gotoErrorHandlingReturn _endon_fn[1885758] _endon_fn[1885758]
        }
      }
      (1921518 call unlock[1067014] this[1882334])
    }
    label _endon_fn[1885758]
    (1069097 return _void[55])
  }
  function on_fn[1080394](const in arg this[1882340]:channel(true,dynamic,false)[1061136], ref arg ret[1882342]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    {
      {
        val error[1885957]:Error[167984] "error variable" "temp"
        (1885966 'move' error[1885957] nil[44])
        ref rvfRerefTmp[2196091]:_ref(channel(true,dynamic,false))[1061145] "temp"
        (2196095 'move' rvfRerefTmp[2196091](2196092 'set reference' this[1882340]))
        (1080405 call lock[1066617] rvfRerefTmp[2196091] error[1885957])
        val errorExists[2222952]:bool[10] "temp"
        (2222957 'move' errorExists[2222952](2222954 '!=' error[1885957] nil[44]))
        if errorExists[2222952]
        {
          gotoErrorHandling handler[1885958] handler[1885958]
        }
        label handler[1885958]
        const-val shouldHandleError[1885975]:bool[10] "temp"
        val errorExists[2222960]:bool[10] "temp"
        (2222965 'move' errorExists[2222960](2222962 '!=' error[1885957] nil[44]))
        (1885979 'move' shouldHandleError[1885975] errorExists[2222960])
        if shouldHandleError[1885975]
        {
          (1885972 call chpl_uncaught_error[170289] error[1885957])
        }
      }
      ref call_tmp[1080407]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196077]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196081 'move' rvfRerefTmp[2196077](2196078 'set reference' this[1882340]))
      (1080409 'move' call_tmp[1080407](1080412 call _channel_internal[1061978] rvfRerefTmp[2196077]))
      const-val call_tmp[1080415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1080474]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1080478 'move' coerce_tmp[1080474](1080476 'deref' call_tmp[1080407]))
      (1080417 'move' call_tmp[1080415](1080420 call qio_channel_offset_unlocked[233470] coerce_tmp[1080474]))
      (1080423 call =[435443] ret[1882342] call_tmp[1080415])
      ref rvfRerefTmp[2196084]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196088 'move' rvfRerefTmp[2196084](2196085 'set reference' this[1882340]))
      (1080432 call unlock[1067014] rvfRerefTmp[2196084])
    }
    (1080433 return _void[55])
  }
  function on_fn[1080946](const in arg style[1882344]:iostyle[231932], const in arg end[1882346]:int(64)[13], const in arg this[1882348]:file[235668], ref arg err[1882350]:_ref(syserr)[949021], const in arg hints[1882352]:int(32)[95], const in arg start[1882354]:int(64)[13], ref arg ret[1882356]:_ref(channel(false,dynamic,false))[1080880], ref arg error_out[1886028]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1886032]:Error[167984] "error variable" "temp"
        (1886041 'move' error[1886032] nil[44])
        ref rvfRerefTmp[2196120]:_ref(file)[948923] "temp"
        (2196124 'move' rvfRerefTmp[2196120](2196121 'set reference' this[1882348]))
        (1080957 call checkAssumingLocal[235856] rvfRerefTmp[2196120] error[1886032])
        val errorExists[2222992]:bool[10] "temp"
        (2222997 'move' errorExists[2222992](2222994 '!=' error[1886032] nil[44]))
        if errorExists[2222992]
        {
          gotoErrorHandling handler[1886033] handler[1886033]
        }
        label handler[1886033]
        const-val shouldHandleError[1886052]:bool[10] "temp"
        val errorExists[2223000]:bool[10] "temp"
        (2223005 'move' errorExists[2223000](2223002 '!=' error[1886032] nil[44]))
        (1886056 'move' shouldHandleError[1886052] errorExists[2223000])
        if shouldHandleError[1886052]
        {
          (1886048 '=' error_out[1886028] error[1886032])
          gotoErrorHandlingReturn _endon_fn[1886030] _endon_fn[1886030]
        }
      }
      const-val call_tmp[1080959]:channel(false,dynamic,false)[1080871] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1081301]:channel(false,dynamic,false)[1080871] "dead after last mention" "delay instantiation" "temp"
      val _formal_tmp_out_error[1081772]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      const-val tmp[1883014]:iostyle[231932] "temp"
      (1883017 'move' tmp[1883014] style[1882344])
      ref rvfRerefTmp[2196113]:_ref(file)[948923] "temp"
      (2196117 'move' rvfRerefTmp[2196113](2196114 'set reference' this[1882348]))
      (1081304 call init[1081317] initTemp[1081301] rvfRerefTmp[2196113] _formal_tmp_out_error[1081772] hints[1882352] start[1882354] end[1882346] tmp[1883014])
      (1081774 call =[224200] err[1882350] _formal_tmp_out_error[1081772])
      (1080961 'move' call_tmp[1080959] initTemp[1081301])
      (1080975 call =[1081781] ret[1882356] call_tmp[1080959])
      (1921568 call chpl__autoDestroy[1680699] call_tmp[1080959])
    }
    label _endon_fn[1886030]
    (1080981 return _void[55])
  }
  function on_fn[1081395](const in arg start[1882358]:int(64)[13], const in arg f[1882360]:file[235668], ref arg _formal_tmp_error[1882362]:_ref(syserr)[949021], const in arg end[1882364]:int(64)[13], const in arg hints[1882366]:int(32)[95], const in arg local_style[1882368]:iostyle[231932], ref arg this[1882370]:_ref(channel(false,dynamic,false))[1080880]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1081401]:_ref(locale)[949033] "dead after last mention" "maybe param" "temp"
      (1081403 'move' call_tmp[1081401](1081406 call home[1081676] this[1882370]))
      ref call_tmp[1081409]:_ref(locale)[949033] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2196134]:_ref(file)[948923] "temp"
      (2196138 'move' rvfRerefTmp[2196134](2196135 'set reference' f[1882360]))
      (1081411 'move' call_tmp[1081409](1081414 call home[887138] rvfRerefTmp[2196134]))
      (1081418 call =[90634] call_tmp[1081401] call_tmp[1081409])
      ref call_tmp[1081480]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1081482 'move' call_tmp[1081480](1081485 call _channel_internal[1081710] this[1882370]))
      ref call_tmp[1081488]:_ref(qio_file_ptr_t)[937062] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2196141]:_ref(file)[948923] "temp"
      (2196145 'move' rvfRerefTmp[2196141](2196142 'set reference' f[1882360]))
      (1081490 'move' call_tmp[1081488](1081493 call _file_internal[887164] rvfRerefTmp[2196141]))
      const-val call_tmp[1081503]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1081741]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081745 'move' coerce_tmp[1081741](1081743 'deref' call_tmp[1081488]))
      const-val coerce_tmp[1081747]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081753 'move' coerce_tmp[1081747](1081749 'cast' int(32)[95] 1))
      const-val coerce_tmp[1081755]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1081761 'move' coerce_tmp[1081755](1081757 'cast' int(32)[95] 0))
      ref rvfRerefTmp[2196154]:_ref(iostyle)[967739] "temp"
      (2196158 'move' rvfRerefTmp[2196154](2196155 'set reference' local_style[1882368]))
      (1081505 'move' call_tmp[1081503](1081508 call qio_channel_create[232966] call_tmp[1081480] coerce_tmp[1081741] hints[1882366] coerce_tmp[1081747] coerce_tmp[1081755] start[1882358] end[1882364] rvfRerefTmp[2196154]))
      (1081518 call =[224200] _formal_tmp_error[1882362] call_tmp[1081503])
    }
    (1081521 return _void[55])
  }
  function on_fn[1082007](const in arg rhs[1882372]:channel(false,dynamic,false)[1080871]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082013]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "reference to a const" "temp"
      ref rvfRerefTmp[2196168]:_ref(channel(false,dynamic,false))[1080880] "temp"
      (2196172 'move' rvfRerefTmp[2196168](2196169 'set reference' rhs[1882372]))
      (1082015 'move' call_tmp[1082013](1082018 call _channel_internal[1081710] rvfRerefTmp[2196168]))
      const-val coerce_tmp[1082206]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082210 'move' coerce_tmp[1082206](1082208 'deref' call_tmp[1082013]))
      (1082022 call qio_channel_retain[233039] coerce_tmp[1082206])
    }
    (1082024 return _void[55])
  }
  function on_fn[1082051](const  ref arg lhs[1882374]:_ref(channel(false,dynamic,false))[1080880]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082057]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1082059 'move' call_tmp[1082057](1082062 call _channel_internal[1081710] lhs[1882374]))
      const-val coerce_tmp[1082225]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082229 'move' coerce_tmp[1082225](1082227 'deref' call_tmp[1082057]))
      (1082066 call qio_channel_release[233049] coerce_tmp[1082225])
    }
    (1082068 return _void[55])
  }
  function on_fn[1082376](const in arg this[1882376]:channel(false,dynamic,false)[1080871], ref arg err[1882378]:_ref(syserr)[949021]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1082390]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196182]:_ref(channel(false,dynamic,false))[1080880] "temp"
      (2196186 'move' rvfRerefTmp[2196182](2196183 'set reference' this[1882376]))
      (1082392 'move' call_tmp[1082390](1082395 call _channel_internal[1081710] rvfRerefTmp[2196182]))
      const-val call_tmp[1082398]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082721]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082727 'move' coerce_tmp[1082721](1082723 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082729]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082733 'move' coerce_tmp[1082729](1082731 'deref' call_tmp[1082390]))
      (1082400 'move' call_tmp[1082398](1082403 call qio_channel_close[233228] coerce_tmp[1082721] coerce_tmp[1082729]))
      (1082407 call =[224200] err[1882378] call_tmp[1082398])
    }
    (1082412 return _void[55])
  }
  function on_fn[1082805](const in arg this[1882380]:channel(false,dynamic,false)[1080871], ref arg path[1882382]:_ref(string)[938128], ref arg offset[1882384]:_ref(int(64))[936761], ref arg error_out[1886183]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1082811]:c_string[19] "dead at end of block" "insert auto destroy"
      (1083012 'move' tmp_path[1082811](1083010 'cast' c_string[19] nil[44]))
      val tmp_offset[1082817]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1082819]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1083015 'move' tmp_offset[1082817] 0)
      const-val call_tmp[1082830]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1082832 'move' call_tmp[1082830](1082835 call ENOERR[223742]))
      val err[1082836]:syserr[223672] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1082958]:syserr[223672] "dead at end of block" "initialized later" "temp"
      (1083003 call =[224221] init_coerce_tmp[1082958] call_tmp[1082830])
      (1082838 'move' err[1082836] init_coerce_tmp[1082958])
      ref call_tmp[1082851]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196196]:_ref(channel(false,dynamic,false))[1080880] "temp"
      (2196200 'move' rvfRerefTmp[2196196](2196197 'set reference' this[1882380]))
      (1082853 'move' call_tmp[1082851](1082856 call _channel_internal[1081710] rvfRerefTmp[2196196]))
      const-val call_tmp[1082859]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082967]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082973 'move' coerce_tmp[1082967](1082969 'cast' int(32)[95] 0))
      const-val coerce_tmp[1082975]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082979 'move' coerce_tmp[1082975](1082977 'deref' call_tmp[1082851]))
      (1082861 'move' call_tmp[1082859](1082864 call qio_channel_path_offset[233012] coerce_tmp[1082967] coerce_tmp[1082975] tmp_path[1082811] tmp_offset[1082817]))
      (1082870 call =[224200] err[1082836] call_tmp[1082859])
      const-val call_tmp[1082877]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082879 'move' call_tmp[1082877](1082882 call ![224046] err[1082836]))
      const-val call_tmp[1082884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1082886 'move' call_tmp[1082884] call_tmp[1082877])
      if call_tmp[1082884]
      {
        const-val call_tmp[1082893]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1082988]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1886188]:Error[167984] "error variable" "temp"
        (1886190 'move' error[1886188] nil[44])
        (1082993 'move' default_arg_length[1082988](1082990 call createStringWithNewBuffer_default_length[964235] tmp_path[1082811] error[1886188]))
        val errorExists[2223056]:bool[10] "temp"
        (2223061 'move' errorExists[2223056](2223058 '!=' error[1886188] nil[44]))
        if errorExists[2223056]
        {
          (1886194 '=' error_out[1886183] error[1886188])
          gotoErrorHandlingReturn _endon_fn[1886185] _endon_fn[1886185]
        }
        val error[1886203]:Error[167984] "error variable" "temp"
        (1886205 'move' error[1886203] nil[44])
        const-val ret_tmp[1904844]:string[26] "temp"
        (1082898 call createStringWithNewBuffer[30413] tmp_path[1082811] default_arg_length[1082988] replace[173694] error[1886203] ret_tmp[1904844])
        (1904847 'move' call_tmp[1082893] ret_tmp[1904844])
        val errorExists[2223064]:bool[10] "temp"
        (2223069 'move' errorExists[2223064](2223066 '!=' error[1886203] nil[44]))
        if errorExists[2223064]
        {
          (1886209 '=' error_out[1886183] error[1886203])
          gotoErrorHandlingReturn _endon_fn[1886185] _endon_fn[1886185]
        }
        (1082903 call =[38272] path[1882382] call_tmp[1082893])
        (1921583 call chpl__autoDestroy[1601673] call_tmp[1082893])
        (1082910 call chpl_free_c_string[22709] tmp_path[1082811])
        (1082915 call =[435443] offset[1882384] tmp_offset[1082817])
      }
    }
    label _endon_fn[1886185]
    (1082922 return _void[55])
  }
  function on_fn[1165096](const in arg this[1882412]:channel(true,dynamic,false)[1061136], const  ref arg args[1882414]:_ref((string,codepointIndex,string))[1158801], const in arg origLocale[1882416]:locale[28], ref arg error_out[1886496]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1886500]:Error[167984] "error variable" "temp"
        (1886509 'move' error[1886500] nil[44])
        ref rvfRerefTmp[2196241]:_ref(channel(true,dynamic,false))[1061145] "temp"
        (2196245 'move' rvfRerefTmp[2196241](2196242 'set reference' this[1882412]))
        (1165107 call lock[1066617] rvfRerefTmp[2196241] error[1886500])
        val errorExists[2223224]:bool[10] "temp"
        (2223229 'move' errorExists[2223224](2223226 '!=' error[1886500] nil[44]))
        if errorExists[2223224]
        {
          gotoErrorHandling handler[1886501] handler[1886501]
        }
        label handler[1886501]
        const-val shouldHandleError[1886520]:bool[10] "temp"
        val errorExists[2223232]:bool[10] "temp"
        (2223237 'move' errorExists[2223232](2223234 '!=' error[1886500] nil[44]))
        (1886524 'move' shouldHandleError[1886520] errorExists[2223232])
        if shouldHandleError[1886520]
        {
          (1886516 '=' error_out[1886496] error[1886500])
          gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
        }
      }
      {
        const-val i[1165117]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1165119 'move' i[1165117] 0)
        {
          {
            {
              val error[1886528]:Error[167984] "error variable" "temp"
              (1886537 'move' error[1886528] nil[44])
              ref call_tmp[1165259]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1165261 'move' call_tmp[1165259](1165346 '.v' args[1882414] x0[1158738]))
              ref rvfRerefTmp[2196248]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196252 'move' rvfRerefTmp[2196248](2196249 'set reference' this[1882412]))
              val rvfRerefTmp[2196303]:locale[28] "temp"
              (2196306 'move' rvfRerefTmp[2196303] origLocale[1882416])
              (1165270 call _writeOne[1165349] rvfRerefTmp[2196248] call_tmp[1165259] rvfRerefTmp[2196303] error[1886528])
              val errorExists[2223240]:bool[10] "temp"
              (2223245 'move' errorExists[2223240](2223242 '!=' error[1886528] nil[44]))
              if errorExists[2223240]
              {
                gotoErrorHandling handler[1886529] handler[1886529]
              }
              label handler[1886529]
              const-val shouldHandleError[1886548]:bool[10] "temp"
              val errorExists[2223248]:bool[10] "temp"
              (2223253 'move' errorExists[2223248](2223250 '!=' error[1886528] nil[44]))
              (1886552 'move' shouldHandleError[1886548] errorExists[2223248])
              if shouldHandleError[1886548]
              {
                (1886544 '=' error_out[1886496] error[1886528])
                ref rvfRerefTmp[2196269]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196273 'move' rvfRerefTmp[2196269](2196270 'set reference' this[1882412]))
                (1923207 call unlock[1067014] rvfRerefTmp[2196269])
                gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
              }
            }
          }
        }
        label _continueLabel0[1165246]
        {
          {
            {
              val error[1886556]:Error[167984] "error variable" "temp"
              (1886565 'move' error[1886556] nil[44])
              ref call_tmp[1165291]:_ref(codepointIndex)[948958] "dead after last mention" "maybe param" "temp"
              (1165293 'move' call_tmp[1165291](1174099 '.v' args[1882414] x1[1158740]))
              ref rvfRerefTmp[2196255]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196259 'move' rvfRerefTmp[2196255](2196256 'set reference' this[1882412]))
              val rvfRerefTmp[2196309]:locale[28] "temp"
              (2196312 'move' rvfRerefTmp[2196309] origLocale[1882416])
              (1165302 call _writeOne[1174102] rvfRerefTmp[2196255] call_tmp[1165291] rvfRerefTmp[2196309] error[1886556])
              val errorExists[2223256]:bool[10] "temp"
              (2223261 'move' errorExists[2223256](2223258 '!=' error[1886556] nil[44]))
              if errorExists[2223256]
              {
                gotoErrorHandling handler[1886557] handler[1886557]
              }
              label handler[1886557]
              const-val shouldHandleError[1886576]:bool[10] "temp"
              val errorExists[2223264]:bool[10] "temp"
              (2223269 'move' errorExists[2223264](2223266 '!=' error[1886556] nil[44]))
              (1886580 'move' shouldHandleError[1886576] errorExists[2223264])
              if shouldHandleError[1886576]
              {
                (1886572 '=' error_out[1886496] error[1886556])
                ref rvfRerefTmp[2196276]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196280 'move' rvfRerefTmp[2196276](2196277 'set reference' this[1882412]))
                (1923211 call unlock[1067014] rvfRerefTmp[2196276])
                gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
              }
            }
          }
        }
        label _continueLabel1[1165278]
        {
          {
            {
              val error[1886584]:Error[167984] "error variable" "temp"
              (1886593 'move' error[1886584] nil[44])
              ref call_tmp[1165323]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1165325 'move' call_tmp[1165323](1175833 '.v' args[1882414] x2[1158742]))
              ref rvfRerefTmp[2196262]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196266 'move' rvfRerefTmp[2196262](2196263 'set reference' this[1882412]))
              val rvfRerefTmp[2196315]:locale[28] "temp"
              (2196318 'move' rvfRerefTmp[2196315] origLocale[1882416])
              (1165334 call _writeOne[1165349] rvfRerefTmp[2196262] call_tmp[1165323] rvfRerefTmp[2196315] error[1886584])
              val errorExists[2223272]:bool[10] "temp"
              (2223277 'move' errorExists[2223272](2223274 '!=' error[1886584] nil[44]))
              if errorExists[2223272]
              {
                gotoErrorHandling handler[1886585] handler[1886585]
              }
              label handler[1886585]
              const-val shouldHandleError[1886604]:bool[10] "temp"
              val errorExists[2223280]:bool[10] "temp"
              (2223285 'move' errorExists[2223280](2223282 '!=' error[1886584] nil[44]))
              (1886608 'move' shouldHandleError[1886604] errorExists[2223280])
              if shouldHandleError[1886604]
              {
                (1886600 '=' error_out[1886496] error[1886584])
                ref rvfRerefTmp[2196283]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196287 'move' rvfRerefTmp[2196283](2196284 'set reference' this[1882412]))
                (1923215 call unlock[1067014] rvfRerefTmp[2196283])
                gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
              }
            }
          }
        }
        label _continueLabel2[1165310]
        label _unused_continueLabel[1165195]
        label _breakLabel[1165197]
      }
      ref rvfRerefTmp[2196290]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196294 'move' rvfRerefTmp[2196290](2196291 'set reference' this[1882412]))
      (1923220 call unlock[1067014] rvfRerefTmp[2196290])
    }
    label _endon_fn[1886498]
    (1165199 return _void[55])
  }
  function on_fn[1180575](const in arg this[1882418]:channel(true,dynamic,false)[1061136], const  ref arg args[1882420]:_ref((string,codepointIndex,string,int(64)))[1176781], const in arg origLocale[1882422]:locale[28], ref arg error_out[1886993]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1886997]:Error[167984] "error variable" "temp"
        (1887006 'move' error[1886997] nil[44])
        ref rvfRerefTmp[2196328]:_ref(channel(true,dynamic,false))[1061145] "temp"
        (2196332 'move' rvfRerefTmp[2196328](2196329 'set reference' this[1882418]))
        (1180586 call lock[1066617] rvfRerefTmp[2196328] error[1886997])
        val errorExists[2223504]:bool[10] "temp"
        (2223509 'move' errorExists[2223504](2223506 '!=' error[1886997] nil[44]))
        if errorExists[2223504]
        {
          gotoErrorHandling handler[1886998] handler[1886998]
        }
        label handler[1886998]
        const-val shouldHandleError[1887017]:bool[10] "temp"
        val errorExists[2223512]:bool[10] "temp"
        (2223517 'move' errorExists[2223512](2223514 '!=' error[1886997] nil[44]))
        (1887021 'move' shouldHandleError[1887017] errorExists[2223512])
        if shouldHandleError[1887017]
        {
          (1887013 '=' error_out[1886993] error[1886997])
          gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
        }
      }
      {
        const-val i[1180596]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1180598 'move' i[1180596] 0)
        {
          {
            {
              val error[1887025]:Error[167984] "error variable" "temp"
              (1887034 'move' error[1887025] nil[44])
              ref call_tmp[1180744]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1180746 'move' call_tmp[1180744](1180863 '.v' args[1882420] x0[1176701]))
              ref rvfRerefTmp[2196335]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196339 'move' rvfRerefTmp[2196335](2196336 'set reference' this[1882418]))
              val rvfRerefTmp[2196404]:locale[28] "temp"
              (2196407 'move' rvfRerefTmp[2196404] origLocale[1882422])
              (1180755 call _writeOne[1165349] rvfRerefTmp[2196335] call_tmp[1180744] rvfRerefTmp[2196404] error[1887025])
              val errorExists[2223520]:bool[10] "temp"
              (2223525 'move' errorExists[2223520](2223522 '!=' error[1887025] nil[44]))
              if errorExists[2223520]
              {
                gotoErrorHandling handler[1887026] handler[1887026]
              }
              label handler[1887026]
              const-val shouldHandleError[1887045]:bool[10] "temp"
              val errorExists[2223528]:bool[10] "temp"
              (2223533 'move' errorExists[2223528](2223530 '!=' error[1887025] nil[44]))
              (1887049 'move' shouldHandleError[1887045] errorExists[2223528])
              if shouldHandleError[1887045]
              {
                (1887041 '=' error_out[1886993] error[1887025])
                ref rvfRerefTmp[2196363]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196367 'move' rvfRerefTmp[2196363](2196364 'set reference' this[1882418]))
                (1924270 call unlock[1067014] rvfRerefTmp[2196363])
                gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
              }
            }
          }
        }
        label _continueLabel0[1180731]
        {
          {
            {
              val error[1887053]:Error[167984] "error variable" "temp"
              (1887062 'move' error[1887053] nil[44])
              ref call_tmp[1180776]:_ref(codepointIndex)[948958] "dead after last mention" "maybe param" "temp"
              (1180778 'move' call_tmp[1180776](1180871 '.v' args[1882420] x1[1176703]))
              ref rvfRerefTmp[2196342]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196346 'move' rvfRerefTmp[2196342](2196343 'set reference' this[1882418]))
              val rvfRerefTmp[2196410]:locale[28] "temp"
              (2196413 'move' rvfRerefTmp[2196410] origLocale[1882422])
              (1180787 call _writeOne[1174102] rvfRerefTmp[2196342] call_tmp[1180776] rvfRerefTmp[2196410] error[1887053])
              val errorExists[2223536]:bool[10] "temp"
              (2223541 'move' errorExists[2223536](2223538 '!=' error[1887053] nil[44]))
              if errorExists[2223536]
              {
                gotoErrorHandling handler[1887054] handler[1887054]
              }
              label handler[1887054]
              const-val shouldHandleError[1887073]:bool[10] "temp"
              val errorExists[2223544]:bool[10] "temp"
              (2223549 'move' errorExists[2223544](2223546 '!=' error[1887053] nil[44]))
              (1887077 'move' shouldHandleError[1887073] errorExists[2223544])
              if shouldHandleError[1887073]
              {
                (1887069 '=' error_out[1886993] error[1887053])
                ref rvfRerefTmp[2196370]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196374 'move' rvfRerefTmp[2196370](2196371 'set reference' this[1882418]))
                (1924274 call unlock[1067014] rvfRerefTmp[2196370])
                gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
              }
            }
          }
        }
        label _continueLabel1[1180763]
        {
          {
            {
              val error[1887081]:Error[167984] "error variable" "temp"
              (1887090 'move' error[1887081] nil[44])
              ref call_tmp[1180808]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1180810 'move' call_tmp[1180808](1180879 '.v' args[1882420] x2[1176705]))
              ref rvfRerefTmp[2196349]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196353 'move' rvfRerefTmp[2196349](2196350 'set reference' this[1882418]))
              val rvfRerefTmp[2196416]:locale[28] "temp"
              (2196419 'move' rvfRerefTmp[2196416] origLocale[1882422])
              (1180819 call _writeOne[1165349] rvfRerefTmp[2196349] call_tmp[1180808] rvfRerefTmp[2196416] error[1887081])
              val errorExists[2223552]:bool[10] "temp"
              (2223557 'move' errorExists[2223552](2223554 '!=' error[1887081] nil[44]))
              if errorExists[2223552]
              {
                gotoErrorHandling handler[1887082] handler[1887082]
              }
              label handler[1887082]
              const-val shouldHandleError[1887101]:bool[10] "temp"
              val errorExists[2223560]:bool[10] "temp"
              (2223565 'move' errorExists[2223560](2223562 '!=' error[1887081] nil[44]))
              (1887105 'move' shouldHandleError[1887101] errorExists[2223560])
              if shouldHandleError[1887101]
              {
                (1887097 '=' error_out[1886993] error[1887081])
                ref rvfRerefTmp[2196377]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196381 'move' rvfRerefTmp[2196377](2196378 'set reference' this[1882418]))
                (1924278 call unlock[1067014] rvfRerefTmp[2196377])
                gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
              }
            }
          }
        }
        label _continueLabel2[1180795]
        {
          {
            {
              val error[1887109]:Error[167984] "error variable" "temp"
              (1887118 'move' error[1887109] nil[44])
              ref call_tmp[1180840]:_ref(int(64))[936761] "dead after last mention" "maybe param" "temp"
              (1180842 'move' call_tmp[1180840](1180887 '.' args[1882420] x3[1176707]))
              const-val coerce_tmp[1180890]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1180894 'move' coerce_tmp[1180890](1180892 'deref' call_tmp[1180840]))
              ref rvfRerefTmp[2196356]:_ref(channel(true,dynamic,false))[1061145] "temp"
              (2196360 'move' rvfRerefTmp[2196356](2196357 'set reference' this[1882418]))
              val rvfRerefTmp[2196422]:locale[28] "temp"
              (2196425 'move' rvfRerefTmp[2196422] origLocale[1882422])
              (1180851 call _writeOne[1069126] rvfRerefTmp[2196356] coerce_tmp[1180890] rvfRerefTmp[2196422] error[1887109])
              val errorExists[2223568]:bool[10] "temp"
              (2223573 'move' errorExists[2223568](2223570 '!=' error[1887109] nil[44]))
              if errorExists[2223568]
              {
                gotoErrorHandling handler[1887110] handler[1887110]
              }
              label handler[1887110]
              const-val shouldHandleError[1887129]:bool[10] "temp"
              val errorExists[2223576]:bool[10] "temp"
              (2223581 'move' errorExists[2223576](2223578 '!=' error[1887109] nil[44]))
              (1887133 'move' shouldHandleError[1887129] errorExists[2223576])
              if shouldHandleError[1887129]
              {
                (1887125 '=' error_out[1886993] error[1887109])
                ref rvfRerefTmp[2196384]:_ref(channel(true,dynamic,false))[1061145] "temp"
                (2196388 'move' rvfRerefTmp[2196384](2196385 'set reference' this[1882418]))
                (1924282 call unlock[1067014] rvfRerefTmp[2196384])
                gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
              }
            }
          }
        }
        label _continueLabel3[1180827]
        label _unused_continueLabel[1180674]
        label _breakLabel[1180676]
      }
      ref rvfRerefTmp[2196391]:_ref(channel(true,dynamic,false))[1061145] "temp"
      (2196395 'move' rvfRerefTmp[2196391](2196392 'set reference' this[1882418]))
      (1924287 call unlock[1067014] rvfRerefTmp[2196391])
    }
    label _endon_fn[1886995]
    (1180678 return _void[55])
  }
  function on_fn[1552156](const in arg this[1882706]:channel(true,dynamic,true)[1022014], const  ref arg args[1882708]:_ref(([domain(1,int(64),false)] real(64),ioNewline))[1552330], const in arg origLocale[1882710]:locale[28], ref arg error_out[1887921]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1887925]:Error[167984] "error variable" "temp"
        (1887934 'move' error[1887925] nil[44])
        ref rvfRerefTmp[2196680]:_ref(channel(true,dynamic,true))[1022023] "temp"
        (2196684 'move' rvfRerefTmp[2196680](2196681 'set reference' this[1882706]))
        (1552167 call lock[1552488] rvfRerefTmp[2196680] error[1887925])
        val errorExists[2223952]:bool[10] "temp"
        (2223957 'move' errorExists[2223952](2223954 '!=' error[1887925] nil[44]))
        if errorExists[2223952]
        {
          gotoErrorHandling handler[1887926] handler[1887926]
        }
        label handler[1887926]
        const-val shouldHandleError[1887945]:bool[10] "temp"
        val errorExists[2223960]:bool[10] "temp"
        (2223965 'move' errorExists[2223960](2223962 '!=' error[1887925] nil[44]))
        (1887949 'move' shouldHandleError[1887945] errorExists[2223960])
        if shouldHandleError[1887945]
        {
          (1887941 '=' error_out[1887921] error[1887925])
          gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
        }
      }
      {
        const-val i[1552177]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1552179 'move' i[1552177] 0)
        {
          {
            {
              val error[1887953]:Error[167984] "error variable" "temp"
              (1887962 'move' error[1887953] nil[44])
              const-val call_tmp[1553364]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "maybe param" "temp"
              (1553366 'move' call_tmp[1553364](1553472 '.v' args[1882708] x0[1552277]))
              ref rvfRerefTmp[2196687]:_ref(channel(true,dynamic,true))[1022023] "temp"
              (2196691 'move' rvfRerefTmp[2196687](2196688 'set reference' this[1882706]))
              val rvfRerefTmp[2196728]:locale[28] "temp"
              (2196731 'move' rvfRerefTmp[2196728] origLocale[1882710])
              (1553375 call _writeOne[1553475] rvfRerefTmp[2196687] call_tmp[1553364] rvfRerefTmp[2196728] error[1887953])
              val errorExists[2223968]:bool[10] "temp"
              (2223973 'move' errorExists[2223968](2223970 '!=' error[1887953] nil[44]))
              if errorExists[2223968]
              {
                gotoErrorHandling handler[1887954] handler[1887954]
              }
              label handler[1887954]
              const-val shouldHandleError[1887973]:bool[10] "temp"
              val errorExists[2223976]:bool[10] "temp"
              (2223981 'move' errorExists[2223976](2223978 '!=' error[1887953] nil[44]))
              (1887977 'move' shouldHandleError[1887973] errorExists[2223976])
              if shouldHandleError[1887973]
              {
                (1887969 '=' error_out[1887921] error[1887953])
                ref rvfRerefTmp[2196701]:_ref(channel(true,dynamic,true))[1022023] "temp"
                (2196705 'move' rvfRerefTmp[2196701](2196702 'set reference' this[1882706]))
                (1927206 call unlock[1553237] rvfRerefTmp[2196701])
                gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
              }
            }
          }
        }
        label _continueLabel0[1553351]
        {
          {
            {
              val error[1887981]:Error[167984] "error variable" "temp"
              (1887990 'move' error[1887981] nil[44])
              ref call_tmp[1553396]:_ref(ioNewline)[967769] "dead after last mention" "maybe param" "temp"
              (1553398 'move' call_tmp[1553396](1586282 '.v' args[1882708] x1[1552279]))
              ref rvfRerefTmp[2196694]:_ref(channel(true,dynamic,true))[1022023] "temp"
              (2196698 'move' rvfRerefTmp[2196694](2196695 'set reference' this[1882706]))
              val rvfRerefTmp[2196734]:locale[28] "temp"
              (2196737 'move' rvfRerefTmp[2196734] origLocale[1882710])
              (1553407 call _writeOne[1586285] rvfRerefTmp[2196694] call_tmp[1553396] rvfRerefTmp[2196734] error[1887981])
              val errorExists[2223984]:bool[10] "temp"
              (2223989 'move' errorExists[2223984](2223986 '!=' error[1887981] nil[44]))
              if errorExists[2223984]
              {
                gotoErrorHandling handler[1887982] handler[1887982]
              }
              label handler[1887982]
              const-val shouldHandleError[1888001]:bool[10] "temp"
              val errorExists[2223992]:bool[10] "temp"
              (2223997 'move' errorExists[2223992](2223994 '!=' error[1887981] nil[44]))
              (1888005 'move' shouldHandleError[1888001] errorExists[2223992])
              if shouldHandleError[1888001]
              {
                (1887997 '=' error_out[1887921] error[1887981])
                ref rvfRerefTmp[2196708]:_ref(channel(true,dynamic,true))[1022023] "temp"
                (2196712 'move' rvfRerefTmp[2196708](2196709 'set reference' this[1882706]))
                (1927210 call unlock[1553237] rvfRerefTmp[2196708])
                gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
              }
            }
          }
        }
        label _continueLabel1[1553383]
        label _unused_continueLabel[1552255]
        label _breakLabel[1552257]
      }
      ref rvfRerefTmp[2196715]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2196719 'move' rvfRerefTmp[2196715](2196716 'set reference' this[1882706]))
      (1927215 call unlock[1553237] rvfRerefTmp[2196715])
    }
    label _endon_fn[1887923]
    (1552259 return _void[55])
  }
  function on_fn[1552598](const in arg this[1882712]:channel(true,dynamic,true)[1022014], ref arg err[1882714]:_ref(syserr)[949021]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1552604]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196747]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2196751 'move' rvfRerefTmp[2196747](2196748 'set reference' this[1882712]))
      (1552606 'move' call_tmp[1552604](1552609 call _channel_internal[1023265] rvfRerefTmp[2196747]))
      const-val call_tmp[1552612]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1552939]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552943 'move' coerce_tmp[1552939](1552941 'deref' call_tmp[1552604]))
      (1552614 'move' call_tmp[1552612](1552617 call qio_channel_lock[233095] coerce_tmp[1552939]))
      (1552620 call =[224200] err[1882714] call_tmp[1552612])
    }
    (1552625 return _void[55])
  }
  function on_fn[1553015](const in arg this[1882716]:channel(true,dynamic,true)[1022014], ref arg path[1882718]:_ref(string)[938128], ref arg offset[1882720]:_ref(int(64))[936761], ref arg error_out[1888101]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      val tmp_path[1553021]:c_string[19] "dead at end of block" "insert auto destroy"
      (1553222 'move' tmp_path[1553021](1553220 'cast' c_string[19] nil[44]))
      val tmp_offset[1553027]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[1553029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1553225 'move' tmp_offset[1553027] 0)
      const-val call_tmp[1553040]:int(32)[95] "dead at end of block" "insert auto destroy" "maybe param" "temp"
      (1553042 'move' call_tmp[1553040](1553045 call ENOERR[223742]))
      val err[1553046]:syserr[223672] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1553168]:syserr[223672] "dead at end of block" "initialized later" "temp"
      (1553213 call =[224221] init_coerce_tmp[1553168] call_tmp[1553040])
      (1553048 'move' err[1553046] init_coerce_tmp[1553168])
      ref call_tmp[1553061]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196761]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2196765 'move' rvfRerefTmp[2196761](2196762 'set reference' this[1882716]))
      (1553063 'move' call_tmp[1553061](1553066 call _channel_internal[1023265] rvfRerefTmp[2196761]))
      const-val call_tmp[1553069]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1553177]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1553183 'move' coerce_tmp[1553177](1553179 'cast' int(32)[95] 1))
      const-val coerce_tmp[1553185]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1553189 'move' coerce_tmp[1553185](1553187 'deref' call_tmp[1553061]))
      (1553071 'move' call_tmp[1553069](1553074 call qio_channel_path_offset[233012] coerce_tmp[1553177] coerce_tmp[1553185] tmp_path[1553021] tmp_offset[1553027]))
      (1553080 call =[224200] err[1553046] call_tmp[1553069])
      const-val call_tmp[1553087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1553089 'move' call_tmp[1553087](1553092 call ![224046] err[1553046]))
      const-val call_tmp[1553094]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1553096 'move' call_tmp[1553094] call_tmp[1553087])
      if call_tmp[1553094]
      {
        const-val call_tmp[1553103]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val default_arg_length[1553198]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        val error[1888106]:Error[167984] "error variable" "temp"
        (1888108 'move' error[1888106] nil[44])
        (1553203 'move' default_arg_length[1553198](1553200 call createStringWithNewBuffer_default_length[964235] tmp_path[1553021] error[1888106]))
        val errorExists[2224040]:bool[10] "temp"
        (2224045 'move' errorExists[2224040](2224042 '!=' error[1888106] nil[44]))
        if errorExists[2224040]
        {
          (1888112 '=' error_out[1888101] error[1888106])
          gotoErrorHandlingReturn _endon_fn[1888103] _endon_fn[1888103]
        }
        val error[1888121]:Error[167984] "error variable" "temp"
        (1888123 'move' error[1888121] nil[44])
        const-val ret_tmp[1904868]:string[26] "temp"
        (1553108 call createStringWithNewBuffer[30413] tmp_path[1553021] default_arg_length[1553198] replace[173694] error[1888121] ret_tmp[1904868])
        (1904871 'move' call_tmp[1553103] ret_tmp[1904868])
        val errorExists[2224048]:bool[10] "temp"
        (2224053 'move' errorExists[2224048](2224050 '!=' error[1888121] nil[44]))
        if errorExists[2224048]
        {
          (1888127 '=' error_out[1888101] error[1888121])
          gotoErrorHandlingReturn _endon_fn[1888103] _endon_fn[1888103]
        }
        (1553113 call =[38272] path[1882718] call_tmp[1553103])
        (1927230 call chpl__autoDestroy[1601673] call_tmp[1553103])
        (1553120 call chpl_free_c_string[22709] tmp_path[1553021])
        (1553125 call =[435443] offset[1882720] tmp_offset[1553027])
      }
    }
    label _endon_fn[1888103]
    (1553132 return _void[55])
  }
  function on_fn[1553289](const in arg this[1882722]:channel(true,dynamic,true)[1022014]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1553295]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      ref rvfRerefTmp[2196775]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2196779 'move' rvfRerefTmp[2196775](2196776 'set reference' this[1882722]))
      (1553297 'move' call_tmp[1553295](1553300 call _channel_internal[1023265] rvfRerefTmp[2196775]))
      const-val coerce_tmp[1553330]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1553334 'move' coerce_tmp[1553330](1553332 'deref' call_tmp[1553295]))
      (1553304 call qio_channel_unlock[233107] coerce_tmp[1553330])
    }
    (1553306 return _void[55])
  }
  function on_fn[1559293](const  ref arg this[1882732]:_ref(channel(true,dynamic,false))[1061145], const in arg element[1882734]:int(64)[13], ref arg ret[1882736]:_ref(int(64))[936761]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1559299]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1559301 'move' call_tmp[1559299](1559304 call _channel_internal[1061978] this[1882732]))
      const-val call_tmp[1559307]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1559353]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1559357 'move' coerce_tmp[1559353](1559355 'deref' call_tmp[1559299]))
      (1559309 'move' call_tmp[1559307](1559312 call qio_channel_style_element[233190] coerce_tmp[1559353] element[1882734]))
      (1559316 call =[435443] ret[1882736] call_tmp[1559307])
    }
    (1559321 return _void[55])
  }
  function on_fn[1559671](const  ref arg this[1882738]:_ref(channel(true,dynamic,false))[1061145], ref arg ret[1882740]:_ref(uint(8))[937097]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1559677]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1559679 'move' call_tmp[1559677](1559682 call _channel_internal[1061978] this[1882738]))
      const-val call_tmp[1559685]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1559738]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1559742 'move' coerce_tmp[1559738](1559740 'deref' call_tmp[1559677]))
      (1559687 'move' call_tmp[1559685](1559690 call qio_channel_binary[233145] coerce_tmp[1559738]))
      (1559693 call =[435464] ret[1882740] call_tmp[1559685])
    }
    (1559698 return _void[55])
  }
  function on_fn[1565038](const  ref arg this[1882742]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1882744]:_ddata(real(64))[1358105], const in arg len[1882746]:int(64)[13], ref arg err[1882748]:_ref(syserr)[949021], ref arg error_out[1888643]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1888647]:Error[167984] "error variable" "temp"
        (1888656 'move' error[1888647] nil[44])
        (1565049 call lock[1066617] this[1882742] error[1888647])
        val errorExists[2224248]:bool[10] "temp"
        (2224253 'move' errorExists[2224248](2224250 '!=' error[1888647] nil[44]))
        if errorExists[2224248]
        {
          gotoErrorHandling handler[1888648] handler[1888648]
        }
        label handler[1888648]
        const-val shouldHandleError[1888667]:bool[10] "temp"
        val errorExists[2224256]:bool[10] "temp"
        (2224261 'move' errorExists[2224256](2224258 '!=' error[1888647] nil[44]))
        (1888671 'move' shouldHandleError[1888667] errorExists[2224256])
        if shouldHandleError[1888667]
        {
          (1888663 '=' error_out[1888643] error[1888647])
          gotoErrorHandlingReturn _endon_fn[1888645] _endon_fn[1888645]
        }
      }
      ref call_tmp[1565058]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1565060 'move' call_tmp[1565058](1565063 call _channel_internal[1061978] this[1882742]))
      const-val call_tmp[1565066]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1565183]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1565189 'move' coerce_tmp[1565183](1565185 'cast' int(32)[95] 0))
      const-val coerce_tmp[1565191]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1565195 'move' coerce_tmp[1565191](1565193 'deref' call_tmp[1565058]))
      (1565068 'move' call_tmp[1565066](1565071 call qio_channel_write_amt[1565157] coerce_tmp[1565183] coerce_tmp[1565191] x[1882744] len[1882746]))
      (1565077 call =[224200] err[1882748] call_tmp[1565066])
      (1927541 call unlock[1067014] this[1882742])
    }
    label _endon_fn[1888645]
    (1565082 return _void[55])
  }
  function on_fn[1565680](const  ref arg this[1882750]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1882752]:ioLiteral[238841], const in arg origLocale[1882754]:locale[28], ref arg error_out[1888758]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1888762]:Error[167984] "error variable" "temp"
        (1888771 'move' error[1888762] nil[44])
        (1565691 call lock[1066617] this[1882750] error[1888762])
        val errorExists[2224304]:bool[10] "temp"
        (2224309 'move' errorExists[2224304](2224306 '!=' error[1888762] nil[44]))
        if errorExists[2224304]
        {
          gotoErrorHandling handler[1888763] handler[1888763]
        }
        label handler[1888763]
        const-val shouldHandleError[1888780]:bool[10] "temp"
        val errorExists[2224312]:bool[10] "temp"
        (2224317 'move' errorExists[2224312](2224314 '!=' error[1888762] nil[44]))
        (1888784 'move' shouldHandleError[1888780] errorExists[2224312])
        if shouldHandleError[1888780]
        {
          (1888777 call chpl_uncaught_error[170289] error[1888762])
        }
      }
      {
        val error[1888788]:Error[167984] "error variable" "temp"
        (1888797 'move' error[1888788] nil[44])
        ref rvfRerefTmp[2196789]:_ref(ioLiteral)[967779] "temp"
        (2196793 'move' rvfRerefTmp[2196789](2196790 'set reference' x[1882752]))
        val rvfRerefTmp[2196802]:locale[28] "temp"
        (2196805 'move' rvfRerefTmp[2196802] origLocale[1882754])
        (1565713 call _writeOne[1565749] this[1882750] rvfRerefTmp[2196789] rvfRerefTmp[2196802] error[1888788])
        val errorExists[2224320]:bool[10] "temp"
        (2224325 'move' errorExists[2224320](2224322 '!=' error[1888788] nil[44]))
        if errorExists[2224320]
        {
          gotoErrorHandling handler[1888789] handler[1888789]
        }
        label handler[1888789]
        const-val shouldHandleError[1888808]:bool[10] "temp"
        val errorExists[2224328]:bool[10] "temp"
        (2224333 'move' errorExists[2224328](2224330 '!=' error[1888788] nil[44]))
        (1888812 'move' shouldHandleError[1888808] errorExists[2224328])
        if shouldHandleError[1888808]
        {
          (1888804 '=' error_out[1888758] error[1888788])
          (1927551 call unlock[1067014] this[1882750])
          gotoErrorHandlingReturn _endon_fn[1888760] _endon_fn[1888760]
        }
      }
      (1927556 call unlock[1067014] this[1882750])
    }
    label _endon_fn[1888760]
    (1565720 return _void[55])
  }
  function on_fn[1578648](const  ref arg this[1882756]:_ref(channel(true,dynamic,false))[1061145], const in arg x[1882758]:real(64)[16], const in arg origLocale[1882760]:locale[28], ref arg error_out[1888948]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1888952]:Error[167984] "error variable" "temp"
        (1888961 'move' error[1888952] nil[44])
        (1578659 call lock[1066617] this[1882756] error[1888952])
        val errorExists[2224400]:bool[10] "temp"
        (2224405 'move' errorExists[2224400](2224402 '!=' error[1888952] nil[44]))
        if errorExists[2224400]
        {
          gotoErrorHandling handler[1888953] handler[1888953]
        }
        label handler[1888953]
        const-val shouldHandleError[1888970]:bool[10] "temp"
        val errorExists[2224408]:bool[10] "temp"
        (2224413 'move' errorExists[2224408](2224410 '!=' error[1888952] nil[44]))
        (1888974 'move' shouldHandleError[1888970] errorExists[2224408])
        if shouldHandleError[1888970]
        {
          (1888967 call chpl_uncaught_error[170289] error[1888952])
        }
      }
      {
        val error[1888978]:Error[167984] "error variable" "temp"
        (1888987 'move' error[1888978] nil[44])
        val rvfRerefTmp[2196814]:locale[28] "temp"
        (2196817 'move' rvfRerefTmp[2196814] origLocale[1882760])
        (1578681 call _writeOne[1578717] this[1882756] x[1882758] rvfRerefTmp[2196814] error[1888978])
        val errorExists[2224416]:bool[10] "temp"
        (2224421 'move' errorExists[2224416](2224418 '!=' error[1888978] nil[44]))
        if errorExists[2224416]
        {
          gotoErrorHandling handler[1888979] handler[1888979]
        }
        label handler[1888979]
        const-val shouldHandleError[1888998]:bool[10] "temp"
        val errorExists[2224424]:bool[10] "temp"
        (2224429 'move' errorExists[2224424](2224426 '!=' error[1888978] nil[44]))
        (1889002 'move' shouldHandleError[1888998] errorExists[2224424])
        if shouldHandleError[1888998]
        {
          (1888994 '=' error_out[1888948] error[1888978])
          (1927605 call unlock[1067014] this[1882756])
          gotoErrorHandlingReturn _endon_fn[1888950] _endon_fn[1888950]
        }
      }
      (1927610 call unlock[1067014] this[1882756])
    }
    label _endon_fn[1888950]
    (1578688 return _void[55])
  }
  function on_fn[1589701](const in arg this[1882762]:channel(true,dynamic,true)[1022014], const  ref arg args[1882764]:_ref((string,ioNewline))[1589875], const in arg origLocale[1882766]:locale[28], ref arg error_out[1889183]:Error[167984]) : void[4] throws "on" "resolved"
  {
    {
      {
        val error[1889187]:Error[167984] "error variable" "temp"
        (1889196 'move' error[1889187] nil[44])
        ref rvfRerefTmp[2196827]:_ref(channel(true,dynamic,true))[1022023] "temp"
        (2196831 'move' rvfRerefTmp[2196827](2196828 'set reference' this[1882762]))
        (1589712 call lock[1552488] rvfRerefTmp[2196827] error[1889187])
        val errorExists[2224520]:bool[10] "temp"
        (2224525 'move' errorExists[2224520](2224522 '!=' error[1889187] nil[44]))
        if errorExists[2224520]
        {
          gotoErrorHandling handler[1889188] handler[1889188]
        }
        label handler[1889188]
        const-val shouldHandleError[1889207]:bool[10] "temp"
        val errorExists[2224528]:bool[10] "temp"
        (2224533 'move' errorExists[2224528](2224530 '!=' error[1889187] nil[44]))
        (1889211 'move' shouldHandleError[1889207] errorExists[2224528])
        if shouldHandleError[1889207]
        {
          (1889203 '=' error_out[1889183] error[1889187])
          gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
        }
      }
      {
        const-val i[1589722]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1589724 'move' i[1589722] 0)
        {
          {
            {
              val error[1889215]:Error[167984] "error variable" "temp"
              (1889224 'move' error[1889215] nil[44])
              ref call_tmp[1589927]:_ref(string)[938128] "dead after last mention" "maybe param" "temp"
              (1589929 'move' call_tmp[1589927](1589982 '.v' args[1882764] x0[1589822]))
              ref rvfRerefTmp[2196834]:_ref(channel(true,dynamic,true))[1022023] "temp"
              (2196838 'move' rvfRerefTmp[2196834](2196835 'set reference' this[1882762]))
              val rvfRerefTmp[2196875]:locale[28] "temp"
              (2196878 'move' rvfRerefTmp[2196875] origLocale[1882766])
              (1589938 call _writeOne[1589985] rvfRerefTmp[2196834] call_tmp[1589927] rvfRerefTmp[2196875] error[1889215])
              val errorExists[2224536]:bool[10] "temp"
              (2224541 'move' errorExists[2224536](2224538 '!=' error[1889215] nil[44]))
              if errorExists[2224536]
              {
                gotoErrorHandling handler[1889216] handler[1889216]
              }
              label handler[1889216]
              const-val shouldHandleError[1889235]:bool[10] "temp"
              val errorExists[2224544]:bool[10] "temp"
              (2224549 'move' errorExists[2224544](2224546 '!=' error[1889215] nil[44]))
              (1889239 'move' shouldHandleError[1889235] errorExists[2224544])
              if shouldHandleError[1889235]
              {
                (1889231 '=' error_out[1889183] error[1889215])
                ref rvfRerefTmp[2196848]:_ref(channel(true,dynamic,true))[1022023] "temp"
                (2196852 'move' rvfRerefTmp[2196848](2196849 'set reference' this[1882762]))
                (1927654 call unlock[1553237] rvfRerefTmp[2196848])
                gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
              }
            }
          }
        }
        label _continueLabel0[1589914]
        {
          {
            {
              val error[1889243]:Error[167984] "error variable" "temp"
              (1889252 'move' error[1889243] nil[44])
              ref call_tmp[1589959]:_ref(ioNewline)[967769] "dead after last mention" "maybe param" "temp"
              (1589961 'move' call_tmp[1589959](1590372 '.v' args[1882764] x1[1589824]))
              ref rvfRerefTmp[2196841]:_ref(channel(true,dynamic,true))[1022023] "temp"
              (2196845 'move' rvfRerefTmp[2196841](2196842 'set reference' this[1882762]))
              val rvfRerefTmp[2196881]:locale[28] "temp"
              (2196884 'move' rvfRerefTmp[2196881] origLocale[1882766])
              (1589970 call _writeOne[1586285] rvfRerefTmp[2196841] call_tmp[1589959] rvfRerefTmp[2196881] error[1889243])
              val errorExists[2224552]:bool[10] "temp"
              (2224557 'move' errorExists[2224552](2224554 '!=' error[1889243] nil[44]))
              if errorExists[2224552]
              {
                gotoErrorHandling handler[1889244] handler[1889244]
              }
              label handler[1889244]
              const-val shouldHandleError[1889263]:bool[10] "temp"
              val errorExists[2224560]:bool[10] "temp"
              (2224565 'move' errorExists[2224560](2224562 '!=' error[1889243] nil[44]))
              (1889267 'move' shouldHandleError[1889263] errorExists[2224560])
              if shouldHandleError[1889263]
              {
                (1889259 '=' error_out[1889183] error[1889243])
                ref rvfRerefTmp[2196855]:_ref(channel(true,dynamic,true))[1022023] "temp"
                (2196859 'move' rvfRerefTmp[2196855](2196856 'set reference' this[1882762]))
                (1927658 call unlock[1553237] rvfRerefTmp[2196855])
                gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
              }
            }
          }
        }
        label _continueLabel1[1589946]
        label _unused_continueLabel[1589800]
        label _breakLabel[1589802]
      }
      ref rvfRerefTmp[2196862]:_ref(channel(true,dynamic,true))[1022023] "temp"
      (2196866 'move' rvfRerefTmp[2196862](2196863 'set reference' this[1882762]))
      (1927663 call unlock[1553237] rvfRerefTmp[2196862])
    }
    label _endon_fn[1889185]
    (1589804 return _void[55])
  }
  function on_fn[1611238](ref arg this[1882792]:_ref(channel(false,dynamic,true))[985825]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1611244]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1611246 'move' call_tmp[1611244](1611249 call _channel_internal[1018555] this[1882792]))
      const-val coerce_tmp[1611287]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1611291 'move' coerce_tmp[1611287](1611289 'deref' call_tmp[1611244]))
      (1611253 call qio_channel_release[233049] coerce_tmp[1611287])
      ref call_tmp[1611256]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1611258 'move' call_tmp[1611256](1611261 call _channel_internal[1018555] this[1882792]))
      (1611265 call =[861669] call_tmp[1611256] QIO_CHANNEL_PTR_NULL[231556])
    }
    (1611268 return _void[55])
  }
  function on_fn[1674217](ref arg this[1882834]:_ref(channel(true,dynamic,true))[1022023]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1674223]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1674225 'move' call_tmp[1674223](1674228 call _channel_internal[1023265] this[1882834]))
      const-val coerce_tmp[1674266]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1674270 'move' coerce_tmp[1674266](1674268 'deref' call_tmp[1674223]))
      (1674232 call qio_channel_release[233049] coerce_tmp[1674266])
      ref call_tmp[1674235]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1674237 'move' call_tmp[1674235](1674240 call _channel_internal[1023265] this[1882834]))
      (1674244 call =[861669] call_tmp[1674235] QIO_CHANNEL_PTR_NULL[231556])
    }
    (1674247 return _void[55])
  }
  function on_fn[1676381](ref arg this[1882838]:_ref(channel(true,dynamic,false))[1061145]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1676387]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1676389 'move' call_tmp[1676387](1676392 call _channel_internal[1061978] this[1882838]))
      const-val coerce_tmp[1676430]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1676434 'move' coerce_tmp[1676430](1676432 'deref' call_tmp[1676387]))
      (1676396 call qio_channel_release[233049] coerce_tmp[1676430])
      ref call_tmp[1676399]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1676401 'move' call_tmp[1676399](1676404 call _channel_internal[1061978] this[1882838]))
      (1676408 call =[861669] call_tmp[1676399] QIO_CHANNEL_PTR_NULL[231556])
    }
    (1676411 return _void[55])
  }
  function on_fn[1680635](ref arg this[1882844]:_ref(channel(false,dynamic,false))[1080880]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1680641]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1680643 'move' call_tmp[1680641](1680646 call _channel_internal[1081710] this[1882844]))
      const-val coerce_tmp[1680684]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1680688 'move' coerce_tmp[1680684](1680686 'deref' call_tmp[1680641]))
      (1680650 call qio_channel_release[233049] coerce_tmp[1680684])
      ref call_tmp[1680653]:_ref(qio_channel_ptr_t)[937073] "dead after last mention" "maybe param" "temp"
      (1680655 'move' call_tmp[1680653](1680658 call _channel_internal[1081710] this[1882844]))
      (1680662 call =[861669] call_tmp[1680653] QIO_CHANNEL_PTR_NULL[231556])
    }
    (1680665 return _void[55])
  }
  function chpl__deinit_IO[1930276]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1930282]
    (1930302 call chpl__autoDestroy[1603492] call_tmp[724218])
    (1930299 call chpl__autoDestroy[1603492] call_tmp[724201])
    (1930296 call chpl__autoDestroy[1603492] call_tmp[724184])
    (1930293 call chpl__autoDestroy[1674281] stderr[250352])
    (1930290 call chpl__autoDestroy[1674281] stdout[250323])
    (1930287 call chpl__autoDestroy[1611302] stdin[250296])
    ref tmp[2197673]:6*string[985406] "temp"
    (2197678 'move' tmp[2197673](2197675 '.' _arg_to_proto_names[246649] value[2197663]))
    (1930284 call chpl__autoDestroy[1610329] tmp[2197673])
    (1930279 return _void[55])
  }
  function wrapon_fn[2199277](const in arg dummy_locale_arg[2199279]:chpl_localeID_t[209352], in arg buf[2199281]:c_void_ptr[149], in arg buf_size[2199283]:int(64)[13], in arg c[2199285]:_class_localson_fn[2199237]) : void[4] "on block"
  {
    val _0_tmp[2199290]:chpl_localeID_t[209352] "temp"
    (2199295 'move' _0_tmp[2199290](2199292 '.v' c[2199285] _0_tmp[2199240]))
    ref _1_this[2199297]:file[235668] "temp"
    (2199302 'move' _1_this[2199297](2199299 '.v' c[2199285] _1_this[2199242]))
    (2199288 call on_fn[935786] _1_this[2199297])
    (2199305 return _void[55])
  }
  function wrapon_fn[2199388](const in arg dummy_locale_arg[2199390]:chpl_localeID_t[209352], in arg buf[2199392]:c_void_ptr[149], in arg buf_size[2199394]:int(64)[13], in arg c[2199396]:_class_localson_fn[2199330]) : void[4] "on block"
  {
    val _0_tmp[2199401]:chpl_localeID_t[209352] "temp"
    (2199406 'move' _0_tmp[2199401](2199403 '.v' c[2199396] _0_tmp[2199333]))
    val _1_rvfDerefTmp[2199408]:file[235668] "temp"
    (2199413 'move' _1_rvfDerefTmp[2199408](2199410 '.v' c[2199396] _1_rvfDerefTmp[2199335]))
    ref _2_ret[2199416]:iostyle[231932] "temp"
    (2199421 'move' _2_ret[2199416](2199418 '.v' c[2199396] _2_ret[2199337]))
    ref _3_error[2199424]:Error[167984] "temp"
    (2199429 'move' _3_error[2199424](2199426 '.v' c[2199396] _3_error[2199339]))
    (2199399 call on_fn[935795] _1_rvfDerefTmp[2199408] _2_ret[2199416] _3_error[2199424])
    (2199432 return _void[55])
  }
  function wrapon_fn[2199502](const in arg dummy_locale_arg[2199504]:chpl_localeID_t[209352], in arg buf[2199506]:c_void_ptr[149], in arg buf_size[2199508]:int(64)[13], in arg c[2199510]:_class_localson_fn[2199456]) : void[4] "on block"
  {
    val _0_tmp[2199515]:chpl_localeID_t[209352] "temp"
    (2199520 'move' _0_tmp[2199515](2199517 '.v' c[2199510] _0_tmp[2199459]))
    val _1_rvfDerefTmp[2199522]:file[235668] "temp"
    (2199527 'move' _1_rvfDerefTmp[2199522](2199524 '.v' c[2199510] _1_rvfDerefTmp[2199461]))
    ref _2_err[2199530]:syserr[223672] "temp"
    (2199535 'move' _2_err[2199530](2199532 '.v' c[2199510] _2_err[2199463]))
    (2199513 call on_fn[935804] _1_rvfDerefTmp[2199522] _2_err[2199530])
    (2199538 return _void[55])
  }
  function wrapon_fn[2199634](const in arg dummy_locale_arg[2199636]:chpl_localeID_t[209352], in arg buf[2199638]:c_void_ptr[149], in arg buf_size[2199640]:int(64)[13], in arg c[2199642]:_class_localson_fn[2199564]) : void[4] "on block"
  {
    val _0_tmp[2199647]:chpl_localeID_t[209352] "temp"
    (2199652 'move' _0_tmp[2199647](2199649 '.v' c[2199642] _0_tmp[2199567]))
    val _1_rvfDerefTmp[2199654]:file[235668] "temp"
    (2199659 'move' _1_rvfDerefTmp[2199654](2199656 '.v' c[2199642] _1_rvfDerefTmp[2199569]))
    ref _2_err[2199662]:syserr[223672] "temp"
    (2199667 'move' _2_err[2199662](2199664 '.v' c[2199642] _2_err[2199571]))
    ref _3_ret[2199670]:string[26] "temp"
    (2199675 'move' _3_ret[2199670](2199672 '.v' c[2199642] _3_ret[2199573]))
    ref _4_error[2199678]:Error[167984] "temp"
    (2199683 'move' _4_error[2199678](2199680 '.v' c[2199642] _4_error[2199575]))
    (2199645 call on_fn[935822] _1_rvfDerefTmp[2199654] _2_err[2199662] _3_ret[2199670] _4_error[2199678])
    (2199686 return _void[55])
  }
  function wrapon_fn[2200007](const in arg dummy_locale_arg[2200009]:chpl_localeID_t[209352], in arg buf[2200011]:c_void_ptr[149], in arg buf_size[2200013]:int(64)[13], in arg c[2200015]:_class_localson_fn[2199913]) : void[4] "on block"
  {
    val _0_tmp[2200020]:chpl_localeID_t[209352] "temp"
    (2200025 'move' _0_tmp[2200020](2200022 '.v' c[2200015] _0_tmp[2199916]))
    val _1_rvfDerefTmp[2200027]:file[235668] "temp"
    (2200032 'move' _1_rvfDerefTmp[2200027](2200029 '.v' c[2200015] _1_rvfDerefTmp[2199918]))
    ref _2_ret[2200035]:channel(false,dynamic,true)[985816] "temp"
    (2200040 'move' _2_ret[2200035](2200037 '.v' c[2200015] _2_ret[2199920]))
    val _3_hints[2200043]:int(32)[95] "temp"
    (2200048 'move' _3_hints[2200043](2200045 '.v' c[2200015] _3_hints[2199922]))
    ref _4_err[2200051]:syserr[223672] "temp"
    (2200056 'move' _4_err[2200051](2200053 '.v' c[2200015] _4_err[2199924]))
    val _5_start[2200059]:int(64)[13] "temp"
    (2200064 'move' _5_start[2200059](2200061 '.v' c[2200015] _5_start[2199926]))
    val _6_end[2200067]:int(64)[13] "temp"
    (2200072 'move' _6_end[2200067](2200069 '.v' c[2200015] _6_end[2199928]))
    val _7_rvfDerefTmp[2200075]:iostyle[231932] "temp"
    (2200080 'move' _7_rvfDerefTmp[2200075](2200077 '.v' c[2200015] _7_rvfDerefTmp[2199930]))
    ref _8_error[2200083]:Error[167984] "temp"
    (2200088 'move' _8_error[2200083](2200085 '.v' c[2200015] _8_error[2199932]))
    (2200018 call on_fn[1016884] _1_rvfDerefTmp[2200027] _2_ret[2200035] _3_hints[2200043] _4_err[2200051] _5_start[2200059] _6_end[2200067] _7_rvfDerefTmp[2200075] _8_error[2200083])
    (2200091 return _void[55])
  }
  function wrapon_fn[2200202](const in arg dummy_locale_arg[2200204]:chpl_localeID_t[209352], in arg buf[2200206]:c_void_ptr[149], in arg buf_size[2200208]:int(64)[13], in arg c[2200210]:_class_localson_fn[2200120]) : void[4] "on block"
  {
    val _0_tmp[2200215]:chpl_localeID_t[209352] "temp"
    (2200220 'move' _0_tmp[2200215](2200217 '.v' c[2200210] _0_tmp[2200123]))
    val _1_start[2200222]:int(64)[13] "temp"
    (2200227 'move' _1_start[2200222](2200224 '.v' c[2200210] _1_start[2200125]))
    val _2_rvfDerefTmp[2200230]:file[235668] "temp"
    (2200235 'move' _2_rvfDerefTmp[2200230](2200232 '.v' c[2200210] _2_rvfDerefTmp[2200127]))
    ref _3__formal_tmp_error[2200238]:syserr[223672] "temp"
    (2200243 'move' _3__formal_tmp_error[2200238](2200240 '.v' c[2200210] _3__formal_tmp_error[2200129]))
    ref _4_this[2200246]:channel(false,dynamic,true)[985816] "temp"
    (2200251 'move' _4_this[2200246](2200248 '.v' c[2200210] _4_this[2200131]))
    val _5_hints[2200254]:int(32)[95] "temp"
    (2200259 'move' _5_hints[2200254](2200256 '.v' c[2200210] _5_hints[2200133]))
    val _6_rvfDerefTmp[2200262]:iostyle[231932] "temp"
    (2200267 'move' _6_rvfDerefTmp[2200262](2200264 '.v' c[2200210] _6_rvfDerefTmp[2200135]))
    val _7_end[2200270]:int(64)[13] "temp"
    (2200275 'move' _7_end[2200270](2200272 '.v' c[2200210] _7_end[2200137]))
    (2200213 call on_fn[1017914] _1_start[2200222] _2_rvfDerefTmp[2200230] _3__formal_tmp_error[2200238] _4_this[2200246] _5_hints[2200254] _6_rvfDerefTmp[2200262] _7_end[2200270])
    (2200278 return _void[55])
  }
  function wrapon_fn[2200335](const in arg dummy_locale_arg[2200337]:chpl_localeID_t[209352], in arg buf[2200339]:c_void_ptr[149], in arg buf_size[2200341]:int(64)[13], in arg c[2200343]:_class_localson_fn[2200301]) : void[4] "on block"
  {
    val _0_tmp[2200348]:chpl_localeID_t[209352] "temp"
    (2200353 'move' _0_tmp[2200348](2200350 '.v' c[2200343] _0_tmp[2200304]))
    val _1_rvfDerefTmp[2200355]:channel(false,dynamic,true)[985816] "temp"
    (2200360 'move' _1_rvfDerefTmp[2200355](2200357 '.v' c[2200343] _1_rvfDerefTmp[2200306]))
    (2200346 call on_fn[1018854] _1_rvfDerefTmp[2200355])
    (2200363 return _void[55])
  }
  function wrapon_fn[2200426](const in arg dummy_locale_arg[2200428]:chpl_localeID_t[209352], in arg buf[2200430]:c_void_ptr[149], in arg buf_size[2200432]:int(64)[13], in arg c[2200434]:_class_localson_fn[2200386]) : void[4] "on block"
  {
    val _0_tmp[2200439]:chpl_localeID_t[209352] "temp"
    (2200444 'move' _0_tmp[2200439](2200441 '.v' c[2200434] _0_tmp[2200389]))
    ref _1_lhs[2200446]:channel(false,dynamic,true)[985816] "temp"
    (2200451 'move' _1_lhs[2200446](2200448 '.v' c[2200434] _1_lhs[2200391]))
    (2200437 call on_fn[1018898] _1_lhs[2200446])
    (2200454 return _void[55])
  }
  function wrapon_fn[2200690](const in arg dummy_locale_arg[2200692]:chpl_localeID_t[209352], in arg buf[2200694]:c_void_ptr[149], in arg buf_size[2200696]:int(64)[13], in arg c[2200698]:_class_localson_fn[2200596]) : void[4] "on block"
  {
    val _0_tmp[2200703]:chpl_localeID_t[209352] "temp"
    (2200708 'move' _0_tmp[2200703](2200705 '.v' c[2200698] _0_tmp[2200599]))
    ref _1_ret[2200710]:channel(true,dynamic,true)[1022014] "temp"
    (2200715 'move' _1_ret[2200710](2200712 '.v' c[2200698] _1_ret[2200601]))
    val _2_hints[2200718]:int(32)[95] "temp"
    (2200723 'move' _2_hints[2200718](2200720 '.v' c[2200698] _2_hints[2200603]))
    val _3_start[2200726]:int(64)[13] "temp"
    (2200731 'move' _3_start[2200726](2200728 '.v' c[2200698] _3_start[2200605]))
    ref _4_err[2200734]:syserr[223672] "temp"
    (2200739 'move' _4_err[2200734](2200736 '.v' c[2200698] _4_err[2200607]))
    val _5_end[2200742]:int(64)[13] "temp"
    (2200747 'move' _5_end[2200742](2200744 '.v' c[2200698] _5_end[2200609]))
    val _6_rvfDerefTmp[2200750]:iostyle[231932] "temp"
    (2200755 'move' _6_rvfDerefTmp[2200750](2200752 '.v' c[2200698] _6_rvfDerefTmp[2200611]))
    val _7_rvfDerefTmp[2200758]:file[235668] "temp"
    (2200763 'move' _7_rvfDerefTmp[2200758](2200760 '.v' c[2200698] _7_rvfDerefTmp[2200613]))
    ref _8_error[2200766]:Error[167984] "temp"
    (2200771 'move' _8_error[2200766](2200768 '.v' c[2200698] _8_error[2200615]))
    (2200701 call on_fn[1022459] _1_ret[2200710] _2_hints[2200718] _3_start[2200726] _4_err[2200734] _5_end[2200742] _6_rvfDerefTmp[2200750] _7_rvfDerefTmp[2200758] _8_error[2200766])
    (2200774 return _void[55])
  }
  function wrapon_fn[2200885](const in arg dummy_locale_arg[2200887]:chpl_localeID_t[209352], in arg buf[2200889]:c_void_ptr[149], in arg buf_size[2200891]:int(64)[13], in arg c[2200893]:_class_localson_fn[2200803]) : void[4] "on block"
  {
    val _0_tmp[2200898]:chpl_localeID_t[209352] "temp"
    (2200903 'move' _0_tmp[2200898](2200900 '.v' c[2200893] _0_tmp[2200806]))
    ref _1_this[2200905]:channel(true,dynamic,true)[1022014] "temp"
    (2200910 'move' _1_this[2200905](2200907 '.v' c[2200893] _1_this[2200808]))
    val _2_hints[2200913]:int(32)[95] "temp"
    (2200918 'move' _2_hints[2200913](2200915 '.v' c[2200893] _2_hints[2200810]))
    val _3_rvfDerefTmp[2200921]:iostyle[231932] "temp"
    (2200926 'move' _3_rvfDerefTmp[2200921](2200923 '.v' c[2200893] _3_rvfDerefTmp[2200812]))
    val _4_start[2200929]:int(64)[13] "temp"
    (2200934 'move' _4_start[2200929](2200931 '.v' c[2200893] _4_start[2200814]))
    val _5_rvfDerefTmp[2200937]:file[235668] "temp"
    (2200942 'move' _5_rvfDerefTmp[2200937](2200939 '.v' c[2200893] _5_rvfDerefTmp[2200816]))
    ref _6__formal_tmp_error[2200945]:syserr[223672] "temp"
    (2200950 'move' _6__formal_tmp_error[2200945](2200947 '.v' c[2200893] _6__formal_tmp_error[2200818]))
    val _7_end[2200953]:int(64)[13] "temp"
    (2200958 'move' _7_end[2200953](2200955 '.v' c[2200893] _7_end[2200820]))
    (2200896 call on_fn[1022950] _1_this[2200905] _2_hints[2200913] _3_rvfDerefTmp[2200921] _4_start[2200929] _5_rvfDerefTmp[2200937] _6__formal_tmp_error[2200945] _7_end[2200953])
    (2200961 return _void[55])
  }
  function wrapon_fn[2201018](const in arg dummy_locale_arg[2201020]:chpl_localeID_t[209352], in arg buf[2201022]:c_void_ptr[149], in arg buf_size[2201024]:int(64)[13], in arg c[2201026]:_class_localson_fn[2200984]) : void[4] "on block"
  {
    val _0_tmp[2201031]:chpl_localeID_t[209352] "temp"
    (2201036 'move' _0_tmp[2201031](2201033 '.v' c[2201026] _0_tmp[2200987]))
    val _1_rvfDerefTmp[2201038]:channel(true,dynamic,true)[1022014] "temp"
    (2201043 'move' _1_rvfDerefTmp[2201038](2201040 '.v' c[2201026] _1_rvfDerefTmp[2200989]))
    (2201029 call on_fn[1023562] _1_rvfDerefTmp[2201038])
    (2201046 return _void[55])
  }
  function wrapon_fn[2201109](const in arg dummy_locale_arg[2201111]:chpl_localeID_t[209352], in arg buf[2201113]:c_void_ptr[149], in arg buf_size[2201115]:int(64)[13], in arg c[2201117]:_class_localson_fn[2201069]) : void[4] "on block"
  {
    val _0_tmp[2201122]:chpl_localeID_t[209352] "temp"
    (2201127 'move' _0_tmp[2201122](2201124 '.v' c[2201117] _0_tmp[2201072]))
    ref _1_lhs[2201129]:channel(true,dynamic,true)[1022014] "temp"
    (2201134 'move' _1_lhs[2201129](2201131 '.v' c[2201117] _1_lhs[2201074]))
    (2201120 call on_fn[1023606] _1_lhs[2201129])
    (2201137 return _void[55])
  }
  function wrapon_fn[2201403](const in arg dummy_locale_arg[2201405]:chpl_localeID_t[209352], in arg buf[2201407]:c_void_ptr[149], in arg buf_size[2201409]:int(64)[13], in arg c[2201411]:_class_localson_fn[2201309]) : void[4] "on block"
  {
    val _0_tmp[2201416]:chpl_localeID_t[209352] "temp"
    (2201421 'move' _0_tmp[2201416](2201418 '.v' c[2201411] _0_tmp[2201312]))
    val _1_rvfDerefTmp[2201423]:iostyle[231932] "temp"
    (2201428 'move' _1_rvfDerefTmp[2201423](2201425 '.v' c[2201411] _1_rvfDerefTmp[2201314]))
    val _2_rvfDerefTmp[2201431]:file[235668] "temp"
    (2201436 'move' _2_rvfDerefTmp[2201431](2201433 '.v' c[2201411] _2_rvfDerefTmp[2201316]))
    ref _3_err[2201439]:syserr[223672] "temp"
    (2201444 'move' _3_err[2201439](2201441 '.v' c[2201411] _3_err[2201318]))
    val _4_hints[2201447]:int(32)[95] "temp"
    (2201452 'move' _4_hints[2201447](2201449 '.v' c[2201411] _4_hints[2201320]))
    val _5_start[2201455]:int(64)[13] "temp"
    (2201460 'move' _5_start[2201455](2201457 '.v' c[2201411] _5_start[2201322]))
    ref _6_ret[2201463]:channel(true,dynamic,false)[1061136] "temp"
    (2201468 'move' _6_ret[2201463](2201465 '.v' c[2201411] _6_ret[2201324]))
    val _7_end[2201471]:int(64)[13] "temp"
    (2201476 'move' _7_end[2201471](2201473 '.v' c[2201411] _7_end[2201326]))
    ref _8_error[2201479]:Error[167984] "temp"
    (2201484 'move' _8_error[2201479](2201481 '.v' c[2201411] _8_error[2201328]))
    (2201414 call on_fn[1061211] _1_rvfDerefTmp[2201423] _2_rvfDerefTmp[2201431] _3_err[2201439] _4_hints[2201447] _5_start[2201455] _6_ret[2201463] _7_end[2201471] _8_error[2201479])
    (2201487 return _void[55])
  }
  function wrapon_fn[2201598](const in arg dummy_locale_arg[2201600]:chpl_localeID_t[209352], in arg buf[2201602]:c_void_ptr[149], in arg buf_size[2201604]:int(64)[13], in arg c[2201606]:_class_localson_fn[2201516]) : void[4] "on block"
  {
    val _0_tmp[2201611]:chpl_localeID_t[209352] "temp"
    (2201616 'move' _0_tmp[2201611](2201613 '.v' c[2201606] _0_tmp[2201519]))
    val _1_rvfDerefTmp[2201618]:iostyle[231932] "temp"
    (2201623 'move' _1_rvfDerefTmp[2201618](2201620 '.v' c[2201606] _1_rvfDerefTmp[2201521]))
    ref _2_this[2201626]:channel(true,dynamic,false)[1061136] "temp"
    (2201631 'move' _2_this[2201626](2201628 '.v' c[2201606] _2_this[2201523]))
    val _3_start[2201634]:int(64)[13] "temp"
    (2201639 'move' _3_start[2201634](2201636 '.v' c[2201606] _3_start[2201525]))
    val _4_rvfDerefTmp[2201642]:file[235668] "temp"
    (2201647 'move' _4_rvfDerefTmp[2201642](2201644 '.v' c[2201606] _4_rvfDerefTmp[2201527]))
    ref _5__formal_tmp_error[2201650]:syserr[223672] "temp"
    (2201655 'move' _5__formal_tmp_error[2201650](2201652 '.v' c[2201606] _5__formal_tmp_error[2201529]))
    val _6_end[2201658]:int(64)[13] "temp"
    (2201663 'move' _6_end[2201658](2201660 '.v' c[2201606] _6_end[2201531]))
    val _7_hints[2201666]:int(32)[95] "temp"
    (2201671 'move' _7_hints[2201666](2201668 '.v' c[2201606] _7_hints[2201533]))
    (2201609 call on_fn[1061663] _1_rvfDerefTmp[2201618] _2_this[2201626] _3_start[2201634] _4_rvfDerefTmp[2201642] _5__formal_tmp_error[2201650] _6_end[2201658] _7_hints[2201666])
    (2201674 return _void[55])
  }
  function wrapon_fn[2201731](const in arg dummy_locale_arg[2201733]:chpl_localeID_t[209352], in arg buf[2201735]:c_void_ptr[149], in arg buf_size[2201737]:int(64)[13], in arg c[2201739]:_class_localson_fn[2201697]) : void[4] "on block"
  {
    val _0_tmp[2201744]:chpl_localeID_t[209352] "temp"
    (2201749 'move' _0_tmp[2201744](2201746 '.v' c[2201739] _0_tmp[2201700]))
    val _1_rvfDerefTmp[2201751]:channel(true,dynamic,false)[1061136] "temp"
    (2201756 'move' _1_rvfDerefTmp[2201751](2201753 '.v' c[2201739] _1_rvfDerefTmp[2201702]))
    (2201742 call on_fn[1062275] _1_rvfDerefTmp[2201751])
    (2201759 return _void[55])
  }
  function wrapon_fn[2201822](const in arg dummy_locale_arg[2201824]:chpl_localeID_t[209352], in arg buf[2201826]:c_void_ptr[149], in arg buf_size[2201828]:int(64)[13], in arg c[2201830]:_class_localson_fn[2201782]) : void[4] "on block"
  {
    val _0_tmp[2201835]:chpl_localeID_t[209352] "temp"
    (2201840 'move' _0_tmp[2201835](2201837 '.v' c[2201830] _0_tmp[2201785]))
    ref _1_lhs[2201842]:channel(true,dynamic,false)[1061136] "temp"
    (2201847 'move' _1_lhs[2201842](2201844 '.v' c[2201830] _1_lhs[2201787]))
    (2201833 call on_fn[1062319] _1_lhs[2201842])
    (2201850 return _void[55])
  }
  function wrapon_fn[2201920](const in arg dummy_locale_arg[2201922]:chpl_localeID_t[209352], in arg buf[2201924]:c_void_ptr[149], in arg buf_size[2201926]:int(64)[13], in arg c[2201928]:_class_localson_fn[2201874]) : void[4] "on block"
  {
    val _0_tmp[2201933]:chpl_localeID_t[209352] "temp"
    (2201938 'move' _0_tmp[2201933](2201935 '.v' c[2201928] _0_tmp[2201877]))
    val _1_rvfDerefTmp[2201940]:channel(true,dynamic,false)[1061136] "temp"
    (2201945 'move' _1_rvfDerefTmp[2201940](2201942 '.v' c[2201928] _1_rvfDerefTmp[2201879]))
    ref _2_err[2201948]:syserr[223672] "temp"
    (2201953 'move' _2_err[2201948](2201950 '.v' c[2201928] _2_err[2201881]))
    (2201931 call on_fn[1062644] _1_rvfDerefTmp[2201940] _2_err[2201948])
    (2201956 return _void[55])
  }
  function wrapon_fn[2202058](const in arg dummy_locale_arg[2202060]:chpl_localeID_t[209352], in arg buf[2202062]:c_void_ptr[149], in arg buf_size[2202064]:int(64)[13], in arg c[2202066]:_class_localson_fn[2201982]) : void[4] "on block"
  {
    val _0_tmp[2202071]:chpl_localeID_t[209352] "temp"
    (2202076 'move' _0_tmp[2202071](2202073 '.v' c[2202066] _0_tmp[2201985]))
    ref _1_this[2202078]:channel(true,dynamic,false)[1061136] "temp"
    (2202083 'move' _1_this[2202078](2202080 '.v' c[2202066] _1_this[2201987]))
    ref _2_path[2202086]:string[26] "temp"
    (2202091 'move' _2_path[2202086](2202088 '.v' c[2202066] _2_path[2201989]))
    ref _3_offset[2202094]:int(64)[13] "temp"
    (2202099 'move' _3_offset[2202094](2202096 '.v' c[2202066] _3_offset[2201991]))
    ref _4_error[2202102]:Error[167984] "temp"
    (2202107 'move' _4_error[2202102](2202104 '.v' c[2202066] _4_error[2201993]))
    (2202069 call on_fn[1063121] _1_this[2202078] _2_path[2202086] _3_offset[2202094] _4_error[2202102])
    (2202110 return _void[55])
  }
  function wrapon_fn[2202200](const in arg dummy_locale_arg[2202202]:chpl_localeID_t[209352], in arg buf[2202204]:c_void_ptr[149], in arg buf_size[2202206]:int(64)[13], in arg c[2202208]:_class_localson_fn[2202136]) : void[4] "on block"
  {
    val _0_tmp[2202213]:chpl_localeID_t[209352] "temp"
    (2202218 'move' _0_tmp[2202213](2202215 '.v' c[2202208] _0_tmp[2202139]))
    val _1_rvfDerefTmp[2202220]:channel(true,dynamic,false)[1061136] "temp"
    (2202225 'move' _1_rvfDerefTmp[2202220](2202222 '.v' c[2202208] _1_rvfDerefTmp[2202141]))
    ref _2_args[2202228]:1*byteIndex[1057270] "temp"
    (2202233 'move' _2_args[2202228](2202230 '.v' c[2202208] _2_args[2202143]))
    val _3_rvfDerefTmp[2202236]:locale[28] "temp"
    (2202241 'move' _3_rvfDerefTmp[2202236](2202238 '.v' c[2202208] _3_rvfDerefTmp[2202145]))
    ref _4_error[2202244]:Error[167984] "temp"
    (2202249 'move' _4_error[2202244](2202246 '.v' c[2202208] _4_error[2202147]))
    (2202211 call on_fn[1066278] _1_rvfDerefTmp[2202220] _2_args[2202228] _3_rvfDerefTmp[2202236] _4_error[2202244])
    (2202252 return _void[55])
  }
  function wrapon_fn[2202342](const in arg dummy_locale_arg[2202344]:chpl_localeID_t[209352], in arg buf[2202346]:c_void_ptr[149], in arg buf_size[2202348]:int(64)[13], in arg c[2202350]:_class_localson_fn[2202278]) : void[4] "on block"
  {
    val _0_tmp[2202355]:chpl_localeID_t[209352] "temp"
    (2202360 'move' _0_tmp[2202355](2202357 '.v' c[2202350] _0_tmp[2202281]))
    ref _1_this[2202362]:channel(true,dynamic,false)[1061136] "temp"
    (2202367 'move' _1_this[2202362](2202364 '.v' c[2202350] _1_this[2202283]))
    val _2_x[2202370]:int(64)[13] "temp"
    (2202375 'move' _2_x[2202370](2202372 '.v' c[2202350] _2_x[2202285]))
    val _3_rvfDerefTmp[2202378]:locale[28] "temp"
    (2202383 'move' _3_rvfDerefTmp[2202378](2202380 '.v' c[2202350] _3_rvfDerefTmp[2202287]))
    ref _4_error[2202386]:Error[167984] "temp"
    (2202391 'move' _4_error[2202386](2202388 '.v' c[2202350] _4_error[2202289]))
    (2202353 call on_fn[1069057] _1_this[2202362] _2_x[2202370] _3_rvfDerefTmp[2202378] _4_error[2202386])
    (2202394 return _void[55])
  }
  function wrapon_fn[2202464](const in arg dummy_locale_arg[2202466]:chpl_localeID_t[209352], in arg buf[2202468]:c_void_ptr[149], in arg buf_size[2202470]:int(64)[13], in arg c[2202472]:_class_localson_fn[2202418]) : void[4] "on block"
  {
    val _0_tmp[2202477]:chpl_localeID_t[209352] "temp"
    (2202482 'move' _0_tmp[2202477](2202479 '.v' c[2202472] _0_tmp[2202421]))
    val _1_rvfDerefTmp[2202484]:channel(true,dynamic,false)[1061136] "temp"
    (2202489 'move' _1_rvfDerefTmp[2202484](2202486 '.v' c[2202472] _1_rvfDerefTmp[2202423]))
    ref _2_ret[2202492]:int(64)[13] "temp"
    (2202497 'move' _2_ret[2202492](2202494 '.v' c[2202472] _2_ret[2202425]))
    (2202475 call on_fn[1080394] _1_rvfDerefTmp[2202484] _2_ret[2202492])
    (2202500 return _void[55])
  }
  function wrapon_fn[2202624](const in arg dummy_locale_arg[2202626]:chpl_localeID_t[209352], in arg buf[2202628]:c_void_ptr[149], in arg buf_size[2202630]:int(64)[13], in arg c[2202632]:_class_localson_fn[2202530]) : void[4] "on block"
  {
    val _0_tmp[2202637]:chpl_localeID_t[209352] "temp"
    (2202642 'move' _0_tmp[2202637](2202639 '.v' c[2202632] _0_tmp[2202533]))
    val _1_rvfDerefTmp[2202644]:iostyle[231932] "temp"
    (2202649 'move' _1_rvfDerefTmp[2202644](2202646 '.v' c[2202632] _1_rvfDerefTmp[2202535]))
    val _2_end[2202652]:int(64)[13] "temp"
    (2202657 'move' _2_end[2202652](2202654 '.v' c[2202632] _2_end[2202537]))
    val _3_rvfDerefTmp[2202660]:file[235668] "temp"
    (2202665 'move' _3_rvfDerefTmp[2202660](2202662 '.v' c[2202632] _3_rvfDerefTmp[2202539]))
    ref _4_err[2202668]:syserr[223672] "temp"
    (2202673 'move' _4_err[2202668](2202670 '.v' c[2202632] _4_err[2202541]))
    val _5_hints[2202676]:int(32)[95] "temp"
    (2202681 'move' _5_hints[2202676](2202678 '.v' c[2202632] _5_hints[2202543]))
    val _6_start[2202684]:int(64)[13] "temp"
    (2202689 'move' _6_start[2202684](2202686 '.v' c[2202632] _6_start[2202545]))
    ref _7_ret[2202692]:channel(false,dynamic,false)[1080871] "temp"
    (2202697 'move' _7_ret[2202692](2202694 '.v' c[2202632] _7_ret[2202547]))
    ref _8_error[2202700]:Error[167984] "temp"
    (2202705 'move' _8_error[2202700](2202702 '.v' c[2202632] _8_error[2202549]))
    (2202635 call on_fn[1080946] _1_rvfDerefTmp[2202644] _2_end[2202652] _3_rvfDerefTmp[2202660] _4_err[2202668] _5_hints[2202676] _6_start[2202684] _7_ret[2202692] _8_error[2202700])
    (2202708 return _void[55])
  }
  function wrapon_fn[2202819](const in arg dummy_locale_arg[2202821]:chpl_localeID_t[209352], in arg buf[2202823]:c_void_ptr[149], in arg buf_size[2202825]:int(64)[13], in arg c[2202827]:_class_localson_fn[2202737]) : void[4] "on block"
  {
    val _0_tmp[2202832]:chpl_localeID_t[209352] "temp"
    (2202837 'move' _0_tmp[2202832](2202834 '.v' c[2202827] _0_tmp[2202740]))
    val _1_start[2202839]:int(64)[13] "temp"
    (2202844 'move' _1_start[2202839](2202841 '.v' c[2202827] _1_start[2202742]))
    val _2_rvfDerefTmp[2202847]:file[235668] "temp"
    (2202852 'move' _2_rvfDerefTmp[2202847](2202849 '.v' c[2202827] _2_rvfDerefTmp[2202744]))
    ref _3__formal_tmp_error[2202855]:syserr[223672] "temp"
    (2202860 'move' _3__formal_tmp_error[2202855](2202857 '.v' c[2202827] _3__formal_tmp_error[2202746]))
    val _4_end[2202863]:int(64)[13] "temp"
    (2202868 'move' _4_end[2202863](2202865 '.v' c[2202827] _4_end[2202748]))
    val _5_hints[2202871]:int(32)[95] "temp"
    (2202876 'move' _5_hints[2202871](2202873 '.v' c[2202827] _5_hints[2202750]))
    val _6_rvfDerefTmp[2202879]:iostyle[231932] "temp"
    (2202884 'move' _6_rvfDerefTmp[2202879](2202881 '.v' c[2202827] _6_rvfDerefTmp[2202752]))
    ref _7_this[2202887]:channel(false,dynamic,false)[1080871] "temp"
    (2202892 'move' _7_this[2202887](2202889 '.v' c[2202827] _7_this[2202754]))
    (2202830 call on_fn[1081395] _1_start[2202839] _2_rvfDerefTmp[2202847] _3__formal_tmp_error[2202855] _4_end[2202863] _5_hints[2202871] _6_rvfDerefTmp[2202879] _7_this[2202887])
    (2202895 return _void[55])
  }
  function wrapon_fn[2202952](const in arg dummy_locale_arg[2202954]:chpl_localeID_t[209352], in arg buf[2202956]:c_void_ptr[149], in arg buf_size[2202958]:int(64)[13], in arg c[2202960]:_class_localson_fn[2202918]) : void[4] "on block"
  {
    val _0_tmp[2202965]:chpl_localeID_t[209352] "temp"
    (2202970 'move' _0_tmp[2202965](2202967 '.v' c[2202960] _0_tmp[2202921]))
    val _1_rvfDerefTmp[2202972]:channel(false,dynamic,false)[1080871] "temp"
    (2202977 'move' _1_rvfDerefTmp[2202972](2202974 '.v' c[2202960] _1_rvfDerefTmp[2202923]))
    (2202963 call on_fn[1082007] _1_rvfDerefTmp[2202972])
    (2202980 return _void[55])
  }
  function wrapon_fn[2203043](const in arg dummy_locale_arg[2203045]:chpl_localeID_t[209352], in arg buf[2203047]:c_void_ptr[149], in arg buf_size[2203049]:int(64)[13], in arg c[2203051]:_class_localson_fn[2203003]) : void[4] "on block"
  {
    val _0_tmp[2203056]:chpl_localeID_t[209352] "temp"
    (2203061 'move' _0_tmp[2203056](2203058 '.v' c[2203051] _0_tmp[2203006]))
    ref _1_lhs[2203063]:channel(false,dynamic,false)[1080871] "temp"
    (2203068 'move' _1_lhs[2203063](2203065 '.v' c[2203051] _1_lhs[2203008]))
    (2203054 call on_fn[1082051] _1_lhs[2203063])
    (2203071 return _void[55])
  }
  function wrapon_fn[2203141](const in arg dummy_locale_arg[2203143]:chpl_localeID_t[209352], in arg buf[2203145]:c_void_ptr[149], in arg buf_size[2203147]:int(64)[13], in arg c[2203149]:_class_localson_fn[2203095]) : void[4] "on block"
  {
    val _0_tmp[2203154]:chpl_localeID_t[209352] "temp"
    (2203159 'move' _0_tmp[2203154](2203156 '.v' c[2203149] _0_tmp[2203098]))
    val _1_rvfDerefTmp[2203161]:channel(false,dynamic,false)[1080871] "temp"
    (2203166 'move' _1_rvfDerefTmp[2203161](2203163 '.v' c[2203149] _1_rvfDerefTmp[2203100]))
    ref _2_err[2203169]:syserr[223672] "temp"
    (2203174 'move' _2_err[2203169](2203171 '.v' c[2203149] _2_err[2203102]))
    (2203152 call on_fn[1082376] _1_rvfDerefTmp[2203161] _2_err[2203169])
    (2203177 return _void[55])
  }
  function wrapon_fn[2203273](const in arg dummy_locale_arg[2203275]:chpl_localeID_t[209352], in arg buf[2203277]:c_void_ptr[149], in arg buf_size[2203279]:int(64)[13], in arg c[2203281]:_class_localson_fn[2203203]) : void[4] "on block"
  {
    val _0_tmp[2203286]:chpl_localeID_t[209352] "temp"
    (2203291 'move' _0_tmp[2203286](2203288 '.v' c[2203281] _0_tmp[2203206]))
    val _1_rvfDerefTmp[2203293]:channel(false,dynamic,false)[1080871] "temp"
    (2203298 'move' _1_rvfDerefTmp[2203293](2203295 '.v' c[2203281] _1_rvfDerefTmp[2203208]))
    ref _2_path[2203301]:string[26] "temp"
    (2203306 'move' _2_path[2203301](2203303 '.v' c[2203281] _2_path[2203210]))
    ref _3_offset[2203309]:int(64)[13] "temp"
    (2203314 'move' _3_offset[2203309](2203311 '.v' c[2203281] _3_offset[2203212]))
    ref _4_error[2203317]:Error[167984] "temp"
    (2203322 'move' _4_error[2203317](2203319 '.v' c[2203281] _4_error[2203214]))
    (2203284 call on_fn[1082805] _1_rvfDerefTmp[2203293] _2_path[2203301] _3_offset[2203309] _4_error[2203317])
    (2203325 return _void[55])
  }
  function wrapon_fn[2203557](const in arg dummy_locale_arg[2203559]:chpl_localeID_t[209352], in arg buf[2203561]:c_void_ptr[149], in arg buf_size[2203563]:int(64)[13], in arg c[2203565]:_class_localson_fn[2203493]) : void[4] "on block"
  {
    val _0_tmp[2203570]:chpl_localeID_t[209352] "temp"
    (2203575 'move' _0_tmp[2203570](2203572 '.v' c[2203565] _0_tmp[2203496]))
    val _1_rvfDerefTmp[2203577]:channel(true,dynamic,false)[1061136] "temp"
    (2203582 'move' _1_rvfDerefTmp[2203577](2203579 '.v' c[2203565] _1_rvfDerefTmp[2203498]))
    ref _2_args[2203585]:(string,codepointIndex,string)[1158744] "temp"
    (2203590 'move' _2_args[2203585](2203587 '.v' c[2203565] _2_args[2203500]))
    val _3_rvfDerefTmp[2203593]:locale[28] "temp"
    (2203598 'move' _3_rvfDerefTmp[2203593](2203595 '.v' c[2203565] _3_rvfDerefTmp[2203502]))
    ref _4_error[2203601]:Error[167984] "temp"
    (2203606 'move' _4_error[2203601](2203603 '.v' c[2203565] _4_error[2203504]))
    (2203568 call on_fn[1165096] _1_rvfDerefTmp[2203577] _2_args[2203585] _3_rvfDerefTmp[2203593] _4_error[2203601])
    (2203609 return _void[55])
  }
  function wrapon_fn[2203699](const in arg dummy_locale_arg[2203701]:chpl_localeID_t[209352], in arg buf[2203703]:c_void_ptr[149], in arg buf_size[2203705]:int(64)[13], in arg c[2203707]:_class_localson_fn[2203635]) : void[4] "on block"
  {
    val _0_tmp[2203712]:chpl_localeID_t[209352] "temp"
    (2203717 'move' _0_tmp[2203712](2203714 '.v' c[2203707] _0_tmp[2203638]))
    val _1_rvfDerefTmp[2203719]:channel(true,dynamic,false)[1061136] "temp"
    (2203724 'move' _1_rvfDerefTmp[2203719](2203721 '.v' c[2203707] _1_rvfDerefTmp[2203640]))
    ref _2_args[2203727]:(string,codepointIndex,string,int(64))[1176709] "temp"
    (2203732 'move' _2_args[2203727](2203729 '.v' c[2203707] _2_args[2203642]))
    val _3_rvfDerefTmp[2203735]:locale[28] "temp"
    (2203740 'move' _3_rvfDerefTmp[2203735](2203737 '.v' c[2203707] _3_rvfDerefTmp[2203644]))
    ref _4_error[2203743]:Error[167984] "temp"
    (2203748 'move' _4_error[2203743](2203745 '.v' c[2203707] _4_error[2203646]))
    (2203710 call on_fn[1180575] _1_rvfDerefTmp[2203719] _2_args[2203727] _3_rvfDerefTmp[2203735] _4_error[2203743])
    (2203751 return _void[55])
  }
  function wrapon_fn[2208607](const in arg dummy_locale_arg[2208609]:chpl_localeID_t[209352], in arg buf[2208611]:c_void_ptr[149], in arg buf_size[2208613]:int(64)[13], in arg c[2208615]:_class_localson_fn[2208543]) : void[4] "on block"
  {
    val _0_tmp[2208620]:chpl_localeID_t[209352] "temp"
    (2208625 'move' _0_tmp[2208620](2208622 '.v' c[2208615] _0_tmp[2208546]))
    val _1_rvfDerefTmp[2208627]:channel(true,dynamic,true)[1022014] "temp"
    (2208632 'move' _1_rvfDerefTmp[2208627](2208629 '.v' c[2208615] _1_rvfDerefTmp[2208548]))
    ref _2_args[2208635]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "temp"
    (2208640 'move' _2_args[2208635](2208637 '.v' c[2208615] _2_args[2208550]))
    val _3_rvfDerefTmp[2208643]:locale[28] "temp"
    (2208648 'move' _3_rvfDerefTmp[2208643](2208645 '.v' c[2208615] _3_rvfDerefTmp[2208552]))
    ref _4_error[2208651]:Error[167984] "temp"
    (2208656 'move' _4_error[2208651](2208653 '.v' c[2208615] _4_error[2208554]))
    (2208618 call on_fn[1552156] _1_rvfDerefTmp[2208627] _2_args[2208635] _3_rvfDerefTmp[2208643] _4_error[2208651])
    (2208659 return _void[55])
  }
  function wrapon_fn[2208729](const in arg dummy_locale_arg[2208731]:chpl_localeID_t[209352], in arg buf[2208733]:c_void_ptr[149], in arg buf_size[2208735]:int(64)[13], in arg c[2208737]:_class_localson_fn[2208683]) : void[4] "on block"
  {
    val _0_tmp[2208742]:chpl_localeID_t[209352] "temp"
    (2208747 'move' _0_tmp[2208742](2208744 '.v' c[2208737] _0_tmp[2208686]))
    val _1_rvfDerefTmp[2208749]:channel(true,dynamic,true)[1022014] "temp"
    (2208754 'move' _1_rvfDerefTmp[2208749](2208751 '.v' c[2208737] _1_rvfDerefTmp[2208688]))
    ref _2_err[2208757]:syserr[223672] "temp"
    (2208762 'move' _2_err[2208757](2208759 '.v' c[2208737] _2_err[2208690]))
    (2208740 call on_fn[1552598] _1_rvfDerefTmp[2208749] _2_err[2208757])
    (2208765 return _void[55])
  }
  function wrapon_fn[2208861](const in arg dummy_locale_arg[2208863]:chpl_localeID_t[209352], in arg buf[2208865]:c_void_ptr[149], in arg buf_size[2208867]:int(64)[13], in arg c[2208869]:_class_localson_fn[2208791]) : void[4] "on block"
  {
    val _0_tmp[2208874]:chpl_localeID_t[209352] "temp"
    (2208879 'move' _0_tmp[2208874](2208876 '.v' c[2208869] _0_tmp[2208794]))
    val _1_rvfDerefTmp[2208881]:channel(true,dynamic,true)[1022014] "temp"
    (2208886 'move' _1_rvfDerefTmp[2208881](2208883 '.v' c[2208869] _1_rvfDerefTmp[2208796]))
    ref _2_path[2208889]:string[26] "temp"
    (2208894 'move' _2_path[2208889](2208891 '.v' c[2208869] _2_path[2208798]))
    ref _3_offset[2208897]:int(64)[13] "temp"
    (2208902 'move' _3_offset[2208897](2208899 '.v' c[2208869] _3_offset[2208800]))
    ref _4_error[2208905]:Error[167984] "temp"
    (2208910 'move' _4_error[2208905](2208907 '.v' c[2208869] _4_error[2208802]))
    (2208872 call on_fn[1553015] _1_rvfDerefTmp[2208881] _2_path[2208889] _3_offset[2208897] _4_error[2208905])
    (2208913 return _void[55])
  }
  function wrapon_fn[2208970](const in arg dummy_locale_arg[2208972]:chpl_localeID_t[209352], in arg buf[2208974]:c_void_ptr[149], in arg buf_size[2208976]:int(64)[13], in arg c[2208978]:_class_localson_fn[2208936]) : void[4] "on block"
  {
    val _0_tmp[2208983]:chpl_localeID_t[209352] "temp"
    (2208988 'move' _0_tmp[2208983](2208985 '.v' c[2208978] _0_tmp[2208939]))
    val _1_rvfDerefTmp[2208990]:channel(true,dynamic,true)[1022014] "temp"
    (2208995 'move' _1_rvfDerefTmp[2208990](2208992 '.v' c[2208978] _1_rvfDerefTmp[2208941]))
    (2208981 call on_fn[1553289] _1_rvfDerefTmp[2208990])
    (2208998 return _void[55])
  }
  function wrapon_fn[2209081](const in arg dummy_locale_arg[2209083]:chpl_localeID_t[209352], in arg buf[2209085]:c_void_ptr[149], in arg buf_size[2209087]:int(64)[13], in arg c[2209089]:_class_localson_fn[2209023]) : void[4] "on block"
  {
    val _0_tmp[2209094]:chpl_localeID_t[209352] "temp"
    (2209099 'move' _0_tmp[2209094](2209096 '.v' c[2209089] _0_tmp[2209026]))
    ref _1_this[2209101]:channel(true,dynamic,false)[1061136] "temp"
    (2209106 'move' _1_this[2209101](2209103 '.v' c[2209089] _1_this[2209028]))
    val _2_element[2209109]:int(64)[13] "temp"
    (2209114 'move' _2_element[2209109](2209111 '.v' c[2209089] _2_element[2209030]))
    ref _3_ret[2209117]:int(64)[13] "temp"
    (2209122 'move' _3_ret[2209117](2209119 '.v' c[2209089] _3_ret[2209032]))
    (2209092 call on_fn[1559293] _1_this[2209101] _2_element[2209109] _3_ret[2209117])
    (2209125 return _void[55])
  }
  function wrapon_fn[2209201](const in arg dummy_locale_arg[2209203]:chpl_localeID_t[209352], in arg buf[2209205]:c_void_ptr[149], in arg buf_size[2209207]:int(64)[13], in arg c[2209209]:_class_localson_fn[2209149]) : void[4] "on block"
  {
    val _0_tmp[2209214]:chpl_localeID_t[209352] "temp"
    (2209219 'move' _0_tmp[2209214](2209216 '.v' c[2209209] _0_tmp[2209152]))
    ref _1_this[2209221]:channel(true,dynamic,false)[1061136] "temp"
    (2209226 'move' _1_this[2209221](2209223 '.v' c[2209209] _1_this[2209154]))
    ref _2_ret[2209229]:uint(8)[100] "temp"
    (2209234 'move' _2_ret[2209229](2209231 '.v' c[2209209] _2_ret[2209156]))
    (2209212 call on_fn[1559671] _1_this[2209221] _2_ret[2209229])
    (2209237 return _void[55])
  }
  function wrapon_fn[2209340](const in arg dummy_locale_arg[2209342]:chpl_localeID_t[209352], in arg buf[2209344]:c_void_ptr[149], in arg buf_size[2209346]:int(64)[13], in arg c[2209348]:_class_localson_fn[2209264]) : void[4] "on block"
  {
    val _0_tmp[2209353]:chpl_localeID_t[209352] "temp"
    (2209358 'move' _0_tmp[2209353](2209355 '.v' c[2209348] _0_tmp[2209267]))
    ref _1_this[2209360]:channel(true,dynamic,false)[1061136] "temp"
    (2209365 'move' _1_this[2209360](2209362 '.v' c[2209348] _1_this[2209269]))
    val _2_x[2209368]:_ddata(real(64))[1358105] "temp"
    (2209373 'move' _2_x[2209368](2209370 '.v' c[2209348] _2_x[2209271]))
    val _3_len[2209376]:int(64)[13] "temp"
    (2209381 'move' _3_len[2209376](2209378 '.v' c[2209348] _3_len[2209273]))
    ref _4_err[2209384]:syserr[223672] "temp"
    (2209389 'move' _4_err[2209384](2209386 '.v' c[2209348] _4_err[2209275]))
    ref _5_error[2209392]:Error[167984] "temp"
    (2209397 'move' _5_error[2209392](2209394 '.v' c[2209348] _5_error[2209277]))
    (2209351 call on_fn[1565038] _1_this[2209360] _2_x[2209368] _3_len[2209376] _4_err[2209384] _5_error[2209392])
    (2209400 return _void[55])
  }
  function wrapon_fn[2209490](const in arg dummy_locale_arg[2209492]:chpl_localeID_t[209352], in arg buf[2209494]:c_void_ptr[149], in arg buf_size[2209496]:int(64)[13], in arg c[2209498]:_class_localson_fn[2209426]) : void[4] "on block"
  {
    val _0_tmp[2209503]:chpl_localeID_t[209352] "temp"
    (2209508 'move' _0_tmp[2209503](2209505 '.v' c[2209498] _0_tmp[2209429]))
    ref _1_this[2209510]:channel(true,dynamic,false)[1061136] "temp"
    (2209515 'move' _1_this[2209510](2209512 '.v' c[2209498] _1_this[2209431]))
    val _2_rvfDerefTmp[2209518]:ioLiteral[238841] "temp"
    (2209523 'move' _2_rvfDerefTmp[2209518](2209520 '.v' c[2209498] _2_rvfDerefTmp[2209433]))
    val _3_rvfDerefTmp[2209526]:locale[28] "temp"
    (2209531 'move' _3_rvfDerefTmp[2209526](2209528 '.v' c[2209498] _3_rvfDerefTmp[2209435]))
    ref _4_error[2209534]:Error[167984] "temp"
    (2209539 'move' _4_error[2209534](2209536 '.v' c[2209498] _4_error[2209437]))
    (2209501 call on_fn[1565680] _1_this[2209510] _2_rvfDerefTmp[2209518] _3_rvfDerefTmp[2209526] _4_error[2209534])
    (2209542 return _void[55])
  }
  function wrapon_fn[2209632](const in arg dummy_locale_arg[2209634]:chpl_localeID_t[209352], in arg buf[2209636]:c_void_ptr[149], in arg buf_size[2209638]:int(64)[13], in arg c[2209640]:_class_localson_fn[2209568]) : void[4] "on block"
  {
    val _0_tmp[2209645]:chpl_localeID_t[209352] "temp"
    (2209650 'move' _0_tmp[2209645](2209647 '.v' c[2209640] _0_tmp[2209571]))
    ref _1_this[2209652]:channel(true,dynamic,false)[1061136] "temp"
    (2209657 'move' _1_this[2209652](2209654 '.v' c[2209640] _1_this[2209573]))
    val _2_x[2209660]:real(64)[16] "temp"
    (2209665 'move' _2_x[2209660](2209662 '.v' c[2209640] _2_x[2209575]))
    val _3_rvfDerefTmp[2209668]:locale[28] "temp"
    (2209673 'move' _3_rvfDerefTmp[2209668](2209670 '.v' c[2209640] _3_rvfDerefTmp[2209577]))
    ref _4_error[2209676]:Error[167984] "temp"
    (2209681 'move' _4_error[2209676](2209678 '.v' c[2209640] _4_error[2209579]))
    (2209643 call on_fn[1578648] _1_this[2209652] _2_x[2209660] _3_rvfDerefTmp[2209668] _4_error[2209676])
    (2209684 return _void[55])
  }
  function wrapon_fn[2209774](const in arg dummy_locale_arg[2209776]:chpl_localeID_t[209352], in arg buf[2209778]:c_void_ptr[149], in arg buf_size[2209780]:int(64)[13], in arg c[2209782]:_class_localson_fn[2209710]) : void[4] "on block"
  {
    val _0_tmp[2209787]:chpl_localeID_t[209352] "temp"
    (2209792 'move' _0_tmp[2209787](2209789 '.v' c[2209782] _0_tmp[2209713]))
    val _1_rvfDerefTmp[2209794]:channel(true,dynamic,true)[1022014] "temp"
    (2209799 'move' _1_rvfDerefTmp[2209794](2209796 '.v' c[2209782] _1_rvfDerefTmp[2209715]))
    ref _2_args[2209802]:(string,ioNewline)[1589826] "temp"
    (2209807 'move' _2_args[2209802](2209804 '.v' c[2209782] _2_args[2209717]))
    val _3_rvfDerefTmp[2209810]:locale[28] "temp"
    (2209815 'move' _3_rvfDerefTmp[2209810](2209812 '.v' c[2209782] _3_rvfDerefTmp[2209719]))
    ref _4_error[2209818]:Error[167984] "temp"
    (2209823 'move' _4_error[2209818](2209820 '.v' c[2209782] _4_error[2209721]))
    (2209785 call on_fn[1589701] _1_rvfDerefTmp[2209794] _2_args[2209802] _3_rvfDerefTmp[2209810] _4_error[2209818])
    (2209826 return _void[55])
  }
  function wrapon_fn[2210793](const in arg dummy_locale_arg[2210795]:chpl_localeID_t[209352], in arg buf[2210797]:c_void_ptr[149], in arg buf_size[2210799]:int(64)[13], in arg c[2210801]:_class_localson_fn[2210753]) : void[4] "on block"
  {
    val _0_tmp[2210806]:chpl_localeID_t[209352] "temp"
    (2210811 'move' _0_tmp[2210806](2210808 '.v' c[2210801] _0_tmp[2210756]))
    ref _1_this[2210813]:channel(false,dynamic,true)[985816] "temp"
    (2210818 'move' _1_this[2210813](2210815 '.v' c[2210801] _1_this[2210758]))
    (2210804 call on_fn[1611238] _1_this[2210813])
    (2210821 return _void[55])
  }
  function wrapon_fn[2212584](const in arg dummy_locale_arg[2212586]:chpl_localeID_t[209352], in arg buf[2212588]:c_void_ptr[149], in arg buf_size[2212590]:int(64)[13], in arg c[2212592]:_class_localson_fn[2212544]) : void[4] "on block"
  {
    val _0_tmp[2212597]:chpl_localeID_t[209352] "temp"
    (2212602 'move' _0_tmp[2212597](2212599 '.v' c[2212592] _0_tmp[2212547]))
    ref _1_this[2212604]:channel(true,dynamic,true)[1022014] "temp"
    (2212609 'move' _1_this[2212604](2212606 '.v' c[2212592] _1_this[2212549]))
    (2212595 call on_fn[1674217] _1_this[2212604])
    (2212612 return _void[55])
  }
  function wrapon_fn[2212760](const in arg dummy_locale_arg[2212762]:chpl_localeID_t[209352], in arg buf[2212764]:c_void_ptr[149], in arg buf_size[2212766]:int(64)[13], in arg c[2212768]:_class_localson_fn[2212720]) : void[4] "on block"
  {
    val _0_tmp[2212773]:chpl_localeID_t[209352] "temp"
    (2212778 'move' _0_tmp[2212773](2212775 '.v' c[2212768] _0_tmp[2212723]))
    ref _1_this[2212780]:channel(true,dynamic,false)[1061136] "temp"
    (2212785 'move' _1_this[2212780](2212782 '.v' c[2212768] _1_this[2212725]))
    (2212771 call on_fn[1676381] _1_this[2212780])
    (2212788 return _void[55])
  }
  function wrapon_fn[2213021](const in arg dummy_locale_arg[2213023]:chpl_localeID_t[209352], in arg buf[2213025]:c_void_ptr[149], in arg buf_size[2213027]:int(64)[13], in arg c[2213029]:_class_localson_fn[2212981]) : void[4] "on block"
  {
    val _0_tmp[2213034]:chpl_localeID_t[209352] "temp"
    (2213039 'move' _0_tmp[2213034](2213036 '.v' c[2213029] _0_tmp[2212984]))
    ref _1_this[2213041]:channel(false,dynamic,false)[1080871] "temp"
    (2213046 'move' _1_this[2213041](2213043 '.v' c[2213029] _1_this[2212986]))
    (2213032 call on_fn[1680635] _1_this[2213041])
    (2213049 return _void[55])
  }
}