AST dump for LocalesArray after pass lowerErrorHandling.
Module use list: ChapelStandard 

{
  function chpl__init_LocalesArray[416021]() : void[4] "insert line file info" "module init" "resolved"
  {
    (113644 call chpl_init_rootLocale[92495])
    (479202 'end of statement')
    (648176 'move' call_tmp[648173](113647 call _instance[782816] rootLocale[91514]))
    (1353083 'move' coerce_tmp[1353079](1353081 'deref' call_tmp[648173]))
    (1353090 'move' coerce_tmp[1353085](1353087 'cast' borrowed BaseLocale?[984503] coerce_tmp[1353079]))
    (648181 'move' call_tmp[648178](113653 call _cast[1305500] coerce_tmp[1353085]))
    (648186 'move' call_tmp[648183](113655 call postfix![1305724] call_tmp[648178]))
    (648193 'move' call_tmp[648190](113661 call getDefaultLocaleArray[89596] call_tmp[648183]))
    (542640 'move' Locales[113662] call_tmp[648190])
    (113665 'end of statement')
    (648200 'move' call_tmp[648197](113667 call _dom[1346788] Locales[113662]))
    (542642 'move' LocaleSpace[113670](1353096 call chpl__initCopy[1353098] call_tmp[648197]))
    (113673 'end of statement' Locales[113662])
    (515719 return _void[55])
  }
  ref Locales[113662]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "const" "locale private" "reference to a const" "ref var"
  const LocaleSpace[113670]:domain(1,int(64),false)[1252658] "dead at end of block" "const" "insert auto destroy"
  ref call_tmp[648173]:_ref(unmanaged BaseLocale?)[982458] "dead at end of block" "maybe param" "temp"
  val call_tmp[648178]:borrowed RootLocale?[415472] "dead at end of block" "expr temp" "maybe param" "temp"
  val call_tmp[648183]:RootLocale[89694] "dead at end of block" "expr temp" "maybe param" "temp"
  ref call_tmp[648190]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287098] "dead at end of block" "maybe param" "reference to a const" "temp"
  val coerce_tmp[1353079]:unmanaged BaseLocale?[415466] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  val coerce_tmp[1353085]:borrowed BaseLocale?[984503] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
  val call_tmp[648197]:domain(1,int(64),false)[1252658] "dead at end of block" "maybe param" "temp"
}