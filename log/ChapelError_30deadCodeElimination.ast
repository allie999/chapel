AST dump for ChapelError after pass deadCodeElimination.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2051829] val _runtime_hdr[2051830]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051832]:chpl_localeID_t[209352] ref _1_this[2051834]:chpl_TaskErrors[168348] val _2_err[2051836]:Error[167984]
  function chpl__init_ChapelError[416055]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522378 return _void[55])
  }
  function Error[167984].message[167975](const in arg this[167994]:Error[167984], ref arg _retArg[1804450]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    ref call_tmp[2177176]:string[26] "dead after last mention" "maybe param" "temp"
    (2177178 'move' call_tmp[2177176](2177180 '.' this[167994] _msg[167930]))
    val ret[2166188]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166190]:string[26] "dead after last mention" "temp"
    (2166193 call init=[30774] tmp[2166190] call_tmp[2177176])
    (2166196 'move' ret[2166188] tmp[2166190])
    (1804452 '=' _retArg[1804450] ret[2166188])
    (1804456 return _void[55])
  }
  function Error[167984].deinit[811765](const in arg this[811769]:Error[167984]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788258]
    ref _field_destructor_tmp_[1788256]:string[26] "temp"
    (1788263 'move' _field_destructor_tmp_[1788256](1788260 '.' this[811769] _msg[167930]))
    (1788265 call deinit[30834] _field_destructor_tmp_[1788256])
    (811777 return _void[55])
  }
  type Error[167984] val super[355736]:object[22] "super class" val _next[167912]:Error[167984] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function NilThrownError[168029].message[168004](const in arg this[168031]:NilThrownError[168029], ref arg _retArg[1814756]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    val inlineImm[2166790]:string[26] "temp"
    (2166793 'move' inlineImm[2166790] "thrown error was nil")
    ref i_x[2166795]:string[26] "temp"
    (2166799 'move' i_x[2166795](2166797 'set reference' inlineImm[2166790]))
    val ret[2166802]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166804]:string[26] "dead after last mention" "temp"
    (2166807 call init=[30774] tmp[2166804] i_x[2166795])
    (2166810 'move' ret[2166802] tmp[2166804])
    (1814758 '=' _retArg[1814756] ret[2166802])
    (1814762 return _void[55])
  }
  function NilThrownError[168029].deinit[811869](const in arg this[811873]:NilThrownError[168029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1788283]
    val _parent_destructor_tmp_[1788278]:Error[167984] "temp"
    (1788285 'move' _parent_destructor_tmp_[1788278](1788279 'cast' Error[167984] this[811873]))
    ref _field_destructor_tmp_[2177227]:string[26] "temp"
    (2177229 'move' _field_destructor_tmp_[2177227](2177231 '.' _parent_destructor_tmp_[1788278] _msg[167930]))
    (2177235 call deinit[30834] _field_destructor_tmp_[2177227])
    (811881 return _void[55])
  }
  function _new[969568]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[969570]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969614]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969617 'move' call_tmp[969614](969626 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969629]:c_void_ptr[149] "dead after last mention" "temp"
    (969631 'move' cast_tmp[969629](969582 call chpl_here_alloc[187788] call_tmp[969614] 2))
    (969585 'move' initTemp[969570](969633 'cast' NilThrownError[168029] cast_tmp[969629]))
    (969587 'setcid' initTemp[969570])
    val super_tmp[2177285]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2177287 'move' super_tmp[2177285](2177289 '.v' initTemp[969570] super[355738]))
    val super_tmp[2177292]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2177294 'move' super_tmp[2177292](2177296 '.v' super_tmp[2177285] super[355736]))
    (2177299 'setcid' super_tmp[2177292])
    val call_tmp[2177301]:object[22] "dead at end of block" "maybe param" "temp"
    (2177303 'move' call_tmp[2177301](2177305 'cast' object[22] super_tmp[2177285]))
    (2177308 'setcid' call_tmp[2177301])
    val init_coerce_tmp[2177310]:Error[167984] "dead after last mention" "temp"
    (2177312 'move' init_coerce_tmp[2177310](2177314 'cast' Error[167984] nil[44]))
    (2177317 '.=' super_tmp[2177285] _next[167912] init_coerce_tmp[2177310])
    (2177321 '.=' super_tmp[2177285] thrownLine[167917] 0)
    (2177325 '.=' super_tmp[2177285] thrownFileId[167925] 0)
    val tmp[2177329]:string[26] "dead after last mention" "temp"
    (2177332 call init[30763] tmp[2177329])
    (2177334 '.=' super_tmp[2177285] _msg[167930] tmp[2177329])
    (2177338 '.=' super_tmp[2177285] _hasThrowInfo[167936] 0)
    (2177342 'setcid' super_tmp[2177285])
    val call_tmp[2177344]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2177346 'move' call_tmp[2177344](2177348 'cast' Error[167984] initTemp[969570]))
    (2177351 'setcid' call_tmp[2177344])
    (2177353 'setcid' initTemp[969570])
    (969609 return initTemp[969570])
  }
  type NilThrownError[168029] val super[355738]:Error[167984] "super class"
  function DecodeError[168140].message[168115](const in arg this[168142]:DecodeError[168140], ref arg _retArg[1814786]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    val inlineImm[2166815]:string[26] "temp"
    (2166818 'move' inlineImm[2166815] "Invalid UTF-8 character encountered.")
    ref i_x[2166820]:string[26] "temp"
    (2166824 'move' i_x[2166820](2166822 'set reference' inlineImm[2166815]))
    val ret[2166827]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166829]:string[26] "dead after last mention" "temp"
    (2166832 call init=[30774] tmp[2166829] i_x[2166820])
    (2166835 'move' ret[2166827] tmp[2166829])
    (1814788 '=' _retArg[1814786] ret[2166827])
    (1814792 return _void[55])
  }
  function DecodeError[168140].deinit[812181](const in arg this[812185]:DecodeError[168140]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788295]
    val _parent_destructor_tmp_[1788290]:Error[167984] "temp"
    (1788297 'move' _parent_destructor_tmp_[1788290](1788291 'cast' Error[167984] this[812185]))
    ref _field_destructor_tmp_[2177242]:string[26] "temp"
    (2177244 'move' _field_destructor_tmp_[2177242](2177246 '.' _parent_destructor_tmp_[1788290] _msg[167930]))
    (2177250 call deinit[30834] _field_destructor_tmp_[2177242])
    (812193 return _void[55])
  }
  function _new[965661]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[965663]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965707 'move' call_tmp[965704](965718 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965721]:c_void_ptr[149] "dead after last mention" "temp"
    (965723 'move' cast_tmp[965721](965675 call chpl_here_alloc[187788] call_tmp[965704] 1))
    (965678 'move' initTemp[965663](965725 'cast' DecodeError[168140] cast_tmp[965721]))
    (965680 'setcid' initTemp[965663])
    val super_tmp[2177358]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2177360 'move' super_tmp[2177358](2177362 '.v' initTemp[965663] super[355744]))
    val super_tmp[2177365]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2177367 'move' super_tmp[2177365](2177369 '.v' super_tmp[2177358] super[355736]))
    (2177372 'setcid' super_tmp[2177365])
    val call_tmp[2177374]:object[22] "dead at end of block" "maybe param" "temp"
    (2177376 'move' call_tmp[2177374](2177378 'cast' object[22] super_tmp[2177358]))
    (2177381 'setcid' call_tmp[2177374])
    val init_coerce_tmp[2177383]:Error[167984] "dead after last mention" "temp"
    (2177385 'move' init_coerce_tmp[2177383](2177387 'cast' Error[167984] nil[44]))
    (2177390 '.=' super_tmp[2177358] _next[167912] init_coerce_tmp[2177383])
    (2177394 '.=' super_tmp[2177358] thrownLine[167917] 0)
    (2177398 '.=' super_tmp[2177358] thrownFileId[167925] 0)
    val tmp[2177402]:string[26] "dead after last mention" "temp"
    (2177405 call init[30763] tmp[2177402])
    (2177407 '.=' super_tmp[2177358] _msg[167930] tmp[2177402])
    (2177411 '.=' super_tmp[2177358] _hasThrowInfo[167936] 0)
    (2177415 'setcid' super_tmp[2177358])
    val call_tmp[2177417]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2177419 'move' call_tmp[2177417](2177421 'cast' Error[167984] initTemp[965663]))
    (2177424 'setcid' call_tmp[2177417])
    (2177426 'setcid' initTemp[965663])
    (965699 return initTemp[965663])
  }
  type DecodeError[168140] val super[355744]:Error[167984] "super class"
  function IllegalArgumentError[168246].deinit[812221](const in arg this[812225]:IllegalArgumentError[168246]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1788307]
    val _parent_destructor_tmp_[1788302]:Error[167984] "temp"
    (1788309 'move' _parent_destructor_tmp_[1788302](1788303 'cast' Error[167984] this[812225]))
    ref _field_destructor_tmp_[2177257]:string[26] "temp"
    (2177259 'move' _field_destructor_tmp_[2177257](2177261 '.' _parent_destructor_tmp_[1788302] _msg[167930]))
    (2177265 call deinit[30834] _field_destructor_tmp_[2177257])
    (812233 return _void[55])
  }
  function _new[1064126](const  ref arg info[1064135]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1064128]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064172]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064175 'move' call_tmp[1064172](1064186 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064189]:c_void_ptr[149] "dead after last mention" "temp"
    (1064191 'move' cast_tmp[1064189](1064143 call chpl_here_alloc[187788] call_tmp[1064172] 26))
    (1064146 'move' initTemp[1064128](1064193 'cast' IllegalArgumentError[168246] cast_tmp[1064189]))
    (1064148 'setcid' initTemp[1064128])
    val super_tmp[2136963]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2136965 'move' super_tmp[2136963](2136967 '.v' initTemp[1064128] super[355746]))
    val super_tmp[2136970]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2136972 'move' super_tmp[2136970](2136974 '.v' super_tmp[2136963] super[355736]))
    (2136977 'setcid' super_tmp[2136970])
    val call_tmp[2136979]:object[22] "dead at end of block" "maybe param" "temp"
    (2136981 'move' call_tmp[2136979](2136983 'cast' object[22] super_tmp[2136963]))
    (2136986 'setcid' call_tmp[2136979])
    val init_coerce_tmp[2136988]:Error[167984] "dead after last mention" "temp"
    (2136990 'move' init_coerce_tmp[2136988](2136992 'cast' Error[167984] nil[44]))
    (2136995 '.=' super_tmp[2136963] _next[167912] init_coerce_tmp[2136988])
    (2136999 '.=' super_tmp[2136963] thrownLine[167917] 0)
    (2137003 '.=' super_tmp[2136963] thrownFileId[167925] 0)
    val tmp[2137007]:string[26] "dead after last mention" "temp"
    (2137010 call init=[30774] tmp[2137007] info[1064135])
    (2137013 '.=' super_tmp[2136963] _msg[167930] tmp[2137007])
    (2137017 '.=' super_tmp[2136963] _hasThrowInfo[167936] 0)
    (2137021 'setcid' super_tmp[2136963])
    val call_tmp[2137023]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2137025 'move' call_tmp[2137023](2137027 'cast' Error[167984] initTemp[1064128]))
    (2137030 'setcid' call_tmp[2137023])
    (2137032 'setcid' initTemp[1064128])
    (1064167 return initTemp[1064128])
  }
  function _new[1073521](const  ref arg formal[1073530]:string[26], const  ref arg info[1073533]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1073523]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073568]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073571 'move' call_tmp[1073568](1073582 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073585]:c_void_ptr[149] "dead after last mention" "temp"
    (1073587 'move' cast_tmp[1073585](1073539 call chpl_here_alloc[187788] call_tmp[1073568] 26))
    (1073542 'move' initTemp[1073523](1073589 'cast' IllegalArgumentError[168246] cast_tmp[1073585]))
    (1073544 'setcid' initTemp[1073523])
    const-val call_tmp[2137037]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2137039]:string[26] "temp"
    (2137042 call +[38345] "illegal argument '" formal[1073530] ret_tmp[2137039])
    (2137046 'move' call_tmp[2137037] ret_tmp[2137039])
    const-val call_tmp[2137049]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2137051]:string[26] "temp"
    (2137054 call +[38345] call_tmp[2137037] "': " ret_tmp[2137051])
    (2137058 'move' call_tmp[2137049] ret_tmp[2137051])
    const-val call_tmp[2137061]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2137063]:string[26] "temp"
    (2137066 call +[38345] call_tmp[2137049] info[1073533] ret_tmp[2137063])
    (2137070 'move' call_tmp[2137061] ret_tmp[2137063])
    const-val msg[2137073]:string[26] "dead at end of block" "insert auto destroy"
    (2137075 'move' msg[2137073] call_tmp[2137061])
    val super_tmp[2137078]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2137080 'move' super_tmp[2137078](2137082 '.v' initTemp[1073523] super[355746]))
    ref i_msg[2137085]:string[26] "temp"
    (2137087 'move' i_msg[2137085](2137089 'set reference' msg[2137073]))
    val super_tmp[2137091]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2137093 'move' super_tmp[2137091](2137095 '.v' super_tmp[2137078] super[355736]))
    (2137098 'setcid' super_tmp[2137091])
    val call_tmp[2137100]:object[22] "dead at end of block" "maybe param" "temp"
    (2137102 'move' call_tmp[2137100](2137104 'cast' object[22] super_tmp[2137078]))
    (2137107 'setcid' call_tmp[2137100])
    val init_coerce_tmp[2137109]:Error[167984] "dead after last mention" "temp"
    (2137111 'move' init_coerce_tmp[2137109](2137113 'cast' Error[167984] nil[44]))
    (2137116 '.=' super_tmp[2137078] _next[167912] init_coerce_tmp[2137109])
    (2137120 '.=' super_tmp[2137078] thrownLine[167917] 0)
    (2137124 '.=' super_tmp[2137078] thrownFileId[167925] 0)
    val tmp[2137128]:string[26] "dead after last mention" "temp"
    (2137131 call init=[30774] tmp[2137128] i_msg[2137085])
    (2137134 '.=' super_tmp[2137078] _msg[167930] tmp[2137128])
    (2137138 '.=' super_tmp[2137078] _hasThrowInfo[167936] 0)
    (2137142 'setcid' super_tmp[2137078])
    val call_tmp[2137144]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2137146 'move' call_tmp[2137144](2137148 'cast' Error[167984] initTemp[1073523]))
    (2137151 'setcid' call_tmp[2137144])
    (2137153 'setcid' initTemp[1073523])
    ref i_x[2137155]:string[26] "temp"
    (2137157 'move' i_x[2137155](2137159 'set reference' msg[2137073]))
    (2137162 call deinit[30834] i_x[2137155])
    ref i_x[2137164]:string[26] "temp"
    (2137166 'move' i_x[2137164](2137168 'set reference' call_tmp[2137049]))
    (2137171 call deinit[30834] i_x[2137164])
    ref i_x[2137173]:string[26] "temp"
    (2137175 'move' i_x[2137173](2137177 'set reference' call_tmp[2137037]))
    (2137180 call deinit[30834] i_x[2137173])
    (1073563 return initTemp[1073523])
  }
  type IllegalArgumentError[168246] val super[355746]:Error[167984] "super class"
  function chpl_TaskErrors[168348].append[168282](ref arg this[168350]:chpl_TaskErrors[168348], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679506]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679509 'move' call_tmp[679506](168320 '_wide_get_locale' this[168350]))
    val isdirect[2051812]:bool[10] "temp"
    (2051817 'move' isdirect[2051812](2051814 call chpl_doDirectExecuteOn[187469] call_tmp[679506]))
    if isdirect[2051812]
    {
      (2051821 call on_fn[935357] this[168350] err[168279])
    }
    {
      val _args_foron_fn[2051839]:_class_localson_fn[2051829] "temp"
      (2051843 'move' _args_foron_fn[2051839](2051841 'stack allocate class' _class_localson_fn[2051829]))
      (2051845 '.=' _args_foron_fn[2051839] _0_tmp[2051832] call_tmp[679506])
      ref tmp[2051849]:chpl_TaskErrors[168348] "temp"
      (2051853 'move' tmp[2051849](2051851 'set reference' this[168350]))
      (2051855 '.=' _args_foron_fn[2051839] _1_this[2051834] tmp[2051849])
      (2051859 '.=' _args_foron_fn[2051839] _2_err[2051836] err[168279])
      val _args_vforon_fn[2051863]:c_void_ptr[149] "temp"
      (2051867 'move' _args_vforon_fn[2051863](2051865 'cast_to_void_star' _args_foron_fn[2051839]))
      val _args_sizeon_fn[2051869]:int(64)[13] "temp"
      (2051873 'move' _args_sizeon_fn[2051869](2051871 'sizeof_bundle' _class_localson_fn[2051829]))
      on(2051913 call wrapon_fn[2051875] call_tmp[679506] _args_vforon_fn[2051863] _args_sizeon_fn[2051869] _args_foron_fn[2051839])
    }
    (522182 return _void[55])
  }
  function chpl_TaskErrors[168348].empty[168336](const  ref arg this[168354]:chpl_TaskErrors[168348]) : bool[10] "method" "primary method" "resolved"
  {
    val coerce_tmp[1235577]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235581 'move' coerce_tmp[1235577](2320026 '.v' this[168354] _head[168266]))
    val coerce_tmp[1235583]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235588 'move' coerce_tmp[1235583](1235585 'cast' object[22] coerce_tmp[1235577]))
    const-val call_tmp[2076464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2076466 'move' call_tmp[2076464](2076468 'ptr_eq' coerce_tmp[1235583] nil[44]))
    (522188 return call_tmp[2076464])
  }
  function chpl_TaskErrors[168348].init[812287](ref arg this[812290]:chpl_TaskErrors[168348], in arg _head[812293]:Error[167984], const  ref arg _errorsLock[812308]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945195]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945198 'move' _formal_tmp__errorsLock[945195] _errorsLock[812308])
    (812322 '.=' this[812290] _head[168266] _head[812293])
    (812325 '.=' this[812290] _errorsLock[168271] _formal_tmp__errorsLock[945195])
    (812329 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:Error[167984] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function TaskErrors[169702].deinit[168832](const in arg this[169716]:TaskErrors[169702]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    val coerce_tmp[1235717]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235721 'move' coerce_tmp[1235717](2320037 '.v' this[169716] errorsArray[168374]))
    const-val call_tmp[2243423]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2243425 'move' call_tmp[2243423](2243427 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2243430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2243432 'move' call_tmp[2243430](2243434 'ptr_neq' coerce_tmp[1235717] call_tmp[2243423]))
    if call_tmp[2243430]
    {
      const-val coerce_tmp[1235754]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1235758 'move' coerce_tmp[1235754](2320043 '.v' this[169716] nErrors[168363]))
      const-val call_tmp[2080036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080038 'move' call_tmp[2080036](2080040 '<' coerce_tmp[1235754] 0))
      if call_tmp[2080036]
      {
        (1933281 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2312981]:int(64)[13] "temp"
      val tmp_x1[2312983]:int(64)[13] "temp"
      const-val call_tmp[2083022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083024 'move' call_tmp[2083022](2083026 '==' coerce_tmp[1235754] 0))
      if call_tmp[2083022]
      {
        const-val call_tmp[2080876]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2080878 'move' call_tmp[2080876](2080880 'cast' uint(64)[115] 0))
        const-val call_tmp[2144306]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2144308 'move' call_tmp[2144306](2144310 '-' call_tmp[2080876] 1))
        const-val call_tmp[2144686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2144688 'move' call_tmp[2144686](2144690 'cast' int(64)[13] call_tmp[2144306]))
        (2312989 'move' tmp_x0[2312981] 0)
        (2312994 'move' tmp_x1[2312983] call_tmp[2144686])
      }
      {
        const-val call_tmp[2108025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2108027 'move' call_tmp[2108025](2108029 '-' coerce_tmp[1235754] 1))
        const-val call_tmp[2089734]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2089736 'move' call_tmp[2089734](2089738 '+' 0 call_tmp[2108025]))
        (2312999 'move' tmp_x0[2312981] 0)
        (2313004 'move' tmp_x1[2312983] call_tmp[2089734])
      }
      (1933390 'noop')
      (1933410 'noop')
      (1933429 'noop')
      const-val _ic__F1_high[2302753]:int(64)[13] "temp"
      (2149090 'move' _ic__F1_high[2302753] tmp_x1[2312983])
      val i[1933458]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1933462 'move' i[1933458] 0)
      (1933514 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2312981] tmp_x1[2312983] 1 tmp_x0[2312981] tmp_x1[2312983] 1)
      CForLoop[1933521] hazard
      {
        val coerce_tmp[1933629]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1933631 'move' coerce_tmp[1933629](2320051 '.v' this[169716] errorsArray[168374]))
        ref call_tmp[2150933]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
        (2150935 'move' call_tmp[2150933](2150937 'array_get' coerce_tmp[1933629] i[1933458]))
        (1933642 call clear[1236066] call_tmp[2150933])
        {
          (1933530 '=' i[1933458] tmp_x0[2312981])
        }
        {
          (1933541 '<=' i[1933458] _ic__F1_high[2302753])
        }
        {
          (1933547 '+=' i[1933458] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[1933584]
      label _endchpl_direct_counted_range_iter_helper[1933592]
      label _endchpl_direct_counted_range_iter[1875039]
      val coerce_tmp[1237187]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237191 'move' coerce_tmp[1237187](2320057 '.v' this[169716] errorsArray[168374]))
      const-val coerce_tmp[1237193]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237199 'move' coerce_tmp[1237193](1237195 'cast' c_void_ptr[149] coerce_tmp[1237187]))
      (2165568 call chpl_here_free[188127] coerce_tmp[1237193])
    }
    label _enddeinit[1788011]
    val _parent_destructor_tmp_[1788006]:Error[167984] "temp"
    (1788013 'move' _parent_destructor_tmp_[1788006](1788007 'cast' Error[167984] this[169716]))
    ref _field_destructor_tmp_[2177212]:string[26] "temp"
    (2177214 'move' _field_destructor_tmp_[2177212](2177216 '.' _parent_destructor_tmp_[1788006] _msg[167930]))
    (2177220 call deinit[30834] _field_destructor_tmp_[2177212])
    (522199 return _void[55])
  }
  type _ic_these_TaskErrors[1237995] val super[1237996]:object[22] "super class" val more[1237998]:int(64)[13] const-val F0_this[1972664]:TaskErrors[169702] val F1__iterator[1972668]:_ic_chpl_direct_counted_range_iter[1103809] val F2__iterator[1972670]:_ic_chpl_direct_counted_range_iter_helper[1103559] const F3_tmp[1972672]:2*int(64)[1040075] val F4__iterator[1972674]:_ic_chpl_direct_param_stride_range_iter[1103305] val F5_i[1972676]:int(64)[13] ref value[1972678]:owned Error?[966432]
  type _ir_these_TaskErrors[1238001] const-val F0_this[1972666]:TaskErrors[169702]
  function TaskErrors[169702].message[169077](const in arg this[169728]:TaskErrors[169702], ref arg _retArg[1814794]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val ret[522227]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544645 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1744530 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1744535 call init[30763] maxMsg[169092])
    val first[169099]:Error[167984] "dead at end of block" "insert auto destroy"
    (1744543 'move' first[169099](1744541 'cast' Error[167984] nil[44]))
    val last[169106]:Error[167984] "dead at end of block" "insert auto destroy"
    (1744548 'move' last[169106](1744546 'cast' Error[167984] nil[44]))
    const-val _ic__F0_this[2297242]:TaskErrors[169702] "temp"
    (2139040 'move' _ic__F0_this[2297242] this[169728])
    const-val this[1875687]:TaskErrors[169702] "temp"
    (1875692 'move' this[1875687] this[169728])
    const-val coerce_tmp[1875279]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1875281 'move' coerce_tmp[1875279](2320087 '.v' this[1875687] nErrors[168363]))
    const-val call_tmp[2080046]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080048 'move' call_tmp[2080046](2080050 '<' coerce_tmp[1875279] 0))
    if call_tmp[2080046]
    {
      (1934259 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2313089]:int(64)[13] "temp"
    val tmp_x1[2313091]:int(64)[13] "temp"
    const-val call_tmp[2083037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083039 'move' call_tmp[2083037](2083041 '==' coerce_tmp[1875279] 0))
    if call_tmp[2083037]
    {
      const-val call_tmp[2080886]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080888 'move' call_tmp[2080886](2080890 'cast' uint(64)[115] 0))
      const-val call_tmp[2144316]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144318 'move' call_tmp[2144316](2144320 '-' call_tmp[2080886] 1))
      const-val call_tmp[2144696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144698 'move' call_tmp[2144696](2144700 'cast' int(64)[13] call_tmp[2144316]))
      (2313097 'move' tmp_x0[2313089] 0)
      (2313102 'move' tmp_x1[2313091] call_tmp[2144696])
    }
    {
      const-val call_tmp[2108035]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2108037 'move' call_tmp[2108035](2108039 '-' coerce_tmp[1875279] 1))
      const-val call_tmp[2089744]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2089746 'move' call_tmp[2089744](2089748 '+' 0 call_tmp[2108035]))
      (2313107 'move' tmp_x0[2313089] 0)
      (2313112 'move' tmp_x1[2313091] call_tmp[2089744])
    }
    (1934368 'noop')
    (1934388 'noop')
    (1934407 'noop')
    const-val _ic__F1_high[2302772]:int(64)[13] "temp"
    (2149153 'move' _ic__F1_high[2302772] tmp_x1[2313091])
    val i[1934436]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1934440 'move' i[1934436] 0)
    (1934492 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2313089] tmp_x1[2313091] 1 tmp_x0[2313089] tmp_x1[2313091] 1)
    CForLoop[1934499] hazard
    {
      const-val this[1934601]:TaskErrors[169702] "temp"
      (1934603 'move' this[1934601] _ic__F0_this[2297242])
      val coerce_tmp[1934613]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1934615 'move' coerce_tmp[1934613](2320095 '.v' this[1934601] errorsArray[168374]))
      ref call_tmp[2150943]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
      (2150945 'move' call_tmp[2150943](2150947 'array_get' coerce_tmp[1934613] i[1934436]))
      val coerce_tmp[1934627]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1934629 'move' coerce_tmp[1934627](1934632 call borrow[1235847] call_tmp[2150943]))
      val coerce_tmp[1934634]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1934636 'move' coerce_tmp[1934634](1934638 'cast' object[22] coerce_tmp[1934627]))
      const-val call_tmp[2077894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077896 'move' call_tmp[2077894](2077898 'ptr_neq' coerce_tmp[1934634] nil[44]))
      if call_tmp[2077894]
      {
        const-val this[1934660]:TaskErrors[169702] "temp"
        (1934662 'move' this[1934660] _ic__F0_this[2297242])
        val coerce_tmp[1934672]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1934674 'move' coerce_tmp[1934672](2320101 '.v' this[1934660] errorsArray[168374]))
        ref call_tmp[2150953]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
        (2150955 'move' call_tmp[2150953](2150957 'array_get' coerce_tmp[1934672] i[1934436]))
        val coerce_tmp[2290688]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290690 'move' coerce_tmp[2290688](2290692 '.v' call_tmp[2150953] chpl_p[966427]))
        val coerce_tmp[2290695]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290697 'move' coerce_tmp[2290695](2290699 'cast' object[22] coerce_tmp[2290688]))
        const-val call_tmp[2290702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2290704 'move' call_tmp[2290702](2290706 'ptr_eq' coerce_tmp[2290695] nil[44]))
        if call_tmp[2290702]
        {
          (2290712 call nilCheckHalt[210169] "argument to ! is nil")
        }
        val coerce_tmp[2290715]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290717 'move' coerce_tmp[2290715](2290719 '.v' call_tmp[2150953] chpl_p[966427]))
        const-val tmp[1934710]:bool[10] "dead after last mention" "maybe param" "temp"
        (1934712 'move' tmp[1934710](1934715 call ==[38823] minMsg[169087] ""))
        val tmp[1934718]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[1934710]
        {
          (1934732 'move' tmp[1934718] 1)
        }
        {
          const-val call_tmp[1934738]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1934740]:int(32)[95] "temp"
          (1934742 'move' _virtual_method_tmp_[1934740](1934744 'getcid' coerce_tmp[2290715]))
          val ret_tmp[1934746]:string[26] "temp"
          (1934748 'virtual method call' message[167975] _virtual_method_tmp_[1934740] coerce_tmp[2290715] ret_tmp[1934746])
          (1934753 'move' call_tmp[1934738] ret_tmp[1934746])
          val coerce_tmp[2123576]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123578 'move' coerce_tmp[2123576](2123580 '.v' call_tmp[1934738] buff[30740]))
          const-val coerce_tmp[2123583]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123585 'move' coerce_tmp[2123583](2123587 '.v' call_tmp[1934738] buffLen[30722]))
          const-val coerce_tmp[2123590]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123592 'move' coerce_tmp[2123590](2123594 '.v' call_tmp[1934738] locale_id[30757]))
          val coerce_tmp[2123597]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123599 'move' coerce_tmp[2123597](2123601 '.v' minMsg[169087] buff[30740]))
          const-val coerce_tmp[2123604]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123606 'move' coerce_tmp[2123604](2123608 '.v' minMsg[169087] buffLen[30722]))
          const-val coerce_tmp[2123611]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2123613 'move' coerce_tmp[2123611](2123615 '.v' minMsg[169087] locale_id[30757]))
          val ret[2123618]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2123620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2123622 'move' call_tmp[2123620](2123624 '==' coerce_tmp[2123590] chpl_nodeID[208207]))
          val tmp[2123627]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2123620]
          {
            const-val call_tmp[2123631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123633 'move' call_tmp[2123631](2123635 '==' coerce_tmp[2123611] chpl_nodeID[208207]))
            (2123638 'move' tmp[2123627] call_tmp[2123631])
          }
          {
            (2123642 'move' tmp[2123627] 0)
          }
          if tmp[2123627]
          {
            val ret[2123648]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2123650]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2123652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123654 'move' call_tmp[2123652](2123656 '<' coerce_tmp[2123583] coerce_tmp[2123604]))
            if call_tmp[2123652]
            {
              (2123661 'move' tmp[2123650] coerce_tmp[2123583])
            }
            {
              (2123665 'move' tmp[2123650] coerce_tmp[2123604])
            }
            const-val coerce_tmp[2123674]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2123676 'move' coerce_tmp[2123674](2123678 'cast' c_void_ptr[149] coerce_tmp[2123576]))
            const-val coerce_tmp[2123681]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2123683 'move' coerce_tmp[2123681](2123685 'cast' c_void_ptr[149] coerce_tmp[2123597]))
            const-val call_tmp[2123688]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123690 'move' call_tmp[2123688](2123692 '<' tmp[2123650] 0))
            if call_tmp[2123688]
            {
              (2123698 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2123701]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123703 'move' call_tmp[2123701](2123705 'cast' uint(64)[115] tmp[2123650]))
            const-val call_tmp[2123708]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123710 'move' call_tmp[2123708](2123713 call memcmp[1206481] coerce_tmp[2123674] coerce_tmp[2123681] call_tmp[2123701]))
            const-val call_tmp[2123717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123719 'move' call_tmp[2123717](2123721 'cast' int(64)[13] call_tmp[2123708]))
            const-val call_tmp[2123729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123731 'move' call_tmp[2123729](2123733 '==' call_tmp[2123717] 0))
            if call_tmp[2123729]
            {
              const-val call_tmp[2123738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123740 'move' call_tmp[2123738](2123742 '<' tmp[2123650] coerce_tmp[2123583]))
              if call_tmp[2123738]
              {
                (2123747 'move' ret[2123648] 1)
                gotoReturn _end__strcmp_local[2123772] _end__strcmp_local[2123772]
              }
              const-val call_tmp[2123753]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123755 'move' call_tmp[2123753](2123757 '<' tmp[2123650] coerce_tmp[2123604]))
              if call_tmp[2123753]
              {
                (2123762 'move' ret[2123648] -1)
                gotoReturn _end__strcmp_local[2123772] _end__strcmp_local[2123772]
              }
            }
            (2123769 'move' ret[2123648] call_tmp[2123717])
            label _end__strcmp_local[2123772]
            (2123774 'move' ret[2123618] ret[2123648])
            gotoReturn _end__strcmp[2124358] _end__strcmp[2124358]
          }
          {
            const-val call_tmp[2123780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2123782 'move' call_tmp[2123780](2123784 '!=' coerce_tmp[2123590] chpl_nodeID[208207]))
            val tmp[2123787]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2123780]
            {
              const-val call_tmp[2123791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123793 'move' call_tmp[2123791](2123795 '==' coerce_tmp[2123611] chpl_nodeID[208207]))
              (2123798 'move' tmp[2123787] call_tmp[2123791])
            }
            {
              (2123802 'move' tmp[2123787] 0)
            }
            if tmp[2123787]
            {
              val call_tmp[2123808]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2123810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2123812 'move' coerce_tmp[2123810](2123814 'cast' int(64)[13] coerce_tmp[2123590]))
              (2123817 'move' call_tmp[2123808](2123820 call bufferCopyRemote[172830] coerce_tmp[2123810] coerce_tmp[2123576] coerce_tmp[2123583]))
              val ret[2123829]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2123831]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2123833]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123835 'move' call_tmp[2123833](2123837 '<' coerce_tmp[2123583] coerce_tmp[2123604]))
              if call_tmp[2123833]
              {
                (2123842 'move' tmp[2123831] coerce_tmp[2123583])
              }
              {
                (2123846 'move' tmp[2123831] coerce_tmp[2123604])
              }
              const-val coerce_tmp[2123855]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2123857 'move' coerce_tmp[2123855](2123859 'cast' c_void_ptr[149] call_tmp[2123808]))
              const-val coerce_tmp[2123862]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2123864 'move' coerce_tmp[2123862](2123866 'cast' c_void_ptr[149] coerce_tmp[2123597]))
              const-val call_tmp[2123869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123871 'move' call_tmp[2123869](2123873 '<' tmp[2123831] 0))
              if call_tmp[2123869]
              {
                (2123879 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2123882]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123884 'move' call_tmp[2123882](2123886 'cast' uint(64)[115] tmp[2123831]))
              const-val call_tmp[2123889]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123891 'move' call_tmp[2123889](2123894 call memcmp[1206481] coerce_tmp[2123855] coerce_tmp[2123862] call_tmp[2123882]))
              const-val call_tmp[2123898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123900 'move' call_tmp[2123898](2123902 'cast' int(64)[13] call_tmp[2123889]))
              const-val call_tmp[2123910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123912 'move' call_tmp[2123910](2123914 '==' call_tmp[2123898] 0))
              if call_tmp[2123910]
              {
                const-val call_tmp[2123919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2123921 'move' call_tmp[2123919](2123923 '<' tmp[2123831] coerce_tmp[2123583]))
                if call_tmp[2123919]
                {
                  (2123928 'move' ret[2123829] 1)
                  gotoReturn _end__strcmp_local[2123953] _end__strcmp_local[2123953]
                }
                const-val call_tmp[2123934]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2123936 'move' call_tmp[2123934](2123938 '<' tmp[2123831] coerce_tmp[2123604]))
                if call_tmp[2123934]
                {
                  (2123943 'move' ret[2123829] -1)
                  gotoReturn _end__strcmp_local[2123953] _end__strcmp_local[2123953]
                }
              }
              (2123950 'move' ret[2123829] call_tmp[2123898])
              label _end__strcmp_local[2123953]
              const-val coerce_tmp[2123955]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2123957 'move' coerce_tmp[2123955](2123959 'cast' c_void_ptr[149] call_tmp[2123808]))
              (2123963 call chpl_here_free[188127] coerce_tmp[2123955])
              (2123965 'move' ret[2123618] ret[2123829])
              gotoReturn _end__strcmp[2124358] _end__strcmp[2124358]
            }
            {
              const-val call_tmp[2123971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2123973 'move' call_tmp[2123971](2123975 '==' coerce_tmp[2123590] chpl_nodeID[208207]))
              val tmp[2123978]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2123971]
              {
                const-val call_tmp[2123982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2123984 'move' call_tmp[2123982](2123986 '!=' coerce_tmp[2123611] chpl_nodeID[208207]))
                (2123989 'move' tmp[2123978] call_tmp[2123982])
              }
              {
                (2123993 'move' tmp[2123978] 0)
              }
              if tmp[2123978]
              {
                val call_tmp[2123999]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2124001]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124003 'move' coerce_tmp[2124001](2124005 'cast' int(64)[13] coerce_tmp[2123611]))
                (2124008 'move' call_tmp[2123999](2124011 call bufferCopyRemote[172830] coerce_tmp[2124001] coerce_tmp[2123597] coerce_tmp[2123604]))
                val ret[2124020]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2124022]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2124024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124026 'move' call_tmp[2124024](2124028 '<' coerce_tmp[2123583] coerce_tmp[2123604]))
                if call_tmp[2124024]
                {
                  (2124033 'move' tmp[2124022] coerce_tmp[2123583])
                }
                {
                  (2124037 'move' tmp[2124022] coerce_tmp[2123604])
                }
                const-val coerce_tmp[2124046]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124048 'move' coerce_tmp[2124046](2124050 'cast' c_void_ptr[149] coerce_tmp[2123576]))
                const-val coerce_tmp[2124053]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124055 'move' coerce_tmp[2124053](2124057 'cast' c_void_ptr[149] call_tmp[2123999]))
                const-val call_tmp[2124060]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124062 'move' call_tmp[2124060](2124064 '<' tmp[2124022] 0))
                if call_tmp[2124060]
                {
                  (2124070 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2124073]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124075 'move' call_tmp[2124073](2124077 'cast' uint(64)[115] tmp[2124022]))
                const-val call_tmp[2124080]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124082 'move' call_tmp[2124080](2124085 call memcmp[1206481] coerce_tmp[2124046] coerce_tmp[2124053] call_tmp[2124073]))
                const-val call_tmp[2124089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124091 'move' call_tmp[2124089](2124093 'cast' int(64)[13] call_tmp[2124080]))
                const-val call_tmp[2124101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124103 'move' call_tmp[2124101](2124105 '==' call_tmp[2124089] 0))
                if call_tmp[2124101]
                {
                  const-val call_tmp[2124110]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2124112 'move' call_tmp[2124110](2124114 '<' tmp[2124022] coerce_tmp[2123583]))
                  if call_tmp[2124110]
                  {
                    (2124119 'move' ret[2124020] 1)
                    gotoReturn _end__strcmp_local[2124144] _end__strcmp_local[2124144]
                  }
                  const-val call_tmp[2124125]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2124127 'move' call_tmp[2124125](2124129 '<' tmp[2124022] coerce_tmp[2123604]))
                  if call_tmp[2124125]
                  {
                    (2124134 'move' ret[2124020] -1)
                    gotoReturn _end__strcmp_local[2124144] _end__strcmp_local[2124144]
                  }
                }
                (2124141 'move' ret[2124020] call_tmp[2124089])
                label _end__strcmp_local[2124144]
                const-val coerce_tmp[2124146]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2124148 'move' coerce_tmp[2124146](2124150 'cast' c_void_ptr[149] call_tmp[2123999]))
                (2124154 call chpl_here_free[188127] coerce_tmp[2124146])
                (2124156 'move' ret[2123618] ret[2124020])
                gotoReturn _end__strcmp[2124358] _end__strcmp[2124358]
              }
              {
                val call_tmp[2124162]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2124164]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124166 'move' coerce_tmp[2124164](2124168 'cast' int(64)[13] coerce_tmp[2123590]))
                (2124171 'move' call_tmp[2124162](2124174 call bufferCopyRemote[172830] coerce_tmp[2124164] coerce_tmp[2123576] coerce_tmp[2123583]))
                val call_tmp[2124183]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2124185]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124187 'move' coerce_tmp[2124185](2124189 'cast' int(64)[13] coerce_tmp[2123611]))
                (2124192 'move' call_tmp[2124183](2124195 call bufferCopyRemote[172830] coerce_tmp[2124185] coerce_tmp[2123597] coerce_tmp[2123604]))
                val ret[2124204]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2124206]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2124208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124210 'move' call_tmp[2124208](2124212 '<' coerce_tmp[2123583] coerce_tmp[2123604]))
                if call_tmp[2124208]
                {
                  (2124217 'move' tmp[2124206] coerce_tmp[2123583])
                }
                {
                  (2124221 'move' tmp[2124206] coerce_tmp[2123604])
                }
                const-val coerce_tmp[2124230]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124232 'move' coerce_tmp[2124230](2124234 'cast' c_void_ptr[149] call_tmp[2124162]))
                const-val coerce_tmp[2124237]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2124239 'move' coerce_tmp[2124237](2124241 'cast' c_void_ptr[149] call_tmp[2124183]))
                const-val call_tmp[2124244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124246 'move' call_tmp[2124244](2124248 '<' tmp[2124206] 0))
                if call_tmp[2124244]
                {
                  (2124254 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2124257]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124259 'move' call_tmp[2124257](2124261 'cast' uint(64)[115] tmp[2124206]))
                const-val call_tmp[2124264]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124266 'move' call_tmp[2124264](2124269 call memcmp[1206481] coerce_tmp[2124230] coerce_tmp[2124237] call_tmp[2124257]))
                const-val call_tmp[2124273]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124275 'move' call_tmp[2124273](2124277 'cast' int(64)[13] call_tmp[2124264]))
                const-val call_tmp[2124285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2124287 'move' call_tmp[2124285](2124289 '==' call_tmp[2124273] 0))
                if call_tmp[2124285]
                {
                  const-val call_tmp[2124294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2124296 'move' call_tmp[2124294](2124298 '<' tmp[2124206] coerce_tmp[2123583]))
                  if call_tmp[2124294]
                  {
                    (2124303 'move' ret[2124204] 1)
                    gotoReturn _end__strcmp_local[2124328] _end__strcmp_local[2124328]
                  }
                  const-val call_tmp[2124309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2124311 'move' call_tmp[2124309](2124313 '<' tmp[2124206] coerce_tmp[2123604]))
                  if call_tmp[2124309]
                  {
                    (2124318 'move' ret[2124204] -1)
                    gotoReturn _end__strcmp_local[2124328] _end__strcmp_local[2124328]
                  }
                }
                (2124325 'move' ret[2124204] call_tmp[2124273])
                label _end__strcmp_local[2124328]
                const-val coerce_tmp[2124330]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2124332 'move' coerce_tmp[2124330](2124334 'cast' c_void_ptr[149] call_tmp[2124162]))
                (2124338 call chpl_here_free[188127] coerce_tmp[2124330])
                const-val coerce_tmp[2124340]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2124342 'move' coerce_tmp[2124340](2124344 'cast' c_void_ptr[149] call_tmp[2124183]))
                (2124348 call chpl_here_free[188127] coerce_tmp[2124340])
                (2124350 'move' ret[2123618] ret[2124204])
                gotoReturn _end__strcmp[2124358] _end__strcmp[2124358]
              }
            }
          }
          label _end__strcmp[2124358]
          const-val call_tmp[2124360]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2124362 'move' call_tmp[2124360](2124364 '<' ret[2123618] 0))
          (1934767 'move' tmp[1934718] call_tmp[2124360])
          ref i_x[2097387]:string[26] "temp"
          (2097391 'move' i_x[2097387](2097389 'set reference' call_tmp[1934738]))
          (2097395 call deinit[30834] i_x[2097387])
        }
        if tmp[1934718]
        {
          const-val call_tmp[1934781]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1934783]:int(32)[95] "temp"
          (1934785 'move' _virtual_method_tmp_[1934783](1934787 'getcid' coerce_tmp[2290715]))
          val ret_tmp[1934789]:string[26] "temp"
          (1934791 'virtual method call' message[167975] _virtual_method_tmp_[1934783] coerce_tmp[2290715] ret_tmp[1934789])
          (1934796 'move' call_tmp[1934781] ret_tmp[1934789])
          (1934800 call =[38272] minMsg[169087] call_tmp[1934781])
          ref i_x[2097399]:string[26] "temp"
          (2097403 'move' i_x[2097399](2097401 'set reference' call_tmp[1934781]))
          (2097407 call deinit[30834] i_x[2097399])
        }
        const-val tmp[1934807]:bool[10] "dead after last mention" "maybe param" "temp"
        (1934809 'move' tmp[1934807](1934812 call ==[38823] maxMsg[169092] ""))
        val tmp[1934815]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[1934807]
        {
          (1934829 'move' tmp[1934815] 1)
        }
        {
          const-val call_tmp[1934835]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1934837]:int(32)[95] "temp"
          (1934839 'move' _virtual_method_tmp_[1934837](1934841 'getcid' coerce_tmp[2290715]))
          val ret_tmp[1934843]:string[26] "temp"
          (1934845 'virtual method call' message[167975] _virtual_method_tmp_[1934837] coerce_tmp[2290715] ret_tmp[1934843])
          (1934850 'move' call_tmp[1934835] ret_tmp[1934843])
          val coerce_tmp[2125218]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125220 'move' coerce_tmp[2125218](2125222 '.v' call_tmp[1934835] buff[30740]))
          const-val coerce_tmp[2125225]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125227 'move' coerce_tmp[2125225](2125229 '.v' call_tmp[1934835] buffLen[30722]))
          const-val coerce_tmp[2125232]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125234 'move' coerce_tmp[2125232](2125236 '.v' call_tmp[1934835] locale_id[30757]))
          val coerce_tmp[2125239]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125241 'move' coerce_tmp[2125239](2125243 '.v' maxMsg[169092] buff[30740]))
          const-val coerce_tmp[2125246]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125248 'move' coerce_tmp[2125246](2125250 '.v' maxMsg[169092] buffLen[30722]))
          const-val coerce_tmp[2125253]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2125255 'move' coerce_tmp[2125253](2125257 '.v' maxMsg[169092] locale_id[30757]))
          val ret[2125260]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2125262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2125264 'move' call_tmp[2125262](2125266 '==' coerce_tmp[2125232] chpl_nodeID[208207]))
          val tmp[2125269]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2125262]
          {
            const-val call_tmp[2125273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125275 'move' call_tmp[2125273](2125277 '==' coerce_tmp[2125253] chpl_nodeID[208207]))
            (2125280 'move' tmp[2125269] call_tmp[2125273])
          }
          {
            (2125284 'move' tmp[2125269] 0)
          }
          if tmp[2125269]
          {
            val ret[2125290]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2125292]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2125294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125296 'move' call_tmp[2125294](2125298 '<' coerce_tmp[2125225] coerce_tmp[2125246]))
            if call_tmp[2125294]
            {
              (2125303 'move' tmp[2125292] coerce_tmp[2125225])
            }
            {
              (2125307 'move' tmp[2125292] coerce_tmp[2125246])
            }
            const-val coerce_tmp[2125316]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2125318 'move' coerce_tmp[2125316](2125320 'cast' c_void_ptr[149] coerce_tmp[2125218]))
            const-val coerce_tmp[2125323]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2125325 'move' coerce_tmp[2125323](2125327 'cast' c_void_ptr[149] coerce_tmp[2125239]))
            const-val call_tmp[2125330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125332 'move' call_tmp[2125330](2125334 '<' tmp[2125292] 0))
            if call_tmp[2125330]
            {
              (2125340 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2125343]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125345 'move' call_tmp[2125343](2125347 'cast' uint(64)[115] tmp[2125292]))
            const-val call_tmp[2125350]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125352 'move' call_tmp[2125350](2125355 call memcmp[1206481] coerce_tmp[2125316] coerce_tmp[2125323] call_tmp[2125343]))
            const-val call_tmp[2125359]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125361 'move' call_tmp[2125359](2125363 'cast' int(64)[13] call_tmp[2125350]))
            const-val call_tmp[2125371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125373 'move' call_tmp[2125371](2125375 '==' call_tmp[2125359] 0))
            if call_tmp[2125371]
            {
              const-val call_tmp[2125380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125382 'move' call_tmp[2125380](2125384 '<' tmp[2125292] coerce_tmp[2125225]))
              if call_tmp[2125380]
              {
                (2125389 'move' ret[2125290] 1)
                gotoReturn _end__strcmp_local[2125414] _end__strcmp_local[2125414]
              }
              const-val call_tmp[2125395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125397 'move' call_tmp[2125395](2125399 '<' tmp[2125292] coerce_tmp[2125246]))
              if call_tmp[2125395]
              {
                (2125404 'move' ret[2125290] -1)
                gotoReturn _end__strcmp_local[2125414] _end__strcmp_local[2125414]
              }
            }
            (2125411 'move' ret[2125290] call_tmp[2125359])
            label _end__strcmp_local[2125414]
            (2125416 'move' ret[2125260] ret[2125290])
            gotoReturn _end__strcmp[2126000] _end__strcmp[2126000]
          }
          {
            const-val call_tmp[2125422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2125424 'move' call_tmp[2125422](2125426 '!=' coerce_tmp[2125232] chpl_nodeID[208207]))
            val tmp[2125429]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2125422]
            {
              const-val call_tmp[2125433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125435 'move' call_tmp[2125433](2125437 '==' coerce_tmp[2125253] chpl_nodeID[208207]))
              (2125440 'move' tmp[2125429] call_tmp[2125433])
            }
            {
              (2125444 'move' tmp[2125429] 0)
            }
            if tmp[2125429]
            {
              val call_tmp[2125450]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2125452]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2125454 'move' coerce_tmp[2125452](2125456 'cast' int(64)[13] coerce_tmp[2125232]))
              (2125459 'move' call_tmp[2125450](2125462 call bufferCopyRemote[172830] coerce_tmp[2125452] coerce_tmp[2125218] coerce_tmp[2125225]))
              val ret[2125471]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2125473]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2125475]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125477 'move' call_tmp[2125475](2125479 '<' coerce_tmp[2125225] coerce_tmp[2125246]))
              if call_tmp[2125475]
              {
                (2125484 'move' tmp[2125473] coerce_tmp[2125225])
              }
              {
                (2125488 'move' tmp[2125473] coerce_tmp[2125246])
              }
              const-val coerce_tmp[2125497]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2125499 'move' coerce_tmp[2125497](2125501 'cast' c_void_ptr[149] call_tmp[2125450]))
              const-val coerce_tmp[2125504]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2125506 'move' coerce_tmp[2125504](2125508 'cast' c_void_ptr[149] coerce_tmp[2125239]))
              const-val call_tmp[2125511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125513 'move' call_tmp[2125511](2125515 '<' tmp[2125473] 0))
              if call_tmp[2125511]
              {
                (2125521 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2125524]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125526 'move' call_tmp[2125524](2125528 'cast' uint(64)[115] tmp[2125473]))
              const-val call_tmp[2125531]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125533 'move' call_tmp[2125531](2125536 call memcmp[1206481] coerce_tmp[2125497] coerce_tmp[2125504] call_tmp[2125524]))
              const-val call_tmp[2125540]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125542 'move' call_tmp[2125540](2125544 'cast' int(64)[13] call_tmp[2125531]))
              const-val call_tmp[2125552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125554 'move' call_tmp[2125552](2125556 '==' call_tmp[2125540] 0))
              if call_tmp[2125552]
              {
                const-val call_tmp[2125561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125563 'move' call_tmp[2125561](2125565 '<' tmp[2125473] coerce_tmp[2125225]))
                if call_tmp[2125561]
                {
                  (2125570 'move' ret[2125471] 1)
                  gotoReturn _end__strcmp_local[2125595] _end__strcmp_local[2125595]
                }
                const-val call_tmp[2125576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125578 'move' call_tmp[2125576](2125580 '<' tmp[2125473] coerce_tmp[2125246]))
                if call_tmp[2125576]
                {
                  (2125585 'move' ret[2125471] -1)
                  gotoReturn _end__strcmp_local[2125595] _end__strcmp_local[2125595]
                }
              }
              (2125592 'move' ret[2125471] call_tmp[2125540])
              label _end__strcmp_local[2125595]
              const-val coerce_tmp[2125597]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2125599 'move' coerce_tmp[2125597](2125601 'cast' c_void_ptr[149] call_tmp[2125450]))
              (2125605 call chpl_here_free[188127] coerce_tmp[2125597])
              (2125607 'move' ret[2125260] ret[2125471])
              gotoReturn _end__strcmp[2126000] _end__strcmp[2126000]
            }
            {
              const-val call_tmp[2125613]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2125615 'move' call_tmp[2125613](2125617 '==' coerce_tmp[2125232] chpl_nodeID[208207]))
              val tmp[2125620]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2125613]
              {
                const-val call_tmp[2125624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125626 'move' call_tmp[2125624](2125628 '!=' coerce_tmp[2125253] chpl_nodeID[208207]))
                (2125631 'move' tmp[2125620] call_tmp[2125624])
              }
              {
                (2125635 'move' tmp[2125620] 0)
              }
              if tmp[2125620]
              {
                val call_tmp[2125641]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2125643]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125645 'move' coerce_tmp[2125643](2125647 'cast' int(64)[13] coerce_tmp[2125253]))
                (2125650 'move' call_tmp[2125641](2125653 call bufferCopyRemote[172830] coerce_tmp[2125643] coerce_tmp[2125239] coerce_tmp[2125246]))
                val ret[2125662]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2125664]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2125666]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125668 'move' call_tmp[2125666](2125670 '<' coerce_tmp[2125225] coerce_tmp[2125246]))
                if call_tmp[2125666]
                {
                  (2125675 'move' tmp[2125664] coerce_tmp[2125225])
                }
                {
                  (2125679 'move' tmp[2125664] coerce_tmp[2125246])
                }
                const-val coerce_tmp[2125688]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125690 'move' coerce_tmp[2125688](2125692 'cast' c_void_ptr[149] coerce_tmp[2125218]))
                const-val coerce_tmp[2125695]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125697 'move' coerce_tmp[2125695](2125699 'cast' c_void_ptr[149] call_tmp[2125641]))
                const-val call_tmp[2125702]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125704 'move' call_tmp[2125702](2125706 '<' tmp[2125664] 0))
                if call_tmp[2125702]
                {
                  (2125712 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2125715]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125717 'move' call_tmp[2125715](2125719 'cast' uint(64)[115] tmp[2125664]))
                const-val call_tmp[2125722]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125724 'move' call_tmp[2125722](2125727 call memcmp[1206481] coerce_tmp[2125688] coerce_tmp[2125695] call_tmp[2125715]))
                const-val call_tmp[2125731]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125733 'move' call_tmp[2125731](2125735 'cast' int(64)[13] call_tmp[2125722]))
                const-val call_tmp[2125743]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125745 'move' call_tmp[2125743](2125747 '==' call_tmp[2125731] 0))
                if call_tmp[2125743]
                {
                  const-val call_tmp[2125752]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2125754 'move' call_tmp[2125752](2125756 '<' tmp[2125664] coerce_tmp[2125225]))
                  if call_tmp[2125752]
                  {
                    (2125761 'move' ret[2125662] 1)
                    gotoReturn _end__strcmp_local[2125786] _end__strcmp_local[2125786]
                  }
                  const-val call_tmp[2125767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2125769 'move' call_tmp[2125767](2125771 '<' tmp[2125664] coerce_tmp[2125246]))
                  if call_tmp[2125767]
                  {
                    (2125776 'move' ret[2125662] -1)
                    gotoReturn _end__strcmp_local[2125786] _end__strcmp_local[2125786]
                  }
                }
                (2125783 'move' ret[2125662] call_tmp[2125731])
                label _end__strcmp_local[2125786]
                const-val coerce_tmp[2125788]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2125790 'move' coerce_tmp[2125788](2125792 'cast' c_void_ptr[149] call_tmp[2125641]))
                (2125796 call chpl_here_free[188127] coerce_tmp[2125788])
                (2125798 'move' ret[2125260] ret[2125662])
                gotoReturn _end__strcmp[2126000] _end__strcmp[2126000]
              }
              {
                val call_tmp[2125804]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2125806]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125808 'move' coerce_tmp[2125806](2125810 'cast' int(64)[13] coerce_tmp[2125232]))
                (2125813 'move' call_tmp[2125804](2125816 call bufferCopyRemote[172830] coerce_tmp[2125806] coerce_tmp[2125218] coerce_tmp[2125225]))
                val call_tmp[2125825]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2125827]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125829 'move' coerce_tmp[2125827](2125831 'cast' int(64)[13] coerce_tmp[2125253]))
                (2125834 'move' call_tmp[2125825](2125837 call bufferCopyRemote[172830] coerce_tmp[2125827] coerce_tmp[2125239] coerce_tmp[2125246]))
                val ret[2125846]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2125848]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2125850]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125852 'move' call_tmp[2125850](2125854 '<' coerce_tmp[2125225] coerce_tmp[2125246]))
                if call_tmp[2125850]
                {
                  (2125859 'move' tmp[2125848] coerce_tmp[2125225])
                }
                {
                  (2125863 'move' tmp[2125848] coerce_tmp[2125246])
                }
                const-val coerce_tmp[2125872]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125874 'move' coerce_tmp[2125872](2125876 'cast' c_void_ptr[149] call_tmp[2125804]))
                const-val coerce_tmp[2125879]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2125881 'move' coerce_tmp[2125879](2125883 'cast' c_void_ptr[149] call_tmp[2125825]))
                const-val call_tmp[2125886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125888 'move' call_tmp[2125886](2125890 '<' tmp[2125848] 0))
                if call_tmp[2125886]
                {
                  (2125896 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2125899]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125901 'move' call_tmp[2125899](2125903 'cast' uint(64)[115] tmp[2125848]))
                const-val call_tmp[2125906]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125908 'move' call_tmp[2125906](2125911 call memcmp[1206481] coerce_tmp[2125872] coerce_tmp[2125879] call_tmp[2125899]))
                const-val call_tmp[2125915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125917 'move' call_tmp[2125915](2125919 'cast' int(64)[13] call_tmp[2125906]))
                const-val call_tmp[2125927]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2125929 'move' call_tmp[2125927](2125931 '==' call_tmp[2125915] 0))
                if call_tmp[2125927]
                {
                  const-val call_tmp[2125936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2125938 'move' call_tmp[2125936](2125940 '<' tmp[2125848] coerce_tmp[2125225]))
                  if call_tmp[2125936]
                  {
                    (2125945 'move' ret[2125846] 1)
                    gotoReturn _end__strcmp_local[2125970] _end__strcmp_local[2125970]
                  }
                  const-val call_tmp[2125951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2125953 'move' call_tmp[2125951](2125955 '<' tmp[2125848] coerce_tmp[2125246]))
                  if call_tmp[2125951]
                  {
                    (2125960 'move' ret[2125846] -1)
                    gotoReturn _end__strcmp_local[2125970] _end__strcmp_local[2125970]
                  }
                }
                (2125967 'move' ret[2125846] call_tmp[2125915])
                label _end__strcmp_local[2125970]
                const-val coerce_tmp[2125972]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2125974 'move' coerce_tmp[2125972](2125976 'cast' c_void_ptr[149] call_tmp[2125804]))
                (2125980 call chpl_here_free[188127] coerce_tmp[2125972])
                const-val coerce_tmp[2125982]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2125984 'move' coerce_tmp[2125982](2125986 'cast' c_void_ptr[149] call_tmp[2125825]))
                (2125990 call chpl_here_free[188127] coerce_tmp[2125982])
                (2125992 'move' ret[2125260] ret[2125846])
                gotoReturn _end__strcmp[2126000] _end__strcmp[2126000]
              }
            }
          }
          label _end__strcmp[2126000]
          const-val call_tmp[2126002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2126004 'move' call_tmp[2126002](2126006 '>' ret[2125260] 0))
          (1934864 'move' tmp[1934815] call_tmp[2126002])
          ref i_x[2097411]:string[26] "temp"
          (2097415 'move' i_x[2097411](2097413 'set reference' call_tmp[1934835]))
          (2097419 call deinit[30834] i_x[2097411])
        }
        if tmp[1934815]
        {
          const-val call_tmp[1934878]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1934880]:int(32)[95] "temp"
          (1934882 'move' _virtual_method_tmp_[1934880](1934884 'getcid' coerce_tmp[2290715]))
          val ret_tmp[1934886]:string[26] "temp"
          (1934888 'virtual method call' message[167975] _virtual_method_tmp_[1934880] coerce_tmp[2290715] ret_tmp[1934886])
          (1934893 'move' call_tmp[1934878] ret_tmp[1934886])
          (1934897 call =[38272] maxMsg[169092] call_tmp[1934878])
          ref i_x[2097423]:string[26] "temp"
          (2097427 'move' i_x[2097423](2097425 'set reference' call_tmp[1934878]))
          (2097431 call deinit[30834] i_x[2097423])
        }
        ref i_lhs[2138647]:int(64)[13] "temp"
        (2138651 'move' i_lhs[2138647](2138649 'set reference' n[169081]))
        (2138659 '+=' i_lhs[2138647] 1)
      }
      {
        (1934508 '=' i[1934436] tmp_x0[2313089])
      }
      {
        (1934519 '<=' i[1934436] _ic__F1_high[2302772])
      }
      {
        (1934525 '+=' i[1934436] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1934562]
    label _endchpl_direct_counted_range_iter_helper[1934570]
    label _endchpl_direct_counted_range_iter[1875455]
    label _endthese[1875460]
    const-val _ic__F0_this[2297265]:TaskErrors[169702] "temp"
    (2139092 'move' _ic__F0_this[2297265] this[169728])
    const-val this[1876012]:TaskErrors[169702] "temp"
    (1876017 'move' this[1876012] this[169728])
    const-val coerce_tmp[1875724]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1875726 'move' coerce_tmp[1875724](2320119 '.v' this[1876012] nErrors[168363]))
    const-val call_tmp[2080056]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2080058 'move' call_tmp[2080056](2080060 '<' coerce_tmp[1875724] 0))
    if call_tmp[2080056]
    {
      (1935000 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2313197]:int(64)[13] "temp"
    val tmp_x1[2313199]:int(64)[13] "temp"
    const-val call_tmp[2083052]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083054 'move' call_tmp[2083052](2083056 '==' coerce_tmp[1875724] 0))
    if call_tmp[2083052]
    {
      const-val call_tmp[2080896]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080898 'move' call_tmp[2080896](2080900 'cast' uint(64)[115] 0))
      const-val call_tmp[2144326]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144328 'move' call_tmp[2144326](2144330 '-' call_tmp[2080896] 1))
      const-val call_tmp[2144706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2144708 'move' call_tmp[2144706](2144710 'cast' int(64)[13] call_tmp[2144326]))
      (2313205 'move' tmp_x0[2313197] 0)
      (2313210 'move' tmp_x1[2313199] call_tmp[2144706])
    }
    {
      const-val call_tmp[2108045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2108047 'move' call_tmp[2108045](2108049 '-' coerce_tmp[1875724] 1))
      const-val call_tmp[2089754]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2089756 'move' call_tmp[2089754](2089758 '+' 0 call_tmp[2108045]))
      (2313215 'move' tmp_x0[2313197] 0)
      (2313220 'move' tmp_x1[2313199] call_tmp[2089754])
    }
    (1935109 'noop')
    (1935129 'noop')
    (1935148 'noop')
    const-val _ic__F1_high[2302791]:int(64)[13] "temp"
    (2149216 'move' _ic__F1_high[2302791] tmp_x1[2313199])
    val i[1935177]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1935181 'move' i[1935177] 0)
    (1935233 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2313197] tmp_x1[2313199] 1 tmp_x0[2313197] tmp_x1[2313199] 1)
    CForLoop[1935240] hazard
    {
      const-val this[1935342]:TaskErrors[169702] "temp"
      (1935344 'move' this[1935342] _ic__F0_this[2297265])
      val coerce_tmp[1935354]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1935356 'move' coerce_tmp[1935354](2320127 '.v' this[1935342] errorsArray[168374]))
      ref call_tmp[2150963]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
      (2150965 'move' call_tmp[2150963](2150967 'array_get' coerce_tmp[1935354] i[1935177]))
      val coerce_tmp[1935368]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1935370 'move' coerce_tmp[1935368](1935373 call borrow[1235847] call_tmp[2150963]))
      val coerce_tmp[1935375]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1935377 'move' coerce_tmp[1935375](1935379 'cast' object[22] coerce_tmp[1935368]))
      const-val call_tmp[2077904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077906 'move' call_tmp[2077904](2077908 'ptr_neq' coerce_tmp[1935375] nil[44]))
      if call_tmp[2077904]
      {
        const-val this[1935401]:TaskErrors[169702] "temp"
        (1935403 'move' this[1935401] _ic__F0_this[2297265])
        val coerce_tmp[1935413]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1935415 'move' coerce_tmp[1935413](2320133 '.v' this[1935401] errorsArray[168374]))
        ref call_tmp[2150973]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
        (2150975 'move' call_tmp[2150973](2150977 'array_get' coerce_tmp[1935413] i[1935177]))
        val coerce_tmp[2290725]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290727 'move' coerce_tmp[2290725](2290729 '.v' call_tmp[2150973] chpl_p[966427]))
        val coerce_tmp[2290732]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290734 'move' coerce_tmp[2290732](2290736 'cast' object[22] coerce_tmp[2290725]))
        const-val call_tmp[2290739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2290741 'move' call_tmp[2290739](2290743 'ptr_eq' coerce_tmp[2290732] nil[44]))
        if call_tmp[2290739]
        {
          (2290749 call nilCheckHalt[210169] "argument to ! is nil")
        }
        val coerce_tmp[2290752]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2290754 'move' coerce_tmp[2290752](2290756 '.v' call_tmp[2150973] chpl_p[966427]))
        const-val call_tmp[1935451]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[1935453]:int(32)[95] "temp"
        (1935455 'move' _virtual_method_tmp_[1935453](1935457 'getcid' coerce_tmp[2290752]))
        val ret_tmp[1935459]:string[26] "temp"
        (1935461 'virtual method call' message[167975] _virtual_method_tmp_[1935453] coerce_tmp[2290752] ret_tmp[1935459])
        (1935466 'move' call_tmp[1935451] ret_tmp[1935459])
        const-val call_tmp[1935469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1935471 'move' call_tmp[1935469](1935474 call ==[38823] call_tmp[1935451] minMsg[169087]))
        if call_tmp[1935469]
        {
          val coerce_tmp[1935486]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1935488 'move' coerce_tmp[1935486](1935490 'cast' object[22] first[169099]))
          const-val call_tmp[2076664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2076666 'move' call_tmp[2076664](2076668 'ptr_eq' coerce_tmp[1935486] nil[44]))
          if call_tmp[2076664]
          {
            (2240711 '=' first[169099] coerce_tmp[2290752])
          }
          (2240723 '=' last[169106] coerce_tmp[2290752])
        }
        ref i_x[2097435]:string[26] "temp"
        (2097439 'move' i_x[2097435](2097437 'set reference' call_tmp[1935451]))
        (2097443 call deinit[30834] i_x[2097435])
      }
      {
        (1935249 '=' i[1935177] tmp_x0[2313197])
      }
      {
        (1935260 '<=' i[1935177] _ic__F1_high[2302791])
      }
      {
        (1935266 '+=' i[1935177] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[1935303]
    label _endchpl_direct_counted_range_iter_helper[1935311]
    label _endchpl_direct_counted_range_iter[1875900]
    label _endthese[1875905]
    val coerce_tmp[2121928]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121930 'move' coerce_tmp[2121928](2121932 '.v' minMsg[169087] buff[30740]))
    const-val coerce_tmp[2121935]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121937 'move' coerce_tmp[2121935](2121939 '.v' minMsg[169087] buffLen[30722]))
    const-val coerce_tmp[2121942]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121944 'move' coerce_tmp[2121942](2121946 '.v' minMsg[169087] locale_id[30757]))
    val coerce_tmp[2121949]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121951 'move' coerce_tmp[2121949](2121953 '.v' maxMsg[169092] buff[30740]))
    const-val coerce_tmp[2121956]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121958 'move' coerce_tmp[2121956](2121960 '.v' maxMsg[169092] buffLen[30722]))
    const-val coerce_tmp[2121963]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2121965 'move' coerce_tmp[2121963](2121967 '.v' maxMsg[169092] locale_id[30757]))
    val ret[2121970]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2121972]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2121974 'move' call_tmp[2121972](2121976 '==' coerce_tmp[2121942] chpl_nodeID[208207]))
    val tmp[2121979]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2121972]
    {
      const-val call_tmp[2121983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2121985 'move' call_tmp[2121983](2121987 '==' coerce_tmp[2121963] chpl_nodeID[208207]))
      (2121990 'move' tmp[2121979] call_tmp[2121983])
    }
    {
      (2121994 'move' tmp[2121979] 0)
    }
    if tmp[2121979]
    {
      val ret[2122000]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2122002]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2122004]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122006 'move' call_tmp[2122004](2122008 '<' coerce_tmp[2121935] coerce_tmp[2121956]))
      if call_tmp[2122004]
      {
        (2122013 'move' tmp[2122002] coerce_tmp[2121935])
      }
      {
        (2122017 'move' tmp[2122002] coerce_tmp[2121956])
      }
      const-val coerce_tmp[2122026]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2122028 'move' coerce_tmp[2122026](2122030 'cast' c_void_ptr[149] coerce_tmp[2121928]))
      const-val coerce_tmp[2122033]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2122035 'move' coerce_tmp[2122033](2122037 'cast' c_void_ptr[149] coerce_tmp[2121949]))
      const-val call_tmp[2122040]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122042 'move' call_tmp[2122040](2122044 '<' tmp[2122002] 0))
      if call_tmp[2122040]
      {
        (2122050 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
      }
      const-val call_tmp[2122053]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122055 'move' call_tmp[2122053](2122057 'cast' uint(64)[115] tmp[2122002]))
      const-val call_tmp[2122060]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122062 'move' call_tmp[2122060](2122065 call memcmp[1206481] coerce_tmp[2122026] coerce_tmp[2122033] call_tmp[2122053]))
      const-val call_tmp[2122069]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122071 'move' call_tmp[2122069](2122073 'cast' int(64)[13] call_tmp[2122060]))
      const-val call_tmp[2122081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122083 'move' call_tmp[2122081](2122085 '==' call_tmp[2122069] 0))
      if call_tmp[2122081]
      {
        const-val call_tmp[2122090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122092 'move' call_tmp[2122090](2122094 '<' tmp[2122002] coerce_tmp[2121935]))
        if call_tmp[2122090]
        {
          (2122099 'move' ret[2122000] 1)
          gotoReturn _end__strcmp_local[2122124] _end__strcmp_local[2122124]
        }
        const-val call_tmp[2122105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122107 'move' call_tmp[2122105](2122109 '<' tmp[2122002] coerce_tmp[2121956]))
        if call_tmp[2122105]
        {
          (2122114 'move' ret[2122000] -1)
          gotoReturn _end__strcmp_local[2122124] _end__strcmp_local[2122124]
        }
      }
      (2122121 'move' ret[2122000] call_tmp[2122069])
      label _end__strcmp_local[2122124]
      (2122126 'move' ret[2121970] ret[2122000])
      gotoReturn _end__strcmp[2122710] _end__strcmp[2122710]
    }
    {
      const-val call_tmp[2122132]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2122134 'move' call_tmp[2122132](2122136 '!=' coerce_tmp[2121942] chpl_nodeID[208207]))
      val tmp[2122139]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2122132]
      {
        const-val call_tmp[2122143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122145 'move' call_tmp[2122143](2122147 '==' coerce_tmp[2121963] chpl_nodeID[208207]))
        (2122150 'move' tmp[2122139] call_tmp[2122143])
      }
      {
        (2122154 'move' tmp[2122139] 0)
      }
      if tmp[2122139]
      {
        val call_tmp[2122160]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[2122162]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2122164 'move' coerce_tmp[2122162](2122166 'cast' int(64)[13] coerce_tmp[2121942]))
        (2122169 'move' call_tmp[2122160](2122172 call bufferCopyRemote[172830] coerce_tmp[2122162] coerce_tmp[2121928] coerce_tmp[2121935]))
        val ret[2122181]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2122183]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[2122185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122187 'move' call_tmp[2122185](2122189 '<' coerce_tmp[2121935] coerce_tmp[2121956]))
        if call_tmp[2122185]
        {
          (2122194 'move' tmp[2122183] coerce_tmp[2121935])
        }
        {
          (2122198 'move' tmp[2122183] coerce_tmp[2121956])
        }
        const-val coerce_tmp[2122207]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2122209 'move' coerce_tmp[2122207](2122211 'cast' c_void_ptr[149] call_tmp[2122160]))
        const-val coerce_tmp[2122214]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2122216 'move' coerce_tmp[2122214](2122218 'cast' c_void_ptr[149] coerce_tmp[2121949]))
        const-val call_tmp[2122221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122223 'move' call_tmp[2122221](2122225 '<' tmp[2122183] 0))
        if call_tmp[2122221]
        {
          (2122231 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
        }
        const-val call_tmp[2122234]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122236 'move' call_tmp[2122234](2122238 'cast' uint(64)[115] tmp[2122183]))
        const-val call_tmp[2122241]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122243 'move' call_tmp[2122241](2122246 call memcmp[1206481] coerce_tmp[2122207] coerce_tmp[2122214] call_tmp[2122234]))
        const-val call_tmp[2122250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122252 'move' call_tmp[2122250](2122254 'cast' int(64)[13] call_tmp[2122241]))
        const-val call_tmp[2122262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122264 'move' call_tmp[2122262](2122266 '==' call_tmp[2122250] 0))
        if call_tmp[2122262]
        {
          const-val call_tmp[2122271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122273 'move' call_tmp[2122271](2122275 '<' tmp[2122183] coerce_tmp[2121935]))
          if call_tmp[2122271]
          {
            (2122280 'move' ret[2122181] 1)
            gotoReturn _end__strcmp_local[2122305] _end__strcmp_local[2122305]
          }
          const-val call_tmp[2122286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122288 'move' call_tmp[2122286](2122290 '<' tmp[2122183] coerce_tmp[2121956]))
          if call_tmp[2122286]
          {
            (2122295 'move' ret[2122181] -1)
            gotoReturn _end__strcmp_local[2122305] _end__strcmp_local[2122305]
          }
        }
        (2122302 'move' ret[2122181] call_tmp[2122250])
        label _end__strcmp_local[2122305]
        const-val coerce_tmp[2122307]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2122309 'move' coerce_tmp[2122307](2122311 'cast' c_void_ptr[149] call_tmp[2122160]))
        (2122315 call chpl_here_free[188127] coerce_tmp[2122307])
        (2122317 'move' ret[2121970] ret[2122181])
        gotoReturn _end__strcmp[2122710] _end__strcmp[2122710]
      }
      {
        const-val call_tmp[2122323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2122325 'move' call_tmp[2122323](2122327 '==' coerce_tmp[2121942] chpl_nodeID[208207]))
        val tmp[2122330]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2122323]
        {
          const-val call_tmp[2122334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122336 'move' call_tmp[2122334](2122338 '!=' coerce_tmp[2121963] chpl_nodeID[208207]))
          (2122341 'move' tmp[2122330] call_tmp[2122334])
        }
        {
          (2122345 'move' tmp[2122330] 0)
        }
        if tmp[2122330]
        {
          val call_tmp[2122351]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2122353]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122355 'move' coerce_tmp[2122353](2122357 'cast' int(64)[13] coerce_tmp[2121963]))
          (2122360 'move' call_tmp[2122351](2122363 call bufferCopyRemote[172830] coerce_tmp[2122353] coerce_tmp[2121949] coerce_tmp[2121956]))
          val ret[2122372]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2122374]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2122376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122378 'move' call_tmp[2122376](2122380 '<' coerce_tmp[2121935] coerce_tmp[2121956]))
          if call_tmp[2122376]
          {
            (2122385 'move' tmp[2122374] coerce_tmp[2121935])
          }
          {
            (2122389 'move' tmp[2122374] coerce_tmp[2121956])
          }
          const-val coerce_tmp[2122398]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122400 'move' coerce_tmp[2122398](2122402 'cast' c_void_ptr[149] coerce_tmp[2121928]))
          const-val coerce_tmp[2122405]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122407 'move' coerce_tmp[2122405](2122409 'cast' c_void_ptr[149] call_tmp[2122351]))
          const-val call_tmp[2122412]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122414 'move' call_tmp[2122412](2122416 '<' tmp[2122374] 0))
          if call_tmp[2122412]
          {
            (2122422 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2122425]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122427 'move' call_tmp[2122425](2122429 'cast' uint(64)[115] tmp[2122374]))
          const-val call_tmp[2122432]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122434 'move' call_tmp[2122432](2122437 call memcmp[1206481] coerce_tmp[2122398] coerce_tmp[2122405] call_tmp[2122425]))
          const-val call_tmp[2122441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122443 'move' call_tmp[2122441](2122445 'cast' int(64)[13] call_tmp[2122432]))
          const-val call_tmp[2122453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122455 'move' call_tmp[2122453](2122457 '==' call_tmp[2122441] 0))
          if call_tmp[2122453]
          {
            const-val call_tmp[2122462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2122464 'move' call_tmp[2122462](2122466 '<' tmp[2122374] coerce_tmp[2121935]))
            if call_tmp[2122462]
            {
              (2122471 'move' ret[2122372] 1)
              gotoReturn _end__strcmp_local[2122496] _end__strcmp_local[2122496]
            }
            const-val call_tmp[2122477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2122479 'move' call_tmp[2122477](2122481 '<' tmp[2122374] coerce_tmp[2121956]))
            if call_tmp[2122477]
            {
              (2122486 'move' ret[2122372] -1)
              gotoReturn _end__strcmp_local[2122496] _end__strcmp_local[2122496]
            }
          }
          (2122493 'move' ret[2122372] call_tmp[2122441])
          label _end__strcmp_local[2122496]
          const-val coerce_tmp[2122498]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2122500 'move' coerce_tmp[2122498](2122502 'cast' c_void_ptr[149] call_tmp[2122351]))
          (2122506 call chpl_here_free[188127] coerce_tmp[2122498])
          (2122508 'move' ret[2121970] ret[2122372])
          gotoReturn _end__strcmp[2122710] _end__strcmp[2122710]
        }
        {
          val call_tmp[2122514]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2122516]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122518 'move' coerce_tmp[2122516](2122520 'cast' int(64)[13] coerce_tmp[2121942]))
          (2122523 'move' call_tmp[2122514](2122526 call bufferCopyRemote[172830] coerce_tmp[2122516] coerce_tmp[2121928] coerce_tmp[2121935]))
          val call_tmp[2122535]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2122537]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122539 'move' coerce_tmp[2122537](2122541 'cast' int(64)[13] coerce_tmp[2121963]))
          (2122544 'move' call_tmp[2122535](2122547 call bufferCopyRemote[172830] coerce_tmp[2122537] coerce_tmp[2121949] coerce_tmp[2121956]))
          val ret[2122556]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2122558]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2122560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122562 'move' call_tmp[2122560](2122564 '<' coerce_tmp[2121935] coerce_tmp[2121956]))
          if call_tmp[2122560]
          {
            (2122569 'move' tmp[2122558] coerce_tmp[2121935])
          }
          {
            (2122573 'move' tmp[2122558] coerce_tmp[2121956])
          }
          const-val coerce_tmp[2122582]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122584 'move' coerce_tmp[2122582](2122586 'cast' c_void_ptr[149] call_tmp[2122514]))
          const-val coerce_tmp[2122589]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2122591 'move' coerce_tmp[2122589](2122593 'cast' c_void_ptr[149] call_tmp[2122535]))
          const-val call_tmp[2122596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122598 'move' call_tmp[2122596](2122600 '<' tmp[2122558] 0))
          if call_tmp[2122596]
          {
            (2122606 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2122609]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122611 'move' call_tmp[2122609](2122613 'cast' uint(64)[115] tmp[2122558]))
          const-val call_tmp[2122616]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122618 'move' call_tmp[2122616](2122621 call memcmp[1206481] coerce_tmp[2122582] coerce_tmp[2122589] call_tmp[2122609]))
          const-val call_tmp[2122625]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122627 'move' call_tmp[2122625](2122629 'cast' int(64)[13] call_tmp[2122616]))
          const-val call_tmp[2122637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2122639 'move' call_tmp[2122637](2122641 '==' call_tmp[2122625] 0))
          if call_tmp[2122637]
          {
            const-val call_tmp[2122646]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2122648 'move' call_tmp[2122646](2122650 '<' tmp[2122558] coerce_tmp[2121935]))
            if call_tmp[2122646]
            {
              (2122655 'move' ret[2122556] 1)
              gotoReturn _end__strcmp_local[2122680] _end__strcmp_local[2122680]
            }
            const-val call_tmp[2122661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2122663 'move' call_tmp[2122661](2122665 '<' tmp[2122558] coerce_tmp[2121956]))
            if call_tmp[2122661]
            {
              (2122670 'move' ret[2122556] -1)
              gotoReturn _end__strcmp_local[2122680] _end__strcmp_local[2122680]
            }
          }
          (2122677 'move' ret[2122556] call_tmp[2122625])
          label _end__strcmp_local[2122680]
          const-val coerce_tmp[2122682]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2122684 'move' coerce_tmp[2122682](2122686 'cast' c_void_ptr[149] call_tmp[2122514]))
          (2122690 call chpl_here_free[188127] coerce_tmp[2122682])
          const-val coerce_tmp[2122692]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2122694 'move' coerce_tmp[2122692](2122696 'cast' c_void_ptr[149] call_tmp[2122535]))
          (2122700 call chpl_here_free[188127] coerce_tmp[2122692])
          (2122702 'move' ret[2121970] ret[2122556])
          gotoReturn _end__strcmp[2122710] _end__strcmp[2122710]
        }
      }
    }
    label _end__strcmp[2122710]
    const-val call_tmp[2122712]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2122714 'move' call_tmp[2122712](2122716 '==' ret[2121970] 0))
    const-val call_tmp[2122719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2122721 'move' call_tmp[2122719](2122723 '!' call_tmp[2122712]))
    if call_tmp[2122719]
    {
      const-val _ic__F0_this[2297288]:TaskErrors[169702] "temp"
      (2139144 'move' _ic__F0_this[2297288] this[169728])
      const-val this[1876305]:TaskErrors[169702] "temp"
      (1876310 'move' this[1876305] this[169728])
      const-val coerce_tmp[1876049]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1876051 'move' coerce_tmp[1876049](2320147 '.v' this[1876305] nErrors[168363]))
      const-val call_tmp[2080066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2080068 'move' call_tmp[2080066](2080070 '<' coerce_tmp[1876049] 0))
      if call_tmp[2080066]
      {
        (1935621 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2313305]:int(64)[13] "temp"
      val tmp_x1[2313307]:int(64)[13] "temp"
      const-val call_tmp[2083067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083069 'move' call_tmp[2083067](2083071 '==' coerce_tmp[1876049] 0))
      if call_tmp[2083067]
      {
        const-val call_tmp[2080906]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2080908 'move' call_tmp[2080906](2080910 'cast' uint(64)[115] 0))
        const-val call_tmp[2144336]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2144338 'move' call_tmp[2144336](2144340 '-' call_tmp[2080906] 1))
        const-val call_tmp[2144716]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2144718 'move' call_tmp[2144716](2144720 'cast' int(64)[13] call_tmp[2144336]))
        (2313313 'move' tmp_x0[2313305] 0)
        (2313318 'move' tmp_x1[2313307] call_tmp[2144716])
      }
      {
        const-val call_tmp[2108055]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2108057 'move' call_tmp[2108055](2108059 '-' coerce_tmp[1876049] 1))
        const-val call_tmp[2089764]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2089766 'move' call_tmp[2089764](2089768 '+' 0 call_tmp[2108055]))
        (2313323 'move' tmp_x0[2313305] 0)
        (2313328 'move' tmp_x1[2313307] call_tmp[2089764])
      }
      (1935730 'noop')
      (1935750 'noop')
      (1935769 'noop')
      const-val _ic__F1_high[2302810]:int(64)[13] "temp"
      (2149279 'move' _ic__F1_high[2302810] tmp_x1[2313307])
      val i[1935798]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1935802 'move' i[1935798] 0)
      (1935854 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2313305] tmp_x1[2313307] 1 tmp_x0[2313305] tmp_x1[2313307] 1)
      CForLoop[1935861] hazard
      {
        const-val this[1935963]:TaskErrors[169702] "temp"
        (1935965 'move' this[1935963] _ic__F0_this[2297288])
        val coerce_tmp[1935975]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1935977 'move' coerce_tmp[1935975](2320155 '.v' this[1935963] errorsArray[168374]))
        ref call_tmp[2150983]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
        (2150985 'move' call_tmp[2150983](2150987 'array_get' coerce_tmp[1935975] i[1935798]))
        val coerce_tmp[1935989]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1935991 'move' coerce_tmp[1935989](1935994 call borrow[1235847] call_tmp[2150983]))
        val coerce_tmp[1935996]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1935998 'move' coerce_tmp[1935996](1936000 'cast' object[22] coerce_tmp[1935989]))
        const-val call_tmp[2077914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2077916 'move' call_tmp[2077914](2077918 'ptr_neq' coerce_tmp[1935996] nil[44]))
        if call_tmp[2077914]
        {
          const-val this[1936022]:TaskErrors[169702] "temp"
          (1936024 'move' this[1936022] _ic__F0_this[2297288])
          val coerce_tmp[1936034]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1936036 'move' coerce_tmp[1936034](2320161 '.v' this[1936022] errorsArray[168374]))
          ref call_tmp[2150993]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
          (2150995 'move' call_tmp[2150993](2150997 'array_get' coerce_tmp[1936034] i[1935798]))
          val coerce_tmp[2290762]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290764 'move' coerce_tmp[2290762](2290766 '.v' call_tmp[2150993] chpl_p[966427]))
          val coerce_tmp[2290769]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290771 'move' coerce_tmp[2290769](2290773 'cast' object[22] coerce_tmp[2290762]))
          const-val call_tmp[2290776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2290778 'move' call_tmp[2290776](2290780 'ptr_eq' coerce_tmp[2290769] nil[44]))
          if call_tmp[2290776]
          {
            (2290786 call nilCheckHalt[210169] "argument to ! is nil")
          }
          val coerce_tmp[2290789]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2290791 'move' coerce_tmp[2290789](2290793 '.v' call_tmp[2150993] chpl_p[966427]))
          const-val call_tmp[1936072]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[1936074]:int(32)[95] "temp"
          (1936076 'move' _virtual_method_tmp_[1936074](1936078 'getcid' coerce_tmp[2290789]))
          val ret_tmp[1936080]:string[26] "temp"
          (1936082 'virtual method call' message[167975] _virtual_method_tmp_[1936074] coerce_tmp[2290789] ret_tmp[1936080])
          (1936087 'move' call_tmp[1936072] ret_tmp[1936080])
          const-val call_tmp[1936090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1936092 'move' call_tmp[1936090](1936095 call ==[38823] call_tmp[1936072] maxMsg[169092]))
          if call_tmp[1936090]
          {
            (2240735 '=' last[169106] coerce_tmp[2290789])
          }
          ref i_x[2097447]:string[26] "temp"
          (2097451 'move' i_x[2097447](2097449 'set reference' call_tmp[1936072]))
          (2097455 call deinit[30834] i_x[2097447])
        }
        {
          (1935870 '=' i[1935798] tmp_x0[2313305])
        }
        {
          (1935881 '<=' i[1935798] _ic__F1_high[2302810])
        }
        {
          (1935887 '+=' i[1935798] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[1935924]
      label _endchpl_direct_counted_range_iter_helper[1935932]
      label _endchpl_direct_counted_range_iter[1876225]
      label _endthese[1876230]
    }
    const-val call_tmp[680100]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806382]:string[26] "temp"
    (169411 call _cast[1063172] n[169081] ret_tmp[1806382])
    (1806385 'move' call_tmp[680100] ret_tmp[1806382])
    const-val call_tmp[680105]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803188]:string[26] "temp"
    (169430 call +[38345] call_tmp[680100] " errors: " ret_tmp[1803188])
    (1803191 'move' call_tmp[680105] ret_tmp[1803188])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544661 'move' ret[169432] call_tmp[680105])
    val coerce_tmp[1744467]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744473 'move' coerce_tmp[1744467](1744469 'cast' object[22] first[169099]))
    const-val call_tmp[2077484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2077486 'move' call_tmp[2077484](2077488 'ptr_neq' coerce_tmp[1744467] nil[44]))
    val tmp[570519]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2077484]
    {
      val coerce_tmp[1744479]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744485 'move' coerce_tmp[1744479](1744481 'cast' object[22] last[169106]))
      const-val call_tmp[2077494]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077496 'move' call_tmp[2077494](2077498 'ptr_neq' coerce_tmp[1744479] nil[44]))
      (570534 'move' tmp[570519] call_tmp[2077494])
    }
    {
      (570539 'move' tmp[570519] 0)
    }
    val tmp[570546]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[570519]
    {
      val coerce_tmp[1744491]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744497 'move' coerce_tmp[1744491](1744493 'cast' object[22] first[169099]))
      val coerce_tmp[1744499]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744505 'move' coerce_tmp[1744499](1744501 'cast' object[22] last[169106]))
      const-val call_tmp[2077504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077506 'move' call_tmp[2077504](2077508 'ptr_neq' coerce_tmp[1744491] coerce_tmp[1744499]))
      (570561 'move' tmp[570546] call_tmp[2077504])
    }
    {
      (570566 'move' tmp[570546] 0)
    }
    if tmp[570546]
    {
      val coerce_tmp[2181099]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2181101 'move' coerce_tmp[2181099](2181103 'cast' object[22] first[169099]))
      const-val call_tmp[2181106]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181108 'move' call_tmp[2181106](2181110 'ptr_eq' coerce_tmp[2181099] nil[44]))
      if call_tmp[2181106]
      {
        (2181116 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[680150]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804504]:string[26] "temp"
      (169458 call chpl_describe_error[169835] first[169099] ret_tmp[1804504])
      (1804507 'move' call_tmp[680150] ret_tmp[1804504])
      const-val call_tmp[680155]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803194]:string[26] "temp"
      (169476 call +[38345] call_tmp[680150] " ... " ret_tmp[1803194])
      (1803197 'move' call_tmp[680155] ret_tmp[1803194])
      val coerce_tmp[2181122]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2181124 'move' coerce_tmp[2181122](2181126 'cast' object[22] last[169106]))
      const-val call_tmp[2181129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2181131 'move' call_tmp[2181129](2181133 'ptr_eq' coerce_tmp[2181122] nil[44]))
      if call_tmp[2181129]
      {
        (2181139 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[680165]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804510]:string[26] "temp"
      (169483 call chpl_describe_error[169835] last[169106] ret_tmp[1804510])
      (1804513 'move' call_tmp[680165] ret_tmp[1804510])
      const-val call_tmp[680170]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1803200]:string[26] "temp"
      (169484 call +[38345] call_tmp[680155] call_tmp[680165] ret_tmp[1803200])
      (1803203 'move' call_tmp[680170] ret_tmp[1803200])
      (169486 call +=[38800] ret[169432] call_tmp[680170])
      ref i_x[2093043]:string[26] "temp"
      (2093047 'move' i_x[2093043](2093045 'set reference' call_tmp[680170]))
      (2093051 call deinit[30834] i_x[2093043])
      ref i_x[2093055]:string[26] "temp"
      (2093059 'move' i_x[2093055](2093057 'set reference' call_tmp[680165]))
      (2093063 call deinit[30834] i_x[2093055])
      ref i_x[2093067]:string[26] "temp"
      (2093071 'move' i_x[2093067](2093069 'set reference' call_tmp[680155]))
      (2093075 call deinit[30834] i_x[2093067])
      ref i_x[2093079]:string[26] "temp"
      (2093083 'move' i_x[2093079](2093081 'set reference' call_tmp[680150]))
      (2093087 call deinit[30834] i_x[2093079])
    }
    {
      val coerce_tmp[1744515]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1744521 'move' coerce_tmp[1744515](1744517 'cast' object[22] first[169099]))
      const-val call_tmp[2077514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2077516 'move' call_tmp[2077514](2077518 'ptr_neq' coerce_tmp[1744515] nil[44]))
      if call_tmp[2077514]
      {
        const-val call_tmp[680190]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1804516]:string[26] "temp"
        (169499 call chpl_describe_error[169835] first[169099] ret_tmp[1804516])
        (1804519 'move' call_tmp[680190] ret_tmp[1804516])
        (169500 call +=[38800] ret[169432] call_tmp[680190])
        ref i_x[2093091]:string[26] "temp"
        (2093095 'move' i_x[2093091](2093093 'set reference' call_tmp[680190]))
        (2093099 call deinit[30834] i_x[2093091])
      }
    }
    (1744528 'move' ret[522227] ret[169432])
    ref i_x[2093103]:string[26] "temp"
    (2093107 'move' i_x[2093103](2093105 'set reference' call_tmp[680100]))
    (2093111 call deinit[30834] i_x[2093103])
    ref i_x[2093115]:string[26] "temp"
    (2093119 'move' i_x[2093115](2093117 'set reference' maxMsg[169092]))
    (2093123 call deinit[30834] i_x[2093115])
    ref i_x[2093127]:string[26] "temp"
    (2093131 'move' i_x[2093127](2093129 'set reference' minMsg[169087]))
    (2093135 call deinit[30834] i_x[2093127])
    label _end_message[522225]
    (1814796 '=' _retArg[1814794] ret[522227])
    (1814798 return _void[55])
  }
  function _new[1240999](ref arg group[1241008]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1241001]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241048 'move' call_tmp[1241045](1241059 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241062]:c_void_ptr[149] "dead after last mention" "temp"
    (1241064 'move' cast_tmp[1241062](1241016 call chpl_here_alloc[187788] call_tmp[1241045] 41))
    (1241019 'move' initTemp[1241001](1241066 'cast' TaskErrors[169702] cast_tmp[1241062]))
    (1241021 'setcid' initTemp[1241001])
    val super_tmp[2153925]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2153927 'move' super_tmp[2153925](2153929 '.v' initTemp[1241001] super[355748]))
    val super_tmp[2153932]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2153934 'move' super_tmp[2153932](2153936 '.v' super_tmp[2153925] super[355736]))
    (2153939 'setcid' super_tmp[2153932])
    val call_tmp[2153941]:object[22] "dead at end of block" "maybe param" "temp"
    (2153943 'move' call_tmp[2153941](2153945 'cast' object[22] super_tmp[2153925]))
    (2153948 'setcid' call_tmp[2153941])
    val init_coerce_tmp[2153950]:Error[167984] "dead after last mention" "temp"
    (2153952 'move' init_coerce_tmp[2153950](2153954 'cast' Error[167984] nil[44]))
    (2153957 '.=' super_tmp[2153925] _next[167912] init_coerce_tmp[2153950])
    (2153961 '.=' super_tmp[2153925] thrownLine[167917] 0)
    (2153965 '.=' super_tmp[2153925] thrownFileId[167925] 0)
    val tmp[2153969]:string[26] "dead after last mention" "temp"
    (2153972 call init[30763] tmp[2153969])
    (2153974 '.=' super_tmp[2153925] _msg[167930] tmp[2153969])
    (2153978 '.=' super_tmp[2153925] _hasThrowInfo[167936] 0)
    (2153982 'setcid' super_tmp[2153925])
    val call_tmp[2153984]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2153986 'move' call_tmp[2153984](2153988 'cast' Error[167984] initTemp[1241001]))
    (2153991 'setcid' call_tmp[2153984])
    val head[2153993]:Error[167984] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2153995]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2153997 'move' coerce_tmp[2153995](2153999 '.v' group[1241008] _head[168266]))
    (2154002 '=' head[2153993] coerce_tmp[2153995])
    (2154005 'noop')
    val tmp[2154006]:Error[167984] "temp"
    (2154008 'move' tmp[2154006](2154010 'cast' Error[167984] nil[44]))
    (2154013 '.=' group[1241008] _head[168266] tmp[2154006])
    (2154017 '.=' initTemp[1241001] nErrors[168363] 0)
    val tmp[2154021]:c_ptr(owned Error?)[1235634] "dead after last mention" "temp"
    (2154023 'move' tmp[2154021](2154025 'cast' c_ptr(owned Error?)[1235634] nil[44]))
    (2154028 '.=' initTemp[1241001] errorsArray[168374] tmp[2154021])
    (2154032 'setcid' initTemp[1241001])
    val cur[2154034]:Error[167984] "dead at end of block" "insert auto destroy" "split inited"
    val n[2154036]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2154038 'move' n[2154036] 0)
    (2154041 'move' cur[2154034] coerce_tmp[2153995])
    val tmp[2154044]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2154046]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2154048 'move' coerce_tmp[2154046](2154050 'cast' object[22] coerce_tmp[2153995]))
    const-val call_tmp[2154053]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154055 'move' call_tmp[2154053](2154057 'ptr_neq' coerce_tmp[2154046] nil[44]))
    (2154060 'move' tmp[2154044] call_tmp[2154053])
    WhileDo[2154063]
    {
      val coerce_tmp[2154065]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2154067 'move' coerce_tmp[2154065](2154069 'cast' object[22] cur[2154034]))
      const-val call_tmp[2154072]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2154074 'move' call_tmp[2154072](2154076 'ptr_eq' coerce_tmp[2154065] nil[44]))
      if call_tmp[2154072]
      {
        (2154082 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[2154085]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2154087 'move' coerce_tmp[2154085] cur[2154034])
      val curnext[2154090]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2154092]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2154094 'move' coerce_tmp[2154092](2154096 '.v' coerce_tmp[2154085] _next[167912]))
      (2154099 '=' curnext[2154090] coerce_tmp[2154092])
      (2154102 'noop')
      val _formal_type_tmp_[2154108]:TaskErrors[169702] "temp"
      val ret[2154110]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2154112]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2154114 'move' coerce_tmp[2154112](2154116 'cast' object[22] cur[2154034]))
      const-val call_tmp[2154119]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2154121 'move' call_tmp[2154119](2154123 'ptr_eq' coerce_tmp[2154112] nil[44]))
      if call_tmp[2154119]
      {
        (2154128 'move' ret[2154110](2154130 'cast' TaskErrors[169702] nil[44]))
        gotoReturn _end__cast[2154146] _end__cast[2154146]
      }
      val call_tmp[2154136]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
      (2154138 'move' call_tmp[2154136](2154140 'dynamic_cast' _formal_type_tmp_[2154108] cur[2154034]))
      (2154143 'move' ret[2154110] call_tmp[2154136])
      label _end__cast[2154146]
      val coerce_tmp[2154153]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2154155 'move' coerce_tmp[2154153](2154157 'cast' object[22] ret[2154110]))
      const-val call_tmp[2154160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2154162 'move' call_tmp[2154160](2154164 'ptr_eq' coerce_tmp[2154153] nil[44]))
      if call_tmp[2154160]
      {
        ref i_lhs[2154169]:int(64)[13] "temp"
        (2154171 'move' i_lhs[2154169](2154173 'set reference' n[2154036]))
        (2154175 '+=' i_lhs[2154169] 1)
      }
      {
        const-val _ic__F0_this[2297311]:TaskErrors[169702] "temp"
        (2154231 'move' _ic__F0_this[2297311] ret[2154110])
        const-val this[2154240]:TaskErrors[169702] "temp"
        (2154242 'move' this[2154240] ret[2154110])
        const-val coerce_tmp[2154249]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2154251 'move' coerce_tmp[2154249](2154253 '.v' this[2154240] nErrors[168363]))
        const-val call_tmp[2154421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2154423 'move' call_tmp[2154421](2154425 '<' coerce_tmp[2154249] 0))
        if call_tmp[2154421]
        {
          (2154431 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2315273]:int(64)[13] "temp"
        val tmp_x1[2315275]:int(64)[13] "temp"
        const-val call_tmp[2154445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2154447 'move' call_tmp[2154445](2154449 '==' coerce_tmp[2154249] 0))
        if call_tmp[2154445]
        {
          const-val call_tmp[2154461]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154463 'move' call_tmp[2154461](2154465 'cast' uint(64)[115] 0))
          const-val call_tmp[2154468]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154470 'move' call_tmp[2154468](2154472 '-' call_tmp[2154461] 1))
          const-val call_tmp[2154475]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154477 'move' call_tmp[2154475](2154479 'cast' int(64)[13] call_tmp[2154468]))
          (2315281 'move' tmp_x0[2315273] 0)
          (2315286 'move' tmp_x1[2315275] call_tmp[2154475])
        }
        {
          const-val call_tmp[2154510]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154512 'move' call_tmp[2154510](2154514 '-' coerce_tmp[2154249] 1))
          const-val call_tmp[2154524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154526 'move' call_tmp[2154524](2154528 '+' 0 call_tmp[2154510]))
          (2315291 'move' tmp_x0[2315273] 0)
          (2315296 'move' tmp_x1[2315275] call_tmp[2154524])
        }
        (2154555 'noop')
        (2154563 'noop')
        (2154571 'noop')
        const-val _ic__F1_high[2303095]:int(64)[13] "temp"
        (2154639 'move' _ic__F1_high[2303095] tmp_x1[2315275])
        val i[2154646]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2154648 'move' i[2154646] 0)
        (2154680 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2315273] tmp_x1[2315275] 1 tmp_x0[2315273] tmp_x1[2315275] 1)
        CForLoop[2154687]
        {
          const-val this[2154719]:TaskErrors[169702] "temp"
          (2154721 'move' this[2154719] _ic__F0_this[2297311])
          val coerce_tmp[2154726]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2154728 'move' coerce_tmp[2154726](2154730 '.v' this[2154719] errorsArray[168374]))
          ref call_tmp[2154733]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
          (2154735 'move' call_tmp[2154733](2154737 'array_get' coerce_tmp[2154726] i[2154646]))
          val coerce_tmp[2154740]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2154742 'move' coerce_tmp[2154740](2154745 call borrow[1235847] call_tmp[2154733]))
          val coerce_tmp[2154747]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2154749 'move' coerce_tmp[2154747](2154751 'cast' object[22] coerce_tmp[2154740]))
          const-val call_tmp[2154754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2154756 'move' call_tmp[2154754](2154758 'ptr_neq' coerce_tmp[2154747] nil[44]))
          if call_tmp[2154754]
          {
            const-val this[2154763]:TaskErrors[169702] "temp"
            (2154765 'move' this[2154763] _ic__F0_this[2297311])
            val coerce_tmp[2154770]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2154772 'move' coerce_tmp[2154770](2154774 '.v' this[2154763] errorsArray[168374]))
            ref call_tmp[2154777]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
            (2154779 'move' call_tmp[2154777](2154781 'array_get' coerce_tmp[2154770] i[2154646]))
            val coerce_tmp[2154784]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2154786 'move' coerce_tmp[2154784](2154789 call borrow[1235847] call_tmp[2154777]))
            val coerce_tmp[2154791]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2154793 'move' coerce_tmp[2154791](2154795 'cast' object[22] coerce_tmp[2154784]))
            const-val call_tmp[2154798]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2154800 'move' call_tmp[2154798](2154802 'ptr_neq' coerce_tmp[2154791] nil[44]))
            if call_tmp[2154798]
            {
              ref i_lhs[2154807]:int(64)[13] "temp"
              (2154809 'move' i_lhs[2154807](2154811 'set reference' n[2154036]))
              (2154813 '+=' i_lhs[2154807] 1)
            }
          }
          {
            (2154696 '=' i[2154646] tmp_x0[2315273])
          }
          {
            (2154707 '<=' i[2154646] _ic__F1_high[2303095])
          }
          {
            (2154711 '+=' i[2154646] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2154818]
        label _endchpl_direct_counted_range_iter_helper[2154829]
        label _endchpl_direct_counted_range_iter[2154840]
        label _endthese[2154851]
      }
      (2154863 '=' cur[2154034] curnext[2154090])
      val coerce_tmp[2154866]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2154868 'move' coerce_tmp[2154866](2154870 'cast' object[22] curnext[2154090]))
      const-val call_tmp[2154873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2154875 'move' call_tmp[2154873](2154877 'ptr_neq' coerce_tmp[2154866] nil[44]))
      (2154880 'move' tmp[2154044] call_tmp[2154873])
      tmp[2154044]
    }
    (2154883 '.=' initTemp[1241001] nErrors[168363] n[2154036])
    const-val call_tmp[2154887]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154889 'move' call_tmp[2154887](2154891 '<' n[2154036] 0))
    if call_tmp[2154887]
    {
      (2154897 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2154900]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154902 'move' call_tmp[2154900](2154904 'cast' uint(64)[115] n[2154036]))
    const-val call_tmp[2154907]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154909 'move' call_tmp[2154907](2154912 call sizeof[1238508] owned Error?[966432]))
    const-val call_tmp[2154914]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154916 'move' call_tmp[2154914](2154918 '*' call_tmp[2154900] call_tmp[2154907]))
    const-val call_tmp[2154921]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154923 'move' call_tmp[2154921](2154926 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2154927]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154929 'move' call_tmp[2154927](2154932 call chpl_here_calloc[1238538] call_tmp[2154914] 1 call_tmp[2154921]))
    val call_tmp[2154936]:c_ptr(owned Error?)[1235634] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154938 'move' call_tmp[2154936](2154940 'cast' c_ptr(owned Error?)[1235634] call_tmp[2154927]))
    (2154943 '.=' initTemp[1241001] errorsArray[168374] call_tmp[2154936])
    val idx[2154947]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2154949 'move' idx[2154947] 0)
    (2154952 '=' cur[2154034] head[2153993])
    val tmp[2154955]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2154957]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2154959 'move' coerce_tmp[2154957](2154961 'cast' object[22] head[2153993]))
    const-val call_tmp[2154964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2154966 'move' call_tmp[2154964](2154968 'ptr_neq' coerce_tmp[2154957] nil[44]))
    (2154971 'move' tmp[2154955] call_tmp[2154964])
    WhileDo[2154974]
    {
      val coerce_tmp[2154976]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2154978 'move' coerce_tmp[2154976](2154980 'cast' object[22] cur[2154034]))
      const-val call_tmp[2154983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2154985 'move' call_tmp[2154983](2154987 'ptr_eq' coerce_tmp[2154976] nil[44]))
      if call_tmp[2154983]
      {
        (2154993 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[2154996]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2154998 'move' coerce_tmp[2154996] cur[2154034])
      val curnext[2155001]:Error[167984] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2155003]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2155005 'move' coerce_tmp[2155003](2155007 '.v' coerce_tmp[2154996] _next[167912]))
      (2155010 '=' curnext[2155001] coerce_tmp[2155003])
      (2155013 'noop')
      val coerce_tmp[2155014]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2155016 'move' coerce_tmp[2155014](2155018 'cast' object[22] cur[2154034]))
      const-val call_tmp[2155021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2155023 'move' call_tmp[2155021](2155025 'ptr_eq' coerce_tmp[2155014] nil[44]))
      if call_tmp[2155021]
      {
        (2155031 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[2155034]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2155036 'move' coerce_tmp[2155034] cur[2154034])
      val tmp[2155039]:Error[167984] "temp"
      (2155041 'move' tmp[2155039](2155043 'cast' Error[167984] nil[44]))
      (2155046 '.=' coerce_tmp[2155034] _next[167912] tmp[2155039])
      val _formal_type_tmp_[2155055]:TaskErrors[169702] "temp"
      val ret[2155057]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2155059]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2155061 'move' coerce_tmp[2155059](2155063 'cast' object[22] cur[2154034]))
      const-val call_tmp[2155066]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2155068 'move' call_tmp[2155066](2155070 'ptr_eq' coerce_tmp[2155059] nil[44]))
      if call_tmp[2155066]
      {
        (2155075 'move' ret[2155057](2155077 'cast' TaskErrors[169702] nil[44]))
        gotoReturn _end__cast[2155093] _end__cast[2155093]
      }
      val call_tmp[2155083]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
      (2155085 'move' call_tmp[2155083](2155087 'dynamic_cast' _formal_type_tmp_[2155055] cur[2154034]))
      (2155090 'move' ret[2155057] call_tmp[2155083])
      label _end__cast[2155093]
      val asTaskErr[2155095]:TaskErrors[169702] "dead at end of block" "insert auto destroy"
      (2155097 'move' asTaskErr[2155095] ret[2155057])
      val coerce_tmp[2155100]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2155102 'move' coerce_tmp[2155100](2155104 'cast' object[22] ret[2155057]))
      const-val call_tmp[2155107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2155109 'move' call_tmp[2155107](2155111 'ptr_eq' coerce_tmp[2155100] nil[44]))
      if call_tmp[2155107]
      {
        val coerce_tmp[2155116]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2155118 'move' coerce_tmp[2155116](2155120 '.v' initTemp[1241001] errorsArray[168374]))
        ref call_tmp[2155123]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
        (2155125 'move' call_tmp[2155123](2155127 'array_get' coerce_tmp[2155116] idx[2154947]))
        val coerce_tmp[2155130]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2155132 'move' coerce_tmp[2155130](2155134 'cast' object[22] cur[2154034]))
        const-val call_tmp[2155137]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2155139 'move' call_tmp[2155137](2155141 'ptr_eq' coerce_tmp[2155130] nil[44]))
        if call_tmp[2155137]
        {
          (2155147 call nilCheckHalt[210169] "argument to ! is nil")
        }
        (2155151 call retain[1238794] call_tmp[2155123] cur[2154034])
        ref i_lhs[2155154]:int(64)[13] "temp"
        (2155156 'move' i_lhs[2155154](2155158 'set reference' idx[2154947]))
        (2155160 '+=' i_lhs[2155154] 1)
      }
      {
        const-val _ic__F0_this[2297334]:TaskErrors[169702] "temp"
        (2155216 'move' _ic__F0_this[2297334] ret[2155057])
        const-val this[2155225]:TaskErrors[169702] "temp"
        (2155227 'move' this[2155225] ret[2155057])
        const-val coerce_tmp[2155234]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2155236 'move' coerce_tmp[2155234](2155238 '.v' this[2155225] nErrors[168363]))
        const-val call_tmp[2155406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2155408 'move' call_tmp[2155406](2155410 '<' coerce_tmp[2155234] 0))
        if call_tmp[2155406]
        {
          (2155416 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2315331]:int(64)[13] "temp"
        val tmp_x1[2315333]:int(64)[13] "temp"
        const-val call_tmp[2155430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2155432 'move' call_tmp[2155430](2155434 '==' coerce_tmp[2155234] 0))
        if call_tmp[2155430]
        {
          const-val call_tmp[2155446]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155448 'move' call_tmp[2155446](2155450 'cast' uint(64)[115] 0))
          const-val call_tmp[2155453]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155455 'move' call_tmp[2155453](2155457 '-' call_tmp[2155446] 1))
          const-val call_tmp[2155460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155462 'move' call_tmp[2155460](2155464 'cast' int(64)[13] call_tmp[2155453]))
          (2315339 'move' tmp_x0[2315331] 0)
          (2315344 'move' tmp_x1[2315333] call_tmp[2155460])
        }
        {
          const-val call_tmp[2155495]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155497 'move' call_tmp[2155495](2155499 '-' coerce_tmp[2155234] 1))
          const-val call_tmp[2155509]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155511 'move' call_tmp[2155509](2155513 '+' 0 call_tmp[2155495]))
          (2315349 'move' tmp_x0[2315331] 0)
          (2315354 'move' tmp_x1[2315333] call_tmp[2155509])
        }
        (2155540 'noop')
        (2155548 'noop')
        (2155556 'noop')
        const-val _ic__F1_high[2303114]:int(64)[13] "temp"
        (2155624 'move' _ic__F1_high[2303114] tmp_x1[2315333])
        val i[2155631]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2155633 'move' i[2155631] 0)
        (2155665 call chpl_checkIfRangeIterWillOverflow[1096095] tmp_x0[2315331] tmp_x1[2315333] 1 tmp_x0[2315331] tmp_x1[2315333] 1)
        CForLoop[2155672]
        {
          const-val this[2155704]:TaskErrors[169702] "temp"
          (2155706 'move' this[2155704] _ic__F0_this[2297334])
          val coerce_tmp[2155711]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2155713 'move' coerce_tmp[2155711](2155715 '.v' this[2155704] errorsArray[168374]))
          ref call_tmp[2155718]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
          (2155720 'move' call_tmp[2155718](2155722 'array_get' coerce_tmp[2155711] i[2155631]))
          val coerce_tmp[2155725]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2155727 'move' coerce_tmp[2155725](2155730 call borrow[1235847] call_tmp[2155718]))
          val coerce_tmp[2155732]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2155734 'move' coerce_tmp[2155732](2155736 'cast' object[22] coerce_tmp[2155725]))
          const-val call_tmp[2155739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155741 'move' call_tmp[2155739](2155743 'ptr_neq' coerce_tmp[2155732] nil[44]))
          if call_tmp[2155739]
          {
            const-val this[2155748]:TaskErrors[169702] "temp"
            (2155750 'move' this[2155748] _ic__F0_this[2297334])
            val coerce_tmp[2155755]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2155757 'move' coerce_tmp[2155755](2155759 '.v' this[2155748] errorsArray[168374]))
            ref call_tmp[2155762]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
            (2155764 'move' call_tmp[2155762](2155766 'array_get' coerce_tmp[2155755] i[2155631]))
            val coerce_tmp[2155769]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2155771 'move' coerce_tmp[2155769](2155774 call borrow[1235847] call_tmp[2155762]))
            val coerce_tmp[2155776]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2155778 'move' coerce_tmp[2155776](2155780 'cast' object[22] coerce_tmp[2155769]))
            const-val call_tmp[2155783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2155785 'move' call_tmp[2155783](2155787 'ptr_neq' coerce_tmp[2155776] nil[44]))
            if call_tmp[2155783]
            {
              val coerce_tmp[2155792]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2155794 'move' coerce_tmp[2155792](2155796 '.v' initTemp[1241001] errorsArray[168374]))
              ref call_tmp[2155799]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
              (2155801 'move' call_tmp[2155799](2155803 'array_get' coerce_tmp[2155792] idx[2154947]))
              (2155807 call =[1239076] call_tmp[2155799] call_tmp[2155762])
              ref i_lhs[2155810]:int(64)[13] "temp"
              (2155812 'move' i_lhs[2155810](2155814 'set reference' idx[2154947]))
              (2155816 '+=' i_lhs[2155810] 1)
            }
          }
          {
            (2155681 '=' i[2155631] tmp_x0[2315331])
          }
          {
            (2155692 '<=' i[2155631] _ic__F1_high[2303114])
          }
          {
            (2155696 '+=' i[2155631] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2155821]
        label _endchpl_direct_counted_range_iter_helper[2155832]
        label _endchpl_direct_counted_range_iter[2155843]
        label _endthese[2155854]
        val coerce_tmp[2155865]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2155867 'move' coerce_tmp[2155865](2155869 'cast' object[22] asTaskErr[2155095]))
        const-val call_tmp[2155872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2155874 'move' call_tmp[2155872](2155876 'ptr_neq' coerce_tmp[2155865] nil[44]))
        if call_tmp[2155872]
        {
          (2155882 call deinit[168832] asTaskErr[2155095])
          const-val call_tmp[2155886]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2155888 'move' call_tmp[2155886](2155890 '_wide_get_locale' asTaskErr[2155095]))
          val isdirect[2155895]:bool[10] "temp"
          (2155897 'move' isdirect[2155895](2155900 call chpl_doDirectExecuteOn[187469] call_tmp[2155886]))
          if isdirect[2155895]
          {
            (2155905 call on_fn[1240253] asTaskErr[2155095])
          }
          {
            val _args_foron_fn[2155908]:_class_localson_fn[2058276] "temp"
            (2155910 'move' _args_foron_fn[2155908](2155912 'stack allocate class' _class_localson_fn[2058276]))
            (2155914 '.=' _args_foron_fn[2155908] _0_tmp[2058279] call_tmp[2155886])
            (2155918 '.=' _args_foron_fn[2155908] _1_arg[2058281] asTaskErr[2155095])
            val _args_vforon_fn[2155922]:c_void_ptr[149] "temp"
            (2155924 'move' _args_vforon_fn[2155922](2155926 'cast_to_void_star' _args_foron_fn[2155908]))
            val _args_sizeon_fn[2155928]:int(64)[13] "temp"
            (2155930 'move' _args_sizeon_fn[2155928](2155932 'sizeof_bundle' _class_localson_fn[2058276]))
            on(2155935 call wrapon_fn[2058310] call_tmp[2155886] _args_vforon_fn[2155922] _args_sizeon_fn[2155928] _args_foron_fn[2155908])
          }
        }
      }
      (2155943 '=' cur[2154034] curnext[2155001])
      val coerce_tmp[2155946]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2155948 'move' coerce_tmp[2155946](2155950 'cast' object[22] curnext[2155001]))
      const-val call_tmp[2155953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2155955 'move' call_tmp[2155953](2155957 'ptr_neq' coerce_tmp[2155946] nil[44]))
      (2155960 'move' tmp[2154955] call_tmp[2155953])
      tmp[2154955]
    }
    (1241040 return initTemp[1241001])
  }
  function _new[1734651](const in arg err[1734660]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    val initTemp[1734653]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1734695]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1734698 'move' call_tmp[1734695](1734707 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1734710]:c_void_ptr[149] "dead after last mention" "temp"
    (1734712 'move' cast_tmp[1734710](1734666 call chpl_here_alloc[187788] call_tmp[1734695] 41))
    (1734669 'move' initTemp[1734653](1734714 'cast' TaskErrors[169702] cast_tmp[1734710]))
    (1734671 'setcid' initTemp[1734653])
    val super_tmp[2155986]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    (2155988 'move' super_tmp[2155986](2155990 '.v' initTemp[1734653] super[355748]))
    val super_tmp[2155993]:object[22] "dead after last mention" "temporary of super field" "temp"
    (2155995 'move' super_tmp[2155993](2155997 '.v' super_tmp[2155986] super[355736]))
    (2156000 'setcid' super_tmp[2155993])
    val call_tmp[2156002]:object[22] "dead at end of block" "maybe param" "temp"
    (2156004 'move' call_tmp[2156002](2156006 'cast' object[22] super_tmp[2155986]))
    (2156009 'setcid' call_tmp[2156002])
    val init_coerce_tmp[2156011]:Error[167984] "dead after last mention" "temp"
    (2156013 'move' init_coerce_tmp[2156011](2156015 'cast' Error[167984] nil[44]))
    (2156018 '.=' super_tmp[2155986] _next[167912] init_coerce_tmp[2156011])
    (2156022 '.=' super_tmp[2155986] thrownLine[167917] 0)
    (2156026 '.=' super_tmp[2155986] thrownFileId[167925] 0)
    val tmp[2156030]:string[26] "dead after last mention" "temp"
    (2156033 call init[30763] tmp[2156030])
    (2156035 '.=' super_tmp[2155986] _msg[167930] tmp[2156030])
    (2156039 '.=' super_tmp[2155986] _hasThrowInfo[167936] 0)
    (2156043 'setcid' super_tmp[2155986])
    val call_tmp[2156045]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2156047 'move' call_tmp[2156045](2156049 'cast' Error[167984] initTemp[1734653]))
    (2156052 'setcid' call_tmp[2156045])
    (2156054 '.=' initTemp[1734653] nErrors[168363] 1)
    const-val call_tmp[2156063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156065 'move' call_tmp[2156063](2156067 '<' 1 0))
    if call_tmp[2156063]
    {
      (2156073 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2156076]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156078 'move' call_tmp[2156076](2156080 'cast' uint(64)[115] 1))
    const-val call_tmp[2156083]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156085 'move' call_tmp[2156083](2156088 call sizeof[1238508] owned Error?[966432]))
    const-val call_tmp[2156090]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156092 'move' call_tmp[2156090](2156094 '*' call_tmp[2156076] call_tmp[2156083]))
    const-val call_tmp[2156097]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156099 'move' call_tmp[2156097](2156102 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2156103]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156105 'move' call_tmp[2156103](2156108 call chpl_here_calloc[1238538] call_tmp[2156090] 1 call_tmp[2156097]))
    val call_tmp[2156112]:c_ptr(owned Error?)[1235634] "dead after last mention" "expr temp" "maybe param" "temp"
    (2156114 'move' call_tmp[2156112](2156116 'cast' c_ptr(owned Error?)[1235634] call_tmp[2156103]))
    (2156119 '.=' initTemp[1734653] errorsArray[168374] call_tmp[2156112])
    (2156123 'setcid' initTemp[1734653])
    val coerce_tmp[2156125]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2156127 'move' coerce_tmp[2156125] err[1734660])
    val tmp[2156130]:Error[167984] "temp"
    (2156132 'move' tmp[2156130](2156134 'cast' Error[167984] nil[44]))
    (2156137 '.=' coerce_tmp[2156125] _next[167912] tmp[2156130])
    val coerce_tmp[2156141]:c_ptr(owned Error?)[1235634] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2156143 'move' coerce_tmp[2156141](2156145 '.v' initTemp[1734653] errorsArray[168374]))
    ref call_tmp[2156148]:owned Error?[966432] "dead after last mention" "maybe param" "temp"
    (2156150 'move' call_tmp[2156148](2156152 'array_get' coerce_tmp[2156141] 0))
    (2156156 call retain[1238794] call_tmp[2156148] err[1734660])
    (1734690 return initTemp[1734653])
  }
  type TaskErrors[169702] val super[355748]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235634] "no doc"
  function chpl_error_type_name[169752](const in arg err[169749]:Error[167984], ref arg _retArg[1804498]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680241]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680244 'move' call_tmp[680241](169774 'getcid' err[169749]))
    const-val call_tmp[680246]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680249 'move' call_tmp[680246](169800 'class name by id' call_tmp[680241]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1782426]:Error[167984] "error variable" "temp"
    (1782442 'move' error[1782426] nil[44])
    const-val call_tmp[2165811]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165813 'move' call_tmp[2165811](2165815 'string_length_bytes' call_tmp[680246]))
    val errorExists[2072209]:bool[10] "temp"
    (2072214 'move' errorExists[2072209](2072211 '!=' error[1782426] nil[44]))
    if errorExists[2072209]
    {
      gotoErrorHandling handler[1782427] handler[1782427]
    }
    const-val ret[2104022]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2104024]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2104026 'move' call_tmp[2104024](2104028 'cast' c_ptr(uint(8))[937442] call_tmp[680246]))
    val error[2104033]:Error[167984] "error variable" "temp"
    (2104035 'move' error[2104033] nil[44])
    const-val ret[2104038]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2104040]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2104042]:Error[167984] "error variable" "temp"
    (2104044 'move' error[2104042] nil[44])
    const-val ret_tmp[2104047]:string[26] "temp"
    (2104050 call decodeByteBuffer[173938] call_tmp[2104024] call_tmp[2165811] strict[173692] error[2104042] ret_tmp[2104047])
    (2104056 'move' call_tmp[2104040] ret_tmp[2104047])
    val errorExists[2104059]:bool[10] "temp"
    (2104061 'move' errorExists[2104059](2104063 '!=' error[2104042] nil[44]))
    if errorExists[2104059]
    {
      (2104068 '=' error[2104033] error[2104042])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104077] _endcreateStringWithNewBuffer[2104077]
    }
    (2104074 'move' ret[2104038] call_tmp[2104040])
    label _endcreateStringWithNewBuffer[2104077]
    val errorExists[2104082]:bool[10] "temp"
    (2104084 'move' errorExists[2104082](2104086 '!=' error[2104033] nil[44]))
    if errorExists[2104082]
    {
      (2104091 '=' error[1782426] error[2104033])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104100] _endcreateStringWithNewBuffer[2104100]
    }
    (2104097 'move' ret[2104022] ret[2104038])
    label _endcreateStringWithNewBuffer[2104100]
    val errorExists[2072217]:bool[10] "temp"
    (2072222 'move' errorExists[2072217](2072219 '!=' error[1782426] nil[44]))
    if errorExists[2072217]
    {
      gotoErrorHandling handler[1782427] handler[1782427]
    }
    (544680 'move' nameS[169806] ret[2104022])
    label handler[1782427]
    val errorExists[2072225]:bool[10] "temp"
    (2072230 'move' errorExists[2072225](2072227 '!=' error[1782426] nil[44]))
    if errorExists[2072225]
    {
      (1782448 call chpl_uncaught_error[170289] error[1782426])
    }
    label _end_chpl_error_type_name[522270]
    (1804500 '=' _retArg[1804498] nameS[169806])
    (1804502 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:Error[167984], ref arg _retArg[1804528]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680256]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1804492]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1804492])
    (1804495 'move' call_tmp[680256] ret_tmp[1804492])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544683 'move' nameS[169842] call_tmp[680256])
    const-val call_tmp[680261]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803206]:string[26] "temp"
    (169849 call +[38345] nameS[169842] ": " ret_tmp[1803206])
    (1803209 'move' call_tmp[680261] ret_tmp[1803206])
    const-val call_tmp[680268]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1775300]:int(32)[95] "temp"
    (1775304 'move' _virtual_method_tmp_[1775300](1775302 'getcid' err[169832]))
    val ret_tmp[1804444]:string[26] "temp"
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1775300] err[169832] ret_tmp[1804444])
    (1804447 'move' call_tmp[680268] ret_tmp[1804444])
    const-val call_tmp[680273]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803212]:string[26] "temp"
    (169857 call +[38345] call_tmp[680261] call_tmp[680268] ret_tmp[1803212])
    (1803215 'move' call_tmp[680273] ret_tmp[1803212])
    ref i_x[2093139]:string[26] "temp"
    (2093143 'move' i_x[2093139](2093141 'set reference' call_tmp[680268]))
    (2093147 call deinit[30834] i_x[2093139])
    ref i_x[2093151]:string[26] "temp"
    (2093155 'move' i_x[2093151](2093153 'set reference' call_tmp[680261]))
    (2093159 call deinit[30834] i_x[2093151])
    ref i_x[2093163]:string[26] "temp"
    (2093167 'move' i_x[2093163](2093165 'set reference' nameS[169842]))
    (2093171 call deinit[30834] i_x[2093163])
    label _end_chpl_describe_error[522282]
    (1804530 '=' _retArg[1804528] call_tmp[680273])
    (1804532 return _void[55])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:Error[167984]) : Error[167984] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    val fixErr[169885]:Error[167984] "dead at end of block" "insert auto destroy"
    (544687 'move' fixErr[169885] err[169874])
    val coerce_tmp[969505]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969510 'move' coerce_tmp[969505](969507 'cast' object[22] err[169874]))
    const-val call_tmp[2076404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2076406 'move' call_tmp[2076404](2076408 'ptr_eq' coerce_tmp[969505] nil[44]))
    if call_tmp[2076404]
    {
      val new_temp[969620]:NilThrownError[168029] "dead after last mention" "temp"
      (969622 'move' new_temp[969620](969552 call _new[969568]))
      (2181249 '=' fixErr[169885](2181251 'cast' Error[167984] new_temp[969620]))
    }
    const-val call_tmp[680293]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680296 'move' call_tmp[680293](169927 '_get_user_line'))
    const-val call_tmp[680298]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680301 'move' call_tmp[680298](169950 '_get_user_file'))
    val coerce_tmp[2137362]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2137364 'move' coerce_tmp[2137362](2137366 'cast' object[22] fixErr[169885]))
    const-val call_tmp[2137369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2137371 'move' call_tmp[2137369](2137373 'ptr_eq' coerce_tmp[2137362] nil[44]))
    if call_tmp[2137369]
    {
      (2137379 call nilCheckHalt[210169] "argument to ! is nil")
    }
    val coerce_tmp[969744]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969749 'move' coerce_tmp[969744] fixErr[169885])
    const-val coerce_tmp[969752]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969756 'move' coerce_tmp[969752](2320175 '.v' coerce_tmp[969744] _hasThrowInfo[167936]))
    const-val call_tmp[2078002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078004 'move' call_tmp[2078002](2078006 '!' coerce_tmp[969752]))
    if call_tmp[2078002]
    {
      val coerce_tmp[2137385]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2137387 'move' coerce_tmp[2137385](2137389 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2137392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2137394 'move' call_tmp[2137392](2137396 'ptr_eq' coerce_tmp[2137385] nil[44]))
      if call_tmp[2137392]
      {
        (2137402 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[969760]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969765 'move' coerce_tmp[969760] fixErr[169885])
      (2320181 '.=' coerce_tmp[969760] _hasThrowInfo[167936] 1)
      val coerce_tmp[2137408]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2137410 'move' coerce_tmp[2137408](2137412 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2137415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2137417 'move' call_tmp[2137415](2137419 'ptr_eq' coerce_tmp[2137408] nil[44]))
      if call_tmp[2137415]
      {
        (2137425 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[969770]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969775 'move' coerce_tmp[969770] fixErr[169885])
      (2320187 '.=' coerce_tmp[969770] thrownLine[167917] call_tmp[680293])
      val coerce_tmp[2137431]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2137433 'move' coerce_tmp[2137431](2137435 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2137438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2137440 'move' call_tmp[2137438](2137442 'ptr_eq' coerce_tmp[2137431] nil[44]))
      if call_tmp[2137438]
      {
        (2137448 call nilCheckHalt[210169] "argument to ! is nil")
      }
      val coerce_tmp[969780]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969785 'move' coerce_tmp[969780] fixErr[169885])
      (2320193 '.=' coerce_tmp[969780] thrownFileId[167925] call_tmp[680298])
    }
    label _end_chpl_do_fix_thrown_error[522294]
    (522298 return fixErr[169885])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966477]) : Error[167984] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969472]:owned Error[966477] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969475 'move' _formal_tmp_err[969472] err[170046])
    val call_tmp[680380]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680383 'move' call_tmp[680380](170059 call release[969217] _formal_tmp_err[969472]))
    val call_tmp[680385]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (680388 'move' call_tmp[680385](170061 call chpl_do_fix_thrown_error[169877] call_tmp[680380]))
    (1815436 call chpl__autoDestroy[1442451] _formal_tmp_err[969472])
    (522320 return call_tmp[680385])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    val coerce_tmp[1734103]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734108 'move' coerce_tmp[1734103](1734105 'cast' object[22] err[170260]))
    const-val call_tmp[2077474]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2077476 'move' call_tmp[2077474](2077478 'ptr_neq' coerce_tmp[1734103] nil[44]))
    if call_tmp[2077474]
    {
      val coerce_tmp[2244002]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2244004 'move' coerce_tmp[2244002](2244006 'cast' object[22] err[170260]))
      const-val call_tmp[2244009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2244011 'move' call_tmp[2244009](2244013 'ptr_neq' coerce_tmp[2244002] nil[44]))
      if call_tmp[2244009]
      {
        val _virtual_method_tmp_[2244023]:int(32)[95] "temp"
        (2244025 'move' _virtual_method_tmp_[2244023](2244027 'getcid' err[170260]))
        (2244029 'virtual method call' deinit[811765] _virtual_method_tmp_[2244023] err[170260])
        const-val call_tmp[2244035]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2244037 'move' call_tmp[2244035](2244039 '_wide_get_locale' err[170260]))
        val isdirect[2244044]:bool[10] "temp"
        (2244046 'move' isdirect[2244044](2244049 call chpl_doDirectExecuteOn[187469] call_tmp[2244035]))
        if isdirect[2244044]
        {
          (2244054 call on_fn[1236461] err[170260])
        }
        {
          val _args_foron_fn[2244057]:_class_localson_fn[2058191] "temp"
          (2244059 'move' _args_foron_fn[2244057](2244061 'stack allocate class' _class_localson_fn[2058191]))
          (2244063 '.=' _args_foron_fn[2244057] _0_tmp[2058194] call_tmp[2244035])
          (2244067 '.=' _args_foron_fn[2244057] _1_arg[2058196] err[170260])
          val _args_vforon_fn[2244071]:c_void_ptr[149] "temp"
          (2244073 'move' _args_vforon_fn[2244071](2244075 'cast_to_void_star' _args_foron_fn[2244057]))
          val _args_sizeon_fn[2244077]:int(64)[13] "temp"
          (2244079 'move' _args_sizeon_fn[2244077](2244081 'sizeof_bundle' _class_localson_fn[2058191]))
          on(2244084 call wrapon_fn[2058225] call_tmp[2244035] _args_vforon_fn[2244071] _args_sizeon_fn[2244077] _args_foron_fn[2244057])
        }
      }
    }
    (522339 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:Error[167984]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val call_tmp[680450]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680453 'move' call_tmp[680450](170321 '_get_user_file'))
    const-val call_tmp[680455]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680458 'move' call_tmp[680455](170322 'chpl_lookupFilename' call_tmp[680450]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1782459]:Error[167984] "error variable" "temp"
    (1782475 'move' error[1782459] nil[44])
    const-val call_tmp[2165833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165835 'move' call_tmp[2165833](2165837 'string_length_bytes' call_tmp[680455]))
    val errorExists[2072233]:bool[10] "temp"
    (2072238 'move' errorExists[2072233](2072235 '!=' error[1782459] nil[44]))
    if errorExists[2072233]
    {
      gotoErrorHandling handler[1782460] handler[1782460]
    }
    const-val ret[2104120]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2104122]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2104124 'move' call_tmp[2104122](2104126 'cast' c_ptr(uint(8))[937442] call_tmp[680455]))
    val error[2104131]:Error[167984] "error variable" "temp"
    (2104133 'move' error[2104131] nil[44])
    const-val ret[2104136]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2104138]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2104140]:Error[167984] "error variable" "temp"
    (2104142 'move' error[2104140] nil[44])
    const-val ret_tmp[2104145]:string[26] "temp"
    (2104148 call decodeByteBuffer[173938] call_tmp[2104122] call_tmp[2165833] strict[173692] error[2104140] ret_tmp[2104145])
    (2104154 'move' call_tmp[2104138] ret_tmp[2104145])
    val errorExists[2104157]:bool[10] "temp"
    (2104159 'move' errorExists[2104157](2104161 '!=' error[2104140] nil[44]))
    if errorExists[2104157]
    {
      (2104166 '=' error[2104131] error[2104140])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104175] _endcreateStringWithNewBuffer[2104175]
    }
    (2104172 'move' ret[2104136] call_tmp[2104138])
    label _endcreateStringWithNewBuffer[2104175]
    val errorExists[2104180]:bool[10] "temp"
    (2104182 'move' errorExists[2104180](2104184 '!=' error[2104131] nil[44]))
    if errorExists[2104180]
    {
      (2104189 '=' error[1782459] error[2104131])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104198] _endcreateStringWithNewBuffer[2104198]
    }
    (2104195 'move' ret[2104120] ret[2104136])
    label _endcreateStringWithNewBuffer[2104198]
    val errorExists[2072241]:bool[10] "temp"
    (2072246 'move' errorExists[2072241](2072243 '!=' error[1782459] nil[44]))
    if errorExists[2072241]
    {
      gotoErrorHandling handler[1782460] handler[1782460]
    }
    (544710 'move' myFileS[170328] ret[2104120])
    label handler[1782460]
    val errorExists[2072249]:bool[10] "temp"
    (2072254 'move' errorExists[2072249](2072251 '!=' error[1782459] nil[44]))
    if errorExists[2072249]
    {
      (1782481 call chpl_uncaught_error[170289] error[1782459])
    }
    const-val call_tmp[680465]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680468 'move' call_tmp[680465](170346 '_get_user_line'))
    val coerce_tmp[1734146]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1734151 'move' coerce_tmp[1734146] err[170286])
    ref call_tmp[2177162]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2177164 'move' call_tmp[2177162](2177166 '.' coerce_tmp[1734146] thrownFileId[167925]))
    const-val call_tmp[680477]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680480 'move' call_tmp[680477](170358 'chpl_lookupFilename' call_tmp[2177162]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1782492]:Error[167984] "error variable" "temp"
    (1782508 'move' error[1782492] nil[44])
    const-val call_tmp[2165855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165857 'move' call_tmp[2165855](2165859 'string_length_bytes' call_tmp[680477]))
    val errorExists[2072257]:bool[10] "temp"
    (2072262 'move' errorExists[2072257](2072259 '!=' error[1782492] nil[44]))
    if errorExists[2072257]
    {
      gotoErrorHandling handler[1782493] handler[1782493]
    }
    const-val ret[2104218]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2104220]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2104222 'move' call_tmp[2104220](2104224 'cast' c_ptr(uint(8))[937442] call_tmp[680477]))
    val error[2104229]:Error[167984] "error variable" "temp"
    (2104231 'move' error[2104229] nil[44])
    const-val ret[2104234]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2104236]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2104238]:Error[167984] "error variable" "temp"
    (2104240 'move' error[2104238] nil[44])
    const-val ret_tmp[2104243]:string[26] "temp"
    (2104246 call decodeByteBuffer[173938] call_tmp[2104220] call_tmp[2165855] strict[173692] error[2104238] ret_tmp[2104243])
    (2104252 'move' call_tmp[2104236] ret_tmp[2104243])
    val errorExists[2104255]:bool[10] "temp"
    (2104257 'move' errorExists[2104255](2104259 '!=' error[2104238] nil[44]))
    if errorExists[2104255]
    {
      (2104264 '=' error[2104229] error[2104238])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104273] _endcreateStringWithNewBuffer[2104273]
    }
    (2104270 'move' ret[2104234] call_tmp[2104236])
    label _endcreateStringWithNewBuffer[2104273]
    val errorExists[2104278]:bool[10] "temp"
    (2104280 'move' errorExists[2104278](2104282 '!=' error[2104229] nil[44]))
    if errorExists[2104278]
    {
      (2104287 '=' error[1782492] error[2104229])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104296] _endcreateStringWithNewBuffer[2104296]
    }
    (2104293 'move' ret[2104218] ret[2104234])
    label _endcreateStringWithNewBuffer[2104296]
    val errorExists[2072265]:bool[10] "temp"
    (2072270 'move' errorExists[2072265](2072267 '!=' error[1782492] nil[44]))
    if errorExists[2072265]
    {
      gotoErrorHandling handler[1782493] handler[1782493]
    }
    (544728 'move' thrownFileS[170364] ret[2104218])
    label handler[1782493]
    val errorExists[2072273]:bool[10] "temp"
    (2072278 'move' errorExists[2072273](2072275 '!=' error[1782492] nil[44]))
    if errorExists[2072273]
    {
      (1782514 call chpl_uncaught_error[170289] error[1782492])
    }
    val coerce_tmp[1734188]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1734193 'move' coerce_tmp[1734188] err[170286])
    const-val coerce_tmp[1734198]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1734202 'move' coerce_tmp[1734198](2320208 '.v' coerce_tmp[1734188] thrownLine[167917]))
    (544731 'noop')
    const-val call_tmp[680494]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804522]:string[26] "temp"
    (170408 call chpl_describe_error[169835] err[170286] ret_tmp[1804522])
    (1804525 'move' call_tmp[680494] ret_tmp[1804522])
    const-val call_tmp[680499]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803218]:string[26] "temp"
    (170409 call +[38345] "uncaught " call_tmp[680494] ret_tmp[1803218])
    (1803221 'move' call_tmp[680499] ret_tmp[1803218])
    const-val call_tmp[680504]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803224]:string[26] "temp"
    (170428 call +[38345] call_tmp[680499] "\n  " ret_tmp[1803224])
    (1803227 'move' call_tmp[680504] ret_tmp[1803224])
    const-val call_tmp[680509]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803230]:string[26] "temp"
    (170431 call +[38345] call_tmp[680504] thrownFileS[170364] ret_tmp[1803230])
    (1803233 'move' call_tmp[680509] ret_tmp[1803230])
    const-val call_tmp[680514]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803236]:string[26] "temp"
    (170434 call +[38345] call_tmp[680509] ":" ret_tmp[1803236])
    (1803239 'move' call_tmp[680514] ret_tmp[1803236])
    const-val call_tmp[680519]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806388]:string[26] "temp"
    (170438 call _cast[1063172] coerce_tmp[1734198] ret_tmp[1806388])
    (1806391 'move' call_tmp[680519] ret_tmp[1806388])
    const-val call_tmp[680524]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803242]:string[26] "temp"
    (170440 call +[38345] call_tmp[680514] call_tmp[680519] ret_tmp[1803242])
    (1803245 'move' call_tmp[680524] ret_tmp[1803242])
    const-val call_tmp[680529]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803248]:string[26] "temp"
    (170459 call +[38345] call_tmp[680524] ": thrown here" ret_tmp[1803248])
    (1803251 'move' call_tmp[680529] ret_tmp[1803248])
    const-val call_tmp[680534]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803254]:string[26] "temp"
    (170462 call +[38345] call_tmp[680529] "\n  " ret_tmp[1803254])
    (1803257 'move' call_tmp[680534] ret_tmp[1803254])
    const-val call_tmp[680539]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803260]:string[26] "temp"
    (170465 call +[38345] call_tmp[680534] myFileS[170328] ret_tmp[1803260])
    (1803263 'move' call_tmp[680539] ret_tmp[1803260])
    const-val call_tmp[680544]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803266]:string[26] "temp"
    (170468 call +[38345] call_tmp[680539] ":" ret_tmp[1803266])
    (1803269 'move' call_tmp[680544] ret_tmp[1803266])
    const-val call_tmp[680549]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806394]:string[26] "temp"
    (170472 call _cast[1063172] call_tmp[680465] ret_tmp[1806394])
    (1806397 'move' call_tmp[680549] ret_tmp[1806394])
    const-val call_tmp[680554]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803272]:string[26] "temp"
    (170474 call +[38345] call_tmp[680544] call_tmp[680549] ret_tmp[1803272])
    (1803275 'move' call_tmp[680554] ret_tmp[1803272])
    const-val call_tmp[680559]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1803278]:string[26] "temp"
    (170493 call +[38345] call_tmp[680554] ": uncaught here" ret_tmp[1803278])
    (1803281 'move' call_tmp[680559] ret_tmp[1803278])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544733 'move' s[170495] call_tmp[680559])
    const-val coerce_tmp[2115258]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2115260 'move' coerce_tmp[2115258](2115262 '.v' s[170495] locale_id[30757]))
    const-val call_tmp[2115265]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2115267 'move' call_tmp[2115265](2115269 '!=' coerce_tmp[2115258] chpl_nodeID[208207]))
    if call_tmp[2115265]
    {
      (2115275 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2115278]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2115280 'move' coerce_tmp[2115278](2115282 '.v' s[170495] buff[30740]))
    const-val call_tmp[2115285]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2115287 'move' call_tmp[2115285](2115289 'cast' c_string[19] coerce_tmp[2115278]))
    (170507 call chpl_error_preformatted[1734272] call_tmp[2115285])
    ref i_x[2093175]:string[26] "temp"
    (2093179 'move' i_x[2093175](2093177 'set reference' s[170495]))
    (2093183 call deinit[30834] i_x[2093175])
    ref i_x[2093187]:string[26] "temp"
    (2093191 'move' i_x[2093187](2093189 'set reference' call_tmp[680554]))
    (2093195 call deinit[30834] i_x[2093187])
    ref i_x[2093199]:string[26] "temp"
    (2093203 'move' i_x[2093199](2093201 'set reference' call_tmp[680549]))
    (2093207 call deinit[30834] i_x[2093199])
    ref i_x[2093211]:string[26] "temp"
    (2093215 'move' i_x[2093211](2093213 'set reference' call_tmp[680544]))
    (2093219 call deinit[30834] i_x[2093211])
    ref i_x[2093223]:string[26] "temp"
    (2093227 'move' i_x[2093223](2093225 'set reference' call_tmp[680539]))
    (2093231 call deinit[30834] i_x[2093223])
    ref i_x[2093235]:string[26] "temp"
    (2093239 'move' i_x[2093235](2093237 'set reference' call_tmp[680534]))
    (2093243 call deinit[30834] i_x[2093235])
    ref i_x[2093247]:string[26] "temp"
    (2093251 'move' i_x[2093247](2093249 'set reference' call_tmp[680529]))
    (2093255 call deinit[30834] i_x[2093247])
    ref i_x[2093259]:string[26] "temp"
    (2093263 'move' i_x[2093259](2093261 'set reference' call_tmp[680524]))
    (2093267 call deinit[30834] i_x[2093259])
    ref i_x[2093271]:string[26] "temp"
    (2093275 'move' i_x[2093271](2093273 'set reference' call_tmp[680519]))
    (2093279 call deinit[30834] i_x[2093271])
    ref i_x[2093283]:string[26] "temp"
    (2093287 'move' i_x[2093283](2093285 'set reference' call_tmp[680514]))
    (2093291 call deinit[30834] i_x[2093283])
    ref i_x[2093295]:string[26] "temp"
    (2093299 'move' i_x[2093295](2093297 'set reference' call_tmp[680509]))
    (2093303 call deinit[30834] i_x[2093295])
    ref i_x[2093307]:string[26] "temp"
    (2093311 'move' i_x[2093307](2093309 'set reference' call_tmp[680504]))
    (2093315 call deinit[30834] i_x[2093307])
    ref i_x[2093319]:string[26] "temp"
    (2093323 'move' i_x[2093319](2093321 'set reference' call_tmp[680499]))
    (2093327 call deinit[30834] i_x[2093319])
    ref i_x[2093331]:string[26] "temp"
    (2093335 'move' i_x[2093331](2093333 'set reference' call_tmp[680494]))
    (2093339 call deinit[30834] i_x[2093331])
    ref i_x[2093343]:string[26] "temp"
    (2093347 'move' i_x[2093343](2093345 'set reference' thrownFileS[170364]))
    (2093351 call deinit[30834] i_x[2093343])
    ref i_x[2093355]:string[26] "temp"
    (2093359 'move' i_x[2093355](2093357 'set reference' myFileS[170328]))
    (2093363 call deinit[30834] i_x[2093355])
    (522343 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:Error[167984]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522345 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522349]:Error[167984] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[2290071]:TaskErrors[169702] "temp"
    val ret[2290073]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2290075]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2290077 'move' coerce_tmp[2290075](2290079 'cast' object[22] err[170532]))
    const-val call_tmp[2290082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2290084 'move' call_tmp[2290082](2290086 'ptr_eq' coerce_tmp[2290075] nil[44]))
    if call_tmp[2290082]
    {
      (2290091 'move' ret[2290073](2290093 'cast' TaskErrors[169702] nil[44]))
      gotoReturn _end__cast[2290109] _end__cast[2290109]
    }
    val call_tmp[2290099]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
    (2290101 'move' call_tmp[2290099](2290103 'dynamic_cast' _formal_type_tmp_[2290071] err[170532]))
    (2290106 'move' ret[2290073] call_tmp[2290099])
    label _end__cast[2290109]
    val coerce_tmp[1734535]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1734540 'move' coerce_tmp[1734535](1734537 'cast' object[22] ret[2290073]))
    const-val call_tmp[2079114]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2079116 'move' call_tmp[2079114](2079118 'ptr_neq' coerce_tmp[1734535] nil[44]))
    if call_tmp[2079114]
    {
      (1734720 'move' ret[522349] err[170532])
      gotoReturn _end_chpl_forall_error[522347] _end_chpl_forall_error[522347]
    }
    val new_temp[1734701]:TaskErrors[169702] "dead after last mention" "temp"
    (1734703 'move' new_temp[1734701](1734547 call _new[1734651] err[170532]))
    (522361 'move' ret[522349](1734722 'cast' Error[167984] new_temp[1734701]))
    label _end_chpl_forall_error[522347]
    (522351 return ret[522349])
  }
  function chpl_enum_cast_error[1071874](const in arg casted[1071876]:uint(8)[100], const  ref arg enumName[1071878]:string[26], ref arg error_out[1784766]:Error[167984]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1071884]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806708]:string[26] "temp"
    (1071889 call _cast[1071938] casted[1071876] ret_tmp[1806708])
    (1806711 'move' call_tmp[1071884] ret_tmp[1806708])
    const-val call_tmp[1071892]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803410]:string[26] "temp"
    (1071897 call +[38345] "bad cast from int '" call_tmp[1071884] ret_tmp[1803410])
    (1803413 'move' call_tmp[1071892] ret_tmp[1803410])
    const-val call_tmp[1071900]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803416]:string[26] "temp"
    (1071905 call +[38345] call_tmp[1071892] "' to enum '" ret_tmp[1803416])
    (1803419 'move' call_tmp[1071900] ret_tmp[1803416])
    const-val call_tmp[1071908]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1803422]:string[26] "temp"
    (1071913 call +[38345] call_tmp[1071900] enumName[1071878] ret_tmp[1803422])
    (1803425 'move' call_tmp[1071908] ret_tmp[1803422])
    const-val call_tmp[1071916]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073574]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073576 'move' new_temp[1073574](1073500 call _new[1073521] call_tmp[1071908] "'"))
    const-val initTemp[1073595]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "temp"
    (1073598 call init[1064228] initTemp[1073595] new_temp[1073574])
    (1071918 'move' call_tmp[1071916] initTemp[1073595])
    val call_tmp[1071926]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073612]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1806592]:owned Error[966477] "temp"
    ref i_x[2213222]:owned IllegalArgumentError[1064577] "temp"
    (2213226 'move' i_x[2213222](2213224 'set reference' call_tmp[1071916]))
    ref i__retArg[2213228]:owned Error[966477] "temp"
    (2213232 'move' i__retArg[2213228](2213230 'set reference' ret_tmp[1806592]))
    val _formal_tmp_x[2213235]:owned IllegalArgumentError[1064577] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2213237 'move' _formal_tmp_x[2213235] i_x[2213222])
    const-val ret[2213240]:owned Error[966477] "dead after last mention" "RVV" "temp"
    ref i_this[2213242]:owned IllegalArgumentError[1064577] "temp"
    (2213244 'move' i_this[2213242](2213246 'set reference' _formal_tmp_x[2213235]))
    val coerce_tmp[2213248]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2213250 'move' coerce_tmp[2213248](2213252 '.v' i_this[2213242] chpl_p[1064572]))
    val call_tmp[2213255]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213257 'move' call_tmp[2213255](2213259 'cast' Error[167984] coerce_tmp[2213248]))
    ref i_this[2213267]:owned IllegalArgumentError[1064577] "temp"
    (2213269 'move' i_this[2213267](2213271 'set reference' _formal_tmp_x[2213235]))
    val tmp[2213273]:IllegalArgumentError[168246] "temp"
    (2213275 'move' tmp[2213273](2213277 'cast' IllegalArgumentError[168246] nil[44]))
    (2213280 '.=' i_this[2213267] chpl_p[1064572] tmp[2213273])
    val coerce_tmp[2213284]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2213286 'move' coerce_tmp[2213284](2213288 'cast' object[22] call_tmp[2213255]))
    const-val call_tmp[2213291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2213293 'move' call_tmp[2213291](2213295 'ptr_eq' coerce_tmp[2213284] nil[44]))
    if call_tmp[2213291]
    {
      (2213301 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[2213304]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2213306]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
    (2213309 call init[968113] initTemp[2213306] call_tmp[2213255])
    (2213312 'move' call_tmp[2213304] initTemp[2213306])
    (2213315 'move' ret[2213240] call_tmp[2213304])
    (2213319 call chpl__autoDestroy[1512515] _formal_tmp_x[2213235])
    (2213323 '=' i__retArg[2213228] ret[2213240])
    (1806595 'move' coerce_tmp[1073612] ret_tmp[1806592])
    const-val _formal_tmp_in_err[1073791]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073795 'move' _formal_tmp_in_err[1073791] coerce_tmp[1073612])
    (1071928 'move' call_tmp[1071926](1071931 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073791]))
    (1784779 '=' error_out[1784766] call_tmp[1071926])
    ref i_x[2094387]:string[26] "temp"
    (2094391 'move' i_x[2094387](2094389 'set reference' call_tmp[1071908]))
    (2094395 call deinit[30834] i_x[2094387])
    ref i_x[2094399]:string[26] "temp"
    (2094403 'move' i_x[2094399](2094401 'set reference' call_tmp[1071900]))
    (2094407 call deinit[30834] i_x[2094399])
    ref i_x[2094411]:string[26] "temp"
    (2094415 'move' i_x[2094411](2094413 'set reference' call_tmp[1071892]))
    (2094419 call deinit[30834] i_x[2094411])
    ref i_x[2094423]:string[26] "temp"
    (2094427 'move' i_x[2094423](2094425 'set reference' call_tmp[1071884]))
    (2094431 call deinit[30834] i_x[2094423])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[1784768] _endchpl_enum_cast_error[1784768]
    label _endchpl_enum_cast_error[1784768]
    (1071935 return _void[55])
  }
  function on_fn[935357](ref arg this[1781247]:chpl_TaskErrors[168348], const in arg err[1781249]:Error[167984]) : void[4] "on" "resolved"
  {
    ref call_tmp[2177479]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2177481 'move' call_tmp[2177479](2177483 '.' this[1781247] _errorsLock[168271]))
    const-val call_tmp[2162177]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2162179 'move' call_tmp[2162177](2162181 '_wide_get_locale' call_tmp[2177479]))
    val isdirect[2162186]:bool[10] "temp"
    (2162188 'move' isdirect[2162186](2162191 call chpl_doDirectExecuteOn[187469] call_tmp[2162177]))
    if isdirect[2162186]
    {
      (2162196 call on_fn[935492] call_tmp[2177479])
    }
    {
      val _args_foron_fn[2162199]:_class_localson_fn[2052046] "temp"
      (2162201 'move' _args_foron_fn[2162199](2162203 'stack allocate class' _class_localson_fn[2052046]))
      (2162205 '.=' _args_foron_fn[2162199] _0_tmp[2052049] call_tmp[2162177])
      ref tmp[2162209]:chpl_LocalSpinlock[187432] "temp"
      (2162211 'move' tmp[2162209](2162213 'set reference' call_tmp[2177479]))
      (2162215 '.=' _args_foron_fn[2162199] _1_this[2052051] tmp[2162209])
      val _args_vforon_fn[2162219]:c_void_ptr[149] "temp"
      (2162221 'move' _args_vforon_fn[2162219](2162223 'cast_to_void_star' _args_foron_fn[2162199]))
      val _args_sizeon_fn[2162225]:int(64)[13] "temp"
      (2162227 'move' _args_sizeon_fn[2162225](2162229 'sizeof_bundle' _class_localson_fn[2052046]))
      on(2162232 call wrapon_fn[2052086] call_tmp[2162177] _args_vforon_fn[2162219] _args_sizeon_fn[2162225] _args_foron_fn[2162199])
    }
    val coerce_tmp[1232422]:Error[167984] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1232426 'move' coerce_tmp[1232422](2320855 '.v' this[1781247] _head[168266]))
    (544607 'noop')
    val coerce_tmp[1232429]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232434 'move' coerce_tmp[1232429] err[1781249])
    (2320861 '.=' coerce_tmp[1232429] _next[167912] coerce_tmp[1232422])
    (2320867 '.=' this[1781247] _head[168266] err[1781249])
    ref call_tmp[2177489]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2177491 'move' call_tmp[2177489](2177493 '.' this[1781247] _errorsLock[168271]))
    ref call_tmp[2162904]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2162906 'move' call_tmp[2162904](2162908 '.' call_tmp[2177489] l[187317]))
    const-val call_tmp[2162918]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2162920 'move' call_tmp[2162918](2162922 '_wide_get_locale' call_tmp[2162904]))
    val isdirect[2162927]:bool[10] "temp"
    (2162929 'move' isdirect[2162927](2162932 call chpl_doDirectExecuteOn[187469] call_tmp[2162918]))
    if isdirect[2162927]
    {
      (2162937 call on_fn[1233101] call_tmp[2162904] 0)
    }
    {
      val _args_foron_fn[2162941]:_class_localson_fn[2057683] "temp"
      (2162943 'move' _args_foron_fn[2162941](2162945 'stack allocate class' _class_localson_fn[2057683]))
      (2162947 '.=' _args_foron_fn[2162941] _0_tmp[2057686] call_tmp[2162918])
      ref tmp[2162951]:AtomicBool[45877] "temp"
      (2162953 'move' tmp[2162951](2162955 'set reference' call_tmp[2162904]))
      (2162957 '.=' _args_foron_fn[2162941] _1_this[2057688] tmp[2162951])
      (2162961 '.=' _args_foron_fn[2162941] _2_value[2057690] 0)
      val _args_vforon_fn[2162965]:c_void_ptr[149] "temp"
      (2162967 'move' _args_vforon_fn[2162965](2162969 'cast_to_void_star' _args_foron_fn[2162941]))
      val _args_sizeon_fn[2162971]:int(64)[13] "temp"
      (2162973 'move' _args_sizeon_fn[2162971](2162975 'sizeof_bundle' _class_localson_fn[2057683]))
      on(2162978 call wrapon_fn[2057729] call_tmp[2162918] _args_vforon_fn[2162965] _args_sizeon_fn[2162971] _args_foron_fn[2162941])
    }
    (935364 return _void[55])
  }
  function chpl_error_preformatted[1734272](const in arg c_string[1734274]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1734280 return _void[55])
  }
  function wrapon_fn[2051875](const in arg dummy_locale_arg[2051877]:chpl_localeID_t[209352], in arg buf[2051879]:c_void_ptr[149], in arg buf_size[2051881]:int(64)[13], in arg c[2051883]:_class_localson_fn[2051829]) : void[4] "on block"
  {
    ref _1_this[2051895]:chpl_TaskErrors[168348] "temp"
    (2051900 'move' _1_this[2051895](2051897 '.v' c[2051883] _1_this[2051834]))
    val _2_err[2051903]:Error[167984] "temp"
    (2051908 'move' _2_err[2051903](2051905 '.v' c[2051883] _2_err[2051836]))
    (2051886 call on_fn[935357] _1_this[2051895] _2_err[2051903])
    (2051911 return _void[55])
  }
}