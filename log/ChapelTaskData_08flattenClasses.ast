AST dump for ChapelTaskData after pass flattenClasses.
Module use list: ChapelStandard SysCTypes 

{
  const chpl_offset_endCount[170938] "const" "private"(170936 call _cast size_t[20657] 0)
  (170941 'end of statement')
  const chpl_offset_serial[170945] "const" "private"(170944 call sizeof_endcount_ptr)
  (170948 'end of statement')
  const chpl_offset_end[170953] "const" "private"(170951 call + chpl_offset_serial[170945] 1)
  (170956 'end of statement')
  function sizeof_endcount_ptr[170959]() : _unknown[51] "private"
  {
    (170971 return(170969 call +(170964 call c_sizeof chpl_localeID_t[209352])(170968 call c_sizeof c_void_ptr[149])))
  }
  function chpl_task_data_setDynamicEndCount[170985](arg tls[170982] :
  (170981 call c_ptr[205100](?) chpl_task_infoChapel_t[88580]), arg end[170988] :
  _remoteEndCountType[12847]) : _unknown[51] "no return value for void"
  {
    unknown prv[170998](170996 call _cast(170995 call c_ptr[205100](?) c_uchar[20608]) tls[170982])
    (171001 'end of statement')
    unknown i[171004] size_t[20657]
    (171007 'end of statement')
    unknown loc[171012](171011 '_wide_get_locale' end[170988])
    (171015 'end of statement')
    unknown adr[171020](171019 '_wide_get_addr' end[170988])
    (171023 'end of statement')
    (171026 call = i[171004] chpl_offset_endCount[170938])
    (171046 call c_memcpy(171036 call c_ptrTo(171034 call prv[170998] i[171004]))(171041 call c_ptrTo loc[171012])(171045 call c_sizeof chpl_localeID_t[209352]))
    (171053 call += i[171004](171052 call c_sizeof chpl_localeID_t[209352]))
    (171073 call c_memcpy(171063 call c_ptrTo(171061 call prv[170998] i[171004]))(171068 call c_ptrTo adr[171020])(171072 call c_sizeof c_void_ptr[149]))
  }
  function chpl_task_data_getDynamicEndCount[171086](arg tls[171083] :
  (171082 call c_ptr[205100](?) chpl_task_infoChapel_t[88580])) : _unknown[51]
  {
    unknown prv[171095](171093 call _cast(171092 call c_ptr[205100](?) c_uchar[20608]) tls[171083])
    (171098 'end of statement')
    unknown i[171101] size_t[20657]
    (171104 'end of statement')
    unknown loc[171106] chpl_localeID_t[209352]
    (171109 'end of statement')
    unknown adr[171111] c_void_ptr[149]
    (171114 'end of statement')
    (171117 call = i[171101] chpl_offset_endCount[170938])
    (171137 call c_memcpy(171124 call c_ptrTo loc[171106])(171132 call c_ptrTo(171130 call prv[171095] i[171101]))(171136 call c_sizeof chpl_localeID_t[209352]))
    (171144 call += i[171101](171143 call c_sizeof chpl_localeID_t[209352]))
    (171164 call c_memcpy(171151 call c_ptrTo adr[171111])(171159 call c_ptrTo(171157 call prv[171095] i[171101]))(171163 call c_sizeof c_void_ptr[149]))
    unknown ret[171188](171187 '_wide_make' _remoteEndCountType[12847] loc[171106] adr[171111])
    (171191 'end of statement')
    (171193 return ret[171188])
  }
  function chpl_task_data_setSerial[171206](arg tls[171203] :
  (171202 call c_ptr[205100](?) chpl_task_infoChapel_t[88580]), arg makeSerial[171209] :
  bool[10]) : _unknown[51] "no return value for void"
  {
    unknown prv[171220](171218 call _cast(171217 call c_ptr[205100](?) c_uchar[20608]) tls[171203])
    (171223 'end of statement')
    unknown i[171226] chpl_offset_serial[170945]
    (171229 'end of statement')
    unknown v[171235] 0(171233 call uint(64)[115] 8)
    (171238 'end of statement')
    if(171245 call _cond_test makeSerial[171209])
    {
      (171242 call = v[171235] 1)
    }
    (171270 call c_memcpy(171257 call c_ptrTo(171255 call prv[171220] i[171226]))(171262 call c_ptrTo v[171235])(171269 call c_sizeof(171267 call uint(64)[115] 8)))
  }
  { scopeless type
    void[4]
  }
  function chpl_task_data_getSerial[171284](arg tls[171281] :
  (171280 call c_ptr[205100](?) chpl_task_infoChapel_t[88580])) : _unknown[51]
  {
    unknown ret[171289] 0 bool[10]
    (171292 'end of statement')
    unknown prv[171301](171299 call _cast(171298 call c_ptr[205100](?) c_uchar[20608]) tls[171281])
    (171304 'end of statement')
    unknown i[171306] chpl_offset_serial[170945]
    (171309 'end of statement')
    unknown v[171315] 0(171313 call uint(64)[115] 8)
    (171318 'end of statement')
    (171339 call c_memcpy(171323 call c_ptrTo v[171315])(171331 call c_ptrTo(171329 call prv[171301] i[171306]))(171338 call c_sizeof(171336 call uint(64)[115] 8)))
    if(171356 call _cond_test 1)
    {
      (171354 call assert(171351 call ||(171345 call == v[171315] 0)(171349 call == v[171315] 1)))
    }
    (171365 return(171363 call == v[171315] 1))
  }
  { scopeless type
    bool[10]
  }
  function chpl_task_setDynamicEndCount[171376](arg end[171373] :
  _remoteEndCountType[12847]) : _unknown[51] "no return value for void"
  {
    (171384 call chpl_task_data_setDynamicEndCount(171381 call chpl_task_getInfoChapel) end[171373])
  }
  function chpl_task_getDynamicEndCount[171391]() : _unknown[51]
  {
    (171400 return(171399 call chpl_task_data_getDynamicEndCount(171397 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    _remoteEndCountType[12847]
  }
  function chpl_task_setSerial[171412](arg makeSerial[171409] :
  bool[10]) : _unknown[51] "export" "local args" "no return value for void"
  {
    (171421 call chpl_task_data_setSerial(171418 call chpl_task_getInfoChapel) makeSerial[171409])
  }
  { scopeless type
    void[4]
  }
  function chpl_task_getSerial[171429]() : _unknown[51] "export" "local args"
  {
    (171438 return(171437 call chpl_task_data_getSerial(171435 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    bool[10]
  }
  {
    (171453 call assert(171450 call <= chpl_offset_end[170953](171449 call c_sizeof chpl_task_infoChapel_t[88580])))
  }
  (355219 'used modules list'(170930 'use' ChapelStandard[20267])(170932 'use' SysCTypes[20943]))
}