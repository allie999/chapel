AST dump for ChapelTaskData after pass flattenClasses.
Module use list: ChapelStandard SysCTypes 

{
  const chpl_offset_endCount[170896] "const" "private"(170894 call _cast size_t[20654] 0)
  (170899 'end of statement')
  const chpl_offset_serial[170903] "const" "private"(170902 call sizeof_endcount_ptr)
  (170906 'end of statement')
  const chpl_offset_end[170911] "const" "private"(170909 call + chpl_offset_serial[170903] 1)
  (170914 'end of statement')
  function sizeof_endcount_ptr[170917]() : _unknown[51] "private"
  {
    (170929 return(170927 call +(170922 call c_sizeof chpl_localeID_t[209306])(170926 call c_sizeof c_void_ptr[149])))
  }
  function chpl_task_data_setDynamicEndCount[170943](arg tls[170940] :
  (170939 call c_ptr[205057](?) chpl_task_infoChapel_t[88581]), arg end[170946] :
  _remoteEndCountType[12845]) : _unknown[51] "no return value for void"
  {
    unknown prv[170956](170954 call _cast(170953 call c_ptr[205057](?) c_uchar[20605]) tls[170940])
    (170959 'end of statement')
    unknown i[170962] size_t[20654]
    (170965 'end of statement')
    unknown loc[170970](170969 '_wide_get_locale' end[170946])
    (170973 'end of statement')
    unknown adr[170978](170977 '_wide_get_addr' end[170946])
    (170981 'end of statement')
    (170984 call = i[170962] chpl_offset_endCount[170896])
    (171004 call c_memcpy(170994 call c_ptrTo(170992 call prv[170956] i[170962]))(170999 call c_ptrTo loc[170970])(171003 call c_sizeof chpl_localeID_t[209306]))
    (171011 call += i[170962](171010 call c_sizeof chpl_localeID_t[209306]))
    (171031 call c_memcpy(171021 call c_ptrTo(171019 call prv[170956] i[170962]))(171026 call c_ptrTo adr[170978])(171030 call c_sizeof c_void_ptr[149]))
  }
  function chpl_task_data_getDynamicEndCount[171044](arg tls[171041] :
  (171040 call c_ptr[205057](?) chpl_task_infoChapel_t[88581])) : _unknown[51]
  {
    unknown prv[171053](171051 call _cast(171050 call c_ptr[205057](?) c_uchar[20605]) tls[171041])
    (171056 'end of statement')
    unknown i[171059] size_t[20654]
    (171062 'end of statement')
    unknown loc[171064] chpl_localeID_t[209306]
    (171067 'end of statement')
    unknown adr[171069] c_void_ptr[149]
    (171072 'end of statement')
    (171075 call = i[171059] chpl_offset_endCount[170896])
    (171095 call c_memcpy(171082 call c_ptrTo loc[171064])(171090 call c_ptrTo(171088 call prv[171053] i[171059]))(171094 call c_sizeof chpl_localeID_t[209306]))
    (171102 call += i[171059](171101 call c_sizeof chpl_localeID_t[209306]))
    (171122 call c_memcpy(171109 call c_ptrTo adr[171069])(171117 call c_ptrTo(171115 call prv[171053] i[171059]))(171121 call c_sizeof c_void_ptr[149]))
    unknown ret[171146](171145 '_wide_make' _remoteEndCountType[12845] loc[171064] adr[171069])
    (171149 'end of statement')
    (171151 return ret[171146])
  }
  function chpl_task_data_setSerial[171164](arg tls[171161] :
  (171160 call c_ptr[205057](?) chpl_task_infoChapel_t[88581]), arg makeSerial[171167] :
  bool[10]) : _unknown[51] "no return value for void"
  {
    unknown prv[171178](171176 call _cast(171175 call c_ptr[205057](?) c_uchar[20605]) tls[171161])
    (171181 'end of statement')
    unknown i[171184] chpl_offset_serial[170903]
    (171187 'end of statement')
    unknown v[171193] 0(171191 call uint(64)[115] 8)
    (171196 'end of statement')
    if(171203 call _cond_test makeSerial[171167])
    {
      (171200 call = v[171193] 1)
    }
    (171228 call c_memcpy(171215 call c_ptrTo(171213 call prv[171178] i[171184]))(171220 call c_ptrTo v[171193])(171227 call c_sizeof(171225 call uint(64)[115] 8)))
  }
  { scopeless type
    void[4]
  }
  function chpl_task_data_getSerial[171242](arg tls[171239] :
  (171238 call c_ptr[205057](?) chpl_task_infoChapel_t[88581])) : _unknown[51]
  {
    unknown ret[171247] 0 bool[10]
    (171250 'end of statement')
    unknown prv[171259](171257 call _cast(171256 call c_ptr[205057](?) c_uchar[20605]) tls[171239])
    (171262 'end of statement')
    unknown i[171264] chpl_offset_serial[170903]
    (171267 'end of statement')
    unknown v[171273] 0(171271 call uint(64)[115] 8)
    (171276 'end of statement')
    (171297 call c_memcpy(171281 call c_ptrTo v[171273])(171289 call c_ptrTo(171287 call prv[171259] i[171264]))(171296 call c_sizeof(171294 call uint(64)[115] 8)))
    if(171314 call _cond_test 1)
    {
      (171312 call assert(171309 call ||(171303 call == v[171273] 0)(171307 call == v[171273] 1)))
    }
    (171323 return(171321 call == v[171273] 1))
  }
  { scopeless type
    bool[10]
  }
  function chpl_task_setDynamicEndCount[171334](arg end[171331] :
  _remoteEndCountType[12845]) : _unknown[51] "no return value for void"
  {
    (171342 call chpl_task_data_setDynamicEndCount(171339 call chpl_task_getInfoChapel) end[171331])
  }
  function chpl_task_getDynamicEndCount[171349]() : _unknown[51]
  {
    (171358 return(171357 call chpl_task_data_getDynamicEndCount(171355 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    _remoteEndCountType[12845]
  }
  function chpl_task_setSerial[171370](arg makeSerial[171367] :
  bool[10]) : _unknown[51] "export" "local args" "no return value for void"
  {
    (171379 call chpl_task_data_setSerial(171376 call chpl_task_getInfoChapel) makeSerial[171367])
  }
  { scopeless type
    void[4]
  }
  function chpl_task_getSerial[171387]() : _unknown[51] "export" "local args"
  {
    (171396 return(171395 call chpl_task_data_getSerial(171393 call chpl_task_getInfoChapel)))
  }
  { scopeless type
    bool[10]
  }
  {
    (171411 call assert(171408 call <= chpl_offset_end[170911](171407 call c_sizeof chpl_task_infoChapel_t[88581])))
  }
  (355236 'used modules list'(170888 'use' ChapelStandard[20264])(170890 'use' SysCTypes[20940]))
}