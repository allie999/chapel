AST dump for RangeChunk after pass bulkCopyRecords.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416238]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537603 return _void[55])
  }
  type RemElems[266554] def Thru[266548]:RemElems[266554] def Pack[266550]:RemElems[266554] def Mod[266552]:RemElems[266554]
  function chunks[1399928](const in arg r[1399930]:range(int(64),bounded,false)[1027003], const in arg numChunks[1399932]:int(64)[13], const in arg remPol[1399936]:RemElems[266554], ref arg _retArg[1914797]:_ref(_ir_chunks)[1400477]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2142630]:_ir_chunks[1400366] "temp"
    (2142632 '.=' _ir[2142630] F0_r[2141849] r[1399930])
    (2142636 '.=' _ir[2142630] F1_numChunks[2141853] numChunks[1399932])
    (2142640 '.=' _ir[2142630] F2_remPol[2141857] remPol[1399936])
    (2142644 '=' _retArg[1914797] _ir[2142630])
    (2142647 return _void[55])
  }
  type _ic_chunks[1400360] val super[1400361]:object[22] "super class" val more[1400363]:int(64)[13] const-val F0_r[2141847]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2141851]:int(64)[13] const-val F2_remPol[2141855]:RemElems[266554] val F3__iterator[2141859]:_ic_chunksOrder[1400824] const F4_nElems[2141861]:int(64)[13] val F5_nChunks[2141863]:int(64)[13] val F6_chunkSize[2141865]:int(64)[13] val F7_rem[2141867]:int(64)[13] val F8__iterator[2141869]:_ic_chpl_direct_counted_range_iter[1103979] val F9__iterator[2141871]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F10_tmp[2141873]:2*int(64)[1040245] val F11__iterator[2141875]:_ic_chpl_direct_param_stride_range_iter[1103475] val F12_i[2141877]:int(64)[13] const-val F13_ret_tmp[2141879]:2*int(64)[1040245] const-val F14_ret_tmp[2141881]:2*int(64)[1040245] const-val F15_ret_tmp[2141883]:2*int(64)[1040245] const-val F16_ret_tmp[2141885]:2*int(64)[1040245] const-val F17_ret_tmp[2141887]:range(int(64),bounded,false)[1027003] val value[2141889]:range(int(64),bounded,false)[1027003]
  type _ir_chunks[1400366] const-val F0_r[2141849]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2141853]:int(64)[13] const-val F2_remPol[2141857]:RemElems[266554]
  function _getIterator[1400375](const  ref arg ir[1400377]:_ir_chunks[1400366]) : _ic_chunks[1400360] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400484]:_ic_chunks[1400360] "dead after last mention" "RVV" "temp"
    val _ic_[1400367]:_ic_chunks[1400360] "dead after last mention" "temp"
    const-val call_tmp[1400491]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400494 'move' call_tmp[1400491](1400506 'sizeof_bundle' _ic_chunks[1400360]))
    const-val cast_tmp[1400509]:c_void_ptr[149] "dead after last mention" "temp"
    (1400511 'move' cast_tmp[1400509](1400372 call chpl_here_alloc[187788] call_tmp[1400491] 79))
    (1400380 'move' _ic_[1400367](1400513 'cast' _ic_chunks[1400360] cast_tmp[1400509]))
    (1400382 'setcid' _ic_[1400367])
    (1400489 'move' ret[1400484] _ic_[1400367])
    (2142650 '.=' ret[1400484] more[1400363] 1)
    const-val tmp[2142654]:range(int(64),bounded,false)[1027003] "temp"
    (2142659 'move' tmp[2142654](2142655 '.v' ir[1400377] F0_r[2141849]))
    (2142661 '.=' ret[1400484] F0_r[2141847] tmp[2142654])
    const-val tmp[2142665]:int(64)[13] "temp"
    (2142670 'move' tmp[2142665](2142666 '.v' ir[1400377] F1_numChunks[2141853]))
    (2142672 '.=' ret[1400484] F1_numChunks[2141851] tmp[2142665])
    const-val tmp[2142676]:RemElems[266554] "temp"
    (2142681 'move' tmp[2142676](2142677 '.v' ir[1400377] F2_remPol[2141857]))
    (2142683 '.=' ret[1400484] F2_remPol[2141855] tmp[2142676])
    (1400486 return ret[1400484])
  }
  function chunksOrder[1400758](const in arg r[1400760]:range(int(64),bounded,false)[1027003], const in arg numChunks[1400762]:int(64)[13], const in arg remPol[1400766]:RemElems[266554], ref arg _retArg[1914807]:_ref(_ir_chunksOrder)[1400941]) : void[4] "compiler added where" "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[2143390]:_ir_chunksOrder[1400830] "temp"
    (2143392 '.=' _ir[2143390] F0_r[2142689] r[1400760])
    (2143396 '.=' _ir[2143390] F1_numChunks[2142693] numChunks[1400762])
    (2143400 '.=' _ir[2143390] F2_remPol[2142697] remPol[1400766])
    (2143404 '=' _retArg[1914807] _ir[2143390])
    (2143407 return _void[55])
  }
  type _ic_chunksOrder[1400824] val super[1400825]:object[22] "super class" val more[1400827]:int(64)[13] const-val F0_r[2142687]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2142691]:int(64)[13] const-val F2_remPol[2142695]:RemElems[266554] const F3_nElems[2142699]:int(64)[13] val F4_nChunks[2142701]:int(64)[13] val F5_chunkSize[2142703]:int(64)[13] val F6_rem[2142705]:int(64)[13] val F7__iterator[2142707]:_ic_chpl_direct_counted_range_iter[1103979] val F8__iterator[2142709]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F9_tmp[2142711]:2*int(64)[1040245] val F10__iterator[2142713]:_ic_chpl_direct_param_stride_range_iter[1103475] val F11_i[2142715]:int(64)[13] const-val F12_ret_tmp[2142717]:2*int(64)[1040245] const-val F13_ret_tmp[2142719]:2*int(64)[1040245] const-val F14_ret_tmp[2142721]:2*int(64)[1040245] const-val F15_ret_tmp[2142723]:2*int(64)[1040245] val value[2142725]:2*int(64)[1040245]
  type _ir_chunksOrder[1400830] const-val F0_r[2142689]:range(int(64),bounded,false)[1027003] const-val F1_numChunks[2142693]:int(64)[13] const-val F2_remPol[2142697]:RemElems[266554]
  function _getIterator[1400839](const  ref arg ir[1400841]:_ir_chunksOrder[1400830]) : _ic_chunksOrder[1400824] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1400948]:_ic_chunksOrder[1400824] "dead after last mention" "RVV" "temp"
    val _ic_[1400831]:_ic_chunksOrder[1400824] "dead after last mention" "temp"
    const-val call_tmp[1400955]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1400958 'move' call_tmp[1400955](1400970 'sizeof_bundle' _ic_chunksOrder[1400824]))
    const-val cast_tmp[1400973]:c_void_ptr[149] "dead after last mention" "temp"
    (1400975 'move' cast_tmp[1400973](1400836 call chpl_here_alloc[187788] call_tmp[1400955] 80))
    (1400844 'move' _ic_[1400831](1400977 'cast' _ic_chunksOrder[1400824] cast_tmp[1400973]))
    (1400846 'setcid' _ic_[1400831])
    (1400953 'move' ret[1400948] _ic_[1400831])
    (2143410 '.=' ret[1400948] more[1400827] 1)
    const-val tmp[2143414]:range(int(64),bounded,false)[1027003] "temp"
    (2143419 'move' tmp[2143414](2143415 '.v' ir[1400841] F0_r[2142689]))
    (2143421 '.=' ret[1400948] F0_r[2142687] tmp[2143414])
    const-val tmp[2143425]:int(64)[13] "temp"
    (2143430 'move' tmp[2143425](2143426 '.v' ir[1400841] F1_numChunks[2142693]))
    (2143432 '.=' ret[1400948] F1_numChunks[2142691] tmp[2143425])
    const-val tmp[2143436]:RemElems[266554] "temp"
    (2143441 'move' tmp[2143436](2143437 '.v' ir[1400841] F2_remPol[2142697]))
    (2143443 '.=' ret[1400948] F2_remPol[2142695] tmp[2143436])
    (1400950 return ret[1400948])
  }
  function chunkOrderThru[1401798](const in arg nElems[1401800]:int(64)[13], const in arg nChunks[1401805]:int(64)[13], const in arg i[1401810]:int(64)[13], ref arg _retArg[1914817]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1401829]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1401839]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1401841 'move' call_tmp[1401839](1401844 call *[441944] nElems[1401800] i[1401810]))
    const-val m[1401847]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1401849 'move' m[1401847] call_tmp[1401839])
    const-val start[1401853]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401855]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401857]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401861 'move' call_tmp[1401859](1401864 call ==[435744] i[1401810] 0))
    (1401867 'move' tmp[1401857] call_tmp[1401859])
    if tmp[1401857]
    {
      val call_tmp[1401876]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1401888 'move' tmp[1401855] 0)
    }
    {
      const-val tmp[1401894]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401896 'move' tmp[1401894](1401899 call divceil[1401581] m[1401847] nChunks[1401805]))
      (1401902 'move' tmp[1401855] tmp[1401894])
    }
    (1401908 'move' start[1401853] tmp[1401855])
    const-val end[1401912]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[1401914]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1401916]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1401918]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401920 'move' call_tmp[1401918](1401923 call -[962415] nChunks[1401805]))
    const-val call_tmp[1401926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1401928 'move' call_tmp[1401926](1401931 call ==[435744] i[1401810] call_tmp[1401918]))
    (1401934 'move' tmp[1401916] call_tmp[1401926])
    if tmp[1401916]
    {
      const-val tmp[1401941]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1401943 'move' tmp[1401941](1401946 call -[962415] nElems[1401800]))
      (1401949 'move' tmp[1401914] tmp[1401941])
    }
    {
      const-val tmp[1401955]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1401957]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401959 'move' call_tmp[1401957](1401962 call +[439752] m[1401847] nElems[1401800]))
      const-val call_tmp[1401965]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1401967 'move' call_tmp[1401965](1401970 call divceil[1401581] call_tmp[1401957] nChunks[1401805]))
      (1401973 'move' tmp[1401955](1401976 call -[962415] call_tmp[1401965]))
      (1401979 'move' tmp[1401914] tmp[1401955])
    }
    (1401985 'move' end[1401912] tmp[1401914])
    const-val call_tmp[1401991]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908792]:2*int(64)[1040245] "temp"
    (1401996 call _build_tuple[1040203] start[1401853] end[1401912] ret_tmp[1908792])
    (1908795 'move' call_tmp[1401991] ret_tmp[1908792])
    val call_tmp[1401999]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402011]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402048 'move' ret[1401829] call_tmp[1401991])
    gotoReturn _end_chunkOrderThru[1402029] _end_chunkOrderThru[1402029]
    label _end_chunkOrderThru[1402029]
    (1914819 '=' _retArg[1914817] ret[1401829])
    (1914821 return _void[55])
  }
  function chunkOrderPack[1402274](const in arg chunkSize[1402276]:int(64)[13], const in arg nElems[1402281]:int(64)[13], const in arg i[1402286]:int(64)[13], ref arg _retArg[1914829]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val ret[1402305]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1402315]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402317 'move' call_tmp[1402315](1402320 call *[441944] chunkSize[1402276] i[1402286]))
    const-val start[1402323]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1402325 'move' start[1402323] call_tmp[1402315])
    const-val call_tmp[1402329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402331 'move' call_tmp[1402329](1402334 call >=[437348] start[1402323] nElems[1402281]))
    const-val call_tmp[1402337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402339 'move' call_tmp[1402337] call_tmp[1402329])
    if call_tmp[1402337]
    {
      val call_tmp[1402346]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[1402374]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1908798]:2*int(64)[1040245] "temp"
      (1402379 call _build_tuple[1040203] 1 0 ret_tmp[1908798])
      (1908801 'move' call_tmp[1402374] ret_tmp[1908798])
      val call_tmp[1402382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402388]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1402394]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1402524 'move' ret[1402305] call_tmp[1402374])
      gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    }
    const-val call_tmp[1402410]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1402412 'move' call_tmp[1402410](1402415 call +[439752] start[1402323] chunkSize[1402276]))
    const-val call_tmp[1402418]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1402420 'move' call_tmp[1402418](1402423 call -[962415] call_tmp[1402410]))
    val end[1402426]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1402428 'move' end[1402426] call_tmp[1402418])
    const-val call_tmp[1402433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402435 'move' call_tmp[1402433](1402438 call >=[437348] end[1402426] nElems[1402281]))
    const-val call_tmp[1402441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402443 'move' call_tmp[1402441] call_tmp[1402433])
    if call_tmp[1402441]
    {
      const-val call_tmp[1402450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402452 'move' call_tmp[1402450](1402455 call -[962415] nElems[1402281]))
      (1402459 call =[435443] end[1402426] call_tmp[1402450])
    }
    const-val call_tmp[1402465]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908804]:2*int(64)[1040245] "temp"
    (1402470 call _build_tuple[1040203] start[1402323] end[1402426] ret_tmp[1908804])
    (1908807 'move' call_tmp[1402465] ret_tmp[1908804])
    val call_tmp[1402473]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402479]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402485]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402527 'move' ret[1402305] call_tmp[1402465])
    gotoReturn _end_chunkOrderPack[1402503] _end_chunkOrderPack[1402503]
    label _end_chunkOrderPack[1402503]
    (1914831 '=' _retArg[1914829] ret[1402305])
    (1914833 return _void[55])
  }
  function chunkOrderMod[1402531](const in arg chunkSize[1402533]:int(64)[13], const in arg rem[1402538]:int(64)[13], const in arg nElems[1402543]:int(64)[13], const in arg nChunks[1402548]:int(64)[13], const in arg i[1402553]:int(64)[13], ref arg _retArg[1914841]:_ref(2*int(64))[1040318]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val ret[1402572]:2*int(64)[1040245] "dead after last mention" "RVV" "temp"
    val start[1402582]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[1402584]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402778 'move' start[1402582] 0)
    val end[1402593]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1402595]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1402606]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402608 'move' call_tmp[1402606](1402611 call <[437568] i[1402553] rem[1402538]))
    const-val call_tmp[1402614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1402616 'move' call_tmp[1402614] call_tmp[1402606])
    if call_tmp[1402614]
    {
      const-val call_tmp[1402623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402625 'move' call_tmp[1402623](1402628 call +[949855] chunkSize[1402533]))
      const-val call_tmp[1402631]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402633 'move' call_tmp[1402631](1402636 call *[441944] i[1402553] call_tmp[1402623]))
      (1402640 call =[435443] start[1402582] call_tmp[1402631])
      const-val call_tmp[1402645]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402647 'move' call_tmp[1402645](1402650 call +[439752] start[1402582] chunkSize[1402533]))
      (1402653 'move' end[1402593] call_tmp[1402645])
    }
    {
      const-val call_tmp[1402661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402663 'move' call_tmp[1402661](1402666 call -[440532] nChunks[1402548] i[1402553]))
      const-val call_tmp[1402669]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402671 'move' call_tmp[1402669](1402674 call *[441944] call_tmp[1402661] chunkSize[1402533]))
      const-val call_tmp[1402677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1402679 'move' call_tmp[1402677](1402682 call -[440532] nElems[1402543] call_tmp[1402669]))
      (1402686 call =[435443] start[1402582] call_tmp[1402677])
      const-val call_tmp[1402691]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1402693 'move' call_tmp[1402691](1402696 call +[439752] start[1402582] chunkSize[1402533]))
      const-val call_tmp[1402699]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1402701 'move' call_tmp[1402699](1402704 call -[962415] call_tmp[1402691]))
      (1402707 'move' end[1402593] call_tmp[1402699])
    }
    const-val call_tmp[1402715]:2*int(64)[1040245] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908810]:2*int(64)[1040245] "temp"
    (1402720 call _build_tuple[1040203] start[1402582] end[1402593] ret_tmp[1908810])
    (1908813 'move' call_tmp[1402715] ret_tmp[1908810])
    val call_tmp[1402723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402729]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1402735]:2*int(64)[1040245] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1402775 'move' ret[1402572] call_tmp[1402715])
    gotoReturn _end_chunkOrderMod[1402753] _end_chunkOrderMod[1402753]
    label _end_chunkOrderMod[1402753]
    (1914843 '=' _retArg[1914841] ret[1402572])
    (1914845 return _void[55])
  }
}