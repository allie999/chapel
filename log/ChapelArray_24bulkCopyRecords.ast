AST dump for ChapelArray after pass bulkCopyRecords.
Module use list: ChapelBase ChapelTuple ChapelLocale ArrayViewSlice ArrayViewRankChange ArrayViewReindex Reflection ChapelDebugPrint SysCTypes HaltWrappers Sort IO 

{
  type _class_localscoforall_fn[2070503] val _runtime_hdr[2070504]:chpl_task_bundle_t[209366] val _0_parDim[2070506]:int(64)[13] val _1_numChunks[2070508]:int(64)[13] val _2_coerce_tmp[2070510]:domain(1,int(64),false)[1250953] val _3_chunk[2070512]:int(64)[13] val _4__coforallCount[2070514]:_EndCount(AtomicT(int(64)),int(64))[945362] val _6_coerce_tmp[2070518]:[domain(1,int(64),false)] real(64)[1358774] ref _7_default_arg_offset[2070520]:1*int(64)[1256544] val _8_rhs[2070522]:real(64)[16]
  type _class_localson_fn[2065969] val _runtime_hdr[2065970]:chpl_comm_on_bundle_t[209359] val _0_tmp[2065972]:chpl_localeID_t[209352] val _1__instance[2065974]:[domain(1,int(64),false)] int(64)[1368694] val _2_deinitElts[2065976]:bool[10]
  type _class_localson_fn[2065624] val _runtime_hdr[2065625]:chpl_comm_on_bundle_t[209359] val _0_tmp[2065627]:chpl_localeID_t[209352] val _1__instance[2065629]:[domain(1,int(64),false)] real(64)[1358774] val _2_deinitElts[2065631]:bool[10]
  type _class_localson_fn[2065279] val _runtime_hdr[2065280]:chpl_comm_on_bundle_t[209359] val _0_tmp[2065282]:chpl_localeID_t[209352] val _1__instance[2065284]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] val _2_deinitElts[2065286]:bool[10]
  type _class_localson_fn[2064934] val _runtime_hdr[2064935]:chpl_comm_on_bundle_t[209359] val _0_tmp[2064937]:chpl_localeID_t[209352] val _1__instance[2064939]:[domain(1,int(64),false)] locale[1256505] val _2_deinitElts[2064941]:bool[10]
  type _class_localson_fn[2064518] val _runtime_hdr[2064519]:chpl_comm_on_bundle_t[209359] val _0_tmp[2064521]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2064523]:domain(1,int(64),false)[1252616]
  type _class_localson_fn[2064433] val _runtime_hdr[2064434]:chpl_comm_on_bundle_t[209359] val _0_tmp[2064436]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2064438]:DefaultDist[1243915]
  type _class_localson_fn[2061062] val _runtime_hdr[2061063]:chpl_comm_on_bundle_t[209359] val _0_tmp[2061065]:chpl_localeID_t[209352] val _1_pid[2061067]:int(64)[13] val _2_original[2061069]:object[22]
  type _class_localscobegin_fn[2060933] val _runtime_hdr[2060934]:chpl_task_bundle_t[209366] val _0_pid[2060936]:int(64)[13] val _1_original[2060938]:object[22] val _2__cobeginCount[2060940]:_EndCount(AtomicT(int(64)),int(64))[945362]
  type _class_localson_fn[2060849] val _runtime_hdr[2060850]:chpl_comm_on_bundle_t[209359] val _0_tmp[2060852]:chpl_localeID_t[209352] val _1_pid[2060854]:int(64)[13] val _2_original[2060856]:object[22]
  type _class_localscobegin_fn[2060720] val _runtime_hdr[2060721]:chpl_task_bundle_t[209366] val _0_pid[2060723]:int(64)[13] val _1_original[2060725]:object[22] val _2__cobeginCount[2060727]:_EndCount(AtomicT(int(64)),int(64))[945362]
  type _class_localson_fn[2060636] val _runtime_hdr[2060637]:chpl_comm_on_bundle_t[209359] val _0_tmp[2060639]:chpl_localeID_t[209352] val _1_pid[2060641]:int(64)[13] val _2_original[2060643]:object[22]
  type _class_localson_fn[2060330] val _runtime_hdr[2060331]:chpl_comm_on_bundle_t[209359] val _0_tmp[2060333]:chpl_localeID_t[209352] val _1__instance[2060335]:BaseArr[149584] val _2_deinitElts[2060337]:bool[10]
  function chpl__init_ChapelArray[416019]() : void[4] "insert line file info" "module init" "resolved"
  {
    val call_tmp[648186]:AtomicT(int(64))[940153] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref tmp[2050701]:AtomicT(int(64))[940153] "temp"
    (2050706 'move' tmp[2050701](2050703 '.' numPrivateObjects[113711] value[2050699]))
    (1024284 call init[945394] tmp[2050701])
    (519714 return _void[55])
  }
  val numPrivateObjects[113711]:heap_AtomicT_int64_t[2050697] "dead at end of block" "insert auto destroy" "no doc"
  function _freePrivatizedClass[1425383](const in arg pid[1425385]:int(64)[13], const in arg original[1425387]:object[22]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1425395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425397 'move' call_tmp[1425395](1425400 call ==[435666] pid[1425385] -1))
    const-val call_tmp[1425403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425405 'move' call_tmp[1425403] call_tmp[1425395])
    if call_tmp[1425403]
    {
      gotoReturn _end__freePrivatizedClass[1425712] _end__freePrivatizedClass[1425712]
    }
    const-val tmp[1425415]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1425417]:_ref(locale)[948863] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1425419 'move' call_tmp[1425417](1425735 call this[1347401] Locales[113662] 0))
    const-val call_tmp[1425424]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val _locale_tmp_[1425742]:BaseLocale[91204] "dead after last mention" "temp"
    (1425747 'move' _locale_tmp_[1425742](1425744 call _value[89984] call_tmp[1425417]))
    (1425426 'move' call_tmp[1425424](1425428 '_wide_get_locale' _locale_tmp_[1425742]))
    (1425430 'move' tmp[1425415] call_tmp[1425424])
    val isdirect[2060619]:bool[10] "temp"
    (2060624 'move' isdirect[2060619](2060621 call chpl_doDirectExecuteOn[187469] tmp[1425415]))
    if isdirect[2060619]
    {
      (2060628 call on_fn[1425437] pid[1425385] original[1425387])
    }
    {
      val _args_foron_fn[2060646]:_class_localson_fn[2060636] "temp"
      (2060650 'move' _args_foron_fn[2060646](2060648 'stack allocate class' _class_localson_fn[2060636]))
      (2060652 '.=' _args_foron_fn[2060646] _0_tmp[2060639] tmp[1425415])
      (2060656 '.=' _args_foron_fn[2060646] _1_pid[2060641] pid[1425385])
      (2060660 '.=' _args_foron_fn[2060646] _2_original[2060643] original[1425387])
      val _args_vforon_fn[2060664]:c_void_ptr[149] "temp"
      (2060668 'move' _args_vforon_fn[2060664](2060666 'cast_to_void_star' _args_foron_fn[2060646]))
      val _args_sizeon_fn[2060670]:int(64)[13] "temp"
      (2060674 'move' _args_sizeon_fn[2060670](2060672 'sizeof_bundle' _class_localson_fn[2060636]))
      on(2060714 call wrapon_fn[2060676] tmp[1425415] _args_vforon_fn[2060664] _args_sizeon_fn[2060670] _args_foron_fn[2060646])
    }
    {
    }
    label _end__freePrivatizedClass[1425712]
    (1425714 return _void[55])
  }
  function _makeIndexTuple[1750387](const  ref arg t[1750391]:1*int(64)[1256544], ref arg _retArg[1814694]:_ref(1*int(64))[1256614]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1750410]:1*int(64)[1256544] "dead after last mention" "RVV" "temp"
    (1750456 'move' ret[1750410](1814698 call chpl__autoCopy[1530865] t[1750391]))
    (1814696 '=' _retArg[1814694] ret[1750410])
    (1814700 return _void[55])
  }
  function _newArray[1286557](const in arg value[1286559]:[domain(1,int(64),false)] locale[1256505], ref arg _retArg[1810215]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1286561]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1286607]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1286974]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "delay instantiation" "temp"
      (1286977 call init[1286983] initTemp[1286974] -1 value[1286559] 0)
      (1286609 'move' call_tmp[1286607] initTemp[1286974])
      (1286615 'move' ret[1286561] call_tmp[1286607])
      gotoReturn _end__newArray[1286622] _end__newArray[1286622]
    }
    label _end__newArray[1286622]
    (1810217 '=' _retArg[1810215] ret[1286561])
    (1810219 return _void[55])
  }
  function _newArray[1324654](const in arg value[1324656]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231], ref arg _retArg[1810705]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1324658]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1324704]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1325069]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "delay instantiation" "temp"
      (1325072 call init[1325078] initTemp[1325069] -1 value[1324656] 0)
      (1324706 'move' call_tmp[1324704] initTemp[1325069])
      (1324712 'move' ret[1324658] call_tmp[1324704])
      gotoReturn _end__newArray[1324719] _end__newArray[1324719]
    }
    label _end__newArray[1324719]
    (1810707 '=' _retArg[1810705] ret[1324658])
    (1810709 return _void[55])
  }
  function _newArray[1365388](const in arg value[1365390]:[domain(1,int(64),false)] real(64)[1358774], ref arg _retArg[1811330]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1365392]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1365438]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1365803]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "delay instantiation" "temp"
      (1365806 call init[1365812] initTemp[1365803] -1 value[1365390] 0)
      (1365440 'move' call_tmp[1365438] initTemp[1365803])
      (1365446 'move' ret[1365392] call_tmp[1365438])
      gotoReturn _end__newArray[1365453] _end__newArray[1365453]
    }
    label _end__newArray[1365453]
    (1811332 '=' _retArg[1811330] ret[1365392])
    (1811334 return _void[55])
  }
  function _newArray[1373860](const in arg value[1373862]:[domain(1,int(64),false)] int(64)[1368694], ref arg _retArg[1811372]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no copy return" "resolved"
  {
    const-val ret[1373864]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1373910]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1374275]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "delay instantiation" "temp"
      (1374278 call init[1374284] initTemp[1374275] -1 value[1373862] 0)
      (1373912 'move' call_tmp[1373910] initTemp[1374275])
      (1373918 'move' ret[1373864] call_tmp[1373910])
      gotoReturn _end__newArray[1373925] _end__newArray[1373925]
    }
    label _end__newArray[1373925]
    (1811374 '=' _retArg[1811372] ret[1373864])
    (1811376 return _void[55])
  }
  function _getDomain[1332456](const in arg value[1332458]:domain(1,int(64),false)[1250953], ref arg _retArg[1810872]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1332460]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    val call_tmp[1332468]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1332474]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1332481]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1332549]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1332587]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "temp"
      (1332590 call init[1332598] initTemp[1332587] -1 value[1332458] 1)
      (1332551 'move' call_tmp[1332549] initTemp[1332587])
      (1332559 'move' ret[1332460] call_tmp[1332549])
      gotoReturn _end__getDomain[1332566] _end__getDomain[1332566]
    }
    label _end__getDomain[1332566]
    (1810874 '=' _retArg[1810872] ret[1332460])
    (1810876 return _void[55])
  }
  function _getDistribution[1287554](const in arg value[1287556]:DefaultDist[93992], ref arg _retArg[1810281]:_ref(DefaultDist)[1243932]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1287558]:DefaultDist[1243915] "dead after last mention" "RVV" "temp"
    {
      const-val call_tmp[1287607]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1287640]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "temp"
      (1287643 call init[1287651] initTemp[1287640] -1 value[1287556] 1)
      (1287609 'move' call_tmp[1287607] initTemp[1287640])
      (1287617 'move' ret[1287558] call_tmp[1287607])
      gotoReturn _end__getDistribution[1287624] _end__getDistribution[1287624]
    }
    label _end__getDistribution[1287624]
    (1810283 '=' _retArg[1810281] ret[1287558])
    (1810285 return _void[55])
  }
  function chpl__buildDomainRuntimeType[1246301](const  ref arg dist[1246303]:DefaultDist[1243915]) type : _RuntimeTypeInfo[1253692] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1779219]:int(64)[13] "temp"
    val _return_tmp_[1775406]:_RuntimeTypeInfo[1253692] "temp"
    (1775408 '.=' _return_tmp_[1775406] dist[1253693] dist[1246303])
    (1775412 return _return_tmp_[1775406])
  }
  function chpl__convertRuntimeTypeToValue[1253847](const  ref arg dist[1253849]:DefaultDist[1243915], ref arg _retArg[1808961]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1779260]:int(64)[13] "temp"
    const-val ret[1253861]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1253876]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1253894]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "temp"
    (1253897 call init[1246355] initTemp[1253894] dist[1253849])
    (1253878 'move' call_tmp[1253876] initTemp[1253894])
    (1253886 'move' ret[1253861] call_tmp[1253876])
    (1808963 '=' _retArg[1808961] ret[1253861])
    (1808965 return _void[55])
  }
  function chpl__buildArrayRuntimeType[1254012](const  ref arg dom[1254014]:domain(1,int(64),false)[1252616]) type : _RuntimeTypeInfo[1287263] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1779262]:locale[28] "temp"
    val _return_tmp_[1775415]:_RuntimeTypeInfo[1287263] "temp"
    (1775417 '.=' _return_tmp_[1775415] dom[1287264] dom[1254014])
    (1775421 return _return_tmp_[1775415])
  }
  function chpl__buildArrayRuntimeType[1316538](const  ref arg dom[1316540]:domain(1,int(64),false)[1252616]) type : _RuntimeTypeInfo[1325358] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1779323]:localesSignal[92278] "temp"
    val _return_tmp_[1775424]:_RuntimeTypeInfo[1325358] "temp"
    (1775426 '.=' _return_tmp_[1775424] dom[1325359] dom[1316540])
    (1775430 return _return_tmp_[1775424])
  }
  function chpl__buildArrayRuntimeType[1357081](const  ref arg dom[1357083]:domain(1,int(64),false)[1252616]) type : _RuntimeTypeInfo[1366092] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1779410]:real(64)[16] "temp"
    val _return_tmp_[1775433]:_RuntimeTypeInfo[1366092] "temp"
    (1775435 '.=' _return_tmp_[1775433] dom[1366093] dom[1357083])
    (1775439 return _return_tmp_[1775433])
  }
  function chpl__buildArrayRuntimeType[1367001](const  ref arg dom[1367003]:domain(1,int(64),false)[1252616]) type : _RuntimeTypeInfo[1374564] "instantiated generic" "invisible fn" "resolved" "runtime type init fn"
  {
    val _formal_type_tmp_[1779446]:int(64)[13] "temp"
    val _return_tmp_[1775442]:_RuntimeTypeInfo[1374564] "temp"
    (1775444 '.=' _return_tmp_[1775442] dom[1374565] dom[1367003])
    (1775448 return _return_tmp_[1775442])
  }
  function chpl__convertRuntimeTypeToValue[1297710](const  ref arg dom[1297712]:domain(1,int(64),false)[1252616], ref arg _retArg[1810389]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1779315]:locale[28] "temp"
    const-val ret[1297718]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1297737]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808967]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1297745 call buildArray[1254060] dom[1297712] ret_tmp[1808967])
    (1808970 'move' call_tmp[1297737] ret_tmp[1808967])
    (1297748 'move' ret[1297718] call_tmp[1297737])
    (1810391 '=' _retArg[1810389] ret[1297718])
    (1810393 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1350590](const  ref arg dom[1350592]:domain(1,int(64),false)[1252616], ref arg _retArg[1810956]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1779371]:localesSignal[92278] "temp"
    const-val ret[1350598]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1350617]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810681]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "temp"
    (1350625 call buildArray[1316586] dom[1350592] ret_tmp[1810681])
    (1810684 'move' call_tmp[1350617] ret_tmp[1810681])
    (1350628 'move' ret[1350598] call_tmp[1350617])
    (1810958 '=' _retArg[1810956] ret[1350598])
    (1810960 return _void[55])
  }
  function chpl__convertRuntimeTypeToValue[1379878](const  ref arg dom[1379880]:domain(1,int(64),false)[1252616], ref arg _retArg[1811444]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1779482]:int(64)[13] "temp"
    const-val ret[1379886]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1379905]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811348]:[domain(1,int(64),false)] int(64)[1374331] "temp"
    (1379913 call buildArray[1367049] dom[1379880] ret_tmp[1811348])
    (1811351 'move' call_tmp[1379905] ret_tmp[1811348])
    (1379916 'move' ret[1379886] call_tmp[1379905])
    (1811446 '=' _retArg[1811444] ret[1379886])
    (1811448 return _void[55])
  }
  function chpl__buildArrayExpr[1366509](const in arg _e0_elems[1366511]:int(64)[13], ref arg _retArg[1811342]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "ignore transfer errors"
  {
    const-val elems[1366519]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809021]:1*int(64)[1256544] "temp"
    (1366524 call chpl__init_tuple[1256562] _e0_elems[1366511] ret_tmp[1809021])
    (1809024 'move' elems[1366519] ret_tmp[1809021])
    const-val ret[1366513]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "RVV" "temp"
    val elemType[1366630]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    const-val A[1366640]:[domain(1,int(64),false)] int(64)[1374331] "dead at end of block" "insert auto destroy" "unsafe"
    const-val call_tmp[1366642]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806940]:range(int(64),boundedLow,false)[1087584] "temp"
    (1366647 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1806940])
    (1806943 'move' call_tmp[1366642] ret_tmp[1806940])
    const-val call_tmp[1366649]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807030]:range(int(64),bounded,false)[1026833] "temp"
    (1366654 call #[1087944] call_tmp[1366642] 1 ret_tmp[1807030])
    (1807033 'move' call_tmp[1366649] ret_tmp[1807030])
    const-val call_tmp[1366657]:domain(1,int(64),false)[1252616] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810639]:domain(1,int(64),false)[1252616] "temp"
    (1366662 call chpl__ensureDomainExpr[1316397] call_tmp[1366649] ret_tmp[1810639])
    (1810642 'move' call_tmp[1366657] ret_tmp[1810639])
    const-val call_tmp[1366664]:_RuntimeTypeInfo[1374564] "dead at end of block" "expr temp" "maybe param" "temp"
    (1366666 'move' call_tmp[1366664](1366669 call chpl__buildArrayRuntimeType[1367001] call_tmp[1366657]))
    const-val _runtime_type_tmp_[1379866]:domain(1,int(64),false)[1252616] "dead at end of block" "temp"
    (1379871 'move' _runtime_type_tmp_[1379866](1778048 '.v' call_tmp[1366664] dom[1374565]))
    const-val ret_tmp[1811408]:[domain(1,int(64),false)] int(64)[1374331] "temp"
    (1379864 call chpl__convertRuntimeTypeToValue[1379878] _runtime_type_tmp_[1379866] ret_tmp[1811408])
    (1811411 'move' A[1366640] ret_tmp[1811408])
    {
      const-val i[1366678]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1366680 'move' i[1366678] 0)
      {
        {
          val currType[1374612]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
          ref call_tmp[1374721]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1374723 'move' call_tmp[1374721](1374726 call this[1375137] A[1366640] 0))
          ref call_tmp[1374728]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1374730 'move' call_tmp[1374728](1379501 '.' elems[1366519] x0[1256542]))
          const-val coerce_tmp[1379504]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1379508 'move' coerce_tmp[1379504](1379506 'deref' call_tmp[1374728]))
          (1374736 call =[435365] call_tmp[1374721] coerce_tmp[1379504])
        }
      }
      label _continueLabel0[1374594]
      label _unused_continueLabel[1366873]
      label _breakLabel[1366875]
    }
    (1366877 'move' ret[1366513] A[1366640])
    (1821393 call chpl__autoDestroy[1530701] call_tmp[1366657])
    (1821396 call chpl__autoDestroy[1508195] call_tmp[1366649])
    (1821399 call chpl__autoDestroy[1514564] call_tmp[1366642])
    (1821402 call chpl__autoDestroy[1530942] elems[1366519])
    gotoReturn _end_chpl__buildArrayExpr[1366885] _end_chpl__buildArrayExpr[1366885]
    label _end_chpl__buildArrayExpr[1366885]
    (1811344 '=' _retArg[1811342] ret[1366513])
    (1811346 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1286422](const in arg arr[1286424]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779305]:locale[28] "temp"
    (1286515 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1324519](const in arg arr[1324521]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779360]:localesSignal[92278] "temp"
    (1324612 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1365253](const in arg arr[1365255]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779444]:real(64)[16] "temp"
    (1365346 return _void[55])
  }
  function chpl_incRefCountsForDomainsInArrayEltTypes[1373725](const in arg arr[1373727]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779480]:int(64)[13] "temp"
    (1373818 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1741607](const in arg arr[1741609]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779634]:locale[28] "temp"
    (1741947 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1742089](const in arg arr[1742091]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779636]:localesSignal[92278] "temp"
    (1742429 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1742571](const in arg arr[1742573]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779638]:real(64)[16] "temp"
    (1742911 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1743053](const in arg arr[1743055]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779640]:int(64)[13] "temp"
    (1743393 return _void[55])
  }
  function chpl_decRefCountsForDomainsInArrayEltTypes[1743535](const in arg arr[1743537]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779642]:uint(64)[115] "temp"
    (1743875 return _void[55])
  }
  function chpl__buildDomainExpr[1244687](const in arg _e0_ranges[1244689]:range(int(64),bounded,false)[1026833], ref arg _retArg[1808851]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ranges[1245403]:1*range(int(64),bounded,false)[1244715] "insert auto destroy"
    const-val ret_tmp[1808859]:1*range(int(64),bounded,false)[1244715] "temp"
    (1245408 call chpl__init_tuple[1244733] _e0_ranges[1244689] ret_tmp[1808859])
    (1808862 'move' ranges[1245403] ret_tmp[1808859])
    const-val ret[1244703]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    {
      const-val i[1245428]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1245430 'move' i[1245428] 0)
      label _unused_continueLabel[1245528]
      label _breakLabel[1245530]
    }
    {
      const-val i[1245533]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1245535 'move' i[1245533] 0)
      {
        ref call_tmp[1246058]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
        (1246060 'move' call_tmp[1246058](1246094 '.' ranges[1245403] x0[1244713]))
      }
      label _continueLabel0[1246055]
      label _unused_continueLabel[1245616]
      label _breakLabel[1245618]
    }
    const-val d[1245620]:domain(1,int(64),false)[1252616] "dead at end of block" "insert auto destroy"
    ref call_tmp[1245622]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
    (1245624 'move' call_tmp[1245622](1246105 '.' ranges[1245403] x0[1244713]))
    val call_tmp[1245629]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val coerce_tmp[1246108]:range(int(64),bounded,false)[1026833] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1246112 'move' coerce_tmp[1246108](1808855 call chpl__initCopy[1085025] call_tmp[1245622]))
    const-val call_tmp[1245644]:_RuntimeTypeInfo[1253692] "dead at end of block" "expr temp" "maybe param" "temp"
    (1245646 'move' call_tmp[1245644](1245649 call chpl__buildDomainRuntimeType[1246301] defaultDist[94053]))
    const-val _runtime_type_tmp_[1253833]:DefaultDist[1243915] "dead at end of block" "temp"
    (1253838 'move' _runtime_type_tmp_[1253833](1777858 '.v' call_tmp[1245644] dist[1253693]))
    const-val ret_tmp[1808949]:domain(1,int(64),false)[1252616] "temp"
    (1253831 call chpl__convertRuntimeTypeToValue[1253847] _runtime_type_tmp_[1253833] ret_tmp[1808949])
    (1808952 'move' d[1245620] ret_tmp[1808949])
    (1820474 call chpl__autoDestroy[1508195] coerce_tmp[1246108])
    (1245662 call setIndices[1253749] d[1245620] ranges[1245403])
    (1245666 'move' ret[1244703] d[1245620])
    (1820477 call chpl__autoDestroy[1528835] ranges[1245403])
    gotoReturn _end_chpl__buildDomainExpr[1245674] _end_chpl__buildDomainExpr[1245674]
    label _end_chpl__buildDomainExpr[1245674]
    (1808853 '=' _retArg[1808851] ret[1244703])
    (1808857 return _void[55])
  }
  function chpl__ensureDomainExpr[1253993](const  ref arg x[1253995]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) const ref : _ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "instantiated generic" "invisible fn" "resolved"
  {
    ref ret[1253997]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead after last mention" "RVV" "temp"
    (1254005 'move' ret[1253997] x[1253995])
    (1254009 return ret[1253997])
  }
  function chpl__ensureDomainExpr[1316397](const in arg _e0_x[1316399]:range(int(64),bounded,false)[1026833], ref arg _retArg[1810675]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "compiler generated" "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "last resort" "resolved"
  {
    const-val ret[1316401]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1316409]:domain(1,int(64),false)[1252616] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808575]:domain(1,int(64),false)[1252616] "temp"
    (1316414 call chpl__buildDomainExpr[1244687] _e0_x[1316399] ret_tmp[1808575])
    (1808578 'move' call_tmp[1316409] ret_tmp[1808575])
    (1316416 'move' ret[1316401] call_tmp[1316409])
    (1810677 '=' _retArg[1810675] ret[1316401])
    (1810679 return _void[55])
  }
  function chpl__domainFromArrayRuntimeType[1407078](const  ref arg rtt[1407080]:_RuntimeTypeInfo[1366092], ref arg _retArg[1811690]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "return not owned"
  {
    const-val ret[1407082]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1407090]:domain(1,int(64),false)[1252616] "dead at end of block" "maybe param" "temp"
    (1407092 'move' call_tmp[1407090](1778067 '.v' rtt[1407080] dom[1366093]))
    const-val dom[1407097]:domain(1,int(64),false)[1252616] "dead at end of block" "no auto destroy" "no copy"
    (1407099 'move' dom[1407097] call_tmp[1407090])
    val call_tmp[1407103]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1407105 'move' call_tmp[1407103](1407108 call _value[1252857] dom[1407097]))
    const-val call_tmp[1407111]:domain(1,int(64),false)[1252616] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810836]:domain(1,int(64),false)[1252616] "temp"
    (1407116 call _getDomain[1332456] call_tmp[1407103] ret_tmp[1810836])
    (1810839 'move' call_tmp[1407111] ret_tmp[1810836])
    (1407118 'move' ret[1407082] call_tmp[1407111])
    gotoReturn _end_chpl__domainFromArrayRuntimeType[1407126] _end_chpl__domainFromArrayRuntimeType[1407126]
    label _end_chpl__domainFromArrayRuntimeType[1407126]
    (1811692 '=' _retArg[1811690] ret[1407082])
    (1811694 return _void[55])
  }
  function chpl__buildDistValue[1243340](const in arg x[1243342]:DefaultDist[93992], ref arg _retArg[1808557]:_ref(DefaultDist)[1243932]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1243364]:DefaultDist[1243915] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1243382]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1243397]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "temp"
    (1243400 call init[1243405] initTemp[1243397] x[1243342])
    (1243384 'move' call_tmp[1243382] initTemp[1243397])
    (1243389 'move' ret[1243364] call_tmp[1243382])
    (1808559 '=' _retArg[1808557] ret[1243364])
    (1808561 return _void[55])
  }
  function DefaultDist[1243915].init[1287651](ref arg this[1287655]:DefaultDist[1243915], const in arg _pid[1287657]:int(64)[13], const in arg _instance[1287659]:DefaultDist[93992], const in arg _unowned[1287661]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1287667]:int(64)[13] "dead after last mention" "temp"
    (1287669 'move' tmp[1287667] _pid[1287657])
    (1287673 '.=' this[1287655] _pid[1243906] tmp[1287667])
    val tmp[1287678]:DefaultDist[93992] "dead after last mention" "temp"
    (1287680 'move' tmp[1287678](1287703 call chpl__initCopy[1243825] _instance[1287659]))
    (1287683 '.=' this[1287655] _instance[1243909] tmp[1287678])
    val tmp[1287688]:bool[10] "dead after last mention" "temp"
    (1287690 'move' tmp[1287688] _unowned[1287661])
    (1287694 '.=' this[1287655] _unowned[1243911] tmp[1287688])
    (1287699 return _void[55])
  }
  function DefaultDist[1243915].init[1243405](ref arg this[1243409]:DefaultDist[1243915], const in arg value[1243411]:DefaultDist[93992]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1243417]:int(64)[13] "dead after last mention" "temp"
    (1243456 'move' tmp[1243417] -1)
    (1243460 '.=' this[1243409] _pid[1243906] tmp[1243417])
    val call_tmp[1243465]:DefaultDist[93992] "dead after last mention" "maybe param" "temp"
    (1243467 'move' call_tmp[1243465](1243470 call _to_unmanaged[1243859] value[1243411]))
    val tmp[1243472]:DefaultDist[93992] "dead after last mention" "temp"
    (1243474 'move' tmp[1243472](1243902 call chpl__initCopy[1243825] call_tmp[1243465]))
    (1243477 '.=' this[1243409] _instance[1243909] tmp[1243472])
    val tmp[1243482]:bool[10] "dead after last mention" "temp"
    (1243937 'move' tmp[1243482] 0)
    (1243487 '.=' this[1243409] _unowned[1243911] tmp[1243482])
    (1243492 return _void[55])
  }
  function _ref(DefaultDist)[1243932]._value[1246437](const  ref arg this[1246441]:_ref(DefaultDist)[1243932]) : DefaultDist[93992] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1246443]:DefaultDist[93992] "dead after last mention" "RVV" "temp"
    ref call_tmp[1246451]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
    (1246453 'move' call_tmp[1246451](1246456 call _instance[1246533] this[1246441]))
    {
      ref call_tmp[1246513]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
      (1246515 'move' call_tmp[1246513](1246518 call _instance[1246533] this[1246441]))
      (1246521 'move' ret[1246443](1246523 'deref' call_tmp[1246513]))
      gotoReturn _end__value[1246528] _end__value[1246528]
    }
    label _end__value[1246528]
    (1246530 return ret[1246443])
  }
  function _ref(DefaultDist)[1243932]._do_destroy[1528411](const  ref arg this[1528415]:_ref(DefaultDist)[1243932]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1528421]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[1528423]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1528425 'move' call_tmp[1528423](1528428 call _unowned[1528625] this[1528415]))
    const-val coerce_tmp[1528653]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1528657 'move' coerce_tmp[1528653](1528655 'deref' call_tmp[1528423]))
    (1528431 'move' tmp[1528421](1528434 call ![7494] coerce_tmp[1528653]))
    val tmp[1528449]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1528451]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1528453]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528455 'move' call_tmp[1528453] tmp[1528421])
    (1528460 'move' tmp[1528451] call_tmp[1528453])
    if tmp[1528451]
    {
      ref call_tmp[1528469]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
      (1528471 'move' call_tmp[1528469](1528474 call _instance[1246533] this[1528415]))
      (1528498 'move' tmp[1528449] 0)
    }
    {
      (1528504 'move' tmp[1528449] 0)
    }
    const-val call_tmp[1528510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528512 'move' call_tmp[1528510] tmp[1528449])
    if call_tmp[1528510]
    {
      const-val tmp[1528519]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1528521]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
      (1528523 'move' call_tmp[1528521](1528526 call _instance[1246533] this[1528415]))
      const-val call_tmp[1528529]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1528531 'move' call_tmp[1528529](1528533 '_wide_get_locale' call_tmp[1528521]))
      (1528535 'move' tmp[1528519] call_tmp[1528529])
      val rvfDerefTmp[2049968]:DefaultDist[1243915] "temp"
      (2049972 'move' rvfDerefTmp[2049968](2049970 'deref' this[1528415]))
      val isdirect[2064417]:bool[10] "temp"
      (2064422 'move' isdirect[2064417](2064419 call chpl_doDirectExecuteOn[187469] tmp[1528519]))
      if isdirect[2064417]
      {
        (2064426 call on_fn[1528542] rvfDerefTmp[2049968])
      }
      {
        val _args_foron_fn[2064441]:_class_localson_fn[2064433] "temp"
        (2064445 'move' _args_foron_fn[2064441](2064443 'stack allocate class' _class_localson_fn[2064433]))
        (2064447 '.=' _args_foron_fn[2064441] _0_tmp[2064436] tmp[1528519])
        (2064451 '.=' _args_foron_fn[2064441] _1_rvfDerefTmp[2064438] rvfDerefTmp[2049968])
        val _args_vforon_fn[2064455]:c_void_ptr[149] "temp"
        (2064459 'move' _args_vforon_fn[2064455](2064457 'cast_to_void_star' _args_foron_fn[2064441]))
        val _args_sizeon_fn[2064461]:int(64)[13] "temp"
        (2064465 'move' _args_sizeon_fn[2064461](2064463 'sizeof_bundle' _class_localson_fn[2064433]))
        on(2064497 call wrapon_fn[2064467] tmp[1528519] _args_vforon_fn[2064455] _args_sizeon_fn[2064461] _args_foron_fn[2064441])
      }
      {
      }
    }
    (1528622 return _void[55])
  }
  function _ref(DefaultDist)[1243932].deinit[1528379](const  ref arg this[1528383]:_ref(DefaultDist)[1243932]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    (1528393 call _do_destroy[1528411] this[1528383])
    (1528394 return _void[55])
  }
  function _ref(DefaultDist)[1243932].clone[1325628](const  ref arg this[1325632]:_ref(DefaultDist)[1243932], ref arg _retArg[1810717]:_ref(DefaultDist)[1243932]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1325634]:DefaultDist[1243915] "dead after last mention" "RVV" "temp"
    val call_tmp[1325642]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1325644 'move' call_tmp[1325642](1325647 call _value[1246437] this[1325632]))
    val call_tmp[1325650]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1325674]:DefaultDist[93992] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1325679 'move' coerce_tmp[1325674] call_tmp[1325642])
    (1325652 'move' call_tmp[1325650](1325658 call dsiClone[93900] coerce_tmp[1325674]))
    const-val call_tmp[1325659]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1325684]:DefaultDist[1243915] "dead after last mention" "delay instantiation" "temp"
    (1325687 call init[1243405] initTemp[1325684] call_tmp[1325650])
    (1325661 'move' call_tmp[1325659] initTemp[1325684])
    (1325666 'move' ret[1325634] call_tmp[1325659])
    (1810719 '=' _retArg[1810717] ret[1325634])
    (1810721 return _void[55])
  }
  function _ref(DefaultDist)[1243932].newRectangularDom[1246927](const  ref arg this[1246931]:_ref(DefaultDist)[1243932], const  ref arg ranges[1246953]:1*range(int(64),bounded,false)[1244715]) : domain(1,int(64),false)[1250953] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1779225]:int(64)[13] "temp"
    val ret[1246955]:domain(1,int(64),false)[1250953] "dead after last mention" "RVV" "temp"
    val call_tmp[1246975]:DefaultDist[93992] "dead at end of block" "expr temp" "maybe param" "temp"
    (1246977 'move' call_tmp[1246975](1246980 call _value[1246437] this[1246931]))
    val call_tmp[1246983]:domain(1,int(64),false)[1250953] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1247147]:DefaultDist[93992] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1247152 'move' coerce_tmp[1247147] call_tmp[1246975])
    (1246985 'move' call_tmp[1246983](1246991 call dsiNewRectangularDom[1247051] coerce_tmp[1247147] ranges[1246953]))
    val x[1246996]:domain(1,int(64),false)[1250953] "dead at end of block" "insert auto destroy"
    (1246998 'move' x[1246996](1252013 call chpl__initCopy[1251308] call_tmp[1246983]))
    (1247037 'move' ret[1246955] x[1246996])
    gotoReturn _end_newRectangularDom[1247045] _end_newRectangularDom[1247045]
    label _end_newRectangularDom[1247045]
    (1247047 return ret[1246955])
  }
  function _ref(DefaultDist)[1243932].newRectangularDom[1246566](const  ref arg this[1246570]:_ref(DefaultDist)[1243932]) : domain(1,int(64),false)[1250953] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val _formal_type_tmp_[1779223]:int(64)[13] "temp"
    val ret[1246578]:domain(1,int(64),false)[1250953] "dead after last mention" "RVV" "temp"
    const-val ranges[1246592]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "insert auto destroy"
    val call_tmp[1246594]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1246603]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1808913]:1*range(int(64),bounded,false)[1244715] "temp"
    (1252043 call _defaultOf[1251084] ret_tmp[1808913])
    (1808916 'move' ranges[1246592] ret_tmp[1808913])
    val call_tmp[1246615]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1246617 'move' call_tmp[1246615](1246623 call newRectangularDom[1246927] this[1246570] ranges[1246592]))
    (1246628 'move' ret[1246578] call_tmp[1246615])
    (1820480 call chpl__autoDestroy[1528835] ranges[1246592])
    gotoReturn _end_newRectangularDom[1246636] _end_newRectangularDom[1246636]
    label _end_newRectangularDom[1246636]
    (1246638 return ret[1246578])
  }
  function _ref(DefaultDist)[1243932]._instance[1246533](ref arg this[1246537]:_ref(DefaultDist)[1243932]) ref : _ref(DefaultDist)[1208893] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1246539]:_ref(DefaultDist)[1208893] "dead after last mention" "RVV" "temp"
    ref call_tmp[1246547]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
    (1246549 'move' call_tmp[1246547](1246551 '.' this[1246537] _instance[1243909]))
    (1246554 'move' ret[1246539] call_tmp[1246547])
    (1246558 return ret[1246539])
  }
  function _ref(DefaultDist)[1243932]._unowned[1528625](ref arg this[1528629]:_ref(DefaultDist)[1243932]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1528631]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1528639]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1528641 'move' call_tmp[1528639](1528643 '.' this[1528629] _unowned[1243911]))
    (1528646 'move' ret[1528631] call_tmp[1528639])
    (1528650 return ret[1528631])
  }
  type DefaultDist[1243915] val _pid[1243906]:int(64)[13] val _instance[1243909]:DefaultDist[93992] "owned" val _unowned[1243911]:bool[10] forwarding ( )
  function domain(1,int(64),false)[1252616].init[1332598](ref arg this[1332602]:domain(1,int(64),false)[1252616], const in arg _pid[1332604]:int(64)[13], const in arg _instance[1332606]:domain(1,int(64),false)[1250953], const in arg _unowned[1332608]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val tmp[1332614]:int(64)[13] "dead after last mention" "temp"
    (1332616 'move' tmp[1332614] _pid[1332604])
    (1332620 '.=' this[1332602] _pid[1252607] tmp[1332614])
    val tmp[1332625]:domain(1,int(64),false)[1250953] "dead after last mention" "temp"
    (1332627 'move' tmp[1332625](1332650 call chpl__initCopy[1251308] _instance[1332606]))
    (1332630 '.=' this[1332602] _instance[1252610] tmp[1332625])
    val tmp[1332635]:bool[10] "dead after last mention" "temp"
    (1332637 'move' tmp[1332635] _unowned[1332608])
    (1332641 '.=' this[1332602] _unowned[1252612] tmp[1332635])
    (1332646 return _void[55])
  }
  function domain(1,int(64),false)[1252616].init[1252049](ref arg this[1252053]:domain(1,int(64),false)[1252616], const in arg value[1252055]:domain(1,int(64),false)[1250953]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1252061]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1252067]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1252074]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val tmp[1252182]:int(64)[13] "dead after last mention" "temp"
      (1252184 'move' tmp[1252182] -1)
      (1252188 '.=' this[1252053] _pid[1252607] tmp[1252182])
    }
    val tmp[1252194]:domain(1,int(64),false)[1250953] "dead after last mention" "temp"
    (1252196 'move' tmp[1252194](1252603 call chpl__initCopy[1251308] value[1252055]))
    (1252199 '.=' this[1252053] _instance[1252610] tmp[1252194])
    val tmp[1252204]:bool[10] "dead after last mention" "temp"
    (1253686 'move' tmp[1252204] 0)
    (1252209 '.=' this[1252053] _unowned[1252612] tmp[1252204])
    (1252214 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].init[1353351](ref arg this[1353355]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const in arg value[1353357]:domain(1,int(64),false)[1250953]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1353365]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1353371]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1353378]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val tmp[1353486]:int(64)[13] "dead after last mention" "temp"
      (1353488 'move' tmp[1353486] -1)
      (1353492 '.=' this[1353355] _pid[1252607] tmp[1353486])
    }
    val tmp[1353498]:domain(1,int(64),false)[1250953] "dead after last mention" "temp"
    (1353500 'move' tmp[1353498](1353531 call chpl__initCopy[1251308] value[1353357]))
    (1353503 '.=' this[1353355] _instance[1252610] tmp[1353498])
    val tmp[1353508]:bool[10] "dead after last mention" "temp"
    (1353538 'move' tmp[1353508] 0)
    (1353513 '.=' this[1353355] _unowned[1252612] tmp[1353508])
    (1353518 return _void[55])
  }
  function domain(1,int(64),false)[1252616].init[1246355](ref arg this[1246359]:domain(1,int(64),false)[1252616], const  ref arg d[1246361]:DefaultDist[1243915]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779221]:int(64)[13] "temp"
    val call_tmp[1246380]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1246382 'move' call_tmp[1246380](1246388 call newRectangularDom[1246566] d[1246361]))
    (1246396 call init[1252049] this[1246359] call_tmp[1246380])
    (1246398 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].init[1353265](ref arg this[1353269]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg d[1353271]:DefaultDist[1243915], const  ref arg ranges[1353297]:1*range(int(64),bounded,false)[1244715]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779375]:int(64)[13] "temp"
    val call_tmp[1353314]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1353316 'move' call_tmp[1353314](1353322 call newRectangularDom[1246927] d[1353271] ranges[1353297]))
    (1353331 call init[1353351] this[1353269] call_tmp[1353314])
    (1353333 return _void[55])
  }
  function domain(1,int(64),false)[1252616].init[1749371](ref arg this[1749375]:domain(1,int(64),false)[1252616], const  ref arg d[1749377]:DefaultDist[1243915], const  ref arg ranges[1749403]:1*range(int(64),bounded,false)[1244715]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1779646]:int(64)[13] "temp"
    val call_tmp[1749418]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1749420 'move' call_tmp[1749418](1749426 call newRectangularDom[1246927] d[1749377] ranges[1749403]))
    (1749435 call init[1252049] this[1749375] call_tmp[1749418])
    (1749437 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].init=[1353081](ref arg this[1353085]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg other[1353087]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[1353114]:DefaultDist[1243915] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810251]:DefaultDist[1243915] "temp"
    (1353119 call dist[1287474] other[1353087] ret_tmp[1810251])
    (1810254 'move' call_tmp[1353114] ret_tmp[1810251])
    val call_tmp[1353130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1353146]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811022]:1*range(int(64),bounded,false)[1244715] "temp"
    (1353154 call dims[1353189] other[1353087] ret_tmp[1811022])
    (1811025 'move' call_tmp[1353146] ret_tmp[1811022])
    (1353159 call init[1353265] this[1353085] call_tmp[1353114] call_tmp[1353146])
    (1821244 call chpl__autoDestroy[1528835] call_tmp[1353146])
    (1821247 call chpl__autoDestroy[1528708] call_tmp[1353114])
    (1353165 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642]._value[1252857](const  ref arg this[1252861]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : domain(1,int(64),false)[1250953] "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1252863]:domain(1,int(64),false)[1250953] "dead after last mention" "RVV" "temp"
    ref call_tmp[1252871]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    (1252873 'move' call_tmp[1252871](1252876 call _instance[1252953] this[1252861]))
    {
      ref call_tmp[1252933]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
      (1252935 'move' call_tmp[1252933](1252938 call _instance[1252953] this[1252861]))
      (1252941 'move' ret[1252863](1252943 'deref' call_tmp[1252933]))
      gotoReturn _end__value[1252948] _end__value[1252948]
    }
    label _end__value[1252948]
    (1252950 return ret[1252863])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].chpl_forwarding_expr5__value[1253725](const  ref arg this[1253729]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : domain(1,int(64),false)[1250953] "compiler generated" "inline" "instantiated generic" "invisible fn" "maybe ref" "method" "primary method" "reference to const when const this" "resolved"
  {
    val ret[1253731]:domain(1,int(64),false)[1250953] "dead after last mention" "RVV" "temp"
    (1253739 'move' ret[1253731](1253742 call _value[1252857] this[1253729]))
    (1253745 return ret[1253731])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].chpl__serialize[1770822](const  ref arg this[1770826]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1814720]:_ref(_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true))[1771148]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1770842]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "dead after last mention" "RVV" "temp"
    val call_tmp[1770874]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1770876 'move' call_tmp[1770874](1770879 call _value[1252857] this[1770826]))
    const-val call_tmp[1770882]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1770963]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1770968 'move' coerce_tmp[1770963] call_tmp[1770874])
    const-val ret_tmp[1814726]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125] "temp"
    (1770890 call chpl__serialize[1770899] coerce_tmp[1770963] ret_tmp[1814726])
    (1814729 'move' call_tmp[1770882] ret_tmp[1814726])
    (1770891 'move' ret[1770842] call_tmp[1770882])
    (1814722 '=' _retArg[1814720] ret[1770842])
    (1814724 return _void[55])
  }
  function _RuntimeTypeInfo[1253692].chpl__deserialize[1771660](const  ref arg this[1771664]:_RuntimeTypeInfo[1253692], const  ref arg data[1771666]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1771125], ref arg _retArg[1814744]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ret[1771668]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    val valueType[1771678]:domain(1,int(64),false)[1250953] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1771689]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1771696]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1771698 'move' call_tmp[1771696](1771704 call chpl__deserialize[1771729] data[1771666]))
    const-val call_tmp[1771706]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1771822]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "temp"
    (1771825 call init[1252049] initTemp[1771822] call_tmp[1771696])
    (1771708 'move' call_tmp[1771706] initTemp[1771822])
    (1771713 'move' ret[1771668] call_tmp[1771706])
    gotoReturn _end_chpl__deserialize[1771721] _end_chpl__deserialize[1771721]
    label _end_chpl__deserialize[1771721]
    (1814746 '=' _retArg[1814744] ret[1771668])
    (1814748 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642]._do_destroy[1528919](const  ref arg this[1528923]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[1528929]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1528931 'move' call_tmp[1528929](1528934 call _unowned[1529176] this[1528923]))
    const-val call_tmp[1528937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1529204]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1529208 'move' coerce_tmp[1529204](1529206 'deref' call_tmp[1528929]))
    (1528939 'move' call_tmp[1528937](1528942 call ![7494] coerce_tmp[1529204]))
    const-val call_tmp[1528944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1528946 'move' call_tmp[1528944] call_tmp[1528937])
    if call_tmp[1528944]
    {
      const-val tmp[1528953]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1528955]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
      (1528957 'move' call_tmp[1528955](1528960 call _instance[1252953] this[1528923]))
      const-val call_tmp[1528963]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1528965 'move' call_tmp[1528963](1528967 '_wide_get_locale' call_tmp[1528955]))
      (1528969 'move' tmp[1528953] call_tmp[1528963])
      val rvfDerefTmp[2049989]:domain(1,int(64),false)[1252616] "temp"
      (2049993 'move' rvfDerefTmp[2049989](2049991 'deref' this[1528923]))
      val isdirect[2064502]:bool[10] "temp"
      (2064507 'move' isdirect[2064502](2064504 call chpl_doDirectExecuteOn[187469] tmp[1528953]))
      if isdirect[2064502]
      {
        (2064511 call on_fn[1528976] rvfDerefTmp[2049989])
      }
      {
        val _args_foron_fn[2064526]:_class_localson_fn[2064518] "temp"
        (2064530 'move' _args_foron_fn[2064526](2064528 'stack allocate class' _class_localson_fn[2064518]))
        (2064532 '.=' _args_foron_fn[2064526] _0_tmp[2064521] tmp[1528953])
        (2064536 '.=' _args_foron_fn[2064526] _1_rvfDerefTmp[2064523] rvfDerefTmp[2049989])
        val _args_vforon_fn[2064540]:c_void_ptr[149] "temp"
        (2064544 'move' _args_vforon_fn[2064540](2064542 'cast_to_void_star' _args_foron_fn[2064526]))
        val _args_sizeon_fn[2064546]:int(64)[13] "temp"
        (2064550 'move' _args_sizeon_fn[2064546](2064548 'sizeof_bundle' _class_localson_fn[2064518]))
        on(2064582 call wrapon_fn[2064552] tmp[1528953] _args_vforon_fn[2064540] _args_sizeon_fn[2064546] _args_foron_fn[2064526])
      }
      {
      }
    }
    {
    }
    (1529173 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].deinit[1528887](const  ref arg this[1528891]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1528901 call _do_destroy[1528919] this[1528891])
    (1528902 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].dist[1287474](const  ref arg this[1287478]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1810269]:_ref(DefaultDist)[1243932]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1287480]:DefaultDist[1243915] "dead after last mention" "RVV" "temp"
    val call_tmp[1287488]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287490 'move' call_tmp[1287488](1287493 call _value[1252857] this[1287478]))
    ref call_tmp[1287496]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1287546]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1287551 'move' coerce_tmp[1287546] call_tmp[1287488])
    (1287498 'move' call_tmp[1287496](1287501 call dist[1287519] coerce_tmp[1287546]))
    const-val call_tmp[1287504]:DefaultDist[1243915] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1287628]:DefaultDist[93992] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1287632 'move' coerce_tmp[1287628](1287630 'deref' call_tmp[1287496]))
    const-val ret_tmp[1810275]:DefaultDist[1243915] "temp"
    (1287509 call _getDistribution[1287554] coerce_tmp[1287628] ret_tmp[1810275])
    (1810278 'move' call_tmp[1287504] ret_tmp[1810275])
    (1287511 'move' ret[1287480] call_tmp[1287504])
    (1810271 '=' _retArg[1810269] ret[1287480])
    (1810273 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].these[1306028](const  ref arg this[1306032]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1810492]:_ref(_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F)[1314919]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _ir[1995711]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314808] "temp"
    (1995713 '.=' _ir[1995711] F0_this[1994519] this[1306032])
    (1995717 '=' _retArg[1810492] _ir[1995711])
    (1995720 return _void[55])
  }
  type _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] val super[1314803]:object[22] "super class" val more[1314805]:int(64)[13] val F0_this[1994517]:domain(1,int(64),false)[1252616] val F1__iterator[1994521]:_ic_these_DefaultRectangularDom_1_int64_t_F[1306733] val F2_default_arg_offset[1994523]:1*int(64)[1256544] val F3__iterator[1994525]:_ic_these_range_int64_t_bounded_F[1096722] val F4_i[1994527]:int(64)[13] const F5_end[1994529]:int(64)[13] val F6_coerce_tmp[1994531]:int(64)[13] val value[1994533]:int(64)[13]
  type _ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314808] val F0_this[1994519]:domain(1,int(64),false)[1252616]
  function _getIterator[1314817](const  ref arg ir[1314819]:_ir_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314808]) : _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1314926]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] "dead after last mention" "RVV" "temp"
    val _ic_[1314809]:_ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] "dead after last mention" "temp"
    const-val call_tmp[1314933]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1314936 'move' call_tmp[1314933](1314948 'sizeof_bundle' _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802]))
    const-val cast_tmp[1314951]:c_void_ptr[149] "dead after last mention" "temp"
    (1314953 'move' cast_tmp[1314951](1314814 call chpl_here_alloc[187788] call_tmp[1314933] 56))
    (1314822 'move' _ic_[1314809](1314955 'cast' _ic_these__ref__domain_DefaultRectangularDom_1_int64_t_F[1314802] cast_tmp[1314951]))
    (1314824 'setcid' _ic_[1314809])
    (1314931 'move' ret[1314926] _ic_[1314809])
    (1995723 '.=' ret[1314926] more[1314805] 1)
    val tmp[1995727]:domain(1,int(64),false)[1252616] "temp"
    (1995732 'move' tmp[1995727](1995728 '.v' ir[1314819] F0_this[1994519]))
    (1995734 '.=' ret[1314926] F0_this[1994517] tmp[1995727])
    (1314928 return ret[1314926])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].this[1747513](const  ref arg this[1747519]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const in arg _e0_ranges[1747521]:range(int(64),bounded,false)[1026833], ref arg _retArg[1814680]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val ranges[1748897]:1*range(int(64),bounded,false)[1244715] "insert auto destroy"
    const-val ret_tmp[1808871]:1*range(int(64),bounded,false)[1244715] "temp"
    (1748902 call chpl__init_tuple[1244733] _e0_ranges[1747521] ret_tmp[1808871])
    (1808874 'move' ranges[1748897] ret_tmp[1808871])
    const-val ret[1747535]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    val call_tmp[1748909]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1748911 'move' call_tmp[1748909](1748914 call _value[1252857] this[1747519]))
    const-val r[1748986]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "insert auto destroy"
    val call_tmp[1748996]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1748998 'move' call_tmp[1748996](1749001 call _value[1252857] this[1747519]))
    val call_tmp[1749004]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1749228]:BaseRectangularDom(1,int(64),false)[1250918] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1749234 'move' coerce_tmp[1749228](1749230 'cast' BaseRectangularDom(1,int(64),false)[1250918] call_tmp[1748996]))
    val call_tmp[1749012]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1749021]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val ret_tmp[1808937]:1*range(int(64),bounded,false)[1244715] "temp"
    (1749459 call _defaultOf[1251084] ret_tmp[1808937])
    (1808940 'move' r[1748986] ret_tmp[1808937])
    {
      const-val i[1749034]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1749036 'move' i[1749034] 0)
      {
        {
          ref call_tmp[1749267]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
          (1749269 'move' call_tmp[1749267](1749317 '.' r[1748986] x0[1244713]))
          val call_tmp[1749274]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
          (1749276 'move' call_tmp[1749274](1749279 call _value[1252857] this[1747519]))
          const-val call_tmp[1749282]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1749321]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1749326 'move' coerce_tmp[1749321] call_tmp[1749274])
          const-val ret_tmp[1809539]:range(int(64),bounded,false)[1026833] "temp"
          (1749290 call dsiDim[1258079] coerce_tmp[1749321] ret_tmp[1809539])
          (1809542 'move' call_tmp[1749282] ret_tmp[1809539])
          ref call_tmp[1749292]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
          (1749294 'move' call_tmp[1749292](1749331 '.' ranges[1748897] x0[1244713]))
          const-val call_tmp[1749299]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1749336]:range(int(64),bounded,false)[1026833] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1749340 'move' coerce_tmp[1749336](1814684 call chpl__initCopy[1085025] call_tmp[1749292]))
          const-val ret_tmp[1806150]:range(int(64),bounded,false)[1026833] "temp"
          (1749304 call this[1037467] call_tmp[1749282] coerce_tmp[1749336] ret_tmp[1806150])
          (1806153 'move' call_tmp[1749299] ret_tmp[1806150])
          (1749307 call =[1251569] call_tmp[1749267] call_tmp[1749299])
          (1824549 call chpl__autoDestroy[1508195] call_tmp[1749299])
          (1824552 call chpl__autoDestroy[1508195] coerce_tmp[1749336])
          (1824555 call chpl__autoDestroy[1508195] call_tmp[1749282])
        }
      }
      label _continueLabel0[1749263]
      label _unused_continueLabel[1749148]
      label _breakLabel[1749150]
    }
    const-val call_tmp[1749152]:DefaultDist[1243915] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810263]:DefaultDist[1243915] "temp"
    (1749157 call dist[1287474] this[1747519] ret_tmp[1810263])
    (1810266 'move' call_tmp[1749152] ret_tmp[1810263])
    val call_tmp[1749168]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1749170 'move' call_tmp[1749168](1749173 call _value[1252857] this[1747519]))
    val call_tmp[1749176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1749348]:BaseRectangularDom(1,int(64),false)[1250918] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1749354 'move' coerce_tmp[1749348](1749350 'cast' BaseRectangularDom(1,int(64),false)[1250918] call_tmp[1749168]))
    const-val call_tmp[1749184]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1749359]:domain(1,int(64),false)[1252616] "dead after last mention" "delay instantiation" "temp"
    (1749362 call init[1749371] initTemp[1749359] call_tmp[1749152] r[1748986])
    (1749186 'move' call_tmp[1749184] initTemp[1749359])
    (1749195 'move' ret[1747535] call_tmp[1749184])
    (1824558 call chpl__autoDestroy[1528708] call_tmp[1749152])
    (1824561 call chpl__autoDestroy[1528835] r[1748986])
    (1824564 call chpl__autoDestroy[1528835] ranges[1748897])
    gotoReturn _end_this[1749203] _end_this[1749203]
    label _end_this[1749203]
    (1814682 '=' _retArg[1814680] ret[1747535])
    (1814686 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].dims[1353189](const  ref arg this[1353193]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1811148]:_ref(1*range(int(64),bounded,false))[1244773]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1353195]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "RVV" "temp"
    val call_tmp[1353203]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1353205 'move' call_tmp[1353203](1353208 call _value[1252857] this[1353193]))
    const-val call_tmp[1353211]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1353256]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1353261 'move' coerce_tmp[1353256] call_tmp[1353203])
    const-val ret_tmp[1811154]:1*range(int(64),bounded,false)[1244715] "temp"
    (1353219 call dsiDims[1353228] coerce_tmp[1353256] ret_tmp[1811154])
    (1811157 'move' call_tmp[1353211] ret_tmp[1811154])
    (1353220 'move' ret[1353195] call_tmp[1353211])
    (1811150 '=' _retArg[1811148] ret[1353195])
    (1811152 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].buildArray[1254060](const  ref arg this[1254064]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1808973]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1779264]:locale[28] "temp"
    const-val ret[1254070]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1254545]:domain(1,int(64),false)[1250953] "dead at end of block" "expr temp" "maybe param" "temp"
    (1254547 'move' call_tmp[1254545](1254550 call _value[1252857] this[1254064]))
    val call_tmp[1254553]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1254836]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1254841 'move' coerce_tmp[1254836] call_tmp[1254545])
    (1254555 'move' call_tmp[1254553](1254561 call dsiBuildArray[1254757] coerce_tmp[1254836]))
    val x[1254564]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "insert auto destroy"
    (1254566 'move' x[1254564](1264738 call chpl__initCopy[1264740] call_tmp[1254553]))
    (1254591 call help[1254570] this[1254064] x[1254564])
    val call_tmp[1254593]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1286189]:BaseRectangularArr(1,int(64),false,locale)[1256291] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1286195 'move' coerce_tmp[1286189](1286191 'cast' BaseRectangularArr(1,int(64),false,locale)[1256291] x[1254564]))
    val coerce_tmp[1286517]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1286523 'move' coerce_tmp[1286517](1286519 'cast' BaseArr[149584] x[1254564]))
    (1254602 call chpl_incRefCountsForDomainsInArrayEltTypes[1286422] coerce_tmp[1286517])
    const-val call_tmp[1254608]:[domain(1,int(64),false)] locale[1287030] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810203]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1254613 call _newArray[1286557] x[1254564] ret_tmp[1810203])
    (1810206 'move' call_tmp[1254608] ret_tmp[1810203])
    (1254615 'move' ret[1254070] call_tmp[1254608])
    gotoReturn _end_buildArray[1254623] _end_buildArray[1254623]
    label _end_buildArray[1254623]
    (1808975 '=' _retArg[1808973] ret[1254070])
    (1808977 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].buildArray[1316586](const  ref arg this[1316590]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1810687]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1779325]:localesSignal[92278] "temp"
    const-val ret[1316596]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1317071]:domain(1,int(64),false)[1250953] "dead at end of block" "expr temp" "maybe param" "temp"
    (1317073 'move' call_tmp[1317071](1317076 call _value[1252857] this[1316590]))
    val call_tmp[1317079]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1317278]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1317283 'move' coerce_tmp[1317278] call_tmp[1317071])
    (1317081 'move' call_tmp[1317079](1317087 call dsiBuildArray[1317199] coerce_tmp[1317278]))
    val x[1317090]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead at end of block" "insert auto destroy"
    (1317092 'move' x[1317090](1324147 call chpl__initCopy[1324149] call_tmp[1317079]))
    (1317117 call help[1317096] this[1316590] x[1317090])
    val call_tmp[1317119]:localesSignal[92278] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1324286]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324292 'move' coerce_tmp[1324286](1324288 'cast' BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1318017] x[1317090]))
    val coerce_tmp[1324614]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324620 'move' coerce_tmp[1324614](1324616 'cast' BaseArr[149584] x[1317090]))
    (1317128 call chpl_incRefCountsForDomainsInArrayEltTypes[1324519] coerce_tmp[1324614])
    const-val call_tmp[1317134]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810693]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "temp"
    (1317139 call _newArray[1324654] x[1317090] ret_tmp[1810693])
    (1810696 'move' call_tmp[1317134] ret_tmp[1810693])
    (1317141 'move' ret[1316596] call_tmp[1317134])
    gotoReturn _end_buildArray[1317149] _end_buildArray[1317149]
    label _end_buildArray[1317149]
    (1810689 '=' _retArg[1810687] ret[1316596])
    (1810691 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].buildArray[1367049](const  ref arg this[1367053]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1811354]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1779448]:int(64)[13] "temp"
    const-val ret[1367059]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1367534]:domain(1,int(64),false)[1250953] "dead at end of block" "expr temp" "maybe param" "temp"
    (1367536 'move' call_tmp[1367534](1367539 call _value[1252857] this[1367053]))
    val call_tmp[1367542]:[domain(1,int(64),false)] int(64)[1368694] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1367741]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1367746 'move' coerce_tmp[1367741] call_tmp[1367534])
    (1367544 'move' call_tmp[1367542](1367550 call dsiBuildArray[1367662] coerce_tmp[1367741]))
    val x[1367553]:[domain(1,int(64),false)] int(64)[1368694] "dead at end of block" "insert auto destroy"
    (1367555 'move' x[1367553](1373353 call chpl__initCopy[1373355] call_tmp[1367542]))
    (1367580 call help[1367559] this[1367053] x[1367553])
    val call_tmp[1367582]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1373492]:BaseRectangularArr(1,int(64),false,int(64))[1368480] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373498 'move' coerce_tmp[1373492](1373494 'cast' BaseRectangularArr(1,int(64),false,int(64))[1368480] x[1367553]))
    val coerce_tmp[1373820]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373826 'move' coerce_tmp[1373820](1373822 'cast' BaseArr[149584] x[1367553]))
    (1367591 call chpl_incRefCountsForDomainsInArrayEltTypes[1373725] coerce_tmp[1373820])
    const-val call_tmp[1367597]:[domain(1,int(64),false)] int(64)[1374331] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811360]:[domain(1,int(64),false)] int(64)[1374331] "temp"
    (1367602 call _newArray[1373860] x[1367553] ret_tmp[1811360])
    (1811363 'move' call_tmp[1367597] ret_tmp[1811360])
    (1367604 'move' ret[1367059] call_tmp[1367597])
    gotoReturn _end_buildArray[1367612] _end_buildArray[1367612]
    label _end_buildArray[1367612]
    (1811356 '=' _retArg[1811354] ret[1367059])
    (1811358 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].buildArray[1407147](const  ref arg this[1407151]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1811720]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no copy return" "no doc" "resolved"
  {
    val _formal_type_tmp_[1779490]:real(64)[16] "temp"
    const-val ret[1407157]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "RVV" "temp"
    {
    }
    val call_tmp[1407632]:domain(1,int(64),false)[1250953] "dead at end of block" "expr temp" "maybe param" "temp"
    (1407634 'move' call_tmp[1407632](1407637 call _value[1252857] this[1407151]))
    val call_tmp[1407640]:[domain(1,int(64),false)] real(64)[1358774] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1407813]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1407818 'move' coerce_tmp[1407813] call_tmp[1407632])
    (1407642 'move' call_tmp[1407640](1407648 call dsiBuildArray[1407734] coerce_tmp[1407813]))
    val x[1407651]:[domain(1,int(64),false)] real(64)[1358774] "dead at end of block" "insert auto destroy"
    (1407653 'move' x[1407651](1410192 call chpl__initCopy[1364883] call_tmp[1407640]))
    (1407678 call help[1407657] this[1407151] x[1407651])
    val call_tmp[1407680]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val coerce_tmp[1410240]:BaseRectangularArr(1,int(64),false,real(64))[1358560] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1410246 'move' coerce_tmp[1410240](1410242 'cast' BaseRectangularArr(1,int(64),false,real(64))[1358560] x[1407651]))
    val coerce_tmp[1410250]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1410256 'move' coerce_tmp[1410250](1410252 'cast' BaseArr[149584] x[1407651]))
    (1407689 call chpl_incRefCountsForDomainsInArrayEltTypes[1365253] coerce_tmp[1410250])
    const-val call_tmp[1407695]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811324]:[domain(1,int(64),false)] real(64)[1365859] "temp"
    (1407700 call _newArray[1365388] x[1407651] ret_tmp[1811324])
    (1811327 'move' call_tmp[1407695] ret_tmp[1811324])
    (1407702 'move' ret[1407157] call_tmp[1407695])
    gotoReturn _end_buildArray[1407710] _end_buildArray[1407710]
    label _end_buildArray[1407710]
    (1811722 '=' _retArg[1811720] ret[1407157])
    (1811724 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].size[1550359](const  ref arg this[1550363]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1550365]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1550373]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1550375 'move' call_tmp[1550373](1550378 call _value[1252857] this[1550363]))
    const-val call_tmp[1550381]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1550397]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1550402 'move' coerce_tmp[1550397] call_tmp[1550373])
    (1550383 'move' call_tmp[1550381](1550386 call dsiNumIndices[1263653] coerce_tmp[1550397]))
    (1550389 'move' ret[1550365] call_tmp[1550381])
    (1550393 return ret[1550365])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].low[1746304](const  ref arg this[1746308]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1746310]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1746318]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1746320 'move' call_tmp[1746318](1746323 call _value[1252857] this[1746308]))
    const-val call_tmp[1746326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1746342]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1746347 'move' coerce_tmp[1746342] call_tmp[1746318])
    (1746328 'move' call_tmp[1746326](1746331 call dsiLow[1300455] coerce_tmp[1746342]))
    (1746334 'move' ret[1746310] call_tmp[1746326])
    (1746338 return ret[1746310])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].stride[1746369](const  ref arg this[1746373]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : int(64)[13] "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved"
  {
    val ret[1746375]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1746383]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1746385 'move' call_tmp[1746383](1746388 call _value[1252857] this[1746373]))
    const-val call_tmp[1746391]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1746624]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1746629 'move' coerce_tmp[1746624] call_tmp[1746383])
    (1746393 'move' call_tmp[1746391](1746396 call dsiStride[1746407] coerce_tmp[1746624]))
    (1746399 'move' ret[1746375] call_tmp[1746391])
    (1746403 return ret[1746375])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].contains[1750056](const  ref arg this[1750060]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg i[1750091]:1*int(64)[1256544]) : bool[10] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[1750093]:bool[10] "dead after last mention" "RVV" "temp"
    {
      val call_tmp[1750297]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
      (1750299 'move' call_tmp[1750297](1750302 call _value[1252857] this[1750060]))
      const-val call_tmp[1750313]:1*int(64)[1256544] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1814688]:1*int(64)[1256544] "temp"
      (1750318 call _makeIndexTuple[1750387] i[1750091] ret_tmp[1814688])
      (1814691 'move' call_tmp[1750313] ret_tmp[1814688])
      const-val call_tmp[1750321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1750493]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1750498 'move' coerce_tmp[1750493] call_tmp[1750297])
      (1750323 'move' call_tmp[1750321](1750329 call dsiMember[1337125] coerce_tmp[1750493] call_tmp[1750313]))
      (1750331 'move' ret[1750093] call_tmp[1750321])
      (1824570 call chpl__autoDestroy[1530942] call_tmp[1750313])
      gotoReturn _end_contains[1750370] _end_contains[1750370]
    }
    label _end_contains[1750370]
    (1750372 return ret[1750093])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].contains[1750113](const  ref arg this[1750117]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const in arg _e0_i[1750176]:int(64)[13]) : bool[10] "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "fn synchronization free"
  {
    const-val i[1750178]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809183]:1*int(64)[1256544] "temp"
    (1750179 call chpl__init_tuple[1256562] _e0_i[1750176] ret_tmp[1809183])
    (1809186 'move' i[1750178] ret_tmp[1809183])
    val ret[1750139]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1750189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1750191 'move' call_tmp[1750189](1750197 call contains[1750056] this[1750117] i[1750178]))
    (1750199 'move' ret[1750139] call_tmp[1750189])
    (1824573 call chpl__autoDestroy[1530942] i[1750178])
    (1750203 return ret[1750139])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].setIndices[1253749](const  ref arg this[1253753]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg x[1253755]:1*range(int(64),bounded,false)[1244715]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    val call_tmp[1253763]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1253765 'move' call_tmp[1253763](1253768 call _value[1252857] this[1253753]))
    val coerce_tmp[1253818]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1253823 'move' coerce_tmp[1253818] call_tmp[1253763])
    (1253775 call dsiSetIndices[1251327] coerce_tmp[1253818] x[1253755])
    ref call_tmp[1253778]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    (1253780 'move' call_tmp[1253778](1253783 call _instance[1252953] this[1253753]))
    (1253814 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642].getIndices[1296792](const  ref arg this[1296796]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], ref arg _retArg[1810345]:_ref(1*range(int(64),bounded,false))[1244773]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1296798]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "RVV" "temp"
    val call_tmp[1296806]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1296808 'move' call_tmp[1296806](1296811 call _value[1252857] this[1296796]))
    const-val call_tmp[1296814]:1*range(int(64),bounded,false)[1244715] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1296859]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1296864 'move' coerce_tmp[1296859] call_tmp[1296806])
    const-val ret_tmp[1810351]:1*range(int(64),bounded,false)[1244715] "temp"
    (1296822 call dsiGetIndices[1296831] coerce_tmp[1296859] ret_tmp[1810351])
    (1810354 'move' call_tmp[1296814] ret_tmp[1810351])
    (1296823 'move' ret[1296798] call_tmp[1296814])
    (1810347 '=' _retArg[1810345] ret[1296798])
    (1810349 return _void[55])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642]._instance[1252953](ref arg this[1252957]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) ref : _ref(domain(1,int(64),false))[1250968] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1252959]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "RVV" "temp"
    ref call_tmp[1252967]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    (1252969 'move' call_tmp[1252967](1252971 '.' this[1252957] _instance[1252610]))
    (1252974 'move' ret[1252959] call_tmp[1252967])
    (1252978 return ret[1252959])
  }
  function _ref(_domain(unmanaged domain(1,int(64),false)))[1252642]._unowned[1529176](ref arg this[1529180]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1529182]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1529190]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1529192 'move' call_tmp[1529190](1529194 '.' this[1529180] _unowned[1252612]))
    (1529197 'move' ret[1529182] call_tmp[1529190])
    (1529201 return ret[1529182])
  }
  type domain(1,int(64),false)[1252616] val _pid[1252607]:int(64)[13] val _instance[1252610]:domain(1,int(64),false)[1250953] "owned" val _unowned[1252612]:bool[10] forwarding ( )
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]._value[1287085](const  ref arg this[1287089]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) : [domain(1,int(64),false)] locale[1256505] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1287091]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "RVV" "temp"
    ref call_tmp[1287099]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "dead after last mention" "maybe param" "temp"
    (1287101 'move' call_tmp[1287099](1287104 call _instance[1287181] this[1287089]))
    {
      ref call_tmp[1287161]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "dead after last mention" "maybe param" "temp"
      (1287163 'move' call_tmp[1287161](1287166 call _instance[1287181] this[1287089]))
      (1287169 'move' ret[1287091](1287171 'deref' call_tmp[1287161]))
      gotoReturn _end__value[1287176] _end__value[1287176]
    }
    label _end__value[1287176]
    (1287178 return ret[1287091])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]._value[1325180](const  ref arg this[1325184]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) : [domain(1,int(64),false)] unmanaged localesSignal?[1318231] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1325186]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "RVV" "temp"
    ref call_tmp[1325194]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "dead after last mention" "maybe param" "temp"
    (1325196 'move' call_tmp[1325194](1325199 call _instance[1325276] this[1325184]))
    {
      ref call_tmp[1325256]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "dead after last mention" "maybe param" "temp"
      (1325258 'move' call_tmp[1325256](1325261 call _instance[1325276] this[1325184]))
      (1325264 'move' ret[1325186](1325266 'deref' call_tmp[1325256]))
      gotoReturn _end__value[1325271] _end__value[1325271]
    }
    label _end__value[1325271]
    (1325273 return ret[1325186])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]._value[1365914](const  ref arg this[1365918]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) : [domain(1,int(64),false)] real(64)[1358774] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1365920]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "RVV" "temp"
    ref call_tmp[1365928]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "dead after last mention" "maybe param" "temp"
    (1365930 'move' call_tmp[1365928](1365933 call _instance[1366010] this[1365918]))
    {
      ref call_tmp[1365990]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "dead after last mention" "maybe param" "temp"
      (1365992 'move' call_tmp[1365990](1365995 call _instance[1366010] this[1365918]))
      (1365998 'move' ret[1365920](1366000 'deref' call_tmp[1365990]))
      gotoReturn _end__value[1366005] _end__value[1366005]
    }
    label _end__value[1366005]
    (1366007 return ret[1365920])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]._value[1374386](const  ref arg this[1374390]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : [domain(1,int(64),false)] int(64)[1368694] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "fn synchronization free"
  {
    val ret[1374392]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "RVV" "temp"
    ref call_tmp[1374400]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "dead after last mention" "maybe param" "temp"
    (1374402 'move' call_tmp[1374400](1374405 call _instance[1374482] this[1374390]))
    {
      ref call_tmp[1374462]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "dead after last mention" "maybe param" "temp"
      (1374464 'move' call_tmp[1374462](1374467 call _instance[1374482] this[1374390]))
      (1374470 'move' ret[1374392](1374472 'deref' call_tmp[1374462]))
      gotoReturn _end__value[1374477] _end__value[1374477]
    }
    label _end__value[1374477]
    (1374479 return ret[1374392])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].deinit[1606378](const  ref arg this[1606382]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1606389 call _do_destroy_array[1606394] this[1606382] 1)
    (1606391 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151].deinit[1634584](const  ref arg this[1634588]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1634595 call _do_destroy_array[1634600] this[1634588] 1)
    (1634597 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885].deinit[1664654](const  ref arg this[1664658]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1664665 call _do_destroy_array[1664670] this[1664658] 1)
    (1664667 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357].deinit[1697003](const  ref arg this[1697007]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    (1697014 call _do_destroy_array[1697019] this[1697007] 1)
    (1697016 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]._dom[1346746](const  ref arg this[1346750]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], ref arg _retArg[1810944]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "no parens" "resolved" "return not owned"
  {
    const-val ret[1346752]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    val call_tmp[1346760]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "expr temp" "maybe param" "temp"
    (1346762 'move' call_tmp[1346760](1346765 call _value[1287085] this[1346750]))
    ref call_tmp[1346768]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1346791]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1346796 'move' coerce_tmp[1346791] call_tmp[1346760])
    (1346770 'move' call_tmp[1346768](1346773 call dom[1258038] coerce_tmp[1346791]))
    const-val call_tmp[1346776]:domain(1,int(64),false)[1252616] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val coerce_tmp[1346799]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1346803 'move' coerce_tmp[1346799](1346801 'deref' call_tmp[1346768]))
    const-val ret_tmp[1810818]:domain(1,int(64),false)[1252616] "temp"
    (1346781 call _getDomain[1332456] coerce_tmp[1346799] ret_tmp[1810818])
    (1810821 'move' call_tmp[1346776] ret_tmp[1810818])
    (1346783 'move' ret[1346752] call_tmp[1346776])
    (1810946 '=' _retArg[1810944] ret[1346752])
    (1810948 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151].checkAccess[1336481](const  ref arg this[1336485]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151], const  ref arg indices[1336487]:1*int(64)[1256544], const in arg value[1336489]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1336515]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1337116]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1337121 'move' coerce_tmp[1337116] value[1336489])
      (1336517 'move' call_tmp[1336515](1336523 call dsiBoundsCheck[1337074] coerce_tmp[1337116] indices[1336487]))
      const-val call_tmp[1336525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1336527 'move' call_tmp[1336525](1336530 call ![7494] call_tmp[1336515]))
      const-val call_tmp[1336532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1336534 'move' call_tmp[1336532] call_tmp[1336525])
      if call_tmp[1336532]
      {
        {
          ref call_tmp[1336566]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1336568 'move' call_tmp[1336566](1337711 '.' indices[1336487] x0[1256542]))
          ref call_tmp[1336573]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1337714]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337719 'move' coerce_tmp[1337714] value[1336489])
          (1336575 'move' call_tmp[1336573](1336578 call dom[1319616] coerce_tmp[1337714]))
          const-val call_tmp[1336581]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1337722]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337726 'move' coerce_tmp[1337722](1337724 'deref' call_tmp[1336573]))
          val coerce_tmp[1337728]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337733 'move' coerce_tmp[1337728] coerce_tmp[1337722])
          const-val ret_tmp[1809341]:range(int(64),bounded,false)[1026833] "temp"
          (1336589 call dsiDim[1258079] coerce_tmp[1337728] ret_tmp[1809341])
          (1809344 'move' call_tmp[1336581] ret_tmp[1809341])
          const-val coerce_tmp[1337800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1337804 'move' coerce_tmp[1337800](1337802 'deref' call_tmp[1336566]))
          (1336592 call halt[1337736] "array index out of bounds\n" "note: index was " coerce_tmp[1337800] " but array bounds are " call_tmp[1336581])
          (1821182 call chpl__autoDestroy[1508195] call_tmp[1336581])
        }
      }
    }
    (1337030 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].checkAccess[1348312](const  ref arg this[1348316]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], const  ref arg indices[1348318]:1*int(64)[1256544], const in arg value[1348320]:[domain(1,int(64),false)] locale[1256505]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1348346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1348947]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1348952 'move' coerce_tmp[1348947] value[1348320])
      (1348348 'move' call_tmp[1348346](1348354 call dsiBoundsCheck[1348905] coerce_tmp[1348947] indices[1348318]))
      const-val call_tmp[1348356]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1348358 'move' call_tmp[1348356](1348361 call ![7494] call_tmp[1348346]))
      const-val call_tmp[1348363]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1348365 'move' call_tmp[1348363] call_tmp[1348356])
      if call_tmp[1348363]
      {
        {
          ref call_tmp[1348397]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1348399 'move' call_tmp[1348397](1348979 '.' indices[1348318] x0[1256542]))
          ref call_tmp[1348404]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1348982]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1348987 'move' coerce_tmp[1348982] value[1348320])
          (1348406 'move' call_tmp[1348404](1348409 call dom[1258038] coerce_tmp[1348982]))
          const-val call_tmp[1348412]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1348990]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1348994 'move' coerce_tmp[1348990](1348992 'deref' call_tmp[1348404]))
          val coerce_tmp[1348996]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349001 'move' coerce_tmp[1348996] coerce_tmp[1348990])
          const-val ret_tmp[1809347]:range(int(64),bounded,false)[1026833] "temp"
          (1348420 call dsiDim[1258079] coerce_tmp[1348996] ret_tmp[1809347])
          (1809350 'move' call_tmp[1348412] ret_tmp[1809347])
          const-val coerce_tmp[1349004]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1349008 'move' coerce_tmp[1349004](1349006 'deref' call_tmp[1348397]))
          (1348423 call halt[1337736] "array index out of bounds\n" "note: index was " coerce_tmp[1349004] " but array bounds are " call_tmp[1348412])
          (1821231 call chpl__autoDestroy[1508195] call_tmp[1348412])
        }
      }
    }
    (1348861 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357].checkAccess[1376624](const  ref arg this[1376628]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357], const  ref arg indices[1376630]:1*int(64)[1256544], const in arg value[1376632]:[domain(1,int(64),false)] int(64)[1368694]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    {
      const-val call_tmp[1376658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1377259]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1377264 'move' coerce_tmp[1377259] value[1376632])
      (1376660 'move' call_tmp[1376658](1376666 call dsiBoundsCheck[1377217] coerce_tmp[1377259] indices[1376630]))
      const-val call_tmp[1376668]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376670 'move' call_tmp[1376668](1376673 call ![7494] call_tmp[1376658]))
      const-val call_tmp[1376675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1376677 'move' call_tmp[1376675] call_tmp[1376668])
      if call_tmp[1376675]
      {
        {
          ref call_tmp[1376709]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1376711 'move' call_tmp[1376709](1377291 '.' indices[1376630] x0[1256542]))
          ref call_tmp[1376716]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1377294]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377299 'move' coerce_tmp[1377294] value[1376632])
          (1376718 'move' call_tmp[1376716](1376721 call dom[1370079] coerce_tmp[1377294]))
          const-val call_tmp[1376724]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1377302]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377306 'move' coerce_tmp[1377302](1377304 'deref' call_tmp[1376716]))
          val coerce_tmp[1377308]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377313 'move' coerce_tmp[1377308] coerce_tmp[1377302])
          const-val ret_tmp[1809401]:range(int(64),bounded,false)[1026833] "temp"
          (1376732 call dsiDim[1258079] coerce_tmp[1377308] ret_tmp[1809401])
          (1809404 'move' call_tmp[1376724] ret_tmp[1809401])
          const-val coerce_tmp[1377316]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1377320 'move' coerce_tmp[1377316](1377318 'deref' call_tmp[1376709]))
          (1376735 call halt[1337736] "array index out of bounds\n" "note: index was " coerce_tmp[1377316] " but array bounds are " call_tmp[1376724])
          (1821440 call chpl__autoDestroy[1508195] call_tmp[1376724])
        }
      }
    }
    (1377173 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885].checkAccess[1395790](const  ref arg this[1395794]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885], const  ref arg indices[1395796]:1*int(64)[1256544], const in arg value[1395798]:[domain(1,int(64),false)] real(64)[1358774]) : void[4] "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved" "no return value for void"
  {
    {
      const-val call_tmp[1395824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1396425]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1396430 'move' coerce_tmp[1396425] value[1395798])
      (1395826 'move' call_tmp[1395824](1395832 call dsiBoundsCheck[1396383] coerce_tmp[1396425] indices[1395796]))
      const-val call_tmp[1395834]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1395836 'move' call_tmp[1395834](1395839 call ![7494] call_tmp[1395824]))
      const-val call_tmp[1395841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1395843 'move' call_tmp[1395841] call_tmp[1395834])
      if call_tmp[1395841]
      {
        {
          ref call_tmp[1395875]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (1395877 'move' call_tmp[1395875](1396457 '.' indices[1395796] x0[1256542]))
          ref call_tmp[1395882]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
          val coerce_tmp[1396460]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1396465 'move' coerce_tmp[1396460] value[1395798])
          (1395884 'move' call_tmp[1395882](1395887 call dom[1360159] coerce_tmp[1396460]))
          const-val call_tmp[1395890]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val coerce_tmp[1396468]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1396472 'move' coerce_tmp[1396468](1396470 'deref' call_tmp[1395882]))
          val coerce_tmp[1396474]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1396479 'move' coerce_tmp[1396474] coerce_tmp[1396468])
          const-val ret_tmp[1809407]:range(int(64),bounded,false)[1026833] "temp"
          (1395898 call dsiDim[1258079] coerce_tmp[1396474] ret_tmp[1809407])
          (1809410 'move' call_tmp[1395890] ret_tmp[1809407])
          const-val coerce_tmp[1396482]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1396486 'move' coerce_tmp[1396482](1396484 'deref' call_tmp[1395875]))
          (1395901 call halt[1337736] "array index out of bounds\n" "note: index was " coerce_tmp[1396482] " but array bounds are " call_tmp[1395890])
          (1821580 call chpl__autoDestroy[1508195] call_tmp[1395890])
        }
      }
    }
    (1396339 return _void[55])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151].this[1332316](const  ref arg this[1332320]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151], const  ref arg i[1332359]:1*int(64)[1256544]) ref : _ref(localesSignal)[1316522] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved"
  {
    ref ret[1332361]:_ref(localesSignal)[1316522] "dead after last mention" "RVV" "temp"
    val call_tmp[1335971]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead at end of block" "maybe param" "temp"
    (1335973 'move' call_tmp[1335971](1335976 call _value[1325180] this[1332320]))
    const value[1335979]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead at end of block" "const" "insert auto destroy"
    (1335981 'move' value[1335979](1344640 call chpl__initCopy[1324149] call_tmp[1335971]))
    {
      (1335998 call checkAccess[1336481] this[1332320] i[1332359] value[1335979])
    }
    {
      ref call_tmp[1336078]:_ref(localesSignal)[1316522] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1344685]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344690 'move' coerce_tmp[1344685] value[1335979])
      val coerce_tmp[1344692]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344697 'move' coerce_tmp[1344692] value[1335979])
      val coerce_tmp[1344699]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1344704 'move' coerce_tmp[1344699] value[1335979])
      (1336080 'move' call_tmp[1336078](1336086 call dsiAccess[1344103] coerce_tmp[1344685] i[1332359]))
      (1336088 'move' ret[1332361] call_tmp[1336078])
      gotoReturn _end_this[1336123] _end_this[1336123]
    }
    label _end_this[1336123]
    (1336125 return ret[1332361])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].this[1346659](const  ref arg this[1346663]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], const  ref arg i[1346702]:1*int(64)[1256544]) ref : _ref(locale)[948863] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1346704]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    val call_tmp[1347967]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "maybe param" "temp"
    (1347969 'move' call_tmp[1347967](1347972 call _value[1287085] this[1346663]))
    const value[1347975]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "const" "insert auto destroy"
    (1347977 'move' value[1347975](1349672 call chpl__initCopy[1264740] call_tmp[1347967]))
    {
      (1347994 call checkAccess[1348312] this[1346663] i[1346702] value[1347975])
    }
    {
      ref call_tmp[1348074]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1349712]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349717 'move' coerce_tmp[1349712] value[1347975])
      val coerce_tmp[1349719]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349724 'move' coerce_tmp[1349719] value[1347975])
      (1348076 'move' call_tmp[1348074](1348082 call dsiAccess[1349291] coerce_tmp[1349712] i[1346702]))
      (1348084 'move' ret[1346704] call_tmp[1348074])
      gotoReturn _end_this[1348119] _end_this[1348119]
    }
    label _end_this[1348119]
    (1348121 return ret[1346704])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357].this[1374761](const  ref arg this[1374765]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357], const  ref arg i[1374804]:1*int(64)[1256544]) ref : _ref(int(64))[936591] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    ref ret[1374806]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    val call_tmp[1376091]:[domain(1,int(64),false)] int(64)[1368694] "dead at end of block" "maybe param" "temp"
    (1376093 'move' call_tmp[1376091](1376096 call _value[1374386] this[1374765]))
    const value[1376099]:[domain(1,int(64),false)] int(64)[1368694] "dead at end of block" "const" "insert auto destroy"
    (1376101 'move' value[1376099](1379395 call chpl__initCopy[1373355] call_tmp[1376091]))
    {
      (1376118 call checkAccess[1376624] this[1374765] i[1374804] value[1376099])
    }
    {
      ref call_tmp[1376198]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1379440]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379445 'move' coerce_tmp[1379440] value[1376099])
      val coerce_tmp[1379447]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379452 'move' coerce_tmp[1379447] value[1376099])
      val coerce_tmp[1379454]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1379459 'move' coerce_tmp[1379454] value[1376099])
      (1376200 'move' call_tmp[1376198](1376206 call dsiAccess[1377603] coerce_tmp[1379440] i[1374804]))
      (1376208 'move' ret[1374806] call_tmp[1376198])
      gotoReturn _end_this[1376243] _end_this[1376243]
    }
    label _end_this[1376243]
    (1376245 return ret[1374806])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885].this[1394105](const  ref arg this[1394109]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885], const  ref arg i[1394148]:1*int(64)[1256544]) : real(64)[16] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    val ret[1394170]:real(64)[16] "dead after last mention" "RVV" "temp"
    val call_tmp[1395421]:[domain(1,int(64),false)] real(64)[1358774] "dead at end of block" "maybe param" "temp"
    (1395423 'move' call_tmp[1395421](1395426 call _value[1365914] this[1394109]))
    const value[1395429]:[domain(1,int(64),false)] real(64)[1358774] "dead at end of block" "const" "insert auto destroy"
    (1395431 'move' value[1395429](1395746 call chpl__initCopy[1364883] call_tmp[1395421]))
    {
      (1395448 call checkAccess[1395790] this[1394109] i[1394148] value[1395429])
    }
    {
      ref call_tmp[1395528]:_ref(real(64))[936736] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1397094]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1397099 'move' coerce_tmp[1397094] value[1395429])
      val coerce_tmp[1397101]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1397106 'move' coerce_tmp[1397101] value[1395429])
      val coerce_tmp[1397108]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1397113 'move' coerce_tmp[1397108] value[1395429])
      val tmp[1782171]:real(64)[16] "temp"
      (1395530 'move' tmp[1782171](1397003 call dsiAccess[1396817] coerce_tmp[1397101] i[1394148]))
      (1782175 'move' call_tmp[1395528](1782173 'addr of' tmp[1782171]))
      (1395538 'move' ret[1394170](1395540 'deref' call_tmp[1395528]))
      gotoReturn _end_this[1395573] _end_this[1395573]
    }
    label _end_this[1395573]
    (1395575 return ret[1394170])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].this[1346936](const  ref arg this[1346940]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], const  ref arg i[1346979]:1*int(64)[1256544]) const ref : _ref(locale)[948863] "alias scope from this" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    ref ret[1347001]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    val call_tmp[1348131]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "maybe param" "temp"
    (1348133 'move' call_tmp[1348131](1348136 call _value[1287085] this[1346940]))
    const value[1348139]:[domain(1,int(64),false)] locale[1256505] "dead at end of block" "const" "insert auto destroy"
    (1348141 'move' value[1348139](1348291 call chpl__initCopy[1264740] call_tmp[1348131]))
    {
      (1348158 call checkAccess[1348312] this[1346940] i[1346979] value[1348139])
    }
    {
      ref call_tmp[1348238]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1349570]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349575 'move' coerce_tmp[1349570] value[1348139])
      val coerce_tmp[1349577]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1349582 'move' coerce_tmp[1349577] value[1348139])
      (1348240 'move' call_tmp[1348238](1349525 call dsiAccess[1349411] coerce_tmp[1349577] i[1346979]))
      (1348248 'move' ret[1347001] call_tmp[1348238])
      gotoReturn _end_this[1348283] _end_this[1348283]
    }
    label _end_this[1348283]
    (1348285 return ret[1347001])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151].this[1332886](const  ref arg this[1332890]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151], const in arg _e0_i[1332992]:int(64)[13]) ref : _ref(localesSignal)[1316522] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved"
  {
    const-val i[1332994]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1808991]:1*int(64)[1256544] "temp"
    (1332995 call chpl__init_tuple[1256562] _e0_i[1332992] ret_tmp[1808991])
    (1808994 'move' i[1332994] ret_tmp[1808991])
    ref ret[1332920]:_ref(localesSignal)[1316522] "dead after last mention" "RVV" "temp"
    ref call_tmp[1334692]:_ref(localesSignal)[1316522] "dead after last mention" "maybe param" "temp"
    (1334694 'move' call_tmp[1334692](1334697 call this[1332316] this[1332890] i[1332994]))
    (1334699 'move' ret[1332920] call_tmp[1334692])
    (1821172 call chpl__autoDestroy[1530942] i[1332994])
    (1334703 return ret[1332920])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].this[1347035](const  ref arg this[1347039]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], const in arg _e0_i[1347141]:int(64)[13]) ref : _ref(locale)[948863] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1347143]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809009]:1*int(64)[1256544] "temp"
    (1347144 call chpl__init_tuple[1256562] _e0_i[1347141] ret_tmp[1809009])
    (1809012 'move' i[1347143] ret_tmp[1809009])
    ref ret[1347069]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    ref call_tmp[1347788]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    (1347790 'move' call_tmp[1347788](1347793 call this[1346659] this[1347039] i[1347143]))
    (1347795 'move' ret[1347069] call_tmp[1347788])
    (1821224 call chpl__autoDestroy[1530942] i[1347143])
    (1347799 return ret[1347069])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357].this[1375137](const  ref arg this[1375141]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357], const in arg _e0_i[1375243]:int(64)[13]) ref : _ref(int(64))[936591] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "reference to const when const this" "removable array access" "resolved" "fn synchronization free"
  {
    const-val i[1375245]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809027]:1*int(64)[1256544] "temp"
    (1375246 call chpl__init_tuple[1256562] _e0_i[1375243] ret_tmp[1809027])
    (1809030 'move' i[1375245] ret_tmp[1809027])
    ref ret[1375171]:_ref(int(64))[936591] "dead after last mention" "RVV" "temp"
    ref call_tmp[1375890]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1375892 'move' call_tmp[1375890](1375895 call this[1374761] this[1375141] i[1375245]))
    (1375897 'move' ret[1375171] call_tmp[1375890])
    (1821430 call chpl__autoDestroy[1530942] i[1375245])
    (1375901 return ret[1375171])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885].this[1394419](const  ref arg this[1394423]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885], const in arg _e0_i[1394545]:int(64)[13]) : real(64)[16] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val i[1394547]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809069]:1*int(64)[1256544] "temp"
    (1394548 call chpl__init_tuple[1256562] _e0_i[1394545] ret_tmp[1809069])
    (1809072 'move' i[1394547] ret_tmp[1809069])
    val ret[1394473]:real(64)[16] "dead after last mention" "RVV" "temp"
    ref call_tmp[1395077]:_ref(real(64))[936736] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    val tmp[1782165]:real(64)[16] "temp"
    (1395079 'move' tmp[1782165](1395414 call this[1394105] this[1394423] i[1394547]))
    (1782169 'move' call_tmp[1395077](1782167 'addr of' tmp[1782165]))
    (1395084 'move' ret[1394473](1395086 'deref' call_tmp[1395077]))
    (1821573 call chpl__autoDestroy[1530942] i[1394547])
    (1395088 return ret[1394473])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].this[1347401](const  ref arg this[1347405]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], const in arg _e0_i[1347527]:int(64)[13]) const ref : _ref(locale)[948863] "alias scope from this" "expanded varargs" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no doc" "resolved"
  {
    const-val i[1347529]:1*int(64)[1256544] "insert auto destroy"
    const-val ret_tmp[1809015]:1*int(64)[1256544] "temp"
    (1347530 call chpl__init_tuple[1256562] _e0_i[1347527] ret_tmp[1809015])
    (1809018 'move' i[1347529] ret_tmp[1809015])
    ref ret[1347455]:_ref(locale)[948863] "dead after last mention" "RVV" "temp"
    ref call_tmp[1347809]:_ref(locale)[948863] "dead after last mention" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
    (1347811 'move' call_tmp[1347809](1348124 call this[1346936] this[1347405] i[1347529]))
    (1347816 'move' ret[1347455] call_tmp[1347809])
    (1821227 call chpl__autoDestroy[1530942] i[1347529])
    (1347820 return ret[1347455])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056].these[1298200](const  ref arg this[1298204]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056], ref arg _retArg[1810407]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t)[1304427]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1990430]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] "temp"
    (1990432 '.=' _ir[1990430] F0_this[1988351] this[1298204])
    (1990436 '=' _retArg[1810407] _ir[1990430])
    (1990439 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] val super[1304311]:object[22] "super class" val more[1304313]:int(64)[13] val F0_this[1988349]:[domain(1,int(64),false)] locale[1287030] val F1__iterator[1988353]:_ic_these_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1303705] val F2__iterator[1988355]:_ic_chpl__serialViewIter[1303455] val F3_info[1988357]:[domain(1,int(64),false)] locale[1256505] val F4__iterator[1988359]:_ic_chpl_direct_pos_stride_range_iter[1303016] val F5_i[1988361]:int(64)[13] const-val F6_low[1988363]:int(64)[13] ref value[1988365]:_ref(locale)[948863]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316] val F0_this[1988351]:[domain(1,int(64),false)] locale[1287030]
  function _getIterator[1304325](const  ref arg ir[1304327]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304316]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1304434]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead after last mention" "RVV" "temp"
    val _ic_[1304317]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] "dead after last mention" "temp"
    const-val call_tmp[1304441]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1304444 'move' call_tmp[1304441](1304456 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310]))
    const-val cast_tmp[1304459]:c_void_ptr[149] "dead after last mention" "temp"
    (1304461 'move' cast_tmp[1304459](1304322 call chpl_here_alloc[187788] call_tmp[1304441] 53))
    (1304330 'move' _ic_[1304317](1304463 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_locale_int64_t[1304310] cast_tmp[1304459]))
    (1304332 'setcid' _ic_[1304317])
    (1304439 'move' ret[1304434] _ic_[1304317])
    (1990442 '.=' ret[1304434] more[1304313] 1)
    val tmp[1990446]:[domain(1,int(64),false)] locale[1287030] "temp"
    (1990451 'move' tmp[1990446](1990447 '.v' ir[1304327] F0_this[1988351]))
    (1990453 '.=' ret[1304434] F0_this[1988349] tmp[1990446])
    (1304436 return ret[1304434])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151].these[1326319](const  ref arg this[1326323]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151], ref arg _retArg[1810735]:_ref(_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t)[1330948]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "method" "primary method" "reference to const when const this" "resolved" "fn synchronization free" "no return value for void"
  {
    val _ir[1998764]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330837] "temp"
    (1998766 '.=' _ir[1998764] F0_this[1996685] this[1326323])
    (1998770 '=' _retArg[1810735] _ir[1998764])
    (1998773 return _void[55])
  }
  type _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831] val super[1330832]:object[22] "super class" val more[1330834]:int(64)[13] val F0_this[1996683]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] val F1__iterator[1996687]:_ic_these_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330226] val F2__iterator[1996689]:_ic_chpl__serialViewIter[1329976] val F3_info[1996691]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] val F4__iterator[1996693]:_ic_chpl_direct_pos_stride_range_iter[1303016] val F5_i[1996695]:int(64)[13] const-val F6_low[1996697]:int(64)[13] ref value[1996699]:_ref(localesSignal)[1316522]
  type _ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330837] val F0_this[1996685]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125]
  function _getIterator[1330846](const  ref arg ir[1330848]:_ir_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330837]) : _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831] "auto ii" "inline" "resolved" "fn synchronization free" "unsafe"
  {
    val ret[1330955]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831] "dead after last mention" "RVV" "temp"
    val _ic_[1330838]:_ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831] "dead after last mention" "temp"
    const-val call_tmp[1330962]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1330965 'move' call_tmp[1330962](1330977 'sizeof_bundle' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831]))
    const-val cast_tmp[1330980]:c_void_ptr[149] "dead after last mention" "temp"
    (1330982 'move' cast_tmp[1330980](1330843 call chpl_here_alloc[187788] call_tmp[1330962] 61))
    (1330851 'move' _ic_[1330838](1330984 'cast' _ic_these__ref__array_DefaultRectangularArr_1_int64_t_F_localesSignal_int64_t[1330831] cast_tmp[1330980]))
    (1330853 'setcid' _ic_[1330838])
    (1330960 'move' ret[1330955] _ic_[1330838])
    (1998776 '.=' ret[1330955] more[1330834] 1)
    val tmp[1998780]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125] "temp"
    (1998785 'move' tmp[1998780](1998781 '.v' ir[1330848] F0_this[1996685]))
    (1998787 '.=' ret[1330955] F0_this[1996683] tmp[1998780])
    (1330957 return ret[1330955])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]._instance[1287181](ref arg this[1287185]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) ref : _ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1287187]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "dead after last mention" "RVV" "temp"
    ref call_tmp[1287195]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "dead after last mention" "maybe param" "temp"
    (1287197 'move' call_tmp[1287195](1287199 '.' this[1287185] _instance[1287024]))
    (1287202 'move' ret[1287187] call_tmp[1287195])
    (1287206 return ret[1287187])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]._instance[1325276](ref arg this[1325280]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) ref : _ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1325282]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "dead after last mention" "RVV" "temp"
    ref call_tmp[1325290]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "dead after last mention" "maybe param" "temp"
    (1325292 'move' call_tmp[1325290](1325294 '.' this[1325280] _instance[1325119]))
    (1325297 'move' ret[1325282] call_tmp[1325290])
    (1325301 return ret[1325282])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]._instance[1366010](ref arg this[1366014]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) ref : _ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1366016]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "dead after last mention" "RVV" "temp"
    ref call_tmp[1366024]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "dead after last mention" "maybe param" "temp"
    (1366026 'move' call_tmp[1366024](1366028 '.' this[1366014] _instance[1365853]))
    (1366031 'move' ret[1366016] call_tmp[1366024])
    (1366035 return ret[1366016])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]._instance[1374482](ref arg this[1374486]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) ref : _ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved" "fn synchronization free"
  {
    ref ret[1374488]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "dead after last mention" "RVV" "temp"
    ref call_tmp[1374496]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "dead after last mention" "maybe param" "temp"
    (1374498 'move' call_tmp[1374496](1374500 '.' this[1374486] _instance[1374325]))
    (1374503 'move' ret[1374488] call_tmp[1374496])
    (1374507 return ret[1374488])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]._unowned[1601870](ref arg this[1601874]:_ref(_array(unmanaged [domain(1,int(64),false)] locale))[1287056]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1601876]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1601884]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1601886 'move' call_tmp[1601884](1601888 '.' this[1601874] _unowned[1287026]))
    (1601891 'move' ret[1601876] call_tmp[1601884])
    (1601895 return ret[1601876])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]._unowned[1630955](ref arg this[1630959]:_ref(_array(unmanaged [domain(1,int(64),false)] unmanaged localesSignal?))[1325151]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1630961]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1630969]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1630971 'move' call_tmp[1630969](1630973 '.' this[1630959] _unowned[1325121]))
    (1630976 'move' ret[1630961] call_tmp[1630969])
    (1630980 return ret[1630961])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]._unowned[1660756](ref arg this[1660760]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1660762]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1660770]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1660772 'move' call_tmp[1660770](1660774 '.' this[1660760] _unowned[1365855]))
    (1660777 'move' ret[1660762] call_tmp[1660770])
    (1660781 return ret[1660762])
  }
  function _ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]._unowned[1693395](ref arg this[1693399]:_ref(_array(unmanaged [domain(1,int(64),false)] int(64)))[1374357]) ref : _ref(bool)[937218] "field accessor" "inline" "instantiated generic" "invisible fn" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this" "resolved"
  {
    ref ret[1693401]:_ref(bool)[937218] "dead after last mention" "RVV" "temp"
    ref call_tmp[1693409]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1693411 'move' call_tmp[1693409](1693413 '.' this[1693399] _unowned[1374327]))
    (1693416 'move' ret[1693401] call_tmp[1693409])
    (1693420 return ret[1693401])
  }
  function [domain(1,int(64),false)] locale[1287030].init[1286983](ref arg this[1286987]:[domain(1,int(64),false)] locale[1287030], in arg _pid[1286991]:int(64)[13], in arg _instance[1286993]:[domain(1,int(64),false)] locale[1256505], in arg _unowned[1286997]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1287003 '.=' this[1286987] _pid[1287021] _pid[1286991])
    (1287007 '.=' this[1286987] _instance[1287024] _instance[1286993])
    (1287012 '.=' this[1286987] _unowned[1287026] _unowned[1286997])
    (1287016 return _void[55])
  }
  function [domain(1,int(64),false)] unmanaged localesSignal?[1325125].init[1325078](ref arg this[1325082]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125], in arg _pid[1325086]:int(64)[13], in arg _instance[1325088]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231], in arg _unowned[1325092]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1325098 '.=' this[1325082] _pid[1325116] _pid[1325086])
    (1325102 '.=' this[1325082] _instance[1325119] _instance[1325088])
    (1325107 '.=' this[1325082] _unowned[1325121] _unowned[1325092])
    (1325111 return _void[55])
  }
  function [domain(1,int(64),false)] real(64)[1365859].init[1365812](ref arg this[1365816]:[domain(1,int(64),false)] real(64)[1365859], in arg _pid[1365820]:int(64)[13], in arg _instance[1365822]:[domain(1,int(64),false)] real(64)[1358774], in arg _unowned[1365826]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1365832 '.=' this[1365816] _pid[1365850] _pid[1365820])
    (1365836 '.=' this[1365816] _instance[1365853] _instance[1365822])
    (1365841 '.=' this[1365816] _unowned[1365855] _unowned[1365826])
    (1365845 return _void[55])
  }
  function [domain(1,int(64),false)] int(64)[1374331].init[1374284](ref arg this[1374288]:[domain(1,int(64),false)] int(64)[1374331], in arg _pid[1374292]:int(64)[13], in arg _instance[1374294]:[domain(1,int(64),false)] int(64)[1368694], in arg _unowned[1374298]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (1374304 '.=' this[1374288] _pid[1374322] _pid[1374292])
    (1374308 '.=' this[1374288] _instance[1374325] _instance[1374294])
    (1374313 '.=' this[1374288] _unowned[1374327] _unowned[1374298])
    (1374317 return _void[55])
  }
  type [domain(1,int(64),false)] locale[1287030] val _pid[1287021]:int(64)[13] val _instance[1287024]:[domain(1,int(64),false)] locale[1256505] "alias scope from this" "owned" val _unowned[1287026]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] unmanaged localesSignal?[1325125] val _pid[1325116]:int(64)[13] val _instance[1325119]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "alias scope from this" "owned" val _unowned[1325121]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] real(64)[1365859] val _pid[1365850]:int(64)[13] val _instance[1365853]:[domain(1,int(64),false)] real(64)[1358774] "alias scope from this" "owned" val _unowned[1365855]:bool[10] forwarding ( )
  type [domain(1,int(64),false)] int(64)[1374331] val _pid[1374322]:int(64)[13] val _instance[1374325]:[domain(1,int(64),false)] int(64)[1368694] "alias scope from this" "owned" val _unowned[1374327]:bool[10] forwarding ( )
  function _do_destroy_arr[1415683](const in arg _unowned[1415685]:bool[10], const in arg _instance[1415687]:BaseArr[149584], const in arg deinitElts[1415693]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1415699]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1415701 'move' call_tmp[1415699](1415704 call ![7494] _unowned[1415685]))
    const-val call_tmp[1415706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1415708 'move' call_tmp[1415706] call_tmp[1415699])
    if call_tmp[1415706]
    {
      const-val tmp[1415715]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1415717]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1415719 'move' call_tmp[1415717](1415721 '_wide_get_locale' _instance[1415687]))
      (1415723 'move' tmp[1415715] call_tmp[1415717])
      val isdirect[2060313]:bool[10] "temp"
      (2060318 'move' isdirect[2060313](2060315 call chpl_doDirectExecuteOn[187469] tmp[1415715]))
      if isdirect[2060313]
      {
        (2060322 call on_fn[1415730] _instance[1415687] deinitElts[1415693])
      }
      {
        val _args_foron_fn[2060340]:_class_localson_fn[2060330] "temp"
        (2060344 'move' _args_foron_fn[2060340](2060342 'stack allocate class' _class_localson_fn[2060330]))
        (2060346 '.=' _args_foron_fn[2060340] _0_tmp[2060333] tmp[1415715])
        (2060350 '.=' _args_foron_fn[2060340] _1__instance[2060335] _instance[1415687])
        (2060354 '.=' _args_foron_fn[2060340] _2_deinitElts[2060337] deinitElts[1415693])
        val _args_vforon_fn[2060358]:c_void_ptr[149] "temp"
        (2060362 'move' _args_vforon_fn[2060358](2060360 'cast_to_void_star' _args_foron_fn[2060340]))
        val _args_sizeon_fn[2060364]:int(64)[13] "temp"
        (2060368 'move' _args_sizeon_fn[2060364](2060366 'sizeof_bundle' _class_localson_fn[2060330]))
        on(2060408 call wrapon_fn[2060370] tmp[1415715] _args_vforon_fn[2060358] _args_sizeon_fn[2060364] _args_foron_fn[2060340])
      }
      {
      }
    }
    {
    }
    (1416278 return _void[55])
  }
  function _do_destroy_arr[1601901](const in arg _unowned[1601903]:bool[10], const in arg _instance[1601905]:[domain(1,int(64),false)] locale[1256505], const in arg deinitElts[1601911]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1601917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1601919 'move' call_tmp[1601917](1601922 call ![7494] _unowned[1601903]))
    const-val call_tmp[1601924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1601926 'move' call_tmp[1601924] call_tmp[1601917])
    if call_tmp[1601924]
    {
      const-val tmp[1601933]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1601935]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1601937 'move' call_tmp[1601935](1601939 '_wide_get_locale' _instance[1601905]))
      (1601941 'move' tmp[1601933] call_tmp[1601935])
      val isdirect[2064917]:bool[10] "temp"
      (2064922 'move' isdirect[2064917](2064919 call chpl_doDirectExecuteOn[187469] tmp[1601933]))
      if isdirect[2064917]
      {
        (2064926 call on_fn[1601948] _instance[1601905] deinitElts[1601911])
      }
      {
        val _args_foron_fn[2064944]:_class_localson_fn[2064934] "temp"
        (2064948 'move' _args_foron_fn[2064944](2064946 'stack allocate class' _class_localson_fn[2064934]))
        (2064950 '.=' _args_foron_fn[2064944] _0_tmp[2064937] tmp[1601933])
        (2064954 '.=' _args_foron_fn[2064944] _1__instance[2064939] _instance[1601905])
        (2064958 '.=' _args_foron_fn[2064944] _2_deinitElts[2064941] deinitElts[1601911])
        val _args_vforon_fn[2064962]:c_void_ptr[149] "temp"
        (2064966 'move' _args_vforon_fn[2064962](2064964 'cast_to_void_star' _args_foron_fn[2064944]))
        val _args_sizeon_fn[2064968]:int(64)[13] "temp"
        (2064972 'move' _args_sizeon_fn[2064968](2064970 'sizeof_bundle' _class_localson_fn[2064934]))
        on(2065012 call wrapon_fn[2064974] tmp[1601933] _args_vforon_fn[2064962] _args_sizeon_fn[2064968] _args_foron_fn[2064944])
      }
      {
      }
    }
    {
    }
    (1602496 return _void[55])
  }
  function _do_destroy_arr[1630986](const in arg _unowned[1630988]:bool[10], const in arg _instance[1630990]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231], const in arg deinitElts[1630996]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1631002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1631004 'move' call_tmp[1631002](1631007 call ![7494] _unowned[1630988]))
    const-val call_tmp[1631009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1631011 'move' call_tmp[1631009] call_tmp[1631002])
    if call_tmp[1631009]
    {
      const-val tmp[1631018]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1631020]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631022 'move' call_tmp[1631020](1631024 '_wide_get_locale' _instance[1630990]))
      (1631026 'move' tmp[1631018] call_tmp[1631020])
      val isdirect[2065262]:bool[10] "temp"
      (2065267 'move' isdirect[2065262](2065264 call chpl_doDirectExecuteOn[187469] tmp[1631018]))
      if isdirect[2065262]
      {
        (2065271 call on_fn[1631033] _instance[1630990] deinitElts[1630996])
      }
      {
        val _args_foron_fn[2065289]:_class_localson_fn[2065279] "temp"
        (2065293 'move' _args_foron_fn[2065289](2065291 'stack allocate class' _class_localson_fn[2065279]))
        (2065295 '.=' _args_foron_fn[2065289] _0_tmp[2065282] tmp[1631018])
        (2065299 '.=' _args_foron_fn[2065289] _1__instance[2065284] _instance[1630990])
        (2065303 '.=' _args_foron_fn[2065289] _2_deinitElts[2065286] deinitElts[1630996])
        val _args_vforon_fn[2065307]:c_void_ptr[149] "temp"
        (2065311 'move' _args_vforon_fn[2065307](2065309 'cast_to_void_star' _args_foron_fn[2065289]))
        val _args_sizeon_fn[2065313]:int(64)[13] "temp"
        (2065317 'move' _args_sizeon_fn[2065313](2065315 'sizeof_bundle' _class_localson_fn[2065279]))
        on(2065357 call wrapon_fn[2065319] tmp[1631018] _args_vforon_fn[2065307] _args_sizeon_fn[2065313] _args_foron_fn[2065289])
      }
      {
      }
    }
    {
    }
    (1631581 return _void[55])
  }
  function _do_destroy_arr[1660787](const in arg _unowned[1660789]:bool[10], const in arg _instance[1660791]:[domain(1,int(64),false)] real(64)[1358774], const in arg deinitElts[1660797]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1660803]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1660805 'move' call_tmp[1660803](1660808 call ![7494] _unowned[1660789]))
    const-val call_tmp[1660810]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1660812 'move' call_tmp[1660810] call_tmp[1660803])
    if call_tmp[1660810]
    {
      const-val tmp[1660819]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1660821]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1660823 'move' call_tmp[1660821](1660825 '_wide_get_locale' _instance[1660791]))
      (1660827 'move' tmp[1660819] call_tmp[1660821])
      val isdirect[2065607]:bool[10] "temp"
      (2065612 'move' isdirect[2065607](2065609 call chpl_doDirectExecuteOn[187469] tmp[1660819]))
      if isdirect[2065607]
      {
        (2065616 call on_fn[1660834] _instance[1660791] deinitElts[1660797])
      }
      {
        val _args_foron_fn[2065634]:_class_localson_fn[2065624] "temp"
        (2065638 'move' _args_foron_fn[2065634](2065636 'stack allocate class' _class_localson_fn[2065624]))
        (2065640 '.=' _args_foron_fn[2065634] _0_tmp[2065627] tmp[1660819])
        (2065644 '.=' _args_foron_fn[2065634] _1__instance[2065629] _instance[1660791])
        (2065648 '.=' _args_foron_fn[2065634] _2_deinitElts[2065631] deinitElts[1660797])
        val _args_vforon_fn[2065652]:c_void_ptr[149] "temp"
        (2065656 'move' _args_vforon_fn[2065652](2065654 'cast_to_void_star' _args_foron_fn[2065634]))
        val _args_sizeon_fn[2065658]:int(64)[13] "temp"
        (2065662 'move' _args_sizeon_fn[2065658](2065660 'sizeof_bundle' _class_localson_fn[2065624]))
        on(2065702 call wrapon_fn[2065664] tmp[1660819] _args_vforon_fn[2065652] _args_sizeon_fn[2065658] _args_foron_fn[2065634])
      }
      {
      }
    }
    {
    }
    (1661382 return _void[55])
  }
  function _do_destroy_arr[1693426](const in arg _unowned[1693428]:bool[10], const in arg _instance[1693430]:[domain(1,int(64),false)] int(64)[1368694], const in arg deinitElts[1693436]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val call_tmp[1693442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1693444 'move' call_tmp[1693442](1693447 call ![7494] _unowned[1693428]))
    const-val call_tmp[1693449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1693451 'move' call_tmp[1693449] call_tmp[1693442])
    if call_tmp[1693449]
    {
      const-val tmp[1693458]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      const-val call_tmp[1693460]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693462 'move' call_tmp[1693460](1693464 '_wide_get_locale' _instance[1693430]))
      (1693466 'move' tmp[1693458] call_tmp[1693460])
      val isdirect[2065952]:bool[10] "temp"
      (2065957 'move' isdirect[2065952](2065954 call chpl_doDirectExecuteOn[187469] tmp[1693458]))
      if isdirect[2065952]
      {
        (2065961 call on_fn[1693473] _instance[1693430] deinitElts[1693436])
      }
      {
        val _args_foron_fn[2065979]:_class_localson_fn[2065969] "temp"
        (2065983 'move' _args_foron_fn[2065979](2065981 'stack allocate class' _class_localson_fn[2065969]))
        (2065985 '.=' _args_foron_fn[2065979] _0_tmp[2065972] tmp[1693458])
        (2065989 '.=' _args_foron_fn[2065979] _1__instance[2065974] _instance[1693430])
        (2065993 '.=' _args_foron_fn[2065979] _2_deinitElts[2065976] deinitElts[1693436])
        val _args_vforon_fn[2065997]:c_void_ptr[149] "temp"
        (2066001 'move' _args_vforon_fn[2065997](2065999 'cast_to_void_star' _args_foron_fn[2065979]))
        val _args_sizeon_fn[2066003]:int(64)[13] "temp"
        (2066007 'move' _args_sizeon_fn[2066003](2066005 'sizeof_bundle' _class_localson_fn[2065969]))
        on(2066047 call wrapon_fn[2066009] tmp[1693458] _args_vforon_fn[2065997] _args_sizeon_fn[2066003] _args_foron_fn[2065979])
      }
      {
      }
    }
    {
    }
    (1694021 return _void[55])
  }
  function _do_destroy_array[1606394](const  ref arg array[1606396]:[domain(1,int(64),false)] locale[1287030], const in arg deinitElts[1606402]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1606408]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1606410 'move' call_tmp[1606408](1606413 call _unowned[1601870] array[1606396]))
    ref call_tmp[1606416]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521] "dead after last mention" "maybe param" "temp"
    (1606418 'move' call_tmp[1606416](1606421 call _instance[1287181] array[1606396]))
    const-val coerce_tmp[1606463]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1606467 'move' coerce_tmp[1606463](1606465 'deref' call_tmp[1606408]))
    val coerce_tmp[1606469]:[domain(1,int(64),false)] locale[1256505] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1606473 'move' coerce_tmp[1606469](1606471 'deref' call_tmp[1606416]))
    (1606425 call _do_destroy_arr[1601901] coerce_tmp[1606463] coerce_tmp[1606469] deinitElts[1606402])
    (1606429 return _void[55])
  }
  function _do_destroy_array[1634600](const  ref arg array[1634602]:[domain(1,int(64),false)] unmanaged localesSignal?[1325125], const in arg deinitElts[1634608]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1634614]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1634616 'move' call_tmp[1634614](1634619 call _unowned[1630955] array[1634602]))
    ref call_tmp[1634622]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247] "dead after last mention" "maybe param" "temp"
    (1634624 'move' call_tmp[1634622](1634627 call _instance[1325276] array[1634602]))
    const-val coerce_tmp[1634669]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1634673 'move' coerce_tmp[1634669](1634671 'deref' call_tmp[1634614]))
    val coerce_tmp[1634675]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1634679 'move' coerce_tmp[1634675](1634677 'deref' call_tmp[1634622]))
    (1634631 call _do_destroy_arr[1630986] coerce_tmp[1634669] coerce_tmp[1634675] deinitElts[1634608])
    (1634635 return _void[55])
  }
  function _do_destroy_array[1664670](const  ref arg array[1664672]:[domain(1,int(64),false)] real(64)[1365859], const in arg deinitElts[1664678]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1664684]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1664686 'move' call_tmp[1664684](1664689 call _unowned[1660756] array[1664672]))
    ref call_tmp[1664692]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790] "dead after last mention" "maybe param" "temp"
    (1664694 'move' call_tmp[1664692](1664697 call _instance[1366010] array[1664672]))
    const-val coerce_tmp[1664739]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1664743 'move' coerce_tmp[1664739](1664741 'deref' call_tmp[1664684]))
    val coerce_tmp[1664745]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1664749 'move' coerce_tmp[1664745](1664747 'deref' call_tmp[1664692]))
    (1664701 call _do_destroy_arr[1660787] coerce_tmp[1664739] coerce_tmp[1664745] deinitElts[1664678])
    (1664705 return _void[55])
  }
  function _do_destroy_array[1697019](const  ref arg array[1697021]:[domain(1,int(64),false)] int(64)[1374331], const in arg deinitElts[1697027]:bool[10]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    ref call_tmp[1697033]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1697035 'move' call_tmp[1697033](1697038 call _unowned[1693395] array[1697021]))
    ref call_tmp[1697041]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710] "dead after last mention" "maybe param" "temp"
    (1697043 'move' call_tmp[1697041](1697046 call _instance[1374482] array[1697021]))
    const-val coerce_tmp[1697088]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1697092 'move' coerce_tmp[1697088](1697090 'deref' call_tmp[1697033]))
    val coerce_tmp[1697094]:[domain(1,int(64),false)] int(64)[1368694] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1697098 'move' coerce_tmp[1697094](1697096 'deref' call_tmp[1697041]))
    (1697050 call _do_destroy_arr[1693426] coerce_tmp[1697088] coerce_tmp[1697094] deinitElts[1697027])
    (1697054 return _void[55])
  }
  function =[1287737](ref arg a[1287739]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg b[1287741]:domain(1,int(64),false)[1252616]) : void[4] "assignop" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1287797]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1287805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
    }
    ref call_tmp[1287994]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    (1287996 'move' call_tmp[1287994](1287999 call _instance[1252953] a[1287739]))
    val coerce_tmp[1288457]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1288461 'move' coerce_tmp[1288457](1288459 'deref' call_tmp[1287994]))
    val coerce_tmp[1288463]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1288468 'move' coerce_tmp[1288463] coerce_tmp[1288457])
    (1288006 call dsiAssignDomain[1288435] coerce_tmp[1288463] b[1287741] 0)
    ref call_tmp[1288011]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
    (1288013 'move' call_tmp[1288011](1288016 call _instance[1252953] a[1287739]))
    (1288047 return _void[55])
  }
  type _tElt[137999] def move[137993]:_tElt[137999] def initCopy[137995]:_tElt[137999] def assign[137997]:_tElt[137999]
  function chpl__unalias[1530720](const  ref arg x[1530722]:domain(1,int(64),false)[1252616]) : domain(1,int(64),false)[1252616] "inline" "instantiated generic" "invisible fn" "resolved" "unalias fn"
  {
    val ret[1530724]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    val call_tmp[1530762]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1530790]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1530792 'move' call_tmp[1530790](1530795 call _unowned[1529176] x[1530722]))
    const-val call_tmp[1530798]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1530850]:bool[10] "dead after last mention" "const" "temp"
    (1530852 'move' tmp[1530850](1530854 'deref' call_tmp[1530790]))
    (1530800 'move' call_tmp[1530798] tmp[1530850])
    if call_tmp[1530798]
    {
      const-val ret[1530807]:domain(1,int(64),false)[1252616] "dead at end of block" "no auto destroy"
      (1530809 'move' ret[1530807](1530856 call chpl__initCopy[1353056] x[1530722]))
      (1530813 'move' ret[1530724] ret[1530807])
      gotoReturn _end_chpl__unalias[1530837] _end_chpl__unalias[1530837]
    }
    {
      const-val ret[1530822]:domain(1,int(64),false)[1252616] "dead at end of block" "insert auto destroy" "no copy"
      (1530824 'move' ret[1530822] x[1530722])
      (1530828 'move' ret[1530724] ret[1530822])
      gotoReturn _end_chpl__unalias[1530837] _end_chpl__unalias[1530837]
    }
    label _end_chpl__unalias[1530837]
    (1530839 return ret[1530724])
  }
  function chpl__coerceMove[1287285](const  ref arg dstType[1287287]:_RuntimeTypeInfo[1253692], const  ref arg rhs[1287289]:domain(1,int(64),false)[1252616], ref arg _retArg[1810233]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val _formal_tmp_rhs[1287468]:domain(1,int(64),false)[1252616] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (1287471 'move' _formal_tmp_rhs[1287468] rhs[1287289])
    const-val ret[1287291]:domain(1,int(64),false)[1252616] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1287314]:DefaultDist[1243915] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810239]:DefaultDist[1243915] "temp"
    (1287319 call dist[1287474] _formal_tmp_rhs[1287468] ret_tmp[1810239])
    (1810242 'move' call_tmp[1287314] ret_tmp[1810239])
    val call_tmp[1287322]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287324 'move' call_tmp[1287322](1287327 call _value[1246437] call_tmp[1287314]))
    (1820714 call chpl__autoDestroy[1528708] call_tmp[1287314])
    val lhs[1287345]:domain(1,int(64),false)[1252616] "dead at end of block" "insert auto destroy"
    const-val _runtime_type_tmp_[1297681]:DefaultDist[1243915] "dead at end of block" "temp"
    (1297686 'move' _runtime_type_tmp_[1297681](1777946 '.v' dstType[1287287] dist[1253693]))
    const-val ret_tmp[1808955]:domain(1,int(64),false)[1252616] "temp"
    (1297679 call chpl__convertRuntimeTypeToValue[1253847] _runtime_type_tmp_[1297681] ret_tmp[1808955])
    (1808958 'move' lhs[1287345] ret_tmp[1808955])
    (1287352 call chpl_statementLevelSymbol[1287726] lhs[1287345])
    (1287355 call =[1287737] lhs[1287345] _formal_tmp_rhs[1287468])
    const-val call_tmp[1287362]:DefaultDist[1243915] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1810245]:DefaultDist[1243915] "temp"
    (1287367 call dist[1287474] lhs[1287345] ret_tmp[1810245])
    (1810248 'move' call_tmp[1287362] ret_tmp[1810245])
    val call_tmp[1287370]:DefaultDist[93992] "dead after last mention" "expr temp" "maybe param" "temp"
    (1287372 'move' call_tmp[1287370](1287375 call _value[1246437] call_tmp[1287362]))
    (1820717 call chpl__autoDestroy[1528708] call_tmp[1287362])
    (1287455 'move' ret[1287291] lhs[1287345])
    (1820720 call chpl__autoDestroy[1530701] _formal_tmp_rhs[1287468])
    gotoReturn _end_chpl__coerceMove[1287463] _end_chpl__coerceMove[1287463]
    label _end_chpl__coerceMove[1287463]
    (1810235 '=' _retArg[1810233] ret[1287291])
    (1810237 return _void[55])
  }
  function chpl__coerceCopy[1406699](const  ref arg dstType[1406701]:_RuntimeTypeInfo[1366092], const in arg rhs[1406707]:real(64)[16], ref arg _retArg[1811654]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885]) : void[4] "coerce fn" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "find user line"
  {
    const-val ret[1406709]:[domain(1,int(64),false)] real(64)[1365859] "dead after last mention" "RVV" "temp"
    val eltType[1406831]:real(64)[16] "dead at end of block" "insert auto destroy" "type variable"
    ref dom[1406841]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "dead at end of block" "const" "ref to immutable" "ref var"
    const-val call_tmp[1406843]:domain(1,int(64),false)[1252616] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1811666]:domain(1,int(64),false)[1252616] "temp"
    (1406848 call chpl__domainFromArrayRuntimeType[1407078] dstType[1406701] ret_tmp[1811666])
    (1811669 'move' call_tmp[1406843] ret_tmp[1811666])
    (1406850 'move' dom[1406841](1406852 'addr of' call_tmp[1406843]))
    const-val call_tmp[1406855]:[domain(1,int(64),false)] real(64)[1365859] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1811696]:[domain(1,int(64),false)] real(64)[1365859] "temp"
    (1406863 call buildArray[1407147] dom[1406841] ret_tmp[1811696])
    (1811699 'move' call_tmp[1406855] ret_tmp[1811696])
    const-val lhs[1406867]:[domain(1,int(64),false)] real(64)[1365859] "dead at end of block" "insert auto destroy" "no copy" "unsafe"
    (1406869 'move' lhs[1406867] call_tmp[1406855])
    {
      ref i_this[1829508]:_ref(_array(unmanaged [domain(1,int(64),false)] real(64)))[1365885] "ref to immutable" "temp"
      (1829512 'move' i_this[1829508](1829510 'set reference' lhs[1406867]))
      const-val rhs[1829599]:real(64)[16]
      (1829602 'move' rhs[1829599] rhs[1406707])
      {
        val ret[1829515]:nothing[7] "dead after last mention" "RVV" "temp"
        {
          val call_tmp[1829518]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "expr temp" "maybe param" "temp"
          (1829520 'move' call_tmp[1829518](1829523 call _value[1365914] i_this[1829508]))
          val coerce_tmp[1829525]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
          (1829527 'move' coerce_tmp[1829525] call_tmp[1829518])
          const-val default_arg_tasksPerLocale[1829530]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1829532 'move' default_arg_tasksPerLocale[1829530](1829535 call these_default_tasksPerLocale[1410562] coerce_tmp[1829525]))
          const-val default_arg_ignoreRunning[1829537]:bool[10] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1829539 'move' default_arg_ignoreRunning[1829537](1829542 call these_default_ignoreRunning[1410593] coerce_tmp[1829525]))
          const-val default_arg_minIndicesPerTask[1829544]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
          (1829546 'move' default_arg_minIndicesPerTask[1829544](1829549 call these_default_minIndicesPerTask[1410624] coerce_tmp[1829525]))
          {
            const-val rhs[1854127]:real(64)[16]
            (1854130 'move' rhs[1854127] rhs[1829599])
            {
              val ret[1853709]:nothing[7] "dead after last mention" "RVV" "temp"
              {
                ref call_tmp[1853712]:_ref(domain(1,int(64),false))[1250968] "dead after last mention" "maybe param" "temp"
                (1853714 'move' call_tmp[1853712](1853717 call dom[1360159] coerce_tmp[1829525]))
                val coerce_tmp[1853719]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1853721 'move' coerce_tmp[1853719](1853723 'deref' call_tmp[1853712]))
                val coerce_tmp[1853725]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "concurrently accessed" "insert auto destroy" "temp"
                (1853727 'move' coerce_tmp[1853725] coerce_tmp[1853719])
                val default_arg_offset[1853730]:1*int(64)[1256544] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
                const-val ret_tmp[1853732]:1*int(64)[1256544] "temp"
                (1853735 call these_default_offset[1315181] coerce_tmp[1853725] ret_tmp[1853732])
                (1853738 'move' default_arg_offset[1853730] ret_tmp[1853732])
                {
                  const-ref i_offset[1853742]:1*int(64)[1256544] "temp"
                  (1853744 'move' i_offset[1853742](1853746 'set reference' default_arg_offset[1853730]))
                  {
                    val ret[1853749]:nothing[7] "dead after last mention" "RVV" "temp"
                    const-val numTasks[1853751]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    val tmp[1853753]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
                    const-val tmp[1853755]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1853757]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1853759 'move' call_tmp[1853757](1853762 call ==[435666] default_arg_tasksPerLocale[1829530] 0))
                    (1853765 'move' tmp[1853755] call_tmp[1853757])
                    if tmp[1853755]
                    {
                      const-val tmp[1853770]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                      const-val call_tmp[1853772]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                      const-val ret_tmp[1853774]:locale[28] "temp"
                      (1853777 call here[90438] ret_tmp[1853774])
                      (1853779 'move' call_tmp[1853772] ret_tmp[1853774])
                      (1853782 'move' tmp[1853770](1853785 call maxTaskPar[90545] call_tmp[1853772]))
                      (1853787 'move' tmp[1853753] tmp[1853770])
                      (1853791 call chpl__autoDestroy[1435384] call_tmp[1853772])
                    }
                    {
                      (1853794 'move' tmp[1853753] default_arg_tasksPerLocale[1829530])
                    }
                    (1853798 'move' numTasks[1853751] tmp[1853753])
                    const-val tmp[1853801]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                    val tmp[1853803]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                    const-val tmp[1853805]:bool[10] "dead after last mention" "maybe param" "temp"
                    const-val call_tmp[1853807]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1853809 'move' call_tmp[1853807](1853811 'task_get_serial'))
                    (1853812 'move' tmp[1853805] call_tmp[1853807])
                    if tmp[1853805]
                    {
                      const-val tmp[1853817]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      const-val ret_tmp[1853819]:2*int(64)[1040075] "temp"
                      (1853822 call _build_tuple[1040033] 1 -1 ret_tmp[1853819])
                      (1853826 'move' tmp[1853817] ret_tmp[1853819])
                      (1853829 'move' tmp[1853803] tmp[1853817])
                    }
                    {
                      const-val tmp[1853833]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                      ref call_tmp[1853835]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "maybe param" "temp"
                      (1853837 'move' call_tmp[1853835](1853840 call ranges[1251363] coerce_tmp[1853725]))
                      const-val ret_tmp[1853842]:2*int(64)[1040075] "temp"
                      (1853845 call _computeChunkStuff[1380982] numTasks[1853751] default_arg_ignoreRunning[1829537] default_arg_minIndicesPerTask[1829544] call_tmp[1853835] ret_tmp[1853842])
                      (1853851 'move' tmp[1853833] ret_tmp[1853842])
                      (1853854 'move' tmp[1853803] tmp[1853833])
                    }
                    (1853858 '=' tmp[1853801] tmp[1853803])
                    (1853861 'noop')
                    1
                    ref call_tmp[1853863]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1853865 'move' call_tmp[1853863](1853867 '.' tmp[1853801] x0[1040071]))
                    const-val numChunks[1853870]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1853872]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1853874 'move' coerce_tmp[1853872](1853876 'deref' call_tmp[1853863]))
                    (1853878 '=' numChunks[1853870] coerce_tmp[1853872])
                    (1853881 'noop')
                    ref call_tmp[1853882]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                    (1853884 'move' call_tmp[1853882](1853886 '.' tmp[1853801] x1[1040073]))
                    const-val parDim[1853889]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                    const-val coerce_tmp[1853891]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                    (1853893 'move' coerce_tmp[1853891](1853895 'deref' call_tmp[1853882]))
                    (1853897 '=' parDim[1853889] coerce_tmp[1853891])
                    (1853900 'noop')
                    const-val call_tmp[1853901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1853903 'move' call_tmp[1853901](1853906 call <=[437050] numChunks[1853870] 1))
                    const-val call_tmp[1853909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1853911 'move' call_tmp[1853909] call_tmp[1853901])
                    if call_tmp[1853909]
                    {
                      {
                        val _indexOfInterest[1853917]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1853919]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1383422] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1853921]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383428] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1853923]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383428] "temp"
                        (1853926 call these_help[1383005] coerce_tmp[1853725] ret_tmp[1853923])
                        (1853929 'move' call_tmp[1853921] ret_tmp[1853923])
                        (1853932 'move' _iterator[1853919](1853935 call _getIterator[1383437] call_tmp[1853921]))
                        {
                          val ret[1919960]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1383428] "dead after last mention" "RVV" "temp"
                          val _indexOfInterest[1919962]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1919964]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
                          ref call_tmp[1919966]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
                          ref _this_tmp_[1919968]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
                          const-val this[1920215]:domain(1,int(64),false)[1250953] "temp"
                          (1920220 'move' this[1920215](1920217 '.v' _iterator[1853919] F0_this[2002232]))
                          (1919970 'move' _this_tmp_[1919968](1919973 call ranges[1251363] this[1920215]))
                          (1919975 'move' call_tmp[1919966](1919977 '.' _this_tmp_[1919968] x0[1244713]))
                          (1919980 'move' _iterator[1919964](1919983 call _getIterator[1095339] call_tmp[1919966]))
                          {
                            val ret[1919986]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
                            const-val _return_tmp_[1919988]:bool[10] "dead after last mention" "temp"
                            const-val this[1919990]:range(int(64),bounded,false)[1026833] "temp"
                            (1919992 'move' this[1919990](1919994 '.v' _iterator[1919964] F0_this[1980749]))
                            (1919997 'move' _return_tmp_[1919988](1920000 call checkIfIterWillOverflow[1095833] this[1919990] 1))
                            val i[1920003]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[1920005]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1920007 'move' i[1920003] 0)
                            ref call_tmp[1920010]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[1920012]:range(int(64),bounded,false)[1026833] "temp"
                            (1920014 'move' this[1920012](1920016 '.v' _iterator[1919964] F0_this[1980749]))
                            (1920019 'move' call_tmp[1920010](1920022 call _low[1028471] this[1920012]))
                            const-val start[1920024]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1920026]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1920028 'move' coerce_tmp[1920026](1920030 'deref' call_tmp[1920010]))
                            (1920032 '=' start[1920024] coerce_tmp[1920026])
                            (1920035 'noop')
                            ref call_tmp[1920036]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[1920038]:range(int(64),bounded,false)[1026833] "temp"
                            (1920040 'move' this[1920038](1920042 '.v' _iterator[1919964] F0_this[1980749]))
                            (1920045 'move' call_tmp[1920036](1920048 call _high[1028679] this[1920038]))
                            const end[1920050]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1920052]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1920054 'move' coerce_tmp[1920052](1920056 'deref' call_tmp[1920036]))
                            (1920058 '=' end[1920050] coerce_tmp[1920052])
                            (1920061 'noop')
                            CForLoop[1920062] order-independent
                            {
                              const-val yret[1920077]:int(64)[13] "dead after last mention" "YVV" "temp"
                              const-val call_tmp[1920079]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val this[1920081]:range(int(64),bounded,false)[1026833] "temp"
                              (1920083 'move' this[1920081](1920085 '.v' _iterator[1919964] F0_this[1980749]))
                              (1920088 'move' call_tmp[1920079](1920091 call chpl_intToIdx[1028499] this[1920081] i[1920003]))
                              (1920094 'move' yret[1920077] call_tmp[1920079])
                              const-val _yieldedIndex[1920097]:int(64)[13] "temp"
                              (1920099 'move' _yieldedIndex[1920097] call_tmp[1920079])
                              {
                                const-val i[1920103]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1920105 'move' i[1920103] _yieldedIndex[1920097])
                                const-val yret[1920108]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1920110 'move' yret[1920108] _yieldedIndex[1920097])
                                const-val _yieldedIndex[1920132]:int(64)[13] "temp"
                                (1920213 'move' _yieldedIndex[1920132] _yieldedIndex[1920097])
                                {
                                  const-val i[1920134]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1920136 'move' i[1920134] _yieldedIndex[1920132])
                                  {
                                    const-val yret[1920140]:int(64)[13] "dead after last mention" "YVV" "temp"
                                    (1920142 'move' yret[1920140] i[1920134])
                                    const-val _indexOfInterest[1920145]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                    (1920147 'move' _indexOfInterest[1920145] yret[1920140])
                                    {
                                      const-val i[1920151]:int(64)[13] "const" "index var" "insert auto destroy"
                                      (1920153 'move' i[1920151] _indexOfInterest[1920145])
                                      {
                                        ref yret[1920157]:_ref(real(64))[936736] "dead after last mention" "YVV" "temp"
                                        ref call_tmp[1920159]:_ref(real(64))[936736] "dead after last mention" "maybe param" "temp"
                                        (1920161 'move' call_tmp[1920159](1920164 call dsiAccess[1396502] coerce_tmp[1829525] i[1920151]))
                                        (1920167 'move' yret[1920157] call_tmp[1920159])
                                        ref _indexOfInterest[1920170]:_ref(real(64))[936736] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                                        (1920172 'move' _indexOfInterest[1920170] yret[1920157])
                                        {
                                          ref i[1920176]:_ref(real(64))[936736] "index var" "insert auto destroy"
                                          (1920178 'move' i[1920176] _indexOfInterest[1920170])
                                          ref yret[1920181]:_ref(real(64))[936736] "dead after last mention" "YVV" "temp"
                                          (1920183 'move' yret[1920181] i[1920176])
                                          ref e[1920186]:_ref(real(64))[936736] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                                          (1920188 'move' e[1920186] yret[1920181])
                                          {
                                            val call_tmp[1920192]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                                            const-val copy[1920194]:real(64)[16] "dead at end of block" "no auto destroy"
                                            (1920196 'move' copy[1920194] rhs[1854127])
                                            (1920199 '=' e[1920186] copy[1920194])
                                            val optinfo[1920202]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                                            (1920204 'optimization info' optinfo[1920202])
                                          }
                                          label _continueLabel[1920206]
                                        }
                                      }
                                      label _continueLabel[1920208]
                                    }
                                  }
                                  label _continueLabel[1920210]
                                }
                              }
                              {
                                (1920064 '=' i[1920003] coerce_tmp[1920026])
                              }
                              {
                                (1920068 '<=' i[1920003] end[1920050])
                              }
                              {
                                val call_tmp[1920072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (1920074 '+=' i[1920003] 1)
                              }
                            }
                            label _endthese[1920123]
                          }
                          (1920126 call _freeIterator[1102025] _iterator[1919964])
                          label _endthese_help[1920128]
                        }
                        label _breakLabel[1853996]
                        (1853999 call _freeIterator[1383610] _iterator[1853919])
                      }
                    }
                    {
                      {
                        const-val tmpIter[1854003]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
                        const-val call_tmp[1854005]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val ret_tmp[1854007]:range(int(64),boundedLow,false)[1087584] "temp"
                        (1854010 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1854007])
                        (1854013 'move' call_tmp[1854005] ret_tmp[1854007])
                        const-val ret_tmp[1854016]:range(int(64),bounded,false)[1026833] "temp"
                        (1854019 call #[1087944] call_tmp[1854005] numChunks[1853870] ret_tmp[1854016])
                        (1854023 'move' tmpIter[1854003] ret_tmp[1854016])
                        {
                          const _coforallCount[1854027]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
                          (1854029 'move' _coforallCount[1854027](1854032 call _endCountAlloc[1227937]))
                          const-val numTasks[1854033]:int(64)[13] "dead at end of block" "temp"
                          (1854035 'move' numTasks[1854033](1854038 call size[1035808] tmpIter[1854003]))
                          (1854041 call _upEndCount[1228180] _coforallCount[1854027] numTasks[1854033])
                          (1854045 call chpl_resetTaskSpawn[1229262] numTasks[1854033])
                          val _indexOfInterest[1854047]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                          val _iterator[1854049]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
                          (1854051 'move' _iterator[1854049](1854054 call _getIterator[1095339] tmpIter[1854003]))
                          {
                            val ret[1920223]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
                            const-val _return_tmp_[1920225]:bool[10] "dead after last mention" "temp"
                            const-val this[1920343]:range(int(64),bounded,false)[1026833] "temp"
                            (1920348 'move' this[1920343](1920345 '.v' _iterator[1854049] F0_this[1980749]))
                            (1920227 'move' _return_tmp_[1920225](1920230 call checkIfIterWillOverflow[1095833] this[1920343] 1))
                            val i[1920233]:int(64)[13] "dead at end of block" "insert auto destroy"
                            val call_tmp[1920235]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                            (1920237 'move' i[1920233] 0)
                            ref call_tmp[1920240]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[1920350]:range(int(64),bounded,false)[1026833] "temp"
                            (1920355 'move' this[1920350](1920352 '.v' _iterator[1854049] F0_this[1980749]))
                            (1920242 'move' call_tmp[1920240](1920245 call _low[1028471] this[1920350]))
                            const-val start[1920247]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1920249]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1920251 'move' coerce_tmp[1920249](1920253 'deref' call_tmp[1920240]))
                            (1920255 '=' start[1920247] coerce_tmp[1920249])
                            (1920258 'noop')
                            ref call_tmp[1920259]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
                            const-val this[1920357]:range(int(64),bounded,false)[1026833] "temp"
                            (1920362 'move' this[1920357](1920359 '.v' _iterator[1854049] F0_this[1980749]))
                            (1920261 'move' call_tmp[1920259](1920264 call _high[1028679] this[1920357]))
                            const end[1920266]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                            const-val coerce_tmp[1920268]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                            (1920270 'move' coerce_tmp[1920268](1920272 'deref' call_tmp[1920259]))
                            (1920274 '=' end[1920266] coerce_tmp[1920268])
                            (1920277 'noop')
                            CForLoop[1920278]
                            {
                              const-val yret[1920293]:int(64)[13] "dead after last mention" "YVV" "temp"
                              const-val call_tmp[1920295]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                              const-val this[1920364]:range(int(64),bounded,false)[1026833] "temp"
                              (1920369 'move' this[1920364](1920366 '.v' _iterator[1854049] F0_this[1980749]))
                              (1920297 'move' call_tmp[1920295](1920300 call chpl_intToIdx[1028499] this[1920364] i[1920233]))
                              (1920303 'move' yret[1920293] call_tmp[1920295])
                              const-val _yieldedIndex[1920317]:int(64)[13] "coforall index var" "temp"
                              (1920341 'move' _yieldedIndex[1920317] call_tmp[1920295])
                              {
                                const-val chunk[1920319]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
                                (1920321 'move' chunk[1920319] _yieldedIndex[1920317])
                                val dummy_error[1920324]:Error[167984] "concurrently accessed" "error variable" "temp"
                                val _args_forcoforall_fn[2070525]:_class_localscoforall_fn[2070503] "temp"
                                (2070529 'move' _args_forcoforall_fn[2070525](2070527 'stack allocate class' _class_localscoforall_fn[2070503]))
                                (2070531 '.=' _args_forcoforall_fn[2070525] _0_parDim[2070506] parDim[1853889])
                                (2070535 '.=' _args_forcoforall_fn[2070525] _1_numChunks[2070508] numChunks[1853870])
                                (2070539 '.=' _args_forcoforall_fn[2070525] _2_coerce_tmp[2070510] coerce_tmp[1853725])
                                (2070543 '.=' _args_forcoforall_fn[2070525] _3_chunk[2070512] chunk[1920319])
                                (2070547 '.=' _args_forcoforall_fn[2070525] _4__coforallCount[2070514] _coforallCount[1854027])
                                (2070551 '.=' _args_forcoforall_fn[2070525] _6_coerce_tmp[2070518] coerce_tmp[1829525])
                                ref tmp[2070555]:1*int(64)[1256544] "temp"
                                (2070559 'move' tmp[2070555](2070557 'set reference' default_arg_offset[1853730]))
                                (2070561 '.=' _args_forcoforall_fn[2070525] _7_default_arg_offset[2070520] tmp[2070555])
                                (2070565 '.=' _args_forcoforall_fn[2070525] _8_rhs[2070522] rhs[1854127])
                                val _args_vforcoforall_fn[2070569]:c_void_ptr[149] "temp"
                                (2070573 'move' _args_vforcoforall_fn[2070569](2070571 'cast_to_void_star' _args_forcoforall_fn[2070525]))
                                val _args_sizecoforall_fn[2070575]:int(64)[13] "temp"
                                (2070579 'move' _args_sizecoforall_fn[2070575](2070577 'sizeof_bundle' _class_localscoforall_fn[2070503]))
                                ref _taskListcoforall_fn[2070581]:c_void_ptr[149] "temp"
                                (2070586 'move' _taskListcoforall_fn[2070581](2070583 '.' _coforallCount[1854027] taskList[12712]))
                                val _taskListNodecoforall_fn[2070588]:int(64)[13] "temp"
                                (2070592 'move' _taskListNodecoforall_fn[2070588](2070590 '_wide_get_node' _coforallCount[1854027]))
                                (2070691 call wrapcoforall_fn[2070594] _taskListcoforall_fn[2070581] _taskListNodecoforall_fn[2070588] _args_vforcoforall_fn[2070569] _args_sizecoforall_fn[2070575] _args_forcoforall_fn[2070525])
                                {
                                }
                                label _continueLabel[1920338]
                              }
                              {
                                (1920280 '=' i[1920233] coerce_tmp[1920249])
                              }
                              {
                                (1920284 '<=' i[1920233] end[1920266])
                              }
                              {
                                val call_tmp[1920288]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                                (1920290 '+=' i[1920233] 1)
                              }
                            }
                            label _endthese[1920313]
                          }
                          label _breakLabel[1854079]
                          val error[1854081]:Error[167984] "error variable" "temp"
                          (1854083 'move' error[1854081] nil[44])
                          (1854087 call _waitEndCount[1235056] _coforallCount[1854027] numTasks[1854033] error[1854081])
                          val errorExists[2076065]:bool[10] "temp"
                          (2076070 'move' errorExists[2076065](2076067 '!=' error[1854081] nil[44]))
                          if errorExists[2076065]
                          {
                            (1854095 call chpl_propagate_error[170518] error[1854081])
                          }
                          (1854099 call _endCountFree[1233879] _coforallCount[1854027])
                          (1854102 call _freeIterator[1102025] _iterator[1854049])
                        }
                        (1854105 call chpl__autoDestroy[1508195] tmpIter[1854003])
                        (1854108 call chpl__autoDestroy[1514564] call_tmp[1854005])
                      }
                    }
                    (1854112 call chpl__autoDestroy[1508492] tmp[1853801])
                    label _endthese[1854114]
                  }
                }
                (1854117 call chpl_after_forall_fence[13071])
                (1854119 call chpl__autoDestroy[1530942] default_arg_offset[1853730])
                label _breakLabel[1854121]
              }
              label _endthese[1854123]
            }
            (1854135 call chpl__autoDestroy[1411481] rhs[1854127])
          }
          (1829592 call chpl_after_forall_fence[13071])
          label _breakLabel[1829593]
        }
        label _endthese[1829595]
      }
      (1829607 call chpl__autoDestroy[1411481] rhs[1829599])
    }
    (1825053 call chpl_after_forall_fence[13071])
    val call_tmp[1406910]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "expr temp" "maybe param" "temp"
    (1406912 'move' call_tmp[1406910](1406915 call _value[1365914] lhs[1406867]))
    val coerce_tmp[1411675]:[domain(1,int(64),false)] real(64)[1358774] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1411680 'move' coerce_tmp[1411675] call_tmp[1406910])
    (1406922 call dsiElementInitializationComplete[1363665] coerce_tmp[1411675])
    (1406925 'move' ret[1406709] lhs[1406867])
    (1821637 call chpl__autoDestroy[1530701] call_tmp[1406843])
    gotoReturn _end_chpl__coerceCopy[1406933] _end_chpl__coerceCopy[1406933]
    label _end_chpl__coerceCopy[1406933]
    (1811656 '=' _retArg[1811654] ret[1406709])
    (1811658 return _void[55])
  }
  function help[1254570](const  ref arg this[1781567]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg x[1781569]:_ref(DefaultRectangularArr(1,int(64),false,locale,int(64)))[1256521]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1254573]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1254575 'move' call_tmp[1254573](1254578 call _value[1252857] this[1781567]))
    val coerce_tmp[1264898]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1264903 'move' coerce_tmp[1264898](1264900 'cast' BaseDom[146767] call_tmp[1254573]))
    val coerce_tmp[1264905]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1781979]:[domain(1,int(64),false)] locale[1256505] "temp"
    (1781982 'move' tmp[1781979](1781980 'deref' x[1781569]))
    (1264911 'move' coerce_tmp[1264905](1264907 'cast' BaseArr[149584] tmp[1781979]))
    (1254585 call add_arr[1264761] coerce_tmp[1264898] coerce_tmp[1264905])
    (1254587 return _void[55])
  }
  function help[1317096](const  ref arg this[1781599]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg x[1781601]:_ref(DefaultRectangularArr(1,int(64),false,unmanaged localesSignal?,int(64)))[1318247]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1317099]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1317101 'move' call_tmp[1317099](1317104 call _value[1252857] this[1781599]))
    val coerce_tmp[1324175]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1324180 'move' coerce_tmp[1324175](1324177 'cast' BaseDom[146767] call_tmp[1317099]))
    val coerce_tmp[1324182]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1781991]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "temp"
    (1781994 'move' tmp[1781991](1781992 'deref' x[1781601]))
    (1324188 'move' coerce_tmp[1324182](1324184 'cast' BaseArr[149584] tmp[1781991]))
    (1317111 call add_arr[1264761] coerce_tmp[1324175] coerce_tmp[1324182])
    (1317113 return _void[55])
  }
  function help[1367559](const  ref arg this[1781631]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg x[1781633]:_ref(DefaultRectangularArr(1,int(64),false,int(64),int(64)))[1368710]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1367562]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1367564 'move' call_tmp[1367562](1367567 call _value[1252857] this[1781631]))
    val coerce_tmp[1373381]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1373386 'move' coerce_tmp[1373381](1373383 'cast' BaseDom[146767] call_tmp[1367562]))
    val coerce_tmp[1373388]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1782003]:[domain(1,int(64),false)] int(64)[1368694] "temp"
    (1782006 'move' tmp[1782003](1782004 'deref' x[1781633]))
    (1373394 'move' coerce_tmp[1373388](1373390 'cast' BaseArr[149584] tmp[1782003]))
    (1367574 call add_arr[1264761] coerce_tmp[1373381] coerce_tmp[1373388])
    (1367576 return _void[55])
  }
  function help[1407657](const  ref arg this[1781665]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642], const  ref arg x[1781667]:_ref(DefaultRectangularArr(1,int(64),false,real(64),int(64)))[1358790]) : void[4] "dont disable remote value forwarding" "resolved" "no return value for void"
  {
    val call_tmp[1407660]:domain(1,int(64),false)[1250953] "dead after last mention" "expr temp" "maybe param" "temp"
    (1407662 'move' call_tmp[1407660](1407665 call _value[1252857] this[1781665]))
    val coerce_tmp[1410202]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1410207 'move' coerce_tmp[1410202](1410204 'cast' BaseDom[146767] call_tmp[1407660]))
    val coerce_tmp[1410209]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1782009]:[domain(1,int(64),false)] real(64)[1358774] "temp"
    (1782012 'move' tmp[1782009](1782010 'deref' x[1781667]))
    (1410215 'move' coerce_tmp[1410209](1410211 'cast' BaseArr[149584] tmp[1782009]))
    (1407672 call add_arr[1264761] coerce_tmp[1410202] coerce_tmp[1410209])
    (1407674 return _void[55])
  }
  function on_fn[1415730](const in arg _instance[1781675]:BaseArr[149584], const in arg deinitElts[1781677]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1415758]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1416436]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1416441 'move' coerce_tmp[1416436] _instance[1781675])
      const-val ret_tmp[1811737]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
      (1415766 call remove[1416323] coerce_tmp[1416436] ret_tmp[1811737])
      (1811740 'move' call_tmp[1415758] ret_tmp[1811737])
      const-val tmp[1415768]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "insert auto destroy" "temp"
      (1415770 'move' tmp[1415768] call_tmp[1415758])
      1
      ref call_tmp[1415778]:_ref(BaseArr)[1208336] "dead at end of block" "maybe param" "temp"
      (1415780 'move' call_tmp[1415778](1418532 '.' tmp[1415768] x0[1418080]))
      val arrToFree[1415785]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1418537]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1418541 'move' coerce_tmp[1418537](1418539 'deref' call_tmp[1415778]))
      (1821670 '=' arrToFree[1415785] coerce_tmp[1418537])
      (1415787 'noop')
      ref call_tmp[1415790]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1415792 'move' call_tmp[1415790](1418546 '.' tmp[1415768] x1[1418082]))
      val domToRemove[1415797]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1418551]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1418555 'move' coerce_tmp[1418551](1418553 'deref' call_tmp[1415790]))
      (1821673 '=' domToRemove[1415797] coerce_tmp[1418551])
      (1415799 'noop')
      val domToFree[1415803]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1418558]:BaseDom[146767] "dead at end of block" "temp"
      (1418561 'move' init_coerce_tmp[1418558](1429458 'cast' BaseDom[146767] nil[44]))
      (1415805 'move' domToFree[1415803] init_coerce_tmp[1418558])
      val distToRemove[1415810]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1418574]:BaseDist[145968] "dead at end of block" "temp"
      (1418577 'move' init_coerce_tmp[1418574](1429462 'cast' BaseDist[145968] nil[44]))
      (1415812 'move' distToRemove[1415810] init_coerce_tmp[1418574])
      val distToFree[1415817]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1418580]:BaseDist[145968] "dead at end of block" "temp"
      (1418583 'move' init_coerce_tmp[1418580](1429466 'cast' BaseDist[145968] nil[44]))
      (1415819 'move' distToFree[1415817] init_coerce_tmp[1418580])
      val domIsPrivatized[1415824]:bool[10] "dead at end of block" "insert auto destroy"
      (1415826 'move' domIsPrivatized[1415824] 0)
      const instanceDom[1415830]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1415832 'move' instanceDom[1415830](1418586 call chpl__initCopy[1418204] domToRemove[1415797]))
      const-val call_tmp[1415836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1418589]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1418594 'move' coerce_tmp[1418589](1418591 'cast' object[22] domToRemove[1415797]))
      (1415838 'move' call_tmp[1415836](1415841 call !=[1485] coerce_tmp[1418589] nil[44]))
      const-val call_tmp[1415844]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1415846 'move' call_tmp[1415844] call_tmp[1415836])
      if call_tmp[1415844]
      {
        const-val tmp[1415853]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1415855]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1415857 'move' tmp[1415855](1415859 'addr of' domToFree[1415803]))
        ref tmp[1415861]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1415863 'move' tmp[1415861](1415865 'addr of' distToRemove[1415810]))
        val call_tmp[1415867]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1415869 'move' call_tmp[1415867] domToRemove[1415797])
        val coerce_tmp[1418945]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1418950 'move' coerce_tmp[1418945] call_tmp[1415867])
        const-val ret_tmp[1804360]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
        (1415880 call remove[146118] coerce_tmp[1418945] ret_tmp[1804360])
        (1804363 'move' tmp[1415853] ret_tmp[1804360])
        { scopeless
        }
        ref call_tmp[1415912]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1415914 'move' call_tmp[1415912](1423387 '.' tmp[1415853] x0[1418874]))
        val coerce_tmp[1423390]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423394 'move' coerce_tmp[1423390](1423392 'deref' call_tmp[1415912]))
        (1415920 call =[1417998] tmp[1415855] coerce_tmp[1423390])
        ref call_tmp[1415923]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1415925 'move' call_tmp[1415923](1423399 '.' tmp[1415853] x1[1418876]))
        val coerce_tmp[1423402]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423406 'move' coerce_tmp[1423402](1423404 'deref' call_tmp[1415923]))
        (1415931 call =[1423188] tmp[1415861] coerce_tmp[1423402])
        (1821676 call chpl__autoDestroy[1698118] tmp[1415853])
        const-val tmp[1415956]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1415974]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1415976]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1415978 'move' call_tmp[1415976] domToRemove[1415797])
        ref call_tmp[1415983]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1423415]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423420 'move' coerce_tmp[1423415] call_tmp[1415976])
        (1415985 'move' call_tmp[1415983](1415988 call pid[801512] coerce_tmp[1423415]))
        const-val call_tmp[1415991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1423423]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423427 'move' coerce_tmp[1423423](1423425 'deref' call_tmp[1415983]))
        (1415993 'move' call_tmp[1415991](1415996 call !=[436050] coerce_tmp[1423423] -1))
        (1415999 'move' tmp[1415974] call_tmp[1415991])
        (1416004 'move' tmp[1415956] tmp[1415974])
        (1416017 call =[435212] domIsPrivatized[1415824] tmp[1415956])
      }
      val distIsPrivatized[1416024]:bool[10] "dead at end of block" "insert auto destroy"
      (1416026 'move' distIsPrivatized[1416024] 0)
      const-val call_tmp[1416031]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1423431]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1423436 'move' coerce_tmp[1423431](1423433 'cast' object[22] distToRemove[1415810]))
      (1416033 'move' call_tmp[1416031](1416036 call !=[1485] coerce_tmp[1423431] nil[44]))
      const-val call_tmp[1416039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1416041 'move' call_tmp[1416039] call_tmp[1416031])
      if call_tmp[1416039]
      {
        val call_tmp[1416048]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1416050 'move' call_tmp[1416048] distToRemove[1415810])
        val call_tmp[1416055]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1423710]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423715 'move' coerce_tmp[1423710] call_tmp[1416048])
        (1416057 'move' call_tmp[1416055](1416063 call remove[145505] coerce_tmp[1423710]))
        (1416065 call =[1423188] distToFree[1415817] call_tmp[1416055])
        const-val tmp[1416089]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1416107]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1416109]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1416111 'move' call_tmp[1416109] distToRemove[1415810])
        ref call_tmp[1416116]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1423792]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423797 'move' coerce_tmp[1423792] call_tmp[1416109])
        (1416118 'move' call_tmp[1416116](1416121 call pid[801324] coerce_tmp[1423792]))
        const-val call_tmp[1416124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1423800]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1423804 'move' coerce_tmp[1423800](1423802 'deref' call_tmp[1416116]))
        (1416126 'move' call_tmp[1416124](1416129 call !=[436050] coerce_tmp[1423800] -1))
        (1416132 'move' tmp[1416107] call_tmp[1416124])
        (1416137 'move' tmp[1416089] tmp[1416107])
        (1416150 call =[435212] distIsPrivatized[1416024] tmp[1416089])
      }
      const-val call_tmp[1416157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1423808]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1423814 'move' coerce_tmp[1423808](1423810 'cast' object[22] arrToFree[1415785]))
      (1416159 'move' call_tmp[1416157](1416162 call !=[1485] coerce_tmp[1423808] nil[44]))
      const-val call_tmp[1416165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1416167 'move' call_tmp[1416165] call_tmp[1416157])
      if call_tmp[1416165]
      {
        (1416182 call _delete_arr[1424135] _instance[1781675] deinitElts[1781677])
      }
      const-val call_tmp[1416188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1425254]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1425259 'move' coerce_tmp[1425254](1425256 'cast' object[22] domToFree[1415803]))
      (1416190 'move' call_tmp[1416188](1416193 call !=[1485] coerce_tmp[1425254] nil[44]))
      const-val call_tmp[1416196]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1416198 'move' call_tmp[1416196] call_tmp[1416188])
      if call_tmp[1416196]
      {
        val call_tmp[1416205]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1416207 'move' call_tmp[1416205](1416210 call postfix![1418597] instanceDom[1415830]))
        (1416213 call _delete_dom[1425263] call_tmp[1416205] domIsPrivatized[1415824])
      }
      const-val call_tmp[1416220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1428353]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1428358 'move' coerce_tmp[1428353](1428355 'cast' object[22] distToFree[1415817]))
      (1416222 'move' call_tmp[1416220](1416225 call !=[1485] coerce_tmp[1428353] nil[44]))
      const-val call_tmp[1416228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1416230 'move' call_tmp[1416228] call_tmp[1416220])
      if call_tmp[1416228]
      {
        val call_tmp[1416237]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1416239 'move' call_tmp[1416237] distToFree[1415817])
        (1416245 call _delete_dist[150617] call_tmp[1416237] distIsPrivatized[1416024])
      }
      (1821681 call chpl__autoDestroy[1697987] tmp[1415768])
    }
    (1416252 return _void[55])
  }
  function on_fn[1425437](const in arg pid[1781687]:int(64)[13], const in arg original[1781689]:object[22]) : void[4] "on" "resolved"
  {
    {
      (1425444 call _freePrivatizedClassHelp[1425762] pid[1781687] original[1781689])
    }
    (1425447 return _void[55])
  }
  function _freePrivatizedClassHelp[1425762](const in arg pid[1425764]:int(64)[13], const in arg original[1425766]:object[22]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1425774]:object[22] "dead at end of block" "maybe param" "temp"
    (1425776 'move' call_tmp[1425774](1425779 call chpl_getPrivatizedCopy[1426028] pid[1425764]))
    val prv[1425782]:object[22] "dead at end of block" "insert auto destroy"
    (1425784 'move' prv[1425782](1426113 call chpl__initCopy[1426115] call_tmp[1425774]))
    const-val call_tmp[1425788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1426134]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1426139 'move' coerce_tmp[1426134] prv[1425782])
    val coerce_tmp[1426141]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1426146 'move' coerce_tmp[1426141] original[1425766])
    (1425790 'move' call_tmp[1425788](1425793 call !=[1485] coerce_tmp[1426134] coerce_tmp[1426141]))
    const-val call_tmp[1425796]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425798 'move' call_tmp[1425796] call_tmp[1425788])
    if call_tmp[1425796]
    {
      (1425806 call chpl__delete[1426149] prv[1425782])
    }
    (1425820 call chpl_clearPrivatizedClass[1425811] pid[1425764])
    {
      const _cobeginCount[1425824]:_EndCount(AtomicT(int(64)),int(64))[945362] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
      (1425826 'move' _cobeginCount[1425824](1425829 call _endCountAlloc[1227937]))
      (1425832 call _upEndCount[1228180] _cobeginCount[1425824] 2)
      val _args_forcobegin_fn[2060730]:_class_localscobegin_fn[2060720] "temp"
      (2060734 'move' _args_forcobegin_fn[2060730](2060732 'stack allocate class' _class_localscobegin_fn[2060720]))
      (2060736 '.=' _args_forcobegin_fn[2060730] _0_pid[2060723] pid[1425764])
      (2060740 '.=' _args_forcobegin_fn[2060730] _1_original[2060725] original[1425766])
      (2060744 '.=' _args_forcobegin_fn[2060730] _2__cobeginCount[2060727] _cobeginCount[1425824])
      val _args_vforcobegin_fn[2060748]:c_void_ptr[149] "temp"
      (2060752 'move' _args_vforcobegin_fn[2060748](2060750 'cast_to_void_star' _args_forcobegin_fn[2060730]))
      val _args_sizecobegin_fn[2060754]:int(64)[13] "temp"
      (2060758 'move' _args_sizecobegin_fn[2060754](2060756 'sizeof_bundle' _class_localscobegin_fn[2060720]))
      ref _taskListcobegin_fn[2060760]:c_void_ptr[149] "temp"
      (2060765 'move' _taskListcobegin_fn[2060760](2060762 '.' _cobeginCount[1425824] taskList[12712]))
      val _taskListNodecobegin_fn[2060767]:int(64)[13] "temp"
      (2060771 'move' _taskListNodecobegin_fn[2060767](2060769 '_wide_get_node' _cobeginCount[1425824]))
      (2060827 call wrapcobegin_fn[2060773] _taskListcobegin_fn[2060760] _taskListNodecobegin_fn[2060767] _args_vforcobegin_fn[2060748] _args_sizecobegin_fn[2060754] _args_forcobegin_fn[2060730])
      {
      }
      val _args_forcobegin_fn[2060943]:_class_localscobegin_fn[2060933] "temp"
      (2060947 'move' _args_forcobegin_fn[2060943](2060945 'stack allocate class' _class_localscobegin_fn[2060933]))
      (2060949 '.=' _args_forcobegin_fn[2060943] _0_pid[2060936] pid[1425764])
      (2060953 '.=' _args_forcobegin_fn[2060943] _1_original[2060938] original[1425766])
      (2060957 '.=' _args_forcobegin_fn[2060943] _2__cobeginCount[2060940] _cobeginCount[1425824])
      val _args_vforcobegin_fn[2060961]:c_void_ptr[149] "temp"
      (2060965 'move' _args_vforcobegin_fn[2060961](2060963 'cast_to_void_star' _args_forcobegin_fn[2060943]))
      val _args_sizecobegin_fn[2060967]:int(64)[13] "temp"
      (2060971 'move' _args_sizecobegin_fn[2060967](2060969 'sizeof_bundle' _class_localscobegin_fn[2060933]))
      ref _taskListcobegin_fn[2060973]:c_void_ptr[149] "temp"
      (2060978 'move' _taskListcobegin_fn[2060973](2060975 '.' _cobeginCount[1425824] taskList[12712]))
      val _taskListNodecobegin_fn[2060980]:int(64)[13] "temp"
      (2060984 'move' _taskListNodecobegin_fn[2060980](2060982 '_wide_get_node' _cobeginCount[1425824]))
      (2061040 call wrapcobegin_fn[2060986] _taskListcobegin_fn[2060973] _taskListNodecobegin_fn[2060980] _args_vforcobegin_fn[2060961] _args_sizecobegin_fn[2060967] _args_forcobegin_fn[2060943])
      {
      }
      val error[1787263]:Error[167984] "error variable" "temp"
      (1787265 'move' error[1787263] nil[44])
      (1426021 call _waitEndCount[1235056] _cobeginCount[1425824] 2 error[1787263])
      val errorExists[2074633]:bool[10] "temp"
      (2074638 'move' errorExists[2074633](2074635 '!=' error[1787263] nil[44]))
      if errorExists[2074633]
      {
        (1787268 call chpl_propagate_error[170518] error[1787263])
      }
      (1821798 call _endCountFree[1233879] _cobeginCount[1425824])
    }
    (1426025 return _void[55])
  }
  function chpl_clearPrivatizedClass[1425811](const in arg pid[1425813]:int(64)[13]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1425816 return _void[55])
  }
  function cobegin_fn[1425841](const in arg pid[1425843]:int(64)[13], const in arg original[1425845]:object[22], const in arg _cobeginCount[1781691]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "resolved"
  {
    ref call_tmp[1425848]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    (1425850 'move' call_tmp[1425848](1425853 call left[808413] chpl_localeTree[155232]))
    ref call_tmp[1425856]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
    (1425858 'move' call_tmp[1425856](1425861 call _instance[782774] call_tmp[1425848]))
    const-val call_tmp[1425864]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1427235]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1427239 'move' coerce_tmp[1427235](1427237 'deref' call_tmp[1425856]))
    val coerce_tmp[1427241]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1427246 'move' coerce_tmp[1427241](1427243 'cast' object[22] coerce_tmp[1427235]))
    (1425866 'move' call_tmp[1425864](1425869 call !=[1485] coerce_tmp[1427241] nil[44]))
    const-val call_tmp[1425872]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425874 'move' call_tmp[1425872] call_tmp[1425864])
    if call_tmp[1425872]
    {
      const-val tmp[1425881]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1425883]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      (1425885 'move' call_tmp[1425883](1425888 call left[808413] chpl_localeTree[155232]))
      const-val call_tmp[1425891]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1427250]:BaseLocale[91204] "dead after last mention" "temp"
      (1427255 'move' _locale_tmp_[1427250](1427252 call _value[89984] call_tmp[1425883]))
      (1425893 'move' call_tmp[1425891](1425895 '_wide_get_locale' _locale_tmp_[1427250]))
      (1425897 'move' tmp[1425881] call_tmp[1425891])
      val isdirect[2060832]:bool[10] "temp"
      (2060837 'move' isdirect[2060832](2060834 call chpl_doDirectExecuteOn[187469] tmp[1425881]))
      if isdirect[2060832]
      {
        (2060841 call on_fn[1425904] pid[1425843] original[1425845])
      }
      {
        val _args_foron_fn[2060859]:_class_localson_fn[2060849] "temp"
        (2060863 'move' _args_foron_fn[2060859](2060861 'stack allocate class' _class_localson_fn[2060849]))
        (2060865 '.=' _args_foron_fn[2060859] _0_tmp[2060852] tmp[1425881])
        (2060869 '.=' _args_foron_fn[2060859] _1_pid[2060854] pid[1425843])
        (2060873 '.=' _args_foron_fn[2060859] _2_original[2060856] original[1425845])
        val _args_vforon_fn[2060877]:c_void_ptr[149] "temp"
        (2060881 'move' _args_vforon_fn[2060877](2060879 'cast_to_void_star' _args_foron_fn[2060859]))
        val _args_sizeon_fn[2060883]:int(64)[13] "temp"
        (2060887 'move' _args_sizeon_fn[2060883](2060885 'sizeof_bundle' _class_localson_fn[2060849]))
        on(2060927 call wrapon_fn[2060889] tmp[1425881] _args_vforon_fn[2060877] _args_sizeon_fn[2060883] _args_foron_fn[2060859])
      }
      {
      }
    }
    (1425922 return _void[55])
  }
  function on_fn[1425904](const in arg pid[1781693]:int(64)[13], const in arg original[1781695]:object[22]) : void[4] "on" "resolved"
  {
    (1425910 call _freePrivatizedClassHelp[1425762] pid[1781693] original[1781695])
    (1425913 return _void[55])
  }
  function cobegin_fn[1425930](const in arg pid[1425932]:int(64)[13], const in arg original[1425934]:object[22], const in arg _cobeginCount[1781697]:_EndCount(AtomicT(int(64)),int(64))[945362]) : void[4] "cobegin or coforall" "resolved"
  {
    ref call_tmp[1425937]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
    (1425939 'move' call_tmp[1425937](1425942 call right[808439] chpl_localeTree[155232]))
    ref call_tmp[1425945]:_ref(BaseLocale)[982442] "dead after last mention" "maybe param" "temp"
    (1425947 'move' call_tmp[1425945](1425950 call _instance[782774] call_tmp[1425937]))
    const-val call_tmp[1425953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1427265]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1427269 'move' coerce_tmp[1427265](1427267 'deref' call_tmp[1425945]))
    val coerce_tmp[1427271]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1427276 'move' coerce_tmp[1427271](1427273 'cast' object[22] coerce_tmp[1427265]))
    (1425955 'move' call_tmp[1425953](1425958 call !=[1485] coerce_tmp[1427271] nil[44]))
    const-val call_tmp[1425961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1425963 'move' call_tmp[1425961] call_tmp[1425953])
    if call_tmp[1425961]
    {
      const-val tmp[1425970]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1425972]:_ref(locale)[948863] "dead after last mention" "maybe param" "temp"
      (1425974 'move' call_tmp[1425972](1425977 call right[808439] chpl_localeTree[155232]))
      const-val call_tmp[1425980]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val _locale_tmp_[1427280]:BaseLocale[91204] "dead after last mention" "temp"
      (1427285 'move' _locale_tmp_[1427280](1427282 call _value[89984] call_tmp[1425972]))
      (1425982 'move' call_tmp[1425980](1425984 '_wide_get_locale' _locale_tmp_[1427280]))
      (1425986 'move' tmp[1425970] call_tmp[1425980])
      val isdirect[2061045]:bool[10] "temp"
      (2061050 'move' isdirect[2061045](2061047 call chpl_doDirectExecuteOn[187469] tmp[1425970]))
      if isdirect[2061045]
      {
        (2061054 call on_fn[1425993] pid[1425932] original[1425934])
      }
      {
        val _args_foron_fn[2061072]:_class_localson_fn[2061062] "temp"
        (2061076 'move' _args_foron_fn[2061072](2061074 'stack allocate class' _class_localson_fn[2061062]))
        (2061078 '.=' _args_foron_fn[2061072] _0_tmp[2061065] tmp[1425970])
        (2061082 '.=' _args_foron_fn[2061072] _1_pid[2061067] pid[1425932])
        (2061086 '.=' _args_foron_fn[2061072] _2_original[2061069] original[1425934])
        val _args_vforon_fn[2061090]:c_void_ptr[149] "temp"
        (2061094 'move' _args_vforon_fn[2061090](2061092 'cast_to_void_star' _args_foron_fn[2061072]))
        val _args_sizeon_fn[2061096]:int(64)[13] "temp"
        (2061100 'move' _args_sizeon_fn[2061096](2061098 'sizeof_bundle' _class_localson_fn[2061062]))
        on(2061140 call wrapon_fn[2061102] tmp[1425970] _args_vforon_fn[2061090] _args_sizeon_fn[2061096] _args_foron_fn[2061072])
      }
      {
      }
    }
    (1426011 return _void[55])
  }
  function on_fn[1425993](const in arg pid[1781699]:int(64)[13], const in arg original[1781701]:object[22]) : void[4] "on" "resolved"
  {
    (1425999 call _freePrivatizedClassHelp[1425762] pid[1781699] original[1781701])
    (1426002 return _void[55])
  }
  function on_fn[1528542](const in arg this[1781779]:DefaultDist[1243915]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1528548]:_ref(DefaultDist)[1208893] "dead at end of block" "maybe param" "temp"
      ref rvfRerefTmp[2049975]:_ref(DefaultDist)[1243932] "temp"
      (2049979 'move' rvfRerefTmp[2049975](2049976 'set reference' this[1781779]))
      (1528550 'move' call_tmp[1528548](1528553 call _instance[1246533] rvfRerefTmp[2049975]))
      val call_tmp[1528556]:BaseDist[145968] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1528672]:DefaultDist[93992] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1528676 'move' coerce_tmp[1528672](1528674 'deref' call_tmp[1528548]))
      val coerce_tmp[1528678]:BaseDist[145968] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1528683 'move' coerce_tmp[1528678](1528680 'cast' BaseDist[145968] coerce_tmp[1528672]))
      (1528558 'move' call_tmp[1528556](1528564 call remove[145505] coerce_tmp[1528678]))
      val distToFree[1528565]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      (1528567 'move' distToFree[1528565](1528686 call chpl__initCopy[1423293] call_tmp[1528556]))
      const-val call_tmp[1528571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1528689]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1528694 'move' coerce_tmp[1528689](1528691 'cast' object[22] distToFree[1528565]))
      (1528573 'move' call_tmp[1528571](1528576 call !=[1485] coerce_tmp[1528689] nil[44]))
      const-val call_tmp[1528579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1528581 'move' call_tmp[1528579] call_tmp[1528571])
      if call_tmp[1528579]
      {
        val call_tmp[1528588]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1528590 'move' call_tmp[1528588] distToFree[1528565])
        ref call_tmp[1528595]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
        ref rvfRerefTmp[2049982]:_ref(DefaultDist)[1243932] "temp"
        (2049986 'move' rvfRerefTmp[2049982](2049983 'set reference' this[1781779]))
        (1528597 'move' call_tmp[1528595](1528600 call _instance[1246533] rvfRerefTmp[2049982]))
        (1528611 call _delete_dist[150617] call_tmp[1528588] 0)
      }
    }
    (1528617 return _void[55])
  }
  function on_fn[1528976](const in arg this[1781781]:domain(1,int(64),false)[1252616]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[1528982]:_ref(domain(1,int(64),false))[1250968] "dead at end of block" "maybe param" "temp"
      ref rvfRerefTmp[2049996]:_ref(_domain(unmanaged domain(1,int(64),false)))[1252642] "temp"
      (2050000 'move' rvfRerefTmp[2049996](2049997 'set reference' this[1781781]))
      (1528984 'move' call_tmp[1528982](1528987 call _instance[1252953] rvfRerefTmp[2049996]))
      const inst[1528990]:domain(1,int(64),false)[1250953] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1529216]:domain(1,int(64),false)[1250953] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1529220 'move' coerce_tmp[1529216](1529218 'deref' call_tmp[1528982]))
      (1822308 '=' inst[1528990] coerce_tmp[1529216])
      (1528992 'noop')
      const-val call_tmp[1528996]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1529223]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1529228 'move' coerce_tmp[1529223](1529225 'cast' BaseDom[146767] inst[1528990]))
      const-val ret_tmp[1804366]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
      (1529004 call remove[146118] coerce_tmp[1529223] ret_tmp[1804366])
      (1804369 'move' call_tmp[1528996] ret_tmp[1804366])
      const-val tmp[1529005]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead at end of block" "insert auto destroy" "temp"
      (1529007 'move' tmp[1529005] call_tmp[1528996])
      1
      ref call_tmp[1529015]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1529017 'move' call_tmp[1529015](1529482 '.' tmp[1529005] x0[1418874]))
      val domToFree[1529022]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1529487]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1529491 'move' coerce_tmp[1529487](1529489 'deref' call_tmp[1529015]))
      (1822311 '=' domToFree[1529022] coerce_tmp[1529487])
      (1529024 'noop')
      ref call_tmp[1529027]:_ref(BaseDist)[1208870] "dead at end of block" "maybe param" "temp"
      (1529029 'move' call_tmp[1529027](1529496 '.' tmp[1529005] x1[1418876]))
      val distToRemove[1529034]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1529501]:BaseDist[145968] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1529505 'move' coerce_tmp[1529501](1529503 'deref' call_tmp[1529027]))
      (1822314 '=' distToRemove[1529034] coerce_tmp[1529501])
      (1529036 'noop')
      val distToFree[1529040]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1529508]:BaseDist[145968] "dead at end of block" "temp"
      (1529511 'move' init_coerce_tmp[1529508](1530691 'cast' BaseDist[145968] nil[44]))
      (1529042 'move' distToFree[1529040] init_coerce_tmp[1529508])
      const-val call_tmp[1529047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1529514]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1529519 'move' coerce_tmp[1529514](1529516 'cast' object[22] distToRemove[1529034]))
      (1529049 'move' call_tmp[1529047](1529052 call !=[1485] coerce_tmp[1529514] nil[44]))
      const-val call_tmp[1529055]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529057 'move' call_tmp[1529055] call_tmp[1529047])
      if call_tmp[1529055]
      {
        val call_tmp[1529064]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1529066 'move' call_tmp[1529064] distToRemove[1529034])
        val call_tmp[1529071]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1529523]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1529528 'move' coerce_tmp[1529523] call_tmp[1529064])
        (1529073 'move' call_tmp[1529071](1529079 call remove[145505] coerce_tmp[1529523]))
        (1529081 call =[1423188] distToFree[1529040] call_tmp[1529071])
      }
      const-val call_tmp[1529088]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1529532]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1529537 'move' coerce_tmp[1529532](1529534 'cast' object[22] domToFree[1529022]))
      (1529090 'move' call_tmp[1529088](1529093 call !=[1485] coerce_tmp[1529532] nil[44]))
      const-val call_tmp[1529096]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529098 'move' call_tmp[1529096] call_tmp[1529088])
      if call_tmp[1529096]
      {
        (1529113 call _delete_dom[1529542] inst[1528990] 0)
      }
      const-val call_tmp[1529120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1530671]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1530676 'move' coerce_tmp[1530671](1530673 'cast' object[22] distToFree[1529040]))
      (1529122 'move' call_tmp[1529120](1529125 call !=[1485] coerce_tmp[1530671] nil[44]))
      const-val call_tmp[1529128]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1529130 'move' call_tmp[1529128] call_tmp[1529120])
      if call_tmp[1529128]
      {
        val call_tmp[1529137]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1529139 'move' call_tmp[1529137] distToFree[1529040])
        ref call_tmp[1529144]:_ref(DefaultDist)[1208893] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1530680]:domain(1,int(64),false)[1250953] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1530685 'move' coerce_tmp[1530680] inst[1528990])
        (1529146 'move' call_tmp[1529144](1529149 call dist[1287519] coerce_tmp[1530680]))
        (1529160 call _delete_dist[150617] call_tmp[1529137] 0)
      }
      (1822318 call chpl__autoDestroy[1698118] tmp[1529005])
    }
    (1529167 return _void[55])
  }
  function on_fn[1601948](const in arg _instance[1781815]:[domain(1,int(64),false)] locale[1256505], const in arg deinitElts[1781817]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1601976]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1602517]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1602522 'move' coerce_tmp[1602517](1602519 'cast' BaseArr[149584] _instance[1781815]))
      const-val ret_tmp[1811743]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
      (1601984 call remove[1416323] coerce_tmp[1602517] ret_tmp[1811743])
      (1811746 'move' call_tmp[1601976] ret_tmp[1811743])
      const-val tmp[1601986]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "insert auto destroy" "temp"
      (1601988 'move' tmp[1601986] call_tmp[1601976])
      1
      ref call_tmp[1601996]:_ref(BaseArr)[1208336] "dead at end of block" "maybe param" "temp"
      (1601998 'move' call_tmp[1601996](1602532 '.' tmp[1601986] x0[1418080]))
      val arrToFree[1602003]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1602537]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1602541 'move' coerce_tmp[1602537](1602539 'deref' call_tmp[1601996]))
      (1822919 '=' arrToFree[1602003] coerce_tmp[1602537])
      (1602005 'noop')
      ref call_tmp[1602008]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1602010 'move' call_tmp[1602008](1602546 '.' tmp[1601986] x1[1418082]))
      val domToRemove[1602015]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1602551]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1602555 'move' coerce_tmp[1602551](1602553 'deref' call_tmp[1602008]))
      (1822922 '=' domToRemove[1602015] coerce_tmp[1602551])
      (1602017 'noop')
      val domToFree[1602021]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1602558]:BaseDom[146767] "dead at end of block" "temp"
      (1602561 'move' init_coerce_tmp[1602558](1602728 'cast' BaseDom[146767] nil[44]))
      (1602023 'move' domToFree[1602021] init_coerce_tmp[1602558])
      val distToRemove[1602028]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1602564]:BaseDist[145968] "dead at end of block" "temp"
      (1602567 'move' init_coerce_tmp[1602564](1602732 'cast' BaseDist[145968] nil[44]))
      (1602030 'move' distToRemove[1602028] init_coerce_tmp[1602564])
      val distToFree[1602035]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1602570]:BaseDist[145968] "dead at end of block" "temp"
      (1602573 'move' init_coerce_tmp[1602570](1602736 'cast' BaseDist[145968] nil[44]))
      (1602037 'move' distToFree[1602035] init_coerce_tmp[1602570])
      val domIsPrivatized[1602042]:bool[10] "dead at end of block" "insert auto destroy"
      (1602044 'move' domIsPrivatized[1602042] 0)
      const instanceDom[1602048]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1602050 'move' instanceDom[1602048](1602576 call chpl__initCopy[1418204] domToRemove[1602015]))
      const-val call_tmp[1602054]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1602579]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1602584 'move' coerce_tmp[1602579](1602581 'cast' object[22] domToRemove[1602015]))
      (1602056 'move' call_tmp[1602054](1602059 call !=[1485] coerce_tmp[1602579] nil[44]))
      const-val call_tmp[1602062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1602064 'move' call_tmp[1602062] call_tmp[1602054])
      if call_tmp[1602062]
      {
        const-val tmp[1602071]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1602073]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1602075 'move' tmp[1602073](1602077 'addr of' domToFree[1602021]))
        ref tmp[1602079]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1602081 'move' tmp[1602079](1602083 'addr of' distToRemove[1602028]))
        val call_tmp[1602085]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602087 'move' call_tmp[1602085] domToRemove[1602015])
        val coerce_tmp[1602588]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602593 'move' coerce_tmp[1602588] call_tmp[1602085])
        const-val ret_tmp[1804372]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
        (1602098 call remove[146118] coerce_tmp[1602588] ret_tmp[1804372])
        (1804375 'move' tmp[1602071] ret_tmp[1804372])
        { scopeless
        }
        ref call_tmp[1602130]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1602132 'move' call_tmp[1602130](1602604 '.' tmp[1602071] x0[1418874]))
        val coerce_tmp[1602607]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602611 'move' coerce_tmp[1602607](1602609 'deref' call_tmp[1602130]))
        (1602138 call =[1417998] tmp[1602073] coerce_tmp[1602607])
        ref call_tmp[1602141]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1602143 'move' call_tmp[1602141](1602616 '.' tmp[1602071] x1[1418876]))
        val coerce_tmp[1602619]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602623 'move' coerce_tmp[1602619](1602621 'deref' call_tmp[1602141]))
        (1602149 call =[1423188] tmp[1602079] coerce_tmp[1602619])
        (1822925 call chpl__autoDestroy[1698118] tmp[1602071])
        const-val tmp[1602174]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1602192]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1602194]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602196 'move' call_tmp[1602194] domToRemove[1602015])
        ref call_tmp[1602201]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1602632]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602637 'move' coerce_tmp[1602632] call_tmp[1602194])
        (1602203 'move' call_tmp[1602201](1602206 call pid[801512] coerce_tmp[1602632]))
        const-val call_tmp[1602209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1602640]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602644 'move' coerce_tmp[1602640](1602642 'deref' call_tmp[1602201]))
        (1602211 'move' call_tmp[1602209](1602214 call !=[436050] coerce_tmp[1602640] -1))
        (1602217 'move' tmp[1602192] call_tmp[1602209])
        (1602222 'move' tmp[1602174] tmp[1602192])
        (1602235 call =[435212] domIsPrivatized[1602042] tmp[1602174])
      }
      val distIsPrivatized[1602242]:bool[10] "dead at end of block" "insert auto destroy"
      (1602244 'move' distIsPrivatized[1602242] 0)
      const-val call_tmp[1602249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1602648]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1602653 'move' coerce_tmp[1602648](1602650 'cast' object[22] distToRemove[1602028]))
      (1602251 'move' call_tmp[1602249](1602254 call !=[1485] coerce_tmp[1602648] nil[44]))
      const-val call_tmp[1602257]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1602259 'move' call_tmp[1602257] call_tmp[1602249])
      if call_tmp[1602257]
      {
        val call_tmp[1602266]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602268 'move' call_tmp[1602266] distToRemove[1602028])
        val call_tmp[1602273]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1602657]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602662 'move' coerce_tmp[1602657] call_tmp[1602266])
        (1602275 'move' call_tmp[1602273](1602281 call remove[145505] coerce_tmp[1602657]))
        (1602283 call =[1423188] distToFree[1602035] call_tmp[1602273])
        const-val tmp[1602307]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1602325]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1602327]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602329 'move' call_tmp[1602327] distToRemove[1602028])
        ref call_tmp[1602334]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1602672]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602677 'move' coerce_tmp[1602672] call_tmp[1602327])
        (1602336 'move' call_tmp[1602334](1602339 call pid[801324] coerce_tmp[1602672]))
        const-val call_tmp[1602342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1602680]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602684 'move' coerce_tmp[1602680](1602682 'deref' call_tmp[1602334]))
        (1602344 'move' call_tmp[1602342](1602347 call !=[436050] coerce_tmp[1602680] -1))
        (1602350 'move' tmp[1602325] call_tmp[1602342])
        (1602355 'move' tmp[1602307] tmp[1602325])
        (1602368 call =[435212] distIsPrivatized[1602242] tmp[1602307])
      }
      const-val call_tmp[1602375]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1602688]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1602694 'move' coerce_tmp[1602688](1602690 'cast' object[22] arrToFree[1602003]))
      (1602377 'move' call_tmp[1602375](1602380 call !=[1485] coerce_tmp[1602688] nil[44]))
      const-val call_tmp[1602383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1602385 'move' call_tmp[1602383] call_tmp[1602375])
      if call_tmp[1602383]
      {
        val coerce_tmp[1602699]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1602705 'move' coerce_tmp[1602699](1602701 'cast' BaseArr[149584] _instance[1781815]))
        (1602400 call _delete_arr[1424135] coerce_tmp[1602699] deinitElts[1781817])
      }
      const-val call_tmp[1602406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1602708]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1602713 'move' coerce_tmp[1602708](1602710 'cast' object[22] domToFree[1602021]))
      (1602408 'move' call_tmp[1602406](1602411 call !=[1485] coerce_tmp[1602708] nil[44]))
      const-val call_tmp[1602414]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1602416 'move' call_tmp[1602414] call_tmp[1602406])
      if call_tmp[1602414]
      {
        val call_tmp[1602423]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602425 'move' call_tmp[1602423](1602428 call postfix![1418597] instanceDom[1602048]))
        (1602431 call _delete_dom[1425263] call_tmp[1602423] domIsPrivatized[1602042])
      }
      const-val call_tmp[1602438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1602718]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1602723 'move' coerce_tmp[1602718](1602720 'cast' object[22] distToFree[1602035]))
      (1602440 'move' call_tmp[1602438](1602443 call !=[1485] coerce_tmp[1602718] nil[44]))
      const-val call_tmp[1602446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1602448 'move' call_tmp[1602446] call_tmp[1602438])
      if call_tmp[1602446]
      {
        val call_tmp[1602455]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1602457 'move' call_tmp[1602455] distToFree[1602035])
        (1602463 call _delete_dist[150617] call_tmp[1602455] distIsPrivatized[1602242])
      }
      (1822930 call chpl__autoDestroy[1697987] tmp[1601986])
    }
    (1602470 return _void[55])
  }
  function on_fn[1631033](const in arg _instance[1781837]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231], const in arg deinitElts[1781839]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1631061]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1631602]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1631607 'move' coerce_tmp[1631602](1631604 'cast' BaseArr[149584] _instance[1781837]))
      const-val ret_tmp[1811749]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
      (1631069 call remove[1416323] coerce_tmp[1631602] ret_tmp[1811749])
      (1811752 'move' call_tmp[1631061] ret_tmp[1811749])
      const-val tmp[1631071]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "insert auto destroy" "temp"
      (1631073 'move' tmp[1631071] call_tmp[1631061])
      1
      ref call_tmp[1631081]:_ref(BaseArr)[1208336] "dead at end of block" "maybe param" "temp"
      (1631083 'move' call_tmp[1631081](1631617 '.' tmp[1631071] x0[1418080]))
      val arrToFree[1631088]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1631622]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1631626 'move' coerce_tmp[1631622](1631624 'deref' call_tmp[1631081]))
      (1823256 '=' arrToFree[1631088] coerce_tmp[1631622])
      (1631090 'noop')
      ref call_tmp[1631093]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1631095 'move' call_tmp[1631093](1631631 '.' tmp[1631071] x1[1418082]))
      val domToRemove[1631100]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1631636]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1631640 'move' coerce_tmp[1631636](1631638 'deref' call_tmp[1631093]))
      (1823259 '=' domToRemove[1631100] coerce_tmp[1631636])
      (1631102 'noop')
      val domToFree[1631106]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1631643]:BaseDom[146767] "dead at end of block" "temp"
      (1631646 'move' init_coerce_tmp[1631643](1631813 'cast' BaseDom[146767] nil[44]))
      (1631108 'move' domToFree[1631106] init_coerce_tmp[1631643])
      val distToRemove[1631113]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1631649]:BaseDist[145968] "dead at end of block" "temp"
      (1631652 'move' init_coerce_tmp[1631649](1631817 'cast' BaseDist[145968] nil[44]))
      (1631115 'move' distToRemove[1631113] init_coerce_tmp[1631649])
      val distToFree[1631120]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1631655]:BaseDist[145968] "dead at end of block" "temp"
      (1631658 'move' init_coerce_tmp[1631655](1631821 'cast' BaseDist[145968] nil[44]))
      (1631122 'move' distToFree[1631120] init_coerce_tmp[1631655])
      val domIsPrivatized[1631127]:bool[10] "dead at end of block" "insert auto destroy"
      (1631129 'move' domIsPrivatized[1631127] 0)
      const instanceDom[1631133]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1631135 'move' instanceDom[1631133](1631661 call chpl__initCopy[1418204] domToRemove[1631100]))
      const-val call_tmp[1631139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1631664]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1631669 'move' coerce_tmp[1631664](1631666 'cast' object[22] domToRemove[1631100]))
      (1631141 'move' call_tmp[1631139](1631144 call !=[1485] coerce_tmp[1631664] nil[44]))
      const-val call_tmp[1631147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631149 'move' call_tmp[1631147] call_tmp[1631139])
      if call_tmp[1631147]
      {
        const-val tmp[1631156]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1631158]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1631160 'move' tmp[1631158](1631162 'addr of' domToFree[1631106]))
        ref tmp[1631164]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1631166 'move' tmp[1631164](1631168 'addr of' distToRemove[1631113]))
        val call_tmp[1631170]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631172 'move' call_tmp[1631170] domToRemove[1631100])
        val coerce_tmp[1631673]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631678 'move' coerce_tmp[1631673] call_tmp[1631170])
        const-val ret_tmp[1804378]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
        (1631183 call remove[146118] coerce_tmp[1631673] ret_tmp[1804378])
        (1804381 'move' tmp[1631156] ret_tmp[1804378])
        { scopeless
        }
        ref call_tmp[1631215]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1631217 'move' call_tmp[1631215](1631689 '.' tmp[1631156] x0[1418874]))
        val coerce_tmp[1631692]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631696 'move' coerce_tmp[1631692](1631694 'deref' call_tmp[1631215]))
        (1631223 call =[1417998] tmp[1631158] coerce_tmp[1631692])
        ref call_tmp[1631226]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1631228 'move' call_tmp[1631226](1631701 '.' tmp[1631156] x1[1418876]))
        val coerce_tmp[1631704]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631708 'move' coerce_tmp[1631704](1631706 'deref' call_tmp[1631226]))
        (1631234 call =[1423188] tmp[1631164] coerce_tmp[1631704])
        (1823262 call chpl__autoDestroy[1698118] tmp[1631156])
        const-val tmp[1631259]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1631277]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1631279]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631281 'move' call_tmp[1631279] domToRemove[1631100])
        ref call_tmp[1631286]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1631717]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631722 'move' coerce_tmp[1631717] call_tmp[1631279])
        (1631288 'move' call_tmp[1631286](1631291 call pid[801512] coerce_tmp[1631717]))
        const-val call_tmp[1631294]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1631725]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631729 'move' coerce_tmp[1631725](1631727 'deref' call_tmp[1631286]))
        (1631296 'move' call_tmp[1631294](1631299 call !=[436050] coerce_tmp[1631725] -1))
        (1631302 'move' tmp[1631277] call_tmp[1631294])
        (1631307 'move' tmp[1631259] tmp[1631277])
        (1631320 call =[435212] domIsPrivatized[1631127] tmp[1631259])
      }
      val distIsPrivatized[1631327]:bool[10] "dead at end of block" "insert auto destroy"
      (1631329 'move' distIsPrivatized[1631327] 0)
      const-val call_tmp[1631334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1631733]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1631738 'move' coerce_tmp[1631733](1631735 'cast' object[22] distToRemove[1631113]))
      (1631336 'move' call_tmp[1631334](1631339 call !=[1485] coerce_tmp[1631733] nil[44]))
      const-val call_tmp[1631342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631344 'move' call_tmp[1631342] call_tmp[1631334])
      if call_tmp[1631342]
      {
        val call_tmp[1631351]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631353 'move' call_tmp[1631351] distToRemove[1631113])
        val call_tmp[1631358]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1631742]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631747 'move' coerce_tmp[1631742] call_tmp[1631351])
        (1631360 'move' call_tmp[1631358](1631366 call remove[145505] coerce_tmp[1631742]))
        (1631368 call =[1423188] distToFree[1631120] call_tmp[1631358])
        const-val tmp[1631392]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1631410]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1631412]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631414 'move' call_tmp[1631412] distToRemove[1631113])
        ref call_tmp[1631419]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1631757]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631762 'move' coerce_tmp[1631757] call_tmp[1631412])
        (1631421 'move' call_tmp[1631419](1631424 call pid[801324] coerce_tmp[1631757]))
        const-val call_tmp[1631427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1631765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631769 'move' coerce_tmp[1631765](1631767 'deref' call_tmp[1631419]))
        (1631429 'move' call_tmp[1631427](1631432 call !=[436050] coerce_tmp[1631765] -1))
        (1631435 'move' tmp[1631410] call_tmp[1631427])
        (1631440 'move' tmp[1631392] tmp[1631410])
        (1631453 call =[435212] distIsPrivatized[1631327] tmp[1631392])
      }
      const-val call_tmp[1631460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1631773]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1631779 'move' coerce_tmp[1631773](1631775 'cast' object[22] arrToFree[1631088]))
      (1631462 'move' call_tmp[1631460](1631465 call !=[1485] coerce_tmp[1631773] nil[44]))
      const-val call_tmp[1631468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631470 'move' call_tmp[1631468] call_tmp[1631460])
      if call_tmp[1631468]
      {
        val coerce_tmp[1631784]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1631790 'move' coerce_tmp[1631784](1631786 'cast' BaseArr[149584] _instance[1781837]))
        (1631485 call _delete_arr[1424135] coerce_tmp[1631784] deinitElts[1781839])
      }
      const-val call_tmp[1631491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1631793]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1631798 'move' coerce_tmp[1631793](1631795 'cast' object[22] domToFree[1631106]))
      (1631493 'move' call_tmp[1631491](1631496 call !=[1485] coerce_tmp[1631793] nil[44]))
      const-val call_tmp[1631499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631501 'move' call_tmp[1631499] call_tmp[1631491])
      if call_tmp[1631499]
      {
        val call_tmp[1631508]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631510 'move' call_tmp[1631508](1631513 call postfix![1418597] instanceDom[1631133]))
        (1631516 call _delete_dom[1425263] call_tmp[1631508] domIsPrivatized[1631127])
      }
      const-val call_tmp[1631523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1631803]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1631808 'move' coerce_tmp[1631803](1631805 'cast' object[22] distToFree[1631120]))
      (1631525 'move' call_tmp[1631523](1631528 call !=[1485] coerce_tmp[1631803] nil[44]))
      const-val call_tmp[1631531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1631533 'move' call_tmp[1631531] call_tmp[1631523])
      if call_tmp[1631531]
      {
        val call_tmp[1631540]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1631542 'move' call_tmp[1631540] distToFree[1631120])
        (1631548 call _delete_dist[150617] call_tmp[1631540] distIsPrivatized[1631327])
      }
      (1823267 call chpl__autoDestroy[1697987] tmp[1631071])
    }
    (1631555 return _void[55])
  }
  function on_fn[1660834](const in arg _instance[1781855]:[domain(1,int(64),false)] real(64)[1358774], const in arg deinitElts[1781857]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1660862]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1661403]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1661408 'move' coerce_tmp[1661403](1661405 'cast' BaseArr[149584] _instance[1781855]))
      const-val ret_tmp[1811755]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
      (1660870 call remove[1416323] coerce_tmp[1661403] ret_tmp[1811755])
      (1811758 'move' call_tmp[1660862] ret_tmp[1811755])
      const-val tmp[1660872]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "insert auto destroy" "temp"
      (1660874 'move' tmp[1660872] call_tmp[1660862])
      1
      ref call_tmp[1660882]:_ref(BaseArr)[1208336] "dead at end of block" "maybe param" "temp"
      (1660884 'move' call_tmp[1660882](1661418 '.' tmp[1660872] x0[1418080]))
      val arrToFree[1660889]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1661423]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1661427 'move' coerce_tmp[1661423](1661425 'deref' call_tmp[1660882]))
      (1823643 '=' arrToFree[1660889] coerce_tmp[1661423])
      (1660891 'noop')
      ref call_tmp[1660894]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1660896 'move' call_tmp[1660894](1661432 '.' tmp[1660872] x1[1418082]))
      val domToRemove[1660901]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1661437]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1661441 'move' coerce_tmp[1661437](1661439 'deref' call_tmp[1660894]))
      (1823646 '=' domToRemove[1660901] coerce_tmp[1661437])
      (1660903 'noop')
      val domToFree[1660907]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1661444]:BaseDom[146767] "dead at end of block" "temp"
      (1661447 'move' init_coerce_tmp[1661444](1661614 'cast' BaseDom[146767] nil[44]))
      (1660909 'move' domToFree[1660907] init_coerce_tmp[1661444])
      val distToRemove[1660914]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1661450]:BaseDist[145968] "dead at end of block" "temp"
      (1661453 'move' init_coerce_tmp[1661450](1661618 'cast' BaseDist[145968] nil[44]))
      (1660916 'move' distToRemove[1660914] init_coerce_tmp[1661450])
      val distToFree[1660921]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1661456]:BaseDist[145968] "dead at end of block" "temp"
      (1661459 'move' init_coerce_tmp[1661456](1661622 'cast' BaseDist[145968] nil[44]))
      (1660923 'move' distToFree[1660921] init_coerce_tmp[1661456])
      val domIsPrivatized[1660928]:bool[10] "dead at end of block" "insert auto destroy"
      (1660930 'move' domIsPrivatized[1660928] 0)
      const instanceDom[1660934]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1660936 'move' instanceDom[1660934](1661462 call chpl__initCopy[1418204] domToRemove[1660901]))
      const-val call_tmp[1660940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1661465]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1661470 'move' coerce_tmp[1661465](1661467 'cast' object[22] domToRemove[1660901]))
      (1660942 'move' call_tmp[1660940](1660945 call !=[1485] coerce_tmp[1661465] nil[44]))
      const-val call_tmp[1660948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1660950 'move' call_tmp[1660948] call_tmp[1660940])
      if call_tmp[1660948]
      {
        const-val tmp[1660957]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1660959]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1660961 'move' tmp[1660959](1660963 'addr of' domToFree[1660907]))
        ref tmp[1660965]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1660967 'move' tmp[1660965](1660969 'addr of' distToRemove[1660914]))
        val call_tmp[1660971]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1660973 'move' call_tmp[1660971] domToRemove[1660901])
        val coerce_tmp[1661474]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661479 'move' coerce_tmp[1661474] call_tmp[1660971])
        const-val ret_tmp[1804384]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
        (1660984 call remove[146118] coerce_tmp[1661474] ret_tmp[1804384])
        (1804387 'move' tmp[1660957] ret_tmp[1804384])
        { scopeless
        }
        ref call_tmp[1661016]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1661018 'move' call_tmp[1661016](1661490 '.' tmp[1660957] x0[1418874]))
        val coerce_tmp[1661493]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661497 'move' coerce_tmp[1661493](1661495 'deref' call_tmp[1661016]))
        (1661024 call =[1417998] tmp[1660959] coerce_tmp[1661493])
        ref call_tmp[1661027]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1661029 'move' call_tmp[1661027](1661502 '.' tmp[1660957] x1[1418876]))
        val coerce_tmp[1661505]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661509 'move' coerce_tmp[1661505](1661507 'deref' call_tmp[1661027]))
        (1661035 call =[1423188] tmp[1660965] coerce_tmp[1661505])
        (1823649 call chpl__autoDestroy[1698118] tmp[1660957])
        const-val tmp[1661060]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1661078]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1661080]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1661082 'move' call_tmp[1661080] domToRemove[1660901])
        ref call_tmp[1661087]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1661518]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661523 'move' coerce_tmp[1661518] call_tmp[1661080])
        (1661089 'move' call_tmp[1661087](1661092 call pid[801512] coerce_tmp[1661518]))
        const-val call_tmp[1661095]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1661526]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661530 'move' coerce_tmp[1661526](1661528 'deref' call_tmp[1661087]))
        (1661097 'move' call_tmp[1661095](1661100 call !=[436050] coerce_tmp[1661526] -1))
        (1661103 'move' tmp[1661078] call_tmp[1661095])
        (1661108 'move' tmp[1661060] tmp[1661078])
        (1661121 call =[435212] domIsPrivatized[1660928] tmp[1661060])
      }
      val distIsPrivatized[1661128]:bool[10] "dead at end of block" "insert auto destroy"
      (1661130 'move' distIsPrivatized[1661128] 0)
      const-val call_tmp[1661135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1661534]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1661539 'move' coerce_tmp[1661534](1661536 'cast' object[22] distToRemove[1660914]))
      (1661137 'move' call_tmp[1661135](1661140 call !=[1485] coerce_tmp[1661534] nil[44]))
      const-val call_tmp[1661143]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1661145 'move' call_tmp[1661143] call_tmp[1661135])
      if call_tmp[1661143]
      {
        val call_tmp[1661152]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1661154 'move' call_tmp[1661152] distToRemove[1660914])
        val call_tmp[1661159]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1661543]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661548 'move' coerce_tmp[1661543] call_tmp[1661152])
        (1661161 'move' call_tmp[1661159](1661167 call remove[145505] coerce_tmp[1661543]))
        (1661169 call =[1423188] distToFree[1660921] call_tmp[1661159])
        const-val tmp[1661193]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1661211]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1661213]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1661215 'move' call_tmp[1661213] distToRemove[1660914])
        ref call_tmp[1661220]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1661558]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661563 'move' coerce_tmp[1661558] call_tmp[1661213])
        (1661222 'move' call_tmp[1661220](1661225 call pid[801324] coerce_tmp[1661558]))
        const-val call_tmp[1661228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1661566]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661570 'move' coerce_tmp[1661566](1661568 'deref' call_tmp[1661220]))
        (1661230 'move' call_tmp[1661228](1661233 call !=[436050] coerce_tmp[1661566] -1))
        (1661236 'move' tmp[1661211] call_tmp[1661228])
        (1661241 'move' tmp[1661193] tmp[1661211])
        (1661254 call =[435212] distIsPrivatized[1661128] tmp[1661193])
      }
      const-val call_tmp[1661261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1661574]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1661580 'move' coerce_tmp[1661574](1661576 'cast' object[22] arrToFree[1660889]))
      (1661263 'move' call_tmp[1661261](1661266 call !=[1485] coerce_tmp[1661574] nil[44]))
      const-val call_tmp[1661269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1661271 'move' call_tmp[1661269] call_tmp[1661261])
      if call_tmp[1661269]
      {
        val coerce_tmp[1661585]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1661591 'move' coerce_tmp[1661585](1661587 'cast' BaseArr[149584] _instance[1781855]))
        (1661286 call _delete_arr[1424135] coerce_tmp[1661585] deinitElts[1781857])
      }
      const-val call_tmp[1661292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1661594]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1661599 'move' coerce_tmp[1661594](1661596 'cast' object[22] domToFree[1660907]))
      (1661294 'move' call_tmp[1661292](1661297 call !=[1485] coerce_tmp[1661594] nil[44]))
      const-val call_tmp[1661300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1661302 'move' call_tmp[1661300] call_tmp[1661292])
      if call_tmp[1661300]
      {
        val call_tmp[1661309]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1661311 'move' call_tmp[1661309](1661314 call postfix![1418597] instanceDom[1660934]))
        (1661317 call _delete_dom[1425263] call_tmp[1661309] domIsPrivatized[1660928])
      }
      const-val call_tmp[1661324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1661604]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1661609 'move' coerce_tmp[1661604](1661606 'cast' object[22] distToFree[1660921]))
      (1661326 'move' call_tmp[1661324](1661329 call !=[1485] coerce_tmp[1661604] nil[44]))
      const-val call_tmp[1661332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1661334 'move' call_tmp[1661332] call_tmp[1661324])
      if call_tmp[1661332]
      {
        val call_tmp[1661341]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1661343 'move' call_tmp[1661341] distToFree[1660921])
        (1661349 call _delete_dist[150617] call_tmp[1661341] distIsPrivatized[1661128])
      }
      (1823654 call chpl__autoDestroy[1697987] tmp[1660872])
    }
    (1661356 return _void[55])
  }
  function on_fn[1693473](const in arg _instance[1781877]:[domain(1,int(64),false)] int(64)[1368694], const in arg deinitElts[1781879]:bool[10]) : void[4] "on" "resolved"
  {
    {
      const-val call_tmp[1693501]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1694042]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1694047 'move' coerce_tmp[1694042](1694044 'cast' BaseArr[149584] _instance[1781877]))
      const-val ret_tmp[1811761]:(BaseArr,unmanaged BaseDom?)[1418084] "temp"
      (1693509 call remove[1416323] coerce_tmp[1694042] ret_tmp[1811761])
      (1811764 'move' call_tmp[1693501] ret_tmp[1811761])
      const-val tmp[1693511]:(BaseArr,unmanaged BaseDom?)[1418084] "dead at end of block" "insert auto destroy" "temp"
      (1693513 'move' tmp[1693511] call_tmp[1693501])
      1
      ref call_tmp[1693521]:_ref(BaseArr)[1208336] "dead at end of block" "maybe param" "temp"
      (1693523 'move' call_tmp[1693521](1694057 '.' tmp[1693511] x0[1418080]))
      val arrToFree[1693528]:BaseArr[149584] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1694062]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1694066 'move' coerce_tmp[1694062](1694064 'deref' call_tmp[1693521]))
      (1824025 '=' arrToFree[1693528] coerce_tmp[1694062])
      (1693530 'noop')
      ref call_tmp[1693533]:_ref(BaseDom)[1208636] "dead at end of block" "maybe param" "temp"
      (1693535 'move' call_tmp[1693533](1694071 '.' tmp[1693511] x1[1418082]))
      val domToRemove[1693540]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val coerce_tmp[1694076]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1694080 'move' coerce_tmp[1694076](1694078 'deref' call_tmp[1693533]))
      (1824028 '=' domToRemove[1693540] coerce_tmp[1694076])
      (1693542 'noop')
      val domToFree[1693546]:BaseDom[146767] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1694083]:BaseDom[146767] "dead at end of block" "temp"
      (1694086 'move' init_coerce_tmp[1694083](1694253 'cast' BaseDom[146767] nil[44]))
      (1693548 'move' domToFree[1693546] init_coerce_tmp[1694083])
      val distToRemove[1693553]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1694089]:BaseDist[145968] "dead at end of block" "temp"
      (1694092 'move' init_coerce_tmp[1694089](1694257 'cast' BaseDist[145968] nil[44]))
      (1693555 'move' distToRemove[1693553] init_coerce_tmp[1694089])
      val distToFree[1693560]:BaseDist[145968] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1694095]:BaseDist[145968] "dead at end of block" "temp"
      (1694098 'move' init_coerce_tmp[1694095](1694261 'cast' BaseDist[145968] nil[44]))
      (1693562 'move' distToFree[1693560] init_coerce_tmp[1694095])
      val domIsPrivatized[1693567]:bool[10] "dead at end of block" "insert auto destroy"
      (1693569 'move' domIsPrivatized[1693567] 0)
      const instanceDom[1693573]:BaseDom[146767] "dead at end of block" "const" "insert auto destroy"
      (1693575 'move' instanceDom[1693573](1694101 call chpl__initCopy[1418204] domToRemove[1693540]))
      const-val call_tmp[1693579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1694104]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1694109 'move' coerce_tmp[1694104](1694106 'cast' object[22] domToRemove[1693540]))
      (1693581 'move' call_tmp[1693579](1693584 call !=[1485] coerce_tmp[1694104] nil[44]))
      const-val call_tmp[1693587]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693589 'move' call_tmp[1693587] call_tmp[1693579])
      if call_tmp[1693587]
      {
        const-val tmp[1693596]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        ref tmp[1693598]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1693600 'move' tmp[1693598](1693602 'addr of' domToFree[1693546]))
        ref tmp[1693604]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1693606 'move' tmp[1693604](1693608 'addr of' distToRemove[1693553]))
        val call_tmp[1693610]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693612 'move' call_tmp[1693610] domToRemove[1693540])
        val coerce_tmp[1694113]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694118 'move' coerce_tmp[1694113] call_tmp[1693610])
        const-val ret_tmp[1804390]:(unmanaged BaseDom?,unmanaged BaseDist?)[1418878] "temp"
        (1693623 call remove[146118] coerce_tmp[1694113] ret_tmp[1804390])
        (1804393 'move' tmp[1693596] ret_tmp[1804390])
        { scopeless
        }
        ref call_tmp[1693655]:_ref(BaseDom)[1208636] "dead after last mention" "maybe param" "temp"
        (1693657 'move' call_tmp[1693655](1694129 '.' tmp[1693596] x0[1418874]))
        val coerce_tmp[1694132]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694136 'move' coerce_tmp[1694132](1694134 'deref' call_tmp[1693655]))
        (1693663 call =[1417998] tmp[1693598] coerce_tmp[1694132])
        ref call_tmp[1693666]:_ref(BaseDist)[1208870] "dead after last mention" "maybe param" "temp"
        (1693668 'move' call_tmp[1693666](1694141 '.' tmp[1693596] x1[1418876]))
        val coerce_tmp[1694144]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694148 'move' coerce_tmp[1694144](1694146 'deref' call_tmp[1693666]))
        (1693674 call =[1423188] tmp[1693604] coerce_tmp[1694144])
        (1824031 call chpl__autoDestroy[1698118] tmp[1693596])
        const-val tmp[1693699]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1693717]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1693719]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693721 'move' call_tmp[1693719] domToRemove[1693540])
        ref call_tmp[1693726]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1694157]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694162 'move' coerce_tmp[1694157] call_tmp[1693719])
        (1693728 'move' call_tmp[1693726](1693731 call pid[801512] coerce_tmp[1694157]))
        const-val call_tmp[1693734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1694165]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694169 'move' coerce_tmp[1694165](1694167 'deref' call_tmp[1693726]))
        (1693736 'move' call_tmp[1693734](1693739 call !=[436050] coerce_tmp[1694165] -1))
        (1693742 'move' tmp[1693717] call_tmp[1693734])
        (1693747 'move' tmp[1693699] tmp[1693717])
        (1693760 call =[435212] domIsPrivatized[1693567] tmp[1693699])
      }
      val distIsPrivatized[1693767]:bool[10] "dead at end of block" "insert auto destroy"
      (1693769 'move' distIsPrivatized[1693767] 0)
      const-val call_tmp[1693774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1694173]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1694178 'move' coerce_tmp[1694173](1694175 'cast' object[22] distToRemove[1693553]))
      (1693776 'move' call_tmp[1693774](1693779 call !=[1485] coerce_tmp[1694173] nil[44]))
      const-val call_tmp[1693782]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693784 'move' call_tmp[1693782] call_tmp[1693774])
      if call_tmp[1693782]
      {
        val call_tmp[1693791]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693793 'move' call_tmp[1693791] distToRemove[1693553])
        val call_tmp[1693798]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[1694182]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694187 'move' coerce_tmp[1694182] call_tmp[1693791])
        (1693800 'move' call_tmp[1693798](1693806 call remove[145505] coerce_tmp[1694182]))
        (1693808 call =[1423188] distToFree[1693560] call_tmp[1693798])
        const-val tmp[1693832]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1693850]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        val call_tmp[1693852]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693854 'move' call_tmp[1693852] distToRemove[1693553])
        ref call_tmp[1693859]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        val coerce_tmp[1694197]:BaseDist[145968] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694202 'move' coerce_tmp[1694197] call_tmp[1693852])
        (1693861 'move' call_tmp[1693859](1693864 call pid[801324] coerce_tmp[1694197]))
        const-val call_tmp[1693867]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1694205]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694209 'move' coerce_tmp[1694205](1694207 'deref' call_tmp[1693859]))
        (1693869 'move' call_tmp[1693867](1693872 call !=[436050] coerce_tmp[1694205] -1))
        (1693875 'move' tmp[1693850] call_tmp[1693867])
        (1693880 'move' tmp[1693832] tmp[1693850])
        (1693893 call =[435212] distIsPrivatized[1693767] tmp[1693832])
      }
      const-val call_tmp[1693900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1694213]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1694219 'move' coerce_tmp[1694213](1694215 'cast' object[22] arrToFree[1693528]))
      (1693902 'move' call_tmp[1693900](1693905 call !=[1485] coerce_tmp[1694213] nil[44]))
      const-val call_tmp[1693908]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693910 'move' call_tmp[1693908] call_tmp[1693900])
      if call_tmp[1693908]
      {
        val coerce_tmp[1694224]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1694230 'move' coerce_tmp[1694224](1694226 'cast' BaseArr[149584] _instance[1781877]))
        (1693925 call _delete_arr[1424135] coerce_tmp[1694224] deinitElts[1781879])
      }
      const-val call_tmp[1693931]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1694233]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1694238 'move' coerce_tmp[1694233](1694235 'cast' object[22] domToFree[1693546]))
      (1693933 'move' call_tmp[1693931](1693936 call !=[1485] coerce_tmp[1694233] nil[44]))
      const-val call_tmp[1693939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693941 'move' call_tmp[1693939] call_tmp[1693931])
      if call_tmp[1693939]
      {
        val call_tmp[1693948]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693950 'move' call_tmp[1693948](1693953 call postfix![1418597] instanceDom[1693573]))
        (1693956 call _delete_dom[1425263] call_tmp[1693948] domIsPrivatized[1693567])
      }
      const-val call_tmp[1693963]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1694243]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1694248 'move' coerce_tmp[1694243](1694245 'cast' object[22] distToFree[1693560]))
      (1693965 'move' call_tmp[1693963](1693968 call !=[1485] coerce_tmp[1694243] nil[44]))
      const-val call_tmp[1693971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1693973 'move' call_tmp[1693971] call_tmp[1693963])
      if call_tmp[1693971]
      {
        val call_tmp[1693980]:BaseDist[145968] "dead after last mention" "expr temp" "maybe param" "temp"
        (1693982 'move' call_tmp[1693980] distToFree[1693560])
        (1693988 call _delete_dist[150617] call_tmp[1693980] distIsPrivatized[1693767])
      }
      (1824036 call chpl__autoDestroy[1697987] tmp[1693511])
    }
    (1693995 return _void[55])
  }
  function chpl__deinit_ChapelArray[1824887]() : void[4] "resolved"
  {
    label _endchpl__deinit_ChapelArray[1824893]
    ref tmp[2050709]:AtomicT(int(64))[940153] "temp"
    (2050714 'move' tmp[2050709](2050711 '.' numPrivateObjects[113711] value[2050699]))
    (1824895 call chpl__autoDestroy[1438078] tmp[2050709])
    (1824890 return _void[55])
  }
  function coforall_fn[1854174](const in arg parDim[1854176]:int(64)[13], const in arg numChunks[1854178]:int(64)[13], const in arg this[1854180]:domain(1,int(64),false)[1250953], const in arg chunk[1854182]:int(64)[13], const in arg _coforallCount[1854184]:_EndCount(AtomicT(int(64)),int(64))[945362], ref arg error_out[1854186]:Error[167984], const in arg this[1854188]:[domain(1,int(64),false)] real(64)[1358774], const?  ref arg default_arg_offset[1854190]:_ref(1*int(64))[1256614], const in arg rhs[1854557]:real(64)[16]) : void[4] throws "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    {
      ref call_tmp[1854194]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "maybe param" "temp"
      (1854196 'move' call_tmp[1854194](1854199 call ranges[1251363] this[1854180]))
      val block[1854201]:1*range(int(64),bounded,false)[1244715] "dead at end of block" "insert auto destroy"
      (1854203 'move' block[1854201](1854206 call chpl__initCopy[1296870] call_tmp[1854194]))
      const-val len[1854208]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val tmp[1854210]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref call_tmp[1854212]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1854214]:_ref(1*range(int(64),bounded,false))[1244773] "dead after last mention" "temp"
      (1854216 'move' _this_tmp_[1854214](1854219 call ranges[1251363] this[1854180]))
      (1854221 'move' call_tmp[1854212](1854224 call this[1382675] _this_tmp_[1854214] parDim[1854176]))
      const-val tmp[1854227]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      ref call_tmp[1854229]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1854231]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
      (1854233 'move' _this_tmp_[1854231](1854236 call ranges[1251363] this[1854180]))
      (1854238 'move' call_tmp[1854229](1854241 call this[1382675] _this_tmp_[1854231] parDim[1854176]))
      const-val coerce_tmp[1854244]:range(int(64),bounded,false)[1026833] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1854246 'move' coerce_tmp[1854244](1854248 'deref' call_tmp[1854229]))
      (1854250 'move' tmp[1854227](1854253 call size[1035808] coerce_tmp[1854244]))
      (1854255 'move' tmp[1854210] tmp[1854227])
      (1854258 'move' len[1854208] tmp[1854210])
      ref call_tmp[1854261]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1854263]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
      (1854265 'move' _this_tmp_[1854263](1854268 call ranges[1251363] this[1854180]))
      (1854270 'move' call_tmp[1854261](1854273 call this[1382675] _this_tmp_[1854263] parDim[1854176]))
      ref call_tmp[1854276]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
      (1854278 'move' call_tmp[1854276](1854281 call _high[1028679] call_tmp[1854261]))
      ref call_tmp[1854283]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1854285]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
      (1854287 'move' _this_tmp_[1854285](1854290 call ranges[1251363] this[1854180]))
      (1854292 'move' call_tmp[1854283](1854295 call this[1382675] _this_tmp_[1854285] parDim[1854176]))
      ref call_tmp[1854298]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
      (1854300 'move' call_tmp[1854298](1854303 call _low[1028471] call_tmp[1854283]))
      ref call_tmp[1854305]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
      ref _this_tmp_[1854307]:_ref(1*range(int(64),bounded,false))[1244773] "dead at end of block" "temp"
      (1854309 'move' _this_tmp_[1854307](1854312 call ranges[1251363] this[1854180]))
      (1854314 'move' call_tmp[1854305](1854317 call this[1382675] _this_tmp_[1854307] parDim[1854176]))
      ref call_tmp[1854320]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
      (1854322 'move' call_tmp[1854320](1854325 call _low[1028471] call_tmp[1854305]))
      const-val call_tmp[1854327]:2*int(64)[1040075] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1854329]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1854331 'move' coerce_tmp[1854329](1854333 'deref' call_tmp[1854276]))
      const-val coerce_tmp[1854335]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1854337 'move' coerce_tmp[1854335](1854339 'deref' call_tmp[1854298]))
      const-val coerce_tmp[1854341]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1854343 'move' coerce_tmp[1854341](1854345 'deref' call_tmp[1854320]))
      const-val ret_tmp[1854347]:2*int(64)[1040075] "temp"
      (1854350 call _computeBlock[1229355] len[1854208] numChunks[1854178] chunk[1854182] coerce_tmp[1854329] coerce_tmp[1854335] coerce_tmp[1854341] ret_tmp[1854347])
      (1854358 'move' call_tmp[1854327] ret_tmp[1854347])
      const-val tmp[1854361]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
      (1854363 'move' tmp[1854361] call_tmp[1854327])
      1
      ref call_tmp[1854367]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1854369 'move' call_tmp[1854367](1854371 '.' tmp[1854361] x0[1040071]))
      const-val lo[1854374]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1854376]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1854378 'move' coerce_tmp[1854376](1854380 'deref' call_tmp[1854367]))
      (1854382 '=' lo[1854374] coerce_tmp[1854376])
      (1854385 'noop')
      ref call_tmp[1854386]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1854388 'move' call_tmp[1854386](1854390 '.' tmp[1854361] x1[1040073]))
      const-val hi[1854393]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1854395]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1854397 'move' coerce_tmp[1854395](1854399 'deref' call_tmp[1854386]))
      (1854401 '=' hi[1854393] coerce_tmp[1854395])
      (1854404 'noop')
      ref call_tmp[1854405]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
      (1854407 'move' call_tmp[1854405](1854410 call this[1382675] block[1854201] parDim[1854176]))
      {
        ref call_tmp[1854414]:_ref(range(int(64),bounded,false))[1026877] "dead after last mention" "maybe param" "temp"
        (1854416 'move' call_tmp[1854414](1854419 call this[1382675] block[1854201] parDim[1854176]))
        const-val call_tmp[1854422]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1854424]:range(int(64),bounded,false)[1026833] "temp"
        (1854427 call chpl_build_bounded_range[455175] lo[1854374] hi[1854393] ret_tmp[1854424])
        (1854431 'move' call_tmp[1854422] ret_tmp[1854424])
        (1854435 call =[1251569] call_tmp[1854414] call_tmp[1854422])
        (1854439 call chpl__autoDestroy[1508195] call_tmp[1854422])
      }
      {
        val _indexOfInterest[1854442]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1854444]:_ic_these_help_DefaultRectangularDom_1_int64_t_F[1384256] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1854446]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384262] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1854448]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384262] "temp"
        (1854451 call these_help[1383848] this[1854180] block[1854201] ret_tmp[1854448])
        (1854455 'move' call_tmp[1854446] ret_tmp[1854448])
        (1854458 'move' _iterator[1854444](1854461 call _getIterator[1384271] call_tmp[1854446]))
        {
          val ret[1920372]:_ir_these_help_DefaultRectangularDom_1_int64_t_F[1384262] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1920374]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1920376]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1920378]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "temp"
          ref block[1920620]:_ref(1*range(int(64),bounded,false))[1244773] "temp"
          (1920625 'move' block[1920620](1920622 '.v' _iterator[1854444] F1_block[2003105]))
          (1920380 'move' call_tmp[1920378](1920382 '.' block[1920620] x0[1244713]))
          (1920385 'move' _iterator[1920376](1920388 call _getIterator[1095339] call_tmp[1920378]))
          {
            val ret[1920391]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1920393]:bool[10] "dead after last mention" "temp"
            const-val this[1920395]:range(int(64),bounded,false)[1026833] "temp"
            (1920397 'move' this[1920395](1920399 '.v' _iterator[1920376] F0_this[1980749]))
            (1920402 'move' _return_tmp_[1920393](1920405 call checkIfIterWillOverflow[1095833] this[1920395] 1))
            val i[1920408]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1920410]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1920412 'move' i[1920408] 0)
            ref call_tmp[1920415]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1920417]:range(int(64),bounded,false)[1026833] "temp"
            (1920419 'move' this[1920417](1920421 '.v' _iterator[1920376] F0_this[1980749]))
            (1920424 'move' call_tmp[1920415](1920427 call _low[1028471] this[1920417]))
            const-val start[1920429]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1920431]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1920433 'move' coerce_tmp[1920431](1920435 'deref' call_tmp[1920415]))
            (1920437 '=' start[1920429] coerce_tmp[1920431])
            (1920440 'noop')
            ref call_tmp[1920441]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1920443]:range(int(64),bounded,false)[1026833] "temp"
            (1920445 'move' this[1920443](1920447 '.v' _iterator[1920376] F0_this[1980749]))
            (1920450 'move' call_tmp[1920441](1920453 call _high[1028679] this[1920443]))
            const end[1920455]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1920457]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1920459 'move' coerce_tmp[1920457](1920461 'deref' call_tmp[1920441]))
            (1920463 '=' end[1920455] coerce_tmp[1920457])
            (1920466 'noop')
            CForLoop[1920467] order-independent
            {
              const-val yret[1920482]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1920484]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1920486]:range(int(64),bounded,false)[1026833] "temp"
              (1920488 'move' this[1920486](1920490 '.v' _iterator[1920376] F0_this[1980749]))
              (1920493 'move' call_tmp[1920484](1920496 call chpl_intToIdx[1028499] this[1920486] i[1920408]))
              (1920499 'move' yret[1920482] call_tmp[1920484])
              const-val _yieldedIndex[1920502]:int(64)[13] "temp"
              (1920504 'move' _yieldedIndex[1920502] call_tmp[1920484])
              {
                const-val i[1920508]:int(64)[13] "const" "index var" "insert auto destroy"
                (1920510 'move' i[1920508] _yieldedIndex[1920502])
                const-val yret[1920513]:int(64)[13] "dead after last mention" "YVV" "temp"
                (1920515 'move' yret[1920513] _yieldedIndex[1920502])
                const-val _yieldedIndex[1920537]:int(64)[13] "temp"
                (1920618 'move' _yieldedIndex[1920537] _yieldedIndex[1920502])
                {
                  const-val i[1920539]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1920541 'move' i[1920539] _yieldedIndex[1920537])
                  {
                    const-val yret[1920545]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1920547 'move' yret[1920545] i[1920539])
                    const-val _indexOfInterest[1920550]:int(64)[13] "dead at end of block" "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    (1920552 'move' _indexOfInterest[1920550] yret[1920545])
                    {
                      const-val i[1920556]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1920558 'move' i[1920556] _indexOfInterest[1920550])
                      {
                        ref yret[1920562]:_ref(real(64))[936736] "dead after last mention" "YVV" "temp"
                        ref call_tmp[1920564]:_ref(real(64))[936736] "dead after last mention" "maybe param" "temp"
                        (1920566 'move' call_tmp[1920564](1920569 call dsiAccess[1396502] this[1854188] i[1920556]))
                        (1920572 'move' yret[1920562] call_tmp[1920564])
                        ref _indexOfInterest[1920575]:_ref(real(64))[936736] "dead at end of block" "index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        (1920577 'move' _indexOfInterest[1920575] yret[1920562])
                        {
                          ref i[1920581]:_ref(real(64))[936736] "index var" "insert auto destroy"
                          (1920583 'move' i[1920581] _indexOfInterest[1920575])
                          ref yret[1920586]:_ref(real(64))[936736] "dead after last mention" "YVV" "temp"
                          (1920588 'move' yret[1920586] i[1920581])
                          ref e[1920591]:_ref(real(64))[936736] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
                          (1920593 'move' e[1920591] yret[1920586])
                          {
                            val call_tmp[1920597]:real(64)[16] "dead after last mention" "maybe param" "temp" "type variable"
                            const-val copy[1920599]:real(64)[16] "dead at end of block" "no auto destroy"
                            (1920601 'move' copy[1920599] rhs[1854557])
                            (1920604 '=' e[1920591] copy[1920599])
                            val optinfo[1920607]:int(64)[13] "no codegen" "temp" "lhs outlives forall" "forall no task private"
                            (1920609 'optimization info' optinfo[1920607])
                          }
                          label _continueLabel[1920611]
                        }
                      }
                      label _continueLabel[1920613]
                    }
                  }
                  label _continueLabel[1920615]
                }
              }
              {
                (1920469 '=' i[1920408] coerce_tmp[1920431])
              }
              {
                (1920473 '<=' i[1920408] end[1920455])
              }
              {
                val call_tmp[1920477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1920479 '+=' i[1920408] 1)
              }
            }
            label _endthese[1920528]
          }
          (1920531 call _freeIterator[1102025] _iterator[1920376])
          label _endthese_help[1920533]
        }
        label _breakLabel[1854528]
        (1854531 call _freeIterator[1384448] _iterator[1854444])
      }
      (1854534 call chpl__autoDestroy[1508492] tmp[1854361])
      (1854537 call chpl__autoDestroy[1508195] coerce_tmp[1854244])
      (1854540 call chpl__autoDestroy[1528835] block[1854201])
    }
    label _endcoforall_fn[1854546]
    (1854561 call chpl__autoDestroy[1411481] rhs[1854557])
    (1854548 return _void[55])
  }
  function wrapon_fn[2060370](const in arg dummy_locale_arg[2060372]:chpl_localeID_t[209352], in arg buf[2060374]:c_void_ptr[149], in arg buf_size[2060376]:int(64)[13], in arg c[2060378]:_class_localson_fn[2060330]) : void[4] "on block"
  {
    val _0_tmp[2060383]:chpl_localeID_t[209352] "temp"
    (2060388 'move' _0_tmp[2060383](2060385 '.v' c[2060378] _0_tmp[2060333]))
    val _1__instance[2060390]:BaseArr[149584] "temp"
    (2060395 'move' _1__instance[2060390](2060392 '.v' c[2060378] _1__instance[2060335]))
    val _2_deinitElts[2060398]:bool[10] "temp"
    (2060403 'move' _2_deinitElts[2060398](2060400 '.v' c[2060378] _2_deinitElts[2060337]))
    (2060381 call on_fn[1415730] _1__instance[2060390] _2_deinitElts[2060398])
    (2060406 return _void[55])
  }
  function wrapon_fn[2060676](const in arg dummy_locale_arg[2060678]:chpl_localeID_t[209352], in arg buf[2060680]:c_void_ptr[149], in arg buf_size[2060682]:int(64)[13], in arg c[2060684]:_class_localson_fn[2060636]) : void[4] "on block"
  {
    val _0_tmp[2060689]:chpl_localeID_t[209352] "temp"
    (2060694 'move' _0_tmp[2060689](2060691 '.v' c[2060684] _0_tmp[2060639]))
    val _1_pid[2060696]:int(64)[13] "temp"
    (2060701 'move' _1_pid[2060696](2060698 '.v' c[2060684] _1_pid[2060641]))
    val _2_original[2060704]:object[22] "temp"
    (2060709 'move' _2_original[2060704](2060706 '.v' c[2060684] _2_original[2060643]))
    (2060687 call on_fn[1425437] _1_pid[2060696] _2_original[2060704])
    (2060712 return _void[55])
  }
  function wrapcobegin_fn[2060773](in arg dummy_taskList[2060775]:_ref(c_void_ptr)[938141], in arg dummy_taskListNode[2060777]:int(64)[13], in arg buf[2060779]:c_void_ptr[149], in arg buf_size[2060781]:int(64)[13], in arg c[2060783]:_class_localscobegin_fn[2060720]) : void[4] "cobegin or coforall block"
  {
    val _0_pid[2060788]:int(64)[13] "temp"
    (2060793 'move' _0_pid[2060788](2060790 '.v' c[2060783] _0_pid[2060723]))
    val _1_original[2060796]:object[22] "temp"
    (2060801 'move' _1_original[2060796](2060798 '.v' c[2060783] _1_original[2060725]))
    val _2__cobeginCount[2060804]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2060809 'move' _2__cobeginCount[2060804](2060806 '.v' c[2060783] _2__cobeginCount[2060727]))
    (2060786 call cobegin_fn[1425841] _0_pid[2060788] _1_original[2060796] _2__cobeginCount[2060804])
    val endcount[2060812]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2060817 'move' endcount[2060812](2060814 '.v' c[2060783] _2__cobeginCount[2060727]))
    (2060819 call _downEndCount[1230656] endcount[2060812] nil[44])
    (2060823 return _void[55])
  }
  function wrapon_fn[2060889](const in arg dummy_locale_arg[2060891]:chpl_localeID_t[209352], in arg buf[2060893]:c_void_ptr[149], in arg buf_size[2060895]:int(64)[13], in arg c[2060897]:_class_localson_fn[2060849]) : void[4] "on block"
  {
    val _0_tmp[2060902]:chpl_localeID_t[209352] "temp"
    (2060907 'move' _0_tmp[2060902](2060904 '.v' c[2060897] _0_tmp[2060852]))
    val _1_pid[2060909]:int(64)[13] "temp"
    (2060914 'move' _1_pid[2060909](2060911 '.v' c[2060897] _1_pid[2060854]))
    val _2_original[2060917]:object[22] "temp"
    (2060922 'move' _2_original[2060917](2060919 '.v' c[2060897] _2_original[2060856]))
    (2060900 call on_fn[1425904] _1_pid[2060909] _2_original[2060917])
    (2060925 return _void[55])
  }
  function wrapcobegin_fn[2060986](in arg dummy_taskList[2060988]:_ref(c_void_ptr)[938141], in arg dummy_taskListNode[2060990]:int(64)[13], in arg buf[2060992]:c_void_ptr[149], in arg buf_size[2060994]:int(64)[13], in arg c[2060996]:_class_localscobegin_fn[2060933]) : void[4] "cobegin or coforall block"
  {
    val _0_pid[2061001]:int(64)[13] "temp"
    (2061006 'move' _0_pid[2061001](2061003 '.v' c[2060996] _0_pid[2060936]))
    val _1_original[2061009]:object[22] "temp"
    (2061014 'move' _1_original[2061009](2061011 '.v' c[2060996] _1_original[2060938]))
    val _2__cobeginCount[2061017]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2061022 'move' _2__cobeginCount[2061017](2061019 '.v' c[2060996] _2__cobeginCount[2060940]))
    (2060999 call cobegin_fn[1425930] _0_pid[2061001] _1_original[2061009] _2__cobeginCount[2061017])
    val endcount[2061025]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2061030 'move' endcount[2061025](2061027 '.v' c[2060996] _2__cobeginCount[2060940]))
    (2061032 call _downEndCount[1230656] endcount[2061025] nil[44])
    (2061036 return _void[55])
  }
  function wrapon_fn[2061102](const in arg dummy_locale_arg[2061104]:chpl_localeID_t[209352], in arg buf[2061106]:c_void_ptr[149], in arg buf_size[2061108]:int(64)[13], in arg c[2061110]:_class_localson_fn[2061062]) : void[4] "on block"
  {
    val _0_tmp[2061115]:chpl_localeID_t[209352] "temp"
    (2061120 'move' _0_tmp[2061115](2061117 '.v' c[2061110] _0_tmp[2061065]))
    val _1_pid[2061122]:int(64)[13] "temp"
    (2061127 'move' _1_pid[2061122](2061124 '.v' c[2061110] _1_pid[2061067]))
    val _2_original[2061130]:object[22] "temp"
    (2061135 'move' _2_original[2061130](2061132 '.v' c[2061110] _2_original[2061069]))
    (2061113 call on_fn[1425993] _1_pid[2061122] _2_original[2061130])
    (2061138 return _void[55])
  }
  function wrapon_fn[2064467](const in arg dummy_locale_arg[2064469]:chpl_localeID_t[209352], in arg buf[2064471]:c_void_ptr[149], in arg buf_size[2064473]:int(64)[13], in arg c[2064475]:_class_localson_fn[2064433]) : void[4] "on block"
  {
    val _0_tmp[2064480]:chpl_localeID_t[209352] "temp"
    (2064485 'move' _0_tmp[2064480](2064482 '.v' c[2064475] _0_tmp[2064436]))
    val _1_rvfDerefTmp[2064487]:DefaultDist[1243915] "temp"
    (2064492 'move' _1_rvfDerefTmp[2064487](2064489 '.v' c[2064475] _1_rvfDerefTmp[2064438]))
    (2064478 call on_fn[1528542] _1_rvfDerefTmp[2064487])
    (2064495 return _void[55])
  }
  function wrapon_fn[2064552](const in arg dummy_locale_arg[2064554]:chpl_localeID_t[209352], in arg buf[2064556]:c_void_ptr[149], in arg buf_size[2064558]:int(64)[13], in arg c[2064560]:_class_localson_fn[2064518]) : void[4] "on block"
  {
    val _0_tmp[2064565]:chpl_localeID_t[209352] "temp"
    (2064570 'move' _0_tmp[2064565](2064567 '.v' c[2064560] _0_tmp[2064521]))
    val _1_rvfDerefTmp[2064572]:domain(1,int(64),false)[1252616] "temp"
    (2064577 'move' _1_rvfDerefTmp[2064572](2064574 '.v' c[2064560] _1_rvfDerefTmp[2064523]))
    (2064563 call on_fn[1528976] _1_rvfDerefTmp[2064572])
    (2064580 return _void[55])
  }
  function wrapon_fn[2064974](const in arg dummy_locale_arg[2064976]:chpl_localeID_t[209352], in arg buf[2064978]:c_void_ptr[149], in arg buf_size[2064980]:int(64)[13], in arg c[2064982]:_class_localson_fn[2064934]) : void[4] "on block"
  {
    val _0_tmp[2064987]:chpl_localeID_t[209352] "temp"
    (2064992 'move' _0_tmp[2064987](2064989 '.v' c[2064982] _0_tmp[2064937]))
    val _1__instance[2064994]:[domain(1,int(64),false)] locale[1256505] "temp"
    (2064999 'move' _1__instance[2064994](2064996 '.v' c[2064982] _1__instance[2064939]))
    val _2_deinitElts[2065002]:bool[10] "temp"
    (2065007 'move' _2_deinitElts[2065002](2065004 '.v' c[2064982] _2_deinitElts[2064941]))
    (2064985 call on_fn[1601948] _1__instance[2064994] _2_deinitElts[2065002])
    (2065010 return _void[55])
  }
  function wrapon_fn[2065319](const in arg dummy_locale_arg[2065321]:chpl_localeID_t[209352], in arg buf[2065323]:c_void_ptr[149], in arg buf_size[2065325]:int(64)[13], in arg c[2065327]:_class_localson_fn[2065279]) : void[4] "on block"
  {
    val _0_tmp[2065332]:chpl_localeID_t[209352] "temp"
    (2065337 'move' _0_tmp[2065332](2065334 '.v' c[2065327] _0_tmp[2065282]))
    val _1__instance[2065339]:[domain(1,int(64),false)] unmanaged localesSignal?[1318231] "temp"
    (2065344 'move' _1__instance[2065339](2065341 '.v' c[2065327] _1__instance[2065284]))
    val _2_deinitElts[2065347]:bool[10] "temp"
    (2065352 'move' _2_deinitElts[2065347](2065349 '.v' c[2065327] _2_deinitElts[2065286]))
    (2065330 call on_fn[1631033] _1__instance[2065339] _2_deinitElts[2065347])
    (2065355 return _void[55])
  }
  function wrapon_fn[2065664](const in arg dummy_locale_arg[2065666]:chpl_localeID_t[209352], in arg buf[2065668]:c_void_ptr[149], in arg buf_size[2065670]:int(64)[13], in arg c[2065672]:_class_localson_fn[2065624]) : void[4] "on block"
  {
    val _0_tmp[2065677]:chpl_localeID_t[209352] "temp"
    (2065682 'move' _0_tmp[2065677](2065679 '.v' c[2065672] _0_tmp[2065627]))
    val _1__instance[2065684]:[domain(1,int(64),false)] real(64)[1358774] "temp"
    (2065689 'move' _1__instance[2065684](2065686 '.v' c[2065672] _1__instance[2065629]))
    val _2_deinitElts[2065692]:bool[10] "temp"
    (2065697 'move' _2_deinitElts[2065692](2065694 '.v' c[2065672] _2_deinitElts[2065631]))
    (2065675 call on_fn[1660834] _1__instance[2065684] _2_deinitElts[2065692])
    (2065700 return _void[55])
  }
  function wrapon_fn[2066009](const in arg dummy_locale_arg[2066011]:chpl_localeID_t[209352], in arg buf[2066013]:c_void_ptr[149], in arg buf_size[2066015]:int(64)[13], in arg c[2066017]:_class_localson_fn[2065969]) : void[4] "on block"
  {
    val _0_tmp[2066022]:chpl_localeID_t[209352] "temp"
    (2066027 'move' _0_tmp[2066022](2066024 '.v' c[2066017] _0_tmp[2065972]))
    val _1__instance[2066029]:[domain(1,int(64),false)] int(64)[1368694] "temp"
    (2066034 'move' _1__instance[2066029](2066031 '.v' c[2066017] _1__instance[2065974]))
    val _2_deinitElts[2066037]:bool[10] "temp"
    (2066042 'move' _2_deinitElts[2066037](2066039 '.v' c[2066017] _2_deinitElts[2065976]))
    (2066020 call on_fn[1693473] _1__instance[2066029] _2_deinitElts[2066037])
    (2066045 return _void[55])
  }
  function wrapcoforall_fn[2070594](in arg dummy_taskList[2070598]:_ref(c_void_ptr)[938141], in arg dummy_taskListNode[2070600]:int(64)[13], in arg buf[2070602]:c_void_ptr[149], in arg buf_size[2070604]:int(64)[13], in arg c[2070606]:_class_localscoforall_fn[2070503]) : void[4] "cobegin or coforall block"
  {
    val error[2070596]:Error[167984] "temp"
    val _0_parDim[2070611]:int(64)[13] "temp"
    (2070616 'move' _0_parDim[2070611](2070613 '.v' c[2070606] _0_parDim[2070506]))
    val _1_numChunks[2070619]:int(64)[13] "temp"
    (2070624 'move' _1_numChunks[2070619](2070621 '.v' c[2070606] _1_numChunks[2070508]))
    val _2_coerce_tmp[2070627]:domain(1,int(64),false)[1250953] "temp"
    (2070632 'move' _2_coerce_tmp[2070627](2070629 '.v' c[2070606] _2_coerce_tmp[2070510]))
    val _3_chunk[2070635]:int(64)[13] "temp"
    (2070640 'move' _3_chunk[2070635](2070637 '.v' c[2070606] _3_chunk[2070512]))
    val _4__coforallCount[2070643]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2070648 'move' _4__coforallCount[2070643](2070645 '.v' c[2070606] _4__coforallCount[2070514]))
    val _6_coerce_tmp[2070652]:[domain(1,int(64),false)] real(64)[1358774] "temp"
    (2070657 'move' _6_coerce_tmp[2070652](2070654 '.v' c[2070606] _6_coerce_tmp[2070518]))
    ref _7_default_arg_offset[2070660]:1*int(64)[1256544] "temp"
    (2070665 'move' _7_default_arg_offset[2070660](2070662 '.v' c[2070606] _7_default_arg_offset[2070520]))
    val _8_rhs[2070668]:real(64)[16] "temp"
    (2070673 'move' _8_rhs[2070668](2070670 '.v' c[2070606] _8_rhs[2070522]))
    (2070609 call coforall_fn[1854174] _0_parDim[2070611] _1_numChunks[2070619] _2_coerce_tmp[2070627] _3_chunk[2070635] _4__coforallCount[2070643] error[2070596] _6_coerce_tmp[2070652] _7_default_arg_offset[2070660] _8_rhs[2070668])
    val endcount[2070676]:_EndCount(AtomicT(int(64)),int(64))[945362] "temp"
    (2070681 'move' endcount[2070676](2070678 '.v' c[2070606] _4__coforallCount[2070514]))
    (2070683 call _downEndCount[1230656] endcount[2070676] error[2070596])
    (2070687 return _void[55])
  }
}