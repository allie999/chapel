AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416201]() : void[4] "insert line file info" "module init"
  {
    (538215 return _void[55])
  }
  type MSBRadixSortSettings[287971](?) unknown DISTRIBUTE_BUFFER[287933] "param" 5 const-val sortSwitch[287938]:int(64)[13] "const" 256 const-val minForTask[287943]:int(64)[13] "const" 256 unknown CHECK_SORTS[287948] "param" 0 unknown progress[287953] "param" 0 const-val alwaysSerial[287958]:bool[10] "const" 0 const maxTasks[287966] "const"(287963 call maxTaskPar _mt[243](364751 call here[90439]))
  function msbRadixSort[287982](arg Data[287979]:_array[133600](?), arg comparator[287987]:_any[178](?) :
  defaultComparator[267894] =
  defaultComparator[267894]) : _unknown[51] "no return value for void"
  {
    unknown endbit[287992] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[549006] "maybe param" "maybe type" "temp"
    (549012 'move' type_tmp[549006] int(64)[13])
    (549008 'init var split decl' endbit[287992] type_tmp[549006])
    (287995 'end of statement')
    unknown call_tmp[740232] "maybe param" "maybe type" "temp"
    (740235 'move' call_tmp[740232](288002 call msbRadixSortParamLastStartBit Data[287979] comparator[287987]))
    (549014 'init var split init' endbit[287992] call_tmp[740232] type_tmp[549006])
    (490329 'end of statement' endbit[287992])
    unknown call_tmp[740237] "expr temp" "maybe param" "maybe type" "temp"
    (740240 'move' call_tmp[740237](288008 call < endbit[287992] 0))
    unknown call_tmp[740242] "expr temp" "maybe param" "maybe type" "temp"
    (740245 'move' call_tmp[740242](288018 call _cond_test call_tmp[740237]))
    if call_tmp[740242]
    {
      unknown call_tmp[740247] "expr temp" "maybe param" "maybe type" "temp"
      (740250 'move' call_tmp[740247](288014 call max int(64)[13]))
      (288015 call = endbit[287992] call_tmp[740247])
      (490331 'end of statement' endbit[287992])
    }
    unknown call_tmp[740254] "expr temp" "maybe param" "maybe type" "temp"
    (740257 'move' call_tmp[740254](288025 call _dom _mt[243] Data[287979]))
    unknown call_tmp[740261] "expr temp" "maybe param" "maybe type" "temp"
    (740264 'move' call_tmp[740261](288028 call low _mt[243] call_tmp[740254]))
    unknown call_tmp[740268] "expr temp" "maybe param" "maybe type" "temp"
    (740271 'move' call_tmp[740268](288034 call _dom _mt[243] Data[287979]))
    unknown call_tmp[740275] "expr temp" "maybe param" "maybe type" "temp"
    (740278 'move' call_tmp[740275](288037 call high _mt[243] call_tmp[740268]))
    unknown call_tmp[740280] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740283 'move' call_tmp[740280](748146 'new' MSBRadixSortSettings[287971](?)))
    (288052 call msbRadixSort(start_n = call_tmp[740261])(end_n = call_tmp[740275]) Data[287979] comparator[287987](startbit = 0)(endbit = endbit[287992])(settings = call_tmp[740280]))
    (490333 'end of statement' endbit[287992])
    (538203 return _void[55])
  }
  function msbRadixSort[288062](arg start_n[288059]:int(64)[13], arg end_n[288065]:int(64)[13], arg A[288071]:_array[133600](?), arg criterion[288074]:_any[178](?), arg startbit[288077]:int(64)[13], arg endbit[288081]:int(64)[13], arg settings[288084]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740285] "expr temp" "maybe param" "maybe type" "temp"
    (740288 'move' call_tmp[740285](288088 call > startbit[288077] endbit[288081]))
    unknown call_tmp[740290] "expr temp" "maybe param" "maybe type" "temp"
    (740293 'move' call_tmp[740290](288092 call _cond_test call_tmp[740285]))
    if call_tmp[740290]
    {
      gotoReturn _end_msbRadixSort[538205] _end_msbRadixSort[538205]
    }
    unknown call_tmp[740295] "expr temp" "maybe param" "maybe type" "temp"
    (740298 'move' call_tmp[740295](288100 call - end_n[288065] start_n[288059]))
    unknown call_tmp[740302] "expr temp" "maybe param" "maybe type" "temp"
    (740305 'move' call_tmp[740302](288105 call sortSwitch _mt[243] settings[288084]))
    unknown call_tmp[740307] "expr temp" "maybe param" "maybe type" "temp"
    (740310 'move' call_tmp[740307](288108 call < call_tmp[740295] call_tmp[740302]))
    unknown call_tmp[740312] "expr temp" "maybe param" "maybe type" "temp"
    (740315 'move' call_tmp[740312](288145 call _cond_test call_tmp[740307]))
    if call_tmp[740312]
    {
      (288121 call shellSort module=[255] ShellSort[273437] A[288071] criterion[288074](start = start_n[288059])(end = end_n[288065]))
      (490336 'end of statement')
      unknown call_tmp[740319] "expr temp" "maybe param" "maybe type" "temp"
      (740322 'move' call_tmp[740319](288127 call CHECK_SORTS _mt[243] settings[288084]))
      unknown call_tmp[740324] "expr temp" "maybe param" "maybe type" "temp"
      (740327 'move' call_tmp[740324](288138 call _cond_test call_tmp[740319]))
      if call_tmp[740324]
      {
        (288136 call checkSorted start_n[288059] end_n[288065] A[288071] criterion[288074])
      }
      gotoReturn _end_msbRadixSort[538205] _end_msbRadixSort[538205]
      (364757 'referenced modules list' ShellSort[273437])
    }
    unknown call_tmp[740331] "expr temp" "maybe param" "maybe type" "temp"
    (740334 'move' call_tmp[740331](288152 call progress _mt[243] settings[288084]))
    unknown call_tmp[740336] "expr temp" "maybe param" "maybe type" "temp"
    (740339 'move' call_tmp[740336](288199 call _cond_test call_tmp[740331]))
    if call_tmp[740336]
    {
      (288197 call writeln "radix sort start=" start_n[288059] " end=" end_n[288065] " startbit=" startbit[288077] " endbit=" endbit[288081])
    }
    const radixbits[288205] "dead at end of block" "const" "insert auto destroy"
    (549017 'init var' radixbits[288205] RADIX_BITS[276003])
    (288208 'end of statement')
    unknown call_tmp[740341] "expr temp" "maybe param" "maybe type" "temp"
    (740344 'move' call_tmp[740341](288211 call << 1 radixbits[288205]))
    unknown call_tmp[740346] "maybe param" "maybe type" "temp"
    (740349 'move' call_tmp[740346](288214 call + call_tmp[740341] 1))
    const radix[288216] "dead at end of block" "const" "insert auto destroy"
    (549019 'init var' radix[288216] call_tmp[740346])
    (288219 'end of statement')
    unknown offsets[288230] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740351] "expr temp" "maybe param" "maybe type" "temp"
    (740354 'move' call_tmp[740351](288222 call chpl_build_bounded_range 0 radix[288216]))
    unknown call_tmp[740356] "expr temp" "maybe param" "maybe type" "temp"
    (740359 'move' call_tmp[740356](288226 call chpl__ensureDomainExpr call_tmp[740351]))
    unknown call_tmp[740361] "expr temp" "maybe param" "maybe type" "temp"
    (740364 'move' call_tmp[740361](288228 call chpl__buildArrayRuntimeType call_tmp[740356] int(64)[13]))
    (549021 'default init var' offsets[288230] call_tmp[740361])
    (288233 'end of statement')
    unknown end_offsets[288244] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740366] "expr temp" "maybe param" "maybe type" "temp"
    (740369 'move' call_tmp[740366](288236 call chpl_build_bounded_range 0 radix[288216]))
    unknown call_tmp[740371] "expr temp" "maybe param" "maybe type" "temp"
    (740374 'move' call_tmp[740371](288240 call chpl__ensureDomainExpr call_tmp[740366]))
    unknown call_tmp[740376] "expr temp" "maybe param" "maybe type" "temp"
    (740379 'move' call_tmp[740376](288242 call chpl__buildArrayRuntimeType call_tmp[740371] int(64)[13]))
    (549023 'default init var' end_offsets[288244] call_tmp[740376])
    (288247 'end of statement')
    { scopeless type
      unknown call_type_tmp[493299] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740381] "expr temp" "maybe param" "maybe type" "temp"
      (740384 'move' call_tmp[740381](288252 call A[288071] start_n[288059]))
      unknown call_tmp[740386] "expr temp" "maybe param" "maybe type" "temp"
      (740389 'move' call_tmp[740386](288256 call binForRecord call_tmp[740381] criterion[288074] startbit[288077]))
      unknown call_tmp[740391] "expr temp" "maybe param" "maybe type" "temp"
      (740394 'move' call_tmp[740391](288259 call call_tmp[740386] 1))
      (493303 'move' call_type_tmp[493299](288260 'typeof' call_tmp[740391]))
    }
    unknown ubitsType[288261] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493299]
    (549026 'move' ubitsType[288261] call_type_tmp[493299])
    unknown call_tmp[740396] "maybe param" "maybe type" "temp"
    (740399 'move' call_tmp[740396](288268 call max ubitsType[288261]))
    unknown min_ubits[288269] "dead at end of block" "insert auto destroy"
    (549028 'init var' min_ubits[288269] call_tmp[740396] ubitsType[288261])
    (288272 'end of statement')
    unknown max_ubits[288275] "dead at end of block" "insert auto destroy"
    (549030 'init var' max_ubits[288275] 0 ubitsType[288261])
    (288278 'end of statement')
    unknown call_tmp[740401] "maybe param" "maybe type" "temp"
    (740404 'move' call_tmp[740401](288281 call + radix[288216] 1))
    unknown min_bin[288283] "dead at end of block" "insert auto destroy"
    (549032 'init var' min_bin[288283] call_tmp[740401])
    (288286 'end of statement')
    unknown max_bin[288288] "dead at end of block" "insert auto destroy"
    (549034 'init var' max_bin[288288] 0)
    (288291 'end of statement')
    unknown any_ending[288293] "dead at end of block" "insert auto destroy"
    (549036 'init var' any_ending[288293] 0)
    (288296 'end of statement')
    unknown call_tmp[740408] "expr temp" "maybe param" "maybe type" "temp"
    (740411 'move' call_tmp[740408](288300 call alwaysSerial _mt[243] settings[288084]))
    unknown call_tmp[740413] "expr temp" "maybe param" "maybe type" "temp"
    (740416 'move' call_tmp[740413](288304 call == call_tmp[740408] 0))
    unknown call_tmp[740418] "expr temp" "maybe param" "maybe type" "temp"
    (740421 'move' call_tmp[740418](288557 call _cond_test call_tmp[740413]))
    if call_tmp[740418]
    {
      unknown call_tmp[740423] "expr temp" "maybe param" "maybe type" "temp"
      (740426 'move' call_tmp[740423](288309 call chpl_build_bounded_range start_n[288059] end_n[288065]))
      Forall {
        induction variables:
          
          unknown i[288425] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740423]
        shadow variables:
          offsets[288313] 'reduce' intent outer var offsets[288230]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288321] 'reduce' intent outer var min_ubits[288269]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288328] 'reduce' intent outer var max_ubits[288275]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288335] 'reduce' intent outer var any_ending[288293]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740428] "expr temp" "maybe param" "maybe type" "temp"
          (740431 'move' call_tmp[740428](288349 call A[288071] i[288425]))
          unknown call_tmp[740433] "maybe param" "maybe type" "temp"
          (740436 'move' call_tmp[740433](288353 call binForRecord call_tmp[740428] criterion[288074] startbit[288077]))
          const tmp[288354] "dead at end of block" "const" "insert auto destroy" "temp"
          (549038 'init var' tmp[288354] call_tmp[740433])
          (288361 call _check_tuple_var_decl tmp[288354] 2)
          (490347 'end of statement')
          unknown call_tmp[740438] "maybe param" "maybe type" "temp"
          (740441 'move' call_tmp[740438](288355 call tmp[288354] 0))
          const bin[288340] "dead at end of block" "const" "insert auto destroy"
          (549040 'init var' bin[288340] call_tmp[740438])
          unknown call_tmp[740443] "maybe param" "maybe type" "temp"
          (740446 'move' call_tmp[740443](288358 call tmp[288354] 1))
          const ubits[288342] "dead at end of block" "const" "insert auto destroy"
          (549042 'init var' ubits[288342] call_tmp[740443])
          (288366 'end of statement')
          unknown call_tmp[740448] "expr temp" "maybe param" "maybe type" "temp"
          (740451 'move' call_tmp[740448](288370 call < ubits[288342] min_ubits[288321]))
          unknown call_tmp[740453] "expr temp" "maybe param" "maybe type" "temp"
          (740456 'move' call_tmp[740453](288377 call _cond_test call_tmp[740448]))
          if call_tmp[740453]
          {
            (288374 call = min_ubits[288321] ubits[288342])
            (490348 'end of statement' min_ubits[288321] ubits[288342])
          }
          unknown call_tmp[740458] "expr temp" "maybe param" "maybe type" "temp"
          (740461 'move' call_tmp[740458](288384 call > ubits[288342] max_ubits[288328]))
          unknown call_tmp[740463] "expr temp" "maybe param" "maybe type" "temp"
          (740466 'move' call_tmp[740463](288391 call _cond_test call_tmp[740458]))
          if call_tmp[740463]
          {
            (288388 call = max_ubits[288328] ubits[288342])
            (490351 'end of statement' max_ubits[288328] ubits[288342])
          }
          unknown tmp[434392] "maybe param" "temp"
          (434403 'move' tmp[434392](288398 call == bin[288340] 0))
          unknown call_tmp[740468] "expr temp" "maybe param" "maybe type" "temp"
          (740471 'move' call_tmp[740468](434405 call _cond_invalid tmp[434392]))
          if call_tmp[740468]
          {
            (434408 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[580127] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[580128] "maybe param" "temp"
          unknown call_tmp[740473] "expr temp" "maybe param" "maybe type" "temp"
          (740476 'move' call_tmp[740473](434393 call isTrue tmp[434392]))
          (580133 'move' tmp[580128](580131 call _cond_test call_tmp[740473]))
          if tmp[580128]
          {
            (580138 'move' tmp[580127](580135 '_paramFoldLogical' tmp[580128] 1))
          }
          {
            unknown tmp[580140] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740478] "expr temp" "maybe param" "maybe type" "temp"
            (740481 'move' call_tmp[740478](288402 call == bin[288340] radix[288216]))
            (580142 'move' tmp[580140](434397 call isTrue call_tmp[740478]))
            (580147 'move' tmp[580127](580144 '_paramFoldLogical' tmp[580128] tmp[580140]))
          }
          unknown call_tmp[740483] "expr temp" "maybe param" "maybe type" "temp"
          (740486 'move' call_tmp[740483](288411 call _cond_test tmp[580127]))
          if call_tmp[740483]
          {
            (288408 call = any_ending[288335] 1)
            (490355 'end of statement' any_ending[288335])
          }
          unknown call_tmp[740488] "expr temp" "maybe param" "maybe type" "temp"
          (740491 'move' call_tmp[740488](288419 call offsets[288313] bin[288340]))
          (288421 call += call_tmp[740488] 1)
          (490357 'end of statement' offsets[288313] bin[288340])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288518] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288519] "expr temp" "temp"
        unknown call_tmp[740493] "expr temp" "maybe param" "maybe type" "temp"
        (740496 'move' call_tmp[740493](288533 call chpl_direct_range_iter start_n[288059] end_n[288065] 1))
        (288528 'move' _iterator[288519](288526 call _getIterator call_tmp[740493]))
        Defer
        {
          {
            (288549 call _freeIterator _iterator[288519])
          }
        }
        { scopeless type
          (288538 'move' _indexOfInterest[288518](288535 call iteratorIndex _iterator[288519]))
        }
        ForLoop[288520]
        {
          unknown i[288542] "index var" "insert auto destroy"
          (490361 'end of statement')
          (288544 'move' i[288542] _indexOfInterest[288518])
          (490362 'end of statement' i[288542])
          {
            unknown call_tmp[740498] "expr temp" "maybe param" "maybe type" "temp"
            (740501 'move' call_tmp[740498](288443 call A[288071] i[288542]))
            unknown call_tmp[740503] "maybe param" "maybe type" "temp"
            (740506 'move' call_tmp[740503](288447 call binForRecord call_tmp[740498] criterion[288074] startbit[288077]))
            const tmp[288448] "dead at end of block" "const" "insert auto destroy" "temp"
            (549044 'init var' tmp[288448] call_tmp[740503])
            (288455 call _check_tuple_var_decl tmp[288448] 2)
            (490364 'end of statement')
            unknown call_tmp[740508] "maybe param" "maybe type" "temp"
            (740511 'move' call_tmp[740508](288449 call tmp[288448] 0))
            const bin[288434] "dead at end of block" "const" "insert auto destroy"
            (549046 'init var' bin[288434] call_tmp[740508])
            unknown call_tmp[740513] "maybe param" "maybe type" "temp"
            (740516 'move' call_tmp[740513](288452 call tmp[288448] 1))
            const ubits[288436] "dead at end of block" "const" "insert auto destroy"
            (549048 'init var' ubits[288436] call_tmp[740513])
            (288460 'end of statement')
            unknown call_tmp[740518] "expr temp" "maybe param" "maybe type" "temp"
            (740521 'move' call_tmp[740518](288464 call < ubits[288436] min_ubits[288269]))
            unknown call_tmp[740523] "expr temp" "maybe param" "maybe type" "temp"
            (740526 'move' call_tmp[740523](288471 call _cond_test call_tmp[740518]))
            if call_tmp[740523]
            {
              (288468 call = min_ubits[288269] ubits[288436])
              (490365 'end of statement' min_ubits[288269] ubits[288436])
            }
            unknown call_tmp[740528] "expr temp" "maybe param" "maybe type" "temp"
            (740531 'move' call_tmp[740528](288478 call > ubits[288436] max_ubits[288275]))
            unknown call_tmp[740533] "expr temp" "maybe param" "maybe type" "temp"
            (740536 'move' call_tmp[740533](288485 call _cond_test call_tmp[740528]))
            if call_tmp[740533]
            {
              (288482 call = max_ubits[288275] ubits[288436])
              (490368 'end of statement' max_ubits[288275] ubits[288436])
            }
            unknown tmp[434413] "maybe param" "temp"
            (434424 'move' tmp[434413](288492 call == bin[288434] 0))
            unknown call_tmp[740538] "expr temp" "maybe param" "maybe type" "temp"
            (740541 'move' call_tmp[740538](434426 call _cond_invalid tmp[434413]))
            if call_tmp[740538]
            {
              (434429 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580154] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580155] "maybe param" "temp"
            unknown call_tmp[740543] "expr temp" "maybe param" "maybe type" "temp"
            (740546 'move' call_tmp[740543](434414 call isTrue tmp[434413]))
            (580160 'move' tmp[580155](580158 call _cond_test call_tmp[740543]))
            if tmp[580155]
            {
              (580165 'move' tmp[580154](580162 '_paramFoldLogical' tmp[580155] 1))
            }
            {
              unknown tmp[580167] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740548] "expr temp" "maybe param" "maybe type" "temp"
              (740551 'move' call_tmp[740548](288496 call == bin[288434] radix[288216]))
              (580169 'move' tmp[580167](434418 call isTrue call_tmp[740548]))
              (580174 'move' tmp[580154](580171 '_paramFoldLogical' tmp[580155] tmp[580167]))
            }
            unknown call_tmp[740553] "expr temp" "maybe param" "maybe type" "temp"
            (740556 'move' call_tmp[740553](288505 call _cond_test tmp[580154]))
            if call_tmp[740553]
            {
              (288502 call = any_ending[288293] 1)
              (490372 'end of statement' any_ending[288293])
            }
            unknown call_tmp[740558] "expr temp" "maybe param" "maybe type" "temp"
            (740561 'move' call_tmp[740558](288513 call offsets[288230] bin[288434]))
            (288515 call += call_tmp[740558] 1)
            (490374 'end of statement' offsets[288230] bin[288434])
          }
          label _continueLabel[288523]
          _indexOfInterest[288518]
          _iterator[288519]
        }
        label _breakLabel[288524]
      }
    }
    unknown call_tmp[740563] "expr temp" "maybe param" "maybe type" "temp"
    (740566 'move' call_tmp[740563](288563 call == any_ending[288293] 0))
    unknown call_tmp[740568] "expr temp" "maybe param" "maybe type" "temp"
    (740571 'move' call_tmp[740568](288598 call _cond_test call_tmp[740563]))
    if call_tmp[740568]
    {
      unknown call_tmp[740573] "maybe param" "maybe type" "temp"
      (740576 'move' call_tmp[740573](288570 call findDataStartBit startbit[288077] min_ubits[288269] max_ubits[288275]))
      unknown dataStartBit[288571] "dead at end of block" "insert auto destroy"
      (549050 'init var' dataStartBit[288571] call_tmp[740573])
      (288574 'end of statement' min_ubits[288269] max_ubits[288275])
      unknown call_tmp[740578] "expr temp" "maybe param" "maybe type" "temp"
      (740581 'move' call_tmp[740578](288578 call > dataStartBit[288571] startbit[288077]))
      unknown call_tmp[740583] "expr temp" "maybe param" "maybe type" "temp"
      (740586 'move' call_tmp[740583](288594 call _cond_test call_tmp[740578]))
      if call_tmp[740583]
      {
        (288589 call msbRadixSort start_n[288059] end_n[288065] A[288071] criterion[288074] dataStartBit[288571] endbit[288081] settings[288084])
        (490379 'end of statement' dataStartBit[288571])
        gotoReturn _end_msbRadixSort[538205] _end_msbRadixSort[538205]
      }
    }
    unknown call_tmp[740590] "expr temp" "maybe param" "maybe type" "temp"
    (740593 'move' call_tmp[740590](288603 call progress _mt[243] settings[288084]))
    unknown call_tmp[740595] "expr temp" "maybe param" "maybe type" "temp"
    (740598 'move' call_tmp[740595](288625 call _cond_test call_tmp[740590]))
    if call_tmp[740595]
    {
      (288623 call writeln "accumulate")
    }
    unknown sum[288631] "dead at end of block" "insert auto destroy"
    (549052 'init var' sum[288631] 0)
    (288634 'end of statement')
    {
      unknown _indexOfInterest[288676] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288677] "expr temp" "temp"
      unknown call_tmp[740600] "expr temp" "maybe param" "maybe type" "temp"
      (740603 'move' call_tmp[740600](288686 call _getIterator offsets[288230]))
      unknown call_tmp[740605] "expr temp" "maybe param" "maybe type" "temp"
      (740608 'move' call_tmp[740605](288689 call _getIterator end_offsets[288244]))
      (288691 'move' _iterator[288677](288643 call _build_tuple call_tmp[740600] call_tmp[740605]))
      Defer
      {
        {
          (288721 call _freeIterator _iterator[288677])
        }
      }
      { scopeless type
        (288696 'move' _indexOfInterest[288676](288693 call iteratorIndex _iterator[288677]))
      }
      ForLoop[288678]
      {
        (288701 call _check_tuple_var_decl _indexOfInterest[288676] 2)
        (490384 'end of statement')
        unknown off[288707] "index var" "insert auto destroy"
        (490385 'end of statement')
        (288709 'move' off[288707](288705 call _indexOfInterest[288676] 0))
        (490386 'end of statement' off[288707])
        unknown end[288714] "index var" "insert auto destroy"
        (490388 'end of statement')
        (288716 'move' end[288714](288712 call _indexOfInterest[288676] 1))
        (490389 'end of statement' end[288714])
        {
          unknown binstart[288645] "dead at end of block" "insert auto destroy"
          (549054 'init var' binstart[288645] sum[288631])
          (288648 'end of statement')
          (288652 call += sum[288631] off[288707])
          (490392 'end of statement' sum[288631] off[288707])
          unknown binend[288656] "dead at end of block" "insert auto destroy"
          (549056 'init var' binend[288656] sum[288631])
          (288659 'end of statement' sum[288631] sum[288631])
          unknown call_tmp[740610] "expr temp" "maybe param" "maybe type" "temp"
          (740613 'move' call_tmp[740610](288663 call + start_n[288059] binstart[288645]))
          (288665 call = off[288707] call_tmp[740610])
          (490396 'end of statement' off[288707] binstart[288645])
          unknown call_tmp[740615] "expr temp" "maybe param" "maybe type" "temp"
          (740618 'move' call_tmp[740615](288671 call + start_n[288059] binend[288656]))
          (288673 call = end[288714] call_tmp[740615])
          (490399 'end of statement' end[288714] binend[288656])
        }
        label _continueLabel[288681]
        _indexOfInterest[288676]
        _iterator[288677]
      }
      label _breakLabel[288682]
    }
    unknown curbin[288729] "dead at end of block" "insert auto destroy"
    (549058 'init var' curbin[288729] 0)
    (288732 'end of statement' radixbits[288205] radix[288216] radix[288216] ubitsType[288261] ubitsType[288261] ubitsType[288261] radix[288216])
    unknown call_tmp[740622] "expr temp" "maybe param" "maybe type" "temp"
    (740625 'move' call_tmp[740622](288734 call progress _mt[243] settings[288084]))
    unknown call_tmp[740627] "expr temp" "maybe param" "maybe type" "temp"
    (740630 'move' call_tmp[740627](288758 call _cond_test call_tmp[740622]))
    if call_tmp[740627]
    {
      (288756 call writeln "shuffle")
    }
    {
      unknown tmp[289288] "temp"
      (289306 'move' tmp[289288](289304 call _cond_test 1))
      WhileDo[289293]
      {
        {
          {
            unknown tmp[288786] "temp"
            unknown tmp[434455] "maybe param" "temp"
            (434466 'move' tmp[434455](288819 call <= curbin[288729] radix[288216]))
            unknown call_tmp[740632] "expr temp" "maybe param" "maybe type" "temp"
            (740635 'move' call_tmp[740632](434468 call _cond_invalid tmp[434455]))
            if call_tmp[740632]
            {
              (434471 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580181] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580182] "maybe param" "temp"
            unknown call_tmp[740637] "expr temp" "maybe param" "maybe type" "temp"
            (740640 'move' call_tmp[740637](434456 call isTrue tmp[434455]))
            (580187 'move' tmp[580182](580185 call _cond_test call_tmp[740637]))
            if tmp[580182]
            {
              unknown tmp[580189] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740642] "expr temp" "maybe param" "maybe type" "temp"
              (740645 'move' call_tmp[740642](288825 call offsets[288230] curbin[288729]))
              unknown call_tmp[740647] "expr temp" "maybe param" "maybe type" "temp"
              (740650 'move' call_tmp[740647](288828 call end_offsets[288244] curbin[288729]))
              unknown call_tmp[740652] "expr temp" "maybe param" "maybe type" "temp"
              (740655 'move' call_tmp[740652](288823 call == call_tmp[740642] call_tmp[740647]))
              (580191 'move' tmp[580189](434459 call isTrue call_tmp[740652]))
              (580196 'move' tmp[580181](580193 '_paramFoldLogical' tmp[580182] tmp[580189]))
            }
            {
              (580201 'move' tmp[580181](580198 '_paramFoldLogical' tmp[580182] 0))
            }
            (288830 'move' tmp[288786](288815 call _cond_test tmp[580181]))
            WhileDo[288791]
            {
              {
                (288782 call += curbin[288729] 1)
                (490404 'end of statement' curbin[288729])
              }
              label _continueLabel[288789]
              unknown tmp[434434] "maybe param" "temp"
              (434445 'move' tmp[434434](288799 call <= curbin[288729] radix[288216]))
              unknown call_tmp[740657] "expr temp" "maybe param" "maybe type" "temp"
              (740660 'move' call_tmp[740657](434447 call _cond_invalid tmp[434434]))
              if call_tmp[740657]
              {
                (434450 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580208] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580209] "maybe param" "temp"
              unknown call_tmp[740662] "expr temp" "maybe param" "maybe type" "temp"
              (740665 'move' call_tmp[740662](434435 call isTrue tmp[434434]))
              (580214 'move' tmp[580209](580212 call _cond_test call_tmp[740662]))
              if tmp[580209]
              {
                unknown tmp[580216] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740667] "expr temp" "maybe param" "maybe type" "temp"
                (740670 'move' call_tmp[740667](288805 call offsets[288230] curbin[288729]))
                unknown call_tmp[740672] "expr temp" "maybe param" "maybe type" "temp"
                (740675 'move' call_tmp[740672](288808 call end_offsets[288244] curbin[288729]))
                unknown call_tmp[740677] "expr temp" "maybe param" "maybe type" "temp"
                (740680 'move' call_tmp[740677](288803 call == call_tmp[740667] call_tmp[740672]))
                (580218 'move' tmp[580216](434438 call isTrue call_tmp[740677]))
                (580223 'move' tmp[580208](580220 '_paramFoldLogical' tmp[580209] tmp[580216]))
              }
              {
                (580228 'move' tmp[580208](580225 '_paramFoldLogical' tmp[580209] 0))
              }
              (288810 'move' tmp[288786](288795 call _cond_test tmp[580208]))
              tmp[288786]
            }
            label _breakLabel[288790]
          }
          unknown call_tmp[740682] "expr temp" "maybe param" "maybe type" "temp"
          (740685 'move' call_tmp[740682](288836 call > curbin[288729] radix[288216]))
          unknown call_tmp[740687] "expr temp" "maybe param" "maybe type" "temp"
          (740690 'move' call_tmp[740687](288842 call _cond_test call_tmp[740682]))
          if call_tmp[740687]
          {
            break _breakLabel[289292] _breakLabel[289292]
          }
          unknown call_tmp[740694] "maybe param" "maybe type" "temp"
          (740697 'move' call_tmp[740694](288849 call DISTRIBUTE_BUFFER _mt[243] settings[288084]))
          unknown max_buf[288852] "dead at end of block" "param"
          (549060 'init var' max_buf[288852] call_tmp[740694])
          (288855 'end of statement')
          unknown buf[288863] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740701] "expr temp" "maybe param" "maybe type" "temp"
          (740704 'move' call_tmp[740701](288858 call eltType _mt[243] A[288071]))
          unknown call_tmp[740706] "expr temp" "maybe param" "maybe type" "temp"
          (740709 'move' call_tmp[740706](288861 call * max_buf[288852] call_tmp[740701]))
          (549062 'default init var' buf[288863] call_tmp[740706])
          (288866 'end of statement')
          unknown used_buf[288868] "dead at end of block" "insert auto destroy"
          (549064 'init var' used_buf[288868] 0)
          (288871 'end of statement')
          unknown call_tmp[740711] "maybe param" "maybe type" "temp"
          (740714 'move' call_tmp[740711](288875 call end_offsets[288244] curbin[288729]))
          unknown end[288876] "dead at end of block" "insert auto destroy"
          (549066 'init var' end[288876] call_tmp[740711])
          (288879 'end of statement')
          unknown call_tmp[740716] "expr temp" "maybe param" "maybe type" "temp"
          (740719 'move' call_tmp[740716](288884 call offsets[288230] curbin[288729]))
          unknown call_tmp[740721] "expr temp" "maybe param" "maybe type" "temp"
          (740724 'move' call_tmp[740721](288889 call end_offsets[288244] curbin[288729]))
          unknown call_tmp[740726] "expr temp" "maybe param" "maybe type" "temp"
          (740729 'move' call_tmp[740726](288892 call * 2 max_buf[288852]))
          unknown call_tmp[740731] "expr temp" "maybe param" "maybe type" "temp"
          (740734 'move' call_tmp[740731](288894 call - call_tmp[740721] call_tmp[740726]))
          unknown call_tmp[740736] "maybe param" "maybe type" "temp"
          (740739 'move' call_tmp[740736](288896 call max call_tmp[740716] call_tmp[740731]))
          unknown endfast[288897] "dead at end of block" "insert auto destroy"
          (549068 'init var' endfast[288897] call_tmp[740736])
          (288900 'end of statement')
          unknown call_tmp[740741] "expr temp" "maybe param" "maybe type" "temp"
          (740744 'move' call_tmp[740741](288905 call offsets[288230] curbin[288729]))
          unknown call_tmp[740746] "expr temp" "maybe param" "maybe type" "temp"
          (740749 'move' call_tmp[740746](288910 call end_offsets[288244] curbin[288729]))
          unknown call_tmp[740751] "expr temp" "maybe param" "maybe type" "temp"
          (740754 'move' call_tmp[740751](288912 call - call_tmp[740746] max_buf[288852]))
          unknown call_tmp[740756] "maybe param" "maybe type" "temp"
          (740759 'move' call_tmp[740756](288914 call max call_tmp[740741] call_tmp[740751]))
          unknown bufstart[288915] "dead at end of block" "insert auto destroy"
          (549070 'init var' bufstart[288915] call_tmp[740756])
          (288918 'end of statement')
          unknown i[288920] "dead at end of block" "insert auto destroy"
          (549072 'init var' i[288920] bufstart[288915])
          (288923 'end of statement' end_offsets[288244] curbin[288729] offsets[288230] curbin[288729] end_offsets[288244] curbin[288729] offsets[288230] curbin[288729] end_offsets[288244] curbin[288729] bufstart[288915])
          {
            unknown tmp[288950] "temp"
            unknown call_tmp[740761] "expr temp" "maybe param" "maybe type" "temp"
            (740764 'move' call_tmp[740761](288971 call < i[288920] end[288876]))
            (288974 'move' tmp[288950](288969 call _cond_test call_tmp[740761]))
            WhileDo[288955]
            {
              {
                unknown call_tmp[740766] "expr temp" "maybe param" "maybe type" "temp"
                (740769 'move' call_tmp[740766](288931 call buf[288863] used_buf[288868]))
                unknown call_tmp[740771] "expr temp" "maybe param" "maybe type" "temp"
                (740774 'move' call_tmp[740771](288935 call A[288071] i[288920]))
                (288936 call <=> call_tmp[740766] call_tmp[740771])
                (490418 'end of statement' buf[288863] used_buf[288868] i[288920])
                (288942 call += used_buf[288868] 1)
                (490422 'end of statement' used_buf[288868])
                (288947 call += i[288920] 1)
                (490424 'end of statement' i[288920])
              }
              label _continueLabel[288953]
              unknown call_tmp[740776] "expr temp" "maybe param" "maybe type" "temp"
              (740779 'move' call_tmp[740776](288961 call < i[288920] end[288876]))
              (288964 'move' tmp[288950](288959 call _cond_test call_tmp[740776]))
              tmp[288950]
            }
            label _breakLabel[288954]
          }
          {
            unknown tmp[289076] "temp"
            unknown call_tmp[740781] "expr temp" "maybe param" "maybe type" "temp"
            (740784 'move' call_tmp[740781](289101 call offsets[288230] curbin[288729]))
            unknown call_tmp[740786] "expr temp" "maybe param" "maybe type" "temp"
            (740789 'move' call_tmp[740786](289099 call < call_tmp[740781] endfast[288897]))
            (289104 'move' tmp[289076](289097 call _cond_test call_tmp[740786]))
            WhileDo[289081]
            {
              {
                {
                  unknown j[289038] "dead at end of block" "insert auto destroy"
                  (549074 'init var' j[289038] 0)
                  (490426 'end of statement')
                  unknown tmp[289039] "maybe param" "temp"
                  unknown call_tmp[740791] "expr temp" "maybe param" "maybe type" "temp"
                  (740794 'move' call_tmp[740791](288987 call - max_buf[288852] 1))
                  (289051 'move' tmp[289039](289049 call chpl_compute_low_param_loop_bound 0 call_tmp[740791]))
                  unknown tmp[289040] "maybe param" "temp"
                  unknown call_tmp[740796] "expr temp" "maybe param" "maybe type" "temp"
                  (740799 'move' call_tmp[740796](289056 call - max_buf[288852] 1))
                  (289061 'move' tmp[289040](289059 call chpl_compute_high_param_loop_bound 0 call_tmp[740796]))
                  unknown tmp[289041] "maybe param" "temp"
                  (289064 'move' tmp[289041] 1)
                  ParamForLoop[289066]
                  { j[289038] tmp[289039] tmp[289040] tmp[289041]
                    {
                      unknown call_tmp[740801] "expr temp" "maybe param" "maybe type" "temp"
                      (740804 'move' call_tmp[740801](289000 call buf[288863] j[289038]))
                      unknown call_tmp[740806] "maybe param" "maybe type" "temp"
                      (740809 'move' call_tmp[740806](289004 call binForRecord call_tmp[740801] criterion[288074] startbit[288077]))
                      const tmp[289005] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549076 'init var' tmp[289005] call_tmp[740806])
                      (289009 call _check_tuple_var_decl tmp[289005] 2)
                      (490427 'end of statement')
                      unknown call_tmp[740811] "maybe param" "maybe type" "temp"
                      (740814 'move' call_tmp[740811](289006 call tmp[289005] 0))
                      const bin[288991] "dead at end of block" "const" "insert auto destroy"
                      (549078 'init var' bin[288991] call_tmp[740811])
                      (289014 'end of statement')
                      unknown call_tmp[740816] "expr temp" "maybe param" "maybe type" "temp"
                      (740819 'move' call_tmp[740816](289020 call offsets[288230] bin[288991]))
                      unknown call_tmp[740821] "expr temp" "maybe param" "maybe type" "temp"
                      (740824 'move' call_tmp[740821](289022 call A[288071] call_tmp[740816]))
                      unknown call_tmp[740826] "expr temp" "maybe param" "maybe type" "temp"
                      (740829 'move' call_tmp[740826](289026 call buf[288863] j[289038]))
                      (289027 call <=> call_tmp[740821] call_tmp[740826])
                      (490428 'end of statement' offsets[288230] bin[288991] buf[288863] j[289038])
                      unknown call_tmp[740831] "expr temp" "maybe param" "maybe type" "temp"
                      (740834 'move' call_tmp[740831](289033 call offsets[288230] bin[288991]))
                      (289035 call += call_tmp[740831] 1)
                      (490433 'end of statement' offsets[288230] bin[288991])
                    }
                  }
                  label _unused_continueLabel[289043]
                  label _breakLabel[289042]
                }
              }
              label _continueLabel[289079]
              unknown call_tmp[740836] "expr temp" "maybe param" "maybe type" "temp"
              (740839 'move' call_tmp[740836](289089 call offsets[288230] curbin[288729]))
              unknown call_tmp[740841] "expr temp" "maybe param" "maybe type" "temp"
              (740844 'move' call_tmp[740841](289087 call < call_tmp[740836] endfast[288897]))
              (289092 'move' tmp[289076](289085 call _cond_test call_tmp[740841]))
              tmp[289076]
            }
            label _breakLabel[289080]
          }
          {
            unknown tmp[289257] "temp"
            unknown call_tmp[740846] "expr temp" "maybe param" "maybe type" "temp"
            (740849 'move' call_tmp[740846](289282 call offsets[288230] curbin[288729]))
            unknown call_tmp[740851] "expr temp" "maybe param" "maybe type" "temp"
            (740854 'move' call_tmp[740851](289280 call < call_tmp[740846] end[288876]))
            (289285 'move' tmp[289257](289278 call _cond_test call_tmp[740851]))
            WhileDo[289262]
            {
              {
                unknown j[289115] "dead at end of block" "insert auto destroy"
                (549080 'init var' j[289115] 0)
                (289118 'end of statement')
                {
                  unknown tmp[289218] "temp"
                  unknown tmp[434518] "maybe param" "temp"
                  (434529 'move' tmp[434518](289247 call >= used_buf[288868] 0))
                  unknown call_tmp[740856] "expr temp" "maybe param" "maybe type" "temp"
                  (740859 'move' call_tmp[740856](434531 call _cond_invalid tmp[434518]))
                  if call_tmp[740856]
                  {
                    (434534 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580235] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580236] "maybe param" "temp"
                  unknown call_tmp[740861] "expr temp" "maybe param" "maybe type" "temp"
                  (740864 'move' call_tmp[740861](434519 call isTrue tmp[434518]))
                  (580241 'move' tmp[580236](580239 call _cond_test call_tmp[740861]))
                  if tmp[580236]
                  {
                    unknown tmp[580243] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[740866] "expr temp" "maybe param" "maybe type" "temp"
                    (740869 'move' call_tmp[740866](289251 call < j[289115] used_buf[288868]))
                    (580245 'move' tmp[580243](434522 call isTrue call_tmp[740866]))
                    (580250 'move' tmp[580235](580247 '_paramFoldLogical' tmp[580236] tmp[580243]))
                  }
                  {
                    (580255 'move' tmp[580235](580252 '_paramFoldLogical' tmp[580236] 0))
                  }
                  (289254 'move' tmp[289218](289243 call _cond_test tmp[580235]))
                  WhileDo[289223]
                  {
                    {
                      unknown call_tmp[740871] "expr temp" "maybe param" "maybe type" "temp"
                      (740874 'move' call_tmp[740871](289139 call buf[288863] j[289115]))
                      unknown call_tmp[740876] "maybe param" "maybe type" "temp"
                      (740879 'move' call_tmp[740876](289143 call binForRecord call_tmp[740871] criterion[288074] startbit[288077]))
                      const tmp[289144] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549082 'init var' tmp[289144] call_tmp[740876])
                      (289148 call _check_tuple_var_decl tmp[289144] 2)
                      (490437 'end of statement')
                      unknown call_tmp[740881] "maybe param" "maybe type" "temp"
                      (740884 'move' call_tmp[740881](289145 call tmp[289144] 0))
                      const bin[289130] "dead at end of block" "const" "insert auto destroy"
                      (549084 'init var' bin[289130] call_tmp[740881])
                      (289153 'end of statement')
                      unknown call_tmp[740886] "maybe param" "maybe type" "temp"
                      (740889 'move' call_tmp[740886](289158 call offsets[288230] bin[289130]))
                      unknown offset[289159] "dead at end of block" "insert auto destroy"
                      (549086 'init var' offset[289159] call_tmp[740886])
                      (289162 'end of statement' offsets[288230] bin[289130])
                      unknown call_tmp[740891] "expr temp" "maybe param" "maybe type" "temp"
                      (740894 'move' call_tmp[740891](289166 call A[288071] offset[289159]))
                      unknown call_tmp[740896] "expr temp" "maybe param" "maybe type" "temp"
                      (740899 'move' call_tmp[740896](289170 call buf[288863] j[289115]))
                      (289171 call <=> call_tmp[740891] call_tmp[740896])
                      (490440 'end of statement' offset[289159] buf[288863] j[289115])
                      unknown call_tmp[740901] "expr temp" "maybe param" "maybe type" "temp"
                      (740904 'move' call_tmp[740901](289177 call offsets[288230] bin[289130]))
                      (289179 call += call_tmp[740901] 1)
                      (490444 'end of statement' offsets[288230] bin[289130])
                      unknown tmp[434476] "maybe param" "temp"
                      (434487 'move' tmp[434476](289184 call == bin[289130] curbin[288729]))
                      unknown call_tmp[740906] "expr temp" "maybe param" "maybe type" "temp"
                      (740909 'move' call_tmp[740906](434489 call _cond_invalid tmp[434476]))
                      if call_tmp[740906]
                      {
                        (434492 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580262] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580263] "maybe param" "temp"
                      unknown call_tmp[740911] "expr temp" "maybe param" "maybe type" "temp"
                      (740914 'move' call_tmp[740911](434477 call isTrue tmp[434476]))
                      (580268 'move' tmp[580263](580266 call _cond_test call_tmp[740911]))
                      if tmp[580263]
                      {
                        unknown tmp[580270] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[740916] "expr temp" "maybe param" "maybe type" "temp"
                        (740919 'move' call_tmp[740916](289188 call >= offset[289159] bufstart[288915]))
                        (580272 'move' tmp[580270](434480 call isTrue call_tmp[740916]))
                        (580277 'move' tmp[580262](580274 '_paramFoldLogical' tmp[580263] tmp[580270]))
                      }
                      {
                        (580282 'move' tmp[580262](580279 '_paramFoldLogical' tmp[580263] 0))
                      }
                      unknown call_tmp[740921] "expr temp" "maybe param" "maybe type" "temp"
                      (740924 'move' call_tmp[740921](289209 call _cond_test tmp[580262]))
                      if call_tmp[740921]
                      {
                        (289194 call -= used_buf[288868] 1)
                        (490448 'end of statement' used_buf[288868])
                        unknown call_tmp[740926] "expr temp" "maybe param" "maybe type" "temp"
                        (740929 'move' call_tmp[740926](289201 call buf[288863] j[289115]))
                        unknown call_tmp[740931] "expr temp" "maybe param" "maybe type" "temp"
                        (740934 'move' call_tmp[740931](289205 call buf[288863] used_buf[288868]))
                        (289206 call <=> call_tmp[740926] call_tmp[740931])
                        (490450 'end of statement' buf[288863] j[289115] buf[288863] used_buf[288868])
                      }
                      (289215 call += j[289115] 1)
                      (490455 'end of statement' j[289115])
                    }
                    label _continueLabel[289221]
                    unknown tmp[434497] "maybe param" "temp"
                    (434508 'move' tmp[434497](289231 call >= used_buf[288868] 0))
                    unknown call_tmp[740936] "expr temp" "maybe param" "maybe type" "temp"
                    (740939 'move' call_tmp[740936](434510 call _cond_invalid tmp[434497]))
                    if call_tmp[740936]
                    {
                      (434513 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580289] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580290] "maybe param" "temp"
                    unknown call_tmp[740941] "expr temp" "maybe param" "maybe type" "temp"
                    (740944 'move' call_tmp[740941](434498 call isTrue tmp[434497]))
                    (580295 'move' tmp[580290](580293 call _cond_test call_tmp[740941]))
                    if tmp[580290]
                    {
                      unknown tmp[580297] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[740946] "expr temp" "maybe param" "maybe type" "temp"
                      (740949 'move' call_tmp[740946](289235 call < j[289115] used_buf[288868]))
                      (580299 'move' tmp[580297](434501 call isTrue call_tmp[740946]))
                      (580304 'move' tmp[580289](580301 '_paramFoldLogical' tmp[580290] tmp[580297]))
                    }
                    {
                      (580309 'move' tmp[580289](580306 '_paramFoldLogical' tmp[580290] 0))
                    }
                    (289238 'move' tmp[289218](289227 call _cond_test tmp[580289]))
                    tmp[289218]
                  }
                  label _breakLabel[289222]
                }
              }
              label _continueLabel[289260]
              unknown call_tmp[740951] "expr temp" "maybe param" "maybe type" "temp"
              (740954 'move' call_tmp[740951](289270 call offsets[288230] curbin[288729]))
              unknown call_tmp[740956] "expr temp" "maybe param" "maybe type" "temp"
              (740959 'move' call_tmp[740956](289268 call < call_tmp[740951] end[288876]))
              (289273 'move' tmp[289257](289266 call _cond_test call_tmp[740956]))
              tmp[289257]
            }
            label _breakLabel[289261]
          }
        }
        label _continueLabel[289291]
        (289299 'move' tmp[289288](289297 call _cond_test 1))
        tmp[289288]
      }
      label _breakLabel[289292]
    }
    unknown call_tmp[740963] "expr temp" "maybe param" "maybe type" "temp"
    (740966 'move' call_tmp[740963](289310 call progress _mt[243] settings[288084]))
    unknown call_tmp[740968] "expr temp" "maybe param" "maybe type" "temp"
    (740971 'move' call_tmp[740968](289334 call _cond_test call_tmp[740963]))
    if call_tmp[740968]
    {
      (289332 call writeln "sort sub-problems")
    }
    unknown call_tmp[740973] "expr temp" "maybe param" "maybe type" "temp"
    (740976 'move' call_tmp[740973](289342 call offsets[288230] 0))
    (289344 call = call_tmp[740973] start_n[288059])
    (490459 'end of statement' offsets[288230])
    {
      unknown _indexOfInterest[289367] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289368] "expr temp" "temp"
      unknown call_tmp[740978] "expr temp" "maybe param" "maybe type" "temp"
      (740981 'move' call_tmp[740978](289382 call chpl_direct_range_iter 1 radix[288216] 1))
      (289377 'move' _iterator[289368](289375 call _getIterator call_tmp[740978]))
      Defer
      {
        {
          (289398 call _freeIterator _iterator[289368])
        }
      }
      { scopeless type
        (289387 'move' _indexOfInterest[289367](289384 call iteratorIndex _iterator[289368]))
      }
      ForLoop[289369]
      {
        unknown i[289391] "index var" "insert auto destroy"
        (490462 'end of statement')
        (289393 'move' i[289391] _indexOfInterest[289367])
        (490463 'end of statement' i[289391])
        {
          unknown call_tmp[740983] "expr temp" "maybe param" "maybe type" "temp"
          (740986 'move' call_tmp[740983](289355 call offsets[288230] i[289391]))
          unknown call_tmp[740988] "expr temp" "maybe param" "maybe type" "temp"
          (740991 'move' call_tmp[740988](289359 call - i[289391] 1))
          unknown call_tmp[740993] "expr temp" "maybe param" "maybe type" "temp"
          (740996 'move' call_tmp[740993](289362 call end_offsets[288244] call_tmp[740988]))
          (289363 call = call_tmp[740983] call_tmp[740993])
          (490465 'end of statement' offsets[288230] i[289391] end_offsets[288244] i[289391])
        }
        label _continueLabel[289372]
        _indexOfInterest[289367]
        _iterator[289368]
      }
      label _breakLabel[289373]
    }
    unknown call_tmp[741000] "expr temp" "maybe param" "maybe type" "temp"
    (741003 'move' call_tmp[741000](289406 call alwaysSerial _mt[243] settings[288084]))
    unknown call_tmp[741005] "expr temp" "maybe param" "maybe type" "temp"
    (741008 'move' call_tmp[741005](289410 call == call_tmp[741000] 0))
    unknown call_tmp[741010] "expr temp" "maybe param" "maybe type" "temp"
    (741013 'move' call_tmp[741010](289799 call _cond_test call_tmp[741005]))
    if call_tmp[741010]
    {
      unknown call_tmp[741015] "maybe param" "maybe type" "temp"
      (741018 'move' call_tmp[741015](289414 call + startbit[288077] radixbits[288205]))
      const subbits[289416] "dead at end of block" "const" "insert auto destroy"
      (549088 'init var' subbits[289416] call_tmp[741015])
      (289419 'end of statement')
      unknown nbigsubs[289422] "dead at end of block" "insert auto destroy"
      (549090 'init var' nbigsubs[289422] 0)
      (289425 'end of statement')
      unknown bigsubs[289440] "dead at end of block" "insert auto destroy"
      unknown call_tmp[741020] "expr temp" "maybe param" "maybe type" "temp"
      (741023 'move' call_tmp[741020](289428 call chpl_build_bounded_range 0 radix[288216]))
      unknown call_tmp[741025] "expr temp" "maybe param" "maybe type" "temp"
      (741028 'move' call_tmp[741025](289436 call chpl__ensureDomainExpr call_tmp[741020]))
      unknown call_tmp[741030] "expr temp" "maybe param" "maybe type" "temp"
      (741033 'move' call_tmp[741030](289434 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[741035] "expr temp" "maybe param" "maybe type" "temp"
      (741038 'move' call_tmp[741035](289438 call chpl__buildArrayRuntimeType call_tmp[741025] call_tmp[741030]))
      (549092 'default init var' bigsubs[289440] call_tmp[741035])
      (289443 'end of statement')
      unknown call_tmp[741040] "expr temp" "maybe param" "maybe type" "temp"
      (741043 'move' call_tmp[741040](364771 call here[90439]))
      unknown call_tmp[741047] "maybe param" "maybe type" "temp"
      (741050 'move' call_tmp[741047](289449 call(289445 call (partial) runningTasks _mt[243] call_tmp[741040])))
      const runningNow[289450] "dead at end of block" "const" "insert auto destroy"
      (549094 'init var' runningNow[289450] call_tmp[741047])
      (289453 'end of statement' radixbits[288205] radix[288216])
      {
        unknown _indexOfInterest[289577] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289578] "expr temp" "temp"
        unknown call_tmp[741052] "expr temp" "maybe param" "maybe type" "temp"
        (741055 'move' call_tmp[741052](289592 call - radix[288216] 1))
        unknown call_tmp[741057] "expr temp" "maybe param" "maybe type" "temp"
        (741060 'move' call_tmp[741057](289595 call chpl_direct_range_iter 1 call_tmp[741052] 1))
        (289587 'move' _iterator[289578](289585 call _getIterator call_tmp[741057]))
        Defer
        {
          {
            (289611 call _freeIterator _iterator[289578])
          }
        }
        { scopeless type
          (289600 'move' _indexOfInterest[289577](289597 call iteratorIndex _iterator[289578]))
        }
        ForLoop[289579]
        {
          unknown bin[289604] "index var" "insert auto destroy"
          (490473 'end of statement')
          (289606 'move' bin[289604] _indexOfInterest[289577])
          (490474 'end of statement' bin[289604])
          {
            unknown call_tmp[741062] "maybe param" "maybe type" "temp"
            (741065 'move' call_tmp[741062](289465 call offsets[288230] bin[289604]))
            const bin_start[289466] "dead at end of block" "const" "insert auto destroy"
            (549096 'init var' bin_start[289466] call_tmp[741062])
            (289469 'end of statement')
            const bin_end[289492] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580316] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580317] "maybe param" "temp"
            unknown call_tmp[741067] "expr temp" "maybe param" "maybe type" "temp"
            (741070 'move' call_tmp[741067](289473 call + bin[289604] 1))
            unknown call_tmp[741072] "expr temp" "maybe param" "maybe type" "temp"
            (741075 'move' call_tmp[741072](289476 call <= call_tmp[741067] radix[288216]))
            (580322 'move' tmp[580317](580320 call _cond_test call_tmp[741072]))
            if tmp[580317]
            {
              unknown tmp[580324] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741077] "expr temp" "maybe param" "maybe type" "temp"
              (741080 'move' call_tmp[741077](289481 call + bin[289604] 1))
              unknown call_tmp[741082] "expr temp" "maybe param" "maybe type" "temp"
              (741085 'move' call_tmp[741082](289484 call offsets[288230] call_tmp[741077]))
              (580326 'move' tmp[580324](289486 call - call_tmp[741082] 1))
              (580331 'move' tmp[580316](580328 '_paramFoldLogical' tmp[580317] tmp[580324]))
            }
            {
              (580336 'move' tmp[580316](580333 '_paramFoldLogical' tmp[580317] end_n[288065]))
            }
            (549098 'init var' bin_end[289492] tmp[580316])
            (289495 'end of statement')
            unknown call_tmp[741087] "expr temp" "maybe param" "maybe type" "temp"
            (741090 'move' call_tmp[741087](289498 call + 1 bin_end[289492]))
            unknown call_tmp[741092] "maybe param" "maybe type" "temp"
            (741095 'move' call_tmp[741092](289501 call - call_tmp[741087] bin_start[289466]))
            const num[289503] "dead at end of block" "const" "insert auto destroy"
            (549100 'init var' num[289503] call_tmp[741092])
            (289506 'end of statement' offsets[288230] bin[289604] bin[289604] radix[288216] offsets[288230] bin[289604] bin_end[289492] bin_start[289466])
            unknown tmp[434560] "maybe param" "temp"
            (434571 'move' tmp[434560](289509 call <= num[289503] 1))
            unknown call_tmp[741097] "expr temp" "maybe param" "maybe type" "temp"
            (741100 'move' call_tmp[741097](434573 call _cond_invalid tmp[434560]))
            if call_tmp[741097]
            {
              (434576 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580343] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580344] "maybe param" "temp"
            unknown call_tmp[741102] "expr temp" "maybe param" "maybe type" "temp"
            (741105 'move' call_tmp[741102](434561 call isTrue tmp[434560]))
            (580349 'move' tmp[580344](580347 call _cond_test call_tmp[741102]))
            if tmp[580344]
            {
              (580354 'move' tmp[580343](580351 '_paramFoldLogical' tmp[580344] 1))
            }
            {
              unknown tmp[580356] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741107] "expr temp" "maybe param" "maybe type" "temp"
              (741110 'move' call_tmp[741107](289513 call >= startbit[288077] endbit[288081]))
              (580358 'move' tmp[580356](434565 call isTrue call_tmp[741107]))
              (580363 'move' tmp[580343](580360 '_paramFoldLogical' tmp[580344] tmp[580356]))
            }
            unknown call_tmp[741112] "expr temp" "maybe param" "maybe type" "temp"
            (741115 'move' call_tmp[741112](289572 call _cond_test tmp[580343]))
            if call_tmp[741112]
            {
            }
            {
              unknown tmp[434539] "maybe param" "temp"
              unknown call_tmp[741119] "expr temp" "maybe param" "maybe type" "temp"
              (741122 'move' call_tmp[741119](289522 call minForTask _mt[243] settings[288084]))
              (434550 'move' tmp[434539](289525 call < num[289503] call_tmp[741119]))
              unknown call_tmp[741124] "expr temp" "maybe param" "maybe type" "temp"
              (741127 'move' call_tmp[741124](434552 call _cond_invalid tmp[434539]))
              if call_tmp[741124]
              {
                (434555 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580370] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580371] "maybe param" "temp"
              unknown call_tmp[741129] "expr temp" "maybe param" "maybe type" "temp"
              (741132 'move' call_tmp[741129](434540 call isTrue tmp[434539]))
              (580376 'move' tmp[580371](580374 call _cond_test call_tmp[741129]))
              if tmp[580371]
              {
                (580381 'move' tmp[580370](580378 '_paramFoldLogical' tmp[580371] 1))
              }
              {
                unknown tmp[580383] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741136] "expr temp" "maybe param" "maybe type" "temp"
                (741139 'move' call_tmp[741136](289531 call maxTasks _mt[243] settings[288084]))
                unknown call_tmp[741141] "expr temp" "maybe param" "maybe type" "temp"
                (741144 'move' call_tmp[741141](289534 call >= runningNow[289450] call_tmp[741136]))
                (580385 'move' tmp[580383](434544 call isTrue call_tmp[741141]))
                (580390 'move' tmp[580370](580387 '_paramFoldLogical' tmp[580371] tmp[580383]))
              }
              unknown call_tmp[741146] "expr temp" "maybe param" "maybe type" "temp"
              (741149 'move' call_tmp[741146](289568 call _cond_test tmp[580370]))
              if call_tmp[741146]
              {
                (289547 call msbRadixSort bin_start[289466] bin_end[289492] A[288071] criterion[288074] subbits[289416] endbit[288081] settings[288084])
                (490486 'end of statement' bin_start[289466] bin_end[289492] subbits[289416])
              }
              {
                unknown call_tmp[741151] "expr temp" "maybe param" "maybe type" "temp"
                (741154 'move' call_tmp[741151](289553 call bigsubs[289440] nbigsubs[289422]))
                unknown call_tmp[741156] "expr temp" "maybe param" "maybe type" "temp"
                (741159 'move' call_tmp[741156](289557 call _build_tuple bin_start[289466] bin_end[289492]))
                (289559 call = call_tmp[741151] call_tmp[741156])
                (490490 'end of statement' bigsubs[289440] nbigsubs[289422] bin_start[289466] bin_end[289492])
                (289565 call += nbigsubs[289422] 1)
                (490495 'end of statement' nbigsubs[289422])
              }
            }
          }
          label _continueLabel[289582]
          _indexOfInterest[289577]
          _iterator[289578]
        }
        label _breakLabel[289583]
      }
      unknown call_tmp[741161] "expr temp" "maybe param" "maybe type" "temp"
      (741164 'move' call_tmp[741161](289628 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741166] "expr temp" "maybe param" "maybe type" "temp"
      (741169 'move' call_tmp[741166](289631 call # call_tmp[741161] nbigsubs[289422]))
      Forall {
        induction variables:
          
          unknown bin[289649] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289651] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741166]
          bigsubs[289440]
        shadow variables:
        other variables
          forall body
        {
          (289656 call _check_tuple_var_decl chpl_idx_2[289651] 2)
          (490497 'end of statement')
          unknown bin_start[289662] "index var" "insert auto destroy"
          (490498 'end of statement')
          (289664 'move' bin_start[289662](289660 call chpl_idx_2[289651] 0))
          (490499 'end of statement' bin_start[289662])
          unknown bin_end[289669] "index var" "insert auto destroy"
          (490501 'end of statement')
          (289671 'move' bin_end[289669](289667 call chpl_idx_2[289651] 1))
          (490502 'end of statement' bin_end[289669])
          (289645 call msbRadixSort bin_start[289662] bin_end[289669] A[288071] criterion[288074] subbits[289416] endbit[288081] settings[288084])
          (490504 'end of statement' bin_start[289662] bin_end[289669] subbits[289416])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289757] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289758] "expr temp" "temp"
        unknown call_tmp[741171] "expr temp" "maybe param" "maybe type" "temp"
        (741174 'move' call_tmp[741171](289772 call - radix[288216] 1))
        unknown call_tmp[741176] "expr temp" "maybe param" "maybe type" "temp"
        (741179 'move' call_tmp[741176](289775 call chpl_direct_range_iter 1 call_tmp[741171] 1))
        (289767 'move' _iterator[289758](289765 call _getIterator call_tmp[741176]))
        Defer
        {
          {
            (289791 call _freeIterator _iterator[289758])
          }
        }
        { scopeless type
          (289780 'move' _indexOfInterest[289757](289777 call iteratorIndex _iterator[289758]))
        }
        ForLoop[289759]
        {
          unknown bin[289784] "index var" "insert auto destroy"
          (490509 'end of statement')
          (289786 'move' bin[289784] _indexOfInterest[289757])
          (490510 'end of statement' bin[289784])
          {
            unknown call_tmp[741181] "maybe param" "maybe type" "temp"
            (741184 'move' call_tmp[741181](289685 call offsets[288230] bin[289784]))
            const bin_start[289686] "dead at end of block" "const" "insert auto destroy"
            (549102 'init var' bin_start[289686] call_tmp[741181])
            (289689 'end of statement')
            const bin_end[289712] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580397] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580398] "maybe param" "temp"
            unknown call_tmp[741186] "expr temp" "maybe param" "maybe type" "temp"
            (741189 'move' call_tmp[741186](289693 call + bin[289784] 1))
            unknown call_tmp[741191] "expr temp" "maybe param" "maybe type" "temp"
            (741194 'move' call_tmp[741191](289696 call <= call_tmp[741186] radix[288216]))
            (580403 'move' tmp[580398](580401 call _cond_test call_tmp[741191]))
            if tmp[580398]
            {
              unknown tmp[580405] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741196] "expr temp" "maybe param" "maybe type" "temp"
              (741199 'move' call_tmp[741196](289701 call + bin[289784] 1))
              unknown call_tmp[741201] "expr temp" "maybe param" "maybe type" "temp"
              (741204 'move' call_tmp[741201](289704 call offsets[288230] call_tmp[741196]))
              (580407 'move' tmp[580405](289706 call - call_tmp[741201] 1))
              (580412 'move' tmp[580397](580409 '_paramFoldLogical' tmp[580398] tmp[580405]))
            }
            {
              (580417 'move' tmp[580397](580414 '_paramFoldLogical' tmp[580398] end_n[288065]))
            }
            (549104 'init var' bin_end[289712] tmp[580397])
            (289715 'end of statement')
            unknown call_tmp[741206] "expr temp" "maybe param" "maybe type" "temp"
            (741209 'move' call_tmp[741206](289718 call + 1 bin_end[289712]))
            unknown call_tmp[741211] "maybe param" "maybe type" "temp"
            (741214 'move' call_tmp[741211](289721 call - call_tmp[741206] bin_start[289686]))
            const num[289723] "dead at end of block" "const" "insert auto destroy"
            (549106 'init var' num[289723] call_tmp[741211])
            (289726 'end of statement' offsets[288230] bin[289784] bin[289784] radix[288216] offsets[288230] bin[289784] bin_end[289712] bin_start[289686])
            unknown tmp[434581] "maybe param" "temp"
            (434592 'move' tmp[434581](289729 call <= num[289723] 1))
            unknown call_tmp[741216] "expr temp" "maybe param" "maybe type" "temp"
            (741219 'move' call_tmp[741216](434594 call _cond_invalid tmp[434581]))
            if call_tmp[741216]
            {
              (434597 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580424] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580425] "maybe param" "temp"
            unknown call_tmp[741221] "expr temp" "maybe param" "maybe type" "temp"
            (741224 'move' call_tmp[741221](434582 call isTrue tmp[434581]))
            (580430 'move' tmp[580425](580428 call _cond_test call_tmp[741221]))
            if tmp[580425]
            {
              (580435 'move' tmp[580424](580432 '_paramFoldLogical' tmp[580425] 1))
            }
            {
              unknown tmp[580437] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741226] "expr temp" "maybe param" "maybe type" "temp"
              (741229 'move' call_tmp[741226](289733 call >= startbit[288077] endbit[288081]))
              (580439 'move' tmp[580437](434586 call isTrue call_tmp[741226]))
              (580444 'move' tmp[580424](580441 '_paramFoldLogical' tmp[580425] tmp[580437]))
            }
            unknown call_tmp[741231] "expr temp" "maybe param" "maybe type" "temp"
            (741234 'move' call_tmp[741231](289753 call _cond_test tmp[580424]))
            if call_tmp[741231]
            {
            }
            {
              unknown call_tmp[741236] "expr temp" "maybe param" "maybe type" "temp"
              (741239 'move' call_tmp[741236](289746 call + startbit[288077] radixbits[288205]))
              (289750 call msbRadixSort bin_start[289686] bin_end[289712] A[288071] criterion[288074] call_tmp[741236] endbit[288081] settings[288084])
              (490521 'end of statement' bin_start[289686] bin_end[289712] radixbits[288205])
            }
          }
          label _continueLabel[289762]
          _indexOfInterest[289757]
          _iterator[289758]
        }
        label _breakLabel[289763]
      }
    }
    unknown call_tmp[741243] "expr temp" "maybe param" "maybe type" "temp"
    (741246 'move' call_tmp[741243](289804 call CHECK_SORTS _mt[243] settings[288084]))
    unknown call_tmp[741248] "expr temp" "maybe param" "maybe type" "temp"
    (741251 'move' call_tmp[741248](289815 call _cond_test call_tmp[741243]))
    if call_tmp[741248]
    {
      (289813 call checkSorted start_n[288059] end_n[288065] A[288071] criterion[288074])
    }
    label _end_msbRadixSort[538205]
    (538207 return _void[55])
  }
  (355456 'used modules list'(353109 'use' ChapelStandard[20264])(287922 'import' Sort[267885].{defaultComparator, ShellSort})(287929 'use' RadixSortHelp[275991]))
}