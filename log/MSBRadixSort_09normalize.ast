AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416186]() : void[4] "insert line file info" "module init"
  {
    (538206 return _void[55])
  }
  type MSBRadixSortSettings[288069](?) unknown DISTRIBUTE_BUFFER[288031] "param" 5 const-val sortSwitch[288036]:int(64)[13] "const" 256 const-val minForTask[288041]:int(64)[13] "const" 256 unknown CHECK_SORTS[288046] "param" 0 unknown progress[288051] "param" 0 const-val alwaysSerial[288056]:bool[10] "const" 0 const maxTasks[288064] "const"(288061 call maxTaskPar _mt[243](364737 call here[90438]))
  function msbRadixSort[288080](arg Data[288077]:_array[133594](?), arg comparator[288085]:_any[178](?) :
  defaultComparator[267998] =
  defaultComparator[267998]) : _unknown[51] "no return value for void"
  {
    unknown endbit[288090] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548997] "maybe param" "maybe type" "temp"
    (549003 'move' type_tmp[548997] int(64)[13])
    (548999 'init var split decl' endbit[288090] type_tmp[548997])
    (288093 'end of statement')
    unknown call_tmp[740253] "maybe param" "maybe type" "temp"
    (740256 'move' call_tmp[740253](288100 call msbRadixSortParamLastStartBit Data[288077] comparator[288085]))
    (549005 'init var split init' endbit[288090] call_tmp[740253] type_tmp[548997])
    (490311 'end of statement' endbit[288090])
    unknown call_tmp[740258] "expr temp" "maybe param" "maybe type" "temp"
    (740261 'move' call_tmp[740258](288106 call < endbit[288090] 0))
    unknown call_tmp[740263] "expr temp" "maybe param" "maybe type" "temp"
    (740266 'move' call_tmp[740263](288116 call _cond_test call_tmp[740258]))
    if call_tmp[740263]
    {
      unknown call_tmp[740268] "expr temp" "maybe param" "maybe type" "temp"
      (740271 'move' call_tmp[740268](288112 call max int(64)[13]))
      (288113 call = endbit[288090] call_tmp[740268])
      (490313 'end of statement' endbit[288090])
    }
    unknown call_tmp[740275] "expr temp" "maybe param" "maybe type" "temp"
    (740278 'move' call_tmp[740275](288123 call _dom _mt[243] Data[288077]))
    unknown call_tmp[740282] "expr temp" "maybe param" "maybe type" "temp"
    (740285 'move' call_tmp[740282](288126 call low _mt[243] call_tmp[740275]))
    unknown call_tmp[740289] "expr temp" "maybe param" "maybe type" "temp"
    (740292 'move' call_tmp[740289](288132 call _dom _mt[243] Data[288077]))
    unknown call_tmp[740296] "expr temp" "maybe param" "maybe type" "temp"
    (740299 'move' call_tmp[740296](288135 call high _mt[243] call_tmp[740289]))
    unknown call_tmp[740301] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740304 'move' call_tmp[740301](748168 'new' MSBRadixSortSettings[288069](?)))
    (288150 call msbRadixSort(start_n = call_tmp[740282])(end_n = call_tmp[740296]) Data[288077] comparator[288085](startbit = 0)(endbit = endbit[288090])(settings = call_tmp[740301]))
    (490315 'end of statement' endbit[288090])
    (538194 return _void[55])
  }
  function msbRadixSort[288160](arg start_n[288157]:int(64)[13], arg end_n[288163]:int(64)[13], arg A[288169]:_array[133594](?), arg criterion[288172]:_any[178](?), arg startbit[288175]:int(64)[13], arg endbit[288179]:int(64)[13], arg settings[288182]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740306] "expr temp" "maybe param" "maybe type" "temp"
    (740309 'move' call_tmp[740306](288186 call > startbit[288175] endbit[288179]))
    unknown call_tmp[740311] "expr temp" "maybe param" "maybe type" "temp"
    (740314 'move' call_tmp[740311](288190 call _cond_test call_tmp[740306]))
    if call_tmp[740311]
    {
      gotoReturn _end_msbRadixSort[538196] _end_msbRadixSort[538196]
    }
    unknown call_tmp[740316] "expr temp" "maybe param" "maybe type" "temp"
    (740319 'move' call_tmp[740316](288198 call - end_n[288163] start_n[288157]))
    unknown call_tmp[740323] "expr temp" "maybe param" "maybe type" "temp"
    (740326 'move' call_tmp[740323](288203 call sortSwitch _mt[243] settings[288182]))
    unknown call_tmp[740328] "expr temp" "maybe param" "maybe type" "temp"
    (740331 'move' call_tmp[740328](288206 call < call_tmp[740316] call_tmp[740323]))
    unknown call_tmp[740333] "expr temp" "maybe param" "maybe type" "temp"
    (740336 'move' call_tmp[740333](288243 call _cond_test call_tmp[740328]))
    if call_tmp[740333]
    {
      (288219 call shellSort module=[255] ShellSort[273543] A[288169] criterion[288172](start = start_n[288157])(end = end_n[288163]))
      (490318 'end of statement')
      unknown call_tmp[740340] "expr temp" "maybe param" "maybe type" "temp"
      (740343 'move' call_tmp[740340](288225 call CHECK_SORTS _mt[243] settings[288182]))
      unknown call_tmp[740345] "expr temp" "maybe param" "maybe type" "temp"
      (740348 'move' call_tmp[740345](288236 call _cond_test call_tmp[740340]))
      if call_tmp[740345]
      {
        (288234 call checkSorted start_n[288157] end_n[288163] A[288169] criterion[288172])
      }
      gotoReturn _end_msbRadixSort[538196] _end_msbRadixSort[538196]
      (364743 'referenced modules list' ShellSort[273543])
    }
    unknown call_tmp[740352] "expr temp" "maybe param" "maybe type" "temp"
    (740355 'move' call_tmp[740352](288250 call progress _mt[243] settings[288182]))
    unknown call_tmp[740357] "expr temp" "maybe param" "maybe type" "temp"
    (740360 'move' call_tmp[740357](288297 call _cond_test call_tmp[740352]))
    if call_tmp[740357]
    {
      (288295 call writeln "radix sort start=" start_n[288157] " end=" end_n[288163] " startbit=" startbit[288175] " endbit=" endbit[288179])
    }
    const radixbits[288303] "dead at end of block" "const" "insert auto destroy"
    (549008 'init var' radixbits[288303] RADIX_BITS[276109])
    (288306 'end of statement')
    unknown call_tmp[740362] "expr temp" "maybe param" "maybe type" "temp"
    (740365 'move' call_tmp[740362](288309 call << 1 radixbits[288303]))
    unknown call_tmp[740367] "maybe param" "maybe type" "temp"
    (740370 'move' call_tmp[740367](288312 call + call_tmp[740362] 1))
    const radix[288314] "dead at end of block" "const" "insert auto destroy"
    (549010 'init var' radix[288314] call_tmp[740367])
    (288317 'end of statement')
    unknown offsets[288328] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740372] "expr temp" "maybe param" "maybe type" "temp"
    (740375 'move' call_tmp[740372](288320 call chpl_build_bounded_range 0 radix[288314]))
    unknown call_tmp[740377] "expr temp" "maybe param" "maybe type" "temp"
    (740380 'move' call_tmp[740377](288324 call chpl__ensureDomainExpr call_tmp[740372]))
    unknown call_tmp[740382] "expr temp" "maybe param" "maybe type" "temp"
    (740385 'move' call_tmp[740382](288326 call chpl__buildArrayRuntimeType call_tmp[740377] int(64)[13]))
    (549012 'default init var' offsets[288328] call_tmp[740382])
    (288331 'end of statement')
    unknown end_offsets[288342] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740387] "expr temp" "maybe param" "maybe type" "temp"
    (740390 'move' call_tmp[740387](288334 call chpl_build_bounded_range 0 radix[288314]))
    unknown call_tmp[740392] "expr temp" "maybe param" "maybe type" "temp"
    (740395 'move' call_tmp[740392](288338 call chpl__ensureDomainExpr call_tmp[740387]))
    unknown call_tmp[740397] "expr temp" "maybe param" "maybe type" "temp"
    (740400 'move' call_tmp[740397](288340 call chpl__buildArrayRuntimeType call_tmp[740392] int(64)[13]))
    (549014 'default init var' end_offsets[288342] call_tmp[740397])
    (288345 'end of statement')
    { scopeless type
      unknown call_type_tmp[493281] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740402] "expr temp" "maybe param" "maybe type" "temp"
      (740405 'move' call_tmp[740402](288350 call A[288169] start_n[288157]))
      unknown call_tmp[740407] "expr temp" "maybe param" "maybe type" "temp"
      (740410 'move' call_tmp[740407](288354 call binForRecord call_tmp[740402] criterion[288172] startbit[288175]))
      unknown call_tmp[740412] "expr temp" "maybe param" "maybe type" "temp"
      (740415 'move' call_tmp[740412](288357 call call_tmp[740407] 1))
      (493285 'move' call_type_tmp[493281](288358 'typeof' call_tmp[740412]))
    }
    unknown ubitsType[288359] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493281]
    (549017 'move' ubitsType[288359] call_type_tmp[493281])
    unknown call_tmp[740417] "maybe param" "maybe type" "temp"
    (740420 'move' call_tmp[740417](288366 call max ubitsType[288359]))
    unknown min_ubits[288367] "dead at end of block" "insert auto destroy"
    (549019 'init var' min_ubits[288367] call_tmp[740417] ubitsType[288359])
    (288370 'end of statement')
    unknown max_ubits[288373] "dead at end of block" "insert auto destroy"
    (549021 'init var' max_ubits[288373] 0 ubitsType[288359])
    (288376 'end of statement')
    unknown call_tmp[740422] "maybe param" "maybe type" "temp"
    (740425 'move' call_tmp[740422](288379 call + radix[288314] 1))
    unknown min_bin[288381] "dead at end of block" "insert auto destroy"
    (549023 'init var' min_bin[288381] call_tmp[740422])
    (288384 'end of statement')
    unknown max_bin[288386] "dead at end of block" "insert auto destroy"
    (549025 'init var' max_bin[288386] 0)
    (288389 'end of statement')
    unknown any_ending[288391] "dead at end of block" "insert auto destroy"
    (549027 'init var' any_ending[288391] 0)
    (288394 'end of statement')
    unknown call_tmp[740429] "expr temp" "maybe param" "maybe type" "temp"
    (740432 'move' call_tmp[740429](288398 call alwaysSerial _mt[243] settings[288182]))
    unknown call_tmp[740434] "expr temp" "maybe param" "maybe type" "temp"
    (740437 'move' call_tmp[740434](288402 call == call_tmp[740429] 0))
    unknown call_tmp[740439] "expr temp" "maybe param" "maybe type" "temp"
    (740442 'move' call_tmp[740439](288656 call _cond_test call_tmp[740434]))
    if call_tmp[740439]
    {
      unknown call_tmp[740444] "expr temp" "maybe param" "maybe type" "temp"
      (740447 'move' call_tmp[740444](288407 call chpl_build_bounded_range start_n[288157] end_n[288163]))
      Forall {
        induction variables:
          
          unknown i[288523] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740444]
        shadow variables:
          offsets[288411] 'reduce' intent outer var offsets[288328]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288419] 'reduce' intent outer var min_ubits[288367]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288426] 'reduce' intent outer var max_ubits[288373]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288433] 'reduce' intent outer var any_ending[288391]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740449] "expr temp" "maybe param" "maybe type" "temp"
          (740452 'move' call_tmp[740449](288447 call A[288169] i[288523]))
          unknown call_tmp[740454] "maybe param" "maybe type" "temp"
          (740457 'move' call_tmp[740454](288451 call binForRecord call_tmp[740449] criterion[288172] startbit[288175]))
          const tmp[288452] "dead at end of block" "const" "insert auto destroy" "temp"
          (549029 'init var' tmp[288452] call_tmp[740454])
          (288459 call _check_tuple_var_decl tmp[288452] 2)
          (490329 'end of statement')
          unknown call_tmp[740459] "maybe param" "maybe type" "temp"
          (740462 'move' call_tmp[740459](288453 call tmp[288452] 0))
          const bin[288438] "dead at end of block" "const" "insert auto destroy"
          (549031 'init var' bin[288438] call_tmp[740459])
          unknown call_tmp[740464] "maybe param" "maybe type" "temp"
          (740467 'move' call_tmp[740464](288456 call tmp[288452] 1))
          const ubits[288440] "dead at end of block" "const" "insert auto destroy"
          (549033 'init var' ubits[288440] call_tmp[740464])
          (288464 'end of statement')
          unknown call_tmp[740469] "expr temp" "maybe param" "maybe type" "temp"
          (740472 'move' call_tmp[740469](288468 call < ubits[288440] min_ubits[288419]))
          unknown call_tmp[740474] "expr temp" "maybe param" "maybe type" "temp"
          (740477 'move' call_tmp[740474](288475 call _cond_test call_tmp[740469]))
          if call_tmp[740474]
          {
            (288472 call = min_ubits[288419] ubits[288440])
            (490330 'end of statement' min_ubits[288419] ubits[288440])
          }
          unknown call_tmp[740479] "expr temp" "maybe param" "maybe type" "temp"
          (740482 'move' call_tmp[740479](288482 call > ubits[288440] max_ubits[288426]))
          unknown call_tmp[740484] "expr temp" "maybe param" "maybe type" "temp"
          (740487 'move' call_tmp[740484](288489 call _cond_test call_tmp[740479]))
          if call_tmp[740484]
          {
            (288486 call = max_ubits[288426] ubits[288440])
            (490333 'end of statement' max_ubits[288426] ubits[288440])
          }
          unknown tmp[434377] "maybe param" "temp"
          (434388 'move' tmp[434377](288496 call == bin[288438] 0))
          unknown call_tmp[740489] "expr temp" "maybe param" "maybe type" "temp"
          (740492 'move' call_tmp[740489](434390 call _cond_invalid tmp[434377]))
          if call_tmp[740489]
          {
            (434393 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[580118] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[580119] "maybe param" "temp"
          unknown call_tmp[740494] "expr temp" "maybe param" "maybe type" "temp"
          (740497 'move' call_tmp[740494](434378 call isTrue tmp[434377]))
          (580124 'move' tmp[580119](580122 call _cond_test call_tmp[740494]))
          if tmp[580119]
          {
            (580129 'move' tmp[580118](580126 '_paramFoldLogical' tmp[580119] 1))
          }
          {
            unknown tmp[580131] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740499] "expr temp" "maybe param" "maybe type" "temp"
            (740502 'move' call_tmp[740499](288500 call == bin[288438] radix[288314]))
            (580133 'move' tmp[580131](434382 call isTrue call_tmp[740499]))
            (580138 'move' tmp[580118](580135 '_paramFoldLogical' tmp[580119] tmp[580131]))
          }
          unknown call_tmp[740504] "expr temp" "maybe param" "maybe type" "temp"
          (740507 'move' call_tmp[740504](288509 call _cond_test tmp[580118]))
          if call_tmp[740504]
          {
            (288506 call = any_ending[288433] 1)
            (490337 'end of statement' any_ending[288433])
          }
          unknown call_tmp[740509] "expr temp" "maybe param" "maybe type" "temp"
          (740512 'move' call_tmp[740509](288517 call offsets[288411] bin[288438]))
          (288519 call += call_tmp[740509] 1)
          (490339 'end of statement' offsets[288411] bin[288438])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288617] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288618] "expr temp" "temp"
        unknown call_tmp[740514] "expr temp" "maybe param" "maybe type" "temp"
        (740517 'move' call_tmp[740514](288632 call chpl_direct_range_iter start_n[288157] end_n[288163] 1))
        (288627 'move' _iterator[288618](288625 call _getIterator call_tmp[740514]))
        Defer
        {
          {
            (288648 call _freeIterator _iterator[288618])
          }
        }
        { scopeless type
          (288637 'move' _indexOfInterest[288617](288634 call iteratorIndex _iterator[288618]))
        }
        ForLoop[288619]
        {
          unknown i[288641] "index var" "insert auto destroy"
          (490343 'end of statement')
          (288643 'move' i[288641] _indexOfInterest[288617])
          (490344 'end of statement' i[288641])
          {
            unknown call_tmp[740519] "expr temp" "maybe param" "maybe type" "temp"
            (740522 'move' call_tmp[740519](288542 call A[288169] i[288641]))
            unknown call_tmp[740524] "maybe param" "maybe type" "temp"
            (740527 'move' call_tmp[740524](288546 call binForRecord call_tmp[740519] criterion[288172] startbit[288175]))
            const tmp[288547] "dead at end of block" "const" "insert auto destroy" "temp"
            (549035 'init var' tmp[288547] call_tmp[740524])
            (288554 call _check_tuple_var_decl tmp[288547] 2)
            (490346 'end of statement')
            unknown call_tmp[740529] "maybe param" "maybe type" "temp"
            (740532 'move' call_tmp[740529](288548 call tmp[288547] 0))
            const bin[288533] "dead at end of block" "const" "insert auto destroy"
            (549037 'init var' bin[288533] call_tmp[740529])
            unknown call_tmp[740534] "maybe param" "maybe type" "temp"
            (740537 'move' call_tmp[740534](288551 call tmp[288547] 1))
            const ubits[288535] "dead at end of block" "const" "insert auto destroy"
            (549039 'init var' ubits[288535] call_tmp[740534])
            (288559 'end of statement')
            unknown call_tmp[740539] "expr temp" "maybe param" "maybe type" "temp"
            (740542 'move' call_tmp[740539](288563 call < ubits[288535] min_ubits[288367]))
            unknown call_tmp[740544] "expr temp" "maybe param" "maybe type" "temp"
            (740547 'move' call_tmp[740544](288570 call _cond_test call_tmp[740539]))
            if call_tmp[740544]
            {
              (288567 call = min_ubits[288367] ubits[288535])
              (490347 'end of statement' min_ubits[288367] ubits[288535])
            }
            unknown call_tmp[740549] "expr temp" "maybe param" "maybe type" "temp"
            (740552 'move' call_tmp[740549](288577 call > ubits[288535] max_ubits[288373]))
            unknown call_tmp[740554] "expr temp" "maybe param" "maybe type" "temp"
            (740557 'move' call_tmp[740554](288584 call _cond_test call_tmp[740549]))
            if call_tmp[740554]
            {
              (288581 call = max_ubits[288373] ubits[288535])
              (490350 'end of statement' max_ubits[288373] ubits[288535])
            }
            unknown tmp[434398] "maybe param" "temp"
            (434409 'move' tmp[434398](288591 call == bin[288533] 0))
            unknown call_tmp[740559] "expr temp" "maybe param" "maybe type" "temp"
            (740562 'move' call_tmp[740559](434411 call _cond_invalid tmp[434398]))
            if call_tmp[740559]
            {
              (434414 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580145] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580146] "maybe param" "temp"
            unknown call_tmp[740564] "expr temp" "maybe param" "maybe type" "temp"
            (740567 'move' call_tmp[740564](434399 call isTrue tmp[434398]))
            (580151 'move' tmp[580146](580149 call _cond_test call_tmp[740564]))
            if tmp[580146]
            {
              (580156 'move' tmp[580145](580153 '_paramFoldLogical' tmp[580146] 1))
            }
            {
              unknown tmp[580158] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740569] "expr temp" "maybe param" "maybe type" "temp"
              (740572 'move' call_tmp[740569](288595 call == bin[288533] radix[288314]))
              (580160 'move' tmp[580158](434403 call isTrue call_tmp[740569]))
              (580165 'move' tmp[580145](580162 '_paramFoldLogical' tmp[580146] tmp[580158]))
            }
            unknown call_tmp[740574] "expr temp" "maybe param" "maybe type" "temp"
            (740577 'move' call_tmp[740574](288604 call _cond_test tmp[580145]))
            if call_tmp[740574]
            {
              (288601 call = any_ending[288391] 1)
              (490354 'end of statement' any_ending[288391])
            }
            unknown call_tmp[740579] "expr temp" "maybe param" "maybe type" "temp"
            (740582 'move' call_tmp[740579](288612 call offsets[288328] bin[288533]))
            (288614 call += call_tmp[740579] 1)
            (490356 'end of statement' offsets[288328] bin[288533])
          }
          label _continueLabel[288622]
          _indexOfInterest[288617]
          _iterator[288618]
        }
        label _breakLabel[288623]
      }
    }
    unknown call_tmp[740584] "expr temp" "maybe param" "maybe type" "temp"
    (740587 'move' call_tmp[740584](288662 call == any_ending[288391] 0))
    unknown call_tmp[740589] "expr temp" "maybe param" "maybe type" "temp"
    (740592 'move' call_tmp[740589](288697 call _cond_test call_tmp[740584]))
    if call_tmp[740589]
    {
      unknown call_tmp[740594] "maybe param" "maybe type" "temp"
      (740597 'move' call_tmp[740594](288669 call findDataStartBit startbit[288175] min_ubits[288367] max_ubits[288373]))
      unknown dataStartBit[288670] "dead at end of block" "insert auto destroy"
      (549041 'init var' dataStartBit[288670] call_tmp[740594])
      (288673 'end of statement' min_ubits[288367] max_ubits[288373])
      unknown call_tmp[740599] "expr temp" "maybe param" "maybe type" "temp"
      (740602 'move' call_tmp[740599](288677 call > dataStartBit[288670] startbit[288175]))
      unknown call_tmp[740604] "expr temp" "maybe param" "maybe type" "temp"
      (740607 'move' call_tmp[740604](288693 call _cond_test call_tmp[740599]))
      if call_tmp[740604]
      {
        (288688 call msbRadixSort start_n[288157] end_n[288163] A[288169] criterion[288172] dataStartBit[288670] endbit[288179] settings[288182])
        (490361 'end of statement' dataStartBit[288670])
        gotoReturn _end_msbRadixSort[538196] _end_msbRadixSort[538196]
      }
    }
    unknown call_tmp[740611] "expr temp" "maybe param" "maybe type" "temp"
    (740614 'move' call_tmp[740611](288702 call progress _mt[243] settings[288182]))
    unknown call_tmp[740616] "expr temp" "maybe param" "maybe type" "temp"
    (740619 'move' call_tmp[740616](288724 call _cond_test call_tmp[740611]))
    if call_tmp[740616]
    {
      (288722 call writeln "accumulate")
    }
    unknown sum[288730] "dead at end of block" "insert auto destroy"
    (549043 'init var' sum[288730] 0)
    (288733 'end of statement')
    {
      unknown _indexOfInterest[288775] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288776] "expr temp" "temp"
      unknown call_tmp[740621] "expr temp" "maybe param" "maybe type" "temp"
      (740624 'move' call_tmp[740621](288785 call _getIterator offsets[288328]))
      unknown call_tmp[740626] "expr temp" "maybe param" "maybe type" "temp"
      (740629 'move' call_tmp[740626](288788 call _getIterator end_offsets[288342]))
      (288790 'move' _iterator[288776](288742 call _build_tuple call_tmp[740621] call_tmp[740626]))
      Defer
      {
        {
          (288820 call _freeIterator _iterator[288776])
        }
      }
      { scopeless type
        (288795 'move' _indexOfInterest[288775](288792 call iteratorIndex _iterator[288776]))
      }
      ForLoop[288777]
      {
        (288800 call _check_tuple_var_decl _indexOfInterest[288775] 2)
        (490366 'end of statement')
        unknown off[288806] "index var" "insert auto destroy"
        (490367 'end of statement')
        (288808 'move' off[288806](288804 call _indexOfInterest[288775] 0))
        (490368 'end of statement' off[288806])
        unknown end[288813] "index var" "insert auto destroy"
        (490370 'end of statement')
        (288815 'move' end[288813](288811 call _indexOfInterest[288775] 1))
        (490371 'end of statement' end[288813])
        {
          unknown binstart[288744] "dead at end of block" "insert auto destroy"
          (549045 'init var' binstart[288744] sum[288730])
          (288747 'end of statement')
          (288751 call += sum[288730] off[288806])
          (490374 'end of statement' sum[288730] off[288806])
          unknown binend[288755] "dead at end of block" "insert auto destroy"
          (549047 'init var' binend[288755] sum[288730])
          (288758 'end of statement' sum[288730] sum[288730])
          unknown call_tmp[740631] "expr temp" "maybe param" "maybe type" "temp"
          (740634 'move' call_tmp[740631](288762 call + start_n[288157] binstart[288744]))
          (288764 call = off[288806] call_tmp[740631])
          (490378 'end of statement' off[288806] binstart[288744])
          unknown call_tmp[740636] "expr temp" "maybe param" "maybe type" "temp"
          (740639 'move' call_tmp[740636](288770 call + start_n[288157] binend[288755]))
          (288772 call = end[288813] call_tmp[740636])
          (490381 'end of statement' end[288813] binend[288755])
        }
        label _continueLabel[288780]
        _indexOfInterest[288775]
        _iterator[288776]
      }
      label _breakLabel[288781]
    }
    unknown curbin[288828] "dead at end of block" "insert auto destroy"
    (549049 'init var' curbin[288828] 0)
    (288831 'end of statement' radixbits[288303] radix[288314] radix[288314] ubitsType[288359] ubitsType[288359] ubitsType[288359] radix[288314])
    unknown call_tmp[740643] "expr temp" "maybe param" "maybe type" "temp"
    (740646 'move' call_tmp[740643](288833 call progress _mt[243] settings[288182]))
    unknown call_tmp[740648] "expr temp" "maybe param" "maybe type" "temp"
    (740651 'move' call_tmp[740648](288857 call _cond_test call_tmp[740643]))
    if call_tmp[740648]
    {
      (288855 call writeln "shuffle")
    }
    {
      unknown tmp[289387] "temp"
      (289405 'move' tmp[289387](289403 call _cond_test 1))
      WhileDo[289392]
      {
        {
          {
            unknown tmp[288885] "temp"
            unknown tmp[434440] "maybe param" "temp"
            (434451 'move' tmp[434440](288918 call <= curbin[288828] radix[288314]))
            unknown call_tmp[740653] "expr temp" "maybe param" "maybe type" "temp"
            (740656 'move' call_tmp[740653](434453 call _cond_invalid tmp[434440]))
            if call_tmp[740653]
            {
              (434456 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580172] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580173] "maybe param" "temp"
            unknown call_tmp[740658] "expr temp" "maybe param" "maybe type" "temp"
            (740661 'move' call_tmp[740658](434441 call isTrue tmp[434440]))
            (580178 'move' tmp[580173](580176 call _cond_test call_tmp[740658]))
            if tmp[580173]
            {
              unknown tmp[580180] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740663] "expr temp" "maybe param" "maybe type" "temp"
              (740666 'move' call_tmp[740663](288924 call offsets[288328] curbin[288828]))
              unknown call_tmp[740668] "expr temp" "maybe param" "maybe type" "temp"
              (740671 'move' call_tmp[740668](288927 call end_offsets[288342] curbin[288828]))
              unknown call_tmp[740673] "expr temp" "maybe param" "maybe type" "temp"
              (740676 'move' call_tmp[740673](288922 call == call_tmp[740663] call_tmp[740668]))
              (580182 'move' tmp[580180](434444 call isTrue call_tmp[740673]))
              (580187 'move' tmp[580172](580184 '_paramFoldLogical' tmp[580173] tmp[580180]))
            }
            {
              (580192 'move' tmp[580172](580189 '_paramFoldLogical' tmp[580173] 0))
            }
            (288929 'move' tmp[288885](288914 call _cond_test tmp[580172]))
            WhileDo[288890]
            {
              {
                (288881 call += curbin[288828] 1)
                (490386 'end of statement' curbin[288828])
              }
              label _continueLabel[288888]
              unknown tmp[434419] "maybe param" "temp"
              (434430 'move' tmp[434419](288898 call <= curbin[288828] radix[288314]))
              unknown call_tmp[740678] "expr temp" "maybe param" "maybe type" "temp"
              (740681 'move' call_tmp[740678](434432 call _cond_invalid tmp[434419]))
              if call_tmp[740678]
              {
                (434435 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580199] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580200] "maybe param" "temp"
              unknown call_tmp[740683] "expr temp" "maybe param" "maybe type" "temp"
              (740686 'move' call_tmp[740683](434420 call isTrue tmp[434419]))
              (580205 'move' tmp[580200](580203 call _cond_test call_tmp[740683]))
              if tmp[580200]
              {
                unknown tmp[580207] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740688] "expr temp" "maybe param" "maybe type" "temp"
                (740691 'move' call_tmp[740688](288904 call offsets[288328] curbin[288828]))
                unknown call_tmp[740693] "expr temp" "maybe param" "maybe type" "temp"
                (740696 'move' call_tmp[740693](288907 call end_offsets[288342] curbin[288828]))
                unknown call_tmp[740698] "expr temp" "maybe param" "maybe type" "temp"
                (740701 'move' call_tmp[740698](288902 call == call_tmp[740688] call_tmp[740693]))
                (580209 'move' tmp[580207](434423 call isTrue call_tmp[740698]))
                (580214 'move' tmp[580199](580211 '_paramFoldLogical' tmp[580200] tmp[580207]))
              }
              {
                (580219 'move' tmp[580199](580216 '_paramFoldLogical' tmp[580200] 0))
              }
              (288909 'move' tmp[288885](288894 call _cond_test tmp[580199]))
              tmp[288885]
            }
            label _breakLabel[288889]
          }
          unknown call_tmp[740703] "expr temp" "maybe param" "maybe type" "temp"
          (740706 'move' call_tmp[740703](288935 call > curbin[288828] radix[288314]))
          unknown call_tmp[740708] "expr temp" "maybe param" "maybe type" "temp"
          (740711 'move' call_tmp[740708](288941 call _cond_test call_tmp[740703]))
          if call_tmp[740708]
          {
            break _breakLabel[289391] _breakLabel[289391]
          }
          unknown call_tmp[740715] "maybe param" "maybe type" "temp"
          (740718 'move' call_tmp[740715](288948 call DISTRIBUTE_BUFFER _mt[243] settings[288182]))
          unknown max_buf[288951] "dead at end of block" "param"
          (549051 'init var' max_buf[288951] call_tmp[740715])
          (288954 'end of statement')
          unknown buf[288962] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740722] "expr temp" "maybe param" "maybe type" "temp"
          (740725 'move' call_tmp[740722](288957 call eltType _mt[243] A[288169]))
          unknown call_tmp[740727] "expr temp" "maybe param" "maybe type" "temp"
          (740730 'move' call_tmp[740727](288960 call * max_buf[288951] call_tmp[740722]))
          (549053 'default init var' buf[288962] call_tmp[740727])
          (288965 'end of statement')
          unknown used_buf[288967] "dead at end of block" "insert auto destroy"
          (549055 'init var' used_buf[288967] 0)
          (288970 'end of statement')
          unknown call_tmp[740732] "maybe param" "maybe type" "temp"
          (740735 'move' call_tmp[740732](288974 call end_offsets[288342] curbin[288828]))
          unknown end[288975] "dead at end of block" "insert auto destroy"
          (549057 'init var' end[288975] call_tmp[740732])
          (288978 'end of statement')
          unknown call_tmp[740737] "expr temp" "maybe param" "maybe type" "temp"
          (740740 'move' call_tmp[740737](288983 call offsets[288328] curbin[288828]))
          unknown call_tmp[740742] "expr temp" "maybe param" "maybe type" "temp"
          (740745 'move' call_tmp[740742](288988 call end_offsets[288342] curbin[288828]))
          unknown call_tmp[740747] "expr temp" "maybe param" "maybe type" "temp"
          (740750 'move' call_tmp[740747](288991 call * 2 max_buf[288951]))
          unknown call_tmp[740752] "expr temp" "maybe param" "maybe type" "temp"
          (740755 'move' call_tmp[740752](288993 call - call_tmp[740742] call_tmp[740747]))
          unknown call_tmp[740757] "maybe param" "maybe type" "temp"
          (740760 'move' call_tmp[740757](288995 call max call_tmp[740737] call_tmp[740752]))
          unknown endfast[288996] "dead at end of block" "insert auto destroy"
          (549059 'init var' endfast[288996] call_tmp[740757])
          (288999 'end of statement')
          unknown call_tmp[740762] "expr temp" "maybe param" "maybe type" "temp"
          (740765 'move' call_tmp[740762](289004 call offsets[288328] curbin[288828]))
          unknown call_tmp[740767] "expr temp" "maybe param" "maybe type" "temp"
          (740770 'move' call_tmp[740767](289009 call end_offsets[288342] curbin[288828]))
          unknown call_tmp[740772] "expr temp" "maybe param" "maybe type" "temp"
          (740775 'move' call_tmp[740772](289011 call - call_tmp[740767] max_buf[288951]))
          unknown call_tmp[740777] "maybe param" "maybe type" "temp"
          (740780 'move' call_tmp[740777](289013 call max call_tmp[740762] call_tmp[740772]))
          unknown bufstart[289014] "dead at end of block" "insert auto destroy"
          (549061 'init var' bufstart[289014] call_tmp[740777])
          (289017 'end of statement')
          unknown i[289019] "dead at end of block" "insert auto destroy"
          (549063 'init var' i[289019] bufstart[289014])
          (289022 'end of statement' end_offsets[288342] curbin[288828] offsets[288328] curbin[288828] end_offsets[288342] curbin[288828] offsets[288328] curbin[288828] end_offsets[288342] curbin[288828] bufstart[289014])
          {
            unknown tmp[289049] "temp"
            unknown call_tmp[740782] "expr temp" "maybe param" "maybe type" "temp"
            (740785 'move' call_tmp[740782](289070 call < i[289019] end[288975]))
            (289073 'move' tmp[289049](289068 call _cond_test call_tmp[740782]))
            WhileDo[289054]
            {
              {
                unknown call_tmp[740787] "expr temp" "maybe param" "maybe type" "temp"
                (740790 'move' call_tmp[740787](289030 call buf[288962] used_buf[288967]))
                unknown call_tmp[740792] "expr temp" "maybe param" "maybe type" "temp"
                (740795 'move' call_tmp[740792](289034 call A[288169] i[289019]))
                (289035 call <=> call_tmp[740787] call_tmp[740792])
                (490400 'end of statement' buf[288962] used_buf[288967] i[289019])
                (289041 call += used_buf[288967] 1)
                (490404 'end of statement' used_buf[288967])
                (289046 call += i[289019] 1)
                (490406 'end of statement' i[289019])
              }
              label _continueLabel[289052]
              unknown call_tmp[740797] "expr temp" "maybe param" "maybe type" "temp"
              (740800 'move' call_tmp[740797](289060 call < i[289019] end[288975]))
              (289063 'move' tmp[289049](289058 call _cond_test call_tmp[740797]))
              tmp[289049]
            }
            label _breakLabel[289053]
          }
          {
            unknown tmp[289175] "temp"
            unknown call_tmp[740802] "expr temp" "maybe param" "maybe type" "temp"
            (740805 'move' call_tmp[740802](289200 call offsets[288328] curbin[288828]))
            unknown call_tmp[740807] "expr temp" "maybe param" "maybe type" "temp"
            (740810 'move' call_tmp[740807](289198 call < call_tmp[740802] endfast[288996]))
            (289203 'move' tmp[289175](289196 call _cond_test call_tmp[740807]))
            WhileDo[289180]
            {
              {
                {
                  unknown j[289137] "dead at end of block" "insert auto destroy"
                  (549065 'init var' j[289137] 0)
                  (490408 'end of statement')
                  unknown tmp[289138] "maybe param" "temp"
                  unknown call_tmp[740812] "expr temp" "maybe param" "maybe type" "temp"
                  (740815 'move' call_tmp[740812](289086 call - max_buf[288951] 1))
                  (289150 'move' tmp[289138](289148 call chpl_compute_low_param_loop_bound 0 call_tmp[740812]))
                  unknown tmp[289139] "maybe param" "temp"
                  unknown call_tmp[740817] "expr temp" "maybe param" "maybe type" "temp"
                  (740820 'move' call_tmp[740817](289155 call - max_buf[288951] 1))
                  (289160 'move' tmp[289139](289158 call chpl_compute_high_param_loop_bound 0 call_tmp[740817]))
                  unknown tmp[289140] "maybe param" "temp"
                  (289163 'move' tmp[289140] 1)
                  ParamForLoop[289165]
                  { j[289137] tmp[289138] tmp[289139] tmp[289140]
                    {
                      unknown call_tmp[740822] "expr temp" "maybe param" "maybe type" "temp"
                      (740825 'move' call_tmp[740822](289099 call buf[288962] j[289137]))
                      unknown call_tmp[740827] "maybe param" "maybe type" "temp"
                      (740830 'move' call_tmp[740827](289103 call binForRecord call_tmp[740822] criterion[288172] startbit[288175]))
                      const tmp[289104] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549067 'init var' tmp[289104] call_tmp[740827])
                      (289108 call _check_tuple_var_decl tmp[289104] 2)
                      (490409 'end of statement')
                      unknown call_tmp[740832] "maybe param" "maybe type" "temp"
                      (740835 'move' call_tmp[740832](289105 call tmp[289104] 0))
                      const bin[289090] "dead at end of block" "const" "insert auto destroy"
                      (549069 'init var' bin[289090] call_tmp[740832])
                      (289113 'end of statement')
                      unknown call_tmp[740837] "expr temp" "maybe param" "maybe type" "temp"
                      (740840 'move' call_tmp[740837](289119 call offsets[288328] bin[289090]))
                      unknown call_tmp[740842] "expr temp" "maybe param" "maybe type" "temp"
                      (740845 'move' call_tmp[740842](289121 call A[288169] call_tmp[740837]))
                      unknown call_tmp[740847] "expr temp" "maybe param" "maybe type" "temp"
                      (740850 'move' call_tmp[740847](289125 call buf[288962] j[289137]))
                      (289126 call <=> call_tmp[740842] call_tmp[740847])
                      (490410 'end of statement' offsets[288328] bin[289090] buf[288962] j[289137])
                      unknown call_tmp[740852] "expr temp" "maybe param" "maybe type" "temp"
                      (740855 'move' call_tmp[740852](289132 call offsets[288328] bin[289090]))
                      (289134 call += call_tmp[740852] 1)
                      (490415 'end of statement' offsets[288328] bin[289090])
                    }
                  }
                  label _unused_continueLabel[289142]
                  label _breakLabel[289141]
                }
              }
              label _continueLabel[289178]
              unknown call_tmp[740857] "expr temp" "maybe param" "maybe type" "temp"
              (740860 'move' call_tmp[740857](289188 call offsets[288328] curbin[288828]))
              unknown call_tmp[740862] "expr temp" "maybe param" "maybe type" "temp"
              (740865 'move' call_tmp[740862](289186 call < call_tmp[740857] endfast[288996]))
              (289191 'move' tmp[289175](289184 call _cond_test call_tmp[740862]))
              tmp[289175]
            }
            label _breakLabel[289179]
          }
          {
            unknown tmp[289356] "temp"
            unknown call_tmp[740867] "expr temp" "maybe param" "maybe type" "temp"
            (740870 'move' call_tmp[740867](289381 call offsets[288328] curbin[288828]))
            unknown call_tmp[740872] "expr temp" "maybe param" "maybe type" "temp"
            (740875 'move' call_tmp[740872](289379 call < call_tmp[740867] end[288975]))
            (289384 'move' tmp[289356](289377 call _cond_test call_tmp[740872]))
            WhileDo[289361]
            {
              {
                unknown j[289214] "dead at end of block" "insert auto destroy"
                (549071 'init var' j[289214] 0)
                (289217 'end of statement')
                {
                  unknown tmp[289317] "temp"
                  unknown tmp[434503] "maybe param" "temp"
                  (434514 'move' tmp[434503](289346 call >= used_buf[288967] 0))
                  unknown call_tmp[740877] "expr temp" "maybe param" "maybe type" "temp"
                  (740880 'move' call_tmp[740877](434516 call _cond_invalid tmp[434503]))
                  if call_tmp[740877]
                  {
                    (434519 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580226] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580227] "maybe param" "temp"
                  unknown call_tmp[740882] "expr temp" "maybe param" "maybe type" "temp"
                  (740885 'move' call_tmp[740882](434504 call isTrue tmp[434503]))
                  (580232 'move' tmp[580227](580230 call _cond_test call_tmp[740882]))
                  if tmp[580227]
                  {
                    unknown tmp[580234] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[740887] "expr temp" "maybe param" "maybe type" "temp"
                    (740890 'move' call_tmp[740887](289350 call < j[289214] used_buf[288967]))
                    (580236 'move' tmp[580234](434507 call isTrue call_tmp[740887]))
                    (580241 'move' tmp[580226](580238 '_paramFoldLogical' tmp[580227] tmp[580234]))
                  }
                  {
                    (580246 'move' tmp[580226](580243 '_paramFoldLogical' tmp[580227] 0))
                  }
                  (289353 'move' tmp[289317](289342 call _cond_test tmp[580226]))
                  WhileDo[289322]
                  {
                    {
                      unknown call_tmp[740892] "expr temp" "maybe param" "maybe type" "temp"
                      (740895 'move' call_tmp[740892](289238 call buf[288962] j[289214]))
                      unknown call_tmp[740897] "maybe param" "maybe type" "temp"
                      (740900 'move' call_tmp[740897](289242 call binForRecord call_tmp[740892] criterion[288172] startbit[288175]))
                      const tmp[289243] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549073 'init var' tmp[289243] call_tmp[740897])
                      (289247 call _check_tuple_var_decl tmp[289243] 2)
                      (490419 'end of statement')
                      unknown call_tmp[740902] "maybe param" "maybe type" "temp"
                      (740905 'move' call_tmp[740902](289244 call tmp[289243] 0))
                      const bin[289229] "dead at end of block" "const" "insert auto destroy"
                      (549075 'init var' bin[289229] call_tmp[740902])
                      (289252 'end of statement')
                      unknown call_tmp[740907] "maybe param" "maybe type" "temp"
                      (740910 'move' call_tmp[740907](289257 call offsets[288328] bin[289229]))
                      unknown offset[289258] "dead at end of block" "insert auto destroy"
                      (549077 'init var' offset[289258] call_tmp[740907])
                      (289261 'end of statement' offsets[288328] bin[289229])
                      unknown call_tmp[740912] "expr temp" "maybe param" "maybe type" "temp"
                      (740915 'move' call_tmp[740912](289265 call A[288169] offset[289258]))
                      unknown call_tmp[740917] "expr temp" "maybe param" "maybe type" "temp"
                      (740920 'move' call_tmp[740917](289269 call buf[288962] j[289214]))
                      (289270 call <=> call_tmp[740912] call_tmp[740917])
                      (490422 'end of statement' offset[289258] buf[288962] j[289214])
                      unknown call_tmp[740922] "expr temp" "maybe param" "maybe type" "temp"
                      (740925 'move' call_tmp[740922](289276 call offsets[288328] bin[289229]))
                      (289278 call += call_tmp[740922] 1)
                      (490426 'end of statement' offsets[288328] bin[289229])
                      unknown tmp[434461] "maybe param" "temp"
                      (434472 'move' tmp[434461](289283 call == bin[289229] curbin[288828]))
                      unknown call_tmp[740927] "expr temp" "maybe param" "maybe type" "temp"
                      (740930 'move' call_tmp[740927](434474 call _cond_invalid tmp[434461]))
                      if call_tmp[740927]
                      {
                        (434477 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580253] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580254] "maybe param" "temp"
                      unknown call_tmp[740932] "expr temp" "maybe param" "maybe type" "temp"
                      (740935 'move' call_tmp[740932](434462 call isTrue tmp[434461]))
                      (580259 'move' tmp[580254](580257 call _cond_test call_tmp[740932]))
                      if tmp[580254]
                      {
                        unknown tmp[580261] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[740937] "expr temp" "maybe param" "maybe type" "temp"
                        (740940 'move' call_tmp[740937](289287 call >= offset[289258] bufstart[289014]))
                        (580263 'move' tmp[580261](434465 call isTrue call_tmp[740937]))
                        (580268 'move' tmp[580253](580265 '_paramFoldLogical' tmp[580254] tmp[580261]))
                      }
                      {
                        (580273 'move' tmp[580253](580270 '_paramFoldLogical' tmp[580254] 0))
                      }
                      unknown call_tmp[740942] "expr temp" "maybe param" "maybe type" "temp"
                      (740945 'move' call_tmp[740942](289308 call _cond_test tmp[580253]))
                      if call_tmp[740942]
                      {
                        (289293 call -= used_buf[288967] 1)
                        (490430 'end of statement' used_buf[288967])
                        unknown call_tmp[740947] "expr temp" "maybe param" "maybe type" "temp"
                        (740950 'move' call_tmp[740947](289300 call buf[288962] j[289214]))
                        unknown call_tmp[740952] "expr temp" "maybe param" "maybe type" "temp"
                        (740955 'move' call_tmp[740952](289304 call buf[288962] used_buf[288967]))
                        (289305 call <=> call_tmp[740947] call_tmp[740952])
                        (490432 'end of statement' buf[288962] j[289214] buf[288962] used_buf[288967])
                      }
                      (289314 call += j[289214] 1)
                      (490437 'end of statement' j[289214])
                    }
                    label _continueLabel[289320]
                    unknown tmp[434482] "maybe param" "temp"
                    (434493 'move' tmp[434482](289330 call >= used_buf[288967] 0))
                    unknown call_tmp[740957] "expr temp" "maybe param" "maybe type" "temp"
                    (740960 'move' call_tmp[740957](434495 call _cond_invalid tmp[434482]))
                    if call_tmp[740957]
                    {
                      (434498 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580280] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580281] "maybe param" "temp"
                    unknown call_tmp[740962] "expr temp" "maybe param" "maybe type" "temp"
                    (740965 'move' call_tmp[740962](434483 call isTrue tmp[434482]))
                    (580286 'move' tmp[580281](580284 call _cond_test call_tmp[740962]))
                    if tmp[580281]
                    {
                      unknown tmp[580288] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[740967] "expr temp" "maybe param" "maybe type" "temp"
                      (740970 'move' call_tmp[740967](289334 call < j[289214] used_buf[288967]))
                      (580290 'move' tmp[580288](434486 call isTrue call_tmp[740967]))
                      (580295 'move' tmp[580280](580292 '_paramFoldLogical' tmp[580281] tmp[580288]))
                    }
                    {
                      (580300 'move' tmp[580280](580297 '_paramFoldLogical' tmp[580281] 0))
                    }
                    (289337 'move' tmp[289317](289326 call _cond_test tmp[580280]))
                    tmp[289317]
                  }
                  label _breakLabel[289321]
                }
              }
              label _continueLabel[289359]
              unknown call_tmp[740972] "expr temp" "maybe param" "maybe type" "temp"
              (740975 'move' call_tmp[740972](289369 call offsets[288328] curbin[288828]))
              unknown call_tmp[740977] "expr temp" "maybe param" "maybe type" "temp"
              (740980 'move' call_tmp[740977](289367 call < call_tmp[740972] end[288975]))
              (289372 'move' tmp[289356](289365 call _cond_test call_tmp[740977]))
              tmp[289356]
            }
            label _breakLabel[289360]
          }
        }
        label _continueLabel[289390]
        (289398 'move' tmp[289387](289396 call _cond_test 1))
        tmp[289387]
      }
      label _breakLabel[289391]
    }
    unknown call_tmp[740984] "expr temp" "maybe param" "maybe type" "temp"
    (740987 'move' call_tmp[740984](289409 call progress _mt[243] settings[288182]))
    unknown call_tmp[740989] "expr temp" "maybe param" "maybe type" "temp"
    (740992 'move' call_tmp[740989](289433 call _cond_test call_tmp[740984]))
    if call_tmp[740989]
    {
      (289431 call writeln "sort sub-problems")
    }
    unknown call_tmp[740994] "expr temp" "maybe param" "maybe type" "temp"
    (740997 'move' call_tmp[740994](289441 call offsets[288328] 0))
    (289443 call = call_tmp[740994] start_n[288157])
    (490441 'end of statement' offsets[288328])
    {
      unknown _indexOfInterest[289466] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289467] "expr temp" "temp"
      unknown call_tmp[740999] "expr temp" "maybe param" "maybe type" "temp"
      (741002 'move' call_tmp[740999](289481 call chpl_direct_range_iter 1 radix[288314] 1))
      (289476 'move' _iterator[289467](289474 call _getIterator call_tmp[740999]))
      Defer
      {
        {
          (289497 call _freeIterator _iterator[289467])
        }
      }
      { scopeless type
        (289486 'move' _indexOfInterest[289466](289483 call iteratorIndex _iterator[289467]))
      }
      ForLoop[289468]
      {
        unknown i[289490] "index var" "insert auto destroy"
        (490444 'end of statement')
        (289492 'move' i[289490] _indexOfInterest[289466])
        (490445 'end of statement' i[289490])
        {
          unknown call_tmp[741004] "expr temp" "maybe param" "maybe type" "temp"
          (741007 'move' call_tmp[741004](289454 call offsets[288328] i[289490]))
          unknown call_tmp[741009] "expr temp" "maybe param" "maybe type" "temp"
          (741012 'move' call_tmp[741009](289458 call - i[289490] 1))
          unknown call_tmp[741014] "expr temp" "maybe param" "maybe type" "temp"
          (741017 'move' call_tmp[741014](289461 call end_offsets[288342] call_tmp[741009]))
          (289462 call = call_tmp[741004] call_tmp[741014])
          (490447 'end of statement' offsets[288328] i[289490] end_offsets[288342] i[289490])
        }
        label _continueLabel[289471]
        _indexOfInterest[289466]
        _iterator[289467]
      }
      label _breakLabel[289472]
    }
    unknown call_tmp[741021] "expr temp" "maybe param" "maybe type" "temp"
    (741024 'move' call_tmp[741021](289505 call alwaysSerial _mt[243] settings[288182]))
    unknown call_tmp[741026] "expr temp" "maybe param" "maybe type" "temp"
    (741029 'move' call_tmp[741026](289509 call == call_tmp[741021] 0))
    unknown call_tmp[741031] "expr temp" "maybe param" "maybe type" "temp"
    (741034 'move' call_tmp[741031](289899 call _cond_test call_tmp[741026]))
    if call_tmp[741031]
    {
      unknown call_tmp[741036] "maybe param" "maybe type" "temp"
      (741039 'move' call_tmp[741036](289513 call + startbit[288175] radixbits[288303]))
      const subbits[289515] "dead at end of block" "const" "insert auto destroy"
      (549079 'init var' subbits[289515] call_tmp[741036])
      (289518 'end of statement')
      unknown nbigsubs[289521] "dead at end of block" "insert auto destroy"
      (549081 'init var' nbigsubs[289521] 0)
      (289524 'end of statement')
      unknown bigsubs[289539] "dead at end of block" "insert auto destroy"
      unknown call_tmp[741041] "expr temp" "maybe param" "maybe type" "temp"
      (741044 'move' call_tmp[741041](289527 call chpl_build_bounded_range 0 radix[288314]))
      unknown call_tmp[741046] "expr temp" "maybe param" "maybe type" "temp"
      (741049 'move' call_tmp[741046](289535 call chpl__ensureDomainExpr call_tmp[741041]))
      unknown call_tmp[741051] "expr temp" "maybe param" "maybe type" "temp"
      (741054 'move' call_tmp[741051](289533 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[741056] "expr temp" "maybe param" "maybe type" "temp"
      (741059 'move' call_tmp[741056](289537 call chpl__buildArrayRuntimeType call_tmp[741046] call_tmp[741051]))
      (549083 'default init var' bigsubs[289539] call_tmp[741056])
      (289542 'end of statement')
      unknown call_tmp[741061] "expr temp" "maybe param" "maybe type" "temp"
      (741064 'move' call_tmp[741061](364757 call here[90438]))
      unknown call_tmp[741068] "maybe param" "maybe type" "temp"
      (741071 'move' call_tmp[741068](289548 call(289544 call (partial) runningTasks _mt[243] call_tmp[741061])))
      const runningNow[289549] "dead at end of block" "const" "insert auto destroy"
      (549085 'init var' runningNow[289549] call_tmp[741068])
      (289552 'end of statement' radixbits[288303] radix[288314])
      {
        unknown _indexOfInterest[289676] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289677] "expr temp" "temp"
        unknown call_tmp[741073] "expr temp" "maybe param" "maybe type" "temp"
        (741076 'move' call_tmp[741073](289691 call - radix[288314] 1))
        unknown call_tmp[741078] "expr temp" "maybe param" "maybe type" "temp"
        (741081 'move' call_tmp[741078](289694 call chpl_direct_range_iter 1 call_tmp[741073] 1))
        (289686 'move' _iterator[289677](289684 call _getIterator call_tmp[741078]))
        Defer
        {
          {
            (289710 call _freeIterator _iterator[289677])
          }
        }
        { scopeless type
          (289699 'move' _indexOfInterest[289676](289696 call iteratorIndex _iterator[289677]))
        }
        ForLoop[289678]
        {
          unknown bin[289703] "index var" "insert auto destroy"
          (490455 'end of statement')
          (289705 'move' bin[289703] _indexOfInterest[289676])
          (490456 'end of statement' bin[289703])
          {
            unknown call_tmp[741083] "maybe param" "maybe type" "temp"
            (741086 'move' call_tmp[741083](289564 call offsets[288328] bin[289703]))
            const bin_start[289565] "dead at end of block" "const" "insert auto destroy"
            (549087 'init var' bin_start[289565] call_tmp[741083])
            (289568 'end of statement')
            const bin_end[289591] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580307] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580308] "maybe param" "temp"
            unknown call_tmp[741088] "expr temp" "maybe param" "maybe type" "temp"
            (741091 'move' call_tmp[741088](289572 call + bin[289703] 1))
            unknown call_tmp[741093] "expr temp" "maybe param" "maybe type" "temp"
            (741096 'move' call_tmp[741093](289575 call <= call_tmp[741088] radix[288314]))
            (580313 'move' tmp[580308](580311 call _cond_test call_tmp[741093]))
            if tmp[580308]
            {
              unknown tmp[580315] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741098] "expr temp" "maybe param" "maybe type" "temp"
              (741101 'move' call_tmp[741098](289580 call + bin[289703] 1))
              unknown call_tmp[741103] "expr temp" "maybe param" "maybe type" "temp"
              (741106 'move' call_tmp[741103](289583 call offsets[288328] call_tmp[741098]))
              (580317 'move' tmp[580315](289585 call - call_tmp[741103] 1))
              (580322 'move' tmp[580307](580319 '_paramFoldLogical' tmp[580308] tmp[580315]))
            }
            {
              (580327 'move' tmp[580307](580324 '_paramFoldLogical' tmp[580308] end_n[288163]))
            }
            (549089 'init var' bin_end[289591] tmp[580307])
            (289594 'end of statement')
            unknown call_tmp[741108] "expr temp" "maybe param" "maybe type" "temp"
            (741111 'move' call_tmp[741108](289597 call + 1 bin_end[289591]))
            unknown call_tmp[741113] "maybe param" "maybe type" "temp"
            (741116 'move' call_tmp[741113](289600 call - call_tmp[741108] bin_start[289565]))
            const num[289602] "dead at end of block" "const" "insert auto destroy"
            (549091 'init var' num[289602] call_tmp[741113])
            (289605 'end of statement' offsets[288328] bin[289703] bin[289703] radix[288314] offsets[288328] bin[289703] bin_end[289591] bin_start[289565])
            unknown tmp[434545] "maybe param" "temp"
            (434556 'move' tmp[434545](289608 call <= num[289602] 1))
            unknown call_tmp[741118] "expr temp" "maybe param" "maybe type" "temp"
            (741121 'move' call_tmp[741118](434558 call _cond_invalid tmp[434545]))
            if call_tmp[741118]
            {
              (434561 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580334] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580335] "maybe param" "temp"
            unknown call_tmp[741123] "expr temp" "maybe param" "maybe type" "temp"
            (741126 'move' call_tmp[741123](434546 call isTrue tmp[434545]))
            (580340 'move' tmp[580335](580338 call _cond_test call_tmp[741123]))
            if tmp[580335]
            {
              (580345 'move' tmp[580334](580342 '_paramFoldLogical' tmp[580335] 1))
            }
            {
              unknown tmp[580347] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741128] "expr temp" "maybe param" "maybe type" "temp"
              (741131 'move' call_tmp[741128](289612 call >= startbit[288175] endbit[288179]))
              (580349 'move' tmp[580347](434550 call isTrue call_tmp[741128]))
              (580354 'move' tmp[580334](580351 '_paramFoldLogical' tmp[580335] tmp[580347]))
            }
            unknown call_tmp[741133] "expr temp" "maybe param" "maybe type" "temp"
            (741136 'move' call_tmp[741133](289671 call _cond_test tmp[580334]))
            if call_tmp[741133]
            {
            }
            {
              unknown tmp[434524] "maybe param" "temp"
              unknown call_tmp[741140] "expr temp" "maybe param" "maybe type" "temp"
              (741143 'move' call_tmp[741140](289621 call minForTask _mt[243] settings[288182]))
              (434535 'move' tmp[434524](289624 call < num[289602] call_tmp[741140]))
              unknown call_tmp[741145] "expr temp" "maybe param" "maybe type" "temp"
              (741148 'move' call_tmp[741145](434537 call _cond_invalid tmp[434524]))
              if call_tmp[741145]
              {
                (434540 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580361] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580362] "maybe param" "temp"
              unknown call_tmp[741150] "expr temp" "maybe param" "maybe type" "temp"
              (741153 'move' call_tmp[741150](434525 call isTrue tmp[434524]))
              (580367 'move' tmp[580362](580365 call _cond_test call_tmp[741150]))
              if tmp[580362]
              {
                (580372 'move' tmp[580361](580369 '_paramFoldLogical' tmp[580362] 1))
              }
              {
                unknown tmp[580374] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741157] "expr temp" "maybe param" "maybe type" "temp"
                (741160 'move' call_tmp[741157](289630 call maxTasks _mt[243] settings[288182]))
                unknown call_tmp[741162] "expr temp" "maybe param" "maybe type" "temp"
                (741165 'move' call_tmp[741162](289633 call >= runningNow[289549] call_tmp[741157]))
                (580376 'move' tmp[580374](434529 call isTrue call_tmp[741162]))
                (580381 'move' tmp[580361](580378 '_paramFoldLogical' tmp[580362] tmp[580374]))
              }
              unknown call_tmp[741167] "expr temp" "maybe param" "maybe type" "temp"
              (741170 'move' call_tmp[741167](289667 call _cond_test tmp[580361]))
              if call_tmp[741167]
              {
                (289646 call msbRadixSort bin_start[289565] bin_end[289591] A[288169] criterion[288172] subbits[289515] endbit[288179] settings[288182])
                (490468 'end of statement' bin_start[289565] bin_end[289591] subbits[289515])
              }
              {
                unknown call_tmp[741172] "expr temp" "maybe param" "maybe type" "temp"
                (741175 'move' call_tmp[741172](289652 call bigsubs[289539] nbigsubs[289521]))
                unknown call_tmp[741177] "expr temp" "maybe param" "maybe type" "temp"
                (741180 'move' call_tmp[741177](289656 call _build_tuple bin_start[289565] bin_end[289591]))
                (289658 call = call_tmp[741172] call_tmp[741177])
                (490472 'end of statement' bigsubs[289539] nbigsubs[289521] bin_start[289565] bin_end[289591])
                (289664 call += nbigsubs[289521] 1)
                (490477 'end of statement' nbigsubs[289521])
              }
            }
          }
          label _continueLabel[289681]
          _indexOfInterest[289676]
          _iterator[289677]
        }
        label _breakLabel[289682]
      }
      unknown call_tmp[741182] "expr temp" "maybe param" "maybe type" "temp"
      (741185 'move' call_tmp[741182](289727 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741187] "expr temp" "maybe param" "maybe type" "temp"
      (741190 'move' call_tmp[741187](289730 call # call_tmp[741182] nbigsubs[289521]))
      Forall {
        induction variables:
          
          unknown bin[289748] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289750] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741187]
          bigsubs[289539]
        shadow variables:
        other variables
          forall body
        {
          (289755 call _check_tuple_var_decl chpl_idx_2[289750] 2)
          (490479 'end of statement')
          unknown bin_start[289761] "index var" "insert auto destroy"
          (490480 'end of statement')
          (289763 'move' bin_start[289761](289759 call chpl_idx_2[289750] 0))
          (490481 'end of statement' bin_start[289761])
          unknown bin_end[289768] "index var" "insert auto destroy"
          (490483 'end of statement')
          (289770 'move' bin_end[289768](289766 call chpl_idx_2[289750] 1))
          (490484 'end of statement' bin_end[289768])
          (289744 call msbRadixSort bin_start[289761] bin_end[289768] A[288169] criterion[288172] subbits[289515] endbit[288179] settings[288182])
          (490486 'end of statement' bin_start[289761] bin_end[289768] subbits[289515])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289857] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289858] "expr temp" "temp"
        unknown call_tmp[741192] "expr temp" "maybe param" "maybe type" "temp"
        (741195 'move' call_tmp[741192](289872 call - radix[288314] 1))
        unknown call_tmp[741197] "expr temp" "maybe param" "maybe type" "temp"
        (741200 'move' call_tmp[741197](289875 call chpl_direct_range_iter 1 call_tmp[741192] 1))
        (289867 'move' _iterator[289858](289865 call _getIterator call_tmp[741197]))
        Defer
        {
          {
            (289891 call _freeIterator _iterator[289858])
          }
        }
        { scopeless type
          (289880 'move' _indexOfInterest[289857](289877 call iteratorIndex _iterator[289858]))
        }
        ForLoop[289859]
        {
          unknown bin[289884] "index var" "insert auto destroy"
          (490491 'end of statement')
          (289886 'move' bin[289884] _indexOfInterest[289857])
          (490492 'end of statement' bin[289884])
          {
            unknown call_tmp[741202] "maybe param" "maybe type" "temp"
            (741205 'move' call_tmp[741202](289785 call offsets[288328] bin[289884]))
            const bin_start[289786] "dead at end of block" "const" "insert auto destroy"
            (549093 'init var' bin_start[289786] call_tmp[741202])
            (289789 'end of statement')
            const bin_end[289812] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580388] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580389] "maybe param" "temp"
            unknown call_tmp[741207] "expr temp" "maybe param" "maybe type" "temp"
            (741210 'move' call_tmp[741207](289793 call + bin[289884] 1))
            unknown call_tmp[741212] "expr temp" "maybe param" "maybe type" "temp"
            (741215 'move' call_tmp[741212](289796 call <= call_tmp[741207] radix[288314]))
            (580394 'move' tmp[580389](580392 call _cond_test call_tmp[741212]))
            if tmp[580389]
            {
              unknown tmp[580396] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741217] "expr temp" "maybe param" "maybe type" "temp"
              (741220 'move' call_tmp[741217](289801 call + bin[289884] 1))
              unknown call_tmp[741222] "expr temp" "maybe param" "maybe type" "temp"
              (741225 'move' call_tmp[741222](289804 call offsets[288328] call_tmp[741217]))
              (580398 'move' tmp[580396](289806 call - call_tmp[741222] 1))
              (580403 'move' tmp[580388](580400 '_paramFoldLogical' tmp[580389] tmp[580396]))
            }
            {
              (580408 'move' tmp[580388](580405 '_paramFoldLogical' tmp[580389] end_n[288163]))
            }
            (549095 'init var' bin_end[289812] tmp[580388])
            (289815 'end of statement')
            unknown call_tmp[741227] "expr temp" "maybe param" "maybe type" "temp"
            (741230 'move' call_tmp[741227](289818 call + 1 bin_end[289812]))
            unknown call_tmp[741232] "maybe param" "maybe type" "temp"
            (741235 'move' call_tmp[741232](289821 call - call_tmp[741227] bin_start[289786]))
            const num[289823] "dead at end of block" "const" "insert auto destroy"
            (549097 'init var' num[289823] call_tmp[741232])
            (289826 'end of statement' offsets[288328] bin[289884] bin[289884] radix[288314] offsets[288328] bin[289884] bin_end[289812] bin_start[289786])
            unknown tmp[434566] "maybe param" "temp"
            (434577 'move' tmp[434566](289829 call <= num[289823] 1))
            unknown call_tmp[741237] "expr temp" "maybe param" "maybe type" "temp"
            (741240 'move' call_tmp[741237](434579 call _cond_invalid tmp[434566]))
            if call_tmp[741237]
            {
              (434582 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580415] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580416] "maybe param" "temp"
            unknown call_tmp[741242] "expr temp" "maybe param" "maybe type" "temp"
            (741245 'move' call_tmp[741242](434567 call isTrue tmp[434566]))
            (580421 'move' tmp[580416](580419 call _cond_test call_tmp[741242]))
            if tmp[580416]
            {
              (580426 'move' tmp[580415](580423 '_paramFoldLogical' tmp[580416] 1))
            }
            {
              unknown tmp[580428] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741247] "expr temp" "maybe param" "maybe type" "temp"
              (741250 'move' call_tmp[741247](289833 call >= startbit[288175] endbit[288179]))
              (580430 'move' tmp[580428](434571 call isTrue call_tmp[741247]))
              (580435 'move' tmp[580415](580432 '_paramFoldLogical' tmp[580416] tmp[580428]))
            }
            unknown call_tmp[741252] "expr temp" "maybe param" "maybe type" "temp"
            (741255 'move' call_tmp[741252](289853 call _cond_test tmp[580415]))
            if call_tmp[741252]
            {
            }
            {
              unknown call_tmp[741257] "expr temp" "maybe param" "maybe type" "temp"
              (741260 'move' call_tmp[741257](289846 call + startbit[288175] radixbits[288303]))
              (289850 call msbRadixSort bin_start[289786] bin_end[289812] A[288169] criterion[288172] call_tmp[741257] endbit[288179] settings[288182])
              (490503 'end of statement' bin_start[289786] bin_end[289812] radixbits[288303])
            }
          }
          label _continueLabel[289862]
          _indexOfInterest[289857]
          _iterator[289858]
        }
        label _breakLabel[289863]
      }
    }
    unknown call_tmp[741264] "expr temp" "maybe param" "maybe type" "temp"
    (741267 'move' call_tmp[741264](289904 call CHECK_SORTS _mt[243] settings[288182]))
    unknown call_tmp[741269] "expr temp" "maybe param" "maybe type" "temp"
    (741272 'move' call_tmp[741269](289915 call _cond_test call_tmp[741264]))
    if call_tmp[741269]
    {
      (289913 call checkSorted start_n[288157] end_n[288163] A[288169] criterion[288172])
    }
    label _end_msbRadixSort[538196]
    (538198 return _void[55])
  }
  (355442 'used modules list'(353094 'use' ChapelStandard[20267])(288020 'import' Sort[267989].{defaultComparator, ShellSort})(288027 'use' RadixSortHelp[276097]))
}