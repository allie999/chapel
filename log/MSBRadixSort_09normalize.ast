AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416259]() : void[4] "insert line file info" "module init"
  {
    (538293 return _void[55])
  }
  type MSBRadixSortSettings[288136](?) unknown DISTRIBUTE_BUFFER[288098] "param" 5 const-val sortSwitch[288103]:int(64)[13] "const" 256 const-val minForTask[288108]:int(64)[13] "const" 256 unknown CHECK_SORTS[288113] "param" 0 unknown progress[288118] "param" 0 const-val alwaysSerial[288123]:bool[10] "const" 0 const maxTasks[288131] "const"(288128 call maxTaskPar _mt[243](364805 call here[90438]))
  function msbRadixSort[288147](arg Data[288144]:_array[133594](?), arg comparator[288152]:_any[178](?) :
  defaultComparator[268065] =
  defaultComparator[268065]) : _unknown[51] "no return value for void"
  {
    unknown endbit[288157] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[549084] "maybe param" "maybe type" "temp"
    (549090 'move' type_tmp[549084] int(64)[13])
    (549086 'init var split decl' endbit[288157] type_tmp[549084])
    (288160 'end of statement')
    unknown call_tmp[740380] "maybe param" "maybe type" "temp"
    (740383 'move' call_tmp[740380](288167 call msbRadixSortParamLastStartBit Data[288144] comparator[288152]))
    (549092 'init var split init' endbit[288157] call_tmp[740380] type_tmp[549084])
    (490389 'end of statement' endbit[288157])
    unknown call_tmp[740385] "expr temp" "maybe param" "maybe type" "temp"
    (740388 'move' call_tmp[740385](288173 call < endbit[288157] 0))
    unknown call_tmp[740390] "expr temp" "maybe param" "maybe type" "temp"
    (740393 'move' call_tmp[740390](288183 call _cond_test call_tmp[740385]))
    if call_tmp[740390]
    {
      unknown call_tmp[740395] "expr temp" "maybe param" "maybe type" "temp"
      (740398 'move' call_tmp[740395](288179 call max int(64)[13]))
      (288180 call = endbit[288157] call_tmp[740395])
      (490391 'end of statement' endbit[288157])
    }
    unknown call_tmp[740402] "expr temp" "maybe param" "maybe type" "temp"
    (740405 'move' call_tmp[740402](288190 call _dom _mt[243] Data[288144]))
    unknown call_tmp[740409] "expr temp" "maybe param" "maybe type" "temp"
    (740412 'move' call_tmp[740409](288193 call low _mt[243] call_tmp[740402]))
    unknown call_tmp[740416] "expr temp" "maybe param" "maybe type" "temp"
    (740419 'move' call_tmp[740416](288199 call _dom _mt[243] Data[288144]))
    unknown call_tmp[740423] "expr temp" "maybe param" "maybe type" "temp"
    (740426 'move' call_tmp[740423](288202 call high _mt[243] call_tmp[740416]))
    unknown call_tmp[740428] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740431 'move' call_tmp[740428](748296 'new' MSBRadixSortSettings[288136](?)))
    (288217 call msbRadixSort(start_n = call_tmp[740409])(end_n = call_tmp[740423]) Data[288144] comparator[288152](startbit = 0)(endbit = endbit[288157])(settings = call_tmp[740428]))
    (490393 'end of statement' endbit[288157])
    (538281 return _void[55])
  }
  function msbRadixSort[288227](arg start_n[288224]:int(64)[13], arg end_n[288230]:int(64)[13], arg A[288236]:_array[133594](?), arg criterion[288239]:_any[178](?), arg startbit[288242]:int(64)[13], arg endbit[288246]:int(64)[13], arg settings[288249]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740433] "expr temp" "maybe param" "maybe type" "temp"
    (740436 'move' call_tmp[740433](288253 call > startbit[288242] endbit[288246]))
    unknown call_tmp[740438] "expr temp" "maybe param" "maybe type" "temp"
    (740441 'move' call_tmp[740438](288257 call _cond_test call_tmp[740433]))
    if call_tmp[740438]
    {
      gotoReturn _end_msbRadixSort[538283] _end_msbRadixSort[538283]
    }
    unknown call_tmp[740443] "expr temp" "maybe param" "maybe type" "temp"
    (740446 'move' call_tmp[740443](288265 call - end_n[288230] start_n[288224]))
    unknown call_tmp[740450] "expr temp" "maybe param" "maybe type" "temp"
    (740453 'move' call_tmp[740450](288270 call sortSwitch _mt[243] settings[288249]))
    unknown call_tmp[740455] "expr temp" "maybe param" "maybe type" "temp"
    (740458 'move' call_tmp[740455](288273 call < call_tmp[740443] call_tmp[740450]))
    unknown call_tmp[740460] "expr temp" "maybe param" "maybe type" "temp"
    (740463 'move' call_tmp[740460](288310 call _cond_test call_tmp[740455]))
    if call_tmp[740460]
    {
      (288286 call shellSort module=[255] ShellSort[273610] A[288236] criterion[288239](start = start_n[288224])(end = end_n[288230]))
      (490396 'end of statement')
      unknown call_tmp[740467] "expr temp" "maybe param" "maybe type" "temp"
      (740470 'move' call_tmp[740467](288292 call CHECK_SORTS _mt[243] settings[288249]))
      unknown call_tmp[740472] "expr temp" "maybe param" "maybe type" "temp"
      (740475 'move' call_tmp[740472](288303 call _cond_test call_tmp[740467]))
      if call_tmp[740472]
      {
        (288301 call checkSorted start_n[288224] end_n[288230] A[288236] criterion[288239])
      }
      gotoReturn _end_msbRadixSort[538283] _end_msbRadixSort[538283]
      (364811 'referenced modules list' ShellSort[273610])
    }
    unknown call_tmp[740479] "expr temp" "maybe param" "maybe type" "temp"
    (740482 'move' call_tmp[740479](288317 call progress _mt[243] settings[288249]))
    unknown call_tmp[740484] "expr temp" "maybe param" "maybe type" "temp"
    (740487 'move' call_tmp[740484](288364 call _cond_test call_tmp[740479]))
    if call_tmp[740484]
    {
      (288362 call writeln "radix sort start=" start_n[288224] " end=" end_n[288230] " startbit=" startbit[288242] " endbit=" endbit[288246])
    }
    const radixbits[288370] "dead at end of block" "const" "insert auto destroy"
    (549095 'init var' radixbits[288370] RADIX_BITS[276176])
    (288373 'end of statement')
    unknown call_tmp[740489] "expr temp" "maybe param" "maybe type" "temp"
    (740492 'move' call_tmp[740489](288376 call << 1 radixbits[288370]))
    unknown call_tmp[740494] "maybe param" "maybe type" "temp"
    (740497 'move' call_tmp[740494](288379 call + call_tmp[740489] 1))
    const radix[288381] "dead at end of block" "const" "insert auto destroy"
    (549097 'init var' radix[288381] call_tmp[740494])
    (288384 'end of statement')
    unknown offsets[288395] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740499] "expr temp" "maybe param" "maybe type" "temp"
    (740502 'move' call_tmp[740499](288387 call chpl_build_bounded_range 0 radix[288381]))
    unknown call_tmp[740504] "expr temp" "maybe param" "maybe type" "temp"
    (740507 'move' call_tmp[740504](288391 call chpl__ensureDomainExpr call_tmp[740499]))
    unknown call_tmp[740509] "expr temp" "maybe param" "maybe type" "temp"
    (740512 'move' call_tmp[740509](288393 call chpl__buildArrayRuntimeType call_tmp[740504] int(64)[13]))
    (549099 'default init var' offsets[288395] call_tmp[740509])
    (288398 'end of statement')
    unknown end_offsets[288409] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740514] "expr temp" "maybe param" "maybe type" "temp"
    (740517 'move' call_tmp[740514](288401 call chpl_build_bounded_range 0 radix[288381]))
    unknown call_tmp[740519] "expr temp" "maybe param" "maybe type" "temp"
    (740522 'move' call_tmp[740519](288405 call chpl__ensureDomainExpr call_tmp[740514]))
    unknown call_tmp[740524] "expr temp" "maybe param" "maybe type" "temp"
    (740527 'move' call_tmp[740524](288407 call chpl__buildArrayRuntimeType call_tmp[740519] int(64)[13]))
    (549101 'default init var' end_offsets[288409] call_tmp[740524])
    (288412 'end of statement')
    { scopeless type
      unknown call_type_tmp[493359] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740529] "expr temp" "maybe param" "maybe type" "temp"
      (740532 'move' call_tmp[740529](288417 call A[288236] start_n[288224]))
      unknown call_tmp[740534] "expr temp" "maybe param" "maybe type" "temp"
      (740537 'move' call_tmp[740534](288421 call binForRecord call_tmp[740529] criterion[288239] startbit[288242]))
      unknown call_tmp[740539] "expr temp" "maybe param" "maybe type" "temp"
      (740542 'move' call_tmp[740539](288424 call call_tmp[740534] 1))
      (493363 'move' call_type_tmp[493359](288425 'typeof' call_tmp[740539]))
    }
    unknown ubitsType[288426] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493359]
    (549104 'move' ubitsType[288426] call_type_tmp[493359])
    unknown call_tmp[740544] "maybe param" "maybe type" "temp"
    (740547 'move' call_tmp[740544](288433 call max ubitsType[288426]))
    unknown min_ubits[288434] "dead at end of block" "insert auto destroy"
    (549106 'init var' min_ubits[288434] call_tmp[740544] ubitsType[288426])
    (288437 'end of statement')
    unknown max_ubits[288440] "dead at end of block" "insert auto destroy"
    (549108 'init var' max_ubits[288440] 0 ubitsType[288426])
    (288443 'end of statement')
    unknown call_tmp[740549] "maybe param" "maybe type" "temp"
    (740552 'move' call_tmp[740549](288446 call + radix[288381] 1))
    unknown min_bin[288448] "dead at end of block" "insert auto destroy"
    (549110 'init var' min_bin[288448] call_tmp[740549])
    (288451 'end of statement')
    unknown max_bin[288453] "dead at end of block" "insert auto destroy"
    (549112 'init var' max_bin[288453] 0)
    (288456 'end of statement')
    unknown any_ending[288458] "dead at end of block" "insert auto destroy"
    (549114 'init var' any_ending[288458] 0)
    (288461 'end of statement')
    unknown call_tmp[740556] "expr temp" "maybe param" "maybe type" "temp"
    (740559 'move' call_tmp[740556](288465 call alwaysSerial _mt[243] settings[288249]))
    unknown call_tmp[740561] "expr temp" "maybe param" "maybe type" "temp"
    (740564 'move' call_tmp[740561](288469 call == call_tmp[740556] 0))
    unknown call_tmp[740566] "expr temp" "maybe param" "maybe type" "temp"
    (740569 'move' call_tmp[740566](288723 call _cond_test call_tmp[740561]))
    if call_tmp[740566]
    {
      unknown call_tmp[740571] "expr temp" "maybe param" "maybe type" "temp"
      (740574 'move' call_tmp[740571](288474 call chpl_build_bounded_range start_n[288224] end_n[288230]))
      Forall {
        induction variables:
          
          unknown i[288590] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740571]
        shadow variables:
          offsets[288478] 'reduce' intent outer var offsets[288395]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288486] 'reduce' intent outer var min_ubits[288434]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288493] 'reduce' intent outer var max_ubits[288440]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288500] 'reduce' intent outer var any_ending[288458]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740576] "expr temp" "maybe param" "maybe type" "temp"
          (740579 'move' call_tmp[740576](288514 call A[288236] i[288590]))
          unknown call_tmp[740581] "maybe param" "maybe type" "temp"
          (740584 'move' call_tmp[740581](288518 call binForRecord call_tmp[740576] criterion[288239] startbit[288242]))
          const tmp[288519] "dead at end of block" "const" "insert auto destroy" "temp"
          (549116 'init var' tmp[288519] call_tmp[740581])
          (288526 call _check_tuple_var_decl tmp[288519] 2)
          (490407 'end of statement')
          unknown call_tmp[740586] "maybe param" "maybe type" "temp"
          (740589 'move' call_tmp[740586](288520 call tmp[288519] 0))
          const bin[288505] "dead at end of block" "const" "insert auto destroy"
          (549118 'init var' bin[288505] call_tmp[740586])
          unknown call_tmp[740591] "maybe param" "maybe type" "temp"
          (740594 'move' call_tmp[740591](288523 call tmp[288519] 1))
          const ubits[288507] "dead at end of block" "const" "insert auto destroy"
          (549120 'init var' ubits[288507] call_tmp[740591])
          (288531 'end of statement')
          unknown call_tmp[740596] "expr temp" "maybe param" "maybe type" "temp"
          (740599 'move' call_tmp[740596](288535 call < ubits[288507] min_ubits[288486]))
          unknown call_tmp[740601] "expr temp" "maybe param" "maybe type" "temp"
          (740604 'move' call_tmp[740601](288542 call _cond_test call_tmp[740596]))
          if call_tmp[740601]
          {
            (288539 call = min_ubits[288486] ubits[288507])
            (490408 'end of statement' min_ubits[288486] ubits[288507])
          }
          unknown call_tmp[740606] "expr temp" "maybe param" "maybe type" "temp"
          (740609 'move' call_tmp[740606](288549 call > ubits[288507] max_ubits[288493]))
          unknown call_tmp[740611] "expr temp" "maybe param" "maybe type" "temp"
          (740614 'move' call_tmp[740611](288556 call _cond_test call_tmp[740606]))
          if call_tmp[740611]
          {
            (288553 call = max_ubits[288493] ubits[288507])
            (490411 'end of statement' max_ubits[288493] ubits[288507])
          }
          unknown tmp[434450] "maybe param" "temp"
          (434461 'move' tmp[434450](288563 call == bin[288505] 0))
          unknown call_tmp[740616] "expr temp" "maybe param" "maybe type" "temp"
          (740619 'move' call_tmp[740616](434463 call _cond_invalid tmp[434450]))
          if call_tmp[740616]
          {
            (434466 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[580205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[580206] "maybe param" "temp"
          unknown call_tmp[740621] "expr temp" "maybe param" "maybe type" "temp"
          (740624 'move' call_tmp[740621](434451 call isTrue tmp[434450]))
          (580211 'move' tmp[580206](580209 call _cond_test call_tmp[740621]))
          if tmp[580206]
          {
            (580216 'move' tmp[580205](580213 '_paramFoldLogical' tmp[580206] 1))
          }
          {
            unknown tmp[580218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740626] "expr temp" "maybe param" "maybe type" "temp"
            (740629 'move' call_tmp[740626](288567 call == bin[288505] radix[288381]))
            (580220 'move' tmp[580218](434455 call isTrue call_tmp[740626]))
            (580225 'move' tmp[580205](580222 '_paramFoldLogical' tmp[580206] tmp[580218]))
          }
          unknown call_tmp[740631] "expr temp" "maybe param" "maybe type" "temp"
          (740634 'move' call_tmp[740631](288576 call _cond_test tmp[580205]))
          if call_tmp[740631]
          {
            (288573 call = any_ending[288500] 1)
            (490415 'end of statement' any_ending[288500])
          }
          unknown call_tmp[740636] "expr temp" "maybe param" "maybe type" "temp"
          (740639 'move' call_tmp[740636](288584 call offsets[288478] bin[288505]))
          (288586 call += call_tmp[740636] 1)
          (490417 'end of statement' offsets[288478] bin[288505])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288684] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288685] "expr temp" "temp"
        unknown call_tmp[740641] "expr temp" "maybe param" "maybe type" "temp"
        (740644 'move' call_tmp[740641](288699 call chpl_direct_range_iter start_n[288224] end_n[288230] 1))
        (288694 'move' _iterator[288685](288692 call _getIterator call_tmp[740641]))
        Defer
        {
          {
            (288715 call _freeIterator _iterator[288685])
          }
        }
        { scopeless type
          (288704 'move' _indexOfInterest[288684](288701 call iteratorIndex _iterator[288685]))
        }
        ForLoop[288686]
        {
          unknown i[288708] "index var" "insert auto destroy"
          (490421 'end of statement')
          (288710 'move' i[288708] _indexOfInterest[288684])
          (490422 'end of statement' i[288708])
          {
            unknown call_tmp[740646] "expr temp" "maybe param" "maybe type" "temp"
            (740649 'move' call_tmp[740646](288609 call A[288236] i[288708]))
            unknown call_tmp[740651] "maybe param" "maybe type" "temp"
            (740654 'move' call_tmp[740651](288613 call binForRecord call_tmp[740646] criterion[288239] startbit[288242]))
            const tmp[288614] "dead at end of block" "const" "insert auto destroy" "temp"
            (549122 'init var' tmp[288614] call_tmp[740651])
            (288621 call _check_tuple_var_decl tmp[288614] 2)
            (490424 'end of statement')
            unknown call_tmp[740656] "maybe param" "maybe type" "temp"
            (740659 'move' call_tmp[740656](288615 call tmp[288614] 0))
            const bin[288600] "dead at end of block" "const" "insert auto destroy"
            (549124 'init var' bin[288600] call_tmp[740656])
            unknown call_tmp[740661] "maybe param" "maybe type" "temp"
            (740664 'move' call_tmp[740661](288618 call tmp[288614] 1))
            const ubits[288602] "dead at end of block" "const" "insert auto destroy"
            (549126 'init var' ubits[288602] call_tmp[740661])
            (288626 'end of statement')
            unknown call_tmp[740666] "expr temp" "maybe param" "maybe type" "temp"
            (740669 'move' call_tmp[740666](288630 call < ubits[288602] min_ubits[288434]))
            unknown call_tmp[740671] "expr temp" "maybe param" "maybe type" "temp"
            (740674 'move' call_tmp[740671](288637 call _cond_test call_tmp[740666]))
            if call_tmp[740671]
            {
              (288634 call = min_ubits[288434] ubits[288602])
              (490425 'end of statement' min_ubits[288434] ubits[288602])
            }
            unknown call_tmp[740676] "expr temp" "maybe param" "maybe type" "temp"
            (740679 'move' call_tmp[740676](288644 call > ubits[288602] max_ubits[288440]))
            unknown call_tmp[740681] "expr temp" "maybe param" "maybe type" "temp"
            (740684 'move' call_tmp[740681](288651 call _cond_test call_tmp[740676]))
            if call_tmp[740681]
            {
              (288648 call = max_ubits[288440] ubits[288602])
              (490428 'end of statement' max_ubits[288440] ubits[288602])
            }
            unknown tmp[434471] "maybe param" "temp"
            (434482 'move' tmp[434471](288658 call == bin[288600] 0))
            unknown call_tmp[740686] "expr temp" "maybe param" "maybe type" "temp"
            (740689 'move' call_tmp[740686](434484 call _cond_invalid tmp[434471]))
            if call_tmp[740686]
            {
              (434487 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580233] "maybe param" "temp"
            unknown call_tmp[740691] "expr temp" "maybe param" "maybe type" "temp"
            (740694 'move' call_tmp[740691](434472 call isTrue tmp[434471]))
            (580238 'move' tmp[580233](580236 call _cond_test call_tmp[740691]))
            if tmp[580233]
            {
              (580243 'move' tmp[580232](580240 '_paramFoldLogical' tmp[580233] 1))
            }
            {
              unknown tmp[580245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740696] "expr temp" "maybe param" "maybe type" "temp"
              (740699 'move' call_tmp[740696](288662 call == bin[288600] radix[288381]))
              (580247 'move' tmp[580245](434476 call isTrue call_tmp[740696]))
              (580252 'move' tmp[580232](580249 '_paramFoldLogical' tmp[580233] tmp[580245]))
            }
            unknown call_tmp[740701] "expr temp" "maybe param" "maybe type" "temp"
            (740704 'move' call_tmp[740701](288671 call _cond_test tmp[580232]))
            if call_tmp[740701]
            {
              (288668 call = any_ending[288458] 1)
              (490432 'end of statement' any_ending[288458])
            }
            unknown call_tmp[740706] "expr temp" "maybe param" "maybe type" "temp"
            (740709 'move' call_tmp[740706](288679 call offsets[288395] bin[288600]))
            (288681 call += call_tmp[740706] 1)
            (490434 'end of statement' offsets[288395] bin[288600])
          }
          label _continueLabel[288689]
          _indexOfInterest[288684]
          _iterator[288685]
        }
        label _breakLabel[288690]
      }
    }
    unknown call_tmp[740711] "expr temp" "maybe param" "maybe type" "temp"
    (740714 'move' call_tmp[740711](288729 call == any_ending[288458] 0))
    unknown call_tmp[740716] "expr temp" "maybe param" "maybe type" "temp"
    (740719 'move' call_tmp[740716](288764 call _cond_test call_tmp[740711]))
    if call_tmp[740716]
    {
      unknown call_tmp[740721] "maybe param" "maybe type" "temp"
      (740724 'move' call_tmp[740721](288736 call findDataStartBit startbit[288242] min_ubits[288434] max_ubits[288440]))
      unknown dataStartBit[288737] "dead at end of block" "insert auto destroy"
      (549128 'init var' dataStartBit[288737] call_tmp[740721])
      (288740 'end of statement' min_ubits[288434] max_ubits[288440])
      unknown call_tmp[740726] "expr temp" "maybe param" "maybe type" "temp"
      (740729 'move' call_tmp[740726](288744 call > dataStartBit[288737] startbit[288242]))
      unknown call_tmp[740731] "expr temp" "maybe param" "maybe type" "temp"
      (740734 'move' call_tmp[740731](288760 call _cond_test call_tmp[740726]))
      if call_tmp[740731]
      {
        (288755 call msbRadixSort start_n[288224] end_n[288230] A[288236] criterion[288239] dataStartBit[288737] endbit[288246] settings[288249])
        (490439 'end of statement' dataStartBit[288737])
        gotoReturn _end_msbRadixSort[538283] _end_msbRadixSort[538283]
      }
    }
    unknown call_tmp[740738] "expr temp" "maybe param" "maybe type" "temp"
    (740741 'move' call_tmp[740738](288769 call progress _mt[243] settings[288249]))
    unknown call_tmp[740743] "expr temp" "maybe param" "maybe type" "temp"
    (740746 'move' call_tmp[740743](288791 call _cond_test call_tmp[740738]))
    if call_tmp[740743]
    {
      (288789 call writeln "accumulate")
    }
    unknown sum[288797] "dead at end of block" "insert auto destroy"
    (549130 'init var' sum[288797] 0)
    (288800 'end of statement')
    {
      unknown _indexOfInterest[288842] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288843] "expr temp" "temp"
      unknown call_tmp[740748] "expr temp" "maybe param" "maybe type" "temp"
      (740751 'move' call_tmp[740748](288852 call _getIterator offsets[288395]))
      unknown call_tmp[740753] "expr temp" "maybe param" "maybe type" "temp"
      (740756 'move' call_tmp[740753](288855 call _getIterator end_offsets[288409]))
      (288857 'move' _iterator[288843](288809 call _build_tuple call_tmp[740748] call_tmp[740753]))
      Defer
      {
        {
          (288887 call _freeIterator _iterator[288843])
        }
      }
      { scopeless type
        (288862 'move' _indexOfInterest[288842](288859 call iteratorIndex _iterator[288843]))
      }
      ForLoop[288844]
      {
        (288867 call _check_tuple_var_decl _indexOfInterest[288842] 2)
        (490444 'end of statement')
        unknown off[288873] "index var" "insert auto destroy"
        (490445 'end of statement')
        (288875 'move' off[288873](288871 call _indexOfInterest[288842] 0))
        (490446 'end of statement' off[288873])
        unknown end[288880] "index var" "insert auto destroy"
        (490448 'end of statement')
        (288882 'move' end[288880](288878 call _indexOfInterest[288842] 1))
        (490449 'end of statement' end[288880])
        {
          unknown binstart[288811] "dead at end of block" "insert auto destroy"
          (549132 'init var' binstart[288811] sum[288797])
          (288814 'end of statement')
          (288818 call += sum[288797] off[288873])
          (490452 'end of statement' sum[288797] off[288873])
          unknown binend[288822] "dead at end of block" "insert auto destroy"
          (549134 'init var' binend[288822] sum[288797])
          (288825 'end of statement' sum[288797] sum[288797])
          unknown call_tmp[740758] "expr temp" "maybe param" "maybe type" "temp"
          (740761 'move' call_tmp[740758](288829 call + start_n[288224] binstart[288811]))
          (288831 call = off[288873] call_tmp[740758])
          (490456 'end of statement' off[288873] binstart[288811])
          unknown call_tmp[740763] "expr temp" "maybe param" "maybe type" "temp"
          (740766 'move' call_tmp[740763](288837 call + start_n[288224] binend[288822]))
          (288839 call = end[288880] call_tmp[740763])
          (490459 'end of statement' end[288880] binend[288822])
        }
        label _continueLabel[288847]
        _indexOfInterest[288842]
        _iterator[288843]
      }
      label _breakLabel[288848]
    }
    unknown curbin[288895] "dead at end of block" "insert auto destroy"
    (549136 'init var' curbin[288895] 0)
    (288898 'end of statement' radixbits[288370] radix[288381] radix[288381] ubitsType[288426] ubitsType[288426] ubitsType[288426] radix[288381])
    unknown call_tmp[740770] "expr temp" "maybe param" "maybe type" "temp"
    (740773 'move' call_tmp[740770](288900 call progress _mt[243] settings[288249]))
    unknown call_tmp[740775] "expr temp" "maybe param" "maybe type" "temp"
    (740778 'move' call_tmp[740775](288924 call _cond_test call_tmp[740770]))
    if call_tmp[740775]
    {
      (288922 call writeln "shuffle")
    }
    {
      unknown tmp[289454] "temp"
      (289472 'move' tmp[289454](289470 call _cond_test 1))
      WhileDo[289459]
      {
        {
          {
            unknown tmp[288952] "temp"
            unknown tmp[434513] "maybe param" "temp"
            (434524 'move' tmp[434513](288985 call <= curbin[288895] radix[288381]))
            unknown call_tmp[740780] "expr temp" "maybe param" "maybe type" "temp"
            (740783 'move' call_tmp[740780](434526 call _cond_invalid tmp[434513]))
            if call_tmp[740780]
            {
              (434529 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580260] "maybe param" "temp"
            unknown call_tmp[740785] "expr temp" "maybe param" "maybe type" "temp"
            (740788 'move' call_tmp[740785](434514 call isTrue tmp[434513]))
            (580265 'move' tmp[580260](580263 call _cond_test call_tmp[740785]))
            if tmp[580260]
            {
              unknown tmp[580267] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740790] "expr temp" "maybe param" "maybe type" "temp"
              (740793 'move' call_tmp[740790](288991 call offsets[288395] curbin[288895]))
              unknown call_tmp[740795] "expr temp" "maybe param" "maybe type" "temp"
              (740798 'move' call_tmp[740795](288994 call end_offsets[288409] curbin[288895]))
              unknown call_tmp[740800] "expr temp" "maybe param" "maybe type" "temp"
              (740803 'move' call_tmp[740800](288989 call == call_tmp[740790] call_tmp[740795]))
              (580269 'move' tmp[580267](434517 call isTrue call_tmp[740800]))
              (580274 'move' tmp[580259](580271 '_paramFoldLogical' tmp[580260] tmp[580267]))
            }
            {
              (580279 'move' tmp[580259](580276 '_paramFoldLogical' tmp[580260] 0))
            }
            (288996 'move' tmp[288952](288981 call _cond_test tmp[580259]))
            WhileDo[288957]
            {
              {
                (288948 call += curbin[288895] 1)
                (490464 'end of statement' curbin[288895])
              }
              label _continueLabel[288955]
              unknown tmp[434492] "maybe param" "temp"
              (434503 'move' tmp[434492](288965 call <= curbin[288895] radix[288381]))
              unknown call_tmp[740805] "expr temp" "maybe param" "maybe type" "temp"
              (740808 'move' call_tmp[740805](434505 call _cond_invalid tmp[434492]))
              if call_tmp[740805]
              {
                (434508 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580286] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580287] "maybe param" "temp"
              unknown call_tmp[740810] "expr temp" "maybe param" "maybe type" "temp"
              (740813 'move' call_tmp[740810](434493 call isTrue tmp[434492]))
              (580292 'move' tmp[580287](580290 call _cond_test call_tmp[740810]))
              if tmp[580287]
              {
                unknown tmp[580294] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740815] "expr temp" "maybe param" "maybe type" "temp"
                (740818 'move' call_tmp[740815](288971 call offsets[288395] curbin[288895]))
                unknown call_tmp[740820] "expr temp" "maybe param" "maybe type" "temp"
                (740823 'move' call_tmp[740820](288974 call end_offsets[288409] curbin[288895]))
                unknown call_tmp[740825] "expr temp" "maybe param" "maybe type" "temp"
                (740828 'move' call_tmp[740825](288969 call == call_tmp[740815] call_tmp[740820]))
                (580296 'move' tmp[580294](434496 call isTrue call_tmp[740825]))
                (580301 'move' tmp[580286](580298 '_paramFoldLogical' tmp[580287] tmp[580294]))
              }
              {
                (580306 'move' tmp[580286](580303 '_paramFoldLogical' tmp[580287] 0))
              }
              (288976 'move' tmp[288952](288961 call _cond_test tmp[580286]))
              tmp[288952]
            }
            label _breakLabel[288956]
          }
          unknown call_tmp[740830] "expr temp" "maybe param" "maybe type" "temp"
          (740833 'move' call_tmp[740830](289002 call > curbin[288895] radix[288381]))
          unknown call_tmp[740835] "expr temp" "maybe param" "maybe type" "temp"
          (740838 'move' call_tmp[740835](289008 call _cond_test call_tmp[740830]))
          if call_tmp[740835]
          {
            break _breakLabel[289458] _breakLabel[289458]
          }
          unknown call_tmp[740842] "maybe param" "maybe type" "temp"
          (740845 'move' call_tmp[740842](289015 call DISTRIBUTE_BUFFER _mt[243] settings[288249]))
          unknown max_buf[289018] "dead at end of block" "param"
          (549138 'init var' max_buf[289018] call_tmp[740842])
          (289021 'end of statement')
          unknown buf[289029] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740849] "expr temp" "maybe param" "maybe type" "temp"
          (740852 'move' call_tmp[740849](289024 call eltType _mt[243] A[288236]))
          unknown call_tmp[740854] "expr temp" "maybe param" "maybe type" "temp"
          (740857 'move' call_tmp[740854](289027 call * max_buf[289018] call_tmp[740849]))
          (549140 'default init var' buf[289029] call_tmp[740854])
          (289032 'end of statement')
          unknown used_buf[289034] "dead at end of block" "insert auto destroy"
          (549142 'init var' used_buf[289034] 0)
          (289037 'end of statement')
          unknown call_tmp[740859] "maybe param" "maybe type" "temp"
          (740862 'move' call_tmp[740859](289041 call end_offsets[288409] curbin[288895]))
          unknown end[289042] "dead at end of block" "insert auto destroy"
          (549144 'init var' end[289042] call_tmp[740859])
          (289045 'end of statement')
          unknown call_tmp[740864] "expr temp" "maybe param" "maybe type" "temp"
          (740867 'move' call_tmp[740864](289050 call offsets[288395] curbin[288895]))
          unknown call_tmp[740869] "expr temp" "maybe param" "maybe type" "temp"
          (740872 'move' call_tmp[740869](289055 call end_offsets[288409] curbin[288895]))
          unknown call_tmp[740874] "expr temp" "maybe param" "maybe type" "temp"
          (740877 'move' call_tmp[740874](289058 call * 2 max_buf[289018]))
          unknown call_tmp[740879] "expr temp" "maybe param" "maybe type" "temp"
          (740882 'move' call_tmp[740879](289060 call - call_tmp[740869] call_tmp[740874]))
          unknown call_tmp[740884] "maybe param" "maybe type" "temp"
          (740887 'move' call_tmp[740884](289062 call max call_tmp[740864] call_tmp[740879]))
          unknown endfast[289063] "dead at end of block" "insert auto destroy"
          (549146 'init var' endfast[289063] call_tmp[740884])
          (289066 'end of statement')
          unknown call_tmp[740889] "expr temp" "maybe param" "maybe type" "temp"
          (740892 'move' call_tmp[740889](289071 call offsets[288395] curbin[288895]))
          unknown call_tmp[740894] "expr temp" "maybe param" "maybe type" "temp"
          (740897 'move' call_tmp[740894](289076 call end_offsets[288409] curbin[288895]))
          unknown call_tmp[740899] "expr temp" "maybe param" "maybe type" "temp"
          (740902 'move' call_tmp[740899](289078 call - call_tmp[740894] max_buf[289018]))
          unknown call_tmp[740904] "maybe param" "maybe type" "temp"
          (740907 'move' call_tmp[740904](289080 call max call_tmp[740889] call_tmp[740899]))
          unknown bufstart[289081] "dead at end of block" "insert auto destroy"
          (549148 'init var' bufstart[289081] call_tmp[740904])
          (289084 'end of statement')
          unknown i[289086] "dead at end of block" "insert auto destroy"
          (549150 'init var' i[289086] bufstart[289081])
          (289089 'end of statement' end_offsets[288409] curbin[288895] offsets[288395] curbin[288895] end_offsets[288409] curbin[288895] offsets[288395] curbin[288895] end_offsets[288409] curbin[288895] bufstart[289081])
          {
            unknown tmp[289116] "temp"
            unknown call_tmp[740909] "expr temp" "maybe param" "maybe type" "temp"
            (740912 'move' call_tmp[740909](289137 call < i[289086] end[289042]))
            (289140 'move' tmp[289116](289135 call _cond_test call_tmp[740909]))
            WhileDo[289121]
            {
              {
                unknown call_tmp[740914] "expr temp" "maybe param" "maybe type" "temp"
                (740917 'move' call_tmp[740914](289097 call buf[289029] used_buf[289034]))
                unknown call_tmp[740919] "expr temp" "maybe param" "maybe type" "temp"
                (740922 'move' call_tmp[740919](289101 call A[288236] i[289086]))
                (289102 call <=> call_tmp[740914] call_tmp[740919])
                (490478 'end of statement' buf[289029] used_buf[289034] i[289086])
                (289108 call += used_buf[289034] 1)
                (490482 'end of statement' used_buf[289034])
                (289113 call += i[289086] 1)
                (490484 'end of statement' i[289086])
              }
              label _continueLabel[289119]
              unknown call_tmp[740924] "expr temp" "maybe param" "maybe type" "temp"
              (740927 'move' call_tmp[740924](289127 call < i[289086] end[289042]))
              (289130 'move' tmp[289116](289125 call _cond_test call_tmp[740924]))
              tmp[289116]
            }
            label _breakLabel[289120]
          }
          {
            unknown tmp[289242] "temp"
            unknown call_tmp[740929] "expr temp" "maybe param" "maybe type" "temp"
            (740932 'move' call_tmp[740929](289267 call offsets[288395] curbin[288895]))
            unknown call_tmp[740934] "expr temp" "maybe param" "maybe type" "temp"
            (740937 'move' call_tmp[740934](289265 call < call_tmp[740929] endfast[289063]))
            (289270 'move' tmp[289242](289263 call _cond_test call_tmp[740934]))
            WhileDo[289247]
            {
              {
                {
                  unknown j[289204] "dead at end of block" "insert auto destroy"
                  (549152 'init var' j[289204] 0)
                  (490486 'end of statement')
                  unknown tmp[289205] "maybe param" "temp"
                  unknown call_tmp[740939] "expr temp" "maybe param" "maybe type" "temp"
                  (740942 'move' call_tmp[740939](289153 call - max_buf[289018] 1))
                  (289217 'move' tmp[289205](289215 call chpl_compute_low_param_loop_bound 0 call_tmp[740939]))
                  unknown tmp[289206] "maybe param" "temp"
                  unknown call_tmp[740944] "expr temp" "maybe param" "maybe type" "temp"
                  (740947 'move' call_tmp[740944](289222 call - max_buf[289018] 1))
                  (289227 'move' tmp[289206](289225 call chpl_compute_high_param_loop_bound 0 call_tmp[740944]))
                  unknown tmp[289207] "maybe param" "temp"
                  (289230 'move' tmp[289207] 1)
                  ParamForLoop[289232]
                  { j[289204] tmp[289205] tmp[289206] tmp[289207]
                    {
                      unknown call_tmp[740949] "expr temp" "maybe param" "maybe type" "temp"
                      (740952 'move' call_tmp[740949](289166 call buf[289029] j[289204]))
                      unknown call_tmp[740954] "maybe param" "maybe type" "temp"
                      (740957 'move' call_tmp[740954](289170 call binForRecord call_tmp[740949] criterion[288239] startbit[288242]))
                      const tmp[289171] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549154 'init var' tmp[289171] call_tmp[740954])
                      (289175 call _check_tuple_var_decl tmp[289171] 2)
                      (490487 'end of statement')
                      unknown call_tmp[740959] "maybe param" "maybe type" "temp"
                      (740962 'move' call_tmp[740959](289172 call tmp[289171] 0))
                      const bin[289157] "dead at end of block" "const" "insert auto destroy"
                      (549156 'init var' bin[289157] call_tmp[740959])
                      (289180 'end of statement')
                      unknown call_tmp[740964] "expr temp" "maybe param" "maybe type" "temp"
                      (740967 'move' call_tmp[740964](289186 call offsets[288395] bin[289157]))
                      unknown call_tmp[740969] "expr temp" "maybe param" "maybe type" "temp"
                      (740972 'move' call_tmp[740969](289188 call A[288236] call_tmp[740964]))
                      unknown call_tmp[740974] "expr temp" "maybe param" "maybe type" "temp"
                      (740977 'move' call_tmp[740974](289192 call buf[289029] j[289204]))
                      (289193 call <=> call_tmp[740969] call_tmp[740974])
                      (490488 'end of statement' offsets[288395] bin[289157] buf[289029] j[289204])
                      unknown call_tmp[740979] "expr temp" "maybe param" "maybe type" "temp"
                      (740982 'move' call_tmp[740979](289199 call offsets[288395] bin[289157]))
                      (289201 call += call_tmp[740979] 1)
                      (490493 'end of statement' offsets[288395] bin[289157])
                    }
                  }
                  label _unused_continueLabel[289209]
                  label _breakLabel[289208]
                }
              }
              label _continueLabel[289245]
              unknown call_tmp[740984] "expr temp" "maybe param" "maybe type" "temp"
              (740987 'move' call_tmp[740984](289255 call offsets[288395] curbin[288895]))
              unknown call_tmp[740989] "expr temp" "maybe param" "maybe type" "temp"
              (740992 'move' call_tmp[740989](289253 call < call_tmp[740984] endfast[289063]))
              (289258 'move' tmp[289242](289251 call _cond_test call_tmp[740989]))
              tmp[289242]
            }
            label _breakLabel[289246]
          }
          {
            unknown tmp[289423] "temp"
            unknown call_tmp[740994] "expr temp" "maybe param" "maybe type" "temp"
            (740997 'move' call_tmp[740994](289448 call offsets[288395] curbin[288895]))
            unknown call_tmp[740999] "expr temp" "maybe param" "maybe type" "temp"
            (741002 'move' call_tmp[740999](289446 call < call_tmp[740994] end[289042]))
            (289451 'move' tmp[289423](289444 call _cond_test call_tmp[740999]))
            WhileDo[289428]
            {
              {
                unknown j[289281] "dead at end of block" "insert auto destroy"
                (549158 'init var' j[289281] 0)
                (289284 'end of statement')
                {
                  unknown tmp[289384] "temp"
                  unknown tmp[434576] "maybe param" "temp"
                  (434587 'move' tmp[434576](289413 call >= used_buf[289034] 0))
                  unknown call_tmp[741004] "expr temp" "maybe param" "maybe type" "temp"
                  (741007 'move' call_tmp[741004](434589 call _cond_invalid tmp[434576]))
                  if call_tmp[741004]
                  {
                    (434592 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580313] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580314] "maybe param" "temp"
                  unknown call_tmp[741009] "expr temp" "maybe param" "maybe type" "temp"
                  (741012 'move' call_tmp[741009](434577 call isTrue tmp[434576]))
                  (580319 'move' tmp[580314](580317 call _cond_test call_tmp[741009]))
                  if tmp[580314]
                  {
                    unknown tmp[580321] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[741014] "expr temp" "maybe param" "maybe type" "temp"
                    (741017 'move' call_tmp[741014](289417 call < j[289281] used_buf[289034]))
                    (580323 'move' tmp[580321](434580 call isTrue call_tmp[741014]))
                    (580328 'move' tmp[580313](580325 '_paramFoldLogical' tmp[580314] tmp[580321]))
                  }
                  {
                    (580333 'move' tmp[580313](580330 '_paramFoldLogical' tmp[580314] 0))
                  }
                  (289420 'move' tmp[289384](289409 call _cond_test tmp[580313]))
                  WhileDo[289389]
                  {
                    {
                      unknown call_tmp[741019] "expr temp" "maybe param" "maybe type" "temp"
                      (741022 'move' call_tmp[741019](289305 call buf[289029] j[289281]))
                      unknown call_tmp[741024] "maybe param" "maybe type" "temp"
                      (741027 'move' call_tmp[741024](289309 call binForRecord call_tmp[741019] criterion[288239] startbit[288242]))
                      const tmp[289310] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549160 'init var' tmp[289310] call_tmp[741024])
                      (289314 call _check_tuple_var_decl tmp[289310] 2)
                      (490497 'end of statement')
                      unknown call_tmp[741029] "maybe param" "maybe type" "temp"
                      (741032 'move' call_tmp[741029](289311 call tmp[289310] 0))
                      const bin[289296] "dead at end of block" "const" "insert auto destroy"
                      (549162 'init var' bin[289296] call_tmp[741029])
                      (289319 'end of statement')
                      unknown call_tmp[741034] "maybe param" "maybe type" "temp"
                      (741037 'move' call_tmp[741034](289324 call offsets[288395] bin[289296]))
                      unknown offset[289325] "dead at end of block" "insert auto destroy"
                      (549164 'init var' offset[289325] call_tmp[741034])
                      (289328 'end of statement' offsets[288395] bin[289296])
                      unknown call_tmp[741039] "expr temp" "maybe param" "maybe type" "temp"
                      (741042 'move' call_tmp[741039](289332 call A[288236] offset[289325]))
                      unknown call_tmp[741044] "expr temp" "maybe param" "maybe type" "temp"
                      (741047 'move' call_tmp[741044](289336 call buf[289029] j[289281]))
                      (289337 call <=> call_tmp[741039] call_tmp[741044])
                      (490500 'end of statement' offset[289325] buf[289029] j[289281])
                      unknown call_tmp[741049] "expr temp" "maybe param" "maybe type" "temp"
                      (741052 'move' call_tmp[741049](289343 call offsets[288395] bin[289296]))
                      (289345 call += call_tmp[741049] 1)
                      (490504 'end of statement' offsets[288395] bin[289296])
                      unknown tmp[434534] "maybe param" "temp"
                      (434545 'move' tmp[434534](289350 call == bin[289296] curbin[288895]))
                      unknown call_tmp[741054] "expr temp" "maybe param" "maybe type" "temp"
                      (741057 'move' call_tmp[741054](434547 call _cond_invalid tmp[434534]))
                      if call_tmp[741054]
                      {
                        (434550 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580340] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580341] "maybe param" "temp"
                      unknown call_tmp[741059] "expr temp" "maybe param" "maybe type" "temp"
                      (741062 'move' call_tmp[741059](434535 call isTrue tmp[434534]))
                      (580346 'move' tmp[580341](580344 call _cond_test call_tmp[741059]))
                      if tmp[580341]
                      {
                        unknown tmp[580348] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[741064] "expr temp" "maybe param" "maybe type" "temp"
                        (741067 'move' call_tmp[741064](289354 call >= offset[289325] bufstart[289081]))
                        (580350 'move' tmp[580348](434538 call isTrue call_tmp[741064]))
                        (580355 'move' tmp[580340](580352 '_paramFoldLogical' tmp[580341] tmp[580348]))
                      }
                      {
                        (580360 'move' tmp[580340](580357 '_paramFoldLogical' tmp[580341] 0))
                      }
                      unknown call_tmp[741069] "expr temp" "maybe param" "maybe type" "temp"
                      (741072 'move' call_tmp[741069](289375 call _cond_test tmp[580340]))
                      if call_tmp[741069]
                      {
                        (289360 call -= used_buf[289034] 1)
                        (490508 'end of statement' used_buf[289034])
                        unknown call_tmp[741074] "expr temp" "maybe param" "maybe type" "temp"
                        (741077 'move' call_tmp[741074](289367 call buf[289029] j[289281]))
                        unknown call_tmp[741079] "expr temp" "maybe param" "maybe type" "temp"
                        (741082 'move' call_tmp[741079](289371 call buf[289029] used_buf[289034]))
                        (289372 call <=> call_tmp[741074] call_tmp[741079])
                        (490510 'end of statement' buf[289029] j[289281] buf[289029] used_buf[289034])
                      }
                      (289381 call += j[289281] 1)
                      (490515 'end of statement' j[289281])
                    }
                    label _continueLabel[289387]
                    unknown tmp[434555] "maybe param" "temp"
                    (434566 'move' tmp[434555](289397 call >= used_buf[289034] 0))
                    unknown call_tmp[741084] "expr temp" "maybe param" "maybe type" "temp"
                    (741087 'move' call_tmp[741084](434568 call _cond_invalid tmp[434555]))
                    if call_tmp[741084]
                    {
                      (434571 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580367] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580368] "maybe param" "temp"
                    unknown call_tmp[741089] "expr temp" "maybe param" "maybe type" "temp"
                    (741092 'move' call_tmp[741089](434556 call isTrue tmp[434555]))
                    (580373 'move' tmp[580368](580371 call _cond_test call_tmp[741089]))
                    if tmp[580368]
                    {
                      unknown tmp[580375] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[741094] "expr temp" "maybe param" "maybe type" "temp"
                      (741097 'move' call_tmp[741094](289401 call < j[289281] used_buf[289034]))
                      (580377 'move' tmp[580375](434559 call isTrue call_tmp[741094]))
                      (580382 'move' tmp[580367](580379 '_paramFoldLogical' tmp[580368] tmp[580375]))
                    }
                    {
                      (580387 'move' tmp[580367](580384 '_paramFoldLogical' tmp[580368] 0))
                    }
                    (289404 'move' tmp[289384](289393 call _cond_test tmp[580367]))
                    tmp[289384]
                  }
                  label _breakLabel[289388]
                }
              }
              label _continueLabel[289426]
              unknown call_tmp[741099] "expr temp" "maybe param" "maybe type" "temp"
              (741102 'move' call_tmp[741099](289436 call offsets[288395] curbin[288895]))
              unknown call_tmp[741104] "expr temp" "maybe param" "maybe type" "temp"
              (741107 'move' call_tmp[741104](289434 call < call_tmp[741099] end[289042]))
              (289439 'move' tmp[289423](289432 call _cond_test call_tmp[741104]))
              tmp[289423]
            }
            label _breakLabel[289427]
          }
        }
        label _continueLabel[289457]
        (289465 'move' tmp[289454](289463 call _cond_test 1))
        tmp[289454]
      }
      label _breakLabel[289458]
    }
    unknown call_tmp[741111] "expr temp" "maybe param" "maybe type" "temp"
    (741114 'move' call_tmp[741111](289476 call progress _mt[243] settings[288249]))
    unknown call_tmp[741116] "expr temp" "maybe param" "maybe type" "temp"
    (741119 'move' call_tmp[741116](289500 call _cond_test call_tmp[741111]))
    if call_tmp[741116]
    {
      (289498 call writeln "sort sub-problems")
    }
    unknown call_tmp[741121] "expr temp" "maybe param" "maybe type" "temp"
    (741124 'move' call_tmp[741121](289508 call offsets[288395] 0))
    (289510 call = call_tmp[741121] start_n[288224])
    (490519 'end of statement' offsets[288395])
    {
      unknown _indexOfInterest[289533] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289534] "expr temp" "temp"
      unknown call_tmp[741126] "expr temp" "maybe param" "maybe type" "temp"
      (741129 'move' call_tmp[741126](289548 call chpl_direct_range_iter 1 radix[288381] 1))
      (289543 'move' _iterator[289534](289541 call _getIterator call_tmp[741126]))
      Defer
      {
        {
          (289564 call _freeIterator _iterator[289534])
        }
      }
      { scopeless type
        (289553 'move' _indexOfInterest[289533](289550 call iteratorIndex _iterator[289534]))
      }
      ForLoop[289535]
      {
        unknown i[289557] "index var" "insert auto destroy"
        (490522 'end of statement')
        (289559 'move' i[289557] _indexOfInterest[289533])
        (490523 'end of statement' i[289557])
        {
          unknown call_tmp[741131] "expr temp" "maybe param" "maybe type" "temp"
          (741134 'move' call_tmp[741131](289521 call offsets[288395] i[289557]))
          unknown call_tmp[741136] "expr temp" "maybe param" "maybe type" "temp"
          (741139 'move' call_tmp[741136](289525 call - i[289557] 1))
          unknown call_tmp[741141] "expr temp" "maybe param" "maybe type" "temp"
          (741144 'move' call_tmp[741141](289528 call end_offsets[288409] call_tmp[741136]))
          (289529 call = call_tmp[741131] call_tmp[741141])
          (490525 'end of statement' offsets[288395] i[289557] end_offsets[288409] i[289557])
        }
        label _continueLabel[289538]
        _indexOfInterest[289533]
        _iterator[289534]
      }
      label _breakLabel[289539]
    }
    unknown call_tmp[741148] "expr temp" "maybe param" "maybe type" "temp"
    (741151 'move' call_tmp[741148](289572 call alwaysSerial _mt[243] settings[288249]))
    unknown call_tmp[741153] "expr temp" "maybe param" "maybe type" "temp"
    (741156 'move' call_tmp[741153](289576 call == call_tmp[741148] 0))
    unknown call_tmp[741158] "expr temp" "maybe param" "maybe type" "temp"
    (741161 'move' call_tmp[741158](289966 call _cond_test call_tmp[741153]))
    if call_tmp[741158]
    {
      unknown call_tmp[741163] "maybe param" "maybe type" "temp"
      (741166 'move' call_tmp[741163](289580 call + startbit[288242] radixbits[288370]))
      const subbits[289582] "dead at end of block" "const" "insert auto destroy"
      (549166 'init var' subbits[289582] call_tmp[741163])
      (289585 'end of statement')
      unknown nbigsubs[289588] "dead at end of block" "insert auto destroy"
      (549168 'init var' nbigsubs[289588] 0)
      (289591 'end of statement')
      unknown bigsubs[289606] "dead at end of block" "insert auto destroy"
      unknown call_tmp[741168] "expr temp" "maybe param" "maybe type" "temp"
      (741171 'move' call_tmp[741168](289594 call chpl_build_bounded_range 0 radix[288381]))
      unknown call_tmp[741173] "expr temp" "maybe param" "maybe type" "temp"
      (741176 'move' call_tmp[741173](289602 call chpl__ensureDomainExpr call_tmp[741168]))
      unknown call_tmp[741178] "expr temp" "maybe param" "maybe type" "temp"
      (741181 'move' call_tmp[741178](289600 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[741183] "expr temp" "maybe param" "maybe type" "temp"
      (741186 'move' call_tmp[741183](289604 call chpl__buildArrayRuntimeType call_tmp[741173] call_tmp[741178]))
      (549170 'default init var' bigsubs[289606] call_tmp[741183])
      (289609 'end of statement')
      unknown call_tmp[741188] "expr temp" "maybe param" "maybe type" "temp"
      (741191 'move' call_tmp[741188](364825 call here[90438]))
      unknown call_tmp[741195] "maybe param" "maybe type" "temp"
      (741198 'move' call_tmp[741195](289615 call(289611 call (partial) runningTasks _mt[243] call_tmp[741188])))
      const runningNow[289616] "dead at end of block" "const" "insert auto destroy"
      (549172 'init var' runningNow[289616] call_tmp[741195])
      (289619 'end of statement' radixbits[288370] radix[288381])
      {
        unknown _indexOfInterest[289743] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289744] "expr temp" "temp"
        unknown call_tmp[741200] "expr temp" "maybe param" "maybe type" "temp"
        (741203 'move' call_tmp[741200](289758 call - radix[288381] 1))
        unknown call_tmp[741205] "expr temp" "maybe param" "maybe type" "temp"
        (741208 'move' call_tmp[741205](289761 call chpl_direct_range_iter 1 call_tmp[741200] 1))
        (289753 'move' _iterator[289744](289751 call _getIterator call_tmp[741205]))
        Defer
        {
          {
            (289777 call _freeIterator _iterator[289744])
          }
        }
        { scopeless type
          (289766 'move' _indexOfInterest[289743](289763 call iteratorIndex _iterator[289744]))
        }
        ForLoop[289745]
        {
          unknown bin[289770] "index var" "insert auto destroy"
          (490533 'end of statement')
          (289772 'move' bin[289770] _indexOfInterest[289743])
          (490534 'end of statement' bin[289770])
          {
            unknown call_tmp[741210] "maybe param" "maybe type" "temp"
            (741213 'move' call_tmp[741210](289631 call offsets[288395] bin[289770]))
            const bin_start[289632] "dead at end of block" "const" "insert auto destroy"
            (549174 'init var' bin_start[289632] call_tmp[741210])
            (289635 'end of statement')
            const bin_end[289658] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580394] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580395] "maybe param" "temp"
            unknown call_tmp[741215] "expr temp" "maybe param" "maybe type" "temp"
            (741218 'move' call_tmp[741215](289639 call + bin[289770] 1))
            unknown call_tmp[741220] "expr temp" "maybe param" "maybe type" "temp"
            (741223 'move' call_tmp[741220](289642 call <= call_tmp[741215] radix[288381]))
            (580400 'move' tmp[580395](580398 call _cond_test call_tmp[741220]))
            if tmp[580395]
            {
              unknown tmp[580402] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741225] "expr temp" "maybe param" "maybe type" "temp"
              (741228 'move' call_tmp[741225](289647 call + bin[289770] 1))
              unknown call_tmp[741230] "expr temp" "maybe param" "maybe type" "temp"
              (741233 'move' call_tmp[741230](289650 call offsets[288395] call_tmp[741225]))
              (580404 'move' tmp[580402](289652 call - call_tmp[741230] 1))
              (580409 'move' tmp[580394](580406 '_paramFoldLogical' tmp[580395] tmp[580402]))
            }
            {
              (580414 'move' tmp[580394](580411 '_paramFoldLogical' tmp[580395] end_n[288230]))
            }
            (549176 'init var' bin_end[289658] tmp[580394])
            (289661 'end of statement')
            unknown call_tmp[741235] "expr temp" "maybe param" "maybe type" "temp"
            (741238 'move' call_tmp[741235](289664 call + 1 bin_end[289658]))
            unknown call_tmp[741240] "maybe param" "maybe type" "temp"
            (741243 'move' call_tmp[741240](289667 call - call_tmp[741235] bin_start[289632]))
            const num[289669] "dead at end of block" "const" "insert auto destroy"
            (549178 'init var' num[289669] call_tmp[741240])
            (289672 'end of statement' offsets[288395] bin[289770] bin[289770] radix[288381] offsets[288395] bin[289770] bin_end[289658] bin_start[289632])
            unknown tmp[434618] "maybe param" "temp"
            (434629 'move' tmp[434618](289675 call <= num[289669] 1))
            unknown call_tmp[741245] "expr temp" "maybe param" "maybe type" "temp"
            (741248 'move' call_tmp[741245](434631 call _cond_invalid tmp[434618]))
            if call_tmp[741245]
            {
              (434634 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580422] "maybe param" "temp"
            unknown call_tmp[741250] "expr temp" "maybe param" "maybe type" "temp"
            (741253 'move' call_tmp[741250](434619 call isTrue tmp[434618]))
            (580427 'move' tmp[580422](580425 call _cond_test call_tmp[741250]))
            if tmp[580422]
            {
              (580432 'move' tmp[580421](580429 '_paramFoldLogical' tmp[580422] 1))
            }
            {
              unknown tmp[580434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741255] "expr temp" "maybe param" "maybe type" "temp"
              (741258 'move' call_tmp[741255](289679 call >= startbit[288242] endbit[288246]))
              (580436 'move' tmp[580434](434623 call isTrue call_tmp[741255]))
              (580441 'move' tmp[580421](580438 '_paramFoldLogical' tmp[580422] tmp[580434]))
            }
            unknown call_tmp[741260] "expr temp" "maybe param" "maybe type" "temp"
            (741263 'move' call_tmp[741260](289738 call _cond_test tmp[580421]))
            if call_tmp[741260]
            {
            }
            {
              unknown tmp[434597] "maybe param" "temp"
              unknown call_tmp[741267] "expr temp" "maybe param" "maybe type" "temp"
              (741270 'move' call_tmp[741267](289688 call minForTask _mt[243] settings[288249]))
              (434608 'move' tmp[434597](289691 call < num[289669] call_tmp[741267]))
              unknown call_tmp[741272] "expr temp" "maybe param" "maybe type" "temp"
              (741275 'move' call_tmp[741272](434610 call _cond_invalid tmp[434597]))
              if call_tmp[741272]
              {
                (434613 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580449] "maybe param" "temp"
              unknown call_tmp[741277] "expr temp" "maybe param" "maybe type" "temp"
              (741280 'move' call_tmp[741277](434598 call isTrue tmp[434597]))
              (580454 'move' tmp[580449](580452 call _cond_test call_tmp[741277]))
              if tmp[580449]
              {
                (580459 'move' tmp[580448](580456 '_paramFoldLogical' tmp[580449] 1))
              }
              {
                unknown tmp[580461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741284] "expr temp" "maybe param" "maybe type" "temp"
                (741287 'move' call_tmp[741284](289697 call maxTasks _mt[243] settings[288249]))
                unknown call_tmp[741289] "expr temp" "maybe param" "maybe type" "temp"
                (741292 'move' call_tmp[741289](289700 call >= runningNow[289616] call_tmp[741284]))
                (580463 'move' tmp[580461](434602 call isTrue call_tmp[741289]))
                (580468 'move' tmp[580448](580465 '_paramFoldLogical' tmp[580449] tmp[580461]))
              }
              unknown call_tmp[741294] "expr temp" "maybe param" "maybe type" "temp"
              (741297 'move' call_tmp[741294](289734 call _cond_test tmp[580448]))
              if call_tmp[741294]
              {
                (289713 call msbRadixSort bin_start[289632] bin_end[289658] A[288236] criterion[288239] subbits[289582] endbit[288246] settings[288249])
                (490546 'end of statement' bin_start[289632] bin_end[289658] subbits[289582])
              }
              {
                unknown call_tmp[741299] "expr temp" "maybe param" "maybe type" "temp"
                (741302 'move' call_tmp[741299](289719 call bigsubs[289606] nbigsubs[289588]))
                unknown call_tmp[741304] "expr temp" "maybe param" "maybe type" "temp"
                (741307 'move' call_tmp[741304](289723 call _build_tuple bin_start[289632] bin_end[289658]))
                (289725 call = call_tmp[741299] call_tmp[741304])
                (490550 'end of statement' bigsubs[289606] nbigsubs[289588] bin_start[289632] bin_end[289658])
                (289731 call += nbigsubs[289588] 1)
                (490555 'end of statement' nbigsubs[289588])
              }
            }
          }
          label _continueLabel[289748]
          _indexOfInterest[289743]
          _iterator[289744]
        }
        label _breakLabel[289749]
      }
      unknown call_tmp[741309] "expr temp" "maybe param" "maybe type" "temp"
      (741312 'move' call_tmp[741309](289794 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741314] "expr temp" "maybe param" "maybe type" "temp"
      (741317 'move' call_tmp[741314](289797 call # call_tmp[741309] nbigsubs[289588]))
      Forall {
        induction variables:
          
          unknown bin[289815] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289817] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741314]
          bigsubs[289606]
        shadow variables:
        other variables
          forall body
        {
          (289822 call _check_tuple_var_decl chpl_idx_2[289817] 2)
          (490557 'end of statement')
          unknown bin_start[289828] "index var" "insert auto destroy"
          (490558 'end of statement')
          (289830 'move' bin_start[289828](289826 call chpl_idx_2[289817] 0))
          (490559 'end of statement' bin_start[289828])
          unknown bin_end[289835] "index var" "insert auto destroy"
          (490561 'end of statement')
          (289837 'move' bin_end[289835](289833 call chpl_idx_2[289817] 1))
          (490562 'end of statement' bin_end[289835])
          (289811 call msbRadixSort bin_start[289828] bin_end[289835] A[288236] criterion[288239] subbits[289582] endbit[288246] settings[288249])
          (490564 'end of statement' bin_start[289828] bin_end[289835] subbits[289582])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289924] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289925] "expr temp" "temp"
        unknown call_tmp[741319] "expr temp" "maybe param" "maybe type" "temp"
        (741322 'move' call_tmp[741319](289939 call - radix[288381] 1))
        unknown call_tmp[741324] "expr temp" "maybe param" "maybe type" "temp"
        (741327 'move' call_tmp[741324](289942 call chpl_direct_range_iter 1 call_tmp[741319] 1))
        (289934 'move' _iterator[289925](289932 call _getIterator call_tmp[741324]))
        Defer
        {
          {
            (289958 call _freeIterator _iterator[289925])
          }
        }
        { scopeless type
          (289947 'move' _indexOfInterest[289924](289944 call iteratorIndex _iterator[289925]))
        }
        ForLoop[289926]
        {
          unknown bin[289951] "index var" "insert auto destroy"
          (490569 'end of statement')
          (289953 'move' bin[289951] _indexOfInterest[289924])
          (490570 'end of statement' bin[289951])
          {
            unknown call_tmp[741329] "maybe param" "maybe type" "temp"
            (741332 'move' call_tmp[741329](289852 call offsets[288395] bin[289951]))
            const bin_start[289853] "dead at end of block" "const" "insert auto destroy"
            (549180 'init var' bin_start[289853] call_tmp[741329])
            (289856 'end of statement')
            const bin_end[289879] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580475] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580476] "maybe param" "temp"
            unknown call_tmp[741334] "expr temp" "maybe param" "maybe type" "temp"
            (741337 'move' call_tmp[741334](289860 call + bin[289951] 1))
            unknown call_tmp[741339] "expr temp" "maybe param" "maybe type" "temp"
            (741342 'move' call_tmp[741339](289863 call <= call_tmp[741334] radix[288381]))
            (580481 'move' tmp[580476](580479 call _cond_test call_tmp[741339]))
            if tmp[580476]
            {
              unknown tmp[580483] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741344] "expr temp" "maybe param" "maybe type" "temp"
              (741347 'move' call_tmp[741344](289868 call + bin[289951] 1))
              unknown call_tmp[741349] "expr temp" "maybe param" "maybe type" "temp"
              (741352 'move' call_tmp[741349](289871 call offsets[288395] call_tmp[741344]))
              (580485 'move' tmp[580483](289873 call - call_tmp[741349] 1))
              (580490 'move' tmp[580475](580487 '_paramFoldLogical' tmp[580476] tmp[580483]))
            }
            {
              (580495 'move' tmp[580475](580492 '_paramFoldLogical' tmp[580476] end_n[288230]))
            }
            (549182 'init var' bin_end[289879] tmp[580475])
            (289882 'end of statement')
            unknown call_tmp[741354] "expr temp" "maybe param" "maybe type" "temp"
            (741357 'move' call_tmp[741354](289885 call + 1 bin_end[289879]))
            unknown call_tmp[741359] "maybe param" "maybe type" "temp"
            (741362 'move' call_tmp[741359](289888 call - call_tmp[741354] bin_start[289853]))
            const num[289890] "dead at end of block" "const" "insert auto destroy"
            (549184 'init var' num[289890] call_tmp[741359])
            (289893 'end of statement' offsets[288395] bin[289951] bin[289951] radix[288381] offsets[288395] bin[289951] bin_end[289879] bin_start[289853])
            unknown tmp[434639] "maybe param" "temp"
            (434650 'move' tmp[434639](289896 call <= num[289890] 1))
            unknown call_tmp[741364] "expr temp" "maybe param" "maybe type" "temp"
            (741367 'move' call_tmp[741364](434652 call _cond_invalid tmp[434639]))
            if call_tmp[741364]
            {
              (434655 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580502] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580503] "maybe param" "temp"
            unknown call_tmp[741369] "expr temp" "maybe param" "maybe type" "temp"
            (741372 'move' call_tmp[741369](434640 call isTrue tmp[434639]))
            (580508 'move' tmp[580503](580506 call _cond_test call_tmp[741369]))
            if tmp[580503]
            {
              (580513 'move' tmp[580502](580510 '_paramFoldLogical' tmp[580503] 1))
            }
            {
              unknown tmp[580515] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741374] "expr temp" "maybe param" "maybe type" "temp"
              (741377 'move' call_tmp[741374](289900 call >= startbit[288242] endbit[288246]))
              (580517 'move' tmp[580515](434644 call isTrue call_tmp[741374]))
              (580522 'move' tmp[580502](580519 '_paramFoldLogical' tmp[580503] tmp[580515]))
            }
            unknown call_tmp[741379] "expr temp" "maybe param" "maybe type" "temp"
            (741382 'move' call_tmp[741379](289920 call _cond_test tmp[580502]))
            if call_tmp[741379]
            {
            }
            {
              unknown call_tmp[741384] "expr temp" "maybe param" "maybe type" "temp"
              (741387 'move' call_tmp[741384](289913 call + startbit[288242] radixbits[288370]))
              (289917 call msbRadixSort bin_start[289853] bin_end[289879] A[288236] criterion[288239] call_tmp[741384] endbit[288246] settings[288249])
              (490581 'end of statement' bin_start[289853] bin_end[289879] radixbits[288370])
            }
          }
          label _continueLabel[289929]
          _indexOfInterest[289924]
          _iterator[289925]
        }
        label _breakLabel[289930]
      }
    }
    unknown call_tmp[741391] "expr temp" "maybe param" "maybe type" "temp"
    (741394 'move' call_tmp[741391](289971 call CHECK_SORTS _mt[243] settings[288249]))
    unknown call_tmp[741396] "expr temp" "maybe param" "maybe type" "temp"
    (741399 'move' call_tmp[741396](289982 call _cond_test call_tmp[741391]))
    if call_tmp[741396]
    {
      (289980 call checkSorted start_n[288224] end_n[288230] A[288236] criterion[288239])
    }
    label _end_msbRadixSort[538283]
    (538285 return _void[55])
  }
  (355510 'used modules list'(353161 'use' ChapelStandard[20267])(288087 'import' Sort[268056].{defaultComparator, ShellSort})(288094 'use' RadixSortHelp[276164]))
}