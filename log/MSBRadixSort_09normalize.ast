AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416143]() : void[4] "insert line file info" "module init"
  {
    (538151 return _void[55])
  }
  type MSBRadixSortSettings[288042](?) unknown DISTRIBUTE_BUFFER[288004] "param" 5 const-val sortSwitch[288009]:int(64)[13] "const" 256 const-val minForTask[288014]:int(64)[13] "const" 256 unknown CHECK_SORTS[288019] "param" 0 unknown progress[288024] "param" 0 const-val alwaysSerial[288029]:bool[10] "const" 0 const maxTasks[288037] "const"(288034 call maxTaskPar _mt[243](364694 call here[90435]))
  function msbRadixSort[288053](arg Data[288050]:_array[133588](?), arg comparator[288058]:_any[178](?) :
  defaultComparator[267977] =
  defaultComparator[267977]) : _unknown[51] "no return value for void"
  {
    unknown endbit[288063] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548942] "maybe param" "maybe type" "temp"
    (548948 'move' type_tmp[548942] int(64)[13])
    (548944 'init var split decl' endbit[288063] type_tmp[548942])
    (288066 'end of statement')
    unknown call_tmp[740193] "maybe param" "maybe type" "temp"
    (740196 'move' call_tmp[740193](288073 call msbRadixSortParamLastStartBit Data[288050] comparator[288058]))
    (548950 'init var split init' endbit[288063] call_tmp[740193] type_tmp[548942])
    (490265 'end of statement' endbit[288063])
    unknown call_tmp[740198] "expr temp" "maybe param" "maybe type" "temp"
    (740201 'move' call_tmp[740198](288079 call < endbit[288063] 0))
    unknown call_tmp[740203] "expr temp" "maybe param" "maybe type" "temp"
    (740206 'move' call_tmp[740203](288089 call _cond_test call_tmp[740198]))
    if call_tmp[740203]
    {
      unknown call_tmp[740208] "expr temp" "maybe param" "maybe type" "temp"
      (740211 'move' call_tmp[740208](288085 call max int(64)[13]))
      (288086 call = endbit[288063] call_tmp[740208])
      (490267 'end of statement' endbit[288063])
    }
    unknown call_tmp[740215] "expr temp" "maybe param" "maybe type" "temp"
    (740218 'move' call_tmp[740215](288096 call _dom _mt[243] Data[288050]))
    unknown call_tmp[740222] "expr temp" "maybe param" "maybe type" "temp"
    (740225 'move' call_tmp[740222](288099 call low _mt[243] call_tmp[740215]))
    unknown call_tmp[740229] "expr temp" "maybe param" "maybe type" "temp"
    (740232 'move' call_tmp[740229](288105 call _dom _mt[243] Data[288050]))
    unknown call_tmp[740236] "expr temp" "maybe param" "maybe type" "temp"
    (740239 'move' call_tmp[740236](288108 call high _mt[243] call_tmp[740229]))
    unknown call_tmp[740241] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740244 'move' call_tmp[740241](748107 'new' MSBRadixSortSettings[288042](?)))
    (288123 call msbRadixSort(start_n = call_tmp[740222])(end_n = call_tmp[740236]) Data[288050] comparator[288058](startbit = 0)(endbit = endbit[288063])(settings = call_tmp[740241]))
    (490269 'end of statement' endbit[288063])
    (538139 return _void[55])
  }
  function msbRadixSort[288133](arg start_n[288130]:int(64)[13], arg end_n[288136]:int(64)[13], arg A[288142]:_array[133588](?), arg criterion[288145]:_any[178](?), arg startbit[288148]:int(64)[13], arg endbit[288152]:int(64)[13], arg settings[288155]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740246] "expr temp" "maybe param" "maybe type" "temp"
    (740249 'move' call_tmp[740246](288159 call > startbit[288148] endbit[288152]))
    unknown call_tmp[740251] "expr temp" "maybe param" "maybe type" "temp"
    (740254 'move' call_tmp[740251](288163 call _cond_test call_tmp[740246]))
    if call_tmp[740251]
    {
      gotoReturn _end_msbRadixSort[538141] _end_msbRadixSort[538141]
    }
    unknown call_tmp[740256] "expr temp" "maybe param" "maybe type" "temp"
    (740259 'move' call_tmp[740256](288171 call - end_n[288136] start_n[288130]))
    unknown call_tmp[740263] "expr temp" "maybe param" "maybe type" "temp"
    (740266 'move' call_tmp[740263](288176 call sortSwitch _mt[243] settings[288155]))
    unknown call_tmp[740268] "expr temp" "maybe param" "maybe type" "temp"
    (740271 'move' call_tmp[740268](288179 call < call_tmp[740256] call_tmp[740263]))
    unknown call_tmp[740273] "expr temp" "maybe param" "maybe type" "temp"
    (740276 'move' call_tmp[740273](288216 call _cond_test call_tmp[740268]))
    if call_tmp[740273]
    {
      (288192 call shellSort module=[255] ShellSort[273520] A[288142] criterion[288145](start = start_n[288130])(end = end_n[288136]))
      (490272 'end of statement')
      unknown call_tmp[740280] "expr temp" "maybe param" "maybe type" "temp"
      (740283 'move' call_tmp[740280](288198 call CHECK_SORTS _mt[243] settings[288155]))
      unknown call_tmp[740285] "expr temp" "maybe param" "maybe type" "temp"
      (740288 'move' call_tmp[740285](288209 call _cond_test call_tmp[740280]))
      if call_tmp[740285]
      {
        (288207 call checkSorted start_n[288130] end_n[288136] A[288142] criterion[288145])
      }
      gotoReturn _end_msbRadixSort[538141] _end_msbRadixSort[538141]
      (364700 'referenced modules list' ShellSort[273520])
    }
    unknown call_tmp[740292] "expr temp" "maybe param" "maybe type" "temp"
    (740295 'move' call_tmp[740292](288223 call progress _mt[243] settings[288155]))
    unknown call_tmp[740297] "expr temp" "maybe param" "maybe type" "temp"
    (740300 'move' call_tmp[740297](288270 call _cond_test call_tmp[740292]))
    if call_tmp[740297]
    {
      (288268 call writeln "radix sort start=" start_n[288130] " end=" end_n[288136] " startbit=" startbit[288148] " endbit=" endbit[288152])
    }
    const radixbits[288276] "dead at end of block" "const" "insert auto destroy"
    (548953 'init var' radixbits[288276] RADIX_BITS[276086])
    (288279 'end of statement')
    unknown call_tmp[740302] "expr temp" "maybe param" "maybe type" "temp"
    (740305 'move' call_tmp[740302](288282 call << 1 radixbits[288276]))
    unknown call_tmp[740307] "maybe param" "maybe type" "temp"
    (740310 'move' call_tmp[740307](288285 call + call_tmp[740302] 1))
    const radix[288287] "dead at end of block" "const" "insert auto destroy"
    (548955 'init var' radix[288287] call_tmp[740307])
    (288290 'end of statement')
    unknown offsets[288301] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740312] "expr temp" "maybe param" "maybe type" "temp"
    (740315 'move' call_tmp[740312](288293 call chpl_build_bounded_range 0 radix[288287]))
    unknown call_tmp[740317] "expr temp" "maybe param" "maybe type" "temp"
    (740320 'move' call_tmp[740317](288297 call chpl__ensureDomainExpr call_tmp[740312]))
    unknown call_tmp[740322] "expr temp" "maybe param" "maybe type" "temp"
    (740325 'move' call_tmp[740322](288299 call chpl__buildArrayRuntimeType call_tmp[740317] int(64)[13]))
    (548957 'default init var' offsets[288301] call_tmp[740322])
    (288304 'end of statement')
    unknown end_offsets[288315] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740327] "expr temp" "maybe param" "maybe type" "temp"
    (740330 'move' call_tmp[740327](288307 call chpl_build_bounded_range 0 radix[288287]))
    unknown call_tmp[740332] "expr temp" "maybe param" "maybe type" "temp"
    (740335 'move' call_tmp[740332](288311 call chpl__ensureDomainExpr call_tmp[740327]))
    unknown call_tmp[740337] "expr temp" "maybe param" "maybe type" "temp"
    (740340 'move' call_tmp[740337](288313 call chpl__buildArrayRuntimeType call_tmp[740332] int(64)[13]))
    (548959 'default init var' end_offsets[288315] call_tmp[740337])
    (288318 'end of statement')
    { scopeless type
      unknown call_type_tmp[493235] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740342] "expr temp" "maybe param" "maybe type" "temp"
      (740345 'move' call_tmp[740342](288323 call A[288142] start_n[288130]))
      unknown call_tmp[740347] "expr temp" "maybe param" "maybe type" "temp"
      (740350 'move' call_tmp[740347](288327 call binForRecord call_tmp[740342] criterion[288145] startbit[288148]))
      unknown call_tmp[740352] "expr temp" "maybe param" "maybe type" "temp"
      (740355 'move' call_tmp[740352](288330 call call_tmp[740347] 1))
      (493239 'move' call_type_tmp[493235](288331 'typeof' call_tmp[740352]))
    }
    unknown ubitsType[288332] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493235]
    (548962 'move' ubitsType[288332] call_type_tmp[493235])
    unknown call_tmp[740357] "maybe param" "maybe type" "temp"
    (740360 'move' call_tmp[740357](288339 call max ubitsType[288332]))
    unknown min_ubits[288340] "dead at end of block" "insert auto destroy"
    (548964 'init var' min_ubits[288340] call_tmp[740357] ubitsType[288332])
    (288343 'end of statement')
    unknown max_ubits[288346] "dead at end of block" "insert auto destroy"
    (548966 'init var' max_ubits[288346] 0 ubitsType[288332])
    (288349 'end of statement')
    unknown call_tmp[740362] "maybe param" "maybe type" "temp"
    (740365 'move' call_tmp[740362](288352 call + radix[288287] 1))
    unknown min_bin[288354] "dead at end of block" "insert auto destroy"
    (548968 'init var' min_bin[288354] call_tmp[740362])
    (288357 'end of statement')
    unknown max_bin[288359] "dead at end of block" "insert auto destroy"
    (548970 'init var' max_bin[288359] 0)
    (288362 'end of statement')
    unknown any_ending[288364] "dead at end of block" "insert auto destroy"
    (548972 'init var' any_ending[288364] 0)
    (288367 'end of statement')
    unknown call_tmp[740369] "expr temp" "maybe param" "maybe type" "temp"
    (740372 'move' call_tmp[740369](288371 call alwaysSerial _mt[243] settings[288155]))
    unknown call_tmp[740374] "expr temp" "maybe param" "maybe type" "temp"
    (740377 'move' call_tmp[740374](288375 call == call_tmp[740369] 0))
    unknown call_tmp[740379] "expr temp" "maybe param" "maybe type" "temp"
    (740382 'move' call_tmp[740379](288628 call _cond_test call_tmp[740374]))
    if call_tmp[740379]
    {
      unknown call_tmp[740384] "expr temp" "maybe param" "maybe type" "temp"
      (740387 'move' call_tmp[740384](288380 call chpl_build_bounded_range start_n[288130] end_n[288136]))
      Forall {
        induction variables:
          
          unknown i[288496] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740384]
        shadow variables:
          offsets[288384] 'reduce' intent outer var offsets[288301]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288392] 'reduce' intent outer var min_ubits[288340]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288399] 'reduce' intent outer var max_ubits[288346]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288406] 'reduce' intent outer var any_ending[288364]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740389] "expr temp" "maybe param" "maybe type" "temp"
          (740392 'move' call_tmp[740389](288420 call A[288142] i[288496]))
          unknown call_tmp[740394] "maybe param" "maybe type" "temp"
          (740397 'move' call_tmp[740394](288424 call binForRecord call_tmp[740389] criterion[288145] startbit[288148]))
          const tmp[288425] "dead at end of block" "const" "insert auto destroy" "temp"
          (548974 'init var' tmp[288425] call_tmp[740394])
          (288432 call _check_tuple_var_decl tmp[288425] 2)
          (490283 'end of statement')
          unknown call_tmp[740399] "maybe param" "maybe type" "temp"
          (740402 'move' call_tmp[740399](288426 call tmp[288425] 0))
          const bin[288411] "dead at end of block" "const" "insert auto destroy"
          (548976 'init var' bin[288411] call_tmp[740399])
          unknown call_tmp[740404] "maybe param" "maybe type" "temp"
          (740407 'move' call_tmp[740404](288429 call tmp[288425] 1))
          const ubits[288413] "dead at end of block" "const" "insert auto destroy"
          (548978 'init var' ubits[288413] call_tmp[740404])
          (288437 'end of statement')
          unknown call_tmp[740409] "expr temp" "maybe param" "maybe type" "temp"
          (740412 'move' call_tmp[740409](288441 call < ubits[288413] min_ubits[288392]))
          unknown call_tmp[740414] "expr temp" "maybe param" "maybe type" "temp"
          (740417 'move' call_tmp[740414](288448 call _cond_test call_tmp[740409]))
          if call_tmp[740414]
          {
            (288445 call = min_ubits[288392] ubits[288413])
            (490284 'end of statement' min_ubits[288392] ubits[288413])
          }
          unknown call_tmp[740419] "expr temp" "maybe param" "maybe type" "temp"
          (740422 'move' call_tmp[740419](288455 call > ubits[288413] max_ubits[288399]))
          unknown call_tmp[740424] "expr temp" "maybe param" "maybe type" "temp"
          (740427 'move' call_tmp[740424](288462 call _cond_test call_tmp[740419]))
          if call_tmp[740424]
          {
            (288459 call = max_ubits[288399] ubits[288413])
            (490287 'end of statement' max_ubits[288399] ubits[288413])
          }
          unknown tmp[434334] "maybe param" "temp"
          (434345 'move' tmp[434334](288469 call == bin[288411] 0))
          unknown call_tmp[740429] "expr temp" "maybe param" "maybe type" "temp"
          (740432 'move' call_tmp[740429](434347 call _cond_invalid tmp[434334]))
          if call_tmp[740429]
          {
            (434350 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[580063] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[580064] "maybe param" "temp"
          unknown call_tmp[740434] "expr temp" "maybe param" "maybe type" "temp"
          (740437 'move' call_tmp[740434](434335 call isTrue tmp[434334]))
          (580069 'move' tmp[580064](580067 call _cond_test call_tmp[740434]))
          if tmp[580064]
          {
            (580074 'move' tmp[580063](580071 '_paramFoldLogical' tmp[580064] 1))
          }
          {
            unknown tmp[580076] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740439] "expr temp" "maybe param" "maybe type" "temp"
            (740442 'move' call_tmp[740439](288473 call == bin[288411] radix[288287]))
            (580078 'move' tmp[580076](434339 call isTrue call_tmp[740439]))
            (580083 'move' tmp[580063](580080 '_paramFoldLogical' tmp[580064] tmp[580076]))
          }
          unknown call_tmp[740444] "expr temp" "maybe param" "maybe type" "temp"
          (740447 'move' call_tmp[740444](288482 call _cond_test tmp[580063]))
          if call_tmp[740444]
          {
            (288479 call = any_ending[288406] 1)
            (490291 'end of statement' any_ending[288406])
          }
          unknown call_tmp[740449] "expr temp" "maybe param" "maybe type" "temp"
          (740452 'move' call_tmp[740449](288490 call offsets[288384] bin[288411]))
          (288492 call += call_tmp[740449] 1)
          (490293 'end of statement' offsets[288384] bin[288411])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288589] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288590] "expr temp" "temp"
        unknown call_tmp[740454] "expr temp" "maybe param" "maybe type" "temp"
        (740457 'move' call_tmp[740454](288604 call chpl_direct_range_iter start_n[288130] end_n[288136] 1))
        (288599 'move' _iterator[288590](288597 call _getIterator call_tmp[740454]))
        Defer
        {
          {
            (288620 call _freeIterator _iterator[288590])
          }
        }
        { scopeless type
          (288609 'move' _indexOfInterest[288589](288606 call iteratorIndex _iterator[288590]))
        }
        ForLoop[288591]
        {
          unknown i[288613] "index var" "insert auto destroy"
          (490297 'end of statement')
          (288615 'move' i[288613] _indexOfInterest[288589])
          (490298 'end of statement' i[288613])
          {
            unknown call_tmp[740459] "expr temp" "maybe param" "maybe type" "temp"
            (740462 'move' call_tmp[740459](288514 call A[288142] i[288613]))
            unknown call_tmp[740464] "maybe param" "maybe type" "temp"
            (740467 'move' call_tmp[740464](288518 call binForRecord call_tmp[740459] criterion[288145] startbit[288148]))
            const tmp[288519] "dead at end of block" "const" "insert auto destroy" "temp"
            (548980 'init var' tmp[288519] call_tmp[740464])
            (288526 call _check_tuple_var_decl tmp[288519] 2)
            (490300 'end of statement')
            unknown call_tmp[740469] "maybe param" "maybe type" "temp"
            (740472 'move' call_tmp[740469](288520 call tmp[288519] 0))
            const bin[288505] "dead at end of block" "const" "insert auto destroy"
            (548982 'init var' bin[288505] call_tmp[740469])
            unknown call_tmp[740474] "maybe param" "maybe type" "temp"
            (740477 'move' call_tmp[740474](288523 call tmp[288519] 1))
            const ubits[288507] "dead at end of block" "const" "insert auto destroy"
            (548984 'init var' ubits[288507] call_tmp[740474])
            (288531 'end of statement')
            unknown call_tmp[740479] "expr temp" "maybe param" "maybe type" "temp"
            (740482 'move' call_tmp[740479](288535 call < ubits[288507] min_ubits[288340]))
            unknown call_tmp[740484] "expr temp" "maybe param" "maybe type" "temp"
            (740487 'move' call_tmp[740484](288542 call _cond_test call_tmp[740479]))
            if call_tmp[740484]
            {
              (288539 call = min_ubits[288340] ubits[288507])
              (490301 'end of statement' min_ubits[288340] ubits[288507])
            }
            unknown call_tmp[740489] "expr temp" "maybe param" "maybe type" "temp"
            (740492 'move' call_tmp[740489](288549 call > ubits[288507] max_ubits[288346]))
            unknown call_tmp[740494] "expr temp" "maybe param" "maybe type" "temp"
            (740497 'move' call_tmp[740494](288556 call _cond_test call_tmp[740489]))
            if call_tmp[740494]
            {
              (288553 call = max_ubits[288346] ubits[288507])
              (490304 'end of statement' max_ubits[288346] ubits[288507])
            }
            unknown tmp[434355] "maybe param" "temp"
            (434366 'move' tmp[434355](288563 call == bin[288505] 0))
            unknown call_tmp[740499] "expr temp" "maybe param" "maybe type" "temp"
            (740502 'move' call_tmp[740499](434368 call _cond_invalid tmp[434355]))
            if call_tmp[740499]
            {
              (434371 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580090] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580091] "maybe param" "temp"
            unknown call_tmp[740504] "expr temp" "maybe param" "maybe type" "temp"
            (740507 'move' call_tmp[740504](434356 call isTrue tmp[434355]))
            (580096 'move' tmp[580091](580094 call _cond_test call_tmp[740504]))
            if tmp[580091]
            {
              (580101 'move' tmp[580090](580098 '_paramFoldLogical' tmp[580091] 1))
            }
            {
              unknown tmp[580103] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740509] "expr temp" "maybe param" "maybe type" "temp"
              (740512 'move' call_tmp[740509](288567 call == bin[288505] radix[288287]))
              (580105 'move' tmp[580103](434360 call isTrue call_tmp[740509]))
              (580110 'move' tmp[580090](580107 '_paramFoldLogical' tmp[580091] tmp[580103]))
            }
            unknown call_tmp[740514] "expr temp" "maybe param" "maybe type" "temp"
            (740517 'move' call_tmp[740514](288576 call _cond_test tmp[580090]))
            if call_tmp[740514]
            {
              (288573 call = any_ending[288364] 1)
              (490308 'end of statement' any_ending[288364])
            }
            unknown call_tmp[740519] "expr temp" "maybe param" "maybe type" "temp"
            (740522 'move' call_tmp[740519](288584 call offsets[288301] bin[288505]))
            (288586 call += call_tmp[740519] 1)
            (490310 'end of statement' offsets[288301] bin[288505])
          }
          label _continueLabel[288594]
          _indexOfInterest[288589]
          _iterator[288590]
        }
        label _breakLabel[288595]
      }
    }
    unknown call_tmp[740524] "expr temp" "maybe param" "maybe type" "temp"
    (740527 'move' call_tmp[740524](288634 call == any_ending[288364] 0))
    unknown call_tmp[740529] "expr temp" "maybe param" "maybe type" "temp"
    (740532 'move' call_tmp[740529](288669 call _cond_test call_tmp[740524]))
    if call_tmp[740529]
    {
      unknown call_tmp[740534] "maybe param" "maybe type" "temp"
      (740537 'move' call_tmp[740534](288641 call findDataStartBit startbit[288148] min_ubits[288340] max_ubits[288346]))
      unknown dataStartBit[288642] "dead at end of block" "insert auto destroy"
      (548986 'init var' dataStartBit[288642] call_tmp[740534])
      (288645 'end of statement' min_ubits[288340] max_ubits[288346])
      unknown call_tmp[740539] "expr temp" "maybe param" "maybe type" "temp"
      (740542 'move' call_tmp[740539](288649 call > dataStartBit[288642] startbit[288148]))
      unknown call_tmp[740544] "expr temp" "maybe param" "maybe type" "temp"
      (740547 'move' call_tmp[740544](288665 call _cond_test call_tmp[740539]))
      if call_tmp[740544]
      {
        (288660 call msbRadixSort start_n[288130] end_n[288136] A[288142] criterion[288145] dataStartBit[288642] endbit[288152] settings[288155])
        (490315 'end of statement' dataStartBit[288642])
        gotoReturn _end_msbRadixSort[538141] _end_msbRadixSort[538141]
      }
    }
    unknown call_tmp[740551] "expr temp" "maybe param" "maybe type" "temp"
    (740554 'move' call_tmp[740551](288674 call progress _mt[243] settings[288155]))
    unknown call_tmp[740556] "expr temp" "maybe param" "maybe type" "temp"
    (740559 'move' call_tmp[740556](288696 call _cond_test call_tmp[740551]))
    if call_tmp[740556]
    {
      (288694 call writeln "accumulate")
    }
    unknown sum[288702] "dead at end of block" "insert auto destroy"
    (548988 'init var' sum[288702] 0)
    (288705 'end of statement')
    {
      unknown _indexOfInterest[288747] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288748] "expr temp" "temp"
      unknown call_tmp[740561] "expr temp" "maybe param" "maybe type" "temp"
      (740564 'move' call_tmp[740561](288757 call _getIterator offsets[288301]))
      unknown call_tmp[740566] "expr temp" "maybe param" "maybe type" "temp"
      (740569 'move' call_tmp[740566](288760 call _getIterator end_offsets[288315]))
      (288762 'move' _iterator[288748](288714 call _build_tuple call_tmp[740561] call_tmp[740566]))
      Defer
      {
        {
          (288792 call _freeIterator _iterator[288748])
        }
      }
      { scopeless type
        (288767 'move' _indexOfInterest[288747](288764 call iteratorIndex _iterator[288748]))
      }
      ForLoop[288749]
      {
        (288772 call _check_tuple_var_decl _indexOfInterest[288747] 2)
        (490320 'end of statement')
        unknown off[288778] "index var" "insert auto destroy"
        (490321 'end of statement')
        (288780 'move' off[288778](288776 call _indexOfInterest[288747] 0))
        (490322 'end of statement' off[288778])
        unknown end[288785] "index var" "insert auto destroy"
        (490324 'end of statement')
        (288787 'move' end[288785](288783 call _indexOfInterest[288747] 1))
        (490325 'end of statement' end[288785])
        {
          unknown binstart[288716] "dead at end of block" "insert auto destroy"
          (548990 'init var' binstart[288716] sum[288702])
          (288719 'end of statement')
          (288723 call += sum[288702] off[288778])
          (490328 'end of statement' sum[288702] off[288778])
          unknown binend[288727] "dead at end of block" "insert auto destroy"
          (548992 'init var' binend[288727] sum[288702])
          (288730 'end of statement' sum[288702] sum[288702])
          unknown call_tmp[740571] "expr temp" "maybe param" "maybe type" "temp"
          (740574 'move' call_tmp[740571](288734 call + start_n[288130] binstart[288716]))
          (288736 call = off[288778] call_tmp[740571])
          (490332 'end of statement' off[288778] binstart[288716])
          unknown call_tmp[740576] "expr temp" "maybe param" "maybe type" "temp"
          (740579 'move' call_tmp[740576](288742 call + start_n[288130] binend[288727]))
          (288744 call = end[288785] call_tmp[740576])
          (490335 'end of statement' end[288785] binend[288727])
        }
        label _continueLabel[288752]
        _indexOfInterest[288747]
        _iterator[288748]
      }
      label _breakLabel[288753]
    }
    unknown curbin[288800] "dead at end of block" "insert auto destroy"
    (548994 'init var' curbin[288800] 0)
    (288803 'end of statement' radixbits[288276] radix[288287] radix[288287] ubitsType[288332] ubitsType[288332] ubitsType[288332] radix[288287])
    unknown call_tmp[740583] "expr temp" "maybe param" "maybe type" "temp"
    (740586 'move' call_tmp[740583](288805 call progress _mt[243] settings[288155]))
    unknown call_tmp[740588] "expr temp" "maybe param" "maybe type" "temp"
    (740591 'move' call_tmp[740588](288829 call _cond_test call_tmp[740583]))
    if call_tmp[740588]
    {
      (288827 call writeln "shuffle")
    }
    {
      unknown tmp[289359] "temp"
      (289377 'move' tmp[289359](289375 call _cond_test 1))
      WhileDo[289364]
      {
        {
          {
            unknown tmp[288857] "temp"
            unknown tmp[434397] "maybe param" "temp"
            (434408 'move' tmp[434397](288890 call <= curbin[288800] radix[288287]))
            unknown call_tmp[740593] "expr temp" "maybe param" "maybe type" "temp"
            (740596 'move' call_tmp[740593](434410 call _cond_invalid tmp[434397]))
            if call_tmp[740593]
            {
              (434413 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580117] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580118] "maybe param" "temp"
            unknown call_tmp[740598] "expr temp" "maybe param" "maybe type" "temp"
            (740601 'move' call_tmp[740598](434398 call isTrue tmp[434397]))
            (580123 'move' tmp[580118](580121 call _cond_test call_tmp[740598]))
            if tmp[580118]
            {
              unknown tmp[580125] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740603] "expr temp" "maybe param" "maybe type" "temp"
              (740606 'move' call_tmp[740603](288896 call offsets[288301] curbin[288800]))
              unknown call_tmp[740608] "expr temp" "maybe param" "maybe type" "temp"
              (740611 'move' call_tmp[740608](288899 call end_offsets[288315] curbin[288800]))
              unknown call_tmp[740613] "expr temp" "maybe param" "maybe type" "temp"
              (740616 'move' call_tmp[740613](288894 call == call_tmp[740603] call_tmp[740608]))
              (580127 'move' tmp[580125](434401 call isTrue call_tmp[740613]))
              (580132 'move' tmp[580117](580129 '_paramFoldLogical' tmp[580118] tmp[580125]))
            }
            {
              (580137 'move' tmp[580117](580134 '_paramFoldLogical' tmp[580118] 0))
            }
            (288901 'move' tmp[288857](288886 call _cond_test tmp[580117]))
            WhileDo[288862]
            {
              {
                (288853 call += curbin[288800] 1)
                (490340 'end of statement' curbin[288800])
              }
              label _continueLabel[288860]
              unknown tmp[434376] "maybe param" "temp"
              (434387 'move' tmp[434376](288870 call <= curbin[288800] radix[288287]))
              unknown call_tmp[740618] "expr temp" "maybe param" "maybe type" "temp"
              (740621 'move' call_tmp[740618](434389 call _cond_invalid tmp[434376]))
              if call_tmp[740618]
              {
                (434392 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580144] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580145] "maybe param" "temp"
              unknown call_tmp[740623] "expr temp" "maybe param" "maybe type" "temp"
              (740626 'move' call_tmp[740623](434377 call isTrue tmp[434376]))
              (580150 'move' tmp[580145](580148 call _cond_test call_tmp[740623]))
              if tmp[580145]
              {
                unknown tmp[580152] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740628] "expr temp" "maybe param" "maybe type" "temp"
                (740631 'move' call_tmp[740628](288876 call offsets[288301] curbin[288800]))
                unknown call_tmp[740633] "expr temp" "maybe param" "maybe type" "temp"
                (740636 'move' call_tmp[740633](288879 call end_offsets[288315] curbin[288800]))
                unknown call_tmp[740638] "expr temp" "maybe param" "maybe type" "temp"
                (740641 'move' call_tmp[740638](288874 call == call_tmp[740628] call_tmp[740633]))
                (580154 'move' tmp[580152](434380 call isTrue call_tmp[740638]))
                (580159 'move' tmp[580144](580156 '_paramFoldLogical' tmp[580145] tmp[580152]))
              }
              {
                (580164 'move' tmp[580144](580161 '_paramFoldLogical' tmp[580145] 0))
              }
              (288881 'move' tmp[288857](288866 call _cond_test tmp[580144]))
              tmp[288857]
            }
            label _breakLabel[288861]
          }
          unknown call_tmp[740643] "expr temp" "maybe param" "maybe type" "temp"
          (740646 'move' call_tmp[740643](288907 call > curbin[288800] radix[288287]))
          unknown call_tmp[740648] "expr temp" "maybe param" "maybe type" "temp"
          (740651 'move' call_tmp[740648](288913 call _cond_test call_tmp[740643]))
          if call_tmp[740648]
          {
            break _breakLabel[289363] _breakLabel[289363]
          }
          unknown call_tmp[740655] "maybe param" "maybe type" "temp"
          (740658 'move' call_tmp[740655](288920 call DISTRIBUTE_BUFFER _mt[243] settings[288155]))
          unknown max_buf[288923] "dead at end of block" "param"
          (548996 'init var' max_buf[288923] call_tmp[740655])
          (288926 'end of statement')
          unknown buf[288934] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740662] "expr temp" "maybe param" "maybe type" "temp"
          (740665 'move' call_tmp[740662](288929 call eltType _mt[243] A[288142]))
          unknown call_tmp[740667] "expr temp" "maybe param" "maybe type" "temp"
          (740670 'move' call_tmp[740667](288932 call * max_buf[288923] call_tmp[740662]))
          (548998 'default init var' buf[288934] call_tmp[740667])
          (288937 'end of statement')
          unknown used_buf[288939] "dead at end of block" "insert auto destroy"
          (549000 'init var' used_buf[288939] 0)
          (288942 'end of statement')
          unknown call_tmp[740672] "maybe param" "maybe type" "temp"
          (740675 'move' call_tmp[740672](288946 call end_offsets[288315] curbin[288800]))
          unknown end[288947] "dead at end of block" "insert auto destroy"
          (549002 'init var' end[288947] call_tmp[740672])
          (288950 'end of statement')
          unknown call_tmp[740677] "expr temp" "maybe param" "maybe type" "temp"
          (740680 'move' call_tmp[740677](288955 call offsets[288301] curbin[288800]))
          unknown call_tmp[740682] "expr temp" "maybe param" "maybe type" "temp"
          (740685 'move' call_tmp[740682](288960 call end_offsets[288315] curbin[288800]))
          unknown call_tmp[740687] "expr temp" "maybe param" "maybe type" "temp"
          (740690 'move' call_tmp[740687](288963 call * 2 max_buf[288923]))
          unknown call_tmp[740692] "expr temp" "maybe param" "maybe type" "temp"
          (740695 'move' call_tmp[740692](288965 call - call_tmp[740682] call_tmp[740687]))
          unknown call_tmp[740697] "maybe param" "maybe type" "temp"
          (740700 'move' call_tmp[740697](288967 call max call_tmp[740677] call_tmp[740692]))
          unknown endfast[288968] "dead at end of block" "insert auto destroy"
          (549004 'init var' endfast[288968] call_tmp[740697])
          (288971 'end of statement')
          unknown call_tmp[740702] "expr temp" "maybe param" "maybe type" "temp"
          (740705 'move' call_tmp[740702](288976 call offsets[288301] curbin[288800]))
          unknown call_tmp[740707] "expr temp" "maybe param" "maybe type" "temp"
          (740710 'move' call_tmp[740707](288981 call end_offsets[288315] curbin[288800]))
          unknown call_tmp[740712] "expr temp" "maybe param" "maybe type" "temp"
          (740715 'move' call_tmp[740712](288983 call - call_tmp[740707] max_buf[288923]))
          unknown call_tmp[740717] "maybe param" "maybe type" "temp"
          (740720 'move' call_tmp[740717](288985 call max call_tmp[740702] call_tmp[740712]))
          unknown bufstart[288986] "dead at end of block" "insert auto destroy"
          (549006 'init var' bufstart[288986] call_tmp[740717])
          (288989 'end of statement')
          unknown i[288991] "dead at end of block" "insert auto destroy"
          (549008 'init var' i[288991] bufstart[288986])
          (288994 'end of statement' end_offsets[288315] curbin[288800] offsets[288301] curbin[288800] end_offsets[288315] curbin[288800] offsets[288301] curbin[288800] end_offsets[288315] curbin[288800] bufstart[288986])
          {
            unknown tmp[289021] "temp"
            unknown call_tmp[740722] "expr temp" "maybe param" "maybe type" "temp"
            (740725 'move' call_tmp[740722](289042 call < i[288991] end[288947]))
            (289045 'move' tmp[289021](289040 call _cond_test call_tmp[740722]))
            WhileDo[289026]
            {
              {
                unknown call_tmp[740727] "expr temp" "maybe param" "maybe type" "temp"
                (740730 'move' call_tmp[740727](289002 call buf[288934] used_buf[288939]))
                unknown call_tmp[740732] "expr temp" "maybe param" "maybe type" "temp"
                (740735 'move' call_tmp[740732](289006 call A[288142] i[288991]))
                (289007 call <=> call_tmp[740727] call_tmp[740732])
                (490354 'end of statement' buf[288934] used_buf[288939] i[288991])
                (289013 call += used_buf[288939] 1)
                (490358 'end of statement' used_buf[288939])
                (289018 call += i[288991] 1)
                (490360 'end of statement' i[288991])
              }
              label _continueLabel[289024]
              unknown call_tmp[740737] "expr temp" "maybe param" "maybe type" "temp"
              (740740 'move' call_tmp[740737](289032 call < i[288991] end[288947]))
              (289035 'move' tmp[289021](289030 call _cond_test call_tmp[740737]))
              tmp[289021]
            }
            label _breakLabel[289025]
          }
          {
            unknown tmp[289147] "temp"
            unknown call_tmp[740742] "expr temp" "maybe param" "maybe type" "temp"
            (740745 'move' call_tmp[740742](289172 call offsets[288301] curbin[288800]))
            unknown call_tmp[740747] "expr temp" "maybe param" "maybe type" "temp"
            (740750 'move' call_tmp[740747](289170 call < call_tmp[740742] endfast[288968]))
            (289175 'move' tmp[289147](289168 call _cond_test call_tmp[740747]))
            WhileDo[289152]
            {
              {
                {
                  unknown j[289109] "dead at end of block" "insert auto destroy"
                  (549010 'init var' j[289109] 0)
                  (490362 'end of statement')
                  unknown tmp[289110] "maybe param" "temp"
                  unknown call_tmp[740752] "expr temp" "maybe param" "maybe type" "temp"
                  (740755 'move' call_tmp[740752](289058 call - max_buf[288923] 1))
                  (289122 'move' tmp[289110](289120 call chpl_compute_low_param_loop_bound 0 call_tmp[740752]))
                  unknown tmp[289111] "maybe param" "temp"
                  unknown call_tmp[740757] "expr temp" "maybe param" "maybe type" "temp"
                  (740760 'move' call_tmp[740757](289127 call - max_buf[288923] 1))
                  (289132 'move' tmp[289111](289130 call chpl_compute_high_param_loop_bound 0 call_tmp[740757]))
                  unknown tmp[289112] "maybe param" "temp"
                  (289135 'move' tmp[289112] 1)
                  ParamForLoop[289137]
                  { j[289109] tmp[289110] tmp[289111] tmp[289112]
                    {
                      unknown call_tmp[740762] "expr temp" "maybe param" "maybe type" "temp"
                      (740765 'move' call_tmp[740762](289071 call buf[288934] j[289109]))
                      unknown call_tmp[740767] "maybe param" "maybe type" "temp"
                      (740770 'move' call_tmp[740767](289075 call binForRecord call_tmp[740762] criterion[288145] startbit[288148]))
                      const tmp[289076] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549012 'init var' tmp[289076] call_tmp[740767])
                      (289080 call _check_tuple_var_decl tmp[289076] 2)
                      (490363 'end of statement')
                      unknown call_tmp[740772] "maybe param" "maybe type" "temp"
                      (740775 'move' call_tmp[740772](289077 call tmp[289076] 0))
                      const bin[289062] "dead at end of block" "const" "insert auto destroy"
                      (549014 'init var' bin[289062] call_tmp[740772])
                      (289085 'end of statement')
                      unknown call_tmp[740777] "expr temp" "maybe param" "maybe type" "temp"
                      (740780 'move' call_tmp[740777](289091 call offsets[288301] bin[289062]))
                      unknown call_tmp[740782] "expr temp" "maybe param" "maybe type" "temp"
                      (740785 'move' call_tmp[740782](289093 call A[288142] call_tmp[740777]))
                      unknown call_tmp[740787] "expr temp" "maybe param" "maybe type" "temp"
                      (740790 'move' call_tmp[740787](289097 call buf[288934] j[289109]))
                      (289098 call <=> call_tmp[740782] call_tmp[740787])
                      (490364 'end of statement' offsets[288301] bin[289062] buf[288934] j[289109])
                      unknown call_tmp[740792] "expr temp" "maybe param" "maybe type" "temp"
                      (740795 'move' call_tmp[740792](289104 call offsets[288301] bin[289062]))
                      (289106 call += call_tmp[740792] 1)
                      (490369 'end of statement' offsets[288301] bin[289062])
                    }
                  }
                  label _unused_continueLabel[289114]
                  label _breakLabel[289113]
                }
              }
              label _continueLabel[289150]
              unknown call_tmp[740797] "expr temp" "maybe param" "maybe type" "temp"
              (740800 'move' call_tmp[740797](289160 call offsets[288301] curbin[288800]))
              unknown call_tmp[740802] "expr temp" "maybe param" "maybe type" "temp"
              (740805 'move' call_tmp[740802](289158 call < call_tmp[740797] endfast[288968]))
              (289163 'move' tmp[289147](289156 call _cond_test call_tmp[740802]))
              tmp[289147]
            }
            label _breakLabel[289151]
          }
          {
            unknown tmp[289328] "temp"
            unknown call_tmp[740807] "expr temp" "maybe param" "maybe type" "temp"
            (740810 'move' call_tmp[740807](289353 call offsets[288301] curbin[288800]))
            unknown call_tmp[740812] "expr temp" "maybe param" "maybe type" "temp"
            (740815 'move' call_tmp[740812](289351 call < call_tmp[740807] end[288947]))
            (289356 'move' tmp[289328](289349 call _cond_test call_tmp[740812]))
            WhileDo[289333]
            {
              {
                unknown j[289186] "dead at end of block" "insert auto destroy"
                (549016 'init var' j[289186] 0)
                (289189 'end of statement')
                {
                  unknown tmp[289289] "temp"
                  unknown tmp[434460] "maybe param" "temp"
                  (434471 'move' tmp[434460](289318 call >= used_buf[288939] 0))
                  unknown call_tmp[740817] "expr temp" "maybe param" "maybe type" "temp"
                  (740820 'move' call_tmp[740817](434473 call _cond_invalid tmp[434460]))
                  if call_tmp[740817]
                  {
                    (434476 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580171] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580172] "maybe param" "temp"
                  unknown call_tmp[740822] "expr temp" "maybe param" "maybe type" "temp"
                  (740825 'move' call_tmp[740822](434461 call isTrue tmp[434460]))
                  (580177 'move' tmp[580172](580175 call _cond_test call_tmp[740822]))
                  if tmp[580172]
                  {
                    unknown tmp[580179] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[740827] "expr temp" "maybe param" "maybe type" "temp"
                    (740830 'move' call_tmp[740827](289322 call < j[289186] used_buf[288939]))
                    (580181 'move' tmp[580179](434464 call isTrue call_tmp[740827]))
                    (580186 'move' tmp[580171](580183 '_paramFoldLogical' tmp[580172] tmp[580179]))
                  }
                  {
                    (580191 'move' tmp[580171](580188 '_paramFoldLogical' tmp[580172] 0))
                  }
                  (289325 'move' tmp[289289](289314 call _cond_test tmp[580171]))
                  WhileDo[289294]
                  {
                    {
                      unknown call_tmp[740832] "expr temp" "maybe param" "maybe type" "temp"
                      (740835 'move' call_tmp[740832](289210 call buf[288934] j[289186]))
                      unknown call_tmp[740837] "maybe param" "maybe type" "temp"
                      (740840 'move' call_tmp[740837](289214 call binForRecord call_tmp[740832] criterion[288145] startbit[288148]))
                      const tmp[289215] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549018 'init var' tmp[289215] call_tmp[740837])
                      (289219 call _check_tuple_var_decl tmp[289215] 2)
                      (490373 'end of statement')
                      unknown call_tmp[740842] "maybe param" "maybe type" "temp"
                      (740845 'move' call_tmp[740842](289216 call tmp[289215] 0))
                      const bin[289201] "dead at end of block" "const" "insert auto destroy"
                      (549020 'init var' bin[289201] call_tmp[740842])
                      (289224 'end of statement')
                      unknown call_tmp[740847] "maybe param" "maybe type" "temp"
                      (740850 'move' call_tmp[740847](289229 call offsets[288301] bin[289201]))
                      unknown offset[289230] "dead at end of block" "insert auto destroy"
                      (549022 'init var' offset[289230] call_tmp[740847])
                      (289233 'end of statement' offsets[288301] bin[289201])
                      unknown call_tmp[740852] "expr temp" "maybe param" "maybe type" "temp"
                      (740855 'move' call_tmp[740852](289237 call A[288142] offset[289230]))
                      unknown call_tmp[740857] "expr temp" "maybe param" "maybe type" "temp"
                      (740860 'move' call_tmp[740857](289241 call buf[288934] j[289186]))
                      (289242 call <=> call_tmp[740852] call_tmp[740857])
                      (490376 'end of statement' offset[289230] buf[288934] j[289186])
                      unknown call_tmp[740862] "expr temp" "maybe param" "maybe type" "temp"
                      (740865 'move' call_tmp[740862](289248 call offsets[288301] bin[289201]))
                      (289250 call += call_tmp[740862] 1)
                      (490380 'end of statement' offsets[288301] bin[289201])
                      unknown tmp[434418] "maybe param" "temp"
                      (434429 'move' tmp[434418](289255 call == bin[289201] curbin[288800]))
                      unknown call_tmp[740867] "expr temp" "maybe param" "maybe type" "temp"
                      (740870 'move' call_tmp[740867](434431 call _cond_invalid tmp[434418]))
                      if call_tmp[740867]
                      {
                        (434434 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580198] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580199] "maybe param" "temp"
                      unknown call_tmp[740872] "expr temp" "maybe param" "maybe type" "temp"
                      (740875 'move' call_tmp[740872](434419 call isTrue tmp[434418]))
                      (580204 'move' tmp[580199](580202 call _cond_test call_tmp[740872]))
                      if tmp[580199]
                      {
                        unknown tmp[580206] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[740877] "expr temp" "maybe param" "maybe type" "temp"
                        (740880 'move' call_tmp[740877](289259 call >= offset[289230] bufstart[288986]))
                        (580208 'move' tmp[580206](434422 call isTrue call_tmp[740877]))
                        (580213 'move' tmp[580198](580210 '_paramFoldLogical' tmp[580199] tmp[580206]))
                      }
                      {
                        (580218 'move' tmp[580198](580215 '_paramFoldLogical' tmp[580199] 0))
                      }
                      unknown call_tmp[740882] "expr temp" "maybe param" "maybe type" "temp"
                      (740885 'move' call_tmp[740882](289280 call _cond_test tmp[580198]))
                      if call_tmp[740882]
                      {
                        (289265 call -= used_buf[288939] 1)
                        (490384 'end of statement' used_buf[288939])
                        unknown call_tmp[740887] "expr temp" "maybe param" "maybe type" "temp"
                        (740890 'move' call_tmp[740887](289272 call buf[288934] j[289186]))
                        unknown call_tmp[740892] "expr temp" "maybe param" "maybe type" "temp"
                        (740895 'move' call_tmp[740892](289276 call buf[288934] used_buf[288939]))
                        (289277 call <=> call_tmp[740887] call_tmp[740892])
                        (490386 'end of statement' buf[288934] j[289186] buf[288934] used_buf[288939])
                      }
                      (289286 call += j[289186] 1)
                      (490391 'end of statement' j[289186])
                    }
                    label _continueLabel[289292]
                    unknown tmp[434439] "maybe param" "temp"
                    (434450 'move' tmp[434439](289302 call >= used_buf[288939] 0))
                    unknown call_tmp[740897] "expr temp" "maybe param" "maybe type" "temp"
                    (740900 'move' call_tmp[740897](434452 call _cond_invalid tmp[434439]))
                    if call_tmp[740897]
                    {
                      (434455 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580225] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580226] "maybe param" "temp"
                    unknown call_tmp[740902] "expr temp" "maybe param" "maybe type" "temp"
                    (740905 'move' call_tmp[740902](434440 call isTrue tmp[434439]))
                    (580231 'move' tmp[580226](580229 call _cond_test call_tmp[740902]))
                    if tmp[580226]
                    {
                      unknown tmp[580233] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[740907] "expr temp" "maybe param" "maybe type" "temp"
                      (740910 'move' call_tmp[740907](289306 call < j[289186] used_buf[288939]))
                      (580235 'move' tmp[580233](434443 call isTrue call_tmp[740907]))
                      (580240 'move' tmp[580225](580237 '_paramFoldLogical' tmp[580226] tmp[580233]))
                    }
                    {
                      (580245 'move' tmp[580225](580242 '_paramFoldLogical' tmp[580226] 0))
                    }
                    (289309 'move' tmp[289289](289298 call _cond_test tmp[580225]))
                    tmp[289289]
                  }
                  label _breakLabel[289293]
                }
              }
              label _continueLabel[289331]
              unknown call_tmp[740912] "expr temp" "maybe param" "maybe type" "temp"
              (740915 'move' call_tmp[740912](289341 call offsets[288301] curbin[288800]))
              unknown call_tmp[740917] "expr temp" "maybe param" "maybe type" "temp"
              (740920 'move' call_tmp[740917](289339 call < call_tmp[740912] end[288947]))
              (289344 'move' tmp[289328](289337 call _cond_test call_tmp[740917]))
              tmp[289328]
            }
            label _breakLabel[289332]
          }
        }
        label _continueLabel[289362]
        (289370 'move' tmp[289359](289368 call _cond_test 1))
        tmp[289359]
      }
      label _breakLabel[289363]
    }
    unknown call_tmp[740924] "expr temp" "maybe param" "maybe type" "temp"
    (740927 'move' call_tmp[740924](289381 call progress _mt[243] settings[288155]))
    unknown call_tmp[740929] "expr temp" "maybe param" "maybe type" "temp"
    (740932 'move' call_tmp[740929](289405 call _cond_test call_tmp[740924]))
    if call_tmp[740929]
    {
      (289403 call writeln "sort sub-problems")
    }
    unknown call_tmp[740934] "expr temp" "maybe param" "maybe type" "temp"
    (740937 'move' call_tmp[740934](289413 call offsets[288301] 0))
    (289415 call = call_tmp[740934] start_n[288130])
    (490395 'end of statement' offsets[288301])
    {
      unknown _indexOfInterest[289438] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289439] "expr temp" "temp"
      unknown call_tmp[740939] "expr temp" "maybe param" "maybe type" "temp"
      (740942 'move' call_tmp[740939](289453 call chpl_direct_range_iter 1 radix[288287] 1))
      (289448 'move' _iterator[289439](289446 call _getIterator call_tmp[740939]))
      Defer
      {
        {
          (289469 call _freeIterator _iterator[289439])
        }
      }
      { scopeless type
        (289458 'move' _indexOfInterest[289438](289455 call iteratorIndex _iterator[289439]))
      }
      ForLoop[289440]
      {
        unknown i[289462] "index var" "insert auto destroy"
        (490398 'end of statement')
        (289464 'move' i[289462] _indexOfInterest[289438])
        (490399 'end of statement' i[289462])
        {
          unknown call_tmp[740944] "expr temp" "maybe param" "maybe type" "temp"
          (740947 'move' call_tmp[740944](289426 call offsets[288301] i[289462]))
          unknown call_tmp[740949] "expr temp" "maybe param" "maybe type" "temp"
          (740952 'move' call_tmp[740949](289430 call - i[289462] 1))
          unknown call_tmp[740954] "expr temp" "maybe param" "maybe type" "temp"
          (740957 'move' call_tmp[740954](289433 call end_offsets[288315] call_tmp[740949]))
          (289434 call = call_tmp[740944] call_tmp[740954])
          (490401 'end of statement' offsets[288301] i[289462] end_offsets[288315] i[289462])
        }
        label _continueLabel[289443]
        _indexOfInterest[289438]
        _iterator[289439]
      }
      label _breakLabel[289444]
    }
    unknown call_tmp[740961] "expr temp" "maybe param" "maybe type" "temp"
    (740964 'move' call_tmp[740961](289477 call alwaysSerial _mt[243] settings[288155]))
    unknown call_tmp[740966] "expr temp" "maybe param" "maybe type" "temp"
    (740969 'move' call_tmp[740966](289481 call == call_tmp[740961] 0))
    unknown call_tmp[740971] "expr temp" "maybe param" "maybe type" "temp"
    (740974 'move' call_tmp[740971](289870 call _cond_test call_tmp[740966]))
    if call_tmp[740971]
    {
      unknown call_tmp[740976] "maybe param" "maybe type" "temp"
      (740979 'move' call_tmp[740976](289485 call + startbit[288148] radixbits[288276]))
      const subbits[289487] "dead at end of block" "const" "insert auto destroy"
      (549024 'init var' subbits[289487] call_tmp[740976])
      (289490 'end of statement')
      unknown nbigsubs[289493] "dead at end of block" "insert auto destroy"
      (549026 'init var' nbigsubs[289493] 0)
      (289496 'end of statement')
      unknown bigsubs[289511] "dead at end of block" "insert auto destroy"
      unknown call_tmp[740981] "expr temp" "maybe param" "maybe type" "temp"
      (740984 'move' call_tmp[740981](289499 call chpl_build_bounded_range 0 radix[288287]))
      unknown call_tmp[740986] "expr temp" "maybe param" "maybe type" "temp"
      (740989 'move' call_tmp[740986](289507 call chpl__ensureDomainExpr call_tmp[740981]))
      unknown call_tmp[740991] "expr temp" "maybe param" "maybe type" "temp"
      (740994 'move' call_tmp[740991](289505 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[740996] "expr temp" "maybe param" "maybe type" "temp"
      (740999 'move' call_tmp[740996](289509 call chpl__buildArrayRuntimeType call_tmp[740986] call_tmp[740991]))
      (549028 'default init var' bigsubs[289511] call_tmp[740996])
      (289514 'end of statement')
      unknown call_tmp[741001] "expr temp" "maybe param" "maybe type" "temp"
      (741004 'move' call_tmp[741001](364714 call here[90435]))
      unknown call_tmp[741008] "maybe param" "maybe type" "temp"
      (741011 'move' call_tmp[741008](289520 call(289516 call (partial) runningTasks _mt[243] call_tmp[741001])))
      const runningNow[289521] "dead at end of block" "const" "insert auto destroy"
      (549030 'init var' runningNow[289521] call_tmp[741008])
      (289524 'end of statement' radixbits[288276] radix[288287])
      {
        unknown _indexOfInterest[289648] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289649] "expr temp" "temp"
        unknown call_tmp[741013] "expr temp" "maybe param" "maybe type" "temp"
        (741016 'move' call_tmp[741013](289663 call - radix[288287] 1))
        unknown call_tmp[741018] "expr temp" "maybe param" "maybe type" "temp"
        (741021 'move' call_tmp[741018](289666 call chpl_direct_range_iter 1 call_tmp[741013] 1))
        (289658 'move' _iterator[289649](289656 call _getIterator call_tmp[741018]))
        Defer
        {
          {
            (289682 call _freeIterator _iterator[289649])
          }
        }
        { scopeless type
          (289671 'move' _indexOfInterest[289648](289668 call iteratorIndex _iterator[289649]))
        }
        ForLoop[289650]
        {
          unknown bin[289675] "index var" "insert auto destroy"
          (490409 'end of statement')
          (289677 'move' bin[289675] _indexOfInterest[289648])
          (490410 'end of statement' bin[289675])
          {
            unknown call_tmp[741023] "maybe param" "maybe type" "temp"
            (741026 'move' call_tmp[741023](289536 call offsets[288301] bin[289675]))
            const bin_start[289537] "dead at end of block" "const" "insert auto destroy"
            (549032 'init var' bin_start[289537] call_tmp[741023])
            (289540 'end of statement')
            const bin_end[289563] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580252] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580253] "maybe param" "temp"
            unknown call_tmp[741028] "expr temp" "maybe param" "maybe type" "temp"
            (741031 'move' call_tmp[741028](289544 call + bin[289675] 1))
            unknown call_tmp[741033] "expr temp" "maybe param" "maybe type" "temp"
            (741036 'move' call_tmp[741033](289547 call <= call_tmp[741028] radix[288287]))
            (580258 'move' tmp[580253](580256 call _cond_test call_tmp[741033]))
            if tmp[580253]
            {
              unknown tmp[580260] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741038] "expr temp" "maybe param" "maybe type" "temp"
              (741041 'move' call_tmp[741038](289552 call + bin[289675] 1))
              unknown call_tmp[741043] "expr temp" "maybe param" "maybe type" "temp"
              (741046 'move' call_tmp[741043](289555 call offsets[288301] call_tmp[741038]))
              (580262 'move' tmp[580260](289557 call - call_tmp[741043] 1))
              (580267 'move' tmp[580252](580264 '_paramFoldLogical' tmp[580253] tmp[580260]))
            }
            {
              (580272 'move' tmp[580252](580269 '_paramFoldLogical' tmp[580253] end_n[288136]))
            }
            (549034 'init var' bin_end[289563] tmp[580252])
            (289566 'end of statement')
            unknown call_tmp[741048] "expr temp" "maybe param" "maybe type" "temp"
            (741051 'move' call_tmp[741048](289569 call + 1 bin_end[289563]))
            unknown call_tmp[741053] "maybe param" "maybe type" "temp"
            (741056 'move' call_tmp[741053](289572 call - call_tmp[741048] bin_start[289537]))
            const num[289574] "dead at end of block" "const" "insert auto destroy"
            (549036 'init var' num[289574] call_tmp[741053])
            (289577 'end of statement' offsets[288301] bin[289675] bin[289675] radix[288287] offsets[288301] bin[289675] bin_end[289563] bin_start[289537])
            unknown tmp[434502] "maybe param" "temp"
            (434513 'move' tmp[434502](289580 call <= num[289574] 1))
            unknown call_tmp[741058] "expr temp" "maybe param" "maybe type" "temp"
            (741061 'move' call_tmp[741058](434515 call _cond_invalid tmp[434502]))
            if call_tmp[741058]
            {
              (434518 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580279] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580280] "maybe param" "temp"
            unknown call_tmp[741063] "expr temp" "maybe param" "maybe type" "temp"
            (741066 'move' call_tmp[741063](434503 call isTrue tmp[434502]))
            (580285 'move' tmp[580280](580283 call _cond_test call_tmp[741063]))
            if tmp[580280]
            {
              (580290 'move' tmp[580279](580287 '_paramFoldLogical' tmp[580280] 1))
            }
            {
              unknown tmp[580292] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741068] "expr temp" "maybe param" "maybe type" "temp"
              (741071 'move' call_tmp[741068](289584 call >= startbit[288148] endbit[288152]))
              (580294 'move' tmp[580292](434507 call isTrue call_tmp[741068]))
              (580299 'move' tmp[580279](580296 '_paramFoldLogical' tmp[580280] tmp[580292]))
            }
            unknown call_tmp[741073] "expr temp" "maybe param" "maybe type" "temp"
            (741076 'move' call_tmp[741073](289643 call _cond_test tmp[580279]))
            if call_tmp[741073]
            {
            }
            {
              unknown tmp[434481] "maybe param" "temp"
              unknown call_tmp[741080] "expr temp" "maybe param" "maybe type" "temp"
              (741083 'move' call_tmp[741080](289593 call minForTask _mt[243] settings[288155]))
              (434492 'move' tmp[434481](289596 call < num[289574] call_tmp[741080]))
              unknown call_tmp[741085] "expr temp" "maybe param" "maybe type" "temp"
              (741088 'move' call_tmp[741085](434494 call _cond_invalid tmp[434481]))
              if call_tmp[741085]
              {
                (434497 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580306] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580307] "maybe param" "temp"
              unknown call_tmp[741090] "expr temp" "maybe param" "maybe type" "temp"
              (741093 'move' call_tmp[741090](434482 call isTrue tmp[434481]))
              (580312 'move' tmp[580307](580310 call _cond_test call_tmp[741090]))
              if tmp[580307]
              {
                (580317 'move' tmp[580306](580314 '_paramFoldLogical' tmp[580307] 1))
              }
              {
                unknown tmp[580319] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741097] "expr temp" "maybe param" "maybe type" "temp"
                (741100 'move' call_tmp[741097](289602 call maxTasks _mt[243] settings[288155]))
                unknown call_tmp[741102] "expr temp" "maybe param" "maybe type" "temp"
                (741105 'move' call_tmp[741102](289605 call >= runningNow[289521] call_tmp[741097]))
                (580321 'move' tmp[580319](434486 call isTrue call_tmp[741102]))
                (580326 'move' tmp[580306](580323 '_paramFoldLogical' tmp[580307] tmp[580319]))
              }
              unknown call_tmp[741107] "expr temp" "maybe param" "maybe type" "temp"
              (741110 'move' call_tmp[741107](289639 call _cond_test tmp[580306]))
              if call_tmp[741107]
              {
                (289618 call msbRadixSort bin_start[289537] bin_end[289563] A[288142] criterion[288145] subbits[289487] endbit[288152] settings[288155])
                (490422 'end of statement' bin_start[289537] bin_end[289563] subbits[289487])
              }
              {
                unknown call_tmp[741112] "expr temp" "maybe param" "maybe type" "temp"
                (741115 'move' call_tmp[741112](289624 call bigsubs[289511] nbigsubs[289493]))
                unknown call_tmp[741117] "expr temp" "maybe param" "maybe type" "temp"
                (741120 'move' call_tmp[741117](289628 call _build_tuple bin_start[289537] bin_end[289563]))
                (289630 call = call_tmp[741112] call_tmp[741117])
                (490426 'end of statement' bigsubs[289511] nbigsubs[289493] bin_start[289537] bin_end[289563])
                (289636 call += nbigsubs[289493] 1)
                (490431 'end of statement' nbigsubs[289493])
              }
            }
          }
          label _continueLabel[289653]
          _indexOfInterest[289648]
          _iterator[289649]
        }
        label _breakLabel[289654]
      }
      unknown call_tmp[741122] "expr temp" "maybe param" "maybe type" "temp"
      (741125 'move' call_tmp[741122](289699 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741127] "expr temp" "maybe param" "maybe type" "temp"
      (741130 'move' call_tmp[741127](289702 call # call_tmp[741122] nbigsubs[289493]))
      Forall {
        induction variables:
          
          unknown bin[289720] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289722] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741127]
          bigsubs[289511]
        shadow variables:
        other variables
          forall body
        {
          (289727 call _check_tuple_var_decl chpl_idx_2[289722] 2)
          (490433 'end of statement')
          unknown bin_start[289733] "index var" "insert auto destroy"
          (490434 'end of statement')
          (289735 'move' bin_start[289733](289731 call chpl_idx_2[289722] 0))
          (490435 'end of statement' bin_start[289733])
          unknown bin_end[289740] "index var" "insert auto destroy"
          (490437 'end of statement')
          (289742 'move' bin_end[289740](289738 call chpl_idx_2[289722] 1))
          (490438 'end of statement' bin_end[289740])
          (289716 call msbRadixSort bin_start[289733] bin_end[289740] A[288142] criterion[288145] subbits[289487] endbit[288152] settings[288155])
          (490440 'end of statement' bin_start[289733] bin_end[289740] subbits[289487])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289828] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289829] "expr temp" "temp"
        unknown call_tmp[741132] "expr temp" "maybe param" "maybe type" "temp"
        (741135 'move' call_tmp[741132](289843 call - radix[288287] 1))
        unknown call_tmp[741137] "expr temp" "maybe param" "maybe type" "temp"
        (741140 'move' call_tmp[741137](289846 call chpl_direct_range_iter 1 call_tmp[741132] 1))
        (289838 'move' _iterator[289829](289836 call _getIterator call_tmp[741137]))
        Defer
        {
          {
            (289862 call _freeIterator _iterator[289829])
          }
        }
        { scopeless type
          (289851 'move' _indexOfInterest[289828](289848 call iteratorIndex _iterator[289829]))
        }
        ForLoop[289830]
        {
          unknown bin[289855] "index var" "insert auto destroy"
          (490445 'end of statement')
          (289857 'move' bin[289855] _indexOfInterest[289828])
          (490446 'end of statement' bin[289855])
          {
            unknown call_tmp[741142] "maybe param" "maybe type" "temp"
            (741145 'move' call_tmp[741142](289756 call offsets[288301] bin[289855]))
            const bin_start[289757] "dead at end of block" "const" "insert auto destroy"
            (549038 'init var' bin_start[289757] call_tmp[741142])
            (289760 'end of statement')
            const bin_end[289783] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580333] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580334] "maybe param" "temp"
            unknown call_tmp[741147] "expr temp" "maybe param" "maybe type" "temp"
            (741150 'move' call_tmp[741147](289764 call + bin[289855] 1))
            unknown call_tmp[741152] "expr temp" "maybe param" "maybe type" "temp"
            (741155 'move' call_tmp[741152](289767 call <= call_tmp[741147] radix[288287]))
            (580339 'move' tmp[580334](580337 call _cond_test call_tmp[741152]))
            if tmp[580334]
            {
              unknown tmp[580341] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741157] "expr temp" "maybe param" "maybe type" "temp"
              (741160 'move' call_tmp[741157](289772 call + bin[289855] 1))
              unknown call_tmp[741162] "expr temp" "maybe param" "maybe type" "temp"
              (741165 'move' call_tmp[741162](289775 call offsets[288301] call_tmp[741157]))
              (580343 'move' tmp[580341](289777 call - call_tmp[741162] 1))
              (580348 'move' tmp[580333](580345 '_paramFoldLogical' tmp[580334] tmp[580341]))
            }
            {
              (580353 'move' tmp[580333](580350 '_paramFoldLogical' tmp[580334] end_n[288136]))
            }
            (549040 'init var' bin_end[289783] tmp[580333])
            (289786 'end of statement')
            unknown call_tmp[741167] "expr temp" "maybe param" "maybe type" "temp"
            (741170 'move' call_tmp[741167](289789 call + 1 bin_end[289783]))
            unknown call_tmp[741172] "maybe param" "maybe type" "temp"
            (741175 'move' call_tmp[741172](289792 call - call_tmp[741167] bin_start[289757]))
            const num[289794] "dead at end of block" "const" "insert auto destroy"
            (549042 'init var' num[289794] call_tmp[741172])
            (289797 'end of statement' offsets[288301] bin[289855] bin[289855] radix[288287] offsets[288301] bin[289855] bin_end[289783] bin_start[289757])
            unknown tmp[434523] "maybe param" "temp"
            (434534 'move' tmp[434523](289800 call <= num[289794] 1))
            unknown call_tmp[741177] "expr temp" "maybe param" "maybe type" "temp"
            (741180 'move' call_tmp[741177](434536 call _cond_invalid tmp[434523]))
            if call_tmp[741177]
            {
              (434539 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580360] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580361] "maybe param" "temp"
            unknown call_tmp[741182] "expr temp" "maybe param" "maybe type" "temp"
            (741185 'move' call_tmp[741182](434524 call isTrue tmp[434523]))
            (580366 'move' tmp[580361](580364 call _cond_test call_tmp[741182]))
            if tmp[580361]
            {
              (580371 'move' tmp[580360](580368 '_paramFoldLogical' tmp[580361] 1))
            }
            {
              unknown tmp[580373] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741187] "expr temp" "maybe param" "maybe type" "temp"
              (741190 'move' call_tmp[741187](289804 call >= startbit[288148] endbit[288152]))
              (580375 'move' tmp[580373](434528 call isTrue call_tmp[741187]))
              (580380 'move' tmp[580360](580377 '_paramFoldLogical' tmp[580361] tmp[580373]))
            }
            unknown call_tmp[741192] "expr temp" "maybe param" "maybe type" "temp"
            (741195 'move' call_tmp[741192](289824 call _cond_test tmp[580360]))
            if call_tmp[741192]
            {
            }
            {
              unknown call_tmp[741197] "expr temp" "maybe param" "maybe type" "temp"
              (741200 'move' call_tmp[741197](289817 call + startbit[288148] radixbits[288276]))
              (289821 call msbRadixSort bin_start[289757] bin_end[289783] A[288142] criterion[288145] call_tmp[741197] endbit[288152] settings[288155])
              (490457 'end of statement' bin_start[289757] bin_end[289783] radixbits[288276])
            }
          }
          label _continueLabel[289833]
          _indexOfInterest[289828]
          _iterator[289829]
        }
        label _breakLabel[289834]
      }
    }
    unknown call_tmp[741204] "expr temp" "maybe param" "maybe type" "temp"
    (741207 'move' call_tmp[741204](289875 call CHECK_SORTS _mt[243] settings[288155]))
    unknown call_tmp[741209] "expr temp" "maybe param" "maybe type" "temp"
    (741212 'move' call_tmp[741209](289886 call _cond_test call_tmp[741204]))
    if call_tmp[741209]
    {
      (289884 call checkSorted start_n[288130] end_n[288136] A[288142] criterion[288145])
    }
    label _end_msbRadixSort[538141]
    (538143 return _void[55])
  }
  (355399 'used modules list'(353052 'use' ChapelStandard[20264])(287993 'import' Sort[267968].{defaultComparator, ShellSort})(288000 'use' RadixSortHelp[276074]))
}