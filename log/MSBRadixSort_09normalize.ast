AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416054]() : void[4] "insert line file info" "module init"
  {
    (538060 return _void[55])
  }
  type MSBRadixSortSettings[287954](?) unknown DISTRIBUTE_BUFFER[287916] "param" 5 const-val sortSwitch[287921]:int(64)[13] "const" 256 const-val minForTask[287926]:int(64)[13] "const" 256 unknown CHECK_SORTS[287931] "param" 0 unknown progress[287936] "param" 0 const-val alwaysSerial[287941]:bool[10] "const" 0 const maxTasks[287949] "const"(287946 call maxTaskPar _mt[243](364606 call here[90435]))
  function msbRadixSort[287965](arg Data[287962]:_array[133588](?), arg comparator[287970]:_any[178](?) :
  defaultComparator[267889] =
  defaultComparator[267889]) : _unknown[51] "no return value for void"
  {
    unknown endbit[287975] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548868] "maybe param" "maybe type" "temp"
    (548874 'move' type_tmp[548868] int(64)[13])
    (548870 'init var split decl' endbit[287975] type_tmp[548868])
    (287978 'end of statement')
    unknown call_tmp[740104] "maybe param" "maybe type" "temp"
    (740107 'move' call_tmp[740104](287985 call msbRadixSortParamLastStartBit Data[287962] comparator[287970]))
    (548876 'init var split init' endbit[287975] call_tmp[740104] type_tmp[548868])
    (490174 'end of statement' endbit[287975])
    unknown call_tmp[740109] "expr temp" "maybe param" "maybe type" "temp"
    (740112 'move' call_tmp[740109](287991 call < endbit[287975] 0))
    unknown call_tmp[740114] "expr temp" "maybe param" "maybe type" "temp"
    (740117 'move' call_tmp[740114](288001 call _cond_test call_tmp[740109]))
    if call_tmp[740114]
    {
      unknown call_tmp[740119] "expr temp" "maybe param" "maybe type" "temp"
      (740122 'move' call_tmp[740119](287997 call max int(64)[13]))
      (287998 call = endbit[287975] call_tmp[740119])
      (490176 'end of statement' endbit[287975])
    }
    unknown call_tmp[740126] "expr temp" "maybe param" "maybe type" "temp"
    (740129 'move' call_tmp[740126](288008 call _dom _mt[243] Data[287962]))
    unknown call_tmp[740133] "expr temp" "maybe param" "maybe type" "temp"
    (740136 'move' call_tmp[740133](288011 call low _mt[243] call_tmp[740126]))
    unknown call_tmp[740140] "expr temp" "maybe param" "maybe type" "temp"
    (740143 'move' call_tmp[740140](288017 call _dom _mt[243] Data[287962]))
    unknown call_tmp[740147] "expr temp" "maybe param" "maybe type" "temp"
    (740150 'move' call_tmp[740147](288020 call high _mt[243] call_tmp[740140]))
    unknown call_tmp[740152] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740155 'move' call_tmp[740152](748018 'new' MSBRadixSortSettings[287954](?)))
    (288035 call msbRadixSort(start_n = call_tmp[740133])(end_n = call_tmp[740147]) Data[287962] comparator[287970](startbit = 0)(endbit = endbit[287975])(settings = call_tmp[740152]))
    (490178 'end of statement' endbit[287975])
    (538048 return _void[55])
  }
  function msbRadixSort[288045](arg start_n[288042]:int(64)[13], arg end_n[288048]:int(64)[13], arg A[288054]:_array[133588](?), arg criterion[288057]:_any[178](?), arg startbit[288060]:int(64)[13], arg endbit[288064]:int(64)[13], arg settings[288067]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740157] "expr temp" "maybe param" "maybe type" "temp"
    (740160 'move' call_tmp[740157](288071 call > startbit[288060] endbit[288064]))
    unknown call_tmp[740162] "expr temp" "maybe param" "maybe type" "temp"
    (740165 'move' call_tmp[740162](288075 call _cond_test call_tmp[740157]))
    if call_tmp[740162]
    {
      gotoReturn _end_msbRadixSort[538050] _end_msbRadixSort[538050]
    }
    unknown call_tmp[740167] "expr temp" "maybe param" "maybe type" "temp"
    (740170 'move' call_tmp[740167](288083 call - end_n[288048] start_n[288042]))
    unknown call_tmp[740174] "expr temp" "maybe param" "maybe type" "temp"
    (740177 'move' call_tmp[740174](288088 call sortSwitch _mt[243] settings[288067]))
    unknown call_tmp[740179] "expr temp" "maybe param" "maybe type" "temp"
    (740182 'move' call_tmp[740179](288091 call < call_tmp[740167] call_tmp[740174]))
    unknown call_tmp[740184] "expr temp" "maybe param" "maybe type" "temp"
    (740187 'move' call_tmp[740184](288128 call _cond_test call_tmp[740179]))
    if call_tmp[740184]
    {
      (288104 call shellSort module=[255] ShellSort[273432] A[288054] criterion[288057](start = start_n[288042])(end = end_n[288048]))
      (490181 'end of statement')
      unknown call_tmp[740191] "expr temp" "maybe param" "maybe type" "temp"
      (740194 'move' call_tmp[740191](288110 call CHECK_SORTS _mt[243] settings[288067]))
      unknown call_tmp[740196] "expr temp" "maybe param" "maybe type" "temp"
      (740199 'move' call_tmp[740196](288121 call _cond_test call_tmp[740191]))
      if call_tmp[740196]
      {
        (288119 call checkSorted start_n[288042] end_n[288048] A[288054] criterion[288057])
      }
      gotoReturn _end_msbRadixSort[538050] _end_msbRadixSort[538050]
      (364612 'referenced modules list' ShellSort[273432])
    }
    unknown call_tmp[740203] "expr temp" "maybe param" "maybe type" "temp"
    (740206 'move' call_tmp[740203](288135 call progress _mt[243] settings[288067]))
    unknown call_tmp[740208] "expr temp" "maybe param" "maybe type" "temp"
    (740211 'move' call_tmp[740208](288182 call _cond_test call_tmp[740203]))
    if call_tmp[740208]
    {
      (288180 call writeln "radix sort start=" start_n[288042] " end=" end_n[288048] " startbit=" startbit[288060] " endbit=" endbit[288064])
    }
    const radixbits[288188] "dead at end of block" "const" "insert auto destroy"
    (548879 'init var' radixbits[288188] RADIX_BITS[275998])
    (288191 'end of statement')
    unknown call_tmp[740213] "expr temp" "maybe param" "maybe type" "temp"
    (740216 'move' call_tmp[740213](288194 call << 1 radixbits[288188]))
    unknown call_tmp[740218] "maybe param" "maybe type" "temp"
    (740221 'move' call_tmp[740218](288197 call + call_tmp[740213] 1))
    const radix[288199] "dead at end of block" "const" "insert auto destroy"
    (548881 'init var' radix[288199] call_tmp[740218])
    (288202 'end of statement')
    unknown offsets[288213] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740223] "expr temp" "maybe param" "maybe type" "temp"
    (740226 'move' call_tmp[740223](288205 call chpl_build_bounded_range 0 radix[288199]))
    unknown call_tmp[740228] "expr temp" "maybe param" "maybe type" "temp"
    (740231 'move' call_tmp[740228](288209 call chpl__ensureDomainExpr call_tmp[740223]))
    unknown call_tmp[740233] "expr temp" "maybe param" "maybe type" "temp"
    (740236 'move' call_tmp[740233](288211 call chpl__buildArrayRuntimeType call_tmp[740228] int(64)[13]))
    (548883 'default init var' offsets[288213] call_tmp[740233])
    (288216 'end of statement')
    unknown end_offsets[288227] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740238] "expr temp" "maybe param" "maybe type" "temp"
    (740241 'move' call_tmp[740238](288219 call chpl_build_bounded_range 0 radix[288199]))
    unknown call_tmp[740243] "expr temp" "maybe param" "maybe type" "temp"
    (740246 'move' call_tmp[740243](288223 call chpl__ensureDomainExpr call_tmp[740238]))
    unknown call_tmp[740248] "expr temp" "maybe param" "maybe type" "temp"
    (740251 'move' call_tmp[740248](288225 call chpl__buildArrayRuntimeType call_tmp[740243] int(64)[13]))
    (548885 'default init var' end_offsets[288227] call_tmp[740248])
    (288230 'end of statement')
    { scopeless type
      unknown call_type_tmp[493144] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740253] "expr temp" "maybe param" "maybe type" "temp"
      (740256 'move' call_tmp[740253](288235 call A[288054] start_n[288042]))
      unknown call_tmp[740258] "expr temp" "maybe param" "maybe type" "temp"
      (740261 'move' call_tmp[740258](288239 call binForRecord call_tmp[740253] criterion[288057] startbit[288060]))
      unknown call_tmp[740263] "expr temp" "maybe param" "maybe type" "temp"
      (740266 'move' call_tmp[740263](288242 call call_tmp[740258] 1))
      (493148 'move' call_type_tmp[493144](288243 'typeof' call_tmp[740263]))
    }
    unknown ubitsType[288244] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493144]
    (548888 'move' ubitsType[288244] call_type_tmp[493144])
    unknown call_tmp[740268] "maybe param" "maybe type" "temp"
    (740271 'move' call_tmp[740268](288251 call max ubitsType[288244]))
    unknown min_ubits[288252] "dead at end of block" "insert auto destroy"
    (548890 'init var' min_ubits[288252] call_tmp[740268] ubitsType[288244])
    (288255 'end of statement')
    unknown max_ubits[288258] "dead at end of block" "insert auto destroy"
    (548892 'init var' max_ubits[288258] 0 ubitsType[288244])
    (288261 'end of statement')
    unknown call_tmp[740273] "maybe param" "maybe type" "temp"
    (740276 'move' call_tmp[740273](288264 call + radix[288199] 1))
    unknown min_bin[288266] "dead at end of block" "insert auto destroy"
    (548894 'init var' min_bin[288266] call_tmp[740273])
    (288269 'end of statement')
    unknown max_bin[288271] "dead at end of block" "insert auto destroy"
    (548896 'init var' max_bin[288271] 0)
    (288274 'end of statement')
    unknown any_ending[288276] "dead at end of block" "insert auto destroy"
    (548898 'init var' any_ending[288276] 0)
    (288279 'end of statement')
    unknown call_tmp[740280] "expr temp" "maybe param" "maybe type" "temp"
    (740283 'move' call_tmp[740280](288283 call alwaysSerial _mt[243] settings[288067]))
    unknown call_tmp[740285] "expr temp" "maybe param" "maybe type" "temp"
    (740288 'move' call_tmp[740285](288287 call == call_tmp[740280] 0))
    unknown call_tmp[740290] "expr temp" "maybe param" "maybe type" "temp"
    (740293 'move' call_tmp[740290](288540 call _cond_test call_tmp[740285]))
    if call_tmp[740290]
    {
      unknown call_tmp[740295] "expr temp" "maybe param" "maybe type" "temp"
      (740298 'move' call_tmp[740295](288292 call chpl_build_bounded_range start_n[288042] end_n[288048]))
      Forall {
        induction variables:
          
          unknown i[288408] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740295]
        shadow variables:
          offsets[288296] 'reduce' intent outer var offsets[288213]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288304] 'reduce' intent outer var min_ubits[288252]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288311] 'reduce' intent outer var max_ubits[288258]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288318] 'reduce' intent outer var any_ending[288276]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740300] "expr temp" "maybe param" "maybe type" "temp"
          (740303 'move' call_tmp[740300](288332 call A[288054] i[288408]))
          unknown call_tmp[740305] "maybe param" "maybe type" "temp"
          (740308 'move' call_tmp[740305](288336 call binForRecord call_tmp[740300] criterion[288057] startbit[288060]))
          const tmp[288337] "dead at end of block" "const" "insert auto destroy" "temp"
          (548900 'init var' tmp[288337] call_tmp[740305])
          (288344 call _check_tuple_var_decl tmp[288337] 2)
          (490192 'end of statement')
          unknown call_tmp[740310] "maybe param" "maybe type" "temp"
          (740313 'move' call_tmp[740310](288338 call tmp[288337] 0))
          const bin[288323] "dead at end of block" "const" "insert auto destroy"
          (548902 'init var' bin[288323] call_tmp[740310])
          unknown call_tmp[740315] "maybe param" "maybe type" "temp"
          (740318 'move' call_tmp[740315](288341 call tmp[288337] 1))
          const ubits[288325] "dead at end of block" "const" "insert auto destroy"
          (548904 'init var' ubits[288325] call_tmp[740315])
          (288349 'end of statement')
          unknown call_tmp[740320] "expr temp" "maybe param" "maybe type" "temp"
          (740323 'move' call_tmp[740320](288353 call < ubits[288325] min_ubits[288304]))
          unknown call_tmp[740325] "expr temp" "maybe param" "maybe type" "temp"
          (740328 'move' call_tmp[740325](288360 call _cond_test call_tmp[740320]))
          if call_tmp[740325]
          {
            (288357 call = min_ubits[288304] ubits[288325])
            (490193 'end of statement' min_ubits[288304] ubits[288325])
          }
          unknown call_tmp[740330] "expr temp" "maybe param" "maybe type" "temp"
          (740333 'move' call_tmp[740330](288367 call > ubits[288325] max_ubits[288311]))
          unknown call_tmp[740335] "expr temp" "maybe param" "maybe type" "temp"
          (740338 'move' call_tmp[740335](288374 call _cond_test call_tmp[740330]))
          if call_tmp[740335]
          {
            (288371 call = max_ubits[288311] ubits[288325])
            (490196 'end of statement' max_ubits[288311] ubits[288325])
          }
          unknown tmp[434245] "maybe param" "temp"
          (434256 'move' tmp[434245](288381 call == bin[288323] 0))
          unknown call_tmp[740340] "expr temp" "maybe param" "maybe type" "temp"
          (740343 'move' call_tmp[740340](434258 call _cond_invalid tmp[434245]))
          if call_tmp[740340]
          {
            (434261 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[579989] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579990] "maybe param" "temp"
          unknown call_tmp[740345] "expr temp" "maybe param" "maybe type" "temp"
          (740348 'move' call_tmp[740345](434246 call isTrue tmp[434245]))
          (579995 'move' tmp[579990](579993 call _cond_test call_tmp[740345]))
          if tmp[579990]
          {
            (580000 'move' tmp[579989](579997 '_paramFoldLogical' tmp[579990] 1))
          }
          {
            unknown tmp[580002] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740350] "expr temp" "maybe param" "maybe type" "temp"
            (740353 'move' call_tmp[740350](288385 call == bin[288323] radix[288199]))
            (580004 'move' tmp[580002](434250 call isTrue call_tmp[740350]))
            (580009 'move' tmp[579989](580006 '_paramFoldLogical' tmp[579990] tmp[580002]))
          }
          unknown call_tmp[740355] "expr temp" "maybe param" "maybe type" "temp"
          (740358 'move' call_tmp[740355](288394 call _cond_test tmp[579989]))
          if call_tmp[740355]
          {
            (288391 call = any_ending[288318] 1)
            (490200 'end of statement' any_ending[288318])
          }
          unknown call_tmp[740360] "expr temp" "maybe param" "maybe type" "temp"
          (740363 'move' call_tmp[740360](288402 call offsets[288296] bin[288323]))
          (288404 call += call_tmp[740360] 1)
          (490202 'end of statement' offsets[288296] bin[288323])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288501] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288502] "expr temp" "temp"
        unknown call_tmp[740365] "expr temp" "maybe param" "maybe type" "temp"
        (740368 'move' call_tmp[740365](288516 call chpl_direct_range_iter start_n[288042] end_n[288048] 1))
        (288511 'move' _iterator[288502](288509 call _getIterator call_tmp[740365]))
        Defer
        {
          {
            (288532 call _freeIterator _iterator[288502])
          }
        }
        { scopeless type
          (288521 'move' _indexOfInterest[288501](288518 call iteratorIndex _iterator[288502]))
        }
        ForLoop[288503]
        {
          unknown i[288525] "index var" "insert auto destroy"
          (490206 'end of statement')
          (288527 'move' i[288525] _indexOfInterest[288501])
          (490207 'end of statement' i[288525])
          {
            unknown call_tmp[740370] "expr temp" "maybe param" "maybe type" "temp"
            (740373 'move' call_tmp[740370](288426 call A[288054] i[288525]))
            unknown call_tmp[740375] "maybe param" "maybe type" "temp"
            (740378 'move' call_tmp[740375](288430 call binForRecord call_tmp[740370] criterion[288057] startbit[288060]))
            const tmp[288431] "dead at end of block" "const" "insert auto destroy" "temp"
            (548906 'init var' tmp[288431] call_tmp[740375])
            (288438 call _check_tuple_var_decl tmp[288431] 2)
            (490209 'end of statement')
            unknown call_tmp[740380] "maybe param" "maybe type" "temp"
            (740383 'move' call_tmp[740380](288432 call tmp[288431] 0))
            const bin[288417] "dead at end of block" "const" "insert auto destroy"
            (548908 'init var' bin[288417] call_tmp[740380])
            unknown call_tmp[740385] "maybe param" "maybe type" "temp"
            (740388 'move' call_tmp[740385](288435 call tmp[288431] 1))
            const ubits[288419] "dead at end of block" "const" "insert auto destroy"
            (548910 'init var' ubits[288419] call_tmp[740385])
            (288443 'end of statement')
            unknown call_tmp[740390] "expr temp" "maybe param" "maybe type" "temp"
            (740393 'move' call_tmp[740390](288447 call < ubits[288419] min_ubits[288252]))
            unknown call_tmp[740395] "expr temp" "maybe param" "maybe type" "temp"
            (740398 'move' call_tmp[740395](288454 call _cond_test call_tmp[740390]))
            if call_tmp[740395]
            {
              (288451 call = min_ubits[288252] ubits[288419])
              (490210 'end of statement' min_ubits[288252] ubits[288419])
            }
            unknown call_tmp[740400] "expr temp" "maybe param" "maybe type" "temp"
            (740403 'move' call_tmp[740400](288461 call > ubits[288419] max_ubits[288258]))
            unknown call_tmp[740405] "expr temp" "maybe param" "maybe type" "temp"
            (740408 'move' call_tmp[740405](288468 call _cond_test call_tmp[740400]))
            if call_tmp[740405]
            {
              (288465 call = max_ubits[288258] ubits[288419])
              (490213 'end of statement' max_ubits[288258] ubits[288419])
            }
            unknown tmp[434266] "maybe param" "temp"
            (434277 'move' tmp[434266](288475 call == bin[288417] 0))
            unknown call_tmp[740410] "expr temp" "maybe param" "maybe type" "temp"
            (740413 'move' call_tmp[740410](434279 call _cond_invalid tmp[434266]))
            if call_tmp[740410]
            {
              (434282 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580016] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580017] "maybe param" "temp"
            unknown call_tmp[740415] "expr temp" "maybe param" "maybe type" "temp"
            (740418 'move' call_tmp[740415](434267 call isTrue tmp[434266]))
            (580022 'move' tmp[580017](580020 call _cond_test call_tmp[740415]))
            if tmp[580017]
            {
              (580027 'move' tmp[580016](580024 '_paramFoldLogical' tmp[580017] 1))
            }
            {
              unknown tmp[580029] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740420] "expr temp" "maybe param" "maybe type" "temp"
              (740423 'move' call_tmp[740420](288479 call == bin[288417] radix[288199]))
              (580031 'move' tmp[580029](434271 call isTrue call_tmp[740420]))
              (580036 'move' tmp[580016](580033 '_paramFoldLogical' tmp[580017] tmp[580029]))
            }
            unknown call_tmp[740425] "expr temp" "maybe param" "maybe type" "temp"
            (740428 'move' call_tmp[740425](288488 call _cond_test tmp[580016]))
            if call_tmp[740425]
            {
              (288485 call = any_ending[288276] 1)
              (490217 'end of statement' any_ending[288276])
            }
            unknown call_tmp[740430] "expr temp" "maybe param" "maybe type" "temp"
            (740433 'move' call_tmp[740430](288496 call offsets[288213] bin[288417]))
            (288498 call += call_tmp[740430] 1)
            (490219 'end of statement' offsets[288213] bin[288417])
          }
          label _continueLabel[288506]
          _indexOfInterest[288501]
          _iterator[288502]
        }
        label _breakLabel[288507]
      }
    }
    unknown call_tmp[740435] "expr temp" "maybe param" "maybe type" "temp"
    (740438 'move' call_tmp[740435](288546 call == any_ending[288276] 0))
    unknown call_tmp[740440] "expr temp" "maybe param" "maybe type" "temp"
    (740443 'move' call_tmp[740440](288581 call _cond_test call_tmp[740435]))
    if call_tmp[740440]
    {
      unknown call_tmp[740445] "maybe param" "maybe type" "temp"
      (740448 'move' call_tmp[740445](288553 call findDataStartBit startbit[288060] min_ubits[288252] max_ubits[288258]))
      unknown dataStartBit[288554] "dead at end of block" "insert auto destroy"
      (548912 'init var' dataStartBit[288554] call_tmp[740445])
      (288557 'end of statement' min_ubits[288252] max_ubits[288258])
      unknown call_tmp[740450] "expr temp" "maybe param" "maybe type" "temp"
      (740453 'move' call_tmp[740450](288561 call > dataStartBit[288554] startbit[288060]))
      unknown call_tmp[740455] "expr temp" "maybe param" "maybe type" "temp"
      (740458 'move' call_tmp[740455](288577 call _cond_test call_tmp[740450]))
      if call_tmp[740455]
      {
        (288572 call msbRadixSort start_n[288042] end_n[288048] A[288054] criterion[288057] dataStartBit[288554] endbit[288064] settings[288067])
        (490224 'end of statement' dataStartBit[288554])
        gotoReturn _end_msbRadixSort[538050] _end_msbRadixSort[538050]
      }
    }
    unknown call_tmp[740462] "expr temp" "maybe param" "maybe type" "temp"
    (740465 'move' call_tmp[740462](288586 call progress _mt[243] settings[288067]))
    unknown call_tmp[740467] "expr temp" "maybe param" "maybe type" "temp"
    (740470 'move' call_tmp[740467](288608 call _cond_test call_tmp[740462]))
    if call_tmp[740467]
    {
      (288606 call writeln "accumulate")
    }
    unknown sum[288614] "dead at end of block" "insert auto destroy"
    (548914 'init var' sum[288614] 0)
    (288617 'end of statement')
    {
      unknown _indexOfInterest[288659] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288660] "expr temp" "temp"
      unknown call_tmp[740472] "expr temp" "maybe param" "maybe type" "temp"
      (740475 'move' call_tmp[740472](288669 call _getIterator offsets[288213]))
      unknown call_tmp[740477] "expr temp" "maybe param" "maybe type" "temp"
      (740480 'move' call_tmp[740477](288672 call _getIterator end_offsets[288227]))
      (288674 'move' _iterator[288660](288626 call _build_tuple call_tmp[740472] call_tmp[740477]))
      Defer
      {
        {
          (288704 call _freeIterator _iterator[288660])
        }
      }
      { scopeless type
        (288679 'move' _indexOfInterest[288659](288676 call iteratorIndex _iterator[288660]))
      }
      ForLoop[288661]
      {
        (288684 call _check_tuple_var_decl _indexOfInterest[288659] 2)
        (490229 'end of statement')
        unknown off[288690] "index var" "insert auto destroy"
        (490230 'end of statement')
        (288692 'move' off[288690](288688 call _indexOfInterest[288659] 0))
        (490231 'end of statement' off[288690])
        unknown end[288697] "index var" "insert auto destroy"
        (490233 'end of statement')
        (288699 'move' end[288697](288695 call _indexOfInterest[288659] 1))
        (490234 'end of statement' end[288697])
        {
          unknown binstart[288628] "dead at end of block" "insert auto destroy"
          (548916 'init var' binstart[288628] sum[288614])
          (288631 'end of statement')
          (288635 call += sum[288614] off[288690])
          (490237 'end of statement' sum[288614] off[288690])
          unknown binend[288639] "dead at end of block" "insert auto destroy"
          (548918 'init var' binend[288639] sum[288614])
          (288642 'end of statement' sum[288614] sum[288614])
          unknown call_tmp[740482] "expr temp" "maybe param" "maybe type" "temp"
          (740485 'move' call_tmp[740482](288646 call + start_n[288042] binstart[288628]))
          (288648 call = off[288690] call_tmp[740482])
          (490241 'end of statement' off[288690] binstart[288628])
          unknown call_tmp[740487] "expr temp" "maybe param" "maybe type" "temp"
          (740490 'move' call_tmp[740487](288654 call + start_n[288042] binend[288639]))
          (288656 call = end[288697] call_tmp[740487])
          (490244 'end of statement' end[288697] binend[288639])
        }
        label _continueLabel[288664]
        _indexOfInterest[288659]
        _iterator[288660]
      }
      label _breakLabel[288665]
    }
    unknown curbin[288712] "dead at end of block" "insert auto destroy"
    (548920 'init var' curbin[288712] 0)
    (288715 'end of statement' radixbits[288188] radix[288199] radix[288199] ubitsType[288244] ubitsType[288244] ubitsType[288244] radix[288199])
    unknown call_tmp[740494] "expr temp" "maybe param" "maybe type" "temp"
    (740497 'move' call_tmp[740494](288717 call progress _mt[243] settings[288067]))
    unknown call_tmp[740499] "expr temp" "maybe param" "maybe type" "temp"
    (740502 'move' call_tmp[740499](288741 call _cond_test call_tmp[740494]))
    if call_tmp[740499]
    {
      (288739 call writeln "shuffle")
    }
    {
      unknown tmp[289271] "temp"
      (289289 'move' tmp[289271](289287 call _cond_test 1))
      WhileDo[289276]
      {
        {
          {
            unknown tmp[288769] "temp"
            unknown tmp[434308] "maybe param" "temp"
            (434319 'move' tmp[434308](288802 call <= curbin[288712] radix[288199]))
            unknown call_tmp[740504] "expr temp" "maybe param" "maybe type" "temp"
            (740507 'move' call_tmp[740504](434321 call _cond_invalid tmp[434308]))
            if call_tmp[740504]
            {
              (434324 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580043] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580044] "maybe param" "temp"
            unknown call_tmp[740509] "expr temp" "maybe param" "maybe type" "temp"
            (740512 'move' call_tmp[740509](434309 call isTrue tmp[434308]))
            (580049 'move' tmp[580044](580047 call _cond_test call_tmp[740509]))
            if tmp[580044]
            {
              unknown tmp[580051] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740514] "expr temp" "maybe param" "maybe type" "temp"
              (740517 'move' call_tmp[740514](288808 call offsets[288213] curbin[288712]))
              unknown call_tmp[740519] "expr temp" "maybe param" "maybe type" "temp"
              (740522 'move' call_tmp[740519](288811 call end_offsets[288227] curbin[288712]))
              unknown call_tmp[740524] "expr temp" "maybe param" "maybe type" "temp"
              (740527 'move' call_tmp[740524](288806 call == call_tmp[740514] call_tmp[740519]))
              (580053 'move' tmp[580051](434312 call isTrue call_tmp[740524]))
              (580058 'move' tmp[580043](580055 '_paramFoldLogical' tmp[580044] tmp[580051]))
            }
            {
              (580063 'move' tmp[580043](580060 '_paramFoldLogical' tmp[580044] 0))
            }
            (288813 'move' tmp[288769](288798 call _cond_test tmp[580043]))
            WhileDo[288774]
            {
              {
                (288765 call += curbin[288712] 1)
                (490249 'end of statement' curbin[288712])
              }
              label _continueLabel[288772]
              unknown tmp[434287] "maybe param" "temp"
              (434298 'move' tmp[434287](288782 call <= curbin[288712] radix[288199]))
              unknown call_tmp[740529] "expr temp" "maybe param" "maybe type" "temp"
              (740532 'move' call_tmp[740529](434300 call _cond_invalid tmp[434287]))
              if call_tmp[740529]
              {
                (434303 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580070] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580071] "maybe param" "temp"
              unknown call_tmp[740534] "expr temp" "maybe param" "maybe type" "temp"
              (740537 'move' call_tmp[740534](434288 call isTrue tmp[434287]))
              (580076 'move' tmp[580071](580074 call _cond_test call_tmp[740534]))
              if tmp[580071]
              {
                unknown tmp[580078] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740539] "expr temp" "maybe param" "maybe type" "temp"
                (740542 'move' call_tmp[740539](288788 call offsets[288213] curbin[288712]))
                unknown call_tmp[740544] "expr temp" "maybe param" "maybe type" "temp"
                (740547 'move' call_tmp[740544](288791 call end_offsets[288227] curbin[288712]))
                unknown call_tmp[740549] "expr temp" "maybe param" "maybe type" "temp"
                (740552 'move' call_tmp[740549](288786 call == call_tmp[740539] call_tmp[740544]))
                (580080 'move' tmp[580078](434291 call isTrue call_tmp[740549]))
                (580085 'move' tmp[580070](580082 '_paramFoldLogical' tmp[580071] tmp[580078]))
              }
              {
                (580090 'move' tmp[580070](580087 '_paramFoldLogical' tmp[580071] 0))
              }
              (288793 'move' tmp[288769](288778 call _cond_test tmp[580070]))
              tmp[288769]
            }
            label _breakLabel[288773]
          }
          unknown call_tmp[740554] "expr temp" "maybe param" "maybe type" "temp"
          (740557 'move' call_tmp[740554](288819 call > curbin[288712] radix[288199]))
          unknown call_tmp[740559] "expr temp" "maybe param" "maybe type" "temp"
          (740562 'move' call_tmp[740559](288825 call _cond_test call_tmp[740554]))
          if call_tmp[740559]
          {
            break _breakLabel[289275] _breakLabel[289275]
          }
          unknown call_tmp[740566] "maybe param" "maybe type" "temp"
          (740569 'move' call_tmp[740566](288832 call DISTRIBUTE_BUFFER _mt[243] settings[288067]))
          unknown max_buf[288835] "dead at end of block" "param"
          (548922 'init var' max_buf[288835] call_tmp[740566])
          (288838 'end of statement')
          unknown buf[288846] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740573] "expr temp" "maybe param" "maybe type" "temp"
          (740576 'move' call_tmp[740573](288841 call eltType _mt[243] A[288054]))
          unknown call_tmp[740578] "expr temp" "maybe param" "maybe type" "temp"
          (740581 'move' call_tmp[740578](288844 call * max_buf[288835] call_tmp[740573]))
          (548924 'default init var' buf[288846] call_tmp[740578])
          (288849 'end of statement')
          unknown used_buf[288851] "dead at end of block" "insert auto destroy"
          (548926 'init var' used_buf[288851] 0)
          (288854 'end of statement')
          unknown call_tmp[740583] "maybe param" "maybe type" "temp"
          (740586 'move' call_tmp[740583](288858 call end_offsets[288227] curbin[288712]))
          unknown end[288859] "dead at end of block" "insert auto destroy"
          (548928 'init var' end[288859] call_tmp[740583])
          (288862 'end of statement')
          unknown call_tmp[740588] "expr temp" "maybe param" "maybe type" "temp"
          (740591 'move' call_tmp[740588](288867 call offsets[288213] curbin[288712]))
          unknown call_tmp[740593] "expr temp" "maybe param" "maybe type" "temp"
          (740596 'move' call_tmp[740593](288872 call end_offsets[288227] curbin[288712]))
          unknown call_tmp[740598] "expr temp" "maybe param" "maybe type" "temp"
          (740601 'move' call_tmp[740598](288875 call * 2 max_buf[288835]))
          unknown call_tmp[740603] "expr temp" "maybe param" "maybe type" "temp"
          (740606 'move' call_tmp[740603](288877 call - call_tmp[740593] call_tmp[740598]))
          unknown call_tmp[740608] "maybe param" "maybe type" "temp"
          (740611 'move' call_tmp[740608](288879 call max call_tmp[740588] call_tmp[740603]))
          unknown endfast[288880] "dead at end of block" "insert auto destroy"
          (548930 'init var' endfast[288880] call_tmp[740608])
          (288883 'end of statement')
          unknown call_tmp[740613] "expr temp" "maybe param" "maybe type" "temp"
          (740616 'move' call_tmp[740613](288888 call offsets[288213] curbin[288712]))
          unknown call_tmp[740618] "expr temp" "maybe param" "maybe type" "temp"
          (740621 'move' call_tmp[740618](288893 call end_offsets[288227] curbin[288712]))
          unknown call_tmp[740623] "expr temp" "maybe param" "maybe type" "temp"
          (740626 'move' call_tmp[740623](288895 call - call_tmp[740618] max_buf[288835]))
          unknown call_tmp[740628] "maybe param" "maybe type" "temp"
          (740631 'move' call_tmp[740628](288897 call max call_tmp[740613] call_tmp[740623]))
          unknown bufstart[288898] "dead at end of block" "insert auto destroy"
          (548932 'init var' bufstart[288898] call_tmp[740628])
          (288901 'end of statement')
          unknown i[288903] "dead at end of block" "insert auto destroy"
          (548934 'init var' i[288903] bufstart[288898])
          (288906 'end of statement' end_offsets[288227] curbin[288712] offsets[288213] curbin[288712] end_offsets[288227] curbin[288712] offsets[288213] curbin[288712] end_offsets[288227] curbin[288712] bufstart[288898])
          {
            unknown tmp[288933] "temp"
            unknown call_tmp[740633] "expr temp" "maybe param" "maybe type" "temp"
            (740636 'move' call_tmp[740633](288954 call < i[288903] end[288859]))
            (288957 'move' tmp[288933](288952 call _cond_test call_tmp[740633]))
            WhileDo[288938]
            {
              {
                unknown call_tmp[740638] "expr temp" "maybe param" "maybe type" "temp"
                (740641 'move' call_tmp[740638](288914 call buf[288846] used_buf[288851]))
                unknown call_tmp[740643] "expr temp" "maybe param" "maybe type" "temp"
                (740646 'move' call_tmp[740643](288918 call A[288054] i[288903]))
                (288919 call <=> call_tmp[740638] call_tmp[740643])
                (490263 'end of statement' buf[288846] used_buf[288851] i[288903])
                (288925 call += used_buf[288851] 1)
                (490267 'end of statement' used_buf[288851])
                (288930 call += i[288903] 1)
                (490269 'end of statement' i[288903])
              }
              label _continueLabel[288936]
              unknown call_tmp[740648] "expr temp" "maybe param" "maybe type" "temp"
              (740651 'move' call_tmp[740648](288944 call < i[288903] end[288859]))
              (288947 'move' tmp[288933](288942 call _cond_test call_tmp[740648]))
              tmp[288933]
            }
            label _breakLabel[288937]
          }
          {
            unknown tmp[289059] "temp"
            unknown call_tmp[740653] "expr temp" "maybe param" "maybe type" "temp"
            (740656 'move' call_tmp[740653](289084 call offsets[288213] curbin[288712]))
            unknown call_tmp[740658] "expr temp" "maybe param" "maybe type" "temp"
            (740661 'move' call_tmp[740658](289082 call < call_tmp[740653] endfast[288880]))
            (289087 'move' tmp[289059](289080 call _cond_test call_tmp[740658]))
            WhileDo[289064]
            {
              {
                {
                  unknown j[289021] "dead at end of block" "insert auto destroy"
                  (548936 'init var' j[289021] 0)
                  (490271 'end of statement')
                  unknown tmp[289022] "maybe param" "temp"
                  unknown call_tmp[740663] "expr temp" "maybe param" "maybe type" "temp"
                  (740666 'move' call_tmp[740663](288970 call - max_buf[288835] 1))
                  (289034 'move' tmp[289022](289032 call chpl_compute_low_param_loop_bound 0 call_tmp[740663]))
                  unknown tmp[289023] "maybe param" "temp"
                  unknown call_tmp[740668] "expr temp" "maybe param" "maybe type" "temp"
                  (740671 'move' call_tmp[740668](289039 call - max_buf[288835] 1))
                  (289044 'move' tmp[289023](289042 call chpl_compute_high_param_loop_bound 0 call_tmp[740668]))
                  unknown tmp[289024] "maybe param" "temp"
                  (289047 'move' tmp[289024] 1)
                  ParamForLoop[289049]
                  { j[289021] tmp[289022] tmp[289023] tmp[289024]
                    {
                      unknown call_tmp[740673] "expr temp" "maybe param" "maybe type" "temp"
                      (740676 'move' call_tmp[740673](288983 call buf[288846] j[289021]))
                      unknown call_tmp[740678] "maybe param" "maybe type" "temp"
                      (740681 'move' call_tmp[740678](288987 call binForRecord call_tmp[740673] criterion[288057] startbit[288060]))
                      const tmp[288988] "dead at end of block" "const" "insert auto destroy" "temp"
                      (548938 'init var' tmp[288988] call_tmp[740678])
                      (288992 call _check_tuple_var_decl tmp[288988] 2)
                      (490272 'end of statement')
                      unknown call_tmp[740683] "maybe param" "maybe type" "temp"
                      (740686 'move' call_tmp[740683](288989 call tmp[288988] 0))
                      const bin[288974] "dead at end of block" "const" "insert auto destroy"
                      (548940 'init var' bin[288974] call_tmp[740683])
                      (288997 'end of statement')
                      unknown call_tmp[740688] "expr temp" "maybe param" "maybe type" "temp"
                      (740691 'move' call_tmp[740688](289003 call offsets[288213] bin[288974]))
                      unknown call_tmp[740693] "expr temp" "maybe param" "maybe type" "temp"
                      (740696 'move' call_tmp[740693](289005 call A[288054] call_tmp[740688]))
                      unknown call_tmp[740698] "expr temp" "maybe param" "maybe type" "temp"
                      (740701 'move' call_tmp[740698](289009 call buf[288846] j[289021]))
                      (289010 call <=> call_tmp[740693] call_tmp[740698])
                      (490273 'end of statement' offsets[288213] bin[288974] buf[288846] j[289021])
                      unknown call_tmp[740703] "expr temp" "maybe param" "maybe type" "temp"
                      (740706 'move' call_tmp[740703](289016 call offsets[288213] bin[288974]))
                      (289018 call += call_tmp[740703] 1)
                      (490278 'end of statement' offsets[288213] bin[288974])
                    }
                  }
                  label _unused_continueLabel[289026]
                  label _breakLabel[289025]
                }
              }
              label _continueLabel[289062]
              unknown call_tmp[740708] "expr temp" "maybe param" "maybe type" "temp"
              (740711 'move' call_tmp[740708](289072 call offsets[288213] curbin[288712]))
              unknown call_tmp[740713] "expr temp" "maybe param" "maybe type" "temp"
              (740716 'move' call_tmp[740713](289070 call < call_tmp[740708] endfast[288880]))
              (289075 'move' tmp[289059](289068 call _cond_test call_tmp[740713]))
              tmp[289059]
            }
            label _breakLabel[289063]
          }
          {
            unknown tmp[289240] "temp"
            unknown call_tmp[740718] "expr temp" "maybe param" "maybe type" "temp"
            (740721 'move' call_tmp[740718](289265 call offsets[288213] curbin[288712]))
            unknown call_tmp[740723] "expr temp" "maybe param" "maybe type" "temp"
            (740726 'move' call_tmp[740723](289263 call < call_tmp[740718] end[288859]))
            (289268 'move' tmp[289240](289261 call _cond_test call_tmp[740723]))
            WhileDo[289245]
            {
              {
                unknown j[289098] "dead at end of block" "insert auto destroy"
                (548942 'init var' j[289098] 0)
                (289101 'end of statement')
                {
                  unknown tmp[289201] "temp"
                  unknown tmp[434371] "maybe param" "temp"
                  (434382 'move' tmp[434371](289230 call >= used_buf[288851] 0))
                  unknown call_tmp[740728] "expr temp" "maybe param" "maybe type" "temp"
                  (740731 'move' call_tmp[740728](434384 call _cond_invalid tmp[434371]))
                  if call_tmp[740728]
                  {
                    (434387 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580097] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580098] "maybe param" "temp"
                  unknown call_tmp[740733] "expr temp" "maybe param" "maybe type" "temp"
                  (740736 'move' call_tmp[740733](434372 call isTrue tmp[434371]))
                  (580103 'move' tmp[580098](580101 call _cond_test call_tmp[740733]))
                  if tmp[580098]
                  {
                    unknown tmp[580105] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[740738] "expr temp" "maybe param" "maybe type" "temp"
                    (740741 'move' call_tmp[740738](289234 call < j[289098] used_buf[288851]))
                    (580107 'move' tmp[580105](434375 call isTrue call_tmp[740738]))
                    (580112 'move' tmp[580097](580109 '_paramFoldLogical' tmp[580098] tmp[580105]))
                  }
                  {
                    (580117 'move' tmp[580097](580114 '_paramFoldLogical' tmp[580098] 0))
                  }
                  (289237 'move' tmp[289201](289226 call _cond_test tmp[580097]))
                  WhileDo[289206]
                  {
                    {
                      unknown call_tmp[740743] "expr temp" "maybe param" "maybe type" "temp"
                      (740746 'move' call_tmp[740743](289122 call buf[288846] j[289098]))
                      unknown call_tmp[740748] "maybe param" "maybe type" "temp"
                      (740751 'move' call_tmp[740748](289126 call binForRecord call_tmp[740743] criterion[288057] startbit[288060]))
                      const tmp[289127] "dead at end of block" "const" "insert auto destroy" "temp"
                      (548944 'init var' tmp[289127] call_tmp[740748])
                      (289131 call _check_tuple_var_decl tmp[289127] 2)
                      (490282 'end of statement')
                      unknown call_tmp[740753] "maybe param" "maybe type" "temp"
                      (740756 'move' call_tmp[740753](289128 call tmp[289127] 0))
                      const bin[289113] "dead at end of block" "const" "insert auto destroy"
                      (548946 'init var' bin[289113] call_tmp[740753])
                      (289136 'end of statement')
                      unknown call_tmp[740758] "maybe param" "maybe type" "temp"
                      (740761 'move' call_tmp[740758](289141 call offsets[288213] bin[289113]))
                      unknown offset[289142] "dead at end of block" "insert auto destroy"
                      (548948 'init var' offset[289142] call_tmp[740758])
                      (289145 'end of statement' offsets[288213] bin[289113])
                      unknown call_tmp[740763] "expr temp" "maybe param" "maybe type" "temp"
                      (740766 'move' call_tmp[740763](289149 call A[288054] offset[289142]))
                      unknown call_tmp[740768] "expr temp" "maybe param" "maybe type" "temp"
                      (740771 'move' call_tmp[740768](289153 call buf[288846] j[289098]))
                      (289154 call <=> call_tmp[740763] call_tmp[740768])
                      (490285 'end of statement' offset[289142] buf[288846] j[289098])
                      unknown call_tmp[740773] "expr temp" "maybe param" "maybe type" "temp"
                      (740776 'move' call_tmp[740773](289160 call offsets[288213] bin[289113]))
                      (289162 call += call_tmp[740773] 1)
                      (490289 'end of statement' offsets[288213] bin[289113])
                      unknown tmp[434329] "maybe param" "temp"
                      (434340 'move' tmp[434329](289167 call == bin[289113] curbin[288712]))
                      unknown call_tmp[740778] "expr temp" "maybe param" "maybe type" "temp"
                      (740781 'move' call_tmp[740778](434342 call _cond_invalid tmp[434329]))
                      if call_tmp[740778]
                      {
                        (434345 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580124] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580125] "maybe param" "temp"
                      unknown call_tmp[740783] "expr temp" "maybe param" "maybe type" "temp"
                      (740786 'move' call_tmp[740783](434330 call isTrue tmp[434329]))
                      (580130 'move' tmp[580125](580128 call _cond_test call_tmp[740783]))
                      if tmp[580125]
                      {
                        unknown tmp[580132] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[740788] "expr temp" "maybe param" "maybe type" "temp"
                        (740791 'move' call_tmp[740788](289171 call >= offset[289142] bufstart[288898]))
                        (580134 'move' tmp[580132](434333 call isTrue call_tmp[740788]))
                        (580139 'move' tmp[580124](580136 '_paramFoldLogical' tmp[580125] tmp[580132]))
                      }
                      {
                        (580144 'move' tmp[580124](580141 '_paramFoldLogical' tmp[580125] 0))
                      }
                      unknown call_tmp[740793] "expr temp" "maybe param" "maybe type" "temp"
                      (740796 'move' call_tmp[740793](289192 call _cond_test tmp[580124]))
                      if call_tmp[740793]
                      {
                        (289177 call -= used_buf[288851] 1)
                        (490293 'end of statement' used_buf[288851])
                        unknown call_tmp[740798] "expr temp" "maybe param" "maybe type" "temp"
                        (740801 'move' call_tmp[740798](289184 call buf[288846] j[289098]))
                        unknown call_tmp[740803] "expr temp" "maybe param" "maybe type" "temp"
                        (740806 'move' call_tmp[740803](289188 call buf[288846] used_buf[288851]))
                        (289189 call <=> call_tmp[740798] call_tmp[740803])
                        (490295 'end of statement' buf[288846] j[289098] buf[288846] used_buf[288851])
                      }
                      (289198 call += j[289098] 1)
                      (490300 'end of statement' j[289098])
                    }
                    label _continueLabel[289204]
                    unknown tmp[434350] "maybe param" "temp"
                    (434361 'move' tmp[434350](289214 call >= used_buf[288851] 0))
                    unknown call_tmp[740808] "expr temp" "maybe param" "maybe type" "temp"
                    (740811 'move' call_tmp[740808](434363 call _cond_invalid tmp[434350]))
                    if call_tmp[740808]
                    {
                      (434366 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580151] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580152] "maybe param" "temp"
                    unknown call_tmp[740813] "expr temp" "maybe param" "maybe type" "temp"
                    (740816 'move' call_tmp[740813](434351 call isTrue tmp[434350]))
                    (580157 'move' tmp[580152](580155 call _cond_test call_tmp[740813]))
                    if tmp[580152]
                    {
                      unknown tmp[580159] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[740818] "expr temp" "maybe param" "maybe type" "temp"
                      (740821 'move' call_tmp[740818](289218 call < j[289098] used_buf[288851]))
                      (580161 'move' tmp[580159](434354 call isTrue call_tmp[740818]))
                      (580166 'move' tmp[580151](580163 '_paramFoldLogical' tmp[580152] tmp[580159]))
                    }
                    {
                      (580171 'move' tmp[580151](580168 '_paramFoldLogical' tmp[580152] 0))
                    }
                    (289221 'move' tmp[289201](289210 call _cond_test tmp[580151]))
                    tmp[289201]
                  }
                  label _breakLabel[289205]
                }
              }
              label _continueLabel[289243]
              unknown call_tmp[740823] "expr temp" "maybe param" "maybe type" "temp"
              (740826 'move' call_tmp[740823](289253 call offsets[288213] curbin[288712]))
              unknown call_tmp[740828] "expr temp" "maybe param" "maybe type" "temp"
              (740831 'move' call_tmp[740828](289251 call < call_tmp[740823] end[288859]))
              (289256 'move' tmp[289240](289249 call _cond_test call_tmp[740828]))
              tmp[289240]
            }
            label _breakLabel[289244]
          }
        }
        label _continueLabel[289274]
        (289282 'move' tmp[289271](289280 call _cond_test 1))
        tmp[289271]
      }
      label _breakLabel[289275]
    }
    unknown call_tmp[740835] "expr temp" "maybe param" "maybe type" "temp"
    (740838 'move' call_tmp[740835](289293 call progress _mt[243] settings[288067]))
    unknown call_tmp[740840] "expr temp" "maybe param" "maybe type" "temp"
    (740843 'move' call_tmp[740840](289317 call _cond_test call_tmp[740835]))
    if call_tmp[740840]
    {
      (289315 call writeln "sort sub-problems")
    }
    unknown call_tmp[740845] "expr temp" "maybe param" "maybe type" "temp"
    (740848 'move' call_tmp[740845](289325 call offsets[288213] 0))
    (289327 call = call_tmp[740845] start_n[288042])
    (490304 'end of statement' offsets[288213])
    {
      unknown _indexOfInterest[289350] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289351] "expr temp" "temp"
      unknown call_tmp[740850] "expr temp" "maybe param" "maybe type" "temp"
      (740853 'move' call_tmp[740850](289365 call chpl_direct_range_iter 1 radix[288199] 1))
      (289360 'move' _iterator[289351](289358 call _getIterator call_tmp[740850]))
      Defer
      {
        {
          (289381 call _freeIterator _iterator[289351])
        }
      }
      { scopeless type
        (289370 'move' _indexOfInterest[289350](289367 call iteratorIndex _iterator[289351]))
      }
      ForLoop[289352]
      {
        unknown i[289374] "index var" "insert auto destroy"
        (490307 'end of statement')
        (289376 'move' i[289374] _indexOfInterest[289350])
        (490308 'end of statement' i[289374])
        {
          unknown call_tmp[740855] "expr temp" "maybe param" "maybe type" "temp"
          (740858 'move' call_tmp[740855](289338 call offsets[288213] i[289374]))
          unknown call_tmp[740860] "expr temp" "maybe param" "maybe type" "temp"
          (740863 'move' call_tmp[740860](289342 call - i[289374] 1))
          unknown call_tmp[740865] "expr temp" "maybe param" "maybe type" "temp"
          (740868 'move' call_tmp[740865](289345 call end_offsets[288227] call_tmp[740860]))
          (289346 call = call_tmp[740855] call_tmp[740865])
          (490310 'end of statement' offsets[288213] i[289374] end_offsets[288227] i[289374])
        }
        label _continueLabel[289355]
        _indexOfInterest[289350]
        _iterator[289351]
      }
      label _breakLabel[289356]
    }
    unknown call_tmp[740872] "expr temp" "maybe param" "maybe type" "temp"
    (740875 'move' call_tmp[740872](289389 call alwaysSerial _mt[243] settings[288067]))
    unknown call_tmp[740877] "expr temp" "maybe param" "maybe type" "temp"
    (740880 'move' call_tmp[740877](289393 call == call_tmp[740872] 0))
    unknown call_tmp[740882] "expr temp" "maybe param" "maybe type" "temp"
    (740885 'move' call_tmp[740882](289782 call _cond_test call_tmp[740877]))
    if call_tmp[740882]
    {
      unknown call_tmp[740887] "maybe param" "maybe type" "temp"
      (740890 'move' call_tmp[740887](289397 call + startbit[288060] radixbits[288188]))
      const subbits[289399] "dead at end of block" "const" "insert auto destroy"
      (548950 'init var' subbits[289399] call_tmp[740887])
      (289402 'end of statement')
      unknown nbigsubs[289405] "dead at end of block" "insert auto destroy"
      (548952 'init var' nbigsubs[289405] 0)
      (289408 'end of statement')
      unknown bigsubs[289423] "dead at end of block" "insert auto destroy"
      unknown call_tmp[740892] "expr temp" "maybe param" "maybe type" "temp"
      (740895 'move' call_tmp[740892](289411 call chpl_build_bounded_range 0 radix[288199]))
      unknown call_tmp[740897] "expr temp" "maybe param" "maybe type" "temp"
      (740900 'move' call_tmp[740897](289419 call chpl__ensureDomainExpr call_tmp[740892]))
      unknown call_tmp[740902] "expr temp" "maybe param" "maybe type" "temp"
      (740905 'move' call_tmp[740902](289417 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[740907] "expr temp" "maybe param" "maybe type" "temp"
      (740910 'move' call_tmp[740907](289421 call chpl__buildArrayRuntimeType call_tmp[740897] call_tmp[740902]))
      (548954 'default init var' bigsubs[289423] call_tmp[740907])
      (289426 'end of statement')
      unknown call_tmp[740912] "expr temp" "maybe param" "maybe type" "temp"
      (740915 'move' call_tmp[740912](364626 call here[90435]))
      unknown call_tmp[740919] "maybe param" "maybe type" "temp"
      (740922 'move' call_tmp[740919](289432 call(289428 call (partial) runningTasks _mt[243] call_tmp[740912])))
      const runningNow[289433] "dead at end of block" "const" "insert auto destroy"
      (548956 'init var' runningNow[289433] call_tmp[740919])
      (289436 'end of statement' radixbits[288188] radix[288199])
      {
        unknown _indexOfInterest[289560] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289561] "expr temp" "temp"
        unknown call_tmp[740924] "expr temp" "maybe param" "maybe type" "temp"
        (740927 'move' call_tmp[740924](289575 call - radix[288199] 1))
        unknown call_tmp[740929] "expr temp" "maybe param" "maybe type" "temp"
        (740932 'move' call_tmp[740929](289578 call chpl_direct_range_iter 1 call_tmp[740924] 1))
        (289570 'move' _iterator[289561](289568 call _getIterator call_tmp[740929]))
        Defer
        {
          {
            (289594 call _freeIterator _iterator[289561])
          }
        }
        { scopeless type
          (289583 'move' _indexOfInterest[289560](289580 call iteratorIndex _iterator[289561]))
        }
        ForLoop[289562]
        {
          unknown bin[289587] "index var" "insert auto destroy"
          (490318 'end of statement')
          (289589 'move' bin[289587] _indexOfInterest[289560])
          (490319 'end of statement' bin[289587])
          {
            unknown call_tmp[740934] "maybe param" "maybe type" "temp"
            (740937 'move' call_tmp[740934](289448 call offsets[288213] bin[289587]))
            const bin_start[289449] "dead at end of block" "const" "insert auto destroy"
            (548958 'init var' bin_start[289449] call_tmp[740934])
            (289452 'end of statement')
            const bin_end[289475] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580178] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580179] "maybe param" "temp"
            unknown call_tmp[740939] "expr temp" "maybe param" "maybe type" "temp"
            (740942 'move' call_tmp[740939](289456 call + bin[289587] 1))
            unknown call_tmp[740944] "expr temp" "maybe param" "maybe type" "temp"
            (740947 'move' call_tmp[740944](289459 call <= call_tmp[740939] radix[288199]))
            (580184 'move' tmp[580179](580182 call _cond_test call_tmp[740944]))
            if tmp[580179]
            {
              unknown tmp[580186] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740949] "expr temp" "maybe param" "maybe type" "temp"
              (740952 'move' call_tmp[740949](289464 call + bin[289587] 1))
              unknown call_tmp[740954] "expr temp" "maybe param" "maybe type" "temp"
              (740957 'move' call_tmp[740954](289467 call offsets[288213] call_tmp[740949]))
              (580188 'move' tmp[580186](289469 call - call_tmp[740954] 1))
              (580193 'move' tmp[580178](580190 '_paramFoldLogical' tmp[580179] tmp[580186]))
            }
            {
              (580198 'move' tmp[580178](580195 '_paramFoldLogical' tmp[580179] end_n[288048]))
            }
            (548960 'init var' bin_end[289475] tmp[580178])
            (289478 'end of statement')
            unknown call_tmp[740959] "expr temp" "maybe param" "maybe type" "temp"
            (740962 'move' call_tmp[740959](289481 call + 1 bin_end[289475]))
            unknown call_tmp[740964] "maybe param" "maybe type" "temp"
            (740967 'move' call_tmp[740964](289484 call - call_tmp[740959] bin_start[289449]))
            const num[289486] "dead at end of block" "const" "insert auto destroy"
            (548962 'init var' num[289486] call_tmp[740964])
            (289489 'end of statement' offsets[288213] bin[289587] bin[289587] radix[288199] offsets[288213] bin[289587] bin_end[289475] bin_start[289449])
            unknown tmp[434413] "maybe param" "temp"
            (434424 'move' tmp[434413](289492 call <= num[289486] 1))
            unknown call_tmp[740969] "expr temp" "maybe param" "maybe type" "temp"
            (740972 'move' call_tmp[740969](434426 call _cond_invalid tmp[434413]))
            if call_tmp[740969]
            {
              (434429 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580205] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580206] "maybe param" "temp"
            unknown call_tmp[740974] "expr temp" "maybe param" "maybe type" "temp"
            (740977 'move' call_tmp[740974](434414 call isTrue tmp[434413]))
            (580211 'move' tmp[580206](580209 call _cond_test call_tmp[740974]))
            if tmp[580206]
            {
              (580216 'move' tmp[580205](580213 '_paramFoldLogical' tmp[580206] 1))
            }
            {
              unknown tmp[580218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740979] "expr temp" "maybe param" "maybe type" "temp"
              (740982 'move' call_tmp[740979](289496 call >= startbit[288060] endbit[288064]))
              (580220 'move' tmp[580218](434418 call isTrue call_tmp[740979]))
              (580225 'move' tmp[580205](580222 '_paramFoldLogical' tmp[580206] tmp[580218]))
            }
            unknown call_tmp[740984] "expr temp" "maybe param" "maybe type" "temp"
            (740987 'move' call_tmp[740984](289555 call _cond_test tmp[580205]))
            if call_tmp[740984]
            {
            }
            {
              unknown tmp[434392] "maybe param" "temp"
              unknown call_tmp[740991] "expr temp" "maybe param" "maybe type" "temp"
              (740994 'move' call_tmp[740991](289505 call minForTask _mt[243] settings[288067]))
              (434403 'move' tmp[434392](289508 call < num[289486] call_tmp[740991]))
              unknown call_tmp[740996] "expr temp" "maybe param" "maybe type" "temp"
              (740999 'move' call_tmp[740996](434405 call _cond_invalid tmp[434392]))
              if call_tmp[740996]
              {
                (434408 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580232] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580233] "maybe param" "temp"
              unknown call_tmp[741001] "expr temp" "maybe param" "maybe type" "temp"
              (741004 'move' call_tmp[741001](434393 call isTrue tmp[434392]))
              (580238 'move' tmp[580233](580236 call _cond_test call_tmp[741001]))
              if tmp[580233]
              {
                (580243 'move' tmp[580232](580240 '_paramFoldLogical' tmp[580233] 1))
              }
              {
                unknown tmp[580245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741008] "expr temp" "maybe param" "maybe type" "temp"
                (741011 'move' call_tmp[741008](289514 call maxTasks _mt[243] settings[288067]))
                unknown call_tmp[741013] "expr temp" "maybe param" "maybe type" "temp"
                (741016 'move' call_tmp[741013](289517 call >= runningNow[289433] call_tmp[741008]))
                (580247 'move' tmp[580245](434397 call isTrue call_tmp[741013]))
                (580252 'move' tmp[580232](580249 '_paramFoldLogical' tmp[580233] tmp[580245]))
              }
              unknown call_tmp[741018] "expr temp" "maybe param" "maybe type" "temp"
              (741021 'move' call_tmp[741018](289551 call _cond_test tmp[580232]))
              if call_tmp[741018]
              {
                (289530 call msbRadixSort bin_start[289449] bin_end[289475] A[288054] criterion[288057] subbits[289399] endbit[288064] settings[288067])
                (490331 'end of statement' bin_start[289449] bin_end[289475] subbits[289399])
              }
              {
                unknown call_tmp[741023] "expr temp" "maybe param" "maybe type" "temp"
                (741026 'move' call_tmp[741023](289536 call bigsubs[289423] nbigsubs[289405]))
                unknown call_tmp[741028] "expr temp" "maybe param" "maybe type" "temp"
                (741031 'move' call_tmp[741028](289540 call _build_tuple bin_start[289449] bin_end[289475]))
                (289542 call = call_tmp[741023] call_tmp[741028])
                (490335 'end of statement' bigsubs[289423] nbigsubs[289405] bin_start[289449] bin_end[289475])
                (289548 call += nbigsubs[289405] 1)
                (490340 'end of statement' nbigsubs[289405])
              }
            }
          }
          label _continueLabel[289565]
          _indexOfInterest[289560]
          _iterator[289561]
        }
        label _breakLabel[289566]
      }
      unknown call_tmp[741033] "expr temp" "maybe param" "maybe type" "temp"
      (741036 'move' call_tmp[741033](289611 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741038] "expr temp" "maybe param" "maybe type" "temp"
      (741041 'move' call_tmp[741038](289614 call # call_tmp[741033] nbigsubs[289405]))
      Forall {
        induction variables:
          
          unknown bin[289632] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289634] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741038]
          bigsubs[289423]
        shadow variables:
        other variables
          forall body
        {
          (289639 call _check_tuple_var_decl chpl_idx_2[289634] 2)
          (490342 'end of statement')
          unknown bin_start[289645] "index var" "insert auto destroy"
          (490343 'end of statement')
          (289647 'move' bin_start[289645](289643 call chpl_idx_2[289634] 0))
          (490344 'end of statement' bin_start[289645])
          unknown bin_end[289652] "index var" "insert auto destroy"
          (490346 'end of statement')
          (289654 'move' bin_end[289652](289650 call chpl_idx_2[289634] 1))
          (490347 'end of statement' bin_end[289652])
          (289628 call msbRadixSort bin_start[289645] bin_end[289652] A[288054] criterion[288057] subbits[289399] endbit[288064] settings[288067])
          (490349 'end of statement' bin_start[289645] bin_end[289652] subbits[289399])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289740] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289741] "expr temp" "temp"
        unknown call_tmp[741043] "expr temp" "maybe param" "maybe type" "temp"
        (741046 'move' call_tmp[741043](289755 call - radix[288199] 1))
        unknown call_tmp[741048] "expr temp" "maybe param" "maybe type" "temp"
        (741051 'move' call_tmp[741048](289758 call chpl_direct_range_iter 1 call_tmp[741043] 1))
        (289750 'move' _iterator[289741](289748 call _getIterator call_tmp[741048]))
        Defer
        {
          {
            (289774 call _freeIterator _iterator[289741])
          }
        }
        { scopeless type
          (289763 'move' _indexOfInterest[289740](289760 call iteratorIndex _iterator[289741]))
        }
        ForLoop[289742]
        {
          unknown bin[289767] "index var" "insert auto destroy"
          (490354 'end of statement')
          (289769 'move' bin[289767] _indexOfInterest[289740])
          (490355 'end of statement' bin[289767])
          {
            unknown call_tmp[741053] "maybe param" "maybe type" "temp"
            (741056 'move' call_tmp[741053](289668 call offsets[288213] bin[289767]))
            const bin_start[289669] "dead at end of block" "const" "insert auto destroy"
            (548964 'init var' bin_start[289669] call_tmp[741053])
            (289672 'end of statement')
            const bin_end[289695] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580259] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580260] "maybe param" "temp"
            unknown call_tmp[741058] "expr temp" "maybe param" "maybe type" "temp"
            (741061 'move' call_tmp[741058](289676 call + bin[289767] 1))
            unknown call_tmp[741063] "expr temp" "maybe param" "maybe type" "temp"
            (741066 'move' call_tmp[741063](289679 call <= call_tmp[741058] radix[288199]))
            (580265 'move' tmp[580260](580263 call _cond_test call_tmp[741063]))
            if tmp[580260]
            {
              unknown tmp[580267] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741068] "expr temp" "maybe param" "maybe type" "temp"
              (741071 'move' call_tmp[741068](289684 call + bin[289767] 1))
              unknown call_tmp[741073] "expr temp" "maybe param" "maybe type" "temp"
              (741076 'move' call_tmp[741073](289687 call offsets[288213] call_tmp[741068]))
              (580269 'move' tmp[580267](289689 call - call_tmp[741073] 1))
              (580274 'move' tmp[580259](580271 '_paramFoldLogical' tmp[580260] tmp[580267]))
            }
            {
              (580279 'move' tmp[580259](580276 '_paramFoldLogical' tmp[580260] end_n[288048]))
            }
            (548966 'init var' bin_end[289695] tmp[580259])
            (289698 'end of statement')
            unknown call_tmp[741078] "expr temp" "maybe param" "maybe type" "temp"
            (741081 'move' call_tmp[741078](289701 call + 1 bin_end[289695]))
            unknown call_tmp[741083] "maybe param" "maybe type" "temp"
            (741086 'move' call_tmp[741083](289704 call - call_tmp[741078] bin_start[289669]))
            const num[289706] "dead at end of block" "const" "insert auto destroy"
            (548968 'init var' num[289706] call_tmp[741083])
            (289709 'end of statement' offsets[288213] bin[289767] bin[289767] radix[288199] offsets[288213] bin[289767] bin_end[289695] bin_start[289669])
            unknown tmp[434434] "maybe param" "temp"
            (434445 'move' tmp[434434](289712 call <= num[289706] 1))
            unknown call_tmp[741088] "expr temp" "maybe param" "maybe type" "temp"
            (741091 'move' call_tmp[741088](434447 call _cond_invalid tmp[434434]))
            if call_tmp[741088]
            {
              (434450 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580286] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580287] "maybe param" "temp"
            unknown call_tmp[741093] "expr temp" "maybe param" "maybe type" "temp"
            (741096 'move' call_tmp[741093](434435 call isTrue tmp[434434]))
            (580292 'move' tmp[580287](580290 call _cond_test call_tmp[741093]))
            if tmp[580287]
            {
              (580297 'move' tmp[580286](580294 '_paramFoldLogical' tmp[580287] 1))
            }
            {
              unknown tmp[580299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741098] "expr temp" "maybe param" "maybe type" "temp"
              (741101 'move' call_tmp[741098](289716 call >= startbit[288060] endbit[288064]))
              (580301 'move' tmp[580299](434439 call isTrue call_tmp[741098]))
              (580306 'move' tmp[580286](580303 '_paramFoldLogical' tmp[580287] tmp[580299]))
            }
            unknown call_tmp[741103] "expr temp" "maybe param" "maybe type" "temp"
            (741106 'move' call_tmp[741103](289736 call _cond_test tmp[580286]))
            if call_tmp[741103]
            {
            }
            {
              unknown call_tmp[741108] "expr temp" "maybe param" "maybe type" "temp"
              (741111 'move' call_tmp[741108](289729 call + startbit[288060] radixbits[288188]))
              (289733 call msbRadixSort bin_start[289669] bin_end[289695] A[288054] criterion[288057] call_tmp[741108] endbit[288064] settings[288067])
              (490366 'end of statement' bin_start[289669] bin_end[289695] radixbits[288188])
            }
          }
          label _continueLabel[289745]
          _indexOfInterest[289740]
          _iterator[289741]
        }
        label _breakLabel[289746]
      }
    }
    unknown call_tmp[741115] "expr temp" "maybe param" "maybe type" "temp"
    (741118 'move' call_tmp[741115](289787 call CHECK_SORTS _mt[243] settings[288067]))
    unknown call_tmp[741120] "expr temp" "maybe param" "maybe type" "temp"
    (741123 'move' call_tmp[741120](289798 call _cond_test call_tmp[741115]))
    if call_tmp[741120]
    {
      (289796 call checkSorted start_n[288042] end_n[288048] A[288054] criterion[288057])
    }
    label _end_msbRadixSort[538050]
    (538052 return _void[55])
  }
  (355311 'used modules list'(352964 'use' ChapelStandard[20264])(287905 'import' Sort[267880].{defaultComparator, ShellSort})(287912 'use' RadixSortHelp[275986]))
}