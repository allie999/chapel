AST dump for MSBRadixSort after pass normalize.
Module use list: ChapelStandard Sort RadixSortHelp ShellSort 

{
  function chpl__init_MSBRadixSort[416181]() : void[4] "insert line file info" "module init"
  {
    (538192 return _void[55])
  }
  type MSBRadixSortSettings[288067](?) unknown DISTRIBUTE_BUFFER[288029] "param" 5 const-val sortSwitch[288034]:int(64)[13] "const" 256 const-val minForTask[288039]:int(64)[13] "const" 256 unknown CHECK_SORTS[288044] "param" 0 unknown progress[288049] "param" 0 const-val alwaysSerial[288054]:bool[10] "const" 0 const maxTasks[288062] "const"(288059 call maxTaskPar _mt[243](364734 call here[90438]))
  function msbRadixSort[288078](arg Data[288075]:_array[133594](?), arg comparator[288083]:_any[178](?) :
  defaultComparator[267996] =
  defaultComparator[267996]) : _unknown[51] "no return value for void"
  {
    unknown endbit[288088] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548981] "maybe param" "maybe type" "temp"
    (548987 'move' type_tmp[548981] int(64)[13])
    (548983 'init var split decl' endbit[288088] type_tmp[548981])
    (288091 'end of statement')
    unknown call_tmp[740212] "maybe param" "maybe type" "temp"
    (740215 'move' call_tmp[740212](288098 call msbRadixSortParamLastStartBit Data[288075] comparator[288083]))
    (548989 'init var split init' endbit[288088] call_tmp[740212] type_tmp[548981])
    (490306 'end of statement' endbit[288088])
    unknown call_tmp[740217] "expr temp" "maybe param" "maybe type" "temp"
    (740220 'move' call_tmp[740217](288104 call < endbit[288088] 0))
    unknown call_tmp[740222] "expr temp" "maybe param" "maybe type" "temp"
    (740225 'move' call_tmp[740222](288114 call _cond_test call_tmp[740217]))
    if call_tmp[740222]
    {
      unknown call_tmp[740227] "expr temp" "maybe param" "maybe type" "temp"
      (740230 'move' call_tmp[740227](288110 call max int(64)[13]))
      (288111 call = endbit[288088] call_tmp[740227])
      (490308 'end of statement' endbit[288088])
    }
    unknown call_tmp[740234] "expr temp" "maybe param" "maybe type" "temp"
    (740237 'move' call_tmp[740234](288121 call _dom _mt[243] Data[288075]))
    unknown call_tmp[740241] "expr temp" "maybe param" "maybe type" "temp"
    (740244 'move' call_tmp[740241](288124 call low _mt[243] call_tmp[740234]))
    unknown call_tmp[740248] "expr temp" "maybe param" "maybe type" "temp"
    (740251 'move' call_tmp[740248](288130 call _dom _mt[243] Data[288075]))
    unknown call_tmp[740255] "expr temp" "maybe param" "maybe type" "temp"
    (740258 'move' call_tmp[740255](288133 call high _mt[243] call_tmp[740248]))
    unknown call_tmp[740260] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (740263 'move' call_tmp[740260](748126 'new' MSBRadixSortSettings[288067](?)))
    (288148 call msbRadixSort(start_n = call_tmp[740241])(end_n = call_tmp[740255]) Data[288075] comparator[288083](startbit = 0)(endbit = endbit[288088])(settings = call_tmp[740260]))
    (490310 'end of statement' endbit[288088])
    (538180 return _void[55])
  }
  function msbRadixSort[288158](arg start_n[288155]:int(64)[13], arg end_n[288161]:int(64)[13], arg A[288167]:_array[133594](?), arg criterion[288170]:_any[178](?), arg startbit[288173]:int(64)[13], arg endbit[288177]:int(64)[13], arg settings[288180]:_any[178](?)) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[740265] "expr temp" "maybe param" "maybe type" "temp"
    (740268 'move' call_tmp[740265](288184 call > startbit[288173] endbit[288177]))
    unknown call_tmp[740270] "expr temp" "maybe param" "maybe type" "temp"
    (740273 'move' call_tmp[740270](288188 call _cond_test call_tmp[740265]))
    if call_tmp[740270]
    {
      gotoReturn _end_msbRadixSort[538182] _end_msbRadixSort[538182]
    }
    unknown call_tmp[740275] "expr temp" "maybe param" "maybe type" "temp"
    (740278 'move' call_tmp[740275](288196 call - end_n[288161] start_n[288155]))
    unknown call_tmp[740282] "expr temp" "maybe param" "maybe type" "temp"
    (740285 'move' call_tmp[740282](288201 call sortSwitch _mt[243] settings[288180]))
    unknown call_tmp[740287] "expr temp" "maybe param" "maybe type" "temp"
    (740290 'move' call_tmp[740287](288204 call < call_tmp[740275] call_tmp[740282]))
    unknown call_tmp[740292] "expr temp" "maybe param" "maybe type" "temp"
    (740295 'move' call_tmp[740292](288241 call _cond_test call_tmp[740287]))
    if call_tmp[740292]
    {
      (288217 call shellSort module=[255] ShellSort[273541] A[288167] criterion[288170](start = start_n[288155])(end = end_n[288161]))
      (490313 'end of statement')
      unknown call_tmp[740299] "expr temp" "maybe param" "maybe type" "temp"
      (740302 'move' call_tmp[740299](288223 call CHECK_SORTS _mt[243] settings[288180]))
      unknown call_tmp[740304] "expr temp" "maybe param" "maybe type" "temp"
      (740307 'move' call_tmp[740304](288234 call _cond_test call_tmp[740299]))
      if call_tmp[740304]
      {
        (288232 call checkSorted start_n[288155] end_n[288161] A[288167] criterion[288170])
      }
      gotoReturn _end_msbRadixSort[538182] _end_msbRadixSort[538182]
      (364740 'referenced modules list' ShellSort[273541])
    }
    unknown call_tmp[740311] "expr temp" "maybe param" "maybe type" "temp"
    (740314 'move' call_tmp[740311](288248 call progress _mt[243] settings[288180]))
    unknown call_tmp[740316] "expr temp" "maybe param" "maybe type" "temp"
    (740319 'move' call_tmp[740316](288295 call _cond_test call_tmp[740311]))
    if call_tmp[740316]
    {
      (288293 call writeln "radix sort start=" start_n[288155] " end=" end_n[288161] " startbit=" startbit[288173] " endbit=" endbit[288177])
    }
    const radixbits[288301] "dead at end of block" "const" "insert auto destroy"
    (548992 'init var' radixbits[288301] RADIX_BITS[276107])
    (288304 'end of statement')
    unknown call_tmp[740321] "expr temp" "maybe param" "maybe type" "temp"
    (740324 'move' call_tmp[740321](288307 call << 1 radixbits[288301]))
    unknown call_tmp[740326] "maybe param" "maybe type" "temp"
    (740329 'move' call_tmp[740326](288310 call + call_tmp[740321] 1))
    const radix[288312] "dead at end of block" "const" "insert auto destroy"
    (548994 'init var' radix[288312] call_tmp[740326])
    (288315 'end of statement')
    unknown offsets[288326] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740331] "expr temp" "maybe param" "maybe type" "temp"
    (740334 'move' call_tmp[740331](288318 call chpl_build_bounded_range 0 radix[288312]))
    unknown call_tmp[740336] "expr temp" "maybe param" "maybe type" "temp"
    (740339 'move' call_tmp[740336](288322 call chpl__ensureDomainExpr call_tmp[740331]))
    unknown call_tmp[740341] "expr temp" "maybe param" "maybe type" "temp"
    (740344 'move' call_tmp[740341](288324 call chpl__buildArrayRuntimeType call_tmp[740336] int(64)[13]))
    (548996 'default init var' offsets[288326] call_tmp[740341])
    (288329 'end of statement')
    unknown end_offsets[288340] "dead at end of block" "insert auto destroy"
    unknown call_tmp[740346] "expr temp" "maybe param" "maybe type" "temp"
    (740349 'move' call_tmp[740346](288332 call chpl_build_bounded_range 0 radix[288312]))
    unknown call_tmp[740351] "expr temp" "maybe param" "maybe type" "temp"
    (740354 'move' call_tmp[740351](288336 call chpl__ensureDomainExpr call_tmp[740346]))
    unknown call_tmp[740356] "expr temp" "maybe param" "maybe type" "temp"
    (740359 'move' call_tmp[740356](288338 call chpl__buildArrayRuntimeType call_tmp[740351] int(64)[13]))
    (548998 'default init var' end_offsets[288340] call_tmp[740356])
    (288343 'end of statement')
    { scopeless type
      unknown call_type_tmp[493276] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[740361] "expr temp" "maybe param" "maybe type" "temp"
      (740364 'move' call_tmp[740361](288348 call A[288167] start_n[288155]))
      unknown call_tmp[740366] "expr temp" "maybe param" "maybe type" "temp"
      (740369 'move' call_tmp[740366](288352 call binForRecord call_tmp[740361] criterion[288170] startbit[288173]))
      unknown call_tmp[740371] "expr temp" "maybe param" "maybe type" "temp"
      (740374 'move' call_tmp[740371](288355 call call_tmp[740366] 1))
      (493280 'move' call_type_tmp[493276](288356 'typeof' call_tmp[740371]))
    }
    unknown ubitsType[288357] "dead at end of block" "insert auto destroy" "type variable" call_type_tmp[493276]
    (549001 'move' ubitsType[288357] call_type_tmp[493276])
    unknown call_tmp[740376] "maybe param" "maybe type" "temp"
    (740379 'move' call_tmp[740376](288364 call max ubitsType[288357]))
    unknown min_ubits[288365] "dead at end of block" "insert auto destroy"
    (549003 'init var' min_ubits[288365] call_tmp[740376] ubitsType[288357])
    (288368 'end of statement')
    unknown max_ubits[288371] "dead at end of block" "insert auto destroy"
    (549005 'init var' max_ubits[288371] 0 ubitsType[288357])
    (288374 'end of statement')
    unknown call_tmp[740381] "maybe param" "maybe type" "temp"
    (740384 'move' call_tmp[740381](288377 call + radix[288312] 1))
    unknown min_bin[288379] "dead at end of block" "insert auto destroy"
    (549007 'init var' min_bin[288379] call_tmp[740381])
    (288382 'end of statement')
    unknown max_bin[288384] "dead at end of block" "insert auto destroy"
    (549009 'init var' max_bin[288384] 0)
    (288387 'end of statement')
    unknown any_ending[288389] "dead at end of block" "insert auto destroy"
    (549011 'init var' any_ending[288389] 0)
    (288392 'end of statement')
    unknown call_tmp[740388] "expr temp" "maybe param" "maybe type" "temp"
    (740391 'move' call_tmp[740388](288396 call alwaysSerial _mt[243] settings[288180]))
    unknown call_tmp[740393] "expr temp" "maybe param" "maybe type" "temp"
    (740396 'move' call_tmp[740393](288400 call == call_tmp[740388] 0))
    unknown call_tmp[740398] "expr temp" "maybe param" "maybe type" "temp"
    (740401 'move' call_tmp[740398](288654 call _cond_test call_tmp[740393]))
    if call_tmp[740398]
    {
      unknown call_tmp[740403] "expr temp" "maybe param" "maybe type" "temp"
      (740406 'move' call_tmp[740403](288405 call chpl_build_bounded_range start_n[288155] end_n[288161]))
      Forall {
        induction variables:
          
          unknown i[288521] "index var" "insert auto destroy"
        iterated expressions:
          call_tmp[740403]
        shadow variables:
          offsets[288409] 'reduce' intent outer var offsets[288326]
            init block
            {
            }
            deinit block
            {
            }
          min_ubits[288417] 'reduce' intent outer var min_ubits[288365]
            init block
            {
            }
            deinit block
            {
            }
          max_ubits[288424] 'reduce' intent outer var max_ubits[288371]
            init block
            {
            }
            deinit block
            {
            }
          any_ending[288431] 'reduce' intent outer var any_ending[288389]
            init block
            {
            }
            deinit block
            {
            }
        other variables
          forall body
        {
          unknown call_tmp[740408] "expr temp" "maybe param" "maybe type" "temp"
          (740411 'move' call_tmp[740408](288445 call A[288167] i[288521]))
          unknown call_tmp[740413] "maybe param" "maybe type" "temp"
          (740416 'move' call_tmp[740413](288449 call binForRecord call_tmp[740408] criterion[288170] startbit[288173]))
          const tmp[288450] "dead at end of block" "const" "insert auto destroy" "temp"
          (549013 'init var' tmp[288450] call_tmp[740413])
          (288457 call _check_tuple_var_decl tmp[288450] 2)
          (490324 'end of statement')
          unknown call_tmp[740418] "maybe param" "maybe type" "temp"
          (740421 'move' call_tmp[740418](288451 call tmp[288450] 0))
          const bin[288436] "dead at end of block" "const" "insert auto destroy"
          (549015 'init var' bin[288436] call_tmp[740418])
          unknown call_tmp[740423] "maybe param" "maybe type" "temp"
          (740426 'move' call_tmp[740423](288454 call tmp[288450] 1))
          const ubits[288438] "dead at end of block" "const" "insert auto destroy"
          (549017 'init var' ubits[288438] call_tmp[740423])
          (288462 'end of statement')
          unknown call_tmp[740428] "expr temp" "maybe param" "maybe type" "temp"
          (740431 'move' call_tmp[740428](288466 call < ubits[288438] min_ubits[288417]))
          unknown call_tmp[740433] "expr temp" "maybe param" "maybe type" "temp"
          (740436 'move' call_tmp[740433](288473 call _cond_test call_tmp[740428]))
          if call_tmp[740433]
          {
            (288470 call = min_ubits[288417] ubits[288438])
            (490325 'end of statement' min_ubits[288417] ubits[288438])
          }
          unknown call_tmp[740438] "expr temp" "maybe param" "maybe type" "temp"
          (740441 'move' call_tmp[740438](288480 call > ubits[288438] max_ubits[288424]))
          unknown call_tmp[740443] "expr temp" "maybe param" "maybe type" "temp"
          (740446 'move' call_tmp[740443](288487 call _cond_test call_tmp[740438]))
          if call_tmp[740443]
          {
            (288484 call = max_ubits[288424] ubits[288438])
            (490328 'end of statement' max_ubits[288424] ubits[288438])
          }
          unknown tmp[434372] "maybe param" "temp"
          (434383 'move' tmp[434372](288494 call == bin[288436] 0))
          unknown call_tmp[740448] "expr temp" "maybe param" "maybe type" "temp"
          (740451 'move' call_tmp[740448](434385 call _cond_invalid tmp[434372]))
          if call_tmp[740448]
          {
            (434388 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[580102] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[580103] "maybe param" "temp"
          unknown call_tmp[740453] "expr temp" "maybe param" "maybe type" "temp"
          (740456 'move' call_tmp[740453](434373 call isTrue tmp[434372]))
          (580108 'move' tmp[580103](580106 call _cond_test call_tmp[740453]))
          if tmp[580103]
          {
            (580113 'move' tmp[580102](580110 '_paramFoldLogical' tmp[580103] 1))
          }
          {
            unknown tmp[580115] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[740458] "expr temp" "maybe param" "maybe type" "temp"
            (740461 'move' call_tmp[740458](288498 call == bin[288436] radix[288312]))
            (580117 'move' tmp[580115](434377 call isTrue call_tmp[740458]))
            (580122 'move' tmp[580102](580119 '_paramFoldLogical' tmp[580103] tmp[580115]))
          }
          unknown call_tmp[740463] "expr temp" "maybe param" "maybe type" "temp"
          (740466 'move' call_tmp[740463](288507 call _cond_test tmp[580102]))
          if call_tmp[740463]
          {
            (288504 call = any_ending[288431] 1)
            (490332 'end of statement' any_ending[288431])
          }
          unknown call_tmp[740468] "expr temp" "maybe param" "maybe type" "temp"
          (740471 'move' call_tmp[740468](288515 call offsets[288409] bin[288436]))
          (288517 call += call_tmp[740468] 1)
          (490334 'end of statement' offsets[288409] bin[288436])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[288615] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[288616] "expr temp" "temp"
        unknown call_tmp[740473] "expr temp" "maybe param" "maybe type" "temp"
        (740476 'move' call_tmp[740473](288630 call chpl_direct_range_iter start_n[288155] end_n[288161] 1))
        (288625 'move' _iterator[288616](288623 call _getIterator call_tmp[740473]))
        Defer
        {
          {
            (288646 call _freeIterator _iterator[288616])
          }
        }
        { scopeless type
          (288635 'move' _indexOfInterest[288615](288632 call iteratorIndex _iterator[288616]))
        }
        ForLoop[288617]
        {
          unknown i[288639] "index var" "insert auto destroy"
          (490338 'end of statement')
          (288641 'move' i[288639] _indexOfInterest[288615])
          (490339 'end of statement' i[288639])
          {
            unknown call_tmp[740478] "expr temp" "maybe param" "maybe type" "temp"
            (740481 'move' call_tmp[740478](288540 call A[288167] i[288639]))
            unknown call_tmp[740483] "maybe param" "maybe type" "temp"
            (740486 'move' call_tmp[740483](288544 call binForRecord call_tmp[740478] criterion[288170] startbit[288173]))
            const tmp[288545] "dead at end of block" "const" "insert auto destroy" "temp"
            (549019 'init var' tmp[288545] call_tmp[740483])
            (288552 call _check_tuple_var_decl tmp[288545] 2)
            (490341 'end of statement')
            unknown call_tmp[740488] "maybe param" "maybe type" "temp"
            (740491 'move' call_tmp[740488](288546 call tmp[288545] 0))
            const bin[288531] "dead at end of block" "const" "insert auto destroy"
            (549021 'init var' bin[288531] call_tmp[740488])
            unknown call_tmp[740493] "maybe param" "maybe type" "temp"
            (740496 'move' call_tmp[740493](288549 call tmp[288545] 1))
            const ubits[288533] "dead at end of block" "const" "insert auto destroy"
            (549023 'init var' ubits[288533] call_tmp[740493])
            (288557 'end of statement')
            unknown call_tmp[740498] "expr temp" "maybe param" "maybe type" "temp"
            (740501 'move' call_tmp[740498](288561 call < ubits[288533] min_ubits[288365]))
            unknown call_tmp[740503] "expr temp" "maybe param" "maybe type" "temp"
            (740506 'move' call_tmp[740503](288568 call _cond_test call_tmp[740498]))
            if call_tmp[740503]
            {
              (288565 call = min_ubits[288365] ubits[288533])
              (490342 'end of statement' min_ubits[288365] ubits[288533])
            }
            unknown call_tmp[740508] "expr temp" "maybe param" "maybe type" "temp"
            (740511 'move' call_tmp[740508](288575 call > ubits[288533] max_ubits[288371]))
            unknown call_tmp[740513] "expr temp" "maybe param" "maybe type" "temp"
            (740516 'move' call_tmp[740513](288582 call _cond_test call_tmp[740508]))
            if call_tmp[740513]
            {
              (288579 call = max_ubits[288371] ubits[288533])
              (490345 'end of statement' max_ubits[288371] ubits[288533])
            }
            unknown tmp[434393] "maybe param" "temp"
            (434404 'move' tmp[434393](288589 call == bin[288531] 0))
            unknown call_tmp[740518] "expr temp" "maybe param" "maybe type" "temp"
            (740521 'move' call_tmp[740518](434406 call _cond_invalid tmp[434393]))
            if call_tmp[740518]
            {
              (434409 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580129] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580130] "maybe param" "temp"
            unknown call_tmp[740523] "expr temp" "maybe param" "maybe type" "temp"
            (740526 'move' call_tmp[740523](434394 call isTrue tmp[434393]))
            (580135 'move' tmp[580130](580133 call _cond_test call_tmp[740523]))
            if tmp[580130]
            {
              (580140 'move' tmp[580129](580137 '_paramFoldLogical' tmp[580130] 1))
            }
            {
              unknown tmp[580142] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740528] "expr temp" "maybe param" "maybe type" "temp"
              (740531 'move' call_tmp[740528](288593 call == bin[288531] radix[288312]))
              (580144 'move' tmp[580142](434398 call isTrue call_tmp[740528]))
              (580149 'move' tmp[580129](580146 '_paramFoldLogical' tmp[580130] tmp[580142]))
            }
            unknown call_tmp[740533] "expr temp" "maybe param" "maybe type" "temp"
            (740536 'move' call_tmp[740533](288602 call _cond_test tmp[580129]))
            if call_tmp[740533]
            {
              (288599 call = any_ending[288389] 1)
              (490349 'end of statement' any_ending[288389])
            }
            unknown call_tmp[740538] "expr temp" "maybe param" "maybe type" "temp"
            (740541 'move' call_tmp[740538](288610 call offsets[288326] bin[288531]))
            (288612 call += call_tmp[740538] 1)
            (490351 'end of statement' offsets[288326] bin[288531])
          }
          label _continueLabel[288620]
          _indexOfInterest[288615]
          _iterator[288616]
        }
        label _breakLabel[288621]
      }
    }
    unknown call_tmp[740543] "expr temp" "maybe param" "maybe type" "temp"
    (740546 'move' call_tmp[740543](288660 call == any_ending[288389] 0))
    unknown call_tmp[740548] "expr temp" "maybe param" "maybe type" "temp"
    (740551 'move' call_tmp[740548](288695 call _cond_test call_tmp[740543]))
    if call_tmp[740548]
    {
      unknown call_tmp[740553] "maybe param" "maybe type" "temp"
      (740556 'move' call_tmp[740553](288667 call findDataStartBit startbit[288173] min_ubits[288365] max_ubits[288371]))
      unknown dataStartBit[288668] "dead at end of block" "insert auto destroy"
      (549025 'init var' dataStartBit[288668] call_tmp[740553])
      (288671 'end of statement' min_ubits[288365] max_ubits[288371])
      unknown call_tmp[740558] "expr temp" "maybe param" "maybe type" "temp"
      (740561 'move' call_tmp[740558](288675 call > dataStartBit[288668] startbit[288173]))
      unknown call_tmp[740563] "expr temp" "maybe param" "maybe type" "temp"
      (740566 'move' call_tmp[740563](288691 call _cond_test call_tmp[740558]))
      if call_tmp[740563]
      {
        (288686 call msbRadixSort start_n[288155] end_n[288161] A[288167] criterion[288170] dataStartBit[288668] endbit[288177] settings[288180])
        (490356 'end of statement' dataStartBit[288668])
        gotoReturn _end_msbRadixSort[538182] _end_msbRadixSort[538182]
      }
    }
    unknown call_tmp[740570] "expr temp" "maybe param" "maybe type" "temp"
    (740573 'move' call_tmp[740570](288700 call progress _mt[243] settings[288180]))
    unknown call_tmp[740575] "expr temp" "maybe param" "maybe type" "temp"
    (740578 'move' call_tmp[740575](288722 call _cond_test call_tmp[740570]))
    if call_tmp[740575]
    {
      (288720 call writeln "accumulate")
    }
    unknown sum[288728] "dead at end of block" "insert auto destroy"
    (549027 'init var' sum[288728] 0)
    (288731 'end of statement')
    {
      unknown _indexOfInterest[288773] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[288774] "expr temp" "temp"
      unknown call_tmp[740580] "expr temp" "maybe param" "maybe type" "temp"
      (740583 'move' call_tmp[740580](288783 call _getIterator offsets[288326]))
      unknown call_tmp[740585] "expr temp" "maybe param" "maybe type" "temp"
      (740588 'move' call_tmp[740585](288786 call _getIterator end_offsets[288340]))
      (288788 'move' _iterator[288774](288740 call _build_tuple call_tmp[740580] call_tmp[740585]))
      Defer
      {
        {
          (288818 call _freeIterator _iterator[288774])
        }
      }
      { scopeless type
        (288793 'move' _indexOfInterest[288773](288790 call iteratorIndex _iterator[288774]))
      }
      ForLoop[288775]
      {
        (288798 call _check_tuple_var_decl _indexOfInterest[288773] 2)
        (490361 'end of statement')
        unknown off[288804] "index var" "insert auto destroy"
        (490362 'end of statement')
        (288806 'move' off[288804](288802 call _indexOfInterest[288773] 0))
        (490363 'end of statement' off[288804])
        unknown end[288811] "index var" "insert auto destroy"
        (490365 'end of statement')
        (288813 'move' end[288811](288809 call _indexOfInterest[288773] 1))
        (490366 'end of statement' end[288811])
        {
          unknown binstart[288742] "dead at end of block" "insert auto destroy"
          (549029 'init var' binstart[288742] sum[288728])
          (288745 'end of statement')
          (288749 call += sum[288728] off[288804])
          (490369 'end of statement' sum[288728] off[288804])
          unknown binend[288753] "dead at end of block" "insert auto destroy"
          (549031 'init var' binend[288753] sum[288728])
          (288756 'end of statement' sum[288728] sum[288728])
          unknown call_tmp[740590] "expr temp" "maybe param" "maybe type" "temp"
          (740593 'move' call_tmp[740590](288760 call + start_n[288155] binstart[288742]))
          (288762 call = off[288804] call_tmp[740590])
          (490373 'end of statement' off[288804] binstart[288742])
          unknown call_tmp[740595] "expr temp" "maybe param" "maybe type" "temp"
          (740598 'move' call_tmp[740595](288768 call + start_n[288155] binend[288753]))
          (288770 call = end[288811] call_tmp[740595])
          (490376 'end of statement' end[288811] binend[288753])
        }
        label _continueLabel[288778]
        _indexOfInterest[288773]
        _iterator[288774]
      }
      label _breakLabel[288779]
    }
    unknown curbin[288826] "dead at end of block" "insert auto destroy"
    (549033 'init var' curbin[288826] 0)
    (288829 'end of statement' radixbits[288301] radix[288312] radix[288312] ubitsType[288357] ubitsType[288357] ubitsType[288357] radix[288312])
    unknown call_tmp[740602] "expr temp" "maybe param" "maybe type" "temp"
    (740605 'move' call_tmp[740602](288831 call progress _mt[243] settings[288180]))
    unknown call_tmp[740607] "expr temp" "maybe param" "maybe type" "temp"
    (740610 'move' call_tmp[740607](288855 call _cond_test call_tmp[740602]))
    if call_tmp[740607]
    {
      (288853 call writeln "shuffle")
    }
    {
      unknown tmp[289385] "temp"
      (289403 'move' tmp[289385](289401 call _cond_test 1))
      WhileDo[289390]
      {
        {
          {
            unknown tmp[288883] "temp"
            unknown tmp[434435] "maybe param" "temp"
            (434446 'move' tmp[434435](288916 call <= curbin[288826] radix[288312]))
            unknown call_tmp[740612] "expr temp" "maybe param" "maybe type" "temp"
            (740615 'move' call_tmp[740612](434448 call _cond_invalid tmp[434435]))
            if call_tmp[740612]
            {
              (434451 call compilerError "cannot promote short-circuiting && operator")
            }
            unknown tmp[580156] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580157] "maybe param" "temp"
            unknown call_tmp[740617] "expr temp" "maybe param" "maybe type" "temp"
            (740620 'move' call_tmp[740617](434436 call isTrue tmp[434435]))
            (580162 'move' tmp[580157](580160 call _cond_test call_tmp[740617]))
            if tmp[580157]
            {
              unknown tmp[580164] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[740622] "expr temp" "maybe param" "maybe type" "temp"
              (740625 'move' call_tmp[740622](288922 call offsets[288326] curbin[288826]))
              unknown call_tmp[740627] "expr temp" "maybe param" "maybe type" "temp"
              (740630 'move' call_tmp[740627](288925 call end_offsets[288340] curbin[288826]))
              unknown call_tmp[740632] "expr temp" "maybe param" "maybe type" "temp"
              (740635 'move' call_tmp[740632](288920 call == call_tmp[740622] call_tmp[740627]))
              (580166 'move' tmp[580164](434439 call isTrue call_tmp[740632]))
              (580171 'move' tmp[580156](580168 '_paramFoldLogical' tmp[580157] tmp[580164]))
            }
            {
              (580176 'move' tmp[580156](580173 '_paramFoldLogical' tmp[580157] 0))
            }
            (288927 'move' tmp[288883](288912 call _cond_test tmp[580156]))
            WhileDo[288888]
            {
              {
                (288879 call += curbin[288826] 1)
                (490381 'end of statement' curbin[288826])
              }
              label _continueLabel[288886]
              unknown tmp[434414] "maybe param" "temp"
              (434425 'move' tmp[434414](288896 call <= curbin[288826] radix[288312]))
              unknown call_tmp[740637] "expr temp" "maybe param" "maybe type" "temp"
              (740640 'move' call_tmp[740637](434427 call _cond_invalid tmp[434414]))
              if call_tmp[740637]
              {
                (434430 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580183] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580184] "maybe param" "temp"
              unknown call_tmp[740642] "expr temp" "maybe param" "maybe type" "temp"
              (740645 'move' call_tmp[740642](434415 call isTrue tmp[434414]))
              (580189 'move' tmp[580184](580187 call _cond_test call_tmp[740642]))
              if tmp[580184]
              {
                unknown tmp[580191] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[740647] "expr temp" "maybe param" "maybe type" "temp"
                (740650 'move' call_tmp[740647](288902 call offsets[288326] curbin[288826]))
                unknown call_tmp[740652] "expr temp" "maybe param" "maybe type" "temp"
                (740655 'move' call_tmp[740652](288905 call end_offsets[288340] curbin[288826]))
                unknown call_tmp[740657] "expr temp" "maybe param" "maybe type" "temp"
                (740660 'move' call_tmp[740657](288900 call == call_tmp[740647] call_tmp[740652]))
                (580193 'move' tmp[580191](434418 call isTrue call_tmp[740657]))
                (580198 'move' tmp[580183](580195 '_paramFoldLogical' tmp[580184] tmp[580191]))
              }
              {
                (580203 'move' tmp[580183](580200 '_paramFoldLogical' tmp[580184] 0))
              }
              (288907 'move' tmp[288883](288892 call _cond_test tmp[580183]))
              tmp[288883]
            }
            label _breakLabel[288887]
          }
          unknown call_tmp[740662] "expr temp" "maybe param" "maybe type" "temp"
          (740665 'move' call_tmp[740662](288933 call > curbin[288826] radix[288312]))
          unknown call_tmp[740667] "expr temp" "maybe param" "maybe type" "temp"
          (740670 'move' call_tmp[740667](288939 call _cond_test call_tmp[740662]))
          if call_tmp[740667]
          {
            break _breakLabel[289389] _breakLabel[289389]
          }
          unknown call_tmp[740674] "maybe param" "maybe type" "temp"
          (740677 'move' call_tmp[740674](288946 call DISTRIBUTE_BUFFER _mt[243] settings[288180]))
          unknown max_buf[288949] "dead at end of block" "param"
          (549035 'init var' max_buf[288949] call_tmp[740674])
          (288952 'end of statement')
          unknown buf[288960] "dead at end of block" "insert auto destroy"
          unknown call_tmp[740681] "expr temp" "maybe param" "maybe type" "temp"
          (740684 'move' call_tmp[740681](288955 call eltType _mt[243] A[288167]))
          unknown call_tmp[740686] "expr temp" "maybe param" "maybe type" "temp"
          (740689 'move' call_tmp[740686](288958 call * max_buf[288949] call_tmp[740681]))
          (549037 'default init var' buf[288960] call_tmp[740686])
          (288963 'end of statement')
          unknown used_buf[288965] "dead at end of block" "insert auto destroy"
          (549039 'init var' used_buf[288965] 0)
          (288968 'end of statement')
          unknown call_tmp[740691] "maybe param" "maybe type" "temp"
          (740694 'move' call_tmp[740691](288972 call end_offsets[288340] curbin[288826]))
          unknown end[288973] "dead at end of block" "insert auto destroy"
          (549041 'init var' end[288973] call_tmp[740691])
          (288976 'end of statement')
          unknown call_tmp[740696] "expr temp" "maybe param" "maybe type" "temp"
          (740699 'move' call_tmp[740696](288981 call offsets[288326] curbin[288826]))
          unknown call_tmp[740701] "expr temp" "maybe param" "maybe type" "temp"
          (740704 'move' call_tmp[740701](288986 call end_offsets[288340] curbin[288826]))
          unknown call_tmp[740706] "expr temp" "maybe param" "maybe type" "temp"
          (740709 'move' call_tmp[740706](288989 call * 2 max_buf[288949]))
          unknown call_tmp[740711] "expr temp" "maybe param" "maybe type" "temp"
          (740714 'move' call_tmp[740711](288991 call - call_tmp[740701] call_tmp[740706]))
          unknown call_tmp[740716] "maybe param" "maybe type" "temp"
          (740719 'move' call_tmp[740716](288993 call max call_tmp[740696] call_tmp[740711]))
          unknown endfast[288994] "dead at end of block" "insert auto destroy"
          (549043 'init var' endfast[288994] call_tmp[740716])
          (288997 'end of statement')
          unknown call_tmp[740721] "expr temp" "maybe param" "maybe type" "temp"
          (740724 'move' call_tmp[740721](289002 call offsets[288326] curbin[288826]))
          unknown call_tmp[740726] "expr temp" "maybe param" "maybe type" "temp"
          (740729 'move' call_tmp[740726](289007 call end_offsets[288340] curbin[288826]))
          unknown call_tmp[740731] "expr temp" "maybe param" "maybe type" "temp"
          (740734 'move' call_tmp[740731](289009 call - call_tmp[740726] max_buf[288949]))
          unknown call_tmp[740736] "maybe param" "maybe type" "temp"
          (740739 'move' call_tmp[740736](289011 call max call_tmp[740721] call_tmp[740731]))
          unknown bufstart[289012] "dead at end of block" "insert auto destroy"
          (549045 'init var' bufstart[289012] call_tmp[740736])
          (289015 'end of statement')
          unknown i[289017] "dead at end of block" "insert auto destroy"
          (549047 'init var' i[289017] bufstart[289012])
          (289020 'end of statement' end_offsets[288340] curbin[288826] offsets[288326] curbin[288826] end_offsets[288340] curbin[288826] offsets[288326] curbin[288826] end_offsets[288340] curbin[288826] bufstart[289012])
          {
            unknown tmp[289047] "temp"
            unknown call_tmp[740741] "expr temp" "maybe param" "maybe type" "temp"
            (740744 'move' call_tmp[740741](289068 call < i[289017] end[288973]))
            (289071 'move' tmp[289047](289066 call _cond_test call_tmp[740741]))
            WhileDo[289052]
            {
              {
                unknown call_tmp[740746] "expr temp" "maybe param" "maybe type" "temp"
                (740749 'move' call_tmp[740746](289028 call buf[288960] used_buf[288965]))
                unknown call_tmp[740751] "expr temp" "maybe param" "maybe type" "temp"
                (740754 'move' call_tmp[740751](289032 call A[288167] i[289017]))
                (289033 call <=> call_tmp[740746] call_tmp[740751])
                (490395 'end of statement' buf[288960] used_buf[288965] i[289017])
                (289039 call += used_buf[288965] 1)
                (490399 'end of statement' used_buf[288965])
                (289044 call += i[289017] 1)
                (490401 'end of statement' i[289017])
              }
              label _continueLabel[289050]
              unknown call_tmp[740756] "expr temp" "maybe param" "maybe type" "temp"
              (740759 'move' call_tmp[740756](289058 call < i[289017] end[288973]))
              (289061 'move' tmp[289047](289056 call _cond_test call_tmp[740756]))
              tmp[289047]
            }
            label _breakLabel[289051]
          }
          {
            unknown tmp[289173] "temp"
            unknown call_tmp[740761] "expr temp" "maybe param" "maybe type" "temp"
            (740764 'move' call_tmp[740761](289198 call offsets[288326] curbin[288826]))
            unknown call_tmp[740766] "expr temp" "maybe param" "maybe type" "temp"
            (740769 'move' call_tmp[740766](289196 call < call_tmp[740761] endfast[288994]))
            (289201 'move' tmp[289173](289194 call _cond_test call_tmp[740766]))
            WhileDo[289178]
            {
              {
                {
                  unknown j[289135] "dead at end of block" "insert auto destroy"
                  (549049 'init var' j[289135] 0)
                  (490403 'end of statement')
                  unknown tmp[289136] "maybe param" "temp"
                  unknown call_tmp[740771] "expr temp" "maybe param" "maybe type" "temp"
                  (740774 'move' call_tmp[740771](289084 call - max_buf[288949] 1))
                  (289148 'move' tmp[289136](289146 call chpl_compute_low_param_loop_bound 0 call_tmp[740771]))
                  unknown tmp[289137] "maybe param" "temp"
                  unknown call_tmp[740776] "expr temp" "maybe param" "maybe type" "temp"
                  (740779 'move' call_tmp[740776](289153 call - max_buf[288949] 1))
                  (289158 'move' tmp[289137](289156 call chpl_compute_high_param_loop_bound 0 call_tmp[740776]))
                  unknown tmp[289138] "maybe param" "temp"
                  (289161 'move' tmp[289138] 1)
                  ParamForLoop[289163]
                  { j[289135] tmp[289136] tmp[289137] tmp[289138]
                    {
                      unknown call_tmp[740781] "expr temp" "maybe param" "maybe type" "temp"
                      (740784 'move' call_tmp[740781](289097 call buf[288960] j[289135]))
                      unknown call_tmp[740786] "maybe param" "maybe type" "temp"
                      (740789 'move' call_tmp[740786](289101 call binForRecord call_tmp[740781] criterion[288170] startbit[288173]))
                      const tmp[289102] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549051 'init var' tmp[289102] call_tmp[740786])
                      (289106 call _check_tuple_var_decl tmp[289102] 2)
                      (490404 'end of statement')
                      unknown call_tmp[740791] "maybe param" "maybe type" "temp"
                      (740794 'move' call_tmp[740791](289103 call tmp[289102] 0))
                      const bin[289088] "dead at end of block" "const" "insert auto destroy"
                      (549053 'init var' bin[289088] call_tmp[740791])
                      (289111 'end of statement')
                      unknown call_tmp[740796] "expr temp" "maybe param" "maybe type" "temp"
                      (740799 'move' call_tmp[740796](289117 call offsets[288326] bin[289088]))
                      unknown call_tmp[740801] "expr temp" "maybe param" "maybe type" "temp"
                      (740804 'move' call_tmp[740801](289119 call A[288167] call_tmp[740796]))
                      unknown call_tmp[740806] "expr temp" "maybe param" "maybe type" "temp"
                      (740809 'move' call_tmp[740806](289123 call buf[288960] j[289135]))
                      (289124 call <=> call_tmp[740801] call_tmp[740806])
                      (490405 'end of statement' offsets[288326] bin[289088] buf[288960] j[289135])
                      unknown call_tmp[740811] "expr temp" "maybe param" "maybe type" "temp"
                      (740814 'move' call_tmp[740811](289130 call offsets[288326] bin[289088]))
                      (289132 call += call_tmp[740811] 1)
                      (490410 'end of statement' offsets[288326] bin[289088])
                    }
                  }
                  label _unused_continueLabel[289140]
                  label _breakLabel[289139]
                }
              }
              label _continueLabel[289176]
              unknown call_tmp[740816] "expr temp" "maybe param" "maybe type" "temp"
              (740819 'move' call_tmp[740816](289186 call offsets[288326] curbin[288826]))
              unknown call_tmp[740821] "expr temp" "maybe param" "maybe type" "temp"
              (740824 'move' call_tmp[740821](289184 call < call_tmp[740816] endfast[288994]))
              (289189 'move' tmp[289173](289182 call _cond_test call_tmp[740821]))
              tmp[289173]
            }
            label _breakLabel[289177]
          }
          {
            unknown tmp[289354] "temp"
            unknown call_tmp[740826] "expr temp" "maybe param" "maybe type" "temp"
            (740829 'move' call_tmp[740826](289379 call offsets[288326] curbin[288826]))
            unknown call_tmp[740831] "expr temp" "maybe param" "maybe type" "temp"
            (740834 'move' call_tmp[740831](289377 call < call_tmp[740826] end[288973]))
            (289382 'move' tmp[289354](289375 call _cond_test call_tmp[740831]))
            WhileDo[289359]
            {
              {
                unknown j[289212] "dead at end of block" "insert auto destroy"
                (549055 'init var' j[289212] 0)
                (289215 'end of statement')
                {
                  unknown tmp[289315] "temp"
                  unknown tmp[434498] "maybe param" "temp"
                  (434509 'move' tmp[434498](289344 call >= used_buf[288965] 0))
                  unknown call_tmp[740836] "expr temp" "maybe param" "maybe type" "temp"
                  (740839 'move' call_tmp[740836](434511 call _cond_invalid tmp[434498]))
                  if call_tmp[740836]
                  {
                    (434514 call compilerError "cannot promote short-circuiting && operator")
                  }
                  unknown tmp[580210] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                  unknown tmp[580211] "maybe param" "temp"
                  unknown call_tmp[740841] "expr temp" "maybe param" "maybe type" "temp"
                  (740844 'move' call_tmp[740841](434499 call isTrue tmp[434498]))
                  (580216 'move' tmp[580211](580214 call _cond_test call_tmp[740841]))
                  if tmp[580211]
                  {
                    unknown tmp[580218] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                    unknown call_tmp[740846] "expr temp" "maybe param" "maybe type" "temp"
                    (740849 'move' call_tmp[740846](289348 call < j[289212] used_buf[288965]))
                    (580220 'move' tmp[580218](434502 call isTrue call_tmp[740846]))
                    (580225 'move' tmp[580210](580222 '_paramFoldLogical' tmp[580211] tmp[580218]))
                  }
                  {
                    (580230 'move' tmp[580210](580227 '_paramFoldLogical' tmp[580211] 0))
                  }
                  (289351 'move' tmp[289315](289340 call _cond_test tmp[580210]))
                  WhileDo[289320]
                  {
                    {
                      unknown call_tmp[740851] "expr temp" "maybe param" "maybe type" "temp"
                      (740854 'move' call_tmp[740851](289236 call buf[288960] j[289212]))
                      unknown call_tmp[740856] "maybe param" "maybe type" "temp"
                      (740859 'move' call_tmp[740856](289240 call binForRecord call_tmp[740851] criterion[288170] startbit[288173]))
                      const tmp[289241] "dead at end of block" "const" "insert auto destroy" "temp"
                      (549057 'init var' tmp[289241] call_tmp[740856])
                      (289245 call _check_tuple_var_decl tmp[289241] 2)
                      (490414 'end of statement')
                      unknown call_tmp[740861] "maybe param" "maybe type" "temp"
                      (740864 'move' call_tmp[740861](289242 call tmp[289241] 0))
                      const bin[289227] "dead at end of block" "const" "insert auto destroy"
                      (549059 'init var' bin[289227] call_tmp[740861])
                      (289250 'end of statement')
                      unknown call_tmp[740866] "maybe param" "maybe type" "temp"
                      (740869 'move' call_tmp[740866](289255 call offsets[288326] bin[289227]))
                      unknown offset[289256] "dead at end of block" "insert auto destroy"
                      (549061 'init var' offset[289256] call_tmp[740866])
                      (289259 'end of statement' offsets[288326] bin[289227])
                      unknown call_tmp[740871] "expr temp" "maybe param" "maybe type" "temp"
                      (740874 'move' call_tmp[740871](289263 call A[288167] offset[289256]))
                      unknown call_tmp[740876] "expr temp" "maybe param" "maybe type" "temp"
                      (740879 'move' call_tmp[740876](289267 call buf[288960] j[289212]))
                      (289268 call <=> call_tmp[740871] call_tmp[740876])
                      (490417 'end of statement' offset[289256] buf[288960] j[289212])
                      unknown call_tmp[740881] "expr temp" "maybe param" "maybe type" "temp"
                      (740884 'move' call_tmp[740881](289274 call offsets[288326] bin[289227]))
                      (289276 call += call_tmp[740881] 1)
                      (490421 'end of statement' offsets[288326] bin[289227])
                      unknown tmp[434456] "maybe param" "temp"
                      (434467 'move' tmp[434456](289281 call == bin[289227] curbin[288826]))
                      unknown call_tmp[740886] "expr temp" "maybe param" "maybe type" "temp"
                      (740889 'move' call_tmp[740886](434469 call _cond_invalid tmp[434456]))
                      if call_tmp[740886]
                      {
                        (434472 call compilerError "cannot promote short-circuiting && operator")
                      }
                      unknown tmp[580237] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                      unknown tmp[580238] "maybe param" "temp"
                      unknown call_tmp[740891] "expr temp" "maybe param" "maybe type" "temp"
                      (740894 'move' call_tmp[740891](434457 call isTrue tmp[434456]))
                      (580243 'move' tmp[580238](580241 call _cond_test call_tmp[740891]))
                      if tmp[580238]
                      {
                        unknown tmp[580245] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                        unknown call_tmp[740896] "expr temp" "maybe param" "maybe type" "temp"
                        (740899 'move' call_tmp[740896](289285 call >= offset[289256] bufstart[289012]))
                        (580247 'move' tmp[580245](434460 call isTrue call_tmp[740896]))
                        (580252 'move' tmp[580237](580249 '_paramFoldLogical' tmp[580238] tmp[580245]))
                      }
                      {
                        (580257 'move' tmp[580237](580254 '_paramFoldLogical' tmp[580238] 0))
                      }
                      unknown call_tmp[740901] "expr temp" "maybe param" "maybe type" "temp"
                      (740904 'move' call_tmp[740901](289306 call _cond_test tmp[580237]))
                      if call_tmp[740901]
                      {
                        (289291 call -= used_buf[288965] 1)
                        (490425 'end of statement' used_buf[288965])
                        unknown call_tmp[740906] "expr temp" "maybe param" "maybe type" "temp"
                        (740909 'move' call_tmp[740906](289298 call buf[288960] j[289212]))
                        unknown call_tmp[740911] "expr temp" "maybe param" "maybe type" "temp"
                        (740914 'move' call_tmp[740911](289302 call buf[288960] used_buf[288965]))
                        (289303 call <=> call_tmp[740906] call_tmp[740911])
                        (490427 'end of statement' buf[288960] j[289212] buf[288960] used_buf[288965])
                      }
                      (289312 call += j[289212] 1)
                      (490432 'end of statement' j[289212])
                    }
                    label _continueLabel[289318]
                    unknown tmp[434477] "maybe param" "temp"
                    (434488 'move' tmp[434477](289328 call >= used_buf[288965] 0))
                    unknown call_tmp[740916] "expr temp" "maybe param" "maybe type" "temp"
                    (740919 'move' call_tmp[740916](434490 call _cond_invalid tmp[434477]))
                    if call_tmp[740916]
                    {
                      (434493 call compilerError "cannot promote short-circuiting && operator")
                    }
                    unknown tmp[580264] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
                    unknown tmp[580265] "maybe param" "temp"
                    unknown call_tmp[740921] "expr temp" "maybe param" "maybe type" "temp"
                    (740924 'move' call_tmp[740921](434478 call isTrue tmp[434477]))
                    (580270 'move' tmp[580265](580268 call _cond_test call_tmp[740921]))
                    if tmp[580265]
                    {
                      unknown tmp[580272] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                      unknown call_tmp[740926] "expr temp" "maybe param" "maybe type" "temp"
                      (740929 'move' call_tmp[740926](289332 call < j[289212] used_buf[288965]))
                      (580274 'move' tmp[580272](434481 call isTrue call_tmp[740926]))
                      (580279 'move' tmp[580264](580276 '_paramFoldLogical' tmp[580265] tmp[580272]))
                    }
                    {
                      (580284 'move' tmp[580264](580281 '_paramFoldLogical' tmp[580265] 0))
                    }
                    (289335 'move' tmp[289315](289324 call _cond_test tmp[580264]))
                    tmp[289315]
                  }
                  label _breakLabel[289319]
                }
              }
              label _continueLabel[289357]
              unknown call_tmp[740931] "expr temp" "maybe param" "maybe type" "temp"
              (740934 'move' call_tmp[740931](289367 call offsets[288326] curbin[288826]))
              unknown call_tmp[740936] "expr temp" "maybe param" "maybe type" "temp"
              (740939 'move' call_tmp[740936](289365 call < call_tmp[740931] end[288973]))
              (289370 'move' tmp[289354](289363 call _cond_test call_tmp[740936]))
              tmp[289354]
            }
            label _breakLabel[289358]
          }
        }
        label _continueLabel[289388]
        (289396 'move' tmp[289385](289394 call _cond_test 1))
        tmp[289385]
      }
      label _breakLabel[289389]
    }
    unknown call_tmp[740943] "expr temp" "maybe param" "maybe type" "temp"
    (740946 'move' call_tmp[740943](289407 call progress _mt[243] settings[288180]))
    unknown call_tmp[740948] "expr temp" "maybe param" "maybe type" "temp"
    (740951 'move' call_tmp[740948](289431 call _cond_test call_tmp[740943]))
    if call_tmp[740948]
    {
      (289429 call writeln "sort sub-problems")
    }
    unknown call_tmp[740953] "expr temp" "maybe param" "maybe type" "temp"
    (740956 'move' call_tmp[740953](289439 call offsets[288326] 0))
    (289441 call = call_tmp[740953] start_n[288155])
    (490436 'end of statement' offsets[288326])
    {
      unknown _indexOfInterest[289464] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[289465] "expr temp" "temp"
      unknown call_tmp[740958] "expr temp" "maybe param" "maybe type" "temp"
      (740961 'move' call_tmp[740958](289479 call chpl_direct_range_iter 1 radix[288312] 1))
      (289474 'move' _iterator[289465](289472 call _getIterator call_tmp[740958]))
      Defer
      {
        {
          (289495 call _freeIterator _iterator[289465])
        }
      }
      { scopeless type
        (289484 'move' _indexOfInterest[289464](289481 call iteratorIndex _iterator[289465]))
      }
      ForLoop[289466]
      {
        unknown i[289488] "index var" "insert auto destroy"
        (490439 'end of statement')
        (289490 'move' i[289488] _indexOfInterest[289464])
        (490440 'end of statement' i[289488])
        {
          unknown call_tmp[740963] "expr temp" "maybe param" "maybe type" "temp"
          (740966 'move' call_tmp[740963](289452 call offsets[288326] i[289488]))
          unknown call_tmp[740968] "expr temp" "maybe param" "maybe type" "temp"
          (740971 'move' call_tmp[740968](289456 call - i[289488] 1))
          unknown call_tmp[740973] "expr temp" "maybe param" "maybe type" "temp"
          (740976 'move' call_tmp[740973](289459 call end_offsets[288340] call_tmp[740968]))
          (289460 call = call_tmp[740963] call_tmp[740973])
          (490442 'end of statement' offsets[288326] i[289488] end_offsets[288340] i[289488])
        }
        label _continueLabel[289469]
        _indexOfInterest[289464]
        _iterator[289465]
      }
      label _breakLabel[289470]
    }
    unknown call_tmp[740980] "expr temp" "maybe param" "maybe type" "temp"
    (740983 'move' call_tmp[740980](289503 call alwaysSerial _mt[243] settings[288180]))
    unknown call_tmp[740985] "expr temp" "maybe param" "maybe type" "temp"
    (740988 'move' call_tmp[740985](289507 call == call_tmp[740980] 0))
    unknown call_tmp[740990] "expr temp" "maybe param" "maybe type" "temp"
    (740993 'move' call_tmp[740990](289897 call _cond_test call_tmp[740985]))
    if call_tmp[740990]
    {
      unknown call_tmp[740995] "maybe param" "maybe type" "temp"
      (740998 'move' call_tmp[740995](289511 call + startbit[288173] radixbits[288301]))
      const subbits[289513] "dead at end of block" "const" "insert auto destroy"
      (549063 'init var' subbits[289513] call_tmp[740995])
      (289516 'end of statement')
      unknown nbigsubs[289519] "dead at end of block" "insert auto destroy"
      (549065 'init var' nbigsubs[289519] 0)
      (289522 'end of statement')
      unknown bigsubs[289537] "dead at end of block" "insert auto destroy"
      unknown call_tmp[741000] "expr temp" "maybe param" "maybe type" "temp"
      (741003 'move' call_tmp[741000](289525 call chpl_build_bounded_range 0 radix[288312]))
      unknown call_tmp[741005] "expr temp" "maybe param" "maybe type" "temp"
      (741008 'move' call_tmp[741005](289533 call chpl__ensureDomainExpr call_tmp[741000]))
      unknown call_tmp[741010] "expr temp" "maybe param" "maybe type" "temp"
      (741013 'move' call_tmp[741010](289531 call _build_tuple int(64)[13] int(64)[13]))
      unknown call_tmp[741015] "expr temp" "maybe param" "maybe type" "temp"
      (741018 'move' call_tmp[741015](289535 call chpl__buildArrayRuntimeType call_tmp[741005] call_tmp[741010]))
      (549067 'default init var' bigsubs[289537] call_tmp[741015])
      (289540 'end of statement')
      unknown call_tmp[741020] "expr temp" "maybe param" "maybe type" "temp"
      (741023 'move' call_tmp[741020](364754 call here[90438]))
      unknown call_tmp[741027] "maybe param" "maybe type" "temp"
      (741030 'move' call_tmp[741027](289546 call(289542 call (partial) runningTasks _mt[243] call_tmp[741020])))
      const runningNow[289547] "dead at end of block" "const" "insert auto destroy"
      (549069 'init var' runningNow[289547] call_tmp[741027])
      (289550 'end of statement' radixbits[288301] radix[288312])
      {
        unknown _indexOfInterest[289674] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289675] "expr temp" "temp"
        unknown call_tmp[741032] "expr temp" "maybe param" "maybe type" "temp"
        (741035 'move' call_tmp[741032](289689 call - radix[288312] 1))
        unknown call_tmp[741037] "expr temp" "maybe param" "maybe type" "temp"
        (741040 'move' call_tmp[741037](289692 call chpl_direct_range_iter 1 call_tmp[741032] 1))
        (289684 'move' _iterator[289675](289682 call _getIterator call_tmp[741037]))
        Defer
        {
          {
            (289708 call _freeIterator _iterator[289675])
          }
        }
        { scopeless type
          (289697 'move' _indexOfInterest[289674](289694 call iteratorIndex _iterator[289675]))
        }
        ForLoop[289676]
        {
          unknown bin[289701] "index var" "insert auto destroy"
          (490450 'end of statement')
          (289703 'move' bin[289701] _indexOfInterest[289674])
          (490451 'end of statement' bin[289701])
          {
            unknown call_tmp[741042] "maybe param" "maybe type" "temp"
            (741045 'move' call_tmp[741042](289562 call offsets[288326] bin[289701]))
            const bin_start[289563] "dead at end of block" "const" "insert auto destroy"
            (549071 'init var' bin_start[289563] call_tmp[741042])
            (289566 'end of statement')
            const bin_end[289589] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580291] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580292] "maybe param" "temp"
            unknown call_tmp[741047] "expr temp" "maybe param" "maybe type" "temp"
            (741050 'move' call_tmp[741047](289570 call + bin[289701] 1))
            unknown call_tmp[741052] "expr temp" "maybe param" "maybe type" "temp"
            (741055 'move' call_tmp[741052](289573 call <= call_tmp[741047] radix[288312]))
            (580297 'move' tmp[580292](580295 call _cond_test call_tmp[741052]))
            if tmp[580292]
            {
              unknown tmp[580299] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741057] "expr temp" "maybe param" "maybe type" "temp"
              (741060 'move' call_tmp[741057](289578 call + bin[289701] 1))
              unknown call_tmp[741062] "expr temp" "maybe param" "maybe type" "temp"
              (741065 'move' call_tmp[741062](289581 call offsets[288326] call_tmp[741057]))
              (580301 'move' tmp[580299](289583 call - call_tmp[741062] 1))
              (580306 'move' tmp[580291](580303 '_paramFoldLogical' tmp[580292] tmp[580299]))
            }
            {
              (580311 'move' tmp[580291](580308 '_paramFoldLogical' tmp[580292] end_n[288161]))
            }
            (549073 'init var' bin_end[289589] tmp[580291])
            (289592 'end of statement')
            unknown call_tmp[741067] "expr temp" "maybe param" "maybe type" "temp"
            (741070 'move' call_tmp[741067](289595 call + 1 bin_end[289589]))
            unknown call_tmp[741072] "maybe param" "maybe type" "temp"
            (741075 'move' call_tmp[741072](289598 call - call_tmp[741067] bin_start[289563]))
            const num[289600] "dead at end of block" "const" "insert auto destroy"
            (549075 'init var' num[289600] call_tmp[741072])
            (289603 'end of statement' offsets[288326] bin[289701] bin[289701] radix[288312] offsets[288326] bin[289701] bin_end[289589] bin_start[289563])
            unknown tmp[434540] "maybe param" "temp"
            (434551 'move' tmp[434540](289606 call <= num[289600] 1))
            unknown call_tmp[741077] "expr temp" "maybe param" "maybe type" "temp"
            (741080 'move' call_tmp[741077](434553 call _cond_invalid tmp[434540]))
            if call_tmp[741077]
            {
              (434556 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580318] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580319] "maybe param" "temp"
            unknown call_tmp[741082] "expr temp" "maybe param" "maybe type" "temp"
            (741085 'move' call_tmp[741082](434541 call isTrue tmp[434540]))
            (580324 'move' tmp[580319](580322 call _cond_test call_tmp[741082]))
            if tmp[580319]
            {
              (580329 'move' tmp[580318](580326 '_paramFoldLogical' tmp[580319] 1))
            }
            {
              unknown tmp[580331] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741087] "expr temp" "maybe param" "maybe type" "temp"
              (741090 'move' call_tmp[741087](289610 call >= startbit[288173] endbit[288177]))
              (580333 'move' tmp[580331](434545 call isTrue call_tmp[741087]))
              (580338 'move' tmp[580318](580335 '_paramFoldLogical' tmp[580319] tmp[580331]))
            }
            unknown call_tmp[741092] "expr temp" "maybe param" "maybe type" "temp"
            (741095 'move' call_tmp[741092](289669 call _cond_test tmp[580318]))
            if call_tmp[741092]
            {
            }
            {
              unknown tmp[434519] "maybe param" "temp"
              unknown call_tmp[741099] "expr temp" "maybe param" "maybe type" "temp"
              (741102 'move' call_tmp[741099](289619 call minForTask _mt[243] settings[288180]))
              (434530 'move' tmp[434519](289622 call < num[289600] call_tmp[741099]))
              unknown call_tmp[741104] "expr temp" "maybe param" "maybe type" "temp"
              (741107 'move' call_tmp[741104](434532 call _cond_invalid tmp[434519]))
              if call_tmp[741104]
              {
                (434535 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580345] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580346] "maybe param" "temp"
              unknown call_tmp[741109] "expr temp" "maybe param" "maybe type" "temp"
              (741112 'move' call_tmp[741109](434520 call isTrue tmp[434519]))
              (580351 'move' tmp[580346](580349 call _cond_test call_tmp[741109]))
              if tmp[580346]
              {
                (580356 'move' tmp[580345](580353 '_paramFoldLogical' tmp[580346] 1))
              }
              {
                unknown tmp[580358] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[741116] "expr temp" "maybe param" "maybe type" "temp"
                (741119 'move' call_tmp[741116](289628 call maxTasks _mt[243] settings[288180]))
                unknown call_tmp[741121] "expr temp" "maybe param" "maybe type" "temp"
                (741124 'move' call_tmp[741121](289631 call >= runningNow[289547] call_tmp[741116]))
                (580360 'move' tmp[580358](434524 call isTrue call_tmp[741121]))
                (580365 'move' tmp[580345](580362 '_paramFoldLogical' tmp[580346] tmp[580358]))
              }
              unknown call_tmp[741126] "expr temp" "maybe param" "maybe type" "temp"
              (741129 'move' call_tmp[741126](289665 call _cond_test tmp[580345]))
              if call_tmp[741126]
              {
                (289644 call msbRadixSort bin_start[289563] bin_end[289589] A[288167] criterion[288170] subbits[289513] endbit[288177] settings[288180])
                (490463 'end of statement' bin_start[289563] bin_end[289589] subbits[289513])
              }
              {
                unknown call_tmp[741131] "expr temp" "maybe param" "maybe type" "temp"
                (741134 'move' call_tmp[741131](289650 call bigsubs[289537] nbigsubs[289519]))
                unknown call_tmp[741136] "expr temp" "maybe param" "maybe type" "temp"
                (741139 'move' call_tmp[741136](289654 call _build_tuple bin_start[289563] bin_end[289589]))
                (289656 call = call_tmp[741131] call_tmp[741136])
                (490467 'end of statement' bigsubs[289537] nbigsubs[289519] bin_start[289563] bin_end[289589])
                (289662 call += nbigsubs[289519] 1)
                (490472 'end of statement' nbigsubs[289519])
              }
            }
          }
          label _continueLabel[289679]
          _indexOfInterest[289674]
          _iterator[289675]
        }
        label _breakLabel[289680]
      }
      unknown call_tmp[741141] "expr temp" "maybe param" "maybe type" "temp"
      (741144 'move' call_tmp[741141](289725 call chpl_build_low_bounded_range 0))
      unknown call_tmp[741146] "expr temp" "maybe param" "maybe type" "temp"
      (741149 'move' call_tmp[741146](289728 call # call_tmp[741141] nbigsubs[289519]))
      Forall {
        induction variables:
          
          unknown bin[289746] "index var" "insert auto destroy"
          
          unknown chpl_idx_2[289748] "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy" "temp"
        iterated expressions:
          call_tmp[741146]
          bigsubs[289537]
        shadow variables:
        other variables
          forall body
        {
          (289753 call _check_tuple_var_decl chpl_idx_2[289748] 2)
          (490474 'end of statement')
          unknown bin_start[289759] "index var" "insert auto destroy"
          (490475 'end of statement')
          (289761 'move' bin_start[289759](289757 call chpl_idx_2[289748] 0))
          (490476 'end of statement' bin_start[289759])
          unknown bin_end[289766] "index var" "insert auto destroy"
          (490478 'end of statement')
          (289768 'move' bin_end[289766](289764 call chpl_idx_2[289748] 1))
          (490479 'end of statement' bin_end[289766])
          (289742 call msbRadixSort bin_start[289759] bin_end[289766] A[288167] criterion[288170] subbits[289513] endbit[288177] settings[288180])
          (490481 'end of statement' bin_start[289759] bin_end[289766] subbits[289513])
        }
      }
    }
    {
      {
        unknown _indexOfInterest[289855] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[289856] "expr temp" "temp"
        unknown call_tmp[741151] "expr temp" "maybe param" "maybe type" "temp"
        (741154 'move' call_tmp[741151](289870 call - radix[288312] 1))
        unknown call_tmp[741156] "expr temp" "maybe param" "maybe type" "temp"
        (741159 'move' call_tmp[741156](289873 call chpl_direct_range_iter 1 call_tmp[741151] 1))
        (289865 'move' _iterator[289856](289863 call _getIterator call_tmp[741156]))
        Defer
        {
          {
            (289889 call _freeIterator _iterator[289856])
          }
        }
        { scopeless type
          (289878 'move' _indexOfInterest[289855](289875 call iteratorIndex _iterator[289856]))
        }
        ForLoop[289857]
        {
          unknown bin[289882] "index var" "insert auto destroy"
          (490486 'end of statement')
          (289884 'move' bin[289882] _indexOfInterest[289855])
          (490487 'end of statement' bin[289882])
          {
            unknown call_tmp[741161] "maybe param" "maybe type" "temp"
            (741164 'move' call_tmp[741161](289783 call offsets[288326] bin[289882]))
            const bin_start[289784] "dead at end of block" "const" "insert auto destroy"
            (549077 'init var' bin_start[289784] call_tmp[741161])
            (289787 'end of statement')
            const bin_end[289810] "dead at end of block" "const" "insert auto destroy"
            unknown tmp[580372] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580373] "maybe param" "temp"
            unknown call_tmp[741166] "expr temp" "maybe param" "maybe type" "temp"
            (741169 'move' call_tmp[741166](289791 call + bin[289882] 1))
            unknown call_tmp[741171] "expr temp" "maybe param" "maybe type" "temp"
            (741174 'move' call_tmp[741171](289794 call <= call_tmp[741166] radix[288312]))
            (580378 'move' tmp[580373](580376 call _cond_test call_tmp[741171]))
            if tmp[580373]
            {
              unknown tmp[580380] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741176] "expr temp" "maybe param" "maybe type" "temp"
              (741179 'move' call_tmp[741176](289799 call + bin[289882] 1))
              unknown call_tmp[741181] "expr temp" "maybe param" "maybe type" "temp"
              (741184 'move' call_tmp[741181](289802 call offsets[288326] call_tmp[741176]))
              (580382 'move' tmp[580380](289804 call - call_tmp[741181] 1))
              (580387 'move' tmp[580372](580384 '_paramFoldLogical' tmp[580373] tmp[580380]))
            }
            {
              (580392 'move' tmp[580372](580389 '_paramFoldLogical' tmp[580373] end_n[288161]))
            }
            (549079 'init var' bin_end[289810] tmp[580372])
            (289813 'end of statement')
            unknown call_tmp[741186] "expr temp" "maybe param" "maybe type" "temp"
            (741189 'move' call_tmp[741186](289816 call + 1 bin_end[289810]))
            unknown call_tmp[741191] "maybe param" "maybe type" "temp"
            (741194 'move' call_tmp[741191](289819 call - call_tmp[741186] bin_start[289784]))
            const num[289821] "dead at end of block" "const" "insert auto destroy"
            (549081 'init var' num[289821] call_tmp[741191])
            (289824 'end of statement' offsets[288326] bin[289882] bin[289882] radix[288312] offsets[288326] bin[289882] bin_end[289810] bin_start[289784])
            unknown tmp[434561] "maybe param" "temp"
            (434572 'move' tmp[434561](289827 call <= num[289821] 1))
            unknown call_tmp[741196] "expr temp" "maybe param" "maybe type" "temp"
            (741199 'move' call_tmp[741196](434574 call _cond_invalid tmp[434561]))
            if call_tmp[741196]
            {
              (434577 call compilerError "cannot promote short-circuiting || operator")
            }
            unknown tmp[580399] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
            unknown tmp[580400] "maybe param" "temp"
            unknown call_tmp[741201] "expr temp" "maybe param" "maybe type" "temp"
            (741204 'move' call_tmp[741201](434562 call isTrue tmp[434561]))
            (580405 'move' tmp[580400](580403 call _cond_test call_tmp[741201]))
            if tmp[580400]
            {
              (580410 'move' tmp[580399](580407 '_paramFoldLogical' tmp[580400] 1))
            }
            {
              unknown tmp[580412] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
              unknown call_tmp[741206] "expr temp" "maybe param" "maybe type" "temp"
              (741209 'move' call_tmp[741206](289831 call >= startbit[288173] endbit[288177]))
              (580414 'move' tmp[580412](434566 call isTrue call_tmp[741206]))
              (580419 'move' tmp[580399](580416 '_paramFoldLogical' tmp[580400] tmp[580412]))
            }
            unknown call_tmp[741211] "expr temp" "maybe param" "maybe type" "temp"
            (741214 'move' call_tmp[741211](289851 call _cond_test tmp[580399]))
            if call_tmp[741211]
            {
            }
            {
              unknown call_tmp[741216] "expr temp" "maybe param" "maybe type" "temp"
              (741219 'move' call_tmp[741216](289844 call + startbit[288173] radixbits[288301]))
              (289848 call msbRadixSort bin_start[289784] bin_end[289810] A[288167] criterion[288170] call_tmp[741216] endbit[288177] settings[288180])
              (490498 'end of statement' bin_start[289784] bin_end[289810] radixbits[288301])
            }
          }
          label _continueLabel[289860]
          _indexOfInterest[289855]
          _iterator[289856]
        }
        label _breakLabel[289861]
      }
    }
    unknown call_tmp[741223] "expr temp" "maybe param" "maybe type" "temp"
    (741226 'move' call_tmp[741223](289902 call CHECK_SORTS _mt[243] settings[288180]))
    unknown call_tmp[741228] "expr temp" "maybe param" "maybe type" "temp"
    (741231 'move' call_tmp[741228](289913 call _cond_test call_tmp[741223]))
    if call_tmp[741228]
    {
      (289911 call checkSorted start_n[288155] end_n[288161] A[288167] criterion[288170])
    }
    label _end_msbRadixSort[538182]
    (538184 return _void[55])
  }
  (355439 'used modules list'(353092 'use' ChapelStandard[20267])(288018 'import' Sort[267987].{defaultComparator, ShellSort})(288025 'use' RadixSortHelp[276095]))
}