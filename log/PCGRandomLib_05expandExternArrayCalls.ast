AST dump for PCGRandomLib after pass expandExternArrayCalls.
Module use list: 

{
  (352980 'use' ChapelStandard)
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_8[311685] "param" "private" 141
    (311688 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_16[311693] "param" "private" 12829
    (311696 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_32[311700] "param" "private" 747796405
    (311703 'end of statement')
  }
  { scopeless
    unknown PCG_DEFAULT_MULTIPLIER_64[311707] "param" "private" 6364136223846793005
    (311710 'end of statement')
  }
  function pcg_setseq_8_step_r[311720](ref arg state[311717] :
  (311716 call uint[115] 8), arg inc[311726] :
  (311725 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    (311737 call = state(311735 call +(311732 call * state PCG_DEFAULT_MULTIPLIER_8) inc))
  }
  function pcg_setseq_16_step_r[311752](ref arg state[311749] :
  (311748 call uint[115] 16), arg inc[311758] :
  (311757 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    (311769 call = state(311767 call +(311764 call * state PCG_DEFAULT_MULTIPLIER_16) inc))
  }
  function pcg_setseq_32_step_r[311784](ref arg state[311781] :
  (311780 call uint[115] 32), arg inc[311790] :
  (311789 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    (311801 call = state(311799 call +(311796 call * state PCG_DEFAULT_MULTIPLIER_32) inc))
  }
  function pcg_setseq_64_step_r[311816](ref arg state[311813] :
  (311812 call uint[115] 64), arg inc[311822] :
  (311821 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    (311833 call = state(311831 call +(311828 call * state PCG_DEFAULT_MULTIPLIER_64) inc))
  }
  function pcg_rotr_32[311848](arg value[311845] :
  (311844 call uint[115] 32), arg rot[311854] :
  (311853 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    function chpl_bitops_rotr_32[311870](arg x[311867] :
    (311866 call uint[115] 32), arg n[311876] :
    (311875 call uint[115] 32)) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (311882 call uint[115] 32)
    }
    { scopeless
      unknown ret[311892](311891 call chpl_bitops_rotr_32 value rot)
      (311895 'end of statement')
    }
    (311897 return ret)
  }
  { scopeless type
    (311860 call uint[115] 32)
  }
  function pcg_output_xsh_rr_64_32[311911](arg state[311908] :
  (311907 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const xorshifted[311937] "const"(311935 call _cast(311934 call uint[115] 32)(311929 call >>(311926 call ^(311923 call >> state 18) state) 27))(311920 call uint[115] 32)
      (311940 'end of statement')
    }
    { scopeless
      const rot[311956] "const"(311954 call _cast(311953 call uint[115] 32)(311948 call >> state 59))(311945 call uint[115] 32)
      (311959 'end of statement')
    }
    { scopeless
      const ret[311965] "const"(311964 call pcg_rotr_32 xorshifted rot)
      (311968 'end of statement')
    }
    (311970 return ret)
  }
  { scopeless type
    (311916 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_8_8[311984](arg state[311981] :
  (311980 call uint[115] 8)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312012] "const"(312010 call *(312005 call ^(312002 call >> state(312000 call +(311997 call >> state 6) 2)) state) 217)(311993 call uint[115] 8)
      (312015 'end of statement')
    }
    (312024 return(312022 call ^(312019 call >> word 6) word))
  }
  { scopeless type
    (311989 call uint[115] 8)
  }
  function pcg_output_rxs_m_xs_16_16[312038](arg state[312035] :
  (312034 call uint[115] 16)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312066] "const"(312064 call *(312059 call ^(312056 call >> state(312054 call +(312051 call >> state 13) 3)) state) 62169)(312047 call uint[115] 16)
      (312069 'end of statement')
    }
    (312078 return(312076 call ^(312073 call >> word 11) word))
  }
  { scopeless type
    (312043 call uint[115] 16)
  }
  function pcg_output_rxs_m_xs_32_32[312092](arg state[312089] :
  (312088 call uint[115] 32)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312120] "const"(312118 call *(312113 call ^(312110 call >> state(312108 call +(312105 call >> state 28) 4)) state) 277803737)(312101 call uint[115] 32)
      (312123 'end of statement')
    }
    (312132 return(312130 call ^(312127 call >> word 22) word))
  }
  { scopeless type
    (312097 call uint[115] 32)
  }
  function pcg_output_rxs_m_xs_64_64[312146](arg state[312143] :
  (312142 call uint[115] 64)) : _unknown[51] "inline" "private"
  {
    { scopeless
      const word[312174] "const"(312172 call *(312167 call ^(312164 call >> state(312162 call +(312159 call >> state 59) 5)) state) 12605985483714917081)(312155 call uint[115] 64)
      (312177 'end of statement')
    }
    (312186 return(312184 call ^(312181 call >> word 43) word))
  }
  { scopeless type
    (312151 call uint[115] 64)
  }
  type pcg_setseq_64_xsh_rr_32_rng[312671] unknown state[312196](312195 call uint[115] 64) function pcg_setseq_64_xsh_rr_32_rng[312671].srandom[312209](arg _mt[312675]:_MT[238], arg this[312673]:pcg_setseq_64_xsh_rr_32_rng[312671], arg seed[312206] :
  (312205 call uint[115] 64), arg inc[312215] :
  (312214 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312223 call = state(312221 call + inc seed))
    (312231 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_xsh_rr_32_rng[312671].random[312244](arg _mt[312679]:_MT[238], arg this[312677]:pcg_setseq_64_xsh_rr_32_rng[312671], arg inc[312241] :
  (312240 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312255] "const" state(312253 call uint[115] 64)
      (312258 'end of statement')
    }
    (312264 call pcg_setseq_64_step_r state inc)
    (312270 return(312269 call pcg_output_xsh_rr_64_32 oldstate))
  }
  { scopeless type
    (312249 call uint[115] 32)
  } function pcg_setseq_64_xsh_rr_32_rng[312671].bounded_random[312284](arg _mt[312683]:_MT[238], arg this[312681]:pcg_setseq_64_xsh_rr_32_rng[312671], arg inc[312281] :
  (312280 call uint[115] 64), arg bound[312290] :
  (312289 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312312] "const"(312310 call _cast(312309 call uint[115] 32)(312304 call -(312302 call _cast(312301 call int[13] 32) bound)))(312296 call uint[115] 32)
      (312315 'end of statement')
    }
    { scopeless
      const threshold[312325] "const"(312323 call % negbound bound)(312320 call uint[115] 32)
      (312328 'end of statement')
    }
    { scopeless
      unknown tmprng[312330] pcg_setseq_64_xsh_rr_32_rng
      (312333 'end of statement')
    }
    { scopeless
      unknown tmpinc[312338](312337 call uint[115] 64)
      (312341 'end of statement')
    }
    { scopeless
      unknown r[312346](312345 call uint[115] 32)
      (312349 'end of statement')
    }
    {
      unknown tmp[312375] "temp"
      (312393 'move' tmp[312375](312391 call _cond_test 1))
      WhileDo[312380]
      {
        {
          (312356 call = r(312355 call random inc))
          if(312370 call _cond_test(312362 call >= r threshold))
          {
            { scopeless
              (312368 return(312366 call % r bound))
            }
          }
        }
        label _continueLabel[312378]
        (312386 'move' tmp[312375](312384 call _cond_test 1))
        tmp[312375]
      }
      label _breakLabel[312379]
    }
    (312397 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312671].bounded_random_vary_inc[312410](arg _mt[312687]:_MT[238], arg this[312685]:pcg_setseq_64_xsh_rr_32_rng[312671], arg inc[312407] :
  (312406 call uint[115] 64), arg bound[312416] :
  (312415 call uint[115] 32), arg seed[312423] :
  (312422 call uint[115] 64), arg skip[312430] :
  (312429 call uint[115] 64), arg next_inc[312437] :
  (312436 call uint[115] 64), arg inc_increment[312444] :
  (312443 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const negbound[312466] "const"(312464 call _cast(312463 call uint[115] 32)(312458 call -(312456 call _cast(312455 call int[13] 32) bound)))(312450 call uint[115] 32)
      (312469 'end of statement')
    }
    { scopeless
      const threshold[312479] "const"(312477 call % negbound bound)(312474 call uint[115] 32)
      (312482 'end of statement')
    }
    { scopeless
      unknown r[312487](312486 call uint[115] 32)
      (312490 'end of statement')
    }
    (312496 call = r(312495 call random inc))
    if(312509 call _cond_test(312501 call >= r threshold))
    {
      { scopeless
        (312507 return(312505 call % r bound))
      }
    }
    { scopeless
      unknown newinc[312518](312517 call uint[115] 64)
      (312521 'end of statement')
    }
    {
      unknown _indexOfInterest[312595] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[312596] "expr temp" "temp"
      (312605 'move' _iterator[312596](312603 call _getIterator(312527 call chpl_by(312524 call chpl_build_low_bounded_range next_inc) inc_increment)))
      Defer
      {
        {
          (312625 call _freeIterator _iterator[312596])
        }
      }
      { scopeless type
        (312614 'move' _indexOfInterest[312595](312611 call iteratorIndex _iterator[312596]))
      }
      ForLoop[312597]
      {
        unknown newinc[312618] "index var" "insert auto destroy"
        (312620 'move' newinc[312618] _indexOfInterest[312595])
        {
          { scopeless
            unknown tmprng[312530] pcg_setseq_64_xsh_rr_32_rng
            (312533 'end of statement')
          }
          { scopeless
            unknown tmpinc[312539](312538 call uint[115] 64)
            (312542 'end of statement')
          }
          (312548 call = tmpinc(312547 call pcg_getvalid_inc newinc))
          (312558 call(312552 call . tmprng c"srandom") seed tmpinc)
          (312567 call(312561 call . tmprng c"advance") tmpinc skip)
          (312577 call = r(312576 call(312571 call . tmprng c"random") tmpinc))
          if(312590 call _cond_test(312582 call >= r threshold))
          {
            { scopeless
              (312588 return(312586 call % r bound))
            }
          }
        }
        label _continueLabel[312600]
        _indexOfInterest[312595]
        _iterator[312596]
      }
      label _breakLabel[312601]
    }
    (312633 return 0)
  } function pcg_setseq_64_xsh_rr_32_rng[312671].advance[312646](arg _mt[312691]:_MT[238], arg this[312689]:pcg_setseq_64_xsh_rr_32_rng[312671], arg inc[312643] :
  (312642 call uint[115] 64), arg delta[312652] :
  (312651 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312664 call = state(312663 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_64_rxs_m_xs_64_rng[312812] unknown state[312699](312698 call uint[115] 64) function pcg_setseq_64_rxs_m_xs_64_rng[312812].srandom[312712](arg _mt[312816]:_MT[238], arg this[312814]:pcg_setseq_64_rxs_m_xs_64_rng[312812], arg seed[312709] :
  (312708 call uint[115] 64), arg inc[312718] :
  (312717 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312726 call = state(312724 call + inc seed))
    (312734 call pcg_setseq_64_step_r state inc)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312812].random[312747](arg _mt[312820]:_MT[238], arg this[312818]:pcg_setseq_64_rxs_m_xs_64_rng[312812], arg inc[312744] :
  (312743 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312758] "const" state(312756 call uint[115] 64)
      (312761 'end of statement')
    }
    (312767 call pcg_setseq_64_step_r state inc)
    (312773 return(312772 call pcg_output_rxs_m_xs_64_64 oldstate))
  }
  { scopeless type
    (312752 call uint[115] 64)
  } function pcg_setseq_64_rxs_m_xs_64_rng[312812].advance[312787](arg _mt[312824]:_MT[238], arg this[312822]:pcg_setseq_64_rxs_m_xs_64_rng[312812], arg inc[312784] :
  (312783 call uint[115] 64), arg delta[312793] :
  (312792 call uint[115] 64)) : _unknown[51] "inline" "method" "primary method"
  {
    (312805 call = state(312804 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
  }
  type pcg_setseq_32_rxs_m_xs_32_rng[312945] unknown state[312832](312831 call uint[115] 32) function pcg_setseq_32_rxs_m_xs_32_rng[312945].srandom[312845](arg _mt[312949]:_MT[238], arg this[312947]:pcg_setseq_32_rxs_m_xs_32_rng[312945], arg seed[312842] :
  (312841 call uint[115] 32), arg inc[312851] :
  (312850 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (312859 call = state(312857 call + inc seed))
    (312867 call pcg_setseq_32_step_r state inc)
  } function pcg_setseq_32_rxs_m_xs_32_rng[312945].random[312880](arg _mt[312953]:_MT[238], arg this[312951]:pcg_setseq_32_rxs_m_xs_32_rng[312945], arg inc[312877] :
  (312876 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[312891] "const" state(312889 call uint[115] 32)
      (312894 'end of statement')
    }
    (312900 call pcg_setseq_32_step_r state inc)
    (312906 return(312905 call pcg_output_rxs_m_xs_32_32 oldstate))
  }
  { scopeless type
    (312885 call uint[115] 32)
  } function pcg_setseq_32_rxs_m_xs_32_rng[312945].advance[312920](arg _mt[312957]:_MT[238], arg this[312955]:pcg_setseq_32_rxs_m_xs_32_rng[312945], arg inc[312917] :
  (312916 call uint[115] 32), arg delta[312926] :
  (312925 call uint[115] 32)) : _unknown[51] "inline" "method" "primary method"
  {
    (312938 call = state(312937 call pcg_advance_lcg 32 state delta PCG_DEFAULT_MULTIPLIER_32 inc))
  }
  type pcg_setseq_16_rxs_m_xs_16_rng[313078] unknown state[312965](312964 call uint[115] 16) function pcg_setseq_16_rxs_m_xs_16_rng[313078].srandom[312978](arg _mt[313082]:_MT[238], arg this[313080]:pcg_setseq_16_rxs_m_xs_16_rng[313078], arg seed[312975] :
  (312974 call uint[115] 16), arg inc[312984] :
  (312983 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (312992 call = state(312990 call + inc seed))
    (313000 call pcg_setseq_16_step_r state inc)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313078].random[313013](arg _mt[313086]:_MT[238], arg this[313084]:pcg_setseq_16_rxs_m_xs_16_rng[313078], arg inc[313010] :
  (313009 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313024] "const" state(313022 call uint[115] 16)
      (313027 'end of statement')
    }
    (313033 call pcg_setseq_16_step_r state inc)
    (313039 return(313038 call pcg_output_rxs_m_xs_16_16 oldstate))
  }
  { scopeless type
    (313018 call uint[115] 16)
  } function pcg_setseq_16_rxs_m_xs_16_rng[313078].advance[313053](arg _mt[313090]:_MT[238], arg this[313088]:pcg_setseq_16_rxs_m_xs_16_rng[313078], arg inc[313050] :
  (313049 call uint[115] 16), arg delta[313059] :
  (313058 call uint[115] 16)) : _unknown[51] "inline" "method" "primary method"
  {
    (313071 call = state(313070 call pcg_advance_lcg 16 state delta PCG_DEFAULT_MULTIPLIER_16 inc))
  }
  type pcg_setseq_8_rxs_m_xs_8_rng[313211] unknown state[313098](313097 call uint[115] 8) function pcg_setseq_8_rxs_m_xs_8_rng[313211].srandom[313111](arg _mt[313215]:_MT[238], arg this[313213]:pcg_setseq_8_rxs_m_xs_8_rng[313211], arg seed[313108] :
  (313107 call uint[115] 8), arg inc[313117] :
  (313116 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313125 call = state(313123 call + inc seed))
    (313133 call pcg_setseq_8_step_r state inc)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313211].random[313146](arg _mt[313219]:_MT[238], arg this[313217]:pcg_setseq_8_rxs_m_xs_8_rng[313211], arg inc[313143] :
  (313142 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    { scopeless
      const oldstate[313157] "const" state(313155 call uint[115] 8)
      (313160 'end of statement')
    }
    (313166 call pcg_setseq_8_step_r state inc)
    (313172 return(313171 call pcg_output_rxs_m_xs_8_8 oldstate))
  }
  { scopeless type
    (313151 call uint[115] 8)
  } function pcg_setseq_8_rxs_m_xs_8_rng[313211].advance[313186](arg _mt[313223]:_MT[238], arg this[313221]:pcg_setseq_8_rxs_m_xs_8_rng[313211], arg inc[313183] :
  (313182 call uint[115] 8), arg delta[313192] :
  (313191 call uint[115] 8)) : _unknown[51] "inline" "method" "primary method"
  {
    (313204 call = state(313203 call pcg_advance_lcg 8 state delta PCG_DEFAULT_MULTIPLIER_8 inc))
  }
  function uint_with_bits[313230](param arg nbits[313228]:_any[178](?)) type : _unknown[51] "private"
  {
    if(313280 call _cond_test(313234 call <= nbits 8))
    {
      { scopeless
        (313240 return(313239 call uint[115] 8))
      }
    }
    {
      { scopeless
        if(313274 call _cond_test(313244 call <= nbits 16))
        {
          { scopeless
            (313250 return(313249 call uint[115] 16))
          }
        }
        {
          { scopeless
            if(313268 call _cond_test(313254 call <= nbits 32))
            {
              { scopeless
                (313260 return(313259 call uint[115] 32))
              }
            }
            {
              { scopeless
                (313266 return(313265 call uint[115] 64))
              }
            }
          }
        }
      }
    }
  }
  function normalize[313295](arg nbits[313292] :
  int[13], arg x[313298] :
  uint[115]) : _unknown[51] "inline" "private"
  {
    { scopeless
      unknown oldx[313302] x
      (313305 'end of statement')
    }
    { scopeless
      unknown shiftamt[313311](313309 call - 64 nbits)
      (313314 'end of statement')
    }
    (313317 call <<= oldx shiftamt)
    (313324 return(313322 call >> oldx shiftamt))
  }
  function pcg_output_rxs_m_xs_N_mine[313334](arg nbits[313331] :
  int[13], arg state_in[313336]:_any[178](?)) : _unknown[51] "private"
  {
    if(313345 call _cond_test(313340 call < nbits 8))
    {
      { scopeless
        (313343 return state_in)
      }
    }
    if(313367 call _cond_test(313353 call == nbits 8))
    {
      { scopeless
        (313365 return(313364 call pcg_output_rxs_m_xs_8_8(313361 call _cast(313360 call uint[115] 8) state_in)))
      }
    }
    if(313388 call _cond_test(313374 call == nbits 16))
    {
      { scopeless
        (313386 return(313385 call pcg_output_rxs_m_xs_16_16(313382 call _cast(313381 call uint[115] 16) state_in)))
      }
    }
    if(313409 call _cond_test(313395 call == nbits 32))
    {
      { scopeless
        (313407 return(313406 call pcg_output_rxs_m_xs_32_32(313403 call _cast(313402 call uint[115] 32) state_in)))
      }
    }
    if(313430 call _cond_test(313416 call == nbits 64))
    {
      { scopeless
        (313428 return(313427 call pcg_output_rxs_m_xs_64_64(313424 call _cast(313423 call uint[115] 64) state_in)))
      }
    }
    {
      { scopeless
        unknown shiftamt[313439](313437 call - nbits 4)
        (313442 'end of statement')
      }
      { scopeless
        unknown state[313448](313446 call _cast uint[115] state_in)
        (313451 'end of statement')
      }
      { scopeless
        unknown word[313469](313467 call *(313464 call ^(313461 call >> state(313459 call +(313456 call >> state shiftamt) 2)) state) 217) uint[115]
        (313472 'end of statement')
      }
      (313479 call = word(313478 call normalize nbits word))
      (313489 return(313487 call ^(313484 call >> word shiftamt) word))
    }
  }
  type pcg_setseq_N_rxs_m_xs_N_rng[314073](?) const N[313494] "const" unknown state[313499] uint[115] function pcg_setseq_N_rxs_m_xs_N_rng[314073](?).mask_state[313505](arg _mt[314077]:_MT[238], arg this[314075]:pcg_setseq_N_rxs_m_xs_N_rng[314073](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    (313513 call = state(313512 call normalize N state))
  } function pcg_setseq_N_rxs_m_xs_N_rng[314073](?).srandom[313525](arg _mt[314081]:_MT[238], arg this[314079]:pcg_setseq_N_rxs_m_xs_N_rng[314073](?), arg seed[313522] :
  uint[115], arg inc[313528] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    (313536 call = state(313534 call + inc seed))
    if(313664 call _cond_test(313542 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313551](313549 call _cast(313548 call uint[115] 8) state)
        (313554 'end of statement')
      }
      (313566 call pcg_setseq_8_step_r tmpstate(313564 call _cast(313563 call uint[115] 8) inc))
      (313570 call = state tmpstate)
    }
    {
      { scopeless
        if(313659 call _cond_test(313575 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313584](313582 call _cast(313581 call uint[115] 16) state)
            (313587 'end of statement')
          }
          (313599 call pcg_setseq_16_step_r tmpstate(313597 call _cast(313596 call uint[115] 16) inc))
          (313603 call = state tmpstate)
        }
        {
          { scopeless
            if(313654 call _cond_test(313608 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313617](313615 call _cast(313614 call uint[115] 32) state)
                (313620 'end of statement')
              }
              (313632 call pcg_setseq_32_step_r tmpstate(313630 call _cast(313629 call uint[115] 32) inc))
              (313636 call = state tmpstate)
            }
            {
              { scopeless
                if(313650 call _cond_test(313641 call <= N 64))
                {
                  (313647 call pcg_setseq_64_step_r state inc)
                }
              }
            }
          }
        }
      }
    }
    (313671 call mask_state)
  } function pcg_setseq_N_rxs_m_xs_N_rng[314073](?).random[313681](arg _mt[314085]:_MT[238], arg this[314083]:pcg_setseq_N_rxs_m_xs_N_rng[314073](?), arg inc[313678] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(313888 call _cond_test(313686 call <= N 8))
    {
      { scopeless
        unknown tmpstate[313695](313693 call _cast(313692 call uint[115] 8) state)
        (313698 'end of statement')
      }
      { scopeless
        unknown oldstate[313701] tmpstate
        (313704 'end of statement')
      }
      (313715 call pcg_setseq_8_step_r tmpstate(313713 call _cast(313712 call uint[115] 8) inc))
      (313719 call = state tmpstate)
      (313724 call mask_state)
      (313735 return(313734 call normalize N(313733 call pcg_output_rxs_m_xs_N_mine N oldstate)))
    }
    {
      { scopeless
        if(313883 call _cond_test(313739 call <= N 16))
        {
          { scopeless
            unknown tmpstate[313748](313746 call _cast(313745 call uint[115] 16) state)
            (313751 'end of statement')
          }
          { scopeless
            unknown oldstate[313754] tmpstate
            (313757 'end of statement')
          }
          (313768 call pcg_setseq_16_step_r tmpstate(313766 call _cast(313765 call uint[115] 16) inc))
          (313772 call = state tmpstate)
          (313777 call mask_state)
          (313788 return(313787 call normalize N(313786 call pcg_output_rxs_m_xs_N_mine N oldstate)))
        }
        {
          { scopeless
            if(313878 call _cond_test(313792 call <= N 32))
            {
              { scopeless
                unknown tmpstate[313801](313799 call _cast(313798 call uint[115] 32) state)
                (313804 'end of statement')
              }
              { scopeless
                unknown oldstate[313807] tmpstate
                (313810 'end of statement')
              }
              (313821 call pcg_setseq_32_step_r tmpstate(313819 call _cast(313818 call uint[115] 32) inc))
              (313825 call = state tmpstate)
              (313830 call mask_state)
              (313841 return(313840 call normalize N(313839 call pcg_output_rxs_m_xs_N_mine N oldstate)))
            }
            {
              { scopeless
                if(313874 call _cond_test(313845 call <= N 64))
                {
                  { scopeless
                    unknown oldstate[313848] state
                    (313851 'end of statement')
                  }
                  (313857 call pcg_setseq_64_step_r state inc)
                  (313861 call mask_state)
                  (313872 return(313871 call normalize N(313870 call pcg_output_rxs_m_xs_N_mine N oldstate)))
                }
              }
            }
          }
        }
      }
    }
    (313895 return 0)
  }
  { scopeless type
    uint[115]
  } function pcg_setseq_N_rxs_m_xs_N_rng[314073](?).advance[313906](arg _mt[314089]:_MT[238], arg this[314087]:pcg_setseq_N_rxs_m_xs_N_rng[314073](?), arg inc[313903] :
  uint[115], arg delta[313909] :
  uint[115]) : _unknown[51] "inline" "method" "primary method"
  {
    if(314064 call _cond_test(313914 call <= N 8))
    {
      (313943 call = state(313942 call pcg_advance_lcg 8(313925 call _cast(313924 call uint[115] 8) state)(313932 call _cast(313931 call uint[115] 8) delta) PCG_DEFAULT_MULTIPLIER_8(313940 call _cast(313939 call uint[115] 8) inc)))
      (313949 call mask_state)
    }
    {
      { scopeless
        if(314059 call _cond_test(313953 call <= N 16))
        {
          (313982 call = state(313981 call pcg_advance_lcg 16(313964 call _cast(313963 call uint[115] 16) state)(313971 call _cast(313970 call uint[115] 16) delta) PCG_DEFAULT_MULTIPLIER_16(313979 call _cast(313978 call uint[115] 16) inc)))
          (313988 call mask_state)
        }
        {
          { scopeless
            if(314054 call _cond_test(313992 call <= N 32))
            {
              (314021 call = state(314020 call pcg_advance_lcg 32(314003 call _cast(314002 call uint[115] 32) state)(314010 call _cast(314009 call uint[115] 32) delta) PCG_DEFAULT_MULTIPLIER_32(314018 call _cast(314017 call uint[115] 32) inc)))
              (314027 call mask_state)
            }
            {
              { scopeless
                if(314050 call _cond_test(314031 call <= N 64))
                {
                  (314042 call = state(314041 call pcg_advance_lcg 64 state delta PCG_DEFAULT_MULTIPLIER_64 inc))
                  (314048 call mask_state)
                }
              }
            }
          }
        }
      }
    }
  }
  function pcg_getvalid_inc[314101](arg initseq[314098] :
  (314097 call uint[115] 64)) : _unknown[51] "inline"
  {
    { scopeless
      (314114 return(314112 call |(314109 call << initseq 1) 1))
    }
  }
  { scopeless type
    (314106 call uint[115] 64)
  }
  function pcg_getvalid_inc[314129](param arg initseq[314126] :
  (314125 call uint[115] 64)) param : _unknown[51] "inline" "no doc"
  {
    { scopeless
      (314138 return(314136 call |(314133 call << initseq 1) 1))
    }
  }
  function pcg_advance_lcg[314147](param arg bits[314145]:_any[178](?), arg state[314153] :
  (314152 call uint_with_bits bits), in arg delta[314160] :
  (314159 call uint_with_bits bits), in arg cur_mult[314167] :
  (314166 call uint_with_bits bits), in arg cur_plus[314174] :
  (314173 call uint_with_bits bits)) : _unknown[51] "private"
  {
    { scopeless
      unknown acc_mult[314186] 1(314184 call uint_with_bits bits)
      (314189 'end of statement')
    }
    { scopeless
      unknown acc_plus[314196] 0(314194 call uint_with_bits bits)
      (314199 'end of statement')
    }
    {
      unknown tmp[314254] "temp"
      (314278 'move' tmp[314254](314273 call _cond_test(314275 call > delta 0)))
      WhileDo[314259]
      {
        {
          if(314228 call _cond_test(314209 call !=(314206 call & delta 1) 0))
          {
            (314213 call *= acc_mult cur_mult)
            (314225 call = acc_plus(314223 call +(314220 call * acc_plus cur_mult) cur_plus))
          }
          (314241 call = cur_plus(314239 call *(314236 call + cur_mult 1) cur_plus))
          (314246 call *= cur_mult cur_mult)
          (314251 call /= delta 2)
        }
        label _continueLabel[314257]
        (314268 'move' tmp[314254](314263 call _cond_test(314265 call > delta 0)))
        tmp[314254]
      }
      label _breakLabel[314258]
    }
    (314288 return(314286 call +(314283 call * acc_mult state) acc_plus))
  }
  { scopeless type
    (314180 call uint_with_bits bits)
  }
}