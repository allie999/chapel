AST dump for PrintModuleInitOrder after pass bulkCopyRecords.
Module use list: ChapelBase 

{
  function chpl__init_PrintModuleInitOrder[416016]() : void[4] "export" "insert line file info" "local args" "module init" "resolved"
  {
    const-val call_tmp[594765]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594768 'move' call_tmp[594765](540044 call chpl_config_has_value[334] c"printModuleInitOrder" c"Built-in"))
    const-val call_tmp[594770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594773 'move' call_tmp[594770](540047 call ![7494] call_tmp[594765]))
    if call_tmp[594770]
    {
      (540063 'move' tmp[540033] 0)
    }
    {
      val call_tmp[594775]:bool[10] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[594780]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (594783 'move' call_tmp[594780](540054 call chpl_config_get_value[350] c"printModuleInitOrder" c"Built-in"))
      (540059 'move' tmp[540033](540057 call _command_line_cast[1590815] call_tmp[594780]))
    }
    (540035 'move' printModuleInitOrder[20408] tmp[540033])
    (2197332 '_private_broadcast' printModuleInitOrder[20408])
    val call_tmp[594785]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (540065 'move' moduleInitLevel[20419] 2)
    const-val call_tmp[594830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594833 'move' call_tmp[594830] printModuleInitOrder[20408])
    if call_tmp[594830]
    {
      (20537 call initPrint[20496])
    }
    (501643 return _void[55])
  }
  const-val printModuleInitOrder[20408]:bool[10] "config" "const" "insert auto destroy"
  const-val moduleInitLevel[20419]:int(32)[95] "dead at end of block" "insert auto destroy" "print module init indent level"
  function printModuleInit[20429](const in arg s1[20426]:c_string[19], const in arg s2[20432]:c_string[19], const in arg len[20436]:int(64)[13]) : void[4] "print module init fn" "resolved" "no return value for void"
  {
    const-val call_tmp[594795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (594798 'move' call_tmp[594795] printModuleInitOrder[20408])
    if call_tmp[594795]
    {
      val call_tmp[594800]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[594805]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594808 'move' call_tmp[594805](20471 call _cast[964574] len[20436]))
      const-val call_tmp[594810]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594813 'move' call_tmp[594810](20473 call +[439730] moduleInitLevel[20419] call_tmp[594805]))
      val call_tmp[594815]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[594825]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (594828 'move' call_tmp[594825](20482 call +[439730] call_tmp[594810] 2))
      (20485 call printf[20445] s1[20426] call_tmp[594825] s2[20432])
    }
    (501637 return _void[55])
  }
  function initPrint[20496]() : void[4] "resolved" "no return value for void"
  {
    (20530 call printf[20504] c"Initializing Modules:\n")
    (501641 return _void[55])
  }
  val tmp[540033]:bool[10] "dead at end of block" "temp"
  function printf[20445](const in arg s1[20442]:c_string[19], const in arg len[20451]:int(32)[95], const in arg s2[20455]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (501635 return _void[55])
  }
  function printf[20504](const in arg s[20501]:c_string[19]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (501639 return _void[55])
  }
}