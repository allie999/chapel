AST dump for RangeChunk after pass buildDefaultFunctions.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416122]() : void[4] "insert line file info" "module init"
  {
    (537461 return _void[55])
  }
  type RemElems[266466] def Thru[266460]:RemElems[266466] def Pack[266462]:RemElems[266466] def Mod[266464]:RemElems[266466]
  function chunks[266489](arg r[266486]:range[64316](?), arg numChunks[266492]:integral[199](?), arg remPol[266497]:RemElems[266466] =
  Thru[266460]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537266] "RVV" "temp"
    {
      unknown _indexOfInterest[266561] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[266562] "expr temp" "temp"
      unknown call_tmp[734754] "expr temp" "maybe param" "maybe type" "temp"
      (734757 'move' call_tmp[734754](266517 call chunksOrder r[266486] numChunks[266492] remPol[266497]))
      (266571 'move' _iterator[266562](266569 call _getIterator call_tmp[734754]))
      Defer
      {
        {
          (266602 call _freeIterator _iterator[266562])
        }
      }
      { scopeless type
        (266577 'move' _indexOfInterest[266561](266574 call iteratorIndex _iterator[266562]))
      }
      ForLoop[266563]
      {
        (266582 call _check_tuple_var_decl _indexOfInterest[266561] 2)
        (489602 'end of statement')
        unknown startOrder[266588] "index var" "insert auto destroy"
        (489603 'end of statement')
        (266590 'move' startOrder[266588](266586 call _indexOfInterest[266561] 0))
        (489604 'end of statement' startOrder[266588])
        unknown endOrder[266595] "index var" "insert auto destroy"
        (489606 'end of statement')
        (266597 'move' endOrder[266595](266593 call _indexOfInterest[266561] 1))
        (489607 'end of statement' endOrder[266595])
        {
          unknown call_tmp[734761] "maybe param" "maybe type" "temp"
          (734764 'move' call_tmp[734761](266524 call(266519 call (partial) orderToIndex _mt[243] r[266486]) startOrder[266588]))
          const start[266525] "dead at end of block" "const" "insert auto destroy"
          (548562 'init var' start[266525] call_tmp[734761])
          (266528 'end of statement')
          unknown call_tmp[734768] "maybe param" "maybe type" "temp"
          (734771 'move' call_tmp[734768](266536 call(266531 call (partial) orderToIndex _mt[243] r[266486]) endOrder[266595]))
          const end[266537] "dead at end of block" "const" "insert auto destroy"
          (548564 'init var' end[266537] call_tmp[734768])
          (266540 'end of statement' startOrder[266588] endOrder[266595])
          unknown yret[537270] "YVV" "temp"
          unknown tmp[579105] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[579106] "maybe param" "temp"
          unknown call_tmp[734773] "expr temp" "maybe param" "maybe type" "temp"
          (734776 'move' call_tmp[734773](466445 'query' r[266486] 3))
          (579111 'move' tmp[579106](579109 call _cond_test call_tmp[734773]))
          if tmp[579106]
          {
            unknown tmp[579113] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[734778] "expr temp" "maybe param" "maybe type" "temp"
            (734781 'move' call_tmp[734778](266544 call chpl_build_bounded_range start[266525] end[266537]))
            unknown call_tmp[734785] "expr temp" "maybe param" "maybe type" "temp"
            (734788 'move' call_tmp[734785](266547 call stride _mt[243] r[266486]))
            (579115 'move' tmp[579113](266550 call chpl_by call_tmp[734778] call_tmp[734785]))
            (579120 'move' tmp[579105](579117 '_paramFoldLogical' tmp[579106] tmp[579113]))
          }
          {
            unknown tmp[579122] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            (579124 'move' tmp[579122](266554 call chpl_build_bounded_range start[266525] end[266537]))
            (579129 'move' tmp[579105](579126 '_paramFoldLogical' tmp[579106] tmp[579122]))
          }
          unknown call_tmp[734790] "expr temp" "maybe param" "maybe type" "temp"
          (734793 'move' call_tmp[734790](537274 'query' r[266486] 1))
          unknown call_tmp[734795] "expr temp" "maybe param" "maybe type" "temp"
          (734798 'move' call_tmp[734795](537278 'query' r[266486] 3))
          unknown call_tmp[734800] "expr temp" "maybe param" "maybe type" "temp"
          (734803 'move' call_tmp[734800](537273 call range[64316](?) call_tmp[734790] bounded[64205] call_tmp[734795]))
          (537282 'move' yret[537270](537281 'coerce' tmp[579105] call_tmp[734800]))
          (537284 yield yret[537270])
          (489611 'end of statement' start[266525] end[266537] start[266525] end[266537])
        }
        label _continueLabel[266566]
        _indexOfInterest[266561]
        _iterator[266562]
      }
      label _breakLabel[266567]
    }
    (537268 return ret[537266])
  }
  where {
    unknown call_tmp[734805] "expr temp" "maybe param" "maybe type" "temp"
    (734808 'move' call_tmp[734805](466432 'query' r[266486] 2))
    unknown call_tmp[734810] "expr temp" "maybe param" "maybe type" "temp"
    (734813 'move' call_tmp[734810](466436 call == bounded[64205] call_tmp[734805]))
    (466440 call & 1 call_tmp[734810])
  }
  { scopeless type
    unknown call_tmp[734815] "expr temp" "maybe param" "maybe type" "temp"
    (734818 'move' call_tmp[734815](466429 'query' r[266486] 1))
    unknown call_tmp[734820] "expr temp" "maybe param" "maybe type" "temp"
    (734823 'move' call_tmp[734820](466448 'query' r[266486] 3))
    (266506 call range[64316](?) call_tmp[734815] bounded[64205] call_tmp[734820])
  }
  function chunk[266626](arg r[266623]:range[64316](?), arg numChunks[266629]:integral[199](?), arg idx[266633]:integral[199](?), arg remPol[266638]:RemElems[266466] =
  Thru[266460]) : _unknown[51] "compiler added where"
  {
    unknown ret[537288] "RVV" "temp"
    unknown call_tmp[734825] "maybe param" "maybe type" "temp"
    (734828 'move' call_tmp[734825](266659 call chunkOrder r[266623] numChunks[266629] idx[266633] remPol[266638]))
    const tmp[266660] "dead at end of block" "const" "insert auto destroy" "temp"
    (548566 'init var' tmp[266660] call_tmp[734825])
    (266667 call _check_tuple_var_decl tmp[266660] 2)
    (489616 'end of statement')
    unknown call_tmp[734830] "maybe param" "maybe type" "temp"
    (734833 'move' call_tmp[734830](266661 call tmp[266660] 0))
    const startOrder[266648] "dead at end of block" "const" "insert auto destroy"
    (548568 'init var' startOrder[266648] call_tmp[734830])
    unknown call_tmp[734835] "maybe param" "maybe type" "temp"
    (734838 'move' call_tmp[734835](266664 call tmp[266660] 1))
    const endOrder[266650] "dead at end of block" "const" "insert auto destroy"
    (548570 'init var' endOrder[266650] call_tmp[734835])
    (266672 'end of statement')
    unknown call_tmp[734842] "maybe param" "maybe type" "temp"
    (734845 'move' call_tmp[734842](266680 call(266675 call (partial) orderToIndex _mt[243] r[266623]) startOrder[266648]))
    const start[266681] "dead at end of block" "const" "insert auto destroy"
    (548572 'init var' start[266681] call_tmp[734842])
    (266684 'end of statement')
    unknown call_tmp[734849] "maybe param" "maybe type" "temp"
    (734852 'move' call_tmp[734849](266691 call(266686 call (partial) orderToIndex _mt[243] r[266623]) endOrder[266650]))
    const end[266692] "dead at end of block" "const" "insert auto destroy"
    (548574 'init var' end[266692] call_tmp[734849])
    (266695 'end of statement' startOrder[266648] endOrder[266650])
    unknown tmp[579136] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579137] "maybe param" "temp"
    unknown call_tmp[734854] "expr temp" "maybe param" "maybe type" "temp"
    (734857 'move' call_tmp[734854](466474 'query' r[266623] 3))
    (579142 'move' tmp[579137](579140 call _cond_test call_tmp[734854]))
    if tmp[579137]
    {
      unknown tmp[579144] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[734859] "expr temp" "maybe param" "maybe type" "temp"
      (734862 'move' call_tmp[734859](266699 call chpl_build_bounded_range start[266681] end[266692]))
      unknown call_tmp[734866] "expr temp" "maybe param" "maybe type" "temp"
      (734869 'move' call_tmp[734866](266702 call stride _mt[243] r[266623]))
      (579146 'move' tmp[579144](266705 call chpl_by call_tmp[734859] call_tmp[734866]))
      (579151 'move' tmp[579136](579148 '_paramFoldLogical' tmp[579137] tmp[579144]))
    }
    {
      unknown tmp[579153] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579155 'move' tmp[579153](266709 call chpl_build_bounded_range start[266681] end[266692]))
      (579160 'move' tmp[579136](579157 '_paramFoldLogical' tmp[579137] tmp[579153]))
    }
    unknown call_tmp[734871] "expr temp" "maybe param" "maybe type" "temp"
    (734874 'move' call_tmp[734871](537294 'query' r[266623] 1))
    unknown call_tmp[734876] "expr temp" "maybe param" "maybe type" "temp"
    (734879 'move' call_tmp[734876](537298 'query' r[266623] 3))
    unknown call_tmp[734881] "expr temp" "maybe param" "maybe type" "temp"
    (734884 'move' call_tmp[734881](537293 call range[64316](?) call_tmp[734871] bounded[64205] call_tmp[734876]))
    (537302 'move' ret[537288](537301 'coerce' tmp[579136] call_tmp[734881]))
    gotoReturn _end_chunk[537286] _end_chunk[537286]
    (489619 'end of statement' start[266681] end[266692] start[266681] end[266692])
    label _end_chunk[537286]
    (537290 return ret[537288])
  }
  where {
    unknown call_tmp[734886] "expr temp" "maybe param" "maybe type" "temp"
    (734889 'move' call_tmp[734886](466461 'query' r[266623] 2))
    unknown call_tmp[734891] "expr temp" "maybe param" "maybe type" "temp"
    (734894 'move' call_tmp[734891](466465 call == bounded[64205] call_tmp[734886]))
    (466469 call & 1 call_tmp[734891])
  }
  { scopeless type
    unknown call_tmp[734896] "expr temp" "maybe param" "maybe type" "temp"
    (734899 'move' call_tmp[734896](466458 'query' r[266623] 1))
    unknown call_tmp[734901] "expr temp" "maybe param" "maybe type" "temp"
    (734904 'move' call_tmp[734901](466477 'query' r[266623] 3))
    (266647 call range[64316](?) call_tmp[734896] bounded[64205] call_tmp[734901])
  }
  function blockCyclicChunks[266736](arg r[266733]:range[64316](?), arg blockSize[266739]:integral[199](?), arg tid[266743]:integral[199](?), arg nTasks[266747]:integral[199](?)) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537308] "RVV" "temp"
    unknown call_tmp[734906] "expr temp" "maybe param" "maybe type" "temp"
    (734909 'move' call_tmp[734906](266752 call >= tid[266743] nTasks[266747]))
    unknown call_tmp[734911] "expr temp" "maybe param" "maybe type" "temp"
    (734914 'move' call_tmp[734911](266794 call _cond_test call_tmp[734906]))
    if call_tmp[734911]
    {
      unknown call_tmp[734916] "expr temp" "maybe param" "maybe type" "temp"
      (734919 'move' call_tmp[734916](266789 call + "Parameter tid must be < nTasks " "because blocks are indexed from 0..nTasks-1"))
      (266792 call halt call_tmp[734916])
    }
    unknown call_tmp[734921] "expr temp" "maybe param" "maybe type" "temp"
    (734924 'move' call_tmp[734921](266802 call <= blockSize[266739] 0))
    unknown call_tmp[734926] "expr temp" "maybe param" "maybe type" "temp"
    (734929 'move' call_tmp[734926](266825 call _cond_test call_tmp[734921]))
    if call_tmp[734926]
    {
      (266823 call halt "blockSize must a positive number")
    }
    unknown call_tmp[734931] "expr temp" "maybe param" "maybe type" "temp"
    (734934 'move' call_tmp[734931](266832 call <= nTasks[266747] 0))
    unknown call_tmp[734936] "expr temp" "maybe param" "maybe type" "temp"
    (734939 'move' call_tmp[734936](266855 call _cond_test call_tmp[734931]))
    if call_tmp[734936]
    {
      (266853 call halt "nTasks must be a positive number")
    }
    unknown call_tmp[734943] "maybe param" "maybe type" "temp"
    (734946 'move' call_tmp[734943](266861 call stride _mt[243] r[266733]))
    unknown rangeStride[266864] "dead at end of block" "insert auto destroy"
    (548576 'init var' rangeStride[266864] call_tmp[734943])
    (266867 'end of statement')
    unknown call_tmp[734948] "maybe param" "maybe type" "temp"
    (734951 'move' call_tmp[734948](266870 call * blockSize[266739] rangeStride[266864]))
    unknown blockStride[266872] "dead at end of block" "insert auto destroy"
    (548578 'init var' blockStride[266872] call_tmp[734948])
    (266875 'end of statement')
    unknown call_tmp[734955] "maybe param" "maybe type" "temp"
    (734958 'move' call_tmp[734955](266877 call low _mt[243] r[266733]))
    unknown low[266880] "dead at end of block" "insert auto destroy"
    (548580 'init var' low[266880] call_tmp[734955])
    (266883 'end of statement')
    unknown call_tmp[734962] "maybe param" "maybe type" "temp"
    (734965 'move' call_tmp[734962](266885 call high _mt[243] r[266733]))
    unknown high[266888] "dead at end of block" "insert auto destroy"
    (548582 'init var' high[266888] call_tmp[734962])
    (266891 'end of statement')
    unknown firstBlockStart[266913] "dead at end of block" "insert auto destroy"
    unknown tmp[579167] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579168] "maybe param" "temp"
    unknown call_tmp[734967] "expr temp" "maybe param" "maybe type" "temp"
    (734970 'move' call_tmp[734967](266894 call > rangeStride[266864] 0))
    (579173 'move' tmp[579168](579171 call _cond_test call_tmp[734967]))
    if tmp[579168]
    {
      unknown tmp[579175] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579177 'move' tmp[579175](266897 call low _mt[243] r[266733]))
      (579182 'move' tmp[579167](579179 '_paramFoldLogical' tmp[579168] tmp[579175]))
    }
    {
      unknown tmp[579184] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579186 'move' tmp[579184](266901 call high _mt[243] r[266733]))
      (579191 'move' tmp[579167](579188 '_paramFoldLogical' tmp[579168] tmp[579184]))
    }
    unknown call_tmp[734976] "expr temp" "maybe param" "maybe type" "temp"
    (734979 'move' call_tmp[734976](266909 call * blockStride[266872] tid[266743]))
    unknown call_tmp[734981] "maybe param" "maybe type" "temp"
    (734984 'move' call_tmp[734981](266911 call + tmp[579167] call_tmp[734976]))
    (548584 'init var' firstBlockStart[266913] call_tmp[734981])
    (266916 'end of statement')
    unknown tmp[433998] "maybe param" "temp"
    unknown call_tmp[734988] "expr temp" "maybe param" "maybe type" "temp"
    (734991 'move' call_tmp[734988](266919 call high _mt[243] r[266733]))
    (434009 'move' tmp[433998](266922 call > firstBlockStart[266913] call_tmp[734988]))
    unknown call_tmp[734993] "expr temp" "maybe param" "maybe type" "temp"
    (734996 'move' call_tmp[734993](434011 call _cond_invalid tmp[433998]))
    if call_tmp[734993]
    {
      (434014 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579198] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579199] "maybe param" "temp"
    unknown call_tmp[734998] "expr temp" "maybe param" "maybe type" "temp"
    (735001 'move' call_tmp[734998](433999 call isTrue tmp[433998]))
    (579204 'move' tmp[579199](579202 call _cond_test call_tmp[734998]))
    if tmp[579199]
    {
      (579209 'move' tmp[579198](579206 '_paramFoldLogical' tmp[579199] 1))
    }
    {
      unknown tmp[579211] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735005] "expr temp" "maybe param" "maybe type" "temp"
      (735008 'move' call_tmp[735005](266926 call low _mt[243] r[266733]))
      unknown call_tmp[735010] "expr temp" "maybe param" "maybe type" "temp"
      (735013 'move' call_tmp[735010](266929 call < firstBlockStart[266913] call_tmp[735005]))
      (579213 'move' tmp[579211](434003 call isTrue call_tmp[735010]))
      (579218 'move' tmp[579198](579215 '_paramFoldLogical' tmp[579199] tmp[579211]))
    }
    unknown call_tmp[735015] "expr temp" "maybe param" "maybe type" "temp"
    (735018 'move' call_tmp[735015](266935 call _cond_test tmp[579198]))
    if call_tmp[735015]
    {
      gotoReturn _end_blockCyclicChunks[537306] _end_blockCyclicChunks[537306]
    }
    unknown call_tmp[735020] "maybe param" "maybe type" "temp"
    (735023 'move' call_tmp[735020](266942 call * blockStride[266872] nTasks[266747]))
    unknown strideToNextBlock[266944] "dead at end of block" "insert auto destroy"
    (548586 'init var' strideToNextBlock[266944] call_tmp[735020])
    (266947 'end of statement' rangeStride[266864] rangeStride[266864] blockStride[266872] blockStride[266872])
    unknown call_tmp[735025] "expr temp" "maybe param" "maybe type" "temp"
    (735028 'move' call_tmp[735025](266950 call > rangeStride[266864] 0))
    unknown call_tmp[735030] "expr temp" "maybe param" "maybe type" "temp"
    (735033 'move' call_tmp[735030](267104 call _cond_test call_tmp[735025]))
    if call_tmp[735030]
    {
      {
        unknown _indexOfInterest[266985] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[266986] "expr temp" "temp"
        unknown call_tmp[735035] "expr temp" "maybe param" "maybe type" "temp"
        (735038 'move' call_tmp[735035](267004 call chpl_direct_range_iter firstBlockStart[266913] high[266888] strideToNextBlock[266944]))
        (266995 'move' _iterator[266986](266993 call _getIterator call_tmp[735035]))
        Defer
        {
          {
            (267020 call _freeIterator _iterator[266986])
          }
        }
        { scopeless type
          (267009 'move' _indexOfInterest[266985](267006 call iteratorIndex _iterator[266986]))
        }
        ForLoop[266987]
        {
          unknown blockStart[267013] "index var" "insert auto destroy"
          (489634 'end of statement')
          (267015 'move' blockStart[267013] _indexOfInterest[266985])
          (489635 'end of statement' blockStart[267013])
          {
            unknown call_tmp[735040] "expr temp" "maybe param" "maybe type" "temp"
            (735043 'move' call_tmp[735040](266965 call + blockStart[267013] blockStride[266872]))
            unknown call_tmp[735045] "expr temp" "maybe param" "maybe type" "temp"
            (735048 'move' call_tmp[735045](266968 call - call_tmp[735040] 1))
            unknown call_tmp[735050] "maybe param" "maybe type" "temp"
            (735053 'move' call_tmp[735050](266970 call min high[266888] call_tmp[735045]))
            unknown blockEnd[266971] "dead at end of block" "insert auto destroy"
            (548588 'init var' blockEnd[266971] call_tmp[735050])
            (266974 'end of statement' high[266888] blockStart[267013] blockStride[266872])
            unknown yret[537314] "YVV" "temp"
            unknown call_tmp[735055] "expr temp" "maybe param" "maybe type" "temp"
            (735058 'move' call_tmp[735055](266978 call chpl_build_bounded_range blockStart[267013] blockEnd[266971]))
            unknown call_tmp[735060] "expr temp" "maybe param" "maybe type" "temp"
            (735063 'move' call_tmp[735060](266981 call chpl_by call_tmp[735055] rangeStride[266864]))
            (537317 'move' yret[537314](537316 'deref' call_tmp[735060]))
            (537319 yield yret[537314])
            (489640 'end of statement' blockStart[267013] blockEnd[266971] rangeStride[266864])
          }
          label _continueLabel[266990]
          _indexOfInterest[266985]
          _iterator[266986]
        }
        label _breakLabel[266991]
      }
    }
    {
      {
        unknown _indexOfInterest[267061] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[267062] "expr temp" "temp"
        unknown call_tmp[735065] "expr temp" "maybe param" "maybe type" "temp"
        (735068 'move' call_tmp[735065](267080 call chpl_direct_range_iter low[266880] firstBlockStart[266913] strideToNextBlock[266944]))
        (267071 'move' _iterator[267062](267069 call _getIterator call_tmp[735065]))
        Defer
        {
          {
            (267096 call _freeIterator _iterator[267062])
          }
        }
        { scopeless type
          (267085 'move' _indexOfInterest[267061](267082 call iteratorIndex _iterator[267062]))
        }
        ForLoop[267063]
        {
          unknown blockEnd[267089] "index var" "insert auto destroy"
          (489645 'end of statement')
          (267091 'move' blockEnd[267089] _indexOfInterest[267061])
          (489646 'end of statement' blockEnd[267089])
          {
            unknown call_tmp[735070] "expr temp" "maybe param" "maybe type" "temp"
            (735073 'move' call_tmp[735070](267041 call + blockEnd[267089] blockStride[266872]))
            unknown call_tmp[735075] "expr temp" "maybe param" "maybe type" "temp"
            (735078 'move' call_tmp[735075](267044 call + call_tmp[735070] 1))
            unknown call_tmp[735080] "maybe param" "maybe type" "temp"
            (735083 'move' call_tmp[735080](267046 call max low[266880] call_tmp[735075]))
            unknown blockStart[267047] "dead at end of block" "insert auto destroy"
            (548590 'init var' blockStart[267047] call_tmp[735080])
            (267050 'end of statement' low[266880] blockEnd[267089] blockStride[266872])
            unknown yret[537321] "YVV" "temp"
            unknown call_tmp[735085] "expr temp" "maybe param" "maybe type" "temp"
            (735088 'move' call_tmp[735085](267054 call chpl_build_bounded_range blockStart[267047] blockEnd[267089]))
            unknown call_tmp[735090] "expr temp" "maybe param" "maybe type" "temp"
            (735093 'move' call_tmp[735090](267057 call chpl_by call_tmp[735085] rangeStride[266864]))
            (537324 'move' yret[537321](537323 'deref' call_tmp[735090]))
            (537326 yield yret[537321])
            (489651 'end of statement' blockStart[267047] blockEnd[267089] rangeStride[266864])
          }
          label _continueLabel[267066]
          _indexOfInterest[267061]
          _iterator[267062]
        }
        label _breakLabel[267067]
      }
    }
    label _end_blockCyclicChunks[537306]
    (537310 return ret[537308])
  }
  where {
    unknown call_tmp[735095] "expr temp" "maybe param" "maybe type" "temp"
    (735098 'move' call_tmp[735095](466486 'query' r[266733] c"boundedType"))
    unknown call_tmp[735100] "expr temp" "maybe param" "maybe type" "temp"
    (735103 'move' call_tmp[735100](466489 call == bounded[64205] call_tmp[735095]))
    (466493 call & 1 call_tmp[735100])
  }
  function chunksOrder[267122](arg r[267119]:range[64316](?), arg numChunks[267125]:integral[199](?), arg remPol[267130]:RemElems[266466] =
  Thru[266460]) : _unknown[51] "compiler added where" "iterator fn" "no return value for void"
  {
    unknown ret[537330] "RVV" "temp"
    unknown tmp[434019] "maybe param" "temp"
    unknown call_tmp[735107] "expr temp" "maybe param" "maybe type" "temp"
    (735110 'move' call_tmp[735107](267139 call size _mt[243] r[267119]))
    (434030 'move' tmp[434019](267143 call == call_tmp[735107] 0))
    unknown call_tmp[735112] "expr temp" "maybe param" "maybe type" "temp"
    (735115 'move' call_tmp[735112](434032 call _cond_invalid tmp[434019]))
    if call_tmp[735112]
    {
      (434035 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579225] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579226] "maybe param" "temp"
    unknown call_tmp[735117] "expr temp" "maybe param" "maybe type" "temp"
    (735120 'move' call_tmp[735117](434020 call isTrue tmp[434019]))
    (579231 'move' tmp[579226](579229 call _cond_test call_tmp[735117]))
    if tmp[579226]
    {
      (579236 'move' tmp[579225](579233 '_paramFoldLogical' tmp[579226] 1))
    }
    {
      unknown tmp[579238] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735122] "expr temp" "maybe param" "maybe type" "temp"
      (735125 'move' call_tmp[735122](267147 call <= numChunks[267125] 0))
      (579240 'move' tmp[579238](434024 call isTrue call_tmp[735122]))
      (579245 'move' tmp[579225](579242 '_paramFoldLogical' tmp[579226] tmp[579238]))
    }
    unknown call_tmp[735127] "expr temp" "maybe param" "maybe type" "temp"
    (735130 'move' call_tmp[735127](267153 call _cond_test tmp[579225]))
    if call_tmp[735127]
    {
      gotoReturn _end_chunksOrder[537328] _end_chunksOrder[537328]
    }
    unknown call_tmp[735134] "maybe param" "maybe type" "temp"
    (735137 'move' call_tmp[735134](267160 call size _mt[243] r[267119]))
    const nElems[267163] "dead at end of block" "const" "insert auto destroy"
    (548592 'init var' nElems[267163] call_tmp[735134])
    (267166 'end of statement')
    unknown call_tmp[735139] "expr temp" "maybe param" "maybe type" "temp"
    (735142 'move' call_tmp[735139](466510 'query' r[267119] 1))
    unknown call_tmp[735144] "expr temp" "maybe param" "maybe type" "temp"
    (735147 'move' call_tmp[735144](267171 call min numChunks[267125] nElems[267163]))
    unknown call_tmp[735149] "maybe param" "maybe type" "temp"
    (735152 'move' call_tmp[735149](267173 call _cast call_tmp[735139] call_tmp[735144]))
    unknown nChunks[267175] "dead at end of block" "insert auto destroy"
    (548594 'init var' nChunks[267175] call_tmp[735149])
    (267178 'end of statement')
    unknown chunkSize[267179] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735154] "expr temp" "maybe param" "maybe type" "temp"
    (735157 'move' call_tmp[735154](466513 'query' r[267119] 1))
    (548596 'default init var' chunkSize[267179] call_tmp[735154])
    unknown rem[267183] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735159] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735162 'move' call_tmp[735159](267187 'typeof' chunkSize[267179]))
    (548598 'default init var' rem[267183] call_tmp[735159])
    (267188 'end of statement' nElems[267163] chunkSize[267179])
    {
      unknown tmp[267255] "expr temp" "maybe param" "maybe type" "temp"
      (267257 'move' tmp[267255] remPol[267130])
      unknown call_tmp[735164] "expr temp" "maybe param" "maybe type" "temp"
      (735167 'move' call_tmp[735164](267259 call == tmp[267255] Pack[266462]))
      unknown call_tmp[735169] "expr temp" "maybe param" "maybe type" "temp"
      (735172 'move' call_tmp[735169](267262 call _cond_test call_tmp[735164]))
      if call_tmp[735169]
      {
        unknown call_tmp[735174] "expr temp" "maybe param" "maybe type" "temp"
        (735177 'move' call_tmp[735174](267196 call / nElems[267163] nChunks[267175]))
        (267198 call = chunkSize[267179] call_tmp[735174])
        (489659 'end of statement' chunkSize[267179] nElems[267163] nChunks[267175])
        unknown call_tmp[735179] "expr temp" "maybe param" "maybe type" "temp"
        (735182 'move' call_tmp[735179](267204 call * chunkSize[267179] nChunks[267175]))
        unknown call_tmp[735184] "expr temp" "maybe param" "maybe type" "temp"
        (735187 'move' call_tmp[735184](267207 call != call_tmp[735179] nElems[267163]))
        unknown call_tmp[735189] "expr temp" "maybe param" "maybe type" "temp"
        (735192 'move' call_tmp[735189](267224 call _cond_test call_tmp[735184]))
        if call_tmp[735189]
        {
          (267211 call += chunkSize[267179] 1)
          (489663 'end of statement' chunkSize[267179])
          unknown call_tmp[735194] "expr temp" "maybe param" "maybe type" "temp"
          (735197 'move' call_tmp[735194](267220 call divceil nElems[267163] chunkSize[267179]))
          (267221 call = nChunks[267175] call_tmp[735194])
          (489665 'end of statement' nChunks[267175] nElems[267163] chunkSize[267179])
        }
      }
      {
        unknown call_tmp[735199] "expr temp" "maybe param" "maybe type" "temp"
        (735202 'move' call_tmp[735199](267265 call == tmp[267255] Mod[266464]))
        unknown call_tmp[735204] "expr temp" "maybe param" "maybe type" "temp"
        (735207 'move' call_tmp[735204](267268 call _cond_test call_tmp[735199]))
        if call_tmp[735204]
        {
          unknown call_tmp[735209] "expr temp" "maybe param" "maybe type" "temp"
          (735212 'move' call_tmp[735209](267235 call / nElems[267163] nChunks[267175]))
          (267237 call = chunkSize[267179] call_tmp[735209])
          (489669 'end of statement' chunkSize[267179] nElems[267163] nChunks[267175])
          unknown call_tmp[735214] "expr temp" "maybe param" "maybe type" "temp"
          (735217 'move' call_tmp[735214](267245 call * chunkSize[267179] nChunks[267175]))
          unknown call_tmp[735219] "expr temp" "maybe param" "maybe type" "temp"
          (735222 'move' call_tmp[735219](267247 call - nElems[267163] call_tmp[735214]))
          (267249 call = rem[267183] call_tmp[735219])
          (489673 'end of statement' rem[267183] nElems[267163] chunkSize[267179] nChunks[267175])
        }
      }
    }
    {
      unknown _indexOfInterest[267391] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[267392] "expr temp" "temp"
      unknown call_tmp[735224] "expr temp" "maybe param" "maybe type" "temp"
      (735227 'move' call_tmp[735224](267408 call chpl_direct_counted_range_iter 0 nChunks[267175]))
      (267401 'move' _iterator[267392](267399 call _getIterator call_tmp[735224]))
      Defer
      {
        {
          (267424 call _freeIterator _iterator[267392])
        }
      }
      { scopeless type
        (267413 'move' _indexOfInterest[267391](267410 call iteratorIndex _iterator[267392]))
      }
      ForLoop[267393]
      {
        unknown i[267417] "index var" "insert auto destroy"
        (489679 'end of statement')
        (267419 'move' i[267417] _indexOfInterest[267391])
        (489680 'end of statement' i[267417])
        {
          unknown chunk[267284] "dead at end of block" "insert auto destroy"
          unknown call_tmp[735229] "expr temp" "maybe param" "maybe type" "temp"
          (735232 'move' call_tmp[735229](466516 'query' r[267119] 1))
          unknown call_tmp[735234] "expr temp" "maybe param" "maybe type" "temp"
          (735237 'move' call_tmp[735234](267282 call * 2 call_tmp[735229]))
          (548600 'default init var' chunk[267284] call_tmp[735234])
          (267287 'end of statement')
          {
            unknown tmp[267363] "expr temp" "maybe param" "maybe type" "temp"
            (267365 'move' tmp[267363] remPol[267130])
            unknown call_tmp[735239] "expr temp" "maybe param" "maybe type" "temp"
            (735242 'move' call_tmp[735239](267367 call == tmp[267363] Thru[266460]))
            unknown call_tmp[735244] "expr temp" "maybe param" "maybe type" "temp"
            (735247 'move' call_tmp[735244](267370 call _cond_test call_tmp[735239]))
            if call_tmp[735244]
            {
              unknown call_tmp[735249] "expr temp" "maybe param" "maybe type" "temp"
              (735252 'move' call_tmp[735249](267299 call chunkOrderThru nElems[267163] nChunks[267175] i[267417]))
              (267300 call = chunk[267284] call_tmp[735249])
              (489682 'end of statement' chunk[267284] nElems[267163] nChunks[267175] i[267417])
            }
            {
              unknown call_tmp[735254] "expr temp" "maybe param" "maybe type" "temp"
              (735257 'move' call_tmp[735254](267373 call == tmp[267363] Pack[266462]))
              unknown call_tmp[735259] "expr temp" "maybe param" "maybe type" "temp"
              (735262 'move' call_tmp[735259](267376 call _cond_test call_tmp[735254]))
              if call_tmp[735259]
              {
                unknown call_tmp[735264] "expr temp" "maybe param" "maybe type" "temp"
                (735267 'move' call_tmp[735264](267314 call chunkOrderPack chunkSize[267179] nElems[267163] i[267417]))
                (267315 call = chunk[267284] call_tmp[735264])
                (489687 'end of statement' chunk[267284] chunkSize[267179] nElems[267163] i[267417])
              }
              {
                unknown call_tmp[735269] "expr temp" "maybe param" "maybe type" "temp"
                (735272 'move' call_tmp[735269](267380 call == tmp[267363] Mod[266464]))
                unknown call_tmp[735274] "expr temp" "maybe param" "maybe type" "temp"
                (735277 'move' call_tmp[735274](267383 call _cond_test call_tmp[735269]))
                if call_tmp[735274]
                {
                  unknown call_tmp[735279] "expr temp" "maybe param" "maybe type" "temp"
                  (735282 'move' call_tmp[735279](267331 call chunkOrderMod chunkSize[267179] rem[267183] nElems[267163] nChunks[267175] i[267417]))
                  (267332 call = chunk[267284] call_tmp[735279])
                  (489692 'end of statement' chunk[267284] chunkSize[267179] rem[267183] nElems[267163] nChunks[267175] i[267417])
                }
                {
                  (267357 call halt "RangeChunk: unknown RemElems in chunksOrder")
                }
              }
            }
          }
          unknown yret[537336] "YVV" "temp"
          unknown call_tmp[735284] "expr temp" "maybe param" "maybe type" "temp"
          (735287 'move' call_tmp[735284](537341 'query' r[267119] 1))
          unknown call_tmp[735289] "expr temp" "maybe param" "maybe type" "temp"
          (735292 'move' call_tmp[735289](537339 call * 2 call_tmp[735284]))
          (537345 'move' yret[537336](537344 'coerce' chunk[267284] call_tmp[735289]))
          (537347 yield yret[537336])
          (489700 'end of statement' chunk[267284])
        }
        label _continueLabel[267396]
        _indexOfInterest[267391]
        _iterator[267392]
      }
      label _breakLabel[267397]
    }
    label _end_chunksOrder[537328]
    (537332 return ret[537330])
  }
  where {
    unknown call_tmp[735294] "expr temp" "maybe param" "maybe type" "temp"
    (735297 'move' call_tmp[735294](466522 'query' r[267119] 2))
    unknown call_tmp[735299] "expr temp" "maybe param" "maybe type" "temp"
    (735302 'move' call_tmp[735299](466526 call == bounded[64205] call_tmp[735294]))
    (466530 call & 1 call_tmp[735299])
  }
  { scopeless type
    unknown call_tmp[735304] "expr temp" "maybe param" "maybe type" "temp"
    (735307 'move' call_tmp[735304](466519 'query' r[267119] 1))
    (267136 call * 2 call_tmp[735304])
  }
  function chunkOrder[267446](arg r[267443]:range[64316](?), arg numChunks[267449]:integral[199](?), arg idx[267453]:integral[199](?), arg remPol[267458]:RemElems[266466] =
  Thru[266460]) : _unknown[51] "compiler added where"
  {
    unknown ret[537351] "RVV" "temp"
    unknown tmp[434040] "maybe param" "temp"
    unknown tmp[434061] "maybe param" "temp"
    unknown tmp[434082] "maybe param" "temp"
    unknown call_tmp[735311] "expr temp" "maybe param" "maybe type" "temp"
    (735314 'move' call_tmp[735311](267467 call size _mt[243] r[267443]))
    (434093 'move' tmp[434082](267471 call == call_tmp[735311] 0))
    unknown call_tmp[735316] "expr temp" "maybe param" "maybe type" "temp"
    (735319 'move' call_tmp[735316](434095 call _cond_invalid tmp[434082]))
    if call_tmp[735316]
    {
      (434098 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579252] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579253] "maybe param" "temp"
    unknown call_tmp[735321] "expr temp" "maybe param" "maybe type" "temp"
    (735324 'move' call_tmp[735321](434083 call isTrue tmp[434082]))
    (579258 'move' tmp[579253](579256 call _cond_test call_tmp[735321]))
    if tmp[579253]
    {
      (579263 'move' tmp[579252](579260 '_paramFoldLogical' tmp[579253] 1))
    }
    {
      unknown tmp[579265] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735326] "expr temp" "maybe param" "maybe type" "temp"
      (735329 'move' call_tmp[735326](267475 call <= numChunks[267449] 0))
      (579267 'move' tmp[579265](434087 call isTrue call_tmp[735326]))
      (579272 'move' tmp[579252](579269 '_paramFoldLogical' tmp[579253] tmp[579265]))
    }
    (434072 'move' tmp[434061] tmp[579252])
    unknown call_tmp[735331] "expr temp" "maybe param" "maybe type" "temp"
    (735334 'move' call_tmp[735331](434074 call _cond_invalid tmp[434061]))
    if call_tmp[735331]
    {
      (434077 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579279] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579280] "maybe param" "temp"
    unknown call_tmp[735336] "expr temp" "maybe param" "maybe type" "temp"
    (735339 'move' call_tmp[735336](434062 call isTrue tmp[434061]))
    (579285 'move' tmp[579280](579283 call _cond_test call_tmp[735336]))
    if tmp[579280]
    {
      (579290 'move' tmp[579279](579287 '_paramFoldLogical' tmp[579280] 1))
    }
    {
      unknown tmp[579292] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735341] "expr temp" "maybe param" "maybe type" "temp"
      (735344 'move' call_tmp[735341](267481 call < idx[267453] 0))
      (579294 'move' tmp[579292](434066 call isTrue call_tmp[735341]))
      (579299 'move' tmp[579279](579296 '_paramFoldLogical' tmp[579280] tmp[579292]))
    }
    (434051 'move' tmp[434040] tmp[579279])
    unknown call_tmp[735346] "expr temp" "maybe param" "maybe type" "temp"
    (735349 'move' call_tmp[735346](434053 call _cond_invalid tmp[434040]))
    if call_tmp[735346]
    {
      (434056 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[579306] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579307] "maybe param" "temp"
    unknown call_tmp[735351] "expr temp" "maybe param" "maybe type" "temp"
    (735354 'move' call_tmp[735351](434041 call isTrue tmp[434040]))
    (579312 'move' tmp[579307](579310 call _cond_test call_tmp[735351]))
    if tmp[579307]
    {
      (579317 'move' tmp[579306](579314 '_paramFoldLogical' tmp[579307] 1))
    }
    {
      unknown tmp[579319] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735356] "expr temp" "maybe param" "maybe type" "temp"
      (735359 'move' call_tmp[735356](267487 call >= idx[267453] numChunks[267449]))
      (579321 'move' tmp[579319](434045 call isTrue call_tmp[735356]))
      (579326 'move' tmp[579306](579323 '_paramFoldLogical' tmp[579307] tmp[579319]))
    }
    unknown call_tmp[735361] "expr temp" "maybe param" "maybe type" "temp"
    (735364 'move' call_tmp[735361](267504 call _cond_test tmp[579306]))
    if call_tmp[735361]
    {
      unknown call_tmp[735366] "expr temp" "maybe param" "maybe type" "temp"
      (735369 'move' call_tmp[735366](466542 'query' r[267443] 1))
      unknown call_tmp[735371] "expr temp" "maybe param" "maybe type" "temp"
      (735374 'move' call_tmp[735371](267493 call _cast call_tmp[735366] 1))
      unknown call_tmp[735376] "expr temp" "maybe param" "maybe type" "temp"
      (735379 'move' call_tmp[735376](466545 'query' r[267443] 1))
      unknown call_tmp[735381] "expr temp" "maybe param" "maybe type" "temp"
      (735384 'move' call_tmp[735381](267497 call _cast call_tmp[735376] 0))
      unknown call_tmp[735386] "expr temp" "maybe param" "maybe type" "temp"
      (735389 'move' call_tmp[735386](267500 call _build_tuple call_tmp[735371] call_tmp[735381]))
      unknown call_tmp[735391] "expr temp" "maybe param" "maybe type" "temp"
      (735394 'move' call_tmp[735391](537358 'query' r[267443] 1))
      unknown call_tmp[735396] "expr temp" "maybe param" "maybe type" "temp"
      (735399 'move' call_tmp[735396](537356 call * 2 call_tmp[735391]))
      (537362 'move' ret[537351](537361 'coerce' call_tmp[735386] call_tmp[735396]))
      gotoReturn _end_chunkOrder[537349] _end_chunkOrder[537349]
    }
    unknown call_tmp[735403] "maybe param" "maybe type" "temp"
    (735406 'move' call_tmp[735403](267511 call size _mt[243] r[267443]))
    const nElems[267514] "dead at end of block" "const" "insert auto destroy"
    (548602 'init var' nElems[267514] call_tmp[735403])
    (267517 'end of statement')
    unknown call_tmp[735408] "expr temp" "maybe param" "maybe type" "temp"
    (735411 'move' call_tmp[735408](466548 'query' r[267443] 1))
    unknown call_tmp[735413] "expr temp" "maybe param" "maybe type" "temp"
    (735416 'move' call_tmp[735413](267522 call min numChunks[267449] nElems[267514]))
    unknown call_tmp[735418] "maybe param" "maybe type" "temp"
    (735421 'move' call_tmp[735418](267524 call _cast call_tmp[735408] call_tmp[735413]))
    const nChunks[267526] "dead at end of block" "const" "insert auto destroy"
    (548604 'init var' nChunks[267526] call_tmp[735418])
    (267529 'end of statement')
    unknown call_tmp[735423] "expr temp" "maybe param" "maybe type" "temp"
    (735426 'move' call_tmp[735423](466551 'query' r[267443] 1))
    unknown call_tmp[735428] "maybe param" "maybe type" "temp"
    (735431 'move' call_tmp[735428](267532 call _cast call_tmp[735423] idx[267453]))
    const i[267534] "dead at end of block" "const" "insert auto destroy"
    (548606 'init var' i[267534] call_tmp[735428])
    (267537 'end of statement' nElems[267514])
    {
      unknown tmp[267650] "expr temp" "maybe param" "maybe type" "temp"
      (267652 'move' tmp[267650] remPol[267458])
      unknown call_tmp[735433] "expr temp" "maybe param" "maybe type" "temp"
      (735436 'move' call_tmp[735433](267654 call == tmp[267650] Thru[266460]))
      unknown call_tmp[735438] "expr temp" "maybe param" "maybe type" "temp"
      (735441 'move' call_tmp[735438](267657 call _cond_test call_tmp[735433]))
      if call_tmp[735438]
      {
        unknown call_tmp[735443] "expr temp" "maybe param" "maybe type" "temp"
        (735446 'move' call_tmp[735443](267547 call chunkOrderThru nElems[267514] nChunks[267526] i[267534]))
        unknown call_tmp[735448] "expr temp" "maybe param" "maybe type" "temp"
        (735451 'move' call_tmp[735448](537369 'query' r[267443] 1))
        unknown call_tmp[735453] "expr temp" "maybe param" "maybe type" "temp"
        (735456 'move' call_tmp[735453](537367 call * 2 call_tmp[735448]))
        (537373 'move' ret[537351](537372 'coerce' call_tmp[735443] call_tmp[735453]))
        gotoReturn _end_chunkOrder[537349] _end_chunkOrder[537349]
        (489707 'end of statement' nElems[267514] nChunks[267526] i[267534])
      }
      {
        unknown call_tmp[735458] "expr temp" "maybe param" "maybe type" "temp"
        (735461 'move' call_tmp[735458](267660 call == tmp[267650] Pack[266462]))
        unknown call_tmp[735463] "expr temp" "maybe param" "maybe type" "temp"
        (735466 'move' call_tmp[735463](267663 call _cond_test call_tmp[735458]))
        if call_tmp[735463]
        {
          unknown call_tmp[735468] "maybe param" "maybe type" "temp"
          (735471 'move' call_tmp[735468](267557 call / nElems[267514] nChunks[267526]))
          unknown chunkSize[267559] "dead at end of block" "insert auto destroy"
          (548608 'init var' chunkSize[267559] call_tmp[735468])
          (267562 'end of statement' nElems[267514] nChunks[267526])
          unknown call_tmp[735473] "expr temp" "maybe param" "maybe type" "temp"
          (735476 'move' call_tmp[735473](267566 call * chunkSize[267559] nChunks[267526]))
          unknown call_tmp[735478] "expr temp" "maybe param" "maybe type" "temp"
          (735481 'move' call_tmp[735478](267569 call != call_tmp[735473] nElems[267514]))
          unknown call_tmp[735483] "expr temp" "maybe param" "maybe type" "temp"
          (735486 'move' call_tmp[735483](267576 call _cond_test call_tmp[735478]))
          if call_tmp[735483]
          {
            (267573 call += chunkSize[267559] 1)
            (489713 'end of statement' chunkSize[267559])
          }
          unknown call_tmp[735488] "expr temp" "maybe param" "maybe type" "temp"
          (735491 'move' call_tmp[735488](267586 call chunkOrderPack chunkSize[267559] nElems[267514] i[267534]))
          unknown call_tmp[735493] "expr temp" "maybe param" "maybe type" "temp"
          (735496 'move' call_tmp[735493](537380 'query' r[267443] 1))
          unknown call_tmp[735498] "expr temp" "maybe param" "maybe type" "temp"
          (735501 'move' call_tmp[735498](537378 call * 2 call_tmp[735493]))
          (537384 'move' ret[537351](537383 'coerce' call_tmp[735488] call_tmp[735498]))
          gotoReturn _end_chunkOrder[537349] _end_chunkOrder[537349]
          (489715 'end of statement' chunkSize[267559] nElems[267514] i[267534])
        }
        {
          unknown call_tmp[735503] "expr temp" "maybe param" "maybe type" "temp"
          (735506 'move' call_tmp[735503](267667 call == tmp[267650] Mod[266464]))
          unknown call_tmp[735508] "expr temp" "maybe param" "maybe type" "temp"
          (735511 'move' call_tmp[735508](267670 call _cond_test call_tmp[735503]))
          if call_tmp[735508]
          {
            unknown call_tmp[735513] "maybe param" "maybe type" "temp"
            (735516 'move' call_tmp[735513](267595 call / nElems[267514] nChunks[267526]))
            const chunkSize[267597] "dead at end of block" "const" "insert auto destroy"
            (548610 'init var' chunkSize[267597] call_tmp[735513])
            (267600 'end of statement')
            unknown call_tmp[735518] "expr temp" "maybe param" "maybe type" "temp"
            (735521 'move' call_tmp[735518](267605 call * chunkSize[267597] nChunks[267526]))
            unknown call_tmp[735523] "maybe param" "maybe type" "temp"
            (735526 'move' call_tmp[735523](267607 call - nElems[267514] call_tmp[735518]))
            const rem[267609] "dead at end of block" "const" "insert auto destroy"
            (548612 'init var' rem[267609] call_tmp[735523])
            (267612 'end of statement' nElems[267514] nChunks[267526] nElems[267514] chunkSize[267597] nChunks[267526])
            unknown call_tmp[735528] "expr temp" "maybe param" "maybe type" "temp"
            (735531 'move' call_tmp[735528](267620 call chunkOrderMod chunkSize[267597] rem[267609] nElems[267514] nChunks[267526] i[267534]))
            unknown call_tmp[735533] "expr temp" "maybe param" "maybe type" "temp"
            (735536 'move' call_tmp[735533](537391 'query' r[267443] 1))
            unknown call_tmp[735538] "expr temp" "maybe param" "maybe type" "temp"
            (735541 'move' call_tmp[735538](537389 call * 2 call_tmp[735533]))
            (537395 'move' ret[537351](537394 'coerce' call_tmp[735528] call_tmp[735538]))
            gotoReturn _end_chunkOrder[537349] _end_chunkOrder[537349]
            (489724 'end of statement' chunkSize[267597] rem[267609] nElems[267514] nChunks[267526] i[267534])
          }
          {
            (267644 call halt "RangeChunk: unknown RemElems in chunkOrder")
          }
        }
      }
    }
    label _end_chunkOrder[537349]
    (537353 return ret[537351])
  }
  where {
    unknown call_tmp[735543] "expr temp" "maybe param" "maybe type" "temp"
    (735546 'move' call_tmp[735543](466557 'query' r[267443] 2))
    unknown call_tmp[735548] "expr temp" "maybe param" "maybe type" "temp"
    (735551 'move' call_tmp[735548](466561 call == bounded[64205] call_tmp[735543]))
    (466565 call & 1 call_tmp[735548])
  }
  { scopeless type
    unknown call_tmp[735553] "expr temp" "maybe param" "maybe type" "temp"
    (735556 'move' call_tmp[735553](466554 'query' r[267443] 1))
    (267464 call * 2 call_tmp[735553])
  }
  function chunkOrderThru[267685](arg nElems[267682]:_any[178](?), arg nChunks[267688] :
  (466571 'typeof' nElems[267682]), arg i[267692] :
  (466573 'typeof' nElems[267682])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537401] "RVV" "temp"
    unknown call_tmp[735558] "maybe param" "maybe type" "temp"
    (735561 'move' call_tmp[735558](267702 call * nElems[267682] i[267692]))
    const m[267704] "dead at end of block" "const" "insert auto destroy"
    (548614 'init var' m[267704] call_tmp[735558])
    (267707 'end of statement')
    const start[267725] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579333] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579334] "maybe param" "temp"
    unknown call_tmp[735563] "expr temp" "maybe param" "maybe type" "temp"
    (735566 'move' call_tmp[735563](267711 call == i[267692] 0))
    (579339 'move' tmp[579334](579337 call _cond_test call_tmp[735563]))
    if tmp[579334]
    {
      unknown tmp[579341] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735568] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735571 'move' call_tmp[735568](466575 'typeof' nElems[267682]))
      (579343 'move' tmp[579341](267715 call _cast call_tmp[735568] 0))
      (579348 'move' tmp[579333](579345 '_paramFoldLogical' tmp[579334] tmp[579341]))
    }
    {
      unknown tmp[579350] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579352 'move' tmp[579350](267721 call divceil m[267704] nChunks[267688]))
      (579357 'move' tmp[579333](579354 '_paramFoldLogical' tmp[579334] tmp[579350]))
    }
    (548616 'init var' start[267725] tmp[579333])
    (267728 'end of statement')
    const end[267754] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[579364] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[579365] "maybe param" "temp"
    unknown call_tmp[735573] "expr temp" "maybe param" "maybe type" "temp"
    (735576 'move' call_tmp[735573](267732 call - nChunks[267688] 1))
    unknown call_tmp[735578] "expr temp" "maybe param" "maybe type" "temp"
    (735581 'move' call_tmp[735578](267734 call == i[267692] call_tmp[735573]))
    (579370 'move' tmp[579365](579368 call _cond_test call_tmp[735578]))
    if tmp[579365]
    {
      unknown tmp[579372] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (579374 'move' tmp[579372](267738 call - nElems[267682] 1))
      (579379 'move' tmp[579364](579376 '_paramFoldLogical' tmp[579365] tmp[579372]))
    }
    {
      unknown tmp[579381] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[735583] "expr temp" "maybe param" "maybe type" "temp"
      (735586 'move' call_tmp[735583](267743 call + m[267704] nElems[267682]))
      unknown call_tmp[735588] "expr temp" "maybe param" "maybe type" "temp"
      (735591 'move' call_tmp[735588](267747 call divceil call_tmp[735583] nChunks[267688]))
      (579383 'move' tmp[579381](267749 call - call_tmp[735588] 1))
      (579388 'move' tmp[579364](579385 '_paramFoldLogical' tmp[579365] tmp[579381]))
    }
    (548618 'init var' end[267754] tmp[579364])
    (267757 'end of statement' m[267704] m[267704])
    unknown call_tmp[735593] "expr temp" "maybe param" "maybe type" "temp"
    (735596 'move' call_tmp[735593](267761 call _build_tuple start[267725] end[267754]))
    unknown call_tmp[735598] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735601 'move' call_tmp[735598](537407 'typeof' nElems[267682]))
    unknown call_tmp[735603] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735606 'move' call_tmp[735603](537409 'typeof' nElems[267682]))
    unknown call_tmp[735608] "expr temp" "maybe param" "maybe type" "temp"
    (735611 'move' call_tmp[735608](537406 call _build_tuple call_tmp[735598] call_tmp[735603]))
    (537412 'move' ret[537401](537411 'coerce' call_tmp[735593] call_tmp[735608]))
    gotoReturn _end_chunkOrderThru[537399] _end_chunkOrderThru[537399]
    (489733 'end of statement' start[267725] end[267754])
    label _end_chunkOrderThru[537399]
    (537403 return ret[537401])
  }
  { scopeless type
    unknown call_tmp[735613] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735616 'move' call_tmp[735613](466577 'typeof' nElems[267682]))
    unknown call_tmp[735618] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735621 'move' call_tmp[735618](466579 'typeof' nElems[267682]))
    (267698 call _build_tuple call_tmp[735613] call_tmp[735618])
  }
  function chunkOrderPack[267775](arg chunkSize[267772]:_any[178](?), arg nElems[267778] :
  (466581 'typeof' chunkSize[267772]), arg i[267782] :
  (466583 'typeof' chunkSize[267772])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537418] "RVV" "temp"
    unknown call_tmp[735623] "maybe param" "maybe type" "temp"
    (735626 'move' call_tmp[735623](267792 call * chunkSize[267772] i[267782]))
    const start[267794] "dead at end of block" "const" "insert auto destroy"
    (548620 'init var' start[267794] call_tmp[735623])
    (267797 'end of statement')
    unknown call_tmp[735628] "expr temp" "maybe param" "maybe type" "temp"
    (735631 'move' call_tmp[735628](267801 call >= start[267794] nElems[267778]))
    unknown call_tmp[735633] "expr temp" "maybe param" "maybe type" "temp"
    (735636 'move' call_tmp[735633](267816 call _cond_test call_tmp[735628]))
    if call_tmp[735633]
    {
      unknown call_tmp[735638] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735641 'move' call_tmp[735638](466585 'typeof' chunkSize[267772]))
      unknown call_tmp[735643] "expr temp" "maybe param" "maybe type" "temp"
      (735646 'move' call_tmp[735643](267805 call _cast call_tmp[735638] 1))
      unknown call_tmp[735648] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735651 'move' call_tmp[735648](466587 'typeof' chunkSize[267772]))
      unknown call_tmp[735653] "expr temp" "maybe param" "maybe type" "temp"
      (735656 'move' call_tmp[735653](267809 call _cast call_tmp[735648] 0))
      unknown call_tmp[735658] "expr temp" "maybe param" "maybe type" "temp"
      (735661 'move' call_tmp[735658](267812 call _build_tuple call_tmp[735643] call_tmp[735653]))
      unknown call_tmp[735663] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735666 'move' call_tmp[735663](537424 'typeof' chunkSize[267772]))
      unknown call_tmp[735668] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (735671 'move' call_tmp[735668](537426 'typeof' chunkSize[267772]))
      unknown call_tmp[735673] "expr temp" "maybe param" "maybe type" "temp"
      (735676 'move' call_tmp[735673](537423 call _build_tuple call_tmp[735663] call_tmp[735668]))
      (537429 'move' ret[537418](537428 'coerce' call_tmp[735658] call_tmp[735673]))
      gotoReturn _end_chunkOrderPack[537416] _end_chunkOrderPack[537416]
    }
    unknown call_tmp[735678] "expr temp" "maybe param" "maybe type" "temp"
    (735681 'move' call_tmp[735678](267823 call + start[267794] chunkSize[267772]))
    unknown call_tmp[735683] "maybe param" "maybe type" "temp"
    (735686 'move' call_tmp[735683](267826 call - call_tmp[735678] 1))
    unknown end[267828] "dead at end of block" "insert auto destroy"
    (548622 'init var' end[267828] call_tmp[735683])
    (267831 'end of statement' start[267794])
    unknown call_tmp[735688] "expr temp" "maybe param" "maybe type" "temp"
    (735691 'move' call_tmp[735688](267834 call >= end[267828] nElems[267778]))
    unknown call_tmp[735693] "expr temp" "maybe param" "maybe type" "temp"
    (735696 'move' call_tmp[735693](267844 call _cond_test call_tmp[735688]))
    if call_tmp[735693]
    {
      unknown call_tmp[735698] "expr temp" "maybe param" "maybe type" "temp"
      (735701 'move' call_tmp[735698](267839 call - nElems[267778] 1))
      (267841 call = end[267828] call_tmp[735698])
      (489738 'end of statement' end[267828])
    }
    unknown call_tmp[735703] "expr temp" "maybe param" "maybe type" "temp"
    (735706 'move' call_tmp[735703](267852 call _build_tuple start[267794] end[267828]))
    unknown call_tmp[735708] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735711 'move' call_tmp[735708](537435 'typeof' chunkSize[267772]))
    unknown call_tmp[735713] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735716 'move' call_tmp[735713](537437 'typeof' chunkSize[267772]))
    unknown call_tmp[735718] "expr temp" "maybe param" "maybe type" "temp"
    (735721 'move' call_tmp[735718](537434 call _build_tuple call_tmp[735708] call_tmp[735713]))
    (537440 'move' ret[537418](537439 'coerce' call_tmp[735703] call_tmp[735718]))
    gotoReturn _end_chunkOrderPack[537416] _end_chunkOrderPack[537416]
    (489740 'end of statement' start[267794] end[267828])
    label _end_chunkOrderPack[537416]
    (537420 return ret[537418])
  }
  { scopeless type
    unknown call_tmp[735723] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735726 'move' call_tmp[735723](466589 'typeof' chunkSize[267772]))
    unknown call_tmp[735728] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735731 'move' call_tmp[735728](466591 'typeof' chunkSize[267772]))
    (267788 call _build_tuple call_tmp[735723] call_tmp[735728])
  }
  function chunkOrderMod[267866](arg chunkSize[267863]:_any[178](?), arg rem[267869] :
  (466593 'typeof' chunkSize[267863]), arg nElems[267873] :
  (466595 'typeof' chunkSize[267863]), arg nChunks[267877] :
  (466597 'typeof' chunkSize[267863]), arg i[267881] :
  (466599 'typeof' chunkSize[267863])) : _unknown[51] "no doc" "private"
  {
    unknown ret[537446] "RVV" "temp"
    unknown start[267889] "dead at end of block" "insert auto destroy"
    unknown call_tmp[735733] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735736 'move' call_tmp[735733](466601 'typeof' chunkSize[267863]))
    (548624 'default init var' start[267889] call_tmp[735733])
    unknown end[267893] "dead at end of block" "insert auto destroy" "split inited"
    unknown type_tmp[548626] "maybe param" "maybe type" "temp"
    (548633 'move' type_tmp[548626](548631 'typeof' start[267889]))
    (548628 'init var split decl' end[267893] type_tmp[548626])
    (267898 'end of statement' start[267889])
    unknown call_tmp[735738] "expr temp" "maybe param" "maybe type" "temp"
    (735741 'move' call_tmp[735738](267902 call < i[267881] rem[267869]))
    unknown call_tmp[735743] "expr temp" "maybe param" "maybe type" "temp"
    (735746 'move' call_tmp[735743](267950 call _cond_test call_tmp[735738]))
    if call_tmp[735743]
    {
      unknown call_tmp[735748] "expr temp" "maybe param" "maybe type" "temp"
      (735751 'move' call_tmp[735748](267908 call + chunkSize[267863] 1))
      unknown call_tmp[735753] "expr temp" "maybe param" "maybe type" "temp"
      (735756 'move' call_tmp[735753](267910 call * i[267881] call_tmp[735748]))
      (267912 call = start[267889] call_tmp[735753])
      (489744 'end of statement' start[267889])
      unknown call_tmp[735758] "maybe param" "maybe type" "temp"
      (735761 'move' call_tmp[735758](267919 call + start[267889] chunkSize[267863]))
      (548635 'init var split init' end[267893] call_tmp[735758] type_tmp[548626])
      (489746 'end of statement' end[267893] start[267889])
    }
    {
      unknown call_tmp[735763] "expr temp" "maybe param" "maybe type" "temp"
      (735766 'move' call_tmp[735763](267928 call - nChunks[267877] i[267881]))
      unknown call_tmp[735768] "expr temp" "maybe param" "maybe type" "temp"
      (735771 'move' call_tmp[735768](267931 call * call_tmp[735763] chunkSize[267863]))
      unknown call_tmp[735773] "expr temp" "maybe param" "maybe type" "temp"
      (735776 'move' call_tmp[735773](267933 call - nElems[267873] call_tmp[735768]))
      (267935 call = start[267889] call_tmp[735773])
      (489749 'end of statement' start[267889])
      unknown call_tmp[735778] "expr temp" "maybe param" "maybe type" "temp"
      (735781 'move' call_tmp[735778](267942 call + start[267889] chunkSize[267863]))
      unknown call_tmp[735783] "maybe param" "maybe type" "temp"
      (735786 'move' call_tmp[735783](267945 call - call_tmp[735778] 1))
      (548638 'init var split init' end[267893] call_tmp[735783] type_tmp[548626])
      (489751 'end of statement' end[267893] start[267889])
    }
    unknown call_tmp[735788] "expr temp" "maybe param" "maybe type" "temp"
    (735791 'move' call_tmp[735788](267957 call _build_tuple start[267889] end[267893]))
    unknown call_tmp[735793] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735796 'move' call_tmp[735793](537452 'typeof' chunkSize[267863]))
    unknown call_tmp[735798] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735801 'move' call_tmp[735798](537454 'typeof' chunkSize[267863]))
    unknown call_tmp[735803] "expr temp" "maybe param" "maybe type" "temp"
    (735806 'move' call_tmp[735803](537451 call _build_tuple call_tmp[735793] call_tmp[735798]))
    (537457 'move' ret[537446](537456 'coerce' call_tmp[735788] call_tmp[735803]))
    gotoReturn _end_chunkOrderMod[537444] _end_chunkOrderMod[537444]
    (489754 'end of statement' start[267889] end[267893])
    label _end_chunkOrderMod[537444]
    (537448 return ret[537446])
  }
  { scopeless type
    unknown call_tmp[735808] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735811 'move' call_tmp[735808](466603 'typeof' chunkSize[267863]))
    unknown call_tmp[735813] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (735816 'move' call_tmp[735813](466605 'typeof' chunkSize[267863]))
    (267887 call _build_tuple call_tmp[735808] call_tmp[735813])
  }
  (355324 'used modules list'(353016 'use' ChapelStandard[20264])(266471 'use' RemElems[266466])(266474 'use' BoundedRangeType[64213]))
}