AST dump for HeapSort after pass cleanup.
Module use list: 

{
  (353022 'use' ChapelStandard)
  (269643 'import' Sort.{defaultComparator, chpl_check_comparator, chpl_compare})
  function heapSort[269658](arg Data[269655] :
  (269653 call chpl__buildArrayRuntimeType unknown Dom[269648] unknown eltType[269651]), arg comparator[269663] :
  unknown rec[269660] =
  defaultComparator) : _unknown[51]
  {
    (269671 call chpl_check_comparator comparator eltType)
    if(269703 call _cond_test(269679 call !=(269675 call . Dom c"rank") 1))
    {
      (269700 call compilerError "heapSort() requires 1-D array")
    }
    const low[269711] "const"(269708 call . Dom c"alignedLow")
    const high[269718] "const"(269715 call . Dom c"alignedHigh")
    const size[269725] "const"(269722 call . Dom c"size")
    const stride[269735] "const"(269734 call abs(269730 call . Dom c"stride"))
    (269738 'end of statement')
    unknown start[269780](269777 IfExpr (269741 call == high low) then
    { scopeless
      high
    } else
    { scopeless(269774 IfExpr (269746 call % size 2) then
      { scopeless
        (269759 call + low(269757 call *(269754 call /(269751 call - size 1) 2) stride))
      } else
      { scopeless
        (269772 call + low(269770 call *(269767 call -(269764 call / size 2) 1) stride))
      } )
    } )
    (269783 'end of statement')
    {
      unknown tmp[269804] "temp"
      (269828 'move' tmp[269804](269823 call _cond_test(269825 call >= start low)))
      WhileDo[269809]
      {
        {
          (269793 call SiftDown start high comparator)
          (269801 call = start(269799 call - start stride))
        }
        label _continueLabel[269807]
        (269818 'move' tmp[269804](269813 call _cond_test(269815 call >= start low)))
        tmp[269804]
      }
      label _breakLabel[269808]
    }
    unknown end[269832] high
    (269835 'end of statement')
    {
      unknown tmp[269867] "temp"
      (269891 'move' tmp[269867](269886 call _cond_test(269888 call > end low)))
      WhileDo[269872]
      {
        {
          (269848 call <=>(269843 call Data end)(269847 call Data low))
          (269857 call = end(269855 call - end stride))
          (269865 call SiftDown low end comparator)
        }
        label _continueLabel[269870]
        (269881 'move' tmp[269867](269876 call _cond_test(269878 call > end low)))
        tmp[269867]
      }
      label _breakLabel[269871]
    }
    function SiftDown[269898](arg start[269896]:_any[178](?), arg end[269900]:_any[178](?), arg comparator[269905] :
    unknown rec[269902] =
    defaultComparator) : _unknown[51] "no return value for void"
    {
      unknown root[269910] start
      (269913 'end of statement')
      {
        unknown tmp[270041] "temp"
        (270083 'move' tmp[270041](270069 call _cond_test(270071 call <=(270073 call +(270075 call -(270077 call * 2 root) low) stride) end)))
        WhileDo[270046]
        {
          {
            const child[269938] "const"(269936 call +(269933 call -(269930 call * 2 root) low) stride)
            (269941 'end of statement')
            unknown swap[269944] root
            (269947 'end of statement')
            if(269968 call _cond_test(269961 call <(269959 call chpl_compare(269952 call Data swap)(269957 call Data child) comparator) 0))
            {
              (269965 call = swap child)
            }
            if(270008 call _cond_test(269998 call &&(269978 call <=(269975 call + child stride) end)(269996 call <(269994 call chpl_compare(269984 call Data swap)(269992 call Data(269989 call + child stride)) comparator) 0)))
            {
              (270005 call = swap(270003 call + child stride))
            }
            if(270037 call _cond_test(270015 call != swap root))
            {
              (270025 call <=>(270020 call Data root)(270024 call Data swap))
              (270031 call = root swap)
            }
            {
              (270034 return _void[55])
            }
          }
          label _continueLabel[270044]
          (270064 'move' tmp[270041](270050 call _cond_test(270052 call <=(270054 call +(270056 call -(270058 call * 2 root) low) stride) end)))
          tmp[270041]
        }
        label _breakLabel[270045]
      }
    }
  }
}