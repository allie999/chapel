AST dump for ChapelDistribution after pass prune.
Module use list: ChapelArray ChapelRange ChapelLocks ChapelHashtable Sort 

{
  type _class_localson_fn[2095706] val _runtime_hdr[2095707]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095709]:chpl_localeID_t[209294] val _1_this[2095711]:BaseDom[146725] val _2_x[2095713]:BaseArr[149541] ref _3_count[2095715]:int(64)[13]
  type _class_localson_fn[2093186] val _runtime_hdr[2093187]:chpl_comm_on_bundle_t[209301] val _0_tmp[2093189]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2093191]:BaseArrOverRectangularDom(1,int(64),false)[1256219]
  type _class_localson_fn[2093053] val _runtime_hdr[2093054]:chpl_comm_on_bundle_t[209301] val _0_tmp[2093056]:chpl_localeID_t[209294] val _1_e[2093058]:BaseArr[149541] val _2_rvfDerefTmp[2093060]:BaseArrOverRectangularDom(1,int(64),false)[1256219] val _3_rhs_data[2093062]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] ref _4_idxType[2093064]:int(64)[13]
  type _class_localson_fn[2092951] val _runtime_hdr[2092952]:chpl_comm_on_bundle_t[209301] val _0_tmp[2092954]:chpl_localeID_t[209294] val _1_this[2092956]:BaseDom[146725] val _2_x[2092958]:BaseArr[149541]
  type _class_localson_fn[2086163] val _runtime_hdr[2086164]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086166]:chpl_localeID_t[209294] val _1_this[2086168]:BaseDom[146725] ref _2_free_dom[2086170]:bool[10] val _3_rvfDerefTmp[2086172]:BaseDist[145926] ref _4_remove_dist[2086174]:bool[10]
  type _class_localson_fn[2086041] val _runtime_hdr[2086042]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086044]:chpl_localeID_t[209294] val _1_this[2086046]:BaseDist[145926] val _2_x[2086048]:BaseDom[146725] ref _3_count[2086050]:int(64)[13]
  type _class_localson_fn[2085934] val _runtime_hdr[2085935]:chpl_comm_on_bundle_t[209301] val _0_tmp[2085937]:chpl_localeID_t[209294] val _1_this[2085939]:BaseDist[145926] ref _2_free_dist[2085941]:bool[10]
  function chpl__init_ChapelDistribution[415984]() : void[4] "insert line file info" "module init" "resolved"
  {
    (520399 return _void[55])
  }
  function BaseDist[145926].deinit[145456](const in arg this[145928]:BaseDist[145926]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1814491]
    ref _field_destructor_tmp_[1814489]:_ref(chpl_LocalSpinlock)[941071] "temp"
    (1814496 'move' _field_destructor_tmp_[1814489](1814493 '.' this[145928] _domsLock[145439]))
    (1814498 call deinit[820394] _field_destructor_tmp_[1814489])
    ref _field_destructor_tmp_[1814501]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "temp"
    (1814506 'move' _field_destructor_tmp_[1814501](1814503 '.' this[145928] _doms[145434]))
    (1814508 call deinit[1549258] _field_destructor_tmp_[1814501])
    val _parent_destructor_tmp_[1814511]:object[22] "temp"
    (1814516 'move' _parent_destructor_tmp_[1814511](1814512 'cast' object[22] this[145928]))
    (1814518 call deinit[749379] _parent_destructor_tmp_[1814511])
    (519675 return _void[55])
  }
  function BaseDist[145926].remove[145463](const in arg this[145932]:BaseDist[145926]) : BaseDist[145926] "dont disable remote value forwarding" "method" "primary method" "resolved"
  {
    val ret[519679]:BaseDist[145926] "dead after last mention" "RVV" "temp"
    val free_dist[145469]:bool[10] "dead at end of block" "insert auto destroy"
    (543517 'move' free_dist[145469] 0)
    const-val call_tmp[667401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1800782]:int(32)[95] "temp"
    (1800786 'move' _virtual_method_tmp_[1800782](1800784 'getcid' this[145932]))
    (667404 'move' call_tmp[667401](145476 'virtual method call' dsiTrackDomains[145897] _virtual_method_tmp_[1800782] this[145932]))
    const-val call_tmp[667406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667409 'move' call_tmp[667406] call_tmp[667401])
    if call_tmp[667406]
    {
      const-val tmp[145534]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
      const-val call_tmp[667411]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (667414 'move' call_tmp[667411](145531 '_wide_get_locale' this[145932]))
      (145536 'move' tmp[145534] call_tmp[667411])
      val isdirect[2085917]:bool[10] "temp"
      (2085922 'move' isdirect[2085917](2085919 call chpl_doDirectExecuteOn[187423] tmp[145534]))
      if isdirect[2085917]
      {
        (2085926 call on_fn[935152] this[145932] free_dist[145469])
      }
      {
        val _args_foron_fn[2085944]:_class_localson_fn[2085934] "temp"
        (2085948 'move' _args_foron_fn[2085944](2085946 'stack allocate class' _class_localson_fn[2085934]))
        (2085950 '.=' _args_foron_fn[2085944] _0_tmp[2085937] tmp[145534])
        (2085954 '.=' _args_foron_fn[2085944] _1_this[2085939] this[145932])
        ref tmp[2085958]:bool[10] "temp"
        (2085962 'move' tmp[2085958](2085960 'set reference' free_dist[145469]))
        (2085964 '.=' _args_foron_fn[2085944] _2_free_dist[2085941] tmp[2085958])
        val _args_vforon_fn[2085968]:c_void_ptr[149] "temp"
        (2085972 'move' _args_vforon_fn[2085968](2085970 'cast_to_void_star' _args_foron_fn[2085944]))
        val _args_sizeon_fn[2085974]:int(64)[13] "temp"
        (2085978 'move' _args_sizeon_fn[2085974](2085976 'sizeof_bundle' _class_localson_fn[2085934]))
        on(2086018 call wrapon_fn[2085980] tmp[145534] _args_vforon_fn[2085968] _args_sizeon_fn[2085974] _args_foron_fn[2085944])
      }
      {
      }
    }
    {
      (145545 call =[435174] free_dist[145469] 1)
    }
    const-val call_tmp[667470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667473 'move' call_tmp[667470] free_dist[145469])
    if call_tmp[667470]
    {
      val call_tmp[667475]:BaseDist[145926] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (667478 'move' call_tmp[667475](145557 call _to_unmanaged[1449990] this[145932]))
      (519685 'move' ret[519679] call_tmp[667475])
      gotoReturn _end_remove[519677] _end_remove[519677]
    }
    {
      (519691 'move' ret[519679](1450037 'cast' BaseDist[145926] nil[44]))
      gotoReturn _end_remove[519677] _end_remove[519677]
    }
    label _end_remove[519677]
    (519681 return ret[519679])
  }
  function BaseDist[145926].remove_dom[145579](const in arg this[145936]:BaseDist[145926], const in arg x[145576]:BaseDom[146725]) : bool[10] "inline" "method" "primary method" "resolved"
  {
    val ret[519697]:bool[10] "dead after last mention" "RVV" "temp"
    val count[145585]:int(64)[13] "dead at end of block" "insert auto destroy"
    (543521 'move' count[145585] -1)
    const-val tmp[145654]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[667485]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (667488 'move' call_tmp[667485](145651 '_wide_get_locale' this[145936]))
    (145656 'move' tmp[145654] call_tmp[667485])
    val isdirect[2086023]:bool[10] "temp"
    (2086028 'move' isdirect[2086023](2086025 call chpl_doDirectExecuteOn[187423] tmp[145654]))
    if isdirect[2086023]
    {
      (2086032 call on_fn[935161] this[145936] x[145576] count[145585])
    }
    {
      val _args_foron_fn[2086053]:_class_localson_fn[2086041] "temp"
      (2086057 'move' _args_foron_fn[2086053](2086055 'stack allocate class' _class_localson_fn[2086041]))
      (2086059 '.=' _args_foron_fn[2086053] _0_tmp[2086044] tmp[145654])
      (2086063 '.=' _args_foron_fn[2086053] _1_this[2086046] this[145936])
      (2086067 '.=' _args_foron_fn[2086053] _2_x[2086048] x[145576])
      ref tmp[2086071]:int(64)[13] "temp"
      (2086075 'move' tmp[2086071](2086073 'set reference' count[145585]))
      (2086077 '.=' _args_foron_fn[2086053] _3_count[2086050] tmp[2086071])
      val _args_vforon_fn[2086081]:c_void_ptr[149] "temp"
      (2086085 'move' _args_vforon_fn[2086081](2086083 'cast_to_void_star' _args_foron_fn[2086053]))
      val _args_sizeon_fn[2086087]:int(64)[13] "temp"
      (2086091 'move' _args_sizeon_fn[2086087](2086089 'sizeof_bundle' _class_localson_fn[2086041]))
      on(2086139 call wrapon_fn[2086093] tmp[145654] _args_vforon_fn[2086081] _args_sizeon_fn[2086087] _args_foron_fn[2086053])
    }
    {
    }
    const-val call_tmp[667553]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667556 'move' call_tmp[667553](145664 call ==[435628] count[145585] 0))
    (1449390 'move' ret[519697] call_tmp[667553])
    gotoReturn _end_remove_dom[519695] _end_remove_dom[519695]
    label _end_remove_dom[519695]
    (519699 return ret[519697])
  }
  function BaseDist[145926].dsiDestroyDist[145852](const in arg this[145964]:BaseDist[145926]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519733 return _void[55])
  }
  function BaseDist[145926].dsiTrackDomains[145897](const in arg this[145976]:BaseDist[145926]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519748]:bool[10] "dead after last mention" "RVV" "temp"
    (519753 'move' ret[519748] 1)
    (519750 return ret[519748])
  }
  function BaseDist[145926].init[786789](const in arg this[786792]:BaseDist[145926], const  ref arg _doms[786803]:chpl__simpleSet(unmanaged BaseDom)[1208642], const  ref arg _domsLock[786818]:chpl_LocalSpinlock[187386], const in arg _free_when_no_doms[786831]:bool[10], const in arg pid[786844]:int(64)[13]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__doms[1208949]:chpl__simpleSet(unmanaged BaseDom)[1208642] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208955 'move' _formal_tmp__doms[1208949] _doms[786803])
    val _formal_tmp__domsLock[1208950]:chpl_LocalSpinlock[187386] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1208959 'move' _formal_tmp__domsLock[1208950] _domsLock[786818])
    val _formal_tmp__free_when_no_doms[1208951]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1208966 'move' _formal_tmp__free_when_no_doms[1208951](1208963 call chpl__initCopy[1034884] _free_when_no_doms[786831]))
    val _formal_tmp_pid[1208952]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1208972 'move' _formal_tmp_pid[1208952](1208969 call chpl__initCopy[955332] pid[786844]))
    val super_tmp[786861]:object[22] "dead after last mention" "temporary of super field" "temp"
    (786863 'move' super_tmp[786861](786860 '.v' this[786792] super[355652]))
    (786802 call init[749363] super_tmp[786861])
    val tmp[786866]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[786918]:object[22] "dead at end of block" "maybe param" "temp"
    (786921 'move' call_tmp[786918](786877 'cast' object[22] this[786792]))
    val chpl__thisAsParent[786874]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (786909 'move' chpl__thisAsParent[786874](1208978 call chpl__initCopy[945271] call_tmp[786918]))
    (786880 'setcid' chpl__thisAsParent[786874])
    (786882 '.=' this[786792] _doms[145434] _formal_tmp__doms[1208949])
    (786885 '.=' this[786792] _domsLock[145439] _formal_tmp__domsLock[1208950])
    (786888 '.=' this[786792] _free_when_no_doms[145444] _formal_tmp__free_when_no_doms[1208951])
    (786891 '.=' this[786792] pid[145450] _formal_tmp_pid[1208952])
    (786894 'setcid' this[786792])
    (786907 return _void[55])
  }
  function BaseDist[145926]._doms[801227](const in arg this[801231]:BaseDist[145926]) ref : _ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801241]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "dead after last mention" "RVV" "temp"
    ref call_tmp[801248]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "dead after last mention" "maybe param" "temp"
    (801251 'move' call_tmp[801248](801235 '.' this[801231] _doms[145434]))
    (801246 'move' ret[801241] call_tmp[801248])
    (801243 return ret[801241])
  }
  function BaseDist[145926]._domsLock[801253](const in arg this[801257]:BaseDist[145926]) ref : _ref(chpl_LocalSpinlock)[941071] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801267]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "RVV" "temp"
    ref call_tmp[801274]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
    (801277 'move' call_tmp[801274](801261 '.' this[801257] _domsLock[145439]))
    (801272 'move' ret[801267] call_tmp[801274])
    (801269 return ret[801267])
  }
  function BaseDist[145926]._free_when_no_doms[801279](const in arg this[801283]:BaseDist[145926]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801293]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[801300]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (801303 'move' call_tmp[801300](801287 '.' this[801283] _free_when_no_doms[145444]))
    (801298 'move' ret[801293] call_tmp[801300])
    (801295 return ret[801293])
  }
  function BaseDist[145926].pid[801305](const in arg this[801309]:BaseDist[145926]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801319]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[801326]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (801329 'move' call_tmp[801326](801313 '.' this[801309] pid[145450]))
    (801324 'move' ret[801319] call_tmp[801326])
    (801321 return ret[801319])
  }
  type BaseDist[145926] val super[355652]:object[22] "super class" val _doms[145434]:chpl__simpleSet(unmanaged BaseDom)[1208642] val _domsLock[145439]:chpl_LocalSpinlock[187386] val _free_when_no_doms[145444]:bool[10] val pid[145450]:int(64)[13]
  function BaseDom[146725].init[146022](const in arg this[146727]:BaseDom[146725]) : void[4] "inline" "method" "primary method" "resolved" "no return value for void"
  {
    val super_tmp[461687]:object[22] "dead after last mention" "temporary of super field" "temp"
    (461695 'move' super_tmp[461687](461688 '.v' this[146727] super[355656]))
    (461691 call init[749363] super_tmp[461687])
    val tmp[461622]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[667595]:object[22] "dead at end of block" "maybe param" "temp"
    (667598 'move' call_tmp[667595](461633 'cast' object[22] this[146727]))
    val chpl__thisAsParent[461630]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (543525 'move' chpl__thisAsParent[461630](1247441 call chpl__initCopy[945271] call_tmp[667595]))
    (461636 'setcid' chpl__thisAsParent[461630])
    val tmp[461639]:chpl__simpleSet(unmanaged BaseArr)[1208342] "dead after last mention" "temp"
    val call_tmp[667600]:chpl__simpleSet(unmanaged BaseArr)[1208342] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_table[1250806]:chpl__hashtable(unmanaged BaseArr,nothing)[1208428] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1835566]:chpl__hashtable(unmanaged BaseArr,nothing)[1208428] "temp"
    (1250808 call init_default_table[1247528] ret_tmp[1835566])
    (1835569 'move' default_arg_table[1250806] ret_tmp[1835566])
    (1247463 call init[1247468] tmp[461639] default_arg_table[1250806])
    (461646 '.=' this[146727] _arrs[145995] tmp[461639])
    val tmp[461650]:int(64)[13] "dead after last mention" "temp"
    (1250815 'move' tmp[461650] 0)
    (461655 '.=' this[146727] _arrs_containing_dom[146000] tmp[461650])
    val tmp[461659]:chpl_LocalSpinlock[187386] "dead after last mention" "temp"
    const-val default_arg_l[1250825]:AtomicBool[45874] "dead after last mention" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "suppress lvalue error" "temp"
    const-val ret_tmp[1831939]:AtomicBool[45874] "temp"
    (1250827 call init_default_l[944828] ret_tmp[1831939])
    (1831942 'move' default_arg_l[1250825] ret_tmp[1831939])
    (1250817 call init[820321] tmp[461659] default_arg_l[1250825])
    (461664 '.=' this[146727] _arrsLock[146005] tmp[461659])
    val tmp[461668]:bool[10] "dead after last mention" "temp"
    (1250834 'move' tmp[461668] 0)
    (461673 '.=' this[146727] _free_when_no_arrs[146010] tmp[461668])
    val tmp[461678]:int(64)[13] "dead after last mention" "temp"
    (461681 'move' tmp[461678] -1)
    (461683 '.=' this[146727] pid[146016] tmp[461678])
    (461698 'setcid' this[146727])
    (519773 return _void[55])
  }
  function BaseDom[146725].deinit[146029](const in arg this[146731]:BaseDom[146725]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1814523]
    ref _field_destructor_tmp_[1814521]:_ref(chpl_LocalSpinlock)[941071] "temp"
    (1814528 'move' _field_destructor_tmp_[1814521](1814525 '.' this[146731] _arrsLock[146005]))
    (1814530 call deinit[820394] _field_destructor_tmp_[1814521])
    ref _field_destructor_tmp_[1814533]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
    (1814538 'move' _field_destructor_tmp_[1814533](1814535 '.' this[146731] _arrs[145995]))
    (1814540 call deinit[1546174] _field_destructor_tmp_[1814533])
    val _parent_destructor_tmp_[1814543]:object[22] "temp"
    (1814548 'move' _parent_destructor_tmp_[1814543](1814544 'cast' object[22] this[146731]))
    (1814550 call deinit[749379] _parent_destructor_tmp_[1814543])
    (519775 return _void[55])
  }
  function BaseDom[146725].dsiMyDist[146036](const in arg this[146735]:BaseDom[146725]) : BaseDist[145926] "method" "primary method" "resolved" "virtual"
  {
    val ret[519779]:BaseDist[145926] "dead after last mention" "RVV" "temp"
    (146059 call halt[154067] "internal error: dsiMyDist is not implemented")
    val ret[146064]:BaseDist[145926] "dead at end of block" "insert auto destroy" "unsafe"
    (1445228 'move' ret[146064](1445226 'cast' BaseDist[145926] nil[44]))
    (1445223 'move' ret[519779] ret[146064])
    gotoReturn _end_dsiMyDist[519777] _end_dsiMyDist[519777]
    label _end_dsiMyDist[519777]
    (519781 return ret[519779])
  }
  function BaseDom[146725].remove[146076](const in arg this[146739]:BaseDom[146725], ref arg _retArg[1831047]:_ref((unmanaged BaseDom?,unmanaged BaseDist?))[1445197]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "method" "primary method" "resolved"
  {
    const-val ret[519791]:(unmanaged BaseDom?,unmanaged BaseDist?)[1445134] "dead after last mention" "RVV" "temp"
    val call_tmp[667607]:BaseDist[145926] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1800789]:int(32)[95] "temp"
    (1800793 'move' _virtual_method_tmp_[1800789](1800791 'getcid' this[146739]))
    (667610 'move' call_tmp[667607](146090 'virtual method call' dsiMyDist[146036] _virtual_method_tmp_[1800789] this[146739]))
    const-val call_tmp[667614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1445230]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1445235 'move' coerce_tmp[1445230] call_tmp[667607])
    const-val _virtual_method_tmp_[1800796]:int(32)[95] "temp"
    (1800800 'move' _virtual_method_tmp_[1800796](1800798 'getcid' coerce_tmp[1445230]))
    (667617 'move' call_tmp[667614](146097 'virtual method call' dsiTrackDomains[145897] _virtual_method_tmp_[1800796] coerce_tmp[1445230]))
    const-val call_tmp[667621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val _virtual_method_tmp_[1800803]:int(32)[95] "temp"
    (1800807 'move' _virtual_method_tmp_[1800803](1800805 'getcid' this[146739]))
    (667624 'move' call_tmp[667621](146100 'virtual method call' dsiLinksDistribution[146637] _virtual_method_tmp_[1800803] this[146739]))
    const-val call_tmp[667626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667629 'move' call_tmp[667626](146101 call ==[938] call_tmp[667614] call_tmp[667621]))
    (146104 call assert[210345] call_tmp[667626])
    val ret_dom[146111]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1445241]:BaseDom[146725] "dead at end of block" "temp"
    (1445244 'move' init_coerce_tmp[1445241](1449571 'cast' BaseDom[146725] nil[44]))
    (543529 'move' ret_dom[146111] init_coerce_tmp[1445241])
    val ret_dist[146119]:BaseDist[145926] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1445247]:BaseDist[145926] "dead at end of block" "temp"
    (1445250 'move' init_coerce_tmp[1445247](1449575 'cast' BaseDist[145926] nil[44]))
    (543531 'move' ret_dist[146119] init_coerce_tmp[1445247])
    val call_tmp[667633]:BaseDist[145926] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1800810]:int(32)[95] "temp"
    (1800814 'move' _virtual_method_tmp_[1800810](1800812 'getcid' this[146739]))
    (667636 'move' call_tmp[667633](146125 'virtual method call' dsiMyDist[146036] _virtual_method_tmp_[1800810] this[146739]))
    val dist[146126]:BaseDist[145926] "dead at end of block" "insert auto destroy"
    (543533 'move' dist[146126](1445254 call chpl__initCopy[1445256] call_tmp[667633]))
    val free_dom[146131]:bool[10] "dead at end of block" "insert auto destroy"
    (543535 'move' free_dom[146131] 0)
    val remove_dist[146136]:bool[10] "dead at end of block" "insert auto destroy"
    (543537 'move' remove_dist[146136] 0)
    const-val tmp[146224]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[667638]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (667641 'move' call_tmp[667638](146221 '_wide_get_locale' this[146739]))
    (146226 'move' tmp[146224] call_tmp[667638])
    val rvfDerefTmp[2083365]:BaseDist[145926] "concurrently accessed" "temp"
    (2083368 'move' rvfDerefTmp[2083365] dist[146126])
    val isdirect[2086144]:bool[10] "temp"
    (2086149 'move' isdirect[2086144](2086146 call chpl_doDirectExecuteOn[187423] tmp[146224]))
    if isdirect[2086144]
    {
      (2086153 call on_fn[935179] this[146739] free_dom[146131] rvfDerefTmp[2083365] remove_dist[146136])
    }
    {
      val _args_foron_fn[2086177]:_class_localson_fn[2086163] "temp"
      (2086181 'move' _args_foron_fn[2086177](2086179 'stack allocate class' _class_localson_fn[2086163]))
      (2086183 '.=' _args_foron_fn[2086177] _0_tmp[2086166] tmp[146224])
      (2086187 '.=' _args_foron_fn[2086177] _1_this[2086168] this[146739])
      ref tmp[2086191]:bool[10] "temp"
      (2086195 'move' tmp[2086191](2086193 'set reference' free_dom[146131]))
      (2086197 '.=' _args_foron_fn[2086177] _2_free_dom[2086170] tmp[2086191])
      (2086201 '.=' _args_foron_fn[2086177] _3_rvfDerefTmp[2086172] rvfDerefTmp[2083365])
      ref tmp[2086205]:bool[10] "temp"
      (2086209 'move' tmp[2086205](2086207 'set reference' remove_dist[146136]))
      (2086211 '.=' _args_foron_fn[2086177] _4_remove_dist[2086174] tmp[2086205])
      val _args_vforon_fn[2086215]:c_void_ptr[149] "temp"
      (2086219 'move' _args_vforon_fn[2086215](2086217 'cast_to_void_star' _args_foron_fn[2086177]))
      val _args_sizeon_fn[2086221]:int(64)[13] "temp"
      (2086225 'move' _args_sizeon_fn[2086221](2086223 'sizeof_bundle' _class_localson_fn[2086163]))
      on(2086281 call wrapon_fn[2086227] tmp[146224] _args_vforon_fn[2086215] _args_sizeon_fn[2086221] _args_foron_fn[2086177])
    }
    {
    }
    const-val call_tmp[667723]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667726 'move' call_tmp[667723] free_dom[146131])
    if call_tmp[667723]
    {
      val call_tmp[667728]:BaseDom[146725] "dead after last mention" "expr temp" "maybe param" "temp"
      (667731 'move' call_tmp[667728](146237 call _to_unmanaged[1445296] this[146739]))
      val coerce_tmp[1449394]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1449400 'move' coerce_tmp[1449394] call_tmp[667728])
      (146238 call =[1444254] ret_dom[146111] coerce_tmp[1449394])
    }
    const-val call_tmp[667733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (667736 'move' call_tmp[667733] remove_dist[146136])
    if call_tmp[667733]
    {
      val coerce_tmp[1449479]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1449485 'move' coerce_tmp[1449479] dist[146126])
      (146249 call =[1449444] ret_dist[146119] coerce_tmp[1449479])
    }
    const-val call_tmp[667738]:(unmanaged BaseDom?,unmanaged BaseDist?)[1445134] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1838718]:(unmanaged BaseDom?,unmanaged BaseDist?)[1445134] "temp"
    (146260 call _build_tuple[1449488] ret_dom[146111] ret_dist[146119] ret_tmp[1838718])
    (1838721 'move' call_tmp[667738] ret_tmp[1838718])
    val call_tmp[667743]:(unmanaged BaseDom?,unmanaged BaseDist?)[1445134] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1449580 'move' ret[519791] call_tmp[667738])
    gotoReturn _end_remove[519789] _end_remove[519789]
    label _end_remove[519789]
    (1831049 '=' _retArg[1831047] ret[519791])
    (1831051 return _void[55])
  }
  function BaseDom[146725].remove_arr[1442794](const in arg this[1442798]:BaseDom[146725], const in arg x[1442800]:BaseArr[149541]) : bool[10] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1442810]:bool[10] "dead after last mention" "RVV" "temp"
    val count[1442823]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1442825 'move' count[1442823] -1)
    const-val tmp[1442829]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[1442831]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1442833 'move' call_tmp[1442831](1442835 '_wide_get_locale' this[1442798]))
    (1442837 'move' tmp[1442829] call_tmp[1442831])
    val isdirect[2095688]:bool[10] "temp"
    (2095693 'move' isdirect[2095688](2095690 call chpl_doDirectExecuteOn[187423] tmp[1442829]))
    if isdirect[2095688]
    {
      (2095697 call on_fn[1442844] this[1442798] x[1442800] count[1442823])
    }
    {
      val _args_foron_fn[2095718]:_class_localson_fn[2095706] "temp"
      (2095722 'move' _args_foron_fn[2095718](2095720 'stack allocate class' _class_localson_fn[2095706]))
      (2095724 '.=' _args_foron_fn[2095718] _0_tmp[2095709] tmp[1442829])
      (2095728 '.=' _args_foron_fn[2095718] _1_this[2095711] this[1442798])
      (2095732 '.=' _args_foron_fn[2095718] _2_x[2095713] x[1442800])
      ref tmp[2095736]:int(64)[13] "temp"
      (2095740 'move' tmp[2095736](2095738 'set reference' count[1442823]))
      (2095742 '.=' _args_foron_fn[2095718] _3_count[2095715] tmp[2095736])
      val _args_vforon_fn[2095746]:c_void_ptr[149] "temp"
      (2095750 'move' _args_vforon_fn[2095746](2095748 'cast_to_void_star' _args_foron_fn[2095718]))
      val _args_sizeon_fn[2095752]:int(64)[13] "temp"
      (2095756 'move' _args_sizeon_fn[2095752](2095754 'sizeof_bundle' _class_localson_fn[2095706]))
      on(2095804 call wrapon_fn[2095758] tmp[1442829] _args_vforon_fn[2095746] _args_sizeon_fn[2095752] _args_foron_fn[2095718])
    }
    {
    }
    const-val call_tmp[1443008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1443010 'move' call_tmp[1443008](1443013 call ==[435628] count[1442823] 0))
    (1444210 'move' ret[1442810] call_tmp[1443008])
    gotoReturn _end_remove_arr[1443025] _end_remove_arr[1443025]
    label _end_remove_arr[1443025]
    (1443027 return ret[1442810])
  }
  function BaseDom[146725].add_arr[1264742](const in arg this[1264746]:BaseDom[146725], const in arg x[1264748]:BaseArr[149541]) : void[4] "inline" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1264764]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
    const-val call_tmp[1264766]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    (1264768 'move' call_tmp[1264766](1264770 '_wide_get_locale' this[1264746]))
    (1264772 'move' tmp[1264764] call_tmp[1264766])
    val isdirect[2092934]:bool[10] "temp"
    (2092939 'move' isdirect[2092934](2092936 call chpl_doDirectExecuteOn[187423] tmp[1264764]))
    if isdirect[2092934]
    {
      (2092943 call on_fn[1264779] this[1264746] x[1264748])
    }
    {
      val _args_foron_fn[2092961]:_class_localson_fn[2092951] "temp"
      (2092965 'move' _args_foron_fn[2092961](2092963 'stack allocate class' _class_localson_fn[2092951]))
      (2092967 '.=' _args_foron_fn[2092961] _0_tmp[2092954] tmp[1264764])
      (2092971 '.=' _args_foron_fn[2092961] _1_this[2092956] this[1264746])
      (2092975 '.=' _args_foron_fn[2092961] _2_x[2092958] x[1264748])
      val _args_vforon_fn[2092979]:c_void_ptr[149] "temp"
      (2092983 'move' _args_vforon_fn[2092979](2092981 'cast_to_void_star' _args_foron_fn[2092961]))
      val _args_sizeon_fn[2092985]:int(64)[13] "temp"
      (2092989 'move' _args_sizeon_fn[2092985](2092987 'sizeof_bundle' _class_localson_fn[2092951]))
      on(2093029 call wrapon_fn[2092991] tmp[1264764] _args_vforon_fn[2092979] _args_sizeon_fn[2092985] _args_foron_fn[2092961])
    }
    {
    }
    (1264872 return _void[55])
  }
  function BaseDom[146725].dsiLinksDistribution[146637](const in arg this[146771]:BaseDom[146725]) : bool[10] "method" "primary method" "resolved" "virtual"
  {
    val ret[519860]:bool[10] "dead after last mention" "RVV" "temp"
    (519865 'move' ret[519860] 1)
    (519862 return ret[519860])
  }
  function BaseDom[146725].dsiDestroyDom[146647](const in arg this[146775]:BaseDom[146725]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (519867 return _void[55])
  }
  function BaseDom[146725]._arrs[801389](const in arg this[801393]:BaseDom[146725]) ref : _ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801403]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "RVV" "temp"
    ref call_tmp[801410]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "maybe param" "temp"
    (801413 'move' call_tmp[801410](801397 '.' this[801393] _arrs[145995]))
    (801408 'move' ret[801403] call_tmp[801410])
    (801405 return ret[801403])
  }
  function BaseDom[146725]._arrs_containing_dom[801415](const in arg this[801419]:BaseDom[146725]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801429]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[801436]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (801439 'move' call_tmp[801436](801423 '.' this[801419] _arrs_containing_dom[146000]))
    (801434 'move' ret[801429] call_tmp[801436])
    (801431 return ret[801429])
  }
  function BaseDom[146725]._arrsLock[801441](const in arg this[801445]:BaseDom[146725]) ref : _ref(chpl_LocalSpinlock)[941071] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801455]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "RVV" "temp"
    ref call_tmp[801462]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
    (801465 'move' call_tmp[801462](801449 '.' this[801445] _arrsLock[146005]))
    (801460 'move' ret[801455] call_tmp[801462])
    (801457 return ret[801455])
  }
  function BaseDom[146725]._free_when_no_arrs[801467](const in arg this[801471]:BaseDom[146725]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801481]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[801488]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (801491 'move' call_tmp[801488](801475 '.' this[801471] _free_when_no_arrs[146010]))
    (801486 'move' ret[801481] call_tmp[801488])
    (801483 return ret[801481])
  }
  function BaseDom[146725].pid[801493](const in arg this[801497]:BaseDom[146725]) ref : _ref(int(64))[936572] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[801507]:_ref(int(64))[936572] "dead after last mention" "RVV" "temp"
    ref call_tmp[801514]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
    (801517 'move' call_tmp[801514](801501 '.' this[801497] pid[146016]))
    (801512 'move' ret[801507] call_tmp[801514])
    (801509 return ret[801507])
  }
  type BaseDom[146725] val super[355656]:object[22] "super class" val _arrs[145995]:chpl__simpleSet(unmanaged BaseArr)[1208342] val _arrs_containing_dom[146000]:int(64)[13] val _arrsLock[146005]:chpl_LocalSpinlock[187386] val _free_when_no_arrs[146010]:bool[10] val pid[146016]:int(64)[13]
  function BaseRectangularDom(1,int(64),false)[1250899].deinit[1762002](const in arg this[1762006]:BaseRectangularDom(1,int(64),false)[1250899]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816326]
    val _parent_destructor_tmp_[1816321]:BaseDom[146725] "temp"
    (1816328 'move' _parent_destructor_tmp_[1816321](1816322 'cast' BaseDom[146725] this[1762006]))
    (1816330 call deinit[146029] _parent_destructor_tmp_[1816321])
    (1762012 return _void[55])
  }
  function BaseRectangularDom(1,int(64),false)[1250899].init[1247330](const in arg this[1247334]:BaseRectangularDom(1,int(64),false)[1250899]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804841]:int(64)[13] "temp"
    val super_tmp[1247350]:BaseDom[146725] "dead after last mention" "temporary of super field" "temp"
    (1247352 'move' super_tmp[1247350](1247354 '.v' this[1247334] super[1250889]))
    (1247361 call init[146022] super_tmp[1247350])
    val tmp[1247363]:BaseDom[146725] "dead after last mention" "temp" "type variable"
    val call_tmp[1247382]:BaseDom[146725] "dead at end of block" "maybe param" "temp"
    (1247384 'move' call_tmp[1247382](1247386 'cast' BaseDom[146725] this[1247334]))
    val chpl__thisAsParent[1247389]:BaseDom[146725] "dead at end of block" "insert auto destroy" "temp"
    (1247391 'move' chpl__thisAsParent[1247389](1250837 call chpl__initCopy[1250839] call_tmp[1247382]))
    (1247395 'setcid' chpl__thisAsParent[1247389])
    (1247427 'setcid' this[1247334])
    (1247429 return _void[55])
  }
  type BaseRectangularDom(1,int(64),false)[1250899] val super[1250889]:BaseDom[146725] "super class"
  function BaseArr[149541].deinit[148882](const in arg this[149559]:BaseArr[149541]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1814558]
    val _parent_destructor_tmp_[1814553]:object[22] "temp"
    (1814560 'move' _parent_destructor_tmp_[1814553](1814554 'cast' object[22] this[149559]))
    (1814562 call deinit[749379] _parent_destructor_tmp_[1814553])
    (520219 return _void[55])
  }
  function BaseArr[149541].dsiGetBaseDom[148901](const in arg this[149567]:BaseArr[149541]) : BaseDom[146725] "method" "primary method" "resolved" "virtual"
  {
    val ret[520232]:BaseDom[146725] "dead after last mention" "RVV" "temp"
    (148924 call halt[154067] "internal error: dsiGetBaseDom is not implemented")
    val ret[148929]:BaseDom[146725] "dead at end of block" "insert auto destroy" "unsafe"
    (1442728 'move' ret[148929](1442726 'cast' BaseDom[146725] nil[44]))
    (1442723 'move' ret[520232] ret[148929])
    gotoReturn _end_dsiGetBaseDom[520230] _end_dsiGetBaseDom[520230]
    label _end_dsiGetBaseDom[520230]
    (520234 return ret[520232])
  }
  function BaseArr[149541].remove[1442579](const in arg this[1442583]:BaseArr[149541], ref arg _retArg[1838624]:_ref((BaseArr,unmanaged BaseDom?))[1444430]) : void[4] "dont disable remote value forwarding" "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1442587]:(BaseArr,unmanaged BaseDom?)[1444340] "dead after last mention" "RVV" "temp"
    val ret_arr[1442595]:BaseArr[149541] "dead at end of block" "insert auto destroy"
    (1442597 'move' ret_arr[1442595](1442700 call chpl__initCopy[1256159] this[1442583]))
    val ret_dom[1442601]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1442713]:BaseDom[146725] "dead at end of block" "temp"
    (1442716 'move' init_coerce_tmp[1442713](1444480 'cast' BaseDom[146725] nil[44]))
    (1442603 'move' ret_dom[1442601] init_coerce_tmp[1442713])
    val rm_dom[1442608]:bool[10] "dead at end of block" "insert auto destroy"
    (1442610 'move' rm_dom[1442608] 0)
    val call_tmp[1442614]:BaseDom[146725] "dead at end of block" "maybe param" "temp"
    const-val _virtual_method_tmp_[1800922]:int(32)[95] "temp"
    (1800926 'move' _virtual_method_tmp_[1800922](1800924 'getcid' this[1442583]))
    (1442616 'move' call_tmp[1442614](1442622 'virtual method call' dsiGetBaseDom[148901] _virtual_method_tmp_[1800922] this[1442583]))
    val dom[1442623]:BaseDom[146725] "dead at end of block" "insert auto destroy"
    (1442625 'move' dom[1442623](1442730 call chpl__initCopy[1442732] call_tmp[1442614]))
    val call_tmp[1442629]:BaseArr[149541] "dead after last mention" "expr temp" "maybe param" "temp"
    (1442631 'move' call_tmp[1442629](1442634 call _to_unmanaged[1442751] this[1442583]))
    const-val call_tmp[1442636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1443029]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1443034 'move' coerce_tmp[1443029] dom[1442623])
    (1442638 'move' call_tmp[1442636](1442644 call remove_arr[1442794] coerce_tmp[1443029] call_tmp[1442629]))
    (1442648 call =[435174] rm_dom[1442608] call_tmp[1442636])
    const-val call_tmp[1442654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1442656 'move' call_tmp[1442654] rm_dom[1442608])
    if call_tmp[1442654]
    {
      val coerce_tmp[1444289]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1444295 'move' coerce_tmp[1444289] dom[1442623])
      (1442664 call =[1444254] ret_dom[1442601] coerce_tmp[1444289])
    }
    const-val call_tmp[1442671]:(BaseArr,unmanaged BaseDom?)[1444340] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1838642]:(BaseArr,unmanaged BaseDom?)[1444340] "temp"
    (1442676 call _build_tuple[1444298] ret_arr[1442595] ret_dom[1442601] ret_tmp[1838642])
    (1838645 'move' call_tmp[1442671] ret_tmp[1838642])
    (1442679 'move' ret[1442587] call_tmp[1442671])
    gotoReturn _end_remove[1442688] _end_remove[1442688]
    label _end_remove[1442688]
    (1838626 '=' _retArg[1838624] ret[1442587])
    (1838628 return _void[55])
  }
  function BaseArr[149541].dsiDestroyArr[149072](const in arg this[149583]:BaseArr[149541], const in arg deinitElts[149069]:bool[10]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (149093 call halt[154067] "dsiDestroyArr must be defined")
    (520257 return _void[55])
  }
  function BaseArr[149541].decEltCountsIfNeeded[149535](const in arg this[149663]:BaseArr[149541]) : void[4] "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (520339 return _void[55])
  }
  function BaseArr[149541]._decEltRefCounts[806680](const in arg this[806684]:BaseArr[149541]) ref : _ref(bool)[937199] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "resolved"
  {
    ref ret[806694]:_ref(bool)[937199] "dead after last mention" "RVV" "temp"
    ref call_tmp[806701]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    (806704 'move' call_tmp[806701](806688 '.' this[806684] _decEltRefCounts[148836]))
    (806699 'move' ret[806694] call_tmp[806701])
    (806696 return ret[806694])
  }
  function BaseArr[149541].init[806706](const in arg this[806709]:BaseArr[149541], const in arg pid[806720]:int(64)[13], const in arg _decEltRefCounts[806735]:bool[10]) : void[4] "compiler generated" "inline" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp_pid[1256132]:int(64)[13] "dead at end of block" "insert auto destroy" "temp"
    (1256139 'move' _formal_tmp_pid[1256132](1256136 call chpl__initCopy[955332] pid[806720]))
    val _formal_tmp__decEltRefCounts[1256133]:bool[10] "dead at end of block" "insert auto destroy" "temp"
    (1256145 'move' _formal_tmp__decEltRefCounts[1256133](1256142 call chpl__initCopy[1034884] _decEltRefCounts[806735]))
    val super_tmp[806752]:object[22] "dead after last mention" "temporary of super field" "temp"
    (806754 'move' super_tmp[806752](806751 '.v' this[806709] super[355664]))
    (806719 call init[749363] super_tmp[806752])
    val tmp[806757]:object[22] "dead after last mention" "temp" "type variable"
    val call_tmp[806802]:object[22] "dead at end of block" "maybe param" "temp"
    (806805 'move' call_tmp[806802](806768 'cast' object[22] this[806709]))
    val chpl__thisAsParent[806765]:object[22] "dead at end of block" "insert auto destroy" "temp"
    (806793 'move' chpl__thisAsParent[806765](1256151 call chpl__initCopy[945271] call_tmp[806802]))
    (806771 'setcid' chpl__thisAsParent[806765])
    (806773 '.=' this[806709] pid[148830] _formal_tmp_pid[1256132])
    (806776 '.=' this[806709] _decEltRefCounts[148836] _formal_tmp__decEltRefCounts[1256133])
    (806779 'setcid' this[806709])
    (806791 return _void[55])
  }
  type BaseArr[149541] val super[355664]:object[22] "super class" val pid[148830]:int(64)[13] val _decEltRefCounts[148836]:bool[10]
  function BaseArrOverRectangularDom(1,int(64),false)[1256219].dsiReallocate[1297492](const in arg this[1297496]:BaseArrOverRectangularDom(1,int(64),false)[1256219], const  ref arg bounds[1297536]:1*range(int(64),bounded,false)[1244696]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    (1297555 call halt[154067] "reallocating not supported for this array type")
    (1297557 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256219].dsiPostReallocate[1297619](const in arg this[1297623]:BaseArrOverRectangularDom(1,int(64),false)[1256219]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    (1297629 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256219].deinit[1762063](const in arg this[1762067]:BaseArrOverRectangularDom(1,int(64),false)[1256219]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816338]
    val _parent_destructor_tmp_[1816333]:BaseArr[149541] "temp"
    (1816340 'move' _parent_destructor_tmp_[1816333](1816334 'cast' BaseArr[149541] this[1762067]))
    (1816342 call deinit[148882] _parent_destructor_tmp_[1816333])
    (1762073 return _void[55])
  }
  function BaseArrOverRectangularDom(1,int(64),false)[1256219].init[1256009](const in arg this[1256013]:BaseArrOverRectangularDom(1,int(64),false)[1256219], const in arg pid[1256019]:int(64)[13], const in arg _decEltRefCounts[1256025]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804886]:int(64)[13] "temp"
    val super_tmp[1256041]:BaseArr[149541] "dead after last mention" "temporary of super field" "temp"
    (1256043 'move' super_tmp[1256041](1256045 '.v' this[1256013] super[1256209]))
    (1256052 call init[806706] super_tmp[1256041] pid[1256019] _decEltRefCounts[1256025])
    val tmp[1256056]:BaseArr[149541] "dead after last mention" "temp" "type variable"
    val call_tmp[1256075]:BaseArr[149541] "dead at end of block" "maybe param" "temp"
    (1256077 'move' call_tmp[1256075](1256079 'cast' BaseArr[149541] this[1256013]))
    val chpl__thisAsParent[1256082]:BaseArr[149541] "dead at end of block" "insert auto destroy" "temp"
    (1256084 'move' chpl__thisAsParent[1256082](1256157 call chpl__initCopy[1256159] call_tmp[1256075]))
    (1256088 'setcid' chpl__thisAsParent[1256082])
    (1256120 'setcid' this[1256013])
    (1256122 return _void[55])
  }
  type BaseArrOverRectangularDom(1,int(64),false)[1256219] val super[1256209]:BaseArr[149541] "super class"
  function BaseRectangularArr(1,int(64),false,locale)[1256272].deinit[1762075](const in arg this[1762079]:BaseRectangularArr(1,int(64),false,locale)[1256272]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816350]
    val _parent_destructor_tmp_[1816345]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1816352 'move' _parent_destructor_tmp_[1816345](1816346 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1762079]))
    (1816354 call deinit[1762063] _parent_destructor_tmp_[1816345])
    (1762085 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998].deinit[1762099](const in arg this[1762103]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816414]
    val _parent_destructor_tmp_[1816409]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1816416 'move' _parent_destructor_tmp_[1816409](1816410 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1762103]))
    (1816418 call deinit[1762063] _parent_destructor_tmp_[1816409])
    (1762109 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358541].deinit[1762123](const in arg this[1762127]:BaseRectangularArr(1,int(64),false,real(64))[1358541]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816478]
    val _parent_destructor_tmp_[1816473]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1816480 'move' _parent_destructor_tmp_[1816473](1816474 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1762127]))
    (1816482 call deinit[1762063] _parent_destructor_tmp_[1816473])
    (1762133 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1375861].deinit[1762147](const in arg this[1762151]:BaseRectangularArr(1,int(64),false,int(64))[1375861]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816542]
    val _parent_destructor_tmp_[1816537]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1816544 'move' _parent_destructor_tmp_[1816537](1816538 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1762151]))
    (1816546 call deinit[1762063] _parent_destructor_tmp_[1816537])
    (1762157 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1589105].deinit[1762171](const in arg this[1762175]:BaseRectangularArr(1,int(64),false,uint(64))[1589105]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    label _enddeinit[1816606]
    val _parent_destructor_tmp_[1816601]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1816608 'move' _parent_destructor_tmp_[1816601](1816602 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1762175]))
    (1816610 call deinit[1762063] _parent_destructor_tmp_[1816601])
    (1762181 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256272].decEltCountsIfNeeded[1767050](const in arg this[1767054]:BaseRectangularArr(1,int(64),false,locale)[1256272]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1767060]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1767099]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1767105 'move' coerce_tmp[1767099](1767101 'cast' BaseArr[149541] this[1767054]))
    (1767062 'move' call_tmp[1767060](1767065 call _decEltRefCounts[806680] coerce_tmp[1767099]))
    const-val call_tmp[1767068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1767108]:bool[10] "dead after last mention" "const" "temp"
    (1767110 'move' tmp[1767108](1767112 'deref' call_tmp[1767060]))
    (1767070 'move' call_tmp[1767068] tmp[1767108])
    if call_tmp[1767068]
    {
      val call_tmp[1767077]:BaseRectangularArr(1,int(64),false,locale)[1256272] "dead after last mention" "expr temp" "maybe param" "temp"
      (1767079 'move' call_tmp[1767077](1767082 call _to_unmanaged[1767114] this[1767054]))
      val call_tmp[1767084]:locale[28] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1767519]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767525 'move' coerce_tmp[1767519](1767521 'cast' BaseArr[149541] call_tmp[1767077]))
      (1767093 call chpl_decRefCountsForDomainsInArrayEltTypes[1767177] coerce_tmp[1767519])
    }
    (1767097 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998].decEltCountsIfNeeded[1767532](const in arg this[1767536]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1767542]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1767581]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1767587 'move' coerce_tmp[1767581](1767583 'cast' BaseArr[149541] this[1767536]))
    (1767544 'move' call_tmp[1767542](1767547 call _decEltRefCounts[806680] coerce_tmp[1767581]))
    const-val call_tmp[1767550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1767590]:bool[10] "dead after last mention" "const" "temp"
    (1767592 'move' tmp[1767590](1767594 'deref' call_tmp[1767542]))
    (1767552 'move' call_tmp[1767550] tmp[1767590])
    if call_tmp[1767550]
    {
      val call_tmp[1767559]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998] "dead after last mention" "expr temp" "maybe param" "temp"
      (1767561 'move' call_tmp[1767559](1767564 call _to_unmanaged[1767596] this[1767536]))
      val call_tmp[1767566]:localesSignal[92275] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1768001]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1768007 'move' coerce_tmp[1768001](1768003 'cast' BaseArr[149541] call_tmp[1767559]))
      (1767575 call chpl_decRefCountsForDomainsInArrayEltTypes[1767659] coerce_tmp[1768001])
    }
    (1767579 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358541].decEltCountsIfNeeded[1768014](const in arg this[1768018]:BaseRectangularArr(1,int(64),false,real(64))[1358541]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1768024]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1768063]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1768069 'move' coerce_tmp[1768063](1768065 'cast' BaseArr[149541] this[1768018]))
    (1768026 'move' call_tmp[1768024](1768029 call _decEltRefCounts[806680] coerce_tmp[1768063]))
    const-val call_tmp[1768032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1768072]:bool[10] "dead after last mention" "const" "temp"
    (1768074 'move' tmp[1768072](1768076 'deref' call_tmp[1768024]))
    (1768034 'move' call_tmp[1768032] tmp[1768072])
    if call_tmp[1768032]
    {
      val call_tmp[1768041]:BaseRectangularArr(1,int(64),false,real(64))[1358541] "dead after last mention" "expr temp" "maybe param" "temp"
      (1768043 'move' call_tmp[1768041](1768046 call _to_unmanaged[1768078] this[1768018]))
      val call_tmp[1768048]:real(64)[16] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1768483]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1768489 'move' coerce_tmp[1768483](1768485 'cast' BaseArr[149541] call_tmp[1768041]))
      (1768057 call chpl_decRefCountsForDomainsInArrayEltTypes[1768141] coerce_tmp[1768483])
    }
    (1768061 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1375861].decEltCountsIfNeeded[1768496](const in arg this[1768500]:BaseRectangularArr(1,int(64),false,int(64))[1375861]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1768506]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1768545]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1768551 'move' coerce_tmp[1768545](1768547 'cast' BaseArr[149541] this[1768500]))
    (1768508 'move' call_tmp[1768506](1768511 call _decEltRefCounts[806680] coerce_tmp[1768545]))
    const-val call_tmp[1768514]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1768554]:bool[10] "dead after last mention" "const" "temp"
    (1768556 'move' tmp[1768554](1768558 'deref' call_tmp[1768506]))
    (1768516 'move' call_tmp[1768514] tmp[1768554])
    if call_tmp[1768514]
    {
      val call_tmp[1768523]:BaseRectangularArr(1,int(64),false,int(64))[1375861] "dead after last mention" "expr temp" "maybe param" "temp"
      (1768525 'move' call_tmp[1768523](1768528 call _to_unmanaged[1768560] this[1768500]))
      val call_tmp[1768530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1768965]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1768971 'move' coerce_tmp[1768965](1768967 'cast' BaseArr[149541] call_tmp[1768523]))
      (1768539 call chpl_decRefCountsForDomainsInArrayEltTypes[1768623] coerce_tmp[1768965])
    }
    (1768543 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1589105].decEltCountsIfNeeded[1768978](const in arg this[1768982]:BaseRectangularArr(1,int(64),false,uint(64))[1589105]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "method overrides" "resolved" "virtual" "no return value for void"
  {
    ref call_tmp[1768988]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
    val coerce_tmp[1769027]:BaseArr[149541] "dead after last mention" "arg this" "coerce temp" "insert auto destroy" "temp"
    (1769033 'move' coerce_tmp[1769027](1769029 'cast' BaseArr[149541] this[1768982]))
    (1768990 'move' call_tmp[1768988](1768993 call _decEltRefCounts[806680] coerce_tmp[1769027]))
    const-val call_tmp[1768996]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1769036]:bool[10] "dead after last mention" "const" "temp"
    (1769038 'move' tmp[1769036](1769040 'deref' call_tmp[1768988]))
    (1768998 'move' call_tmp[1768996] tmp[1769036])
    if call_tmp[1768996]
    {
      val call_tmp[1769005]:BaseRectangularArr(1,int(64),false,uint(64))[1589105] "dead after last mention" "expr temp" "maybe param" "temp"
      (1769007 'move' call_tmp[1769005](1769010 call _to_unmanaged[1769042] this[1768982]))
      val call_tmp[1769012]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val coerce_tmp[1769447]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1769453 'move' coerce_tmp[1769447](1769449 'cast' BaseArr[149541] call_tmp[1769005]))
      (1769021 call chpl_decRefCountsForDomainsInArrayEltTypes[1769105] coerce_tmp[1769447])
    }
    (1769025 return _void[55])
  }
  function BaseRectangularArr(1,int(64),false,locale)[1256272].init[1255823](const in arg this[1255827]:BaseRectangularArr(1,int(64),false,locale)[1256272], const in arg pid[1255833]:int(64)[13], const in arg _decEltRefCounts[1255839]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804884]:locale[28] "temp"
    val _formal_type_tmp_[1804882]:int(64)[13] "temp"
    val super_tmp[1255859]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temporary of super field" "temp"
    (1255861 'move' super_tmp[1255859](1255863 '.v' this[1255827] super[1256268]))
    (1255870 call init[1256009] super_tmp[1255859] pid[1255833] _decEltRefCounts[1255839])
    val tmp[1255877]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temp" "type variable"
    val call_tmp[1255896]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
    (1255898 'move' call_tmp[1255896](1255900 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1255827]))
    val chpl__thisAsParent[1255903]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "temp"
    (1255905 'move' chpl__thisAsParent[1255903](1256246 call chpl__initCopy[1256248] call_tmp[1255896]))
    (1255909 'setcid' chpl__thisAsParent[1255903])
    (1255916 'setcid' this[1255827])
    (1255918 return _void[55])
  }
  function init_default__decEltRefCounts[1255969]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255971]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1255976]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255980]:bool[10] "dead after last mention" "temp"
    val _formal_type[1255982]:bool[10] "dead after last mention" "temp" "type variable"
    (1255990 'move' tmp[1255980] 0)
    (1255993 'move' _decEltRefCounts[1255976] tmp[1255980])
    (1255998 'move' ret[1255971] _decEltRefCounts[1255976])
    (1255974 return ret[1255971])
  }
  function init_default_pid[1255929]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1255931]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1255936]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1255940]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1255942]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1255950 'move' tmp[1255940] -1)
    (1255953 'move' pid[1255936] tmp[1255940])
    (1255958 'move' ret[1255931] pid[1255936])
    (1255934 return ret[1255931])
  }
  function BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998].init[1317802](const in arg this[1317806]:BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998], const in arg pid[1317812]:int(64)[13], const in arg _decEltRefCounts[1317818]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1804945]:localesSignal[92275] "temp"
    val _formal_type_tmp_[1804943]:int(64)[13] "temp"
    val super_tmp[1317838]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temporary of super field" "temp"
    (1317840 'move' super_tmp[1317838](1317842 '.v' this[1317806] super[1317994]))
    (1317849 call init[1256009] super_tmp[1317838] pid[1317812] _decEltRefCounts[1317818])
    val tmp[1317856]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temp" "type variable"
    val call_tmp[1317875]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
    (1317877 'move' call_tmp[1317875](1317879 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1317806]))
    val chpl__thisAsParent[1317882]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "temp"
    (1317884 'move' chpl__thisAsParent[1317882](1317990 call chpl__initCopy[1256248] call_tmp[1317875]))
    (1317888 'setcid' chpl__thisAsParent[1317882])
    (1317895 'setcid' this[1317806])
    (1317897 return _void[55])
  }
  function init_default__decEltRefCounts[1317948]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317950]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1317955]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317959]:bool[10] "dead after last mention" "temp"
    val _formal_type[1317961]:bool[10] "dead after last mention" "temp" "type variable"
    (1317969 'move' tmp[1317959] 0)
    (1317972 'move' _decEltRefCounts[1317955] tmp[1317959])
    (1317977 'move' ret[1317950] _decEltRefCounts[1317955])
    (1317953 return ret[1317950])
  }
  function init_default_pid[1317908]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1317910]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1317915]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1317919]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1317921]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1317929 'move' tmp[1317919] -1)
    (1317932 'move' pid[1317915] tmp[1317919])
    (1317937 'move' ret[1317910] pid[1317915])
    (1317913 return ret[1317910])
  }
  function BaseRectangularArr(1,int(64),false,real(64))[1358541].init[1358345](const in arg this[1358349]:BaseRectangularArr(1,int(64),false,real(64))[1358541], const in arg pid[1358355]:int(64)[13], const in arg _decEltRefCounts[1358361]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1805032]:real(64)[16] "temp"
    val _formal_type_tmp_[1805030]:int(64)[13] "temp"
    val super_tmp[1358381]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temporary of super field" "temp"
    (1358383 'move' super_tmp[1358381](1358385 '.v' this[1358349] super[1358537]))
    (1358392 call init[1256009] super_tmp[1358381] pid[1358355] _decEltRefCounts[1358361])
    val tmp[1358399]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temp" "type variable"
    val call_tmp[1358418]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
    (1358420 'move' call_tmp[1358418](1358422 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1358349]))
    val chpl__thisAsParent[1358425]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "temp"
    (1358427 'move' chpl__thisAsParent[1358425](1358533 call chpl__initCopy[1256248] call_tmp[1358418]))
    (1358431 'setcid' chpl__thisAsParent[1358425])
    (1358438 'setcid' this[1358349])
    (1358440 return _void[55])
  }
  function init_default__decEltRefCounts[1358491]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358493]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1358498]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358502]:bool[10] "dead after last mention" "temp"
    val _formal_type[1358504]:bool[10] "dead after last mention" "temp" "type variable"
    (1358512 'move' tmp[1358502] 0)
    (1358515 'move' _decEltRefCounts[1358498] tmp[1358502])
    (1358520 'move' ret[1358493] _decEltRefCounts[1358498])
    (1358496 return ret[1358493])
  }
  function init_default_pid[1358451]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1358453]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1358458]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1358462]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1358464]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1358472 'move' tmp[1358462] -1)
    (1358475 'move' pid[1358458] tmp[1358462])
    (1358480 'move' ret[1358453] pid[1358458])
    (1358456 return ret[1358453])
  }
  function BaseRectangularArr(1,int(64),false,int(64))[1375861].init[1375665](const in arg this[1375669]:BaseRectangularArr(1,int(64),false,int(64))[1375861], const in arg pid[1375675]:int(64)[13], const in arg _decEltRefCounts[1375681]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1805068]:int(64)[13] "temp"
    val _formal_type_tmp_[1805066]:int(64)[13] "temp"
    val super_tmp[1375701]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temporary of super field" "temp"
    (1375703 'move' super_tmp[1375701](1375705 '.v' this[1375669] super[1375857]))
    (1375712 call init[1256009] super_tmp[1375701] pid[1375675] _decEltRefCounts[1375681])
    val tmp[1375719]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temp" "type variable"
    val call_tmp[1375738]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
    (1375740 'move' call_tmp[1375738](1375742 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1375669]))
    val chpl__thisAsParent[1375745]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "temp"
    (1375747 'move' chpl__thisAsParent[1375745](1375853 call chpl__initCopy[1256248] call_tmp[1375738]))
    (1375751 'setcid' chpl__thisAsParent[1375745])
    (1375758 'setcid' this[1375669])
    (1375760 return _void[55])
  }
  function init_default__decEltRefCounts[1375811]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1375813]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1375818]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1375822]:bool[10] "dead after last mention" "temp"
    val _formal_type[1375824]:bool[10] "dead after last mention" "temp" "type variable"
    (1375832 'move' tmp[1375822] 0)
    (1375835 'move' _decEltRefCounts[1375818] tmp[1375822])
    (1375840 'move' ret[1375813] _decEltRefCounts[1375818])
    (1375816 return ret[1375813])
  }
  function init_default_pid[1375771]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1375773]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1375778]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1375782]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1375784]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1375792 'move' tmp[1375782] -1)
    (1375795 'move' pid[1375778] tmp[1375782])
    (1375800 'move' ret[1375773] pid[1375778])
    (1375776 return ret[1375773])
  }
  function BaseRectangularArr(1,int(64),false,uint(64))[1589105].init[1588909](const in arg this[1588913]:BaseRectangularArr(1,int(64),false,uint(64))[1589105], const in arg pid[1588919]:int(64)[13], const in arg _decEltRefCounts[1588925]:bool[10]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1805169]:uint(64)[115] "temp"
    val _formal_type_tmp_[1805167]:int(64)[13] "temp"
    val super_tmp[1588945]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temporary of super field" "temp"
    (1588947 'move' super_tmp[1588945](1588949 '.v' this[1588913] super[1589101]))
    (1588956 call init[1256009] super_tmp[1588945] pid[1588919] _decEltRefCounts[1588925])
    val tmp[1588963]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "temp" "type variable"
    val call_tmp[1588982]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
    (1588984 'move' call_tmp[1588982](1588986 'cast' BaseArrOverRectangularDom(1,int(64),false)[1256219] this[1588913]))
    val chpl__thisAsParent[1588989]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "temp"
    (1588991 'move' chpl__thisAsParent[1588989](1589097 call chpl__initCopy[1256248] call_tmp[1588982]))
    (1588995 'setcid' chpl__thisAsParent[1588989])
    (1589002 'setcid' this[1588913])
    (1589004 return _void[55])
  }
  function init_default__decEltRefCounts[1589055]() : bool[10] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1589057]:bool[10] "dead after last mention" "RVV" "maybe param" "temp"
    const-val _decEltRefCounts[1589062]:bool[10] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1589066]:bool[10] "dead after last mention" "temp"
    val _formal_type[1589068]:bool[10] "dead after last mention" "temp" "type variable"
    (1589076 'move' tmp[1589066] 0)
    (1589079 'move' _decEltRefCounts[1589062] tmp[1589066])
    (1589084 'move' ret[1589057] _decEltRefCounts[1589062])
    (1589060 return ret[1589057])
  }
  function init_default_pid[1589015]() : int(64)[13] "compiler generated" "default actual function" "inline" "invisible fn" "last resort" "lineno ok" "maybe param" "maybe type" "method" "primary method" "resolved" "was compiler generated"
  {
    val ret[1589017]:int(64)[13] "dead after last mention" "RVV" "maybe param" "temp"
    const-val pid[1589022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    const-val tmp[1589026]:int(64)[13] "dead after last mention" "temp"
    val _formal_type[1589028]:int(64)[13] "dead after last mention" "temp" "type variable"
    (1589036 'move' tmp[1589026] -1)
    (1589039 'move' pid[1589022] tmp[1589026])
    (1589044 'move' ret[1589017] pid[1589022])
    (1589020 return ret[1589017])
  }
  type BaseRectangularArr(1,int(64),false,locale)[1256272] val super[1256268]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "super class"
  type BaseRectangularArr(1,int(64),false,unmanaged localesSignal?)[1317998] val super[1317994]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "super class"
  type BaseRectangularArr(1,int(64),false,real(64))[1358541] val super[1358537]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "super class"
  type BaseRectangularArr(1,int(64),false,int(64))[1375861] val super[1375857]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "super class"
  type BaseRectangularArr(1,int(64),false,uint(64))[1589105] val super[1589101]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "super class"
  function _delete_dist[150573](const in arg dist[150570]:BaseDist[145926], const in arg privatized[150576]:bool[10]) : void[4] "resolved" "no return value for void"
  {
    val coerce_tmp[1454619]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1454624 'move' coerce_tmp[1454619] dist[150570])
    (150586 call dsiDestroyDist[145852] coerce_tmp[1454619])
    const-val tmp[568659]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[568667]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (568669 'move' tmp[568667] privatized[150576])
    (568674 'move' tmp[568659] tmp[568667])
    const-val call_tmp[669593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (669596 'move' call_tmp[669593] tmp[568659])
    if call_tmp[669593]
    {
      ref call_tmp[669600]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1454632]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454637 'move' coerce_tmp[1454632] dist[150570])
      (669603 'move' call_tmp[669600](150595 call pid[801305] coerce_tmp[1454632]))
      const-val coerce_tmp[1454640]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454644 'move' coerce_tmp[1454640](1454642 'deref' call_tmp[669600]))
      val coerce_tmp[1454646]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1454652 'move' coerce_tmp[1454646](1454648 'cast' object[22] dist[150570]))
      (150600 call _freePrivatizedClass[1451639] coerce_tmp[1454640] coerce_tmp[1454646])
    }
    (150609 call chpl__delete[1454655] dist[150570])
    (520389 return _void[55])
  }
  function _delete_dom[1451519](const in arg dom[1451521]:BaseDom[146725], const in arg privatized[1451523]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1451618]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1451623 'move' coerce_tmp[1451618] dom[1451521])
    (1451533 call dsiDestroyDom[146647] coerce_tmp[1451618])
    const-val tmp[1451553]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1451571]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1451573 'move' tmp[1451571] privatized[1451523])
    (1451578 'move' tmp[1451553] tmp[1451571])
    const-val call_tmp[1451590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1451592 'move' call_tmp[1451590] tmp[1451553])
    if call_tmp[1451590]
    {
      ref call_tmp[1451599]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1451631]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1451636 'move' coerce_tmp[1451631] dom[1451521])
      (1451601 'move' call_tmp[1451599](1451604 call pid[801493] coerce_tmp[1451631]))
      const-val coerce_tmp[1451972]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1451976 'move' coerce_tmp[1451972](1451974 'deref' call_tmp[1451599]))
      val coerce_tmp[1451978]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1451984 'move' coerce_tmp[1451978](1451980 'cast' object[22] dom[1451521]))
      (1451608 call _freePrivatizedClass[1451639] coerce_tmp[1451972] coerce_tmp[1451978])
    }
    (1451613 call chpl__delete[1453550] dom[1451521])
    (1451615 return _void[55])
  }
  function _delete_dom[1555722](const in arg dom[1555724]:domain(1,int(64),false)[1250934], const in arg privatized[1555726]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1555821]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1555826 'move' coerce_tmp[1555821](1555823 'cast' BaseDom[146725] dom[1555724]))
    (1555736 call dsiDestroyDom[146647] coerce_tmp[1555821])
    const-val tmp[1555756]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1555774]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    (1555776 'move' tmp[1555774] privatized[1555726])
    (1555781 'move' tmp[1555756] tmp[1555774])
    const-val call_tmp[1555793]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1555795 'move' call_tmp[1555793] tmp[1555756])
    if call_tmp[1555793]
    {
      ref call_tmp[1555802]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
      val coerce_tmp[1555834]:BaseDom[146725] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1555839 'move' coerce_tmp[1555834](1555836 'cast' BaseDom[146725] dom[1555724]))
      (1555804 'move' call_tmp[1555802](1555807 call pid[801493] coerce_tmp[1555834]))
      const-val coerce_tmp[1555842]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1555846 'move' coerce_tmp[1555842](1555844 'deref' call_tmp[1555802]))
      val coerce_tmp[1555848]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1555854 'move' coerce_tmp[1555848](1555850 'cast' object[22] dom[1555724]))
      (1555811 call _freePrivatizedClass[1451639] coerce_tmp[1555842] coerce_tmp[1555848])
    }
    (1555816 call chpl__delete[1555857] dom[1555724])
    (1555818 return _void[55])
  }
  function _delete_arr[1450391](const in arg arr[1450393]:BaseArr[149541], const in arg deinitElts[1450401]:bool[10]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val coerce_tmp[1450504]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1450509 'move' coerce_tmp[1450504] arr[1450393])
    val _virtual_method_tmp_[1800929]:int(32)[95] "temp"
    (1800933 'move' _virtual_method_tmp_[1800929](1800931 'getcid' coerce_tmp[1450504]))
    (1450411 'virtual method call' dsiDestroyArr[149072] _virtual_method_tmp_[1800929] coerce_tmp[1450504] deinitElts[1450401])
    val coerce_tmp[1450513]:BaseArr[149541] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1450518 'move' coerce_tmp[1450513] arr[1450393])
    val _virtual_method_tmp_[1800936]:int(32)[95] "temp"
    (1800940 'move' _virtual_method_tmp_[1800936](1800938 'getcid' coerce_tmp[1450513]))
    (1450419 'virtual method call' decEltCountsIfNeeded[149535] _virtual_method_tmp_[1800936] coerce_tmp[1450513])
    (1450499 call chpl__delete[1450528] arr[1450393])
    (1450501 return _void[55])
  }
  function chpl_assignDomainWithGetSetIndices[1288452](const in arg lhs[1288454]:domain(1,int(64),false)[1250934], const  ref arg rhs[1288456]:domain(1,int(64),false)[1252597]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val arrType[1288518]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289108]:BaseRectangularDom(1,int(64),false)[1250899] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289114 'move' coerce_tmp[1289108](1289110 'cast' BaseRectangularDom(1,int(64),false)[1250899] lhs[1288454]))
    const-val idxType[1288546]:int(64)[13] "dead at end of block" "insert auto destroy" "type variable"
    val coerce_tmp[1289363]:BaseRectangularDom(1,int(64),false)[1250899] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1289369 'move' coerce_tmp[1289363](1289365 'cast' BaseRectangularDom(1,int(64),false)[1250899] lhs[1288454]))
    {
      val _indexOfInterest[1288573]:BaseArr[149541] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288575]:_ic_these__ref_chpl__simpleSet_BaseArr[1290219] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288577]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1289375]:BaseDom[146725] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1289381 'move' coerce_tmp[1289375](1289377 'cast' BaseDom[146725] lhs[1288454]))
      (1288579 'move' call_tmp[1288577](1288582 call _arrs[801389] coerce_tmp[1289375]))
      (1288585 'move' _iterator[1288575](1288588 call _getIterator[1289384] call_tmp[1288577]))
      {
        val ret[1917633]:_ir_these__ref_chpl__simpleSet_BaseArr[1290225] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1917635]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1917637]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289645] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1917639]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead at end of block" "maybe param" "temp"
        ref this[1917781]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
        (1917786 'move' this[1917781](1917783 '.v' _iterator[1288575] F0_this[2019226]))
        (1917641 'move' call_tmp[1917639](1917644 call table[1265069] this[1917781]))
        const-val call_tmp[1917646]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1917648]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "temp"
        (1917651 call allSlots[1289554] call_tmp[1917639] ret_tmp[1917648])
        (1917654 'move' call_tmp[1917646] ret_tmp[1917648])
        (1917657 'move' _iterator[1917637](1917660 call _getIterator[1289660] call_tmp[1917646]))
        {
          val ret[1977836]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1977838]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1977840]:_ic__allSlots[1221600] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1977842]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
          ref this[1978136]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "temp"
          (1978141 'move' this[1978136](1978138 '.v' _iterator[1917637] F0_this[2019686]))
          (1977844 'move' call_tmp[1977842](1977847 call tableSize[1247868] this[1978136]))
          const-val call_tmp[1977849]:_ir__allSlots[1221606] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1977851]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1977853 'move' coerce_tmp[1977851](1977855 'deref' call_tmp[1977842]))
          const-val ret_tmp[1977857]:_ir__allSlots[1221606] "temp"
          (1977860 call _allSlots[201266] coerce_tmp[1977851] ret_tmp[1977857])
          (1977863 'move' call_tmp[1977849] ret_tmp[1977857])
          (1977866 'move' _iterator[1977840](1977869 call _getIterator[1221615] call_tmp[1977849]))
          {
            val ret[1977872]:_ir__allSlots[1221606] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1977874]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1977876]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1977878]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1977880]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
            const-val size[1977882]:int(64)[13] "temp"
            (1977884 'move' size[1977882](1977886 '.v' _iterator[1977840] F0_size[2006597]))
            (1977890 call chpl_direct_counted_range_iter[457996] 0 size[1977882] ret_tmp[1977880])
            (1977894 'move' call_tmp[1977878] ret_tmp[1977880])
            (1977897 'move' _iterator[1977876](1977900 call _getIterator[1103805] call_tmp[1977878]))
            {
              val ret[1977903]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1977905]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1977907]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1977909]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1977911]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
              const-val low[1977913]:int(64)[13] "temp"
              (1977915 'move' low[1977913](1977917 '.v' _iterator[1977876] F0_low[2010431]))
              const-val count[1977920]:int(64)[13] "temp"
              (1977922 'move' count[1977920](1977924 '.v' _iterator[1977876] F1_count[2010435]))
              (1977928 call chpl_direct_counted_range_iter_helper[1102098] low[1977913] count[1977920] ret_tmp[1977911])
              (1977932 'move' call_tmp[1977909] ret_tmp[1977911])
              (1977935 'move' _iterator[1977907](1977938 call _getIterator[1103555] call_tmp[1977909]))
              {
                val ret[1995203]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                val call_tmp[1995205]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1995207]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1995209]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1995211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1995713]:int(64)[13] "temp"
                (1995718 'move' count[1995713](1995715 '.v' _iterator[1977907] F1_count[2014907]))
                (1995213 'move' call_tmp[1995211](1995216 call <[948398] count[1995713]))
                (1995218 'move' tmp[1995209] call_tmp[1995211])
                (1995221 'move' tmp[1995207] call_tmp[1995211])
                const-val call_tmp[1995224]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1995226 'move' call_tmp[1995224] call_tmp[1995211])
                if call_tmp[1995211]
                {
                  (1995232 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1995235]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1995237]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1995239]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1995241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1995720]:int(64)[13] "temp"
                (1995725 'move' count[1995720](1995722 '.v' _iterator[1977907] F1_count[2014907]))
                (1995243 'move' call_tmp[1995241](1995246 call ==[435628] count[1995720] 0))
                (1995249 'move' tmp[1995239] call_tmp[1995241])
                if call_tmp[1995241]
                {
                  const-val tmp[1995254]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1995256]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1995258]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1995727]:int(64)[13] "temp"
                  (1995732 'move' low[1995727](1995729 '.v' _iterator[1977907] F0_low[2014903]))
                  (1995260 'move' call_tmp[1995258](1995263 call _cast[956034] low[1995727]))
                  const-val call_tmp[1995265]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1995267]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1995269 'move' coerce_tmp[1995267](1995271 'cast' uint(64)[115] 1))
                  (1995274 'move' call_tmp[1995265](1995277 call -[962193] call_tmp[1995258]))
                  const-val call_tmp[1995279]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1995281 'move' call_tmp[1995279](1995284 call _cast[953543] call_tmp[1995265]))
                  const-val ret_tmp[1995286]:2*int(64)[1040056] "temp"
                  const-val low[1995734]:int(64)[13] "temp"
                  (1995739 'move' low[1995734](1995736 '.v' _iterator[1977907] F0_low[2014903]))
                  (1995289 call _build_tuple[1040014] low[1995734] call_tmp[1995279] ret_tmp[1995286])
                  (1995293 'move' tmp[1995254] ret_tmp[1995286])
                  (1995296 'move' tmp[1995237] tmp[1995254])
                }
                {
                  const-val tmp[1995300]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1995302]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1995304]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1995741]:int(64)[13] "temp"
                  (1995746 'move' count[1995741](1995743 '.v' _iterator[1977907] F1_count[2014907]))
                  (1995306 'move' call_tmp[1995304] count[1995741])
                  const-val call_tmp[1995309]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1995748]:int(64)[13] "temp"
                  (1995753 'move' count[1995748](1995750 '.v' _iterator[1977907] F1_count[2014907]))
                  (1995311 'move' call_tmp[1995309](1995314 call -[962226] count[1995748]))
                  const-val call_tmp[1995316]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1995755]:int(64)[13] "temp"
                  (1995760 'move' low[1995755](1995757 '.v' _iterator[1977907] F0_low[2014903]))
                  (1995318 'move' call_tmp[1995316](1995321 call +[439636] low[1995755] call_tmp[1995309]))
                  const-val ret_tmp[1995324]:2*int(64)[1040056] "temp"
                  const-val low[1995762]:int(64)[13] "temp"
                  (1995767 'move' low[1995762](1995764 '.v' _iterator[1977907] F0_low[2014903]))
                  (1995327 call _build_tuple[1040014] low[1995762] call_tmp[1995316] ret_tmp[1995324])
                  (1995331 'move' tmp[1995300] ret_tmp[1995324])
                  (1995334 'move' tmp[1995237] tmp[1995300])
                }
                (1995338 '=' tmp[1995235] tmp[1995237])
                (1995341 'noop')
                1
                ref call_tmp[1995343]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1995345 'move' call_tmp[1995343](1995347 '.' tmp[1995235] x0[1040052]))
                const-val start[1995350]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1995352]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1995354 'move' coerce_tmp[1995352](1995356 'deref' call_tmp[1995343]))
                (1995358 '=' start[1995350] coerce_tmp[1995352])
                (1995361 'noop')
                ref call_tmp[1995362]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1995364 'move' call_tmp[1995362](1995366 '.' tmp[1995235] x1[1040054]))
                const-val end[1995369]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1995371]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1995373 'move' coerce_tmp[1995371](1995375 'deref' call_tmp[1995362]))
                (1995377 '=' end[1995369] coerce_tmp[1995371])
                (1995380 'noop')
                val _indexOfInterest[1995381]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1995383]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1995385]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1995387]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                (1995390 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1995352] coerce_tmp[1995371] ret_tmp[1995387])
                (1995394 'move' call_tmp[1995385] ret_tmp[1995387])
                (1995397 'move' _iterator[1995383](1995400 call _getIterator[1103301] call_tmp[1995385]))
                {
                  val ret[1995403]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                  val call_tmp[1995405]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1995408 call chpl_range_check_stride[1102844])
                  val i[1995409]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1995411]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1995413 'move' i[1995409] 0)
                  val call_tmp[1995416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1995418]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1995420]:int(64)[13] "temp"
                  (1995422 'move' low[1995420](1995424 '.v' _iterator[1995383] F0_low[2016401]))
                  (1995427 'move' default_arg_first[1995418](1995430 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1995420]))
                  const-val default_arg_last[1995432]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1995434]:int(64)[13] "temp"
                  (1995436 'move' high[1995434](1995438 '.v' _iterator[1995383] F1_high[2016405]))
                  (1995441 'move' default_arg_last[1995432](1995444 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1995434]))
                  const-val _return_tmp_[1995446]:bool[10] "dead after last mention" "temp"
                  const-val low[1995448]:int(64)[13] "temp"
                  (1995450 'move' low[1995448](1995452 '.v' _iterator[1995383] F0_low[2016401]))
                  const-val high[1995455]:int(64)[13] "temp"
                  (1995457 'move' high[1995455](1995459 '.v' _iterator[1995383] F1_high[2016405]))
                  (1995462 'move' _return_tmp_[1995446](1995465 call chpl_checkIfRangeIterWillOverflow[1096076] low[1995448] high[1995455] 1 default_arg_first[1995418] default_arg_last[1995432] 1))
                  CForLoop[1995472] hazard
                  {
                    const-val yret[1995501]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1995503 'move' yret[1995501] i[1995409])
                    const-val _yieldedIndex[1995506]:int(64)[13] "temp"
                    (1995508 'move' _yieldedIndex[1995506] i[1995409])
                    {
                      const-val i[1995512]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1995514 'move' i[1995512] _yieldedIndex[1995506])
                      const-val yret[1995517]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1995519 'move' yret[1995517] _yieldedIndex[1995506])
                      const-val _yieldedIndex[1995547]:int(64)[13] "temp"
                      (1995711 'move' _yieldedIndex[1995547] _yieldedIndex[1995506])
                      {
                        const-val i[1995549]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1995551 'move' i[1995549] _yieldedIndex[1995547])
                        const-val yret[1995554]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1995556 'move' yret[1995554] _yieldedIndex[1995547])
                        const-val _yieldedIndex[1995559]:int(64)[13] "temp"
                        (1995561 'move' _yieldedIndex[1995559] _yieldedIndex[1995547])
                        {
                          const-val slot[1995565]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1995567 'move' slot[1995565] _yieldedIndex[1995559])
                          const-val yret[1995570]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1995572 'move' yret[1995570] _yieldedIndex[1995559])
                          const-val _yieldedIndex[1995575]:int(64)[13] "temp"
                          (1995577 'move' _yieldedIndex[1995575] _yieldedIndex[1995559])
                          {
                            const-val slot[1995581]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1995583 'move' slot[1995581] _yieldedIndex[1995575])
                            const-val yret[1995586]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1995588 'move' yret[1995586] _yieldedIndex[1995575])
                            const-val _yieldedIndex[1995591]:int(64)[13] "temp"
                            (1995593 'move' _yieldedIndex[1995591] _yieldedIndex[1995575])
                            {
                              const-val slot[1995597]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1995599 'move' slot[1995597] _yieldedIndex[1995591])
                              ref call_tmp[1995602]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead after last mention" "maybe param" "temp"
                              ref this[1995604]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
                              (1995606 'move' this[1995604](1995608 '.v' _iterator[1288575] F0_this[2019226]))
                              (1995611 'move' call_tmp[1995602](1995614 call table[1265069] this[1995604]))
                              const-val call_tmp[1995616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1995618 'move' call_tmp[1995616](1995621 call isSlotFull[1290123] call_tmp[1995602] _yieldedIndex[1995591]))
                              const-val call_tmp[1995624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1995626 'move' call_tmp[1995624] call_tmp[1995616])
                              if call_tmp[1995616]
                              {
                                val yret[1995631]:BaseArr[149541] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1995633]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead after last mention" "maybe param" "temp"
                                ref this[1995635]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
                                (1995637 'move' this[1995635](1995639 '.v' _iterator[1288575] F0_this[2019226]))
                                (1995642 'move' call_tmp[1995633](1995645 call table[1265069] this[1995635]))
                                ref call_tmp[1995647]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208480] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1995649]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208503] "dead after last mention" "temp"
                                (1995651 'move' _this_tmp_[1995649](1995654 call table[1247840] call_tmp[1995633]))
                                val coerce_tmp[1995656]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208494] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1995658 'move' coerce_tmp[1995656](1995660 'deref' _this_tmp_[1995649]))
                                (1995662 'move' call_tmp[1995647](1995665 call this[1250390] coerce_tmp[1995656] slot[1995597]))
                                ref call_tmp[1995668]:_ref(BaseArr)[1208317] "dead after last mention" "maybe param" "temp"
                                (1995670 'move' call_tmp[1995668](1995673 call key[1267254] call_tmp[1995647]))
                                val _yieldedIndex[1995675]:BaseArr[149541] "temp"
                                (1995677 'move' _yieldedIndex[1995675](1995679 'deref' call_tmp[1995668]))
                                {
                                  const e[1995682]:BaseArr[149541] "concurrently accessed" "const" "index var" "insert auto destroy"
                                  (1995684 'move' e[1995682] _yieldedIndex[1995675])
                                  {
                                    const-val tmp[1995688]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1995690]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1995692 'move' call_tmp[1995690](1995694 '_wide_get_locale' e[1995682]))
                                    (1995696 'move' tmp[1995688] call_tmp[1995690])
                                    val rvfDerefTmp[2084231]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "concurrently accessed" "temp"
                                    (2084234 'move' rvfDerefTmp[2084231] arrType[1288518])
                                    val rhs_data[2084237]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
                                    (2084239 call chpl__serialize[1796336] rhs[1288456] rhs_data[2084237])
                                    val isdirect[2093034]:bool[10] "temp"
                                    (2093039 'move' isdirect[2093034](2093036 call chpl_doDirectExecuteOn[187423] tmp[1995688]))
                                    if isdirect[2093034]
                                    {
                                      (2093043 call on_fn[1288628] e[1995682] rvfDerefTmp[2084231] rhs_data[2084237] idxType[1288546])
                                    }
                                    {
                                      val _args_foron_fn[2093067]:_class_localson_fn[2093053] "temp"
                                      (2093071 'move' _args_foron_fn[2093067](2093069 'stack allocate class' _class_localson_fn[2093053]))
                                      (2093073 '.=' _args_foron_fn[2093067] _0_tmp[2093056] tmp[1995688])
                                      (2093077 '.=' _args_foron_fn[2093067] _1_e[2093058] e[1995682])
                                      (2093081 '.=' _args_foron_fn[2093067] _2_rvfDerefTmp[2093060] rvfDerefTmp[2084231])
                                      (2093085 '.=' _args_foron_fn[2093067] _3_rhs_data[2093062] rhs_data[2084237])
                                      ref tmp[2093089]:int(64)[13] "temp"
                                      (2093093 'move' tmp[2093089](2093091 'set reference' idxType[1288546]))
                                      (2093095 '.=' _args_foron_fn[2093067] _4_idxType[2093064] tmp[2093089])
                                      val _args_vforon_fn[2093099]:c_void_ptr[149] "temp"
                                      (2093103 'move' _args_vforon_fn[2093099](2093101 'cast_to_void_star' _args_foron_fn[2093067]))
                                      val _args_sizeon_fn[2093105]:int(64)[13] "temp"
                                      (2093109 'move' _args_sizeon_fn[2093105](2093107 'sizeof_bundle' _class_localson_fn[2093053]))
                                      on(2093165 call wrapon_fn[2093111] tmp[1995688] _args_vforon_fn[2093099] _args_sizeon_fn[2093105] _args_foron_fn[2093067])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1995707]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1995474]:int(64)[13] "temp"
                      (1995476 'move' low[1995474](1995478 '.v' _iterator[1995383] F0_low[2016401]))
                      (1995481 '=' i[1995409] low[1995474])
                    }
                    {
                      const-val high[1995485]:int(64)[13] "temp"
                      (1995487 'move' high[1995485](1995489 '.v' _iterator[1995383] F1_high[2016405]))
                      (1995492 '<=' i[1995409] high[1995485])
                    }
                    {
                      val call_tmp[1995496]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1995498 '+=' i[1995409] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1995535]
                }
                (1995538 call _freeIterator[1103474] _iterator[1995383])
                (1995541 call chpl__autoDestroy[1534672] tmp[1995235])
                label _endchpl_direct_counted_range_iter_helper[1995543]
              }
              (1978002 call _freeIterator[1103724] _iterator[1977907])
              label _endchpl_direct_counted_range_iter[1978004]
            }
            (1978007 call _freeIterator[1103974] _iterator[1977876])
            label _end_allSlots[1978009]
          }
          (1978012 call _freeIterator[1223144] _iterator[1977840])
          label _endallSlots[1978014]
        }
        (1917745 call _freeIterator[1290057] _iterator[1917637])
        label _endthese[1917747]
      }
      label _breakLabel[1288877]
      (1847580 call _freeIterator[1290403] _iterator[1288575])
    }
    const-val call_tmp[1288879]:1*range(int(64),bounded,false)[1244696] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1837052]:1*range(int(64),bounded,false)[1244696] "temp"
    (1288887 call getIndices[1296773] rhs[1288456] ret_tmp[1837052])
    (1837055 'move' call_tmp[1288879] ret_tmp[1837052])
    (1288892 call dsiSetIndices[1251308] lhs[1288454] call_tmp[1288879])
    (1847582 call chpl__autoDestroy[1555015] call_tmp[1288879])
    {
      val _indexOfInterest[1288896]:BaseArr[149541] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1288898]:_ic_these__ref_chpl__simpleSet_BaseArr[1290219] "dead at end of block" "expr temp" "temp"
      ref call_tmp[1288900]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1297590]:BaseDom[146725] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1297596 'move' coerce_tmp[1297590](1297592 'cast' BaseDom[146725] lhs[1288454]))
      (1288902 'move' call_tmp[1288900](1288905 call _arrs[801389] coerce_tmp[1297590]))
      (1288908 'move' _iterator[1288898](1288911 call _getIterator[1289384] call_tmp[1288900]))
      {
        val ret[1917803]:_ir_these__ref_chpl__simpleSet_BaseArr[1290225] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1917805]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1917807]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289645] "dead at end of block" "expr temp" "temp"
        ref call_tmp[1917809]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead at end of block" "maybe param" "temp"
        ref this[1917983]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
        (1917988 'move' this[1917983](1917985 '.v' _iterator[1288898] F0_this[2019226]))
        (1917811 'move' call_tmp[1917809](1917814 call table[1265069] this[1917983]))
        const-val call_tmp[1917816]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1917818]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "temp"
        (1917821 call allSlots[1289554] call_tmp[1917809] ret_tmp[1917818])
        (1917824 'move' call_tmp[1917816] ret_tmp[1917818])
        (1917827 'move' _iterator[1917807](1917830 call _getIterator[1289660] call_tmp[1917816]))
        {
          val ret[1978144]:_ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289651] "dead after last mention" "RVV" "temp"
          val _indexOfInterest[1978146]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1978148]:_ic__allSlots[1221600] "dead at end of block" "expr temp" "temp"
          ref call_tmp[1978150]:_ref(int(64))[936572] "dead at end of block" "maybe param" "temp"
          ref this[1978476]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "temp"
          (1978481 'move' this[1978476](1978478 '.v' _iterator[1917807] F0_this[2019686]))
          (1978152 'move' call_tmp[1978150](1978155 call tableSize[1247868] this[1978476]))
          const-val call_tmp[1978157]:_ir__allSlots[1221606] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1978159]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (1978161 'move' coerce_tmp[1978159](1978163 'deref' call_tmp[1978150]))
          const-val ret_tmp[1978165]:_ir__allSlots[1221606] "temp"
          (1978168 call _allSlots[201266] coerce_tmp[1978159] ret_tmp[1978165])
          (1978171 'move' call_tmp[1978157] ret_tmp[1978165])
          (1978174 'move' _iterator[1978148](1978177 call _getIterator[1221615] call_tmp[1978157]))
          {
            val ret[1978180]:_ir__allSlots[1221606] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[1978182]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1978184]:_ic_chpl_direct_counted_range_iter[1103790] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1978186]:_ir_chpl_direct_counted_range_iter[1103796] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1978188]:_ir_chpl_direct_counted_range_iter[1103796] "temp"
            const-val size[1978190]:int(64)[13] "temp"
            (1978192 'move' size[1978190](1978194 '.v' _iterator[1978148] F0_size[2006597]))
            (1978198 call chpl_direct_counted_range_iter[457996] 0 size[1978190] ret_tmp[1978188])
            (1978202 'move' call_tmp[1978186] ret_tmp[1978188])
            (1978205 'move' _iterator[1978184](1978208 call _getIterator[1103805] call_tmp[1978186]))
            {
              val ret[1978211]:_ir_chpl_direct_counted_range_iter[1103796] "dead after last mention" "RVV" "temp"
              val _indexOfInterest[1978213]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1978215]:_ic_chpl_direct_counted_range_iter_helper[1103540] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1978217]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1978219]:_ir_chpl_direct_counted_range_iter_helper[1103546] "temp"
              const-val low[1978221]:int(64)[13] "temp"
              (1978223 'move' low[1978221](1978225 '.v' _iterator[1978184] F0_low[2010431]))
              const-val count[1978228]:int(64)[13] "temp"
              (1978230 'move' count[1978228](1978232 '.v' _iterator[1978184] F1_count[2010435]))
              (1978236 call chpl_direct_counted_range_iter_helper[1102098] low[1978221] count[1978228] ret_tmp[1978219])
              (1978240 'move' call_tmp[1978217] ret_tmp[1978219])
              (1978243 'move' _iterator[1978215](1978246 call _getIterator[1103555] call_tmp[1978217]))
              {
                val ret[1995770]:_ir_chpl_direct_counted_range_iter_helper[1103546] "dead after last mention" "RVV" "temp"
                val call_tmp[1995772]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1995774]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1995776]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1995778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1996312]:int(64)[13] "temp"
                (1996317 'move' count[1996312](1996314 '.v' _iterator[1978215] F1_count[2014907]))
                (1995780 'move' call_tmp[1995778](1995783 call <[948398] count[1996312]))
                (1995785 'move' tmp[1995776] call_tmp[1995778])
                (1995788 'move' tmp[1995774] call_tmp[1995778])
                const-val call_tmp[1995791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1995793 'move' call_tmp[1995791] call_tmp[1995778])
                if call_tmp[1995778]
                {
                  (1995799 call boundsCheckHalt[210167] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1995802]:2*int(64)[1040056] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1995804]:2*int(64)[1040056] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1995806]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1995808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1996319]:int(64)[13] "temp"
                (1996324 'move' count[1996319](1996321 '.v' _iterator[1978215] F1_count[2014907]))
                (1995810 'move' call_tmp[1995808](1995813 call ==[435628] count[1996319] 0))
                (1995816 'move' tmp[1995806] call_tmp[1995808])
                if call_tmp[1995808]
                {
                  const-val tmp[1995821]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1995823]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1995825]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1996326]:int(64)[13] "temp"
                  (1996331 'move' low[1996326](1996328 '.v' _iterator[1978215] F0_low[2014903]))
                  (1995827 'move' call_tmp[1995825](1995830 call _cast[956034] low[1996326]))
                  const-val call_tmp[1995832]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1995834]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1995836 'move' coerce_tmp[1995834](1995838 'cast' uint(64)[115] 1))
                  (1995841 'move' call_tmp[1995832](1995844 call -[962193] call_tmp[1995825]))
                  const-val call_tmp[1995846]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1995848 'move' call_tmp[1995846](1995851 call _cast[953543] call_tmp[1995832]))
                  const-val ret_tmp[1995853]:2*int(64)[1040056] "temp"
                  const-val low[1996333]:int(64)[13] "temp"
                  (1996338 'move' low[1996333](1996335 '.v' _iterator[1978215] F0_low[2014903]))
                  (1995856 call _build_tuple[1040014] low[1996333] call_tmp[1995846] ret_tmp[1995853])
                  (1995860 'move' tmp[1995821] ret_tmp[1995853])
                  (1995863 'move' tmp[1995804] tmp[1995821])
                }
                {
                  const-val tmp[1995867]:2*int(64)[1040056] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1995869]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1995871]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1996340]:int(64)[13] "temp"
                  (1996345 'move' count[1996340](1996342 '.v' _iterator[1978215] F1_count[2014907]))
                  (1995873 'move' call_tmp[1995871] count[1996340])
                  const-val call_tmp[1995876]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1996347]:int(64)[13] "temp"
                  (1996352 'move' count[1996347](1996349 '.v' _iterator[1978215] F1_count[2014907]))
                  (1995878 'move' call_tmp[1995876](1995881 call -[962226] count[1996347]))
                  const-val call_tmp[1995883]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1996354]:int(64)[13] "temp"
                  (1996359 'move' low[1996354](1996356 '.v' _iterator[1978215] F0_low[2014903]))
                  (1995885 'move' call_tmp[1995883](1995888 call +[439636] low[1996354] call_tmp[1995876]))
                  const-val ret_tmp[1995891]:2*int(64)[1040056] "temp"
                  const-val low[1996361]:int(64)[13] "temp"
                  (1996366 'move' low[1996361](1996363 '.v' _iterator[1978215] F0_low[2014903]))
                  (1995894 call _build_tuple[1040014] low[1996361] call_tmp[1995883] ret_tmp[1995891])
                  (1995898 'move' tmp[1995867] ret_tmp[1995891])
                  (1995901 'move' tmp[1995804] tmp[1995867])
                }
                (1995905 '=' tmp[1995802] tmp[1995804])
                (1995908 'noop')
                1
                ref call_tmp[1995910]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1995912 'move' call_tmp[1995910](1995914 '.' tmp[1995802] x0[1040052]))
                const-val start[1995917]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1995919]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1995921 'move' coerce_tmp[1995919](1995923 'deref' call_tmp[1995910]))
                (1995925 '=' start[1995917] coerce_tmp[1995919])
                (1995928 'noop')
                ref call_tmp[1995929]:_ref(int(64))[936572] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1995931 'move' call_tmp[1995929](1995933 '.' tmp[1995802] x1[1040054]))
                const-val end[1995936]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1995938]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1995940 'move' coerce_tmp[1995938](1995942 'deref' call_tmp[1995929]))
                (1995944 '=' end[1995936] coerce_tmp[1995938])
                (1995947 'noop')
                val _indexOfInterest[1995948]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1995950]:_ic_chpl_direct_param_stride_range_iter[1103286] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1995952]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1995954]:_ir_chpl_direct_param_stride_range_iter[1103292] "temp"
                (1995957 call chpl_direct_param_stride_range_iter[1102524] coerce_tmp[1995919] coerce_tmp[1995938] ret_tmp[1995954])
                (1995961 'move' call_tmp[1995952] ret_tmp[1995954])
                (1995964 'move' _iterator[1995950](1995967 call _getIterator[1103301] call_tmp[1995952]))
                {
                  val ret[1995970]:_ir_chpl_direct_param_stride_range_iter[1103292] "dead after last mention" "RVV" "temp"
                  val call_tmp[1995972]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1995975 call chpl_range_check_stride[1102844])
                  val i[1995976]:int(64)[13] "dead at end of block" "insert auto destroy"
                  val call_tmp[1995978]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  (1995980 'move' i[1995976] 0)
                  val call_tmp[1995983]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val default_arg_first[1995985]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val low[1995987]:int(64)[13] "temp"
                  (1995989 'move' low[1995987](1995991 '.v' _iterator[1995950] F0_low[2016401]))
                  (1995994 'move' default_arg_first[1995985](1995997 call chpl_checkIfRangeIterWillOverflow_default_first[1103198] low[1995987]))
                  const-val default_arg_last[1995999]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                  const-val high[1996001]:int(64)[13] "temp"
                  (1996003 'move' high[1996001](1996005 '.v' _iterator[1995950] F1_high[2016405]))
                  (1996008 'move' default_arg_last[1995999](1996011 call chpl_checkIfRangeIterWillOverflow_default_last[1103226] high[1996001]))
                  const-val _return_tmp_[1996013]:bool[10] "dead after last mention" "temp"
                  const-val low[1996015]:int(64)[13] "temp"
                  (1996017 'move' low[1996015](1996019 '.v' _iterator[1995950] F0_low[2016401]))
                  const-val high[1996022]:int(64)[13] "temp"
                  (1996024 'move' high[1996022](1996026 '.v' _iterator[1995950] F1_high[2016405]))
                  (1996029 'move' _return_tmp_[1996013](1996032 call chpl_checkIfRangeIterWillOverflow[1096076] low[1996015] high[1996022] 1 default_arg_first[1995985] default_arg_last[1995999] 1))
                  CForLoop[1996039] hazard
                  {
                    const-val yret[1996068]:int(64)[13] "dead after last mention" "YVV" "temp"
                    (1996070 'move' yret[1996068] i[1995976])
                    const-val _yieldedIndex[1996073]:int(64)[13] "temp"
                    (1996075 'move' _yieldedIndex[1996073] i[1995976])
                    {
                      const-val i[1996079]:int(64)[13] "const" "index var" "insert auto destroy"
                      (1996081 'move' i[1996079] _yieldedIndex[1996073])
                      const-val yret[1996084]:int(64)[13] "dead after last mention" "YVV" "temp"
                      (1996086 'move' yret[1996084] _yieldedIndex[1996073])
                      const-val _yieldedIndex[1996114]:int(64)[13] "temp"
                      (1996310 'move' _yieldedIndex[1996114] _yieldedIndex[1996073])
                      {
                        const-val i[1996116]:int(64)[13] "const" "index var" "insert auto destroy"
                        (1996118 'move' i[1996116] _yieldedIndex[1996114])
                        const-val yret[1996121]:int(64)[13] "dead after last mention" "YVV" "temp"
                        (1996123 'move' yret[1996121] _yieldedIndex[1996114])
                        const-val _yieldedIndex[1996126]:int(64)[13] "temp"
                        (1996128 'move' _yieldedIndex[1996126] _yieldedIndex[1996114])
                        {
                          const-val slot[1996132]:int(64)[13] "const" "index var" "insert auto destroy"
                          (1996134 'move' slot[1996132] _yieldedIndex[1996126])
                          const-val yret[1996137]:int(64)[13] "dead after last mention" "YVV" "temp"
                          (1996139 'move' yret[1996137] _yieldedIndex[1996126])
                          const-val _yieldedIndex[1996142]:int(64)[13] "temp"
                          (1996144 'move' _yieldedIndex[1996142] _yieldedIndex[1996126])
                          {
                            const-val slot[1996148]:int(64)[13] "const" "index var" "insert auto destroy"
                            (1996150 'move' slot[1996148] _yieldedIndex[1996142])
                            const-val yret[1996153]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1996155 'move' yret[1996153] _yieldedIndex[1996142])
                            const-val _yieldedIndex[1996158]:int(64)[13] "temp"
                            (1996160 'move' _yieldedIndex[1996158] _yieldedIndex[1996142])
                            {
                              const-val slot[1996164]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1996166 'move' slot[1996164] _yieldedIndex[1996158])
                              ref call_tmp[1996169]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead after last mention" "maybe param" "temp"
                              ref this[1996171]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
                              (1996173 'move' this[1996171](1996175 '.v' _iterator[1288898] F0_this[2019226]))
                              (1996178 'move' call_tmp[1996169](1996181 call table[1265069] this[1996171]))
                              const-val call_tmp[1996183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1996185 'move' call_tmp[1996183](1996188 call isSlotFull[1290123] call_tmp[1996169] _yieldedIndex[1996158]))
                              const-val call_tmp[1996191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                              (1996193 'move' call_tmp[1996191] call_tmp[1996183])
                              if call_tmp[1996183]
                              {
                                val yret[1996198]:BaseArr[149541] "dead after last mention" "YVV" "temp"
                                ref call_tmp[1996200]:_ref(chpl__hashtable(unmanaged BaseArr,nothing))[1208437] "dead after last mention" "maybe param" "temp"
                                ref this[1996202]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "temp"
                                (1996204 'move' this[1996202](1996206 '.v' _iterator[1288898] F0_this[2019226]))
                                (1996209 'move' call_tmp[1996200](1996212 call table[1265069] this[1996202]))
                                ref call_tmp[1996214]:_ref(chpl_TableEntry(unmanaged BaseArr,nothing))[1208480] "dead after last mention" "maybe param" "temp"
                                ref _this_tmp_[1996216]:_ref(_ddata(chpl_TableEntry(unmanaged BaseArr,nothing)))[1208503] "dead after last mention" "temp"
                                (1996218 'move' _this_tmp_[1996216](1996221 call table[1247840] call_tmp[1996200]))
                                val coerce_tmp[1996223]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208494] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                (1996225 'move' coerce_tmp[1996223](1996227 'deref' _this_tmp_[1996216]))
                                (1996229 'move' call_tmp[1996214](1996232 call this[1250390] coerce_tmp[1996223] slot[1996164]))
                                ref call_tmp[1996235]:_ref(BaseArr)[1208317] "dead after last mention" "maybe param" "temp"
                                (1996237 'move' call_tmp[1996235](1996240 call key[1267254] call_tmp[1996214]))
                                val _yieldedIndex[1996242]:BaseArr[149541] "temp"
                                (1996244 'move' _yieldedIndex[1996242](1996246 'deref' call_tmp[1996235]))
                                {
                                  const e[1996249]:BaseArr[149541] "const" "index var" "insert auto destroy"
                                  (1996251 'move' e[1996249] _yieldedIndex[1996242])
                                  {
                                    val call_tmp[1996255]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                                    val call_tmp[1996257]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
                                    val coerce_tmp[1996259]:BaseArr[149541] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                                    (1996261 'move' coerce_tmp[1996259] e[1996249])
                                    (1996264 'move' call_tmp[1996257](1996267 call _cast[1290716] coerce_tmp[1996259]))
                                    val eCastQ[1996269]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy"
                                    (1996271 'move' eCastQ[1996269](1996274 call chpl__initCopy[1290924] call_tmp[1996257]))
                                    val call_tmp[1996276]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
                                    (1996278 'move' call_tmp[1996276](1996281 call postfix![1296485] eCastQ[1996269]))
                                    val eCast[1996283]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy"
                                    (1996285 'move' eCast[1996283](1996288 call chpl__initCopy[1289341] call_tmp[1996276]))
                                    const-val tmp[1996290]:chpl_localeID_t[209294] "dead after last mention" "const" "temp"
                                    const-val call_tmp[1996292]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1996294 'move' call_tmp[1996292](1996296 '_wide_get_locale' e[1996249]))
                                    (1996298 'move' tmp[1996290] call_tmp[1996292])
                                    val rvfDerefTmp[2084271]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "concurrently accessed" "temp"
                                    (2084274 'move' rvfDerefTmp[2084271] eCast[1996283])
                                    val isdirect[2093170]:bool[10] "temp"
                                    (2093175 'move' isdirect[2093170](2093172 call chpl_doDirectExecuteOn[187423] tmp[1996290]))
                                    if isdirect[2093170]
                                    {
                                      (2093179 call on_fn[1288987] rvfDerefTmp[2084271])
                                    }
                                    {
                                      val _args_foron_fn[2093194]:_class_localson_fn[2093186] "temp"
                                      (2093198 'move' _args_foron_fn[2093194](2093196 'stack allocate class' _class_localson_fn[2093186]))
                                      (2093200 '.=' _args_foron_fn[2093194] _0_tmp[2093189] tmp[1996290])
                                      (2093204 '.=' _args_foron_fn[2093194] _1_rvfDerefTmp[2093191] rvfDerefTmp[2084271])
                                      val _args_vforon_fn[2093208]:c_void_ptr[149] "temp"
                                      (2093212 'move' _args_vforon_fn[2093208](2093210 'cast_to_void_star' _args_foron_fn[2093194]))
                                      val _args_sizeon_fn[2093214]:int(64)[13] "temp"
                                      (2093218 'move' _args_sizeon_fn[2093214](2093216 'sizeof_bundle' _class_localson_fn[2093186]))
                                      on(2093250 call wrapon_fn[2093220] tmp[1996290] _args_vforon_fn[2093208] _args_sizeon_fn[2093214] _args_foron_fn[2093194])
                                    }
                                    {
                                    }
                                  }
                                  label _continueLabel[1996306]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    {
                      const-val low[1996041]:int(64)[13] "temp"
                      (1996043 'move' low[1996041](1996045 '.v' _iterator[1995950] F0_low[2016401]))
                      (1996048 '=' i[1995976] low[1996041])
                    }
                    {
                      const-val high[1996052]:int(64)[13] "temp"
                      (1996054 'move' high[1996052](1996056 '.v' _iterator[1995950] F1_high[2016405]))
                      (1996059 '<=' i[1995976] high[1996052])
                    }
                    {
                      val call_tmp[1996063]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                      (1996065 '+=' i[1995976] 1)
                    }
                  }
                  label _endchpl_direct_param_stride_range_iter[1996102]
                }
                (1996105 call _freeIterator[1103474] _iterator[1995950])
                (1996108 call chpl__autoDestroy[1534672] tmp[1995802])
                label _endchpl_direct_counted_range_iter_helper[1996110]
              }
              (1978310 call _freeIterator[1103724] _iterator[1978215])
              label _endchpl_direct_counted_range_iter[1978312]
            }
            (1978315 call _freeIterator[1103974] _iterator[1978184])
            label _end_allSlots[1978317]
          }
          (1978320 call _freeIterator[1223144] _iterator[1978148])
          label _endallSlots[1978322]
        }
        (1917915 call _freeIterator[1290057] _iterator[1917807])
        label _endthese[1917917]
      }
      label _breakLabel[1289005]
      (1847588 call _freeIterator[1290403] _iterator[1288898])
    }
    (1289029 return _void[55])
  }
  function on_fn[935152](const in arg this[1806878]:BaseDist[145926], ref arg free_dist[1806880]:_ref(bool)[937199]) : void[4] "on" "resolved"
  {
    {
      val dom_count[145481]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543519 'move' dom_count[145481] -1)
      {
        {
          ref call_tmp[667423]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667426 'move' call_tmp[667423](360449 call _domsLock[801253] this[1806878]))
          (145491 call lock[187277] call_tmp[667423])
          ref call_tmp[667432]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
          (667435 'move' call_tmp[667432](385380 call _free_when_no_doms[801279] this[1806878]))
          (145496 call =[435174] call_tmp[667432] 1)
          ref call_tmp[667439]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "dead after last mention" "maybe param" "temp"
          (667442 'move' call_tmp[667439](360454 call _doms[801227] this[1806878]))
          const-val call_tmp[667446]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667449 'move' call_tmp[667446](145501 call size[1449336] call_tmp[667439]))
          (145504 call =[435327] dom_count[145481] call_tmp[667446])
          ref call_tmp[667453]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667456 'move' call_tmp[667453](360459 call _domsLock[801253] this[1806878]))
          (145512 call unlock[187369] call_tmp[667453])
        }
        (145516 'local block')
      }
      const-val call_tmp[667460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667463 'move' call_tmp[667460](145519 call ==[435628] dom_count[145481] 0))
      const-val call_tmp[667465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667468 'move' call_tmp[667465] call_tmp[667460])
      if call_tmp[667465]
      {
        (145523 call =[435174] free_dist[1806880] 1)
      }
    }
    (935159 return _void[55])
  }
  function on_fn[935161](const in arg this[1806882]:BaseDist[145926], const in arg x[1806884]:BaseDom[146725], ref arg count[1806886]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    {
      val cnt[145594]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543523 'move' cnt[145594] -1)
      {
        {
          ref call_tmp[667497]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667500 'move' call_tmp[667497](360464 call _domsLock[801253] this[1806882]))
          (145604 call lock[187277] call_tmp[667497])
          ref call_tmp[667506]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "dead after last mention" "maybe param" "temp"
          (667509 'move' call_tmp[667506](360469 call _doms[801227] this[1806882]))
          (145613 call remove[1445355] call_tmp[667506] x[1806884])
          ref call_tmp[667515]:_ref(chpl__simpleSet(unmanaged BaseDom))[1208651] "dead after last mention" "maybe param" "temp"
          (667518 'move' call_tmp[667515](360474 call _doms[801227] this[1806882]))
          const-val call_tmp[667522]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667525 'move' call_tmp[667522](145617 call size[1449336] call_tmp[667515]))
          (145620 call =[435327] cnt[145594] call_tmp[667522])
          ref call_tmp[667529]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
          (667532 'move' call_tmp[667529](385395 call _free_when_no_doms[801279] this[1806882]))
          const-val call_tmp[667534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1449377]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1449381 'move' coerce_tmp[1449377](1449379 'deref' call_tmp[667529]))
          (667537 'move' call_tmp[667534](145624 call ![7494] coerce_tmp[1449377]))
          const-val call_tmp[667539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (667542 'move' call_tmp[667539] call_tmp[667534])
          if call_tmp[667539]
          {
            (145628 call +=[451315] cnt[145594] 1)
          }
          ref call_tmp[667546]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667549 'move' call_tmp[667546](360479 call _domsLock[801253] this[1806882]))
          (145641 call unlock[187369] call_tmp[667546])
        }
        (145645 'local block')
      }
      (145648 call =[435327] count[1806886] cnt[145594])
    }
    (935168 return _void[55])
  }
  function on_fn[935179](const in arg this[1806888]:BaseDom[146725], ref arg free_dom[1806890]:_ref(bool)[937199], const in arg dist[1806892]:BaseDist[145926], ref arg remove_dist[1806894]:_ref(bool)[937199]) : void[4] "on" "resolved"
  {
    {
      val arr_count[146142]:int(64)[13] "dead at end of block" "insert auto destroy"
      (543539 'move' arr_count[146142] 0)
      {
        {
          ref call_tmp[667645]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667648 'move' call_tmp[667645](360501 call _arrsLock[801441] this[1806888]))
          (146152 call lock[187277] call_tmp[667645])
          ref call_tmp[667654]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "maybe param" "temp"
          (667657 'move' call_tmp[667654](360506 call _arrs[801389] this[1806888]))
          const-val call_tmp[667661]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (667664 'move' call_tmp[667661](146157 call size[1444148] call_tmp[667654]))
          (146160 call =[435327] arr_count[146142] call_tmp[667661])
          ref call_tmp[667668]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (667671 'move' call_tmp[667668](385440 call _arrs_containing_dom[801415] this[1806888]))
          const-val coerce_tmp[1445282]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1445286 'move' coerce_tmp[1445282](1445284 'deref' call_tmp[667668]))
          (146165 call +=[451315] arr_count[146142] coerce_tmp[1445282])
          ref call_tmp[667675]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
          (667678 'move' call_tmp[667675](385445 call _free_when_no_arrs[801467] this[1806888]))
          (146170 call =[435174] call_tmp[667675] 1)
          ref call_tmp[667682]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (667685 'move' call_tmp[667682](360511 call _arrsLock[801441] this[1806888]))
          (146178 call unlock[187369] call_tmp[667682])
        }
        (146182 'local block')
      }
      const-val call_tmp[667689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667692 'move' call_tmp[667689](146185 call ==[435628] arr_count[146142] 0))
      const-val call_tmp[667694]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (667697 'move' call_tmp[667694] call_tmp[667689])
      if call_tmp[667694]
      {
        (146189 call =[435174] free_dom[1806890] 1)
        const-val call_tmp[667701]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val _virtual_method_tmp_[1800817]:int(32)[95] "temp"
        (1800821 'move' _virtual_method_tmp_[1800817](1800819 'getcid' this[1806888]))
        (667704 'move' call_tmp[667701](146195 'virtual method call' dsiLinksDistribution[146637] _virtual_method_tmp_[1800817] this[1806888]))
        const-val call_tmp[667706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (667709 'move' call_tmp[667706] call_tmp[667701])
        if call_tmp[667706]
        {
          val call_tmp[667713]:BaseDom[146725] "dead after last mention" "expr temp" "maybe param" "temp"
          (667716 'move' call_tmp[667713](146206 call _to_unmanaged[1445296] this[1806888]))
          const-val call_tmp[667718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[1445339]:BaseDist[145926] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[1807618]:BaseDist[145926] "temp"
          (1807621 'move' tmp[1807618] dist[1806892])
          (1445344 'move' coerce_tmp[1445339] tmp[1807618])
          (667721 'move' call_tmp[667718](146208 call remove_dom[145579] coerce_tmp[1445339] call_tmp[667713]))
          (146209 call =[435174] remove_dist[1806894] call_tmp[667718])
        }
      }
    }
    (935186 return _void[55])
  }
  function on_fn[1264779](const in arg this[1807226]:BaseDom[146725], const in arg x[1807228]:BaseArr[149541]) : void[4] "on" "resolved"
  {
    {
      {
        ref call_tmp[1264794]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
        (1264796 'move' call_tmp[1264794](1264799 call _arrsLock[801441] this[1807226]))
        (1264806 call lock[187277] call_tmp[1264794])
      }
      {
        ref call_tmp[1264817]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "maybe param" "temp"
        (1264819 'move' call_tmp[1264817](1264822 call _arrs[801389] this[1807226]))
        (1264829 call add[1264969] call_tmp[1264817] x[1807228])
      }
      {
        ref call_tmp[1264854]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
        (1264856 'move' call_tmp[1264854](1264859 call _arrsLock[801441] this[1807226]))
        (1264866 call unlock[187369] call_tmp[1264854])
      }
    }
    (1264868 return _void[55])
  }
  function on_fn[1288628](const in arg e[1807230]:BaseArr[149541], const in arg arrType[1807232]:BaseArrOverRectangularDom(1,int(64),false)[1256219], const in arg rhs[1807234]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639], const  ref arg idxType[1807236]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    val rhs[2084244]:domain(1,int(64),false)[1252597] "temp"
    ref rhs[2084245]:domain(1,int(64),false)[1252597] "temp"
    val ds_info[2084251]:_RuntimeTypeInfo[1253673]
    ref tmp[2084254]:domain(1,int(64),false)[1252597] "temp"
    (2084258 'move' tmp[2084254](2084256 'set reference' rhs[2084244]))
    (2084248 call chpl__deserialize[1797174] ds_info[2084251] rhs[1807234] tmp[2084254])
    (2084263 'move' rhs[2084245](2084261 'set reference' rhs[2084244]))
    {
      val call_tmp[1288634]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288640]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[1290905]:BaseArr[149541] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1290910 'move' coerce_tmp[1290905] e[1807230])
      (1288642 'move' call_tmp[1288640](1288645 call _cast[1290716] coerce_tmp[1290905]))
      val eCastQ[1288648]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy"
      (1288650 'move' eCastQ[1288648](1291033 call chpl__initCopy[1290924] call_tmp[1288640]))
      const-val call_tmp[1288654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1291036]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1291041 'move' coerce_tmp[1291036](1291038 'cast' object[22] eCastQ[1288648]))
      (1288656 'move' call_tmp[1288654](1288659 call ==[1146] coerce_tmp[1291036] nil[44]))
      const-val call_tmp[1288662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1288664 'move' call_tmp[1288662] call_tmp[1288654])
      if call_tmp[1288662]
      {
        val call_tmp[1288671]:domain(1,int(64),false)[1250934] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1288694 call halt[1291078] "internal error: " "borrowed domain(1,int(64),false)" " contains an bad array type " "unmanaged BaseArrOverRectangularDom(1,int(64),false)")
      }
      val call_tmp[1288702]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "maybe param" "temp"
      (1288704 'move' call_tmp[1288702](1288707 call postfix![1296485] eCastQ[1288648]))
      val eCast[1288709]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead at end of block" "insert auto destroy"
      (1288711 'move' eCast[1288709](1296756 call chpl__initCopy[1289341] call_tmp[1288702]))
      const-val call_tmp[1288715]:1*range(int(64),bounded,false)[1244696] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1837046]:1*range(int(64),bounded,false)[1244696] "temp"
      (1288723 call getIndices[1296773] rhs[2084245] ret_tmp[1837046])
      (1837049 'move' call_tmp[1288715] ret_tmp[1837046])
      const-val inds[1288724]:1*range(int(64),bounded,false)[1244696] "dead at end of block" "insert auto destroy"
      (1288726 'move' inds[1288724] call_tmp[1288715])
      val tmp[1288730]:1*range(int(64),bounded,false)[1244696] "dead at end of block" "insert auto destroy"
      val call_tmp[1288732]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1288741]:1*range(int(64),bounded,false)[1244696] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val ret_tmp[1835602]:1*range(int(64),bounded,false)[1244696] "temp"
      (1297568 call _defaultOf[1251065] ret_tmp[1835602])
      (1835605 'move' tmp[1288730] ret_tmp[1835602])
      {
        const-val i[1288758]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1288760 'move' i[1288758] 0)
        {
          {
            ref call_tmp[1296952]:_ref(range(int(64),bounded,false))[1026858] "dead at end of block" "maybe param" "temp"
            (1296954 'move' call_tmp[1296952](1297004 '.' inds[1288724] x0[1244694]))
            const-val from[1296959]:range(int(64),bounded,false)[1026814] "dead at end of block" "insert auto destroy"
            (1296961 'move' from[1296959](1297007 'deref' call_tmp[1296952]))
            ref call_tmp[1296967]:_ref(range(int(64),bounded,false))[1026858] "dead after last mention" "maybe param" "temp"
            (1296969 'move' call_tmp[1296967](1297010 '.' tmp[1288730] x0[1244694]))
            val call_tmp[1296974]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val call_tmp[1296983]:range(int(64),bounded,false)[1026814] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1837078]:range(int(64),bounded,false)[1026814] "temp"
            (1296991 call safeCast[1297017] from[1296959] ret_tmp[1837078])
            (1837081 'move' call_tmp[1296983] ret_tmp[1837078])
            (1296994 call =[1251550] call_tmp[1296967] call_tmp[1296983])
            (1847591 call chpl__autoDestroy[1534375] call_tmp[1296983])
            (1847594 call chpl__autoDestroy[1534375] from[1296959])
          }
        }
        label _continueLabel0[1296948]
        label _unused_continueLabel[1288858]
        label _breakLabel[1288860]
      }
      val coerce_tmp[1297559]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1297564 'move' coerce_tmp[1297559] eCast[1288709])
      val _virtual_method_tmp_[1800908]:int(32)[95] "temp"
      (1800912 'move' _virtual_method_tmp_[1800908](1800910 'getcid' coerce_tmp[1297559]))
      (1288866 'virtual method call' dsiReallocate[1297492] _virtual_method_tmp_[1800908] coerce_tmp[1297559] tmp[1288730])
      (1847598 call chpl__autoDestroy[1555015] tmp[1288730])
      (1847601 call chpl__autoDestroy[1555015] inds[1288724])
    }
    (2084265 call chpl__autoDestroy[1797093] rhs[1807234])
    (2084268 call chpl__autoDestroy[1556881] rhs[2084244])
    (1288871 return _void[55])
  }
  function on_fn[1288987](const in arg eCast[1807238]:BaseArrOverRectangularDom(1,int(64),false)[1256219]) : void[4] "on" "resolved"
  {
    val coerce_tmp[1297631]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[1807678]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (1807681 'move' tmp[1807678] eCast[1807238])
    (1297636 'move' coerce_tmp[1297631] tmp[1807678])
    val _virtual_method_tmp_[1800915]:int(32)[95] "temp"
    (1800919 'move' _virtual_method_tmp_[1800915](1800917 'getcid' coerce_tmp[1297631]))
    (1288996 'virtual method call' dsiPostReallocate[1297619] _virtual_method_tmp_[1800915] coerce_tmp[1297631])
    (1288999 return _void[55])
  }
  function on_fn[1442844](const in arg this[1807372]:BaseDom[146725], const in arg x[1807374]:BaseArr[149541], ref arg count[1807376]:_ref(int(64))[936572]) : void[4] "on" "resolved"
  {
    {
      val cnt[1442857]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1442859 'move' cnt[1442857] -1)
      {
        {
          ref call_tmp[1442866]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (1442868 'move' call_tmp[1442866](1442871 call _arrsLock[801441] this[1807372]))
          (1442878 call lock[187277] call_tmp[1442866])
          {
            ref call_tmp[1442889]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "maybe param" "temp"
            (1442891 'move' call_tmp[1442889](1442894 call _arrs[801389] this[1807372]))
            (1442901 call remove[1443047] call_tmp[1442889] x[1807374])
          }
          ref call_tmp[1442917]:_ref(chpl__simpleSet(unmanaged BaseArr))[1208351] "dead after last mention" "maybe param" "temp"
          (1442919 'move' call_tmp[1442917](1442922 call _arrs[801389] this[1807372]))
          const-val call_tmp[1442925]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1442927 'move' call_tmp[1442925](1442930 call size[1444148] call_tmp[1442917]))
          (1442934 call =[435327] cnt[1442857] call_tmp[1442925])
          ref call_tmp[1442939]:_ref(int(64))[936572] "dead after last mention" "maybe param" "temp"
          (1442941 'move' call_tmp[1442939](1442944 call _arrs_containing_dom[801415] this[1807372]))
          const-val coerce_tmp[1444189]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1444193 'move' coerce_tmp[1444189](1444191 'deref' call_tmp[1442939]))
          (1442948 call +=[451315] cnt[1442857] coerce_tmp[1444189])
          ref call_tmp[1442953]:_ref(bool)[937199] "dead after last mention" "maybe param" "temp"
          (1442955 'move' call_tmp[1442953](1442958 call _free_when_no_arrs[801467] this[1807372]))
          const-val call_tmp[1442961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[1444197]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1444201 'move' coerce_tmp[1444197](1444199 'deref' call_tmp[1442953]))
          (1442963 'move' call_tmp[1442961](1442966 call ![7494] coerce_tmp[1444197]))
          const-val call_tmp[1442968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1442970 'move' call_tmp[1442968] call_tmp[1442961])
          if call_tmp[1442968]
          {
            (1442978 call +=[451315] cnt[1442857] 1)
          }
          ref call_tmp[1442984]:_ref(chpl_LocalSpinlock)[941071] "dead after last mention" "maybe param" "temp"
          (1442986 'move' call_tmp[1442984](1442989 call _arrsLock[801441] this[1807372]))
          (1442996 call unlock[187369] call_tmp[1442984])
        }
        (1442864 'local block')
      }
      (1442998 call =[435327] count[1807376] cnt[1442857])
    }
    (1443004 return _void[55])
  }
  function wrapon_fn[2085980](const in arg dummy_locale_arg[2085982]:chpl_localeID_t[209294], in arg buf[2085984]:c_void_ptr[149], in arg buf_size[2085986]:int(64)[13], in arg c[2085988]:_class_localson_fn[2085934]) : void[4] "on block"
  {
    val _0_tmp[2085993]:chpl_localeID_t[209294] "temp"
    (2085998 'move' _0_tmp[2085993](2085995 '.v' c[2085988] _0_tmp[2085937]))
    val _1_this[2086000]:BaseDist[145926] "temp"
    (2086005 'move' _1_this[2086000](2086002 '.v' c[2085988] _1_this[2085939]))
    ref _2_free_dist[2086008]:bool[10] "temp"
    (2086013 'move' _2_free_dist[2086008](2086010 '.v' c[2085988] _2_free_dist[2085941]))
    (2085991 call on_fn[935152] _1_this[2086000] _2_free_dist[2086008])
    (2086016 return _void[55])
  }
  function wrapon_fn[2086093](const in arg dummy_locale_arg[2086095]:chpl_localeID_t[209294], in arg buf[2086097]:c_void_ptr[149], in arg buf_size[2086099]:int(64)[13], in arg c[2086101]:_class_localson_fn[2086041]) : void[4] "on block"
  {
    val _0_tmp[2086106]:chpl_localeID_t[209294] "temp"
    (2086111 'move' _0_tmp[2086106](2086108 '.v' c[2086101] _0_tmp[2086044]))
    val _1_this[2086113]:BaseDist[145926] "temp"
    (2086118 'move' _1_this[2086113](2086115 '.v' c[2086101] _1_this[2086046]))
    val _2_x[2086121]:BaseDom[146725] "temp"
    (2086126 'move' _2_x[2086121](2086123 '.v' c[2086101] _2_x[2086048]))
    ref _3_count[2086129]:int(64)[13] "temp"
    (2086134 'move' _3_count[2086129](2086131 '.v' c[2086101] _3_count[2086050]))
    (2086104 call on_fn[935161] _1_this[2086113] _2_x[2086121] _3_count[2086129])
    (2086137 return _void[55])
  }
  function wrapon_fn[2086227](const in arg dummy_locale_arg[2086229]:chpl_localeID_t[209294], in arg buf[2086231]:c_void_ptr[149], in arg buf_size[2086233]:int(64)[13], in arg c[2086235]:_class_localson_fn[2086163]) : void[4] "on block"
  {
    val _0_tmp[2086240]:chpl_localeID_t[209294] "temp"
    (2086245 'move' _0_tmp[2086240](2086242 '.v' c[2086235] _0_tmp[2086166]))
    val _1_this[2086247]:BaseDom[146725] "temp"
    (2086252 'move' _1_this[2086247](2086249 '.v' c[2086235] _1_this[2086168]))
    ref _2_free_dom[2086255]:bool[10] "temp"
    (2086260 'move' _2_free_dom[2086255](2086257 '.v' c[2086235] _2_free_dom[2086170]))
    val _3_rvfDerefTmp[2086263]:BaseDist[145926] "temp"
    (2086268 'move' _3_rvfDerefTmp[2086263](2086265 '.v' c[2086235] _3_rvfDerefTmp[2086172]))
    ref _4_remove_dist[2086271]:bool[10] "temp"
    (2086276 'move' _4_remove_dist[2086271](2086273 '.v' c[2086235] _4_remove_dist[2086174]))
    (2086238 call on_fn[935179] _1_this[2086247] _2_free_dom[2086255] _3_rvfDerefTmp[2086263] _4_remove_dist[2086271])
    (2086279 return _void[55])
  }
  function wrapon_fn[2092991](const in arg dummy_locale_arg[2092993]:chpl_localeID_t[209294], in arg buf[2092995]:c_void_ptr[149], in arg buf_size[2092997]:int(64)[13], in arg c[2092999]:_class_localson_fn[2092951]) : void[4] "on block"
  {
    val _0_tmp[2093004]:chpl_localeID_t[209294] "temp"
    (2093009 'move' _0_tmp[2093004](2093006 '.v' c[2092999] _0_tmp[2092954]))
    val _1_this[2093011]:BaseDom[146725] "temp"
    (2093016 'move' _1_this[2093011](2093013 '.v' c[2092999] _1_this[2092956]))
    val _2_x[2093019]:BaseArr[149541] "temp"
    (2093024 'move' _2_x[2093019](2093021 '.v' c[2092999] _2_x[2092958]))
    (2093002 call on_fn[1264779] _1_this[2093011] _2_x[2093019])
    (2093027 return _void[55])
  }
  function wrapon_fn[2093111](const in arg dummy_locale_arg[2093113]:chpl_localeID_t[209294], in arg buf[2093115]:c_void_ptr[149], in arg buf_size[2093117]:int(64)[13], in arg c[2093119]:_class_localson_fn[2093053]) : void[4] "on block"
  {
    val _0_tmp[2093124]:chpl_localeID_t[209294] "temp"
    (2093129 'move' _0_tmp[2093124](2093126 '.v' c[2093119] _0_tmp[2093056]))
    val _1_e[2093131]:BaseArr[149541] "temp"
    (2093136 'move' _1_e[2093131](2093133 '.v' c[2093119] _1_e[2093058]))
    val _2_rvfDerefTmp[2093139]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (2093144 'move' _2_rvfDerefTmp[2093139](2093141 '.v' c[2093119] _2_rvfDerefTmp[2093060]))
    val _3_rhs_data[2093147]:_serialized_domain(1,int(64),false,1*range(int(64),bounded,false),true)[1796639] "temp"
    (2093152 'move' _3_rhs_data[2093147](2093149 '.v' c[2093119] _3_rhs_data[2093062]))
    ref _4_idxType[2093155]:int(64)[13] "temp"
    (2093160 'move' _4_idxType[2093155](2093157 '.v' c[2093119] _4_idxType[2093064]))
    (2093122 call on_fn[1288628] _1_e[2093131] _2_rvfDerefTmp[2093139] _3_rhs_data[2093147] _4_idxType[2093155])
    (2093163 return _void[55])
  }
  function wrapon_fn[2093220](const in arg dummy_locale_arg[2093222]:chpl_localeID_t[209294], in arg buf[2093224]:c_void_ptr[149], in arg buf_size[2093226]:int(64)[13], in arg c[2093228]:_class_localson_fn[2093186]) : void[4] "on block"
  {
    val _0_tmp[2093233]:chpl_localeID_t[209294] "temp"
    (2093238 'move' _0_tmp[2093233](2093235 '.v' c[2093228] _0_tmp[2093189]))
    val _1_rvfDerefTmp[2093240]:BaseArrOverRectangularDom(1,int(64),false)[1256219] "temp"
    (2093245 'move' _1_rvfDerefTmp[2093240](2093242 '.v' c[2093228] _1_rvfDerefTmp[2093191]))
    (2093231 call on_fn[1288987] _1_rvfDerefTmp[2093240])
    (2093248 return _void[55])
  }
  function wrapon_fn[2095758](const in arg dummy_locale_arg[2095760]:chpl_localeID_t[209294], in arg buf[2095762]:c_void_ptr[149], in arg buf_size[2095764]:int(64)[13], in arg c[2095766]:_class_localson_fn[2095706]) : void[4] "on block"
  {
    val _0_tmp[2095771]:chpl_localeID_t[209294] "temp"
    (2095776 'move' _0_tmp[2095771](2095773 '.v' c[2095766] _0_tmp[2095709]))
    val _1_this[2095778]:BaseDom[146725] "temp"
    (2095783 'move' _1_this[2095778](2095780 '.v' c[2095766] _1_this[2095711]))
    val _2_x[2095786]:BaseArr[149541] "temp"
    (2095791 'move' _2_x[2095786](2095788 '.v' c[2095766] _2_x[2095713]))
    ref _3_count[2095794]:int(64)[13] "temp"
    (2095799 'move' _3_count[2095794](2095796 '.v' c[2095766] _3_count[2095715]))
    (2095769 call on_fn[1442844] _1_this[2095778] _2_x[2095786] _3_count[2095794])
    (2095802 return _void[55])
  }
}