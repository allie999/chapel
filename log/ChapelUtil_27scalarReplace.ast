AST dump for ChapelUtil after pass scalarReplace.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416057]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522130 return _void[55])
  }
  function safeAdd[979790](const in arg a[979792]:int(64)[13], const in arg b[979797]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[979799]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[979807]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[979840]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2177869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2177871 'move' call_tmp[2177869](2177873 '<' a[979792] 0))
    (979842 'move' call_tmp[979840] call_tmp[2177869])
    const-val call_tmp[979848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979850 'move' call_tmp[979848] call_tmp[979840])
    if call_tmp[979848]
    {
      const-val call_tmp[979857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2280174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2280176 'move' call_tmp[2280174](2280178 '>=' b[979797] 0))
      (979859 'move' call_tmp[979857] call_tmp[2280174])
      const-val call_tmp[979865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979867 'move' call_tmp[979865] call_tmp[979857])
      if call_tmp[979865]
      {
        (979874 'move' ret[979799] 1)
        gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
      }
      {
        val call_tmp[979881]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[979894]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2287255]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2287257 'move' call_tmp[2287255](2287259 '-' -9223372036854775808 a[979792]))
        (979896 'move' call_tmp[979894] call_tmp[2287255])
        const-val call_tmp[979902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2191728]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2191730 'move' call_tmp[2191728](2191732 '<' b[979797] call_tmp[979894]))
        (979904 'move' call_tmp[979902] call_tmp[2191728])
        const-val call_tmp[979910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979912 'move' call_tmp[979910] call_tmp[979902])
        if call_tmp[979910]
        {
          (979919 'move' ret[979799] 0)
          gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
        }
        {
          (979926 'move' ret[979799] 1)
          gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
        }
      }
    }
    {
      const-val call_tmp[979935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2236345]:int(64)[13] "temp"
      (2236348 'move' inlineImm[2236345] 0)
      const-val call_tmp[2236351]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2236353 'move' call_tmp[2236351](2236355 '<=' b[979797] inlineImm[2236345]))
      (979937 'move' call_tmp[979935] call_tmp[2236351])
      const-val call_tmp[979943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979945 'move' call_tmp[979943] call_tmp[979935])
      if call_tmp[979943]
      {
        (979952 'move' ret[979799] 1)
        gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
      }
      {
        val call_tmp[979959]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[979972]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2287285]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2287287 'move' call_tmp[2287285](2287289 '-' 9223372036854775807 a[979792]))
        (979974 'move' call_tmp[979972] call_tmp[2287285])
        const-val call_tmp[979980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2187403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2187405 'move' call_tmp[2187403](2187407 '>' b[979797] call_tmp[979972]))
        (979982 'move' call_tmp[979980] call_tmp[2187403])
        const-val call_tmp[979988]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (979990 'move' call_tmp[979988] call_tmp[979980])
        if call_tmp[979988]
        {
          (979997 'move' ret[979799] 0)
          gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
        }
        {
          (980004 'move' ret[979799] 1)
          gotoReturn _end_safeAdd[980013] _end_safeAdd[980013]
        }
      }
    }
    label _end_safeAdd[980013]
    (980015 return ret[979799])
  }
  type chpl_main_argument[167416] val argc[167403]:int(64)[13] val return_value[167411]:int(32)[95]
  function chpl_rt_preUserCodeHook[167714]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522116 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167720]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522118 return _void[55])
  }
  function chpl_addModule[167735](const in arg moduleName[167732]:c_string[19], const in arg deinitFun[167738]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[679395]:chpl_ModuleDeinit[19827] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1553794]:chpl_ModuleDeinit[19827] "dead after last mention" "temp"
    val tmp[2146911]:chpl_ModuleDeinit[19827] "temp"
    (2146916 'move' tmp[2146911](2146913 '.v' chpl_moduleDeinitFuns[19840] value[2146877]))
    (1553796 'move' new_temp[1553794](1553665 call _new[1553730] moduleName[167732] deinitFun[167738] tmp[2146911]))
    (679398 'move' call_tmp[679395] new_temp[1553794])
    val coerce_tmp[1553812]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1553818 'move' coerce_tmp[1553812] call_tmp[679395])
    ref tmp[2146887]:chpl_ModuleDeinit[19827] "temp"
    (2146892 'move' tmp[2146887](2146889 '.' chpl_moduleDeinitFuns[19840] value[2146877]))
    (2450957 '=' tmp[2146887] coerce_tmp[1553812])
    (522120 return _void[55])
  }
  function chpl_deinitModules[167759]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val prev[167810]:chpl_ModuleDeinit[19827] "dead at end of block" "insert auto destroy"
    val tmp[2146903]:chpl_ModuleDeinit[19827] "temp"
    (2146908 'move' tmp[2146903](2146905 '.v' chpl_moduleDeinitFuns[19840] value[2146877]))
    (544605 'move' prev[167810] tmp[2146903])
    val tmp[167867]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[1552094]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1552099 'move' coerce_tmp[1552094](1552096 'cast' object[22] prev[167810]))
    const-val call_tmp[2177017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2177019 'move' call_tmp[2177017](2177021 'ptr_neq' coerce_tmp[1552094] nil[44]))
    (167885 'move' tmp[167867] call_tmp[2177017])
    WhileDo[167872] hazard
    {
      val call_tmp[679405]:chpl_ModuleDeinit[19827] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[2450922]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2450924 'move' coerce_tmp[2450922](2450926 'cast' object[22] prev[167810]))
      const-val call_tmp[2450929]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2450931 'move' call_tmp[2450929](2450933 'ptr_eq' coerce_tmp[2450922] nil[44]))
      if call_tmp[2450929]
      {
        (2450939 call nilCheckHalt[210171] "argument to ! is nil")
      }
      (679408 'move' call_tmp[679405] prev[167810])
      const curr[167818]:chpl_ModuleDeinit[19827] "dead at end of block" "const" "insert auto destroy"
      (544607 'move' curr[167818] call_tmp[679405])
      const-ref call_tmp[679424]:c_fn_ptr[152] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[1552424]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552429 'move' coerce_tmp[1552424] curr[167818])
      ref call_tmp[2280827]:c_fn_ptr[152] "dead after last mention" "maybe param" "temp"
      (2280829 'move' call_tmp[2280827](2280831 '.' coerce_tmp[1552424] deinitFun[19746]))
      (679427 'move' call_tmp[679424] call_tmp[2280827])
      const-val coerce_tmp[1552432]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552436 'move' coerce_tmp[1552432](1552434 'deref' call_tmp[679424]))
      (167850 call chpl_execute_module_deinit[167792] coerce_tmp[1552432])
      const-ref call_tmp[679431]:chpl_ModuleDeinit[19827] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[1552439]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552444 'move' coerce_tmp[1552439] curr[167818])
      ref call_tmp[2280841]:chpl_ModuleDeinit[19827] "dead after last mention" "maybe param" "temp"
      (2280843 'move' call_tmp[2280841](2280845 '.' coerce_tmp[1552439] prevModule[19753]))
      (679434 'move' call_tmp[679431] call_tmp[2280841])
      val coerce_tmp[1552510]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1552514 'move' coerce_tmp[1552510](1552512 'deref' call_tmp[679431]))
      ref i_a[2450944]:chpl_ModuleDeinit[19827] "temp"
      (2450948 'move' i_a[2450944](2450946 'set reference' prev[167810]))
      (2450951 '=' i_a[2450944] coerce_tmp[1552510])
      val coerce_tmp[2450963]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2450965 'move' coerce_tmp[2450963](2450967 'cast' object[22] curr[167818]))
      const-val call_tmp[2450970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2450972 'move' call_tmp[2450970](2450974 'ptr_neq' coerce_tmp[2450963] nil[44]))
      if call_tmp[2450970]
      {
        val call_tmp[2450979]:chpl_ModuleDeinit[19827] "dead after last mention" "expr temp" "maybe param" "temp"
        (2450981 'move' call_tmp[2450979] curr[167818])
        const-val tmp[2450984]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
        const-val call_tmp[2450986]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2450988 'move' call_tmp[2450986](2450990 '_wide_get_locale' curr[167818]))
        (2450992 'move' tmp[2450984] call_tmp[2450986])
        val isdirect[2450995]:bool[10] "temp"
        (2450997 'move' isdirect[2450995](2451000 call chpl_doDirectExecuteOn[187469] call_tmp[2450986]))
        if isdirect[2450995]
        {
          (2451005 call on_fn[1552776] curr[167818])
        }
        {
          val _args_foron_fn[2451008]:_class_localson_fn[2158283] "temp"
          (2451010 'move' _args_foron_fn[2451008](2451012 'stack allocate class' _class_localson_fn[2158283]))
          (2451014 '.=' _args_foron_fn[2451008] _0_tmp[2158286] tmp[2450984])
          (2451018 '.=' _args_foron_fn[2451008] _1_arg[2158288] curr[167818])
          val _args_vforon_fn[2451022]:c_void_ptr[149] "temp"
          (2451024 'move' _args_vforon_fn[2451022](2451026 'cast_to_void_star' _args_foron_fn[2451008]))
          val _args_sizeon_fn[2451028]:int(64)[13] "temp"
          (2451030 'move' _args_sizeon_fn[2451028](2451032 'sizeof_bundle' _class_localson_fn[2158283]))
          on(2451035 call wrapon_fn[2158317] tmp[2450984] _args_vforon_fn[2451022] _args_sizeon_fn[2451028] _args_foron_fn[2451008])
        }
      }
      val coerce_tmp[1553576]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1553581 'move' coerce_tmp[1553576](1553578 'cast' object[22] prev[167810]))
      const-val call_tmp[2177027]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2177029 'move' call_tmp[2177027](2177031 'ptr_neq' coerce_tmp[1553576] nil[44]))
      (167878 'move' tmp[167867] call_tmp[2177027])
      tmp[167867]
    }
    ref tmp[2146895]:chpl_ModuleDeinit[19827] "temp"
    (2146900 'move' tmp[2146895](2146897 '.' chpl_moduleDeinitFuns[19840] value[2146877]))
    (2451045 '=' tmp[2146895](2451047 'cast' chpl_ModuleDeinit[19827] nil[44]))
    (522128 return _void[55])
  }
  function chpl_execute_module_deinit[167792](const in arg deinitFun[167789]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522126 return _void[55])
  }
}