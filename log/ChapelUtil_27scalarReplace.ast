AST dump for ChapelUtil after pass scalarReplace.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelUtil[416130]() : void[4] "insert line file info" "module init" "resolved"
  {
    (522208 return _void[55])
  }
  function safeAdd[979918](const in arg a[979920]:int(64)[13], const in arg b[979925]:int(64)[13]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[979927]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[979935]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[979968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2230498]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2230500 'move' call_tmp[2230498](2230502 '<' a[979920] 0))
    (979970 'move' call_tmp[979968] call_tmp[2230498])
    const-val call_tmp[979976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979978 'move' call_tmp[979976] call_tmp[979968])
    if call_tmp[979976]
    {
      const-val call_tmp[979985]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2335460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335462 'move' call_tmp[2335460](2335464 '>=' b[979925] 0))
      (979987 'move' call_tmp[979985] call_tmp[2335460])
      const-val call_tmp[979993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979995 'move' call_tmp[979993] call_tmp[979985])
      if call_tmp[979993]
      {
        (980002 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        val call_tmp[980009]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[980022]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2342692]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2342694 'move' call_tmp[2342692](2342696 '-' -9223372036854775808 a[979920]))
        (980024 'move' call_tmp[980022] call_tmp[2342692])
        const-val call_tmp[980030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2244708]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2244710 'move' call_tmp[2244708](2244712 '<' b[979925] call_tmp[980022]))
        (980032 'move' call_tmp[980030] call_tmp[2244708])
        const-val call_tmp[980038]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980040 'move' call_tmp[980038] call_tmp[980030])
        if call_tmp[980038]
        {
          (980047 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980054 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    {
      const-val call_tmp[980063]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2290168]:int(64)[13] "temp"
      (2290171 'move' inlineImm[2290168] 0)
      const-val call_tmp[2290174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2290176 'move' call_tmp[2290174](2290178 '<=' b[979925] inlineImm[2290168]))
      (980065 'move' call_tmp[980063] call_tmp[2290174])
      const-val call_tmp[980071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (980073 'move' call_tmp[980071] call_tmp[980063])
      if call_tmp[980071]
      {
        (980080 'move' ret[979927] 1)
        gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
      }
      {
        val call_tmp[980087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[980100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2342722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2342724 'move' call_tmp[2342722](2342726 '-' 9223372036854775807 a[979920]))
        (980102 'move' call_tmp[980100] call_tmp[2342722])
        const-val call_tmp[980108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2240233]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2240235 'move' call_tmp[2240233](2240237 '>' b[979925] call_tmp[980100]))
        (980110 'move' call_tmp[980108] call_tmp[2240233])
        const-val call_tmp[980116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (980118 'move' call_tmp[980116] call_tmp[980108])
        if call_tmp[980116]
        {
          (980125 'move' ret[979927] 0)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
        {
          (980132 'move' ret[979927] 1)
          gotoReturn _end_safeAdd[980141] _end_safeAdd[980141]
        }
      }
    }
    label _end_safeAdd[980141]
    (980143 return ret[979927])
  }
  type chpl_main_argument[167416] val argc[167403]:int(64)[13] val return_value[167411]:int(32)[95]
  function chpl_rt_preUserCodeHook[167714]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522194 return _void[55])
  }
  function chpl_rt_postUserCodeHook[167720]() : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522196 return _void[55])
  }
  function chpl_addModule[167735](const in arg moduleName[167732]:c_string[19], const in arg deinitFun[167738]:c_fn_ptr[152]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[679482]:chpl_ModuleDeinit[19827] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    val new_temp[1593239]:chpl_ModuleDeinit[19827] "dead after last mention" "temp"
    val tmp[2197456]:chpl_ModuleDeinit[19827] "temp"
    (2197461 'move' tmp[2197456](2197458 '.v' chpl_moduleDeinitFuns[19840] value[2197422]))
    (1593241 'move' new_temp[1593239](1593110 call _new[1593175] moduleName[167732] deinitFun[167738] tmp[2197456]))
    (679485 'move' call_tmp[679482] new_temp[1593239])
    val coerce_tmp[1593257]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1593263 'move' coerce_tmp[1593257] call_tmp[679482])
    ref tmp[2197432]:chpl_ModuleDeinit[19827] "temp"
    (2197437 'move' tmp[2197432](2197434 '.' chpl_moduleDeinitFuns[19840] value[2197422]))
    (2512058 '=' tmp[2197432] coerce_tmp[1593257])
    (522198 return _void[55])
  }
  function chpl_deinitModules[167759]() : void[4] "export" "local args" "resolved" "no return value for void"
  {
    val prev[167810]:chpl_ModuleDeinit[19827] "dead at end of block" "insert auto destroy"
    val tmp[2197448]:chpl_ModuleDeinit[19827] "temp"
    (2197453 'move' tmp[2197448](2197450 '.v' chpl_moduleDeinitFuns[19840] value[2197422]))
    (544692 'move' prev[167810] tmp[2197448])
    val tmp[167867]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[1591539]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1591544 'move' coerce_tmp[1591539](1591541 'cast' object[22] prev[167810]))
    const-val call_tmp[2229581]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2229583 'move' call_tmp[2229581](2229585 'ptr_neq' coerce_tmp[1591539] nil[44]))
    (167885 'move' tmp[167867] call_tmp[2229581])
    WhileDo[167872] hazard
    {
      val call_tmp[679492]:chpl_ModuleDeinit[19827] "dead at end of block" "maybe param" "temp"
      val coerce_tmp[2512023]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2512025 'move' coerce_tmp[2512023](2512027 'cast' object[22] prev[167810]))
      const-val call_tmp[2512030]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2512032 'move' call_tmp[2512030](2512034 'ptr_eq' coerce_tmp[2512023] nil[44]))
      if call_tmp[2512030]
      {
        (2512040 call nilCheckHalt[210238] "argument to ! is nil")
      }
      (679495 'move' call_tmp[679492] prev[167810])
      const curr[167818]:chpl_ModuleDeinit[19827] "dead at end of block" "const" "insert auto destroy"
      (544694 'move' curr[167818] call_tmp[679492])
      const-ref call_tmp[679511]:c_fn_ptr[152] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[1591869]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591874 'move' coerce_tmp[1591869] curr[167818])
      ref call_tmp[2336153]:c_fn_ptr[152] "dead after last mention" "maybe param" "temp"
      (2336155 'move' call_tmp[2336153](2336157 '.' coerce_tmp[1591869] deinitFun[19746]))
      (679514 'move' call_tmp[679511] call_tmp[2336153])
      const-val coerce_tmp[1591877]:c_fn_ptr[152] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591881 'move' coerce_tmp[1591877](1591879 'deref' call_tmp[679511]))
      (167850 call chpl_execute_module_deinit[167792] coerce_tmp[1591877])
      const-ref call_tmp[679518]:chpl_ModuleDeinit[19827] "dead after last mention" "maybe param" "reference to a const" "temp"
      val coerce_tmp[1591884]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591889 'move' coerce_tmp[1591884] curr[167818])
      ref call_tmp[2336167]:chpl_ModuleDeinit[19827] "dead after last mention" "maybe param" "temp"
      (2336169 'move' call_tmp[2336167](2336171 '.' coerce_tmp[1591884] prevModule[19753]))
      (679521 'move' call_tmp[679518] call_tmp[2336167])
      val coerce_tmp[1591955]:chpl_ModuleDeinit[19827] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1591959 'move' coerce_tmp[1591955](1591957 'deref' call_tmp[679518]))
      ref i_a[2512045]:chpl_ModuleDeinit[19827] "temp"
      (2512049 'move' i_a[2512045](2512047 'set reference' prev[167810]))
      (2512052 '=' i_a[2512045] coerce_tmp[1591955])
      val coerce_tmp[2512064]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2512066 'move' coerce_tmp[2512064](2512068 'cast' object[22] curr[167818]))
      const-val call_tmp[2512071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2512073 'move' call_tmp[2512071](2512075 'ptr_neq' coerce_tmp[2512064] nil[44]))
      if call_tmp[2512071]
      {
        val call_tmp[2512080]:chpl_ModuleDeinit[19827] "dead after last mention" "expr temp" "maybe param" "temp"
        (2512082 'move' call_tmp[2512080] curr[167818])
        const-val tmp[2512085]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
        const-val call_tmp[2512087]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2512089 'move' call_tmp[2512087](2512091 '_wide_get_locale' curr[167818]))
        (2512093 'move' tmp[2512085] call_tmp[2512087])
        val isdirect[2512096]:bool[10] "temp"
        (2512098 'move' isdirect[2512096](2512101 call chpl_doDirectExecuteOn[187469] call_tmp[2512087]))
        if isdirect[2512096]
        {
          (2512106 call on_fn[1592221] curr[167818])
        }
        {
          val _args_foron_fn[2512109]:_class_localson_fn[2209849] "temp"
          (2512111 'move' _args_foron_fn[2512109](2512113 'stack allocate class' _class_localson_fn[2209849]))
          (2512115 '.=' _args_foron_fn[2512109] _0_tmp[2209852] tmp[2512085])
          (2512119 '.=' _args_foron_fn[2512109] _1_arg[2209854] curr[167818])
          val _args_vforon_fn[2512123]:c_void_ptr[149] "temp"
          (2512125 'move' _args_vforon_fn[2512123](2512127 'cast_to_void_star' _args_foron_fn[2512109]))
          val _args_sizeon_fn[2512129]:int(64)[13] "temp"
          (2512131 'move' _args_sizeon_fn[2512129](2512133 'sizeof_bundle' _class_localson_fn[2209849]))
          on(2512136 call wrapon_fn[2209883] tmp[2512085] _args_vforon_fn[2512123] _args_sizeon_fn[2512129] _args_foron_fn[2512109])
        }
      }
      val coerce_tmp[1593021]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1593026 'move' coerce_tmp[1593021](1593023 'cast' object[22] prev[167810]))
      const-val call_tmp[2229591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2229593 'move' call_tmp[2229591](2229595 'ptr_neq' coerce_tmp[1593021] nil[44]))
      (167878 'move' tmp[167867] call_tmp[2229591])
      tmp[167867]
    }
    ref tmp[2197440]:chpl_ModuleDeinit[19827] "temp"
    (2197445 'move' tmp[2197440](2197442 '.' chpl_moduleDeinitFuns[19840] value[2197422]))
    (2512146 '=' tmp[2197440](2512148 'cast' chpl_ModuleDeinit[19827] nil[44]))
    (522206 return _void[55])
  }
  function chpl_execute_module_deinit[167792](const in arg deinitFun[167789]:c_fn_ptr[152]) : void[4] "extern" "local args" "no fn body" "resolved" "no return value for void"
  {
    (522204 return _void[55])
  }
}