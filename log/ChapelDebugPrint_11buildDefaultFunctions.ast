AST dump for ChapelDebugPrint after pass buildDefaultFunctions.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[416099]() : void[4] "insert line file info" "module init"
  {
    (545524 'init var' chpl__testParFlag[188346] 0)
    (188349 'end of statement')
    (545526 'init var' chpl__testParOn[188351] 0)
    (188354 'end of statement')
    (524223 return _void[55])
  }
  function chpl_debug_stringify[188171](arg args[188168]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524199] "RVV" "temp"
    unknown str[188191] "dead at end of block" "insert auto destroy"
    (545516 'init var' str[188191] "")
    (188194 'end of statement')
    {
      unknown i[188238] "dead at end of block" "insert auto destroy"
      (545518 'init var' i[188238] 0)
      (484574 'end of statement')
      unknown tmp[188239] "maybe param" "temp"
      unknown call_tmp[690886] "expr temp" "maybe param" "maybe type" "temp"
      (690889 'move' call_tmp[690886](188198 call size _mt[243] args[188168]))
      unknown call_tmp[690891] "expr temp" "maybe param" "maybe type" "temp"
      (690894 'move' call_tmp[690891](188202 call - call_tmp[690886] 1))
      (188251 'move' tmp[188239](188249 call chpl_compute_low_param_loop_bound 0 call_tmp[690891]))
      unknown tmp[188240] "maybe param" "temp"
      unknown call_tmp[690898] "expr temp" "maybe param" "maybe type" "temp"
      (690901 'move' call_tmp[690898](188258 call size _mt[243] args[188168]))
      unknown call_tmp[690903] "expr temp" "maybe param" "maybe type" "temp"
      (690906 'move' call_tmp[690903](188256 call - call_tmp[690898] 1))
      (188264 'move' tmp[188240](188262 call chpl_compute_high_param_loop_bound 0 call_tmp[690903]))
      unknown tmp[188241] "maybe param" "temp"
      (188267 'move' tmp[188241] 1)
      ParamForLoop[188269]
      { i[188238] tmp[188239] tmp[188240] tmp[188241]
        {
          unknown call_tmp[690908] "maybe param" "maybe type" "temp"
          (690911 'move' call_tmp[690908](188209 call args[188168] i[188238]))
          unknown tmp[188210] "dead at end of block" "insert auto destroy"
          (545520 'init var' tmp[188210] call_tmp[690908])
          (188213 'end of statement' i[188238])
          unknown call_tmp[690913] "expr temp" "maybe param" "maybe type" "temp"
          (690916 'move' call_tmp[690913](188218 call _can_stringify_direct tmp[188210]))
          unknown call_tmp[690918] "expr temp" "maybe param" "maybe type" "temp"
          (690921 'move' call_tmp[690918](188234 call _cond_test call_tmp[690913]))
          if call_tmp[690918]
          {
            unknown call_tmp[690923] "expr temp" "maybe param" "maybe type" "temp"
            (690926 'move' call_tmp[690923](188223 call stringify tmp[188210]))
            (188224 call += str[188191] call_tmp[690923])
            (484576 'end of statement' str[188191] tmp[188210])
          }
          {
            (188230 call += str[188191] "\?")
            (484579 'end of statement' str[188191])
          }
        }
      }
      label _unused_continueLabel[188243]
      label _breakLabel[188242]
    }
    (524205 'move' ret[524199](524204 'coerce' str[188191] string[26]))
    gotoReturn _end_chpl_debug_stringify[524197] _end_chpl_debug_stringify[524197]
    (484581 'end of statement' str[188191])
    label _end_chpl_debug_stringify[524197]
    (524201 return ret[524199])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188290](arg args[188287]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188298](arg fmt[188295]:c_string[19], arg f[188301]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524209 return _void[55])
    }
    unknown call_tmp[690928] "maybe param" "maybe type" "temp"
    (690931 'move' call_tmp[690928](188311 call chpl_debug_stringify(188309 'expand_tuple' args[188287])))
    unknown str[188312] "dead at end of block" "insert auto destroy"
    (545522 'init var' str[188312] call_tmp[690928])
    (188315 'end of statement')
    unknown call_tmp[690935] "expr temp" "maybe param" "maybe type" "temp"
    (690938 'move' call_tmp[690935](188340 call(188336 call (partial) c_str _mt[243] str[188312])))
    (188341 call printf "%s\n" call_tmp[690935])
    (484583 'end of statement' str[188312])
    (524211 return _void[55])
  }
  unknown chpl__testParFlag[188346] "config" "no doc" "param"
  unknown chpl__testParOn[188351] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188357]() : _unknown[51] "no doc" "no return value for void"
  {
    (188361 call = chpl__testParOn[188351] 1)
    (524213 return _void[55])
  }
  function chpl__testParStop[188369]() : _unknown[51] "no doc" "no return value for void"
  {
    (188373 call = chpl__testParOn[188351] 0)
    (524215 return _void[55])
  }
  function chpl__testPar[188385](arg args[188382]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429589] "maybe param" "temp"
    (429600 'move' tmp[429589] chpl__testParFlag[188346])
    unknown call_tmp[690940] "expr temp" "maybe param" "maybe type" "temp"
    (690943 'move' call_tmp[690940](429602 call _cond_invalid tmp[429589]))
    if call_tmp[690940]
    {
      (429605 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572186] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572187] "maybe param" "temp"
    unknown call_tmp[690945] "expr temp" "maybe param" "maybe type" "temp"
    (690948 'move' call_tmp[690945](429590 call isTrue tmp[429589]))
    (572192 'move' tmp[572187](572190 call _cond_test call_tmp[690945]))
    if tmp[572187]
    {
      unknown tmp[572194] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572196 'move' tmp[572194](429593 call isTrue chpl__testParOn[188351]))
      (572201 'move' tmp[572186](572198 '_paramFoldLogical' tmp[572187] tmp[572194]))
    }
    {
      (572206 'move' tmp[572186](572203 '_paramFoldLogical' tmp[572187] 0))
    }
    unknown call_tmp[690950] "expr temp" "maybe param" "maybe type" "temp"
    (690953 'move' call_tmp[690950](188490 call _cond_test tmp[572186]))
    if call_tmp[690950]
    {
      unknown call_tmp[690955] "expr temp" "maybe param" "maybe type" "temp"
      (690958 'move' call_tmp[690955](188396 '_get_user_file'))
      unknown call_tmp[690960] "maybe param" "maybe type" "temp"
      (690963 'move' call_tmp[690960](188397 'chpl_lookupFilename' call_tmp[690955]))
      const file_cs[188398] "dead at end of block" "const" "insert auto destroy"
      (545528 'init var' file_cs[188398] call_tmp[690960] c_string[19])
      (188401 'end of statement')
      unknown file[188404] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545530] "maybe param" "maybe type" "temp"
      (545539 'move' type_tmp[545530](545538 call string[26]))
      (545532 'init var split decl' file[188404] type_tmp[545530])
      (188407 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690965] "maybe param" "maybe type" "temp"
          (690968 'move' call_tmp[690965](188412 call createStringWithNewBuffer file_cs[188398]))
          (545541 'init var split init' file[188404] call_tmp[690965] type_tmp[545530])
          (484588 'end of statement' file[188404] file_cs[188398])
        }
      }
      unknown call_tmp[690970] "maybe param" "maybe type" "temp"
      (690973 'move' call_tmp[690970](188422 '_get_user_line'))
      const line[188423] "dead at end of block" "const" "insert auto destroy"
      (545544 'init var' line[188423] call_tmp[690970])
      (188426 'end of statement')
      unknown call_tmp[690975] "maybe param" "maybe type" "temp"
      (690978 'move' call_tmp[690975](188431 call chpl_debug_stringify(188429 'expand_tuple' args[188382])))
      unknown str[188432] "dead at end of block" "insert auto destroy"
      (545546 'init var' str[188432] call_tmp[690975])
      (188435 'end of statement')
      function printf[188442](arg fmt[188439]:c_string[19], arg f[188445]:c_string[19], arg ln[188449] :
      c_int[20552], arg s[188453]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524217 return _void[55])
      }
      unknown call_tmp[690980] "expr temp" "maybe param" "maybe type" "temp"
      (690983 'move' call_tmp[690980](188480 call _cast c_int[20552] line[188423]))
      unknown call_tmp[690987] "expr temp" "maybe param" "maybe type" "temp"
      (690990 'move' call_tmp[690987](188487 call(188483 call (partial) c_str _mt[243] str[188432])))
      (188488 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188398] call_tmp[690980] call_tmp[690987])
      (484591 'end of statement' file_cs[188398] line[188423] str[188432])
    }
    (524219 return _void[55])
  }
  function chpl__testParWriteln[188503](arg args[188500]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429610] "maybe param" "temp"
    (429621 'move' tmp[429610] chpl__testParFlag[188346])
    unknown call_tmp[690992] "expr temp" "maybe param" "maybe type" "temp"
    (690995 'move' call_tmp[690992](429623 call _cond_invalid tmp[429610]))
    if call_tmp[690992]
    {
      (429626 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572213] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572214] "maybe param" "temp"
    unknown call_tmp[690997] "expr temp" "maybe param" "maybe type" "temp"
    (691000 'move' call_tmp[690997](429611 call isTrue tmp[429610]))
    (572219 'move' tmp[572214](572217 call _cond_test call_tmp[690997]))
    if tmp[572214]
    {
      unknown tmp[572221] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572223 'move' tmp[572221](429614 call isTrue chpl__testParOn[188351]))
      (572228 'move' tmp[572213](572225 '_paramFoldLogical' tmp[572214] tmp[572221]))
    }
    {
      (572233 'move' tmp[572213](572230 '_paramFoldLogical' tmp[572214] 0))
    }
    unknown call_tmp[691002] "expr temp" "maybe param" "maybe type" "temp"
    (691005 'move' call_tmp[691002](188588 call _cond_test tmp[572213]))
    if call_tmp[691002]
    {
      unknown call_tmp[691007] "expr temp" "maybe param" "maybe type" "temp"
      (691010 'move' call_tmp[691007](188514 '_get_user_file'))
      unknown call_tmp[691012] "maybe param" "maybe type" "temp"
      (691015 'move' call_tmp[691012](188515 'chpl_lookupFilename' call_tmp[691007]))
      const file_cs[188516] "dead at end of block" "const" "insert auto destroy"
      (545548 'init var' file_cs[188516] call_tmp[691012] c_string[19])
      (188519 'end of statement')
      unknown file[188522] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545550] "maybe param" "maybe type" "temp"
      (545559 'move' type_tmp[545550](545558 call string[26]))
      (545552 'init var split decl' file[188522] type_tmp[545550])
      (188525 'end of statement')
      Try!
      {
        {
          unknown call_tmp[691017] "maybe param" "maybe type" "temp"
          (691020 'move' call_tmp[691017](188530 call createStringWithNewBuffer file_cs[188516]))
          (545561 'init var split init' file[188522] call_tmp[691017] type_tmp[545550])
          (484596 'end of statement' file[188522] file_cs[188516])
        }
      }
      unknown call_tmp[691022] "maybe param" "maybe type" "temp"
      (691025 'move' call_tmp[691022](188540 '_get_user_line'))
      const line[188541] "dead at end of block" "const" "insert auto destroy"
      (545564 'init var' line[188541] call_tmp[691022])
      (188544 'end of statement')
      (188586 call writeln "CHPL TEST PAR (" file[188522] ":" line[188541] "): "(188585 'expand_tuple' args[188500]))
      (484599 'end of statement' file[188522] line[188541])
    }
    (524221 return _void[55])
  }
  (355276 'used modules list'(188158 'use' ChapelStandard[20267])(188160 'use' SysCTypes[20943])(188163 'use' IO[230912]))
}