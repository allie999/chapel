AST dump for ChapelDebugPrint after pass buildDefaultFunctions.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[416094]() : void[4] "insert line file info" "module init"
  {
    (545510 'init var' chpl__testParFlag[188346] 0)
    (188349 'end of statement')
    (545512 'init var' chpl__testParOn[188351] 0)
    (188354 'end of statement')
    (524218 return _void[55])
  }
  function chpl_debug_stringify[188171](arg args[188168]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524194] "RVV" "temp"
    unknown str[188191] "dead at end of block" "insert auto destroy"
    (545502 'init var' str[188191] "")
    (188194 'end of statement')
    {
      unknown i[188238] "dead at end of block" "insert auto destroy"
      (545504 'init var' i[188238] 0)
      (484571 'end of statement')
      unknown tmp[188239] "maybe param" "temp"
      unknown call_tmp[690870] "expr temp" "maybe param" "maybe type" "temp"
      (690873 'move' call_tmp[690870](188198 call size _mt[243] args[188168]))
      unknown call_tmp[690875] "expr temp" "maybe param" "maybe type" "temp"
      (690878 'move' call_tmp[690875](188202 call - call_tmp[690870] 1))
      (188251 'move' tmp[188239](188249 call chpl_compute_low_param_loop_bound 0 call_tmp[690875]))
      unknown tmp[188240] "maybe param" "temp"
      unknown call_tmp[690882] "expr temp" "maybe param" "maybe type" "temp"
      (690885 'move' call_tmp[690882](188258 call size _mt[243] args[188168]))
      unknown call_tmp[690887] "expr temp" "maybe param" "maybe type" "temp"
      (690890 'move' call_tmp[690887](188256 call - call_tmp[690882] 1))
      (188264 'move' tmp[188240](188262 call chpl_compute_high_param_loop_bound 0 call_tmp[690887]))
      unknown tmp[188241] "maybe param" "temp"
      (188267 'move' tmp[188241] 1)
      ParamForLoop[188269]
      { i[188238] tmp[188239] tmp[188240] tmp[188241]
        {
          unknown call_tmp[690892] "maybe param" "maybe type" "temp"
          (690895 'move' call_tmp[690892](188209 call args[188168] i[188238]))
          unknown tmp[188210] "dead at end of block" "insert auto destroy"
          (545506 'init var' tmp[188210] call_tmp[690892])
          (188213 'end of statement' i[188238])
          unknown call_tmp[690897] "expr temp" "maybe param" "maybe type" "temp"
          (690900 'move' call_tmp[690897](188218 call _can_stringify_direct tmp[188210]))
          unknown call_tmp[690902] "expr temp" "maybe param" "maybe type" "temp"
          (690905 'move' call_tmp[690902](188234 call _cond_test call_tmp[690897]))
          if call_tmp[690902]
          {
            unknown call_tmp[690907] "expr temp" "maybe param" "maybe type" "temp"
            (690910 'move' call_tmp[690907](188223 call stringify tmp[188210]))
            (188224 call += str[188191] call_tmp[690907])
            (484573 'end of statement' str[188191] tmp[188210])
          }
          {
            (188230 call += str[188191] "\?")
            (484576 'end of statement' str[188191])
          }
        }
      }
      label _unused_continueLabel[188243]
      label _breakLabel[188242]
    }
    (524200 'move' ret[524194](524199 'coerce' str[188191] string[26]))
    gotoReturn _end_chpl_debug_stringify[524192] _end_chpl_debug_stringify[524192]
    (484578 'end of statement' str[188191])
    label _end_chpl_debug_stringify[524192]
    (524196 return ret[524194])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188290](arg args[188287]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188298](arg fmt[188295]:c_string[19], arg f[188301]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524204 return _void[55])
    }
    unknown call_tmp[690912] "maybe param" "maybe type" "temp"
    (690915 'move' call_tmp[690912](188311 call chpl_debug_stringify(188309 'expand_tuple' args[188287])))
    unknown str[188312] "dead at end of block" "insert auto destroy"
    (545508 'init var' str[188312] call_tmp[690912])
    (188315 'end of statement')
    unknown call_tmp[690919] "expr temp" "maybe param" "maybe type" "temp"
    (690922 'move' call_tmp[690919](188340 call(188336 call (partial) c_str _mt[243] str[188312])))
    (188341 call printf "%s\n" call_tmp[690919])
    (484580 'end of statement' str[188312])
    (524206 return _void[55])
  }
  unknown chpl__testParFlag[188346] "config" "no doc" "param"
  unknown chpl__testParOn[188351] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188357]() : _unknown[51] "no doc" "no return value for void"
  {
    (188361 call = chpl__testParOn[188351] 1)
    (524208 return _void[55])
  }
  function chpl__testParStop[188369]() : _unknown[51] "no doc" "no return value for void"
  {
    (188373 call = chpl__testParOn[188351] 0)
    (524210 return _void[55])
  }
  function chpl__testPar[188385](arg args[188382]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429584] "maybe param" "temp"
    (429595 'move' tmp[429584] chpl__testParFlag[188346])
    unknown call_tmp[690924] "expr temp" "maybe param" "maybe type" "temp"
    (690927 'move' call_tmp[690924](429597 call _cond_invalid tmp[429584]))
    if call_tmp[690924]
    {
      (429600 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572170] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572171] "maybe param" "temp"
    unknown call_tmp[690929] "expr temp" "maybe param" "maybe type" "temp"
    (690932 'move' call_tmp[690929](429585 call isTrue tmp[429584]))
    (572176 'move' tmp[572171](572174 call _cond_test call_tmp[690929]))
    if tmp[572171]
    {
      unknown tmp[572178] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572180 'move' tmp[572178](429588 call isTrue chpl__testParOn[188351]))
      (572185 'move' tmp[572170](572182 '_paramFoldLogical' tmp[572171] tmp[572178]))
    }
    {
      (572190 'move' tmp[572170](572187 '_paramFoldLogical' tmp[572171] 0))
    }
    unknown call_tmp[690934] "expr temp" "maybe param" "maybe type" "temp"
    (690937 'move' call_tmp[690934](188490 call _cond_test tmp[572170]))
    if call_tmp[690934]
    {
      unknown call_tmp[690939] "expr temp" "maybe param" "maybe type" "temp"
      (690942 'move' call_tmp[690939](188396 '_get_user_file'))
      unknown call_tmp[690944] "maybe param" "maybe type" "temp"
      (690947 'move' call_tmp[690944](188397 'chpl_lookupFilename' call_tmp[690939]))
      const file_cs[188398] "dead at end of block" "const" "insert auto destroy"
      (545514 'init var' file_cs[188398] call_tmp[690944] c_string[19])
      (188401 'end of statement')
      unknown file[188404] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545516] "maybe param" "maybe type" "temp"
      (545525 'move' type_tmp[545516](545524 call string[26]))
      (545518 'init var split decl' file[188404] type_tmp[545516])
      (188407 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690949] "maybe param" "maybe type" "temp"
          (690952 'move' call_tmp[690949](188412 call createStringWithNewBuffer file_cs[188398]))
          (545527 'init var split init' file[188404] call_tmp[690949] type_tmp[545516])
          (484585 'end of statement' file[188404] file_cs[188398])
        }
      }
      unknown call_tmp[690954] "maybe param" "maybe type" "temp"
      (690957 'move' call_tmp[690954](188422 '_get_user_line'))
      const line[188423] "dead at end of block" "const" "insert auto destroy"
      (545530 'init var' line[188423] call_tmp[690954])
      (188426 'end of statement')
      unknown call_tmp[690959] "maybe param" "maybe type" "temp"
      (690962 'move' call_tmp[690959](188431 call chpl_debug_stringify(188429 'expand_tuple' args[188382])))
      unknown str[188432] "dead at end of block" "insert auto destroy"
      (545532 'init var' str[188432] call_tmp[690959])
      (188435 'end of statement')
      function printf[188442](arg fmt[188439]:c_string[19], arg f[188445]:c_string[19], arg ln[188449] :
      c_int[20552], arg s[188453]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524212 return _void[55])
      }
      unknown call_tmp[690964] "expr temp" "maybe param" "maybe type" "temp"
      (690967 'move' call_tmp[690964](188480 call _cast c_int[20552] line[188423]))
      unknown call_tmp[690971] "expr temp" "maybe param" "maybe type" "temp"
      (690974 'move' call_tmp[690971](188487 call(188483 call (partial) c_str _mt[243] str[188432])))
      (188488 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188398] call_tmp[690964] call_tmp[690971])
      (484588 'end of statement' file_cs[188398] line[188423] str[188432])
    }
    (524214 return _void[55])
  }
  function chpl__testParWriteln[188503](arg args[188500]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429605] "maybe param" "temp"
    (429616 'move' tmp[429605] chpl__testParFlag[188346])
    unknown call_tmp[690976] "expr temp" "maybe param" "maybe type" "temp"
    (690979 'move' call_tmp[690976](429618 call _cond_invalid tmp[429605]))
    if call_tmp[690976]
    {
      (429621 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572197] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572198] "maybe param" "temp"
    unknown call_tmp[690981] "expr temp" "maybe param" "maybe type" "temp"
    (690984 'move' call_tmp[690981](429606 call isTrue tmp[429605]))
    (572203 'move' tmp[572198](572201 call _cond_test call_tmp[690981]))
    if tmp[572198]
    {
      unknown tmp[572205] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572207 'move' tmp[572205](429609 call isTrue chpl__testParOn[188351]))
      (572212 'move' tmp[572197](572209 '_paramFoldLogical' tmp[572198] tmp[572205]))
    }
    {
      (572217 'move' tmp[572197](572214 '_paramFoldLogical' tmp[572198] 0))
    }
    unknown call_tmp[690986] "expr temp" "maybe param" "maybe type" "temp"
    (690989 'move' call_tmp[690986](188588 call _cond_test tmp[572197]))
    if call_tmp[690986]
    {
      unknown call_tmp[690991] "expr temp" "maybe param" "maybe type" "temp"
      (690994 'move' call_tmp[690991](188514 '_get_user_file'))
      unknown call_tmp[690996] "maybe param" "maybe type" "temp"
      (690999 'move' call_tmp[690996](188515 'chpl_lookupFilename' call_tmp[690991]))
      const file_cs[188516] "dead at end of block" "const" "insert auto destroy"
      (545534 'init var' file_cs[188516] call_tmp[690996] c_string[19])
      (188519 'end of statement')
      unknown file[188522] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545536] "maybe param" "maybe type" "temp"
      (545545 'move' type_tmp[545536](545544 call string[26]))
      (545538 'init var split decl' file[188522] type_tmp[545536])
      (188525 'end of statement')
      Try!
      {
        {
          unknown call_tmp[691001] "maybe param" "maybe type" "temp"
          (691004 'move' call_tmp[691001](188530 call createStringWithNewBuffer file_cs[188516]))
          (545547 'init var split init' file[188522] call_tmp[691001] type_tmp[545536])
          (484593 'end of statement' file[188522] file_cs[188516])
        }
      }
      unknown call_tmp[691006] "maybe param" "maybe type" "temp"
      (691009 'move' call_tmp[691006](188540 '_get_user_line'))
      const line[188541] "dead at end of block" "const" "insert auto destroy"
      (545550 'init var' line[188541] call_tmp[691006])
      (188544 'end of statement')
      (188586 call writeln "CHPL TEST PAR (" file[188522] ":" line[188541] "): "(188585 'expand_tuple' args[188500]))
      (484596 'end of statement' file[188522] line[188541])
    }
    (524216 return _void[55])
  }
  (355273 'used modules list'(188158 'use' ChapelStandard[20267])(188160 'use' SysCTypes[20943])(188163 'use' IO[230910]))
}