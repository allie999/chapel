AST dump for ChapelDebugPrint after pass buildDefaultFunctions.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[416056]() : void[4] "insert line file info" "module init"
  {
    (545469 'init var' chpl__testParFlag[188300] 0)
    (188303 'end of statement')
    (545471 'init var' chpl__testParOn[188305] 0)
    (188308 'end of statement')
    (524177 return _void[55])
  }
  function chpl_debug_stringify[188125](arg args[188122]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524153] "RVV" "temp"
    unknown str[188145] "dead at end of block" "insert auto destroy"
    (545461 'init var' str[188145] "")
    (188148 'end of statement')
    {
      unknown i[188192] "dead at end of block" "insert auto destroy"
      (545463 'init var' i[188192] 0)
      (484529 'end of statement')
      unknown tmp[188193] "maybe param" "temp"
      unknown call_tmp[690831] "expr temp" "maybe param" "maybe type" "temp"
      (690834 'move' call_tmp[690831](188152 call size _mt[243] args[188122]))
      unknown call_tmp[690836] "expr temp" "maybe param" "maybe type" "temp"
      (690839 'move' call_tmp[690836](188156 call - call_tmp[690831] 1))
      (188205 'move' tmp[188193](188203 call chpl_compute_low_param_loop_bound 0 call_tmp[690836]))
      unknown tmp[188194] "maybe param" "temp"
      unknown call_tmp[690843] "expr temp" "maybe param" "maybe type" "temp"
      (690846 'move' call_tmp[690843](188212 call size _mt[243] args[188122]))
      unknown call_tmp[690848] "expr temp" "maybe param" "maybe type" "temp"
      (690851 'move' call_tmp[690848](188210 call - call_tmp[690843] 1))
      (188218 'move' tmp[188194](188216 call chpl_compute_high_param_loop_bound 0 call_tmp[690848]))
      unknown tmp[188195] "maybe param" "temp"
      (188221 'move' tmp[188195] 1)
      ParamForLoop[188223]
      { i[188192] tmp[188193] tmp[188194] tmp[188195]
        {
          unknown call_tmp[690853] "maybe param" "maybe type" "temp"
          (690856 'move' call_tmp[690853](188163 call args[188122] i[188192]))
          unknown tmp[188164] "dead at end of block" "insert auto destroy"
          (545465 'init var' tmp[188164] call_tmp[690853])
          (188167 'end of statement' i[188192])
          unknown call_tmp[690858] "expr temp" "maybe param" "maybe type" "temp"
          (690861 'move' call_tmp[690858](188172 call _can_stringify_direct tmp[188164]))
          unknown call_tmp[690863] "expr temp" "maybe param" "maybe type" "temp"
          (690866 'move' call_tmp[690863](188188 call _cond_test call_tmp[690858]))
          if call_tmp[690863]
          {
            unknown call_tmp[690868] "expr temp" "maybe param" "maybe type" "temp"
            (690871 'move' call_tmp[690868](188177 call stringify tmp[188164]))
            (188178 call += str[188145] call_tmp[690868])
            (484531 'end of statement' str[188145] tmp[188164])
          }
          {
            (188184 call += str[188145] "\?")
            (484534 'end of statement' str[188145])
          }
        }
      }
      label _unused_continueLabel[188197]
      label _breakLabel[188196]
    }
    (524159 'move' ret[524153](524158 'coerce' str[188145] string[26]))
    gotoReturn _end_chpl_debug_stringify[524151] _end_chpl_debug_stringify[524151]
    (484536 'end of statement' str[188145])
    label _end_chpl_debug_stringify[524151]
    (524155 return ret[524153])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188244](arg args[188241]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188252](arg fmt[188249]:c_string[19], arg f[188255]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524163 return _void[55])
    }
    unknown call_tmp[690873] "maybe param" "maybe type" "temp"
    (690876 'move' call_tmp[690873](188265 call chpl_debug_stringify(188263 'expand_tuple' args[188241])))
    unknown str[188266] "dead at end of block" "insert auto destroy"
    (545467 'init var' str[188266] call_tmp[690873])
    (188269 'end of statement')
    unknown call_tmp[690880] "expr temp" "maybe param" "maybe type" "temp"
    (690883 'move' call_tmp[690880](188294 call(188290 call (partial) c_str _mt[243] str[188266])))
    (188295 call printf "%s\n" call_tmp[690880])
    (484538 'end of statement' str[188266])
    (524165 return _void[55])
  }
  unknown chpl__testParFlag[188300] "config" "no doc" "param"
  unknown chpl__testParOn[188305] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188311]() : _unknown[51] "no doc" "no return value for void"
  {
    (188315 call = chpl__testParOn[188305] 1)
    (524167 return _void[55])
  }
  function chpl__testParStop[188323]() : _unknown[51] "no doc" "no return value for void"
  {
    (188327 call = chpl__testParOn[188305] 0)
    (524169 return _void[55])
  }
  function chpl__testPar[188339](arg args[188336]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429546] "maybe param" "temp"
    (429557 'move' tmp[429546] chpl__testParFlag[188300])
    unknown call_tmp[690885] "expr temp" "maybe param" "maybe type" "temp"
    (690888 'move' call_tmp[690885](429559 call _cond_invalid tmp[429546]))
    if call_tmp[690885]
    {
      (429562 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572131] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572132] "maybe param" "temp"
    unknown call_tmp[690890] "expr temp" "maybe param" "maybe type" "temp"
    (690893 'move' call_tmp[690890](429547 call isTrue tmp[429546]))
    (572137 'move' tmp[572132](572135 call _cond_test call_tmp[690890]))
    if tmp[572132]
    {
      unknown tmp[572139] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572141 'move' tmp[572139](429550 call isTrue chpl__testParOn[188305]))
      (572146 'move' tmp[572131](572143 '_paramFoldLogical' tmp[572132] tmp[572139]))
    }
    {
      (572151 'move' tmp[572131](572148 '_paramFoldLogical' tmp[572132] 0))
    }
    unknown call_tmp[690895] "expr temp" "maybe param" "maybe type" "temp"
    (690898 'move' call_tmp[690895](188444 call _cond_test tmp[572131]))
    if call_tmp[690895]
    {
      unknown call_tmp[690900] "expr temp" "maybe param" "maybe type" "temp"
      (690903 'move' call_tmp[690900](188350 '_get_user_file'))
      unknown call_tmp[690905] "maybe param" "maybe type" "temp"
      (690908 'move' call_tmp[690905](188351 'chpl_lookupFilename' call_tmp[690900]))
      const file_cs[188352] "dead at end of block" "const" "insert auto destroy"
      (545473 'init var' file_cs[188352] call_tmp[690905] c_string[19])
      (188355 'end of statement')
      unknown file[188358] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545475] "maybe param" "maybe type" "temp"
      (545484 'move' type_tmp[545475](545483 call string[26]))
      (545477 'init var split decl' file[188358] type_tmp[545475])
      (188361 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690910] "maybe param" "maybe type" "temp"
          (690913 'move' call_tmp[690910](188366 call createStringWithNewBuffer file_cs[188352]))
          (545486 'init var split init' file[188358] call_tmp[690910] type_tmp[545475])
          (484543 'end of statement' file[188358] file_cs[188352])
        }
      }
      unknown call_tmp[690915] "maybe param" "maybe type" "temp"
      (690918 'move' call_tmp[690915](188376 '_get_user_line'))
      const line[188377] "dead at end of block" "const" "insert auto destroy"
      (545489 'init var' line[188377] call_tmp[690915])
      (188380 'end of statement')
      unknown call_tmp[690920] "maybe param" "maybe type" "temp"
      (690923 'move' call_tmp[690920](188385 call chpl_debug_stringify(188383 'expand_tuple' args[188336])))
      unknown str[188386] "dead at end of block" "insert auto destroy"
      (545491 'init var' str[188386] call_tmp[690920])
      (188389 'end of statement')
      function printf[188396](arg fmt[188393]:c_string[19], arg f[188399]:c_string[19], arg ln[188403] :
      c_int[20549], arg s[188407]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524171 return _void[55])
      }
      unknown call_tmp[690925] "expr temp" "maybe param" "maybe type" "temp"
      (690928 'move' call_tmp[690925](188434 call _cast c_int[20549] line[188377]))
      unknown call_tmp[690932] "expr temp" "maybe param" "maybe type" "temp"
      (690935 'move' call_tmp[690932](188441 call(188437 call (partial) c_str _mt[243] str[188386])))
      (188442 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188352] call_tmp[690925] call_tmp[690932])
      (484546 'end of statement' file_cs[188352] line[188377] str[188386])
    }
    (524173 return _void[55])
  }
  function chpl__testParWriteln[188457](arg args[188454]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429567] "maybe param" "temp"
    (429578 'move' tmp[429567] chpl__testParFlag[188300])
    unknown call_tmp[690937] "expr temp" "maybe param" "maybe type" "temp"
    (690940 'move' call_tmp[690937](429580 call _cond_invalid tmp[429567]))
    if call_tmp[690937]
    {
      (429583 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572158] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572159] "maybe param" "temp"
    unknown call_tmp[690942] "expr temp" "maybe param" "maybe type" "temp"
    (690945 'move' call_tmp[690942](429568 call isTrue tmp[429567]))
    (572164 'move' tmp[572159](572162 call _cond_test call_tmp[690942]))
    if tmp[572159]
    {
      unknown tmp[572166] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572168 'move' tmp[572166](429571 call isTrue chpl__testParOn[188305]))
      (572173 'move' tmp[572158](572170 '_paramFoldLogical' tmp[572159] tmp[572166]))
    }
    {
      (572178 'move' tmp[572158](572175 '_paramFoldLogical' tmp[572159] 0))
    }
    unknown call_tmp[690947] "expr temp" "maybe param" "maybe type" "temp"
    (690950 'move' call_tmp[690947](188542 call _cond_test tmp[572158]))
    if call_tmp[690947]
    {
      unknown call_tmp[690952] "expr temp" "maybe param" "maybe type" "temp"
      (690955 'move' call_tmp[690952](188468 '_get_user_file'))
      unknown call_tmp[690957] "maybe param" "maybe type" "temp"
      (690960 'move' call_tmp[690957](188469 'chpl_lookupFilename' call_tmp[690952]))
      const file_cs[188470] "dead at end of block" "const" "insert auto destroy"
      (545493 'init var' file_cs[188470] call_tmp[690957] c_string[19])
      (188473 'end of statement')
      unknown file[188476] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545495] "maybe param" "maybe type" "temp"
      (545504 'move' type_tmp[545495](545503 call string[26]))
      (545497 'init var split decl' file[188476] type_tmp[545495])
      (188479 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690962] "maybe param" "maybe type" "temp"
          (690965 'move' call_tmp[690962](188484 call createStringWithNewBuffer file_cs[188470]))
          (545506 'init var split init' file[188476] call_tmp[690962] type_tmp[545495])
          (484551 'end of statement' file[188476] file_cs[188470])
        }
      }
      unknown call_tmp[690967] "maybe param" "maybe type" "temp"
      (690970 'move' call_tmp[690967](188494 '_get_user_line'))
      const line[188495] "dead at end of block" "const" "insert auto destroy"
      (545509 'init var' line[188495] call_tmp[690967])
      (188498 'end of statement')
      (188540 call writeln "CHPL TEST PAR (" file[188476] ":" line[188495] "): "(188539 'expand_tuple' args[188454]))
      (484554 'end of statement' file[188476] line[188495])
    }
    (524175 return _void[55])
  }
  (355233 'used modules list'(188112 'use' ChapelStandard[20264])(188114 'use' SysCTypes[20940])(188117 'use' IO[230891]))
}