AST dump for MemTracking after pass denormalize.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_MemTracking[416069](const in arg _ln[2289802]:int(64)[13], in arg _fn[2289804]:int(32)[95]) : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_MemTracking_p[2282352]
    {
      goto _exit_chpl__init_MemTracking[2282387] _exit_chpl__init_MemTracking[2282387]
    }
    ref refIndentLevel[2282373]:int(32)[95] "temp"
    (2282371 call printModuleInit[20426] c"%*s\n" c"MemTracking" 11 _ln[2289802] _fn[2289804])
    (2282377 'move' refIndentLevel[2282373](2282376 'addr of' moduleInitLevel[20416]))
    (2282380 '+=' refIndentLevel[2282373] 1)
    (2282358 'move' chpl__init_MemTracking_p[2282352] 1)
    {
      (2280897 call chpl__init_SysCTypes[415961] _ln[2289802] _fn[2289804])
    }
    (2280893 call chpl_addModule[167693] c"MemTracking" chpl__deinit_MemTracking[1803859] _ln[2289802] _fn[2289804])
    const-val call_tmp[678491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678494 'move' call_tmp[678491](544331 call chpl_config_has_value[334] c"memTrack" c"Built-in"))
    if(2034917 '!' call_tmp[678491])
    {
      (544350 'move' tmp[544322] 0)
    }
    {
      const-val call_tmp[678506]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678509 'move' call_tmp[678506](544341 call chpl_config_get_value[350] c"memTrack" c"Built-in"))
      (544346 'move' tmp[544322](544344 call _command_line_cast[1349516] call_tmp[678506] _ln[2289802] _fn[2289804]))
    }
    (544324 'move' memTrack[166615] tmp[544322])
    const-val call_tmp[678511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678514 'move' call_tmp[678511](544361 call chpl_config_has_value[334] c"memStats" c"Built-in"))
    if(2034926 '!' call_tmp[678511])
    {
      (544380 'move' tmp[544352] 0)
    }
    {
      const-val call_tmp[678526]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678529 'move' call_tmp[678526](544371 call chpl_config_get_value[350] c"memStats" c"Built-in"))
      (544376 'move' tmp[544352](544374 call _command_line_cast[1349559] call_tmp[678526] _ln[2289802] _fn[2289804]))
    }
    (544354 'move' memStats[166620] tmp[544352])
    const-val call_tmp[678531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678534 'move' call_tmp[678531](544391 call chpl_config_has_value[334] c"memLeaksByType" c"Built-in"))
    if(2034935 '!' call_tmp[678531])
    {
      (544410 'move' tmp[544382] 0)
    }
    {
      const-val call_tmp[678546]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678549 'move' call_tmp[678546](544401 call chpl_config_get_value[350] c"memLeaksByType" c"Built-in"))
      (544406 'move' tmp[544382](544404 call _command_line_cast[1349602] call_tmp[678546] _ln[2289802] _fn[2289804]))
    }
    (544384 'move' memLeaksByType[166625] tmp[544382])
    const-val call_tmp[678551]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678554 'move' call_tmp[678551](544421 call chpl_config_has_value[334] c"memLeaks" c"Built-in"))
    if(2034944 '!' call_tmp[678551])
    {
      (544440 'move' tmp[544412] 0)
    }
    {
      const-val call_tmp[678566]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678569 'move' call_tmp[678566](544431 call chpl_config_get_value[350] c"memLeaks" c"Built-in"))
      (544436 'move' tmp[544412](544434 call _command_line_cast[1349645] call_tmp[678566] _ln[2289802] _fn[2289804]))
    }
    (544414 'move' memLeaks[166630] tmp[544412])
    const-val call_tmp[678571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678574 'move' call_tmp[678571](544451 call chpl_config_has_value[334] c"memMax" c"Built-in"))
    if(2034953 '!' call_tmp[678571])
    {
      (544470 'move' tmp[544442](1352466 'cast' uint(64)[115] 0 _ln[2289802] _fn[2289804]))
    }
    {
      const-val call_tmp[678586]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678589 'move' call_tmp[678586](544461 call chpl_config_get_value[350] c"memMax" c"Built-in"))
      (544466 'move' tmp[544442](544464 call _command_line_cast[1349696] call_tmp[678586] _ln[2289802] _fn[2289804]))
    }
    (544444 'move' memMax[166635] tmp[544442])
    const-val call_tmp[678591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678594 'move' call_tmp[678591](544481 call chpl_config_has_value[334] c"memThreshold" c"Built-in"))
    if(2034962 '!' call_tmp[678591])
    {
      (544500 'move' tmp[544472](1352470 'cast' uint(64)[115] 0 _ln[2289802] _fn[2289804]))
    }
    {
      const-val call_tmp[678606]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678609 'move' call_tmp[678606](544491 call chpl_config_get_value[350] c"memThreshold" c"Built-in"))
      (544496 'move' tmp[544472](544494 call _command_line_cast[1352030] call_tmp[678606] _ln[2289802] _fn[2289804]))
    }
    (544474 'move' memThreshold[166640] tmp[544472])
    const-val call_tmp[678611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678614 'move' call_tmp[678611](544511 call chpl_config_has_value[334] c"memLog" c"Built-in"))
    if(2034971 '!' call_tmp[678611])
    {
      (1352474 call init[30760] tmp[544502] _ln[2289802] _fn[2289804])
    }
    {
      const-val call_tmp[678626]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678629 'move' call_tmp[678626](544521 call chpl_config_get_value[350] c"memLog" c"Built-in"))
      const-val ret_tmp[1790353]:string[26] "temp"
      (544524 call _command_line_cast[1352074] call_tmp[678626] ret_tmp[1790353] _ln[2289802] _fn[2289804])
      (1790356 'move' tmp[544502] ret_tmp[1790353])
    }
    (544504 'move' memLog[166644] tmp[544502])
    const-val call_tmp[678631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678634 'move' call_tmp[678631](544541 call chpl_config_has_value[334] c"memLeaksLog" c"Built-in"))
    if(2034980 '!' call_tmp[678631])
    {
      (1352479 call init[30760] tmp[544532] _ln[2289802] _fn[2289804])
    }
    {
      const-val call_tmp[678646]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678649 'move' call_tmp[678646](544551 call chpl_config_get_value[350] c"memLeaksLog" c"Built-in"))
      const-val ret_tmp[1790389]:string[26] "temp"
      (544554 call _command_line_cast[1352380] call_tmp[678646] ret_tmp[1790389] _ln[2289802] _fn[2289804])
      (1790392 'move' tmp[544532] ret_tmp[1790389])
    }
    (544534 'move' memLeaksLog[166649] tmp[544532])
    const-val call_tmp[678651]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678654 'move' call_tmp[678651](544571 call chpl_config_has_value[334] c"memLeaksByDesc" c"Built-in"))
    if(2034989 '!' call_tmp[678651])
    {
      (1352484 call init[30760] tmp[544562] _ln[2289802] _fn[2289804])
    }
    {
      const-val call_tmp[678666]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678669 'move' call_tmp[678666](544581 call chpl_config_get_value[350] c"memLeaksByDesc" c"Built-in"))
      const-val ret_tmp[1790401]:string[26] "temp"
      (544584 call _command_line_cast[1352424] call_tmp[678666] ret_tmp[1790401] _ln[2289802] _fn[2289804])
      (1790404 'move' tmp[544562] ret_tmp[1790401])
    }
    (544564 'move' memLeaksByDesc[166654] tmp[544562])
    (678676 'move' call_tmp[678673] memMax[166635])
    (544592 'move' cMemMax[166665] call_tmp[678673])
    (678683 'move' call_tmp[678680] memThreshold[166640])
    (544594 'move' cMemThreshold[166675] call_tmp[678680])
    (2282383 '-=' refIndentLevel[2282373] 1)
    label _exit_chpl__init_MemTracking[2282387]
    (521982 return _void[55])
  }
  const-val memTrack[166615]:bool[10] "config" "const" "insert auto destroy"
  const-val memStats[166620]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaksByType[166625]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaks[166630]:bool[10] "config" "const" "insert auto destroy"
  const-val memMax[166635]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memThreshold[166640]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memLog[166644]:string[26] "config" "const" "insert auto destroy"
  const-val memLeaksLog[166649]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val memLeaksByDesc[166654]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val cMemMax[166665]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[166675]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[166685](ref arg ret_memTrack[166682]:bool[10], ref arg ret_memStats[166688]:bool[10], ref arg ret_memLeaksByType[166692]:bool[10], ref arg ret_memLeaksByDesc[166696]:c_string[19], ref arg ret_memLeaks[166700]:bool[10], ref arg ret_memMax[166704]:uint(64)[115], ref arg ret_memThreshold[166708]:uint(64)[115], ref arg ret_memLog[166712]:c_string[19], ref arg ret_memLeaksLog[166716]:c_string[19]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local_memLeaksLog[2277443]:string[26] "temp"
    (2277444 'move' local_memLeaksLog[2277443] memLeaksLog[166649])
    const-val local_memLog[2277435]:string[26] "temp"
    (2277436 'move' local_memLog[2277435] memLog[166644])
    const-val local__str_literal_503[2277428]:string[26] "temp"
    (2277429 'move' "Encountered corrupt string metadata" "Encountered corrupt string metadata")
    const-val local_memLeaksByDesc[2277422]:string[26] "temp"
    (2277423 'move' local_memLeaksByDesc[2277422] memLeaksByDesc[166654])
    const-val local__str_literal_129[2277416]:string[26] "temp"
    (2277417 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_cMemThreshold[2277410]:uint(64)[115] "temp"
    (2277411 'move' local_cMemThreshold[2277410] cMemThreshold[166675])
    const-val local_cMemMax[2277404]:uint(64)[115] "temp"
    (2277405 'move' local_cMemMax[2277404] cMemMax[166665])
    const-val local_memLeaks[2277398]:bool[10] "temp"
    (2277399 'move' local_memLeaks[2277398] memLeaks[166630])
    const-val local_memLeaksByType[2277392]:bool[10] "temp"
    (2277393 'move' local_memLeaksByType[2277392] memLeaksByType[166625])
    const-val local_memStats[2277386]:bool[10] "temp"
    (2277387 'move' local_memStats[2277386] memStats[166620])
    (2054528 '=' ret_memTrack[166682] memTrack[166615])
    (2054534 '=' ret_memStats[166688] local_memStats[2277386])
    (2054540 '=' ret_memLeaksByType[166692] local_memLeaksByType[2277392])
    (2054546 '=' ret_memLeaks[166700] local_memLeaks[2277398])
    (2125506 '=' ret_memMax[166704] local_cMemMax[2277404])
    (2125512 '=' ret_memThreshold[166708] local_cMemThreshold[2277410])
    const-val call_tmp[678685]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2083635]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2083637]:chpl_localeID_t[209306] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2083639 'move' call_tmp[2083637](2083642 call chpl_rt_buildLocaleID[209384] chpl_nodeID[208164] c_sublocid_any[89879]))
    (2083645 'move' call_tmp[2083635] call_tmp[2083637])
    const-val call_tmp[2083648]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2083650]:locale[28] "temp"
    (2083653 call chpl_localeID_to_locale[92857] call_tmp[2083635] ret_tmp[2083650] 90 38)
    (2083656 'move' call_tmp[2083648] ret_tmp[2083650])
    (1783019 'move' call_tmp[678685] call_tmp[2083648])
    val coerce_tmp[2084895]:BaseLocale[91205] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2084897 'move' coerce_tmp[2084895](2084899 '.v' call_tmp[678685] _instance[89979]))
    if(2084913 'ptr_eq'(2084906 'cast' object[22] coerce_tmp[2084895] 90 38) nil[44])
    {
      (2084919 call nilCheckHalt[210068] "argument to ! is nil" 90 38)
    }
    const-val call_tmp[2084922]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2285273 '_check_nil' coerce_tmp[2084895] 90 38)
    (2084924 'move' call_tmp[2084922](2084927 call id[90758] coerce_tmp[2084895] 90 38))
    if(2035838 '!=' call_tmp[2084922] 0)
    {
      ref i_this[2065225]:string[26] "temp"
      (2065229 'move' i_this[2065225](2065227 'set reference' memLeaksByDesc[166654]))
      const-val coerce_tmp[2065234]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065236 'move' coerce_tmp[2065234](2065238 '.v' local_memLeaksByDesc[2277422] cachedNumCodepoints[30731]))
      (2065244 'noop')
      const-val call_tmp[2065245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065247 'move' call_tmp[2065245](2065250 call countNumCodepoints[181346] i_this[2065225] 91 38))
      if(2065256 '!=' coerce_tmp[2065234] call_tmp[2065245])
      {
        (2065262 call halt[154071] "Encountered corrupt string metadata" 91 38)
      }
      if(2035853 '!=' coerce_tmp[2065234] 0)
      {
        val local_memLeaksByDesc[166765]:string[26] "dead at end of block" "insert auto destroy"
        (544596 call init=[30771] local_memLeaksByDesc[166765] local_memLeaksByDesc[2277422] 92 38)
        (2268829 '.=' local_memLeaksByDesc[166765] isOwned[30743] 0)
        (2037804 '=' ret_memLeaksByDesc[166696](2068291 'cast' c_string[19](2068284 '.v' local_memLeaksByDesc[166765] buff[30737]) 95 38))
        ref i_x[2049196]:string[26] "temp"
        (2049200 'move' i_x[2049196](2049198 'set reference' local_memLeaksByDesc[166765]))
        (2049204 call deinit[30831] i_x[2049196] 95 38)
      }
      {
        (2037946 '=' ret_memLeaksByDesc[166696](2037943 'cast' c_string[19](2037936 'cast' c_void_ptr[149] nil[44] 97 38) 97 38))
      }
      ref i_this[2065267]:string[26] "temp"
      (2065271 'move' i_this[2065267](2065269 'set reference' memLog[166644]))
      const-val coerce_tmp[2065276]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065278 'move' coerce_tmp[2065276](2065280 '.v' local_memLog[2277435] cachedNumCodepoints[30731]))
      (2065286 'noop')
      const-val call_tmp[2065287]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065289 'move' call_tmp[2065287](2065292 call countNumCodepoints[181346] i_this[2065267] 100 38))
      if(2065298 '!=' coerce_tmp[2065276] call_tmp[2065287])
      {
        (2065304 call halt[154071] "Encountered corrupt string metadata" 100 38)
      }
      if(2035868 '!=' coerce_tmp[2065276] 0)
      {
        val local_memLog[166807]:string[26] "dead at end of block" "insert auto destroy"
        (544598 call init=[30771] local_memLog[166807] local_memLog[2277435] 101 38)
        (2268838 '.=' local_memLog[166807] isOwned[30743] 0)
        (2037816 '=' ret_memLog[166712](2068314 'cast' c_string[19](2068307 '.v' local_memLog[166807] buff[30737]) 104 38))
        ref i_x[2049208]:string[26] "temp"
        (2049212 'move' i_x[2049208](2049210 'set reference' local_memLog[166807]))
        (2049216 call deinit[30831] i_x[2049208] 104 38)
      }
      {
        (2037966 '=' ret_memLog[166712](2037963 'cast' c_string[19](2037956 'cast' c_void_ptr[149] nil[44] 106 38) 106 38))
      }
      ref i_this[2065309]:string[26] "temp"
      (2065313 'move' i_this[2065309](2065311 'set reference' memLeaksLog[166649]))
      const-val coerce_tmp[2065318]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2065320 'move' coerce_tmp[2065318](2065322 '.v' local_memLeaksLog[2277443] cachedNumCodepoints[30731]))
      (2065328 'noop')
      const-val call_tmp[2065329]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2065331 'move' call_tmp[2065329](2065334 call countNumCodepoints[181346] i_this[2065309] 109 38))
      if(2065340 '!=' coerce_tmp[2065318] call_tmp[2065329])
      {
        (2065346 call halt[154071] "Encountered corrupt string metadata" 109 38)
      }
      if(2035883 '!=' coerce_tmp[2065318] 0)
      {
        val local_memLeaksLog[166848]:string[26] "dead at end of block" "insert auto destroy"
        (544600 call init=[30771] local_memLeaksLog[166848] local_memLeaksLog[2277443] 110 38)
        (2268847 '.=' local_memLeaksLog[166848] isOwned[30743] 0)
        (2037822 '=' ret_memLeaksLog[166716](2068337 'cast' c_string[19](2068330 '.v' local_memLeaksLog[166848] buff[30737]) 113 38))
        ref i_x[2049220]:string[26] "temp"
        (2049224 'move' i_x[2049220](2049222 'set reference' local_memLeaksLog[166848]))
        (2049228 call deinit[30831] i_x[2049220] 113 38)
      }
      {
        (2037986 '=' ret_memLeaksLog[166716](2037983 'cast' c_string[19](2037976 'cast' c_void_ptr[149] nil[44] 115 38) 115 38))
      }
    }
    {
      (2037828 '=' ret_memLeaksByDesc[166696](2068360 'cast' c_string[19](2068353 '.v' local_memLeaksByDesc[2277422] buff[30737]) 119 38))
      (2037834 '=' ret_memLog[166712](2068383 'cast' c_string[19](2068376 '.v' local_memLog[2277435] buff[30737]) 120 38))
      (2037840 '=' ret_memLeaksLog[166716](2068406 'cast' c_string[19](2068399 '.v' local_memLeaksLog[2277443] buff[30737]) 121 38))
    }
    ref i_x[2177944]:locale[28] "temp"
    (2177948 'move' i_x[2177944](2177946 'set reference' call_tmp[678685]))
    (2177952 call deinit[90189] i_x[2177944])
    (521980 return _void[55])
  }
  val tmp[544322]:bool[10] "dead at end of block" "temp"
  val tmp[544352]:bool[10] "dead at end of block" "temp"
  val tmp[544382]:bool[10] "dead at end of block" "temp"
  val tmp[544412]:bool[10] "dead at end of block" "temp"
  val tmp[544442]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544472]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544502]:string[26] "dead at end of block" "temp"
  val tmp[544532]:string[26] "dead at end of block" "temp"
  val tmp[544562]:string[26] "dead at end of block" "temp"
  const-val call_tmp[678673]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[678680]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_MemTracking[1803859](const in arg _ln[2300906]:int(64)[13], in arg _fn[2300908]:int(32)[95]) : void[4] "resolved"
  {
    ref i_x[2052580]:string[26] "temp"
    (2052584 'move' i_x[2052580](2052582 'set reference' memLog[166644]))
    (2052588 call deinit[30831] i_x[2052580] _ln[2300906] _fn[2300908])
    (1803862 return _void[55])
  }
}