AST dump for MemTracking after pass denormalize.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_MemTracking[416054](const in arg _ln[2602614]:int(64)[13], in arg _fn[2602616]:int(32)[95]) : void[4] "insert line file info" "module init" "resolved"
  {
    if chpl__init_MemTracking_p[2591566]
    {
      goto _exit_chpl__init_MemTracking[2591601] _exit_chpl__init_MemTracking[2591601]
    }
    ref refIndentLevel[2591587]:int(32)[95] "temp"
    (2591585 call printModuleInit[20429] c"%*s\n" c"MemTracking" 11 _ln[2602614] _fn[2602616])
    (2591591 'move' refIndentLevel[2591587](2591590 'addr of' moduleInitLevel[20419]))
    (2591594 '+=' refIndentLevel[2591587] 1)
    (2591572 'move' chpl__init_MemTracking_p[2591566] 1)
    {
      (2590106 call chpl__init_SysCTypes[415946] _ln[2602614] _fn[2602616])
    }
    (2590102 call chpl_addModule[167735] c"MemTracking" chpl__deinit_MemTracking[1887212] _ln[2602614] _fn[2602616])
    const-val call_tmp[678482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678485 'move' call_tmp[678482](544322 call chpl_config_has_value[334] c"memTrack" c"Built-in"))
    if(2176074 '!' call_tmp[678482])
    {
      (544341 'move' tmp[544313] 0)
    }
    {
      const-val call_tmp[678497]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678500 'move' call_tmp[678497](544332 call chpl_config_get_value[350] c"memTrack" c"Built-in"))
      (544337 'move' tmp[544313](544335 call _command_line_cast[1353876] call_tmp[678497] _ln[2602614] _fn[2602616]))
    }
    (544315 'move' memTrack[166657] tmp[544313])
    (2146803 '_private_broadcast' memTrack[166657])
    const-val call_tmp[678502]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678505 'move' call_tmp[678502](544352 call chpl_config_has_value[334] c"memStats" c"Built-in"))
    if(2176083 '!' call_tmp[678502])
    {
      (544371 'move' tmp[544343] 0)
    }
    {
      const-val call_tmp[678517]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678520 'move' call_tmp[678517](544362 call chpl_config_get_value[350] c"memStats" c"Built-in"))
      (544367 'move' tmp[544343](544365 call _command_line_cast[1353919] call_tmp[678517] _ln[2602614] _fn[2602616]))
    }
    (544345 'move' memStats[166662] tmp[544343])
    (2146805 '_private_broadcast' memStats[166662])
    const-val call_tmp[678522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678525 'move' call_tmp[678522](544382 call chpl_config_has_value[334] c"memLeaksByType" c"Built-in"))
    if(2176092 '!' call_tmp[678522])
    {
      (544401 'move' tmp[544373] 0)
    }
    {
      const-val call_tmp[678537]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678540 'move' call_tmp[678537](544392 call chpl_config_get_value[350] c"memLeaksByType" c"Built-in"))
      (544397 'move' tmp[544373](544395 call _command_line_cast[1353962] call_tmp[678537] _ln[2602614] _fn[2602616]))
    }
    (544375 'move' memLeaksByType[166667] tmp[544373])
    (2146807 '_private_broadcast' memLeaksByType[166667])
    const-val call_tmp[678542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678545 'move' call_tmp[678542](544412 call chpl_config_has_value[334] c"memLeaks" c"Built-in"))
    if(2176101 '!' call_tmp[678542])
    {
      (544431 'move' tmp[544403] 0)
    }
    {
      const-val call_tmp[678557]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678560 'move' call_tmp[678557](544422 call chpl_config_get_value[350] c"memLeaks" c"Built-in"))
      (544427 'move' tmp[544403](544425 call _command_line_cast[1354005] call_tmp[678557] _ln[2602614] _fn[2602616]))
    }
    (544405 'move' memLeaks[166672] tmp[544403])
    (2146809 '_private_broadcast' memLeaks[166672])
    const-val call_tmp[678562]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678565 'move' call_tmp[678562](544442 call chpl_config_has_value[334] c"memMax" c"Built-in"))
    if(2176110 '!' call_tmp[678562])
    {
      (544461 'move' tmp[544433](1356826 'cast' uint(64)[115] 0 _ln[2602614] _fn[2602616]))
    }
    {
      const-val call_tmp[678577]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678580 'move' call_tmp[678577](544452 call chpl_config_get_value[350] c"memMax" c"Built-in"))
      (544457 'move' tmp[544433](544455 call _command_line_cast[1354056] call_tmp[678577] _ln[2602614] _fn[2602616]))
    }
    (544435 'move' memMax[166677] tmp[544433])
    (2146811 '_private_broadcast' memMax[166677])
    const-val call_tmp[678582]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678585 'move' call_tmp[678582](544472 call chpl_config_has_value[334] c"memThreshold" c"Built-in"))
    if(2176119 '!' call_tmp[678582])
    {
      (544491 'move' tmp[544463](1356830 'cast' uint(64)[115] 0 _ln[2602614] _fn[2602616]))
    }
    {
      const-val call_tmp[678597]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678600 'move' call_tmp[678597](544482 call chpl_config_get_value[350] c"memThreshold" c"Built-in"))
      (544487 'move' tmp[544463](544485 call _command_line_cast[1356390] call_tmp[678597] _ln[2602614] _fn[2602616]))
    }
    (544465 'move' memThreshold[166682] tmp[544463])
    (2146813 '_private_broadcast' memThreshold[166682])
    const-val call_tmp[678602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678605 'move' call_tmp[678602](544502 call chpl_config_has_value[334] c"memLog" c"Built-in"))
    if(2176128 '!' call_tmp[678602])
    {
      (1356834 call init[30763] tmp[544493] _ln[2602614] _fn[2602616])
    }
    {
      const-val call_tmp[678617]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678620 'move' call_tmp[678617](544512 call chpl_config_get_value[350] c"memLog" c"Built-in"))
      const-val ret_tmp[1871928]:string[26] "temp"
      (544515 call _command_line_cast[1356434] call_tmp[678617] ret_tmp[1871928] _ln[2602614] _fn[2602616])
      (1871931 'move' tmp[544493] ret_tmp[1871928])
    }
    (544495 'move' memLog[166686] tmp[544493])
    (2146815 '_private_broadcast' memLog[166686])
    const-val call_tmp[678622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678625 'move' call_tmp[678622](544532 call chpl_config_has_value[334] c"memLeaksLog" c"Built-in"))
    if(2176137 '!' call_tmp[678622])
    {
      (1356839 call init[30763] tmp[544523] _ln[2602614] _fn[2602616])
    }
    {
      const-val call_tmp[678637]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678640 'move' call_tmp[678637](544542 call chpl_config_get_value[350] c"memLeaksLog" c"Built-in"))
      const-val ret_tmp[1871964]:string[26] "temp"
      (544545 call _command_line_cast[1356740] call_tmp[678637] ret_tmp[1871964] _ln[2602614] _fn[2602616])
      (1871967 'move' tmp[544523] ret_tmp[1871964])
    }
    (544525 'move' memLeaksLog[166691] tmp[544523])
    (2146817 '_private_broadcast' memLeaksLog[166691])
    const-val call_tmp[678642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (678645 'move' call_tmp[678642](544562 call chpl_config_has_value[334] c"memLeaksByDesc" c"Built-in"))
    if(2176146 '!' call_tmp[678642])
    {
      (1356844 call init[30763] tmp[544553] _ln[2602614] _fn[2602616])
    }
    {
      const-val call_tmp[678657]:c_string[19] "dead at end of block" "expr temp" "maybe param" "temp"
      (678660 'move' call_tmp[678657](544572 call chpl_config_get_value[350] c"memLeaksByDesc" c"Built-in"))
      const-val ret_tmp[1871976]:string[26] "temp"
      (544575 call _command_line_cast[1356784] call_tmp[678657] ret_tmp[1871976] _ln[2602614] _fn[2602616])
      (1871979 'move' tmp[544553] ret_tmp[1871976])
    }
    (544555 'move' memLeaksByDesc[166696] tmp[544553])
    (2146819 '_private_broadcast' memLeaksByDesc[166696])
    (678667 'move' call_tmp[678664] memMax[166677])
    (544583 'move' cMemMax[166707] call_tmp[678664])
    (2146821 '_private_broadcast' cMemMax[166707])
    (678674 'move' call_tmp[678671] memThreshold[166682])
    (544585 'move' cMemThreshold[166717] call_tmp[678671])
    (2146823 '_private_broadcast' cMemThreshold[166717])
    (2591597 '-=' refIndentLevel[2591587] 1)
    label _exit_chpl__init_MemTracking[2591601]
    (521964 return _void[55])
  }
  const-val memTrack[166657]:bool[10] "config" "const" "insert auto destroy"
  const-val memStats[166662]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaksByType[166667]:bool[10] "config" "const" "insert auto destroy"
  const-val memLeaks[166672]:bool[10] "config" "const" "insert auto destroy"
  const-val memMax[166677]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memThreshold[166682]:uint(64)[115] "config" "const" "insert auto destroy"
  const-val memLog[166686]:string[26] "config" "const" "insert auto destroy"
  const-val memLeaksLog[166691]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val memLeaksByDesc[166696]:string[26] "config" "const" "insert auto destroy" "no auto destroy"
  const-val cMemMax[166707]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  const-val cMemThreshold[166717]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
  function chpl_memTracking_returnConfigVals[166727](ref arg ret_memTrack[166724]:bool[10], ref arg ret_memStats[166730]:bool[10], ref arg ret_memLeaksByType[166734]:bool[10], ref arg ret_memLeaksByDesc[166738]:c_string[19], ref arg ret_memLeaks[166742]:bool[10], ref arg ret_memMax[166746]:uint(64)[115], ref arg ret_memThreshold[166750]:uint(64)[115], ref arg ret_memLog[166754]:c_string[19], ref arg ret_memLeaksLog[166758]:c_string[19]) : void[4] "export" "local args" "resolved" "no return value for void"
  {
    const-val local_memLeaksLog[2514836]:string[26] "temp"
    (2514837 'move' local_memLeaksLog[2514836] memLeaksLog[166691])
    const-val local_memLog[2514827]:string[26] "temp"
    (2514828 'move' local_memLog[2514827] memLog[166686])
    const-val local__str_literal_4796[2514821]:string[26] "temp"
    (2514822 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_503[2514814]:string[26] "temp"
    (2514815 'move' "Encountered corrupt string metadata" "Encountered corrupt string metadata")
    const-val local_memLeaksByDesc[2514808]:string[26] "temp"
    (2514809 'move' local_memLeaksByDesc[2514808] memLeaksByDesc[166696])
    const-val local__str_literal_129[2514802]:string[26] "temp"
    (2514803 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_cMemThreshold[2514796]:uint(64)[115] "temp"
    (2514797 'move' local_cMemThreshold[2514796] cMemThreshold[166717])
    const-val local_cMemMax[2514790]:uint(64)[115] "temp"
    (2514791 'move' local_cMemMax[2514790] cMemMax[166707])
    const-val local_memLeaks[2514784]:bool[10] "temp"
    (2514785 'move' local_memLeaks[2514784] memLeaks[166672])
    const-val local_memLeaksByType[2514778]:bool[10] "temp"
    (2514779 'move' local_memLeaksByType[2514778] memLeaksByType[166667])
    const-val local_memStats[2514772]:bool[10] "temp"
    (2514773 'move' local_memStats[2514772] memStats[166662])
    (2198659 '=' ret_memTrack[166724] memTrack[166657])
    (2198665 '=' ret_memStats[166730] local_memStats[2514772])
    (2198671 '=' ret_memLeaksByType[166734] local_memLeaksByType[2514778])
    (2198677 '=' ret_memLeaks[166742] local_memLeaks[2514784])
    (2278658 '=' ret_memMax[166746] local_cMemMax[2514790])
    (2278664 '=' ret_memThreshold[166750] local_cMemThreshold[2514796])
    const-val call_tmp[678676]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2231912]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2231914]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2231916 'move' call_tmp[2231914](2231919 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2231922 'move' call_tmp[2231912] call_tmp[2231914])
    const-val call_tmp[2231925]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2231927]:locale[28] "temp"
    wide-ref tmp[2567796]:chpl_localeID_t[209352] "temp"
    (2567800 'move' tmp[2567796](2567798 'set reference' call_tmp[2231912]))
    (2231930 call chpl_localeID_to_locale[92852] tmp[2567796] ret_tmp[2231927] 90 38)
    (2231933 'move' call_tmp[2231925] ret_tmp[2231927])
    (1863997 'move' call_tmp[678676] call_tmp[2231925])
    val coerce_tmp[2234322]:__wide_BaseLocale[2519129] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2234324 'move' coerce_tmp[2234322](2234326 '.v' call_tmp[678676] _instance[89978]))
    val coerce_tmp[2234329]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2234331 'move' coerce_tmp[2234329](2234333 'cast' object[22] coerce_tmp[2234322] 90 38))
    val tmp[2568171]:__wide_object[2519087] "temp"
    (2568174 'move' tmp[2568171] nil[44])
    if(2234340 'ptr_eq' coerce_tmp[2234329] tmp[2568171])
    {
      (2234346 call nilCheckHalt[210171] "argument to ! is nil" 90 38)
    }
    const-val call_tmp[2234349]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2596083 '_check_nil' coerce_tmp[2234322] 90 38)
    (2234351 'move' call_tmp[2234349](2234354 call id[90757] coerce_tmp[2234322] 90 38))
    if(2177306 '!=' call_tmp[2234349] 0)
    {
      ref i_this[2210048]:string[26] "temp"
      (2210052 'move' i_this[2210048](2210050 'set reference' memLeaksByDesc[166696]))
      const-val coerce_tmp[2210057]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2565971 'move' coerce_tmp[2210057](2210061 '.v' local_memLeaksByDesc[2514808] cachedNumCodepoints[30734]))
      (2210067 'noop')
      const-val call_tmp[2210068]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2565974]:string[26] "temp"
      (2565977 'move' tmp[2565974] i_this[2210048])
      (2210070 'move' call_tmp[2210068](2210073 call countNumCodepoints[181380] tmp[2565974] 91 38))
      if(2210079 '!=' coerce_tmp[2210057] call_tmp[2210068])
      {
        (2210085 call halt[154111] "Encountered corrupt string metadata" 91 38)
      }
      if(2177321 '!=' coerce_tmp[2210057] 0)
      {
        val local_memLeaksByDesc[166807]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2552688]:string[26] "temp"
        (2552692 'move' tmp[2552688](2552690 'set reference' local_memLeaksByDesc[2514808]))
        (544587 call init=[30774] local_memLeaksByDesc[166807] tmp[2552688] 92 38)
        (2502455 '.=' local_memLeaksByDesc[166807] isOwned[30746] 0)
        if(2215774 '!='(2215767 '.v' local_memLeaksByDesc[166807] locale_id[30757]) chpl_nodeID[208207])
        {
          (2215780 call halt[154111] "Cannot call .c_str() on a remote string" 95 38)
        }
        (2182666 '=' ret_memLeaksByDesc[166738](2215794 'cast' c_string[19](2215787 '.v' local_memLeaksByDesc[166807] buff[30740]) 95 38))
        ref i_x[2192983]:string[26] "temp"
        (2192987 'move' i_x[2192983](2192985 'set reference' local_memLeaksByDesc[166807]))
        wide-ref tmp[2563902]:string[26] "temp"
        (2563905 'move' tmp[2563902] i_x[2192983])
        (2192991 call deinit[30834] tmp[2563902] 95 38)
      }
      {
        (2182808 '=' ret_memLeaksByDesc[166738](2182805 'cast' c_string[19](2182798 'cast' c_void_ptr[149] nil[44] 97 38) 97 38))
      }
      ref i_this[2210090]:string[26] "temp"
      (2210094 'move' i_this[2210090](2210092 'set reference' memLog[166686]))
      const-val coerce_tmp[2210099]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2565983 'move' coerce_tmp[2210099](2210103 '.v' local_memLog[2514827] cachedNumCodepoints[30734]))
      (2210109 'noop')
      const-val call_tmp[2210110]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2565986]:string[26] "temp"
      (2565989 'move' tmp[2565986] i_this[2210090])
      (2210112 'move' call_tmp[2210110](2210115 call countNumCodepoints[181380] tmp[2565986] 100 38))
      if(2210121 '!=' coerce_tmp[2210099] call_tmp[2210110])
      {
        (2210127 call halt[154111] "Encountered corrupt string metadata" 100 38)
      }
      if(2177336 '!=' coerce_tmp[2210099] 0)
      {
        val local_memLog[166849]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2552695]:string[26] "temp"
        (2552699 'move' tmp[2552695](2552697 'set reference' local_memLog[2514827]))
        (544589 call init=[30774] local_memLog[166849] tmp[2552695] 101 38)
        (2502465 '.=' local_memLog[166849] isOwned[30746] 0)
        if(2215817 '!='(2215810 '.v' local_memLog[166849] locale_id[30757]) chpl_nodeID[208207])
        {
          (2215823 call halt[154111] "Cannot call .c_str() on a remote string" 104 38)
        }
        (2182678 '=' ret_memLog[166754](2215837 'cast' c_string[19](2215830 '.v' local_memLog[166849] buff[30740]) 104 38))
        ref i_x[2192995]:string[26] "temp"
        (2192999 'move' i_x[2192995](2192997 'set reference' local_memLog[166849]))
        wide-ref tmp[2563908]:string[26] "temp"
        (2563911 'move' tmp[2563908] i_x[2192995])
        (2193003 call deinit[30834] tmp[2563908] 104 38)
      }
      {
        (2182828 '=' ret_memLog[166754](2182825 'cast' c_string[19](2182818 'cast' c_void_ptr[149] nil[44] 106 38) 106 38))
      }
      ref i_this[2210132]:string[26] "temp"
      (2210136 'move' i_this[2210132](2210134 'set reference' memLeaksLog[166691]))
      const-val coerce_tmp[2210141]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2565995 'move' coerce_tmp[2210141](2210145 '.v' local_memLeaksLog[2514836] cachedNumCodepoints[30734]))
      (2210151 'noop')
      const-val call_tmp[2210152]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      wide-ref tmp[2565998]:string[26] "temp"
      (2566001 'move' tmp[2565998] i_this[2210132])
      (2210154 'move' call_tmp[2210152](2210157 call countNumCodepoints[181380] tmp[2565998] 109 38))
      if(2210163 '!=' coerce_tmp[2210141] call_tmp[2210152])
      {
        (2210169 call halt[154111] "Encountered corrupt string metadata" 109 38)
      }
      if(2177351 '!=' coerce_tmp[2210141] 0)
      {
        val local_memLeaksLog[166890]:string[26] "dead at end of block" "insert auto destroy"
        wide-ref tmp[2552702]:string[26] "temp"
        (2552706 'move' tmp[2552702](2552704 'set reference' local_memLeaksLog[2514836]))
        (544591 call init=[30774] local_memLeaksLog[166890] tmp[2552702] 110 38)
        (2502475 '.=' local_memLeaksLog[166890] isOwned[30746] 0)
        if(2215860 '!='(2215853 '.v' local_memLeaksLog[166890] locale_id[30757]) chpl_nodeID[208207])
        {
          (2215866 call halt[154111] "Cannot call .c_str() on a remote string" 113 38)
        }
        (2182684 '=' ret_memLeaksLog[166758](2215880 'cast' c_string[19](2215873 '.v' local_memLeaksLog[166890] buff[30740]) 113 38))
        ref i_x[2193007]:string[26] "temp"
        (2193011 'move' i_x[2193007](2193009 'set reference' local_memLeaksLog[166890]))
        wide-ref tmp[2563914]:string[26] "temp"
        (2563917 'move' tmp[2563914] i_x[2193007])
        (2193015 call deinit[30834] tmp[2563914] 113 38)
      }
      {
        (2182848 '=' ret_memLeaksLog[166758](2182845 'cast' c_string[19](2182838 'cast' c_void_ptr[149] nil[44] 115 38) 115 38))
      }
    }
    {
      if(2215903 '!='(2215896 '.v' local_memLeaksByDesc[2514808] locale_id[30757]) chpl_nodeID[208207])
      {
        (2215909 call halt[154111] "Cannot call .c_str() on a remote string" 119 38)
      }
      (2182690 '=' ret_memLeaksByDesc[166738](2215923 'cast' c_string[19](2215916 '.v' local_memLeaksByDesc[2514808] buff[30740]) 119 38))
      if(2215946 '!='(2215939 '.v' local_memLog[2514827] locale_id[30757]) chpl_nodeID[208207])
      {
        (2215952 call halt[154111] "Cannot call .c_str() on a remote string" 120 38)
      }
      (2182696 '=' ret_memLog[166754](2215966 'cast' c_string[19](2215959 '.v' local_memLog[2514827] buff[30740]) 120 38))
      if(2215989 '!='(2215982 '.v' local_memLeaksLog[2514836] locale_id[30757]) chpl_nodeID[208207])
      {
        (2215995 call halt[154111] "Cannot call .c_str() on a remote string" 121 38)
      }
      (2182702 '=' ret_memLeaksLog[166758](2216009 'cast' c_string[19](2216002 '.v' local_memLeaksLog[2514836] buff[30740]) 121 38))
    }
    ref i_x[2332118]:locale[28] "temp"
    (2332122 'move' i_x[2332118](2332120 'set reference' call_tmp[678676]))
    wide-ref tmp[2573055]:locale[28] "temp"
    (2573058 'move' tmp[2573055] i_x[2332118])
    (2332126 call deinit[90188] tmp[2573055])
    (521962 return _void[55])
  }
  val tmp[544313]:bool[10] "dead at end of block" "temp"
  val tmp[544343]:bool[10] "dead at end of block" "temp"
  val tmp[544373]:bool[10] "dead at end of block" "temp"
  val tmp[544403]:bool[10] "dead at end of block" "temp"
  val tmp[544433]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544463]:uint(64)[115] "dead at end of block" "temp"
  val tmp[544493]:string[26] "dead at end of block" "temp"
  val tmp[544523]:string[26] "dead at end of block" "temp"
  val tmp[544553]:string[26] "dead at end of block" "temp"
  const-val call_tmp[678664]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[678671]:uint(64)[115] "dead at end of block" "maybe param" "temp"
  function chpl__deinit_MemTracking[1887212](const in arg _ln[2629902]:int(64)[13], in arg _fn[2629904]:int(32)[95]) : void[4] "resolved"
  {
    ref i_x[2196439]:string[26] "temp"
    (2196443 'move' i_x[2196439](2196441 'set reference' memLog[166686]))
    wide-ref tmp[2565072]:string[26] "temp"
    (2565075 'move' tmp[2565072] i_x[2196439])
    (2196447 call deinit[30834] tmp[2565072] _ln[2629902] _fn[2629904])
    (1887215 return _void[55])
  }
}