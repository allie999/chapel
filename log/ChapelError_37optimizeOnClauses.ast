AST dump for ChapelError after pass optimizeOnClauses.
Module use list: ChapelStandard ChapelLocks 

{
  type _class_localson_fn[2148185] val _runtime_hdr[2148186]:chpl_comm_on_bundle_t[209359] val _0_tmp[2148188]:chpl_localeID_t[209352] wide-ref _1_this[2148190]:chpl_TaskErrors[168348] val _2_err[2148192]:__wide_Error[2519192]
  function chpl__init_ChapelError[416060]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    (522383 return _void[55])
  }
  function __wide_Error[2519192].message[167975](const in arg this[167994]:__wide_Error[2519192], wide-ref arg _retArg[1864656]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "resolved" "virtual"
  {
    wide-ref call_tmp[2282753]:string[26] "dead after last mention" "maybe param" "temp"
    (2282755 'move' call_tmp[2282753](2282757 '.' this[167994] _msg[167930]))
    val ret[2271236]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2271238]:string[26] "dead after last mention" "temp"
    (2271241 call init=[30774] tmp[2271238] call_tmp[2282753])
    (2271244 'move' ret[2271236] tmp[2271238])
    (1864658 '=' _retArg[1864656] ret[2271236])
    (1864662 return _void[55])
  }
  function __wide_Error[2519192].deinit[811807](const in arg this[811811]:__wide_Error[2519192]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848288]
    wide-ref _field_destructor_tmp_[1848286]:string[26] "temp"
    (1848293 'move' _field_destructor_tmp_[1848286](1848290 '.' this[811811] _msg[167930]))
    (1848295 call deinit[30834] _field_destructor_tmp_[1848286])
    (811819 return _void[55])
  }
  type Error[167984] val super[355739]:object[22] "super class" val _next[167912]:__wide_Error[2519192] "no doc" val thrownLine[167917]:int(64)[13] "no doc" val thrownFileId[167925]:int(32)[95] "no doc" val _msg[167930]:string[26] "no doc" val _hasThrowInfo[167936]:bool[10] "no doc"
  function __wide_NilThrownError[2519199].message[168004](const in arg this[168031]:__wide_NilThrownError[2519199], wide-ref arg _retArg[1876350]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2207[2514860]:string[26] "temp"
    (2514861 'move' "thrown error was nil" "thrown error was nil")
    val inlineImm[2271888]:string[26] "temp"
    (2271891 'move' inlineImm[2271888] "thrown error was nil")
    ref i_x[2271893]:string[26] "temp"
    (2271897 'move' i_x[2271893](2271895 'set reference' inlineImm[2271888]))
    val ret[2271900]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2271902]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2568982]:string[26] "temp"
    (2568985 'move' tmp[2568982] i_x[2271893])
    (2271905 call init=[30774] tmp[2271902] tmp[2568982])
    (2271908 'move' ret[2271900] tmp[2271902])
    (1876352 '=' _retArg[1876350] ret[2271900])
    (1876356 return _void[55])
  }
  function __wide_NilThrownError[2519199].deinit[811911](const in arg this[811915]:__wide_NilThrownError[2519199]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1848313]
    val _parent_destructor_tmp_[1848308]:__wide_Error[2519192] "temp"
    (1848315 'move' _parent_destructor_tmp_[1848308](1848309 'cast' Error[167984] this[811915]))
    wide-ref _field_destructor_tmp_[2282804]:string[26] "temp"
    (2282806 'move' _field_destructor_tmp_[2282804](2282808 '.' _parent_destructor_tmp_[1848308] _msg[167930]))
    (2282812 call deinit[30834] _field_destructor_tmp_[2282804])
    (811923 return _void[55])
  }
  function _local__new[2550411]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2550414]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[2550416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2550418 'move' call_tmp[2550416](2550420 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[2550422]:c_void_ptr[149] "dead after last mention" "temp"
    (2550424 'move' cast_tmp[2550422](2550427 call _local_chpl_here_alloc[2535446] call_tmp[2550416] 2))
    (2550430 'move' initTemp[2550414](2550432 'cast' NilThrownError[168029] cast_tmp[2550422]))
    (2550435 'setcid' initTemp[2550414])
    val super_tmp[2550437]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2588370]:Error[167984] "temp"
    (2550439 'move' tmp[2588370](2550441 '.v' initTemp[2550414] super[355741]))
    (2588373 'move' super_tmp[2550437] tmp[2588370])
    val super_tmp[2550444]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2588376]:object[22] "temp"
    (2550446 'move' tmp[2588376](2550448 '.v' super_tmp[2550437] super[355739]))
    (2588379 'move' super_tmp[2550444] tmp[2588376])
    (2550451 'setcid' super_tmp[2550444])
    val call_tmp[2550453]:object[22] "dead at end of block" "maybe param" "temp"
    (2550455 'move' call_tmp[2550453](2550457 'cast' object[22] super_tmp[2550437]))
    (2550460 'setcid' call_tmp[2550453])
    val init_coerce_tmp[2550462]:Error[167984] "dead after last mention" "temp"
    (2550464 'move' init_coerce_tmp[2550462](2550466 'cast' Error[167984] nil[44]))
    val tmp[2588382]:__wide_Error[2519192] "temp"
    (2588385 'move' tmp[2588382] init_coerce_tmp[2550462])
    (2550469 '.=' super_tmp[2550437] _next[167912] tmp[2588382])
    (2550473 '.=' super_tmp[2550437] thrownLine[167917] 0)
    (2550477 '.=' super_tmp[2550437] thrownFileId[167925] 0)
    val tmp[2550481]:string[26] "dead after last mention" "temp"
    (2550484 call _local_init[2528957] tmp[2550481])
    (2550486 '.=' super_tmp[2550437] _msg[167930] tmp[2550481])
    (2550490 '.=' super_tmp[2550437] _hasThrowInfo[167936] 0)
    (2550494 'setcid' super_tmp[2550437])
    val call_tmp[2550496]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2550498 'move' call_tmp[2550496](2550500 'cast' Error[167984] initTemp[2550414]))
    (2550503 'setcid' call_tmp[2550496])
    (2550505 'setcid' initTemp[2550414])
    (2550507 return initTemp[2550414])
  }
  function _new[969610]() : NilThrownError[168029] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[969612]:NilThrownError[168029] "dead after last mention" "temp"
    const-val call_tmp[969656]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (969659 'move' call_tmp[969656](969668 'sizeof_bundle' NilThrownError[168029]))
    const-val cast_tmp[969671]:c_void_ptr[149] "dead after last mention" "temp"
    (969673 'move' cast_tmp[969671](969624 call chpl_here_alloc[187788] call_tmp[969656] 2))
    (969627 'move' initTemp[969612](969675 'cast' NilThrownError[168029] cast_tmp[969671]))
    (969629 'setcid' initTemp[969612])
    val super_tmp[2282862]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2569699]:Error[167984] "temp"
    (2282864 'move' tmp[2569699](2282866 '.v' initTemp[969612] super[355741]))
    (2569702 'move' super_tmp[2282862] tmp[2569699])
    val super_tmp[2282869]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2569705]:object[22] "temp"
    (2282871 'move' tmp[2569705](2282873 '.v' super_tmp[2282862] super[355739]))
    (2569708 'move' super_tmp[2282869] tmp[2569705])
    (2282876 'setcid' super_tmp[2282869])
    val call_tmp[2282878]:object[22] "dead at end of block" "maybe param" "temp"
    (2282880 'move' call_tmp[2282878](2282882 'cast' object[22] super_tmp[2282862]))
    (2282885 'setcid' call_tmp[2282878])
    val init_coerce_tmp[2282887]:Error[167984] "dead after last mention" "temp"
    (2282889 'move' init_coerce_tmp[2282887](2282891 'cast' Error[167984] nil[44]))
    val tmp[2569711]:__wide_Error[2519192] "temp"
    (2569714 'move' tmp[2569711] init_coerce_tmp[2282887])
    (2282894 '.=' super_tmp[2282862] _next[167912] tmp[2569711])
    (2282898 '.=' super_tmp[2282862] thrownLine[167917] 0)
    (2282902 '.=' super_tmp[2282862] thrownFileId[167925] 0)
    val tmp[2282906]:string[26] "dead after last mention" "temp"
    (2282909 call init[30763] tmp[2282906])
    (2282911 '.=' super_tmp[2282862] _msg[167930] tmp[2282906])
    (2282915 '.=' super_tmp[2282862] _hasThrowInfo[167936] 0)
    (2282919 'setcid' super_tmp[2282862])
    val call_tmp[2282921]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2282923 'move' call_tmp[2282921](2282925 'cast' Error[167984] initTemp[969612]))
    (2282928 'setcid' call_tmp[2282921])
    (2282930 'setcid' initTemp[969612])
    (969651 return initTemp[969612])
  }
  type NilThrownError[168029] val super[355741]:Error[167984] "super class"
  function __wide_DecodeError[2519206].message[168115](const in arg this[168142]:__wide_DecodeError[2519206], wide-ref arg _retArg[1876380]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "no doc" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2213[2514866]:string[26] "temp"
    (2514867 'move' "Invalid UTF-8 character encountered." "Invalid UTF-8 character encountered.")
    val inlineImm[2271913]:string[26] "temp"
    (2271916 'move' inlineImm[2271913] "Invalid UTF-8 character encountered.")
    ref i_x[2271918]:string[26] "temp"
    (2271922 'move' i_x[2271918](2271920 'set reference' inlineImm[2271913]))
    val ret[2271925]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2271927]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2568988]:string[26] "temp"
    (2568991 'move' tmp[2568988] i_x[2271918])
    (2271930 call init=[30774] tmp[2271927] tmp[2568988])
    (2271933 'move' ret[2271925] tmp[2271927])
    (1876382 '=' _retArg[1876380] ret[2271925])
    (1876386 return _void[55])
  }
  function __wide_DecodeError[2519206].deinit[812223](const in arg this[812227]:__wide_DecodeError[2519206]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848325]
    val _parent_destructor_tmp_[1848320]:__wide_Error[2519192] "temp"
    (1848327 'move' _parent_destructor_tmp_[1848320](1848321 'cast' Error[167984] this[812227]))
    wide-ref _field_destructor_tmp_[2282819]:string[26] "temp"
    (2282821 'move' _field_destructor_tmp_[2282819](2282823 '.' _parent_destructor_tmp_[1848320] _msg[167930]))
    (2282827 call deinit[30834] _field_destructor_tmp_[2282819])
    (812235 return _void[55])
  }
  function _local__new[2543222]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[2543225]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[2543227]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2543229 'move' call_tmp[2543227](2543231 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[2543233]:c_void_ptr[149] "dead after last mention" "temp"
    (2543235 'move' cast_tmp[2543233](2543238 call _local_chpl_here_alloc[2535446] call_tmp[2543227] 1))
    (2543241 'move' initTemp[2543225](2543243 'cast' DecodeError[168140] cast_tmp[2543233]))
    (2543246 'setcid' initTemp[2543225])
    val super_tmp[2543248]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587535]:Error[167984] "temp"
    (2543250 'move' tmp[2587535](2543252 '.v' initTemp[2543225] super[355747]))
    (2587538 'move' super_tmp[2543248] tmp[2587535])
    val super_tmp[2543255]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587541]:object[22] "temp"
    (2543257 'move' tmp[2587541](2543259 '.v' super_tmp[2543248] super[355739]))
    (2587544 'move' super_tmp[2543255] tmp[2587541])
    (2543262 'setcid' super_tmp[2543255])
    val call_tmp[2543264]:object[22] "dead at end of block" "maybe param" "temp"
    (2543266 'move' call_tmp[2543264](2543268 'cast' object[22] super_tmp[2543248]))
    (2543271 'setcid' call_tmp[2543264])
    val init_coerce_tmp[2543273]:Error[167984] "dead after last mention" "temp"
    (2543275 'move' init_coerce_tmp[2543273](2543277 'cast' Error[167984] nil[44]))
    val tmp[2587547]:__wide_Error[2519192] "temp"
    (2587550 'move' tmp[2587547] init_coerce_tmp[2543273])
    (2543280 '.=' super_tmp[2543248] _next[167912] tmp[2587547])
    (2543284 '.=' super_tmp[2543248] thrownLine[167917] 0)
    (2543288 '.=' super_tmp[2543248] thrownFileId[167925] 0)
    val tmp[2543292]:string[26] "dead after last mention" "temp"
    (2543295 call _local_init[2528957] tmp[2543292])
    (2543297 '.=' super_tmp[2543248] _msg[167930] tmp[2543292])
    (2543301 '.=' super_tmp[2543248] _hasThrowInfo[167936] 0)
    (2543305 'setcid' super_tmp[2543248])
    val call_tmp[2543307]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2543309 'move' call_tmp[2543307](2543311 'cast' Error[167984] initTemp[2543225]))
    (2543314 'setcid' call_tmp[2543307])
    (2543316 'setcid' initTemp[2543225])
    (2543318 return initTemp[2543225])
  }
  function _new[965703]() : DecodeError[168140] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val initTemp[965705]:DecodeError[168140] "dead after last mention" "temp"
    const-val call_tmp[965746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (965749 'move' call_tmp[965746](965760 'sizeof_bundle' DecodeError[168140]))
    const-val cast_tmp[965763]:c_void_ptr[149] "dead after last mention" "temp"
    (965765 'move' cast_tmp[965763](965717 call chpl_here_alloc[187788] call_tmp[965746] 1))
    (965720 'move' initTemp[965705](965767 'cast' DecodeError[168140] cast_tmp[965763]))
    (965722 'setcid' initTemp[965705])
    val super_tmp[2282935]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2569717]:Error[167984] "temp"
    (2282937 'move' tmp[2569717](2282939 '.v' initTemp[965705] super[355747]))
    (2569720 'move' super_tmp[2282935] tmp[2569717])
    val super_tmp[2282942]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2569723]:object[22] "temp"
    (2282944 'move' tmp[2569723](2282946 '.v' super_tmp[2282935] super[355739]))
    (2569726 'move' super_tmp[2282942] tmp[2569723])
    (2282949 'setcid' super_tmp[2282942])
    val call_tmp[2282951]:object[22] "dead at end of block" "maybe param" "temp"
    (2282953 'move' call_tmp[2282951](2282955 'cast' object[22] super_tmp[2282935]))
    (2282958 'setcid' call_tmp[2282951])
    val init_coerce_tmp[2282960]:Error[167984] "dead after last mention" "temp"
    (2282962 'move' init_coerce_tmp[2282960](2282964 'cast' Error[167984] nil[44]))
    val tmp[2569729]:__wide_Error[2519192] "temp"
    (2569732 'move' tmp[2569729] init_coerce_tmp[2282960])
    (2282967 '.=' super_tmp[2282935] _next[167912] tmp[2569729])
    (2282971 '.=' super_tmp[2282935] thrownLine[167917] 0)
    (2282975 '.=' super_tmp[2282935] thrownFileId[167925] 0)
    val tmp[2282979]:string[26] "dead after last mention" "temp"
    (2282982 call init[30763] tmp[2282979])
    (2282984 '.=' super_tmp[2282935] _msg[167930] tmp[2282979])
    (2282988 '.=' super_tmp[2282935] _hasThrowInfo[167936] 0)
    (2282992 'setcid' super_tmp[2282935])
    val call_tmp[2282994]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2282996 'move' call_tmp[2282994](2282998 'cast' Error[167984] initTemp[965705]))
    (2283001 'setcid' call_tmp[2282994])
    (2283003 'setcid' initTemp[965705])
    (965741 return initTemp[965705])
  }
  type DecodeError[168140] val super[355747]:Error[167984] "super class"
  function __wide_IllegalArgumentError[2519213].deinit[812263](const in arg this[812267]:__wide_IllegalArgumentError[2519213]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "fn synchronization free" "virtual"
  {
    label _enddeinit[1848337]
    val _parent_destructor_tmp_[1848332]:__wide_Error[2519192] "temp"
    (1848339 'move' _parent_destructor_tmp_[1848332](1848333 'cast' Error[167984] this[812267]))
    wide-ref _field_destructor_tmp_[2282834]:string[26] "temp"
    (2282836 'move' _field_destructor_tmp_[2282834](2282838 '.' _parent_destructor_tmp_[1848332] _msg[167930]))
    (2282842 call deinit[30834] _field_destructor_tmp_[2282834])
    (812275 return _void[55])
  }
  function _local__new[2542898](const  ref arg info[2542900]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[2542903]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[2542905]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2542907 'move' call_tmp[2542905](2542909 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[2542911]:c_void_ptr[149] "dead after last mention" "temp"
    (2542913 'move' cast_tmp[2542911](2542916 call _local_chpl_here_alloc[2535446] call_tmp[2542905] 26))
    (2542919 'move' initTemp[2542903](2542921 'cast' IllegalArgumentError[168246] cast_tmp[2542911]))
    (2542924 'setcid' initTemp[2542903])
    val super_tmp[2542926]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587511]:Error[167984] "temp"
    (2542928 'move' tmp[2587511](2542930 '.v' initTemp[2542903] super[355749]))
    (2587514 'move' super_tmp[2542926] tmp[2587511])
    val super_tmp[2542933]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587517]:object[22] "temp"
    (2542935 'move' tmp[2587517](2542937 '.v' super_tmp[2542926] super[355739]))
    (2587520 'move' super_tmp[2542933] tmp[2587517])
    (2542940 'setcid' super_tmp[2542933])
    val call_tmp[2542942]:object[22] "dead at end of block" "maybe param" "temp"
    (2542944 'move' call_tmp[2542942](2542946 'cast' object[22] super_tmp[2542926]))
    (2542949 'setcid' call_tmp[2542942])
    val init_coerce_tmp[2542951]:Error[167984] "dead after last mention" "temp"
    (2542953 'move' init_coerce_tmp[2542951](2542955 'cast' Error[167984] nil[44]))
    val tmp[2587523]:__wide_Error[2519192] "temp"
    (2587526 'move' tmp[2587523] init_coerce_tmp[2542951])
    (2542958 '.=' super_tmp[2542926] _next[167912] tmp[2587523])
    (2542962 '.=' super_tmp[2542926] thrownLine[167917] 0)
    (2542966 '.=' super_tmp[2542926] thrownFileId[167925] 0)
    val tmp[2542970]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2587529]:string[26] "temp"
    (2587532 'move' tmp[2587529] info[2542900])
    (2542973 call _local_init=[2529164] tmp[2542970] tmp[2587529])
    (2542976 '.=' super_tmp[2542926] _msg[167930] tmp[2542970])
    (2542980 '.=' super_tmp[2542926] _hasThrowInfo[167936] 0)
    (2542984 'setcid' super_tmp[2542926])
    val call_tmp[2542986]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2542988 'move' call_tmp[2542986](2542990 'cast' Error[167984] initTemp[2542903]))
    (2542993 'setcid' call_tmp[2542986])
    (2542995 'setcid' initTemp[2542903])
    (2542997 return initTemp[2542903])
  }
  function _new[1064168](const  ref arg info[1064177]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved" "fn synchronization free"
  {
    val initTemp[1064170]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1064214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1064217 'move' call_tmp[1064214](1064228 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1064231]:c_void_ptr[149] "dead after last mention" "temp"
    (1064233 'move' cast_tmp[1064231](1064185 call chpl_here_alloc[187788] call_tmp[1064214] 26))
    (1064188 'move' initTemp[1064170](1064235 'cast' IllegalArgumentError[168246] cast_tmp[1064231]))
    (1064190 'setcid' initTemp[1064170])
    val super_tmp[2240538]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568465]:Error[167984] "temp"
    (2240540 'move' tmp[2568465](2240542 '.v' initTemp[1064170] super[355749]))
    (2568468 'move' super_tmp[2240538] tmp[2568465])
    val super_tmp[2240545]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568471]:object[22] "temp"
    (2240547 'move' tmp[2568471](2240549 '.v' super_tmp[2240538] super[355739]))
    (2568474 'move' super_tmp[2240545] tmp[2568471])
    (2240552 'setcid' super_tmp[2240545])
    val call_tmp[2240554]:object[22] "dead at end of block" "maybe param" "temp"
    (2240556 'move' call_tmp[2240554](2240558 'cast' object[22] super_tmp[2240538]))
    (2240561 'setcid' call_tmp[2240554])
    val init_coerce_tmp[2240563]:Error[167984] "dead after last mention" "temp"
    (2240565 'move' init_coerce_tmp[2240563](2240567 'cast' Error[167984] nil[44]))
    val tmp[2568477]:__wide_Error[2519192] "temp"
    (2568480 'move' tmp[2568477] init_coerce_tmp[2240563])
    (2240570 '.=' super_tmp[2240538] _next[167912] tmp[2568477])
    (2240574 '.=' super_tmp[2240538] thrownLine[167917] 0)
    (2240578 '.=' super_tmp[2240538] thrownFileId[167925] 0)
    val tmp[2240582]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2568483]:string[26] "temp"
    (2568486 'move' tmp[2568483] info[1064177])
    (2240585 call init=[30774] tmp[2240582] tmp[2568483])
    (2240588 '.=' super_tmp[2240538] _msg[167930] tmp[2240582])
    (2240592 '.=' super_tmp[2240538] _hasThrowInfo[167936] 0)
    (2240596 'setcid' super_tmp[2240538])
    val call_tmp[2240598]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2240600 'move' call_tmp[2240598](2240602 'cast' Error[167984] initTemp[1064170]))
    (2240605 'setcid' call_tmp[2240598])
    (2240607 'setcid' initTemp[1064170])
    (1064209 return initTemp[1064170])
  }
  function _new[1073563](const  ref arg formal[1073572]:string[26], const  ref arg info[1073575]:string[26]) : IllegalArgumentError[168246] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_2217[2515961]:string[26] "temp"
    (2515962 'move' "': " "': ")
    const-val local__str_literal_2215[2515955]:string[26] "temp"
    (2515956 'move' "illegal argument '" "illegal argument '")
    val initTemp[1073565]:IllegalArgumentError[168246] "dead after last mention" "temp"
    const-val call_tmp[1073610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1073613 'move' call_tmp[1073610](1073624 'sizeof_bundle' IllegalArgumentError[168246]))
    const-val cast_tmp[1073627]:c_void_ptr[149] "dead after last mention" "temp"
    (1073629 'move' cast_tmp[1073627](1073581 call chpl_here_alloc[187788] call_tmp[1073610] 26))
    (1073584 'move' initTemp[1073565](1073631 'cast' IllegalArgumentError[168246] cast_tmp[1073627]))
    (1073586 'setcid' initTemp[1073565])
    const-val call_tmp[2240612]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2240614]:string[26] "temp"
    wide-ref tmp[2568489]:string[26] "temp"
    (2568492 'move' tmp[2568489] formal[1073572])
    (2240617 call +[38345] "illegal argument '" tmp[2568489] ret_tmp[2240614])
    (2240621 'move' call_tmp[2240612] ret_tmp[2240614])
    const-val call_tmp[2240624]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2240626]:string[26] "temp"
    wide-ref tmp[2568495]:string[26] "temp"
    (2568499 'move' tmp[2568495](2568497 'set reference' "': "))
    (2240629 call +[38345] call_tmp[2240612] tmp[2568495] ret_tmp[2240626])
    (2240633 'move' call_tmp[2240624] ret_tmp[2240626])
    const-val call_tmp[2240636]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2240638]:string[26] "temp"
    wide-ref tmp[2568502]:string[26] "temp"
    (2568505 'move' tmp[2568502] info[1073575])
    (2240641 call +[38345] call_tmp[2240624] tmp[2568502] ret_tmp[2240638])
    (2240645 'move' call_tmp[2240636] ret_tmp[2240638])
    const-val msg[2240648]:string[26] "dead at end of block" "insert auto destroy"
    (2240650 'move' msg[2240648] call_tmp[2240636])
    val super_tmp[2240653]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568508]:Error[167984] "temp"
    (2240655 'move' tmp[2568508](2240657 '.v' initTemp[1073565] super[355749]))
    (2568511 'move' super_tmp[2240653] tmp[2568508])
    ref i_msg[2240660]:string[26] "temp"
    (2240662 'move' i_msg[2240660](2240664 'set reference' msg[2240648]))
    val super_tmp[2240666]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568514]:object[22] "temp"
    (2240668 'move' tmp[2568514](2240670 '.v' super_tmp[2240653] super[355739]))
    (2568517 'move' super_tmp[2240666] tmp[2568514])
    (2240673 'setcid' super_tmp[2240666])
    val call_tmp[2240675]:object[22] "dead at end of block" "maybe param" "temp"
    (2240677 'move' call_tmp[2240675](2240679 'cast' object[22] super_tmp[2240653]))
    (2240682 'setcid' call_tmp[2240675])
    val init_coerce_tmp[2240684]:Error[167984] "dead after last mention" "temp"
    (2240686 'move' init_coerce_tmp[2240684](2240688 'cast' Error[167984] nil[44]))
    val tmp[2568520]:__wide_Error[2519192] "temp"
    (2568523 'move' tmp[2568520] init_coerce_tmp[2240684])
    (2240691 '.=' super_tmp[2240653] _next[167912] tmp[2568520])
    (2240695 '.=' super_tmp[2240653] thrownLine[167917] 0)
    (2240699 '.=' super_tmp[2240653] thrownFileId[167925] 0)
    val tmp[2240703]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2568526]:string[26] "temp"
    (2568529 'move' tmp[2568526] i_msg[2240660])
    (2240706 call init=[30774] tmp[2240703] tmp[2568526])
    (2240709 '.=' super_tmp[2240653] _msg[167930] tmp[2240703])
    (2240713 '.=' super_tmp[2240653] _hasThrowInfo[167936] 0)
    (2240717 'setcid' super_tmp[2240653])
    val call_tmp[2240719]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2240721 'move' call_tmp[2240719](2240723 'cast' Error[167984] initTemp[1073565]))
    (2240726 'setcid' call_tmp[2240719])
    (2240728 'setcid' initTemp[1073565])
    ref i_x[2240730]:string[26] "temp"
    (2240732 'move' i_x[2240730](2240734 'set reference' msg[2240648]))
    wide-ref tmp[2568532]:string[26] "temp"
    (2568535 'move' tmp[2568532] i_x[2240730])
    (2240737 call deinit[30834] tmp[2568532])
    ref i_x[2240739]:string[26] "temp"
    (2240741 'move' i_x[2240739](2240743 'set reference' call_tmp[2240624]))
    wide-ref tmp[2568538]:string[26] "temp"
    (2568541 'move' tmp[2568538] i_x[2240739])
    (2240746 call deinit[30834] tmp[2568538])
    ref i_x[2240748]:string[26] "temp"
    (2240750 'move' i_x[2240748](2240752 'set reference' call_tmp[2240612]))
    wide-ref tmp[2568544]:string[26] "temp"
    (2568547 'move' tmp[2568544] i_x[2240748])
    (2240755 call deinit[30834] tmp[2568544])
    (1073605 return initTemp[1073565])
  }
  type IllegalArgumentError[168246] val super[355749]:Error[167984] "super class"
  function chpl_TaskErrors[168348]._local_append[2551325](wide-ref arg this[2551327]:chpl_TaskErrors[168348], const in arg err[2551329]:Error[167984]) : void[4] "local fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2551332]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2551334 'move' call_tmp[2551332](2551336 '_wide_get_locale' this[2551327]))
    val isdirect[2551338]:bool[10] "temp"
    (2551340 'move' isdirect[2551338](2551343 call _local_chpl_doDirectExecuteOn[2522776] call_tmp[2551332]))
    if isdirect[2551338]
    {
      const-val tmp[2588400]:__wide_Error[2519192] "temp"
      (2588403 'move' tmp[2588400] err[2551329])
      (2551348 call _local_on_fn[2551837] this[2551327] tmp[2588400])
    }
    {
      val _args_foron_fn[2551352]:_class_localson_fn[2148185] "temp"
      (2551354 'move' _args_foron_fn[2551352](2551356 'stack allocate class' _class_localson_fn[2148185]))
      (2551358 '.=' _args_foron_fn[2551352] _0_tmp[2148188] call_tmp[2551332])
      wide-ref tmp[2551362]:chpl_TaskErrors[168348] "temp"
      (2551364 'move' tmp[2551362](2551366 'set reference' this[2551327]))
      (2551368 '.=' _args_foron_fn[2551352] _1_this[2148190] tmp[2551362])
      val tmp[2588406]:__wide_Error[2519192] "temp"
      (2588409 'move' tmp[2588406] err[2551329])
      (2551372 '.=' _args_foron_fn[2551352] _2_err[2148192] tmp[2588406])
      val _args_vforon_fn[2551376]:c_void_ptr[149] "temp"
      (2551378 'move' _args_vforon_fn[2551376](2551380 'cast_to_void_star' _args_foron_fn[2551352]))
      val _args_sizeon_fn[2551382]:int(64)[13] "temp"
      (2551384 'move' _args_sizeon_fn[2551382](2551386 'sizeof_bundle' _class_localson_fn[2148185]))
      (2589796 call chpl_taskRunningCntDec[93219])
      on(2551389 call _local_wrapon_fn[2552011] call_tmp[2551332] _args_vforon_fn[2551376] _args_sizeon_fn[2551382] _args_foron_fn[2551352])
      (2589798 call chpl_taskRunningCntInc[93198])
    }
    (2551395 return _void[55])
  }
  function chpl_TaskErrors[168348].append[168282](wide-ref arg this[168350]:chpl_TaskErrors[168348], const in arg err[168279]:Error[167984]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[679522]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (679525 'move' call_tmp[679522](168320 '_wide_get_locale' this[168350]))
    val isdirect[2148168]:bool[10] "temp"
    (2148173 'move' isdirect[2148168](2148170 call chpl_doDirectExecuteOn[187469] call_tmp[679522]))
    if isdirect[2148168]
    {
      const-val tmp[2560815]:__wide_Error[2519192] "temp"
      (2560818 'move' tmp[2560815] err[168279])
      (2148177 call on_fn[935399] this[168350] tmp[2560815])
    }
    {
      val _args_foron_fn[2148195]:_class_localson_fn[2148185] "temp"
      (2148199 'move' _args_foron_fn[2148195](2148197 'stack allocate class' _class_localson_fn[2148185]))
      (2148201 '.=' _args_foron_fn[2148195] _0_tmp[2148188] call_tmp[679522])
      wide-ref tmp[2148205]:chpl_TaskErrors[168348] "temp"
      (2148209 'move' tmp[2148205](2148207 'set reference' this[168350]))
      (2148211 '.=' _args_foron_fn[2148195] _1_this[2148190] tmp[2148205])
      val tmp[2560821]:__wide_Error[2519192] "temp"
      (2560824 'move' tmp[2560821] err[168279])
      (2148215 '.=' _args_foron_fn[2148195] _2_err[2148192] tmp[2560821])
      val _args_vforon_fn[2148219]:c_void_ptr[149] "temp"
      (2148223 'move' _args_vforon_fn[2148219](2148221 'cast_to_void_star' _args_foron_fn[2148195]))
      val _args_sizeon_fn[2148225]:int(64)[13] "temp"
      (2148229 'move' _args_sizeon_fn[2148225](2148227 'sizeof_bundle' _class_localson_fn[2148185]))
      (2588532 call chpl_taskRunningCntDec[93219])
      on(2148269 call wrapon_fn[2148231] call_tmp[679522] _args_vforon_fn[2148219] _args_sizeon_fn[2148225] _args_foron_fn[2148195])
      (2588534 call chpl_taskRunningCntInc[93198])
    }
    (522187 return _void[55])
  }
  function chpl_TaskErrors[168348]._local_empty[2545577](const  ref arg this[2545579]:chpl_TaskErrors[168348]) : bool[10] "fast on" "local fn" "method" "primary method" "resolved"
  {
    val coerce_tmp[2545582]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2545584 'move' coerce_tmp[2545582](2545586 '.v' this[2545579] _head[168266]))
    val coerce_tmp[2545589]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2545591 'move' coerce_tmp[2545589](2545593 'cast' object[22] coerce_tmp[2545582]))
    const-val call_tmp[2545596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2587802]:__wide_object[2519087] "temp"
    (2587805 'move' tmp[2587802] nil[44])
    (2545598 'move' call_tmp[2545596](2545600 'ptr_eq' coerce_tmp[2545589] tmp[2587802]))
    (2545603 return call_tmp[2545596])
  }
  function chpl_TaskErrors[168348].empty[168336](const  ref arg this[168354]:chpl_TaskErrors[168348]) : bool[10] "fast on" "local fn" "method" "primary method" "resolved"
  {
    val coerce_tmp[1235619]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235623 'move' coerce_tmp[1235619](2502520 '.v' this[168354] _head[168266]))
    val coerce_tmp[1235625]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1235630 'move' coerce_tmp[1235625](1235627 'cast' object[22] coerce_tmp[1235619]))
    const-val call_tmp[2174047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2563254]:__wide_object[2519087] "temp"
    (2563257 'move' tmp[2563254] nil[44])
    (2174049 'move' call_tmp[2174047](2174051 'ptr_eq' coerce_tmp[1235625] tmp[2563254]))
    (522193 return call_tmp[2174047])
  }
  function chpl_TaskErrors[168348]._local_init[2549042](ref arg this[2549044]:chpl_TaskErrors[168348], in arg _head[2549046]:Error[167984], const  ref arg _errorsLock[2549048]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "fast on" "last resort" "local fn" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[2549051]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (2549053 'move' _formal_tmp__errorsLock[2549051] _errorsLock[2549048])
    val tmp[2588280]:__wide_Error[2519192] "temp"
    (2588283 'move' tmp[2588280] _head[2549046])
    (2549056 '.=' this[2549044] _head[168266] tmp[2588280])
    (2549060 '.=' this[2549044] _errorsLock[168271] _formal_tmp__errorsLock[2549051])
    (2549064 return _void[55])
  }
  function chpl_TaskErrors[168348].init[812329](ref arg this[812332]:chpl_TaskErrors[168348], in arg _head[812335]:Error[167984], const  ref arg _errorsLock[812350]:chpl_LocalSpinlock[187432]) : void[4] "compiler generated" "fast on" "last resort" "local fn" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_tmp__errorsLock[945237]:chpl_LocalSpinlock[187432] "dead at end of block" "no auto destroy" "no copy" "temp"
    (945240 'move' _formal_tmp__errorsLock[945237] _errorsLock[812350])
    val tmp[2552716]:__wide_Error[2519192] "temp"
    (2552719 'move' tmp[2552716] _head[812335])
    (812364 '.=' this[812332] _head[168266] tmp[2552716])
    (812367 '.=' this[812332] _errorsLock[168271] _formal_tmp__errorsLock[945237])
    (812371 return _void[55])
  }
  type chpl_TaskErrors[168348] val _head[168266]:__wide_Error[2519192] val _errorsLock[168271]:chpl_LocalSpinlock[187432]
  function __wide_TaskErrors[2519220]._local_deinit[2549969](const in arg this[2549971]:__wide_TaskErrors[2519220]) : void[4] "destructor" "local fn" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2549974]:string[26] "temp"
    (2549976 'move' local__str_literal_978[2549974] "With a negative count, the range must have a last index.")
    val coerce_tmp[2549979]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2551625 'local_check' this[2549971] c"cannot access remote data in local block")
    const-val local_this[2551622]:TaskErrors[169702] "temp"
    (2551628 'move' local_this[2551622] this[2549971])
    val tmp[2588316]:c_ptr(owned Error?)[1235676] "temp"
    (2549981 'move' tmp[2588316](2549983 '.v' local_this[2551622] errorsArray[168374]))
    (2588319 'move' coerce_tmp[2549979] tmp[2588316])
    const-val call_tmp[2549986]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549988 'move' call_tmp[2549986](2549990 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2549993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2549995 'move' call_tmp[2549993](2549997 'ptr_neq' coerce_tmp[2549979] call_tmp[2549986]))
    if call_tmp[2549993]
    {
      const-val coerce_tmp[2550002]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2551634 'local_check' this[2549971] c"cannot access remote data in local block")
      const-val local_this[2551631]:TaskErrors[169702] "temp"
      (2551637 'move' local_this[2551631] this[2549971])
      val tmp[2588322]:int(64)[13] "temp"
      (2550004 'move' tmp[2588322](2550006 '.v' local_this[2551631] nErrors[168363]))
      (2588325 'move' coerce_tmp[2550002] tmp[2588322])
      const-val call_tmp[2550009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2550011 'move' call_tmp[2550009](2550013 '<' coerce_tmp[2550002] 0))
      if call_tmp[2550009]
      {
        (2550019 call _local_boundsCheckHalt[2528945] local__str_literal_978[2549974])
      }
      val tmp_x0[2550022]:int(64)[13] "temp"
      val tmp_x1[2550024]:int(64)[13] "temp"
      const-val call_tmp[2550026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2550028 'move' call_tmp[2550026](2550030 '==' coerce_tmp[2550002] 0))
      if call_tmp[2550026]
      {
        const-val call_tmp[2550035]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2550037 'move' call_tmp[2550035](2550039 'cast' uint(64)[115] 0))
        const-val call_tmp[2550042]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2550044 'move' call_tmp[2550042](2550046 '-' call_tmp[2550035] 1))
        const-val call_tmp[2550049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2550051 'move' call_tmp[2550049](2550053 'cast' int(64)[13] call_tmp[2550042]))
        (2550056 'move' tmp_x0[2550022] 0)
        (2550059 'move' tmp_x1[2550024] call_tmp[2550049])
      }
      {
        const-val call_tmp[2550063]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2550065 'move' call_tmp[2550063](2550067 '-' coerce_tmp[2550002] 1))
        const-val call_tmp[2550070]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2550072 'move' call_tmp[2550070](2550074 '+' 0 call_tmp[2550063]))
        (2550077 'move' tmp_x0[2550022] 0)
        (2550080 'move' tmp_x1[2550024] call_tmp[2550070])
      }
      (2550084 'noop')
      (2550085 'noop')
      (2550086 'noop')
      const-val _ic__F1_high[2550087]:int(64)[13] "temp"
      (2550089 'move' _ic__F1_high[2550087] tmp_x1[2550024])
      val i[2550092]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2550094 'move' i[2550092] 0)
      (2550098 call _local_chpl_checkIfRangeIterWillOverflow[2526598] tmp_x0[2550022] tmp_x1[2550024] 1 tmp_x0[2550022] tmp_x1[2550024] 1)
      val coerce_tmp[2550105]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2551645 'local_check' this[2549971] c"cannot access remote data in local block")
      const-val local_this[2551642]:TaskErrors[169702] "temp"
      (2551648 'move' local_this[2551642] this[2549971])
      val tmp[2588328]:c_ptr(owned Error?)[1235676] "temp"
      (2550107 'move' tmp[2588328](2550109 '.v' local_this[2551642] errorsArray[168374]))
      (2588331 'move' coerce_tmp[2550105] tmp[2588328])
      CForLoop[2550112]
      {
        ref call_tmp[2550125]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2550127 'move' call_tmp[2550125](2550129 'array_get' coerce_tmp[2550105] i[2550092]))
        (2550133 call _local_clear[2551651] call_tmp[2550125])
        {
          (2550114 '=' i[2550092] tmp_x0[2550022])
        }
        {
          (2550118 '<=' i[2550092] _ic__F1_high[2550087])
        }
        {
          (2550122 '+=' i[2550092] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2550135]
      label _endchpl_direct_counted_range_iter_helper[2550137]
      label _endchpl_direct_counted_range_iter[2550139]
      val coerce_tmp[2550141]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2551784 'local_check' this[2549971] c"cannot access remote data in local block")
      const-val local_this[2551781]:TaskErrors[169702] "temp"
      (2551787 'move' local_this[2551781] this[2549971])
      val tmp[2588334]:c_ptr(owned Error?)[1235676] "temp"
      (2550143 'move' tmp[2588334](2550145 '.v' local_this[2551781] errorsArray[168374]))
      (2588337 'move' coerce_tmp[2550141] tmp[2588334])
      const-val coerce_tmp[2550148]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2550150 'move' coerce_tmp[2550148](2550152 'cast' c_void_ptr[149] coerce_tmp[2550141]))
      (2550156 call _local_chpl_here_free[2540958] coerce_tmp[2550148])
    }
    label _enddeinit[2550159]
    val _parent_destructor_tmp_[2550161]:__wide_Error[2519192] "temp"
    (2550163 'move' _parent_destructor_tmp_[2550161](2550165 'cast' Error[167984] this[2549971]))
    wide-ref _field_destructor_tmp_[2550168]:string[26] "temp"
    (2551794 'local_check' _parent_destructor_tmp_[2550161] c"cannot access remote data in local block")
    val local__parent_destructor_tmp_[2551791]:Error[167984] "temp"
    (2551797 'move' local__parent_destructor_tmp_[2551791] _parent_destructor_tmp_[2550161])
    (2550170 'move' _field_destructor_tmp_[2550168](2550172 '.' local__parent_destructor_tmp_[2551791] _msg[167930]))
    (2550176 call _local_deinit[2529591] _field_destructor_tmp_[2550168])
    (2550178 return _void[55])
  }
  function __wide_TaskErrors[2519220].deinit[168832](const in arg this[169716]:__wide_TaskErrors[2519220]) : void[4] "destructor" "method" "primary method" "resolved" "virtual" "no return value for void"
  {
    const-val local__str_literal_978[2514872]:string[26] "temp"
    (2514873 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val coerce_tmp[1235759]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2554360]:c_ptr(owned Error?)[1235676] "temp"
    (1235763 'move' tmp[2554360](2502531 '.v' this[169716] errorsArray[168374]))
    (2554363 'move' coerce_tmp[1235759] tmp[2554360])
    const-val call_tmp[2352519]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2352521 'move' call_tmp[2352519](2352523 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2352526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2352528 'move' call_tmp[2352526](2352530 'ptr_neq' coerce_tmp[1235759] call_tmp[2352519]))
    if call_tmp[2352526]
    {
      const-val coerce_tmp[1235796]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2554366]:int(64)[13] "temp"
      (1235800 'move' tmp[2554366](2502537 '.v' this[169716] nErrors[168363]))
      (2554369 'move' coerce_tmp[1235796] tmp[2554366])
      const-val call_tmp[2178209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2178211 'move' call_tmp[2178209](2178213 '<' coerce_tmp[1235796] 0))
      if call_tmp[2178209]
      {
        (2009712 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2489124]:int(64)[13] "temp"
      val tmp_x1[2489126]:int(64)[13] "temp"
      const-val call_tmp[2182247]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182249 'move' call_tmp[2182247](2182251 '==' coerce_tmp[1235796] 0))
      if call_tmp[2182247]
      {
        const-val call_tmp[2179139]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2179141 'move' call_tmp[2179139](2179143 'cast' uint(64)[115] 0))
        const-val call_tmp[2248247]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2248249 'move' call_tmp[2248247](2248251 '-' call_tmp[2179139] 1))
        const-val call_tmp[2248667]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2248669 'move' call_tmp[2248667](2248671 'cast' int(64)[13] call_tmp[2248247]))
        (2489132 'move' tmp_x0[2489124] 0)
        (2489137 'move' tmp_x1[2489126] call_tmp[2248667])
      }
      {
        const-val call_tmp[2208579]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2208581 'move' call_tmp[2208579](2208583 '-' coerce_tmp[1235796] 1))
        const-val call_tmp[2189586]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2189588 'move' call_tmp[2189586](2189590 '+' 0 call_tmp[2208579]))
        (2489142 'move' tmp_x0[2489124] 0)
        (2489147 'move' tmp_x1[2489126] call_tmp[2189586])
      }
      (2009821 'noop')
      (2009841 'noop')
      (2009860 'noop')
      const-val _ic__F1_high[2482549]:int(64)[13] "temp"
      (2253852 'move' _ic__F1_high[2482549] tmp_x1[2489126])
      val i[2009889]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2009893 'move' i[2009889] 0)
      (2009945 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2489124] tmp_x1[2489126] 1 tmp_x0[2489124] tmp_x1[2489126] 1)
      val coerce_tmp[2010060]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2560246]:c_ptr(owned Error?)[1235676] "temp"
      (2010062 'move' tmp[2560246](2502545 '.v' this[169716] errorsArray[168374]))
      (2560249 'move' coerce_tmp[2010060] tmp[2560246])
      CForLoop[2009952] hazard
      {
        ref call_tmp[2255904]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2255906 'move' call_tmp[2255904](2255908 'array_get' coerce_tmp[2010060] i[2009889]))
        (2010073 call clear[1236108] call_tmp[2255904])
        {
          (2009961 '=' i[2009889] tmp_x0[2489124])
        }
        {
          (2009972 '<=' i[2009889] _ic__F1_high[2482549])
        }
        {
          (2009978 '+=' i[2009889] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2010015]
      label _endchpl_direct_counted_range_iter_helper[2010023]
      label _endchpl_direct_counted_range_iter[1942336]
      val coerce_tmp[1237229]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2554372]:c_ptr(owned Error?)[1235676] "temp"
      (1237233 'move' tmp[2554372](2502551 '.v' this[169716] errorsArray[168374]))
      (2554375 'move' coerce_tmp[1237229] tmp[2554372])
      const-val coerce_tmp[1237235]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1237241 'move' coerce_tmp[1237235](1237237 'cast' c_void_ptr[149] coerce_tmp[1237229]))
      (2270616 call chpl_here_free[188127] coerce_tmp[1237235])
    }
    label _enddeinit[1848041]
    val _parent_destructor_tmp_[1848036]:__wide_Error[2519192] "temp"
    (1848043 'move' _parent_destructor_tmp_[1848036](1848037 'cast' Error[167984] this[169716]))
    wide-ref _field_destructor_tmp_[2282789]:string[26] "temp"
    (2282791 'move' _field_destructor_tmp_[2282789](2282793 '.' _parent_destructor_tmp_[1848036] _msg[167930]))
    (2282797 call deinit[30834] _field_destructor_tmp_[2282789])
    (522204 return _void[55])
  }
  function __wide_TaskErrors[2519220].message[169077](const in arg this[169728]:__wide_TaskErrors[2519220], wide-ref arg _retArg[1876388]:string[26]) : void[4] "fn returns via _retArg" "method" "primary method" "method overrides" "resolved" "virtual"
  {
    const-val local__str_literal_2228[2514930]:string[26] "temp"
    (2514931 'move' " ... " " ... ")
    const-val local__str_literal_2226[2514923]:string[26] "temp"
    (2514924 'move' " errors: " " errors: ")
    const-val local__str_literal_2224[2514905]:string[26] "temp"
    (2514906 'move' "" "")
    const-val local__str_literal_4779[2514896]:string[26] "temp"
    (2514897 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_2221[2514890]:string[26] "temp"
    (2514891 'move' "" "")
    const-val local__str_literal_129[2514884]:string[26] "temp"
    (2514885 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_978[2514878]:string[26] "temp"
    (2514879 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val ret[522232]:string[26] "dead after last mention" "RVV" "temp"
    val n[169081]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544659 'move' n[169081] 0)
    val minMsg[169087]:string[26] "dead at end of block" "insert auto destroy"
    (1800309 call init[30763] minMsg[169087])
    val maxMsg[169092]:string[26] "dead at end of block" "insert auto destroy"
    (1800314 call init[30763] maxMsg[169092])
    val first[169099]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    val tmp[2522641]:Error[167984] "temp"
    (2522644 'move' tmp[2522641](1800320 'cast' Error[167984] nil[44]))
    (1800322 'move' first[169099] tmp[2522641])
    val last[169106]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    val tmp[2522646]:Error[167984] "temp"
    (2522649 'move' tmp[2522646](1800325 'cast' Error[167984] nil[44]))
    (1800327 'move' last[169106] tmp[2522646])
    const-val _ic__F0_this[2474582]:__wide_TaskErrors[2519220] "temp"
    (2242796 'move' _ic__F0_this[2474582] this[169728])
    const-val this[1942984]:__wide_TaskErrors[2519220] "temp"
    (1942989 'move' this[1942984] this[169728])
    const-val coerce_tmp[1942576]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2559241]:int(64)[13] "temp"
    (1942578 'move' tmp[2559241](2502581 '.v' this[1942984] nErrors[168363]))
    (2559244 'move' coerce_tmp[1942576] tmp[2559241])
    const-val call_tmp[2178219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2178221 'move' call_tmp[2178219](2178223 '<' coerce_tmp[1942576] 0))
    if call_tmp[2178219]
    {
      (2010690 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2489232]:int(64)[13] "temp"
    val tmp_x1[2489234]:int(64)[13] "temp"
    const-val call_tmp[2182262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2182264 'move' call_tmp[2182262](2182266 '==' coerce_tmp[1942576] 0))
    if call_tmp[2182262]
    {
      const-val call_tmp[2179149]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2179151 'move' call_tmp[2179149](2179153 'cast' uint(64)[115] 0))
      const-val call_tmp[2248257]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2248259 'move' call_tmp[2248257](2248261 '-' call_tmp[2179149] 1))
      const-val call_tmp[2248677]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2248679 'move' call_tmp[2248677](2248681 'cast' int(64)[13] call_tmp[2248257]))
      (2489240 'move' tmp_x0[2489232] 0)
      (2489245 'move' tmp_x1[2489234] call_tmp[2248677])
    }
    {
      const-val call_tmp[2208589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208591 'move' call_tmp[2208589](2208593 '-' coerce_tmp[1942576] 1))
      const-val call_tmp[2189596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2189598 'move' call_tmp[2189596](2189600 '+' 0 call_tmp[2208589]))
      (2489250 'move' tmp_x0[2489232] 0)
      (2489255 'move' tmp_x1[2489234] call_tmp[2189596])
    }
    (2010799 'noop')
    (2010819 'noop')
    (2010838 'noop')
    const-val _ic__F1_high[2482568]:int(64)[13] "temp"
    (2253915 'move' _ic__F1_high[2482568] tmp_x1[2489234])
    val i[2010867]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2010871 'move' i[2010867] 0)
    (2010923 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2489232] tmp_x1[2489234] 1 tmp_x0[2489232] tmp_x1[2489234] 1)
    const-val this[2011032]:__wide_TaskErrors[2519220] "temp"
    (2011034 'move' this[2011032] _ic__F0_this[2474582])
    val coerce_tmp[2011044]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2560252]:c_ptr(owned Error?)[1235676] "temp"
    (2011046 'move' tmp[2560252](2502589 '.v' this[2011032] errorsArray[168374]))
    (2560255 'move' coerce_tmp[2011044] tmp[2560252])
    CForLoop[2010930] hazard
    {
      ref call_tmp[2255914]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
      (2255916 'move' call_tmp[2255914](2255918 'array_get' coerce_tmp[2011044] i[2010867]))
      val coerce_tmp[2011058]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2011060 'move' coerce_tmp[2011058](2011063 call borrow[1235889] call_tmp[2255914]))
      val coerce_tmp[2011065]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2011067 'move' coerce_tmp[2011065](2011069 'cast' object[22] coerce_tmp[2011058]))
      const-val call_tmp[2175647]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2563614]:__wide_object[2519087] "temp"
      (2563617 'move' tmp[2563614] nil[44])
      (2175649 'move' call_tmp[2175647](2175651 'ptr_neq' coerce_tmp[2011065] tmp[2563614]))
      if call_tmp[2175647]
      {
        const-val this[2011091]:__wide_TaskErrors[2519220] "temp"
        (2011093 'move' this[2011091] _ic__F0_this[2474582])
        val coerce_tmp[2011103]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2560258]:c_ptr(owned Error?)[1235676] "temp"
        (2011105 'move' tmp[2560258](2502595 '.v' this[2011091] errorsArray[168374]))
        (2560261 'move' coerce_tmp[2011103] tmp[2560258])
        ref call_tmp[2255924]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2255926 'move' call_tmp[2255924](2255928 'array_get' coerce_tmp[2011103] i[2010867]))
        val coerce_tmp[2459660]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459662 'move' coerce_tmp[2459660](2459664 '.v' call_tmp[2255924] chpl_p[966469]))
        val coerce_tmp[2459667]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459669 'move' coerce_tmp[2459667](2459671 'cast' object[22] coerce_tmp[2459660]))
        const-val call_tmp[2459674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2582707]:__wide_object[2519087] "temp"
        (2582710 'move' tmp[2582707] nil[44])
        (2459676 'move' call_tmp[2459674](2459678 'ptr_eq' coerce_tmp[2459667] tmp[2582707]))
        if call_tmp[2459674]
        {
          (2459684 call nilCheckHalt[210171] "argument to ! is nil")
        }
        val coerce_tmp[2459687]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459689 'move' coerce_tmp[2459687](2459691 '.v' call_tmp[2255924] chpl_p[966469]))
        const-val tmp[2011141]:bool[10] "dead after last mention" "maybe param" "temp"
        (2011143 'move' tmp[2011141](2011146 call ==[38823] minMsg[169087] ""))
        val tmp[2011149]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2011141]
        {
          (2011163 'move' tmp[2011149] 1)
        }
        {
          const-val call_tmp[2011169]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2011171]:int(32)[95] "temp"
          (2011173 'move' _virtual_method_tmp_[2011171](2011175 'getcid' coerce_tmp[2459687]))
          val ret_tmp[2011177]:string[26] "temp"
          ref tmp[2560264]:string[26] "temp"
          (2560268 'move' tmp[2560264](2560267 'set reference' ret_tmp[2011177]))
          wide-ref tmp[2560271]:string[26] "temp"
          (2560274 'move' tmp[2560271] tmp[2560264])
          (2011179 'virtual method call' message[167975] _virtual_method_tmp_[2011171] coerce_tmp[2459687] tmp[2560271])
          (2011184 'move' call_tmp[2011169] ret_tmp[2011177])
          val coerce_tmp[2224775]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567282]:c_ptr(uint(8))[937484] "temp"
          (2224777 'move' tmp[2567282](2224779 '.v' call_tmp[2011169] buff[30740]))
          (2567285 'move' coerce_tmp[2224775] tmp[2567282])
          const-val coerce_tmp[2224782]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567288]:int(64)[13] "temp"
          (2224784 'move' tmp[2567288](2224786 '.v' call_tmp[2011169] buffLen[30722]))
          (2567291 'move' coerce_tmp[2224782] tmp[2567288])
          const-val coerce_tmp[2224789]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567294]:int(32)[95] "temp"
          (2224791 'move' tmp[2567294](2224793 '.v' call_tmp[2011169] locale_id[30757]))
          (2567297 'move' coerce_tmp[2224789] tmp[2567294])
          val coerce_tmp[2224796]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567300]:c_ptr(uint(8))[937484] "temp"
          (2224798 'move' tmp[2567300](2224800 '.v' minMsg[169087] buff[30740]))
          (2567303 'move' coerce_tmp[2224796] tmp[2567300])
          const-val coerce_tmp[2224803]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567306]:int(64)[13] "temp"
          (2224805 'move' tmp[2567306](2224807 '.v' minMsg[169087] buffLen[30722]))
          (2567309 'move' coerce_tmp[2224803] tmp[2567306])
          const-val coerce_tmp[2224810]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567312]:int(32)[95] "temp"
          (2224812 'move' tmp[2567312](2224814 '.v' minMsg[169087] locale_id[30757]))
          (2567315 'move' coerce_tmp[2224810] tmp[2567312])
          val ret[2224817]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2224819]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2224821 'move' call_tmp[2224819](2224823 '==' coerce_tmp[2224789] chpl_nodeID[208207]))
          val tmp[2224826]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2224819]
          {
            const-val call_tmp[2224830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224832 'move' call_tmp[2224830](2224834 '==' coerce_tmp[2224810] chpl_nodeID[208207]))
            (2224837 'move' tmp[2224826] call_tmp[2224830])
          }
          {
            (2224841 'move' tmp[2224826] 0)
          }
          if tmp[2224826]
          {
            val ret[2224847]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2224849]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2224851]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224853 'move' call_tmp[2224851](2224855 '<' coerce_tmp[2224782] coerce_tmp[2224803]))
            if call_tmp[2224851]
            {
              (2224860 'move' tmp[2224849] coerce_tmp[2224782])
            }
            {
              (2224864 'move' tmp[2224849] coerce_tmp[2224803])
            }
            const-val coerce_tmp[2224873]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2224875 'move' coerce_tmp[2224873](2224877 'cast' c_void_ptr[149] coerce_tmp[2224775]))
            const-val coerce_tmp[2224880]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2224882 'move' coerce_tmp[2224880](2224884 'cast' c_void_ptr[149] coerce_tmp[2224796]))
            const-val call_tmp[2224887]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224889 'move' call_tmp[2224887](2224891 '<' tmp[2224849] 0))
            if call_tmp[2224887]
            {
              (2224897 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2224900]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224902 'move' call_tmp[2224900](2224904 'cast' uint(64)[115] tmp[2224849]))
            const-val call_tmp[2224907]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224909 'move' call_tmp[2224907](2224912 call memcmp[1206523] coerce_tmp[2224873] coerce_tmp[2224880] call_tmp[2224900]))
            const-val call_tmp[2224916]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224918 'move' call_tmp[2224916](2224920 'cast' int(64)[13] call_tmp[2224907]))
            const-val call_tmp[2224928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224930 'move' call_tmp[2224928](2224932 '==' call_tmp[2224916] 0))
            if call_tmp[2224928]
            {
              const-val call_tmp[2224937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2224939 'move' call_tmp[2224937](2224941 '<' tmp[2224849] coerce_tmp[2224782]))
              if call_tmp[2224937]
              {
                (2224946 'move' ret[2224847] 1)
                gotoReturn _end__strcmp_local[2224971] _end__strcmp_local[2224971]
              }
              const-val call_tmp[2224952]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2224954 'move' call_tmp[2224952](2224956 '<' tmp[2224849] coerce_tmp[2224803]))
              if call_tmp[2224952]
              {
                (2224961 'move' ret[2224847] -1)
                gotoReturn _end__strcmp_local[2224971] _end__strcmp_local[2224971]
              }
            }
            (2224968 'move' ret[2224847] call_tmp[2224916])
            label _end__strcmp_local[2224971]
            (2224973 'move' ret[2224817] ret[2224847])
            gotoReturn _end__strcmp[2225557] _end__strcmp[2225557]
          }
          {
            const-val call_tmp[2224979]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2224981 'move' call_tmp[2224979](2224983 '!=' coerce_tmp[2224789] chpl_nodeID[208207]))
            val tmp[2224986]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2224979]
            {
              const-val call_tmp[2224990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2224992 'move' call_tmp[2224990](2224994 '==' coerce_tmp[2224810] chpl_nodeID[208207]))
              (2224997 'move' tmp[2224986] call_tmp[2224990])
            }
            {
              (2225001 'move' tmp[2224986] 0)
            }
            if tmp[2224986]
            {
              val call_tmp[2225007]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2225009]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2225011 'move' coerce_tmp[2225009](2225013 'cast' int(64)[13] coerce_tmp[2224789]))
              (2225016 'move' call_tmp[2225007](2225019 call bufferCopyRemote[172830] coerce_tmp[2225009] coerce_tmp[2224775] coerce_tmp[2224782]))
              val ret[2225028]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2225030]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2225032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225034 'move' call_tmp[2225032](2225036 '<' coerce_tmp[2224782] coerce_tmp[2224803]))
              if call_tmp[2225032]
              {
                (2225041 'move' tmp[2225030] coerce_tmp[2224782])
              }
              {
                (2225045 'move' tmp[2225030] coerce_tmp[2224803])
              }
              const-val coerce_tmp[2225054]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2225056 'move' coerce_tmp[2225054](2225058 'cast' c_void_ptr[149] call_tmp[2225007]))
              const-val coerce_tmp[2225061]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2225063 'move' coerce_tmp[2225061](2225065 'cast' c_void_ptr[149] coerce_tmp[2224796]))
              const-val call_tmp[2225068]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225070 'move' call_tmp[2225068](2225072 '<' tmp[2225030] 0))
              if call_tmp[2225068]
              {
                (2225078 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2225081]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225083 'move' call_tmp[2225081](2225085 'cast' uint(64)[115] tmp[2225030]))
              const-val call_tmp[2225088]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225090 'move' call_tmp[2225088](2225093 call memcmp[1206523] coerce_tmp[2225054] coerce_tmp[2225061] call_tmp[2225081]))
              const-val call_tmp[2225097]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225099 'move' call_tmp[2225097](2225101 'cast' int(64)[13] call_tmp[2225088]))
              const-val call_tmp[2225109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225111 'move' call_tmp[2225109](2225113 '==' call_tmp[2225097] 0))
              if call_tmp[2225109]
              {
                const-val call_tmp[2225118]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225120 'move' call_tmp[2225118](2225122 '<' tmp[2225030] coerce_tmp[2224782]))
                if call_tmp[2225118]
                {
                  (2225127 'move' ret[2225028] 1)
                  gotoReturn _end__strcmp_local[2225152] _end__strcmp_local[2225152]
                }
                const-val call_tmp[2225133]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225135 'move' call_tmp[2225133](2225137 '<' tmp[2225030] coerce_tmp[2224803]))
                if call_tmp[2225133]
                {
                  (2225142 'move' ret[2225028] -1)
                  gotoReturn _end__strcmp_local[2225152] _end__strcmp_local[2225152]
                }
              }
              (2225149 'move' ret[2225028] call_tmp[2225097])
              label _end__strcmp_local[2225152]
              const-val coerce_tmp[2225154]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2225156 'move' coerce_tmp[2225154](2225158 'cast' c_void_ptr[149] call_tmp[2225007]))
              (2225162 call chpl_here_free[188127] coerce_tmp[2225154])
              (2225164 'move' ret[2224817] ret[2225028])
              gotoReturn _end__strcmp[2225557] _end__strcmp[2225557]
            }
            {
              const-val call_tmp[2225170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2225172 'move' call_tmp[2225170](2225174 '==' coerce_tmp[2224789] chpl_nodeID[208207]))
              val tmp[2225177]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2225170]
              {
                const-val call_tmp[2225181]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225183 'move' call_tmp[2225181](2225185 '!=' coerce_tmp[2224810] chpl_nodeID[208207]))
                (2225188 'move' tmp[2225177] call_tmp[2225181])
              }
              {
                (2225192 'move' tmp[2225177] 0)
              }
              if tmp[2225177]
              {
                val call_tmp[2225198]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2225200]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225202 'move' coerce_tmp[2225200](2225204 'cast' int(64)[13] coerce_tmp[2224810]))
                (2225207 'move' call_tmp[2225198](2225210 call bufferCopyRemote[172830] coerce_tmp[2225200] coerce_tmp[2224796] coerce_tmp[2224803]))
                val ret[2225219]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2225221]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2225223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225225 'move' call_tmp[2225223](2225227 '<' coerce_tmp[2224782] coerce_tmp[2224803]))
                if call_tmp[2225223]
                {
                  (2225232 'move' tmp[2225221] coerce_tmp[2224782])
                }
                {
                  (2225236 'move' tmp[2225221] coerce_tmp[2224803])
                }
                const-val coerce_tmp[2225245]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225247 'move' coerce_tmp[2225245](2225249 'cast' c_void_ptr[149] coerce_tmp[2224775]))
                const-val coerce_tmp[2225252]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225254 'move' coerce_tmp[2225252](2225256 'cast' c_void_ptr[149] call_tmp[2225198]))
                const-val call_tmp[2225259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225261 'move' call_tmp[2225259](2225263 '<' tmp[2225221] 0))
                if call_tmp[2225259]
                {
                  (2225269 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2225272]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225274 'move' call_tmp[2225272](2225276 'cast' uint(64)[115] tmp[2225221]))
                const-val call_tmp[2225279]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225281 'move' call_tmp[2225279](2225284 call memcmp[1206523] coerce_tmp[2225245] coerce_tmp[2225252] call_tmp[2225272]))
                const-val call_tmp[2225288]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225290 'move' call_tmp[2225288](2225292 'cast' int(64)[13] call_tmp[2225279]))
                const-val call_tmp[2225300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225302 'move' call_tmp[2225300](2225304 '==' call_tmp[2225288] 0))
                if call_tmp[2225300]
                {
                  const-val call_tmp[2225309]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2225311 'move' call_tmp[2225309](2225313 '<' tmp[2225221] coerce_tmp[2224782]))
                  if call_tmp[2225309]
                  {
                    (2225318 'move' ret[2225219] 1)
                    gotoReturn _end__strcmp_local[2225343] _end__strcmp_local[2225343]
                  }
                  const-val call_tmp[2225324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2225326 'move' call_tmp[2225324](2225328 '<' tmp[2225221] coerce_tmp[2224803]))
                  if call_tmp[2225324]
                  {
                    (2225333 'move' ret[2225219] -1)
                    gotoReturn _end__strcmp_local[2225343] _end__strcmp_local[2225343]
                  }
                }
                (2225340 'move' ret[2225219] call_tmp[2225288])
                label _end__strcmp_local[2225343]
                const-val coerce_tmp[2225345]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2225347 'move' coerce_tmp[2225345](2225349 'cast' c_void_ptr[149] call_tmp[2225198]))
                (2225353 call chpl_here_free[188127] coerce_tmp[2225345])
                (2225355 'move' ret[2224817] ret[2225219])
                gotoReturn _end__strcmp[2225557] _end__strcmp[2225557]
              }
              {
                val call_tmp[2225361]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2225363]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225365 'move' coerce_tmp[2225363](2225367 'cast' int(64)[13] coerce_tmp[2224789]))
                (2225370 'move' call_tmp[2225361](2225373 call bufferCopyRemote[172830] coerce_tmp[2225363] coerce_tmp[2224775] coerce_tmp[2224782]))
                val call_tmp[2225382]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2225384]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225386 'move' coerce_tmp[2225384](2225388 'cast' int(64)[13] coerce_tmp[2224810]))
                (2225391 'move' call_tmp[2225382](2225394 call bufferCopyRemote[172830] coerce_tmp[2225384] coerce_tmp[2224796] coerce_tmp[2224803]))
                val ret[2225403]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2225405]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2225407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225409 'move' call_tmp[2225407](2225411 '<' coerce_tmp[2224782] coerce_tmp[2224803]))
                if call_tmp[2225407]
                {
                  (2225416 'move' tmp[2225405] coerce_tmp[2224782])
                }
                {
                  (2225420 'move' tmp[2225405] coerce_tmp[2224803])
                }
                const-val coerce_tmp[2225429]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225431 'move' coerce_tmp[2225429](2225433 'cast' c_void_ptr[149] call_tmp[2225361]))
                const-val coerce_tmp[2225436]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2225438 'move' coerce_tmp[2225436](2225440 'cast' c_void_ptr[149] call_tmp[2225382]))
                const-val call_tmp[2225443]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225445 'move' call_tmp[2225443](2225447 '<' tmp[2225405] 0))
                if call_tmp[2225443]
                {
                  (2225453 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2225456]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225458 'move' call_tmp[2225456](2225460 'cast' uint(64)[115] tmp[2225405]))
                const-val call_tmp[2225463]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225465 'move' call_tmp[2225463](2225468 call memcmp[1206523] coerce_tmp[2225429] coerce_tmp[2225436] call_tmp[2225456]))
                const-val call_tmp[2225472]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225474 'move' call_tmp[2225472](2225476 'cast' int(64)[13] call_tmp[2225463]))
                const-val call_tmp[2225484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2225486 'move' call_tmp[2225484](2225488 '==' call_tmp[2225472] 0))
                if call_tmp[2225484]
                {
                  const-val call_tmp[2225493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2225495 'move' call_tmp[2225493](2225497 '<' tmp[2225405] coerce_tmp[2224782]))
                  if call_tmp[2225493]
                  {
                    (2225502 'move' ret[2225403] 1)
                    gotoReturn _end__strcmp_local[2225527] _end__strcmp_local[2225527]
                  }
                  const-val call_tmp[2225508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2225510 'move' call_tmp[2225508](2225512 '<' tmp[2225405] coerce_tmp[2224803]))
                  if call_tmp[2225508]
                  {
                    (2225517 'move' ret[2225403] -1)
                    gotoReturn _end__strcmp_local[2225527] _end__strcmp_local[2225527]
                  }
                }
                (2225524 'move' ret[2225403] call_tmp[2225472])
                label _end__strcmp_local[2225527]
                const-val coerce_tmp[2225529]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2225531 'move' coerce_tmp[2225529](2225533 'cast' c_void_ptr[149] call_tmp[2225361]))
                (2225537 call chpl_here_free[188127] coerce_tmp[2225529])
                const-val coerce_tmp[2225539]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2225541 'move' coerce_tmp[2225539](2225543 'cast' c_void_ptr[149] call_tmp[2225382]))
                (2225547 call chpl_here_free[188127] coerce_tmp[2225539])
                (2225549 'move' ret[2224817] ret[2225403])
                gotoReturn _end__strcmp[2225557] _end__strcmp[2225557]
              }
            }
          }
          label _end__strcmp[2225557]
          const-val call_tmp[2225559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2225561 'move' call_tmp[2225559](2225563 '<' ret[2224817] 0))
          (2011198 'move' tmp[2011149] call_tmp[2225559])
          ref i_x[2197495]:string[26] "temp"
          (2197499 'move' i_x[2197495](2197497 'set reference' call_tmp[2011169]))
          wide-ref tmp[2565300]:string[26] "temp"
          (2565303 'move' tmp[2565300] i_x[2197495])
          (2197503 call deinit[30834] tmp[2565300])
        }
        if tmp[2011149]
        {
          const-val call_tmp[2011212]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2011214]:int(32)[95] "temp"
          (2011216 'move' _virtual_method_tmp_[2011214](2011218 'getcid' coerce_tmp[2459687]))
          val ret_tmp[2011220]:string[26] "temp"
          ref tmp[2560277]:string[26] "temp"
          (2560281 'move' tmp[2560277](2560280 'set reference' ret_tmp[2011220]))
          wide-ref tmp[2560284]:string[26] "temp"
          (2560287 'move' tmp[2560284] tmp[2560277])
          (2011222 'virtual method call' message[167975] _virtual_method_tmp_[2011214] coerce_tmp[2459687] tmp[2560284])
          (2011227 'move' call_tmp[2011212] ret_tmp[2011220])
          wide-ref tmp[2560290]:string[26] "temp"
          (2560294 'move' tmp[2560290](2560292 'set reference' minMsg[169087]))
          (2011231 call =[38272] tmp[2560290] call_tmp[2011212])
          ref i_x[2197507]:string[26] "temp"
          (2197511 'move' i_x[2197507](2197509 'set reference' call_tmp[2011212]))
          wide-ref tmp[2565306]:string[26] "temp"
          (2565309 'move' tmp[2565306] i_x[2197507])
          (2197515 call deinit[30834] tmp[2565306])
        }
        const-val tmp[2011238]:bool[10] "dead after last mention" "maybe param" "temp"
        (2011240 'move' tmp[2011238](2011243 call ==[38823] maxMsg[169092] ""))
        val tmp[2011246]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if tmp[2011238]
        {
          (2011260 'move' tmp[2011246] 1)
        }
        {
          const-val call_tmp[2011266]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2011268]:int(32)[95] "temp"
          (2011270 'move' _virtual_method_tmp_[2011268](2011272 'getcid' coerce_tmp[2459687]))
          val ret_tmp[2011274]:string[26] "temp"
          ref tmp[2560297]:string[26] "temp"
          (2560301 'move' tmp[2560297](2560300 'set reference' ret_tmp[2011274]))
          wide-ref tmp[2560304]:string[26] "temp"
          (2560307 'move' tmp[2560304] tmp[2560297])
          (2011276 'virtual method call' message[167975] _virtual_method_tmp_[2011268] coerce_tmp[2459687] tmp[2560304])
          (2011281 'move' call_tmp[2011266] ret_tmp[2011274])
          val coerce_tmp[2226417]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567318]:c_ptr(uint(8))[937484] "temp"
          (2226419 'move' tmp[2567318](2226421 '.v' call_tmp[2011266] buff[30740]))
          (2567321 'move' coerce_tmp[2226417] tmp[2567318])
          const-val coerce_tmp[2226424]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567324]:int(64)[13] "temp"
          (2226426 'move' tmp[2567324](2226428 '.v' call_tmp[2011266] buffLen[30722]))
          (2567327 'move' coerce_tmp[2226424] tmp[2567324])
          const-val coerce_tmp[2226431]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567330]:int(32)[95] "temp"
          (2226433 'move' tmp[2567330](2226435 '.v' call_tmp[2011266] locale_id[30757]))
          (2567333 'move' coerce_tmp[2226431] tmp[2567330])
          val coerce_tmp[2226438]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567336]:c_ptr(uint(8))[937484] "temp"
          (2226440 'move' tmp[2567336](2226442 '.v' maxMsg[169092] buff[30740]))
          (2567339 'move' coerce_tmp[2226438] tmp[2567336])
          const-val coerce_tmp[2226445]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567342]:int(64)[13] "temp"
          (2226447 'move' tmp[2567342](2226449 '.v' maxMsg[169092] buffLen[30722]))
          (2567345 'move' coerce_tmp[2226445] tmp[2567342])
          const-val coerce_tmp[2226452]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2567348]:int(32)[95] "temp"
          (2226454 'move' tmp[2567348](2226456 '.v' maxMsg[169092] locale_id[30757]))
          (2567351 'move' coerce_tmp[2226452] tmp[2567348])
          val ret[2226459]:int(64)[13] "dead after last mention" "RVV" "temp"
          const-val call_tmp[2226461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2226463 'move' call_tmp[2226461](2226465 '==' coerce_tmp[2226431] chpl_nodeID[208207]))
          val tmp[2226468]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          if call_tmp[2226461]
          {
            const-val call_tmp[2226472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226474 'move' call_tmp[2226472](2226476 '==' coerce_tmp[2226452] chpl_nodeID[208207]))
            (2226479 'move' tmp[2226468] call_tmp[2226472])
          }
          {
            (2226483 'move' tmp[2226468] 0)
          }
          if tmp[2226468]
          {
            val ret[2226489]:int(64)[13] "dead after last mention" "RVV" "temp"
            val tmp[2226491]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val call_tmp[2226493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226495 'move' call_tmp[2226493](2226497 '<' coerce_tmp[2226424] coerce_tmp[2226445]))
            if call_tmp[2226493]
            {
              (2226502 'move' tmp[2226491] coerce_tmp[2226424])
            }
            {
              (2226506 'move' tmp[2226491] coerce_tmp[2226445])
            }
            const-val coerce_tmp[2226515]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2226517 'move' coerce_tmp[2226515](2226519 'cast' c_void_ptr[149] coerce_tmp[2226417]))
            const-val coerce_tmp[2226522]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2226524 'move' coerce_tmp[2226522](2226526 'cast' c_void_ptr[149] coerce_tmp[2226438]))
            const-val call_tmp[2226529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226531 'move' call_tmp[2226529](2226533 '<' tmp[2226491] 0))
            if call_tmp[2226529]
            {
              (2226539 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
            }
            const-val call_tmp[2226542]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226544 'move' call_tmp[2226542](2226546 'cast' uint(64)[115] tmp[2226491]))
            const-val call_tmp[2226549]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226551 'move' call_tmp[2226549](2226554 call memcmp[1206523] coerce_tmp[2226515] coerce_tmp[2226522] call_tmp[2226542]))
            const-val call_tmp[2226558]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226560 'move' call_tmp[2226558](2226562 'cast' int(64)[13] call_tmp[2226549]))
            const-val call_tmp[2226570]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226572 'move' call_tmp[2226570](2226574 '==' call_tmp[2226558] 0))
            if call_tmp[2226570]
            {
              const-val call_tmp[2226579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226581 'move' call_tmp[2226579](2226583 '<' tmp[2226491] coerce_tmp[2226424]))
              if call_tmp[2226579]
              {
                (2226588 'move' ret[2226489] 1)
                gotoReturn _end__strcmp_local[2226613] _end__strcmp_local[2226613]
              }
              const-val call_tmp[2226594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226596 'move' call_tmp[2226594](2226598 '<' tmp[2226491] coerce_tmp[2226445]))
              if call_tmp[2226594]
              {
                (2226603 'move' ret[2226489] -1)
                gotoReturn _end__strcmp_local[2226613] _end__strcmp_local[2226613]
              }
            }
            (2226610 'move' ret[2226489] call_tmp[2226558])
            label _end__strcmp_local[2226613]
            (2226615 'move' ret[2226459] ret[2226489])
            gotoReturn _end__strcmp[2227199] _end__strcmp[2227199]
          }
          {
            const-val call_tmp[2226621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2226623 'move' call_tmp[2226621](2226625 '!=' coerce_tmp[2226431] chpl_nodeID[208207]))
            val tmp[2226628]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            if call_tmp[2226621]
            {
              const-val call_tmp[2226632]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226634 'move' call_tmp[2226632](2226636 '==' coerce_tmp[2226452] chpl_nodeID[208207]))
              (2226639 'move' tmp[2226628] call_tmp[2226632])
            }
            {
              (2226643 'move' tmp[2226628] 0)
            }
            if tmp[2226628]
            {
              val call_tmp[2226649]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
              const-val coerce_tmp[2226651]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2226653 'move' coerce_tmp[2226651](2226655 'cast' int(64)[13] coerce_tmp[2226431]))
              (2226658 'move' call_tmp[2226649](2226661 call bufferCopyRemote[172830] coerce_tmp[2226651] coerce_tmp[2226417] coerce_tmp[2226424]))
              val ret[2226670]:int(64)[13] "dead after last mention" "RVV" "temp"
              val tmp[2226672]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val call_tmp[2226674]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226676 'move' call_tmp[2226674](2226678 '<' coerce_tmp[2226424] coerce_tmp[2226445]))
              if call_tmp[2226674]
              {
                (2226683 'move' tmp[2226672] coerce_tmp[2226424])
              }
              {
                (2226687 'move' tmp[2226672] coerce_tmp[2226445])
              }
              const-val coerce_tmp[2226696]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2226698 'move' coerce_tmp[2226696](2226700 'cast' c_void_ptr[149] call_tmp[2226649]))
              const-val coerce_tmp[2226703]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2226705 'move' coerce_tmp[2226703](2226707 'cast' c_void_ptr[149] coerce_tmp[2226438]))
              const-val call_tmp[2226710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226712 'move' call_tmp[2226710](2226714 '<' tmp[2226672] 0))
              if call_tmp[2226710]
              {
                (2226720 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
              }
              const-val call_tmp[2226723]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226725 'move' call_tmp[2226723](2226727 'cast' uint(64)[115] tmp[2226672]))
              const-val call_tmp[2226730]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226732 'move' call_tmp[2226730](2226735 call memcmp[1206523] coerce_tmp[2226696] coerce_tmp[2226703] call_tmp[2226723]))
              const-val call_tmp[2226739]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226741 'move' call_tmp[2226739](2226743 'cast' int(64)[13] call_tmp[2226730]))
              const-val call_tmp[2226751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226753 'move' call_tmp[2226751](2226755 '==' call_tmp[2226739] 0))
              if call_tmp[2226751]
              {
                const-val call_tmp[2226760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226762 'move' call_tmp[2226760](2226764 '<' tmp[2226672] coerce_tmp[2226424]))
                if call_tmp[2226760]
                {
                  (2226769 'move' ret[2226670] 1)
                  gotoReturn _end__strcmp_local[2226794] _end__strcmp_local[2226794]
                }
                const-val call_tmp[2226775]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226777 'move' call_tmp[2226775](2226779 '<' tmp[2226672] coerce_tmp[2226445]))
                if call_tmp[2226775]
                {
                  (2226784 'move' ret[2226670] -1)
                  gotoReturn _end__strcmp_local[2226794] _end__strcmp_local[2226794]
                }
              }
              (2226791 'move' ret[2226670] call_tmp[2226739])
              label _end__strcmp_local[2226794]
              const-val coerce_tmp[2226796]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2226798 'move' coerce_tmp[2226796](2226800 'cast' c_void_ptr[149] call_tmp[2226649]))
              (2226804 call chpl_here_free[188127] coerce_tmp[2226796])
              (2226806 'move' ret[2226459] ret[2226670])
              gotoReturn _end__strcmp[2227199] _end__strcmp[2227199]
            }
            {
              const-val call_tmp[2226812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (2226814 'move' call_tmp[2226812](2226816 '==' coerce_tmp[2226431] chpl_nodeID[208207]))
              val tmp[2226819]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              if call_tmp[2226812]
              {
                const-val call_tmp[2226823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226825 'move' call_tmp[2226823](2226827 '!=' coerce_tmp[2226452] chpl_nodeID[208207]))
                (2226830 'move' tmp[2226819] call_tmp[2226823])
              }
              {
                (2226834 'move' tmp[2226819] 0)
              }
              if tmp[2226819]
              {
                val call_tmp[2226840]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2226842]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2226844 'move' coerce_tmp[2226842](2226846 'cast' int(64)[13] coerce_tmp[2226452]))
                (2226849 'move' call_tmp[2226840](2226852 call bufferCopyRemote[172830] coerce_tmp[2226842] coerce_tmp[2226438] coerce_tmp[2226445]))
                val ret[2226861]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2226863]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2226865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226867 'move' call_tmp[2226865](2226869 '<' coerce_tmp[2226424] coerce_tmp[2226445]))
                if call_tmp[2226865]
                {
                  (2226874 'move' tmp[2226863] coerce_tmp[2226424])
                }
                {
                  (2226878 'move' tmp[2226863] coerce_tmp[2226445])
                }
                const-val coerce_tmp[2226887]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2226889 'move' coerce_tmp[2226887](2226891 'cast' c_void_ptr[149] coerce_tmp[2226417]))
                const-val coerce_tmp[2226894]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2226896 'move' coerce_tmp[2226894](2226898 'cast' c_void_ptr[149] call_tmp[2226840]))
                const-val call_tmp[2226901]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226903 'move' call_tmp[2226901](2226905 '<' tmp[2226863] 0))
                if call_tmp[2226901]
                {
                  (2226911 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2226914]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226916 'move' call_tmp[2226914](2226918 'cast' uint(64)[115] tmp[2226863]))
                const-val call_tmp[2226921]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226923 'move' call_tmp[2226921](2226926 call memcmp[1206523] coerce_tmp[2226887] coerce_tmp[2226894] call_tmp[2226914]))
                const-val call_tmp[2226930]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226932 'move' call_tmp[2226930](2226934 'cast' int(64)[13] call_tmp[2226921]))
                const-val call_tmp[2226942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2226944 'move' call_tmp[2226942](2226946 '==' call_tmp[2226930] 0))
                if call_tmp[2226942]
                {
                  const-val call_tmp[2226951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2226953 'move' call_tmp[2226951](2226955 '<' tmp[2226863] coerce_tmp[2226424]))
                  if call_tmp[2226951]
                  {
                    (2226960 'move' ret[2226861] 1)
                    gotoReturn _end__strcmp_local[2226985] _end__strcmp_local[2226985]
                  }
                  const-val call_tmp[2226966]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2226968 'move' call_tmp[2226966](2226970 '<' tmp[2226863] coerce_tmp[2226445]))
                  if call_tmp[2226966]
                  {
                    (2226975 'move' ret[2226861] -1)
                    gotoReturn _end__strcmp_local[2226985] _end__strcmp_local[2226985]
                  }
                }
                (2226982 'move' ret[2226861] call_tmp[2226930])
                label _end__strcmp_local[2226985]
                const-val coerce_tmp[2226987]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2226989 'move' coerce_tmp[2226987](2226991 'cast' c_void_ptr[149] call_tmp[2226840]))
                (2226995 call chpl_here_free[188127] coerce_tmp[2226987])
                (2226997 'move' ret[2226459] ret[2226861])
                gotoReturn _end__strcmp[2227199] _end__strcmp[2227199]
              }
              {
                val call_tmp[2227003]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2227005]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2227007 'move' coerce_tmp[2227005](2227009 'cast' int(64)[13] coerce_tmp[2226431]))
                (2227012 'move' call_tmp[2227003](2227015 call bufferCopyRemote[172830] coerce_tmp[2227005] coerce_tmp[2226417] coerce_tmp[2226424]))
                val call_tmp[2227024]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
                const-val coerce_tmp[2227026]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2227028 'move' coerce_tmp[2227026](2227030 'cast' int(64)[13] coerce_tmp[2226452]))
                (2227033 'move' call_tmp[2227024](2227036 call bufferCopyRemote[172830] coerce_tmp[2227026] coerce_tmp[2226438] coerce_tmp[2226445]))
                val ret[2227045]:int(64)[13] "dead after last mention" "RVV" "temp"
                val tmp[2227047]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val call_tmp[2227049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227051 'move' call_tmp[2227049](2227053 '<' coerce_tmp[2226424] coerce_tmp[2226445]))
                if call_tmp[2227049]
                {
                  (2227058 'move' tmp[2227047] coerce_tmp[2226424])
                }
                {
                  (2227062 'move' tmp[2227047] coerce_tmp[2226445])
                }
                const-val coerce_tmp[2227071]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2227073 'move' coerce_tmp[2227071](2227075 'cast' c_void_ptr[149] call_tmp[2227003]))
                const-val coerce_tmp[2227078]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (2227080 'move' coerce_tmp[2227078](2227082 'cast' c_void_ptr[149] call_tmp[2227024]))
                const-val call_tmp[2227085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227087 'move' call_tmp[2227085](2227089 '<' tmp[2227047] 0))
                if call_tmp[2227085]
                {
                  (2227095 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
                }
                const-val call_tmp[2227098]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227100 'move' call_tmp[2227098](2227102 'cast' uint(64)[115] tmp[2227047]))
                const-val call_tmp[2227105]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227107 'move' call_tmp[2227105](2227110 call memcmp[1206523] coerce_tmp[2227071] coerce_tmp[2227078] call_tmp[2227098]))
                const-val call_tmp[2227114]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227116 'move' call_tmp[2227114](2227118 'cast' int(64)[13] call_tmp[2227105]))
                const-val call_tmp[2227126]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (2227128 'move' call_tmp[2227126](2227130 '==' call_tmp[2227114] 0))
                if call_tmp[2227126]
                {
                  const-val call_tmp[2227135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2227137 'move' call_tmp[2227135](2227139 '<' tmp[2227047] coerce_tmp[2226424]))
                  if call_tmp[2227135]
                  {
                    (2227144 'move' ret[2227045] 1)
                    gotoReturn _end__strcmp_local[2227169] _end__strcmp_local[2227169]
                  }
                  const-val call_tmp[2227150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (2227152 'move' call_tmp[2227150](2227154 '<' tmp[2227047] coerce_tmp[2226445]))
                  if call_tmp[2227150]
                  {
                    (2227159 'move' ret[2227045] -1)
                    gotoReturn _end__strcmp_local[2227169] _end__strcmp_local[2227169]
                  }
                }
                (2227166 'move' ret[2227045] call_tmp[2227114])
                label _end__strcmp_local[2227169]
                const-val coerce_tmp[2227171]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2227173 'move' coerce_tmp[2227171](2227175 'cast' c_void_ptr[149] call_tmp[2227003]))
                (2227179 call chpl_here_free[188127] coerce_tmp[2227171])
                const-val coerce_tmp[2227181]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (2227183 'move' coerce_tmp[2227181](2227185 'cast' c_void_ptr[149] call_tmp[2227024]))
                (2227189 call chpl_here_free[188127] coerce_tmp[2227181])
                (2227191 'move' ret[2226459] ret[2227045])
                gotoReturn _end__strcmp[2227199] _end__strcmp[2227199]
              }
            }
          }
          label _end__strcmp[2227199]
          const-val call_tmp[2227201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2227203 'move' call_tmp[2227201](2227205 '>' ret[2226459] 0))
          (2011295 'move' tmp[2011246] call_tmp[2227201])
          ref i_x[2197519]:string[26] "temp"
          (2197523 'move' i_x[2197519](2197521 'set reference' call_tmp[2011266]))
          wide-ref tmp[2565312]:string[26] "temp"
          (2565315 'move' tmp[2565312] i_x[2197519])
          (2197527 call deinit[30834] tmp[2565312])
        }
        if tmp[2011246]
        {
          const-val call_tmp[2011309]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2011311]:int(32)[95] "temp"
          (2011313 'move' _virtual_method_tmp_[2011311](2011315 'getcid' coerce_tmp[2459687]))
          val ret_tmp[2011317]:string[26] "temp"
          ref tmp[2560310]:string[26] "temp"
          (2560314 'move' tmp[2560310](2560313 'set reference' ret_tmp[2011317]))
          wide-ref tmp[2560317]:string[26] "temp"
          (2560320 'move' tmp[2560317] tmp[2560310])
          (2011319 'virtual method call' message[167975] _virtual_method_tmp_[2011311] coerce_tmp[2459687] tmp[2560317])
          (2011324 'move' call_tmp[2011309] ret_tmp[2011317])
          wide-ref tmp[2560323]:string[26] "temp"
          (2560327 'move' tmp[2560323](2560325 'set reference' maxMsg[169092]))
          (2011328 call =[38272] tmp[2560323] call_tmp[2011309])
          ref i_x[2197531]:string[26] "temp"
          (2197535 'move' i_x[2197531](2197533 'set reference' call_tmp[2011309]))
          wide-ref tmp[2565318]:string[26] "temp"
          (2565321 'move' tmp[2565318] i_x[2197531])
          (2197539 call deinit[30834] tmp[2565318])
        }
        ref i_lhs[2242369]:int(64)[13] "temp"
        (2242373 'move' i_lhs[2242369](2242371 'set reference' n[169081]))
        (2242381 '+=' i_lhs[2242369] 1)
      }
      {
        (2010939 '=' i[2010867] tmp_x0[2489232])
      }
      {
        (2010950 '<=' i[2010867] _ic__F1_high[2482568])
      }
      {
        (2010956 '+=' i[2010867] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2010993]
    label _endchpl_direct_counted_range_iter_helper[2011001]
    label _endchpl_direct_counted_range_iter[1942752]
    label _endthese[1942757]
    const-val _ic__F0_this[2474605]:__wide_TaskErrors[2519220] "temp"
    (2242848 'move' _ic__F0_this[2474605] this[169728])
    const-val this[1943309]:__wide_TaskErrors[2519220] "temp"
    (1943314 'move' this[1943309] this[169728])
    const-val coerce_tmp[1943021]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2559247]:int(64)[13] "temp"
    (1943023 'move' tmp[2559247](2502613 '.v' this[1943309] nErrors[168363]))
    (2559250 'move' coerce_tmp[1943021] tmp[2559247])
    const-val call_tmp[2178229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2178231 'move' call_tmp[2178229](2178233 '<' coerce_tmp[1943021] 0))
    if call_tmp[2178229]
    {
      (2011431 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
    }
    val tmp_x0[2489340]:int(64)[13] "temp"
    val tmp_x1[2489342]:int(64)[13] "temp"
    const-val call_tmp[2182277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2182279 'move' call_tmp[2182277](2182281 '==' coerce_tmp[1943021] 0))
    if call_tmp[2182277]
    {
      const-val call_tmp[2179159]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2179161 'move' call_tmp[2179159](2179163 'cast' uint(64)[115] 0))
      const-val call_tmp[2248267]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2248269 'move' call_tmp[2248267](2248271 '-' call_tmp[2179159] 1))
      const-val call_tmp[2248687]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2248689 'move' call_tmp[2248687](2248691 'cast' int(64)[13] call_tmp[2248267]))
      (2489348 'move' tmp_x0[2489340] 0)
      (2489353 'move' tmp_x1[2489342] call_tmp[2248687])
    }
    {
      const-val call_tmp[2208599]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208601 'move' call_tmp[2208599](2208603 '-' coerce_tmp[1943021] 1))
      const-val call_tmp[2189606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2189608 'move' call_tmp[2189606](2189610 '+' 0 call_tmp[2208599]))
      (2489358 'move' tmp_x0[2489340] 0)
      (2489363 'move' tmp_x1[2489342] call_tmp[2189606])
    }
    (2011540 'noop')
    (2011560 'noop')
    (2011579 'noop')
    const-val _ic__F1_high[2482587]:int(64)[13] "temp"
    (2253978 'move' _ic__F1_high[2482587] tmp_x1[2489342])
    val i[2011608]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2011612 'move' i[2011608] 0)
    (2011664 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2489340] tmp_x1[2489342] 1 tmp_x0[2489340] tmp_x1[2489342] 1)
    const-val this[2011773]:__wide_TaskErrors[2519220] "temp"
    (2011775 'move' this[2011773] _ic__F0_this[2474605])
    val coerce_tmp[2011785]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2560330]:c_ptr(owned Error?)[1235676] "temp"
    (2011787 'move' tmp[2560330](2502621 '.v' this[2011773] errorsArray[168374]))
    (2560333 'move' coerce_tmp[2011785] tmp[2560330])
    CForLoop[2011671] hazard
    {
      ref call_tmp[2255934]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
      (2255936 'move' call_tmp[2255934](2255938 'array_get' coerce_tmp[2011785] i[2011608]))
      val coerce_tmp[2011799]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2011801 'move' coerce_tmp[2011799](2011804 call borrow[1235889] call_tmp[2255934]))
      val coerce_tmp[2011806]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2011808 'move' coerce_tmp[2011806](2011810 'cast' object[22] coerce_tmp[2011799]))
      const-val call_tmp[2175657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2563620]:__wide_object[2519087] "temp"
      (2563623 'move' tmp[2563620] nil[44])
      (2175659 'move' call_tmp[2175657](2175661 'ptr_neq' coerce_tmp[2011806] tmp[2563620]))
      if call_tmp[2175657]
      {
        const-val this[2011832]:__wide_TaskErrors[2519220] "temp"
        (2011834 'move' this[2011832] _ic__F0_this[2474605])
        val coerce_tmp[2011844]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2560336]:c_ptr(owned Error?)[1235676] "temp"
        (2011846 'move' tmp[2560336](2502627 '.v' this[2011832] errorsArray[168374]))
        (2560339 'move' coerce_tmp[2011844] tmp[2560336])
        ref call_tmp[2255944]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2255946 'move' call_tmp[2255944](2255948 'array_get' coerce_tmp[2011844] i[2011608]))
        val coerce_tmp[2459697]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459699 'move' coerce_tmp[2459697](2459701 '.v' call_tmp[2255944] chpl_p[966469]))
        val coerce_tmp[2459704]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459706 'move' coerce_tmp[2459704](2459708 'cast' object[22] coerce_tmp[2459697]))
        const-val call_tmp[2459711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2582713]:__wide_object[2519087] "temp"
        (2582716 'move' tmp[2582713] nil[44])
        (2459713 'move' call_tmp[2459711](2459715 'ptr_eq' coerce_tmp[2459704] tmp[2582713]))
        if call_tmp[2459711]
        {
          (2459721 call nilCheckHalt[210171] "argument to ! is nil")
        }
        val coerce_tmp[2459724]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2459726 'move' coerce_tmp[2459724](2459728 '.v' call_tmp[2255944] chpl_p[966469]))
        const-val call_tmp[2011882]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val _virtual_method_tmp_[2011884]:int(32)[95] "temp"
        (2011886 'move' _virtual_method_tmp_[2011884](2011888 'getcid' coerce_tmp[2459724]))
        val ret_tmp[2011890]:string[26] "temp"
        ref tmp[2560342]:string[26] "temp"
        (2560346 'move' tmp[2560342](2560345 'set reference' ret_tmp[2011890]))
        wide-ref tmp[2560349]:string[26] "temp"
        (2560352 'move' tmp[2560349] tmp[2560342])
        (2011892 'virtual method call' message[167975] _virtual_method_tmp_[2011884] coerce_tmp[2459724] tmp[2560349])
        (2011897 'move' call_tmp[2011882] ret_tmp[2011890])
        const-val call_tmp[2011900]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2011902 'move' call_tmp[2011900](2011905 call ==[38823] call_tmp[2011882] minMsg[169087]))
        if call_tmp[2011900]
        {
          val coerce_tmp[2011917]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2011919 'move' coerce_tmp[2011917](2011921 'cast' object[22] first[169099]))
          const-val call_tmp[2174307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2563278]:__wide_object[2519087] "temp"
          (2563281 'move' tmp[2563278] nil[44])
          (2174309 'move' call_tmp[2174307](2174311 'ptr_eq' coerce_tmp[2011917] tmp[2563278]))
          if call_tmp[2174307]
          {
            (2349039 '=' first[169099] coerce_tmp[2459724])
          }
          (2349051 '=' last[169106] coerce_tmp[2459724])
        }
        ref i_x[2197543]:string[26] "temp"
        (2197547 'move' i_x[2197543](2197545 'set reference' call_tmp[2011882]))
        wide-ref tmp[2565324]:string[26] "temp"
        (2565327 'move' tmp[2565324] i_x[2197543])
        (2197551 call deinit[30834] tmp[2565324])
      }
      {
        (2011680 '=' i[2011608] tmp_x0[2489340])
      }
      {
        (2011691 '<=' i[2011608] _ic__F1_high[2482587])
      }
      {
        (2011697 '+=' i[2011608] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2011734]
    label _endchpl_direct_counted_range_iter_helper[2011742]
    label _endchpl_direct_counted_range_iter[1943197]
    label _endthese[1943202]
    val coerce_tmp[2223127]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567246]:c_ptr(uint(8))[937484] "temp"
    (2223129 'move' tmp[2567246](2223131 '.v' minMsg[169087] buff[30740]))
    (2567249 'move' coerce_tmp[2223127] tmp[2567246])
    const-val coerce_tmp[2223134]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567252]:int(64)[13] "temp"
    (2223136 'move' tmp[2567252](2223138 '.v' minMsg[169087] buffLen[30722]))
    (2567255 'move' coerce_tmp[2223134] tmp[2567252])
    const-val coerce_tmp[2223141]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567258]:int(32)[95] "temp"
    (2223143 'move' tmp[2567258](2223145 '.v' minMsg[169087] locale_id[30757]))
    (2567261 'move' coerce_tmp[2223141] tmp[2567258])
    val coerce_tmp[2223148]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567264]:c_ptr(uint(8))[937484] "temp"
    (2223150 'move' tmp[2567264](2223152 '.v' maxMsg[169092] buff[30740]))
    (2567267 'move' coerce_tmp[2223148] tmp[2567264])
    const-val coerce_tmp[2223155]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567270]:int(64)[13] "temp"
    (2223157 'move' tmp[2567270](2223159 '.v' maxMsg[169092] buffLen[30722]))
    (2567273 'move' coerce_tmp[2223155] tmp[2567270])
    const-val coerce_tmp[2223162]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567276]:int(32)[95] "temp"
    (2223164 'move' tmp[2567276](2223166 '.v' maxMsg[169092] locale_id[30757]))
    (2567279 'move' coerce_tmp[2223162] tmp[2567276])
    val ret[2223169]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2223171]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223173 'move' call_tmp[2223171](2223175 '==' coerce_tmp[2223141] chpl_nodeID[208207]))
    val tmp[2223178]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2223171]
    {
      const-val call_tmp[2223182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223184 'move' call_tmp[2223182](2223186 '==' coerce_tmp[2223162] chpl_nodeID[208207]))
      (2223189 'move' tmp[2223178] call_tmp[2223182])
    }
    {
      (2223193 'move' tmp[2223178] 0)
    }
    if tmp[2223178]
    {
      val ret[2223199]:int(64)[13] "dead after last mention" "RVV" "temp"
      val tmp[2223201]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val call_tmp[2223203]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223205 'move' call_tmp[2223203](2223207 '<' coerce_tmp[2223134] coerce_tmp[2223155]))
      if call_tmp[2223203]
      {
        (2223212 'move' tmp[2223201] coerce_tmp[2223134])
      }
      {
        (2223216 'move' tmp[2223201] coerce_tmp[2223155])
      }
      const-val coerce_tmp[2223225]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2223227 'move' coerce_tmp[2223225](2223229 'cast' c_void_ptr[149] coerce_tmp[2223127]))
      const-val coerce_tmp[2223232]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2223234 'move' coerce_tmp[2223232](2223236 'cast' c_void_ptr[149] coerce_tmp[2223148]))
      const-val call_tmp[2223239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223241 'move' call_tmp[2223239](2223243 '<' tmp[2223201] 0))
      if call_tmp[2223239]
      {
        (2223249 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
      }
      const-val call_tmp[2223252]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223254 'move' call_tmp[2223252](2223256 'cast' uint(64)[115] tmp[2223201]))
      const-val call_tmp[2223259]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223261 'move' call_tmp[2223259](2223264 call memcmp[1206523] coerce_tmp[2223225] coerce_tmp[2223232] call_tmp[2223252]))
      const-val call_tmp[2223268]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223270 'move' call_tmp[2223268](2223272 'cast' int(64)[13] call_tmp[2223259]))
      const-val call_tmp[2223280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223282 'move' call_tmp[2223280](2223284 '==' call_tmp[2223268] 0))
      if call_tmp[2223280]
      {
        const-val call_tmp[2223289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223291 'move' call_tmp[2223289](2223293 '<' tmp[2223201] coerce_tmp[2223134]))
        if call_tmp[2223289]
        {
          (2223298 'move' ret[2223199] 1)
          gotoReturn _end__strcmp_local[2223323] _end__strcmp_local[2223323]
        }
        const-val call_tmp[2223304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223306 'move' call_tmp[2223304](2223308 '<' tmp[2223201] coerce_tmp[2223155]))
        if call_tmp[2223304]
        {
          (2223313 'move' ret[2223199] -1)
          gotoReturn _end__strcmp_local[2223323] _end__strcmp_local[2223323]
        }
      }
      (2223320 'move' ret[2223199] call_tmp[2223268])
      label _end__strcmp_local[2223323]
      (2223325 'move' ret[2223169] ret[2223199])
      gotoReturn _end__strcmp[2223909] _end__strcmp[2223909]
    }
    {
      const-val call_tmp[2223331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2223333 'move' call_tmp[2223331](2223335 '!=' coerce_tmp[2223141] chpl_nodeID[208207]))
      val tmp[2223338]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2223331]
      {
        const-val call_tmp[2223342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223344 'move' call_tmp[2223342](2223346 '==' coerce_tmp[2223162] chpl_nodeID[208207]))
        (2223349 'move' tmp[2223338] call_tmp[2223342])
      }
      {
        (2223353 'move' tmp[2223338] 0)
      }
      if tmp[2223338]
      {
        val call_tmp[2223359]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[2223361]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2223363 'move' coerce_tmp[2223361](2223365 'cast' int(64)[13] coerce_tmp[2223141]))
        (2223368 'move' call_tmp[2223359](2223371 call bufferCopyRemote[172830] coerce_tmp[2223361] coerce_tmp[2223127] coerce_tmp[2223134]))
        val ret[2223380]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2223382]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val call_tmp[2223384]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223386 'move' call_tmp[2223384](2223388 '<' coerce_tmp[2223134] coerce_tmp[2223155]))
        if call_tmp[2223384]
        {
          (2223393 'move' tmp[2223382] coerce_tmp[2223134])
        }
        {
          (2223397 'move' tmp[2223382] coerce_tmp[2223155])
        }
        const-val coerce_tmp[2223406]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2223408 'move' coerce_tmp[2223406](2223410 'cast' c_void_ptr[149] call_tmp[2223359]))
        const-val coerce_tmp[2223413]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2223415 'move' coerce_tmp[2223413](2223417 'cast' c_void_ptr[149] coerce_tmp[2223148]))
        const-val call_tmp[2223420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223422 'move' call_tmp[2223420](2223424 '<' tmp[2223382] 0))
        if call_tmp[2223420]
        {
          (2223430 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
        }
        const-val call_tmp[2223433]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223435 'move' call_tmp[2223433](2223437 'cast' uint(64)[115] tmp[2223382]))
        const-val call_tmp[2223440]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223442 'move' call_tmp[2223440](2223445 call memcmp[1206523] coerce_tmp[2223406] coerce_tmp[2223413] call_tmp[2223433]))
        const-val call_tmp[2223449]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223451 'move' call_tmp[2223449](2223453 'cast' int(64)[13] call_tmp[2223440]))
        const-val call_tmp[2223461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223463 'move' call_tmp[2223461](2223465 '==' call_tmp[2223449] 0))
        if call_tmp[2223461]
        {
          const-val call_tmp[2223470]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223472 'move' call_tmp[2223470](2223474 '<' tmp[2223382] coerce_tmp[2223134]))
          if call_tmp[2223470]
          {
            (2223479 'move' ret[2223380] 1)
            gotoReturn _end__strcmp_local[2223504] _end__strcmp_local[2223504]
          }
          const-val call_tmp[2223485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223487 'move' call_tmp[2223485](2223489 '<' tmp[2223382] coerce_tmp[2223155]))
          if call_tmp[2223485]
          {
            (2223494 'move' ret[2223380] -1)
            gotoReturn _end__strcmp_local[2223504] _end__strcmp_local[2223504]
          }
        }
        (2223501 'move' ret[2223380] call_tmp[2223449])
        label _end__strcmp_local[2223504]
        const-val coerce_tmp[2223506]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2223508 'move' coerce_tmp[2223506](2223510 'cast' c_void_ptr[149] call_tmp[2223359]))
        (2223514 call chpl_here_free[188127] coerce_tmp[2223506])
        (2223516 'move' ret[2223169] ret[2223380])
        gotoReturn _end__strcmp[2223909] _end__strcmp[2223909]
      }
      {
        const-val call_tmp[2223522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2223524 'move' call_tmp[2223522](2223526 '==' coerce_tmp[2223141] chpl_nodeID[208207]))
        val tmp[2223529]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        if call_tmp[2223522]
        {
          const-val call_tmp[2223533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223535 'move' call_tmp[2223533](2223537 '!=' coerce_tmp[2223162] chpl_nodeID[208207]))
          (2223540 'move' tmp[2223529] call_tmp[2223533])
        }
        {
          (2223544 'move' tmp[2223529] 0)
        }
        if tmp[2223529]
        {
          val call_tmp[2223550]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2223552]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223554 'move' coerce_tmp[2223552](2223556 'cast' int(64)[13] coerce_tmp[2223162]))
          (2223559 'move' call_tmp[2223550](2223562 call bufferCopyRemote[172830] coerce_tmp[2223552] coerce_tmp[2223148] coerce_tmp[2223155]))
          val ret[2223571]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2223573]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2223575]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223577 'move' call_tmp[2223575](2223579 '<' coerce_tmp[2223134] coerce_tmp[2223155]))
          if call_tmp[2223575]
          {
            (2223584 'move' tmp[2223573] coerce_tmp[2223134])
          }
          {
            (2223588 'move' tmp[2223573] coerce_tmp[2223155])
          }
          const-val coerce_tmp[2223597]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223599 'move' coerce_tmp[2223597](2223601 'cast' c_void_ptr[149] coerce_tmp[2223127]))
          const-val coerce_tmp[2223604]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223606 'move' coerce_tmp[2223604](2223608 'cast' c_void_ptr[149] call_tmp[2223550]))
          const-val call_tmp[2223611]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223613 'move' call_tmp[2223611](2223615 '<' tmp[2223573] 0))
          if call_tmp[2223611]
          {
            (2223621 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2223624]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223626 'move' call_tmp[2223624](2223628 'cast' uint(64)[115] tmp[2223573]))
          const-val call_tmp[2223631]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223633 'move' call_tmp[2223631](2223636 call memcmp[1206523] coerce_tmp[2223597] coerce_tmp[2223604] call_tmp[2223624]))
          const-val call_tmp[2223640]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223642 'move' call_tmp[2223640](2223644 'cast' int(64)[13] call_tmp[2223631]))
          const-val call_tmp[2223652]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223654 'move' call_tmp[2223652](2223656 '==' call_tmp[2223640] 0))
          if call_tmp[2223652]
          {
            const-val call_tmp[2223661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2223663 'move' call_tmp[2223661](2223665 '<' tmp[2223573] coerce_tmp[2223134]))
            if call_tmp[2223661]
            {
              (2223670 'move' ret[2223571] 1)
              gotoReturn _end__strcmp_local[2223695] _end__strcmp_local[2223695]
            }
            const-val call_tmp[2223676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2223678 'move' call_tmp[2223676](2223680 '<' tmp[2223573] coerce_tmp[2223155]))
            if call_tmp[2223676]
            {
              (2223685 'move' ret[2223571] -1)
              gotoReturn _end__strcmp_local[2223695] _end__strcmp_local[2223695]
            }
          }
          (2223692 'move' ret[2223571] call_tmp[2223640])
          label _end__strcmp_local[2223695]
          const-val coerce_tmp[2223697]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2223699 'move' coerce_tmp[2223697](2223701 'cast' c_void_ptr[149] call_tmp[2223550]))
          (2223705 call chpl_here_free[188127] coerce_tmp[2223697])
          (2223707 'move' ret[2223169] ret[2223571])
          gotoReturn _end__strcmp[2223909] _end__strcmp[2223909]
        }
        {
          val call_tmp[2223713]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2223715]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223717 'move' coerce_tmp[2223715](2223719 'cast' int(64)[13] coerce_tmp[2223141]))
          (2223722 'move' call_tmp[2223713](2223725 call bufferCopyRemote[172830] coerce_tmp[2223715] coerce_tmp[2223127] coerce_tmp[2223134]))
          val call_tmp[2223734]:c_ptr(uint(8))[937484] "dead at end of block" "maybe param" "temp"
          const-val coerce_tmp[2223736]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223738 'move' coerce_tmp[2223736](2223740 'cast' int(64)[13] coerce_tmp[2223162]))
          (2223743 'move' call_tmp[2223734](2223746 call bufferCopyRemote[172830] coerce_tmp[2223736] coerce_tmp[2223148] coerce_tmp[2223155]))
          val ret[2223755]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2223757]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val call_tmp[2223759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223761 'move' call_tmp[2223759](2223763 '<' coerce_tmp[2223134] coerce_tmp[2223155]))
          if call_tmp[2223759]
          {
            (2223768 'move' tmp[2223757] coerce_tmp[2223134])
          }
          {
            (2223772 'move' tmp[2223757] coerce_tmp[2223155])
          }
          const-val coerce_tmp[2223781]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223783 'move' coerce_tmp[2223781](2223785 'cast' c_void_ptr[149] call_tmp[2223713]))
          const-val coerce_tmp[2223788]:c_void_ptr[149] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2223790 'move' coerce_tmp[2223788](2223792 'cast' c_void_ptr[149] call_tmp[2223734]))
          const-val call_tmp[2223795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223797 'move' call_tmp[2223795](2223799 '<' tmp[2223757] 0))
          if call_tmp[2223795]
          {
            (2223805 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
          }
          const-val call_tmp[2223808]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223810 'move' call_tmp[2223808](2223812 'cast' uint(64)[115] tmp[2223757]))
          const-val call_tmp[2223815]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223817 'move' call_tmp[2223815](2223820 call memcmp[1206523] coerce_tmp[2223781] coerce_tmp[2223788] call_tmp[2223808]))
          const-val call_tmp[2223824]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223826 'move' call_tmp[2223824](2223828 'cast' int(64)[13] call_tmp[2223815]))
          const-val call_tmp[2223836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2223838 'move' call_tmp[2223836](2223840 '==' call_tmp[2223824] 0))
          if call_tmp[2223836]
          {
            const-val call_tmp[2223845]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2223847 'move' call_tmp[2223845](2223849 '<' tmp[2223757] coerce_tmp[2223134]))
            if call_tmp[2223845]
            {
              (2223854 'move' ret[2223755] 1)
              gotoReturn _end__strcmp_local[2223879] _end__strcmp_local[2223879]
            }
            const-val call_tmp[2223860]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2223862 'move' call_tmp[2223860](2223864 '<' tmp[2223757] coerce_tmp[2223155]))
            if call_tmp[2223860]
            {
              (2223869 'move' ret[2223755] -1)
              gotoReturn _end__strcmp_local[2223879] _end__strcmp_local[2223879]
            }
          }
          (2223876 'move' ret[2223755] call_tmp[2223824])
          label _end__strcmp_local[2223879]
          const-val coerce_tmp[2223881]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2223883 'move' coerce_tmp[2223881](2223885 'cast' c_void_ptr[149] call_tmp[2223713]))
          (2223889 call chpl_here_free[188127] coerce_tmp[2223881])
          const-val coerce_tmp[2223891]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2223893 'move' coerce_tmp[2223891](2223895 'cast' c_void_ptr[149] call_tmp[2223734]))
          (2223899 call chpl_here_free[188127] coerce_tmp[2223891])
          (2223901 'move' ret[2223169] ret[2223755])
          gotoReturn _end__strcmp[2223909] _end__strcmp[2223909]
        }
      }
    }
    label _end__strcmp[2223909]
    const-val call_tmp[2223911]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223913 'move' call_tmp[2223911](2223915 '==' ret[2223169] 0))
    const-val call_tmp[2223918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2223920 'move' call_tmp[2223918](2223922 '!' call_tmp[2223911]))
    if call_tmp[2223918]
    {
      const-val _ic__F0_this[2474628]:__wide_TaskErrors[2519220] "temp"
      (2242900 'move' _ic__F0_this[2474628] this[169728])
      const-val this[1943602]:__wide_TaskErrors[2519220] "temp"
      (1943607 'move' this[1943602] this[169728])
      const-val coerce_tmp[1943346]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2559253]:int(64)[13] "temp"
      (1943348 'move' tmp[2559253](2502641 '.v' this[1943602] nErrors[168363]))
      (2559256 'move' coerce_tmp[1943346] tmp[2559253])
      const-val call_tmp[2178239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2178241 'move' call_tmp[2178239](2178243 '<' coerce_tmp[1943346] 0))
      if call_tmp[2178239]
      {
        (2012052 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
      }
      val tmp_x0[2489448]:int(64)[13] "temp"
      val tmp_x1[2489450]:int(64)[13] "temp"
      const-val call_tmp[2182292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2182294 'move' call_tmp[2182292](2182296 '==' coerce_tmp[1943346] 0))
      if call_tmp[2182292]
      {
        const-val call_tmp[2179169]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2179171 'move' call_tmp[2179169](2179173 'cast' uint(64)[115] 0))
        const-val call_tmp[2248277]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2248279 'move' call_tmp[2248277](2248281 '-' call_tmp[2179169] 1))
        const-val call_tmp[2248697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2248699 'move' call_tmp[2248697](2248701 'cast' int(64)[13] call_tmp[2248277]))
        (2489456 'move' tmp_x0[2489448] 0)
        (2489461 'move' tmp_x1[2489450] call_tmp[2248697])
      }
      {
        const-val call_tmp[2208609]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2208611 'move' call_tmp[2208609](2208613 '-' coerce_tmp[1943346] 1))
        const-val call_tmp[2189616]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2189618 'move' call_tmp[2189616](2189620 '+' 0 call_tmp[2208609]))
        (2489466 'move' tmp_x0[2489448] 0)
        (2489471 'move' tmp_x1[2489450] call_tmp[2189616])
      }
      (2012161 'noop')
      (2012181 'noop')
      (2012200 'noop')
      const-val _ic__F1_high[2482606]:int(64)[13] "temp"
      (2254041 'move' _ic__F1_high[2482606] tmp_x1[2489450])
      val i[2012229]:int(64)[13] "dead at end of block" "insert auto destroy"
      (2012233 'move' i[2012229] 0)
      (2012285 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2489448] tmp_x1[2489450] 1 tmp_x0[2489448] tmp_x1[2489450] 1)
      const-val this[2012394]:__wide_TaskErrors[2519220] "temp"
      (2012396 'move' this[2012394] _ic__F0_this[2474628])
      val coerce_tmp[2012406]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2560355]:c_ptr(owned Error?)[1235676] "temp"
      (2012408 'move' tmp[2560355](2502649 '.v' this[2012394] errorsArray[168374]))
      (2560358 'move' coerce_tmp[2012406] tmp[2560355])
      CForLoop[2012292] hazard
      {
        ref call_tmp[2255954]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2255956 'move' call_tmp[2255954](2255958 'array_get' coerce_tmp[2012406] i[2012229]))
        val coerce_tmp[2012420]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2012422 'move' coerce_tmp[2012420](2012425 call borrow[1235889] call_tmp[2255954]))
        val coerce_tmp[2012427]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2012429 'move' coerce_tmp[2012427](2012431 'cast' object[22] coerce_tmp[2012420]))
        const-val call_tmp[2175667]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2563626]:__wide_object[2519087] "temp"
        (2563629 'move' tmp[2563626] nil[44])
        (2175669 'move' call_tmp[2175667](2175671 'ptr_neq' coerce_tmp[2012427] tmp[2563626]))
        if call_tmp[2175667]
        {
          const-val this[2012453]:__wide_TaskErrors[2519220] "temp"
          (2012455 'move' this[2012453] _ic__F0_this[2474628])
          val coerce_tmp[2012465]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2560361]:c_ptr(owned Error?)[1235676] "temp"
          (2012467 'move' tmp[2560361](2502655 '.v' this[2012453] errorsArray[168374]))
          (2560364 'move' coerce_tmp[2012465] tmp[2560361])
          ref call_tmp[2255964]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
          (2255966 'move' call_tmp[2255964](2255968 'array_get' coerce_tmp[2012465] i[2012229]))
          val coerce_tmp[2459734]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2459736 'move' coerce_tmp[2459734](2459738 '.v' call_tmp[2255964] chpl_p[966469]))
          val coerce_tmp[2459741]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2459743 'move' coerce_tmp[2459741](2459745 'cast' object[22] coerce_tmp[2459734]))
          const-val call_tmp[2459748]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2582719]:__wide_object[2519087] "temp"
          (2582722 'move' tmp[2582719] nil[44])
          (2459750 'move' call_tmp[2459748](2459752 'ptr_eq' coerce_tmp[2459741] tmp[2582719]))
          if call_tmp[2459748]
          {
            (2459758 call nilCheckHalt[210171] "argument to ! is nil")
          }
          val coerce_tmp[2459761]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2459763 'move' coerce_tmp[2459761](2459765 '.v' call_tmp[2255964] chpl_p[966469]))
          const-val call_tmp[2012503]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          val _virtual_method_tmp_[2012505]:int(32)[95] "temp"
          (2012507 'move' _virtual_method_tmp_[2012505](2012509 'getcid' coerce_tmp[2459761]))
          val ret_tmp[2012511]:string[26] "temp"
          ref tmp[2560367]:string[26] "temp"
          (2560371 'move' tmp[2560367](2560370 'set reference' ret_tmp[2012511]))
          wide-ref tmp[2560374]:string[26] "temp"
          (2560377 'move' tmp[2560374] tmp[2560367])
          (2012513 'virtual method call' message[167975] _virtual_method_tmp_[2012505] coerce_tmp[2459761] tmp[2560374])
          (2012518 'move' call_tmp[2012503] ret_tmp[2012511])
          const-val call_tmp[2012521]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2012523 'move' call_tmp[2012521](2012526 call ==[38823] call_tmp[2012503] maxMsg[169092]))
          if call_tmp[2012521]
          {
            (2349063 '=' last[169106] coerce_tmp[2459761])
          }
          ref i_x[2197555]:string[26] "temp"
          (2197559 'move' i_x[2197555](2197557 'set reference' call_tmp[2012503]))
          wide-ref tmp[2565330]:string[26] "temp"
          (2565333 'move' tmp[2565330] i_x[2197555])
          (2197563 call deinit[30834] tmp[2565330])
        }
        {
          (2012301 '=' i[2012229] tmp_x0[2489448])
        }
        {
          (2012312 '<=' i[2012229] _ic__F1_high[2482606])
        }
        {
          (2012318 '+=' i[2012229] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2012355]
      label _endchpl_direct_counted_range_iter_helper[2012363]
      label _endchpl_direct_counted_range_iter[1943522]
      label _endthese[1943527]
    }
    const-val call_tmp[680116]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866700]:string[26] "temp"
    (169411 call _cast[1063214] n[169081] ret_tmp[1866700])
    (1866703 'move' call_tmp[680116] ret_tmp[1866700])
    const-val call_tmp[680121]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863346]:string[26] "temp"
    wide-ref tmp[2552350]:string[26] "temp"
    (2552354 'move' tmp[2552350](2552352 'set reference' " errors: "))
    (169430 call +[38345] call_tmp[680116] tmp[2552350] ret_tmp[1863346])
    (1863349 'move' call_tmp[680121] ret_tmp[1863346])
    val ret[169432]:string[26] "dead at end of block" "insert auto destroy"
    (544675 'move' ret[169432] call_tmp[680121])
    val coerce_tmp[1800246]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1800252 'move' coerce_tmp[1800246](1800248 'cast' object[22] first[169099]))
    const-val call_tmp[2175127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2563344]:__wide_object[2519087] "temp"
    (2563347 'move' tmp[2563344] nil[44])
    (2175129 'move' call_tmp[2175127](2175131 'ptr_neq' coerce_tmp[1800246] tmp[2563344]))
    val tmp[570535]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2175127]
    {
      val coerce_tmp[1800258]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800264 'move' coerce_tmp[1800258](1800260 'cast' object[22] last[169106]))
      const-val call_tmp[2175137]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2563350]:__wide_object[2519087] "temp"
      (2563353 'move' tmp[2563350] nil[44])
      (2175139 'move' call_tmp[2175137](2175141 'ptr_neq' coerce_tmp[1800258] tmp[2563350]))
      (570550 'move' tmp[570535] call_tmp[2175137])
    }
    {
      (570555 'move' tmp[570535] 0)
    }
    val tmp[570562]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[570535]
    {
      val coerce_tmp[1800270]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800276 'move' coerce_tmp[1800270](1800272 'cast' object[22] first[169099]))
      val coerce_tmp[1800278]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800284 'move' coerce_tmp[1800278](1800280 'cast' object[22] last[169106]))
      const-val call_tmp[2175147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2175149 'move' call_tmp[2175147](2175151 'ptr_neq' coerce_tmp[1800270] coerce_tmp[1800278]))
      (570577 'move' tmp[570562] call_tmp[2175147])
    }
    {
      (570582 'move' tmp[570562] 0)
    }
    if tmp[570562]
    {
      val coerce_tmp[2286699]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2286701 'move' coerce_tmp[2286699](2286703 'cast' object[22] first[169099]))
      const-val call_tmp[2286706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2569819]:__wide_object[2519087] "temp"
      (2569822 'move' tmp[2569819] nil[44])
      (2286708 'move' call_tmp[2286706](2286710 'ptr_eq' coerce_tmp[2286699] tmp[2569819]))
      if call_tmp[2286706]
      {
        (2286716 call nilCheckHalt[210171] "argument to ! is nil")
      }
      const-val call_tmp[680166]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864710]:string[26] "temp"
      (169458 call chpl_describe_error[169835] first[169099] ret_tmp[1864710])
      (1864713 'move' call_tmp[680166] ret_tmp[1864710])
      const-val call_tmp[680171]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863352]:string[26] "temp"
      wide-ref tmp[2552357]:string[26] "temp"
      (2552361 'move' tmp[2552357](2552359 'set reference' " ... "))
      (169476 call +[38345] call_tmp[680166] tmp[2552357] ret_tmp[1863352])
      (1863355 'move' call_tmp[680171] ret_tmp[1863352])
      val coerce_tmp[2286722]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2286724 'move' coerce_tmp[2286722](2286726 'cast' object[22] last[169106]))
      const-val call_tmp[2286729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2569825]:__wide_object[2519087] "temp"
      (2569828 'move' tmp[2569825] nil[44])
      (2286731 'move' call_tmp[2286729](2286733 'ptr_eq' coerce_tmp[2286722] tmp[2569825]))
      if call_tmp[2286729]
      {
        (2286739 call nilCheckHalt[210171] "argument to ! is nil")
      }
      const-val call_tmp[680181]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1864716]:string[26] "temp"
      (169483 call chpl_describe_error[169835] last[169106] ret_tmp[1864716])
      (1864719 'move' call_tmp[680181] ret_tmp[1864716])
      const-val call_tmp[680186]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863358]:string[26] "temp"
      wide-ref tmp[2552364]:string[26] "temp"
      (2552368 'move' tmp[2552364](2552366 'set reference' call_tmp[680181]))
      (169484 call +[38345] call_tmp[680171] tmp[2552364] ret_tmp[1863358])
      (1863361 'move' call_tmp[680186] ret_tmp[1863358])
      (169486 call +=[38800] ret[169432] call_tmp[680186])
      ref i_x[2193055]:string[26] "temp"
      (2193059 'move' i_x[2193055](2193057 'set reference' call_tmp[680186]))
      wide-ref tmp[2563920]:string[26] "temp"
      (2563923 'move' tmp[2563920] i_x[2193055])
      (2193063 call deinit[30834] tmp[2563920])
      ref i_x[2193067]:string[26] "temp"
      (2193071 'move' i_x[2193067](2193069 'set reference' call_tmp[680181]))
      wide-ref tmp[2563926]:string[26] "temp"
      (2563929 'move' tmp[2563926] i_x[2193067])
      (2193075 call deinit[30834] tmp[2563926])
      ref i_x[2193079]:string[26] "temp"
      (2193083 'move' i_x[2193079](2193081 'set reference' call_tmp[680171]))
      wide-ref tmp[2563932]:string[26] "temp"
      (2563935 'move' tmp[2563932] i_x[2193079])
      (2193087 call deinit[30834] tmp[2563932])
      ref i_x[2193091]:string[26] "temp"
      (2193095 'move' i_x[2193091](2193093 'set reference' call_tmp[680166]))
      wide-ref tmp[2563938]:string[26] "temp"
      (2563941 'move' tmp[2563938] i_x[2193091])
      (2193099 call deinit[30834] tmp[2563938])
    }
    {
      val coerce_tmp[1800294]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1800300 'move' coerce_tmp[1800294](1800296 'cast' object[22] first[169099]))
      const-val call_tmp[2175157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2563356]:__wide_object[2519087] "temp"
      (2563359 'move' tmp[2563356] nil[44])
      (2175159 'move' call_tmp[2175157](2175161 'ptr_neq' coerce_tmp[1800294] tmp[2563356]))
      if call_tmp[2175157]
      {
        const-val call_tmp[680206]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1864722]:string[26] "temp"
        (169499 call chpl_describe_error[169835] first[169099] ret_tmp[1864722])
        (1864725 'move' call_tmp[680206] ret_tmp[1864722])
        (169500 call +=[38800] ret[169432] call_tmp[680206])
        ref i_x[2193103]:string[26] "temp"
        (2193107 'move' i_x[2193103](2193105 'set reference' call_tmp[680206]))
        wide-ref tmp[2563944]:string[26] "temp"
        (2563947 'move' tmp[2563944] i_x[2193103])
        (2193111 call deinit[30834] tmp[2563944])
      }
    }
    (1800307 'move' ret[522232] ret[169432])
    ref i_x[2193115]:string[26] "temp"
    (2193119 'move' i_x[2193115](2193117 'set reference' call_tmp[680116]))
    wide-ref tmp[2563950]:string[26] "temp"
    (2563953 'move' tmp[2563950] i_x[2193115])
    (2193123 call deinit[30834] tmp[2563950])
    ref i_x[2193127]:string[26] "temp"
    (2193131 'move' i_x[2193127](2193129 'set reference' maxMsg[169092]))
    wide-ref tmp[2563956]:string[26] "temp"
    (2563959 'move' tmp[2563956] i_x[2193127])
    (2193135 call deinit[30834] tmp[2563956])
    ref i_x[2193139]:string[26] "temp"
    (2193143 'move' i_x[2193139](2193141 'set reference' minMsg[169087]))
    wide-ref tmp[2563962]:string[26] "temp"
    (2563965 'move' tmp[2563962] i_x[2193139])
    (2193147 call deinit[30834] tmp[2563962])
    label _end_message[522230]
    (1876390 '=' _retArg[1876388] ret[522232])
    (1876392 return _void[55])
  }
  function _local__new[2545607](ref arg group[2545609]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "local fn" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4779[2545612]:string[26] "temp"
    (2545614 'move' local__str_literal_4779[2545612] "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2545617]:string[26] "temp"
    (2545619 'move' local__str_literal_978[2545617] "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2545622]:string[26] "temp"
    (2545624 'move' local__str_literal_129[2545622] "argument to ! is nil")
    val initTemp[2545627]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[2545629]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2545631 'move' call_tmp[2545629](2545633 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[2545635]:c_void_ptr[149] "dead after last mention" "temp"
    (2545637 'move' cast_tmp[2545635](2545640 call _local_chpl_here_alloc[2535446] call_tmp[2545629] 41))
    (2545643 'move' initTemp[2545627](2545645 'cast' TaskErrors[169702] cast_tmp[2545635]))
    (2545648 'setcid' initTemp[2545627])
    val super_tmp[2545650]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587808]:Error[167984] "temp"
    (2545652 'move' tmp[2587808](2545654 '.v' initTemp[2545627] super[355751]))
    (2587811 'move' super_tmp[2545650] tmp[2587808])
    val super_tmp[2545657]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2587814]:object[22] "temp"
    (2545659 'move' tmp[2587814](2545661 '.v' super_tmp[2545650] super[355739]))
    (2587817 'move' super_tmp[2545657] tmp[2587814])
    (2545664 'setcid' super_tmp[2545657])
    val call_tmp[2545666]:object[22] "dead at end of block" "maybe param" "temp"
    (2545668 'move' call_tmp[2545666](2545670 'cast' object[22] super_tmp[2545650]))
    (2545673 'setcid' call_tmp[2545666])
    val init_coerce_tmp[2545675]:Error[167984] "dead after last mention" "temp"
    (2545677 'move' init_coerce_tmp[2545675](2545679 'cast' Error[167984] nil[44]))
    val tmp[2587820]:__wide_Error[2519192] "temp"
    (2587823 'move' tmp[2587820] init_coerce_tmp[2545675])
    (2545682 '.=' super_tmp[2545650] _next[167912] tmp[2587820])
    (2545686 '.=' super_tmp[2545650] thrownLine[167917] 0)
    (2545690 '.=' super_tmp[2545650] thrownFileId[167925] 0)
    val tmp[2545694]:string[26] "dead after last mention" "temp"
    (2545697 call _local_init[2528957] tmp[2545694])
    (2545699 '.=' super_tmp[2545650] _msg[167930] tmp[2545694])
    (2545703 '.=' super_tmp[2545650] _hasThrowInfo[167936] 0)
    (2545707 'setcid' super_tmp[2545650])
    val call_tmp[2545709]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2545711 'move' call_tmp[2545709](2545713 'cast' Error[167984] initTemp[2545627]))
    (2545716 'setcid' call_tmp[2545709])
    val head[2545718]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2545720]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2545722 'move' coerce_tmp[2545720](2545724 '.v' group[2545609] _head[168266]))
    (2545727 '=' head[2545718] coerce_tmp[2545720])
    (2545730 'noop')
    val tmp[2545731]:Error[167984] "temp"
    (2545733 'move' tmp[2545731](2545735 'cast' Error[167984] nil[44]))
    val tmp[2587826]:__wide_Error[2519192] "temp"
    (2587829 'move' tmp[2587826] tmp[2545731])
    (2545738 '.=' group[2545609] _head[168266] tmp[2587826])
    (2545742 '.=' initTemp[2545627] nErrors[168363] 0)
    val tmp[2545746]:c_ptr(owned Error?)[1235676] "dead after last mention" "temp"
    (2545748 'move' tmp[2545746](2545750 'cast' c_ptr(owned Error?)[1235676] nil[44]))
    (2545753 '.=' initTemp[2545627] errorsArray[168374] tmp[2545746])
    (2545757 'setcid' initTemp[2545627])
    val cur[2545759]:__wide_Error[2519192] "dead at end of block" "insert auto destroy" "split inited"
    val n[2545761]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2545763 'move' n[2545761] 0)
    (2545766 'move' cur[2545759] coerce_tmp[2545720])
    val tmp[2545769]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2545771]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2545773 'move' coerce_tmp[2545771](2545775 'cast' object[22] coerce_tmp[2545720]))
    const-val call_tmp[2545778]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2587832]:__wide_object[2519087] "temp"
    (2587835 'move' tmp[2587832] nil[44])
    (2545780 'move' call_tmp[2545778](2545782 'ptr_neq' coerce_tmp[2545771] tmp[2587832]))
    (2545785 'move' tmp[2545769] call_tmp[2545778])
    WhileDo[2545788]
    {
      val coerce_tmp[2545790]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2545792 'move' coerce_tmp[2545790](2545794 'cast' object[22] cur[2545759]))
      const-val call_tmp[2545797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587838]:__wide_object[2519087] "temp"
      (2587841 'move' tmp[2587838] nil[44])
      (2545799 'move' call_tmp[2545797](2545801 'ptr_eq' coerce_tmp[2545790] tmp[2587838]))
      if call_tmp[2545797]
      {
        (2545807 call _local_nilCheckHalt[2529976] local__str_literal_129[2545622])
      }
      val coerce_tmp[2545810]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2545812 'move' coerce_tmp[2545810] cur[2545759])
      val curnext[2545815]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2545817]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2549558 'local_check' coerce_tmp[2545810] c"cannot access remote data in local block")
      val local_coerce_tmp[2549555]:Error[167984] "temp"
      (2549561 'move' local_coerce_tmp[2549555] coerce_tmp[2545810])
      (2545819 'move' coerce_tmp[2545817](2545821 '.v' local_coerce_tmp[2549555] _next[167912]))
      (2545824 '=' curnext[2545815] coerce_tmp[2545817])
      (2545827 'noop')
      val _formal_type_tmp_[2545828]:TaskErrors[169702] "temp"
      val ret[2545830]:__wide_TaskErrors[2519220] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2545832]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2545834 'move' coerce_tmp[2545832](2545836 'cast' object[22] cur[2545759]))
      const-val call_tmp[2545839]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587844]:__wide_object[2519087] "temp"
      (2587847 'move' tmp[2587844] nil[44])
      (2545841 'move' call_tmp[2545839](2545843 'ptr_eq' coerce_tmp[2545832] tmp[2587844]))
      if call_tmp[2545839]
      {
        val tmp[2545848]:TaskErrors[169702] "temp"
        (2545850 'move' tmp[2545848](2545852 'cast' TaskErrors[169702] nil[44]))
        (2545855 'move' ret[2545830] tmp[2545848])
        gotoReturn _end__cast[2545871] _end__cast[2545871]
      }
      val call_tmp[2545861]:__wide_TaskErrors[2519220] "dead at end of block" "maybe param" "temp"
      (2549567 'local_check' cur[2545759] c"cannot access remote data in local block")
      val local_cur[2549564]:Error[167984] "temp"
      (2549570 'move' local_cur[2549564] cur[2545759])
      (2545863 'move' call_tmp[2545861](2545865 'dynamic_cast' _formal_type_tmp_[2545828] local_cur[2549564]))
      (2545868 'move' ret[2545830] call_tmp[2545861])
      label _end__cast[2545871]
      val coerce_tmp[2545873]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2545875 'move' coerce_tmp[2545873](2545877 'cast' object[22] ret[2545830]))
      const-val call_tmp[2545880]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587850]:__wide_object[2519087] "temp"
      (2587853 'move' tmp[2587850] nil[44])
      (2545882 'move' call_tmp[2545880](2545884 'ptr_eq' coerce_tmp[2545873] tmp[2587850]))
      if call_tmp[2545880]
      {
        ref i_lhs[2545889]:int(64)[13] "temp"
        (2545891 'move' i_lhs[2545889](2545893 'set reference' n[2545761]))
        (2545895 '+=' i_lhs[2545889] 1)
      }
      {
        const-val _ic__F0_this[2545899]:__wide_TaskErrors[2519220] "temp"
        (2545901 'move' _ic__F0_this[2545899] ret[2545830])
        const-val this[2545904]:__wide_TaskErrors[2519220] "temp"
        (2545906 'move' this[2545904] ret[2545830])
        const-val coerce_tmp[2545909]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2549576 'local_check' this[2545904] c"cannot access remote data in local block")
        const-val local_this[2549573]:TaskErrors[169702] "temp"
        (2549579 'move' local_this[2549573] this[2545904])
        val tmp[2587856]:int(64)[13] "temp"
        (2545911 'move' tmp[2587856](2545913 '.v' local_this[2549573] nErrors[168363]))
        (2587859 'move' coerce_tmp[2545909] tmp[2587856])
        const-val call_tmp[2545916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2545918 'move' call_tmp[2545916](2545920 '<' coerce_tmp[2545909] 0))
        if call_tmp[2545916]
        {
          (2545926 call _local_boundsCheckHalt[2528945] local__str_literal_978[2545617])
        }
        val tmp_x0[2545929]:int(64)[13] "temp"
        val tmp_x1[2545931]:int(64)[13] "temp"
        const-val call_tmp[2545933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2545935 'move' call_tmp[2545933](2545937 '==' coerce_tmp[2545909] 0))
        if call_tmp[2545933]
        {
          const-val call_tmp[2545942]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2545944 'move' call_tmp[2545942](2545946 'cast' uint(64)[115] 0))
          const-val call_tmp[2545949]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2545951 'move' call_tmp[2545949](2545953 '-' call_tmp[2545942] 1))
          const-val call_tmp[2545956]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2545958 'move' call_tmp[2545956](2545960 'cast' int(64)[13] call_tmp[2545949]))
          (2545963 'move' tmp_x0[2545929] 0)
          (2545966 'move' tmp_x1[2545931] call_tmp[2545956])
        }
        {
          const-val call_tmp[2545970]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2545972 'move' call_tmp[2545970](2545974 '-' coerce_tmp[2545909] 1))
          const-val call_tmp[2545977]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2545979 'move' call_tmp[2545977](2545981 '+' 0 call_tmp[2545970]))
          (2545984 'move' tmp_x0[2545929] 0)
          (2545987 'move' tmp_x1[2545931] call_tmp[2545977])
        }
        (2545991 'noop')
        (2545992 'noop')
        (2545993 'noop')
        const-val _ic__F1_high[2545994]:int(64)[13] "temp"
        (2545996 'move' _ic__F1_high[2545994] tmp_x1[2545931])
        val i[2545999]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2546001 'move' i[2545999] 0)
        (2546005 call _local_chpl_checkIfRangeIterWillOverflow[2526598] tmp_x0[2545929] tmp_x1[2545931] 1 tmp_x0[2545929] tmp_x1[2545931] 1)
        const-val this[2546012]:__wide_TaskErrors[2519220] "temp"
        (2546014 'move' this[2546012] _ic__F0_this[2545899])
        val coerce_tmp[2546017]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2549587 'local_check' this[2546012] c"cannot access remote data in local block")
        const-val local_this[2549584]:TaskErrors[169702] "temp"
        (2549590 'move' local_this[2549584] this[2546012])
        val tmp[2587862]:c_ptr(owned Error?)[1235676] "temp"
        (2546019 'move' tmp[2587862](2546021 '.v' local_this[2549584] errorsArray[168374]))
        (2587865 'move' coerce_tmp[2546017] tmp[2587862])
        CForLoop[2546024]
        {
          ref call_tmp[2546037]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
          (2546039 'move' call_tmp[2546037](2546041 'array_get' coerce_tmp[2546017] i[2545999]))
          val coerce_tmp[2546044]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2546046 'move' coerce_tmp[2546044](2546049 call _local_borrow[2549593] call_tmp[2546037]))
          val coerce_tmp[2546051]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2546053 'move' coerce_tmp[2546051](2546055 'cast' object[22] coerce_tmp[2546044]))
          const-val call_tmp[2546058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2587868]:__wide_object[2519087] "temp"
          (2587871 'move' tmp[2587868] nil[44])
          (2546060 'move' call_tmp[2546058](2546062 'ptr_neq' coerce_tmp[2546051] tmp[2587868]))
          if call_tmp[2546058]
          {
            const-val this[2546067]:__wide_TaskErrors[2519220] "temp"
            (2546069 'move' this[2546067] _ic__F0_this[2545899])
            val coerce_tmp[2546072]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2549614 'local_check' this[2546067] c"cannot access remote data in local block")
            const-val local_this[2549611]:TaskErrors[169702] "temp"
            (2549617 'move' local_this[2549611] this[2546067])
            val tmp[2587874]:c_ptr(owned Error?)[1235676] "temp"
            (2546074 'move' tmp[2587874](2546076 '.v' local_this[2549611] errorsArray[168374]))
            (2587877 'move' coerce_tmp[2546072] tmp[2587874])
            ref call_tmp[2546079]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
            (2546081 'move' call_tmp[2546079](2546083 'array_get' coerce_tmp[2546072] i[2545999]))
            val coerce_tmp[2546086]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2546088 'move' coerce_tmp[2546086](2546091 call _local_borrow[2549593] call_tmp[2546079]))
            val coerce_tmp[2546093]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2546095 'move' coerce_tmp[2546093](2546097 'cast' object[22] coerce_tmp[2546086]))
            const-val call_tmp[2546100]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2587880]:__wide_object[2519087] "temp"
            (2587883 'move' tmp[2587880] nil[44])
            (2546102 'move' call_tmp[2546100](2546104 'ptr_neq' coerce_tmp[2546093] tmp[2587880]))
            if call_tmp[2546100]
            {
              ref i_lhs[2546109]:int(64)[13] "temp"
              (2546111 'move' i_lhs[2546109](2546113 'set reference' n[2545761]))
              (2546115 '+=' i_lhs[2546109] 1)
            }
          }
          {
            (2546026 '=' i[2545999] tmp_x0[2545929])
          }
          {
            (2546030 '<=' i[2545999] _ic__F1_high[2545994])
          }
          {
            (2546034 '+=' i[2545999] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2546120]
        label _endchpl_direct_counted_range_iter_helper[2546122]
        label _endchpl_direct_counted_range_iter[2546124]
        label _endthese[2546126]
      }
      (2546129 '=' cur[2545759] curnext[2545815])
      val coerce_tmp[2546132]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546134 'move' coerce_tmp[2546132](2546136 'cast' object[22] curnext[2545815]))
      const-val call_tmp[2546139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587886]:__wide_object[2519087] "temp"
      (2587889 'move' tmp[2587886] nil[44])
      (2546141 'move' call_tmp[2546139](2546143 'ptr_neq' coerce_tmp[2546132] tmp[2587886]))
      (2546146 'move' tmp[2545769] call_tmp[2546139])
      tmp[2545769]
    }
    (2546149 '.=' initTemp[2545627] nErrors[168363] n[2545761])
    const-val call_tmp[2546153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546155 'move' call_tmp[2546153](2546157 '<' n[2545761] 0))
    if call_tmp[2546153]
    {
      (2546163 call _local_safeCastCheckHalt[2538611] local__str_literal_4779[2545612])
    }
    const-val call_tmp[2546166]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546168 'move' call_tmp[2546166](2546170 'cast' uint(64)[115] n[2545761]))
    const-val call_tmp[2546173]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546175 'move' call_tmp[2546173](2546178 call sizeof[1238550] owned Error?[966474]))
    const-val call_tmp[2546180]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546182 'move' call_tmp[2546180](2546184 '*' call_tmp[2546166] call_tmp[2546173]))
    const-val call_tmp[2546187]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546189 'move' call_tmp[2546187](2546192 call _local_offset_ARRAY_ELEMENTS[2549622]))
    const-val call_tmp[2546193]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546195 'move' call_tmp[2546193](2546198 call _local_chpl_here_calloc[2549646] call_tmp[2546180] 1 call_tmp[2546187]))
    val call_tmp[2546202]:c_ptr(owned Error?)[1235676] "dead after last mention" "expr temp" "maybe param" "temp"
    (2546204 'move' call_tmp[2546202](2546206 'cast' c_ptr(owned Error?)[1235676] call_tmp[2546193]))
    (2546209 '.=' initTemp[2545627] errorsArray[168374] call_tmp[2546202])
    val idx[2546213]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2546215 'move' idx[2546213] 0)
    (2546218 '=' cur[2545759] head[2545718])
    val tmp[2546221]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2546223]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2546225 'move' coerce_tmp[2546223](2546227 'cast' object[22] head[2545718]))
    const-val call_tmp[2546230]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2587892]:__wide_object[2519087] "temp"
    (2587895 'move' tmp[2587892] nil[44])
    (2546232 'move' call_tmp[2546230](2546234 'ptr_neq' coerce_tmp[2546223] tmp[2587892]))
    (2546237 'move' tmp[2546221] call_tmp[2546230])
    WhileDo[2546240]
    {
      val coerce_tmp[2546242]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546244 'move' coerce_tmp[2546242](2546246 'cast' object[22] cur[2545759]))
      const-val call_tmp[2546249]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587898]:__wide_object[2519087] "temp"
      (2587901 'move' tmp[2587898] nil[44])
      (2546251 'move' call_tmp[2546249](2546253 'ptr_eq' coerce_tmp[2546242] tmp[2587898]))
      if call_tmp[2546249]
      {
        (2546259 call _local_nilCheckHalt[2529976] local__str_literal_129[2545622])
      }
      val coerce_tmp[2546262]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2546264 'move' coerce_tmp[2546262] cur[2545759])
      val curnext[2546267]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2546269]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2549710 'local_check' coerce_tmp[2546262] c"cannot access remote data in local block")
      val local_coerce_tmp[2549707]:Error[167984] "temp"
      (2549713 'move' local_coerce_tmp[2549707] coerce_tmp[2546262])
      (2546271 'move' coerce_tmp[2546269](2546273 '.v' local_coerce_tmp[2549707] _next[167912]))
      (2546276 '=' curnext[2546267] coerce_tmp[2546269])
      (2546279 'noop')
      val coerce_tmp[2546280]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546282 'move' coerce_tmp[2546280](2546284 'cast' object[22] cur[2545759]))
      const-val call_tmp[2546287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587904]:__wide_object[2519087] "temp"
      (2587907 'move' tmp[2587904] nil[44])
      (2546289 'move' call_tmp[2546287](2546291 'ptr_eq' coerce_tmp[2546280] tmp[2587904]))
      if call_tmp[2546287]
      {
        (2546297 call _local_nilCheckHalt[2529976] local__str_literal_129[2545622])
      }
      val coerce_tmp[2546300]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546302 'move' coerce_tmp[2546300] cur[2545759])
      val tmp[2546305]:Error[167984] "temp"
      (2546307 'move' tmp[2546305](2546309 'cast' Error[167984] nil[44]))
      (2549720 'local_check' coerce_tmp[2546300] c"cannot access remote data in local block")
      val local_coerce_tmp[2549717]:Error[167984] "temp"
      (2549723 'move' local_coerce_tmp[2549717] coerce_tmp[2546300])
      val tmp[2587910]:__wide_Error[2519192] "temp"
      (2587913 'move' tmp[2587910] tmp[2546305])
      (2546312 '.=' local_coerce_tmp[2549717] _next[167912] tmp[2587910])
      val _formal_type_tmp_[2546316]:TaskErrors[169702] "temp"
      val ret[2546318]:__wide_TaskErrors[2519220] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2546320]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546322 'move' coerce_tmp[2546320](2546324 'cast' object[22] cur[2545759]))
      const-val call_tmp[2546327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587916]:__wide_object[2519087] "temp"
      (2587919 'move' tmp[2587916] nil[44])
      (2546329 'move' call_tmp[2546327](2546331 'ptr_eq' coerce_tmp[2546320] tmp[2587916]))
      if call_tmp[2546327]
      {
        val tmp[2546336]:TaskErrors[169702] "temp"
        (2546338 'move' tmp[2546336](2546340 'cast' TaskErrors[169702] nil[44]))
        (2546343 'move' ret[2546318] tmp[2546336])
        gotoReturn _end__cast[2546359] _end__cast[2546359]
      }
      val call_tmp[2546349]:__wide_TaskErrors[2519220] "dead at end of block" "maybe param" "temp"
      (2549729 'local_check' cur[2545759] c"cannot access remote data in local block")
      val local_cur[2549726]:Error[167984] "temp"
      (2549732 'move' local_cur[2549726] cur[2545759])
      (2546351 'move' call_tmp[2546349](2546353 'dynamic_cast' _formal_type_tmp_[2546316] local_cur[2549726]))
      (2546356 'move' ret[2546318] call_tmp[2546349])
      label _end__cast[2546359]
      val asTaskErr[2546361]:__wide_TaskErrors[2519220] "dead at end of block" "insert auto destroy"
      (2546363 'move' asTaskErr[2546361] ret[2546318])
      val coerce_tmp[2546366]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546368 'move' coerce_tmp[2546366](2546370 'cast' object[22] ret[2546318]))
      const-val call_tmp[2546373]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587922]:__wide_object[2519087] "temp"
      (2587925 'move' tmp[2587922] nil[44])
      (2546375 'move' call_tmp[2546373](2546377 'ptr_eq' coerce_tmp[2546366] tmp[2587922]))
      if call_tmp[2546373]
      {
        val coerce_tmp[2546382]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2587928]:c_ptr(owned Error?)[1235676] "temp"
        (2546384 'move' tmp[2587928](2546386 '.v' initTemp[2545627] errorsArray[168374]))
        (2587931 'move' coerce_tmp[2546382] tmp[2587928])
        ref call_tmp[2546389]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2546391 'move' call_tmp[2546389](2546393 'array_get' coerce_tmp[2546382] idx[2546213]))
        val coerce_tmp[2546396]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2546398 'move' coerce_tmp[2546396](2546400 'cast' object[22] cur[2545759]))
        const-val call_tmp[2546403]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2587934]:__wide_object[2519087] "temp"
        (2587937 'move' tmp[2587934] nil[44])
        (2546405 'move' call_tmp[2546403](2546407 'ptr_eq' coerce_tmp[2546396] tmp[2587934]))
        if call_tmp[2546403]
        {
          (2546413 call _local_nilCheckHalt[2529976] local__str_literal_129[2545622])
        }
        (2546417 call _local_retain[2549736] call_tmp[2546389] cur[2545759])
        ref i_lhs[2546420]:int(64)[13] "temp"
        (2546422 'move' i_lhs[2546420](2546424 'set reference' idx[2546213]))
        (2546426 '+=' i_lhs[2546420] 1)
      }
      {
        const-val _ic__F0_this[2546430]:__wide_TaskErrors[2519220] "temp"
        (2546432 'move' _ic__F0_this[2546430] ret[2546318])
        const-val this[2546435]:__wide_TaskErrors[2519220] "temp"
        (2546437 'move' this[2546435] ret[2546318])
        const-val coerce_tmp[2546440]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2549858 'local_check' this[2546435] c"cannot access remote data in local block")
        const-val local_this[2549855]:TaskErrors[169702] "temp"
        (2549861 'move' local_this[2549855] this[2546435])
        val tmp[2587940]:int(64)[13] "temp"
        (2546442 'move' tmp[2587940](2546444 '.v' local_this[2549855] nErrors[168363]))
        (2587943 'move' coerce_tmp[2546440] tmp[2587940])
        const-val call_tmp[2546447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2546449 'move' call_tmp[2546447](2546451 '<' coerce_tmp[2546440] 0))
        if call_tmp[2546447]
        {
          (2546457 call _local_boundsCheckHalt[2528945] local__str_literal_978[2545617])
        }
        val tmp_x0[2546460]:int(64)[13] "temp"
        val tmp_x1[2546462]:int(64)[13] "temp"
        const-val call_tmp[2546464]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2546466 'move' call_tmp[2546464](2546468 '==' coerce_tmp[2546440] 0))
        if call_tmp[2546464]
        {
          const-val call_tmp[2546473]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546475 'move' call_tmp[2546473](2546477 'cast' uint(64)[115] 0))
          const-val call_tmp[2546480]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546482 'move' call_tmp[2546480](2546484 '-' call_tmp[2546473] 1))
          const-val call_tmp[2546487]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546489 'move' call_tmp[2546487](2546491 'cast' int(64)[13] call_tmp[2546480]))
          (2546494 'move' tmp_x0[2546460] 0)
          (2546497 'move' tmp_x1[2546462] call_tmp[2546487])
        }
        {
          const-val call_tmp[2546501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546503 'move' call_tmp[2546501](2546505 '-' coerce_tmp[2546440] 1))
          const-val call_tmp[2546508]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546510 'move' call_tmp[2546508](2546512 '+' 0 call_tmp[2546501]))
          (2546515 'move' tmp_x0[2546460] 0)
          (2546518 'move' tmp_x1[2546462] call_tmp[2546508])
        }
        (2546522 'noop')
        (2546523 'noop')
        (2546524 'noop')
        const-val _ic__F1_high[2546525]:int(64)[13] "temp"
        (2546527 'move' _ic__F1_high[2546525] tmp_x1[2546462])
        val i[2546530]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2546532 'move' i[2546530] 0)
        (2546536 call _local_chpl_checkIfRangeIterWillOverflow[2526598] tmp_x0[2546460] tmp_x1[2546462] 1 tmp_x0[2546460] tmp_x1[2546462] 1)
        const-val this[2546543]:__wide_TaskErrors[2519220] "temp"
        (2546545 'move' this[2546543] _ic__F0_this[2546430])
        val coerce_tmp[2546548]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2549869 'local_check' this[2546543] c"cannot access remote data in local block")
        const-val local_this[2549866]:TaskErrors[169702] "temp"
        (2549872 'move' local_this[2549866] this[2546543])
        val tmp[2587946]:c_ptr(owned Error?)[1235676] "temp"
        (2546550 'move' tmp[2587946](2546552 '.v' local_this[2549866] errorsArray[168374]))
        (2587949 'move' coerce_tmp[2546548] tmp[2587946])
        CForLoop[2546555]
        {
          ref call_tmp[2546568]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
          (2546570 'move' call_tmp[2546568](2546572 'array_get' coerce_tmp[2546548] i[2546530]))
          val coerce_tmp[2546575]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2546577 'move' coerce_tmp[2546575](2546580 call _local_borrow[2549593] call_tmp[2546568]))
          val coerce_tmp[2546582]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2546584 'move' coerce_tmp[2546582](2546586 'cast' object[22] coerce_tmp[2546575]))
          const-val call_tmp[2546589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2587952]:__wide_object[2519087] "temp"
          (2587955 'move' tmp[2587952] nil[44])
          (2546591 'move' call_tmp[2546589](2546593 'ptr_neq' coerce_tmp[2546582] tmp[2587952]))
          if call_tmp[2546589]
          {
            const-val this[2546598]:__wide_TaskErrors[2519220] "temp"
            (2546600 'move' this[2546598] _ic__F0_this[2546430])
            val coerce_tmp[2546603]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2549879 'local_check' this[2546598] c"cannot access remote data in local block")
            const-val local_this[2549876]:TaskErrors[169702] "temp"
            (2549882 'move' local_this[2549876] this[2546598])
            val tmp[2587958]:c_ptr(owned Error?)[1235676] "temp"
            (2546605 'move' tmp[2587958](2546607 '.v' local_this[2549876] errorsArray[168374]))
            (2587961 'move' coerce_tmp[2546603] tmp[2587958])
            ref call_tmp[2546610]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
            (2546612 'move' call_tmp[2546610](2546614 'array_get' coerce_tmp[2546603] i[2546530]))
            val coerce_tmp[2546617]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2546619 'move' coerce_tmp[2546617](2546622 call _local_borrow[2549593] call_tmp[2546610]))
            val coerce_tmp[2546624]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2546626 'move' coerce_tmp[2546624](2546628 'cast' object[22] coerce_tmp[2546617]))
            const-val call_tmp[2546631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2587964]:__wide_object[2519087] "temp"
            (2587967 'move' tmp[2587964] nil[44])
            (2546633 'move' call_tmp[2546631](2546635 'ptr_neq' coerce_tmp[2546624] tmp[2587964]))
            if call_tmp[2546631]
            {
              val coerce_tmp[2546640]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2587970]:c_ptr(owned Error?)[1235676] "temp"
              (2546642 'move' tmp[2587970](2546644 '.v' initTemp[2545627] errorsArray[168374]))
              (2587973 'move' coerce_tmp[2546640] tmp[2587970])
              ref call_tmp[2546647]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
              (2546649 'move' call_tmp[2546647](2546651 'array_get' coerce_tmp[2546640] idx[2546213]))
              (2546655 call _local_=[2549886] call_tmp[2546647] call_tmp[2546610])
              ref i_lhs[2546658]:int(64)[13] "temp"
              (2546660 'move' i_lhs[2546658](2546662 'set reference' idx[2546213]))
              (2546664 '+=' i_lhs[2546658] 1)
            }
          }
          {
            (2546557 '=' i[2546530] tmp_x0[2546460])
          }
          {
            (2546561 '<=' i[2546530] _ic__F1_high[2546525])
          }
          {
            (2546565 '+=' i[2546530] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2546669]
        label _endchpl_direct_counted_range_iter_helper[2546671]
        label _endchpl_direct_counted_range_iter[2546673]
        label _endthese[2546675]
        val coerce_tmp[2546677]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2546679 'move' coerce_tmp[2546677](2546681 'cast' object[22] asTaskErr[2546361]))
        const-val call_tmp[2546684]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2587976]:__wide_object[2519087] "temp"
        (2587979 'move' tmp[2587976] nil[44])
        (2546686 'move' call_tmp[2546684](2546688 'ptr_neq' coerce_tmp[2546677] tmp[2587976]))
        if call_tmp[2546684]
        {
          (2546694 call _local_deinit[2549969] asTaskErr[2546361])
          const-val call_tmp[2546696]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2546698 'move' call_tmp[2546696](2546700 '_wide_get_locale' asTaskErr[2546361]))
          val isdirect[2546702]:bool[10] "temp"
          (2546704 'move' isdirect[2546702](2546707 call _local_chpl_doDirectExecuteOn[2522776] call_tmp[2546696]))
          if isdirect[2546702]
          {
            (2546712 call _local_on_fn[2550183] asTaskErr[2546361])
          }
          {
            val _args_foron_fn[2546715]:_class_localson_fn[2154662] "temp"
            (2546717 'move' _args_foron_fn[2546715](2546719 'stack allocate class' _class_localson_fn[2154662]))
            (2546721 '.=' _args_foron_fn[2546715] _0_tmp[2154665] call_tmp[2546696])
            (2546725 '.=' _args_foron_fn[2546715] _1_arg[2154667] asTaskErr[2546361])
            val _args_vforon_fn[2546729]:c_void_ptr[149] "temp"
            (2546731 'move' _args_vforon_fn[2546729](2546733 'cast_to_void_star' _args_foron_fn[2546715]))
            val _args_sizeon_fn[2546735]:int(64)[13] "temp"
            (2546737 'move' _args_sizeon_fn[2546735](2546739 'sizeof_bundle' _class_localson_fn[2154662]))
            (2589756 call chpl_taskRunningCntDec[93219])
            on(2546742 call _local_wrapon_fn[2550201] call_tmp[2546696] _args_vforon_fn[2546729] _args_sizeon_fn[2546735] _args_foron_fn[2546715])
            (2589758 call chpl_taskRunningCntInc[93198])
          }
        }
      }
      (2546750 '=' cur[2545759] curnext[2546267])
      val coerce_tmp[2546753]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2546755 'move' coerce_tmp[2546753](2546757 'cast' object[22] curnext[2546267]))
      const-val call_tmp[2546760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2587982]:__wide_object[2519087] "temp"
      (2587985 'move' tmp[2587982] nil[44])
      (2546762 'move' call_tmp[2546760](2546764 'ptr_neq' coerce_tmp[2546753] tmp[2587982]))
      (2546767 'move' tmp[2546221] call_tmp[2546760])
      tmp[2546221]
    }
    (2546770 return initTemp[2545627])
  }
  function _new[1241041](ref arg group[1241050]:chpl_TaskErrors[168348]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4779[2516717]:string[26] "temp"
    (2516718 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_978[2516711]:string[26] "temp"
    (2516712 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    const-val local__str_literal_129[2516705]:string[26] "temp"
    (2516706 'move' "argument to ! is nil" "argument to ! is nil")
    val initTemp[1241043]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1241087]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1241090 'move' call_tmp[1241087](1241101 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1241104]:c_void_ptr[149] "dead after last mention" "temp"
    (1241106 'move' cast_tmp[1241104](1241058 call chpl_here_alloc[187788] call_tmp[1241087] 41))
    (1241061 'move' initTemp[1241043](1241108 'cast' TaskErrors[169702] cast_tmp[1241104]))
    (1241063 'setcid' initTemp[1241043])
    val super_tmp[2259122]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568592]:Error[167984] "temp"
    (2259124 'move' tmp[2568592](2259126 '.v' initTemp[1241043] super[355751]))
    (2568595 'move' super_tmp[2259122] tmp[2568592])
    val super_tmp[2259129]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568598]:object[22] "temp"
    (2259131 'move' tmp[2568598](2259133 '.v' super_tmp[2259122] super[355739]))
    (2568601 'move' super_tmp[2259129] tmp[2568598])
    (2259136 'setcid' super_tmp[2259129])
    val call_tmp[2259138]:object[22] "dead at end of block" "maybe param" "temp"
    (2259140 'move' call_tmp[2259138](2259142 'cast' object[22] super_tmp[2259122]))
    (2259145 'setcid' call_tmp[2259138])
    val init_coerce_tmp[2259147]:Error[167984] "dead after last mention" "temp"
    (2259149 'move' init_coerce_tmp[2259147](2259151 'cast' Error[167984] nil[44]))
    val tmp[2568604]:__wide_Error[2519192] "temp"
    (2568607 'move' tmp[2568604] init_coerce_tmp[2259147])
    (2259154 '.=' super_tmp[2259122] _next[167912] tmp[2568604])
    (2259158 '.=' super_tmp[2259122] thrownLine[167917] 0)
    (2259162 '.=' super_tmp[2259122] thrownFileId[167925] 0)
    val tmp[2259166]:string[26] "dead after last mention" "temp"
    (2259169 call init[30763] tmp[2259166])
    (2259171 '.=' super_tmp[2259122] _msg[167930] tmp[2259166])
    (2259175 '.=' super_tmp[2259122] _hasThrowInfo[167936] 0)
    (2259179 'setcid' super_tmp[2259122])
    val call_tmp[2259181]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2259183 'move' call_tmp[2259181](2259185 'cast' Error[167984] initTemp[1241043]))
    (2259188 'setcid' call_tmp[2259181])
    val head[2259190]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    val coerce_tmp[2259192]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2259194 'move' coerce_tmp[2259192](2259196 '.v' group[1241050] _head[168266]))
    (2259199 '=' head[2259190] coerce_tmp[2259192])
    (2259202 'noop')
    val tmp[2259203]:Error[167984] "temp"
    (2259205 'move' tmp[2259203](2259207 'cast' Error[167984] nil[44]))
    val tmp[2568610]:__wide_Error[2519192] "temp"
    (2568613 'move' tmp[2568610] tmp[2259203])
    (2259210 '.=' group[1241050] _head[168266] tmp[2568610])
    (2259214 '.=' initTemp[1241043] nErrors[168363] 0)
    val tmp[2259218]:c_ptr(owned Error?)[1235676] "dead after last mention" "temp"
    (2259220 'move' tmp[2259218](2259222 'cast' c_ptr(owned Error?)[1235676] nil[44]))
    (2259225 '.=' initTemp[1241043] errorsArray[168374] tmp[2259218])
    (2259229 'setcid' initTemp[1241043])
    val cur[2259231]:__wide_Error[2519192] "dead at end of block" "insert auto destroy" "split inited"
    val n[2259233]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2259235 'move' n[2259233] 0)
    (2259238 'move' cur[2259231] coerce_tmp[2259192])
    val tmp[2259241]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2259243]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2259245 'move' coerce_tmp[2259243](2259247 'cast' object[22] coerce_tmp[2259192]))
    const-val call_tmp[2259250]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2568616]:__wide_object[2519087] "temp"
    (2568619 'move' tmp[2568616] nil[44])
    (2259252 'move' call_tmp[2259250](2259254 'ptr_neq' coerce_tmp[2259243] tmp[2568616]))
    (2259257 'move' tmp[2259241] call_tmp[2259250])
    WhileDo[2259260]
    {
      val coerce_tmp[2259262]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2259264 'move' coerce_tmp[2259262](2259266 'cast' object[22] cur[2259231]))
      const-val call_tmp[2259269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568622]:__wide_object[2519087] "temp"
      (2568625 'move' tmp[2568622] nil[44])
      (2259271 'move' call_tmp[2259269](2259273 'ptr_eq' coerce_tmp[2259262] tmp[2568622]))
      if call_tmp[2259269]
      {
        (2259279 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[2259282]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2259284 'move' coerce_tmp[2259282] cur[2259231])
      val curnext[2259287]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2259289]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2259291 'move' coerce_tmp[2259289](2259293 '.v' coerce_tmp[2259282] _next[167912]))
      (2259296 '=' curnext[2259287] coerce_tmp[2259289])
      (2259299 'noop')
      val _formal_type_tmp_[2259305]:TaskErrors[169702] "temp"
      val ret[2259307]:__wide_TaskErrors[2519220] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2259309]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2259311 'move' coerce_tmp[2259309](2259313 'cast' object[22] cur[2259231]))
      const-val call_tmp[2259316]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568628]:__wide_object[2519087] "temp"
      (2568631 'move' tmp[2568628] nil[44])
      (2259318 'move' call_tmp[2259316](2259320 'ptr_eq' coerce_tmp[2259309] tmp[2568628]))
      if call_tmp[2259316]
      {
        val tmp[2522676]:TaskErrors[169702] "temp"
        (2522679 'move' tmp[2522676](2259327 'cast' TaskErrors[169702] nil[44]))
        (2259325 'move' ret[2259307] tmp[2522676])
        gotoReturn _end__cast[2259343] _end__cast[2259343]
      }
      val call_tmp[2259333]:__wide_TaskErrors[2519220] "dead at end of block" "maybe param" "temp"
      (2259335 'move' call_tmp[2259333](2259337 'dynamic_cast' _formal_type_tmp_[2259305] cur[2259231]))
      (2259340 'move' ret[2259307] call_tmp[2259333])
      label _end__cast[2259343]
      val coerce_tmp[2259350]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2259352 'move' coerce_tmp[2259350](2259354 'cast' object[22] ret[2259307]))
      const-val call_tmp[2259357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568634]:__wide_object[2519087] "temp"
      (2568637 'move' tmp[2568634] nil[44])
      (2259359 'move' call_tmp[2259357](2259361 'ptr_eq' coerce_tmp[2259350] tmp[2568634]))
      if call_tmp[2259357]
      {
        ref i_lhs[2259366]:int(64)[13] "temp"
        (2259368 'move' i_lhs[2259366](2259370 'set reference' n[2259233]))
        (2259372 '+=' i_lhs[2259366] 1)
      }
      {
        const-val _ic__F0_this[2474651]:__wide_TaskErrors[2519220] "temp"
        (2259428 'move' _ic__F0_this[2474651] ret[2259307])
        const-val this[2259437]:__wide_TaskErrors[2519220] "temp"
        (2259439 'move' this[2259437] ret[2259307])
        const-val coerce_tmp[2259446]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2568640]:int(64)[13] "temp"
        (2259448 'move' tmp[2568640](2259450 '.v' this[2259437] nErrors[168363]))
        (2568643 'move' coerce_tmp[2259446] tmp[2568640])
        const-val call_tmp[2259618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2259620 'move' call_tmp[2259618](2259622 '<' coerce_tmp[2259446] 0))
        if call_tmp[2259618]
        {
          (2259628 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2491736]:int(64)[13] "temp"
        val tmp_x1[2491738]:int(64)[13] "temp"
        const-val call_tmp[2259642]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2259644 'move' call_tmp[2259642](2259646 '==' coerce_tmp[2259446] 0))
        if call_tmp[2259642]
        {
          const-val call_tmp[2259658]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2259660 'move' call_tmp[2259658](2259662 'cast' uint(64)[115] 0))
          const-val call_tmp[2259665]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2259667 'move' call_tmp[2259665](2259669 '-' call_tmp[2259658] 1))
          const-val call_tmp[2259672]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2259674 'move' call_tmp[2259672](2259676 'cast' int(64)[13] call_tmp[2259665]))
          (2491744 'move' tmp_x0[2491736] 0)
          (2491749 'move' tmp_x1[2491738] call_tmp[2259672])
        }
        {
          const-val call_tmp[2259707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2259709 'move' call_tmp[2259707](2259711 '-' coerce_tmp[2259446] 1))
          const-val call_tmp[2259721]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2259723 'move' call_tmp[2259721](2259725 '+' 0 call_tmp[2259707]))
          (2491754 'move' tmp_x0[2491736] 0)
          (2491759 'move' tmp_x1[2491738] call_tmp[2259721])
        }
        (2259752 'noop')
        (2259760 'noop')
        (2259768 'noop')
        const-val _ic__F1_high[2482929]:int(64)[13] "temp"
        (2259836 'move' _ic__F1_high[2482929] tmp_x1[2491738])
        val i[2259843]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2259845 'move' i[2259843] 0)
        (2259877 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2491736] tmp_x1[2491738] 1 tmp_x0[2491736] tmp_x1[2491738] 1)
        const-val this[2259916]:__wide_TaskErrors[2519220] "temp"
        (2259918 'move' this[2259916] _ic__F0_this[2474651])
        val coerce_tmp[2259923]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2568646]:c_ptr(owned Error?)[1235676] "temp"
        (2259925 'move' tmp[2568646](2259927 '.v' this[2259916] errorsArray[168374]))
        (2568649 'move' coerce_tmp[2259923] tmp[2568646])
        CForLoop[2259884]
        {
          ref call_tmp[2259930]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
          (2259932 'move' call_tmp[2259930](2259934 'array_get' coerce_tmp[2259923] i[2259843]))
          val coerce_tmp[2259937]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2259939 'move' coerce_tmp[2259937](2259942 call borrow[1235889] call_tmp[2259930]))
          val coerce_tmp[2259944]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2259946 'move' coerce_tmp[2259944](2259948 'cast' object[22] coerce_tmp[2259937]))
          const-val call_tmp[2259951]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2568652]:__wide_object[2519087] "temp"
          (2568655 'move' tmp[2568652] nil[44])
          (2259953 'move' call_tmp[2259951](2259955 'ptr_neq' coerce_tmp[2259944] tmp[2568652]))
          if call_tmp[2259951]
          {
            const-val this[2259960]:__wide_TaskErrors[2519220] "temp"
            (2259962 'move' this[2259960] _ic__F0_this[2474651])
            val coerce_tmp[2259967]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2568658]:c_ptr(owned Error?)[1235676] "temp"
            (2259969 'move' tmp[2568658](2259971 '.v' this[2259960] errorsArray[168374]))
            (2568661 'move' coerce_tmp[2259967] tmp[2568658])
            ref call_tmp[2259974]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
            (2259976 'move' call_tmp[2259974](2259978 'array_get' coerce_tmp[2259967] i[2259843]))
            val coerce_tmp[2259981]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2259983 'move' coerce_tmp[2259981](2259986 call borrow[1235889] call_tmp[2259974]))
            val coerce_tmp[2259988]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2259990 'move' coerce_tmp[2259988](2259992 'cast' object[22] coerce_tmp[2259981]))
            const-val call_tmp[2259995]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2568664]:__wide_object[2519087] "temp"
            (2568667 'move' tmp[2568664] nil[44])
            (2259997 'move' call_tmp[2259995](2259999 'ptr_neq' coerce_tmp[2259988] tmp[2568664]))
            if call_tmp[2259995]
            {
              ref i_lhs[2260004]:int(64)[13] "temp"
              (2260006 'move' i_lhs[2260004](2260008 'set reference' n[2259233]))
              (2260010 '+=' i_lhs[2260004] 1)
            }
          }
          {
            (2259893 '=' i[2259843] tmp_x0[2491736])
          }
          {
            (2259904 '<=' i[2259843] _ic__F1_high[2482929])
          }
          {
            (2259908 '+=' i[2259843] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2260015]
        label _endchpl_direct_counted_range_iter_helper[2260026]
        label _endchpl_direct_counted_range_iter[2260037]
        label _endthese[2260048]
      }
      (2260060 '=' cur[2259231] curnext[2259287])
      val coerce_tmp[2260063]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260065 'move' coerce_tmp[2260063](2260067 'cast' object[22] curnext[2259287]))
      const-val call_tmp[2260070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568670]:__wide_object[2519087] "temp"
      (2568673 'move' tmp[2568670] nil[44])
      (2260072 'move' call_tmp[2260070](2260074 'ptr_neq' coerce_tmp[2260063] tmp[2568670]))
      (2260077 'move' tmp[2259241] call_tmp[2260070])
      tmp[2259241]
    }
    (2260080 '.=' initTemp[1241043] nErrors[168363] n[2259233])
    const-val call_tmp[2260084]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260086 'move' call_tmp[2260084](2260088 '<' n[2259233] 0))
    if call_tmp[2260084]
    {
      (2260094 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2260097]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260099 'move' call_tmp[2260097](2260101 'cast' uint(64)[115] n[2259233]))
    const-val call_tmp[2260104]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260106 'move' call_tmp[2260104](2260109 call sizeof[1238550] owned Error?[966474]))
    const-val call_tmp[2260111]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260113 'move' call_tmp[2260111](2260115 '*' call_tmp[2260097] call_tmp[2260104]))
    const-val call_tmp[2260118]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260120 'move' call_tmp[2260118](2260123 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2260124]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260126 'move' call_tmp[2260124](2260129 call chpl_here_calloc[1238580] call_tmp[2260111] 1 call_tmp[2260118]))
    val call_tmp[2260133]:c_ptr(owned Error?)[1235676] "dead after last mention" "expr temp" "maybe param" "temp"
    (2260135 'move' call_tmp[2260133](2260137 'cast' c_ptr(owned Error?)[1235676] call_tmp[2260124]))
    (2260140 '.=' initTemp[1241043] errorsArray[168374] call_tmp[2260133])
    val idx[2260144]:int(64)[13] "dead at end of block" "insert auto destroy"
    (2260146 'move' idx[2260144] 0)
    (2260149 '=' cur[2259231] head[2259190])
    val tmp[2260152]:bool[10] "dead after last mention" "temp"
    val coerce_tmp[2260154]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2260156 'move' coerce_tmp[2260154](2260158 'cast' object[22] head[2259190]))
    const-val call_tmp[2260161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2568676]:__wide_object[2519087] "temp"
    (2568679 'move' tmp[2568676] nil[44])
    (2260163 'move' call_tmp[2260161](2260165 'ptr_neq' coerce_tmp[2260154] tmp[2568676]))
    (2260168 'move' tmp[2260152] call_tmp[2260161])
    WhileDo[2260171]
    {
      val coerce_tmp[2260173]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260175 'move' coerce_tmp[2260173](2260177 'cast' object[22] cur[2259231]))
      const-val call_tmp[2260180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568682]:__wide_object[2519087] "temp"
      (2568685 'move' tmp[2568682] nil[44])
      (2260182 'move' call_tmp[2260180](2260184 'ptr_eq' coerce_tmp[2260173] tmp[2568682]))
      if call_tmp[2260180]
      {
        (2260190 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[2260193]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2260195 'move' coerce_tmp[2260193] cur[2259231])
      val curnext[2260198]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
      val coerce_tmp[2260200]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2260202 'move' coerce_tmp[2260200](2260204 '.v' coerce_tmp[2260193] _next[167912]))
      (2260207 '=' curnext[2260198] coerce_tmp[2260200])
      (2260210 'noop')
      val coerce_tmp[2260211]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260213 'move' coerce_tmp[2260211](2260215 'cast' object[22] cur[2259231]))
      const-val call_tmp[2260218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568688]:__wide_object[2519087] "temp"
      (2568691 'move' tmp[2568688] nil[44])
      (2260220 'move' call_tmp[2260218](2260222 'ptr_eq' coerce_tmp[2260211] tmp[2568688]))
      if call_tmp[2260218]
      {
        (2260228 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[2260231]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260233 'move' coerce_tmp[2260231] cur[2259231])
      val tmp[2260236]:Error[167984] "temp"
      (2260238 'move' tmp[2260236](2260240 'cast' Error[167984] nil[44]))
      val tmp[2568694]:__wide_Error[2519192] "temp"
      (2568697 'move' tmp[2568694] tmp[2260236])
      (2260243 '.=' coerce_tmp[2260231] _next[167912] tmp[2568694])
      val _formal_type_tmp_[2260252]:TaskErrors[169702] "temp"
      val ret[2260254]:__wide_TaskErrors[2519220] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2260256]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260258 'move' coerce_tmp[2260256](2260260 'cast' object[22] cur[2259231]))
      const-val call_tmp[2260263]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568700]:__wide_object[2519087] "temp"
      (2568703 'move' tmp[2568700] nil[44])
      (2260265 'move' call_tmp[2260263](2260267 'ptr_eq' coerce_tmp[2260256] tmp[2568700]))
      if call_tmp[2260263]
      {
        val tmp[2522681]:TaskErrors[169702] "temp"
        (2522684 'move' tmp[2522681](2260274 'cast' TaskErrors[169702] nil[44]))
        (2260272 'move' ret[2260254] tmp[2522681])
        gotoReturn _end__cast[2260290] _end__cast[2260290]
      }
      val call_tmp[2260280]:__wide_TaskErrors[2519220] "dead at end of block" "maybe param" "temp"
      (2260282 'move' call_tmp[2260280](2260284 'dynamic_cast' _formal_type_tmp_[2260252] cur[2259231]))
      (2260287 'move' ret[2260254] call_tmp[2260280])
      label _end__cast[2260290]
      val asTaskErr[2260292]:__wide_TaskErrors[2519220] "dead at end of block" "insert auto destroy"
      (2260294 'move' asTaskErr[2260292] ret[2260254])
      val coerce_tmp[2260297]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2260299 'move' coerce_tmp[2260297](2260301 'cast' object[22] ret[2260254]))
      const-val call_tmp[2260304]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568706]:__wide_object[2519087] "temp"
      (2568709 'move' tmp[2568706] nil[44])
      (2260306 'move' call_tmp[2260304](2260308 'ptr_eq' coerce_tmp[2260297] tmp[2568706]))
      if call_tmp[2260304]
      {
        val coerce_tmp[2260313]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2568712]:c_ptr(owned Error?)[1235676] "temp"
        (2260315 'move' tmp[2568712](2260317 '.v' initTemp[1241043] errorsArray[168374]))
        (2568715 'move' coerce_tmp[2260313] tmp[2568712])
        ref call_tmp[2260320]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
        (2260322 'move' call_tmp[2260320](2260324 'array_get' coerce_tmp[2260313] idx[2260144]))
        val coerce_tmp[2260327]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2260329 'move' coerce_tmp[2260327](2260331 'cast' object[22] cur[2259231]))
        const-val call_tmp[2260334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2568718]:__wide_object[2519087] "temp"
        (2568721 'move' tmp[2568718] nil[44])
        (2260336 'move' call_tmp[2260334](2260338 'ptr_eq' coerce_tmp[2260327] tmp[2568718]))
        if call_tmp[2260334]
        {
          (2260344 call nilCheckHalt[210171] "argument to ! is nil")
        }
        (2260348 call retain[1238836] call_tmp[2260320] cur[2259231])
        ref i_lhs[2260351]:int(64)[13] "temp"
        (2260353 'move' i_lhs[2260351](2260355 'set reference' idx[2260144]))
        (2260357 '+=' i_lhs[2260351] 1)
      }
      {
        const-val _ic__F0_this[2474674]:__wide_TaskErrors[2519220] "temp"
        (2260413 'move' _ic__F0_this[2474674] ret[2260254])
        const-val this[2260422]:__wide_TaskErrors[2519220] "temp"
        (2260424 'move' this[2260422] ret[2260254])
        const-val coerce_tmp[2260431]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        val tmp[2568724]:int(64)[13] "temp"
        (2260433 'move' tmp[2568724](2260435 '.v' this[2260422] nErrors[168363]))
        (2568727 'move' coerce_tmp[2260431] tmp[2568724])
        const-val call_tmp[2260603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2260605 'move' call_tmp[2260603](2260607 '<' coerce_tmp[2260431] 0))
        if call_tmp[2260603]
        {
          (2260613 call boundsCheckHalt[210187] "With a negative count, the range must have a last index.")
        }
        val tmp_x0[2491794]:int(64)[13] "temp"
        val tmp_x1[2491796]:int(64)[13] "temp"
        const-val call_tmp[2260627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2260629 'move' call_tmp[2260627](2260631 '==' coerce_tmp[2260431] 0))
        if call_tmp[2260627]
        {
          const-val call_tmp[2260643]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2260645 'move' call_tmp[2260643](2260647 'cast' uint(64)[115] 0))
          const-val call_tmp[2260650]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2260652 'move' call_tmp[2260650](2260654 '-' call_tmp[2260643] 1))
          const-val call_tmp[2260657]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2260659 'move' call_tmp[2260657](2260661 'cast' int(64)[13] call_tmp[2260650]))
          (2491802 'move' tmp_x0[2491794] 0)
          (2491807 'move' tmp_x1[2491796] call_tmp[2260657])
        }
        {
          const-val call_tmp[2260692]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2260694 'move' call_tmp[2260692](2260696 '-' coerce_tmp[2260431] 1))
          const-val call_tmp[2260706]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2260708 'move' call_tmp[2260706](2260710 '+' 0 call_tmp[2260692]))
          (2491812 'move' tmp_x0[2491794] 0)
          (2491817 'move' tmp_x1[2491796] call_tmp[2260706])
        }
        (2260737 'noop')
        (2260745 'noop')
        (2260753 'noop')
        const-val _ic__F1_high[2482948]:int(64)[13] "temp"
        (2260821 'move' _ic__F1_high[2482948] tmp_x1[2491796])
        val i[2260828]:int(64)[13] "dead at end of block" "insert auto destroy"
        (2260830 'move' i[2260828] 0)
        (2260862 call chpl_checkIfRangeIterWillOverflow[1096137] tmp_x0[2491794] tmp_x1[2491796] 1 tmp_x0[2491794] tmp_x1[2491796] 1)
        const-val this[2260901]:__wide_TaskErrors[2519220] "temp"
        (2260903 'move' this[2260901] _ic__F0_this[2474674])
        val coerce_tmp[2260908]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2568730]:c_ptr(owned Error?)[1235676] "temp"
        (2260910 'move' tmp[2568730](2260912 '.v' this[2260901] errorsArray[168374]))
        (2568733 'move' coerce_tmp[2260908] tmp[2568730])
        CForLoop[2260869]
        {
          ref call_tmp[2260915]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
          (2260917 'move' call_tmp[2260915](2260919 'array_get' coerce_tmp[2260908] i[2260828]))
          val coerce_tmp[2260922]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2260924 'move' coerce_tmp[2260922](2260927 call borrow[1235889] call_tmp[2260915]))
          val coerce_tmp[2260929]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2260931 'move' coerce_tmp[2260929](2260933 'cast' object[22] coerce_tmp[2260922]))
          const-val call_tmp[2260936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val tmp[2568736]:__wide_object[2519087] "temp"
          (2568739 'move' tmp[2568736] nil[44])
          (2260938 'move' call_tmp[2260936](2260940 'ptr_neq' coerce_tmp[2260929] tmp[2568736]))
          if call_tmp[2260936]
          {
            const-val this[2260945]:__wide_TaskErrors[2519220] "temp"
            (2260947 'move' this[2260945] _ic__F0_this[2474674])
            val coerce_tmp[2260952]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2568742]:c_ptr(owned Error?)[1235676] "temp"
            (2260954 'move' tmp[2568742](2260956 '.v' this[2260945] errorsArray[168374]))
            (2568745 'move' coerce_tmp[2260952] tmp[2568742])
            ref call_tmp[2260959]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
            (2260961 'move' call_tmp[2260959](2260963 'array_get' coerce_tmp[2260952] i[2260828]))
            val coerce_tmp[2260966]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2260968 'move' coerce_tmp[2260966](2260971 call borrow[1235889] call_tmp[2260959]))
            val coerce_tmp[2260973]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2260975 'move' coerce_tmp[2260973](2260977 'cast' object[22] coerce_tmp[2260966]))
            const-val call_tmp[2260980]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            val tmp[2568748]:__wide_object[2519087] "temp"
            (2568751 'move' tmp[2568748] nil[44])
            (2260982 'move' call_tmp[2260980](2260984 'ptr_neq' coerce_tmp[2260973] tmp[2568748]))
            if call_tmp[2260980]
            {
              val coerce_tmp[2260989]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              val tmp[2568754]:c_ptr(owned Error?)[1235676] "temp"
              (2260991 'move' tmp[2568754](2260993 '.v' initTemp[1241043] errorsArray[168374]))
              (2568757 'move' coerce_tmp[2260989] tmp[2568754])
              ref call_tmp[2260996]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
              (2260998 'move' call_tmp[2260996](2261000 'array_get' coerce_tmp[2260989] idx[2260144]))
              (2261004 call =[1239118] call_tmp[2260996] call_tmp[2260959])
              ref i_lhs[2261007]:int(64)[13] "temp"
              (2261009 'move' i_lhs[2261007](2261011 'set reference' idx[2260144]))
              (2261013 '+=' i_lhs[2261007] 1)
            }
          }
          {
            (2260878 '=' i[2260828] tmp_x0[2491794])
          }
          {
            (2260889 '<=' i[2260828] _ic__F1_high[2482948])
          }
          {
            (2260893 '+=' i[2260828] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2261018]
        label _endchpl_direct_counted_range_iter_helper[2261029]
        label _endchpl_direct_counted_range_iter[2261040]
        label _endthese[2261051]
        val coerce_tmp[2261062]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2261064 'move' coerce_tmp[2261062](2261066 'cast' object[22] asTaskErr[2260292]))
        const-val call_tmp[2261069]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val tmp[2568760]:__wide_object[2519087] "temp"
        (2568763 'move' tmp[2568760] nil[44])
        (2261071 'move' call_tmp[2261069](2261073 'ptr_neq' coerce_tmp[2261062] tmp[2568760]))
        if call_tmp[2261069]
        {
          (2261079 call deinit[168832] asTaskErr[2260292])
          const-val call_tmp[2261083]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
          (2261085 'move' call_tmp[2261083](2261087 '_wide_get_locale' asTaskErr[2260292]))
          val isdirect[2261092]:bool[10] "temp"
          (2261094 'move' isdirect[2261092](2261097 call chpl_doDirectExecuteOn[187469] call_tmp[2261083]))
          if isdirect[2261092]
          {
            (2261102 call on_fn[1240295] asTaskErr[2260292])
          }
          {
            val _args_foron_fn[2261105]:_class_localson_fn[2154662] "temp"
            (2261107 'move' _args_foron_fn[2261105](2261109 'stack allocate class' _class_localson_fn[2154662]))
            (2261111 '.=' _args_foron_fn[2261105] _0_tmp[2154665] call_tmp[2261083])
            (2261115 '.=' _args_foron_fn[2261105] _1_arg[2154667] asTaskErr[2260292])
            val _args_vforon_fn[2261119]:c_void_ptr[149] "temp"
            (2261121 'move' _args_vforon_fn[2261119](2261123 'cast_to_void_star' _args_foron_fn[2261105]))
            val _args_sizeon_fn[2261125]:int(64)[13] "temp"
            (2261127 'move' _args_sizeon_fn[2261125](2261129 'sizeof_bundle' _class_localson_fn[2154662]))
            (2588948 call chpl_taskRunningCntDec[93219])
            on(2261132 call wrapon_fn[2154696] call_tmp[2261083] _args_vforon_fn[2261119] _args_sizeon_fn[2261125] _args_foron_fn[2261105])
            (2588950 call chpl_taskRunningCntInc[93198])
          }
        }
      }
      (2261140 '=' cur[2259231] curnext[2260198])
      val coerce_tmp[2261143]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2261145 'move' coerce_tmp[2261143](2261147 'cast' object[22] curnext[2260198]))
      const-val call_tmp[2261150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568766]:__wide_object[2519087] "temp"
      (2568769 'move' tmp[2568766] nil[44])
      (2261152 'move' call_tmp[2261150](2261154 'ptr_neq' coerce_tmp[2261143] tmp[2568766]))
      (2261157 'move' tmp[2260152] call_tmp[2261150])
      tmp[2260152]
    }
    (1241082 return initTemp[1241043])
  }
  function _new[1789310](const in arg err[1789319]:Error[167984]) : TaskErrors[169702] "always propagate line file info" "compiler generated" "insert line file info" "last resort" "llvm return noalias" "_new wrapper" "resolved"
  {
    const-val local__str_literal_4779[2517887]:string[26] "temp"
    (2517888 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    val initTemp[1789312]:TaskErrors[169702] "dead after last mention" "temp"
    const-val call_tmp[1789354]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1789357 'move' call_tmp[1789354](1789366 'sizeof_bundle' TaskErrors[169702]))
    const-val cast_tmp[1789369]:c_void_ptr[149] "dead after last mention" "temp"
    (1789371 'move' cast_tmp[1789369](1789325 call chpl_here_alloc[187788] call_tmp[1789354] 41))
    (1789328 'move' initTemp[1789312](1789373 'cast' TaskErrors[169702] cast_tmp[1789369]))
    (1789330 'setcid' initTemp[1789312])
    val super_tmp[2261183]:Error[167984] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568772]:Error[167984] "temp"
    (2261185 'move' tmp[2568772](2261187 '.v' initTemp[1789312] super[355751]))
    (2568775 'move' super_tmp[2261183] tmp[2568772])
    val super_tmp[2261190]:object[22] "dead after last mention" "temporary of super field" "temp"
    val tmp[2568778]:object[22] "temp"
    (2261192 'move' tmp[2568778](2261194 '.v' super_tmp[2261183] super[355739]))
    (2568781 'move' super_tmp[2261190] tmp[2568778])
    (2261197 'setcid' super_tmp[2261190])
    val call_tmp[2261199]:object[22] "dead at end of block" "maybe param" "temp"
    (2261201 'move' call_tmp[2261199](2261203 'cast' object[22] super_tmp[2261183]))
    (2261206 'setcid' call_tmp[2261199])
    val init_coerce_tmp[2261208]:Error[167984] "dead after last mention" "temp"
    (2261210 'move' init_coerce_tmp[2261208](2261212 'cast' Error[167984] nil[44]))
    val tmp[2568784]:__wide_Error[2519192] "temp"
    (2568787 'move' tmp[2568784] init_coerce_tmp[2261208])
    (2261215 '.=' super_tmp[2261183] _next[167912] tmp[2568784])
    (2261219 '.=' super_tmp[2261183] thrownLine[167917] 0)
    (2261223 '.=' super_tmp[2261183] thrownFileId[167925] 0)
    val tmp[2261227]:string[26] "dead after last mention" "temp"
    (2261230 call init[30763] tmp[2261227])
    (2261232 '.=' super_tmp[2261183] _msg[167930] tmp[2261227])
    (2261236 '.=' super_tmp[2261183] _hasThrowInfo[167936] 0)
    (2261240 'setcid' super_tmp[2261183])
    val call_tmp[2261242]:Error[167984] "dead at end of block" "maybe param" "temp"
    (2261244 'move' call_tmp[2261242](2261246 'cast' Error[167984] initTemp[1789312]))
    (2261249 'setcid' call_tmp[2261242])
    (2261251 '.=' initTemp[1789312] nErrors[168363] 1)
    const-val call_tmp[2261260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261262 'move' call_tmp[2261260](2261264 '<' 1 0))
    if call_tmp[2261260]
    {
      (2261270 call safeCastCheckHalt[210235] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2261273]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261275 'move' call_tmp[2261273](2261277 'cast' uint(64)[115] 1))
    const-val call_tmp[2261280]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261282 'move' call_tmp[2261280](2261285 call sizeof[1238550] owned Error?[966474]))
    const-val call_tmp[2261287]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261289 'move' call_tmp[2261287](2261291 '*' call_tmp[2261273] call_tmp[2261280]))
    const-val call_tmp[2261294]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261296 'move' call_tmp[2261294](2261299 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2261300]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261302 'move' call_tmp[2261300](2261305 call chpl_here_calloc[1238580] call_tmp[2261287] 1 call_tmp[2261294]))
    val call_tmp[2261309]:c_ptr(owned Error?)[1235676] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261311 'move' call_tmp[2261309](2261313 'cast' c_ptr(owned Error?)[1235676] call_tmp[2261300]))
    (2261316 '.=' initTemp[1789312] errorsArray[168374] call_tmp[2261309])
    (2261320 'setcid' initTemp[1789312])
    val coerce_tmp[2261322]:Error[167984] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2261324 'move' coerce_tmp[2261322] err[1789319])
    val tmp[2261327]:Error[167984] "temp"
    (2261329 'move' tmp[2261327](2261331 'cast' Error[167984] nil[44]))
    val tmp[2568790]:__wide_Error[2519192] "temp"
    (2568793 'move' tmp[2568790] tmp[2261327])
    (2261334 '.=' coerce_tmp[2261322] _next[167912] tmp[2568790])
    val coerce_tmp[2261338]:c_ptr(owned Error?)[1235676] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2568796]:c_ptr(owned Error?)[1235676] "temp"
    (2261340 'move' tmp[2568796](2261342 '.v' initTemp[1789312] errorsArray[168374]))
    (2568799 'move' coerce_tmp[2261338] tmp[2568796])
    ref call_tmp[2261345]:owned Error?[966474] "dead after last mention" "maybe param" "temp"
    (2261347 'move' call_tmp[2261345](2261349 'array_get' coerce_tmp[2261338] 0))
    const-val tmp[2568802]:__wide_Error[2519192] "temp"
    (2568805 'move' tmp[2568802] err[1789319])
    (2261353 call retain[1238836] call_tmp[2261345] tmp[2568802])
    (1789349 return initTemp[1789312])
  }
  type TaskErrors[169702] val super[355751]:Error[167984] "super class" val nErrors[168363]:int(64)[13] "no doc" val errorsArray[168374]:c_ptr(owned Error?)[1235676] "no doc"
  function _local_chpl_error_type_name[2548250](const in arg err[2548252]:__wide_Error[2519192], ref arg _retArg[2548254]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val call_tmp[2548257]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2551127 'local_check' err[2548252] c"cannot access remote data in local block")
    const-val local_err[2551124]:Error[167984] "temp"
    (2551130 'move' local_err[2551124] err[2548252])
    (2548259 'move' call_tmp[2548257](2548261 'getcid' local_err[2551124]))
    const-val call_tmp[2548263]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2548265 'move' call_tmp[2548263](2548267 'class name by id' call_tmp[2548257]))
    const-val nameS[2548269]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2548271]:__wide_Error[2519192] "error variable" "temp"
    (2548273 'move' error[2548271] nil[44])
    const-val call_tmp[2548276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2548278 'move' call_tmp[2548276](2548280 'string_length_bytes' call_tmp[2548263]))
    val errorExists[2548282]:bool[10] "temp"
    (2548284 'move' errorExists[2548282](2548286 '!=' error[2548271] nil[44]))
    if errorExists[2548282]
    {
      gotoErrorHandling handler[2548384] handler[2548384]
    }
    const-val ret[2548294]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2548296]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2548298 'move' call_tmp[2548296](2548300 'cast' c_ptr(uint(8))[937484] call_tmp[2548263]))
    val error[2548303]:__wide_Error[2519192] "error variable" "temp"
    (2548305 'move' error[2548303] nil[44])
    const-val ret[2548308]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2548310]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2548312]:__wide_Error[2519192] "error variable" "temp"
    (2548314 'move' error[2548312] nil[44])
    const-val ret_tmp[2548317]:string[26] "temp"
    ref tmp[2588222]:__wide_Error[2519192] "temp"
    (2588226 'move' tmp[2588222](2588224 'set reference' error[2548312]))
    (2548320 call _local_decodeByteBuffer[2538627] call_tmp[2548296] call_tmp[2548276] strict[173692] tmp[2588222] ret_tmp[2548317])
    (2548326 'move' call_tmp[2548310] ret_tmp[2548317])
    val errorExists[2548329]:bool[10] "temp"
    (2548331 'move' errorExists[2548329](2548333 '!=' error[2548312] nil[44]))
    if errorExists[2548329]
    {
      (2548338 '=' error[2548303] error[2548312])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2548347] _endcreateStringWithNewBuffer[2548347]
    }
    (2548344 'move' ret[2548308] call_tmp[2548310])
    label _endcreateStringWithNewBuffer[2548347]
    val errorExists[2548349]:bool[10] "temp"
    (2548351 'move' errorExists[2548349](2548353 '!=' error[2548303] nil[44]))
    if errorExists[2548349]
    {
      (2548358 '=' error[2548271] error[2548303])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2548367] _endcreateStringWithNewBuffer[2548367]
    }
    (2548364 'move' ret[2548294] ret[2548308])
    label _endcreateStringWithNewBuffer[2548367]
    val errorExists[2548369]:bool[10] "temp"
    (2548371 'move' errorExists[2548369](2548373 '!=' error[2548271] nil[44]))
    if errorExists[2548369]
    {
      gotoErrorHandling handler[2548384] handler[2548384]
    }
    (2548381 'move' nameS[2548269] ret[2548294])
    label handler[2548384]
    val errorExists[2548386]:bool[10] "temp"
    (2548388 'move' errorExists[2548386](2548390 '!=' error[2548271] nil[44]))
    if errorExists[2548386]
    {
      (2548396 call _local_chpl_uncaught_error[2539708] error[2548271])
    }
    label _end_chpl_error_type_name[2548399]
    (2548401 '=' _retArg[2548254] nameS[2548269])
    (2548404 return _void[55])
  }
  function chpl_error_type_name[169752](const in arg err[169749]:__wide_Error[2519192], ref arg _retArg[1864704]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val call_tmp[680257]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680260 'move' call_tmp[680257](169774 'getcid' err[169749]))
    const-val call_tmp[680262]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680265 'move' call_tmp[680262](169800 'class name by id' call_tmp[680257]))
    const-val nameS[169806]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1842538]:__wide_Error[2519192] "error variable" "temp"
    (1842554 'move' error[1842538] nil[44])
    const-val call_tmp[2270859]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270861 'move' call_tmp[2270859](2270863 'string_length_bytes' call_tmp[680262]))
    val errorExists[2169820]:bool[10] "temp"
    (2169825 'move' errorExists[2169820](2169822 '!=' error[1842538] nil[44]))
    if errorExists[2169820]
    {
      gotoErrorHandling handler[1842539] handler[1842539]
    }
    const-val ret[2204336]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2204338]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2204340 'move' call_tmp[2204338](2204342 'cast' c_ptr(uint(8))[937484] call_tmp[680262]))
    val error[2204347]:__wide_Error[2519192] "error variable" "temp"
    (2204349 'move' error[2204347] nil[44])
    const-val ret[2204352]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2204354]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2204356]:__wide_Error[2519192] "error variable" "temp"
    (2204358 'move' error[2204356] nil[44])
    const-val ret_tmp[2204361]:string[26] "temp"
    ref tmp[2565456]:__wide_Error[2519192] "temp"
    (2565460 'move' tmp[2565456](2565458 'set reference' error[2204356]))
    (2204364 call decodeByteBuffer[173938] call_tmp[2204338] call_tmp[2270859] strict[173692] tmp[2565456] ret_tmp[2204361])
    (2204370 'move' call_tmp[2204354] ret_tmp[2204361])
    val errorExists[2204373]:bool[10] "temp"
    (2204375 'move' errorExists[2204373](2204377 '!=' error[2204356] nil[44]))
    if errorExists[2204373]
    {
      (2204382 '=' error[2204347] error[2204356])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204391] _endcreateStringWithNewBuffer[2204391]
    }
    (2204388 'move' ret[2204352] call_tmp[2204354])
    label _endcreateStringWithNewBuffer[2204391]
    val errorExists[2204396]:bool[10] "temp"
    (2204398 'move' errorExists[2204396](2204400 '!=' error[2204347] nil[44]))
    if errorExists[2204396]
    {
      (2204405 '=' error[1842538] error[2204347])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204414] _endcreateStringWithNewBuffer[2204414]
    }
    (2204411 'move' ret[2204336] ret[2204352])
    label _endcreateStringWithNewBuffer[2204414]
    val errorExists[2169828]:bool[10] "temp"
    (2169833 'move' errorExists[2169828](2169830 '!=' error[1842538] nil[44]))
    if errorExists[2169828]
    {
      gotoErrorHandling handler[1842539] handler[1842539]
    }
    (544694 'move' nameS[169806] ret[2204336])
    label handler[1842539]
    val errorExists[2169836]:bool[10] "temp"
    (2169841 'move' errorExists[2169836](2169838 '!=' error[1842538] nil[44]))
    if errorExists[2169836]
    {
      (1842560 call chpl_uncaught_error[170289] error[1842538])
    }
    label _end_chpl_error_type_name[522275]
    (1864706 '=' _retArg[1864704] nameS[169806])
    (1864708 return _void[55])
  }
  function _local_chpl_describe_error[2543760](const in arg err[2543762]:__wide_Error[2519192], ref arg _retArg[2543764]:string[26]) : void[4] "fn returns via _retArg" "local fn" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2543767]:string[26] "temp"
    (2543769 'move' local__str_literal_1782[2543767] ": ")
    const-val call_tmp[2543772]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2543774]:string[26] "temp"
    (2543777 call _local_chpl_error_type_name[2548250] err[2543762] ret_tmp[2543774])
    (2543780 'move' call_tmp[2543772] ret_tmp[2543774])
    const-val nameS[2543783]:string[26] "dead at end of block" "insert auto destroy"
    (2543785 'move' nameS[2543783] call_tmp[2543772])
    const-val call_tmp[2543788]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2543790]:string[26] "temp"
    wide-ref tmp[2587589]:string[26] "temp"
    (2587593 'move' tmp[2587589](2587591 'set reference' local__str_literal_1782[2543767]))
    (2543793 call _local_+[2535701] nameS[2543783] tmp[2587589] ret_tmp[2543790])
    (2543797 'move' call_tmp[2543788] ret_tmp[2543790])
    const-val call_tmp[2543800]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[2543802]:int(32)[95] "temp"
    (2548412 'local_check' err[2543762] c"cannot access remote data in local block")
    const-val local_err[2548409]:Error[167984] "temp"
    (2548415 'move' local_err[2548409] err[2543762])
    (2543804 'move' _virtual_method_tmp_[2543802](2543806 'getcid' local_err[2548409]))
    val ret_tmp[2543808]:string[26] "temp"
    ref tmp[2587596]:string[26] "temp"
    (2587600 'move' tmp[2587596](2587599 'set reference' ret_tmp[2543808]))
    wide-ref tmp[2587603]:string[26] "temp"
    (2587606 'move' tmp[2587603] tmp[2587596])
    (2543810 'virtual method call' message[167975] _virtual_method_tmp_[2543802] err[2543762] tmp[2587603])
    (2543815 'move' call_tmp[2543800] ret_tmp[2543808])
    const-val call_tmp[2543818]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2543820]:string[26] "temp"
    wide-ref tmp[2587609]:string[26] "temp"
    (2587613 'move' tmp[2587609](2587611 'set reference' call_tmp[2543800]))
    (2543823 call _local_+[2535701] call_tmp[2543788] tmp[2587609] ret_tmp[2543820])
    (2543827 'move' call_tmp[2543818] ret_tmp[2543820])
    ref i_x[2543830]:string[26] "temp"
    (2543832 'move' i_x[2543830](2543834 'set reference' call_tmp[2543800]))
    wide-ref tmp[2587616]:string[26] "temp"
    (2587619 'move' tmp[2587616] i_x[2543830])
    (2543837 call _local_deinit[2529591] tmp[2587616])
    ref i_x[2543839]:string[26] "temp"
    (2543841 'move' i_x[2543839](2543843 'set reference' call_tmp[2543788]))
    wide-ref tmp[2587622]:string[26] "temp"
    (2587625 'move' tmp[2587622] i_x[2543839])
    (2543846 call _local_deinit[2529591] tmp[2587622])
    ref i_x[2543848]:string[26] "temp"
    (2543850 'move' i_x[2543848](2543852 'set reference' nameS[2543783]))
    wide-ref tmp[2587628]:string[26] "temp"
    (2587631 'move' tmp[2587628] i_x[2543848])
    (2543855 call _local_deinit[2529591] tmp[2587628])
    label _end_chpl_describe_error[2543857]
    (2543859 '=' _retArg[2543764] call_tmp[2543818])
    (2543862 return _void[55])
  }
  function chpl_describe_error[169835](const in arg err[169832]:__wide_Error[2519192], ref arg _retArg[1864734]:string[26]) : void[4] "fn returns via _retArg" "no doc" "resolved"
  {
    const-val local__str_literal_1782[2514937]:string[26] "temp"
    (2514938 'move' ": " ": ")
    const-val call_tmp[680272]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1864698]:string[26] "temp"
    (169841 call chpl_error_type_name[169752] err[169832] ret_tmp[1864698])
    (1864701 'move' call_tmp[680272] ret_tmp[1864698])
    const-val nameS[169842]:string[26] "dead at end of block" "insert auto destroy"
    (544697 'move' nameS[169842] call_tmp[680272])
    const-val call_tmp[680277]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863364]:string[26] "temp"
    wide-ref tmp[2552371]:string[26] "temp"
    (2552375 'move' tmp[2552371](2552373 'set reference' ": "))
    (169849 call +[38345] nameS[169842] tmp[2552371] ret_tmp[1863364])
    (1863367 'move' call_tmp[680277] ret_tmp[1863364])
    const-val call_tmp[680284]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    val _virtual_method_tmp_[1834921]:int(32)[95] "temp"
    (1834925 'move' _virtual_method_tmp_[1834921](1834923 'getcid' err[169832]))
    val ret_tmp[1864650]:string[26] "temp"
    ref tmp[2552378]:string[26] "temp"
    (2552382 'move' tmp[2552378](2552381 'set reference' ret_tmp[1864650]))
    wide-ref tmp[2552385]:string[26] "temp"
    (2552388 'move' tmp[2552385] tmp[2552378])
    (169856 'virtual method call' message[167975] _virtual_method_tmp_[1834921] err[169832] tmp[2552385])
    (1864653 'move' call_tmp[680284] ret_tmp[1864650])
    const-val call_tmp[680289]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863370]:string[26] "temp"
    wide-ref tmp[2552391]:string[26] "temp"
    (2552395 'move' tmp[2552391](2552393 'set reference' call_tmp[680284]))
    (169857 call +[38345] call_tmp[680277] tmp[2552391] ret_tmp[1863370])
    (1863373 'move' call_tmp[680289] ret_tmp[1863370])
    ref i_x[2193151]:string[26] "temp"
    (2193155 'move' i_x[2193151](2193153 'set reference' call_tmp[680284]))
    wide-ref tmp[2563968]:string[26] "temp"
    (2563971 'move' tmp[2563968] i_x[2193151])
    (2193159 call deinit[30834] tmp[2563968])
    ref i_x[2193163]:string[26] "temp"
    (2193167 'move' i_x[2193163](2193165 'set reference' call_tmp[680277]))
    wide-ref tmp[2563974]:string[26] "temp"
    (2563977 'move' tmp[2563974] i_x[2193163])
    (2193171 call deinit[30834] tmp[2563974])
    ref i_x[2193175]:string[26] "temp"
    (2193179 'move' i_x[2193175](2193177 'set reference' nameS[169842]))
    wide-ref tmp[2563980]:string[26] "temp"
    (2563983 'move' tmp[2563980] i_x[2193175])
    (2193183 call deinit[30834] tmp[2563980])
    label _end_chpl_describe_error[522287]
    (1864736 '=' _retArg[1864734] call_tmp[680289])
    (1864738 return _void[55])
  }
  function _local_chpl_do_fix_thrown_error[2547238](const in arg err[2547240]:__wide_Error[2519192]) : __wide_Error[2519192] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2547243]:string[26] "temp"
    (2547245 'move' local__str_literal_129[2547243] "argument to ! is nil")
    val fixErr[2547248]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    (2547250 'move' fixErr[2547248] err[2547240])
    val coerce_tmp[2547253]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2547255 'move' coerce_tmp[2547253](2547257 'cast' object[22] err[2547240]))
    const-val call_tmp[2547260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2588030]:__wide_object[2519087] "temp"
    (2588033 'move' tmp[2588030] nil[44])
    (2547262 'move' call_tmp[2547260](2547264 'ptr_eq' coerce_tmp[2547253] tmp[2588030]))
    if call_tmp[2547260]
    {
      val new_temp[2547269]:NilThrownError[168029] "dead after last mention" "temp"
      (2547271 'move' new_temp[2547269](2547274 call _local__new[2550411]))
      val tmp[2547275]:Error[167984] "temp"
      (2547277 'move' tmp[2547275](2547279 'cast' Error[167984] new_temp[2547269]))
      (2547282 '=' fixErr[2547248] tmp[2547275])
    }
    const-val call_tmp[2547286]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2547288 'move' call_tmp[2547286](2547290 '_get_user_line'))
    const-val call_tmp[2547291]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (2547293 'move' call_tmp[2547291](2547295 '_get_user_file'))
    val coerce_tmp[2547296]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2547298 'move' coerce_tmp[2547296](2547300 'cast' object[22] fixErr[2547248]))
    const-val call_tmp[2547303]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2588036]:__wide_object[2519087] "temp"
    (2588039 'move' tmp[2588036] nil[44])
    (2547305 'move' call_tmp[2547303](2547307 'ptr_eq' coerce_tmp[2547296] tmp[2588036]))
    if call_tmp[2547303]
    {
      (2547313 call _local_nilCheckHalt[2529976] local__str_literal_129[2547243])
    }
    val coerce_tmp[2547316]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2547318 'move' coerce_tmp[2547316] fixErr[2547248])
    const-val coerce_tmp[2547321]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2550515 'local_check' coerce_tmp[2547316] c"cannot access remote data in local block")
    val local_coerce_tmp[2550512]:Error[167984] "temp"
    (2550518 'move' local_coerce_tmp[2550512] coerce_tmp[2547316])
    val tmp[2588042]:bool[10] "temp"
    (2547323 'move' tmp[2588042](2547325 '.v' local_coerce_tmp[2550512] _hasThrowInfo[167936]))
    (2588045 'move' coerce_tmp[2547321] tmp[2588042])
    const-val call_tmp[2547328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2547330 'move' call_tmp[2547328](2547332 '!' coerce_tmp[2547321]))
    if call_tmp[2547328]
    {
      val coerce_tmp[2547336]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547338 'move' coerce_tmp[2547336](2547340 'cast' object[22] fixErr[2547248]))
      const-val call_tmp[2547343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2588048]:__wide_object[2519087] "temp"
      (2588051 'move' tmp[2588048] nil[44])
      (2547345 'move' call_tmp[2547343](2547347 'ptr_eq' coerce_tmp[2547336] tmp[2588048]))
      if call_tmp[2547343]
      {
        (2547353 call _local_nilCheckHalt[2529976] local__str_literal_129[2547243])
      }
      val coerce_tmp[2547356]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547358 'move' coerce_tmp[2547356] fixErr[2547248])
      (2550525 'local_check' coerce_tmp[2547356] c"cannot access remote data in local block")
      val local_coerce_tmp[2550522]:Error[167984] "temp"
      (2550528 'move' local_coerce_tmp[2550522] coerce_tmp[2547356])
      (2547361 '.=' local_coerce_tmp[2550522] _hasThrowInfo[167936] 1)
      val coerce_tmp[2547365]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547367 'move' coerce_tmp[2547365](2547369 'cast' object[22] fixErr[2547248]))
      const-val call_tmp[2547372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2588054]:__wide_object[2519087] "temp"
      (2588057 'move' tmp[2588054] nil[44])
      (2547374 'move' call_tmp[2547372](2547376 'ptr_eq' coerce_tmp[2547365] tmp[2588054]))
      if call_tmp[2547372]
      {
        (2547382 call _local_nilCheckHalt[2529976] local__str_literal_129[2547243])
      }
      val coerce_tmp[2547385]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547387 'move' coerce_tmp[2547385] fixErr[2547248])
      (2550535 'local_check' coerce_tmp[2547385] c"cannot access remote data in local block")
      val local_coerce_tmp[2550532]:Error[167984] "temp"
      (2550538 'move' local_coerce_tmp[2550532] coerce_tmp[2547385])
      (2547390 '.=' local_coerce_tmp[2550532] thrownLine[167917] call_tmp[2547286])
      val coerce_tmp[2547394]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547396 'move' coerce_tmp[2547394](2547398 'cast' object[22] fixErr[2547248]))
      const-val call_tmp[2547401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2588060]:__wide_object[2519087] "temp"
      (2588063 'move' tmp[2588060] nil[44])
      (2547403 'move' call_tmp[2547401](2547405 'ptr_eq' coerce_tmp[2547394] tmp[2588060]))
      if call_tmp[2547401]
      {
        (2547411 call _local_nilCheckHalt[2529976] local__str_literal_129[2547243])
      }
      val coerce_tmp[2547414]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2547416 'move' coerce_tmp[2547414] fixErr[2547248])
      (2550545 'local_check' coerce_tmp[2547414] c"cannot access remote data in local block")
      val local_coerce_tmp[2550542]:Error[167984] "temp"
      (2550548 'move' local_coerce_tmp[2550542] coerce_tmp[2547414])
      (2547419 '.=' local_coerce_tmp[2550542] thrownFileId[167925] call_tmp[2547291])
    }
    label _end_chpl_do_fix_thrown_error[2547424]
    (2547426 return fixErr[2547248])
  }
  function chpl_do_fix_thrown_error[169877](const in arg err[169874]:__wide_Error[2519192]) : __wide_Error[2519192] "always propagate line file info" "insert line file info" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_129[2514943]:string[26] "temp"
    (2514944 'move' "argument to ! is nil" "argument to ! is nil")
    val fixErr[169885]:__wide_Error[2519192] "dead at end of block" "insert auto destroy"
    (544701 'move' fixErr[169885] err[169874])
    val coerce_tmp[969547]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969552 'move' coerce_tmp[969547](969549 'cast' object[22] err[169874]))
    const-val call_tmp[2173987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2563242]:__wide_object[2519087] "temp"
    (2563245 'move' tmp[2563242] nil[44])
    (2173989 'move' call_tmp[2173987](2173991 'ptr_eq' coerce_tmp[969547] tmp[2563242]))
    if call_tmp[2173987]
    {
      val new_temp[969662]:NilThrownError[168029] "dead after last mention" "temp"
      (969664 'move' new_temp[969662](969594 call _new[969610]))
      val tmp[2522686]:Error[167984] "temp"
      (2522689 'move' tmp[2522686](2286851 'cast' Error[167984] new_temp[969662]))
      (2286849 '=' fixErr[169885] tmp[2522686])
    }
    const-val call_tmp[680309]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680312 'move' call_tmp[680309](169927 '_get_user_line'))
    const-val call_tmp[680314]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (680317 'move' call_tmp[680314](169950 '_get_user_file'))
    val coerce_tmp[2240937]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2240939 'move' coerce_tmp[2240937](2240941 'cast' object[22] fixErr[169885]))
    const-val call_tmp[2240944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2568550]:__wide_object[2519087] "temp"
    (2568553 'move' tmp[2568550] nil[44])
    (2240946 'move' call_tmp[2240944](2240948 'ptr_eq' coerce_tmp[2240937] tmp[2568550]))
    if call_tmp[2240944]
    {
      (2240954 call nilCheckHalt[210171] "argument to ! is nil")
    }
    val coerce_tmp[969786]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (969791 'move' coerce_tmp[969786] fixErr[169885])
    const-val coerce_tmp[969794]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2552814]:bool[10] "temp"
    (969798 'move' tmp[2552814](2502669 '.v' coerce_tmp[969786] _hasThrowInfo[167936]))
    (2552817 'move' coerce_tmp[969794] tmp[2552814])
    const-val call_tmp[2175755]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2175757 'move' call_tmp[2175755](2175759 '!' coerce_tmp[969794]))
    if call_tmp[2175755]
    {
      val coerce_tmp[2240960]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2240962 'move' coerce_tmp[2240960](2240964 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2240967]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568556]:__wide_object[2519087] "temp"
      (2568559 'move' tmp[2568556] nil[44])
      (2240969 'move' call_tmp[2240967](2240971 'ptr_eq' coerce_tmp[2240960] tmp[2568556]))
      if call_tmp[2240967]
      {
        (2240977 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[969802]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969807 'move' coerce_tmp[969802] fixErr[169885])
      (2502675 '.=' coerce_tmp[969802] _hasThrowInfo[167936] 1)
      val coerce_tmp[2240983]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2240985 'move' coerce_tmp[2240983](2240987 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2240990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568562]:__wide_object[2519087] "temp"
      (2568565 'move' tmp[2568562] nil[44])
      (2240992 'move' call_tmp[2240990](2240994 'ptr_eq' coerce_tmp[2240983] tmp[2568562]))
      if call_tmp[2240990]
      {
        (2241000 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[969812]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969817 'move' coerce_tmp[969812] fixErr[169885])
      (2502681 '.=' coerce_tmp[969812] thrownLine[167917] call_tmp[680309])
      val coerce_tmp[2241006]:__wide_object[2519087] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2241008 'move' coerce_tmp[2241006](2241010 'cast' object[22] fixErr[169885]))
      const-val call_tmp[2241013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2568568]:__wide_object[2519087] "temp"
      (2568571 'move' tmp[2568568] nil[44])
      (2241015 'move' call_tmp[2241013](2241017 'ptr_eq' coerce_tmp[2241006] tmp[2568568]))
      if call_tmp[2241013]
      {
        (2241023 call nilCheckHalt[210171] "argument to ! is nil")
      }
      val coerce_tmp[969822]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (969827 'move' coerce_tmp[969822] fixErr[169885])
      (2502687 '.=' coerce_tmp[969822] thrownFileId[167925] call_tmp[680314])
    }
    label _end_chpl_do_fix_thrown_error[522299]
    (522303 return fixErr[169885])
  }
  function _local_chpl_fix_thrown_error[2543050](const  ref arg err[2543052]:owned Error[966519]) : __wide_Error[2519192] "always propagate line file info" "ignore in global analysis" "insert line file info" "local fn" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[2543055]:owned Error[966519] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2543057 'move' _formal_tmp_err[2543055] err[2543052])
    val call_tmp[2543060]:__wide_Error[2519192] "dead after last mention" "expr temp" "maybe param" "temp"
    (2543062 'move' call_tmp[2543060](2543065 call _local_release[2547183] _formal_tmp_err[2543055]))
    val call_tmp[2543067]:__wide_Error[2519192] "dead after last mention" "expr temp" "maybe param" "temp"
    (2543069 'move' call_tmp[2543067](2543072 call _local_chpl_do_fix_thrown_error[2547238] call_tmp[2543060]))
    (2543075 call _local_chpl__autoDestroy[2547430] _formal_tmp_err[2543055])
    (2543077 return call_tmp[2543067])
  }
  function chpl_fix_thrown_error[170049](const  ref arg err[170046]:owned Error[966519]) : __wide_Error[2519192] "always propagate line file info" "ignore in global analysis" "insert line file info" "no doc" "resolved" "ignore transfer errors"
  {
    val _formal_tmp_err[969514]:owned Error[966519] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (969517 'move' _formal_tmp_err[969514] err[170046])
    val call_tmp[680396]:__wide_Error[2519192] "dead after last mention" "expr temp" "maybe param" "temp"
    (680399 'move' call_tmp[680396](170059 call release[969259] _formal_tmp_err[969514]))
    val call_tmp[680401]:__wide_Error[2519192] "dead after last mention" "expr temp" "maybe param" "temp"
    (680404 'move' call_tmp[680401](170061 call chpl_do_fix_thrown_error[169877] call_tmp[680396]))
    (1877057 call chpl__autoDestroy[1569406] _formal_tmp_err[969514])
    (522325 return call_tmp[680401])
  }
  function chpl_delete_error[170263](const in arg err[170260]:Error[167984]) : void[4] "no doc" "resolved" "no return value for void"
  {
    val coerce_tmp[1788762]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1788767 'move' coerce_tmp[1788762](1788764 'cast' object[22] err[170260]))
    const-val call_tmp[2175117]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2175119 'move' call_tmp[2175117](2175121 'ptr_neq' coerce_tmp[1788762] nil[44]))
    if call_tmp[2175117]
    {
      val coerce_tmp[2353098]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2353100 'move' coerce_tmp[2353098](2353102 'cast' object[22] err[170260]))
      const-val call_tmp[2353105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2353107 'move' call_tmp[2353105](2353109 'ptr_neq' coerce_tmp[2353098] nil[44]))
      if call_tmp[2353105]
      {
        val _virtual_method_tmp_[2353119]:int(32)[95] "temp"
        (2353121 'move' _virtual_method_tmp_[2353119](2353123 'getcid' err[170260]))
        val tmp[2575133]:__wide_Error[2519192] "temp"
        (2575136 'move' tmp[2575133] err[170260])
        (2353125 'virtual method call' deinit[811807] _virtual_method_tmp_[2353119] tmp[2575133])
        const-val call_tmp[2353131]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
        (2353133 'move' call_tmp[2353131](2353135 '_wide_get_locale' err[170260]))
        val isdirect[2353140]:bool[10] "temp"
        (2353142 'move' isdirect[2353140](2353145 call chpl_doDirectExecuteOn[187469] call_tmp[2353131]))
        if isdirect[2353140]
        {
          const-val tmp[2575139]:__wide_Error[2519192] "temp"
          (2575142 'move' tmp[2575139] err[170260])
          (2353150 call on_fn[1236503] tmp[2575139])
        }
        {
          val _args_foron_fn[2353153]:_class_localson_fn[2154577] "temp"
          (2353155 'move' _args_foron_fn[2353153](2353157 'stack allocate class' _class_localson_fn[2154577]))
          (2353159 '.=' _args_foron_fn[2353153] _0_tmp[2154580] call_tmp[2353131])
          val tmp[2575145]:__wide_Error[2519192] "temp"
          (2575148 'move' tmp[2575145] err[170260])
          (2353163 '.=' _args_foron_fn[2353153] _1_arg[2154582] tmp[2575145])
          val _args_vforon_fn[2353167]:c_void_ptr[149] "temp"
          (2353169 'move' _args_vforon_fn[2353167](2353171 'cast_to_void_star' _args_foron_fn[2353153]))
          val _args_sizeon_fn[2353173]:int(64)[13] "temp"
          (2353175 'move' _args_sizeon_fn[2353173](2353177 'sizeof_bundle' _class_localson_fn[2154577]))
          (2589188 call chpl_taskRunningCntDec[93219])
          on(2353180 call wrapon_fn[2154611] call_tmp[2353131] _args_vforon_fn[2353167] _args_sizeon_fn[2353173] _args_foron_fn[2353153])
          (2589190 call chpl_taskRunningCntInc[93198])
        }
      }
    }
    (522344 return _void[55])
  }
  function _local_chpl_uncaught_error[2539708](const in arg err[2539710]:__wide_Error[2519192]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "local fn" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4796[2539713]:string[26] "temp"
    (2539715 'move' local__str_literal_4796[2539713] "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2539718]:string[26] "temp"
    (2539720 'move' local__str_literal_2261[2539718] ": uncaught here")
    const-val local__str_literal_2259[2539723]:string[26] "temp"
    (2539725 'move' local__str_literal_2259[2539723] ": thrown here")
    const-val local__str_literal_2033[2539728]:string[26] "temp"
    (2539730 'move' local__str_literal_2033[2539728] ":")
    const-val local__str_literal_2257[2539733]:string[26] "temp"
    (2539735 'move' local__str_literal_2257[2539733] "\n  ")
    const-val local__str_literal_2255[2539738]:string[26] "temp"
    (2539740 'move' local__str_literal_2255[2539738] "uncaught ")
    const-val call_tmp[2539743]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (2539745 'move' call_tmp[2539743](2539747 '_get_user_file'))
    const-val call_tmp[2539748]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2539750 'move' call_tmp[2539748](2539752 'chpl_lookupFilename' call_tmp[2539743]))
    const-val myFileS[2539754]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2539756]:__wide_Error[2519192] "error variable" "temp"
    (2539758 'move' error[2539756] nil[44])
    const-val call_tmp[2539761]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2539763 'move' call_tmp[2539761](2539765 'string_length_bytes' call_tmp[2539748]))
    val errorExists[2539767]:bool[10] "temp"
    (2539769 'move' errorExists[2539767](2539771 '!=' error[2539756] nil[44]))
    if errorExists[2539767]
    {
      gotoErrorHandling handler[2539869] handler[2539869]
    }
    const-val ret[2539779]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2539781]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2539783 'move' call_tmp[2539781](2539785 'cast' c_ptr(uint(8))[937484] call_tmp[2539748]))
    val error[2539788]:__wide_Error[2519192] "error variable" "temp"
    (2539790 'move' error[2539788] nil[44])
    const-val ret[2539793]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2539795]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2539797]:__wide_Error[2519192] "error variable" "temp"
    (2539799 'move' error[2539797] nil[44])
    const-val ret_tmp[2539802]:string[26] "temp"
    ref tmp[2586984]:__wide_Error[2519192] "temp"
    (2586988 'move' tmp[2586984](2586986 'set reference' error[2539797]))
    (2539805 call _local_decodeByteBuffer[2538627] call_tmp[2539781] call_tmp[2539761] strict[173692] tmp[2586984] ret_tmp[2539802])
    (2539811 'move' call_tmp[2539795] ret_tmp[2539802])
    val errorExists[2539814]:bool[10] "temp"
    (2539816 'move' errorExists[2539814](2539818 '!=' error[2539797] nil[44]))
    if errorExists[2539814]
    {
      (2539823 '=' error[2539788] error[2539797])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2539832] _endcreateStringWithNewBuffer[2539832]
    }
    (2539829 'move' ret[2539793] call_tmp[2539795])
    label _endcreateStringWithNewBuffer[2539832]
    val errorExists[2539834]:bool[10] "temp"
    (2539836 'move' errorExists[2539834](2539838 '!=' error[2539788] nil[44]))
    if errorExists[2539834]
    {
      (2539843 '=' error[2539756] error[2539788])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2539852] _endcreateStringWithNewBuffer[2539852]
    }
    (2539849 'move' ret[2539779] ret[2539793])
    label _endcreateStringWithNewBuffer[2539852]
    val errorExists[2539854]:bool[10] "temp"
    (2539856 'move' errorExists[2539854](2539858 '!=' error[2539756] nil[44]))
    if errorExists[2539854]
    {
      gotoErrorHandling handler[2539869] handler[2539869]
    }
    (2539866 'move' myFileS[2539754] ret[2539779])
    label handler[2539869]
    val errorExists[2539871]:bool[10] "temp"
    (2539873 'move' errorExists[2539871](2539875 '!=' error[2539756] nil[44]))
    if errorExists[2539871]
    {
      (2539881 call _local_chpl_uncaught_error[2539708] error[2539756])
    }
    const-val call_tmp[2539884]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (2539886 'move' call_tmp[2539884](2539888 '_get_user_line'))
    val coerce_tmp[2539889]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2539891 'move' coerce_tmp[2539889] err[2539710])
    wide-ref call_tmp[2539894]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2543743 'local_check' coerce_tmp[2539889] c"cannot access remote data in local block")
    val local_coerce_tmp[2543740]:Error[167984] "temp"
    (2543746 'move' local_coerce_tmp[2543740] coerce_tmp[2539889])
    (2539896 'move' call_tmp[2539894](2539898 '.' local_coerce_tmp[2543740] thrownFileId[167925]))
    const-val call_tmp[2539901]:c_string[19] "dead at end of block" "maybe param" "temp"
    (2539903 'move' call_tmp[2539901](2539905 'chpl_lookupFilename' call_tmp[2539894]))
    const-val thrownFileS[2539907]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[2539909]:__wide_Error[2519192] "error variable" "temp"
    (2539911 'move' error[2539909] nil[44])
    const-val call_tmp[2539914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2539916 'move' call_tmp[2539914](2539918 'string_length_bytes' call_tmp[2539901]))
    val errorExists[2539920]:bool[10] "temp"
    (2539922 'move' errorExists[2539920](2539924 '!=' error[2539909] nil[44]))
    if errorExists[2539920]
    {
      gotoErrorHandling handler[2540022] handler[2540022]
    }
    const-val ret[2539932]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2539934]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2539936 'move' call_tmp[2539934](2539938 'cast' c_ptr(uint(8))[937484] call_tmp[2539901]))
    val error[2539941]:__wide_Error[2519192] "error variable" "temp"
    (2539943 'move' error[2539941] nil[44])
    const-val ret[2539946]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2539948]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2539950]:__wide_Error[2519192] "error variable" "temp"
    (2539952 'move' error[2539950] nil[44])
    const-val ret_tmp[2539955]:string[26] "temp"
    ref tmp[2586991]:__wide_Error[2519192] "temp"
    (2586995 'move' tmp[2586991](2586993 'set reference' error[2539950]))
    (2539958 call _local_decodeByteBuffer[2538627] call_tmp[2539934] call_tmp[2539914] strict[173692] tmp[2586991] ret_tmp[2539955])
    (2539964 'move' call_tmp[2539948] ret_tmp[2539955])
    val errorExists[2539967]:bool[10] "temp"
    (2539969 'move' errorExists[2539967](2539971 '!=' error[2539950] nil[44]))
    if errorExists[2539967]
    {
      (2539976 '=' error[2539941] error[2539950])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2539985] _endcreateStringWithNewBuffer[2539985]
    }
    (2539982 'move' ret[2539946] call_tmp[2539948])
    label _endcreateStringWithNewBuffer[2539985]
    val errorExists[2539987]:bool[10] "temp"
    (2539989 'move' errorExists[2539987](2539991 '!=' error[2539941] nil[44]))
    if errorExists[2539987]
    {
      (2539996 '=' error[2539909] error[2539941])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2540005] _endcreateStringWithNewBuffer[2540005]
    }
    (2540002 'move' ret[2539932] ret[2539946])
    label _endcreateStringWithNewBuffer[2540005]
    val errorExists[2540007]:bool[10] "temp"
    (2540009 'move' errorExists[2540007](2540011 '!=' error[2539909] nil[44]))
    if errorExists[2540007]
    {
      gotoErrorHandling handler[2540022] handler[2540022]
    }
    (2540019 'move' thrownFileS[2539907] ret[2539932])
    label handler[2540022]
    val errorExists[2540024]:bool[10] "temp"
    (2540026 'move' errorExists[2540024](2540028 '!=' error[2539909] nil[44]))
    if errorExists[2540024]
    {
      (2540034 call _local_chpl_uncaught_error[2539708] error[2539909])
    }
    val coerce_tmp[2540037]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (2540039 'move' coerce_tmp[2540037] err[2539710])
    const-val coerce_tmp[2540042]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2543754 'local_check' coerce_tmp[2540037] c"cannot access remote data in local block")
    val local_coerce_tmp[2543751]:Error[167984] "temp"
    (2543757 'move' local_coerce_tmp[2543751] coerce_tmp[2540037])
    val tmp[2586998]:int(64)[13] "temp"
    (2540044 'move' tmp[2586998](2540046 '.v' local_coerce_tmp[2543751] thrownLine[167917]))
    (2587001 'move' coerce_tmp[2540042] tmp[2586998])
    (2540049 'noop')
    const-val call_tmp[2540050]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540052]:string[26] "temp"
    (2540055 call _local_chpl_describe_error[2543760] err[2539710] ret_tmp[2540052])
    (2540058 'move' call_tmp[2540050] ret_tmp[2540052])
    const-val call_tmp[2540061]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540063]:string[26] "temp"
    wide-ref tmp[2587004]:string[26] "temp"
    (2587008 'move' tmp[2587004](2587006 'set reference' call_tmp[2540050]))
    (2540066 call _local_+[2535701] local__str_literal_2255[2539738] tmp[2587004] ret_tmp[2540063])
    (2540070 'move' call_tmp[2540061] ret_tmp[2540063])
    const-val call_tmp[2540073]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540075]:string[26] "temp"
    wide-ref tmp[2587011]:string[26] "temp"
    (2587015 'move' tmp[2587011](2587013 'set reference' local__str_literal_2257[2539733]))
    (2540078 call _local_+[2535701] call_tmp[2540061] tmp[2587011] ret_tmp[2540075])
    (2540082 'move' call_tmp[2540073] ret_tmp[2540075])
    const-val call_tmp[2540085]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540087]:string[26] "temp"
    wide-ref tmp[2587018]:string[26] "temp"
    (2587022 'move' tmp[2587018](2587020 'set reference' thrownFileS[2539907]))
    (2540090 call _local_+[2535701] call_tmp[2540073] tmp[2587018] ret_tmp[2540087])
    (2540094 'move' call_tmp[2540085] ret_tmp[2540087])
    const-val call_tmp[2540097]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540099]:string[26] "temp"
    wide-ref tmp[2587025]:string[26] "temp"
    (2587029 'move' tmp[2587025](2587027 'set reference' local__str_literal_2033[2539728]))
    (2540102 call _local_+[2535701] call_tmp[2540085] tmp[2587025] ret_tmp[2540099])
    (2540106 'move' call_tmp[2540097] ret_tmp[2540099])
    const-val call_tmp[2540109]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540111]:string[26] "temp"
    (2540114 call _local__cast[2537945] coerce_tmp[2540042] ret_tmp[2540111])
    (2540117 'move' call_tmp[2540109] ret_tmp[2540111])
    const-val call_tmp[2540120]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540122]:string[26] "temp"
    wide-ref tmp[2587032]:string[26] "temp"
    (2587036 'move' tmp[2587032](2587034 'set reference' call_tmp[2540109]))
    (2540125 call _local_+[2535701] call_tmp[2540097] tmp[2587032] ret_tmp[2540122])
    (2540129 'move' call_tmp[2540120] ret_tmp[2540122])
    const-val call_tmp[2540132]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540134]:string[26] "temp"
    wide-ref tmp[2587039]:string[26] "temp"
    (2587043 'move' tmp[2587039](2587041 'set reference' local__str_literal_2259[2539723]))
    (2540137 call _local_+[2535701] call_tmp[2540120] tmp[2587039] ret_tmp[2540134])
    (2540141 'move' call_tmp[2540132] ret_tmp[2540134])
    const-val call_tmp[2540144]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540146]:string[26] "temp"
    wide-ref tmp[2587046]:string[26] "temp"
    (2587050 'move' tmp[2587046](2587048 'set reference' local__str_literal_2257[2539733]))
    (2540149 call _local_+[2535701] call_tmp[2540132] tmp[2587046] ret_tmp[2540146])
    (2540153 'move' call_tmp[2540144] ret_tmp[2540146])
    const-val call_tmp[2540156]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540158]:string[26] "temp"
    wide-ref tmp[2587053]:string[26] "temp"
    (2587057 'move' tmp[2587053](2587055 'set reference' myFileS[2539754]))
    (2540161 call _local_+[2535701] call_tmp[2540144] tmp[2587053] ret_tmp[2540158])
    (2540165 'move' call_tmp[2540156] ret_tmp[2540158])
    const-val call_tmp[2540168]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540170]:string[26] "temp"
    wide-ref tmp[2587060]:string[26] "temp"
    (2587064 'move' tmp[2587060](2587062 'set reference' local__str_literal_2033[2539728]))
    (2540173 call _local_+[2535701] call_tmp[2540156] tmp[2587060] ret_tmp[2540170])
    (2540177 'move' call_tmp[2540168] ret_tmp[2540170])
    const-val call_tmp[2540180]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540182]:string[26] "temp"
    (2540185 call _local__cast[2537945] call_tmp[2539884] ret_tmp[2540182])
    (2540188 'move' call_tmp[2540180] ret_tmp[2540182])
    const-val call_tmp[2540191]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2540193]:string[26] "temp"
    wide-ref tmp[2587067]:string[26] "temp"
    (2587071 'move' tmp[2587067](2587069 'set reference' call_tmp[2540180]))
    (2540196 call _local_+[2535701] call_tmp[2540168] tmp[2587067] ret_tmp[2540193])
    (2540200 'move' call_tmp[2540191] ret_tmp[2540193])
    const-val call_tmp[2540203]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[2540205]:string[26] "temp"
    wide-ref tmp[2587074]:string[26] "temp"
    (2587078 'move' tmp[2587074](2587076 'set reference' local__str_literal_2261[2539718]))
    (2540208 call _local_+[2535701] call_tmp[2540191] tmp[2587074] ret_tmp[2540205])
    (2540212 'move' call_tmp[2540203] ret_tmp[2540205])
    const-val s[2540215]:string[26] "dead at end of block" "insert auto destroy"
    (2540217 'move' s[2540215] call_tmp[2540203])
    const-val coerce_tmp[2540220]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2587081]:int(32)[95] "temp"
    (2540222 'move' tmp[2587081](2540224 '.v' s[2540215] locale_id[30757]))
    (2587084 'move' coerce_tmp[2540220] tmp[2587081])
    const-val call_tmp[2540227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2540229 'move' call_tmp[2540227](2540231 '!=' coerce_tmp[2540220] chpl_nodeID[208207]))
    if call_tmp[2540227]
    {
      (2540237 call _local_halt[2526766] local__str_literal_4796[2539713])
    }
    val coerce_tmp[2540240]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2587087]:c_ptr(uint(8))[937484] "temp"
    (2540242 'move' tmp[2587087](2540244 '.v' s[2540215] buff[30740]))
    (2587090 'move' coerce_tmp[2540240] tmp[2587087])
    const-val call_tmp[2540247]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2540249 'move' call_tmp[2540247](2540251 'cast' c_string[19] coerce_tmp[2540240]))
    (2540255 call chpl_error_preformatted[1788931] call_tmp[2540247])
    ref i_x[2540257]:string[26] "temp"
    (2540259 'move' i_x[2540257](2540261 'set reference' s[2540215]))
    wide-ref tmp[2587093]:string[26] "temp"
    (2587096 'move' tmp[2587093] i_x[2540257])
    (2540264 call _local_deinit[2529591] tmp[2587093])
    ref i_x[2540266]:string[26] "temp"
    (2540268 'move' i_x[2540266](2540270 'set reference' call_tmp[2540191]))
    wide-ref tmp[2587099]:string[26] "temp"
    (2587102 'move' tmp[2587099] i_x[2540266])
    (2540273 call _local_deinit[2529591] tmp[2587099])
    ref i_x[2540275]:string[26] "temp"
    (2540277 'move' i_x[2540275](2540279 'set reference' call_tmp[2540180]))
    wide-ref tmp[2587105]:string[26] "temp"
    (2587108 'move' tmp[2587105] i_x[2540275])
    (2540282 call _local_deinit[2529591] tmp[2587105])
    ref i_x[2540284]:string[26] "temp"
    (2540286 'move' i_x[2540284](2540288 'set reference' call_tmp[2540168]))
    wide-ref tmp[2587111]:string[26] "temp"
    (2587114 'move' tmp[2587111] i_x[2540284])
    (2540291 call _local_deinit[2529591] tmp[2587111])
    ref i_x[2540293]:string[26] "temp"
    (2540295 'move' i_x[2540293](2540297 'set reference' call_tmp[2540156]))
    wide-ref tmp[2587117]:string[26] "temp"
    (2587120 'move' tmp[2587117] i_x[2540293])
    (2540300 call _local_deinit[2529591] tmp[2587117])
    ref i_x[2540302]:string[26] "temp"
    (2540304 'move' i_x[2540302](2540306 'set reference' call_tmp[2540144]))
    wide-ref tmp[2587123]:string[26] "temp"
    (2587126 'move' tmp[2587123] i_x[2540302])
    (2540309 call _local_deinit[2529591] tmp[2587123])
    ref i_x[2540311]:string[26] "temp"
    (2540313 'move' i_x[2540311](2540315 'set reference' call_tmp[2540132]))
    wide-ref tmp[2587129]:string[26] "temp"
    (2587132 'move' tmp[2587129] i_x[2540311])
    (2540318 call _local_deinit[2529591] tmp[2587129])
    ref i_x[2540320]:string[26] "temp"
    (2540322 'move' i_x[2540320](2540324 'set reference' call_tmp[2540120]))
    wide-ref tmp[2587135]:string[26] "temp"
    (2587138 'move' tmp[2587135] i_x[2540320])
    (2540327 call _local_deinit[2529591] tmp[2587135])
    ref i_x[2540329]:string[26] "temp"
    (2540331 'move' i_x[2540329](2540333 'set reference' call_tmp[2540109]))
    wide-ref tmp[2587141]:string[26] "temp"
    (2587144 'move' tmp[2587141] i_x[2540329])
    (2540336 call _local_deinit[2529591] tmp[2587141])
    ref i_x[2540338]:string[26] "temp"
    (2540340 'move' i_x[2540338](2540342 'set reference' call_tmp[2540097]))
    wide-ref tmp[2587147]:string[26] "temp"
    (2587150 'move' tmp[2587147] i_x[2540338])
    (2540345 call _local_deinit[2529591] tmp[2587147])
    ref i_x[2540347]:string[26] "temp"
    (2540349 'move' i_x[2540347](2540351 'set reference' call_tmp[2540085]))
    wide-ref tmp[2587153]:string[26] "temp"
    (2587156 'move' tmp[2587153] i_x[2540347])
    (2540354 call _local_deinit[2529591] tmp[2587153])
    ref i_x[2540356]:string[26] "temp"
    (2540358 'move' i_x[2540356](2540360 'set reference' call_tmp[2540073]))
    wide-ref tmp[2587159]:string[26] "temp"
    (2587162 'move' tmp[2587159] i_x[2540356])
    (2540363 call _local_deinit[2529591] tmp[2587159])
    ref i_x[2540365]:string[26] "temp"
    (2540367 'move' i_x[2540365](2540369 'set reference' call_tmp[2540061]))
    wide-ref tmp[2587165]:string[26] "temp"
    (2587168 'move' tmp[2587165] i_x[2540365])
    (2540372 call _local_deinit[2529591] tmp[2587165])
    ref i_x[2540374]:string[26] "temp"
    (2540376 'move' i_x[2540374](2540378 'set reference' call_tmp[2540050]))
    wide-ref tmp[2587171]:string[26] "temp"
    (2587174 'move' tmp[2587171] i_x[2540374])
    (2540381 call _local_deinit[2529591] tmp[2587171])
    ref i_x[2540383]:string[26] "temp"
    (2540385 'move' i_x[2540383](2540387 'set reference' thrownFileS[2539907]))
    wide-ref tmp[2587177]:string[26] "temp"
    (2587180 'move' tmp[2587177] i_x[2540383])
    (2540390 call _local_deinit[2529591] tmp[2587177])
    ref i_x[2540392]:string[26] "temp"
    (2540394 'move' i_x[2540392](2540396 'set reference' myFileS[2539754]))
    wide-ref tmp[2587183]:string[26] "temp"
    (2587186 'move' tmp[2587183] i_x[2540392])
    (2540399 call _local_deinit[2529591] tmp[2587183])
    (2540401 return _void[55])
  }
  function chpl_uncaught_error[170289](const in arg err[170286]:__wide_Error[2519192]) : void[4] "always propagate line file info" "function terminates program" "insert line file info" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val local__str_literal_4796[2514984]:string[26] "temp"
    (2514985 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2261[2514978]:string[26] "temp"
    (2514979 'move' ": uncaught here" ": uncaught here")
    const-val local__str_literal_2259[2514970]:string[26] "temp"
    (2514971 'move' ": thrown here" ": thrown here")
    const-val local__str_literal_2033[2514964]:string[26] "temp"
    (2514965 'move' ":" ":")
    const-val local__str_literal_2257[2514958]:string[26] "temp"
    (2514959 'move' "\n  " "\n  ")
    const-val local__str_literal_2255[2514952]:string[26] "temp"
    (2514953 'move' "uncaught " "uncaught ")
    const-val call_tmp[680466]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
    (680469 'move' call_tmp[680466](170321 '_get_user_file'))
    const-val call_tmp[680471]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680474 'move' call_tmp[680471](170322 'chpl_lookupFilename' call_tmp[680466]))
    const-val myFileS[170328]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1842571]:__wide_Error[2519192] "error variable" "temp"
    (1842587 'move' error[1842571] nil[44])
    const-val call_tmp[2270881]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270883 'move' call_tmp[2270881](2270885 'string_length_bytes' call_tmp[680471]))
    val errorExists[2169844]:bool[10] "temp"
    (2169849 'move' errorExists[2169844](2169846 '!=' error[1842571] nil[44]))
    if errorExists[2169844]
    {
      gotoErrorHandling handler[1842572] handler[1842572]
    }
    const-val ret[2204434]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2204436]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2204438 'move' call_tmp[2204436](2204440 'cast' c_ptr(uint(8))[937484] call_tmp[680471]))
    val error[2204445]:__wide_Error[2519192] "error variable" "temp"
    (2204447 'move' error[2204445] nil[44])
    const-val ret[2204450]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2204452]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2204454]:__wide_Error[2519192] "error variable" "temp"
    (2204456 'move' error[2204454] nil[44])
    const-val ret_tmp[2204459]:string[26] "temp"
    ref tmp[2565463]:__wide_Error[2519192] "temp"
    (2565467 'move' tmp[2565463](2565465 'set reference' error[2204454]))
    (2204462 call decodeByteBuffer[173938] call_tmp[2204436] call_tmp[2270881] strict[173692] tmp[2565463] ret_tmp[2204459])
    (2204468 'move' call_tmp[2204452] ret_tmp[2204459])
    val errorExists[2204471]:bool[10] "temp"
    (2204473 'move' errorExists[2204471](2204475 '!=' error[2204454] nil[44]))
    if errorExists[2204471]
    {
      (2204480 '=' error[2204445] error[2204454])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204489] _endcreateStringWithNewBuffer[2204489]
    }
    (2204486 'move' ret[2204450] call_tmp[2204452])
    label _endcreateStringWithNewBuffer[2204489]
    val errorExists[2204494]:bool[10] "temp"
    (2204496 'move' errorExists[2204494](2204498 '!=' error[2204445] nil[44]))
    if errorExists[2204494]
    {
      (2204503 '=' error[1842571] error[2204445])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204512] _endcreateStringWithNewBuffer[2204512]
    }
    (2204509 'move' ret[2204434] ret[2204450])
    label _endcreateStringWithNewBuffer[2204512]
    val errorExists[2169852]:bool[10] "temp"
    (2169857 'move' errorExists[2169852](2169854 '!=' error[1842571] nil[44]))
    if errorExists[2169852]
    {
      gotoErrorHandling handler[1842572] handler[1842572]
    }
    (544724 'move' myFileS[170328] ret[2204434])
    label handler[1842572]
    val errorExists[2169860]:bool[10] "temp"
    (2169865 'move' errorExists[2169860](2169862 '!=' error[1842571] nil[44]))
    if errorExists[2169860]
    {
      (1842593 call chpl_uncaught_error[170289] error[1842571])
    }
    const-val call_tmp[680481]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (680484 'move' call_tmp[680481](170346 '_get_user_line'))
    val coerce_tmp[1788805]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1788810 'move' coerce_tmp[1788805] err[170286])
    wide-ref call_tmp[2282739]:int(32)[95] "dead after last mention" "maybe param" "temp"
    (2282741 'move' call_tmp[2282739](2282743 '.' coerce_tmp[1788805] thrownFileId[167925]))
    const-val call_tmp[680493]:c_string[19] "dead at end of block" "maybe param" "temp"
    (680496 'move' call_tmp[680493](170358 'chpl_lookupFilename' call_tmp[2282739]))
    const-val thrownFileS[170364]:string[26] "dead at end of block" "insert auto destroy" "split inited"
    val error[1842604]:__wide_Error[2519192] "error variable" "temp"
    (1842620 'move' error[1842604] nil[44])
    const-val call_tmp[2270903]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2270905 'move' call_tmp[2270903](2270907 'string_length_bytes' call_tmp[680493]))
    val errorExists[2169868]:bool[10] "temp"
    (2169873 'move' errorExists[2169868](2169870 '!=' error[1842604] nil[44]))
    if errorExists[2169868]
    {
      gotoErrorHandling handler[1842605] handler[1842605]
    }
    const-val ret[2204532]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2204534]:c_ptr(uint(8))[937484] "dead after last mention" "expr temp" "maybe param" "temp"
    (2204536 'move' call_tmp[2204534](2204538 'cast' c_ptr(uint(8))[937484] call_tmp[680493]))
    val error[2204543]:__wide_Error[2519192] "error variable" "temp"
    (2204545 'move' error[2204543] nil[44])
    const-val ret[2204548]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2204550]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2204552]:__wide_Error[2519192] "error variable" "temp"
    (2204554 'move' error[2204552] nil[44])
    const-val ret_tmp[2204557]:string[26] "temp"
    ref tmp[2565470]:__wide_Error[2519192] "temp"
    (2565474 'move' tmp[2565470](2565472 'set reference' error[2204552]))
    (2204560 call decodeByteBuffer[173938] call_tmp[2204534] call_tmp[2270903] strict[173692] tmp[2565470] ret_tmp[2204557])
    (2204566 'move' call_tmp[2204550] ret_tmp[2204557])
    val errorExists[2204569]:bool[10] "temp"
    (2204571 'move' errorExists[2204569](2204573 '!=' error[2204552] nil[44]))
    if errorExists[2204569]
    {
      (2204578 '=' error[2204543] error[2204552])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204587] _endcreateStringWithNewBuffer[2204587]
    }
    (2204584 'move' ret[2204548] call_tmp[2204550])
    label _endcreateStringWithNewBuffer[2204587]
    val errorExists[2204592]:bool[10] "temp"
    (2204594 'move' errorExists[2204592](2204596 '!=' error[2204543] nil[44]))
    if errorExists[2204592]
    {
      (2204601 '=' error[1842604] error[2204543])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2204610] _endcreateStringWithNewBuffer[2204610]
    }
    (2204607 'move' ret[2204532] ret[2204548])
    label _endcreateStringWithNewBuffer[2204610]
    val errorExists[2169876]:bool[10] "temp"
    (2169881 'move' errorExists[2169876](2169878 '!=' error[1842604] nil[44]))
    if errorExists[2169876]
    {
      gotoErrorHandling handler[1842605] handler[1842605]
    }
    (544742 'move' thrownFileS[170364] ret[2204532])
    label handler[1842605]
    val errorExists[2169884]:bool[10] "temp"
    (2169889 'move' errorExists[2169884](2169886 '!=' error[1842604] nil[44]))
    if errorExists[2169884]
    {
      (1842626 call chpl_uncaught_error[170289] error[1842604])
    }
    val coerce_tmp[1788847]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1788852 'move' coerce_tmp[1788847] err[170286])
    const-val coerce_tmp[1788857]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    val tmp[2556545]:int(64)[13] "temp"
    (1788861 'move' tmp[2556545](2502702 '.v' coerce_tmp[1788847] thrownLine[167917]))
    (2556548 'move' coerce_tmp[1788857] tmp[2556545])
    (544745 'noop')
    const-val call_tmp[680510]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1864728]:string[26] "temp"
    (170408 call chpl_describe_error[169835] err[170286] ret_tmp[1864728])
    (1864731 'move' call_tmp[680510] ret_tmp[1864728])
    const-val call_tmp[680515]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863376]:string[26] "temp"
    wide-ref tmp[2552398]:string[26] "temp"
    (2552402 'move' tmp[2552398](2552400 'set reference' call_tmp[680510]))
    (170409 call +[38345] "uncaught " tmp[2552398] ret_tmp[1863376])
    (1863379 'move' call_tmp[680515] ret_tmp[1863376])
    const-val call_tmp[680520]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863382]:string[26] "temp"
    wide-ref tmp[2552405]:string[26] "temp"
    (2552409 'move' tmp[2552405](2552407 'set reference' "\n  "))
    (170428 call +[38345] call_tmp[680515] tmp[2552405] ret_tmp[1863382])
    (1863385 'move' call_tmp[680520] ret_tmp[1863382])
    const-val call_tmp[680525]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863388]:string[26] "temp"
    wide-ref tmp[2552412]:string[26] "temp"
    (2552416 'move' tmp[2552412](2552414 'set reference' thrownFileS[170364]))
    (170431 call +[38345] call_tmp[680520] tmp[2552412] ret_tmp[1863388])
    (1863391 'move' call_tmp[680525] ret_tmp[1863388])
    const-val call_tmp[680530]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863394]:string[26] "temp"
    wide-ref tmp[2552419]:string[26] "temp"
    (2552423 'move' tmp[2552419](2552421 'set reference' ":"))
    (170434 call +[38345] call_tmp[680525] tmp[2552419] ret_tmp[1863394])
    (1863397 'move' call_tmp[680530] ret_tmp[1863394])
    const-val call_tmp[680535]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866706]:string[26] "temp"
    (170438 call _cast[1063214] coerce_tmp[1788857] ret_tmp[1866706])
    (1866709 'move' call_tmp[680535] ret_tmp[1866706])
    const-val call_tmp[680540]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863400]:string[26] "temp"
    wide-ref tmp[2552426]:string[26] "temp"
    (2552430 'move' tmp[2552426](2552428 'set reference' call_tmp[680535]))
    (170440 call +[38345] call_tmp[680530] tmp[2552426] ret_tmp[1863400])
    (1863403 'move' call_tmp[680540] ret_tmp[1863400])
    const-val call_tmp[680545]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863406]:string[26] "temp"
    wide-ref tmp[2552433]:string[26] "temp"
    (2552437 'move' tmp[2552433](2552435 'set reference' ": thrown here"))
    (170459 call +[38345] call_tmp[680540] tmp[2552433] ret_tmp[1863406])
    (1863409 'move' call_tmp[680545] ret_tmp[1863406])
    const-val call_tmp[680550]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863412]:string[26] "temp"
    wide-ref tmp[2552440]:string[26] "temp"
    (2552444 'move' tmp[2552440](2552442 'set reference' "\n  "))
    (170462 call +[38345] call_tmp[680545] tmp[2552440] ret_tmp[1863412])
    (1863415 'move' call_tmp[680550] ret_tmp[1863412])
    const-val call_tmp[680555]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863418]:string[26] "temp"
    wide-ref tmp[2552447]:string[26] "temp"
    (2552451 'move' tmp[2552447](2552449 'set reference' myFileS[170328]))
    (170465 call +[38345] call_tmp[680550] tmp[2552447] ret_tmp[1863418])
    (1863421 'move' call_tmp[680555] ret_tmp[1863418])
    const-val call_tmp[680560]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863424]:string[26] "temp"
    wide-ref tmp[2552454]:string[26] "temp"
    (2552458 'move' tmp[2552454](2552456 'set reference' ":"))
    (170468 call +[38345] call_tmp[680555] tmp[2552454] ret_tmp[1863424])
    (1863427 'move' call_tmp[680560] ret_tmp[1863424])
    const-val call_tmp[680565]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866712]:string[26] "temp"
    (170472 call _cast[1063214] call_tmp[680481] ret_tmp[1866712])
    (1866715 'move' call_tmp[680565] ret_tmp[1866712])
    const-val call_tmp[680570]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863430]:string[26] "temp"
    wide-ref tmp[2552461]:string[26] "temp"
    (2552465 'move' tmp[2552461](2552463 'set reference' call_tmp[680565]))
    (170474 call +[38345] call_tmp[680560] tmp[2552461] ret_tmp[1863430])
    (1863433 'move' call_tmp[680570] ret_tmp[1863430])
    const-val call_tmp[680575]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1863436]:string[26] "temp"
    wide-ref tmp[2552468]:string[26] "temp"
    (2552472 'move' tmp[2552468](2552470 'set reference' ": uncaught here"))
    (170493 call +[38345] call_tmp[680570] tmp[2552468] ret_tmp[1863436])
    (1863439 'move' call_tmp[680575] ret_tmp[1863436])
    const-val s[170495]:string[26] "dead at end of block" "insert auto destroy"
    (544747 'move' s[170495] call_tmp[680575])
    const-val coerce_tmp[2216021]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567084]:int(32)[95] "temp"
    (2216023 'move' tmp[2567084](2216025 '.v' s[170495] locale_id[30757]))
    (2567087 'move' coerce_tmp[2216021] tmp[2567084])
    const-val call_tmp[2216028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216030 'move' call_tmp[2216028](2216032 '!=' coerce_tmp[2216021] chpl_nodeID[208207]))
    if call_tmp[2216028]
    {
      (2216038 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2216041]:c_ptr(uint(8))[937484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2567090]:c_ptr(uint(8))[937484] "temp"
    (2216043 'move' tmp[2567090](2216045 '.v' s[170495] buff[30740]))
    (2567093 'move' coerce_tmp[2216041] tmp[2567090])
    const-val call_tmp[2216048]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216050 'move' call_tmp[2216048](2216052 'cast' c_string[19] coerce_tmp[2216041]))
    (170507 call chpl_error_preformatted[1788931] call_tmp[2216048])
    ref i_x[2193187]:string[26] "temp"
    (2193191 'move' i_x[2193187](2193189 'set reference' s[170495]))
    wide-ref tmp[2563986]:string[26] "temp"
    (2563989 'move' tmp[2563986] i_x[2193187])
    (2193195 call deinit[30834] tmp[2563986])
    ref i_x[2193199]:string[26] "temp"
    (2193203 'move' i_x[2193199](2193201 'set reference' call_tmp[680570]))
    wide-ref tmp[2563992]:string[26] "temp"
    (2563995 'move' tmp[2563992] i_x[2193199])
    (2193207 call deinit[30834] tmp[2563992])
    ref i_x[2193211]:string[26] "temp"
    (2193215 'move' i_x[2193211](2193213 'set reference' call_tmp[680565]))
    wide-ref tmp[2563998]:string[26] "temp"
    (2564001 'move' tmp[2563998] i_x[2193211])
    (2193219 call deinit[30834] tmp[2563998])
    ref i_x[2193223]:string[26] "temp"
    (2193227 'move' i_x[2193223](2193225 'set reference' call_tmp[680560]))
    wide-ref tmp[2564004]:string[26] "temp"
    (2564007 'move' tmp[2564004] i_x[2193223])
    (2193231 call deinit[30834] tmp[2564004])
    ref i_x[2193235]:string[26] "temp"
    (2193239 'move' i_x[2193235](2193237 'set reference' call_tmp[680555]))
    wide-ref tmp[2564010]:string[26] "temp"
    (2564013 'move' tmp[2564010] i_x[2193235])
    (2193243 call deinit[30834] tmp[2564010])
    ref i_x[2193247]:string[26] "temp"
    (2193251 'move' i_x[2193247](2193249 'set reference' call_tmp[680550]))
    wide-ref tmp[2564016]:string[26] "temp"
    (2564019 'move' tmp[2564016] i_x[2193247])
    (2193255 call deinit[30834] tmp[2564016])
    ref i_x[2193259]:string[26] "temp"
    (2193263 'move' i_x[2193259](2193261 'set reference' call_tmp[680545]))
    wide-ref tmp[2564022]:string[26] "temp"
    (2564025 'move' tmp[2564022] i_x[2193259])
    (2193267 call deinit[30834] tmp[2564022])
    ref i_x[2193271]:string[26] "temp"
    (2193275 'move' i_x[2193271](2193273 'set reference' call_tmp[680540]))
    wide-ref tmp[2564028]:string[26] "temp"
    (2564031 'move' tmp[2564028] i_x[2193271])
    (2193279 call deinit[30834] tmp[2564028])
    ref i_x[2193283]:string[26] "temp"
    (2193287 'move' i_x[2193283](2193285 'set reference' call_tmp[680535]))
    wide-ref tmp[2564034]:string[26] "temp"
    (2564037 'move' tmp[2564034] i_x[2193283])
    (2193291 call deinit[30834] tmp[2564034])
    ref i_x[2193295]:string[26] "temp"
    (2193299 'move' i_x[2193295](2193297 'set reference' call_tmp[680530]))
    wide-ref tmp[2564040]:string[26] "temp"
    (2564043 'move' tmp[2564040] i_x[2193295])
    (2193303 call deinit[30834] tmp[2564040])
    ref i_x[2193307]:string[26] "temp"
    (2193311 'move' i_x[2193307](2193309 'set reference' call_tmp[680525]))
    wide-ref tmp[2564046]:string[26] "temp"
    (2564049 'move' tmp[2564046] i_x[2193307])
    (2193315 call deinit[30834] tmp[2564046])
    ref i_x[2193319]:string[26] "temp"
    (2193323 'move' i_x[2193319](2193321 'set reference' call_tmp[680520]))
    wide-ref tmp[2564052]:string[26] "temp"
    (2564055 'move' tmp[2564052] i_x[2193319])
    (2193327 call deinit[30834] tmp[2564052])
    ref i_x[2193331]:string[26] "temp"
    (2193335 'move' i_x[2193331](2193333 'set reference' call_tmp[680515]))
    wide-ref tmp[2564058]:string[26] "temp"
    (2564061 'move' tmp[2564058] i_x[2193331])
    (2193339 call deinit[30834] tmp[2564058])
    ref i_x[2193343]:string[26] "temp"
    (2193347 'move' i_x[2193343](2193345 'set reference' call_tmp[680510]))
    wide-ref tmp[2564064]:string[26] "temp"
    (2564067 'move' tmp[2564064] i_x[2193343])
    (2193351 call deinit[30834] tmp[2564064])
    ref i_x[2193355]:string[26] "temp"
    (2193359 'move' i_x[2193355](2193357 'set reference' thrownFileS[170364]))
    wide-ref tmp[2564070]:string[26] "temp"
    (2564073 'move' tmp[2564070] i_x[2193355])
    (2193363 call deinit[30834] tmp[2564070])
    ref i_x[2193367]:string[26] "temp"
    (2193371 'move' i_x[2193367](2193369 'set reference' myFileS[170328]))
    wide-ref tmp[2564076]:string[26] "temp"
    (2564079 'move' tmp[2564076] i_x[2193367])
    (2193375 call deinit[30834] tmp[2564076])
    (522348 return _void[55])
  }
  function _local_chpl_propagate_error[2542418](const in arg err[2542420]:__wide_Error[2519192]) : void[4] "always propagate line file info" "insert line file info" "local fn" "no doc" "resolved" "no return value for void"
  {
    (2542424 call _local_chpl_uncaught_error[2539708] err[2542420])
    (2542426 return _void[55])
  }
  function chpl_propagate_error[170518](const in arg err[170515]:__wide_Error[2519192]) : void[4] "always propagate line file info" "insert line file info" "no doc" "resolved" "no return value for void"
  {
    (170523 call chpl_uncaught_error[170289] err[170515])
    (522350 return _void[55])
  }
  function chpl_forall_error[170535](const in arg err[170532]:Error[167984]) : Error[167984] "no doc" "resolved"
  {
    val ret[522354]:Error[167984] "dead after last mention" "RVV" "temp"
    val _formal_type_tmp_[2458931]:TaskErrors[169702] "temp"
    val ret[2458933]:TaskErrors[169702] "dead after last mention" "RVV" "temp"
    val coerce_tmp[2458935]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2458937 'move' coerce_tmp[2458935](2458939 'cast' object[22] err[170532]))
    const-val call_tmp[2458942]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2458944 'move' call_tmp[2458942](2458946 'ptr_eq' coerce_tmp[2458935] nil[44]))
    if call_tmp[2458942]
    {
      (2458951 'move' ret[2458933](2458953 'cast' TaskErrors[169702] nil[44]))
      gotoReturn _end__cast[2458969] _end__cast[2458969]
    }
    val call_tmp[2458959]:TaskErrors[169702] "dead at end of block" "maybe param" "temp"
    (2458961 'move' call_tmp[2458959](2458963 'dynamic_cast' _formal_type_tmp_[2458931] err[170532]))
    (2458966 'move' ret[2458933] call_tmp[2458959])
    label _end__cast[2458969]
    val coerce_tmp[1789194]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1789199 'move' coerce_tmp[1789194](1789196 'cast' object[22] ret[2458933]))
    const-val call_tmp[2177047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2177049 'move' call_tmp[2177047](2177051 'ptr_neq' coerce_tmp[1789194] nil[44]))
    if call_tmp[2177047]
    {
      (1789379 'move' ret[522354] err[170532])
      gotoReturn _end_chpl_forall_error[522352] _end_chpl_forall_error[522352]
    }
    val new_temp[1789360]:TaskErrors[169702] "dead after last mention" "temp"
    (1789362 'move' new_temp[1789360](1789206 call _new[1789310] err[170532]))
    (522366 'move' ret[522354](1789381 'cast' Error[167984] new_temp[1789360]))
    label _end_chpl_forall_error[522352]
    (522356 return ret[522354])
  }
  function chpl_enum_cast_error[1071916](const in arg casted[1071918]:uint(8)[100], const  ref arg enumName[1071920]:string[26], ref arg error_out[1844878]:__wide_Error[2519192]) : void[4] throws "always propagate line file info" "insert line file info" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2515931]:string[26] "temp"
    (2515932 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_1107[2515925]:string[26] "temp"
    (2515926 'move' "'" "'")
    const-val local__str_literal_2267[2515919]:string[26] "temp"
    (2515920 'move' "' to enum '" "' to enum '")
    const-val local__str_literal_2269[2515913]:string[26] "temp"
    (2515914 'move' "bad cast from int '" "bad cast from int '")
    const-val call_tmp[1071926]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867026]:string[26] "temp"
    (1071931 call _cast[1071980] casted[1071918] ret_tmp[1867026])
    (1867029 'move' call_tmp[1071926] ret_tmp[1867026])
    const-val call_tmp[1071934]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863568]:string[26] "temp"
    wide-ref tmp[2553571]:string[26] "temp"
    (2553575 'move' tmp[2553571](2553573 'set reference' call_tmp[1071926]))
    (1071939 call +[38345] "bad cast from int '" tmp[2553571] ret_tmp[1863568])
    (1863571 'move' call_tmp[1071934] ret_tmp[1863568])
    const-val call_tmp[1071942]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863574]:string[26] "temp"
    wide-ref tmp[2553578]:string[26] "temp"
    (2553582 'move' tmp[2553578](2553580 'set reference' "' to enum '"))
    (1071947 call +[38345] call_tmp[1071934] tmp[2553578] ret_tmp[1863574])
    (1863577 'move' call_tmp[1071942] ret_tmp[1863574])
    const-val call_tmp[1071950]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863580]:string[26] "temp"
    wide-ref tmp[2553585]:string[26] "temp"
    (2553588 'move' tmp[2553585] enumName[1071920])
    (1071955 call +[38345] call_tmp[1071942] tmp[2553585] ret_tmp[1863580])
    (1863583 'move' call_tmp[1071950] ret_tmp[1863580])
    const-val call_tmp[1071958]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
    val new_temp[1073616]:IllegalArgumentError[168246] "dead after last mention" "temp"
    (1073618 'move' new_temp[1073616](1073542 call _new[1073563] call_tmp[1071950] "'"))
    const-val initTemp[1073637]:owned IllegalArgumentError[1064619] "dead after last mention" "delay instantiation" "temp"
    (1073640 call init[1064270] initTemp[1073637] new_temp[1073616])
    (1071960 'move' call_tmp[1071958] initTemp[1073637])
    val call_tmp[1071968]:__wide_Error[2519192] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1073654]:owned Error[966519] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
    const-val ret_tmp[1866910]:owned Error[966519] "temp"
    ref i_x[2320399]:owned IllegalArgumentError[1064619] "temp"
    (2320403 'move' i_x[2320399](2320401 'set reference' call_tmp[1071958]))
    ref i__retArg[2320405]:owned Error[966519] "temp"
    (2320409 'move' i__retArg[2320405](2320407 'set reference' ret_tmp[1866910]))
    val _formal_tmp_x[2320412]:owned IllegalArgumentError[1064619] "dead at end of block" "insert auto destroy" "no copy" "temp"
    (2320414 'move' _formal_tmp_x[2320412] i_x[2320399])
    const-val ret[2320417]:owned Error[966519] "dead after last mention" "RVV" "temp"
    ref i_this[2320419]:owned IllegalArgumentError[1064619] "temp"
    (2320421 'move' i_this[2320419](2320423 'set reference' _formal_tmp_x[2320412]))
    val coerce_tmp[2320425]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2571112]:IllegalArgumentError[168246] "temp"
    (2320427 'move' tmp[2571112](2320429 '.v' i_this[2320419] chpl_p[1064614]))
    (2571115 'move' coerce_tmp[2320425] tmp[2571112])
    val call_tmp[2320432]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320434 'move' call_tmp[2320432](2320436 'cast' Error[167984] coerce_tmp[2320425]))
    ref i_this[2320444]:owned IllegalArgumentError[1064619] "temp"
    (2320446 'move' i_this[2320444](2320448 'set reference' _formal_tmp_x[2320412]))
    val tmp[2320450]:IllegalArgumentError[168246] "temp"
    (2320452 'move' tmp[2320450](2320454 'cast' IllegalArgumentError[168246] nil[44]))
    (2320457 '.=' i_this[2320444] chpl_p[1064614] tmp[2320450])
    val coerce_tmp[2320461]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320463 'move' coerce_tmp[2320461](2320465 'cast' object[22] call_tmp[2320432]))
    const-val call_tmp[2320468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320470 'move' call_tmp[2320468](2320472 'ptr_eq' coerce_tmp[2320461] nil[44]))
    if call_tmp[2320468]
    {
      (2320478 call nilCheckHalt[210171] "argument to ! is nil")
    }
    const-val call_tmp[2320481]:owned Error[966519] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2320483]:owned Error[966519] "dead after last mention" "delay instantiation" "temp"
    const-val tmp[2571118]:__wide_Error[2519192] "temp"
    (2571121 'move' tmp[2571118] call_tmp[2320432])
    (2320486 call init[968155] initTemp[2320483] tmp[2571118])
    (2320489 'move' call_tmp[2320481] initTemp[2320483])
    (2320492 'move' ret[2320417] call_tmp[2320481])
    (2320496 call chpl__autoDestroy[1639458] _formal_tmp_x[2320412])
    (2320500 '=' i__retArg[2320405] ret[2320417])
    (1866913 'move' coerce_tmp[1073654] ret_tmp[1866910])
    const-val _formal_tmp_in_err[1073833]:owned Error[966519] "dead after last mention" "expr temp" "no auto destroy" "temp"
    (1073837 'move' _formal_tmp_in_err[1073833] coerce_tmp[1073654])
    (1071970 'move' call_tmp[1071968](1071973 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1073833]))
    (1844891 '=' error_out[1844878] call_tmp[1071968])
    ref i_x[2194399]:string[26] "temp"
    (2194403 'move' i_x[2194399](2194401 'set reference' call_tmp[1071950]))
    wide-ref tmp[2564388]:string[26] "temp"
    (2564391 'move' tmp[2564388] i_x[2194399])
    (2194407 call deinit[30834] tmp[2564388])
    ref i_x[2194411]:string[26] "temp"
    (2194415 'move' i_x[2194411](2194413 'set reference' call_tmp[1071942]))
    wide-ref tmp[2564394]:string[26] "temp"
    (2564397 'move' tmp[2564394] i_x[2194411])
    (2194419 call deinit[30834] tmp[2564394])
    ref i_x[2194423]:string[26] "temp"
    (2194427 'move' i_x[2194423](2194425 'set reference' call_tmp[1071934]))
    wide-ref tmp[2564400]:string[26] "temp"
    (2564403 'move' tmp[2564400] i_x[2194423])
    (2194431 call deinit[30834] tmp[2564400])
    ref i_x[2194435]:string[26] "temp"
    (2194439 'move' i_x[2194435](2194437 'set reference' call_tmp[1071926]))
    wide-ref tmp[2564406]:string[26] "temp"
    (2564409 'move' tmp[2564406] i_x[2194435])
    (2194443 call deinit[30834] tmp[2564406])
    gotoErrorHandlingReturn _endchpl_enum_cast_error[1844880] _endchpl_enum_cast_error[1844880]
    label _endchpl_enum_cast_error[1844880]
    (1071977 return _void[55])
  }
  function _local_on_fn[2551837](wide-ref arg this[2551839]:chpl_TaskErrors[168348], const in arg err[2551841]:__wide_Error[2519192]) : void[4] "local fn" "on" "resolved"
  {
    wide-ref call_tmp[2551844]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2552073 'local_check' this[2551839] c"cannot access remote data in local block")
    ref local_this[2552070]:chpl_TaskErrors[168348] "temp"
    (2552076 'move' local_this[2552070] this[2551839])
    (2551846 'move' call_tmp[2551844](2551848 '.' local_this[2552070] _errorsLock[168271]))
    const-val call_tmp[2551851]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2551853 'move' call_tmp[2551851](2551855 '_wide_get_locale' call_tmp[2551844]))
    val isdirect[2551857]:bool[10] "temp"
    (2551859 'move' isdirect[2551857](2551862 call _local_chpl_doDirectExecuteOn[2522776] call_tmp[2551851]))
    if isdirect[2551857]
    {
      (2551867 call _local_on_fn[2522801] call_tmp[2551844])
    }
    {
      val _args_foron_fn[2551870]:_class_localson_fn[2148402] "temp"
      (2551872 'move' _args_foron_fn[2551870](2551874 'stack allocate class' _class_localson_fn[2148402]))
      (2551876 '.=' _args_foron_fn[2551870] _0_tmp[2148405] call_tmp[2551851])
      wide-ref tmp[2551880]:chpl_LocalSpinlock[187432] "temp"
      (2551882 'move' tmp[2551880](2551884 'set reference' call_tmp[2551844]))
      (2551886 '.=' _args_foron_fn[2551870] _1_this[2148407] tmp[2551880])
      val _args_vforon_fn[2551890]:c_void_ptr[149] "temp"
      (2551892 'move' _args_vforon_fn[2551890](2551894 'cast_to_void_star' _args_foron_fn[2551870]))
      val _args_sizeon_fn[2551896]:int(64)[13] "temp"
      (2551898 'move' _args_sizeon_fn[2551896](2551900 'sizeof_bundle' _class_localson_fn[2148402]))
      (2589808 call chpl_taskRunningCntDec[93219])
      on(2551903 call _local_wrapon_fn[2523200] call_tmp[2551851] _args_vforon_fn[2551890] _args_sizeon_fn[2551896] _args_foron_fn[2551870])
      (2589810 call chpl_taskRunningCntInc[93198])
    }
    val coerce_tmp[2551909]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2552085 'local_check' this[2551839] c"cannot access remote data in local block")
    ref local_this[2552082]:chpl_TaskErrors[168348] "temp"
    (2552088 'move' local_this[2552082] this[2551839])
    (2551911 'move' coerce_tmp[2551909](2551913 '.v' local_this[2552082] _head[168266]))
    (2551916 'noop')
    val coerce_tmp[2551917]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2551919 'move' coerce_tmp[2551917] err[2551841])
    (2552094 'local_check' coerce_tmp[2551917] c"cannot access remote data in local block")
    val local_coerce_tmp[2552091]:Error[167984] "temp"
    (2552097 'move' local_coerce_tmp[2552091] coerce_tmp[2551917])
    (2551922 '.=' local_coerce_tmp[2552091] _next[167912] coerce_tmp[2551909])
    (2552103 'local_check' this[2551839] c"cannot access remote data in local block")
    ref local_this[2552100]:chpl_TaskErrors[168348] "temp"
    (2552106 'move' local_this[2552100] this[2551839])
    (2551926 '.=' local_this[2552100] _head[168266] err[2551841])
    wide-ref call_tmp[2551930]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2552112 'local_check' this[2551839] c"cannot access remote data in local block")
    ref local_this[2552109]:chpl_TaskErrors[168348] "temp"
    (2552115 'move' local_this[2552109] this[2551839])
    (2551932 'move' call_tmp[2551930](2551934 '.' local_this[2552109] _errorsLock[168271]))
    wide-ref call_tmp[2551937]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2552121 'local_check' call_tmp[2551930] c"cannot access remote data in local block")
    ref local_call_tmp[2552118]:chpl_LocalSpinlock[187432] "temp"
    (2552124 'move' local_call_tmp[2552118] call_tmp[2551930])
    (2551939 'move' call_tmp[2551937](2551941 '.' local_call_tmp[2552118] l[187317]))
    const-val call_tmp[2551944]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2551946 'move' call_tmp[2551944](2551948 '_wide_get_locale' call_tmp[2551937]))
    val isdirect[2551950]:bool[10] "temp"
    (2551952 'move' isdirect[2551950](2551955 call _local_chpl_doDirectExecuteOn[2522776] call_tmp[2551944]))
    if isdirect[2551950]
    {
      (2551960 call _local_on_fn[2523280] call_tmp[2551937] 0)
    }
    {
      val _args_foron_fn[2551964]:_class_localson_fn[2154069] "temp"
      (2551966 'move' _args_foron_fn[2551964](2551968 'stack allocate class' _class_localson_fn[2154069]))
      (2551970 '.=' _args_foron_fn[2551964] _0_tmp[2154072] call_tmp[2551944])
      wide-ref tmp[2551974]:AtomicBool[45877] "temp"
      (2551976 'move' tmp[2551974](2551978 'set reference' call_tmp[2551937]))
      (2551980 '.=' _args_foron_fn[2551964] _1_this[2154074] tmp[2551974])
      (2551984 '.=' _args_foron_fn[2551964] _2_value[2154076] 0)
      val _args_vforon_fn[2551988]:c_void_ptr[149] "temp"
      (2551990 'move' _args_vforon_fn[2551988](2551992 'cast_to_void_star' _args_foron_fn[2551964]))
      val _args_sizeon_fn[2551994]:int(64)[13] "temp"
      (2551996 'move' _args_sizeon_fn[2551994](2551998 'sizeof_bundle' _class_localson_fn[2154069]))
      on(2552001 call _local_wrapon_fn[2523319] call_tmp[2551944] _args_vforon_fn[2551988] _args_sizeon_fn[2551994] _args_foron_fn[2551964])
    }
    (2552007 return _void[55])
  }
  function on_fn[935399](wide-ref arg this[1841194]:chpl_TaskErrors[168348], const in arg err[1841196]:__wide_Error[2519192]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2283056]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2283058 'move' call_tmp[2283056](2283060 '.' this[1841194] _errorsLock[168271]))
    const-val call_tmp[2267374]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267376 'move' call_tmp[2267374](2267378 '_wide_get_locale' call_tmp[2283056]))
    val isdirect[2267383]:bool[10] "temp"
    (2267385 'move' isdirect[2267383](2267388 call chpl_doDirectExecuteOn[187469] call_tmp[2267374]))
    if isdirect[2267383]
    {
      (2267393 call on_fn[935534] call_tmp[2283056])
    }
    {
      val _args_foron_fn[2267396]:_class_localson_fn[2148402] "temp"
      (2267398 'move' _args_foron_fn[2267396](2267400 'stack allocate class' _class_localson_fn[2148402]))
      (2267402 '.=' _args_foron_fn[2267396] _0_tmp[2148405] call_tmp[2267374])
      wide-ref tmp[2267406]:chpl_LocalSpinlock[187432] "temp"
      (2267408 'move' tmp[2267406](2267410 'set reference' call_tmp[2283056]))
      (2267412 '.=' _args_foron_fn[2267396] _1_this[2148407] tmp[2267406])
      val _args_vforon_fn[2267416]:c_void_ptr[149] "temp"
      (2267418 'move' _args_vforon_fn[2267416](2267420 'cast_to_void_star' _args_foron_fn[2267396]))
      val _args_sizeon_fn[2267422]:int(64)[13] "temp"
      (2267424 'move' _args_sizeon_fn[2267422](2267426 'sizeof_bundle' _class_localson_fn[2148402]))
      (2588972 call chpl_taskRunningCntDec[93219])
      on(2267429 call wrapon_fn[2148442] call_tmp[2267374] _args_vforon_fn[2267416] _args_sizeon_fn[2267422] _args_foron_fn[2267396])
      (2588974 call chpl_taskRunningCntInc[93198])
    }
    val coerce_tmp[1232464]:__wide_Error[2519192] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1232468 'move' coerce_tmp[1232464](2503540 '.v' this[1841194] _head[168266]))
    (544621 'noop')
    val coerce_tmp[1232471]:__wide_Error[2519192] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1232476 'move' coerce_tmp[1232471] err[1841196])
    (2503546 '.=' coerce_tmp[1232471] _next[167912] coerce_tmp[1232464])
    (2503552 '.=' this[1841194] _head[168266] err[1841196])
    wide-ref call_tmp[2283066]:chpl_LocalSpinlock[187432] "dead after last mention" "maybe param" "temp"
    (2283068 'move' call_tmp[2283066](2283070 '.' this[1841194] _errorsLock[168271]))
    wide-ref call_tmp[2268035]:AtomicBool[45877] "dead after last mention" "maybe param" "temp"
    (2268037 'move' call_tmp[2268035](2268039 '.' call_tmp[2283066] l[187317]))
    const-val call_tmp[2268049]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268051 'move' call_tmp[2268049](2268053 '_wide_get_locale' call_tmp[2268035]))
    val isdirect[2268058]:bool[10] "temp"
    (2268060 'move' isdirect[2268058](2268063 call chpl_doDirectExecuteOn[187469] call_tmp[2268049]))
    if isdirect[2268058]
    {
      (2268068 call on_fn[1233143] call_tmp[2268035] 0)
    }
    {
      val _args_foron_fn[2268072]:_class_localson_fn[2154069] "temp"
      (2268074 'move' _args_foron_fn[2268072](2268076 'stack allocate class' _class_localson_fn[2154069]))
      (2268078 '.=' _args_foron_fn[2268072] _0_tmp[2154072] call_tmp[2268049])
      wide-ref tmp[2268082]:AtomicBool[45877] "temp"
      (2268084 'move' tmp[2268082](2268086 'set reference' call_tmp[2268035]))
      (2268088 '.=' _args_foron_fn[2268072] _1_this[2154074] tmp[2268082])
      (2268092 '.=' _args_foron_fn[2268072] _2_value[2154076] 0)
      val _args_vforon_fn[2268096]:c_void_ptr[149] "temp"
      (2268098 'move' _args_vforon_fn[2268096](2268100 'cast_to_void_star' _args_foron_fn[2268072]))
      val _args_sizeon_fn[2268102]:int(64)[13] "temp"
      (2268104 'move' _args_sizeon_fn[2268102](2268106 'sizeof_bundle' _class_localson_fn[2154069]))
      on(2268109 call wrapon_fn[2154115] call_tmp[2268049] _args_vforon_fn[2268096] _args_sizeon_fn[2268102] _args_foron_fn[2268072])
    }
    (935406 return _void[55])
  }
  function chpl_error_preformatted[1788931](const in arg c_string[1788933]:c_string[19]) : void[4] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "resolved" "no return value for void"
  {
    (1788939 return _void[55])
  }
  function _local_wrapon_fn[2552011](const in arg dummy_locale_arg[2552013]:chpl_localeID_t[209352], in arg buf[2552015]:c_void_ptr[149], in arg buf_size[2552017]:int(64)[13], in arg c[2552019]:_class_localson_fn[2148185]) : void[4] "local fn" "on block"
  {
    wide-ref _1_this[2552022]:chpl_TaskErrors[168348] "temp"
    (2552024 'move' _1_this[2552022](2552026 '.v' c[2552019] _1_this[2148190]))
    val _2_err[2552029]:__wide_Error[2519192] "temp"
    (2552031 'move' _2_err[2552029](2552033 '.v' c[2552019] _2_err[2148192]))
    (2589792 call chpl_taskRunningCntInc[93198])
    (2552037 call _local_on_fn[2551837] _1_this[2552022] _2_err[2552029])
    (2589794 call chpl_taskRunningCntDec[93219])
    (2552040 return _void[55])
  }
  function wrapon_fn[2148231](const in arg dummy_locale_arg[2148233]:chpl_localeID_t[209352], in arg buf[2148235]:c_void_ptr[149], in arg buf_size[2148237]:int(64)[13], in arg c[2148239]:_class_localson_fn[2148185]) : void[4] "on block"
  {
    wide-ref _1_this[2148251]:chpl_TaskErrors[168348] "temp"
    (2148256 'move' _1_this[2148251](2148253 '.v' c[2148239] _1_this[2148190]))
    val _2_err[2148259]:__wide_Error[2519192] "temp"
    (2148264 'move' _2_err[2148259](2148261 '.v' c[2148239] _2_err[2148192]))
    (2588528 call chpl_taskRunningCntInc[93198])
    (2148242 call on_fn[935399] _1_this[2148251] _2_err[2148259])
    (2588530 call chpl_taskRunningCntDec[93219])
    (2148267 return _void[55])
  }
}