AST dump for RangeChunk after pass removeEmptyRecords.
Module use list: ChapelStandard 

{
  function chpl__init_RangeChunk[416165]() : void[4] "insert line file info" "module init" "resolved"
  {
    (537516 return _void[55])
  }
  type RemElems[266487] def Thru[266481]:RemElems[266487] def Pack[266483]:RemElems[266487] def Mod[266485]:RemElems[266487]
  type _ic_chunks[1376150] val super[1376151]:object[22] "super class" val more[1376153]:int(64)[13] const-val F0_r[2090673]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090677]:int(64)[13] const-val F2_remPol[2090681]:RemElems[266487] val F3__iterator[2090685]:_ic_chunksOrder[1376614] const F4_nElems[2090687]:int(64)[13] val F5_nChunks[2090689]:int(64)[13] val F6_chunkSize[2090691]:int(64)[13] val F7_rem[2090693]:int(64)[13] val F8__iterator[2090695]:_ic_chpl_direct_counted_range_iter[1103851] val F9__iterator[2090697]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F10_tmp[2090699]:2*int(64)[1040117] val F11__iterator[2090701]:_ic_chpl_direct_param_stride_range_iter[1103347] val F12_i[2090703]:int(64)[13] const-val F13_ret_tmp[2090705]:2*int(64)[1040117] const-val F14_ret_tmp[2090707]:2*int(64)[1040117] const-val F15_ret_tmp[2090709]:2*int(64)[1040117] const-val F16_ret_tmp[2090711]:2*int(64)[1040117] const-val F17_ret_tmp[2090713]:range(int(64),bounded,false)[1026875] val value[2090715]:range(int(64),bounded,false)[1026875]
  type _ir_chunks[1376156] const-val F0_r[2090675]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2090679]:int(64)[13] const-val F2_remPol[2090683]:RemElems[266487]
  type _ic_chunksOrder[1376614] val super[1376615]:object[22] "super class" val more[1376617]:int(64)[13] const-val F0_r[2091513]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091517]:int(64)[13] const-val F2_remPol[2091521]:RemElems[266487] const F3_nElems[2091525]:int(64)[13] val F4_nChunks[2091527]:int(64)[13] val F5_chunkSize[2091529]:int(64)[13] val F6_rem[2091531]:int(64)[13] val F7__iterator[2091533]:_ic_chpl_direct_counted_range_iter[1103851] val F8__iterator[2091535]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F9_tmp[2091537]:2*int(64)[1040117] val F10__iterator[2091539]:_ic_chpl_direct_param_stride_range_iter[1103347] val F11_i[2091541]:int(64)[13] const-val F12_ret_tmp[2091543]:2*int(64)[1040117] const-val F13_ret_tmp[2091545]:2*int(64)[1040117] const-val F14_ret_tmp[2091547]:2*int(64)[1040117] const-val F15_ret_tmp[2091549]:2*int(64)[1040117] val value[2091551]:2*int(64)[1040117]
  type _ir_chunksOrder[1376620] const-val F0_r[2091515]:range(int(64),bounded,false)[1026875] const-val F1_numChunks[2091519]:int(64)[13] const-val F2_remPol[2091523]:RemElems[266487]
  function chunkOrderThru[1377588](const in arg nElems[1377590]:int(64)[13], const in arg nChunks[1377595]:int(64)[13], const in arg i[1377600]:int(64)[13], ref arg _retArg[1872229]:2*int(64)[1040117]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2279422]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279424 'move' call_tmp[2279422](2279426 '*' nElems[1377590] i[1377600]))
    val tmp[1377645]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2181002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2181004 'move' call_tmp[2181002](2181006 '==' i[1377600] 0))
    if call_tmp[2181002]
    {
      (1377678 'move' tmp[1377645] 0)
    }
    {
      const-val tmp[1377684]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1377686 'move' tmp[1377684](1377689 call divceil[1377371] call_tmp[2279422] nChunks[1377595]))
      (1377692 'move' tmp[1377645] tmp[1377684])
    }
    val tmp[1377704]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2208099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208101 'move' call_tmp[2208099](2208103 '-' nChunks[1377595] 1))
    const-val call_tmp[2181012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2181014 'move' call_tmp[2181012](2181016 '==' i[1377600] call_tmp[2208099]))
    if call_tmp[2181012]
    {
      const-val call_tmp[2208109]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208111 'move' call_tmp[2208109](2208113 '-' nElems[1377590] 1))
      (1377739 'move' tmp[1377704] call_tmp[2208109])
    }
    {
      const-val call_tmp[2189356]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2189358 'move' call_tmp[2189356](2189360 '+' call_tmp[2279422] nElems[1377590]))
      const-val call_tmp[1377755]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
      (1377757 'move' call_tmp[1377755](1377760 call divceil[1377371] call_tmp[2189356] nChunks[1377595]))
      const-val call_tmp[2208119]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208121 'move' call_tmp[2208119](2208123 '-' call_tmp[1377755] 1))
      (1377769 'move' tmp[1377704] call_tmp[2208119])
    }
    const-val ret_tmp[1866498]:2*int(64)[1040117] "temp"
    (2491144 '.=' ret_tmp[1866498] x0[1040113] tmp[1377645])
    (2491148 '.=' ret_tmp[1866498] x1[1040115] tmp[1377704])
    label _end_chunkOrderThru[1377819]
    (1872231 '=' _retArg[1872229] ret_tmp[1866498])
    (1872233 return _void[55])
  }
  function chunkOrderPack[1378064](const in arg chunkSize[1378066]:int(64)[13], const in arg nElems[1378071]:int(64)[13], const in arg i[1378076]:int(64)[13], ref arg _retArg[1872241]:2*int(64)[1040117]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val ret[1378095]:2*int(64)[1040117] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2279432]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279434 'move' call_tmp[2279432](2279436 '*' chunkSize[1378066] i[1378076]))
    const-val call_tmp[2192445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192447 'move' call_tmp[2192445](2192449 '>=' call_tmp[2279432] nElems[1378071]))
    if call_tmp[2192445]
    {
      const-val ret_tmp[1866504]:2*int(64)[1040117] "temp"
      (2491158 '.=' ret_tmp[1866504] x0[1040113] 1)
      (2491162 '.=' ret_tmp[1866504] x1[1040115] 0)
      (1378314 'move' ret[1378095] ret_tmp[1866504])
      gotoReturn _end_chunkOrderPack[1378293] _end_chunkOrderPack[1378293]
    }
    const-val call_tmp[2189366]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2189368 'move' call_tmp[2189366](2189370 '+' call_tmp[2279432] chunkSize[1378066]))
    const-val call_tmp[2208129]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2208131 'move' call_tmp[2208129](2208133 '-' call_tmp[2189366] 1))
    val end[1378216]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378218 'move' end[1378216] call_tmp[2208129])
    const-val call_tmp[2192455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2192457 'move' call_tmp[2192455](2192459 '>=' call_tmp[2208129] nElems[1378071]))
    if call_tmp[2192455]
    {
      const-val call_tmp[2208139]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208141 'move' call_tmp[2208139](2208143 '-' nElems[1378071] 1))
      (2184720 '=' end[1378216] call_tmp[2208139])
    }
    const-val ret_tmp[1866510]:2*int(64)[1040117] "temp"
    (2491172 '.=' ret_tmp[1866510] x0[1040113] call_tmp[2279432])
    (2491176 '.=' ret_tmp[1866510] x1[1040115] end[1378216])
    (1378317 'move' ret[1378095] ret_tmp[1866510])
    label _end_chunkOrderPack[1378293]
    (1872243 '=' _retArg[1872241] ret[1378095])
    (1872245 return _void[55])
  }
  function chunkOrderMod[1378321](const in arg chunkSize[1378323]:int(64)[13], const in arg rem[1378328]:int(64)[13], const in arg nElems[1378333]:int(64)[13], const in arg nChunks[1378338]:int(64)[13], const in arg i[1378343]:int(64)[13], ref arg _retArg[1872253]:2*int(64)[1040117]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "private" "resolved" "fn synchronization free"
  {
    val start[1378372]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1378568 'move' start[1378372] 0)
    val end[1378383]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    const-val call_tmp[2191878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2191880 'move' call_tmp[2191878](2191882 '<' i[1378343] rem[1378328]))
    if call_tmp[2191878]
    {
      const-val call_tmp[2183496]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2183498 'move' call_tmp[2183496](2183500 '+' chunkSize[1378323] 1))
      const-val call_tmp[2279442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279444 'move' call_tmp[2279442](2279446 '*' i[1378343] call_tmp[2183496]))
      (2184732 '=' start[1378372] call_tmp[2279442])
      const-val call_tmp[2189376]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2189378 'move' call_tmp[2189376](2189380 '+' call_tmp[2279442] chunkSize[1378323]))
      (1378443 'move' end[1378383] call_tmp[2189376])
    }
    {
      const-val call_tmp[2190737]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2190739 'move' call_tmp[2190737](2190741 '-' nChunks[1378338] i[1378343]))
      const-val call_tmp[2279452]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279454 'move' call_tmp[2279452](2279456 '*' call_tmp[2190737] chunkSize[1378323]))
      const-val call_tmp[2190747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2190749 'move' call_tmp[2190747](2190751 '-' nElems[1378333] call_tmp[2279452]))
      (2184744 '=' start[1378372] call_tmp[2190747])
      const-val call_tmp[2189386]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2189388 'move' call_tmp[2189386](2189390 '+' call_tmp[2190747] chunkSize[1378323]))
      const-val call_tmp[2208149]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2208151 'move' call_tmp[2208149](2208153 '-' call_tmp[2189386] 1))
      (1378497 'move' end[1378383] call_tmp[2208149])
    }
    const-val ret_tmp[1866516]:2*int(64)[1040117] "temp"
    (2491186 '.=' ret_tmp[1866516] x0[1040113] start[1378372])
    (2491190 '.=' ret_tmp[1866516] x1[1040115] end[1378383])
    label _end_chunkOrderMod[1378543]
    (1872255 '=' _retArg[1872253] ret_tmp[1866516])
    (1872257 return _void[55])
  }
}