AST dump for ChapelHashtable after pass inlineFunctions.
Module use list: ChapelBase DSIUtil 

{
  type _class_localscoforall_fn[2216137] val _runtime_hdr[2216138]:chpl_task_bundle_t[209366] val _0_size[2216140]:int(64)[13] val _1_numChunks[2216142]:int(64)[13] val _2_chunk[2216144]:int(64)[13] val _3__coforallCount[2216146]:_EndCount(AtomicT(int(64)),int(64))[945532] val _4_ret[2216148]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] val _5_sizeofElement[2216150]:uint(64)[115]
  type _class_localscoforall_fn[2215982] val _runtime_hdr[2215983]:chpl_task_bundle_t[209366] val _0_size[2215985]:int(64)[13] val _1_numChunks[2215987]:int(64)[13] val _2_chunk[2215989]:int(64)[13] val _3__coforallCount[2215991]:_EndCount(AtomicT(int(64)),int(64))[945532] val _4_ret[2215993]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] val _5_sizeofElement[2215995]:uint(64)[115]
  function chpl__init_ChapelHashtable[416187]() : void[4] "insert line file info" "module init" "resolved"
  {
    (527085 return _void[55])
  }
  type chpl__hash_status[200461] def empty[200455]:chpl__hash_status[200461] 0 def full[200457]:chpl__hash_status[200461] 1 def deleted[200459]:chpl__hash_status[200461] 2
  type chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] val status[1208652]:chpl__hash_status[200461] val key[1208656]:BaseArr[149584]
  type chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] val status[1208952]:chpl__hash_status[200461] val key[1208956]:BaseDom[146767]
  function _moveToReturn[1277686](const  ref arg arg[1277688]:BaseArr[149584]) : BaseArr[149584] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    val ret[1277690]:BaseArr[149584] "dead after last mention" "RVV" "temp"
    val call_tmp[1277698]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val moved[1277728]:BaseArr[149584] "dead at end of block" "no auto destroy" "no copy" "no init"
    val call_tmp[1277730]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1277768 'move' moved[1277728](1277766 'cast' BaseArr[149584] nil[44]))
    (1277764 'move' moved[1277728](1277763 'deref' arg[1277688]))
    (1277745 'move' ret[1277690] moved[1277728])
    label _end__moveToReturn[1277754]
    (1277756 return ret[1277690])
  }
  function _moveToReturn[1277881]() : nothing[7] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    label _end__moveToReturn[1277949]
    (1881692 return none[57])
  }
  function _moveToReturn[1498678](const  ref arg arg[1498680]:BaseDom[146767]) : BaseDom[146767] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free"
  {
    val ret[1498682]:BaseDom[146767] "dead after last mention" "RVV" "temp"
    val call_tmp[1498690]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val moved[1498720]:BaseDom[146767] "dead at end of block" "no auto destroy" "no copy" "no init"
    val call_tmp[1498722]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1498760 'move' moved[1498720](1498758 'cast' BaseDom[146767] nil[44]))
    (1498756 'move' moved[1498720](1498755 'deref' arg[1498680]))
    (1498737 'move' ret[1498682] moved[1498720])
    label _end__moveToReturn[1498746]
    (1498748 return ret[1498682])
  }
  function _moveInit[1277770](ref arg lhs[1277772]:BaseArr[149584], in arg rhs[1277774]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1277782]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1277788]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1277815]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1277839 '=' lhs[1277772] rhs[1277774])
    (1277843 return _void[55])
  }
  function _moveInit[1277957]() : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    (1278030 return _void[55])
  }
  function _moveInit[1500371](ref arg lhs[1500373]:BaseDom[146767], in arg rhs[1500375]:BaseDom[146767]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1500383]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1500389]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1500416]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1500440 '=' lhs[1500373] rhs[1500375])
    (1500444 return _void[55])
  }
  function _allocateData[1218870](const in arg size[1218872]:int(64)[13]) : _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[1879829]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "temp"
    val ret[1218876]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1218884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2233385]:int(64)[13] "temp"
    (2233388 'move' inlineImm[2233385] 0)
    const-val call_tmp[2233391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233393 'move' call_tmp[2233391](2233395 '==' size[1218872] inlineImm[2233385]))
    (1218886 'move' call_tmp[1218884] call_tmp[2233391])
    const-val call_tmp[1218892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1218894 'move' call_tmp[1218892] call_tmp[1218884])
    if call_tmp[1218892]
    {
      (1218902 call halt[154111] "attempt to allocate hashtable with size 0")
    }
    const-val callPostAlloc[1218905]:bool[10] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[1218911]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "maybe param" "temp"
    const-val default_arg_subloc[1219348]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val subloc[2401797]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (2401799 'move' subloc[2401797] c_sublocid_none[89873])
    (1219352 'move' default_arg_subloc[1219348] subloc[2401797])
    val _formal_tmp_out_callPostAlloc[1219355]:bool[10] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (1218913 'move' call_tmp[1218911](1218916 call _ddata_allocate_noinit[1219206] size[1218872] _formal_tmp_out_callPostAlloc[1219355] default_arg_subloc[1219348]))
    (1242925 'move' callPostAlloc[1218905] _formal_tmp_out_callPostAlloc[1219355])
    val ret[1218920]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "insert auto destroy"
    (1218922 'move' ret[1218920] call_tmp[1218911])
    const-val call_tmp[1218926]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1218928 'move' call_tmp[1218926](1218931 call init_elts_method[1219622] size[1218872]))
    const-val initMethod[1218934]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1218936 'move' initMethod[1218934] call_tmp[1218926])
    const-val call_tmp[1218940]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2401837]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2401839 'move' call_tmp[2401837](2401841 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983]))
    const-val call_tmp[2401843]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2401845 'move' call_tmp[2401843](2401847 'cast' uint(64)[115] call_tmp[2401837]))
    (1218942 'move' call_tmp[1218940] call_tmp[2401843])
    const-val sizeofElement[1218947]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1218949 'move' sizeofElement[1218947] call_tmp[1218940])
    const-val tmp[1218977]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1218979 'move' tmp[1218977] initMethod[1218934])
    const-val call_tmp[1218982]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2402319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2402321 'move' call_tmp[2402319](2402323 '==' tmp[1218977] noInit[11146]))
    (1218984 'move' call_tmp[1218982] call_tmp[2402319])
    const-val call_tmp[1218990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1218992 'move' call_tmp[1218990] call_tmp[1218982])
    if call_tmp[1218990]
    {
    }
    {
      const-val call_tmp[1219000]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2402329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402331 'move' call_tmp[2402329](2402333 '==' tmp[1218977] serialInit[11148]))
      (1219002 'move' call_tmp[1219000] call_tmp[2402329])
      const-val call_tmp[1219008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1219010 'move' call_tmp[1219008] call_tmp[1219000])
      if call_tmp[1219008]
      {
        val _indexOfInterest[1219018]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1219020]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1219022]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1907196]:_ir__allSlots[1221795] "temp"
        ref i__retArg[2325036]:_ir__allSlots[1221795] "temp"
        (2325040 'move' i__retArg[2325036](2325038 'set reference' ret_tmp[1907196]))
        val _ir[2325043]:_ir__allSlots[1221795] "temp"
        (2325045 '.=' _ir[2325043] F0_size[2103704] size[1218872])
        (2325049 '=' i__retArg[2325036] _ir[2325043])
        (1907199 'move' call_tmp[1219022] ret_tmp[1907196])
        ref i_ir[2402638]:_ir__allSlots[1221795] "temp"
        (2402642 'move' i_ir[2402638](2402640 'set reference' call_tmp[1219022]))
        val ret[2402645]:_ic__allSlots[1221789] "dead after last mention" "RVV" "temp"
        val _ic_[2402647]:_ic__allSlots[1221789] "dead after last mention" "temp"
        const-val call_tmp[2402649]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402651 'move' call_tmp[2402649](2402653 'sizeof_bundle' _ic__allSlots[1221789]))
        const-val cast_tmp[2402655]:c_void_ptr[149] "dead after last mention" "temp"
        (2402657 'move' cast_tmp[2402655](2402660 call chpl_here_alloc[187788] call_tmp[2402649] 38))
        (2402663 'move' _ic_[2402647](2402665 'cast' _ic__allSlots[1221789] cast_tmp[2402655]))
        (2402668 'setcid' _ic_[2402647])
        (2402670 'move' ret[2402645] _ic_[2402647])
        (2402673 '.=' ret[2402645] more[1221792] 1)
        const-val tmp[2402677]:int(64)[13] "temp"
        (2402679 'move' tmp[2402677](2402681 '.v' i_ir[2402638] F0_size[2103704]))
        (2402684 '.=' ret[2402645] F0_size[2103702] tmp[2402677])
        (1219029 'move' _iterator[1219020] ret[2402645])
        val ret[1999300]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1999302]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1999304]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1999306]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1999308]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        const-val size[1999461]:int(64)[13] "temp"
        (1999466 'move' size[1999461](1999463 '.v' _iterator[1219020] F0_size[2103702]))
        val inlineImm[2297664]:int(64)[13] "temp"
        (2297667 'move' inlineImm[2297664] 0)
        ref i__retArg[2297669]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2297673 'move' i__retArg[2297669](2297671 'set reference' ret_tmp[1999308]))
        val _ir[2297676]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2297678 '.=' _ir[2297676] F0_low[2107538] inlineImm[2297664])
        (2297682 '.=' _ir[2297676] F1_count[2107542] size[1999461])
        (2297686 '=' i__retArg[2297669] _ir[2297676])
        (1999315 'move' call_tmp[1999306] ret_tmp[1999308])
        ref i_ir[2299095]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2299099 'move' i_ir[2299095](2299097 'set reference' call_tmp[1999306]))
        val ret[2299102]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
        val _ic_[2299104]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
        const-val call_tmp[2299106]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2299108 'move' call_tmp[2299106](2299110 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
        const-val cast_tmp[2299112]:c_void_ptr[149] "dead after last mention" "temp"
        (2299114 'move' cast_tmp[2299112](2299117 call chpl_here_alloc[187788] call_tmp[2299106] 30))
        (2299120 'move' _ic_[2299104](2299122 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2299112]))
        (2299125 'setcid' _ic_[2299104])
        (2299127 'move' ret[2299102] _ic_[2299104])
        (2299130 '.=' ret[2299102] more[1103982] 1)
        const-val tmp[2299134]:int(64)[13] "temp"
        (2299136 'move' tmp[2299134](2299138 '.v' i_ir[2299095] F0_low[2107538]))
        (2299141 '.=' ret[2299102] F0_low[2107536] tmp[2299134])
        const-val tmp[2299145]:int(64)[13] "temp"
        (2299147 'move' tmp[2299145](2299149 '.v' i_ir[2299095] F1_count[2107542]))
        (2299152 '.=' ret[2299102] F1_count[2107540] tmp[2299145])
        (1999318 'move' _iterator[1999304] ret[2299102])
        val ret[1999324]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1999326]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1999328]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1999330]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1999332]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        const-val low[1999334]:int(64)[13] "temp"
        (1999336 'move' low[1999334](1999338 '.v' _iterator[1999304] F0_low[2107536]))
        const-val count[1999341]:int(64)[13] "temp"
        (1999343 'move' count[1999341](1999345 '.v' _iterator[1999304] F1_count[2107540]))
        ref i__retArg[2299986]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2299990 'move' i__retArg[2299986](2299988 'set reference' ret_tmp[1999332]))
        val _ir[2299993]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2299995 '.=' _ir[2299993] F0_low[2113696] low[1999334])
        (2299999 '.=' _ir[2299993] F1_count[2113700] count[1999341])
        (2300003 '=' i__retArg[2299986] _ir[2299993])
        (1999353 'move' call_tmp[1999330] ret_tmp[1999332])
        ref i_ir[2300993]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2300997 'move' i_ir[2300993](2300995 'set reference' call_tmp[1999330]))
        val ret[2301000]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
        val _ic_[2301002]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
        const-val call_tmp[2301004]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2301006 'move' call_tmp[2301004](2301008 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
        const-val cast_tmp[2301010]:c_void_ptr[149] "dead after last mention" "temp"
        (2301012 'move' cast_tmp[2301010](2301015 call chpl_here_alloc[187788] call_tmp[2301004] 29))
        (2301018 'move' _ic_[2301002](2301020 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301010]))
        (2301023 'setcid' _ic_[2301002])
        (2301025 'move' ret[2301000] _ic_[2301002])
        (2301028 '.=' ret[2301000] more[1103732] 1)
        const-val tmp[2301032]:int(64)[13] "temp"
        (2301034 'move' tmp[2301032](2301036 '.v' i_ir[2300993] F0_low[2113696]))
        (2301039 '.=' ret[2301000] F0_low[2113694] tmp[2301032])
        const-val tmp[2301043]:int(64)[13] "temp"
        (2301045 'move' tmp[2301043](2301047 '.v' i_ir[2300993] F1_count[2113700]))
        (2301050 '.=' ret[2301000] F1_count[2113698] tmp[2301043])
        (1999356 'move' _iterator[1999328] ret[2301000])
        val ret[2068139]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
        val call_tmp[2068141]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val tmp[2068143]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2068145]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2068147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val count[2068561]:int(64)[13] "temp"
        (2068566 'move' count[2068561](2068563 '.v' _iterator[1999328] F1_count[2113698]))
        const-val call_tmp[2230948]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2230950 'move' call_tmp[2230948](2230952 '<' count[2068561] 0))
        (2068149 'move' call_tmp[2068147] call_tmp[2230948])
        (2068154 'move' tmp[2068145] call_tmp[2068147])
        (2068157 'move' tmp[2068143] call_tmp[2068147])
        const-val call_tmp[2068160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2068162 'move' call_tmp[2068160] call_tmp[2068147])
        if call_tmp[2068147]
        {
          (2068168 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        const-val tmp[2068171]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
        val tmp[2068173]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
        const-val tmp[2068175]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[2068177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val count[2068568]:int(64)[13] "temp"
        (2068573 'move' count[2068568](2068570 '.v' _iterator[1999328] F1_count[2113698]))
        val inlineImm[2235195]:int(64)[13] "temp"
        (2235198 'move' inlineImm[2235195] 0)
        const-val call_tmp[2235201]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235203 'move' call_tmp[2235201](2235205 '==' count[2068568] inlineImm[2235195]))
        (2068179 'move' call_tmp[2068177] call_tmp[2235201])
        (2068185 'move' tmp[2068175] call_tmp[2068177])
        if call_tmp[2068177]
        {
          const-val tmp[2068190]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val call_tmp[2068192]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[2068194]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val low[2068575]:int(64)[13] "temp"
          (2068580 'move' low[2068575](2068577 '.v' _iterator[1999328] F0_low[2113694]))
          const-val call_tmp[2231888]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2231890 'move' call_tmp[2231888](2231892 'cast' uint(64)[115] low[2068575]))
          (2068196 'move' call_tmp[2068194] call_tmp[2231888])
          const-val call_tmp[2068201]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2068203]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2068205 'move' coerce_tmp[2068203](2068207 'cast' uint(64)[115] 1))
          const-val call_tmp[2302484]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2302486 'move' call_tmp[2302484](2302488 '-' call_tmp[2068194] 1))
          (2068210 'move' call_tmp[2068201] call_tmp[2302484])
          const-val call_tmp[2068215]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2302904]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2302906 'move' call_tmp[2302904](2302908 'cast' int(64)[13] call_tmp[2068201]))
          (2068217 'move' call_tmp[2068215] call_tmp[2302904])
          const-val ret_tmp[2068222]:2*int(64)[1040245] "temp"
          const-val low[2068582]:int(64)[13] "temp"
          (2068587 'move' low[2068582](2068584 '.v' _iterator[1999328] F0_low[2113694]))
          ref i__retArg[2304607]:2*int(64)[1040245] "temp"
          (2304611 'move' i__retArg[2304607](2304609 'set reference' ret_tmp[2068222]))
          val this[2304614]:2*int(64)[1040245] "arg this"
          (2304616 '.=' this[2304614] x0[1040241] low[2068582])
          (2304620 '.=' this[2304614] x1[1040243] call_tmp[2068215])
          (2304624 '=' i__retArg[2304607] this[2304614])
          (2068229 'move' tmp[2068190] ret_tmp[2068222])
          (2068232 'move' tmp[2068173] tmp[2068190])
        }
        {
          const-val tmp[2068236]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val call_tmp[2068238]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[2068240]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val count[2068589]:int(64)[13] "temp"
          (2068594 'move' count[2068589](2068591 '.v' _iterator[1999328] F1_count[2113698]))
          (2068242 'move' call_tmp[2068240] count[2068589])
          const-val call_tmp[2068245]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val count[2068596]:int(64)[13] "temp"
          (2068601 'move' count[2068596](2068598 '.v' _iterator[1999328] F1_count[2113698]))
          const-val call_tmp[2261944]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2261946 'move' call_tmp[2261944](2261948 '-' count[2068596] 1))
          (2068247 'move' call_tmp[2068245] call_tmp[2261944])
          const-val call_tmp[2068252]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val low[2068603]:int(64)[13] "temp"
          (2068608 'move' low[2068603](2068605 '.v' _iterator[1999328] F0_low[2113694]))
          const-val call_tmp[2242676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2242678 'move' call_tmp[2242676](2242680 '+' low[2068603] call_tmp[2068245]))
          (2068254 'move' call_tmp[2068252] call_tmp[2242676])
          const-val ret_tmp[2068260]:2*int(64)[1040245] "temp"
          const-val low[2068610]:int(64)[13] "temp"
          (2068615 'move' low[2068610](2068612 '.v' _iterator[1999328] F0_low[2113694]))
          ref i__retArg[2304629]:2*int(64)[1040245] "temp"
          (2304633 'move' i__retArg[2304629](2304631 'set reference' ret_tmp[2068260]))
          val this[2304636]:2*int(64)[1040245] "arg this"
          (2304638 '.=' this[2304636] x0[1040241] low[2068610])
          (2304642 '.=' this[2304636] x1[1040243] call_tmp[2068252])
          (2304646 '=' i__retArg[2304629] this[2304636])
          (2068267 'move' tmp[2068236] ret_tmp[2068260])
          (2068270 'move' tmp[2068173] tmp[2068236])
        }
        (2068274 '=' tmp[2068171] tmp[2068173])
        (2068277 'noop')
        1
        const-ref call_tmp[2068279]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
        (2068281 'move' call_tmp[2068279](2068283 '.' tmp[2068171] x0[1040241]))
        const-val start[2068286]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2068288]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2068290 'move' coerce_tmp[2068288](2068292 'deref' call_tmp[2068279]))
        (2068294 '=' start[2068286] coerce_tmp[2068288])
        (2068297 'noop')
        const-ref call_tmp[2068298]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
        (2068300 'move' call_tmp[2068298](2068302 '.' tmp[2068171] x1[1040243]))
        const-val end[2068305]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2068307]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2068309 'move' coerce_tmp[2068307](2068311 'deref' call_tmp[2068298]))
        (2068313 '=' end[2068305] coerce_tmp[2068307])
        (2068316 'noop')
        val _indexOfInterest[2068317]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2068319]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2068321]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2068323]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        ref i__retArg[2305927]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2305931 'move' i__retArg[2305927](2305929 'set reference' ret_tmp[2068323]))
        val _ir[2305934]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2305936 '.=' _ir[2305934] F0_low[2115194] coerce_tmp[2068288])
        (2305940 '.=' _ir[2305934] F1_high[2115198] coerce_tmp[2068307])
        (2305944 '=' i__retArg[2305927] _ir[2305934])
        (2068330 'move' call_tmp[2068321] ret_tmp[2068323])
        ref i_ir[2308711]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2308715 'move' i_ir[2308711](2308713 'set reference' call_tmp[2068321]))
        val ret[2308718]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
        val _ic_[2308720]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
        const-val call_tmp[2308722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2308724 'move' call_tmp[2308722](2308726 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
        const-val cast_tmp[2308728]:c_void_ptr[149] "dead after last mention" "temp"
        (2308730 'move' cast_tmp[2308728](2308733 call chpl_here_alloc[187788] call_tmp[2308722] 28))
        (2308736 'move' _ic_[2308720](2308738 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2308728]))
        (2308741 'setcid' _ic_[2308720])
        (2308743 'move' ret[2308718] _ic_[2308720])
        (2308746 '.=' ret[2308718] more[1103478] 1)
        const-val tmp[2308750]:int(64)[13] "temp"
        (2308752 'move' tmp[2308750](2308754 '.v' i_ir[2308711] F0_low[2115194]))
        (2308757 '.=' ret[2308718] F0_low[2115192] tmp[2308750])
        const-val tmp[2308761]:int(64)[13] "temp"
        (2308763 'move' tmp[2308761](2308765 '.v' i_ir[2308711] F1_high[2115198]))
        (2308768 '.=' ret[2308718] F1_high[2115196] tmp[2308761])
        (2068333 'move' _iterator[2068319] ret[2308718])
        val ret[2068339]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
        val call_tmp[2068341]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val i[2068345]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2068347]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2068349 'move' i[2068345] 0)
        val call_tmp[2068352]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val default_arg_first[2068354]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[2068356]:int(64)[13] "temp"
        (2068358 'move' low[2068356](2068360 '.v' _iterator[2068319] F0_low[2115192]))
        (2068363 'move' default_arg_first[2068354] low[2068356])
        const-val default_arg_last[2068368]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[2068370]:int(64)[13] "temp"
        (2068372 'move' high[2068370](2068374 '.v' _iterator[2068319] F1_high[2115196]))
        (2068377 'move' default_arg_last[2068368] high[2068370])
        const-val _return_tmp_[2068382]:bool[10] "dead after last mention" "temp"
        const-val low[2068384]:int(64)[13] "temp"
        (2068386 'move' low[2068384](2068388 '.v' _iterator[2068319] F0_low[2115192]))
        const-val high[2068391]:int(64)[13] "temp"
        (2068393 'move' high[2068391](2068395 '.v' _iterator[2068319] F1_high[2115196]))
        (2068398 'move' _return_tmp_[2068382](2068401 call chpl_checkIfRangeIterWillOverflow[1096265] low[2068384] high[2068391] 1 default_arg_first[2068354] default_arg_last[2068368] 1))
        CForLoop[2068408]
        {
          const-val yret[2068437]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068439 'move' yret[2068437] i[2068345])
          const-val _yieldedIndex[2068442]:int(64)[13] "temp"
          (2068444 'move' _yieldedIndex[2068442] i[2068345])
          const-val i[2068448]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068450 'move' i[2068448] _yieldedIndex[2068442])
          const-val yret[2068453]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068455 'move' yret[2068453] _yieldedIndex[2068442])
          const-val _yieldedIndex[2068483]:int(64)[13] "temp"
          (2068559 'move' _yieldedIndex[2068483] _yieldedIndex[2068442])
          const-val i[2068485]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068487 'move' i[2068485] _yieldedIndex[2068483])
          const-val yret[2068490]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068492 'move' yret[2068490] _yieldedIndex[2068483])
          const-val _yieldedIndex[2068495]:int(64)[13] "temp"
          (2068497 'move' _yieldedIndex[2068495] _yieldedIndex[2068483])
          const-val slot[2068501]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068503 'move' slot[2068501] _yieldedIndex[2068495])
          const-val yret[2068506]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068508 'move' yret[2068506] _yieldedIndex[2068495])
          const-val _yieldedIndex[2068511]:int(64)[13] "temp"
          (2068513 'move' _yieldedIndex[2068511] _yieldedIndex[2068495])
          const-val slot[2068517]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068519 'move' slot[2068517] _yieldedIndex[2068511])
          ref call_tmp[2068523]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2403044]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          (2403046 'move' call_tmp[2403044](2403048 'array_get' ret[1218920] slot[2068517]))
          (2068525 'move' call_tmp[2068523] call_tmp[2403044])
          val call_tmp[2068531]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
          val call_tmp[2403124]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
          (2403126 'move' call_tmp[2403124](2403129 call c_pointer_return[1223458] call_tmp[2068523]))
          (2068533 'move' call_tmp[2068531] call_tmp[2403124])
          val call_tmp[2068538]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val coerce_tmp[2068540]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2068542 'move' coerce_tmp[2068540](2068544 'cast' c_void_ptr[149] call_tmp[2068531]))
          const-val _return_tmp_[2068547]:c_void_ptr[149] "dead after last mention" "temp"
          val inlineImm[2403193]:uint(8)[100] "temp"
          (2403196 'move' inlineImm[2403193] 0)
          const-val call_tmp[2403199]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2403201 'move' call_tmp[2403199](2403203 'cast' int(32)[95] inlineImm[2403193]))
          (2403207 call memset[1223526] coerce_tmp[2068540] call_tmp[2403199] sizeofElement[1218947])
          (2068549 'move' _return_tmp_[2068547] coerce_tmp[2068540])
          {
            const-val low[2068410]:int(64)[13] "temp"
            (2068412 'move' low[2068410](2068414 '.v' _iterator[2068319] F0_low[2115192]))
            (2068417 '=' i[2068345] low[2068410])
          }
          {
            const-val high[2068421]:int(64)[13] "temp"
            (2068423 'move' high[2068421](2068425 '.v' _iterator[2068319] F1_high[2115196]))
            (2068428 '<=' i[2068345] high[2068421])
          }
          {
            val call_tmp[2068432]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2068434 '+=' i[2068345] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2068471]
        const-val call_tmp[2310955]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2310957 'move' call_tmp[2310955](2310959 'cast_to_void_star' _iterator[2068319]))
        (2310962 call chpl_here_free[188127] call_tmp[2310955])
        ref i_x[2311755]:2*int(64)[1040245] "temp"
        (2311759 'move' i_x[2311755](2311757 'set reference' tmp[2068171]))
        label _endchpl_direct_counted_range_iter_helper[2068479]
        const-val call_tmp[2311972]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2311974 'move' call_tmp[2311972](2311976 'cast_to_void_star' _iterator[1999328]))
        (2311979 call chpl_here_free[188127] call_tmp[2311972])
        label _endchpl_direct_counted_range_iter[1999406]
        const-val call_tmp[2312572]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2312574 'move' call_tmp[2312572](2312576 'cast_to_void_star' _iterator[1999304]))
        (2312579 call chpl_here_free[188127] call_tmp[2312572])
        label _end_allSlots[1999411]
        const-val call_tmp[2402951]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402953 'move' call_tmp[2402951](2402955 'cast_to_void_star' _iterator[1219020]))
        (2402958 call chpl_here_free[188127] call_tmp[2402951])
      }
      {
        const-val call_tmp[1219100]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2402339]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402341 'move' call_tmp[2402339](2402343 '==' tmp[1218977] parallelInit[11150]))
        (1219102 'move' call_tmp[1219100] call_tmp[2402339])
        const-val call_tmp[1219108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1219110 'move' call_tmp[1219108] call_tmp[1219100])
        if call_tmp[1219108]
        {
          const-val ret[1931458]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "concurrently accessed" "const"
          (1931461 'move' ret[1931458] ret[1218920])
          const-val sizeofElement[1931470]:uint(64)[115] "const"
          (1931473 'move' sizeofElement[1931470] sizeofElement[1218947])
          val ret[1931268]:nothing[7] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1931270]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1931272 'move' call_tmp[1931270](1931275 call _allSlotsNumChunks[201167] size[1218872]))
          const-val numChunks[1931277]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1931279 'move' numChunks[1931277] call_tmp[1931270])
          const-val call_tmp[1931282]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2234430]:int(64)[13] "temp"
          (2234433 'move' inlineImm[2234430] 1)
          const-val call_tmp[2234436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234438 'move' call_tmp[2234436](2234440 '==' numChunks[1931277] inlineImm[2234430]))
          (1931284 'move' call_tmp[1931282] call_tmp[2234436])
          const-val call_tmp[1931290]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1931292 'move' call_tmp[1931290] call_tmp[1931282])
          if call_tmp[1931290]
          {
            val _indexOfInterest[1931298]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1931300]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1931302]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1931304]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            val inlineImm[2297232]:int(64)[13] "temp"
            (2297235 'move' inlineImm[2297232] 0)
            ref i__retArg[2297237]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2297241 'move' i__retArg[2297237](2297239 'set reference' ret_tmp[1931304]))
            val _ir[2297244]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2297246 '.=' _ir[2297244] F0_low[2107538] inlineImm[2297232])
            (2297250 '.=' _ir[2297244] F1_count[2107542] size[1218872])
            (2297254 '=' i__retArg[2297237] _ir[2297244])
            (1931311 'move' call_tmp[1931302] ret_tmp[1931304])
            ref i_ir[2298087]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2298091 'move' i_ir[2298087](2298089 'set reference' call_tmp[1931302]))
            val ret[2298094]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
            val _ic_[2298096]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
            const-val call_tmp[2298098]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2298100 'move' call_tmp[2298098](2298102 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
            const-val cast_tmp[2298104]:c_void_ptr[149] "dead after last mention" "temp"
            (2298106 'move' cast_tmp[2298104](2298109 call chpl_here_alloc[187788] call_tmp[2298098] 30))
            (2298112 'move' _ic_[2298096](2298114 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2298104]))
            (2298117 'setcid' _ic_[2298096])
            (2298119 'move' ret[2298094] _ic_[2298096])
            (2298122 '.=' ret[2298094] more[1103982] 1)
            const-val tmp[2298126]:int(64)[13] "temp"
            (2298128 'move' tmp[2298126](2298130 '.v' i_ir[2298087] F0_low[2107538]))
            (2298133 '.=' ret[2298094] F0_low[2107536] tmp[2298126])
            const-val tmp[2298137]:int(64)[13] "temp"
            (2298139 'move' tmp[2298137](2298141 '.v' i_ir[2298087] F1_count[2107542]))
            (2298144 '.=' ret[2298094] F1_count[2107540] tmp[2298137])
            (1931314 'move' _iterator[1931300] ret[2298094])
            val ret[2030584]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2030586]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2030588]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2030590]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2030592]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            const-val low[2030980]:int(64)[13] "temp"
            (2030985 'move' low[2030980](2030982 '.v' _iterator[1931300] F0_low[2107536]))
            const-val count[2030987]:int(64)[13] "temp"
            (2030992 'move' count[2030987](2030989 '.v' _iterator[1931300] F1_count[2107540]))
            ref i__retArg[2300096]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2300100 'move' i__retArg[2300096](2300098 'set reference' ret_tmp[2030592]))
            val _ir[2300103]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2300105 '.=' _ir[2300103] F0_low[2113696] low[2030980])
            (2300109 '.=' _ir[2300103] F1_count[2113700] count[2030987])
            (2300113 '=' i__retArg[2300096] _ir[2300103])
            (2030599 'move' call_tmp[2030590] ret_tmp[2030592])
            ref i_ir[2301308]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2301312 'move' i_ir[2301308](2301310 'set reference' call_tmp[2030590]))
            val ret[2301315]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
            val _ic_[2301317]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
            const-val call_tmp[2301319]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2301321 'move' call_tmp[2301319](2301323 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
            const-val cast_tmp[2301325]:c_void_ptr[149] "dead after last mention" "temp"
            (2301327 'move' cast_tmp[2301325](2301330 call chpl_here_alloc[187788] call_tmp[2301319] 29))
            (2301333 'move' _ic_[2301317](2301335 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301325]))
            (2301338 'setcid' _ic_[2301317])
            (2301340 'move' ret[2301315] _ic_[2301317])
            (2301343 '.=' ret[2301315] more[1103732] 1)
            const-val tmp[2301347]:int(64)[13] "temp"
            (2301349 'move' tmp[2301347](2301351 '.v' i_ir[2301308] F0_low[2113696]))
            (2301354 '.=' ret[2301315] F0_low[2113694] tmp[2301347])
            const-val tmp[2301358]:int(64)[13] "temp"
            (2301360 'move' tmp[2301358](2301362 '.v' i_ir[2301308] F1_count[2113700]))
            (2301365 '.=' ret[2301315] F1_count[2113698] tmp[2301358])
            (2030602 'move' _iterator[2030588] ret[2301315])
            val ret[2030608]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
            val call_tmp[2030610]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2030612]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2030614]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2030616]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2030618]:int(64)[13] "temp"
            (2030620 'move' count[2030618](2030622 '.v' _iterator[2030588] F1_count[2113698]))
            const-val call_tmp[2230758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2230760 'move' call_tmp[2230758](2230762 '<' count[2030618] 0))
            (2030625 'move' call_tmp[2030616] call_tmp[2230758])
            (2030630 'move' tmp[2030614] call_tmp[2030616])
            (2030633 'move' tmp[2030612] call_tmp[2030616])
            const-val call_tmp[2030636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2030638 'move' call_tmp[2030636] call_tmp[2030616])
            if call_tmp[2030616]
            {
              (2030644 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2030647]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2030649]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2030651]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2030653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2030655]:int(64)[13] "temp"
            (2030657 'move' count[2030655](2030659 '.v' _iterator[2030588] F1_count[2113698]))
            val inlineImm[2234870]:int(64)[13] "temp"
            (2234873 'move' inlineImm[2234870] 0)
            const-val call_tmp[2234876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2234878 'move' call_tmp[2234876](2234880 '==' count[2030655] inlineImm[2234870]))
            (2030662 'move' call_tmp[2030653] call_tmp[2234876])
            (2030668 'move' tmp[2030651] call_tmp[2030653])
            if call_tmp[2030653]
            {
              const-val tmp[2030673]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2030675]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2030677]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2030679]:int(64)[13] "temp"
              (2030681 'move' low[2030679](2030683 '.v' _iterator[2030588] F0_low[2113694]))
              const-val call_tmp[2231698]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2231700 'move' call_tmp[2231698](2231702 'cast' uint(64)[115] low[2030679]))
              (2030686 'move' call_tmp[2030677] call_tmp[2231698])
              const-val call_tmp[2030691]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2030693]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2030695 'move' coerce_tmp[2030693](2030697 'cast' uint(64)[115] 1))
              const-val call_tmp[2302284]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2302286 'move' call_tmp[2302284](2302288 '-' call_tmp[2030677] 1))
              (2030700 'move' call_tmp[2030691] call_tmp[2302284])
              const-val call_tmp[2030705]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val call_tmp[2302714]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2302716 'move' call_tmp[2302714](2302718 'cast' int(64)[13] call_tmp[2030691]))
              (2030707 'move' call_tmp[2030705] call_tmp[2302714])
              const-val ret_tmp[2030712]:2*int(64)[1040245] "temp"
              const-val low[2030714]:int(64)[13] "temp"
              (2030716 'move' low[2030714](2030718 '.v' _iterator[2030588] F0_low[2113694]))
              ref i__retArg[2303771]:2*int(64)[1040245] "temp"
              (2303775 'move' i__retArg[2303771](2303773 'set reference' ret_tmp[2030712]))
              val this[2303778]:2*int(64)[1040245] "arg this"
              (2303780 '.=' this[2303778] x0[1040241] low[2030714])
              (2303784 '.=' this[2303778] x1[1040243] call_tmp[2030705])
              (2303788 '=' i__retArg[2303771] this[2303778])
              (2030726 'move' tmp[2030673] ret_tmp[2030712])
              (2030729 'move' tmp[2030649] tmp[2030673])
            }
            {
              const-val tmp[2030733]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2030735]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2030737]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2030739]:int(64)[13] "temp"
              (2030741 'move' count[2030739](2030743 '.v' _iterator[2030588] F1_count[2113698]))
              (2030746 'move' call_tmp[2030737] count[2030739])
              const-val call_tmp[2030749]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2030751]:int(64)[13] "temp"
              (2030753 'move' count[2030751](2030755 '.v' _iterator[2030588] F1_count[2113698]))
              const-val call_tmp[2261674]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2261676 'move' call_tmp[2261674](2261678 '-' count[2030751] 1))
              (2030758 'move' call_tmp[2030749] call_tmp[2261674])
              const-val call_tmp[2030763]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2030765]:int(64)[13] "temp"
              (2030767 'move' low[2030765](2030769 '.v' _iterator[2030588] F0_low[2113694]))
              const-val call_tmp[2242416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2242418 'move' call_tmp[2242416](2242420 '+' low[2030765] call_tmp[2030749]))
              (2030772 'move' call_tmp[2030763] call_tmp[2242416])
              const-val ret_tmp[2030778]:2*int(64)[1040245] "temp"
              const-val low[2030780]:int(64)[13] "temp"
              (2030782 'move' low[2030780](2030784 '.v' _iterator[2030588] F0_low[2113694]))
              ref i__retArg[2303793]:2*int(64)[1040245] "temp"
              (2303797 'move' i__retArg[2303793](2303795 'set reference' ret_tmp[2030778]))
              val this[2303800]:2*int(64)[1040245] "arg this"
              (2303802 '.=' this[2303800] x0[1040241] low[2030780])
              (2303806 '.=' this[2303800] x1[1040243] call_tmp[2030763])
              (2303810 '=' i__retArg[2303793] this[2303800])
              (2030792 'move' tmp[2030733] ret_tmp[2030778])
              (2030795 'move' tmp[2030649] tmp[2030733])
            }
            (2030799 '=' tmp[2030647] tmp[2030649])
            (2030802 'noop')
            1
            const-ref call_tmp[2030804]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2030806 'move' call_tmp[2030804](2030808 '.' tmp[2030647] x0[1040241]))
            const-val start[2030811]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2030813]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2030815 'move' coerce_tmp[2030813](2030817 'deref' call_tmp[2030804]))
            (2030819 '=' start[2030811] coerce_tmp[2030813])
            (2030822 'noop')
            const-ref call_tmp[2030823]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2030825 'move' call_tmp[2030823](2030827 '.' tmp[2030647] x1[1040243]))
            const-val end[2030830]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2030832]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2030834 'move' coerce_tmp[2030832](2030836 'deref' call_tmp[2030823]))
            (2030838 '=' end[2030830] coerce_tmp[2030832])
            (2030841 'noop')
            val _indexOfInterest[2030842]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2030844]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2030846]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2030848]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            ref i__retArg[2305333]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2305337 'move' i__retArg[2305333](2305335 'set reference' ret_tmp[2030848]))
            val _ir[2305340]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2305342 '.=' _ir[2305340] F0_low[2115194] coerce_tmp[2030813])
            (2305346 '.=' _ir[2305340] F1_high[2115198] coerce_tmp[2030832])
            (2305350 '=' i__retArg[2305333] _ir[2305340])
            (2030855 'move' call_tmp[2030846] ret_tmp[2030848])
            ref i_ir[2307010]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2307014 'move' i_ir[2307010](2307012 'set reference' call_tmp[2030846]))
            val ret[2307017]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
            val _ic_[2307019]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
            const-val call_tmp[2307021]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2307023 'move' call_tmp[2307021](2307025 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
            const-val cast_tmp[2307027]:c_void_ptr[149] "dead after last mention" "temp"
            (2307029 'move' cast_tmp[2307027](2307032 call chpl_here_alloc[187788] call_tmp[2307021] 28))
            (2307035 'move' _ic_[2307019](2307037 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2307027]))
            (2307040 'setcid' _ic_[2307019])
            (2307042 'move' ret[2307017] _ic_[2307019])
            (2307045 '.=' ret[2307017] more[1103478] 1)
            const-val tmp[2307049]:int(64)[13] "temp"
            (2307051 'move' tmp[2307049](2307053 '.v' i_ir[2307010] F0_low[2115194]))
            (2307056 '.=' ret[2307017] F0_low[2115192] tmp[2307049])
            const-val tmp[2307060]:int(64)[13] "temp"
            (2307062 'move' tmp[2307060](2307064 '.v' i_ir[2307010] F1_high[2115198]))
            (2307067 '.=' ret[2307017] F1_high[2115196] tmp[2307060])
            (2030858 'move' _iterator[2030844] ret[2307017])
            val ret[2090351]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
            val call_tmp[2090353]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val i[2090357]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2090359]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2090361 'move' i[2090357] 0)
            val call_tmp[2090364]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val default_arg_first[2090366]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val low[2090512]:int(64)[13] "temp"
            (2090517 'move' low[2090512](2090514 '.v' _iterator[2030844] F0_low[2115192]))
            (2090368 'move' default_arg_first[2090366] low[2090512])
            const-val default_arg_last[2090373]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val high[2090519]:int(64)[13] "temp"
            (2090524 'move' high[2090519](2090521 '.v' _iterator[2030844] F1_high[2115196]))
            (2090375 'move' default_arg_last[2090373] high[2090519])
            const-val _return_tmp_[2090380]:bool[10] "dead after last mention" "temp"
            const-val low[2090526]:int(64)[13] "temp"
            (2090531 'move' low[2090526](2090528 '.v' _iterator[2030844] F0_low[2115192]))
            const-val high[2090533]:int(64)[13] "temp"
            (2090538 'move' high[2090533](2090535 '.v' _iterator[2030844] F1_high[2115196]))
            (2090382 'move' _return_tmp_[2090380](2090385 call chpl_checkIfRangeIterWillOverflow[1096265] low[2090526] high[2090533] 1 default_arg_first[2090366] default_arg_last[2090373] 1))
            CForLoop[2090392] order-independent
            {
              const-val yret[2090407]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090409 'move' yret[2090407] i[2090357])
              const-val _yieldedIndex[2090423]:int(64)[13] "temp"
              (2090510 'move' _yieldedIndex[2090423] i[2090357])
              const-val i[2090425]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090427 'move' i[2090425] _yieldedIndex[2090423])
              const-val yret[2090430]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090432 'move' yret[2090430] _yieldedIndex[2090423])
              const-val _yieldedIndex[2090435]:int(64)[13] "temp"
              (2090437 'move' _yieldedIndex[2090435] _yieldedIndex[2090423])
              const-val i[2090441]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090443 'move' i[2090441] _yieldedIndex[2090435])
              const-val yret[2090446]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090448 'move' yret[2090446] _yieldedIndex[2090435])
              const-val _yieldedIndex[2090451]:int(64)[13] "temp"
              (2090453 'move' _yieldedIndex[2090451] _yieldedIndex[2090435])
              const-val slot[2090457]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090459 'move' slot[2090457] _yieldedIndex[2090451])
              const-val yret[2090463]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090465 'move' yret[2090463] slot[2090457])
              const-val slot[2090468]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (2090470 'move' slot[2090468] yret[2090463])
              ref call_tmp[2090474]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
              ref call_tmp[2403104]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
              (2403106 'move' call_tmp[2403104](2403108 'array_get' ret[1931458] slot[2090468]))
              (2090476 'move' call_tmp[2090474] call_tmp[2403104])
              val call_tmp[2090482]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
              val call_tmp[2403134]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
              (2403136 'move' call_tmp[2403134](2403139 call c_pointer_return[1223458] call_tmp[2090474]))
              (2090484 'move' call_tmp[2090482] call_tmp[2403134])
              val call_tmp[2090489]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val coerce_tmp[2090491]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2090493 'move' coerce_tmp[2090491](2090495 'cast' c_void_ptr[149] call_tmp[2090482]))
              const-val _return_tmp_[2090498]:c_void_ptr[149] "dead after last mention" "temp"
              val inlineImm[2403233]:uint(8)[100] "temp"
              (2403236 'move' inlineImm[2403233] 0)
              const-val call_tmp[2403239]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2403241 'move' call_tmp[2403239](2403243 'cast' int(32)[95] inlineImm[2403233]))
              (2403247 call memset[1223526] coerce_tmp[2090491] call_tmp[2403239] sizeofElement[1931470])
              (2090500 'move' _return_tmp_[2090498] coerce_tmp[2090491])
              {
                const-val low[2090540]:int(64)[13] "temp"
                (2090545 'move' low[2090540](2090542 '.v' _iterator[2030844] F0_low[2115192]))
                (2090394 '=' i[2090357] low[2090540])
              }
              {
                const-val high[2090547]:int(64)[13] "temp"
                (2090552 'move' high[2090547](2090549 '.v' _iterator[2030844] F1_high[2115196]))
                (2090398 '<=' i[2090357] high[2090547])
              }
              {
                val call_tmp[2090402]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2090404 '+=' i[2090357] 1)
              }
            }
            label _endchpl_direct_param_stride_range_iter[2090419]
            const-val call_tmp[2310499]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2310501 'move' call_tmp[2310499](2310503 'cast_to_void_star' _iterator[2030844]))
            (2310506 call chpl_here_free[188127] call_tmp[2310499])
            ref i_x[2311485]:2*int(64)[1040245] "temp"
            (2311489 'move' i_x[2311485](2311487 'set reference' tmp[2030647]))
            label _endchpl_direct_counted_range_iter_helper[2030914]
            const-val call_tmp[2312032]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2312034 'move' call_tmp[2312032](2312036 'cast_to_void_star' _iterator[2030588]))
            (2312039 call chpl_here_free[188127] call_tmp[2312032])
            label _endchpl_direct_counted_range_iter[2030919]
            const-val call_tmp[2312380]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2312382 'move' call_tmp[2312380](2312384 'cast_to_void_star' _iterator[1931300]))
            (2312387 call chpl_here_free[188127] call_tmp[2312380])
          }
          {
            const-val tmpIter[1931352]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1931354]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1931356]:range(int(64),boundedLow,false)[1087754] "temp"
            (1931359 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1931356])
            (1931362 'move' call_tmp[1931354] ret_tmp[1931356])
            const-val ret_tmp[1931365]:range(int(64),bounded,false)[1027003] "temp"
            (1931368 call #[1088114] call_tmp[1931354] numChunks[1931277] ret_tmp[1931365])
            (1931372 'move' tmpIter[1931352] ret_tmp[1931365])
            const _coforallCount[1931376]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2403388]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "RVV" "temp"
            val new_temp[2403390]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "temp"
            (2403392 'move' new_temp[2403390](2403395 call _new[947245]))
            (2403396 'move' ret[2403388] new_temp[2403390])
            (1931378 'move' _coforallCount[1931376] ret[2403388])
            const-val numTasks[1931382]:int(64)[13] "dead at end of block" "temp"
            (1931384 'move' numTasks[1931382](1931387 call size[1035978] tmpIter[1931352]))
            (1931390 call _upEndCount[1228350] _coforallCount[1931376] numTasks[1931382])
            (1931394 call chpl_resetTaskSpawn[1229432] numTasks[1931382])
            val _indexOfInterest[1931396]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1931398]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
            ref i_x[2353131]:range(int(64),bounded,false)[1027003] "temp"
            (2353135 'move' i_x[2353131](2353133 'set reference' tmpIter[1931352]))
            const-val call_tmp[2353138]:_ir_these_range_int64_t_bounded_F[1096898] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[2353140]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2353142 'move' coerce_tmp[2353140](2353144 'deref' i_x[2353131]))
            val _ir[2353146]:_ir_these_range_int64_t_bounded_F[1096898] "temp"
            (2353148 '.=' _ir[2353146] F0_this[2113073] coerce_tmp[2353140])
            (2353152 'move' call_tmp[2353138] _ir[2353146])
            val ret[2353155]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "RVV" "temp"
            val _ic_[2353157]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "temp"
            const-val call_tmp[2353159]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2353161 'move' call_tmp[2353159](2353163 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1096892]))
            const-val cast_tmp[2353165]:c_void_ptr[149] "dead after last mention" "temp"
            (2353167 'move' cast_tmp[2353165](2353170 call chpl_here_alloc[187788] call_tmp[2353159] 27))
            (2353173 'move' _ic_[2353157](2353175 'cast' _ic_these_range_int64_t_bounded_F[1096892] cast_tmp[2353165]))
            (2353178 'setcid' _ic_[2353157])
            (2353180 'move' ret[2353155] _ic_[2353157])
            (2353183 '.=' ret[2353155] more[1096895] 1)
            const-val tmp[2353187]:range(int(64),bounded,false)[1027003] "temp"
            (2353189 'move' tmp[2353187](2353191 '.v' call_tmp[2353138] F0_this[2113073]))
            (2353194 '.=' ret[2353155] F0_this[2113071] tmp[2353187])
            (1931400 'move' _iterator[1931398] ret[2353155])
            val ret[2030995]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2030997]:bool[10] "dead after last mention" "temp"
            const-val this[2031110]:range(int(64),bounded,false)[1027003] "temp"
            (2031115 'move' this[2031110](2031112 '.v' _iterator[1931398] F0_this[2113071]))
            (2030999 'move' _return_tmp_[2030997](2031002 call checkIfIterWillOverflow[1096003] this[2031110] 1))
            val i[2031005]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2031007]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2031009 'move' i[2031005] 0)
            const-ref call_tmp[2031012]:int(64)[13] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2031117]:range(int(64),bounded,false)[1027003] "temp"
            (2031122 'move' this[2031117](2031119 '.v' _iterator[1931398] F0_this[2113071]))
            ref i_this[2358810]:range(int(64),bounded,false)[1027003] "temp"
            (2358814 'move' i_this[2358810](2358812 'set reference' this[2031117]))
            ref call_tmp[2358817]:int(64)[13] "dead after last mention" "maybe param" "temp"
            (2358819 'move' call_tmp[2358817](2358821 '.' i_this[2358810] _low[1026965]))
            (2031014 'move' call_tmp[2031012] call_tmp[2358817])
            const-val start[2031019]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031021]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031023 'move' coerce_tmp[2031021](2031025 'deref' call_tmp[2031012]))
            (2031027 '=' start[2031019] coerce_tmp[2031021])
            (2031030 'noop')
            const-ref call_tmp[2031031]:int(64)[13] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2031124]:range(int(64),bounded,false)[1027003] "temp"
            (2031129 'move' this[2031124](2031126 '.v' _iterator[1931398] F0_this[2113071]))
            ref i_this[2360354]:range(int(64),bounded,false)[1027003] "temp"
            (2360358 'move' i_this[2360354](2360356 'set reference' this[2031124]))
            ref call_tmp[2360361]:int(64)[13] "dead after last mention" "maybe param" "temp"
            (2360363 'move' call_tmp[2360361](2360365 '.' i_this[2360354] _high[1026970]))
            (2031033 'move' call_tmp[2031031] call_tmp[2360361])
            const end[2031038]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031040]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031042 'move' coerce_tmp[2031040](2031044 'deref' call_tmp[2031031]))
            (2031046 '=' end[2031038] coerce_tmp[2031040])
            (2031049 'noop')
            CForLoop[2031050]
            {
              const-val yret[2031065]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2031067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2031131]:range(int(64),bounded,false)[1027003] "temp"
              (2031136 'move' this[2031131](2031133 '.v' _iterator[1931398] F0_this[2113071]))
              (2031069 'move' call_tmp[2031067] i[2031005])
              (2031075 'move' yret[2031065] call_tmp[2031067])
              const-val _yieldedIndex[2031089]:int(64)[13] "coforall index var" "temp"
              (2031108 'move' _yieldedIndex[2031089] call_tmp[2031067])
              const-val chunk[2031091]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (2031093 'move' chunk[2031091] _yieldedIndex[2031089])
              val _args_forcoforall_fn[2215998]:_class_localscoforall_fn[2215982] "temp"
              (2216002 'move' _args_forcoforall_fn[2215998](2216000 'stack allocate class' _class_localscoforall_fn[2215982]))
              (2216004 '.=' _args_forcoforall_fn[2215998] _0_size[2215985] size[1218872])
              (2216008 '.=' _args_forcoforall_fn[2215998] _1_numChunks[2215987] numChunks[1931277])
              (2216012 '.=' _args_forcoforall_fn[2215998] _2_chunk[2215989] chunk[2031091])
              (2216016 '.=' _args_forcoforall_fn[2215998] _3__coforallCount[2215991] _coforallCount[1931376])
              (2216020 '.=' _args_forcoforall_fn[2215998] _4_ret[2215993] ret[1931458])
              (2216024 '.=' _args_forcoforall_fn[2215998] _5_sizeofElement[2215995] sizeofElement[1931470])
              val _args_vforcoforall_fn[2216028]:c_void_ptr[149] "temp"
              (2216032 'move' _args_vforcoforall_fn[2216028](2216030 'cast_to_void_star' _args_forcoforall_fn[2215998]))
              val _args_sizecoforall_fn[2216034]:int(64)[13] "temp"
              (2216038 'move' _args_sizecoforall_fn[2216034](2216036 'sizeof_bundle' _class_localscoforall_fn[2215982]))
              ref _taskListcoforall_fn[2216040]:c_void_ptr[149] "temp"
              (2216045 'move' _taskListcoforall_fn[2216040](2216042 '.' _coforallCount[1931376] taskList[12712]))
              val _taskListNodecoforall_fn[2216047]:int(64)[13] "temp"
              (2216051 'move' _taskListNodecoforall_fn[2216047](2216049 '_wide_get_node' _coforallCount[1931376]))
              (2216131 call wrapcoforall_fn[2216053] _taskListcoforall_fn[2216040] _taskListNodecoforall_fn[2216047] _args_vforcoforall_fn[2216028] _args_sizecoforall_fn[2216034] _args_forcoforall_fn[2215998])
              {
                (2031052 '=' i[2031005] coerce_tmp[2031021])
              }
              {
                (2031056 '<=' i[2031005] end[2031038])
              }
              {
                val call_tmp[2031060]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2031062 '+=' i[2031005] 1)
              }
            }
            label _endthese[2031085]
            val error[1931424]:Error[167984] "error variable" "temp"
            (1931426 'move' error[1931424] nil[44])
            (1931430 call _waitEndCount[1235226] _coforallCount[1931376] numTasks[1931382] error[1931424])
            val errorExists[2225896]:bool[10] "temp"
            (2225901 'move' errorExists[2225896](2225898 '!=' error[1931424] nil[44]))
            if errorExists[2225896]
            {
              (1931438 call chpl_propagate_error[170518] error[1931424])
            }
            val call_tmp[2407683]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "expr temp" "maybe param" "temp"
            (2407685 'move' call_tmp[2407683] _coforallCount[1931376])
            val coerce_tmp[2407688]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2407690 'move' coerce_tmp[2407688](2407692 'cast' object[22] _coforallCount[1931376]))
            const-val call_tmp[2407695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2407697 'move' call_tmp[2407695](2407699 'ptr_neq' coerce_tmp[2407688] nil[44]))
            if call_tmp[2407695]
            {
              val coerce_tmp[2407704]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2407706 'move' coerce_tmp[2407704] call_tmp[2407683])
              ref _field_destructor_tmp_[2407709]:AtomicT(int(64))[940323] "temp"
              (2407711 'move' _field_destructor_tmp_[2407709](2407713 '.' coerce_tmp[2407704] i[945526]))
              (2407717 call deinit[1604126] _field_destructor_tmp_[2407709])
              val _parent_destructor_tmp_[2407719]:_EndCountBase[12717] "temp"
              (2407721 'move' _parent_destructor_tmp_[2407719](2407723 'cast' _EndCountBase[12717] coerce_tmp[2407704]))
              const-ref _field_destructor_tmp_[2407726]:chpl_TaskErrors[168348] "temp"
              (2407728 'move' _field_destructor_tmp_[2407726](2407730 '.' _parent_destructor_tmp_[2407719] errors[12707]))
              const-ref _field_destructor_tmp_[2407733]:chpl_LocalSpinlock[187432] "temp"
              (2407735 'move' _field_destructor_tmp_[2407733](2407737 '.' _field_destructor_tmp_[2407726] _errorsLock[168271]))
              ref _field_destructor_tmp_[2407740]:AtomicBool[45877] "temp"
              (2407742 'move' _field_destructor_tmp_[2407740](2407744 '.' _field_destructor_tmp_[2407733] l[187317]))
              (2407748 call deinit[44863] _field_destructor_tmp_[2407740])
              const-val tmp[2407750]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
              const-val call_tmp[2407752]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
              (2407754 'move' call_tmp[2407752](2407756 '_wide_get_locale' call_tmp[2407683]))
              (2407758 'move' tmp[2407750] call_tmp[2407752])
              val isdirect[2407761]:bool[10] "temp"
              (2407763 'move' isdirect[2407761](2407766 call chpl_doDirectExecuteOn[187469] call_tmp[2407752]))
              if isdirect[2407761]
              {
                (2407771 call on_fn[1234390] call_tmp[2407683])
              }
              {
                val _args_foron_fn[2407774]:_class_localson_fn[2204833] "temp"
                (2407776 'move' _args_foron_fn[2407774](2407778 'stack allocate class' _class_localson_fn[2204833]))
                (2407780 '.=' _args_foron_fn[2407774] _0_tmp[2204836] tmp[2407750])
                (2407784 '.=' _args_foron_fn[2407774] _1_arg[2204838] call_tmp[2407683])
                val _args_vforon_fn[2407788]:c_void_ptr[149] "temp"
                (2407790 'move' _args_vforon_fn[2407788](2407792 'cast_to_void_star' _args_foron_fn[2407774]))
                val _args_sizeon_fn[2407794]:int(64)[13] "temp"
                (2407796 'move' _args_sizeon_fn[2407794](2407798 'sizeof_bundle' _class_localson_fn[2204833]))
                on(2407801 call wrapon_fn[2204867] tmp[2407750] _args_vforon_fn[2407788] _args_sizeon_fn[2407794] _args_foron_fn[2407774])
              }
            }
            const-val call_tmp[2369915]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2369917 'move' call_tmp[2369915](2369919 'cast_to_void_star' _iterator[1931398]))
            (2369922 call chpl_here_free[188127] call_tmp[2369915])
          }
          label _end_allSlots[1931454]
          (1930344 call chpl_after_forall_fence[13071])
        }
        {
          (1219169 call halt[154111] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    const-val call_tmp[1219174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1219176 'move' call_tmp[1219174] callPostAlloc[1218905])
    if call_tmp[1219174]
    {
      const-val call_tmp[2411630]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411632 'move' call_tmp[2411630](2411634 'cast' c_void_ptr[149] ret[1218920]))
      const-val call_tmp[2411637]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411639 'move' call_tmp[2411637](2411641 'cast' uint(64)[115] size[1218872]))
      const-val call_tmp[2411644]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411646 'move' call_tmp[2411644](2411648 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983]))
      const-val call_tmp[2411650]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2411652 'move' call_tmp[2411650](2411654 'cast' uint(64)[115] call_tmp[2411644]))
      (2411658 call chpl_mem_array_postAlloc[1242846] call_tmp[2411630] call_tmp[2411637] call_tmp[2411650])
    }
    (1219190 'move' ret[1218876] ret[1218920])
    label _end__allocateData[1219198]
    (1219200 return ret[1218876])
  }
  function _allocateData[1248292](const in arg size[1248294]:int(64)[13]) : _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val _formal_type_tmp_[1879887]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "temp"
    val ret[1248298]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1248306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2233500]:int(64)[13] "temp"
    (2233503 'move' inlineImm[2233500] 0)
    const-val call_tmp[2233506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233508 'move' call_tmp[2233506](2233510 '==' size[1248294] inlineImm[2233500]))
    (1248308 'move' call_tmp[1248306] call_tmp[2233506])
    const-val call_tmp[1248314]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1248316 'move' call_tmp[1248314] call_tmp[1248306])
    if call_tmp[1248314]
    {
      (1248324 call halt[154111] "attempt to allocate hashtable with size 0")
    }
    const-val callPostAlloc[1248327]:bool[10] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[1248333]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "maybe param" "temp"
    const-val default_arg_subloc[1248770]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val subloc[2412297]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "suppress lvalue error" "temp" "user variable name"
    (2412299 'move' subloc[2412297] c_sublocid_none[89873])
    (1248774 'move' default_arg_subloc[1248770] subloc[2412297])
    val _formal_tmp_out_callPostAlloc[1248777]:bool[10] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (1248335 'move' call_tmp[1248333](1248338 call _ddata_allocate_noinit[1248628] size[1248294] _formal_tmp_out_callPostAlloc[1248777] default_arg_subloc[1248770]))
    (1250893 'move' callPostAlloc[1248327] _formal_tmp_out_callPostAlloc[1248777])
    val ret[1248342]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "insert auto destroy"
    (1248344 'move' ret[1248342] call_tmp[1248333])
    const-val call_tmp[1248348]:ArrayInit[11152] "dead at end of block" "maybe param" "temp"
    (1248350 'move' call_tmp[1248348](1248353 call init_elts_method[1249044] size[1248294]))
    const-val initMethod[1248356]:ArrayInit[11152] "dead at end of block" "insert auto destroy"
    (1248358 'move' initMethod[1248356] call_tmp[1248348])
    const-val call_tmp[1248362]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2412337]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2412339 'move' call_tmp[2412337](2412341 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683]))
    const-val call_tmp[2412343]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2412345 'move' call_tmp[2412343](2412347 'cast' uint(64)[115] call_tmp[2412337]))
    (1248364 'move' call_tmp[1248362] call_tmp[2412343])
    const-val sizeofElement[1248369]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (1248371 'move' sizeofElement[1248369] call_tmp[1248362])
    const-val tmp[1248399]:ArrayInit[11152] "dead after last mention" "expr temp" "maybe param" "temp"
    (1248401 'move' tmp[1248399] initMethod[1248356])
    const-val call_tmp[1248404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2402359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2402361 'move' call_tmp[2402359](2402363 '==' tmp[1248399] noInit[11146]))
    (1248406 'move' call_tmp[1248404] call_tmp[2402359])
    const-val call_tmp[1248412]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1248414 'move' call_tmp[1248412] call_tmp[1248404])
    if call_tmp[1248412]
    {
    }
    {
      const-val call_tmp[1248422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2402369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402371 'move' call_tmp[2402369](2402373 '==' tmp[1248399] serialInit[11148]))
      (1248424 'move' call_tmp[1248422] call_tmp[2402369])
      const-val call_tmp[1248430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1248432 'move' call_tmp[1248430] call_tmp[1248422])
      if call_tmp[1248430]
      {
        val _indexOfInterest[1248440]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1248442]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1248444]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1907202]:_ir__allSlots[1221795] "temp"
        ref i__retArg[2325054]:_ir__allSlots[1221795] "temp"
        (2325058 'move' i__retArg[2325054](2325056 'set reference' ret_tmp[1907202]))
        val _ir[2325061]:_ir__allSlots[1221795] "temp"
        (2325063 '.=' _ir[2325061] F0_size[2103704] size[1248294])
        (2325067 '=' i__retArg[2325054] _ir[2325061])
        (1907205 'move' call_tmp[1248444] ret_tmp[1907202])
        ref i_ir[2402690]:_ir__allSlots[1221795] "temp"
        (2402694 'move' i_ir[2402690](2402692 'set reference' call_tmp[1248444]))
        val ret[2402697]:_ic__allSlots[1221789] "dead after last mention" "RVV" "temp"
        val _ic_[2402699]:_ic__allSlots[1221789] "dead after last mention" "temp"
        const-val call_tmp[2402701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402703 'move' call_tmp[2402701](2402705 'sizeof_bundle' _ic__allSlots[1221789]))
        const-val cast_tmp[2402707]:c_void_ptr[149] "dead after last mention" "temp"
        (2402709 'move' cast_tmp[2402707](2402712 call chpl_here_alloc[187788] call_tmp[2402701] 38))
        (2402715 'move' _ic_[2402699](2402717 'cast' _ic__allSlots[1221789] cast_tmp[2402707]))
        (2402720 'setcid' _ic_[2402699])
        (2402722 'move' ret[2402697] _ic_[2402699])
        (2402725 '.=' ret[2402697] more[1221792] 1)
        const-val tmp[2402729]:int(64)[13] "temp"
        (2402731 'move' tmp[2402729](2402733 '.v' i_ir[2402690] F0_size[2103704]))
        (2402736 '.=' ret[2402697] F0_size[2103702] tmp[2402729])
        (1248451 'move' _iterator[1248442] ret[2402697])
        val ret[1999610]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1999612]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1999614]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1999616]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1999618]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        const-val size[1999771]:int(64)[13] "temp"
        (1999776 'move' size[1999771](1999773 '.v' _iterator[1248442] F0_size[2103702]))
        val inlineImm[2297691]:int(64)[13] "temp"
        (2297694 'move' inlineImm[2297691] 0)
        ref i__retArg[2297696]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2297700 'move' i__retArg[2297696](2297698 'set reference' ret_tmp[1999618]))
        val _ir[2297703]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2297705 '.=' _ir[2297703] F0_low[2107538] inlineImm[2297691])
        (2297709 '.=' _ir[2297703] F1_count[2107542] size[1999771])
        (2297713 '=' i__retArg[2297696] _ir[2297703])
        (1999625 'move' call_tmp[1999616] ret_tmp[1999618])
        ref i_ir[2299158]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
        (2299162 'move' i_ir[2299158](2299160 'set reference' call_tmp[1999616]))
        val ret[2299165]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
        val _ic_[2299167]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
        const-val call_tmp[2299169]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2299171 'move' call_tmp[2299169](2299173 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
        const-val cast_tmp[2299175]:c_void_ptr[149] "dead after last mention" "temp"
        (2299177 'move' cast_tmp[2299175](2299180 call chpl_here_alloc[187788] call_tmp[2299169] 30))
        (2299183 'move' _ic_[2299167](2299185 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2299175]))
        (2299188 'setcid' _ic_[2299167])
        (2299190 'move' ret[2299165] _ic_[2299167])
        (2299193 '.=' ret[2299165] more[1103982] 1)
        const-val tmp[2299197]:int(64)[13] "temp"
        (2299199 'move' tmp[2299197](2299201 '.v' i_ir[2299158] F0_low[2107538]))
        (2299204 '.=' ret[2299165] F0_low[2107536] tmp[2299197])
        const-val tmp[2299208]:int(64)[13] "temp"
        (2299210 'move' tmp[2299208](2299212 '.v' i_ir[2299158] F1_count[2107542]))
        (2299215 '.=' ret[2299165] F1_count[2107540] tmp[2299208])
        (1999628 'move' _iterator[1999614] ret[2299165])
        val ret[1999634]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
        val _indexOfInterest[1999636]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[1999638]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[1999640]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1999642]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        const-val low[1999644]:int(64)[13] "temp"
        (1999646 'move' low[1999644](1999648 '.v' _iterator[1999614] F0_low[2107536]))
        const-val count[1999651]:int(64)[13] "temp"
        (1999653 'move' count[1999651](1999655 '.v' _iterator[1999614] F1_count[2107540]))
        ref i__retArg[2300008]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2300012 'move' i__retArg[2300008](2300010 'set reference' ret_tmp[1999642]))
        val _ir[2300015]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2300017 '.=' _ir[2300015] F0_low[2113696] low[1999644])
        (2300021 '.=' _ir[2300015] F1_count[2113700] count[1999651])
        (2300025 '=' i__retArg[2300008] _ir[2300015])
        (1999663 'move' call_tmp[1999640] ret_tmp[1999642])
        ref i_ir[2301056]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
        (2301060 'move' i_ir[2301056](2301058 'set reference' call_tmp[1999640]))
        val ret[2301063]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
        val _ic_[2301065]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
        const-val call_tmp[2301067]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2301069 'move' call_tmp[2301067](2301071 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
        const-val cast_tmp[2301073]:c_void_ptr[149] "dead after last mention" "temp"
        (2301075 'move' cast_tmp[2301073](2301078 call chpl_here_alloc[187788] call_tmp[2301067] 29))
        (2301081 'move' _ic_[2301065](2301083 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301073]))
        (2301086 'setcid' _ic_[2301065])
        (2301088 'move' ret[2301063] _ic_[2301065])
        (2301091 '.=' ret[2301063] more[1103732] 1)
        const-val tmp[2301095]:int(64)[13] "temp"
        (2301097 'move' tmp[2301095](2301099 '.v' i_ir[2301056] F0_low[2113696]))
        (2301102 '.=' ret[2301063] F0_low[2113694] tmp[2301095])
        const-val tmp[2301106]:int(64)[13] "temp"
        (2301108 'move' tmp[2301106](2301110 '.v' i_ir[2301056] F1_count[2113700]))
        (2301113 '.=' ret[2301063] F1_count[2113698] tmp[2301106])
        (1999666 'move' _iterator[1999638] ret[2301063])
        val ret[2068618]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
        val call_tmp[2068620]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val tmp[2068622]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[2068624]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[2068626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val count[2069040]:int(64)[13] "temp"
        (2069045 'move' count[2069040](2069042 '.v' _iterator[1999638] F1_count[2113698]))
        const-val call_tmp[2230958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2230960 'move' call_tmp[2230958](2230962 '<' count[2069040] 0))
        (2068628 'move' call_tmp[2068626] call_tmp[2230958])
        (2068633 'move' tmp[2068624] call_tmp[2068626])
        (2068636 'move' tmp[2068622] call_tmp[2068626])
        const-val call_tmp[2068639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2068641 'move' call_tmp[2068639] call_tmp[2068626])
        if call_tmp[2068626]
        {
          (2068647 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
        }
        const-val tmp[2068650]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
        val tmp[2068652]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
        const-val tmp[2068654]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[2068656]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val count[2069047]:int(64)[13] "temp"
        (2069052 'move' count[2069047](2069049 '.v' _iterator[1999638] F1_count[2113698]))
        val inlineImm[2235210]:int(64)[13] "temp"
        (2235213 'move' inlineImm[2235210] 0)
        const-val call_tmp[2235216]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235218 'move' call_tmp[2235216](2235220 '==' count[2069047] inlineImm[2235210]))
        (2068658 'move' call_tmp[2068656] call_tmp[2235216])
        (2068664 'move' tmp[2068654] call_tmp[2068656])
        if call_tmp[2068656]
        {
          const-val tmp[2068669]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val call_tmp[2068671]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[2068673]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val low[2069054]:int(64)[13] "temp"
          (2069059 'move' low[2069054](2069056 '.v' _iterator[1999638] F0_low[2113694]))
          const-val call_tmp[2231898]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2231900 'move' call_tmp[2231898](2231902 'cast' uint(64)[115] low[2069054]))
          (2068675 'move' call_tmp[2068673] call_tmp[2231898])
          const-val call_tmp[2068680]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2068682]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2068684 'move' coerce_tmp[2068682](2068686 'cast' uint(64)[115] 1))
          const-val call_tmp[2302494]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
          (2302496 'move' call_tmp[2302494](2302498 '-' call_tmp[2068673] 1))
          (2068689 'move' call_tmp[2068680] call_tmp[2302494])
          const-val call_tmp[2068694]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val call_tmp[2302914]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2302916 'move' call_tmp[2302914](2302918 'cast' int(64)[13] call_tmp[2068680]))
          (2068696 'move' call_tmp[2068694] call_tmp[2302914])
          const-val ret_tmp[2068701]:2*int(64)[1040245] "temp"
          const-val low[2069061]:int(64)[13] "temp"
          (2069066 'move' low[2069061](2069063 '.v' _iterator[1999638] F0_low[2113694]))
          ref i__retArg[2304651]:2*int(64)[1040245] "temp"
          (2304655 'move' i__retArg[2304651](2304653 'set reference' ret_tmp[2068701]))
          val this[2304658]:2*int(64)[1040245] "arg this"
          (2304660 '.=' this[2304658] x0[1040241] low[2069061])
          (2304664 '.=' this[2304658] x1[1040243] call_tmp[2068694])
          (2304668 '=' i__retArg[2304651] this[2304658])
          (2068708 'move' tmp[2068669] ret_tmp[2068701])
          (2068711 'move' tmp[2068652] tmp[2068669])
        }
        {
          const-val tmp[2068715]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
          val call_tmp[2068717]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val call_tmp[2068719]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val count[2069068]:int(64)[13] "temp"
          (2069073 'move' count[2069068](2069070 '.v' _iterator[1999638] F1_count[2113698]))
          (2068721 'move' call_tmp[2068719] count[2069068])
          const-val call_tmp[2068724]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val count[2069075]:int(64)[13] "temp"
          (2069080 'move' count[2069075](2069077 '.v' _iterator[1999638] F1_count[2113698]))
          const-val call_tmp[2261954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2261956 'move' call_tmp[2261954](2261958 '-' count[2069075] 1))
          (2068726 'move' call_tmp[2068724] call_tmp[2261954])
          const-val call_tmp[2068731]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          const-val low[2069082]:int(64)[13] "temp"
          (2069087 'move' low[2069082](2069084 '.v' _iterator[1999638] F0_low[2113694]))
          const-val call_tmp[2242686]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2242688 'move' call_tmp[2242686](2242690 '+' low[2069082] call_tmp[2068724]))
          (2068733 'move' call_tmp[2068731] call_tmp[2242686])
          const-val ret_tmp[2068739]:2*int(64)[1040245] "temp"
          const-val low[2069089]:int(64)[13] "temp"
          (2069094 'move' low[2069089](2069091 '.v' _iterator[1999638] F0_low[2113694]))
          ref i__retArg[2304673]:2*int(64)[1040245] "temp"
          (2304677 'move' i__retArg[2304673](2304675 'set reference' ret_tmp[2068739]))
          val this[2304680]:2*int(64)[1040245] "arg this"
          (2304682 '.=' this[2304680] x0[1040241] low[2069089])
          (2304686 '.=' this[2304680] x1[1040243] call_tmp[2068731])
          (2304690 '=' i__retArg[2304673] this[2304680])
          (2068746 'move' tmp[2068715] ret_tmp[2068739])
          (2068749 'move' tmp[2068652] tmp[2068715])
        }
        (2068753 '=' tmp[2068650] tmp[2068652])
        (2068756 'noop')
        1
        const-ref call_tmp[2068758]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
        (2068760 'move' call_tmp[2068758](2068762 '.' tmp[2068650] x0[1040241]))
        const-val start[2068765]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2068767]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2068769 'move' coerce_tmp[2068767](2068771 'deref' call_tmp[2068758]))
        (2068773 '=' start[2068765] coerce_tmp[2068767])
        (2068776 'noop')
        const-ref call_tmp[2068777]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
        (2068779 'move' call_tmp[2068777](2068781 '.' tmp[2068650] x1[1040243]))
        const-val end[2068784]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[2068786]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (2068788 'move' coerce_tmp[2068786](2068790 'deref' call_tmp[2068777]))
        (2068792 '=' end[2068784] coerce_tmp[2068786])
        (2068795 'noop')
        val _indexOfInterest[2068796]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
        val _iterator[2068798]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
        const-val call_tmp[2068800]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[2068802]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        ref i__retArg[2305949]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2305953 'move' i__retArg[2305949](2305951 'set reference' ret_tmp[2068802]))
        val _ir[2305956]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2305958 '.=' _ir[2305956] F0_low[2115194] coerce_tmp[2068767])
        (2305962 '.=' _ir[2305956] F1_high[2115198] coerce_tmp[2068786])
        (2305966 '=' i__retArg[2305949] _ir[2305956])
        (2068809 'move' call_tmp[2068800] ret_tmp[2068802])
        ref i_ir[2308774]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
        (2308778 'move' i_ir[2308774](2308776 'set reference' call_tmp[2068800]))
        val ret[2308781]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
        val _ic_[2308783]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
        const-val call_tmp[2308785]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2308787 'move' call_tmp[2308785](2308789 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
        const-val cast_tmp[2308791]:c_void_ptr[149] "dead after last mention" "temp"
        (2308793 'move' cast_tmp[2308791](2308796 call chpl_here_alloc[187788] call_tmp[2308785] 28))
        (2308799 'move' _ic_[2308783](2308801 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2308791]))
        (2308804 'setcid' _ic_[2308783])
        (2308806 'move' ret[2308781] _ic_[2308783])
        (2308809 '.=' ret[2308781] more[1103478] 1)
        const-val tmp[2308813]:int(64)[13] "temp"
        (2308815 'move' tmp[2308813](2308817 '.v' i_ir[2308774] F0_low[2115194]))
        (2308820 '.=' ret[2308781] F0_low[2115192] tmp[2308813])
        const-val tmp[2308824]:int(64)[13] "temp"
        (2308826 'move' tmp[2308824](2308828 '.v' i_ir[2308774] F1_high[2115198]))
        (2308831 '.=' ret[2308781] F1_high[2115196] tmp[2308824])
        (2068812 'move' _iterator[2068798] ret[2308781])
        val ret[2068818]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
        val call_tmp[2068820]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        val i[2068824]:int(64)[13] "dead at end of block" "insert auto destroy"
        val call_tmp[2068826]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2068828 'move' i[2068824] 0)
        val call_tmp[2068831]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val default_arg_first[2068833]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val low[2068835]:int(64)[13] "temp"
        (2068837 'move' low[2068835](2068839 '.v' _iterator[2068798] F0_low[2115192]))
        (2068842 'move' default_arg_first[2068833] low[2068835])
        const-val default_arg_last[2068847]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
        const-val high[2068849]:int(64)[13] "temp"
        (2068851 'move' high[2068849](2068853 '.v' _iterator[2068798] F1_high[2115196]))
        (2068856 'move' default_arg_last[2068847] high[2068849])
        const-val _return_tmp_[2068861]:bool[10] "dead after last mention" "temp"
        const-val low[2068863]:int(64)[13] "temp"
        (2068865 'move' low[2068863](2068867 '.v' _iterator[2068798] F0_low[2115192]))
        const-val high[2068870]:int(64)[13] "temp"
        (2068872 'move' high[2068870](2068874 '.v' _iterator[2068798] F1_high[2115196]))
        (2068877 'move' _return_tmp_[2068861](2068880 call chpl_checkIfRangeIterWillOverflow[1096265] low[2068863] high[2068870] 1 default_arg_first[2068833] default_arg_last[2068847] 1))
        CForLoop[2068887]
        {
          const-val yret[2068916]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068918 'move' yret[2068916] i[2068824])
          const-val _yieldedIndex[2068921]:int(64)[13] "temp"
          (2068923 'move' _yieldedIndex[2068921] i[2068824])
          const-val i[2068927]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068929 'move' i[2068927] _yieldedIndex[2068921])
          const-val yret[2068932]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068934 'move' yret[2068932] _yieldedIndex[2068921])
          const-val _yieldedIndex[2068962]:int(64)[13] "temp"
          (2069038 'move' _yieldedIndex[2068962] _yieldedIndex[2068921])
          const-val i[2068964]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068966 'move' i[2068964] _yieldedIndex[2068962])
          const-val yret[2068969]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068971 'move' yret[2068969] _yieldedIndex[2068962])
          const-val _yieldedIndex[2068974]:int(64)[13] "temp"
          (2068976 'move' _yieldedIndex[2068974] _yieldedIndex[2068962])
          const-val slot[2068980]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068982 'move' slot[2068980] _yieldedIndex[2068974])
          const-val yret[2068985]:int(64)[13] "dead after last mention" "YVV" "temp"
          (2068987 'move' yret[2068985] _yieldedIndex[2068974])
          const-val _yieldedIndex[2068990]:int(64)[13] "temp"
          (2068992 'move' _yieldedIndex[2068990] _yieldedIndex[2068974])
          const-val slot[2068996]:int(64)[13] "const" "index var" "insert auto destroy"
          (2068998 'move' slot[2068996] _yieldedIndex[2068990])
          ref call_tmp[2069002]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2412476]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          (2412478 'move' call_tmp[2412476](2412480 'array_get' ret[1248342] slot[2068996]))
          (2069004 'move' call_tmp[2069002] call_tmp[2412476])
          val call_tmp[2069010]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
          val call_tmp[2412576]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
          (2412578 'move' call_tmp[2412576](2412581 call c_pointer_return[1250637] call_tmp[2069002]))
          (2069012 'move' call_tmp[2069010] call_tmp[2412576])
          val call_tmp[2069017]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          const-val coerce_tmp[2069019]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2069021 'move' coerce_tmp[2069019](2069023 'cast' c_void_ptr[149] call_tmp[2069010]))
          const-val _return_tmp_[2069026]:c_void_ptr[149] "dead after last mention" "temp"
          val inlineImm[2403213]:uint(8)[100] "temp"
          (2403216 'move' inlineImm[2403213] 0)
          const-val call_tmp[2403219]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
          (2403221 'move' call_tmp[2403219](2403223 'cast' int(32)[95] inlineImm[2403213]))
          (2403227 call memset[1223526] coerce_tmp[2069019] call_tmp[2403219] sizeofElement[1248369])
          (2069028 'move' _return_tmp_[2069026] coerce_tmp[2069019])
          {
            const-val low[2068889]:int(64)[13] "temp"
            (2068891 'move' low[2068889](2068893 '.v' _iterator[2068798] F0_low[2115192]))
            (2068896 '=' i[2068824] low[2068889])
          }
          {
            const-val high[2068900]:int(64)[13] "temp"
            (2068902 'move' high[2068900](2068904 '.v' _iterator[2068798] F1_high[2115196]))
            (2068907 '<=' i[2068824] high[2068900])
          }
          {
            val call_tmp[2068911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2068913 '+=' i[2068824] 1)
          }
        }
        label _endchpl_direct_param_stride_range_iter[2068950]
        const-val call_tmp[2310967]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2310969 'move' call_tmp[2310967](2310971 'cast_to_void_star' _iterator[2068798]))
        (2310974 call chpl_here_free[188127] call_tmp[2310967])
        ref i_x[2311764]:2*int(64)[1040245] "temp"
        (2311768 'move' i_x[2311764](2311766 'set reference' tmp[2068650]))
        label _endchpl_direct_counted_range_iter_helper[2068958]
        const-val call_tmp[2311984]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2311986 'move' call_tmp[2311984](2311988 'cast_to_void_star' _iterator[1999638]))
        (2311991 call chpl_here_free[188127] call_tmp[2311984])
        label _endchpl_direct_counted_range_iter[1999716]
        const-val call_tmp[2312584]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2312586 'move' call_tmp[2312584](2312588 'cast_to_void_star' _iterator[1999614]))
        (2312591 call chpl_here_free[188127] call_tmp[2312584])
        label _end_allSlots[1999721]
        const-val call_tmp[2402963]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402965 'move' call_tmp[2402963](2402967 'cast_to_void_star' _iterator[1248442]))
        (2402970 call chpl_here_free[188127] call_tmp[2402963])
      }
      {
        const-val call_tmp[1248522]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2402379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2402381 'move' call_tmp[2402379](2402383 '==' tmp[1248399] parallelInit[11150]))
        (1248524 'move' call_tmp[1248522] call_tmp[2402379])
        const-val call_tmp[1248530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1248532 'move' call_tmp[1248530] call_tmp[1248522])
        if call_tmp[1248530]
        {
          const-val ret[1931916]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "concurrently accessed" "const"
          (1931919 'move' ret[1931916] ret[1248342])
          const-val sizeofElement[1931928]:uint(64)[115] "const"
          (1931931 'move' sizeofElement[1931928] sizeofElement[1248369])
          val ret[1931726]:nothing[7] "dead after last mention" "RVV" "temp"
          const-val call_tmp[1931728]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (1931730 'move' call_tmp[1931728](1931733 call _allSlotsNumChunks[201167] size[1248294]))
          const-val numChunks[1931735]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
          (1931737 'move' numChunks[1931735] call_tmp[1931728])
          const-val call_tmp[1931740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2234445]:int(64)[13] "temp"
          (2234448 'move' inlineImm[2234445] 1)
          const-val call_tmp[2234451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234453 'move' call_tmp[2234451](2234455 '==' numChunks[1931735] inlineImm[2234445]))
          (1931742 'move' call_tmp[1931740] call_tmp[2234451])
          const-val call_tmp[1931748]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1931750 'move' call_tmp[1931748] call_tmp[1931740])
          if call_tmp[1931748]
          {
            val _indexOfInterest[1931756]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1931758]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1931760]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[1931762]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            val inlineImm[2297259]:int(64)[13] "temp"
            (2297262 'move' inlineImm[2297259] 0)
            ref i__retArg[2297264]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2297268 'move' i__retArg[2297264](2297266 'set reference' ret_tmp[1931762]))
            val _ir[2297271]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2297273 '.=' _ir[2297271] F0_low[2107538] inlineImm[2297259])
            (2297277 '.=' _ir[2297271] F1_count[2107542] size[1248294])
            (2297281 '=' i__retArg[2297264] _ir[2297271])
            (1931769 'move' call_tmp[1931760] ret_tmp[1931762])
            ref i_ir[2298150]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
            (2298154 'move' i_ir[2298150](2298152 'set reference' call_tmp[1931760]))
            val ret[2298157]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
            val _ic_[2298159]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
            const-val call_tmp[2298161]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2298163 'move' call_tmp[2298161](2298165 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
            const-val cast_tmp[2298167]:c_void_ptr[149] "dead after last mention" "temp"
            (2298169 'move' cast_tmp[2298167](2298172 call chpl_here_alloc[187788] call_tmp[2298161] 30))
            (2298175 'move' _ic_[2298159](2298177 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2298167]))
            (2298180 'setcid' _ic_[2298159])
            (2298182 'move' ret[2298157] _ic_[2298159])
            (2298185 '.=' ret[2298157] more[1103982] 1)
            const-val tmp[2298189]:int(64)[13] "temp"
            (2298191 'move' tmp[2298189](2298193 '.v' i_ir[2298150] F0_low[2107538]))
            (2298196 '.=' ret[2298157] F0_low[2107536] tmp[2298189])
            const-val tmp[2298200]:int(64)[13] "temp"
            (2298202 'move' tmp[2298200](2298204 '.v' i_ir[2298150] F1_count[2107542]))
            (2298207 '.=' ret[2298157] F1_count[2107540] tmp[2298200])
            (1931772 'move' _iterator[1931758] ret[2298157])
            val ret[2031373]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
            val _indexOfInterest[2031375]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2031377]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2031379]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2031381]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            const-val low[2031769]:int(64)[13] "temp"
            (2031774 'move' low[2031769](2031771 '.v' _iterator[1931758] F0_low[2107536]))
            const-val count[2031776]:int(64)[13] "temp"
            (2031781 'move' count[2031776](2031778 '.v' _iterator[1931758] F1_count[2107540]))
            ref i__retArg[2300118]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2300122 'move' i__retArg[2300118](2300120 'set reference' ret_tmp[2031381]))
            val _ir[2300125]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2300127 '.=' _ir[2300125] F0_low[2113696] low[2031769])
            (2300131 '.=' _ir[2300125] F1_count[2113700] count[2031776])
            (2300135 '=' i__retArg[2300118] _ir[2300125])
            (2031388 'move' call_tmp[2031379] ret_tmp[2031381])
            ref i_ir[2301371]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
            (2301375 'move' i_ir[2301371](2301373 'set reference' call_tmp[2031379]))
            val ret[2301378]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
            val _ic_[2301380]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
            const-val call_tmp[2301382]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2301384 'move' call_tmp[2301382](2301386 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
            const-val cast_tmp[2301388]:c_void_ptr[149] "dead after last mention" "temp"
            (2301390 'move' cast_tmp[2301388](2301393 call chpl_here_alloc[187788] call_tmp[2301382] 29))
            (2301396 'move' _ic_[2301380](2301398 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301388]))
            (2301401 'setcid' _ic_[2301380])
            (2301403 'move' ret[2301378] _ic_[2301380])
            (2301406 '.=' ret[2301378] more[1103732] 1)
            const-val tmp[2301410]:int(64)[13] "temp"
            (2301412 'move' tmp[2301410](2301414 '.v' i_ir[2301371] F0_low[2113696]))
            (2301417 '.=' ret[2301378] F0_low[2113694] tmp[2301410])
            const-val tmp[2301421]:int(64)[13] "temp"
            (2301423 'move' tmp[2301421](2301425 '.v' i_ir[2301371] F1_count[2113700]))
            (2301428 '.=' ret[2301378] F1_count[2113698] tmp[2301421])
            (2031391 'move' _iterator[2031377] ret[2301378])
            val ret[2031397]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
            val call_tmp[2031399]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val tmp[2031401]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val tmp[2031403]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            const-val call_tmp[2031405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2031407]:int(64)[13] "temp"
            (2031409 'move' count[2031407](2031411 '.v' _iterator[2031377] F1_count[2113698]))
            const-val call_tmp[2230768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2230770 'move' call_tmp[2230768](2230772 '<' count[2031407] 0))
            (2031414 'move' call_tmp[2031405] call_tmp[2230768])
            (2031419 'move' tmp[2031403] call_tmp[2031405])
            (2031422 'move' tmp[2031401] call_tmp[2031405])
            const-val call_tmp[2031425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2031427 'move' call_tmp[2031425] call_tmp[2031405])
            if call_tmp[2031405]
            {
              (2031433 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
            }
            const-val tmp[2031436]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
            val tmp[2031438]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
            const-val tmp[2031440]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[2031442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val count[2031444]:int(64)[13] "temp"
            (2031446 'move' count[2031444](2031448 '.v' _iterator[2031377] F1_count[2113698]))
            val inlineImm[2234885]:int(64)[13] "temp"
            (2234888 'move' inlineImm[2234885] 0)
            const-val call_tmp[2234891]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2234893 'move' call_tmp[2234891](2234895 '==' count[2031444] inlineImm[2234885]))
            (2031451 'move' call_tmp[2031442] call_tmp[2234891])
            (2031457 'move' tmp[2031440] call_tmp[2031442])
            if call_tmp[2031442]
            {
              const-val tmp[2031462]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2031464]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2031466]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2031468]:int(64)[13] "temp"
              (2031470 'move' low[2031468](2031472 '.v' _iterator[2031377] F0_low[2113694]))
              const-val call_tmp[2231708]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2231710 'move' call_tmp[2231708](2231712 'cast' uint(64)[115] low[2031468]))
              (2031475 'move' call_tmp[2031466] call_tmp[2231708])
              const-val call_tmp[2031480]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[2031482]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
              (2031484 'move' coerce_tmp[2031482](2031486 'cast' uint(64)[115] 1))
              const-val call_tmp[2302294]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
              (2302296 'move' call_tmp[2302294](2302298 '-' call_tmp[2031466] 1))
              (2031489 'move' call_tmp[2031480] call_tmp[2302294])
              const-val call_tmp[2031494]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val call_tmp[2302724]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2302726 'move' call_tmp[2302724](2302728 'cast' int(64)[13] call_tmp[2031480]))
              (2031496 'move' call_tmp[2031494] call_tmp[2302724])
              const-val ret_tmp[2031501]:2*int(64)[1040245] "temp"
              const-val low[2031503]:int(64)[13] "temp"
              (2031505 'move' low[2031503](2031507 '.v' _iterator[2031377] F0_low[2113694]))
              ref i__retArg[2303815]:2*int(64)[1040245] "temp"
              (2303819 'move' i__retArg[2303815](2303817 'set reference' ret_tmp[2031501]))
              val this[2303822]:2*int(64)[1040245] "arg this"
              (2303824 '.=' this[2303822] x0[1040241] low[2031503])
              (2303828 '.=' this[2303822] x1[1040243] call_tmp[2031494])
              (2303832 '=' i__retArg[2303815] this[2303822])
              (2031515 'move' tmp[2031462] ret_tmp[2031501])
              (2031518 'move' tmp[2031438] tmp[2031462])
            }
            {
              const-val tmp[2031522]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
              val call_tmp[2031524]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val call_tmp[2031526]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2031528]:int(64)[13] "temp"
              (2031530 'move' count[2031528](2031532 '.v' _iterator[2031377] F1_count[2113698]))
              (2031535 'move' call_tmp[2031526] count[2031528])
              const-val call_tmp[2031538]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val count[2031540]:int(64)[13] "temp"
              (2031542 'move' count[2031540](2031544 '.v' _iterator[2031377] F1_count[2113698]))
              const-val call_tmp[2261684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2261686 'move' call_tmp[2261684](2261688 '-' count[2031540] 1))
              (2031547 'move' call_tmp[2031538] call_tmp[2261684])
              const-val call_tmp[2031552]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val low[2031554]:int(64)[13] "temp"
              (2031556 'move' low[2031554](2031558 '.v' _iterator[2031377] F0_low[2113694]))
              const-val call_tmp[2242426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              (2242428 'move' call_tmp[2242426](2242430 '+' low[2031554] call_tmp[2031538]))
              (2031561 'move' call_tmp[2031552] call_tmp[2242426])
              const-val ret_tmp[2031567]:2*int(64)[1040245] "temp"
              const-val low[2031569]:int(64)[13] "temp"
              (2031571 'move' low[2031569](2031573 '.v' _iterator[2031377] F0_low[2113694]))
              ref i__retArg[2303837]:2*int(64)[1040245] "temp"
              (2303841 'move' i__retArg[2303837](2303839 'set reference' ret_tmp[2031567]))
              val this[2303844]:2*int(64)[1040245] "arg this"
              (2303846 '.=' this[2303844] x0[1040241] low[2031569])
              (2303850 '.=' this[2303844] x1[1040243] call_tmp[2031552])
              (2303854 '=' i__retArg[2303837] this[2303844])
              (2031581 'move' tmp[2031522] ret_tmp[2031567])
              (2031584 'move' tmp[2031438] tmp[2031522])
            }
            (2031588 '=' tmp[2031436] tmp[2031438])
            (2031591 'noop')
            1
            const-ref call_tmp[2031593]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2031595 'move' call_tmp[2031593](2031597 '.' tmp[2031436] x0[1040241]))
            const-val start[2031600]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031602]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031604 'move' coerce_tmp[2031602](2031606 'deref' call_tmp[2031593]))
            (2031608 '=' start[2031600] coerce_tmp[2031602])
            (2031611 'noop')
            const-ref call_tmp[2031612]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
            (2031614 'move' call_tmp[2031612](2031616 '.' tmp[2031436] x1[1040243]))
            const-val end[2031619]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031621]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031623 'move' coerce_tmp[2031621](2031625 'deref' call_tmp[2031612]))
            (2031627 '=' end[2031619] coerce_tmp[2031621])
            (2031630 'noop')
            val _indexOfInterest[2031631]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[2031633]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[2031635]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val ret_tmp[2031637]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            ref i__retArg[2305377]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2305381 'move' i__retArg[2305377](2305379 'set reference' ret_tmp[2031637]))
            val _ir[2305384]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2305386 '.=' _ir[2305384] F0_low[2115194] coerce_tmp[2031602])
            (2305390 '.=' _ir[2305384] F1_high[2115198] coerce_tmp[2031621])
            (2305394 '=' i__retArg[2305377] _ir[2305384])
            (2031644 'move' call_tmp[2031635] ret_tmp[2031637])
            ref i_ir[2307136]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
            (2307140 'move' i_ir[2307136](2307138 'set reference' call_tmp[2031635]))
            val ret[2307143]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
            val _ic_[2307145]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
            const-val call_tmp[2307147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2307149 'move' call_tmp[2307147](2307151 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
            const-val cast_tmp[2307153]:c_void_ptr[149] "dead after last mention" "temp"
            (2307155 'move' cast_tmp[2307153](2307158 call chpl_here_alloc[187788] call_tmp[2307147] 28))
            (2307161 'move' _ic_[2307145](2307163 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2307153]))
            (2307166 'setcid' _ic_[2307145])
            (2307168 'move' ret[2307143] _ic_[2307145])
            (2307171 '.=' ret[2307143] more[1103478] 1)
            const-val tmp[2307175]:int(64)[13] "temp"
            (2307177 'move' tmp[2307175](2307179 '.v' i_ir[2307136] F0_low[2115194]))
            (2307182 '.=' ret[2307143] F0_low[2115192] tmp[2307175])
            const-val tmp[2307186]:int(64)[13] "temp"
            (2307188 'move' tmp[2307186](2307190 '.v' i_ir[2307136] F1_high[2115198]))
            (2307193 '.=' ret[2307143] F1_high[2115196] tmp[2307186])
            (2031647 'move' _iterator[2031633] ret[2307143])
            val ret[2090555]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
            val call_tmp[2090557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            val i[2090561]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2090563]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2090565 'move' i[2090561] 0)
            val call_tmp[2090568]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            const-val default_arg_first[2090570]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val low[2090716]:int(64)[13] "temp"
            (2090721 'move' low[2090716](2090718 '.v' _iterator[2031633] F0_low[2115192]))
            (2090572 'move' default_arg_first[2090570] low[2090716])
            const-val default_arg_last[2090577]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
            const-val high[2090723]:int(64)[13] "temp"
            (2090728 'move' high[2090723](2090725 '.v' _iterator[2031633] F1_high[2115196]))
            (2090579 'move' default_arg_last[2090577] high[2090723])
            const-val _return_tmp_[2090584]:bool[10] "dead after last mention" "temp"
            const-val low[2090730]:int(64)[13] "temp"
            (2090735 'move' low[2090730](2090732 '.v' _iterator[2031633] F0_low[2115192]))
            const-val high[2090737]:int(64)[13] "temp"
            (2090742 'move' high[2090737](2090739 '.v' _iterator[2031633] F1_high[2115196]))
            (2090586 'move' _return_tmp_[2090584](2090589 call chpl_checkIfRangeIterWillOverflow[1096265] low[2090730] high[2090737] 1 default_arg_first[2090570] default_arg_last[2090577] 1))
            CForLoop[2090596] order-independent
            {
              const-val yret[2090611]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090613 'move' yret[2090611] i[2090561])
              const-val _yieldedIndex[2090627]:int(64)[13] "temp"
              (2090714 'move' _yieldedIndex[2090627] i[2090561])
              const-val i[2090629]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090631 'move' i[2090629] _yieldedIndex[2090627])
              const-val yret[2090634]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090636 'move' yret[2090634] _yieldedIndex[2090627])
              const-val _yieldedIndex[2090639]:int(64)[13] "temp"
              (2090641 'move' _yieldedIndex[2090639] _yieldedIndex[2090627])
              const-val i[2090645]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090647 'move' i[2090645] _yieldedIndex[2090639])
              const-val yret[2090650]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090652 'move' yret[2090650] _yieldedIndex[2090639])
              const-val _yieldedIndex[2090655]:int(64)[13] "temp"
              (2090657 'move' _yieldedIndex[2090655] _yieldedIndex[2090639])
              const-val slot[2090661]:int(64)[13] "const" "index var" "insert auto destroy"
              (2090663 'move' slot[2090661] _yieldedIndex[2090655])
              const-val yret[2090667]:int(64)[13] "dead after last mention" "YVV" "temp"
              (2090669 'move' yret[2090667] slot[2090661])
              const-val slot[2090672]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
              (2090674 'move' slot[2090672] yret[2090667])
              ref call_tmp[2090678]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
              ref call_tmp[2412536]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
              (2412538 'move' call_tmp[2412536](2412540 'array_get' ret[1931916] slot[2090672]))
              (2090680 'move' call_tmp[2090678] call_tmp[2412536])
              val call_tmp[2090686]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
              val call_tmp[2412586]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
              (2412588 'move' call_tmp[2412586](2412591 call c_pointer_return[1250637] call_tmp[2090678]))
              (2090688 'move' call_tmp[2090686] call_tmp[2412586])
              val call_tmp[2090693]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
              const-val coerce_tmp[2090695]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2090697 'move' coerce_tmp[2090695](2090699 'cast' c_void_ptr[149] call_tmp[2090686]))
              const-val _return_tmp_[2090702]:c_void_ptr[149] "dead after last mention" "temp"
              val inlineImm[2403253]:uint(8)[100] "temp"
              (2403256 'move' inlineImm[2403253] 0)
              const-val call_tmp[2403259]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
              (2403261 'move' call_tmp[2403259](2403263 'cast' int(32)[95] inlineImm[2403253]))
              (2403267 call memset[1223526] coerce_tmp[2090695] call_tmp[2403259] sizeofElement[1931928])
              (2090704 'move' _return_tmp_[2090702] coerce_tmp[2090695])
              {
                const-val low[2090744]:int(64)[13] "temp"
                (2090749 'move' low[2090744](2090746 '.v' _iterator[2031633] F0_low[2115192]))
                (2090598 '=' i[2090561] low[2090744])
              }
              {
                const-val high[2090751]:int(64)[13] "temp"
                (2090756 'move' high[2090751](2090753 '.v' _iterator[2031633] F1_high[2115196]))
                (2090602 '<=' i[2090561] high[2090751])
              }
              {
                val call_tmp[2090606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2090608 '+=' i[2090561] 1)
              }
            }
            label _endchpl_direct_param_stride_range_iter[2090623]
            const-val call_tmp[2310523]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2310525 'move' call_tmp[2310523](2310527 'cast_to_void_star' _iterator[2031633]))
            (2310530 call chpl_here_free[188127] call_tmp[2310523])
            ref i_x[2311494]:2*int(64)[1040245] "temp"
            (2311498 'move' i_x[2311494](2311496 'set reference' tmp[2031436]))
            label _endchpl_direct_counted_range_iter_helper[2031703]
            const-val call_tmp[2312044]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2312046 'move' call_tmp[2312044](2312048 'cast_to_void_star' _iterator[2031377]))
            (2312051 call chpl_here_free[188127] call_tmp[2312044])
            label _endchpl_direct_counted_range_iter[2031708]
            const-val call_tmp[2312392]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2312394 'move' call_tmp[2312392](2312396 'cast_to_void_star' _iterator[1931758]))
            (2312399 call chpl_here_free[188127] call_tmp[2312392])
          }
          {
            const-val tmpIter[1931810]:range(int(64),bounded,false)[1027003] "dead at end of block" "expr temp" "insert auto destroy" "maybe ref" "no copy" "temp"
            const-val call_tmp[1931812]:range(int(64),boundedLow,false)[1087754] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[1931814]:range(int(64),boundedLow,false)[1087754] "temp"
            (1931817 call chpl_build_low_bounded_range[1087147] 0 ret_tmp[1931814])
            (1931820 'move' call_tmp[1931812] ret_tmp[1931814])
            const-val ret_tmp[1931823]:range(int(64),bounded,false)[1027003] "temp"
            (1931826 call #[1088114] call_tmp[1931812] numChunks[1931735] ret_tmp[1931823])
            (1931830 'move' tmpIter[1931810] ret_tmp[1931823])
            const _coforallCount[1931834]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "concurrently accessed" "const" "end count" "temp"
            val ret[2403404]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "RVV" "temp"
            val new_temp[2403406]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "temp"
            (2403408 'move' new_temp[2403406](2403411 call _new[947245]))
            (2403412 'move' ret[2403404] new_temp[2403406])
            (1931836 'move' _coforallCount[1931834] ret[2403404])
            const-val numTasks[1931840]:int(64)[13] "dead at end of block" "temp"
            (1931842 'move' numTasks[1931840](1931845 call size[1035978] tmpIter[1931810]))
            (1931848 call _upEndCount[1228350] _coforallCount[1931834] numTasks[1931840])
            (1931852 call chpl_resetTaskSpawn[1229432] numTasks[1931840])
            val _indexOfInterest[1931854]:int(64)[13] "dead at end of block" "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1931856]:_ic_these_range_int64_t_bounded_F[1096892] "dead at end of block" "expr temp" "temp"
            ref i_x[2353200]:range(int(64),bounded,false)[1027003] "temp"
            (2353204 'move' i_x[2353200](2353202 'set reference' tmpIter[1931810]))
            const-val call_tmp[2353207]:_ir_these_range_int64_t_bounded_F[1096898] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val coerce_tmp[2353209]:range(int(64),bounded,false)[1027003] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
            (2353211 'move' coerce_tmp[2353209](2353213 'deref' i_x[2353200]))
            val _ir[2353215]:_ir_these_range_int64_t_bounded_F[1096898] "temp"
            (2353217 '.=' _ir[2353215] F0_this[2113073] coerce_tmp[2353209])
            (2353221 'move' call_tmp[2353207] _ir[2353215])
            val ret[2353224]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "RVV" "temp"
            val _ic_[2353226]:_ic_these_range_int64_t_bounded_F[1096892] "dead after last mention" "temp"
            const-val call_tmp[2353228]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (2353230 'move' call_tmp[2353228](2353232 'sizeof_bundle' _ic_these_range_int64_t_bounded_F[1096892]))
            const-val cast_tmp[2353234]:c_void_ptr[149] "dead after last mention" "temp"
            (2353236 'move' cast_tmp[2353234](2353239 call chpl_here_alloc[187788] call_tmp[2353228] 27))
            (2353242 'move' _ic_[2353226](2353244 'cast' _ic_these_range_int64_t_bounded_F[1096892] cast_tmp[2353234]))
            (2353247 'setcid' _ic_[2353226])
            (2353249 'move' ret[2353224] _ic_[2353226])
            (2353252 '.=' ret[2353224] more[1096895] 1)
            const-val tmp[2353256]:range(int(64),bounded,false)[1027003] "temp"
            (2353258 'move' tmp[2353256](2353260 '.v' call_tmp[2353207] F0_this[2113073]))
            (2353263 '.=' ret[2353224] F0_this[2113071] tmp[2353256])
            (1931858 'move' _iterator[1931856] ret[2353224])
            val ret[2031784]:_ir_these_range_int64_t_bounded_F[1096898] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[2031786]:bool[10] "dead after last mention" "temp"
            const-val this[2031899]:range(int(64),bounded,false)[1027003] "temp"
            (2031904 'move' this[2031899](2031901 '.v' _iterator[1931856] F0_this[2113071]))
            (2031788 'move' _return_tmp_[2031786](2031791 call checkIfIterWillOverflow[1096003] this[2031899] 1))
            val i[2031794]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[2031796]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2031798 'move' i[2031794] 0)
            const-ref call_tmp[2031801]:int(64)[13] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2031906]:range(int(64),bounded,false)[1027003] "temp"
            (2031911 'move' this[2031906](2031908 '.v' _iterator[1931856] F0_this[2113071]))
            ref i_this[2358826]:range(int(64),bounded,false)[1027003] "temp"
            (2358830 'move' i_this[2358826](2358828 'set reference' this[2031906]))
            ref call_tmp[2358833]:int(64)[13] "dead after last mention" "maybe param" "temp"
            (2358835 'move' call_tmp[2358833](2358837 '.' i_this[2358826] _low[1026965]))
            (2031803 'move' call_tmp[2031801] call_tmp[2358833])
            const-val start[2031808]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031810]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031812 'move' coerce_tmp[2031810](2031814 'deref' call_tmp[2031801]))
            (2031816 '=' start[2031808] coerce_tmp[2031810])
            (2031819 'noop')
            const-ref call_tmp[2031820]:int(64)[13] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[2031913]:range(int(64),bounded,false)[1027003] "temp"
            (2031918 'move' this[2031913](2031915 '.v' _iterator[1931856] F0_this[2113071]))
            ref i_this[2360370]:range(int(64),bounded,false)[1027003] "temp"
            (2360374 'move' i_this[2360370](2360372 'set reference' this[2031913]))
            ref call_tmp[2360377]:int(64)[13] "dead after last mention" "maybe param" "temp"
            (2360379 'move' call_tmp[2360377](2360381 '.' i_this[2360370] _high[1026970]))
            (2031822 'move' call_tmp[2031820] call_tmp[2360377])
            const end[2031827]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[2031829]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (2031831 'move' coerce_tmp[2031829](2031833 'deref' call_tmp[2031820]))
            (2031835 '=' end[2031827] coerce_tmp[2031829])
            (2031838 'noop')
            CForLoop[2031839]
            {
              const-val yret[2031854]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[2031856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[2031920]:range(int(64),bounded,false)[1027003] "temp"
              (2031925 'move' this[2031920](2031922 '.v' _iterator[1931856] F0_this[2113071]))
              (2031858 'move' call_tmp[2031856] i[2031794])
              (2031864 'move' yret[2031854] call_tmp[2031856])
              const-val _yieldedIndex[2031878]:int(64)[13] "coforall index var" "temp"
              (2031897 'move' _yieldedIndex[2031878] call_tmp[2031856])
              const-val chunk[2031880]:int(64)[13] "coforall index var" "const" "index var" "insert auto destroy"
              (2031882 'move' chunk[2031880] _yieldedIndex[2031878])
              val _args_forcoforall_fn[2216153]:_class_localscoforall_fn[2216137] "temp"
              (2216157 'move' _args_forcoforall_fn[2216153](2216155 'stack allocate class' _class_localscoforall_fn[2216137]))
              (2216159 '.=' _args_forcoforall_fn[2216153] _0_size[2216140] size[1248294])
              (2216163 '.=' _args_forcoforall_fn[2216153] _1_numChunks[2216142] numChunks[1931735])
              (2216167 '.=' _args_forcoforall_fn[2216153] _2_chunk[2216144] chunk[2031880])
              (2216171 '.=' _args_forcoforall_fn[2216153] _3__coforallCount[2216146] _coforallCount[1931834])
              (2216175 '.=' _args_forcoforall_fn[2216153] _4_ret[2216148] ret[1931916])
              (2216179 '.=' _args_forcoforall_fn[2216153] _5_sizeofElement[2216150] sizeofElement[1931928])
              val _args_vforcoforall_fn[2216183]:c_void_ptr[149] "temp"
              (2216187 'move' _args_vforcoforall_fn[2216183](2216185 'cast_to_void_star' _args_forcoforall_fn[2216153]))
              val _args_sizecoforall_fn[2216189]:int(64)[13] "temp"
              (2216193 'move' _args_sizecoforall_fn[2216189](2216191 'sizeof_bundle' _class_localscoforall_fn[2216137]))
              ref _taskListcoforall_fn[2216195]:c_void_ptr[149] "temp"
              (2216200 'move' _taskListcoforall_fn[2216195](2216197 '.' _coforallCount[1931834] taskList[12712]))
              val _taskListNodecoforall_fn[2216202]:int(64)[13] "temp"
              (2216206 'move' _taskListNodecoforall_fn[2216202](2216204 '_wide_get_node' _coforallCount[1931834]))
              (2216286 call wrapcoforall_fn[2216208] _taskListcoforall_fn[2216195] _taskListNodecoforall_fn[2216202] _args_vforcoforall_fn[2216183] _args_sizecoforall_fn[2216189] _args_forcoforall_fn[2216153])
              {
                (2031841 '=' i[2031794] coerce_tmp[2031810])
              }
              {
                (2031845 '<=' i[2031794] end[2031827])
              }
              {
                val call_tmp[2031849]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (2031851 '+=' i[2031794] 1)
              }
            }
            label _endthese[2031874]
            val error[1931882]:Error[167984] "error variable" "temp"
            (1931884 'move' error[1931882] nil[44])
            (1931888 call _waitEndCount[1235226] _coforallCount[1931834] numTasks[1931840] error[1931882])
            val errorExists[2225904]:bool[10] "temp"
            (2225909 'move' errorExists[2225904](2225906 '!=' error[1931882] nil[44]))
            if errorExists[2225904]
            {
              (1931896 call chpl_propagate_error[170518] error[1931882])
            }
            val call_tmp[2407811]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "expr temp" "maybe param" "temp"
            (2407813 'move' call_tmp[2407811] _coforallCount[1931834])
            val coerce_tmp[2407816]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2407818 'move' coerce_tmp[2407816](2407820 'cast' object[22] _coforallCount[1931834]))
            const-val call_tmp[2407823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2407825 'move' call_tmp[2407823](2407827 'ptr_neq' coerce_tmp[2407816] nil[44]))
            if call_tmp[2407823]
            {
              val coerce_tmp[2407832]:_EndCount(AtomicT(int(64)),int(64))[945532] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (2407834 'move' coerce_tmp[2407832] call_tmp[2407811])
              ref _field_destructor_tmp_[2407837]:AtomicT(int(64))[940323] "temp"
              (2407839 'move' _field_destructor_tmp_[2407837](2407841 '.' coerce_tmp[2407832] i[945526]))
              (2407845 call deinit[1604126] _field_destructor_tmp_[2407837])
              val _parent_destructor_tmp_[2407847]:_EndCountBase[12717] "temp"
              (2407849 'move' _parent_destructor_tmp_[2407847](2407851 'cast' _EndCountBase[12717] coerce_tmp[2407832]))
              const-ref _field_destructor_tmp_[2407854]:chpl_TaskErrors[168348] "temp"
              (2407856 'move' _field_destructor_tmp_[2407854](2407858 '.' _parent_destructor_tmp_[2407847] errors[12707]))
              const-ref _field_destructor_tmp_[2407861]:chpl_LocalSpinlock[187432] "temp"
              (2407863 'move' _field_destructor_tmp_[2407861](2407865 '.' _field_destructor_tmp_[2407854] _errorsLock[168271]))
              ref _field_destructor_tmp_[2407868]:AtomicBool[45877] "temp"
              (2407870 'move' _field_destructor_tmp_[2407868](2407872 '.' _field_destructor_tmp_[2407861] l[187317]))
              (2407876 call deinit[44863] _field_destructor_tmp_[2407868])
              const-val tmp[2407878]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
              const-val call_tmp[2407880]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
              (2407882 'move' call_tmp[2407880](2407884 '_wide_get_locale' call_tmp[2407811]))
              (2407886 'move' tmp[2407878] call_tmp[2407880])
              val isdirect[2407889]:bool[10] "temp"
              (2407891 'move' isdirect[2407889](2407894 call chpl_doDirectExecuteOn[187469] call_tmp[2407880]))
              if isdirect[2407889]
              {
                (2407899 call on_fn[1234390] call_tmp[2407811])
              }
              {
                val _args_foron_fn[2407902]:_class_localson_fn[2204833] "temp"
                (2407904 'move' _args_foron_fn[2407902](2407906 'stack allocate class' _class_localson_fn[2204833]))
                (2407908 '.=' _args_foron_fn[2407902] _0_tmp[2204836] tmp[2407878])
                (2407912 '.=' _args_foron_fn[2407902] _1_arg[2204838] call_tmp[2407811])
                val _args_vforon_fn[2407916]:c_void_ptr[149] "temp"
                (2407918 'move' _args_vforon_fn[2407916](2407920 'cast_to_void_star' _args_foron_fn[2407902]))
                val _args_sizeon_fn[2407922]:int(64)[13] "temp"
                (2407924 'move' _args_sizeon_fn[2407922](2407926 'sizeof_bundle' _class_localson_fn[2204833]))
                on(2407929 call wrapon_fn[2204867] tmp[2407878] _args_vforon_fn[2407916] _args_sizeon_fn[2407922] _args_foron_fn[2407902])
              }
            }
            const-val call_tmp[2369927]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2369929 'move' call_tmp[2369927](2369931 'cast_to_void_star' _iterator[1931856]))
            (2369934 call chpl_here_free[188127] call_tmp[2369927])
          }
          label _end_allSlots[1931912]
          (1930358 call chpl_after_forall_fence[13071])
        }
        {
          (1248591 call halt[154111] "ArrayInit.heuristicInit should have been made concrete")
        }
      }
    }
    const-val call_tmp[1248596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1248598 'move' call_tmp[1248596] callPostAlloc[1248327])
    if call_tmp[1248596]
    {
      const-val call_tmp[2412625]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2412627 'move' call_tmp[2412625](2412629 'cast' c_void_ptr[149] ret[1248342]))
      const-val call_tmp[2412632]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2412634 'move' call_tmp[2412632](2412636 'cast' uint(64)[115] size[1248294]))
      const-val call_tmp[2412639]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2412641 'move' call_tmp[2412639](2412643 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683]))
      const-val call_tmp[2412645]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2412647 'move' call_tmp[2412645](2412649 'cast' uint(64)[115] call_tmp[2412639]))
      (2412653 call chpl_mem_array_postAlloc[1250814] call_tmp[2412625] call_tmp[2412632] call_tmp[2412645])
    }
    (1248612 'move' ret[1248298] ret[1248342])
    label _end__allocateData[1248620]
    (1248622 return ret[1248298])
  }
  function _freeData[1278083](const in arg data[1278085]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683], const in arg size[1278087]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1278093]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2424401]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2424403 'move' call_tmp[2424401](2424405 'ptr_neq' data[1278085] nil[44]))
    (1278095 'move' call_tmp[1278093] call_tmp[2424401])
    const-val call_tmp[1278101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1278103 'move' call_tmp[1278101] call_tmp[1278093])
    if call_tmp[1278101]
    {
      const-val call_tmp[2424411]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2424413 'move' call_tmp[2424411](2424415 'cast' c_void_ptr[149] data[1278085]))
      const-val call_tmp[2424418]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2424420 'move' call_tmp[2424418](2424422 'cast' uint(64)[115] size[1278087]))
      const-val call_tmp[2424425]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2424427 'move' call_tmp[2424425](2424429 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683]))
      const-val call_tmp[2424431]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2424433 'move' call_tmp[2424431](2424435 'cast' uint(64)[115] call_tmp[2424425]))
      (2424439 call chpl_mem_array_free[1278158] call_tmp[2424411] call_tmp[2424418] call_tmp[2424431])
    }
    (1278115 return _void[55])
  }
  function _freeData[1500501](const in arg data[1500503]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983], const in arg size[1500505]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    const-val call_tmp[1500511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2467230]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2467232 'move' call_tmp[2467230](2467234 'ptr_neq' data[1500503] nil[44]))
    (1500513 'move' call_tmp[1500511] call_tmp[2467230])
    const-val call_tmp[1500519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1500521 'move' call_tmp[1500519] call_tmp[1500511])
    if call_tmp[1500519]
    {
      const-val call_tmp[2467240]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2467242 'move' call_tmp[2467240](2467244 'cast' c_void_ptr[149] data[1500503]))
      const-val call_tmp[2467247]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2467249 'move' call_tmp[2467247](2467251 'cast' uint(64)[115] size[1500505]))
      const-val call_tmp[2467254]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2467256 'move' call_tmp[2467254](2467258 'sizeof_ddata_element' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983]))
      const-val call_tmp[2467260]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2467262 'move' call_tmp[2467260](2467264 'cast' uint(64)[115] call_tmp[2467254]))
      (2467268 call chpl_mem_array_free[1500576] call_tmp[2467240] call_tmp[2467247] call_tmp[2467260])
    }
    (1500533 return _void[55])
  }
  function _deinitSlot[1286105](ref arg aSlot[1286107]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660]) : void[4] "instantiated generic" "invisible fn" "private" "resolved" "no return value for void"
  {
    (1286199 return _void[55])
  }
  function _allSlotsNumChunks[201167](const in arg size[201164]:int(64)[13]) : int(64)[13] "private" "resolved"
  {
    val ret[526737]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val numTasks[201181]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    val tmp[573438]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[573439]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[700648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2233415]:int(64)[13] "temp"
    (2233418 'move' inlineImm[2233415] 0)
    const-val call_tmp[2233421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233423 'move' call_tmp[2233421](2233425 '==' dataParTasksPerLocale[93284] inlineImm[2233415]))
    (700651 'move' call_tmp[700648] call_tmp[2233421])
    (573444 'move' tmp[573439] call_tmp[700648])
    if tmp[573439]
    {
      const-val tmp[573446]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[700653]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1906256]:locale[28] "temp"
      ref i__retArg[2285560]:locale[28] "temp"
      (2285564 'move' i__retArg[2285560](2285562 'set reference' ret_tmp[1906256]))
      const-val call_tmp[2285567]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2285569]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2285571 'move' call_tmp[2285569](2285574 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2285577 'move' call_tmp[2285567] call_tmp[2285569])
      const-val call_tmp[2285580]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2285582]:locale[28] "temp"
      (2285585 call chpl_localeID_to_locale[92852] call_tmp[2285567] ret_tmp[2285582])
      (2285588 'move' call_tmp[2285580] ret_tmp[2285582])
      (2285591 '=' i__retArg[2285560] call_tmp[2285580])
      (1906259 'move' call_tmp[700653] ret_tmp[1906256])
      ref i_this[2288126]:locale[28] "temp"
      (2288130 'move' i_this[2288126](2288128 'set reference' call_tmp[700653]))
      val ret[2288133]:int(64)[13] "dead after last mention" "RVV" "temp"
      val coerce_tmp[2288135]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288137 'move' coerce_tmp[2288135](2288139 '.v' i_this[2288126] _instance[89978]))
      val coerce_tmp[2288142]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288144 'move' coerce_tmp[2288142](2288146 'cast' object[22] coerce_tmp[2288135]))
      const-val call_tmp[2288149]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2288151 'move' call_tmp[2288149](2288153 'ptr_eq' coerce_tmp[2288142] nil[44]))
      if call_tmp[2288149]
      {
        (2288159 call nilCheckHalt[210238] "argument to ! is nil")
      }
      val coerce_tmp[2288162]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2288164 'move' coerce_tmp[2288162] coerce_tmp[2288135])
      (2288167 'move' ret[2288133](2288169 '.v' coerce_tmp[2288162] maxTaskPar[90746]))
      (573448 'move' tmp[573446] ret[2288133])
      (573453 'move' tmp[573438] tmp[573446])
      ref i_x[2388521]:locale[28] "temp"
      (2388525 'move' i_x[2388521](2388523 'set reference' call_tmp[700653]))
      (2388529 call deinit[90188] i_x[2388521])
    }
    {
      (573458 'move' tmp[573438] dataParTasksPerLocale[93284])
    }
    (545896 'move' numTasks[201181] tmp[573438])
    const-val ignoreRunning[201187]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (545898 'move' ignoreRunning[201187] dataParIgnoreRunningTasks[93290])
    const-val minSizePerTask[201192]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (545900 'move' minSizePerTask[201192] dataParMinGranularity[93296])
    const-val call_tmp[700665]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (700668 'move' call_tmp[700665](201258 call _computeNumChunks[1226144] numTasks[201181] ignoreRunning[201187] minSizePerTask[201192] size[201164]))
    const-val numChunks[201259]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545902 'move' numChunks[201259] call_tmp[700665])
    (526742 'move' ret[526737] numChunks[201259])
    label _end__allSlotsNumChunks[526735]
    (526739 return ret[526737])
  }
  type _ic__allSlots[1221789] val super[1221790]:object[22] "super class" val more[1221792]:int(64)[13] const-val F0_size[2103702]:int(64)[13] val F1__iterator[2103706]:_ic_chpl_direct_counted_range_iter[1103979] val F2__iterator[2103708]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F3_tmp[2103710]:2*int(64)[1040245] val F4__iterator[2103712]:_ic_chpl_direct_param_stride_range_iter[1103475] val F5_i[2103714]:int(64)[13] const-val F6_low[2103716]:int(64)[13] val value[2103718]:int(64)[13]
  type _ir__allSlots[1221795] const-val F0_size[2103704]:int(64)[13]
  function chpl__rehashHelpers[202396].startRehash[202364](const in arg this[202398]:chpl__rehashHelpers[202396], const in arg newSize[202361]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (526826 return _void[55])
  }
  function chpl__rehashHelpers[202396].moveElementDuringRehash[202375](const in arg this[202402]:chpl__rehashHelpers[202396], const in arg oldSlot[202372]:int(64)[13], const in arg newSlot[202378]:int(64)[13]) : void[4] "method" "primary method" "resolved" "fn synchronization free" "no return value for void"
  {
    (526828 return _void[55])
  }
  function chpl__rehashHelpers[202396].finishRehash[202390](const in arg this[202406]:chpl__rehashHelpers[202396], const in arg oldSize[202387]:int(64)[13]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    (526830 return _void[55])
  }
  function chpl__rehashHelpers[202396].deinit[831942](const in arg this[831946]:chpl__rehashHelpers[202396]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890511]
    (831954 return _void[55])
  }
  type chpl__rehashHelpers[202396] val super[355795]:object[22] "super class"
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].init[1209410](ref arg this[1209414]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const  ref arg rehashHelpers[1209426]:owned chpl__rehashHelpers?[1208756]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879825]:BaseDom[146767] "temp"
    const-val _formal_tmp_rehashHelpers[1209627]:owned chpl__rehashHelpers?[1208756] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (1209630 'move' _formal_tmp_rehashHelpers[1209627] rehashHelpers[1209426])
    val tmp[1209442]:BaseDom[146767] "dead after last mention" "temp" "type variable"
    val tmp[1209462]:int(64)[13] "dead after last mention" "temp"
    (1209464 'move' tmp[1209462] 0)
    (1209468 '.=' this[1209414] tableNumFullSlots[1208889] tmp[1209462])
    val tmp[1209473]:int(64)[13] "dead after last mention" "temp"
    (1209475 'move' tmp[1209473] 0)
    (1209479 '.=' this[1209414] tableNumDeletedSlots[1208892] tmp[1209473])
    val tmp[1209484]:int(64)[13] "dead after last mention" "temp"
    (1209486 'move' tmp[1209484] 0)
    (1209490 '.=' this[1209414] tableSizeNum[1208895] tmp[1209484])
    val call_tmp[1209495]:57*int(64)[1210674] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907154]:57*int(64)[1210674] "temp"
    ref i__retArg[2323584]:57*int(64)[1210674] "temp"
    (2323588 'move' i__retArg[2323584](2323586 'set reference' ret_tmp[1907154]))
    val this[2323591]:57*int(64)[1210674] "arg this"
    (2323593 '.=' this[2323591] x0[1210560] 0)
    (2323597 '.=' this[2323591] x1[1210562] 23)
    (2323601 '.=' this[2323591] x2[1210564] 53)
    (2323605 '.=' this[2323591] x3[1210566] 89)
    (2323609 '.=' this[2323591] x4[1210568] 191)
    (2323613 '.=' this[2323591] x5[1210570] 383)
    (2323617 '.=' this[2323591] x6[1210572] 761)
    (2323621 '.=' this[2323591] x7[1210574] 1531)
    (2323625 '.=' this[2323591] x8[1210576] 3067)
    (2323629 '.=' this[2323591] x9[1210578] 6143)
    (2323633 '.=' this[2323591] x10[1210580] 12281)
    (2323637 '.=' this[2323591] x11[1210582] 24571)
    (2323641 '.=' this[2323591] x12[1210584] 49139)
    (2323645 '.=' this[2323591] x13[1210586] 98299)
    (2323649 '.=' this[2323591] x14[1210588] 196597)
    (2323653 '.=' this[2323591] x15[1210590] 393209)
    (2323657 '.=' this[2323591] x16[1210592] 786431)
    (2323661 '.=' this[2323591] x17[1210594] 1572853)
    (2323665 '.=' this[2323591] x18[1210596] 3145721)
    (2323669 '.=' this[2323591] x19[1210598] 6291449)
    (2323673 '.=' this[2323591] x20[1210600] 12582893)
    (2323677 '.=' this[2323591] x21[1210602] 25165813)
    (2323681 '.=' this[2323591] x22[1210604] 50331599)
    (2323685 '.=' this[2323591] x23[1210606] 100663291)
    (2323689 '.=' this[2323591] x24[1210608] 201326557)
    (2323693 '.=' this[2323591] x25[1210610] 402653171)
    (2323697 '.=' this[2323591] x26[1210612] 805306357)
    (2323701 '.=' this[2323591] x27[1210614] 1610612711)
    (2323705 '.=' this[2323591] x28[1210616] 3221225461)
    (2323709 '.=' this[2323591] x29[1210618] 6442450939)
    (2323713 '.=' this[2323591] x30[1210620] 12884901877)
    (2323717 '.=' this[2323591] x31[1210622] 25769803751)
    (2323721 '.=' this[2323591] x32[1210624] 51539607551)
    (2323725 '.=' this[2323591] x33[1210626] 103079215087)
    (2323729 '.=' this[2323591] x34[1210628] 206158430183)
    (2323733 '.=' this[2323591] x35[1210630] 412316860387)
    (2323737 '.=' this[2323591] x36[1210632] 824633720831)
    (2323741 '.=' this[2323591] x37[1210634] 1649267441651)
    (2323745 '.=' this[2323591] x38[1210636] 3298534883309)
    (2323749 '.=' this[2323591] x39[1210638] 6597069766631)
    (2323753 '.=' this[2323591] x40[1210640] 13194139533299)
    (2323757 '.=' this[2323591] x41[1210642] 26388279066623)
    (2323761 '.=' this[2323591] x42[1210644] 52776558133177)
    (2323765 '.=' this[2323591] x43[1210646] 105553116266489)
    (2323769 '.=' this[2323591] x44[1210648] 211106232532969)
    (2323773 '.=' this[2323591] x45[1210650] 422212465065953)
    (2323777 '.=' this[2323591] x46[1210652] 844424930131963)
    (2323781 '.=' this[2323591] x47[1210654] 1688849860263901)
    (2323785 '.=' this[2323591] x48[1210656] 3377699720527861)
    (2323789 '.=' this[2323591] x49[1210658] 6755399441055731)
    (2323793 '.=' this[2323591] x50[1210660] 13510798882111483)
    (2323797 '.=' this[2323591] x51[1210662] 27021597764222939)
    (2323801 '.=' this[2323591] x52[1210664] 54043195528445869)
    (2323805 '.=' this[2323591] x53[1210666] 108086391056891903)
    (2323809 '.=' this[2323591] x54[1210668] 216172782113783773)
    (2323813 '.=' this[2323591] x55[1210670] 432345564227567561)
    (2323817 '.=' this[2323591] x56[1210672] 864691128455135207)
    (2323821 '=' i__retArg[2323584] this[2323591])
    (1907157 'move' call_tmp[1209495] ret_tmp[1907154])
    const-ref call_tmp[1209501]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1209503 'move' call_tmp[1209501](1209505 '.' this[1209414] tableSizeNum[1208895]))
    const-ref call_tmp[1209508]:int(64)[13] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[1211958]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1211962 'move' coerce_tmp[1211958](1211960 'deref' call_tmp[1209501]))
    (1209510 'move' call_tmp[1209508](1209513 call this[1211792] call_tmp[1209495] coerce_tmp[1211958]))
    val tmp[1209515]:int(64)[13] "dead after last mention" "temp"
    (1209517 'move' tmp[1209515](1217650 'deref' call_tmp[1209508]))
    (1209521 '.=' this[1209414] tableSize[1208898] tmp[1209515])
    ref i_x[2517583]:57*int(64)[1210674] "temp"
    (2517587 'move' i_x[2517583](2517585 'set reference' call_tmp[1209495]))
    val tmp[1209526]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "temp"
    val call_tmp[1209528]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1209542]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1209550]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1242936 'move' tmp[1209526](1242934 'cast' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] nil[44]))
    (1209560 '.=' this[1209414] table[1208901] tmp[1209526])
    val call_tmp[1209565]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1209572]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "temp"
    (1924575 '=' tmp[1209572] _formal_tmp_rehashHelpers[1209627])
    (1209574 'noop')
    (1209578 '.=' this[1209414] rehashHelpers[1208909] tmp[1209572])
    val tmp[1209583]:bool[10] "dead after last mention" "temp"
    (1209585 'move' tmp[1209583] 0)
    (1209589 '.=' this[1209414] postponeResize[1208914] tmp[1209583])
    ref call_tmp[1209594]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401603]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    (2401605 'move' call_tmp[2401603](2401607 '.' this[1209414] table[1208901]))
    (1209596 'move' call_tmp[1209594] call_tmp[2401603])
    const-ref call_tmp[1209602]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401697]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2401699 'move' call_tmp[2401697](2401701 '.' this[1209414] tableSize[1208898]))
    (1209604 'move' call_tmp[1209602] call_tmp[2401697])
    val call_tmp[1209610]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1218746]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1218750 'move' coerce_tmp[1218746](1218748 'deref' call_tmp[1209602]))
    (1209612 'move' call_tmp[1209610](1209618 call allocateTable[1218663] this[1209414] coerce_tmp[1218746]))
    (2401907 '=' call_tmp[1209594] call_tmp[1209610])
    (1209624 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].init[1247750](ref arg this[1247754]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const  ref arg rehashHelpers[1247766]:owned chpl__rehashHelpers?[1208756]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_type_tmp_[1879883]:BaseArr[149584] "temp"
    const-val _formal_tmp_rehashHelpers[1247967]:owned chpl__rehashHelpers?[1208756] "dead at end of block" "insert auto destroy" "maybe copy elided" "no copy" "temp"
    (1247970 'move' _formal_tmp_rehashHelpers[1247967] rehashHelpers[1247766])
    val tmp[1247782]:BaseArr[149584] "dead after last mention" "temp" "type variable"
    val tmp[1247802]:int(64)[13] "dead after last mention" "temp"
    (1247804 'move' tmp[1247802] 0)
    (1247808 '.=' this[1247754] tableNumFullSlots[1208589] tmp[1247802])
    val tmp[1247813]:int(64)[13] "dead after last mention" "temp"
    (1247815 'move' tmp[1247813] 0)
    (1247819 '.=' this[1247754] tableNumDeletedSlots[1208592] tmp[1247813])
    val tmp[1247824]:int(64)[13] "dead after last mention" "temp"
    (1247826 'move' tmp[1247824] 0)
    (1247830 '.=' this[1247754] tableSizeNum[1208595] tmp[1247824])
    val call_tmp[1247835]:57*int(64)[1210674] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907160]:57*int(64)[1210674] "temp"
    ref i__retArg[2323826]:57*int(64)[1210674] "temp"
    (2323830 'move' i__retArg[2323826](2323828 'set reference' ret_tmp[1907160]))
    val this[2323833]:57*int(64)[1210674] "arg this"
    (2323835 '.=' this[2323833] x0[1210560] 0)
    (2323839 '.=' this[2323833] x1[1210562] 23)
    (2323843 '.=' this[2323833] x2[1210564] 53)
    (2323847 '.=' this[2323833] x3[1210566] 89)
    (2323851 '.=' this[2323833] x4[1210568] 191)
    (2323855 '.=' this[2323833] x5[1210570] 383)
    (2323859 '.=' this[2323833] x6[1210572] 761)
    (2323863 '.=' this[2323833] x7[1210574] 1531)
    (2323867 '.=' this[2323833] x8[1210576] 3067)
    (2323871 '.=' this[2323833] x9[1210578] 6143)
    (2323875 '.=' this[2323833] x10[1210580] 12281)
    (2323879 '.=' this[2323833] x11[1210582] 24571)
    (2323883 '.=' this[2323833] x12[1210584] 49139)
    (2323887 '.=' this[2323833] x13[1210586] 98299)
    (2323891 '.=' this[2323833] x14[1210588] 196597)
    (2323895 '.=' this[2323833] x15[1210590] 393209)
    (2323899 '.=' this[2323833] x16[1210592] 786431)
    (2323903 '.=' this[2323833] x17[1210594] 1572853)
    (2323907 '.=' this[2323833] x18[1210596] 3145721)
    (2323911 '.=' this[2323833] x19[1210598] 6291449)
    (2323915 '.=' this[2323833] x20[1210600] 12582893)
    (2323919 '.=' this[2323833] x21[1210602] 25165813)
    (2323923 '.=' this[2323833] x22[1210604] 50331599)
    (2323927 '.=' this[2323833] x23[1210606] 100663291)
    (2323931 '.=' this[2323833] x24[1210608] 201326557)
    (2323935 '.=' this[2323833] x25[1210610] 402653171)
    (2323939 '.=' this[2323833] x26[1210612] 805306357)
    (2323943 '.=' this[2323833] x27[1210614] 1610612711)
    (2323947 '.=' this[2323833] x28[1210616] 3221225461)
    (2323951 '.=' this[2323833] x29[1210618] 6442450939)
    (2323955 '.=' this[2323833] x30[1210620] 12884901877)
    (2323959 '.=' this[2323833] x31[1210622] 25769803751)
    (2323963 '.=' this[2323833] x32[1210624] 51539607551)
    (2323967 '.=' this[2323833] x33[1210626] 103079215087)
    (2323971 '.=' this[2323833] x34[1210628] 206158430183)
    (2323975 '.=' this[2323833] x35[1210630] 412316860387)
    (2323979 '.=' this[2323833] x36[1210632] 824633720831)
    (2323983 '.=' this[2323833] x37[1210634] 1649267441651)
    (2323987 '.=' this[2323833] x38[1210636] 3298534883309)
    (2323991 '.=' this[2323833] x39[1210638] 6597069766631)
    (2323995 '.=' this[2323833] x40[1210640] 13194139533299)
    (2323999 '.=' this[2323833] x41[1210642] 26388279066623)
    (2324003 '.=' this[2323833] x42[1210644] 52776558133177)
    (2324007 '.=' this[2323833] x43[1210646] 105553116266489)
    (2324011 '.=' this[2323833] x44[1210648] 211106232532969)
    (2324015 '.=' this[2323833] x45[1210650] 422212465065953)
    (2324019 '.=' this[2323833] x46[1210652] 844424930131963)
    (2324023 '.=' this[2323833] x47[1210654] 1688849860263901)
    (2324027 '.=' this[2323833] x48[1210656] 3377699720527861)
    (2324031 '.=' this[2323833] x49[1210658] 6755399441055731)
    (2324035 '.=' this[2323833] x50[1210660] 13510798882111483)
    (2324039 '.=' this[2323833] x51[1210662] 27021597764222939)
    (2324043 '.=' this[2323833] x52[1210664] 54043195528445869)
    (2324047 '.=' this[2323833] x53[1210666] 108086391056891903)
    (2324051 '.=' this[2323833] x54[1210668] 216172782113783773)
    (2324055 '.=' this[2323833] x55[1210670] 432345564227567561)
    (2324059 '.=' this[2323833] x56[1210672] 864691128455135207)
    (2324063 '=' i__retArg[2323826] this[2323833])
    (1907163 'move' call_tmp[1247835] ret_tmp[1907160])
    const-ref call_tmp[1247841]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1247843 'move' call_tmp[1247841](1247845 '.' this[1247754] tableSizeNum[1208595]))
    const-ref call_tmp[1247848]:int(64)[13] "dead after last mention" "maybe param" "temp"
    const-val coerce_tmp[1247987]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1247991 'move' coerce_tmp[1247987](1247989 'deref' call_tmp[1247841]))
    (1247850 'move' call_tmp[1247848](1247853 call this[1211792] call_tmp[1247835] coerce_tmp[1247987]))
    val tmp[1247855]:int(64)[13] "dead after last mention" "temp"
    (1247857 'move' tmp[1247855](1247994 'deref' call_tmp[1247848]))
    (1247861 '.=' this[1247754] tableSize[1208598] tmp[1247855])
    ref i_x[2517592]:57*int(64)[1210674] "temp"
    (2517596 'move' i_x[2517592](2517594 'set reference' call_tmp[1247835]))
    val tmp[1247866]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "temp"
    val call_tmp[1247868]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1247882]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1247890]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1250904 'move' tmp[1247866](1250902 'cast' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] nil[44]))
    (1247900 '.=' this[1247754] table[1208601] tmp[1247866])
    val call_tmp[1247905]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp" "type variable"
    val tmp[1247912]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "temp"
    (1924704 '=' tmp[1247912] _formal_tmp_rehashHelpers[1247967])
    (1247914 'noop')
    (1247918 '.=' this[1247754] rehashHelpers[1208609] tmp[1247912])
    val tmp[1247923]:bool[10] "dead after last mention" "temp"
    (1247925 'move' tmp[1247923] 0)
    (1247929 '.=' this[1247754] postponeResize[1208614] tmp[1247923])
    ref call_tmp[1247934]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412013]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    (2412015 'move' call_tmp[2412013](2412017 '.' this[1247754] table[1208601]))
    (1247936 'move' call_tmp[1247934] call_tmp[2412013])
    const-ref call_tmp[1247942]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412147]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412149 'move' call_tmp[2412147](2412151 '.' this[1247754] tableSize[1208598]))
    (1247944 'move' call_tmp[1247942] call_tmp[2412147])
    val call_tmp[1247950]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1248168]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1248172 'move' coerce_tmp[1248168](1248170 'deref' call_tmp[1247942]))
    (1247952 'move' call_tmp[1247950](1247958 call allocateTable[1248085] this[1247754] coerce_tmp[1248168]))
    (2412407 '=' call_tmp[1247934] call_tmp[1247950])
    (1247964 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].deinit[1688285](const  ref arg this[1688289]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1688297]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[1688628]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412083]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    (2412085 'move' call_tmp[2412083](2412087 '.' this[1688289] table[1208601]))
    (1688630 'move' call_tmp[1688628] call_tmp[2412083])
    const-ref call_tmp[1688636]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412267]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412269 'move' call_tmp[2412267](2412271 '.' this[1688289] tableSize[1208598]))
    (1688638 'move' call_tmp[1688636] call_tmp[2412267])
    val coerce_tmp[1688668]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1688672 'move' coerce_tmp[1688668](1688670 'deref' call_tmp[1688628]))
    const-val coerce_tmp[1688674]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1688678 'move' coerce_tmp[1688674](1688676 'deref' call_tmp[1688636]))
    (1688645 call _freeData[1278083] coerce_tmp[1688668] coerce_tmp[1688674])
    label _enddeinit[1891806]
    const-ref _field_destructor_tmp_[1891804]:owned chpl__rehashHelpers?[1208756] "temp"
    (1891811 'move' _field_destructor_tmp_[1891804](1891808 '.' this[1688289] rehashHelpers[1208609]))
    (1891813 call deinit[1686754] _field_destructor_tmp_[1891804])
    (1688648 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].deinit[1689498](const  ref arg this[1689502]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val call_tmp[1689510]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-ref call_tmp[1689841]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401653]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    (2401655 'move' call_tmp[2401653](2401657 '.' this[1689502] table[1208901]))
    (1689843 'move' call_tmp[1689841] call_tmp[2401653])
    const-ref call_tmp[1689849]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401787]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2401789 'move' call_tmp[2401787](2401791 '.' this[1689502] tableSize[1208898]))
    (1689851 'move' call_tmp[1689849] call_tmp[2401787])
    val coerce_tmp[1689907]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1689911 'move' coerce_tmp[1689907](1689909 'deref' call_tmp[1689841]))
    const-val coerce_tmp[1689913]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1689917 'move' coerce_tmp[1689913](1689915 'deref' call_tmp[1689849]))
    (1689858 call _freeData[1500501] coerce_tmp[1689907] coerce_tmp[1689913])
    label _enddeinit[1891830]
    const-ref _field_destructor_tmp_[1891828]:owned chpl__rehashHelpers?[1208756] "temp"
    (1891835 'move' _field_destructor_tmp_[1891828](1891832 '.' this[1689502] rehashHelpers[1208909]))
    (1891837 call deinit[1686754] _field_destructor_tmp_[1891828])
    (1689861 return _void[55])
  }
  type _ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289834] val super[1289835]:object[22] "super class" val more[1289837]:int(64)[13] const-ref F0_this[2118477]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] val F1__iterator[2118481]:_ic__allSlots[1221789] val F2__iterator[2118483]:_ic_chpl_direct_counted_range_iter[1103979] val F3__iterator[2118485]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F4_tmp[2118487]:2*int(64)[1040245] val F5__iterator[2118489]:_ic_chpl_direct_param_stride_range_iter[1103475] val F6_i[2118491]:int(64)[13] const-val F7_low[2118493]:int(64)[13] val value[2118495]:int(64)[13]
  type _ir_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289840] const-ref F0_this[2118479]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617]
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617]._findSlot[1267471](const  ref arg this[1267475]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg key[1267482]:BaseArr[149584], ref arg _retArg[1913008]:(bool,int(64))[1265321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1267489]:(bool,int(64))[1265321] "dead after last mention" "RVV" "temp"
    val firstOpen[1267508]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1267510 'move' firstOpen[1267508] -1)
    val _indexOfInterest[1267515]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1267517]:_ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1267519]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val default_arg_numSlots[1268064]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val coerce_tmp[2418917]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2418919 'move' coerce_tmp[2418917](2418921 '.v' this[1267475] tableSize[1208598]))
    (2418924 'noop')
    (1268070 'move' default_arg_numSlots[1268064] coerce_tmp[2418917])
    const-val ret_tmp[1913014]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "temp"
    ref i__retArg[2418883]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "temp"
    (2418887 'move' i__retArg[2418883](2418885 'set reference' ret_tmp[1913014]))
    val _ir[2418890]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "temp"
    (2418892 '.=' _ir[2418890] F0_this[2117664] this[1267475])
    (2418896 '.=' _ir[2418890] F1_key[2117668] key[1267482])
    (2418900 '.=' _ir[2418890] F2_numSlots[2117672] default_arg_numSlots[1268064])
    (2418904 '=' i__retArg[2418883] _ir[2418890])
    (1913017 'move' call_tmp[1267519] ret_tmp[1913014])
    ref i_ir[2423845]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "temp"
    (2423849 'move' i_ir[2423845](2423847 'set reference' call_tmp[1267519]))
    val ret[2423852]:_ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892] "dead after last mention" "RVV" "temp"
    val _ic_[2423854]:_ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892] "dead after last mention" "temp"
    const-val call_tmp[2423856]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2423858 'move' call_tmp[2423856](2423860 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892]))
    const-val cast_tmp[2423862]:c_void_ptr[149] "dead after last mention" "temp"
    (2423864 'move' cast_tmp[2423862](2423867 call chpl_here_alloc[187788] call_tmp[2423856] 46))
    (2423870 'move' _ic_[2423854](2423872 'cast' _ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892] cast_tmp[2423862]))
    (2423875 'setcid' _ic_[2423854])
    (2423877 'move' ret[2423852] _ic_[2423854])
    (2423880 '.=' ret[2423852] more[1271895] 1)
    const-ref tmp[2423884]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "temp"
    (2423886 'move' tmp[2423884](2423888 '.v' i_ir[2423845] F0_this[2117664]))
    (2423891 '.=' ret[2423852] F0_this[2117662] tmp[2423884])
    const-val tmp[2423895]:BaseArr[149584] "temp"
    (2423897 'move' tmp[2423895](2423899 '.v' i_ir[2423845] F1_key[2117668]))
    (2423902 '.=' ret[2423852] F1_key[2117666] tmp[2423895])
    const-val tmp[2423906]:int(64)[13] "temp"
    (2423908 'move' tmp[2423906](2423910 '.v' i_ir[2423845] F2_numSlots[2117672]))
    (2423913 '.=' ret[2423852] F2_numSlots[2117670] tmp[2423906])
    (1267529 'move' _iterator[1267517] ret[2423852])
    val ret[2000397]:_ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2000399]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val key[2000791]:BaseArr[149584] "temp"
    (2000796 'move' key[2000791](2000793 '.v' _iterator[1267517] F1_key[2117666]))
    (2000401 'move' call_tmp[2000399](2000404 call chpl__defaultHashWrapper[1268074] key[2000791]))
    const-val call_tmp[2000406]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2231648]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2231650 'move' call_tmp[2231648](2231652 'cast' uint(64)[115] call_tmp[2000399]))
    (2000408 'move' call_tmp[2000406] call_tmp[2231648])
    const-val baseSlot[2000413]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (2000415 'move' baseSlot[2000413] call_tmp[2000406])
    const-val call_tmp[2000418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val numSlots[2000798]:int(64)[13] "temp"
    (2000803 'move' numSlots[2000798](2000800 '.v' _iterator[1267517] F2_numSlots[2117670]))
    val inlineImm[2234755]:int(64)[13] "temp"
    (2234758 'move' inlineImm[2234755] 0)
    const-val call_tmp[2234761]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2234763 'move' call_tmp[2234761](2234765 '==' numSlots[2000798] inlineImm[2234755]))
    (2000420 'move' call_tmp[2000418] call_tmp[2234761])
    const-val call_tmp[2000426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2000428 'move' call_tmp[2000426] call_tmp[2000418])
    if call_tmp[2000418]
    {
      gotoReturn _end__lookForSlots[2000544] _end__lookForSlots[2000544]
    }
    val _indexOfInterest[2000436]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2000438]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2000440]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val numSlots[2000805]:int(64)[13] "temp"
    (2000810 'move' numSlots[2000805](2000807 '.v' _iterator[1267517] F2_numSlots[2117670]))
    const-val call_tmp[2340817]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340819 'move' call_tmp[2340817](2340821 '/' numSlots[2000805] 2))
    (2000442 'move' call_tmp[2000440] call_tmp[2340817])
    const-val call_tmp[2000447]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2000449]:_ir_chpl_direct_range_iter[1230579] "temp"
    val inlineImm[2404417]:int(64)[13] "temp"
    (2404420 'move' inlineImm[2404417] 0)
    ref i__retArg[2404422]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404426 'move' i__retArg[2404422](2404424 'set reference' ret_tmp[2000449]))
    val _ir[2404429]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404431 '.=' _ir[2404429] F0_low[2116766] inlineImm[2404417])
    (2404435 '.=' _ir[2404429] F1_high[2116770] call_tmp[2000440])
    (2404439 '=' i__retArg[2404422] _ir[2404429])
    (2000456 'move' call_tmp[2000447] ret_tmp[2000449])
    ref i_ir[2405731]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2405735 'move' i_ir[2405731](2405733 'set reference' call_tmp[2000447]))
    val ret[2405738]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "RVV" "temp"
    val _ic_[2405740]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "temp"
    const-val call_tmp[2405742]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2405744 'move' call_tmp[2405742](2405746 'sizeof_bundle' _ic_chpl_direct_range_iter[1230573]))
    const-val cast_tmp[2405748]:c_void_ptr[149] "dead after last mention" "temp"
    (2405750 'move' cast_tmp[2405748](2405753 call chpl_here_alloc[187788] call_tmp[2405742] 39))
    (2405756 'move' _ic_[2405740](2405758 'cast' _ic_chpl_direct_range_iter[1230573] cast_tmp[2405748]))
    (2405761 'setcid' _ic_[2405740])
    (2405763 'move' ret[2405738] _ic_[2405740])
    (2405766 '.=' ret[2405738] more[1230576] 1)
    const-val tmp[2405770]:int(64)[13] "temp"
    (2405772 'move' tmp[2405770](2405774 '.v' i_ir[2405731] F0_low[2116766]))
    (2405777 '.=' ret[2405738] F0_low[2116764] tmp[2405770])
    const-val tmp[2405781]:int(64)[13] "temp"
    (2405783 'move' tmp[2405781](2405785 '.v' i_ir[2405731] F1_high[2116770]))
    (2405788 '.=' ret[2405738] F1_high[2116768] tmp[2405781])
    (2000459 'move' _iterator[2000438] ret[2405738])
    val ret[2069826]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2069828]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2069830]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2069832]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2069834]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    const-val low[2070314]:int(64)[13] "temp"
    (2070319 'move' low[2070314](2070316 '.v' _iterator[2000438] F0_low[2116764]))
    const-val high[2070321]:int(64)[13] "temp"
    (2070326 'move' high[2070321](2070323 '.v' _iterator[2000438] F1_high[2116768]))
    ref i__retArg[2305993]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2305997 'move' i__retArg[2305993](2305995 'set reference' ret_tmp[2069834]))
    val _ir[2306000]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2306002 '.=' _ir[2306000] F0_low[2115194] low[2070314])
    (2306006 '.=' _ir[2306000] F1_high[2115198] high[2070321])
    (2306010 '=' i__retArg[2305993] _ir[2306000])
    (2069841 'move' call_tmp[2069832] ret_tmp[2069834])
    ref i_ir[2308900]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2308904 'move' i_ir[2308900](2308902 'set reference' call_tmp[2069832]))
    val ret[2308907]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
    val _ic_[2308909]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
    const-val call_tmp[2308911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2308913 'move' call_tmp[2308911](2308915 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
    const-val cast_tmp[2308917]:c_void_ptr[149] "dead after last mention" "temp"
    (2308919 'move' cast_tmp[2308917](2308922 call chpl_here_alloc[187788] call_tmp[2308911] 28))
    (2308925 'move' _ic_[2308909](2308927 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2308917]))
    (2308930 'setcid' _ic_[2308909])
    (2308932 'move' ret[2308907] _ic_[2308909])
    (2308935 '.=' ret[2308907] more[1103478] 1)
    const-val tmp[2308939]:int(64)[13] "temp"
    (2308941 'move' tmp[2308939](2308943 '.v' i_ir[2308900] F0_low[2115194]))
    (2308946 '.=' ret[2308907] F0_low[2115192] tmp[2308939])
    const-val tmp[2308950]:int(64)[13] "temp"
    (2308952 'move' tmp[2308950](2308954 '.v' i_ir[2308900] F1_high[2115198]))
    (2308957 '.=' ret[2308907] F1_high[2115196] tmp[2308950])
    (2069844 'move' _iterator[2069830] ret[2308907])
    val ret[2069850]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2069852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2069856]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2069858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2069860 'move' i[2069856] 0)
    val call_tmp[2069863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2069865]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2069867]:int(64)[13] "temp"
    (2069869 'move' low[2069867](2069871 '.v' _iterator[2069830] F0_low[2115192]))
    (2069874 'move' default_arg_first[2069865] low[2069867])
    const-val default_arg_last[2069879]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2069881]:int(64)[13] "temp"
    (2069883 'move' high[2069881](2069885 '.v' _iterator[2069830] F1_high[2115196]))
    (2069888 'move' default_arg_last[2069879] high[2069881])
    const-val _return_tmp_[2069893]:bool[10] "dead after last mention" "temp"
    const-val low[2069895]:int(64)[13] "temp"
    (2069897 'move' low[2069895](2069899 '.v' _iterator[2069830] F0_low[2115192]))
    const-val high[2069902]:int(64)[13] "temp"
    (2069904 'move' high[2069902](2069906 '.v' _iterator[2069830] F1_high[2115196]))
    (2069909 'move' _return_tmp_[2069893](2069912 call chpl_checkIfRangeIterWillOverflow[1096265] low[2069895] high[2069902] 1 default_arg_first[2069865] default_arg_last[2069879] 1))
    CForLoop[2069919]
    {
      const-val yret[2069948]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2069950 'move' yret[2069948] i[2069856])
      const-val _yieldedIndex[2069953]:int(64)[13] "temp"
      (2069955 'move' _yieldedIndex[2069953] i[2069856])
      const-val i[2069959]:int(64)[13] "const" "index var" "insert auto destroy"
      (2069961 'move' i[2069959] _yieldedIndex[2069953])
      const-val yret[2069964]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2069966 'move' yret[2069964] _yieldedIndex[2069953])
      const-val _yieldedIndex[2069988]:int(64)[13] "temp"
      (2070312 'move' _yieldedIndex[2069988] _yieldedIndex[2069953])
      const-val probe[2069990]:int(64)[13] "const" "index var" "insert auto destroy"
      (2069992 'move' probe[2069990] _yieldedIndex[2069988])
      const-val call_tmp[2069995]:uint(64)[115] "dead at end of block" "maybe param" "temp"
      const-val call_tmp[2231918]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231920 'move' call_tmp[2231918](2231922 'cast' uint(64)[115] _yieldedIndex[2069988]))
      (2069997 'move' call_tmp[2069995] call_tmp[2231918])
      const-val uprobe[2070002]:uint(64)[115] "dead at end of block" "insert auto destroy"
      (2070004 'move' uprobe[2070002] call_tmp[2069995])
      const-val call_tmp[2070007]:uint(64)[115] "dead at end of block" "maybe param" "temp"
      const-val numSlots[2070009]:int(64)[13] "temp"
      (2070011 'move' numSlots[2070009](2070013 '.v' _iterator[1267517] F2_numSlots[2117670]))
      const-val call_tmp[2231928]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231930 'move' call_tmp[2231928](2231932 'cast' uint(64)[115] numSlots[2070009]))
      (2070016 'move' call_tmp[2070007] call_tmp[2231928])
      const-val n[2070021]:uint(64)[115] "dead at end of block" "insert auto destroy"
      (2070023 'move' n[2070021] call_tmp[2070007])
      const-val yret[2070026]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[2070028]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2423826]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2423828 'move' call_tmp[2423826](2423830 '*' call_tmp[2069995] call_tmp[2069995]))
      (2070030 'move' call_tmp[2070028] call_tmp[2423826])
      const-val call_tmp[2070035]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2334388]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2334390 'move' call_tmp[2334388](2334392 '+' baseSlot[2000413] call_tmp[2070028]))
      (2070037 'move' call_tmp[2070035] call_tmp[2334388])
      const-val call_tmp[2070043]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2335257]:int(64)[13] "temp"
      (2335259 'move' inlineImm[2335257] 0)
      const-val call_tmp[2335262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335264 'move' call_tmp[2335262](2335266 '<' 0 0))
      const-val call_tmp[2335269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335271 'move' call_tmp[2335269](2335273 '!' call_tmp[2335262]))
      val tmp[2335275]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2335269]
      {
        const-val call_tmp[2335279]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335281 'move' call_tmp[2335279](2335283 'cast' uint(64)[115] inlineImm[2335257]))
        const-val call_tmp[2335286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335288 'move' call_tmp[2335286](2335290 '==' call_tmp[2070007] call_tmp[2335279]))
        (2335293 'move' tmp[2335275] call_tmp[2335286])
      }
      {
        (2335297 'move' tmp[2335275] 0)
      }
      if tmp[2335275]
      {
        (2335304 call halt[154111] "Attempt to compute a modulus by zero")
      }
      const-val call_tmp[2335307]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335309 'move' call_tmp[2335307](2335311 '%' call_tmp[2070035] call_tmp[2070007]))
      (2070045 'move' call_tmp[2070043] call_tmp[2335307])
      const-val call_tmp[2070051]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2302934]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302936 'move' call_tmp[2302934](2302938 'cast' int(64)[13] call_tmp[2070043]))
      (2070053 'move' call_tmp[2070051] call_tmp[2302934])
      (2070058 'move' yret[2070026] call_tmp[2070051])
      const-val _yieldedIndex[2070061]:int(64)[13] "temp"
      (2070063 'move' _yieldedIndex[2070061] call_tmp[2070051])
      const-val slotNum[2070067]:int(64)[13] "const" "index var" "insert auto destroy"
      (2070069 'move' slotNum[2070067] _yieldedIndex[2070061])
      ref call_tmp[2070073]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "maybe param" "temp"
      const-ref _this_tmp_[2070075]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "temp"
      ref call_tmp[2412103]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
      (2412105 'move' call_tmp[2412103](2412107 '.' this[1267475] table[1208601]))
      (2070077 'move' _this_tmp_[2070075] call_tmp[2412103])
      val coerce_tmp[2070082]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2070084 'move' coerce_tmp[2070082](2070086 'deref' _this_tmp_[2070075]))
      ref call_tmp[2412516]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
      (2412518 'move' call_tmp[2412516](2412520 'array_get' coerce_tmp[2070082] slotNum[2070067]))
      (2070088 'move' call_tmp[2070073] call_tmp[2412516])
      const-ref call_tmp[2070094]:chpl__hash_status[200461] "dead at end of block" "maybe param" "temp"
      ref call_tmp[2418700]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
      (2418702 'move' call_tmp[2418700](2418704 '.' call_tmp[2070073] status[1208652]))
      (2070096 'move' call_tmp[2070094] call_tmp[2418700])
      const-val slotStatus[2070101]:chpl__hash_status[200461] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2070103]:chpl__hash_status[200461] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2070105 'move' coerce_tmp[2070103](2070107 'deref' call_tmp[2070094]))
      (2070109 '=' slotStatus[2070101] coerce_tmp[2070103])
      (2070112 'noop')
      const-val call_tmp[2070113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2418750]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2418752 'move' call_tmp[2418750](2418754 '==' slotStatus[2070101] empty[200455]))
      (2070115 'move' call_tmp[2070113] call_tmp[2418750])
      const-val call_tmp[2070121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070123 'move' call_tmp[2070121] call_tmp[2070113])
      if call_tmp[2070121]
      {
        const-val call_tmp[2070128]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val inlineImm[2235240]:int(64)[13] "temp"
        (2235243 'move' inlineImm[2235240] -1)
        const-val call_tmp[2235246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235248 'move' call_tmp[2235246](2235250 '==' firstOpen[1267508] inlineImm[2235240]))
        (2070130 'move' call_tmp[2070128] call_tmp[2235246])
        const-val call_tmp[2070136]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2070138 'move' call_tmp[2070136] call_tmp[2070128])
        if call_tmp[2070136]
        {
          ref i_a[2238656]:int(64)[13] "temp"
          (2238660 'move' i_a[2238656](2238658 'set reference' firstOpen[1267508]))
          (2238663 '=' i_a[2238656] slotNum[2070067])
        }
        const-val call_tmp[2070148]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2070150]:(bool,int(64))[1265321] "temp"
        val inlineImm[2424221]:bool[10] "temp"
        (2424224 'move' inlineImm[2424221] 0)
        ref i__retArg[2424226]:(bool,int(64))[1265321] "temp"
        (2424230 'move' i__retArg[2424226](2424228 'set reference' ret_tmp[2070150]))
        val this[2424233]:(bool,int(64))[1265321] "arg this"
        (2424235 '.=' this[2424233] x0[1265317] inlineImm[2424221])
        (2424239 '.=' this[2424233] x1[1265319] firstOpen[1267508])
        (2424243 '=' i__retArg[2424226] this[2424233])
        (2070157 'move' call_tmp[2070148] ret_tmp[2070150])
        val call_tmp[2070160]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2070162 'move' ret[1267489] call_tmp[2070148])
        const-val call_tmp[2311003]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2311005 'move' call_tmp[2311003](2311007 'cast_to_void_star' _iterator[2069830]))
        (2311010 call chpl_here_free[188127] call_tmp[2311003])
        const-val call_tmp[2406134]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2406136 'move' call_tmp[2406134](2406138 'cast_to_void_star' _iterator[2000438]))
        (2406141 call chpl_here_free[188127] call_tmp[2406134])
        const-val call_tmp[2423932]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2423934 'move' call_tmp[2423932](2423936 'cast_to_void_star' _iterator[1267517]))
        (2423939 call chpl_here_free[188127] call_tmp[2423932])
        gotoReturn _end__findSlot[1267802] _end__findSlot[1267802]
      }
      {
        const-val call_tmp[2070174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2418760]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418762 'move' call_tmp[2418760](2418764 '==' slotStatus[2070101] full[200457]))
        (2070176 'move' call_tmp[2070174] call_tmp[2418760])
        const-val call_tmp[2070182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2070184 'move' call_tmp[2070182] call_tmp[2070174])
        if call_tmp[2070182]
        {
          ref call_tmp[2070189]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[2070191]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "temp"
          ref call_tmp[2412113]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
          (2412115 'move' call_tmp[2412113](2412117 '.' this[1267475] table[1208601]))
          (2070193 'move' _this_tmp_[2070191] call_tmp[2412113])
          val coerce_tmp[2070198]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2070200 'move' coerce_tmp[2070198](2070202 'deref' _this_tmp_[2070191]))
          ref call_tmp[2412526]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          (2412528 'move' call_tmp[2412526](2412530 'array_get' coerce_tmp[2070198] slotNum[2070067]))
          (2070204 'move' call_tmp[2070189] call_tmp[2412526])
          const-ref call_tmp[2070210]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2418854]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          (2418856 'move' call_tmp[2418854](2418858 '.' call_tmp[2070189] key[1208656]))
          (2070212 'move' call_tmp[2070210] call_tmp[2418854])
          const-val call_tmp[2070217]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[2070219]:BaseArr[149584] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2070221 'move' coerce_tmp[2070219](2070223 'deref' call_tmp[2070210]))
          val coerce_tmp[2070225]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2070227 'move' coerce_tmp[2070225](2070229 'cast' object[22] coerce_tmp[2070219]))
          val coerce_tmp[2070232]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2070234 'move' coerce_tmp[2070232](2070236 'cast' object[22] key[1267482]))
          const-val call_tmp[2226817]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2226819 'move' call_tmp[2226817](2226821 'ptr_eq' coerce_tmp[2070225] coerce_tmp[2070232]))
          (2070239 'move' call_tmp[2070217] call_tmp[2226817])
          const-val call_tmp[2070245]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2070247 'move' call_tmp[2070245] call_tmp[2070217])
          if call_tmp[2070245]
          {
            const-val call_tmp[2070252]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[2070254]:(bool,int(64))[1265321] "temp"
            val inlineImm[2424248]:bool[10] "temp"
            (2424251 'move' inlineImm[2424248] 1)
            ref i__retArg[2424253]:(bool,int(64))[1265321] "temp"
            (2424257 'move' i__retArg[2424253](2424255 'set reference' ret_tmp[2070254]))
            val this[2424260]:(bool,int(64))[1265321] "arg this"
            (2424262 '.=' this[2424260] x0[1265317] inlineImm[2424248])
            (2424266 '.=' this[2424260] x1[1265319] slotNum[2070067])
            (2424270 '=' i__retArg[2424253] this[2424260])
            (2070261 'move' call_tmp[2070252] ret_tmp[2070254])
            val call_tmp[2070264]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2070266 'move' ret[1267489] call_tmp[2070252])
            const-val call_tmp[2311015]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2311017 'move' call_tmp[2311015](2311019 'cast_to_void_star' _iterator[2069830]))
            (2311022 call chpl_here_free[188127] call_tmp[2311015])
            const-val call_tmp[2406146]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2406148 'move' call_tmp[2406146](2406150 'cast_to_void_star' _iterator[2000438]))
            (2406153 call chpl_here_free[188127] call_tmp[2406146])
            const-val call_tmp[2423944]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2423946 'move' call_tmp[2423944](2423948 'cast_to_void_star' _iterator[1267517]))
            (2423951 call chpl_here_free[188127] call_tmp[2423944])
            gotoReturn _end__findSlot[1267802] _end__findSlot[1267802]
          }
        }
        {
          const-val call_tmp[2070279]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2235255]:int(64)[13] "temp"
          (2235258 'move' inlineImm[2235255] -1)
          const-val call_tmp[2235261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2235263 'move' call_tmp[2235261](2235265 '==' firstOpen[1267508] inlineImm[2235255]))
          (2070281 'move' call_tmp[2070279] call_tmp[2235261])
          const-val call_tmp[2070287]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2070289 'move' call_tmp[2070287] call_tmp[2070279])
          if call_tmp[2070287]
          {
            ref i_a[2238668]:int(64)[13] "temp"
            (2238672 'move' i_a[2238668](2238670 'set reference' firstOpen[1267508]))
            (2238675 '=' i_a[2238668] slotNum[2070067])
          }
        }
      }
      {
        const-val low[2069921]:int(64)[13] "temp"
        (2069923 'move' low[2069921](2069925 '.v' _iterator[2069830] F0_low[2115192]))
        (2069928 '=' i[2069856] low[2069921])
      }
      {
        const-val high[2069932]:int(64)[13] "temp"
        (2069934 'move' high[2069932](2069936 '.v' _iterator[2069830] F1_high[2115196]))
        (2069939 '<=' i[2069856] high[2069932])
      }
      {
        val call_tmp[2069943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2069945 '+=' i[2069856] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2069979]
    const-val call_tmp[2310991]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2310993 'move' call_tmp[2310991](2310995 'cast_to_void_star' _iterator[2069830]))
    (2310998 call chpl_here_free[188127] call_tmp[2310991])
    label _endchpl_direct_range_iter[2069984]
    const-val call_tmp[2406098]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406100 'move' call_tmp[2406098](2406102 'cast_to_void_star' _iterator[2000438]))
    (2406105 call chpl_here_free[188127] call_tmp[2406098])
    label _end__lookForSlots[2000544]
    const-val call_tmp[2423920]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2423922 'move' call_tmp[2423920](2423924 'cast_to_void_star' _iterator[1267517]))
    (2423927 call chpl_here_free[188127] call_tmp[2423920])
    const-val call_tmp[1267781]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913078]:(bool,int(64))[1265321] "temp"
    val inlineImm[2424032]:bool[10] "temp"
    (2424035 'move' inlineImm[2424032] 0)
    val inlineImm[2424037]:int(64)[13] "temp"
    (2424040 'move' inlineImm[2424037] -1)
    ref i__retArg[2424042]:(bool,int(64))[1265321] "temp"
    (2424046 'move' i__retArg[2424042](2424044 'set reference' ret_tmp[1913078]))
    val this[2424049]:(bool,int(64))[1265321] "arg this"
    (2424051 '.=' this[2424049] x0[1265317] inlineImm[2424032])
    (2424055 '.=' this[2424049] x1[1265319] inlineImm[2424037])
    (2424059 '=' i__retArg[2424042] this[2424049])
    (1913081 'move' call_tmp[1267781] ret_tmp[1913078])
    val call_tmp[1267789]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1272293 'move' ret[1267489] call_tmp[1267781])
    label _end__findSlot[1267802]
    (1913010 '=' _retArg[1913008] ret[1267489])
    (1913012 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917]._findSlot[1497021](const  ref arg this[1497025]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg key[1497032]:BaseDom[146767], ref arg _retArg[1916167]:(bool,int(64))[1265321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1497039]:(bool,int(64))[1265321] "dead after last mention" "RVV" "temp"
    val firstOpen[1497058]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1497060 'move' firstOpen[1497058] -1)
    val _indexOfInterest[1497065]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1497067]:_ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1497069]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val default_arg_numSlots[1497608]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val coerce_tmp[2466775]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2466777 'move' coerce_tmp[2466775](2466779 '.v' this[1497025] tableSize[1208898]))
    (2466782 'noop')
    (1497614 'move' default_arg_numSlots[1497608] coerce_tmp[2466775])
    const-val ret_tmp[1916173]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "temp"
    ref i__retArg[2466741]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "temp"
    (2466745 'move' i__retArg[2466741](2466743 'set reference' ret_tmp[1916173]))
    val _ir[2466748]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "temp"
    (2466750 '.=' _ir[2466748] F0_this[2162905] this[1497025])
    (2466754 '.=' _ir[2466748] F1_key[2162909] key[1497032])
    (2466758 '.=' _ir[2466748] F2_numSlots[2162913] default_arg_numSlots[1497608])
    (2466762 '=' i__retArg[2466741] _ir[2466748])
    (1916176 'move' call_tmp[1497069] ret_tmp[1916173])
    ref i_ir[2466785]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "temp"
    (2466789 'move' i_ir[2466785](2466787 'set reference' call_tmp[1497069]))
    val ret[2466792]:_ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863] "dead after last mention" "RVV" "temp"
    val _ic_[2466794]:_ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863] "dead after last mention" "temp"
    const-val call_tmp[2466796]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2466798 'move' call_tmp[2466796](2466800 'sizeof_bundle' _ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863]))
    const-val cast_tmp[2466802]:c_void_ptr[149] "dead after last mention" "temp"
    (2466804 'move' cast_tmp[2466802](2466807 call chpl_here_alloc[187788] call_tmp[2466796] 99))
    (2466810 'move' _ic_[2466794](2466812 'cast' _ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863] cast_tmp[2466802]))
    (2466815 'setcid' _ic_[2466794])
    (2466817 'move' ret[2466792] _ic_[2466794])
    (2466820 '.=' ret[2466792] more[1497866] 1)
    const-ref tmp[2466824]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "temp"
    (2466826 'move' tmp[2466824](2466828 '.v' i_ir[2466785] F0_this[2162905]))
    (2466831 '.=' ret[2466792] F0_this[2162903] tmp[2466824])
    const-val tmp[2466835]:BaseDom[146767] "temp"
    (2466837 'move' tmp[2466835](2466839 '.v' i_ir[2466785] F1_key[2162909]))
    (2466842 '.=' ret[2466792] F1_key[2162907] tmp[2466835])
    const-val tmp[2466846]:int(64)[13] "temp"
    (2466848 'move' tmp[2466846](2466850 '.v' i_ir[2466785] F2_numSlots[2162913]))
    (2466853 '.=' ret[2466792] F2_numSlots[2162911] tmp[2466846])
    (1497079 'move' _iterator[1497067] ret[2466792])
    val ret[2014668]:_ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2014670]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val key[2015062]:BaseDom[146767] "temp"
    (2015067 'move' key[2015062](2015064 '.v' _iterator[1497067] F1_key[2162907]))
    (2014672 'move' call_tmp[2014670](2014675 call chpl__defaultHashWrapper[1497618] key[2015062]))
    const-val call_tmp[2014677]:uint(64)[115] "dead at end of block" "maybe param" "temp"
    const-val call_tmp[2231678]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2231680 'move' call_tmp[2231678](2231682 'cast' uint(64)[115] call_tmp[2014670]))
    (2014679 'move' call_tmp[2014677] call_tmp[2231678])
    const-val baseSlot[2014684]:uint(64)[115] "dead at end of block" "const" "insert auto destroy"
    (2014686 'move' baseSlot[2014684] call_tmp[2014677])
    const-val call_tmp[2014689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val numSlots[2015069]:int(64)[13] "temp"
    (2015074 'move' numSlots[2015069](2015071 '.v' _iterator[1497067] F2_numSlots[2162911]))
    val inlineImm[2234815]:int(64)[13] "temp"
    (2234818 'move' inlineImm[2234815] 0)
    const-val call_tmp[2234821]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2234823 'move' call_tmp[2234821](2234825 '==' numSlots[2015069] inlineImm[2234815]))
    (2014691 'move' call_tmp[2014689] call_tmp[2234821])
    const-val call_tmp[2014697]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2014699 'move' call_tmp[2014697] call_tmp[2014689])
    if call_tmp[2014689]
    {
      gotoReturn _end__lookForSlots[2014815] _end__lookForSlots[2014815]
    }
    val _indexOfInterest[2014707]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2014709]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2014711]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val numSlots[2015076]:int(64)[13] "temp"
    (2015081 'move' numSlots[2015076](2015078 '.v' _iterator[1497067] F2_numSlots[2162911]))
    const-val call_tmp[2340827]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340829 'move' call_tmp[2340827](2340831 '/' numSlots[2015076] 2))
    (2014713 'move' call_tmp[2014711] call_tmp[2340827])
    const-val call_tmp[2014718]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2014720]:_ir_chpl_direct_range_iter[1230579] "temp"
    val inlineImm[2404444]:int(64)[13] "temp"
    (2404447 'move' inlineImm[2404444] 0)
    ref i__retArg[2404449]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404453 'move' i__retArg[2404449](2404451 'set reference' ret_tmp[2014720]))
    val _ir[2404456]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404458 '.=' _ir[2404456] F0_low[2116766] inlineImm[2404444])
    (2404462 '.=' _ir[2404456] F1_high[2116770] call_tmp[2014711])
    (2404466 '=' i__retArg[2404449] _ir[2404456])
    (2014727 'move' call_tmp[2014718] ret_tmp[2014720])
    ref i_ir[2405794]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2405798 'move' i_ir[2405794](2405796 'set reference' call_tmp[2014718]))
    val ret[2405801]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "RVV" "temp"
    val _ic_[2405803]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "temp"
    const-val call_tmp[2405805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2405807 'move' call_tmp[2405805](2405809 'sizeof_bundle' _ic_chpl_direct_range_iter[1230573]))
    const-val cast_tmp[2405811]:c_void_ptr[149] "dead after last mention" "temp"
    (2405813 'move' cast_tmp[2405811](2405816 call chpl_here_alloc[187788] call_tmp[2405805] 39))
    (2405819 'move' _ic_[2405803](2405821 'cast' _ic_chpl_direct_range_iter[1230573] cast_tmp[2405811]))
    (2405824 'setcid' _ic_[2405803])
    (2405826 'move' ret[2405801] _ic_[2405803])
    (2405829 '.=' ret[2405801] more[1230576] 1)
    const-val tmp[2405833]:int(64)[13] "temp"
    (2405835 'move' tmp[2405833](2405837 '.v' i_ir[2405794] F0_low[2116766]))
    (2405840 '.=' ret[2405801] F0_low[2116764] tmp[2405833])
    const-val tmp[2405844]:int(64)[13] "temp"
    (2405846 'move' tmp[2405844](2405848 '.v' i_ir[2405794] F1_high[2116770]))
    (2405851 '.=' ret[2405801] F1_high[2116768] tmp[2405844])
    (2014730 'move' _iterator[2014709] ret[2405801])
    val ret[2081479]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2081481]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2081483]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2081485]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2081487]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    const-val low[2081967]:int(64)[13] "temp"
    (2081972 'move' low[2081967](2081969 '.v' _iterator[2014709] F0_low[2116764]))
    const-val high[2081974]:int(64)[13] "temp"
    (2081979 'move' high[2081974](2081976 '.v' _iterator[2014709] F1_high[2116768]))
    ref i__retArg[2306037]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2306041 'move' i__retArg[2306037](2306039 'set reference' ret_tmp[2081487]))
    val _ir[2306044]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2306046 '.=' _ir[2306044] F0_low[2115194] low[2081967])
    (2306050 '.=' _ir[2306044] F1_high[2115198] high[2081974])
    (2306054 '=' i__retArg[2306037] _ir[2306044])
    (2081494 'move' call_tmp[2081485] ret_tmp[2081487])
    ref i_ir[2309026]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2309030 'move' i_ir[2309026](2309028 'set reference' call_tmp[2081485]))
    val ret[2309033]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
    val _ic_[2309035]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
    const-val call_tmp[2309037]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2309039 'move' call_tmp[2309037](2309041 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
    const-val cast_tmp[2309043]:c_void_ptr[149] "dead after last mention" "temp"
    (2309045 'move' cast_tmp[2309043](2309048 call chpl_here_alloc[187788] call_tmp[2309037] 28))
    (2309051 'move' _ic_[2309035](2309053 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2309043]))
    (2309056 'setcid' _ic_[2309035])
    (2309058 'move' ret[2309033] _ic_[2309035])
    (2309061 '.=' ret[2309033] more[1103478] 1)
    const-val tmp[2309065]:int(64)[13] "temp"
    (2309067 'move' tmp[2309065](2309069 '.v' i_ir[2309026] F0_low[2115194]))
    (2309072 '.=' ret[2309033] F0_low[2115192] tmp[2309065])
    const-val tmp[2309076]:int(64)[13] "temp"
    (2309078 'move' tmp[2309076](2309080 '.v' i_ir[2309026] F1_high[2115198]))
    (2309083 '.=' ret[2309033] F1_high[2115196] tmp[2309076])
    (2081497 'move' _iterator[2081483] ret[2309033])
    val ret[2081503]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2081505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2081509]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2081511]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2081513 'move' i[2081509] 0)
    val call_tmp[2081516]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2081518]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2081520]:int(64)[13] "temp"
    (2081522 'move' low[2081520](2081524 '.v' _iterator[2081483] F0_low[2115192]))
    (2081527 'move' default_arg_first[2081518] low[2081520])
    const-val default_arg_last[2081532]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2081534]:int(64)[13] "temp"
    (2081536 'move' high[2081534](2081538 '.v' _iterator[2081483] F1_high[2115196]))
    (2081541 'move' default_arg_last[2081532] high[2081534])
    const-val _return_tmp_[2081546]:bool[10] "dead after last mention" "temp"
    const-val low[2081548]:int(64)[13] "temp"
    (2081550 'move' low[2081548](2081552 '.v' _iterator[2081483] F0_low[2115192]))
    const-val high[2081555]:int(64)[13] "temp"
    (2081557 'move' high[2081555](2081559 '.v' _iterator[2081483] F1_high[2115196]))
    (2081562 'move' _return_tmp_[2081546](2081565 call chpl_checkIfRangeIterWillOverflow[1096265] low[2081548] high[2081555] 1 default_arg_first[2081518] default_arg_last[2081532] 1))
    CForLoop[2081572]
    {
      const-val yret[2081601]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2081603 'move' yret[2081601] i[2081509])
      const-val _yieldedIndex[2081606]:int(64)[13] "temp"
      (2081608 'move' _yieldedIndex[2081606] i[2081509])
      const-val i[2081612]:int(64)[13] "const" "index var" "insert auto destroy"
      (2081614 'move' i[2081612] _yieldedIndex[2081606])
      const-val yret[2081617]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2081619 'move' yret[2081617] _yieldedIndex[2081606])
      const-val _yieldedIndex[2081641]:int(64)[13] "temp"
      (2081965 'move' _yieldedIndex[2081641] _yieldedIndex[2081606])
      const-val probe[2081643]:int(64)[13] "const" "index var" "insert auto destroy"
      (2081645 'move' probe[2081643] _yieldedIndex[2081641])
      const-val call_tmp[2081648]:uint(64)[115] "dead at end of block" "maybe param" "temp"
      const-val call_tmp[2231948]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231950 'move' call_tmp[2231948](2231952 'cast' uint(64)[115] _yieldedIndex[2081641]))
      (2081650 'move' call_tmp[2081648] call_tmp[2231948])
      const-val uprobe[2081655]:uint(64)[115] "dead at end of block" "insert auto destroy"
      (2081657 'move' uprobe[2081655] call_tmp[2081648])
      const-val call_tmp[2081660]:uint(64)[115] "dead at end of block" "maybe param" "temp"
      const-val numSlots[2081662]:int(64)[13] "temp"
      (2081664 'move' numSlots[2081662](2081666 '.v' _iterator[1497067] F2_numSlots[2162911]))
      const-val call_tmp[2231958]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231960 'move' call_tmp[2231958](2231962 'cast' uint(64)[115] numSlots[2081662]))
      (2081669 'move' call_tmp[2081660] call_tmp[2231958])
      const-val n[2081674]:uint(64)[115] "dead at end of block" "insert auto destroy"
      (2081676 'move' n[2081674] call_tmp[2081660])
      const-val yret[2081679]:int(64)[13] "dead after last mention" "YVV" "temp"
      const-val call_tmp[2081681]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2423836]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2423838 'move' call_tmp[2423836](2423840 '*' call_tmp[2081648] call_tmp[2081648]))
      (2081683 'move' call_tmp[2081681] call_tmp[2423836])
      const-val call_tmp[2081688]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2334398]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2334400 'move' call_tmp[2334398](2334402 '+' baseSlot[2014684] call_tmp[2081681]))
      (2081690 'move' call_tmp[2081688] call_tmp[2334398])
      const-val call_tmp[2081696]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2335317]:int(64)[13] "temp"
      (2335319 'move' inlineImm[2335317] 0)
      const-val call_tmp[2335322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335324 'move' call_tmp[2335322](2335326 '<' 0 0))
      const-val call_tmp[2335329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335331 'move' call_tmp[2335329](2335333 '!' call_tmp[2335322]))
      val tmp[2335335]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2335329]
      {
        const-val call_tmp[2335339]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335341 'move' call_tmp[2335339](2335343 'cast' uint(64)[115] inlineImm[2335317]))
        const-val call_tmp[2335346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335348 'move' call_tmp[2335346](2335350 '==' call_tmp[2081660] call_tmp[2335339]))
        (2335353 'move' tmp[2335335] call_tmp[2335346])
      }
      {
        (2335357 'move' tmp[2335335] 0)
      }
      if tmp[2335335]
      {
        (2335364 call halt[154111] "Attempt to compute a modulus by zero")
      }
      const-val call_tmp[2335367]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335369 'move' call_tmp[2335367](2335371 '%' call_tmp[2081688] call_tmp[2081660]))
      (2081698 'move' call_tmp[2081696] call_tmp[2335367])
      const-val call_tmp[2081704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2302954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2302956 'move' call_tmp[2302954](2302958 'cast' int(64)[13] call_tmp[2081696]))
      (2081706 'move' call_tmp[2081704] call_tmp[2302954])
      (2081711 'move' yret[2081679] call_tmp[2081704])
      const-val _yieldedIndex[2081714]:int(64)[13] "temp"
      (2081716 'move' _yieldedIndex[2081714] call_tmp[2081704])
      const-val slotNum[2081720]:int(64)[13] "const" "index var" "insert auto destroy"
      (2081722 'move' slotNum[2081720] _yieldedIndex[2081714])
      ref call_tmp[2081726]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "maybe param" "temp"
      const-ref _this_tmp_[2081728]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "temp"
      ref call_tmp[2401663]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
      (2401665 'move' call_tmp[2401663](2401667 '.' this[1497025] table[1208901]))
      (2081730 'move' _this_tmp_[2081728] call_tmp[2401663])
      val coerce_tmp[2081735]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2081737 'move' coerce_tmp[2081735](2081739 'deref' _this_tmp_[2081728]))
      ref call_tmp[2403054]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
      (2403056 'move' call_tmp[2403054](2403058 'array_get' coerce_tmp[2081735] slotNum[2081720]))
      (2081741 'move' call_tmp[2081726] call_tmp[2403054])
      const-ref call_tmp[2081747]:chpl__hash_status[200461] "dead at end of block" "maybe param" "temp"
      ref call_tmp[2466910]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
      (2466912 'move' call_tmp[2466910](2466914 '.' call_tmp[2081726] status[1208952]))
      (2081749 'move' call_tmp[2081747] call_tmp[2466910])
      const-val slotStatus[2081754]:chpl__hash_status[200461] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2081756]:chpl__hash_status[200461] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2081758 'move' coerce_tmp[2081756](2081760 'deref' call_tmp[2081747]))
      (2081762 '=' slotStatus[2081754] coerce_tmp[2081756])
      (2081765 'noop')
      const-val call_tmp[2081766]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2418770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2418772 'move' call_tmp[2418770](2418774 '==' slotStatus[2081754] empty[200455]))
      (2081768 'move' call_tmp[2081766] call_tmp[2418770])
      const-val call_tmp[2081774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2081776 'move' call_tmp[2081774] call_tmp[2081766])
      if call_tmp[2081774]
      {
        const-val call_tmp[2081781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        val inlineImm[2235285]:int(64)[13] "temp"
        (2235288 'move' inlineImm[2235285] -1)
        const-val call_tmp[2235291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2235293 'move' call_tmp[2235291](2235295 '==' firstOpen[1497058] inlineImm[2235285]))
        (2081783 'move' call_tmp[2081781] call_tmp[2235291])
        const-val call_tmp[2081789]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2081791 'move' call_tmp[2081789] call_tmp[2081781])
        if call_tmp[2081789]
        {
          ref i_a[2238704]:int(64)[13] "temp"
          (2238708 'move' i_a[2238704](2238706 'set reference' firstOpen[1497058]))
          (2238711 '=' i_a[2238704] slotNum[2081720])
        }
        const-val call_tmp[2081801]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[2081803]:(bool,int(64))[1265321] "temp"
        val inlineImm[2424275]:bool[10] "temp"
        (2424278 'move' inlineImm[2424275] 0)
        ref i__retArg[2424280]:(bool,int(64))[1265321] "temp"
        (2424284 'move' i__retArg[2424280](2424282 'set reference' ret_tmp[2081803]))
        val this[2424287]:(bool,int(64))[1265321] "arg this"
        (2424289 '.=' this[2424287] x0[1265317] inlineImm[2424275])
        (2424293 '.=' this[2424287] x1[1265319] firstOpen[1497058])
        (2424297 '=' i__retArg[2424280] this[2424287])
        (2081810 'move' call_tmp[2081801] ret_tmp[2081803])
        val call_tmp[2081813]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2081815 'move' ret[1497039] call_tmp[2081801])
        const-val call_tmp[2311051]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2311053 'move' call_tmp[2311051](2311055 'cast_to_void_star' _iterator[2081483]))
        (2311058 call chpl_here_free[188127] call_tmp[2311051])
        const-val call_tmp[2406158]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2406160 'move' call_tmp[2406158](2406162 'cast_to_void_star' _iterator[2014709]))
        (2406165 call chpl_here_free[188127] call_tmp[2406158])
        const-val call_tmp[2466872]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
        (2466874 'move' call_tmp[2466872](2466876 'cast_to_void_star' _iterator[1497067]))
        (2466879 call chpl_here_free[188127] call_tmp[2466872])
        gotoReturn _end__findSlot[1497352] _end__findSlot[1497352]
      }
      {
        const-val call_tmp[2081827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val call_tmp[2418780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418782 'move' call_tmp[2418780](2418784 '==' slotStatus[2081754] full[200457]))
        (2081829 'move' call_tmp[2081827] call_tmp[2418780])
        const-val call_tmp[2081835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2081837 'move' call_tmp[2081835] call_tmp[2081827])
        if call_tmp[2081835]
        {
          ref call_tmp[2081842]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          const-ref _this_tmp_[2081844]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "temp"
          ref call_tmp[2401673]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
          (2401675 'move' call_tmp[2401673](2401677 '.' this[1497025] table[1208901]))
          (2081846 'move' _this_tmp_[2081844] call_tmp[2401673])
          val coerce_tmp[2081851]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2081853 'move' coerce_tmp[2081851](2081855 'deref' _this_tmp_[2081844]))
          ref call_tmp[2403064]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          (2403066 'move' call_tmp[2403064](2403068 'array_get' coerce_tmp[2081851] slotNum[2081720]))
          (2081857 'move' call_tmp[2081842] call_tmp[2403064])
          const-ref call_tmp[2081863]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2466954]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          (2466956 'move' call_tmp[2466954](2466958 '.' call_tmp[2081842] key[1208956]))
          (2081865 'move' call_tmp[2081863] call_tmp[2466954])
          const-val call_tmp[2081870]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[2081872]:BaseDom[146767] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2081874 'move' coerce_tmp[2081872](2081876 'deref' call_tmp[2081863]))
          val coerce_tmp[2081878]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2081880 'move' coerce_tmp[2081878](2081882 'cast' object[22] coerce_tmp[2081872]))
          val coerce_tmp[2081885]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2081887 'move' coerce_tmp[2081885](2081889 'cast' object[22] key[1497032]))
          const-val call_tmp[2226827]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2226829 'move' call_tmp[2226827](2226831 'ptr_eq' coerce_tmp[2081878] coerce_tmp[2081885]))
          (2081892 'move' call_tmp[2081870] call_tmp[2226827])
          const-val call_tmp[2081898]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2081900 'move' call_tmp[2081898] call_tmp[2081870])
          if call_tmp[2081898]
          {
            const-val call_tmp[2081905]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
            const-val ret_tmp[2081907]:(bool,int(64))[1265321] "temp"
            val inlineImm[2424302]:bool[10] "temp"
            (2424305 'move' inlineImm[2424302] 1)
            ref i__retArg[2424307]:(bool,int(64))[1265321] "temp"
            (2424311 'move' i__retArg[2424307](2424309 'set reference' ret_tmp[2081907]))
            val this[2424314]:(bool,int(64))[1265321] "arg this"
            (2424316 '.=' this[2424314] x0[1265317] inlineImm[2424302])
            (2424320 '.=' this[2424314] x1[1265319] slotNum[2081720])
            (2424324 '=' i__retArg[2424307] this[2424314])
            (2081914 'move' call_tmp[2081905] ret_tmp[2081907])
            val call_tmp[2081917]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (2081919 'move' ret[1497039] call_tmp[2081905])
            const-val call_tmp[2311063]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2311065 'move' call_tmp[2311063](2311067 'cast_to_void_star' _iterator[2081483]))
            (2311070 call chpl_here_free[188127] call_tmp[2311063])
            const-val call_tmp[2406170]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2406172 'move' call_tmp[2406170](2406174 'cast_to_void_star' _iterator[2014709]))
            (2406177 call chpl_here_free[188127] call_tmp[2406170])
            const-val call_tmp[2466884]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
            (2466886 'move' call_tmp[2466884](2466888 'cast_to_void_star' _iterator[1497067]))
            (2466891 call chpl_here_free[188127] call_tmp[2466884])
            gotoReturn _end__findSlot[1497352] _end__findSlot[1497352]
          }
        }
        {
          const-val call_tmp[2081932]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val inlineImm[2235300]:int(64)[13] "temp"
          (2235303 'move' inlineImm[2235300] -1)
          const-val call_tmp[2235306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2235308 'move' call_tmp[2235306](2235310 '==' firstOpen[1497058] inlineImm[2235300]))
          (2081934 'move' call_tmp[2081932] call_tmp[2235306])
          const-val call_tmp[2081940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2081942 'move' call_tmp[2081940] call_tmp[2081932])
          if call_tmp[2081940]
          {
            ref i_a[2238716]:int(64)[13] "temp"
            (2238720 'move' i_a[2238716](2238718 'set reference' firstOpen[1497058]))
            (2238723 '=' i_a[2238716] slotNum[2081720])
          }
        }
      }
      {
        const-val low[2081574]:int(64)[13] "temp"
        (2081576 'move' low[2081574](2081578 '.v' _iterator[2081483] F0_low[2115192]))
        (2081581 '=' i[2081509] low[2081574])
      }
      {
        const-val high[2081585]:int(64)[13] "temp"
        (2081587 'move' high[2081585](2081589 '.v' _iterator[2081483] F1_high[2115196]))
        (2081592 '<=' i[2081509] high[2081585])
      }
      {
        val call_tmp[2081596]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2081598 '+=' i[2081509] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2081632]
    const-val call_tmp[2311039]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2311041 'move' call_tmp[2311039](2311043 'cast_to_void_star' _iterator[2081483]))
    (2311046 call chpl_here_free[188127] call_tmp[2311039])
    label _endchpl_direct_range_iter[2081637]
    const-val call_tmp[2406110]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406112 'move' call_tmp[2406110](2406114 'cast_to_void_star' _iterator[2014709]))
    (2406117 call chpl_here_free[188127] call_tmp[2406110])
    label _end__lookForSlots[2014815]
    const-val call_tmp[2466860]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2466862 'move' call_tmp[2466860](2466864 'cast_to_void_star' _iterator[1497067]))
    (2466867 call chpl_here_free[188127] call_tmp[2466860])
    const-val call_tmp[1497331]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913108]:(bool,int(64))[1265321] "temp"
    val inlineImm[2424108]:bool[10] "temp"
    (2424111 'move' inlineImm[2424108] 0)
    val inlineImm[2424113]:int(64)[13] "temp"
    (2424116 'move' inlineImm[2424113] -1)
    ref i__retArg[2424118]:(bool,int(64))[1265321] "temp"
    (2424122 'move' i__retArg[2424118](2424120 'set reference' ret_tmp[1913108]))
    val this[2424125]:(bool,int(64))[1265321] "arg this"
    (2424127 '.=' this[2424125] x0[1265317] inlineImm[2424108])
    (2424131 '.=' this[2424125] x1[1265319] inlineImm[2424113])
    (2424135 '=' i__retArg[2424118] this[2424125])
    (1913111 'move' call_tmp[1497331] ret_tmp[1913108])
    val call_tmp[1497339]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1498264 'move' ret[1497039] call_tmp[1497331])
    label _end__findSlot[1497352]
    (1916169 '=' _retArg[1916167] ret[1497039])
    (1916171 return _void[55])
  }
  type _ic__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271892] val super[1271893]:object[22] "super class" val more[1271895]:int(64)[13] const-ref F0_this[2117662]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] const-val F1_key[2117666]:BaseArr[149584] const-val F2_numSlots[2117670]:int(64)[13] const F3_baseSlot[2117674]:uint(64)[115] val F4__iterator[2117676]:_ic_chpl_direct_range_iter[1230573] val F5__iterator[2117678]:_ic_chpl_direct_param_stride_range_iter[1103475] val F6_i[2117680]:int(64)[13] val value[2117682]:int(64)[13]
  type _ir__lookForSlots__ref_chpl__hashtable_BaseArr_nothing[1271898] const-ref F0_this[2117664]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] const-val F1_key[2117668]:BaseArr[149584] const-val F2_numSlots[2117672]:int(64)[13]
  type _ic__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497863] val super[1497864]:object[22] "super class" val more[1497866]:int(64)[13] const-ref F0_this[2162903]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] const-val F1_key[2162907]:BaseDom[146767] const-val F2_numSlots[2162911]:int(64)[13] const F3_baseSlot[2162915]:uint(64)[115] val F4__iterator[2162917]:_ic_chpl_direct_range_iter[1230573] val F5__iterator[2162919]:_ic_chpl_direct_param_stride_range_iter[1103475] val F6_i[2162921]:int(64)[13] val value[2162923]:int(64)[13]
  type _ir__lookForSlots__ref_chpl__hashtable_BaseDom_nothing[1497869] const-ref F0_this[2162905]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] const-val F1_key[2162909]:BaseDom[146767] const-val F2_numSlots[2162913]:int(64)[13]
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].findAvailableSlot[1265286](ref arg this[1265290]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg key[1265297]:BaseArr[149584], ref arg _retArg[1912966]:(bool,int(64))[1265321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1265304]:(bool,int(64))[1265321] "dead after last mention" "RVV" "temp"
    val slotNum[1265398]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1265400 'move' slotNum[1265398] -1)
    val foundSlot[1265404]:bool[10] "dead at end of block" "insert auto destroy"
    (1265406 'move' foundSlot[1265404] 0)
    const-ref call_tmp[1265410]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2417949]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2417951 'move' call_tmp[2417949](2417953 '.' this[1265290] tableNumFullSlots[1208589]))
    (1265412 'move' call_tmp[1265410] call_tmp[2417949])
    const-ref call_tmp[1265418]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418033]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418035 'move' call_tmp[2418033](2418037 '.' this[1265290] tableNumDeletedSlots[1208592]))
    (1265420 'move' call_tmp[1265418] call_tmp[2418033])
    const-val call_tmp[1265426]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1265869]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1265873 'move' coerce_tmp[1265869](1265871 'deref' call_tmp[1265410]))
    const-val coerce_tmp[1265875]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1265879 'move' coerce_tmp[1265875](1265877 'deref' call_tmp[1265418]))
    const-val call_tmp[2242216]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2242218 'move' call_tmp[2242216](2242220 '+' coerce_tmp[1265869] coerce_tmp[1265875]))
    (1265428 'move' call_tmp[1265426] call_tmp[2242216])
    const-val call_tmp[1265434]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2236230]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236232 'move' call_tmp[2236230](2236234 '+' call_tmp[1265426] 1))
    (1265436 'move' call_tmp[1265434] call_tmp[2236230])
    const-val call_tmp[1265442]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2340797]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2340799 'move' call_tmp[2340797](2340801 '*' call_tmp[1265434] 2))
    (1265444 'move' call_tmp[1265442] call_tmp[2340797])
    const-ref call_tmp[1265450]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412157]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412159 'move' call_tmp[2412157](2412161 '.' this[1265290] tableSize[1208598]))
    (1265452 'move' call_tmp[1265450] call_tmp[2412157])
    const-val call_tmp[1265458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1265901]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1265905 'move' coerce_tmp[1265901](1265903 'deref' call_tmp[1265450]))
    const-val call_tmp[2240523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240525 'move' call_tmp[2240523](2240527 '>' call_tmp[1265442] coerce_tmp[1265901]))
    (1265460 'move' call_tmp[1265458] call_tmp[2240523])
    const-val call_tmp[1265466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1265468 'move' call_tmp[1265466] call_tmp[1265458])
    if call_tmp[1265466]
    {
      (1265479 call resize[1265908] this[1265290] 1)
    }
    const-val tmp[1265483]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[1265485]:bool[10] "dead after last mention" "maybe param" "temp"
    (1265487 'move' tmp[1265485](1265489 'set reference' foundSlot[1265404]))
    ref tmp[1265491]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1265493 'move' tmp[1265491](1265495 'set reference' slotNum[1265398]))
    const-val ret_tmp[1912984]:(bool,int(64))[1265321] "temp"
    (1265503 call _findSlot[1267471] this[1265290] key[1265297] ret_tmp[1912984])
    (1912987 'move' tmp[1265483] ret_tmp[1912984])
    const-ref call_tmp[1265536]:bool[10] "dead after last mention" "maybe param" "temp"
    (1265538 'move' call_tmp[1265536](1278263 '.' tmp[1265483] x0[1265317]))
    const-val coerce_tmp[1278266]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1278270 'move' coerce_tmp[1278266](1278268 'deref' call_tmp[1265536]))
    (2251524 '=' tmp[1265485] coerce_tmp[1278266])
    const-ref call_tmp[1265547]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1265549 'move' call_tmp[1265547](1278275 '.' tmp[1265483] x1[1265319]))
    const-val coerce_tmp[1278278]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1278282 'move' coerce_tmp[1278278](1278280 'deref' call_tmp[1265547]))
    (2237273 '=' tmp[1265491] coerce_tmp[1278278])
    ref i_x[2518865]:(bool,int(64))[1265321] "temp"
    (2518869 'move' i_x[2518865](2518867 'set reference' tmp[1265483]))
    const-val call_tmp[1265561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2335510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335512 'move' call_tmp[2335510](2335514 '>=' slotNum[1265398] 0))
    (1265563 'move' call_tmp[1265561] call_tmp[2335510])
    const-val call_tmp[1265569]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1265571 'move' call_tmp[1265569] call_tmp[1265561])
    if call_tmp[1265569]
    {
      const-val call_tmp[1265578]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1913048]:(bool,int(64))[1265321] "temp"
      ref i__retArg[2423956]:(bool,int(64))[1265321] "temp"
      (2423960 'move' i__retArg[2423956](2423958 'set reference' ret_tmp[1913048]))
      val this[2423963]:(bool,int(64))[1265321] "arg this"
      (2423965 '.=' this[2423963] x0[1265317] foundSlot[1265404])
      (2423969 '.=' this[2423963] x1[1265319] slotNum[1265398])
      (2423973 '=' i__retArg[2423956] this[2423963])
      (1913051 'move' call_tmp[1265578] ret_tmp[1913048])
      val call_tmp[1265586]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1285794 'move' ret[1265304] call_tmp[1265578])
      gotoReturn _end_findAvailableSlot[1265806] _end_findAvailableSlot[1265806]
    }
    {
      const-ref call_tmp[1265605]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418121]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2418123 'move' call_tmp[2418121](2418125 '.' this[1265290] tableSizeNum[1208595]))
      (1265607 'move' call_tmp[1265605] call_tmp[2418121])
      const-ref call_tmp[1265613]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412237]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2412239 'move' call_tmp[2412237](2412241 '.' this[1265290] tableSize[1208598]))
      (1265615 'move' call_tmp[1265613] call_tmp[2412237])
      const-val coerce_tmp[1278291]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278295 'move' coerce_tmp[1278291](1278293 'deref' call_tmp[1265605]))
      const-val coerce_tmp[1278297]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278301 'move' coerce_tmp[1278297](1278299 'deref' call_tmp[1265613]))
      (1265625 call rehash[1266275] this[1265290] coerce_tmp[1278291] coerce_tmp[1278297])
      const-val tmp[1265629]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      ref tmp[1265631]:bool[10] "dead after last mention" "maybe param" "temp"
      (1265633 'move' tmp[1265631](1265635 'set reference' foundSlot[1265404]))
      ref tmp[1265637]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (1265639 'move' tmp[1265637](1265641 'set reference' slotNum[1265398]))
      const-val ret_tmp[1912990]:(bool,int(64))[1265321] "temp"
      (1265649 call _findSlot[1267471] this[1265290] key[1265297] ret_tmp[1912990])
      (1912993 'move' tmp[1265629] ret_tmp[1912990])
      const-ref call_tmp[1265682]:bool[10] "dead after last mention" "maybe param" "temp"
      (1265684 'move' call_tmp[1265682](1278313 '.' tmp[1265629] x0[1265317]))
      const-val coerce_tmp[1278316]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278320 'move' coerce_tmp[1278316](1278318 'deref' call_tmp[1265682]))
      (2251530 '=' tmp[1265631] coerce_tmp[1278316])
      const-ref call_tmp[1265693]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (1265695 'move' call_tmp[1265693](1278325 '.' tmp[1265629] x1[1265319]))
      const-val coerce_tmp[1278328]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278332 'move' coerce_tmp[1278328](1278330 'deref' call_tmp[1265693]))
      (2237279 '=' tmp[1265637] coerce_tmp[1278328])
      ref i_x[2518874]:(bool,int(64))[1265321] "temp"
      (2518878 'move' i_x[2518874](2518876 'set reference' tmp[1265629]))
      const-val call_tmp[1265707]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2230658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230660 'move' call_tmp[2230658](2230662 '<' slotNum[1265398] 0))
      (1265709 'move' call_tmp[1265707] call_tmp[2230658])
      const-val call_tmp[1265715]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1265717 'move' call_tmp[1265715] call_tmp[1265707])
      if call_tmp[1265715]
      {
        const-ref call_tmp[1265724]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2417979]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2417981 'move' call_tmp[2417979](2417983 '.' this[1265290] tableNumFullSlots[1208589]))
        (1265726 'move' call_tmp[1265724] call_tmp[2417979])
        const-ref call_tmp[1265732]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2412247]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2412249 'move' call_tmp[2412247](2412251 '.' this[1265290] tableSize[1208598]))
        (1265734 'move' call_tmp[1265732] call_tmp[2412247])
        const-val coerce_tmp[1278475]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1278479 'move' coerce_tmp[1278475](1278477 'deref' call_tmp[1265724]))
        const-val coerce_tmp[1278481]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1278485 'move' coerce_tmp[1278481](1278483 'deref' call_tmp[1265732]))
        (1265741 call halt[1278411] "couldn't add key -- " coerce_tmp[1278475] " / " coerce_tmp[1278481] " taken")
        const-val call_tmp[1265755]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1913054]:(bool,int(64))[1265321] "temp"
        val inlineImm[2423978]:bool[10] "temp"
        (2423981 'move' inlineImm[2423978] 0)
        val inlineImm[2423983]:int(64)[13] "temp"
        (2423986 'move' inlineImm[2423983] -1)
        ref i__retArg[2423988]:(bool,int(64))[1265321] "temp"
        (2423992 'move' i__retArg[2423988](2423990 'set reference' ret_tmp[1913054]))
        val this[2423995]:(bool,int(64))[1265321] "arg this"
        (2423997 '.=' this[2423995] x0[1265317] inlineImm[2423978])
        (2424001 '.=' this[2423995] x1[1265319] inlineImm[2423983])
        (2424005 '=' i__retArg[2423988] this[2423995])
        (1913057 'move' call_tmp[1265755] ret_tmp[1913054])
        val call_tmp[1265763]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (1285797 'move' ret[1265304] call_tmp[1265755])
        gotoReturn _end_findAvailableSlot[1265806] _end_findAvailableSlot[1265806]
      }
      const-val call_tmp[1265779]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1913060]:(bool,int(64))[1265321] "temp"
      ref i__retArg[2424010]:(bool,int(64))[1265321] "temp"
      (2424014 'move' i__retArg[2424010](2424012 'set reference' ret_tmp[1913060]))
      val this[2424017]:(bool,int(64))[1265321] "arg this"
      (2424019 '.=' this[2424017] x0[1265317] foundSlot[1265404])
      (2424023 '.=' this[2424017] x1[1265319] slotNum[1265398])
      (2424027 '=' i__retArg[2424010] this[2424017])
      (1913063 'move' call_tmp[1265779] ret_tmp[1913060])
      val call_tmp[1265787]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1285800 'move' ret[1265304] call_tmp[1265779])
      gotoReturn _end_findAvailableSlot[1265806] _end_findAvailableSlot[1265806]
    }
    label _end_findAvailableSlot[1265806]
    (1912968 '=' _retArg[1912966] ret[1265304])
    (1912970 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].fillSlot[1285838](ref arg this[1285842]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], ref arg tableEntry[1285865]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660], in arg key[1285872]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1285976]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418630]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    (2418632 'move' call_tmp[2418630](2418634 '.' tableEntry[1285865] status[1208652]))
    (1285978 'move' call_tmp[1285976] call_tmp[2418630])
    const-val call_tmp[1285984]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1286098]:chpl__hash_status[200461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1286102 'move' coerce_tmp[1286098](1286100 'deref' call_tmp[1285976]))
    const-val call_tmp[2418710]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2418712 'move' call_tmp[2418710](2418714 '==' coerce_tmp[1286098] full[200457]))
    (1285986 'move' call_tmp[1285984] call_tmp[2418710])
    const-val call_tmp[1285992]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1285994 'move' call_tmp[1285992] call_tmp[1285984])
    if call_tmp[1285992]
    {
      (1286002 call _deinitSlot[1286105] tableEntry[1285865])
    }
    {
      const-ref call_tmp[1286005]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418640]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
      (2418642 'move' call_tmp[2418640](2418644 '.' tableEntry[1285865] status[1208652]))
      (1286007 'move' call_tmp[1286005] call_tmp[2418640])
      const-val call_tmp[1286013]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1286265]:chpl__hash_status[200461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1286269 'move' coerce_tmp[1286265](1286267 'deref' call_tmp[1286005]))
      const-val call_tmp[2418720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2418722 'move' call_tmp[2418720](2418724 '==' coerce_tmp[1286265] deleted[200459]))
      (1286015 'move' call_tmp[1286013] call_tmp[2418720])
      const-val call_tmp[1286021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1286023 'move' call_tmp[1286021] call_tmp[1286013])
      if call_tmp[1286021]
      {
        ref call_tmp[1286030]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418063]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2418065 'move' call_tmp[2418063](2418067 '.' this[1285842] tableNumDeletedSlots[1208592]))
        (1286032 'move' call_tmp[1286030] call_tmp[2418063])
        val inlineImm[2335624]:int(64)[13] "temp"
        (2335627 'move' inlineImm[2335624] 1)
        (2335630 '-=' call_tmp[1286030] inlineImm[2335624])
      }
      ref call_tmp[1286043]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2417989]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2417991 'move' call_tmp[2417989](2417993 '.' this[1285842] tableNumFullSlots[1208589]))
      (1286045 'move' call_tmp[1286043] call_tmp[2417989])
      val inlineImm[2295710]:int(64)[13] "temp"
      (2295713 'move' inlineImm[2295710] 1)
      (2295716 '+=' call_tmp[1286043] inlineImm[2295710])
    }
    ref call_tmp[1286056]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418650]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    (2418652 'move' call_tmp[2418650](2418654 '.' tableEntry[1285865] status[1208652]))
    (1286058 'move' call_tmp[1286056] call_tmp[2418650])
    (2424359 '=' call_tmp[1286056] full[200457])
    ref call_tmp[1286069]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418804]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
    (2418806 'move' call_tmp[2418804](2418808 '.' tableEntry[1285865] key[1208656]))
    (1286071 'move' call_tmp[1286069] call_tmp[2418804])
    (1286078 call _moveInit[1277770] call_tmp[1286069] key[1285872])
    none[57]
    (1286091 call _moveInit[1277957])
    (1286094 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].fillSlot[1285900](ref arg this[1285904]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg slotNum[1285906]:int(64)[13], in arg key[1285913]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref tableEntry[1285930]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "ref var"
    ref call_tmp[1285932]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[1285961]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "temp"
    ref call_tmp[2412053]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    (2412055 'move' call_tmp[2412053](2412057 '.' this[1285904] table[1208601]))
    (1285963 'move' _this_tmp_[1285961] call_tmp[2412053])
    val coerce_tmp[1285968]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1285972 'move' coerce_tmp[1285968](1285970 'deref' _this_tmp_[1285961]))
    ref call_tmp[2412436]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
    (2412438 'move' call_tmp[2412436](2412440 'array_get' coerce_tmp[1285968] slotNum[1285906]))
    (1285934 'move' call_tmp[1285932] call_tmp[2412436])
    (1285942 'move' tableEntry[1285930] call_tmp[1285932])
    (1285951 call fillSlot[1285838] this[1285904] tableEntry[1285930] key[1285913])
    (1285957 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].findFullSlot[1494526](const  ref arg this[1494530]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg key[1494537]:BaseArr[149584], ref arg _retArg[1916101]:(bool,int(64))[1265321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1494544]:(bool,int(64))[1265321] "dead after last mention" "RVV" "temp"
    val slotNum[1494563]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1494565 'move' slotNum[1494563] -1)
    val foundSlot[1494569]:bool[10] "dead at end of block" "insert auto destroy"
    (1494571 'move' foundSlot[1494569] 0)
    const-val tmp[1494575]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[1494577]:bool[10] "dead after last mention" "maybe param" "temp"
    (1494579 'move' tmp[1494577](1494581 'set reference' foundSlot[1494569]))
    ref tmp[1494583]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1494585 'move' tmp[1494583](1494587 'set reference' slotNum[1494563]))
    const-val ret_tmp[1913002]:(bool,int(64))[1265321] "temp"
    (1494595 call _findSlot[1267471] this[1494530] key[1494537] ret_tmp[1913002])
    (1913005 'move' tmp[1494575] ret_tmp[1913002])
    const-ref call_tmp[1494628]:bool[10] "dead after last mention" "maybe param" "temp"
    (1494630 'move' call_tmp[1494628](1494695 '.' tmp[1494575] x0[1265317]))
    const-val coerce_tmp[1494698]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1494702 'move' coerce_tmp[1494698](1494700 'deref' call_tmp[1494628]))
    (2251723 '=' tmp[1494577] coerce_tmp[1494698])
    const-ref call_tmp[1494639]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1494641 'move' call_tmp[1494639](1494707 '.' tmp[1494575] x1[1265319]))
    const-val coerce_tmp[1494710]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1494714 'move' coerce_tmp[1494710](1494712 'deref' call_tmp[1494639]))
    (2237785 '=' tmp[1494583] coerce_tmp[1494710])
    ref i_x[2518892]:(bool,int(64))[1265321] "temp"
    (2518896 'move' i_x[2518892](2518894 'set reference' tmp[1494575]))
    const-val call_tmp[1494653]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913084]:(bool,int(64))[1265321] "temp"
    ref i__retArg[2424064]:(bool,int(64))[1265321] "temp"
    (2424068 'move' i__retArg[2424064](2424066 'set reference' ret_tmp[1913084]))
    val this[2424071]:(bool,int(64))[1265321] "arg this"
    (2424073 '.=' this[2424071] x0[1265317] foundSlot[1494569])
    (2424077 '.=' this[2424071] x1[1265319] slotNum[1494563])
    (2424081 '=' i__retArg[2424064] this[2424071])
    (1913087 'move' call_tmp[1494653] ret_tmp[1913084])
    val call_tmp[1494661]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1494721 'move' ret[1494544] call_tmp[1494653])
    label _end_findFullSlot[1494679]
    (1916103 '=' _retArg[1916101] ret[1494544])
    (1916105 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].findFullSlot[1496861](const  ref arg this[1496865]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg key[1496872]:BaseDom[146767], ref arg _retArg[1916149]:(bool,int(64))[1265321]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    const-val ret[1496879]:(bool,int(64))[1265321] "dead after last mention" "RVV" "temp"
    val slotNum[1496898]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1496900 'move' slotNum[1496898] -1)
    val foundSlot[1496904]:bool[10] "dead at end of block" "insert auto destroy"
    (1496906 'move' foundSlot[1496904] 0)
    const-val tmp[1496910]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref tmp[1496912]:bool[10] "dead after last mention" "maybe param" "temp"
    (1496914 'move' tmp[1496912](1496916 'set reference' foundSlot[1496904]))
    ref tmp[1496918]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1496920 'move' tmp[1496918](1496922 'set reference' slotNum[1496898]))
    const-val ret_tmp[1916155]:(bool,int(64))[1265321] "temp"
    (1496930 call _findSlot[1497021] this[1496865] key[1496872] ret_tmp[1916155])
    (1916158 'move' tmp[1496910] ret_tmp[1916155])
    const-ref call_tmp[1496963]:bool[10] "dead after last mention" "maybe param" "temp"
    (1496965 'move' call_tmp[1496963](1498274 '.' tmp[1496910] x0[1265317]))
    const-val coerce_tmp[1498277]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1498281 'move' coerce_tmp[1498277](1498279 'deref' call_tmp[1496963]))
    (2251741 '=' tmp[1496912] coerce_tmp[1498277])
    const-ref call_tmp[1496974]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1496976 'move' call_tmp[1496974](1498286 '.' tmp[1496910] x1[1265319]))
    const-val coerce_tmp[1498289]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1498293 'move' coerce_tmp[1498289](1498291 'deref' call_tmp[1496974]))
    (2237791 '=' tmp[1496918] coerce_tmp[1498289])
    ref i_x[2518910]:(bool,int(64))[1265321] "temp"
    (2518914 'move' i_x[2518910](2518912 'set reference' tmp[1496910]))
    const-val call_tmp[1496988]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913090]:(bool,int(64))[1265321] "temp"
    ref i__retArg[2424086]:(bool,int(64))[1265321] "temp"
    (2424090 'move' i__retArg[2424086](2424088 'set reference' ret_tmp[1913090]))
    val this[2424093]:(bool,int(64))[1265321] "arg this"
    (2424095 '.=' this[2424093] x0[1265317] foundSlot[1496904])
    (2424099 '.=' this[2424093] x1[1265319] slotNum[1496898])
    (2424103 '=' i__retArg[2424086] this[2424093])
    (1913093 'move' call_tmp[1496988] ret_tmp[1913090])
    val call_tmp[1496996]:(bool,int(64))[1265321] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1498300 'move' ret[1496879] call_tmp[1496988])
    label _end_findFullSlot[1497014]
    (1916151 '=' _retArg[1916149] ret[1496879])
    (1916153 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].clearSlot[1494813](ref arg this[1494817]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], ref arg tableEntry[1494840]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660], ref arg key[1494847]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[1495079]:BaseArr[149584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    const-ref call_tmp[1494984]:BaseArr[149584] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2418814]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
    (2418816 'move' call_tmp[2418814](2418818 '.' tableEntry[1494840] key[1208656]))
    (1494986 'move' call_tmp[1494984] call_tmp[2418814])
    val call_tmp[1494992]:BaseArr[149584] "dead at end of block" "expr temp" "maybe param" "temp"
    (1494994 'move' call_tmp[1494992](1494997 call _moveToReturn[1277686] call_tmp[1494984]))
    (1495272 'move' _formal_tmp_key[1495079] call_tmp[1494992])
    none[57]
    (1495017 call _moveToReturn[1277881])
    ref call_tmp[1495024]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418670]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    (2418672 'move' call_tmp[2418670](2418674 '.' tableEntry[1494840] status[1208652]))
    (1495026 'move' call_tmp[1495024] call_tmp[2418670])
    (2424365 '=' call_tmp[1495024] deleted[200459])
    ref call_tmp[1495037]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2417999]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418001 'move' call_tmp[2417999](2418003 '.' this[1494817] tableNumFullSlots[1208589]))
    (1495039 'move' call_tmp[1495037] call_tmp[2417999])
    val inlineImm[2335664]:int(64)[13] "temp"
    (2335667 'move' inlineImm[2335664] 1)
    (2335670 '-=' call_tmp[1495037] inlineImm[2335664])
    ref call_tmp[1495050]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418073]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418075 'move' call_tmp[2418073](2418077 '.' this[1494817] tableNumDeletedSlots[1208592]))
    (1495052 'move' call_tmp[1495050] call_tmp[2418073])
    val inlineImm[2295819]:int(64)[13] "temp"
    (2295822 'move' inlineImm[2295819] 1)
    (2295825 '+=' call_tmp[1495050] inlineImm[2295819])
    label _endclearSlot[1495090]
    (1926628 '=' key[1494847] _formal_tmp_key[1495079])
    (1495062 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].clearSlot[1498392](ref arg this[1498396]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], ref arg tableEntry[1498419]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960], ref arg key[1498426]:BaseDom[146767]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[1498658]:BaseDom[146767] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    const-ref call_tmp[1498563]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2466944]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
    (2466946 'move' call_tmp[2466944](2466948 '.' tableEntry[1498419] key[1208956]))
    (1498565 'move' call_tmp[1498563] call_tmp[2466944])
    val call_tmp[1498571]:BaseDom[146767] "dead at end of block" "expr temp" "maybe param" "temp"
    (1498573 'move' call_tmp[1498571](1498576 call _moveToReturn[1498678] call_tmp[1498563]))
    (1498917 'move' _formal_tmp_key[1498658] call_tmp[1498571])
    none[57]
    (1498596 call _moveToReturn[1277881])
    ref call_tmp[1498603]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2466900]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
    (2466902 'move' call_tmp[2466900](2466904 '.' tableEntry[1498419] status[1208952]))
    (1498605 'move' call_tmp[1498603] call_tmp[2466900])
    (2424371 '=' call_tmp[1498603] deleted[200459])
    ref call_tmp[1498616]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2467007]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467009 'move' call_tmp[2467007](2467011 '.' this[1498396] tableNumFullSlots[1208889]))
    (1498618 'move' call_tmp[1498616] call_tmp[2467007])
    val inlineImm[2335675]:int(64)[13] "temp"
    (2335678 'move' inlineImm[2335675] 1)
    (2335681 '-=' call_tmp[1498616] inlineImm[2335675])
    ref call_tmp[1498629]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2467061]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467063 'move' call_tmp[2467061](2467065 '.' this[1498396] tableNumDeletedSlots[1208892]))
    (1498631 'move' call_tmp[1498629] call_tmp[2467061])
    val inlineImm[2295830]:int(64)[13] "temp"
    (2295833 'move' inlineImm[2295830] 1)
    (2295836 '+=' call_tmp[1498629] inlineImm[2295830])
    label _endclearSlot[1498669]
    (1926684 '=' key[1498426] _formal_tmp_key[1498658])
    (1498641 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].clearSlot[1494875](ref arg this[1494879]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg slotNum[1494881]:int(64)[13], ref arg key[1494888]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[1494949]:BaseArr[149584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    ref tableEntry[1494905]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "ref var"
    ref call_tmp[1494907]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[1494969]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "temp"
    ref call_tmp[2412073]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    (2412075 'move' call_tmp[2412073](2412077 '.' this[1494879] table[1208601]))
    (1494971 'move' _this_tmp_[1494969] call_tmp[2412073])
    val coerce_tmp[1494976]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1494980 'move' coerce_tmp[1494976](1494978 'deref' _this_tmp_[1494969]))
    ref call_tmp[2412456]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
    (2412458 'move' call_tmp[2412456](2412460 'array_get' coerce_tmp[1494976] slotNum[1494881]))
    (1494909 'move' call_tmp[1494907] call_tmp[2412456])
    (1494917 'move' tableEntry[1494905] call_tmp[1494907])
    val _formal_tmp_out_key[1495064]:BaseArr[149584] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (1494926 call clearSlot[1494813] this[1494879] tableEntry[1494905] _formal_tmp_out_key[1495064])
    (1926631 '=' _formal_tmp_key[1494949] _formal_tmp_out_key[1495064])
    (1495284 'noop')
    label _endclearSlot[1494960]
    (1926634 '=' key[1494888] _formal_tmp_key[1494949])
    (1494932 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].clearSlot[1498454](ref arg this[1498458]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg slotNum[1498460]:int(64)[13], ref arg key[1498467]:BaseDom[146767]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    val _formal_tmp_key[1498528]:BaseDom[146767] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "split inited" "temp"
    ref tableEntry[1498484]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "ref var"
    ref call_tmp[1498486]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "maybe param" "temp"
    const-ref _this_tmp_[1498548]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "temp"
    ref call_tmp[2401613]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    (2401615 'move' call_tmp[2401613](2401617 '.' this[1498458] table[1208901]))
    (1498550 'move' _this_tmp_[1498548] call_tmp[2401613])
    val coerce_tmp[1498555]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1498559 'move' coerce_tmp[1498555](1498557 'deref' _this_tmp_[1498548]))
    ref call_tmp[2403024]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
    (2403026 'move' call_tmp[2403024](2403028 'array_get' coerce_tmp[1498555] slotNum[1498460]))
    (1498488 'move' call_tmp[1498486] call_tmp[2403024])
    (1498496 'move' tableEntry[1498484] call_tmp[1498486])
    val _formal_tmp_out_key[1498643]:BaseDom[146767] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (1498505 call clearSlot[1498392] this[1498458] tableEntry[1498484] _formal_tmp_out_key[1498643])
    (1926687 '=' _formal_tmp_key[1498528] _formal_tmp_out_key[1498643])
    (1498929 'noop')
    label _endclearSlot[1498539]
    (1926690 '=' key[1498467] _formal_tmp_key[1498528])
    (1498511 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].maybeShrinkAfterRemove[1495297](ref arg this[1495301]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1495307]:bool[10] "dead after last mention" "maybe param" "temp"
    const-ref call_tmp[1495309]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418009]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418011 'move' call_tmp[2418009](2418013 '.' this[1495301] tableNumFullSlots[1208589]))
    (1495311 'move' call_tmp[1495309] call_tmp[2418009])
    const-val call_tmp[1495317]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1495457]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1495461 'move' coerce_tmp[1495457](1495459 'deref' call_tmp[1495309]))
    const-val call_tmp[2466276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2466278 'move' call_tmp[2466276](2466280 '*' coerce_tmp[1495457] 8))
    (1495319 'move' call_tmp[1495317] call_tmp[2466276])
    const-ref call_tmp[1495325]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412257]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412259 'move' call_tmp[2412257](2412261 '.' this[1495301] tableSize[1208598]))
    (1495327 'move' call_tmp[1495325] call_tmp[2412257])
    const-val coerce_tmp[1495465]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1495469 'move' coerce_tmp[1495465](1495467 'deref' call_tmp[1495325]))
    const-val call_tmp[2244878]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2244880 'move' call_tmp[2244878](2244882 '<' call_tmp[1495317] coerce_tmp[1495465]))
    (1495333 'move' tmp[1495307] call_tmp[2244878])
    val tmp[1495352]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1495354]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1495356]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1495358 'move' call_tmp[1495356] tmp[1495307])
    (1495363 'move' tmp[1495354] call_tmp[1495356])
    if tmp[1495354]
    {
      const-val tmp[1495370]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[1495372]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418131]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2418133 'move' call_tmp[2418131](2418135 '.' this[1495301] tableSizeNum[1208595]))
      (1495374 'move' call_tmp[1495372] call_tmp[2418131])
      const-val call_tmp[1495380]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1495476]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1495480 'move' coerce_tmp[1495476](1495478 'deref' call_tmp[1495372]))
      val inlineImm[2240882]:int(64)[13] "temp"
      (2240885 'move' inlineImm[2240882] 0)
      const-val call_tmp[2240888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240890 'move' call_tmp[2240888](2240892 '>' coerce_tmp[1495476] inlineImm[2240882]))
      (1495382 'move' call_tmp[1495380] call_tmp[2240888])
      (1495388 'move' tmp[1495370] call_tmp[1495380])
      (1495393 'move' tmp[1495352] tmp[1495370])
    }
    {
      (1495399 'move' tmp[1495352] 0)
    }
    const-val call_tmp[1495405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1495407 'move' call_tmp[1495405] tmp[1495352])
    if call_tmp[1495405]
    {
      (1495418 call resize[1265908] this[1495301] 0)
    }
    (1495422 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].maybeShrinkAfterRemove[1498942](ref arg this[1498946]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-val tmp[1498952]:bool[10] "dead after last mention" "maybe param" "temp"
    const-ref call_tmp[1498954]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2467017]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467019 'move' call_tmp[2467017](2467021 '.' this[1498946] tableNumFullSlots[1208889]))
    (1498956 'move' call_tmp[1498954] call_tmp[2467017])
    const-val call_tmp[1498962]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1499071]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1499075 'move' coerce_tmp[1499071](1499073 'deref' call_tmp[1498954]))
    const-val call_tmp[2466286]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2466288 'move' call_tmp[2466286](2466290 '*' coerce_tmp[1499071] 8))
    (1498964 'move' call_tmp[1498962] call_tmp[2466286])
    const-ref call_tmp[1498970]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401717]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2401719 'move' call_tmp[2401717](2401721 '.' this[1498946] tableSize[1208898]))
    (1498972 'move' call_tmp[1498970] call_tmp[2401717])
    const-val coerce_tmp[1499079]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1499083 'move' coerce_tmp[1499079](1499081 'deref' call_tmp[1498970]))
    const-val call_tmp[2244888]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2244890 'move' call_tmp[2244888](2244892 '<' call_tmp[1498962] coerce_tmp[1499079]))
    (1498978 'move' tmp[1498952] call_tmp[2244888])
    val tmp[1498997]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1498999]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1499001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499003 'move' call_tmp[1499001] tmp[1498952])
    (1499008 'move' tmp[1498999] call_tmp[1499001])
    if tmp[1498999]
    {
      const-val tmp[1499015]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[1499017]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467095]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2467097 'move' call_tmp[2467095](2467099 '.' this[1498946] tableSizeNum[1208895]))
      (1499019 'move' call_tmp[1499017] call_tmp[2467095])
      const-val call_tmp[1499025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1499117]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1499121 'move' coerce_tmp[1499117](1499119 'deref' call_tmp[1499017]))
      val inlineImm[2240897]:int(64)[13] "temp"
      (2240900 'move' inlineImm[2240897] 0)
      const-val call_tmp[2240903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240905 'move' call_tmp[2240903](2240907 '>' coerce_tmp[1499117] inlineImm[2240897]))
      (1499027 'move' call_tmp[1499025] call_tmp[2240903])
      (1499033 'move' tmp[1499015] call_tmp[1499025])
      (1499038 'move' tmp[1498997] tmp[1499015])
    }
    {
      (1499044 'move' tmp[1498997] 0)
    }
    const-val call_tmp[1499050]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499052 'move' call_tmp[1499050] tmp[1498997])
    if call_tmp[1499050]
    {
      (1499063 call resize[1499124] this[1498946] 0)
    }
    (1499067 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].allocateTable[1218663](const  ref arg this[1218667]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg size[1218669]:int(64)[13]) : _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1218671]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1218679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2233370]:int(64)[13] "temp"
    (2233373 'move' inlineImm[2233370] 0)
    const-val call_tmp[2233376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233378 'move' call_tmp[2233376](2233380 '==' size[1218669] inlineImm[2233370]))
    (1218681 'move' call_tmp[1218679] call_tmp[2233376])
    const-val call_tmp[1218687]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1218689 'move' call_tmp[1218687] call_tmp[1218679])
    if call_tmp[1218687]
    {
      (1218696 'move' ret[1218671](1242928 'cast' _ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] nil[44]))
      gotoReturn _end_allocateTable[1218742] _end_allocateTable[1218742]
    }
    {
      val call_tmp[1218703]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1218719]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1218727]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "expr temp" "maybe param" "temp"
      (1218729 'move' call_tmp[1218727](1218732 call _allocateData[1218870] size[1218669]))
      (1218735 'move' ret[1218671] call_tmp[1218727])
      gotoReturn _end_allocateTable[1218742] _end_allocateTable[1218742]
    }
    label _end_allocateTable[1218742]
    (1218744 return ret[1218671])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].allocateTable[1248085](const  ref arg this[1248089]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg size[1248091]:int(64)[13]) : _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "instantiated generic" "invisible fn" "method" "primary method" "resolved"
  {
    val ret[1248093]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1248101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2233485]:int(64)[13] "temp"
    (2233488 'move' inlineImm[2233485] 0)
    const-val call_tmp[2233491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233493 'move' call_tmp[2233491](2233495 '==' size[1248091] inlineImm[2233485]))
    (1248103 'move' call_tmp[1248101] call_tmp[2233491])
    const-val call_tmp[1248109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1248111 'move' call_tmp[1248109] call_tmp[1248101])
    if call_tmp[1248109]
    {
      (1248118 'move' ret[1248093](1250896 'cast' _ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] nil[44]))
      gotoReturn _end_allocateTable[1248164] _end_allocateTable[1248164]
    }
    {
      val call_tmp[1248125]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1248141]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1248149]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "expr temp" "maybe param" "temp"
      (1248151 'move' call_tmp[1248149](1248154 call _allocateData[1248292] size[1248091]))
      (1248157 'move' ret[1248093] call_tmp[1248149])
      gotoReturn _end_allocateTable[1248164] _end_allocateTable[1248164]
    }
    label _end_allocateTable[1248164]
    (1248166 return ret[1248093])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].rehash[1266275](ref arg this[1266279]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg newSizeNum[1266281]:int(64)[13], const in arg newSize[1266283]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1266289]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2412167]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412169 'move' call_tmp[2412167](2412171 '.' this[1266279] tableSize[1208598]))
    (1266291 'move' call_tmp[1266289] call_tmp[2412167])
    const-val oldSize[1266297]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1267014]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1267018 'move' coerce_tmp[1267014](1267016 'deref' call_tmp[1266289]))
    (1924785 '=' oldSize[1266297] coerce_tmp[1267014])
    (1266299 'noop')
    const-ref call_tmp[1266303]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2412023]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
    (2412025 'move' call_tmp[2412023](2412027 '.' this[1266279] table[1208601]))
    (1266305 'move' call_tmp[1266303] call_tmp[2412023])
    val oldTable[1266311]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1267024]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1267028 'move' coerce_tmp[1267024](1267026 'deref' call_tmp[1266303]))
    (1924788 '=' oldTable[1266311] coerce_tmp[1267024])
    (1266313 'noop')
    ref call_tmp[1266317]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418111]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418113 'move' call_tmp[2418111](2418115 '.' this[1266279] tableSizeNum[1208595]))
    (1266319 'move' call_tmp[1266317] call_tmp[2418111])
    (2237239 '=' call_tmp[1266317] newSizeNum[1266281])
    ref call_tmp[1266330]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2412177]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2412179 'move' call_tmp[2412177](2412181 '.' this[1266279] tableSize[1208598]))
    (1266332 'move' call_tmp[1266330] call_tmp[2412177])
    (2237245 '=' call_tmp[1266330] newSize[1266283])
    const-ref call_tmp[1266343]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2417969]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2417971 'move' call_tmp[2417969](2417973 '.' this[1266279] tableNumFullSlots[1208589]))
    (1266345 'move' call_tmp[1266343] call_tmp[2417969])
    const-val entries[1266351]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1267038]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1267042 'move' coerce_tmp[1267038](1267040 'deref' call_tmp[1266343]))
    (1924791 '=' entries[1266351] coerce_tmp[1267038])
    (1266353 'noop')
    const-val call_tmp[1266357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2240557]:int(64)[13] "temp"
    (2240560 'move' inlineImm[2240557] 0)
    const-val call_tmp[2240563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240565 'move' call_tmp[2240563](2240567 '>' entries[1266351] inlineImm[2240557]))
    (1266359 'move' call_tmp[1266357] call_tmp[2240563])
    const-val call_tmp[1266365]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1266367 'move' call_tmp[1266365] call_tmp[1266357])
    if call_tmp[1266365]
    {
      const-val call_tmp[1266374]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2233560]:int(64)[13] "temp"
      (2233563 'move' inlineImm[2233560] 0)
      const-val call_tmp[2233566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2233568 'move' call_tmp[2233566](2233570 '==' newSize[1266283] inlineImm[2233560]))
      (1266376 'move' call_tmp[1266374] call_tmp[2233566])
      const-val call_tmp[1266382]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1266384 'move' call_tmp[1266382] call_tmp[1266374])
      if call_tmp[1266382]
      {
        (1266392 call halt[154111] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[1266395]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412033]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
      (2412035 'move' call_tmp[2412033](2412037 '.' this[1266279] table[1208601]))
      (1266397 'move' call_tmp[1266395] call_tmp[2412033])
      const-ref call_tmp[1266403]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412187]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2412189 'move' call_tmp[2412187](2412191 '.' this[1266279] tableSize[1208598]))
      (1266405 'move' call_tmp[1266403] call_tmp[2412187])
      val call_tmp[1266411]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1267050]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1267054 'move' coerce_tmp[1267050](1267052 'deref' call_tmp[1266403]))
      (1266413 'move' call_tmp[1266411](1266419 call allocateTable[1248085] this[1266279] coerce_tmp[1267050]))
      (2412413 '=' call_tmp[1266395] call_tmp[1266411])
      const-ref call_tmp[1266426]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418142]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2418144 'move' call_tmp[2418142](2418146 '.' this[1266279] rehashHelpers[1208609]))
      (1266428 'move' call_tmp[1266426] call_tmp[2418142])
      const-val call_tmp[1266434]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1267086]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1267092 'move' coerce_tmp[1267086](1267088 call borrow[1218144] call_tmp[1266426]))
      val coerce_tmp[1267095]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1267101 'move' coerce_tmp[1267095](1267097 'cast' object[22] coerce_tmp[1267086]))
      const-val call_tmp[2226997]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226999 'move' call_tmp[2226997](2227001 'ptr_neq' coerce_tmp[1267095] nil[44]))
      (1266436 'move' call_tmp[1266434] call_tmp[2226997])
      const-val call_tmp[1266442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1266444 'move' call_tmp[1266442] call_tmp[1266434])
      if call_tmp[1266442]
      {
        const-ref call_tmp[1266451]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418152]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2418154 'move' call_tmp[2418152](2418156 '.' this[1266279] rehashHelpers[1208609]))
        (1266453 'move' call_tmp[1266451] call_tmp[2418152])
        val call_tmp[1266459]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418256]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418258 'move' coerce_tmp[2418256](2418260 '.v' call_tmp[1266451] chpl_p[1208751]))
        val coerce_tmp[2418263]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418265 'move' coerce_tmp[2418263](2418267 'cast' object[22] coerce_tmp[2418256]))
        const-val call_tmp[2418270]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418272 'move' call_tmp[2418270](2418274 'ptr_eq' coerce_tmp[2418263] nil[44]))
        if call_tmp[2418270]
        {
          (2418280 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418283]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418285 'move' coerce_tmp[2418283](2418287 '.v' call_tmp[1266451] chpl_p[1208751]))
        (1266461 'move' call_tmp[1266459] coerce_tmp[2418283])
        const-ref call_tmp[1266466]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2412197]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2412199 'move' call_tmp[2412197](2412201 '.' this[1266279] tableSize[1208598]))
        (1266468 'move' call_tmp[1266466] call_tmp[2412197])
        const-val coerce_tmp[1267332]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1267336 'move' coerce_tmp[1267332](1267334 'deref' call_tmp[1266466]))
        (1266478 call startRehash[202364] call_tmp[1266459] coerce_tmp[1267332])
      }
      ref call_tmp[1266481]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418043]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2418045 'move' call_tmp[2418043](2418047 '.' this[1266279] tableNumDeletedSlots[1208592]))
      (1266483 'move' call_tmp[1266481] call_tmp[2418043])
      val inlineImm[2237250]:int(64)[13] "temp"
      (2237253 'move' inlineImm[2237250] 0)
      (2237256 '=' call_tmp[1266481] inlineImm[2237250])
      val _indexOfInterest[1266495]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1266497]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1266499]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1907208]:_ir__allSlots[1221795] "temp"
      ref i__retArg[2325072]:_ir__allSlots[1221795] "temp"
      (2325076 'move' i__retArg[2325072](2325074 'set reference' ret_tmp[1907208]))
      val _ir[2325079]:_ir__allSlots[1221795] "temp"
      (2325081 '.=' _ir[2325079] F0_size[2103704] oldSize[1266297])
      (2325085 '=' i__retArg[2325072] _ir[2325079])
      (1907211 'move' call_tmp[1266499] ret_tmp[1907208])
      ref i_ir[2402742]:_ir__allSlots[1221795] "temp"
      (2402746 'move' i_ir[2402742](2402744 'set reference' call_tmp[1266499]))
      val ret[2402749]:_ic__allSlots[1221789] "dead after last mention" "RVV" "temp"
      val _ic_[2402751]:_ic__allSlots[1221789] "dead after last mention" "temp"
      const-val call_tmp[2402753]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402755 'move' call_tmp[2402753](2402757 'sizeof_bundle' _ic__allSlots[1221789]))
      const-val cast_tmp[2402759]:c_void_ptr[149] "dead after last mention" "temp"
      (2402761 'move' cast_tmp[2402759](2402764 call chpl_here_alloc[187788] call_tmp[2402753] 38))
      (2402767 'move' _ic_[2402751](2402769 'cast' _ic__allSlots[1221789] cast_tmp[2402759]))
      (2402772 'setcid' _ic_[2402751])
      (2402774 'move' ret[2402749] _ic_[2402751])
      (2402777 '.=' ret[2402749] more[1221792] 1)
      const-val tmp[2402781]:int(64)[13] "temp"
      (2402783 'move' tmp[2402781](2402785 '.v' i_ir[2402742] F0_size[2103704]))
      (2402788 '.=' ret[2402749] F0_size[2103702] tmp[2402781])
      (1266506 'move' _iterator[1266497] ret[2402749])
      val ret[1999978]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[1999980]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1999982]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1999984]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1999986]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      const-val size[2000389]:int(64)[13] "temp"
      (2000394 'move' size[2000389](2000391 '.v' _iterator[1266497] F0_size[2103702]))
      val inlineImm[2297718]:int(64)[13] "temp"
      (2297721 'move' inlineImm[2297718] 0)
      ref i__retArg[2297723]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2297727 'move' i__retArg[2297723](2297725 'set reference' ret_tmp[1999986]))
      val _ir[2297730]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2297732 '.=' _ir[2297730] F0_low[2107538] inlineImm[2297718])
      (2297736 '.=' _ir[2297730] F1_count[2107542] size[2000389])
      (2297740 '=' i__retArg[2297723] _ir[2297730])
      (1999993 'move' call_tmp[1999984] ret_tmp[1999986])
      ref i_ir[2299221]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2299225 'move' i_ir[2299221](2299223 'set reference' call_tmp[1999984]))
      val ret[2299228]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
      val _ic_[2299230]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
      const-val call_tmp[2299232]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2299234 'move' call_tmp[2299232](2299236 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
      const-val cast_tmp[2299238]:c_void_ptr[149] "dead after last mention" "temp"
      (2299240 'move' cast_tmp[2299238](2299243 call chpl_here_alloc[187788] call_tmp[2299232] 30))
      (2299246 'move' _ic_[2299230](2299248 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2299238]))
      (2299251 'setcid' _ic_[2299230])
      (2299253 'move' ret[2299228] _ic_[2299230])
      (2299256 '.=' ret[2299228] more[1103982] 1)
      const-val tmp[2299260]:int(64)[13] "temp"
      (2299262 'move' tmp[2299260](2299264 '.v' i_ir[2299221] F0_low[2107538]))
      (2299267 '.=' ret[2299228] F0_low[2107536] tmp[2299260])
      const-val tmp[2299271]:int(64)[13] "temp"
      (2299273 'move' tmp[2299271](2299275 '.v' i_ir[2299221] F1_count[2107542]))
      (2299278 '.=' ret[2299228] F1_count[2107540] tmp[2299271])
      (1999996 'move' _iterator[1999982] ret[2299228])
      val ret[2000002]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[2000004]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[2000006]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[2000008]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2000010]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      const-val low[2000012]:int(64)[13] "temp"
      (2000014 'move' low[2000012](2000016 '.v' _iterator[1999982] F0_low[2107536]))
      const-val count[2000019]:int(64)[13] "temp"
      (2000021 'move' count[2000019](2000023 '.v' _iterator[1999982] F1_count[2107540]))
      ref i__retArg[2300030]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2300034 'move' i__retArg[2300030](2300032 'set reference' ret_tmp[2000010]))
      val _ir[2300037]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2300039 '.=' _ir[2300037] F0_low[2113696] low[2000012])
      (2300043 '.=' _ir[2300037] F1_count[2113700] count[2000019])
      (2300047 '=' i__retArg[2300030] _ir[2300037])
      (2000031 'move' call_tmp[2000008] ret_tmp[2000010])
      ref i_ir[2301119]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2301123 'move' i_ir[2301119](2301121 'set reference' call_tmp[2000008]))
      val ret[2301126]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
      val _ic_[2301128]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
      const-val call_tmp[2301130]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2301132 'move' call_tmp[2301130](2301134 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
      const-val cast_tmp[2301136]:c_void_ptr[149] "dead after last mention" "temp"
      (2301138 'move' cast_tmp[2301136](2301141 call chpl_here_alloc[187788] call_tmp[2301130] 29))
      (2301144 'move' _ic_[2301128](2301146 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301136]))
      (2301149 'setcid' _ic_[2301128])
      (2301151 'move' ret[2301126] _ic_[2301128])
      (2301154 '.=' ret[2301126] more[1103732] 1)
      const-val tmp[2301158]:int(64)[13] "temp"
      (2301160 'move' tmp[2301158](2301162 '.v' i_ir[2301119] F0_low[2113696]))
      (2301165 '.=' ret[2301126] F0_low[2113694] tmp[2301158])
      const-val tmp[2301169]:int(64)[13] "temp"
      (2301171 'move' tmp[2301169](2301173 '.v' i_ir[2301119] F1_count[2113700]))
      (2301176 '.=' ret[2301126] F1_count[2113698] tmp[2301169])
      (2000034 'move' _iterator[2000006] ret[2301126])
      val ret[2069097]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
      val call_tmp[2069099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[2069101]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[2069103]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2069105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2069769]:int(64)[13] "temp"
      (2069774 'move' count[2069769](2069771 '.v' _iterator[2000006] F1_count[2113698]))
      const-val call_tmp[2230968]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2230970 'move' call_tmp[2230968](2230972 '<' count[2069769] 0))
      (2069107 'move' call_tmp[2069105] call_tmp[2230968])
      (2069112 'move' tmp[2069103] call_tmp[2069105])
      (2069115 'move' tmp[2069101] call_tmp[2069105])
      const-val call_tmp[2069118]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2069120 'move' call_tmp[2069118] call_tmp[2069105])
      if call_tmp[2069105]
      {
        (2069126 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      const-val tmp[2069129]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      val tmp[2069131]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
      const-val tmp[2069133]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[2069135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2069776]:int(64)[13] "temp"
      (2069781 'move' count[2069776](2069778 '.v' _iterator[2000006] F1_count[2113698]))
      val inlineImm[2235225]:int(64)[13] "temp"
      (2235228 'move' inlineImm[2235225] 0)
      const-val call_tmp[2235231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235233 'move' call_tmp[2235231](2235235 '==' count[2069776] inlineImm[2235225]))
      (2069137 'move' call_tmp[2069135] call_tmp[2235231])
      (2069143 'move' tmp[2069133] call_tmp[2069135])
      if call_tmp[2069135]
      {
        const-val tmp[2069148]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2069150]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2069152]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2069783]:int(64)[13] "temp"
        (2069788 'move' low[2069783](2069785 '.v' _iterator[2000006] F0_low[2113694]))
        const-val call_tmp[2231908]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231910 'move' call_tmp[2231908](2231912 'cast' uint(64)[115] low[2069783]))
        (2069154 'move' call_tmp[2069152] call_tmp[2231908])
        const-val call_tmp[2069159]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2069161]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2069163 'move' coerce_tmp[2069161](2069165 'cast' uint(64)[115] 1))
        const-val call_tmp[2302504]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302506 'move' call_tmp[2302504](2302508 '-' call_tmp[2069152] 1))
        (2069168 'move' call_tmp[2069159] call_tmp[2302504])
        const-val call_tmp[2069173]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2302924]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302926 'move' call_tmp[2302924](2302928 'cast' int(64)[13] call_tmp[2069159]))
        (2069175 'move' call_tmp[2069173] call_tmp[2302924])
        const-val ret_tmp[2069180]:2*int(64)[1040245] "temp"
        const-val low[2069790]:int(64)[13] "temp"
        (2069795 'move' low[2069790](2069792 '.v' _iterator[2000006] F0_low[2113694]))
        ref i__retArg[2304695]:2*int(64)[1040245] "temp"
        (2304699 'move' i__retArg[2304695](2304697 'set reference' ret_tmp[2069180]))
        val this[2304702]:2*int(64)[1040245] "arg this"
        (2304704 '.=' this[2304702] x0[1040241] low[2069790])
        (2304708 '.=' this[2304702] x1[1040243] call_tmp[2069173])
        (2304712 '=' i__retArg[2304695] this[2304702])
        (2069187 'move' tmp[2069148] ret_tmp[2069180])
        (2069190 'move' tmp[2069131] tmp[2069148])
      }
      {
        const-val tmp[2069194]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2069196]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2069198]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2069797]:int(64)[13] "temp"
        (2069802 'move' count[2069797](2069799 '.v' _iterator[2000006] F1_count[2113698]))
        (2069200 'move' call_tmp[2069198] count[2069797])
        const-val call_tmp[2069203]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2069804]:int(64)[13] "temp"
        (2069809 'move' count[2069804](2069806 '.v' _iterator[2000006] F1_count[2113698]))
        const-val call_tmp[2261964]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261966 'move' call_tmp[2261964](2261968 '-' count[2069804] 1))
        (2069205 'move' call_tmp[2069203] call_tmp[2261964])
        const-val call_tmp[2069210]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2069811]:int(64)[13] "temp"
        (2069816 'move' low[2069811](2069813 '.v' _iterator[2000006] F0_low[2113694]))
        const-val call_tmp[2242696]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242698 'move' call_tmp[2242696](2242700 '+' low[2069811] call_tmp[2069203]))
        (2069212 'move' call_tmp[2069210] call_tmp[2242696])
        const-val ret_tmp[2069218]:2*int(64)[1040245] "temp"
        const-val low[2069818]:int(64)[13] "temp"
        (2069823 'move' low[2069818](2069820 '.v' _iterator[2000006] F0_low[2113694]))
        ref i__retArg[2304717]:2*int(64)[1040245] "temp"
        (2304721 'move' i__retArg[2304717](2304719 'set reference' ret_tmp[2069218]))
        val this[2304724]:2*int(64)[1040245] "arg this"
        (2304726 '.=' this[2304724] x0[1040241] low[2069818])
        (2304730 '.=' this[2304724] x1[1040243] call_tmp[2069210])
        (2304734 '=' i__retArg[2304717] this[2304724])
        (2069225 'move' tmp[2069194] ret_tmp[2069218])
        (2069228 'move' tmp[2069131] tmp[2069194])
      }
      (2069232 '=' tmp[2069129] tmp[2069131])
      (2069235 'noop')
      1
      const-ref call_tmp[2069237]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
      (2069239 'move' call_tmp[2069237](2069241 '.' tmp[2069129] x0[1040241]))
      const-val start[2069244]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2069246]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2069248 'move' coerce_tmp[2069246](2069250 'deref' call_tmp[2069237]))
      (2069252 '=' start[2069244] coerce_tmp[2069246])
      (2069255 'noop')
      const-ref call_tmp[2069256]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
      (2069258 'move' call_tmp[2069256](2069260 '.' tmp[2069129] x1[1040243]))
      const-val end[2069263]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2069265]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2069267 'move' coerce_tmp[2069265](2069269 'deref' call_tmp[2069256]))
      (2069271 '=' end[2069263] coerce_tmp[2069265])
      (2069274 'noop')
      val _indexOfInterest[2069275]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[2069277]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[2069279]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2069281]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      ref i__retArg[2305971]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2305975 'move' i__retArg[2305971](2305973 'set reference' ret_tmp[2069281]))
      val _ir[2305978]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2305980 '.=' _ir[2305978] F0_low[2115194] coerce_tmp[2069246])
      (2305984 '.=' _ir[2305978] F1_high[2115198] coerce_tmp[2069265])
      (2305988 '=' i__retArg[2305971] _ir[2305978])
      (2069288 'move' call_tmp[2069279] ret_tmp[2069281])
      ref i_ir[2308837]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2308841 'move' i_ir[2308837](2308839 'set reference' call_tmp[2069279]))
      val ret[2308844]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
      val _ic_[2308846]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
      const-val call_tmp[2308848]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2308850 'move' call_tmp[2308848](2308852 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
      const-val cast_tmp[2308854]:c_void_ptr[149] "dead after last mention" "temp"
      (2308856 'move' cast_tmp[2308854](2308859 call chpl_here_alloc[187788] call_tmp[2308848] 28))
      (2308862 'move' _ic_[2308846](2308864 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2308854]))
      (2308867 'setcid' _ic_[2308846])
      (2308869 'move' ret[2308844] _ic_[2308846])
      (2308872 '.=' ret[2308844] more[1103478] 1)
      const-val tmp[2308876]:int(64)[13] "temp"
      (2308878 'move' tmp[2308876](2308880 '.v' i_ir[2308837] F0_low[2115194]))
      (2308883 '.=' ret[2308844] F0_low[2115192] tmp[2308876])
      const-val tmp[2308887]:int(64)[13] "temp"
      (2308889 'move' tmp[2308887](2308891 '.v' i_ir[2308837] F1_high[2115198]))
      (2308894 '.=' ret[2308844] F1_high[2115196] tmp[2308887])
      (2069291 'move' _iterator[2069277] ret[2308844])
      val ret[2069297]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
      val call_tmp[2069299]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val i[2069303]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[2069305]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (2069307 'move' i[2069303] 0)
      val call_tmp[2069310]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val default_arg_first[2069312]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val low[2069314]:int(64)[13] "temp"
      (2069316 'move' low[2069314](2069318 '.v' _iterator[2069277] F0_low[2115192]))
      (2069321 'move' default_arg_first[2069312] low[2069314])
      const-val default_arg_last[2069326]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val high[2069328]:int(64)[13] "temp"
      (2069330 'move' high[2069328](2069332 '.v' _iterator[2069277] F1_high[2115196]))
      (2069335 'move' default_arg_last[2069326] high[2069328])
      const-val _return_tmp_[2069340]:bool[10] "dead after last mention" "temp"
      const-val low[2069342]:int(64)[13] "temp"
      (2069344 'move' low[2069342](2069346 '.v' _iterator[2069277] F0_low[2115192]))
      const-val high[2069349]:int(64)[13] "temp"
      (2069351 'move' high[2069349](2069353 '.v' _iterator[2069277] F1_high[2115196]))
      (2069356 'move' _return_tmp_[2069340](2069359 call chpl_checkIfRangeIterWillOverflow[1096265] low[2069342] high[2069349] 1 default_arg_first[2069312] default_arg_last[2069326] 1))
      CForLoop[2069366] hazard
      {
        const-val yret[2069395]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2069397 'move' yret[2069395] i[2069303])
        const-val _yieldedIndex[2069400]:int(64)[13] "temp"
        (2069402 'move' _yieldedIndex[2069400] i[2069303])
        const-val i[2069406]:int(64)[13] "const" "index var" "insert auto destroy"
        (2069408 'move' i[2069406] _yieldedIndex[2069400])
        const-val yret[2069411]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2069413 'move' yret[2069411] _yieldedIndex[2069400])
        const-val _yieldedIndex[2069441]:int(64)[13] "temp"
        (2069767 'move' _yieldedIndex[2069441] _yieldedIndex[2069400])
        const-val i[2069443]:int(64)[13] "const" "index var" "insert auto destroy"
        (2069445 'move' i[2069443] _yieldedIndex[2069441])
        const-val yret[2069448]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2069450 'move' yret[2069448] _yieldedIndex[2069441])
        const-val _yieldedIndex[2069453]:int(64)[13] "temp"
        (2069455 'move' _yieldedIndex[2069453] _yieldedIndex[2069441])
        const-val slot[2069459]:int(64)[13] "const" "index var" "insert auto destroy"
        (2069461 'move' slot[2069459] _yieldedIndex[2069453])
        const-val yret[2069464]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2069466 'move' yret[2069464] _yieldedIndex[2069453])
        const-val _yieldedIndex[2069469]:int(64)[13] "temp"
        (2069471 'move' _yieldedIndex[2069469] _yieldedIndex[2069453])
        const-val oldslot[2069475]:int(64)[13] "const" "index var" "insert auto destroy"
        (2069477 'move' oldslot[2069475] _yieldedIndex[2069469])
        ref call_tmp[2069481]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2412486]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
        (2412488 'move' call_tmp[2412486](2412490 'array_get' oldTable[1266311] oldslot[2069475]))
        (2069483 'move' call_tmp[2069481] call_tmp[2412486])
        const-ref call_tmp[2069489]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418680]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
        (2418682 'move' call_tmp[2418680](2418684 '.' call_tmp[2069481] status[1208652]))
        (2069491 'move' call_tmp[2069489] call_tmp[2418680])
        const-val call_tmp[2069496]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2069498]:chpl__hash_status[200461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2069500 'move' coerce_tmp[2069498](2069502 'deref' call_tmp[2069489]))
        const-val call_tmp[2418740]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418742 'move' call_tmp[2418740](2418744 '==' coerce_tmp[2069498] full[200457]))
        (2069504 'move' call_tmp[2069496] call_tmp[2418740])
        const-val call_tmp[2069510]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2069512 'move' call_tmp[2069510] call_tmp[2069496])
        if call_tmp[2069510]
        {
          ref oldEntry[2069517]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "ref var"
          ref call_tmp[2069519]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "maybe param" "temp"
          ref call_tmp[2412496]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          (2412498 'move' call_tmp[2412496](2412500 'array_get' oldTable[1266311] oldslot[2069475]))
          (2069521 'move' call_tmp[2069519] call_tmp[2412496])
          (2069527 'move' oldEntry[2069517] call_tmp[2069519])
          const-ref call_tmp[2069530]:BaseArr[149584] "dead at end of block" "maybe param" "temp"
          ref call_tmp[2418824]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          (2418826 'move' call_tmp[2418824](2418828 '.' oldEntry[2069517] key[1208656]))
          (2069532 'move' call_tmp[2069530] call_tmp[2418824])
          const-val call_tmp[2069537]:(bool,int(64))[1265321] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2069539]:BaseArr[149584] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2069541 'move' coerce_tmp[2069539](2069543 'deref' call_tmp[2069530]))
          const-val ret_tmp[2069545]:(bool,int(64))[1265321] "temp"
          (2069548 call _findSlot[1267471] this[1266279] coerce_tmp[2069539] ret_tmp[2069545])
          (2069552 'move' call_tmp[2069537] ret_tmp[2069545])
          const-val tmp[2069555]:(bool,int(64))[1265321] "dead at end of block" "insert auto destroy" "temp"
          (2069557 'move' tmp[2069555] call_tmp[2069537])
          1
          const-ref call_tmp[2069561]:bool[10] "dead at end of block" "maybe param" "temp"
          (2069563 'move' call_tmp[2069561](2069565 '.' tmp[2069555] x0[1265317]))
          const-val foundSlot[2069568]:bool[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[2069570]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2069572 'move' coerce_tmp[2069570](2069574 'deref' call_tmp[2069561]))
          (2069576 'move' foundSlot[2069568] coerce_tmp[2069570])
          const-ref call_tmp[2069581]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (2069583 'move' call_tmp[2069581](2069585 '.' tmp[2069555] x1[1265319]))
          const-val newslot[2069588]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[2069590]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2069592 'move' coerce_tmp[2069590](2069594 'deref' call_tmp[2069581]))
          (2069596 'move' newslot[2069588] coerce_tmp[2069590])
          const-val call_tmp[2069601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2069603 'move' call_tmp[2069601] foundSlot[2069568])
          if call_tmp[2069601]
          {
            (2069609 call halt[154111] "duplicate element found while resizing for key")
          }
          const-val call_tmp[2069612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2230978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2230980 'move' call_tmp[2230978](2230982 '<' newslot[2069588] 0))
          (2069614 'move' call_tmp[2069612] call_tmp[2230978])
          const-val call_tmp[2069619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2069621 'move' call_tmp[2069619] call_tmp[2069612])
          if call_tmp[2069619]
          {
            (2069627 call halt[1272627] "couldn't add element during resize - got slot " newslot[2069588] " for key")
          }
          ref dstSlot[2069632]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "ref var"
          ref call_tmp[2069634]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead at end of block" "maybe param" "temp"
          const-ref _this_tmp_[2069636]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "temp"
          ref call_tmp[2412093]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
          (2412095 'move' call_tmp[2412093](2412097 '.' this[1266279] table[1208601]))
          (2069638 'move' _this_tmp_[2069636] call_tmp[2412093])
          val coerce_tmp[2069643]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2069645 'move' coerce_tmp[2069643](2069647 'deref' _this_tmp_[2069636]))
          ref call_tmp[2412506]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
          (2412508 'move' call_tmp[2412506](2412510 'array_get' coerce_tmp[2069643] newslot[2069588]))
          (2069649 'move' call_tmp[2069634] call_tmp[2412506])
          (2069655 'move' dstSlot[2069632] call_tmp[2069634])
          ref call_tmp[2069658]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2418690]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
          (2418692 'move' call_tmp[2418690](2418694 '.' dstSlot[2069632] status[1208652]))
          (2069660 'move' call_tmp[2069658] call_tmp[2418690])
          (2424377 '=' call_tmp[2069658] full[200457])
          ref call_tmp[2069669]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2418834]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          (2418836 'move' call_tmp[2418834](2418838 '.' dstSlot[2069632] key[1208656]))
          (2069671 'move' call_tmp[2069669] call_tmp[2418834])
          const-ref call_tmp[2069676]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2418844]:BaseArr[149584] "dead after last mention" "maybe param" "temp"
          (2418846 'move' call_tmp[2418844](2418848 '.' oldEntry[2069517] key[1208656]))
          (2069678 'move' call_tmp[2069676] call_tmp[2418844])
          val call_tmp[2069683]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp"
          (2069685 'move' call_tmp[2069683](2069688 call _moveToReturn[1277686] call_tmp[2069676]))
          (2069691 call _moveInit[1277770] call_tmp[2069669] call_tmp[2069683])
          none[57]
          none[57]
          (2069701 call _moveToReturn[1277881])
          (2069703 call _moveInit[1277957])
          const-ref call_tmp[2069704]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2418212]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
          (2418214 'move' call_tmp[2418212](2418216 '.' this[1266279] rehashHelpers[1208609]))
          (2069706 'move' call_tmp[2069704] call_tmp[2418212])
          const-val call_tmp[2069711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[2069713]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2069715 'move' coerce_tmp[2069713](2069718 call borrow[1218144] call_tmp[2069704]))
          val coerce_tmp[2069720]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2069722 'move' coerce_tmp[2069720](2069724 'cast' object[22] coerce_tmp[2069713]))
          const-val call_tmp[2228187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2228189 'move' call_tmp[2228187](2228191 'ptr_neq' coerce_tmp[2069720] nil[44]))
          (2069727 'move' call_tmp[2069711] call_tmp[2228187])
          const-val call_tmp[2069733]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2069735 'move' call_tmp[2069733] call_tmp[2069711])
          if call_tmp[2069733]
          {
            const-ref call_tmp[2069740]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
            ref call_tmp[2418222]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
            (2418224 'move' call_tmp[2418222](2418226 '.' this[1266279] rehashHelpers[1208609]))
            (2069742 'move' call_tmp[2069740] call_tmp[2418222])
            val call_tmp[2069747]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[2418552]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418554 'move' coerce_tmp[2418552](2418556 '.v' call_tmp[2069740] chpl_p[1208751]))
            val coerce_tmp[2418559]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418561 'move' coerce_tmp[2418559](2418563 'cast' object[22] coerce_tmp[2418552]))
            const-val call_tmp[2418566]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2418568 'move' call_tmp[2418566](2418570 'ptr_eq' coerce_tmp[2418559] nil[44]))
            if call_tmp[2418566]
            {
              (2418576 call nilCheckHalt[210238] "argument to ! is nil")
            }
            val coerce_tmp[2418579]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418581 'move' coerce_tmp[2418579](2418583 '.v' call_tmp[2069740] chpl_p[1208751]))
            (2069749 'move' call_tmp[2069747] coerce_tmp[2418579])
            (2069755 call moveElementDuringRehash[202375] call_tmp[2069747] oldslot[2069475] newslot[2069588])
          }
          ref i_x[2518928]:(bool,int(64))[1265321] "temp"
          (2518932 'move' i_x[2518928](2518930 'set reference' tmp[2069555]))
        }
        {
          const-val low[2069368]:int(64)[13] "temp"
          (2069370 'move' low[2069368](2069372 '.v' _iterator[2069277] F0_low[2115192]))
          (2069375 '=' i[2069303] low[2069368])
        }
        {
          const-val high[2069379]:int(64)[13] "temp"
          (2069381 'move' high[2069379](2069383 '.v' _iterator[2069277] F1_high[2115196]))
          (2069386 '<=' i[2069303] high[2069379])
        }
        {
          val call_tmp[2069390]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2069392 '+=' i[2069303] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2069429]
      const-val call_tmp[2310979]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2310981 'move' call_tmp[2310979](2310983 'cast_to_void_star' _iterator[2069277]))
      (2310986 call chpl_here_free[188127] call_tmp[2310979])
      ref i_x[2311773]:2*int(64)[1040245] "temp"
      (2311777 'move' i_x[2311773](2311775 'set reference' tmp[2069129]))
      label _endchpl_direct_counted_range_iter_helper[2069437]
      const-val call_tmp[2311996]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2311998 'move' call_tmp[2311996](2312000 'cast_to_void_star' _iterator[2000006]))
      (2312003 call chpl_here_free[188127] call_tmp[2311996])
      label _endchpl_direct_counted_range_iter[2000084]
      const-val call_tmp[2312596]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2312598 'move' call_tmp[2312596](2312600 'cast_to_void_star' _iterator[1999982]))
      (2312603 call chpl_here_free[188127] call_tmp[2312596])
      label _end_allSlots[2000089]
      const-val call_tmp[2402975]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402977 'move' call_tmp[2402975](2402979 'cast_to_void_star' _iterator[1266497]))
      (2402982 call chpl_here_free[188127] call_tmp[2402975])
      const-ref call_tmp[1266821]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418162]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2418164 'move' call_tmp[2418162](2418166 '.' this[1266279] rehashHelpers[1208609]))
      (1266823 'move' call_tmp[1266821] call_tmp[2418162])
      const-val call_tmp[1266829]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1278062]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278068 'move' coerce_tmp[1278062](1278064 call borrow[1218144] call_tmp[1266821]))
      val coerce_tmp[1278071]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278077 'move' coerce_tmp[1278071](1278073 'cast' object[22] coerce_tmp[1278062]))
      const-val call_tmp[2227007]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227009 'move' call_tmp[2227007](2227011 'ptr_neq' coerce_tmp[1278071] nil[44]))
      (1266831 'move' call_tmp[1266829] call_tmp[2227007])
      const-val call_tmp[1266837]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1266839 'move' call_tmp[1266837] call_tmp[1266829])
      if call_tmp[1266837]
      {
        const-ref call_tmp[1266846]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418172]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2418174 'move' call_tmp[2418172](2418176 '.' this[1266279] rehashHelpers[1208609]))
        (1266848 'move' call_tmp[1266846] call_tmp[2418172])
        val call_tmp[1266854]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418293]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418295 'move' coerce_tmp[2418293](2418297 '.v' call_tmp[1266846] chpl_p[1208751]))
        val coerce_tmp[2418300]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418302 'move' coerce_tmp[2418300](2418304 'cast' object[22] coerce_tmp[2418293]))
        const-val call_tmp[2418307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418309 'move' call_tmp[2418307](2418311 'ptr_eq' coerce_tmp[2418300] nil[44]))
        if call_tmp[2418307]
        {
          (2418317 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418320]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418322 'move' coerce_tmp[2418320](2418324 '.v' call_tmp[1266846] chpl_p[1208751]))
        (1266856 'move' call_tmp[1266854] coerce_tmp[2418320])
        (1266865 call finishRehash[202390] call_tmp[1266854] oldSize[1266297])
      }
      (1266871 call _freeData[1278083] oldTable[1266311] oldSize[1266297])
    }
    {
      const-ref call_tmp[1266878]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418182]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2418184 'move' call_tmp[2418182](2418186 '.' this[1266279] rehashHelpers[1208609]))
      (1266880 'move' call_tmp[1266878] call_tmp[2418182])
      const-val call_tmp[1266886]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1278210]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278216 'move' coerce_tmp[1278210](1278212 call borrow[1218144] call_tmp[1266878]))
      val coerce_tmp[1278219]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278225 'move' coerce_tmp[1278219](1278221 'cast' object[22] coerce_tmp[1278210]))
      const-val call_tmp[2227017]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227019 'move' call_tmp[2227017](2227021 'ptr_neq' coerce_tmp[1278219] nil[44]))
      (1266888 'move' call_tmp[1266886] call_tmp[2227017])
      const-val call_tmp[1266894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1266896 'move' call_tmp[1266894] call_tmp[1266886])
      if call_tmp[1266894]
      {
        const-ref call_tmp[1266903]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418192]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2418194 'move' call_tmp[2418192](2418196 '.' this[1266279] rehashHelpers[1208609]))
        (1266905 'move' call_tmp[1266903] call_tmp[2418192])
        val call_tmp[1266911]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418330]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418332 'move' coerce_tmp[2418330](2418334 '.v' call_tmp[1266903] chpl_p[1208751]))
        val coerce_tmp[2418337]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418339 'move' coerce_tmp[2418337](2418341 'cast' object[22] coerce_tmp[2418330]))
        const-val call_tmp[2418344]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418346 'move' call_tmp[2418344](2418348 'ptr_eq' coerce_tmp[2418337] nil[44]))
        if call_tmp[2418344]
        {
          (2418354 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418357]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418359 'move' coerce_tmp[2418357](2418361 '.v' call_tmp[1266903] chpl_p[1208751]))
        (1266913 'move' call_tmp[1266911] coerce_tmp[2418357])
        const-ref call_tmp[1266918]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2412217]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2412219 'move' call_tmp[2412217](2412221 '.' this[1266279] tableSize[1208598]))
        (1266920 'move' call_tmp[1266918] call_tmp[2412217])
        const-val coerce_tmp[1278231]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1278235 'move' coerce_tmp[1278231](1278233 'deref' call_tmp[1266918]))
        (1266930 call startRehash[202364] call_tmp[1266911] coerce_tmp[1278231])
        const-ref call_tmp[1266933]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2418202]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2418204 'move' call_tmp[2418202](2418206 '.' this[1266279] rehashHelpers[1208609]))
        (1266935 'move' call_tmp[1266933] call_tmp[2418202])
        val call_tmp[1266941]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418367]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418369 'move' coerce_tmp[2418367](2418371 '.v' call_tmp[1266933] chpl_p[1208751]))
        val coerce_tmp[2418374]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418376 'move' coerce_tmp[2418374](2418378 'cast' object[22] coerce_tmp[2418367]))
        const-val call_tmp[2418381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418383 'move' call_tmp[2418381](2418385 'ptr_eq' coerce_tmp[2418374] nil[44]))
        if call_tmp[2418381]
        {
          (2418391 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418394]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418396 'move' coerce_tmp[2418394](2418398 '.v' call_tmp[1266933] chpl_p[1208751]))
        (1266943 'move' call_tmp[1266941] coerce_tmp[2418394])
        (1266952 call finishRehash[202390] call_tmp[1266941] oldSize[1266297])
      }
      (1266958 call _freeData[1278083] oldTable[1266311] oldSize[1266297])
      ref call_tmp[1266964]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412043]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "maybe param" "temp"
      (2412045 'move' call_tmp[2412043](2412047 '.' this[1266279] table[1208601]))
      (1266966 'move' call_tmp[1266964] call_tmp[2412043])
      const-ref call_tmp[1266972]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412227]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2412229 'move' call_tmp[2412227](2412231 '.' this[1266279] tableSize[1208598]))
      (1266974 'move' call_tmp[1266972] call_tmp[2412227])
      val call_tmp[1266980]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1278244]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1278248 'move' coerce_tmp[1278244](1278246 'deref' call_tmp[1266972]))
      (1266982 'move' call_tmp[1266980](1266988 call allocateTable[1248085] this[1266279] coerce_tmp[1278244]))
      (2412419 '=' call_tmp[1266964] call_tmp[1266980])
      ref call_tmp[1266995]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2418053]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2418055 'move' call_tmp[2418053](2418057 '.' this[1266279] tableNumDeletedSlots[1208592]))
      (1266997 'move' call_tmp[1266995] call_tmp[2418053])
      val inlineImm[2237261]:int(64)[13] "temp"
      (2237264 'move' inlineImm[2237261] 0)
      (2237267 '=' call_tmp[1266995] inlineImm[2237261])
    }
    (1267008 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].rehash[1499448](ref arg this[1499452]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg newSizeNum[1499454]:int(64)[13], const in arg newSize[1499456]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1499462]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2401727]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2401729 'move' call_tmp[2401727](2401731 '.' this[1499452] tableSize[1208898]))
    (1499464 'move' call_tmp[1499462] call_tmp[2401727])
    const-val oldSize[1499470]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1500187]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1500191 'move' coerce_tmp[1500187](1500189 'deref' call_tmp[1499462]))
    (1926708 '=' oldSize[1499470] coerce_tmp[1500187])
    (1499472 'noop')
    const-ref call_tmp[1499476]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2401623]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
    (2401625 'move' call_tmp[2401623](2401627 '.' this[1499452] table[1208901]))
    (1499478 'move' call_tmp[1499476] call_tmp[2401623])
    val oldTable[1499484]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1500197]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1500201 'move' coerce_tmp[1500197](1500199 'deref' call_tmp[1499476]))
    (1926711 '=' oldTable[1499484] coerce_tmp[1500197])
    (1499486 'noop')
    ref call_tmp[1499490]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2467115]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467117 'move' call_tmp[2467115](2467119 '.' this[1499452] tableSizeNum[1208895]))
    (1499492 'move' call_tmp[1499490] call_tmp[2467115])
    (2237797 '=' call_tmp[1499490] newSizeNum[1499454])
    ref call_tmp[1499503]:int(64)[13] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2401737]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2401739 'move' call_tmp[2401737](2401741 '.' this[1499452] tableSize[1208898]))
    (1499505 'move' call_tmp[1499503] call_tmp[2401737])
    (2237803 '=' call_tmp[1499503] newSize[1499456])
    const-ref call_tmp[1499516]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2467037]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467039 'move' call_tmp[2467037](2467041 '.' this[1499452] tableNumFullSlots[1208889]))
    (1499518 'move' call_tmp[1499516] call_tmp[2467037])
    const-val entries[1499524]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1500211]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1500215 'move' coerce_tmp[1500211](1500213 'deref' call_tmp[1499516]))
    (1926714 '=' entries[1499524] coerce_tmp[1500211])
    (1499526 'noop')
    const-val call_tmp[1499530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2240937]:int(64)[13] "temp"
    (2240940 'move' inlineImm[2240937] 0)
    const-val call_tmp[2240943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240945 'move' call_tmp[2240943](2240947 '>' entries[1499524] inlineImm[2240937]))
    (1499532 'move' call_tmp[1499530] call_tmp[2240943])
    const-val call_tmp[1499538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499540 'move' call_tmp[1499538] call_tmp[1499530])
    if call_tmp[1499538]
    {
      const-val call_tmp[1499547]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val inlineImm[2233835]:int(64)[13] "temp"
      (2233838 'move' inlineImm[2233835] 0)
      const-val call_tmp[2233841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2233843 'move' call_tmp[2233841](2233845 '==' newSize[1499456] inlineImm[2233835]))
      (1499549 'move' call_tmp[1499547] call_tmp[2233841])
      const-val call_tmp[1499555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1499557 'move' call_tmp[1499555] call_tmp[1499547])
      if call_tmp[1499555]
      {
        (1499565 call halt[154111] "attempt to resize to 0 a table that is not empty")
      }
      ref call_tmp[1499568]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2401633]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
      (2401635 'move' call_tmp[2401633](2401637 '.' this[1499452] table[1208901]))
      (1499570 'move' call_tmp[1499568] call_tmp[2401633])
      const-ref call_tmp[1499576]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2401747]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2401749 'move' call_tmp[2401747](2401751 '.' this[1499452] tableSize[1208898]))
      (1499578 'move' call_tmp[1499576] call_tmp[2401747])
      val call_tmp[1499584]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1500223]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500227 'move' coerce_tmp[1500223](1500225 'deref' call_tmp[1499576]))
      (1499586 'move' call_tmp[1499584](1499592 call allocateTable[1218663] this[1499452] coerce_tmp[1500223]))
      (2401913 '=' call_tmp[1499568] call_tmp[1499584])
      const-ref call_tmp[1499599]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467140]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2467142 'move' call_tmp[2467140](2467144 '.' this[1499452] rehashHelpers[1208909]))
      (1499601 'move' call_tmp[1499599] call_tmp[2467140])
      const-val call_tmp[1499607]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1500259]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500265 'move' coerce_tmp[1500259](1500261 call borrow[1218144] call_tmp[1499599]))
      val coerce_tmp[1500268]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500274 'move' coerce_tmp[1500268](1500270 'cast' object[22] coerce_tmp[1500259]))
      const-val call_tmp[2227047]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227049 'move' call_tmp[2227047](2227051 'ptr_neq' coerce_tmp[1500268] nil[44]))
      (1499609 'move' call_tmp[1499607] call_tmp[2227047])
      const-val call_tmp[1499615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1499617 'move' call_tmp[1499615] call_tmp[1499607])
      if call_tmp[1499615]
      {
        const-ref call_tmp[1499624]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2467150]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2467152 'move' call_tmp[2467150](2467154 '.' this[1499452] rehashHelpers[1208909]))
        (1499626 'move' call_tmp[1499624] call_tmp[2467150])
        val call_tmp[1499632]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418404]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418406 'move' coerce_tmp[2418404](2418408 '.v' call_tmp[1499624] chpl_p[1208751]))
        val coerce_tmp[2418411]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418413 'move' coerce_tmp[2418411](2418415 'cast' object[22] coerce_tmp[2418404]))
        const-val call_tmp[2418418]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418420 'move' call_tmp[2418418](2418422 'ptr_eq' coerce_tmp[2418411] nil[44]))
        if call_tmp[2418418]
        {
          (2418428 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418431]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418433 'move' coerce_tmp[2418431](2418435 '.v' call_tmp[1499624] chpl_p[1208751]))
        (1499634 'move' call_tmp[1499632] coerce_tmp[2418431])
        const-ref call_tmp[1499639]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2401757]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2401759 'move' call_tmp[2401757](2401761 '.' this[1499452] tableSize[1208898]))
        (1499641 'move' call_tmp[1499639] call_tmp[2401757])
        const-val coerce_tmp[1500280]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1500284 'move' coerce_tmp[1500280](1500282 'deref' call_tmp[1499639]))
        (1499651 call startRehash[202364] call_tmp[1499632] coerce_tmp[1500280])
      }
      ref call_tmp[1499654]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467071]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2467073 'move' call_tmp[2467071](2467075 '.' this[1499452] tableNumDeletedSlots[1208892]))
      (1499656 'move' call_tmp[1499654] call_tmp[2467071])
      val inlineImm[2237808]:int(64)[13] "temp"
      (2237811 'move' inlineImm[2237808] 0)
      (2237814 '=' call_tmp[1499654] inlineImm[2237808])
      val _indexOfInterest[1499668]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[1499670]:_ic__allSlots[1221789] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[1499672]:_ir__allSlots[1221795] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1907220]:_ir__allSlots[1221795] "temp"
      ref i__retArg[2325090]:_ir__allSlots[1221795] "temp"
      (2325094 'move' i__retArg[2325090](2325092 'set reference' ret_tmp[1907220]))
      val _ir[2325097]:_ir__allSlots[1221795] "temp"
      (2325099 '.=' _ir[2325097] F0_size[2103704] oldSize[1499470])
      (2325103 '=' i__retArg[2325090] _ir[2325097])
      (1907223 'move' call_tmp[1499672] ret_tmp[1907220])
      ref i_ir[2402794]:_ir__allSlots[1221795] "temp"
      (2402798 'move' i_ir[2402794](2402796 'set reference' call_tmp[1499672]))
      val ret[2402801]:_ic__allSlots[1221789] "dead after last mention" "RVV" "temp"
      val _ic_[2402803]:_ic__allSlots[1221789] "dead after last mention" "temp"
      const-val call_tmp[2402805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402807 'move' call_tmp[2402805](2402809 'sizeof_bundle' _ic__allSlots[1221789]))
      const-val cast_tmp[2402811]:c_void_ptr[149] "dead after last mention" "temp"
      (2402813 'move' cast_tmp[2402811](2402816 call chpl_here_alloc[187788] call_tmp[2402805] 38))
      (2402819 'move' _ic_[2402803](2402821 'cast' _ic__allSlots[1221789] cast_tmp[2402811]))
      (2402824 'setcid' _ic_[2402803])
      (2402826 'move' ret[2402801] _ic_[2402803])
      (2402829 '.=' ret[2402801] more[1221792] 1)
      const-val tmp[2402833]:int(64)[13] "temp"
      (2402835 'move' tmp[2402833](2402837 '.v' i_ir[2402794] F0_size[2103704]))
      (2402840 '.=' ret[2402801] F0_size[2103702] tmp[2402833])
      (1499679 'move' _iterator[1499670] ret[2402801])
      val ret[2015351]:_ir__allSlots[1221795] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[2015353]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[2015355]:_ic_chpl_direct_counted_range_iter[1103979] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[2015357]:_ir_chpl_direct_counted_range_iter[1103985] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2015359]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      const-val size[2015762]:int(64)[13] "temp"
      (2015767 'move' size[2015762](2015764 '.v' _iterator[1499670] F0_size[2103702]))
      val inlineImm[2297772]:int(64)[13] "temp"
      (2297775 'move' inlineImm[2297772] 0)
      ref i__retArg[2297777]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2297781 'move' i__retArg[2297777](2297779 'set reference' ret_tmp[2015359]))
      val _ir[2297784]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2297786 '.=' _ir[2297784] F0_low[2107538] inlineImm[2297772])
      (2297790 '.=' _ir[2297784] F1_count[2107542] size[2015762])
      (2297794 '=' i__retArg[2297777] _ir[2297784])
      (2015366 'move' call_tmp[2015357] ret_tmp[2015359])
      ref i_ir[2299347]:_ir_chpl_direct_counted_range_iter[1103985] "temp"
      (2299351 'move' i_ir[2299347](2299349 'set reference' call_tmp[2015357]))
      val ret[2299354]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "RVV" "temp"
      val _ic_[2299356]:_ic_chpl_direct_counted_range_iter[1103979] "dead after last mention" "temp"
      const-val call_tmp[2299358]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2299360 'move' call_tmp[2299358](2299362 'sizeof_bundle' _ic_chpl_direct_counted_range_iter[1103979]))
      const-val cast_tmp[2299364]:c_void_ptr[149] "dead after last mention" "temp"
      (2299366 'move' cast_tmp[2299364](2299369 call chpl_here_alloc[187788] call_tmp[2299358] 30))
      (2299372 'move' _ic_[2299356](2299374 'cast' _ic_chpl_direct_counted_range_iter[1103979] cast_tmp[2299364]))
      (2299377 'setcid' _ic_[2299356])
      (2299379 'move' ret[2299354] _ic_[2299356])
      (2299382 '.=' ret[2299354] more[1103982] 1)
      const-val tmp[2299386]:int(64)[13] "temp"
      (2299388 'move' tmp[2299386](2299390 '.v' i_ir[2299347] F0_low[2107538]))
      (2299393 '.=' ret[2299354] F0_low[2107536] tmp[2299386])
      const-val tmp[2299397]:int(64)[13] "temp"
      (2299399 'move' tmp[2299397](2299401 '.v' i_ir[2299347] F1_count[2107542]))
      (2299404 '.=' ret[2299354] F1_count[2107540] tmp[2299397])
      (2015369 'move' _iterator[2015355] ret[2299354])
      val ret[2015375]:_ir_chpl_direct_counted_range_iter[1103985] "dead after last mention" "RVV" "temp"
      val _indexOfInterest[2015377]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[2015379]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[2015381]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2015383]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      const-val low[2015385]:int(64)[13] "temp"
      (2015387 'move' low[2015385](2015389 '.v' _iterator[2015355] F0_low[2107536]))
      const-val count[2015392]:int(64)[13] "temp"
      (2015394 'move' count[2015392](2015396 '.v' _iterator[2015355] F1_count[2107540]))
      ref i__retArg[2300052]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2300056 'move' i__retArg[2300052](2300054 'set reference' ret_tmp[2015383]))
      val _ir[2300059]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2300061 '.=' _ir[2300059] F0_low[2113696] low[2015385])
      (2300065 '.=' _ir[2300059] F1_count[2113700] count[2015392])
      (2300069 '=' i__retArg[2300052] _ir[2300059])
      (2015404 'move' call_tmp[2015381] ret_tmp[2015383])
      ref i_ir[2301182]:_ir_chpl_direct_counted_range_iter_helper[1103735] "temp"
      (2301186 'move' i_ir[2301182](2301184 'set reference' call_tmp[2015381]))
      val ret[2301189]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "RVV" "temp"
      val _ic_[2301191]:_ic_chpl_direct_counted_range_iter_helper[1103729] "dead after last mention" "temp"
      const-val call_tmp[2301193]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2301195 'move' call_tmp[2301193](2301197 'sizeof_bundle' _ic_chpl_direct_counted_range_iter_helper[1103729]))
      const-val cast_tmp[2301199]:c_void_ptr[149] "dead after last mention" "temp"
      (2301201 'move' cast_tmp[2301199](2301204 call chpl_here_alloc[187788] call_tmp[2301193] 29))
      (2301207 'move' _ic_[2301191](2301209 'cast' _ic_chpl_direct_counted_range_iter_helper[1103729] cast_tmp[2301199]))
      (2301212 'setcid' _ic_[2301191])
      (2301214 'move' ret[2301189] _ic_[2301191])
      (2301217 '.=' ret[2301189] more[1103732] 1)
      const-val tmp[2301221]:int(64)[13] "temp"
      (2301223 'move' tmp[2301221](2301225 '.v' i_ir[2301182] F0_low[2113696]))
      (2301228 '.=' ret[2301189] F0_low[2113694] tmp[2301221])
      const-val tmp[2301232]:int(64)[13] "temp"
      (2301234 'move' tmp[2301232](2301236 '.v' i_ir[2301182] F1_count[2113700]))
      (2301239 '.=' ret[2301189] F1_count[2113698] tmp[2301232])
      (2015407 'move' _iterator[2015379] ret[2301189])
      val ret[2081982]:_ir_chpl_direct_counted_range_iter_helper[1103735] "dead after last mention" "RVV" "temp"
      val call_tmp[2081984]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[2081986]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[2081988]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2081990]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2082654]:int(64)[13] "temp"
      (2082659 'move' count[2082654](2082656 '.v' _iterator[2015379] F1_count[2113698]))
      const-val call_tmp[2230998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2231000 'move' call_tmp[2230998](2231002 '<' count[2082654] 0))
      (2081992 'move' call_tmp[2081990] call_tmp[2230998])
      (2081997 'move' tmp[2081988] call_tmp[2081990])
      (2082000 'move' tmp[2081986] call_tmp[2081990])
      const-val call_tmp[2082003]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2082005 'move' call_tmp[2082003] call_tmp[2081990])
      if call_tmp[2081990]
      {
        (2082011 call boundsCheckHalt[210254] "With a negative count, the range must have a last index.")
      }
      const-val tmp[2082014]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
      val tmp[2082016]:2*int(64)[1040245] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
      const-val tmp[2082018]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[2082020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val count[2082661]:int(64)[13] "temp"
      (2082666 'move' count[2082661](2082663 '.v' _iterator[2015379] F1_count[2113698]))
      val inlineImm[2235315]:int(64)[13] "temp"
      (2235318 'move' inlineImm[2235315] 0)
      const-val call_tmp[2235321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235323 'move' call_tmp[2235321](2235325 '==' count[2082661] inlineImm[2235315]))
      (2082022 'move' call_tmp[2082020] call_tmp[2235321])
      (2082028 'move' tmp[2082018] call_tmp[2082020])
      if call_tmp[2082020]
      {
        const-val tmp[2082033]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2082035]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2082037]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2082668]:int(64)[13] "temp"
        (2082673 'move' low[2082668](2082670 '.v' _iterator[2015379] F0_low[2113694]))
        const-val call_tmp[2231968]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2231970 'move' call_tmp[2231968](2231972 'cast' uint(64)[115] low[2082668]))
        (2082039 'move' call_tmp[2082037] call_tmp[2231968])
        const-val call_tmp[2082044]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2082046]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (2082048 'move' coerce_tmp[2082046](2082050 'cast' uint(64)[115] 1))
        const-val call_tmp[2302524]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302526 'move' call_tmp[2302524](2302528 '-' call_tmp[2082037] 1))
        (2082053 'move' call_tmp[2082044] call_tmp[2302524])
        const-val call_tmp[2082058]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val call_tmp[2302964]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2302966 'move' call_tmp[2302964](2302968 'cast' int(64)[13] call_tmp[2082044]))
        (2082060 'move' call_tmp[2082058] call_tmp[2302964])
        const-val ret_tmp[2082065]:2*int(64)[1040245] "temp"
        const-val low[2082675]:int(64)[13] "temp"
        (2082680 'move' low[2082675](2082677 '.v' _iterator[2015379] F0_low[2113694]))
        ref i__retArg[2304783]:2*int(64)[1040245] "temp"
        (2304787 'move' i__retArg[2304783](2304785 'set reference' ret_tmp[2082065]))
        val this[2304790]:2*int(64)[1040245] "arg this"
        (2304792 '.=' this[2304790] x0[1040241] low[2082675])
        (2304796 '.=' this[2304790] x1[1040243] call_tmp[2082058])
        (2304800 '=' i__retArg[2304783] this[2304790])
        (2082072 'move' tmp[2082033] ret_tmp[2082065])
        (2082075 'move' tmp[2082016] tmp[2082033])
      }
      {
        const-val tmp[2082079]:2*int(64)[1040245] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        val call_tmp[2082081]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[2082083]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2082682]:int(64)[13] "temp"
        (2082687 'move' count[2082682](2082684 '.v' _iterator[2015379] F1_count[2113698]))
        (2082085 'move' call_tmp[2082083] count[2082682])
        const-val call_tmp[2082088]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val count[2082689]:int(64)[13] "temp"
        (2082694 'move' count[2082689](2082691 '.v' _iterator[2015379] F1_count[2113698]))
        const-val call_tmp[2262064]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2262066 'move' call_tmp[2262064](2262068 '-' count[2082689] 1))
        (2082090 'move' call_tmp[2082088] call_tmp[2262064])
        const-val call_tmp[2082095]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val low[2082696]:int(64)[13] "temp"
        (2082701 'move' low[2082696](2082698 '.v' _iterator[2015379] F0_low[2113694]))
        const-val call_tmp[2242746]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242748 'move' call_tmp[2242746](2242750 '+' low[2082696] call_tmp[2082088]))
        (2082097 'move' call_tmp[2082095] call_tmp[2242746])
        const-val ret_tmp[2082103]:2*int(64)[1040245] "temp"
        const-val low[2082703]:int(64)[13] "temp"
        (2082708 'move' low[2082703](2082705 '.v' _iterator[2015379] F0_low[2113694]))
        ref i__retArg[2304805]:2*int(64)[1040245] "temp"
        (2304809 'move' i__retArg[2304805](2304807 'set reference' ret_tmp[2082103]))
        val this[2304812]:2*int(64)[1040245] "arg this"
        (2304814 '.=' this[2304812] x0[1040241] low[2082703])
        (2304818 '.=' this[2304812] x1[1040243] call_tmp[2082095])
        (2304822 '=' i__retArg[2304805] this[2304812])
        (2082110 'move' tmp[2082079] ret_tmp[2082103])
        (2082113 'move' tmp[2082016] tmp[2082079])
      }
      (2082117 '=' tmp[2082014] tmp[2082016])
      (2082120 'noop')
      1
      const-ref call_tmp[2082122]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
      (2082124 'move' call_tmp[2082122](2082126 '.' tmp[2082014] x0[1040241]))
      const-val start[2082129]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2082131]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2082133 'move' coerce_tmp[2082131](2082135 'deref' call_tmp[2082122]))
      (2082137 '=' start[2082129] coerce_tmp[2082131])
      (2082140 'noop')
      const-ref call_tmp[2082141]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
      (2082143 'move' call_tmp[2082141](2082145 '.' tmp[2082014] x1[1040243]))
      const-val end[2082148]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[2082150]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (2082152 'move' coerce_tmp[2082150](2082154 'deref' call_tmp[2082141]))
      (2082156 '=' end[2082148] coerce_tmp[2082150])
      (2082159 'noop')
      val _indexOfInterest[2082160]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
      val _iterator[2082162]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
      const-val call_tmp[2082164]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[2082166]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      ref i__retArg[2306059]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2306063 'move' i__retArg[2306059](2306061 'set reference' ret_tmp[2082166]))
      val _ir[2306066]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2306068 '.=' _ir[2306066] F0_low[2115194] coerce_tmp[2082131])
      (2306072 '.=' _ir[2306066] F1_high[2115198] coerce_tmp[2082150])
      (2306076 '=' i__retArg[2306059] _ir[2306066])
      (2082173 'move' call_tmp[2082164] ret_tmp[2082166])
      ref i_ir[2309089]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
      (2309093 'move' i_ir[2309089](2309091 'set reference' call_tmp[2082164]))
      val ret[2309096]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
      val _ic_[2309098]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
      const-val call_tmp[2309100]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2309102 'move' call_tmp[2309100](2309104 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
      const-val cast_tmp[2309106]:c_void_ptr[149] "dead after last mention" "temp"
      (2309108 'move' cast_tmp[2309106](2309111 call chpl_here_alloc[187788] call_tmp[2309100] 28))
      (2309114 'move' _ic_[2309098](2309116 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2309106]))
      (2309119 'setcid' _ic_[2309098])
      (2309121 'move' ret[2309096] _ic_[2309098])
      (2309124 '.=' ret[2309096] more[1103478] 1)
      const-val tmp[2309128]:int(64)[13] "temp"
      (2309130 'move' tmp[2309128](2309132 '.v' i_ir[2309089] F0_low[2115194]))
      (2309135 '.=' ret[2309096] F0_low[2115192] tmp[2309128])
      const-val tmp[2309139]:int(64)[13] "temp"
      (2309141 'move' tmp[2309139](2309143 '.v' i_ir[2309089] F1_high[2115198]))
      (2309146 '.=' ret[2309096] F1_high[2115196] tmp[2309139])
      (2082176 'move' _iterator[2082162] ret[2309096])
      val ret[2082182]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
      val call_tmp[2082184]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val i[2082188]:int(64)[13] "dead at end of block" "insert auto destroy"
      val call_tmp[2082190]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (2082192 'move' i[2082188] 0)
      val call_tmp[2082195]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val default_arg_first[2082197]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val low[2082199]:int(64)[13] "temp"
      (2082201 'move' low[2082199](2082203 '.v' _iterator[2082162] F0_low[2115192]))
      (2082206 'move' default_arg_first[2082197] low[2082199])
      const-val default_arg_last[2082211]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
      const-val high[2082213]:int(64)[13] "temp"
      (2082215 'move' high[2082213](2082217 '.v' _iterator[2082162] F1_high[2115196]))
      (2082220 'move' default_arg_last[2082211] high[2082213])
      const-val _return_tmp_[2082225]:bool[10] "dead after last mention" "temp"
      const-val low[2082227]:int(64)[13] "temp"
      (2082229 'move' low[2082227](2082231 '.v' _iterator[2082162] F0_low[2115192]))
      const-val high[2082234]:int(64)[13] "temp"
      (2082236 'move' high[2082234](2082238 '.v' _iterator[2082162] F1_high[2115196]))
      (2082241 'move' _return_tmp_[2082225](2082244 call chpl_checkIfRangeIterWillOverflow[1096265] low[2082227] high[2082234] 1 default_arg_first[2082197] default_arg_last[2082211] 1))
      CForLoop[2082251] hazard
      {
        const-val yret[2082280]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2082282 'move' yret[2082280] i[2082188])
        const-val _yieldedIndex[2082285]:int(64)[13] "temp"
        (2082287 'move' _yieldedIndex[2082285] i[2082188])
        const-val i[2082291]:int(64)[13] "const" "index var" "insert auto destroy"
        (2082293 'move' i[2082291] _yieldedIndex[2082285])
        const-val yret[2082296]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2082298 'move' yret[2082296] _yieldedIndex[2082285])
        const-val _yieldedIndex[2082326]:int(64)[13] "temp"
        (2082652 'move' _yieldedIndex[2082326] _yieldedIndex[2082285])
        const-val i[2082328]:int(64)[13] "const" "index var" "insert auto destroy"
        (2082330 'move' i[2082328] _yieldedIndex[2082326])
        const-val yret[2082333]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2082335 'move' yret[2082333] _yieldedIndex[2082326])
        const-val _yieldedIndex[2082338]:int(64)[13] "temp"
        (2082340 'move' _yieldedIndex[2082338] _yieldedIndex[2082326])
        const-val slot[2082344]:int(64)[13] "const" "index var" "insert auto destroy"
        (2082346 'move' slot[2082344] _yieldedIndex[2082338])
        const-val yret[2082349]:int(64)[13] "dead after last mention" "YVV" "temp"
        (2082351 'move' yret[2082349] _yieldedIndex[2082338])
        const-val _yieldedIndex[2082354]:int(64)[13] "temp"
        (2082356 'move' _yieldedIndex[2082354] _yieldedIndex[2082338])
        const-val oldslot[2082360]:int(64)[13] "const" "index var" "insert auto destroy"
        (2082362 'move' oldslot[2082360] _yieldedIndex[2082354])
        ref call_tmp[2082366]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2403074]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
        (2403076 'move' call_tmp[2403074](2403078 'array_get' oldTable[1499484] oldslot[2082360]))
        (2082368 'move' call_tmp[2082366] call_tmp[2403074])
        const-ref call_tmp[2082374]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2466920]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
        (2466922 'move' call_tmp[2466920](2466924 '.' call_tmp[2082366] status[1208952]))
        (2082376 'move' call_tmp[2082374] call_tmp[2466920])
        const-val call_tmp[2082381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2082383]:chpl__hash_status[200461] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2082385 'move' coerce_tmp[2082383](2082387 'deref' call_tmp[2082374]))
        const-val call_tmp[2418790]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418792 'move' call_tmp[2418790](2418794 '==' coerce_tmp[2082383] full[200457]))
        (2082389 'move' call_tmp[2082381] call_tmp[2418790])
        const-val call_tmp[2082395]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2082397 'move' call_tmp[2082395] call_tmp[2082381])
        if call_tmp[2082395]
        {
          ref oldEntry[2082402]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "ref var"
          ref call_tmp[2082404]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "maybe param" "temp"
          ref call_tmp[2403084]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          (2403086 'move' call_tmp[2403084](2403088 'array_get' oldTable[1499484] oldslot[2082360]))
          (2082406 'move' call_tmp[2082404] call_tmp[2403084])
          (2082412 'move' oldEntry[2082402] call_tmp[2082404])
          const-ref call_tmp[2082415]:BaseDom[146767] "dead at end of block" "maybe param" "temp"
          ref call_tmp[2466964]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          (2466966 'move' call_tmp[2466964](2466968 '.' oldEntry[2082402] key[1208956]))
          (2082417 'move' call_tmp[2082415] call_tmp[2466964])
          const-val call_tmp[2082422]:(bool,int(64))[1265321] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[2082424]:BaseDom[146767] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2082426 'move' coerce_tmp[2082424](2082428 'deref' call_tmp[2082415]))
          const-val ret_tmp[2082430]:(bool,int(64))[1265321] "temp"
          (2082433 call _findSlot[1497021] this[1499452] coerce_tmp[2082424] ret_tmp[2082430])
          (2082437 'move' call_tmp[2082422] ret_tmp[2082430])
          const-val tmp[2082440]:(bool,int(64))[1265321] "dead at end of block" "insert auto destroy" "temp"
          (2082442 'move' tmp[2082440] call_tmp[2082422])
          1
          const-ref call_tmp[2082446]:bool[10] "dead at end of block" "maybe param" "temp"
          (2082448 'move' call_tmp[2082446](2082450 '.' tmp[2082440] x0[1265317]))
          const-val foundSlot[2082453]:bool[10] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[2082455]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2082457 'move' coerce_tmp[2082455](2082459 'deref' call_tmp[2082446]))
          (2082461 'move' foundSlot[2082453] coerce_tmp[2082455])
          const-ref call_tmp[2082466]:int(64)[13] "dead at end of block" "maybe param" "temp"
          (2082468 'move' call_tmp[2082466](2082470 '.' tmp[2082440] x1[1265319]))
          const-val newslot[2082473]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[2082475]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2082477 'move' coerce_tmp[2082475](2082479 'deref' call_tmp[2082466]))
          (2082481 'move' newslot[2082473] coerce_tmp[2082475])
          const-val call_tmp[2082486]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2082488 'move' call_tmp[2082486] foundSlot[2082453])
          if call_tmp[2082486]
          {
            (2082494 call halt[154111] "duplicate element found while resizing for key")
          }
          const-val call_tmp[2082497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val call_tmp[2231008]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2231010 'move' call_tmp[2231008](2231012 '<' newslot[2082473] 0))
          (2082499 'move' call_tmp[2082497] call_tmp[2231008])
          const-val call_tmp[2082504]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2082506 'move' call_tmp[2082504] call_tmp[2082497])
          if call_tmp[2082504]
          {
            (2082512 call halt[1272627] "couldn't add element during resize - got slot " newslot[2082473] " for key")
          }
          ref dstSlot[2082517]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "ref var"
          ref call_tmp[2082519]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead at end of block" "maybe param" "temp"
          const-ref _this_tmp_[2082521]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "temp"
          ref call_tmp[2401683]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
          (2401685 'move' call_tmp[2401683](2401687 '.' this[1499452] table[1208901]))
          (2082523 'move' _this_tmp_[2082521] call_tmp[2401683])
          val coerce_tmp[2082528]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (2082530 'move' coerce_tmp[2082528](2082532 'deref' _this_tmp_[2082521]))
          ref call_tmp[2403094]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
          (2403096 'move' call_tmp[2403094](2403098 'array_get' coerce_tmp[2082528] newslot[2082473]))
          (2082534 'move' call_tmp[2082519] call_tmp[2403094])
          (2082540 'move' dstSlot[2082517] call_tmp[2082519])
          ref call_tmp[2082543]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2466930]:chpl__hash_status[200461] "dead after last mention" "maybe param" "temp"
          (2466932 'move' call_tmp[2466930](2466934 '.' dstSlot[2082517] status[1208952]))
          (2082545 'move' call_tmp[2082543] call_tmp[2466930])
          (2424383 '=' call_tmp[2082543] full[200457])
          ref call_tmp[2082554]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2466974]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          (2466976 'move' call_tmp[2466974](2466978 '.' dstSlot[2082517] key[1208956]))
          (2082556 'move' call_tmp[2082554] call_tmp[2466974])
          const-ref call_tmp[2082561]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2466984]:BaseDom[146767] "dead after last mention" "maybe param" "temp"
          (2466986 'move' call_tmp[2466984](2466988 '.' oldEntry[2082402] key[1208956]))
          (2082563 'move' call_tmp[2082561] call_tmp[2466984])
          val call_tmp[2082568]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp"
          (2082570 'move' call_tmp[2082568](2082573 call _moveToReturn[1498678] call_tmp[2082561]))
          (2082576 call _moveInit[1500371] call_tmp[2082554] call_tmp[2082568])
          none[57]
          none[57]
          (2082586 call _moveToReturn[1277881])
          (2082588 call _moveInit[1277957])
          const-ref call_tmp[2082589]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
          ref call_tmp[2467210]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
          (2467212 'move' call_tmp[2467210](2467214 '.' this[1499452] rehashHelpers[1208909]))
          (2082591 'move' call_tmp[2082589] call_tmp[2467210])
          const-val call_tmp[2082596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          val coerce_tmp[2082598]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2082600 'move' coerce_tmp[2082598](2082603 call borrow[1218144] call_tmp[2082589]))
          val coerce_tmp[2082605]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2082607 'move' coerce_tmp[2082605](2082609 'cast' object[22] coerce_tmp[2082598]))
          const-val call_tmp[2228197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2228199 'move' call_tmp[2228197](2228201 'ptr_neq' coerce_tmp[2082605] nil[44]))
          (2082612 'move' call_tmp[2082596] call_tmp[2228197])
          const-val call_tmp[2082618]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2082620 'move' call_tmp[2082618] call_tmp[2082596])
          if call_tmp[2082618]
          {
            const-ref call_tmp[2082625]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
            ref call_tmp[2467220]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
            (2467222 'move' call_tmp[2467220](2467224 '.' this[1499452] rehashHelpers[1208909]))
            (2082627 'move' call_tmp[2082625] call_tmp[2467220])
            val call_tmp[2082632]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
            val coerce_tmp[2418589]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418591 'move' coerce_tmp[2418589](2418593 '.v' call_tmp[2082625] chpl_p[1208751]))
            val coerce_tmp[2418596]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418598 'move' coerce_tmp[2418596](2418600 'cast' object[22] coerce_tmp[2418589]))
            const-val call_tmp[2418603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (2418605 'move' call_tmp[2418603](2418607 'ptr_eq' coerce_tmp[2418596] nil[44]))
            if call_tmp[2418603]
            {
              (2418613 call nilCheckHalt[210238] "argument to ! is nil")
            }
            val coerce_tmp[2418616]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2418618 'move' coerce_tmp[2418616](2418620 '.v' call_tmp[2082625] chpl_p[1208751]))
            (2082634 'move' call_tmp[2082632] coerce_tmp[2418616])
            (2082640 call moveElementDuringRehash[202375] call_tmp[2082632] oldslot[2082360] newslot[2082473])
          }
          ref i_x[2518937]:(bool,int(64))[1265321] "temp"
          (2518941 'move' i_x[2518937](2518939 'set reference' tmp[2082440]))
        }
        {
          const-val low[2082253]:int(64)[13] "temp"
          (2082255 'move' low[2082253](2082257 '.v' _iterator[2082162] F0_low[2115192]))
          (2082260 '=' i[2082188] low[2082253])
        }
        {
          const-val high[2082264]:int(64)[13] "temp"
          (2082266 'move' high[2082264](2082268 '.v' _iterator[2082162] F1_high[2115196]))
          (2082271 '<=' i[2082188] high[2082264])
        }
        {
          val call_tmp[2082275]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          (2082277 '+=' i[2082188] 1)
        }
      }
      label _endchpl_direct_param_stride_range_iter[2082314]
      const-val call_tmp[2311075]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2311077 'move' call_tmp[2311075](2311079 'cast_to_void_star' _iterator[2082162]))
      (2311082 call chpl_here_free[188127] call_tmp[2311075])
      ref i_x[2311818]:2*int(64)[1040245] "temp"
      (2311822 'move' i_x[2311818](2311820 'set reference' tmp[2082014]))
      label _endchpl_direct_counted_range_iter_helper[2082322]
      const-val call_tmp[2312008]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2312010 'move' call_tmp[2312008](2312012 'cast_to_void_star' _iterator[2015379]))
      (2312015 call chpl_here_free[188127] call_tmp[2312008])
      label _endchpl_direct_counted_range_iter[2015457]
      const-val call_tmp[2312620]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2312622 'move' call_tmp[2312620](2312624 'cast_to_void_star' _iterator[2015355]))
      (2312627 call chpl_here_free[188127] call_tmp[2312620])
      label _end_allSlots[2015462]
      const-val call_tmp[2402987]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2402989 'move' call_tmp[2402987](2402991 'cast_to_void_star' _iterator[1499670]))
      (2402994 call chpl_here_free[188127] call_tmp[2402987])
      const-ref call_tmp[1499994]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467160]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2467162 'move' call_tmp[2467160](2467164 '.' this[1499452] rehashHelpers[1208909]))
      (1499996 'move' call_tmp[1499994] call_tmp[2467160])
      const-val call_tmp[1500002]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1500480]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500486 'move' coerce_tmp[1500480](1500482 call borrow[1218144] call_tmp[1499994]))
      val coerce_tmp[1500489]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500495 'move' coerce_tmp[1500489](1500491 'cast' object[22] coerce_tmp[1500480]))
      const-val call_tmp[2227057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227059 'move' call_tmp[2227057](2227061 'ptr_neq' coerce_tmp[1500489] nil[44]))
      (1500004 'move' call_tmp[1500002] call_tmp[2227057])
      const-val call_tmp[1500010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1500012 'move' call_tmp[1500010] call_tmp[1500002])
      if call_tmp[1500010]
      {
        const-ref call_tmp[1500019]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2467170]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2467172 'move' call_tmp[2467170](2467174 '.' this[1499452] rehashHelpers[1208909]))
        (1500021 'move' call_tmp[1500019] call_tmp[2467170])
        val call_tmp[1500027]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418441]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418443 'move' coerce_tmp[2418441](2418445 '.v' call_tmp[1500019] chpl_p[1208751]))
        val coerce_tmp[2418448]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418450 'move' coerce_tmp[2418448](2418452 'cast' object[22] coerce_tmp[2418441]))
        const-val call_tmp[2418455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418457 'move' call_tmp[2418455](2418459 'ptr_eq' coerce_tmp[2418448] nil[44]))
        if call_tmp[2418455]
        {
          (2418465 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418468]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418470 'move' coerce_tmp[2418468](2418472 '.v' call_tmp[1500019] chpl_p[1208751]))
        (1500029 'move' call_tmp[1500027] coerce_tmp[2418468])
        (1500038 call finishRehash[202390] call_tmp[1500027] oldSize[1499470])
      }
      (1500044 call _freeData[1500501] oldTable[1499484] oldSize[1499470])
    }
    {
      const-ref call_tmp[1500051]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467180]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
      (2467182 'move' call_tmp[2467180](2467184 '.' this[1499452] rehashHelpers[1208909]))
      (1500053 'move' call_tmp[1500051] call_tmp[2467180])
      const-val call_tmp[1500059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1500628]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500634 'move' coerce_tmp[1500628](1500630 call borrow[1218144] call_tmp[1500051]))
      val coerce_tmp[1500637]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500643 'move' coerce_tmp[1500637](1500639 'cast' object[22] coerce_tmp[1500628]))
      const-val call_tmp[2227067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227069 'move' call_tmp[2227067](2227071 'ptr_neq' coerce_tmp[1500637] nil[44]))
      (1500061 'move' call_tmp[1500059] call_tmp[2227067])
      const-val call_tmp[1500067]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1500069 'move' call_tmp[1500067] call_tmp[1500059])
      if call_tmp[1500067]
      {
        const-ref call_tmp[1500076]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2467190]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2467192 'move' call_tmp[2467190](2467194 '.' this[1499452] rehashHelpers[1208909]))
        (1500078 'move' call_tmp[1500076] call_tmp[2467190])
        val call_tmp[1500084]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418478]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418480 'move' coerce_tmp[2418478](2418482 '.v' call_tmp[1500076] chpl_p[1208751]))
        val coerce_tmp[2418485]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418487 'move' coerce_tmp[2418485](2418489 'cast' object[22] coerce_tmp[2418478]))
        const-val call_tmp[2418492]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418494 'move' call_tmp[2418492](2418496 'ptr_eq' coerce_tmp[2418485] nil[44]))
        if call_tmp[2418492]
        {
          (2418502 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418505]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418507 'move' coerce_tmp[2418505](2418509 '.v' call_tmp[1500076] chpl_p[1208751]))
        (1500086 'move' call_tmp[1500084] coerce_tmp[2418505])
        const-ref call_tmp[1500091]:int(64)[13] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2401767]:int(64)[13] "dead after last mention" "maybe param" "temp"
        (2401769 'move' call_tmp[2401767](2401771 '.' this[1499452] tableSize[1208898]))
        (1500093 'move' call_tmp[1500091] call_tmp[2401767])
        const-val coerce_tmp[1500649]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1500653 'move' coerce_tmp[1500649](1500651 'deref' call_tmp[1500091]))
        (1500103 call startRehash[202364] call_tmp[1500084] coerce_tmp[1500649])
        const-ref call_tmp[1500106]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        ref call_tmp[2467200]:owned chpl__rehashHelpers?[1208756] "dead after last mention" "maybe param" "temp"
        (2467202 'move' call_tmp[2467200](2467204 '.' this[1499452] rehashHelpers[1208909]))
        (1500108 'move' call_tmp[1500106] call_tmp[2467200])
        val call_tmp[1500114]:chpl__rehashHelpers[202396] "dead after last mention" "expr temp" "maybe param" "temp"
        val coerce_tmp[2418515]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418517 'move' coerce_tmp[2418515](2418519 '.v' call_tmp[1500106] chpl_p[1208751]))
        val coerce_tmp[2418522]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418524 'move' coerce_tmp[2418522](2418526 'cast' object[22] coerce_tmp[2418515]))
        const-val call_tmp[2418529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2418531 'move' call_tmp[2418529](2418533 'ptr_eq' coerce_tmp[2418522] nil[44]))
        if call_tmp[2418529]
        {
          (2418539 call nilCheckHalt[210238] "argument to ! is nil")
        }
        val coerce_tmp[2418542]:chpl__rehashHelpers[202396] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2418544 'move' coerce_tmp[2418542](2418546 '.v' call_tmp[1500106] chpl_p[1208751]))
        (1500116 'move' call_tmp[1500114] coerce_tmp[2418542])
        (1500125 call finishRehash[202390] call_tmp[1500114] oldSize[1499470])
      }
      (1500131 call _freeData[1500501] oldTable[1499484] oldSize[1499470])
      ref call_tmp[1500137]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2401643]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "maybe param" "temp"
      (2401645 'move' call_tmp[2401643](2401647 '.' this[1499452] table[1208901]))
      (1500139 'move' call_tmp[1500137] call_tmp[2401643])
      const-ref call_tmp[1500145]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2401777]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2401779 'move' call_tmp[2401777](2401781 '.' this[1499452] tableSize[1208898]))
      (1500147 'move' call_tmp[1500145] call_tmp[2401777])
      val call_tmp[1500153]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1500662]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1500666 'move' coerce_tmp[1500662](1500664 'deref' call_tmp[1500145]))
      (1500155 'move' call_tmp[1500153](1500161 call allocateTable[1218663] this[1499452] coerce_tmp[1500662]))
      (2401919 '=' call_tmp[1500137] call_tmp[1500153])
      ref call_tmp[1500168]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467081]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2467083 'move' call_tmp[2467081](2467085 '.' this[1499452] tableNumDeletedSlots[1208892]))
      (1500170 'move' call_tmp[1500168] call_tmp[2467081])
      val inlineImm[2237819]:int(64)[13] "temp"
      (2237822 'move' inlineImm[2237819] 0)
      (2237825 '=' call_tmp[1500168] inlineImm[2237819])
    }
    (1500181 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseArr,nothing)[1208617].resize[1265908](ref arg this[1265912]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617], const in arg grow[1265914]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1265920]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2418087]:bool[10] "dead after last mention" "maybe param" "temp"
    (2418089 'move' call_tmp[2418087](2418091 '.' this[1265912] postponeResize[1208614]))
    (1265922 'move' call_tmp[1265920] call_tmp[2418087])
    const-val call_tmp[1265928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1266182]:bool[10] "dead after last mention" "const" "temp"
    (1266184 'move' tmp[1266182](1266186 'deref' call_tmp[1265920]))
    (1265930 'move' call_tmp[1265928] tmp[1266182])
    if call_tmp[1265928]
    {
      gotoReturn _end_resize[1266149] _end_resize[1266149]
    }
    const-ref call_tmp[1265940]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2418101]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2418103 'move' call_tmp[2418101](2418105 '.' this[1265912] tableSizeNum[1208595]))
    (1265942 'move' call_tmp[1265940] call_tmp[2418101])
    val newSizeNum[1265948]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1266218]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1266222 'move' coerce_tmp[1266218](1266220 'deref' call_tmp[1265940]))
    (1924770 '=' newSizeNum[1265948] coerce_tmp[1266218])
    (1265950 'noop')
    val tmp[1265954]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1265956]:bool[10] "dead after last mention" "maybe param" "temp"
    (1265958 'move' tmp[1265956] grow[1265914])
    if tmp[1265956]
    {
      (1265965 'move' tmp[1265954] 1)
    }
    {
      (1265978 'move' tmp[1265954] -1)
    }
    ref i_lhs[2295698]:int(64)[13] "temp"
    (2295702 'move' i_lhs[2295698](2295700 'set reference' newSizeNum[1265948]))
    (2295705 '+=' i_lhs[2295698] tmp[1265954])
    const-val call_tmp[1265990]:57*int(64)[1210674] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907166]:57*int(64)[1210674] "temp"
    ref i__retArg[2324068]:57*int(64)[1210674] "temp"
    (2324072 'move' i__retArg[2324068](2324070 'set reference' ret_tmp[1907166]))
    val this[2324075]:57*int(64)[1210674] "arg this"
    (2324077 '.=' this[2324075] x0[1210560] 0)
    (2324081 '.=' this[2324075] x1[1210562] 23)
    (2324085 '.=' this[2324075] x2[1210564] 53)
    (2324089 '.=' this[2324075] x3[1210566] 89)
    (2324093 '.=' this[2324075] x4[1210568] 191)
    (2324097 '.=' this[2324075] x5[1210570] 383)
    (2324101 '.=' this[2324075] x6[1210572] 761)
    (2324105 '.=' this[2324075] x7[1210574] 1531)
    (2324109 '.=' this[2324075] x8[1210576] 3067)
    (2324113 '.=' this[2324075] x9[1210578] 6143)
    (2324117 '.=' this[2324075] x10[1210580] 12281)
    (2324121 '.=' this[2324075] x11[1210582] 24571)
    (2324125 '.=' this[2324075] x12[1210584] 49139)
    (2324129 '.=' this[2324075] x13[1210586] 98299)
    (2324133 '.=' this[2324075] x14[1210588] 196597)
    (2324137 '.=' this[2324075] x15[1210590] 393209)
    (2324141 '.=' this[2324075] x16[1210592] 786431)
    (2324145 '.=' this[2324075] x17[1210594] 1572853)
    (2324149 '.=' this[2324075] x18[1210596] 3145721)
    (2324153 '.=' this[2324075] x19[1210598] 6291449)
    (2324157 '.=' this[2324075] x20[1210600] 12582893)
    (2324161 '.=' this[2324075] x21[1210602] 25165813)
    (2324165 '.=' this[2324075] x22[1210604] 50331599)
    (2324169 '.=' this[2324075] x23[1210606] 100663291)
    (2324173 '.=' this[2324075] x24[1210608] 201326557)
    (2324177 '.=' this[2324075] x25[1210610] 402653171)
    (2324181 '.=' this[2324075] x26[1210612] 805306357)
    (2324185 '.=' this[2324075] x27[1210614] 1610612711)
    (2324189 '.=' this[2324075] x28[1210616] 3221225461)
    (2324193 '.=' this[2324075] x29[1210618] 6442450939)
    (2324197 '.=' this[2324075] x30[1210620] 12884901877)
    (2324201 '.=' this[2324075] x31[1210622] 25769803751)
    (2324205 '.=' this[2324075] x32[1210624] 51539607551)
    (2324209 '.=' this[2324075] x33[1210626] 103079215087)
    (2324213 '.=' this[2324075] x34[1210628] 206158430183)
    (2324217 '.=' this[2324075] x35[1210630] 412316860387)
    (2324221 '.=' this[2324075] x36[1210632] 824633720831)
    (2324225 '.=' this[2324075] x37[1210634] 1649267441651)
    (2324229 '.=' this[2324075] x38[1210636] 3298534883309)
    (2324233 '.=' this[2324075] x39[1210638] 6597069766631)
    (2324237 '.=' this[2324075] x40[1210640] 13194139533299)
    (2324241 '.=' this[2324075] x41[1210642] 26388279066623)
    (2324245 '.=' this[2324075] x42[1210644] 52776558133177)
    (2324249 '.=' this[2324075] x43[1210646] 105553116266489)
    (2324253 '.=' this[2324075] x44[1210648] 211106232532969)
    (2324257 '.=' this[2324075] x45[1210650] 422212465065953)
    (2324261 '.=' this[2324075] x46[1210652] 844424930131963)
    (2324265 '.=' this[2324075] x47[1210654] 1688849860263901)
    (2324269 '.=' this[2324075] x48[1210656] 3377699720527861)
    (2324273 '.=' this[2324075] x49[1210658] 6755399441055731)
    (2324277 '.=' this[2324075] x50[1210660] 13510798882111483)
    (2324281 '.=' this[2324075] x51[1210662] 27021597764222939)
    (2324285 '.=' this[2324075] x52[1210664] 54043195528445869)
    (2324289 '.=' this[2324075] x53[1210666] 108086391056891903)
    (2324293 '.=' this[2324075] x54[1210668] 216172782113783773)
    (2324297 '.=' this[2324075] x55[1210670] 432345564227567561)
    (2324301 '.=' this[2324075] x56[1210672] 864691128455135207)
    (2324305 '=' i__retArg[2324068] this[2324075])
    (1907169 'move' call_tmp[1265990] ret_tmp[1907166])
    const-val call_tmp[1266004]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2240532]:int(64)[13] "temp"
    (2240535 'move' inlineImm[2240532] 57)
    const-val call_tmp[2240538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240540 'move' call_tmp[2240538](2240542 '>' newSizeNum[1265948] inlineImm[2240532]))
    (1266006 'move' call_tmp[1266004] call_tmp[2240538])
    const-val call_tmp[1266012]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1266014 'move' call_tmp[1266012] call_tmp[1266004])
    if call_tmp[1266012]
    {
      (1266022 call halt[154111] "associative array exceeds maximum size")
    }
    ref i_x[2517601]:57*int(64)[1210674] "temp"
    (2517605 'move' i_x[2517601](2517603 'set reference' call_tmp[1265990]))
    val call_tmp[1266025]:57*int(64)[1210674] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907172]:57*int(64)[1210674] "temp"
    ref i__retArg[2324310]:57*int(64)[1210674] "temp"
    (2324314 'move' i__retArg[2324310](2324312 'set reference' ret_tmp[1907172]))
    val this[2324317]:57*int(64)[1210674] "arg this"
    (2324319 '.=' this[2324317] x0[1210560] 0)
    (2324323 '.=' this[2324317] x1[1210562] 23)
    (2324327 '.=' this[2324317] x2[1210564] 53)
    (2324331 '.=' this[2324317] x3[1210566] 89)
    (2324335 '.=' this[2324317] x4[1210568] 191)
    (2324339 '.=' this[2324317] x5[1210570] 383)
    (2324343 '.=' this[2324317] x6[1210572] 761)
    (2324347 '.=' this[2324317] x7[1210574] 1531)
    (2324351 '.=' this[2324317] x8[1210576] 3067)
    (2324355 '.=' this[2324317] x9[1210578] 6143)
    (2324359 '.=' this[2324317] x10[1210580] 12281)
    (2324363 '.=' this[2324317] x11[1210582] 24571)
    (2324367 '.=' this[2324317] x12[1210584] 49139)
    (2324371 '.=' this[2324317] x13[1210586] 98299)
    (2324375 '.=' this[2324317] x14[1210588] 196597)
    (2324379 '.=' this[2324317] x15[1210590] 393209)
    (2324383 '.=' this[2324317] x16[1210592] 786431)
    (2324387 '.=' this[2324317] x17[1210594] 1572853)
    (2324391 '.=' this[2324317] x18[1210596] 3145721)
    (2324395 '.=' this[2324317] x19[1210598] 6291449)
    (2324399 '.=' this[2324317] x20[1210600] 12582893)
    (2324403 '.=' this[2324317] x21[1210602] 25165813)
    (2324407 '.=' this[2324317] x22[1210604] 50331599)
    (2324411 '.=' this[2324317] x23[1210606] 100663291)
    (2324415 '.=' this[2324317] x24[1210608] 201326557)
    (2324419 '.=' this[2324317] x25[1210610] 402653171)
    (2324423 '.=' this[2324317] x26[1210612] 805306357)
    (2324427 '.=' this[2324317] x27[1210614] 1610612711)
    (2324431 '.=' this[2324317] x28[1210616] 3221225461)
    (2324435 '.=' this[2324317] x29[1210618] 6442450939)
    (2324439 '.=' this[2324317] x30[1210620] 12884901877)
    (2324443 '.=' this[2324317] x31[1210622] 25769803751)
    (2324447 '.=' this[2324317] x32[1210624] 51539607551)
    (2324451 '.=' this[2324317] x33[1210626] 103079215087)
    (2324455 '.=' this[2324317] x34[1210628] 206158430183)
    (2324459 '.=' this[2324317] x35[1210630] 412316860387)
    (2324463 '.=' this[2324317] x36[1210632] 824633720831)
    (2324467 '.=' this[2324317] x37[1210634] 1649267441651)
    (2324471 '.=' this[2324317] x38[1210636] 3298534883309)
    (2324475 '.=' this[2324317] x39[1210638] 6597069766631)
    (2324479 '.=' this[2324317] x40[1210640] 13194139533299)
    (2324483 '.=' this[2324317] x41[1210642] 26388279066623)
    (2324487 '.=' this[2324317] x42[1210644] 52776558133177)
    (2324491 '.=' this[2324317] x43[1210646] 105553116266489)
    (2324495 '.=' this[2324317] x44[1210648] 211106232532969)
    (2324499 '.=' this[2324317] x45[1210650] 422212465065953)
    (2324503 '.=' this[2324317] x46[1210652] 844424930131963)
    (2324507 '.=' this[2324317] x47[1210654] 1688849860263901)
    (2324511 '.=' this[2324317] x48[1210656] 3377699720527861)
    (2324515 '.=' this[2324317] x49[1210658] 6755399441055731)
    (2324519 '.=' this[2324317] x50[1210660] 13510798882111483)
    (2324523 '.=' this[2324317] x51[1210662] 27021597764222939)
    (2324527 '.=' this[2324317] x52[1210664] 54043195528445869)
    (2324531 '.=' this[2324317] x53[1210666] 108086391056891903)
    (2324535 '.=' this[2324317] x54[1210668] 216172782113783773)
    (2324539 '.=' this[2324317] x55[1210670] 432345564227567561)
    (2324543 '.=' this[2324317] x56[1210672] 864691128455135207)
    (2324547 '=' i__retArg[2324310] this[2324317])
    (1907175 'move' call_tmp[1266025] ret_tmp[1907172])
    const-ref call_tmp[1266031]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1266033 'move' call_tmp[1266031](1266036 call this[1211792] call_tmp[1266025] newSizeNum[1265948]))
    const-val newSize[1266038]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1266239]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1266243 'move' coerce_tmp[1266239](1266241 'deref' call_tmp[1266031]))
    (1924773 '=' newSize[1266038] coerce_tmp[1266239])
    (1266040 'noop')
    const-val tmp[1266045]:bool[10] "dead after last mention" "maybe param" "temp"
    val inlineImm[2226436]:bool[10] "temp"
    (2226439 'move' inlineImm[2226436] 0)
    const-val call_tmp[2226442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226444 'move' call_tmp[2226442](2226446 '==' grow[1265914] inlineImm[2226436]))
    (1266047 'move' tmp[1266045] call_tmp[2226442])
    val tmp[1266066]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1266068]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1266070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1266072 'move' call_tmp[1266070] tmp[1266045])
    (1266077 'move' tmp[1266068] call_tmp[1266070])
    if tmp[1266068]
    {
      const-val tmp[1266084]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[1266086]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2417959]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2417961 'move' call_tmp[2417959](2417963 '.' this[1265912] tableNumFullSlots[1208589]))
      (1266088 'move' call_tmp[1266086] call_tmp[2417959])
      const-val call_tmp[1266094]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1266267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1266271 'move' coerce_tmp[1266267](1266269 'deref' call_tmp[1266086]))
      const-val call_tmp[2342304]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342306 'move' call_tmp[2342304](2342308 '*' 2 coerce_tmp[1266267]))
      (1266096 'move' call_tmp[1266094] call_tmp[2342304])
      const-val call_tmp[1266102]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2240548]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240550 'move' call_tmp[2240548](2240552 '>' call_tmp[1266094] newSize[1266038]))
      (1266104 'move' call_tmp[1266102] call_tmp[2240548])
      (1266110 'move' tmp[1266084] call_tmp[1266102])
      (1266115 'move' tmp[1266066] tmp[1266084])
    }
    {
      (1266121 'move' tmp[1266066] 0)
    }
    const-val call_tmp[1266127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1266129 'move' call_tmp[1266127] tmp[1266066])
    if call_tmp[1266127]
    {
      ref i_x[2517610]:57*int(64)[1210674] "temp"
      (2517614 'move' i_x[2517610](2517612 'set reference' call_tmp[1266025]))
      gotoReturn _end_resize[1266149] _end_resize[1266149]
    }
    (1266143 call rehash[1266275] this[1265912] newSizeNum[1265948] newSize[1266038])
    ref i_x[2517619]:57*int(64)[1210674] "temp"
    (2517623 'move' i_x[2517619](2517621 'set reference' call_tmp[1266025]))
    label _end_resize[1266149]
    (1266151 return _void[55])
  }
  function chpl__hashtable(unmanaged BaseDom,nothing)[1208917].resize[1499124](ref arg this[1499128]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917], const in arg grow[1499130]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1499136]:bool[10] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2467129]:bool[10] "dead after last mention" "maybe param" "temp"
    (2467131 'move' call_tmp[2467129](2467133 '.' this[1499128] postponeResize[1208914]))
    (1499138 'move' call_tmp[1499136] call_tmp[2467129])
    const-val call_tmp[1499144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val tmp[1499398]:bool[10] "dead after last mention" "const" "temp"
    (1499400 'move' tmp[1499398](1499402 'deref' call_tmp[1499136]))
    (1499146 'move' call_tmp[1499144] tmp[1499398])
    if call_tmp[1499144]
    {
      gotoReturn _end_resize[1499365] _end_resize[1499365]
    }
    const-ref call_tmp[1499156]:int(64)[13] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2467105]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2467107 'move' call_tmp[2467105](2467109 '.' this[1499128] tableSizeNum[1208895]))
    (1499158 'move' call_tmp[1499156] call_tmp[2467105])
    val newSizeNum[1499164]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1499407]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1499411 'move' coerce_tmp[1499407](1499409 'deref' call_tmp[1499156]))
    (1926693 '=' newSizeNum[1499164] coerce_tmp[1499407])
    (1499166 'noop')
    val tmp[1499170]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1499172]:bool[10] "dead after last mention" "maybe param" "temp"
    (1499174 'move' tmp[1499172] grow[1499130])
    if tmp[1499172]
    {
      (1499181 'move' tmp[1499170] 1)
    }
    {
      (1499194 'move' tmp[1499170] -1)
    }
    ref i_lhs[2295841]:int(64)[13] "temp"
    (2295845 'move' i_lhs[2295841](2295843 'set reference' newSizeNum[1499164]))
    (2295848 '+=' i_lhs[2295841] tmp[1499170])
    const-val call_tmp[1499206]:57*int(64)[1210674] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907178]:57*int(64)[1210674] "temp"
    ref i__retArg[2324552]:57*int(64)[1210674] "temp"
    (2324556 'move' i__retArg[2324552](2324554 'set reference' ret_tmp[1907178]))
    val this[2324559]:57*int(64)[1210674] "arg this"
    (2324561 '.=' this[2324559] x0[1210560] 0)
    (2324565 '.=' this[2324559] x1[1210562] 23)
    (2324569 '.=' this[2324559] x2[1210564] 53)
    (2324573 '.=' this[2324559] x3[1210566] 89)
    (2324577 '.=' this[2324559] x4[1210568] 191)
    (2324581 '.=' this[2324559] x5[1210570] 383)
    (2324585 '.=' this[2324559] x6[1210572] 761)
    (2324589 '.=' this[2324559] x7[1210574] 1531)
    (2324593 '.=' this[2324559] x8[1210576] 3067)
    (2324597 '.=' this[2324559] x9[1210578] 6143)
    (2324601 '.=' this[2324559] x10[1210580] 12281)
    (2324605 '.=' this[2324559] x11[1210582] 24571)
    (2324609 '.=' this[2324559] x12[1210584] 49139)
    (2324613 '.=' this[2324559] x13[1210586] 98299)
    (2324617 '.=' this[2324559] x14[1210588] 196597)
    (2324621 '.=' this[2324559] x15[1210590] 393209)
    (2324625 '.=' this[2324559] x16[1210592] 786431)
    (2324629 '.=' this[2324559] x17[1210594] 1572853)
    (2324633 '.=' this[2324559] x18[1210596] 3145721)
    (2324637 '.=' this[2324559] x19[1210598] 6291449)
    (2324641 '.=' this[2324559] x20[1210600] 12582893)
    (2324645 '.=' this[2324559] x21[1210602] 25165813)
    (2324649 '.=' this[2324559] x22[1210604] 50331599)
    (2324653 '.=' this[2324559] x23[1210606] 100663291)
    (2324657 '.=' this[2324559] x24[1210608] 201326557)
    (2324661 '.=' this[2324559] x25[1210610] 402653171)
    (2324665 '.=' this[2324559] x26[1210612] 805306357)
    (2324669 '.=' this[2324559] x27[1210614] 1610612711)
    (2324673 '.=' this[2324559] x28[1210616] 3221225461)
    (2324677 '.=' this[2324559] x29[1210618] 6442450939)
    (2324681 '.=' this[2324559] x30[1210620] 12884901877)
    (2324685 '.=' this[2324559] x31[1210622] 25769803751)
    (2324689 '.=' this[2324559] x32[1210624] 51539607551)
    (2324693 '.=' this[2324559] x33[1210626] 103079215087)
    (2324697 '.=' this[2324559] x34[1210628] 206158430183)
    (2324701 '.=' this[2324559] x35[1210630] 412316860387)
    (2324705 '.=' this[2324559] x36[1210632] 824633720831)
    (2324709 '.=' this[2324559] x37[1210634] 1649267441651)
    (2324713 '.=' this[2324559] x38[1210636] 3298534883309)
    (2324717 '.=' this[2324559] x39[1210638] 6597069766631)
    (2324721 '.=' this[2324559] x40[1210640] 13194139533299)
    (2324725 '.=' this[2324559] x41[1210642] 26388279066623)
    (2324729 '.=' this[2324559] x42[1210644] 52776558133177)
    (2324733 '.=' this[2324559] x43[1210646] 105553116266489)
    (2324737 '.=' this[2324559] x44[1210648] 211106232532969)
    (2324741 '.=' this[2324559] x45[1210650] 422212465065953)
    (2324745 '.=' this[2324559] x46[1210652] 844424930131963)
    (2324749 '.=' this[2324559] x47[1210654] 1688849860263901)
    (2324753 '.=' this[2324559] x48[1210656] 3377699720527861)
    (2324757 '.=' this[2324559] x49[1210658] 6755399441055731)
    (2324761 '.=' this[2324559] x50[1210660] 13510798882111483)
    (2324765 '.=' this[2324559] x51[1210662] 27021597764222939)
    (2324769 '.=' this[2324559] x52[1210664] 54043195528445869)
    (2324773 '.=' this[2324559] x53[1210666] 108086391056891903)
    (2324777 '.=' this[2324559] x54[1210668] 216172782113783773)
    (2324781 '.=' this[2324559] x55[1210670] 432345564227567561)
    (2324785 '.=' this[2324559] x56[1210672] 864691128455135207)
    (2324789 '=' i__retArg[2324552] this[2324559])
    (1907181 'move' call_tmp[1499206] ret_tmp[1907178])
    const-val call_tmp[1499220]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val inlineImm[2240912]:int(64)[13] "temp"
    (2240915 'move' inlineImm[2240912] 57)
    const-val call_tmp[2240918]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2240920 'move' call_tmp[2240918](2240922 '>' newSizeNum[1499164] inlineImm[2240912]))
    (1499222 'move' call_tmp[1499220] call_tmp[2240918])
    const-val call_tmp[1499228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499230 'move' call_tmp[1499228] call_tmp[1499220])
    if call_tmp[1499228]
    {
      (1499238 call halt[154111] "associative array exceeds maximum size")
    }
    ref i_x[2517628]:57*int(64)[1210674] "temp"
    (2517632 'move' i_x[2517628](2517630 'set reference' call_tmp[1499206]))
    val call_tmp[1499241]:57*int(64)[1210674] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907184]:57*int(64)[1210674] "temp"
    ref i__retArg[2324794]:57*int(64)[1210674] "temp"
    (2324798 'move' i__retArg[2324794](2324796 'set reference' ret_tmp[1907184]))
    val this[2324801]:57*int(64)[1210674] "arg this"
    (2324803 '.=' this[2324801] x0[1210560] 0)
    (2324807 '.=' this[2324801] x1[1210562] 23)
    (2324811 '.=' this[2324801] x2[1210564] 53)
    (2324815 '.=' this[2324801] x3[1210566] 89)
    (2324819 '.=' this[2324801] x4[1210568] 191)
    (2324823 '.=' this[2324801] x5[1210570] 383)
    (2324827 '.=' this[2324801] x6[1210572] 761)
    (2324831 '.=' this[2324801] x7[1210574] 1531)
    (2324835 '.=' this[2324801] x8[1210576] 3067)
    (2324839 '.=' this[2324801] x9[1210578] 6143)
    (2324843 '.=' this[2324801] x10[1210580] 12281)
    (2324847 '.=' this[2324801] x11[1210582] 24571)
    (2324851 '.=' this[2324801] x12[1210584] 49139)
    (2324855 '.=' this[2324801] x13[1210586] 98299)
    (2324859 '.=' this[2324801] x14[1210588] 196597)
    (2324863 '.=' this[2324801] x15[1210590] 393209)
    (2324867 '.=' this[2324801] x16[1210592] 786431)
    (2324871 '.=' this[2324801] x17[1210594] 1572853)
    (2324875 '.=' this[2324801] x18[1210596] 3145721)
    (2324879 '.=' this[2324801] x19[1210598] 6291449)
    (2324883 '.=' this[2324801] x20[1210600] 12582893)
    (2324887 '.=' this[2324801] x21[1210602] 25165813)
    (2324891 '.=' this[2324801] x22[1210604] 50331599)
    (2324895 '.=' this[2324801] x23[1210606] 100663291)
    (2324899 '.=' this[2324801] x24[1210608] 201326557)
    (2324903 '.=' this[2324801] x25[1210610] 402653171)
    (2324907 '.=' this[2324801] x26[1210612] 805306357)
    (2324911 '.=' this[2324801] x27[1210614] 1610612711)
    (2324915 '.=' this[2324801] x28[1210616] 3221225461)
    (2324919 '.=' this[2324801] x29[1210618] 6442450939)
    (2324923 '.=' this[2324801] x30[1210620] 12884901877)
    (2324927 '.=' this[2324801] x31[1210622] 25769803751)
    (2324931 '.=' this[2324801] x32[1210624] 51539607551)
    (2324935 '.=' this[2324801] x33[1210626] 103079215087)
    (2324939 '.=' this[2324801] x34[1210628] 206158430183)
    (2324943 '.=' this[2324801] x35[1210630] 412316860387)
    (2324947 '.=' this[2324801] x36[1210632] 824633720831)
    (2324951 '.=' this[2324801] x37[1210634] 1649267441651)
    (2324955 '.=' this[2324801] x38[1210636] 3298534883309)
    (2324959 '.=' this[2324801] x39[1210638] 6597069766631)
    (2324963 '.=' this[2324801] x40[1210640] 13194139533299)
    (2324967 '.=' this[2324801] x41[1210642] 26388279066623)
    (2324971 '.=' this[2324801] x42[1210644] 52776558133177)
    (2324975 '.=' this[2324801] x43[1210646] 105553116266489)
    (2324979 '.=' this[2324801] x44[1210648] 211106232532969)
    (2324983 '.=' this[2324801] x45[1210650] 422212465065953)
    (2324987 '.=' this[2324801] x46[1210652] 844424930131963)
    (2324991 '.=' this[2324801] x47[1210654] 1688849860263901)
    (2324995 '.=' this[2324801] x48[1210656] 3377699720527861)
    (2324999 '.=' this[2324801] x49[1210658] 6755399441055731)
    (2325003 '.=' this[2324801] x50[1210660] 13510798882111483)
    (2325007 '.=' this[2324801] x51[1210662] 27021597764222939)
    (2325011 '.=' this[2324801] x52[1210664] 54043195528445869)
    (2325015 '.=' this[2324801] x53[1210666] 108086391056891903)
    (2325019 '.=' this[2324801] x54[1210668] 216172782113783773)
    (2325023 '.=' this[2324801] x55[1210670] 432345564227567561)
    (2325027 '.=' this[2324801] x56[1210672] 864691128455135207)
    (2325031 '=' i__retArg[2324794] this[2324801])
    (1907187 'move' call_tmp[1499241] ret_tmp[1907184])
    const-ref call_tmp[1499247]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1499249 'move' call_tmp[1499247](1499252 call this[1211792] call_tmp[1499241] newSizeNum[1499164]))
    const-val newSize[1499254]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1499428]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1499432 'move' coerce_tmp[1499428](1499430 'deref' call_tmp[1499247]))
    (1926696 '=' newSize[1499254] coerce_tmp[1499428])
    (1499256 'noop')
    const-val tmp[1499261]:bool[10] "dead after last mention" "maybe param" "temp"
    val inlineImm[2226461]:bool[10] "temp"
    (2226464 'move' inlineImm[2226461] 0)
    const-val call_tmp[2226467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226469 'move' call_tmp[2226467](2226471 '==' grow[1499130] inlineImm[2226461]))
    (1499263 'move' tmp[1499261] call_tmp[2226467])
    val tmp[1499282]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1499284]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1499286]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499288 'move' call_tmp[1499286] tmp[1499261])
    (1499293 'move' tmp[1499284] call_tmp[1499286])
    if tmp[1499284]
    {
      const-val tmp[1499300]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-ref call_tmp[1499302]:int(64)[13] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2467027]:int(64)[13] "dead after last mention" "maybe param" "temp"
      (2467029 'move' call_tmp[2467027](2467031 '.' this[1499128] tableNumFullSlots[1208889]))
      (1499304 'move' call_tmp[1499302] call_tmp[2467027])
      const-val call_tmp[1499310]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1499440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1499444 'move' coerce_tmp[1499440](1499442 'deref' call_tmp[1499302]))
      const-val call_tmp[2342314]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2342316 'move' call_tmp[2342314](2342318 '*' 2 coerce_tmp[1499440]))
      (1499312 'move' call_tmp[1499310] call_tmp[2342314])
      const-val call_tmp[1499318]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val call_tmp[2240928]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2240930 'move' call_tmp[2240928](2240932 '>' call_tmp[1499310] newSize[1499254]))
      (1499320 'move' call_tmp[1499318] call_tmp[2240928])
      (1499326 'move' tmp[1499300] call_tmp[1499318])
      (1499331 'move' tmp[1499282] tmp[1499300])
    }
    {
      (1499337 'move' tmp[1499282] 0)
    }
    const-val call_tmp[1499343]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1499345 'move' call_tmp[1499343] tmp[1499282])
    if call_tmp[1499343]
    {
      ref i_x[2517637]:57*int(64)[1210674] "temp"
      (2517641 'move' i_x[2517637](2517639 'set reference' call_tmp[1499241]))
      gotoReturn _end_resize[1499365] _end_resize[1499365]
    }
    (1499359 call rehash[1499448] this[1499128] newSizeNum[1499164] newSize[1499254])
    ref i_x[2517646]:57*int(64)[1210674] "temp"
    (2517650 'move' i_x[2517646](2517648 'set reference' call_tmp[1499241]))
    label _end_resize[1499365]
    (1499367 return _void[55])
  }
  type chpl__hashtable(unmanaged BaseArr,nothing)[1208617] val tableNumFullSlots[1208589]:int(64)[13] val tableNumDeletedSlots[1208592]:int(64)[13] val tableSizeNum[1208595]:int(64)[13] val tableSize[1208598]:int(64)[13] val table[1208601]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] val rehashHelpers[1208609]:owned chpl__rehashHelpers?[1208756] val postponeResize[1208614]:bool[10]
  type chpl__hashtable(unmanaged BaseDom,nothing)[1208917] val tableNumFullSlots[1208889]:int(64)[13] val tableNumDeletedSlots[1208892]:int(64)[13] val tableSizeNum[1208895]:int(64)[13] val tableSize[1208898]:int(64)[13] val table[1208901]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] val rehashHelpers[1208909]:owned chpl__rehashHelpers?[1208756] val postponeResize[1208914]:bool[10]
  function chpl__simpleSet(unmanaged BaseArr)[1208531].add[1265158](ref arg this[1265162]:chpl__simpleSet(unmanaged BaseArr)[1208531], const in arg elem[1265164]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    ref call_tmp[1265172]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2417800]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
    (2417802 'move' call_tmp[2417800](2417804 '.' this[1265162] table[1208525]))
    (1265174 'move' call_tmp[1265172] call_tmp[2417800])
    const-val call_tmp[1265180]:(bool,int(64))[1265321] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1912960]:(bool,int(64))[1265321] "temp"
    (1265188 call findAvailableSlot[1265286] call_tmp[1265172] elem[1265164] ret_tmp[1912960])
    (1912963 'move' call_tmp[1265180] ret_tmp[1912960])
    const-val tmp[1265190]:(bool,int(64))[1265321] "dead at end of block" "insert auto destroy" "temp"
    (1265192 'move' tmp[1265190] call_tmp[1265180])
    1
    const-ref call_tmp[1265200]:bool[10] "dead at end of block" "maybe param" "temp"
    (1265202 'move' call_tmp[1265200](1285809 '.' tmp[1265190] x0[1265317]))
    const-val isFullSlot[1265207]:bool[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1285814]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1285818 'move' coerce_tmp[1285814](1285816 'deref' call_tmp[1265200]))
    (1924755 '=' isFullSlot[1265207] coerce_tmp[1285814])
    (1265209 'noop')
    const-ref call_tmp[1265212]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1265214 'move' call_tmp[1265212](1285823 '.' tmp[1265190] x1[1265319]))
    const-val idx[1265219]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1285828]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1285832 'move' coerce_tmp[1285828](1285830 'deref' call_tmp[1265212]))
    (1924758 '=' idx[1265219] coerce_tmp[1285828])
    (1265221 'noop')
    const-val call_tmp[1265225]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2228526]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228528 'move' call_tmp[2228526](2228530 '!' isFullSlot[1265207]))
    (1265227 'move' call_tmp[1265225] call_tmp[2228526])
    (1265233 call assert[210432] call_tmp[1265225])
    ref call_tmp[1265237]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
    ref call_tmp[2417810]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
    (2417812 'move' call_tmp[2417810](2417814 '.' this[1265162] table[1208525]))
    (1265239 'move' call_tmp[1265237] call_tmp[2417810])
    (1265249 call fillSlot[1285900] call_tmp[1265237] idx[1265219] elem[1265164])
    ref i_x[2518856]:(bool,int(64))[1265321] "temp"
    (2518860 'move' i_x[2518856](2518858 'set reference' tmp[1265190]))
    (1265255 return _void[55])
  }
  function chpl__simpleSet(unmanaged BaseArr)[1208531].remove[1494393](ref arg this[1494397]:chpl__simpleSet(unmanaged BaseArr)[1208531], const in arg elem[1494399]:BaseArr[149584]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1494407]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2417820]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
    (2417822 'move' call_tmp[2417820](2417824 '.' this[1494397] table[1208525]))
    (1494409 'move' call_tmp[1494407] call_tmp[2417820])
    const-val call_tmp[1494415]:(bool,int(64))[1265321] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916095]:(bool,int(64))[1265321] "temp"
    (1494423 call findFullSlot[1494526] call_tmp[1494407] elem[1494399] ret_tmp[1916095])
    (1916098 'move' call_tmp[1494415] ret_tmp[1916095])
    const-val tmp[1494425]:(bool,int(64))[1265321] "dead at end of block" "insert auto destroy" "temp"
    (1494427 'move' tmp[1494425] call_tmp[1494415])
    1
    const-ref call_tmp[1494435]:bool[10] "dead at end of block" "maybe param" "temp"
    (1494437 'move' call_tmp[1494435](1494730 '.' tmp[1494425] x0[1265317]))
    const-val hasFoundSlot[1494442]:bool[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1494735]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1494739 'move' coerce_tmp[1494735](1494737 'deref' call_tmp[1494435]))
    (1926615 '=' hasFoundSlot[1494442] coerce_tmp[1494735])
    (1494444 'noop')
    const-ref call_tmp[1494447]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1494449 'move' call_tmp[1494447](1494744 '.' tmp[1494425] x1[1265319]))
    const-val idx[1494454]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1494749]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1494753 'move' coerce_tmp[1494749](1494751 'deref' call_tmp[1494447]))
    (1926618 '=' idx[1494454] coerce_tmp[1494749])
    (1494456 'noop')
    const-val call_tmp[1494460]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1494462 'move' call_tmp[1494460] hasFoundSlot[1494442])
    if call_tmp[1494460]
    {
      val key[1494469]:BaseArr[149584] "dead at end of block" "insert auto destroy" "split inited"
      val call_tmp[1494471]:BaseArr[149584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref call_tmp[1494488]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead at end of block" "maybe param" "temp"
      ref call_tmp[2417830]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
      (2417832 'move' call_tmp[2417830](2417834 '.' this[1494397] table[1208525]))
      (1494490 'move' call_tmp[1494488] call_tmp[2417830])
      val _formal_tmp_out_key[1494934]:BaseArr[149584] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      (1494500 call clearSlot[1494875] call_tmp[1494488] idx[1494454] _formal_tmp_out_key[1494934])
      (1495484 'move' key[1494469] _formal_tmp_out_key[1494934])
      ref call_tmp[1494508]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2417840]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead after last mention" "maybe param" "temp"
      (2417842 'move' call_tmp[2417840](2417844 '.' this[1494397] table[1208525]))
      (1494510 'move' call_tmp[1494508] call_tmp[2417840])
      (1494520 call maybeShrinkAfterRemove[1495297] call_tmp[1494508])
    }
    ref i_x[2518883]:(bool,int(64))[1265321] "temp"
    (2518887 'move' i_x[2518883](2518885 'set reference' tmp[1494425]))
    (1494522 return _void[55])
  }
  function chpl__simpleSet(unmanaged BaseDom)[1208831].remove[1496701](ref arg this[1496705]:chpl__simpleSet(unmanaged BaseDom)[1208831], const in arg elem[1496707]:BaseDom[146767]) : void[4] "instantiated generic" "invisible fn" "method" "primary method" "resolved" "no return value for void"
  {
    const-ref call_tmp[1496715]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead at end of block" "maybe param" "temp"
    ref call_tmp[2466702]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead after last mention" "maybe param" "temp"
    (2466704 'move' call_tmp[2466702](2466706 '.' this[1496705] table[1208825]))
    (1496717 'move' call_tmp[1496715] call_tmp[2466702])
    const-val call_tmp[1496723]:(bool,int(64))[1265321] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1916143]:(bool,int(64))[1265321] "temp"
    (1496731 call findFullSlot[1496861] call_tmp[1496715] elem[1496707] ret_tmp[1916143])
    (1916146 'move' call_tmp[1496723] ret_tmp[1916143])
    const-val tmp[1496733]:(bool,int(64))[1265321] "dead at end of block" "insert auto destroy" "temp"
    (1496735 'move' tmp[1496733] call_tmp[1496723])
    1
    const-ref call_tmp[1496743]:bool[10] "dead at end of block" "maybe param" "temp"
    (1496745 'move' call_tmp[1496743](1498309 '.' tmp[1496733] x0[1265317]))
    const-val hasFoundSlot[1496750]:bool[10] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1498314]:bool[10] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1498318 'move' coerce_tmp[1498314](1498316 'deref' call_tmp[1496743]))
    (1926643 '=' hasFoundSlot[1496750] coerce_tmp[1498314])
    (1496752 'noop')
    const-ref call_tmp[1496755]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1496757 'move' call_tmp[1496755](1498323 '.' tmp[1496733] x1[1265319]))
    const-val idx[1496762]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1498328]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1498332 'move' coerce_tmp[1498328](1498330 'deref' call_tmp[1496755]))
    (1926646 '=' idx[1496762] coerce_tmp[1498328])
    (1496764 'noop')
    const-val call_tmp[1496768]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1496770 'move' call_tmp[1496768] hasFoundSlot[1496750])
    if call_tmp[1496768]
    {
      val key[1496777]:BaseDom[146767] "dead at end of block" "insert auto destroy" "split inited"
      val call_tmp[1496779]:BaseDom[146767] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref call_tmp[1496796]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead at end of block" "maybe param" "temp"
      ref call_tmp[2466712]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead after last mention" "maybe param" "temp"
      (2466714 'move' call_tmp[2466712](2466716 '.' this[1496705] table[1208825]))
      (1496798 'move' call_tmp[1496796] call_tmp[2466712])
      val _formal_tmp_out_key[1498513]:BaseDom[146767] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
      (1496808 call clearSlot[1498454] call_tmp[1496796] idx[1496762] _formal_tmp_out_key[1498513])
      (1500672 'move' key[1496777] _formal_tmp_out_key[1498513])
      ref call_tmp[1496816]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2466722]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead after last mention" "maybe param" "temp"
      (2466724 'move' call_tmp[2466722](2466726 '.' this[1496705] table[1208825]))
      (1496818 'move' call_tmp[1496816] call_tmp[2466722])
      (1496828 call maybeShrinkAfterRemove[1498942] call_tmp[1496816])
    }
    ref i_x[2518901]:(bool,int(64))[1265321] "temp"
    (2518905 'move' i_x[2518901](2518903 'set reference' tmp[1496733]))
    (1496830 return _void[55])
  }
  type _ic_these__ref_chpl__simpleSet_BaseArr[1290408] val super[1290409]:object[22] "super class" val more[1290411]:int(64)[13] const-ref F0_this[2118017]:chpl__simpleSet(unmanaged BaseArr)[1208531] val F1__iterator[2118021]:_ic_allSlots__ref_chpl__hashtable_BaseArr_nothing[1289834] val F2__iterator[2118023]:_ic__allSlots[1221789] val F3__iterator[2118025]:_ic_chpl_direct_counted_range_iter[1103979] val F4__iterator[2118027]:_ic_chpl_direct_counted_range_iter_helper[1103729] const F5_tmp[2118029]:2*int(64)[1040245] val F6__iterator[2118031]:_ic_chpl_direct_param_stride_range_iter[1103475] val F7_i[2118033]:int(64)[13] val value[2118035]:BaseArr[149584]
  type _ir_these__ref_chpl__simpleSet_BaseArr[1290414] const-ref F0_this[2118019]:chpl__simpleSet(unmanaged BaseArr)[1208531]
  function chpl__simpleSet(unmanaged BaseDom)[1208831].init[1209317](ref arg this[1209321]:chpl__simpleSet(unmanaged BaseDom)[1208831], const  ref arg table[1209332]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879823]:BaseDom[146767] "temp"
    val _formal_tmp_table[1209358]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1209361 'move' _formal_tmp_table[1209358] table[1209332])
    (1209350 '.=' this[1209321] table[1208825] _formal_tmp_table[1209358])
    (1209355 return _void[55])
  }
  function chpl__simpleSet(unmanaged BaseArr)[1208531].init[1247657](ref arg this[1247661]:chpl__simpleSet(unmanaged BaseArr)[1208531], const  ref arg table[1247672]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617]) : void[4] "compiler generated" "instantiated generic" "invisible fn" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    val _formal_type_tmp_[1879881]:BaseArr[149584] "temp"
    val _formal_tmp_table[1247698]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1247701 'move' _formal_tmp_table[1247698] table[1247672])
    (1247690 '.=' this[1247661] table[1208525] _formal_tmp_table[1247698])
    (1247695 return _void[55])
  }
  type chpl__simpleSet(unmanaged BaseArr)[1208531] val table[1208525]:chpl__hashtable(unmanaged BaseArr,nothing)[1208617]
  type chpl__simpleSet(unmanaged BaseDom)[1208831] val table[1208825]:chpl__hashtable(unmanaged BaseDom,nothing)[1208917]
  function coforall_fn[1931518](const in arg size[1931520]:int(64)[13], const in arg numChunks[1931522]:int(64)[13], const in arg chunk[1931524]:int(64)[13], const in arg _coforallCount[1931526]:_EndCount(AtomicT(int(64)),int(64))[945532], const in arg ret[1931671]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983], const in arg sizeofElement[1931678]:uint(64)[115]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1931530]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2261564]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261566 'move' call_tmp[2261564](2261568 '-' size[1931520] 1))
    (1931532 'move' call_tmp[1931530] call_tmp[2261564])
    const-val call_tmp[1931537]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1931539]:2*int(64)[1040245] "temp"
    (1931542 call _computeBlock[1229525] size[1931520] numChunks[1931522] chunk[1931524] call_tmp[1931530] 0 0 ret_tmp[1931539])
    (1931550 'move' call_tmp[1931537] ret_tmp[1931539])
    const-val tmp[1931553]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    (1931555 'move' tmp[1931553] call_tmp[1931537])
    1
    const-ref call_tmp[1931559]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1931561 'move' call_tmp[1931559](1931563 '.' tmp[1931553] x0[1040241]))
    const-val lo[1931566]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1931568]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1931570 'move' coerce_tmp[1931568](1931572 'deref' call_tmp[1931559]))
    (1931574 '=' lo[1931566] coerce_tmp[1931568])
    (1931577 'noop')
    const-ref call_tmp[1931578]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1931580 'move' call_tmp[1931578](1931582 '.' tmp[1931553] x1[1040243]))
    const-val hi[1931585]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1931587]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1931589 'move' coerce_tmp[1931587](1931591 'deref' call_tmp[1931578]))
    (1931593 '=' hi[1931585] coerce_tmp[1931587])
    (1931596 'noop')
    val _indexOfInterest[1931598]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1931600]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1931602]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1931604]:_ir_chpl_direct_range_iter[1230579] "temp"
    ref i__retArg[2404241]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404245 'move' i__retArg[2404241](2404243 'set reference' ret_tmp[1931604]))
    val _ir[2404248]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404250 '.=' _ir[2404248] F0_low[2116766] lo[1931566])
    (2404254 '.=' _ir[2404248] F1_high[2116770] hi[1931585])
    (2404258 '=' i__retArg[2404241] _ir[2404248])
    (1931611 'move' call_tmp[1931602] ret_tmp[1931604])
    ref i_ir[2405227]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2405231 'move' i_ir[2405227](2405229 'set reference' call_tmp[1931602]))
    val ret[2405234]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "RVV" "temp"
    val _ic_[2405236]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "temp"
    const-val call_tmp[2405238]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2405240 'move' call_tmp[2405238](2405242 'sizeof_bundle' _ic_chpl_direct_range_iter[1230573]))
    const-val cast_tmp[2405244]:c_void_ptr[149] "dead after last mention" "temp"
    (2405246 'move' cast_tmp[2405244](2405249 call chpl_here_alloc[187788] call_tmp[2405238] 39))
    (2405252 'move' _ic_[2405236](2405254 'cast' _ic_chpl_direct_range_iter[1230573] cast_tmp[2405244]))
    (2405257 'setcid' _ic_[2405236])
    (2405259 'move' ret[2405234] _ic_[2405236])
    (2405262 '.=' ret[2405234] more[1230576] 1)
    const-val tmp[2405266]:int(64)[13] "temp"
    (2405268 'move' tmp[2405266](2405270 '.v' i_ir[2405227] F0_low[2116766]))
    (2405273 '.=' ret[2405234] F0_low[2116764] tmp[2405266])
    const-val tmp[2405277]:int(64)[13] "temp"
    (2405279 'move' tmp[2405277](2405281 '.v' i_ir[2405227] F1_high[2116770]))
    (2405284 '.=' ret[2405234] F1_high[2116768] tmp[2405277])
    (1931614 'move' _iterator[1931600] ret[2405234])
    val ret[2031139]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2031141]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2031143]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2031145]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2031147]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    const-val low[2031358]:int(64)[13] "temp"
    (2031363 'move' low[2031358](2031360 '.v' _iterator[1931600] F0_low[2116764]))
    const-val high[2031365]:int(64)[13] "temp"
    (2031370 'move' high[2031365](2031367 '.v' _iterator[1931600] F1_high[2116768]))
    ref i__retArg[2305355]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2305359 'move' i__retArg[2305355](2305357 'set reference' ret_tmp[2031147]))
    val _ir[2305362]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2305364 '.=' _ir[2305362] F0_low[2115194] low[2031358])
    (2305368 '.=' _ir[2305362] F1_high[2115198] high[2031365])
    (2305372 '=' i__retArg[2305355] _ir[2305362])
    (2031154 'move' call_tmp[2031145] ret_tmp[2031147])
    ref i_ir[2307073]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2307077 'move' i_ir[2307073](2307075 'set reference' call_tmp[2031145]))
    val ret[2307080]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
    val _ic_[2307082]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
    const-val call_tmp[2307084]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2307086 'move' call_tmp[2307084](2307088 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
    const-val cast_tmp[2307090]:c_void_ptr[149] "dead after last mention" "temp"
    (2307092 'move' cast_tmp[2307090](2307095 call chpl_here_alloc[187788] call_tmp[2307084] 28))
    (2307098 'move' _ic_[2307082](2307100 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2307090]))
    (2307103 'setcid' _ic_[2307082])
    (2307105 'move' ret[2307080] _ic_[2307082])
    (2307108 '.=' ret[2307080] more[1103478] 1)
    const-val tmp[2307112]:int(64)[13] "temp"
    (2307114 'move' tmp[2307112](2307116 '.v' i_ir[2307073] F0_low[2115194]))
    (2307119 '.=' ret[2307080] F0_low[2115192] tmp[2307112])
    const-val tmp[2307123]:int(64)[13] "temp"
    (2307125 'move' tmp[2307123](2307127 '.v' i_ir[2307073] F1_high[2115198]))
    (2307130 '.=' ret[2307080] F1_high[2115196] tmp[2307123])
    (2031157 'move' _iterator[2031143] ret[2307080])
    val ret[2031163]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2031165]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2031169]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2031171]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2031173 'move' i[2031169] 0)
    val call_tmp[2031176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2031178]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2031180]:int(64)[13] "temp"
    (2031182 'move' low[2031180](2031184 '.v' _iterator[2031143] F0_low[2115192]))
    (2031187 'move' default_arg_first[2031178] low[2031180])
    const-val default_arg_last[2031192]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2031194]:int(64)[13] "temp"
    (2031196 'move' high[2031194](2031198 '.v' _iterator[2031143] F1_high[2115196]))
    (2031201 'move' default_arg_last[2031192] high[2031194])
    const-val _return_tmp_[2031206]:bool[10] "dead after last mention" "temp"
    const-val low[2031208]:int(64)[13] "temp"
    (2031210 'move' low[2031208](2031212 '.v' _iterator[2031143] F0_low[2115192]))
    const-val high[2031215]:int(64)[13] "temp"
    (2031217 'move' high[2031215](2031219 '.v' _iterator[2031143] F1_high[2115196]))
    (2031222 'move' _return_tmp_[2031206](2031225 call chpl_checkIfRangeIterWillOverflow[1096265] low[2031208] high[2031215] 1 default_arg_first[2031178] default_arg_last[2031192] 1))
    CForLoop[2031232] order-independent
    {
      const-val yret[2031261]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2031263 'move' yret[2031261] i[2031169])
      const-val _yieldedIndex[2031266]:int(64)[13] "temp"
      (2031268 'move' _yieldedIndex[2031266] i[2031169])
      const-val i[2031272]:int(64)[13] "const" "index var" "insert auto destroy"
      (2031274 'move' i[2031272] _yieldedIndex[2031266])
      const-val yret[2031277]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2031279 'move' yret[2031277] _yieldedIndex[2031266])
      const-val _yieldedIndex[2031301]:int(64)[13] "temp"
      (2031356 'move' _yieldedIndex[2031301] _yieldedIndex[2031266])
      const-val slot[2031303]:int(64)[13] "const" "index var" "insert auto destroy"
      (2031305 'move' slot[2031303] _yieldedIndex[2031301])
      const-val yret[2031309]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2031311 'move' yret[2031309] slot[2031303])
      const-val slot[2031314]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (2031316 'move' slot[2031314] yret[2031309])
      ref call_tmp[2031320]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2403034]:chpl_TableEntry(unmanaged BaseDom,nothing)[1208960] "dead after last mention" "maybe param" "temp"
      (2403036 'move' call_tmp[2403034](2403038 'array_get' ret[1931671] slot[2031314]))
      (2031322 'move' call_tmp[2031320] call_tmp[2403034])
      val call_tmp[2031328]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
      val call_tmp[2403114]:c_ptr(chpl_TableEntry(unmanaged BaseDom,nothing))[1223480] "dead after last mention" "expr temp" "maybe param" "temp"
      (2403116 'move' call_tmp[2403114](2403119 call c_pointer_return[1223458] call_tmp[2031320]))
      (2031330 'move' call_tmp[2031328] call_tmp[2403114])
      val call_tmp[2031335]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val coerce_tmp[2031337]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2031339 'move' coerce_tmp[2031337](2031341 'cast' c_void_ptr[149] call_tmp[2031328]))
      const-val _return_tmp_[2031344]:c_void_ptr[149] "dead after last mention" "temp"
      val inlineImm[2403153]:uint(8)[100] "temp"
      (2403156 'move' inlineImm[2403153] 0)
      const-val call_tmp[2403159]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2403161 'move' call_tmp[2403159](2403163 'cast' int(32)[95] inlineImm[2403153]))
      (2403167 call memset[1223526] coerce_tmp[2031337] call_tmp[2403159] sizeofElement[1931678])
      (2031346 'move' _return_tmp_[2031344] coerce_tmp[2031337])
      {
        const-val low[2031234]:int(64)[13] "temp"
        (2031236 'move' low[2031234](2031238 '.v' _iterator[2031143] F0_low[2115192]))
        (2031241 '=' i[2031169] low[2031234])
      }
      {
        const-val high[2031245]:int(64)[13] "temp"
        (2031247 'move' high[2031245](2031249 '.v' _iterator[2031143] F1_high[2115196]))
        (2031252 '<=' i[2031169] high[2031245])
      }
      {
        val call_tmp[2031256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2031258 '+=' i[2031169] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2031292]
    const-val call_tmp[2310511]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2310513 'move' call_tmp[2310511](2310515 'cast_to_void_star' _iterator[2031143]))
    (2310518 call chpl_here_free[188127] call_tmp[2310511])
    label _endchpl_direct_range_iter[2031297]
    const-val call_tmp[2406002]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406004 'move' call_tmp[2406002](2406006 'cast_to_void_star' _iterator[1931600]))
    (2406009 call chpl_here_free[188127] call_tmp[2406002])
    ref i_x[2311188]:2*int(64)[1040245] "temp"
    (2311192 'move' i_x[2311188](2311190 'set reference' tmp[1931553]))
    label _endcoforall_fn[1931660]
    (1931662 return _void[55])
  }
  function coforall_fn[1931976](const in arg size[1931978]:int(64)[13], const in arg numChunks[1931980]:int(64)[13], const in arg chunk[1931982]:int(64)[13], const in arg _coforallCount[1931984]:_EndCount(AtomicT(int(64)),int(64))[945532], const in arg ret[1932129]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683], const in arg sizeofElement[1932136]:uint(64)[115]) : void[4] "cobegin or coforall" "inlined function" "resolved" "task fn from iterator fn"
  {
    const-val call_tmp[1931988]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val call_tmp[2261574]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2261576 'move' call_tmp[2261574](2261578 '-' size[1931978] 1))
    (1931990 'move' call_tmp[1931988] call_tmp[2261574])
    const-val call_tmp[1931995]:2*int(64)[1040245] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1931997]:2*int(64)[1040245] "temp"
    (1932000 call _computeBlock[1229525] size[1931978] numChunks[1931980] chunk[1931982] call_tmp[1931988] 0 0 ret_tmp[1931997])
    (1932008 'move' call_tmp[1931995] ret_tmp[1931997])
    const-val tmp[1932011]:2*int(64)[1040245] "dead at end of block" "const" "insert auto destroy" "temp"
    (1932013 'move' tmp[1932011] call_tmp[1931995])
    1
    const-ref call_tmp[1932017]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1932019 'move' call_tmp[1932017](1932021 '.' tmp[1932011] x0[1040241]))
    const-val lo[1932024]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1932026]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1932028 'move' coerce_tmp[1932026](1932030 'deref' call_tmp[1932017]))
    (1932032 '=' lo[1932024] coerce_tmp[1932026])
    (1932035 'noop')
    const-ref call_tmp[1932036]:int(64)[13] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1932038 'move' call_tmp[1932036](1932040 '.' tmp[1932011] x1[1040243]))
    const-val hi[1932043]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1932045]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1932047 'move' coerce_tmp[1932045](1932049 'deref' call_tmp[1932036]))
    (1932051 '=' hi[1932043] coerce_tmp[1932045])
    (1932054 'noop')
    val _indexOfInterest[1932056]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[1932058]:_ic_chpl_direct_range_iter[1230573] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[1932060]:_ir_chpl_direct_range_iter[1230579] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[1932062]:_ir_chpl_direct_range_iter[1230579] "temp"
    ref i__retArg[2404263]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404267 'move' i__retArg[2404263](2404265 'set reference' ret_tmp[1932062]))
    val _ir[2404270]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2404272 '.=' _ir[2404270] F0_low[2116766] lo[1932024])
    (2404276 '.=' _ir[2404270] F1_high[2116770] hi[1932043])
    (2404280 '=' i__retArg[2404263] _ir[2404270])
    (1932069 'move' call_tmp[1932060] ret_tmp[1932062])
    ref i_ir[2405290]:_ir_chpl_direct_range_iter[1230579] "temp"
    (2405294 'move' i_ir[2405290](2405292 'set reference' call_tmp[1932060]))
    val ret[2405297]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "RVV" "temp"
    val _ic_[2405299]:_ic_chpl_direct_range_iter[1230573] "dead after last mention" "temp"
    const-val call_tmp[2405301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2405303 'move' call_tmp[2405301](2405305 'sizeof_bundle' _ic_chpl_direct_range_iter[1230573]))
    const-val cast_tmp[2405307]:c_void_ptr[149] "dead after last mention" "temp"
    (2405309 'move' cast_tmp[2405307](2405312 call chpl_here_alloc[187788] call_tmp[2405301] 39))
    (2405315 'move' _ic_[2405299](2405317 'cast' _ic_chpl_direct_range_iter[1230573] cast_tmp[2405307]))
    (2405320 'setcid' _ic_[2405299])
    (2405322 'move' ret[2405297] _ic_[2405299])
    (2405325 '.=' ret[2405297] more[1230576] 1)
    const-val tmp[2405329]:int(64)[13] "temp"
    (2405331 'move' tmp[2405329](2405333 '.v' i_ir[2405290] F0_low[2116766]))
    (2405336 '.=' ret[2405297] F0_low[2116764] tmp[2405329])
    const-val tmp[2405340]:int(64)[13] "temp"
    (2405342 'move' tmp[2405340](2405344 '.v' i_ir[2405290] F1_high[2116770]))
    (2405347 '.=' ret[2405297] F1_high[2116768] tmp[2405340])
    (1932072 'move' _iterator[1932058] ret[2405297])
    val ret[2031928]:_ir_chpl_direct_range_iter[1230579] "dead after last mention" "RVV" "temp"
    val _indexOfInterest[2031930]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
    val _iterator[2031932]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead at end of block" "expr temp" "temp"
    const-val call_tmp[2031934]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val ret_tmp[2031936]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    const-val low[2032147]:int(64)[13] "temp"
    (2032152 'move' low[2032147](2032149 '.v' _iterator[1932058] F0_low[2116764]))
    const-val high[2032154]:int(64)[13] "temp"
    (2032159 'move' high[2032154](2032156 '.v' _iterator[1932058] F1_high[2116768]))
    ref i__retArg[2305399]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2305403 'move' i__retArg[2305399](2305401 'set reference' ret_tmp[2031936]))
    val _ir[2305406]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2305408 '.=' _ir[2305406] F0_low[2115194] low[2032147])
    (2305412 '.=' _ir[2305406] F1_high[2115198] high[2032154])
    (2305416 '=' i__retArg[2305399] _ir[2305406])
    (2031943 'move' call_tmp[2031934] ret_tmp[2031936])
    ref i_ir[2307199]:_ir_chpl_direct_param_stride_range_iter[1103481] "temp"
    (2307203 'move' i_ir[2307199](2307201 'set reference' call_tmp[2031934]))
    val ret[2307206]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "RVV" "temp"
    val _ic_[2307208]:_ic_chpl_direct_param_stride_range_iter[1103475] "dead after last mention" "temp"
    const-val call_tmp[2307210]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2307212 'move' call_tmp[2307210](2307214 'sizeof_bundle' _ic_chpl_direct_param_stride_range_iter[1103475]))
    const-val cast_tmp[2307216]:c_void_ptr[149] "dead after last mention" "temp"
    (2307218 'move' cast_tmp[2307216](2307221 call chpl_here_alloc[187788] call_tmp[2307210] 28))
    (2307224 'move' _ic_[2307208](2307226 'cast' _ic_chpl_direct_param_stride_range_iter[1103475] cast_tmp[2307216]))
    (2307229 'setcid' _ic_[2307208])
    (2307231 'move' ret[2307206] _ic_[2307208])
    (2307234 '.=' ret[2307206] more[1103478] 1)
    const-val tmp[2307238]:int(64)[13] "temp"
    (2307240 'move' tmp[2307238](2307242 '.v' i_ir[2307199] F0_low[2115194]))
    (2307245 '.=' ret[2307206] F0_low[2115192] tmp[2307238])
    const-val tmp[2307249]:int(64)[13] "temp"
    (2307251 'move' tmp[2307249](2307253 '.v' i_ir[2307199] F1_high[2115198]))
    (2307256 '.=' ret[2307206] F1_high[2115196] tmp[2307249])
    (2031946 'move' _iterator[2031932] ret[2307206])
    val ret[2031952]:_ir_chpl_direct_param_stride_range_iter[1103481] "dead after last mention" "RVV" "temp"
    val call_tmp[2031954]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val i[2031958]:int(64)[13] "dead at end of block" "insert auto destroy"
    val call_tmp[2031960]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (2031962 'move' i[2031958] 0)
    val call_tmp[2031965]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val default_arg_first[2031967]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val low[2031969]:int(64)[13] "temp"
    (2031971 'move' low[2031969](2031973 '.v' _iterator[2031932] F0_low[2115192]))
    (2031976 'move' default_arg_first[2031967] low[2031969])
    const-val default_arg_last[2031981]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
    const-val high[2031983]:int(64)[13] "temp"
    (2031985 'move' high[2031983](2031987 '.v' _iterator[2031932] F1_high[2115196]))
    (2031990 'move' default_arg_last[2031981] high[2031983])
    const-val _return_tmp_[2031995]:bool[10] "dead after last mention" "temp"
    const-val low[2031997]:int(64)[13] "temp"
    (2031999 'move' low[2031997](2032001 '.v' _iterator[2031932] F0_low[2115192]))
    const-val high[2032004]:int(64)[13] "temp"
    (2032006 'move' high[2032004](2032008 '.v' _iterator[2031932] F1_high[2115196]))
    (2032011 'move' _return_tmp_[2031995](2032014 call chpl_checkIfRangeIterWillOverflow[1096265] low[2031997] high[2032004] 1 default_arg_first[2031967] default_arg_last[2031981] 1))
    CForLoop[2032021] order-independent
    {
      const-val yret[2032050]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2032052 'move' yret[2032050] i[2031958])
      const-val _yieldedIndex[2032055]:int(64)[13] "temp"
      (2032057 'move' _yieldedIndex[2032055] i[2031958])
      const-val i[2032061]:int(64)[13] "const" "index var" "insert auto destroy"
      (2032063 'move' i[2032061] _yieldedIndex[2032055])
      const-val yret[2032066]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2032068 'move' yret[2032066] _yieldedIndex[2032055])
      const-val _yieldedIndex[2032090]:int(64)[13] "temp"
      (2032145 'move' _yieldedIndex[2032090] _yieldedIndex[2032055])
      const-val slot[2032092]:int(64)[13] "const" "index var" "insert auto destroy"
      (2032094 'move' slot[2032092] _yieldedIndex[2032090])
      const-val yret[2032098]:int(64)[13] "dead after last mention" "YVV" "temp"
      (2032100 'move' yret[2032098] slot[2032092])
      const-val slot[2032103]:int(64)[13] "const" "index var" "an _indexOfInterest or chpl__followIdx variable" "insert auto destroy"
      (2032105 'move' slot[2032103] yret[2032098])
      ref call_tmp[2032109]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
      ref call_tmp[2412466]:chpl_TableEntry(unmanaged BaseArr,nothing)[1208660] "dead after last mention" "maybe param" "temp"
      (2412468 'move' call_tmp[2412466](2412470 'array_get' ret[1932129] slot[2032103]))
      (2032111 'move' call_tmp[2032109] call_tmp[2412466])
      val call_tmp[2032117]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
      val call_tmp[2412566]:c_ptr(chpl_TableEntry(unmanaged BaseArr,nothing))[1250659] "dead after last mention" "expr temp" "maybe param" "temp"
      (2412568 'move' call_tmp[2412566](2412571 call c_pointer_return[1250637] call_tmp[2032109]))
      (2032119 'move' call_tmp[2032117] call_tmp[2412566])
      val call_tmp[2032124]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val coerce_tmp[2032126]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2032128 'move' coerce_tmp[2032126](2032130 'cast' c_void_ptr[149] call_tmp[2032117]))
      const-val _return_tmp_[2032133]:c_void_ptr[149] "dead after last mention" "temp"
      val inlineImm[2403173]:uint(8)[100] "temp"
      (2403176 'move' inlineImm[2403173] 0)
      const-val call_tmp[2403179]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2403181 'move' call_tmp[2403179](2403183 'cast' int(32)[95] inlineImm[2403173]))
      (2403187 call memset[1223526] coerce_tmp[2032126] call_tmp[2403179] sizeofElement[1932136])
      (2032135 'move' _return_tmp_[2032133] coerce_tmp[2032126])
      {
        const-val low[2032023]:int(64)[13] "temp"
        (2032025 'move' low[2032023](2032027 '.v' _iterator[2031932] F0_low[2115192]))
        (2032030 '=' i[2031958] low[2032023])
      }
      {
        const-val high[2032034]:int(64)[13] "temp"
        (2032036 'move' high[2032034](2032038 '.v' _iterator[2031932] F1_high[2115196]))
        (2032041 '<=' i[2031958] high[2032034])
      }
      {
        val call_tmp[2032045]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        (2032047 '+=' i[2031958] 1)
      }
    }
    label _endchpl_direct_param_stride_range_iter[2032081]
    const-val call_tmp[2310535]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2310537 'move' call_tmp[2310535](2310539 'cast_to_void_star' _iterator[2031932]))
    (2310542 call chpl_here_free[188127] call_tmp[2310535])
    label _endchpl_direct_range_iter[2032086]
    const-val call_tmp[2406014]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2406016 'move' call_tmp[2406014](2406018 'cast_to_void_star' _iterator[1932058]))
    (2406021 call chpl_here_free[188127] call_tmp[2406014])
    ref i_x[2311197]:2*int(64)[1040245] "temp"
    (2311201 'move' i_x[2311197](2311199 'set reference' tmp[1932011]))
    label _endcoforall_fn[1932118]
    (1932120 return _void[55])
  }
  function wrapcoforall_fn[2216053](ref arg dummy_taskList[2216055]:c_void_ptr[149], in arg dummy_taskListNode[2216057]:int(64)[13], in arg buf[2216059]:c_void_ptr[149], in arg buf_size[2216061]:int(64)[13], in arg c[2216063]:_class_localscoforall_fn[2215982]) : void[4] "cobegin or coforall block"
  {
    val _0_size[2216068]:int(64)[13] "temp"
    (2216073 'move' _0_size[2216068](2216070 '.v' c[2216063] _0_size[2215985]))
    val _1_numChunks[2216076]:int(64)[13] "temp"
    (2216081 'move' _1_numChunks[2216076](2216078 '.v' c[2216063] _1_numChunks[2215987]))
    val _2_chunk[2216084]:int(64)[13] "temp"
    (2216089 'move' _2_chunk[2216084](2216086 '.v' c[2216063] _2_chunk[2215989]))
    val _3__coforallCount[2216092]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2216097 'move' _3__coforallCount[2216092](2216094 '.v' c[2216063] _3__coforallCount[2215991]))
    val _4_ret[2216100]:_ddata(chpl_TableEntry(unmanaged BaseDom,nothing))[1208983] "temp"
    (2216105 'move' _4_ret[2216100](2216102 '.v' c[2216063] _4_ret[2215993]))
    val _5_sizeofElement[2216108]:uint(64)[115] "temp"
    (2216113 'move' _5_sizeofElement[2216108](2216110 '.v' c[2216063] _5_sizeofElement[2215995]))
    (2216066 call coforall_fn[1931518] _0_size[2216068] _1_numChunks[2216076] _2_chunk[2216084] _3__coforallCount[2216092] _4_ret[2216100] _5_sizeofElement[2216108])
    val endcount[2216116]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2216121 'move' endcount[2216116](2216118 '.v' c[2216063] _3__coforallCount[2215991]))
    (2216123 call _downEndCount[1230826] endcount[2216116] nil[44])
    (2216127 return _void[55])
  }
  function wrapcoforall_fn[2216208](ref arg dummy_taskList[2216210]:c_void_ptr[149], in arg dummy_taskListNode[2216212]:int(64)[13], in arg buf[2216214]:c_void_ptr[149], in arg buf_size[2216216]:int(64)[13], in arg c[2216218]:_class_localscoforall_fn[2216137]) : void[4] "cobegin or coforall block"
  {
    val _0_size[2216223]:int(64)[13] "temp"
    (2216228 'move' _0_size[2216223](2216225 '.v' c[2216218] _0_size[2216140]))
    val _1_numChunks[2216231]:int(64)[13] "temp"
    (2216236 'move' _1_numChunks[2216231](2216233 '.v' c[2216218] _1_numChunks[2216142]))
    val _2_chunk[2216239]:int(64)[13] "temp"
    (2216244 'move' _2_chunk[2216239](2216241 '.v' c[2216218] _2_chunk[2216144]))
    val _3__coforallCount[2216247]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2216252 'move' _3__coforallCount[2216247](2216249 '.v' c[2216218] _3__coforallCount[2216146]))
    val _4_ret[2216255]:_ddata(chpl_TableEntry(unmanaged BaseArr,nothing))[1208683] "temp"
    (2216260 'move' _4_ret[2216255](2216257 '.v' c[2216218] _4_ret[2216148]))
    val _5_sizeofElement[2216263]:uint(64)[115] "temp"
    (2216268 'move' _5_sizeofElement[2216263](2216265 '.v' c[2216218] _5_sizeofElement[2216150]))
    (2216221 call coforall_fn[1931976] _0_size[2216223] _1_numChunks[2216231] _2_chunk[2216239] _3__coforallCount[2216247] _4_ret[2216255] _5_sizeofElement[2216263])
    val endcount[2216271]:_EndCount(AtomicT(int(64)),int(64))[945532] "temp"
    (2216276 'move' endcount[2216271](2216273 '.v' c[2216218] _3__coforallCount[2216146]))
    (2216278 call _downEndCount[1230826] endcount[2216271] nil[44])
    (2216282 return _void[55])
  }
}