AST dump for AlignedTSupport after pass createTaskFunctions.
Module use list: 

{
  function chpl__init_AlignedTSupport[415874]() : void[4] "insert line file info" "module init"
  {
    (513216 return _void[55])
  }
  function =[780904](ref arg _arg1[780906]:aligned_t[88359], arg _arg2[780907]:aligned_t[88359]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
  {
    (780910 '=' _arg1[780906] _arg2[780907])
    (780915 return _void[55])
  }
  type aligned_t[88359]
  function castableToAlignedT[88366](arg t[88364]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[513158] "RVV" "param" "temp"
    unknown tmp[422191] "maybe param" "temp"
    (422202 'move' tmp[422191](88371 call isIntegralType t[88364]))
    unknown call_tmp[631774] "expr temp" "maybe param" "maybe type" "temp"
    (631777 'move' call_tmp[631774](422204 call _cond_invalid tmp[422191]))
    if call_tmp[631774]
    {
      (422207 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560772] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560773] "maybe param" "temp"
    unknown call_tmp[631779] "expr temp" "maybe param" "maybe type" "temp"
    (631782 'move' call_tmp[631779](422192 call isTrue tmp[422191]))
    (560778 'move' tmp[560773](560776 call _cond_test call_tmp[631779]))
    if tmp[560773]
    {
      (560783 'move' tmp[560772](560780 '_paramFoldLogical' tmp[560773] 1))
    }
    {
      unknown tmp[560785] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[631784] "expr temp" "maybe param" "maybe type" "temp"
      (631787 'move' call_tmp[631784](88375 call isBoolType t[88364]))
      (560787 'move' tmp[560785](422196 call isTrue call_tmp[631784]))
      (560792 'move' tmp[560772](560789 '_paramFoldLogical' tmp[560773] tmp[560785]))
    }
    (513163 'move' ret[513158](513162 'deref' tmp[560772]))
    (513160 return ret[513158])
  }
  function _cast[88389](arg t[88386]:aligned_t[88359], arg x[88392]:integral[199](?)) : _unknown[51] "inline"
  {
    unknown ret[513167] "RVV" "temp"
    unknown call_tmp[631789] "expr temp" "maybe param" "maybe type" "temp"
    (631792 'move' call_tmp[631789](88399 'cast' t[88386] x[88392]))
    (513172 'move' ret[513167](513171 'deref' call_tmp[631789]))
    (513169 return ret[513167])
  }
  function _cast[88411](arg t[88408]:aligned_t[88359], arg x[88414]:bool[10]) : _unknown[51] "inline"
  {
    unknown ret[513176] "RVV" "temp"
    unknown call_tmp[631794] "expr temp" "maybe param" "maybe type" "temp"
    (631797 'move' call_tmp[631794](88421 'cast' t[88408] x[88414]))
    (513181 'move' ret[513176](513180 'deref' call_tmp[631794]))
    (513178 return ret[513176])
  }
  function _cast[88433](arg t[88430]:chpl_anybool[181](?), arg x[88436]:aligned_t[88359]) : _unknown[51] "inline"
  {
    unknown ret[513185] "RVV" "temp"
    unknown call_tmp[631799] "expr temp" "maybe param" "maybe type" "temp"
    (631802 'move' call_tmp[631799](88443 'cast' t[88430] x[88436]))
    (513190 'move' ret[513185](513189 'deref' call_tmp[631799]))
    (513187 return ret[513185])
  }
  function _cast[88455](arg t[88452]:integral[199](?), arg x[88458]:aligned_t[88359]) : _unknown[51] "inline"
  {
    unknown ret[513194] "RVV" "temp"
    unknown call_tmp[631804] "expr temp" "maybe param" "maybe type" "temp"
    (631807 'move' call_tmp[631804](88465 'cast' t[88452] x[88458]))
    (513199 'move' ret[513194](513198 'deref' call_tmp[631804]))
    (513196 return ret[513194])
  }
  function defaultOfAlignedT[88475](arg t[88473]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[513203] "RVV" "temp"
    const defaultValue[88478] "dead at end of block" "const" "insert auto destroy"
    (541542 'default init var' defaultValue[88478] t[88473])
    (88481 'end of statement')
    unknown call_tmp[631809] "expr temp" "maybe param" "maybe type" "temp"
    (631812 'move' call_tmp[631809](88485 call _cast aligned_t[88359] defaultValue[88478]))
    (513208 'move' ret[513203](513207 'deref' call_tmp[631809]))
    gotoReturn _end_defaultOfAlignedT[513201] _end_defaultOfAlignedT[513201]
    (477000 'end of statement' defaultValue[88478])
    label _end_defaultOfAlignedT[513201]
    (513205 return ret[513203])
  }
  function aligned_t[88359].writeThis[88496](arg _mt[88501]:_MT[238], arg this[88498]:aligned_t[88359] :
  aligned_t[88359], arg f[88494]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[631814] "expr temp" "maybe param" "maybe type" "temp"
    (631817 'move' call_tmp[631814](88511 call uint(64)[115] 64))
    unknown call_tmp[631819] "maybe param" "maybe type" "temp"
    (631822 'move' call_tmp[631819](88512 call _cast call_tmp[631814] this[88498]))
    unknown call_tmp[631824] "maybe param" "maybe type" "temp"
    (631827 'move' call_tmp[631824](88506 call uint(64)[115] 64))
    unknown tmp[88514] "dead at end of block" "insert auto destroy"
    (541544 'init var' tmp[88514] call_tmp[631819] call_tmp[631824])
    (88517 'end of statement')
    (88521 call <~> f[88494] tmp[88514])
    (477002 'end of statement' tmp[88514])
    (513212 return _void[55])
  }
  function aligned_t[88359].readThis[88531](arg _mt[88536]:_MT[238], arg this[88533]:aligned_t[88359] :
  aligned_t[88359], arg f[88529]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown tmp[88542] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631829] "expr temp" "maybe param" "maybe type" "temp"
    (631832 'move' call_tmp[631829](88541 call uint(64)[115] 64))
    (541546 'default init var' tmp[88542] call_tmp[631829])
    (88545 'end of statement')
    (88549 call <~> f[88529] tmp[88542])
    (477004 'end of statement' tmp[88542])
    unknown call_tmp[631834] "expr temp" "maybe param" "maybe type" "temp"
    (631837 'move' call_tmp[631834](88555 call _cast aligned_t[88359] tmp[88542]))
    (88557 call = this[88533] call_tmp[631834])
    (477006 'end of statement' tmp[88542])
    (513214 return _void[55])
  }
}