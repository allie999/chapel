AST dump for AlignedTSupport after pass createTaskFunctions.
Module use list: 

{
  function chpl__init_AlignedTSupport[416001]() : void[4] "insert line file info" "module init"
  {
    (513348 return _void[55])
  }
  function =[781012](ref arg _arg1[781014]:aligned_t[88362], arg _arg2[781015]:aligned_t[88362]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
  {
    (781018 '=' _arg1[781014] _arg2[781015])
    (781023 return _void[55])
  }
  type aligned_t[88362]
  function castableToAlignedT[88369](arg t[88367]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[513290] "RVV" "param" "temp"
    unknown tmp[422318] "maybe param" "temp"
    (422329 'move' tmp[422318](88374 call isIntegralType t[88367]))
    unknown call_tmp[631887] "expr temp" "maybe param" "maybe type" "temp"
    (631890 'move' call_tmp[631887](422331 call _cond_invalid tmp[422318]))
    if call_tmp[631887]
    {
      (422334 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[560885] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560886] "maybe param" "temp"
    unknown call_tmp[631892] "expr temp" "maybe param" "maybe type" "temp"
    (631895 'move' call_tmp[631892](422319 call isTrue tmp[422318]))
    (560891 'move' tmp[560886](560889 call _cond_test call_tmp[631892]))
    if tmp[560886]
    {
      (560896 'move' tmp[560885](560893 '_paramFoldLogical' tmp[560886] 1))
    }
    {
      unknown tmp[560898] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[631897] "expr temp" "maybe param" "maybe type" "temp"
      (631900 'move' call_tmp[631897](88378 call isBoolType t[88367]))
      (560900 'move' tmp[560898](422323 call isTrue call_tmp[631897]))
      (560905 'move' tmp[560885](560902 '_paramFoldLogical' tmp[560886] tmp[560898]))
    }
    (513295 'move' ret[513290](513294 'deref' tmp[560885]))
    (513292 return ret[513290])
  }
  function _cast[88392](arg t[88389]:aligned_t[88362], arg x[88395]:integral[199](?)) : _unknown[51] "inline"
  {
    unknown ret[513299] "RVV" "temp"
    unknown call_tmp[631902] "expr temp" "maybe param" "maybe type" "temp"
    (631905 'move' call_tmp[631902](88402 'cast' t[88389] x[88395]))
    (513304 'move' ret[513299](513303 'deref' call_tmp[631902]))
    (513301 return ret[513299])
  }
  function _cast[88414](arg t[88411]:aligned_t[88362], arg x[88417]:bool[10]) : _unknown[51] "inline"
  {
    unknown ret[513308] "RVV" "temp"
    unknown call_tmp[631907] "expr temp" "maybe param" "maybe type" "temp"
    (631910 'move' call_tmp[631907](88424 'cast' t[88411] x[88417]))
    (513313 'move' ret[513308](513312 'deref' call_tmp[631907]))
    (513310 return ret[513308])
  }
  function _cast[88436](arg t[88433]:chpl_anybool[181](?), arg x[88439]:aligned_t[88362]) : _unknown[51] "inline"
  {
    unknown ret[513317] "RVV" "temp"
    unknown call_tmp[631912] "expr temp" "maybe param" "maybe type" "temp"
    (631915 'move' call_tmp[631912](88446 'cast' t[88433] x[88439]))
    (513322 'move' ret[513317](513321 'deref' call_tmp[631912]))
    (513319 return ret[513317])
  }
  function _cast[88458](arg t[88455]:integral[199](?), arg x[88461]:aligned_t[88362]) : _unknown[51] "inline"
  {
    unknown ret[513326] "RVV" "temp"
    unknown call_tmp[631917] "expr temp" "maybe param" "maybe type" "temp"
    (631920 'move' call_tmp[631917](88468 'cast' t[88455] x[88461]))
    (513331 'move' ret[513326](513330 'deref' call_tmp[631917]))
    (513328 return ret[513326])
  }
  function defaultOfAlignedT[88478](arg t[88476]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[513335] "RVV" "temp"
    const defaultValue[88481] "dead at end of block" "const" "insert auto destroy"
    (541674 'default init var' defaultValue[88481] t[88476])
    (88484 'end of statement')
    unknown call_tmp[631922] "expr temp" "maybe param" "maybe type" "temp"
    (631925 'move' call_tmp[631922](88488 call _cast aligned_t[88362] defaultValue[88481]))
    (513340 'move' ret[513335](513339 'deref' call_tmp[631922]))
    gotoReturn _end_defaultOfAlignedT[513333] _end_defaultOfAlignedT[513333]
    (477131 'end of statement' defaultValue[88481])
    label _end_defaultOfAlignedT[513333]
    (513337 return ret[513335])
  }
  function aligned_t[88362].writeThis[88499](arg _mt[88504]:_MT[238], arg this[88501]:aligned_t[88362] :
  aligned_t[88362], arg f[88497]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[631927] "expr temp" "maybe param" "maybe type" "temp"
    (631930 'move' call_tmp[631927](88514 call uint(64)[115] 64))
    unknown call_tmp[631932] "maybe param" "maybe type" "temp"
    (631935 'move' call_tmp[631932](88515 call _cast call_tmp[631927] this[88501]))
    unknown call_tmp[631937] "maybe param" "maybe type" "temp"
    (631940 'move' call_tmp[631937](88509 call uint(64)[115] 64))
    unknown tmp[88517] "dead at end of block" "insert auto destroy"
    (541676 'init var' tmp[88517] call_tmp[631932] call_tmp[631937])
    (88520 'end of statement')
    (88524 call <~> f[88497] tmp[88517])
    (477133 'end of statement' tmp[88517])
    (513344 return _void[55])
  }
  function aligned_t[88362].readThis[88534](arg _mt[88539]:_MT[238], arg this[88536]:aligned_t[88362] :
  aligned_t[88362], arg f[88532]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown tmp[88545] "dead at end of block" "insert auto destroy"
    unknown call_tmp[631942] "expr temp" "maybe param" "maybe type" "temp"
    (631945 'move' call_tmp[631942](88544 call uint(64)[115] 64))
    (541678 'default init var' tmp[88545] call_tmp[631942])
    (88548 'end of statement')
    (88552 call <~> f[88532] tmp[88545])
    (477135 'end of statement' tmp[88545])
    unknown call_tmp[631947] "expr temp" "maybe param" "maybe type" "temp"
    (631950 'move' call_tmp[631947](88558 call _cast aligned_t[88362] tmp[88545]))
    (88560 call = this[88536] call_tmp[631947])
    (477137 'end of statement' tmp[88545])
    (513346 return _void[55])
  }
}