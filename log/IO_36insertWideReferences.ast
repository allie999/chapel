AST dump for IO after pass insertWideReferences.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2099532] val _runtime_hdr[2099533]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099535]:chpl_localeID_t[209294] wide-ref _1_this[2099537]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2099271] val _runtime_hdr[2099272]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099274]:chpl_localeID_t[209294] wide-ref _1_this[2099276]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2099095] val _runtime_hdr[2099096]:chpl_comm_on_bundle_t[209301] val _0_tmp[2099098]:chpl_localeID_t[209294] wide-ref _1_this[2099100]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2097304] val _runtime_hdr[2097305]:chpl_comm_on_bundle_t[209301] val _0_tmp[2097307]:chpl_localeID_t[209294] wide-ref _1_this[2097309]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2095274] val _runtime_hdr[2095275]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095277]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2095279]:channel(true,dynamic,true)[1021825] wide-ref _2_args[2095281]:(int(64),ioNewline)[1433256] val _3_rvfDerefTmp[2095283]:locale[28] wide-ref _4_error[2095285]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2095132] val _runtime_hdr[2095133]:chpl_comm_on_bundle_t[209301] val _0_tmp[2095135]:chpl_localeID_t[209294] wide-ref _1_this[2095137]:channel(true,dynamic,false)[1060947] val _2_x[2095139]:real(64)[16] val _3_rvfDerefTmp[2095141]:locale[28] wide-ref _4_error[2095143]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2094990] val _runtime_hdr[2094991]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094993]:chpl_localeID_t[209294] wide-ref _1_this[2094995]:channel(true,dynamic,false)[1060947] val _2_rvfDerefTmp[2094997]:ioLiteral[238753] val _3_rvfDerefTmp[2094999]:locale[28] wide-ref _4_error[2095001]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2094828] val _runtime_hdr[2094829]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094831]:chpl_localeID_t[209294] wide-ref _1_this[2094833]:channel(true,dynamic,false)[1060947] val _2_x[2094835]:__wide__ddata__real64[2381466] val _3_len[2094837]:int(64)[13] wide-ref _4_err[2094839]:syserr[223584] wide-ref _5_error[2094841]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2094713] val _runtime_hdr[2094714]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094716]:chpl_localeID_t[209294] wide-ref _1_this[2094718]:channel(true,dynamic,false)[1060947] wide-ref _2_ret[2094720]:uint(8)[100]
  type _class_localson_fn[2094587] val _runtime_hdr[2094588]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094590]:chpl_localeID_t[209294] wide-ref _1_this[2094592]:channel(true,dynamic,false)[1060947] val _2_element[2094594]:int(64)[13] wide-ref _3_ret[2094596]:int(64)[13]
  type _class_localson_fn[2094500] val _runtime_hdr[2094501]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094503]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094505]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2094355] val _runtime_hdr[2094356]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094358]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094360]:channel(true,dynamic,true)[1021825] wide-ref _2_path[2094362]:string[26] wide-ref _3_offset[2094364]:int(64)[13] wide-ref _4_error[2094366]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2094247] val _runtime_hdr[2094248]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094250]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094252]:channel(true,dynamic,true)[1021825] wide-ref _2_err[2094254]:syserr[223584]
  type _class_localson_fn[2094107] val _runtime_hdr[2094108]:chpl_comm_on_bundle_t[209301] val _0_tmp[2094110]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2094112]:channel(true,dynamic,true)[1021825] wide-ref _2_args[2094114]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] val _3_rvfDerefTmp[2094116]:locale[28] wide-ref _4_error[2094118]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2091285] val _runtime_hdr[2091286]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091288]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091290]:channel(true,dynamic,false)[1060947] wide-ref _2_args[2091292]:(string,codepointIndex,string,int(64))[1176520] val _3_rvfDerefTmp[2091294]:locale[28] wide-ref _4_error[2091296]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2091143] val _runtime_hdr[2091144]:chpl_comm_on_bundle_t[209301] val _0_tmp[2091146]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2091148]:channel(true,dynamic,false)[1060947] wide-ref _2_args[2091150]:(string,codepointIndex,string)[1158555] val _3_rvfDerefTmp[2091152]:locale[28] wide-ref _4_error[2091154]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2090853] val _runtime_hdr[2090854]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090856]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090858]:channel(false,dynamic,false)[1080682] wide-ref _2_path[2090860]:string[26] wide-ref _3_offset[2090862]:int(64)[13] wide-ref _4_error[2090864]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2090745] val _runtime_hdr[2090746]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090748]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090750]:channel(false,dynamic,false)[1080682] wide-ref _2_err[2090752]:syserr[223584]
  type _class_localson_fn[2090653] val _runtime_hdr[2090654]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090656]:chpl_localeID_t[209294] wide-ref _1_lhs[2090658]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090568] val _runtime_hdr[2090569]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090571]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090573]:channel(false,dynamic,false)[1080682]
  type _class_localson_fn[2090387] val _runtime_hdr[2090388]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090390]:chpl_localeID_t[209294] val _1_end[2090392]:int(64)[13] val _2_hints[2090394]:int(32)[95] val _3_rvfDerefTmp[2090396]:iostyle[231844] wide-ref _4_this[2090398]:channel(false,dynamic,false)[1080682] val _5_start[2090400]:int(64)[13] val _6_rvfDerefTmp[2090402]:file[235580] wide-ref _7__formal_tmp_error[2090404]:syserr[223584]
  type _class_localson_fn[2090180] val _runtime_hdr[2090181]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090183]:chpl_localeID_t[209294] val _1_start[2090185]:int(64)[13] wide-ref _2_ret[2090187]:channel(false,dynamic,false)[1080682] val _3_rvfDerefTmp[2090189]:iostyle[231844] val _4_end[2090191]:int(64)[13] val _5_rvfDerefTmp[2090193]:file[235580] wide-ref _6_err[2090195]:syserr[223584] val _7_hints[2090197]:int(32)[95] wide-ref _8_error[2090199]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2090068] val _runtime_hdr[2090069]:chpl_comm_on_bundle_t[209301] val _0_tmp[2090071]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2090073]:channel(true,dynamic,false)[1060947] wide-ref _2_ret[2090075]:int(64)[13]
  type _class_localson_fn[2089928] val _runtime_hdr[2089929]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089931]:chpl_localeID_t[209294] wide-ref _1_this[2089933]:channel(true,dynamic,false)[1060947] val _2_x[2089935]:int(64)[13] val _3_rvfDerefTmp[2089937]:locale[28] wide-ref _4_error[2089939]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2089786] val _runtime_hdr[2089787]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089789]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089791]:channel(true,dynamic,false)[1060947] wide-ref _2_args[2089793]:1*byteIndex[1057081] val _3_rvfDerefTmp[2089795]:locale[28] wide-ref _4_error[2089797]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2089632] val _runtime_hdr[2089633]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089635]:chpl_localeID_t[209294] wide-ref _1_this[2089637]:channel(true,dynamic,false)[1060947] wide-ref _2_path[2089639]:string[26] wide-ref _3_offset[2089641]:int(64)[13] wide-ref _4_error[2089643]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2089524] val _runtime_hdr[2089525]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089527]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089529]:channel(true,dynamic,false)[1060947] wide-ref _2_err[2089531]:syserr[223584]
  type _class_localson_fn[2089432] val _runtime_hdr[2089433]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089435]:chpl_localeID_t[209294] wide-ref _1_lhs[2089437]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089347] val _runtime_hdr[2089348]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089350]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2089352]:channel(true,dynamic,false)[1060947]
  type _class_localson_fn[2089166] val _runtime_hdr[2089167]:chpl_comm_on_bundle_t[209301] val _0_tmp[2089169]:chpl_localeID_t[209294] wide-ref _1__formal_tmp_error[2089171]:syserr[223584] val _2_end[2089173]:int(64)[13] val _3_hints[2089175]:int(32)[95] val _4_rvfDerefTmp[2089177]:iostyle[231844] wide-ref _5_this[2089179]:channel(true,dynamic,false)[1060947] val _6_start[2089181]:int(64)[13] val _7_rvfDerefTmp[2089183]:file[235580]
  type _class_localson_fn[2088959] val _runtime_hdr[2088960]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088962]:chpl_localeID_t[209294] val _1_start[2088964]:int(64)[13] wide-ref _2_ret[2088966]:channel(true,dynamic,false)[1060947] val _3_end[2088968]:int(64)[13] val _4_rvfDerefTmp[2088970]:iostyle[231844] val _5_rvfDerefTmp[2088972]:file[235580] wide-ref _6_err[2088974]:syserr[223584] val _7_hints[2088976]:int(32)[95] wide-ref _8_error[2088978]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2088719] val _runtime_hdr[2088720]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088722]:chpl_localeID_t[209294] wide-ref _1_lhs[2088724]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088634] val _runtime_hdr[2088635]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088637]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088639]:channel(true,dynamic,true)[1021825]
  type _class_localson_fn[2088453] val _runtime_hdr[2088454]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088456]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2088458]:file[235580] wide-ref _2__formal_tmp_error[2088460]:syserr[223584] val _3_end[2088462]:int(64)[13] wide-ref _4_this[2088464]:channel(true,dynamic,true)[1021825] val _5_hints[2088466]:int(32)[95] val _6_rvfDerefTmp[2088468]:iostyle[231844] val _7_start[2088470]:int(64)[13]
  type _class_localson_fn[2088246] val _runtime_hdr[2088247]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088249]:chpl_localeID_t[209294] val _1_end[2088251]:int(64)[13] val _2_rvfDerefTmp[2088253]:iostyle[231844] val _3_rvfDerefTmp[2088255]:file[235580] wide-ref _4_ret[2088257]:channel(true,dynamic,true)[1021825] val _5_hints[2088259]:int(32)[95] val _6_start[2088261]:int(64)[13] wide-ref _7_err[2088263]:syserr[223584] wide-ref _8_error[2088265]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2088036] val _runtime_hdr[2088037]:chpl_comm_on_bundle_t[209301] val _0_tmp[2088039]:chpl_localeID_t[209294] wide-ref _1_lhs[2088041]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087951] val _runtime_hdr[2087952]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087954]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087956]:channel(false,dynamic,true)[985627]
  type _class_localson_fn[2087770] val _runtime_hdr[2087771]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087773]:chpl_localeID_t[209294] wide-ref _1_this[2087775]:channel(false,dynamic,true)[985627] val _2_hints[2087777]:int(32)[95] val _3_rvfDerefTmp[2087779]:iostyle[231844] val _4_end[2087781]:int(64)[13] val _5_start[2087783]:int(64)[13] val _6_rvfDerefTmp[2087785]:file[235580] wide-ref _7__formal_tmp_error[2087787]:syserr[223584]
  type _class_localson_fn[2087563] val _runtime_hdr[2087564]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087566]:chpl_localeID_t[209294] wide-ref _1_err[2087568]:syserr[223584] val _2_start[2087570]:int(64)[13] val _3_end[2087572]:int(64)[13] val _4_rvfDerefTmp[2087574]:iostyle[231844] val _5_rvfDerefTmp[2087576]:file[235580] wide-ref _6_ret[2087578]:channel(false,dynamic,true)[985627] val _7_hints[2087580]:int(32)[95] wide-ref _8_error[2087582]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2087214] val _runtime_hdr[2087215]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087217]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087219]:file[235580] wide-ref _2_err[2087221]:syserr[223584] wide-ref _3_ret[2087223]:string[26] wide-ref _4_error[2087225]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2087106] val _runtime_hdr[2087107]:chpl_comm_on_bundle_t[209301] val _0_tmp[2087109]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2087111]:file[235580] wide-ref _2_err[2087113]:syserr[223584]
  type _class_localson_fn[2086980] val _runtime_hdr[2086981]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086983]:chpl_localeID_t[209294] val _1_rvfDerefTmp[2086985]:file[235580] wide-ref _2_ret[2086987]:iostyle[231844] wide-ref _3_error[2086989]:__wide_Error[2381123] "error variable"
  type _class_localson_fn[2086887] val _runtime_hdr[2086888]:chpl_comm_on_bundle_t[209301] val _0_tmp[2086890]:chpl_localeID_t[209294] wide-ref _1_this[2086892]:file[235580]
  function chpl__init_IO[416113]() : void[4] "insert line file info" "module init" "resolved"
  {
    const-val local__str_literal_3112[2377703]:string[26] "temp"
    (2377704 'move' "f" "f")
    const-val local__str_literal_3110[2377697]:string[26] "temp"
    (2377698 'move' "e" "e")
    const-val local__str_literal_3108[2377691]:string[26] "temp"
    (2377692 'move' "d" "d")
    const-val local__str_literal_3106[2377685]:string[26] "temp"
    (2377686 'move' "c" "c")
    const-val local__str_literal_3104[2377679]:string[26] "temp"
    (2377680 'move' "b" "b")
    const-val local__str_literal_3102[2377673]:string[26] "temp"
    (2377674 'move' "a" "a")
    (546810 'move' IOHINT_NONE[231411] 0)
    (2085055 '_private_broadcast' IOHINT_NONE[231411])
    (546812 'move' IOHINT_RANDOM[231416] QIO_HINT_RANDOM[231363])
    (2085057 '_private_broadcast' IOHINT_RANDOM[231416])
    (546814 'move' IOHINT_SEQUENTIAL[231421] QIO_HINT_SEQUENTIAL[231368])
    (2085059 '_private_broadcast' IOHINT_SEQUENTIAL[231421])
    (546816 'move' IOHINT_CACHED[231426] QIO_HINT_CACHED[231383])
    (2085061 '_private_broadcast' IOHINT_CACHED[231426])
    (546818 'move' IOHINT_PARALLEL[231431] QIO_HINT_PARALLEL[231388])
    (2085063 '_private_broadcast' IOHINT_PARALLEL[231431])
    const-val ret_tmp[1832185]:6*string[985051] "temp"
    val inlineImm[2220691]:string[26] "temp"
    (2220694 'move' inlineImm[2220691] "a")
    ref i__e0_x[2220696]:string[26] "temp"
    (2220700 'move' i__e0_x[2220696](2220698 'set reference' inlineImm[2220691]))
    val inlineImm[2220702]:string[26] "temp"
    (2220705 'move' inlineImm[2220702] "b")
    ref i__e1_x[2220707]:string[26] "temp"
    (2220711 'move' i__e1_x[2220707](2220709 'set reference' inlineImm[2220702]))
    val inlineImm[2220713]:string[26] "temp"
    (2220716 'move' inlineImm[2220713] "c")
    ref i__e2_x[2220718]:string[26] "temp"
    (2220722 'move' i__e2_x[2220718](2220720 'set reference' inlineImm[2220713]))
    val inlineImm[2220724]:string[26] "temp"
    (2220727 'move' inlineImm[2220724] "d")
    ref i__e3_x[2220729]:string[26] "temp"
    (2220733 'move' i__e3_x[2220729](2220731 'set reference' inlineImm[2220724]))
    val inlineImm[2220735]:string[26] "temp"
    (2220738 'move' inlineImm[2220735] "e")
    ref i__e4_x[2220740]:string[26] "temp"
    (2220744 'move' i__e4_x[2220740](2220742 'set reference' inlineImm[2220735]))
    val inlineImm[2220746]:string[26] "temp"
    (2220749 'move' inlineImm[2220746] "f")
    ref i__e5_x[2220751]:string[26] "temp"
    (2220755 'move' i__e5_x[2220751](2220753 'set reference' inlineImm[2220746]))
    (2344308 'set svec member' ret_tmp[1832185] 0 i__e0_x[2220696])
    (2344312 'set svec member' ret_tmp[1832185] 1 i__e1_x[2220707])
    (2344316 'set svec member' ret_tmp[1832185] 2 i__e2_x[2220718])
    (2344320 'set svec member' ret_tmp[1832185] 3 i__e3_x[2220729])
    (2344324 'set svec member' ret_tmp[1832185] 4 i__e4_x[2220740])
    (2344328 'set svec member' ret_tmp[1832185] 5 i__e5_x[2220751])
    (1832188 'move' call_tmp[721866] ret_tmp[1832185])
    val ret[2220802]:6*string[985217] "dead after last mention" "RVV" "temp"
    const-ref read_x0[2220806]:string[26]
    (2220808 'move' read_x0[2220806](2220810 'get svec member value' call_tmp[721866] 0))
    val ret[2220813]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220815]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430934]:string[26] "temp"
    (2430937 'move' tmp[2430934] read_x0[2220806])
    (2220818 call init=[30771] tmp[2220815] tmp[2430934])
    (2220821 'move' ret[2220813] tmp[2220815])
    const-ref read_x1[2220828]:string[26]
    (2220830 'move' read_x1[2220828](2220832 'get svec member value' call_tmp[721866] 1))
    val ret[2220835]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220837]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430940]:string[26] "temp"
    (2430943 'move' tmp[2430940] read_x1[2220828])
    (2220840 call init=[30771] tmp[2220837] tmp[2430940])
    (2220843 'move' ret[2220835] tmp[2220837])
    const-ref read_x2[2220850]:string[26]
    (2220852 'move' read_x2[2220850](2220854 'get svec member value' call_tmp[721866] 2))
    val ret[2220857]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220859]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430946]:string[26] "temp"
    (2430949 'move' tmp[2430946] read_x2[2220850])
    (2220862 call init=[30771] tmp[2220859] tmp[2430946])
    (2220865 'move' ret[2220857] tmp[2220859])
    const-ref read_x3[2220872]:string[26]
    (2220874 'move' read_x3[2220872](2220876 'get svec member value' call_tmp[721866] 3))
    val ret[2220879]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220881]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430952]:string[26] "temp"
    (2430955 'move' tmp[2430952] read_x3[2220872])
    (2220884 call init=[30771] tmp[2220881] tmp[2430952])
    (2220887 'move' ret[2220879] tmp[2220881])
    const-ref read_x4[2220894]:string[26]
    (2220896 'move' read_x4[2220894](2220898 'get svec member value' call_tmp[721866] 4))
    val ret[2220901]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220903]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430958]:string[26] "temp"
    (2430961 'move' tmp[2430958] read_x4[2220894])
    (2220906 call init=[30771] tmp[2220903] tmp[2430958])
    (2220909 'move' ret[2220901] tmp[2220903])
    const-ref read_x5[2220916]:string[26]
    (2220918 'move' read_x5[2220916](2220920 'get svec member value' call_tmp[721866] 5))
    val ret[2220923]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2220925]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430964]:string[26] "temp"
    (2430967 'move' tmp[2430964] read_x5[2220916])
    (2220928 call init=[30771] tmp[2220925] tmp[2430964])
    (2220931 'move' ret[2220923] tmp[2220925])
    (2344350 'set svec member' ret[2220802] 0 ret[2220813])
    (2344354 'set svec member' ret[2220802] 1 ret[2220835])
    (2344358 'set svec member' ret[2220802] 2 ret[2220857])
    (2344362 'set svec member' ret[2220802] 3 ret[2220879])
    (2344366 'set svec member' ret[2220802] 4 ret[2220901])
    (2344370 'set svec member' ret[2220802] 5 ret[2220923])
    (2085335 '.=' _arg_to_proto_names[246561] value[2085328] ret[2220802])
    const-val coerce_tmp[985694]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985700 'move' coerce_tmp[985694](985696 'cast' int(32)[95] 0))
    val error[1808697]:Error[167938] "error variable" "temp"
    (1808699 'move' error[1808697] nil[44])
    const-val tmp[2221019]:int(32)[95] "dead after last mention" "temp"
    (2221021 'move' tmp[2221019] IOHINT_NONE[231411])
    val errorExists[2108176]:bool[10] "temp"
    (2108181 'move' errorExists[2108176](2108178 '!=' error[1808697] nil[44]))
    if errorExists[2108176]
    {
      const-val tmp[2418694]:__wide_Error[2381123] "temp"
      (2418697 'move' tmp[2418694] error[1808697])
      (1808702 call chpl_propagate_error[170472] tmp[2418694])
    }
    const-val default_arg_style[985793]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808710]:Error[167938] "error variable" "temp"
    (1808712 'move' error[1808710] nil[44])
    const-val style[2221040]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2221042 'move' style[2221040](2221045 call defaultIOStyle[235295]))
    (985798 'move' default_arg_style[985793] style[2221040])
    val errorExists[2108184]:bool[10] "temp"
    (2108189 'move' errorExists[2108184](2108186 '!=' error[1808710] nil[44]))
    if errorExists[2108184]
    {
      const-val tmp[2418700]:__wide_Error[2381123] "temp"
      (2418703 'move' tmp[2418700] error[1808710])
      (1808715 call chpl_propagate_error[170472] tmp[2418700])
    }
    val error[1808723]:__wide_Error[2381123] "error variable" "temp"
    (1808725 'move' error[1808723] nil[44])
    const-val ret_tmp[1831469]:file[235580] "temp"
    ref tmp[2414387]:__wide_Error[2381123] "temp"
    (2414391 'move' tmp[2414387](2414389 'set reference' error[1808723]))
    (250216 call openfd[237271] coerce_tmp[985694] tmp[2221019] default_arg_style[985793] tmp[2414387] ret_tmp[1831469])
    (1831472 'move' call_tmp[723997] ret_tmp[1831469])
    val errorExists[2108192]:bool[10] "temp"
    (2108197 'move' errorExists[2108192](2108194 '!=' error[1808723] nil[44]))
    if errorExists[2108192]
    {
      (1808728 call chpl_propagate_error[170472] error[1808723])
    }
    val error[1808736]:Error[167938] "error variable" "temp"
    (1808738 'move' error[1808736] nil[44])
    (1016904 'move' default_arg_start[1016897] 0)
    val errorExists[2108200]:bool[10] "temp"
    (2108205 'move' errorExists[2108200](2108202 '!=' error[1808736] nil[44]))
    if errorExists[2108200]
    {
      const-val tmp[2418706]:__wide_Error[2381123] "temp"
      (2418709 'move' tmp[2418706] error[1808736])
      (1808741 call chpl_propagate_error[170472] tmp[2418706])
    }
    val error[1808749]:Error[167938] "error variable" "temp"
    (1808751 'move' error[1808749] nil[44])
    (1016968 'move' default_arg_end[1016961] 9223372036854775807)
    val errorExists[2108208]:bool[10] "temp"
    (2108213 'move' errorExists[2108208](2108210 '!=' error[1808749] nil[44]))
    if errorExists[2108208]
    {
      const-val tmp[2418712]:__wide_Error[2381123] "temp"
      (2418715 'move' tmp[2418712] error[1808749])
      (1808754 call chpl_propagate_error[170472] tmp[2418712])
    }
    val error[1808762]:Error[167938] "error variable" "temp"
    (1808764 'move' error[1808762] nil[44])
    const-val tmp[2226877]:int(32)[95] "dead after last mention" "temp"
    (2226879 'move' tmp[2226877] IOHINT_NONE[231411])
    (1017016 'move' default_arg_hints[1017009] tmp[2226877])
    val errorExists[2108216]:bool[10] "temp"
    (2108221 'move' errorExists[2108216](2108218 '!=' error[1808762] nil[44]))
    if errorExists[2108216]
    {
      const-val tmp[2418718]:__wide_Error[2381123] "temp"
      (2418721 'move' tmp[2418718] error[1808762])
      (1808767 call chpl_propagate_error[170472] tmp[2418718])
    }
    val error[1808775]:__wide_Error[2381123] "error variable" "temp"
    (1808777 'move' error[1808775] nil[44])
    ref i_this[2226889]:file[235580] "temp"
    (2226893 'move' i_this[2226889](2226891 'set reference' call_tmp[723997]))
    val ret[2226902]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2226904]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2226906]:__wide_Error[2381123] "error variable" "temp"
    (2226908 'move' error[2226906] nil[44])
    ref tmp[2431186]:__wide_Error[2381123] "temp"
    (2431190 'move' tmp[2431186](2431188 'set reference' error[2226906]))
    (2226911 'move' style[2226904](2226914 call _style[235960] i_this[2226889] tmp[2431186]))
    val errorExists[2226917]:bool[10] "temp"
    (2226919 'move' errorExists[2226917](2226921 '!=' error[2226906] nil[44]))
    if errorExists[2226917]
    {
      (2226926 '=' error[1808775] error[2226906])
      gotoErrorHandlingReturn _endreader_default_style[2226935] _endreader_default_style[2226935]
    }
    (2226932 'move' ret[2226902] style[2226904])
    label _endreader_default_style[2226935]
    (1017594 'move' default_arg_style[1017587] ret[2226902])
    val errorExists[2108224]:bool[10] "temp"
    (2108229 'move' errorExists[2108224](2108226 '!=' error[1808775] nil[44]))
    if errorExists[2108224]
    {
      (1808780 call chpl_propagate_error[170472] error[1808775])
    }
    val error[1808788]:__wide_Error[2381123] "error variable" "temp"
    (1808790 'move' error[1808788] nil[44])
    const-val ret_tmp[1832521]:channel(false,dynamic,true)[985627] "temp"
    ref tmp[2414394]:__wide_Error[2381123] "temp"
    (2414398 'move' tmp[2414394](2414396 'set reference' error[1808788]))
    (250221 call reader[1016561] call_tmp[723997] default_arg_start[1016897] default_arg_end[1016961] default_arg_hints[1017009] default_arg_style[1017587] tmp[2414394] ret_tmp[1832521])
    (1832524 'move' call_tmp[724004] ret_tmp[1832521])
    val errorExists[2108232]:bool[10] "temp"
    (2108237 'move' errorExists[2108232](2108234 '!=' error[1808788] nil[44]))
    if errorExists[2108232]
    {
      (1808793 call chpl_propagate_error[170472] error[1808788])
    }
    (547550 'move' stdin[250208] call_tmp[724004])
    (2085065 '_private_broadcast' stdin[250208])
    (724012 'move' call_tmp[724009](250243 call chpl_cstdout[223558]))
    val error[1808801]:Error[167938] "error variable" "temp"
    (1808803 'move' error[1808801] nil[44])
    const-val tmp[2227705]:int(32)[95] "dead after last mention" "temp"
    (2227707 'move' tmp[2227705] IOHINT_NONE[231411])
    val errorExists[2108240]:bool[10] "temp"
    (2108245 'move' errorExists[2108240](2108242 '!=' error[1808801] nil[44]))
    if errorExists[2108240]
    {
      const-val tmp[2418724]:__wide_Error[2381123] "temp"
      (2418727 'move' tmp[2418724] error[1808801])
      (1808806 call chpl_propagate_error[170472] tmp[2418724])
    }
    const-val default_arg_style[1021914]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808814]:Error[167938] "error variable" "temp"
    (1808816 'move' error[1808814] nil[44])
    const-val style[2227747]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2227749 'move' style[2227747](2227752 call defaultIOStyle[235295]))
    (1021919 'move' default_arg_style[1021914] style[2227747])
    val errorExists[2108248]:bool[10] "temp"
    (2108253 'move' errorExists[2108248](2108250 '!=' error[1808814] nil[44]))
    if errorExists[2108248]
    {
      const-val tmp[2418730]:__wide_Error[2381123] "temp"
      (2418733 'move' tmp[2418730] error[1808814])
      (1808819 call chpl_propagate_error[170472] tmp[2418730])
    }
    val error[1808827]:__wide_Error[2381123] "error variable" "temp"
    (1808829 'move' error[1808827] nil[44])
    const-val ret_tmp[1831483]:file[235580] "temp"
    ref tmp[2414401]:__wide_Error[2381123] "temp"
    (2414405 'move' tmp[2414401](2414403 'set reference' error[1808827]))
    (250245 call openfp[237400] call_tmp[724009] tmp[2227705] default_arg_style[1021914] tmp[2414401] ret_tmp[1831483])
    (1831486 'move' call_tmp[724014] ret_tmp[1831483])
    val errorExists[2108256]:bool[10] "temp"
    (2108261 'move' errorExists[2108256](2108258 '!=' error[1808827] nil[44]))
    if errorExists[2108256]
    {
      (1808832 call chpl_propagate_error[170472] error[1808827])
    }
    val error[1808840]:Error[167938] "error variable" "temp"
    (1808842 'move' error[1808840] nil[44])
    (1022479 'move' default_arg_start[1022472] 0)
    val errorExists[2108264]:bool[10] "temp"
    (2108269 'move' errorExists[2108264](2108266 '!=' error[1808840] nil[44]))
    if errorExists[2108264]
    {
      const-val tmp[2418736]:__wide_Error[2381123] "temp"
      (2418739 'move' tmp[2418736] error[1808840])
      (1808845 call chpl_propagate_error[170472] tmp[2418736])
    }
    val error[1808853]:Error[167938] "error variable" "temp"
    (1808855 'move' error[1808853] nil[44])
    (1022543 'move' default_arg_end[1022536] 9223372036854775807)
    val errorExists[2108272]:bool[10] "temp"
    (2108277 'move' errorExists[2108272](2108274 '!=' error[1808853] nil[44]))
    if errorExists[2108272]
    {
      const-val tmp[2418742]:__wide_Error[2381123] "temp"
      (2418745 'move' tmp[2418742] error[1808853])
      (1808858 call chpl_propagate_error[170472] tmp[2418742])
    }
    val error[1808866]:Error[167938] "error variable" "temp"
    (1808868 'move' error[1808866] nil[44])
    const-val tmp[2227885]:int(32)[95] "dead after last mention" "temp"
    (2227887 'move' tmp[2227885](2227889 'cast' int(32)[95] 0))
    (1022594 'move' default_arg_hints[1022587] tmp[2227885])
    val errorExists[2108280]:bool[10] "temp"
    (2108285 'move' errorExists[2108280](2108282 '!=' error[1808866] nil[44]))
    if errorExists[2108280]
    {
      const-val tmp[2418748]:__wide_Error[2381123] "temp"
      (2418751 'move' tmp[2418748] error[1808866])
      (1808871 call chpl_propagate_error[170472] tmp[2418748])
    }
    val error[1808879]:__wide_Error[2381123] "error variable" "temp"
    (1808881 'move' error[1808879] nil[44])
    ref i_this[2227928]:file[235580] "temp"
    (2227932 'move' i_this[2227928](2227930 'set reference' call_tmp[724014]))
    val ret[2227941]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227943]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2227945]:__wide_Error[2381123] "error variable" "temp"
    (2227947 'move' error[2227945] nil[44])
    ref tmp[2431307]:__wide_Error[2381123] "temp"
    (2431311 'move' tmp[2431307](2431309 'set reference' error[2227945]))
    (2227950 'move' style[2227943](2227953 call _style[235960] i_this[2227928] tmp[2431307]))
    val errorExists[2227956]:bool[10] "temp"
    (2227958 'move' errorExists[2227956](2227960 '!=' error[2227945] nil[44]))
    if errorExists[2227956]
    {
      (2227965 '=' error[1808879] error[2227945])
      gotoErrorHandlingReturn _endwriter_default_style[2227974] _endwriter_default_style[2227974]
    }
    (2227971 'move' ret[2227941] style[2227943])
    label _endwriter_default_style[2227974]
    (1022631 'move' default_arg_style[1022624] ret[2227941])
    val errorExists[2108288]:bool[10] "temp"
    (2108293 'move' errorExists[2108288](2108290 '!=' error[1808879] nil[44]))
    if errorExists[2108288]
    {
      (1808884 call chpl_propagate_error[170472] error[1808879])
    }
    val error[1808892]:__wide_Error[2381123] "error variable" "temp"
    (1808894 'move' error[1808892] nil[44])
    const-val ret_tmp[1832581]:channel(true,dynamic,true)[1021825] "temp"
    ref tmp[2414408]:__wide_Error[2381123] "temp"
    (2414412 'move' tmp[2414408](2414410 'set reference' error[1808892]))
    (250250 call writer[1022136] call_tmp[724014] default_arg_start[1022472] default_arg_end[1022536] default_arg_hints[1022587] default_arg_style[1022624] tmp[2414408] ret_tmp[1832581])
    (1832584 'move' call_tmp[724021] ret_tmp[1832581])
    val errorExists[2108296]:bool[10] "temp"
    (2108301 'move' errorExists[2108296](2108298 '!=' error[1808892] nil[44]))
    if errorExists[2108296]
    {
      (1808897 call chpl_propagate_error[170472] error[1808892])
    }
    (547565 'move' stdout[250235] call_tmp[724021])
    (2085067 '_private_broadcast' stdout[250235])
    (724029 'move' call_tmp[724026](250272 call chpl_cstderr[223566]))
    val error[1808905]:Error[167938] "error variable" "temp"
    (1808907 'move' error[1808905] nil[44])
    const-val tmp[2227726]:int(32)[95] "dead after last mention" "temp"
    (2227728 'move' tmp[2227726] IOHINT_NONE[231411])
    val errorExists[2108304]:bool[10] "temp"
    (2108309 'move' errorExists[2108304](2108306 '!=' error[1808905] nil[44]))
    if errorExists[2108304]
    {
      const-val tmp[2418754]:__wide_Error[2381123] "temp"
      (2418757 'move' tmp[2418754] error[1808905])
      (1808910 call chpl_propagate_error[170472] tmp[2418754])
    }
    const-val default_arg_style[1023866]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1808918]:Error[167938] "error variable" "temp"
    (1808920 'move' error[1808918] nil[44])
    const-val style[2227769]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2227771 'move' style[2227769](2227774 call defaultIOStyle[235295]))
    (1023871 'move' default_arg_style[1023866] style[2227769])
    val errorExists[2108312]:bool[10] "temp"
    (2108317 'move' errorExists[2108312](2108314 '!=' error[1808918] nil[44]))
    if errorExists[2108312]
    {
      const-val tmp[2418760]:__wide_Error[2381123] "temp"
      (2418763 'move' tmp[2418760] error[1808918])
      (1808923 call chpl_propagate_error[170472] tmp[2418760])
    }
    val error[1808931]:__wide_Error[2381123] "error variable" "temp"
    (1808933 'move' error[1808931] nil[44])
    const-val ret_tmp[1831489]:file[235580] "temp"
    ref tmp[2414415]:__wide_Error[2381123] "temp"
    (2414419 'move' tmp[2414415](2414417 'set reference' error[1808931]))
    (250274 call openfp[237400] call_tmp[724026] tmp[2227726] default_arg_style[1023866] tmp[2414415] ret_tmp[1831489])
    (1831492 'move' call_tmp[724031] ret_tmp[1831489])
    val errorExists[2108320]:bool[10] "temp"
    (2108325 'move' errorExists[2108320](2108322 '!=' error[1808931] nil[44]))
    if errorExists[2108320]
    {
      (1808936 call chpl_propagate_error[170472] error[1808931])
    }
    val error[1808944]:Error[167938] "error variable" "temp"
    (1808946 'move' error[1808944] nil[44])
    (1023915 'move' default_arg_start[1023908] 0)
    val errorExists[2108328]:bool[10] "temp"
    (2108333 'move' errorExists[2108328](2108330 '!=' error[1808944] nil[44]))
    if errorExists[2108328]
    {
      const-val tmp[2418766]:__wide_Error[2381123] "temp"
      (2418769 'move' tmp[2418766] error[1808944])
      (1808949 call chpl_propagate_error[170472] tmp[2418766])
    }
    val error[1808957]:Error[167938] "error variable" "temp"
    (1808959 'move' error[1808957] nil[44])
    (1023926 'move' default_arg_end[1023919] 9223372036854775807)
    val errorExists[2108336]:bool[10] "temp"
    (2108341 'move' errorExists[2108336](2108338 '!=' error[1808957] nil[44]))
    if errorExists[2108336]
    {
      const-val tmp[2418772]:__wide_Error[2381123] "temp"
      (2418775 'move' tmp[2418772] error[1808957])
      (1808962 call chpl_propagate_error[170472] tmp[2418772])
    }
    val error[1808970]:Error[167938] "error variable" "temp"
    (1808972 'move' error[1808970] nil[44])
    const-val tmp[2227914]:int(32)[95] "dead after last mention" "temp"
    (2227916 'move' tmp[2227914](2227918 'cast' int(32)[95] 0))
    (1023937 'move' default_arg_hints[1023930] tmp[2227914])
    val errorExists[2108344]:bool[10] "temp"
    (2108349 'move' errorExists[2108344](2108346 '!=' error[1808970] nil[44]))
    if errorExists[2108344]
    {
      const-val tmp[2418778]:__wide_Error[2381123] "temp"
      (2418781 'move' tmp[2418778] error[1808970])
      (1808975 call chpl_propagate_error[170472] tmp[2418778])
    }
    val error[1808983]:__wide_Error[2381123] "error variable" "temp"
    (1808985 'move' error[1808983] nil[44])
    ref i_this[2227978]:file[235580] "temp"
    (2227982 'move' i_this[2227978](2227980 'set reference' call_tmp[724031]))
    val ret[2227991]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2227993]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2227995]:__wide_Error[2381123] "error variable" "temp"
    (2227997 'move' error[2227995] nil[44])
    ref tmp[2431314]:__wide_Error[2381123] "temp"
    (2431318 'move' tmp[2431314](2431316 'set reference' error[2227995]))
    (2228000 'move' style[2227993](2228003 call _style[235960] i_this[2227978] tmp[2431314]))
    val errorExists[2228006]:bool[10] "temp"
    (2228008 'move' errorExists[2228006](2228010 '!=' error[2227995] nil[44]))
    if errorExists[2228006]
    {
      (2228015 '=' error[1808983] error[2227995])
      gotoErrorHandlingReturn _endwriter_default_style[2228024] _endwriter_default_style[2228024]
    }
    (2228021 'move' ret[2227991] style[2227993])
    label _endwriter_default_style[2228024]
    (1023948 'move' default_arg_style[1023941] ret[2227991])
    val errorExists[2108352]:bool[10] "temp"
    (2108357 'move' errorExists[2108352](2108354 '!=' error[1808983] nil[44]))
    if errorExists[2108352]
    {
      (1808988 call chpl_propagate_error[170472] error[1808983])
    }
    val error[1808996]:__wide_Error[2381123] "error variable" "temp"
    (1808998 'move' error[1808996] nil[44])
    const-val ret_tmp[1832587]:channel(true,dynamic,true)[1021825] "temp"
    ref tmp[2414422]:__wide_Error[2381123] "temp"
    (2414426 'move' tmp[2414422](2414424 'set reference' error[1808996]))
    (250279 call writer[1022136] call_tmp[724031] default_arg_start[1023908] default_arg_end[1023919] default_arg_hints[1023930] default_arg_style[1023941] tmp[2414422] ret_tmp[1832587])
    (1832590 'move' call_tmp[724038] ret_tmp[1832587])
    val errorExists[2108360]:bool[10] "temp"
    (2108365 'move' errorExists[2108360](2108362 '!=' error[1808996] nil[44]))
    if errorExists[2108360]
    {
      (1809001 call chpl_propagate_error[170472] error[1808996])
    }
    (547580 'move' stderr[250264] call_tmp[724038])
    (2085069 '_private_broadcast' stderr[250264])
    (536188 return _void[55])
  }
  def module FormattedIO[251268]  
  type iomode[230915] def r[230904]:iomode[230915] 1 def cw[230907]:iomode[230915] 2 def rw[230910]:iomode[230915] 3 def cwr[230913]:iomode[230915] 4
  type iokind[230931] def dynamic[230920]:iokind[230931] 0 def native[230923]:iokind[230931] 1 def big[230926]:iokind[230931] 2 def little[230929]:iokind[230931] 3
  type iostringstyle[231014] def len1b_data[230978]:iostringstyle[231014] -1 def len2b_data[230983]:iostringstyle[231014] -2 def len4b_data[230988]:iostringstyle[231014] -4 def len8b_data[230993]:iostringstyle[231014] -8 def lenVb_data[230998]:iostringstyle[231014] -10 def data_toeof[231005]:iostringstyle[231014] -65280 def data_null[231012]:iostringstyle[231014] -256
  type iostringformat[231036] def word[231019]:iostringformat[231036] 0 def basic[231022]:iostringformat[231036] 1 def chpl[231025]:iostringformat[231036] 2 def json[231028]:iostringformat[231036] 3 def toend[231031]:iostringformat[231036] 4 def toeof[231034]:iostringformat[231036] 5
  const QIO_FDFLAG_UNK[231298]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231303]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231308]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231313]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231318]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231323]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231328]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231333]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231338]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231343]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231348]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231353]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231358]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231363]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231368]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231373]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231378]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231383]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231388]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231393]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231398]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231403]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231411]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231416]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231421]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231426]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231431]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  type qio_file_ptr_t[231439]
  const-val QIO_FILE_PTR_NULL[231442]:qio_file_ptr_t[231439] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qio_channel_ptr_t[231465]
  const-val QIO_CHANNEL_PTR_NULL[231468]:qio_channel_ptr_t[231465] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231476]
  const-val QBUFFER_PTR_NULL[231479]:qbuffer_ptr_t[231476] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231494]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231502]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231510]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231518]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231526]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231534]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  type iostyle[231844] val binary[231544]:uint(8)[100] val byteorder[231562]:uint(8)[100] val str_style[231582]:int(64)[13] val min_width_columns[231591]:uint(32)[110] val max_width_columns[231606]:uint(32)[110] val max_width_characters[231621]:uint(32)[110] val max_width_bytes[231636]:uint(32)[110] val string_start[231642]:uint(8)[100] val string_end[231648]:uint(8)[100] val string_format[231668]:uint(8)[100] val bytes_prefix[231674]:uint(8)[100] val base[231683]:uint(8)[100] val point_char[231689]:uint(8)[100] val exponent_char[231697]:uint(8)[100] val other_exponent_char[231703]:uint(8)[100] val positive_char[231709]:uint(8)[100] val negative_char[231715]:uint(8)[100] val i_char[231723]:uint(8)[100] val prefix_base[231732]:uint(8)[100] val pad_char[231738]:uint(8)[100] val showplus[231747]:uint(8)[100] val uppercase[231756]:uint(8)[100] val leftjustify[231765]:uint(8)[100] val showpoint[231774]:uint(8)[100] val showpointzero[231783]:uint(8)[100] val precision[231794]:int(32)[95] val realfmt[231803]:uint(8)[100] val complex_style[231812]:uint(8)[100] val array_style[231821]:uint(8)[100] val aggregate_style[231830]:uint(8)[100] val tuple_style[231839]:uint(8)[100]
  function QioPluginFile[232010].setupChannel[231856](const in arg this[232012]:QioPluginFile[232010], ref arg pluginChannel[231853]:QioPluginChannel[232093], const in arg start[231862]:int(64)[13], const in arg end[231869]:int(64)[13], const in arg qioChannelPtr[231873]:qio_channel_ptr_t[231465]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1456483]:QioPluginChannel[232093] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1456508 'move' _formal_tmp_pluginChannel[1456483](1456506 'cast' QioPluginChannel[232093] nil[44]))
    const-val call_tmp[2207707]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207709 'move' call_tmp[2207707](2207712 call qio_int_to_err[223634] ENOSYS[224684]))
    label _endsetupChannel[1456493]
    (1842427 '=' pluginChannel[231853] _formal_tmp_pluginChannel[1456483])
    (533655 return call_tmp[2207707])
  }
  function QioPluginFile[232010].filelength[231893](const in arg this[232016]:QioPluginFile[232010], ref arg length[231890]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207783]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207785 'move' call_tmp[2207783](2207788 call qio_int_to_err[223634] ENOSYS[224684]))
    label _endfilelength[1458130]
    (1842430 '=' length[231890] 0)
    (533665 return call_tmp[2207783])
  }
  function QioPluginFile[232010].getpath[231909](const in arg this[232020]:QioPluginFile[232010], ref arg path[231906]:c_string[19], ref arg len[231915]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1458178]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458213 'move' _formal_tmp_path[1458178](1458211 'cast' c_string[19] nil[44]))
    const-val call_tmp[2207802]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207804 'move' call_tmp[2207802](2207807 call qio_int_to_err[223634] ENOSYS[224684]))
    label _endgetpath[1458189]
    (1842433 '=' path[231906] _formal_tmp_path[1458178])
    (1842436 '=' len[231915] 0)
    (533675 return call_tmp[2207802])
  }
  function QioPluginFile[232010].fsync[231928](const in arg this[232024]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207821]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207823 'move' call_tmp[2207821](2207826 call qio_int_to_err[223634] ENOSYS[224684]))
    (533685 return call_tmp[2207821])
  }
  function QioPluginFile[232010].getChunk[231947](const in arg this[232028]:QioPluginFile[232010], ref arg length[231944]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207840]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207842 'move' call_tmp[2207840](2207845 call qio_int_to_err[223634] ENOSYS[224684]))
    label _endgetChunk[1458280]
    (1842439 '=' length[231944] 0)
    (533695 return call_tmp[2207840])
  }
  function QioPluginFile[232010].getLocalesForRegion[231966](const in arg this[232032]:QioPluginFile[232010], const in arg start[231963]:int(64)[13], const in arg end[231972]:int(64)[13], ref arg localeNames[231979]:c_ptr(c_string)[1458305], ref arg nLocales[231986]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1458357]:c_ptr(c_string)[1458305] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1458382 'move' _formal_tmp_localeNames[1458357](1458380 'cast' c_ptr(c_string)[1458305] nil[44]))
    const-val call_tmp[2207859]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207861 'move' call_tmp[2207859](2207864 call qio_int_to_err[223634] ENOSYS[224684]))
    label _endgetLocalesForRegion[1458367]
    (1842442 '=' localeNames[231979] _formal_tmp_localeNames[1458357])
    (533705 return call_tmp[2207859])
  }
  function QioPluginFile[232010].close[231999](const in arg this[232036]:QioPluginFile[232010]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207878]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207880 'move' call_tmp[2207878](2207883 call qio_int_to_err[223634] ENOSYS[224684]))
    (533715 return call_tmp[2207878])
  }
  function __wide_QioPluginFile[2381165].deinit[879961](const in arg this[879965]:__wide_QioPluginFile[2381165]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814966]
    (879973 return _void[55])
  }
  type QioPluginFile[232010] val super[355724]:object[22] "super class"
  function QioPluginChannel[232093].readAtLeast[232051](const in arg this[232095]:QioPluginChannel[232093], const in arg amt[232048]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207726]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207728 'move' call_tmp[2207726](2207731 call qio_int_to_err[223634] ENOSYS[224684]))
    (533725 return call_tmp[2207726])
  }
  function QioPluginChannel[232093].write[232070](const in arg this[232099]:QioPluginChannel[232093], const in arg amt[232067]:int(64)[13]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207745]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207747 'move' call_tmp[2207745](2207750 call qio_int_to_err[223634] ENOSYS[224684]))
    (533735 return call_tmp[2207745])
  }
  function QioPluginChannel[232093].close[232082](const in arg this[232103]:QioPluginChannel[232093]) : syserr[223584] "method" "primary method" "resolved"
  {
    const-val call_tmp[2207764]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207766 'move' call_tmp[2207764](2207769 call qio_int_to_err[223634] ENOSYS[224684]))
    (533745 return call_tmp[2207764])
  }
  function __wide_QioPluginChannel[2381172].deinit[880097](const in arg this[880101]:__wide_QioPluginChannel[2381172]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1814978]
    (880109 return _void[55])
  }
  type QioPluginChannel[232093] val super[355726]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232114](const in arg file[232111]:c_void_ptr[149], ref arg plugin_ch[232117]:c_void_ptr[149], const in arg start[232124]:int(64)[13], const in arg end[232131]:int(64)[13], const in arg qio_ch[232135]:qio_channel_ptr_t[231465]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377437]:string[26] "temp"
    (2377438 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2326955]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326957 'move' call_tmp[2326955](2326959 'cast' QioPluginFile[232010] file[232111]))
    val coerce_tmp[2327068]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327070 'move' coerce_tmp[2327068](2327072 'cast' object[22] call_tmp[2326955]))
    const-val call_tmp[2327075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327077 'move' call_tmp[2327075](2327079 'ptr_eq' coerce_tmp[2327068] nil[44]))
    if call_tmp[2327075]
    {
      (2327085 call nilCheckHalt[210151] "argument to ! is nil")
    }
    val pluginChannel[232156]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1456460]:QioPluginChannel[232093] "dead at end of block" "temp"
    (1456463 'move' init_coerce_tmp[1456460](1456628 'cast' QioPluginChannel[232093] nil[44]))
    (546855 'move' pluginChannel[232156] init_coerce_tmp[1456460])
    const-val call_tmp[715118]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_pluginChannel[1456475]:QioPluginChannel[232093] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715121 'move' call_tmp[715118](232171 call setupChannel[231856] call_tmp[2326955] _formal_tmp_out_pluginChannel[1456475] start[232124] end[232131] qio_ch[232135]))
    (2327235 '=' pluginChannel[232156] _formal_tmp_out_pluginChannel[1456475])
    const-val call_tmp[2327241]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327243 'move' call_tmp[2327241](2327245 'cast' c_void_ptr[149] pluginChannel[232156]))
    (2115910 '=' plugin_ch[232117] call_tmp[2327241])
    label _end_chpl_qio_setup_plugin_channel[533751]
    (533755 return call_tmp[715118])
  }
  function chpl_qio_read_atleast[232196](const in arg ch_plugin[232193]:c_void_ptr[149], const in arg amt[232202]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377443]:string[26] "temp"
    (2377444 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2327251]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327253 'move' call_tmp[2327251](2327255 'cast' QioPluginChannel[232093] ch_plugin[232193]))
    val coerce_tmp[2327324]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327326 'move' coerce_tmp[2327324](2327328 'cast' object[22] call_tmp[2327251]))
    const-val call_tmp[2327331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327333 'move' call_tmp[2327331](2327335 'ptr_eq' coerce_tmp[2327324] nil[44]))
    if call_tmp[2327331]
    {
      (2327341 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715140]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (715143 'move' call_tmp[715140](232226 call readAtLeast[232051] call_tmp[2327251] amt[232202]))
    label _end_chpl_qio_read_atleast[533763]
    (533767 return call_tmp[715140])
  }
  function chpl_qio_write[232237](const in arg ch_plugin[232234]:c_void_ptr[149], const in arg amt[232243]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377449]:string[26] "temp"
    (2377450 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2327261]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327263 'move' call_tmp[2327261](2327265 'cast' QioPluginChannel[232093] ch_plugin[232234]))
    val coerce_tmp[2327347]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327349 'move' coerce_tmp[2327347](2327351 'cast' object[22] call_tmp[2327261]))
    const-val call_tmp[2327354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327356 'move' call_tmp[2327354](2327358 'ptr_eq' coerce_tmp[2327347] nil[44]))
    if call_tmp[2327354]
    {
      (2327364 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715157]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (715160 'move' call_tmp[715157](232265 call write[232070] call_tmp[2327261] amt[232243]))
    label _end_chpl_qio_write[533774]
    (533778 return call_tmp[715157])
  }
  function chpl_qio_channel_close[232276](const in arg ch[232273]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377455]:string[26] "temp"
    (2377456 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2327271]:QioPluginChannel[232093] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327273 'move' call_tmp[2327271](2327275 'cast' QioPluginChannel[232093] ch[232273]))
    val coerce_tmp[2327370]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327372 'move' coerce_tmp[2327370](2327374 'cast' object[22] call_tmp[2327271]))
    const-val call_tmp[2327377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327379 'move' call_tmp[2327377](2327381 'ptr_eq' coerce_tmp[2327370] nil[44]))
    if call_tmp[2327377]
    {
      (2327387 call nilCheckHalt[210151] "argument to ! is nil")
    }
    val c[232287]:QioPluginChannel[232093] "dead at end of block" "insert auto destroy"
    (546863 'move' c[232287] call_tmp[2327271])
    const-val call_tmp[715174]:syserr[223584] "dead at end of block" "maybe param" "temp"
    (715177 'move' call_tmp[715174](232299 call close[232082] call_tmp[2327271]))
    val coerce_tmp[2327393]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327395 'move' coerce_tmp[2327393](2327397 'cast' object[22] c[232287]))
    const-val call_tmp[2327400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327402 'move' call_tmp[2327400](2327404 'ptr_neq' coerce_tmp[2327393] nil[44]))
    if call_tmp[2327400]
    {
      const-val call_tmp[2327416]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327418 'move' call_tmp[2327416](2327420 '_wide_get_locale' c[232287]))
      val isdirect[2327425]:bool[10] "temp"
      (2327427 'move' isdirect[2327425](2327430 call chpl_doDirectExecuteOn[187423] call_tmp[2327416]))
      if isdirect[2327425]
      {
        const-val tmp[2441701]:__wide_QioPluginChannel[2381172] "temp"
        (2441704 'move' tmp[2441701] c[232287])
        (2327435 call on_fn[1457295] tmp[2441701])
      }
      {
        val _args_foron_fn[2327438]:_class_localson_fn[2096691] "temp"
        (2327440 'move' _args_foron_fn[2327438](2327442 'stack allocate class' _class_localson_fn[2096691]))
        (2327444 '.=' _args_foron_fn[2327438] _0_tmp[2096694] call_tmp[2327416])
        val tmp[2441707]:__wide_QioPluginChannel[2381172] "temp"
        (2441710 'move' tmp[2441707] c[232287])
        (2327448 '.=' _args_foron_fn[2327438] _1_arg[2096696] tmp[2441707])
        val _args_vforon_fn[2327452]:c_void_ptr[149] "temp"
        (2327454 'move' _args_vforon_fn[2327452](2327456 'cast_to_void_star' _args_foron_fn[2327438]))
        val _args_sizeon_fn[2327458]:int(64)[13] "temp"
        (2327460 'move' _args_sizeon_fn[2327458](2327462 'sizeof_bundle' _class_localson_fn[2096691]))
        on(2327465 call wrapon_fn[2096725] call_tmp[2327416] _args_vforon_fn[2327452] _args_sizeon_fn[2327458] _args_foron_fn[2327438])
      }
    }
    label _end_chpl_qio_channel_close[533785]
    (533789 return call_tmp[715174])
  }
  function chpl_qio_filelength[232321](const in arg file[232318]:c_void_ptr[149], ref arg length[232327]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377461]:string[26] "temp"
    (2377462 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2326965]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326967 'move' call_tmp[2326965](2326969 'cast' QioPluginFile[232010] file[232318]))
    val coerce_tmp[2327091]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327093 'move' coerce_tmp[2327091](2327095 'cast' object[22] call_tmp[2326965]))
    const-val call_tmp[2327098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327100 'move' call_tmp[2327098](2327102 'ptr_eq' coerce_tmp[2327091] nil[44]))
    if call_tmp[2327098]
    {
      (2327108 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715191]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1458112]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715194 'move' call_tmp[715191](232352 call filelength[231893] call_tmp[2326965] _formal_tmp_out_length[1458112]))
    (2121930 '=' length[232327] _formal_tmp_out_length[1458112])
    label _end_chpl_qio_filelength[533797]
    (533801 return call_tmp[715191])
  }
  function chpl_qio_getpath[232364](const in arg file[232361]:c_void_ptr[149], ref arg str[232367]:c_string[19], ref arg len[232374]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377467]:string[26] "temp"
    (2377468 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2326975]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326977 'move' call_tmp[2326975](2326979 'cast' QioPluginFile[232010] file[232361]))
    val coerce_tmp[2327114]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327116 'move' coerce_tmp[2327114](2327118 'cast' object[22] call_tmp[2326975]))
    const-val call_tmp[2327121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327123 'move' call_tmp[2327121](2327125 'ptr_eq' coerce_tmp[2327114] nil[44]))
    if call_tmp[2327121]
    {
      (2327131 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715208]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_path[1458163]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1458170]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715211 'move' call_tmp[715208](232400 call getpath[231909] call_tmp[2326975] _formal_tmp_out_path[1458163] _formal_tmp_out_len[1458170]))
    (2119839 '=' str[232367] _formal_tmp_out_path[1458163])
    (2121936 '=' len[232374] _formal_tmp_out_len[1458170])
    label _end_chpl_qio_getpath[533809]
    (533813 return call_tmp[715208])
  }
  function chpl_qio_fsync[232412](const in arg file[232409]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377473]:string[26] "temp"
    (2377474 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2326985]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326987 'move' call_tmp[2326985](2326989 'cast' QioPluginFile[232010] file[232409]))
    val coerce_tmp[2327137]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327139 'move' coerce_tmp[2327137](2327141 'cast' object[22] call_tmp[2326985]))
    const-val call_tmp[2327144]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327146 'move' call_tmp[2327144](2327148 'ptr_eq' coerce_tmp[2327137] nil[44]))
    if call_tmp[2327144]
    {
      (2327154 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715225]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (715228 'move' call_tmp[715225](232435 call fsync[231928] call_tmp[2326985]))
    label _end_chpl_qio_fsync[533821]
    (533825 return call_tmp[715225])
  }
  function chpl_qio_get_chunk[232447](const in arg file[232444]:c_void_ptr[149], ref arg length[232453]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377479]:string[26] "temp"
    (2377480 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2326995]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2326997 'move' call_tmp[2326995](2326999 'cast' QioPluginFile[232010] file[232444]))
    val coerce_tmp[2327160]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327162 'move' coerce_tmp[2327160](2327164 'cast' object[22] call_tmp[2326995]))
    const-val call_tmp[2327167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327169 'move' call_tmp[2327167](2327171 'ptr_eq' coerce_tmp[2327160] nil[44]))
    if call_tmp[2327167]
    {
      (2327177 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715242]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1458262]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715245 'move' call_tmp[715242](232478 call getChunk[231947] call_tmp[2326995] _formal_tmp_out_length[1458262]))
    (2121942 '=' length[232453] _formal_tmp_out_length[1458262])
    label _end_chpl_qio_get_chunk[533833]
    (533837 return call_tmp[715242])
  }
  function chpl_qio_get_locales_for_region[232490](const in arg file[232487]:c_void_ptr[149], const in arg start[232496]:int(64)[13], const in arg end[232503]:int(64)[13], ref arg localeNames[232507]:c_void_ptr[149], const  ref arg nLocales[232514]:int(64)[13]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377485]:string[26] "temp"
    (2377486 'move' "argument to ! is nil" "argument to ! is nil")
    val strPtr[232522]:c_ptr(c_string)[1458305] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[2327005]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327007 'move' call_tmp[2327005](2327009 'cast' QioPluginFile[232010] file[232487]))
    val coerce_tmp[2327183]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327185 'move' coerce_tmp[2327183](2327187 'cast' object[22] call_tmp[2327005]))
    const-val call_tmp[2327190]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327192 'move' call_tmp[2327190](2327194 'ptr_eq' coerce_tmp[2327183] nil[44]))
    if call_tmp[2327190]
    {
      (2327200 call nilCheckHalt[210151] "argument to ! is nil")
    }
    const-val call_tmp[715264]:syserr[223584] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_localeNames[1458349]:c_ptr(c_string)[1458305] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715267 'move' call_tmp[715264](232550 call getLocalesForRegion[231966] call_tmp[2327005] start[232496] end[232503] _formal_tmp_out_localeNames[1458349] nLocales[232514]))
    (1842445 '=' strPtr[232522] _formal_tmp_out_localeNames[1458349])
    (1458416 'noop')
    const-val call_tmp[715269]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715272 'move' call_tmp[715269](232558 'cast' c_void_ptr[149] strPtr[232522]))
    (2115916 '=' localeNames[232507] call_tmp[715269])
    label _end_chpl_qio_get_locales_for_region[533845]
    (533849 return call_tmp[715264])
  }
  function chpl_qio_file_close[232575](const in arg file[232572]:c_void_ptr[149]) : syserr[223584] "export" "local args" "no doc" "resolved"
  {
    const-val local__str_literal_129[2377491]:string[26] "temp"
    (2377492 'move' "argument to ! is nil" "argument to ! is nil")
    val call_tmp[2327015]:QioPluginFile[232010] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327017 'move' call_tmp[2327015](2327019 'cast' QioPluginFile[232010] file[232572]))
    val coerce_tmp[2327206]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327208 'move' coerce_tmp[2327206](2327210 'cast' object[22] call_tmp[2327015]))
    const-val call_tmp[2327213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327215 'move' call_tmp[2327213](2327217 'ptr_eq' coerce_tmp[2327206] nil[44]))
    if call_tmp[2327213]
    {
      (2327223 call nilCheckHalt[210151] "argument to ! is nil")
    }
    val f[232586]:QioPluginFile[232010] "dead at end of block" "insert auto destroy"
    (546881 'move' f[232586] call_tmp[2327015])
    const-val call_tmp[715286]:syserr[223584] "dead at end of block" "maybe param" "temp"
    (715289 'move' call_tmp[715286](232596 call close[231999] call_tmp[2327015]))
    val coerce_tmp[2327475]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2327477 'move' coerce_tmp[2327475](2327479 'cast' object[22] f[232586]))
    const-val call_tmp[2327482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2327484 'move' call_tmp[2327482](2327486 'ptr_neq' coerce_tmp[2327475] nil[44]))
    if call_tmp[2327482]
    {
      const-val call_tmp[2327498]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327500 'move' call_tmp[2327498](2327502 '_wide_get_locale' f[232586]))
      val isdirect[2327507]:bool[10] "temp"
      (2327509 'move' isdirect[2327507](2327512 call chpl_doDirectExecuteOn[187423] call_tmp[2327498]))
      if isdirect[2327507]
      {
        const-val tmp[2441713]:__wide_QioPluginFile[2381165] "temp"
        (2441716 'move' tmp[2441713] f[232586])
        (2327517 call on_fn[1458727] tmp[2441713])
      }
      {
        val _args_foron_fn[2327520]:_class_localson_fn[2096776] "temp"
        (2327522 'move' _args_foron_fn[2327520](2327524 'stack allocate class' _class_localson_fn[2096776]))
        (2327526 '.=' _args_foron_fn[2327520] _0_tmp[2096779] call_tmp[2327498])
        val tmp[2441719]:__wide_QioPluginFile[2381165] "temp"
        (2441722 'move' tmp[2441719] f[232586])
        (2327530 '.=' _args_foron_fn[2327520] _1_arg[2096781] tmp[2441719])
        val _args_vforon_fn[2327534]:c_void_ptr[149] "temp"
        (2327536 'move' _args_vforon_fn[2327534](2327538 'cast_to_void_star' _args_foron_fn[2327520]))
        val _args_sizeon_fn[2327540]:int(64)[13] "temp"
        (2327542 'move' _args_sizeon_fn[2327540](2327544 'sizeof_bundle' _class_localson_fn[2096776]))
        on(2327547 call wrapon_fn[2096810] call_tmp[2327498] _args_vforon_fn[2327534] _args_sizeon_fn[2327540] _args_foron_fn[2327520])
      }
    }
    label _end_chpl_qio_file_close[533857]
    (533861 return call_tmp[715286])
  }
  function qio_style_init_default[232618](ref arg s[232615]:iostyle[231844]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533869 return _void[55])
  }
  function qio_file_release[232638](const in arg f[232635]:qio_file_ptr_t[231439]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533873 return _void[55])
  }
  function qio_file_init[232648](ref arg file_out[232645]:qio_file_ptr_t[231439], const in arg fp[232651]:_file[155], const in arg fd[232655]:int(32)[95], const in arg iohints[232659]:int(32)[95], const  ref arg style[232663]:iostyle[231844], const in arg usefilestar[232667]:int(32)[95]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533877]:syserr[223584] "RVV" "temp"
    (533879 return ret[533877])
  }
  function qio_file_open_mem[232728](ref arg file_out[232725]:qio_file_ptr_t[231439], const in arg buf[232731]:qbuffer_ptr_t[231476], const  ref arg style[232735]:iostyle[231844]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533895]:syserr[223584] "RVV" "temp"
    (533897 return ret[533895])
  }
  function qio_file_close[232748](const in arg f[232745]:qio_file_ptr_t[231439]) : syserr[223584] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533901]:syserr[223584] "RVV" "temp"
    (533903 return ret[533901])
  }
  function qio_file_isopen[232782](const in arg f[232779]:qio_file_ptr_t[231439]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533915]:bool[10] "RVV" "temp"
    (533917 return ret[533915])
  }
  function qio_file_get_style[232821](const in arg f[232818]:qio_file_ptr_t[231439], ref arg style[232824]:iostyle[231844]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533931 return _void[55])
  }
  function qio_channel_create[232878](ref arg ch[232875]:qio_channel_ptr_t[231465], const in arg file[232881]:qio_file_ptr_t[231439], const in arg hints[232885]:int(32)[95], const in arg readable[232889]:int(32)[95], const in arg writeable[232893]:int(32)[95], const in arg start[232900]:int(64)[13], const in arg end[232907]:int(64)[13], const  ref arg style[232911]:iostyle[231844]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533953]:syserr[223584] "RVV" "temp"
    (533955 return ret[533953])
  }
  function qio_channel_path_offset[232924](const in arg threadsafe[232921]:int(32)[95], const in arg ch[232927]:qio_channel_ptr_t[231465], ref arg path[232931]:c_string[19], ref arg offset[232938]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533959]:syserr[223584] "RVV" "temp"
    (533961 return ret[533959])
  }
  function qio_channel_retain[232951](const in arg ch[232948]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533963 return _void[55])
  }
  function qio_channel_release[232961](const in arg ch[232958]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533965 return _void[55])
  }
  function qio_channel_lock[233007](const in arg ch[233004]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533979]:syserr[223584] "RVV" "temp"
    (533981 return ret[533979])
  }
  function qio_channel_unlock[233019](const in arg ch[233016]:qio_channel_ptr_t[231465]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533983 return _void[55])
  }
  function qio_channel_binary[233057](const in arg ch[233054]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533991]:uint(8)[100] "RVV" "temp"
    (533993 return ret[533991])
  }
  function qio_channel_byteorder[233072](const in arg ch[233069]:qio_channel_ptr_t[231465]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533997]:uint(8)[100] "RVV" "temp"
    (533999 return ret[533997])
  }
  function qio_channel_str_style[233087](const in arg ch[233084]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534003]:int(64)[13] "RVV" "temp"
    (534005 return ret[534003])
  }
  function qio_channel_style_element[233102](const in arg ch[233099]:qio_channel_ptr_t[231465], const in arg element[233108]:int(64)[13]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534009]:int(64)[13] "RVV" "temp"
    (534011 return ret[534009])
  }
  function qio_channel_close[233140](const in arg threadsafe[233137]:int(32)[95], const in arg ch[233143]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534021]:syserr[223584] "RVV" "temp"
    (534023 return ret[534021])
  }
  function qio_channel_read_amt[1083283](const in arg threadsafe[1083287]:int(32)[95], const in arg ch[1083289]:qio_channel_ptr_t[231465], const in arg ptr[1083291]:c_ptr(uint(8))[937423], const in arg len[1083295]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083299]:syserr[223584] "RVV" "temp"
    (1083307 return ret[1083299])
  }
  function qio_channel_write_amt[1407983](const in arg threadsafe[1407987]:int(32)[95], const in arg ch[1407989]:qio_channel_ptr_t[231465], const in arg ptr[1407991]:_ddata(real(64))[1357916], const in arg len[1407995]:int(64)[13]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "no doc" "private" "resolved" "no return value for void"
  {
    val ret[1407999]:syserr[223584] "RVV" "temp"
    (1408007 return ret[1407999])
  }
  function qio_channel_offset_unlocked[233382](const in arg ch[233379]:qio_channel_ptr_t[231465]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534087]:int(64)[13] "RVV" "temp"
    (534089 return ret[534087])
  }
  function qio_file_path_for_fd[233647](const in arg fd[233644]:int(32)[95], ref arg path[233650]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534157]:syserr[223584] "RVV" "temp"
    (534159 return ret[534157])
  }
  function qio_file_path_for_fp[233663](const in arg fp[233660]:_file[155], ref arg path[233666]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534163]:syserr[223584] "RVV" "temp"
    (534165 return ret[534163])
  }
  function qio_file_path[233679](const in arg f[233676]:qio_file_ptr_t[231439], ref arg path[233682]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534169]:syserr[223584] "RVV" "temp"
    (534171 return ret[534169])
  }
  function qio_shortest_path[233695](const in arg fl[233692]:qio_file_ptr_t[231439], ref arg path_out[233698]:c_string[19], const in arg path_in[233702]:c_string[19]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534175]:syserr[223584] "RVV" "temp"
    (534177 return ret[534175])
  }
  function qio_channel_write_int64[234050](const in arg threadsafe[234047]:int(32)[95], const in arg byteorder[234053]:int(32)[95], const in arg ch[234057]:qio_channel_ptr_t[231465], const in arg x[234064]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534259]:syserr[223584] "RVV" "temp"
    (534261 return ret[534259])
  }
  function qio_channel_write_float64[234266](const in arg threadsafe[234263]:int(32)[95], const in arg byteorder[234269]:int(32)[95], const in arg ch[234273]:qio_channel_ptr_t[231465], const in arg x[234280]:real(64)[16]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534307]:syserr[223584] "RVV" "temp"
    (534309 return ret[534307])
  }
  function qio_channel_write_string[234389](const in arg threadsafe[234386]:int(32)[95], const in arg byteorder[234392]:int(32)[95], const in arg str_style[234399]:int(64)[13], const in arg ch[234403]:qio_channel_ptr_t[231465], const in arg s[234407]:c_string[19], const in arg len[234411]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534331]:syserr[223584] "RVV" "temp"
    (534333 return ret[534331])
  }
  function qio_channel_print_int[1079525](const in arg threadsafe[1079529]:int(32)[95], const in arg ch[1079531]:qio_channel_ptr_t[231465], const  ref arg ptr[1079533]:int(64)[13], const in arg len[1079537]:uint(64)[115], const in arg issigned[1079541]:int(32)[95]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079545]:syserr[223584] "RVV" "temp"
    (1079553 return ret[1079545])
  }
  function qio_channel_print_float[1428545](const in arg threadsafe[1428549]:int(32)[95], const in arg ch[1428551]:qio_channel_ptr_t[231465], const  ref arg ptr[1428553]:real(64)[16], const in arg len[1428557]:uint(64)[115]) : syserr[223584] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1428561]:syserr[223584] "RVV" "temp"
    (1428569 return ret[1428561])
  }
  function qio_channel_write_newline[234735](const in arg threadsafe[234732]:int(32)[95], const in arg ch[234738]:qio_channel_ptr_t[231465]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534421]:syserr[223584] "RVV" "temp"
    (534423 return ret[534421])
  }
  function qio_channel_print_string[234837](const in arg threadsafe[234834]:int(32)[95], const in arg ch[234840]:qio_channel_ptr_t[231465], const in arg ptr[234844]:c_string[19], const in arg len[234848]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534445]:syserr[223584] "RVV" "temp"
    (534447 return ret[534445])
  }
  function qio_channel_print_literal[234917](const in arg threadsafe[234914]:int(32)[95], const in arg ch[234920]:qio_channel_ptr_t[231465], const in arg match[234924]:c_string[19], const in arg len[234928]:int(64)[13]) : syserr[223584] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534463]:syserr[223584] "RVV" "temp"
    (534465 return ret[534463])
  }
  const QIO_CONV_UNK[235060]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235065]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235070]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235075]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235080]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235085]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235090]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235095]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235100]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235105]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235110]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235115]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235120]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235125]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235130]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235135]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235140]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235145]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235150]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235155]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235160]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235165]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235170]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235175]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235180]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235185]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235190]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235195]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235200]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235205]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235210]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235295]() : iostyle[231844] "resolved"
  {
    val ret[534517]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235299]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (235307 call qio_style_init_default[232618] ret[235299])
    (985787 'move' ret[534517] ret[235299])
    label _end_defaultIOStyle[534515]
    (534519 return ret[534517])
  }
  val iohints[235556]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function file[235580].init[235574](ref arg this[235582]:file[235580]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2167567]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167569]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167571 'move' call_tmp[2167569](2167574 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167577 'move' call_tmp[2167567] call_tmp[2167569])
    const-val call_tmp[2167580]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167582]:locale[28] "temp"
    wide-ref tmp[2428944]:chpl_localeID_t[209294] "temp"
    (2428948 'move' tmp[2428944](2428946 'set reference' call_tmp[2167567]))
    (2167585 call chpl_localeID_to_locale[92849] tmp[2428944] ret_tmp[2167582])
    (2167588 'move' call_tmp[2167580] ret_tmp[2167582])
    (465259 '.=' this[235582] home[235562] call_tmp[2167580])
    val tmp[465264]:qio_file_ptr_t[231439] "dead after last mention" "temp"
    (465267 'move' tmp[465264] QIO_FILE_PTR_NULL[231442])
    (465269 '.=' this[235582] _file_internal[235568] tmp[465264])
    (534575 return _void[55])
  }
  type file[235580] val home[235562]:locale[28] "no doc" val _file_internal[235568]:qio_file_ptr_t[231439] "no doc"
  function file[235580].checkAssumingLocal[235768](const  ref arg this[235770]:file[235580], ref arg error_out[1808254]:__wide_Error[2381123]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_2943[2377509]:string[26] "temp"
    (2377510 'move' "Operation attempted on closed file" "Operation attempted on closed file")
    const-val local__str_literal_129[2377503]:string[26] "temp"
    (2377504 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2941[2377497]:string[26] "temp"
    (2377498 'move' "Operation attempted on an invalid file" "Operation attempted on an invalid file")
    const-val coerce_tmp[1017098]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414837]:qio_file_ptr_t[231439] "temp"
    (1017102 'move' tmp[2414837](2367455 '.v' this[235770] _file_internal[235568]))
    (2414840 'move' coerce_tmp[1017098] tmp[2414837])
    const-val call_tmp[2226940]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226942 'move' call_tmp[2226940](2226944 'cast' c_void_ptr[149] coerce_tmp[1017098]))
    const-val call_tmp[2226947]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226949 'move' call_tmp[2226947](2226951 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226956 'move' call_tmp[2226954](2226958 'ptr_eq' call_tmp[2226940] call_tmp[2226947]))
    if call_tmp[2226954]
    {
      const-val call_tmp[715516]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017158]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017164 'move' coerce_tmp[1017158](1017160 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832533]:owned SystemError[1000238] "temp"
      (235802 call fromSyserr[1017113] coerce_tmp[1017158] "Operation attempted on an invalid file" ret_tmp[1832533])
      (1832536 'move' call_tmp[715516] ret_tmp[1832533])
      val call_tmp[715521]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017173]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832461]:owned Error[966458] "temp"
      ref i_x[2225864]:owned SystemError[1000238] "temp"
      (2225868 'move' i_x[2225864](2225866 'set reference' call_tmp[715516]))
      ref i__retArg[2225870]:owned Error[966458] "temp"
      (2225874 'move' i__retArg[2225870](2225872 'set reference' ret_tmp[1832461]))
      val _formal_tmp_x[2225877]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2225879 'move' _formal_tmp_x[2225877] i_x[2225864])
      const-val ret[2225882]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2225884]:owned SystemError[1000238] "temp"
      (2225886 'move' i_this[2225884](2225888 'set reference' _formal_tmp_x[2225877]))
      val coerce_tmp[2225890]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2431102]:SystemError[264845] "temp"
      (2225892 'move' tmp[2431102](2225894 '.v' i_this[2225884] chpl_p[1000233]))
      (2431105 'move' coerce_tmp[2225890] tmp[2431102])
      val call_tmp[2225897]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2225899 'move' call_tmp[2225897](2225901 'cast' Error[167938] coerce_tmp[2225890]))
      ref i_this[2225909]:owned SystemError[1000238] "temp"
      (2225911 'move' i_this[2225909](2225913 'set reference' _formal_tmp_x[2225877]))
      val tmp[2225915]:SystemError[264845] "temp"
      (2225917 'move' tmp[2225915](2225919 'cast' SystemError[264845] nil[44]))
      (2225922 '.=' i_this[2225909] chpl_p[1000233] tmp[2225915])
      val coerce_tmp[2225926]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2225928 'move' coerce_tmp[2225926](2225930 'cast' object[22] call_tmp[2225897]))
      const-val call_tmp[2225933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2225935 'move' call_tmp[2225933](2225937 'ptr_eq' coerce_tmp[2225926] nil[44]))
      if call_tmp[2225933]
      {
        (2225943 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2225946]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2225948]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2431108]:__wide_Error[2381123] "temp"
      (2431111 'move' tmp[2431108] call_tmp[2225897])
      (2225951 call init[968094] initTemp[2225948] tmp[2431108])
      (2225954 'move' call_tmp[2225946] initTemp[2225948])
      (2225957 'move' ret[2225882] call_tmp[2225946])
      (2225961 call chpl__autoDestroy[1516200] _formal_tmp_x[2225877])
      (2225965 '=' i__retArg[2225870] ret[2225882])
      (1832464 'move' coerce_tmp[1017173] ret_tmp[1832461])
      const-val _formal_tmp_in_err[1017352]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017356 'move' _formal_tmp_in_err[1017352] coerce_tmp[1017173])
      (715524 'move' call_tmp[715521](468115 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017352]))
      (1808267 '=' error_out[1808254] call_tmp[715521])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
    }
    const-val call_tmp[715533]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017362]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414843]:qio_file_ptr_t[231439] "temp"
    (1017366 'move' tmp[2414843](2367461 '.v' this[235770] _file_internal[235568]))
    (2414846 'move' coerce_tmp[1017362] tmp[2414843])
    (715536 'move' call_tmp[715533](235814 call qio_file_isopen[232782] coerce_tmp[1017362]))
    const-val call_tmp[2114122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114124 'move' call_tmp[2114122](2114126 '!' call_tmp[715533]))
    if call_tmp[2114122]
    {
      const-val call_tmp[715550]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017372]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017378 'move' coerce_tmp[1017372](1017374 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832539]:owned SystemError[1000238] "temp"
      (235840 call fromSyserr[1017113] coerce_tmp[1017372] "Operation attempted on closed file" ret_tmp[1832539])
      (1832542 'move' call_tmp[715550] ret_tmp[1832539])
      val call_tmp[715555]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017381]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832467]:owned Error[966458] "temp"
      ref i_x[2225970]:owned SystemError[1000238] "temp"
      (2225974 'move' i_x[2225970](2225972 'set reference' call_tmp[715550]))
      ref i__retArg[2225976]:owned Error[966458] "temp"
      (2225980 'move' i__retArg[2225976](2225978 'set reference' ret_tmp[1832467]))
      val _formal_tmp_x[2225983]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2225985 'move' _formal_tmp_x[2225983] i_x[2225970])
      const-val ret[2225988]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2225990]:owned SystemError[1000238] "temp"
      (2225992 'move' i_this[2225990](2225994 'set reference' _formal_tmp_x[2225983]))
      val coerce_tmp[2225996]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2431114]:SystemError[264845] "temp"
      (2225998 'move' tmp[2431114](2226000 '.v' i_this[2225990] chpl_p[1000233]))
      (2431117 'move' coerce_tmp[2225996] tmp[2431114])
      val call_tmp[2226003]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226005 'move' call_tmp[2226003](2226007 'cast' Error[167938] coerce_tmp[2225996]))
      ref i_this[2226015]:owned SystemError[1000238] "temp"
      (2226017 'move' i_this[2226015](2226019 'set reference' _formal_tmp_x[2225983]))
      val tmp[2226021]:SystemError[264845] "temp"
      (2226023 'move' tmp[2226021](2226025 'cast' SystemError[264845] nil[44]))
      (2226028 '.=' i_this[2226015] chpl_p[1000233] tmp[2226021])
      val coerce_tmp[2226032]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226034 'move' coerce_tmp[2226032](2226036 'cast' object[22] call_tmp[2226003]))
      const-val call_tmp[2226039]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226041 'move' call_tmp[2226039](2226043 'ptr_eq' coerce_tmp[2226032] nil[44]))
      if call_tmp[2226039]
      {
        (2226049 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226052]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226054]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2431120]:__wide_Error[2381123] "temp"
      (2431123 'move' tmp[2431120] call_tmp[2226003])
      (2226057 call init[968094] initTemp[2226054] tmp[2431120])
      (2226060 'move' call_tmp[2226052] initTemp[2226054])
      (2226063 'move' ret[2225988] call_tmp[2226052])
      (2226067 call chpl__autoDestroy[1516200] _formal_tmp_x[2225983])
      (2226071 '=' i__retArg[2225976] ret[2225988])
      (1832470 'move' coerce_tmp[1017381] ret_tmp[1832467])
      const-val _formal_tmp_in_err[1017560]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017564 'move' _formal_tmp_in_err[1017560] coerce_tmp[1017381])
      (715558 'move' call_tmp[715555](468117 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1017560]))
      (1808280 '=' error_out[1808254] call_tmp[715555])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1808256] _endcheckAssumingLocal[1808256]
    }
    label _endcheckAssumingLocal[1808256]
    (534583 return _void[55])
  }
  function file[235580].deinit[235891](ref arg this[235893]:file[235580]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2377516]:string[26] "temp"
    (2377517 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2216295]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216297 'move' call_tmp[2216295](2216299 '.' this[235893] home[235562]))
    const-val call_tmp[715581]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165047]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165049 'move' coerce_tmp[2165047](2165051 '.v' call_tmp[2216295] _instance[89975]))
    val coerce_tmp[2165054]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165056 'move' coerce_tmp[2165054](2165058 'cast' object[22] coerce_tmp[2165047]))
    const-val call_tmp[2165061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428527]:__wide_object[2381018] "temp"
    (2428530 'move' tmp[2428527] nil[44])
    (2165063 'move' call_tmp[2165061](2165065 'ptr_eq' coerce_tmp[2165054] tmp[2428527]))
    if call_tmp[2165061]
    {
      (2165071 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715584 'move' call_tmp[715581](235916 '_wide_get_locale' coerce_tmp[2165047]))
    val isdirect[2086871]:bool[10] "temp"
    (2086876 'move' isdirect[2086871](2086873 call chpl_doDirectExecuteOn[187423] call_tmp[715581]))
    if isdirect[2086871]
    {
      wide-ref tmp[2422078]:file[235580] "temp"
      (2422081 'move' tmp[2422078] this[235893])
      (2086880 call on_fn[935597] tmp[2422078])
    }
    {
      val _args_foron_fn[2086895]:_class_localson_fn[2086887] "temp"
      (2086899 'move' _args_foron_fn[2086895](2086897 'stack allocate class' _class_localson_fn[2086887]))
      (2086901 '.=' _args_foron_fn[2086895] _0_tmp[2086890] call_tmp[715581])
      ref tmp[2086905]:file[235580] "temp"
      (2086909 'move' tmp[2086905](2086907 'set reference' this[235893]))
      wide-ref tmp[2422084]:file[235580] "temp"
      (2422087 'move' tmp[2422084] tmp[2086905])
      (2086911 '.=' _args_foron_fn[2086895] _1_this[2086892] tmp[2422084])
      val _args_vforon_fn[2086915]:c_void_ptr[149] "temp"
      (2086919 'move' _args_vforon_fn[2086915](2086917 'cast_to_void_star' _args_foron_fn[2086895]))
      val _args_sizeon_fn[2086921]:int(64)[13] "temp"
      (2086925 'move' _args_sizeon_fn[2086921](2086923 'sizeof_bundle' _class_localson_fn[2086887]))
      on(2086957 call wrapon_fn[2086927] call_tmp[715581] _args_vforon_fn[2086915] _args_sizeon_fn[2086921] _args_foron_fn[2086895])
    }
    label _enddeinit[1814579]
    const-ref _field_destructor_tmp_[1814577]:locale[28] "temp"
    (1814584 'move' _field_destructor_tmp_[1814577](1814581 '.' this[235893] home[235562]))
    wide-ref tmp[2418817]:locale[28] "temp"
    (2418820 'move' tmp[2418817] _field_destructor_tmp_[1814577])
    (1814586 call deinit[90185] tmp[2418817])
    (534587 return _void[55])
  }
  function file[235580]._style[235960](const  ref arg this[235962]:file[235580], ref arg error_out[1808284]:__wide_Error[2381123]) : iostyle[231844] throws "method" "no doc" "no parens" "resolved"
  {
    const-val local__str_literal_129[2377522]:string[26] "temp"
    (2377523 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[534601]:iostyle[231844] "dead after last mention" "RVV" "temp"
    val ret[235969]:iostyle[231844] "dead at end of block" "insert auto destroy"
    ref call_tmp[2216321]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216323 'move' call_tmp[2216321](2216325 '.' this[235962] home[235562]))
    const-val call_tmp[715619]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165077]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165079 'move' coerce_tmp[2165077](2165081 '.v' call_tmp[2216321] _instance[89975]))
    val coerce_tmp[2165084]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165086 'move' coerce_tmp[2165084](2165088 'cast' object[22] coerce_tmp[2165077]))
    const-val call_tmp[2165091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428533]:__wide_object[2381018] "temp"
    (2428536 'move' tmp[2428533] nil[44])
    (2165093 'move' call_tmp[2165091](2165095 'ptr_eq' coerce_tmp[2165084] tmp[2428533]))
    if call_tmp[2165091]
    {
      (2165101 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715622 'move' call_tmp[715619](236004 '_wide_get_locale' coerce_tmp[2165077]))
    val error[1808287]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1808289 'move' error[1808287] nil[44])
    val rvfDerefTmp[2083413]:file[235580] "temp"
    (2083417 'move' rvfDerefTmp[2083413](2083415 'deref' this[235962]))
    val isdirect[2086962]:bool[10] "temp"
    (2086967 'move' isdirect[2086962](2086964 call chpl_doDirectExecuteOn[187423] call_tmp[715619]))
    if isdirect[2086962]
    {
      wide-ref tmp[2422090]:iostyle[231844] "temp"
      (2422094 'move' tmp[2422090](2422092 'set reference' ret[235969]))
      wide-ref tmp[2422097]:__wide_Error[2381123] "temp"
      (2422101 'move' tmp[2422097](2422099 'set reference' error[1808287]))
      (2086971 call on_fn[935606] rvfDerefTmp[2083413] tmp[2422090] tmp[2422097])
    }
    {
      val _args_foron_fn[2086992]:_class_localson_fn[2086980] "temp"
      (2086996 'move' _args_foron_fn[2086992](2086994 'stack allocate class' _class_localson_fn[2086980]))
      (2086998 '.=' _args_foron_fn[2086992] _0_tmp[2086983] call_tmp[715619])
      (2087002 '.=' _args_foron_fn[2086992] _1_rvfDerefTmp[2086985] rvfDerefTmp[2083413])
      ref tmp[2087006]:iostyle[231844] "temp"
      (2087010 'move' tmp[2087006](2087008 'set reference' ret[235969]))
      wide-ref tmp[2422104]:iostyle[231844] "temp"
      (2422107 'move' tmp[2422104] tmp[2087006])
      (2087012 '.=' _args_foron_fn[2086992] _2_ret[2086987] tmp[2422104])
      ref tmp[2087016]:__wide_Error[2381123] "temp"
      (2087020 'move' tmp[2087016](2087018 'set reference' error[1808287]))
      wide-ref tmp[2422110]:__wide_Error[2381123] "temp"
      (2422113 'move' tmp[2422110] tmp[2087016])
      (2087022 '.=' _args_foron_fn[2086992] _3_error[2086989] tmp[2422110])
      val _args_vforon_fn[2087026]:c_void_ptr[149] "temp"
      (2087030 'move' _args_vforon_fn[2087026](2087028 'cast_to_void_star' _args_foron_fn[2086992]))
      val _args_sizeon_fn[2087032]:int(64)[13] "temp"
      (2087036 'move' _args_sizeon_fn[2087032](2087034 'sizeof_bundle' _class_localson_fn[2086980]))
      on(2087084 call wrapon_fn[2087038] call_tmp[715619] _args_vforon_fn[2087026] _args_sizeon_fn[2087032] _args_foron_fn[2086992])
    }
    val errorExists[2107968]:bool[10] "temp"
    (2107973 'move' errorExists[2107968](2107970 '!=' error[1808287] nil[44]))
    if errorExists[2107968]
    {
      (1808293 '=' error_out[1808284] error[1808287])
      gotoErrorHandlingReturn _end__style[534599] _end__style[534599]
    }
    (1017581 'move' ret[534601] ret[235969])
    label _end__style[534599]
    (534603 return ret[534601])
  }
  function file[235580].close[236024](const  ref arg this[236026]:file[235580], ref arg error_out[1808301]:__wide_Error[2381123]) : void[4] throws "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_2947[2377541]:string[26] "temp"
    (2377542 'move' "in file.close" "in file.close")
    const-val local__str_literal_129[2377534]:string[26] "temp"
    (2377535 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2941[2377528]:string[26] "temp"
    (2377529 'move' "Operation attempted on an invalid file" "Operation attempted on an invalid file")
    const-val coerce_tmp[1060608]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415161]:qio_file_ptr_t[231439] "temp"
    (1060612 'move' tmp[2415161](2367477 '.v' this[236026] _file_internal[235568]))
    (2415164 'move' coerce_tmp[1060608] tmp[2415161])
    const-val call_tmp[2226964]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226966 'move' call_tmp[2226964](2226968 'cast' c_void_ptr[149] coerce_tmp[1060608]))
    const-val call_tmp[2226971]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226973 'move' call_tmp[2226971](2226975 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226978]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226980 'move' call_tmp[2226978](2226982 'ptr_eq' call_tmp[2226964] call_tmp[2226971]))
    if call_tmp[2226978]
    {
      const-val call_tmp[715652]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060617]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060623 'move' coerce_tmp[1060617](1060619 'cast' int(64)[13] EBADF[224324]))
      const-val ret_tmp[1832545]:owned SystemError[1000238] "temp"
      (236042 call fromSyserr[1017113] coerce_tmp[1060617] "Operation attempted on an invalid file" ret_tmp[1832545])
      (1832548 'move' call_tmp[715652] ret_tmp[1832545])
      val call_tmp[715657]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060626]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832479]:owned Error[966458] "temp"
      ref i_x[2226182]:owned SystemError[1000238] "temp"
      (2226186 'move' i_x[2226182](2226184 'set reference' call_tmp[715652]))
      ref i__retArg[2226188]:owned Error[966458] "temp"
      (2226192 'move' i__retArg[2226188](2226190 'set reference' ret_tmp[1832479]))
      val _formal_tmp_x[2226195]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226197 'move' _formal_tmp_x[2226195] i_x[2226182])
      const-val ret[2226200]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226202]:owned SystemError[1000238] "temp"
      (2226204 'move' i_this[2226202](2226206 'set reference' _formal_tmp_x[2226195]))
      val coerce_tmp[2226208]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2431138]:SystemError[264845] "temp"
      (2226210 'move' tmp[2431138](2226212 '.v' i_this[2226202] chpl_p[1000233]))
      (2431141 'move' coerce_tmp[2226208] tmp[2431138])
      val call_tmp[2226215]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226217 'move' call_tmp[2226215](2226219 'cast' Error[167938] coerce_tmp[2226208]))
      ref i_this[2226227]:owned SystemError[1000238] "temp"
      (2226229 'move' i_this[2226227](2226231 'set reference' _formal_tmp_x[2226195]))
      val tmp[2226233]:SystemError[264845] "temp"
      (2226235 'move' tmp[2226233](2226237 'cast' SystemError[264845] nil[44]))
      (2226240 '.=' i_this[2226227] chpl_p[1000233] tmp[2226233])
      val coerce_tmp[2226244]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226246 'move' coerce_tmp[2226244](2226248 'cast' object[22] call_tmp[2226215]))
      const-val call_tmp[2226251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226253 'move' call_tmp[2226251](2226255 'ptr_eq' coerce_tmp[2226244] nil[44]))
      if call_tmp[2226251]
      {
        (2226261 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226264]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226266]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2431144]:__wide_Error[2381123] "temp"
      (2431147 'move' tmp[2431144] call_tmp[2226215])
      (2226269 call init[968094] initTemp[2226266] tmp[2431144])
      (2226272 'move' call_tmp[2226264] initTemp[2226266])
      (2226275 'move' ret[2226200] call_tmp[2226264])
      (2226279 call chpl__autoDestroy[1516200] _formal_tmp_x[2226195])
      (2226283 '=' i__retArg[2226188] ret[2226200])
      (1832482 'move' coerce_tmp[1060626] ret_tmp[1832479])
      const-val _formal_tmp_in_err[1060805]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060809 'move' _formal_tmp_in_err[1060805] coerce_tmp[1060626])
      (715660 'move' call_tmp[715657](468119 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1060805]))
      (1808314 '=' error_out[1808301] call_tmp[715657])
      gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
    }
    val err[236053]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207327]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207329 'move' call_tmp[2207327](2207332 call qio_int_to_err[223634] 0))
    (547000 'move' err[236053] call_tmp[2207327])
    ref call_tmp[2216413]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216415 'move' call_tmp[2216413](2216417 '.' this[236026] home[235562]))
    const-val call_tmp[715674]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165377]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165379 'move' coerce_tmp[2165377](2165381 '.v' call_tmp[2216413] _instance[89975]))
    val coerce_tmp[2165384]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165386 'move' coerce_tmp[2165384](2165388 'cast' object[22] coerce_tmp[2165377]))
    const-val call_tmp[2165391]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428593]:__wide_object[2381018] "temp"
    (2428596 'move' tmp[2428593] nil[44])
    (2165393 'move' call_tmp[2165391](2165395 'ptr_eq' coerce_tmp[2165384] tmp[2428593]))
    if call_tmp[2165391]
    {
      (2165401 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715677 'move' call_tmp[715674](236070 '_wide_get_locale' coerce_tmp[2165377]))
    val rvfDerefTmp[2083434]:file[235580] "temp"
    (2083438 'move' rvfDerefTmp[2083434](2083436 'deref' this[236026]))
    val isdirect[2087089]:bool[10] "temp"
    (2087094 'move' isdirect[2087089](2087091 call chpl_doDirectExecuteOn[187423] call_tmp[715674]))
    if isdirect[2087089]
    {
      wide-ref tmp[2422122]:syserr[223584] "temp"
      (2422126 'move' tmp[2422122](2422124 'set reference' err[236053]))
      (2087098 call on_fn[935615] rvfDerefTmp[2083434] tmp[2422122])
    }
    {
      val _args_foron_fn[2087116]:_class_localson_fn[2087106] "temp"
      (2087120 'move' _args_foron_fn[2087116](2087118 'stack allocate class' _class_localson_fn[2087106]))
      (2087122 '.=' _args_foron_fn[2087116] _0_tmp[2087109] call_tmp[715674])
      (2087126 '.=' _args_foron_fn[2087116] _1_rvfDerefTmp[2087111] rvfDerefTmp[2083434])
      ref tmp[2087130]:syserr[223584] "temp"
      (2087134 'move' tmp[2087130](2087132 'set reference' err[236053]))
      wide-ref tmp[2422129]:syserr[223584] "temp"
      (2422132 'move' tmp[2422129] tmp[2087130])
      (2087136 '.=' _args_foron_fn[2087116] _2_err[2087113] tmp[2422129])
      val _args_vforon_fn[2087140]:c_void_ptr[149] "temp"
      (2087144 'move' _args_vforon_fn[2087140](2087142 'cast_to_void_star' _args_foron_fn[2087116]))
      val _args_sizeon_fn[2087146]:int(64)[13] "temp"
      (2087150 'move' _args_sizeon_fn[2087146](2087148 'sizeof_bundle' _class_localson_fn[2087106]))
      on(2087190 call wrapon_fn[2087152] call_tmp[715674] _args_vforon_fn[2087140] _args_sizeon_fn[2087146] _args_foron_fn[2087116])
    }
    const-val call_tmp[2206790]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206792 'move' call_tmp[2206790](2206795 call qio_err_iserr[223646] err[236053]))
    const-val call_tmp[2206797]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206799 'move' call_tmp[2206797](2206801 '!=' call_tmp[2206790] 0))
    if call_tmp[2206797]
    {
      val error[1808318]:__wide_Error[2381123] "error variable" "temp"
      (1808327 'move' error[1808318] nil[44])
      const-val call_tmp[715698]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831431]:string[26] "temp"
      (236109 call tryGetPath[236364] this[236026] ret_tmp[1831431])
      (1831434 'move' call_tmp[715698] ret_tmp[1831431])
      ref tmp[2414299]:__wide_Error[2381123] "temp"
      (2414303 'move' tmp[2414299](2414301 'set reference' error[1808318]))
      (236110 call ioerror[266250] err[236053] "in file.close" call_tmp[715698] tmp[2414299])
      val errorExists[2107976]:bool[10] "temp"
      (2107981 'move' errorExists[2107976](2107978 '!=' error[1808318] nil[44]))
      if errorExists[2107976]
      {
        ref i_x[2130009]:string[26] "temp"
        (2130013 'move' i_x[2130009](2130011 'set reference' call_tmp[715698]))
        wide-ref tmp[2425170]:string[26] "temp"
        (2425173 'move' tmp[2425170] i_x[2130009])
        (2130017 call deinit[30831] tmp[2425170])
        gotoErrorHandling handler[1808319] handler[1808319]
      }
      ref i_x[2130021]:string[26] "temp"
      (2130025 'move' i_x[2130021](2130023 'set reference' call_tmp[715698]))
      wide-ref tmp[2425176]:string[26] "temp"
      (2425179 'move' tmp[2425176] i_x[2130021])
      (2130029 call deinit[30831] tmp[2425176])
      label handler[1808319]
      val errorExists[2107984]:bool[10] "temp"
      (2107989 'move' errorExists[2107984](2107986 '!=' error[1808318] nil[44]))
      if errorExists[2107984]
      {
        (1808334 '=' error_out[1808301] error[1808318])
        gotoErrorHandlingReturn _endclose[1808303] _endclose[1808303]
      }
    }
    label _endclose[1808303]
    (534611 return _void[55])
  }
  function file[235580].path[236212](const  ref arg this[236214]:file[235580], ref arg error_out[1808346]:__wide_Error[2381123], ref arg _retArg[1831425]:string[26]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val local__str_literal_2952[2377553]:string[26] "temp"
    (2377554 'move' "in file.path" "in file.path")
    const-val local__str_literal_129[2377547]:string[26] "temp"
    (2377548 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[534617]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236221]:string[26] "dead at end of block" "insert auto destroy"
    (1021681 call init[30760] ret[236221])
    val err[236228]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207270]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207272 'move' call_tmp[2207270](2207275 call qio_int_to_err[223634] 0))
    (547006 'move' err[236228] call_tmp[2207270])
    ref call_tmp[2216351]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216353 'move' call_tmp[2216351](2216355 '.' this[236214] home[235562]))
    const-val call_tmp[715758]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165227]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165229 'move' coerce_tmp[2165227](2165231 '.v' call_tmp[2216351] _instance[89975]))
    val coerce_tmp[2165234]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165236 'move' coerce_tmp[2165234](2165238 'cast' object[22] coerce_tmp[2165227]))
    const-val call_tmp[2165241]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428563]:__wide_object[2381018] "temp"
    (2428566 'move' tmp[2428563] nil[44])
    (2165243 'move' call_tmp[2165241](2165245 'ptr_eq' coerce_tmp[2165234] tmp[2428563]))
    if call_tmp[2165241]
    {
      (2165251 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (715761 'move' call_tmp[715758](236314 '_wide_get_locale' coerce_tmp[2165227]))
    val error[1808349]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1808351 'move' error[1808349] nil[44])
    val rvfDerefTmp[2083448]:file[235580] "temp"
    (2083452 'move' rvfDerefTmp[2083448](2083450 'deref' this[236214]))
    val isdirect[2087195]:bool[10] "temp"
    (2087200 'move' isdirect[2087195](2087197 call chpl_doDirectExecuteOn[187423] call_tmp[715758]))
    if isdirect[2087195]
    {
      wide-ref tmp[2422141]:syserr[223584] "temp"
      (2422145 'move' tmp[2422141](2422143 'set reference' err[236228]))
      wide-ref tmp[2422148]:string[26] "temp"
      (2422152 'move' tmp[2422148](2422150 'set reference' ret[236221]))
      wide-ref tmp[2422155]:__wide_Error[2381123] "temp"
      (2422159 'move' tmp[2422155](2422157 'set reference' error[1808349]))
      (2087204 call on_fn[935633] rvfDerefTmp[2083448] tmp[2422141] tmp[2422148] tmp[2422155])
    }
    {
      val _args_foron_fn[2087228]:_class_localson_fn[2087214] "temp"
      (2087232 'move' _args_foron_fn[2087228](2087230 'stack allocate class' _class_localson_fn[2087214]))
      (2087234 '.=' _args_foron_fn[2087228] _0_tmp[2087217] call_tmp[715758])
      (2087238 '.=' _args_foron_fn[2087228] _1_rvfDerefTmp[2087219] rvfDerefTmp[2083448])
      ref tmp[2087242]:syserr[223584] "temp"
      (2087246 'move' tmp[2087242](2087244 'set reference' err[236228]))
      wide-ref tmp[2422162]:syserr[223584] "temp"
      (2422165 'move' tmp[2422162] tmp[2087242])
      (2087248 '.=' _args_foron_fn[2087228] _2_err[2087221] tmp[2422162])
      ref tmp[2087252]:string[26] "temp"
      (2087256 'move' tmp[2087252](2087254 'set reference' ret[236221]))
      wide-ref tmp[2422168]:string[26] "temp"
      (2422171 'move' tmp[2422168] tmp[2087252])
      (2087258 '.=' _args_foron_fn[2087228] _3_ret[2087223] tmp[2422168])
      ref tmp[2087262]:__wide_Error[2381123] "temp"
      (2087266 'move' tmp[2087262](2087264 'set reference' error[1808349]))
      wide-ref tmp[2422174]:__wide_Error[2381123] "temp"
      (2422177 'move' tmp[2422174] tmp[2087262])
      (2087268 '.=' _args_foron_fn[2087228] _4_error[2087225] tmp[2422174])
      val _args_vforon_fn[2087272]:c_void_ptr[149] "temp"
      (2087276 'move' _args_vforon_fn[2087272](2087274 'cast_to_void_star' _args_foron_fn[2087228]))
      val _args_sizeon_fn[2087278]:int(64)[13] "temp"
      (2087282 'move' _args_sizeon_fn[2087278](2087280 'sizeof_bundle' _class_localson_fn[2087214]))
      on(2087338 call wrapon_fn[2087284] call_tmp[715758] _args_vforon_fn[2087272] _args_sizeon_fn[2087278] _args_foron_fn[2087228])
    }
    val errorExists[2107992]:bool[10] "temp"
    (2107997 'move' errorExists[2107992](2107994 '!=' error[1808349] nil[44]))
    if errorExists[2107992]
    {
      (1808355 '=' error_out[1808346] error[1808349])
      ref i_x[2130033]:string[26] "temp"
      (2130037 'move' i_x[2130033](2130035 'set reference' ret[236221]))
      wide-ref tmp[2425182]:string[26] "temp"
      (2425185 'move' tmp[2425182] i_x[2130033])
      (2130041 call deinit[30831] tmp[2425182])
      gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
    }
    const-val call_tmp[2206688]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206690 'move' call_tmp[2206688](2206693 call qio_err_iserr[223646] err[236228]))
    const-val call_tmp[2206695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206697 'move' call_tmp[2206695](2206699 '!=' call_tmp[2206688] 0))
    if call_tmp[2206695]
    {
      val error[1808363]:__wide_Error[2381123] "error variable" "temp"
      (1808372 'move' error[1808363] nil[44])
      ref tmp[2414313]:__wide_Error[2381123] "temp"
      (2414317 'move' tmp[2414313](2414315 'set reference' error[1808363]))
      (236346 call ioerror[266311] err[236228] "in file.path" tmp[2414313])
      val errorExists[2108000]:bool[10] "temp"
      (2108005 'move' errorExists[2108000](2108002 '!=' error[1808363] nil[44]))
      if errorExists[2108000]
      {
        gotoErrorHandling handler[1808364] handler[1808364]
      }
      label handler[1808364]
      val errorExists[2108008]:bool[10] "temp"
      (2108013 'move' errorExists[2108008](2108010 '!=' error[1808363] nil[44]))
      if errorExists[2108008]
      {
        (1808379 '=' error_out[1808346] error[1808363])
        ref i_x[2130045]:string[26] "temp"
        (2130049 'move' i_x[2130045](2130047 'set reference' ret[236221]))
        wide-ref tmp[2425188]:string[26] "temp"
        (2425191 'move' tmp[2425188] i_x[2130045])
        (2130053 call deinit[30831] tmp[2425188])
        gotoErrorHandlingReturn _end_path[534615] _end_path[534615]
      }
    }
    (1021679 'move' ret[534617] ret[236221])
    label _end_path[534615]
    (1831427 '=' _retArg[1831425] ret[534617])
    (1831429 return _void[55])
  }
  function file[235580].tryGetPath[236364](const  ref arg this[236366]:file[235580], ref arg _retArg[1831461]:string[26]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    const-val local__str_literal_2955[2377559]:string[26] "temp"
    (2377560 'move' "unknown" "unknown")
    val ret[534629]:string[26] "dead after last mention" "RVV" "temp"
    val error[1808391]:__wide_Error[2381123] "error variable" "temp"
    (1808400 'move' error[1808391] nil[44])
    const-val call_tmp[715821]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1831419]:string[26] "temp"
    ref tmp[2414320]:__wide_Error[2381123] "temp"
    (2414324 'move' tmp[2414320](2414322 'set reference' error[1808391]))
    (236375 call path[236212] this[236366] tmp[2414320] ret_tmp[1831419])
    (1831422 'move' call_tmp[715821] ret_tmp[1831419])
    val errorExists[2108016]:bool[10] "temp"
    (2108021 'move' errorExists[2108016](2108018 '!=' error[1808391] nil[44]))
    if errorExists[2108016]
    {
      gotoErrorHandling handler[1808392] handler[1808392]
    }
    (1021713 'move' ret[534629] call_tmp[715821])
    gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
    label handler[1808392]
    val errorExists[2108024]:bool[10] "temp"
    (2108029 'move' errorExists[2108024](2108026 '!=' error[1808391] nil[44]))
    if errorExists[2108024]
    {
      val call_tmp[715826]:__wide_Error[2381123] "dead at end of block" "maybe param" "temp"
      (715829 'move' call_tmp[715826] error[1808391])
      const-val call_tmp[715836]:owned Error[966458] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[1021693]:owned Error[966458] "dead at end of block" "delay instantiation" "temp"
      (1021696 call init[968094] initTemp[1021693] call_tmp[715826])
      (715839 'move' call_tmp[715836] initTemp[1021693])
      const-val chpl_anon_error[354533]:owned Error[966458] "dead at end of block" "delay instantiation" "insert auto destroy"
      (547014 'move' chpl_anon_error[354533] call_tmp[715836])
      val inlineImm[2204210]:string[26] "temp"
      (2204213 'move' inlineImm[2204210] "unknown")
      ref i_x[2204215]:string[26] "temp"
      (2204219 'move' i_x[2204215](2204217 'set reference' inlineImm[2204210]))
      val ret[2204222]:string[26] "dead after last mention" "RVV" "temp"
      const-val tmp[2204224]:string[26] "dead after last mention" "temp"
      wide-ref tmp[2429875]:string[26] "temp"
      (2429878 'move' tmp[2429875] i_x[2204215])
      (2204227 call init=[30771] tmp[2204224] tmp[2429875])
      (2204230 'move' ret[2204222] tmp[2204224])
      (534641 'move' ret[534629] ret[2204222])
      (1842463 call chpl__autoDestroy[1468631] chpl_anon_error[354533])
      gotoReturn _end_tryGetPath[534627] _end_tryGetPath[534627]
    }
    label _end_tryGetPath[534627]
    (1831463 '=' _retArg[1831461] ret[534629])
    (1831467 return _void[55])
  }
  function openfd[237271](const in arg fd[237268]:int(32)[95], const in arg hints[237275]:int(32)[95], const  ref arg style[237283]:iostyle[231844], ref arg error_out[1808415]:__wide_Error[2381123], ref arg _retArg[1831475]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2986[2377571]:string[26] "temp"
    (2377572 'move' "in openfd" "in openfd")
    const-val local__str_literal_2955[2377565]:string[26] "temp"
    (2377566 'move' "unknown" "unknown")
    const-val ret[534728]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237289]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547050 'move' local_style[237289] style[237283])
    val ret[237295]:file[235580] "dead at end of block" "insert auto destroy"
    (1016521 call init[235574] ret[237295])
    ref call_tmp[2216311]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216313 'move' call_tmp[2216311](2216315 '.' ret[237295] home[235562]))
    const-val call_tmp[716125]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167459]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167461]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167463 'move' call_tmp[2167461](2167466 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167469 'move' call_tmp[2167459] call_tmp[2167461])
    const-val call_tmp[2167472]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167474]:locale[28] "temp"
    wide-ref tmp[2428923]:chpl_localeID_t[209294] "temp"
    (2428927 'move' tmp[2428923](2428925 'set reference' call_tmp[2167459]))
    (2167477 call chpl_localeID_to_locale[92849] tmp[2428923] ret_tmp[2167474])
    (2167480 'move' call_tmp[2167472] ret_tmp[2167474])
    (1830502 'move' call_tmp[716125] call_tmp[2167472])
    wide-ref tmp[2414327]:locale[28] "temp"
    (2414330 'move' tmp[2414327] call_tmp[2216311])
    wide-ref tmp[2414333]:locale[28] "temp"
    (2414337 'move' tmp[2414333](2414335 'set reference' call_tmp[716125]))
    (237304 call =[90631] tmp[2414327] tmp[2414333])
    ref i_x[2264207]:locale[28] "temp"
    (2264211 'move' i_x[2264207](2264209 'set reference' call_tmp[716125]))
    wide-ref tmp[2434110]:locale[28] "temp"
    (2434113 'move' tmp[2434110] i_x[2264207])
    (2264215 call deinit[90185] tmp[2434110])
    ref call_tmp[2216513]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216515 'move' call_tmp[2216513](2216517 '.' ret[237295] _file_internal[235568]))
    const-val call_tmp[716137]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716140 'move' call_tmp[716137](237315 call chpl_cnullfile[223574]))
    const-val call_tmp[716142]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986524]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986530 'move' coerce_tmp[986524](986526 'cast' int(32)[95] 0))
    (716145 'move' call_tmp[716142](237320 call qio_file_init[232648] call_tmp[2216513] call_tmp[716137] fd[237268] hints[237275] local_style[237289] coerce_tmp[986524]))
    const-val call_tmp[2206620]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206622 'move' call_tmp[2206620](2206625 call qio_err_iserr[223646] call_tmp[716142]))
    const-val call_tmp[2206627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206629 'move' call_tmp[2206627](2206631 '!=' call_tmp[2206620] 0))
    if call_tmp[2206627]
    {
      val path_cs[237327]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016559 'move' path_cs[237327](1016557 'cast' c_string[19] nil[44]))
      const-val call_tmp[716152]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716155 'move' call_tmp[716152](237336 call qio_file_path_for_fd[233647] fd[237268] path_cs[237327]))
      const-val path[237355]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576721]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2206637]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206639 'move' call_tmp[2206637](2206642 call qio_err_iserr[223646] call_tmp[716152]))
      const-val call_tmp[2206644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206646 'move' call_tmp[2206644](2206648 '!=' call_tmp[2206637] 0))
      if call_tmp[2206644]
      {
        val inlineImm[2204235]:string[26] "temp"
        (2204238 'move' inlineImm[2204235] "unknown")
        ref i_x[2204240]:string[26] "temp"
        (2204244 'move' i_x[2204240](2204242 'set reference' inlineImm[2204235]))
        val ret[2204247]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2204249]:string[26] "dead after last mention" "temp"
        wide-ref tmp[2429881]:string[26] "temp"
        (2429884 'move' tmp[2429881] i_x[2204240])
        (2204252 call init=[30771] tmp[2204249] tmp[2429881])
        (2204255 'move' ret[2204247] tmp[2204249])
        (576732 'move' tmp[576721] ret[2204247])
      }
      {
        val error[1808418]:Error[167938] "error variable" "temp"
        (1808420 'move' error[1808418] nil[44])
        const-val call_tmp[2203513]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2203515 'move' call_tmp[2203513](2203517 'string_length_bytes' path_cs[237327]))
        val errorExists[2108032]:bool[10] "temp"
        (2108037 'move' errorExists[2108032](2108034 '!=' error[1808418] nil[44]))
        if errorExists[2108032]
        {
          val tmp[2448150]:__wide_Error[2381123] "temp"
          (2448152 'move' tmp[2448150] error[1808418])
          (1808424 '=' error_out[1808415] tmp[2448150])
          ref i_x[2327689]:file[235580] "temp"
          (2327693 'move' i_x[2327689](2327691 'set reference' ret[237295]))
          (2327697 call deinit[235891] i_x[2327689])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        val error[1808433]:__wide_Error[2381123] "error variable" "temp"
        (1808435 'move' error[1808433] nil[44])
        const-val ret[2141297]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2141299]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        (2141301 'move' call_tmp[2141299](2141303 'cast' c_ptr(uint(8))[937423] path_cs[237327]))
        val error[2141308]:__wide_Error[2381123] "error variable" "temp"
        (2141310 'move' error[2141308] nil[44])
        const-val ret[2141313]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2141315]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141317]:__wide_Error[2381123] "error variable" "temp"
        (2141319 'move' error[2141317] nil[44])
        const-val ret_tmp[2141322]:string[26] "temp"
        ref tmp[2426596]:__wide_Error[2381123] "temp"
        (2426600 'move' tmp[2426596](2426598 'set reference' error[2141317]))
        (2141325 call decodeByteBuffer[173892] call_tmp[2141299] call_tmp[2203513] replace[173648] tmp[2426596] ret_tmp[2141322])
        (2141331 'move' call_tmp[2141315] ret_tmp[2141322])
        val errorExists[2141334]:bool[10] "temp"
        (2141336 'move' errorExists[2141334](2141338 '!=' error[2141317] nil[44]))
        if errorExists[2141334]
        {
          (2141343 '=' error[2141308] error[2141317])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141352] _endcreateStringWithNewBuffer[2141352]
        }
        (2141349 'move' ret[2141313] call_tmp[2141315])
        label _endcreateStringWithNewBuffer[2141352]
        val errorExists[2141357]:bool[10] "temp"
        (2141359 'move' errorExists[2141357](2141361 '!=' error[2141308] nil[44]))
        if errorExists[2141357]
        {
          (2141366 '=' error[1808433] error[2141308])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141375] _endcreateStringWithNewBuffer[2141375]
        }
        (2141372 'move' ret[2141297] ret[2141313])
        label _endcreateStringWithNewBuffer[2141375]
        val errorExists[2108040]:bool[10] "temp"
        (2108045 'move' errorExists[2108040](2108042 '!=' error[1808433] nil[44]))
        if errorExists[2108040]
        {
          (1808439 '=' error_out[1808415] error[1808433])
          ref i_x[2327701]:file[235580] "temp"
          (2327705 'move' i_x[2327701](2327703 'set reference' ret[237295]))
          (2327709 call deinit[235891] i_x[2327701])
          gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
        }
        (576741 'move' tmp[576721] ret[2141297])
      }
      (547060 'move' path[237355] tmp[576721])
      val error[1808447]:__wide_Error[2381123] "error variable" "temp"
      (1808456 'move' error[1808447] nil[44])
      ref tmp[2414340]:__wide_Error[2381123] "temp"
      (2414344 'move' tmp[2414340](2414342 'set reference' error[1808447]))
      (237380 call ioerror[266250] call_tmp[716142] "in openfd" path[237355] tmp[2414340])
      val errorExists[2108048]:bool[10] "temp"
      (2108053 'move' errorExists[2108048](2108050 '!=' error[1808447] nil[44]))
      if errorExists[2108048]
      {
        gotoErrorHandling handler[1808448] handler[1808448]
      }
      label handler[1808448]
      val errorExists[2108056]:bool[10] "temp"
      (2108061 'move' errorExists[2108056](2108058 '!=' error[1808447] nil[44]))
      if errorExists[2108056]
      {
        (1808463 '=' error_out[1808415] error[1808447])
        ref i_x[2130057]:string[26] "temp"
        (2130061 'move' i_x[2130057](2130059 'set reference' path[237355]))
        wide-ref tmp[2425194]:string[26] "temp"
        (2425197 'move' tmp[2425194] i_x[2130057])
        (2130065 call deinit[30831] tmp[2425194])
        ref i_x[2327713]:file[235580] "temp"
        (2327717 'move' i_x[2327713](2327715 'set reference' ret[237295]))
        (2327721 call deinit[235891] i_x[2327713])
        gotoErrorHandlingReturn _end_openfd[534726] _end_openfd[534726]
      }
      ref i_x[2130069]:string[26] "temp"
      (2130073 'move' i_x[2130069](2130071 'set reference' path[237355]))
      wide-ref tmp[2425200]:string[26] "temp"
      (2425203 'move' tmp[2425200] i_x[2130069])
      (2130077 call deinit[30831] tmp[2425200])
    }
    (1016519 'move' ret[534728] ret[237295])
    label _end_openfd[534726]
    (1831477 '=' _retArg[1831475] ret[534728])
    (1831481 return _void[55])
  }
  function openfp[237400](const in arg fp[237397]:_file[155], const in arg hints[237404]:int(32)[95], const  ref arg style[237412]:iostyle[231844], ref arg error_out[1808475]:__wide_Error[2381123], ref arg _retArg[1831495]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2988[2377583]:string[26] "temp"
    (2377584 'move' "in openfp" "in openfp")
    const-val local__str_literal_2955[2377577]:string[26] "temp"
    (2377578 'move' "unknown" "unknown")
    const-val ret[534740]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237418]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547062 'move' local_style[237418] style[237412])
    val ret[237424]:file[235580] "dead at end of block" "insert auto destroy"
    (1022126 call init[235574] ret[237424])
    ref call_tmp[2216367]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216369 'move' call_tmp[2216367](2216371 '.' ret[237424] home[235562]))
    const-val call_tmp[716164]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167495]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167497]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167499 'move' call_tmp[2167497](2167502 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167505 'move' call_tmp[2167495] call_tmp[2167497])
    const-val call_tmp[2167508]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167510]:locale[28] "temp"
    wide-ref tmp[2428930]:chpl_localeID_t[209294] "temp"
    (2428934 'move' tmp[2428930](2428932 'set reference' call_tmp[2167495]))
    (2167513 call chpl_localeID_to_locale[92849] tmp[2428930] ret_tmp[2167510])
    (2167516 'move' call_tmp[2167508] ret_tmp[2167510])
    (1830508 'move' call_tmp[716164] call_tmp[2167508])
    wide-ref tmp[2414347]:locale[28] "temp"
    (2414350 'move' tmp[2414347] call_tmp[2216367])
    wide-ref tmp[2414353]:locale[28] "temp"
    (2414357 'move' tmp[2414353](2414355 'set reference' call_tmp[716164]))
    (237433 call =[90631] tmp[2414347] tmp[2414353])
    ref i_x[2264219]:locale[28] "temp"
    (2264223 'move' i_x[2264219](2264221 'set reference' call_tmp[716164]))
    wide-ref tmp[2434116]:locale[28] "temp"
    (2434119 'move' tmp[2434116] i_x[2264219])
    (2264227 call deinit[90185] tmp[2434116])
    ref call_tmp[2216549]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216551 'move' call_tmp[2216549](2216553 '.' ret[237424] _file_internal[235568]))
    const-val call_tmp[716181]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022081]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022087 'move' coerce_tmp[1022081](1022083 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022089]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022095 'move' coerce_tmp[1022089](1022091 'cast' int(32)[95] 1))
    (716184 'move' call_tmp[716181](237449 call qio_file_init[232648] call_tmp[2216549] fp[237397] coerce_tmp[1022081] hints[237404] local_style[237418] coerce_tmp[1022089]))
    const-val call_tmp[2206722]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206724 'move' call_tmp[2206722](2206727 call qio_err_iserr[223646] call_tmp[716181]))
    const-val call_tmp[2206729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206731 'move' call_tmp[2206729](2206733 '!=' call_tmp[2206722] 0))
    if call_tmp[2206729]
    {
      val path_cs[237456]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022134 'move' path_cs[237456](1022132 'cast' c_string[19] nil[44]))
      const-val call_tmp[716191]:syserr[223584] "dead at end of block" "maybe param" "temp"
      (716194 'move' call_tmp[716191](237465 call qio_file_path_for_fp[233663] fp[237397] path_cs[237456]))
      const-val path[237484]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576748]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2206739]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206741 'move' call_tmp[2206739](2206744 call qio_err_iserr[223646] call_tmp[716191]))
      const-val call_tmp[2206746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206748 'move' call_tmp[2206746](2206750 '!=' call_tmp[2206739] 0))
      if call_tmp[2206746]
      {
        val inlineImm[2204260]:string[26] "temp"
        (2204263 'move' inlineImm[2204260] "unknown")
        ref i_x[2204265]:string[26] "temp"
        (2204269 'move' i_x[2204265](2204267 'set reference' inlineImm[2204260]))
        val ret[2204272]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2204274]:string[26] "dead after last mention" "temp"
        wide-ref tmp[2429887]:string[26] "temp"
        (2429890 'move' tmp[2429887] i_x[2204265])
        (2204277 call init=[30771] tmp[2204274] tmp[2429887])
        (2204280 'move' ret[2204272] tmp[2204274])
        (576759 'move' tmp[576748] ret[2204272])
      }
      {
        val error[1808478]:Error[167938] "error variable" "temp"
        (1808480 'move' error[1808478] nil[44])
        const-val call_tmp[2203535]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2203537 'move' call_tmp[2203535](2203539 'string_length_bytes' path_cs[237456]))
        val errorExists[2108064]:bool[10] "temp"
        (2108069 'move' errorExists[2108064](2108066 '!=' error[1808478] nil[44]))
        if errorExists[2108064]
        {
          val tmp[2448155]:__wide_Error[2381123] "temp"
          (2448157 'move' tmp[2448155] error[1808478])
          (1808484 '=' error_out[1808475] tmp[2448155])
          ref i_x[2327725]:file[235580] "temp"
          (2327729 'move' i_x[2327725](2327727 'set reference' ret[237424]))
          (2327733 call deinit[235891] i_x[2327725])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        val error[1808493]:__wide_Error[2381123] "error variable" "temp"
        (1808495 'move' error[1808493] nil[44])
        const-val ret[2141395]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2141397]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
        (2141399 'move' call_tmp[2141397](2141401 'cast' c_ptr(uint(8))[937423] path_cs[237456]))
        val error[2141406]:__wide_Error[2381123] "error variable" "temp"
        (2141408 'move' error[2141406] nil[44])
        const-val ret[2141411]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2141413]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2141415]:__wide_Error[2381123] "error variable" "temp"
        (2141417 'move' error[2141415] nil[44])
        const-val ret_tmp[2141420]:string[26] "temp"
        ref tmp[2426603]:__wide_Error[2381123] "temp"
        (2426607 'move' tmp[2426603](2426605 'set reference' error[2141415]))
        (2141423 call decodeByteBuffer[173892] call_tmp[2141397] call_tmp[2203535] replace[173648] tmp[2426603] ret_tmp[2141420])
        (2141429 'move' call_tmp[2141413] ret_tmp[2141420])
        val errorExists[2141432]:bool[10] "temp"
        (2141434 'move' errorExists[2141432](2141436 '!=' error[2141415] nil[44]))
        if errorExists[2141432]
        {
          (2141441 '=' error[2141406] error[2141415])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141450] _endcreateStringWithNewBuffer[2141450]
        }
        (2141447 'move' ret[2141411] call_tmp[2141413])
        label _endcreateStringWithNewBuffer[2141450]
        val errorExists[2141455]:bool[10] "temp"
        (2141457 'move' errorExists[2141455](2141459 '!=' error[2141406] nil[44]))
        if errorExists[2141455]
        {
          (2141464 '=' error[1808493] error[2141406])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141473] _endcreateStringWithNewBuffer[2141473]
        }
        (2141470 'move' ret[2141395] ret[2141411])
        label _endcreateStringWithNewBuffer[2141473]
        val errorExists[2108072]:bool[10] "temp"
        (2108077 'move' errorExists[2108072](2108074 '!=' error[1808493] nil[44]))
        if errorExists[2108072]
        {
          (1808499 '=' error_out[1808475] error[1808493])
          ref i_x[2327737]:file[235580] "temp"
          (2327741 'move' i_x[2327737](2327739 'set reference' ret[237424]))
          (2327745 call deinit[235891] i_x[2327737])
          gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
        }
        (576768 'move' tmp[576748] ret[2141395])
      }
      (547072 'move' path[237484] tmp[576748])
      ref i_cs[2120002]:c_string[19] "temp"
      (2120006 'move' i_cs[2120002](2120004 'set reference' path_cs[237456]))
      const-val call_tmp[2120009]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120011 'move' call_tmp[2120009](2120013 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120016]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120018 'move' call_tmp[2120016](2120020 'cast' c_string[19] call_tmp[2120009]))
      const-val coerce_tmp[2120023]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120025 'move' coerce_tmp[2120023] path_cs[237456])
      const-val call_tmp[2120029]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120031 'move' call_tmp[2120029](2120033 'string_compare' coerce_tmp[2120023] call_tmp[2120016]))
      const-val call_tmp[2120036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120038 'move' call_tmp[2120036](2120040 '!=' call_tmp[2120029] 0))
      if call_tmp[2120036]
      {
        (2120046 call chpl_rt_free_c_string[22714] i_cs[2120002])
      }
      val error[1808507]:__wide_Error[2381123] "error variable" "temp"
      (1808516 'move' error[1808507] nil[44])
      ref tmp[2414360]:__wide_Error[2381123] "temp"
      (2414364 'move' tmp[2414360](2414362 'set reference' error[1808507]))
      (237514 call ioerror[266250] call_tmp[716181] "in openfp" path[237484] tmp[2414360])
      val errorExists[2108080]:bool[10] "temp"
      (2108085 'move' errorExists[2108080](2108082 '!=' error[1808507] nil[44]))
      if errorExists[2108080]
      {
        gotoErrorHandling handler[1808508] handler[1808508]
      }
      label handler[1808508]
      val errorExists[2108088]:bool[10] "temp"
      (2108093 'move' errorExists[2108088](2108090 '!=' error[1808507] nil[44]))
      if errorExists[2108088]
      {
        (1808523 '=' error_out[1808475] error[1808507])
        ref i_x[2130081]:string[26] "temp"
        (2130085 'move' i_x[2130081](2130083 'set reference' path[237484]))
        wide-ref tmp[2425206]:string[26] "temp"
        (2425209 'move' tmp[2425206] i_x[2130081])
        (2130089 call deinit[30831] tmp[2425206])
        ref i_x[2327749]:file[235580] "temp"
        (2327753 'move' i_x[2327749](2327751 'set reference' ret[237424]))
        (2327757 call deinit[235891] i_x[2327749])
        gotoErrorHandlingReturn _end_openfp[534738] _end_openfp[534738]
      }
      ref i_x[2130093]:string[26] "temp"
      (2130097 'move' i_x[2130093](2130095 'set reference' path[237484]))
      wide-ref tmp[2425212]:string[26] "temp"
      (2425215 'move' tmp[2425212] i_x[2130093])
      (2130101 call deinit[30831] tmp[2425212])
    }
    (1022124 'move' ret[534740] ret[237424])
    label _end_openfp[534738]
    (1831497 '=' _retArg[1831495] ret[534740])
    (1831501 return _void[55])
  }
  function openmem[237625](const  ref arg style[237621]:iostyle[231844], ref arg error_out[1808535]:__wide_Error[2381123], ref arg _retArg[1831521]:file[235580]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val local__str_literal_2992[2377589]:string[26] "temp"
    (2377590 'move' "in openmem" "in openmem")
    const-val ret[534764]:file[235580] "dead after last mention" "RVV" "temp"
    const-val local_style[237629]:iostyle[231844] "dead at end of block" "insert auto destroy"
    (547080 'move' local_style[237629] style[237621])
    val ret[237635]:file[235580] "dead at end of block" "insert auto destroy"
    (1060601 call init[235574] ret[237635])
    ref call_tmp[2216403]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216405 'move' call_tmp[2216403](2216407 '.' ret[237635] home[235562]))
    const-val call_tmp[716232]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167531]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167533]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167535 'move' call_tmp[2167533](2167538 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167541 'move' call_tmp[2167531] call_tmp[2167533])
    const-val call_tmp[2167544]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167546]:locale[28] "temp"
    wide-ref tmp[2428937]:chpl_localeID_t[209294] "temp"
    (2428941 'move' tmp[2428937](2428939 'set reference' call_tmp[2167531]))
    (2167549 call chpl_localeID_to_locale[92849] tmp[2428937] ret_tmp[2167546])
    (2167552 'move' call_tmp[2167544] ret_tmp[2167546])
    (1830514 'move' call_tmp[716232] call_tmp[2167544])
    wide-ref tmp[2414367]:locale[28] "temp"
    (2414370 'move' tmp[2414367] call_tmp[2216403])
    wide-ref tmp[2414373]:locale[28] "temp"
    (2414377 'move' tmp[2414373](2414375 'set reference' call_tmp[716232]))
    (237644 call =[90631] tmp[2414367] tmp[2414373])
    ref i_x[2264231]:locale[28] "temp"
    (2264235 'move' i_x[2264231](2264233 'set reference' call_tmp[716232]))
    wide-ref tmp[2434122]:locale[28] "temp"
    (2434125 'move' tmp[2434122] i_x[2264231])
    (2264239 call deinit[90185] tmp[2434122])
    ref call_tmp[2216565]:qio_file_ptr_t[231439] "dead after last mention" "maybe param" "temp"
    (2216567 'move' call_tmp[2216565](2216569 '.' ret[237635] _file_internal[235568]))
    const-val call_tmp[716244]:syserr[223584] "dead at end of block" "maybe param" "temp"
    (716247 'move' call_tmp[716244](237655 call qio_file_open_mem[232728] call_tmp[2216565] QBUFFER_PTR_NULL[231479] local_style[237629]))
    const-val call_tmp[2206773]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206775 'move' call_tmp[2206773](2206778 call qio_err_iserr[223646] call_tmp[716244]))
    const-val call_tmp[2206780]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206782 'move' call_tmp[2206780](2206784 '!=' call_tmp[2206773] 0))
    if call_tmp[2206780]
    {
      val error[1808537]:__wide_Error[2381123] "error variable" "temp"
      (1808546 'move' error[1808537] nil[44])
      ref tmp[2414380]:__wide_Error[2381123] "temp"
      (2414384 'move' tmp[2414380](2414382 'set reference' error[1808537]))
      (237681 call ioerror[266311] call_tmp[716244] "in openmem" tmp[2414380])
      val errorExists[2108096]:bool[10] "temp"
      (2108101 'move' errorExists[2108096](2108098 '!=' error[1808537] nil[44]))
      if errorExists[2108096]
      {
        gotoErrorHandling handler[1808538] handler[1808538]
      }
      label handler[1808538]
      val errorExists[2108104]:bool[10] "temp"
      (2108109 'move' errorExists[2108104](2108106 '!=' error[1808537] nil[44]))
      if errorExists[2108104]
      {
        (1808553 '=' error_out[1808535] error[1808537])
        ref i_x[2327761]:file[235580] "temp"
        (2327765 'move' i_x[2327761](2327763 'set reference' ret[237635]))
        (2327769 call deinit[235891] i_x[2327761])
        gotoErrorHandlingReturn _end_openmem[534762] _end_openmem[534762]
      }
    }
    (1060599 'move' ret[534764] ret[237635])
    label _end_openmem[534762]
    (1831523 '=' _retArg[1831521] ret[534764])
    (1831525 return _void[55])
  }
  type channel(false,dynamic,true)[985627] val home[985615]:locale[28] "no doc" val _channel_internal[985620]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[985624]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080682] val home[1080670]:locale[28] "no doc" val _channel_internal[1080675]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1080679]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021825] val home[1021813]:locale[28] "no doc" val _channel_internal[1021818]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1021822]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060947] val home[1060935]:locale[28] "no doc" val _channel_internal[1060940]:qio_channel_ptr_t[231465] "no doc" val _readWriteThisFromLocale[1060944]:locale[28] "no doc"
  function =[1018439](wide-ref arg lhs[1018441]:channel(false,dynamic,true)[985627], const  ref arg rhs[1018443]:channel(false,dynamic,true)[985627]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2377878]:string[26] "temp"
    (2377879 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2226992]:locale[28] "dead after last mention" "maybe param" "temp"
    (2226994 'move' call_tmp[2226992](2226996 '.' rhs[1018443] home[985615]))
    const-val call_tmp[1018652]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165167]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165169 'move' coerce_tmp[2165167](2165171 '.v' call_tmp[2226992] _instance[89975]))
    val coerce_tmp[2165174]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165176 'move' coerce_tmp[2165174](2165178 'cast' object[22] coerce_tmp[2165167]))
    const-val call_tmp[2165181]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428551]:__wide_object[2381018] "temp"
    (2428554 'move' tmp[2428551] nil[44])
    (2165183 'move' call_tmp[2165181](2165185 'ptr_eq' coerce_tmp[2165174] tmp[2428551]))
    if call_tmp[2165181]
    {
      (2165191 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1018654 'move' call_tmp[1018652](1018656 '_wide_get_locale' coerce_tmp[2165167]))
    val rvfDerefTmp[2083539]:channel(false,dynamic,true)[985627] "temp"
    (2083543 'move' rvfDerefTmp[2083539](2083541 'deref' rhs[1018443]))
    val isdirect[2087935]:bool[10] "temp"
    (2087940 'move' isdirect[2087935](2087937 call chpl_doDirectExecuteOn[187423] call_tmp[1018652]))
    if isdirect[2087935]
    {
      (2087944 call on_fn[1018665] rvfDerefTmp[2083539])
    }
    {
      val _args_foron_fn[2087959]:_class_localson_fn[2087951] "temp"
      (2087963 'move' _args_foron_fn[2087959](2087961 'stack allocate class' _class_localson_fn[2087951]))
      (2087965 '.=' _args_foron_fn[2087959] _0_tmp[2087954] call_tmp[1018652])
      (2087969 '.=' _args_foron_fn[2087959] _1_rvfDerefTmp[2087956] rvfDerefTmp[2083539])
      val _args_vforon_fn[2087973]:c_void_ptr[149] "temp"
      (2087977 'move' _args_vforon_fn[2087973](2087975 'cast_to_void_star' _args_foron_fn[2087959]))
      val _args_sizeon_fn[2087979]:int(64)[13] "temp"
      (2087983 'move' _args_sizeon_fn[2087979](2087981 'sizeof_bundle' _class_localson_fn[2087951]))
      on(2088015 call wrapon_fn[2087985] call_tmp[1018652] _args_vforon_fn[2087973] _args_sizeon_fn[2087979] _args_foron_fn[2087959])
    }
    wide-ref call_tmp[2227002]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227004 'move' call_tmp[2227002](2227006 '.' lhs[1018441] home[985615]))
    const-val call_tmp[1018696]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165197]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165199 'move' coerce_tmp[2165197](2165201 '.v' call_tmp[2227002] _instance[89975]))
    val coerce_tmp[2165204]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165206 'move' coerce_tmp[2165204](2165208 'cast' object[22] coerce_tmp[2165197]))
    const-val call_tmp[2165211]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428557]:__wide_object[2381018] "temp"
    (2428560 'move' tmp[2428557] nil[44])
    (2165213 'move' call_tmp[2165211](2165215 'ptr_eq' coerce_tmp[2165204] tmp[2428557]))
    if call_tmp[2165211]
    {
      (2165221 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1018698 'move' call_tmp[1018696](1018700 '_wide_get_locale' coerce_tmp[2165197]))
    val isdirect[2088020]:bool[10] "temp"
    (2088025 'move' isdirect[2088020](2088022 call chpl_doDirectExecuteOn[187423] call_tmp[1018696]))
    if isdirect[2088020]
    {
      (2088029 call on_fn[1018709] lhs[1018441])
    }
    {
      val _args_foron_fn[2088044]:_class_localson_fn[2088036] "temp"
      (2088048 'move' _args_foron_fn[2088044](2088046 'stack allocate class' _class_localson_fn[2088036]))
      (2088050 '.=' _args_foron_fn[2088044] _0_tmp[2088039] call_tmp[1018696])
      wide-ref tmp[2088054]:channel(false,dynamic,true)[985627] "temp"
      (2088058 'move' tmp[2088054](2088056 'set reference' lhs[1018441]))
      (2088060 '.=' _args_foron_fn[2088044] _1_lhs[2088041] tmp[2088054])
      val _args_vforon_fn[2088064]:c_void_ptr[149] "temp"
      (2088068 'move' _args_vforon_fn[2088064](2088066 'cast_to_void_star' _args_foron_fn[2088044]))
      val _args_sizeon_fn[2088070]:int(64)[13] "temp"
      (2088074 'move' _args_sizeon_fn[2088070](2088072 'sizeof_bundle' _class_localson_fn[2088036]))
      on(2088106 call wrapon_fn[2088076] call_tmp[1018696] _args_vforon_fn[2088064] _args_sizeon_fn[2088070] _args_foron_fn[2088044])
    }
    wide-ref call_tmp[2227012]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227014 'move' call_tmp[2227012](2227016 '.' lhs[1018441] home[985615]))
    ref call_tmp[2227022]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227024 'move' call_tmp[2227022](2227026 '.' rhs[1018443] home[985615]))
    wide-ref tmp[2414881]:locale[28] "temp"
    (2414884 'move' tmp[2414881] call_tmp[2227022])
    (1018747 call =[90631] call_tmp[2227012] tmp[2414881])
    const-val coerce_tmp[1019086]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414899]:qio_channel_ptr_t[231465] "temp"
    (1019090 'move' tmp[2414899](2368512 '.v' rhs[1018443] _channel_internal[985620]))
    (2414902 'move' coerce_tmp[1019086] tmp[2414899])
    (2368506 '.=' lhs[1018441] _channel_internal[985620] coerce_tmp[1019086])
    (1018771 return _void[55])
  }
  function =[1023147](wide-ref arg lhs[1023149]:channel(true,dynamic,true)[1021825], const  ref arg rhs[1023151]:channel(true,dynamic,true)[1021825]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2377927]:string[26] "temp"
    (2377928 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2228033]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228035 'move' call_tmp[2228033](2228037 '.' rhs[1023151] home[1021813]))
    const-val call_tmp[1023360]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165317]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165319 'move' coerce_tmp[2165317](2165321 '.v' call_tmp[2228033] _instance[89975]))
    val coerce_tmp[2165324]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165326 'move' coerce_tmp[2165324](2165328 'cast' object[22] coerce_tmp[2165317]))
    const-val call_tmp[2165331]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428581]:__wide_object[2381018] "temp"
    (2428584 'move' tmp[2428581] nil[44])
    (2165333 'move' call_tmp[2165331](2165335 'ptr_eq' coerce_tmp[2165324] tmp[2428581]))
    if call_tmp[2165331]
    {
      (2165341 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1023362 'move' call_tmp[1023360](1023364 '_wide_get_locale' coerce_tmp[2165317]))
    val rvfDerefTmp[2083616]:channel(true,dynamic,true)[1021825] "temp"
    (2083620 'move' rvfDerefTmp[2083616](2083618 'deref' rhs[1023151]))
    val isdirect[2088618]:bool[10] "temp"
    (2088623 'move' isdirect[2088618](2088620 call chpl_doDirectExecuteOn[187423] call_tmp[1023360]))
    if isdirect[2088618]
    {
      (2088627 call on_fn[1023373] rvfDerefTmp[2083616])
    }
    {
      val _args_foron_fn[2088642]:_class_localson_fn[2088634] "temp"
      (2088646 'move' _args_foron_fn[2088642](2088644 'stack allocate class' _class_localson_fn[2088634]))
      (2088648 '.=' _args_foron_fn[2088642] _0_tmp[2088637] call_tmp[1023360])
      (2088652 '.=' _args_foron_fn[2088642] _1_rvfDerefTmp[2088639] rvfDerefTmp[2083616])
      val _args_vforon_fn[2088656]:c_void_ptr[149] "temp"
      (2088660 'move' _args_vforon_fn[2088656](2088658 'cast_to_void_star' _args_foron_fn[2088642]))
      val _args_sizeon_fn[2088662]:int(64)[13] "temp"
      (2088666 'move' _args_sizeon_fn[2088662](2088664 'sizeof_bundle' _class_localson_fn[2088634]))
      on(2088698 call wrapon_fn[2088668] call_tmp[1023360] _args_vforon_fn[2088656] _args_sizeon_fn[2088662] _args_foron_fn[2088642])
    }
    wide-ref call_tmp[2228043]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228045 'move' call_tmp[2228043](2228047 '.' lhs[1023149] home[1021813]))
    const-val call_tmp[1023404]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165347]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165349 'move' coerce_tmp[2165347](2165351 '.v' call_tmp[2228043] _instance[89975]))
    val coerce_tmp[2165354]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165356 'move' coerce_tmp[2165354](2165358 'cast' object[22] coerce_tmp[2165347]))
    const-val call_tmp[2165361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428587]:__wide_object[2381018] "temp"
    (2428590 'move' tmp[2428587] nil[44])
    (2165363 'move' call_tmp[2165361](2165365 'ptr_eq' coerce_tmp[2165354] tmp[2428587]))
    if call_tmp[2165361]
    {
      (2165371 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1023406 'move' call_tmp[1023404](1023408 '_wide_get_locale' coerce_tmp[2165347]))
    val isdirect[2088703]:bool[10] "temp"
    (2088708 'move' isdirect[2088703](2088705 call chpl_doDirectExecuteOn[187423] call_tmp[1023404]))
    if isdirect[2088703]
    {
      (2088712 call on_fn[1023417] lhs[1023149])
    }
    {
      val _args_foron_fn[2088727]:_class_localson_fn[2088719] "temp"
      (2088731 'move' _args_foron_fn[2088727](2088729 'stack allocate class' _class_localson_fn[2088719]))
      (2088733 '.=' _args_foron_fn[2088727] _0_tmp[2088722] call_tmp[1023404])
      wide-ref tmp[2088737]:channel(true,dynamic,true)[1021825] "temp"
      (2088741 'move' tmp[2088737](2088739 'set reference' lhs[1023149]))
      (2088743 '.=' _args_foron_fn[2088727] _1_lhs[2088724] tmp[2088737])
      val _args_vforon_fn[2088747]:c_void_ptr[149] "temp"
      (2088751 'move' _args_vforon_fn[2088747](2088749 'cast_to_void_star' _args_foron_fn[2088727]))
      val _args_sizeon_fn[2088753]:int(64)[13] "temp"
      (2088757 'move' _args_sizeon_fn[2088753](2088755 'sizeof_bundle' _class_localson_fn[2088719]))
      on(2088789 call wrapon_fn[2088759] call_tmp[1023404] _args_vforon_fn[2088747] _args_sizeon_fn[2088753] _args_foron_fn[2088727])
    }
    wide-ref call_tmp[2228053]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228055 'move' call_tmp[2228053](2228057 '.' lhs[1023149] home[1021813]))
    ref call_tmp[2228063]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228065 'move' call_tmp[2228063](2228067 '.' rhs[1023151] home[1021813]))
    wide-ref tmp[2415059]:locale[28] "temp"
    (2415062 'move' tmp[2415059] call_tmp[2228063])
    (1023455 call =[90631] call_tmp[2228053] tmp[2415059])
    const-val coerce_tmp[1023794]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415077]:qio_channel_ptr_t[231465] "temp"
    (1023798 'move' tmp[2415077](2368787 '.v' rhs[1023151] _channel_internal[1021818]))
    (2415080 'move' coerce_tmp[1023794] tmp[2415077])
    (2368781 '.=' lhs[1023149] _channel_internal[1021818] coerce_tmp[1023794])
    (1023479 return _void[55])
  }
  function =[1061860](wide-ref arg lhs[1061862]:channel(true,dynamic,false)[1060947], const  ref arg rhs[1061864]:channel(true,dynamic,false)[1060947]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378107]:string[26] "temp"
    (2378108 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2263434]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263436 'move' call_tmp[2263434](2263438 '.' rhs[1061864] home[1060935]))
    const-val call_tmp[1062073]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165467]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165469 'move' coerce_tmp[2165467](2165471 '.v' call_tmp[2263434] _instance[89975]))
    val coerce_tmp[2165474]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165476 'move' coerce_tmp[2165474](2165478 'cast' object[22] coerce_tmp[2165467]))
    const-val call_tmp[2165481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428611]:__wide_object[2381018] "temp"
    (2428614 'move' tmp[2428611] nil[44])
    (2165483 'move' call_tmp[2165481](2165485 'ptr_eq' coerce_tmp[2165474] tmp[2428611]))
    if call_tmp[2165481]
    {
      (2165491 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062075 'move' call_tmp[1062073](1062077 '_wide_get_locale' coerce_tmp[2165467]))
    val rvfDerefTmp[2083724]:channel(true,dynamic,false)[1060947] "temp"
    (2083728 'move' rvfDerefTmp[2083724](2083726 'deref' rhs[1061864]))
    val isdirect[2089331]:bool[10] "temp"
    (2089336 'move' isdirect[2089331](2089333 call chpl_doDirectExecuteOn[187423] call_tmp[1062073]))
    if isdirect[2089331]
    {
      (2089340 call on_fn[1062086] rvfDerefTmp[2083724])
    }
    {
      val _args_foron_fn[2089355]:_class_localson_fn[2089347] "temp"
      (2089359 'move' _args_foron_fn[2089355](2089357 'stack allocate class' _class_localson_fn[2089347]))
      (2089361 '.=' _args_foron_fn[2089355] _0_tmp[2089350] call_tmp[1062073])
      (2089365 '.=' _args_foron_fn[2089355] _1_rvfDerefTmp[2089352] rvfDerefTmp[2083724])
      val _args_vforon_fn[2089369]:c_void_ptr[149] "temp"
      (2089373 'move' _args_vforon_fn[2089369](2089371 'cast_to_void_star' _args_foron_fn[2089355]))
      val _args_sizeon_fn[2089375]:int(64)[13] "temp"
      (2089379 'move' _args_sizeon_fn[2089375](2089377 'sizeof_bundle' _class_localson_fn[2089347]))
      on(2089411 call wrapon_fn[2089381] call_tmp[1062073] _args_vforon_fn[2089369] _args_sizeon_fn[2089375] _args_foron_fn[2089355])
    }
    wide-ref call_tmp[2263444]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263446 'move' call_tmp[2263444](2263448 '.' lhs[1061862] home[1060935]))
    const-val call_tmp[1062117]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165497]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165499 'move' coerce_tmp[2165497](2165501 '.v' call_tmp[2263444] _instance[89975]))
    val coerce_tmp[2165504]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165506 'move' coerce_tmp[2165504](2165508 'cast' object[22] coerce_tmp[2165497]))
    const-val call_tmp[2165511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428617]:__wide_object[2381018] "temp"
    (2428620 'move' tmp[2428617] nil[44])
    (2165513 'move' call_tmp[2165511](2165515 'ptr_eq' coerce_tmp[2165504] tmp[2428617]))
    if call_tmp[2165511]
    {
      (2165521 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062119 'move' call_tmp[1062117](1062121 '_wide_get_locale' coerce_tmp[2165497]))
    val isdirect[2089416]:bool[10] "temp"
    (2089421 'move' isdirect[2089416](2089418 call chpl_doDirectExecuteOn[187423] call_tmp[1062117]))
    if isdirect[2089416]
    {
      (2089425 call on_fn[1062130] lhs[1061862])
    }
    {
      val _args_foron_fn[2089440]:_class_localson_fn[2089432] "temp"
      (2089444 'move' _args_foron_fn[2089440](2089442 'stack allocate class' _class_localson_fn[2089432]))
      (2089446 '.=' _args_foron_fn[2089440] _0_tmp[2089435] call_tmp[1062117])
      wide-ref tmp[2089450]:channel(true,dynamic,false)[1060947] "temp"
      (2089454 'move' tmp[2089450](2089452 'set reference' lhs[1061862]))
      (2089456 '.=' _args_foron_fn[2089440] _1_lhs[2089437] tmp[2089450])
      val _args_vforon_fn[2089460]:c_void_ptr[149] "temp"
      (2089464 'move' _args_vforon_fn[2089460](2089462 'cast_to_void_star' _args_foron_fn[2089440]))
      val _args_sizeon_fn[2089466]:int(64)[13] "temp"
      (2089470 'move' _args_sizeon_fn[2089466](2089468 'sizeof_bundle' _class_localson_fn[2089432]))
      on(2089502 call wrapon_fn[2089472] call_tmp[1062117] _args_vforon_fn[2089460] _args_sizeon_fn[2089466] _args_foron_fn[2089440])
    }
    wide-ref call_tmp[2263454]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263456 'move' call_tmp[2263454](2263458 '.' lhs[1061862] home[1060935]))
    ref call_tmp[2263464]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263466 'move' call_tmp[2263464](2263468 '.' rhs[1061864] home[1060935]))
    wide-ref tmp[2415213]:locale[28] "temp"
    (2415216 'move' tmp[2415213] call_tmp[2263464])
    (1062168 call =[90631] call_tmp[2263454] tmp[2415213])
    const-val coerce_tmp[1062316]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415231]:qio_channel_ptr_t[231465] "temp"
    (1062320 'move' tmp[2415231](2369270 '.v' rhs[1061864] _channel_internal[1060940]))
    (2415234 'move' coerce_tmp[1062316] tmp[2415231])
    (2369264 '.=' lhs[1061862] _channel_internal[1060940] coerce_tmp[1062316])
    (1062192 return _void[55])
  }
  function =[1081592](wide-ref arg lhs[1081594]:channel(false,dynamic,false)[1080682], const  ref arg rhs[1081596]:channel(false,dynamic,false)[1080682]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378367]:string[26] "temp"
    (2378368 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2269939]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269941 'move' call_tmp[2269939](2269943 '.' rhs[1081596] home[1080670]))
    const-val call_tmp[1081805]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165737]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165739 'move' coerce_tmp[2165737](2165741 '.v' call_tmp[2269939] _instance[89975]))
    val coerce_tmp[2165744]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165746 'move' coerce_tmp[2165744](2165748 'cast' object[22] coerce_tmp[2165737]))
    const-val call_tmp[2165751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428659]:__wide_object[2381018] "temp"
    (2428662 'move' tmp[2428659] nil[44])
    (2165753 'move' call_tmp[2165751](2165755 'ptr_eq' coerce_tmp[2165744] tmp[2428659]))
    if call_tmp[2165751]
    {
      (2165761 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1081807 'move' call_tmp[1081805](1081809 '_wide_get_locale' coerce_tmp[2165737]))
    val rvfDerefTmp[2083902]:channel(false,dynamic,false)[1080682] "temp"
    (2083906 'move' rvfDerefTmp[2083902](2083904 'deref' rhs[1081596]))
    val isdirect[2090552]:bool[10] "temp"
    (2090557 'move' isdirect[2090552](2090554 call chpl_doDirectExecuteOn[187423] call_tmp[1081805]))
    if isdirect[2090552]
    {
      (2090561 call on_fn[1081818] rvfDerefTmp[2083902])
    }
    {
      val _args_foron_fn[2090576]:_class_localson_fn[2090568] "temp"
      (2090580 'move' _args_foron_fn[2090576](2090578 'stack allocate class' _class_localson_fn[2090568]))
      (2090582 '.=' _args_foron_fn[2090576] _0_tmp[2090571] call_tmp[1081805])
      (2090586 '.=' _args_foron_fn[2090576] _1_rvfDerefTmp[2090573] rvfDerefTmp[2083902])
      val _args_vforon_fn[2090590]:c_void_ptr[149] "temp"
      (2090594 'move' _args_vforon_fn[2090590](2090592 'cast_to_void_star' _args_foron_fn[2090576]))
      val _args_sizeon_fn[2090596]:int(64)[13] "temp"
      (2090600 'move' _args_sizeon_fn[2090596](2090598 'sizeof_bundle' _class_localson_fn[2090568]))
      on(2090632 call wrapon_fn[2090602] call_tmp[1081805] _args_vforon_fn[2090590] _args_sizeon_fn[2090596] _args_foron_fn[2090576])
    }
    wide-ref call_tmp[2269949]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269951 'move' call_tmp[2269949](2269953 '.' lhs[1081594] home[1080670]))
    const-val call_tmp[1081849]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165767]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165769 'move' coerce_tmp[2165767](2165771 '.v' call_tmp[2269949] _instance[89975]))
    val coerce_tmp[2165774]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165776 'move' coerce_tmp[2165774](2165778 'cast' object[22] coerce_tmp[2165767]))
    const-val call_tmp[2165781]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428665]:__wide_object[2381018] "temp"
    (2428668 'move' tmp[2428665] nil[44])
    (2165783 'move' call_tmp[2165781](2165785 'ptr_eq' coerce_tmp[2165774] tmp[2428665]))
    if call_tmp[2165781]
    {
      (2165791 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1081851 'move' call_tmp[1081849](1081853 '_wide_get_locale' coerce_tmp[2165767]))
    val isdirect[2090637]:bool[10] "temp"
    (2090642 'move' isdirect[2090637](2090639 call chpl_doDirectExecuteOn[187423] call_tmp[1081849]))
    if isdirect[2090637]
    {
      (2090646 call on_fn[1081862] lhs[1081594])
    }
    {
      val _args_foron_fn[2090661]:_class_localson_fn[2090653] "temp"
      (2090665 'move' _args_foron_fn[2090661](2090663 'stack allocate class' _class_localson_fn[2090653]))
      (2090667 '.=' _args_foron_fn[2090661] _0_tmp[2090656] call_tmp[1081849])
      wide-ref tmp[2090671]:channel(false,dynamic,false)[1080682] "temp"
      (2090675 'move' tmp[2090671](2090673 'set reference' lhs[1081594]))
      (2090677 '.=' _args_foron_fn[2090661] _1_lhs[2090658] tmp[2090671])
      val _args_vforon_fn[2090681]:c_void_ptr[149] "temp"
      (2090685 'move' _args_vforon_fn[2090681](2090683 'cast_to_void_star' _args_foron_fn[2090661]))
      val _args_sizeon_fn[2090687]:int(64)[13] "temp"
      (2090691 'move' _args_sizeon_fn[2090687](2090689 'sizeof_bundle' _class_localson_fn[2090653]))
      on(2090723 call wrapon_fn[2090693] call_tmp[1081849] _args_vforon_fn[2090681] _args_sizeon_fn[2090687] _args_foron_fn[2090661])
    }
    wide-ref call_tmp[2269959]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269961 'move' call_tmp[2269959](2269963 '.' lhs[1081594] home[1080670]))
    ref call_tmp[2269969]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269971 'move' call_tmp[2269969](2269973 '.' rhs[1081596] home[1080670]))
    wide-ref tmp[2415454]:locale[28] "temp"
    (2415457 'move' tmp[2415454] call_tmp[2269969])
    (1081900 call =[90631] call_tmp[2269959] tmp[2415454])
    const-val coerce_tmp[1082048]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415472]:qio_channel_ptr_t[231465] "temp"
    (1082052 'move' tmp[2415472](2369433 '.v' rhs[1081596] _channel_internal[1080675]))
    (2415475 'move' coerce_tmp[1082048] tmp[2415472])
    (2369427 '.=' lhs[1081594] _channel_internal[1080675] coerce_tmp[1082048])
    (1081924 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017871](ref arg this[1017877]:channel(false,dynamic,true)[985627]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2377872]:locale[28] "temp"
    (2377873 'move' local_nilLocale[2377872] nilLocale[89939])
    const-val call_tmp[2167603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167605]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167607 'move' call_tmp[2167605](2167610 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167613 'move' call_tmp[2167603] call_tmp[2167605])
    const-val call_tmp[2167616]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167618]:locale[28] "temp"
    wide-ref tmp[2428951]:chpl_localeID_t[209294] "temp"
    (2428955 'move' tmp[2428951](2428953 'set reference' call_tmp[2167603]))
    (2167621 call chpl_localeID_to_locale[92849] tmp[2428951] ret_tmp[2167618])
    (2167624 'move' call_tmp[2167616] ret_tmp[2167618])
    (1017943 '.=' this[1017877] home[985615] call_tmp[2167616])
    val tmp[1017948]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1017950 'move' tmp[1017948] QIO_CHANNEL_PTR_NULL[231468])
    (1017954 '.=' this[1017877] _channel_internal[985620] tmp[1017948])
    val tmp[1017959]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2414861]:locale[28] "temp"
    (2414865 'move' tmp[2414861](2414863 'set reference' tmp[1017959]))
    wide-ref tmp[2414868]:locale[28] "temp"
    (2414872 'move' tmp[2414868](2414870 'set reference' local_nilLocale[2377872]))
    (1017961 call init=[90167] tmp[2414861] tmp[2414868])
    (1017964 '.=' this[1017877] _readWriteThisFromLocale[985624] tmp[1017959])
    (1017969 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022907](ref arg this[1022913]:channel(true,dynamic,true)[1021825]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2377921]:locale[28] "temp"
    (2377922 'move' local_nilLocale[2377921] nilLocale[89939])
    const-val call_tmp[2167639]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167641]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167643 'move' call_tmp[2167641](2167646 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167649 'move' call_tmp[2167639] call_tmp[2167641])
    const-val call_tmp[2167652]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167654]:locale[28] "temp"
    wide-ref tmp[2428958]:chpl_localeID_t[209294] "temp"
    (2428962 'move' tmp[2428958](2428960 'set reference' call_tmp[2167639]))
    (2167657 call chpl_localeID_to_locale[92849] tmp[2428958] ret_tmp[2167654])
    (2167660 'move' call_tmp[2167652] ret_tmp[2167654])
    (1022979 '.=' this[1022913] home[1021813] call_tmp[2167652])
    val tmp[1022984]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1022986 'move' tmp[1022984] QIO_CHANNEL_PTR_NULL[231468])
    (1022990 '.=' this[1022913] _channel_internal[1021818] tmp[1022984])
    val tmp[1022995]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2415039]:locale[28] "temp"
    (2415043 'move' tmp[2415039](2415041 'set reference' tmp[1022995]))
    wide-ref tmp[2415046]:locale[28] "temp"
    (2415050 'move' tmp[2415046](2415048 'set reference' local_nilLocale[2377921]))
    (1022997 call init=[90167] tmp[2415039] tmp[2415046])
    (1023000 '.=' this[1022913] _readWriteThisFromLocale[1021822] tmp[1022995])
    (1023005 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061620](ref arg this[1061626]:channel(true,dynamic,false)[1060947]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2378101]:locale[28] "temp"
    (2378102 'move' local_nilLocale[2378101] nilLocale[89939])
    const-val call_tmp[2167675]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167677]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167679 'move' call_tmp[2167677](2167682 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167685 'move' call_tmp[2167675] call_tmp[2167677])
    const-val call_tmp[2167688]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167690]:locale[28] "temp"
    wide-ref tmp[2428965]:chpl_localeID_t[209294] "temp"
    (2428969 'move' tmp[2428965](2428967 'set reference' call_tmp[2167675]))
    (2167693 call chpl_localeID_to_locale[92849] tmp[2428965] ret_tmp[2167690])
    (2167696 'move' call_tmp[2167688] ret_tmp[2167690])
    (1061692 '.=' this[1061626] home[1060935] call_tmp[2167688])
    val tmp[1061697]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1061699 'move' tmp[1061697] QIO_CHANNEL_PTR_NULL[231468])
    (1061703 '.=' this[1061626] _channel_internal[1060940] tmp[1061697])
    val tmp[1061708]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2415193]:locale[28] "temp"
    (2415197 'move' tmp[2415193](2415195 'set reference' tmp[1061708]))
    wide-ref tmp[2415200]:locale[28] "temp"
    (2415204 'move' tmp[2415200](2415202 'set reference' local_nilLocale[2378101]))
    (1061710 call init=[90167] tmp[2415193] tmp[2415200])
    (1061713 '.=' this[1061626] _readWriteThisFromLocale[1060944] tmp[1061708])
    (1061718 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081352](ref arg this[1081358]:channel(false,dynamic,false)[1080682]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local_nilLocale[2378361]:locale[28] "temp"
    (2378362 'move' local_nilLocale[2378361] nilLocale[89939])
    const-val call_tmp[2167783]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167785]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167787 'move' call_tmp[2167785](2167790 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167793 'move' call_tmp[2167783] call_tmp[2167785])
    const-val call_tmp[2167796]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167798]:locale[28] "temp"
    wide-ref tmp[2428972]:chpl_localeID_t[209294] "temp"
    (2428976 'move' tmp[2428972](2428974 'set reference' call_tmp[2167783]))
    (2167801 call chpl_localeID_to_locale[92849] tmp[2428972] ret_tmp[2167798])
    (2167804 'move' call_tmp[2167796] ret_tmp[2167798])
    (1081424 '.=' this[1081358] home[1080670] call_tmp[2167796])
    val tmp[1081429]:qio_channel_ptr_t[231465] "dead after last mention" "temp"
    (1081431 'move' tmp[1081429] QIO_CHANNEL_PTR_NULL[231468])
    (1081435 '.=' this[1081358] _channel_internal[1080675] tmp[1081429])
    val tmp[1081440]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2415434]:locale[28] "temp"
    (2415438 'move' tmp[2415434](2415436 'set reference' tmp[1081440]))
    wide-ref tmp[2415441]:locale[28] "temp"
    (2415445 'move' tmp[2415441](2415443 'set reference' local_nilLocale[2378361]))
    (1081442 call init=[90167] tmp[2415434] tmp[2415441])
    (1081445 '.=' this[1081358] _readWriteThisFromLocale[1080679] tmp[1081440])
    (1081450 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1068388](ref arg this[1068394]:channel(true,dynamic,false)[1060947], const  ref arg home[1068402]:locale[28], const in arg _channel_internal[1068404]:qio_channel_ptr_t[231465], const  ref arg _readWriteThisFromLocale[1068406]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068454]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2415315]:locale[28] "temp"
    (2415319 'move' tmp[2415315](2415317 'set reference' tmp[1068454]))
    wide-ref tmp[2415322]:locale[28] "temp"
    (2415325 'move' tmp[2415322] home[1068402])
    (1068456 call init=[90167] tmp[2415315] tmp[2415322])
    (1068460 '.=' this[1068394] home[1060935] tmp[1068454])
    (1068471 '.=' this[1068394] _channel_internal[1060940] _channel_internal[1068404])
    val tmp[1068476]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2415328]:locale[28] "temp"
    (2415332 'move' tmp[2415328](2415330 'set reference' tmp[1068476]))
    wide-ref tmp[2415335]:locale[28] "temp"
    (2415338 'move' tmp[2415335] _readWriteThisFromLocale[1068406])
    (1068478 call init=[90167] tmp[2415328] tmp[2415335])
    (1068481 '.=' this[1068394] _readWriteThisFromLocale[1060944] tmp[1068476])
    (1068486 return _void[55])
  }
  function channel(false,dynamic,true)[985627].init[1017647](ref arg this[1017653]:channel(false,dynamic,true)[985627], const  ref arg f[1017661]:file[235580], ref arg error[1017663]:syserr[223584], const in arg hints[1017667]:int(32)[95], const in arg start[1017673]:int(64)[13], const in arg end[1017679]:int(64)[13], const in arg local_style[1017681]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2377866]:string[26] "temp"
    (2377867 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1017858]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017697 call init[1017871] this[1017653])
    ref call_tmp[2216341]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216343 'move' call_tmp[2216341](2216345 '.' f[1017661] home[235562]))
    const-val call_tmp[1017712]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165137]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165139 'move' coerce_tmp[2165137](2165141 '.v' call_tmp[2216341] _instance[89975]))
    val coerce_tmp[2165144]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165146 'move' coerce_tmp[2165144](2165148 'cast' object[22] coerce_tmp[2165137]))
    const-val call_tmp[2165151]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428545]:__wide_object[2381018] "temp"
    (2428548 'move' tmp[2428545] nil[44])
    (2165153 'move' call_tmp[2165151](2165155 'ptr_eq' coerce_tmp[2165144] tmp[2428545]))
    if call_tmp[2165151]
    {
      (2165161 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1017714 'move' call_tmp[1017712](1017716 '_wide_get_locale' coerce_tmp[2165137]))
    val rvfDerefTmp[2083518]:file[235580] "temp"
    (2083522 'move' rvfDerefTmp[2083518](2083520 'deref' f[1017661]))
    val isdirect[2087748]:bool[10] "temp"
    (2087753 'move' isdirect[2087748](2087750 call chpl_doDirectExecuteOn[187423] call_tmp[1017712]))
    if isdirect[2087748]
    {
      wide-ref tmp[2422279]:channel(false,dynamic,true)[985627] "temp"
      (2422282 'move' tmp[2422279] this[1017653])
      wide-ref tmp[2422285]:syserr[223584] "temp"
      (2422289 'move' tmp[2422285](2422287 'set reference' _formal_tmp_error[1017858]))
      (2087757 call on_fn[1017725] tmp[2422279] hints[1017667] local_style[1017681] end[1017679] start[1017673] rvfDerefTmp[2083518] tmp[2422285])
    }
    {
      val _args_foron_fn[2087790]:_class_localson_fn[2087770] "temp"
      (2087794 'move' _args_foron_fn[2087790](2087792 'stack allocate class' _class_localson_fn[2087770]))
      (2087796 '.=' _args_foron_fn[2087790] _0_tmp[2087773] call_tmp[1017712])
      ref tmp[2087800]:channel(false,dynamic,true)[985627] "temp"
      (2087804 'move' tmp[2087800](2087802 'set reference' this[1017653]))
      wide-ref tmp[2422292]:channel(false,dynamic,true)[985627] "temp"
      (2422295 'move' tmp[2422292] tmp[2087800])
      (2087806 '.=' _args_foron_fn[2087790] _1_this[2087775] tmp[2422292])
      (2087810 '.=' _args_foron_fn[2087790] _2_hints[2087777] hints[1017667])
      (2087814 '.=' _args_foron_fn[2087790] _3_rvfDerefTmp[2087779] local_style[1017681])
      (2087818 '.=' _args_foron_fn[2087790] _4_end[2087781] end[1017679])
      (2087822 '.=' _args_foron_fn[2087790] _5_start[2087783] start[1017673])
      (2087826 '.=' _args_foron_fn[2087790] _6_rvfDerefTmp[2087785] rvfDerefTmp[2083518])
      ref tmp[2087830]:syserr[223584] "temp"
      (2087834 'move' tmp[2087830](2087832 'set reference' _formal_tmp_error[1017858]))
      wide-ref tmp[2422298]:syserr[223584] "temp"
      (2422301 'move' tmp[2422298] tmp[2087830])
      (2087836 '.=' _args_foron_fn[2087790] _7__formal_tmp_error[2087787] tmp[2422298])
      val _args_vforon_fn[2087840]:c_void_ptr[149] "temp"
      (2087844 'move' _args_vforon_fn[2087840](2087842 'cast_to_void_star' _args_foron_fn[2087790]))
      val _args_sizeon_fn[2087846]:int(64)[13] "temp"
      (2087850 'move' _args_sizeon_fn[2087846](2087848 'sizeof_bundle' _class_localson_fn[2087770]))
      on(2087930 call wrapon_fn[2087852] call_tmp[1017712] _args_vforon_fn[2087840] _args_sizeon_fn[2087846] _args_foron_fn[2087790])
    }
    label _endinit[1017868]
    (1842798 '=' error[1017663] _formal_tmp_error[1017858])
    (1017855 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].init[1022683](ref arg this[1022689]:channel(true,dynamic,true)[1021825], const  ref arg f[1022697]:file[235580], ref arg error[1022699]:syserr[223584], const in arg hints[1022703]:int(32)[95], const in arg start[1022709]:int(64)[13], const in arg end[1022715]:int(64)[13], const in arg local_style[1022717]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2377915]:string[26] "temp"
    (2377916 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1022894]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022733 call init[1022907] this[1022689])
    ref call_tmp[2216387]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216389 'move' call_tmp[2216387](2216391 '.' f[1022697] home[235562]))
    const-val call_tmp[1022748]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165287]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165289 'move' coerce_tmp[2165287](2165291 '.v' call_tmp[2216387] _instance[89975]))
    val coerce_tmp[2165294]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165296 'move' coerce_tmp[2165294](2165298 'cast' object[22] coerce_tmp[2165287]))
    const-val call_tmp[2165301]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428575]:__wide_object[2381018] "temp"
    (2428578 'move' tmp[2428575] nil[44])
    (2165303 'move' call_tmp[2165301](2165305 'ptr_eq' coerce_tmp[2165294] tmp[2428575]))
    if call_tmp[2165301]
    {
      (2165311 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1022750 'move' call_tmp[1022748](1022752 '_wide_get_locale' coerce_tmp[2165287]))
    val rvfDerefTmp[2083582]:file[235580] "temp"
    (2083586 'move' rvfDerefTmp[2083582](2083584 'deref' f[1022697]))
    val isdirect[2088431]:bool[10] "temp"
    (2088436 'move' isdirect[2088431](2088433 call chpl_doDirectExecuteOn[187423] call_tmp[1022748]))
    if isdirect[2088431]
    {
      wide-ref tmp[2422421]:syserr[223584] "temp"
      (2422425 'move' tmp[2422421](2422423 'set reference' _formal_tmp_error[1022894]))
      wide-ref tmp[2422428]:channel(true,dynamic,true)[1021825] "temp"
      (2422431 'move' tmp[2422428] this[1022689])
      (2088440 call on_fn[1022761] rvfDerefTmp[2083582] tmp[2422421] end[1022715] tmp[2422428] hints[1022703] local_style[1022717] start[1022709])
    }
    {
      val _args_foron_fn[2088473]:_class_localson_fn[2088453] "temp"
      (2088477 'move' _args_foron_fn[2088473](2088475 'stack allocate class' _class_localson_fn[2088453]))
      (2088479 '.=' _args_foron_fn[2088473] _0_tmp[2088456] call_tmp[1022748])
      (2088483 '.=' _args_foron_fn[2088473] _1_rvfDerefTmp[2088458] rvfDerefTmp[2083582])
      ref tmp[2088487]:syserr[223584] "temp"
      (2088491 'move' tmp[2088487](2088489 'set reference' _formal_tmp_error[1022894]))
      wide-ref tmp[2422434]:syserr[223584] "temp"
      (2422437 'move' tmp[2422434] tmp[2088487])
      (2088493 '.=' _args_foron_fn[2088473] _2__formal_tmp_error[2088460] tmp[2422434])
      (2088497 '.=' _args_foron_fn[2088473] _3_end[2088462] end[1022715])
      ref tmp[2088501]:channel(true,dynamic,true)[1021825] "temp"
      (2088505 'move' tmp[2088501](2088503 'set reference' this[1022689]))
      wide-ref tmp[2422440]:channel(true,dynamic,true)[1021825] "temp"
      (2422443 'move' tmp[2422440] tmp[2088501])
      (2088507 '.=' _args_foron_fn[2088473] _4_this[2088464] tmp[2422440])
      (2088511 '.=' _args_foron_fn[2088473] _5_hints[2088466] hints[1022703])
      (2088515 '.=' _args_foron_fn[2088473] _6_rvfDerefTmp[2088468] local_style[1022717])
      (2088519 '.=' _args_foron_fn[2088473] _7_start[2088470] start[1022709])
      val _args_vforon_fn[2088523]:c_void_ptr[149] "temp"
      (2088527 'move' _args_vforon_fn[2088523](2088525 'cast_to_void_star' _args_foron_fn[2088473]))
      val _args_sizeon_fn[2088529]:int(64)[13] "temp"
      (2088533 'move' _args_sizeon_fn[2088529](2088531 'sizeof_bundle' _class_localson_fn[2088453]))
      on(2088613 call wrapon_fn[2088535] call_tmp[1022748] _args_vforon_fn[2088523] _args_sizeon_fn[2088529] _args_foron_fn[2088473])
    }
    label _endinit[1022904]
    (1842821 '=' error[1022699] _formal_tmp_error[1022894])
    (1022891 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].init[1061396](ref arg this[1061402]:channel(true,dynamic,false)[1060947], const  ref arg f[1061410]:file[235580], ref arg error[1061412]:syserr[223584], const in arg hints[1061416]:int(32)[95], const in arg start[1061422]:int(64)[13], const in arg end[1061428]:int(64)[13], const in arg local_style[1061430]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378095]:string[26] "temp"
    (2378096 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1061607]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061446 call init[1061620] this[1061402])
    ref call_tmp[2216433]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216435 'move' call_tmp[2216433](2216437 '.' f[1061410] home[235562]))
    const-val call_tmp[1061461]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165437]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165439 'move' coerce_tmp[2165437](2165441 '.v' call_tmp[2216433] _instance[89975]))
    val coerce_tmp[2165444]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165446 'move' coerce_tmp[2165444](2165448 'cast' object[22] coerce_tmp[2165437]))
    const-val call_tmp[2165451]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428605]:__wide_object[2381018] "temp"
    (2428608 'move' tmp[2428605] nil[44])
    (2165453 'move' call_tmp[2165451](2165455 'ptr_eq' coerce_tmp[2165444] tmp[2428605]))
    if call_tmp[2165451]
    {
      (2165461 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1061463 'move' call_tmp[1061461](1061465 '_wide_get_locale' coerce_tmp[2165437]))
    val rvfDerefTmp[2083703]:file[235580] "temp"
    (2083707 'move' rvfDerefTmp[2083703](2083705 'deref' f[1061410]))
    val isdirect[2089144]:bool[10] "temp"
    (2089149 'move' isdirect[2089144](2089146 call chpl_doDirectExecuteOn[187423] call_tmp[1061461]))
    if isdirect[2089144]
    {
      wide-ref tmp[2422588]:syserr[223584] "temp"
      (2422592 'move' tmp[2422588](2422590 'set reference' _formal_tmp_error[1061607]))
      wide-ref tmp[2422595]:channel(true,dynamic,false)[1060947] "temp"
      (2422598 'move' tmp[2422595] this[1061402])
      (2089153 call on_fn[1061474] tmp[2422588] end[1061428] hints[1061416] local_style[1061430] tmp[2422595] start[1061422] rvfDerefTmp[2083703])
    }
    {
      val _args_foron_fn[2089186]:_class_localson_fn[2089166] "temp"
      (2089190 'move' _args_foron_fn[2089186](2089188 'stack allocate class' _class_localson_fn[2089166]))
      (2089192 '.=' _args_foron_fn[2089186] _0_tmp[2089169] call_tmp[1061461])
      ref tmp[2089196]:syserr[223584] "temp"
      (2089200 'move' tmp[2089196](2089198 'set reference' _formal_tmp_error[1061607]))
      wide-ref tmp[2422601]:syserr[223584] "temp"
      (2422604 'move' tmp[2422601] tmp[2089196])
      (2089202 '.=' _args_foron_fn[2089186] _1__formal_tmp_error[2089171] tmp[2422601])
      (2089206 '.=' _args_foron_fn[2089186] _2_end[2089173] end[1061428])
      (2089210 '.=' _args_foron_fn[2089186] _3_hints[2089175] hints[1061416])
      (2089214 '.=' _args_foron_fn[2089186] _4_rvfDerefTmp[2089177] local_style[1061430])
      ref tmp[2089218]:channel(true,dynamic,false)[1060947] "temp"
      (2089222 'move' tmp[2089218](2089220 'set reference' this[1061402]))
      wide-ref tmp[2422607]:channel(true,dynamic,false)[1060947] "temp"
      (2422610 'move' tmp[2422607] tmp[2089218])
      (2089224 '.=' _args_foron_fn[2089186] _5_this[2089179] tmp[2422607])
      (2089228 '.=' _args_foron_fn[2089186] _6_start[2089181] start[1061422])
      (2089232 '.=' _args_foron_fn[2089186] _7_rvfDerefTmp[2089183] rvfDerefTmp[2083703])
      val _args_vforon_fn[2089236]:c_void_ptr[149] "temp"
      (2089240 'move' _args_vforon_fn[2089236](2089238 'cast_to_void_star' _args_foron_fn[2089186]))
      val _args_sizeon_fn[2089242]:int(64)[13] "temp"
      (2089246 'move' _args_sizeon_fn[2089242](2089244 'sizeof_bundle' _class_localson_fn[2089166]))
      on(2089326 call wrapon_fn[2089248] call_tmp[1061461] _args_vforon_fn[2089236] _args_sizeon_fn[2089242] _args_foron_fn[2089186])
    }
    label _endinit[1061617]
    (1844046 '=' error[1061412] _formal_tmp_error[1061607])
    (1061604 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].init[1081128](ref arg this[1081134]:channel(false,dynamic,false)[1080682], const  ref arg f[1081142]:file[235580], ref arg error[1081144]:syserr[223584], const in arg hints[1081148]:int(32)[95], const in arg start[1081154]:int(64)[13], const in arg end[1081160]:int(64)[13], const in arg local_style[1081162]:iostyle[231844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378355]:string[26] "temp"
    (2378356 'move' "argument to ! is nil" "argument to ! is nil")
    val _formal_tmp_error[1081339]:syserr[223584] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081178 call init[1081352] this[1081134])
    ref call_tmp[2216453]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216455 'move' call_tmp[2216453](2216457 '.' f[1081142] home[235562]))
    const-val call_tmp[1081193]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165707]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165709 'move' coerce_tmp[2165707](2165711 '.v' call_tmp[2216453] _instance[89975]))
    val coerce_tmp[2165714]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165716 'move' coerce_tmp[2165714](2165718 'cast' object[22] coerce_tmp[2165707]))
    const-val call_tmp[2165721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428653]:__wide_object[2381018] "temp"
    (2428656 'move' tmp[2428653] nil[44])
    (2165723 'move' call_tmp[2165721](2165725 'ptr_eq' coerce_tmp[2165714] tmp[2428653]))
    if call_tmp[2165721]
    {
      (2165731 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1081195 'move' call_tmp[1081193](1081197 '_wide_get_locale' coerce_tmp[2165707]))
    val rvfDerefTmp[2083881]:file[235580] "temp"
    (2083885 'move' rvfDerefTmp[2083881](2083883 'deref' f[1081142]))
    val isdirect[2090365]:bool[10] "temp"
    (2090370 'move' isdirect[2090365](2090367 call chpl_doDirectExecuteOn[187423] call_tmp[1081193]))
    if isdirect[2090365]
    {
      wide-ref tmp[2422844]:channel(false,dynamic,false)[1080682] "temp"
      (2422847 'move' tmp[2422844] this[1081134])
      wide-ref tmp[2422850]:syserr[223584] "temp"
      (2422854 'move' tmp[2422850](2422852 'set reference' _formal_tmp_error[1081339]))
      (2090374 call on_fn[1081206] end[1081160] hints[1081148] local_style[1081162] tmp[2422844] start[1081154] rvfDerefTmp[2083881] tmp[2422850])
    }
    {
      val _args_foron_fn[2090407]:_class_localson_fn[2090387] "temp"
      (2090411 'move' _args_foron_fn[2090407](2090409 'stack allocate class' _class_localson_fn[2090387]))
      (2090413 '.=' _args_foron_fn[2090407] _0_tmp[2090390] call_tmp[1081193])
      (2090417 '.=' _args_foron_fn[2090407] _1_end[2090392] end[1081160])
      (2090421 '.=' _args_foron_fn[2090407] _2_hints[2090394] hints[1081148])
      (2090425 '.=' _args_foron_fn[2090407] _3_rvfDerefTmp[2090396] local_style[1081162])
      ref tmp[2090429]:channel(false,dynamic,false)[1080682] "temp"
      (2090433 'move' tmp[2090429](2090431 'set reference' this[1081134]))
      wide-ref tmp[2422857]:channel(false,dynamic,false)[1080682] "temp"
      (2422860 'move' tmp[2422857] tmp[2090429])
      (2090435 '.=' _args_foron_fn[2090407] _4_this[2090398] tmp[2422857])
      (2090439 '.=' _args_foron_fn[2090407] _5_start[2090400] start[1081154])
      (2090443 '.=' _args_foron_fn[2090407] _6_rvfDerefTmp[2090402] rvfDerefTmp[2083881])
      ref tmp[2090447]:syserr[223584] "temp"
      (2090451 'move' tmp[2090447](2090449 'set reference' _formal_tmp_error[1081339]))
      wide-ref tmp[2422863]:syserr[223584] "temp"
      (2422866 'move' tmp[2422863] tmp[2090447])
      (2090453 '.=' _args_foron_fn[2090407] _7__formal_tmp_error[2090404] tmp[2422863])
      val _args_vforon_fn[2090457]:c_void_ptr[149] "temp"
      (2090461 'move' _args_vforon_fn[2090457](2090459 'cast_to_void_star' _args_foron_fn[2090407]))
      val _args_sizeon_fn[2090463]:int(64)[13] "temp"
      (2090467 'move' _args_sizeon_fn[2090463](2090465 'sizeof_bundle' _class_localson_fn[2090387]))
      on(2090547 call wrapon_fn[2090469] call_tmp[1081193] _args_vforon_fn[2090457] _args_sizeon_fn[2090463] _args_foron_fn[2090407])
    }
    label _endinit[1081349]
    (1844207 '=' error[1081144] _formal_tmp_error[1081339])
    (1081336 return _void[55])
  }
  function channel(false,dynamic,true)[985627].deinit[1471060](ref arg this[1471066]:channel(false,dynamic,true)[985627]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2380115]:string[26] "temp"
    (2380116 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2227032]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227034 'move' call_tmp[2227032](2227036 '.' this[1471066] home[985615]))
    const-val call_tmp[1471082]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166373]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166375 'move' coerce_tmp[2166373](2166377 '.v' call_tmp[2227032] _instance[89975]))
    val coerce_tmp[2166380]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166382 'move' coerce_tmp[2166380](2166384 'cast' object[22] coerce_tmp[2166373]))
    const-val call_tmp[2166387]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428731]:__wide_object[2381018] "temp"
    (2428734 'move' tmp[2428731] nil[44])
    (2166389 'move' call_tmp[2166387](2166391 'ptr_eq' coerce_tmp[2166380] tmp[2428731]))
    if call_tmp[2166387]
    {
      (2166397 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1471084 'move' call_tmp[1471082](1471086 '_wide_get_locale' coerce_tmp[2166373]))
    val isdirect[2097288]:bool[10] "temp"
    (2097293 'move' isdirect[2097288](2097290 call chpl_doDirectExecuteOn[187423] call_tmp[1471082]))
    if isdirect[2097288]
    {
      wide-ref tmp[2423502]:channel(false,dynamic,true)[985627] "temp"
      (2423505 'move' tmp[2423502] this[1471066])
      (2097297 call on_fn[1471095] tmp[2423502])
    }
    {
      val _args_foron_fn[2097312]:_class_localson_fn[2097304] "temp"
      (2097316 'move' _args_foron_fn[2097312](2097314 'stack allocate class' _class_localson_fn[2097304]))
      (2097318 '.=' _args_foron_fn[2097312] _0_tmp[2097307] call_tmp[1471082])
      ref tmp[2097322]:channel(false,dynamic,true)[985627] "temp"
      (2097326 'move' tmp[2097322](2097324 'set reference' this[1471066]))
      wide-ref tmp[2423508]:channel(false,dynamic,true)[985627] "temp"
      (2423511 'move' tmp[2423508] tmp[2097322])
      (2097328 '.=' _args_foron_fn[2097312] _1_this[2097309] tmp[2423508])
      val _args_vforon_fn[2097332]:c_void_ptr[149] "temp"
      (2097336 'move' _args_vforon_fn[2097332](2097334 'cast_to_void_star' _args_foron_fn[2097312]))
      val _args_sizeon_fn[2097338]:int(64)[13] "temp"
      (2097342 'move' _args_sizeon_fn[2097338](2097340 'sizeof_bundle' _class_localson_fn[2097304]))
      on(2097374 call wrapon_fn[2097344] call_tmp[1471082] _args_vforon_fn[2097332] _args_sizeon_fn[2097338] _args_foron_fn[2097312])
    }
    label _enddeinit[1815895]
    const-ref _field_destructor_tmp_[1815893]:locale[28] "temp"
    (1815900 'move' _field_destructor_tmp_[1815893](1815897 '.' this[1471066] _readWriteThisFromLocale[985624]))
    wide-ref tmp[2418823]:locale[28] "temp"
    (2418826 'move' tmp[2418823] _field_destructor_tmp_[1815893])
    (1815902 call deinit[90185] tmp[2418823])
    const-ref _field_destructor_tmp_[1815905]:locale[28] "temp"
    (1815910 'move' _field_destructor_tmp_[1815905](1815907 '.' this[1471066] home[985615]))
    wide-ref tmp[2418829]:locale[28] "temp"
    (2418832 'move' tmp[2418829] _field_destructor_tmp_[1815905])
    (1815912 call deinit[90185] tmp[2418829])
    (1471129 return _void[55])
  }
  function channel(true,dynamic,true)[1021825].deinit[1534039](ref arg this[1534045]:channel(true,dynamic,true)[1021825]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2380121]:string[26] "temp"
    (2380122 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2228123]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228125 'move' call_tmp[2228123](2228127 '.' this[1534045] home[1021813]))
    const-val call_tmp[1534061]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166403]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166405 'move' coerce_tmp[2166403](2166407 '.v' call_tmp[2228123] _instance[89975]))
    val coerce_tmp[2166410]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166412 'move' coerce_tmp[2166410](2166414 'cast' object[22] coerce_tmp[2166403]))
    const-val call_tmp[2166417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428737]:__wide_object[2381018] "temp"
    (2428740 'move' tmp[2428737] nil[44])
    (2166419 'move' call_tmp[2166417](2166421 'ptr_eq' coerce_tmp[2166410] tmp[2428737]))
    if call_tmp[2166417]
    {
      (2166427 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1534063 'move' call_tmp[1534061](1534065 '_wide_get_locale' coerce_tmp[2166403]))
    val isdirect[2099079]:bool[10] "temp"
    (2099084 'move' isdirect[2099079](2099081 call chpl_doDirectExecuteOn[187423] call_tmp[1534061]))
    if isdirect[2099079]
    {
      wide-ref tmp[2423514]:channel(true,dynamic,true)[1021825] "temp"
      (2423517 'move' tmp[2423514] this[1534045])
      (2099088 call on_fn[1534074] tmp[2423514])
    }
    {
      val _args_foron_fn[2099103]:_class_localson_fn[2099095] "temp"
      (2099107 'move' _args_foron_fn[2099103](2099105 'stack allocate class' _class_localson_fn[2099095]))
      (2099109 '.=' _args_foron_fn[2099103] _0_tmp[2099098] call_tmp[1534061])
      ref tmp[2099113]:channel(true,dynamic,true)[1021825] "temp"
      (2099117 'move' tmp[2099113](2099115 'set reference' this[1534045]))
      wide-ref tmp[2423520]:channel(true,dynamic,true)[1021825] "temp"
      (2423523 'move' tmp[2423520] tmp[2099113])
      (2099119 '.=' _args_foron_fn[2099103] _1_this[2099100] tmp[2423520])
      val _args_vforon_fn[2099123]:c_void_ptr[149] "temp"
      (2099127 'move' _args_vforon_fn[2099123](2099125 'cast_to_void_star' _args_foron_fn[2099103]))
      val _args_sizeon_fn[2099129]:int(64)[13] "temp"
      (2099133 'move' _args_sizeon_fn[2099129](2099131 'sizeof_bundle' _class_localson_fn[2099095]))
      on(2099165 call wrapon_fn[2099135] call_tmp[1534061] _args_vforon_fn[2099123] _args_sizeon_fn[2099129] _args_foron_fn[2099103])
    }
    label _enddeinit[1815917]
    const-ref _field_destructor_tmp_[1815915]:locale[28] "temp"
    (1815922 'move' _field_destructor_tmp_[1815915](1815919 '.' this[1534045] _readWriteThisFromLocale[1021822]))
    wide-ref tmp[2418835]:locale[28] "temp"
    (2418838 'move' tmp[2418835] _field_destructor_tmp_[1815915])
    (1815924 call deinit[90185] tmp[2418835])
    const-ref _field_destructor_tmp_[1815927]:locale[28] "temp"
    (1815932 'move' _field_destructor_tmp_[1815927](1815929 '.' this[1534045] home[1021813]))
    wide-ref tmp[2418841]:locale[28] "temp"
    (2418844 'move' tmp[2418841] _field_destructor_tmp_[1815927])
    (1815934 call deinit[90185] tmp[2418841])
    (1534108 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].deinit[1536215](ref arg this[1536221]:channel(true,dynamic,false)[1060947]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2380127]:string[26] "temp"
    (2380128 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2263594]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263596 'move' call_tmp[2263594](2263598 '.' this[1536221] home[1060935]))
    const-val call_tmp[1536237]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166433]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166435 'move' coerce_tmp[2166433](2166437 '.v' call_tmp[2263594] _instance[89975]))
    val coerce_tmp[2166440]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166442 'move' coerce_tmp[2166440](2166444 'cast' object[22] coerce_tmp[2166433]))
    const-val call_tmp[2166447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428743]:__wide_object[2381018] "temp"
    (2428746 'move' tmp[2428743] nil[44])
    (2166449 'move' call_tmp[2166447](2166451 'ptr_eq' coerce_tmp[2166440] tmp[2428743]))
    if call_tmp[2166447]
    {
      (2166457 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1536239 'move' call_tmp[1536237](1536241 '_wide_get_locale' coerce_tmp[2166433]))
    val isdirect[2099255]:bool[10] "temp"
    (2099260 'move' isdirect[2099255](2099257 call chpl_doDirectExecuteOn[187423] call_tmp[1536237]))
    if isdirect[2099255]
    {
      wide-ref tmp[2423526]:channel(true,dynamic,false)[1060947] "temp"
      (2423529 'move' tmp[2423526] this[1536221])
      (2099264 call on_fn[1536250] tmp[2423526])
    }
    {
      val _args_foron_fn[2099279]:_class_localson_fn[2099271] "temp"
      (2099283 'move' _args_foron_fn[2099279](2099281 'stack allocate class' _class_localson_fn[2099271]))
      (2099285 '.=' _args_foron_fn[2099279] _0_tmp[2099274] call_tmp[1536237])
      ref tmp[2099289]:channel(true,dynamic,false)[1060947] "temp"
      (2099293 'move' tmp[2099289](2099291 'set reference' this[1536221]))
      wide-ref tmp[2423532]:channel(true,dynamic,false)[1060947] "temp"
      (2423535 'move' tmp[2423532] tmp[2099289])
      (2099295 '.=' _args_foron_fn[2099279] _1_this[2099276] tmp[2423532])
      val _args_vforon_fn[2099299]:c_void_ptr[149] "temp"
      (2099303 'move' _args_vforon_fn[2099299](2099301 'cast_to_void_star' _args_foron_fn[2099279]))
      val _args_sizeon_fn[2099305]:int(64)[13] "temp"
      (2099309 'move' _args_sizeon_fn[2099305](2099307 'sizeof_bundle' _class_localson_fn[2099271]))
      on(2099341 call wrapon_fn[2099311] call_tmp[1536237] _args_vforon_fn[2099299] _args_sizeon_fn[2099305] _args_foron_fn[2099279])
    }
    label _enddeinit[1815951]
    const-ref _field_destructor_tmp_[1815949]:locale[28] "temp"
    (1815956 'move' _field_destructor_tmp_[1815949](1815953 '.' this[1536221] _readWriteThisFromLocale[1060944]))
    wide-ref tmp[2418847]:locale[28] "temp"
    (2418850 'move' tmp[2418847] _field_destructor_tmp_[1815949])
    (1815958 call deinit[90185] tmp[2418847])
    const-ref _field_destructor_tmp_[1815961]:locale[28] "temp"
    (1815966 'move' _field_destructor_tmp_[1815961](1815963 '.' this[1536221] home[1060935]))
    wide-ref tmp[2418853]:locale[28] "temp"
    (2418856 'move' tmp[2418853] _field_destructor_tmp_[1815961])
    (1815968 call deinit[90185] tmp[2418853])
    (1536284 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].deinit[1540469](ref arg this[1540475]:channel(false,dynamic,false)[1080682]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2380133]:string[26] "temp"
    (2380134 'move' "argument to ! is nil" "argument to ! is nil")
    ref call_tmp[2270009]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270011 'move' call_tmp[2270009](2270013 '.' this[1540475] home[1080670]))
    const-val call_tmp[1540491]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166463]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166465 'move' coerce_tmp[2166463](2166467 '.v' call_tmp[2270009] _instance[89975]))
    val coerce_tmp[2166470]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166472 'move' coerce_tmp[2166470](2166474 'cast' object[22] coerce_tmp[2166463]))
    const-val call_tmp[2166477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428749]:__wide_object[2381018] "temp"
    (2428752 'move' tmp[2428749] nil[44])
    (2166479 'move' call_tmp[2166477](2166481 'ptr_eq' coerce_tmp[2166470] tmp[2428749]))
    if call_tmp[2166477]
    {
      (2166487 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1540493 'move' call_tmp[1540491](1540495 '_wide_get_locale' coerce_tmp[2166463]))
    val isdirect[2099516]:bool[10] "temp"
    (2099521 'move' isdirect[2099516](2099518 call chpl_doDirectExecuteOn[187423] call_tmp[1540491]))
    if isdirect[2099516]
    {
      wide-ref tmp[2423538]:channel(false,dynamic,false)[1080682] "temp"
      (2423541 'move' tmp[2423538] this[1540475])
      (2099525 call on_fn[1540504] tmp[2423538])
    }
    {
      val _args_foron_fn[2099540]:_class_localson_fn[2099532] "temp"
      (2099544 'move' _args_foron_fn[2099540](2099542 'stack allocate class' _class_localson_fn[2099532]))
      (2099546 '.=' _args_foron_fn[2099540] _0_tmp[2099535] call_tmp[1540491])
      ref tmp[2099550]:channel(false,dynamic,false)[1080682] "temp"
      (2099554 'move' tmp[2099550](2099552 'set reference' this[1540475]))
      wide-ref tmp[2423544]:channel(false,dynamic,false)[1080682] "temp"
      (2423547 'move' tmp[2423544] tmp[2099550])
      (2099556 '.=' _args_foron_fn[2099540] _1_this[2099537] tmp[2423544])
      val _args_vforon_fn[2099560]:c_void_ptr[149] "temp"
      (2099564 'move' _args_vforon_fn[2099560](2099562 'cast_to_void_star' _args_foron_fn[2099540]))
      val _args_sizeon_fn[2099566]:int(64)[13] "temp"
      (2099570 'move' _args_sizeon_fn[2099566](2099568 'sizeof_bundle' _class_localson_fn[2099532]))
      on(2099602 call wrapon_fn[2099572] call_tmp[1540491] _args_vforon_fn[2099560] _args_sizeon_fn[2099566] _args_foron_fn[2099540])
    }
    label _enddeinit[1815973]
    const-ref _field_destructor_tmp_[1815971]:locale[28] "temp"
    (1815978 'move' _field_destructor_tmp_[1815971](1815975 '.' this[1540475] _readWriteThisFromLocale[1080679]))
    wide-ref tmp[2418859]:locale[28] "temp"
    (2418862 'move' tmp[2418859] _field_destructor_tmp_[1815971])
    (1815980 call deinit[90185] tmp[2418859])
    const-ref _field_destructor_tmp_[1815983]:locale[28] "temp"
    (1815988 'move' _field_destructor_tmp_[1815983](1815985 '.' this[1540475] home[1080670]))
    wide-ref tmp[2418865]:locale[28] "temp"
    (2418868 'move' tmp[2418865] _field_destructor_tmp_[1815983])
    (1815990 call deinit[90185] tmp[2418865])
    (1540538 return _void[55])
  }
  function ioNewline[238701].init[893669](ref arg this[893672]:ioNewline[238701], in arg skipWhitespaceOnly[893675]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893691 '.=' this[893672] skipWhitespaceOnly[238682] skipWhitespaceOnly[893675])
    (893695 return _void[55])
  }
  type ioNewline[238701] val skipWhitespaceOnly[238682]:bool[10]
  function ioLiteral[238753].init[894798](ref arg this[894801]:ioLiteral[238753], const  ref arg val[894804]:string[26], in arg ignoreWhiteSpace[894817]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_val[1408295]:string[26] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1408298 'move' _formal_tmp_val[1408295] val[894804])
    (894833 '.=' this[894801] val[238728] _formal_tmp_val[1408295])
    (894836 '.=' this[894801] ignoreWhiteSpace[238734] ignoreWhiteSpace[894817])
    (894840 return _void[55])
  }
  type ioLiteral[238753] val val[238728]:string[26] val ignoreWhiteSpace[238734]:bool[10]
  function channel(true,dynamic,false)[1060947]._ch_ioerror[1062865](const  wide-ref arg this[1062871]:channel(true,dynamic,false)[1060947], const in arg error[1062873]:syserr[223584], const  ref arg msg[1062875]:string[26], ref arg error_out[1809879]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378139]:string[26] "temp"
    (2378140 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2955[2378133]:string[26] "temp"
    (2378134 'move' "unknown" "unknown")
    val path[1062881]:string[26] "dead at end of block" "insert auto destroy"
    (1062883 'move' path[1062881] "unknown")
    val offset[1062902]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062904 'move' offset[1062902] -1)
    wide-ref call_tmp[2263484]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263486 'move' call_tmp[2263484](2263488 '.' this[1062871] home[1060935]))
    const-val call_tmp[1062919]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165557]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165559 'move' coerce_tmp[2165557](2165561 '.v' call_tmp[2263484] _instance[89975]))
    val coerce_tmp[2165564]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165566 'move' coerce_tmp[2165564](2165568 'cast' object[22] coerce_tmp[2165557]))
    const-val call_tmp[2165571]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428629]:__wide_object[2381018] "temp"
    (2428632 'move' tmp[2428629] nil[44])
    (2165573 'move' call_tmp[2165571](2165575 'ptr_eq' coerce_tmp[2165564] tmp[2428629]))
    if call_tmp[2165571]
    {
      (2165581 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062921 'move' call_tmp[1062919](1062923 '_wide_get_locale' coerce_tmp[2165557]))
    val error[1809884]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1809886 'move' error[1809884] nil[44])
    val isdirect[2089613]:bool[10] "temp"
    (2089618 'move' isdirect[2089613](2089615 call chpl_doDirectExecuteOn[187423] call_tmp[1062919]))
    if isdirect[2089613]
    {
      wide-ref tmp[2422668]:string[26] "temp"
      (2422672 'move' tmp[2422668](2422670 'set reference' path[1062881]))
      wide-ref tmp[2422675]:int(64)[13] "temp"
      (2422679 'move' tmp[2422675](2422677 'set reference' offset[1062902]))
      wide-ref tmp[2422682]:__wide_Error[2381123] "temp"
      (2422686 'move' tmp[2422682](2422684 'set reference' error[1809884]))
      (2089622 call on_fn[1062932] this[1062871] tmp[2422668] tmp[2422675] tmp[2422682])
    }
    {
      val _args_foron_fn[2089646]:_class_localson_fn[2089632] "temp"
      (2089650 'move' _args_foron_fn[2089646](2089648 'stack allocate class' _class_localson_fn[2089632]))
      (2089652 '.=' _args_foron_fn[2089646] _0_tmp[2089635] call_tmp[1062919])
      wide-ref tmp[2089656]:channel(true,dynamic,false)[1060947] "temp"
      (2089660 'move' tmp[2089656](2089658 'set reference' this[1062871]))
      (2089662 '.=' _args_foron_fn[2089646] _1_this[2089637] tmp[2089656])
      ref tmp[2089666]:string[26] "temp"
      (2089670 'move' tmp[2089666](2089668 'set reference' path[1062881]))
      wide-ref tmp[2422689]:string[26] "temp"
      (2422692 'move' tmp[2422689] tmp[2089666])
      (2089672 '.=' _args_foron_fn[2089646] _2_path[2089639] tmp[2422689])
      ref tmp[2089676]:int(64)[13] "temp"
      (2089680 'move' tmp[2089676](2089678 'set reference' offset[1062902]))
      wide-ref tmp[2422695]:int(64)[13] "temp"
      (2422698 'move' tmp[2422695] tmp[2089676])
      (2089682 '.=' _args_foron_fn[2089646] _3_offset[2089641] tmp[2422695])
      ref tmp[2089686]:__wide_Error[2381123] "temp"
      (2089690 'move' tmp[2089686](2089688 'set reference' error[1809884]))
      wide-ref tmp[2422701]:__wide_Error[2381123] "temp"
      (2422704 'move' tmp[2422701] tmp[2089686])
      (2089692 '.=' _args_foron_fn[2089646] _4_error[2089643] tmp[2422701])
      val _args_vforon_fn[2089696]:c_void_ptr[149] "temp"
      (2089700 'move' _args_vforon_fn[2089696](2089698 'cast_to_void_star' _args_foron_fn[2089646]))
      val _args_sizeon_fn[2089702]:int(64)[13] "temp"
      (2089706 'move' _args_sizeon_fn[2089702](2089704 'sizeof_bundle' _class_localson_fn[2089632]))
      on(2089762 call wrapon_fn[2089708] call_tmp[1062919] _args_vforon_fn[2089696] _args_sizeon_fn[2089702] _args_foron_fn[2089646])
    }
    val errorExists[2108784]:bool[10] "temp"
    (2108789 'move' errorExists[2108784](2108786 '!=' error[1809884] nil[44]))
    if errorExists[2108784]
    {
      (1809890 '=' error_out[1809879] error[1809884])
      ref i_x[2130873]:string[26] "temp"
      (2130877 'move' i_x[2130873](2130875 'set reference' path[1062881]))
      wide-ref tmp[2425416]:string[26] "temp"
      (2425419 'move' tmp[2425416] i_x[2130873])
      (2130881 call deinit[30831] tmp[2425416])
      gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
    }
    val error[1809898]:__wide_Error[2381123] "error variable" "temp"
    (1809907 'move' error[1809898] nil[44])
    ref tmp[2415262]:__wide_Error[2381123] "temp"
    (2415266 'move' tmp[2415262](2415264 'set reference' error[1809898]))
    (1063055 call ioerror[266141] error[1062873] msg[1062875] path[1062881] offset[1062902] tmp[2415262])
    val errorExists[2108792]:bool[10] "temp"
    (2108797 'move' errorExists[2108792](2108794 '!=' error[1809898] nil[44]))
    if errorExists[2108792]
    {
      gotoErrorHandling handler[1809899] handler[1809899]
    }
    label handler[1809899]
    val errorExists[2108800]:bool[10] "temp"
    (2108805 'move' errorExists[2108800](2108802 '!=' error[1809898] nil[44]))
    if errorExists[2108800]
    {
      (1809914 '=' error_out[1809879] error[1809898])
      ref i_x[2130885]:string[26] "temp"
      (2130889 'move' i_x[2130885](2130887 'set reference' path[1062881]))
      wide-ref tmp[2425422]:string[26] "temp"
      (2425425 'move' tmp[2425422] i_x[2130885])
      (2130893 call deinit[30831] tmp[2425422])
      gotoErrorHandlingReturn _end_ch_ioerror[1809881] _end_ch_ioerror[1809881]
    }
    ref i_x[2130897]:string[26] "temp"
    (2130901 'move' i_x[2130897](2130899 'set reference' path[1062881]))
    wide-ref tmp[2425428]:string[26] "temp"
    (2425431 'move' tmp[2425428] i_x[2130897])
    (2130905 call deinit[30831] tmp[2425428])
    label _end_ch_ioerror[1809881]
    (1063064 return _void[55])
  }
  function channel(false,dynamic,false)[1080682]._ch_ioerror[1082549](const  ref arg this[1082555]:channel(false,dynamic,false)[1080682], const in arg error[1082557]:syserr[223584], const  ref arg msg[1082559]:string[26], ref arg error_out[1810675]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378399]:string[26] "temp"
    (2378400 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2955[2378393]:string[26] "temp"
    (2378394 'move' "unknown" "unknown")
    val path[1082565]:string[26] "dead at end of block" "insert auto destroy"
    (1082567 'move' path[1082565] "unknown")
    val offset[1082586]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082588 'move' offset[1082586] -1)
    ref call_tmp[2269989]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269991 'move' call_tmp[2269989](2269993 '.' this[1082555] home[1080670]))
    const-val call_tmp[1082603]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165827]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165829 'move' coerce_tmp[2165827](2165831 '.v' call_tmp[2269989] _instance[89975]))
    val coerce_tmp[2165834]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165836 'move' coerce_tmp[2165834](2165838 'cast' object[22] coerce_tmp[2165827]))
    const-val call_tmp[2165841]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428677]:__wide_object[2381018] "temp"
    (2428680 'move' tmp[2428677] nil[44])
    (2165843 'move' call_tmp[2165841](2165845 'ptr_eq' coerce_tmp[2165834] tmp[2428677]))
    if call_tmp[2165841]
    {
      (2165851 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082605 'move' call_tmp[1082603](1082607 '_wide_get_locale' coerce_tmp[2165827]))
    val error[1810680]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1810682 'move' error[1810680] nil[44])
    val rvfDerefTmp[2083930]:channel(false,dynamic,false)[1080682] "temp"
    (2083934 'move' rvfDerefTmp[2083930](2083932 'deref' this[1082555]))
    val isdirect[2090834]:bool[10] "temp"
    (2090839 'move' isdirect[2090834](2090836 call chpl_doDirectExecuteOn[187423] call_tmp[1082603]))
    if isdirect[2090834]
    {
      wide-ref tmp[2422924]:string[26] "temp"
      (2422928 'move' tmp[2422924](2422926 'set reference' path[1082565]))
      wide-ref tmp[2422931]:int(64)[13] "temp"
      (2422935 'move' tmp[2422931](2422933 'set reference' offset[1082586]))
      wide-ref tmp[2422938]:__wide_Error[2381123] "temp"
      (2422942 'move' tmp[2422938](2422940 'set reference' error[1810680]))
      (2090843 call on_fn[1082616] rvfDerefTmp[2083930] tmp[2422924] tmp[2422931] tmp[2422938])
    }
    {
      val _args_foron_fn[2090867]:_class_localson_fn[2090853] "temp"
      (2090871 'move' _args_foron_fn[2090867](2090869 'stack allocate class' _class_localson_fn[2090853]))
      (2090873 '.=' _args_foron_fn[2090867] _0_tmp[2090856] call_tmp[1082603])
      (2090877 '.=' _args_foron_fn[2090867] _1_rvfDerefTmp[2090858] rvfDerefTmp[2083930])
      ref tmp[2090881]:string[26] "temp"
      (2090885 'move' tmp[2090881](2090883 'set reference' path[1082565]))
      wide-ref tmp[2422945]:string[26] "temp"
      (2422948 'move' tmp[2422945] tmp[2090881])
      (2090887 '.=' _args_foron_fn[2090867] _2_path[2090860] tmp[2422945])
      ref tmp[2090891]:int(64)[13] "temp"
      (2090895 'move' tmp[2090891](2090893 'set reference' offset[1082586]))
      wide-ref tmp[2422951]:int(64)[13] "temp"
      (2422954 'move' tmp[2422951] tmp[2090891])
      (2090897 '.=' _args_foron_fn[2090867] _3_offset[2090862] tmp[2422951])
      ref tmp[2090901]:__wide_Error[2381123] "temp"
      (2090905 'move' tmp[2090901](2090903 'set reference' error[1810680]))
      wide-ref tmp[2422957]:__wide_Error[2381123] "temp"
      (2422960 'move' tmp[2422957] tmp[2090901])
      (2090907 '.=' _args_foron_fn[2090867] _4_error[2090864] tmp[2422957])
      val _args_vforon_fn[2090911]:c_void_ptr[149] "temp"
      (2090915 'move' _args_vforon_fn[2090911](2090913 'cast_to_void_star' _args_foron_fn[2090867]))
      val _args_sizeon_fn[2090917]:int(64)[13] "temp"
      (2090921 'move' _args_sizeon_fn[2090917](2090919 'sizeof_bundle' _class_localson_fn[2090853]))
      on(2090977 call wrapon_fn[2090923] call_tmp[1082603] _args_vforon_fn[2090911] _args_sizeon_fn[2090917] _args_foron_fn[2090867])
    }
    val errorExists[2109144]:bool[10] "temp"
    (2109149 'move' errorExists[2109144](2109146 '!=' error[1810680] nil[44]))
    if errorExists[2109144]
    {
      (1810686 '=' error_out[1810675] error[1810680])
      ref i_x[2131113]:string[26] "temp"
      (2131117 'move' i_x[2131113](2131115 'set reference' path[1082565]))
      wide-ref tmp[2425512]:string[26] "temp"
      (2425515 'move' tmp[2425512] i_x[2131113])
      (2131121 call deinit[30831] tmp[2425512])
      gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
    }
    val error[1810694]:__wide_Error[2381123] "error variable" "temp"
    (1810703 'move' error[1810694] nil[44])
    ref tmp[2415497]:__wide_Error[2381123] "temp"
    (2415501 'move' tmp[2415497](2415499 'set reference' error[1810694]))
    (1082739 call ioerror[266141] error[1082557] msg[1082559] path[1082565] offset[1082586] tmp[2415497])
    val errorExists[2109152]:bool[10] "temp"
    (2109157 'move' errorExists[2109152](2109154 '!=' error[1810694] nil[44]))
    if errorExists[2109152]
    {
      gotoErrorHandling handler[1810695] handler[1810695]
    }
    label handler[1810695]
    val errorExists[2109160]:bool[10] "temp"
    (2109165 'move' errorExists[2109160](2109162 '!=' error[1810694] nil[44]))
    if errorExists[2109160]
    {
      (1810710 '=' error_out[1810675] error[1810694])
      ref i_x[2131125]:string[26] "temp"
      (2131129 'move' i_x[2131125](2131127 'set reference' path[1082565]))
      wide-ref tmp[2425518]:string[26] "temp"
      (2425521 'move' tmp[2425518] i_x[2131125])
      (2131133 call deinit[30831] tmp[2425518])
      gotoErrorHandlingReturn _end_ch_ioerror[1810677] _end_ch_ioerror[1810677]
    }
    ref i_x[2131137]:string[26] "temp"
    (2131141 'move' i_x[2131137](2131139 'set reference' path[1082565]))
    wide-ref tmp[2425524]:string[26] "temp"
    (2425527 'move' tmp[2425524] i_x[2131137])
    (2131145 call deinit[30831] tmp[2425524])
    label _end_ch_ioerror[1810677]
    (1082748 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._ch_ioerror[1393261](const  ref arg this[1393267]:channel(true,dynamic,true)[1021825], const in arg error[1393269]:syserr[223584], const  ref arg msg[1393271]:string[26], ref arg error_out[1812507]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2379602]:string[26] "temp"
    (2379603 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_2955[2379596]:string[26] "temp"
    (2379597 'move' "unknown" "unknown")
    val path[1393277]:string[26] "dead at end of block" "insert auto destroy"
    (1393279 'move' path[1393277] "unknown")
    val offset[1393298]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1393300 'move' offset[1393298] -1)
    ref call_tmp[2228093]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228095 'move' call_tmp[2228093](2228097 '.' this[1393267] home[1021813]))
    const-val call_tmp[1393315]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166073]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166075 'move' coerce_tmp[2166073](2166077 '.v' call_tmp[2228093] _instance[89975]))
    val coerce_tmp[2166080]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166082 'move' coerce_tmp[2166080](2166084 'cast' object[22] coerce_tmp[2166073]))
    const-val call_tmp[2166087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428689]:__wide_object[2381018] "temp"
    (2428692 'move' tmp[2428689] nil[44])
    (2166089 'move' call_tmp[2166087](2166091 'ptr_eq' coerce_tmp[2166080] tmp[2428689]))
    if call_tmp[2166087]
    {
      (2166097 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1393317 'move' call_tmp[1393315](1393319 '_wide_get_locale' coerce_tmp[2166073]))
    val error[1812512]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1812514 'move' error[1812512] nil[44])
    val rvfDerefTmp[2084359]:channel(true,dynamic,true)[1021825] "temp"
    (2084363 'move' rvfDerefTmp[2084359](2084361 'deref' this[1393267]))
    val isdirect[2094336]:bool[10] "temp"
    (2094341 'move' isdirect[2094336](2094338 call chpl_doDirectExecuteOn[187423] call_tmp[1393315]))
    if isdirect[2094336]
    {
      wide-ref tmp[2423187]:string[26] "temp"
      (2423191 'move' tmp[2423187](2423189 'set reference' path[1393277]))
      wide-ref tmp[2423194]:int(64)[13] "temp"
      (2423198 'move' tmp[2423194](2423196 'set reference' offset[1393298]))
      wide-ref tmp[2423201]:__wide_Error[2381123] "temp"
      (2423205 'move' tmp[2423201](2423203 'set reference' error[1812512]))
      (2094345 call on_fn[1393328] rvfDerefTmp[2084359] tmp[2423187] tmp[2423194] tmp[2423201])
    }
    {
      val _args_foron_fn[2094369]:_class_localson_fn[2094355] "temp"
      (2094373 'move' _args_foron_fn[2094369](2094371 'stack allocate class' _class_localson_fn[2094355]))
      (2094375 '.=' _args_foron_fn[2094369] _0_tmp[2094358] call_tmp[1393315])
      (2094379 '.=' _args_foron_fn[2094369] _1_rvfDerefTmp[2094360] rvfDerefTmp[2084359])
      ref tmp[2094383]:string[26] "temp"
      (2094387 'move' tmp[2094383](2094385 'set reference' path[1393277]))
      wide-ref tmp[2423208]:string[26] "temp"
      (2423211 'move' tmp[2423208] tmp[2094383])
      (2094389 '.=' _args_foron_fn[2094369] _2_path[2094362] tmp[2423208])
      ref tmp[2094393]:int(64)[13] "temp"
      (2094397 'move' tmp[2094393](2094395 'set reference' offset[1393298]))
      wide-ref tmp[2423214]:int(64)[13] "temp"
      (2423217 'move' tmp[2423214] tmp[2094393])
      (2094399 '.=' _args_foron_fn[2094369] _3_offset[2094364] tmp[2423214])
      ref tmp[2094403]:__wide_Error[2381123] "temp"
      (2094407 'move' tmp[2094403](2094405 'set reference' error[1812512]))
      wide-ref tmp[2423220]:__wide_Error[2381123] "temp"
      (2423223 'move' tmp[2423220] tmp[2094403])
      (2094409 '.=' _args_foron_fn[2094369] _4_error[2094366] tmp[2423220])
      val _args_vforon_fn[2094413]:c_void_ptr[149] "temp"
      (2094417 'move' _args_vforon_fn[2094413](2094415 'cast_to_void_star' _args_foron_fn[2094369]))
      val _args_sizeon_fn[2094419]:int(64)[13] "temp"
      (2094423 'move' _args_sizeon_fn[2094419](2094421 'sizeof_bundle' _class_localson_fn[2094355]))
      on(2094479 call wrapon_fn[2094425] call_tmp[1393315] _args_vforon_fn[2094413] _args_sizeon_fn[2094419] _args_foron_fn[2094369])
    }
    val errorExists[2110080]:bool[10] "temp"
    (2110085 'move' errorExists[2110080](2110082 '!=' error[1812512] nil[44]))
    if errorExists[2110080]
    {
      (1812518 '=' error_out[1812507] error[1812512])
      ref i_x[2132781]:string[26] "temp"
      (2132785 'move' i_x[2132781](2132783 'set reference' path[1393277]))
      wide-ref tmp[2426034]:string[26] "temp"
      (2426037 'move' tmp[2426034] i_x[2132781])
      (2132789 call deinit[30831] tmp[2426034])
      gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
    }
    val error[1812526]:__wide_Error[2381123] "error variable" "temp"
    (1812535 'move' error[1812526] nil[44])
    ref tmp[2417069]:__wide_Error[2381123] "temp"
    (2417073 'move' tmp[2417069](2417071 'set reference' error[1812526]))
    (1393451 call ioerror[266141] error[1393269] msg[1393271] path[1393277] offset[1393298] tmp[2417069])
    val errorExists[2110088]:bool[10] "temp"
    (2110093 'move' errorExists[2110088](2110090 '!=' error[1812526] nil[44]))
    if errorExists[2110088]
    {
      gotoErrorHandling handler[1812527] handler[1812527]
    }
    label handler[1812527]
    val errorExists[2110096]:bool[10] "temp"
    (2110101 'move' errorExists[2110096](2110098 '!=' error[1812526] nil[44]))
    if errorExists[2110096]
    {
      (1812542 '=' error_out[1812507] error[1812526])
      ref i_x[2132793]:string[26] "temp"
      (2132797 'move' i_x[2132793](2132795 'set reference' path[1393277]))
      wide-ref tmp[2426040]:string[26] "temp"
      (2426043 'move' tmp[2426040] i_x[2132793])
      (2132801 call deinit[30831] tmp[2426040])
      gotoErrorHandlingReturn _end_ch_ioerror[1812509] _end_ch_ioerror[1812509]
    }
    ref i_x[2132805]:string[26] "temp"
    (2132809 'move' i_x[2132805](2132807 'set reference' path[1393277]))
    wide-ref tmp[2426046]:string[26] "temp"
    (2426049 'move' tmp[2426046] i_x[2132805])
    (2132813 call deinit[30831] tmp[2426046])
    label _end_ch_ioerror[1812509]
    (1393460 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].offset[1080148](const  ref arg this[1080154]:channel(true,dynamic,false)[1060947]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_129[2378319]:string[26] "temp"
    (2378320 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[1080160]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080169]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1080299 'move' ret[1080169] 0)
    ref call_tmp[2263514]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263516 'move' call_tmp[2263514](2263518 '.' this[1080154] home[1060935]))
    const-val call_tmp[1080192]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165647]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165649 'move' coerce_tmp[2165647](2165651 '.v' call_tmp[2263514] _instance[89975]))
    val coerce_tmp[2165654]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165656 'move' coerce_tmp[2165654](2165658 'cast' object[22] coerce_tmp[2165647]))
    const-val call_tmp[2165661]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428641]:__wide_object[2381018] "temp"
    (2428644 'move' tmp[2428641] nil[44])
    (2165663 'move' call_tmp[2165661](2165665 'ptr_eq' coerce_tmp[2165654] tmp[2428641]))
    if call_tmp[2165661]
    {
      (2165671 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1080194 'move' call_tmp[1080192](1080196 '_wide_get_locale' coerce_tmp[2165647]))
    val rvfDerefTmp[2083811]:channel(true,dynamic,false)[1060947] "temp"
    (2083815 'move' rvfDerefTmp[2083811](2083813 'deref' this[1080154]))
    val isdirect[2090051]:bool[10] "temp"
    (2090056 'move' isdirect[2090051](2090053 call chpl_doDirectExecuteOn[187423] call_tmp[1080192]))
    if isdirect[2090051]
    {
      wide-ref tmp[2422756]:int(64)[13] "temp"
      (2422760 'move' tmp[2422756](2422758 'set reference' ret[1080169]))
      (2090060 call on_fn[1080205] rvfDerefTmp[2083811] tmp[2422756])
    }
    {
      val _args_foron_fn[2090078]:_class_localson_fn[2090068] "temp"
      (2090082 'move' _args_foron_fn[2090078](2090080 'stack allocate class' _class_localson_fn[2090068]))
      (2090084 '.=' _args_foron_fn[2090078] _0_tmp[2090071] call_tmp[1080192])
      (2090088 '.=' _args_foron_fn[2090078] _1_rvfDerefTmp[2090073] rvfDerefTmp[2083811])
      ref tmp[2090092]:int(64)[13] "temp"
      (2090096 'move' tmp[2090092](2090094 'set reference' ret[1080169]))
      wide-ref tmp[2422763]:int(64)[13] "temp"
      (2422766 'move' tmp[2422763] tmp[2090092])
      (2090098 '.=' _args_foron_fn[2090078] _2_ret[2090075] tmp[2422763])
      val _args_vforon_fn[2090102]:c_void_ptr[149] "temp"
      (2090106 'move' _args_vforon_fn[2090102](2090104 'cast_to_void_star' _args_foron_fn[2090078]))
      val _args_sizeon_fn[2090108]:int(64)[13] "temp"
      (2090112 'move' _args_sizeon_fn[2090108](2090110 'sizeof_bundle' _class_localson_fn[2090068]))
      on(2090152 call wrapon_fn[2090114] call_tmp[1080192] _args_vforon_fn[2090102] _args_sizeon_fn[2090108] _args_foron_fn[2090078])
    }
    (1080296 'move' ret[1080160] ret[1080169])
    label _end_offset[1080264]
    (1080266 return ret[1080160])
  }
  function file[235580].reader[1016561](const  ref arg this[1016567]:file[235580], const in arg start[1016587]:int(64)[13], const in arg end[1016604]:int(64)[13], const in arg hints[1016610]:int(32)[95], const  ref arg style[1016617]:iostyle[231844], ref arg error_out[1809179]:__wide_Error[2381123], ref arg _retArg[1832527]:channel(false,dynamic,true)[985627]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3030[2377860]:string[26] "temp"
    (2377861 'move' "in file.reader" "in file.reader")
    const-val local__str_literal_129[2377854]:string[26] "temp"
    (2377855 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1016625]:channel(false,dynamic,true)[985627] "dead after last mention" "RVV" "temp"
    val ret[1016644]:channel(false,dynamic,true)[985627] "dead at end of block" "insert auto destroy"
    (1021741 call init[1017871] ret[1016644])
    val err[1016665]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207289]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207291 'move' call_tmp[2207289](2207294 call qio_int_to_err[223634] 0))
    (1016667 'move' err[1016665] call_tmp[2207289])
    ref call_tmp[2216331]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216333 'move' call_tmp[2216331](2216335 '.' this[1016567] home[235562]))
    const-val call_tmp[1016682]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165107]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165109 'move' coerce_tmp[2165107](2165111 '.v' call_tmp[2216331] _instance[89975]))
    val coerce_tmp[2165114]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165116 'move' coerce_tmp[2165114](2165118 'cast' object[22] coerce_tmp[2165107]))
    const-val call_tmp[2165121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428539]:__wide_object[2381018] "temp"
    (2428542 'move' tmp[2428539] nil[44])
    (2165123 'move' call_tmp[2165121](2165125 'ptr_eq' coerce_tmp[2165114] tmp[2428539]))
    if call_tmp[2165121]
    {
      (2165131 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1016684 'move' call_tmp[1016682](1016686 '_wide_get_locale' coerce_tmp[2165107]))
    val error[1809182]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1809184 'move' error[1809182] nil[44])
    val rvfDerefTmp[2083476]:iostyle[231844] "temp"
    (2083480 'move' rvfDerefTmp[2083476](2083478 'deref' style[1016617]))
    val rvfDerefTmp[2083484]:file[235580] "temp"
    (2083488 'move' rvfDerefTmp[2083484](2083486 'deref' this[1016567]))
    val isdirect[2087540]:bool[10] "temp"
    (2087545 'move' isdirect[2087540](2087542 call chpl_doDirectExecuteOn[187423] call_tmp[1016682]))
    if isdirect[2087540]
    {
      wide-ref tmp[2422210]:syserr[223584] "temp"
      (2422214 'move' tmp[2422210](2422212 'set reference' err[1016665]))
      wide-ref tmp[2422217]:channel(false,dynamic,true)[985627] "temp"
      (2422221 'move' tmp[2422217](2422219 'set reference' ret[1016644]))
      wide-ref tmp[2422224]:__wide_Error[2381123] "temp"
      (2422228 'move' tmp[2422224](2422226 'set reference' error[1809182]))
      (2087549 call on_fn[1016695] tmp[2422210] start[1016587] end[1016604] rvfDerefTmp[2083476] rvfDerefTmp[2083484] tmp[2422217] hints[1016610] tmp[2422224])
    }
    {
      val _args_foron_fn[2087585]:_class_localson_fn[2087563] "temp"
      (2087589 'move' _args_foron_fn[2087585](2087587 'stack allocate class' _class_localson_fn[2087563]))
      (2087591 '.=' _args_foron_fn[2087585] _0_tmp[2087566] call_tmp[1016682])
      ref tmp[2087595]:syserr[223584] "temp"
      (2087599 'move' tmp[2087595](2087597 'set reference' err[1016665]))
      wide-ref tmp[2422231]:syserr[223584] "temp"
      (2422234 'move' tmp[2422231] tmp[2087595])
      (2087601 '.=' _args_foron_fn[2087585] _1_err[2087568] tmp[2422231])
      (2087605 '.=' _args_foron_fn[2087585] _2_start[2087570] start[1016587])
      (2087609 '.=' _args_foron_fn[2087585] _3_end[2087572] end[1016604])
      (2087613 '.=' _args_foron_fn[2087585] _4_rvfDerefTmp[2087574] rvfDerefTmp[2083476])
      (2087617 '.=' _args_foron_fn[2087585] _5_rvfDerefTmp[2087576] rvfDerefTmp[2083484])
      ref tmp[2087621]:channel(false,dynamic,true)[985627] "temp"
      (2087625 'move' tmp[2087621](2087623 'set reference' ret[1016644]))
      wide-ref tmp[2422237]:channel(false,dynamic,true)[985627] "temp"
      (2422240 'move' tmp[2422237] tmp[2087621])
      (2087627 '.=' _args_foron_fn[2087585] _6_ret[2087578] tmp[2422237])
      (2087631 '.=' _args_foron_fn[2087585] _7_hints[2087580] hints[1016610])
      ref tmp[2087635]:__wide_Error[2381123] "temp"
      (2087639 'move' tmp[2087635](2087637 'set reference' error[1809182]))
      wide-ref tmp[2422243]:__wide_Error[2381123] "temp"
      (2422246 'move' tmp[2422243] tmp[2087635])
      (2087641 '.=' _args_foron_fn[2087585] _8_error[2087582] tmp[2422243])
      val _args_vforon_fn[2087645]:c_void_ptr[149] "temp"
      (2087649 'move' _args_vforon_fn[2087645](2087647 'cast_to_void_star' _args_foron_fn[2087585]))
      val _args_sizeon_fn[2087651]:int(64)[13] "temp"
      (2087655 'move' _args_sizeon_fn[2087651](2087653 'sizeof_bundle' _class_localson_fn[2087563]))
      on(2087743 call wrapon_fn[2087657] call_tmp[1016682] _args_vforon_fn[2087645] _args_sizeon_fn[2087651] _args_foron_fn[2087585])
    }
    val errorExists[2108448]:bool[10] "temp"
    (2108453 'move' errorExists[2108448](2108450 '!=' error[1809182] nil[44]))
    if errorExists[2108448]
    {
      (1809188 '=' error_out[1809179] error[1809182])
      ref i_x[2328940]:channel(false,dynamic,true)[985627] "temp"
      (2328944 'move' i_x[2328940](2328942 'set reference' ret[1016644]))
      (2328948 call deinit[1471060] i_x[2328940])
      gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
    }
    const-val call_tmp[2206671]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206673 'move' call_tmp[2206671](2206676 call qio_err_iserr[223646] err[1016665]))
    const-val call_tmp[2206678]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206680 'move' call_tmp[2206678](2206682 '!=' call_tmp[2206671] 0))
    if call_tmp[2206678]
    {
      val error[1809196]:__wide_Error[2381123] "error variable" "temp"
      (1809205 'move' error[1809196] nil[44])
      const-val call_tmp[1016744]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831437]:string[26] "temp"
      (1016752 call tryGetPath[236364] this[1016567] ret_tmp[1831437])
      (1831440 'move' call_tmp[1016744] ret_tmp[1831437])
      ref tmp[2414830]:__wide_Error[2381123] "temp"
      (2414834 'move' tmp[2414830](2414832 'set reference' error[1809196]))
      (1016754 call ioerror[266250] err[1016665] "in file.reader" call_tmp[1016744] tmp[2414830])
      val errorExists[2108456]:bool[10] "temp"
      (2108461 'move' errorExists[2108456](2108458 '!=' error[1809196] nil[44]))
      if errorExists[2108456]
      {
        ref i_x[2130429]:string[26] "temp"
        (2130433 'move' i_x[2130429](2130431 'set reference' call_tmp[1016744]))
        wide-ref tmp[2425326]:string[26] "temp"
        (2425329 'move' tmp[2425326] i_x[2130429])
        (2130437 call deinit[30831] tmp[2425326])
        gotoErrorHandling handler[1809197] handler[1809197]
      }
      ref i_x[2130441]:string[26] "temp"
      (2130445 'move' i_x[2130441](2130443 'set reference' call_tmp[1016744]))
      wide-ref tmp[2425332]:string[26] "temp"
      (2425335 'move' tmp[2425332] i_x[2130441])
      (2130449 call deinit[30831] tmp[2425332])
      label handler[1809197]
      val errorExists[2108464]:bool[10] "temp"
      (2108469 'move' errorExists[2108464](2108466 '!=' error[1809196] nil[44]))
      if errorExists[2108464]
      {
        (1809212 '=' error_out[1809179] error[1809196])
        ref i_x[2328952]:channel(false,dynamic,true)[985627] "temp"
        (2328956 'move' i_x[2328952](2328954 'set reference' ret[1016644]))
        (2328960 call deinit[1471060] i_x[2328952])
        gotoErrorHandlingReturn _end_reader[1016780] _end_reader[1016780]
      }
    }
    (1021737 'move' ret[1016625] ret[1016644])
    label _end_reader[1016780]
    (1832529 '=' _retArg[1832527] ret[1016625])
    (1832531 return _void[55])
  }
  function file[235580].reader[1080588](const  ref arg this[1080594]:file[235580], const in arg start[1080614]:int(64)[13], const in arg end[1080631]:int(64)[13], const in arg hints[1080637]:int(32)[95], const  ref arg style[1080644]:iostyle[231844], ref arg error_out[1810522]:__wide_Error[2381123], ref arg _retArg[1833443]:channel(false,dynamic,false)[1080682]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3030[2378349]:string[26] "temp"
    (2378350 'move' "in file.reader" "in file.reader")
    const-val local__str_literal_129[2378343]:string[26] "temp"
    (2378344 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1080652]:channel(false,dynamic,false)[1080682] "dead after last mention" "RVV" "temp"
    val ret[1080706]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1082083 call init[1081352] ret[1080706])
    val err[1080727]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207441]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207443 'move' call_tmp[2207441](2207446 call qio_int_to_err[223634] 0))
    (1080729 'move' err[1080727] call_tmp[2207441])
    ref call_tmp[2216443]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216445 'move' call_tmp[2216443](2216447 '.' this[1080594] home[235562]))
    const-val call_tmp[1080744]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165677]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165679 'move' coerce_tmp[2165677](2165681 '.v' call_tmp[2216443] _instance[89975]))
    val coerce_tmp[2165684]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165686 'move' coerce_tmp[2165684](2165688 'cast' object[22] coerce_tmp[2165677]))
    const-val call_tmp[2165691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428647]:__wide_object[2381018] "temp"
    (2428650 'move' tmp[2428647] nil[44])
    (2165693 'move' call_tmp[2165691](2165695 'ptr_eq' coerce_tmp[2165684] tmp[2428647]))
    if call_tmp[2165691]
    {
      (2165701 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1080746 'move' call_tmp[1080744](1080748 '_wide_get_locale' coerce_tmp[2165677]))
    val error[1810525]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1810527 'move' error[1810525] nil[44])
    val rvfDerefTmp[2083839]:iostyle[231844] "temp"
    (2083843 'move' rvfDerefTmp[2083839](2083841 'deref' style[1080644]))
    val rvfDerefTmp[2083847]:file[235580] "temp"
    (2083851 'move' rvfDerefTmp[2083847](2083849 'deref' this[1080594]))
    val isdirect[2090157]:bool[10] "temp"
    (2090162 'move' isdirect[2090157](2090159 call chpl_doDirectExecuteOn[187423] call_tmp[1080744]))
    if isdirect[2090157]
    {
      wide-ref tmp[2422775]:channel(false,dynamic,false)[1080682] "temp"
      (2422779 'move' tmp[2422775](2422777 'set reference' ret[1080706]))
      wide-ref tmp[2422782]:syserr[223584] "temp"
      (2422786 'move' tmp[2422782](2422784 'set reference' err[1080727]))
      wide-ref tmp[2422789]:__wide_Error[2381123] "temp"
      (2422793 'move' tmp[2422789](2422791 'set reference' error[1810525]))
      (2090166 call on_fn[1080757] start[1080614] tmp[2422775] rvfDerefTmp[2083839] end[1080631] rvfDerefTmp[2083847] tmp[2422782] hints[1080637] tmp[2422789])
    }
    {
      val _args_foron_fn[2090202]:_class_localson_fn[2090180] "temp"
      (2090206 'move' _args_foron_fn[2090202](2090204 'stack allocate class' _class_localson_fn[2090180]))
      (2090208 '.=' _args_foron_fn[2090202] _0_tmp[2090183] call_tmp[1080744])
      (2090212 '.=' _args_foron_fn[2090202] _1_start[2090185] start[1080614])
      ref tmp[2090216]:channel(false,dynamic,false)[1080682] "temp"
      (2090220 'move' tmp[2090216](2090218 'set reference' ret[1080706]))
      wide-ref tmp[2422796]:channel(false,dynamic,false)[1080682] "temp"
      (2422799 'move' tmp[2422796] tmp[2090216])
      (2090222 '.=' _args_foron_fn[2090202] _2_ret[2090187] tmp[2422796])
      (2090226 '.=' _args_foron_fn[2090202] _3_rvfDerefTmp[2090189] rvfDerefTmp[2083839])
      (2090230 '.=' _args_foron_fn[2090202] _4_end[2090191] end[1080631])
      (2090234 '.=' _args_foron_fn[2090202] _5_rvfDerefTmp[2090193] rvfDerefTmp[2083847])
      ref tmp[2090238]:syserr[223584] "temp"
      (2090242 'move' tmp[2090238](2090240 'set reference' err[1080727]))
      wide-ref tmp[2422802]:syserr[223584] "temp"
      (2422805 'move' tmp[2422802] tmp[2090238])
      (2090244 '.=' _args_foron_fn[2090202] _6_err[2090195] tmp[2422802])
      (2090248 '.=' _args_foron_fn[2090202] _7_hints[2090197] hints[1080637])
      ref tmp[2090252]:__wide_Error[2381123] "temp"
      (2090256 'move' tmp[2090252](2090254 'set reference' error[1810525]))
      wide-ref tmp[2422808]:__wide_Error[2381123] "temp"
      (2422811 'move' tmp[2422808] tmp[2090252])
      (2090258 '.=' _args_foron_fn[2090202] _8_error[2090199] tmp[2422808])
      val _args_vforon_fn[2090262]:c_void_ptr[149] "temp"
      (2090266 'move' _args_vforon_fn[2090262](2090264 'cast_to_void_star' _args_foron_fn[2090202]))
      val _args_sizeon_fn[2090268]:int(64)[13] "temp"
      (2090272 'move' _args_sizeon_fn[2090268](2090270 'sizeof_bundle' _class_localson_fn[2090180]))
      on(2090360 call wrapon_fn[2090274] call_tmp[1080744] _args_vforon_fn[2090262] _args_sizeon_fn[2090268] _args_foron_fn[2090202])
    }
    val errorExists[2109080]:bool[10] "temp"
    (2109085 'move' errorExists[2109080](2109082 '!=' error[1810525] nil[44]))
    if errorExists[2109080]
    {
      (1810531 '=' error_out[1810522] error[1810525])
      ref i_x[2331620]:channel(false,dynamic,false)[1080682] "temp"
      (2331624 'move' i_x[2331620](2331622 'set reference' ret[1080706]))
      (2331628 call deinit[1540469] i_x[2331620])
      gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
    }
    const-val call_tmp[2206875]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206877 'move' call_tmp[2206875](2206880 call qio_err_iserr[223646] err[1080727]))
    const-val call_tmp[2206882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206884 'move' call_tmp[2206882](2206886 '!=' call_tmp[2206875] 0))
    if call_tmp[2206882]
    {
      val error[1810539]:__wide_Error[2381123] "error variable" "temp"
      (1810548 'move' error[1810539] nil[44])
      const-val call_tmp[1080806]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831455]:string[26] "temp"
      (1080814 call tryGetPath[236364] this[1080594] ret_tmp[1831455])
      (1831458 'move' call_tmp[1080806] ret_tmp[1831455])
      ref tmp[2415421]:__wide_Error[2381123] "temp"
      (2415425 'move' tmp[2415421](2415423 'set reference' error[1810539]))
      (1080816 call ioerror[266250] err[1080727] "in file.reader" call_tmp[1080806] tmp[2415421])
      val errorExists[2109088]:bool[10] "temp"
      (2109093 'move' errorExists[2109088](2109090 '!=' error[1810539] nil[44]))
      if errorExists[2109088]
      {
        ref i_x[2131089]:string[26] "temp"
        (2131093 'move' i_x[2131089](2131091 'set reference' call_tmp[1080806]))
        wide-ref tmp[2425500]:string[26] "temp"
        (2425503 'move' tmp[2425500] i_x[2131089])
        (2131097 call deinit[30831] tmp[2425500])
        gotoErrorHandling handler[1810540] handler[1810540]
      }
      ref i_x[2131101]:string[26] "temp"
      (2131105 'move' i_x[2131101](2131103 'set reference' call_tmp[1080806]))
      wide-ref tmp[2425506]:string[26] "temp"
      (2425509 'move' tmp[2425506] i_x[2131101])
      (2131109 call deinit[30831] tmp[2425506])
      label handler[1810540]
      val errorExists[2109096]:bool[10] "temp"
      (2109101 'move' errorExists[2109096](2109098 '!=' error[1810539] nil[44]))
      if errorExists[2109096]
      {
        (1810555 '=' error_out[1810522] error[1810539])
        ref i_x[2331632]:channel(false,dynamic,false)[1080682] "temp"
        (2331636 'move' i_x[2331632](2331634 'set reference' ret[1080706]))
        (2331640 call deinit[1540469] i_x[2331632])
        gotoErrorHandlingReturn _end_reader[1080842] _end_reader[1080842]
      }
    }
    (1082079 'move' ret[1080652] ret[1080706])
    label _end_reader[1080842]
    (1833445 '=' _retArg[1833443] ret[1080652])
    (1833447 return _void[55])
  }
  function file[235580].writer[1022136](const  ref arg this[1022142]:file[235580], const in arg start[1022162]:int(64)[13], const in arg end[1022179]:int(64)[13], const in arg hints[1022185]:int(32)[95], const  ref arg style[1022192]:iostyle[231844], ref arg error_out[1809295]:__wide_Error[2381123], ref arg _retArg[1832593]:channel(true,dynamic,true)[1021825]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3036[2377909]:string[26] "temp"
    (2377910 'move' "in file.writer" "in file.writer")
    const-val local__str_literal_129[2377903]:string[26] "temp"
    (2377904 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1022200]:channel(true,dynamic,true)[1021825] "dead after last mention" "RVV" "temp"
    val ret[1022219]:channel(true,dynamic,true)[1021825] "dead at end of block" "insert auto destroy"
    (1023829 call init[1022907] ret[1022219])
    val err[1022240]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207308]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207310 'move' call_tmp[2207308](2207313 call qio_int_to_err[223634] 0))
    (1022242 'move' err[1022240] call_tmp[2207308])
    ref call_tmp[2216377]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216379 'move' call_tmp[2216377](2216381 '.' this[1022142] home[235562]))
    const-val call_tmp[1022257]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165257]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165259 'move' coerce_tmp[2165257](2165261 '.v' call_tmp[2216377] _instance[89975]))
    val coerce_tmp[2165264]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165266 'move' coerce_tmp[2165264](2165268 'cast' object[22] coerce_tmp[2165257]))
    const-val call_tmp[2165271]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428569]:__wide_object[2381018] "temp"
    (2428572 'move' tmp[2428569] nil[44])
    (2165273 'move' call_tmp[2165271](2165275 'ptr_eq' coerce_tmp[2165264] tmp[2428569]))
    if call_tmp[2165271]
    {
      (2165281 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1022259 'move' call_tmp[1022257](1022261 '_wide_get_locale' coerce_tmp[2165257]))
    val error[1809298]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1809300 'move' error[1809298] nil[44])
    val rvfDerefTmp[2083553]:iostyle[231844] "temp"
    (2083557 'move' rvfDerefTmp[2083553](2083555 'deref' style[1022192]))
    val rvfDerefTmp[2083561]:file[235580] "temp"
    (2083565 'move' rvfDerefTmp[2083561](2083563 'deref' this[1022142]))
    val isdirect[2088223]:bool[10] "temp"
    (2088228 'move' isdirect[2088223](2088225 call chpl_doDirectExecuteOn[187423] call_tmp[1022257]))
    if isdirect[2088223]
    {
      wide-ref tmp[2422352]:channel(true,dynamic,true)[1021825] "temp"
      (2422356 'move' tmp[2422352](2422354 'set reference' ret[1022219]))
      wide-ref tmp[2422359]:syserr[223584] "temp"
      (2422363 'move' tmp[2422359](2422361 'set reference' err[1022240]))
      wide-ref tmp[2422366]:__wide_Error[2381123] "temp"
      (2422370 'move' tmp[2422366](2422368 'set reference' error[1809298]))
      (2088232 call on_fn[1022270] end[1022179] rvfDerefTmp[2083553] rvfDerefTmp[2083561] tmp[2422352] hints[1022185] start[1022162] tmp[2422359] tmp[2422366])
    }
    {
      val _args_foron_fn[2088268]:_class_localson_fn[2088246] "temp"
      (2088272 'move' _args_foron_fn[2088268](2088270 'stack allocate class' _class_localson_fn[2088246]))
      (2088274 '.=' _args_foron_fn[2088268] _0_tmp[2088249] call_tmp[1022257])
      (2088278 '.=' _args_foron_fn[2088268] _1_end[2088251] end[1022179])
      (2088282 '.=' _args_foron_fn[2088268] _2_rvfDerefTmp[2088253] rvfDerefTmp[2083553])
      (2088286 '.=' _args_foron_fn[2088268] _3_rvfDerefTmp[2088255] rvfDerefTmp[2083561])
      ref tmp[2088290]:channel(true,dynamic,true)[1021825] "temp"
      (2088294 'move' tmp[2088290](2088292 'set reference' ret[1022219]))
      wide-ref tmp[2422373]:channel(true,dynamic,true)[1021825] "temp"
      (2422376 'move' tmp[2422373] tmp[2088290])
      (2088296 '.=' _args_foron_fn[2088268] _4_ret[2088257] tmp[2422373])
      (2088300 '.=' _args_foron_fn[2088268] _5_hints[2088259] hints[1022185])
      (2088304 '.=' _args_foron_fn[2088268] _6_start[2088261] start[1022162])
      ref tmp[2088308]:syserr[223584] "temp"
      (2088312 'move' tmp[2088308](2088310 'set reference' err[1022240]))
      wide-ref tmp[2422379]:syserr[223584] "temp"
      (2422382 'move' tmp[2422379] tmp[2088308])
      (2088314 '.=' _args_foron_fn[2088268] _7_err[2088263] tmp[2422379])
      ref tmp[2088318]:__wide_Error[2381123] "temp"
      (2088322 'move' tmp[2088318](2088320 'set reference' error[1809298]))
      wide-ref tmp[2422385]:__wide_Error[2381123] "temp"
      (2422388 'move' tmp[2422385] tmp[2088318])
      (2088324 '.=' _args_foron_fn[2088268] _8_error[2088265] tmp[2422385])
      val _args_vforon_fn[2088328]:c_void_ptr[149] "temp"
      (2088332 'move' _args_vforon_fn[2088328](2088330 'cast_to_void_star' _args_foron_fn[2088268]))
      val _args_sizeon_fn[2088334]:int(64)[13] "temp"
      (2088338 'move' _args_sizeon_fn[2088334](2088336 'sizeof_bundle' _class_localson_fn[2088246]))
      on(2088426 call wrapon_fn[2088340] call_tmp[1022257] _args_vforon_fn[2088328] _args_sizeon_fn[2088334] _args_foron_fn[2088268])
    }
    val errorExists[2108496]:bool[10] "temp"
    (2108501 'move' errorExists[2108496](2108498 '!=' error[1809298] nil[44]))
    if errorExists[2108496]
    {
      (1809304 '=' error_out[1809295] error[1809298])
      ref i_x[2331383]:channel(true,dynamic,true)[1021825] "temp"
      (2331387 'move' i_x[2331383](2331385 'set reference' ret[1022219]))
      (2331391 call deinit[1534039] i_x[2331383])
      gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
    }
    const-val call_tmp[2206756]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206758 'move' call_tmp[2206756](2206761 call qio_err_iserr[223646] err[1022240]))
    const-val call_tmp[2206763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206765 'move' call_tmp[2206763](2206767 '!=' call_tmp[2206756] 0))
    if call_tmp[2206763]
    {
      val error[1809312]:__wide_Error[2381123] "error variable" "temp"
      (1809321 'move' error[1809312] nil[44])
      const-val call_tmp[1022319]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831443]:string[26] "temp"
      (1022327 call tryGetPath[236364] this[1022142] ret_tmp[1831443])
      (1831446 'move' call_tmp[1022319] ret_tmp[1831443])
      ref tmp[2415026]:__wide_Error[2381123] "temp"
      (2415030 'move' tmp[2415026](2415028 'set reference' error[1809312]))
      (1022329 call ioerror[266250] err[1022240] "in file.writer" call_tmp[1022319] tmp[2415026])
      val errorExists[2108504]:bool[10] "temp"
      (2108509 'move' errorExists[2108504](2108506 '!=' error[1809312] nil[44]))
      if errorExists[2108504]
      {
        ref i_x[2130453]:string[26] "temp"
        (2130457 'move' i_x[2130453](2130455 'set reference' call_tmp[1022319]))
        wide-ref tmp[2425338]:string[26] "temp"
        (2425341 'move' tmp[2425338] i_x[2130453])
        (2130461 call deinit[30831] tmp[2425338])
        gotoErrorHandling handler[1809313] handler[1809313]
      }
      ref i_x[2130465]:string[26] "temp"
      (2130469 'move' i_x[2130465](2130467 'set reference' call_tmp[1022319]))
      wide-ref tmp[2425344]:string[26] "temp"
      (2425347 'move' tmp[2425344] i_x[2130465])
      (2130473 call deinit[30831] tmp[2425344])
      label handler[1809313]
      val errorExists[2108512]:bool[10] "temp"
      (2108517 'move' errorExists[2108512](2108514 '!=' error[1809312] nil[44]))
      if errorExists[2108512]
      {
        (1809328 '=' error_out[1809295] error[1809312])
        ref i_x[2331395]:channel(true,dynamic,true)[1021825] "temp"
        (2331399 'move' i_x[2331395](2331397 'set reference' ret[1022219]))
        (2331403 call deinit[1534039] i_x[2331395])
        gotoErrorHandlingReturn _end_writer[1022355] _end_writer[1022355]
      }
    }
    (1023825 'move' ret[1022200] ret[1022219])
    label _end_writer[1022355]
    (1832595 '=' _retArg[1832593] ret[1022200])
    (1832597 return _void[55])
  }
  function file[235580].writer[1060853](const  ref arg this[1060859]:file[235580], const in arg start[1060879]:int(64)[13], const in arg end[1060896]:int(64)[13], const in arg hints[1060902]:int(32)[95], const  ref arg style[1060909]:iostyle[231844], ref arg error_out[1809726]:__wide_Error[2381123], ref arg _retArg[1833041]:channel(true,dynamic,false)[1060947]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3036[2378089]:string[26] "temp"
    (2378090 'move' "in file.writer" "in file.writer")
    const-val local__str_literal_129[2378083]:string[26] "temp"
    (2378084 'move' "argument to ! is nil" "argument to ! is nil")
    const-val ret[1060917]:channel(true,dynamic,false)[1060947] "dead after last mention" "RVV" "temp"
    val ret[1060971]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1062351 call init[1061620] ret[1060971])
    val err[1060992]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207346]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207348 'move' call_tmp[2207346](2207351 call qio_int_to_err[223634] 0))
    (1060994 'move' err[1060992] call_tmp[2207346])
    ref call_tmp[2216423]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216425 'move' call_tmp[2216423](2216427 '.' this[1060859] home[235562]))
    const-val call_tmp[1061009]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165407]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165409 'move' coerce_tmp[2165407](2165411 '.v' call_tmp[2216423] _instance[89975]))
    val coerce_tmp[2165414]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165416 'move' coerce_tmp[2165414](2165418 'cast' object[22] coerce_tmp[2165407]))
    const-val call_tmp[2165421]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428599]:__wide_object[2381018] "temp"
    (2428602 'move' tmp[2428599] nil[44])
    (2165423 'move' call_tmp[2165421](2165425 'ptr_eq' coerce_tmp[2165414] tmp[2428599]))
    if call_tmp[2165421]
    {
      (2165431 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1061011 'move' call_tmp[1061009](1061013 '_wide_get_locale' coerce_tmp[2165407]))
    val error[1809729]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1809731 'move' error[1809729] nil[44])
    val rvfDerefTmp[2083661]:iostyle[231844] "temp"
    (2083665 'move' rvfDerefTmp[2083661](2083663 'deref' style[1060909]))
    val rvfDerefTmp[2083669]:file[235580] "temp"
    (2083673 'move' rvfDerefTmp[2083669](2083671 'deref' this[1060859]))
    val isdirect[2088936]:bool[10] "temp"
    (2088941 'move' isdirect[2088936](2088938 call chpl_doDirectExecuteOn[187423] call_tmp[1061009]))
    if isdirect[2088936]
    {
      wide-ref tmp[2422519]:channel(true,dynamic,false)[1060947] "temp"
      (2422523 'move' tmp[2422519](2422521 'set reference' ret[1060971]))
      wide-ref tmp[2422526]:syserr[223584] "temp"
      (2422530 'move' tmp[2422526](2422528 'set reference' err[1060992]))
      wide-ref tmp[2422533]:__wide_Error[2381123] "temp"
      (2422537 'move' tmp[2422533](2422535 'set reference' error[1809729]))
      (2088945 call on_fn[1061022] start[1060879] tmp[2422519] end[1060896] rvfDerefTmp[2083661] rvfDerefTmp[2083669] tmp[2422526] hints[1060902] tmp[2422533])
    }
    {
      val _args_foron_fn[2088981]:_class_localson_fn[2088959] "temp"
      (2088985 'move' _args_foron_fn[2088981](2088983 'stack allocate class' _class_localson_fn[2088959]))
      (2088987 '.=' _args_foron_fn[2088981] _0_tmp[2088962] call_tmp[1061009])
      (2088991 '.=' _args_foron_fn[2088981] _1_start[2088964] start[1060879])
      ref tmp[2088995]:channel(true,dynamic,false)[1060947] "temp"
      (2088999 'move' tmp[2088995](2088997 'set reference' ret[1060971]))
      wide-ref tmp[2422540]:channel(true,dynamic,false)[1060947] "temp"
      (2422543 'move' tmp[2422540] tmp[2088995])
      (2089001 '.=' _args_foron_fn[2088981] _2_ret[2088966] tmp[2422540])
      (2089005 '.=' _args_foron_fn[2088981] _3_end[2088968] end[1060896])
      (2089009 '.=' _args_foron_fn[2088981] _4_rvfDerefTmp[2088970] rvfDerefTmp[2083661])
      (2089013 '.=' _args_foron_fn[2088981] _5_rvfDerefTmp[2088972] rvfDerefTmp[2083669])
      ref tmp[2089017]:syserr[223584] "temp"
      (2089021 'move' tmp[2089017](2089019 'set reference' err[1060992]))
      wide-ref tmp[2422546]:syserr[223584] "temp"
      (2422549 'move' tmp[2422546] tmp[2089017])
      (2089023 '.=' _args_foron_fn[2088981] _6_err[2088974] tmp[2422546])
      (2089027 '.=' _args_foron_fn[2088981] _7_hints[2088976] hints[1060902])
      ref tmp[2089031]:__wide_Error[2381123] "temp"
      (2089035 'move' tmp[2089031](2089033 'set reference' error[1809729]))
      wide-ref tmp[2422552]:__wide_Error[2381123] "temp"
      (2422555 'move' tmp[2422552] tmp[2089031])
      (2089037 '.=' _args_foron_fn[2088981] _8_error[2088978] tmp[2422552])
      val _args_vforon_fn[2089041]:c_void_ptr[149] "temp"
      (2089045 'move' _args_vforon_fn[2089041](2089043 'cast_to_void_star' _args_foron_fn[2088981]))
      val _args_sizeon_fn[2089047]:int(64)[13] "temp"
      (2089051 'move' _args_sizeon_fn[2089047](2089049 'sizeof_bundle' _class_localson_fn[2088959]))
      on(2089139 call wrapon_fn[2089053] call_tmp[1061009] _args_vforon_fn[2089041] _args_sizeon_fn[2089047] _args_foron_fn[2088981])
    }
    val errorExists[2108720]:bool[10] "temp"
    (2108725 'move' errorExists[2108720](2108722 '!=' error[1809729] nil[44]))
    if errorExists[2108720]
    {
      (1809735 '=' error_out[1809726] error[1809729])
      ref i_x[2268154]:channel(true,dynamic,false)[1060947] "temp"
      (2268158 'move' i_x[2268154](2268156 'set reference' ret[1060971]))
      (2268162 call deinit[1536215] i_x[2268154])
      gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
    }
    const-val call_tmp[2206807]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206809 'move' call_tmp[2206807](2206812 call qio_err_iserr[223646] err[1060992]))
    const-val call_tmp[2206814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206816 'move' call_tmp[2206814](2206818 '!=' call_tmp[2206807] 0))
    if call_tmp[2206814]
    {
      val error[1809743]:__wide_Error[2381123] "error variable" "temp"
      (1809752 'move' error[1809743] nil[44])
      const-val call_tmp[1061071]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1831449]:string[26] "temp"
      (1061079 call tryGetPath[236364] this[1060859] ret_tmp[1831449])
      (1831452 'move' call_tmp[1061071] ret_tmp[1831449])
      ref tmp[2415180]:__wide_Error[2381123] "temp"
      (2415184 'move' tmp[2415180](2415182 'set reference' error[1809743]))
      (1061081 call ioerror[266250] err[1060992] "in file.writer" call_tmp[1061071] tmp[2415180])
      val errorExists[2108728]:bool[10] "temp"
      (2108733 'move' errorExists[2108728](2108730 '!=' error[1809743] nil[44]))
      if errorExists[2108728]
      {
        ref i_x[2130849]:string[26] "temp"
        (2130853 'move' i_x[2130849](2130851 'set reference' call_tmp[1061071]))
        wide-ref tmp[2425404]:string[26] "temp"
        (2425407 'move' tmp[2425404] i_x[2130849])
        (2130857 call deinit[30831] tmp[2425404])
        gotoErrorHandling handler[1809744] handler[1809744]
      }
      ref i_x[2130861]:string[26] "temp"
      (2130865 'move' i_x[2130861](2130863 'set reference' call_tmp[1061071]))
      wide-ref tmp[2425410]:string[26] "temp"
      (2425413 'move' tmp[2425410] i_x[2130861])
      (2130869 call deinit[30831] tmp[2425410])
      label handler[1809744]
      val errorExists[2108736]:bool[10] "temp"
      (2108741 'move' errorExists[2108736](2108738 '!=' error[1809743] nil[44]))
      if errorExists[2108736]
      {
        (1809759 '=' error_out[1809726] error[1809743])
        ref i_x[2268166]:channel(true,dynamic,false)[1060947] "temp"
        (2268170 'move' i_x[2268166](2268168 'set reference' ret[1060971]))
        (2268174 call deinit[1536215] i_x[2268166])
        gotoErrorHandlingReturn _end_writer[1061107] _end_writer[1061107]
      }
    }
    (1062347 'move' ret[1060917] ret[1060971])
    label _end_writer[1061107]
    (1833043 '=' _retArg[1833041] ret[1060917])
    (1833045 return _void[55])
  }
  function _write_text_internal[1078760](const in arg _channel_internal[1078762]:qio_channel_ptr_t[231465], const in arg x[1078764]:int(64)[13]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1078936]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1079555]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079561 'move' coerce_tmp[1079555](1079557 'cast' int(32)[95] 0))
    const-val coerce_tmp[1079563]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079569 'move' coerce_tmp[1079563](1079565 'cast' uint(64)[115] 8))
    const-val coerce_tmp[1079571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079577 'move' coerce_tmp[1079571](1079573 'cast' int(32)[95] 1))
    (1078938 'move' call_tmp[1078936](1078941 call qio_channel_print_int[1079525] coerce_tmp[1079555] _channel_internal[1078762] x[1078764] coerce_tmp[1079563] coerce_tmp[1079571]))
    label _end__write_text_internal[1079508]
    (1079510 return call_tmp[1078936])
  }
  function _write_text_internal[1172844](const in arg _channel_internal[1172846]:qio_channel_ptr_t[231465], const  wide-ref arg x[1172848]:string[26]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val local__str_literal_4795[2378729]:string[26] "temp"
    (2378730 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    val ret[1172862]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
    val ret[2148391]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2148393]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2427380]:int(32)[95] "temp"
    (2148395 'move' tmp[2427380](2148397 '.v' x[1172848] locale_id[30754]))
    (2427383 'move' coerce_tmp[2148393] tmp[2427380])
    const-val call_tmp[2148400]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2148402 'move' call_tmp[2148400](2148404 '==' coerce_tmp[2148393] chpl_nodeID[208152]))
    if call_tmp[2148400]
    {
      const-val ret[2148409]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2148411]:string[26] "dead at end of block" "insert auto destroy"
      (2148414 call init[30760] ret[2148411])
      const-val coerce_tmp[2148416]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2427386]:int(64)[13] "temp"
      (2148418 'move' tmp[2427386](2148420 '.v' x[1172848] cachedNumCodepoints[30731]))
      (2427389 'move' coerce_tmp[2148416] tmp[2427386])
      (2148423 '.=' ret[2148411] cachedNumCodepoints[30731] coerce_tmp[2148416])
      (2148428 call initWithBorrowedBuffer[948874] ret[2148411] x[1172848])
      (2148431 'move' ret[2148409] ret[2148411])
      (2148434 'move' ret[2148391] ret[2148409])
      gotoReturn _end_localize[2148452] _end_localize[2148452]
    }
    {
      const-val x[2148440]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2148443 call init=[30771] x[2148440] x[1172848])
      (2148446 'move' ret[2148391] x[2148440])
      gotoReturn _end_localize[2148452] _end_localize[2148452]
    }
    label _end_localize[2148452]
    const local_x[1173263]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1173265 'move' local_x[1173263] ret[2148391])
    const-val tmp[1173622]:bool[10] "dead after last mention" "const" "temp"
    val tmp[2415885]:bool[10] "temp"
    (1173624 'move' tmp[2415885](2370479 '.v' local_x[1173263] hasEscapes[30749]))
    (2415888 'move' tmp[1173622] tmp[2415885])
    if tmp[1173622]
    {
      const-val call_tmp[2207536]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2207538 'move' call_tmp[2207536](2207541 call qio_int_to_err[223634] EILSEQ[224444]))
      (2207543 '=' ret[1172862] call_tmp[2207536])
      ref i_x[2131653]:string[26] "temp"
      (2131657 'move' i_x[2131653](2131655 'set reference' local_x[1173263]))
      wide-ref tmp[2425746]:string[26] "temp"
      (2425749 'move' tmp[2425746] i_x[2131653])
      (2131661 call deinit[30831] tmp[2425746])
      gotoReturn _end__write_text_internal[1173592] _end__write_text_internal[1173592]
    }
    const-val coerce_tmp[2151397]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2427980]:int(32)[95] "temp"
    (2151399 'move' tmp[2427980](2151401 '.v' local_x[1173263] locale_id[30754]))
    (2427983 'move' coerce_tmp[2151397] tmp[2427980])
    const-val call_tmp[2151404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2151406 'move' call_tmp[2151404](2151408 '!=' coerce_tmp[2151397] chpl_nodeID[208152]))
    if call_tmp[2151404]
    {
      (2151414 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2151417]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2427986]:c_ptr(uint(8))[937423] "temp"
    (2151419 'move' tmp[2427986](2151421 '.v' local_x[1173263] buff[30737]))
    (2427989 'move' coerce_tmp[2151417] tmp[2427986])
    const-val call_tmp[2151424]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2151426 'move' call_tmp[2151424](2151428 'cast' c_string[19] coerce_tmp[2151417]))
    val ret[2143318]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2426684]:int(64)[13] "temp"
    (2143320 'move' tmp[2426684](2143322 '.v' local_x[1173263] buffLen[30719]))
    (2426687 'move' ret[2143318] tmp[2426684])
    const-val call_tmp[1173319]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1173631]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1173637 'move' coerce_tmp[1173631](1173633 'cast' int(32)[95] 0))
    (1173321 'move' call_tmp[1173319](1173324 call qio_channel_print_string[234837] coerce_tmp[1173631] _channel_internal[1172846] call_tmp[2151424] ret[2143318]))
    (1173650 'move' ret[1172862] call_tmp[1173319])
    ref i_x[2131665]:string[26] "temp"
    (2131669 'move' i_x[2131665](2131667 'set reference' local_x[1173263]))
    wide-ref tmp[2425752]:string[26] "temp"
    (2425755 'move' tmp[2425752] i_x[2131665])
    (2131673 call deinit[30831] tmp[2425752])
    label _end__write_text_internal[1173592]
    (1173594 return ret[1172862])
  }
  function _write_text_internal[1427778](const in arg _channel_internal[1427780]:qio_channel_ptr_t[231465], const in arg x[1427782]:real(64)[16]) : syserr[223584] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1428008]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1428571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1428577 'move' coerce_tmp[1428571](1428573 'cast' int(32)[95] 0))
    const-val coerce_tmp[1428579]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1428585 'move' coerce_tmp[1428579](1428581 'cast' uint(64)[115] 8))
    (1428010 'move' call_tmp[1428008](1428013 call qio_channel_print_float[1428545] coerce_tmp[1428571] _channel_internal[1427780] x[1427782] coerce_tmp[1428579]))
    label _end__write_text_internal[1428526]
    (1428528 return call_tmp[1428008])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1079612](const  wide-ref arg this[1079618]:channel(true,dynamic,false)[1060947], const in arg x[1079622]:int(64)[13], ref arg _retArg[1833403]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4770[2378295]:string[26] "temp"
    (2378296 'move' "int(64)" "int(64)")
    const-val local__str_literal_3060[2378289]:string[26] "temp"
    (2378290 'move' "writing " "writing ")
    const-val local__str_literal_3058[2378283]:string[26] "temp"
    (2378284 'move' "while " "while ")
    const-val ret[1079626]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079638]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204363]:string[26] "temp"
    (2204366 'move' inlineImm[2204363] "while ")
    ref i_x[2204368]:string[26] "temp"
    (2204372 'move' i_x[2204368](2204370 'set reference' inlineImm[2204363]))
    val ret[2204375]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204377]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429911]:string[26] "temp"
    (2429914 'move' tmp[2429911] i_x[2204368])
    (2204380 call init=[30771] tmp[2204377] tmp[2429911])
    (2204383 'move' ret[2204375] tmp[2204377])
    (1079640 'move' result[1079638] ret[2204375])
    (1079677 call +=[38797] result[1079638] "writing ")
    (1079697 call +=[38797] result[1079638] "int(64)")
    (1079831 'move' ret[1079626] result[1079638])
    label _end__constructIoErrorMsg[1079807]
    (1833405 '=' _retArg[1833403] ret[1079626])
    (1833409 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1079905](const  ref arg this[1079911]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1079915]:byteIndex[28170], ref arg _retArg[1833417]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4841[2378313]:string[26] "temp"
    (2378314 'move' "byteIndex" "byteIndex")
    const-val local__str_literal_3060[2378307]:string[26] "temp"
    (2378308 'move' "writing " "writing ")
    const-val local__str_literal_3058[2378301]:string[26] "temp"
    (2378302 'move' "while " "while ")
    const-val ret[1079919]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079931]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204388]:string[26] "temp"
    (2204391 'move' inlineImm[2204388] "while ")
    ref i_x[2204393]:string[26] "temp"
    (2204397 'move' i_x[2204393](2204395 'set reference' inlineImm[2204388]))
    val ret[2204400]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204402]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429917]:string[26] "temp"
    (2429920 'move' tmp[2429917] i_x[2204393])
    (2204405 call init=[30771] tmp[2204402] tmp[2429917])
    (2204408 'move' ret[2204400] tmp[2204402])
    (1079933 'move' result[1079931] ret[2204400])
    (1079970 call +=[38797] result[1079931] "writing ")
    (1079990 call +=[38797] result[1079931] "byteIndex")
    (1080138 'move' ret[1079919] result[1079931])
    label _end__constructIoErrorMsg[1080100]
    (1833419 '=' _retArg[1833417] ret[1079919])
    (1833423 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1173679](const  ref arg this[1173685]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1173689]:string[26], ref arg _retArg[1834636]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4793[2378747]:string[26] "temp"
    (2378748 'move' "string" "string")
    const-val local__str_literal_3060[2378741]:string[26] "temp"
    (2378742 'move' "writing " "writing ")
    const-val local__str_literal_3058[2378735]:string[26] "temp"
    (2378736 'move' "while " "while ")
    const-val ret[1173693]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173705]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204513]:string[26] "temp"
    (2204516 'move' inlineImm[2204513] "while ")
    ref i_x[2204518]:string[26] "temp"
    (2204522 'move' i_x[2204518](2204520 'set reference' inlineImm[2204513]))
    val ret[2204525]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204527]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429947]:string[26] "temp"
    (2429950 'move' tmp[2429947] i_x[2204518])
    (2204530 call init=[30771] tmp[2204527] tmp[2429947])
    (2204533 'move' ret[2204525] tmp[2204527])
    (1173707 'move' result[1173705] ret[2204525])
    (1173744 call +=[38797] result[1173705] "writing ")
    (1173764 call +=[38797] result[1173705] "string")
    (1173898 'move' ret[1173693] result[1173705])
    label _end__constructIoErrorMsg[1173874]
    (1834638 '=' _retArg[1834636] ret[1173693])
    (1834642 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1175397](const  ref arg this[1175403]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1175407]:codepointIndex[28274], ref arg _retArg[1834650]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4853[2378771]:string[26] "temp"
    (2378772 'move' "codepointIndex" "codepointIndex")
    const-val local__str_literal_3060[2378765]:string[26] "temp"
    (2378766 'move' "writing " "writing ")
    const-val local__str_literal_3058[2378759]:string[26] "temp"
    (2378760 'move' "while " "while ")
    const-val ret[1175411]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175423]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204538]:string[26] "temp"
    (2204541 'move' inlineImm[2204538] "while ")
    ref i_x[2204543]:string[26] "temp"
    (2204547 'move' i_x[2204543](2204545 'set reference' inlineImm[2204538]))
    val ret[2204550]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204552]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429953]:string[26] "temp"
    (2429956 'move' tmp[2429953] i_x[2204543])
    (2204555 call init=[30771] tmp[2204552] tmp[2429953])
    (2204558 'move' ret[2204550] tmp[2204552])
    (1175425 'move' result[1175423] ret[2204550])
    (1175462 call +=[38797] result[1175423] "writing ")
    (1175482 call +=[38797] result[1175423] "codepointIndex")
    (1175632 'move' ret[1175411] result[1175423])
    label _end__constructIoErrorMsg[1175592]
    (1834652 '=' _retArg[1834650] ret[1175411])
    (1834656 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1411634](const  wide-ref arg this[1411640]:channel(true,dynamic,false)[1060947], const  ref arg x[1411644]:ioLiteral[238753], ref arg _retArg[1838382]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_2015[2379822]:string[26] "temp"
    (2379823 'move' "\"" "\"")
    const-val local__str_literal_4994[2379816]:string[26] "temp"
    (2379817 'move' " \"" " \"")
    const-val local__str_literal_4992[2379810]:string[26] "temp"
    (2379811 'move' "ioLiteral" "ioLiteral")
    const-val local__str_literal_3060[2379804]:string[26] "temp"
    (2379805 'move' "writing " "writing ")
    const-val local__str_literal_3058[2379798]:string[26] "temp"
    (2379799 'move' "while " "while ")
    const-val ret[1411648]:string[26] "dead after last mention" "RVV" "temp"
    val result[1411660]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204738]:string[26] "temp"
    (2204741 'move' inlineImm[2204738] "while ")
    ref i_x[2204743]:string[26] "temp"
    (2204747 'move' i_x[2204743](2204745 'set reference' inlineImm[2204738]))
    val ret[2204750]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204752]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430001]:string[26] "temp"
    (2430004 'move' tmp[2430001] i_x[2204743])
    (2204755 call init=[30771] tmp[2204752] tmp[2430001])
    (2204758 'move' ret[2204750] tmp[2204752])
    (1411662 'move' result[1411660] ret[2204750])
    (1411699 call +=[38797] result[1411660] "writing ")
    (1411719 call +=[38797] result[1411660] "ioLiteral")
    const-val call_tmp[1411788]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref call_tmp[2208019]:string[26] "dead after last mention" "maybe param" "temp"
    (2208021 'move' call_tmp[2208019](2208023 '.' x[1411644] val[238728]))
    val ret[2208026]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2208028]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430124]:string[26] "temp"
    (2430127 'move' tmp[2430124] call_tmp[2208019])
    (2208031 call init=[30771] tmp[2208028] tmp[2430124])
    (2208034 'move' ret[2208026] tmp[2208028])
    (1831530 'move' call_tmp[1411788] ret[2208026])
    const-val call_tmp[1411796]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830319]:string[26] "temp"
    wide-ref tmp[2417270]:string[26] "temp"
    (2417274 'move' tmp[2417270](2417272 'set reference' call_tmp[1411788]))
    (1411801 call +[38342] " \"" tmp[2417270] ret_tmp[1830319])
    (1830322 'move' call_tmp[1411796] ret_tmp[1830319])
    const-val call_tmp[1411804]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1830325]:string[26] "temp"
    wide-ref tmp[2417277]:string[26] "temp"
    (2417281 'move' tmp[2417277](2417279 'set reference' "\""))
    (1411809 call +[38342] call_tmp[1411796] tmp[2417277] ret_tmp[1830325])
    (1830328 'move' call_tmp[1411804] ret_tmp[1830325])
    (1411813 call +=[38797] result[1411660] call_tmp[1411804])
    ref i_x[2132949]:string[26] "temp"
    (2132953 'move' i_x[2132949](2132951 'set reference' call_tmp[1411804]))
    wide-ref tmp[2426112]:string[26] "temp"
    (2426115 'move' tmp[2426112] i_x[2132949])
    (2132957 call deinit[30831] tmp[2426112])
    ref i_x[2132961]:string[26] "temp"
    (2132965 'move' i_x[2132961](2132963 'set reference' call_tmp[1411796]))
    wide-ref tmp[2426118]:string[26] "temp"
    (2426121 'move' tmp[2426118] i_x[2132961])
    (2132969 call deinit[30831] tmp[2426118])
    ref i_x[2132973]:string[26] "temp"
    (2132977 'move' i_x[2132973](2132975 'set reference' call_tmp[1411788]))
    wide-ref tmp[2426124]:string[26] "temp"
    (2426127 'move' tmp[2426124] i_x[2132973])
    (2132981 call deinit[30831] tmp[2426124])
    (1411923 'move' ret[1411648] result[1411660])
    label _end__constructIoErrorMsg[1411829]
    (1838384 '=' _retArg[1838382] ret[1411648])
    (1838388 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._constructIoErrorMsg[1428618](const  wide-ref arg this[1428624]:channel(true,dynamic,false)[1060947], const in arg x[1428628]:real(64)[16], ref arg _retArg[1838436]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_4997[2379882]:string[26] "temp"
    (2379883 'move' "real(64)" "real(64)")
    const-val local__str_literal_3060[2379876]:string[26] "temp"
    (2379877 'move' "writing " "writing ")
    const-val local__str_literal_3058[2379870]:string[26] "temp"
    (2379871 'move' "while " "while ")
    const-val ret[1428632]:string[26] "dead after last mention" "RVV" "temp"
    val result[1428644]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204763]:string[26] "temp"
    (2204766 'move' inlineImm[2204763] "while ")
    ref i_x[2204768]:string[26] "temp"
    (2204772 'move' i_x[2204768](2204770 'set reference' inlineImm[2204763]))
    val ret[2204775]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204777]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430007]:string[26] "temp"
    (2430010 'move' tmp[2430007] i_x[2204768])
    (2204780 call init=[30771] tmp[2204777] tmp[2430007])
    (2204783 'move' ret[2204775] tmp[2204777])
    (1428646 'move' result[1428644] ret[2204775])
    (1428683 call +=[38797] result[1428644] "writing ")
    (1428703 call +=[38797] result[1428644] "real(64)")
    (1428853 'move' ret[1428632] result[1428644])
    label _end__constructIoErrorMsg[1428813]
    (1838438 '=' _retArg[1838436] ret[1428632])
    (1838442 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1429191](const  ref arg this[1429197]:channel(true,dynamic,true)[1021825], const  ref arg x[1429201]:[domain(1,int(64),false)] real(64)[1365840], ref arg _retArg[1838450]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4999[2379900]:string[26] "temp"
    (2379901 'move' "[domain(1,int(64),false)] real(64)" "[domain(1,int(64),false)] real(64)")
    const-val local__str_literal_3060[2379894]:string[26] "temp"
    (2379895 'move' "writing " "writing ")
    const-val local__str_literal_3058[2379888]:string[26] "temp"
    (2379889 'move' "while " "while ")
    const-val ret[1429205]:string[26] "dead after last mention" "RVV" "temp"
    val result[1429217]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204788]:string[26] "temp"
    (2204791 'move' inlineImm[2204788] "while ")
    ref i_x[2204793]:string[26] "temp"
    (2204797 'move' i_x[2204793](2204795 'set reference' inlineImm[2204788]))
    val ret[2204800]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204802]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430013]:string[26] "temp"
    (2430016 'move' tmp[2430013] i_x[2204793])
    (2204805 call init=[30771] tmp[2204802] tmp[2430013])
    (2204808 'move' ret[2204800] tmp[2204802])
    (1429219 'move' result[1429217] ret[2204800])
    (1429256 call +=[38797] result[1429217] "writing ")
    (1429276 call +=[38797] result[1429217] "[domain(1,int(64),false)] real(64)")
    (1429432 'move' ret[1429205] result[1429217])
    label _end__constructIoErrorMsg[1429386]
    (1838452 '=' _retArg[1838450] ret[1429205])
    (1838456 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1432375](const  ref arg this[1432381]:channel(true,dynamic,true)[1021825], const  wide-ref arg x[1432385]:ioNewline[238701], ref arg _retArg[1838464]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_5003[2379930]:string[26] "temp"
    (2379931 'move' " newline" " newline")
    const-val local__str_literal_5001[2379924]:string[26] "temp"
    (2379925 'move' "ioNewline" "ioNewline")
    const-val local__str_literal_3060[2379918]:string[26] "temp"
    (2379919 'move' "writing " "writing ")
    const-val local__str_literal_3058[2379912]:string[26] "temp"
    (2379913 'move' "while " "while ")
    const-val ret[1432389]:string[26] "dead after last mention" "RVV" "temp"
    val result[1432401]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204813]:string[26] "temp"
    (2204816 'move' inlineImm[2204813] "while ")
    ref i_x[2204818]:string[26] "temp"
    (2204822 'move' i_x[2204818](2204820 'set reference' inlineImm[2204813]))
    val ret[2204825]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204827]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430019]:string[26] "temp"
    (2430022 'move' tmp[2430019] i_x[2204818])
    (2204830 call init=[30771] tmp[2204827] tmp[2430019])
    (2204833 'move' ret[2204825] tmp[2204827])
    (1432403 'move' result[1432401] ret[2204825])
    (1432440 call +=[38797] result[1432401] "writing ")
    (1432460 call +=[38797] result[1432401] "ioNewline")
    (1432498 call +=[38797] result[1432401] " newline")
    (1432655 'move' ret[1432389] result[1432401])
    label _end__constructIoErrorMsg[1432570]
    (1838466 '=' _retArg[1838464] ret[1432389])
    (1838470 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._constructIoErrorMsg[1433585](const  ref arg this[1433591]:channel(true,dynamic,true)[1021825], const in arg x[1433595]:int(64)[13], ref arg _retArg[1838490]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_4770[2379994]:string[26] "temp"
    (2379995 'move' "int(64)" "int(64)")
    const-val local__str_literal_3060[2379988]:string[26] "temp"
    (2379989 'move' "writing " "writing ")
    const-val local__str_literal_3058[2379982]:string[26] "temp"
    (2379983 'move' "while " "while ")
    const-val ret[1433599]:string[26] "dead after last mention" "RVV" "temp"
    val result[1433611]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204838]:string[26] "temp"
    (2204841 'move' inlineImm[2204838] "while ")
    ref i_x[2204843]:string[26] "temp"
    (2204847 'move' i_x[2204843](2204845 'set reference' inlineImm[2204838]))
    val ret[2204850]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204852]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2430025]:string[26] "temp"
    (2430028 'move' tmp[2430025] i_x[2204843])
    (2204855 call init=[30771] tmp[2204852] tmp[2430025])
    (2204858 'move' ret[2204850] tmp[2204852])
    (1433613 'move' result[1433611] ret[2204850])
    (1433650 call +=[38797] result[1433611] "writing ")
    (1433670 call +=[38797] result[1433611] "int(64)")
    (1433804 'move' ret[1433599] result[1433611])
    label _end__constructIoErrorMsg[1433780]
    (1838492 '=' _retArg[1838490] ret[1433599])
    (1838496 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1067012](const  ref arg this[1067018]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1067022]:byteIndex[28170], const  ref arg loc[1067024]:locale[28], ref arg error_out[1810116]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2378181]:string[26] "temp"
    (2378182 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1068361]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415309]:qio_channel_ptr_t[231465] "temp"
    (1068365 'move' tmp[2415309](2369332 '.v' this[1067018] _channel_internal[1060940]))
    (2415312 'move' coerce_tmp[1068361] tmp[2415309])
    val error[1810121]:__wide_Error[2381123] "error variable" "temp"
    (1810123 'move' error[1810121] nil[44])
    val ret[2268503]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2268505]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2268507]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2268509]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2268511 'move' call_tmp[2268509](2268514 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2268517 'move' call_tmp[2268507] call_tmp[2268509])
    const-val call_tmp[2268520]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2268522]:locale[28] "temp"
    wide-ref tmp[2434832]:chpl_localeID_t[209294] "temp"
    (2434836 'move' tmp[2434832](2434834 'set reference' call_tmp[2268507]))
    (2268525 call chpl_localeID_to_locale[92849] tmp[2434832] ret_tmp[2268522])
    (2268528 'move' call_tmp[2268520] ret_tmp[2268522])
    (2268531 'move' call_tmp[2268505] call_tmp[2268520])
    const-val call_tmp[2268534]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2268536]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2268539 call init[1068388] initTemp[2268536] call_tmp[2268505] coerce_tmp[1068361] loc[1067024])
    (2268544 'move' call_tmp[2268534] initTemp[2268536])
    val writer[2268547]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2268549 'move' writer[2268547] call_tmp[2268534])
    const-val call_tmp[2268554]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268556 'move' call_tmp[2268554](2268559 call qio_int_to_err[223634] 0))
    val error[2268564]:__wide_Error[2381123] "error variable" "temp"
    (2268566 'move' error[2268564] nil[44])
    ref tmp[2434839]:__wide_Error[2381123] "temp"
    (2434843 'move' tmp[2434839](2434841 'set reference' error[2268564]))
    (2268570 call writeThis[1068620] x[1067022] writer[2268547] tmp[2434839])
    val errorExists[2268574]:bool[10] "temp"
    (2268576 'move' errorExists[2268574](2268578 '!=' error[2268564] nil[44]))
    if errorExists[2268574]
    {
      gotoErrorHandling handler[2268586] handler[2268586]
    }
    label handler[2268586]
    val errorExists[2268588]:bool[10] "temp"
    (2268590 'move' errorExists[2268588](2268592 '!=' error[2268564] nil[44]))
    if errorExists[2268588]
    {
      (2268597 '=' error[1810121] error[2268564])
      (2268600 '.=' writer[2268547] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2268604]:channel(true,dynamic,false)[1060947] "temp"
      (2268606 'move' i_x[2268604](2268608 'set reference' writer[2268547]))
      (2268611 call deinit[1536215] i_x[2268604])
      ref i_x[2268613]:locale[28] "temp"
      (2268615 'move' i_x[2268613](2268617 'set reference' call_tmp[2268505]))
      wide-ref tmp[2434846]:locale[28] "temp"
      (2434849 'move' tmp[2434846] i_x[2268613])
      (2268620 call deinit[90185] tmp[2434846])
      gotoErrorHandlingReturn _end__write_one_internal[2268650] _end__write_one_internal[2268650]
    }
    (2268625 'move' ret[2268503] call_tmp[2268554])
    (2268628 '.=' writer[2268547] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2268632]:channel(true,dynamic,false)[1060947] "temp"
    (2268634 'move' i_x[2268632](2268636 'set reference' writer[2268547]))
    (2268639 call deinit[1536215] i_x[2268632])
    ref i_x[2268641]:locale[28] "temp"
    (2268643 'move' i_x[2268641](2268645 'set reference' call_tmp[2268505]))
    wide-ref tmp[2434852]:locale[28] "temp"
    (2434855 'move' tmp[2434852] i_x[2268641])
    (2268648 call deinit[90185] tmp[2434852])
    label _end__write_one_internal[2268650]
    val errorExists[2108888]:bool[10] "temp"
    (2108893 'move' errorExists[2108888](2108890 '!=' error[1810121] nil[44]))
    if errorExists[2108888]
    {
      (1810127 '=' error_out[1810116] error[1810121])
      gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
    }
    const-val call_tmp[2206316]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206318 'move' call_tmp[2206316](2206321 call qio_err_to_int[223616] ret[2268503]))
    const-val call_tmp[2206323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206325 'move' call_tmp[2206323](2206327 '==' call_tmp[2206316] 0))
    const-val call_tmp[2206330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206332 'move' call_tmp[2206330](2206334 '!' call_tmp[2206323]))
    if call_tmp[2206330]
    {
      const-val call_tmp[1067081]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833411]:string[26] "temp"
      (1067089 call _constructIoErrorMsg[1079905] this[1067018] x[1067022] ret_tmp[1833411])
      (1833414 'move' call_tmp[1067081] ret_tmp[1833411])
      val msg[1067092]:string[26] "dead at end of block" "insert auto destroy"
      (1067094 'move' msg[1067092] call_tmp[1067081])
      const-val call_tmp[2206083]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206085 'move' call_tmp[2206083](2206088 call qio_err_to_int[223616] ret[2268503]))
      const-val call_tmp[2206090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206092 'move' call_tmp[2206090](2206094 '==' call_tmp[2206083] EILSEQ[224444]))
      if call_tmp[2206090]
      {
        const-val call_tmp[1067123]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830007]:string[26] "temp"
        wide-ref tmp[2415282]:string[26] "temp"
        (2415286 'move' tmp[2415282](2415284 'set reference' msg[1067092]))
        (1067128 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2415282] ret_tmp[1830007])
        (1830010 'move' call_tmp[1067123] ret_tmp[1830007])
        wide-ref tmp[2415289]:string[26] "temp"
        (2415293 'move' tmp[2415289](2415291 'set reference' msg[1067092]))
        (1067132 call =[38269] tmp[2415289] call_tmp[1067123])
        ref i_x[2130921]:string[26] "temp"
        (2130925 'move' i_x[2130921](2130923 'set reference' call_tmp[1067123]))
        wide-ref tmp[2425440]:string[26] "temp"
        (2425443 'move' tmp[2425440] i_x[2130921])
        (2130929 call deinit[30831] tmp[2425440])
      }
      val error[1810135]:__wide_Error[2381123] "error variable" "temp"
      (1810144 'move' error[1810135] nil[44])
      wide-ref tmp[2415296]:channel(true,dynamic,false)[1060947] "temp"
      (2415299 'move' tmp[2415296] this[1067018])
      ref tmp[2415302]:__wide_Error[2381123] "temp"
      (2415306 'move' tmp[2415302](2415304 'set reference' error[1810135]))
      (1067144 call _ch_ioerror[1062865] tmp[2415296] ret[2268503] msg[1067092] tmp[2415302])
      val errorExists[2108896]:bool[10] "temp"
      (2108901 'move' errorExists[2108896](2108898 '!=' error[1810135] nil[44]))
      if errorExists[2108896]
      {
        gotoErrorHandling handler[1810136] handler[1810136]
      }
      label handler[1810136]
      val errorExists[2108904]:bool[10] "temp"
      (2108909 'move' errorExists[2108904](2108906 '!=' error[1810135] nil[44]))
      if errorExists[2108904]
      {
        (1810151 '=' error_out[1810116] error[1810135])
        ref i_x[2130933]:string[26] "temp"
        (2130937 'move' i_x[2130933](2130935 'set reference' msg[1067092]))
        wide-ref tmp[2425446]:string[26] "temp"
        (2425449 'move' tmp[2425446] i_x[2130933])
        (2130941 call deinit[30831] tmp[2425446])
        gotoErrorHandlingReturn _end_writeOne[1810118] _end_writeOne[1810118]
      }
      ref i_x[2130945]:string[26] "temp"
      (2130949 'move' i_x[2130945](2130947 'set reference' msg[1067092]))
      wide-ref tmp[2425452]:string[26] "temp"
      (2425455 'move' tmp[2425452] i_x[2130945])
      (2130953 call deinit[30831] tmp[2425452])
    }
    label _end_writeOne[1810118]
    (1067152 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1068937](const  wide-ref arg this[1068943]:channel(true,dynamic,false)[1060947], const in arg x[1068947]:int(64)[13], const  ref arg loc[1068949]:locale[28], ref arg error_out[1810353]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2378217]:string[26] "temp"
    (2378218 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1070205]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415375]:qio_channel_ptr_t[231465] "temp"
    (1070209 'move' tmp[2415375](2369355 '.v' this[1068943] _channel_internal[1060940]))
    (2415378 'move' coerce_tmp[1070205] tmp[2415375])
    val error[1810358]:__wide_Error[2381123] "error variable" "temp"
    (1810360 'move' error[1810358] nil[44])
    val ret[2268971]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2268973]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2268975]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268977 'move' call_tmp[2268975](2268980 call qio_int_to_err[223634] 0))
    (2268982 'move' e[2268973] call_tmp[2268975])
    const-val call_tmp[2268985]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2268987 'move' call_tmp[2268985](2268990 call qio_channel_binary[233057] coerce_tmp[1070205]))
    const-val call_tmp[2268992]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2268994 'move' call_tmp[2268992](2268997 call qio_channel_byteorder[233072] coerce_tmp[1070205]))
    const-val coerce_tmp[2269004]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269006 'move' coerce_tmp[2269004](2269008 'cast' int(64)[13] call_tmp[2268985]))
    const-val call_tmp[2269011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269013 'move' call_tmp[2269011](2269015 '!=' coerce_tmp[2269004] 0))
    if call_tmp[2269011]
    {
      const-val tmp[2269020]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2269022]:__wide_Error[2381123] "error variable" "temp"
      (2269024 'move' error[2269022] nil[44])
      ref tmp[2434872]:__wide_Error[2381123] "temp"
      (2434876 'move' tmp[2434872](2434874 'set reference' error[2269022]))
      (2269027 'move' tmp[2269020](2269030 call _cast[1070308] call_tmp[2268992] tmp[2434872]))
      val errorExists[2269033]:bool[10] "temp"
      (2269035 'move' errorExists[2269033](2269037 '!=' error[2269022] nil[44]))
      if errorExists[2269033]
      {
        (2269042 '=' error[1810358] error[2269022])
        gotoErrorHandlingReturn _end__write_one_internal[2269146] _end__write_one_internal[2269146]
      }
      const-val call_tmp[2269048]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269050 'move' call_tmp[2269048](2269052 '==' tmp[2269020] big[230926]))
      if call_tmp[2269048]
      {
        const-val call_tmp[2269057]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2269059]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269061 'move' coerce_tmp[2269059](2269063 'cast' int(32)[95] 0))
        (2269066 'move' call_tmp[2269057](2269069 call qio_channel_write_int64[234050] coerce_tmp[2269059] 2 coerce_tmp[1070205] x[1068947]))
        (2269074 '=' e[2268973] call_tmp[2269057])
      }
      {
        const-val call_tmp[2269078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269080 'move' call_tmp[2269078](2269082 '==' tmp[2269020] little[230929]))
        if call_tmp[2269078]
        {
          const-val call_tmp[2269087]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269089]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269091 'move' coerce_tmp[2269089](2269093 'cast' int(32)[95] 0))
          (2269096 'move' call_tmp[2269087](2269099 call qio_channel_write_int64[234050] coerce_tmp[2269089] 3 coerce_tmp[1070205] x[1068947]))
          (2269104 '=' e[2268973] call_tmp[2269087])
        }
        {
          const-val call_tmp[2269108]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269110]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269112 'move' coerce_tmp[2269110](2269114 'cast' int(32)[95] 0))
          (2269117 'move' call_tmp[2269108](2269120 call qio_channel_write_int64[234050] coerce_tmp[2269110] 1 coerce_tmp[1070205] x[1068947]))
          (2269125 '=' e[2268973] call_tmp[2269108])
        }
      }
    }
    {
      const-val call_tmp[2269131]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269133 'move' call_tmp[2269131](2269136 call _write_text_internal[1078760] coerce_tmp[1070205] x[1068947]))
      (2269139 '=' e[2268973] call_tmp[2269131])
    }
    (2269143 'move' ret[2268971] e[2268973])
    label _end__write_one_internal[2269146]
    val errorExists[2109008]:bool[10] "temp"
    (2109013 'move' errorExists[2109008](2109010 '!=' error[1810358] nil[44]))
    if errorExists[2109008]
    {
      (1810364 '=' error_out[1810353] error[1810358])
      gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
    }
    const-val call_tmp[2206293]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206295 'move' call_tmp[2206293](2206298 call qio_err_to_int[223616] ret[2268971]))
    const-val call_tmp[2206300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206302 'move' call_tmp[2206300](2206304 '==' call_tmp[2206293] 0))
    const-val call_tmp[2206307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206309 'move' call_tmp[2206307](2206311 '!' call_tmp[2206300]))
    if call_tmp[2206307]
    {
      const-val call_tmp[1069006]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1833397]:string[26] "temp"
      (1069014 call _constructIoErrorMsg[1079612] this[1068943] x[1068947] ret_tmp[1833397])
      (1833400 'move' call_tmp[1069006] ret_tmp[1833397])
      val msg[1069017]:string[26] "dead at end of block" "insert auto destroy"
      (1069019 'move' msg[1069017] call_tmp[1069006])
      const-val call_tmp[2206066]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206068 'move' call_tmp[2206066](2206071 call qio_err_to_int[223616] ret[2268971]))
      const-val call_tmp[2206073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206075 'move' call_tmp[2206073](2206077 '==' call_tmp[2206066] EILSEQ[224444]))
      if call_tmp[2206073]
      {
        const-val call_tmp[1069048]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830013]:string[26] "temp"
        wide-ref tmp[2415354]:string[26] "temp"
        (2415358 'move' tmp[2415354](2415356 'set reference' msg[1069017]))
        (1069053 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2415354] ret_tmp[1830013])
        (1830016 'move' call_tmp[1069048] ret_tmp[1830013])
        wide-ref tmp[2415361]:string[26] "temp"
        (2415365 'move' tmp[2415361](2415363 'set reference' msg[1069017]))
        (1069057 call =[38269] tmp[2415361] call_tmp[1069048])
        ref i_x[2130957]:string[26] "temp"
        (2130961 'move' i_x[2130957](2130959 'set reference' call_tmp[1069048]))
        wide-ref tmp[2425458]:string[26] "temp"
        (2425461 'move' tmp[2425458] i_x[2130957])
        (2130965 call deinit[30831] tmp[2425458])
      }
      val error[1810372]:__wide_Error[2381123] "error variable" "temp"
      (1810381 'move' error[1810372] nil[44])
      ref tmp[2415368]:__wide_Error[2381123] "temp"
      (2415372 'move' tmp[2415368](2415370 'set reference' error[1810372]))
      (1069069 call _ch_ioerror[1062865] this[1068943] ret[2268971] msg[1069017] tmp[2415368])
      val errorExists[2109016]:bool[10] "temp"
      (2109021 'move' errorExists[2109016](2109018 '!=' error[1810372] nil[44]))
      if errorExists[2109016]
      {
        gotoErrorHandling handler[1810373] handler[1810373]
      }
      label handler[1810373]
      val errorExists[2109024]:bool[10] "temp"
      (2109029 'move' errorExists[2109024](2109026 '!=' error[1810372] nil[44]))
      if errorExists[2109024]
      {
        (1810388 '=' error_out[1810353] error[1810372])
        ref i_x[2130969]:string[26] "temp"
        (2130973 'move' i_x[2130969](2130971 'set reference' msg[1069017]))
        wide-ref tmp[2425464]:string[26] "temp"
        (2425467 'move' tmp[2425464] i_x[2130969])
        (2130977 call deinit[30831] tmp[2425464])
        gotoErrorHandlingReturn _end_writeOne[1810355] _end_writeOne[1810355]
      }
      ref i_x[2130981]:string[26] "temp"
      (2130985 'move' i_x[2130981](2130983 'set reference' msg[1069017]))
      wide-ref tmp[2425470]:string[26] "temp"
      (2425473 'move' tmp[2425470] i_x[2130981])
      (2130989 call deinit[30831] tmp[2425470])
    }
    label _end_writeOne[1810355]
    (1069077 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1165160](const  ref arg this[1165166]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1165170]:string[26], const  ref arg loc[1165172]:locale[28], ref arg error_out[1811151]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2378723]:string[26] "temp"
    (2378724 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val local__str_literal_4795[2378715]:string[26] "temp"
    (2378716 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val coerce_tmp[1168030]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415879]:qio_channel_ptr_t[231465] "temp"
    (1168034 'move' tmp[2415879](2370469 '.v' this[1165166] _channel_internal[1060940]))
    (2415882 'move' coerce_tmp[1168030] tmp[2415879])
    val error[1811156]:__wide_Error[2381123] "error variable" "temp"
    (1811158 'move' error[1811156] nil[44])
    val ret[2273765]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2273767]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2273769]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2273771 'move' call_tmp[2273769](2273774 call qio_int_to_err[223634] 0))
    (2273776 'move' e[2273767] call_tmp[2273769])
    const-val call_tmp[2273779]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2273781 'move' call_tmp[2273779](2273784 call qio_channel_binary[233057] coerce_tmp[1168030]))
    const-val call_tmp[2273786]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2273788 'move' call_tmp[2273786](2273791 call qio_channel_byteorder[233072] coerce_tmp[1168030]))
    const-val coerce_tmp[2273798]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2273800 'move' coerce_tmp[2273798](2273802 'cast' int(64)[13] call_tmp[2273779]))
    const-val call_tmp[2273805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2273807 'move' call_tmp[2273805](2273809 '!=' coerce_tmp[2273798] 0))
    if call_tmp[2273805]
    {
      const-val tmp[2273814]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2273816]:__wide_Error[2381123] "error variable" "temp"
      (2273818 'move' error[2273816] nil[44])
      ref tmp[2435189]:__wide_Error[2381123] "temp"
      (2435193 'move' tmp[2435189](2435191 'set reference' error[2273816]))
      (2273821 'move' tmp[2273814](2273824 call _cast[1070308] call_tmp[2273786] tmp[2435189]))
      val errorExists[2273827]:bool[10] "temp"
      (2273829 'move' errorExists[2273827](2273831 '!=' error[2273816] nil[44]))
      if errorExists[2273827]
      {
        (2273836 '=' error[1811156] error[2273816])
        gotoErrorHandlingReturn _end__write_one_internal[2274435] _end__write_one_internal[2274435]
      }
      const-val call_tmp[2273842]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2273844 'move' call_tmp[2273842](2273846 '==' tmp[2273814] big[230926]))
      if call_tmp[2273842]
      {
        val ret[2273851]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2273853]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2273855]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2435196]:int(32)[95] "temp"
        (2273857 'move' tmp[2435196](2273859 '.v' x[1165170] locale_id[30754]))
        (2435199 'move' coerce_tmp[2273855] tmp[2435196])
        const-val call_tmp[2273862]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273864 'move' call_tmp[2273862](2273866 '==' coerce_tmp[2273855] chpl_nodeID[208152]))
        if call_tmp[2273862]
        {
          const-val ret[2273871]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2273873]:string[26] "dead at end of block" "insert auto destroy"
          (2273876 call init[30760] ret[2273873])
          const-val coerce_tmp[2273878]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435202]:int(64)[13] "temp"
          (2273880 'move' tmp[2435202](2273882 '.v' x[1165170] cachedNumCodepoints[30731]))
          (2435205 'move' coerce_tmp[2273878] tmp[2435202])
          (2273885 '.=' ret[2273873] cachedNumCodepoints[30731] coerce_tmp[2273878])
          (2273890 call initWithBorrowedBuffer[948874] ret[2273873] x[1165170])
          (2273893 'move' ret[2273871] ret[2273873])
          (2273896 'move' ret[2273853] ret[2273871])
          gotoReturn _end_localize[2273914] _end_localize[2273914]
        }
        {
          const-val x[2273902]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2273905 call init=[30771] x[2273902] x[1165170])
          (2273908 'move' ret[2273853] x[2273902])
          gotoReturn _end_localize[2273914] _end_localize[2273914]
        }
        label _end_localize[2273914]
        val local_x[2273916]:string[26] "dead at end of block" "insert auto destroy"
        (2273918 'move' local_x[2273916] ret[2273853])
        const-val tmp[2273921]:bool[10] "dead after last mention" "const" "temp"
        val tmp[2435208]:bool[10] "temp"
        (2273923 'move' tmp[2435208](2273925 '.v' local_x[2273916] hasEscapes[30749]))
        (2435211 'move' tmp[2273921] tmp[2435208])
        if tmp[2273921]
        {
          const-val call_tmp[2273930]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          (2273932 'move' call_tmp[2273930](2273935 call qio_int_to_err[223634] EILSEQ[224444]))
          (2273937 '=' ret[2273851] call_tmp[2273930])
          ref i_x[2273940]:string[26] "temp"
          (2273942 'move' i_x[2273940](2273944 'set reference' local_x[2273916]))
          wide-ref tmp[2435214]:string[26] "temp"
          (2435217 'move' tmp[2435214] i_x[2273940])
          (2273947 call deinit[30831] tmp[2435214])
          gotoReturn _end__write_binary_internal[2274031] _end__write_binary_internal[2274031]
        }
        const-val call_tmp[2273952]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273954 'move' call_tmp[2273952](2273957 call qio_channel_str_style[233087] coerce_tmp[1168030]))
        const-val coerce_tmp[2273959]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2435220]:int(32)[95] "temp"
        (2273961 'move' tmp[2435220](2273963 '.v' local_x[2273916] locale_id[30754]))
        (2435223 'move' coerce_tmp[2273959] tmp[2435220])
        const-val call_tmp[2273966]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273968 'move' call_tmp[2273966](2273970 '!=' coerce_tmp[2273959] chpl_nodeID[208152]))
        if call_tmp[2273966]
        {
          (2273976 call halt[154067] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2273979]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        val tmp[2435226]:c_ptr(uint(8))[937423] "temp"
        (2273981 'move' tmp[2435226](2273983 '.v' local_x[2273916] buff[30737]))
        (2435229 'move' coerce_tmp[2273979] tmp[2435226])
        const-val call_tmp[2273986]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2273988 'move' call_tmp[2273986](2273990 'cast' c_string[19] coerce_tmp[2273979]))
        val ret[2273993]:int(64)[13] "dead after last mention" "RVV" "temp"
        val tmp[2435232]:int(64)[13] "temp"
        (2273995 'move' tmp[2435232](2273997 '.v' local_x[2273916] buffLen[30719]))
        (2435235 'move' ret[2273993] tmp[2435232])
        const-val call_tmp[2274000]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2274002]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2274004 'move' coerce_tmp[2274002](2274006 'cast' int(32)[95] 0))
        (2274009 'move' call_tmp[2274000](2274012 call qio_channel_write_string[234389] coerce_tmp[2274002] 2 call_tmp[2273952] coerce_tmp[1168030] call_tmp[2273986] ret[2273993]))
        (2274019 'move' ret[2273851] call_tmp[2274000])
        ref i_x[2274022]:string[26] "temp"
        (2274024 'move' i_x[2274022](2274026 'set reference' local_x[2273916]))
        wide-ref tmp[2435238]:string[26] "temp"
        (2435241 'move' tmp[2435238] i_x[2274022])
        (2274029 call deinit[30831] tmp[2435238])
        label _end__write_binary_internal[2274031]
        (2274033 '=' e[2273767] ret[2273851])
      }
      {
        const-val call_tmp[2274037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2274039 'move' call_tmp[2274037](2274041 '==' tmp[2273814] little[230929]))
        if call_tmp[2274037]
        {
          val ret[2274046]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2274048]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2274050]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435244]:int(32)[95] "temp"
          (2274052 'move' tmp[2435244](2274054 '.v' x[1165170] locale_id[30754]))
          (2435247 'move' coerce_tmp[2274050] tmp[2435244])
          const-val call_tmp[2274057]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274059 'move' call_tmp[2274057](2274061 '==' coerce_tmp[2274050] chpl_nodeID[208152]))
          if call_tmp[2274057]
          {
            const-val ret[2274066]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2274068]:string[26] "dead at end of block" "insert auto destroy"
            (2274071 call init[30760] ret[2274068])
            const-val coerce_tmp[2274073]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2435250]:int(64)[13] "temp"
            (2274075 'move' tmp[2435250](2274077 '.v' x[1165170] cachedNumCodepoints[30731]))
            (2435253 'move' coerce_tmp[2274073] tmp[2435250])
            (2274080 '.=' ret[2274068] cachedNumCodepoints[30731] coerce_tmp[2274073])
            (2274085 call initWithBorrowedBuffer[948874] ret[2274068] x[1165170])
            (2274088 'move' ret[2274066] ret[2274068])
            (2274091 'move' ret[2274048] ret[2274066])
            gotoReturn _end_localize[2274109] _end_localize[2274109]
          }
          {
            const-val x[2274097]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2274100 call init=[30771] x[2274097] x[1165170])
            (2274103 'move' ret[2274048] x[2274097])
            gotoReturn _end_localize[2274109] _end_localize[2274109]
          }
          label _end_localize[2274109]
          val local_x[2274111]:string[26] "dead at end of block" "insert auto destroy"
          (2274113 'move' local_x[2274111] ret[2274048])
          const-val tmp[2274116]:bool[10] "dead after last mention" "const" "temp"
          val tmp[2435256]:bool[10] "temp"
          (2274118 'move' tmp[2435256](2274120 '.v' local_x[2274111] hasEscapes[30749]))
          (2435259 'move' tmp[2274116] tmp[2435256])
          if tmp[2274116]
          {
            const-val call_tmp[2274125]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
            (2274127 'move' call_tmp[2274125](2274130 call qio_int_to_err[223634] EILSEQ[224444]))
            (2274132 '=' ret[2274046] call_tmp[2274125])
            ref i_x[2274135]:string[26] "temp"
            (2274137 'move' i_x[2274135](2274139 'set reference' local_x[2274111]))
            wide-ref tmp[2435262]:string[26] "temp"
            (2435265 'move' tmp[2435262] i_x[2274135])
            (2274142 call deinit[30831] tmp[2435262])
            gotoReturn _end__write_binary_internal[2274226] _end__write_binary_internal[2274226]
          }
          const-val call_tmp[2274147]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274149 'move' call_tmp[2274147](2274152 call qio_channel_str_style[233087] coerce_tmp[1168030]))
          const-val coerce_tmp[2274154]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435268]:int(32)[95] "temp"
          (2274156 'move' tmp[2435268](2274158 '.v' local_x[2274111] locale_id[30754]))
          (2435271 'move' coerce_tmp[2274154] tmp[2435268])
          const-val call_tmp[2274161]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274163 'move' call_tmp[2274161](2274165 '!=' coerce_tmp[2274154] chpl_nodeID[208152]))
          if call_tmp[2274161]
          {
            (2274171 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2274174]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435274]:c_ptr(uint(8))[937423] "temp"
          (2274176 'move' tmp[2435274](2274178 '.v' local_x[2274111] buff[30737]))
          (2435277 'move' coerce_tmp[2274174] tmp[2435274])
          const-val call_tmp[2274181]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274183 'move' call_tmp[2274181](2274185 'cast' c_string[19] coerce_tmp[2274174]))
          val ret[2274188]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2435280]:int(64)[13] "temp"
          (2274190 'move' tmp[2435280](2274192 '.v' local_x[2274111] buffLen[30719]))
          (2435283 'move' ret[2274188] tmp[2435280])
          const-val call_tmp[2274195]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2274197]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274199 'move' coerce_tmp[2274197](2274201 'cast' int(32)[95] 0))
          (2274204 'move' call_tmp[2274195](2274207 call qio_channel_write_string[234389] coerce_tmp[2274197] 3 call_tmp[2274147] coerce_tmp[1168030] call_tmp[2274181] ret[2274188]))
          (2274214 'move' ret[2274046] call_tmp[2274195])
          ref i_x[2274217]:string[26] "temp"
          (2274219 'move' i_x[2274217](2274221 'set reference' local_x[2274111]))
          wide-ref tmp[2435286]:string[26] "temp"
          (2435289 'move' tmp[2435286] i_x[2274217])
          (2274224 call deinit[30831] tmp[2435286])
          label _end__write_binary_internal[2274226]
          (2274228 '=' e[2273767] ret[2274046])
        }
        {
          val ret[2274232]:syserr[223584] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2274234]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2274236]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435292]:int(32)[95] "temp"
          (2274238 'move' tmp[2435292](2274240 '.v' x[1165170] locale_id[30754]))
          (2435295 'move' coerce_tmp[2274236] tmp[2435292])
          const-val call_tmp[2274243]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274245 'move' call_tmp[2274243](2274247 '==' coerce_tmp[2274236] chpl_nodeID[208152]))
          if call_tmp[2274243]
          {
            const-val ret[2274252]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2274254]:string[26] "dead at end of block" "insert auto destroy"
            (2274257 call init[30760] ret[2274254])
            const-val coerce_tmp[2274259]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            val tmp[2435298]:int(64)[13] "temp"
            (2274261 'move' tmp[2435298](2274263 '.v' x[1165170] cachedNumCodepoints[30731]))
            (2435301 'move' coerce_tmp[2274259] tmp[2435298])
            (2274266 '.=' ret[2274254] cachedNumCodepoints[30731] coerce_tmp[2274259])
            (2274271 call initWithBorrowedBuffer[948874] ret[2274254] x[1165170])
            (2274274 'move' ret[2274252] ret[2274254])
            (2274277 'move' ret[2274234] ret[2274252])
            gotoReturn _end_localize[2274295] _end_localize[2274295]
          }
          {
            const-val x[2274283]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2274286 call init=[30771] x[2274283] x[1165170])
            (2274289 'move' ret[2274234] x[2274283])
            gotoReturn _end_localize[2274295] _end_localize[2274295]
          }
          label _end_localize[2274295]
          val local_x[2274297]:string[26] "dead at end of block" "insert auto destroy"
          (2274299 'move' local_x[2274297] ret[2274234])
          const-val tmp[2274302]:bool[10] "dead after last mention" "const" "temp"
          val tmp[2435304]:bool[10] "temp"
          (2274304 'move' tmp[2435304](2274306 '.v' local_x[2274297] hasEscapes[30749]))
          (2435307 'move' tmp[2274302] tmp[2435304])
          if tmp[2274302]
          {
            const-val call_tmp[2274311]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
            (2274313 'move' call_tmp[2274311](2274316 call qio_int_to_err[223634] EILSEQ[224444]))
            (2274318 '=' ret[2274232] call_tmp[2274311])
            ref i_x[2274321]:string[26] "temp"
            (2274323 'move' i_x[2274321](2274325 'set reference' local_x[2274297]))
            wide-ref tmp[2435310]:string[26] "temp"
            (2435313 'move' tmp[2435310] i_x[2274321])
            (2274328 call deinit[30831] tmp[2435310])
            gotoReturn _end__write_binary_internal[2274412] _end__write_binary_internal[2274412]
          }
          const-val call_tmp[2274333]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274335 'move' call_tmp[2274333](2274338 call qio_channel_str_style[233087] coerce_tmp[1168030]))
          const-val coerce_tmp[2274340]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435316]:int(32)[95] "temp"
          (2274342 'move' tmp[2435316](2274344 '.v' local_x[2274297] locale_id[30754]))
          (2435319 'move' coerce_tmp[2274340] tmp[2435316])
          const-val call_tmp[2274347]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274349 'move' call_tmp[2274347](2274351 '!=' coerce_tmp[2274340] chpl_nodeID[208152]))
          if call_tmp[2274347]
          {
            (2274357 call halt[154067] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2274360]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          val tmp[2435322]:c_ptr(uint(8))[937423] "temp"
          (2274362 'move' tmp[2435322](2274364 '.v' local_x[2274297] buff[30737]))
          (2435325 'move' coerce_tmp[2274360] tmp[2435322])
          const-val call_tmp[2274367]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2274369 'move' call_tmp[2274367](2274371 'cast' c_string[19] coerce_tmp[2274360]))
          val ret[2274374]:int(64)[13] "dead after last mention" "RVV" "temp"
          val tmp[2435328]:int(64)[13] "temp"
          (2274376 'move' tmp[2435328](2274378 '.v' local_x[2274297] buffLen[30719]))
          (2435331 'move' ret[2274374] tmp[2435328])
          const-val call_tmp[2274381]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2274383]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2274385 'move' coerce_tmp[2274383](2274387 'cast' int(32)[95] 0))
          (2274390 'move' call_tmp[2274381](2274393 call qio_channel_write_string[234389] coerce_tmp[2274383] 1 call_tmp[2274333] coerce_tmp[1168030] call_tmp[2274367] ret[2274374]))
          (2274400 'move' ret[2274232] call_tmp[2274381])
          ref i_x[2274403]:string[26] "temp"
          (2274405 'move' i_x[2274403](2274407 'set reference' local_x[2274297]))
          wide-ref tmp[2435334]:string[26] "temp"
          (2435337 'move' tmp[2435334] i_x[2274403])
          (2274410 call deinit[30831] tmp[2435334])
          label _end__write_binary_internal[2274412]
          (2274414 '=' e[2273767] ret[2274232])
        }
      }
    }
    {
      const-val call_tmp[2274420]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2274422 'move' call_tmp[2274420](2274425 call _write_text_internal[1172844] coerce_tmp[1168030] x[1165170]))
      (2274428 '=' e[2273767] call_tmp[2274420])
    }
    (2274432 'move' ret[2273765] e[2273767])
    label _end__write_one_internal[2274435]
    val errorExists[2109400]:bool[10] "temp"
    (2109405 'move' errorExists[2109400](2109402 '!=' error[1811156] nil[44]))
    if errorExists[2109400]
    {
      (1811162 '=' error_out[1811151] error[1811156])
      gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
    }
    const-val call_tmp[2206339]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206341 'move' call_tmp[2206339](2206344 call qio_err_to_int[223616] ret[2273765]))
    const-val call_tmp[2206346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206348 'move' call_tmp[2206346](2206350 '==' call_tmp[2206339] 0))
    const-val call_tmp[2206353]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206355 'move' call_tmp[2206353](2206357 '!' call_tmp[2206346]))
    if call_tmp[2206353]
    {
      const-val call_tmp[1165229]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834630]:string[26] "temp"
      (1165237 call _constructIoErrorMsg[1173679] this[1165166] x[1165170] ret_tmp[1834630])
      (1834633 'move' call_tmp[1165229] ret_tmp[1834630])
      val msg[1165240]:string[26] "dead at end of block" "insert auto destroy"
      (1165242 'move' msg[1165240] call_tmp[1165229])
      const-val call_tmp[2206100]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206102 'move' call_tmp[2206100](2206105 call qio_err_to_int[223616] ret[2273765]))
      const-val call_tmp[2206107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206109 'move' call_tmp[2206107](2206111 '==' call_tmp[2206100] EILSEQ[224444]))
      if call_tmp[2206107]
      {
        const-val call_tmp[1165271]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830097]:string[26] "temp"
        wide-ref tmp[2415852]:string[26] "temp"
        (2415856 'move' tmp[2415852](2415854 'set reference' msg[1165240]))
        (1165276 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2415852] ret_tmp[1830097])
        (1830100 'move' call_tmp[1165271] ret_tmp[1830097])
        wide-ref tmp[2415859]:string[26] "temp"
        (2415863 'move' tmp[2415859](2415861 'set reference' msg[1165240]))
        (1165280 call =[38269] tmp[2415859] call_tmp[1165271])
        ref i_x[2131545]:string[26] "temp"
        (2131549 'move' i_x[2131545](2131547 'set reference' call_tmp[1165271]))
        wide-ref tmp[2425728]:string[26] "temp"
        (2425731 'move' tmp[2425728] i_x[2131545])
        (2131553 call deinit[30831] tmp[2425728])
      }
      val error[1811170]:__wide_Error[2381123] "error variable" "temp"
      (1811179 'move' error[1811170] nil[44])
      wide-ref tmp[2415866]:channel(true,dynamic,false)[1060947] "temp"
      (2415869 'move' tmp[2415866] this[1165166])
      ref tmp[2415872]:__wide_Error[2381123] "temp"
      (2415876 'move' tmp[2415872](2415874 'set reference' error[1811170]))
      (1165292 call _ch_ioerror[1062865] tmp[2415866] ret[2273765] msg[1165240] tmp[2415872])
      val errorExists[2109408]:bool[10] "temp"
      (2109413 'move' errorExists[2109408](2109410 '!=' error[1811170] nil[44]))
      if errorExists[2109408]
      {
        gotoErrorHandling handler[1811171] handler[1811171]
      }
      label handler[1811171]
      val errorExists[2109416]:bool[10] "temp"
      (2109421 'move' errorExists[2109416](2109418 '!=' error[1811170] nil[44]))
      if errorExists[2109416]
      {
        (1811186 '=' error_out[1811151] error[1811170])
        ref i_x[2131557]:string[26] "temp"
        (2131561 'move' i_x[2131557](2131559 'set reference' msg[1165240]))
        wide-ref tmp[2425734]:string[26] "temp"
        (2425737 'move' tmp[2425734] i_x[2131557])
        (2131565 call deinit[30831] tmp[2425734])
        gotoErrorHandlingReturn _end_writeOne[1811153] _end_writeOne[1811153]
      }
      ref i_x[2131569]:string[26] "temp"
      (2131573 'move' i_x[2131569](2131571 'set reference' msg[1165240]))
      wide-ref tmp[2425740]:string[26] "temp"
      (2425743 'move' tmp[2425740] i_x[2131569])
      (2131577 call deinit[30831] tmp[2425740])
    }
    label _end_writeOne[1811153]
    (1165300 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1173913](const  ref arg this[1173919]:channel(true,dynamic,false)[1060947], const  wide-ref arg x[1173923]:codepointIndex[28274], const  ref arg loc[1173925]:locale[28], ref arg error_out[1811215]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2378753]:string[26] "temp"
    (2378754 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1175210]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415918]:qio_channel_ptr_t[231465] "temp"
    (1175214 'move' tmp[2415918](2370490 '.v' this[1173919] _channel_internal[1060940]))
    (2415921 'move' coerce_tmp[1175210] tmp[2415918])
    val error[1811220]:__wide_Error[2381123] "error variable" "temp"
    (1811222 'move' error[1811220] nil[44])
    val ret[2274464]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2274466]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2274468]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2274470]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2274472 'move' call_tmp[2274470](2274475 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2274478 'move' call_tmp[2274468] call_tmp[2274470])
    const-val call_tmp[2274481]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2274483]:locale[28] "temp"
    wide-ref tmp[2435340]:chpl_localeID_t[209294] "temp"
    (2435344 'move' tmp[2435340](2435342 'set reference' call_tmp[2274468]))
    (2274486 call chpl_localeID_to_locale[92849] tmp[2435340] ret_tmp[2274483])
    (2274489 'move' call_tmp[2274481] ret_tmp[2274483])
    (2274492 'move' call_tmp[2274466] call_tmp[2274481])
    const-val call_tmp[2274495]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2274497]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2274500 call init[1068388] initTemp[2274497] call_tmp[2274466] coerce_tmp[1175210] loc[1173925])
    (2274505 'move' call_tmp[2274495] initTemp[2274497])
    val writer[2274508]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2274510 'move' writer[2274508] call_tmp[2274495])
    const-val call_tmp[2274515]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2274517 'move' call_tmp[2274515](2274520 call qio_int_to_err[223634] 0))
    val error[2274525]:__wide_Error[2381123] "error variable" "temp"
    (2274527 'move' error[2274525] nil[44])
    ref tmp[2435347]:__wide_Error[2381123] "temp"
    (2435351 'move' tmp[2435347](2435349 'set reference' error[2274525]))
    (2274531 call writeThis[1175345] x[1173923] writer[2274508] tmp[2435347])
    val errorExists[2274535]:bool[10] "temp"
    (2274537 'move' errorExists[2274535](2274539 '!=' error[2274525] nil[44]))
    if errorExists[2274535]
    {
      gotoErrorHandling handler[2274547] handler[2274547]
    }
    label handler[2274547]
    val errorExists[2274549]:bool[10] "temp"
    (2274551 'move' errorExists[2274549](2274553 '!=' error[2274525] nil[44]))
    if errorExists[2274549]
    {
      (2274558 '=' error[1811220] error[2274525])
      (2274561 '.=' writer[2274508] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2274565]:channel(true,dynamic,false)[1060947] "temp"
      (2274567 'move' i_x[2274565](2274569 'set reference' writer[2274508]))
      (2274572 call deinit[1536215] i_x[2274565])
      ref i_x[2274574]:locale[28] "temp"
      (2274576 'move' i_x[2274574](2274578 'set reference' call_tmp[2274466]))
      wide-ref tmp[2435354]:locale[28] "temp"
      (2435357 'move' tmp[2435354] i_x[2274574])
      (2274581 call deinit[90185] tmp[2435354])
      gotoErrorHandlingReturn _end__write_one_internal[2274611] _end__write_one_internal[2274611]
    }
    (2274586 'move' ret[2274464] call_tmp[2274515])
    (2274589 '.=' writer[2274508] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2274593]:channel(true,dynamic,false)[1060947] "temp"
    (2274595 'move' i_x[2274593](2274597 'set reference' writer[2274508]))
    (2274600 call deinit[1536215] i_x[2274593])
    ref i_x[2274602]:locale[28] "temp"
    (2274604 'move' i_x[2274602](2274606 'set reference' call_tmp[2274466]))
    wide-ref tmp[2435360]:locale[28] "temp"
    (2435363 'move' tmp[2435360] i_x[2274602])
    (2274609 call deinit[90185] tmp[2435360])
    label _end__write_one_internal[2274611]
    val errorExists[2109432]:bool[10] "temp"
    (2109437 'move' errorExists[2109432](2109434 '!=' error[1811220] nil[44]))
    if errorExists[2109432]
    {
      (1811226 '=' error_out[1811215] error[1811220])
      gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
    }
    const-val call_tmp[2206362]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206364 'move' call_tmp[2206362](2206367 call qio_err_to_int[223616] ret[2274464]))
    const-val call_tmp[2206369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206371 'move' call_tmp[2206369](2206373 '==' call_tmp[2206362] 0))
    const-val call_tmp[2206376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206378 'move' call_tmp[2206376](2206380 '!' call_tmp[2206369]))
    if call_tmp[2206376]
    {
      const-val call_tmp[1173982]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1834644]:string[26] "temp"
      (1173990 call _constructIoErrorMsg[1175397] this[1173919] x[1173923] ret_tmp[1834644])
      (1834647 'move' call_tmp[1173982] ret_tmp[1834644])
      val msg[1173993]:string[26] "dead at end of block" "insert auto destroy"
      (1173995 'move' msg[1173993] call_tmp[1173982])
      const-val call_tmp[2206117]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206119 'move' call_tmp[2206117](2206122 call qio_err_to_int[223616] ret[2274464]))
      const-val call_tmp[2206124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206126 'move' call_tmp[2206124](2206128 '==' call_tmp[2206117] EILSEQ[224444]))
      if call_tmp[2206124]
      {
        const-val call_tmp[1174024]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830103]:string[26] "temp"
        wide-ref tmp[2415891]:string[26] "temp"
        (2415895 'move' tmp[2415891](2415893 'set reference' msg[1173993]))
        (1174029 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2415891] ret_tmp[1830103])
        (1830106 'move' call_tmp[1174024] ret_tmp[1830103])
        wide-ref tmp[2415898]:string[26] "temp"
        (2415902 'move' tmp[2415898](2415900 'set reference' msg[1173993]))
        (1174033 call =[38269] tmp[2415898] call_tmp[1174024])
        ref i_x[2131677]:string[26] "temp"
        (2131681 'move' i_x[2131677](2131679 'set reference' call_tmp[1174024]))
        wide-ref tmp[2425758]:string[26] "temp"
        (2425761 'move' tmp[2425758] i_x[2131677])
        (2131685 call deinit[30831] tmp[2425758])
      }
      val error[1811234]:__wide_Error[2381123] "error variable" "temp"
      (1811243 'move' error[1811234] nil[44])
      wide-ref tmp[2415905]:channel(true,dynamic,false)[1060947] "temp"
      (2415908 'move' tmp[2415905] this[1173919])
      ref tmp[2415911]:__wide_Error[2381123] "temp"
      (2415915 'move' tmp[2415911](2415913 'set reference' error[1811234]))
      (1174045 call _ch_ioerror[1062865] tmp[2415905] ret[2274464] msg[1173993] tmp[2415911])
      val errorExists[2109440]:bool[10] "temp"
      (2109445 'move' errorExists[2109440](2109442 '!=' error[1811234] nil[44]))
      if errorExists[2109440]
      {
        gotoErrorHandling handler[1811235] handler[1811235]
      }
      label handler[1811235]
      val errorExists[2109448]:bool[10] "temp"
      (2109453 'move' errorExists[2109448](2109450 '!=' error[1811234] nil[44]))
      if errorExists[2109448]
      {
        (1811250 '=' error_out[1811215] error[1811234])
        ref i_x[2131689]:string[26] "temp"
        (2131693 'move' i_x[2131689](2131691 'set reference' msg[1173993]))
        wide-ref tmp[2425764]:string[26] "temp"
        (2425767 'move' tmp[2425764] i_x[2131689])
        (2131697 call deinit[30831] tmp[2425764])
        gotoErrorHandlingReturn _end_writeOne[1811217] _end_writeOne[1811217]
      }
      ref i_x[2131701]:string[26] "temp"
      (2131705 'move' i_x[2131701](2131703 'set reference' msg[1173993]))
      wide-ref tmp[2425770]:string[26] "temp"
      (2425773 'move' tmp[2425770] i_x[2131701])
      (2131709 call deinit[30831] tmp[2425770])
    }
    label _end_writeOne[1811217]
    (1174053 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1393788](const  ref arg this[1393794]:channel(true,dynamic,true)[1021825], const  ref arg x[1393798]:[domain(1,int(64),false)] real(64)[1365840], const  ref arg loc[1393800]:locale[28], ref arg error_out[1812588]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2379608]:string[26] "temp"
    (2379609 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1396717]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417129]:qio_channel_ptr_t[231465] "temp"
    (1396721 'move' tmp[2417129](2372890 '.v' this[1393794] _channel_internal[1021818]))
    (2417132 'move' coerce_tmp[1396717] tmp[2417129])
    val error[1812593]:__wide_Error[2381123] "error variable" "temp"
    (1812595 'move' error[1812593] nil[44])
    val ret[2320744]:syserr[223584] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2320746]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2320748]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2320750]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2320752 'move' call_tmp[2320750](2320755 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2320758 'move' call_tmp[2320748] call_tmp[2320750])
    const-val call_tmp[2320761]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2320763]:locale[28] "temp"
    wide-ref tmp[2440918]:chpl_localeID_t[209294] "temp"
    (2440922 'move' tmp[2440918](2440920 'set reference' call_tmp[2320748]))
    (2320766 call chpl_localeID_to_locale[92849] tmp[2440918] ret_tmp[2320763])
    (2320769 'move' call_tmp[2320761] ret_tmp[2320763])
    (2320772 'move' call_tmp[2320746] call_tmp[2320761])
    const-val call_tmp[2320775]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2320777]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "temp"
    (2320780 call init[1068388] initTemp[2320777] call_tmp[2320746] coerce_tmp[1396717] loc[1393800])
    (2320785 'move' call_tmp[2320775] initTemp[2320777])
    val writer[2320788]:channel(true,dynamic,false)[1060947] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2320790 'move' writer[2320788] call_tmp[2320775])
    const-val call_tmp[2320795]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320797 'move' call_tmp[2320795](2320800 call qio_int_to_err[223634] 0))
    val error[2320805]:__wide_Error[2381123] "error variable" "temp"
    (2320807 'move' error[2320805] nil[44])
    ref tmp[2440925]:__wide_Error[2381123] "temp"
    (2440929 'move' tmp[2440925](2440927 'set reference' error[2320805]))
    (2320811 call writeThis[1396898] x[1393798] writer[2320788] tmp[2440925])
    val errorExists[2320815]:bool[10] "temp"
    (2320817 'move' errorExists[2320815](2320819 '!=' error[2320805] nil[44]))
    if errorExists[2320815]
    {
      gotoErrorHandling handler[2320827] handler[2320827]
    }
    label handler[2320827]
    val errorExists[2320829]:bool[10] "temp"
    (2320831 'move' errorExists[2320829](2320833 '!=' error[2320805] nil[44]))
    if errorExists[2320829]
    {
      (2320838 '=' error[1812593] error[2320805])
      (2320841 '.=' writer[2320788] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
      ref i_x[2320845]:channel(true,dynamic,false)[1060947] "temp"
      (2320847 'move' i_x[2320845](2320849 'set reference' writer[2320788]))
      (2320852 call deinit[1536215] i_x[2320845])
      ref i_x[2320854]:locale[28] "temp"
      (2320856 'move' i_x[2320854](2320858 'set reference' call_tmp[2320746]))
      wide-ref tmp[2440932]:locale[28] "temp"
      (2440935 'move' tmp[2440932] i_x[2320854])
      (2320861 call deinit[90185] tmp[2440932])
      gotoErrorHandlingReturn _end__write_one_internal[2320891] _end__write_one_internal[2320891]
    }
    (2320866 'move' ret[2320744] call_tmp[2320795])
    (2320869 '.=' writer[2320788] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    ref i_x[2320873]:channel(true,dynamic,false)[1060947] "temp"
    (2320875 'move' i_x[2320873](2320877 'set reference' writer[2320788]))
    (2320880 call deinit[1536215] i_x[2320873])
    ref i_x[2320882]:locale[28] "temp"
    (2320884 'move' i_x[2320882](2320886 'set reference' call_tmp[2320746]))
    wide-ref tmp[2440938]:locale[28] "temp"
    (2440941 'move' tmp[2440938] i_x[2320882])
    (2320889 call deinit[90185] tmp[2440938])
    label _end__write_one_internal[2320891]
    val errorExists[2110120]:bool[10] "temp"
    (2110125 'move' errorExists[2110120](2110122 '!=' error[1812593] nil[44]))
    if errorExists[2110120]
    {
      (1812599 '=' error_out[1812588] error[1812593])
      gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
    }
    const-val call_tmp[2206431]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206433 'move' call_tmp[2206431](2206436 call qio_err_to_int[223616] ret[2320744]))
    const-val call_tmp[2206438]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206440 'move' call_tmp[2206438](2206442 '==' call_tmp[2206431] 0))
    const-val call_tmp[2206445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206447 'move' call_tmp[2206445](2206449 '!' call_tmp[2206438]))
    if call_tmp[2206445]
    {
      const-val call_tmp[1393857]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838444]:string[26] "temp"
      (1393865 call _constructIoErrorMsg[1429191] this[1393794] x[1393798] ret_tmp[1838444])
      (1838447 'move' call_tmp[1393857] ret_tmp[1838444])
      val msg[1393868]:string[26] "dead at end of block" "insert auto destroy"
      (1393870 'move' msg[1393868] call_tmp[1393857])
      const-val call_tmp[2206168]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206170 'move' call_tmp[2206168](2206173 call qio_err_to_int[223616] ret[2320744]))
      const-val call_tmp[2206175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206177 'move' call_tmp[2206175](2206179 '==' call_tmp[2206168] EILSEQ[224444]))
      if call_tmp[2206175]
      {
        const-val call_tmp[1393899]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830301]:string[26] "temp"
        wide-ref tmp[2417108]:string[26] "temp"
        (2417112 'move' tmp[2417108](2417110 'set reference' msg[1393868]))
        (1393904 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2417108] ret_tmp[1830301])
        (1830304 'move' call_tmp[1393899] ret_tmp[1830301])
        wide-ref tmp[2417115]:string[26] "temp"
        (2417119 'move' tmp[2417115](2417117 'set reference' msg[1393868]))
        (1393908 call =[38269] tmp[2417115] call_tmp[1393899])
        ref i_x[2132829]:string[26] "temp"
        (2132833 'move' i_x[2132829](2132831 'set reference' call_tmp[1393899]))
        wide-ref tmp[2426058]:string[26] "temp"
        (2426061 'move' tmp[2426058] i_x[2132829])
        (2132837 call deinit[30831] tmp[2426058])
      }
      val error[1812607]:__wide_Error[2381123] "error variable" "temp"
      (1812616 'move' error[1812607] nil[44])
      ref tmp[2417122]:__wide_Error[2381123] "temp"
      (2417126 'move' tmp[2417122](2417124 'set reference' error[1812607]))
      (1393920 call _ch_ioerror[1393261] this[1393794] ret[2320744] msg[1393868] tmp[2417122])
      val errorExists[2110128]:bool[10] "temp"
      (2110133 'move' errorExists[2110128](2110130 '!=' error[1812607] nil[44]))
      if errorExists[2110128]
      {
        gotoErrorHandling handler[1812608] handler[1812608]
      }
      label handler[1812608]
      val errorExists[2110136]:bool[10] "temp"
      (2110141 'move' errorExists[2110136](2110138 '!=' error[1812607] nil[44]))
      if errorExists[2110136]
      {
        (1812623 '=' error_out[1812588] error[1812607])
        ref i_x[2132841]:string[26] "temp"
        (2132845 'move' i_x[2132841](2132843 'set reference' msg[1393868]))
        wide-ref tmp[2426064]:string[26] "temp"
        (2426067 'move' tmp[2426064] i_x[2132841])
        (2132849 call deinit[30831] tmp[2426064])
        gotoErrorHandlingReturn _end_writeOne[1812590] _end_writeOne[1812590]
      }
      ref i_x[2132853]:string[26] "temp"
      (2132857 'move' i_x[2132853](2132855 'set reference' msg[1393868]))
      wide-ref tmp[2426070]:string[26] "temp"
      (2426073 'move' tmp[2426070] i_x[2132853])
      (2132861 call deinit[30831] tmp[2426070])
    }
    label _end_writeOne[1812590]
    (1393928 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1408673](const  wide-ref arg this[1408679]:channel(true,dynamic,false)[1060947], const  ref arg x[1408683]:ioLiteral[238753], const  ref arg loc[1408685]:locale[28], ref arg error_out[1813269]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2379792]:string[26] "temp"
    (2379793 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val local__str_literal_4795[2379786]:string[26] "temp"
    (2379787 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val coerce_tmp[1411546]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417264]:qio_channel_ptr_t[231465] "temp"
    (1411550 'move' tmp[2417264](2373025 '.v' this[1408679] _channel_internal[1060940]))
    (2417267 'move' coerce_tmp[1411546] tmp[2417264])
    val error[1813274]:Error[167938] "error variable" "temp"
    (1813276 'move' error[1813274] nil[44])
    (2321974 call qio_int_to_err[223634] 0)
    ref call_tmp[2321976]:string[26] "dead after last mention" "maybe param" "temp"
    (2321978 'move' call_tmp[2321976](2321980 '.' x[1408683] val[238728]))
    const-val call_tmp[2321983]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret[2321985]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2321987]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2441014]:int(32)[95] "temp"
    (2321989 'move' tmp[2441014](2321991 '.v' call_tmp[2321976] locale_id[30754]))
    (2441017 'move' coerce_tmp[2321987] tmp[2441014])
    const-val call_tmp[2321994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2321996 'move' call_tmp[2321994](2321998 '==' coerce_tmp[2321987] chpl_nodeID[208152]))
    if call_tmp[2321994]
    {
      const-val ret[2322003]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2322005]:string[26] "dead at end of block" "insert auto destroy"
      (2322008 call init[30760] ret[2322005])
      const-val coerce_tmp[2322010]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2441020]:int(64)[13] "temp"
      (2322012 'move' tmp[2441020](2322014 '.v' call_tmp[2321976] cachedNumCodepoints[30731]))
      (2441023 'move' coerce_tmp[2322010] tmp[2441020])
      (2322017 '.=' ret[2322005] cachedNumCodepoints[30731] coerce_tmp[2322010])
      wide-ref tmp[2441026]:string[26] "temp"
      (2441029 'move' tmp[2441026] call_tmp[2321976])
      (2322022 call initWithBorrowedBuffer[948874] ret[2322005] tmp[2441026])
      (2322025 'move' ret[2322003] ret[2322005])
      (2322028 'move' ret[2321985] ret[2322003])
      gotoReturn _end_localize[2322046] _end_localize[2322046]
    }
    {
      const-val x[2322034]:string[26] "dead at end of block" "const" "insert auto destroy"
      wide-ref tmp[2441032]:string[26] "temp"
      (2441035 'move' tmp[2441032] call_tmp[2321976])
      (2322037 call init=[30771] x[2322034] tmp[2441032])
      (2322040 'move' ret[2321985] x[2322034])
      gotoReturn _end_localize[2322046] _end_localize[2322046]
    }
    label _end_localize[2322046]
    (2322048 'move' call_tmp[2321983] ret[2321985])
    const-val coerce_tmp[2322051]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2441038]:int(32)[95] "temp"
    (2322053 'move' tmp[2441038](2322055 '.v' call_tmp[2321983] locale_id[30754]))
    (2441041 'move' coerce_tmp[2322051] tmp[2441038])
    const-val call_tmp[2322058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322060 'move' call_tmp[2322058](2322062 '!=' coerce_tmp[2322051] chpl_nodeID[208152]))
    if call_tmp[2322058]
    {
      (2322068 call halt[154067] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2322071]:c_ptr(uint(8))[937423] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2441044]:c_ptr(uint(8))[937423] "temp"
    (2322073 'move' tmp[2441044](2322075 '.v' call_tmp[2321983] buff[30737]))
    (2441047 'move' coerce_tmp[2322071] tmp[2441044])
    const-val call_tmp[2322078]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2322080 'move' call_tmp[2322078](2322082 'cast' c_string[19] coerce_tmp[2322071]))
    ref call_tmp[2322085]:string[26] "dead after last mention" "maybe param" "temp"
    (2322087 'move' call_tmp[2322085](2322089 '.' x[1408683] val[238728]))
    val ret[2322092]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2441050]:int(64)[13] "temp"
    (2322094 'move' tmp[2441050](2322096 '.v' call_tmp[2322085] buffLen[30719]))
    (2441053 'move' ret[2322092] tmp[2441050])
    const-val call_tmp[2322099]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2322101]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2322103 'move' coerce_tmp[2322101](2322105 'cast' int(32)[95] 0))
    (2322108 'move' call_tmp[2322099](2322111 call qio_channel_print_literal[234917] coerce_tmp[2322101] coerce_tmp[1411546] call_tmp[2322078] ret[2322092]))
    ref i_x[2322119]:string[26] "temp"
    (2322121 'move' i_x[2322119](2322123 'set reference' call_tmp[2321983]))
    wide-ref tmp[2441056]:string[26] "temp"
    (2441059 'move' tmp[2441056] i_x[2322119])
    (2322126 call deinit[30831] tmp[2441056])
    val errorExists[2110400]:bool[10] "temp"
    (2110405 'move' errorExists[2110400](2110402 '!=' error[1813274] nil[44]))
    if errorExists[2110400]
    {
      val tmp[2448180]:__wide_Error[2381123] "temp"
      (2448182 'move' tmp[2448180] error[1813274])
      (1813280 '=' error_out[1813269] tmp[2448180])
      gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
    }
    const-val call_tmp[2206385]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206387 'move' call_tmp[2206385](2206390 call qio_err_to_int[223616] call_tmp[2322099]))
    const-val call_tmp[2206392]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206394 'move' call_tmp[2206392](2206396 '==' call_tmp[2206385] 0))
    const-val call_tmp[2206399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206401 'move' call_tmp[2206399](2206403 '!' call_tmp[2206392]))
    if call_tmp[2206399]
    {
      const-val call_tmp[1408742]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838376]:string[26] "temp"
      (1408750 call _constructIoErrorMsg[1411634] this[1408679] x[1408683] ret_tmp[1838376])
      (1838379 'move' call_tmp[1408742] ret_tmp[1838376])
      val msg[1408753]:string[26] "dead at end of block" "insert auto destroy"
      (1408755 'move' msg[1408753] call_tmp[1408742])
      const-val call_tmp[2206134]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206136 'move' call_tmp[2206134](2206139 call qio_err_to_int[223616] call_tmp[2322099]))
      const-val call_tmp[2206141]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206143 'move' call_tmp[2206141](2206145 '==' call_tmp[2206134] EILSEQ[224444]))
      if call_tmp[2206141]
      {
        const-val call_tmp[1408784]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830313]:string[26] "temp"
        wide-ref tmp[2417243]:string[26] "temp"
        (2417247 'move' tmp[2417243](2417245 'set reference' msg[1408753]))
        (1408789 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2417243] ret_tmp[1830313])
        (1830316 'move' call_tmp[1408784] ret_tmp[1830313])
        wide-ref tmp[2417250]:string[26] "temp"
        (2417254 'move' tmp[2417250](2417252 'set reference' msg[1408753]))
        (1408793 call =[38269] tmp[2417250] call_tmp[1408784])
        ref i_x[2132901]:string[26] "temp"
        (2132905 'move' i_x[2132901](2132903 'set reference' call_tmp[1408784]))
        wide-ref tmp[2426094]:string[26] "temp"
        (2426097 'move' tmp[2426094] i_x[2132901])
        (2132909 call deinit[30831] tmp[2426094])
      }
      val error[1813288]:__wide_Error[2381123] "error variable" "temp"
      (1813297 'move' error[1813288] nil[44])
      ref tmp[2417257]:__wide_Error[2381123] "temp"
      (2417261 'move' tmp[2417257](2417259 'set reference' error[1813288]))
      (1408805 call _ch_ioerror[1062865] this[1408679] call_tmp[2322099] msg[1408753] tmp[2417257])
      val errorExists[2110408]:bool[10] "temp"
      (2110413 'move' errorExists[2110408](2110410 '!=' error[1813288] nil[44]))
      if errorExists[2110408]
      {
        gotoErrorHandling handler[1813289] handler[1813289]
      }
      label handler[1813289]
      val errorExists[2110416]:bool[10] "temp"
      (2110421 'move' errorExists[2110416](2110418 '!=' error[1813288] nil[44]))
      if errorExists[2110416]
      {
        (1813304 '=' error_out[1813269] error[1813288])
        ref i_x[2132913]:string[26] "temp"
        (2132917 'move' i_x[2132913](2132915 'set reference' msg[1408753]))
        wide-ref tmp[2426100]:string[26] "temp"
        (2426103 'move' tmp[2426100] i_x[2132913])
        (2132921 call deinit[30831] tmp[2426100])
        gotoErrorHandlingReturn _end_writeOne[1813271] _end_writeOne[1813271]
      }
      ref i_x[2132925]:string[26] "temp"
      (2132929 'move' i_x[2132925](2132927 'set reference' msg[1408753]))
      wide-ref tmp[2426106]:string[26] "temp"
      (2426109 'move' tmp[2426106] i_x[2132925])
      (2132933 call deinit[30831] tmp[2426106])
    }
    label _end_writeOne[1813271]
    (1408813 return _void[55])
  }
  function channel(true,dynamic,false)[1060947]._writeOne[1421879](const  wide-ref arg this[1421885]:channel(true,dynamic,false)[1060947], const in arg x[1421889]:real(64)[16], const  ref arg loc[1421891]:locale[28], ref arg error_out[1813459]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2379864]:string[26] "temp"
    (2379865 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1422988]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417324]:qio_channel_ptr_t[231465] "temp"
    (1422992 'move' tmp[2417324](2373083 '.v' this[1421885] _channel_internal[1060940]))
    (2417327 'move' coerce_tmp[1422988] tmp[2417324])
    val error[1813464]:__wide_Error[2381123] "error variable" "temp"
    (1813466 'move' error[1813464] nil[44])
    val ret[2324251]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2324253]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2324255]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324257 'move' call_tmp[2324255](2324260 call qio_int_to_err[223634] 0))
    (2324262 'move' e[2324253] call_tmp[2324255])
    const-val call_tmp[2324265]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2324267 'move' call_tmp[2324265](2324270 call qio_channel_binary[233057] coerce_tmp[1422988]))
    const-val call_tmp[2324272]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2324274 'move' call_tmp[2324272](2324277 call qio_channel_byteorder[233072] coerce_tmp[1422988]))
    const-val coerce_tmp[2324284]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324286 'move' coerce_tmp[2324284](2324288 'cast' int(64)[13] call_tmp[2324265]))
    const-val call_tmp[2324291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324293 'move' call_tmp[2324291](2324295 '!=' coerce_tmp[2324284] 0))
    if call_tmp[2324291]
    {
      const-val tmp[2324300]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2324302]:__wide_Error[2381123] "error variable" "temp"
      (2324304 'move' error[2324302] nil[44])
      ref tmp[2441465]:__wide_Error[2381123] "temp"
      (2441469 'move' tmp[2441465](2441467 'set reference' error[2324302]))
      (2324307 'move' tmp[2324300](2324310 call _cast[1070308] call_tmp[2324272] tmp[2441465]))
      val errorExists[2324313]:bool[10] "temp"
      (2324315 'move' errorExists[2324313](2324317 '!=' error[2324302] nil[44]))
      if errorExists[2324313]
      {
        (2324322 '=' error[1813464] error[2324302])
        gotoErrorHandlingReturn _end__write_one_internal[2324426] _end__write_one_internal[2324426]
      }
      const-val call_tmp[2324328]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2324330 'move' call_tmp[2324328](2324332 '==' tmp[2324300] big[230926]))
      if call_tmp[2324328]
      {
        const-val call_tmp[2324337]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2324339]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2324341 'move' coerce_tmp[2324339](2324343 'cast' int(32)[95] 0))
        (2324346 'move' call_tmp[2324337](2324349 call qio_channel_write_float64[234266] coerce_tmp[2324339] 2 coerce_tmp[1422988] x[1421889]))
        (2324354 '=' e[2324253] call_tmp[2324337])
      }
      {
        const-val call_tmp[2324358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2324360 'move' call_tmp[2324358](2324362 '==' tmp[2324300] little[230929]))
        if call_tmp[2324358]
        {
          const-val call_tmp[2324367]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2324369]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2324371 'move' coerce_tmp[2324369](2324373 'cast' int(32)[95] 0))
          (2324376 'move' call_tmp[2324367](2324379 call qio_channel_write_float64[234266] coerce_tmp[2324369] 3 coerce_tmp[1422988] x[1421889]))
          (2324384 '=' e[2324253] call_tmp[2324367])
        }
        {
          const-val call_tmp[2324388]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2324390]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2324392 'move' coerce_tmp[2324390](2324394 'cast' int(32)[95] 0))
          (2324397 'move' call_tmp[2324388](2324400 call qio_channel_write_float64[234266] coerce_tmp[2324390] 1 coerce_tmp[1422988] x[1421889]))
          (2324405 '=' e[2324253] call_tmp[2324388])
        }
      }
    }
    {
      const-val call_tmp[2324411]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2324413 'move' call_tmp[2324411](2324416 call _write_text_internal[1427778] coerce_tmp[1422988] x[1421889]))
      (2324419 '=' e[2324253] call_tmp[2324411])
    }
    (2324423 'move' ret[2324251] e[2324253])
    label _end__write_one_internal[2324426]
    val errorExists[2110496]:bool[10] "temp"
    (2110501 'move' errorExists[2110496](2110498 '!=' error[1813464] nil[44]))
    if errorExists[2110496]
    {
      (1813470 '=' error_out[1813459] error[1813464])
      gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
    }
    const-val call_tmp[2206408]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206410 'move' call_tmp[2206408](2206413 call qio_err_to_int[223616] ret[2324251]))
    const-val call_tmp[2206415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206417 'move' call_tmp[2206415](2206419 '==' call_tmp[2206408] 0))
    const-val call_tmp[2206422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206424 'move' call_tmp[2206422](2206426 '!' call_tmp[2206415]))
    if call_tmp[2206422]
    {
      const-val call_tmp[1421948]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838430]:string[26] "temp"
      (1421956 call _constructIoErrorMsg[1428618] this[1421885] x[1421889] ret_tmp[1838430])
      (1838433 'move' call_tmp[1421948] ret_tmp[1838430])
      val msg[1421959]:string[26] "dead at end of block" "insert auto destroy"
      (1421961 'move' msg[1421959] call_tmp[1421948])
      const-val call_tmp[2206151]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206153 'move' call_tmp[2206151](2206156 call qio_err_to_int[223616] ret[2324251]))
      const-val call_tmp[2206158]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206160 'move' call_tmp[2206158](2206162 '==' call_tmp[2206151] EILSEQ[224444]))
      if call_tmp[2206158]
      {
        const-val call_tmp[1421990]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830331]:string[26] "temp"
        wide-ref tmp[2417303]:string[26] "temp"
        (2417307 'move' tmp[2417303](2417305 'set reference' msg[1421959]))
        (1421995 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2417303] ret_tmp[1830331])
        (1830334 'move' call_tmp[1421990] ret_tmp[1830331])
        wide-ref tmp[2417310]:string[26] "temp"
        (2417314 'move' tmp[2417310](2417312 'set reference' msg[1421959]))
        (1421999 call =[38269] tmp[2417310] call_tmp[1421990])
        ref i_x[2132985]:string[26] "temp"
        (2132989 'move' i_x[2132985](2132987 'set reference' call_tmp[1421990]))
        wide-ref tmp[2426130]:string[26] "temp"
        (2426133 'move' tmp[2426130] i_x[2132985])
        (2132993 call deinit[30831] tmp[2426130])
      }
      val error[1813478]:__wide_Error[2381123] "error variable" "temp"
      (1813487 'move' error[1813478] nil[44])
      ref tmp[2417317]:__wide_Error[2381123] "temp"
      (2417321 'move' tmp[2417317](2417319 'set reference' error[1813478]))
      (1422011 call _ch_ioerror[1062865] this[1421885] ret[2324251] msg[1421959] tmp[2417317])
      val errorExists[2110504]:bool[10] "temp"
      (2110509 'move' errorExists[2110504](2110506 '!=' error[1813478] nil[44]))
      if errorExists[2110504]
      {
        gotoErrorHandling handler[1813479] handler[1813479]
      }
      label handler[1813479]
      val errorExists[2110512]:bool[10] "temp"
      (2110517 'move' errorExists[2110512](2110514 '!=' error[1813478] nil[44]))
      if errorExists[2110512]
      {
        (1813494 '=' error_out[1813459] error[1813478])
        ref i_x[2132997]:string[26] "temp"
        (2133001 'move' i_x[2132997](2132999 'set reference' msg[1421959]))
        wide-ref tmp[2426136]:string[26] "temp"
        (2426139 'move' tmp[2426136] i_x[2132997])
        (2133005 call deinit[30831] tmp[2426136])
        gotoErrorHandlingReturn _end_writeOne[1813461] _end_writeOne[1813461]
      }
      ref i_x[2133009]:string[26] "temp"
      (2133013 'move' i_x[2133009](2133011 'set reference' msg[1421959]))
      wide-ref tmp[2426142]:string[26] "temp"
      (2426145 'move' tmp[2426142] i_x[2133009])
      (2133017 call deinit[30831] tmp[2426142])
    }
    label _end_writeOne[1813461]
    (1422019 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1429447](const  ref arg this[1429453]:channel(true,dynamic,true)[1021825], const  wide-ref arg x[1429457]:ioNewline[238701], const  ref arg loc[1429459]:locale[28], ref arg error_out[1813523]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2379906]:string[26] "temp"
    (2379907 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1432319]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417351]:qio_channel_ptr_t[231465] "temp"
    (1432323 'move' tmp[2417351](2373091 '.v' this[1429453] _channel_internal[1021818]))
    (2417354 'move' coerce_tmp[1432319] tmp[2417351])
    val error[1813528]:Error[167938] "error variable" "temp"
    (1813530 'move' error[1813528] nil[44])
    (2324451 call qio_int_to_err[223634] 0)
    const-val call_tmp[2324453]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2324455]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324457 'move' coerce_tmp[2324455](2324459 'cast' int(32)[95] 0))
    (2324462 'move' call_tmp[2324453](2324465 call qio_channel_write_newline[234735] coerce_tmp[2324455] coerce_tmp[1432319]))
    val errorExists[2110528]:bool[10] "temp"
    (2110533 'move' errorExists[2110528](2110530 '!=' error[1813528] nil[44]))
    if errorExists[2110528]
    {
      val tmp[2448185]:__wide_Error[2381123] "temp"
      (2448187 'move' tmp[2448185] error[1813528])
      (1813534 '=' error_out[1813523] tmp[2448185])
      gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
    }
    const-val call_tmp[2206454]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206456 'move' call_tmp[2206454](2206459 call qio_err_to_int[223616] call_tmp[2324453]))
    const-val call_tmp[2206461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206463 'move' call_tmp[2206461](2206465 '==' call_tmp[2206454] 0))
    const-val call_tmp[2206468]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206470 'move' call_tmp[2206468](2206472 '!' call_tmp[2206461]))
    if call_tmp[2206468]
    {
      const-val call_tmp[1429516]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838458]:string[26] "temp"
      (1429524 call _constructIoErrorMsg[1432375] this[1429453] x[1429457] ret_tmp[1838458])
      (1838461 'move' call_tmp[1429516] ret_tmp[1838458])
      val msg[1429527]:string[26] "dead at end of block" "insert auto destroy"
      (1429529 'move' msg[1429527] call_tmp[1429516])
      const-val call_tmp[2206185]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206187 'move' call_tmp[2206185](2206190 call qio_err_to_int[223616] call_tmp[2324453]))
      const-val call_tmp[2206192]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206194 'move' call_tmp[2206192](2206196 '==' call_tmp[2206185] EILSEQ[224444]))
      if call_tmp[2206192]
      {
        const-val call_tmp[1429558]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830337]:string[26] "temp"
        wide-ref tmp[2417330]:string[26] "temp"
        (2417334 'move' tmp[2417330](2417332 'set reference' msg[1429527]))
        (1429563 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2417330] ret_tmp[1830337])
        (1830340 'move' call_tmp[1429558] ret_tmp[1830337])
        wide-ref tmp[2417337]:string[26] "temp"
        (2417341 'move' tmp[2417337](2417339 'set reference' msg[1429527]))
        (1429567 call =[38269] tmp[2417337] call_tmp[1429558])
        ref i_x[2133021]:string[26] "temp"
        (2133025 'move' i_x[2133021](2133023 'set reference' call_tmp[1429558]))
        wide-ref tmp[2426148]:string[26] "temp"
        (2426151 'move' tmp[2426148] i_x[2133021])
        (2133029 call deinit[30831] tmp[2426148])
      }
      val error[1813542]:__wide_Error[2381123] "error variable" "temp"
      (1813551 'move' error[1813542] nil[44])
      ref tmp[2417344]:__wide_Error[2381123] "temp"
      (2417348 'move' tmp[2417344](2417346 'set reference' error[1813542]))
      (1429579 call _ch_ioerror[1393261] this[1429453] call_tmp[2324453] msg[1429527] tmp[2417344])
      val errorExists[2110536]:bool[10] "temp"
      (2110541 'move' errorExists[2110536](2110538 '!=' error[1813542] nil[44]))
      if errorExists[2110536]
      {
        gotoErrorHandling handler[1813543] handler[1813543]
      }
      label handler[1813543]
      val errorExists[2110544]:bool[10] "temp"
      (2110549 'move' errorExists[2110544](2110546 '!=' error[1813542] nil[44]))
      if errorExists[2110544]
      {
        (1813558 '=' error_out[1813523] error[1813542])
        ref i_x[2133033]:string[26] "temp"
        (2133037 'move' i_x[2133033](2133035 'set reference' msg[1429527]))
        wide-ref tmp[2426154]:string[26] "temp"
        (2426157 'move' tmp[2426154] i_x[2133033])
        (2133041 call deinit[30831] tmp[2426154])
        gotoErrorHandlingReturn _end_writeOne[1813525] _end_writeOne[1813525]
      }
      ref i_x[2133045]:string[26] "temp"
      (2133049 'move' i_x[2133045](2133047 'set reference' msg[1429527]))
      wide-ref tmp[2426160]:string[26] "temp"
      (2426163 'move' tmp[2426160] i_x[2133045])
      (2133053 call deinit[30831] tmp[2426160])
    }
    label _end_writeOne[1813525]
    (1429587 return _void[55])
  }
  function channel(true,dynamic,true)[1021825]._writeOne[1433423](const  ref arg this[1433429]:channel(true,dynamic,true)[1021825], const in arg x[1433433]:int(64)[13], const  ref arg loc[1433435]:locale[28], ref arg error_out[1813724]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_4839[2379976]:string[26] "temp"
    (2379977 'move' "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first.")
    const-val coerce_tmp[1433573]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417405]:qio_channel_ptr_t[231465] "temp"
    (1433577 'move' tmp[2417405](2373116 '.v' this[1433429] _channel_internal[1021818]))
    (2417408 'move' coerce_tmp[1433573] tmp[2417405])
    val error[1813729]:__wide_Error[2381123] "error variable" "temp"
    (1813731 'move' error[1813729] nil[44])
    val ret[2269157]:syserr[223584] "dead after last mention" "RVV" "temp"
    val e[2269159]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2269161]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269163 'move' call_tmp[2269161](2269166 call qio_int_to_err[223634] 0))
    (2269168 'move' e[2269159] call_tmp[2269161])
    const-val call_tmp[2269171]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2269173 'move' call_tmp[2269171](2269176 call qio_channel_binary[233057] coerce_tmp[1433573]))
    const-val call_tmp[2269178]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2269180 'move' call_tmp[2269178](2269183 call qio_channel_byteorder[233072] coerce_tmp[1433573]))
    const-val coerce_tmp[2269190]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2269192 'move' coerce_tmp[2269190](2269194 'cast' int(64)[13] call_tmp[2269171]))
    const-val call_tmp[2269197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269199 'move' call_tmp[2269197](2269201 '!=' coerce_tmp[2269190] 0))
    if call_tmp[2269197]
    {
      const-val tmp[2269206]:iokind[230931] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2269208]:__wide_Error[2381123] "error variable" "temp"
      (2269210 'move' error[2269208] nil[44])
      ref tmp[2434879]:__wide_Error[2381123] "temp"
      (2434883 'move' tmp[2434879](2434881 'set reference' error[2269208]))
      (2269213 'move' tmp[2269206](2269216 call _cast[1070308] call_tmp[2269178] tmp[2434879]))
      val errorExists[2269219]:bool[10] "temp"
      (2269221 'move' errorExists[2269219](2269223 '!=' error[2269208] nil[44]))
      if errorExists[2269219]
      {
        (2269228 '=' error[1813729] error[2269208])
        gotoErrorHandlingReturn _end__write_one_internal[2269332] _end__write_one_internal[2269332]
      }
      const-val call_tmp[2269234]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269236 'move' call_tmp[2269234](2269238 '==' tmp[2269206] big[230926]))
      if call_tmp[2269234]
      {
        const-val call_tmp[2269243]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2269245]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2269247 'move' coerce_tmp[2269245](2269249 'cast' int(32)[95] 0))
        (2269252 'move' call_tmp[2269243](2269255 call qio_channel_write_int64[234050] coerce_tmp[2269245] 2 coerce_tmp[1433573] x[1433433]))
        (2269260 '=' e[2269159] call_tmp[2269243])
      }
      {
        const-val call_tmp[2269264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2269266 'move' call_tmp[2269264](2269268 '==' tmp[2269206] little[230929]))
        if call_tmp[2269264]
        {
          const-val call_tmp[2269273]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269275]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269277 'move' coerce_tmp[2269275](2269279 'cast' int(32)[95] 0))
          (2269282 'move' call_tmp[2269273](2269285 call qio_channel_write_int64[234050] coerce_tmp[2269275] 3 coerce_tmp[1433573] x[1433433]))
          (2269290 '=' e[2269159] call_tmp[2269273])
        }
        {
          const-val call_tmp[2269294]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2269296]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2269298 'move' coerce_tmp[2269296](2269300 'cast' int(32)[95] 0))
          (2269303 'move' call_tmp[2269294](2269306 call qio_channel_write_int64[234050] coerce_tmp[2269296] 1 coerce_tmp[1433573] x[1433433]))
          (2269311 '=' e[2269159] call_tmp[2269294])
        }
      }
    }
    {
      const-val call_tmp[2269317]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      (2269319 'move' call_tmp[2269317](2269322 call _write_text_internal[1078760] coerce_tmp[1433573] x[1433433]))
      (2269325 '=' e[2269159] call_tmp[2269317])
    }
    (2269329 'move' ret[2269157] e[2269159])
    label _end__write_one_internal[2269332]
    val errorExists[2110632]:bool[10] "temp"
    (2110637 'move' errorExists[2110632](2110634 '!=' error[1813729] nil[44]))
    if errorExists[2110632]
    {
      (1813735 '=' error_out[1813724] error[1813729])
      gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
    }
    const-val call_tmp[2206477]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206479 'move' call_tmp[2206477](2206482 call qio_err_to_int[223616] ret[2269157]))
    const-val call_tmp[2206484]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206486 'move' call_tmp[2206484](2206488 '==' call_tmp[2206477] 0))
    const-val call_tmp[2206491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206493 'move' call_tmp[2206491](2206495 '!' call_tmp[2206484]))
    if call_tmp[2206491]
    {
      const-val call_tmp[1433492]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1838484]:string[26] "temp"
      (1433500 call _constructIoErrorMsg[1433585] this[1433429] x[1433433] ret_tmp[1838484])
      (1838487 'move' call_tmp[1433492] ret_tmp[1838484])
      val msg[1433503]:string[26] "dead at end of block" "insert auto destroy"
      (1433505 'move' msg[1433503] call_tmp[1433492])
      const-val call_tmp[2206202]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206204 'move' call_tmp[2206202](2206207 call qio_err_to_int[223616] ret[2269157]))
      const-val call_tmp[2206209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2206211 'move' call_tmp[2206209](2206213 '==' call_tmp[2206202] EILSEQ[224444]))
      if call_tmp[2206209]
      {
        const-val call_tmp[1433534]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1830343]:string[26] "temp"
        wide-ref tmp[2417378]:string[26] "temp"
        (2417382 'move' tmp[2417378](2417380 'set reference' msg[1433503]))
        (1433539 call +[38342] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." tmp[2417378] ret_tmp[1830343])
        (1830346 'move' call_tmp[1433534] ret_tmp[1830343])
        wide-ref tmp[2417385]:string[26] "temp"
        (2417389 'move' tmp[2417385](2417387 'set reference' msg[1433503]))
        (1433543 call =[38269] tmp[2417385] call_tmp[1433534])
        ref i_x[2133057]:string[26] "temp"
        (2133061 'move' i_x[2133057](2133059 'set reference' call_tmp[1433534]))
        wide-ref tmp[2426166]:string[26] "temp"
        (2426169 'move' tmp[2426166] i_x[2133057])
        (2133065 call deinit[30831] tmp[2426166])
      }
      val error[1813743]:__wide_Error[2381123] "error variable" "temp"
      (1813752 'move' error[1813743] nil[44])
      ref tmp[2417392]:__wide_Error[2381123] "temp"
      (2417396 'move' tmp[2417392](2417394 'set reference' error[1813743]))
      (1433555 call _ch_ioerror[1393261] this[1433429] ret[2269157] msg[1433503] tmp[2417392])
      val errorExists[2110640]:bool[10] "temp"
      (2110645 'move' errorExists[2110640](2110642 '!=' error[1813743] nil[44]))
      if errorExists[2110640]
      {
        gotoErrorHandling handler[1813744] handler[1813744]
      }
      label handler[1813744]
      val errorExists[2110648]:bool[10] "temp"
      (2110653 'move' errorExists[2110648](2110650 '!=' error[1813743] nil[44]))
      if errorExists[2110648]
      {
        (1813759 '=' error_out[1813724] error[1813743])
        ref i_x[2133069]:string[26] "temp"
        (2133073 'move' i_x[2133069](2133071 'set reference' msg[1433503]))
        wide-ref tmp[2426172]:string[26] "temp"
        (2426175 'move' tmp[2426172] i_x[2133069])
        (2133077 call deinit[30831] tmp[2426172])
        gotoErrorHandlingReturn _end_writeOne[1813726] _end_writeOne[1813726]
      }
      ref i_x[2133081]:string[26] "temp"
      (2133085 'move' i_x[2133081](2133083 'set reference' msg[1433503]))
      wide-ref tmp[2426178]:string[26] "temp"
      (2426181 'move' tmp[2426178] i_x[2133081])
      (2133089 call deinit[30831] tmp[2426178])
    }
    label _end_writeOne[1813726]
    (1433563 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1068786](const  ref arg this[1068792]:channel(true,dynamic,false)[1060947], const in arg x[1068794]:int(64)[13], ref arg error_out[1810276]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2378193]:string[26] "temp"
    (2378194 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2378187]:locale[28] "temp"
    (2378188 'move' local_nilLocale[2378187] nilLocale[89939])
    const-val ret[2265145]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265147]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265149 'move' call_tmp[2265147](2265151 '.' this[1068792] _readWriteThisFromLocale[1060944]))
    val ret[2265154]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265156]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2434404]:locale[28] "temp"
    (2434408 'move' tmp[2434404](2434406 'set reference' tmp[2265156]))
    wide-ref tmp[2434411]:locale[28] "temp"
    (2434414 'move' tmp[2434411] call_tmp[2265147])
    (2265159 call init=[90167] tmp[2434404] tmp[2434411])
    (2265162 'move' ret[2265154] tmp[2265156])
    val ret[2265165]:locale[28] "dead at end of block" "insert auto destroy"
    (2265167 'move' ret[2265165] ret[2265154])
    const-val call_tmp[2265170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265172 'move' call_tmp[2265170](2265175 call ==[782781] ret[2265165] local_nilLocale[2378187]))
    if call_tmp[2265170]
    {
      const-val call_tmp[2265180]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265182]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265184]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265186 'move' call_tmp[2265184](2265189 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265192 'move' call_tmp[2265182] call_tmp[2265184])
      const-val call_tmp[2265195]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265197]:locale[28] "temp"
      wide-ref tmp[2434417]:chpl_localeID_t[209294] "temp"
      (2434421 'move' tmp[2434417](2434419 'set reference' call_tmp[2265182]))
      (2265200 call chpl_localeID_to_locale[92849] tmp[2434417] ret_tmp[2265197])
      (2265203 'move' call_tmp[2265195] ret_tmp[2265197])
      (2265206 'move' call_tmp[2265180] call_tmp[2265195])
      wide-ref tmp[2434424]:locale[28] "temp"
      (2434428 'move' tmp[2434424](2434426 'set reference' ret[2265165]))
      wide-ref tmp[2434431]:locale[28] "temp"
      (2434435 'move' tmp[2434431](2434433 'set reference' call_tmp[2265180]))
      (2265210 call =[90631] tmp[2434424] tmp[2434431])
      ref i_x[2265213]:locale[28] "temp"
      (2265215 'move' i_x[2265213](2265217 'set reference' call_tmp[2265180]))
      wide-ref tmp[2434438]:locale[28] "temp"
      (2434441 'move' tmp[2434438] i_x[2265213])
      (2265220 call deinit[90185] tmp[2434438])
    }
    (2265223 'move' ret[2265145] ret[2265165])
    const-val origLocale[1068839]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068841 'move' origLocale[1068839] ret[2265145])
    ref call_tmp[2263504]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263506 'move' call_tmp[2263504](2263508 '.' this[1068792] home[1060935]))
    const-val call_tmp[1068855]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165617]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165619 'move' coerce_tmp[2165617](2165621 '.v' call_tmp[2263504] _instance[89975]))
    val coerce_tmp[2165624]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165626 'move' coerce_tmp[2165624](2165628 'cast' object[22] coerce_tmp[2165617]))
    const-val call_tmp[2165631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428635]:__wide_object[2381018] "temp"
    (2428638 'move' tmp[2428635] nil[44])
    (2165633 'move' call_tmp[2165631](2165635 'ptr_eq' coerce_tmp[2165624] tmp[2428635]))
    if call_tmp[2165631]
    {
      (2165641 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1068857 'move' call_tmp[1068855](1068859 '_wide_get_locale' coerce_tmp[2165617]))
    val error[1810281]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1810283 'move' error[1810281] nil[44])
    val isdirect[2089909]:bool[10] "temp"
    (2089914 'move' isdirect[2089909](2089911 call chpl_doDirectExecuteOn[187423] call_tmp[1068855]))
    if isdirect[2089909]
    {
      wide-ref tmp[2422719]:channel(true,dynamic,false)[1060947] "temp"
      (2422722 'move' tmp[2422719] this[1068792])
      wide-ref tmp[2422725]:__wide_Error[2381123] "temp"
      (2422729 'move' tmp[2422725](2422727 'set reference' error[1810281]))
      (2089918 call on_fn[1068868] tmp[2422719] x[1068794] ret[2265145] tmp[2422725])
    }
    {
      val _args_foron_fn[2089942]:_class_localson_fn[2089928] "temp"
      (2089946 'move' _args_foron_fn[2089942](2089944 'stack allocate class' _class_localson_fn[2089928]))
      (2089948 '.=' _args_foron_fn[2089942] _0_tmp[2089931] call_tmp[1068855])
      ref tmp[2089952]:channel(true,dynamic,false)[1060947] "temp"
      (2089956 'move' tmp[2089952](2089954 'set reference' this[1068792]))
      wide-ref tmp[2422732]:channel(true,dynamic,false)[1060947] "temp"
      (2422735 'move' tmp[2422732] tmp[2089952])
      (2089958 '.=' _args_foron_fn[2089942] _1_this[2089933] tmp[2422732])
      (2089962 '.=' _args_foron_fn[2089942] _2_x[2089935] x[1068794])
      (2089966 '.=' _args_foron_fn[2089942] _3_rvfDerefTmp[2089937] ret[2265145])
      ref tmp[2089970]:__wide_Error[2381123] "temp"
      (2089974 'move' tmp[2089970](2089972 'set reference' error[1810281]))
      wide-ref tmp[2422738]:__wide_Error[2381123] "temp"
      (2422741 'move' tmp[2422738] tmp[2089970])
      (2089976 '.=' _args_foron_fn[2089942] _4_error[2089939] tmp[2422738])
      val _args_vforon_fn[2089980]:c_void_ptr[149] "temp"
      (2089984 'move' _args_vforon_fn[2089980](2089982 'cast_to_void_star' _args_foron_fn[2089942]))
      val _args_sizeon_fn[2089986]:int(64)[13] "temp"
      (2089990 'move' _args_sizeon_fn[2089986](2089988 'sizeof_bundle' _class_localson_fn[2089928]))
      on(2090046 call wrapon_fn[2089992] call_tmp[1068855] _args_vforon_fn[2089980] _args_sizeon_fn[2089986] _args_foron_fn[2089942])
    }
    val errorExists[2108968]:bool[10] "temp"
    (2108973 'move' errorExists[2108968](2108970 '!=' error[1810281] nil[44]))
    if errorExists[2108968]
    {
      (1810287 '=' error_out[1810276] error[1810281])
      ref i_x[2264315]:locale[28] "temp"
      (2264319 'move' i_x[2264315](2264317 'set reference' origLocale[1068839]))
      wide-ref tmp[2434134]:locale[28] "temp"
      (2434137 'move' tmp[2434134] i_x[2264315])
      (2264323 call deinit[90185] tmp[2434134])
      gotoErrorHandlingReturn _endwriteIt[1810278] _endwriteIt[1810278]
    }
    ref i_x[2264327]:locale[28] "temp"
    (2264331 'move' i_x[2264327](2264329 'set reference' origLocale[1068839]))
    wide-ref tmp[2434140]:locale[28] "temp"
    (2434143 'move' tmp[2434140] i_x[2264327])
    (2264335 call deinit[90185] tmp[2434140])
    label _endwriteIt[1810278]
    (1068912 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1408522](const  ref arg this[1408528]:channel(true,dynamic,false)[1060947], const  ref arg x[1408530]:ioLiteral[238753], ref arg error_out[1813192]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2379762]:string[26] "temp"
    (2379763 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2379756]:locale[28] "temp"
    (2379757 'move' local_nilLocale[2379756] nilLocale[89939])
    const-val ret[2265430]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265432]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265434 'move' call_tmp[2265432](2265436 '.' this[1408528] _readWriteThisFromLocale[1060944]))
    val ret[2265439]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265441]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2434444]:locale[28] "temp"
    (2434448 'move' tmp[2434444](2434446 'set reference' tmp[2265441]))
    wide-ref tmp[2434451]:locale[28] "temp"
    (2434454 'move' tmp[2434451] call_tmp[2265432])
    (2265444 call init=[90167] tmp[2434444] tmp[2434451])
    (2265447 'move' ret[2265439] tmp[2265441])
    val ret[2265450]:locale[28] "dead at end of block" "insert auto destroy"
    (2265452 'move' ret[2265450] ret[2265439])
    const-val call_tmp[2265455]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265457 'move' call_tmp[2265455](2265460 call ==[782781] ret[2265450] local_nilLocale[2379756]))
    if call_tmp[2265455]
    {
      const-val call_tmp[2265465]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265467]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265469]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265471 'move' call_tmp[2265469](2265474 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265477 'move' call_tmp[2265467] call_tmp[2265469])
      const-val call_tmp[2265480]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265482]:locale[28] "temp"
      wide-ref tmp[2434457]:chpl_localeID_t[209294] "temp"
      (2434461 'move' tmp[2434457](2434459 'set reference' call_tmp[2265467]))
      (2265485 call chpl_localeID_to_locale[92849] tmp[2434457] ret_tmp[2265482])
      (2265488 'move' call_tmp[2265480] ret_tmp[2265482])
      (2265491 'move' call_tmp[2265465] call_tmp[2265480])
      wide-ref tmp[2434464]:locale[28] "temp"
      (2434468 'move' tmp[2434464](2434466 'set reference' ret[2265450]))
      wide-ref tmp[2434471]:locale[28] "temp"
      (2434475 'move' tmp[2434471](2434473 'set reference' call_tmp[2265465]))
      (2265495 call =[90631] tmp[2434464] tmp[2434471])
      ref i_x[2265498]:locale[28] "temp"
      (2265500 'move' i_x[2265498](2265502 'set reference' call_tmp[2265465]))
      wide-ref tmp[2434478]:locale[28] "temp"
      (2434481 'move' tmp[2434478] i_x[2265498])
      (2265505 call deinit[90185] tmp[2434478])
    }
    (2265508 'move' ret[2265430] ret[2265450])
    const-val origLocale[1408575]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1408577 'move' origLocale[1408575] ret[2265430])
    ref call_tmp[2263574]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263576 'move' call_tmp[2263574](2263578 '.' this[1408528] home[1060935]))
    const-val call_tmp[1408591]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166223]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166225 'move' coerce_tmp[2166223](2166227 '.v' call_tmp[2263574] _instance[89975]))
    val coerce_tmp[2166230]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166232 'move' coerce_tmp[2166230](2166234 'cast' object[22] coerce_tmp[2166223]))
    const-val call_tmp[2166237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428713]:__wide_object[2381018] "temp"
    (2428716 'move' tmp[2428713] nil[44])
    (2166239 'move' call_tmp[2166237](2166241 'ptr_eq' coerce_tmp[2166230] tmp[2428713]))
    if call_tmp[2166237]
    {
      (2166247 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1408593 'move' call_tmp[1408591](1408595 '_wide_get_locale' coerce_tmp[2166223]))
    val error[1813197]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1813199 'move' error[1813197] nil[44])
    val rvfDerefTmp[2084387]:ioLiteral[238753] "temp"
    (2084391 'move' rvfDerefTmp[2084387](2084389 'deref' x[1408530]))
    val isdirect[2094971]:bool[10] "temp"
    (2094976 'move' isdirect[2094971](2094973 call chpl_doDirectExecuteOn[187423] call_tmp[1408591]))
    if isdirect[2094971]
    {
      wide-ref tmp[2423338]:channel(true,dynamic,false)[1060947] "temp"
      (2423341 'move' tmp[2423338] this[1408528])
      wide-ref tmp[2423344]:__wide_Error[2381123] "temp"
      (2423348 'move' tmp[2423344](2423346 'set reference' error[1813197]))
      (2094980 call on_fn[1408604] tmp[2423338] rvfDerefTmp[2084387] ret[2265430] tmp[2423344])
    }
    {
      val _args_foron_fn[2095004]:_class_localson_fn[2094990] "temp"
      (2095008 'move' _args_foron_fn[2095004](2095006 'stack allocate class' _class_localson_fn[2094990]))
      (2095010 '.=' _args_foron_fn[2095004] _0_tmp[2094993] call_tmp[1408591])
      ref tmp[2095014]:channel(true,dynamic,false)[1060947] "temp"
      (2095018 'move' tmp[2095014](2095016 'set reference' this[1408528]))
      wide-ref tmp[2423351]:channel(true,dynamic,false)[1060947] "temp"
      (2423354 'move' tmp[2423351] tmp[2095014])
      (2095020 '.=' _args_foron_fn[2095004] _1_this[2094995] tmp[2423351])
      (2095024 '.=' _args_foron_fn[2095004] _2_rvfDerefTmp[2094997] rvfDerefTmp[2084387])
      (2095028 '.=' _args_foron_fn[2095004] _3_rvfDerefTmp[2094999] ret[2265430])
      ref tmp[2095032]:__wide_Error[2381123] "temp"
      (2095036 'move' tmp[2095032](2095034 'set reference' error[1813197]))
      wide-ref tmp[2423357]:__wide_Error[2381123] "temp"
      (2423360 'move' tmp[2423357] tmp[2095032])
      (2095038 '.=' _args_foron_fn[2095004] _4_error[2095001] tmp[2423357])
      val _args_vforon_fn[2095042]:c_void_ptr[149] "temp"
      (2095046 'move' _args_vforon_fn[2095042](2095044 'cast_to_void_star' _args_foron_fn[2095004]))
      val _args_sizeon_fn[2095048]:int(64)[13] "temp"
      (2095052 'move' _args_sizeon_fn[2095048](2095050 'sizeof_bundle' _class_localson_fn[2094990]))
      on(2095108 call wrapon_fn[2095054] call_tmp[1408591] _args_vforon_fn[2095042] _args_sizeon_fn[2095048] _args_foron_fn[2095004])
    }
    val errorExists[2110360]:bool[10] "temp"
    (2110365 'move' errorExists[2110360](2110362 '!=' error[1813197] nil[44]))
    if errorExists[2110360]
    {
      (1813203 '=' error_out[1813192] error[1813197])
      ref i_x[2264591]:locale[28] "temp"
      (2264595 'move' i_x[2264591](2264593 'set reference' origLocale[1408575]))
      wide-ref tmp[2434206]:locale[28] "temp"
      (2434209 'move' tmp[2434206] i_x[2264591])
      (2264599 call deinit[90185] tmp[2434206])
      gotoErrorHandlingReturn _endwriteIt[1813194] _endwriteIt[1813194]
    }
    ref i_x[2264603]:locale[28] "temp"
    (2264607 'move' i_x[2264603](2264605 'set reference' origLocale[1408575]))
    wide-ref tmp[2434212]:locale[28] "temp"
    (2434215 'move' tmp[2434212] i_x[2264603])
    (2264611 call deinit[90185] tmp[2434212])
    label _endwriteIt[1813194]
    (1408648 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].writeIt[1421728](const  ref arg this[1421734]:channel(true,dynamic,false)[1060947], const in arg x[1421736]:real(64)[16], ref arg error_out[1813382]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_129[2379840]:string[26] "temp"
    (2379841 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2379834]:locale[28] "temp"
    (2379835 'move' local_nilLocale[2379834] nilLocale[89939])
    const-val ret[2265525]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265527]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265529 'move' call_tmp[2265527](2265531 '.' this[1421734] _readWriteThisFromLocale[1060944]))
    val ret[2265534]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265536]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2434484]:locale[28] "temp"
    (2434488 'move' tmp[2434484](2434486 'set reference' tmp[2265536]))
    wide-ref tmp[2434491]:locale[28] "temp"
    (2434494 'move' tmp[2434491] call_tmp[2265527])
    (2265539 call init=[90167] tmp[2434484] tmp[2434491])
    (2265542 'move' ret[2265534] tmp[2265536])
    val ret[2265545]:locale[28] "dead at end of block" "insert auto destroy"
    (2265547 'move' ret[2265545] ret[2265534])
    const-val call_tmp[2265550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265552 'move' call_tmp[2265550](2265555 call ==[782781] ret[2265545] local_nilLocale[2379834]))
    if call_tmp[2265550]
    {
      const-val call_tmp[2265560]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265562]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265564]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265566 'move' call_tmp[2265564](2265569 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265572 'move' call_tmp[2265562] call_tmp[2265564])
      const-val call_tmp[2265575]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265577]:locale[28] "temp"
      wide-ref tmp[2434497]:chpl_localeID_t[209294] "temp"
      (2434501 'move' tmp[2434497](2434499 'set reference' call_tmp[2265562]))
      (2265580 call chpl_localeID_to_locale[92849] tmp[2434497] ret_tmp[2265577])
      (2265583 'move' call_tmp[2265575] ret_tmp[2265577])
      (2265586 'move' call_tmp[2265560] call_tmp[2265575])
      wide-ref tmp[2434504]:locale[28] "temp"
      (2434508 'move' tmp[2434504](2434506 'set reference' ret[2265545]))
      wide-ref tmp[2434511]:locale[28] "temp"
      (2434515 'move' tmp[2434511](2434513 'set reference' call_tmp[2265560]))
      (2265590 call =[90631] tmp[2434504] tmp[2434511])
      ref i_x[2265593]:locale[28] "temp"
      (2265595 'move' i_x[2265593](2265597 'set reference' call_tmp[2265560]))
      wide-ref tmp[2434518]:locale[28] "temp"
      (2434521 'move' tmp[2434518] i_x[2265593])
      (2265600 call deinit[90185] tmp[2434518])
    }
    (2265603 'move' ret[2265525] ret[2265545])
    const-val origLocale[1421781]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1421783 'move' origLocale[1421781] ret[2265525])
    ref call_tmp[2263584]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263586 'move' call_tmp[2263584](2263588 '.' this[1421734] home[1060935]))
    const-val call_tmp[1421797]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166253]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166255 'move' coerce_tmp[2166253](2166257 '.v' call_tmp[2263584] _instance[89975]))
    val coerce_tmp[2166260]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166262 'move' coerce_tmp[2166260](2166264 'cast' object[22] coerce_tmp[2166253]))
    const-val call_tmp[2166267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428719]:__wide_object[2381018] "temp"
    (2428722 'move' tmp[2428719] nil[44])
    (2166269 'move' call_tmp[2166267](2166271 'ptr_eq' coerce_tmp[2166260] tmp[2428719]))
    if call_tmp[2166267]
    {
      (2166277 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1421799 'move' call_tmp[1421797](1421801 '_wide_get_locale' coerce_tmp[2166253]))
    val error[1813387]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1813389 'move' error[1813387] nil[44])
    val isdirect[2095113]:bool[10] "temp"
    (2095118 'move' isdirect[2095113](2095115 call chpl_doDirectExecuteOn[187423] call_tmp[1421797]))
    if isdirect[2095113]
    {
      wide-ref tmp[2423375]:channel(true,dynamic,false)[1060947] "temp"
      (2423378 'move' tmp[2423375] this[1421734])
      wide-ref tmp[2423381]:__wide_Error[2381123] "temp"
      (2423385 'move' tmp[2423381](2423383 'set reference' error[1813387]))
      (2095122 call on_fn[1421810] tmp[2423375] x[1421736] ret[2265525] tmp[2423381])
    }
    {
      val _args_foron_fn[2095146]:_class_localson_fn[2095132] "temp"
      (2095150 'move' _args_foron_fn[2095146](2095148 'stack allocate class' _class_localson_fn[2095132]))
      (2095152 '.=' _args_foron_fn[2095146] _0_tmp[2095135] call_tmp[1421797])
      ref tmp[2095156]:channel(true,dynamic,false)[1060947] "temp"
      (2095160 'move' tmp[2095156](2095158 'set reference' this[1421734]))
      wide-ref tmp[2423388]:channel(true,dynamic,false)[1060947] "temp"
      (2423391 'move' tmp[2423388] tmp[2095156])
      (2095162 '.=' _args_foron_fn[2095146] _1_this[2095137] tmp[2423388])
      (2095166 '.=' _args_foron_fn[2095146] _2_x[2095139] x[1421736])
      (2095170 '.=' _args_foron_fn[2095146] _3_rvfDerefTmp[2095141] ret[2265525])
      ref tmp[2095174]:__wide_Error[2381123] "temp"
      (2095178 'move' tmp[2095174](2095176 'set reference' error[1813387]))
      wide-ref tmp[2423394]:__wide_Error[2381123] "temp"
      (2423397 'move' tmp[2423394] tmp[2095174])
      (2095180 '.=' _args_foron_fn[2095146] _4_error[2095143] tmp[2423394])
      val _args_vforon_fn[2095184]:c_void_ptr[149] "temp"
      (2095188 'move' _args_vforon_fn[2095184](2095186 'cast_to_void_star' _args_foron_fn[2095146]))
      val _args_sizeon_fn[2095190]:int(64)[13] "temp"
      (2095194 'move' _args_sizeon_fn[2095190](2095192 'sizeof_bundle' _class_localson_fn[2095132]))
      on(2095250 call wrapon_fn[2095196] call_tmp[1421797] _args_vforon_fn[2095184] _args_sizeon_fn[2095190] _args_foron_fn[2095146])
    }
    val errorExists[2110456]:bool[10] "temp"
    (2110461 'move' errorExists[2110456](2110458 '!=' error[1813387] nil[44]))
    if errorExists[2110456]
    {
      (1813393 '=' error_out[1813382] error[1813387])
      ref i_x[2264615]:locale[28] "temp"
      (2264619 'move' i_x[2264615](2264617 'set reference' origLocale[1421781]))
      wide-ref tmp[2434218]:locale[28] "temp"
      (2434221 'move' tmp[2434218] i_x[2264615])
      (2264623 call deinit[90185] tmp[2434218])
      gotoErrorHandlingReturn _endwriteIt[1813384] _endwriteIt[1813384]
    }
    ref i_x[2264627]:locale[28] "temp"
    (2264631 'move' i_x[2264627](2264629 'set reference' origLocale[1421781]))
    wide-ref tmp[2434224]:locale[28] "temp"
    (2434227 'move' tmp[2434224] i_x[2264627])
    (2264635 call deinit[90185] tmp[2434224])
    label _endwriteIt[1813384]
    (1421854 return _void[55])
  }
  function channel(true,dynamic,false)[1060947].binary[1401775](const  ref arg this[1401781]:channel(true,dynamic,false)[1060947]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_129[2379702]:string[26] "temp"
    (2379703 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[1401793]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (1401917 'move' ret[1401793] 0)
    ref call_tmp[2263554]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263556 'move' call_tmp[2263554](2263558 '.' this[1401781] home[1060935]))
    const-val call_tmp[1401816]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166163]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166165 'move' coerce_tmp[2166163](2166167 '.v' call_tmp[2263554] _instance[89975]))
    val coerce_tmp[2166170]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166172 'move' coerce_tmp[2166170](2166174 'cast' object[22] coerce_tmp[2166163]))
    const-val call_tmp[2166177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428701]:__wide_object[2381018] "temp"
    (2428704 'move' tmp[2428701] nil[44])
    (2166179 'move' call_tmp[2166177](2166181 'ptr_eq' coerce_tmp[2166170] tmp[2428701]))
    if call_tmp[2166177]
    {
      (2166187 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1401818 'move' call_tmp[1401816](1401820 '_wide_get_locale' coerce_tmp[2166163]))
    val isdirect[2094696]:bool[10] "temp"
    (2094701 'move' isdirect[2094696](2094698 call chpl_doDirectExecuteOn[187423] call_tmp[1401816]))
    if isdirect[2094696]
    {
      wide-ref tmp[2423269]:channel(true,dynamic,false)[1060947] "temp"
      (2423272 'move' tmp[2423269] this[1401781])
      wide-ref tmp[2423275]:uint(8)[100] "temp"
      (2423279 'move' tmp[2423275](2423277 'set reference' ret[1401793]))
      (2094705 call on_fn[1401829] tmp[2423269] tmp[2423275])
    }
    {
      val _args_foron_fn[2094723]:_class_localson_fn[2094713] "temp"
      (2094727 'move' _args_foron_fn[2094723](2094725 'stack allocate class' _class_localson_fn[2094713]))
      (2094729 '.=' _args_foron_fn[2094723] _0_tmp[2094716] call_tmp[1401816])
      ref tmp[2094733]:channel(true,dynamic,false)[1060947] "temp"
      (2094737 'move' tmp[2094733](2094735 'set reference' this[1401781]))
      wide-ref tmp[2423282]:channel(true,dynamic,false)[1060947] "temp"
      (2423285 'move' tmp[2423282] tmp[2094733])
      (2094739 '.=' _args_foron_fn[2094723] _1_this[2094718] tmp[2423282])
      ref tmp[2094743]:uint(8)[100] "temp"
      (2094747 'move' tmp[2094743](2094745 'set reference' ret[1401793]))
      wide-ref tmp[2423288]:uint(8)[100] "temp"
      (2423291 'move' tmp[2423288] tmp[2094743])
      (2094749 '.=' _args_foron_fn[2094723] _2_ret[2094720] tmp[2423288])
      val _args_vforon_fn[2094753]:c_void_ptr[149] "temp"
      (2094757 'move' _args_vforon_fn[2094753](2094755 'cast_to_void_star' _args_foron_fn[2094723]))
      val _args_sizeon_fn[2094759]:int(64)[13] "temp"
      (2094763 'move' _args_sizeon_fn[2094759](2094761 'sizeof_bundle' _class_localson_fn[2094713]))
      on(2094803 call wrapon_fn[2094765] call_tmp[1401816] _args_vforon_fn[2094753] _args_sizeon_fn[2094759] _args_foron_fn[2094723])
    }
    const-val coerce_tmp[1401904]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1401910 'move' coerce_tmp[1401904](1401906 'cast' uint(8)[100] 0))
    const-val call_tmp[2199079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2199081 'move' call_tmp[2199079](2199083 '!=' ret[1401793] coerce_tmp[1401904]))
    label _end_binary[1401877]
    (1401879 return call_tmp[2199079])
  }
  function channel(true,dynamic,false)[1060947].styleElement[1400739](const  ref arg this[1400745]:channel(true,dynamic,false)[1060947], const in arg element[1400747]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_129[2379696]:string[26] "temp"
    (2379697 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[1400751]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1400759]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1400761 'move' ret[1400759] 0)
    ref call_tmp[2263544]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263546 'move' call_tmp[2263544](2263548 '.' this[1400745] home[1060935]))
    const-val call_tmp[1400776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166133]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166135 'move' coerce_tmp[2166133](2166137 '.v' call_tmp[2263544] _instance[89975]))
    val coerce_tmp[2166140]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166142 'move' coerce_tmp[2166140](2166144 'cast' object[22] coerce_tmp[2166133]))
    const-val call_tmp[2166147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428695]:__wide_object[2381018] "temp"
    (2428698 'move' tmp[2428695] nil[44])
    (2166149 'move' call_tmp[2166147](2166151 'ptr_eq' coerce_tmp[2166140] tmp[2428695]))
    if call_tmp[2166147]
    {
      (2166157 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1400778 'move' call_tmp[1400776](1400780 '_wide_get_locale' coerce_tmp[2166133]))
    val isdirect[2094569]:bool[10] "temp"
    (2094574 'move' isdirect[2094569](2094571 call chpl_doDirectExecuteOn[187423] call_tmp[1400776]))
    if isdirect[2094569]
    {
      wide-ref tmp[2423238]:channel(true,dynamic,false)[1060947] "temp"
      (2423241 'move' tmp[2423238] this[1400745])
      wide-ref tmp[2423244]:int(64)[13] "temp"
      (2423248 'move' tmp[2423244](2423246 'set reference' ret[1400759]))
      (2094578 call on_fn[1400789] tmp[2423238] element[1400747] tmp[2423244])
    }
    {
      val _args_foron_fn[2094599]:_class_localson_fn[2094587] "temp"
      (2094603 'move' _args_foron_fn[2094599](2094601 'stack allocate class' _class_localson_fn[2094587]))
      (2094605 '.=' _args_foron_fn[2094599] _0_tmp[2094590] call_tmp[1400776])
      ref tmp[2094609]:channel(true,dynamic,false)[1060947] "temp"
      (2094613 'move' tmp[2094609](2094611 'set reference' this[1400745]))
      wide-ref tmp[2423251]:channel(true,dynamic,false)[1060947] "temp"
      (2423254 'move' tmp[2423251] tmp[2094609])
      (2094615 '.=' _args_foron_fn[2094599] _1_this[2094592] tmp[2423251])
      (2094619 '.=' _args_foron_fn[2094599] _2_element[2094594] element[1400747])
      ref tmp[2094623]:int(64)[13] "temp"
      (2094627 'move' tmp[2094623](2094625 'set reference' ret[1400759]))
      wide-ref tmp[2423257]:int(64)[13] "temp"
      (2423260 'move' tmp[2423257] tmp[2094623])
      (2094629 '.=' _args_foron_fn[2094599] _3_ret[2094596] tmp[2423257])
      val _args_vforon_fn[2094633]:c_void_ptr[149] "temp"
      (2094637 'move' _args_vforon_fn[2094633](2094635 'cast_to_void_star' _args_foron_fn[2094599]))
      val _args_sizeon_fn[2094639]:int(64)[13] "temp"
      (2094643 'move' _args_sizeon_fn[2094639](2094641 'sizeof_bundle' _class_localson_fn[2094587]))
      on(2094691 call wrapon_fn[2094645] call_tmp[1400776] _args_vforon_fn[2094633] _args_sizeon_fn[2094639] _args_foron_fn[2094599])
    }
    (1400858 'move' ret[1400751] ret[1400759])
    label _end_styleElement[1400830]
    (1400832 return ret[1400751])
  }
  function channel(true,dynamic,false)[1060947].writeBytes[1407802](const  ref arg this[1407808]:channel(true,dynamic,false)[1060947], const in arg x[1407810]:__wide__ddata__real64[2381466], const in arg len[1407814]:int(64)[13], ref arg error_out[1813049]:__wide_Error[2381123]) : bool[10] throws "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_3096[2379732]:string[26] "temp"
    (2379733 'move' "in channel.writeBytes()" "in channel.writeBytes()")
    const-val local__str_literal_129[2379726]:string[26] "temp"
    (2379727 'move' "argument to ! is nil" "argument to ! is nil")
    val ret[1407818]:bool[10] "dead after last mention" "RVV" "temp"
    val err[1407834]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207612]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207614 'move' call_tmp[2207612](2207617 call qio_int_to_err[223634] 0))
    (1407836 'move' err[1407834] call_tmp[2207612])
    ref call_tmp[2263564]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263566 'move' call_tmp[2263564](2263568 '.' this[1407808] home[1060935]))
    const-val call_tmp[1407851]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2166193]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166195 'move' coerce_tmp[2166193](2166197 '.v' call_tmp[2263564] _instance[89975]))
    val coerce_tmp[2166200]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2166202 'move' coerce_tmp[2166200](2166204 'cast' object[22] coerce_tmp[2166193]))
    const-val call_tmp[2166207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428707]:__wide_object[2381018] "temp"
    (2428710 'move' tmp[2428707] nil[44])
    (2166209 'move' call_tmp[2166207](2166211 'ptr_eq' coerce_tmp[2166200] tmp[2428707]))
    if call_tmp[2166207]
    {
      (2166217 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1407853 'move' call_tmp[1407851](1407855 '_wide_get_locale' coerce_tmp[2166193]))
    val error[1813054]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (1813056 'move' error[1813054] nil[44])
    val isdirect[2094808]:bool[10] "temp"
    (2094813 'move' isdirect[2094808](2094810 call chpl_doDirectExecuteOn[187423] call_tmp[1407851]))
    if isdirect[2094808]
    {
      wide-ref tmp[2423294]:channel(true,dynamic,false)[1060947] "temp"
      (2423297 'move' tmp[2423294] this[1407808])
      wide-ref tmp[2423300]:syserr[223584] "temp"
      (2423304 'move' tmp[2423300](2423302 'set reference' err[1407834]))
      wide-ref tmp[2423307]:__wide_Error[2381123] "temp"
      (2423311 'move' tmp[2423307](2423309 'set reference' error[1813054]))
      (2094817 call on_fn[1407864] tmp[2423294] x[1407810] len[1407814] tmp[2423300] tmp[2423307])
    }
    {
      val _args_foron_fn[2094844]:_class_localson_fn[2094828] "temp"
      (2094848 'move' _args_foron_fn[2094844](2094846 'stack allocate class' _class_localson_fn[2094828]))
      (2094850 '.=' _args_foron_fn[2094844] _0_tmp[2094831] call_tmp[1407851])
      ref tmp[2094854]:channel(true,dynamic,false)[1060947] "temp"
      (2094858 'move' tmp[2094854](2094856 'set reference' this[1407808]))
      wide-ref tmp[2423314]:channel(true,dynamic,false)[1060947] "temp"
      (2423317 'move' tmp[2423314] tmp[2094854])
      (2094860 '.=' _args_foron_fn[2094844] _1_this[2094833] tmp[2423314])
      (2094864 '.=' _args_foron_fn[2094844] _2_x[2094835] x[1407810])
      (2094868 '.=' _args_foron_fn[2094844] _3_len[2094837] len[1407814])
      ref tmp[2094872]:syserr[223584] "temp"
      (2094876 'move' tmp[2094872](2094874 'set reference' err[1407834]))
      wide-ref tmp[2423320]:syserr[223584] "temp"
      (2423323 'move' tmp[2423320] tmp[2094872])
      (2094878 '.=' _args_foron_fn[2094844] _4_err[2094839] tmp[2423320])
      ref tmp[2094882]:__wide_Error[2381123] "temp"
      (2094886 'move' tmp[2094882](2094884 'set reference' error[1813054]))
      wide-ref tmp[2423326]:__wide_Error[2381123] "temp"
      (2423329 'move' tmp[2423326] tmp[2094882])
      (2094888 '.=' _args_foron_fn[2094844] _5_error[2094841] tmp[2423326])
      val _args_vforon_fn[2094892]:c_void_ptr[149] "temp"
      (2094896 'move' _args_vforon_fn[2094892](2094894 'cast_to_void_star' _args_foron_fn[2094844]))
      val _args_sizeon_fn[2094898]:int(64)[13] "temp"
      (2094902 'move' _args_sizeon_fn[2094898](2094900 'sizeof_bundle' _class_localson_fn[2094828]))
      on(2094966 call wrapon_fn[2094904] call_tmp[1407851] _args_vforon_fn[2094892] _args_sizeon_fn[2094898] _args_foron_fn[2094844])
    }
    val errorExists[2110288]:bool[10] "temp"
    (2110293 'move' errorExists[2110288](2110290 '!=' error[1813054] nil[44]))
    if errorExists[2110288]
    {
      (1813060 '=' error_out[1813049] error[1813054])
      gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
    }
    const-val call_tmp[2206943]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206945 'move' call_tmp[2206943](2206948 call qio_err_iserr[223646] err[1407834]))
    const-val call_tmp[2206950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206952 'move' call_tmp[2206950](2206954 '!=' call_tmp[2206943] 0))
    if call_tmp[2206950]
    {
      val error[1813068]:__wide_Error[2381123] "error variable" "temp"
      (1813077 'move' error[1813068] nil[44])
      wide-ref tmp[2417217]:channel(true,dynamic,false)[1060947] "temp"
      (2417220 'move' tmp[2417217] this[1407808])
      ref tmp[2417223]:__wide_Error[2381123] "temp"
      (2417227 'move' tmp[2417223](2417225 'set reference' error[1813068]))
      (1407926 call _ch_ioerror[1062865] tmp[2417217] err[1407834] "in channel.writeBytes()" tmp[2417223])
      val errorExists[2110296]:bool[10] "temp"
      (2110301 'move' errorExists[2110296](2110298 '!=' error[1813068] nil[44]))
      if errorExists[2110296]
      {
        gotoErrorHandling handler[1813069] handler[1813069]
      }
      label handler[1813069]
      val errorExists[2110304]:bool[10] "temp"
      (2110309 'move' errorExists[2110304](2110306 '!=' error[1813068] nil[44]))
      if errorExists[2110304]
      {
        (1813084 '=' error_out[1813049] error[1813068])
        gotoErrorHandlingReturn _endwriteBytes[1813051] _endwriteBytes[1813051]
      }
    }
    (1407933 'move' ret[1407818] 1)
    label _endwriteBytes[1813051]
    (1407938 return ret[1407818])
  }
  function _local_stringify[2397320](const in arg _e0_args[2397322]:c_string[19], ref arg _retArg[2397324]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val local__str_literal_3100[2397327]:string[26] "temp"
    (2397329 'move' local__str_literal_3100[2397327] "")
    const-val ret[2397332]:string[26] "dead after last mention" "RVV" "temp"
    val str[2397334]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2397336]:string[26] "temp"
    (2397338 'move' inlineImm[2397336] local__str_literal_3100[2397327])
    ref i_x[2397341]:string[26] "temp"
    (2397343 'move' i_x[2397341](2397345 'set reference' inlineImm[2397336]))
    val ret[2397347]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2397349]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2446473]:string[26] "temp"
    (2446476 'move' tmp[2446473] i_x[2397341])
    (2397352 call _local_init=[2390981] tmp[2397349] tmp[2446473])
    (2397355 'move' ret[2397347] tmp[2397349])
    (2397358 'move' str[2397334] ret[2397347])
    val error[2397361]:__wide_Error[2381123] "error variable" "temp"
    (2397363 'move' error[2397361] nil[44])
    const-val call_tmp[2397366]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2397368]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2397370 'move' call_tmp[2397368](2397372 'string_length_bytes' _e0_args[2397322]))
    val errorExists[2397374]:bool[10] "temp"
    (2397376 'move' errorExists[2397374](2397378 '!=' error[2397361] nil[44]))
    if errorExists[2397374]
    {
      gotoErrorHandling handler[2397489] handler[2397489]
    }
    const-val ret[2397386]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2397388]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2397390 'move' call_tmp[2397388](2397392 'cast' c_ptr(uint(8))[937423] _e0_args[2397322]))
    val error[2397395]:__wide_Error[2381123] "error variable" "temp"
    (2397397 'move' error[2397395] nil[44])
    const-val ret[2397400]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2397402]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2397404]:__wide_Error[2381123] "error variable" "temp"
    (2397406 'move' error[2397404] nil[44])
    const-val ret_tmp[2397409]:string[26] "temp"
    ref tmp[2446479]:__wide_Error[2381123] "temp"
    (2446483 'move' tmp[2446479](2446481 'set reference' error[2397404]))
    (2397412 call _local_decodeByteBuffer[2400444] call_tmp[2397388] call_tmp[2397368] replace[173648] tmp[2446479] ret_tmp[2397409])
    (2397418 'move' call_tmp[2397402] ret_tmp[2397409])
    val errorExists[2397421]:bool[10] "temp"
    (2397423 'move' errorExists[2397421](2397425 '!=' error[2397404] nil[44]))
    if errorExists[2397421]
    {
      (2397430 '=' error[2397395] error[2397404])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2397439] _endcreateStringWithNewBuffer[2397439]
    }
    (2397436 'move' ret[2397400] call_tmp[2397402])
    label _endcreateStringWithNewBuffer[2397439]
    val errorExists[2397441]:bool[10] "temp"
    (2397443 'move' errorExists[2397441](2397445 '!=' error[2397395] nil[44]))
    if errorExists[2397441]
    {
      (2397450 '=' error[2397361] error[2397395])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2397459] _endcreateStringWithNewBuffer[2397459]
    }
    (2397456 'move' ret[2397386] ret[2397400])
    label _endcreateStringWithNewBuffer[2397459]
    (2397461 'move' call_tmp[2397366] ret[2397386])
    val errorExists[2397464]:bool[10] "temp"
    (2397466 'move' errorExists[2397464](2397468 '!=' error[2397361] nil[44]))
    if errorExists[2397464]
    {
      gotoErrorHandling handler[2397489] handler[2397489]
    }
    (2397477 call _local_+=[2401507] str[2397334] call_tmp[2397366])
    ref i_x[2397480]:string[26] "temp"
    (2397482 'move' i_x[2397480](2397484 'set reference' call_tmp[2397366]))
    wide-ref tmp[2446486]:string[26] "temp"
    (2446489 'move' tmp[2446486] i_x[2397480])
    (2397487 call _local_deinit[2391408] tmp[2446486])
    label handler[2397489]
    val errorExists[2397491]:bool[10] "temp"
    (2397493 'move' errorExists[2397491](2397495 '!=' error[2397361] nil[44]))
    if errorExists[2397491]
    {
      (2397501 call _local_chpl_uncaught_error[2401525] error[2397361])
    }
    (2397504 'move' ret[2397332] str[2397334])
    gotoReturn _end_stringify[2397509] _end_stringify[2397509]
    label _end_stringify[2397509]
    (2397511 '=' _retArg[2397324] ret[2397332])
    (2397514 return _void[55])
  }
  function stringify[958787](const in arg _e0_args[958789]:c_string[19], ref arg _retArg[1832047]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2377779]:string[26] "temp"
    (2377780 'move' "" "")
    const-val ret[958793]:string[26] "dead after last mention" "RVV" "temp"
    val str[958825]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204299]:string[26] "temp"
    (2204302 'move' inlineImm[2204299] "")
    ref i_x[2204304]:string[26] "temp"
    (2204308 'move' i_x[2204304](2204306 'set reference' inlineImm[2204299]))
    val ret[2204311]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204313]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429893]:string[26] "temp"
    (2429896 'move' tmp[2429893] i_x[2204304])
    (2204316 call init=[30771] tmp[2204313] tmp[2429893])
    (2204319 'move' ret[2204311] tmp[2204313])
    (958827 'move' str[958825] ret[2204311])
    val error[1809115]:__wide_Error[2381123] "error variable" "temp"
    (1809131 'move' error[1809115] nil[44])
    const-val call_tmp[963711]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2203733]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2203735 'move' call_tmp[2203733](2203737 'string_length_bytes' _e0_args[958789]))
    val errorExists[2108424]:bool[10] "temp"
    (2108429 'move' errorExists[2108424](2108426 '!=' error[1809115] nil[44]))
    if errorExists[2108424]
    {
      gotoErrorHandling handler[1809116] handler[1809116]
    }
    const-val ret[2141493]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2141495]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2141497 'move' call_tmp[2141495](2141499 'cast' c_ptr(uint(8))[937423] _e0_args[958789]))
    val error[2141504]:__wide_Error[2381123] "error variable" "temp"
    (2141506 'move' error[2141504] nil[44])
    const-val ret[2141509]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2141511]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2141513]:__wide_Error[2381123] "error variable" "temp"
    (2141515 'move' error[2141513] nil[44])
    const-val ret_tmp[2141518]:string[26] "temp"
    ref tmp[2426610]:__wide_Error[2381123] "temp"
    (2426614 'move' tmp[2426610](2426612 'set reference' error[2141513]))
    (2141521 call decodeByteBuffer[173892] call_tmp[2141495] call_tmp[2203733] replace[173648] tmp[2426610] ret_tmp[2141518])
    (2141527 'move' call_tmp[2141511] ret_tmp[2141518])
    val errorExists[2141530]:bool[10] "temp"
    (2141532 'move' errorExists[2141530](2141534 '!=' error[2141513] nil[44]))
    if errorExists[2141530]
    {
      (2141539 '=' error[2141504] error[2141513])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141548] _endcreateStringWithNewBuffer[2141548]
    }
    (2141545 'move' ret[2141509] call_tmp[2141511])
    label _endcreateStringWithNewBuffer[2141548]
    val errorExists[2141553]:bool[10] "temp"
    (2141555 'move' errorExists[2141553](2141557 '!=' error[2141504] nil[44]))
    if errorExists[2141553]
    {
      (2141562 '=' error[1809115] error[2141504])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141571] _endcreateStringWithNewBuffer[2141571]
    }
    (2141568 'move' ret[2141493] ret[2141509])
    label _endcreateStringWithNewBuffer[2141571]
    (1829060 'move' call_tmp[963711] ret[2141493])
    val errorExists[2108432]:bool[10] "temp"
    (2108437 'move' errorExists[2108432](2108434 '!=' error[1809115] nil[44]))
    if errorExists[2108432]
    {
      gotoErrorHandling handler[1809116] handler[1809116]
    }
    (963721 call +=[38797] str[958825] call_tmp[963711])
    ref i_x[2130417]:string[26] "temp"
    (2130421 'move' i_x[2130417](2130419 'set reference' call_tmp[963711]))
    wide-ref tmp[2425320]:string[26] "temp"
    (2425323 'move' tmp[2425320] i_x[2130417])
    (2130425 call deinit[30831] tmp[2425320])
    label handler[1809116]
    val errorExists[2108440]:bool[10] "temp"
    (2108445 'move' errorExists[2108440](2108442 '!=' error[1809115] nil[44]))
    if errorExists[2108440]
    {
      (1809137 call chpl_uncaught_error[170243] error[1809115])
    }
    (980860 'move' ret[958793] str[958825])
    gotoReturn _end_stringify[959450] _end_stringify[959450]
    label _end_stringify[959450]
    (1832049 '=' _retArg[1832047] ret[958793])
    (1832053 return _void[55])
  }
  function stringify[1056406](const  ref arg _e0_args[1056408]:byteIndex[28170], ref arg _retArg[1832999]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2378077]:int(32)[95] "temp"
    (2378078 'move' local_IOHINT_NONE[2378077] IOHINT_NONE[231411])
    const-val local__str_literal_4778[2378071]:string[26] "temp"
    (2378072 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2378065]:string[26] "temp"
    (2378066 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2378059]:locale[28] "temp"
    (2378060 'move' local_nilLocale[2378059] nilLocale[89939])
    const-val ret[1056412]:string[26] "dead after last mention" "RVV" "temp"
    val error[1809520]:__wide_Error[2381123] "error variable" "temp"
    (1809705 'move' error[1809520] nil[44])
    const-val call_tmp[1056857]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1060579]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2263003]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263005 'move' style[2263003](2263008 call defaultIOStyle[235295]))
    (1060583 'move' default_arg_style[1060579] style[2263003])
    val errorExists[2108592]:bool[10] "temp"
    (2108597 'move' errorExists[2108592](2108594 '!=' error[1809520] nil[44]))
    if errorExists[2108592]
    {
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1831503]:file[235580] "temp"
    ref tmp[2415133]:__wide_Error[2381123] "temp"
    (2415137 'move' tmp[2415133](2415135 'set reference' error[1809520]))
    (1056862 call openmem[237625] default_arg_style[1060579] tmp[2415133] ret_tmp[1831503])
    (1831506 'move' call_tmp[1056857] ret_tmp[1831503])
    val errorExists[2108600]:bool[10] "temp"
    (2108605 'move' errorExists[2108600](2108602 '!=' error[1809520] nil[44]))
    if errorExists[2108600]
    {
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val f[1056863]:file[235580] "dead at end of block" "insert auto destroy"
    (1056865 'move' f[1056863] call_tmp[1056857])
    const-val call_tmp[1056880]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    val errorExists[2108608]:bool[10] "temp"
    (2108613 'move' errorExists[2108608](2108610 '!=' error[1809520] nil[44]))
    if errorExists[2108608]
    {
      val error[1843090]:__wide_Error[2381123] "error variable" "temp"
      (1843092 'move' error[1843090] nil[44])
      ref tmp[2418877]:__wide_Error[2381123] "temp"
      (2418881 'move' tmp[2418877](2418879 'set reference' error[1843090]))
      (1843096 call close[236024] f[1056863] tmp[2418877])
      val errorExists[2110712]:bool[10] "temp"
      (2110717 'move' errorExists[2110712](2110714 '!=' error[1843090] nil[44]))
      if errorExists[2110712]
      {
        gotoErrorHandling handler[1843107] handler[1843107]
      }
      label handler[1843107]
      val errorExists[2110720]:bool[10] "temp"
      (2110725 'move' errorExists[2110720](2110722 '!=' error[1843090] nil[44]))
      if errorExists[2110720]
      {
        (1843118 call chpl_uncaught_error[170243] error[1843090])
      }
      ref i_x[2327773]:file[235580] "temp"
      (2327777 'move' i_x[2327773](2327775 'set reference' f[1056863]))
      (2327781 call deinit[235891] i_x[2327773])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    val errorExists[2108616]:bool[10] "temp"
    (2108621 'move' errorExists[2108616](2108618 '!=' error[1809520] nil[44]))
    if errorExists[2108616]
    {
      val error[1843126]:__wide_Error[2381123] "error variable" "temp"
      (1843128 'move' error[1843126] nil[44])
      ref tmp[2418884]:__wide_Error[2381123] "temp"
      (2418888 'move' tmp[2418884](2418886 'set reference' error[1843126]))
      (1843132 call close[236024] f[1056863] tmp[2418884])
      val errorExists[2110728]:bool[10] "temp"
      (2110733 'move' errorExists[2110728](2110730 '!=' error[1843126] nil[44]))
      if errorExists[2110728]
      {
        gotoErrorHandling handler[1843143] handler[1843143]
      }
      label handler[1843143]
      val errorExists[2110736]:bool[10] "temp"
      (2110741 'move' errorExists[2110736](2110738 '!=' error[1843126] nil[44]))
      if errorExists[2110736]
      {
        (1843154 call chpl_uncaught_error[170243] error[1843126])
      }
      ref i_x[2327785]:file[235580] "temp"
      (2327789 'move' i_x[2327785](2327787 'set reference' f[1056863]))
      (2327793 call deinit[235891] i_x[2327785])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val tmp[2263207]:int(32)[95] "dead after last mention" "temp"
    (2263209 'move' tmp[2263207](2263211 'cast' int(32)[95] 0))
    val errorExists[2108624]:bool[10] "temp"
    (2108629 'move' errorExists[2108624](2108626 '!=' error[1809520] nil[44]))
    if errorExists[2108624]
    {
      val error[1843162]:__wide_Error[2381123] "error variable" "temp"
      (1843164 'move' error[1843162] nil[44])
      ref tmp[2418891]:__wide_Error[2381123] "temp"
      (2418895 'move' tmp[2418891](2418893 'set reference' error[1843162]))
      (1843168 call close[236024] f[1056863] tmp[2418891])
      val errorExists[2110744]:bool[10] "temp"
      (2110749 'move' errorExists[2110744](2110746 '!=' error[1843162] nil[44]))
      if errorExists[2110744]
      {
        gotoErrorHandling handler[1843179] handler[1843179]
      }
      label handler[1843179]
      val errorExists[2110752]:bool[10] "temp"
      (2110757 'move' errorExists[2110752](2110754 '!=' error[1843162] nil[44]))
      if errorExists[2110752]
      {
        (1843190 call chpl_uncaught_error[170243] error[1843162])
      }
      ref i_x[2327797]:file[235580] "temp"
      (2327801 'move' i_x[2327797](2327799 'set reference' f[1056863]))
      (2327805 call deinit[235891] i_x[2327797])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_style[1061338]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263279]:file[235580] "temp"
    (2263283 'move' i_this[2263279](2263281 'set reference' f[1056863]))
    val ret[2263292]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263294]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263296]:__wide_Error[2381123] "error variable" "temp"
    (2263298 'move' error[2263296] nil[44])
    ref tmp[2434038]:__wide_Error[2381123] "temp"
    (2434042 'move' tmp[2434038](2434040 'set reference' error[2263296]))
    (2263301 'move' style[2263294](2263304 call _style[235960] i_this[2263279] tmp[2434038]))
    val errorExists[2263307]:bool[10] "temp"
    (2263309 'move' errorExists[2263307](2263311 '!=' error[2263296] nil[44]))
    if errorExists[2263307]
    {
      (2263316 '=' error[1809520] error[2263296])
      gotoErrorHandlingReturn _endwriter_default_style[2263325] _endwriter_default_style[2263325]
    }
    (2263322 'move' ret[2263292] style[2263294])
    label _endwriter_default_style[2263325]
    (1061344 'move' default_arg_style[1061338] ret[2263292])
    val errorExists[2108632]:bool[10] "temp"
    (2108637 'move' errorExists[2108632](2108634 '!=' error[1809520] nil[44]))
    if errorExists[2108632]
    {
      val error[1843198]:__wide_Error[2381123] "error variable" "temp"
      (1843200 'move' error[1843198] nil[44])
      ref tmp[2418898]:__wide_Error[2381123] "temp"
      (2418902 'move' tmp[2418898](2418900 'set reference' error[1843198]))
      (1843204 call close[236024] f[1056863] tmp[2418898])
      val errorExists[2110760]:bool[10] "temp"
      (2110765 'move' errorExists[2110760](2110762 '!=' error[1843198] nil[44]))
      if errorExists[2110760]
      {
        gotoErrorHandling handler[1843215] handler[1843215]
      }
      label handler[1843215]
      val errorExists[2110768]:bool[10] "temp"
      (2110773 'move' errorExists[2110768](2110770 '!=' error[1843198] nil[44]))
      if errorExists[2110768]
      {
        (1843226 call chpl_uncaught_error[170243] error[1843198])
      }
      ref i_x[2327809]:file[235580] "temp"
      (2327813 'move' i_x[2327809](2327811 'set reference' f[1056863]))
      (2327817 call deinit[235891] i_x[2327809])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1833023]:channel(true,dynamic,false)[1060947] "temp"
    ref tmp[2415140]:__wide_Error[2381123] "temp"
    (2415144 'move' tmp[2415140](2415142 'set reference' error[1809520]))
    (1056888 call writer[1060853] f[1056863] 0 9223372036854775807 tmp[2263207] default_arg_style[1061338] tmp[2415140] ret_tmp[1833023])
    (1833026 'move' call_tmp[1056880] ret_tmp[1833023])
    val errorExists[2108640]:bool[10] "temp"
    (2108645 'move' errorExists[2108640](2108642 '!=' error[1809520] nil[44]))
    if errorExists[2108640]
    {
      val error[1843234]:__wide_Error[2381123] "error variable" "temp"
      (1843236 'move' error[1843234] nil[44])
      ref tmp[2418905]:__wide_Error[2381123] "temp"
      (2418909 'move' tmp[2418905](2418907 'set reference' error[1843234]))
      (1843240 call close[236024] f[1056863] tmp[2418905])
      val errorExists[2110776]:bool[10] "temp"
      (2110781 'move' errorExists[2110776](2110778 '!=' error[1843234] nil[44]))
      if errorExists[2110776]
      {
        gotoErrorHandling handler[1843251] handler[1843251]
      }
      label handler[1843251]
      val errorExists[2110784]:bool[10] "temp"
      (2110789 'move' errorExists[2110784](2110786 '!=' error[1843234] nil[44]))
      if errorExists[2110784]
      {
        (1843262 call chpl_uncaught_error[170243] error[1843234])
      }
      ref i_x[2327821]:file[235580] "temp"
      (2327825 'move' i_x[2327821](2327823 'set reference' f[1056863]))
      (2327829 call deinit[235891] i_x[2327821])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val w[1056891]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1056893 'move' w[1056891] call_tmp[1056880])
    const-val args[2265668]:1*byteIndex[1057081] "insert auto destroy"
    wide-ref tmp[2442844]:byteIndex[28170] "temp"
    (2442847 'move' tmp[2442844] _e0_args[1056408])
    (2347635 'set svec member' args[2265668] 0 tmp[2442844])
    const-val ret[2265681]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2265683]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265685 'move' call_tmp[2265683](2265687 '.' w[1056891] _readWriteThisFromLocale[1060944]))
    val ret[2265690]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2265692]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2434524]:locale[28] "temp"
    (2434528 'move' tmp[2434524](2434526 'set reference' tmp[2265692]))
    wide-ref tmp[2434531]:locale[28] "temp"
    (2434534 'move' tmp[2434531] call_tmp[2265683])
    (2265695 call init=[90167] tmp[2434524] tmp[2434531])
    (2265698 'move' ret[2265690] tmp[2265692])
    val ret[2265701]:locale[28] "dead at end of block" "insert auto destroy"
    (2265703 'move' ret[2265701] ret[2265690])
    const-val call_tmp[2265706]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265708 'move' call_tmp[2265706](2265711 call ==[782781] ret[2265701] local_nilLocale[2378059]))
    if call_tmp[2265706]
    {
      const-val call_tmp[2265716]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265718]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2265720]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2265722 'move' call_tmp[2265720](2265725 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2265728 'move' call_tmp[2265718] call_tmp[2265720])
      const-val call_tmp[2265731]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2265733]:locale[28] "temp"
      wide-ref tmp[2434537]:chpl_localeID_t[209294] "temp"
      (2434541 'move' tmp[2434537](2434539 'set reference' call_tmp[2265718]))
      (2265736 call chpl_localeID_to_locale[92849] tmp[2434537] ret_tmp[2265733])
      (2265739 'move' call_tmp[2265731] ret_tmp[2265733])
      (2265742 'move' call_tmp[2265716] call_tmp[2265731])
      wide-ref tmp[2434544]:locale[28] "temp"
      (2434548 'move' tmp[2434544](2434546 'set reference' ret[2265701]))
      wide-ref tmp[2434551]:locale[28] "temp"
      (2434555 'move' tmp[2434551](2434553 'set reference' call_tmp[2265716]))
      (2265746 call =[90631] tmp[2434544] tmp[2434551])
      ref i_x[2265749]:locale[28] "temp"
      (2265751 'move' i_x[2265749](2265753 'set reference' call_tmp[2265716]))
      wide-ref tmp[2434558]:locale[28] "temp"
      (2434561 'move' tmp[2434558] i_x[2265749])
      (2265756 call deinit[90185] tmp[2434558])
    }
    (2265759 'move' ret[2265681] ret[2265701])
    const-val origLocale[2265762]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2265764 'move' origLocale[2265762] ret[2265681])
    ref call_tmp[2265769]:locale[28] "dead after last mention" "maybe param" "temp"
    (2265771 'move' call_tmp[2265769](2265773 '.' w[1056891] home[1060935]))
    const-val call_tmp[2265776]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2265778]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265780 'move' coerce_tmp[2265778](2265782 '.v' call_tmp[2265769] _instance[89975]))
    val coerce_tmp[2265785]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265787 'move' coerce_tmp[2265785](2265789 'cast' object[22] coerce_tmp[2265778]))
    const-val call_tmp[2265792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2434564]:__wide_object[2381018] "temp"
    (2434567 'move' tmp[2434564] nil[44])
    (2265794 'move' call_tmp[2265792](2265796 'ptr_eq' coerce_tmp[2265785] tmp[2434564]))
    if call_tmp[2265792]
    {
      (2265802 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2265805 'move' call_tmp[2265776](2265807 '_wide_get_locale' coerce_tmp[2265778]))
    val error[2265812]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (2265814 'move' error[2265812] nil[44])
    val isdirect[2265828]:bool[10] "temp"
    (2265830 'move' isdirect[2265828](2265833 call chpl_doDirectExecuteOn[187423] call_tmp[2265776]))
    if isdirect[2265828]
    {
      wide-ref tmp[2434570]:1*byteIndex[1057081] "temp"
      (2434574 'move' tmp[2434570](2434572 'set reference' args[2265668]))
      wide-ref tmp[2434577]:__wide_Error[2381123] "temp"
      (2434581 'move' tmp[2434577](2434579 'set reference' error[2265812]))
      (2265838 call on_fn[1066089] w[1056891] tmp[2434570] ret[2265681] tmp[2434577])
    }
    {
      val _args_foron_fn[2265844]:_class_localson_fn[2089786] "temp"
      (2265846 'move' _args_foron_fn[2265844](2265848 'stack allocate class' _class_localson_fn[2089786]))
      (2265850 '.=' _args_foron_fn[2265844] _0_tmp[2089789] call_tmp[2265776])
      (2265854 '.=' _args_foron_fn[2265844] _1_rvfDerefTmp[2089791] w[1056891])
      ref tmp[2265858]:1*byteIndex[1057081] "temp"
      (2265860 'move' tmp[2265858](2265862 'set reference' args[2265668]))
      wide-ref tmp[2434584]:1*byteIndex[1057081] "temp"
      (2434587 'move' tmp[2434584] tmp[2265858])
      (2265864 '.=' _args_foron_fn[2265844] _2_args[2089793] tmp[2434584])
      (2265868 '.=' _args_foron_fn[2265844] _3_rvfDerefTmp[2089795] ret[2265681])
      ref tmp[2265872]:__wide_Error[2381123] "temp"
      (2265874 'move' tmp[2265872](2265876 'set reference' error[2265812]))
      wide-ref tmp[2434590]:__wide_Error[2381123] "temp"
      (2434593 'move' tmp[2434590] tmp[2265872])
      (2265878 '.=' _args_foron_fn[2265844] _4_error[2089797] tmp[2434590])
      val _args_vforon_fn[2265882]:c_void_ptr[149] "temp"
      (2265884 'move' _args_vforon_fn[2265882](2265886 'cast_to_void_star' _args_foron_fn[2265844]))
      val _args_sizeon_fn[2265888]:int(64)[13] "temp"
      (2265890 'move' _args_sizeon_fn[2265888](2265892 'sizeof_bundle' _class_localson_fn[2089786]))
      on(2265895 call wrapon_fn[2089850] call_tmp[2265776] _args_vforon_fn[2265882] _args_sizeon_fn[2265888] _args_foron_fn[2265844])
    }
    val errorExists[2265901]:bool[10] "temp"
    (2265903 'move' errorExists[2265901](2265905 '!=' error[2265812] nil[44]))
    if errorExists[2265901]
    {
      (2265910 '=' error[1809520] error[2265812])
      ref i_x[2265913]:locale[28] "temp"
      (2265915 'move' i_x[2265913](2265917 'set reference' origLocale[2265762]))
      wide-ref tmp[2434596]:locale[28] "temp"
      (2434599 'move' tmp[2434596] i_x[2265913])
      (2265920 call deinit[90185] tmp[2434596])
      gotoErrorHandlingReturn _endwrite[2265937] _endwrite[2265937]
    }
    ref i_x[2265928]:locale[28] "temp"
    (2265930 'move' i_x[2265928](2265932 'set reference' origLocale[2265762]))
    wide-ref tmp[2434602]:locale[28] "temp"
    (2434605 'move' tmp[2434602] i_x[2265928])
    (2265935 call deinit[90185] tmp[2434602])
    label _endwrite[2265937]
    val errorExists[2108648]:bool[10] "temp"
    (2108653 'move' errorExists[2108648](2108650 '!=' error[1809520] nil[44]))
    if errorExists[2108648]
    {
      val error[1843270]:__wide_Error[2381123] "error variable" "temp"
      (1843272 'move' error[1843270] nil[44])
      ref tmp[2418912]:__wide_Error[2381123] "temp"
      (2418916 'move' tmp[2418912](2418914 'set reference' error[1843270]))
      (1843276 call close[1062362] w[1056891] tmp[2418912])
      val errorExists[2110792]:bool[10] "temp"
      (2110797 'move' errorExists[2110792](2110794 '!=' error[1843270] nil[44]))
      if errorExists[2110792]
      {
        gotoErrorHandling handler[1843287] handler[1843287]
      }
      label handler[1843287]
      val errorExists[2110800]:bool[10] "temp"
      (2110805 'move' errorExists[2110800](2110802 '!=' error[1843270] nil[44]))
      if errorExists[2110800]
      {
        (1843298 call chpl_uncaught_error[170243] error[1843270])
      }
      ref i_x[2268046]:channel(true,dynamic,false)[1060947] "temp"
      (2268050 'move' i_x[2268046](2268048 'set reference' w[1056891]))
      (2268054 call deinit[1536215] i_x[2268046])
      val error[1843306]:__wide_Error[2381123] "error variable" "temp"
      (1843308 'move' error[1843306] nil[44])
      ref tmp[2418919]:__wide_Error[2381123] "temp"
      (2418923 'move' tmp[2418919](2418921 'set reference' error[1843306]))
      (1843312 call close[236024] f[1056863] tmp[2418919])
      val errorExists[2110808]:bool[10] "temp"
      (2110813 'move' errorExists[2110808](2110810 '!=' error[1843306] nil[44]))
      if errorExists[2110808]
      {
        gotoErrorHandling handler[1843323] handler[1843323]
      }
      label handler[1843323]
      val errorExists[2110816]:bool[10] "temp"
      (2110821 'move' errorExists[2110816](2110818 '!=' error[1843306] nil[44]))
      if errorExists[2110816]
      {
        (1843334 call chpl_uncaught_error[170243] error[1843306])
      }
      ref i_x[2327833]:file[235580] "temp"
      (2327837 'move' i_x[2327833](2327835 'set reference' f[1056863]))
      (2327841 call deinit[235891] i_x[2327833])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val call_tmp[1056917]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1056919 'move' call_tmp[1056917](1056925 call offset[1080148] w[1056891]))
    const-val call_tmp[2120707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120709 'move' call_tmp[2120707](2120711 '+' call_tmp[1056917] 1))
    const-val call_tmp[2269379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269381 'move' call_tmp[2269379](2269383 '<' call_tmp[2120707] 0))
    if call_tmp[2269379]
    {
      (2269389 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269392]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269394 'move' call_tmp[2269392](2269396 'cast' uint(64)[115] call_tmp[2120707]))
    const-val call_tmp[2269399]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269401 'move' call_tmp[2269399](2269404 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269406]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269408 'move' call_tmp[2269406](2269410 '*' call_tmp[2269392] call_tmp[2269399]))
    const-val call_tmp[2269413]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269415 'move' call_tmp[2269413](2269418 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269419]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269421 'move' call_tmp[2269419](2269424 call chpl_here_alloc[1080490] call_tmp[2269406] call_tmp[2269413]))
    val call_tmp[2269427]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269429 'move' call_tmp[2269427](2269431 'cast' c_ptr(uint(8))[937423] call_tmp[2269419]))
    val buf[1056955]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1056957 'move' buf[1056955] call_tmp[2269427])
    const-val call_tmp[1056961]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    val errorExists[2108656]:bool[10] "temp"
    (2108661 'move' errorExists[2108656](2108658 '!=' error[1809520] nil[44]))
    if errorExists[2108656]
    {
      val error[1843342]:__wide_Error[2381123] "error variable" "temp"
      (1843344 'move' error[1843342] nil[44])
      ref tmp[2418926]:__wide_Error[2381123] "temp"
      (2418930 'move' tmp[2418926](2418928 'set reference' error[1843342]))
      (1843348 call close[1062362] w[1056891] tmp[2418926])
      val errorExists[2110824]:bool[10] "temp"
      (2110829 'move' errorExists[2110824](2110826 '!=' error[1843342] nil[44]))
      if errorExists[2110824]
      {
        gotoErrorHandling handler[1843359] handler[1843359]
      }
      label handler[1843359]
      val errorExists[2110832]:bool[10] "temp"
      (2110837 'move' errorExists[2110832](2110834 '!=' error[1843342] nil[44]))
      if errorExists[2110832]
      {
        (1843370 call chpl_uncaught_error[170243] error[1843342])
      }
      ref i_x[2268058]:channel(true,dynamic,false)[1060947] "temp"
      (2268062 'move' i_x[2268058](2268060 'set reference' w[1056891]))
      (2268066 call deinit[1536215] i_x[2268058])
      val error[1843378]:__wide_Error[2381123] "error variable" "temp"
      (1843380 'move' error[1843378] nil[44])
      ref tmp[2418933]:__wide_Error[2381123] "temp"
      (2418937 'move' tmp[2418933](2418935 'set reference' error[1843378]))
      (1843384 call close[236024] f[1056863] tmp[2418933])
      val errorExists[2110840]:bool[10] "temp"
      (2110845 'move' errorExists[2110840](2110842 '!=' error[1843378] nil[44]))
      if errorExists[2110840]
      {
        gotoErrorHandling handler[1843395] handler[1843395]
      }
      label handler[1843395]
      val errorExists[2110848]:bool[10] "temp"
      (2110853 'move' errorExists[2110848](2110850 '!=' error[1843378] nil[44]))
      if errorExists[2110848]
      {
        (1843406 call chpl_uncaught_error[170243] error[1843378])
      }
      ref i_x[2327845]:file[235580] "temp"
      (2327849 'move' i_x[2327845](2327847 'set reference' f[1056863]))
      (2327853 call deinit[235891] i_x[2327845])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    val errorExists[2108664]:bool[10] "temp"
    (2108669 'move' errorExists[2108664](2108666 '!=' error[1809520] nil[44]))
    if errorExists[2108664]
    {
      val error[1843414]:__wide_Error[2381123] "error variable" "temp"
      (1843416 'move' error[1843414] nil[44])
      ref tmp[2418940]:__wide_Error[2381123] "temp"
      (2418944 'move' tmp[2418940](2418942 'set reference' error[1843414]))
      (1843420 call close[1062362] w[1056891] tmp[2418940])
      val errorExists[2110856]:bool[10] "temp"
      (2110861 'move' errorExists[2110856](2110858 '!=' error[1843414] nil[44]))
      if errorExists[2110856]
      {
        gotoErrorHandling handler[1843431] handler[1843431]
      }
      label handler[1843431]
      val errorExists[2110864]:bool[10] "temp"
      (2110869 'move' errorExists[2110864](2110866 '!=' error[1843414] nil[44]))
      if errorExists[2110864]
      {
        (1843442 call chpl_uncaught_error[170243] error[1843414])
      }
      ref i_x[2268070]:channel(true,dynamic,false)[1060947] "temp"
      (2268074 'move' i_x[2268070](2268072 'set reference' w[1056891]))
      (2268078 call deinit[1536215] i_x[2268070])
      val error[1843450]:__wide_Error[2381123] "error variable" "temp"
      (1843452 'move' error[1843450] nil[44])
      ref tmp[2418947]:__wide_Error[2381123] "temp"
      (2418951 'move' tmp[2418947](2418949 'set reference' error[1843450]))
      (1843456 call close[236024] f[1056863] tmp[2418947])
      val errorExists[2110872]:bool[10] "temp"
      (2110877 'move' errorExists[2110872](2110874 '!=' error[1843450] nil[44]))
      if errorExists[2110872]
      {
        gotoErrorHandling handler[1843467] handler[1843467]
      }
      label handler[1843467]
      val errorExists[2110880]:bool[10] "temp"
      (2110885 'move' errorExists[2110880](2110882 '!=' error[1843450] nil[44]))
      if errorExists[2110880]
      {
        (1843478 call chpl_uncaught_error[170243] error[1843450])
      }
      ref i_x[2327857]:file[235580] "temp"
      (2327861 'move' i_x[2327857](2327859 'set reference' f[1056863]))
      (2327865 call deinit[235891] i_x[2327857])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val tmp[2269718]:int(32)[95] "dead after last mention" "temp"
    (2269720 'move' tmp[2269718] local_IOHINT_NONE[2378077])
    val errorExists[2108672]:bool[10] "temp"
    (2108677 'move' errorExists[2108672](2108674 '!=' error[1809520] nil[44]))
    if errorExists[2108672]
    {
      val error[1843486]:__wide_Error[2381123] "error variable" "temp"
      (1843488 'move' error[1843486] nil[44])
      ref tmp[2418954]:__wide_Error[2381123] "temp"
      (2418958 'move' tmp[2418954](2418956 'set reference' error[1843486]))
      (1843492 call close[1062362] w[1056891] tmp[2418954])
      val errorExists[2110888]:bool[10] "temp"
      (2110893 'move' errorExists[2110888](2110890 '!=' error[1843486] nil[44]))
      if errorExists[2110888]
      {
        gotoErrorHandling handler[1843503] handler[1843503]
      }
      label handler[1843503]
      val errorExists[2110896]:bool[10] "temp"
      (2110901 'move' errorExists[2110896](2110898 '!=' error[1843486] nil[44]))
      if errorExists[2110896]
      {
        (1843514 call chpl_uncaught_error[170243] error[1843486])
      }
      ref i_x[2268082]:channel(true,dynamic,false)[1060947] "temp"
      (2268086 'move' i_x[2268082](2268084 'set reference' w[1056891]))
      (2268090 call deinit[1536215] i_x[2268082])
      val error[1843522]:__wide_Error[2381123] "error variable" "temp"
      (1843524 'move' error[1843522] nil[44])
      ref tmp[2418961]:__wide_Error[2381123] "temp"
      (2418965 'move' tmp[2418961](2418963 'set reference' error[1843522]))
      (1843528 call close[236024] f[1056863] tmp[2418961])
      val errorExists[2110904]:bool[10] "temp"
      (2110909 'move' errorExists[2110904](2110906 '!=' error[1843522] nil[44]))
      if errorExists[2110904]
      {
        gotoErrorHandling handler[1843539] handler[1843539]
      }
      label handler[1843539]
      val errorExists[2110912]:bool[10] "temp"
      (2110917 'move' errorExists[2110912](2110914 '!=' error[1843522] nil[44]))
      if errorExists[2110912]
      {
        (1843550 call chpl_uncaught_error[170243] error[1843522])
      }
      ref i_x[2327869]:file[235580] "temp"
      (2327873 'move' i_x[2327869](2327871 'set reference' f[1056863]))
      (2327877 call deinit[235891] i_x[2327869])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val default_arg_style[1081070]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269784]:file[235580] "temp"
    (2269788 'move' i_this[2269784](2269786 'set reference' f[1056863]))
    val ret[2269797]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269799]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269801]:__wide_Error[2381123] "error variable" "temp"
    (2269803 'move' error[2269801] nil[44])
    ref tmp[2434886]:__wide_Error[2381123] "temp"
    (2434890 'move' tmp[2434886](2434888 'set reference' error[2269801]))
    (2269806 'move' style[2269799](2269809 call _style[235960] i_this[2269784] tmp[2434886]))
    val errorExists[2269812]:bool[10] "temp"
    (2269814 'move' errorExists[2269812](2269816 '!=' error[2269801] nil[44]))
    if errorExists[2269812]
    {
      (2269821 '=' error[1809520] error[2269801])
      gotoErrorHandlingReturn _endreader_default_style[2269830] _endreader_default_style[2269830]
    }
    (2269827 'move' ret[2269797] style[2269799])
    label _endreader_default_style[2269830]
    (1081076 'move' default_arg_style[1081070] ret[2269797])
    val errorExists[2108680]:bool[10] "temp"
    (2108685 'move' errorExists[2108680](2108682 '!=' error[1809520] nil[44]))
    if errorExists[2108680]
    {
      val error[1843558]:__wide_Error[2381123] "error variable" "temp"
      (1843560 'move' error[1843558] nil[44])
      ref tmp[2418968]:__wide_Error[2381123] "temp"
      (2418972 'move' tmp[2418968](2418970 'set reference' error[1843558]))
      (1843564 call close[1062362] w[1056891] tmp[2418968])
      val errorExists[2110920]:bool[10] "temp"
      (2110925 'move' errorExists[2110920](2110922 '!=' error[1843558] nil[44]))
      if errorExists[2110920]
      {
        gotoErrorHandling handler[1843575] handler[1843575]
      }
      label handler[1843575]
      val errorExists[2110928]:bool[10] "temp"
      (2110933 'move' errorExists[2110928](2110930 '!=' error[1843558] nil[44]))
      if errorExists[2110928]
      {
        (1843586 call chpl_uncaught_error[170243] error[1843558])
      }
      ref i_x[2268094]:channel(true,dynamic,false)[1060947] "temp"
      (2268098 'move' i_x[2268094](2268096 'set reference' w[1056891]))
      (2268102 call deinit[1536215] i_x[2268094])
      val error[1843594]:__wide_Error[2381123] "error variable" "temp"
      (1843596 'move' error[1843594] nil[44])
      ref tmp[2418975]:__wide_Error[2381123] "temp"
      (2418979 'move' tmp[2418975](2418977 'set reference' error[1843594]))
      (1843600 call close[236024] f[1056863] tmp[2418975])
      val errorExists[2110936]:bool[10] "temp"
      (2110941 'move' errorExists[2110936](2110938 '!=' error[1843594] nil[44]))
      if errorExists[2110936]
      {
        gotoErrorHandling handler[1843611] handler[1843611]
      }
      label handler[1843611]
      val errorExists[2110944]:bool[10] "temp"
      (2110949 'move' errorExists[2110944](2110946 '!=' error[1843594] nil[44]))
      if errorExists[2110944]
      {
        (1843622 call chpl_uncaught_error[170243] error[1843594])
      }
      ref i_x[2327881]:file[235580] "temp"
      (2327885 'move' i_x[2327881](2327883 'set reference' f[1056863]))
      (2327889 call deinit[235891] i_x[2327881])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val ret_tmp[1833425]:channel(false,dynamic,false)[1080682] "temp"
    ref tmp[2415147]:__wide_Error[2381123] "temp"
    (2415151 'move' tmp[2415147](2415149 'set reference' error[1809520]))
    (1056969 call reader[1080588] f[1056863] 0 9223372036854775807 tmp[2269718] default_arg_style[1081070] tmp[2415147] ret_tmp[1833425])
    (1833428 'move' call_tmp[1056961] ret_tmp[1833425])
    val errorExists[2108688]:bool[10] "temp"
    (2108693 'move' errorExists[2108688](2108690 '!=' error[1809520] nil[44]))
    if errorExists[2108688]
    {
      val error[1843630]:__wide_Error[2381123] "error variable" "temp"
      (1843632 'move' error[1843630] nil[44])
      ref tmp[2418982]:__wide_Error[2381123] "temp"
      (2418986 'move' tmp[2418982](2418984 'set reference' error[1843630]))
      (1843636 call close[1062362] w[1056891] tmp[2418982])
      val errorExists[2110952]:bool[10] "temp"
      (2110957 'move' errorExists[2110952](2110954 '!=' error[1843630] nil[44]))
      if errorExists[2110952]
      {
        gotoErrorHandling handler[1843647] handler[1843647]
      }
      label handler[1843647]
      val errorExists[2110960]:bool[10] "temp"
      (2110965 'move' errorExists[2110960](2110962 '!=' error[1843630] nil[44]))
      if errorExists[2110960]
      {
        (1843658 call chpl_uncaught_error[170243] error[1843630])
      }
      ref i_x[2268106]:channel(true,dynamic,false)[1060947] "temp"
      (2268110 'move' i_x[2268106](2268108 'set reference' w[1056891]))
      (2268114 call deinit[1536215] i_x[2268106])
      val error[1843666]:__wide_Error[2381123] "error variable" "temp"
      (1843668 'move' error[1843666] nil[44])
      ref tmp[2418989]:__wide_Error[2381123] "temp"
      (2418993 'move' tmp[2418989](2418991 'set reference' error[1843666]))
      (1843672 call close[236024] f[1056863] tmp[2418989])
      val errorExists[2110968]:bool[10] "temp"
      (2110973 'move' errorExists[2110968](2110970 '!=' error[1843666] nil[44]))
      if errorExists[2110968]
      {
        gotoErrorHandling handler[1843683] handler[1843683]
      }
      label handler[1843683]
      val errorExists[2110976]:bool[10] "temp"
      (2110981 'move' errorExists[2110976](2110978 '!=' error[1843666] nil[44]))
      if errorExists[2110976]
      {
        (1843694 call chpl_uncaught_error[170243] error[1843666])
      }
      ref i_x[2327893]:file[235580] "temp"
      (2327897 'move' i_x[2327893](2327895 'set reference' f[1056863]))
      (2327901 call deinit[235891] i_x[2327893])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val r[1056972]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1056974 'move' r[1056972] call_tmp[1056961])
    ref tmp[2415154]:__wide_Error[2381123] "temp"
    (2415158 'move' tmp[2415154](2415156 'set reference' error[1809520]))
    (1057001 call readBytes[1082839] r[1056972] call_tmp[2269427] call_tmp[1056917] tmp[2415154])
    val errorExists[2108696]:bool[10] "temp"
    (2108701 'move' errorExists[2108696](2108698 '!=' error[1809520] nil[44]))
    if errorExists[2108696]
    {
      val error[1843702]:__wide_Error[2381123] "error variable" "temp"
      (1843704 'move' error[1843702] nil[44])
      ref tmp[2418996]:__wide_Error[2381123] "temp"
      (2419000 'move' tmp[2418996](2418998 'set reference' error[1843702]))
      (1843708 call close[1082094] r[1056972] tmp[2418996])
      val errorExists[2110984]:bool[10] "temp"
      (2110989 'move' errorExists[2110984](2110986 '!=' error[1843702] nil[44]))
      if errorExists[2110984]
      {
        gotoErrorHandling handler[1843719] handler[1843719]
      }
      label handler[1843719]
      val errorExists[2110992]:bool[10] "temp"
      (2110997 'move' errorExists[2110992](2110994 '!=' error[1843702] nil[44]))
      if errorExists[2110992]
      {
        (1843730 call chpl_uncaught_error[170243] error[1843702])
      }
      ref i_x[2331584]:channel(false,dynamic,false)[1080682] "temp"
      (2331588 'move' i_x[2331584](2331586 'set reference' r[1056972]))
      (2331592 call deinit[1540469] i_x[2331584])
      val error[1843738]:__wide_Error[2381123] "error variable" "temp"
      (1843740 'move' error[1843738] nil[44])
      ref tmp[2419003]:__wide_Error[2381123] "temp"
      (2419007 'move' tmp[2419003](2419005 'set reference' error[1843738]))
      (1843744 call close[1062362] w[1056891] tmp[2419003])
      val errorExists[2111000]:bool[10] "temp"
      (2111005 'move' errorExists[2111000](2111002 '!=' error[1843738] nil[44]))
      if errorExists[2111000]
      {
        gotoErrorHandling handler[1843755] handler[1843755]
      }
      label handler[1843755]
      val errorExists[2111008]:bool[10] "temp"
      (2111013 'move' errorExists[2111008](2111010 '!=' error[1843738] nil[44]))
      if errorExists[2111008]
      {
        (1843766 call chpl_uncaught_error[170243] error[1843738])
      }
      ref i_x[2268118]:channel(true,dynamic,false)[1060947] "temp"
      (2268122 'move' i_x[2268118](2268120 'set reference' w[1056891]))
      (2268126 call deinit[1536215] i_x[2268118])
      val error[1843774]:__wide_Error[2381123] "error variable" "temp"
      (1843776 'move' error[1843774] nil[44])
      ref tmp[2419010]:__wide_Error[2381123] "temp"
      (2419014 'move' tmp[2419010](2419012 'set reference' error[1843774]))
      (1843780 call close[236024] f[1056863] tmp[2419010])
      val errorExists[2111016]:bool[10] "temp"
      (2111021 'move' errorExists[2111016](2111018 '!=' error[1843774] nil[44]))
      if errorExists[2111016]
      {
        gotoErrorHandling handler[1843791] handler[1843791]
      }
      label handler[1843791]
      val errorExists[2111024]:bool[10] "temp"
      (2111029 'move' errorExists[2111024](2111026 '!=' error[1843774] nil[44]))
      if errorExists[2111024]
      {
        (1843802 call chpl_uncaught_error[170243] error[1843774])
      }
      ref i_x[2327905]:file[235580] "temp"
      (2327909 'move' i_x[2327905](2327907 'set reference' f[1056863]))
      (2327913 call deinit[235891] i_x[2327905])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    ref call_tmp[2195324]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195326 'move' call_tmp[2195324](2195328 'array_get' buf[1056955] call_tmp[1056917]))
    const-val coerce_tmp[1083332]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083338 'move' coerce_tmp[1083332](1083334 'cast' uint(8)[100] 0))
    (2195810 '=' call_tmp[2195324] coerce_tmp[1083332])
    const-val ret[2140628]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140630]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140632]:__wide_Error[2381123] "error variable" "temp"
    (2140634 'move' error[2140632] nil[44])
    const-val ret_tmp[2140637]:string[26] "temp"
    ref tmp[2426547]:__wide_Error[2381123] "temp"
    (2426551 'move' tmp[2426547](2426549 'set reference' error[2140632]))
    (2140640 call decodeByteBuffer[173892] call_tmp[2269427] call_tmp[1056917] replace[173648] tmp[2426547] ret_tmp[2140637])
    (2140646 'move' call_tmp[2140630] ret_tmp[2140637])
    val errorExists[2140649]:bool[10] "temp"
    (2140651 'move' errorExists[2140649](2140653 '!=' error[2140632] nil[44]))
    if errorExists[2140649]
    {
      (2140658 '=' error[1809520] error[2140632])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140667] _endcreateStringWithNewBuffer[2140667]
    }
    (2140664 'move' ret[2140628] call_tmp[2140630])
    label _endcreateStringWithNewBuffer[2140667]
    val errorExists[2108704]:bool[10] "temp"
    (2108709 'move' errorExists[2108704](2108706 '!=' error[1809520] nil[44]))
    if errorExists[2108704]
    {
      val error[1843810]:__wide_Error[2381123] "error variable" "temp"
      (1843812 'move' error[1843810] nil[44])
      ref tmp[2419017]:__wide_Error[2381123] "temp"
      (2419021 'move' tmp[2419017](2419019 'set reference' error[1843810]))
      (1843816 call close[1082094] r[1056972] tmp[2419017])
      val errorExists[2111032]:bool[10] "temp"
      (2111037 'move' errorExists[2111032](2111034 '!=' error[1843810] nil[44]))
      if errorExists[2111032]
      {
        gotoErrorHandling handler[1843827] handler[1843827]
      }
      label handler[1843827]
      val errorExists[2111040]:bool[10] "temp"
      (2111045 'move' errorExists[2111040](2111042 '!=' error[1843810] nil[44]))
      if errorExists[2111040]
      {
        (1843838 call chpl_uncaught_error[170243] error[1843810])
      }
      ref i_x[2331596]:channel(false,dynamic,false)[1080682] "temp"
      (2331600 'move' i_x[2331596](2331598 'set reference' r[1056972]))
      (2331604 call deinit[1540469] i_x[2331596])
      val error[1843846]:__wide_Error[2381123] "error variable" "temp"
      (1843848 'move' error[1843846] nil[44])
      ref tmp[2419024]:__wide_Error[2381123] "temp"
      (2419028 'move' tmp[2419024](2419026 'set reference' error[1843846]))
      (1843852 call close[1062362] w[1056891] tmp[2419024])
      val errorExists[2111048]:bool[10] "temp"
      (2111053 'move' errorExists[2111048](2111050 '!=' error[1843846] nil[44]))
      if errorExists[2111048]
      {
        gotoErrorHandling handler[1843863] handler[1843863]
      }
      label handler[1843863]
      val errorExists[2111056]:bool[10] "temp"
      (2111061 'move' errorExists[2111056](2111058 '!=' error[1843846] nil[44]))
      if errorExists[2111056]
      {
        (1843874 call chpl_uncaught_error[170243] error[1843846])
      }
      ref i_x[2268130]:channel(true,dynamic,false)[1060947] "temp"
      (2268134 'move' i_x[2268130](2268132 'set reference' w[1056891]))
      (2268138 call deinit[1536215] i_x[2268130])
      val error[1843882]:__wide_Error[2381123] "error variable" "temp"
      (1843884 'move' error[1843882] nil[44])
      ref tmp[2419031]:__wide_Error[2381123] "temp"
      (2419035 'move' tmp[2419031](2419033 'set reference' error[1843882]))
      (1843888 call close[236024] f[1056863] tmp[2419031])
      val errorExists[2111064]:bool[10] "temp"
      (2111069 'move' errorExists[2111064](2111066 '!=' error[1843882] nil[44]))
      if errorExists[2111064]
      {
        gotoErrorHandling handler[1843899] handler[1843899]
      }
      label handler[1843899]
      val errorExists[2111072]:bool[10] "temp"
      (2111077 'move' errorExists[2111072](2111074 '!=' error[1843882] nil[44]))
      if errorExists[2111072]
      {
        (1843910 call chpl_uncaught_error[170243] error[1843882])
      }
      ref i_x[2327917]:file[235580] "temp"
      (2327921 'move' i_x[2327917](2327919 'set reference' f[1056863]))
      (2327925 call deinit[235891] i_x[2327917])
      gotoErrorHandling handler[1809521] handler[1809521]
    }
    const-val coerce_tmp[1083343]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083349 'move' coerce_tmp[1083343](1083345 'cast' c_void_ptr[149] call_tmp[2269427]))
    (2203414 call chpl_here_free[188081] coerce_tmp[1083343])
    (1083354 'move' ret[1056412] ret[2140628])
    val error[1843918]:__wide_Error[2381123] "error variable" "temp"
    (1843920 'move' error[1843918] nil[44])
    ref tmp[2419038]:__wide_Error[2381123] "temp"
    (2419042 'move' tmp[2419038](2419040 'set reference' error[1843918]))
    (1843924 call close[1082094] r[1056972] tmp[2419038])
    val errorExists[2111080]:bool[10] "temp"
    (2111085 'move' errorExists[2111080](2111082 '!=' error[1843918] nil[44]))
    if errorExists[2111080]
    {
      gotoErrorHandling handler[1843935] handler[1843935]
    }
    label handler[1843935]
    val errorExists[2111088]:bool[10] "temp"
    (2111093 'move' errorExists[2111088](2111090 '!=' error[1843918] nil[44]))
    if errorExists[2111088]
    {
      (1843946 call chpl_uncaught_error[170243] error[1843918])
    }
    ref i_x[2331608]:channel(false,dynamic,false)[1080682] "temp"
    (2331612 'move' i_x[2331608](2331610 'set reference' r[1056972]))
    (2331616 call deinit[1540469] i_x[2331608])
    val error[1843954]:__wide_Error[2381123] "error variable" "temp"
    (1843956 'move' error[1843954] nil[44])
    ref tmp[2419045]:__wide_Error[2381123] "temp"
    (2419049 'move' tmp[2419045](2419047 'set reference' error[1843954]))
    (1843960 call close[1062362] w[1056891] tmp[2419045])
    val errorExists[2111096]:bool[10] "temp"
    (2111101 'move' errorExists[2111096](2111098 '!=' error[1843954] nil[44]))
    if errorExists[2111096]
    {
      gotoErrorHandling handler[1843971] handler[1843971]
    }
    label handler[1843971]
    val errorExists[2111104]:bool[10] "temp"
    (2111109 'move' errorExists[2111104](2111106 '!=' error[1843954] nil[44]))
    if errorExists[2111104]
    {
      (1843982 call chpl_uncaught_error[170243] error[1843954])
    }
    ref i_x[2268142]:channel(true,dynamic,false)[1060947] "temp"
    (2268146 'move' i_x[2268142](2268144 'set reference' w[1056891]))
    (2268150 call deinit[1536215] i_x[2268142])
    val error[1843990]:__wide_Error[2381123] "error variable" "temp"
    (1843992 'move' error[1843990] nil[44])
    ref tmp[2419052]:__wide_Error[2381123] "temp"
    (2419056 'move' tmp[2419052](2419054 'set reference' error[1843990]))
    (1843996 call close[236024] f[1056863] tmp[2419052])
    val errorExists[2111112]:bool[10] "temp"
    (2111117 'move' errorExists[2111112](2111114 '!=' error[1843990] nil[44]))
    if errorExists[2111112]
    {
      gotoErrorHandling handler[1844007] handler[1844007]
    }
    label handler[1844007]
    val errorExists[2111120]:bool[10] "temp"
    (2111125 'move' errorExists[2111120](2111122 '!=' error[1843990] nil[44]))
    if errorExists[2111120]
    {
      (1844018 call chpl_uncaught_error[170243] error[1843990])
    }
    ref i_x[2327929]:file[235580] "temp"
    (2327933 'move' i_x[2327929](2327931 'set reference' f[1056863]))
    (2327937 call deinit[235891] i_x[2327929])
    gotoReturn _end_stringify[1057069] _end_stringify[1057069]
    label handler[1809521]
    val errorExists[2108712]:bool[10] "temp"
    (2108717 'move' errorExists[2108712](2108714 '!=' error[1809520] nil[44]))
    if errorExists[2108712]
    {
      (1809711 call chpl_uncaught_error[170243] error[1809520])
    }
    label _end_stringify[1057069]
    (1833001 '=' _retArg[1832999] ret[1056412])
    (1833003 return _void[55])
  }
  function stringify[1043702](const  ref arg _e0_args[1043704]:string[26], const in arg _e1_args[1043706]:range(byteIndex,bounded,false)[1025792], const  ref arg _e2_args[1043708]:string[26], const in arg _e3_args[1043710]:int(64)[13], ref arg _retArg[1832917]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378047]:string[26] "temp"
    (2378048 'move' "" "")
    const-val ret[1043714]:string[26] "dead after last mention" "RVV" "temp"
    val str[1043755]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204338]:string[26] "temp"
    (2204341 'move' inlineImm[2204338] "")
    ref i_x[2204343]:string[26] "temp"
    (2204347 'move' i_x[2204343](2204345 'set reference' inlineImm[2204338]))
    val ret[2204350]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204352]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429905]:string[26] "temp"
    (2429908 'move' tmp[2429905] i_x[2204343])
    (2204355 call init=[30771] tmp[2204352] tmp[2429905])
    (2204358 'move' ret[2204350] tmp[2204352])
    (1043757 'move' str[1043755] ret[2204350])
    (1052888 call +=[38797] str[1043755] _e0_args[1043704])
    const-val call_tmp[1053463]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1832951]:string[26] "temp"
    (1053468 call _cast[1054358] _e1_args[1043706] ret_tmp[1832951])
    (1832954 'move' call_tmp[1053463] ret_tmp[1832951])
    (1053472 call +=[38797] str[1043755] call_tmp[1053463])
    ref i_x[2130801]:string[26] "temp"
    (2130805 'move' i_x[2130801](2130803 'set reference' call_tmp[1053463]))
    wide-ref tmp[2425380]:string[26] "temp"
    (2425383 'move' tmp[2425380] i_x[2130801])
    (2130809 call deinit[30831] tmp[2425380])
    (1053578 call +=[38797] str[1043755] _e2_args[1043708])
    const-val call_tmp[1054153]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833077]:string[26] "temp"
    (1054158 call _cast[1063153] _e3_args[1043710] ret_tmp[1833077])
    (1833080 'move' call_tmp[1054153] ret_tmp[1833077])
    (1054162 call +=[38797] str[1043755] call_tmp[1054153])
    ref i_x[2130813]:string[26] "temp"
    (2130817 'move' i_x[2130813](2130815 'set reference' call_tmp[1054153]))
    wide-ref tmp[2425386]:string[26] "temp"
    (2425389 'move' tmp[2425386] i_x[2130813])
    (2130821 call deinit[30831] tmp[2425386])
    (1084863 'move' ret[1043714] str[1043755])
    gotoReturn _end_stringify[1044380] _end_stringify[1044380]
    label _end_stringify[1044380]
    (1832919 '=' _retArg[1832917] ret[1043714])
    (1832925 return _void[55])
  }
  function stringify[1113520](const  ref arg _e0_args[1113522]:string[26], const in arg _e1_args[1113524]:range(int(64),bounded,false)[1026814], const  ref arg _e2_args[1113526]:string[26], const in arg _e3_args[1113528]:int(64)[13], ref arg _retArg[1833990]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378538]:string[26] "temp"
    (2378539 'move' "" "")
    const-val ret[1113532]:string[26] "dead after last mention" "RVV" "temp"
    val str[1113573]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204438]:string[26] "temp"
    (2204441 'move' inlineImm[2204438] "")
    ref i_x[2204443]:string[26] "temp"
    (2204447 'move' i_x[2204443](2204445 'set reference' inlineImm[2204438]))
    val ret[2204450]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204452]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429929]:string[26] "temp"
    (2429932 'move' tmp[2429929] i_x[2204443])
    (2204455 call init=[30771] tmp[2204452] tmp[2429929])
    (2204458 'move' ret[2204450] tmp[2204452])
    (1113575 'move' str[1113573] ret[2204450])
    (1117967 call +=[38797] str[1113573] _e0_args[1113522])
    const-val call_tmp[1118542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834012]:string[26] "temp"
    (1118547 call _cast[1119437] _e1_args[1113524] ret_tmp[1834012])
    (1834015 'move' call_tmp[1118542] ret_tmp[1834012])
    (1118551 call +=[38797] str[1113573] call_tmp[1118542])
    ref i_x[2131305]:string[26] "temp"
    (2131309 'move' i_x[2131305](2131307 'set reference' call_tmp[1118542]))
    wide-ref tmp[2425608]:string[26] "temp"
    (2425611 'move' tmp[2425608] i_x[2131305])
    (2131313 call deinit[30831] tmp[2425608])
    (1118657 call +=[38797] str[1113573] _e2_args[1113526])
    const-val call_tmp[1119232]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833101]:string[26] "temp"
    (1119237 call _cast[1063153] _e3_args[1113528] ret_tmp[1833101])
    (1833104 'move' call_tmp[1119232] ret_tmp[1833101])
    (1119241 call +=[38797] str[1113573] call_tmp[1119232])
    ref i_x[2131317]:string[26] "temp"
    (2131321 'move' i_x[2131317](2131319 'set reference' call_tmp[1119232]))
    wide-ref tmp[2425614]:string[26] "temp"
    (2425617 'move' tmp[2425614] i_x[2131317])
    (2131325 call deinit[30831] tmp[2425614])
    (1120899 'move' ret[1113532] str[1113573])
    gotoReturn _end_stringify[1114198] _end_stringify[1114198]
    label _end_stringify[1114198]
    (1833992 '=' _retArg[1833990] ret[1113532])
    (1833998 return _void[55])
  }
  function stringify[1128344](const  ref arg _e0_args[1128346]:string[26], const in arg _e1_args[1128348]:range(int(64),boundedLow,false)[1087565], const  ref arg _e2_args[1128350]:string[26], const in arg _e3_args[1128352]:int(64)[13], ref arg _retArg[1834284]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378595]:string[26] "temp"
    (2378596 'move' "" "")
    const-val ret[1128356]:string[26] "dead after last mention" "RVV" "temp"
    val str[1128397]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204463]:string[26] "temp"
    (2204466 'move' inlineImm[2204463] "")
    ref i_x[2204468]:string[26] "temp"
    (2204472 'move' i_x[2204468](2204470 'set reference' inlineImm[2204463]))
    val ret[2204475]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204477]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429935]:string[26] "temp"
    (2429938 'move' tmp[2429935] i_x[2204468])
    (2204480 call init=[30771] tmp[2204477] tmp[2429935])
    (2204483 'move' ret[2204475] tmp[2204477])
    (1128399 'move' str[1128397] ret[2204475])
    (1134490 call +=[38797] str[1128397] _e0_args[1128346])
    const-val call_tmp[1135065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834306]:string[26] "temp"
    (1135070 call _cast[1135960] _e1_args[1128348] ret_tmp[1834306])
    (1834309 'move' call_tmp[1135065] ret_tmp[1834306])
    (1135074 call +=[38797] str[1128397] call_tmp[1135065])
    ref i_x[2131377]:string[26] "temp"
    (2131381 'move' i_x[2131377](2131379 'set reference' call_tmp[1135065]))
    wide-ref tmp[2425644]:string[26] "temp"
    (2425647 'move' tmp[2425644] i_x[2131377])
    (2131385 call deinit[30831] tmp[2425644])
    (1135180 call +=[38797] str[1128397] _e2_args[1128350])
    const-val call_tmp[1135755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833119]:string[26] "temp"
    (1135760 call _cast[1063153] _e3_args[1128352] ret_tmp[1833119])
    (1833122 'move' call_tmp[1135755] ret_tmp[1833119])
    (1135764 call +=[38797] str[1128397] call_tmp[1135755])
    ref i_x[2131389]:string[26] "temp"
    (2131393 'move' i_x[2131389](2131391 'set reference' call_tmp[1135755]))
    wide-ref tmp[2425650]:string[26] "temp"
    (2425653 'move' tmp[2425650] i_x[2131389])
    (2131397 call deinit[30831] tmp[2425650])
    (1138953 'move' ret[1128356] str[1128397])
    gotoReturn _end_stringify[1129022] _end_stringify[1129022]
    label _end_stringify[1129022]
    (1834286 '=' _retArg[1834284] ret[1128356])
    (1834292 return _void[55])
  }
  function stringify[1146515](const  ref arg _e0_args[1146517]:string[26], const in arg _e1_args[1146519]:range(byteIndex,boundedLow,false)[1143403], const  ref arg _e2_args[1146521]:string[26], const in arg _e3_args[1146523]:int(64)[13], ref arg _retArg[1834548]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378643]:string[26] "temp"
    (2378644 'move' "" "")
    const-val ret[1146527]:string[26] "dead after last mention" "RVV" "temp"
    val str[1146568]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204488]:string[26] "temp"
    (2204491 'move' inlineImm[2204488] "")
    ref i_x[2204493]:string[26] "temp"
    (2204497 'move' i_x[2204493](2204495 'set reference' inlineImm[2204488]))
    val ret[2204500]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204502]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429941]:string[26] "temp"
    (2429944 'move' tmp[2429941] i_x[2204493])
    (2204505 call init=[30771] tmp[2204502] tmp[2429941])
    (2204508 'move' ret[2204500] tmp[2204502])
    (1146570 'move' str[1146568] ret[2204500])
    (1152954 call +=[38797] str[1146568] _e0_args[1146517])
    const-val call_tmp[1153529]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834588]:string[26] "temp"
    (1153534 call _cast[1154424] _e1_args[1146519] ret_tmp[1834588])
    (1834591 'move' call_tmp[1153529] ret_tmp[1834588])
    (1153538 call +=[38797] str[1146568] call_tmp[1153529])
    ref i_x[2131461]:string[26] "temp"
    (2131465 'move' i_x[2131461](2131463 'set reference' call_tmp[1153529]))
    wide-ref tmp[2425686]:string[26] "temp"
    (2425689 'move' tmp[2425686] i_x[2131461])
    (2131469 call deinit[30831] tmp[2425686])
    (1153644 call +=[38797] str[1146568] _e2_args[1146521])
    const-val call_tmp[1154219]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833137]:string[26] "temp"
    (1154224 call _cast[1063153] _e3_args[1146523] ret_tmp[1833137])
    (1833140 'move' call_tmp[1154219] ret_tmp[1833137])
    (1154228 call +=[38797] str[1146568] call_tmp[1154219])
    ref i_x[2131473]:string[26] "temp"
    (2131477 'move' i_x[2131473](2131475 'set reference' call_tmp[1154219]))
    wide-ref tmp[2425692]:string[26] "temp"
    (2425695 'move' tmp[2425692] i_x[2131473])
    (2131481 call deinit[30831] tmp[2425692])
    (1156274 'move' ret[1146527] str[1146568])
    gotoReturn _end_stringify[1147193] _end_stringify[1147193]
    label _end_stringify[1147193]
    (1834550 '=' _retArg[1834548] ret[1146527])
    (1834556 return _void[55])
  }
  function stringify[1175821](const  ref arg _e0_args[1175823]:string[26], const  ref arg _e1_args[1175825]:codepointIndex[28274], const  ref arg _e2_args[1175827]:string[26], const in arg _e3_args[1175829]:int(64)[13], ref arg _retArg[1834664]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2378807]:int(32)[95] "temp"
    (2378808 'move' local_IOHINT_NONE[2378807] IOHINT_NONE[231411])
    const-val local__str_literal_4778[2378801]:string[26] "temp"
    (2378802 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2378795]:string[26] "temp"
    (2378796 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2378789]:locale[28] "temp"
    (2378790 'move' local_nilLocale[2378789] nilLocale[89939])
    const-val ret[1175833]:string[26] "dead after last mention" "RVV" "temp"
    val error[1811311]:__wide_Error[2381123] "error variable" "temp"
    (1811496 'move' error[1811311] nil[44])
    const-val call_tmp[1176287]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1179625]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2263047]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263049 'move' style[2263047](2263052 call defaultIOStyle[235295]))
    (1179629 'move' default_arg_style[1179625] style[2263047])
    val errorExists[2109480]:bool[10] "temp"
    (2109485 'move' errorExists[2109480](2109482 '!=' error[1811311] nil[44]))
    if errorExists[2109480]
    {
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1831515]:file[235580] "temp"
    ref tmp[2415937]:__wide_Error[2381123] "temp"
    (2415941 'move' tmp[2415937](2415939 'set reference' error[1811311]))
    (1176292 call openmem[237625] default_arg_style[1179625] tmp[2415937] ret_tmp[1831515])
    (1831518 'move' call_tmp[1176287] ret_tmp[1831515])
    val errorExists[2109488]:bool[10] "temp"
    (2109493 'move' errorExists[2109488](2109490 '!=' error[1811311] nil[44]))
    if errorExists[2109488]
    {
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val f[1176293]:file[235580] "dead at end of block" "insert auto destroy"
    (1176295 'move' f[1176293] call_tmp[1176287])
    const-val call_tmp[1176310]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    val errorExists[2109496]:bool[10] "temp"
    (2109501 'move' errorExists[2109496](2109498 '!=' error[1811311] nil[44]))
    if errorExists[2109496]
    {
      val error[1845952]:__wide_Error[2381123] "error variable" "temp"
      (1845954 'move' error[1845952] nil[44])
      ref tmp[2419241]:__wide_Error[2381123] "temp"
      (2419245 'move' tmp[2419241](2419243 'set reference' error[1845952]))
      (1845958 call close[236024] f[1176293] tmp[2419241])
      val errorExists[2111544]:bool[10] "temp"
      (2111549 'move' errorExists[2111544](2111546 '!=' error[1845952] nil[44]))
      if errorExists[2111544]
      {
        gotoErrorHandling handler[1845969] handler[1845969]
      }
      label handler[1845969]
      val errorExists[2111552]:bool[10] "temp"
      (2111557 'move' errorExists[2111552](2111554 '!=' error[1845952] nil[44]))
      if errorExists[2111552]
      {
        (1845980 call chpl_uncaught_error[170243] error[1845952])
      }
      ref i_x[2328109]:file[235580] "temp"
      (2328113 'move' i_x[2328109](2328111 'set reference' f[1176293]))
      (2328117 call deinit[235891] i_x[2328109])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    val errorExists[2109504]:bool[10] "temp"
    (2109509 'move' errorExists[2109504](2109506 '!=' error[1811311] nil[44]))
    if errorExists[2109504]
    {
      val error[1845988]:__wide_Error[2381123] "error variable" "temp"
      (1845990 'move' error[1845988] nil[44])
      ref tmp[2419248]:__wide_Error[2381123] "temp"
      (2419252 'move' tmp[2419248](2419250 'set reference' error[1845988]))
      (1845994 call close[236024] f[1176293] tmp[2419248])
      val errorExists[2111560]:bool[10] "temp"
      (2111565 'move' errorExists[2111560](2111562 '!=' error[1845988] nil[44]))
      if errorExists[2111560]
      {
        gotoErrorHandling handler[1846005] handler[1846005]
      }
      label handler[1846005]
      val errorExists[2111568]:bool[10] "temp"
      (2111573 'move' errorExists[2111568](2111570 '!=' error[1845988] nil[44]))
      if errorExists[2111568]
      {
        (1846016 call chpl_uncaught_error[170243] error[1845988])
      }
      ref i_x[2328121]:file[235580] "temp"
      (2328125 'move' i_x[2328121](2328123 'set reference' f[1176293]))
      (2328129 call deinit[235891] i_x[2328121])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val tmp[2263265]:int(32)[95] "dead after last mention" "temp"
    (2263267 'move' tmp[2263265](2263269 'cast' int(32)[95] 0))
    val errorExists[2109512]:bool[10] "temp"
    (2109517 'move' errorExists[2109512](2109514 '!=' error[1811311] nil[44]))
    if errorExists[2109512]
    {
      val error[1846024]:__wide_Error[2381123] "error variable" "temp"
      (1846026 'move' error[1846024] nil[44])
      ref tmp[2419255]:__wide_Error[2381123] "temp"
      (2419259 'move' tmp[2419255](2419257 'set reference' error[1846024]))
      (1846030 call close[236024] f[1176293] tmp[2419255])
      val errorExists[2111576]:bool[10] "temp"
      (2111581 'move' errorExists[2111576](2111578 '!=' error[1846024] nil[44]))
      if errorExists[2111576]
      {
        gotoErrorHandling handler[1846041] handler[1846041]
      }
      label handler[1846041]
      val errorExists[2111584]:bool[10] "temp"
      (2111589 'move' errorExists[2111584](2111586 '!=' error[1846024] nil[44]))
      if errorExists[2111584]
      {
        (1846052 call chpl_uncaught_error[170243] error[1846024])
      }
      ref i_x[2328133]:file[235580] "temp"
      (2328137 'move' i_x[2328133](2328135 'set reference' f[1176293]))
      (2328141 call deinit[235891] i_x[2328133])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_style[1179684]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263379]:file[235580] "temp"
    (2263383 'move' i_this[2263379](2263381 'set reference' f[1176293]))
    val ret[2263392]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263394]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263396]:__wide_Error[2381123] "error variable" "temp"
    (2263398 'move' error[2263396] nil[44])
    ref tmp[2434052]:__wide_Error[2381123] "temp"
    (2434056 'move' tmp[2434052](2434054 'set reference' error[2263396]))
    (2263401 'move' style[2263394](2263404 call _style[235960] i_this[2263379] tmp[2434052]))
    val errorExists[2263407]:bool[10] "temp"
    (2263409 'move' errorExists[2263407](2263411 '!=' error[2263396] nil[44]))
    if errorExists[2263407]
    {
      (2263416 '=' error[1811311] error[2263396])
      gotoErrorHandlingReturn _endwriter_default_style[2263425] _endwriter_default_style[2263425]
    }
    (2263422 'move' ret[2263392] style[2263394])
    label _endwriter_default_style[2263425]
    (1179690 'move' default_arg_style[1179684] ret[2263392])
    val errorExists[2109520]:bool[10] "temp"
    (2109525 'move' errorExists[2109520](2109522 '!=' error[1811311] nil[44]))
    if errorExists[2109520]
    {
      val error[1846060]:__wide_Error[2381123] "error variable" "temp"
      (1846062 'move' error[1846060] nil[44])
      ref tmp[2419262]:__wide_Error[2381123] "temp"
      (2419266 'move' tmp[2419262](2419264 'set reference' error[1846060]))
      (1846066 call close[236024] f[1176293] tmp[2419262])
      val errorExists[2111592]:bool[10] "temp"
      (2111597 'move' errorExists[2111592](2111594 '!=' error[1846060] nil[44]))
      if errorExists[2111592]
      {
        gotoErrorHandling handler[1846077] handler[1846077]
      }
      label handler[1846077]
      val errorExists[2111600]:bool[10] "temp"
      (2111605 'move' errorExists[2111600](2111602 '!=' error[1846060] nil[44]))
      if errorExists[2111600]
      {
        (1846088 call chpl_uncaught_error[170243] error[1846060])
      }
      ref i_x[2328145]:file[235580] "temp"
      (2328149 'move' i_x[2328145](2328147 'set reference' f[1176293]))
      (2328153 call deinit[235891] i_x[2328145])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1833035]:channel(true,dynamic,false)[1060947] "temp"
    ref tmp[2415944]:__wide_Error[2381123] "temp"
    (2415948 'move' tmp[2415944](2415946 'set reference' error[1811311]))
    (1176318 call writer[1060853] f[1176293] 0 9223372036854775807 tmp[2263265] default_arg_style[1179684] tmp[2415944] ret_tmp[1833035])
    (1833038 'move' call_tmp[1176310] ret_tmp[1833035])
    val errorExists[2109528]:bool[10] "temp"
    (2109533 'move' errorExists[2109528](2109530 '!=' error[1811311] nil[44]))
    if errorExists[2109528]
    {
      val error[1846096]:__wide_Error[2381123] "error variable" "temp"
      (1846098 'move' error[1846096] nil[44])
      ref tmp[2419269]:__wide_Error[2381123] "temp"
      (2419273 'move' tmp[2419269](2419271 'set reference' error[1846096]))
      (1846102 call close[236024] f[1176293] tmp[2419269])
      val errorExists[2111608]:bool[10] "temp"
      (2111613 'move' errorExists[2111608](2111610 '!=' error[1846096] nil[44]))
      if errorExists[2111608]
      {
        gotoErrorHandling handler[1846113] handler[1846113]
      }
      label handler[1846113]
      val errorExists[2111616]:bool[10] "temp"
      (2111621 'move' errorExists[2111616](2111618 '!=' error[1846096] nil[44]))
      if errorExists[2111616]
      {
        (1846124 call chpl_uncaught_error[170243] error[1846096])
      }
      ref i_x[2328157]:file[235580] "temp"
      (2328161 'move' i_x[2328157](2328159 'set reference' f[1176293]))
      (2328165 call deinit[235891] i_x[2328157])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val w[1176321]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1176323 'move' w[1176321] call_tmp[1176310])
    const-val args[2274733]:(string,codepointIndex,string,int(64))[1176520] "insert auto destroy"
    wide-ref tmp[2442742]:string[26] "temp"
    (2442745 'move' tmp[2442742] _e0_args[1175823])
    (2346429 '.=' args[2274733] x0[1176512] tmp[2442742])
    wide-ref tmp[2442748]:codepointIndex[28274] "temp"
    (2442751 'move' tmp[2442748] _e1_args[1175825])
    (2346433 '.=' args[2274733] x1[1176514] tmp[2442748])
    wide-ref tmp[2442754]:string[26] "temp"
    (2442757 'move' tmp[2442754] _e2_args[1175827])
    (2346437 '.=' args[2274733] x2[1176516] tmp[2442754])
    (2346441 '.=' args[2274733] x3[1176518] _e3_args[1175829])
    const-val ret[2274758]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2274760]:locale[28] "dead after last mention" "maybe param" "temp"
    (2274762 'move' call_tmp[2274760](2274764 '.' w[1176321] _readWriteThisFromLocale[1060944]))
    val ret[2274767]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2274769]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2435366]:locale[28] "temp"
    (2435370 'move' tmp[2435366](2435368 'set reference' tmp[2274769]))
    wide-ref tmp[2435373]:locale[28] "temp"
    (2435376 'move' tmp[2435373] call_tmp[2274760])
    (2274772 call init=[90167] tmp[2435366] tmp[2435373])
    (2274775 'move' ret[2274767] tmp[2274769])
    val ret[2274778]:locale[28] "dead at end of block" "insert auto destroy"
    (2274780 'move' ret[2274778] ret[2274767])
    const-val call_tmp[2274783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2274785 'move' call_tmp[2274783](2274788 call ==[782781] ret[2274778] local_nilLocale[2378789]))
    if call_tmp[2274783]
    {
      const-val call_tmp[2274793]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2274795]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2274797]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2274799 'move' call_tmp[2274797](2274802 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2274805 'move' call_tmp[2274795] call_tmp[2274797])
      const-val call_tmp[2274808]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2274810]:locale[28] "temp"
      wide-ref tmp[2435379]:chpl_localeID_t[209294] "temp"
      (2435383 'move' tmp[2435379](2435381 'set reference' call_tmp[2274795]))
      (2274813 call chpl_localeID_to_locale[92849] tmp[2435379] ret_tmp[2274810])
      (2274816 'move' call_tmp[2274808] ret_tmp[2274810])
      (2274819 'move' call_tmp[2274793] call_tmp[2274808])
      wide-ref tmp[2435386]:locale[28] "temp"
      (2435390 'move' tmp[2435386](2435388 'set reference' ret[2274778]))
      wide-ref tmp[2435393]:locale[28] "temp"
      (2435397 'move' tmp[2435393](2435395 'set reference' call_tmp[2274793]))
      (2274823 call =[90631] tmp[2435386] tmp[2435393])
      ref i_x[2274826]:locale[28] "temp"
      (2274828 'move' i_x[2274826](2274830 'set reference' call_tmp[2274793]))
      wide-ref tmp[2435400]:locale[28] "temp"
      (2435403 'move' tmp[2435400] i_x[2274826])
      (2274833 call deinit[90185] tmp[2435400])
    }
    (2274836 'move' ret[2274758] ret[2274778])
    const-val origLocale[2274839]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2274841 'move' origLocale[2274839] ret[2274758])
    ref call_tmp[2274846]:locale[28] "dead after last mention" "maybe param" "temp"
    (2274848 'move' call_tmp[2274846](2274850 '.' w[1176321] home[1060935]))
    const-val call_tmp[2274853]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2274855]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2274857 'move' coerce_tmp[2274855](2274859 '.v' call_tmp[2274846] _instance[89975]))
    val coerce_tmp[2274862]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2274864 'move' coerce_tmp[2274862](2274866 'cast' object[22] coerce_tmp[2274855]))
    const-val call_tmp[2274869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2435406]:__wide_object[2381018] "temp"
    (2435409 'move' tmp[2435406] nil[44])
    (2274871 'move' call_tmp[2274869](2274873 'ptr_eq' coerce_tmp[2274862] tmp[2435406]))
    if call_tmp[2274869]
    {
      (2274879 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2274882 'move' call_tmp[2274853](2274884 '_wide_get_locale' coerce_tmp[2274855]))
    val error[2274889]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (2274891 'move' error[2274889] nil[44])
    val isdirect[2274905]:bool[10] "temp"
    (2274907 'move' isdirect[2274905](2274910 call chpl_doDirectExecuteOn[187423] call_tmp[2274853]))
    if isdirect[2274905]
    {
      wide-ref tmp[2435412]:(string,codepointIndex,string,int(64))[1176520] "temp"
      (2435416 'move' tmp[2435412](2435414 'set reference' args[2274733]))
      wide-ref tmp[2435419]:__wide_Error[2381123] "temp"
      (2435423 'move' tmp[2435419](2435421 'set reference' error[2274889]))
      (2274915 call on_fn[1180386] w[1176321] tmp[2435412] ret[2274758] tmp[2435419])
    }
    {
      val _args_foron_fn[2274921]:_class_localson_fn[2091285] "temp"
      (2274923 'move' _args_foron_fn[2274921](2274925 'stack allocate class' _class_localson_fn[2091285]))
      (2274927 '.=' _args_foron_fn[2274921] _0_tmp[2091288] call_tmp[2274853])
      (2274931 '.=' _args_foron_fn[2274921] _1_rvfDerefTmp[2091290] w[1176321])
      ref tmp[2274935]:(string,codepointIndex,string,int(64))[1176520] "temp"
      (2274937 'move' tmp[2274935](2274939 'set reference' args[2274733]))
      wide-ref tmp[2435426]:(string,codepointIndex,string,int(64))[1176520] "temp"
      (2435429 'move' tmp[2435426] tmp[2274935])
      (2274941 '.=' _args_foron_fn[2274921] _2_args[2091292] tmp[2435426])
      (2274945 '.=' _args_foron_fn[2274921] _3_rvfDerefTmp[2091294] ret[2274758])
      ref tmp[2274949]:__wide_Error[2381123] "temp"
      (2274951 'move' tmp[2274949](2274953 'set reference' error[2274889]))
      wide-ref tmp[2435432]:__wide_Error[2381123] "temp"
      (2435435 'move' tmp[2435432] tmp[2274949])
      (2274955 '.=' _args_foron_fn[2274921] _4_error[2091296] tmp[2435432])
      val _args_vforon_fn[2274959]:c_void_ptr[149] "temp"
      (2274961 'move' _args_vforon_fn[2274959](2274963 'cast_to_void_star' _args_foron_fn[2274921]))
      val _args_sizeon_fn[2274965]:int(64)[13] "temp"
      (2274967 'move' _args_sizeon_fn[2274965](2274969 'sizeof_bundle' _class_localson_fn[2091285]))
      on(2274972 call wrapon_fn[2091349] call_tmp[2274853] _args_vforon_fn[2274959] _args_sizeon_fn[2274965] _args_foron_fn[2274921])
    }
    val errorExists[2274978]:bool[10] "temp"
    (2274980 'move' errorExists[2274978](2274982 '!=' error[2274889] nil[44]))
    if errorExists[2274978]
    {
      (2274987 '=' error[1811311] error[2274889])
      ref i_x[2274990]:locale[28] "temp"
      (2274992 'move' i_x[2274990](2274994 'set reference' origLocale[2274839]))
      wide-ref tmp[2435438]:locale[28] "temp"
      (2435441 'move' tmp[2435438] i_x[2274990])
      (2274997 call deinit[90185] tmp[2435438])
      gotoErrorHandlingReturn _endwrite[2275014] _endwrite[2275014]
    }
    ref i_x[2275005]:locale[28] "temp"
    (2275007 'move' i_x[2275005](2275009 'set reference' origLocale[2274839]))
    wide-ref tmp[2435444]:locale[28] "temp"
    (2435447 'move' tmp[2435444] i_x[2275005])
    (2275012 call deinit[90185] tmp[2435444])
    label _endwrite[2275014]
    val errorExists[2109536]:bool[10] "temp"
    (2109541 'move' errorExists[2109536](2109538 '!=' error[1811311] nil[44]))
    if errorExists[2109536]
    {
      val error[1846132]:__wide_Error[2381123] "error variable" "temp"
      (1846134 'move' error[1846132] nil[44])
      ref tmp[2419276]:__wide_Error[2381123] "temp"
      (2419280 'move' tmp[2419276](2419278 'set reference' error[1846132]))
      (1846138 call close[1062362] w[1176321] tmp[2419276])
      val errorExists[2111624]:bool[10] "temp"
      (2111629 'move' errorExists[2111624](2111626 '!=' error[1846132] nil[44]))
      if errorExists[2111624]
      {
        gotoErrorHandling handler[1846149] handler[1846149]
      }
      label handler[1846149]
      val errorExists[2111632]:bool[10] "temp"
      (2111637 'move' errorExists[2111632](2111634 '!=' error[1846132] nil[44]))
      if errorExists[2111632]
      {
        (1846160 call chpl_uncaught_error[170243] error[1846132])
      }
      ref i_x[2268346]:channel(true,dynamic,false)[1060947] "temp"
      (2268350 'move' i_x[2268346](2268348 'set reference' w[1176321]))
      (2268354 call deinit[1536215] i_x[2268346])
      val error[1846168]:__wide_Error[2381123] "error variable" "temp"
      (1846170 'move' error[1846168] nil[44])
      ref tmp[2419283]:__wide_Error[2381123] "temp"
      (2419287 'move' tmp[2419283](2419285 'set reference' error[1846168]))
      (1846174 call close[236024] f[1176293] tmp[2419283])
      val errorExists[2111640]:bool[10] "temp"
      (2111645 'move' errorExists[2111640](2111642 '!=' error[1846168] nil[44]))
      if errorExists[2111640]
      {
        gotoErrorHandling handler[1846185] handler[1846185]
      }
      label handler[1846185]
      val errorExists[2111648]:bool[10] "temp"
      (2111653 'move' errorExists[2111648](2111650 '!=' error[1846168] nil[44]))
      if errorExists[2111648]
      {
        (1846196 call chpl_uncaught_error[170243] error[1846168])
      }
      ref i_x[2328169]:file[235580] "temp"
      (2328173 'move' i_x[2328169](2328171 'set reference' f[1176293]))
      (2328177 call deinit[235891] i_x[2328169])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val call_tmp[1176347]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1176349 'move' call_tmp[1176347](1176355 call offset[1080148] w[1176321]))
    const-val call_tmp[2120747]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120749 'move' call_tmp[2120747](2120751 '+' call_tmp[1176347] 1))
    const-val call_tmp[2269509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269511 'move' call_tmp[2269509](2269513 '<' call_tmp[2120747] 0))
    if call_tmp[2269509]
    {
      (2269519 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269522]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269524 'move' call_tmp[2269522](2269526 'cast' uint(64)[115] call_tmp[2120747]))
    const-val call_tmp[2269529]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269531 'move' call_tmp[2269529](2269534 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269536]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269538 'move' call_tmp[2269536](2269540 '*' call_tmp[2269522] call_tmp[2269529]))
    const-val call_tmp[2269543]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269545 'move' call_tmp[2269543](2269548 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269549]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269551 'move' call_tmp[2269549](2269554 call chpl_here_alloc[1080490] call_tmp[2269536] call_tmp[2269543]))
    val call_tmp[2269557]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269559 'move' call_tmp[2269557](2269561 'cast' c_ptr(uint(8))[937423] call_tmp[2269549]))
    val buf[1176385]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1176387 'move' buf[1176385] call_tmp[2269557])
    const-val call_tmp[1176391]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    val errorExists[2109544]:bool[10] "temp"
    (2109549 'move' errorExists[2109544](2109546 '!=' error[1811311] nil[44]))
    if errorExists[2109544]
    {
      val error[1846204]:__wide_Error[2381123] "error variable" "temp"
      (1846206 'move' error[1846204] nil[44])
      ref tmp[2419290]:__wide_Error[2381123] "temp"
      (2419294 'move' tmp[2419290](2419292 'set reference' error[1846204]))
      (1846210 call close[1062362] w[1176321] tmp[2419290])
      val errorExists[2111656]:bool[10] "temp"
      (2111661 'move' errorExists[2111656](2111658 '!=' error[1846204] nil[44]))
      if errorExists[2111656]
      {
        gotoErrorHandling handler[1846221] handler[1846221]
      }
      label handler[1846221]
      val errorExists[2111664]:bool[10] "temp"
      (2111669 'move' errorExists[2111664](2111666 '!=' error[1846204] nil[44]))
      if errorExists[2111664]
      {
        (1846232 call chpl_uncaught_error[170243] error[1846204])
      }
      ref i_x[2268358]:channel(true,dynamic,false)[1060947] "temp"
      (2268362 'move' i_x[2268358](2268360 'set reference' w[1176321]))
      (2268366 call deinit[1536215] i_x[2268358])
      val error[1846240]:__wide_Error[2381123] "error variable" "temp"
      (1846242 'move' error[1846240] nil[44])
      ref tmp[2419297]:__wide_Error[2381123] "temp"
      (2419301 'move' tmp[2419297](2419299 'set reference' error[1846240]))
      (1846246 call close[236024] f[1176293] tmp[2419297])
      val errorExists[2111672]:bool[10] "temp"
      (2111677 'move' errorExists[2111672](2111674 '!=' error[1846240] nil[44]))
      if errorExists[2111672]
      {
        gotoErrorHandling handler[1846257] handler[1846257]
      }
      label handler[1846257]
      val errorExists[2111680]:bool[10] "temp"
      (2111685 'move' errorExists[2111680](2111682 '!=' error[1846240] nil[44]))
      if errorExists[2111680]
      {
        (1846268 call chpl_uncaught_error[170243] error[1846240])
      }
      ref i_x[2328181]:file[235580] "temp"
      (2328185 'move' i_x[2328181](2328183 'set reference' f[1176293]))
      (2328189 call deinit[235891] i_x[2328181])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    val errorExists[2109552]:bool[10] "temp"
    (2109557 'move' errorExists[2109552](2109554 '!=' error[1811311] nil[44]))
    if errorExists[2109552]
    {
      val error[1846276]:__wide_Error[2381123] "error variable" "temp"
      (1846278 'move' error[1846276] nil[44])
      ref tmp[2419304]:__wide_Error[2381123] "temp"
      (2419308 'move' tmp[2419304](2419306 'set reference' error[1846276]))
      (1846282 call close[1062362] w[1176321] tmp[2419304])
      val errorExists[2111688]:bool[10] "temp"
      (2111693 'move' errorExists[2111688](2111690 '!=' error[1846276] nil[44]))
      if errorExists[2111688]
      {
        gotoErrorHandling handler[1846293] handler[1846293]
      }
      label handler[1846293]
      val errorExists[2111696]:bool[10] "temp"
      (2111701 'move' errorExists[2111696](2111698 '!=' error[1846276] nil[44]))
      if errorExists[2111696]
      {
        (1846304 call chpl_uncaught_error[170243] error[1846276])
      }
      ref i_x[2268370]:channel(true,dynamic,false)[1060947] "temp"
      (2268374 'move' i_x[2268370](2268372 'set reference' w[1176321]))
      (2268378 call deinit[1536215] i_x[2268370])
      val error[1846312]:__wide_Error[2381123] "error variable" "temp"
      (1846314 'move' error[1846312] nil[44])
      ref tmp[2419311]:__wide_Error[2381123] "temp"
      (2419315 'move' tmp[2419311](2419313 'set reference' error[1846312]))
      (1846318 call close[236024] f[1176293] tmp[2419311])
      val errorExists[2111704]:bool[10] "temp"
      (2111709 'move' errorExists[2111704](2111706 '!=' error[1846312] nil[44]))
      if errorExists[2111704]
      {
        gotoErrorHandling handler[1846329] handler[1846329]
      }
      label handler[1846329]
      val errorExists[2111712]:bool[10] "temp"
      (2111717 'move' errorExists[2111712](2111714 '!=' error[1846312] nil[44]))
      if errorExists[2111712]
      {
        (1846340 call chpl_uncaught_error[170243] error[1846312])
      }
      ref i_x[2328193]:file[235580] "temp"
      (2328197 'move' i_x[2328193](2328195 'set reference' f[1176293]))
      (2328201 call deinit[235891] i_x[2328193])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val tmp[2269772]:int(32)[95] "dead after last mention" "temp"
    (2269774 'move' tmp[2269772] local_IOHINT_NONE[2378807])
    val errorExists[2109560]:bool[10] "temp"
    (2109565 'move' errorExists[2109560](2109562 '!=' error[1811311] nil[44]))
    if errorExists[2109560]
    {
      val error[1846348]:__wide_Error[2381123] "error variable" "temp"
      (1846350 'move' error[1846348] nil[44])
      ref tmp[2419318]:__wide_Error[2381123] "temp"
      (2419322 'move' tmp[2419318](2419320 'set reference' error[1846348]))
      (1846354 call close[1062362] w[1176321] tmp[2419318])
      val errorExists[2111720]:bool[10] "temp"
      (2111725 'move' errorExists[2111720](2111722 '!=' error[1846348] nil[44]))
      if errorExists[2111720]
      {
        gotoErrorHandling handler[1846365] handler[1846365]
      }
      label handler[1846365]
      val errorExists[2111728]:bool[10] "temp"
      (2111733 'move' errorExists[2111728](2111730 '!=' error[1846348] nil[44]))
      if errorExists[2111728]
      {
        (1846376 call chpl_uncaught_error[170243] error[1846348])
      }
      ref i_x[2268382]:channel(true,dynamic,false)[1060947] "temp"
      (2268386 'move' i_x[2268382](2268384 'set reference' w[1176321]))
      (2268390 call deinit[1536215] i_x[2268382])
      val error[1846384]:__wide_Error[2381123] "error variable" "temp"
      (1846386 'move' error[1846384] nil[44])
      ref tmp[2419325]:__wide_Error[2381123] "temp"
      (2419329 'move' tmp[2419325](2419327 'set reference' error[1846384]))
      (1846390 call close[236024] f[1176293] tmp[2419325])
      val errorExists[2111736]:bool[10] "temp"
      (2111741 'move' errorExists[2111736](2111738 '!=' error[1846384] nil[44]))
      if errorExists[2111736]
      {
        gotoErrorHandling handler[1846401] handler[1846401]
      }
      label handler[1846401]
      val errorExists[2111744]:bool[10] "temp"
      (2111749 'move' errorExists[2111744](2111746 '!=' error[1846384] nil[44]))
      if errorExists[2111744]
      {
        (1846412 call chpl_uncaught_error[170243] error[1846384])
      }
      ref i_x[2328205]:file[235580] "temp"
      (2328209 'move' i_x[2328205](2328207 'set reference' f[1176293]))
      (2328213 call deinit[235891] i_x[2328205])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val default_arg_style[1180767]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269884]:file[235580] "temp"
    (2269888 'move' i_this[2269884](2269886 'set reference' f[1176293]))
    val ret[2269897]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269899]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269901]:__wide_Error[2381123] "error variable" "temp"
    (2269903 'move' error[2269901] nil[44])
    ref tmp[2434900]:__wide_Error[2381123] "temp"
    (2434904 'move' tmp[2434900](2434902 'set reference' error[2269901]))
    (2269906 'move' style[2269899](2269909 call _style[235960] i_this[2269884] tmp[2434900]))
    val errorExists[2269912]:bool[10] "temp"
    (2269914 'move' errorExists[2269912](2269916 '!=' error[2269901] nil[44]))
    if errorExists[2269912]
    {
      (2269921 '=' error[1811311] error[2269901])
      gotoErrorHandlingReturn _endreader_default_style[2269930] _endreader_default_style[2269930]
    }
    (2269927 'move' ret[2269897] style[2269899])
    label _endreader_default_style[2269930]
    (1180773 'move' default_arg_style[1180767] ret[2269897])
    val errorExists[2109568]:bool[10] "temp"
    (2109573 'move' errorExists[2109568](2109570 '!=' error[1811311] nil[44]))
    if errorExists[2109568]
    {
      val error[1846420]:__wide_Error[2381123] "error variable" "temp"
      (1846422 'move' error[1846420] nil[44])
      ref tmp[2419332]:__wide_Error[2381123] "temp"
      (2419336 'move' tmp[2419332](2419334 'set reference' error[1846420]))
      (1846426 call close[1062362] w[1176321] tmp[2419332])
      val errorExists[2111752]:bool[10] "temp"
      (2111757 'move' errorExists[2111752](2111754 '!=' error[1846420] nil[44]))
      if errorExists[2111752]
      {
        gotoErrorHandling handler[1846437] handler[1846437]
      }
      label handler[1846437]
      val errorExists[2111760]:bool[10] "temp"
      (2111765 'move' errorExists[2111760](2111762 '!=' error[1846420] nil[44]))
      if errorExists[2111760]
      {
        (1846448 call chpl_uncaught_error[170243] error[1846420])
      }
      ref i_x[2268394]:channel(true,dynamic,false)[1060947] "temp"
      (2268398 'move' i_x[2268394](2268396 'set reference' w[1176321]))
      (2268402 call deinit[1536215] i_x[2268394])
      val error[1846456]:__wide_Error[2381123] "error variable" "temp"
      (1846458 'move' error[1846456] nil[44])
      ref tmp[2419339]:__wide_Error[2381123] "temp"
      (2419343 'move' tmp[2419339](2419341 'set reference' error[1846456]))
      (1846462 call close[236024] f[1176293] tmp[2419339])
      val errorExists[2111768]:bool[10] "temp"
      (2111773 'move' errorExists[2111768](2111770 '!=' error[1846456] nil[44]))
      if errorExists[2111768]
      {
        gotoErrorHandling handler[1846473] handler[1846473]
      }
      label handler[1846473]
      val errorExists[2111776]:bool[10] "temp"
      (2111781 'move' errorExists[2111776](2111778 '!=' error[1846456] nil[44]))
      if errorExists[2111776]
      {
        (1846484 call chpl_uncaught_error[170243] error[1846456])
      }
      ref i_x[2328217]:file[235580] "temp"
      (2328221 'move' i_x[2328217](2328219 'set reference' f[1176293]))
      (2328225 call deinit[235891] i_x[2328217])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val ret_tmp[1833437]:channel(false,dynamic,false)[1080682] "temp"
    ref tmp[2415951]:__wide_Error[2381123] "temp"
    (2415955 'move' tmp[2415951](2415953 'set reference' error[1811311]))
    (1176399 call reader[1080588] f[1176293] 0 9223372036854775807 tmp[2269772] default_arg_style[1180767] tmp[2415951] ret_tmp[1833437])
    (1833440 'move' call_tmp[1176391] ret_tmp[1833437])
    val errorExists[2109576]:bool[10] "temp"
    (2109581 'move' errorExists[2109576](2109578 '!=' error[1811311] nil[44]))
    if errorExists[2109576]
    {
      val error[1846492]:__wide_Error[2381123] "error variable" "temp"
      (1846494 'move' error[1846492] nil[44])
      ref tmp[2419346]:__wide_Error[2381123] "temp"
      (2419350 'move' tmp[2419346](2419348 'set reference' error[1846492]))
      (1846498 call close[1062362] w[1176321] tmp[2419346])
      val errorExists[2111784]:bool[10] "temp"
      (2111789 'move' errorExists[2111784](2111786 '!=' error[1846492] nil[44]))
      if errorExists[2111784]
      {
        gotoErrorHandling handler[1846509] handler[1846509]
      }
      label handler[1846509]
      val errorExists[2111792]:bool[10] "temp"
      (2111797 'move' errorExists[2111792](2111794 '!=' error[1846492] nil[44]))
      if errorExists[2111792]
      {
        (1846520 call chpl_uncaught_error[170243] error[1846492])
      }
      ref i_x[2268406]:channel(true,dynamic,false)[1060947] "temp"
      (2268410 'move' i_x[2268406](2268408 'set reference' w[1176321]))
      (2268414 call deinit[1536215] i_x[2268406])
      val error[1846528]:__wide_Error[2381123] "error variable" "temp"
      (1846530 'move' error[1846528] nil[44])
      ref tmp[2419353]:__wide_Error[2381123] "temp"
      (2419357 'move' tmp[2419353](2419355 'set reference' error[1846528]))
      (1846534 call close[236024] f[1176293] tmp[2419353])
      val errorExists[2111800]:bool[10] "temp"
      (2111805 'move' errorExists[2111800](2111802 '!=' error[1846528] nil[44]))
      if errorExists[2111800]
      {
        gotoErrorHandling handler[1846545] handler[1846545]
      }
      label handler[1846545]
      val errorExists[2111808]:bool[10] "temp"
      (2111813 'move' errorExists[2111808](2111810 '!=' error[1846528] nil[44]))
      if errorExists[2111808]
      {
        (1846556 call chpl_uncaught_error[170243] error[1846528])
      }
      ref i_x[2328229]:file[235580] "temp"
      (2328233 'move' i_x[2328229](2328231 'set reference' f[1176293]))
      (2328237 call deinit[235891] i_x[2328229])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val r[1176402]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1176404 'move' r[1176402] call_tmp[1176391])
    ref tmp[2415958]:__wide_Error[2381123] "temp"
    (2415962 'move' tmp[2415958](2415960 'set reference' error[1811311]))
    (1176431 call readBytes[1082839] r[1176402] call_tmp[2269557] call_tmp[1176347] tmp[2415958])
    val errorExists[2109584]:bool[10] "temp"
    (2109589 'move' errorExists[2109584](2109586 '!=' error[1811311] nil[44]))
    if errorExists[2109584]
    {
      val error[1846564]:__wide_Error[2381123] "error variable" "temp"
      (1846566 'move' error[1846564] nil[44])
      ref tmp[2419360]:__wide_Error[2381123] "temp"
      (2419364 'move' tmp[2419360](2419362 'set reference' error[1846564]))
      (1846570 call close[1082094] r[1176402] tmp[2419360])
      val errorExists[2111816]:bool[10] "temp"
      (2111821 'move' errorExists[2111816](2111818 '!=' error[1846564] nil[44]))
      if errorExists[2111816]
      {
        gotoErrorHandling handler[1846581] handler[1846581]
      }
      label handler[1846581]
      val errorExists[2111824]:bool[10] "temp"
      (2111829 'move' errorExists[2111824](2111826 '!=' error[1846564] nil[44]))
      if errorExists[2111824]
      {
        (1846592 call chpl_uncaught_error[170243] error[1846564])
      }
      ref i_x[2331692]:channel(false,dynamic,false)[1080682] "temp"
      (2331696 'move' i_x[2331692](2331694 'set reference' r[1176402]))
      (2331700 call deinit[1540469] i_x[2331692])
      val error[1846600]:__wide_Error[2381123] "error variable" "temp"
      (1846602 'move' error[1846600] nil[44])
      ref tmp[2419367]:__wide_Error[2381123] "temp"
      (2419371 'move' tmp[2419367](2419369 'set reference' error[1846600]))
      (1846606 call close[1062362] w[1176321] tmp[2419367])
      val errorExists[2111832]:bool[10] "temp"
      (2111837 'move' errorExists[2111832](2111834 '!=' error[1846600] nil[44]))
      if errorExists[2111832]
      {
        gotoErrorHandling handler[1846617] handler[1846617]
      }
      label handler[1846617]
      val errorExists[2111840]:bool[10] "temp"
      (2111845 'move' errorExists[2111840](2111842 '!=' error[1846600] nil[44]))
      if errorExists[2111840]
      {
        (1846628 call chpl_uncaught_error[170243] error[1846600])
      }
      ref i_x[2268418]:channel(true,dynamic,false)[1060947] "temp"
      (2268422 'move' i_x[2268418](2268420 'set reference' w[1176321]))
      (2268426 call deinit[1536215] i_x[2268418])
      val error[1846636]:__wide_Error[2381123] "error variable" "temp"
      (1846638 'move' error[1846636] nil[44])
      ref tmp[2419374]:__wide_Error[2381123] "temp"
      (2419378 'move' tmp[2419374](2419376 'set reference' error[1846636]))
      (1846642 call close[236024] f[1176293] tmp[2419374])
      val errorExists[2111848]:bool[10] "temp"
      (2111853 'move' errorExists[2111848](2111850 '!=' error[1846636] nil[44]))
      if errorExists[2111848]
      {
        gotoErrorHandling handler[1846653] handler[1846653]
      }
      label handler[1846653]
      val errorExists[2111856]:bool[10] "temp"
      (2111861 'move' errorExists[2111856](2111858 '!=' error[1846636] nil[44]))
      if errorExists[2111856]
      {
        (1846664 call chpl_uncaught_error[170243] error[1846636])
      }
      ref i_x[2328241]:file[235580] "temp"
      (2328245 'move' i_x[2328241](2328243 'set reference' f[1176293]))
      (2328249 call deinit[235891] i_x[2328241])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    ref call_tmp[2195344]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195346 'move' call_tmp[2195344](2195348 'array_get' buf[1176385] call_tmp[1176347]))
    const-val coerce_tmp[1180783]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180789 'move' coerce_tmp[1180783](1180785 'cast' uint(8)[100] 0))
    (2195822 '=' call_tmp[2195344] coerce_tmp[1180783])
    const-val ret[2140746]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140748]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140750]:__wide_Error[2381123] "error variable" "temp"
    (2140752 'move' error[2140750] nil[44])
    const-val ret_tmp[2140755]:string[26] "temp"
    ref tmp[2426561]:__wide_Error[2381123] "temp"
    (2426565 'move' tmp[2426561](2426563 'set reference' error[2140750]))
    (2140758 call decodeByteBuffer[173892] call_tmp[2269557] call_tmp[1176347] replace[173648] tmp[2426561] ret_tmp[2140755])
    (2140764 'move' call_tmp[2140748] ret_tmp[2140755])
    val errorExists[2140767]:bool[10] "temp"
    (2140769 'move' errorExists[2140767](2140771 '!=' error[2140750] nil[44]))
    if errorExists[2140767]
    {
      (2140776 '=' error[1811311] error[2140750])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140785] _endcreateStringWithNewBuffer[2140785]
    }
    (2140782 'move' ret[2140746] call_tmp[2140748])
    label _endcreateStringWithNewBuffer[2140785]
    val errorExists[2109592]:bool[10] "temp"
    (2109597 'move' errorExists[2109592](2109594 '!=' error[1811311] nil[44]))
    if errorExists[2109592]
    {
      val error[1846672]:__wide_Error[2381123] "error variable" "temp"
      (1846674 'move' error[1846672] nil[44])
      ref tmp[2419381]:__wide_Error[2381123] "temp"
      (2419385 'move' tmp[2419381](2419383 'set reference' error[1846672]))
      (1846678 call close[1082094] r[1176402] tmp[2419381])
      val errorExists[2111864]:bool[10] "temp"
      (2111869 'move' errorExists[2111864](2111866 '!=' error[1846672] nil[44]))
      if errorExists[2111864]
      {
        gotoErrorHandling handler[1846689] handler[1846689]
      }
      label handler[1846689]
      val errorExists[2111872]:bool[10] "temp"
      (2111877 'move' errorExists[2111872](2111874 '!=' error[1846672] nil[44]))
      if errorExists[2111872]
      {
        (1846700 call chpl_uncaught_error[170243] error[1846672])
      }
      ref i_x[2331704]:channel(false,dynamic,false)[1080682] "temp"
      (2331708 'move' i_x[2331704](2331706 'set reference' r[1176402]))
      (2331712 call deinit[1540469] i_x[2331704])
      val error[1846708]:__wide_Error[2381123] "error variable" "temp"
      (1846710 'move' error[1846708] nil[44])
      ref tmp[2419388]:__wide_Error[2381123] "temp"
      (2419392 'move' tmp[2419388](2419390 'set reference' error[1846708]))
      (1846714 call close[1062362] w[1176321] tmp[2419388])
      val errorExists[2111880]:bool[10] "temp"
      (2111885 'move' errorExists[2111880](2111882 '!=' error[1846708] nil[44]))
      if errorExists[2111880]
      {
        gotoErrorHandling handler[1846725] handler[1846725]
      }
      label handler[1846725]
      val errorExists[2111888]:bool[10] "temp"
      (2111893 'move' errorExists[2111888](2111890 '!=' error[1846708] nil[44]))
      if errorExists[2111888]
      {
        (1846736 call chpl_uncaught_error[170243] error[1846708])
      }
      ref i_x[2268430]:channel(true,dynamic,false)[1060947] "temp"
      (2268434 'move' i_x[2268430](2268432 'set reference' w[1176321]))
      (2268438 call deinit[1536215] i_x[2268430])
      val error[1846744]:__wide_Error[2381123] "error variable" "temp"
      (1846746 'move' error[1846744] nil[44])
      ref tmp[2419395]:__wide_Error[2381123] "temp"
      (2419399 'move' tmp[2419395](2419397 'set reference' error[1846744]))
      (1846750 call close[236024] f[1176293] tmp[2419395])
      val errorExists[2111896]:bool[10] "temp"
      (2111901 'move' errorExists[2111896](2111898 '!=' error[1846744] nil[44]))
      if errorExists[2111896]
      {
        gotoErrorHandling handler[1846761] handler[1846761]
      }
      label handler[1846761]
      val errorExists[2111904]:bool[10] "temp"
      (2111909 'move' errorExists[2111904](2111906 '!=' error[1846744] nil[44]))
      if errorExists[2111904]
      {
        (1846772 call chpl_uncaught_error[170243] error[1846744])
      }
      ref i_x[2328253]:file[235580] "temp"
      (2328257 'move' i_x[2328253](2328255 'set reference' f[1176293]))
      (2328261 call deinit[235891] i_x[2328253])
      gotoErrorHandling handler[1811312] handler[1811312]
    }
    const-val coerce_tmp[1180794]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180800 'move' coerce_tmp[1180794](1180796 'cast' c_void_ptr[149] call_tmp[2269557]))
    (2203426 call chpl_here_free[188081] coerce_tmp[1180794])
    (1180804 'move' ret[1175833] ret[2140746])
    val error[1846780]:__wide_Error[2381123] "error variable" "temp"
    (1846782 'move' error[1846780] nil[44])
    ref tmp[2419402]:__wide_Error[2381123] "temp"
    (2419406 'move' tmp[2419402](2419404 'set reference' error[1846780]))
    (1846786 call close[1082094] r[1176402] tmp[2419402])
    val errorExists[2111912]:bool[10] "temp"
    (2111917 'move' errorExists[2111912](2111914 '!=' error[1846780] nil[44]))
    if errorExists[2111912]
    {
      gotoErrorHandling handler[1846797] handler[1846797]
    }
    label handler[1846797]
    val errorExists[2111920]:bool[10] "temp"
    (2111925 'move' errorExists[2111920](2111922 '!=' error[1846780] nil[44]))
    if errorExists[2111920]
    {
      (1846808 call chpl_uncaught_error[170243] error[1846780])
    }
    ref i_x[2331716]:channel(false,dynamic,false)[1080682] "temp"
    (2331720 'move' i_x[2331716](2331718 'set reference' r[1176402]))
    (2331724 call deinit[1540469] i_x[2331716])
    val error[1846816]:__wide_Error[2381123] "error variable" "temp"
    (1846818 'move' error[1846816] nil[44])
    ref tmp[2419409]:__wide_Error[2381123] "temp"
    (2419413 'move' tmp[2419409](2419411 'set reference' error[1846816]))
    (1846822 call close[1062362] w[1176321] tmp[2419409])
    val errorExists[2111928]:bool[10] "temp"
    (2111933 'move' errorExists[2111928](2111930 '!=' error[1846816] nil[44]))
    if errorExists[2111928]
    {
      gotoErrorHandling handler[1846833] handler[1846833]
    }
    label handler[1846833]
    val errorExists[2111936]:bool[10] "temp"
    (2111941 'move' errorExists[2111936](2111938 '!=' error[1846816] nil[44]))
    if errorExists[2111936]
    {
      (1846844 call chpl_uncaught_error[170243] error[1846816])
    }
    ref i_x[2268442]:channel(true,dynamic,false)[1060947] "temp"
    (2268446 'move' i_x[2268442](2268444 'set reference' w[1176321]))
    (2268450 call deinit[1536215] i_x[2268442])
    val error[1846852]:__wide_Error[2381123] "error variable" "temp"
    (1846854 'move' error[1846852] nil[44])
    ref tmp[2419416]:__wide_Error[2381123] "temp"
    (2419420 'move' tmp[2419416](2419418 'set reference' error[1846852]))
    (1846858 call close[236024] f[1176293] tmp[2419416])
    val errorExists[2111944]:bool[10] "temp"
    (2111949 'move' errorExists[2111944](2111946 '!=' error[1846852] nil[44]))
    if errorExists[2111944]
    {
      gotoErrorHandling handler[1846869] handler[1846869]
    }
    label handler[1846869]
    val errorExists[2111952]:bool[10] "temp"
    (2111957 'move' errorExists[2111952](2111954 '!=' error[1846852] nil[44]))
    if errorExists[2111952]
    {
      (1846880 call chpl_uncaught_error[170243] error[1846852])
    }
    ref i_x[2328265]:file[235580] "temp"
    (2328269 'move' i_x[2328265](2328267 'set reference' f[1176293]))
    (2328273 call deinit[235891] i_x[2328265])
    gotoReturn _end_stringify[1176499] _end_stringify[1176499]
    label handler[1811312]
    val errorExists[2109600]:bool[10] "temp"
    (2109605 'move' errorExists[2109600](2109602 '!=' error[1811311] nil[44]))
    if errorExists[2109600]
    {
      (1811502 call chpl_uncaught_error[170243] error[1811311])
    }
    label _end_stringify[1176499]
    (1834666 '=' _retArg[1834664] ret[1175833])
    (1834668 return _void[55])
  }
  function stringify[1190720](const  ref arg _e0_args[1190722]:string[26], const in arg _e1_args[1190724]:range(byteIndex,boundedHigh,false)[1184919], const  ref arg _e2_args[1190726]:string[26], const in arg _e3_args[1190728]:int(64)[13], ref arg _retArg[1834870]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378873]:string[26] "temp"
    (2378874 'move' "" "")
    const-val ret[1190732]:string[26] "dead after last mention" "RVV" "temp"
    val str[1190773]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204563]:string[26] "temp"
    (2204566 'move' inlineImm[2204563] "")
    ref i_x[2204568]:string[26] "temp"
    (2204572 'move' i_x[2204568](2204570 'set reference' inlineImm[2204563]))
    val ret[2204575]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204577]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429959]:string[26] "temp"
    (2429962 'move' tmp[2429959] i_x[2204568])
    (2204580 call init=[30771] tmp[2204577] tmp[2429959])
    (2204583 'move' ret[2204575] tmp[2204577])
    (1190775 'move' str[1190773] ret[2204575])
    (1197161 call +=[38797] str[1190773] _e0_args[1190722])
    const-val call_tmp[1197736]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834910]:string[26] "temp"
    (1197741 call _cast[1198631] _e1_args[1190724] ret_tmp[1834910])
    (1834913 'move' call_tmp[1197736] ret_tmp[1834910])
    (1197745 call +=[38797] str[1190773] call_tmp[1197736])
    ref i_x[2131857]:string[26] "temp"
    (2131861 'move' i_x[2131857](2131859 'set reference' call_tmp[1197736]))
    wide-ref tmp[2425848]:string[26] "temp"
    (2425851 'move' tmp[2425848] i_x[2131857])
    (2131865 call deinit[30831] tmp[2425848])
    (1197851 call +=[38797] str[1190773] _e2_args[1190726])
    const-val call_tmp[1198426]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833149]:string[26] "temp"
    (1198431 call _cast[1063153] _e3_args[1190728] ret_tmp[1833149])
    (1833152 'move' call_tmp[1198426] ret_tmp[1833149])
    (1198435 call +=[38797] str[1190773] call_tmp[1198426])
    ref i_x[2131869]:string[26] "temp"
    (2131873 'move' i_x[2131869](2131871 'set reference' call_tmp[1198426]))
    wide-ref tmp[2425854]:string[26] "temp"
    (2425857 'move' tmp[2425854] i_x[2131869])
    (2131877 call deinit[30831] tmp[2425854])
    (1200333 'move' ret[1190732] str[1190773])
    gotoReturn _end_stringify[1191398] _end_stringify[1191398]
    label _end_stringify[1191398]
    (1834872 '=' _retArg[1834870] ret[1190732])
    (1834878 return _void[55])
  }
  function stringify[1291138](const  ref arg _e0_args[1291140]:string[26], const  ref arg _e1_args[1291142]:string[26], const  ref arg _e2_args[1291144]:string[26], const  ref arg _e3_args[1291146]:string[26], ref arg _retArg[1837026]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2379284]:string[26] "temp"
    (2379285 'move' "" "")
    const-val ret[1291150]:string[26] "dead after last mention" "RVV" "temp"
    val str[1291191]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204663]:string[26] "temp"
    (2204666 'move' inlineImm[2204663] "")
    ref i_x[2204668]:string[26] "temp"
    (2204672 'move' i_x[2204668](2204670 'set reference' inlineImm[2204663]))
    val ret[2204675]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204677]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429983]:string[26] "temp"
    (2429986 'move' tmp[2429983] i_x[2204668])
    (2204680 call init=[30771] tmp[2204677] tmp[2429983])
    (2204683 'move' ret[2204675] tmp[2204677])
    (1291193 'move' str[1291191] ret[2204675])
    (1295007 call +=[38797] str[1291191] _e0_args[1291140])
    (1295352 call +=[38797] str[1291191] _e1_args[1291142])
    (1295697 call +=[38797] str[1291191] _e2_args[1291144])
    (1296042 call +=[38797] str[1291191] _e3_args[1291146])
    (1296481 'move' ret[1291150] str[1291191])
    gotoReturn _end_stringify[1291816] _end_stringify[1291816]
    label _end_stringify[1291816]
    (1837028 '=' _retArg[1837026] ret[1291150])
    (1837032 return _void[55])
  }
  function stringify[1157864](const  ref arg _e0_args[1157866]:string[26], const  ref arg _e1_args[1157868]:codepointIndex[28274], const  ref arg _e2_args[1157870]:string[26], ref arg _retArg[1834606]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local_IOHINT_NONE[2378691]:int(32)[95] "temp"
    (2378692 'move' local_IOHINT_NONE[2378691] IOHINT_NONE[231411])
    const-val local__str_literal_4778[2378685]:string[26] "temp"
    (2378686 'move' "casting int(64) less than 0 to uint(64)" "casting int(64) less than 0 to uint(64)")
    const-val local__str_literal_129[2378679]:string[26] "temp"
    (2378680 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2378673]:locale[28] "temp"
    (2378674 'move' local_nilLocale[2378673] nilLocale[89939])
    const-val ret[1157874]:string[26] "dead after last mention" "RVV" "temp"
    val error[1810814]:__wide_Error[2381123] "error variable" "temp"
    (1810999 'move' error[1810814] nil[44])
    const-val call_tmp[1158325]:file[235580] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1164179]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2263025]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2263027 'move' style[2263025](2263030 call defaultIOStyle[235295]))
    (1164183 'move' default_arg_style[1164179] style[2263025])
    val errorExists[2109200]:bool[10] "temp"
    (2109205 'move' errorExists[2109200](2109202 '!=' error[1810814] nil[44]))
    if errorExists[2109200]
    {
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1831509]:file[235580] "temp"
    ref tmp[2415803]:__wide_Error[2381123] "temp"
    (2415807 'move' tmp[2415803](2415805 'set reference' error[1810814]))
    (1158330 call openmem[237625] default_arg_style[1164179] tmp[2415803] ret_tmp[1831509])
    (1831512 'move' call_tmp[1158325] ret_tmp[1831509])
    val errorExists[2109208]:bool[10] "temp"
    (2109213 'move' errorExists[2109208](2109210 '!=' error[1810814] nil[44]))
    if errorExists[2109208]
    {
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val f[1158331]:file[235580] "dead at end of block" "insert auto destroy"
    (1158333 'move' f[1158331] call_tmp[1158325])
    const-val call_tmp[1158348]:channel(true,dynamic,false)[1060947] "dead at end of block" "maybe param" "temp"
    val errorExists[2109216]:bool[10] "temp"
    (2109221 'move' errorExists[2109216](2109218 '!=' error[1810814] nil[44]))
    if errorExists[2109216]
    {
      val error[1844889]:__wide_Error[2381123] "error variable" "temp"
      (1844891 'move' error[1844889] nil[44])
      ref tmp[2419059]:__wide_Error[2381123] "temp"
      (2419063 'move' tmp[2419059](2419061 'set reference' error[1844889]))
      (1844895 call close[236024] f[1158331] tmp[2419059])
      val errorExists[2111128]:bool[10] "temp"
      (2111133 'move' errorExists[2111128](2111130 '!=' error[1844889] nil[44]))
      if errorExists[2111128]
      {
        gotoErrorHandling handler[1844906] handler[1844906]
      }
      label handler[1844906]
      val errorExists[2111136]:bool[10] "temp"
      (2111141 'move' errorExists[2111136](2111138 '!=' error[1844889] nil[44]))
      if errorExists[2111136]
      {
        (1844917 call chpl_uncaught_error[170243] error[1844889])
      }
      ref i_x[2327941]:file[235580] "temp"
      (2327945 'move' i_x[2327941](2327943 'set reference' f[1158331]))
      (2327949 call deinit[235891] i_x[2327941])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    val errorExists[2109224]:bool[10] "temp"
    (2109229 'move' errorExists[2109224](2109226 '!=' error[1810814] nil[44]))
    if errorExists[2109224]
    {
      val error[1844925]:__wide_Error[2381123] "error variable" "temp"
      (1844927 'move' error[1844925] nil[44])
      ref tmp[2419066]:__wide_Error[2381123] "temp"
      (2419070 'move' tmp[2419066](2419068 'set reference' error[1844925]))
      (1844931 call close[236024] f[1158331] tmp[2419066])
      val errorExists[2111144]:bool[10] "temp"
      (2111149 'move' errorExists[2111144](2111146 '!=' error[1844925] nil[44]))
      if errorExists[2111144]
      {
        gotoErrorHandling handler[1844942] handler[1844942]
      }
      label handler[1844942]
      val errorExists[2111152]:bool[10] "temp"
      (2111157 'move' errorExists[2111152](2111154 '!=' error[1844925] nil[44]))
      if errorExists[2111152]
      {
        (1844953 call chpl_uncaught_error[170243] error[1844925])
      }
      ref i_x[2327953]:file[235580] "temp"
      (2327957 'move' i_x[2327953](2327955 'set reference' f[1158331]))
      (2327961 call deinit[235891] i_x[2327953])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val tmp[2263236]:int(32)[95] "dead after last mention" "temp"
    (2263238 'move' tmp[2263236](2263240 'cast' int(32)[95] 0))
    val errorExists[2109232]:bool[10] "temp"
    (2109237 'move' errorExists[2109232](2109234 '!=' error[1810814] nil[44]))
    if errorExists[2109232]
    {
      val error[1844961]:__wide_Error[2381123] "error variable" "temp"
      (1844963 'move' error[1844961] nil[44])
      ref tmp[2419073]:__wide_Error[2381123] "temp"
      (2419077 'move' tmp[2419073](2419075 'set reference' error[1844961]))
      (1844967 call close[236024] f[1158331] tmp[2419073])
      val errorExists[2111160]:bool[10] "temp"
      (2111165 'move' errorExists[2111160](2111162 '!=' error[1844961] nil[44]))
      if errorExists[2111160]
      {
        gotoErrorHandling handler[1844978] handler[1844978]
      }
      label handler[1844978]
      val errorExists[2111168]:bool[10] "temp"
      (2111173 'move' errorExists[2111168](2111170 '!=' error[1844961] nil[44]))
      if errorExists[2111168]
      {
        (1844989 call chpl_uncaught_error[170243] error[1844961])
      }
      ref i_x[2327965]:file[235580] "temp"
      (2327969 'move' i_x[2327965](2327967 'set reference' f[1158331]))
      (2327973 call deinit[235891] i_x[2327965])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_style[1164238]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2263329]:file[235580] "temp"
    (2263333 'move' i_this[2263329](2263331 'set reference' f[1158331]))
    val ret[2263342]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2263344]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2263346]:__wide_Error[2381123] "error variable" "temp"
    (2263348 'move' error[2263346] nil[44])
    ref tmp[2434045]:__wide_Error[2381123] "temp"
    (2434049 'move' tmp[2434045](2434047 'set reference' error[2263346]))
    (2263351 'move' style[2263344](2263354 call _style[235960] i_this[2263329] tmp[2434045]))
    val errorExists[2263357]:bool[10] "temp"
    (2263359 'move' errorExists[2263357](2263361 '!=' error[2263346] nil[44]))
    if errorExists[2263357]
    {
      (2263366 '=' error[1810814] error[2263346])
      gotoErrorHandlingReturn _endwriter_default_style[2263375] _endwriter_default_style[2263375]
    }
    (2263372 'move' ret[2263342] style[2263344])
    label _endwriter_default_style[2263375]
    (1164244 'move' default_arg_style[1164238] ret[2263342])
    val errorExists[2109240]:bool[10] "temp"
    (2109245 'move' errorExists[2109240](2109242 '!=' error[1810814] nil[44]))
    if errorExists[2109240]
    {
      val error[1844997]:__wide_Error[2381123] "error variable" "temp"
      (1844999 'move' error[1844997] nil[44])
      ref tmp[2419080]:__wide_Error[2381123] "temp"
      (2419084 'move' tmp[2419080](2419082 'set reference' error[1844997]))
      (1845003 call close[236024] f[1158331] tmp[2419080])
      val errorExists[2111176]:bool[10] "temp"
      (2111181 'move' errorExists[2111176](2111178 '!=' error[1844997] nil[44]))
      if errorExists[2111176]
      {
        gotoErrorHandling handler[1845014] handler[1845014]
      }
      label handler[1845014]
      val errorExists[2111184]:bool[10] "temp"
      (2111189 'move' errorExists[2111184](2111186 '!=' error[1844997] nil[44]))
      if errorExists[2111184]
      {
        (1845025 call chpl_uncaught_error[170243] error[1844997])
      }
      ref i_x[2327977]:file[235580] "temp"
      (2327981 'move' i_x[2327977](2327979 'set reference' f[1158331]))
      (2327985 call deinit[235891] i_x[2327977])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1833029]:channel(true,dynamic,false)[1060947] "temp"
    ref tmp[2415810]:__wide_Error[2381123] "temp"
    (2415814 'move' tmp[2415810](2415812 'set reference' error[1810814]))
    (1158356 call writer[1060853] f[1158331] 0 9223372036854775807 tmp[2263236] default_arg_style[1164238] tmp[2415810] ret_tmp[1833029])
    (1833032 'move' call_tmp[1158348] ret_tmp[1833029])
    val errorExists[2109248]:bool[10] "temp"
    (2109253 'move' errorExists[2109248](2109250 '!=' error[1810814] nil[44]))
    if errorExists[2109248]
    {
      val error[1845033]:__wide_Error[2381123] "error variable" "temp"
      (1845035 'move' error[1845033] nil[44])
      ref tmp[2419087]:__wide_Error[2381123] "temp"
      (2419091 'move' tmp[2419087](2419089 'set reference' error[1845033]))
      (1845039 call close[236024] f[1158331] tmp[2419087])
      val errorExists[2111192]:bool[10] "temp"
      (2111197 'move' errorExists[2111192](2111194 '!=' error[1845033] nil[44]))
      if errorExists[2111192]
      {
        gotoErrorHandling handler[1845050] handler[1845050]
      }
      label handler[1845050]
      val errorExists[2111200]:bool[10] "temp"
      (2111205 'move' errorExists[2111200](2111202 '!=' error[1845033] nil[44]))
      if errorExists[2111200]
      {
        (1845061 call chpl_uncaught_error[170243] error[1845033])
      }
      ref i_x[2327989]:file[235580] "temp"
      (2327993 'move' i_x[2327989](2327991 'set reference' f[1158331]))
      (2327997 call deinit[235891] i_x[2327989])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val w[1158359]:channel(true,dynamic,false)[1060947] "dead at end of block" "insert auto destroy"
    (1158361 'move' w[1158359] call_tmp[1158348])
    const-val args[2272878]:(string,codepointIndex,string)[1158555] "insert auto destroy"
    wide-ref tmp[2442724]:string[26] "temp"
    (2442727 'move' tmp[2442724] _e0_args[1157866])
    (2346323 '.=' args[2272878] x0[1158549] tmp[2442724])
    wide-ref tmp[2442730]:codepointIndex[28274] "temp"
    (2442733 'move' tmp[2442730] _e1_args[1157868])
    (2346327 '.=' args[2272878] x1[1158551] tmp[2442730])
    wide-ref tmp[2442736]:string[26] "temp"
    (2442739 'move' tmp[2442736] _e2_args[1157870])
    (2346331 '.=' args[2272878] x2[1158553] tmp[2442736])
    const-val ret[2272899]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2272901]:locale[28] "dead after last mention" "maybe param" "temp"
    (2272903 'move' call_tmp[2272901](2272905 '.' w[1158359] _readWriteThisFromLocale[1060944]))
    val ret[2272908]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2272910]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2435105]:locale[28] "temp"
    (2435109 'move' tmp[2435105](2435107 'set reference' tmp[2272910]))
    wide-ref tmp[2435112]:locale[28] "temp"
    (2435115 'move' tmp[2435112] call_tmp[2272901])
    (2272913 call init=[90167] tmp[2435105] tmp[2435112])
    (2272916 'move' ret[2272908] tmp[2272910])
    val ret[2272919]:locale[28] "dead at end of block" "insert auto destroy"
    (2272921 'move' ret[2272919] ret[2272908])
    const-val call_tmp[2272924]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2272926 'move' call_tmp[2272924](2272929 call ==[782781] ret[2272919] local_nilLocale[2378673]))
    if call_tmp[2272924]
    {
      const-val call_tmp[2272934]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2272936]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2272938]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2272940 'move' call_tmp[2272938](2272943 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2272946 'move' call_tmp[2272936] call_tmp[2272938])
      const-val call_tmp[2272949]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2272951]:locale[28] "temp"
      wide-ref tmp[2435118]:chpl_localeID_t[209294] "temp"
      (2435122 'move' tmp[2435118](2435120 'set reference' call_tmp[2272936]))
      (2272954 call chpl_localeID_to_locale[92849] tmp[2435118] ret_tmp[2272951])
      (2272957 'move' call_tmp[2272949] ret_tmp[2272951])
      (2272960 'move' call_tmp[2272934] call_tmp[2272949])
      wide-ref tmp[2435125]:locale[28] "temp"
      (2435129 'move' tmp[2435125](2435127 'set reference' ret[2272919]))
      wide-ref tmp[2435132]:locale[28] "temp"
      (2435136 'move' tmp[2435132](2435134 'set reference' call_tmp[2272934]))
      (2272964 call =[90631] tmp[2435125] tmp[2435132])
      ref i_x[2272967]:locale[28] "temp"
      (2272969 'move' i_x[2272967](2272971 'set reference' call_tmp[2272934]))
      wide-ref tmp[2435139]:locale[28] "temp"
      (2435142 'move' tmp[2435139] i_x[2272967])
      (2272974 call deinit[90185] tmp[2435139])
    }
    (2272977 'move' ret[2272899] ret[2272919])
    const-val origLocale[2272980]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2272982 'move' origLocale[2272980] ret[2272899])
    ref call_tmp[2272987]:locale[28] "dead after last mention" "maybe param" "temp"
    (2272989 'move' call_tmp[2272987](2272991 '.' w[1158359] home[1060935]))
    const-val call_tmp[2272994]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2272996]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2272998 'move' coerce_tmp[2272996](2273000 '.v' call_tmp[2272987] _instance[89975]))
    val coerce_tmp[2273003]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2273005 'move' coerce_tmp[2273003](2273007 'cast' object[22] coerce_tmp[2272996]))
    const-val call_tmp[2273010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2435145]:__wide_object[2381018] "temp"
    (2435148 'move' tmp[2435145] nil[44])
    (2273012 'move' call_tmp[2273010](2273014 'ptr_eq' coerce_tmp[2273003] tmp[2435145]))
    if call_tmp[2273010]
    {
      (2273020 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2273023 'move' call_tmp[2272994](2273025 '_wide_get_locale' coerce_tmp[2272996]))
    val error[2273030]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (2273032 'move' error[2273030] nil[44])
    val isdirect[2273046]:bool[10] "temp"
    (2273048 'move' isdirect[2273046](2273051 call chpl_doDirectExecuteOn[187423] call_tmp[2272994]))
    if isdirect[2273046]
    {
      wide-ref tmp[2435151]:(string,codepointIndex,string)[1158555] "temp"
      (2435155 'move' tmp[2435151](2435153 'set reference' args[2272878]))
      wide-ref tmp[2435158]:__wide_Error[2381123] "temp"
      (2435162 'move' tmp[2435158](2435160 'set reference' error[2273030]))
      (2273056 call on_fn[1164907] w[1158359] tmp[2435151] ret[2272899] tmp[2435158])
    }
    {
      val _args_foron_fn[2273062]:_class_localson_fn[2091143] "temp"
      (2273064 'move' _args_foron_fn[2273062](2273066 'stack allocate class' _class_localson_fn[2091143]))
      (2273068 '.=' _args_foron_fn[2273062] _0_tmp[2091146] call_tmp[2272994])
      (2273072 '.=' _args_foron_fn[2273062] _1_rvfDerefTmp[2091148] w[1158359])
      ref tmp[2273076]:(string,codepointIndex,string)[1158555] "temp"
      (2273078 'move' tmp[2273076](2273080 'set reference' args[2272878]))
      wide-ref tmp[2435165]:(string,codepointIndex,string)[1158555] "temp"
      (2435168 'move' tmp[2435165] tmp[2273076])
      (2273082 '.=' _args_foron_fn[2273062] _2_args[2091150] tmp[2435165])
      (2273086 '.=' _args_foron_fn[2273062] _3_rvfDerefTmp[2091152] ret[2272899])
      ref tmp[2273090]:__wide_Error[2381123] "temp"
      (2273092 'move' tmp[2273090](2273094 'set reference' error[2273030]))
      wide-ref tmp[2435171]:__wide_Error[2381123] "temp"
      (2435174 'move' tmp[2435171] tmp[2273090])
      (2273096 '.=' _args_foron_fn[2273062] _4_error[2091154] tmp[2435171])
      val _args_vforon_fn[2273100]:c_void_ptr[149] "temp"
      (2273102 'move' _args_vforon_fn[2273100](2273104 'cast_to_void_star' _args_foron_fn[2273062]))
      val _args_sizeon_fn[2273106]:int(64)[13] "temp"
      (2273108 'move' _args_sizeon_fn[2273106](2273110 'sizeof_bundle' _class_localson_fn[2091143]))
      on(2273113 call wrapon_fn[2091207] call_tmp[2272994] _args_vforon_fn[2273100] _args_sizeon_fn[2273106] _args_foron_fn[2273062])
    }
    val errorExists[2273119]:bool[10] "temp"
    (2273121 'move' errorExists[2273119](2273123 '!=' error[2273030] nil[44]))
    if errorExists[2273119]
    {
      (2273128 '=' error[1810814] error[2273030])
      ref i_x[2273131]:locale[28] "temp"
      (2273133 'move' i_x[2273131](2273135 'set reference' origLocale[2272980]))
      wide-ref tmp[2435177]:locale[28] "temp"
      (2435180 'move' tmp[2435177] i_x[2273131])
      (2273138 call deinit[90185] tmp[2435177])
      gotoErrorHandlingReturn _endwrite[2273155] _endwrite[2273155]
    }
    ref i_x[2273146]:locale[28] "temp"
    (2273148 'move' i_x[2273146](2273150 'set reference' origLocale[2272980]))
    wide-ref tmp[2435183]:locale[28] "temp"
    (2435186 'move' tmp[2435183] i_x[2273146])
    (2273153 call deinit[90185] tmp[2435183])
    label _endwrite[2273155]
    val errorExists[2109256]:bool[10] "temp"
    (2109261 'move' errorExists[2109256](2109258 '!=' error[1810814] nil[44]))
    if errorExists[2109256]
    {
      val error[1845069]:__wide_Error[2381123] "error variable" "temp"
      (1845071 'move' error[1845069] nil[44])
      ref tmp[2419094]:__wide_Error[2381123] "temp"
      (2419098 'move' tmp[2419094](2419096 'set reference' error[1845069]))
      (1845075 call close[1062362] w[1158359] tmp[2419094])
      val errorExists[2111208]:bool[10] "temp"
      (2111213 'move' errorExists[2111208](2111210 '!=' error[1845069] nil[44]))
      if errorExists[2111208]
      {
        gotoErrorHandling handler[1845086] handler[1845086]
      }
      label handler[1845086]
      val errorExists[2111216]:bool[10] "temp"
      (2111221 'move' errorExists[2111216](2111218 '!=' error[1845069] nil[44]))
      if errorExists[2111216]
      {
        (1845097 call chpl_uncaught_error[170243] error[1845069])
      }
      ref i_x[2268214]:channel(true,dynamic,false)[1060947] "temp"
      (2268218 'move' i_x[2268214](2268216 'set reference' w[1158359]))
      (2268222 call deinit[1536215] i_x[2268214])
      val error[1845105]:__wide_Error[2381123] "error variable" "temp"
      (1845107 'move' error[1845105] nil[44])
      ref tmp[2419101]:__wide_Error[2381123] "temp"
      (2419105 'move' tmp[2419101](2419103 'set reference' error[1845105]))
      (1845111 call close[236024] f[1158331] tmp[2419101])
      val errorExists[2111224]:bool[10] "temp"
      (2111229 'move' errorExists[2111224](2111226 '!=' error[1845105] nil[44]))
      if errorExists[2111224]
      {
        gotoErrorHandling handler[1845122] handler[1845122]
      }
      label handler[1845122]
      val errorExists[2111232]:bool[10] "temp"
      (2111237 'move' errorExists[2111232](2111234 '!=' error[1845105] nil[44]))
      if errorExists[2111232]
      {
        (1845133 call chpl_uncaught_error[170243] error[1845105])
      }
      ref i_x[2328001]:file[235580] "temp"
      (2328005 'move' i_x[2328001](2328003 'set reference' f[1158331]))
      (2328009 call deinit[235891] i_x[2328001])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val call_tmp[1158385]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1158387 'move' call_tmp[1158385](1158393 call offset[1080148] w[1158359]))
    const-val call_tmp[2120727]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120729 'move' call_tmp[2120727](2120731 '+' call_tmp[1158385] 1))
    const-val call_tmp[2269444]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269446 'move' call_tmp[2269444](2269448 '<' call_tmp[2120727] 0))
    if call_tmp[2269444]
    {
      (2269454 call safeCastCheckHalt[210215] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2269457]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269459 'move' call_tmp[2269457](2269461 'cast' uint(64)[115] call_tmp[2120727]))
    const-val call_tmp[2269464]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269466 'move' call_tmp[2269464](2269469 call sizeof[1080454] uint(8)[100]))
    const-val call_tmp[2269471]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269473 'move' call_tmp[2269471](2269475 '*' call_tmp[2269457] call_tmp[2269464]))
    const-val call_tmp[2269478]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269480 'move' call_tmp[2269478](2269483 call offset_ARRAY_ELEMENTS[207390]))
    const-val call_tmp[2269484]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269486 'move' call_tmp[2269484](2269489 call chpl_here_alloc[1080490] call_tmp[2269471] call_tmp[2269478]))
    val call_tmp[2269492]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
    (2269494 'move' call_tmp[2269492](2269496 'cast' c_ptr(uint(8))[937423] call_tmp[2269484]))
    val buf[1158423]:c_ptr(uint(8))[937423] "dead at end of block" "insert auto destroy"
    (1158425 'move' buf[1158423] call_tmp[2269492])
    const-val call_tmp[1158429]:channel(false,dynamic,false)[1080682] "dead at end of block" "maybe param" "temp"
    val errorExists[2109264]:bool[10] "temp"
    (2109269 'move' errorExists[2109264](2109266 '!=' error[1810814] nil[44]))
    if errorExists[2109264]
    {
      val error[1845141]:__wide_Error[2381123] "error variable" "temp"
      (1845143 'move' error[1845141] nil[44])
      ref tmp[2419108]:__wide_Error[2381123] "temp"
      (2419112 'move' tmp[2419108](2419110 'set reference' error[1845141]))
      (1845147 call close[1062362] w[1158359] tmp[2419108])
      val errorExists[2111240]:bool[10] "temp"
      (2111245 'move' errorExists[2111240](2111242 '!=' error[1845141] nil[44]))
      if errorExists[2111240]
      {
        gotoErrorHandling handler[1845158] handler[1845158]
      }
      label handler[1845158]
      val errorExists[2111248]:bool[10] "temp"
      (2111253 'move' errorExists[2111248](2111250 '!=' error[1845141] nil[44]))
      if errorExists[2111248]
      {
        (1845169 call chpl_uncaught_error[170243] error[1845141])
      }
      ref i_x[2268226]:channel(true,dynamic,false)[1060947] "temp"
      (2268230 'move' i_x[2268226](2268228 'set reference' w[1158359]))
      (2268234 call deinit[1536215] i_x[2268226])
      val error[1845177]:__wide_Error[2381123] "error variable" "temp"
      (1845179 'move' error[1845177] nil[44])
      ref tmp[2419115]:__wide_Error[2381123] "temp"
      (2419119 'move' tmp[2419115](2419117 'set reference' error[1845177]))
      (1845183 call close[236024] f[1158331] tmp[2419115])
      val errorExists[2111256]:bool[10] "temp"
      (2111261 'move' errorExists[2111256](2111258 '!=' error[1845177] nil[44]))
      if errorExists[2111256]
      {
        gotoErrorHandling handler[1845194] handler[1845194]
      }
      label handler[1845194]
      val errorExists[2111264]:bool[10] "temp"
      (2111269 'move' errorExists[2111264](2111266 '!=' error[1845177] nil[44]))
      if errorExists[2111264]
      {
        (1845205 call chpl_uncaught_error[170243] error[1845177])
      }
      ref i_x[2328013]:file[235580] "temp"
      (2328017 'move' i_x[2328013](2328015 'set reference' f[1158331]))
      (2328021 call deinit[235891] i_x[2328013])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    val errorExists[2109272]:bool[10] "temp"
    (2109277 'move' errorExists[2109272](2109274 '!=' error[1810814] nil[44]))
    if errorExists[2109272]
    {
      val error[1845213]:__wide_Error[2381123] "error variable" "temp"
      (1845215 'move' error[1845213] nil[44])
      ref tmp[2419122]:__wide_Error[2381123] "temp"
      (2419126 'move' tmp[2419122](2419124 'set reference' error[1845213]))
      (1845219 call close[1062362] w[1158359] tmp[2419122])
      val errorExists[2111272]:bool[10] "temp"
      (2111277 'move' errorExists[2111272](2111274 '!=' error[1845213] nil[44]))
      if errorExists[2111272]
      {
        gotoErrorHandling handler[1845230] handler[1845230]
      }
      label handler[1845230]
      val errorExists[2111280]:bool[10] "temp"
      (2111285 'move' errorExists[2111280](2111282 '!=' error[1845213] nil[44]))
      if errorExists[2111280]
      {
        (1845241 call chpl_uncaught_error[170243] error[1845213])
      }
      ref i_x[2268238]:channel(true,dynamic,false)[1060947] "temp"
      (2268242 'move' i_x[2268238](2268240 'set reference' w[1158359]))
      (2268246 call deinit[1536215] i_x[2268238])
      val error[1845249]:__wide_Error[2381123] "error variable" "temp"
      (1845251 'move' error[1845249] nil[44])
      ref tmp[2419129]:__wide_Error[2381123] "temp"
      (2419133 'move' tmp[2419129](2419131 'set reference' error[1845249]))
      (1845255 call close[236024] f[1158331] tmp[2419129])
      val errorExists[2111288]:bool[10] "temp"
      (2111293 'move' errorExists[2111288](2111290 '!=' error[1845249] nil[44]))
      if errorExists[2111288]
      {
        gotoErrorHandling handler[1845266] handler[1845266]
      }
      label handler[1845266]
      val errorExists[2111296]:bool[10] "temp"
      (2111301 'move' errorExists[2111296](2111298 '!=' error[1845249] nil[44]))
      if errorExists[2111296]
      {
        (1845277 call chpl_uncaught_error[170243] error[1845249])
      }
      ref i_x[2328025]:file[235580] "temp"
      (2328029 'move' i_x[2328025](2328027 'set reference' f[1158331]))
      (2328033 call deinit[235891] i_x[2328025])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val tmp[2269745]:int(32)[95] "dead after last mention" "temp"
    (2269747 'move' tmp[2269745] local_IOHINT_NONE[2378691])
    val errorExists[2109280]:bool[10] "temp"
    (2109285 'move' errorExists[2109280](2109282 '!=' error[1810814] nil[44]))
    if errorExists[2109280]
    {
      val error[1845285]:__wide_Error[2381123] "error variable" "temp"
      (1845287 'move' error[1845285] nil[44])
      ref tmp[2419136]:__wide_Error[2381123] "temp"
      (2419140 'move' tmp[2419136](2419138 'set reference' error[1845285]))
      (1845291 call close[1062362] w[1158359] tmp[2419136])
      val errorExists[2111304]:bool[10] "temp"
      (2111309 'move' errorExists[2111304](2111306 '!=' error[1845285] nil[44]))
      if errorExists[2111304]
      {
        gotoErrorHandling handler[1845302] handler[1845302]
      }
      label handler[1845302]
      val errorExists[2111312]:bool[10] "temp"
      (2111317 'move' errorExists[2111312](2111314 '!=' error[1845285] nil[44]))
      if errorExists[2111312]
      {
        (1845313 call chpl_uncaught_error[170243] error[1845285])
      }
      ref i_x[2268250]:channel(true,dynamic,false)[1060947] "temp"
      (2268254 'move' i_x[2268250](2268252 'set reference' w[1158359]))
      (2268258 call deinit[1536215] i_x[2268250])
      val error[1845321]:__wide_Error[2381123] "error variable" "temp"
      (1845323 'move' error[1845321] nil[44])
      ref tmp[2419143]:__wide_Error[2381123] "temp"
      (2419147 'move' tmp[2419143](2419145 'set reference' error[1845321]))
      (1845327 call close[236024] f[1158331] tmp[2419143])
      val errorExists[2111320]:bool[10] "temp"
      (2111325 'move' errorExists[2111320](2111322 '!=' error[1845321] nil[44]))
      if errorExists[2111320]
      {
        gotoErrorHandling handler[1845338] handler[1845338]
      }
      label handler[1845338]
      val errorExists[2111328]:bool[10] "temp"
      (2111333 'move' errorExists[2111328](2111330 '!=' error[1845321] nil[44]))
      if errorExists[2111328]
      {
        (1845349 call chpl_uncaught_error[170243] error[1845321])
      }
      ref i_x[2328037]:file[235580] "temp"
      (2328041 'move' i_x[2328037](2328039 'set reference' f[1158331]))
      (2328045 call deinit[235891] i_x[2328037])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val default_arg_style[1175707]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2269834]:file[235580] "temp"
    (2269838 'move' i_this[2269834](2269836 'set reference' f[1158331]))
    val ret[2269847]:iostyle[231844] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2269849]:iostyle[231844] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2269851]:__wide_Error[2381123] "error variable" "temp"
    (2269853 'move' error[2269851] nil[44])
    ref tmp[2434893]:__wide_Error[2381123] "temp"
    (2434897 'move' tmp[2434893](2434895 'set reference' error[2269851]))
    (2269856 'move' style[2269849](2269859 call _style[235960] i_this[2269834] tmp[2434893]))
    val errorExists[2269862]:bool[10] "temp"
    (2269864 'move' errorExists[2269862](2269866 '!=' error[2269851] nil[44]))
    if errorExists[2269862]
    {
      (2269871 '=' error[1810814] error[2269851])
      gotoErrorHandlingReturn _endreader_default_style[2269880] _endreader_default_style[2269880]
    }
    (2269877 'move' ret[2269847] style[2269849])
    label _endreader_default_style[2269880]
    (1175713 'move' default_arg_style[1175707] ret[2269847])
    val errorExists[2109288]:bool[10] "temp"
    (2109293 'move' errorExists[2109288](2109290 '!=' error[1810814] nil[44]))
    if errorExists[2109288]
    {
      val error[1845357]:__wide_Error[2381123] "error variable" "temp"
      (1845359 'move' error[1845357] nil[44])
      ref tmp[2419150]:__wide_Error[2381123] "temp"
      (2419154 'move' tmp[2419150](2419152 'set reference' error[1845357]))
      (1845363 call close[1062362] w[1158359] tmp[2419150])
      val errorExists[2111336]:bool[10] "temp"
      (2111341 'move' errorExists[2111336](2111338 '!=' error[1845357] nil[44]))
      if errorExists[2111336]
      {
        gotoErrorHandling handler[1845374] handler[1845374]
      }
      label handler[1845374]
      val errorExists[2111344]:bool[10] "temp"
      (2111349 'move' errorExists[2111344](2111346 '!=' error[1845357] nil[44]))
      if errorExists[2111344]
      {
        (1845385 call chpl_uncaught_error[170243] error[1845357])
      }
      ref i_x[2268262]:channel(true,dynamic,false)[1060947] "temp"
      (2268266 'move' i_x[2268262](2268264 'set reference' w[1158359]))
      (2268270 call deinit[1536215] i_x[2268262])
      val error[1845393]:__wide_Error[2381123] "error variable" "temp"
      (1845395 'move' error[1845393] nil[44])
      ref tmp[2419157]:__wide_Error[2381123] "temp"
      (2419161 'move' tmp[2419157](2419159 'set reference' error[1845393]))
      (1845399 call close[236024] f[1158331] tmp[2419157])
      val errorExists[2111352]:bool[10] "temp"
      (2111357 'move' errorExists[2111352](2111354 '!=' error[1845393] nil[44]))
      if errorExists[2111352]
      {
        gotoErrorHandling handler[1845410] handler[1845410]
      }
      label handler[1845410]
      val errorExists[2111360]:bool[10] "temp"
      (2111365 'move' errorExists[2111360](2111362 '!=' error[1845393] nil[44]))
      if errorExists[2111360]
      {
        (1845421 call chpl_uncaught_error[170243] error[1845393])
      }
      ref i_x[2328049]:file[235580] "temp"
      (2328053 'move' i_x[2328049](2328051 'set reference' f[1158331]))
      (2328057 call deinit[235891] i_x[2328049])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val ret_tmp[1833431]:channel(false,dynamic,false)[1080682] "temp"
    ref tmp[2415817]:__wide_Error[2381123] "temp"
    (2415821 'move' tmp[2415817](2415819 'set reference' error[1810814]))
    (1158437 call reader[1080588] f[1158331] 0 9223372036854775807 tmp[2269745] default_arg_style[1175707] tmp[2415817] ret_tmp[1833431])
    (1833434 'move' call_tmp[1158429] ret_tmp[1833431])
    val errorExists[2109296]:bool[10] "temp"
    (2109301 'move' errorExists[2109296](2109298 '!=' error[1810814] nil[44]))
    if errorExists[2109296]
    {
      val error[1845429]:__wide_Error[2381123] "error variable" "temp"
      (1845431 'move' error[1845429] nil[44])
      ref tmp[2419164]:__wide_Error[2381123] "temp"
      (2419168 'move' tmp[2419164](2419166 'set reference' error[1845429]))
      (1845435 call close[1062362] w[1158359] tmp[2419164])
      val errorExists[2111368]:bool[10] "temp"
      (2111373 'move' errorExists[2111368](2111370 '!=' error[1845429] nil[44]))
      if errorExists[2111368]
      {
        gotoErrorHandling handler[1845446] handler[1845446]
      }
      label handler[1845446]
      val errorExists[2111376]:bool[10] "temp"
      (2111381 'move' errorExists[2111376](2111378 '!=' error[1845429] nil[44]))
      if errorExists[2111376]
      {
        (1845457 call chpl_uncaught_error[170243] error[1845429])
      }
      ref i_x[2268274]:channel(true,dynamic,false)[1060947] "temp"
      (2268278 'move' i_x[2268274](2268276 'set reference' w[1158359]))
      (2268282 call deinit[1536215] i_x[2268274])
      val error[1845465]:__wide_Error[2381123] "error variable" "temp"
      (1845467 'move' error[1845465] nil[44])
      ref tmp[2419171]:__wide_Error[2381123] "temp"
      (2419175 'move' tmp[2419171](2419173 'set reference' error[1845465]))
      (1845471 call close[236024] f[1158331] tmp[2419171])
      val errorExists[2111384]:bool[10] "temp"
      (2111389 'move' errorExists[2111384](2111386 '!=' error[1845465] nil[44]))
      if errorExists[2111384]
      {
        gotoErrorHandling handler[1845482] handler[1845482]
      }
      label handler[1845482]
      val errorExists[2111392]:bool[10] "temp"
      (2111397 'move' errorExists[2111392](2111394 '!=' error[1845465] nil[44]))
      if errorExists[2111392]
      {
        (1845493 call chpl_uncaught_error[170243] error[1845465])
      }
      ref i_x[2328061]:file[235580] "temp"
      (2328065 'move' i_x[2328061](2328063 'set reference' f[1158331]))
      (2328069 call deinit[235891] i_x[2328061])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val r[1158440]:channel(false,dynamic,false)[1080682] "dead at end of block" "insert auto destroy"
    (1158442 'move' r[1158440] call_tmp[1158429])
    ref tmp[2415824]:__wide_Error[2381123] "temp"
    (2415828 'move' tmp[2415824](2415826 'set reference' error[1810814]))
    (1158469 call readBytes[1082839] r[1158440] call_tmp[2269492] call_tmp[1158385] tmp[2415824])
    val errorExists[2109304]:bool[10] "temp"
    (2109309 'move' errorExists[2109304](2109306 '!=' error[1810814] nil[44]))
    if errorExists[2109304]
    {
      val error[1845501]:__wide_Error[2381123] "error variable" "temp"
      (1845503 'move' error[1845501] nil[44])
      ref tmp[2419178]:__wide_Error[2381123] "temp"
      (2419182 'move' tmp[2419178](2419180 'set reference' error[1845501]))
      (1845507 call close[1082094] r[1158440] tmp[2419178])
      val errorExists[2111400]:bool[10] "temp"
      (2111405 'move' errorExists[2111400](2111402 '!=' error[1845501] nil[44]))
      if errorExists[2111400]
      {
        gotoErrorHandling handler[1845518] handler[1845518]
      }
      label handler[1845518]
      val errorExists[2111408]:bool[10] "temp"
      (2111413 'move' errorExists[2111408](2111410 '!=' error[1845501] nil[44]))
      if errorExists[2111408]
      {
        (1845529 call chpl_uncaught_error[170243] error[1845501])
      }
      ref i_x[2331656]:channel(false,dynamic,false)[1080682] "temp"
      (2331660 'move' i_x[2331656](2331658 'set reference' r[1158440]))
      (2331664 call deinit[1540469] i_x[2331656])
      val error[1845537]:__wide_Error[2381123] "error variable" "temp"
      (1845539 'move' error[1845537] nil[44])
      ref tmp[2419185]:__wide_Error[2381123] "temp"
      (2419189 'move' tmp[2419185](2419187 'set reference' error[1845537]))
      (1845543 call close[1062362] w[1158359] tmp[2419185])
      val errorExists[2111416]:bool[10] "temp"
      (2111421 'move' errorExists[2111416](2111418 '!=' error[1845537] nil[44]))
      if errorExists[2111416]
      {
        gotoErrorHandling handler[1845554] handler[1845554]
      }
      label handler[1845554]
      val errorExists[2111424]:bool[10] "temp"
      (2111429 'move' errorExists[2111424](2111426 '!=' error[1845537] nil[44]))
      if errorExists[2111424]
      {
        (1845565 call chpl_uncaught_error[170243] error[1845537])
      }
      ref i_x[2268286]:channel(true,dynamic,false)[1060947] "temp"
      (2268290 'move' i_x[2268286](2268288 'set reference' w[1158359]))
      (2268294 call deinit[1536215] i_x[2268286])
      val error[1845573]:__wide_Error[2381123] "error variable" "temp"
      (1845575 'move' error[1845573] nil[44])
      ref tmp[2419192]:__wide_Error[2381123] "temp"
      (2419196 'move' tmp[2419192](2419194 'set reference' error[1845573]))
      (1845579 call close[236024] f[1158331] tmp[2419192])
      val errorExists[2111432]:bool[10] "temp"
      (2111437 'move' errorExists[2111432](2111434 '!=' error[1845573] nil[44]))
      if errorExists[2111432]
      {
        gotoErrorHandling handler[1845590] handler[1845590]
      }
      label handler[1845590]
      val errorExists[2111440]:bool[10] "temp"
      (2111445 'move' errorExists[2111440](2111442 '!=' error[1845573] nil[44]))
      if errorExists[2111440]
      {
        (1845601 call chpl_uncaught_error[170243] error[1845573])
      }
      ref i_x[2328073]:file[235580] "temp"
      (2328077 'move' i_x[2328073](2328075 'set reference' f[1158331]))
      (2328081 call deinit[235891] i_x[2328073])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    ref call_tmp[2195334]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2195336 'move' call_tmp[2195334](2195338 'array_get' buf[1158423] call_tmp[1158385]))
    const-val coerce_tmp[1175723]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175729 'move' coerce_tmp[1175723](1175725 'cast' uint(8)[100] 0))
    (2195816 '=' call_tmp[2195334] coerce_tmp[1175723])
    const-val ret[2140687]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2140689]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2140691]:__wide_Error[2381123] "error variable" "temp"
    (2140693 'move' error[2140691] nil[44])
    const-val ret_tmp[2140696]:string[26] "temp"
    ref tmp[2426554]:__wide_Error[2381123] "temp"
    (2426558 'move' tmp[2426554](2426556 'set reference' error[2140691]))
    (2140699 call decodeByteBuffer[173892] call_tmp[2269492] call_tmp[1158385] replace[173648] tmp[2426554] ret_tmp[2140696])
    (2140705 'move' call_tmp[2140689] ret_tmp[2140696])
    val errorExists[2140708]:bool[10] "temp"
    (2140710 'move' errorExists[2140708](2140712 '!=' error[2140691] nil[44]))
    if errorExists[2140708]
    {
      (2140717 '=' error[1810814] error[2140691])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2140726] _endcreateStringWithNewBuffer[2140726]
    }
    (2140723 'move' ret[2140687] call_tmp[2140689])
    label _endcreateStringWithNewBuffer[2140726]
    val errorExists[2109312]:bool[10] "temp"
    (2109317 'move' errorExists[2109312](2109314 '!=' error[1810814] nil[44]))
    if errorExists[2109312]
    {
      val error[1845609]:__wide_Error[2381123] "error variable" "temp"
      (1845611 'move' error[1845609] nil[44])
      ref tmp[2419199]:__wide_Error[2381123] "temp"
      (2419203 'move' tmp[2419199](2419201 'set reference' error[1845609]))
      (1845615 call close[1082094] r[1158440] tmp[2419199])
      val errorExists[2111448]:bool[10] "temp"
      (2111453 'move' errorExists[2111448](2111450 '!=' error[1845609] nil[44]))
      if errorExists[2111448]
      {
        gotoErrorHandling handler[1845626] handler[1845626]
      }
      label handler[1845626]
      val errorExists[2111456]:bool[10] "temp"
      (2111461 'move' errorExists[2111456](2111458 '!=' error[1845609] nil[44]))
      if errorExists[2111456]
      {
        (1845637 call chpl_uncaught_error[170243] error[1845609])
      }
      ref i_x[2331668]:channel(false,dynamic,false)[1080682] "temp"
      (2331672 'move' i_x[2331668](2331670 'set reference' r[1158440]))
      (2331676 call deinit[1540469] i_x[2331668])
      val error[1845645]:__wide_Error[2381123] "error variable" "temp"
      (1845647 'move' error[1845645] nil[44])
      ref tmp[2419206]:__wide_Error[2381123] "temp"
      (2419210 'move' tmp[2419206](2419208 'set reference' error[1845645]))
      (1845651 call close[1062362] w[1158359] tmp[2419206])
      val errorExists[2111464]:bool[10] "temp"
      (2111469 'move' errorExists[2111464](2111466 '!=' error[1845645] nil[44]))
      if errorExists[2111464]
      {
        gotoErrorHandling handler[1845662] handler[1845662]
      }
      label handler[1845662]
      val errorExists[2111472]:bool[10] "temp"
      (2111477 'move' errorExists[2111472](2111474 '!=' error[1845645] nil[44]))
      if errorExists[2111472]
      {
        (1845673 call chpl_uncaught_error[170243] error[1845645])
      }
      ref i_x[2268298]:channel(true,dynamic,false)[1060947] "temp"
      (2268302 'move' i_x[2268298](2268300 'set reference' w[1158359]))
      (2268306 call deinit[1536215] i_x[2268298])
      val error[1845681]:__wide_Error[2381123] "error variable" "temp"
      (1845683 'move' error[1845681] nil[44])
      ref tmp[2419213]:__wide_Error[2381123] "temp"
      (2419217 'move' tmp[2419213](2419215 'set reference' error[1845681]))
      (1845687 call close[236024] f[1158331] tmp[2419213])
      val errorExists[2111480]:bool[10] "temp"
      (2111485 'move' errorExists[2111480](2111482 '!=' error[1845681] nil[44]))
      if errorExists[2111480]
      {
        gotoErrorHandling handler[1845698] handler[1845698]
      }
      label handler[1845698]
      val errorExists[2111488]:bool[10] "temp"
      (2111493 'move' errorExists[2111488](2111490 '!=' error[1845681] nil[44]))
      if errorExists[2111488]
      {
        (1845709 call chpl_uncaught_error[170243] error[1845681])
      }
      ref i_x[2328085]:file[235580] "temp"
      (2328089 'move' i_x[2328085](2328087 'set reference' f[1158331]))
      (2328093 call deinit[235891] i_x[2328085])
      gotoErrorHandling handler[1810815] handler[1810815]
    }
    const-val coerce_tmp[1175734]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175740 'move' coerce_tmp[1175734](1175736 'cast' c_void_ptr[149] call_tmp[2269492]))
    (2203420 call chpl_here_free[188081] coerce_tmp[1175734])
    (1175744 'move' ret[1157874] ret[2140687])
    val error[1845717]:__wide_Error[2381123] "error variable" "temp"
    (1845719 'move' error[1845717] nil[44])
    ref tmp[2419220]:__wide_Error[2381123] "temp"
    (2419224 'move' tmp[2419220](2419222 'set reference' error[1845717]))
    (1845723 call close[1082094] r[1158440] tmp[2419220])
    val errorExists[2111496]:bool[10] "temp"
    (2111501 'move' errorExists[2111496](2111498 '!=' error[1845717] nil[44]))
    if errorExists[2111496]
    {
      gotoErrorHandling handler[1845734] handler[1845734]
    }
    label handler[1845734]
    val errorExists[2111504]:bool[10] "temp"
    (2111509 'move' errorExists[2111504](2111506 '!=' error[1845717] nil[44]))
    if errorExists[2111504]
    {
      (1845745 call chpl_uncaught_error[170243] error[1845717])
    }
    ref i_x[2331680]:channel(false,dynamic,false)[1080682] "temp"
    (2331684 'move' i_x[2331680](2331682 'set reference' r[1158440]))
    (2331688 call deinit[1540469] i_x[2331680])
    val error[1845753]:__wide_Error[2381123] "error variable" "temp"
    (1845755 'move' error[1845753] nil[44])
    ref tmp[2419227]:__wide_Error[2381123] "temp"
    (2419231 'move' tmp[2419227](2419229 'set reference' error[1845753]))
    (1845759 call close[1062362] w[1158359] tmp[2419227])
    val errorExists[2111512]:bool[10] "temp"
    (2111517 'move' errorExists[2111512](2111514 '!=' error[1845753] nil[44]))
    if errorExists[2111512]
    {
      gotoErrorHandling handler[1845770] handler[1845770]
    }
    label handler[1845770]
    val errorExists[2111520]:bool[10] "temp"
    (2111525 'move' errorExists[2111520](2111522 '!=' error[1845753] nil[44]))
    if errorExists[2111520]
    {
      (1845781 call chpl_uncaught_error[170243] error[1845753])
    }
    ref i_x[2268310]:channel(true,dynamic,false)[1060947] "temp"
    (2268314 'move' i_x[2268310](2268312 'set reference' w[1158359]))
    (2268318 call deinit[1536215] i_x[2268310])
    val error[1845789]:__wide_Error[2381123] "error variable" "temp"
    (1845791 'move' error[1845789] nil[44])
    ref tmp[2419234]:__wide_Error[2381123] "temp"
    (2419238 'move' tmp[2419234](2419236 'set reference' error[1845789]))
    (1845795 call close[236024] f[1158331] tmp[2419234])
    val errorExists[2111528]:bool[10] "temp"
    (2111533 'move' errorExists[2111528](2111530 '!=' error[1845789] nil[44]))
    if errorExists[2111528]
    {
      gotoErrorHandling handler[1845806] handler[1845806]
    }
    label handler[1845806]
    val errorExists[2111536]:bool[10] "temp"
    (2111541 'move' errorExists[2111536](2111538 '!=' error[1845789] nil[44]))
    if errorExists[2111536]
    {
      (1845817 call chpl_uncaught_error[170243] error[1845789])
    }
    ref i_x[2328097]:file[235580] "temp"
    (2328101 'move' i_x[2328097](2328099 'set reference' f[1158331]))
    (2328105 call deinit[235891] i_x[2328097])
    gotoReturn _end_stringify[1158537] _end_stringify[1158537]
    label handler[1810815]
    val errorExists[2109320]:bool[10] "temp"
    (2109325 'move' errorExists[2109320](2109322 '!=' error[1810814] nil[44]))
    if errorExists[2109320]
    {
      (1811005 call chpl_uncaught_error[170243] error[1810814])
    }
    label _end_stringify[1158537]
    (1834608 '=' _retArg[1834606] ret[1157874])
    (1834610 return _void[55])
  }
  function _local_stringify[2398560](const  ref arg _e0_args[2398562]:string[26], const in arg _e1_args[2398564]:int(64)[13], const  ref arg _e2_args[2398566]:string[26], ref arg _retArg[2398568]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val local__str_literal_3100[2398571]:string[26] "temp"
    (2398573 'move' local__str_literal_3100[2398571] "")
    const-val ret[2398576]:string[26] "dead after last mention" "RVV" "temp"
    val str[2398578]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2398580]:string[26] "temp"
    (2398582 'move' inlineImm[2398580] local__str_literal_3100[2398571])
    ref i_x[2398585]:string[26] "temp"
    (2398587 'move' i_x[2398585](2398589 'set reference' inlineImm[2398580]))
    val ret[2398591]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2398593]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2446553]:string[26] "temp"
    (2446556 'move' tmp[2446553] i_x[2398585])
    (2398596 call _local_init=[2390981] tmp[2398593] tmp[2446553])
    (2398599 'move' ret[2398591] tmp[2398593])
    (2398602 'move' str[2398578] ret[2398591])
    (2398606 call _local_+=[2401507] str[2398578] _e0_args[2398562])
    const-val call_tmp[2398609]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2398611]:string[26] "temp"
    (2398614 call _local__cast[2399762] _e1_args[2398564] ret_tmp[2398611])
    (2398617 'move' call_tmp[2398609] ret_tmp[2398611])
    (2398621 call _local_+=[2401507] str[2398578] call_tmp[2398609])
    ref i_x[2398624]:string[26] "temp"
    (2398626 'move' i_x[2398624](2398628 'set reference' call_tmp[2398609]))
    wide-ref tmp[2446559]:string[26] "temp"
    (2446562 'move' tmp[2446559] i_x[2398624])
    (2398631 call _local_deinit[2391408] tmp[2446559])
    (2398634 call _local_+=[2401507] str[2398578] _e2_args[2398566])
    (2398637 'move' ret[2398576] str[2398578])
    gotoReturn _end_stringify[2398642] _end_stringify[2398642]
    label _end_stringify[2398642]
    (2398644 '=' _retArg[2398568] ret[2398576])
    (2398647 return _void[55])
  }
  function stringify[1272493](const  ref arg _e0_args[1272495]:string[26], const in arg _e1_args[1272497]:int(64)[13], const  ref arg _e2_args[1272499]:string[26], ref arg _retArg[1836870]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2379205]:string[26] "temp"
    (2379206 'move' "" "")
    const-val ret[1272503]:string[26] "dead after last mention" "RVV" "temp"
    val str[1272541]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204613]:string[26] "temp"
    (2204616 'move' inlineImm[2204613] "")
    ref i_x[2204618]:string[26] "temp"
    (2204622 'move' i_x[2204618](2204620 'set reference' inlineImm[2204613]))
    val ret[2204625]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204627]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429971]:string[26] "temp"
    (2429974 'move' tmp[2429971] i_x[2204618])
    (2204630 call init=[30771] tmp[2204627] tmp[2429971])
    (2204633 'move' ret[2204625] tmp[2204627])
    (1272543 'move' str[1272541] ret[2204625])
    (1276264 call +=[38797] str[1272541] _e0_args[1272495])
    const-val call_tmp[1276839]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833191]:string[26] "temp"
    (1276844 call _cast[1063153] _e1_args[1272497] ret_tmp[1833191])
    (1833194 'move' call_tmp[1276839] ret_tmp[1833191])
    (1276848 call +=[38797] str[1272541] call_tmp[1276839])
    ref i_x[2132349]:string[26] "temp"
    (2132353 'move' i_x[2132349](2132351 'set reference' call_tmp[1276839]))
    wide-ref tmp[2425956]:string[26] "temp"
    (2425959 'move' tmp[2425956] i_x[2132349])
    (2132357 call deinit[30831] tmp[2425956])
    (1276954 call +=[38797] str[1272541] _e2_args[1272499])
    (1277439 'move' ret[1272503] str[1272541])
    gotoReturn _end_stringify[1273166] _end_stringify[1273166]
    label _end_stringify[1273166]
    (1836872 '=' _retArg[1836870] ret[1272503])
    (1836876 return _void[55])
  }
  function stringify[1402793](const  ref arg _e0_args[1402795]:string[26], const  ref arg _e1_args[1402797]:string[26], const  ref arg _e2_args[1402799]:string[26], ref arg _retArg[1838356]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2379720]:string[26] "temp"
    (2379721 'move' "" "")
    const-val ret[1402803]:string[26] "dead after last mention" "RVV" "temp"
    val str[1402841]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204713]:string[26] "temp"
    (2204716 'move' inlineImm[2204713] "")
    ref i_x[2204718]:string[26] "temp"
    (2204722 'move' i_x[2204718](2204720 'set reference' inlineImm[2204713]))
    val ret[2204725]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204727]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429995]:string[26] "temp"
    (2429998 'move' tmp[2429995] i_x[2204718])
    (2204730 call init=[30771] tmp[2204727] tmp[2429995])
    (2204733 'move' ret[2204725] tmp[2204727])
    (1402843 'move' str[1402841] ret[2204725])
    (1406574 call +=[38797] str[1402841] _e0_args[1402795])
    (1406919 call +=[38797] str[1402841] _e1_args[1402797])
    (1407264 call +=[38797] str[1402841] _e2_args[1402799])
    (1407669 'move' ret[1402803] str[1402841])
    gotoReturn _end_stringify[1403466] _end_stringify[1403466]
    label _end_stringify[1403466]
    (1838358 '=' _retArg[1838356] ret[1402803])
    (1838362 return _void[55])
  }
  function _local_stringify[2397647](const  ref arg _e0_args[2397649]:string[26], const in arg _e1_args[2397651]:int(64)[13], ref arg _retArg[2397653]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved"
  {
    const-val local__str_literal_3100[2397656]:string[26] "temp"
    (2397658 'move' local__str_literal_3100[2397656] "")
    const-val ret[2397661]:string[26] "dead after last mention" "RVV" "temp"
    val str[2397663]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2397665]:string[26] "temp"
    (2397667 'move' inlineImm[2397665] local__str_literal_3100[2397656])
    ref i_x[2397670]:string[26] "temp"
    (2397672 'move' i_x[2397670](2397674 'set reference' inlineImm[2397665]))
    val ret[2397676]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2397678]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2446498]:string[26] "temp"
    (2446501 'move' tmp[2446498] i_x[2397670])
    (2397681 call _local_init=[2390981] tmp[2397678] tmp[2446498])
    (2397684 'move' ret[2397676] tmp[2397678])
    (2397687 'move' str[2397663] ret[2397676])
    (2397691 call _local_+=[2401507] str[2397663] _e0_args[2397649])
    const-val call_tmp[2397694]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2397696]:string[26] "temp"
    (2397699 call _local__cast[2399762] _e1_args[2397651] ret_tmp[2397696])
    (2397702 'move' call_tmp[2397694] ret_tmp[2397696])
    (2397706 call _local_+=[2401507] str[2397663] call_tmp[2397694])
    ref i_x[2397709]:string[26] "temp"
    (2397711 'move' i_x[2397709](2397713 'set reference' call_tmp[2397694]))
    wide-ref tmp[2446504]:string[26] "temp"
    (2446507 'move' tmp[2446504] i_x[2397709])
    (2397716 call _local_deinit[2391408] tmp[2446504])
    (2397718 'move' ret[2397661] str[2397663])
    gotoReturn _end_stringify[2397723] _end_stringify[2397723]
    label _end_stringify[2397723]
    (2397725 '=' _retArg[2397653] ret[2397661])
    (2397728 return _void[55])
  }
  function stringify[1212978](const  ref arg _e0_args[1212980]:string[26], const in arg _e1_args[1212982]:int(64)[13], ref arg _retArg[1834994]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2378952]:string[26] "temp"
    (2378953 'move' "" "")
    const-val ret[1212986]:string[26] "dead after last mention" "RVV" "temp"
    val str[1213021]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204588]:string[26] "temp"
    (2204591 'move' inlineImm[2204588] "")
    ref i_x[2204593]:string[26] "temp"
    (2204597 'move' i_x[2204593](2204595 'set reference' inlineImm[2204588]))
    val ret[2204600]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204602]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429965]:string[26] "temp"
    (2429968 'move' tmp[2429965] i_x[2204593])
    (2204605 call init=[30771] tmp[2204602] tmp[2429965])
    (2204608 'move' ret[2204600] tmp[2204602])
    (1213023 'move' str[1213021] ret[2204600])
    (1216661 call +=[38797] str[1213021] _e0_args[1212980])
    const-val call_tmp[1217236]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833161]:string[26] "temp"
    (1217241 call _cast[1063153] _e1_args[1212982] ret_tmp[1833161])
    (1833164 'move' call_tmp[1217236] ret_tmp[1833161])
    (1217245 call +=[38797] str[1213021] call_tmp[1217236])
    ref i_x[2132085]:string[26] "temp"
    (2132089 'move' i_x[2132085](2132087 'set reference' call_tmp[1217236]))
    wide-ref tmp[2425938]:string[26] "temp"
    (2425941 'move' tmp[2425938] i_x[2132085])
    (2132093 call deinit[30831] tmp[2425938])
    (1217457 'move' ret[1212986] str[1213021])
    gotoReturn _end_stringify[1213646] _end_stringify[1213646]
    label _end_stringify[1213646]
    (1834996 '=' _retArg[1834994] ret[1212986])
    (1835000 return _void[55])
  }
  function stringify[1278990](const  ref arg _e0_args[1278992]:string[26], const in arg _e1_args[1278994]:int(64)[13], const  ref arg _e2_args[1278996]:string[26], const in arg _e3_args[1278998]:int(64)[13], const  ref arg _e4_args[1279000]:string[26], ref arg _retArg[1836896]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2379223]:string[26] "temp"
    (2379224 'move' "" "")
    const-val ret[1279004]:string[26] "dead after last mention" "RVV" "temp"
    val str[1279048]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204638]:string[26] "temp"
    (2204641 'move' inlineImm[2204638] "")
    ref i_x[2204643]:string[26] "temp"
    (2204647 'move' i_x[2204643](2204645 'set reference' inlineImm[2204638]))
    val ret[2204650]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204652]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429977]:string[26] "temp"
    (2429980 'move' tmp[2429977] i_x[2204643])
    (2204655 call init=[30771] tmp[2204652] tmp[2429977])
    (2204658 'move' ret[2204650] tmp[2204652])
    (1279050 'move' str[1279048] ret[2204650])
    (1283579 call +=[38797] str[1279048] _e0_args[1278992])
    const-val call_tmp[1284154]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833197]:string[26] "temp"
    (1284159 call _cast[1063153] _e1_args[1278994] ret_tmp[1833197])
    (1833200 'move' call_tmp[1284154] ret_tmp[1833197])
    (1284163 call +=[38797] str[1279048] call_tmp[1284154])
    ref i_x[2132385]:string[26] "temp"
    (2132389 'move' i_x[2132385](2132387 'set reference' call_tmp[1284154]))
    wide-ref tmp[2425974]:string[26] "temp"
    (2425977 'move' tmp[2425974] i_x[2132385])
    (2132393 call deinit[30831] tmp[2425974])
    (1284269 call +=[38797] str[1279048] _e2_args[1278996])
    const-val call_tmp[1284844]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833203]:string[26] "temp"
    (1284849 call _cast[1063153] _e3_args[1278998] ret_tmp[1833203])
    (1833206 'move' call_tmp[1284844] ret_tmp[1833203])
    (1284853 call +=[38797] str[1279048] call_tmp[1284844])
    ref i_x[2132397]:string[26] "temp"
    (2132401 'move' i_x[2132397](2132399 'set reference' call_tmp[1284844]))
    wide-ref tmp[2425980]:string[26] "temp"
    (2425983 'move' tmp[2425980] i_x[2132397])
    (2132405 call deinit[30831] tmp[2425980])
    (1284959 call +=[38797] str[1279048] _e4_args[1279000])
    (1285592 'move' ret[1279004] str[1279048])
    gotoReturn _end_stringify[1279673] _end_stringify[1279673]
    label _end_stringify[1279673]
    (1836898 '=' _retArg[1836896] ret[1279004])
    (1836902 return _void[55])
  }
  function stringify[1337788](const  ref arg _e0_args[1337790]:string[26], const  ref arg _e1_args[1337792]:string[26], const in arg _e2_args[1337794]:int(64)[13], const  ref arg _e3_args[1337796]:string[26], const in arg _e4_args[1337798]:range(int(64),bounded,false)[1026814], ref arg _retArg[1837603]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_3100[2379369]:string[26] "temp"
    (2379370 'move' "" "")
    const-val ret[1337802]:string[26] "dead after last mention" "RVV" "temp"
    val str[1337846]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2204688]:string[26] "temp"
    (2204691 'move' inlineImm[2204688] "")
    ref i_x[2204693]:string[26] "temp"
    (2204697 'move' i_x[2204693](2204695 'set reference' inlineImm[2204688]))
    val ret[2204700]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2204702]:string[26] "dead after last mention" "temp"
    wide-ref tmp[2429989]:string[26] "temp"
    (2429992 'move' tmp[2429989] i_x[2204693])
    (2204705 call init=[30771] tmp[2204702] tmp[2429989])
    (2204708 'move' ret[2204700] tmp[2204702])
    (1337848 'move' str[1337846] ret[2204700])
    (1341743 call +=[38797] str[1337846] _e0_args[1337790])
    (1342088 call +=[38797] str[1337846] _e1_args[1337792])
    const-val call_tmp[1342663]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1833209]:string[26] "temp"
    (1342668 call _cast[1063153] _e2_args[1337794] ret_tmp[1833209])
    (1833212 'move' call_tmp[1342663] ret_tmp[1833209])
    (1342672 call +=[38797] str[1337846] call_tmp[1342663])
    ref i_x[2132457]:string[26] "temp"
    (2132461 'move' i_x[2132457](2132459 'set reference' call_tmp[1342663]))
    wide-ref tmp[2426010]:string[26] "temp"
    (2426013 'move' tmp[2426010] i_x[2132457])
    (2132465 call deinit[30831] tmp[2426010])
    (1342778 call +=[38797] str[1337846] _e3_args[1337796])
    const-val call_tmp[1343353]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1834018]:string[26] "temp"
    (1343358 call _cast[1119437] _e4_args[1337798] ret_tmp[1834018])
    (1834021 'move' call_tmp[1343353] ret_tmp[1834018])
    (1343362 call +=[38797] str[1337846] call_tmp[1343353])
    ref i_x[2132469]:string[26] "temp"
    (2132473 'move' i_x[2132469](2132471 'set reference' call_tmp[1343353]))
    wide-ref tmp[2426016]:string[26] "temp"
    (2426019 'move' tmp[2426016] i_x[2132469])
    (2132477 call deinit[30831] tmp[2426016])
    (1343749 'move' ret[1337802] str[1337846])
    gotoReturn _end_stringify[1338471] _end_stringify[1338471]
    label _end_stringify[1338471]
    (1837605 '=' _retArg[1837603] ret[1337802])
    (1837611 return _void[55])
  }
  val _arg_to_proto_names[246561]:__wide_heap__tuple_6_star_string[2381592] "dead at end of block" "insert auto destroy" "private"
  function channel(true,dynamic,true)[1021825].writeln[1392223](const  ref arg this[1392229]:channel(true,dynamic,true)[1021825], const  ref arg _e0_args[1392231]:[domain(1,int(64),false)] real(64)[1365840], ref arg error_out[1812336]:__wide_Error[2381123]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_129[2379568]:string[26] "temp"
    (2379569 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2379562]:locale[28] "temp"
    (2379563 'move' local_nilLocale[2379562] nilLocale[89939])
    val ret[1392235]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1392282]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1392308]:ioNewline[238701] "dead after last mention" "temp"
    (1392311 call init[893669] initTemp[1392308] 0)
    (1392284 'move' call_tmp[1392282] initTemp[1392308])
    val error[1812341]:__wide_Error[2381123] "error variable" "temp"
    (1812343 'move' error[1812341] nil[44])
    ref i__e1_args[2319087]:ioNewline[238701] "temp"
    (2319091 'move' i__e1_args[2319087](2319089 'set reference' call_tmp[1392282]))
    const-val args[2319100]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "insert auto destroy"
    val this_x0[2338891]:[domain(1,int(64),false)] real(64)[1365840]
    (2319104 'move' this_x0[2338891] _e0_args[1392231])
    (2338899 '.=' args[2319100] x0[1392590] this_x0[2338891])
    wide-ref tmp[2442718]:ioNewline[238701] "temp"
    (2442721 'move' tmp[2442718] i__e1_args[2319087])
    (2338903 '.=' args[2319100] x1[1392592] tmp[2442718])
    val ret[2319115]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2319117]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2319119]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319121 'move' call_tmp[2319119](2319123 '.' this[1392229] _readWriteThisFromLocale[1021822]))
    val ret[2319126]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2319128]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2440710]:locale[28] "temp"
    (2440714 'move' tmp[2440710](2440712 'set reference' tmp[2319128]))
    wide-ref tmp[2440717]:locale[28] "temp"
    (2440720 'move' tmp[2440717] call_tmp[2319119])
    (2319131 call init=[90167] tmp[2440710] tmp[2440717])
    (2319134 'move' ret[2319126] tmp[2319128])
    val ret[2319137]:locale[28] "dead at end of block" "insert auto destroy"
    (2319139 'move' ret[2319137] ret[2319126])
    const-val call_tmp[2319142]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319144 'move' call_tmp[2319142](2319147 call ==[782781] ret[2319137] local_nilLocale[2379562]))
    if call_tmp[2319142]
    {
      const-val call_tmp[2319152]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2319154]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2319156]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2319158 'move' call_tmp[2319156](2319161 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2319164 'move' call_tmp[2319154] call_tmp[2319156])
      const-val call_tmp[2319167]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2319169]:locale[28] "temp"
      wide-ref tmp[2440723]:chpl_localeID_t[209294] "temp"
      (2440727 'move' tmp[2440723](2440725 'set reference' call_tmp[2319154]))
      (2319172 call chpl_localeID_to_locale[92849] tmp[2440723] ret_tmp[2319169])
      (2319175 'move' call_tmp[2319167] ret_tmp[2319169])
      (2319178 'move' call_tmp[2319152] call_tmp[2319167])
      wide-ref tmp[2440730]:locale[28] "temp"
      (2440734 'move' tmp[2440730](2440732 'set reference' ret[2319137]))
      wide-ref tmp[2440737]:locale[28] "temp"
      (2440741 'move' tmp[2440737](2440739 'set reference' call_tmp[2319152]))
      (2319182 call =[90631] tmp[2440730] tmp[2440737])
      ref i_x[2319185]:locale[28] "temp"
      (2319187 'move' i_x[2319185](2319189 'set reference' call_tmp[2319152]))
      wide-ref tmp[2440744]:locale[28] "temp"
      (2440747 'move' tmp[2440744] i_x[2319185])
      (2319192 call deinit[90185] tmp[2440744])
    }
    (2319195 'move' ret[2319117] ret[2319137])
    const-val origLocale[2319198]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2319200 'move' origLocale[2319198] ret[2319117])
    ref call_tmp[2319205]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319207 'move' call_tmp[2319205](2319209 '.' this[1392229] home[1021813]))
    const-val call_tmp[2319212]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319214]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319216 'move' coerce_tmp[2319214](2319218 '.v' call_tmp[2319205] _instance[89975]))
    val coerce_tmp[2319221]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319223 'move' coerce_tmp[2319221](2319225 'cast' object[22] coerce_tmp[2319214]))
    const-val call_tmp[2319228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2440750]:__wide_object[2381018] "temp"
    (2440753 'move' tmp[2440750] nil[44])
    (2319230 'move' call_tmp[2319228](2319232 'ptr_eq' coerce_tmp[2319221] tmp[2440750]))
    if call_tmp[2319228]
    {
      (2319238 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319241 'move' call_tmp[2319212](2319243 '_wide_get_locale' coerce_tmp[2319214]))
    val error[2319248]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (2319250 'move' error[2319248] nil[44])
    val rvfDerefTmp[2319253]:channel(true,dynamic,true)[1021825] "temp"
    (2319255 'move' rvfDerefTmp[2319253](2319257 'deref' this[1392229]))
    val isdirect[2319264]:bool[10] "temp"
    (2319266 'move' isdirect[2319264](2319269 call chpl_doDirectExecuteOn[187423] call_tmp[2319212]))
    if isdirect[2319264]
    {
      wide-ref tmp[2440756]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
      (2440760 'move' tmp[2440756](2440758 'set reference' args[2319100]))
      wide-ref tmp[2440763]:__wide_Error[2381123] "temp"
      (2440767 'move' tmp[2440763](2440765 'set reference' error[2319248]))
      (2319274 call on_fn[1392469] rvfDerefTmp[2319253] tmp[2440756] ret[2319117] tmp[2440763])
    }
    {
      val _args_foron_fn[2319280]:_class_localson_fn[2094107] "temp"
      (2319282 'move' _args_foron_fn[2319280](2319284 'stack allocate class' _class_localson_fn[2094107]))
      (2319286 '.=' _args_foron_fn[2319280] _0_tmp[2094110] call_tmp[2319212])
      (2319290 '.=' _args_foron_fn[2319280] _1_rvfDerefTmp[2094112] rvfDerefTmp[2319253])
      ref tmp[2319294]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
      (2319296 'move' tmp[2319294](2319298 'set reference' args[2319100]))
      wide-ref tmp[2440770]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
      (2440773 'move' tmp[2440770] tmp[2319294])
      (2319300 '.=' _args_foron_fn[2319280] _2_args[2094114] tmp[2440770])
      (2319304 '.=' _args_foron_fn[2319280] _3_rvfDerefTmp[2094116] ret[2319117])
      ref tmp[2319308]:__wide_Error[2381123] "temp"
      (2319310 'move' tmp[2319308](2319312 'set reference' error[2319248]))
      wide-ref tmp[2440776]:__wide_Error[2381123] "temp"
      (2440779 'move' tmp[2440776] tmp[2319308])
      (2319314 '.=' _args_foron_fn[2319280] _4_error[2094118] tmp[2440776])
      val _args_vforon_fn[2319318]:c_void_ptr[149] "temp"
      (2319320 'move' _args_vforon_fn[2319318](2319322 'cast_to_void_star' _args_foron_fn[2319280]))
      val _args_sizeon_fn[2319324]:int(64)[13] "temp"
      (2319326 'move' _args_sizeon_fn[2319324](2319328 'sizeof_bundle' _class_localson_fn[2094107]))
      on(2319331 call wrapon_fn[2094171] call_tmp[2319212] _args_vforon_fn[2319318] _args_sizeon_fn[2319324] _args_foron_fn[2319280])
    }
    val errorExists[2319337]:bool[10] "temp"
    (2319339 'move' errorExists[2319337](2319341 '!=' error[2319248] nil[44]))
    if errorExists[2319337]
    {
      (2319346 '=' error[1812341] error[2319248])
      ref i_x[2319349]:locale[28] "temp"
      (2319351 'move' i_x[2319349](2319353 'set reference' origLocale[2319198]))
      wide-ref tmp[2440782]:locale[28] "temp"
      (2440785 'move' tmp[2440782] i_x[2319349])
      (2319356 call deinit[90185] tmp[2440782])
      gotoErrorHandlingReturn _endwrite[2319373] _endwrite[2319373]
    }
    (2319361 'move' ret[2319115] 1)
    ref i_x[2319364]:locale[28] "temp"
    (2319366 'move' i_x[2319364](2319368 'set reference' origLocale[2319198]))
    wide-ref tmp[2440788]:locale[28] "temp"
    (2440791 'move' tmp[2440788] i_x[2319364])
    (2319371 call deinit[90185] tmp[2440788])
    label _endwrite[2319373]
    val errorExists[2110000]:bool[10] "temp"
    (2110005 'move' errorExists[2110000](2110002 '!=' error[1812341] nil[44]))
    if errorExists[2110000]
    {
      (1812347 '=' error_out[1812336] error[1812341])
      gotoErrorHandlingReturn _endwriteln[1812338] _endwriteln[1812338]
    }
    (1432666 'move' ret[1392235] ret[2319115])
    label _endwriteln[1812338]
    (1392304 return ret[1392235])
  }
  function channel(true,dynamic,true)[1021825].writeln[1432955](const  ref arg this[1432961]:channel(true,dynamic,true)[1021825], const in arg _e0_args[1432963]:int(64)[13], ref arg error_out[1813598]:__wide_Error[2381123]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val local__str_literal_129[2379948]:string[26] "temp"
    (2379949 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local_nilLocale[2379942]:locale[28] "temp"
    (2379943 'move' local_nilLocale[2379942] nilLocale[89939])
    val ret[1432967]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1432977]:ioNewline[238701] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1433003]:ioNewline[238701] "dead after last mention" "temp"
    (1433006 call init[893669] initTemp[1433003] 0)
    (1432979 'move' call_tmp[1432977] initTemp[1433003])
    val error[1813603]:__wide_Error[2381123] "error variable" "temp"
    (1813605 'move' error[1813603] nil[44])
    ref i__e1_args[2324524]:ioNewline[238701] "temp"
    (2324528 'move' i__e1_args[2324524](2324526 'set reference' call_tmp[1432977]))
    const-val args[2324537]:(int(64),ioNewline)[1433256] "insert auto destroy"
    (2350747 '.=' args[2324537] x0[1433252] _e0_args[1432963])
    wide-ref tmp[2443090]:ioNewline[238701] "temp"
    (2443093 'move' tmp[2443090] i__e1_args[2324524])
    (2350751 '.=' args[2324537] x1[1433254] tmp[2443090])
    val ret[2324552]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2324554]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2324556]:locale[28] "dead after last mention" "maybe param" "temp"
    (2324558 'move' call_tmp[2324556](2324560 '.' this[1432961] _readWriteThisFromLocale[1021822]))
    val ret[2324563]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2324565]:locale[28] "dead after last mention" "temp"
    wide-ref tmp[2441478]:locale[28] "temp"
    (2441482 'move' tmp[2441478](2441480 'set reference' tmp[2324565]))
    wide-ref tmp[2441485]:locale[28] "temp"
    (2441488 'move' tmp[2441485] call_tmp[2324556])
    (2324568 call init=[90167] tmp[2441478] tmp[2441485])
    (2324571 'move' ret[2324563] tmp[2324565])
    val ret[2324574]:locale[28] "dead at end of block" "insert auto destroy"
    (2324576 'move' ret[2324574] ret[2324563])
    const-val call_tmp[2324579]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2324581 'move' call_tmp[2324579](2324584 call ==[782781] ret[2324574] local_nilLocale[2379942]))
    if call_tmp[2324579]
    {
      const-val call_tmp[2324589]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2324591]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2324593]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2324595 'move' call_tmp[2324593](2324598 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
      (2324601 'move' call_tmp[2324591] call_tmp[2324593])
      const-val call_tmp[2324604]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2324606]:locale[28] "temp"
      wide-ref tmp[2441491]:chpl_localeID_t[209294] "temp"
      (2441495 'move' tmp[2441491](2441493 'set reference' call_tmp[2324591]))
      (2324609 call chpl_localeID_to_locale[92849] tmp[2441491] ret_tmp[2324606])
      (2324612 'move' call_tmp[2324604] ret_tmp[2324606])
      (2324615 'move' call_tmp[2324589] call_tmp[2324604])
      wide-ref tmp[2441498]:locale[28] "temp"
      (2441502 'move' tmp[2441498](2441500 'set reference' ret[2324574]))
      wide-ref tmp[2441505]:locale[28] "temp"
      (2441509 'move' tmp[2441505](2441507 'set reference' call_tmp[2324589]))
      (2324619 call =[90631] tmp[2441498] tmp[2441505])
      ref i_x[2324622]:locale[28] "temp"
      (2324624 'move' i_x[2324622](2324626 'set reference' call_tmp[2324589]))
      wide-ref tmp[2441512]:locale[28] "temp"
      (2441515 'move' tmp[2441512] i_x[2324622])
      (2324629 call deinit[90185] tmp[2441512])
    }
    (2324632 'move' ret[2324554] ret[2324574])
    const-val origLocale[2324635]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2324637 'move' origLocale[2324635] ret[2324554])
    ref call_tmp[2324642]:locale[28] "dead after last mention" "maybe param" "temp"
    (2324644 'move' call_tmp[2324642](2324646 '.' this[1432961] home[1021813]))
    const-val call_tmp[2324649]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2324651]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324653 'move' coerce_tmp[2324651](2324655 '.v' call_tmp[2324642] _instance[89975]))
    val coerce_tmp[2324658]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2324660 'move' coerce_tmp[2324658](2324662 'cast' object[22] coerce_tmp[2324651]))
    const-val call_tmp[2324665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2441518]:__wide_object[2381018] "temp"
    (2441521 'move' tmp[2441518] nil[44])
    (2324667 'move' call_tmp[2324665](2324669 'ptr_eq' coerce_tmp[2324658] tmp[2441518]))
    if call_tmp[2324665]
    {
      (2324675 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2324678 'move' call_tmp[2324649](2324680 '_wide_get_locale' coerce_tmp[2324651]))
    val error[2324685]:__wide_Error[2381123] "concurrently accessed" "error variable" "temp"
    (2324687 'move' error[2324685] nil[44])
    val rvfDerefTmp[2324690]:channel(true,dynamic,true)[1021825] "temp"
    (2324692 'move' rvfDerefTmp[2324690](2324694 'deref' this[1432961]))
    val isdirect[2324701]:bool[10] "temp"
    (2324703 'move' isdirect[2324701](2324706 call chpl_doDirectExecuteOn[187423] call_tmp[2324649]))
    if isdirect[2324701]
    {
      wide-ref tmp[2441524]:(int(64),ioNewline)[1433256] "temp"
      (2441528 'move' tmp[2441524](2441526 'set reference' args[2324537]))
      wide-ref tmp[2441531]:__wide_Error[2381123] "temp"
      (2441535 'move' tmp[2441531](2441533 'set reference' error[2324685]))
      (2324711 call on_fn[1433131] rvfDerefTmp[2324690] tmp[2441524] ret[2324554] tmp[2441531])
    }
    {
      val _args_foron_fn[2324717]:_class_localson_fn[2095274] "temp"
      (2324719 'move' _args_foron_fn[2324717](2324721 'stack allocate class' _class_localson_fn[2095274]))
      (2324723 '.=' _args_foron_fn[2324717] _0_tmp[2095277] call_tmp[2324649])
      (2324727 '.=' _args_foron_fn[2324717] _1_rvfDerefTmp[2095279] rvfDerefTmp[2324690])
      ref tmp[2324731]:(int(64),ioNewline)[1433256] "temp"
      (2324733 'move' tmp[2324731](2324735 'set reference' args[2324537]))
      wide-ref tmp[2441538]:(int(64),ioNewline)[1433256] "temp"
      (2441541 'move' tmp[2441538] tmp[2324731])
      (2324737 '.=' _args_foron_fn[2324717] _2_args[2095281] tmp[2441538])
      (2324741 '.=' _args_foron_fn[2324717] _3_rvfDerefTmp[2095283] ret[2324554])
      ref tmp[2324745]:__wide_Error[2381123] "temp"
      (2324747 'move' tmp[2324745](2324749 'set reference' error[2324685]))
      wide-ref tmp[2441544]:__wide_Error[2381123] "temp"
      (2441547 'move' tmp[2441544] tmp[2324745])
      (2324751 '.=' _args_foron_fn[2324717] _4_error[2095285] tmp[2441544])
      val _args_vforon_fn[2324755]:c_void_ptr[149] "temp"
      (2324757 'move' _args_vforon_fn[2324755](2324759 'cast_to_void_star' _args_foron_fn[2324717]))
      val _args_sizeon_fn[2324761]:int(64)[13] "temp"
      (2324763 'move' _args_sizeon_fn[2324761](2324765 'sizeof_bundle' _class_localson_fn[2095274]))
      on(2324768 call wrapon_fn[2095338] call_tmp[2324649] _args_vforon_fn[2324755] _args_sizeon_fn[2324761] _args_foron_fn[2324717])
    }
    val errorExists[2324774]:bool[10] "temp"
    (2324776 'move' errorExists[2324774](2324778 '!=' error[2324685] nil[44]))
    if errorExists[2324774]
    {
      (2324783 '=' error[1813603] error[2324685])
      ref i_x[2324786]:locale[28] "temp"
      (2324788 'move' i_x[2324786](2324790 'set reference' origLocale[2324635]))
      wide-ref tmp[2441550]:locale[28] "temp"
      (2441553 'move' tmp[2441550] i_x[2324786])
      (2324793 call deinit[90185] tmp[2441550])
      gotoErrorHandlingReturn _endwrite[2324810] _endwrite[2324810]
    }
    (2324798 'move' ret[2324552] 1)
    ref i_x[2324801]:locale[28] "temp"
    (2324803 'move' i_x[2324801](2324805 'set reference' origLocale[2324635]))
    wide-ref tmp[2441556]:locale[28] "temp"
    (2441559 'move' tmp[2441556] i_x[2324801])
    (2324808 call deinit[90185] tmp[2441556])
    label _endwrite[2324810]
    val errorExists[2110568]:bool[10] "temp"
    (2110573 'move' errorExists[2110568](2110570 '!=' error[1813603] nil[44]))
    if errorExists[2110568]
    {
      (1813609 '=' error_out[1813598] error[1813603])
      gotoErrorHandlingReturn _endwriteln[1813600] _endwriteln[1813600]
    }
    (1433823 'move' ret[1432967] ret[2324552])
    label _endwriteln[1813600]
    (1432999 return ret[1432967])
  }
  function channel(true,dynamic,false)[1060947].close[1062362](const  ref arg this[1062368]:channel(true,dynamic,false)[1060947], ref arg error_out[1809834]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_3145[2378127]:string[26] "temp"
    (2378128 'move' "in channel.close" "in channel.close")
    const-val local__str_literal_129[2378120]:string[26] "temp"
    (2378121 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3143[2378114]:string[26] "temp"
    (2378115 'move' "cannot close invalid channel" "cannot close invalid channel")
    val err[1062380]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207365]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207367 'move' call_tmp[2207365](2207370 call qio_int_to_err[223634] 0))
    (1062382 'move' err[1062380] call_tmp[2207365])
    const-val coerce_tmp[1062569]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415250]:qio_channel_ptr_t[231465] "temp"
    (1062573 'move' tmp[2415250](2369294 '.v' this[1062368] _channel_internal[1060940]))
    (2415253 'move' coerce_tmp[1062569] tmp[2415250])
    const-val call_tmp[2263924]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263926 'move' call_tmp[2263924](2263928 'cast' c_void_ptr[149] coerce_tmp[1062569]))
    const-val call_tmp[2263931]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263933 'move' call_tmp[2263931](2263935 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2263938]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263940 'move' call_tmp[2263938](2263942 'ptr_eq' call_tmp[2263924] call_tmp[2263931]))
    if call_tmp[2263938]
    {
      const-val call_tmp[1062411]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062584]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062590 'move' coerce_tmp[1062584](1062586 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832551]:owned SystemError[1000238] "temp"
      (1062419 call fromSyserr[1017113] coerce_tmp[1062584] "cannot close invalid channel" ret_tmp[1832551])
      (1832554 'move' call_tmp[1062411] ret_tmp[1832551])
      val call_tmp[1062422]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062593]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832485]:owned Error[966458] "temp"
      ref i_x[2226288]:owned SystemError[1000238] "temp"
      (2226292 'move' i_x[2226288](2226290 'set reference' call_tmp[1062411]))
      ref i__retArg[2226294]:owned Error[966458] "temp"
      (2226298 'move' i__retArg[2226294](2226296 'set reference' ret_tmp[1832485]))
      val _formal_tmp_x[2226301]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226303 'move' _formal_tmp_x[2226301] i_x[2226288])
      const-val ret[2226306]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226308]:owned SystemError[1000238] "temp"
      (2226310 'move' i_this[2226308](2226312 'set reference' _formal_tmp_x[2226301]))
      val coerce_tmp[2226314]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2431150]:SystemError[264845] "temp"
      (2226316 'move' tmp[2431150](2226318 '.v' i_this[2226308] chpl_p[1000233]))
      (2431153 'move' coerce_tmp[2226314] tmp[2431150])
      val call_tmp[2226321]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226323 'move' call_tmp[2226321](2226325 'cast' Error[167938] coerce_tmp[2226314]))
      ref i_this[2226333]:owned SystemError[1000238] "temp"
      (2226335 'move' i_this[2226333](2226337 'set reference' _formal_tmp_x[2226301]))
      val tmp[2226339]:SystemError[264845] "temp"
      (2226341 'move' tmp[2226339](2226343 'cast' SystemError[264845] nil[44]))
      (2226346 '.=' i_this[2226333] chpl_p[1000233] tmp[2226339])
      val coerce_tmp[2226350]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226352 'move' coerce_tmp[2226350](2226354 'cast' object[22] call_tmp[2226321]))
      const-val call_tmp[2226357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226359 'move' call_tmp[2226357](2226361 'ptr_eq' coerce_tmp[2226350] nil[44]))
      if call_tmp[2226357]
      {
        (2226367 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226370]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226372]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2431156]:__wide_Error[2381123] "temp"
      (2431159 'move' tmp[2431156] call_tmp[2226321])
      (2226375 call init[968094] initTemp[2226372] tmp[2431156])
      (2226378 'move' call_tmp[2226370] initTemp[2226372])
      (2226381 'move' ret[2226306] call_tmp[2226370])
      (2226385 call chpl__autoDestroy[1516200] _formal_tmp_x[2226301])
      (2226389 '=' i__retArg[2226294] ret[2226306])
      (1832488 'move' coerce_tmp[1062593] ret_tmp[1832485])
      const-val _formal_tmp_in_err[1062772]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062776 'move' _formal_tmp_in_err[1062772] coerce_tmp[1062593])
      (1062424 'move' call_tmp[1062422](1062427 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1062772]))
      (1809847 '=' error_out[1809834] call_tmp[1062422])
      gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
    }
    ref call_tmp[2263474]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263476 'move' call_tmp[2263474](2263478 '.' this[1062368] home[1060935]))
    const-val call_tmp[1062442]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165527]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165529 'move' coerce_tmp[2165527](2165531 '.v' call_tmp[2263474] _instance[89975]))
    val coerce_tmp[2165534]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165536 'move' coerce_tmp[2165534](2165538 'cast' object[22] coerce_tmp[2165527]))
    const-val call_tmp[2165541]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428623]:__wide_object[2381018] "temp"
    (2428626 'move' tmp[2428623] nil[44])
    (2165543 'move' call_tmp[2165541](2165545 'ptr_eq' coerce_tmp[2165534] tmp[2428623]))
    if call_tmp[2165541]
    {
      (2165551 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1062444 'move' call_tmp[1062442](1062446 '_wide_get_locale' coerce_tmp[2165527]))
    val rvfDerefTmp[2083738]:channel(true,dynamic,false)[1060947] "temp"
    (2083742 'move' rvfDerefTmp[2083738](2083740 'deref' this[1062368]))
    val isdirect[2089507]:bool[10] "temp"
    (2089512 'move' isdirect[2089507](2089509 call chpl_doDirectExecuteOn[187423] call_tmp[1062442]))
    if isdirect[2089507]
    {
      wide-ref tmp[2422649]:syserr[223584] "temp"
      (2422653 'move' tmp[2422649](2422651 'set reference' err[1062380]))
      (2089516 call on_fn[1062455] rvfDerefTmp[2083738] tmp[2422649])
    }
    {
      val _args_foron_fn[2089534]:_class_localson_fn[2089524] "temp"
      (2089538 'move' _args_foron_fn[2089534](2089536 'stack allocate class' _class_localson_fn[2089524]))
      (2089540 '.=' _args_foron_fn[2089534] _0_tmp[2089527] call_tmp[1062442])
      (2089544 '.=' _args_foron_fn[2089534] _1_rvfDerefTmp[2089529] rvfDerefTmp[2083738])
      ref tmp[2089548]:syserr[223584] "temp"
      (2089552 'move' tmp[2089548](2089550 'set reference' err[1062380]))
      wide-ref tmp[2422656]:syserr[223584] "temp"
      (2422659 'move' tmp[2422656] tmp[2089548])
      (2089554 '.=' _args_foron_fn[2089534] _2_err[2089531] tmp[2422656])
      val _args_vforon_fn[2089558]:c_void_ptr[149] "temp"
      (2089562 'move' _args_vforon_fn[2089558](2089560 'cast_to_void_star' _args_foron_fn[2089534]))
      val _args_sizeon_fn[2089564]:int(64)[13] "temp"
      (2089568 'move' _args_sizeon_fn[2089564](2089566 'sizeof_bundle' _class_localson_fn[2089524]))
      on(2089608 call wrapon_fn[2089570] call_tmp[1062442] _args_vforon_fn[2089558] _args_sizeon_fn[2089564] _args_foron_fn[2089534])
    }
    const-val call_tmp[2206824]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206826 'move' call_tmp[2206824](2206829 call qio_err_iserr[223646] err[1062380]))
    const-val call_tmp[2206831]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206833 'move' call_tmp[2206831](2206835 '!=' call_tmp[2206824] 0))
    if call_tmp[2206831]
    {
      val error[1809851]:__wide_Error[2381123] "error variable" "temp"
      (1809860 'move' error[1809851] nil[44])
      wide-ref tmp[2415237]:channel(true,dynamic,false)[1060947] "temp"
      (2415240 'move' tmp[2415237] this[1062368])
      ref tmp[2415243]:__wide_Error[2381123] "temp"
      (2415247 'move' tmp[2415243](2415245 'set reference' error[1809851]))
      (1062509 call _ch_ioerror[1062865] tmp[2415237] err[1062380] "in channel.close" tmp[2415243])
      val errorExists[2108768]:bool[10] "temp"
      (2108773 'move' errorExists[2108768](2108770 '!=' error[1809851] nil[44]))
      if errorExists[2108768]
      {
        gotoErrorHandling handler[1809852] handler[1809852]
      }
      label handler[1809852]
      val errorExists[2108776]:bool[10] "temp"
      (2108781 'move' errorExists[2108776](2108778 '!=' error[1809851] nil[44]))
      if errorExists[2108776]
      {
        (1809867 '=' error_out[1809834] error[1809851])
        gotoErrorHandlingReturn _endclose[1809836] _endclose[1809836]
      }
    }
    label _endclose[1809836]
    (1062516 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].close[1082094](const  ref arg this[1082100]:channel(false,dynamic,false)[1080682], ref arg error_out[1810630]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    const-val local__str_literal_3145[2378387]:string[26] "temp"
    (2378388 'move' "in channel.close" "in channel.close")
    const-val local__str_literal_129[2378380]:string[26] "temp"
    (2378381 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3143[2378374]:string[26] "temp"
    (2378375 'move' "cannot close invalid channel" "cannot close invalid channel")
    val err[1082112]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2207460]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2207462 'move' call_tmp[2207460](2207465 call qio_int_to_err[223634] 0))
    (1082114 'move' err[1082112] call_tmp[2207460])
    const-val coerce_tmp[1082259]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415485]:qio_channel_ptr_t[231465] "temp"
    (1082263 'move' tmp[2415485](2369457 '.v' this[1082100] _channel_internal[1080675]))
    (2415488 'move' coerce_tmp[1082259] tmp[2415485])
    const-val call_tmp[2263972]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263974 'move' call_tmp[2263972](2263976 'cast' c_void_ptr[149] coerce_tmp[1082259]))
    const-val call_tmp[2263979]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263981 'move' call_tmp[2263979](2263983 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2263986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2263988 'move' call_tmp[2263986](2263990 'ptr_eq' call_tmp[2263972] call_tmp[2263979]))
    if call_tmp[2263986]
    {
      const-val call_tmp[1082143]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082268]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082274 'move' coerce_tmp[1082268](1082270 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[1832563]:owned SystemError[1000238] "temp"
      (1082151 call fromSyserr[1017113] coerce_tmp[1082268] "cannot close invalid channel" ret_tmp[1832563])
      (1832566 'move' call_tmp[1082143] ret_tmp[1832563])
      val call_tmp[1082154]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082277]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1832503]:owned Error[966458] "temp"
      ref i_x[2226606]:owned SystemError[1000238] "temp"
      (2226610 'move' i_x[2226606](2226608 'set reference' call_tmp[1082143]))
      ref i__retArg[2226612]:owned Error[966458] "temp"
      (2226616 'move' i__retArg[2226612](2226614 'set reference' ret_tmp[1832503]))
      val _formal_tmp_x[2226619]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226621 'move' _formal_tmp_x[2226619] i_x[2226606])
      const-val ret[2226624]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2226626]:owned SystemError[1000238] "temp"
      (2226628 'move' i_this[2226626](2226630 'set reference' _formal_tmp_x[2226619]))
      val coerce_tmp[2226632]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2431174]:SystemError[264845] "temp"
      (2226634 'move' tmp[2431174](2226636 '.v' i_this[2226626] chpl_p[1000233]))
      (2431177 'move' coerce_tmp[2226632] tmp[2431174])
      val call_tmp[2226639]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226641 'move' call_tmp[2226639](2226643 'cast' Error[167938] coerce_tmp[2226632]))
      ref i_this[2226651]:owned SystemError[1000238] "temp"
      (2226653 'move' i_this[2226651](2226655 'set reference' _formal_tmp_x[2226619]))
      val tmp[2226657]:SystemError[264845] "temp"
      (2226659 'move' tmp[2226657](2226661 'cast' SystemError[264845] nil[44]))
      (2226664 '.=' i_this[2226651] chpl_p[1000233] tmp[2226657])
      val coerce_tmp[2226668]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226670 'move' coerce_tmp[2226668](2226672 'cast' object[22] call_tmp[2226639]))
      const-val call_tmp[2226675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226677 'move' call_tmp[2226675](2226679 'ptr_eq' coerce_tmp[2226668] nil[44]))
      if call_tmp[2226675]
      {
        (2226685 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2226688]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226690]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2431180]:__wide_Error[2381123] "temp"
      (2431183 'move' tmp[2431180] call_tmp[2226639])
      (2226693 call init[968094] initTemp[2226690] tmp[2431180])
      (2226696 'move' call_tmp[2226688] initTemp[2226690])
      (2226699 'move' ret[2226624] call_tmp[2226688])
      (2226703 call chpl__autoDestroy[1516200] _formal_tmp_x[2226619])
      (2226707 '=' i__retArg[2226612] ret[2226624])
      (1832506 'move' coerce_tmp[1082277] ret_tmp[1832503])
      const-val _formal_tmp_in_err[1082456]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082460 'move' _formal_tmp_in_err[1082456] coerce_tmp[1082277])
      (1082156 'move' call_tmp[1082154](1082159 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1082456]))
      (1810643 '=' error_out[1810630] call_tmp[1082154])
      gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
    }
    ref call_tmp[2269979]:locale[28] "dead after last mention" "maybe param" "temp"
    (2269981 'move' call_tmp[2269979](2269983 '.' this[1082100] home[1080670]))
    const-val call_tmp[1082174]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2165797]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165799 'move' coerce_tmp[2165797](2165801 '.v' call_tmp[2269979] _instance[89975]))
    val coerce_tmp[2165804]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2165806 'move' coerce_tmp[2165804](2165808 'cast' object[22] coerce_tmp[2165797]))
    const-val call_tmp[2165811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2428671]:__wide_object[2381018] "temp"
    (2428674 'move' tmp[2428671] nil[44])
    (2165813 'move' call_tmp[2165811](2165815 'ptr_eq' coerce_tmp[2165804] tmp[2428671]))
    if call_tmp[2165811]
    {
      (2165821 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (1082176 'move' call_tmp[1082174](1082178 '_wide_get_locale' coerce_tmp[2165797]))
    val rvfDerefTmp[2083916]:channel(false,dynamic,false)[1080682] "temp"
    (2083920 'move' rvfDerefTmp[2083916](2083918 'deref' this[1082100]))
    val isdirect[2090728]:bool[10] "temp"
    (2090733 'move' isdirect[2090728](2090730 call chpl_doDirectExecuteOn[187423] call_tmp[1082174]))
    if isdirect[2090728]
    {
      wide-ref tmp[2422905]:syserr[223584] "temp"
      (2422909 'move' tmp[2422905](2422907 'set reference' err[1082112]))
      (2090737 call on_fn[1082187] rvfDerefTmp[2083916] tmp[2422905])
    }
    {
      val _args_foron_fn[2090755]:_class_localson_fn[2090745] "temp"
      (2090759 'move' _args_foron_fn[2090755](2090757 'stack allocate class' _class_localson_fn[2090745]))
      (2090761 '.=' _args_foron_fn[2090755] _0_tmp[2090748] call_tmp[1082174])
      (2090765 '.=' _args_foron_fn[2090755] _1_rvfDerefTmp[2090750] rvfDerefTmp[2083916])
      ref tmp[2090769]:syserr[223584] "temp"
      (2090773 'move' tmp[2090769](2090771 'set reference' err[1082112]))
      wide-ref tmp[2422912]:syserr[223584] "temp"
      (2422915 'move' tmp[2422912] tmp[2090769])
      (2090775 '.=' _args_foron_fn[2090755] _2_err[2090752] tmp[2422912])
      val _args_vforon_fn[2090779]:c_void_ptr[149] "temp"
      (2090783 'move' _args_vforon_fn[2090779](2090781 'cast_to_void_star' _args_foron_fn[2090755]))
      val _args_sizeon_fn[2090785]:int(64)[13] "temp"
      (2090789 'move' _args_sizeon_fn[2090785](2090787 'sizeof_bundle' _class_localson_fn[2090745]))
      on(2090829 call wrapon_fn[2090791] call_tmp[1082174] _args_vforon_fn[2090779] _args_sizeon_fn[2090785] _args_foron_fn[2090755])
    }
    const-val call_tmp[2206892]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206894 'move' call_tmp[2206892](2206897 call qio_err_iserr[223646] err[1082112]))
    const-val call_tmp[2206899]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206901 'move' call_tmp[2206899](2206903 '!=' call_tmp[2206892] 0))
    if call_tmp[2206899]
    {
      val error[1810647]:__wide_Error[2381123] "error variable" "temp"
      (1810656 'move' error[1810647] nil[44])
      ref tmp[2415478]:__wide_Error[2381123] "temp"
      (2415482 'move' tmp[2415478](2415480 'set reference' error[1810647]))
      (1082241 call _ch_ioerror[1082549] this[1082100] err[1082112] "in channel.close" tmp[2415478])
      val errorExists[2109128]:bool[10] "temp"
      (2109133 'move' errorExists[2109128](2109130 '!=' error[1810647] nil[44]))
      if errorExists[2109128]
      {
        gotoErrorHandling handler[1810648] handler[1810648]
      }
      label handler[1810648]
      val errorExists[2109136]:bool[10] "temp"
      (2109141 'move' errorExists[2109136](2109138 '!=' error[1810647] nil[44]))
      if errorExists[2109136]
      {
        (1810663 '=' error_out[1810630] error[1810647])
        gotoErrorHandlingReturn _endclose[1810632] _endclose[1810632]
      }
    }
    label _endclose[1810632]
    (1082248 return _void[55])
  }
  function channel(false,dynamic,false)[1080682].readBytes[1082839](const  ref arg this[1082845]:channel(false,dynamic,false)[1080682], const in arg x[1082847]:c_ptr(uint(8))[937423], const in arg len[1082851]:int(64)[13], ref arg error_out[1810756]:__wide_Error[2381123]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val local__str_literal_3149[2378417]:string[26] "temp"
    (2378418 'move' "in channel.readBytes" "in channel.readBytes")
    const-val local__str_literal_129[2378411]:string[26] "temp"
    (2378412 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3147[2378405]:string[26] "temp"
    (2378406 'move' "bad remote channel.readBytes" "bad remote channel.readBytes")
    const-val call_tmp[1082859]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167819]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2167821]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2167823 'move' call_tmp[2167821](2167826 call chpl_rt_buildLocaleID[209372] chpl_nodeID[208152] c_sublocid_any[89875]))
    (2167829 'move' call_tmp[2167819] call_tmp[2167821])
    const-val call_tmp[2167832]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2167834]:locale[28] "temp"
    wide-ref tmp[2428979]:chpl_localeID_t[209294] "temp"
    (2428983 'move' tmp[2428979](2428981 'set reference' call_tmp[2167819]))
    (2167837 call chpl_localeID_to_locale[92849] tmp[2428979] ret_tmp[2167834])
    (2167840 'move' call_tmp[2167832] ret_tmp[2167834])
    (1830562 'move' call_tmp[1082859] call_tmp[2167832])
    ref call_tmp[2269999]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270001 'move' call_tmp[2269999](2270003 '.' this[1082845] home[1080670]))
    const-val call_tmp[1082873]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082875 'move' call_tmp[1082873](1082878 call !=[782910] call_tmp[1082859] call_tmp[2269999]))
    if call_tmp[1082873]
    {
      const-val call_tmp[1082890]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083047]:IllegalArgumentError[168200] "dead after last mention" "temp"
      (1083049 'move' new_temp[1083047](1083034 call _new[1064107] "bad remote channel.readBytes"))
      const-val initTemp[1083056]:owned IllegalArgumentError[1064558] "dead after last mention" "delay instantiation" "temp"
      (1083059 call init[1064209] initTemp[1083056] new_temp[1083047])
      (1082892 'move' call_tmp[1082890] initTemp[1083056])
      val call_tmp[1082899]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083073]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1833263]:owned Error[966458] "temp"
      ref i_x[2252574]:owned IllegalArgumentError[1064558] "temp"
      (2252578 'move' i_x[2252574](2252576 'set reference' call_tmp[1082890]))
      ref i__retArg[2252580]:owned Error[966458] "temp"
      (2252584 'move' i__retArg[2252580](2252582 'set reference' ret_tmp[1833263]))
      val _formal_tmp_x[2252587]:owned IllegalArgumentError[1064558] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2252589 'move' _formal_tmp_x[2252587] i_x[2252574])
      const-val ret[2252592]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2252594]:owned IllegalArgumentError[1064558] "temp"
      (2252596 'move' i_this[2252594](2252598 'set reference' _formal_tmp_x[2252587]))
      val coerce_tmp[2252600]:IllegalArgumentError[168200] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2432203]:IllegalArgumentError[168200] "temp"
      (2252602 'move' tmp[2432203](2252604 '.v' i_this[2252594] chpl_p[1064553]))
      (2432206 'move' coerce_tmp[2252600] tmp[2432203])
      val call_tmp[2252607]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2252609 'move' call_tmp[2252607](2252611 'cast' Error[167938] coerce_tmp[2252600]))
      ref i_this[2252619]:owned IllegalArgumentError[1064558] "temp"
      (2252621 'move' i_this[2252619](2252623 'set reference' _formal_tmp_x[2252587]))
      val tmp[2252625]:IllegalArgumentError[168200] "temp"
      (2252627 'move' tmp[2252625](2252629 'cast' IllegalArgumentError[168200] nil[44]))
      (2252632 '.=' i_this[2252619] chpl_p[1064553] tmp[2252625])
      val coerce_tmp[2252636]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2252638 'move' coerce_tmp[2252636](2252640 'cast' object[22] call_tmp[2252607]))
      const-val call_tmp[2252643]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2252645 'move' call_tmp[2252643](2252647 'ptr_eq' coerce_tmp[2252636] nil[44]))
      if call_tmp[2252643]
      {
        (2252653 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2252656]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2252658]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2432209]:__wide_Error[2381123] "temp"
      (2432212 'move' tmp[2432209] call_tmp[2252607])
      (2252661 call init[968094] initTemp[2252658] tmp[2432209])
      (2252664 'move' call_tmp[2252656] initTemp[2252658])
      (2252667 'move' ret[2252592] call_tmp[2252656])
      (2252671 call chpl__autoDestroy[1538695] _formal_tmp_x[2252587])
      (2252675 '=' i__retArg[2252580] ret[2252592])
      (1833266 'move' coerce_tmp[1083073] ret_tmp[1833263])
      const-val _formal_tmp_in_err[1083252]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083256 'move' _formal_tmp_in_err[1083252] coerce_tmp[1083073])
      (1082901 'move' call_tmp[1082899](1082904 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[1083252]))
      (1810769 '=' error_out[1810756] call_tmp[1082899])
      ref i_x[2264339]:locale[28] "temp"
      (2264343 'move' i_x[2264339](2264341 'set reference' call_tmp[1082859]))
      wide-ref tmp[2434146]:locale[28] "temp"
      (2434149 'move' tmp[2434146] i_x[2264339])
      (2264347 call deinit[90185] tmp[2434146])
      gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
    }
    ref i_x[2264351]:locale[28] "temp"
    (2264355 'move' i_x[2264351](2264353 'set reference' call_tmp[1082859]))
    wide-ref tmp[2434152]:locale[28] "temp"
    (2434155 'move' tmp[2434152] i_x[2264351])
    (2264359 call deinit[90185] tmp[2434152])
    const-val call_tmp[1082917]:syserr[223584] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083309]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083315 'move' coerce_tmp[1083309](1083311 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083317]:qio_channel_ptr_t[231465] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415517]:qio_channel_ptr_t[231465] "temp"
    (1083321 'move' tmp[2415517](2369497 '.v' this[1082845] _channel_internal[1080675]))
    (2415520 'move' coerce_tmp[1083317] tmp[2415517])
    (1082919 'move' call_tmp[1082917](1082922 call qio_channel_read_amt[1083283] coerce_tmp[1083309] coerce_tmp[1083317] x[1082847] len[1082851]))
    const-val call_tmp[2206909]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206911 'move' call_tmp[2206909](2206914 call qio_err_iserr[223646] call_tmp[1082917]))
    const-val call_tmp[2206916]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206918 'move' call_tmp[2206916](2206920 '!=' call_tmp[2206909] 0))
    if call_tmp[2206916]
    {
      val error[1810773]:__wide_Error[2381123] "error variable" "temp"
      (1810782 'move' error[1810773] nil[44])
      ref tmp[2415510]:__wide_Error[2381123] "temp"
      (2415514 'move' tmp[2415510](2415512 'set reference' error[1810773]))
      (1082947 call _ch_ioerror[1082549] this[1082845] call_tmp[1082917] "in channel.readBytes" tmp[2415510])
      val errorExists[2109184]:bool[10] "temp"
      (2109189 'move' errorExists[2109184](2109186 '!=' error[1810773] nil[44]))
      if errorExists[2109184]
      {
        gotoErrorHandling handler[1810774] handler[1810774]
      }
      label handler[1810774]
      val errorExists[2109192]:bool[10] "temp"
      (2109197 'move' errorExists[2109192](2109194 '!=' error[1810773] nil[44]))
      if errorExists[2109192]
      {
        (1810789 '=' error_out[1810756] error[1810773])
        gotoErrorHandlingReturn _endreadBytes[1810758] _endreadBytes[1810758]
      }
    }
    label _endreadBytes[1810758]
    (1082954 return _void[55])
  }
  const-val stdin[250208]:channel(false,dynamic,true)[985627] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250235]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250264]:channel(true,dynamic,true)[1021825] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250494]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250499]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721866]:6*string[985051] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[723997]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724004]:channel(false,dynamic,true)[985627] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016897]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016961]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017009]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017587]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724009]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724014]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724021]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022472]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022536]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022587]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022624]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724026]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724031]:file[235580] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724038]:channel(true,dynamic,true)[1021825] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023908]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023919]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023930]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023941]:iostyle[231844] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935597](wide-ref arg this[1806914]:file[235580]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[985682]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414817]:qio_file_ptr_t[231439] "temp"
    (985686 'move' tmp[2414817](2367998 '.v' this[1806914] _file_internal[235568]))
    (2414820 'move' coerce_tmp[985682] tmp[2414817])
    (235905 call qio_file_release[232638] coerce_tmp[985682])
    (2368004 '.=' this[1806914] _file_internal[235568] QIO_FILE_PTR_NULL[231442])
    (935604 return _void[55])
  }
  function on_fn[935606](const in arg this[1806916]:file[235580], wide-ref arg ret[1806918]:iostyle[231844], wide-ref arg error_out[1809021]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1809025]:__wide_Error[2381123] "error variable" "temp"
    (1809034 'move' error[1809025] nil[44])
    ref rvfRerefTmp[2083427]:file[235580] "temp"
    (2083431 'move' rvfRerefTmp[2083427](2083428 'set reference' this[1806916]))
    ref tmp[2414292]:__wide_Error[2381123] "temp"
    (2414296 'move' tmp[2414292](2414294 'set reference' error[1809025]))
    (235983 call checkAssumingLocal[235768] rvfRerefTmp[2083427] tmp[2414292])
    val errorExists[2108376]:bool[10] "temp"
    (2108381 'move' errorExists[2108376](2108378 '!=' error[1809025] nil[44]))
    if errorExists[2108376]
    {
      gotoErrorHandling handler[1809026] handler[1809026]
    }
    label handler[1809026]
    val errorExists[2108384]:bool[10] "temp"
    (2108389 'move' errorExists[2108384](2108386 '!=' error[1809025] nil[44]))
    if errorExists[2108384]
    {
      (1809041 '=' error_out[1809021] error[1809025])
      gotoErrorHandlingReturn _endon_fn[1809023] _endon_fn[1809023]
    }
    val local_style[235989]:iostyle[231844] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1017571]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414849]:qio_file_ptr_t[231439] "temp"
    (1017575 'move' tmp[2414849](2368012 '.v' this[1806916] _file_internal[235568]))
    (2414852 'move' coerce_tmp[1017571] tmp[2414849])
    (235997 call qio_file_get_style[232821] coerce_tmp[1017571] local_style[235989])
    ref i__arg2[2216268]:iostyle[231844] "temp"
    (2216272 'move' i__arg2[2216268](2216270 'set reference' local_style[235989]))
    (2216275 '=' ret[1806918] i__arg2[2216268])
    label _endon_fn[1809023]
    (935613 return _void[55])
  }
  function on_fn[935615](const in arg this[1806920]:file[235580], wide-ref arg err[1806922]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-val call_tmp[715686]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060833]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415167]:qio_file_ptr_t[231439] "temp"
    (1060837 'move' tmp[2415167](2368020 '.v' this[1806920] _file_internal[235568]))
    (2415170 'move' coerce_tmp[1060833] tmp[2415167])
    (715689 'move' call_tmp[715686](236065 call qio_file_close[232748] coerce_tmp[1060833]))
    (2207138 '=' err[1806922] call_tmp[715686])
    (935622 return _void[55])
  }
  function on_fn[935633](const in arg this[1806924]:file[235580], wide-ref arg err[1806926]:syserr[223584], wide-ref arg ret[1806928]:string[26], wide-ref arg error_out[1809053]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1809057]:__wide_Error[2381123] "error variable" "temp"
    (1809066 'move' error[1809057] nil[44])
    ref rvfRerefTmp[2083469]:file[235580] "temp"
    (2083473 'move' rvfRerefTmp[2083469](2083470 'set reference' this[1806924]))
    ref tmp[2414306]:__wide_Error[2381123] "temp"
    (2414310 'move' tmp[2414306](2414308 'set reference' error[1809057]))
    (236241 call checkAssumingLocal[235768] rvfRerefTmp[2083469] tmp[2414306])
    val errorExists[2108392]:bool[10] "temp"
    (2108397 'move' errorExists[2108392](2108394 '!=' error[1809057] nil[44]))
    if errorExists[2108392]
    {
      gotoErrorHandling handler[1809058] handler[1809058]
    }
    label handler[1809058]
    val errorExists[2108400]:bool[10] "temp"
    (2108405 'move' errorExists[2108400](2108402 '!=' error[1809057] nil[44]))
    if errorExists[2108400]
    {
      (1809073 '=' error_out[1809053] error[1809057])
      gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
    }
    val tmp[236247]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021467 'move' tmp[236247](1021465 'cast' c_string[19] nil[44]))
    val tmp2[236252]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021472 'move' tmp2[236252](1021470 'cast' c_string[19] nil[44]))
    const-val call_tmp[715772]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019119]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414905]:qio_file_ptr_t[231439] "temp"
    (1019123 'move' tmp[2414905](2368029 '.v' this[1806924] _file_internal[235568]))
    (2414908 'move' coerce_tmp[1019119] tmp[2414905])
    (715775 'move' call_tmp[715772](236261 call qio_file_path[233679] coerce_tmp[1019119] tmp[236247]))
    (2207144 '=' err[1806926] call_tmp[715772])
    const-val tmp[1807636]:syserr[223584] "temp"
    (1807639 'move' tmp[1807636](1807637 'deref' err[1806926]))
    const-val call_tmp[2206535]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206537 'move' call_tmp[2206535](2206540 call qio_err_iserr[223646] tmp[1807636]))
    const-val call_tmp[2206542]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206544 'move' call_tmp[2206542](2206546 '==' call_tmp[2206535] 0))
    if call_tmp[2206542]
    {
      const-val call_tmp[715794]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019132]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      val tmp[2414911]:qio_file_ptr_t[231439] "temp"
      (1019136 'move' tmp[2414911](2368036 '.v' this[1806924] _file_internal[235568]))
      (2414914 'move' coerce_tmp[1019132] tmp[2414911])
      (715797 'move' call_tmp[715794](236274 call qio_shortest_path[233695] coerce_tmp[1019132] tmp2[236252] tmp[236247]))
      (2207150 '=' err[1806926] call_tmp[715794])
    }
    ref i_cs[2120051]:c_string[19] "temp"
    (2120055 'move' i_cs[2120051](2120053 'set reference' tmp[236247]))
    const-val call_tmp[2120058]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120060 'move' call_tmp[2120058](2120062 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2120065]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120067 'move' call_tmp[2120065](2120069 'cast' c_string[19] call_tmp[2120058]))
    const-val coerce_tmp[2120072]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2120074 'move' coerce_tmp[2120072] tmp[236247])
    const-val call_tmp[2120078]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120080 'move' call_tmp[2120078](2120082 'string_compare' coerce_tmp[2120072] call_tmp[2120065]))
    const-val call_tmp[2120085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120087 'move' call_tmp[2120085](2120089 '!=' call_tmp[2120078] 0))
    if call_tmp[2120085]
    {
      (2120095 call chpl_rt_free_c_string[22714] i_cs[2120051])
    }
    const-val tmp[1807642]:syserr[223584] "temp"
    (1807645 'move' tmp[1807642](1807643 'deref' err[1806926]))
    const-val call_tmp[2206552]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206554 'move' call_tmp[2206552](2206557 call qio_err_iserr[223646] tmp[1807642]))
    const-val call_tmp[2206559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206561 'move' call_tmp[2206559](2206563 '==' call_tmp[2206552] 0))
    if call_tmp[2206559]
    {
      const-val call_tmp[715809]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1809086]:Error[167938] "error variable" "temp"
      (1809088 'move' error[1809086] nil[44])
      const-val call_tmp[2203557]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203559 'move' call_tmp[2203557](2203561 'string_length_bytes' tmp2[236252]))
      val errorExists[2108408]:bool[10] "temp"
      (2108413 'move' errorExists[2108408](2108410 '!=' error[1809086] nil[44]))
      if errorExists[2108408]
      {
        val tmp[2448160]:__wide_Error[2381123] "temp"
        (2448162 'move' tmp[2448160] error[1809086])
        (1809092 '=' error_out[1809053] tmp[2448160])
        gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
      }
      val error[1809101]:__wide_Error[2381123] "error variable" "temp"
      (1809103 'move' error[1809101] nil[44])
      const-val ret[2141199]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141201]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141203 'move' call_tmp[2141201](2141205 'cast' c_ptr(uint(8))[937423] tmp2[236252]))
      val error[2141210]:__wide_Error[2381123] "error variable" "temp"
      (2141212 'move' error[2141210] nil[44])
      const-val ret[2141215]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141217]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141219]:__wide_Error[2381123] "error variable" "temp"
      (2141221 'move' error[2141219] nil[44])
      const-val ret_tmp[2141224]:string[26] "temp"
      ref tmp[2426589]:__wide_Error[2381123] "temp"
      (2426593 'move' tmp[2426589](2426591 'set reference' error[2141219]))
      (2141227 call decodeByteBuffer[173892] call_tmp[2141201] call_tmp[2203557] escape[173652] tmp[2426589] ret_tmp[2141224])
      (2141233 'move' call_tmp[2141217] ret_tmp[2141224])
      val errorExists[2141236]:bool[10] "temp"
      (2141238 'move' errorExists[2141236](2141240 '!=' error[2141219] nil[44]))
      if errorExists[2141236]
      {
        (2141245 '=' error[2141210] error[2141219])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141254] _endcreateStringWithNewBuffer[2141254]
      }
      (2141251 'move' ret[2141215] call_tmp[2141217])
      label _endcreateStringWithNewBuffer[2141254]
      val errorExists[2141259]:bool[10] "temp"
      (2141261 'move' errorExists[2141259](2141263 '!=' error[2141210] nil[44]))
      if errorExists[2141259]
      {
        (2141268 '=' error[1809101] error[2141210])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141277] _endcreateStringWithNewBuffer[2141277]
      }
      (2141274 'move' ret[2141199] ret[2141215])
      label _endcreateStringWithNewBuffer[2141277]
      (1829042 'move' call_tmp[715809] ret[2141199])
      val errorExists[2108416]:bool[10] "temp"
      (2108421 'move' errorExists[2108416](2108418 '!=' error[1809101] nil[44]))
      if errorExists[2108416]
      {
        (1809107 '=' error_out[1809053] error[1809101])
        gotoErrorHandlingReturn _endon_fn[1809055] _endon_fn[1809055]
      }
      (236301 call =[38269] ret[1806928] call_tmp[715809])
      ref i_x[2130381]:string[26] "temp"
      (2130385 'move' i_x[2130381](2130383 'set reference' call_tmp[715809]))
      wide-ref tmp[2425302]:string[26] "temp"
      (2425305 'move' tmp[2425302] i_x[2130381])
      (2130389 call deinit[30831] tmp[2425302])
    }
    ref i_cs[2120100]:c_string[19] "temp"
    (2120104 'move' i_cs[2120100](2120102 'set reference' tmp2[236252]))
    const-val call_tmp[2120107]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120109 'move' call_tmp[2120107](2120111 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2120114]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120116 'move' call_tmp[2120114](2120118 'cast' c_string[19] call_tmp[2120107]))
    const-val coerce_tmp[2120121]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2120123 'move' coerce_tmp[2120121] tmp2[236252])
    const-val call_tmp[2120127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120129 'move' call_tmp[2120127](2120131 'string_compare' coerce_tmp[2120121] call_tmp[2120114]))
    const-val call_tmp[2120134]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2120136 'move' call_tmp[2120134](2120138 '!=' call_tmp[2120127] 0))
    if call_tmp[2120134]
    {
      (2120144 call chpl_rt_free_c_string[22714] i_cs[2120100])
    }
    label _endon_fn[1809055]
    (935640 return _void[55])
  }
  function on_fn[1016695](wide-ref arg err[1806936]:syserr[223584], const in arg start[1806938]:int(64)[13], const in arg end[1806940]:int(64)[13], const in arg style[1806942]:iostyle[231844], const in arg this[1806944]:file[235580], wide-ref arg ret[1806946]:channel(false,dynamic,true)[985627], const in arg hints[1806948]:int(32)[95], wide-ref arg error_out[1809224]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1809228]:__wide_Error[2381123] "error variable" "temp"
    (1809237 'move' error[1809228] nil[44])
    ref rvfRerefTmp[2083498]:file[235580] "temp"
    (2083502 'move' rvfRerefTmp[2083498](2083499 'set reference' this[1806944]))
    ref tmp[2414823]:__wide_Error[2381123] "temp"
    (2414827 'move' tmp[2414823](2414825 'set reference' error[1809228]))
    (1016706 call checkAssumingLocal[235768] rvfRerefTmp[2083498] tmp[2414823])
    val errorExists[2108472]:bool[10] "temp"
    (2108477 'move' errorExists[2108472](2108474 '!=' error[1809228] nil[44]))
    if errorExists[2108472]
    {
      gotoErrorHandling handler[1809229] handler[1809229]
    }
    label handler[1809229]
    val errorExists[2108480]:bool[10] "temp"
    (2108485 'move' errorExists[2108480](2108482 '!=' error[1809228] nil[44]))
    if errorExists[2108480]
    {
      (1809244 '=' error_out[1809224] error[1809228])
      gotoErrorHandlingReturn _endon_fn[1809226] _endon_fn[1809226]
    }
    const-val call_tmp[1016708]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1017631]:channel(false,dynamic,true)[985627] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1018430]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2083491]:file[235580] "temp"
    (2083495 'move' rvfRerefTmp[2083491](2083492 'set reference' this[1806944]))
    (1017634 call init[1017647] initTemp[1017631] rvfRerefTmp[2083491] _formal_tmp_out_error[1018430] hints[1806948] start[1806938] end[1806940] style[1806942])
    (2207156 '=' err[1806936] _formal_tmp_out_error[1018430])
    (1016710 'move' call_tmp[1016708] initTemp[1017631])
    (1016724 call =[1018439] ret[1806946] call_tmp[1016708])
    ref i_x[2328964]:channel(false,dynamic,true)[985627] "temp"
    (2328968 'move' i_x[2328964](2328966 'set reference' call_tmp[1016708]))
    (2328972 call deinit[1471060] i_x[2328964])
    label _endon_fn[1809226]
    (1016730 return _void[55])
  }
  function on_fn[1017725](wide-ref arg this[1806950]:channel(false,dynamic,true)[985627], const in arg hints[1806952]:int(32)[95], const in arg local_style[1806954]:iostyle[231844], const in arg end[1806956]:int(64)[13], const in arg start[1806958]:int(64)[13], const in arg f[1806960]:file[235580], wide-ref arg _formal_tmp_error[1806962]:syserr[223584]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2227042]:locale[28] "dead after last mention" "maybe param" "temp"
    (2227044 'move' call_tmp[2227042](2227046 '.' this[1806950] home[985615]))
    ref call_tmp[2216463]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216465 'move' call_tmp[2216463](2216467 '.' f[1806960] home[235562]))
    wide-ref tmp[2414855]:locale[28] "temp"
    (2414858 'move' tmp[2414855] call_tmp[2216463])
    (1017748 call =[90631] call_tmp[2227042] tmp[2414855])
    wide-ref call_tmp[2227136]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2227138 'move' call_tmp[2227136](2227140 '.' this[1806950] _channel_internal[985620]))
    const-val call_tmp[1017833]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018399]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414875]:qio_file_ptr_t[231439] "temp"
    (1018403 'move' tmp[2414875](2368481 '.v' f[1806960] _file_internal[235568]))
    (2414878 'move' coerce_tmp[1018399] tmp[2414875])
    const-val coerce_tmp[1018405]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018411 'move' coerce_tmp[1018405](1018407 'cast' int(32)[95] 1))
    const-val coerce_tmp[1018413]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018419 'move' coerce_tmp[1018413](1018415 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2083511]:iostyle[231844] "temp"
    (2083515 'move' rvfRerefTmp[2083511](2083512 'set reference' local_style[1806954]))
    ref tmp[2384146]:qio_channel_ptr_t[231465] "temp"
    (2384152 'local_check' call_tmp[2227136] c"references to remote data cannot be passed to external routines like 'qio_channel_create'")
    (2384154 'move' tmp[2384146] call_tmp[2227136])
    (1017835 'move' call_tmp[1017833](1017838 call qio_channel_create[232878] tmp[2384146] coerce_tmp[1018399] hints[1806952] coerce_tmp[1018405] coerce_tmp[1018413] start[1806958] end[1806956] rvfRerefTmp[2083511]))
    (2384157 'move' call_tmp[2227136] tmp[2384146])
    (2207162 '=' _formal_tmp_error[1806962] call_tmp[1017833])
    (1017851 return _void[55])
  }
  function on_fn[1018665](const in arg rhs[1806964]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019055]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414887]:qio_channel_ptr_t[231465] "temp"
    (1019059 'move' tmp[2414887](2368520 '.v' rhs[1806964] _channel_internal[985620]))
    (2414890 'move' coerce_tmp[1019055] tmp[2414887])
    (1018680 call qio_channel_retain[232951] coerce_tmp[1019055])
    (1018682 return _void[55])
  }
  function on_fn[1018709](const  wide-ref arg lhs[1806966]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019074]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2414893]:qio_channel_ptr_t[231465] "temp"
    (1019078 'move' tmp[2414893](2368527 '.v' lhs[1806966] _channel_internal[985620]))
    (2414896 'move' coerce_tmp[1019074] tmp[2414893])
    (1018724 call qio_channel_release[232961] coerce_tmp[1019074])
    (1018726 return _void[55])
  }
  function on_fn[1022270](const in arg end[1806972]:int(64)[13], const in arg style[1806974]:iostyle[231844], const in arg this[1806976]:file[235580], wide-ref arg ret[1806978]:channel(true,dynamic,true)[1021825], const in arg hints[1806980]:int(32)[95], const in arg start[1806982]:int(64)[13], wide-ref arg err[1806984]:syserr[223584], wide-ref arg error_out[1809340]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1809344]:__wide_Error[2381123] "error variable" "temp"
    (1809353 'move' error[1809344] nil[44])
    ref rvfRerefTmp[2083575]:file[235580] "temp"
    (2083579 'move' rvfRerefTmp[2083575](2083576 'set reference' this[1806976]))
    ref tmp[2415019]:__wide_Error[2381123] "temp"
    (2415023 'move' tmp[2415019](2415021 'set reference' error[1809344]))
    (1022281 call checkAssumingLocal[235768] rvfRerefTmp[2083575] tmp[2415019])
    val errorExists[2108520]:bool[10] "temp"
    (2108525 'move' errorExists[2108520](2108522 '!=' error[1809344] nil[44]))
    if errorExists[2108520]
    {
      gotoErrorHandling handler[1809345] handler[1809345]
    }
    label handler[1809345]
    val errorExists[2108528]:bool[10] "temp"
    (2108533 'move' errorExists[2108528](2108530 '!=' error[1809344] nil[44]))
    if errorExists[2108528]
    {
      (1809360 '=' error_out[1809340] error[1809344])
      gotoErrorHandlingReturn _endon_fn[1809342] _endon_fn[1809342]
    }
    const-val call_tmp[1022283]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1022667]:channel(true,dynamic,true)[1021825] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1023138]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2083568]:file[235580] "temp"
    (2083572 'move' rvfRerefTmp[2083568](2083569 'set reference' this[1806976]))
    (1022670 call init[1022683] initTemp[1022667] rvfRerefTmp[2083568] _formal_tmp_out_error[1023138] hints[1806980] start[1806982] end[1806972] style[1806974])
    (2207168 '=' err[1806984] _formal_tmp_out_error[1023138])
    (1022285 'move' call_tmp[1022283] initTemp[1022667])
    (1022299 call =[1023147] ret[1806978] call_tmp[1022283])
    ref i_x[2331407]:channel(true,dynamic,true)[1021825] "temp"
    (2331411 'move' i_x[2331407](2331409 'set reference' call_tmp[1022283]))
    (2331415 call deinit[1534039] i_x[2331407])
    label _endon_fn[1809342]
    (1022305 return _void[55])
  }
  function on_fn[1022761](const in arg f[1806986]:file[235580], wide-ref arg _formal_tmp_error[1806988]:syserr[223584], const in arg end[1806990]:int(64)[13], wide-ref arg this[1806992]:channel(true,dynamic,true)[1021825], const in arg hints[1806994]:int(32)[95], const in arg local_style[1806996]:iostyle[231844], const in arg start[1806998]:int(64)[13]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2228133]:locale[28] "dead after last mention" "maybe param" "temp"
    (2228135 'move' call_tmp[2228133](2228137 '.' this[1806992] home[1021813]))
    ref call_tmp[2216473]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216475 'move' call_tmp[2216473](2216477 '.' f[1806986] home[235562]))
    wide-ref tmp[2415033]:locale[28] "temp"
    (2415036 'move' tmp[2415033] call_tmp[2216473])
    (1022784 call =[90631] call_tmp[2228133] tmp[2415033])
    wide-ref call_tmp[2228207]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2228209 'move' call_tmp[2228207](2228211 '.' this[1806992] _channel_internal[1021818]))
    const-val call_tmp[1022869]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1023107]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415053]:qio_file_ptr_t[231439] "temp"
    (1023111 'move' tmp[2415053](2368756 '.v' f[1806986] _file_internal[235568]))
    (2415056 'move' coerce_tmp[1023107] tmp[2415053])
    const-val coerce_tmp[1023113]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023119 'move' coerce_tmp[1023113](1023115 'cast' int(32)[95] 0))
    const-val coerce_tmp[1023121]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023127 'move' coerce_tmp[1023121](1023123 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2083609]:iostyle[231844] "temp"
    (2083613 'move' rvfRerefTmp[2083609](2083610 'set reference' local_style[1806996]))
    ref tmp[2384160]:qio_channel_ptr_t[231465] "temp"
    (2384164 'local_check' call_tmp[2228207] c"references to remote data cannot be passed to external routines like 'qio_channel_create'")
    (2384166 'move' tmp[2384160] call_tmp[2228207])
    (1022871 'move' call_tmp[1022869](1022874 call qio_channel_create[232878] tmp[2384160] coerce_tmp[1023107] hints[1806994] coerce_tmp[1023113] coerce_tmp[1023121] start[1806998] end[1806990] rvfRerefTmp[2083609]))
    (2384169 'move' call_tmp[2228207] tmp[2384160])
    (2207174 '=' _formal_tmp_error[1806988] call_tmp[1022869])
    (1022887 return _void[55])
  }
  function on_fn[1023373](const in arg rhs[1807000]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023763]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415065]:qio_channel_ptr_t[231465] "temp"
    (1023767 'move' tmp[2415065](2368795 '.v' rhs[1807000] _channel_internal[1021818]))
    (2415068 'move' coerce_tmp[1023763] tmp[2415065])
    (1023388 call qio_channel_retain[232951] coerce_tmp[1023763])
    (1023390 return _void[55])
  }
  function on_fn[1023417](const  wide-ref arg lhs[1807002]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023782]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415071]:qio_channel_ptr_t[231465] "temp"
    (1023786 'move' tmp[2415071](2368802 '.v' lhs[1807002] _channel_internal[1021818]))
    (2415074 'move' coerce_tmp[1023782] tmp[2415071])
    (1023432 call qio_channel_release[232961] coerce_tmp[1023782])
    (1023434 return _void[55])
  }
  function on_fn[1061022](const in arg start[1807016]:int(64)[13], wide-ref arg ret[1807018]:channel(true,dynamic,false)[1060947], const in arg end[1807020]:int(64)[13], const in arg style[1807022]:iostyle[231844], const in arg this[1807024]:file[235580], wide-ref arg err[1807026]:syserr[223584], const in arg hints[1807028]:int(32)[95], wide-ref arg error_out[1809771]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1809775]:__wide_Error[2381123] "error variable" "temp"
    (1809784 'move' error[1809775] nil[44])
    ref rvfRerefTmp[2083683]:file[235580] "temp"
    (2083687 'move' rvfRerefTmp[2083683](2083684 'set reference' this[1807024]))
    ref tmp[2415173]:__wide_Error[2381123] "temp"
    (2415177 'move' tmp[2415173](2415175 'set reference' error[1809775]))
    (1061033 call checkAssumingLocal[235768] rvfRerefTmp[2083683] tmp[2415173])
    val errorExists[2108744]:bool[10] "temp"
    (2108749 'move' errorExists[2108744](2108746 '!=' error[1809775] nil[44]))
    if errorExists[2108744]
    {
      gotoErrorHandling handler[1809776] handler[1809776]
    }
    label handler[1809776]
    val errorExists[2108752]:bool[10] "temp"
    (2108757 'move' errorExists[2108752](2108754 '!=' error[1809775] nil[44]))
    if errorExists[2108752]
    {
      (1809791 '=' error_out[1809771] error[1809775])
      gotoErrorHandlingReturn _endon_fn[1809773] _endon_fn[1809773]
    }
    const-val call_tmp[1061035]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1061380]:channel(true,dynamic,false)[1060947] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1061851]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2083676]:file[235580] "temp"
    (2083680 'move' rvfRerefTmp[2083676](2083677 'set reference' this[1807024]))
    (1061383 call init[1061396] initTemp[1061380] rvfRerefTmp[2083676] _formal_tmp_out_error[1061851] hints[1807028] start[1807016] end[1807020] style[1807022])
    (2207180 '=' err[1807026] _formal_tmp_out_error[1061851])
    (1061037 'move' call_tmp[1061035] initTemp[1061380])
    (1061051 call =[1061860] ret[1807018] call_tmp[1061035])
    ref i_x[2268178]:channel(true,dynamic,false)[1060947] "temp"
    (2268182 'move' i_x[2268178](2268180 'set reference' call_tmp[1061035]))
    (2268186 call deinit[1536215] i_x[2268178])
    label _endon_fn[1809773]
    (1061057 return _void[55])
  }
  function on_fn[1061474](wide-ref arg _formal_tmp_error[1807030]:syserr[223584], const in arg end[1807032]:int(64)[13], const in arg hints[1807034]:int(32)[95], const in arg local_style[1807036]:iostyle[231844], wide-ref arg this[1807038]:channel(true,dynamic,false)[1060947], const in arg start[1807040]:int(64)[13], const in arg f[1807042]:file[235580]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2263604]:locale[28] "dead after last mention" "maybe param" "temp"
    (2263606 'move' call_tmp[2263604](2263608 '.' this[1807038] home[1060935]))
    ref call_tmp[2216483]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216485 'move' call_tmp[2216483](2216487 '.' f[1807042] home[235562]))
    wide-ref tmp[2415187]:locale[28] "temp"
    (2415190 'move' tmp[2415187] call_tmp[2216483])
    (1061497 call =[90631] call_tmp[2263604] tmp[2415187])
    wide-ref call_tmp[2263718]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2263720 'move' call_tmp[2263718](2263722 '.' this[1807038] _channel_internal[1060940]))
    const-val call_tmp[1061582]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1061820]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415207]:qio_file_ptr_t[231439] "temp"
    (1061824 'move' tmp[2415207](2369239 '.v' f[1807042] _file_internal[235568]))
    (2415210 'move' coerce_tmp[1061820] tmp[2415207])
    const-val coerce_tmp[1061826]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061832 'move' coerce_tmp[1061826](1061828 'cast' int(32)[95] 0))
    const-val coerce_tmp[1061834]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061840 'move' coerce_tmp[1061834](1061836 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2083696]:iostyle[231844] "temp"
    (2083700 'move' rvfRerefTmp[2083696](2083697 'set reference' local_style[1807036]))
    ref tmp[2384172]:qio_channel_ptr_t[231465] "temp"
    (2384176 'local_check' call_tmp[2263718] c"references to remote data cannot be passed to external routines like 'qio_channel_create'")
    (2384178 'move' tmp[2384172] call_tmp[2263718])
    (1061584 'move' call_tmp[1061582](1061587 call qio_channel_create[232878] tmp[2384172] coerce_tmp[1061820] hints[1807034] coerce_tmp[1061826] coerce_tmp[1061834] start[1807040] end[1807032] rvfRerefTmp[2083696]))
    (2384181 'move' call_tmp[2263718] tmp[2384172])
    (2207186 '=' _formal_tmp_error[1807030] call_tmp[1061582])
    (1061600 return _void[55])
  }
  function on_fn[1062086](const in arg rhs[1807044]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415219]:qio_channel_ptr_t[231465] "temp"
    (1062289 'move' tmp[2415219](2369278 '.v' rhs[1807044] _channel_internal[1060940]))
    (2415222 'move' coerce_tmp[1062285] tmp[2415219])
    (1062101 call qio_channel_retain[232951] coerce_tmp[1062285])
    (1062103 return _void[55])
  }
  function on_fn[1062130](const  wide-ref arg lhs[1807046]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062304]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415225]:qio_channel_ptr_t[231465] "temp"
    (1062308 'move' tmp[2415225](2369285 '.v' lhs[1807046] _channel_internal[1060940]))
    (2415228 'move' coerce_tmp[1062304] tmp[2415225])
    (1062145 call qio_channel_release[232961] coerce_tmp[1062304])
    (1062147 return _void[55])
  }
  function on_fn[1062455](const in arg this[1807048]:channel(true,dynamic,false)[1060947], wide-ref arg err[1807050]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1062477]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062848]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062854 'move' coerce_tmp[1062848](1062850 'cast' int(32)[95] 0))
    const-val coerce_tmp[1062856]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415256]:qio_channel_ptr_t[231465] "temp"
    (1062860 'move' tmp[2415256](2369305 '.v' this[1807048] _channel_internal[1060940]))
    (2415259 'move' coerce_tmp[1062856] tmp[2415256])
    (1062479 'move' call_tmp[1062477](1062482 call qio_channel_close[233140] coerce_tmp[1062848] coerce_tmp[1062856]))
    (2207192 '=' err[1807050] call_tmp[1062477])
    (1062491 return _void[55])
  }
  function on_fn[1062932](const  wide-ref arg this[1807052]:channel(true,dynamic,false)[1060947], wide-ref arg path[1807054]:string[26], wide-ref arg offset[1807056]:int(64)[13], wide-ref arg error_out[1809926]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1062938]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063140 'move' tmp_path[1062938](1063138 'cast' c_string[19] nil[44]))
    val tmp_offset[1062944]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063143 'move' tmp_offset[1062944] 0)
    (2207902 call qio_int_to_err[223634] 0)
    const-val call_tmp[1062986]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063095]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063101 'move' coerce_tmp[1063095](1063097 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063103]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415269]:qio_channel_ptr_t[231465] "temp"
    (1063107 'move' tmp[2415269](2369317 '.v' this[1807052] _channel_internal[1060940]))
    (2415272 'move' coerce_tmp[1063103] tmp[2415269])
    (1062988 'move' call_tmp[1062986](1062991 call qio_channel_path_offset[232924] coerce_tmp[1063095] coerce_tmp[1063103] tmp_path[1062938] tmp_offset[1062944]))
    const-val call_tmp[2206569]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206571 'move' call_tmp[2206569](2206574 call qio_err_iserr[223646] call_tmp[1062986]))
    const-val call_tmp[2206576]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206578 'move' call_tmp[2206576](2206580 '==' call_tmp[2206569] 0))
    if call_tmp[2206576]
    {
      const-val call_tmp[1063020]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1809931]:Error[167938] "error variable" "temp"
      (1809933 'move' error[1809931] nil[44])
      const-val call_tmp[2203579]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203581 'move' call_tmp[2203579](2203583 'string_length_bytes' tmp_path[1062938]))
      val errorExists[2108808]:bool[10] "temp"
      (2108813 'move' errorExists[2108808](2108810 '!=' error[1809931] nil[44]))
      if errorExists[2108808]
      {
        val tmp[2448165]:__wide_Error[2381123] "temp"
        (2448167 'move' tmp[2448165] error[1809931])
        (1809937 '=' error_out[1809926] tmp[2448165])
        gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
      }
      val error[1809946]:__wide_Error[2381123] "error variable" "temp"
      (1809948 'move' error[1809946] nil[44])
      const-val ret[2141689]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141691]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141693 'move' call_tmp[2141691](2141695 'cast' c_ptr(uint(8))[937423] tmp_path[1062938]))
      val error[2141700]:__wide_Error[2381123] "error variable" "temp"
      (2141702 'move' error[2141700] nil[44])
      const-val ret[2141705]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141707]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141709]:__wide_Error[2381123] "error variable" "temp"
      (2141711 'move' error[2141709] nil[44])
      const-val ret_tmp[2141714]:string[26] "temp"
      ref tmp[2426624]:__wide_Error[2381123] "temp"
      (2426628 'move' tmp[2426624](2426626 'set reference' error[2141709]))
      (2141717 call decodeByteBuffer[173892] call_tmp[2141691] call_tmp[2203579] replace[173648] tmp[2426624] ret_tmp[2141714])
      (2141723 'move' call_tmp[2141707] ret_tmp[2141714])
      val errorExists[2141726]:bool[10] "temp"
      (2141728 'move' errorExists[2141726](2141730 '!=' error[2141709] nil[44]))
      if errorExists[2141726]
      {
        (2141735 '=' error[2141700] error[2141709])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141744] _endcreateStringWithNewBuffer[2141744]
      }
      (2141741 'move' ret[2141705] call_tmp[2141707])
      label _endcreateStringWithNewBuffer[2141744]
      val errorExists[2141749]:bool[10] "temp"
      (2141751 'move' errorExists[2141749](2141753 '!=' error[2141700] nil[44]))
      if errorExists[2141749]
      {
        (2141758 '=' error[1809946] error[2141700])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141767] _endcreateStringWithNewBuffer[2141767]
      }
      (2141764 'move' ret[2141689] ret[2141705])
      label _endcreateStringWithNewBuffer[2141767]
      (1829072 'move' call_tmp[1063020] ret[2141689])
      val errorExists[2108816]:bool[10] "temp"
      (2108821 'move' errorExists[2108816](2108818 '!=' error[1809946] nil[44]))
      if errorExists[2108816]
      {
        (1809952 '=' error_out[1809926] error[1809946])
        gotoErrorHandlingReturn _endon_fn[1809928] _endon_fn[1809928]
      }
      (1063030 call =[38269] path[1807054] call_tmp[1063020])
      ref i_x[2130909]:string[26] "temp"
      (2130913 'move' i_x[2130909](2130911 'set reference' call_tmp[1063020]))
      wide-ref tmp[2425434]:string[26] "temp"
      (2425437 'move' tmp[2425434] i_x[2130909])
      (2130917 call deinit[30831] tmp[2425434])
      ref i_cs[2120149]:c_string[19] "temp"
      (2120153 'move' i_cs[2120149](2120151 'set reference' tmp_path[1062938]))
      const-val call_tmp[2120156]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120158 'move' call_tmp[2120156](2120160 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120163]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120165 'move' call_tmp[2120163](2120167 'cast' c_string[19] call_tmp[2120156]))
      const-val coerce_tmp[2120170]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120172 'move' coerce_tmp[2120170] tmp_path[1062938])
      const-val call_tmp[2120176]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120178 'move' call_tmp[2120176](2120180 'string_compare' coerce_tmp[2120170] call_tmp[2120163]))
      const-val call_tmp[2120183]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120185 'move' call_tmp[2120183](2120187 '!=' call_tmp[2120176] 0))
      if call_tmp[2120183]
      {
        (2120193 call chpl_rt_free_c_string[22714] i_cs[2120149])
      }
      (2122230 '=' offset[1807056] tmp_offset[1062944])
    }
    label _endon_fn[1809928]
    (1063049 return _void[55])
  }
  function on_fn[1066089](const in arg this[1807058]:channel(true,dynamic,false)[1060947], const  wide-ref arg args[1807060]:1*byteIndex[1057081], const in arg origLocale[1807062]:locale[28], wide-ref arg error_out[1810011]:__wide_Error[2381123]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3017[2378175]:string[26] "temp"
    (2378176 'move' "in lock" "in lock")
    const-val local__str_literal_129[2378169]:string[26] "temp"
    (2378170 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2378163]:string[26] "temp"
    (2378164 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1810015]:__wide_Error[2381123] "error variable" "temp"
    (1810024 'move' error[1810015] nil[44])
    ref rvfRerefTmp[2083759]:channel(true,dynamic,false)[1060947] "temp"
    (2083763 'move' rvfRerefTmp[2083759](2083760 'set reference' this[1807058]))
    const-val call_tmp[2265958]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265960 'move' call_tmp[2265958](2265963 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2265968]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434608]:qio_channel_ptr_t[231465] "temp"
    (2265970 'move' tmp[2434608](2265972 '.v' this[1807058] _channel_internal[1060940]))
    (2434611 'move' coerce_tmp[2265968] tmp[2434608])
    const-val call_tmp[2265975]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265977 'move' call_tmp[2265975](2265979 'cast' c_void_ptr[149] coerce_tmp[2265968]))
    const-val call_tmp[2265982]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265984 'move' call_tmp[2265982](2265986 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2265989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265991 'move' call_tmp[2265989](2265993 'ptr_eq' call_tmp[2265975] call_tmp[2265982]))
    if call_tmp[2265989]
    {
      const-val call_tmp[2265998]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266000]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266002 'move' coerce_tmp[2266000](2266004 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266007]:owned SystemError[1000238] "temp"
      (2266010 call fromSyserr[1017113] coerce_tmp[2266000] "Operation attempted on an invalid channel" ret_tmp[2266007])
      (2266014 'move' call_tmp[2265998] ret_tmp[2266007])
      val call_tmp[2266017]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266019]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266021]:owned Error[966458] "temp"
      ref i_x[2266023]:owned SystemError[1000238] "temp"
      (2266025 'move' i_x[2266023](2266027 'set reference' call_tmp[2265998]))
      ref i__retArg[2266029]:owned Error[966458] "temp"
      (2266031 'move' i__retArg[2266029](2266033 'set reference' ret_tmp[2266021]))
      val _formal_tmp_x[2266035]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266037 'move' _formal_tmp_x[2266035] i_x[2266023])
      const-val ret[2266040]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266042]:owned SystemError[1000238] "temp"
      (2266044 'move' i_this[2266042](2266046 'set reference' _formal_tmp_x[2266035]))
      val coerce_tmp[2266048]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434614]:SystemError[264845] "temp"
      (2266050 'move' tmp[2434614](2266052 '.v' i_this[2266042] chpl_p[1000233]))
      (2434617 'move' coerce_tmp[2266048] tmp[2434614])
      val call_tmp[2266055]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266057 'move' call_tmp[2266055](2266059 'cast' Error[167938] coerce_tmp[2266048]))
      ref i_this[2266067]:owned SystemError[1000238] "temp"
      (2266069 'move' i_this[2266067](2266071 'set reference' _formal_tmp_x[2266035]))
      val tmp[2266073]:SystemError[264845] "temp"
      (2266075 'move' tmp[2266073](2266077 'cast' SystemError[264845] nil[44]))
      (2266080 '.=' i_this[2266067] chpl_p[1000233] tmp[2266073])
      val coerce_tmp[2266084]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266086 'move' coerce_tmp[2266084](2266088 'cast' object[22] call_tmp[2266055]))
      const-val call_tmp[2266091]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266093 'move' call_tmp[2266091](2266095 'ptr_eq' coerce_tmp[2266084] nil[44]))
      if call_tmp[2266091]
      {
        (2266101 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266104]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266106]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434620]:__wide_Error[2381123] "temp"
      (2434623 'move' tmp[2434620] call_tmp[2266055])
      (2266109 call init[968094] initTemp[2266106] tmp[2434620])
      (2266112 'move' call_tmp[2266104] initTemp[2266106])
      (2266115 'move' ret[2266040] call_tmp[2266104])
      (2266119 call chpl__autoDestroy[1516200] _formal_tmp_x[2266035])
      (2266121 '=' i__retArg[2266029] ret[2266040])
      (2266124 'move' coerce_tmp[2266019] ret_tmp[2266021])
      const-val _formal_tmp_in_err[2266127]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266129 'move' _formal_tmp_in_err[2266127] coerce_tmp[2266019])
      (2266132 'move' call_tmp[2266017](2266135 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266127]))
      (2266137 '=' error[1810015] call_tmp[2266017])
      gotoErrorHandlingReturn _endlock[2266200] _endlock[2266200]
    }
    const-val call_tmp[2266143]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266145 'move' call_tmp[2266143](2266148 call qio_err_iserr[223646] call_tmp[2265958]))
    const-val call_tmp[2266150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266152 'move' call_tmp[2266150](2266154 '!=' call_tmp[2266143] 0))
    if call_tmp[2266150]
    {
      val error[2266159]:__wide_Error[2381123] "error variable" "temp"
      (2266161 'move' error[2266159] nil[44])
      wide-ref tmp[2434626]:channel(true,dynamic,false)[1060947] "temp"
      (2434629 'move' tmp[2434626] rvfRerefTmp[2083759])
      ref tmp[2434632]:__wide_Error[2381123] "temp"
      (2434636 'move' tmp[2434632](2434634 'set reference' error[2266159]))
      (2266165 call _ch_ioerror[1062865] tmp[2434626] call_tmp[2265958] "in lock" tmp[2434632])
      val errorExists[2266170]:bool[10] "temp"
      (2266172 'move' errorExists[2266170](2266174 '!=' error[2266159] nil[44]))
      if errorExists[2266170]
      {
        gotoErrorHandling handler[2266182] handler[2266182]
      }
      label handler[2266182]
      val errorExists[2266184]:bool[10] "temp"
      (2266186 'move' errorExists[2266184](2266188 '!=' error[2266159] nil[44]))
      if errorExists[2266184]
      {
        (2266193 '=' error[1810015] error[2266159])
        gotoErrorHandlingReturn _endlock[2266200] _endlock[2266200]
      }
    }
    label _endlock[2266200]
    val errorExists[2108840]:bool[10] "temp"
    (2108845 'move' errorExists[2108840](2108842 '!=' error[1810015] nil[44]))
    if errorExists[2108840]
    {
      gotoErrorHandling handler[1810016] handler[1810016]
    }
    label handler[1810016]
    val errorExists[2108848]:bool[10] "temp"
    (2108853 'move' errorExists[2108848](2108850 '!=' error[1810015] nil[44]))
    if errorExists[2108848]
    {
      (1810031 '=' error_out[1810011] error[1810015])
      gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
    }
    val error[1810043]:__wide_Error[2381123] "error variable" "temp"
    (1810052 'move' error[1810043] nil[44])
    wide-ref call_tmp[1066933]:byteIndex[28170] "dead after last mention" "maybe param" "temp"
    (1066935 'move' call_tmp[1066933](1067009 'get svec member value' args[1807060] 0))
    ref rvfRerefTmp[2083766]:channel(true,dynamic,false)[1060947] "temp"
    (2083770 'move' rvfRerefTmp[2083766](2083767 'set reference' this[1807058]))
    val rvfRerefTmp[2083793]:locale[28] "temp"
    (2083796 'move' rvfRerefTmp[2083793] origLocale[1807062])
    ref tmp[2415275]:__wide_Error[2381123] "temp"
    (2415279 'move' tmp[2415275](2415277 'set reference' error[1810043]))
    (1066944 call _writeOne[1067012] rvfRerefTmp[2083766] call_tmp[1066933] rvfRerefTmp[2083793] tmp[2415275])
    val errorExists[2108856]:bool[10] "temp"
    (2108861 'move' errorExists[2108856](2108858 '!=' error[1810043] nil[44]))
    if errorExists[2108856]
    {
      gotoErrorHandling handler[1810044] handler[1810044]
    }
    label handler[1810044]
    val errorExists[2108864]:bool[10] "temp"
    (2108869 'move' errorExists[2108864](2108866 '!=' error[1810043] nil[44]))
    if errorExists[2108864]
    {
      (1810059 '=' error_out[1810011] error[1810043])
      gotoErrorHandlingReturn _endon_fn[1810013] _endon_fn[1810013]
    }
    label _endon_fn[1810013]
    (1066192 return _void[55])
  }
  function on_fn[1068868](const  wide-ref arg this[1807064]:channel(true,dynamic,false)[1060947], const in arg x[1807066]:int(64)[13], const in arg origLocale[1807068]:locale[28], wide-ref arg error_out[1810295]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    const-val local__str_literal_3017[2378211]:string[26] "temp"
    (2378212 'move' "in lock" "in lock")
    const-val local__str_literal_129[2378205]:string[26] "temp"
    (2378206 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2378199]:string[26] "temp"
    (2378200 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1810299]:__wide_Error[2381123] "error variable" "temp"
    (1810308 'move' error[1810299] nil[44])
    const-val call_tmp[2266213]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266215 'move' call_tmp[2266213](2266218 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2266223]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434639]:qio_channel_ptr_t[231465] "temp"
    (2266225 'move' tmp[2434639](2266227 '.v' this[1807064] _channel_internal[1060940]))
    (2434642 'move' coerce_tmp[2266223] tmp[2434639])
    const-val call_tmp[2266230]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266232 'move' call_tmp[2266230](2266234 'cast' c_void_ptr[149] coerce_tmp[2266223]))
    const-val call_tmp[2266237]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266239 'move' call_tmp[2266237](2266241 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266244]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266246 'move' call_tmp[2266244](2266248 'ptr_eq' call_tmp[2266230] call_tmp[2266237]))
    if call_tmp[2266244]
    {
      const-val call_tmp[2266253]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266255]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266257 'move' coerce_tmp[2266255](2266259 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266262]:owned SystemError[1000238] "temp"
      (2266265 call fromSyserr[1017113] coerce_tmp[2266255] "Operation attempted on an invalid channel" ret_tmp[2266262])
      (2266269 'move' call_tmp[2266253] ret_tmp[2266262])
      val call_tmp[2266272]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266274]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266276]:owned Error[966458] "temp"
      ref i_x[2266278]:owned SystemError[1000238] "temp"
      (2266280 'move' i_x[2266278](2266282 'set reference' call_tmp[2266253]))
      ref i__retArg[2266284]:owned Error[966458] "temp"
      (2266286 'move' i__retArg[2266284](2266288 'set reference' ret_tmp[2266276]))
      val _formal_tmp_x[2266290]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266292 'move' _formal_tmp_x[2266290] i_x[2266278])
      const-val ret[2266295]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266297]:owned SystemError[1000238] "temp"
      (2266299 'move' i_this[2266297](2266301 'set reference' _formal_tmp_x[2266290]))
      val coerce_tmp[2266303]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434645]:SystemError[264845] "temp"
      (2266305 'move' tmp[2434645](2266307 '.v' i_this[2266297] chpl_p[1000233]))
      (2434648 'move' coerce_tmp[2266303] tmp[2434645])
      val call_tmp[2266310]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266312 'move' call_tmp[2266310](2266314 'cast' Error[167938] coerce_tmp[2266303]))
      ref i_this[2266322]:owned SystemError[1000238] "temp"
      (2266324 'move' i_this[2266322](2266326 'set reference' _formal_tmp_x[2266290]))
      val tmp[2266328]:SystemError[264845] "temp"
      (2266330 'move' tmp[2266328](2266332 'cast' SystemError[264845] nil[44]))
      (2266335 '.=' i_this[2266322] chpl_p[1000233] tmp[2266328])
      val coerce_tmp[2266339]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266341 'move' coerce_tmp[2266339](2266343 'cast' object[22] call_tmp[2266310]))
      const-val call_tmp[2266346]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266348 'move' call_tmp[2266346](2266350 'ptr_eq' coerce_tmp[2266339] nil[44]))
      if call_tmp[2266346]
      {
        (2266356 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266359]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266361]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434651]:__wide_Error[2381123] "temp"
      (2434654 'move' tmp[2434651] call_tmp[2266310])
      (2266364 call init[968094] initTemp[2266361] tmp[2434651])
      (2266367 'move' call_tmp[2266359] initTemp[2266361])
      (2266370 'move' ret[2266295] call_tmp[2266359])
      (2266374 call chpl__autoDestroy[1516200] _formal_tmp_x[2266290])
      (2266376 '=' i__retArg[2266284] ret[2266295])
      (2266379 'move' coerce_tmp[2266274] ret_tmp[2266276])
      const-val _formal_tmp_in_err[2266382]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266384 'move' _formal_tmp_in_err[2266382] coerce_tmp[2266274])
      (2266387 'move' call_tmp[2266272](2266390 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266382]))
      (2266392 '=' error[1810299] call_tmp[2266272])
      gotoErrorHandlingReturn _endlock[2266455] _endlock[2266455]
    }
    const-val call_tmp[2266398]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266400 'move' call_tmp[2266398](2266403 call qio_err_iserr[223646] call_tmp[2266213]))
    const-val call_tmp[2266405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266407 'move' call_tmp[2266405](2266409 '!=' call_tmp[2266398] 0))
    if call_tmp[2266405]
    {
      val error[2266414]:__wide_Error[2381123] "error variable" "temp"
      (2266416 'move' error[2266414] nil[44])
      ref tmp[2434657]:__wide_Error[2381123] "temp"
      (2434661 'move' tmp[2434657](2434659 'set reference' error[2266414]))
      (2266420 call _ch_ioerror[1062865] this[1807064] call_tmp[2266213] "in lock" tmp[2434657])
      val errorExists[2266425]:bool[10] "temp"
      (2266427 'move' errorExists[2266425](2266429 '!=' error[2266414] nil[44]))
      if errorExists[2266425]
      {
        gotoErrorHandling handler[2266437] handler[2266437]
      }
      label handler[2266437]
      val errorExists[2266439]:bool[10] "temp"
      (2266441 'move' errorExists[2266439](2266443 '!=' error[2266414] nil[44]))
      if errorExists[2266439]
      {
        (2266448 '=' error[1810299] error[2266414])
        gotoErrorHandlingReturn _endlock[2266455] _endlock[2266455]
      }
    }
    label _endlock[2266455]
    val errorExists[2108976]:bool[10] "temp"
    (2108981 'move' errorExists[2108976](2108978 '!=' error[1810299] nil[44]))
    if errorExists[2108976]
    {
      gotoErrorHandling handler[1810300] handler[1810300]
    }
    label handler[1810300]
    val errorExists[2108984]:bool[10] "temp"
    (2108989 'move' errorExists[2108984](2108986 '!=' error[1810299] nil[44]))
    if errorExists[2108984]
    {
      (1810314 call chpl_uncaught_error[170243] error[1810299])
    }
    val error[1810325]:__wide_Error[2381123] "error variable" "temp"
    (1810334 'move' error[1810325] nil[44])
    val rvfRerefTmp[2083805]:locale[28] "temp"
    (2083808 'move' rvfRerefTmp[2083805] origLocale[1807068])
    ref tmp[2415347]:__wide_Error[2381123] "temp"
    (2415351 'move' tmp[2415347](2415349 'set reference' error[1810325]))
    (1068901 call _writeOne[1068937] this[1807064] x[1807066] rvfRerefTmp[2083805] tmp[2415347])
    val errorExists[2108992]:bool[10] "temp"
    (2108997 'move' errorExists[2108992](2108994 '!=' error[1810325] nil[44]))
    if errorExists[2108992]
    {
      gotoErrorHandling handler[1810326] handler[1810326]
    }
    label handler[1810326]
    val errorExists[2109000]:bool[10] "temp"
    (2109005 'move' errorExists[2109000](2109002 '!=' error[1810325] nil[44]))
    if errorExists[2109000]
    {
      (1810341 '=' error_out[1810295] error[1810325])
      gotoErrorHandlingReturn _endon_fn[1810297] _endon_fn[1810297]
    }
    label _endon_fn[1810297]
    (1068908 return _void[55])
  }
  function on_fn[1080205](const in arg this[1807070]:channel(true,dynamic,false)[1060947], wide-ref arg ret[1807072]:int(64)[13]) : void[4] "on" "resolved"
  {
    const-val local__str_literal_3017[2378337]:string[26] "temp"
    (2378338 'move' "in lock" "in lock")
    const-val local__str_literal_129[2378331]:string[26] "temp"
    (2378332 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2378325]:string[26] "temp"
    (2378326 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1810496]:__wide_Error[2381123] "error variable" "temp"
    (1810505 'move' error[1810496] nil[44])
    ref rvfRerefTmp[2083832]:channel(true,dynamic,false)[1060947] "temp"
    (2083836 'move' rvfRerefTmp[2083832](2083833 'set reference' this[1807070]))
    const-val call_tmp[2266468]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266470 'move' call_tmp[2266468](2266473 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2266478]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434664]:qio_channel_ptr_t[231465] "temp"
    (2266480 'move' tmp[2434664](2266482 '.v' this[1807070] _channel_internal[1060940]))
    (2434667 'move' coerce_tmp[2266478] tmp[2434664])
    const-val call_tmp[2266485]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266487 'move' call_tmp[2266485](2266489 'cast' c_void_ptr[149] coerce_tmp[2266478]))
    const-val call_tmp[2266492]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266494 'move' call_tmp[2266492](2266496 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266501 'move' call_tmp[2266499](2266503 'ptr_eq' call_tmp[2266485] call_tmp[2266492]))
    if call_tmp[2266499]
    {
      const-val call_tmp[2266508]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266510]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266512 'move' coerce_tmp[2266510](2266514 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266517]:owned SystemError[1000238] "temp"
      (2266520 call fromSyserr[1017113] coerce_tmp[2266510] "Operation attempted on an invalid channel" ret_tmp[2266517])
      (2266524 'move' call_tmp[2266508] ret_tmp[2266517])
      val call_tmp[2266527]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266529]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266531]:owned Error[966458] "temp"
      ref i_x[2266533]:owned SystemError[1000238] "temp"
      (2266535 'move' i_x[2266533](2266537 'set reference' call_tmp[2266508]))
      ref i__retArg[2266539]:owned Error[966458] "temp"
      (2266541 'move' i__retArg[2266539](2266543 'set reference' ret_tmp[2266531]))
      val _formal_tmp_x[2266545]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266547 'move' _formal_tmp_x[2266545] i_x[2266533])
      const-val ret[2266550]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266552]:owned SystemError[1000238] "temp"
      (2266554 'move' i_this[2266552](2266556 'set reference' _formal_tmp_x[2266545]))
      val coerce_tmp[2266558]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434670]:SystemError[264845] "temp"
      (2266560 'move' tmp[2434670](2266562 '.v' i_this[2266552] chpl_p[1000233]))
      (2434673 'move' coerce_tmp[2266558] tmp[2434670])
      val call_tmp[2266565]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266567 'move' call_tmp[2266565](2266569 'cast' Error[167938] coerce_tmp[2266558]))
      ref i_this[2266577]:owned SystemError[1000238] "temp"
      (2266579 'move' i_this[2266577](2266581 'set reference' _formal_tmp_x[2266545]))
      val tmp[2266583]:SystemError[264845] "temp"
      (2266585 'move' tmp[2266583](2266587 'cast' SystemError[264845] nil[44]))
      (2266590 '.=' i_this[2266577] chpl_p[1000233] tmp[2266583])
      val coerce_tmp[2266594]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266596 'move' coerce_tmp[2266594](2266598 'cast' object[22] call_tmp[2266565]))
      const-val call_tmp[2266601]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266603 'move' call_tmp[2266601](2266605 'ptr_eq' coerce_tmp[2266594] nil[44]))
      if call_tmp[2266601]
      {
        (2266611 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266614]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266616]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434676]:__wide_Error[2381123] "temp"
      (2434679 'move' tmp[2434676] call_tmp[2266565])
      (2266619 call init[968094] initTemp[2266616] tmp[2434676])
      (2266622 'move' call_tmp[2266614] initTemp[2266616])
      (2266625 'move' ret[2266550] call_tmp[2266614])
      (2266629 call chpl__autoDestroy[1516200] _formal_tmp_x[2266545])
      (2266631 '=' i__retArg[2266539] ret[2266550])
      (2266634 'move' coerce_tmp[2266529] ret_tmp[2266531])
      const-val _formal_tmp_in_err[2266637]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266639 'move' _formal_tmp_in_err[2266637] coerce_tmp[2266529])
      (2266642 'move' call_tmp[2266527](2266645 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266637]))
      (2266647 '=' error[1810496] call_tmp[2266527])
      gotoErrorHandlingReturn _endlock[2266710] _endlock[2266710]
    }
    const-val call_tmp[2266653]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266655 'move' call_tmp[2266653](2266658 call qio_err_iserr[223646] call_tmp[2266468]))
    const-val call_tmp[2266660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266662 'move' call_tmp[2266660](2266664 '!=' call_tmp[2266653] 0))
    if call_tmp[2266660]
    {
      val error[2266669]:__wide_Error[2381123] "error variable" "temp"
      (2266671 'move' error[2266669] nil[44])
      wide-ref tmp[2434682]:channel(true,dynamic,false)[1060947] "temp"
      (2434685 'move' tmp[2434682] rvfRerefTmp[2083832])
      ref tmp[2434688]:__wide_Error[2381123] "temp"
      (2434692 'move' tmp[2434688](2434690 'set reference' error[2266669]))
      (2266675 call _ch_ioerror[1062865] tmp[2434682] call_tmp[2266468] "in lock" tmp[2434688])
      val errorExists[2266680]:bool[10] "temp"
      (2266682 'move' errorExists[2266680](2266684 '!=' error[2266669] nil[44]))
      if errorExists[2266680]
      {
        gotoErrorHandling handler[2266692] handler[2266692]
      }
      label handler[2266692]
      val errorExists[2266694]:bool[10] "temp"
      (2266696 'move' errorExists[2266694](2266698 '!=' error[2266669] nil[44]))
      if errorExists[2266694]
      {
        (2266703 '=' error[1810496] error[2266669])
        gotoErrorHandlingReturn _endlock[2266710] _endlock[2266710]
      }
    }
    label _endlock[2266710]
    val errorExists[2109064]:bool[10] "temp"
    (2109069 'move' errorExists[2109064](2109066 '!=' error[1810496] nil[44]))
    if errorExists[2109064]
    {
      gotoErrorHandling handler[1810497] handler[1810497]
    }
    label handler[1810497]
    val errorExists[2109072]:bool[10] "temp"
    (2109077 'move' errorExists[2109072](2109074 '!=' error[1810496] nil[44]))
    if errorExists[2109072]
    {
      (1810511 call chpl_uncaught_error[170243] error[1810496])
    }
    const-val call_tmp[1080226]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1080285]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415408]:qio_channel_ptr_t[231465] "temp"
    (1080289 'move' tmp[2415408](2369372 '.v' this[1807070] _channel_internal[1060940]))
    (2415411 'move' coerce_tmp[1080285] tmp[2415408])
    (1080228 'move' call_tmp[1080226](1080231 call qio_channel_offset_unlocked[233382] coerce_tmp[1080285]))
    (2122236 '=' ret[1807072] call_tmp[1080226])
    (1080244 return _void[55])
  }
  function on_fn[1080757](const in arg start[1807074]:int(64)[13], wide-ref arg ret[1807076]:channel(false,dynamic,false)[1080682], const in arg style[1807078]:iostyle[231844], const in arg end[1807080]:int(64)[13], const in arg this[1807082]:file[235580], wide-ref arg err[1807084]:syserr[223584], const in arg hints[1807086]:int(32)[95], wide-ref arg error_out[1810567]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val error[1810571]:__wide_Error[2381123] "error variable" "temp"
    (1810580 'move' error[1810571] nil[44])
    ref rvfRerefTmp[2083861]:file[235580] "temp"
    (2083865 'move' rvfRerefTmp[2083861](2083862 'set reference' this[1807082]))
    ref tmp[2415414]:__wide_Error[2381123] "temp"
    (2415418 'move' tmp[2415414](2415416 'set reference' error[1810571]))
    (1080768 call checkAssumingLocal[235768] rvfRerefTmp[2083861] tmp[2415414])
    val errorExists[2109104]:bool[10] "temp"
    (2109109 'move' errorExists[2109104](2109106 '!=' error[1810571] nil[44]))
    if errorExists[2109104]
    {
      gotoErrorHandling handler[1810572] handler[1810572]
    }
    label handler[1810572]
    val errorExists[2109112]:bool[10] "temp"
    (2109117 'move' errorExists[2109112](2109114 '!=' error[1810571] nil[44]))
    if errorExists[2109112]
    {
      (1810587 '=' error_out[1810567] error[1810571])
      gotoErrorHandlingReturn _endon_fn[1810569] _endon_fn[1810569]
    }
    const-val call_tmp[1080770]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1081112]:channel(false,dynamic,false)[1080682] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1081583]:syserr[223584] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2083854]:file[235580] "temp"
    (2083858 'move' rvfRerefTmp[2083854](2083855 'set reference' this[1807082]))
    (1081115 call init[1081128] initTemp[1081112] rvfRerefTmp[2083854] _formal_tmp_out_error[1081583] hints[1807086] start[1807074] end[1807080] style[1807078])
    (2207210 '=' err[1807084] _formal_tmp_out_error[1081583])
    (1080772 'move' call_tmp[1080770] initTemp[1081112])
    (1080786 call =[1081592] ret[1807076] call_tmp[1080770])
    ref i_x[2331644]:channel(false,dynamic,false)[1080682] "temp"
    (2331648 'move' i_x[2331644](2331646 'set reference' call_tmp[1080770]))
    (2331652 call deinit[1540469] i_x[2331644])
    label _endon_fn[1810569]
    (1080792 return _void[55])
  }
  function on_fn[1081206](const in arg end[1807088]:int(64)[13], const in arg hints[1807090]:int(32)[95], const in arg local_style[1807092]:iostyle[231844], wide-ref arg this[1807094]:channel(false,dynamic,false)[1080682], const in arg start[1807096]:int(64)[13], const in arg f[1807098]:file[235580], wide-ref arg _formal_tmp_error[1807100]:syserr[223584]) : void[4] "on" "resolved"
  {
    wide-ref call_tmp[2270019]:locale[28] "dead after last mention" "maybe param" "temp"
    (2270021 'move' call_tmp[2270019](2270023 '.' this[1807094] home[1080670]))
    ref call_tmp[2216493]:locale[28] "dead after last mention" "maybe param" "temp"
    (2216495 'move' call_tmp[2216493](2216497 '.' f[1807098] home[235562]))
    wide-ref tmp[2415428]:locale[28] "temp"
    (2415431 'move' tmp[2415428] call_tmp[2216493])
    (1081229 call =[90631] call_tmp[2270019] tmp[2415428])
    wide-ref call_tmp[2270073]:qio_channel_ptr_t[231465] "dead after last mention" "maybe param" "temp"
    (2270075 'move' call_tmp[2270073](2270077 '.' this[1807094] _channel_internal[1080675]))
    const-val call_tmp[1081314]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1081552]:qio_file_ptr_t[231439] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415448]:qio_file_ptr_t[231439] "temp"
    (1081556 'move' tmp[2415448](2369402 '.v' f[1807098] _file_internal[235568]))
    (2415451 'move' coerce_tmp[1081552] tmp[2415448])
    const-val coerce_tmp[1081558]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081564 'move' coerce_tmp[1081558](1081560 'cast' int(32)[95] 1))
    const-val coerce_tmp[1081566]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081572 'move' coerce_tmp[1081566](1081568 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2083874]:iostyle[231844] "temp"
    (2083878 'move' rvfRerefTmp[2083874](2083875 'set reference' local_style[1807092]))
    ref tmp[2384184]:qio_channel_ptr_t[231465] "temp"
    (2384188 'local_check' call_tmp[2270073] c"references to remote data cannot be passed to external routines like 'qio_channel_create'")
    (2384190 'move' tmp[2384184] call_tmp[2270073])
    (1081316 'move' call_tmp[1081314](1081319 call qio_channel_create[232878] tmp[2384184] coerce_tmp[1081552] hints[1807090] coerce_tmp[1081558] coerce_tmp[1081566] start[1807096] end[1807088] rvfRerefTmp[2083874]))
    (2384193 'move' call_tmp[2270073] tmp[2384184])
    (2207216 '=' _formal_tmp_error[1807100] call_tmp[1081314])
    (1081332 return _void[55])
  }
  function on_fn[1081818](const in arg rhs[1807102]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415460]:qio_channel_ptr_t[231465] "temp"
    (1082021 'move' tmp[2415460](2369441 '.v' rhs[1807102] _channel_internal[1080675]))
    (2415463 'move' coerce_tmp[1082017] tmp[2415460])
    (1081833 call qio_channel_retain[232951] coerce_tmp[1082017])
    (1081835 return _void[55])
  }
  function on_fn[1081862](const  wide-ref arg lhs[1807104]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082036]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415466]:qio_channel_ptr_t[231465] "temp"
    (1082040 'move' tmp[2415466](2369448 '.v' lhs[1807104] _channel_internal[1080675]))
    (2415469 'move' coerce_tmp[1082036] tmp[2415466])
    (1081877 call qio_channel_release[232961] coerce_tmp[1082036])
    (1081879 return _void[55])
  }
  function on_fn[1082187](const in arg this[1807106]:channel(false,dynamic,false)[1080682], wide-ref arg err[1807108]:syserr[223584]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1082209]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082532]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082538 'move' coerce_tmp[1082532](1082534 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082540]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415491]:qio_channel_ptr_t[231465] "temp"
    (1082544 'move' tmp[2415491](2369468 '.v' this[1807106] _channel_internal[1080675]))
    (2415494 'move' coerce_tmp[1082540] tmp[2415491])
    (1082211 'move' call_tmp[1082209](1082214 call qio_channel_close[233140] coerce_tmp[1082532] coerce_tmp[1082540]))
    (2207222 '=' err[1807108] call_tmp[1082209])
    (1082223 return _void[55])
  }
  function on_fn[1082616](const in arg this[1807110]:channel(false,dynamic,false)[1080682], wide-ref arg path[1807112]:string[26], wide-ref arg offset[1807114]:int(64)[13], wide-ref arg error_out[1810722]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1082622]:c_string[19] "dead at end of block" "insert auto destroy"
    (1082823 'move' tmp_path[1082622](1082821 'cast' c_string[19] nil[44]))
    val tmp_offset[1082628]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082826 'move' tmp_offset[1082628] 0)
    (2207921 call qio_int_to_err[223634] 0)
    const-val call_tmp[1082670]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082778]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082784 'move' coerce_tmp[1082778](1082780 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082786]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415504]:qio_channel_ptr_t[231465] "temp"
    (1082790 'move' tmp[2415504](2369481 '.v' this[1807110] _channel_internal[1080675]))
    (2415507 'move' coerce_tmp[1082786] tmp[2415504])
    (1082672 'move' call_tmp[1082670](1082675 call qio_channel_path_offset[232924] coerce_tmp[1082778] coerce_tmp[1082786] tmp_path[1082622] tmp_offset[1082628]))
    const-val call_tmp[2206586]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206588 'move' call_tmp[2206586](2206591 call qio_err_iserr[223646] call_tmp[1082670]))
    const-val call_tmp[2206593]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206595 'move' call_tmp[2206593](2206597 '==' call_tmp[2206586] 0))
    if call_tmp[2206593]
    {
      const-val call_tmp[1082704]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1810727]:Error[167938] "error variable" "temp"
      (1810729 'move' error[1810727] nil[44])
      const-val call_tmp[2203601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203603 'move' call_tmp[2203601](2203605 'string_length_bytes' tmp_path[1082622]))
      val errorExists[2109168]:bool[10] "temp"
      (2109173 'move' errorExists[2109168](2109170 '!=' error[1810727] nil[44]))
      if errorExists[2109168]
      {
        val tmp[2448170]:__wide_Error[2381123] "temp"
        (2448172 'move' tmp[2448170] error[1810727])
        (1810733 '=' error_out[1810722] tmp[2448170])
        gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
      }
      val error[1810742]:__wide_Error[2381123] "error variable" "temp"
      (1810744 'move' error[1810742] nil[44])
      const-val ret[2141787]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2141789]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2141791 'move' call_tmp[2141789](2141793 'cast' c_ptr(uint(8))[937423] tmp_path[1082622]))
      val error[2141798]:__wide_Error[2381123] "error variable" "temp"
      (2141800 'move' error[2141798] nil[44])
      const-val ret[2141803]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2141805]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2141807]:__wide_Error[2381123] "error variable" "temp"
      (2141809 'move' error[2141807] nil[44])
      const-val ret_tmp[2141812]:string[26] "temp"
      ref tmp[2426631]:__wide_Error[2381123] "temp"
      (2426635 'move' tmp[2426631](2426633 'set reference' error[2141807]))
      (2141815 call decodeByteBuffer[173892] call_tmp[2141789] call_tmp[2203601] replace[173648] tmp[2426631] ret_tmp[2141812])
      (2141821 'move' call_tmp[2141805] ret_tmp[2141812])
      val errorExists[2141824]:bool[10] "temp"
      (2141826 'move' errorExists[2141824](2141828 '!=' error[2141807] nil[44]))
      if errorExists[2141824]
      {
        (2141833 '=' error[2141798] error[2141807])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141842] _endcreateStringWithNewBuffer[2141842]
      }
      (2141839 'move' ret[2141803] call_tmp[2141805])
      label _endcreateStringWithNewBuffer[2141842]
      val errorExists[2141847]:bool[10] "temp"
      (2141849 'move' errorExists[2141847](2141851 '!=' error[2141798] nil[44]))
      if errorExists[2141847]
      {
        (2141856 '=' error[1810742] error[2141798])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2141865] _endcreateStringWithNewBuffer[2141865]
      }
      (2141862 'move' ret[2141787] ret[2141803])
      label _endcreateStringWithNewBuffer[2141865]
      (1829078 'move' call_tmp[1082704] ret[2141787])
      val errorExists[2109176]:bool[10] "temp"
      (2109181 'move' errorExists[2109176](2109178 '!=' error[1810742] nil[44]))
      if errorExists[2109176]
      {
        (1810748 '=' error_out[1810722] error[1810742])
        gotoErrorHandlingReturn _endon_fn[1810724] _endon_fn[1810724]
      }
      (1082714 call =[38269] path[1807112] call_tmp[1082704])
      ref i_x[2131149]:string[26] "temp"
      (2131153 'move' i_x[2131149](2131151 'set reference' call_tmp[1082704]))
      wide-ref tmp[2425530]:string[26] "temp"
      (2425533 'move' tmp[2425530] i_x[2131149])
      (2131157 call deinit[30831] tmp[2425530])
      ref i_cs[2120198]:c_string[19] "temp"
      (2120202 'move' i_cs[2120198](2120200 'set reference' tmp_path[1082622]))
      const-val call_tmp[2120205]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120207 'move' call_tmp[2120205](2120209 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120212]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120214 'move' call_tmp[2120212](2120216 'cast' c_string[19] call_tmp[2120205]))
      const-val coerce_tmp[2120219]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120221 'move' coerce_tmp[2120219] tmp_path[1082622])
      const-val call_tmp[2120225]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120227 'move' call_tmp[2120225](2120229 'string_compare' coerce_tmp[2120219] call_tmp[2120212]))
      const-val call_tmp[2120232]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120234 'move' call_tmp[2120232](2120236 '!=' call_tmp[2120225] 0))
      if call_tmp[2120232]
      {
        (2120242 call chpl_rt_free_c_string[22714] i_cs[2120198])
      }
      (2122242 '=' offset[1807114] tmp_offset[1082628])
    }
    label _endon_fn[1810724]
    (1082733 return _void[55])
  }
  function on_fn[1164907](const in arg this[1807142]:channel(true,dynamic,false)[1060947], const  wide-ref arg args[1807144]:(string,codepointIndex,string)[1158555], const in arg origLocale[1807146]:locale[28], wide-ref arg error_out[1811035]:__wide_Error[2381123]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3017[2378709]:string[26] "temp"
    (2378710 'move' "in lock" "in lock")
    const-val local__str_literal_129[2378703]:string[26] "temp"
    (2378704 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2378697]:string[26] "temp"
    (2378698 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1811039]:__wide_Error[2381123] "error variable" "temp"
    (1811048 'move' error[1811039] nil[44])
    ref rvfRerefTmp[2083982]:channel(true,dynamic,false)[1060947] "temp"
    (2083986 'move' rvfRerefTmp[2083982](2083983 'set reference' this[1807142]))
    const-val call_tmp[2266723]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266725 'move' call_tmp[2266723](2266728 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2266733]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434695]:qio_channel_ptr_t[231465] "temp"
    (2266735 'move' tmp[2434695](2266737 '.v' this[1807142] _channel_internal[1060940]))
    (2434698 'move' coerce_tmp[2266733] tmp[2434695])
    const-val call_tmp[2266740]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266742 'move' call_tmp[2266740](2266744 'cast' c_void_ptr[149] coerce_tmp[2266733]))
    const-val call_tmp[2266747]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266749 'move' call_tmp[2266747](2266751 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2266754]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266756 'move' call_tmp[2266754](2266758 'ptr_eq' call_tmp[2266740] call_tmp[2266747]))
    if call_tmp[2266754]
    {
      const-val call_tmp[2266763]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2266765]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266767 'move' coerce_tmp[2266765](2266769 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2266772]:owned SystemError[1000238] "temp"
      (2266775 call fromSyserr[1017113] coerce_tmp[2266765] "Operation attempted on an invalid channel" ret_tmp[2266772])
      (2266779 'move' call_tmp[2266763] ret_tmp[2266772])
      val call_tmp[2266782]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2266784]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2266786]:owned Error[966458] "temp"
      ref i_x[2266788]:owned SystemError[1000238] "temp"
      (2266790 'move' i_x[2266788](2266792 'set reference' call_tmp[2266763]))
      ref i__retArg[2266794]:owned Error[966458] "temp"
      (2266796 'move' i__retArg[2266794](2266798 'set reference' ret_tmp[2266786]))
      val _formal_tmp_x[2266800]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2266802 'move' _formal_tmp_x[2266800] i_x[2266788])
      const-val ret[2266805]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2266807]:owned SystemError[1000238] "temp"
      (2266809 'move' i_this[2266807](2266811 'set reference' _formal_tmp_x[2266800]))
      val coerce_tmp[2266813]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434701]:SystemError[264845] "temp"
      (2266815 'move' tmp[2434701](2266817 '.v' i_this[2266807] chpl_p[1000233]))
      (2434704 'move' coerce_tmp[2266813] tmp[2434701])
      val call_tmp[2266820]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266822 'move' call_tmp[2266820](2266824 'cast' Error[167938] coerce_tmp[2266813]))
      ref i_this[2266832]:owned SystemError[1000238] "temp"
      (2266834 'move' i_this[2266832](2266836 'set reference' _formal_tmp_x[2266800]))
      val tmp[2266838]:SystemError[264845] "temp"
      (2266840 'move' tmp[2266838](2266842 'cast' SystemError[264845] nil[44]))
      (2266845 '.=' i_this[2266832] chpl_p[1000233] tmp[2266838])
      val coerce_tmp[2266849]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2266851 'move' coerce_tmp[2266849](2266853 'cast' object[22] call_tmp[2266820]))
      const-val call_tmp[2266856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2266858 'move' call_tmp[2266856](2266860 'ptr_eq' coerce_tmp[2266849] nil[44]))
      if call_tmp[2266856]
      {
        (2266866 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2266869]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2266871]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434707]:__wide_Error[2381123] "temp"
      (2434710 'move' tmp[2434707] call_tmp[2266820])
      (2266874 call init[968094] initTemp[2266871] tmp[2434707])
      (2266877 'move' call_tmp[2266869] initTemp[2266871])
      (2266880 'move' ret[2266805] call_tmp[2266869])
      (2266884 call chpl__autoDestroy[1516200] _formal_tmp_x[2266800])
      (2266886 '=' i__retArg[2266794] ret[2266805])
      (2266889 'move' coerce_tmp[2266784] ret_tmp[2266786])
      const-val _formal_tmp_in_err[2266892]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2266894 'move' _formal_tmp_in_err[2266892] coerce_tmp[2266784])
      (2266897 'move' call_tmp[2266782](2266900 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2266892]))
      (2266902 '=' error[1811039] call_tmp[2266782])
      gotoErrorHandlingReturn _endlock[2266965] _endlock[2266965]
    }
    const-val call_tmp[2266908]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266910 'move' call_tmp[2266908](2266913 call qio_err_iserr[223646] call_tmp[2266723]))
    const-val call_tmp[2266915]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266917 'move' call_tmp[2266915](2266919 '!=' call_tmp[2266908] 0))
    if call_tmp[2266915]
    {
      val error[2266924]:__wide_Error[2381123] "error variable" "temp"
      (2266926 'move' error[2266924] nil[44])
      wide-ref tmp[2434713]:channel(true,dynamic,false)[1060947] "temp"
      (2434716 'move' tmp[2434713] rvfRerefTmp[2083982])
      ref tmp[2434719]:__wide_Error[2381123] "temp"
      (2434723 'move' tmp[2434719](2434721 'set reference' error[2266924]))
      (2266930 call _ch_ioerror[1062865] tmp[2434713] call_tmp[2266723] "in lock" tmp[2434719])
      val errorExists[2266935]:bool[10] "temp"
      (2266937 'move' errorExists[2266935](2266939 '!=' error[2266924] nil[44]))
      if errorExists[2266935]
      {
        gotoErrorHandling handler[2266947] handler[2266947]
      }
      label handler[2266947]
      val errorExists[2266949]:bool[10] "temp"
      (2266951 'move' errorExists[2266949](2266953 '!=' error[2266924] nil[44]))
      if errorExists[2266949]
      {
        (2266958 '=' error[1811039] error[2266924])
        gotoErrorHandlingReturn _endlock[2266965] _endlock[2266965]
      }
    }
    label _endlock[2266965]
    val errorExists[2109336]:bool[10] "temp"
    (2109341 'move' errorExists[2109336](2109338 '!=' error[1811039] nil[44]))
    if errorExists[2109336]
    {
      gotoErrorHandling handler[1811040] handler[1811040]
    }
    label handler[1811040]
    val errorExists[2109344]:bool[10] "temp"
    (2109349 'move' errorExists[2109344](2109346 '!=' error[1811039] nil[44]))
    if errorExists[2109344]
    {
      (1811055 '=' error_out[1811035] error[1811039])
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    val error[1811067]:__wide_Error[2381123] "error variable" "temp"
    (1811076 'move' error[1811067] nil[44])
    wide-ref call_tmp[1165070]:string[26] "dead after last mention" "maybe param" "temp"
    (1165072 'move' call_tmp[1165070](1165157 '.v' args[1807144] x0[1158549]))
    ref rvfRerefTmp[2083989]:channel(true,dynamic,false)[1060947] "temp"
    (2083993 'move' rvfRerefTmp[2083989](2083990 'set reference' this[1807142]))
    val rvfRerefTmp[2084044]:locale[28] "temp"
    (2084047 'move' rvfRerefTmp[2084044] origLocale[1807146])
    ref tmp[2415831]:__wide_Error[2381123] "temp"
    (2415835 'move' tmp[2415831](2415833 'set reference' error[1811067]))
    (1165081 call _writeOne[1165160] rvfRerefTmp[2083989] call_tmp[1165070] rvfRerefTmp[2084044] tmp[2415831])
    val errorExists[2109352]:bool[10] "temp"
    (2109357 'move' errorExists[2109352](2109354 '!=' error[1811067] nil[44]))
    if errorExists[2109352]
    {
      gotoErrorHandling handler[1811068] handler[1811068]
    }
    label handler[1811068]
    val errorExists[2109360]:bool[10] "temp"
    (2109365 'move' errorExists[2109360](2109362 '!=' error[1811067] nil[44]))
    if errorExists[2109360]
    {
      (1811083 '=' error_out[1811035] error[1811067])
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    val error[1811095]:__wide_Error[2381123] "error variable" "temp"
    (1811104 'move' error[1811095] nil[44])
    wide-ref call_tmp[1165102]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1165104 'move' call_tmp[1165102](1173910 '.v' args[1807144] x1[1158551]))
    ref rvfRerefTmp[2083996]:channel(true,dynamic,false)[1060947] "temp"
    (2084000 'move' rvfRerefTmp[2083996](2083997 'set reference' this[1807142]))
    val rvfRerefTmp[2084050]:locale[28] "temp"
    (2084053 'move' rvfRerefTmp[2084050] origLocale[1807146])
    ref tmp[2415838]:__wide_Error[2381123] "temp"
    (2415842 'move' tmp[2415838](2415840 'set reference' error[1811095]))
    (1165113 call _writeOne[1173913] rvfRerefTmp[2083996] call_tmp[1165102] rvfRerefTmp[2084050] tmp[2415838])
    val errorExists[2109368]:bool[10] "temp"
    (2109373 'move' errorExists[2109368](2109370 '!=' error[1811095] nil[44]))
    if errorExists[2109368]
    {
      gotoErrorHandling handler[1811096] handler[1811096]
    }
    label handler[1811096]
    val errorExists[2109376]:bool[10] "temp"
    (2109381 'move' errorExists[2109376](2109378 '!=' error[1811095] nil[44]))
    if errorExists[2109376]
    {
      (1811111 '=' error_out[1811035] error[1811095])
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    val error[1811123]:__wide_Error[2381123] "error variable" "temp"
    (1811132 'move' error[1811123] nil[44])
    wide-ref call_tmp[1165134]:string[26] "dead after last mention" "maybe param" "temp"
    (1165136 'move' call_tmp[1165134](1175644 '.v' args[1807144] x2[1158553]))
    ref rvfRerefTmp[2084003]:channel(true,dynamic,false)[1060947] "temp"
    (2084007 'move' rvfRerefTmp[2084003](2084004 'set reference' this[1807142]))
    val rvfRerefTmp[2084056]:locale[28] "temp"
    (2084059 'move' rvfRerefTmp[2084056] origLocale[1807146])
    ref tmp[2415845]:__wide_Error[2381123] "temp"
    (2415849 'move' tmp[2415845](2415847 'set reference' error[1811123]))
    (1165145 call _writeOne[1165160] rvfRerefTmp[2084003] call_tmp[1165134] rvfRerefTmp[2084056] tmp[2415845])
    val errorExists[2109384]:bool[10] "temp"
    (2109389 'move' errorExists[2109384](2109386 '!=' error[1811123] nil[44]))
    if errorExists[2109384]
    {
      gotoErrorHandling handler[1811124] handler[1811124]
    }
    label handler[1811124]
    val errorExists[2109392]:bool[10] "temp"
    (2109397 'move' errorExists[2109392](2109394 '!=' error[1811123] nil[44]))
    if errorExists[2109392]
    {
      (1811139 '=' error_out[1811035] error[1811123])
      gotoErrorHandlingReturn _endon_fn[1811037] _endon_fn[1811037]
    }
    label _endon_fn[1811037]
    (1165010 return _void[55])
  }
  function on_fn[1180386](const in arg this[1807148]:channel(true,dynamic,false)[1060947], const  wide-ref arg args[1807150]:(string,codepointIndex,string,int(64))[1176520], const in arg origLocale[1807152]:locale[28], wide-ref arg error_out[1811532]:__wide_Error[2381123]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3017[2378825]:string[26] "temp"
    (2378826 'move' "in lock" "in lock")
    const-val local__str_literal_129[2378819]:string[26] "temp"
    (2378820 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2378813]:string[26] "temp"
    (2378814 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1811536]:__wide_Error[2381123] "error variable" "temp"
    (1811545 'move' error[1811536] nil[44])
    ref rvfRerefTmp[2084069]:channel(true,dynamic,false)[1060947] "temp"
    (2084073 'move' rvfRerefTmp[2084069](2084070 'set reference' this[1807148]))
    const-val call_tmp[2266978]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266980 'move' call_tmp[2266978](2266983 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2266988]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434726]:qio_channel_ptr_t[231465] "temp"
    (2266990 'move' tmp[2434726](2266992 '.v' this[1807148] _channel_internal[1060940]))
    (2434729 'move' coerce_tmp[2266988] tmp[2434726])
    const-val call_tmp[2266995]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2266997 'move' call_tmp[2266995](2266999 'cast' c_void_ptr[149] coerce_tmp[2266988]))
    const-val call_tmp[2267002]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267004 'move' call_tmp[2267002](2267006 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267011 'move' call_tmp[2267009](2267013 'ptr_eq' call_tmp[2266995] call_tmp[2267002]))
    if call_tmp[2267009]
    {
      const-val call_tmp[2267018]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267020]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267022 'move' coerce_tmp[2267020](2267024 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267027]:owned SystemError[1000238] "temp"
      (2267030 call fromSyserr[1017113] coerce_tmp[2267020] "Operation attempted on an invalid channel" ret_tmp[2267027])
      (2267034 'move' call_tmp[2267018] ret_tmp[2267027])
      val call_tmp[2267037]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267039]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267041]:owned Error[966458] "temp"
      ref i_x[2267043]:owned SystemError[1000238] "temp"
      (2267045 'move' i_x[2267043](2267047 'set reference' call_tmp[2267018]))
      ref i__retArg[2267049]:owned Error[966458] "temp"
      (2267051 'move' i__retArg[2267049](2267053 'set reference' ret_tmp[2267041]))
      val _formal_tmp_x[2267055]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267057 'move' _formal_tmp_x[2267055] i_x[2267043])
      const-val ret[2267060]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267062]:owned SystemError[1000238] "temp"
      (2267064 'move' i_this[2267062](2267066 'set reference' _formal_tmp_x[2267055]))
      val coerce_tmp[2267068]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434732]:SystemError[264845] "temp"
      (2267070 'move' tmp[2434732](2267072 '.v' i_this[2267062] chpl_p[1000233]))
      (2434735 'move' coerce_tmp[2267068] tmp[2434732])
      val call_tmp[2267075]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267077 'move' call_tmp[2267075](2267079 'cast' Error[167938] coerce_tmp[2267068]))
      ref i_this[2267087]:owned SystemError[1000238] "temp"
      (2267089 'move' i_this[2267087](2267091 'set reference' _formal_tmp_x[2267055]))
      val tmp[2267093]:SystemError[264845] "temp"
      (2267095 'move' tmp[2267093](2267097 'cast' SystemError[264845] nil[44]))
      (2267100 '.=' i_this[2267087] chpl_p[1000233] tmp[2267093])
      val coerce_tmp[2267104]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267106 'move' coerce_tmp[2267104](2267108 'cast' object[22] call_tmp[2267075]))
      const-val call_tmp[2267111]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267113 'move' call_tmp[2267111](2267115 'ptr_eq' coerce_tmp[2267104] nil[44]))
      if call_tmp[2267111]
      {
        (2267121 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267124]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267126]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434738]:__wide_Error[2381123] "temp"
      (2434741 'move' tmp[2434738] call_tmp[2267075])
      (2267129 call init[968094] initTemp[2267126] tmp[2434738])
      (2267132 'move' call_tmp[2267124] initTemp[2267126])
      (2267135 'move' ret[2267060] call_tmp[2267124])
      (2267139 call chpl__autoDestroy[1516200] _formal_tmp_x[2267055])
      (2267141 '=' i__retArg[2267049] ret[2267060])
      (2267144 'move' coerce_tmp[2267039] ret_tmp[2267041])
      const-val _formal_tmp_in_err[2267147]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267149 'move' _formal_tmp_in_err[2267147] coerce_tmp[2267039])
      (2267152 'move' call_tmp[2267037](2267155 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267147]))
      (2267157 '=' error[1811536] call_tmp[2267037])
      gotoErrorHandlingReturn _endlock[2267220] _endlock[2267220]
    }
    const-val call_tmp[2267163]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267165 'move' call_tmp[2267163](2267168 call qio_err_iserr[223646] call_tmp[2266978]))
    const-val call_tmp[2267170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267172 'move' call_tmp[2267170](2267174 '!=' call_tmp[2267163] 0))
    if call_tmp[2267170]
    {
      val error[2267179]:__wide_Error[2381123] "error variable" "temp"
      (2267181 'move' error[2267179] nil[44])
      wide-ref tmp[2434744]:channel(true,dynamic,false)[1060947] "temp"
      (2434747 'move' tmp[2434744] rvfRerefTmp[2084069])
      ref tmp[2434750]:__wide_Error[2381123] "temp"
      (2434754 'move' tmp[2434750](2434752 'set reference' error[2267179]))
      (2267185 call _ch_ioerror[1062865] tmp[2434744] call_tmp[2266978] "in lock" tmp[2434750])
      val errorExists[2267190]:bool[10] "temp"
      (2267192 'move' errorExists[2267190](2267194 '!=' error[2267179] nil[44]))
      if errorExists[2267190]
      {
        gotoErrorHandling handler[2267202] handler[2267202]
      }
      label handler[2267202]
      val errorExists[2267204]:bool[10] "temp"
      (2267206 'move' errorExists[2267204](2267208 '!=' error[2267179] nil[44]))
      if errorExists[2267204]
      {
        (2267213 '=' error[1811536] error[2267179])
        gotoErrorHandlingReturn _endlock[2267220] _endlock[2267220]
      }
    }
    label _endlock[2267220]
    val errorExists[2109616]:bool[10] "temp"
    (2109621 'move' errorExists[2109616](2109618 '!=' error[1811536] nil[44]))
    if errorExists[2109616]
    {
      gotoErrorHandling handler[1811537] handler[1811537]
    }
    label handler[1811537]
    val errorExists[2109624]:bool[10] "temp"
    (2109629 'move' errorExists[2109624](2109626 '!=' error[1811536] nil[44]))
    if errorExists[2109624]
    {
      (1811552 '=' error_out[1811532] error[1811536])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811564]:__wide_Error[2381123] "error variable" "temp"
    (1811573 'move' error[1811564] nil[44])
    wide-ref call_tmp[1180555]:string[26] "dead after last mention" "maybe param" "temp"
    (1180557 'move' call_tmp[1180555](1180674 '.v' args[1807150] x0[1176512]))
    ref rvfRerefTmp[2084076]:channel(true,dynamic,false)[1060947] "temp"
    (2084080 'move' rvfRerefTmp[2084076](2084077 'set reference' this[1807148]))
    val rvfRerefTmp[2084145]:locale[28] "temp"
    (2084148 'move' rvfRerefTmp[2084145] origLocale[1807152])
    ref tmp[2415965]:__wide_Error[2381123] "temp"
    (2415969 'move' tmp[2415965](2415967 'set reference' error[1811564]))
    (1180566 call _writeOne[1165160] rvfRerefTmp[2084076] call_tmp[1180555] rvfRerefTmp[2084145] tmp[2415965])
    val errorExists[2109632]:bool[10] "temp"
    (2109637 'move' errorExists[2109632](2109634 '!=' error[1811564] nil[44]))
    if errorExists[2109632]
    {
      gotoErrorHandling handler[1811565] handler[1811565]
    }
    label handler[1811565]
    val errorExists[2109640]:bool[10] "temp"
    (2109645 'move' errorExists[2109640](2109642 '!=' error[1811564] nil[44]))
    if errorExists[2109640]
    {
      (1811580 '=' error_out[1811532] error[1811564])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811592]:__wide_Error[2381123] "error variable" "temp"
    (1811601 'move' error[1811592] nil[44])
    wide-ref call_tmp[1180587]:codepointIndex[28274] "dead after last mention" "maybe param" "temp"
    (1180589 'move' call_tmp[1180587](1180682 '.v' args[1807150] x1[1176514]))
    ref rvfRerefTmp[2084083]:channel(true,dynamic,false)[1060947] "temp"
    (2084087 'move' rvfRerefTmp[2084083](2084084 'set reference' this[1807148]))
    val rvfRerefTmp[2084151]:locale[28] "temp"
    (2084154 'move' rvfRerefTmp[2084151] origLocale[1807152])
    ref tmp[2415972]:__wide_Error[2381123] "temp"
    (2415976 'move' tmp[2415972](2415974 'set reference' error[1811592]))
    (1180598 call _writeOne[1173913] rvfRerefTmp[2084083] call_tmp[1180587] rvfRerefTmp[2084151] tmp[2415972])
    val errorExists[2109648]:bool[10] "temp"
    (2109653 'move' errorExists[2109648](2109650 '!=' error[1811592] nil[44]))
    if errorExists[2109648]
    {
      gotoErrorHandling handler[1811593] handler[1811593]
    }
    label handler[1811593]
    val errorExists[2109656]:bool[10] "temp"
    (2109661 'move' errorExists[2109656](2109658 '!=' error[1811592] nil[44]))
    if errorExists[2109656]
    {
      (1811608 '=' error_out[1811532] error[1811592])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811620]:__wide_Error[2381123] "error variable" "temp"
    (1811629 'move' error[1811620] nil[44])
    wide-ref call_tmp[1180619]:string[26] "dead after last mention" "maybe param" "temp"
    (1180621 'move' call_tmp[1180619](1180690 '.v' args[1807150] x2[1176516]))
    ref rvfRerefTmp[2084090]:channel(true,dynamic,false)[1060947] "temp"
    (2084094 'move' rvfRerefTmp[2084090](2084091 'set reference' this[1807148]))
    val rvfRerefTmp[2084157]:locale[28] "temp"
    (2084160 'move' rvfRerefTmp[2084157] origLocale[1807152])
    ref tmp[2415979]:__wide_Error[2381123] "temp"
    (2415983 'move' tmp[2415979](2415981 'set reference' error[1811620]))
    (1180630 call _writeOne[1165160] rvfRerefTmp[2084090] call_tmp[1180619] rvfRerefTmp[2084157] tmp[2415979])
    val errorExists[2109664]:bool[10] "temp"
    (2109669 'move' errorExists[2109664](2109666 '!=' error[1811620] nil[44]))
    if errorExists[2109664]
    {
      gotoErrorHandling handler[1811621] handler[1811621]
    }
    label handler[1811621]
    val errorExists[2109672]:bool[10] "temp"
    (2109677 'move' errorExists[2109672](2109674 '!=' error[1811620] nil[44]))
    if errorExists[2109672]
    {
      (1811636 '=' error_out[1811532] error[1811620])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    val error[1811648]:__wide_Error[2381123] "error variable" "temp"
    (1811657 'move' error[1811648] nil[44])
    const-val coerce_tmp[1180701]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2415999]:int(64)[13] "temp"
    (1180705 'move' tmp[2415999](2370541 '.v' args[1807150] x3[1176518]))
    (2416002 'move' coerce_tmp[1180701] tmp[2415999])
    ref rvfRerefTmp[2084097]:channel(true,dynamic,false)[1060947] "temp"
    (2084101 'move' rvfRerefTmp[2084097](2084098 'set reference' this[1807148]))
    val rvfRerefTmp[2084163]:locale[28] "temp"
    (2084166 'move' rvfRerefTmp[2084163] origLocale[1807152])
    wide-ref tmp[2415986]:channel(true,dynamic,false)[1060947] "temp"
    (2415989 'move' tmp[2415986] rvfRerefTmp[2084097])
    ref tmp[2415992]:__wide_Error[2381123] "temp"
    (2415996 'move' tmp[2415992](2415994 'set reference' error[1811648]))
    (1180662 call _writeOne[1068937] tmp[2415986] coerce_tmp[1180701] rvfRerefTmp[2084163] tmp[2415992])
    val errorExists[2109680]:bool[10] "temp"
    (2109685 'move' errorExists[2109680](2109682 '!=' error[1811648] nil[44]))
    if errorExists[2109680]
    {
      gotoErrorHandling handler[1811649] handler[1811649]
    }
    label handler[1811649]
    val errorExists[2109688]:bool[10] "temp"
    (2109693 'move' errorExists[2109688](2109690 '!=' error[1811648] nil[44]))
    if errorExists[2109688]
    {
      (1811664 '=' error_out[1811532] error[1811648])
      gotoErrorHandlingReturn _endon_fn[1811534] _endon_fn[1811534]
    }
    label _endon_fn[1811534]
    (1180489 return _void[55])
  }
  function on_fn[1392469](const in arg this[1807296]:channel(true,dynamic,true)[1021825], const  wide-ref arg args[1807298]:([domain(1,int(64),false)] real(64),ioNewline)[1392594], const in arg origLocale[1807300]:locale[28], wide-ref arg error_out[1812374]:__wide_Error[2381123]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3017[2379587]:string[26] "temp"
    (2379588 'move' "in lock" "in lock")
    const-val local__str_literal_129[2379580]:string[26] "temp"
    (2379581 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2379574]:string[26] "temp"
    (2379575 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1812378]:__wide_Error[2381123] "error variable" "temp"
    (1812387 'move' error[1812378] nil[44])
    ref rvfRerefTmp[2084285]:channel(true,dynamic,true)[1021825] "temp"
    (2084289 'move' rvfRerefTmp[2084285](2084286 'set reference' this[1807296]))
    val err[2319396]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2319398]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319400 'move' call_tmp[2319398](2319403 call qio_int_to_err[223634] 0))
    (2319405 'move' err[2319396] call_tmp[2319398])
    const-val coerce_tmp[2319408]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2440794]:qio_channel_ptr_t[231465] "temp"
    (2319410 'move' tmp[2440794](2319412 '.v' this[1807296] _channel_internal[1021818]))
    (2440797 'move' coerce_tmp[2319408] tmp[2440794])
    const-val call_tmp[2319415]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319417 'move' call_tmp[2319415](2319419 'cast' c_void_ptr[149] coerce_tmp[2319408]))
    const-val call_tmp[2319422]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319424 'move' call_tmp[2319422](2319426 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2319429]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319431 'move' call_tmp[2319429](2319433 'ptr_eq' call_tmp[2319415] call_tmp[2319422]))
    if call_tmp[2319429]
    {
      const-val call_tmp[2319438]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2319440]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319442 'move' coerce_tmp[2319440](2319444 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2319447]:owned SystemError[1000238] "temp"
      (2319450 call fromSyserr[1017113] coerce_tmp[2319440] "Operation attempted on an invalid channel" ret_tmp[2319447])
      (2319454 'move' call_tmp[2319438] ret_tmp[2319447])
      val call_tmp[2319457]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2319459]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2319461]:owned Error[966458] "temp"
      ref i_x[2319463]:owned SystemError[1000238] "temp"
      (2319465 'move' i_x[2319463](2319467 'set reference' call_tmp[2319438]))
      ref i__retArg[2319469]:owned Error[966458] "temp"
      (2319471 'move' i__retArg[2319469](2319473 'set reference' ret_tmp[2319461]))
      val _formal_tmp_x[2319475]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2319477 'move' _formal_tmp_x[2319475] i_x[2319463])
      const-val ret[2319480]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2319482]:owned SystemError[1000238] "temp"
      (2319484 'move' i_this[2319482](2319486 'set reference' _formal_tmp_x[2319475]))
      val coerce_tmp[2319488]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2440800]:SystemError[264845] "temp"
      (2319490 'move' tmp[2440800](2319492 '.v' i_this[2319482] chpl_p[1000233]))
      (2440803 'move' coerce_tmp[2319488] tmp[2440800])
      val call_tmp[2319495]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319497 'move' call_tmp[2319495](2319499 'cast' Error[167938] coerce_tmp[2319488]))
      ref i_this[2319507]:owned SystemError[1000238] "temp"
      (2319509 'move' i_this[2319507](2319511 'set reference' _formal_tmp_x[2319475]))
      val tmp[2319513]:SystemError[264845] "temp"
      (2319515 'move' tmp[2319513](2319517 'cast' SystemError[264845] nil[44]))
      (2319520 '.=' i_this[2319507] chpl_p[1000233] tmp[2319513])
      val coerce_tmp[2319524]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319526 'move' coerce_tmp[2319524](2319528 'cast' object[22] call_tmp[2319495]))
      const-val call_tmp[2319531]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319533 'move' call_tmp[2319531](2319535 'ptr_eq' coerce_tmp[2319524] nil[44]))
      if call_tmp[2319531]
      {
        (2319541 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2319544]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2319546]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2440806]:__wide_Error[2381123] "temp"
      (2440809 'move' tmp[2440806] call_tmp[2319495])
      (2319549 call init[968094] initTemp[2319546] tmp[2440806])
      (2319552 'move' call_tmp[2319544] initTemp[2319546])
      (2319555 'move' ret[2319480] call_tmp[2319544])
      (2319559 call chpl__autoDestroy[1516200] _formal_tmp_x[2319475])
      (2319561 '=' i__retArg[2319469] ret[2319480])
      (2319564 'move' coerce_tmp[2319459] ret_tmp[2319461])
      const-val _formal_tmp_in_err[2319567]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2319569 'move' _formal_tmp_in_err[2319567] coerce_tmp[2319459])
      (2319572 'move' call_tmp[2319457](2319575 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2319567]))
      (2319577 '=' error[1812378] call_tmp[2319457])
      gotoErrorHandlingReturn _endlock[2319748] _endlock[2319748]
    }
    ref call_tmp[2319585]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319587 'move' call_tmp[2319585](2319589 '.' this[1807296] home[1021813]))
    const-val call_tmp[2319592]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319594]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319596 'move' coerce_tmp[2319594](2319598 '.v' call_tmp[2319585] _instance[89975]))
    val coerce_tmp[2319601]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319603 'move' coerce_tmp[2319601](2319605 'cast' object[22] coerce_tmp[2319594]))
    const-val call_tmp[2319608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2440812]:__wide_object[2381018] "temp"
    (2440815 'move' tmp[2440812] nil[44])
    (2319610 'move' call_tmp[2319608](2319612 'ptr_eq' coerce_tmp[2319601] tmp[2440812]))
    if call_tmp[2319608]
    {
      (2319618 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319621 'move' call_tmp[2319592](2319623 '_wide_get_locale' coerce_tmp[2319594]))
    val rvfDerefTmp[2319628]:channel(true,dynamic,true)[1021825] "temp"
    (2319630 'move' rvfDerefTmp[2319628] this[1807296])
    val isdirect[2319634]:bool[10] "temp"
    (2319636 'move' isdirect[2319634](2319639 call chpl_doDirectExecuteOn[187423] call_tmp[2319592]))
    if isdirect[2319634]
    {
      wide-ref tmp[2440818]:syserr[223584] "temp"
      (2440822 'move' tmp[2440818](2440820 'set reference' err[2319396]))
      (2319644 call on_fn[1392911] rvfDerefTmp[2319628] tmp[2440818])
    }
    {
      val _args_foron_fn[2319648]:_class_localson_fn[2094247] "temp"
      (2319650 'move' _args_foron_fn[2319648](2319652 'stack allocate class' _class_localson_fn[2094247]))
      (2319654 '.=' _args_foron_fn[2319648] _0_tmp[2094250] call_tmp[2319592])
      (2319658 '.=' _args_foron_fn[2319648] _1_rvfDerefTmp[2094252] rvfDerefTmp[2319628])
      ref tmp[2319662]:syserr[223584] "temp"
      (2319664 'move' tmp[2319662](2319666 'set reference' err[2319396]))
      wide-ref tmp[2440825]:syserr[223584] "temp"
      (2440828 'move' tmp[2440825] tmp[2319662])
      (2319668 '.=' _args_foron_fn[2319648] _2_err[2094254] tmp[2440825])
      val _args_vforon_fn[2319672]:c_void_ptr[149] "temp"
      (2319674 'move' _args_vforon_fn[2319672](2319676 'cast_to_void_star' _args_foron_fn[2319648]))
      val _args_sizeon_fn[2319678]:int(64)[13] "temp"
      (2319680 'move' _args_sizeon_fn[2319678](2319682 'sizeof_bundle' _class_localson_fn[2094247]))
      on(2319685 call wrapon_fn[2094293] call_tmp[2319592] _args_vforon_fn[2319672] _args_sizeon_fn[2319678] _args_foron_fn[2319648])
    }
    const-val call_tmp[2319691]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319693 'move' call_tmp[2319691](2319696 call qio_err_iserr[223646] err[2319396]))
    const-val call_tmp[2319698]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319700 'move' call_tmp[2319698](2319702 '!=' call_tmp[2319691] 0))
    if call_tmp[2319698]
    {
      val error[2319707]:__wide_Error[2381123] "error variable" "temp"
      (2319709 'move' error[2319707] nil[44])
      ref tmp[2440831]:__wide_Error[2381123] "temp"
      (2440835 'move' tmp[2440831](2440833 'set reference' error[2319707]))
      (2319713 call _ch_ioerror[1393261] rvfRerefTmp[2084285] err[2319396] "in lock" tmp[2440831])
      val errorExists[2319718]:bool[10] "temp"
      (2319720 'move' errorExists[2319718](2319722 '!=' error[2319707] nil[44]))
      if errorExists[2319718]
      {
        gotoErrorHandling handler[2319730] handler[2319730]
      }
      label handler[2319730]
      val errorExists[2319732]:bool[10] "temp"
      (2319734 'move' errorExists[2319732](2319736 '!=' error[2319707] nil[44]))
      if errorExists[2319732]
      {
        (2319741 '=' error[1812378] error[2319707])
        gotoErrorHandlingReturn _endlock[2319748] _endlock[2319748]
      }
    }
    label _endlock[2319748]
    val errorExists[2110016]:bool[10] "temp"
    (2110021 'move' errorExists[2110016](2110018 '!=' error[1812378] nil[44]))
    if errorExists[2110016]
    {
      gotoErrorHandling handler[1812379] handler[1812379]
    }
    label handler[1812379]
    val errorExists[2110024]:bool[10] "temp"
    (2110029 'move' errorExists[2110024](2110026 '!=' error[1812378] nil[44]))
    if errorExists[2110024]
    {
      (1812394 '=' error_out[1812374] error[1812378])
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    val error[1812406]:__wide_Error[2381123] "error variable" "temp"
    (1812415 'move' error[1812406] nil[44])
    const-val call_tmp[1393677]:[domain(1,int(64),false)] real(64)[1365840] "dead after last mention" "maybe param" "temp"
    val tmp[2417088]:[domain(1,int(64),false)] real(64)[1365840] "temp"
    (1393679 'move' tmp[2417088](1393785 '.v' args[1807298] x0[1392590]))
    (2417091 'move' call_tmp[1393677] tmp[2417088])
    ref rvfRerefTmp[2084292]:channel(true,dynamic,true)[1021825] "temp"
    (2084296 'move' rvfRerefTmp[2084292](2084293 'set reference' this[1807296]))
    val rvfRerefTmp[2084333]:locale[28] "temp"
    (2084336 'move' rvfRerefTmp[2084333] origLocale[1807300])
    ref tmp[2417094]:__wide_Error[2381123] "temp"
    (2417098 'move' tmp[2417094](2417096 'set reference' error[1812406]))
    (1393688 call _writeOne[1393788] rvfRerefTmp[2084292] call_tmp[1393677] rvfRerefTmp[2084333] tmp[2417094])
    val errorExists[2110032]:bool[10] "temp"
    (2110037 'move' errorExists[2110032](2110034 '!=' error[1812406] nil[44]))
    if errorExists[2110032]
    {
      gotoErrorHandling handler[1812407] handler[1812407]
    }
    label handler[1812407]
    val errorExists[2110040]:bool[10] "temp"
    (2110045 'move' errorExists[2110040](2110042 '!=' error[1812406] nil[44]))
    if errorExists[2110040]
    {
      (1812422 '=' error_out[1812374] error[1812406])
      ref call_tmp[2320122]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320124 'move' call_tmp[2320122](2320126 '.' this[1807296] home[1021813]))
      const-val call_tmp[2320129]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320131]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320133 'move' coerce_tmp[2320131](2320135 '.v' call_tmp[2320122] _instance[89975]))
      val coerce_tmp[2320138]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320140 'move' coerce_tmp[2320138](2320142 'cast' object[22] coerce_tmp[2320131]))
      const-val call_tmp[2320145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2440882]:__wide_object[2381018] "temp"
      (2440885 'move' tmp[2440882] nil[44])
      (2320147 'move' call_tmp[2320145](2320149 'ptr_eq' coerce_tmp[2320138] tmp[2440882]))
      if call_tmp[2320145]
      {
        (2320155 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320158 'move' call_tmp[2320129](2320160 '_wide_get_locale' coerce_tmp[2320131]))
      val rvfDerefTmp[2320165]:channel(true,dynamic,true)[1021825] "temp"
      (2320167 'move' rvfDerefTmp[2320165] this[1807296])
      val isdirect[2320171]:bool[10] "temp"
      (2320173 'move' isdirect[2320171](2320176 call chpl_doDirectExecuteOn[187423] call_tmp[2320129]))
      if isdirect[2320171]
      {
        (2320181 call on_fn[1393602] rvfDerefTmp[2320165])
      }
      {
        val _args_foron_fn[2320184]:_class_localson_fn[2094500] "temp"
        (2320186 'move' _args_foron_fn[2320184](2320188 'stack allocate class' _class_localson_fn[2094500]))
        (2320190 '.=' _args_foron_fn[2320184] _0_tmp[2094503] call_tmp[2320129])
        (2320194 '.=' _args_foron_fn[2320184] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320165])
        val _args_vforon_fn[2320198]:c_void_ptr[149] "temp"
        (2320200 'move' _args_vforon_fn[2320198](2320202 'cast_to_void_star' _args_foron_fn[2320184]))
        val _args_sizeon_fn[2320204]:int(64)[13] "temp"
        (2320206 'move' _args_sizeon_fn[2320204](2320208 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320211 call wrapon_fn[2094534] call_tmp[2320129] _args_vforon_fn[2320198] _args_sizeon_fn[2320204] _args_foron_fn[2320184])
      }
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    val error[1812434]:__wide_Error[2381123] "error variable" "temp"
    (1812443 'move' error[1812434] nil[44])
    wide-ref call_tmp[1393709]:ioNewline[238701] "dead after last mention" "maybe param" "temp"
    (1393711 'move' call_tmp[1393709](1429444 '.v' args[1807298] x1[1392592]))
    ref rvfRerefTmp[2084299]:channel(true,dynamic,true)[1021825] "temp"
    (2084303 'move' rvfRerefTmp[2084299](2084300 'set reference' this[1807296]))
    val rvfRerefTmp[2084339]:locale[28] "temp"
    (2084342 'move' rvfRerefTmp[2084339] origLocale[1807300])
    ref tmp[2417101]:__wide_Error[2381123] "temp"
    (2417105 'move' tmp[2417101](2417103 'set reference' error[1812434]))
    (1393720 call _writeOne[1429447] rvfRerefTmp[2084299] call_tmp[1393709] rvfRerefTmp[2084339] tmp[2417101])
    val errorExists[2110048]:bool[10] "temp"
    (2110053 'move' errorExists[2110048](2110050 '!=' error[1812434] nil[44]))
    if errorExists[2110048]
    {
      gotoErrorHandling handler[1812435] handler[1812435]
    }
    label handler[1812435]
    val errorExists[2110056]:bool[10] "temp"
    (2110061 'move' errorExists[2110056](2110058 '!=' error[1812434] nil[44]))
    if errorExists[2110056]
    {
      (1812450 '=' error_out[1812374] error[1812434])
      ref call_tmp[2320222]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320224 'move' call_tmp[2320222](2320226 '.' this[1807296] home[1021813]))
      const-val call_tmp[2320229]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320231]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320233 'move' coerce_tmp[2320231](2320235 '.v' call_tmp[2320222] _instance[89975]))
      val coerce_tmp[2320238]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320240 'move' coerce_tmp[2320238](2320242 'cast' object[22] coerce_tmp[2320231]))
      const-val call_tmp[2320245]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2440888]:__wide_object[2381018] "temp"
      (2440891 'move' tmp[2440888] nil[44])
      (2320247 'move' call_tmp[2320245](2320249 'ptr_eq' coerce_tmp[2320238] tmp[2440888]))
      if call_tmp[2320245]
      {
        (2320255 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320258 'move' call_tmp[2320229](2320260 '_wide_get_locale' coerce_tmp[2320231]))
      val rvfDerefTmp[2320265]:channel(true,dynamic,true)[1021825] "temp"
      (2320267 'move' rvfDerefTmp[2320265] this[1807296])
      val isdirect[2320271]:bool[10] "temp"
      (2320273 'move' isdirect[2320271](2320276 call chpl_doDirectExecuteOn[187423] call_tmp[2320229]))
      if isdirect[2320271]
      {
        (2320281 call on_fn[1393602] rvfDerefTmp[2320265])
      }
      {
        val _args_foron_fn[2320284]:_class_localson_fn[2094500] "temp"
        (2320286 'move' _args_foron_fn[2320284](2320288 'stack allocate class' _class_localson_fn[2094500]))
        (2320290 '.=' _args_foron_fn[2320284] _0_tmp[2094503] call_tmp[2320229])
        (2320294 '.=' _args_foron_fn[2320284] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320265])
        val _args_vforon_fn[2320298]:c_void_ptr[149] "temp"
        (2320300 'move' _args_vforon_fn[2320298](2320302 'cast_to_void_star' _args_foron_fn[2320284]))
        val _args_sizeon_fn[2320304]:int(64)[13] "temp"
        (2320306 'move' _args_sizeon_fn[2320304](2320308 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320311 call wrapon_fn[2094534] call_tmp[2320229] _args_vforon_fn[2320298] _args_sizeon_fn[2320304] _args_foron_fn[2320284])
      }
      gotoErrorHandlingReturn _endon_fn[1812376] _endon_fn[1812376]
    }
    ref call_tmp[2320322]:locale[28] "dead after last mention" "maybe param" "temp"
    (2320324 'move' call_tmp[2320322](2320326 '.' this[1807296] home[1021813]))
    const-val call_tmp[2320329]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2320331]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320333 'move' coerce_tmp[2320331](2320335 '.v' call_tmp[2320322] _instance[89975]))
    val coerce_tmp[2320338]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320340 'move' coerce_tmp[2320338](2320342 'cast' object[22] coerce_tmp[2320331]))
    const-val call_tmp[2320345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2440894]:__wide_object[2381018] "temp"
    (2440897 'move' tmp[2440894] nil[44])
    (2320347 'move' call_tmp[2320345](2320349 'ptr_eq' coerce_tmp[2320338] tmp[2440894]))
    if call_tmp[2320345]
    {
      (2320355 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2320358 'move' call_tmp[2320329](2320360 '_wide_get_locale' coerce_tmp[2320331]))
    val rvfDerefTmp[2320365]:channel(true,dynamic,true)[1021825] "temp"
    (2320367 'move' rvfDerefTmp[2320365] this[1807296])
    val isdirect[2320371]:bool[10] "temp"
    (2320373 'move' isdirect[2320371](2320376 call chpl_doDirectExecuteOn[187423] call_tmp[2320329]))
    if isdirect[2320371]
    {
      (2320381 call on_fn[1393602] rvfDerefTmp[2320365])
    }
    {
      val _args_foron_fn[2320384]:_class_localson_fn[2094500] "temp"
      (2320386 'move' _args_foron_fn[2320384](2320388 'stack allocate class' _class_localson_fn[2094500]))
      (2320390 '.=' _args_foron_fn[2320384] _0_tmp[2094503] call_tmp[2320329])
      (2320394 '.=' _args_foron_fn[2320384] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320365])
      val _args_vforon_fn[2320398]:c_void_ptr[149] "temp"
      (2320400 'move' _args_vforon_fn[2320398](2320402 'cast_to_void_star' _args_foron_fn[2320384]))
      val _args_sizeon_fn[2320404]:int(64)[13] "temp"
      (2320406 'move' _args_sizeon_fn[2320404](2320408 'sizeof_bundle' _class_localson_fn[2094500]))
      on(2320411 call wrapon_fn[2094534] call_tmp[2320329] _args_vforon_fn[2320398] _args_sizeon_fn[2320404] _args_foron_fn[2320384])
    }
    label _endon_fn[1812376]
    (1392572 return _void[55])
  }
  function on_fn[1392911](const in arg this[1807302]:channel(true,dynamic,true)[1021825], wide-ref arg err[1807304]:syserr[223584]) : void[4] "inlined function" "on" "resolved"
  {
    const-val call_tmp[1392925]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1393252]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417063]:qio_channel_ptr_t[231465] "temp"
    (1393256 'move' tmp[2417063](2372858 '.v' this[1807302] _channel_internal[1021818]))
    (2417066 'move' coerce_tmp[1393252] tmp[2417063])
    (1392927 'move' call_tmp[1392925](1392930 call qio_channel_lock[233007] coerce_tmp[1393252]))
    (2207240 '=' err[1807304] call_tmp[1392925])
    (1392938 return _void[55])
  }
  function on_fn[1393328](const in arg this[1807306]:channel(true,dynamic,true)[1021825], wide-ref arg path[1807308]:string[26], wide-ref arg offset[1807310]:int(64)[13], wide-ref arg error_out[1812554]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1393334]:c_string[19] "dead at end of block" "insert auto destroy"
    (1393535 'move' tmp_path[1393334](1393533 'cast' c_string[19] nil[44]))
    val tmp_offset[1393340]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1393538 'move' tmp_offset[1393340] 0)
    (2207940 call qio_int_to_err[223634] 0)
    const-val call_tmp[1393382]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1393490]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1393496 'move' coerce_tmp[1393490](1393492 'cast' int(32)[95] 1))
    const-val coerce_tmp[1393498]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417076]:qio_channel_ptr_t[231465] "temp"
    (1393502 'move' tmp[2417076](2372871 '.v' this[1807306] _channel_internal[1021818]))
    (2417079 'move' coerce_tmp[1393498] tmp[2417076])
    (1393384 'move' call_tmp[1393382](1393387 call qio_channel_path_offset[232924] coerce_tmp[1393490] coerce_tmp[1393498] tmp_path[1393334] tmp_offset[1393340]))
    const-val call_tmp[2206603]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206605 'move' call_tmp[2206603](2206608 call qio_err_iserr[223646] call_tmp[1393382]))
    const-val call_tmp[2206610]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2206612 'move' call_tmp[2206610](2206614 '==' call_tmp[2206603] 0))
    if call_tmp[2206610]
    {
      const-val call_tmp[1393416]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1812559]:Error[167938] "error variable" "temp"
      (1812561 'move' error[1812559] nil[44])
      const-val call_tmp[2203623]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2203625 'move' call_tmp[2203623](2203627 'string_length_bytes' tmp_path[1393334]))
      val errorExists[2110104]:bool[10] "temp"
      (2110109 'move' errorExists[2110104](2110106 '!=' error[1812559] nil[44]))
      if errorExists[2110104]
      {
        val tmp[2448175]:__wide_Error[2381123] "temp"
        (2448177 'move' tmp[2448175] error[1812559])
        (1812565 '=' error_out[1812554] tmp[2448175])
        gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
      }
      val error[1812574]:__wide_Error[2381123] "error variable" "temp"
      (1812576 'move' error[1812574] nil[44])
      const-val ret[2142179]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2142181]:c_ptr(uint(8))[937423] "dead after last mention" "expr temp" "maybe param" "temp"
      (2142183 'move' call_tmp[2142181](2142185 'cast' c_ptr(uint(8))[937423] tmp_path[1393334]))
      val error[2142190]:__wide_Error[2381123] "error variable" "temp"
      (2142192 'move' error[2142190] nil[44])
      const-val ret[2142195]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2142197]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2142199]:__wide_Error[2381123] "error variable" "temp"
      (2142201 'move' error[2142199] nil[44])
      const-val ret_tmp[2142204]:string[26] "temp"
      ref tmp[2426659]:__wide_Error[2381123] "temp"
      (2426663 'move' tmp[2426659](2426661 'set reference' error[2142199]))
      (2142207 call decodeByteBuffer[173892] call_tmp[2142181] call_tmp[2203623] replace[173648] tmp[2426659] ret_tmp[2142204])
      (2142213 'move' call_tmp[2142197] ret_tmp[2142204])
      val errorExists[2142216]:bool[10] "temp"
      (2142218 'move' errorExists[2142216](2142220 '!=' error[2142199] nil[44]))
      if errorExists[2142216]
      {
        (2142225 '=' error[2142190] error[2142199])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2142234] _endcreateStringWithNewBuffer[2142234]
      }
      (2142231 'move' ret[2142195] call_tmp[2142197])
      label _endcreateStringWithNewBuffer[2142234]
      val errorExists[2142239]:bool[10] "temp"
      (2142241 'move' errorExists[2142239](2142243 '!=' error[2142190] nil[44]))
      if errorExists[2142239]
      {
        (2142248 '=' error[1812574] error[2142190])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2142257] _endcreateStringWithNewBuffer[2142257]
      }
      (2142254 'move' ret[2142179] ret[2142195])
      label _endcreateStringWithNewBuffer[2142257]
      (1829102 'move' call_tmp[1393416] ret[2142179])
      val errorExists[2110112]:bool[10] "temp"
      (2110117 'move' errorExists[2110112](2110114 '!=' error[1812574] nil[44]))
      if errorExists[2110112]
      {
        (1812580 '=' error_out[1812554] error[1812574])
        gotoErrorHandlingReturn _endon_fn[1812556] _endon_fn[1812556]
      }
      (1393426 call =[38269] path[1807308] call_tmp[1393416])
      ref i_x[2132817]:string[26] "temp"
      (2132821 'move' i_x[2132817](2132819 'set reference' call_tmp[1393416]))
      wide-ref tmp[2426052]:string[26] "temp"
      (2426055 'move' tmp[2426052] i_x[2132817])
      (2132825 call deinit[30831] tmp[2426052])
      ref i_cs[2120247]:c_string[19] "temp"
      (2120251 'move' i_cs[2120247](2120249 'set reference' tmp_path[1393334]))
      const-val call_tmp[2120254]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120256 'move' call_tmp[2120254](2120258 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2120261]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120263 'move' call_tmp[2120261](2120265 'cast' c_string[19] call_tmp[2120254]))
      const-val coerce_tmp[2120268]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2120270 'move' coerce_tmp[2120268] tmp_path[1393334])
      const-val call_tmp[2120274]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120276 'move' call_tmp[2120274](2120278 'string_compare' coerce_tmp[2120268] call_tmp[2120261]))
      const-val call_tmp[2120281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2120283 'move' call_tmp[2120281](2120285 '!=' call_tmp[2120274] 0))
      if call_tmp[2120281]
      {
        (2120291 call chpl_rt_free_c_string[22714] i_cs[2120247])
      }
      (2122431 '=' offset[1807310] tmp_offset[1393340])
    }
    label _endon_fn[1812556]
    (1393445 return _void[55])
  }
  function on_fn[1393602](const in arg this[1807312]:channel(true,dynamic,true)[1021825]) : void[4] "inlined function" "on" "resolved"
  {
    const-val coerce_tmp[1393643]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417082]:qio_channel_ptr_t[231465] "temp"
    (1393647 'move' tmp[2417082](2372883 '.v' this[1807312] _channel_internal[1021818]))
    (2417085 'move' coerce_tmp[1393643] tmp[2417082])
    (1393617 call qio_channel_unlock[233019] coerce_tmp[1393643])
    (1393619 return _void[55])
  }
  function on_fn[1400789](const  wide-ref arg this[1807322]:channel(true,dynamic,false)[1060947], const in arg element[1807324]:int(64)[13], wide-ref arg ret[1807326]:int(64)[13]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1400803]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1400849]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417198]:qio_channel_ptr_t[231465] "temp"
    (1400853 'move' tmp[2417198](2372960 '.v' this[1807322] _channel_internal[1060940]))
    (2417201 'move' coerce_tmp[1400849] tmp[2417198])
    (1400805 'move' call_tmp[1400803](1400808 call qio_channel_style_element[233102] coerce_tmp[1400849] element[1807324]))
    (2122437 '=' ret[1807326] call_tmp[1400803])
    (1400817 return _void[55])
  }
  function on_fn[1401829](const  wide-ref arg this[1807328]:channel(true,dynamic,false)[1060947], wide-ref arg ret[1807330]:uint(8)[100]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1401843]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1401896]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417204]:qio_channel_ptr_t[231465] "temp"
    (1401900 'move' tmp[2417204](2372971 '.v' this[1807328] _channel_internal[1060940]))
    (2417207 'move' coerce_tmp[1401896] tmp[2417204])
    (1401845 'move' call_tmp[1401843](1401848 call qio_channel_binary[233057] coerce_tmp[1401896]))
    (2195804 '=' ret[1807330] call_tmp[1401843])
    (1401856 return _void[55])
  }
  function on_fn[1407864](const  wide-ref arg this[1807332]:channel(true,dynamic,false)[1060947], const in arg x[1807334]:__wide__ddata__real64[2381466], const in arg len[1807336]:int(64)[13], wide-ref arg err[1807338]:syserr[223584], wide-ref arg error_out[1813096]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    const-val local__str_literal_3017[2379750]:string[26] "temp"
    (2379751 'move' "in lock" "in lock")
    const-val local__str_literal_129[2379744]:string[26] "temp"
    (2379745 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2379738]:string[26] "temp"
    (2379739 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1813100]:__wide_Error[2381123] "error variable" "temp"
    (1813109 'move' error[1813100] nil[44])
    const-val call_tmp[2267233]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267235 'move' call_tmp[2267233](2267238 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2267243]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434757]:qio_channel_ptr_t[231465] "temp"
    (2267245 'move' tmp[2434757](2267247 '.v' this[1807332] _channel_internal[1060940]))
    (2434760 'move' coerce_tmp[2267243] tmp[2434757])
    const-val call_tmp[2267250]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267252 'move' call_tmp[2267250](2267254 'cast' c_void_ptr[149] coerce_tmp[2267243]))
    const-val call_tmp[2267257]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267259 'move' call_tmp[2267257](2267261 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267266 'move' call_tmp[2267264](2267268 'ptr_eq' call_tmp[2267250] call_tmp[2267257]))
    if call_tmp[2267264]
    {
      const-val call_tmp[2267273]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267275]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267277 'move' coerce_tmp[2267275](2267279 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267282]:owned SystemError[1000238] "temp"
      (2267285 call fromSyserr[1017113] coerce_tmp[2267275] "Operation attempted on an invalid channel" ret_tmp[2267282])
      (2267289 'move' call_tmp[2267273] ret_tmp[2267282])
      val call_tmp[2267292]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267294]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267296]:owned Error[966458] "temp"
      ref i_x[2267298]:owned SystemError[1000238] "temp"
      (2267300 'move' i_x[2267298](2267302 'set reference' call_tmp[2267273]))
      ref i__retArg[2267304]:owned Error[966458] "temp"
      (2267306 'move' i__retArg[2267304](2267308 'set reference' ret_tmp[2267296]))
      val _formal_tmp_x[2267310]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267312 'move' _formal_tmp_x[2267310] i_x[2267298])
      const-val ret[2267315]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267317]:owned SystemError[1000238] "temp"
      (2267319 'move' i_this[2267317](2267321 'set reference' _formal_tmp_x[2267310]))
      val coerce_tmp[2267323]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434763]:SystemError[264845] "temp"
      (2267325 'move' tmp[2434763](2267327 '.v' i_this[2267317] chpl_p[1000233]))
      (2434766 'move' coerce_tmp[2267323] tmp[2434763])
      val call_tmp[2267330]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267332 'move' call_tmp[2267330](2267334 'cast' Error[167938] coerce_tmp[2267323]))
      ref i_this[2267342]:owned SystemError[1000238] "temp"
      (2267344 'move' i_this[2267342](2267346 'set reference' _formal_tmp_x[2267310]))
      val tmp[2267348]:SystemError[264845] "temp"
      (2267350 'move' tmp[2267348](2267352 'cast' SystemError[264845] nil[44]))
      (2267355 '.=' i_this[2267342] chpl_p[1000233] tmp[2267348])
      val coerce_tmp[2267359]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267361 'move' coerce_tmp[2267359](2267363 'cast' object[22] call_tmp[2267330]))
      const-val call_tmp[2267366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267368 'move' call_tmp[2267366](2267370 'ptr_eq' coerce_tmp[2267359] nil[44]))
      if call_tmp[2267366]
      {
        (2267376 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267379]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267381]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434769]:__wide_Error[2381123] "temp"
      (2434772 'move' tmp[2434769] call_tmp[2267330])
      (2267384 call init[968094] initTemp[2267381] tmp[2434769])
      (2267387 'move' call_tmp[2267379] initTemp[2267381])
      (2267390 'move' ret[2267315] call_tmp[2267379])
      (2267394 call chpl__autoDestroy[1516200] _formal_tmp_x[2267310])
      (2267396 '=' i__retArg[2267304] ret[2267315])
      (2267399 'move' coerce_tmp[2267294] ret_tmp[2267296])
      const-val _formal_tmp_in_err[2267402]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267404 'move' _formal_tmp_in_err[2267402] coerce_tmp[2267294])
      (2267407 'move' call_tmp[2267292](2267410 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267402]))
      (2267412 '=' error[1813100] call_tmp[2267292])
      gotoErrorHandlingReturn _endlock[2267475] _endlock[2267475]
    }
    const-val call_tmp[2267418]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267420 'move' call_tmp[2267418](2267423 call qio_err_iserr[223646] call_tmp[2267233]))
    const-val call_tmp[2267425]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267427 'move' call_tmp[2267425](2267429 '!=' call_tmp[2267418] 0))
    if call_tmp[2267425]
    {
      val error[2267434]:__wide_Error[2381123] "error variable" "temp"
      (2267436 'move' error[2267434] nil[44])
      ref tmp[2434775]:__wide_Error[2381123] "temp"
      (2434779 'move' tmp[2434775](2434777 'set reference' error[2267434]))
      (2267440 call _ch_ioerror[1062865] this[1807332] call_tmp[2267233] "in lock" tmp[2434775])
      val errorExists[2267445]:bool[10] "temp"
      (2267447 'move' errorExists[2267445](2267449 '!=' error[2267434] nil[44]))
      if errorExists[2267445]
      {
        gotoErrorHandling handler[2267457] handler[2267457]
      }
      label handler[2267457]
      val errorExists[2267459]:bool[10] "temp"
      (2267461 'move' errorExists[2267459](2267463 '!=' error[2267434] nil[44]))
      if errorExists[2267459]
      {
        (2267468 '=' error[1813100] error[2267434])
        gotoErrorHandlingReturn _endlock[2267475] _endlock[2267475]
      }
    }
    label _endlock[2267475]
    val errorExists[2110312]:bool[10] "temp"
    (2110317 'move' errorExists[2110312](2110314 '!=' error[1813100] nil[44]))
    if errorExists[2110312]
    {
      gotoErrorHandling handler[1813101] handler[1813101]
    }
    label handler[1813101]
    val errorExists[2110320]:bool[10] "temp"
    (2110325 'move' errorExists[2110320](2110322 '!=' error[1813100] nil[44]))
    if errorExists[2110320]
    {
      (1813116 '=' error_out[1813096] error[1813100])
      gotoErrorHandlingReturn _endon_fn[1813098] _endon_fn[1813098]
    }
    const-val call_tmp[1407892]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1408009]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1408015 'move' coerce_tmp[1408009](1408011 'cast' int(32)[95] 0))
    const-val coerce_tmp[1408017]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417230]:qio_channel_ptr_t[231465] "temp"
    (1408021 'move' tmp[2417230](2373011 '.v' this[1807332] _channel_internal[1060940]))
    (2417233 'move' coerce_tmp[1408017] tmp[2417230])
    const-val tmp[2384350]:_ddata(real(64))[1357916] "temp"
    (2384356 'local_check' x[1807334] c"references to remote data cannot be passed to external routines like 'qio_channel_write_amt'")
    (2384358 'move' tmp[2384350] x[1807334])
    (1407894 'move' call_tmp[1407892](1407897 call qio_channel_write_amt[1407983] coerce_tmp[1408009] coerce_tmp[1408017] tmp[2384350] len[1807336]))
    (2384361 'move' x[1807334] tmp[2384350])
    (2207258 '=' err[1807338] call_tmp[1407892])
    label _endon_fn[1813098]
    (1407908 return _void[55])
  }
  function on_fn[1408604](const  wide-ref arg this[1807340]:channel(true,dynamic,false)[1060947], const in arg x[1807342]:ioLiteral[238753], const in arg origLocale[1807344]:locale[28], wide-ref arg error_out[1813211]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    const-val local__str_literal_3017[2379780]:string[26] "temp"
    (2379781 'move' "in lock" "in lock")
    const-val local__str_literal_129[2379774]:string[26] "temp"
    (2379775 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2379768]:string[26] "temp"
    (2379769 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1813215]:__wide_Error[2381123] "error variable" "temp"
    (1813224 'move' error[1813215] nil[44])
    const-val call_tmp[2267488]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267490 'move' call_tmp[2267488](2267493 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2267498]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434782]:qio_channel_ptr_t[231465] "temp"
    (2267500 'move' tmp[2434782](2267502 '.v' this[1807340] _channel_internal[1060940]))
    (2434785 'move' coerce_tmp[2267498] tmp[2434782])
    const-val call_tmp[2267505]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267507 'move' call_tmp[2267505](2267509 'cast' c_void_ptr[149] coerce_tmp[2267498]))
    const-val call_tmp[2267512]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267514 'move' call_tmp[2267512](2267516 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267519]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267521 'move' call_tmp[2267519](2267523 'ptr_eq' call_tmp[2267505] call_tmp[2267512]))
    if call_tmp[2267519]
    {
      const-val call_tmp[2267528]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267530]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267532 'move' coerce_tmp[2267530](2267534 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267537]:owned SystemError[1000238] "temp"
      (2267540 call fromSyserr[1017113] coerce_tmp[2267530] "Operation attempted on an invalid channel" ret_tmp[2267537])
      (2267544 'move' call_tmp[2267528] ret_tmp[2267537])
      val call_tmp[2267547]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267549]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267551]:owned Error[966458] "temp"
      ref i_x[2267553]:owned SystemError[1000238] "temp"
      (2267555 'move' i_x[2267553](2267557 'set reference' call_tmp[2267528]))
      ref i__retArg[2267559]:owned Error[966458] "temp"
      (2267561 'move' i__retArg[2267559](2267563 'set reference' ret_tmp[2267551]))
      val _formal_tmp_x[2267565]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267567 'move' _formal_tmp_x[2267565] i_x[2267553])
      const-val ret[2267570]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267572]:owned SystemError[1000238] "temp"
      (2267574 'move' i_this[2267572](2267576 'set reference' _formal_tmp_x[2267565]))
      val coerce_tmp[2267578]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434788]:SystemError[264845] "temp"
      (2267580 'move' tmp[2434788](2267582 '.v' i_this[2267572] chpl_p[1000233]))
      (2434791 'move' coerce_tmp[2267578] tmp[2434788])
      val call_tmp[2267585]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267587 'move' call_tmp[2267585](2267589 'cast' Error[167938] coerce_tmp[2267578]))
      ref i_this[2267597]:owned SystemError[1000238] "temp"
      (2267599 'move' i_this[2267597](2267601 'set reference' _formal_tmp_x[2267565]))
      val tmp[2267603]:SystemError[264845] "temp"
      (2267605 'move' tmp[2267603](2267607 'cast' SystemError[264845] nil[44]))
      (2267610 '.=' i_this[2267597] chpl_p[1000233] tmp[2267603])
      val coerce_tmp[2267614]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267616 'move' coerce_tmp[2267614](2267618 'cast' object[22] call_tmp[2267585]))
      const-val call_tmp[2267621]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267623 'move' call_tmp[2267621](2267625 'ptr_eq' coerce_tmp[2267614] nil[44]))
      if call_tmp[2267621]
      {
        (2267631 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267634]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267636]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434794]:__wide_Error[2381123] "temp"
      (2434797 'move' tmp[2434794] call_tmp[2267585])
      (2267639 call init[968094] initTemp[2267636] tmp[2434794])
      (2267642 'move' call_tmp[2267634] initTemp[2267636])
      (2267645 'move' ret[2267570] call_tmp[2267634])
      (2267649 call chpl__autoDestroy[1516200] _formal_tmp_x[2267565])
      (2267651 '=' i__retArg[2267559] ret[2267570])
      (2267654 'move' coerce_tmp[2267549] ret_tmp[2267551])
      const-val _formal_tmp_in_err[2267657]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267659 'move' _formal_tmp_in_err[2267657] coerce_tmp[2267549])
      (2267662 'move' call_tmp[2267547](2267665 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267657]))
      (2267667 '=' error[1813215] call_tmp[2267547])
      gotoErrorHandlingReturn _endlock[2267730] _endlock[2267730]
    }
    const-val call_tmp[2267673]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267675 'move' call_tmp[2267673](2267678 call qio_err_iserr[223646] call_tmp[2267488]))
    const-val call_tmp[2267680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267682 'move' call_tmp[2267680](2267684 '!=' call_tmp[2267673] 0))
    if call_tmp[2267680]
    {
      val error[2267689]:__wide_Error[2381123] "error variable" "temp"
      (2267691 'move' error[2267689] nil[44])
      ref tmp[2434800]:__wide_Error[2381123] "temp"
      (2434804 'move' tmp[2434800](2434802 'set reference' error[2267689]))
      (2267695 call _ch_ioerror[1062865] this[1807340] call_tmp[2267488] "in lock" tmp[2434800])
      val errorExists[2267700]:bool[10] "temp"
      (2267702 'move' errorExists[2267700](2267704 '!=' error[2267689] nil[44]))
      if errorExists[2267700]
      {
        gotoErrorHandling handler[2267712] handler[2267712]
      }
      label handler[2267712]
      val errorExists[2267714]:bool[10] "temp"
      (2267716 'move' errorExists[2267714](2267718 '!=' error[2267689] nil[44]))
      if errorExists[2267714]
      {
        (2267723 '=' error[1813215] error[2267689])
        gotoErrorHandlingReturn _endlock[2267730] _endlock[2267730]
      }
    }
    label _endlock[2267730]
    val errorExists[2110368]:bool[10] "temp"
    (2110373 'move' errorExists[2110368](2110370 '!=' error[1813215] nil[44]))
    if errorExists[2110368]
    {
      gotoErrorHandling handler[1813216] handler[1813216]
    }
    label handler[1813216]
    val errorExists[2110376]:bool[10] "temp"
    (2110381 'move' errorExists[2110376](2110378 '!=' error[1813215] nil[44]))
    if errorExists[2110376]
    {
      (1813230 call chpl_uncaught_error[170243] error[1813215])
    }
    val error[1813241]:__wide_Error[2381123] "error variable" "temp"
    (1813250 'move' error[1813241] nil[44])
    ref rvfRerefTmp[2084394]:ioLiteral[238753] "temp"
    (2084398 'move' rvfRerefTmp[2084394](2084395 'set reference' x[1807342]))
    val rvfRerefTmp[2084407]:locale[28] "temp"
    (2084410 'move' rvfRerefTmp[2084407] origLocale[1807344])
    ref tmp[2417236]:__wide_Error[2381123] "temp"
    (2417240 'move' tmp[2417236](2417238 'set reference' error[1813241]))
    (1408637 call _writeOne[1408673] this[1807340] rvfRerefTmp[2084394] rvfRerefTmp[2084407] tmp[2417236])
    val errorExists[2110384]:bool[10] "temp"
    (2110389 'move' errorExists[2110384](2110386 '!=' error[1813241] nil[44]))
    if errorExists[2110384]
    {
      gotoErrorHandling handler[1813242] handler[1813242]
    }
    label handler[1813242]
    val errorExists[2110392]:bool[10] "temp"
    (2110397 'move' errorExists[2110392](2110394 '!=' error[1813241] nil[44]))
    if errorExists[2110392]
    {
      (1813257 '=' error_out[1813211] error[1813241])
      gotoErrorHandlingReturn _endon_fn[1813213] _endon_fn[1813213]
    }
    label _endon_fn[1813213]
    (1408644 return _void[55])
  }
  function on_fn[1421810](const  wide-ref arg this[1807346]:channel(true,dynamic,false)[1060947], const in arg x[1807348]:real(64)[16], const in arg origLocale[1807350]:locale[28], wide-ref arg error_out[1813401]:__wide_Error[2381123]) : void[4] throws "on" "resolved"
  {
    const-val local__str_literal_3017[2379858]:string[26] "temp"
    (2379859 'move' "in lock" "in lock")
    const-val local__str_literal_129[2379852]:string[26] "temp"
    (2379853 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2379846]:string[26] "temp"
    (2379847 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1813405]:__wide_Error[2381123] "error variable" "temp"
    (1813414 'move' error[1813405] nil[44])
    const-val call_tmp[2267743]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267745 'move' call_tmp[2267743](2267748 call qio_int_to_err[223634] 0))
    const-val coerce_tmp[2267753]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2434807]:qio_channel_ptr_t[231465] "temp"
    (2267755 'move' tmp[2434807](2267757 '.v' this[1807346] _channel_internal[1060940]))
    (2434810 'move' coerce_tmp[2267753] tmp[2434807])
    const-val call_tmp[2267760]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267762 'move' call_tmp[2267760](2267764 'cast' c_void_ptr[149] coerce_tmp[2267753]))
    const-val call_tmp[2267767]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267769 'move' call_tmp[2267767](2267771 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2267774]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267776 'move' call_tmp[2267774](2267778 'ptr_eq' call_tmp[2267760] call_tmp[2267767]))
    if call_tmp[2267774]
    {
      const-val call_tmp[2267783]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2267785]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267787 'move' coerce_tmp[2267785](2267789 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2267792]:owned SystemError[1000238] "temp"
      (2267795 call fromSyserr[1017113] coerce_tmp[2267785] "Operation attempted on an invalid channel" ret_tmp[2267792])
      (2267799 'move' call_tmp[2267783] ret_tmp[2267792])
      val call_tmp[2267802]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2267804]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2267806]:owned Error[966458] "temp"
      ref i_x[2267808]:owned SystemError[1000238] "temp"
      (2267810 'move' i_x[2267808](2267812 'set reference' call_tmp[2267783]))
      ref i__retArg[2267814]:owned Error[966458] "temp"
      (2267816 'move' i__retArg[2267814](2267818 'set reference' ret_tmp[2267806]))
      val _formal_tmp_x[2267820]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2267822 'move' _formal_tmp_x[2267820] i_x[2267808])
      const-val ret[2267825]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2267827]:owned SystemError[1000238] "temp"
      (2267829 'move' i_this[2267827](2267831 'set reference' _formal_tmp_x[2267820]))
      val coerce_tmp[2267833]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2434813]:SystemError[264845] "temp"
      (2267835 'move' tmp[2434813](2267837 '.v' i_this[2267827] chpl_p[1000233]))
      (2434816 'move' coerce_tmp[2267833] tmp[2434813])
      val call_tmp[2267840]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267842 'move' call_tmp[2267840](2267844 'cast' Error[167938] coerce_tmp[2267833]))
      ref i_this[2267852]:owned SystemError[1000238] "temp"
      (2267854 'move' i_this[2267852](2267856 'set reference' _formal_tmp_x[2267820]))
      val tmp[2267858]:SystemError[264845] "temp"
      (2267860 'move' tmp[2267858](2267862 'cast' SystemError[264845] nil[44]))
      (2267865 '.=' i_this[2267852] chpl_p[1000233] tmp[2267858])
      val coerce_tmp[2267869]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2267871 'move' coerce_tmp[2267869](2267873 'cast' object[22] call_tmp[2267840]))
      const-val call_tmp[2267876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2267878 'move' call_tmp[2267876](2267880 'ptr_eq' coerce_tmp[2267869] nil[44]))
      if call_tmp[2267876]
      {
        (2267886 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2267889]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2267891]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2434819]:__wide_Error[2381123] "temp"
      (2434822 'move' tmp[2434819] call_tmp[2267840])
      (2267894 call init[968094] initTemp[2267891] tmp[2434819])
      (2267897 'move' call_tmp[2267889] initTemp[2267891])
      (2267900 'move' ret[2267825] call_tmp[2267889])
      (2267904 call chpl__autoDestroy[1516200] _formal_tmp_x[2267820])
      (2267906 '=' i__retArg[2267814] ret[2267825])
      (2267909 'move' coerce_tmp[2267804] ret_tmp[2267806])
      const-val _formal_tmp_in_err[2267912]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2267914 'move' _formal_tmp_in_err[2267912] coerce_tmp[2267804])
      (2267917 'move' call_tmp[2267802](2267920 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2267912]))
      (2267922 '=' error[1813405] call_tmp[2267802])
      gotoErrorHandlingReturn _endlock[2267985] _endlock[2267985]
    }
    const-val call_tmp[2267928]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267930 'move' call_tmp[2267928](2267933 call qio_err_iserr[223646] call_tmp[2267743]))
    const-val call_tmp[2267935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2267937 'move' call_tmp[2267935](2267939 '!=' call_tmp[2267928] 0))
    if call_tmp[2267935]
    {
      val error[2267944]:__wide_Error[2381123] "error variable" "temp"
      (2267946 'move' error[2267944] nil[44])
      ref tmp[2434825]:__wide_Error[2381123] "temp"
      (2434829 'move' tmp[2434825](2434827 'set reference' error[2267944]))
      (2267950 call _ch_ioerror[1062865] this[1807346] call_tmp[2267743] "in lock" tmp[2434825])
      val errorExists[2267955]:bool[10] "temp"
      (2267957 'move' errorExists[2267955](2267959 '!=' error[2267944] nil[44]))
      if errorExists[2267955]
      {
        gotoErrorHandling handler[2267967] handler[2267967]
      }
      label handler[2267967]
      val errorExists[2267969]:bool[10] "temp"
      (2267971 'move' errorExists[2267969](2267973 '!=' error[2267944] nil[44]))
      if errorExists[2267969]
      {
        (2267978 '=' error[1813405] error[2267944])
        gotoErrorHandlingReturn _endlock[2267985] _endlock[2267985]
      }
    }
    label _endlock[2267985]
    val errorExists[2110464]:bool[10] "temp"
    (2110469 'move' errorExists[2110464](2110466 '!=' error[1813405] nil[44]))
    if errorExists[2110464]
    {
      gotoErrorHandling handler[1813406] handler[1813406]
    }
    label handler[1813406]
    val errorExists[2110472]:bool[10] "temp"
    (2110477 'move' errorExists[2110472](2110474 '!=' error[1813405] nil[44]))
    if errorExists[2110472]
    {
      (1813420 call chpl_uncaught_error[170243] error[1813405])
    }
    val error[1813431]:__wide_Error[2381123] "error variable" "temp"
    (1813440 'move' error[1813431] nil[44])
    val rvfRerefTmp[2084419]:locale[28] "temp"
    (2084422 'move' rvfRerefTmp[2084419] origLocale[1807350])
    ref tmp[2417296]:__wide_Error[2381123] "temp"
    (2417300 'move' tmp[2417296](2417298 'set reference' error[1813431]))
    (1421843 call _writeOne[1421879] this[1807346] x[1807348] rvfRerefTmp[2084419] tmp[2417296])
    val errorExists[2110480]:bool[10] "temp"
    (2110485 'move' errorExists[2110480](2110482 '!=' error[1813431] nil[44]))
    if errorExists[2110480]
    {
      gotoErrorHandling handler[1813432] handler[1813432]
    }
    label handler[1813432]
    val errorExists[2110488]:bool[10] "temp"
    (2110493 'move' errorExists[2110488](2110490 '!=' error[1813431] nil[44]))
    if errorExists[2110488]
    {
      (1813447 '=' error_out[1813401] error[1813431])
      gotoErrorHandlingReturn _endon_fn[1813403] _endon_fn[1813403]
    }
    label _endon_fn[1813403]
    (1421850 return _void[55])
  }
  function on_fn[1433131](const in arg this[1807352]:channel(true,dynamic,true)[1021825], const  wide-ref arg args[1807354]:(int(64),ioNewline)[1433256], const in arg origLocale[1807356]:locale[28], wide-ref arg error_out[1813636]:__wide_Error[2381123]) : void[4] throws "inlined function" "on" "resolved"
  {
    const-val local__str_literal_3017[2379967]:string[26] "temp"
    (2379968 'move' "in lock" "in lock")
    const-val local__str_literal_129[2379960]:string[26] "temp"
    (2379961 'move' "argument to ! is nil" "argument to ! is nil")
    const-val local__str_literal_3014[2379954]:string[26] "temp"
    (2379955 'move' "Operation attempted on an invalid channel" "Operation attempted on an invalid channel")
    val error[1813640]:__wide_Error[2381123] "error variable" "temp"
    (1813649 'move' error[1813640] nil[44])
    ref rvfRerefTmp[2084432]:channel(true,dynamic,true)[1021825] "temp"
    (2084436 'move' rvfRerefTmp[2084432](2084433 'set reference' this[1807352]))
    val err[2319759]:syserr[223584] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2319761]:syserr[223584] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319763 'move' call_tmp[2319761](2319766 call qio_int_to_err[223634] 0))
    (2319768 'move' err[2319759] call_tmp[2319761])
    const-val coerce_tmp[2319771]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2440838]:qio_channel_ptr_t[231465] "temp"
    (2319773 'move' tmp[2440838](2319775 '.v' this[1807352] _channel_internal[1021818]))
    (2440841 'move' coerce_tmp[2319771] tmp[2440838])
    const-val call_tmp[2319778]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319780 'move' call_tmp[2319778](2319782 'cast' c_void_ptr[149] coerce_tmp[2319771]))
    const-val call_tmp[2319785]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319787 'move' call_tmp[2319785](2319789 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2319792]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2319794 'move' call_tmp[2319792](2319796 'ptr_eq' call_tmp[2319778] call_tmp[2319785]))
    if call_tmp[2319792]
    {
      const-val call_tmp[2319801]:owned SystemError[1000238] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2319803]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319805 'move' coerce_tmp[2319803](2319807 'cast' int(64)[13] EINVAL[224459]))
      const-val ret_tmp[2319810]:owned SystemError[1000238] "temp"
      (2319813 call fromSyserr[1017113] coerce_tmp[2319803] "Operation attempted on an invalid channel" ret_tmp[2319810])
      (2319817 'move' call_tmp[2319801] ret_tmp[2319810])
      val call_tmp[2319820]:__wide_Error[2381123] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2319822]:owned Error[966458] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2319824]:owned Error[966458] "temp"
      ref i_x[2319826]:owned SystemError[1000238] "temp"
      (2319828 'move' i_x[2319826](2319830 'set reference' call_tmp[2319801]))
      ref i__retArg[2319832]:owned Error[966458] "temp"
      (2319834 'move' i__retArg[2319832](2319836 'set reference' ret_tmp[2319824]))
      val _formal_tmp_x[2319838]:owned SystemError[1000238] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2319840 'move' _formal_tmp_x[2319838] i_x[2319826])
      const-val ret[2319843]:owned Error[966458] "dead after last mention" "RVV" "temp"
      ref i_this[2319845]:owned SystemError[1000238] "temp"
      (2319847 'move' i_this[2319845](2319849 'set reference' _formal_tmp_x[2319838]))
      val coerce_tmp[2319851]:SystemError[264845] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      val tmp[2440844]:SystemError[264845] "temp"
      (2319853 'move' tmp[2440844](2319855 '.v' i_this[2319845] chpl_p[1000233]))
      (2440847 'move' coerce_tmp[2319851] tmp[2440844])
      val call_tmp[2319858]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319860 'move' call_tmp[2319858](2319862 'cast' Error[167938] coerce_tmp[2319851]))
      ref i_this[2319870]:owned SystemError[1000238] "temp"
      (2319872 'move' i_this[2319870](2319874 'set reference' _formal_tmp_x[2319838]))
      val tmp[2319876]:SystemError[264845] "temp"
      (2319878 'move' tmp[2319876](2319880 'cast' SystemError[264845] nil[44]))
      (2319883 '.=' i_this[2319870] chpl_p[1000233] tmp[2319876])
      val coerce_tmp[2319887]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2319889 'move' coerce_tmp[2319887](2319891 'cast' object[22] call_tmp[2319858]))
      const-val call_tmp[2319894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2319896 'move' call_tmp[2319894](2319898 'ptr_eq' coerce_tmp[2319887] nil[44]))
      if call_tmp[2319894]
      {
        (2319904 call nilCheckHalt[210151] "argument to ! is nil")
      }
      const-val call_tmp[2319907]:owned Error[966458] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2319909]:owned Error[966458] "dead after last mention" "delay instantiation" "temp"
      const-val tmp[2440850]:__wide_Error[2381123] "temp"
      (2440853 'move' tmp[2440850] call_tmp[2319858])
      (2319912 call init[968094] initTemp[2319909] tmp[2440850])
      (2319915 'move' call_tmp[2319907] initTemp[2319909])
      (2319918 'move' ret[2319843] call_tmp[2319907])
      (2319922 call chpl__autoDestroy[1516200] _formal_tmp_x[2319838])
      (2319924 '=' i__retArg[2319832] ret[2319843])
      (2319927 'move' coerce_tmp[2319822] ret_tmp[2319824])
      const-val _formal_tmp_in_err[2319930]:owned Error[966458] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2319932 'move' _formal_tmp_in_err[2319930] coerce_tmp[2319822])
      (2319935 'move' call_tmp[2319820](2319938 call chpl_fix_thrown_error[170003] _formal_tmp_in_err[2319930]))
      (2319940 '=' error[1813640] call_tmp[2319820])
      gotoErrorHandlingReturn _endlock[2320111] _endlock[2320111]
    }
    ref call_tmp[2319948]:locale[28] "dead after last mention" "maybe param" "temp"
    (2319950 'move' call_tmp[2319948](2319952 '.' this[1807352] home[1021813]))
    const-val call_tmp[2319955]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2319957]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319959 'move' coerce_tmp[2319957](2319961 '.v' call_tmp[2319948] _instance[89975]))
    val coerce_tmp[2319964]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2319966 'move' coerce_tmp[2319964](2319968 'cast' object[22] coerce_tmp[2319957]))
    const-val call_tmp[2319971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2440856]:__wide_object[2381018] "temp"
    (2440859 'move' tmp[2440856] nil[44])
    (2319973 'move' call_tmp[2319971](2319975 'ptr_eq' coerce_tmp[2319964] tmp[2440856]))
    if call_tmp[2319971]
    {
      (2319981 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2319984 'move' call_tmp[2319955](2319986 '_wide_get_locale' coerce_tmp[2319957]))
    val rvfDerefTmp[2319991]:channel(true,dynamic,true)[1021825] "temp"
    (2319993 'move' rvfDerefTmp[2319991] this[1807352])
    val isdirect[2319997]:bool[10] "temp"
    (2319999 'move' isdirect[2319997](2320002 call chpl_doDirectExecuteOn[187423] call_tmp[2319955]))
    if isdirect[2319997]
    {
      wide-ref tmp[2440862]:syserr[223584] "temp"
      (2440866 'move' tmp[2440862](2440864 'set reference' err[2319759]))
      (2320007 call on_fn[1392911] rvfDerefTmp[2319991] tmp[2440862])
    }
    {
      val _args_foron_fn[2320011]:_class_localson_fn[2094247] "temp"
      (2320013 'move' _args_foron_fn[2320011](2320015 'stack allocate class' _class_localson_fn[2094247]))
      (2320017 '.=' _args_foron_fn[2320011] _0_tmp[2094250] call_tmp[2319955])
      (2320021 '.=' _args_foron_fn[2320011] _1_rvfDerefTmp[2094252] rvfDerefTmp[2319991])
      ref tmp[2320025]:syserr[223584] "temp"
      (2320027 'move' tmp[2320025](2320029 'set reference' err[2319759]))
      wide-ref tmp[2440869]:syserr[223584] "temp"
      (2440872 'move' tmp[2440869] tmp[2320025])
      (2320031 '.=' _args_foron_fn[2320011] _2_err[2094254] tmp[2440869])
      val _args_vforon_fn[2320035]:c_void_ptr[149] "temp"
      (2320037 'move' _args_vforon_fn[2320035](2320039 'cast_to_void_star' _args_foron_fn[2320011]))
      val _args_sizeon_fn[2320041]:int(64)[13] "temp"
      (2320043 'move' _args_sizeon_fn[2320041](2320045 'sizeof_bundle' _class_localson_fn[2094247]))
      on(2320048 call wrapon_fn[2094293] call_tmp[2319955] _args_vforon_fn[2320035] _args_sizeon_fn[2320041] _args_foron_fn[2320011])
    }
    const-val call_tmp[2320054]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320056 'move' call_tmp[2320054](2320059 call qio_err_iserr[223646] err[2319759]))
    const-val call_tmp[2320061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320063 'move' call_tmp[2320061](2320065 '!=' call_tmp[2320054] 0))
    if call_tmp[2320061]
    {
      val error[2320070]:__wide_Error[2381123] "error variable" "temp"
      (2320072 'move' error[2320070] nil[44])
      ref tmp[2440875]:__wide_Error[2381123] "temp"
      (2440879 'move' tmp[2440875](2440877 'set reference' error[2320070]))
      (2320076 call _ch_ioerror[1393261] rvfRerefTmp[2084432] err[2319759] "in lock" tmp[2440875])
      val errorExists[2320081]:bool[10] "temp"
      (2320083 'move' errorExists[2320081](2320085 '!=' error[2320070] nil[44]))
      if errorExists[2320081]
      {
        gotoErrorHandling handler[2320093] handler[2320093]
      }
      label handler[2320093]
      val errorExists[2320095]:bool[10] "temp"
      (2320097 'move' errorExists[2320095](2320099 '!=' error[2320070] nil[44]))
      if errorExists[2320095]
      {
        (2320104 '=' error[1813640] error[2320070])
        gotoErrorHandlingReturn _endlock[2320111] _endlock[2320111]
      }
    }
    label _endlock[2320111]
    val errorExists[2110584]:bool[10] "temp"
    (2110589 'move' errorExists[2110584](2110586 '!=' error[1813640] nil[44]))
    if errorExists[2110584]
    {
      gotoErrorHandling handler[1813641] handler[1813641]
    }
    label handler[1813641]
    val errorExists[2110592]:bool[10] "temp"
    (2110597 'move' errorExists[2110592](2110594 '!=' error[1813640] nil[44]))
    if errorExists[2110592]
    {
      (1813656 '=' error_out[1813636] error[1813640])
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    val error[1813668]:__wide_Error[2381123] "error variable" "temp"
    (1813677 'move' error[1813668] nil[44])
    const-val coerce_tmp[1433565]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417399]:int(64)[13] "temp"
    (1433569 'move' tmp[2417399](2373103 '.v' args[1807354] x0[1433252]))
    (2417402 'move' coerce_tmp[1433565] tmp[2417399])
    ref rvfRerefTmp[2084439]:channel(true,dynamic,true)[1021825] "temp"
    (2084443 'move' rvfRerefTmp[2084439](2084440 'set reference' this[1807352]))
    val rvfRerefTmp[2084480]:locale[28] "temp"
    (2084483 'move' rvfRerefTmp[2084480] origLocale[1807356])
    ref tmp[2417364]:__wide_Error[2381123] "temp"
    (2417368 'move' tmp[2417364](2417366 'set reference' error[1813668]))
    (1433376 call _writeOne[1433423] rvfRerefTmp[2084439] coerce_tmp[1433565] rvfRerefTmp[2084480] tmp[2417364])
    val errorExists[2110600]:bool[10] "temp"
    (2110605 'move' errorExists[2110600](2110602 '!=' error[1813668] nil[44]))
    if errorExists[2110600]
    {
      gotoErrorHandling handler[1813669] handler[1813669]
    }
    label handler[1813669]
    val errorExists[2110608]:bool[10] "temp"
    (2110613 'move' errorExists[2110608](2110610 '!=' error[1813668] nil[44]))
    if errorExists[2110608]
    {
      (1813684 '=' error_out[1813636] error[1813668])
      ref call_tmp[2320422]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320424 'move' call_tmp[2320422](2320426 '.' this[1807352] home[1021813]))
      const-val call_tmp[2320429]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320431]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320433 'move' coerce_tmp[2320431](2320435 '.v' call_tmp[2320422] _instance[89975]))
      val coerce_tmp[2320438]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320440 'move' coerce_tmp[2320438](2320442 'cast' object[22] coerce_tmp[2320431]))
      const-val call_tmp[2320445]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2440900]:__wide_object[2381018] "temp"
      (2440903 'move' tmp[2440900] nil[44])
      (2320447 'move' call_tmp[2320445](2320449 'ptr_eq' coerce_tmp[2320438] tmp[2440900]))
      if call_tmp[2320445]
      {
        (2320455 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320458 'move' call_tmp[2320429](2320460 '_wide_get_locale' coerce_tmp[2320431]))
      val rvfDerefTmp[2320465]:channel(true,dynamic,true)[1021825] "temp"
      (2320467 'move' rvfDerefTmp[2320465] this[1807352])
      val isdirect[2320471]:bool[10] "temp"
      (2320473 'move' isdirect[2320471](2320476 call chpl_doDirectExecuteOn[187423] call_tmp[2320429]))
      if isdirect[2320471]
      {
        (2320481 call on_fn[1393602] rvfDerefTmp[2320465])
      }
      {
        val _args_foron_fn[2320484]:_class_localson_fn[2094500] "temp"
        (2320486 'move' _args_foron_fn[2320484](2320488 'stack allocate class' _class_localson_fn[2094500]))
        (2320490 '.=' _args_foron_fn[2320484] _0_tmp[2094503] call_tmp[2320429])
        (2320494 '.=' _args_foron_fn[2320484] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320465])
        val _args_vforon_fn[2320498]:c_void_ptr[149] "temp"
        (2320500 'move' _args_vforon_fn[2320498](2320502 'cast_to_void_star' _args_foron_fn[2320484]))
        val _args_sizeon_fn[2320504]:int(64)[13] "temp"
        (2320506 'move' _args_sizeon_fn[2320504](2320508 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320511 call wrapon_fn[2094534] call_tmp[2320429] _args_vforon_fn[2320498] _args_sizeon_fn[2320504] _args_foron_fn[2320484])
      }
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    val error[1813696]:__wide_Error[2381123] "error variable" "temp"
    (1813705 'move' error[1813696] nil[44])
    wide-ref call_tmp[1433397]:ioNewline[238701] "dead after last mention" "maybe param" "temp"
    (1433399 'move' call_tmp[1433397](1433816 '.v' args[1807354] x1[1433254]))
    ref rvfRerefTmp[2084446]:channel(true,dynamic,true)[1021825] "temp"
    (2084450 'move' rvfRerefTmp[2084446](2084447 'set reference' this[1807352]))
    val rvfRerefTmp[2084486]:locale[28] "temp"
    (2084489 'move' rvfRerefTmp[2084486] origLocale[1807356])
    ref tmp[2417371]:__wide_Error[2381123] "temp"
    (2417375 'move' tmp[2417371](2417373 'set reference' error[1813696]))
    (1433408 call _writeOne[1429447] rvfRerefTmp[2084446] call_tmp[1433397] rvfRerefTmp[2084486] tmp[2417371])
    val errorExists[2110616]:bool[10] "temp"
    (2110621 'move' errorExists[2110616](2110618 '!=' error[1813696] nil[44]))
    if errorExists[2110616]
    {
      gotoErrorHandling handler[1813697] handler[1813697]
    }
    label handler[1813697]
    val errorExists[2110624]:bool[10] "temp"
    (2110629 'move' errorExists[2110624](2110626 '!=' error[1813696] nil[44]))
    if errorExists[2110624]
    {
      (1813712 '=' error_out[1813636] error[1813696])
      ref call_tmp[2320522]:locale[28] "dead after last mention" "maybe param" "temp"
      (2320524 'move' call_tmp[2320522](2320526 '.' this[1807352] home[1021813]))
      const-val call_tmp[2320529]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2320531]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320533 'move' coerce_tmp[2320531](2320535 '.v' call_tmp[2320522] _instance[89975]))
      val coerce_tmp[2320538]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2320540 'move' coerce_tmp[2320538](2320542 'cast' object[22] coerce_tmp[2320531]))
      const-val call_tmp[2320545]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      val tmp[2440906]:__wide_object[2381018] "temp"
      (2440909 'move' tmp[2440906] nil[44])
      (2320547 'move' call_tmp[2320545](2320549 'ptr_eq' coerce_tmp[2320538] tmp[2440906]))
      if call_tmp[2320545]
      {
        (2320555 call nilCheckHalt[210151] "argument to ! is nil")
      }
      (2320558 'move' call_tmp[2320529](2320560 '_wide_get_locale' coerce_tmp[2320531]))
      val rvfDerefTmp[2320565]:channel(true,dynamic,true)[1021825] "temp"
      (2320567 'move' rvfDerefTmp[2320565] this[1807352])
      val isdirect[2320571]:bool[10] "temp"
      (2320573 'move' isdirect[2320571](2320576 call chpl_doDirectExecuteOn[187423] call_tmp[2320529]))
      if isdirect[2320571]
      {
        (2320581 call on_fn[1393602] rvfDerefTmp[2320565])
      }
      {
        val _args_foron_fn[2320584]:_class_localson_fn[2094500] "temp"
        (2320586 'move' _args_foron_fn[2320584](2320588 'stack allocate class' _class_localson_fn[2094500]))
        (2320590 '.=' _args_foron_fn[2320584] _0_tmp[2094503] call_tmp[2320529])
        (2320594 '.=' _args_foron_fn[2320584] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320565])
        val _args_vforon_fn[2320598]:c_void_ptr[149] "temp"
        (2320600 'move' _args_vforon_fn[2320598](2320602 'cast_to_void_star' _args_foron_fn[2320584]))
        val _args_sizeon_fn[2320604]:int(64)[13] "temp"
        (2320606 'move' _args_sizeon_fn[2320604](2320608 'sizeof_bundle' _class_localson_fn[2094500]))
        on(2320611 call wrapon_fn[2094534] call_tmp[2320529] _args_vforon_fn[2320598] _args_sizeon_fn[2320604] _args_foron_fn[2320584])
      }
      gotoErrorHandlingReturn _endon_fn[1813638] _endon_fn[1813638]
    }
    ref call_tmp[2320622]:locale[28] "dead after last mention" "maybe param" "temp"
    (2320624 'move' call_tmp[2320622](2320626 '.' this[1807352] home[1021813]))
    const-val call_tmp[2320629]:chpl_localeID_t[209294] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2320631]:__wide_BaseLocale[2381060] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320633 'move' coerce_tmp[2320631](2320635 '.v' call_tmp[2320622] _instance[89975]))
    val coerce_tmp[2320638]:__wide_object[2381018] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2320640 'move' coerce_tmp[2320638](2320642 'cast' object[22] coerce_tmp[2320631]))
    const-val call_tmp[2320645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val tmp[2440912]:__wide_object[2381018] "temp"
    (2440915 'move' tmp[2440912] nil[44])
    (2320647 'move' call_tmp[2320645](2320649 'ptr_eq' coerce_tmp[2320638] tmp[2440912]))
    if call_tmp[2320645]
    {
      (2320655 call nilCheckHalt[210151] "argument to ! is nil")
    }
    (2320658 'move' call_tmp[2320629](2320660 '_wide_get_locale' coerce_tmp[2320631]))
    val rvfDerefTmp[2320665]:channel(true,dynamic,true)[1021825] "temp"
    (2320667 'move' rvfDerefTmp[2320665] this[1807352])
    val isdirect[2320671]:bool[10] "temp"
    (2320673 'move' isdirect[2320671](2320676 call chpl_doDirectExecuteOn[187423] call_tmp[2320629]))
    if isdirect[2320671]
    {
      (2320681 call on_fn[1393602] rvfDerefTmp[2320665])
    }
    {
      val _args_foron_fn[2320684]:_class_localson_fn[2094500] "temp"
      (2320686 'move' _args_foron_fn[2320684](2320688 'stack allocate class' _class_localson_fn[2094500]))
      (2320690 '.=' _args_foron_fn[2320684] _0_tmp[2094503] call_tmp[2320629])
      (2320694 '.=' _args_foron_fn[2320684] _1_rvfDerefTmp[2094505] rvfDerefTmp[2320665])
      val _args_vforon_fn[2320698]:c_void_ptr[149] "temp"
      (2320700 'move' _args_vforon_fn[2320698](2320702 'cast_to_void_star' _args_foron_fn[2320684]))
      val _args_sizeon_fn[2320704]:int(64)[13] "temp"
      (2320706 'move' _args_sizeon_fn[2320704](2320708 'sizeof_bundle' _class_localson_fn[2094500]))
      on(2320711 call wrapon_fn[2094534] call_tmp[2320629] _args_vforon_fn[2320698] _args_sizeon_fn[2320704] _args_foron_fn[2320684])
    }
    label _endon_fn[1813638]
    (1433234 return _void[55])
  }
  function on_fn[1471095](wide-ref arg this[1807416]:channel(false,dynamic,true)[985627]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1471144]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417678]:qio_channel_ptr_t[231465] "temp"
    (1471148 'move' tmp[2417678](2373749 '.v' this[1807416] _channel_internal[985620]))
    (2417681 'move' coerce_tmp[1471144] tmp[2417678])
    (1471110 call qio_channel_release[232961] coerce_tmp[1471144])
    (2373755 '.=' this[1807416] _channel_internal[985620] QIO_CHANNEL_PTR_NULL[231468])
    (1471125 return _void[55])
  }
  function on_fn[1534074](wide-ref arg this[1807458]:channel(true,dynamic,true)[1021825]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1534123]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417912]:qio_channel_ptr_t[231465] "temp"
    (1534127 'move' tmp[2417912](2374090 '.v' this[1807458] _channel_internal[1021818]))
    (2417915 'move' coerce_tmp[1534123] tmp[2417912])
    (1534089 call qio_channel_release[232961] coerce_tmp[1534123])
    (2374096 '.=' this[1807458] _channel_internal[1021818] QIO_CHANNEL_PTR_NULL[231468])
    (1534104 return _void[55])
  }
  function on_fn[1536250](wide-ref arg this[1807462]:channel(true,dynamic,false)[1060947]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1536299]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417918]:qio_channel_ptr_t[231465] "temp"
    (1536303 'move' tmp[2417918](2374108 '.v' this[1807462] _channel_internal[1060940]))
    (2417921 'move' coerce_tmp[1536299] tmp[2417918])
    (1536265 call qio_channel_release[232961] coerce_tmp[1536299])
    (2374114 '.=' this[1807462] _channel_internal[1060940] QIO_CHANNEL_PTR_NULL[231468])
    (1536280 return _void[55])
  }
  function on_fn[1540504](wide-ref arg this[1807468]:channel(false,dynamic,false)[1080682]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1540553]:qio_channel_ptr_t[231465] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    val tmp[2417936]:qio_channel_ptr_t[231465] "temp"
    (1540557 'move' tmp[2417936](2374143 '.v' this[1807468] _channel_internal[1080675]))
    (2417939 'move' coerce_tmp[1540553] tmp[2417936])
    (1540519 call qio_channel_release[232961] coerce_tmp[1540553])
    (2374149 '.=' this[1807468] _channel_internal[1080675] QIO_CHANNEL_PTR_NULL[231468])
    (1540534 return _void[55])
  }
  function chpl__deinit_IO[1852165]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1852171]
    ref i_x[2328301]:file[235580] "temp"
    (2328305 'move' i_x[2328301](2328303 'set reference' call_tmp[724031]))
    (2328309 call deinit[235891] i_x[2328301])
    ref i_x[2328289]:file[235580] "temp"
    (2328293 'move' i_x[2328289](2328291 'set reference' call_tmp[724014]))
    (2328297 call deinit[235891] i_x[2328289])
    ref i_x[2328277]:file[235580] "temp"
    (2328281 'move' i_x[2328277](2328279 'set reference' call_tmp[723997]))
    (2328285 call deinit[235891] i_x[2328277])
    ref i_x[2331431]:channel(true,dynamic,true)[1021825] "temp"
    (2331435 'move' i_x[2331431](2331433 'set reference' stderr[250264]))
    (2331439 call deinit[1534039] i_x[2331431])
    ref i_x[2331419]:channel(true,dynamic,true)[1021825] "temp"
    (2331423 'move' i_x[2331419](2331421 'set reference' stdout[250235]))
    (2331427 call deinit[1534039] i_x[2331419])
    ref i_x[2328976]:channel(false,dynamic,true)[985627] "temp"
    (2328980 'move' i_x[2328976](2328978 'set reference' stdin[250208]))
    (2328984 call deinit[1471060] i_x[2328976])
    wide-ref tmp[2085338]:6*string[985217] "temp"
    (2085343 'move' tmp[2085338](2085340 '.' _arg_to_proto_names[246561] value[2085328]))
    wide-ref _field_destructor_tmp_[2328878]:string[26] "temp"
    (2328880 'move' _field_destructor_tmp_[2328878](2328882 'get svec member' tmp[2085338] 5))
    (2328886 call deinit[30831] _field_destructor_tmp_[2328878])
    wide-ref _field_destructor_tmp_[2328888]:string[26] "temp"
    (2328890 'move' _field_destructor_tmp_[2328888](2328892 'get svec member' tmp[2085338] 4))
    (2328896 call deinit[30831] _field_destructor_tmp_[2328888])
    wide-ref _field_destructor_tmp_[2328898]:string[26] "temp"
    (2328900 'move' _field_destructor_tmp_[2328898](2328902 'get svec member' tmp[2085338] 3))
    (2328906 call deinit[30831] _field_destructor_tmp_[2328898])
    wide-ref _field_destructor_tmp_[2328908]:string[26] "temp"
    (2328910 'move' _field_destructor_tmp_[2328908](2328912 'get svec member' tmp[2085338] 2))
    (2328916 call deinit[30831] _field_destructor_tmp_[2328908])
    wide-ref _field_destructor_tmp_[2328918]:string[26] "temp"
    (2328920 'move' _field_destructor_tmp_[2328918](2328922 'get svec member' tmp[2085338] 1))
    (2328926 call deinit[30831] _field_destructor_tmp_[2328918])
    wide-ref _field_destructor_tmp_[2328928]:string[26] "temp"
    (2328930 'move' _field_destructor_tmp_[2328928](2328932 'get svec member' tmp[2085338] 0))
    (2328936 call deinit[30831] _field_destructor_tmp_[2328928])
    (1852168 return _void[55])
  }
  function wrapon_fn[2086927](const in arg dummy_locale_arg[2086929]:chpl_localeID_t[209294], in arg buf[2086931]:c_void_ptr[149], in arg buf_size[2086933]:int(64)[13], in arg c[2086935]:_class_localson_fn[2086887]) : void[4] "on block"
  {
    wide-ref _1_this[2086947]:file[235580] "temp"
    (2086952 'move' _1_this[2086947](2086949 '.v' c[2086935] _1_this[2086892]))
    (2086938 call on_fn[935597] _1_this[2086947])
    (2086955 return _void[55])
  }
  function wrapon_fn[2087038](const in arg dummy_locale_arg[2087040]:chpl_localeID_t[209294], in arg buf[2087042]:c_void_ptr[149], in arg buf_size[2087044]:int(64)[13], in arg c[2087046]:_class_localson_fn[2086980]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2087058]:file[235580] "temp"
    val tmp[2422116]:file[235580] "temp"
    (2087063 'move' tmp[2422116](2087060 '.v' c[2087046] _1_rvfDerefTmp[2086985]))
    (2422119 'move' _1_rvfDerefTmp[2087058] tmp[2422116])
    wide-ref _2_ret[2087066]:iostyle[231844] "temp"
    (2087071 'move' _2_ret[2087066](2087068 '.v' c[2087046] _2_ret[2086987]))
    wide-ref _3_error[2087074]:__wide_Error[2381123] "temp"
    (2087079 'move' _3_error[2087074](2087076 '.v' c[2087046] _3_error[2086989]))
    (2087049 call on_fn[935606] _1_rvfDerefTmp[2087058] _2_ret[2087066] _3_error[2087074])
    (2087082 return _void[55])
  }
  function wrapon_fn[2087152](const in arg dummy_locale_arg[2087154]:chpl_localeID_t[209294], in arg buf[2087156]:c_void_ptr[149], in arg buf_size[2087158]:int(64)[13], in arg c[2087160]:_class_localson_fn[2087106]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2087172]:file[235580] "temp"
    val tmp[2422135]:file[235580] "temp"
    (2087177 'move' tmp[2422135](2087174 '.v' c[2087160] _1_rvfDerefTmp[2087111]))
    (2422138 'move' _1_rvfDerefTmp[2087172] tmp[2422135])
    wide-ref _2_err[2087180]:syserr[223584] "temp"
    (2087185 'move' _2_err[2087180](2087182 '.v' c[2087160] _2_err[2087113]))
    (2087163 call on_fn[935615] _1_rvfDerefTmp[2087172] _2_err[2087180])
    (2087188 return _void[55])
  }
  function wrapon_fn[2087284](const in arg dummy_locale_arg[2087286]:chpl_localeID_t[209294], in arg buf[2087288]:c_void_ptr[149], in arg buf_size[2087290]:int(64)[13], in arg c[2087292]:_class_localson_fn[2087214]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2087304]:file[235580] "temp"
    val tmp[2422180]:file[235580] "temp"
    (2087309 'move' tmp[2422180](2087306 '.v' c[2087292] _1_rvfDerefTmp[2087219]))
    (2422183 'move' _1_rvfDerefTmp[2087304] tmp[2422180])
    wide-ref _2_err[2087312]:syserr[223584] "temp"
    (2087317 'move' _2_err[2087312](2087314 '.v' c[2087292] _2_err[2087221]))
    wide-ref _3_ret[2087320]:string[26] "temp"
    (2087325 'move' _3_ret[2087320](2087322 '.v' c[2087292] _3_ret[2087223]))
    wide-ref _4_error[2087328]:__wide_Error[2381123] "temp"
    (2087333 'move' _4_error[2087328](2087330 '.v' c[2087292] _4_error[2087225]))
    (2087295 call on_fn[935633] _1_rvfDerefTmp[2087304] _2_err[2087312] _3_ret[2087320] _4_error[2087328])
    (2087336 return _void[55])
  }
  function wrapon_fn[2087657](const in arg dummy_locale_arg[2087659]:chpl_localeID_t[209294], in arg buf[2087661]:c_void_ptr[149], in arg buf_size[2087663]:int(64)[13], in arg c[2087665]:_class_localson_fn[2087563]) : void[4] "on block"
  {
    wide-ref _1_err[2087677]:syserr[223584] "temp"
    (2087682 'move' _1_err[2087677](2087679 '.v' c[2087665] _1_err[2087568]))
    val _2_start[2087685]:int(64)[13] "temp"
    val tmp[2422249]:int(64)[13] "temp"
    (2087690 'move' tmp[2422249](2087687 '.v' c[2087665] _2_start[2087570]))
    (2422252 'move' _2_start[2087685] tmp[2422249])
    val _3_end[2087693]:int(64)[13] "temp"
    val tmp[2422255]:int(64)[13] "temp"
    (2087698 'move' tmp[2422255](2087695 '.v' c[2087665] _3_end[2087572]))
    (2422258 'move' _3_end[2087693] tmp[2422255])
    val _4_rvfDerefTmp[2087701]:iostyle[231844] "temp"
    val tmp[2422261]:iostyle[231844] "temp"
    (2087706 'move' tmp[2422261](2087703 '.v' c[2087665] _4_rvfDerefTmp[2087574]))
    (2422264 'move' _4_rvfDerefTmp[2087701] tmp[2422261])
    val _5_rvfDerefTmp[2087709]:file[235580] "temp"
    val tmp[2422267]:file[235580] "temp"
    (2087714 'move' tmp[2422267](2087711 '.v' c[2087665] _5_rvfDerefTmp[2087576]))
    (2422270 'move' _5_rvfDerefTmp[2087709] tmp[2422267])
    wide-ref _6_ret[2087717]:channel(false,dynamic,true)[985627] "temp"
    (2087722 'move' _6_ret[2087717](2087719 '.v' c[2087665] _6_ret[2087578]))
    val _7_hints[2087725]:int(32)[95] "temp"
    val tmp[2422273]:int(32)[95] "temp"
    (2087730 'move' tmp[2422273](2087727 '.v' c[2087665] _7_hints[2087580]))
    (2422276 'move' _7_hints[2087725] tmp[2422273])
    wide-ref _8_error[2087733]:__wide_Error[2381123] "temp"
    (2087738 'move' _8_error[2087733](2087735 '.v' c[2087665] _8_error[2087582]))
    (2087668 call on_fn[1016695] _1_err[2087677] _2_start[2087685] _3_end[2087693] _4_rvfDerefTmp[2087701] _5_rvfDerefTmp[2087709] _6_ret[2087717] _7_hints[2087725] _8_error[2087733])
    (2087741 return _void[55])
  }
  function wrapon_fn[2087852](const in arg dummy_locale_arg[2087854]:chpl_localeID_t[209294], in arg buf[2087856]:c_void_ptr[149], in arg buf_size[2087858]:int(64)[13], in arg c[2087860]:_class_localson_fn[2087770]) : void[4] "on block"
  {
    wide-ref _1_this[2087872]:channel(false,dynamic,true)[985627] "temp"
    (2087877 'move' _1_this[2087872](2087874 '.v' c[2087860] _1_this[2087775]))
    val _2_hints[2087880]:int(32)[95] "temp"
    val tmp[2422304]:int(32)[95] "temp"
    (2087885 'move' tmp[2422304](2087882 '.v' c[2087860] _2_hints[2087777]))
    (2422307 'move' _2_hints[2087880] tmp[2422304])
    val _3_rvfDerefTmp[2087888]:iostyle[231844] "temp"
    val tmp[2422310]:iostyle[231844] "temp"
    (2087893 'move' tmp[2422310](2087890 '.v' c[2087860] _3_rvfDerefTmp[2087779]))
    (2422313 'move' _3_rvfDerefTmp[2087888] tmp[2422310])
    val _4_end[2087896]:int(64)[13] "temp"
    val tmp[2422316]:int(64)[13] "temp"
    (2087901 'move' tmp[2422316](2087898 '.v' c[2087860] _4_end[2087781]))
    (2422319 'move' _4_end[2087896] tmp[2422316])
    val _5_start[2087904]:int(64)[13] "temp"
    val tmp[2422322]:int(64)[13] "temp"
    (2087909 'move' tmp[2422322](2087906 '.v' c[2087860] _5_start[2087783]))
    (2422325 'move' _5_start[2087904] tmp[2422322])
    val _6_rvfDerefTmp[2087912]:file[235580] "temp"
    val tmp[2422328]:file[235580] "temp"
    (2087917 'move' tmp[2422328](2087914 '.v' c[2087860] _6_rvfDerefTmp[2087785]))
    (2422331 'move' _6_rvfDerefTmp[2087912] tmp[2422328])
    wide-ref _7__formal_tmp_error[2087920]:syserr[223584] "temp"
    (2087925 'move' _7__formal_tmp_error[2087920](2087922 '.v' c[2087860] _7__formal_tmp_error[2087787]))
    (2087863 call on_fn[1017725] _1_this[2087872] _2_hints[2087880] _3_rvfDerefTmp[2087888] _4_end[2087896] _5_start[2087904] _6_rvfDerefTmp[2087912] _7__formal_tmp_error[2087920])
    (2087928 return _void[55])
  }
  function wrapon_fn[2087985](const in arg dummy_locale_arg[2087987]:chpl_localeID_t[209294], in arg buf[2087989]:c_void_ptr[149], in arg buf_size[2087991]:int(64)[13], in arg c[2087993]:_class_localson_fn[2087951]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2088005]:channel(false,dynamic,true)[985627] "temp"
    val tmp[2422334]:channel(false,dynamic,true)[985627] "temp"
    (2088010 'move' tmp[2422334](2088007 '.v' c[2087993] _1_rvfDerefTmp[2087956]))
    (2422337 'move' _1_rvfDerefTmp[2088005] tmp[2422334])
    (2087996 call on_fn[1018665] _1_rvfDerefTmp[2088005])
    (2088013 return _void[55])
  }
  function wrapon_fn[2088076](const in arg dummy_locale_arg[2088078]:chpl_localeID_t[209294], in arg buf[2088080]:c_void_ptr[149], in arg buf_size[2088082]:int(64)[13], in arg c[2088084]:_class_localson_fn[2088036]) : void[4] "on block"
  {
    wide-ref _1_lhs[2088096]:channel(false,dynamic,true)[985627] "temp"
    (2088101 'move' _1_lhs[2088096](2088098 '.v' c[2088084] _1_lhs[2088041]))
    (2088087 call on_fn[1018709] _1_lhs[2088096])
    (2088104 return _void[55])
  }
  function wrapon_fn[2088340](const in arg dummy_locale_arg[2088342]:chpl_localeID_t[209294], in arg buf[2088344]:c_void_ptr[149], in arg buf_size[2088346]:int(64)[13], in arg c[2088348]:_class_localson_fn[2088246]) : void[4] "on block"
  {
    val _1_end[2088360]:int(64)[13] "temp"
    val tmp[2422391]:int(64)[13] "temp"
    (2088365 'move' tmp[2422391](2088362 '.v' c[2088348] _1_end[2088251]))
    (2422394 'move' _1_end[2088360] tmp[2422391])
    val _2_rvfDerefTmp[2088368]:iostyle[231844] "temp"
    val tmp[2422397]:iostyle[231844] "temp"
    (2088373 'move' tmp[2422397](2088370 '.v' c[2088348] _2_rvfDerefTmp[2088253]))
    (2422400 'move' _2_rvfDerefTmp[2088368] tmp[2422397])
    val _3_rvfDerefTmp[2088376]:file[235580] "temp"
    val tmp[2422403]:file[235580] "temp"
    (2088381 'move' tmp[2422403](2088378 '.v' c[2088348] _3_rvfDerefTmp[2088255]))
    (2422406 'move' _3_rvfDerefTmp[2088376] tmp[2422403])
    wide-ref _4_ret[2088384]:channel(true,dynamic,true)[1021825] "temp"
    (2088389 'move' _4_ret[2088384](2088386 '.v' c[2088348] _4_ret[2088257]))
    val _5_hints[2088392]:int(32)[95] "temp"
    val tmp[2422409]:int(32)[95] "temp"
    (2088397 'move' tmp[2422409](2088394 '.v' c[2088348] _5_hints[2088259]))
    (2422412 'move' _5_hints[2088392] tmp[2422409])
    val _6_start[2088400]:int(64)[13] "temp"
    val tmp[2422415]:int(64)[13] "temp"
    (2088405 'move' tmp[2422415](2088402 '.v' c[2088348] _6_start[2088261]))
    (2422418 'move' _6_start[2088400] tmp[2422415])
    wide-ref _7_err[2088408]:syserr[223584] "temp"
    (2088413 'move' _7_err[2088408](2088410 '.v' c[2088348] _7_err[2088263]))
    wide-ref _8_error[2088416]:__wide_Error[2381123] "temp"
    (2088421 'move' _8_error[2088416](2088418 '.v' c[2088348] _8_error[2088265]))
    (2088351 call on_fn[1022270] _1_end[2088360] _2_rvfDerefTmp[2088368] _3_rvfDerefTmp[2088376] _4_ret[2088384] _5_hints[2088392] _6_start[2088400] _7_err[2088408] _8_error[2088416])
    (2088424 return _void[55])
  }
  function wrapon_fn[2088535](const in arg dummy_locale_arg[2088537]:chpl_localeID_t[209294], in arg buf[2088539]:c_void_ptr[149], in arg buf_size[2088541]:int(64)[13], in arg c[2088543]:_class_localson_fn[2088453]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2088555]:file[235580] "temp"
    val tmp[2422446]:file[235580] "temp"
    (2088560 'move' tmp[2422446](2088557 '.v' c[2088543] _1_rvfDerefTmp[2088458]))
    (2422449 'move' _1_rvfDerefTmp[2088555] tmp[2422446])
    wide-ref _2__formal_tmp_error[2088563]:syserr[223584] "temp"
    (2088568 'move' _2__formal_tmp_error[2088563](2088565 '.v' c[2088543] _2__formal_tmp_error[2088460]))
    val _3_end[2088571]:int(64)[13] "temp"
    val tmp[2422452]:int(64)[13] "temp"
    (2088576 'move' tmp[2422452](2088573 '.v' c[2088543] _3_end[2088462]))
    (2422455 'move' _3_end[2088571] tmp[2422452])
    wide-ref _4_this[2088579]:channel(true,dynamic,true)[1021825] "temp"
    (2088584 'move' _4_this[2088579](2088581 '.v' c[2088543] _4_this[2088464]))
    val _5_hints[2088587]:int(32)[95] "temp"
    val tmp[2422458]:int(32)[95] "temp"
    (2088592 'move' tmp[2422458](2088589 '.v' c[2088543] _5_hints[2088466]))
    (2422461 'move' _5_hints[2088587] tmp[2422458])
    val _6_rvfDerefTmp[2088595]:iostyle[231844] "temp"
    val tmp[2422464]:iostyle[231844] "temp"
    (2088600 'move' tmp[2422464](2088597 '.v' c[2088543] _6_rvfDerefTmp[2088468]))
    (2422467 'move' _6_rvfDerefTmp[2088595] tmp[2422464])
    val _7_start[2088603]:int(64)[13] "temp"
    val tmp[2422470]:int(64)[13] "temp"
    (2088608 'move' tmp[2422470](2088605 '.v' c[2088543] _7_start[2088470]))
    (2422473 'move' _7_start[2088603] tmp[2422470])
    (2088546 call on_fn[1022761] _1_rvfDerefTmp[2088555] _2__formal_tmp_error[2088563] _3_end[2088571] _4_this[2088579] _5_hints[2088587] _6_rvfDerefTmp[2088595] _7_start[2088603])
    (2088611 return _void[55])
  }
  function wrapon_fn[2088668](const in arg dummy_locale_arg[2088670]:chpl_localeID_t[209294], in arg buf[2088672]:c_void_ptr[149], in arg buf_size[2088674]:int(64)[13], in arg c[2088676]:_class_localson_fn[2088634]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2088688]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2422476]:channel(true,dynamic,true)[1021825] "temp"
    (2088693 'move' tmp[2422476](2088690 '.v' c[2088676] _1_rvfDerefTmp[2088639]))
    (2422479 'move' _1_rvfDerefTmp[2088688] tmp[2422476])
    (2088679 call on_fn[1023373] _1_rvfDerefTmp[2088688])
    (2088696 return _void[55])
  }
  function wrapon_fn[2088759](const in arg dummy_locale_arg[2088761]:chpl_localeID_t[209294], in arg buf[2088763]:c_void_ptr[149], in arg buf_size[2088765]:int(64)[13], in arg c[2088767]:_class_localson_fn[2088719]) : void[4] "on block"
  {
    wide-ref _1_lhs[2088779]:channel(true,dynamic,true)[1021825] "temp"
    (2088784 'move' _1_lhs[2088779](2088781 '.v' c[2088767] _1_lhs[2088724]))
    (2088770 call on_fn[1023417] _1_lhs[2088779])
    (2088787 return _void[55])
  }
  function wrapon_fn[2089053](const in arg dummy_locale_arg[2089055]:chpl_localeID_t[209294], in arg buf[2089057]:c_void_ptr[149], in arg buf_size[2089059]:int(64)[13], in arg c[2089061]:_class_localson_fn[2088959]) : void[4] "on block"
  {
    val _1_start[2089073]:int(64)[13] "temp"
    val tmp[2422558]:int(64)[13] "temp"
    (2089078 'move' tmp[2422558](2089075 '.v' c[2089061] _1_start[2088964]))
    (2422561 'move' _1_start[2089073] tmp[2422558])
    wide-ref _2_ret[2089081]:channel(true,dynamic,false)[1060947] "temp"
    (2089086 'move' _2_ret[2089081](2089083 '.v' c[2089061] _2_ret[2088966]))
    val _3_end[2089089]:int(64)[13] "temp"
    val tmp[2422564]:int(64)[13] "temp"
    (2089094 'move' tmp[2422564](2089091 '.v' c[2089061] _3_end[2088968]))
    (2422567 'move' _3_end[2089089] tmp[2422564])
    val _4_rvfDerefTmp[2089097]:iostyle[231844] "temp"
    val tmp[2422570]:iostyle[231844] "temp"
    (2089102 'move' tmp[2422570](2089099 '.v' c[2089061] _4_rvfDerefTmp[2088970]))
    (2422573 'move' _4_rvfDerefTmp[2089097] tmp[2422570])
    val _5_rvfDerefTmp[2089105]:file[235580] "temp"
    val tmp[2422576]:file[235580] "temp"
    (2089110 'move' tmp[2422576](2089107 '.v' c[2089061] _5_rvfDerefTmp[2088972]))
    (2422579 'move' _5_rvfDerefTmp[2089105] tmp[2422576])
    wide-ref _6_err[2089113]:syserr[223584] "temp"
    (2089118 'move' _6_err[2089113](2089115 '.v' c[2089061] _6_err[2088974]))
    val _7_hints[2089121]:int(32)[95] "temp"
    val tmp[2422582]:int(32)[95] "temp"
    (2089126 'move' tmp[2422582](2089123 '.v' c[2089061] _7_hints[2088976]))
    (2422585 'move' _7_hints[2089121] tmp[2422582])
    wide-ref _8_error[2089129]:__wide_Error[2381123] "temp"
    (2089134 'move' _8_error[2089129](2089131 '.v' c[2089061] _8_error[2088978]))
    (2089064 call on_fn[1061022] _1_start[2089073] _2_ret[2089081] _3_end[2089089] _4_rvfDerefTmp[2089097] _5_rvfDerefTmp[2089105] _6_err[2089113] _7_hints[2089121] _8_error[2089129])
    (2089137 return _void[55])
  }
  function wrapon_fn[2089248](const in arg dummy_locale_arg[2089250]:chpl_localeID_t[209294], in arg buf[2089252]:c_void_ptr[149], in arg buf_size[2089254]:int(64)[13], in arg c[2089256]:_class_localson_fn[2089166]) : void[4] "on block"
  {
    wide-ref _1__formal_tmp_error[2089268]:syserr[223584] "temp"
    (2089273 'move' _1__formal_tmp_error[2089268](2089270 '.v' c[2089256] _1__formal_tmp_error[2089171]))
    val _2_end[2089276]:int(64)[13] "temp"
    val tmp[2422613]:int(64)[13] "temp"
    (2089281 'move' tmp[2422613](2089278 '.v' c[2089256] _2_end[2089173]))
    (2422616 'move' _2_end[2089276] tmp[2422613])
    val _3_hints[2089284]:int(32)[95] "temp"
    val tmp[2422619]:int(32)[95] "temp"
    (2089289 'move' tmp[2422619](2089286 '.v' c[2089256] _3_hints[2089175]))
    (2422622 'move' _3_hints[2089284] tmp[2422619])
    val _4_rvfDerefTmp[2089292]:iostyle[231844] "temp"
    val tmp[2422625]:iostyle[231844] "temp"
    (2089297 'move' tmp[2422625](2089294 '.v' c[2089256] _4_rvfDerefTmp[2089177]))
    (2422628 'move' _4_rvfDerefTmp[2089292] tmp[2422625])
    wide-ref _5_this[2089300]:channel(true,dynamic,false)[1060947] "temp"
    (2089305 'move' _5_this[2089300](2089302 '.v' c[2089256] _5_this[2089179]))
    val _6_start[2089308]:int(64)[13] "temp"
    val tmp[2422631]:int(64)[13] "temp"
    (2089313 'move' tmp[2422631](2089310 '.v' c[2089256] _6_start[2089181]))
    (2422634 'move' _6_start[2089308] tmp[2422631])
    val _7_rvfDerefTmp[2089316]:file[235580] "temp"
    val tmp[2422637]:file[235580] "temp"
    (2089321 'move' tmp[2422637](2089318 '.v' c[2089256] _7_rvfDerefTmp[2089183]))
    (2422640 'move' _7_rvfDerefTmp[2089316] tmp[2422637])
    (2089259 call on_fn[1061474] _1__formal_tmp_error[2089268] _2_end[2089276] _3_hints[2089284] _4_rvfDerefTmp[2089292] _5_this[2089300] _6_start[2089308] _7_rvfDerefTmp[2089316])
    (2089324 return _void[55])
  }
  function wrapon_fn[2089381](const in arg dummy_locale_arg[2089383]:chpl_localeID_t[209294], in arg buf[2089385]:c_void_ptr[149], in arg buf_size[2089387]:int(64)[13], in arg c[2089389]:_class_localson_fn[2089347]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2089401]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422643]:channel(true,dynamic,false)[1060947] "temp"
    (2089406 'move' tmp[2422643](2089403 '.v' c[2089389] _1_rvfDerefTmp[2089352]))
    (2422646 'move' _1_rvfDerefTmp[2089401] tmp[2422643])
    (2089392 call on_fn[1062086] _1_rvfDerefTmp[2089401])
    (2089409 return _void[55])
  }
  function wrapon_fn[2089472](const in arg dummy_locale_arg[2089474]:chpl_localeID_t[209294], in arg buf[2089476]:c_void_ptr[149], in arg buf_size[2089478]:int(64)[13], in arg c[2089480]:_class_localson_fn[2089432]) : void[4] "on block"
  {
    wide-ref _1_lhs[2089492]:channel(true,dynamic,false)[1060947] "temp"
    (2089497 'move' _1_lhs[2089492](2089494 '.v' c[2089480] _1_lhs[2089437]))
    (2089483 call on_fn[1062130] _1_lhs[2089492])
    (2089500 return _void[55])
  }
  function wrapon_fn[2089570](const in arg dummy_locale_arg[2089572]:chpl_localeID_t[209294], in arg buf[2089574]:c_void_ptr[149], in arg buf_size[2089576]:int(64)[13], in arg c[2089578]:_class_localson_fn[2089524]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2089590]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422662]:channel(true,dynamic,false)[1060947] "temp"
    (2089595 'move' tmp[2422662](2089592 '.v' c[2089578] _1_rvfDerefTmp[2089529]))
    (2422665 'move' _1_rvfDerefTmp[2089590] tmp[2422662])
    wide-ref _2_err[2089598]:syserr[223584] "temp"
    (2089603 'move' _2_err[2089598](2089600 '.v' c[2089578] _2_err[2089531]))
    (2089581 call on_fn[1062455] _1_rvfDerefTmp[2089590] _2_err[2089598])
    (2089606 return _void[55])
  }
  function wrapon_fn[2089708](const in arg dummy_locale_arg[2089710]:chpl_localeID_t[209294], in arg buf[2089712]:c_void_ptr[149], in arg buf_size[2089714]:int(64)[13], in arg c[2089716]:_class_localson_fn[2089632]) : void[4] "on block"
  {
    wide-ref _1_this[2089728]:channel(true,dynamic,false)[1060947] "temp"
    (2089733 'move' _1_this[2089728](2089730 '.v' c[2089716] _1_this[2089637]))
    wide-ref _2_path[2089736]:string[26] "temp"
    (2089741 'move' _2_path[2089736](2089738 '.v' c[2089716] _2_path[2089639]))
    wide-ref _3_offset[2089744]:int(64)[13] "temp"
    (2089749 'move' _3_offset[2089744](2089746 '.v' c[2089716] _3_offset[2089641]))
    wide-ref _4_error[2089752]:__wide_Error[2381123] "temp"
    (2089757 'move' _4_error[2089752](2089754 '.v' c[2089716] _4_error[2089643]))
    (2089719 call on_fn[1062932] _1_this[2089728] _2_path[2089736] _3_offset[2089744] _4_error[2089752])
    (2089760 return _void[55])
  }
  function wrapon_fn[2089850](const in arg dummy_locale_arg[2089852]:chpl_localeID_t[209294], in arg buf[2089854]:c_void_ptr[149], in arg buf_size[2089856]:int(64)[13], in arg c[2089858]:_class_localson_fn[2089786]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2089870]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422707]:channel(true,dynamic,false)[1060947] "temp"
    (2089875 'move' tmp[2422707](2089872 '.v' c[2089858] _1_rvfDerefTmp[2089791]))
    (2422710 'move' _1_rvfDerefTmp[2089870] tmp[2422707])
    wide-ref _2_args[2089878]:1*byteIndex[1057081] "temp"
    (2089883 'move' _2_args[2089878](2089880 '.v' c[2089858] _2_args[2089793]))
    val _3_rvfDerefTmp[2089886]:locale[28] "temp"
    val tmp[2422713]:locale[28] "temp"
    (2089891 'move' tmp[2422713](2089888 '.v' c[2089858] _3_rvfDerefTmp[2089795]))
    (2422716 'move' _3_rvfDerefTmp[2089886] tmp[2422713])
    wide-ref _4_error[2089894]:__wide_Error[2381123] "temp"
    (2089899 'move' _4_error[2089894](2089896 '.v' c[2089858] _4_error[2089797]))
    (2089861 call on_fn[1066089] _1_rvfDerefTmp[2089870] _2_args[2089878] _3_rvfDerefTmp[2089886] _4_error[2089894])
    (2089902 return _void[55])
  }
  function wrapon_fn[2089992](const in arg dummy_locale_arg[2089994]:chpl_localeID_t[209294], in arg buf[2089996]:c_void_ptr[149], in arg buf_size[2089998]:int(64)[13], in arg c[2090000]:_class_localson_fn[2089928]) : void[4] "on block"
  {
    wide-ref _1_this[2090012]:channel(true,dynamic,false)[1060947] "temp"
    (2090017 'move' _1_this[2090012](2090014 '.v' c[2090000] _1_this[2089933]))
    val _2_x[2090020]:int(64)[13] "temp"
    val tmp[2422744]:int(64)[13] "temp"
    (2090025 'move' tmp[2422744](2090022 '.v' c[2090000] _2_x[2089935]))
    (2422747 'move' _2_x[2090020] tmp[2422744])
    val _3_rvfDerefTmp[2090028]:locale[28] "temp"
    val tmp[2422750]:locale[28] "temp"
    (2090033 'move' tmp[2422750](2090030 '.v' c[2090000] _3_rvfDerefTmp[2089937]))
    (2422753 'move' _3_rvfDerefTmp[2090028] tmp[2422750])
    wide-ref _4_error[2090036]:__wide_Error[2381123] "temp"
    (2090041 'move' _4_error[2090036](2090038 '.v' c[2090000] _4_error[2089939]))
    (2090003 call on_fn[1068868] _1_this[2090012] _2_x[2090020] _3_rvfDerefTmp[2090028] _4_error[2090036])
    (2090044 return _void[55])
  }
  function wrapon_fn[2090114](const in arg dummy_locale_arg[2090116]:chpl_localeID_t[209294], in arg buf[2090118]:c_void_ptr[149], in arg buf_size[2090120]:int(64)[13], in arg c[2090122]:_class_localson_fn[2090068]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2090134]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422769]:channel(true,dynamic,false)[1060947] "temp"
    (2090139 'move' tmp[2422769](2090136 '.v' c[2090122] _1_rvfDerefTmp[2090073]))
    (2422772 'move' _1_rvfDerefTmp[2090134] tmp[2422769])
    wide-ref _2_ret[2090142]:int(64)[13] "temp"
    (2090147 'move' _2_ret[2090142](2090144 '.v' c[2090122] _2_ret[2090075]))
    (2090125 call on_fn[1080205] _1_rvfDerefTmp[2090134] _2_ret[2090142])
    (2090150 return _void[55])
  }
  function wrapon_fn[2090274](const in arg dummy_locale_arg[2090276]:chpl_localeID_t[209294], in arg buf[2090278]:c_void_ptr[149], in arg buf_size[2090280]:int(64)[13], in arg c[2090282]:_class_localson_fn[2090180]) : void[4] "on block"
  {
    val _1_start[2090294]:int(64)[13] "temp"
    val tmp[2422814]:int(64)[13] "temp"
    (2090299 'move' tmp[2422814](2090296 '.v' c[2090282] _1_start[2090185]))
    (2422817 'move' _1_start[2090294] tmp[2422814])
    wide-ref _2_ret[2090302]:channel(false,dynamic,false)[1080682] "temp"
    (2090307 'move' _2_ret[2090302](2090304 '.v' c[2090282] _2_ret[2090187]))
    val _3_rvfDerefTmp[2090310]:iostyle[231844] "temp"
    val tmp[2422820]:iostyle[231844] "temp"
    (2090315 'move' tmp[2422820](2090312 '.v' c[2090282] _3_rvfDerefTmp[2090189]))
    (2422823 'move' _3_rvfDerefTmp[2090310] tmp[2422820])
    val _4_end[2090318]:int(64)[13] "temp"
    val tmp[2422826]:int(64)[13] "temp"
    (2090323 'move' tmp[2422826](2090320 '.v' c[2090282] _4_end[2090191]))
    (2422829 'move' _4_end[2090318] tmp[2422826])
    val _5_rvfDerefTmp[2090326]:file[235580] "temp"
    val tmp[2422832]:file[235580] "temp"
    (2090331 'move' tmp[2422832](2090328 '.v' c[2090282] _5_rvfDerefTmp[2090193]))
    (2422835 'move' _5_rvfDerefTmp[2090326] tmp[2422832])
    wide-ref _6_err[2090334]:syserr[223584] "temp"
    (2090339 'move' _6_err[2090334](2090336 '.v' c[2090282] _6_err[2090195]))
    val _7_hints[2090342]:int(32)[95] "temp"
    val tmp[2422838]:int(32)[95] "temp"
    (2090347 'move' tmp[2422838](2090344 '.v' c[2090282] _7_hints[2090197]))
    (2422841 'move' _7_hints[2090342] tmp[2422838])
    wide-ref _8_error[2090350]:__wide_Error[2381123] "temp"
    (2090355 'move' _8_error[2090350](2090352 '.v' c[2090282] _8_error[2090199]))
    (2090285 call on_fn[1080757] _1_start[2090294] _2_ret[2090302] _3_rvfDerefTmp[2090310] _4_end[2090318] _5_rvfDerefTmp[2090326] _6_err[2090334] _7_hints[2090342] _8_error[2090350])
    (2090358 return _void[55])
  }
  function wrapon_fn[2090469](const in arg dummy_locale_arg[2090471]:chpl_localeID_t[209294], in arg buf[2090473]:c_void_ptr[149], in arg buf_size[2090475]:int(64)[13], in arg c[2090477]:_class_localson_fn[2090387]) : void[4] "on block"
  {
    val _1_end[2090489]:int(64)[13] "temp"
    val tmp[2422869]:int(64)[13] "temp"
    (2090494 'move' tmp[2422869](2090491 '.v' c[2090477] _1_end[2090392]))
    (2422872 'move' _1_end[2090489] tmp[2422869])
    val _2_hints[2090497]:int(32)[95] "temp"
    val tmp[2422875]:int(32)[95] "temp"
    (2090502 'move' tmp[2422875](2090499 '.v' c[2090477] _2_hints[2090394]))
    (2422878 'move' _2_hints[2090497] tmp[2422875])
    val _3_rvfDerefTmp[2090505]:iostyle[231844] "temp"
    val tmp[2422881]:iostyle[231844] "temp"
    (2090510 'move' tmp[2422881](2090507 '.v' c[2090477] _3_rvfDerefTmp[2090396]))
    (2422884 'move' _3_rvfDerefTmp[2090505] tmp[2422881])
    wide-ref _4_this[2090513]:channel(false,dynamic,false)[1080682] "temp"
    (2090518 'move' _4_this[2090513](2090515 '.v' c[2090477] _4_this[2090398]))
    val _5_start[2090521]:int(64)[13] "temp"
    val tmp[2422887]:int(64)[13] "temp"
    (2090526 'move' tmp[2422887](2090523 '.v' c[2090477] _5_start[2090400]))
    (2422890 'move' _5_start[2090521] tmp[2422887])
    val _6_rvfDerefTmp[2090529]:file[235580] "temp"
    val tmp[2422893]:file[235580] "temp"
    (2090534 'move' tmp[2422893](2090531 '.v' c[2090477] _6_rvfDerefTmp[2090402]))
    (2422896 'move' _6_rvfDerefTmp[2090529] tmp[2422893])
    wide-ref _7__formal_tmp_error[2090537]:syserr[223584] "temp"
    (2090542 'move' _7__formal_tmp_error[2090537](2090539 '.v' c[2090477] _7__formal_tmp_error[2090404]))
    (2090480 call on_fn[1081206] _1_end[2090489] _2_hints[2090497] _3_rvfDerefTmp[2090505] _4_this[2090513] _5_start[2090521] _6_rvfDerefTmp[2090529] _7__formal_tmp_error[2090537])
    (2090545 return _void[55])
  }
  function wrapon_fn[2090602](const in arg dummy_locale_arg[2090604]:chpl_localeID_t[209294], in arg buf[2090606]:c_void_ptr[149], in arg buf_size[2090608]:int(64)[13], in arg c[2090610]:_class_localson_fn[2090568]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2090622]:channel(false,dynamic,false)[1080682] "temp"
    val tmp[2422899]:channel(false,dynamic,false)[1080682] "temp"
    (2090627 'move' tmp[2422899](2090624 '.v' c[2090610] _1_rvfDerefTmp[2090573]))
    (2422902 'move' _1_rvfDerefTmp[2090622] tmp[2422899])
    (2090613 call on_fn[1081818] _1_rvfDerefTmp[2090622])
    (2090630 return _void[55])
  }
  function wrapon_fn[2090693](const in arg dummy_locale_arg[2090695]:chpl_localeID_t[209294], in arg buf[2090697]:c_void_ptr[149], in arg buf_size[2090699]:int(64)[13], in arg c[2090701]:_class_localson_fn[2090653]) : void[4] "on block"
  {
    wide-ref _1_lhs[2090713]:channel(false,dynamic,false)[1080682] "temp"
    (2090718 'move' _1_lhs[2090713](2090715 '.v' c[2090701] _1_lhs[2090658]))
    (2090704 call on_fn[1081862] _1_lhs[2090713])
    (2090721 return _void[55])
  }
  function wrapon_fn[2090791](const in arg dummy_locale_arg[2090793]:chpl_localeID_t[209294], in arg buf[2090795]:c_void_ptr[149], in arg buf_size[2090797]:int(64)[13], in arg c[2090799]:_class_localson_fn[2090745]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2090811]:channel(false,dynamic,false)[1080682] "temp"
    val tmp[2422918]:channel(false,dynamic,false)[1080682] "temp"
    (2090816 'move' tmp[2422918](2090813 '.v' c[2090799] _1_rvfDerefTmp[2090750]))
    (2422921 'move' _1_rvfDerefTmp[2090811] tmp[2422918])
    wide-ref _2_err[2090819]:syserr[223584] "temp"
    (2090824 'move' _2_err[2090819](2090821 '.v' c[2090799] _2_err[2090752]))
    (2090802 call on_fn[1082187] _1_rvfDerefTmp[2090811] _2_err[2090819])
    (2090827 return _void[55])
  }
  function wrapon_fn[2090923](const in arg dummy_locale_arg[2090925]:chpl_localeID_t[209294], in arg buf[2090927]:c_void_ptr[149], in arg buf_size[2090929]:int(64)[13], in arg c[2090931]:_class_localson_fn[2090853]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2090943]:channel(false,dynamic,false)[1080682] "temp"
    val tmp[2422963]:channel(false,dynamic,false)[1080682] "temp"
    (2090948 'move' tmp[2422963](2090945 '.v' c[2090931] _1_rvfDerefTmp[2090858]))
    (2422966 'move' _1_rvfDerefTmp[2090943] tmp[2422963])
    wide-ref _2_path[2090951]:string[26] "temp"
    (2090956 'move' _2_path[2090951](2090953 '.v' c[2090931] _2_path[2090860]))
    wide-ref _3_offset[2090959]:int(64)[13] "temp"
    (2090964 'move' _3_offset[2090959](2090961 '.v' c[2090931] _3_offset[2090862]))
    wide-ref _4_error[2090967]:__wide_Error[2381123] "temp"
    (2090972 'move' _4_error[2090967](2090969 '.v' c[2090931] _4_error[2090864]))
    (2090934 call on_fn[1082616] _1_rvfDerefTmp[2090943] _2_path[2090951] _3_offset[2090959] _4_error[2090967])
    (2090975 return _void[55])
  }
  function wrapon_fn[2091207](const in arg dummy_locale_arg[2091209]:chpl_localeID_t[209294], in arg buf[2091211]:c_void_ptr[149], in arg buf_size[2091213]:int(64)[13], in arg c[2091215]:_class_localson_fn[2091143]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2091227]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422981]:channel(true,dynamic,false)[1060947] "temp"
    (2091232 'move' tmp[2422981](2091229 '.v' c[2091215] _1_rvfDerefTmp[2091148]))
    (2422984 'move' _1_rvfDerefTmp[2091227] tmp[2422981])
    wide-ref _2_args[2091235]:(string,codepointIndex,string)[1158555] "temp"
    (2091240 'move' _2_args[2091235](2091237 '.v' c[2091215] _2_args[2091150]))
    val _3_rvfDerefTmp[2091243]:locale[28] "temp"
    val tmp[2422987]:locale[28] "temp"
    (2091248 'move' tmp[2422987](2091245 '.v' c[2091215] _3_rvfDerefTmp[2091152]))
    (2422990 'move' _3_rvfDerefTmp[2091243] tmp[2422987])
    wide-ref _4_error[2091251]:__wide_Error[2381123] "temp"
    (2091256 'move' _4_error[2091251](2091253 '.v' c[2091215] _4_error[2091154]))
    (2091218 call on_fn[1164907] _1_rvfDerefTmp[2091227] _2_args[2091235] _3_rvfDerefTmp[2091243] _4_error[2091251])
    (2091259 return _void[55])
  }
  function wrapon_fn[2091349](const in arg dummy_locale_arg[2091351]:chpl_localeID_t[209294], in arg buf[2091353]:c_void_ptr[149], in arg buf_size[2091355]:int(64)[13], in arg c[2091357]:_class_localson_fn[2091285]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2091369]:channel(true,dynamic,false)[1060947] "temp"
    val tmp[2422993]:channel(true,dynamic,false)[1060947] "temp"
    (2091374 'move' tmp[2422993](2091371 '.v' c[2091357] _1_rvfDerefTmp[2091290]))
    (2422996 'move' _1_rvfDerefTmp[2091369] tmp[2422993])
    wide-ref _2_args[2091377]:(string,codepointIndex,string,int(64))[1176520] "temp"
    (2091382 'move' _2_args[2091377](2091379 '.v' c[2091357] _2_args[2091292]))
    val _3_rvfDerefTmp[2091385]:locale[28] "temp"
    val tmp[2422999]:locale[28] "temp"
    (2091390 'move' tmp[2422999](2091387 '.v' c[2091357] _3_rvfDerefTmp[2091294]))
    (2423002 'move' _3_rvfDerefTmp[2091385] tmp[2422999])
    wide-ref _4_error[2091393]:__wide_Error[2381123] "temp"
    (2091398 'move' _4_error[2091393](2091395 '.v' c[2091357] _4_error[2091296]))
    (2091360 call on_fn[1180386] _1_rvfDerefTmp[2091369] _2_args[2091377] _3_rvfDerefTmp[2091385] _4_error[2091393])
    (2091401 return _void[55])
  }
  function wrapon_fn[2094171](const in arg dummy_locale_arg[2094173]:chpl_localeID_t[209294], in arg buf[2094175]:c_void_ptr[149], in arg buf_size[2094177]:int(64)[13], in arg c[2094179]:_class_localson_fn[2094107]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2094191]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2423169]:channel(true,dynamic,true)[1021825] "temp"
    (2094196 'move' tmp[2423169](2094193 '.v' c[2094179] _1_rvfDerefTmp[2094112]))
    (2423172 'move' _1_rvfDerefTmp[2094191] tmp[2423169])
    wide-ref _2_args[2094199]:([domain(1,int(64),false)] real(64),ioNewline)[1392594] "temp"
    (2094204 'move' _2_args[2094199](2094201 '.v' c[2094179] _2_args[2094114]))
    val _3_rvfDerefTmp[2094207]:locale[28] "temp"
    val tmp[2423175]:locale[28] "temp"
    (2094212 'move' tmp[2423175](2094209 '.v' c[2094179] _3_rvfDerefTmp[2094116]))
    (2423178 'move' _3_rvfDerefTmp[2094207] tmp[2423175])
    wide-ref _4_error[2094215]:__wide_Error[2381123] "temp"
    (2094220 'move' _4_error[2094215](2094217 '.v' c[2094179] _4_error[2094118]))
    (2094182 call on_fn[1392469] _1_rvfDerefTmp[2094191] _2_args[2094199] _3_rvfDerefTmp[2094207] _4_error[2094215])
    (2094223 return _void[55])
  }
  function wrapon_fn[2094293](const in arg dummy_locale_arg[2094295]:chpl_localeID_t[209294], in arg buf[2094297]:c_void_ptr[149], in arg buf_size[2094299]:int(64)[13], in arg c[2094301]:_class_localson_fn[2094247]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2094313]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2423181]:channel(true,dynamic,true)[1021825] "temp"
    (2094318 'move' tmp[2423181](2094315 '.v' c[2094301] _1_rvfDerefTmp[2094252]))
    (2423184 'move' _1_rvfDerefTmp[2094313] tmp[2423181])
    wide-ref _2_err[2094321]:syserr[223584] "temp"
    (2094326 'move' _2_err[2094321](2094323 '.v' c[2094301] _2_err[2094254]))
    (2094304 call on_fn[1392911] _1_rvfDerefTmp[2094313] _2_err[2094321])
    (2094329 return _void[55])
  }
  function wrapon_fn[2094425](const in arg dummy_locale_arg[2094427]:chpl_localeID_t[209294], in arg buf[2094429]:c_void_ptr[149], in arg buf_size[2094431]:int(64)[13], in arg c[2094433]:_class_localson_fn[2094355]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2094445]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2423226]:channel(true,dynamic,true)[1021825] "temp"
    (2094450 'move' tmp[2423226](2094447 '.v' c[2094433] _1_rvfDerefTmp[2094360]))
    (2423229 'move' _1_rvfDerefTmp[2094445] tmp[2423226])
    wide-ref _2_path[2094453]:string[26] "temp"
    (2094458 'move' _2_path[2094453](2094455 '.v' c[2094433] _2_path[2094362]))
    wide-ref _3_offset[2094461]:int(64)[13] "temp"
    (2094466 'move' _3_offset[2094461](2094463 '.v' c[2094433] _3_offset[2094364]))
    wide-ref _4_error[2094469]:__wide_Error[2381123] "temp"
    (2094474 'move' _4_error[2094469](2094471 '.v' c[2094433] _4_error[2094366]))
    (2094436 call on_fn[1393328] _1_rvfDerefTmp[2094445] _2_path[2094453] _3_offset[2094461] _4_error[2094469])
    (2094477 return _void[55])
  }
  function wrapon_fn[2094534](const in arg dummy_locale_arg[2094536]:chpl_localeID_t[209294], in arg buf[2094538]:c_void_ptr[149], in arg buf_size[2094540]:int(64)[13], in arg c[2094542]:_class_localson_fn[2094500]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2094554]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2423232]:channel(true,dynamic,true)[1021825] "temp"
    (2094559 'move' tmp[2423232](2094556 '.v' c[2094542] _1_rvfDerefTmp[2094505]))
    (2423235 'move' _1_rvfDerefTmp[2094554] tmp[2423232])
    (2094545 call on_fn[1393602] _1_rvfDerefTmp[2094554])
    (2094562 return _void[55])
  }
  function wrapon_fn[2094645](const in arg dummy_locale_arg[2094647]:chpl_localeID_t[209294], in arg buf[2094649]:c_void_ptr[149], in arg buf_size[2094651]:int(64)[13], in arg c[2094653]:_class_localson_fn[2094587]) : void[4] "on block"
  {
    wide-ref _1_this[2094665]:channel(true,dynamic,false)[1060947] "temp"
    (2094670 'move' _1_this[2094665](2094667 '.v' c[2094653] _1_this[2094592]))
    val _2_element[2094673]:int(64)[13] "temp"
    val tmp[2423263]:int(64)[13] "temp"
    (2094678 'move' tmp[2423263](2094675 '.v' c[2094653] _2_element[2094594]))
    (2423266 'move' _2_element[2094673] tmp[2423263])
    wide-ref _3_ret[2094681]:int(64)[13] "temp"
    (2094686 'move' _3_ret[2094681](2094683 '.v' c[2094653] _3_ret[2094596]))
    (2094656 call on_fn[1400789] _1_this[2094665] _2_element[2094673] _3_ret[2094681])
    (2094689 return _void[55])
  }
  function wrapon_fn[2094765](const in arg dummy_locale_arg[2094767]:chpl_localeID_t[209294], in arg buf[2094769]:c_void_ptr[149], in arg buf_size[2094771]:int(64)[13], in arg c[2094773]:_class_localson_fn[2094713]) : void[4] "on block"
  {
    wide-ref _1_this[2094785]:channel(true,dynamic,false)[1060947] "temp"
    (2094790 'move' _1_this[2094785](2094787 '.v' c[2094773] _1_this[2094718]))
    wide-ref _2_ret[2094793]:uint(8)[100] "temp"
    (2094798 'move' _2_ret[2094793](2094795 '.v' c[2094773] _2_ret[2094720]))
    (2094776 call on_fn[1401829] _1_this[2094785] _2_ret[2094793])
    (2094801 return _void[55])
  }
  function wrapon_fn[2094904](const in arg dummy_locale_arg[2094906]:chpl_localeID_t[209294], in arg buf[2094908]:c_void_ptr[149], in arg buf_size[2094910]:int(64)[13], in arg c[2094912]:_class_localson_fn[2094828]) : void[4] "on block"
  {
    wide-ref _1_this[2094924]:channel(true,dynamic,false)[1060947] "temp"
    (2094929 'move' _1_this[2094924](2094926 '.v' c[2094912] _1_this[2094833]))
    val _2_x[2094932]:__wide__ddata__real64[2381466] "temp"
    (2094937 'move' _2_x[2094932](2094934 '.v' c[2094912] _2_x[2094835]))
    val _3_len[2094940]:int(64)[13] "temp"
    val tmp[2423332]:int(64)[13] "temp"
    (2094945 'move' tmp[2423332](2094942 '.v' c[2094912] _3_len[2094837]))
    (2423335 'move' _3_len[2094940] tmp[2423332])
    wide-ref _4_err[2094948]:syserr[223584] "temp"
    (2094953 'move' _4_err[2094948](2094950 '.v' c[2094912] _4_err[2094839]))
    wide-ref _5_error[2094956]:__wide_Error[2381123] "temp"
    (2094961 'move' _5_error[2094956](2094958 '.v' c[2094912] _5_error[2094841]))
    (2094915 call on_fn[1407864] _1_this[2094924] _2_x[2094932] _3_len[2094940] _4_err[2094948] _5_error[2094956])
    (2094964 return _void[55])
  }
  function wrapon_fn[2095054](const in arg dummy_locale_arg[2095056]:chpl_localeID_t[209294], in arg buf[2095058]:c_void_ptr[149], in arg buf_size[2095060]:int(64)[13], in arg c[2095062]:_class_localson_fn[2094990]) : void[4] "on block"
  {
    wide-ref _1_this[2095074]:channel(true,dynamic,false)[1060947] "temp"
    (2095079 'move' _1_this[2095074](2095076 '.v' c[2095062] _1_this[2094995]))
    val _2_rvfDerefTmp[2095082]:ioLiteral[238753] "temp"
    val tmp[2423363]:ioLiteral[238753] "temp"
    (2095087 'move' tmp[2423363](2095084 '.v' c[2095062] _2_rvfDerefTmp[2094997]))
    (2423366 'move' _2_rvfDerefTmp[2095082] tmp[2423363])
    val _3_rvfDerefTmp[2095090]:locale[28] "temp"
    val tmp[2423369]:locale[28] "temp"
    (2095095 'move' tmp[2423369](2095092 '.v' c[2095062] _3_rvfDerefTmp[2094999]))
    (2423372 'move' _3_rvfDerefTmp[2095090] tmp[2423369])
    wide-ref _4_error[2095098]:__wide_Error[2381123] "temp"
    (2095103 'move' _4_error[2095098](2095100 '.v' c[2095062] _4_error[2095001]))
    (2095065 call on_fn[1408604] _1_this[2095074] _2_rvfDerefTmp[2095082] _3_rvfDerefTmp[2095090] _4_error[2095098])
    (2095106 return _void[55])
  }
  function wrapon_fn[2095196](const in arg dummy_locale_arg[2095198]:chpl_localeID_t[209294], in arg buf[2095200]:c_void_ptr[149], in arg buf_size[2095202]:int(64)[13], in arg c[2095204]:_class_localson_fn[2095132]) : void[4] "on block"
  {
    wide-ref _1_this[2095216]:channel(true,dynamic,false)[1060947] "temp"
    (2095221 'move' _1_this[2095216](2095218 '.v' c[2095204] _1_this[2095137]))
    val _2_x[2095224]:real(64)[16] "temp"
    val tmp[2423400]:real(64)[16] "temp"
    (2095229 'move' tmp[2423400](2095226 '.v' c[2095204] _2_x[2095139]))
    (2423403 'move' _2_x[2095224] tmp[2423400])
    val _3_rvfDerefTmp[2095232]:locale[28] "temp"
    val tmp[2423406]:locale[28] "temp"
    (2095237 'move' tmp[2423406](2095234 '.v' c[2095204] _3_rvfDerefTmp[2095141]))
    (2423409 'move' _3_rvfDerefTmp[2095232] tmp[2423406])
    wide-ref _4_error[2095240]:__wide_Error[2381123] "temp"
    (2095245 'move' _4_error[2095240](2095242 '.v' c[2095204] _4_error[2095143]))
    (2095207 call on_fn[1421810] _1_this[2095216] _2_x[2095224] _3_rvfDerefTmp[2095232] _4_error[2095240])
    (2095248 return _void[55])
  }
  function wrapon_fn[2095338](const in arg dummy_locale_arg[2095340]:chpl_localeID_t[209294], in arg buf[2095342]:c_void_ptr[149], in arg buf_size[2095344]:int(64)[13], in arg c[2095346]:_class_localson_fn[2095274]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2095358]:channel(true,dynamic,true)[1021825] "temp"
    val tmp[2423412]:channel(true,dynamic,true)[1021825] "temp"
    (2095363 'move' tmp[2423412](2095360 '.v' c[2095346] _1_rvfDerefTmp[2095279]))
    (2423415 'move' _1_rvfDerefTmp[2095358] tmp[2423412])
    wide-ref _2_args[2095366]:(int(64),ioNewline)[1433256] "temp"
    (2095371 'move' _2_args[2095366](2095368 '.v' c[2095346] _2_args[2095281]))
    val _3_rvfDerefTmp[2095374]:locale[28] "temp"
    val tmp[2423418]:locale[28] "temp"
    (2095379 'move' tmp[2423418](2095376 '.v' c[2095346] _3_rvfDerefTmp[2095283]))
    (2423421 'move' _3_rvfDerefTmp[2095374] tmp[2423418])
    wide-ref _4_error[2095382]:__wide_Error[2381123] "temp"
    (2095387 'move' _4_error[2095382](2095384 '.v' c[2095346] _4_error[2095285]))
    (2095349 call on_fn[1433131] _1_rvfDerefTmp[2095358] _2_args[2095366] _3_rvfDerefTmp[2095374] _4_error[2095382])
    (2095390 return _void[55])
  }
  function wrapon_fn[2097344](const in arg dummy_locale_arg[2097346]:chpl_localeID_t[209294], in arg buf[2097348]:c_void_ptr[149], in arg buf_size[2097350]:int(64)[13], in arg c[2097352]:_class_localson_fn[2097304]) : void[4] "on block"
  {
    wide-ref _1_this[2097364]:channel(false,dynamic,true)[985627] "temp"
    (2097369 'move' _1_this[2097364](2097366 '.v' c[2097352] _1_this[2097309]))
    (2097355 call on_fn[1471095] _1_this[2097364])
    (2097372 return _void[55])
  }
  function wrapon_fn[2099135](const in arg dummy_locale_arg[2099137]:chpl_localeID_t[209294], in arg buf[2099139]:c_void_ptr[149], in arg buf_size[2099141]:int(64)[13], in arg c[2099143]:_class_localson_fn[2099095]) : void[4] "on block"
  {
    wide-ref _1_this[2099155]:channel(true,dynamic,true)[1021825] "temp"
    (2099160 'move' _1_this[2099155](2099157 '.v' c[2099143] _1_this[2099100]))
    (2099146 call on_fn[1534074] _1_this[2099155])
    (2099163 return _void[55])
  }
  function wrapon_fn[2099311](const in arg dummy_locale_arg[2099313]:chpl_localeID_t[209294], in arg buf[2099315]:c_void_ptr[149], in arg buf_size[2099317]:int(64)[13], in arg c[2099319]:_class_localson_fn[2099271]) : void[4] "on block"
  {
    wide-ref _1_this[2099331]:channel(true,dynamic,false)[1060947] "temp"
    (2099336 'move' _1_this[2099331](2099333 '.v' c[2099319] _1_this[2099276]))
    (2099322 call on_fn[1536250] _1_this[2099331])
    (2099339 return _void[55])
  }
  function wrapon_fn[2099572](const in arg dummy_locale_arg[2099574]:chpl_localeID_t[209294], in arg buf[2099576]:c_void_ptr[149], in arg buf_size[2099578]:int(64)[13], in arg c[2099580]:_class_localson_fn[2099532]) : void[4] "on block"
  {
    wide-ref _1_this[2099592]:channel(false,dynamic,false)[1080682] "temp"
    (2099597 'move' _1_this[2099592](2099594 '.v' c[2099580] _1_this[2099537]))
    (2099583 call on_fn[1540504] _1_this[2099592])
    (2099600 return _void[55])
  }
}