AST dump for ArrayViewReindex after pass scopeResolve.
Module use list: ChapelStandard 

{
  function ArrayViewReindexDist[196281](?).downDist[196071](arg _mt[196285]:_MT[238], arg this[196283]:ArrayViewReindexDist[196281](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196088 call _cond_test(196076 call _isPrivatized(391961 call . this[196283] c"downDistInst")))
    {
      (196083 return(196082 call chpl_getPrivatizedCopy(196079 'typeof'(391966 call . this[196283] c"downDistInst"))(391971 call . this[196283] c"downDistPid")))
    }
    {
      (196086 return(391976 call . this[196283] c"downDistInst"))
    }
  }
  function ArrayViewReindexDist[196281](?).dsiNewRectangularDom[196101](arg _mt[196289]:_MT[238], arg this[196287]:ArrayViewReindexDist[196281](?), param arg rank[196099]:_any[178](?), arg idxType[196103]:_any[178](?), param arg stridable[196105]:_any[178](?), arg inds[196107]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown newdom[196135](196111 'new'(_chpl_manager = unmanaged[220](?))(196134 call ArrayViewReindexDom[391980](?)(rank = rank[196099])(idxType = idxType[196103])(stridable = stridable[196105])(downdomPid =(391990 call . this[196287] c"downdomPid"))(downdomInst =(391995 call . this[196287] c"downdomInst"))(distPid =(196125 call . this[196287] c"pid"))(distInst =(196132 call _to_unmanaged this[196287]))))
    (196138 'end of statement')
    (196146 call(196141 call . newdom[196135] c"dsiSetIndices") inds[196107])
    (196149 return newdom[196135])
  }
  function ArrayViewReindexDist[196281](?).dsiClone[196155](arg _mt[196293]:_MT[238], arg this[196291]:ArrayViewReindexDist[196281](?)) : _unknown[51] "method" "primary method"
  {
    (196173 return(196159 'new'(_chpl_manager = unmanaged[220](?))(196172 call ArrayViewReindexDist[384321](?)(downDistPid =(392004 call . this[196291] c"downDistPid"))(downDistInst =(392009 call . this[196291] c"downDistInst"))(updom =(392014 call . this[196291] c"updom"))(downdomPid =(392019 call . this[196291] c"downdomPid"))(downdomInst =(392024 call . this[196291] c"downdomInst")))))
  }
  function ArrayViewReindexDist[196281](?).dsiSupportsPrivatization[196180](arg _mt[196297]:_MT[238], arg this[196295]:ArrayViewReindexDist[196281](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (196188 return(196187 call(196183 call .(362472 call . this[196295] c"downDistInst") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexDist[196281](?).dsiGetPrivatizeData[196195](arg _mt[196301]:_MT[238], arg this[196299]:ArrayViewReindexDist[196281](?)) : _unknown[51] "method" "primary method"
  {
    (196205 return(196203 call _build_tuple(392029 call . this[196299] c"downDistPid")(392034 call . this[196299] c"downDistInst")(392039 call . this[196299] c"updom")(392044 call . this[196299] c"downdomPid")(392049 call . this[196299] c"downdomInst")))
  }
  function ArrayViewReindexDist[196281](?).dsiPrivatize[196214](arg _mt[196305]:_MT[238], arg this[196303]:ArrayViewReindexDist[196281](?), arg privatizeData[196212]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (196247 return(196218 'new'(_chpl_manager = unmanaged[220](?))(196246 call ArrayViewReindexDist[384321](?)(downDistPid =(196223 call privatizeData[196212] 0))(downDistInst =(196229 call privatizeData[196212] 1))(updom =(196234 call privatizeData[196212] 2))(downdomPid =(196239 call privatizeData[196212] 3))(downdomInst =(196244 call privatizeData[196212] 4)))))
  }
  function ArrayViewReindexDist[196281](?).dsiDestroyDist[196254](arg _mt[196309]:_MT[238], arg this[196307]:ArrayViewReindexDist[196281](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (196260 call _delete_dom(392060 call . this[196307] c"updom") 0)
  }
  function ArrayViewReindexDist[196281](?).dsiIsLayout[196267](arg _mt[196313]:_MT[238], arg this[196311]:ArrayViewReindexDist[196281](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (196275 return(196274 call(196270 call .(362477 call . this[196311] c"downDistInst") c"dsiIsLayout")))
  }
  type ArrayViewReindexDist[196281](?) val super[355775]:BaseDist[145934] "super class" const downDistPid[196049] "const" int(64)[13] const downDistInst[196053] "const" const updom[196057] "const" const downdomPid[196061] "const" const downdomInst[196065] "const"
  type ArrayViewReindexDist[384321](?)
  function ArrayViewReindexDom[197595](?).chpl_forwarding_expr10_updom[196333](arg _mt[197599]:_MT[238], arg this[197597]:ArrayViewReindexDom[197595](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (196335 return(392068 call . this[197597] c"updom"))
  }
  function ArrayViewReindexDom[197595](?).dist[196362](arg _mt[197603]:_MT[238], arg this[197601]:ArrayViewReindexDom[197595](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196379 call _cond_test(196367 call _isPrivatized(392073 call . this[197601] c"distInst")))
    {
      (196374 return(196373 call chpl_getPrivatizedCopy(196370 'typeof'(392078 call . this[197601] c"distInst"))(392083 call . this[197601] c"distPid")))
    }
    {
      (196377 return(392088 call . this[197601] c"distInst"))
    }
  }
  function ArrayViewReindexDom[197595](?).updom[196390](arg _mt[197607]:_MT[238], arg this[197605]:ArrayViewReindexDom[197595](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (196395 return(196393 call postfix!(392095 call . this[197605] c"updomInst")))
  }
  function ArrayViewReindexDom[197595](?).downdomtype[196406](arg _mt[197611]:_MT[238], arg this[197609]:ArrayViewReindexDom[197595](?), param arg rank[196403] :
  int(64)[13], arg idxType[196408]:_any[178](?), param arg stridable[196411] :
  bool[10]) type : _unknown[51] "method" "primary method"
  {
    unknown ranges[196426](196424 call * rank[196403](196423 call range[64316](?) idxType[196408] bounded[64205] stridable[196411]))
    (196429 'end of statement')
    unknown a[196447](196446 call(196435 call .(196432 call .(362482 call . this[197609] c"dist") c"downDist") c"dsiNewRectangularDom")(rank = rank[196403])(idxType = idxType[196408])(stridable = stridable[196411]) ranges[196426])
    (196450 'end of statement')
    (196453 return(196452 'typeof' a[196447]))
  }
  function ArrayViewReindexDom[197595](?).downdom[196459](arg _mt[197615]:_MT[238], arg this[197613]:ArrayViewReindexDom[197595](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196476 call _cond_test(196464 call _isPrivatized(392109 call . this[197613] c"downdomInst")))
    {
      (196471 return(196470 call chpl_getPrivatizedCopy(196467 'typeof'(392114 call . this[197613] c"downdomInst"))(392119 call . this[197613] c"downdomPid")))
    }
    {
      (196474 return(392124 call . this[197613] c"downdomInst"))
    }
  }
  function ArrayViewReindexDom[197595](?).dsiBuildArray[196489](arg _mt[197619]:_MT[238], arg this[197617]:ArrayViewReindexDom[197595](?), arg eltType[196487]:_any[178](?), param arg initElts[196492] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    const downarr[196506] "const" "no auto destroy"(196505 call _newArray(196503 call(196497 call .(362486 call . this[197617] c"downdom") c"dsiBuildArray") eltType[196487] initElts[196492]))
    (196509 'end of statement')
    (196541 return(196513 'new'(_chpl_manager = unmanaged[220](?))(196540 call ArrayViewReindexArr[384335](?)(eltType = eltType[196487])(_DomPid =(196519 call . this[197617] c"pid"))(dom =(196526 call _to_unmanaged this[197617]))(_ArrPid =(196529 call . downarr[196506] c"_pid"))(_ArrInstance =(196534 call . downarr[196506] c"_instance"))(ownsArrInstance = 1))))
  }
  function ArrayViewReindexDom[197595](?).dsiSetIndices[196549](arg _mt[197623]:_MT[238], arg this[197621]:ArrayViewReindexDom[197595](?), arg inds[196547]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown updomRec[196556] "no auto destroy"(196554 call chpl__buildDomainExpr(196552 'expand_tuple' inds[196547]))
    (196559 'end of statement')
    if(196573 call _cond_test(196563 call !=(392135 call . this[197621] c"updomInst") nil[44]))
    {
      (196571 call _delete_dom(196567 call postfix!(392140 call . this[197621] c"updomInst")) 0)
    }
    (196583 call =(392145 call . this[197621] c"updomInst")(196580 call . updomRec[196556] c"_value"))
    unknown ranges[196606](196604 call *(392150 call . this[197621] c"rank")(196603 call range[64316](?)(392156 call . this[197621] c"idxType") bounded[64205](196600 call .(196597 call .(362495 call . this[197621] c"dist") c"downdomInst") c"stridable")))
    (196609 'end of statement')
    unknown downdomclass[196632](196631 call(196614 call .(196611 call .(362499 call . this[197621] c"dist") c"downDist") c"dsiNewRectangularDom")(rank =(392161 call . this[197621] c"rank"))(idxType =(392166 call . this[197621] c"idxType"))(stridable =(196626 call .(196623 call .(362503 call . this[197621] c"dist") c"downdomInst") c"stridable")) ranges[196606])
    (196635 'end of statement')
    unknown downdomLoc[196641] "no auto destroy"(196636 'new'(196640 call _domain[125914](?) downdomclass[196632]))
    (196644 'end of statement')
    (196655 call = downdomLoc[196641](196654 call chpl_reindexConvertDom inds[196547](392175 call . this[197621] c"updom")(196651 call .(362507 call . this[197621] c"dist") c"downdomInst")))
    (196666 call =(196662 call .(196659 call . downdomLoc[196641] c"_value") c"_free_when_no_arrs") 1)
    if(196686 call _cond_test(196674 call &&(196671 call !=(392180 call . this[197621] c"downdomInst") nil[44])(392187 call . this[197621] c"ownsDownDomInst")))
    {
      (196683 call _delete_dom(392192 call . this[197621] c"downdomInst")(196682 call _isPrivatized(392197 call . this[197621] c"downdomInst")))
    }
    (196695 call =(392202 call . this[197621] c"downdomPid")(196692 call . downdomLoc[196641] c"_pid"))
    (196703 call =(392207 call . this[197621] c"downdomInst")(196700 call . downdomLoc[196641] c"_instance"))
    (196708 call =(392212 call . this[197621] c"ownsDownDomInst") 1)
  }
  function ArrayViewReindexDom[197595](?).these[196715](arg _mt[197627]:_MT[238], arg this[197625]:ArrayViewReindexDom[197595](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(196802 call _cond_test(196720 call chpl__isDROrDRView(392216 call . this[197625] c"downdom")))
    {
      {
        unknown _indexOfInterest[196726] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196727] "expr temp" "temp"
        (196736 'move' _iterator[196727](196734 call _getIterator(392220 call . this[197625] c"updom")))
        Defer
        {
          {
            (196752 call _freeIterator _iterator[196727])
          }
        }
        { scopeless type
          (196741 'move' _indexOfInterest[196726](196738 call iteratorIndex _iterator[196727]))
        }
        ForLoop[196728]
        {
          unknown i[196745] "index var" "insert auto destroy"
          (196747 'move' i[196745] _indexOfInterest[196726])
          (196724 yield i[196745])
          label _continueLabel[196731]
          _indexOfInterest[196726]
          _iterator[196727]
        }
        label _breakLabel[196732]
      }
    }
    {
      {
        unknown _indexOfInterest[196768] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196769] "expr temp" "temp"
        (196778 'move' _iterator[196769](196776 call _getIterator(392225 call . this[197625] c"downdom")))
        Defer
        {
          {
            (196794 call _freeIterator _iterator[196769])
          }
        }
        { scopeless type
          (196783 'move' _indexOfInterest[196768](196780 call iteratorIndex _iterator[196769]))
        }
        ForLoop[196770]
        {
          unknown i[196787] "index var" "insert auto destroy"
          (196789 'move' i[196787] _indexOfInterest[196768])
          (196766 yield(196765 call(392229 call . this[197625] c"downIdxToUpIdx") i[196787]))
          label _continueLabel[196773]
          _indexOfInterest[196768]
          _iterator[196769]
        }
        label _breakLabel[196774]
      }
    }
  }
  function ArrayViewReindexDom[197595](?).these[196815](arg _mt[197631]:_MT[238], arg this[197629]:ArrayViewReindexDom[197595](?), param arg tag[196812] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[196844] "index var" "insert auto destroy"
      iterated expressions:
        (392245 call . this[197629] c"updom")
      shadow variables:
      other variables
        forall body
      {
        (196841 yield i[196844])
      }
    }
  }
  where {
    (196836 call &&(196828 call &&(196822 call == tag[196812] standalone[451])(196827 call chpl__isDROrDRView(392236 call . this[197629] c"downdom")))(196835 'method call resolves'(392240 call . this[197629] c"updom") "these" tag[196812]))
  }
  function ArrayViewReindexDom[197595](?).these[196857](arg _mt[197635]:_MT[238], arg this[197633]:ArrayViewReindexDom[197595](?), param arg tag[196854] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[196891] "index var" "insert auto destroy"
      iterated expressions:
        (392261 call . this[197633] c"downdom")
      shadow variables:
      other variables
        forall body
      {
        (196888 yield(196887 call(392265 call . this[197633] c"downIdxToUpIdx") i[196891]))
      }
    }
  }
  where {
    (196880 call &&(196872 call &&(196864 call == tag[196854] standalone[451])(196870 call !(196869 call chpl__isDROrDRView(392252 call . this[197633] c"downdom"))))(196879 'method call resolves'(392256 call . this[197633] c"downdom") "these" tag[196854]))
  }
  function ArrayViewReindexDom[197595](?).these[196904](arg _mt[197639]:_MT[238], arg this[197637]:ArrayViewReindexDom[197595](?), param arg tag[196901] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(197010 call _cond_test(196916 call chpl__isDROrDRView(392272 call . this[197637] c"downdom")))
    {
      {
        unknown _indexOfInterest[196928] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196929] "expr temp" "temp"
        (196938 'move' _iterator[196929](196936 call _getIterator(196924 call(196919 call .(362517 call . this[197637] c"updom") c"these") tag[196901])))
        Defer
        {
          {
            (196955 call _freeIterator _iterator[196929])
          }
        }
        { scopeless type
          (196944 'move' _indexOfInterest[196928](196941 call iteratorIndex _iterator[196929]))
        }
        ForLoop[196930]
        {
          unknown followThis[196948] "index var" "insert auto destroy"
          (196950 'move' followThis[196948] _indexOfInterest[196928])
          (196926 yield followThis[196948])
          label _continueLabel[196933]
          _indexOfInterest[196928]
          _iterator[196929]
        }
        label _breakLabel[196934]
      }
    }
    {
      {
        unknown _indexOfInterest[196975] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196976] "expr temp" "temp"
        (196985 'move' _iterator[196976](196983 call _getIterator(196970 call(196965 call .(362521 call . this[197637] c"downdom") c"these") tag[196901])))
        Defer
        {
          {
            (197002 call _freeIterator _iterator[196976])
          }
        }
        { scopeless type
          (196991 'move' _indexOfInterest[196975](196988 call iteratorIndex _iterator[196976]))
        }
        ForLoop[196977]
        {
          unknown followThis[196995] "index var" "insert auto destroy"
          (196997 'move' followThis[196995] _indexOfInterest[196975])
          {
            (196972 yield followThis[196995])
          }
          label _continueLabel[196980]
          _indexOfInterest[196975]
          _iterator[196976]
        }
        label _breakLabel[196981]
      }
    }
  }
  where {
    (196911 call == tag[196901] leader[447])
  }
  function ArrayViewReindexDom[197595](?).these[197024](arg _mt[197643]:_MT[238], arg this[197641]:ArrayViewReindexDom[197595](?), param arg tag[197021] :
  iterKind[453], arg followThis[197026]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[197047] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[197048] "expr temp" "temp"
      (197057 'move' _iterator[197048](197055 call _getIterator(197043 call(197037 call .(362526 call . this[197641] c"updom") c"these") tag[197021] followThis[197026])))
      Defer
      {
        {
          (197074 call _freeIterator _iterator[197048])
        }
      }
      { scopeless type
        (197063 'move' _indexOfInterest[197047](197060 call iteratorIndex _iterator[197048]))
      }
      ForLoop[197049]
      {
        unknown i[197067] "index var" "insert auto destroy"
        (197069 'move' i[197067] _indexOfInterest[197047])
        (197045 yield i[197067])
        label _continueLabel[197052]
        _indexOfInterest[197047]
        _iterator[197048]
      }
      label _breakLabel[197053]
    }
  }
  where {
    (197033 call == tag[197021] follower[449])
  }
  function ArrayViewReindexDom[197595](?).chpl_reindexConvertLoDTupleToHiD[197089](arg _mt[197647]:_MT[238], arg this[197645]:ArrayViewReindexDom[197595](?), arg tup[197087]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197110 call compilerError "Unimplemented routine")
  }
  function ArrayViewReindexDom[197595](?).chpl_reindexConvertHiDTupleToLoD[197119](arg _mt[197651]:_MT[238], arg this[197649]:ArrayViewReindexDom[197595](?), arg tup[197117]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197124 call compilerError "Unimplemented routine")
  }
  function ArrayViewReindexDom[197595](?).downIdxToUpIdx[197135](arg _mt[197655]:_MT[238], arg this[197653]:ArrayViewReindexDom[197595](?), arg downIdx[197132] :
  integral[199](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (197153 call compilerAssert(197143 call ==(197139 call .(362530 call . this[197653] c"updom") c"rank") 1)(197151 call _cast string[26](197147 call .(362534 call . this[197653] c"updom") c"rank")))
    (197181 return(197180 call(197163 call .(197162 call(197157 call .(362538 call . this[197653] c"updom") c"dsiDim") 0) c"orderToIndex")(197178 call(197173 call .(197172 call(197167 call .(362542 call . this[197653] c"downdom") c"dsiDim") 0) c"indexOrder") downIdx[197132])))
  }
  function ArrayViewReindexDom[197595](?).downIdxToUpIdx[197189](arg _mt[197659]:_MT[238], arg this[197657]:ArrayViewReindexDom[197595](?), arg i[197187]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ind[197201](197199 call *(197192 call .(362546 call . this[197657] c"updom") c"rank")(197196 call .(362550 call . this[197657] c"updom") c"idxType"))
    (197204 'end of statement')
    {
      unknown d[197252] 0
      unknown tmp[197253] "maybe param" "temp"
      (197265 'move' tmp[197253](197263 call chpl_compute_low_param_loop_bound 0(197212 call -(197208 call .(362554 call . this[197657] c"updom") c"rank") 1)))
      unknown tmp[197254] "maybe param" "temp"
      (197278 'move' tmp[197254](197276 call chpl_compute_high_param_loop_bound 0(197270 call -(197272 call .(362566 call . this[197657] c"updom") c"rank") 1)))
      unknown tmp[197255] "maybe param" "temp"
      (197281 'move' tmp[197255] 1)
      ParamForLoop[197283]
      { d[197252] tmp[197253] tmp[197254] tmp[197255]
        {
          (197248 call =(197219 call ind[197201] d[197252])(197247 call(197227 call .(197226 call(197221 call .(362558 call . this[197657] c"updom") c"dsiDim") d[197252]) c"orderToIndex")(197245 call(197237 call .(197236 call(197231 call .(362562 call . this[197657] c"downdom") c"dsiDim") d[197252]) c"indexOrder")(197243 call i[197187] d[197252]))))
        }
      }
      label _unused_continueLabel[197257]
      label _breakLabel[197256]
    }
    (197293 return ind[197201])
  }
  function ArrayViewReindexDom[197595](?).dsiMyDist[197299](arg _mt[197663]:_MT[238], arg this[197661]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (197302 return(392294 call . this[197661] c"dist"))
  }
  function ArrayViewReindexDom[197595](?).dsiTargetLocales[197309](arg _mt[197667]:_MT[238], arg this[197665]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method"
  {
    (197317 return(197316 call(197312 call .(362570 call . this[197665] c"downdom") c"dsiTargetLocales")))
  }
  function ArrayViewReindexDom[197595](?).dsiHasSingleLocalSubdomain[197324](arg _mt[197671]:_MT[238], arg this[197669]:ArrayViewReindexDom[197595](?)) param : _unknown[51] "method" "primary method"
  {
    (197332 return(197331 call(197327 call .(362574 call . this[197669] c"downdom") c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewReindexDom[197595](?).dsiLocalSubdomain[197343](arg _mt[197675]:_MT[238], arg this[197673]:ArrayViewReindexDom[197595](?), arg loc[197340] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    const dims[197357] "const"(197356 call(197352 call .(197351 call(197346 call .(362578 call . this[197673] c"downdom") c"dsiLocalSubdomain") loc[197340]) c"dims"))
    (197360 'end of statement')
    (197368 return(197367 call chpl_reindexConvertDom dims[197357](392300 call . this[197673] c"downdom")(392304 call . this[197673] c"updom")))
  }
  function ArrayViewReindexDom[197595](?).dsiAssignDomain[197378](arg _mt[197679]:_MT[238], arg this[197677]:ArrayViewReindexDom[197595](?), arg rhs[197375] :
  _domain[125914](?), arg lhsPrivate[197381] :
  bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197388 call chpl_assignDomainWithGetSetIndices this[197677] rhs[197375])
  }
  function ArrayViewReindexDom[197595](?).isReindexDomainView[197395](arg _mt[197683]:_MT[238], arg this[197681]:ArrayViewReindexDom[197595](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197398 return 1)
  }
  function ArrayViewReindexDom[197595](?)._getActualDomain[197405](arg _mt[197687]:_MT[238], arg this[197685]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method"
  {
    if(197424 call _cond_test(197410 call chpl__isDomainView(392311 call . this[197685] c"downdom")))
    {
      (197417 return(197416 call(197412 call .(362582 call . this[197685] c"downdom") c"_getActualDomain")))
    }
    {
      (197421 return(392315 call . this[197685] c"downdom"))
    }
  }
  function ArrayViewReindexDom[197595](?).dsiDestroyDom[197433](arg _mt[197691]:_MT[238], arg this[197689]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (197441 call _delete_dom(197437 call postfix!(392320 call . this[197689] c"updomInst")) 0)
    (197451 call _delete_dom(392325 call . this[197689] c"downdomInst")(197450 call _isPrivatized(392330 call . this[197689] c"downdomInst")))
  }
  function ArrayViewReindexDom[197595](?).dsiSupportsPrivatization[197457](arg _mt[197695]:_MT[238], arg this[197693]:ArrayViewReindexDom[197595](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197465 return(197464 call(197460 call .(362587 call . this[197693] c"downdomInst") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexDom[197595](?).dsiGetPrivatizeData[197472](arg _mt[197699]:_MT[238], arg this[197697]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method"
  {
    (197482 return(197480 call _build_tuple(392335 call . this[197697] c"updomInst")(392340 call . this[197697] c"downdomPid")(392345 call . this[197697] c"downdomInst")(392350 call . this[197697] c"distPid")(392355 call . this[197697] c"distInst")))
  }
  function ArrayViewReindexDom[197595](?).dsiPrivatize[197491](arg _mt[197703]:_MT[238], arg this[197701]:ArrayViewReindexDom[197595](?), arg privatizeData[197489]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (197539 return(197495 'new'(_chpl_manager = unmanaged[220](?))(197538 call ArrayViewReindexDom[391980](?)(rank =(197498 call . this[197701] c"rank"))(idxType =(197504 call . this[197701] c"idxType"))(stridable =(197509 call . this[197701] c"stridable"))(updomInst =(197516 call privatizeData[197489] 0))(downdomPid =(197521 call privatizeData[197489] 1))(downdomInst =(197526 call privatizeData[197489] 2))(distPid =(197531 call privatizeData[197489] 3))(distInst =(197536 call privatizeData[197489] 4)))))
  }
  function ArrayViewReindexDom[197595](?).dsiGetReprivatizeData[197546](arg _mt[197707]:_MT[238], arg this[197705]:ArrayViewReindexDom[197595](?)) : _unknown[51] "method" "primary method"
  {
    (197554 return(197552 call _build_tuple(392366 call . this[197705] c"updomInst")(392371 call . this[197705] c"downdomPid")(392376 call . this[197705] c"downdomInst")))
  }
  function ArrayViewReindexDom[197595](?).dsiReprivatize[197563](arg _mt[197711]:_MT[238], arg this[197709]:ArrayViewReindexDom[197595](?), arg other[197561]:_any[178](?), arg reprivatizeData[197565]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197572 call =(392381 call . this[197709] c"updomInst")(197571 call reprivatizeData[197565] 0))
    (197581 call =(392387 call . this[197709] c"downdomPid")(197580 call reprivatizeData[197565] 1))
    (197589 call =(392393 call . this[197709] c"downdomInst")(197588 call reprivatizeData[197565] 2))
  }
  type ArrayViewReindexDom[197595](?) val super[355777]:BaseRectangularDom[146897](?) "super class" unknown updomInst[196327](196324 call unmanaged DefaultRectangularDom?[415550](?) rank[146816] idxType[146820] stridable[146824]) unknown downdomPid[196339] unknown downdomInst[196343] const distPid[196347] "const" const distInst[196351] "const" unknown ownsDownDomInst[196356] 0 forwarding ( )
  type ArrayViewReindexDom[391980](?)
  function buildIndexCacheHelper[197718](arg arr[197716]:_any[178](?), arg dom[197720]:_any[178](?)) : _unknown[51] "private"
  {
    if(197819 call _cond_test(197725 call chpl__isDROrDRView arr[197716]))
    {
      if(197810 call _cond_test(197729 call chpl__isArrayView arr[197716]))
      {
        if(197790 call _cond_test(197744 call &&(197735 call(197731 call . arr[197716] c"isSliceArrayView"))(197742 call !(197741 call(197737 call . arr[197716] c"_containsRCRE")))))
        {
          (197774 return(197773 call(197768 call .(197765 call(197757 call .(197756 call(197752 call .(197751 call(197747 call . arr[197716] c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(197761 call . arr[197716] c"dom")) c"toReindex") dom[197720]))
        }
        {
          (197787 return(197786 call(197781 call .(197778 call . arr[197716] c"indexCache") c"toReindex") dom[197720]))
        }
      }
      {
        (197807 return(197806 call(197801 call .(197800 call(197796 call . arr[197716] c"dsiGetRAD")) c"toReindex") dom[197720]))
      }
    }
    {
      (197816 return 0)
    }
  }
  function ArrayViewReindexArr[199285](?).init[197857](arg _mt[199289]:_MT[238], arg this[199287]:ArrayViewReindexArr[199285](?), arg eltType[197855]:_any[178](?), const arg _DomPid[197859]:_any[178](?), const arg dom[197861]:_any[178](?), const arg _ArrPid[197863]:_any[178](?), const arg _ArrInstance[197865]:_any[178](?), const arg ownsArrInstance[197869] :
  bool[10] =
  0) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197880 call(197874 call .(362601 call . this[199287] c"super") c"init")(eltType = eltType[197855]))
    (197888 call =(197884 call . this[199287] c"_DomPid") _DomPid[197859])
    (197896 call =(197892 call . this[199287] c"dom") dom[197861])
    (197904 call =(197900 call . this[199287] c"_ArrPid") _ArrPid[197863])
    (197912 call =(197908 call . this[199287] c"_ArrInstance") _ArrInstance[197865])
    (197924 call =(197916 call . this[199287] c"indexCache")(197923 call buildIndexCacheHelper _ArrInstance[197865] dom[197861]))
    (197932 call =(197928 call . this[199287] c"ownsArrInstance") ownsArrInstance[197869])
  }
  function ArrayViewReindexArr[199285](?).chpl_forwarding_expr11_arr[197946](arg _mt[199293]:_MT[238], arg this[199291]:ArrayViewReindexArr[199285](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (197948 return(392411 call . this[199291] c"arr"))
  }
  function ArrayViewReindexArr[199285](?).downdom[197954](arg _mt[199297]:_MT[238], arg this[199295]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    (197960 return(197957 call .(362611 call . this[199295] c"arr") c"dom"))
  }
  function ArrayViewReindexArr[199285](?).idxType[197967](arg _mt[199301]:_MT[238], arg this[199299]:ArrayViewReindexArr[199285](?)) type : _unknown[51] "method" "primary method" "no parens"
  {
    (197973 return(197970 call .(362616 call . this[199299] c"dom") c"idxType"))
  }
  function ArrayViewReindexArr[199285](?).rank[197980](arg _mt[199305]:_MT[238], arg this[199303]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    (197986 return(197983 call .(362621 call . this[199303] c"dom") c"rank"))
  }
  function ArrayViewReindexArr[199285](?).isReindexArrayView[197993](arg _mt[199309]:_MT[238], arg this[199307]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197996 return 1)
  }
  function ArrayViewReindexArr[199285](?).these[198003](arg _mt[199313]:_MT[238], arg this[199311]:ArrayViewReindexArr[199285](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198014] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198015] "expr temp" "temp"
      (198024 'move' _iterator[198015](198022 call _getIterator(198010 call chpl__serialViewIter this[199311](392416 call . this[199311] c"privDom"))))
      Defer
      {
        {
          (198041 call _freeIterator _iterator[198015])
        }
      }
      { scopeless type
        (198030 'move' _indexOfInterest[198014](198027 call iteratorIndex _iterator[198015]))
      }
      ForLoop[198016]
      {
        unknown elem[198034] "index var" "insert auto destroy"
        (198036 'move' elem[198034] _indexOfInterest[198014])
        (198012 yield elem[198034])
        label _continueLabel[198019]
        _indexOfInterest[198014]
        _iterator[198015]
      }
      label _breakLabel[198020]
    }
  }
  function ArrayViewReindexArr[199285](?).these[198057](arg _mt[199317]:_MT[238], arg this[199315]:ArrayViewReindexArr[199285](?), param arg tag[198054] :
  iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[198126] "index var" "insert auto destroy"
      iterated expressions:
        (392429 call . this[199315] c"privDom")
      shadow variables:
      other variables
        forall body
      {
        if(198120 call _cond_test(198083 call(392433 call . this[199315] c"shouldUseIndexCache")))
        {
          const dataIdx[198091] "const"(198090 call(198085 call .(362627 call . this[199315] c"indexCache") c"getDataIndex") i[198126])
          (198094 'end of statement')
          (198103 yield(198102 call(198097 call .(362632 call . this[199315] c"indexCache") c"getDataElem") dataIdx[198091]))
        }
        {
          (198117 yield(198116 call(198106 call .(362636 call . this[199315] c"arr") c"dsiAccess")(198114 call chpl_reindexConvertIdx i[198126](392440 call . this[199315] c"privDom")(392444 call . this[199315] c"downdom"))))
        }
      }
    }
  }
  where {
    (198077 call &&(198069 call &&(198064 call == tag[198054] standalone[451])(198067 call ! localeModelHasSublocales[187415]))(198076 'method call resolves'(392424 call . this[199315] c"privDom") "these" tag[198054]))
  }
  function ArrayViewReindexArr[199285](?).these[198139](arg _mt[199321]:_MT[238], arg this[199319]:ArrayViewReindexArr[199285](?), param arg tag[198136] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198160] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198161] "expr temp" "temp"
      (198170 'move' _iterator[198161](198168 call _getIterator(198155 call(198150 call .(362641 call . this[199319] c"privDom") c"these") tag[198136])))
      Defer
      {
        {
          (198187 call _freeIterator _iterator[198161])
        }
      }
      { scopeless type
        (198176 'move' _indexOfInterest[198160](198173 call iteratorIndex _iterator[198161]))
      }
      ForLoop[198162]
      {
        unknown followThis[198180] "index var" "insert auto destroy"
        (198182 'move' followThis[198180] _indexOfInterest[198160])
        {
          (198157 yield followThis[198180])
        }
        label _continueLabel[198165]
        _indexOfInterest[198160]
        _iterator[198161]
      }
      label _breakLabel[198166]
    }
  }
  where {
    (198146 call == tag[198136] leader[447])
  }
  function ArrayViewReindexArr[199285](?).these[198204](arg _mt[199325]:_MT[238], arg this[199323]:ArrayViewReindexArr[199285](?), param arg tag[198201] :
  iterKind[453], arg followThis[198206]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198268] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198269] "expr temp" "temp"
      (198278 'move' _iterator[198269](198276 call _getIterator(198223 call(198217 call .(362646 call . this[199323] c"privDom") c"these") tag[198201] followThis[198206])))
      Defer
      {
        {
          (198295 call _freeIterator _iterator[198269])
        }
      }
      { scopeless type
        (198284 'move' _indexOfInterest[198268](198281 call iteratorIndex _iterator[198269]))
      }
      ForLoop[198270]
      {
        unknown i[198288] "index var" "insert auto destroy"
        (198290 'move' i[198288] _indexOfInterest[198268])
        {
          if(198263 call _cond_test(198226 call(392456 call . this[199323] c"shouldUseIndexCache")))
          {
            const dataIdx[198234] "const"(198233 call(198228 call .(362651 call . this[199323] c"indexCache") c"getDataIndex") i[198288])
            (198237 'end of statement')
            (198246 yield(198245 call(198240 call .(362656 call . this[199323] c"indexCache") c"getDataElem") dataIdx[198234]))
          }
          {
            (198260 yield(198259 call(198249 call .(362660 call . this[199323] c"arr") c"dsiAccess")(198257 call chpl_reindexConvertIdx i[198288](392463 call . this[199323] c"privDom")(392467 call . this[199323] c"downdom"))))
          }
        }
        label _continueLabel[198273]
        _indexOfInterest[198268]
        _iterator[198269]
      }
      label _breakLabel[198274]
    }
  }
  where {
    (198213 call == tag[198201] follower[449])
  }
  function ArrayViewReindexArr[199285](?).dsiSerialWrite[198310](arg _mt[199329]:_MT[238], arg this[199327]:ArrayViewReindexArr[199285](?), arg f[198308]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (198322 call chpl_serialReadWriteRectangular f[198308] this[199327](198319 call .(362664 call . this[199327] c"privDom") c"updom"))
  }
  function ArrayViewReindexArr[199285](?).dsiSerialRead[198331](arg _mt[199333]:_MT[238], arg this[199331]:ArrayViewReindexArr[199285](?), arg f[198329]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (198341 call chpl_serialReadWriteRectangular f[198329] this[199331](198338 call .(362668 call . this[199331] c"privDom") c"updom"))
  }
  function ArrayViewReindexArr[199285](?).dsiDisplayRepresentation[198348](arg _mt[199337]:_MT[238], arg this[199335]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (198369 call writeln "Reindex view")
    (198391 call writeln "------------")
    (198396 call writeln "of domain:")
    (198403 call(198399 call .(362672 call . this[199335] c"privDom") c"dsiDisplayRepresentation"))
    (198408 call writeln "on array:")
    (198415 call(198411 call .(362676 call . this[199335] c"arr") c"dsiDisplayRepresentation"))
    (198420 call writeln "------------")
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198432](arg _mt[199341]:_MT[238], arg this[199339]:ArrayViewReindexArr[199285](?), arg i[198428] ... :
  (392475 call . this[199339] c"idxType")) ref : _unknown[51] "inline" "method" "primary method"
  {
    (198438 return(198437 call(392483 call . this[199339] c"dsiAccess") i[198428]))
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198451](arg _mt[199345]:_MT[238], arg this[199343]:ArrayViewReindexArr[199285](?), arg i[198447] ... :
  (392488 call . this[199343] c"idxType")) : _unknown[51] "inline" "method" "primary method"
  {
    (198461 return(198460 call(392501 call . this[199343] c"dsiAccess") i[198447]))
  }
  where {
    (198456 call shouldReturnRvalueByValue(392497 call . this[199343] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198475](arg _mt[199349]:_MT[238], arg this[199347]:ArrayViewReindexArr[199285](?), arg i[198471] ... :
  (392506 call . this[199347] c"idxType")) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (198485 return(198484 call(392519 call . this[199347] c"dsiAccess") i[198471]))
  }
  where {
    (198480 call shouldReturnRvalueByConstRef(392515 call . this[199347] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198495](arg _mt[199353]:_MT[238], arg this[199351]:ArrayViewReindexArr[199285](?), arg i[198493]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(198536 call _cond_test(198499 call(392524 call . this[199351] c"shouldUseIndexCache")))
    {
      const dataIdx[198507] "const"(198506 call(198501 call .(362681 call . this[199351] c"indexCache") c"getDataIndex") i[198493])
      (198510 'end of statement')
      (198519 return(198518 call(198513 call .(362686 call . this[199351] c"indexCache") c"getDataElem") dataIdx[198507]))
    }
    {
      (198533 return(198532 call(198522 call .(362690 call . this[199351] c"arr") c"dsiAccess")(198530 call chpl_reindexConvertIdx i[198493](392531 call . this[199351] c"privDom")(392535 call . this[199351] c"downdom"))))
    }
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198547](arg _mt[199357]:_MT[238], arg this[199355]:ArrayViewReindexArr[199285](?), arg i[198545]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(198592 call _cond_test(198555 call(392544 call . this[199355] c"shouldUseIndexCache")))
    {
      const dataIdx[198563] "const"(198562 call(198557 call .(362695 call . this[199355] c"indexCache") c"getDataIndex") i[198545])
      (198566 'end of statement')
      (198575 return(198574 call(198569 call .(362700 call . this[199355] c"indexCache") c"getDataElem") dataIdx[198563]))
    }
    {
      (198589 return(198588 call(198578 call .(362704 call . this[199355] c"arr") c"dsiAccess")(198586 call chpl_reindexConvertIdx i[198545](392551 call . this[199355] c"privDom")(392555 call . this[199355] c"downdom"))))
    }
  }
  where {
    (198552 call shouldReturnRvalueByValue(392540 call . this[199355] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiAccess[198604](arg _mt[199361]:_MT[238], arg this[199359]:ArrayViewReindexArr[199285](?), arg i[198602]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    if(198649 call _cond_test(198612 call(392564 call . this[199359] c"shouldUseIndexCache")))
    {
      const dataIdx[198620] "const"(198619 call(198614 call .(362709 call . this[199359] c"indexCache") c"getDataIndex") i[198602])
      (198623 'end of statement')
      (198632 return(198631 call(198626 call .(362714 call . this[199359] c"indexCache") c"getDataElem") dataIdx[198620]))
    }
    {
      (198646 return(198645 call(198635 call .(362718 call . this[199359] c"arr") c"dsiAccess")(198643 call chpl_reindexConvertIdx i[198602](392571 call . this[199359] c"privDom")(392575 call . this[199359] c"downdom"))))
    }
  }
  where {
    (198609 call shouldReturnRvalueByConstRef(392560 call . this[199359] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiLocalAccess[198661](arg _mt[199365]:_MT[238], arg this[199363]:ArrayViewReindexArr[199285](?), arg i[198659]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (198675 return(198674 call(198664 call .(362722 call . this[199363] c"arr") c"dsiLocalAccess")(198672 call chpl_reindexConvertIdx i[198659](392580 call . this[199363] c"privDom")(392584 call . this[199363] c"downdom"))))
  }
  function ArrayViewReindexArr[199285](?).dsiLocalAccess[198684](arg _mt[199369]:_MT[238], arg this[199367]:ArrayViewReindexArr[199285](?), arg i[198682]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (198702 return(198701 call(198691 call .(362726 call . this[199367] c"arr") c"dsiLocalAccess")(198699 call chpl_reindexConvertIdx i[198682](392594 call . this[199367] c"privDom")(392598 call . this[199367] c"downdom"))))
  }
  where {
    (198689 call shouldReturnRvalueByValue(392589 call . this[199367] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiLocalAccess[198712](arg _mt[199373]:_MT[238], arg this[199371]:ArrayViewReindexArr[199285](?), arg i[198710]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (198730 return(198729 call(198719 call .(362730 call . this[199371] c"arr") c"dsiLocalAccess")(198727 call chpl_reindexConvertIdx i[198710](392608 call . this[199371] c"privDom")(392612 call . this[199371] c"downdom"))))
  }
  where {
    (198717 call shouldReturnRvalueByConstRef(392603 call . this[199371] c"eltType"))
  }
  function ArrayViewReindexArr[199285](?).dsiBoundsCheck[198740](arg _mt[199377]:_MT[238], arg this[199375]:ArrayViewReindexArr[199285](?), arg i[198738]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (198749 return(198748 call(198743 call .(362734 call . this[199375] c"privDom") c"dsiMember") i[198738]))
  }
  function ArrayViewReindexArr[199285](?).dsiHasSingleLocalSubdomain[198756](arg _mt[199381]:_MT[238], arg this[199379]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method"
  {
    (198764 return(198763 call(198759 call .(362738 call . this[199379] c"privDom") c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewReindexArr[199285](?).dsiLocalSubdomain[198775](arg _mt[199385]:_MT[238], arg this[199383]:ArrayViewReindexArr[199285](?), arg loc[198772] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (198784 return(198783 call(198778 call .(362742 call . this[199383] c"privDom") c"dsiLocalSubdomain") loc[198772]))
  }
  function ArrayViewReindexArr[199285](?).dsiSupportsPrivatization[198791](arg _mt[199389]:_MT[238], arg this[199387]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (198799 return(198798 call(198794 call .(362747 call . this[199387] c"_ArrInstance") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexArr[199285](?).dsiGetPrivatizeData[198806](arg _mt[199393]:_MT[238], arg this[199391]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method"
  {
    (198815 return(198813 call _build_tuple(392619 call . this[199391] c"_DomPid")(392623 call . this[199391] c"privDom")(392628 call . this[199391] c"_ArrPid")(392633 call . this[199391] c"_ArrInstance")))
  }
  function ArrayViewReindexArr[199285](?).dsiPrivatize[198824](arg _mt[199397]:_MT[238], arg this[199395]:ArrayViewReindexArr[199285](?), arg privatizeData[198822]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (198857 return(198828 'new'(_chpl_manager = unmanaged[220](?))(198856 call ArrayViewReindexArr[384335](?)(eltType =(198831 call . this[199395] c"eltType"))(_DomPid =(198839 call privatizeData[198822] 0))(dom =(198844 call privatizeData[198822] 1))(_ArrPid =(198849 call privatizeData[198822] 2))(_ArrInstance =(198854 call privatizeData[198822] 3)))))
  }
  function ArrayViewReindexArr[199285](?).shouldUseIndexCache[198864](arg _mt[199401]:_MT[238], arg this[199399]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method"
  {
    (198870 return(198869 call chpl__isDROrDRView(392643 call . this[199399] c"_ArrInstance")))
  }
  function ArrayViewReindexArr[199285](?).buildIndexCache[198877](arg _mt[199405]:_MT[238], arg this[199403]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method"
  {
    if(198973 call _cond_test(198881 call(392647 call . this[199403] c"shouldUseIndexCache")))
    {
      if(198964 call _cond_test(198885 call chpl__isArrayView(392652 call . this[199403] c"_ArrInstance")))
      {
        if(198944 call _cond_test(198900 call &&(198891 call(198887 call .(362753 call . this[199403] c"_ArrInstance") c"isSliceArrayView"))(198898 call !(198897 call(198893 call .(362758 call . this[199403] c"_ArrInstance") c"_containsRCRE")))))
        {
          (198928 return(198927 call(198922 call .(198921 call(198913 call .(198912 call(198908 call .(198907 call(198903 call .(362763 call . this[199403] c"_ArrInstance") c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(198917 call .(362768 call . this[199403] c"_ArrInstance") c"dom")) c"toReindex")(392657 call . this[199403] c"dom")))
        }
        {
          (198941 return(198940 call(198935 call .(198932 call .(362773 call . this[199403] c"_ArrInstance") c"indexCache") c"toReindex")(392662 call . this[199403] c"dom")))
        }
      }
      {
        (198961 return(198960 call(198955 call .(198954 call(198950 call .(362778 call . this[199403] c"_ArrInstance") c"dsiGetRAD")) c"toReindex")(392667 call . this[199403] c"dom")))
      }
    }
    {
      (198970 return 0)
    }
  }
  function ArrayViewReindexArr[199285](?).privDom[198982](arg _mt[199409]:_MT[238], arg this[199407]:ArrayViewReindexArr[199285](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(199001 call _cond_test(198987 call _isPrivatized(392672 call . this[199407] c"dom")))
    {
      (198994 return(198993 call chpl_getPrivatizedCopy(198990 'typeof'(392677 call . this[199407] c"dom"))(392682 call . this[199407] c"_DomPid")))
    }
    {
      (198998 return(392687 call . this[199407] c"dom"))
    }
  }
  function ArrayViewReindexArr[199285](?).arr[199010](arg _mt[199413]:_MT[238], arg this[199411]:ArrayViewReindexArr[199285](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(199029 call _cond_test(199015 call _isPrivatized(392692 call . this[199411] c"_ArrInstance")))
    {
      (199022 return(199021 call chpl_getPrivatizedCopy(199018 'typeof'(392697 call . this[199411] c"_ArrInstance"))(392702 call . this[199411] c"_ArrPid")))
    }
    {
      (199026 return(392707 call . this[199411] c"_ArrInstance"))
    }
  }
  function ArrayViewReindexArr[199285](?).dsiGetBaseDom[199038](arg _mt[199417]:_MT[238], arg this[199415]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (199041 return(392711 call . this[199415] c"privDom"))
  }
  function ArrayViewReindexArr[199285](?)._getActualArray[199048](arg _mt[199421]:_MT[238], arg this[199419]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method"
  {
    if(199067 call _cond_test(199053 call chpl__isArrayView(392715 call . this[199419] c"arr")))
    {
      (199060 return(199059 call(199055 call .(362782 call . this[199419] c"arr") c"_getActualArray")))
    }
    {
      (199064 return(392719 call . this[199419] c"arr"))
    }
  }
  function ArrayViewReindexArr[199285](?)._containsRCRE[199076](arg _mt[199425]:_MT[238], arg this[199423]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method"
  {
    if(199111 call _cond_test(199081 call chpl__isArrayView(392723 call . this[199423] c"arr")))
    {
      (199104 return(199102 call ||(199094 call ||(199087 call(199083 call .(362786 call . this[199423] c"arr") c"isRankChangeArrayView"))(199093 call(199089 call .(362790 call . this[199423] c"arr") c"isReindexArrayView")))(199101 call(199097 call .(362794 call . this[199423] c"arr") c"_containsRCRE"))))
    }
    {
      (199108 return 0)
    }
  }
  function ArrayViewReindexArr[199285](?)._getRCREView[199120](arg _mt[199429]:_MT[238], arg this[199427]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method"
  {
    (199123 return this[199427])
  }
  function ArrayViewReindexArr[199285](?).dsiElementInitializationComplete[199130](arg _mt[199433]:_MT[238], arg this[199431]:ArrayViewReindexArr[199285](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
  }
  function ArrayViewReindexArr[199285](?).dsiDestroyArr[199141](arg _mt[199437]:_MT[238], arg this[199435]:ArrayViewReindexArr[199285](?), arg deinitElts[199138] :
  bool[10]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    if(199154 call _cond_test(392729 call . this[199435] c"ownsArrInstance"))
    {
      (199151 call _delete_arr(392734 call . this[199435] c"_ArrInstance")(199150 call _isPrivatized(392739 call . this[199435] c"_ArrInstance")))
    }
  }
  function ArrayViewReindexArr[199285](?).doiCanBulkTransferRankChange[199163](arg _mt[199441]:_MT[238], arg this[199439]:ArrayViewReindexArr[199285](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (199171 return(199170 call(199166 call .(362798 call . this[199439] c"arr") c"doiCanBulkTransferRankChange")))
  }
  function ArrayViewReindexArr[199285](?).doiBulkTransferFromKnown[199180](arg _mt[199445]:_MT[238], arg this[199443]:ArrayViewReindexArr[199285](?), arg destDom[199178]:_any[178](?), arg srcClass[199182]:_any[178](?), arg srcDom[199184]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[199210] "const"(199209 call chpl_reindexConvertDomMaybeSlice(199193 call(199189 call . destDom[199178] c"dims"))(199196 call .(362803 call . this[199443] c"privDom") c"updom")(199206 call .(199203 call .(199200 call . this[199443] c"dom") c"dist") c"downdomInst"))
    (199213 'end of statement')
    (199225 return(199224 call chpl__bulkTransferArray(199217 call . this[199443] c"arr") shifted[199210] srcClass[199182] srcDom[199184]))
  }
  { scopeless type
    bool[10]
  }
  function ArrayViewReindexArr[199285](?).doiBulkTransferToKnown[199234](arg _mt[199449]:_MT[238], arg this[199447]:ArrayViewReindexArr[199285](?), arg srcDom[199232]:_any[178](?), arg destClass[199236]:_any[178](?), arg destDom[199238]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[199264] "const"(199263 call chpl_reindexConvertDomMaybeSlice(199247 call(199243 call . srcDom[199232] c"dims"))(199250 call .(362810 call . this[199447] c"privDom") c"updom")(199260 call .(199257 call .(199254 call . this[199447] c"dom") c"dist") c"downdomInst"))
    (199267 'end of statement')
    (199279 return(199278 call chpl__bulkTransferArray destClass[199236] destDom[199238](199274 call . this[199447] c"arr") shifted[199264]))
  }
  { scopeless type
    bool[10]
  }
  type ArrayViewReindexArr[199285](?) val super[355779]:AbsBaseArr[149701](?) "super class" const _DomPid[197829] "const" const dom[197833] "const" const _ArrPid[197837] "const" const _ArrInstance[197841] "const" const indexCache[197845] "const" const ownsArrInstance[197849] "const" forwarding ( )
  type ArrayViewReindexArr[384335](?)
  function chpl_reindexConvertIdxDim[199456](arg i[199454]:_any[178](?), arg updom[199458]:_any[178](?), arg downdom[199460]:_any[178](?), arg dim[199463] :
  int(64)[13]) : _unknown[51] "inline"
  {
    (199491 return(199490 call(199473 call .(199472 call(199467 call . downdom[199460] c"dsiDim") dim[199463]) c"orderToIndex")(199488 call(199483 call .(199482 call(199477 call . updom[199458] c"dsiDim") dim[199463]) c"indexOrder") i[199454])))
  }
  function chpl_reindexConvertIdx[199502](arg i[199499] :
  integral[199](?), arg updom[199504]:_any[178](?), arg downdom[199506]:_any[178](?)) : _unknown[51] "inline"
  {
    (199524 call compilerAssert(199514 call ==(199510 call . downdom[199506] c"rank") 1)(199522 call _cast string[26](199518 call . downdom[199506] c"rank")))
    (199534 return(199533 call chpl_reindexConvertIdxDim i[199499] updom[199504] downdom[199506] 0))
  }
  function chpl_reindexConvertIdx[199542](arg i[199540]:_any[178](?), arg updom[199544]:_any[178](?), arg downdom[199546]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ind[199558](199556 call *(199549 call . downdom[199546] c"rank")(199553 call . downdom[199546] c"idxType"))
    (199561 'end of statement')
    {
      unknown d[199591] 0
      unknown tmp[199592] "maybe param" "temp"
      (199604 'move' tmp[199592](199602 call chpl_compute_low_param_loop_bound 0(199569 call -(199565 call . downdom[199546] c"rank") 1)))
      unknown tmp[199593] "maybe param" "temp"
      (199617 'move' tmp[199593](199615 call chpl_compute_high_param_loop_bound 0(199609 call -(199611 call . downdom[199546] c"rank") 1)))
      unknown tmp[199594] "maybe param" "temp"
      (199620 'move' tmp[199594] 1)
      ParamForLoop[199622]
      { d[199591] tmp[199592] tmp[199593] tmp[199594]
        {
          (199587 call =(199576 call ind[199558] d[199591])(199586 call chpl_reindexConvertIdxDim(199581 call i[199540] d[199591]) updom[199544] downdom[199546] d[199591]))
        }
      }
      label _unused_continueLabel[199596]
      label _breakLabel[199595]
    }
    (199632 return ind[199558])
  }
  function chpl_reindexConvertDom[199640](arg dims[199638]:_any[178](?), arg updom[199642]:_any[178](?), arg downdom[199644]:_any[178](?)) : _unknown[51] "inline"
  {
    if(199699 call _cond_test(199654 call !=(199647 call . updom[199642] c"rank")(199651 call . dims[199638] c"size")))
    {
      (199696 call compilerError(199693 call +(199684 call +(199681 call + "Called chpl_reindexConvertDom with incorrect rank. Got "(199679 call _cast string[26](199675 call . dims[199638] c"size"))) ", expecting ")(199691 call _cast string[26](199687 call . updom[199642] c"rank"))))
    }
    unknown ranges[199711](199710 'typeof'(199709 call(199705 call . downdom[199644] c"dsiDims")))
    (199714 'end of statement')
    unknown actualLow[199715](199726 call *(199719 call . downdom[199644] c"rank")(199723 call . downdom[199644] c"idxType"))
    unknown actualHigh[199728](199732 'typeof' actualLow[199715])
    (199733 'end of statement')
    {
      unknown d[199835] 0
      unknown tmp[199836] "maybe param" "temp"
      (199848 'move' tmp[199836](199846 call chpl_compute_low_param_loop_bound 0(199740 call -(199736 call . dims[199638] c"size") 1)))
      unknown tmp[199837] "maybe param" "temp"
      (199861 'move' tmp[199837](199859 call chpl_compute_high_param_loop_bound 0(199853 call -(199855 call . dims[199638] c"size") 1)))
      unknown tmp[199838] "maybe param" "temp"
      (199864 'move' tmp[199838] 1)
      ParamForLoop[199866]
      { d[199835] tmp[199836] tmp[199837] tmp[199838]
        {
          if(199830 call _cond_test(199752 call ==(199748 call .(199747 call dims[199638] d[199835]) c"size") 0))
          {
            (199768 call =(199757 call actualLow[199715] d[199835])(199765 call .(199764 call(199759 call . downdom[199644] c"dsiDim") d[199835]) c"low"))
            (199786 call =(199775 call actualHigh[199728] d[199835])(199783 call .(199782 call(199777 call . downdom[199644] c"dsiDim") d[199835]) c"high"))
          }
          {
            (199806 call =(199792 call actualLow[199715] d[199835])(199805 call chpl_reindexConvertIdxDim(199798 call .(199797 call dims[199638] d[199835]) c"first") updom[199642] downdom[199644] d[199835]))
            (199827 call =(199813 call actualHigh[199728] d[199835])(199826 call chpl_reindexConvertIdxDim(199819 call .(199818 call dims[199638] d[199835]) c"last") updom[199642] downdom[199644] d[199835]))
          }
        }
      }
      label _unused_continueLabel[199840]
      label _breakLabel[199839]
    }
    {
      unknown d[199912] 0
      unknown tmp[199913] "maybe param" "temp"
      (199925 'move' tmp[199913](199923 call chpl_compute_low_param_loop_bound 0(199881 call -(199877 call . updom[199642] c"rank") 1)))
      unknown tmp[199914] "maybe param" "temp"
      (199938 'move' tmp[199914](199936 call chpl_compute_high_param_loop_bound 0(199930 call -(199932 call . updom[199642] c"rank") 1)))
      unknown tmp[199915] "maybe param" "temp"
      (199941 'move' tmp[199915] 1)
      ParamForLoop[199943]
      { d[199912] tmp[199913] tmp[199914] tmp[199915]
        {
          (199908 call =(199888 call ranges[199711] d[199912])(199907 call(199895 call(199890 call . downdom[199644] c"dsiDim") d[199912])(199904 call chpl_build_bounded_range(199899 call actualLow[199715] d[199912])(199903 call actualHigh[199728] d[199912]))))
        }
      }
      label _unused_continueLabel[199917]
      label _breakLabel[199916]
    }
    (199957 return(199955 call chpl__buildDomainExpr(199953 'expand_tuple' ranges[199711])))
  }
  function chpl_reindexConvertDomMaybeSlice[199965](arg dims[199963]:_any[178](?), arg updom[199967]:_any[178](?), arg downdom[199969]:_any[178](?)) : _unknown[51] "inline"
  {
    if(200026 call _cond_test(199979 call !=(199972 call . updom[199967] c"rank")(199976 call . dims[199963] c"size")))
    {
      (200023 call compilerError(200020 call +(200011 call +(200008 call + "Called chpl_reindexConvertDomMaybeSlice with incorrect rank. Got "(200006 call _cast string[26](200002 call . dims[199963] c"size"))) ", expecting ")(200018 call _cast string[26](200014 call . updom[199967] c"rank"))))
    }
    unknown ranges[200058](200056 call *(200032 call . downdom[199969] c"rank")(200055 call range[64316](?)(200037 call . downdom[199969] c"idxType")(stridable =(200052 call ||(200042 call . downdom[199969] c"stridable")(200049 call .(200048 call dims[199963] 0) c"stridable")))))
    (200061 'end of statement')
    unknown actualLow[200062](200073 call *(200066 call . downdom[199969] c"rank")(200070 call . downdom[199969] c"idxType"))
    unknown actualHigh[200075](200079 'typeof' actualLow[200062])
    (200080 'end of statement')
    {
      unknown d[200182] 0
      unknown tmp[200183] "maybe param" "temp"
      (200195 'move' tmp[200183](200193 call chpl_compute_low_param_loop_bound 0(200087 call -(200083 call . dims[199963] c"size") 1)))
      unknown tmp[200184] "maybe param" "temp"
      (200208 'move' tmp[200184](200206 call chpl_compute_high_param_loop_bound 0(200200 call -(200202 call . dims[199963] c"size") 1)))
      unknown tmp[200185] "maybe param" "temp"
      (200211 'move' tmp[200185] 1)
      ParamForLoop[200213]
      { d[200182] tmp[200183] tmp[200184] tmp[200185]
        {
          if(200177 call _cond_test(200099 call ==(200095 call .(200094 call dims[199963] d[200182]) c"size") 0))
          {
            (200115 call =(200104 call actualLow[200062] d[200182])(200112 call .(200111 call(200106 call . downdom[199969] c"dsiDim") d[200182]) c"low"))
            (200133 call =(200122 call actualHigh[200075] d[200182])(200130 call .(200129 call(200124 call . downdom[199969] c"dsiDim") d[200182]) c"high"))
          }
          {
            (200153 call =(200139 call actualLow[200062] d[200182])(200152 call chpl_reindexConvertIdxDim(200145 call .(200144 call dims[199963] d[200182]) c"first") updom[199967] downdom[199969] d[200182]))
            (200174 call =(200160 call actualHigh[200075] d[200182])(200173 call chpl_reindexConvertIdxDim(200166 call .(200165 call dims[199963] d[200182]) c"last") updom[199967] downdom[199969] d[200182]))
          }
        }
      }
      label _unused_continueLabel[200187]
      label _breakLabel[200186]
    }
    {
      unknown d[200352] 0
      unknown tmp[200353] "maybe param" "temp"
      (200365 'move' tmp[200353](200363 call chpl_compute_low_param_loop_bound 0(200228 call -(200224 call . updom[199967] c"rank") 1)))
      unknown tmp[200354] "maybe param" "temp"
      (200378 'move' tmp[200354](200376 call chpl_compute_high_param_loop_bound 0(200370 call -(200372 call . updom[199967] c"rank") 1)))
      unknown tmp[200355] "maybe param" "temp"
      (200381 'move' tmp[200355] 1)
      ParamForLoop[200383]
      { d[200352] tmp[200353] tmp[200354] tmp[200355]
        {
          if(200347 call _cond_test(200249 call ||(200239 call .(200238 call(200233 call . downdom[199969] c"dsiDim") d[200352]) c"stridable")(200246 call .(200245 call dims[199963] d[200352]) c"stridable")))
          {
            const relStride[200286] "const"(200285 call max 1(200283 call *(200271 call /(200258 call .(200257 call dims[199963] d[200352]) c"stride")(200268 call .(200267 call(200262 call . updom[199967] c"dsiDim") d[200352]) c"stride"))(200280 call .(200279 call(200274 call . downdom[199969] c"dsiDim") d[200352]) c"stride")))
            (200289 'end of statement')
            (200317 call =(200294 call ranges[200058] d[200352])(200316 call(200301 call(200296 call . downdom[199969] c"dsiDim") d[200352])(200313 call chpl_by(200310 call chpl_build_bounded_range(200305 call actualLow[200062] d[200352])(200309 call actualHigh[200075] d[200352])) relStride[200286])))
          }
          {
            (200343 call =(200323 call ranges[200058] d[200352])(200342 call(200330 call(200325 call . downdom[199969] c"dsiDim") d[200352])(200339 call chpl_build_bounded_range(200334 call actualLow[200062] d[200352])(200338 call actualHigh[200075] d[200352]))))
          }
        }
      }
      label _unused_continueLabel[200357]
      label _breakLabel[200356]
    }
    (200397 return(200395 call chpl__buildDomainExpr(200393 'expand_tuple' ranges[200058])))
  }
  (355306 'used modules list'(196042 'use' ChapelStandard[20264]))
}