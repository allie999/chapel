AST dump for ArrayViewReindex after pass scopeResolve.
Module use list: ChapelStandard 

{
  function ArrayViewReindexDist[196269](?).downDist[196059](arg _mt[196273]:_MT[238], arg this[196271]:ArrayViewReindexDist[196269](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196076 call _cond_test(196064 call _isPrivatized(391904 call . this[196271] c"downDistInst")))
    {
      (196071 return(196070 call chpl_getPrivatizedCopy(196067 'typeof'(391909 call . this[196271] c"downDistInst"))(391914 call . this[196271] c"downDistPid")))
    }
    {
      (196074 return(391919 call . this[196271] c"downDistInst"))
    }
  }
  function ArrayViewReindexDist[196269](?).dsiNewRectangularDom[196089](arg _mt[196277]:_MT[238], arg this[196275]:ArrayViewReindexDist[196269](?), param arg rank[196087]:_any[178](?), arg idxType[196091]:_any[178](?), param arg stridable[196093]:_any[178](?), arg inds[196095]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown newdom[196123](196099 'new'(_chpl_manager = unmanaged[220](?))(196122 call ArrayViewReindexDom[391923](?)(rank = rank[196087])(idxType = idxType[196091])(stridable = stridable[196093])(downdomPid =(391933 call . this[196275] c"downdomPid"))(downdomInst =(391938 call . this[196275] c"downdomInst"))(distPid =(196113 call . this[196275] c"pid"))(distInst =(196120 call _to_unmanaged this[196275]))))
    (196126 'end of statement')
    (196134 call(196129 call . newdom[196123] c"dsiSetIndices") inds[196095])
    (196137 return newdom[196123])
  }
  function ArrayViewReindexDist[196269](?).dsiClone[196143](arg _mt[196281]:_MT[238], arg this[196279]:ArrayViewReindexDist[196269](?)) : _unknown[51] "method" "primary method"
  {
    (196161 return(196147 'new'(_chpl_manager = unmanaged[220](?))(196160 call ArrayViewReindexDist[384264](?)(downDistPid =(391947 call . this[196279] c"downDistPid"))(downDistInst =(391952 call . this[196279] c"downDistInst"))(updom =(391957 call . this[196279] c"updom"))(downdomPid =(391962 call . this[196279] c"downdomPid"))(downdomInst =(391967 call . this[196279] c"downdomInst")))))
  }
  function ArrayViewReindexDist[196269](?).dsiSupportsPrivatization[196168](arg _mt[196285]:_MT[238], arg this[196283]:ArrayViewReindexDist[196269](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (196176 return(196175 call(196171 call .(362415 call . this[196283] c"downDistInst") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexDist[196269](?).dsiGetPrivatizeData[196183](arg _mt[196289]:_MT[238], arg this[196287]:ArrayViewReindexDist[196269](?)) : _unknown[51] "method" "primary method"
  {
    (196193 return(196191 call _build_tuple(391972 call . this[196287] c"downDistPid")(391977 call . this[196287] c"downDistInst")(391982 call . this[196287] c"updom")(391987 call . this[196287] c"downdomPid")(391992 call . this[196287] c"downdomInst")))
  }
  function ArrayViewReindexDist[196269](?).dsiPrivatize[196202](arg _mt[196293]:_MT[238], arg this[196291]:ArrayViewReindexDist[196269](?), arg privatizeData[196200]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (196235 return(196206 'new'(_chpl_manager = unmanaged[220](?))(196234 call ArrayViewReindexDist[384264](?)(downDistPid =(196211 call privatizeData[196200] 0))(downDistInst =(196217 call privatizeData[196200] 1))(updom =(196222 call privatizeData[196200] 2))(downdomPid =(196227 call privatizeData[196200] 3))(downdomInst =(196232 call privatizeData[196200] 4)))))
  }
  function ArrayViewReindexDist[196269](?).dsiDestroyDist[196242](arg _mt[196297]:_MT[238], arg this[196295]:ArrayViewReindexDist[196269](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (196248 call _delete_dom(392003 call . this[196295] c"updom") 0)
  }
  function ArrayViewReindexDist[196269](?).dsiIsLayout[196255](arg _mt[196301]:_MT[238], arg this[196299]:ArrayViewReindexDist[196269](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (196263 return(196262 call(196258 call .(362420 call . this[196299] c"downDistInst") c"dsiIsLayout")))
  }
  type ArrayViewReindexDist[196269](?) val super[355718]:BaseDist[145926] "super class" const downDistPid[196037] "const" int(64)[13] const downDistInst[196041] "const" const updom[196045] "const" const downdomPid[196049] "const" const downdomInst[196053] "const"
  type ArrayViewReindexDist[384264](?)
  function ArrayViewReindexDom[197583](?).chpl_forwarding_expr10_updom[196321](arg _mt[197587]:_MT[238], arg this[197585]:ArrayViewReindexDom[197583](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (196323 return(392011 call . this[197585] c"updom"))
  }
  function ArrayViewReindexDom[197583](?).dist[196350](arg _mt[197591]:_MT[238], arg this[197589]:ArrayViewReindexDom[197583](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196367 call _cond_test(196355 call _isPrivatized(392016 call . this[197589] c"distInst")))
    {
      (196362 return(196361 call chpl_getPrivatizedCopy(196358 'typeof'(392021 call . this[197589] c"distInst"))(392026 call . this[197589] c"distPid")))
    }
    {
      (196365 return(392031 call . this[197589] c"distInst"))
    }
  }
  function ArrayViewReindexDom[197583](?).updom[196378](arg _mt[197595]:_MT[238], arg this[197593]:ArrayViewReindexDom[197583](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (196383 return(196381 call postfix!(392038 call . this[197593] c"updomInst")))
  }
  function ArrayViewReindexDom[197583](?).downdomtype[196394](arg _mt[197599]:_MT[238], arg this[197597]:ArrayViewReindexDom[197583](?), param arg rank[196391] :
  int(64)[13], arg idxType[196396]:_any[178](?), param arg stridable[196399] :
  bool[10]) type : _unknown[51] "method" "primary method"
  {
    unknown ranges[196414](196412 call * rank[196391](196411 call range[64316](?) idxType[196396] bounded[64205] stridable[196399]))
    (196417 'end of statement')
    unknown a[196435](196434 call(196423 call .(196420 call .(362425 call . this[197597] c"dist") c"downDist") c"dsiNewRectangularDom")(rank = rank[196391])(idxType = idxType[196396])(stridable = stridable[196399]) ranges[196414])
    (196438 'end of statement')
    (196441 return(196440 'typeof' a[196435]))
  }
  function ArrayViewReindexDom[197583](?).downdom[196447](arg _mt[197603]:_MT[238], arg this[197601]:ArrayViewReindexDom[197583](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(196464 call _cond_test(196452 call _isPrivatized(392052 call . this[197601] c"downdomInst")))
    {
      (196459 return(196458 call chpl_getPrivatizedCopy(196455 'typeof'(392057 call . this[197601] c"downdomInst"))(392062 call . this[197601] c"downdomPid")))
    }
    {
      (196462 return(392067 call . this[197601] c"downdomInst"))
    }
  }
  function ArrayViewReindexDom[197583](?).dsiBuildArray[196477](arg _mt[197607]:_MT[238], arg this[197605]:ArrayViewReindexDom[197583](?), arg eltType[196475]:_any[178](?), param arg initElts[196480] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    const downarr[196494] "const" "no auto destroy"(196493 call _newArray(196491 call(196485 call .(362429 call . this[197605] c"downdom") c"dsiBuildArray") eltType[196475] initElts[196480]))
    (196497 'end of statement')
    (196529 return(196501 'new'(_chpl_manager = unmanaged[220](?))(196528 call ArrayViewReindexArr[384278](?)(eltType = eltType[196475])(_DomPid =(196507 call . this[197605] c"pid"))(dom =(196514 call _to_unmanaged this[197605]))(_ArrPid =(196517 call . downarr[196494] c"_pid"))(_ArrInstance =(196522 call . downarr[196494] c"_instance"))(ownsArrInstance = 1))))
  }
  function ArrayViewReindexDom[197583](?).dsiSetIndices[196537](arg _mt[197611]:_MT[238], arg this[197609]:ArrayViewReindexDom[197583](?), arg inds[196535]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown updomRec[196544] "no auto destroy"(196542 call chpl__buildDomainExpr(196540 'expand_tuple' inds[196535]))
    (196547 'end of statement')
    if(196561 call _cond_test(196551 call !=(392078 call . this[197609] c"updomInst") nil[44]))
    {
      (196559 call _delete_dom(196555 call postfix!(392083 call . this[197609] c"updomInst")) 0)
    }
    (196571 call =(392088 call . this[197609] c"updomInst")(196568 call . updomRec[196544] c"_value"))
    unknown ranges[196594](196592 call *(392093 call . this[197609] c"rank")(196591 call range[64316](?)(392099 call . this[197609] c"idxType") bounded[64205](196588 call .(196585 call .(362438 call . this[197609] c"dist") c"downdomInst") c"stridable")))
    (196597 'end of statement')
    unknown downdomclass[196620](196619 call(196602 call .(196599 call .(362442 call . this[197609] c"dist") c"downDist") c"dsiNewRectangularDom")(rank =(392104 call . this[197609] c"rank"))(idxType =(392109 call . this[197609] c"idxType"))(stridable =(196614 call .(196611 call .(362446 call . this[197609] c"dist") c"downdomInst") c"stridable")) ranges[196594])
    (196623 'end of statement')
    unknown downdomLoc[196629] "no auto destroy"(196624 'new'(196628 call _domain[125902](?) downdomclass[196620]))
    (196632 'end of statement')
    (196643 call = downdomLoc[196629](196642 call chpl_reindexConvertDom inds[196535](392118 call . this[197609] c"updom")(196639 call .(362450 call . this[197609] c"dist") c"downdomInst")))
    (196654 call =(196650 call .(196647 call . downdomLoc[196629] c"_value") c"_free_when_no_arrs") 1)
    if(196674 call _cond_test(196662 call &&(196659 call !=(392123 call . this[197609] c"downdomInst") nil[44])(392130 call . this[197609] c"ownsDownDomInst")))
    {
      (196671 call _delete_dom(392135 call . this[197609] c"downdomInst")(196670 call _isPrivatized(392140 call . this[197609] c"downdomInst")))
    }
    (196683 call =(392145 call . this[197609] c"downdomPid")(196680 call . downdomLoc[196629] c"_pid"))
    (196691 call =(392150 call . this[197609] c"downdomInst")(196688 call . downdomLoc[196629] c"_instance"))
    (196696 call =(392155 call . this[197609] c"ownsDownDomInst") 1)
  }
  function ArrayViewReindexDom[197583](?).these[196703](arg _mt[197615]:_MT[238], arg this[197613]:ArrayViewReindexDom[197583](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(196790 call _cond_test(196708 call chpl__isDROrDRView(392159 call . this[197613] c"downdom")))
    {
      {
        unknown _indexOfInterest[196714] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196715] "expr temp" "temp"
        (196724 'move' _iterator[196715](196722 call _getIterator(392163 call . this[197613] c"updom")))
        Defer
        {
          {
            (196740 call _freeIterator _iterator[196715])
          }
        }
        { scopeless type
          (196729 'move' _indexOfInterest[196714](196726 call iteratorIndex _iterator[196715]))
        }
        ForLoop[196716]
        {
          unknown i[196733] "index var" "insert auto destroy"
          (196735 'move' i[196733] _indexOfInterest[196714])
          (196712 yield i[196733])
          label _continueLabel[196719]
          _indexOfInterest[196714]
          _iterator[196715]
        }
        label _breakLabel[196720]
      }
    }
    {
      {
        unknown _indexOfInterest[196756] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196757] "expr temp" "temp"
        (196766 'move' _iterator[196757](196764 call _getIterator(392168 call . this[197613] c"downdom")))
        Defer
        {
          {
            (196782 call _freeIterator _iterator[196757])
          }
        }
        { scopeless type
          (196771 'move' _indexOfInterest[196756](196768 call iteratorIndex _iterator[196757]))
        }
        ForLoop[196758]
        {
          unknown i[196775] "index var" "insert auto destroy"
          (196777 'move' i[196775] _indexOfInterest[196756])
          (196754 yield(196753 call(392172 call . this[197613] c"downIdxToUpIdx") i[196775]))
          label _continueLabel[196761]
          _indexOfInterest[196756]
          _iterator[196757]
        }
        label _breakLabel[196762]
      }
    }
  }
  function ArrayViewReindexDom[197583](?).these[196803](arg _mt[197619]:_MT[238], arg this[197617]:ArrayViewReindexDom[197583](?), param arg tag[196800] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[196832] "index var" "insert auto destroy"
      iterated expressions:
        (392188 call . this[197617] c"updom")
      shadow variables:
      other variables
        forall body
      {
        (196829 yield i[196832])
      }
    }
  }
  where {
    (196824 call &&(196816 call &&(196810 call == tag[196800] standalone[451])(196815 call chpl__isDROrDRView(392179 call . this[197617] c"downdom")))(196823 'method call resolves'(392183 call . this[197617] c"updom") "these" tag[196800]))
  }
  function ArrayViewReindexDom[197583](?).these[196845](arg _mt[197623]:_MT[238], arg this[197621]:ArrayViewReindexDom[197583](?), param arg tag[196842] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[196879] "index var" "insert auto destroy"
      iterated expressions:
        (392204 call . this[197621] c"downdom")
      shadow variables:
      other variables
        forall body
      {
        (196876 yield(196875 call(392208 call . this[197621] c"downIdxToUpIdx") i[196879]))
      }
    }
  }
  where {
    (196868 call &&(196860 call &&(196852 call == tag[196842] standalone[451])(196858 call !(196857 call chpl__isDROrDRView(392195 call . this[197621] c"downdom"))))(196867 'method call resolves'(392199 call . this[197621] c"downdom") "these" tag[196842]))
  }
  function ArrayViewReindexDom[197583](?).these[196892](arg _mt[197627]:_MT[238], arg this[197625]:ArrayViewReindexDom[197583](?), param arg tag[196889] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(196998 call _cond_test(196904 call chpl__isDROrDRView(392215 call . this[197625] c"downdom")))
    {
      {
        unknown _indexOfInterest[196916] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196917] "expr temp" "temp"
        (196926 'move' _iterator[196917](196924 call _getIterator(196912 call(196907 call .(362460 call . this[197625] c"updom") c"these") tag[196889])))
        Defer
        {
          {
            (196943 call _freeIterator _iterator[196917])
          }
        }
        { scopeless type
          (196932 'move' _indexOfInterest[196916](196929 call iteratorIndex _iterator[196917]))
        }
        ForLoop[196918]
        {
          unknown followThis[196936] "index var" "insert auto destroy"
          (196938 'move' followThis[196936] _indexOfInterest[196916])
          (196914 yield followThis[196936])
          label _continueLabel[196921]
          _indexOfInterest[196916]
          _iterator[196917]
        }
        label _breakLabel[196922]
      }
    }
    {
      {
        unknown _indexOfInterest[196963] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[196964] "expr temp" "temp"
        (196973 'move' _iterator[196964](196971 call _getIterator(196958 call(196953 call .(362464 call . this[197625] c"downdom") c"these") tag[196889])))
        Defer
        {
          {
            (196990 call _freeIterator _iterator[196964])
          }
        }
        { scopeless type
          (196979 'move' _indexOfInterest[196963](196976 call iteratorIndex _iterator[196964]))
        }
        ForLoop[196965]
        {
          unknown followThis[196983] "index var" "insert auto destroy"
          (196985 'move' followThis[196983] _indexOfInterest[196963])
          {
            (196960 yield followThis[196983])
          }
          label _continueLabel[196968]
          _indexOfInterest[196963]
          _iterator[196964]
        }
        label _breakLabel[196969]
      }
    }
  }
  where {
    (196899 call == tag[196889] leader[447])
  }
  function ArrayViewReindexDom[197583](?).these[197012](arg _mt[197631]:_MT[238], arg this[197629]:ArrayViewReindexDom[197583](?), param arg tag[197009] :
  iterKind[453], arg followThis[197014]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[197035] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[197036] "expr temp" "temp"
      (197045 'move' _iterator[197036](197043 call _getIterator(197031 call(197025 call .(362469 call . this[197629] c"updom") c"these") tag[197009] followThis[197014])))
      Defer
      {
        {
          (197062 call _freeIterator _iterator[197036])
        }
      }
      { scopeless type
        (197051 'move' _indexOfInterest[197035](197048 call iteratorIndex _iterator[197036]))
      }
      ForLoop[197037]
      {
        unknown i[197055] "index var" "insert auto destroy"
        (197057 'move' i[197055] _indexOfInterest[197035])
        (197033 yield i[197055])
        label _continueLabel[197040]
        _indexOfInterest[197035]
        _iterator[197036]
      }
      label _breakLabel[197041]
    }
  }
  where {
    (197021 call == tag[197009] follower[449])
  }
  function ArrayViewReindexDom[197583](?).chpl_reindexConvertLoDTupleToHiD[197077](arg _mt[197635]:_MT[238], arg this[197633]:ArrayViewReindexDom[197583](?), arg tup[197075]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197098 call compilerError "Unimplemented routine")
  }
  function ArrayViewReindexDom[197583](?).chpl_reindexConvertHiDTupleToLoD[197107](arg _mt[197639]:_MT[238], arg this[197637]:ArrayViewReindexDom[197583](?), arg tup[197105]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197112 call compilerError "Unimplemented routine")
  }
  function ArrayViewReindexDom[197583](?).downIdxToUpIdx[197123](arg _mt[197643]:_MT[238], arg this[197641]:ArrayViewReindexDom[197583](?), arg downIdx[197120] :
  integral[199](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (197141 call compilerAssert(197131 call ==(197127 call .(362473 call . this[197641] c"updom") c"rank") 1)(197139 call _cast string[26](197135 call .(362477 call . this[197641] c"updom") c"rank")))
    (197169 return(197168 call(197151 call .(197150 call(197145 call .(362481 call . this[197641] c"updom") c"dsiDim") 0) c"orderToIndex")(197166 call(197161 call .(197160 call(197155 call .(362485 call . this[197641] c"downdom") c"dsiDim") 0) c"indexOrder") downIdx[197120])))
  }
  function ArrayViewReindexDom[197583](?).downIdxToUpIdx[197177](arg _mt[197647]:_MT[238], arg this[197645]:ArrayViewReindexDom[197583](?), arg i[197175]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ind[197189](197187 call *(197180 call .(362489 call . this[197645] c"updom") c"rank")(197184 call .(362493 call . this[197645] c"updom") c"idxType"))
    (197192 'end of statement')
    {
      unknown d[197240] 0
      unknown tmp[197241] "maybe param" "temp"
      (197253 'move' tmp[197241](197251 call chpl_compute_low_param_loop_bound 0(197200 call -(197196 call .(362497 call . this[197645] c"updom") c"rank") 1)))
      unknown tmp[197242] "maybe param" "temp"
      (197266 'move' tmp[197242](197264 call chpl_compute_high_param_loop_bound 0(197258 call -(197260 call .(362509 call . this[197645] c"updom") c"rank") 1)))
      unknown tmp[197243] "maybe param" "temp"
      (197269 'move' tmp[197243] 1)
      ParamForLoop[197271]
      { d[197240] tmp[197241] tmp[197242] tmp[197243]
        {
          (197236 call =(197207 call ind[197189] d[197240])(197235 call(197215 call .(197214 call(197209 call .(362501 call . this[197645] c"updom") c"dsiDim") d[197240]) c"orderToIndex")(197233 call(197225 call .(197224 call(197219 call .(362505 call . this[197645] c"downdom") c"dsiDim") d[197240]) c"indexOrder")(197231 call i[197175] d[197240]))))
        }
      }
      label _unused_continueLabel[197245]
      label _breakLabel[197244]
    }
    (197281 return ind[197189])
  }
  function ArrayViewReindexDom[197583](?).dsiMyDist[197287](arg _mt[197651]:_MT[238], arg this[197649]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (197290 return(392237 call . this[197649] c"dist"))
  }
  function ArrayViewReindexDom[197583](?).dsiTargetLocales[197297](arg _mt[197655]:_MT[238], arg this[197653]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method"
  {
    (197305 return(197304 call(197300 call .(362513 call . this[197653] c"downdom") c"dsiTargetLocales")))
  }
  function ArrayViewReindexDom[197583](?).dsiHasSingleLocalSubdomain[197312](arg _mt[197659]:_MT[238], arg this[197657]:ArrayViewReindexDom[197583](?)) param : _unknown[51] "method" "primary method"
  {
    (197320 return(197319 call(197315 call .(362517 call . this[197657] c"downdom") c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewReindexDom[197583](?).dsiLocalSubdomain[197331](arg _mt[197663]:_MT[238], arg this[197661]:ArrayViewReindexDom[197583](?), arg loc[197328] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    const dims[197345] "const"(197344 call(197340 call .(197339 call(197334 call .(362521 call . this[197661] c"downdom") c"dsiLocalSubdomain") loc[197328]) c"dims"))
    (197348 'end of statement')
    (197356 return(197355 call chpl_reindexConvertDom dims[197345](392243 call . this[197661] c"downdom")(392247 call . this[197661] c"updom")))
  }
  function ArrayViewReindexDom[197583](?).dsiAssignDomain[197366](arg _mt[197667]:_MT[238], arg this[197665]:ArrayViewReindexDom[197583](?), arg rhs[197363] :
  _domain[125902](?), arg lhsPrivate[197369] :
  bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197376 call chpl_assignDomainWithGetSetIndices this[197665] rhs[197363])
  }
  function ArrayViewReindexDom[197583](?).isReindexDomainView[197383](arg _mt[197671]:_MT[238], arg this[197669]:ArrayViewReindexDom[197583](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197386 return 1)
  }
  function ArrayViewReindexDom[197583](?)._getActualDomain[197393](arg _mt[197675]:_MT[238], arg this[197673]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method"
  {
    if(197412 call _cond_test(197398 call chpl__isDomainView(392254 call . this[197673] c"downdom")))
    {
      (197405 return(197404 call(197400 call .(362525 call . this[197673] c"downdom") c"_getActualDomain")))
    }
    {
      (197409 return(392258 call . this[197673] c"downdom"))
    }
  }
  function ArrayViewReindexDom[197583](?).dsiDestroyDom[197421](arg _mt[197679]:_MT[238], arg this[197677]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (197429 call _delete_dom(197425 call postfix!(392263 call . this[197677] c"updomInst")) 0)
    (197439 call _delete_dom(392268 call . this[197677] c"downdomInst")(197438 call _isPrivatized(392273 call . this[197677] c"downdomInst")))
  }
  function ArrayViewReindexDom[197583](?).dsiSupportsPrivatization[197445](arg _mt[197683]:_MT[238], arg this[197681]:ArrayViewReindexDom[197583](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197453 return(197452 call(197448 call .(362530 call . this[197681] c"downdomInst") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexDom[197583](?).dsiGetPrivatizeData[197460](arg _mt[197687]:_MT[238], arg this[197685]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method"
  {
    (197470 return(197468 call _build_tuple(392278 call . this[197685] c"updomInst")(392283 call . this[197685] c"downdomPid")(392288 call . this[197685] c"downdomInst")(392293 call . this[197685] c"distPid")(392298 call . this[197685] c"distInst")))
  }
  function ArrayViewReindexDom[197583](?).dsiPrivatize[197479](arg _mt[197691]:_MT[238], arg this[197689]:ArrayViewReindexDom[197583](?), arg privatizeData[197477]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (197527 return(197483 'new'(_chpl_manager = unmanaged[220](?))(197526 call ArrayViewReindexDom[391923](?)(rank =(197486 call . this[197689] c"rank"))(idxType =(197492 call . this[197689] c"idxType"))(stridable =(197497 call . this[197689] c"stridable"))(updomInst =(197504 call privatizeData[197477] 0))(downdomPid =(197509 call privatizeData[197477] 1))(downdomInst =(197514 call privatizeData[197477] 2))(distPid =(197519 call privatizeData[197477] 3))(distInst =(197524 call privatizeData[197477] 4)))))
  }
  function ArrayViewReindexDom[197583](?).dsiGetReprivatizeData[197534](arg _mt[197695]:_MT[238], arg this[197693]:ArrayViewReindexDom[197583](?)) : _unknown[51] "method" "primary method"
  {
    (197542 return(197540 call _build_tuple(392309 call . this[197693] c"updomInst")(392314 call . this[197693] c"downdomPid")(392319 call . this[197693] c"downdomInst")))
  }
  function ArrayViewReindexDom[197583](?).dsiReprivatize[197551](arg _mt[197699]:_MT[238], arg this[197697]:ArrayViewReindexDom[197583](?), arg other[197549]:_any[178](?), arg reprivatizeData[197553]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197560 call =(392324 call . this[197697] c"updomInst")(197559 call reprivatizeData[197553] 0))
    (197569 call =(392330 call . this[197697] c"downdomPid")(197568 call reprivatizeData[197553] 1))
    (197577 call =(392336 call . this[197697] c"downdomInst")(197576 call reprivatizeData[197553] 2))
  }
  type ArrayViewReindexDom[197583](?) val super[355720]:BaseRectangularDom[146893](?) "super class" unknown updomInst[196315](196312 call unmanaged DefaultRectangularDom?[415492](?) rank[146812] idxType[146816] stridable[146820]) unknown downdomPid[196327] unknown downdomInst[196331] const distPid[196335] "const" const distInst[196339] "const" unknown ownsDownDomInst[196344] 0 forwarding ( )
  type ArrayViewReindexDom[391923](?)
  function buildIndexCacheHelper[197706](arg arr[197704]:_any[178](?), arg dom[197708]:_any[178](?)) : _unknown[51] "private"
  {
    if(197807 call _cond_test(197713 call chpl__isDROrDRView arr[197704]))
    {
      if(197798 call _cond_test(197717 call chpl__isArrayView arr[197704]))
      {
        if(197778 call _cond_test(197732 call &&(197723 call(197719 call . arr[197704] c"isSliceArrayView"))(197730 call !(197729 call(197725 call . arr[197704] c"_containsRCRE")))))
        {
          (197762 return(197761 call(197756 call .(197753 call(197745 call .(197744 call(197740 call .(197739 call(197735 call . arr[197704] c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(197749 call . arr[197704] c"dom")) c"toReindex") dom[197708]))
        }
        {
          (197775 return(197774 call(197769 call .(197766 call . arr[197704] c"indexCache") c"toReindex") dom[197708]))
        }
      }
      {
        (197795 return(197794 call(197789 call .(197788 call(197784 call . arr[197704] c"dsiGetRAD")) c"toReindex") dom[197708]))
      }
    }
    {
      (197804 return 0)
    }
  }
  function ArrayViewReindexArr[199273](?).init[197845](arg _mt[199277]:_MT[238], arg this[199275]:ArrayViewReindexArr[199273](?), arg eltType[197843]:_any[178](?), const arg _DomPid[197847]:_any[178](?), const arg dom[197849]:_any[178](?), const arg _ArrPid[197851]:_any[178](?), const arg _ArrInstance[197853]:_any[178](?), const arg ownsArrInstance[197857] :
  bool[10] =
  0) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (197868 call(197862 call .(362544 call . this[199275] c"super") c"init")(eltType = eltType[197843]))
    (197876 call =(197872 call . this[199275] c"_DomPid") _DomPid[197847])
    (197884 call =(197880 call . this[199275] c"dom") dom[197849])
    (197892 call =(197888 call . this[199275] c"_ArrPid") _ArrPid[197851])
    (197900 call =(197896 call . this[199275] c"_ArrInstance") _ArrInstance[197853])
    (197912 call =(197904 call . this[199275] c"indexCache")(197911 call buildIndexCacheHelper _ArrInstance[197853] dom[197849]))
    (197920 call =(197916 call . this[199275] c"ownsArrInstance") ownsArrInstance[197857])
  }
  function ArrayViewReindexArr[199273](?).chpl_forwarding_expr11_arr[197934](arg _mt[199281]:_MT[238], arg this[199279]:ArrayViewReindexArr[199273](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (197936 return(392354 call . this[199279] c"arr"))
  }
  function ArrayViewReindexArr[199273](?).downdom[197942](arg _mt[199285]:_MT[238], arg this[199283]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    (197948 return(197945 call .(362554 call . this[199283] c"arr") c"dom"))
  }
  function ArrayViewReindexArr[199273](?).idxType[197955](arg _mt[199289]:_MT[238], arg this[199287]:ArrayViewReindexArr[199273](?)) type : _unknown[51] "method" "primary method" "no parens"
  {
    (197961 return(197958 call .(362559 call . this[199287] c"dom") c"idxType"))
  }
  function ArrayViewReindexArr[199273](?).rank[197968](arg _mt[199293]:_MT[238], arg this[199291]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    (197974 return(197971 call .(362564 call . this[199291] c"dom") c"rank"))
  }
  function ArrayViewReindexArr[199273](?).isReindexArrayView[197981](arg _mt[199297]:_MT[238], arg this[199295]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (197984 return 1)
  }
  function ArrayViewReindexArr[199273](?).these[197991](arg _mt[199301]:_MT[238], arg this[199299]:ArrayViewReindexArr[199273](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198002] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198003] "expr temp" "temp"
      (198012 'move' _iterator[198003](198010 call _getIterator(197998 call chpl__serialViewIter this[199299](392359 call . this[199299] c"privDom"))))
      Defer
      {
        {
          (198029 call _freeIterator _iterator[198003])
        }
      }
      { scopeless type
        (198018 'move' _indexOfInterest[198002](198015 call iteratorIndex _iterator[198003]))
      }
      ForLoop[198004]
      {
        unknown elem[198022] "index var" "insert auto destroy"
        (198024 'move' elem[198022] _indexOfInterest[198002])
        (198000 yield elem[198022])
        label _continueLabel[198007]
        _indexOfInterest[198002]
        _iterator[198003]
      }
      label _breakLabel[198008]
    }
  }
  function ArrayViewReindexArr[199273](?).these[198045](arg _mt[199305]:_MT[238], arg this[199303]:ArrayViewReindexArr[199273](?), param arg tag[198042] :
  iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[198114] "index var" "insert auto destroy"
      iterated expressions:
        (392372 call . this[199303] c"privDom")
      shadow variables:
      other variables
        forall body
      {
        if(198108 call _cond_test(198071 call(392376 call . this[199303] c"shouldUseIndexCache")))
        {
          const dataIdx[198079] "const"(198078 call(198073 call .(362570 call . this[199303] c"indexCache") c"getDataIndex") i[198114])
          (198082 'end of statement')
          (198091 yield(198090 call(198085 call .(362575 call . this[199303] c"indexCache") c"getDataElem") dataIdx[198079]))
        }
        {
          (198105 yield(198104 call(198094 call .(362579 call . this[199303] c"arr") c"dsiAccess")(198102 call chpl_reindexConvertIdx i[198114](392383 call . this[199303] c"privDom")(392387 call . this[199303] c"downdom"))))
        }
      }
    }
  }
  where {
    (198065 call &&(198057 call &&(198052 call == tag[198042] standalone[451])(198055 call ! localeModelHasSublocales[187403]))(198064 'method call resolves'(392367 call . this[199303] c"privDom") "these" tag[198042]))
  }
  function ArrayViewReindexArr[199273](?).these[198127](arg _mt[199309]:_MT[238], arg this[199307]:ArrayViewReindexArr[199273](?), param arg tag[198124] :
  iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198148] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198149] "expr temp" "temp"
      (198158 'move' _iterator[198149](198156 call _getIterator(198143 call(198138 call .(362584 call . this[199307] c"privDom") c"these") tag[198124])))
      Defer
      {
        {
          (198175 call _freeIterator _iterator[198149])
        }
      }
      { scopeless type
        (198164 'move' _indexOfInterest[198148](198161 call iteratorIndex _iterator[198149]))
      }
      ForLoop[198150]
      {
        unknown followThis[198168] "index var" "insert auto destroy"
        (198170 'move' followThis[198168] _indexOfInterest[198148])
        {
          (198145 yield followThis[198168])
        }
        label _continueLabel[198153]
        _indexOfInterest[198148]
        _iterator[198149]
      }
      label _breakLabel[198154]
    }
  }
  where {
    (198134 call == tag[198124] leader[447])
  }
  function ArrayViewReindexArr[199273](?).these[198192](arg _mt[199313]:_MT[238], arg this[199311]:ArrayViewReindexArr[199273](?), param arg tag[198189] :
  iterKind[453], arg followThis[198194]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[198256] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[198257] "expr temp" "temp"
      (198266 'move' _iterator[198257](198264 call _getIterator(198211 call(198205 call .(362589 call . this[199311] c"privDom") c"these") tag[198189] followThis[198194])))
      Defer
      {
        {
          (198283 call _freeIterator _iterator[198257])
        }
      }
      { scopeless type
        (198272 'move' _indexOfInterest[198256](198269 call iteratorIndex _iterator[198257]))
      }
      ForLoop[198258]
      {
        unknown i[198276] "index var" "insert auto destroy"
        (198278 'move' i[198276] _indexOfInterest[198256])
        {
          if(198251 call _cond_test(198214 call(392399 call . this[199311] c"shouldUseIndexCache")))
          {
            const dataIdx[198222] "const"(198221 call(198216 call .(362594 call . this[199311] c"indexCache") c"getDataIndex") i[198276])
            (198225 'end of statement')
            (198234 yield(198233 call(198228 call .(362599 call . this[199311] c"indexCache") c"getDataElem") dataIdx[198222]))
          }
          {
            (198248 yield(198247 call(198237 call .(362603 call . this[199311] c"arr") c"dsiAccess")(198245 call chpl_reindexConvertIdx i[198276](392406 call . this[199311] c"privDom")(392410 call . this[199311] c"downdom"))))
          }
        }
        label _continueLabel[198261]
        _indexOfInterest[198256]
        _iterator[198257]
      }
      label _breakLabel[198262]
    }
  }
  where {
    (198201 call == tag[198189] follower[449])
  }
  function ArrayViewReindexArr[199273](?).dsiSerialWrite[198298](arg _mt[199317]:_MT[238], arg this[199315]:ArrayViewReindexArr[199273](?), arg f[198296]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (198310 call chpl_serialReadWriteRectangular f[198296] this[199315](198307 call .(362607 call . this[199315] c"privDom") c"updom"))
  }
  function ArrayViewReindexArr[199273](?).dsiSerialRead[198319](arg _mt[199321]:_MT[238], arg this[199319]:ArrayViewReindexArr[199273](?), arg f[198317]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (198329 call chpl_serialReadWriteRectangular f[198317] this[199319](198326 call .(362611 call . this[199319] c"privDom") c"updom"))
  }
  function ArrayViewReindexArr[199273](?).dsiDisplayRepresentation[198336](arg _mt[199325]:_MT[238], arg this[199323]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (198357 call writeln "Reindex view")
    (198379 call writeln "------------")
    (198384 call writeln "of domain:")
    (198391 call(198387 call .(362615 call . this[199323] c"privDom") c"dsiDisplayRepresentation"))
    (198396 call writeln "on array:")
    (198403 call(198399 call .(362619 call . this[199323] c"arr") c"dsiDisplayRepresentation"))
    (198408 call writeln "------------")
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198420](arg _mt[199329]:_MT[238], arg this[199327]:ArrayViewReindexArr[199273](?), arg i[198416] ... :
  (392418 call . this[199327] c"idxType")) ref : _unknown[51] "inline" "method" "primary method"
  {
    (198426 return(198425 call(392426 call . this[199327] c"dsiAccess") i[198416]))
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198439](arg _mt[199333]:_MT[238], arg this[199331]:ArrayViewReindexArr[199273](?), arg i[198435] ... :
  (392431 call . this[199331] c"idxType")) : _unknown[51] "inline" "method" "primary method"
  {
    (198449 return(198448 call(392444 call . this[199331] c"dsiAccess") i[198435]))
  }
  where {
    (198444 call shouldReturnRvalueByValue(392440 call . this[199331] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198463](arg _mt[199337]:_MT[238], arg this[199335]:ArrayViewReindexArr[199273](?), arg i[198459] ... :
  (392449 call . this[199335] c"idxType")) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (198473 return(198472 call(392462 call . this[199335] c"dsiAccess") i[198459]))
  }
  where {
    (198468 call shouldReturnRvalueByConstRef(392458 call . this[199335] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198483](arg _mt[199341]:_MT[238], arg this[199339]:ArrayViewReindexArr[199273](?), arg i[198481]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(198524 call _cond_test(198487 call(392467 call . this[199339] c"shouldUseIndexCache")))
    {
      const dataIdx[198495] "const"(198494 call(198489 call .(362624 call . this[199339] c"indexCache") c"getDataIndex") i[198481])
      (198498 'end of statement')
      (198507 return(198506 call(198501 call .(362629 call . this[199339] c"indexCache") c"getDataElem") dataIdx[198495]))
    }
    {
      (198521 return(198520 call(198510 call .(362633 call . this[199339] c"arr") c"dsiAccess")(198518 call chpl_reindexConvertIdx i[198481](392474 call . this[199339] c"privDom")(392478 call . this[199339] c"downdom"))))
    }
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198535](arg _mt[199345]:_MT[238], arg this[199343]:ArrayViewReindexArr[199273](?), arg i[198533]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(198580 call _cond_test(198543 call(392487 call . this[199343] c"shouldUseIndexCache")))
    {
      const dataIdx[198551] "const"(198550 call(198545 call .(362638 call . this[199343] c"indexCache") c"getDataIndex") i[198533])
      (198554 'end of statement')
      (198563 return(198562 call(198557 call .(362643 call . this[199343] c"indexCache") c"getDataElem") dataIdx[198551]))
    }
    {
      (198577 return(198576 call(198566 call .(362647 call . this[199343] c"arr") c"dsiAccess")(198574 call chpl_reindexConvertIdx i[198533](392494 call . this[199343] c"privDom")(392498 call . this[199343] c"downdom"))))
    }
  }
  where {
    (198540 call shouldReturnRvalueByValue(392483 call . this[199343] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiAccess[198592](arg _mt[199349]:_MT[238], arg this[199347]:ArrayViewReindexArr[199273](?), arg i[198590]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    if(198637 call _cond_test(198600 call(392507 call . this[199347] c"shouldUseIndexCache")))
    {
      const dataIdx[198608] "const"(198607 call(198602 call .(362652 call . this[199347] c"indexCache") c"getDataIndex") i[198590])
      (198611 'end of statement')
      (198620 return(198619 call(198614 call .(362657 call . this[199347] c"indexCache") c"getDataElem") dataIdx[198608]))
    }
    {
      (198634 return(198633 call(198623 call .(362661 call . this[199347] c"arr") c"dsiAccess")(198631 call chpl_reindexConvertIdx i[198590](392514 call . this[199347] c"privDom")(392518 call . this[199347] c"downdom"))))
    }
  }
  where {
    (198597 call shouldReturnRvalueByConstRef(392503 call . this[199347] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiLocalAccess[198649](arg _mt[199353]:_MT[238], arg this[199351]:ArrayViewReindexArr[199273](?), arg i[198647]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (198663 return(198662 call(198652 call .(362665 call . this[199351] c"arr") c"dsiLocalAccess")(198660 call chpl_reindexConvertIdx i[198647](392523 call . this[199351] c"privDom")(392527 call . this[199351] c"downdom"))))
  }
  function ArrayViewReindexArr[199273](?).dsiLocalAccess[198672](arg _mt[199357]:_MT[238], arg this[199355]:ArrayViewReindexArr[199273](?), arg i[198670]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (198690 return(198689 call(198679 call .(362669 call . this[199355] c"arr") c"dsiLocalAccess")(198687 call chpl_reindexConvertIdx i[198670](392537 call . this[199355] c"privDom")(392541 call . this[199355] c"downdom"))))
  }
  where {
    (198677 call shouldReturnRvalueByValue(392532 call . this[199355] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiLocalAccess[198700](arg _mt[199361]:_MT[238], arg this[199359]:ArrayViewReindexArr[199273](?), arg i[198698]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (198718 return(198717 call(198707 call .(362673 call . this[199359] c"arr") c"dsiLocalAccess")(198715 call chpl_reindexConvertIdx i[198698](392551 call . this[199359] c"privDom")(392555 call . this[199359] c"downdom"))))
  }
  where {
    (198705 call shouldReturnRvalueByConstRef(392546 call . this[199359] c"eltType"))
  }
  function ArrayViewReindexArr[199273](?).dsiBoundsCheck[198728](arg _mt[199365]:_MT[238], arg this[199363]:ArrayViewReindexArr[199273](?), arg i[198726]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (198737 return(198736 call(198731 call .(362677 call . this[199363] c"privDom") c"dsiMember") i[198726]))
  }
  function ArrayViewReindexArr[199273](?).dsiHasSingleLocalSubdomain[198744](arg _mt[199369]:_MT[238], arg this[199367]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method"
  {
    (198752 return(198751 call(198747 call .(362681 call . this[199367] c"privDom") c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewReindexArr[199273](?).dsiLocalSubdomain[198763](arg _mt[199373]:_MT[238], arg this[199371]:ArrayViewReindexArr[199273](?), arg loc[198760] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (198772 return(198771 call(198766 call .(362685 call . this[199371] c"privDom") c"dsiLocalSubdomain") loc[198760]))
  }
  function ArrayViewReindexArr[199273](?).dsiSupportsPrivatization[198779](arg _mt[199377]:_MT[238], arg this[199375]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (198787 return(198786 call(198782 call .(362690 call . this[199375] c"_ArrInstance") c"dsiSupportsPrivatization")))
  }
  function ArrayViewReindexArr[199273](?).dsiGetPrivatizeData[198794](arg _mt[199381]:_MT[238], arg this[199379]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method"
  {
    (198803 return(198801 call _build_tuple(392562 call . this[199379] c"_DomPid")(392566 call . this[199379] c"privDom")(392571 call . this[199379] c"_ArrPid")(392576 call . this[199379] c"_ArrInstance")))
  }
  function ArrayViewReindexArr[199273](?).dsiPrivatize[198812](arg _mt[199385]:_MT[238], arg this[199383]:ArrayViewReindexArr[199273](?), arg privatizeData[198810]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (198845 return(198816 'new'(_chpl_manager = unmanaged[220](?))(198844 call ArrayViewReindexArr[384278](?)(eltType =(198819 call . this[199383] c"eltType"))(_DomPid =(198827 call privatizeData[198810] 0))(dom =(198832 call privatizeData[198810] 1))(_ArrPid =(198837 call privatizeData[198810] 2))(_ArrInstance =(198842 call privatizeData[198810] 3)))))
  }
  function ArrayViewReindexArr[199273](?).shouldUseIndexCache[198852](arg _mt[199389]:_MT[238], arg this[199387]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method"
  {
    (198858 return(198857 call chpl__isDROrDRView(392586 call . this[199387] c"_ArrInstance")))
  }
  function ArrayViewReindexArr[199273](?).buildIndexCache[198865](arg _mt[199393]:_MT[238], arg this[199391]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method"
  {
    if(198961 call _cond_test(198869 call(392590 call . this[199391] c"shouldUseIndexCache")))
    {
      if(198952 call _cond_test(198873 call chpl__isArrayView(392595 call . this[199391] c"_ArrInstance")))
      {
        if(198932 call _cond_test(198888 call &&(198879 call(198875 call .(362696 call . this[199391] c"_ArrInstance") c"isSliceArrayView"))(198886 call !(198885 call(198881 call .(362701 call . this[199391] c"_ArrInstance") c"_containsRCRE")))))
        {
          (198916 return(198915 call(198910 call .(198909 call(198901 call .(198900 call(198896 call .(198895 call(198891 call .(362706 call . this[199391] c"_ArrInstance") c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(198905 call .(362711 call . this[199391] c"_ArrInstance") c"dom")) c"toReindex")(392600 call . this[199391] c"dom")))
        }
        {
          (198929 return(198928 call(198923 call .(198920 call .(362716 call . this[199391] c"_ArrInstance") c"indexCache") c"toReindex")(392605 call . this[199391] c"dom")))
        }
      }
      {
        (198949 return(198948 call(198943 call .(198942 call(198938 call .(362721 call . this[199391] c"_ArrInstance") c"dsiGetRAD")) c"toReindex")(392610 call . this[199391] c"dom")))
      }
    }
    {
      (198958 return 0)
    }
  }
  function ArrayViewReindexArr[199273](?).privDom[198970](arg _mt[199397]:_MT[238], arg this[199395]:ArrayViewReindexArr[199273](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(198989 call _cond_test(198975 call _isPrivatized(392615 call . this[199395] c"dom")))
    {
      (198982 return(198981 call chpl_getPrivatizedCopy(198978 'typeof'(392620 call . this[199395] c"dom"))(392625 call . this[199395] c"_DomPid")))
    }
    {
      (198986 return(392630 call . this[199395] c"dom"))
    }
  }
  function ArrayViewReindexArr[199273](?).arr[198998](arg _mt[199401]:_MT[238], arg this[199399]:ArrayViewReindexArr[199273](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(199017 call _cond_test(199003 call _isPrivatized(392635 call . this[199399] c"_ArrInstance")))
    {
      (199010 return(199009 call chpl_getPrivatizedCopy(199006 'typeof'(392640 call . this[199399] c"_ArrInstance"))(392645 call . this[199399] c"_ArrPid")))
    }
    {
      (199014 return(392650 call . this[199399] c"_ArrInstance"))
    }
  }
  function ArrayViewReindexArr[199273](?).dsiGetBaseDom[199026](arg _mt[199405]:_MT[238], arg this[199403]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (199029 return(392654 call . this[199403] c"privDom"))
  }
  function ArrayViewReindexArr[199273](?)._getActualArray[199036](arg _mt[199409]:_MT[238], arg this[199407]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method"
  {
    if(199055 call _cond_test(199041 call chpl__isArrayView(392658 call . this[199407] c"arr")))
    {
      (199048 return(199047 call(199043 call .(362725 call . this[199407] c"arr") c"_getActualArray")))
    }
    {
      (199052 return(392662 call . this[199407] c"arr"))
    }
  }
  function ArrayViewReindexArr[199273](?)._containsRCRE[199064](arg _mt[199413]:_MT[238], arg this[199411]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method"
  {
    if(199099 call _cond_test(199069 call chpl__isArrayView(392666 call . this[199411] c"arr")))
    {
      (199092 return(199090 call ||(199082 call ||(199075 call(199071 call .(362729 call . this[199411] c"arr") c"isRankChangeArrayView"))(199081 call(199077 call .(362733 call . this[199411] c"arr") c"isReindexArrayView")))(199089 call(199085 call .(362737 call . this[199411] c"arr") c"_containsRCRE"))))
    }
    {
      (199096 return 0)
    }
  }
  function ArrayViewReindexArr[199273](?)._getRCREView[199108](arg _mt[199417]:_MT[238], arg this[199415]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method"
  {
    (199111 return this[199415])
  }
  function ArrayViewReindexArr[199273](?).dsiElementInitializationComplete[199118](arg _mt[199421]:_MT[238], arg this[199419]:ArrayViewReindexArr[199273](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
  }
  function ArrayViewReindexArr[199273](?).dsiDestroyArr[199129](arg _mt[199425]:_MT[238], arg this[199423]:ArrayViewReindexArr[199273](?), arg deinitElts[199126] :
  bool[10]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    if(199142 call _cond_test(392672 call . this[199423] c"ownsArrInstance"))
    {
      (199139 call _delete_arr(392677 call . this[199423] c"_ArrInstance")(199138 call _isPrivatized(392682 call . this[199423] c"_ArrInstance")))
    }
  }
  function ArrayViewReindexArr[199273](?).doiCanBulkTransferRankChange[199151](arg _mt[199429]:_MT[238], arg this[199427]:ArrayViewReindexArr[199273](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (199159 return(199158 call(199154 call .(362741 call . this[199427] c"arr") c"doiCanBulkTransferRankChange")))
  }
  function ArrayViewReindexArr[199273](?).doiBulkTransferFromKnown[199168](arg _mt[199433]:_MT[238], arg this[199431]:ArrayViewReindexArr[199273](?), arg destDom[199166]:_any[178](?), arg srcClass[199170]:_any[178](?), arg srcDom[199172]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[199198] "const"(199197 call chpl_reindexConvertDomMaybeSlice(199181 call(199177 call . destDom[199166] c"dims"))(199184 call .(362746 call . this[199431] c"privDom") c"updom")(199194 call .(199191 call .(199188 call . this[199431] c"dom") c"dist") c"downdomInst"))
    (199201 'end of statement')
    (199213 return(199212 call chpl__bulkTransferArray(199205 call . this[199431] c"arr") shifted[199198] srcClass[199170] srcDom[199172]))
  }
  { scopeless type
    bool[10]
  }
  function ArrayViewReindexArr[199273](?).doiBulkTransferToKnown[199222](arg _mt[199437]:_MT[238], arg this[199435]:ArrayViewReindexArr[199273](?), arg srcDom[199220]:_any[178](?), arg destClass[199224]:_any[178](?), arg destDom[199226]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[199252] "const"(199251 call chpl_reindexConvertDomMaybeSlice(199235 call(199231 call . srcDom[199220] c"dims"))(199238 call .(362753 call . this[199435] c"privDom") c"updom")(199248 call .(199245 call .(199242 call . this[199435] c"dom") c"dist") c"downdomInst"))
    (199255 'end of statement')
    (199267 return(199266 call chpl__bulkTransferArray destClass[199224] destDom[199226](199262 call . this[199435] c"arr") shifted[199252]))
  }
  { scopeless type
    bool[10]
  }
  type ArrayViewReindexArr[199273](?) val super[355722]:AbsBaseArr[149697](?) "super class" const _DomPid[197817] "const" const dom[197821] "const" const _ArrPid[197825] "const" const _ArrInstance[197829] "const" const indexCache[197833] "const" const ownsArrInstance[197837] "const" forwarding ( )
  type ArrayViewReindexArr[384278](?)
  function chpl_reindexConvertIdxDim[199444](arg i[199442]:_any[178](?), arg updom[199446]:_any[178](?), arg downdom[199448]:_any[178](?), arg dim[199451] :
  int(64)[13]) : _unknown[51] "inline"
  {
    (199479 return(199478 call(199461 call .(199460 call(199455 call . downdom[199448] c"dsiDim") dim[199451]) c"orderToIndex")(199476 call(199471 call .(199470 call(199465 call . updom[199446] c"dsiDim") dim[199451]) c"indexOrder") i[199442])))
  }
  function chpl_reindexConvertIdx[199490](arg i[199487] :
  integral[199](?), arg updom[199492]:_any[178](?), arg downdom[199494]:_any[178](?)) : _unknown[51] "inline"
  {
    (199512 call compilerAssert(199502 call ==(199498 call . downdom[199494] c"rank") 1)(199510 call _cast string[26](199506 call . downdom[199494] c"rank")))
    (199522 return(199521 call chpl_reindexConvertIdxDim i[199487] updom[199492] downdom[199494] 0))
  }
  function chpl_reindexConvertIdx[199530](arg i[199528]:_any[178](?), arg updom[199532]:_any[178](?), arg downdom[199534]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ind[199546](199544 call *(199537 call . downdom[199534] c"rank")(199541 call . downdom[199534] c"idxType"))
    (199549 'end of statement')
    {
      unknown d[199579] 0
      unknown tmp[199580] "maybe param" "temp"
      (199592 'move' tmp[199580](199590 call chpl_compute_low_param_loop_bound 0(199557 call -(199553 call . downdom[199534] c"rank") 1)))
      unknown tmp[199581] "maybe param" "temp"
      (199605 'move' tmp[199581](199603 call chpl_compute_high_param_loop_bound 0(199597 call -(199599 call . downdom[199534] c"rank") 1)))
      unknown tmp[199582] "maybe param" "temp"
      (199608 'move' tmp[199582] 1)
      ParamForLoop[199610]
      { d[199579] tmp[199580] tmp[199581] tmp[199582]
        {
          (199575 call =(199564 call ind[199546] d[199579])(199574 call chpl_reindexConvertIdxDim(199569 call i[199528] d[199579]) updom[199532] downdom[199534] d[199579]))
        }
      }
      label _unused_continueLabel[199584]
      label _breakLabel[199583]
    }
    (199620 return ind[199546])
  }
  function chpl_reindexConvertDom[199628](arg dims[199626]:_any[178](?), arg updom[199630]:_any[178](?), arg downdom[199632]:_any[178](?)) : _unknown[51] "inline"
  {
    if(199687 call _cond_test(199642 call !=(199635 call . updom[199630] c"rank")(199639 call . dims[199626] c"size")))
    {
      (199684 call compilerError(199681 call +(199672 call +(199669 call + "Called chpl_reindexConvertDom with incorrect rank. Got "(199667 call _cast string[26](199663 call . dims[199626] c"size"))) ", expecting ")(199679 call _cast string[26](199675 call . updom[199630] c"rank"))))
    }
    unknown ranges[199699](199698 'typeof'(199697 call(199693 call . downdom[199632] c"dsiDims")))
    (199702 'end of statement')
    unknown actualLow[199703](199714 call *(199707 call . downdom[199632] c"rank")(199711 call . downdom[199632] c"idxType"))
    unknown actualHigh[199716](199720 'typeof' actualLow[199703])
    (199721 'end of statement')
    {
      unknown d[199823] 0
      unknown tmp[199824] "maybe param" "temp"
      (199836 'move' tmp[199824](199834 call chpl_compute_low_param_loop_bound 0(199728 call -(199724 call . dims[199626] c"size") 1)))
      unknown tmp[199825] "maybe param" "temp"
      (199849 'move' tmp[199825](199847 call chpl_compute_high_param_loop_bound 0(199841 call -(199843 call . dims[199626] c"size") 1)))
      unknown tmp[199826] "maybe param" "temp"
      (199852 'move' tmp[199826] 1)
      ParamForLoop[199854]
      { d[199823] tmp[199824] tmp[199825] tmp[199826]
        {
          if(199818 call _cond_test(199740 call ==(199736 call .(199735 call dims[199626] d[199823]) c"size") 0))
          {
            (199756 call =(199745 call actualLow[199703] d[199823])(199753 call .(199752 call(199747 call . downdom[199632] c"dsiDim") d[199823]) c"low"))
            (199774 call =(199763 call actualHigh[199716] d[199823])(199771 call .(199770 call(199765 call . downdom[199632] c"dsiDim") d[199823]) c"high"))
          }
          {
            (199794 call =(199780 call actualLow[199703] d[199823])(199793 call chpl_reindexConvertIdxDim(199786 call .(199785 call dims[199626] d[199823]) c"first") updom[199630] downdom[199632] d[199823]))
            (199815 call =(199801 call actualHigh[199716] d[199823])(199814 call chpl_reindexConvertIdxDim(199807 call .(199806 call dims[199626] d[199823]) c"last") updom[199630] downdom[199632] d[199823]))
          }
        }
      }
      label _unused_continueLabel[199828]
      label _breakLabel[199827]
    }
    {
      unknown d[199900] 0
      unknown tmp[199901] "maybe param" "temp"
      (199913 'move' tmp[199901](199911 call chpl_compute_low_param_loop_bound 0(199869 call -(199865 call . updom[199630] c"rank") 1)))
      unknown tmp[199902] "maybe param" "temp"
      (199926 'move' tmp[199902](199924 call chpl_compute_high_param_loop_bound 0(199918 call -(199920 call . updom[199630] c"rank") 1)))
      unknown tmp[199903] "maybe param" "temp"
      (199929 'move' tmp[199903] 1)
      ParamForLoop[199931]
      { d[199900] tmp[199901] tmp[199902] tmp[199903]
        {
          (199896 call =(199876 call ranges[199699] d[199900])(199895 call(199883 call(199878 call . downdom[199632] c"dsiDim") d[199900])(199892 call chpl_build_bounded_range(199887 call actualLow[199703] d[199900])(199891 call actualHigh[199716] d[199900]))))
        }
      }
      label _unused_continueLabel[199905]
      label _breakLabel[199904]
    }
    (199945 return(199943 call chpl__buildDomainExpr(199941 'expand_tuple' ranges[199699])))
  }
  function chpl_reindexConvertDomMaybeSlice[199953](arg dims[199951]:_any[178](?), arg updom[199955]:_any[178](?), arg downdom[199957]:_any[178](?)) : _unknown[51] "inline"
  {
    if(200014 call _cond_test(199967 call !=(199960 call . updom[199955] c"rank")(199964 call . dims[199951] c"size")))
    {
      (200011 call compilerError(200008 call +(199999 call +(199996 call + "Called chpl_reindexConvertDomMaybeSlice with incorrect rank. Got "(199994 call _cast string[26](199990 call . dims[199951] c"size"))) ", expecting ")(200006 call _cast string[26](200002 call . updom[199955] c"rank"))))
    }
    unknown ranges[200046](200044 call *(200020 call . downdom[199957] c"rank")(200043 call range[64316](?)(200025 call . downdom[199957] c"idxType")(stridable =(200040 call ||(200030 call . downdom[199957] c"stridable")(200037 call .(200036 call dims[199951] 0) c"stridable")))))
    (200049 'end of statement')
    unknown actualLow[200050](200061 call *(200054 call . downdom[199957] c"rank")(200058 call . downdom[199957] c"idxType"))
    unknown actualHigh[200063](200067 'typeof' actualLow[200050])
    (200068 'end of statement')
    {
      unknown d[200170] 0
      unknown tmp[200171] "maybe param" "temp"
      (200183 'move' tmp[200171](200181 call chpl_compute_low_param_loop_bound 0(200075 call -(200071 call . dims[199951] c"size") 1)))
      unknown tmp[200172] "maybe param" "temp"
      (200196 'move' tmp[200172](200194 call chpl_compute_high_param_loop_bound 0(200188 call -(200190 call . dims[199951] c"size") 1)))
      unknown tmp[200173] "maybe param" "temp"
      (200199 'move' tmp[200173] 1)
      ParamForLoop[200201]
      { d[200170] tmp[200171] tmp[200172] tmp[200173]
        {
          if(200165 call _cond_test(200087 call ==(200083 call .(200082 call dims[199951] d[200170]) c"size") 0))
          {
            (200103 call =(200092 call actualLow[200050] d[200170])(200100 call .(200099 call(200094 call . downdom[199957] c"dsiDim") d[200170]) c"low"))
            (200121 call =(200110 call actualHigh[200063] d[200170])(200118 call .(200117 call(200112 call . downdom[199957] c"dsiDim") d[200170]) c"high"))
          }
          {
            (200141 call =(200127 call actualLow[200050] d[200170])(200140 call chpl_reindexConvertIdxDim(200133 call .(200132 call dims[199951] d[200170]) c"first") updom[199955] downdom[199957] d[200170]))
            (200162 call =(200148 call actualHigh[200063] d[200170])(200161 call chpl_reindexConvertIdxDim(200154 call .(200153 call dims[199951] d[200170]) c"last") updom[199955] downdom[199957] d[200170]))
          }
        }
      }
      label _unused_continueLabel[200175]
      label _breakLabel[200174]
    }
    {
      unknown d[200340] 0
      unknown tmp[200341] "maybe param" "temp"
      (200353 'move' tmp[200341](200351 call chpl_compute_low_param_loop_bound 0(200216 call -(200212 call . updom[199955] c"rank") 1)))
      unknown tmp[200342] "maybe param" "temp"
      (200366 'move' tmp[200342](200364 call chpl_compute_high_param_loop_bound 0(200358 call -(200360 call . updom[199955] c"rank") 1)))
      unknown tmp[200343] "maybe param" "temp"
      (200369 'move' tmp[200343] 1)
      ParamForLoop[200371]
      { d[200340] tmp[200341] tmp[200342] tmp[200343]
        {
          if(200335 call _cond_test(200237 call ||(200227 call .(200226 call(200221 call . downdom[199957] c"dsiDim") d[200340]) c"stridable")(200234 call .(200233 call dims[199951] d[200340]) c"stridable")))
          {
            const relStride[200274] "const"(200273 call max 1(200271 call *(200259 call /(200246 call .(200245 call dims[199951] d[200340]) c"stride")(200256 call .(200255 call(200250 call . updom[199955] c"dsiDim") d[200340]) c"stride"))(200268 call .(200267 call(200262 call . downdom[199957] c"dsiDim") d[200340]) c"stride")))
            (200277 'end of statement')
            (200305 call =(200282 call ranges[200046] d[200340])(200304 call(200289 call(200284 call . downdom[199957] c"dsiDim") d[200340])(200301 call chpl_by(200298 call chpl_build_bounded_range(200293 call actualLow[200050] d[200340])(200297 call actualHigh[200063] d[200340])) relStride[200274])))
          }
          {
            (200331 call =(200311 call ranges[200046] d[200340])(200330 call(200318 call(200313 call . downdom[199957] c"dsiDim") d[200340])(200327 call chpl_build_bounded_range(200322 call actualLow[200050] d[200340])(200326 call actualHigh[200063] d[200340]))))
          }
        }
      }
      label _unused_continueLabel[200345]
      label _breakLabel[200344]
    }
    (200385 return(200383 call chpl__buildDomainExpr(200381 'expand_tuple' ranges[200046])))
  }
  (355249 'used modules list'(196030 'use' ChapelStandard[20264]))
}