AST dump for ChapelRange after pass loopInvariantCodeMotion.
Module use list: ChapelBase SysBasic HaltWrappers DSIUtil ChapelStandard SysCTypes 

{
  function chpl__init_ChapelRange[415862]() : void[4] "insert line file info" "module init" "resolved"
  {
    (512030 return _void[55])
  }
  type BoundedRangeType[64213] def bounded[64205]:BoundedRangeType[64213] def boundedLow[64207]:BoundedRangeType[64213] def boundedHigh[64209]:BoundedRangeType[64213] def boundedNone[64211]:BoundedRangeType[64213]
  type range(byteIndex,bounded,false)[1025703] val _low[1025665]:int(64)[13] val _high[1025670]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143314] val _low[1143276]:int(64)[13] val _high[1143281]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184830] val _low[1184792]:int(64)[13] val _high[1184797]:int(64)[13]
  type range(int(64),bounded,false)[1026725] val _low[1026687]:int(64)[13] val _high[1026692]:int(64)[13]
  type range(int(64),boundedLow,false)[1087476] val _low[1087438]:int(64)[13] val _high[1087443]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187340] val _low[1187302]:int(64)[13] val _high[1187307]:int(64)[13]
  function range(int(64),bounded,false)[1026725].init[1025948](ref arg this[1025954]:range(int(64),bounded,false)[1026725], const in arg _low[1025975]:int(64)[13], const in arg _high[1025984]:int(64)[13], const in arg _stride[1025992]:int(64)[13], const in arg _alignment[1026001]:int(64)[13], const in arg _aligned[1026005]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026246 '.=' this[1025954] _low[1026687] _low[1025975])
    (1026278 '.=' this[1025954] _high[1026692] _high[1025984])
    const-val call_tmp[2064097]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064099 'move' call_tmp[2064097](2064101 '==' _stride[1025992] 1))
    (1026561 call assert[210257] call_tmp[2064097])
    (1026564 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].init[1028619](ref arg this[1028625]:range(byteIndex,bounded,false)[1025703], const  ref arg _low[1028646]:byteIndex[28170], const  ref arg _high[1028655]:byteIndex[28170], const in arg _stride[1028663]:int(64)[13], const  ref arg _alignment[1028672]:byteIndex[28170], const in arg _aligned[1028676]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2206701]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206703 'move' ret[2206701](2206705 '.v' _low[1028646] _bindex[28091]))
    (1028754 '.=' this[1028625] _low[1025665] ret[2206701])
    val ret[2206711]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206713 'move' ret[2206711](2206715 '.v' _high[1028655] _bindex[28091]))
    (1028786 '.=' this[1028625] _high[1025670] ret[2206711])
    const-val call_tmp[2064112]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064114 'move' call_tmp[2064112](2064116 '==' _stride[1028663] 1))
    (1029069 call assert[210257] call_tmp[2064112])
    (1029072 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].init[1045817](ref arg this[1045823]:range(byteIndex,bounded,false)[1025703], const  ref arg _low[1045844]:byteIndex[28170], const  ref arg _high[1045853]:byteIndex[28170], const in arg _stride[1045861]:int(64)[13], const  ref arg _alignment[1045870]:byteIndex[28170], const in arg _aligned[1045874]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2206737]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206739 'move' ret[2206737](2206741 '.v' _low[1045844] _bindex[28091]))
    (1046504 '.=' this[1045823] _low[1025665] ret[2206737])
    val ret[2206747]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206749 'move' ret[2206747](2206751 '.v' _high[1045853] _bindex[28091]))
    (1046536 '.=' this[1045823] _high[1025670] ret[2206747])
    const-val call_tmp[2064197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064199 'move' call_tmp[2064197](2064201 '==' _stride[1045861] 1))
    (1046819 call assert[210257] call_tmp[2064197])
    (1046822 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init[1085817](ref arg this[1085823]:range(int(64),bounded,false)[1026725], const in arg _low[1085844]:int(64)[13], const in arg _high[1085853]:int(64)[13], const in arg _stride[1085861]:int(64)[13], const in arg _alignment[1085870]:int(64)[13], const in arg _aligned[1085874]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1086007 '.=' this[1085823] _low[1026687] _low[1085844])
    (1086039 '.=' this[1085823] _high[1026692] _high[1085853])
    const-val call_tmp[2064212]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064214 'move' call_tmp[2064212](2064216 '==' _stride[1085861] 1))
    (1086322 call assert[210257] call_tmp[2064212])
    (1086325 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].init[1086923](ref arg this[1086929]:range(int(64),boundedLow,false)[1087476], const in arg _low[1086950]:int(64)[13], const in arg _high[1086959]:int(64)[13], const in arg _stride[1086967]:int(64)[13], const in arg _alignment[1086976]:int(64)[13], const in arg _aligned[1086980]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087049 '.=' this[1086929] _low[1087438] _low[1086950])
    (1087081 '.=' this[1086929] _high[1087443] _high[1086959])
    const-val call_tmp[2064227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064229 'move' call_tmp[2064227](2064231 '==' _stride[1086967] 1))
    (1087364 call assert[210257] call_tmp[2064227])
    (1087367 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].init[1130164](ref arg this[1130170]:range(int(64),boundedLow,false)[1087476], const in arg _low[1130191]:int(64)[13], const in arg _high[1130200]:int(64)[13], const in arg _stride[1130208]:int(64)[13], const in arg _alignment[1130217]:int(64)[13], const in arg _aligned[1130221]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1130354 '.=' this[1130170] _low[1087438] _low[1130191])
    (1130386 '.=' this[1130170] _high[1087443] _high[1130200])
    const-val call_tmp[2064302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064304 'move' call_tmp[2064302](2064306 '==' _stride[1130208] 1))
    (1130669 call assert[210257] call_tmp[2064302])
    (1130672 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].init[1142761](ref arg this[1142767]:range(byteIndex,boundedLow,false)[1143314], const  ref arg _low[1142788]:byteIndex[28170], const  ref arg _high[1142797]:byteIndex[28170], const in arg _stride[1142805]:int(64)[13], const  ref arg _alignment[1142814]:byteIndex[28170], const in arg _aligned[1142818]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2206757]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206759 'move' ret[2206757](2206761 '.v' _low[1142788] _bindex[28091]))
    (1142887 '.=' this[1142767] _low[1143276] ret[2206757])
    val ret[2206767]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206769 'move' ret[2206767](2206771 '.v' _high[1142797] _bindex[28091]))
    (1142919 '.=' this[1142767] _high[1143281] ret[2206767])
    const-val call_tmp[2064357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064359 'move' call_tmp[2064357](2064361 '==' _stride[1142805] 1))
    (1143202 call assert[210257] call_tmp[2064357])
    (1143205 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].init[1148628](ref arg this[1148634]:range(byteIndex,boundedLow,false)[1143314], const  ref arg _low[1148655]:byteIndex[28170], const  ref arg _high[1148664]:byteIndex[28170], const in arg _stride[1148672]:int(64)[13], const  ref arg _alignment[1148681]:byteIndex[28170], const in arg _aligned[1148685]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2206793]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206795 'move' ret[2206793](2206797 '.v' _low[1148655] _bindex[28091]))
    (1148818 '.=' this[1148634] _low[1143276] ret[2206793])
    val ret[2206803]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206805 'move' ret[2206803](2206807 '.v' _high[1148664] _bindex[28091]))
    (1148850 '.=' this[1148634] _high[1143281] ret[2206803])
    const-val call_tmp[2064372]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064374 'move' call_tmp[2064372](2064376 '==' _stride[1148672] 1))
    (1149133 call assert[210257] call_tmp[2064372])
    (1149136 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].init[1184277](ref arg this[1184283]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg _low[1184304]:byteIndex[28170], const  ref arg _high[1184313]:byteIndex[28170], const in arg _stride[1184321]:int(64)[13], const  ref arg _alignment[1184330]:byteIndex[28170], const in arg _aligned[1184334]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[2206829]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206831 'move' ret[2206829](2206833 '.v' _low[1184304] _bindex[28091]))
    (1184403 '.=' this[1184283] _low[1184792] ret[2206829])
    val ret[2206839]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206841 'move' ret[2206839](2206843 '.v' _high[1184313] _bindex[28091]))
    (1184435 '.=' this[1184283] _high[1184797] ret[2206839])
    const-val call_tmp[2064432]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064434 'move' call_tmp[2064432](2064436 '==' _stride[1184321] 1))
    (1184718 call assert[210257] call_tmp[2064432])
    (1184721 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].init[1188624](ref arg this[1188630]:range(int(64),boundedHigh,false)[1187340], const in arg _low[1188651]:int(64)[13], const in arg _high[1188660]:int(64)[13], const in arg _stride[1188668]:int(64)[13], const in arg _alignment[1188677]:int(64)[13], const in arg _aligned[1188681]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188750 '.=' this[1188630] _low[1187302] _low[1188651])
    (1188782 '.=' this[1188630] _high[1187307] _high[1188660])
    const-val call_tmp[2064447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064449 'move' call_tmp[2064447](2064451 '==' _stride[1188668] 1))
    (1189065 call assert[210257] call_tmp[2064447])
    (1189068 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].init[1192835](ref arg this[1192841]:range(byteIndex,boundedHigh,false)[1184830], const  ref arg _low[1192862]:byteIndex[28170], const  ref arg _high[1192871]:byteIndex[28170], const in arg _stride[1192879]:int(64)[13], const  ref arg _alignment[1192888]:byteIndex[28170], const in arg _aligned[1192892]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val ret[2206865]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206867 'move' ret[2206865](2206869 '.v' _low[1192862] _bindex[28091]))
    (1193025 '.=' this[1192841] _low[1184792] ret[2206865])
    val ret[2206875]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206877 'move' ret[2206875](2206879 '.v' _high[1192871] _bindex[28091]))
    (1193057 '.=' this[1192841] _high[1184797] ret[2206875])
    const-val call_tmp[2064477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064479 'move' call_tmp[2064477](2064481 '==' _stride[1192879] 1))
    (1193340 call assert[210257] call_tmp[2064477])
    (1193343 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init[1091175](ref arg this[1091181]:range(int(64),bounded,false)[1026725], const in arg _low[1091202]:int(64)[13], const in arg _high[1091211]:int(64)[13], const in arg _stride[1091213]:int(64)[13], const in arg _aligned[1091217]:bool[10]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091847 '.=' this[1091181] _low[1026687] _low[1091202])
    (1091879 '.=' this[1091181] _high[1026692] _high[1091211])
    (1092045 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init[1094386](ref arg this[1094392]:range(int(64),bounded,false)[1026725], const in arg _low[1094413]:int(64)[13], const in arg _high[1094422]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1094986 '.=' this[1094392] _low[1026687] _low[1094413])
    (1095018 '.=' this[1094392] _high[1026692] _high[1094422])
    (1095184 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].init=[1044446](ref arg this[1044452]:range(byteIndex,bounded,false)[1025703], const in arg other[1044454]:range(byteIndex,bounded,false)[1025703]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1045013]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045311]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045315 'move' coerce_tmp[1045311](2325842 '.v' other[1044454] _low[1025665]))
    const-val ret[2069832]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2069834]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2069837 call init[28097] cpi[2069834])
    (2069839 '.=' cpi[2069834] _bindex[28091] coerce_tmp[1045311])
    (2069843 'move' ret[2069832] cpi[2069834])
    (1775016 'move' call_tmp[1045013] ret[2069832])
    const-val call_tmp[1045029]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1045319]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1045323 'move' coerce_tmp[1045319](2325850 '.v' other[1044454] _high[1025670]))
    const-val ret[2069858]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2069860]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2069863 call init[28097] cpi[2069860])
    (2069865 '.=' cpi[2069860] _bindex[28091] coerce_tmp[1045319])
    (2069869 'move' ret[2069858] cpi[2069860])
    (1775022 'move' call_tmp[1045029] ret[2069858])
    const-val call_tmp[1045037]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789771]:byteIndex[28170] "temp"
    (1045042 call alignment[1045346] other[1044454] ret_tmp[1789771])
    (1789774 'move' call_tmp[1045037] ret_tmp[1789771])
    val ret[2206727]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206729 'move' ret[2206727](2206731 '.v' call_tmp[1045037] _bindex[28091]))
    const-val call_tmp[1045052]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2069884]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2069886]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2069889 call init[28097] cpi[2069886])
    (2069891 '.=' cpi[2069886] _bindex[28091] ret[2206727])
    (2069895 'move' ret[2069884] cpi[2069886])
    (1775028 'move' call_tmp[1045052] ret[2069884])
    (1045072 call init[1045817] this[1044452] call_tmp[1045013] call_tmp[1045029] 1 call_tmp[1045052] 1)
    (1045087 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].init=[1084942](ref arg this[1084948]:range(int(64),bounded,false)[1026725], const in arg other[1084950]:range(int(64),bounded,false)[1026725]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1085797]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1085801 'move' coerce_tmp[1085797](2326170 '.v' other[1084950] _low[1026687]))
    const-val coerce_tmp[1085805]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1085809 'move' coerce_tmp[1085805](2326177 '.v' other[1084950] _high[1026692]))
    const-val call_tmp[1085533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1085535 'move' call_tmp[1085533](1085538 call alignment[1034162] other[1084950]))
    (1085568 call init[1085817] this[1084948] coerce_tmp[1085797] coerce_tmp[1085805] 1 call_tmp[1085533] 1)
    (1085583 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].init=[1129088](ref arg this[1129094]:range(int(64),boundedLow,false)[1087476], const in arg other[1129096]:range(int(64),boundedLow,false)[1087476]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val coerce_tmp[1130144]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130148 'move' coerce_tmp[1130144](2326939 '.v' other[1129096] _low[1087438]))
    const-val coerce_tmp[1130152]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1130156 'move' coerce_tmp[1130152](2326946 '.v' other[1129096] _high[1087443]))
    const-val call_tmp[1129679]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1129681 'move' call_tmp[1129679](1129684 call alignment[1128031] other[1129096]))
    (1129714 call init[1130164] this[1129094] coerce_tmp[1130144] coerce_tmp[1130152] 1 call_tmp[1129679] 1)
    (1129729 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].init=[1147259](ref arg this[1147265]:range(byteIndex,boundedLow,false)[1143314], const in arg other[1147267]:range(byteIndex,boundedLow,false)[1143314]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1147826]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148114]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148118 'move' coerce_tmp[1148114](2327074 '.v' other[1147267] _low[1143276]))
    const-val ret[2069998]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070000]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070003 call init[28097] cpi[2070000])
    (2070005 '.=' cpi[2070000] _bindex[28091] coerce_tmp[1148114])
    (2070009 'move' ret[2069998] cpi[2070000])
    (1775052 'move' call_tmp[1147826] ret[2069998])
    const-val call_tmp[1147842]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1148122]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1148126 'move' coerce_tmp[1148122](2327082 '.v' other[1147267] _high[1143281]))
    const-val ret[2070024]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070026]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070029 call init[28097] cpi[2070026])
    (2070031 '.=' cpi[2070026] _bindex[28091] coerce_tmp[1148122])
    (2070035 'move' ret[2070024] cpi[2070026])
    (1775058 'move' call_tmp[1147842] ret[2070024])
    const-val call_tmp[1147850]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791390]:byteIndex[28170] "temp"
    (1147855 call alignment[1148149] other[1147267] ret_tmp[1791390])
    (1791393 'move' call_tmp[1147850] ret_tmp[1791390])
    val ret[2206783]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206785 'move' ret[2206783](2206787 '.v' call_tmp[1147850] _bindex[28091]))
    const-val call_tmp[1147865]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2070050]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070052]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070055 call init[28097] cpi[2070052])
    (2070057 '.=' cpi[2070052] _bindex[28091] ret[2206783])
    (2070061 'move' ret[2070050] cpi[2070052])
    (1775064 'move' call_tmp[1147865] ret[2070050])
    (1147885 call init[1148628] this[1147265] call_tmp[1147826] call_tmp[1147842] 1 call_tmp[1147865] 1)
    (1147900 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].init=[1191464](ref arg this[1191470]:range(byteIndex,boundedHigh,false)[1184830], const in arg other[1191472]:range(byteIndex,boundedHigh,false)[1184830]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1192031]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192319]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192323 'move' coerce_tmp[1192319](2327415 '.v' other[1191472] _low[1184792]))
    const-val ret[2070164]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070166]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070169 call init[28097] cpi[2070166])
    (2070171 '.=' cpi[2070166] _bindex[28091] coerce_tmp[1192319])
    (2070175 'move' ret[2070164] cpi[2070166])
    (1775088 'move' call_tmp[1192031] ret[2070164])
    const-val call_tmp[1192047]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1192327]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1192331 'move' coerce_tmp[1192327](2327423 '.v' other[1191472] _high[1184797]))
    const-val ret[2070190]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070192]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070195 call init[28097] cpi[2070192])
    (2070197 '.=' cpi[2070192] _bindex[28091] coerce_tmp[1192327])
    (2070201 'move' ret[2070190] cpi[2070192])
    (1775094 'move' call_tmp[1192047] ret[2070190])
    const-val call_tmp[1192055]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791712]:byteIndex[28170] "temp"
    (1192060 call alignment[1192572] other[1191472] ret_tmp[1791712])
    (1791715 'move' call_tmp[1192055] ret_tmp[1791712])
    val ret[2206855]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206857 'move' ret[2206855](2206859 '.v' call_tmp[1192055] _bindex[28091]))
    const-val call_tmp[1192070]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret[2070216]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2070218]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2070221 call init[28097] cpi[2070218])
    (2070223 '.=' cpi[2070218] _bindex[28091] ret[2206855])
    (2070227 'move' ret[2070216] cpi[2070218])
    (1775100 'move' call_tmp[1192070] ret[2070216])
    (1192090 call init[1192835] this[1191470] call_tmp[1192031] call_tmp[1192047] 1 call_tmp[1192070] 0)
    (1192105 return _void[55])
  }
  function chpl_build_bounded_range[455048](const in arg low[455055]:int(64)[13], const in arg high[455061]:int(64)[13], ref arg _retArg[1788667]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616717]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1025936]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
    (1025939 call init[1025948] initTemp[1025936] low[455055] high[455061] 1 0 0)
    (616720 'move' call_tmp[616717] initTemp[1025936])
    (1788669 '=' _retArg[1788667] call_tmp[616717])
    (1788671 return _void[55])
  }
  function chpl_build_low_bounded_range[1086869](const in arg low[1086871]:int(64)[13], ref arg _retArg[1790449]:range(int(64),boundedLow,false)[1087476]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1086894]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1086912]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "delay instantiation" "temp"
    (1086915 call init[1086923] initTemp[1086912] low[1086871] 0 1 0 0)
    (1086896 'move' call_tmp[1086894] initTemp[1086912])
    (1790451 '=' _retArg[1790449] call_tmp[1086894])
    (1790453 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].alignment[1034162](const in arg this[1034168]:range(int(64),bounded,false)[1026725]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2206391]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2206393 'move' coerce_tmp[2206391](2206395 '.v' this[1034168] _low[1026687]))
    (1034290 return coerce_tmp[2206391])
  }
  function range(byteIndex,bounded,false)[1025703].alignment[1045346](const in arg this[1045352]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789777]:byteIndex[28170]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2207115]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2207117 'move' coerce_tmp[2207115](2207119 '.v' this[1045352] _low[1025665]))
    const-val ret[2207122]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207124]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207127 call init[28097] cpi[2207124])
    (2207129 '.=' cpi[2207124] _bindex[28091] coerce_tmp[2207115])
    (2207133 'move' ret[2207122] cpi[2207124])
    (1789779 '=' _retArg[1789777] ret[2207122])
    (1789781 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].alignment[1128031](const in arg this[1128037]:range(int(64),boundedLow,false)[1087476]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2215411]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2215413 'move' coerce_tmp[2215411](2215415 '.v' this[1128037] _low[1087438]))
    (1128159 return coerce_tmp[2215411])
  }
  function range(byteIndex,boundedLow,false)[1143314].alignment[1148149](const in arg this[1148155]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791402]:byteIndex[28170]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2216097]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216099 'move' coerce_tmp[2216097](2216101 '.v' this[1148155] _low[1143276]))
    const-val ret[2216104]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216106]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216109 call init[28097] cpi[2216106])
    (2216111 '.=' cpi[2216106] _bindex[28091] coerce_tmp[2216097])
    (2216115 'move' ret[2216104] cpi[2216106])
    (1791404 '=' _retArg[1791402] ret[2216104])
    (1791406 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].alignment[1190505](const in arg this[1190511]:range(int(64),boundedHigh,false)[1187340]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190535 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184830].alignment[1192572](const in arg this[1192578]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791724]:byteIndex[28170]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2219152]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219154]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219157 call init[28097] cpi[2219154])
    (2219159 '.=' cpi[2219154] _bindex[28091] 0)
    (2219163 'move' ret[2219152] cpi[2219154])
    (1791726 '=' _retArg[1791724] ret[2219152])
    (1791728 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].size[1035700](const in arg this[1035706]:range(int(64),bounded,false)[1026725]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2334928]:string[26] "temp"
    (2334929 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035713]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2207687]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207689 'move' ret[2207687](2207691 '.v' this[1035706] _high[1026692]))
    val ret[2207719]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207721 'move' ret[2207719](2207723 '.v' this[1035706] _low[1026687]))
    const-val call_tmp[2070624]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070626 'move' call_tmp[2070624](2070628 '>' ret[2207719] ret[2207687]))
    if call_tmp[2070624]
    {
      (1035818 'move' ret[1035713] 0)
      gotoReturn _end_size[1035922] _end_size[1035922]
    }
    const-val call_tmp[2073588]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2073590 'move' call_tmp[2073588](2073592 '-' ret[2207687] ret[2207719]))
    const-val call_tmp[2158608]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158610 'move' call_tmp[2158608](2158612 '==' 1 0))
    if call_tmp[2158608]
    {
      (2158618 call halt[154067] "Attempt to divide by zero")
    }
    const-val call_tmp[2158621]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158623 'move' call_tmp[2158621](2158625 '/' call_tmp[2073588] 1))
    const-val call_tmp[2066822]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2066824 'move' call_tmp[2066822](2066826 '+' call_tmp[2158621] 1))
    (1036878 'move' ret[1035713] call_tmp[2066822])
    label _end_size[1035922]
    (1035924 return ret[1035713])
  }
  function ==[1041823](const in arg r1[1041825]:range(int(64),bounded,false)[1026725], const in arg r2[1041827]:range(int(64),bounded,false)[1026725]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1041852]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1041961]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1041963 'move' call_tmp[1041961](1041966 call size[1035700] r1[1041825]))
    const-val call_tmp[1041974]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1041976 'move' call_tmp[1041974](1041979 call size[1035700] r2[1041827]))
    const-val call_tmp[2061513]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061515 'move' call_tmp[2061513](2061517 '!=' call_tmp[1041961] call_tmp[1041974]))
    if call_tmp[2061513]
    {
      (1042005 'move' ret[1041852] 0)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    const-val call_tmp[2064167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064169 'move' call_tmp[2064167](2064171 '==' call_tmp[1041961] 0))
    if call_tmp[2064167]
    {
      (1042030 'move' ret[1041852] 1)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    val ret[2207862]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207864 'move' ret[2207862](2207866 '.v' r1[1041825] _low[1026687]))
    val ret[2207872]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207874 'move' ret[2207872](2207876 '.v' r2[1041827] _low[1026687]))
    const-val call_tmp[2061523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2061525 'move' call_tmp[2061523](2061527 '!=' ret[2207862] ret[2207872]))
    if call_tmp[2061523]
    {
      (1042071 'move' ret[1041852] 0)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    const-val call_tmp[2064182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064184 'move' call_tmp[2064182](2064186 '==' call_tmp[1041961] 1))
    if call_tmp[2064182]
    {
      (1042096 'move' ret[1041852] 1)
      gotoReturn _end_==[1042322] _end_==[1042322]
    }
    (1042145 'move' ret[1041852] 1)
    label _end_==[1042322]
    (1042324 return ret[1041852])
  }
  function !=[1730388](const in arg r1[1730390]:range(int(64),bounded,false)[1026725], const in arg r2[1730392]:range(int(64),bounded,false)[1026725]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1730404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1730406 'move' call_tmp[1730404](1730409 call ==[1041823] r1[1730390] r2[1730392]))
    const-val call_tmp[2060910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060912 'move' call_tmp[2060910](2060914 '!' call_tmp[1730404]))
    (1730423 return call_tmp[2060910])
  }
  function range(int(64),bounded,false)[1026725].safeCast[1296928](const in arg this[1296934]:range(int(64),bounded,false)[1026725], ref arg _retArg[1793844]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1296938]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    val tmp[1296963]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1297337 call init[1025948] tmp[1296963] 1 0 1 0 0)
    const-val coerce_tmp[1297315]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297319 'move' coerce_tmp[1297315](2328500 '.v' this[1296934] _low[1026687]))
    (2328493 '.=' tmp[1296963] _low[1026687] coerce_tmp[1297315])
    const-val coerce_tmp[1297327]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1297331 'move' coerce_tmp[1297327](2328514 '.v' this[1296934] _high[1026692]))
    (2328507 '.=' tmp[1296963] _high[1026692] coerce_tmp[1297327])
    (1297269 'move' ret[1296938] tmp[1296963])
    label _end_safeCast[1297277]
    (1793846 '=' _retArg[1793844] ret[1296938])
    (1793848 return _void[55])
  }
  function _cast[1027473](const in arg r[1027477]:range(int(64),bounded,false)[1026725], ref arg _retArg[1789455]:range(byteIndex,bounded,false)[1025703]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027479]:range(byteIndex,bounded,false)[1025703] "dead after last mention" "RVV" "temp"
    val tmp[1027489]:range(byteIndex,bounded,false)[1025703] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029662]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206908]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206910]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206913 call init[28097] cpi[2206910])
    (2206915 '.=' cpi[2206910] _bindex[28091] 1)
    (2206919 'move' ret[2206908] cpi[2206910])
    (1789464 'move' default_arg__low[1029662] ret[2206908])
    const-val default_arg__high[1029714]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206935]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206937]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206940 call init[28097] cpi[2206937])
    (2206942 '.=' cpi[2206937] _bindex[28091] 0)
    (2206946 'move' ret[2206935] cpi[2206937])
    (1789476 'move' default_arg__high[1029714] ret[2206935])
    const-val default_arg__alignment[1029787]:byteIndex[28170] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2206968]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2206970]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2206973 call init[28097] cpi[2206970])
    (2206975 '.=' cpi[2206970] _bindex[28091] 0)
    (2206979 'move' ret[2206968] cpi[2206970])
    (1789488 'move' default_arg__alignment[1029787] ret[2206968])
    (1028610 call init[1028619] tmp[1027489] default_arg__low[1029662] default_arg__high[1029714] 1 default_arg__alignment[1029787] 0)
    const-val coerce_tmp[2206371]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2206373 'move' coerce_tmp[2206371](2206375 '.v' r[1027477] _low[1026687]))
    (2325663 '.=' tmp[1027489] _low[1025665] coerce_tmp[2206371])
    const-val coerce_tmp[2206601]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2206603 'move' coerce_tmp[2206601](2206605 '.v' r[1027477] _high[1026692]))
    (2325670 '.=' tmp[1027489] _high[1025670] coerce_tmp[2206601])
    (1027748 'move' ret[1027479] tmp[1027489])
    label _end__cast[1027756]
    (1789457 '=' _retArg[1789455] ret[1027479])
    (1789459 return _void[55])
  }
  function _cast[1032394](const in arg r[1032398]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789563]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032400]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    val tmp[1032410]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1032954 call init[1025948] tmp[1032410] 1 0 1 0 0)
    const-val call_tmp[1032607]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207082]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2207084 'move' coerce_tmp[2207082](2207086 '.v' r[1032398] _low[1025665]))
    const-val ret[2207089]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207091]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207094 call init[28097] cpi[2207091])
    (2207096 '.=' cpi[2207091] _bindex[28091] coerce_tmp[2207082])
    (2207100 'move' ret[2207089] cpi[2207091])
    (1789572 'move' call_tmp[1032607] ret[2207089])
    val ret[2070259]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070261 'move' ret[2070259](2070263 '.v' call_tmp[1032607] _bindex[28091]))
    (2325748 '.=' tmp[1032410] _low[1026687] ret[2070259])
    const-val call_tmp[1032646]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207190]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2207192 'move' coerce_tmp[2207190](2207194 '.v' r[1032398] _high[1025670]))
    const-val ret[2207197]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207199]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207202 call init[28097] cpi[2207199])
    (2207204 '.=' cpi[2207199] _bindex[28091] coerce_tmp[2207190])
    (2207208 'move' ret[2207197] cpi[2207199])
    (1789614 'move' call_tmp[1032646] ret[2207197])
    val ret[2070275]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070277 'move' ret[2070275](2070279 '.v' call_tmp[1032646] _bindex[28091]))
    (2325757 '.=' tmp[1032410] _high[1026692] ret[2070275])
    (1032669 'move' ret[1032400] tmp[1032410])
    label _end__cast[1032677]
    (1789565 '=' _retArg[1789563] ret[1032400])
    (1789567 return _void[55])
  }
  function _cast[1145724](const in arg r[1145728]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791302]:range(int(64),boundedLow,false)[1087476]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145730]:range(int(64),boundedLow,false)[1087476] "dead after last mention" "RVV" "temp"
    val tmp[1145740]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "insert auto destroy"
    (1146244 call init[1086923] tmp[1145740] 1 0 1 0 0)
    const-val call_tmp[1145937]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216064]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216066 'move' coerce_tmp[2216064](2216068 '.v' r[1145728] _low[1143276]))
    const-val ret[2216071]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216073]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216076 call init[28097] cpi[2216073])
    (2216078 '.=' cpi[2216073] _bindex[28091] coerce_tmp[2216064])
    (2216082 'move' ret[2216071] cpi[2216073])
    (1791311 'move' call_tmp[1145937] ret[2216071])
    val ret[2070341]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070343 'move' ret[2070341](2070345 '.v' call_tmp[1145937] _bindex[28091]))
    (2327036 '.=' tmp[1145740] _low[1087438] ret[2070341])
    const-val call_tmp[1145976]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216208]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216210 'move' coerce_tmp[2216208](2216212 '.v' r[1145728] _high[1143281]))
    const-val ret[2216215]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216217]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216220 call init[28097] cpi[2216217])
    (2216222 '.=' cpi[2216217] _bindex[28091] coerce_tmp[2216208])
    (2216226 'move' ret[2216215] cpi[2216217])
    (1791353 'move' call_tmp[1145976] ret[2216215])
    val ret[2070357]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070359 'move' ret[2070357](2070361 '.v' call_tmp[1145976] _bindex[28091]))
    (2327045 '.=' tmp[1145740] _high[1087443] ret[2070357])
    (1145999 'move' ret[1145730] tmp[1145740])
    label _end__cast[1146007]
    (1791304 '=' _retArg[1791302] ret[1145730])
    (1791306 return _void[55])
  }
  function _cast[1187542](const in arg r[1187546]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791624]:range(int(64),boundedHigh,false)[1187340]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187548]:range(int(64),boundedHigh,false)[1187340] "dead after last mention" "RVV" "temp"
    val tmp[1187558]:range(int(64),boundedHigh,false)[1187340] "dead at end of block" "insert auto destroy"
    (1188615 call init[1188624] tmp[1187558] 1 0 1 0 0)
    const-val call_tmp[1187755]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219187]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2219189 'move' coerce_tmp[2219187](2219191 '.v' r[1187546] _low[1184792]))
    const-val ret[2219194]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219196]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219199 call init[28097] cpi[2219196])
    (2219201 '.=' cpi[2219196] _bindex[28091] coerce_tmp[2219187])
    (2219205 'move' ret[2219194] cpi[2219196])
    (1791633 'move' call_tmp[1187755] ret[2219194])
    val ret[2070383]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070385 'move' ret[2070383](2070387 '.v' call_tmp[1187755] _bindex[28091]))
    (2327377 '.=' tmp[1187558] _low[1187302] ret[2070383])
    const-val call_tmp[1187794]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219317]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2219319 'move' coerce_tmp[2219317](2219321 '.v' r[1187546] _high[1184797]))
    const-val ret[2219324]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219326]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219329 call init[28097] cpi[2219326])
    (2219331 '.=' cpi[2219326] _bindex[28091] coerce_tmp[2219317])
    (2219335 'move' ret[2219324] cpi[2219326])
    (1791669 'move' call_tmp[1187794] ret[2219324])
    val ret[2070399]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2070401 'move' ret[2070399](2070403 '.v' call_tmp[1187794] _bindex[28091]))
    (2327386 '.=' tmp[1187558] _high[1187307] ret[2070399])
    (1187817 'move' ret[1187548] tmp[1187558])
    label _end__cast[1187825]
    (1791626 '=' _retArg[1791624] ret[1187548])
    (1791628 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].orderToIndex[1103951](const in arg this[1103957]:range(int(64),bounded,false)[1026725], const in arg ord[1103959]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2335352]:string[26] "temp"
    (2335353 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2335346]:string[26] "temp"
    (2335347 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2335340]:string[26] "temp"
    (2335341 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2335334]:string[26] "temp"
    (2335335 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val ret[2214522]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2214524 'move' ret[2214522](2214526 '.v' this[1103957] _low[1026687]))
    val ret[2214529]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2214531 'move' ret[2214529](2214533 '.v' this[1103957] _high[1026692]))
    const-val call_tmp[2214536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2214538 'move' call_tmp[2214536](2214540 '>' ret[2214522] ret[2214529]))
    val tmp[2214543]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2214536]
    {
      (2214547 'move' tmp[2214543] 0)
    }
    {
      (2214551 'move' tmp[2214543] 1)
    }
    const-val call_tmp[2060361]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060363 'move' call_tmp[2060361](2060365 '!' tmp[2214543]))
    if call_tmp[2060361]
    {
      (1104015 call boundsCheckHalt[210079] "invoking orderToIndex on a range that has no first index")
    }
    const-val call_tmp[2062225]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062227 'move' call_tmp[2062225](2062229 '<' ord[1103959] 0))
    if call_tmp[2062225]
    {
      const-val call_tmp[1104065]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789915]:string[26] "temp"
      (1104070 call _cast[1063064] ord[1103959] ret_tmp[1789915])
      (1789918 'move' call_tmp[1104065] ret_tmp[1789915])
      const-val call_tmp[1104073]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786955]:string[26] "temp"
      (1104078 call +[38342] "invoking orderToIndex on a negative integer: " call_tmp[1104065] ret_tmp[1786955])
      (1786958 'move' call_tmp[1104073] ret_tmp[1786955])
      (1104082 call boundsCheckHalt[210079] call_tmp[1104073])
      ref i_x[2077458]:string[26] "temp"
      (2077462 'move' i_x[2077458](2077460 'set reference' call_tmp[1104073]))
      (2077466 call deinit[30831] i_x[2077458])
      ref i_x[2077470]:string[26] "temp"
      (2077474 'move' i_x[2077470](2077472 'set reference' call_tmp[1104065]))
      (2077478 call deinit[30831] i_x[2077470])
    }
    const-val call_tmp[1104127]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104129 'move' call_tmp[1104127](1104132 call size[1035700] this[1103957]))
    const-val call_tmp[2075326]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2075328 'move' call_tmp[2075326](2075330 '>=' ord[1103959] call_tmp[1104127]))
    if call_tmp[2075326]
    {
      const-val call_tmp[1104171]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789921]:string[26] "temp"
      (1104176 call _cast[1063064] ord[1103959] ret_tmp[1789921])
      (1789924 'move' call_tmp[1104171] ret_tmp[1789921])
      const-val call_tmp[1104179]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786961]:string[26] "temp"
      (1104184 call +[38342] "invoking orderToIndex on an integer " call_tmp[1104171] ret_tmp[1786961])
      (1786964 'move' call_tmp[1104179] ret_tmp[1786961])
      const-val call_tmp[1104187]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786967]:string[26] "temp"
      (1104192 call +[38342] call_tmp[1104179] " that is larger than the range's number of indices " ret_tmp[1786967])
      (1786970 'move' call_tmp[1104187] ret_tmp[1786967])
      const-val call_tmp[1104195]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104197 'move' call_tmp[1104195](1104200 call size[1035700] this[1103957]))
      const-val call_tmp[1104203]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789927]:string[26] "temp"
      (1104208 call _cast[1063064] call_tmp[1104195] ret_tmp[1789927])
      (1789930 'move' call_tmp[1104203] ret_tmp[1789927])
      const-val call_tmp[1104211]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786973]:string[26] "temp"
      (1104216 call +[38342] call_tmp[1104187] call_tmp[1104203] ret_tmp[1786973])
      (1786976 'move' call_tmp[1104211] ret_tmp[1786973])
      (1104220 call boundsCheckHalt[210079] call_tmp[1104211])
      ref i_x[2077482]:string[26] "temp"
      (2077486 'move' i_x[2077482](2077484 'set reference' call_tmp[1104211]))
      (2077490 call deinit[30831] i_x[2077482])
      ref i_x[2077494]:string[26] "temp"
      (2077498 'move' i_x[2077494](2077496 'set reference' call_tmp[1104203]))
      (2077502 call deinit[30831] i_x[2077494])
      ref i_x[2077506]:string[26] "temp"
      (2077510 'move' i_x[2077506](2077508 'set reference' call_tmp[1104187]))
      (2077514 call deinit[30831] i_x[2077506])
      ref i_x[2077518]:string[26] "temp"
      (2077522 'move' i_x[2077518](2077520 'set reference' call_tmp[1104179]))
      (2077526 call deinit[30831] i_x[2077518])
      ref i_x[2077530]:string[26] "temp"
      (2077534 'move' i_x[2077530](2077532 'set reference' call_tmp[1104171]))
      (2077538 call deinit[30831] i_x[2077530])
    }
    val ret[2207850]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207852 'move' ret[2207850](2207854 '.v' this[1103957] _low[1026687]))
    const-val call_tmp[1104242]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104244 'move' call_tmp[1104242](1104247 call chpl__addRangeStrides[1104938] ret[2207850] 1 ord[1103959]))
    (1104274 return call_tmp[1104242])
  }
  function range(int(64),bounded,false)[1026725].this[1037359](const in arg this[1037365]:range(int(64),bounded,false)[1026725], const in arg other[1037367]:range(int(64),bounded,false)[1026725], ref arg _retArg[1789653]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039849]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039853 'move' coerce_tmp[1039849](2325781 '.v' this[1037365] _low[1026687]))
    (1037958 'noop')
    const-val coerce_tmp[1039862]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039866 'move' coerce_tmp[1039862](2325791 '.v' this[1037365] _high[1026692]))
    (1038012 'noop')
    const-val coerce_tmp[1039879]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039883 'move' coerce_tmp[1039879](2325801 '.v' other[1037367] _low[1026687]))
    (1038087 'noop')
    const-val coerce_tmp[1039892]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1039896 'move' coerce_tmp[1039892](2325811 '.v' other[1037367] _high[1026692]))
    (1038141 'noop')
    const-val ret_tmp[1789659]:2*int(64)[1039967] "temp"
    (2320314 '.=' ret_tmp[1789659] x0[1039963] 1)
    (2320318 '.=' ret_tmp[1789659] x1[1039965] 0)
    (1038328 'noop')
    (1038340 'noop')
    val tmp[2140559]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2140561]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140563 'move' call_tmp[2140561](2140565 '>' coerce_tmp[1039849] coerce_tmp[1039879]))
    if call_tmp[2140561]
    {
      (2140570 'move' tmp[2140559] coerce_tmp[1039849])
    }
    {
      (2140574 'move' tmp[2140559] coerce_tmp[1039879])
    }
    val newlo[1038992]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1038994 'move' newlo[1038992] tmp[2140559])
    val tmp[2099626]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2099628]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099630 'move' call_tmp[2099628](2099632 '<' coerce_tmp[1039862] coerce_tmp[1039892]))
    if call_tmp[2099628]
    {
      (2099637 'move' tmp[2099626] coerce_tmp[1039862])
    }
    {
      (2099641 'move' tmp[2099626] coerce_tmp[1039892])
    }
    val newhi[1039022]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1039024 'move' newhi[1039022] tmp[2099626])
    (2333664 'noop')
    const-val call_tmp[2060334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060336 'move' call_tmp[2060334](2060338 '!' 0))
    val tmp[1039072]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2060334]
    {
      (1039163 'move' tmp[1039072] 1)
    }
    {
      (1039169 'move' tmp[1039072] 0)
    }
    const-val call_tmp[1039245]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041739]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1041742 call init[1025948] initTemp[1041739] newlo[1038992] newhi[1039022] 1 0 tmp[1039072])
    (1039247 'move' call_tmp[1039245] initTemp[1041739])
    label _end_this[1039826]
    (1789655 '=' _retArg[1789653] call_tmp[1039245])
    (1789657 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].this[1138880](const in arg this[1138886]:range(int(64),boundedLow,false)[1087476], const in arg other[1138888]:range(int(64),bounded,false)[1026725], ref arg _retArg[1791150]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141370]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141374 'move' coerce_tmp[1141370](2326968 '.v' this[1138886] _low[1087438]))
    (1139479 'noop')
    const-val coerce_tmp[1141383]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141387 'move' coerce_tmp[1141383](2326978 '.v' other[1138888] _high[1026692]))
    (1139533 'noop')
    const-val coerce_tmp[1141400]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141404 'move' coerce_tmp[1141400](2326988 '.v' other[1138888] _low[1026687]))
    (1139608 'noop')
    const-val coerce_tmp[1141413]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1141417 'move' coerce_tmp[1141413](2326998 '.v' other[1138888] _high[1026692]))
    (1139662 'noop')
    const-val ret_tmp[1789677]:2*int(64)[1039967] "temp"
    (2320328 '.=' ret_tmp[1789677] x0[1039963] 1)
    (2320332 '.=' ret_tmp[1789677] x1[1039965] 0)
    (1139849 'noop')
    (1139861 'noop')
    val tmp[2140581]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2140583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140585 'move' call_tmp[2140583](2140587 '>' coerce_tmp[1141370] coerce_tmp[1141400]))
    if call_tmp[2140583]
    {
      (2140592 'move' tmp[2140581] coerce_tmp[1141370])
    }
    {
      (2140596 'move' tmp[2140581] coerce_tmp[1141400])
    }
    val newlo[1140513]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140515 'move' newlo[1140513] tmp[2140581])
    val tmp[2099648]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2099650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099652 'move' call_tmp[2099650](2099654 '<' coerce_tmp[1141383] coerce_tmp[1141413]))
    if call_tmp[2099650]
    {
      (2099659 'move' tmp[2099648] coerce_tmp[1141383])
    }
    {
      (2099663 'move' tmp[2099648] coerce_tmp[1141413])
    }
    val newhi[1140543]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1140545 'move' newhi[1140543] tmp[2099648])
    (2333665 'noop')
    const-val call_tmp[2060388]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060390 'move' call_tmp[2060388](2060392 '!' 0))
    val tmp[1140593]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2060388]
    {
      (1140684 'move' tmp[1140593] 1)
    }
    {
      (1140690 'move' tmp[1140593] 0)
    }
    const-val call_tmp[1140766]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1141854]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1141857 call init[1025948] initTemp[1141854] newlo[1140513] newhi[1140543] 1 0 tmp[1140593])
    (1140768 'move' call_tmp[1140766] initTemp[1141854])
    label _end_this[1141347]
    (1791152 '=' _retArg[1791150] call_tmp[1140766])
    (1791154 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187340].this[1200260](const in arg this[1200266]:range(int(64),boundedHigh,false)[1187340], const in arg other[1200268]:range(int(64),bounded,false)[1026725], ref arg _retArg[1791748]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202750]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202754 'move' coerce_tmp[1202750](2327451 '.v' other[1200268] _low[1026687]))
    (1200859 'noop')
    const-val coerce_tmp[1202763]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202767 'move' coerce_tmp[1202763](2327461 '.v' this[1200266] _high[1187307]))
    (1200913 'noop')
    const-val coerce_tmp[1202780]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202784 'move' coerce_tmp[1202780](2327471 '.v' other[1200268] _low[1026687]))
    (1200988 'noop')
    const-val coerce_tmp[1202793]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1202797 'move' coerce_tmp[1202793](2327481 '.v' other[1200268] _high[1026692]))
    (1201042 'noop')
    const-val ret_tmp[1789683]:2*int(64)[1039967] "temp"
    (2320342 '.=' ret_tmp[1789683] x0[1039963] 1)
    (2320346 '.=' ret_tmp[1789683] x1[1039965] 0)
    (1201229 'noop')
    (1201241 'noop')
    val tmp[2140603]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2140605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2140607 'move' call_tmp[2140605](2140609 '>' coerce_tmp[1202750] coerce_tmp[1202780]))
    if call_tmp[2140605]
    {
      (2140614 'move' tmp[2140603] coerce_tmp[1202750])
    }
    {
      (2140618 'move' tmp[2140603] coerce_tmp[1202780])
    }
    val newlo[1201893]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201895 'move' newlo[1201893] tmp[2140603])
    val tmp[2099670]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2099672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099674 'move' call_tmp[2099672](2099676 '<' coerce_tmp[1202763] coerce_tmp[1202793]))
    if call_tmp[2099672]
    {
      (2099681 'move' tmp[2099670] coerce_tmp[1202763])
    }
    {
      (2099685 'move' tmp[2099670] coerce_tmp[1202793])
    }
    val newhi[1201923]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1201925 'move' newhi[1201923] tmp[2099670])
    (2333666 'noop')
    const-val call_tmp[2060415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060417 'move' call_tmp[2060415](2060419 '!' 0))
    val tmp[1201973]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2060415]
    {
      (1202064 'move' tmp[1201973] 1)
    }
    {
      (1202070 'move' tmp[1201973] 0)
    }
    const-val call_tmp[1202146]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203461]:range(int(64),bounded,false)[1026725] "dead at end of block" "delay instantiation" "temp"
    (1203464 call init[1025948] initTemp[1203461] newlo[1201893] newhi[1201923] 1 0 tmp[1201973])
    (1202148 'move' call_tmp[1202146] initTemp[1203461])
    label _end_this[1202727]
    (1791750 '=' _retArg[1791748] call_tmp[1202146])
    (1791752 return _void[55])
  }
  function chpl_count_help[1088227](const in arg r[1088229]:range(int(64),boundedLow,false)[1087476], const in arg count[1088231]:int(64)[13], ref arg _retArg[1790551]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2335322]:string[26] "temp"
    (2335323 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088233]:range(int(64),bounded,false)[1026725] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2064242]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2064244 'move' call_tmp[2064242](2064246 '==' count[1088231] 0))
    if call_tmp[2064242]
    {
      const-val coerce_tmp[1090624]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1090628 'move' coerce_tmp[1090624](2326192 '.v' r[1088229] _low[1087438]))
      const-val call_tmp[1088531]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088533 'move' call_tmp[1088531](1088536 call absSameType[1090753] 1))
      const-val coerce_tmp[1090857]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1090861 'move' coerce_tmp[1090857](2326199 '.v' r[1088229] _low[1087438]))
      const-val call_tmp[2073598]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2073600 'move' call_tmp[2073598](2073602 '-' coerce_tmp[1090857] call_tmp[1088531]))
      const-val call_tmp[1088594]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091152]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
      (1091155 call init[1091175] initTemp[1091152] coerce_tmp[1090624] call_tmp[2073598] 1 1)
      (1088596 'move' call_tmp[1088594] initTemp[1091152])
      (1088616 'move' ret[1088233] call_tmp[1088594])
      gotoReturn _end_chpl_count_help[1090199] _end_chpl_count_help[1090199]
    }
    (2214150 'noop')
    const-val call_tmp[2060352]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060354 'move' call_tmp[2060352](2060356 '!' 0))
    val tmp[1089039]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2060352]
    {
      const-val call_tmp[2062165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062167 'move' call_tmp[2062165](2062169 '<' count[1088231] 0))
      (1089072 'move' tmp[1089039] call_tmp[2062165])
    }
    {
      (1089078 'move' tmp[1089039] 0)
    }
    if tmp[1089039]
    {
      (1089094 call boundsCheckHalt[210079] "With a negative count, the range must have a last index.")
    }
    const-val call_tmp[2214157]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2214159 'move' call_tmp[2214157](2214161 '*' count[1088231] 1))
    val tmp[1089601]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2070639]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070641 'move' call_tmp[2070639](2070643 '>' call_tmp[2214157] 0))
    if call_tmp[2070639]
    {
      (1095228 'move' tmp[1089601](2326206 '.v' r[1088229] _low[1087438]))
    }
    {
      const-val tmp[1089634]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2066852]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2066854 'move' call_tmp[2066852](2066856 '+' call_tmp[2214157] 1))
      const-val coerce_tmp[1094231]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094235 'move' coerce_tmp[1094231](2326216 '.v' r[1088229] _high[1087443]))
      (1089668 'move' tmp[1089634](1089671 call chpl__add[1093283] coerce_tmp[1094231] call_tmp[2066852]))
      (1089675 'move' tmp[1089601] tmp[1089634])
    }
    val tmp[1089688]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2062195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062197 'move' call_tmp[2062195](2062199 '<' call_tmp[2214157] 0))
    if call_tmp[2062195]
    {
      (1095230 'move' tmp[1089688](2326223 '.v' r[1088229] _high[1087443]))
    }
    {
      const-val tmp[1089721]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[2090404]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2090406 'move' call_tmp[2090404](2090408 '-' call_tmp[2214157] 1))
      const-val coerce_tmp[1094284]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1094288 'move' coerce_tmp[1094284](2326233 '.v' r[1088229] _low[1087438]))
      (1089755 'move' tmp[1089721](1089758 call chpl__add[1093283] coerce_tmp[1094284] call_tmp[2090404]))
      (1089762 'move' tmp[1089688] tmp[1089721])
    }
    const-val call_tmp[1090167]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094363]:range(int(64),bounded,false)[1026725] "dead after last mention" "delay instantiation" "temp"
    (1094366 call init[1094386] initTemp[1094363] tmp[1089601] tmp[1089688])
    (1090169 'move' call_tmp[1090167] initTemp[1094363])
    (1090189 'move' ret[1088233] call_tmp[1090167])
    label _end_chpl_count_help[1090199]
    (1790553 '=' _retArg[1790551] ret[1088233])
    (1790555 return _void[55])
  }
  function #[1087836](const in arg r[1087838]:range(int(64),boundedLow,false)[1087476], const in arg count[1087851]:int(64)[13], ref arg _retArg[1790539]:range(int(64),bounded,false)[1026725]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088082]:range(int(64),bounded,false)[1026725] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1790545]:range(int(64),bounded,false)[1026725] "temp"
    (1088087 call chpl_count_help[1088227] r[1087838] count[1087851] ret_tmp[1790545])
    (1790548 'move' call_tmp[1088082] ret_tmp[1790545])
    (1790541 '=' _retArg[1790539] call_tmp[1088082])
    (1790543 return _void[55])
  }
  function chpl_checkIfRangeIterWillOverflow[976261](const in arg low[976265]:int(32)[95], const in arg high[976267]:int(32)[95], const in arg stride[976269]:int(64)[13], const in arg first[976275]:int(32)[95], const in arg last[976281]:int(32)[95], const in arg shouldHalt[976287]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2334696]:string[26] "temp"
    (2334697 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976289]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2157894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157896 'move' call_tmp[2157894](2157898 '>' low[976265] high[976267]))
    if call_tmp[2157894]
    {
      (976320 'move' ret[976289] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976801] _end_chpl_checkIfRangeIterWillOverflow[976801]
    }
    val willOverFlow[976327]:bool[10] "dead at end of block" "insert auto destroy"
    (976329 'move' willOverFlow[976327] 0)
    const-val coerce_tmp[976909]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (976915 'move' coerce_tmp[976909](976911 'cast' int(32)[95] 0))
    const-val call_tmp[2157904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157906 'move' call_tmp[2157904](2157908 '>' last[976281] coerce_tmp[976909]))
    val tmp[976370]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2157904]
    {
      const-val call_tmp[2070584]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070586 'move' call_tmp[2070584](2070588 '>' stride[976269] 0))
      (976403 'move' tmp[976370] call_tmp[2070584])
    }
    {
      (976409 'move' tmp[976370] 0)
    }
    if tmp[976370]
    {
      const-val call_tmp[2158208]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2158210 'move' call_tmp[2158208](2158212 '-' 2147483647 last[976281]))
      const-val coerce_tmp[977069]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977075 'move' coerce_tmp[977069](977071 'cast' int(64)[13] call_tmp[2158208]))
      const-val call_tmp[2070594]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070596 'move' call_tmp[2070594](2070598 '>' stride[976269] coerce_tmp[977069]))
      if call_tmp[2070594]
      {
        (2080989 '=' willOverFlow[976327] 1)
      }
    }
    {
      const-val coerce_tmp[977079]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (977085 'move' coerce_tmp[977079](977081 'cast' int(32)[95] 0))
      const-val call_tmp[2157824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2157826 'move' call_tmp[2157824](2157828 '<' last[976281] coerce_tmp[977079]))
      val tmp[976485]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2157824]
      {
        const-val call_tmp[2062145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2062147 'move' call_tmp[2062145](2062149 '<' stride[976269] 0))
        (976518 'move' tmp[976485] call_tmp[2062145])
      }
      {
        (976524 'move' tmp[976485] 0)
      }
      if tmp[976485]
      {
        const-val call_tmp[2158223]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
        (2158225 'move' call_tmp[2158223](2158227 '-' -2147483648 last[976281]))
        const-val coerce_tmp[977697]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (977703 'move' coerce_tmp[977697](977699 'cast' int(64)[13] call_tmp[2158223]))
        const-val call_tmp[2074629]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2074631 'move' call_tmp[2074629](2074633 '<' stride[976269] coerce_tmp[977697]))
        if call_tmp[2074629]
        {
          (2081006 '=' willOverFlow[976327] 1)
        }
      }
    }
    val tmp[976739]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976327]
    {
      (976764 'move' tmp[976739] shouldHalt[976287])
    }
    {
      (976770 'move' tmp[976739] 0)
    }
    if tmp[976739]
    {
      (976788 call boundsCheckHalt[210079] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (976793 'move' ret[976289] willOverFlow[976327])
    label _end_chpl_checkIfRangeIterWillOverflow[976801]
    (976803 return ret[976289])
  }
  function chpl_checkIfRangeIterWillOverflow[1095987](const in arg low[1095991]:int(64)[13], const in arg high[1095993]:int(64)[13], const in arg stride[1095995]:int(64)[13], const in arg first[1096001]:int(64)[13], const in arg last[1096007]:int(64)[13], const in arg shouldHalt[1096013]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2335328]:string[26] "temp"
    (2335329 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096015]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2070689]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070691 'move' call_tmp[2070689](2070693 '>' low[1095991] high[1095993]))
    if call_tmp[2070689]
    {
      (1096046 'move' ret[1096015] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096527] _end_chpl_checkIfRangeIterWillOverflow[1096527]
    }
    val willOverFlow[1096053]:bool[10] "dead at end of block" "insert auto destroy"
    (1096055 'move' willOverFlow[1096053] 0)
    const-val call_tmp[2070704]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070706 'move' call_tmp[2070704](2070708 '>' last[1096007] 0))
    val tmp[1096096]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2070704]
    {
      const-val call_tmp[2070719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070721 'move' call_tmp[2070719](2070723 '>' stride[1095995] 0))
      (1096129 'move' tmp[1096096] call_tmp[2070719])
    }
    {
      (1096135 'move' tmp[1096096] 0)
    }
    if tmp[1096096]
    {
      const-val call_tmp[2165893]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165895 'move' call_tmp[2165893](2165897 '-' 9223372036854775807 last[1096007]))
      const-val call_tmp[2070729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070731 'move' call_tmp[2070729](2070733 '>' stride[1095995] call_tmp[2165893]))
      if call_tmp[2070729]
      {
        (2081062 '=' willOverFlow[1096053] 1)
      }
    }
    {
      const-val call_tmp[2062205]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062207 'move' call_tmp[2062205](2062209 '<' last[1096007] 0))
      val tmp[1096211]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if call_tmp[2062205]
      {
        const-val call_tmp[2062215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2062217 'move' call_tmp[2062215](2062219 '<' stride[1095995] 0))
        (1096244 'move' tmp[1096211] call_tmp[2062215])
      }
      {
        (1096250 'move' tmp[1096211] 0)
      }
      if tmp[1096211]
      {
        const-val call_tmp[2165863]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2165865 'move' call_tmp[2165863](2165867 '-' -9223372036854775808 last[1096007]))
        const-val call_tmp[2074719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2074721 'move' call_tmp[2074719](2074723 '<' stride[1095995] call_tmp[2165863]))
        if call_tmp[2074719]
        {
          (2081079 '=' willOverFlow[1096053] 1)
        }
      }
    }
    val tmp[1096465]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096053]
    {
      (1096490 'move' tmp[1096465] shouldHalt[1096013])
    }
    {
      (1096496 'move' tmp[1096465] 0)
    }
    if tmp[1096465]
    {
      (1096514 call boundsCheckHalt[210079] "Iteration over a bounded range may be incorrect due to overflow.")
    }
    (1096519 'move' ret[1096015] willOverFlow[1096053])
    label _end_chpl_checkIfRangeIterWillOverflow[1096527]
    (1096529 return ret[1096015])
  }
  function range(int(64),bounded,false)[1026725].checkIfIterWillOverflow[1095725](const in arg this[1095731]:range(int(64),bounded,false)[1026725], const in arg shouldHalt[1095737]:bool[10]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    val ret[2207838]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2207840 'move' ret[2207838](2207842 '.v' this[1095731] _low[1026687]))
    val ret[2214289]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2214291 'move' ret[2214289](2214293 '.v' this[1095731] _high[1026692]))
    const-val call_tmp[1095795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1096531]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096535 'move' coerce_tmp[1096531](2326242 '.v' this[1095731] _low[1026687]))
    const-val coerce_tmp[1096537]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1096541 'move' coerce_tmp[1096537](2326249 '.v' this[1095731] _high[1026692]))
    (1095797 'move' call_tmp[1095795](1095800 call chpl_checkIfRangeIterWillOverflow[1095987] coerce_tmp[1096531] coerce_tmp[1096537] 1 ret[2207838] ret[2214289] shouldHalt[1095737]))
    (1095812 return call_tmp[1095795])
  }
  type _ic_chpl_direct_range_iter[1230295] val super[1230296]:object[22] "super class" val more[1230298]:int(64)[13] const-val F0_low[1967707]:int(64)[13] const-val F1_high[1967711]:int(64)[13] val F2__iterator[1967715]:_ic_chpl_direct_param_stride_range_iter[1103197] val F3_i[1967717]:int(64)[13] const-val F4_low[1967719]:int(64)[13] val value[1967721]:int(64)[13]
  type _ir_chpl_direct_range_iter[1230301] const-val F0_low[1967709]:int(64)[13] const-val F1_high[1967713]:int(64)[13]
  type _ic_chpl_direct_range_iter[1421519] val super[1421520]:object[22] "super class" val more[1421522]:int(64)[13] const-val F0_low[1987241]:int(64)[13] const-val F1_high[1987245]:int(64)[13] val F2__iterator[1987249]:_ic_chpl_direct_param_stride_range_iter[1421265] val F3_i[1987251]:int(64)[13] const-val F4_high[1987253]:int(64)[13] val value[1987255]:int(64)[13]
  type _ir_chpl_direct_range_iter[1421525] const-val F0_low[1987243]:int(64)[13] const-val F1_high[1987247]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter[1103701] val super[1103702]:object[22] "super class" val more[1103704]:int(64)[13] const-val F0_low[1960165]:int(64)[13] const-val F1_count[1960169]:int(64)[13] val F2__iterator[1960173]:_ic_chpl_direct_counted_range_iter_helper[1103451] const F3_tmp[1960175]:2*int(64)[1039967] val F4__iterator[1960177]:_ic_chpl_direct_param_stride_range_iter[1103197] val F5_i[1960179]:int(64)[13] const-val F6_low[1960181]:int(64)[13] val value[1960183]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter[1103707] const-val F0_low[1960167]:int(64)[13] const-val F1_count[1960171]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter[978222] val super[978223]:object[22] "super class" val more[978225]:int(64)[13] const-val F0_low[1958316]:int(32)[95] const-val F1_count[1958320]:int(32)[95] val F2__iterator[1958324]:_ic_chpl_direct_counted_range_iter_helper[977972] const F3_tmp[1958326]:2*int(32)[971589] val F4__iterator[1958328]:_ic_chpl_direct_param_stride_range_iter[977718] val F5_i[1958330]:int(32)[95] const-val F6_low[1958332]:int(32)[95] val value[1958334]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter[978228] const-val F0_low[1958318]:int(32)[95] const-val F1_count[1958322]:int(32)[95]
  type _ic_chpl_direct_counted_range_iter_helper[977972] val super[977973]:object[22] "super class" val more[977975]:int(64)[13] const-val F0_low[1961971]:int(32)[95] const-val F1_count[1961975]:int(32)[95] const F2_tmp[1961979]:2*int(32)[971589] val F3__iterator[1961981]:_ic_chpl_direct_param_stride_range_iter[977718] val F4_i[1961983]:int(32)[95] const-val F5_low[1961985]:int(32)[95] val value[1961987]:int(32)[95]
  type _ir_chpl_direct_counted_range_iter_helper[977978] const-val F0_low[1961973]:int(32)[95] const-val F1_count[1961977]:int(32)[95]
  type _ic_chpl_direct_counted_range_iter_helper[1103451] val super[1103452]:object[22] "super class" val more[1103454]:int(64)[13] const-val F0_low[1964637]:int(64)[13] const-val F1_count[1964641]:int(64)[13] const F2_tmp[1964645]:2*int(64)[1039967] val F3__iterator[1964647]:_ic_chpl_direct_param_stride_range_iter[1103197] val F4_i[1964649]:int(64)[13] const-val F5_low[1964651]:int(64)[13] val value[1964653]:int(64)[13]
  type _ir_chpl_direct_counted_range_iter_helper[1103457] const-val F0_low[1964639]:int(64)[13] const-val F1_count[1964643]:int(64)[13]
  type _ic_chpl_direct_pos_stride_range_iter[1302908] val super[1302909]:object[22] "super class" val more[1302911]:int(64)[13] const-val F0_low[1977163]:int(64)[13] const-val F1_high[1977167]:int(64)[13] const-val F2_stride[1977171]:int(64)[13] val value[1977175]:int(64)[13]
  type _ir_chpl_direct_pos_stride_range_iter[1302914] const-val F0_low[1977165]:int(64)[13] const-val F1_high[1977169]:int(64)[13] const-val F2_stride[1977173]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[977718] val super[977719]:object[22] "super class" val more[977721]:int(64)[13] const-val F0_low[1963512]:int(32)[95] const-val F1_high[1963516]:int(32)[95] val value[1963520]:int(32)[95]
  type _ir_chpl_direct_param_stride_range_iter[977724] const-val F0_low[1963514]:int(32)[95] const-val F1_high[1963518]:int(32)[95]
  type _ic_chpl_direct_param_stride_range_iter[1103197] val super[1103198]:object[22] "super class" val more[1103200]:int(64)[13] const-val F0_low[1966135]:int(64)[13] const-val F1_high[1966139]:int(64)[13] val value[1966143]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1103203] const-val F0_low[1966137]:int(64)[13] const-val F1_high[1966141]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1421265] val super[1421266]:object[22] "super class" val more[1421268]:int(64)[13] const-val F0_low[1988113]:int(64)[13] const-val F1_high[1988117]:int(64)[13] val value[1988121]:int(64)[13]
  type _ir_chpl_direct_param_stride_range_iter[1421271] const-val F0_low[1988115]:int(64)[13] const-val F1_high[1988119]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096614].advance[1096640](const in arg this[1096642]:_ic_these_range_int64_t_bounded_F[1096614]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1964505]:int(64)[13]
    (1964533 'move' more[1964505](1964530 '.v' this[1096642] more[1096617]))
    const-val tmp[1964508]:bool[10] "temp"
    (1964515 'move' tmp[1964508](1964512 '==' more[1964505] 2))
    if tmp[1964508]
    {
      gotoIterResume _jump_2[1964497] _jump_2[1964497]
    }
    const-val tmp[1964520]:bool[10] "temp"
    (1964525 'move' tmp[1964520](1964522 '==' more[1964505] -2))
    if tmp[1964520]
    {
      gotoIterResume _jump_break_2[1964499] _jump_break_2[1964499]
    }
    const-val tmp[1964026]:range(int(64),bounded,false)[1026725] "temp"
    (1964031 'move' tmp[1964026](1964028 '.v' this[1096642] F0_this[1964014]))
    (1095541 call checkIfIterWillOverflow[1095725] tmp[1964026] 1)
    (1964035 '.=' this[1096642] F1_i[1964018] 0)
    ref tmp[1964039]:range(int(64),bounded,false)[1026725] "temp"
    (1964044 'move' tmp[1964039](1964041 '.' this[1096642] F0_this[1964014]))
    val tmp[1964046]:int(64)[13] "temp"
    (1096591 'move' tmp[1964046](2326259 '.v' tmp[1964039] _low[1026687]))
    (1964048 '.=' this[1096642] F3_coerce_tmp[1964022] tmp[1964046])
    (1095567 'noop')
    ref tmp[1964059]:range(int(64),bounded,false)[1026725] "temp"
    (1964064 'move' tmp[1964059](1964061 '.' this[1096642] F0_this[1964014]))
    const-val coerce_tmp[1096597]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1096601 'move' coerce_tmp[1096597](2326265 '.v' tmp[1964059] _high[1026692]))
    (1964068 '.=' this[1096642] F2_end[1964020] coerce_tmp[1096597])
    (1095581 'noop')
    CForLoop[1095585]
    {
      const-val tmp[1964085]:int(64)[13] "temp"
      (1964090 'move' tmp[1964085](1964087 '.v' this[1096642] F1_i[1964018]))
      (1964074 '.=' this[1096642] value[1964024] tmp[1964085])
      (1964491 '.=' this[1096642] more[1096617] 2)
      gotoIterEnd _end[1964489] _end[1964489]
      label _jump_break_2[1964499]
      gotoReturn _endthese[1770993] _endthese[1770993]
      label _jump_2[1964497]
      {
        const-val tmp[1964105]:int(64)[13] "temp"
        (1964110 'move' tmp[1964105](1964107 '.v' this[1096642] F3_coerce_tmp[1964022]))
        (1964101 '.=' this[1096642] F1_i[1964018] tmp[1964105])
      }
      {
        val tmp[1964112]:int(64)[13] "temp"
        (1964117 'move' tmp[1964112](1964114 '.v' this[1096642] F1_i[1964018]))
        const tmp[1964119]:int(64)[13] "temp"
        (1964124 'move' tmp[1964119](1964121 '.v' this[1096642] F2_end[1964020]))
        (1095594 '<=' tmp[1964112] tmp[1964119])
      }
      {
        val tmp[1964126]:int(64)[13] "temp"
        (1964131 'move' tmp[1964126](1964128 '.v' this[1096642] F1_i[1964018]))
        (1095625 '+=' tmp[1964126] 1)
        (1964133 '.=' this[1096642] F1_i[1964018] tmp[1964126])
      }
    }
    label _endthese[1770993]
    (1964501 '.=' this[1096642] more[1096617] 0)
    label _end[1964489]
    (1964536 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096614] val super[1096615]:object[22] "super class" val more[1096617]:int(64)[13] const-val F0_this[1964014]:range(int(64),bounded,false)[1026725] val F1_i[1964018]:int(64)[13] const F2_end[1964020]:int(64)[13] val F3_coerce_tmp[1964022]:int(64)[13] val value[1964024]:int(64)[13]
  type _ir_these_range_int64_t_bounded_F[1096620] const-val F0_this[1964016]:range(int(64),bounded,false)[1026725]
  function _cast[1054269](const in arg x[1054273]:range(byteIndex,bounded,false)[1025703], ref arg _retArg[1789789]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2334952]:string[26] "temp"
    (2334953 'move' ".." "..")
    const-val ret[1054275]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054283]:string[26] "dead at end of block" "insert auto destroy"
    (1084619 call init[30760] ret[1054283])
    const-val call_tmp[1054307]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207148]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2207150 'move' coerce_tmp[2207148](2207152 '.v' x[1054273] _low[1025665]))
    const-val ret[2207155]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207157]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207160 call init[28097] cpi[2207157])
    (2207162 '.=' cpi[2207157] _bindex[28091] coerce_tmp[2207148])
    (2207166 'move' ret[2207155] cpi[2207157])
    (1789584 'move' call_tmp[1054307] ret[2207155])
    const-val call_tmp[1054315]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789795]:string[26] "temp"
    (1054320 call _cast[1054552] call_tmp[1054307] ret_tmp[1789795])
    (1789798 'move' call_tmp[1054315] ret_tmp[1789795])
    (1054324 call +=[38797] ret[1054283] call_tmp[1054315])
    ref i_x[2077122]:string[26] "temp"
    (2077126 'move' i_x[2077122](2077124 'set reference' call_tmp[1054315]))
    (2077130 call deinit[30831] i_x[2077122])
    (1054331 call +=[38797] ret[1054283] "..")
    const-val call_tmp[1054354]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2207223]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2207225 'move' coerce_tmp[2207223](2207227 '.v' x[1054273] _high[1025670]))
    const-val ret[2207230]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2207232]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2207235 call init[28097] cpi[2207232])
    (2207237 '.=' cpi[2207232] _bindex[28091] coerce_tmp[2207223])
    (2207241 'move' ret[2207230] cpi[2207232])
    (1789620 'move' call_tmp[1054354] ret[2207230])
    const-val call_tmp[1054362]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789801]:string[26] "temp"
    (1054367 call _cast[1054552] call_tmp[1054354] ret_tmp[1789801])
    (1789804 'move' call_tmp[1054362] ret_tmp[1789801])
    (1054371 call +=[38797] ret[1054283] call_tmp[1054362])
    ref i_x[2077134]:string[26] "temp"
    (2077138 'move' i_x[2077134](2077136 'set reference' call_tmp[1054362]))
    (2077142 call deinit[30831] i_x[2077134])
    const-val alignCheckRange[1054433]:range(byteIndex,bounded,false)[1025703] "dead at end of block" "insert auto destroy"
    (1054435 'move' alignCheckRange[1054433] x[1054273])
    (1054443 call normalizeAlignment[1083517] alignCheckRange[1054433])
    (1054525 'move' ret[1054275] ret[1054283])
    label _end__cast[1054533]
    (1789791 '=' _retArg[1789789] ret[1054275])
    (1789793 return _void[55])
  }
  function _cast[1119348](const in arg x[1119352]:range(int(64),bounded,false)[1026725], ref arg _retArg[1790844]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2335443]:string[26] "temp"
    (2335444 'move' ".." "..")
    const-val ret[1119354]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119362]:string[26] "dead at end of block" "insert auto destroy"
    (1120655 call init[30760] ret[1119362])
    const-val coerce_tmp[2206401]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2206403 'move' coerce_tmp[2206401](2206405 '.v' x[1119352] _low[1026687]))
    const-val call_tmp[1119394]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789939]:string[26] "temp"
    (1119399 call _cast[1063064] coerce_tmp[2206401] ret_tmp[1789939])
    (1789942 'move' call_tmp[1119394] ret_tmp[1789939])
    (1119403 call +=[38797] ret[1119362] call_tmp[1119394])
    ref i_x[2077626]:string[26] "temp"
    (2077630 'move' i_x[2077626](2077628 'set reference' call_tmp[1119394]))
    (2077634 call deinit[30831] i_x[2077626])
    (1119410 call +=[38797] ret[1119362] "..")
    const-val coerce_tmp[2206621]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2206623 'move' coerce_tmp[2206621](2206625 '.v' x[1119352] _high[1026692]))
    const-val call_tmp[1119441]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789945]:string[26] "temp"
    (1119446 call _cast[1063064] coerce_tmp[2206621] ret_tmp[1789945])
    (1789948 'move' call_tmp[1119441] ret_tmp[1789945])
    (1119450 call +=[38797] ret[1119362] call_tmp[1119441])
    ref i_x[2077638]:string[26] "temp"
    (2077642 'move' i_x[2077638](2077640 'set reference' call_tmp[1119441]))
    (2077646 call deinit[30831] i_x[2077638])
    const-val alignCheckRange[1119512]:range(int(64),bounded,false)[1026725] "dead at end of block" "insert auto destroy"
    (1119514 'move' alignCheckRange[1119512] x[1119352])
    (1119522 call normalizeAlignment[1119651] alignCheckRange[1119512])
    (1119604 'move' ret[1119354] ret[1119362])
    label _end__cast[1119612]
    (1790846 '=' _retArg[1790844] ret[1119354])
    (1790848 return _void[55])
  }
  function _cast[1135871](const in arg x[1135875]:range(int(64),boundedLow,false)[1087476], ref arg _retArg[1791132]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335506]:string[26] "temp"
    (2335507 'move' " align " " align ")
    const-val local__str_literal_1075[2335500]:string[26] "temp"
    (2335501 'move' ".." "..")
    const-val ret[1135877]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1135885]:string[26] "dead at end of block" "insert auto destroy"
    (1138709 call init[30760] ret[1135885])
    const-val coerce_tmp[2215421]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2215423 'move' coerce_tmp[2215421](2215425 '.v' x[1135875] _low[1087438]))
    const-val call_tmp[1135917]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789957]:string[26] "temp"
    (1135922 call _cast[1063064] coerce_tmp[2215421] ret_tmp[1789957])
    (1789960 'move' call_tmp[1135917] ret_tmp[1789957])
    (1135926 call +=[38797] ret[1135885] call_tmp[1135917])
    ref i_x[2077698]:string[26] "temp"
    (2077702 'move' i_x[2077698](2077700 'set reference' call_tmp[1135917]))
    (2077706 call deinit[30831] i_x[2077698])
    (1135933 call +=[38797] ret[1135885] "..")
    const-val alignCheckRange[1136035]:range(int(64),boundedLow,false)[1087476] "dead at end of block" "insert auto destroy"
    (1136037 'move' alignCheckRange[1136035] x[1135875])
    (1136045 call normalizeAlignment[1136171] alignCheckRange[1136035])
    val ret[2215797]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2215799 'move' ret[2215797](2215801 '.v' alignCheckRange[1136035] _low[1087438]))
    const-val coerce_tmp[2215804]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2215806 'move' coerce_tmp[2215804](2215808 '.v' alignCheckRange[1136035] _low[1087438]))
    const-val call_tmp[2215811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2215813 'move' call_tmp[2215811](2215815 '==' ret[2215797] coerce_tmp[2215804]))
    const-val call_tmp[2060379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060381 'move' call_tmp[2060379](2060383 '!' call_tmp[2215811]))
    if call_tmp[2060379]
    {
      const-val call_tmp[1136073]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136075 'move' call_tmp[1136073](1136078 call alignment[1128031] x[1135875]))
      const-val call_tmp[1136096]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136098 'move' call_tmp[1136096](1136101 call chpl__mod[1137327] call_tmp[1136073] 1))
      const-val call_tmp[1136104]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789963]:string[26] "temp"
      (1136109 call _cast[1063064] call_tmp[1136096] ret_tmp[1789963])
      (1789966 'move' call_tmp[1136104] ret_tmp[1789963])
      const-val call_tmp[1136112]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1786991]:string[26] "temp"
      (1136117 call +[38342] " align " call_tmp[1136104] ret_tmp[1786991])
      (1786994 'move' call_tmp[1136112] ret_tmp[1786991])
      (1136121 call +=[38797] ret[1135885] call_tmp[1136112])
      ref i_x[2077710]:string[26] "temp"
      (2077714 'move' i_x[2077710](2077712 'set reference' call_tmp[1136112]))
      (2077718 call deinit[30831] i_x[2077710])
      ref i_x[2077722]:string[26] "temp"
      (2077726 'move' i_x[2077722](2077724 'set reference' call_tmp[1136104]))
      (2077730 call deinit[30831] i_x[2077722])
    }
    (1136127 'move' ret[1135877] ret[1135885])
    label _end__cast[1136135]
    (1791134 '=' _retArg[1791132] ret[1135877])
    (1791136 return _void[55])
  }
  function _cast[1154335](const in arg x[1154339]:range(byteIndex,boundedLow,false)[1143314], ref arg _retArg[1791414]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335554]:string[26] "temp"
    (2335555 'move' " align " " align ")
    const-val local__str_literal_1075[2335548]:string[26] "temp"
    (2335549 'move' ".." "..")
    const-val ret[1154341]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154349]:string[26] "dead at end of block" "insert auto destroy"
    (1156030 call init[30760] ret[1154349])
    const-val call_tmp[1154373]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2216130]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216132 'move' coerce_tmp[2216130](2216134 '.v' x[1154339] _low[1143276]))
    const-val ret[2216137]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2216139]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2216142 call init[28097] cpi[2216139])
    (2216144 '.=' cpi[2216139] _bindex[28091] coerce_tmp[2216130])
    (2216148 'move' ret[2216137] cpi[2216139])
    (1791323 'move' call_tmp[1154373] ret[2216137])
    const-val call_tmp[1154381]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789807]:string[26] "temp"
    (1154386 call _cast[1054552] call_tmp[1154373] ret_tmp[1789807])
    (1789810 'move' call_tmp[1154381] ret_tmp[1789807])
    (1154390 call +=[38797] ret[1154349] call_tmp[1154381])
    ref i_x[2077782]:string[26] "temp"
    (2077786 'move' i_x[2077782](2077784 'set reference' call_tmp[1154381]))
    (2077790 call deinit[30831] i_x[2077782])
    (1154397 call +=[38797] ret[1154349] "..")
    const-val alignCheckRange[1154499]:range(byteIndex,boundedLow,false)[1143314] "dead at end of block" "insert auto destroy"
    (1154501 'move' alignCheckRange[1154499] x[1154339])
    (1154509 call normalizeAlignment[1154870] alignCheckRange[1154499])
    val ret[2216301]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2216303 'move' ret[2216301](2216305 '.v' alignCheckRange[1154499] _low[1143276]))
    const-val coerce_tmp[2216308]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2216310 'move' coerce_tmp[2216308](2216312 '.v' alignCheckRange[1154499] _low[1143276]))
    const-val call_tmp[2216315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2216317 'move' call_tmp[2216315](2216319 '==' ret[2216301] coerce_tmp[2216308]))
    const-val call_tmp[2060406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2060408 'move' call_tmp[2060406](2060410 '!' call_tmp[2216315]))
    if call_tmp[2060406]
    {
      const-val call_tmp[1154537]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1791396]:byteIndex[28170] "temp"
      (1154542 call alignment[1148149] x[1154339] ret_tmp[1791396])
      (1791399 'move' call_tmp[1154537] ret_tmp[1791396])
      val ret[2206819]:int(64)[13] "dead after last mention" "RVV" "temp"
      (2206821 'move' ret[2206819](2206823 '.v' call_tmp[1154537] _bindex[28091]))
      const-val call_tmp[1154560]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154562 'move' call_tmp[1154560](1154565 call chpl__mod[1137327] ret[2206819] 1))
      const-val call_tmp[1154568]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1789975]:string[26] "temp"
      (1154573 call _cast[1063064] call_tmp[1154560] ret_tmp[1789975])
      (1789978 'move' call_tmp[1154568] ret_tmp[1789975])
      const-val call_tmp[1154576]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1787003]:string[26] "temp"
      (1154581 call +[38342] " align " call_tmp[1154568] ret_tmp[1787003])
      (1787006 'move' call_tmp[1154576] ret_tmp[1787003])
      (1154585 call +=[38797] ret[1154349] call_tmp[1154576])
      ref i_x[2077794]:string[26] "temp"
      (2077798 'move' i_x[2077794](2077796 'set reference' call_tmp[1154576]))
      (2077802 call deinit[30831] i_x[2077794])
      ref i_x[2077806]:string[26] "temp"
      (2077810 'move' i_x[2077806](2077808 'set reference' call_tmp[1154568]))
      (2077814 call deinit[30831] i_x[2077806])
    }
    (1154591 'move' ret[1154341] ret[1154349])
    label _end__cast[1154599]
    (1791416 '=' _retArg[1791414] ret[1154341])
    (1791418 return _void[55])
  }
  function _cast[1198542](const in arg x[1198546]:range(byteIndex,boundedHigh,false)[1184830], ref arg _retArg[1791736]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2335784]:string[26] "temp"
    (2335785 'move' " align " " align ")
    const-val local__str_literal_1075[2335778]:string[26] "temp"
    (2335779 'move' ".." "..")
    const-val ret[1198548]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198556]:string[26] "dead at end of block" "insert auto destroy"
    (1200089 call init[30760] ret[1198556])
    (1198604 call +=[38797] ret[1198556] "..")
    const-val call_tmp[1198627]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2219350]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2219352 'move' coerce_tmp[2219350](2219354 '.v' x[1198546] _high[1184797]))
    const-val ret[2219357]:byteIndex[28170] "dead after last mention" "RVV" "temp"
    val cpi[2219359]:byteIndex[28170] "dead at end of block" "insert auto destroy"
    (2219362 call init[28097] cpi[2219359])
    (2219364 '.=' cpi[2219359] _bindex[28091] coerce_tmp[2219350])
    (2219368 'move' ret[2219357] cpi[2219359])
    (1791675 'move' call_tmp[1198627] ret[2219357])
    const-val call_tmp[1198635]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789813]:string[26] "temp"
    (1198640 call _cast[1054552] call_tmp[1198627] ret_tmp[1789813])
    (1789816 'move' call_tmp[1198635] ret_tmp[1789813])
    (1198644 call +=[38797] ret[1198556] call_tmp[1198635])
    ref i_x[2078178]:string[26] "temp"
    (2078182 'move' i_x[2078178](2078180 'set reference' call_tmp[1198635]))
    (2078186 call deinit[30831] i_x[2078178])
    const-val alignCheckRange[1198706]:range(byteIndex,boundedHigh,false)[1184830] "dead at end of block" "insert auto destroy"
    (1198708 'move' alignCheckRange[1198706] x[1198546])
    (1198716 call normalizeAlignment[1199077] alignCheckRange[1198706])
    const-val call_tmp[1198744]:byteIndex[28170] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1791718]:byteIndex[28170] "temp"
    (1198749 call alignment[1192572] x[1198546] ret_tmp[1791718])
    (1791721 'move' call_tmp[1198744] ret_tmp[1791718])
    val ret[2206891]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2206893 'move' ret[2206891](2206895 '.v' call_tmp[1198744] _bindex[28091]))
    const-val call_tmp[1198767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198769 'move' call_tmp[1198767](1198772 call chpl__mod[1137327] ret[2206891] 1))
    const-val call_tmp[1198775]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1789987]:string[26] "temp"
    (1198780 call _cast[1063064] call_tmp[1198767] ret_tmp[1789987])
    (1789990 'move' call_tmp[1198775] ret_tmp[1789987])
    const-val call_tmp[1198783]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1787051]:string[26] "temp"
    (1198788 call +[38342] " align " call_tmp[1198775] ret_tmp[1787051])
    (1787054 'move' call_tmp[1198783] ret_tmp[1787051])
    (1198792 call +=[38797] ret[1198556] call_tmp[1198783])
    ref i_x[2078190]:string[26] "temp"
    (2078194 'move' i_x[2078190](2078192 'set reference' call_tmp[1198783]))
    (2078198 call deinit[30831] i_x[2078190])
    ref i_x[2078202]:string[26] "temp"
    (2078206 'move' i_x[2078202](2078204 'set reference' call_tmp[1198775]))
    (2078210 call deinit[30831] i_x[2078202])
    (1198798 'move' ret[1198548] ret[1198556])
    label _end__cast[1198806]
    (1791738 '=' _retArg[1791736] ret[1198548])
    (1791740 return _void[55])
  }
  function range(byteIndex,bounded,false)[1025703].normalizeAlignment[1083517](ref arg this[1083523]:range(byteIndex,bounded,false)[1025703]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083803 return _void[55])
  }
  function range(int(64),bounded,false)[1026725].normalizeAlignment[1119651](ref arg this[1119657]:range(int(64),bounded,false)[1026725]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1119937 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087476].normalizeAlignment[1136171](ref arg this[1136177]:range(int(64),boundedLow,false)[1087476]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136457 return _void[55])
  }
  function range(byteIndex,boundedLow,false)[1143314].normalizeAlignment[1154870](ref arg this[1154876]:range(byteIndex,boundedLow,false)[1143314]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155156 return _void[55])
  }
  function range(byteIndex,boundedHigh,false)[1184830].normalizeAlignment[1199077](ref arg this[1199083]:range(byteIndex,boundedHigh,false)[1184830]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199363 return _void[55])
  }
  function chpl__mod[1137327](const in arg dividend[1137329]:int(64)[13], const in arg modulus[1137331]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_76[2335512]:string[26] "temp"
    (2335513 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137333]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2159078]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2159080]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2159082 'move' call_tmp[2159080](2159084 '<' modulus[1137331] 0))
    if call_tmp[2159080]
    {
      const-val call_tmp[2159089]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2159091 'move' call_tmp[2159089](2159093 'u-' modulus[1137331]))
      (2159095 'move' tmp[2159078] call_tmp[2159089])
    }
    {
      (2159099 'move' tmp[2159078] modulus[1137331])
    }
    const-val call_tmp[2158691]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158693 'move' call_tmp[2158691](2158695 '==' tmp[2159078] 0))
    if call_tmp[2158691]
    {
      (2158701 call halt[154067] "Attempt to compute a modulus by zero")
    }
    const-val call_tmp[2158704]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158706 'move' call_tmp[2158704](2158708 '%' dividend[1137329] tmp[2159078]))
    val tmp[1137380]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137382 'move' tmp[1137380] call_tmp[2158704])
    const-val call_tmp[2062245]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062247 'move' call_tmp[2062245](2062249 '<' call_tmp[2158704] 0))
    if call_tmp[2062245]
    {
      ref i_lhs[2122012]:int(64)[13] "temp"
      (2122016 'move' i_lhs[2122012](2122014 'set reference' tmp[1137380]))
      (2122019 '+=' i_lhs[2122012] tmp[2159078])
    }
    (1137429 'move' ret[1137333] tmp[1137380])
    label _end_chpl__mod[1137437]
    (1137439 return ret[1137333])
  }
  function chpl__add[1093283](const in arg a[1093285]:int(64)[13], const in arg b[1093290]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1093294]:int(64)[13] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2070654]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2070656 'move' call_tmp[2070654](2070658 '>' a[1093285] 0))
    val tmp[1093360]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2070654]
    {
      const-val call_tmp[2070669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070671 'move' call_tmp[2070669](2070673 '>' b[1093290] 0))
      (1093393 'move' tmp[1093360] call_tmp[2070669])
    }
    {
      (1093399 'move' tmp[1093360] 0)
    }
    val tmp[1093421]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093360]
    {
      const-val call_tmp[2165883]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165885 'move' call_tmp[2165883](2165887 '-' 9223372036854775807 a[1093285]))
      const-val call_tmp[2070679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2070681 'move' call_tmp[2070679](2070683 '>' b[1093290] call_tmp[2165883]))
      (1093475 'move' tmp[1093421] call_tmp[2070679])
    }
    {
      (1093481 'move' tmp[1093421] 0)
    }
    if tmp[1093421]
    {
      (1093503 'move' ret[1093294] 9223372036854775807)
      gotoReturn _end_chpl__add[1094227] _end_chpl__add[1094227]
    }
    const-val call_tmp[2062175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2062177 'move' call_tmp[2062175](2062179 '<' a[1093285] 0))
    val tmp[1093533]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if call_tmp[2062175]
    {
      const-val call_tmp[2062185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2062187 'move' call_tmp[2062185](2062189 '<' b[1093290] 0))
      (1093566 'move' tmp[1093533] call_tmp[2062185])
    }
    {
      (1093572 'move' tmp[1093533] 0)
    }
    val tmp[1093594]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093533]
    {
      const-val call_tmp[2165853]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165855 'move' call_tmp[2165853](2165857 '-' -9223372036854775808 a[1093285]))
      const-val call_tmp[2074709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2074711 'move' call_tmp[2074709](2074713 '<' b[1093290] call_tmp[2165853]))
      (1093648 'move' tmp[1093594] call_tmp[2074709])
    }
    {
      (1093654 'move' tmp[1093594] 0)
    }
    if tmp[1093594]
    {
      (1093676 'move' ret[1093294] -9223372036854775808)
      gotoReturn _end_chpl__add[1094227] _end_chpl__add[1094227]
    }
    const-val call_tmp[2072337]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2072339 'move' call_tmp[2072337](2072341 '+' a[1093285] b[1093290]))
    (1094223 'move' ret[1093294] call_tmp[2072337])
    label _end_chpl__add[1094227]
    (1094229 return ret[1093294])
  }
  function chpl__addRangeStrides[1104938](const in arg start[1104940]:int(64)[13], const in arg stride[1104942]:int(64)[13], const in arg count[1104944]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105408]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105410 'move' call_tmp[1105408](1105413 call mul[1105446] stride[1104942] count[1104944]))
    const-val call_tmp[1105416]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105418 'move' call_tmp[1105416](1105421 call add[1105833] start[1104940] call_tmp[1105408]))
    (1105443 return call_tmp[1105416])
  }
  function absSameType[1090753](const in arg str[1090755]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    label _end_absSameType[1090843]
    (1090845 return 1)
  }
  function mul[1105446](const in arg a[1105448]:int(64)[13], const in arg b[1105450]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2158533]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158535 'move' call_tmp[2158533](2158537 '*' a[1105448] b[1105450]))
    (1105543 return call_tmp[2158533])
  }
  function add[1105833](const in arg a[1105835]:int(64)[13], const in arg b[1105837]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2072447]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2072449 'move' call_tmp[2072447](2072451 '+' a[1105835] b[1105837]))
    (1105930 return call_tmp[2072447])
  }
}