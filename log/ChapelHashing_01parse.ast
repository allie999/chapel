AST dump for ChapelHashing after pass parse.
Module use list: 

{
  (155411 'use' ChapelBase)
  function chpl__defaultHashWrapper[155418](arg x[155416]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      const hash[155425] "const"(155424 call chpl__defaultHash x)
      (155428 'end of statement')
    }
    (155440 return(155438 call _cast int[13](155435 call & hash(155434 call max int[13]))))
  }
  { scopeless type
    int[13]
  }
  function _gen_key[155451](arg i[155448] :
  uint[115]) : _unknown[51]
  {
    { scopeless
      unknown key[155455] i
      (155458 'end of statement')
    }
    (155470 call = key(155468 call +(155462 call ~ key)(155466 call << key 21)))
    (155481 call = key(155479 call ^ key(155477 call >> key 24)))
    (155498 call = key(155496 call +(155490 call + key(155488 call << key 3))(155494 call << key 8)))
    (155509 call = key(155507 call ^ key(155505 call >> key 14)))
    (155526 call = key(155524 call +(155518 call + key(155516 call << key 2))(155522 call << key 4)))
    (155537 call = key(155535 call ^ key(155533 call >> key 28)))
    (155548 call = key(155546 call + key(155544 call << key 31)))
    (155552 return key)
  }
  { scopeless type
    uint[115]
  }
  function _gen_key[155563](arg i[155560] :
  int[13]) : _unknown[51]
  {
    (155573 return(155572 call _gen_key(155569 call _cast uint[115] i)))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHashCombine[155585](arg a[155582] :
  uint[115], arg b[155588] :
  uint[115], arg fieldnum[155592] :
  int[13]) : _unknown[51] "inline"
  {
    function chpl_bitops_rotl_64[155605](arg x[155602] :
    (155601 call uint[115] 64), arg n[155611] :
    (155610 call uint[115] 64)) : _unknown[51] "extern" "local args" "no fn body"
    {
    }
    { scopeless type
      (155617 call uint[115] 64)
    }
    { scopeless
      unknown n[155630](155628 call _cast uint[115](155625 call + 17 fieldnum)) uint[115]
      (155633 'end of statement')
    }
    (155645 return(155644 call _gen_key(155641 call ^ a(155640 call chpl_bitops_rotl_64 b n))))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155656](arg b[155653] :
  bool[10]) : _unknown[51] "inline"
  {
    if(155666 call _cond_test b)
    {
      { scopeless
        (155661 return 0)
      }
    }
    {
      { scopeless
        (155664 return 1)
      }
    }
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155685](arg i[155682] :
  (155681 call int[13] 64)) : _unknown[51] "inline"
  {
    (155692 return(155691 call _gen_key i))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155707](arg u[155704] :
  (155703 call uint[115] 64)) : _unknown[51] "inline"
  {
    (155714 return(155713 call _gen_key u))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155724](arg e[155722]:_any[178](?)) : _unknown[51] "inline"
  {
    (155737 return(155736 call _gen_key(155734 call chpl__enumToOrder e)))
  }
  where {
    (155729 call isEnum e)
  }
  function chpl__defaultHash[155749](arg f[155746] :
  real[16]) : _unknown[51] "inline"
  {
    (155775 return(155774 call _gen_key(155772 'real2int' f)))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155787](arg c[155784] :
  complex[140]) : _unknown[51] "inline"
  {
    (155809 return(155808 call _gen_key(155805 call ^(155797 'real2int'(155794 call . c c"re"))(155804 'real2int'(155801 call . c c"im")))))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155821](arg a[155818] :
  imag[130]) : _unknown[51] "inline"
  {
    (155834 return(155833 call _gen_key(155831 'real2int'(155830 call _i2r a))))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155846](arg u[155843] :
  chpl_taskID_t) : _unknown[51] "inline"
  {
    (155859 return(155858 call _gen_key(155855 call _cast(155854 call int[13] 64) u)))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155873](arg l[155870] :
  (155867 call chpl__buildArrayRuntimeType nil[44])) : _unknown[51] "inline"
  {
    { scopeless
      unknown hash[155878] 0 uint[115]
      (155881 'end of statement')
    }
    { scopeless
      unknown i[155884] 1
      (155887 'end of statement')
    }
    {
      unknown _indexOfInterest[155909] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[155910] "expr temp" "temp"
      (155919 'move' _iterator[155910](155917 call _getIterator l))
      Defer
      {
        {
          (155935 call _freeIterator _iterator[155910])
        }
      }
      { scopeless type
        (155924 'move' _indexOfInterest[155909](155921 call iteratorIndex _iterator[155910]))
      }
      ForLoop[155911]
      {
        unknown obj[155928] "index var" "insert auto destroy"
        (155930 'move' obj[155928] _indexOfInterest[155909])
        {
          (155900 call = hash(155899 call chpl__defaultHashCombine(155895 call chpl__defaultHash obj) hash i))
          (155906 call += i 1)
        }
        label _continueLabel[155914]
        _indexOfInterest[155909]
        _iterator[155910]
      }
      label _breakLabel[155915]
    }
    (155943 return hash)
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155956](arg o[155953] :
  (155952 'to borrowed class from unknown'(155951 'to nilable class from type' object))) : _unknown[51] "inline"
  {
    (155982 return(155981 call _gen_key(155979 'object2int' o)))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[155994](arg l[155991] :
  locale[28]) : _unknown[51] "inline"
  {
    (156007 return(156006 call _gen_key(156004 'object2int'(156001 call . l c"_value"))))
  }
  { scopeless type
    uint[115]
  }
  function chpl__defaultHash[156019](arg r[156016] :
  range) : _unknown[51] "inline"
  {
    (156023 'use' Reflection)
    { scopeless
      unknown ret[156027] uint[115]
      (156030 'end of statement')
    }
    {
      unknown i[156125] 0
      unknown tmp[156126] "maybe param" "temp"
      (156138 'move' tmp[156126](156136 call chpl_compute_low_param_loop_bound 1(156036 call numImplementationFields(156034 'typeof' r))))
      unknown tmp[156127] "maybe param" "temp"
      (156148 'move' tmp[156127](156146 call chpl_compute_high_param_loop_bound 1(156143 call numImplementationFields(156144 'typeof' r))))
      unknown tmp[156128] "maybe param" "temp"
      (156151 'move' tmp[156128] 1)
      ParamForLoop[156153]
      { i[156125] tmp[156126] tmp[156127] tmp[156128]
        {
          if(156120 call _cond_test(156075 call &&(156061 call &&(156048 call ==(156046 call isParam(156044 call getImplementationField r i)) 0)(156059 call ==(156057 call isType(156055 call getImplementationField r i)) 0))(156073 call ==(156071 call isNothingType(156069 'typeof'(156068 call getImplementationField r i))) 0)))
          {
            { scopeless
              const field[156082] "const" "ref var"(156081 call getImplementationField r i)
              (156085 'end of statement')
            }
            { scopeless
              const fieldHash[156091] "const"(156090 call chpl__defaultHash field)
              (156094 'end of statement')
            }
            if(156114 call _cond_test(156097 call == i 1))
            {
              { scopeless
                (156101 call = ret fieldHash)
              }
            }
            {
              { scopeless
                (156111 call = ret(156110 call chpl__defaultHashCombine fieldHash ret i))
              }
            }
          }
        }
      }
      label _unused_continueLabel[156130]
      label _breakLabel[156129]
    }
    (156163 return ret)
  }
  { scopeless type
    uint[115]
  }
  function chpl__validDefaultAssocDomIdxType[156172](arg idxType[156170]:_any[178](?)) param : _unknown[51]
  {
    { scopeless
      (156175 return 0)
    }
  }
  function chpl__validDefaultAssocDomIdxType[156184](arg idxType[156182]:_any[178](?)) param : _unknown[51]
  {
    (156269 return 1)
  }
  where {
    (156266 call ||(156260 call ||(156254 call ||(156248 call ||(156242 call ||(156236 call ||(156230 call ||(156224 call ||(156218 call ||(156212 call ||(156206 call ||(156200 call ||(156194 call ||(156189 call isBoolType idxType)(156193 call isIntType idxType))(156199 call isUintType idxType))(156205 call isRealType idxType))(156211 call isImagType idxType))(156217 call isComplexType idxType))(156222 call == idxType chpl_taskID_t))(156228 call == idxType string[26]))(156234 call == idxType bytes[24]))(156240 call == idxType c_string))(156247 call isClassType idxType))(156253 call isEnumType idxType))(156259 call isTupleType idxType))(156265 call isRecordType idxType))
  }
}