AST dump for ChapelRange after pass codegen.
Module use list: ChapelBase SysBasic HaltWrappers Math DSIUtil 

{
  function chpl__init_ChapelRange[415994](const in arg _ln[2619232]:int(64)[13], in arg _fn[2619234]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelRange_p[2590934]
    {
      goto _exit_chpl__init_ChapelRange[2590971] _exit_chpl__init_ChapelRange[2590971]
    }
    ref refIndentLevel[2590957]:_ref(int(32))[936687] "temp"
    (2590955 call printModuleInit[20429] c"%*s\n" c"ChapelRange" 11 _ln[2619232] _fn[2619234])
    (2590961 'move' refIndentLevel[2590957](2590960 'addr of' moduleInitLevel[20419]))
    (2590964 '+=' refIndentLevel[2590957] 1)
    (2590940 'move' chpl__init_ChapelRange_p[2590934] 1)
    {
      (2589950 call chpl__init_ChapelBase[415937] _ln[2619232] _fn[2619234])
      (2589952 call chpl__init_SysBasic[416147] _ln[2619232] _fn[2619234])
      (2589954 call chpl__init_HaltWrappers[416132] _ln[2619232] _fn[2619234])
      (2589956 call chpl__init_Math[416141] _ln[2619232] _fn[2619234])
      (2589958 call chpl__init_DSIUtil[416153] _ln[2619232] _fn[2619234])
    }
    (2590967 '-=' refIndentLevel[2590957] 1)
    label _exit_chpl__init_ChapelRange[2590971]
    (512167 return _void[55])
  }
  type BoundedRangeType[64216] def bounded[64208]:BoundedRangeType[64216] def boundedLow[64210]:BoundedRangeType[64216] def boundedHigh[64212]:BoundedRangeType[64216] def boundedNone[64214]:BoundedRangeType[64216]
  type range(byteIndex,bounded,false)[1025853] val _low[1025815]:int(64)[13] val _high[1025820]:int(64)[13]
  type range(byteIndex,boundedLow,false)[1143464] val _low[1143426]:int(64)[13] val _high[1143431]:int(64)[13]
  type range(byteIndex,boundedHigh,false)[1184980] val _low[1184942]:int(64)[13] val _high[1184947]:int(64)[13]
  type range(int(64),bounded,false)[1026875] val _low[1026837]:int(64)[13] val _high[1026842]:int(64)[13]
  type range(int(64),boundedLow,false)[1087626] val _low[1087588]:int(64)[13] val _high[1087593]:int(64)[13]
  type range(int(64),boundedHigh,false)[1187490] val _low[1187452]:int(64)[13] val _high[1187457]:int(64)[13]
  function _ref(range(int(64),bounded,false))[1026919].init[1026098](ref arg this[1026104]:_ref(range(int(64),bounded,false))[1026919], const in arg _low[1026125]:int(64)[13], const in arg _high[1026134]:int(64)[13], const in arg _stride[1026142]:int(64)[13], const in arg _alignment[1026151]:int(64)[13], const in arg _aligned[1026155]:bool[10], const in arg _ln[2619968]:int(64)[13], in arg _fn[2619970]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1026396 '.=' this[1026104] _low[1026837] _low[1026125])
    (1026428 '.=' this[1026104] _high[1026842] _high[1026134])
    (1026711 call assert[210365](2180276 '==' _stride[1026142] 1) _ln[2619968] _fn[2619970])
    (1026714 return _void[55])
  }
  function _ref(range(byteIndex,bounded,false))[1025862].init[1028769](ref arg this[1028775]:_ref(range(byteIndex,bounded,false))[1025862], const  ref arg _low[1028796]:_ref(byteIndex)[948820], const  ref arg _high[1028805]:_ref(byteIndex)[948820], const in arg _stride[1028813]:int(64)[13], const  ref arg _alignment[1028822]:_ref(byteIndex)[948820], const in arg _aligned[1028826]:bool[10], const in arg _ln[2619974]:int(64)[13], in arg _fn[2619976]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1028904 '.=' this[1028775] _low[1025815](2329733 '.v' _low[1028796] _bindex[28094]))
    (1028936 '.=' this[1028775] _high[1025820](2329743 '.v' _high[1028805] _bindex[28094]))
    (1029219 call assert[210365](2180291 '==' _stride[1028813] 1) _ln[2619974] _fn[2619976])
    (1029222 return _void[55])
  }
  function _ref(range(int(64),boundedLow,false))[1087670]._local_init[2544459](ref arg this[2544461]:_ref(range(int(64),boundedLow,false))[1087670], const in arg _low[2544463]:int(64)[13], const in arg _high[2544465]:int(64)[13], const in arg _stride[2544467]:int(64)[13], const in arg _alignment[2544469]:int(64)[13], const in arg _aligned[2544471]:bool[10], const in arg _ln[2628158]:int(64)[13], in arg _fn[2628160]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2544474 '.=' this[2544461] _low[1087588] _low[2544463])
    (2544478 '.=' this[2544461] _high[1087593] _high[2544465])
    (2544490 call _local_assert[2548779](2544486 '==' _stride[2544467] 1) _ln[2628158] _fn[2628160])
    (2544492 return _void[55])
  }
  function _ref(range(int(64),boundedLow,false))[1087670].init[1087073](ref arg this[1087079]:_ref(range(int(64),boundedLow,false))[1087670], const in arg _low[1087100]:int(64)[13], const in arg _high[1087109]:int(64)[13], const in arg _stride[1087117]:int(64)[13], const in arg _alignment[1087126]:int(64)[13], const in arg _aligned[1087130]:bool[10], const in arg _ln[2619980]:int(64)[13], in arg _fn[2619982]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1087199 '.=' this[1087079] _low[1087588] _low[1087100])
    (1087231 '.=' this[1087079] _high[1087593] _high[1087109])
    (1087514 call assert[210365](2180406 '==' _stride[1087117] 1) _ln[2619980] _fn[2619982])
    (1087517 return _void[55])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143508].init[1142911](ref arg this[1142917]:_ref(range(byteIndex,boundedLow,false))[1143508], const  ref arg _low[1142938]:_ref(byteIndex)[948820], const  ref arg _high[1142947]:_ref(byteIndex)[948820], const in arg _stride[1142955]:int(64)[13], const  ref arg _alignment[1142964]:_ref(byteIndex)[948820], const in arg _aligned[1142968]:bool[10], const in arg _ln[2619986]:int(64)[13], in arg _fn[2619988]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1143037 '.=' this[1142917] _low[1143426](2329789 '.v' _low[1142938] _bindex[28094]))
    (1143069 '.=' this[1142917] _high[1143431](2329799 '.v' _high[1142947] _bindex[28094]))
    (1143352 call assert[210365](2180536 '==' _stride[1142955] 1) _ln[2619986] _fn[2619988])
    (1143355 return _void[55])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185024].init[1184427](ref arg this[1184433]:_ref(range(byteIndex,boundedHigh,false))[1185024], const  ref arg _low[1184454]:_ref(byteIndex)[948820], const  ref arg _high[1184463]:_ref(byteIndex)[948820], const in arg _stride[1184471]:int(64)[13], const  ref arg _alignment[1184480]:_ref(byteIndex)[948820], const in arg _aligned[1184484]:bool[10], const in arg _ln[2619992]:int(64)[13], in arg _fn[2619994]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1184553 '.=' this[1184433] _low[1184942](2329861 '.v' _low[1184454] _bindex[28094]))
    (1184585 '.=' this[1184433] _high[1184947](2329871 '.v' _high[1184463] _bindex[28094]))
    (1184868 call assert[210365](2180611 '==' _stride[1184471] 1) _ln[2619992] _fn[2619994])
    (1184871 return _void[55])
  }
  function _ref(range(int(64),boundedHigh,false))[1187499].init[1188774](ref arg this[1188780]:_ref(range(int(64),boundedHigh,false))[1187499], const in arg _low[1188801]:int(64)[13], const in arg _high[1188810]:int(64)[13], const in arg _stride[1188818]:int(64)[13], const in arg _alignment[1188827]:int(64)[13], const in arg _aligned[1188831]:bool[10], const in arg _ln[2619998]:int(64)[13], in arg _fn[2620000]:int(32)[95]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1188900 '.=' this[1188780] _low[1187452] _low[1188801])
    (1188932 '.=' this[1188780] _high[1187457] _high[1188810])
    (1189215 call assert[210365](2180626 '==' _stride[1188818] 1) _ln[2619998] _fn[2620000])
    (1189218 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1026919]._local_init[2548810](ref arg this[2548812]:_ref(range(int(64),bounded,false))[1026919], const in arg _low[2548814]:int(64)[13], const in arg _high[2548816]:int(64)[13], const in arg _stride[2548818]:int(64)[13], const in arg _aligned[2548820]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2548823 '.=' this[2548812] _low[1026837] _low[2548814])
    (2548827 '.=' this[2548812] _high[1026842] _high[2548816])
    (2548831 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1026919].init[1091325](ref arg this[1091331]:_ref(range(int(64),bounded,false))[1026919], const in arg _low[1091352]:int(64)[13], const in arg _high[1091361]:int(64)[13], const in arg _stride[1091363]:int(64)[13], const in arg _aligned[1091367]:bool[10]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1091997 '.=' this[1091331] _low[1026837] _low[1091352])
    (1092029 '.=' this[1091331] _high[1026842] _high[1091361])
    (1092195 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1026919]._local_init[2548982](ref arg this[2548984]:_ref(range(int(64),bounded,false))[1026919], const in arg _low[2548986]:int(64)[13], const in arg _high[2548988]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (2548991 '.=' this[2548984] _low[1026837] _low[2548986])
    (2548995 '.=' this[2548984] _high[1026842] _high[2548988])
    (2548999 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1026919].init[1094536](ref arg this[1094542]:_ref(range(int(64),bounded,false))[1026919], const in arg _low[1094563]:int(64)[13], const in arg _high[1094572]:int(64)[13]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free" "no return value for void"
  {
    (1095136 '.=' this[1094542] _low[1026837] _low[1094563])
    (1095168 '.=' this[1094542] _high[1026842] _high[1094572])
    (1095334 return _void[55])
  }
  function chpl_build_bounded_range[455180](const in arg low[455187]:int(64)[13], const in arg high[455193]:int(64)[13], ref arg _retArg[1865424]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631940]:int(64)[13], in arg _fn[2631942]:int(32)[95]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val call_tmp[616846]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1026086]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "temp"
    (1026089 call init[1026098] initTemp[1026086] low[455187] high[455193] 1 0 0 _ln[2631940] _fn[2631942])
    (616849 'move' call_tmp[616846] initTemp[1026086])
    (1865426 '=' _retArg[1865424] call_tmp[616846])
    (1865428 return _void[55])
  }
  function _local_chpl_build_low_bounded_range[2541304](const in arg low[2541306]:int(64)[13], ref arg _retArg[2541308]:_ref(range(int(64),boundedLow,false))[1087670], const in arg _ln[2634690]:int(64)[13], in arg _fn[2634692]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2541311]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2541313]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "delay instantiation" "temp"
    (2541316 call _local_init[2544459] initTemp[2541313] low[2541306] 0 1 0 0 _ln[2634690] _fn[2634692])
    (2541323 'move' call_tmp[2541311] initTemp[2541313])
    (2541326 '=' _retArg[2541308] call_tmp[2541311])
    (2541329 return _void[55])
  }
  function chpl_build_low_bounded_range[1087019](const in arg low[1087021]:int(64)[13], ref arg _retArg[1867276]:_ref(range(int(64),boundedLow,false))[1087670], const in arg _ln[2632046]:int(64)[13], in arg _fn[2632048]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1087044]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1087062]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "delay instantiation" "temp"
    (1087065 call init[1087073] initTemp[1087062] low[1087021] 0 1 0 0 _ln[2632046] _fn[2632048])
    (1087046 'move' call_tmp[1087044] initTemp[1087062])
    (1867278 '=' _retArg[1867276] call_tmp[1087044])
    (1867280 return _void[55])
  }
  function range(int(64),bounded,false)[1026875].alignment[1034312](const in arg this[1034318]:range(int(64),bounded,false)[1026875]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2329379]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2572674 'move' coerce_tmp[2329379](2329383 '.v' this[1034318] _low[1026837]))
    (1034440 return coerce_tmp[2329379])
  }
  function range(int(64),boundedLow,false)[1087626].alignment[1128181](const in arg this[1128187]:range(int(64),boundedLow,false)[1087626]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[2338761]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2573837 'move' coerce_tmp[2338761](2338765 '.v' this[1128187] _low[1087588]))
    (1128309 return coerce_tmp[2338761])
  }
  function range(byteIndex,boundedLow,false)[1143464].alignment[1148299](const in arg this[1148305]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868242]:_ref(byteIndex)[948820]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val coerce_tmp[2339450]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2573915 'move' coerce_tmp[2339450](2339454 '.v' this[1148305] _low[1143426]))
    const-val ret[2339457]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2339459]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2339462 call init[28100] cpi[2339459])
    (2339464 '.=' cpi[2339459] _bindex[28094] coerce_tmp[2339450])
    (2339468 'move' ret[2339457] cpi[2339459])
    (1868244 '=' _retArg[1868242] ret[2339457])
    (1868246 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187490].alignment[1190655](const in arg this[1190661]:range(int(64),boundedHigh,false)[1187490]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved" "fn synchronization free"
  {
    (1190685 return 0)
  }
  function range(byteIndex,boundedHigh,false)[1184980].alignment[1192722](const in arg this[1192728]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868564]:_ref(byteIndex)[948820]) : void[4] "fast on" "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "no parens" "resolved"
  {
    const-val ret[2343186]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2343188]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2343191 call init[28100] cpi[2343188])
    (2343193 '.=' cpi[2343188] _bindex[28094] 0)
    (2343197 'move' ret[2343186] cpi[2343188])
    (1868566 '=' _retArg[1868564] ret[2343186])
    (1868568 return _void[55])
  }
  function range(int(64),bounded,false)[1026875]._local_size[2541399](const in arg this[2541401]:range(int(64),bounded,false)[1026875], const in arg _ln[2627314]:int(64)[13], in arg _fn[2627316]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "local fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2541404]:string[26] "temp"
    (2541406 'move' local__str_literal_71[2541404] "Attempt to divide by zero")
    val ret[2541409]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2541411]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2587283 'move' ret[2541411](2541415 '.v' this[2541401] _high[1026842]))
    val ret[2541418]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2587289 'move' ret[2541418](2541422 '.v' this[2541401] _low[1026837]))
    if(2541429 '>' ret[2541418] ret[2541411])
    {
      (2541434 'move' ret[2541409] 0)
      gotoReturn _end_size[2541477] _end_size[2541477]
    }
    const-val call_tmp[2541440]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2541442 'move' call_tmp[2541440](2541444 '-' ret[2541411] ret[2541418]))
    if(2541451 '==' 1 0)
    {
      (2541457 call _local_halt[2526766] local__str_literal_71[2541404] _ln[2627314] _fn[2627316])
    }
    const-val call_tmp[2541460]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2541462 'move' call_tmp[2541460](2541464 '/' call_tmp[2541440] 1))
    (2541474 'move' ret[2541409](2642370 'cast' int(64)[13](2541471 '+' call_tmp[2541460] 1)))
    label _end_size[2541477]
    (2541479 return ret[2541409])
  }
  function range(int(64),bounded,false)[1026875].size[1035850](const in arg this[1035856]:range(int(64),bounded,false)[1026875], const in arg _ln[2624442]:int(64)[13], in arg _fn[2624444]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no parens" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2515713]:string[26] "temp"
    (2515714 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val ret[1035863]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[2330733]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2572914 'move' ret[2330733](2330737 '.v' this[1035856] _high[1026842]))
    val ret[2330765]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2572920 'move' ret[2330765](2330769 '.v' this[1035856] _low[1026837]))
    if(2187427 '>' ret[2330765] ret[2330733])
    {
      (1035968 'move' ret[1035863] 0)
      gotoReturn _end_size[1036072] _end_size[1036072]
    }
    const-val call_tmp[2190627]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2190629 'move' call_tmp[2190627](2190631 '-' ret[2330733] ret[2330765]))
    if(2279731 '==' 1 0)
    {
      (2279737 call halt[154111] "Attempt to divide by zero" _ln[2624442] _fn[2624444])
    }
    const-val call_tmp[2279740]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279742 'move' call_tmp[2279740](2279744 '/' call_tmp[2190627] 1))
    (1037028 'move' ret[1035863](2641782 'cast' int(64)[13](2183350 '+' call_tmp[2279740] 1)))
    label _end_size[1036072]
    (1036074 return ret[1035863])
  }
  function ==[1041973](const in arg r1[1041975]:range(int(64),bounded,false)[1026875], const in arg r2[1041977]:range(int(64),bounded,false)[1026875], const in arg _ln[2633842]:int(64)[13], in arg _fn[2633844]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1042002]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1042111]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042113 'move' call_tmp[1042111](1042116 call size[1035850] r1[1041975] _ln[2633842] _fn[2633844]))
    const-val call_tmp[1042124]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1042126 'move' call_tmp[1042124](1042129 call size[1035850] r2[1041977] _ln[2633842] _fn[2633844]))
    if(2177136 '!=' call_tmp[1042111] call_tmp[1042124])
    {
      (1042155 'move' ret[1042002] 0)
      gotoReturn _end_==[1042472] _end_==[1042472]
    }
    if(2180346 '==' call_tmp[1042111] 0)
    {
      (1042180 'move' ret[1042002] 1)
      gotoReturn _end_==[1042472] _end_==[1042472]
    }
    if(2177146 '!='(2330912 '.v' r1[1041975] _low[1026837])(2330922 '.v' r2[1041977] _low[1026837]))
    {
      (1042221 'move' ret[1042002] 0)
      gotoReturn _end_==[1042472] _end_==[1042472]
    }
    if(2180361 '==' call_tmp[1042111] 1)
    {
      (1042246 'move' ret[1042002] 1)
      gotoReturn _end_==[1042472] _end_==[1042472]
    }
    (1042295 'move' ret[1042002] 1)
    label _end_==[1042472]
    (1042474 return ret[1042002])
  }
  function !=[1801913](const in arg r1[1801915]:range(int(64),bounded,false)[1026875], const in arg r2[1801917]:range(int(64),bounded,false)[1026875], const in arg _ln[2636054]:int(64)[13], in arg _fn[2636056]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1801929]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1801931 'move' call_tmp[1801929](1801934 call ==[1041973] r1[1801915] r2[1801917] _ln[2636054] _fn[2636056]))
    const-val call_tmp[2176511]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2176513 'move' call_tmp[2176511](2176515 '!' call_tmp[1801929]))
    (1801948 return call_tmp[2176511])
  }
  function range(int(64),bounded,false)[1026875].safeCast[1297078](const in arg this[1297084]:range(int(64),bounded,false)[1026875], ref arg _retArg[1870986]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631996]:int(64)[13], in arg _fn[2631998]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1297088]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    val tmp[1297113]:range(int(64),bounded,false)[1026875] "dead at end of block" "insert auto destroy"
    (1297487 call init[1026098] tmp[1297113] 1 0 1 0 0 _ln[2631996] _fn[2631998])
    (2507625 '.=' tmp[1297113] _low[1026837](2507632 '.v' this[1297084] _low[1026837]))
    (2507639 '.=' tmp[1297113] _high[1026842](2507646 '.v' this[1297084] _high[1026842]))
    (1297419 'move' ret[1297088] tmp[1297113])
    (1870988 '=' _retArg[1870986] ret[1297088])
    (1870990 return _void[55])
  }
  function _cast[1027623](const in arg r[1027627]:range(int(64),bounded,false)[1026875], ref arg _retArg[1866240]:_ref(range(byteIndex,bounded,false))[1025862], const in arg _ln[2632034]:int(64)[13], in arg _fn[2632036]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved"
  {
    const-val ret[1027629]:range(byteIndex,bounded,false)[1025853] "dead after last mention" "RVV" "temp"
    val tmp[1027639]:range(byteIndex,bounded,false)[1025853] "dead at end of block" "insert auto destroy"
    const-val default_arg__low[1029812]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2329936]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2329938]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2329941 call init[28100] cpi[2329938])
    (2329943 '.=' cpi[2329938] _bindex[28094] 1)
    (2329947 'move' ret[2329936] cpi[2329938])
    (1866249 'move' default_arg__low[1029812] ret[2329936])
    const-val default_arg__high[1029864]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2329963]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2329965]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2329968 call init[28100] cpi[2329965])
    (2329970 '.=' cpi[2329965] _bindex[28094] 0)
    (2329974 'move' ret[2329963] cpi[2329965])
    (1866261 'move' default_arg__high[1029864] ret[2329963])
    const-val default_arg__alignment[1029937]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val ret[2329996]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2329998]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2330001 call init[28100] cpi[2329998])
    (2330003 '.=' cpi[2329998] _bindex[28094] 0)
    (2330007 'move' ret[2329996] cpi[2329998])
    (1866273 'move' default_arg__alignment[1029937] ret[2329996])
    (1028760 call init[1028769] tmp[1027639] default_arg__low[1029812] default_arg__high[1029864] 1 default_arg__alignment[1029937] 0 _ln[2632034] _fn[2632036])
    (2504795 '.=' tmp[1027639] _low[1025815](2329363 '.v' r[1027627] _low[1026837]))
    (2504802 '.=' tmp[1027639] _high[1025820](2329613 '.v' r[1027627] _high[1026842]))
    (1027898 'move' ret[1027629] tmp[1027639])
    (1866242 '=' _retArg[1866240] ret[1027629])
    (1866244 return _void[55])
  }
  function _cast[1032544](const in arg r[1032548]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1866348]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631954]:int(64)[13], in arg _fn[2631956]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1032550]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    val tmp[1032560]:range(int(64),bounded,false)[1026875] "dead at end of block" "insert auto destroy"
    (1033104 call init[1026098] tmp[1032560] 1 0 1 0 0 _ln[2631954] _fn[2631956])
    const-val call_tmp[1032757]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2330110]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2572854 'move' coerce_tmp[2330110](2330114 '.v' r[1032548] _low[1025815]))
    const-val ret[2330117]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2330119]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2330122 call init[28100] cpi[2330119])
    (2330124 '.=' cpi[2330119] _bindex[28094] coerce_tmp[2330110])
    (2330128 'move' ret[2330117] cpi[2330119])
    (1866357 'move' call_tmp[1032757] ret[2330117])
    (2504880 '.=' tmp[1032560] _low[1026837](2187062 '.v' call_tmp[1032757] _bindex[28094]))
    const-val call_tmp[1032796]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2330218]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2572866 'move' coerce_tmp[2330218](2330222 '.v' r[1032548] _high[1025820]))
    const-val ret[2330225]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2330227]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2330230 call init[28100] cpi[2330227])
    (2330232 '.=' cpi[2330227] _bindex[28094] coerce_tmp[2330218])
    (2330236 'move' ret[2330225] cpi[2330227])
    (1866399 'move' call_tmp[1032796] ret[2330225])
    (2504889 '.=' tmp[1032560] _high[1026842](2187078 '.v' call_tmp[1032796] _bindex[28094]))
    (1032819 'move' ret[1032550] tmp[1032560])
    (1866350 '=' _retArg[1866348] ret[1032550])
    (1866352 return _void[55])
  }
  function _cast[1145874](const in arg r[1145878]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868142]:_ref(range(int(64),boundedLow,false))[1087670], const in arg _ln[2632052]:int(64)[13], in arg _fn[2632054]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1145880]:range(int(64),boundedLow,false)[1087626] "dead after last mention" "RVV" "temp"
    val tmp[1145890]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "insert auto destroy"
    (1146394 call init[1087073] tmp[1145890] 1 0 1 0 0 _ln[2632052] _fn[2632054])
    const-val call_tmp[1146087]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2339417]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2573909 'move' coerce_tmp[2339417](2339421 '.v' r[1145878] _low[1143426]))
    const-val ret[2339424]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2339426]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2339429 call init[28100] cpi[2339426])
    (2339431 '.=' cpi[2339426] _bindex[28094] coerce_tmp[2339417])
    (2339435 'move' ret[2339424] cpi[2339426])
    (1868151 'move' call_tmp[1146087] ret[2339424])
    (2506168 '.=' tmp[1145890] _low[1087588](2187144 '.v' call_tmp[1146087] _bindex[28094]))
    const-val call_tmp[1146126]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2339561]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2573927 'move' coerce_tmp[2339561](2339565 '.v' r[1145878] _high[1143431]))
    const-val ret[2339568]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2339570]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2339573 call init[28100] cpi[2339570])
    (2339575 '.=' cpi[2339570] _bindex[28094] coerce_tmp[2339561])
    (2339579 'move' ret[2339568] cpi[2339570])
    (1868193 'move' call_tmp[1146126] ret[2339568])
    (2506177 '.=' tmp[1145890] _high[1087593](2187160 '.v' call_tmp[1146126] _bindex[28094]))
    (1146149 'move' ret[1145880] tmp[1145890])
    (1868144 '=' _retArg[1868142] ret[1145880])
    (1868146 return _void[55])
  }
  function _cast[1187692](const in arg r[1187696]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868464]:_ref(range(int(64),boundedHigh,false))[1187499], const in arg _ln[2632070]:int(64)[13], in arg _fn[2632072]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1187698]:range(int(64),boundedHigh,false)[1187490] "dead after last mention" "RVV" "temp"
    val tmp[1187708]:range(int(64),boundedHigh,false)[1187490] "dead at end of block" "insert auto destroy"
    (1188765 call init[1188774] tmp[1187708] 1 0 1 0 0 _ln[2632070] _fn[2632072])
    const-val call_tmp[1187905]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2343221]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2574490 'move' coerce_tmp[2343221](2343225 '.v' r[1187696] _low[1184942]))
    const-val ret[2343228]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2343230]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2343233 call init[28100] cpi[2343230])
    (2343235 '.=' cpi[2343230] _bindex[28094] coerce_tmp[2343221])
    (2343239 'move' ret[2343228] cpi[2343230])
    (1868473 'move' call_tmp[1187905] ret[2343228])
    (2506509 '.=' tmp[1187708] _low[1187452](2187186 '.v' call_tmp[1187905] _bindex[28094]))
    const-val call_tmp[1187944]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2343351]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2574496 'move' coerce_tmp[2343351](2343355 '.v' r[1187696] _high[1184947]))
    const-val ret[2343358]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2343360]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2343363 call init[28100] cpi[2343360])
    (2343365 '.=' cpi[2343360] _bindex[28094] coerce_tmp[2343351])
    (2343369 'move' ret[2343358] cpi[2343360])
    (1868509 'move' call_tmp[1187944] ret[2343358])
    (2506518 '.=' tmp[1187708] _high[1187457](2187202 '.v' call_tmp[1187944] _bindex[28094]))
    (1187967 'move' ret[1187698] tmp[1187708])
    (1868466 '=' _retArg[1868464] ret[1187698])
    (1868468 return _void[55])
  }
  function range(int(64),bounded,false)[1026875].orderToIndex[1104101](const in arg this[1104107]:range(int(64),bounded,false)[1026875], const in arg ord[1104109]:int(64)[13], const in arg _ln[2621488]:int(64)[13], in arg _fn[2621490]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val local__str_literal_923[2516137]:string[26] "temp"
    (2516138 'move' " that is larger than the range's number of indices " " that is larger than the range's number of indices ")
    const-val local__str_literal_921[2516131]:string[26] "temp"
    (2516132 'move' "invoking orderToIndex on an integer " "invoking orderToIndex on an integer ")
    const-val local__str_literal_919[2516125]:string[26] "temp"
    (2516126 'move' "invoking orderToIndex on a negative integer: " "invoking orderToIndex on a negative integer: ")
    const-val local__str_literal_915[2516119]:string[26] "temp"
    (2516120 'move' "invoking orderToIndex on a range that has no first index" "invoking orderToIndex on a range that has no first index")
    val tmp[2337893]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2337890 '>'(2337876 '.v' this[1104107] _low[1026837])(2337883 '.v' this[1104107] _high[1026842]))
    {
      (2337897 'move' tmp[2337893] 0)
    }
    {
      (2337901 'move' tmp[2337893] 1)
    }
    if(2175876 '!' tmp[2337893])
    {
      (1104165 call boundsCheckHalt[210187] "invoking orderToIndex on a range that has no first index" _ln[2621488] _fn[2621490])
    }
    if(2177943 '<' ord[1104109] 0)
    {
      const-val call_tmp[1104215]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866736]:string[26] "temp"
      (1104220 call _cast[1063214] ord[1104109] ret_tmp[1866736] _ln[2621488] _fn[2621490])
      (1866739 'move' call_tmp[1104215] ret_tmp[1866736])
      const-val call_tmp[1104223]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863586]:string[26] "temp"
      wide-ref tmp[2553766]:__wide__ref_string[2519787] "temp"
      (2553770 'move' tmp[2553766](2553768 'set reference' call_tmp[1104215]))
      (1104228 call +[38345] "invoking orderToIndex on a negative integer: " tmp[2553766] ret_tmp[1863586] _ln[2621488] _fn[2621490])
      (1863589 'move' call_tmp[1104223] ret_tmp[1863586])
      (1104232 call boundsCheckHalt[210187] call_tmp[1104223] _ln[2621488] _fn[2621490])
      ref i_x[2194567]:_ref(string)[938000] "temp"
      (2194571 'move' i_x[2194567](2194569 'set reference' call_tmp[1104223]))
      wide-ref tmp[2564448]:__wide__ref_string[2519787] "temp"
      (2564451 'move' tmp[2564448] i_x[2194567])
      (2194575 call deinit[30834] tmp[2564448] _ln[2621488] _fn[2621490])
      ref i_x[2194579]:_ref(string)[938000] "temp"
      (2194583 'move' i_x[2194579](2194581 'set reference' call_tmp[1104215]))
      wide-ref tmp[2564454]:__wide__ref_string[2519787] "temp"
      (2564457 'move' tmp[2564454] i_x[2194579])
      (2194587 call deinit[30834] tmp[2564454] _ln[2621488] _fn[2621490])
    }
    const-val call_tmp[1104277]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104279 'move' call_tmp[1104277](1104282 call size[1035850] this[1104107] _ln[2621488] _fn[2621490]))
    if(2192419 '>=' ord[1104109] call_tmp[1104277])
    {
      const-val call_tmp[1104321]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866742]:string[26] "temp"
      (1104326 call _cast[1063214] ord[1104109] ret_tmp[1866742] _ln[2621488] _fn[2621490])
      (1866745 'move' call_tmp[1104321] ret_tmp[1866742])
      const-val call_tmp[1104329]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863592]:string[26] "temp"
      wide-ref tmp[2553773]:__wide__ref_string[2519787] "temp"
      (2553777 'move' tmp[2553773](2553775 'set reference' call_tmp[1104321]))
      (1104334 call +[38345] "invoking orderToIndex on an integer " tmp[2553773] ret_tmp[1863592] _ln[2621488] _fn[2621490])
      (1863595 'move' call_tmp[1104329] ret_tmp[1863592])
      const-val call_tmp[1104337]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863598]:string[26] "temp"
      wide-ref tmp[2553780]:__wide__ref_string[2519787] "temp"
      (2553784 'move' tmp[2553780](2553782 'set reference' " that is larger than the range's number of indices "))
      (1104342 call +[38345] call_tmp[1104329] tmp[2553780] ret_tmp[1863598] _ln[2621488] _fn[2621490])
      (1863601 'move' call_tmp[1104337] ret_tmp[1863598])
      const-val call_tmp[1104345]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1104347 'move' call_tmp[1104345](1104350 call size[1035850] this[1104107] _ln[2621488] _fn[2621490]))
      const-val call_tmp[1104353]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866748]:string[26] "temp"
      (1104358 call _cast[1063214] call_tmp[1104345] ret_tmp[1866748] _ln[2621488] _fn[2621490])
      (1866751 'move' call_tmp[1104353] ret_tmp[1866748])
      const-val call_tmp[1104361]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863604]:string[26] "temp"
      wide-ref tmp[2553787]:__wide__ref_string[2519787] "temp"
      (2553791 'move' tmp[2553787](2553789 'set reference' call_tmp[1104353]))
      (1104366 call +[38345] call_tmp[1104337] tmp[2553787] ret_tmp[1863604] _ln[2621488] _fn[2621490])
      (1863607 'move' call_tmp[1104361] ret_tmp[1863604])
      (1104370 call boundsCheckHalt[210187] call_tmp[1104361] _ln[2621488] _fn[2621490])
      ref i_x[2194591]:_ref(string)[938000] "temp"
      (2194595 'move' i_x[2194591](2194593 'set reference' call_tmp[1104361]))
      wide-ref tmp[2564460]:__wide__ref_string[2519787] "temp"
      (2564463 'move' tmp[2564460] i_x[2194591])
      (2194599 call deinit[30834] tmp[2564460] _ln[2621488] _fn[2621490])
      ref i_x[2194603]:_ref(string)[938000] "temp"
      (2194607 'move' i_x[2194603](2194605 'set reference' call_tmp[1104353]))
      wide-ref tmp[2564466]:__wide__ref_string[2519787] "temp"
      (2564469 'move' tmp[2564466] i_x[2194603])
      (2194611 call deinit[30834] tmp[2564466] _ln[2621488] _fn[2621490])
      ref i_x[2194615]:_ref(string)[938000] "temp"
      (2194619 'move' i_x[2194615](2194617 'set reference' call_tmp[1104337]))
      wide-ref tmp[2564472]:__wide__ref_string[2519787] "temp"
      (2564475 'move' tmp[2564472] i_x[2194615])
      (2194623 call deinit[30834] tmp[2564472] _ln[2621488] _fn[2621490])
      ref i_x[2194627]:_ref(string)[938000] "temp"
      (2194631 'move' i_x[2194627](2194629 'set reference' call_tmp[1104329]))
      wide-ref tmp[2564478]:__wide__ref_string[2519787] "temp"
      (2564481 'move' tmp[2564478] i_x[2194627])
      (2194635 call deinit[30834] tmp[2564478] _ln[2621488] _fn[2621490])
      ref i_x[2194639]:_ref(string)[938000] "temp"
      (2194643 'move' i_x[2194639](2194641 'set reference' call_tmp[1104321]))
      wide-ref tmp[2564484]:__wide__ref_string[2519787] "temp"
      (2564487 'move' tmp[2564484] i_x[2194639])
      (2194647 call deinit[30834] tmp[2564484] _ln[2621488] _fn[2621490])
    }
    const-val call_tmp[1104392]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1104394 'move' call_tmp[1104392](1104397 call chpl__addRangeStrides[1105088](2330900 '.v' this[1104107] _low[1026837]) 1 ord[1104109]))
    (1104424 return call_tmp[1104392])
  }
  function range(int(64),bounded,false)[1026875].this[1037509](const in arg this[1037515]:range(int(64),bounded,false)[1026875], const in arg other[1037517]:range(int(64),bounded,false)[1026875], ref arg _retArg[1866438]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631960]:int(64)[13], in arg _fn[2631962]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1039999]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553288 'move' coerce_tmp[1039999](2504913 '.v' this[1037515] _low[1026837]))
    (1038108 'noop')
    const-val coerce_tmp[1040012]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553294 'move' coerce_tmp[1040012](2504923 '.v' this[1037515] _high[1026842]))
    (1038162 'noop')
    const-val coerce_tmp[1040029]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553300 'move' coerce_tmp[1040029](2504933 '.v' other[1037517] _low[1026837]))
    (1038237 'noop')
    const-val coerce_tmp[1040042]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553306 'move' coerce_tmp[1040042](2504943 '.v' other[1037517] _high[1026842]))
    (1038291 'noop')
    const-val ret_tmp[1866444]:2*int(64)[1040117] "temp"
    (2491074 'set svec member' ret_tmp[1866444] 0 1)
    (2491078 'set svec member' ret_tmp[1866444] 1 0)
    (1038478 'noop')
    (1038490 'noop')
    val tmp[2261386]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2261392 '>' coerce_tmp[1039999] coerce_tmp[1040029])
    {
      (2261397 'move' tmp[2261386] coerce_tmp[1039999])
    }
    {
      (2261401 'move' tmp[2261386] coerce_tmp[1040029])
    }
    val tmp[2217331]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2217337 '<' coerce_tmp[1040012] coerce_tmp[1040042])
    {
      (2217342 'move' tmp[2217331] coerce_tmp[1040012])
    }
    {
      (2217346 'move' tmp[2217331] coerce_tmp[1040042])
    }
    (2514417 'noop')
    val tmp[1039222]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2175849 '!' 0)
    {
      (1039313 'move' tmp[1039222] 1)
    }
    {
      (1039319 'move' tmp[1039222] 0)
    }
    const-val call_tmp[1039395]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1041889]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "temp"
    (1041892 call init[1026098] initTemp[1041889] tmp[2261386] tmp[2217331] 1 0 tmp[1039222] _ln[2631960] _fn[2631962])
    (1039397 'move' call_tmp[1039395] initTemp[1041889])
    (1866440 '=' _retArg[1866438] call_tmp[1039395])
    (1866442 return _void[55])
  }
  function range(int(64),boundedLow,false)[1087626].this[1139030](const in arg this[1139036]:range(int(64),boundedLow,false)[1087626], const in arg other[1139038]:range(int(64),bounded,false)[1026875], ref arg _retArg[1867990]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631974]:int(64)[13], in arg _fn[2631976]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1141520]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553896 'move' coerce_tmp[1141520](2506100 '.v' this[1139036] _low[1087588]))
    (1139629 'noop')
    const-val coerce_tmp[1141533]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553902 'move' coerce_tmp[1141533](2506110 '.v' other[1139038] _high[1026842]))
    (1139683 'noop')
    const-val coerce_tmp[1141550]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553908 'move' coerce_tmp[1141550](2506120 '.v' other[1139038] _low[1026837]))
    (1139758 'noop')
    const-val coerce_tmp[1141563]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553914 'move' coerce_tmp[1141563](2506130 '.v' other[1139038] _high[1026842]))
    (1139812 'noop')
    const-val ret_tmp[1866462]:2*int(64)[1040117] "temp"
    (2491088 'set svec member' ret_tmp[1866462] 0 1)
    (2491092 'set svec member' ret_tmp[1866462] 1 0)
    (1139999 'noop')
    (1140011 'noop')
    val tmp[2261408]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2261414 '>' coerce_tmp[1141520] coerce_tmp[1141550])
    {
      (2261419 'move' tmp[2261408] coerce_tmp[1141520])
    }
    {
      (2261423 'move' tmp[2261408] coerce_tmp[1141550])
    }
    val tmp[2217353]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2217359 '<' coerce_tmp[1141533] coerce_tmp[1141563])
    {
      (2217364 'move' tmp[2217353] coerce_tmp[1141533])
    }
    {
      (2217368 'move' tmp[2217353] coerce_tmp[1141563])
    }
    (2514418 'noop')
    val tmp[1140743]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2175903 '!' 0)
    {
      (1140834 'move' tmp[1140743] 1)
    }
    {
      (1140840 'move' tmp[1140743] 0)
    }
    const-val call_tmp[1140916]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1142004]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "temp"
    (1142007 call init[1026098] initTemp[1142004] tmp[2261408] tmp[2217353] 1 0 tmp[1140743] _ln[2631974] _fn[2631976])
    (1140918 'move' call_tmp[1140916] initTemp[1142004])
    (1867992 '=' _retArg[1867990] call_tmp[1140916])
    (1867994 return _void[55])
  }
  function range(int(64),boundedHigh,false)[1187490].this[1200410](const in arg this[1200416]:range(int(64),boundedHigh,false)[1187490], const in arg other[1200418]:range(int(64),bounded,false)[1026875], ref arg _retArg[1868588]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2631984]:int(64)[13], in arg _fn[2631986]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val coerce_tmp[1202900]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2554262 'move' coerce_tmp[1202900](2506583 '.v' other[1200418] _low[1026837]))
    (1201009 'noop')
    const-val coerce_tmp[1202913]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2554268 'move' coerce_tmp[1202913](2506593 '.v' this[1200416] _high[1187457]))
    (1201063 'noop')
    const-val coerce_tmp[1202930]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2554274 'move' coerce_tmp[1202930](2506603 '.v' other[1200418] _low[1026837]))
    (1201138 'noop')
    const-val coerce_tmp[1202943]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2554280 'move' coerce_tmp[1202943](2506613 '.v' other[1200418] _high[1026842]))
    (1201192 'noop')
    const-val ret_tmp[1866468]:2*int(64)[1040117] "temp"
    (2491102 'set svec member' ret_tmp[1866468] 0 1)
    (2491106 'set svec member' ret_tmp[1866468] 1 0)
    (1201379 'noop')
    (1201391 'noop')
    val tmp[2261430]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2261436 '>' coerce_tmp[1202900] coerce_tmp[1202930])
    {
      (2261441 'move' tmp[2261430] coerce_tmp[1202900])
    }
    {
      (2261445 'move' tmp[2261430] coerce_tmp[1202930])
    }
    val tmp[2217375]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2217381 '<' coerce_tmp[1202913] coerce_tmp[1202943])
    {
      (2217386 'move' tmp[2217375] coerce_tmp[1202913])
    }
    {
      (2217390 'move' tmp[2217375] coerce_tmp[1202943])
    }
    (2514419 'noop')
    val tmp[1202123]:bool[10] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2175930 '!' 0)
    {
      (1202214 'move' tmp[1202123] 1)
    }
    {
      (1202220 'move' tmp[1202123] 0)
    }
    const-val call_tmp[1202296]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[1203611]:range(int(64),bounded,false)[1026875] "dead at end of block" "delay instantiation" "temp"
    (1203614 call init[1026098] initTemp[1203611] tmp[2261430] tmp[2217375] 1 0 tmp[1202123] _ln[2631984] _fn[2631986])
    (1202298 'move' call_tmp[1202296] initTemp[1203611])
    (1868590 '=' _retArg[1868588] call_tmp[1202296])
    (1868592 return _void[55])
  }
  function _local_chpl_count_help[2544496](const in arg r[2544498]:range(int(64),boundedLow,false)[1087626], const in arg count[2544500]:int(64)[13], ref arg _retArg[2544502]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2634296]:int(64)[13], in arg _fn[2634298]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2544505]:string[26] "temp"
    (2544507 'move' local__str_literal_978[2544505] "With a negative count, the range must have a last index.")
    val ret[2544510]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    if(2544516 '==' count[2544500] 0)
    {
      const-val coerce_tmp[2544521]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2587700 'move' coerce_tmp[2544521](2544525 '.v' r[2544498] _low[1087588]))
      const-val call_tmp[2544528]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2544530 'move' call_tmp[2544528](2544533 call _local_absSameType[2548799] 1))
      const-val call_tmp[2544549]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2544551]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "temp"
      (2544554 call _local_init[2548810] initTemp[2544551] coerce_tmp[2544521](2642384 'cast' int(64)[13](2544546 '-'(2544539 '.v' r[2544498] _low[1087588]) call_tmp[2544528])) 1 1)
      (2544560 'move' call_tmp[2544549] initTemp[2544551])
      (2544563 'move' ret[2544510] call_tmp[2544549])
      gotoReturn _end_chpl_count_help[2544709] _end_chpl_count_help[2544709]
    }
    (2544569 'noop')
    val tmp[2544576]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2544574 '!' 0)
    {
      (2544587 'move' tmp[2544576](2544584 '<' count[2544500] 0))
    }
    {
      (2544591 'move' tmp[2544576] 0)
    }
    if tmp[2544576]
    {
      (2544598 call _local_boundsCheckHalt[2528945] local__str_literal_978[2544505] _ln[2634296] _fn[2634298])
    }
    const-val call_tmp[2544601]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2544603 'move' call_tmp[2544601](2544605 '*' count[2544500] 1))
    val tmp[2544608]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2544614 '>' call_tmp[2544601] 0)
    {
      (2587712 'move' tmp[2544608](2544621 '.v' r[2544498] _low[1087588]))
    }
    {
      const-val tmp[2544625]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2544641 'move' tmp[2544625](2544644 call _local_chpl__add[2548836](2544638 '.v' r[2544498] _high[1087593])(2642386 'cast' int(64)[13](2544631 '+' call_tmp[2544601] 1))))
      (2544647 'move' tmp[2544608] tmp[2544625])
    }
    val tmp[2544651]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2544657 '<' call_tmp[2544601] 0)
    {
      (2587724 'move' tmp[2544651](2544664 '.v' r[2544498] _high[1087593]))
    }
    {
      const-val tmp[2544668]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (2544684 'move' tmp[2544668](2544687 call _local_chpl__add[2548836](2544681 '.v' r[2544498] _low[1087588])(2642388 'cast' int(64)[13](2544674 '-' call_tmp[2544601] 1))))
      (2544690 'move' tmp[2544651] tmp[2544668])
    }
    const-val call_tmp[2544694]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[2544696]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "temp"
    (2544699 call _local_init[2548982] initTemp[2544696] tmp[2544608] tmp[2544651])
    (2544703 'move' call_tmp[2544694] initTemp[2544696])
    (2544706 'move' ret[2544510] call_tmp[2544694])
    label _end_chpl_count_help[2544709]
    (2544711 '=' _retArg[2544502] ret[2544510])
    (2544714 return _void[55])
  }
  function chpl_count_help[1088377](const in arg r[1088379]:range(int(64),boundedLow,false)[1087626], const in arg count[1088381]:int(64)[13], ref arg _retArg[1867384]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2633588]:int(64)[13], in arg _fn[2633590]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_978[2516107]:string[26] "temp"
    (2516108 'move' "With a negative count, the range must have a last index." "With a negative count, the range must have a last index.")
    val ret[1088383]:range(int(64),bounded,false)[1026875] "dead after last mention" "RVV" "temp"
    if(2180421 '==' count[1088381] 0)
    {
      const-val coerce_tmp[1090774]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2553709 'move' coerce_tmp[1090774](2505324 '.v' r[1088379] _low[1087588]))
      const-val call_tmp[1088681]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1088683 'move' call_tmp[1088681](1088686 call absSameType[1090903] 1))
      const-val call_tmp[1088744]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[1091302]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "temp"
      (1091305 call init[1091325] initTemp[1091302] coerce_tmp[1090774](2641790 'cast' int(64)[13](2190641 '-'(2505331 '.v' r[1088379] _low[1087588]) call_tmp[1088681])) 1 1)
      (1088746 'move' call_tmp[1088744] initTemp[1091302])
      (1088766 'move' ret[1088383] call_tmp[1088744])
      gotoReturn _end_chpl_count_help[1090349] _end_chpl_count_help[1090349]
    }
    (2337444 'noop')
    val tmp[1089189]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2175867 '!' 0)
    {
      (1089222 'move' tmp[1089189](2177883 '<' count[1088381] 0))
    }
    {
      (1089228 'move' tmp[1089189] 0)
    }
    if tmp[1089189]
    {
      (1089244 call boundsCheckHalt[210187] "With a negative count, the range must have a last index." _ln[2633588] _fn[2633590])
    }
    const-val call_tmp[2337451]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2337453 'move' call_tmp[2337451](2337455 '*' count[1088381] 1))
    val tmp[1089751]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2187442 '>' call_tmp[2337451] 0)
    {
      (2553733 'move' tmp[1089751](2505338 '.v' r[1088379] _low[1087588]))
    }
    {
      const-val tmp[1089784]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089818 'move' tmp[1089784](1089821 call chpl__add[1093433](2505348 '.v' r[1088379] _high[1087593])(2641786 'cast' int(64)[13](2183380 '+' call_tmp[2337451] 1))))
      (1089825 'move' tmp[1089751] tmp[1089784])
    }
    val tmp[1089838]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2177913 '<' call_tmp[2337451] 0)
    {
      (2553739 'move' tmp[1089838](2505355 '.v' r[1088379] _high[1087593]))
    }
    {
      const-val tmp[1089871]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
      (1089905 'move' tmp[1089871](1089908 call chpl__add[1093433](2505365 '.v' r[1088379] _low[1087588])(2641788 'cast' int(64)[13](2207893 '-' call_tmp[2337451] 1))))
      (1089912 'move' tmp[1089838] tmp[1089871])
    }
    const-val call_tmp[1090317]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1094513]:range(int(64),bounded,false)[1026875] "dead after last mention" "delay instantiation" "temp"
    (1094516 call init[1094536] initTemp[1094513] tmp[1089751] tmp[1089838])
    (1090319 'move' call_tmp[1090317] initTemp[1094513])
    (1090339 'move' ret[1088383] call_tmp[1090317])
    label _end_chpl_count_help[1090349]
    (1867386 '=' _retArg[1867384] ret[1088383])
    (1867388 return _void[55])
  }
  function _local_#[2541333](const in arg r[2541335]:range(int(64),boundedLow,false)[1087626], const in arg count[2541337]:int(64)[13], ref arg _retArg[2541339]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2636096]:int(64)[13], in arg _fn[2636098]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2541342]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2541344]:range(int(64),bounded,false)[1026875] "temp"
    (2541347 call _local_chpl_count_help[2544496] r[2541335] count[2541337] ret_tmp[2541344] _ln[2636096] _fn[2636098])
    (2541351 'move' call_tmp[2541342] ret_tmp[2541344])
    (2541354 '=' _retArg[2541339] call_tmp[2541342])
    (2541357 return _void[55])
  }
  function #[1087986](const in arg r[1087988]:range(int(64),boundedLow,false)[1087626], const in arg count[1088001]:int(64)[13], ref arg _retArg[1867372]:_ref(range(int(64),bounded,false))[1026919], const in arg _ln[2635888]:int(64)[13], in arg _fn[2635890]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1088232]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1867378]:range(int(64),bounded,false)[1026875] "temp"
    (1088237 call chpl_count_help[1088377] r[1087988] count[1088001] ret_tmp[1867378] _ln[2635888] _fn[2635890])
    (1867381 'move' call_tmp[1088232] ret_tmp[1867378])
    (1867374 '=' _retArg[1867372] call_tmp[1088232])
    (1867376 return _void[55])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2543425](const in arg low[2543427]:int(32)[95], const in arg high[2543429]:int(32)[95], const in arg stride[2543431]:int(64)[13], const in arg first[2543433]:int(32)[95], const in arg last[2543435]:int(32)[95], const in arg shouldHalt[2543437]:bool[10], const in arg _ln[2608904]:int(64)[13], in arg _fn[2608906]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2543440]:string[26] "temp"
    (2543442 'move' local__str_literal_992[2543440] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2543445]:bool[10] "dead after last mention" "RVV" "temp"
    if(2543451 '>' low[2543427] high[2543429])
    {
      (2543456 'move' ret[2543445] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2543615] _end_chpl_checkIfRangeIterWillOverflow[2543615]
    }
    val willOverFlow[2543462]:bool[10] "dead at end of block" "insert auto destroy"
    (2543464 'move' willOverFlow[2543462] 0)
    val tmp[2543481]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2543478 '>' last[2543435](2543471 'cast' int(32)[95] 0 _ln[2608904] _fn[2608906]))
    {
      (2543492 'move' tmp[2543481](2543489 '>' stride[2543431] 0))
    }
    {
      (2543496 'move' tmp[2543481] 0)
    }
    if tmp[2543481]
    {
      if(2543520 '>' stride[2543431](2543513 'cast' int(64)[13](2642374 'cast' int(32)[95](2543506 '-' 2147483647 last[2543435])) _ln[2608904] _fn[2608906]))
      {
        (2543525 '=' willOverFlow[2543462] 1)
      }
    }
    {
      val tmp[2543544]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2543541 '<' last[2543435](2543534 'cast' int(32)[95] 0 _ln[2608904] _fn[2608906]))
      {
        (2543555 'move' tmp[2543544](2543552 '<' stride[2543431] 0))
      }
      {
        (2543559 'move' tmp[2543544] 0)
      }
      if tmp[2543544]
      {
        if(2543583 '<' stride[2543431](2543576 'cast' int(64)[13](2642376 'cast' int(32)[95](2543569 '-' -2147483648 last[2543435])) _ln[2608904] _fn[2608906]))
        {
          (2543588 '=' willOverFlow[2543462] 1)
        }
      }
    }
    val tmp[2543594]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2543462]
    {
      (2543598 'move' tmp[2543594] shouldHalt[2543437])
    }
    {
      (2543602 'move' tmp[2543594] 0)
    }
    if tmp[2543594]
    {
      (2543609 call _local_boundsCheckHalt[2528945] local__str_literal_992[2543440] _ln[2608904] _fn[2608906])
    }
    (2543612 'move' ret[2543445] willOverFlow[2543462])
    label _end_chpl_checkIfRangeIterWillOverflow[2543615]
    (2543617 return ret[2543445])
  }
  function chpl_checkIfRangeIterWillOverflow[976411](const in arg low[976415]:int(32)[95], const in arg high[976417]:int(32)[95], const in arg stride[976419]:int(64)[13], const in arg first[976425]:int(32)[95], const in arg last[976431]:int(32)[95], const in arg shouldHalt[976437]:bool[10], const in arg _ln[2601496]:int(64)[13], in arg _fn[2601498]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2515481]:string[26] "temp"
    (2515482 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[976439]:bool[10] "dead after last mention" "RVV" "temp"
    if(2278942 '>' low[976415] high[976417])
    {
      (976470 'move' ret[976439] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[976951] _end_chpl_checkIfRangeIterWillOverflow[976951]
    }
    val willOverFlow[976477]:bool[10] "dead at end of block" "insert auto destroy"
    (976479 'move' willOverFlow[976477] 0)
    val tmp[976520]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2278952 '>' last[976431](977061 'cast' int(32)[95] 0 _ln[2601496] _fn[2601498]))
    {
      (976553 'move' tmp[976520](2187387 '>' stride[976419] 0))
    }
    {
      (976559 'move' tmp[976520] 0)
    }
    if tmp[976520]
    {
      if(2187397 '>' stride[976419](977221 'cast' int(64)[13](2641728 'cast' int(32)[95](2279211 '-' 2147483647 last[976431])) _ln[2601496] _fn[2601498]))
      {
        (2198218 '=' willOverFlow[976477] 1)
      }
    }
    {
      val tmp[976635]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2278872 '<' last[976431](977231 'cast' int(32)[95] 0 _ln[2601496] _fn[2601498]))
      {
        (976668 'move' tmp[976635](2177863 '<' stride[976419] 0))
      }
      {
        (976674 'move' tmp[976635] 0)
      }
      if tmp[976635]
      {
        if(2191712 '<' stride[976419](977849 'cast' int(64)[13](2641730 'cast' int(32)[95](2279226 '-' -2147483648 last[976431])) _ln[2601496] _fn[2601498]))
        {
          (2198235 '=' willOverFlow[976477] 1)
        }
      }
    }
    val tmp[976889]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[976477]
    {
      (976914 'move' tmp[976889] shouldHalt[976437])
    }
    {
      (976920 'move' tmp[976889] 0)
    }
    if tmp[976889]
    {
      (976938 call boundsCheckHalt[210187] "Iteration over a bounded range may be incorrect due to overflow." _ln[2601496] _fn[2601498])
    }
    (976943 'move' ret[976439] willOverFlow[976477])
    label _end_chpl_checkIfRangeIterWillOverflow[976951]
    (976953 return ret[976439])
  }
  function _local_chpl_checkIfRangeIterWillOverflow[2526598](const in arg low[2526600]:int(64)[13], const in arg high[2526602]:int(64)[13], const in arg stride[2526604]:int(64)[13], const in arg first[2526606]:int(64)[13], const in arg last[2526608]:int(64)[13], const in arg shouldHalt[2526610]:bool[10], const in arg _ln[2634238]:int(64)[13], in arg _fn[2634240]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2526613]:string[26] "temp"
    (2526615 'move' local__str_literal_992[2526613] "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[2526618]:bool[10] "dead after last mention" "RVV" "temp"
    if(2526624 '>' low[2526600] high[2526602])
    {
      (2526629 'move' ret[2526618] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[2526760] _end_chpl_checkIfRangeIterWillOverflow[2526760]
    }
    val willOverFlow[2526635]:bool[10] "dead at end of block" "insert auto destroy"
    (2526637 'move' willOverFlow[2526635] 0)
    val tmp[2526647]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2526644 '>' last[2526608] 0)
    {
      (2526658 'move' tmp[2526647](2526655 '>' stride[2526604] 0))
    }
    {
      (2526662 'move' tmp[2526647] 0)
    }
    if tmp[2526647]
    {
      if(2526679 '>' stride[2526604](2642276 'cast' int(64)[13](2526672 '-' 9223372036854775807 last[2526608])))
      {
        (2526684 '=' willOverFlow[2526635] 1)
      }
    }
    {
      val tmp[2526696]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2526693 '<' last[2526608] 0)
      {
        (2526707 'move' tmp[2526696](2526704 '<' stride[2526604] 0))
      }
      {
        (2526711 'move' tmp[2526696] 0)
      }
      if tmp[2526696]
      {
        if(2526728 '<' stride[2526604](2642278 'cast' int(64)[13](2526721 '-' -9223372036854775808 last[2526608])))
        {
          (2526733 '=' willOverFlow[2526635] 1)
        }
      }
    }
    val tmp[2526739]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[2526635]
    {
      (2526743 'move' tmp[2526739] shouldHalt[2526610])
    }
    {
      (2526747 'move' tmp[2526739] 0)
    }
    if tmp[2526739]
    {
      (2526754 call _local_boundsCheckHalt[2528945] local__str_literal_992[2526613] _ln[2634238] _fn[2634240])
    }
    (2526757 'move' ret[2526618] willOverFlow[2526635])
    label _end_chpl_checkIfRangeIterWillOverflow[2526760]
    (2526762 return ret[2526618])
  }
  function chpl_checkIfRangeIterWillOverflow[1096137](const in arg low[1096141]:int(64)[13], const in arg high[1096143]:int(64)[13], const in arg stride[1096145]:int(64)[13], const in arg first[1096151]:int(64)[13], const in arg last[1096157]:int(64)[13], const in arg shouldHalt[1096163]:bool[10], const in arg _ln[2633594]:int(64)[13], in arg _fn[2633596]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_992[2516113]:string[26] "temp"
    (2516114 'move' "Iteration over a bounded range may be incorrect due to overflow." "Iteration over a bounded range may be incorrect due to overflow.")
    val ret[1096165]:bool[10] "dead after last mention" "RVV" "temp"
    if(2187492 '>' low[1096141] high[1096143])
    {
      (1096196 'move' ret[1096165] 0)
      gotoReturn _end_chpl_checkIfRangeIterWillOverflow[1096677] _end_chpl_checkIfRangeIterWillOverflow[1096677]
    }
    val willOverFlow[1096203]:bool[10] "dead at end of block" "insert auto destroy"
    (1096205 'move' willOverFlow[1096203] 0)
    val tmp[1096246]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2187507 '>' last[1096157] 0)
    {
      (1096279 'move' tmp[1096246](2187522 '>' stride[1096145] 0))
    }
    {
      (1096285 'move' tmp[1096246] 0)
    }
    if tmp[1096246]
    {
      if(2187532 '>' stride[1096145](2641798 'cast' int(64)[13](2287309 '-' 9223372036854775807 last[1096157])))
      {
        (2198291 '=' willOverFlow[1096203] 1)
      }
    }
    {
      val tmp[1096361]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      if(2177923 '<' last[1096157] 0)
      {
        (1096394 'move' tmp[1096361](2177933 '<' stride[1096145] 0))
      }
      {
        (1096400 'move' tmp[1096361] 0)
      }
      if tmp[1096361]
      {
        if(2191802 '<' stride[1096145](2641800 'cast' int(64)[13](2287279 '-' -9223372036854775808 last[1096157])))
        {
          (2198308 '=' willOverFlow[1096203] 1)
        }
      }
    }
    val tmp[1096615]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if willOverFlow[1096203]
    {
      (1096640 'move' tmp[1096615] shouldHalt[1096163])
    }
    {
      (1096646 'move' tmp[1096615] 0)
    }
    if tmp[1096615]
    {
      (1096664 call boundsCheckHalt[210187] "Iteration over a bounded range may be incorrect due to overflow." _ln[2633594] _fn[2633596])
    }
    (1096669 'move' ret[1096165] willOverFlow[1096203])
    label _end_chpl_checkIfRangeIterWillOverflow[1096677]
    (1096679 return ret[1096165])
  }
  function range(int(64),bounded,false)[1026875]._local_checkIfIterWillOverflow[2541848](const in arg this[2541850]:range(int(64),bounded,false)[1026875], const in arg shouldHalt[2541852]:bool[10], const in arg _ln[2636080]:int(64)[13], in arg _fn[2636082]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2541869]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2541885 'move' call_tmp[2541869](2541888 call _local_chpl_checkIfRangeIterWillOverflow[2526598](2541875 '.v' this[2541850] _low[1026837])(2541882 '.v' this[2541850] _high[1026842]) 1(2541859 '.v' this[2541850] _low[1026837])(2541866 '.v' this[2541850] _high[1026842]) shouldHalt[2541852] _ln[2636080] _fn[2636082]))
    (2541895 return call_tmp[2541869])
  }
  function range(int(64),bounded,false)[1026875].checkIfIterWillOverflow[1095875](const in arg this[1095881]:range(int(64),bounded,false)[1026875], const in arg shouldHalt[1095887]:bool[10], const in arg _ln[2635904]:int(64)[13], in arg _fn[2635906]:int(32)[95]) : bool[10] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1095945]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1095947 'move' call_tmp[1095945](1095950 call chpl_checkIfRangeIterWillOverflow[1096137](2505374 '.v' this[1095881] _low[1026837])(2505381 '.v' this[1095881] _high[1026842]) 1(2330888 '.v' this[1095881] _low[1026837])(2337607 '.v' this[1095881] _high[1026842]) shouldHalt[1095887] _ln[2635904] _fn[2635906]))
    (1095962 return call_tmp[1095945])
  }
  type _ic_chpl_direct_counted_range_iter[1103851] val super[1103852]:object[22] "super class" val more[1103854]:int(64)[13] const-val F0_low[2058106]:int(64)[13] const-val F1_count[2058110]:int(64)[13] val F2__iterator[2058114]:_ic_chpl_direct_counted_range_iter_helper[1103601] const F3_tmp[2058116]:2*int(64)[1040117] val F4__iterator[2058118]:_ic_chpl_direct_param_stride_range_iter[1103347] val F5_i[2058120]:int(64)[13] const-val F6_low[2058122]:int(64)[13] val value[2058124]:int(64)[13]
  type _ic_chpl_direct_counted_range_iter_helper[1103601] val super[1103602]:object[22] "super class" val more[1103604]:int(64)[13] const-val F0_low[2064264]:int(64)[13] const-val F1_count[2064268]:int(64)[13] const F2_tmp[2064272]:2*int(64)[1040117] val F3__iterator[2064274]:_ic_chpl_direct_param_stride_range_iter[1103347] val F4_i[2064276]:int(64)[13] const-val F5_low[2064278]:int(64)[13] val value[2064280]:int(64)[13]
  type _ic_chpl_direct_param_stride_range_iter[1103347] val super[1103348]:object[22] "super class" val more[1103350]:int(64)[13] const-val F0_low[2065762]:int(64)[13] const-val F1_high[2065766]:int(64)[13] val value[2065770]:int(64)[13]
  function _ic_these_range_int64_t_bounded_F[1096764].advance[1096790](const in arg this[1096792]:_ic_these_range_int64_t_bounded_F[1096764], const in arg _ln[2611032]:int(64)[13], in arg _fn[2611034]:int(32)[95]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[2064132]:int(64)[13]
    (2594289 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2560712 'move' more[2064132](2064157 '.v' this[1096792] more[1096767]))
    if(2064139 '==' more[2064132] 2)
    {
      gotoIterResume _jump_2[2064124] _jump_2[2064124]
    }
    if(2064149 '==' more[2064132] -2)
    {
      gotoIterResume _jump_break_2[2064126] _jump_break_2[2064126]
    }
    const-val tmp[2063653]:range(int(64),bounded,false)[1026875] "temp"
    val tmp[2560673]:range(int(64),bounded,false)[1026875] "temp"
    (2594257 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063658 'move' tmp[2560673](2063655 '.v' this[1096792] F0_this[2063641]))
    (2560676 'move' tmp[2063653] tmp[2560673])
    (1095691 call checkIfIterWillOverflow[1095875] tmp[2063653] 1 _ln[2611032] _fn[2611034])
    (2594259 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063662 '.=' this[1096792] F1_i[2063645] 0)
    ref tmp[2063666]:_ref(range(int(64),bounded,false))[1026919] "temp"
    (2594261 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063671 'move' tmp[2063666](2063668 '.' this[1096792] F0_this[2063641]))
    val tmp[2063673]:int(64)[13] "temp"
    (2553757 'move' tmp[2063673](2505391 '.v' tmp[2063666] _low[1026837]))
    (2594263 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063675 '.=' this[1096792] F3_coerce_tmp[2063649] tmp[2063673])
    (1095717 'noop')
    ref tmp[2063686]:_ref(range(int(64),bounded,false))[1026919] "temp"
    (2594265 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063691 'move' tmp[2063686](2063688 '.' this[1096792] F0_this[2063641]))
    const-val coerce_tmp[1096747]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (2553763 'move' coerce_tmp[1096747](2505397 '.v' tmp[2063686] _high[1026842]))
    (2594267 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2063695 '.=' this[1096792] F2_end[2063647] coerce_tmp[1096747])
    (1095731 'noop')
    CForLoop[1095735]
    {
      const-val tmp[2063712]:int(64)[13] "temp"
      (2594271 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
      (2560682 'move' tmp[2063712](2063714 '.v' this[1096792] F1_i[2063645]))
      (2594269 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
      (2063701 '.=' this[1096792] value[2063651] tmp[2063712])
      (2594285 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
      (2064118 '.=' this[1096792] more[1096767] 2)
      gotoIterEnd _end[2064116] _end[2064116]
      label _jump_break_2[2064126]
      gotoReturn _endthese[1847402] _endthese[1847402]
      label _jump_2[2064124]
      {
        const-val tmp[2063732]:int(64)[13] "temp"
        (2594275 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (2560688 'move' tmp[2063732](2063734 '.v' this[1096792] F3_coerce_tmp[2063649]))
        (2594273 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (2063728 '.=' this[1096792] F1_i[2063645] tmp[2063732])
      }
      {
        val tmp[2063739]:int(64)[13] "temp"
        (2594277 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (2560694 'move' tmp[2063739](2063741 '.v' this[1096792] F1_i[2063645]))
        (2594279 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (1095744 '<=' tmp[2063739](2063748 '.v' this[1096792] F2_end[2063647]))
      }
      {
        val tmp[2063753]:int(64)[13] "temp"
        (2594281 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (2560706 'move' tmp[2063753](2063755 '.v' this[1096792] F1_i[2063645]))
        (1095775 '+=' tmp[2063753] 1)
        (2594283 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
        (2063760 '.=' this[1096792] F1_i[2063645] tmp[2063753])
      }
    }
    label _endthese[1847402]
    (2594287 '_check_nil' this[1096792] _ln[2611032] _fn[2611034])
    (2064128 '.=' this[1096792] more[1096767] 0)
    label _end[2064116]
    (2064163 return _void[55])
  }
  type _ic_these_range_int64_t_bounded_F[1096764] val super[1096765]:object[22] "super class" val more[1096767]:int(64)[13] const-val F0_this[2063641]:range(int(64),bounded,false)[1026875] val F1_i[2063645]:int(64)[13] const F2_end[2063647]:int(64)[13] val F3_coerce_tmp[2063649]:int(64)[13] val value[2063651]:int(64)[13]
  function _cast[1054419](const in arg x[1054423]:range(byteIndex,bounded,false)[1025853], ref arg _retArg[1866610]:_ref(string)[938000], const in arg _ln[2620320]:int(64)[13], in arg _fn[2620322]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2515737]:string[26] "temp"
    (2515738 'move' ".." "..")
    const-val ret[1054425]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1054433]:string[26] "dead at end of block" "insert auto destroy"
    (1084769 call init[30763] ret[1054433] _ln[2620320] _fn[2620322])
    const-val call_tmp[1054457]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2330176]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2572860 'move' coerce_tmp[2330176](2330180 '.v' x[1054423] _low[1025815]))
    const-val ret[2330183]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2330185]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2330188 call init[28100] cpi[2330185])
    (2330190 '.=' cpi[2330185] _bindex[28094] coerce_tmp[2330176])
    (2330194 'move' ret[2330183] cpi[2330185])
    (1866369 'move' call_tmp[1054457] ret[2330183])
    const-val call_tmp[1054465]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866616]:string[26] "temp"
    (1054470 call _cast[1054702] call_tmp[1054457] ret_tmp[1866616] _ln[2620320] _fn[2620322])
    (1866619 'move' call_tmp[1054465] ret_tmp[1866616])
    (1054474 call +=[38800] ret[1054433] call_tmp[1054465] _ln[2620320] _fn[2620322])
    ref i_x[2194231]:_ref(string)[938000] "temp"
    (2194235 'move' i_x[2194231](2194233 'set reference' call_tmp[1054465]))
    wide-ref tmp[2564304]:__wide__ref_string[2519787] "temp"
    (2564307 'move' tmp[2564304] i_x[2194231])
    (2194239 call deinit[30834] tmp[2564304] _ln[2620320] _fn[2620322])
    (1054481 call +=[38800] ret[1054433] ".." _ln[2620320] _fn[2620322])
    const-val call_tmp[1054504]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2330251]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2572872 'move' coerce_tmp[2330251](2330255 '.v' x[1054423] _high[1025820]))
    const-val ret[2330258]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2330260]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2330263 call init[28100] cpi[2330260])
    (2330265 '.=' cpi[2330260] _bindex[28094] coerce_tmp[2330251])
    (2330269 'move' ret[2330258] cpi[2330260])
    (1866405 'move' call_tmp[1054504] ret[2330258])
    const-val call_tmp[1054512]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866622]:string[26] "temp"
    (1054517 call _cast[1054702] call_tmp[1054504] ret_tmp[1866622] _ln[2620320] _fn[2620322])
    (1866625 'move' call_tmp[1054512] ret_tmp[1866622])
    (1054521 call +=[38800] ret[1054433] call_tmp[1054512] _ln[2620320] _fn[2620322])
    ref i_x[2194243]:_ref(string)[938000] "temp"
    (2194247 'move' i_x[2194243](2194245 'set reference' call_tmp[1054512]))
    wide-ref tmp[2564310]:__wide__ref_string[2519787] "temp"
    (2564313 'move' tmp[2564310] i_x[2194243])
    (2194251 call deinit[30834] tmp[2564310] _ln[2620320] _fn[2620322])
    const-val alignCheckRange[1054583]:range(byteIndex,bounded,false)[1025853] "dead at end of block" "insert auto destroy"
    (1054585 'move' alignCheckRange[1054583] x[1054423])
    (1054593 call normalizeAlignment[1083667] alignCheckRange[1054583])
    (1054675 'move' ret[1054425] ret[1054433])
    (1866612 '=' _retArg[1866610] ret[1054425])
    (1866614 return _void[55])
  }
  function _cast[1119498](const in arg x[1119502]:range(int(64),bounded,false)[1026875], ref arg _retArg[1867684]:_ref(string)[938000], const in arg _ln[2620354]:int(64)[13], in arg _fn[2620356]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1075[2516228]:string[26] "temp"
    (2516229 'move' ".." "..")
    const-val ret[1119504]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1119512]:string[26] "dead at end of block" "insert auto destroy"
    (1120805 call init[30763] ret[1119512] _ln[2620354] _fn[2620356])
    const-val call_tmp[1119544]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866760]:string[26] "temp"
    (1119549 call _cast[1063214](2329393 '.v' x[1119502] _low[1026837]) ret_tmp[1866760] _ln[2620354] _fn[2620356])
    (1866763 'move' call_tmp[1119544] ret_tmp[1866760])
    (1119553 call +=[38800] ret[1119512] call_tmp[1119544] _ln[2620354] _fn[2620356])
    ref i_x[2194735]:_ref(string)[938000] "temp"
    (2194739 'move' i_x[2194735](2194737 'set reference' call_tmp[1119544]))
    wide-ref tmp[2564532]:__wide__ref_string[2519787] "temp"
    (2564535 'move' tmp[2564532] i_x[2194735])
    (2194743 call deinit[30834] tmp[2564532] _ln[2620354] _fn[2620356])
    (1119560 call +=[38800] ret[1119512] ".." _ln[2620354] _fn[2620356])
    const-val call_tmp[1119591]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866766]:string[26] "temp"
    (1119596 call _cast[1063214](2329633 '.v' x[1119502] _high[1026842]) ret_tmp[1866766] _ln[2620354] _fn[2620356])
    (1866769 'move' call_tmp[1119591] ret_tmp[1866766])
    (1119600 call +=[38800] ret[1119512] call_tmp[1119591] _ln[2620354] _fn[2620356])
    ref i_x[2194747]:_ref(string)[938000] "temp"
    (2194751 'move' i_x[2194747](2194749 'set reference' call_tmp[1119591]))
    wide-ref tmp[2564538]:__wide__ref_string[2519787] "temp"
    (2564541 'move' tmp[2564538] i_x[2194747])
    (2194755 call deinit[30834] tmp[2564538] _ln[2620354] _fn[2620356])
    const-val alignCheckRange[1119662]:range(int(64),bounded,false)[1026875] "dead at end of block" "insert auto destroy"
    (1119664 'move' alignCheckRange[1119662] x[1119502])
    (1119672 call normalizeAlignment[1119801] alignCheckRange[1119662])
    (1119754 'move' ret[1119504] ret[1119512])
    (1867686 '=' _retArg[1867684] ret[1119504])
    (1867688 return _void[55])
  }
  function _cast[1136021](const in arg x[1136025]:range(int(64),boundedLow,false)[1087626], ref arg _retArg[1867972]:_ref(string)[938000], const in arg _ln[2620374]:int(64)[13], in arg _fn[2620376]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2516291]:string[26] "temp"
    (2516292 'move' " align " " align ")
    const-val local__str_literal_1075[2516285]:string[26] "temp"
    (2516286 'move' ".." "..")
    const-val ret[1136027]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1136035]:string[26] "dead at end of block" "insert auto destroy"
    (1138859 call init[30763] ret[1136035] _ln[2620374] _fn[2620376])
    const-val call_tmp[1136067]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866778]:string[26] "temp"
    (1136072 call _cast[1063214](2338775 '.v' x[1136025] _low[1087588]) ret_tmp[1866778] _ln[2620374] _fn[2620376])
    (1866781 'move' call_tmp[1136067] ret_tmp[1866778])
    (1136076 call +=[38800] ret[1136035] call_tmp[1136067] _ln[2620374] _fn[2620376])
    ref i_x[2194807]:_ref(string)[938000] "temp"
    (2194811 'move' i_x[2194807](2194809 'set reference' call_tmp[1136067]))
    wide-ref tmp[2564568]:__wide__ref_string[2519787] "temp"
    (2564571 'move' tmp[2564568] i_x[2194807])
    (2194815 call deinit[30834] tmp[2564568] _ln[2620374] _fn[2620376])
    (1136083 call +=[38800] ret[1136035] ".." _ln[2620374] _fn[2620376])
    const-val alignCheckRange[1136185]:range(int(64),boundedLow,false)[1087626] "dead at end of block" "insert auto destroy"
    (1136187 'move' alignCheckRange[1136185] x[1136025])
    (1136195 call normalizeAlignment[1136321] alignCheckRange[1136185])
    if(2175894 '!'(2339165 '=='(2339151 '.v' alignCheckRange[1136185] _low[1087588])(2339158 '.v' alignCheckRange[1136185] _low[1087588])))
    {
      const-val call_tmp[1136223]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136225 'move' call_tmp[1136223](1136228 call alignment[1128181] x[1136025]))
      const-val call_tmp[1136246]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1136248 'move' call_tmp[1136246](1136251 call chpl__mod[1137477] call_tmp[1136223] 1 _ln[2620374] _fn[2620376]))
      const-val call_tmp[1136254]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866784]:string[26] "temp"
      (1136259 call _cast[1063214] call_tmp[1136246] ret_tmp[1866784] _ln[2620374] _fn[2620376])
      (1866787 'move' call_tmp[1136254] ret_tmp[1866784])
      const-val call_tmp[1136262]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863622]:string[26] "temp"
      wide-ref tmp[2553886]:__wide__ref_string[2519787] "temp"
      (2553890 'move' tmp[2553886](2553888 'set reference' call_tmp[1136254]))
      (1136267 call +[38345] " align " tmp[2553886] ret_tmp[1863622] _ln[2620374] _fn[2620376])
      (1863625 'move' call_tmp[1136262] ret_tmp[1863622])
      (1136271 call +=[38800] ret[1136035] call_tmp[1136262] _ln[2620374] _fn[2620376])
      ref i_x[2194819]:_ref(string)[938000] "temp"
      (2194823 'move' i_x[2194819](2194821 'set reference' call_tmp[1136262]))
      wide-ref tmp[2564574]:__wide__ref_string[2519787] "temp"
      (2564577 'move' tmp[2564574] i_x[2194819])
      (2194827 call deinit[30834] tmp[2564574] _ln[2620374] _fn[2620376])
      ref i_x[2194831]:_ref(string)[938000] "temp"
      (2194835 'move' i_x[2194831](2194833 'set reference' call_tmp[1136254]))
      wide-ref tmp[2564580]:__wide__ref_string[2519787] "temp"
      (2564583 'move' tmp[2564580] i_x[2194831])
      (2194839 call deinit[30834] tmp[2564580] _ln[2620374] _fn[2620376])
    }
    (1136277 'move' ret[1136027] ret[1136035])
    (1867974 '=' _retArg[1867972] ret[1136027])
    (1867976 return _void[55])
  }
  function _cast[1154485](const in arg x[1154489]:range(byteIndex,boundedLow,false)[1143464], ref arg _retArg[1868254]:_ref(string)[938000], const in arg _ln[2620386]:int(64)[13], in arg _fn[2620388]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2516339]:string[26] "temp"
    (2516340 'move' " align " " align ")
    const-val local__str_literal_1075[2516333]:string[26] "temp"
    (2516334 'move' ".." "..")
    const-val ret[1154491]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1154499]:string[26] "dead at end of block" "insert auto destroy"
    (1156180 call init[30763] ret[1154499] _ln[2620386] _fn[2620388])
    const-val call_tmp[1154523]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2339483]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2573921 'move' coerce_tmp[2339483](2339487 '.v' x[1154489] _low[1143426]))
    const-val ret[2339490]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2339492]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2339495 call init[28100] cpi[2339492])
    (2339497 '.=' cpi[2339492] _bindex[28094] coerce_tmp[2339483])
    (2339501 'move' ret[2339490] cpi[2339492])
    (1868163 'move' call_tmp[1154523] ret[2339490])
    const-val call_tmp[1154531]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866628]:string[26] "temp"
    (1154536 call _cast[1054702] call_tmp[1154523] ret_tmp[1866628] _ln[2620386] _fn[2620388])
    (1866631 'move' call_tmp[1154531] ret_tmp[1866628])
    (1154540 call +=[38800] ret[1154499] call_tmp[1154531] _ln[2620386] _fn[2620388])
    ref i_x[2194891]:_ref(string)[938000] "temp"
    (2194895 'move' i_x[2194891](2194893 'set reference' call_tmp[1154531]))
    wide-ref tmp[2564610]:__wide__ref_string[2519787] "temp"
    (2564613 'move' tmp[2564610] i_x[2194891])
    (2194899 call deinit[30834] tmp[2564610] _ln[2620386] _fn[2620388])
    (1154547 call +=[38800] ret[1154499] ".." _ln[2620386] _fn[2620388])
    const-val alignCheckRange[1154649]:range(byteIndex,boundedLow,false)[1143464] "dead at end of block" "insert auto destroy"
    (1154651 'move' alignCheckRange[1154649] x[1154489])
    (1154659 call normalizeAlignment[1155020] alignCheckRange[1154649])
    if(2175921 '!'(2339672 '=='(2339658 '.v' alignCheckRange[1154649] _low[1143426])(2339665 '.v' alignCheckRange[1154649] _low[1143426])))
    {
      const-val call_tmp[1154687]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1868236]:byteIndex[28173] "temp"
      (1154692 call alignment[1148299] x[1154489] ret_tmp[1868236])
      (1868239 'move' call_tmp[1154687] ret_tmp[1868236])
      const-val call_tmp[1154710]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1154712 'move' call_tmp[1154710](1154715 call chpl__mod[1137477](2329851 '.v' call_tmp[1154687] _bindex[28094]) 1 _ln[2620386] _fn[2620388]))
      const-val call_tmp[1154718]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1866796]:string[26] "temp"
      (1154723 call _cast[1063214] call_tmp[1154710] ret_tmp[1866796] _ln[2620386] _fn[2620388])
      (1866799 'move' call_tmp[1154718] ret_tmp[1866796])
      const-val call_tmp[1154726]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1863634]:string[26] "temp"
      wide-ref tmp[2553960]:__wide__ref_string[2519787] "temp"
      (2553964 'move' tmp[2553960](2553962 'set reference' call_tmp[1154718]))
      (1154731 call +[38345] " align " tmp[2553960] ret_tmp[1863634] _ln[2620386] _fn[2620388])
      (1863637 'move' call_tmp[1154726] ret_tmp[1863634])
      (1154735 call +=[38800] ret[1154499] call_tmp[1154726] _ln[2620386] _fn[2620388])
      ref i_x[2194903]:_ref(string)[938000] "temp"
      (2194907 'move' i_x[2194903](2194905 'set reference' call_tmp[1154726]))
      wide-ref tmp[2564616]:__wide__ref_string[2519787] "temp"
      (2564619 'move' tmp[2564616] i_x[2194903])
      (2194911 call deinit[30834] tmp[2564616] _ln[2620386] _fn[2620388])
      ref i_x[2194915]:_ref(string)[938000] "temp"
      (2194919 'move' i_x[2194915](2194917 'set reference' call_tmp[1154718]))
      wide-ref tmp[2564622]:__wide__ref_string[2519787] "temp"
      (2564625 'move' tmp[2564622] i_x[2194915])
      (2194923 call deinit[30834] tmp[2564622] _ln[2620386] _fn[2620388])
    }
    (1154741 'move' ret[1154491] ret[1154499])
    (1868256 '=' _retArg[1868254] ret[1154491])
    (1868258 return _void[55])
  }
  function _cast[1198692](const in arg x[1198696]:range(byteIndex,boundedHigh,false)[1184980], ref arg _retArg[1868576]:_ref(string)[938000], const in arg _ln[2620414]:int(64)[13], in arg _fn[2620416]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_1079[2516569]:string[26] "temp"
    (2516570 'move' " align " " align ")
    const-val local__str_literal_1075[2516563]:string[26] "temp"
    (2516564 'move' ".." "..")
    const-val ret[1198698]:string[26] "dead after last mention" "RVV" "temp"
    val ret[1198706]:string[26] "dead at end of block" "insert auto destroy"
    (1200239 call init[30763] ret[1198706] _ln[2620414] _fn[2620416])
    (1198754 call +=[38800] ret[1198706] ".." _ln[2620414] _fn[2620416])
    const-val call_tmp[1198777]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[2343384]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2574502 'move' coerce_tmp[2343384](2343388 '.v' x[1198696] _high[1184947]))
    const-val ret[2343391]:byteIndex[28173] "dead after last mention" "RVV" "temp"
    val cpi[2343393]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (2343396 call init[28100] cpi[2343393])
    (2343398 '.=' cpi[2343393] _bindex[28094] coerce_tmp[2343384])
    (2343402 'move' ret[2343391] cpi[2343393])
    (1868515 'move' call_tmp[1198777] ret[2343391])
    const-val call_tmp[1198785]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866634]:string[26] "temp"
    (1198790 call _cast[1054702] call_tmp[1198777] ret_tmp[1866634] _ln[2620414] _fn[2620416])
    (1866637 'move' call_tmp[1198785] ret_tmp[1866634])
    (1198794 call +=[38800] ret[1198706] call_tmp[1198785] _ln[2620414] _fn[2620416])
    ref i_x[2195287]:_ref(string)[938000] "temp"
    (2195291 'move' i_x[2195287](2195289 'set reference' call_tmp[1198785]))
    wide-ref tmp[2564772]:__wide__ref_string[2519787] "temp"
    (2564775 'move' tmp[2564772] i_x[2195287])
    (2195295 call deinit[30834] tmp[2564772] _ln[2620414] _fn[2620416])
    const-val alignCheckRange[1198856]:range(byteIndex,boundedHigh,false)[1184980] "dead at end of block" "insert auto destroy"
    (1198858 'move' alignCheckRange[1198856] x[1198696])
    (1198866 call normalizeAlignment[1199227] alignCheckRange[1198856])
    const-val call_tmp[1198894]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1868558]:byteIndex[28173] "temp"
    (1198899 call alignment[1192722] x[1198696] ret_tmp[1868558])
    (1868561 'move' call_tmp[1198894] ret_tmp[1868558])
    const-val call_tmp[1198917]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1198919 'move' call_tmp[1198917](1198922 call chpl__mod[1137477](2329923 '.v' call_tmp[1198894] _bindex[28094]) 1 _ln[2620414] _fn[2620416]))
    const-val call_tmp[1198925]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1866808]:string[26] "temp"
    (1198930 call _cast[1063214] call_tmp[1198917] ret_tmp[1866808] _ln[2620414] _fn[2620416])
    (1866811 'move' call_tmp[1198925] ret_tmp[1866808])
    const-val call_tmp[1198933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1863682]:string[26] "temp"
    wide-ref tmp[2554252]:__wide__ref_string[2519787] "temp"
    (2554256 'move' tmp[2554252](2554254 'set reference' call_tmp[1198925]))
    (1198938 call +[38345] " align " tmp[2554252] ret_tmp[1863682] _ln[2620414] _fn[2620416])
    (1863685 'move' call_tmp[1198933] ret_tmp[1863682])
    (1198942 call +=[38800] ret[1198706] call_tmp[1198933] _ln[2620414] _fn[2620416])
    ref i_x[2195299]:_ref(string)[938000] "temp"
    (2195303 'move' i_x[2195299](2195301 'set reference' call_tmp[1198933]))
    wide-ref tmp[2564778]:__wide__ref_string[2519787] "temp"
    (2564781 'move' tmp[2564778] i_x[2195299])
    (2195307 call deinit[30834] tmp[2564778] _ln[2620414] _fn[2620416])
    ref i_x[2195311]:_ref(string)[938000] "temp"
    (2195315 'move' i_x[2195311](2195313 'set reference' call_tmp[1198925]))
    wide-ref tmp[2564784]:__wide__ref_string[2519787] "temp"
    (2564787 'move' tmp[2564784] i_x[2195311])
    (2195319 call deinit[30834] tmp[2564784] _ln[2620414] _fn[2620416])
    (1198948 'move' ret[1198698] ret[1198706])
    (1868578 '=' _retArg[1868576] ret[1198698])
    (1868580 return _void[55])
  }
  function _ref(range(byteIndex,bounded,false))[1025862].normalizeAlignment[1083667](ref arg this[1083673]:_ref(range(byteIndex,bounded,false))[1025862]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1083953 return _void[55])
  }
  function _ref(range(int(64),bounded,false))[1026919].normalizeAlignment[1119801](ref arg this[1119807]:_ref(range(int(64),bounded,false))[1026919]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1120087 return _void[55])
  }
  function _ref(range(int(64),boundedLow,false))[1087670].normalizeAlignment[1136321](ref arg this[1136327]:_ref(range(int(64),boundedLow,false))[1087670]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1136607 return _void[55])
  }
  function _ref(range(byteIndex,boundedLow,false))[1143508].normalizeAlignment[1155020](ref arg this[1155026]:_ref(range(byteIndex,boundedLow,false))[1143508]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1155306 return _void[55])
  }
  function _ref(range(byteIndex,boundedHigh,false))[1185024].normalizeAlignment[1199227](ref arg this[1199233]:_ref(range(byteIndex,boundedHigh,false))[1185024]) : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "method" "no doc" "resolved" "no return value for void"
  {
    (1199513 return _void[55])
  }
  function chpl__mod[1137477](const in arg dividend[1137479]:int(64)[13], const in arg modulus[1137481]:int(64)[13], const in arg _ln[2624474]:int(64)[13], in arg _fn[2624476]:int(32)[95]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    const-val local__str_literal_76[2516297]:string[26] "temp"
    (2516298 'move' "Attempt to compute a modulus by zero" "Attempt to compute a modulus by zero")
    val ret[1137483]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2280498]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2280504 '<' modulus[1137481] 0)
    {
      (2280515 'move' tmp[2280498](2280513 'u-' modulus[1137481]))
    }
    {
      (2280519 'move' tmp[2280498] modulus[1137481])
    }
    if(2279952 '==' tmp[2280498] 0)
    {
      (2279958 call halt[154111] "Attempt to compute a modulus by zero" _ln[2624474] _fn[2624476])
    }
    const-val call_tmp[2279961]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279963 'move' call_tmp[2279961](2279965 '%' dividend[1137479] tmp[2280498]))
    val tmp[1137530]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1137532 'move' tmp[1137530] call_tmp[2279961])
    if(2177963 '<' call_tmp[2279961] 0)
    {
      ref i_lhs[2241526]:_ref(int(64))[936633] "temp"
      (2241530 'move' i_lhs[2241526](2241528 'set reference' tmp[1137530]))
      (2241533 '+=' i_lhs[2241526] tmp[2280498])
    }
    (1137579 'move' ret[1137483] tmp[1137530])
    (1137589 return ret[1137483])
  }
  function _local_chpl__add[2548836](const in arg a[2548838]:int(64)[13], const in arg b[2548840]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[2548843]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[2548852]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2548849 '>' a[2548838] 0)
    {
      (2548863 'move' tmp[2548852](2548860 '>' b[2548840] 0))
    }
    {
      (2548867 'move' tmp[2548852] 0)
    }
    val tmp[2548871]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2548852]
    {
      (2548889 'move' tmp[2548871](2548886 '>' b[2548840](2642410 'cast' int(64)[13](2548879 '-' 9223372036854775807 a[2548838]))))
    }
    {
      (2548893 'move' tmp[2548871] 0)
    }
    if tmp[2548871]
    {
      (2548899 'move' ret[2548843] 9223372036854775807)
      gotoReturn _end_chpl__add[2548975] _end_chpl__add[2548975]
    }
    val tmp[2548912]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2548909 '<' a[2548838] 0)
    {
      (2548923 'move' tmp[2548912](2548920 '<' b[2548840] 0))
    }
    {
      (2548927 'move' tmp[2548912] 0)
    }
    val tmp[2548931]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[2548912]
    {
      (2548949 'move' tmp[2548931](2548946 '<' b[2548840](2642412 'cast' int(64)[13](2548939 '-' -9223372036854775808 a[2548838]))))
    }
    {
      (2548953 'move' tmp[2548931] 0)
    }
    if tmp[2548931]
    {
      (2548959 'move' ret[2548843] -9223372036854775808)
      gotoReturn _end_chpl__add[2548975] _end_chpl__add[2548975]
    }
    (2548972 'move' ret[2548843](2642414 'cast' int(64)[13](2548969 '+' a[2548838] b[2548840])))
    label _end_chpl__add[2548975]
    (2548977 return ret[2548843])
  }
  function chpl__add[1093433](const in arg a[1093435]:int(64)[13], const in arg b[1093440]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    val ret[1093444]:int(64)[13] "dead after last mention" "RVV" "temp"
    val tmp[1093510]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2187457 '>' a[1093435] 0)
    {
      (1093543 'move' tmp[1093510](2187472 '>' b[1093440] 0))
    }
    {
      (1093549 'move' tmp[1093510] 0)
    }
    val tmp[1093571]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093510]
    {
      (1093625 'move' tmp[1093571](2187482 '>' b[1093440](2641794 'cast' int(64)[13](2287299 '-' 9223372036854775807 a[1093435]))))
    }
    {
      (1093631 'move' tmp[1093571] 0)
    }
    if tmp[1093571]
    {
      (1093653 'move' ret[1093444] 9223372036854775807)
      gotoReturn _end_chpl__add[1094377] _end_chpl__add[1094377]
    }
    val tmp[1093683]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2177893 '<' a[1093435] 0)
    {
      (1093716 'move' tmp[1093683](2177903 '<' b[1093440] 0))
    }
    {
      (1093722 'move' tmp[1093683] 0)
    }
    val tmp[1093744]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if tmp[1093683]
    {
      (1093798 'move' tmp[1093744](2191792 '<' b[1093440](2641796 'cast' int(64)[13](2287269 '-' -9223372036854775808 a[1093435]))))
    }
    {
      (1093804 'move' tmp[1093744] 0)
    }
    if tmp[1093744]
    {
      (1093826 'move' ret[1093444] -9223372036854775808)
      gotoReturn _end_chpl__add[1094377] _end_chpl__add[1094377]
    }
    (1094373 'move' ret[1093444](2641792 'cast' int(64)[13](2189260 '+' a[1093435] b[1093440])))
    label _end_chpl__add[1094377]
    (1094379 return ret[1093444])
  }
  function chpl__addRangeStrides[1105088](const in arg start[1105090]:int(64)[13], const in arg stride[1105092]:int(64)[13], const in arg count[1105094]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[1105558]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105560 'move' call_tmp[1105558](1105563 call mul[1105596] stride[1105092] count[1105094]))
    const-val call_tmp[1105566]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1105568 'move' call_tmp[1105566](1105571 call add[1105983] start[1105090] call_tmp[1105558]))
    (1105593 return call_tmp[1105566])
  }
  function _local_absSameType[2548799](const in arg str[2548801]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (2548806 return 1)
  }
  function absSameType[1090903](const in arg str[1090905]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    (1090995 return 1)
  }
  function mul[1105596](const in arg a[1105598]:int(64)[13], const in arg b[1105600]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2279622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279624 'move' call_tmp[2279622](2279626 '*' a[1105598] b[1105600]))
    (1105693 return call_tmp[2279622])
  }
  function add[1105983](const in arg a[1105985]:int(64)[13], const in arg b[1105987]:int(64)[13]) : int(64)[13] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2189436]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2189438 'move' call_tmp[2189436](2189440 '+' a[1105985] b[1105987]))
    (1106080 return call_tmp[2189436])
  }
}