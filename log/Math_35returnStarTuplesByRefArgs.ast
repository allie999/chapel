AST dump for Math after pass returnStarTuplesByRefArgs.
Module use list: ChapelStandard HaltWrappers SysCTypes 

{
  function chpl__init_Math[416214]() : void[4] "insert line file info" "module init" "resolved"
  {
    (532659 return _void[55])
  }
  function divceil[1401581](const in arg m[1401583]:int(64)[13], const in arg n[1401585]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val local__str_literal_71[2579125]:string[26] "temp"
    (2579126 'move' "Attempt to divide by zero" "Attempt to divide by zero")
    val tmp[1401597]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val call_tmp[2335530]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2335532 'move' call_tmp[2335530](2335534 '>=' m[1401583] 0))
    if call_tmp[2335530]
    {
      val tmp[1401615]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "temp"
      const-val call_tmp[2335540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335542 'move' call_tmp[2335540](2335544 '>=' n[1401585] 0))
      if call_tmp[2335540]
      {
        const-val call_tmp[2242256]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242258 'move' call_tmp[2242256](2242260 '+' m[1401583] n[1401585]))
        const-val call_tmp[2261334]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2261336 'move' call_tmp[2261334](2261338 '-' call_tmp[2242256] 1))
        const-val call_tmp[2335036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335038 'move' call_tmp[2335036](2335040 '==' n[1401585] 0))
        if call_tmp[2335036]
        {
          (2335046 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335049]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335051 'move' call_tmp[2335049](2335053 '/' call_tmp[2261334] n[1401585]))
        (1401657 'move' tmp[1401615] call_tmp[2335049])
      }
      {
        const-val call_tmp[2335059]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335061 'move' call_tmp[2335059](2335063 '==' n[1401585] 0))
        if call_tmp[2335059]
        {
          (2335069 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335072]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335074 'move' call_tmp[2335072](2335076 '/' m[1401583] n[1401585]))
        (1401671 'move' tmp[1401615] call_tmp[2335072])
      }
      (1401677 'move' tmp[1401597] tmp[1401615])
    }
    {
      val tmp[1401683]:int(64)[13] "dead after last mention" "expr temp" "if-expr result" "temp"
      const-val call_tmp[2335550]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2335552 'move' call_tmp[2335550](2335554 '>=' n[1401585] 0))
      if call_tmp[2335550]
      {
        const-val call_tmp[2335082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335084 'move' call_tmp[2335082](2335086 '==' n[1401585] 0))
        if call_tmp[2335082]
        {
          (2335092 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335095]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335097 'move' call_tmp[2335095](2335099 '/' m[1401583] n[1401585]))
        (1401709 'move' tmp[1401683] call_tmp[2335095])
      }
      {
        const-val call_tmp[2242266]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2242268 'move' call_tmp[2242266](2242270 '+' m[1401583] n[1401585]))
        const-val call_tmp[2236250]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2236252 'move' call_tmp[2236250](2236254 '+' call_tmp[2242266] 1))
        const-val call_tmp[2335105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335107 'move' call_tmp[2335105](2335109 '==' n[1401585] 0))
        if call_tmp[2335105]
        {
          (2335115 call halt[154111] "Attempt to divide by zero")
        }
        const-val call_tmp[2335118]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2335120 'move' call_tmp[2335118](2335122 '/' call_tmp[2236250] n[1401585]))
        (1401739 'move' tmp[1401683] call_tmp[2335118])
      }
      (1401745 'move' tmp[1401597] tmp[1401683])
    }
    (1401755 return tmp[1401597])
  }
}