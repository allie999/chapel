AST dump for ChapelLocale after pass normalize.
Module use list: LocaleModel HaltWrappers SysCTypes 

{
  function chpl__init_ChapelLocale[415883]() : void[4] "insert line file info" "module init"
  {
    (541563 'move' chpl_nodeID_t[89859](541561 call int(64)[13] 32))
    (541568 'move' chpl_sublocID_t[89866](541566 call int(64)[13] 32))
    { scopeless type extern
      (541570 'default init var' c_sublocid_none[89870] chpl_sublocID_t[89866])
    }
    (89873 'end of statement')
    { scopeless type extern
      (541573 'default init var' c_sublocid_any[89875] chpl_sublocID_t[89866])
    }
    (89878 'end of statement')
    { scopeless type extern
      (541576 'default init var' c_sublocid_all[89880] chpl_sublocID_t[89866])
    }
    (89883 'end of statement')
    {
    }
    unknown call_tmp[632253] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632256 'move' call_tmp[632253](747725 'new' locale[28] nilLocale[89918]))
    (541579 'init var' nilLocale[89939] call_tmp[632253])
    (89942 'end of statement')
    unknown call_tmp[632258] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632261 'move' call_tmp[632258](747726 'new' locale[28] default[89922]))
    (541581 'init var' defaultLocale[89953] call_tmp[632258])
    (89956 'end of statement')
    unknown call_tmp[632263] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632266 'move' call_tmp[632263](747727 'new' locale[28] dummy[89920]))
    (541583 'init var' dummyLocale[89967] call_tmp[632263])
    (89970 'end of statement')
    (541599 'init var' rootLocale[91511] nilLocale[89939])
    (91514 'end of statement')
    (541601 'init var' replicateRootLocale[91516] 1)
    (91519 'end of statement')
    (541603 'init var' origRootLocale[91521] nilLocale[89939])
    (91524 'end of statement')
    { scopeless type extern
      unknown call_tmp[633371] "expr temp" "maybe param" "maybe type" "temp"
      (633374 'move' call_tmp[633371](92931 call c_ptr[205045](?) chpl_privateObject_t[92925]))
      (541636 'default init var' chpl_privateObjects[92932] call_tmp[633371])
    }
    (92935 'end of statement' chpl_sublocID_t[89866] chpl_sublocID_t[89866] chpl_sublocID_t[89866] nilLocale[89939] nilLocale[89939])
    (514138 return _void[55])
  }
  function chpl__deinit_ChapelLocale[93254]() : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[633473] "expr temp" "maybe param" "maybe type" "temp"
    (633476 'move' call_tmp[633473](93257 call _instance _mt[243] origRootLocale[91521]))
    (93261 call chpl__delete call_tmp[633473])
    (477357 'end of statement')
    unknown call_tmp[633480] "expr temp" "maybe param" "maybe type" "temp"
    (633483 'move' call_tmp[633480](93266 call _instance _mt[243] dummyLocale[89967]))
    (93270 call chpl__delete call_tmp[633480])
    (514140 return _void[55])
  }
  unknown chpl_nodeID_t[89859] "dead at end of block" "insert auto destroy" "no doc" "type variable"(89858 call int(64)[13] 32)
  unknown chpl_sublocID_t[89866] "dead at end of block" "insert auto destroy" "no doc" "type variable"(89865 call int(64)[13] 32)
  const c_sublocid_none[89870] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const c_sublocid_any[89875] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const c_sublocid_all[89880] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function chpl_isActualSublocID[89890](arg subloc[89887] :
  chpl_sublocID_t[89866]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[513537] "RVV" "temp"
    unknown tmp[422212] "maybe param" "temp"
    unknown tmp[422233] "maybe param" "temp"
    (422244 'move' tmp[422233](89894 call != subloc[89887] c_sublocid_none[89870]))
    unknown call_tmp[632223] "expr temp" "maybe param" "maybe type" "temp"
    (632226 'move' call_tmp[632223](422246 call _cond_invalid tmp[422233]))
    if call_tmp[632223]
    {
      (422249 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[560799] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560800] "maybe param" "temp"
    unknown call_tmp[632228] "expr temp" "maybe param" "maybe type" "temp"
    (632231 'move' call_tmp[632228](422234 call isTrue tmp[422233]))
    (560805 'move' tmp[560800](560803 call _cond_test call_tmp[632228]))
    if tmp[560800]
    {
      unknown tmp[560807] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[632233] "expr temp" "maybe param" "maybe type" "temp"
      (632236 'move' call_tmp[632233](89898 call != subloc[89887] c_sublocid_any[89875]))
      (560809 'move' tmp[560807](422237 call isTrue call_tmp[632233]))
      (560814 'move' tmp[560799](560811 '_paramFoldLogical' tmp[560800] tmp[560807]))
    }
    {
      (560819 'move' tmp[560799](560816 '_paramFoldLogical' tmp[560800] 0))
    }
    (422223 'move' tmp[422212] tmp[560799])
    unknown call_tmp[632238] "expr temp" "maybe param" "maybe type" "temp"
    (632241 'move' call_tmp[632238](422225 call _cond_invalid tmp[422212]))
    if call_tmp[632238]
    {
      (422228 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[560826] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560827] "maybe param" "temp"
    unknown call_tmp[632243] "expr temp" "maybe param" "maybe type" "temp"
    (632246 'move' call_tmp[632243](422213 call isTrue tmp[422212]))
    (560832 'move' tmp[560827](560830 call _cond_test call_tmp[632243]))
    if tmp[560827]
    {
      unknown tmp[560834] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[632248] "expr temp" "maybe param" "maybe type" "temp"
      (632251 'move' call_tmp[632248](89904 call != subloc[89887] c_sublocid_all[89880]))
      (560836 'move' tmp[560834](422216 call isTrue call_tmp[632248]))
      (560841 'move' tmp[560826](560838 '_paramFoldLogical' tmp[560827] tmp[560834]))
    }
    {
      (560846 'move' tmp[560826](560843 '_paramFoldLogical' tmp[560827] 0))
    }
    (513542 'move' ret[513537](513541 'deref' tmp[560826]))
    (513539 return ret[513537])
  }
  type localeKind[89924] def regular[89914]:localeKind[89924] def any[89916]:localeKind[89924] def nilLocale[89918]:localeKind[89924] def dummy[89920]:localeKind[89924] def default[89922]:localeKind[89924]
  const nilLocale[89939] "dead at end of block" "const" "insert auto destroy" "locale private" "no doc"
  unknown defaultLocale[89953] "dead at end of block" "insert auto destroy" "locale private" "no doc"
  unknown dummyLocale[89967] "dead at end of block" "insert auto destroy" "no doc"
  function locale[28]._value[89981](arg _mt[90370]:_MT[238], arg this[90368]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[513546] "RVV" "temp"
    unknown call_tmp[632270] "expr temp" "maybe param" "maybe type" "temp"
    (632273 'move' call_tmp[632270](377704 call _instance _mt[243] this[90368]))
    unknown call_tmp[632275] "expr temp" "maybe param" "maybe type" "temp"
    (632278 'move' call_tmp[632275](89984 call postfix! call_tmp[632270]))
    (513551 'move' ret[513546](513550 'deref' call_tmp[632275]))
    (513548 return ret[513546])
  }
  function locale[28].chpl_forwarding_expr3__value[89992](arg _mt[90374]:_MT[238], arg this[90372]:locale[28]) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[513555] "RVV" "temp"
    (513559 'move' ret[513555](377708 call _value _mt[243] this[90372]))
    (513557 return ret[513555])
  }
  function locale[28].init[90000](arg _mt[90378]:_MT[238], ref arg this[90376]:locale[28]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632282] "expr temp" "maybe param" "maybe type" "temp"
    (632285 'move' call_tmp[632282](90024 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[632282]
    {
      unknown call_tmp[632289] "maybe param" "maybe type" "temp"
      (632292 'move' call_tmp[632289](90008 call _instance _mt[243] defaultLocale[89953]))
      unknown tmp[460285] "temp"
      (460288 'init var' tmp[460285] call_tmp[632289] unmanaged BaseLocale?[415334])
      (460290 'init field' this[90376] c"_instance" tmp[460285])
      (477110 'end of statement')
    }
    {
      unknown tmp[460294] "temp"
      (460297 'init var' tmp[460294] nil[44] unmanaged BaseLocale?[415334])
      (460299 'init field' this[90376] c"_instance" tmp[460294])
      (477111 'end of statement')
    }
    (513561 return _void[55])
  }
  function locale[28].init[90037](arg _mt[90382]:_MT[238], ref arg this[90380]:locale[28], arg _instance[90034]:BaseLocale[377699](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632294] "maybe param" "maybe type" "temp"
    (632297 'move' call_tmp[632294](90046 call _to_unmanaged _instance[90034]))
    unknown tmp[460303] "temp"
    (460306 'init var' tmp[460303] call_tmp[632294] unmanaged BaseLocale?[415334])
    (460308 'init field' this[90380] c"_instance" tmp[460303])
    (477112 'end of statement')
    (513563 return _void[55])
  }
  function locale[28].init[90057](arg _mt[90386]:_MT[238], ref arg this[90384]:locale[28], param arg kind[90055]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632299] "expr temp" "maybe param" "maybe type" "temp"
    (632302 'move' call_tmp[632299](90066 call == kind[90055] regular[89914]))
    unknown call_tmp[632304] "expr temp" "maybe param" "maybe type" "temp"
    (632307 'move' call_tmp[632304](90152 call _cond_test call_tmp[632299]))
    if call_tmp[632304]
    {
      (90104 call compilerError "locale.init(kind) can not be used to create " "a regular locale instance")
      (477113 'end of statement')
      val tmp[460342]:unmanaged BaseLocale?[415334] "temp"
      (460345 'default init var' tmp[460342] unmanaged BaseLocale?[415334])
      (460347 '.=' this[90384] c"_instance" tmp[460342])
      (477114 'end of statement')
    }
    {
      unknown call_tmp[632309] "expr temp" "maybe param" "maybe type" "temp"
      (632312 'move' call_tmp[632309](90111 call == kind[90055] dummy[89920]))
      unknown call_tmp[632314] "expr temp" "maybe param" "maybe type" "temp"
      (632317 'move' call_tmp[632314](90146 call _cond_test call_tmp[632309]))
      if call_tmp[632314]
      {
        unknown call_tmp[632319] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (632322 'move' call_tmp[632319](747728 'new' DummyLocale[377717](?)(_chpl_manager = unmanaged[220](?))))
        unknown tmp[460312] "temp"
        (460315 'init var' tmp[460312] call_tmp[632319] unmanaged BaseLocale?[415334])
        (460317 'init field' this[90384] c"_instance" tmp[460312])
        (477115 'end of statement')
      }
      {
        unknown call_tmp[632324] "expr temp" "maybe param" "maybe type" "temp"
        (632327 'move' call_tmp[632324](90131 call == kind[90055] default[89922]))
        unknown call_tmp[632329] "expr temp" "maybe param" "maybe type" "temp"
        (632332 'move' call_tmp[632329](90141 call _cond_test call_tmp[632324]))
        if call_tmp[632329]
        {
          unknown tmp[460321] "temp"
          (460324 'init var' tmp[460321] nil[44] unmanaged BaseLocale?[415334])
          (460326 'init field' this[90384] c"_instance" tmp[460321])
          (477116 'end of statement')
        }
        {
          val tmp[460332]:unmanaged BaseLocale?[415334] "temp"
          (460335 'default init var' tmp[460332] unmanaged BaseLocale?[415334])
          (460337 '.=' this[90384] c"_instance" tmp[460332])
          (477117 'end of statement')
        }
      }
    }
    (513565 return _void[55])
  }
  function locale[28].init=[90167](arg _mt[90390]:_MT[238], ref arg this[90388]:locale[28], arg other[90164]:locale[28]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632336] "maybe param" "maybe type" "temp"
    (632339 'move' call_tmp[632336](90174 call _instance _mt[243] other[90164]))
    unknown tmp[460351] "temp"
    (460354 'init var' tmp[460351] call_tmp[632336] unmanaged BaseLocale?[415334])
    (460356 'init field' this[90388] c"_instance" tmp[460351])
    (477118 'end of statement')
    (513567 return _void[55])
  }
  function locale[28].deinit[90185](arg _mt[90394]:_MT[238], arg this[90392]:locale[28]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (513569 return _void[55])
  }
  function locale[28].localeid[90192](arg _mt[90398]:_MT[238], arg this[90396]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[513573] "RVV" "temp"
    unknown call_tmp[632343] "expr temp" "maybe param" "maybe type" "temp"
    (632346 'move' call_tmp[632343](90195 call _value _mt[243] this[90396]))
    unknown call_tmp[632350] "expr temp" "maybe param" "maybe type" "temp"
    (632353 'move' call_tmp[632350](90200 call localeid _mt[243] call_tmp[632343]))
    (513578 'move' ret[513573](513577 'deref' call_tmp[632350]))
    (513575 return ret[513573])
  }
  function locale[28].chpl_id[90210](arg _mt[90402]:_MT[238], arg this[90400]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513582] "RVV" "temp"
    unknown call_tmp[632357] "expr temp" "maybe param" "maybe type" "temp"
    (632360 'move' call_tmp[632357](90213 call _value _mt[243] this[90400]))
    unknown call_tmp[632364] "expr temp" "maybe param" "maybe type" "temp"
    (632367 'move' call_tmp[632364](90222 call(90218 call (partial) chpl_id _mt[243] call_tmp[632357])))
    (513587 'move' ret[513582](513586 'deref' call_tmp[632364]))
    (513584 return ret[513582])
  }
  function locale[28].chpl_localeid[90230](arg _mt[90406]:_MT[238], arg this[90404]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513591] "RVV" "temp"
    unknown call_tmp[632371] "expr temp" "maybe param" "maybe type" "temp"
    (632374 'move' call_tmp[632371](90233 call _value _mt[243] this[90404]))
    unknown call_tmp[632378] "expr temp" "maybe param" "maybe type" "temp"
    (632381 'move' call_tmp[632378](90242 call(90238 call (partial) chpl_localeid _mt[243] call_tmp[632371])))
    (513596 'move' ret[513591](513595 'deref' call_tmp[632378]))
    (513593 return ret[513591])
  }
  function locale[28].chpl_name[90250](arg _mt[90410]:_MT[238], arg this[90408]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513600] "RVV" "temp"
    unknown call_tmp[632385] "expr temp" "maybe param" "maybe type" "temp"
    (632388 'move' call_tmp[632385](90253 call _value _mt[243] this[90408]))
    unknown call_tmp[632392] "expr temp" "maybe param" "maybe type" "temp"
    (632395 'move' call_tmp[632392](90262 call(90258 call (partial) chpl_name _mt[243] call_tmp[632385])))
    (513605 'move' ret[513600](513604 'deref' call_tmp[632392]))
    (513602 return ret[513600])
  }
  function locale[28].defaultMemory[90270](arg _mt[90414]:_MT[238], arg this[90412]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513609] "RVV" "temp"
    unknown call_tmp[632399] "expr temp" "maybe param" "maybe type" "temp"
    (632402 'move' call_tmp[632399](90273 call _value _mt[243] this[90412]))
    unknown call_tmp[632406] "expr temp" "maybe param" "maybe type" "temp"
    (632409 'move' call_tmp[632406](90282 call(90278 call (partial) defaultMemory _mt[243] call_tmp[632399])))
    (513614 'move' ret[513609](513613 'deref' call_tmp[632406]))
    (513611 return ret[513609])
  }
  function locale[28].largeMemory[90290](arg _mt[90418]:_MT[238], arg this[90416]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513618] "RVV" "temp"
    unknown call_tmp[632413] "expr temp" "maybe param" "maybe type" "temp"
    (632416 'move' call_tmp[632413](90293 call _value _mt[243] this[90416]))
    unknown call_tmp[632420] "expr temp" "maybe param" "maybe type" "temp"
    (632423 'move' call_tmp[632420](90302 call(90298 call (partial) largeMemory _mt[243] call_tmp[632413])))
    (513623 'move' ret[513618](513622 'deref' call_tmp[632420]))
    (513620 return ret[513618])
  }
  function locale[28].lowLatencyMemory[90310](arg _mt[90422]:_MT[238], arg this[90420]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513627] "RVV" "temp"
    unknown call_tmp[632427] "expr temp" "maybe param" "maybe type" "temp"
    (632430 'move' call_tmp[632427](90313 call _value _mt[243] this[90420]))
    unknown call_tmp[632434] "expr temp" "maybe param" "maybe type" "temp"
    (632437 'move' call_tmp[632434](90322 call(90318 call (partial) lowLatencyMemory _mt[243] call_tmp[632427])))
    (513632 'move' ret[513627](513631 'deref' call_tmp[632434]))
    (513629 return ret[513627])
  }
  function locale[28].highBandwidthMemory[90330](arg _mt[90426]:_MT[238], arg this[90424]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513636] "RVV" "temp"
    unknown call_tmp[632441] "expr temp" "maybe param" "maybe type" "temp"
    (632444 'move' call_tmp[632441](90333 call _value _mt[243] this[90424]))
    unknown call_tmp[632448] "expr temp" "maybe param" "maybe type" "temp"
    (632451 'move' call_tmp[632448](90342 call(90338 call (partial) highBandwidthMemory _mt[243] call_tmp[632441])))
    (513641 'move' ret[513636](513640 'deref' call_tmp[632448]))
    (513638 return ret[513636])
  }
  function locale[28].getChildCount[90350](arg _mt[90430]:_MT[238], arg this[90428]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513645] "RVV" "temp"
    unknown call_tmp[632455] "expr temp" "maybe param" "maybe type" "temp"
    (632458 'move' call_tmp[632455](90353 call _value _mt[243] this[90428]))
    unknown call_tmp[632462] "expr temp" "maybe param" "maybe type" "temp"
    (632465 'move' call_tmp[632462](90360 call(90356 call (partial) getChildCount _mt[243] call_tmp[632455])))
    (513650 'move' ret[513645](513649 'deref' call_tmp[632462]))
    (513647 return ret[513645])
  }
  type locale[28] val _instance[89975]:unmanaged BaseLocale?[415334] unmanaged BaseLocale?[415334] forwarding ( )
  function here[90435]() : _unknown[51] "inline" "no parens"
  {
    unknown ret[513654] "RVV" "temp"
    unknown call_tmp[632467] "expr temp" "maybe param" "maybe type" "temp"
    (632470 'move' call_tmp[632467](377721 call here_id[92815]))
    unknown call_tmp[632472] "expr temp" "maybe param" "maybe type" "temp"
    (632475 'move' call_tmp[632472](90440 call chpl_localeID_to_locale call_tmp[632467]))
    (513659 'move' ret[513654](513658 'deref' call_tmp[632472]))
    (513656 return ret[513654])
  }
  function locale[28].hostname[90449](arg _mt[90454]:_MT[238], arg this[90451]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513663] "RVV" "temp"
    (90475 call writeln "in locale.hostname line 212")
    (477129 'end of statement')
    unknown call_tmp[632479] "expr temp" "maybe param" "maybe type" "temp"
    (632482 'move' call_tmp[632479](90479 call _value _mt[243] this[90451]))
    unknown call_tmp[632486] "expr temp" "maybe param" "maybe type" "temp"
    (632489 'move' call_tmp[632486](90484 call hostname _mt[243] call_tmp[632479]))
    (513668 'move' ret[513663](513667 'deref' call_tmp[632486]))
    (513665 return ret[513663])
  }
  function locale[28].name[90494](arg _mt[90499]:_MT[238], arg this[90496]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513672] "RVV" "temp"
    unknown call_tmp[632493] "expr temp" "maybe param" "maybe type" "temp"
    (632496 'move' call_tmp[632493](90502 call _value _mt[243] this[90496]))
    unknown call_tmp[632500] "expr temp" "maybe param" "maybe type" "temp"
    (632503 'move' call_tmp[632500](90507 call name _mt[243] call_tmp[632493]))
    (513677 'move' ret[513672](513676 'deref' call_tmp[632500]))
    (513674 return ret[513672])
  }
  function locale[28].id[90518](arg _mt[90523]:_MT[238], arg this[90520]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513681] "RVV" "temp"
    unknown call_tmp[632507] "expr temp" "maybe param" "maybe type" "temp"
    (632510 'move' call_tmp[632507](90526 call _value _mt[243] this[90520]))
    unknown call_tmp[632514] "expr temp" "maybe param" "maybe type" "temp"
    (632517 'move' call_tmp[632514](90531 call id _mt[243] call_tmp[632507]))
    (513686 'move' ret[513681](513685 'deref' call_tmp[632514]))
    (513683 return ret[513681])
  }
  function locale[28].maxTaskPar[90542](arg _mt[90547]:_MT[238], arg this[90544]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513690] "RVV" "temp"
    unknown call_tmp[632521] "expr temp" "maybe param" "maybe type" "temp"
    (632524 'move' call_tmp[632521](90550 call _value _mt[243] this[90544]))
    unknown call_tmp[632528] "expr temp" "maybe param" "maybe type" "temp"
    (632531 'move' call_tmp[632528](90553 call maxTaskPar _mt[243] call_tmp[632521]))
    (513695 'move' ret[513690](513694 'deref' call_tmp[632528]))
    (513692 return ret[513690])
  }
  function locale[28].numPUs[90570](arg _mt[90581]:_MT[238], arg this[90578]:locale[28] :
  locale[28], arg logical[90566]:bool[10] =
  0, arg accessible[90574]:bool[10] =
  1) : _unknown[51] "inline" "method"
  {
    unknown ret[513699] "RVV" "temp"
    unknown call_tmp[632535] "expr temp" "maybe param" "maybe type" "temp"
    (632538 'move' call_tmp[632535](90584 call _value _mt[243] this[90578]))
    unknown call_tmp[632542] "expr temp" "maybe param" "maybe type" "temp"
    (632545 'move' call_tmp[632542](90595 call(90589 call (partial) numPUs _mt[243] call_tmp[632535]) logical[90566] accessible[90574]))
    (513704 'move' ret[513699](513703 'deref' call_tmp[632542]))
    (513701 return ret[513699])
  }
  function locale[28].callStackSize[90604](arg _mt[90609]:_MT[238], arg this[90606]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513708] "RVV" "temp"
    unknown call_tmp[632549] "expr temp" "maybe param" "maybe type" "temp"
    (632552 'move' call_tmp[632549](90612 call _value _mt[243] this[90606]))
    unknown call_tmp[632556] "expr temp" "maybe param" "maybe type" "temp"
    (632559 'move' call_tmp[632556](90617 call callStackSize _mt[243] call_tmp[632549]))
    (513713 'move' ret[513708](513712 'deref' call_tmp[632556]))
    (513710 return ret[513708])
  }
  function =[90631](ref arg l1[90628]:locale[28], const  ref arg l2[90634]:locale[28]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    unknown call_tmp[632563] "expr temp" "maybe param" "maybe type" "temp"
    (632566 'move' call_tmp[632563](90638 call _instance _mt[243] l1[90628]))
    unknown call_tmp[632570] "expr temp" "maybe param" "maybe type" "temp"
    (632573 'move' call_tmp[632570](90642 call _instance _mt[243] l2[90634]))
    (90645 call = call_tmp[632563] call_tmp[632570])
    (513715 return _void[55])
  }
  function BaseLocale[91201].init[90654](arg _mt[91205]:_MT[238], arg this[91203]:BaseLocale[91201]) : void[4] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown super_tmp[460455] "temporary of super field" "temp"
    (460463 'move' super_tmp[460455](460456 '.v' this[91203] c"super"))
    (460459 call init _mt[243] super_tmp[460455])
    (477137 'end of statement')
    unknown tmp[460364] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491878] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632575] "expr temp" "maybe param" "maybe type" "temp"
      (632578 'move' call_tmp[632575](460366 '.v' this[91203] c"super"))
      (491882 'move' call_type_tmp[491878](460369 'typeof' call_tmp[632575]))
    }
    (460370 'move' tmp[460364] call_type_tmp[491878])
    unknown call_tmp[632580] "maybe param" "maybe type" "temp"
    (632583 'move' call_tmp[632580](460375 'cast' tmp[460364] this[91203]))
    unknown chpl__thisAsParent[460372] "dead at end of block" "insert auto destroy" "temp"
    (541585 'init var' chpl__thisAsParent[460372] call_tmp[632580] tmp[460364])
    (460378 'setcid' chpl__thisAsParent[460372])
    (477138 'end of statement')
    unknown tmp[460382] "temp"
    (460384 'init var' tmp[460382] nilLocale[89939])
    (460386 '.=' this[91203] c"parent" tmp[460382])
    (477139 'end of statement')
    val tmp[460390]:int(64)[13] "temp"
    (460393 'default init var' tmp[460390] int(64)[13])
    (460395 '.=' this[91203] c"nPUsLogAcc" tmp[460390])
    (477140 'end of statement')
    val tmp[460399]:int(64)[13] "temp"
    (460402 'default init var' tmp[460399] int(64)[13])
    (460404 '.=' this[91203] c"nPUsLogAll" tmp[460399])
    (477141 'end of statement')
    val tmp[460408]:int(64)[13] "temp"
    (460411 'default init var' tmp[460408] int(64)[13])
    (460413 '.=' this[91203] c"nPUsPhysAcc" tmp[460408])
    (477142 'end of statement')
    val tmp[460417]:int(64)[13] "temp"
    (460420 'default init var' tmp[460417] int(64)[13])
    (460422 '.=' this[91203] c"nPUsPhysAll" tmp[460417])
    (477143 'end of statement')
    val tmp[460426]:int(64)[13] "temp"
    (460429 'default init var' tmp[460426] int(64)[13])
    (460431 '.=' this[91203] c"maxTaskPar" tmp[460426])
    (477144 'end of statement')
    unknown tmp[460435] "temp"
    (460438 'default init var' tmp[460435] size_t[20654])
    (460440 '.=' this[91203] c"callStackSize" tmp[460435])
    (477145 'end of statement')
    unknown tmp[460444] "temp"
    unknown call_tmp[632585] "expr temp" "maybe param" "maybe type" "temp"
    (632588 'move' call_tmp[632585](460447 call chpl__processorAtomicType int(64)[13]))
    (460449 'default init var' tmp[460444] call_tmp[632585])
    (460451 '.=' this[91203] c"runningTaskCounter" tmp[460444])
    (477146 'end of statement')
    (460466 'setcid' this[91203])
    (513717 return _void[55])
  }
  function BaseLocale[91201].init[90665](arg _mt[91209]:_MT[238], arg this[91207]:BaseLocale[91201], arg parent[90662]:locale[28]) : void[4] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown super_tmp[460562] "temporary of super field" "temp"
    (460570 'move' super_tmp[460562](460563 '.v' this[91207] c"super"))
    (460566 call init _mt[243] super_tmp[460562])
    (477148 'end of statement')
    unknown tmp[460472] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491884] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632590] "expr temp" "maybe param" "maybe type" "temp"
      (632593 'move' call_tmp[632590](460474 '.v' this[91207] c"super"))
      (491888 'move' call_type_tmp[491884](460477 'typeof' call_tmp[632590]))
    }
    (460478 'move' tmp[460472] call_type_tmp[491884])
    unknown call_tmp[632595] "maybe param" "maybe type" "temp"
    (632598 'move' call_tmp[632595](460483 'cast' tmp[460472] this[91207]))
    unknown chpl__thisAsParent[460480] "dead at end of block" "insert auto destroy" "temp"
    (541587 'init var' chpl__thisAsParent[460480] call_tmp[632595] tmp[460472])
    (460486 'setcid' chpl__thisAsParent[460480])
    (477149 'end of statement')
    unknown tmp[460488] "temp"
    (460490 'init var' tmp[460488] parent[90662])
    (460492 '.=' this[91207] c"parent" tmp[460488])
    (477150 'end of statement')
    val tmp[460497]:int(64)[13] "temp"
    (460500 'default init var' tmp[460497] int(64)[13])
    (460502 '.=' this[91207] c"nPUsLogAcc" tmp[460497])
    (477151 'end of statement')
    val tmp[460506]:int(64)[13] "temp"
    (460509 'default init var' tmp[460506] int(64)[13])
    (460511 '.=' this[91207] c"nPUsLogAll" tmp[460506])
    (477152 'end of statement')
    val tmp[460515]:int(64)[13] "temp"
    (460518 'default init var' tmp[460515] int(64)[13])
    (460520 '.=' this[91207] c"nPUsPhysAcc" tmp[460515])
    (477153 'end of statement')
    val tmp[460524]:int(64)[13] "temp"
    (460527 'default init var' tmp[460524] int(64)[13])
    (460529 '.=' this[91207] c"nPUsPhysAll" tmp[460524])
    (477154 'end of statement')
    val tmp[460533]:int(64)[13] "temp"
    (460536 'default init var' tmp[460533] int(64)[13])
    (460538 '.=' this[91207] c"maxTaskPar" tmp[460533])
    (477155 'end of statement')
    unknown tmp[460542] "temp"
    (460545 'default init var' tmp[460542] size_t[20654])
    (460547 '.=' this[91207] c"callStackSize" tmp[460542])
    (477156 'end of statement')
    unknown tmp[460551] "temp"
    unknown call_tmp[632600] "expr temp" "maybe param" "maybe type" "temp"
    (632603 'move' call_tmp[632600](460554 call chpl__processorAtomicType int(64)[13]))
    (460556 'default init var' tmp[460551] call_tmp[632600])
    (460558 '.=' this[91207] c"runningTaskCounter" tmp[460551])
    (477157 'end of statement')
    (460573 'setcid' this[91207])
    (513719 return _void[55])
  }
  function BaseLocale[91201].numPUs[90713](arg _mt[91213]:_MT[238], arg this[91211]:BaseLocale[91201], arg logical[90709]:bool[10] =
  0, arg accessible[90717]:bool[10] =
  1) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513723] "RVV" "temp"
    unknown tmp[560915] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560916] "maybe param" "temp"
    (560921 'move' tmp[560916](560919 call _cond_test logical[90709]))
    if tmp[560916]
    {
      unknown tmp[560853] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[560854] "maybe param" "temp"
      (560859 'move' tmp[560854](560857 call _cond_test accessible[90717]))
      if tmp[560854]
      {
        unknown tmp[560861] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560863 'move' tmp[560861](377731 call nPUsLogAcc _mt[243] this[91211]))
        (560868 'move' tmp[560853](560865 '_paramFoldLogical' tmp[560854] tmp[560861]))
      }
      {
        unknown tmp[560870] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560872 'move' tmp[560870](377736 call nPUsLogAll _mt[243] this[91211]))
        (560877 'move' tmp[560853](560874 '_paramFoldLogical' tmp[560854] tmp[560870]))
      }
      (560926 'move' tmp[560915](560923 '_paramFoldLogical' tmp[560916] tmp[560853]))
    }
    {
      unknown tmp[560884] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[560885] "maybe param" "temp"
      (560890 'move' tmp[560885](560888 call _cond_test accessible[90717]))
      if tmp[560885]
      {
        unknown tmp[560892] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560894 'move' tmp[560892](377742 call nPUsPhysAcc _mt[243] this[91211]))
        (560899 'move' tmp[560884](560896 '_paramFoldLogical' tmp[560885] tmp[560892]))
      }
      {
        unknown tmp[560901] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560903 'move' tmp[560901](377747 call nPUsPhysAll _mt[243] this[91211]))
        (560908 'move' tmp[560884](560905 '_paramFoldLogical' tmp[560885] tmp[560901]))
      }
      (560931 'move' tmp[560915](560928 '_paramFoldLogical' tmp[560916] tmp[560884]))
    }
    (513728 'move' ret[513723](513727 'deref' tmp[560915]))
    (513725 return ret[513723])
  }
  function BaseLocale[91201].id[90754](arg _mt[91217]:_MT[238], arg this[91215]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513732] "RVV" "temp"
    unknown call_tmp[632613] "expr temp" "maybe param" "maybe type" "temp"
    (632616 'move' call_tmp[632613](90777 '_wide_get_locale' this[91215]))
    unknown call_tmp[632618] "expr temp" "maybe param" "maybe type" "temp"
    (632621 'move' call_tmp[632618](90779 call chpl_nodeFromLocaleID call_tmp[632613]))
    (513738 'move' ret[513732](513737 'coerce' call_tmp[632618] int(64)[13]))
    (513734 return ret[513732])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].localeid[90788](arg _mt[91221]:_MT[238], arg this[91219]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no parens"
  {
    unknown ret[513742] "RVV" "temp"
    unknown call_tmp[632623] "expr temp" "maybe param" "maybe type" "temp"
    (632626 'move' call_tmp[632623](90794 '_wide_get_locale' this[91219]))
    (513748 'move' ret[513742](513747 'coerce' call_tmp[632623] chpl_localeID_t[209294]))
    (513744 return ret[513742])
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function BaseLocale[91201].hostname[90803](arg _mt[91225]:_MT[238], arg this[91223]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513758] "RVV" "temp"
    function chpl_nodeName[90808]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[513752] "RVV" "temp"
      (513754 return ret[513752])
    }
    { scopeless type
      c_string[19]
    }
    unknown hname[90816] "dead at end of block" "insert auto destroy"
    (541589 'default init var' hname[90816] string[26])
    (90819 'end of statement')
    const tmp[90839] "const" "temp"
    unknown call_tmp[632628] "expr temp" "maybe param" "maybe type" "temp"
    (632631 'move' call_tmp[632628](90836 '_wide_get_locale' this[91223]))
    (90841 'move' tmp[90839](90837 'deref' call_tmp[632628]))
    {
      {
        Try!
        {
          {
            unknown call_tmp[632633] "expr temp" "maybe param" "maybe type" "temp"
            (632636 'move' call_tmp[632633](90825 call chpl_nodeName))
            unknown call_tmp[632638] "expr temp" "maybe param" "maybe type" "temp"
            (632641 'move' call_tmp[632638](90827 call createStringWithNewBuffer call_tmp[632633]))
            (90828 call = hname[90816] call_tmp[632638])
            (477162 'end of statement' hname[90816])
          }
        }
      }
      (90844 'on block' 0 tmp[90839])
    }
    (513764 'move' ret[513758](513763 'coerce' hname[90816] string[26]))
    gotoReturn _end_hostname[513756] _end_hostname[513756]
    (477164 'end of statement' hname[90816])
    label _end_hostname[513756]
    (513760 return ret[513758])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91201].writeThis[90857](arg _mt[91229]:_MT[238], arg this[91227]:BaseLocale[91201], arg f[90855]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides" "no return value for void"
  {
    (90866 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513768 return _void[55])
    (358248 'referenced modules list' HaltWrappers[209910])
  }
  function BaseLocale[91201].name[90873](arg _mt[91233]:_MT[238], arg this[91231]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513772] "RVV" "temp"
    unknown call_tmp[632645] "expr temp" "maybe param" "maybe type" "temp"
    (632648 'move' call_tmp[632645](90877 call(377759 call (partial) chpl_name _mt[243] this[91231])))
    unknown call_tmp[632650] "expr temp" "maybe param" "maybe type" "temp"
    (632653 'move' call_tmp[632650](90879 call _cast string[26] call_tmp[632645]))
    (513777 'move' ret[513772](513776 'deref' call_tmp[632650]))
    (513774 return ret[513772])
  }
  function BaseLocale[91201].runningTaskCntSet[90900](arg _mt[91237]:_MT[238], arg this[91235]:BaseLocale[91201], arg val[90897]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632657] "expr temp" "maybe param" "maybe type" "temp"
    (632660 'move' call_tmp[632657](358257 call runningTaskCounter _mt[243] this[91235]))
    (90912 call(90903 call (partial) write _mt[243] call_tmp[632657]) val[90897] relaxed[186964])
    (513779 return _void[55])
  }
  function BaseLocale[91201].runningTaskCntAdd[90923](arg _mt[91241]:_MT[238], arg this[91239]:BaseLocale[91201], arg val[90920]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632666] "expr temp" "maybe param" "maybe type" "temp"
    (632669 'move' call_tmp[632666](358263 call runningTaskCounter _mt[243] this[91239]))
    (90935 call(90926 call (partial) add _mt[243] call_tmp[632666]) val[90920] relaxed[186964])
    (513781 return _void[55])
  }
  function BaseLocale[91201].runningTaskCntSub[90946](arg _mt[91245]:_MT[238], arg this[91243]:BaseLocale[91201], arg val[90943]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632675] "expr temp" "maybe param" "maybe type" "temp"
    (632678 'move' call_tmp[632675](358269 call runningTaskCounter _mt[243] this[91243]))
    (90958 call(90949 call (partial) sub _mt[243] call_tmp[632675]) val[90943] relaxed[186964])
    (513783 return _void[55])
  }
  function BaseLocale[91201].runningTaskCnt[90965](arg _mt[91249]:_MT[238], arg this[91247]:BaseLocale[91201]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[513787] "RVV" "temp"
    unknown call_tmp[632684] "expr temp" "maybe param" "maybe type" "temp"
    (632687 'move' call_tmp[632684](358275 call runningTaskCounter _mt[243] this[91247]))
    unknown call_tmp[632691] "maybe param" "maybe type" "temp"
    (632694 'move' call_tmp[632691](90976 call(90968 call (partial) read _mt[243] call_tmp[632684]) relaxed[186964]))
    unknown rtc[90977] "dead at end of block" "insert auto destroy"
    (541591 'init var' rtc[90977] call_tmp[632691])
    (90980 'end of statement')
    unknown tmp[560938] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560939] "maybe param" "temp"
    unknown call_tmp[632696] "expr temp" "maybe param" "maybe type" "temp"
    (632699 'move' call_tmp[632696](90984 call <= rtc[90977] 0))
    (560944 'move' tmp[560939](560942 call _cond_test call_tmp[632696]))
    if tmp[560939]
    {
      (560949 'move' tmp[560938](560946 '_paramFoldLogical' tmp[560939] 1))
    }
    {
      (560954 'move' tmp[560938](560951 '_paramFoldLogical' tmp[560939] rtc[90977]))
    }
    (513792 'move' ret[513787](513791 'deref' tmp[560938]))
    gotoReturn _end_runningTaskCnt[513785] _end_runningTaskCnt[513785]
    (477171 'end of statement' rtc[90977] rtc[90977])
    label _end_runningTaskCnt[513785]
    (513789 return ret[513787])
  }
  function BaseLocale[91201].chpl_id[90997](arg _mt[91253]:_MT[238], arg this[91251]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513798] "RVV" "temp"
    (91005 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477174 'end of statement')
    unknown call_tmp[632701] "expr temp" "maybe param" "maybe type" "temp"
    (632704 'move' call_tmp[632701](91009 call - 1))
    (513804 'move' ret[513798](513803 'coerce' call_tmp[632701] int(64)[13]))
    (513800 return ret[513798])
    (358280 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].chpl_localeid[91018](arg _mt[91257]:_MT[238], arg this[91255]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513808] "RVV" "temp"
    (91026 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477176 'end of statement')
    unknown call_tmp[632706] "expr temp" "maybe param" "maybe type" "temp"
    (632709 'move' call_tmp[632706](91032 call _cast chpl_nodeID_t[89859] 1))
    unknown call_tmp[632711] "expr temp" "maybe param" "maybe type" "temp"
    (632714 'move' call_tmp[632711](91034 call - call_tmp[632706]))
    unknown call_tmp[632716] "expr temp" "maybe param" "maybe type" "temp"
    (632719 'move' call_tmp[632716](91038 call chpl_buildLocaleID call_tmp[632711] c_sublocid_none[89870]))
    (513814 'move' ret[513808](513813 'coerce' call_tmp[632716] chpl_localeID_t[209294]))
    (513810 return ret[513808])
    (358286 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function BaseLocale[91201].chpl_name[91046](arg _mt[91261]:_MT[238], arg this[91259]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513818] "RVV" "temp"
    (91054 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477178 'end of statement')
    (513824 'move' ret[513818](513823 'coerce' "" string[26]))
    (513820 return ret[513818])
    (358292 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91201].defaultMemory[91081](arg _mt[91265]:_MT[238], arg this[91263]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513828] "RVV" "temp"
    (91089 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513830 return ret[513828])
    (358298 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].largeMemory[91097](arg _mt[91269]:_MT[238], arg this[91267]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513834] "RVV" "temp"
    (91105 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513836 return ret[513834])
    (358304 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].lowLatencyMemory[91113](arg _mt[91273]:_MT[238], arg this[91271]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513840] "RVV" "temp"
    (91121 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513842 return ret[513840])
    (358310 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].highBandwidthMemory[91129](arg _mt[91277]:_MT[238], arg this[91275]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513846] "RVV" "temp"
    (91137 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513848 return ret[513846])
    (358316 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91201].getChildCount[91145](arg _mt[91281]:_MT[238], arg this[91279]:BaseLocale[91201]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513852] "RVV" "temp"
    (91153 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477184 'end of statement')
    (513858 'move' ret[513852](513857 'coerce' 0 int(64)[13]))
    (513854 return ret[513852])
    (358322 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91201].addChild[91168](arg _mt[91285]:_MT[238], arg this[91283]:BaseLocale[91201], arg loc[91165]:locale[28]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91175 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513860 return _void[55])
    (358328 'referenced modules list' HaltWrappers[209910])
  }
  function BaseLocale[91201].getChild[91186](arg _mt[91289]:_MT[238], arg this[91287]:BaseLocale[91201], arg idx[91183]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513864] "RVV" "temp"
    (91194 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513866 return ret[513864])
    (358334 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  type BaseLocale[91201] val super[355550]:object[22] "super class" const parent[90681] "const" "no doc" nilLocale[89939] val nPUsLogAcc[90686]:int(64)[13] "no doc" int(64)[13] val nPUsLogAll[90691]:int(64)[13] "no doc" int(64)[13] val nPUsPhysAcc[90696]:int(64)[13] "no doc" int(64)[13] val nPUsPhysAll[90701]:int(64)[13] "no doc" int(64)[13] val maxTaskPar[90743]:int(64)[13] int(64)[13] unknown callStackSize[90748] size_t[20654] unknown runningTaskCounter[90890] "no doc"(90889 call chpl__processorAtomicType int(64)[13])
  type unmanaged BaseLocale?[415334]
  type BaseLocale?[415331](?)
  type BaseLocale[377699](?)
  function DummyLocale[91438].init[91297](arg _mt[91442]:_MT[238], arg this[91440]:DummyLocale[91438]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460576] "temporary of super field" "temp"
    (460578 'move' super_tmp[460576](460575 '.v' this[91440] c"super"))
    (91305 call(91300 call (partial) init _mt[243] super_tmp[460576]) nilLocale[89939])
    (477188 'end of statement')
    unknown tmp[460581] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491890] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632723] "expr temp" "maybe param" "maybe type" "temp"
      (632726 'move' call_tmp[632723](460583 '.v' this[91440] c"super"))
      (491894 'move' call_type_tmp[491890](460586 'typeof' call_tmp[632723]))
    }
    (460587 'move' tmp[460581] call_type_tmp[491890])
    unknown call_tmp[632728] "maybe param" "maybe type" "temp"
    (632731 'move' call_tmp[632728](460592 'cast' tmp[460581] this[91440]))
    unknown chpl__thisAsParent[460589] "dead at end of block" "insert auto destroy" "temp"
    (541593 'init var' chpl__thisAsParent[460589] call_tmp[632728] tmp[460581])
    (460595 'setcid' chpl__thisAsParent[460589])
    (477189 'end of statement')
    (460597 'setcid' this[91440])
    (513868 return _void[55])
  }
  function DummyLocale[91438].chpl_id[91312](arg _mt[91446]:_MT[238], arg this[91444]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513872] "RVV" "temp"
    unknown call_tmp[632733] "expr temp" "maybe param" "maybe type" "temp"
    (632736 'move' call_tmp[632733](91316 call - 1))
    (513878 'move' ret[513872](513877 'coerce' call_tmp[632733] int(64)[13]))
    (513874 return ret[513872])
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91438].chpl_localeid[91326](arg _mt[91450]:_MT[238], arg this[91448]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513882] "RVV" "temp"
    unknown call_tmp[632738] "expr temp" "maybe param" "maybe type" "temp"
    (632741 'move' call_tmp[632738](91332 call _cast chpl_nodeID_t[89859] 1))
    unknown call_tmp[632743] "expr temp" "maybe param" "maybe type" "temp"
    (632746 'move' call_tmp[632743](91334 call - call_tmp[632738]))
    unknown call_tmp[632748] "expr temp" "maybe param" "maybe type" "temp"
    (632751 'move' call_tmp[632748](91338 call chpl_buildLocaleID call_tmp[632743] c_sublocid_none[89870]))
    (513888 'move' ret[513882](513887 'coerce' call_tmp[632748] chpl_localeID_t[209294]))
    (513884 return ret[513882])
  }
  { scopeless type
    chpl_localeID_t[209294]
  }
  function DummyLocale[91438].chpl_name[91347](arg _mt[91454]:_MT[238], arg this[91452]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513892] "RVV" "temp"
    (513898 'move' ret[513892](513897 'coerce' "dummy-locale" string[26]))
    (513894 return ret[513892])
  }
  { scopeless type
    string[26]
  }
  function DummyLocale[91438].getChildCount[91375](arg _mt[91458]:_MT[238], arg this[91456]:DummyLocale[91438]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513902] "RVV" "temp"
    (513908 'move' ret[513902](513907 'coerce' 0 int(64)[13]))
    (513904 return ret[513902])
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91438].getChild[91391](arg _mt[91462]:_MT[238], arg this[91460]:DummyLocale[91438], arg idx[91388]:int(64)[13]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[513912] "RVV" "temp"
    unknown call_tmp[632753] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632756 'move' call_tmp[632753](747729 'new' locale[28] this[91460]))
    (513918 'move' ret[513912](513917 'coerce' call_tmp[632753] locale[28]))
    (513914 return ret[513912])
  }
  { scopeless type
    locale[28]
  }
  function DummyLocale[91438].addChild[91411](arg _mt[91466]:_MT[238], arg this[91464]:DummyLocale[91438], arg loc[91408]:locale[28]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (91432 call halt "addChild on DummyLocale")
    (513920 return _void[55])
  }
  type DummyLocale[91438] val super[355560]:BaseLocale[91201] "super class"
  type DummyLocale[377717](?)
  function AbstractLocaleModel[91499].init[91478](arg _mt[91503]:_MT[238], arg this[91501]:AbstractLocaleModel[91499], arg parent_loc[91475]:locale[28]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460600] "temporary of super field" "temp"
    (460602 'move' super_tmp[460600](460599 '.v' this[91501] c"super"))
    (91486 call(91481 call (partial) init _mt[243] super_tmp[460600]) parent_loc[91475])
    (477197 'end of statement')
    unknown tmp[460605] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491896] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632760] "expr temp" "maybe param" "maybe type" "temp"
      (632763 'move' call_tmp[632760](460607 '.v' this[91501] c"super"))
      (491900 'move' call_type_tmp[491896](460610 'typeof' call_tmp[632760]))
    }
    (460611 'move' tmp[460605] call_type_tmp[491896])
    unknown call_tmp[632765] "maybe param" "maybe type" "temp"
    (632768 'move' call_tmp[632765](460616 'cast' tmp[460605] this[91501]))
    unknown chpl__thisAsParent[460613] "dead at end of block" "insert auto destroy" "temp"
    (541595 'init var' chpl__thisAsParent[460613] call_tmp[632765] tmp[460605])
    (460619 'setcid' chpl__thisAsParent[460613])
    (477198 'end of statement')
    (460621 'setcid' this[91501])
    (513922 return _void[55])
  }
  function AbstractLocaleModel[91499].init[91493](arg _mt[91507]:_MT[238], arg this[91505]:AbstractLocaleModel[91499]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460643] "temporary of super field" "temp"
    (460651 'move' super_tmp[460643](460644 '.v' this[91505] c"super"))
    (460647 call init _mt[243] super_tmp[460643])
    (477200 'end of statement')
    unknown tmp[460627] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491902] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632770] "expr temp" "maybe param" "maybe type" "temp"
      (632773 'move' call_tmp[632770](460629 '.v' this[91505] c"super"))
      (491906 'move' call_type_tmp[491902](460632 'typeof' call_tmp[632770]))
    }
    (460633 'move' tmp[460627] call_type_tmp[491902])
    unknown call_tmp[632775] "maybe param" "maybe type" "temp"
    (632778 'move' call_tmp[632775](460638 'cast' tmp[460627] this[91505]))
    unknown chpl__thisAsParent[460635] "dead at end of block" "insert auto destroy" "temp"
    (541597 'init var' chpl__thisAsParent[460635] call_tmp[632775] tmp[460627])
    (460641 'setcid' chpl__thisAsParent[460635])
    (477201 'end of statement')
    (460654 'setcid' this[91505])
    (513924 return _void[55])
  }
  type AbstractLocaleModel[91499] val super[355552]:BaseLocale[91201] "super class"
  unknown rootLocale[91511] "dead at end of block" "insert auto destroy" "locale private" "no doc"
  unknown replicateRootLocale[91516] "config" "no doc" "param"
  unknown origRootLocale[91521] "dead at end of block" "insert auto destroy" "no doc"
  function AbstractRootLocale[92009].init[91530](arg _mt[92013]:_MT[238], arg this[92011]:AbstractRootLocale[92009]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460676] "temporary of super field" "temp"
    (460684 'move' super_tmp[460676](460677 '.v' this[92011] c"super"))
    (460680 call init _mt[243] super_tmp[460676])
    (477205 'end of statement')
    unknown tmp[460660] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491908] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632780] "expr temp" "maybe param" "maybe type" "temp"
      (632783 'move' call_tmp[632780](460662 '.v' this[92011] c"super"))
      (491912 'move' call_type_tmp[491908](460665 'typeof' call_tmp[632780]))
    }
    (460666 'move' tmp[460660] call_type_tmp[491908])
    unknown call_tmp[632785] "maybe param" "maybe type" "temp"
    (632788 'move' call_tmp[632785](460671 'cast' tmp[460660] this[92011]))
    unknown chpl__thisAsParent[460668] "dead at end of block" "insert auto destroy" "temp"
    (541605 'init var' chpl__thisAsParent[460668] call_tmp[632785] tmp[460660])
    (460674 'setcid' chpl__thisAsParent[460668])
    (477206 'end of statement')
    (460687 'setcid' this[92011])
    (513926 return _void[55])
  }
  function AbstractRootLocale[92009].init[91541](arg _mt[92017]:_MT[238], arg this[92015]:AbstractRootLocale[92009], arg parent_loc[91538]:locale[28]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460690] "temporary of super field" "temp"
    (460692 'move' super_tmp[460690](460689 '.v' this[92015] c"super"))
    (91549 call(91544 call (partial) init _mt[243] super_tmp[460690]) parent_loc[91538])
    (477208 'end of statement')
    unknown tmp[460695] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[491914] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632792] "expr temp" "maybe param" "maybe type" "temp"
      (632795 'move' call_tmp[632792](460697 '.v' this[92015] c"super"))
      (491918 'move' call_type_tmp[491914](460700 'typeof' call_tmp[632792]))
    }
    (460701 'move' tmp[460695] call_type_tmp[491914])
    unknown call_tmp[632797] "maybe param" "maybe type" "temp"
    (632800 'move' call_tmp[632797](460706 'cast' tmp[460695] this[92015]))
    unknown chpl__thisAsParent[460703] "dead at end of block" "insert auto destroy" "temp"
    (541607 'init var' chpl__thisAsParent[460703] call_tmp[632797] tmp[460695])
    (460709 'setcid' chpl__thisAsParent[460703])
    (477209 'end of statement')
    (460711 'setcid' this[92015])
    (513928 return _void[55])
  }
  function AbstractRootLocale[92009].getDefaultLocaleSpace[91556](arg _mt[92021]:_MT[238], arg this[92019]:AbstractRootLocale[92009]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[513932] "RVV" "temp"
    (91563 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477211 'end of statement')
    (513937 'move' ret[513932](513936 'addr of' chpl_emptyLocaleSpace[88781]))
    (513934 return ret[513932])
    (358355 'referenced modules list' HaltWrappers[209910])
  }
  function AbstractRootLocale[92009].getDefaultLocaleArray[91573](arg _mt[92025]:_MT[238], arg this[92023]:AbstractRootLocale[92009]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[513941] "RVV" "temp"
    (91580 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (477213 'end of statement')
    (513946 'move' ret[513941](513945 'addr of' chpl_emptyLocales[88792]))
    (513943 return ret[513941])
    (358361 'referenced modules list' HaltWrappers[209910])
  }
  function AbstractRootLocale[92009].localeIDtoLocale[91594](arg _mt[92029]:_MT[238], arg this[92027]:AbstractRootLocale[92009], arg id[91591]:chpl_localeID_t[209294]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[513950] "RVV" "temp"
    (91602 call pureVirtualMethodHalt module=[255] HaltWrappers[209910])
    (513952 return ret[513950])
    (358367 'referenced modules list' HaltWrappers[209910])
  }
  { scopeless type
    locale[28]
  }
  function AbstractRootLocale[92009].chpl_initOnLocales[91610](arg _mt[92033]:_MT[238], arg this[92031]:AbstractRootLocale[92009]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513956] "RVV" "temp"
    unknown call_tmp[632802] "expr temp" "maybe param" "maybe type" "temp"
    (632805 'move' call_tmp[632802](91614 call > numLocales[209834] 1))
    unknown call_tmp[632807] "expr temp" "maybe param" "maybe type" "temp"
    (632810 'move' call_tmp[632807](91637 call _cond_test call_tmp[632802]))
    if call_tmp[632807]
    {
      (91635 call halt "The locales must be initialized in parallel")
    }
    {
      unknown _indexOfInterest[91676] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[91677] "expr temp" "temp"
      unknown call_tmp[632814] "expr temp" "maybe param" "maybe type" "temp"
      (632817 'move' call_tmp[632814](91645 call _instance _mt[243] origRootLocale[91521]))
      unknown call_tmp[632819] "expr temp" "maybe param" "maybe type" "temp"
      (632822 'move' call_tmp[632819](91651 call _cast borrowed RootLocale?[415340] call_tmp[632814]))
      unknown call_tmp[632824] "expr temp" "maybe param" "maybe type" "temp"
      (632827 'move' call_tmp[632824](91653 call postfix! call_tmp[632819]))
      unknown call_tmp[632831] "expr temp" "maybe param" "maybe type" "temp"
      (632834 'move' call_tmp[632831](91661 call(91657 call (partial) getDefaultLocaleSpace _mt[243] call_tmp[632824])))
      (91686 'move' _iterator[91677](91684 call _getIterator call_tmp[632831]))
      Defer
      {
        {
          (91703 call _freeIterator _iterator[91677])
        }
      }
      { scopeless type
        (91692 'move' _indexOfInterest[91676](91689 call iteratorIndex _iterator[91677]))
      }
      ForLoop[91678]
      {
        unknown locIdx[91696] "index var" "insert auto destroy"
        (477218 'end of statement')
        (91698 'move' locIdx[91696] _indexOfInterest[91676])
        (477219 'end of statement' locIdx[91696])
        {
          unknown yret[513960] "YVV" "temp"
          (513963 'move' yret[513960](513962 'deref' locIdx[91696]))
          (513965 yield yret[513960])
          (477221 'end of statement' locIdx[91696])
          (91668 call = rootLocale[91511] origRootLocale[91521])
          (477223 'end of statement')
          (91673 call = rootLocaleInitialized[310] 1)
        }
        label _continueLabel[91681]
        _indexOfInterest[91676]
        _iterator[91677]
      }
      label _breakLabel[91682]
    }
    (513958 return ret[513956])
  }
  function AbstractRootLocale[92009].chpl_initOnLocales[91718](arg _mt[92037]:_MT[238], arg this[92035]:AbstractRootLocale[92009], param arg tag[91715]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[513969] "RVV" "temp"
    unknown b[91728] "dead at end of block" "insert auto destroy"
    (541609 'default init var' b[91728] localesBarrier[92483])
    (91731 'end of statement')
    unknown flags[91750] "dead at end of block" "insert auto destroy"
    unknown call_tmp[632836] "expr temp" "maybe param" "maybe type" "temp"
    (632839 'move' call_tmp[632836](91734 call chpl_build_low_bounded_range 1))
    unknown call_tmp[632841] "expr temp" "maybe param" "maybe type" "temp"
    (632844 'move' call_tmp[632841](91738 call - numLocales[209834] 1))
    unknown call_tmp[632846] "expr temp" "maybe param" "maybe type" "temp"
    (632849 'move' call_tmp[632846](91740 call # call_tmp[632836] call_tmp[632841]))
    unknown call_tmp[632851] "expr temp" "maybe param" "maybe type" "temp"
    (632854 'move' call_tmp[632851](91746 call chpl__ensureDomainExpr call_tmp[632846]))
    unknown call_tmp[632856] "expr temp" "maybe param" "maybe type" "temp"
    (632859 'move' call_tmp[632856](91748 call chpl__buildArrayRuntimeType call_tmp[632851] unmanaged localesSignal?[415346]))
    (541611 'default init var' flags[91750] call_tmp[632856])
    (91753 'end of statement')
    {
      unknown tmpIter[91815] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[632861] "expr temp" "maybe param" "maybe type" "temp"
      (632864 'move' call_tmp[632861](91756 call chpl_build_low_bounded_range 0))
      (91818 'move' tmpIter[91815](91759 call # call_tmp[632861] numLocales[209834]))
      unknown isRngDomArr[91986] "maybe param" "temp"
      unknown tmp[422254] "maybe param" "temp"
      (422265 'move' tmp[422254](91988 call isBoundedRange tmpIter[91815]))
      unknown call_tmp[632866] "expr temp" "maybe param" "maybe type" "temp"
      (632869 'move' call_tmp[632866](422267 call _cond_invalid tmp[422254]))
      if call_tmp[632866]
      {
        (422270 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[560988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[560989] "maybe param" "temp"
      unknown call_tmp[632871] "expr temp" "maybe param" "maybe type" "temp"
      (632874 'move' call_tmp[632871](422255 call isTrue tmp[422254]))
      (560994 'move' tmp[560989](560992 call _cond_test call_tmp[632871]))
      if tmp[560989]
      {
        (560999 'move' tmp[560988](560996 '_paramFoldLogical' tmp[560989] 1))
      }
      {
        unknown tmp[422275] "maybe param" "temp"
        (422286 'move' tmp[422275](91991 call isDomain tmpIter[91815]))
        unknown call_tmp[632876] "expr temp" "maybe param" "maybe type" "temp"
        (632879 'move' call_tmp[632876](422288 call _cond_invalid tmp[422275]))
        if call_tmp[632876]
        {
          (422291 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[560961] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[560962] "maybe param" "temp"
        unknown call_tmp[632881] "expr temp" "maybe param" "maybe type" "temp"
        (632884 'move' call_tmp[632881](422276 call isTrue tmp[422275]))
        (560967 'move' tmp[560962](560965 call _cond_test call_tmp[632881]))
        if tmp[560962]
        {
          (560972 'move' tmp[560961](560969 '_paramFoldLogical' tmp[560962] 1))
        }
        {
          unknown tmp[560974] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[632886] "expr temp" "maybe param" "maybe type" "temp"
          (632889 'move' call_tmp[632886](91994 call isArray tmpIter[91815]))
          (560976 'move' tmp[560974](422280 call isTrue call_tmp[632886]))
          (560981 'move' tmp[560961](560978 '_paramFoldLogical' tmp[560962] tmp[560974]))
        }
        unknown tmp[561001] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561003 'move' tmp[561001](422259 call isTrue tmp[560961]))
        (561008 'move' tmp[560988](561005 '_paramFoldLogical' tmp[560989] tmp[561001]))
      }
      (92001 'move' isRngDomArr[91986] tmp[560988])
      if isRngDomArr[91986]
      {
        const _coforallCount[91858] "const" "end count" "temp"
        (91923 'move' _coforallCount[91858](91920 call _endCountAlloc 0))
        unknown numTasks[91859] "temp"
        (91907 'move' numTasks[91859](91903 call size _mt[243] tmpIter[91815]))
        (91898 call _upEndCount _coforallCount[91858] 0 numTasks[91859])
        (477226 'end of statement')
        unknown _indexOfInterest[91865] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91866] "expr temp" "temp"
        (91875 'move' _iterator[91866](91873 call _getIterator tmpIter[91815]))
        Defer
        {
          {
            (91891 call _freeIterator _iterator[91866])
          }
        }
        { scopeless type
          (91880 'move' _indexOfInterest[91865](91877 call iteratorIndex _iterator[91866]))
        }
        ForLoop[91867]
        {
          unknown locIdx[91884] "coforall index var" "index var" "insert auto destroy"
          (477228 'end of statement')
          (91886 'move' locIdx[91884] _indexOfInterest[91865])
          (477229 'end of statement' locIdx[91884])
          const tmp[91821] "const" "temp"
          unknown call_tmp[632893] "expr temp" "maybe param" "maybe type" "temp"
          (632896 'move' call_tmp[632893](91830 call _cast chpl_nodeID_t[89859] locIdx[91884]))
          unknown call_tmp[632898] "expr temp" "maybe param" "maybe type" "temp"
          (632901 'move' call_tmp[632898](91828 call chpl_buildLocaleID call_tmp[632893] c_sublocid_any[89875]))
          unknown call_tmp[632903] "expr temp" "maybe param" "maybe type" "temp"
          (632906 'move' call_tmp[632903](91826 'chpl_on_locale_num' call_tmp[632898]))
          (91823 'move' tmp[91821](91825 'deref' call_tmp[632903]))
          {
            {
              (91840 call chpl_defaultDistInitPrivate)
              (477231 'end of statement')
              unknown yret[513973] "YVV" "temp"
              (513976 'move' yret[513973](513975 'deref' locIdx[91884]))
              (513978 yield yret[513973])
              (477232 'end of statement' locIdx[91884])
              (91847 call(91844 call (partial) wait _mt[243] b[91728]) locIdx[91884] flags[91750])
              (477234 'end of statement' b[91728] locIdx[91884] flags[91750])
              (91851 call chpl_rootLocaleInitPrivate locIdx[91884])
              (477238 'end of statement' locIdx[91884])
              (91854 call chpl_defaultLocaleInitPrivate)
              (477240 'end of statement')
              (91856 call warmupRuntime)
            }
            (91860 call _downEndCount _coforallCount[91858] nil[44])
            (91835 'coforall on block' 0 tmp[91821])
          }
          label _continueLabel[91870]
          _indexOfInterest[91865]
          _iterator[91866]
        }
        label _breakLabel[91871]
        Defer
        {
          {
            (91910 call _endCountFree _coforallCount[91858])
          }
        }
        (91915 call _waitEndCount _coforallCount[91858] 0 numTasks[91859])
      }
      {
        const _coforallCount[91927] "const" "end count" "temp"
        (91983 'move' _coforallCount[91927](91980 call _endCountAlloc 0))
        unknown _indexOfInterest[91934] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91935] "expr temp" "temp"
        (91944 'move' _iterator[91935](91942 call _getIterator tmpIter[91815]))
        Defer
        {
          {
            (91960 call _freeIterator _iterator[91935])
          }
        }
        { scopeless type
          (91949 'move' _indexOfInterest[91934](91946 call iteratorIndex _iterator[91935]))
        }
        ForLoop[91936]
        {
          unknown locIdx[91953] "coforall index var" "index var" "insert auto destroy"
          (477246 'end of statement')
          (91955 'move' locIdx[91953] _indexOfInterest[91934])
          (477247 'end of statement' locIdx[91953])
          (91967 call _upEndCount _coforallCount[91927] 0)
          (477249 'end of statement')
          const tmp[91806] "const" "temp"
          unknown call_tmp[632910] "expr temp" "maybe param" "maybe type" "temp"
          (632913 'move' call_tmp[632910](91766 call _cast chpl_nodeID_t[89859] locIdx[91953]))
          unknown call_tmp[632915] "expr temp" "maybe param" "maybe type" "temp"
          (632918 'move' call_tmp[632915](91770 call chpl_buildLocaleID call_tmp[632910] c_sublocid_any[89875]))
          unknown call_tmp[632920] "expr temp" "maybe param" "maybe type" "temp"
          (632923 'move' call_tmp[632920](91771 'chpl_on_locale_num' call_tmp[632915]))
          (91808 'move' tmp[91806](91804 'deref' call_tmp[632920]))
          {
            {
              (91774 call chpl_defaultDistInitPrivate)
              (477250 'end of statement')
              unknown yret[513980] "YVV" "temp"
              (513983 'move' yret[513980](513982 'deref' locIdx[91953]))
              (513985 yield yret[513980])
              (477251 'end of statement' locIdx[91953])
              (91789 call(91783 call (partial) wait _mt[243] b[91728]) locIdx[91953] flags[91750])
              (477253 'end of statement' b[91728] locIdx[91953] flags[91750])
              (91794 call chpl_rootLocaleInitPrivate locIdx[91953])
              (477257 'end of statement' locIdx[91953])
              (91798 call chpl_defaultLocaleInitPrivate)
              (477259 'end of statement')
              (91802 call warmupRuntime)
            }
            (91929 call _downEndCount _coforallCount[91927] nil[44])
            (91811 'coforall on block' 0 tmp[91806])
          }
          label _continueLabel[91939]
          _indexOfInterest[91934]
          _iterator[91935]
        }
        label _breakLabel[91940]
        Defer
        {
          {
            (91971 call _endCountFree _coforallCount[91927])
          }
        }
        (91976 call _waitEndCount _coforallCount[91927] 0)
      }
    }
    (513971 return ret[513969])
  }
  where {
    (91725 call == tag[91715] standalone[451])
  }
  type AbstractRootLocale[92009] val super[355556]:BaseLocale[91201] "super class"
  type borrowed AbstractRootLocale?[415352]
  type AbstractRootLocale?[415349](?)
  type AbstractRootLocale[377866](?)
  function warmupRuntime[92042]() : _unknown[51] "private" "no return value for void"
  {
    function chpl_task_getFixedNumThreads[92046]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[513989] "RVV" "temp"
      (513991 return ret[513989])
    }
    { scopeless type
      (92051 call uint(64)[115] 32)
    }
    {
      unknown tmpIter[92088] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[632927] "expr temp" "maybe param" "maybe type" "temp"
      (632930 'move' call_tmp[632927](92058 call chpl_build_low_bounded_range 0))
      unknown call_tmp[632932] "expr temp" "maybe param" "maybe type" "temp"
      (632935 'move' call_tmp[632932](92062 call chpl_task_getFixedNumThreads))
      (92091 'move' tmpIter[92088](92063 call # call_tmp[632927] call_tmp[632932]))
      unknown isRngDomArr[92245] "maybe param" "temp"
      unknown tmp[422296] "maybe param" "temp"
      (422307 'move' tmp[422296](92247 call isBoundedRange tmpIter[92088]))
      unknown call_tmp[632937] "expr temp" "maybe param" "maybe type" "temp"
      (632940 'move' call_tmp[632937](422309 call _cond_invalid tmp[422296]))
      if call_tmp[632937]
      {
        (422312 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[561042] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[561043] "maybe param" "temp"
      unknown call_tmp[632942] "expr temp" "maybe param" "maybe type" "temp"
      (632945 'move' call_tmp[632942](422297 call isTrue tmp[422296]))
      (561048 'move' tmp[561043](561046 call _cond_test call_tmp[632942]))
      if tmp[561043]
      {
        (561053 'move' tmp[561042](561050 '_paramFoldLogical' tmp[561043] 1))
      }
      {
        unknown tmp[422317] "maybe param" "temp"
        (422328 'move' tmp[422317](92250 call isDomain tmpIter[92088]))
        unknown call_tmp[632947] "expr temp" "maybe param" "maybe type" "temp"
        (632950 'move' call_tmp[632947](422330 call _cond_invalid tmp[422317]))
        if call_tmp[632947]
        {
          (422333 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[561015] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[561016] "maybe param" "temp"
        unknown call_tmp[632952] "expr temp" "maybe param" "maybe type" "temp"
        (632955 'move' call_tmp[632952](422318 call isTrue tmp[422317]))
        (561021 'move' tmp[561016](561019 call _cond_test call_tmp[632952]))
        if tmp[561016]
        {
          (561026 'move' tmp[561015](561023 '_paramFoldLogical' tmp[561016] 1))
        }
        {
          unknown tmp[561028] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[632957] "expr temp" "maybe param" "maybe type" "temp"
          (632960 'move' call_tmp[632957](92253 call isArray tmpIter[92088]))
          (561030 'move' tmp[561028](422322 call isTrue call_tmp[632957]))
          (561035 'move' tmp[561015](561032 '_paramFoldLogical' tmp[561016] tmp[561028]))
        }
        unknown tmp[561055] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561057 'move' tmp[561055](422301 call isTrue tmp[561015]))
        (561062 'move' tmp[561042](561059 '_paramFoldLogical' tmp[561043] tmp[561055]))
      }
      (92260 'move' isRngDomArr[92245] tmp[561042])
      if isRngDomArr[92245]
      {
        const _coforallCount[92112] "const" "end count" "temp"
        (92181 'move' _coforallCount[92112](92178 call _endCountAlloc 1))
        unknown numTasks[92113] "temp"
        (92165 'move' numTasks[92113](92161 call size _mt[243] tmpIter[92088]))
        (92156 call _upEndCount _coforallCount[92112] 1 numTasks[92113])
        (477265 'end of statement')
        (92153 call chpl_resetTaskSpawn numTasks[92113])
        (477266 'end of statement')
        unknown _indexOfInterest[92120] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92121] "expr temp" "temp"
        (92130 'move' _iterator[92121](92128 call _getIterator tmpIter[92088]))
        Defer
        {
          {
            (92146 call _freeIterator _iterator[92121])
          }
        }
        { scopeless type
          (92135 'move' _indexOfInterest[92120](92132 call iteratorIndex _iterator[92121]))
        }
        ForLoop[92122]
        {
          unknown i[92139] "coforall index var" "index var" "insert auto destroy"
          (477268 'end of statement')
          (92141 'move' i[92139] _indexOfInterest[92120])
          (477269 'end of statement' i[92139])
          {
            {
              unknown call_tmp[632964] "maybe param" "maybe type" "temp"
              (632967 'move' call_tmp[632964](92097 call c_malloc int(64)[13] 1))
              unknown p[92095] "dead at end of block" "insert auto destroy"
              (541613 'init var' p[92095] call_tmp[632964])
              (92101 'end of statement')
              unknown call_tmp[632969] "expr temp" "maybe param" "maybe type" "temp"
              (632972 'move' call_tmp[632969](92105 call p[92095] 0))
              (92103 call = call_tmp[632969] i[92139])
              (477271 'end of statement' p[92095] i[92139])
              (92109 call c_free p[92095])
              (477274 'end of statement' p[92095])
            }
            (92115 call _downEndCount _coforallCount[92112] nil[44])
            (92114 'coforall loop')
          }
          label _continueLabel[92125]
          _indexOfInterest[92120]
          _iterator[92121]
        }
        label _breakLabel[92126]
        Defer
        {
          {
            (92168 call _endCountFree _coforallCount[92112])
          }
        }
        (92173 call _waitEndCount _coforallCount[92112] 1 numTasks[92113])
      }
      {
        const _coforallCount[92185] "const" "end count" "temp"
        (92242 'move' _coforallCount[92185](92239 call _endCountAlloc 1))
        unknown _indexOfInterest[92193] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92194] "expr temp" "temp"
        (92203 'move' _iterator[92194](92201 call _getIterator tmpIter[92088]))
        Defer
        {
          {
            (92219 call _freeIterator _iterator[92194])
          }
        }
        { scopeless type
          (92208 'move' _indexOfInterest[92193](92205 call iteratorIndex _iterator[92194]))
        }
        ForLoop[92195]
        {
          unknown i[92212] "coforall index var" "index var" "insert auto destroy"
          (477280 'end of statement')
          (92214 'move' i[92212] _indexOfInterest[92193])
          (477281 'end of statement' i[92212])
          (92226 call _upEndCount _coforallCount[92185] 1)
          (477283 'end of statement')
          {
            {
              unknown call_tmp[632974] "maybe param" "maybe type" "temp"
              (632977 'move' call_tmp[632974](92069 call c_malloc int(64)[13] 1))
              unknown p[92070] "dead at end of block" "insert auto destroy"
              (541615 'init var' p[92070] call_tmp[632974])
              (92073 'end of statement')
              unknown call_tmp[632979] "expr temp" "maybe param" "maybe type" "temp"
              (632982 'move' call_tmp[632979](92078 call p[92070] 0))
              (92080 call = call_tmp[632979] i[92212])
              (477284 'end of statement' p[92070] i[92212])
              (92086 call c_free p[92070])
              (477287 'end of statement' p[92070])
            }
            (92188 call _downEndCount _coforallCount[92185] nil[44])
            (92187 'coforall loop')
          }
          label _continueLabel[92198]
          _indexOfInterest[92193]
          _iterator[92194]
        }
        label _breakLabel[92199]
        Defer
        {
          {
            (92230 call _endCountFree _coforallCount[92185])
          }
        }
        (92235 call _waitEndCount _coforallCount[92185] 1)
      }
    }
    (513993 return _void[55])
  }
  type localesSignal[92275] val super[355562]:object[22] "super class" unknown s[92270](92268 call chpl__atomicType bool[10])
  type unmanaged localesSignal?[415346]
  type localesSignal?[415343](?)
  type localesSignal[377796](?)
  function localesBarrier[92483].wait[92283](arg _mt[92487]:_MT[238], arg this[92485]:localesBarrier[92483], arg locIdx[92281]:_any[178](?), arg flags[92285]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632984] "expr temp" "maybe param" "maybe type" "temp"
    (632987 'move' call_tmp[632984](92289 call == locIdx[92281] 0))
    unknown call_tmp[632989] "expr temp" "maybe param" "maybe type" "temp"
    (632992 'move' call_tmp[632989](92475 call _cond_test call_tmp[632984]))
    if call_tmp[632989]
    {
      {
        unknown tmp[92367] "temp"
        (92385 'move' tmp[92367](92383 call _cond_test 1))
        WhileDo[92372]
        {
          {
            (92294 call atomicFence)
            (477292 'end of statement')
            unknown count[92298] "dead at end of block" "insert auto destroy"
            (541617 'init var' count[92298] 0)
            (92301 'end of statement')
            {
              unknown _indexOfInterest[92315] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[92316] "expr temp" "temp"
              (92325 'move' _iterator[92316](92323 call _getIterator flags[92285]))
              Defer
              {
                {
                  (92341 call _freeIterator _iterator[92316])
                }
              }
              { scopeless type
                (92330 'move' _indexOfInterest[92315](92327 call iteratorIndex _iterator[92316]))
              }
              ForLoop[92317]
              {
                unknown f[92334] "index var" "insert auto destroy"
                (477294 'end of statement')
                (92336 'move' f[92334] _indexOfInterest[92315])
                (477295 'end of statement' f[92334])
                unknown call_tmp[632994] "expr temp" "maybe param" "maybe type" "temp"
                (632997 'move' call_tmp[632994](92310 call _cond_test f[92334]))
                if call_tmp[632994]
                {
                  (92307 call += count[92298] 1)
                  (477297 'end of statement' count[92298])
                }
                label _continueLabel[92320]
                _indexOfInterest[92315]
                _iterator[92316]
              }
              label _breakLabel[92321]
            }
            unknown call_tmp[632999] "expr temp" "maybe param" "maybe type" "temp"
            (633002 'move' call_tmp[632999](92351 call - numLocales[209834] 1))
            unknown call_tmp[633004] "expr temp" "maybe param" "maybe type" "temp"
            (633007 'move' call_tmp[633004](92353 call == count[92298] call_tmp[632999]))
            unknown call_tmp[633009] "expr temp" "maybe param" "maybe type" "temp"
            (633012 'move' call_tmp[633009](92358 call _cond_test call_tmp[633004]))
            if call_tmp[633009]
            {
              break _breakLabel[92371] _breakLabel[92371]
            }
            (92365 call chpl_task_yield)
          }
          label _continueLabel[92370]
          (92378 'move' tmp[92367](92376 call _cond_test 1))
          tmp[92367]
        }
        label _breakLabel[92371]
      }
      {
        unknown _indexOfInterest[92407] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92408] "expr temp" "temp"
        (92417 'move' _iterator[92408](92415 call _getIterator flags[92285]))
        Defer
        {
          {
            (92433 call _freeIterator _iterator[92408])
          }
        }
        { scopeless type
          (92422 'move' _indexOfInterest[92407](92419 call iteratorIndex _iterator[92408]))
        }
        ForLoop[92409]
        {
          unknown f[92426] "index var" "insert auto destroy"
          (477301 'end of statement')
          (92428 'move' f[92426] _indexOfInterest[92407])
          (477302 'end of statement' f[92426])
          unknown call_tmp[633014] "expr temp" "maybe param" "maybe type" "temp"
          (633017 'move' call_tmp[633014](92392 call postfix! f[92426]))
          unknown call_tmp[633021] "expr temp" "maybe param" "maybe type" "temp"
          (633024 'move' call_tmp[633021](92396 call s _mt[243] call_tmp[633014]))
          (92405 call(92401 call (partial) testAndSet _mt[243] call_tmp[633021]))
          (477304 'end of statement' f[92426])
          label _continueLabel[92412]
          _indexOfInterest[92407]
          _iterator[92408]
        }
        label _breakLabel[92413]
      }
    }
    {
      unknown call_tmp[633028] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (633031 'move' call_tmp[633028](747730 'new' localesSignal[377796](?)(_chpl_manager = unmanaged[220](?))))
      unknown f[92446] "dead at end of block" "insert auto destroy"
      (541619 'init var' f[92446] call_tmp[633028])
      (92449 'end of statement')
      unknown call_tmp[633033] "expr temp" "maybe param" "maybe type" "temp"
      (633036 'move' call_tmp[633033](92454 call flags[92285] locIdx[92281]))
      (92456 call = call_tmp[633033] f[92446])
      (477306 'end of statement' f[92446])
      unknown call_tmp[633040] "expr temp" "maybe param" "maybe type" "temp"
      (633043 'move' call_tmp[633040](92460 call s _mt[243] f[92446]))
      (92468 call(92463 call (partial) waitFor _mt[243] call_tmp[633040]) 1)
      (477308 'end of statement' f[92446])
      (92472 call chpl__delete f[92446])
      (477310 'end of statement' f[92446])
    }
    (513995 return _void[55])
  }
  type localesBarrier[92483]
  function chpl_init_rootLocale[92492]() : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[422338] "maybe param" "temp"
    (422349 'move' tmp[422338](92496 call > numLocales[209834] 1))
    unknown call_tmp[633047] "expr temp" "maybe param" "maybe type" "temp"
    (633050 'move' call_tmp[633047](422351 call _cond_invalid tmp[422338]))
    if call_tmp[633047]
    {
      (422354 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[561069] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561070] "maybe param" "temp"
    unknown call_tmp[633052] "expr temp" "maybe param" "maybe type" "temp"
    (633055 'move' call_tmp[633052](422339 call isTrue tmp[422338]))
    (561075 'move' tmp[561070](561073 call _cond_test call_tmp[633052]))
    if tmp[561070]
    {
      unknown tmp[561077] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (561079 'move' tmp[561077](422342 call isTrue 0))
      (561084 'move' tmp[561069](561081 '_paramFoldLogical' tmp[561070] tmp[561077]))
    }
    {
      (561089 'move' tmp[561069](561086 '_paramFoldLogical' tmp[561070] 0))
    }
    unknown call_tmp[633057] "expr temp" "maybe param" "maybe type" "temp"
    (633060 'move' call_tmp[633057](92522 call _cond_test tmp[561069]))
    if call_tmp[633057]
    {
      (92520 call halt "Cannot run a program compiled with --local in more than 1 locale")
    }
    unknown call_tmp[633064] "expr temp" "maybe param" "maybe type" "temp"
    (633067 'move' call_tmp[633064](92529 call _instance _mt[243] origRootLocale[91521]))
    unknown call_tmp[633069] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (633072 'move' call_tmp[633069](747731 'new' RootLocale[377784](?)(_chpl_manager = unmanaged[220](?))))
    (92538 call = call_tmp[633064] call_tmp[633069])
    (477314 'end of statement')
    unknown call_tmp[633076] "expr temp" "maybe param" "maybe type" "temp"
    (633079 'move' call_tmp[633076](92542 call _instance _mt[243] origRootLocale[91521]))
    unknown call_tmp[633081] "expr temp" "maybe param" "maybe type" "temp"
    (633084 'move' call_tmp[633081](92548 call _cast borrowed RootLocale?[415340] call_tmp[633076]))
    unknown call_tmp[633086] "expr temp" "maybe param" "maybe type" "temp"
    (633089 'move' call_tmp[633086](92550 call postfix! call_tmp[633081]))
    (92558 call(92554 call (partial) setup _mt[243] call_tmp[633086]))
    (513997 return _void[55])
  }
  function chpl_defaultLocaleInitPrivate[92564]() : _unknown[51] "inline" "no doc" "no return value for void"
  {
    const rl[92584] "dead at end of block" "const" "no auto destroy" "no copy" "ref var"
    unknown call_tmp[633095] "expr temp" "maybe param" "maybe type" "temp"
    (633098 'move' call_tmp[633095](92567 call _instance _mt[243] rootLocale[91511]))
    unknown call_tmp[633100] "expr temp" "maybe param" "maybe type" "temp"
    (633103 'move' call_tmp[633100](92573 call _cast borrowed RootLocale?[415340] call_tmp[633095]))
    unknown call_tmp[633105] "expr temp" "maybe param" "maybe type" "temp"
    (633108 'move' call_tmp[633105](92575 call postfix! call_tmp[633100]))
    unknown call_tmp[633112] "expr temp" "maybe param" "maybe type" "temp"
    (633115 'move' call_tmp[633112](92583 call(92579 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633105])))
    (541622 'move' rl[92584](541621 'addr of' call_tmp[633112]))
    (92587 'end of statement')
    unknown call_tmp[633119] "expr temp" "maybe param" "maybe type" "temp"
    (633122 'move' call_tmp[633119](92590 call _instance _mt[243] defaultLocale[89953]))
    unknown call_tmp[633124] "expr temp" "maybe param" "maybe type" "temp"
    (633127 'move' call_tmp[633124](92596 call rl[92584] 0))
    unknown call_tmp[633131] "expr temp" "maybe param" "maybe type" "temp"
    (633134 'move' call_tmp[633131](92597 call _instance _mt[243] call_tmp[633124]))
    (92600 call = call_tmp[633119] call_tmp[633131])
    (477316 'end of statement' rl[92584])
    (513999 return _void[55])
  }
  function chpl_rootLocaleInitPrivate[92609](arg locIdx[92607]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    (92613 call = rootLocale[91511] origRootLocale[91521])
    (477318 'end of statement')
    unknown tmp[422359] "maybe param" "temp"
    (422370 'move' tmp[422359] replicateRootLocale[91516])
    unknown call_tmp[633136] "expr temp" "maybe param" "maybe type" "temp"
    (633139 'move' call_tmp[633136](422372 call _cond_invalid tmp[422359]))
    if call_tmp[633136]
    {
      (422375 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[561096] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561097] "maybe param" "temp"
    unknown call_tmp[633141] "expr temp" "maybe param" "maybe type" "temp"
    (633144 'move' call_tmp[633141](422360 call isTrue tmp[422359]))
    (561102 'move' tmp[561097](561100 call _cond_test call_tmp[633141]))
    if tmp[561097]
    {
      unknown tmp[561104] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[633146] "expr temp" "maybe param" "maybe type" "temp"
      (633149 'move' call_tmp[633146](92620 call != locIdx[92607] 0))
      (561106 'move' tmp[561104](422363 call isTrue call_tmp[633146]))
      (561111 'move' tmp[561096](561108 '_paramFoldLogical' tmp[561097] tmp[561104]))
    }
    {
      (561116 'move' tmp[561096](561113 '_paramFoldLogical' tmp[561097] 0))
    }
    unknown call_tmp[633151] "expr temp" "maybe param" "maybe type" "temp"
    (633154 'move' call_tmp[633151](92727 call _cond_test tmp[561096]))
    if call_tmp[633151]
    {
      unknown call_tmp[633156] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (633159 'move' call_tmp[633156](747732 'new' RootLocale[377784](?)(_chpl_manager = unmanaged[220](?))))
      unknown newRootLocale[92630] "dead at end of block" "insert auto destroy"
      (541624 'init var' newRootLocale[92630] call_tmp[633156])
      (92633 'end of statement')
      const origLocales[92651] "dead at end of block" "const" "no auto destroy" "no copy" "ref var"
      unknown call_tmp[633163] "expr temp" "maybe param" "maybe type" "temp"
      (633166 'move' call_tmp[633163](92636 call _instance _mt[243] origRootLocale[91521]))
      unknown call_tmp[633168] "expr temp" "maybe param" "maybe type" "temp"
      (633171 'move' call_tmp[633168](92642 call _cast borrowed RootLocale?[415340] call_tmp[633163]))
      unknown call_tmp[633173] "expr temp" "maybe param" "maybe type" "temp"
      (633176 'move' call_tmp[633173](92644 call postfix! call_tmp[633168]))
      unknown call_tmp[633180] "expr temp" "maybe param" "maybe type" "temp"
      (633183 'move' call_tmp[633180](92650 call(92646 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633173])))
      (541627 'move' origLocales[92651](541626 'addr of' call_tmp[633180]))
      (92654 'end of statement')
      unknown call_tmp[633187] "expr temp" "maybe param" "maybe type" "temp"
      (633190 'move' call_tmp[633187](92656 call _value _mt[243] origLocales[92651]))
      unknown call_tmp[633194] "maybe param" "maybe type" "temp"
      (633197 'move' call_tmp[633194](92661 call theData _mt[243] call_tmp[633187]))
      unknown origRL[92664] "dead at end of block" "insert auto destroy"
      (541629 'init var' origRL[92664] call_tmp[633194])
      (92667 'end of statement')
      unknown call_tmp[633201] "expr temp" "maybe param" "maybe type" "temp"
      (633204 'move' call_tmp[633201](92673 call(92669 call (partial) getDefaultLocaleArray _mt[243] newRootLocale[92630])))
      unknown call_tmp[633208] "expr temp" "maybe param" "maybe type" "temp"
      (633211 'move' call_tmp[633208](92674 call _value _mt[243] call_tmp[633201]))
      unknown call_tmp[633215] "maybe param" "maybe type" "temp"
      (633218 'move' call_tmp[633215](92677 call theData _mt[243] call_tmp[633208]))
      unknown newRL[92680] "dead at end of block" "insert auto destroy"
      (541631 'init var' newRL[92680] call_tmp[633215])
      (92683 'end of statement' origLocales[92651] newRootLocale[92630])
      unknown call_tmp[633220] "expr temp" "maybe param" "maybe type" "temp"
      (633223 'move' call_tmp[633220](92706 'array_get' newRL[92680] 0))
      unknown call_tmp[633225] "expr temp" "maybe param" "maybe type" "temp"
      (633228 'move' call_tmp[633225](92712 'array_get' origRL[92664] 0))
      unknown call_tmp[633230] "expr temp" "maybe param" "maybe type" "temp"
      (633233 'move' call_tmp[633230](92715 call _cast size_t[20654] numLocales[209834]))
      (92717 'chpl_comm_array_get' call_tmp[633220] 0 call_tmp[633225] call_tmp[633230])
      (477322 'end of statement' newRL[92680] origRL[92664])
      unknown call_tmp[633237] "expr temp" "maybe param" "maybe type" "temp"
      (633240 'move' call_tmp[633237](92720 call _instance _mt[243] rootLocale[91511]))
      (92724 call = call_tmp[633237] newRootLocale[92630])
      (477325 'end of statement' newRootLocale[92630])
    }
    unknown call_tmp[633242] "expr temp" "maybe param" "maybe type" "temp"
    (633245 'move' call_tmp[633242](92733 call != locIdx[92607] 0))
    unknown call_tmp[633247] "expr temp" "maybe param" "maybe type" "temp"
    (633250 'move' call_tmp[633247](92778 call _cond_test call_tmp[633242]))
    if call_tmp[633247]
    {
      const tmp[92751] "dead at end of block" "const" "no auto destroy" "ref var"
      unknown call_tmp[633254] "expr temp" "maybe param" "maybe type" "temp"
      (633257 'move' call_tmp[633254](92736 call _instance _mt[243] rootLocale[91511]))
      unknown call_tmp[633259] "expr temp" "maybe param" "maybe type" "temp"
      (633262 'move' call_tmp[633259](92742 call _cast borrowed RootLocale?[415340] call_tmp[633254]))
      unknown call_tmp[633264] "expr temp" "maybe param" "maybe type" "temp"
      (633267 'move' call_tmp[633264](92744 call postfix! call_tmp[633259]))
      unknown call_tmp[633271] "expr temp" "maybe param" "maybe type" "temp"
      (633274 'move' call_tmp[633271](92750 call(92746 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633264])))
      (541634 'move' tmp[92751](541633 'addr of' call_tmp[633271]))
      (92754 'end of statement')
      (92776 'move' Locales[113656] tmp[92751])
      (477327 'end of statement' tmp[92751])
    }
    (92784 call = rootLocaleInitialized[310] 1)
    (514001 return _void[55])
  }
  function chpl_task_getRequestedSubloc[92791]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free" "no return value for void"
  {
    unknown ret[514005] "RVV" "temp"
    (514007 return ret[514005])
  }
  { scopeless type
    chpl_sublocID_t[89866]
  }
  function chpl_getLocaleID[92803](ref arg localeID[92800]:chpl_localeID_t[209294]) : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633276] "expr temp" "maybe param" "maybe type" "temp"
    (633279 'move' call_tmp[633276](377858 call here_id[92815]))
    (92807 call = localeID[92800] call_tmp[633276])
    (514009 return _void[55])
  }
  function here_id[92815]() : _unknown[51] "inline" "no doc" "no parens"
  {
    unknown ret[514013] "RVV" "temp"
    unknown call_tmp[633281] "expr temp" "maybe param" "maybe type" "temp"
    (633284 'move' call_tmp[633281](92834 call _cond_test localeModelHasSublocales[187403]))
    if call_tmp[633281]
    {
      unknown call_tmp[633286] "expr temp" "maybe param" "maybe type" "temp"
      (633289 'move' call_tmp[633286](92823 call chpl_task_getRequestedSubloc))
      unknown call_tmp[633291] "expr temp" "maybe param" "maybe type" "temp"
      (633294 'move' call_tmp[633291](92824 call chpl_rt_buildLocaleID chpl_nodeID[208152] call_tmp[633286]))
      (514018 'move' ret[514013](514017 'deref' call_tmp[633291]))
      gotoReturn _end_here_id[514011] _end_here_id[514011]
    }
    {
      unknown call_tmp[633296] "expr temp" "maybe param" "maybe type" "temp"
      (633299 'move' call_tmp[633296](92831 call chpl_rt_buildLocaleID chpl_nodeID[208152] c_sublocid_any[89875]))
      (514023 'move' ret[514013](514022 'deref' call_tmp[633296]))
      gotoReturn _end_here_id[514011] _end_here_id[514011]
    }
    label _end_here_id[514011]
    (514015 return ret[514013])
  }
  function chpl_localeID_to_locale[92849](arg id[92846]:chpl_localeID_t[209294]) : _unknown[51] "no doc" "fn returns infinite lifetime"
  {
    unknown ret[514029] "RVV" "temp"
    unknown call_tmp[633303] "expr temp" "maybe param" "maybe type" "temp"
    (633306 'move' call_tmp[633303](92853 call _instance _mt[243] rootLocale[91511]))
    unknown call_tmp[633308] "expr temp" "maybe param" "maybe type" "temp"
    (633311 'move' call_tmp[633308](92857 call != call_tmp[633303] nil[44]))
    unknown call_tmp[633313] "expr temp" "maybe param" "maybe type" "temp"
    (633316 'move' call_tmp[633313](92909 call _cond_test call_tmp[633308]))
    if call_tmp[633313]
    {
      unknown call_tmp[633320] "expr temp" "maybe param" "maybe type" "temp"
      (633323 'move' call_tmp[633320](92860 call _instance _mt[243] rootLocale[91511]))
      unknown call_tmp[633325] "expr temp" "maybe param" "maybe type" "temp"
      (633328 'move' call_tmp[633325](92866 call _cast borrowed AbstractRootLocale?[415352] call_tmp[633320]))
      unknown call_tmp[633330] "expr temp" "maybe param" "maybe type" "temp"
      (633333 'move' call_tmp[633330](92868 call postfix! call_tmp[633325]))
      unknown call_tmp[633337] "expr temp" "maybe param" "maybe type" "temp"
      (633340 'move' call_tmp[633337](92877 call(92872 call (partial) localeIDtoLocale _mt[243] call_tmp[633330]) id[92846]))
      (514035 'move' ret[514029](514034 'coerce' call_tmp[633337] locale[28]))
      gotoReturn _end_chpl_localeID_to_locale[514027] _end_chpl_localeID_to_locale[514027]
    }
    {
      unknown call_tmp[633344] "expr temp" "maybe param" "maybe type" "temp"
      (633347 'move' call_tmp[633344](92881 call _instance _mt[243] dummyLocale[89967]))
      unknown call_tmp[633349] "expr temp" "maybe param" "maybe type" "temp"
      (633352 'move' call_tmp[633349](92885 call == call_tmp[633344] nil[44]))
      unknown call_tmp[633354] "expr temp" "maybe param" "maybe type" "temp"
      (633357 'move' call_tmp[633354](92901 call _cond_test call_tmp[633349]))
      if call_tmp[633354]
      {
        unknown call_tmp[633361] "expr temp" "maybe param" "maybe type" "temp"
        (633364 'move' call_tmp[633361](92888 call _instance _mt[243] dummyLocale[89967]))
        unknown call_tmp[633366] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (633369 'move' call_tmp[633366](747733 'new' DummyLocale[377717](?)(_chpl_manager = unmanaged[220](?))))
        (92897 call = call_tmp[633361] call_tmp[633366])
      }
      (514041 'move' ret[514029](514040 'coerce' dummyLocale[89967] locale[28]))
      gotoReturn _end_chpl_localeID_to_locale[514027] _end_chpl_localeID_to_locale[514027]
    }
    label _end_chpl_localeID_to_locale[514027]
    (514031 return ret[514029])
  }
  { scopeless type
    locale[28]
  }
  type chpl_privateObject_t[92925] val obj[92920]:c_void_ptr[149] c_void_ptr[149]
  unknown chpl_privateObjects[92932] "dead at end of block" "extern" "insert auto destroy" "no doc"
  function chpl_getPrivatizedCopy[92940](arg objectType[92938]:_any[178](?), arg objectPid[92943]:int(64)[13]) : _unknown[51] "inline" "no doc" "fn returns infinite lifetime"
  {
    unknown ret[514047] "RVV" "temp"
    unknown call_tmp[633376] "expr temp" "maybe param" "maybe type" "temp"
    (633379 'move' call_tmp[633376](92953 call chpl_privateObjects[92932] objectPid[92943]))
    unknown call_tmp[633383] "expr temp" "maybe param" "maybe type" "temp"
    (633386 'move' call_tmp[633383](92956 call obj _mt[243] call_tmp[633376]))
    unknown call_tmp[633388] "expr temp" "maybe param" "maybe type" "temp"
    (633391 'move' call_tmp[633388](92959 'cast' objectType[92938] call_tmp[633383]))
    (514053 'move' ret[514047](514052 'coerce' call_tmp[633388] objectType[92938]))
    (514049 return ret[514047])
  }
  { scopeless type
    objectType[92938]
  }
  function locale[28].totalThreads[92969](arg _mt[92974]:_MT[238], arg this[92971]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514063] "RVV" "temp"
    unknown totalThreads[92977] "dead at end of block" "insert auto destroy"
    (541639 'default init var' totalThreads[92977] int(64)[13])
    (92980 'end of statement')
    function chpl_task_getNumThreads[92984]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514057] "RVV" "temp"
      (514059 return ret[514057])
    }
    { scopeless type
      (92989 call uint(64)[115] 32)
    }
    const tmp[93004] "const" "temp"
    unknown call_tmp[633393] "expr temp" "maybe param" "maybe type" "temp"
    (633396 'move' call_tmp[633393](93001 '_wide_get_locale' this[92971]))
    (93006 'move' tmp[93004](93002 'deref' call_tmp[633393]))
    {
      unknown call_tmp[633398] "expr temp" "maybe param" "maybe type" "temp"
      (633401 'move' call_tmp[633398](92997 call chpl_task_getNumThreads))
      (92998 call = totalThreads[92977] call_tmp[633398])
      (477337 'end of statement' totalThreads[92977])
      (93009 'on block' 0 tmp[93004])
    }
    (514068 'move' ret[514063](514067 'deref' totalThreads[92977]))
    gotoReturn _end_totalThreads[514061] _end_totalThreads[514061]
    (477339 'end of statement' totalThreads[92977])
    label _end_totalThreads[514061]
    (514065 return ret[514063])
  }
  function locale[28].idleThreads[93020](arg _mt[93025]:_MT[238], arg this[93022]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514080] "RVV" "temp"
    unknown idleThreads[93028] "dead at end of block" "insert auto destroy"
    (541641 'default init var' idleThreads[93028] int(64)[13])
    (93031 'end of statement')
    function chpl_task_getNumIdleThreads[93035]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514074] "RVV" "temp"
      (514076 return ret[514074])
    }
    { scopeless type
      (93040 call uint(64)[115] 32)
    }
    const tmp[93055] "const" "temp"
    unknown call_tmp[633403] "expr temp" "maybe param" "maybe type" "temp"
    (633406 'move' call_tmp[633403](93052 '_wide_get_locale' this[93022]))
    (93057 'move' tmp[93055](93053 'deref' call_tmp[633403]))
    {
      unknown call_tmp[633408] "expr temp" "maybe param" "maybe type" "temp"
      (633411 'move' call_tmp[633408](93048 call chpl_task_getNumIdleThreads))
      (93049 call = idleThreads[93028] call_tmp[633408])
      (477341 'end of statement' idleThreads[93028])
      (93060 'on block' 0 tmp[93055])
    }
    (514085 'move' ret[514080](514084 'deref' idleThreads[93028]))
    gotoReturn _end_idleThreads[514078] _end_idleThreads[514078]
    (477343 'end of statement' idleThreads[93028])
    label _end_idleThreads[514078]
    (514082 return ret[514080])
  }
  function locale[28].queuedTasks[93071](arg _mt[93076]:_MT[238], arg this[93073]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514097] "RVV" "temp"
    unknown queuedTasks[93079] "dead at end of block" "insert auto destroy"
    (541643 'default init var' queuedTasks[93079] int(64)[13])
    (93082 'end of statement')
    function chpl_task_getNumQueuedTasks[93086]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514091] "RVV" "temp"
      (514093 return ret[514091])
    }
    { scopeless type
      (93091 call uint(64)[115] 32)
    }
    const tmp[93106] "const" "temp"
    unknown call_tmp[633413] "expr temp" "maybe param" "maybe type" "temp"
    (633416 'move' call_tmp[633413](93103 '_wide_get_locale' this[93073]))
    (93108 'move' tmp[93106](93104 'deref' call_tmp[633413]))
    {
      unknown call_tmp[633418] "expr temp" "maybe param" "maybe type" "temp"
      (633421 'move' call_tmp[633418](93099 call chpl_task_getNumQueuedTasks))
      (93100 call = queuedTasks[93079] call_tmp[633418])
      (477345 'end of statement' queuedTasks[93079])
      (93111 'on block' 0 tmp[93106])
    }
    (514102 'move' ret[514097](514101 'deref' queuedTasks[93079]))
    gotoReturn _end_queuedTasks[514095] _end_queuedTasks[514095]
    (477347 'end of statement' queuedTasks[93079])
    label _end_queuedTasks[514095]
    (514099 return ret[514097])
  }
  function locale[28].runningTasks[93122](arg _mt[93127]:_MT[238], arg this[93124]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc" "fn synchronization free"
  {
    unknown ret[514108] "RVV" "temp"
    unknown call_tmp[633425] "expr temp" "maybe param" "maybe type" "temp"
    (633428 'move' call_tmp[633425](93136 call(93132 call (partial) runningTaskCnt _mt[243] this[93124])))
    (514113 'move' ret[514108](514112 'deref' call_tmp[633425]))
    (514110 return ret[514108])
  }
  function locale[28].blockedTasks[93145](arg _mt[93150]:_MT[238], arg this[93147]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514123] "RVV" "temp"
    unknown blockedTasks[93153] "dead at end of block" "insert auto destroy"
    (541645 'default init var' blockedTasks[93153] int(64)[13])
    (93156 'end of statement')
    function chpl_task_getNumBlockedTasks[93160]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514117] "RVV" "temp"
      (514119 return ret[514117])
    }
    { scopeless type
      (93165 call int(64)[13] 32)
    }
    const tmp[93180] "const" "temp"
    unknown call_tmp[633430] "expr temp" "maybe param" "maybe type" "temp"
    (633433 'move' call_tmp[633430](93177 '_wide_get_locale' this[93147]))
    (93182 'move' tmp[93180](93178 'deref' call_tmp[633430]))
    {
      unknown call_tmp[633435] "expr temp" "maybe param" "maybe type" "temp"
      (633438 'move' call_tmp[633435](93173 call chpl_task_getNumBlockedTasks))
      (93174 call = blockedTasks[93153] call_tmp[633435])
      (477350 'end of statement' blockedTasks[93153])
      (93185 'on block' 0 tmp[93180])
    }
    (514128 'move' ret[514123](514127 'deref' blockedTasks[93153]))
    gotoReturn _end_blockedTasks[514121] _end_blockedTasks[514121]
    (477352 'end of statement' blockedTasks[93153])
    label _end_blockedTasks[514121]
    (514125 return ret[514123])
  }
  function chpl_taskRunningCntInc[93195]() : _unknown[51] "export" "insert line file info" "inc running task" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633440] "expr temp" "maybe param" "maybe type" "temp"
    (633443 'move' call_tmp[633440](93207 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[633440]
    {
      unknown call_tmp[633445] "expr temp" "maybe param" "maybe type" "temp"
      (633448 'move' call_tmp[633445](358391 call here[90435]))
      (93204 call(93199 call (partial) runningTaskCntAdd _mt[243] call_tmp[633445]) 1)
    }
    (514132 return _void[55])
  }
  function chpl_taskRunningCntDec[93216]() : _unknown[51] "export" "insert line file info" "dec running task" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633452] "expr temp" "maybe param" "maybe type" "temp"
    (633455 'move' call_tmp[633452](93228 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[633452]
    {
      unknown call_tmp[633457] "expr temp" "maybe param" "maybe type" "temp"
      (633460 'move' call_tmp[633457](358393 call here[90435]))
      (93225 call(93220 call (partial) runningTaskCntSub _mt[243] call_tmp[633457]) 1)
    }
    (514134 return _void[55])
  }
  function chpl_taskRunningCntReset[93237]() : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633464] "expr temp" "maybe param" "maybe type" "temp"
    (633467 'move' call_tmp[633464](358395 call here[90435]))
    (93247 call(93242 call (partial) runningTaskCntSet _mt[243] call_tmp[633464]) 0)
    (514136 return _void[55])
  }
  (354989 'used modules list'(89846 'use' LocaleModel[88726])(89850 'import' HaltWrappers[209910])(89853 'use' SysCTypes[20940]))
}