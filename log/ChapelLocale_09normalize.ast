AST dump for ChapelLocale after pass normalize.
Module use list: LocaleModel HaltWrappers SysCTypes 

{
  function chpl__init_ChapelLocale[416010]() : void[4] "insert line file info" "module init"
  {
    (541695 'move' chpl_nodeID_t[89862](541693 call int(64)[13] 32))
    (541700 'move' chpl_sublocID_t[89869](541698 call int(64)[13] 32))
    { scopeless type extern
      (541702 'default init var' c_sublocid_none[89873] chpl_sublocID_t[89869])
    }
    (89876 'end of statement')
    { scopeless type extern
      (541705 'default init var' c_sublocid_any[89878] chpl_sublocID_t[89869])
    }
    (89881 'end of statement')
    { scopeless type extern
      (541708 'default init var' c_sublocid_all[89883] chpl_sublocID_t[89869])
    }
    (89886 'end of statement')
    {
    }
    unknown call_tmp[632366] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632369 'move' call_tmp[632366](747833 'new' locale[28] nilLocale[89921]))
    (541711 'init var' nilLocale[89942] call_tmp[632366])
    (89945 'end of statement')
    unknown call_tmp[632371] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632374 'move' call_tmp[632371](747834 'new' locale[28] default[89925]))
    (541713 'init var' defaultLocale[89956] call_tmp[632371])
    (89959 'end of statement')
    unknown call_tmp[632376] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632379 'move' call_tmp[632376](747835 'new' locale[28] dummy[89923]))
    (541715 'init var' dummyLocale[89970] call_tmp[632376])
    (89973 'end of statement')
    (541731 'init var' rootLocale[91514] nilLocale[89942])
    (91517 'end of statement')
    (541733 'init var' replicateRootLocale[91519] 1)
    (91522 'end of statement')
    (541735 'init var' origRootLocale[91524] nilLocale[89942])
    (91527 'end of statement')
    { scopeless type extern
      unknown call_tmp[633484] "expr temp" "maybe param" "maybe type" "temp"
      (633487 'move' call_tmp[633484](92934 call c_ptr[205100](?) chpl_privateObject_t[92928]))
      (541768 'default init var' chpl_privateObjects[92935] call_tmp[633484])
    }
    (92938 'end of statement' chpl_sublocID_t[89869] chpl_sublocID_t[89869] chpl_sublocID_t[89869] nilLocale[89942] nilLocale[89942])
    (514270 return _void[55])
  }
  function chpl__deinit_ChapelLocale[93257]() : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[633586] "expr temp" "maybe param" "maybe type" "temp"
    (633589 'move' call_tmp[633586](93260 call _instance _mt[243] origRootLocale[91524]))
    (93264 call chpl__delete call_tmp[633586])
    (477488 'end of statement')
    unknown call_tmp[633593] "expr temp" "maybe param" "maybe type" "temp"
    (633596 'move' call_tmp[633593](93269 call _instance _mt[243] dummyLocale[89970]))
    (93273 call chpl__delete call_tmp[633593])
    (514272 return _void[55])
  }
  unknown chpl_nodeID_t[89862] "dead at end of block" "insert auto destroy" "no doc" "type variable"(89861 call int(64)[13] 32)
  unknown chpl_sublocID_t[89869] "dead at end of block" "insert auto destroy" "no doc" "type variable"(89868 call int(64)[13] 32)
  const c_sublocid_none[89873] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const c_sublocid_any[89878] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const c_sublocid_all[89883] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  function chpl_isActualSublocID[89893](arg subloc[89890] :
  chpl_sublocID_t[89869]) : _unknown[51] "inline" "no doc"
  {
    unknown ret[513669] "RVV" "temp"
    unknown tmp[422339] "maybe param" "temp"
    unknown tmp[422360] "maybe param" "temp"
    (422371 'move' tmp[422360](89897 call != subloc[89890] c_sublocid_none[89873]))
    unknown call_tmp[632336] "expr temp" "maybe param" "maybe type" "temp"
    (632339 'move' call_tmp[632336](422373 call _cond_invalid tmp[422360]))
    if call_tmp[632336]
    {
      (422376 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[560912] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560913] "maybe param" "temp"
    unknown call_tmp[632341] "expr temp" "maybe param" "maybe type" "temp"
    (632344 'move' call_tmp[632341](422361 call isTrue tmp[422360]))
    (560918 'move' tmp[560913](560916 call _cond_test call_tmp[632341]))
    if tmp[560913]
    {
      unknown tmp[560920] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[632346] "expr temp" "maybe param" "maybe type" "temp"
      (632349 'move' call_tmp[632346](89901 call != subloc[89890] c_sublocid_any[89878]))
      (560922 'move' tmp[560920](422364 call isTrue call_tmp[632346]))
      (560927 'move' tmp[560912](560924 '_paramFoldLogical' tmp[560913] tmp[560920]))
    }
    {
      (560932 'move' tmp[560912](560929 '_paramFoldLogical' tmp[560913] 0))
    }
    (422350 'move' tmp[422339] tmp[560912])
    unknown call_tmp[632351] "expr temp" "maybe param" "maybe type" "temp"
    (632354 'move' call_tmp[632351](422352 call _cond_invalid tmp[422339]))
    if call_tmp[632351]
    {
      (422355 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[560939] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[560940] "maybe param" "temp"
    unknown call_tmp[632356] "expr temp" "maybe param" "maybe type" "temp"
    (632359 'move' call_tmp[632356](422340 call isTrue tmp[422339]))
    (560945 'move' tmp[560940](560943 call _cond_test call_tmp[632356]))
    if tmp[560940]
    {
      unknown tmp[560947] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[632361] "expr temp" "maybe param" "maybe type" "temp"
      (632364 'move' call_tmp[632361](89907 call != subloc[89890] c_sublocid_all[89883]))
      (560949 'move' tmp[560947](422343 call isTrue call_tmp[632361]))
      (560954 'move' tmp[560939](560951 '_paramFoldLogical' tmp[560940] tmp[560947]))
    }
    {
      (560959 'move' tmp[560939](560956 '_paramFoldLogical' tmp[560940] 0))
    }
    (513674 'move' ret[513669](513673 'deref' tmp[560939]))
    (513671 return ret[513669])
  }
  type localeKind[89927] def regular[89917]:localeKind[89927] def any[89919]:localeKind[89927] def nilLocale[89921]:localeKind[89927] def dummy[89923]:localeKind[89927] def default[89925]:localeKind[89927]
  const nilLocale[89942] "dead at end of block" "const" "insert auto destroy" "locale private" "no doc"
  unknown defaultLocale[89956] "dead at end of block" "insert auto destroy" "locale private" "no doc"
  unknown dummyLocale[89970] "dead at end of block" "insert auto destroy" "no doc"
  function locale[28]._value[89984](arg _mt[90373]:_MT[238], arg this[90371]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[513678] "RVV" "temp"
    unknown call_tmp[632383] "expr temp" "maybe param" "maybe type" "temp"
    (632386 'move' call_tmp[632383](377832 call _instance _mt[243] this[90371]))
    unknown call_tmp[632388] "expr temp" "maybe param" "maybe type" "temp"
    (632391 'move' call_tmp[632388](89987 call postfix! call_tmp[632383]))
    (513683 'move' ret[513678](513682 'deref' call_tmp[632388]))
    (513680 return ret[513678])
  }
  function locale[28].chpl_forwarding_expr3__value[89995](arg _mt[90377]:_MT[238], arg this[90375]:locale[28]) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    unknown ret[513687] "RVV" "temp"
    (513691 'move' ret[513687](377836 call _value _mt[243] this[90375]))
    (513689 return ret[513687])
  }
  function locale[28].init[90003](arg _mt[90381]:_MT[238], ref arg this[90379]:locale[28]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632395] "expr temp" "maybe param" "maybe type" "temp"
    (632398 'move' call_tmp[632395](90027 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[632395]
    {
      unknown call_tmp[632402] "maybe param" "maybe type" "temp"
      (632405 'move' call_tmp[632402](90011 call _instance _mt[243] defaultLocale[89956]))
      unknown tmp[460412] "temp"
      (460415 'init var' tmp[460412] call_tmp[632402] unmanaged BaseLocale?[415461])
      (460417 'init field' this[90379] c"_instance" tmp[460412])
      (477241 'end of statement')
    }
    {
      unknown tmp[460421] "temp"
      (460424 'init var' tmp[460421] nil[44] unmanaged BaseLocale?[415461])
      (460426 'init field' this[90379] c"_instance" tmp[460421])
      (477242 'end of statement')
    }
    (513693 return _void[55])
  }
  function locale[28].init[90040](arg _mt[90385]:_MT[238], ref arg this[90383]:locale[28], arg _instance[90037]:BaseLocale[377827](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632407] "maybe param" "maybe type" "temp"
    (632410 'move' call_tmp[632407](90049 call _to_unmanaged _instance[90037]))
    unknown tmp[460430] "temp"
    (460433 'init var' tmp[460430] call_tmp[632407] unmanaged BaseLocale?[415461])
    (460435 'init field' this[90383] c"_instance" tmp[460430])
    (477243 'end of statement')
    (513695 return _void[55])
  }
  function locale[28].init[90060](arg _mt[90389]:_MT[238], ref arg this[90387]:locale[28], param arg kind[90058]:_any[178](?)) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632412] "expr temp" "maybe param" "maybe type" "temp"
    (632415 'move' call_tmp[632412](90069 call == kind[90058] regular[89917]))
    unknown call_tmp[632417] "expr temp" "maybe param" "maybe type" "temp"
    (632420 'move' call_tmp[632417](90155 call _cond_test call_tmp[632412]))
    if call_tmp[632417]
    {
      (90107 call compilerError "locale.init(kind) can not be used to create " "a regular locale instance")
      (477244 'end of statement')
      val tmp[460469]:unmanaged BaseLocale?[415461] "temp"
      (460472 'default init var' tmp[460469] unmanaged BaseLocale?[415461])
      (460474 '.=' this[90387] c"_instance" tmp[460469])
      (477245 'end of statement')
    }
    {
      unknown call_tmp[632422] "expr temp" "maybe param" "maybe type" "temp"
      (632425 'move' call_tmp[632422](90114 call == kind[90058] dummy[89923]))
      unknown call_tmp[632427] "expr temp" "maybe param" "maybe type" "temp"
      (632430 'move' call_tmp[632427](90149 call _cond_test call_tmp[632422]))
      if call_tmp[632427]
      {
        unknown call_tmp[632432] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (632435 'move' call_tmp[632432](747836 'new' DummyLocale[377845](?)(_chpl_manager = unmanaged[220](?))))
        unknown tmp[460439] "temp"
        (460442 'init var' tmp[460439] call_tmp[632432] unmanaged BaseLocale?[415461])
        (460444 'init field' this[90387] c"_instance" tmp[460439])
        (477246 'end of statement')
      }
      {
        unknown call_tmp[632437] "expr temp" "maybe param" "maybe type" "temp"
        (632440 'move' call_tmp[632437](90134 call == kind[90058] default[89925]))
        unknown call_tmp[632442] "expr temp" "maybe param" "maybe type" "temp"
        (632445 'move' call_tmp[632442](90144 call _cond_test call_tmp[632437]))
        if call_tmp[632442]
        {
          unknown tmp[460448] "temp"
          (460451 'init var' tmp[460448] nil[44] unmanaged BaseLocale?[415461])
          (460453 'init field' this[90387] c"_instance" tmp[460448])
          (477247 'end of statement')
        }
        {
          val tmp[460459]:unmanaged BaseLocale?[415461] "temp"
          (460462 'default init var' tmp[460459] unmanaged BaseLocale?[415461])
          (460464 '.=' this[90387] c"_instance" tmp[460459])
          (477248 'end of statement')
        }
      }
    }
    (513697 return _void[55])
  }
  function locale[28].init=[90170](arg _mt[90393]:_MT[238], ref arg this[90391]:locale[28], arg other[90167]:locale[28]) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[632449] "maybe param" "maybe type" "temp"
    (632452 'move' call_tmp[632449](90177 call _instance _mt[243] other[90167]))
    unknown tmp[460478] "temp"
    (460481 'init var' tmp[460478] call_tmp[632449] unmanaged BaseLocale?[415461])
    (460483 'init field' this[90391] c"_instance" tmp[460478])
    (477249 'end of statement')
    (513699 return _void[55])
  }
  function locale[28].deinit[90188](arg _mt[90397]:_MT[238], arg this[90395]:locale[28]) : _unknown[51] "destructor" "method" "primary method" "no return value for void"
  {
    (513701 return _void[55])
  }
  function locale[28].localeid[90195](arg _mt[90401]:_MT[238], arg this[90399]:locale[28]) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[513705] "RVV" "temp"
    unknown call_tmp[632456] "expr temp" "maybe param" "maybe type" "temp"
    (632459 'move' call_tmp[632456](90198 call _value _mt[243] this[90399]))
    unknown call_tmp[632463] "expr temp" "maybe param" "maybe type" "temp"
    (632466 'move' call_tmp[632463](90203 call localeid _mt[243] call_tmp[632456]))
    (513710 'move' ret[513705](513709 'deref' call_tmp[632463]))
    (513707 return ret[513705])
  }
  function locale[28].chpl_id[90213](arg _mt[90405]:_MT[238], arg this[90403]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513714] "RVV" "temp"
    unknown call_tmp[632470] "expr temp" "maybe param" "maybe type" "temp"
    (632473 'move' call_tmp[632470](90216 call _value _mt[243] this[90403]))
    unknown call_tmp[632477] "expr temp" "maybe param" "maybe type" "temp"
    (632480 'move' call_tmp[632477](90225 call(90221 call (partial) chpl_id _mt[243] call_tmp[632470])))
    (513719 'move' ret[513714](513718 'deref' call_tmp[632477]))
    (513716 return ret[513714])
  }
  function locale[28].chpl_localeid[90233](arg _mt[90409]:_MT[238], arg this[90407]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513723] "RVV" "temp"
    unknown call_tmp[632484] "expr temp" "maybe param" "maybe type" "temp"
    (632487 'move' call_tmp[632484](90236 call _value _mt[243] this[90407]))
    unknown call_tmp[632491] "expr temp" "maybe param" "maybe type" "temp"
    (632494 'move' call_tmp[632491](90245 call(90241 call (partial) chpl_localeid _mt[243] call_tmp[632484])))
    (513728 'move' ret[513723](513727 'deref' call_tmp[632491]))
    (513725 return ret[513723])
  }
  function locale[28].chpl_name[90253](arg _mt[90413]:_MT[238], arg this[90411]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513732] "RVV" "temp"
    unknown call_tmp[632498] "expr temp" "maybe param" "maybe type" "temp"
    (632501 'move' call_tmp[632498](90256 call _value _mt[243] this[90411]))
    unknown call_tmp[632505] "expr temp" "maybe param" "maybe type" "temp"
    (632508 'move' call_tmp[632505](90265 call(90261 call (partial) chpl_name _mt[243] call_tmp[632498])))
    (513737 'move' ret[513732](513736 'deref' call_tmp[632505]))
    (513734 return ret[513732])
  }
  function locale[28].defaultMemory[90273](arg _mt[90417]:_MT[238], arg this[90415]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513741] "RVV" "temp"
    unknown call_tmp[632512] "expr temp" "maybe param" "maybe type" "temp"
    (632515 'move' call_tmp[632512](90276 call _value _mt[243] this[90415]))
    unknown call_tmp[632519] "expr temp" "maybe param" "maybe type" "temp"
    (632522 'move' call_tmp[632519](90285 call(90281 call (partial) defaultMemory _mt[243] call_tmp[632512])))
    (513746 'move' ret[513741](513745 'deref' call_tmp[632519]))
    (513743 return ret[513741])
  }
  function locale[28].largeMemory[90293](arg _mt[90421]:_MT[238], arg this[90419]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513750] "RVV" "temp"
    unknown call_tmp[632526] "expr temp" "maybe param" "maybe type" "temp"
    (632529 'move' call_tmp[632526](90296 call _value _mt[243] this[90419]))
    unknown call_tmp[632533] "expr temp" "maybe param" "maybe type" "temp"
    (632536 'move' call_tmp[632533](90305 call(90301 call (partial) largeMemory _mt[243] call_tmp[632526])))
    (513755 'move' ret[513750](513754 'deref' call_tmp[632533]))
    (513752 return ret[513750])
  }
  function locale[28].lowLatencyMemory[90313](arg _mt[90425]:_MT[238], arg this[90423]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513759] "RVV" "temp"
    unknown call_tmp[632540] "expr temp" "maybe param" "maybe type" "temp"
    (632543 'move' call_tmp[632540](90316 call _value _mt[243] this[90423]))
    unknown call_tmp[632547] "expr temp" "maybe param" "maybe type" "temp"
    (632550 'move' call_tmp[632547](90325 call(90321 call (partial) lowLatencyMemory _mt[243] call_tmp[632540])))
    (513764 'move' ret[513759](513763 'deref' call_tmp[632547]))
    (513761 return ret[513759])
  }
  function locale[28].highBandwidthMemory[90333](arg _mt[90429]:_MT[238], arg this[90427]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513768] "RVV" "temp"
    unknown call_tmp[632554] "expr temp" "maybe param" "maybe type" "temp"
    (632557 'move' call_tmp[632554](90336 call _value _mt[243] this[90427]))
    unknown call_tmp[632561] "expr temp" "maybe param" "maybe type" "temp"
    (632564 'move' call_tmp[632561](90345 call(90341 call (partial) highBandwidthMemory _mt[243] call_tmp[632554])))
    (513773 'move' ret[513768](513772 'deref' call_tmp[632561]))
    (513770 return ret[513768])
  }
  function locale[28].getChildCount[90353](arg _mt[90433]:_MT[238], arg this[90431]:locale[28]) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513777] "RVV" "temp"
    unknown call_tmp[632568] "expr temp" "maybe param" "maybe type" "temp"
    (632571 'move' call_tmp[632568](90356 call _value _mt[243] this[90431]))
    unknown call_tmp[632575] "expr temp" "maybe param" "maybe type" "temp"
    (632578 'move' call_tmp[632575](90363 call(90359 call (partial) getChildCount _mt[243] call_tmp[632568])))
    (513782 'move' ret[513777](513781 'deref' call_tmp[632575]))
    (513779 return ret[513777])
  }
  type locale[28] val _instance[89978]:unmanaged BaseLocale?[415461] unmanaged BaseLocale?[415461] forwarding ( )
  function here[90438]() : _unknown[51] "inline" "no parens"
  {
    unknown ret[513786] "RVV" "temp"
    unknown call_tmp[632580] "expr temp" "maybe param" "maybe type" "temp"
    (632583 'move' call_tmp[632580](377849 call here_id[92818]))
    unknown call_tmp[632585] "expr temp" "maybe param" "maybe type" "temp"
    (632588 'move' call_tmp[632585](90443 call chpl_localeID_to_locale call_tmp[632580]))
    (513791 'move' ret[513786](513790 'deref' call_tmp[632585]))
    (513788 return ret[513786])
  }
  function locale[28].hostname[90452](arg _mt[90457]:_MT[238], arg this[90454]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513795] "RVV" "temp"
    (90478 call writeln "in locale.hostname line 212")
    (477260 'end of statement')
    unknown call_tmp[632592] "expr temp" "maybe param" "maybe type" "temp"
    (632595 'move' call_tmp[632592](90482 call _value _mt[243] this[90454]))
    unknown call_tmp[632599] "expr temp" "maybe param" "maybe type" "temp"
    (632602 'move' call_tmp[632599](90487 call hostname _mt[243] call_tmp[632592]))
    (513800 'move' ret[513795](513799 'deref' call_tmp[632599]))
    (513797 return ret[513795])
  }
  function locale[28].name[90497](arg _mt[90502]:_MT[238], arg this[90499]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513804] "RVV" "temp"
    unknown call_tmp[632606] "expr temp" "maybe param" "maybe type" "temp"
    (632609 'move' call_tmp[632606](90505 call _value _mt[243] this[90499]))
    unknown call_tmp[632613] "expr temp" "maybe param" "maybe type" "temp"
    (632616 'move' call_tmp[632613](90510 call name _mt[243] call_tmp[632606]))
    (513809 'move' ret[513804](513808 'deref' call_tmp[632613]))
    (513806 return ret[513804])
  }
  function locale[28].id[90521](arg _mt[90526]:_MT[238], arg this[90523]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513813] "RVV" "temp"
    unknown call_tmp[632620] "expr temp" "maybe param" "maybe type" "temp"
    (632623 'move' call_tmp[632620](90529 call _value _mt[243] this[90523]))
    unknown call_tmp[632627] "expr temp" "maybe param" "maybe type" "temp"
    (632630 'move' call_tmp[632627](90534 call id _mt[243] call_tmp[632620]))
    (513818 'move' ret[513813](513817 'deref' call_tmp[632627]))
    (513815 return ret[513813])
  }
  function locale[28].maxTaskPar[90545](arg _mt[90550]:_MT[238], arg this[90547]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513822] "RVV" "temp"
    unknown call_tmp[632634] "expr temp" "maybe param" "maybe type" "temp"
    (632637 'move' call_tmp[632634](90553 call _value _mt[243] this[90547]))
    unknown call_tmp[632641] "expr temp" "maybe param" "maybe type" "temp"
    (632644 'move' call_tmp[632641](90556 call maxTaskPar _mt[243] call_tmp[632634]))
    (513827 'move' ret[513822](513826 'deref' call_tmp[632641]))
    (513824 return ret[513822])
  }
  function locale[28].numPUs[90573](arg _mt[90584]:_MT[238], arg this[90581]:locale[28] :
  locale[28], arg logical[90569]:bool[10] =
  0, arg accessible[90577]:bool[10] =
  1) : _unknown[51] "inline" "method"
  {
    unknown ret[513831] "RVV" "temp"
    unknown call_tmp[632648] "expr temp" "maybe param" "maybe type" "temp"
    (632651 'move' call_tmp[632648](90587 call _value _mt[243] this[90581]))
    unknown call_tmp[632655] "expr temp" "maybe param" "maybe type" "temp"
    (632658 'move' call_tmp[632655](90598 call(90592 call (partial) numPUs _mt[243] call_tmp[632648]) logical[90569] accessible[90577]))
    (513836 'move' ret[513831](513835 'deref' call_tmp[632655]))
    (513833 return ret[513831])
  }
  function locale[28].callStackSize[90607](arg _mt[90612]:_MT[238], arg this[90609]:locale[28] :
  locale[28]) : _unknown[51] "inline" "method" "no parens"
  {
    unknown ret[513840] "RVV" "temp"
    unknown call_tmp[632662] "expr temp" "maybe param" "maybe type" "temp"
    (632665 'move' call_tmp[632662](90615 call _value _mt[243] this[90609]))
    unknown call_tmp[632669] "expr temp" "maybe param" "maybe type" "temp"
    (632672 'move' call_tmp[632669](90620 call callStackSize _mt[243] call_tmp[632662]))
    (513845 'move' ret[513840](513844 'deref' call_tmp[632669]))
    (513842 return ret[513840])
  }
  function =[90634](ref arg l1[90631]:locale[28], const  ref arg l2[90637]:locale[28]) : _unknown[51] "assignop" "no doc" "no return value for void"
  {
    unknown call_tmp[632676] "expr temp" "maybe param" "maybe type" "temp"
    (632679 'move' call_tmp[632676](90641 call _instance _mt[243] l1[90631]))
    unknown call_tmp[632683] "expr temp" "maybe param" "maybe type" "temp"
    (632686 'move' call_tmp[632683](90645 call _instance _mt[243] l2[90637]))
    (90648 call = call_tmp[632676] call_tmp[632683])
    (513847 return _void[55])
  }
  function BaseLocale[91204].init[90657](arg _mt[91208]:_MT[238], arg this[91206]:BaseLocale[91204]) : void[4] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown super_tmp[460582] "temporary of super field" "temp"
    (460590 'move' super_tmp[460582](460583 '.v' this[91206] c"super"))
    (460586 call init _mt[243] super_tmp[460582])
    (477268 'end of statement')
    unknown tmp[460491] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492010] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632688] "expr temp" "maybe param" "maybe type" "temp"
      (632691 'move' call_tmp[632688](460493 '.v' this[91206] c"super"))
      (492014 'move' call_type_tmp[492010](460496 'typeof' call_tmp[632688]))
    }
    (460497 'move' tmp[460491] call_type_tmp[492010])
    unknown call_tmp[632693] "maybe param" "maybe type" "temp"
    (632696 'move' call_tmp[632693](460502 'cast' tmp[460491] this[91206]))
    unknown chpl__thisAsParent[460499] "dead at end of block" "insert auto destroy" "temp"
    (541717 'init var' chpl__thisAsParent[460499] call_tmp[632693] tmp[460491])
    (460505 'setcid' chpl__thisAsParent[460499])
    (477269 'end of statement')
    unknown tmp[460509] "temp"
    (460511 'init var' tmp[460509] nilLocale[89942])
    (460513 '.=' this[91206] c"parent" tmp[460509])
    (477270 'end of statement')
    val tmp[460517]:int(64)[13] "temp"
    (460520 'default init var' tmp[460517] int(64)[13])
    (460522 '.=' this[91206] c"nPUsLogAcc" tmp[460517])
    (477271 'end of statement')
    val tmp[460526]:int(64)[13] "temp"
    (460529 'default init var' tmp[460526] int(64)[13])
    (460531 '.=' this[91206] c"nPUsLogAll" tmp[460526])
    (477272 'end of statement')
    val tmp[460535]:int(64)[13] "temp"
    (460538 'default init var' tmp[460535] int(64)[13])
    (460540 '.=' this[91206] c"nPUsPhysAcc" tmp[460535])
    (477273 'end of statement')
    val tmp[460544]:int(64)[13] "temp"
    (460547 'default init var' tmp[460544] int(64)[13])
    (460549 '.=' this[91206] c"nPUsPhysAll" tmp[460544])
    (477274 'end of statement')
    val tmp[460553]:int(64)[13] "temp"
    (460556 'default init var' tmp[460553] int(64)[13])
    (460558 '.=' this[91206] c"maxTaskPar" tmp[460553])
    (477275 'end of statement')
    unknown tmp[460562] "temp"
    (460565 'default init var' tmp[460562] size_t[20657])
    (460567 '.=' this[91206] c"callStackSize" tmp[460562])
    (477276 'end of statement')
    unknown tmp[460571] "temp"
    unknown call_tmp[632698] "expr temp" "maybe param" "maybe type" "temp"
    (632701 'move' call_tmp[632698](460574 call chpl__processorAtomicType int(64)[13]))
    (460576 'default init var' tmp[460571] call_tmp[632698])
    (460578 '.=' this[91206] c"runningTaskCounter" tmp[460571])
    (477277 'end of statement')
    (460593 'setcid' this[91206])
    (513849 return _void[55])
  }
  function BaseLocale[91204].init[90668](arg _mt[91212]:_MT[238], arg this[91210]:BaseLocale[91204], arg parent[90665]:locale[28]) : void[4] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown super_tmp[460689] "temporary of super field" "temp"
    (460697 'move' super_tmp[460689](460690 '.v' this[91210] c"super"))
    (460693 call init _mt[243] super_tmp[460689])
    (477279 'end of statement')
    unknown tmp[460599] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492016] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632703] "expr temp" "maybe param" "maybe type" "temp"
      (632706 'move' call_tmp[632703](460601 '.v' this[91210] c"super"))
      (492020 'move' call_type_tmp[492016](460604 'typeof' call_tmp[632703]))
    }
    (460605 'move' tmp[460599] call_type_tmp[492016])
    unknown call_tmp[632708] "maybe param" "maybe type" "temp"
    (632711 'move' call_tmp[632708](460610 'cast' tmp[460599] this[91210]))
    unknown chpl__thisAsParent[460607] "dead at end of block" "insert auto destroy" "temp"
    (541719 'init var' chpl__thisAsParent[460607] call_tmp[632708] tmp[460599])
    (460613 'setcid' chpl__thisAsParent[460607])
    (477280 'end of statement')
    unknown tmp[460615] "temp"
    (460617 'init var' tmp[460615] parent[90665])
    (460619 '.=' this[91210] c"parent" tmp[460615])
    (477281 'end of statement')
    val tmp[460624]:int(64)[13] "temp"
    (460627 'default init var' tmp[460624] int(64)[13])
    (460629 '.=' this[91210] c"nPUsLogAcc" tmp[460624])
    (477282 'end of statement')
    val tmp[460633]:int(64)[13] "temp"
    (460636 'default init var' tmp[460633] int(64)[13])
    (460638 '.=' this[91210] c"nPUsLogAll" tmp[460633])
    (477283 'end of statement')
    val tmp[460642]:int(64)[13] "temp"
    (460645 'default init var' tmp[460642] int(64)[13])
    (460647 '.=' this[91210] c"nPUsPhysAcc" tmp[460642])
    (477284 'end of statement')
    val tmp[460651]:int(64)[13] "temp"
    (460654 'default init var' tmp[460651] int(64)[13])
    (460656 '.=' this[91210] c"nPUsPhysAll" tmp[460651])
    (477285 'end of statement')
    val tmp[460660]:int(64)[13] "temp"
    (460663 'default init var' tmp[460660] int(64)[13])
    (460665 '.=' this[91210] c"maxTaskPar" tmp[460660])
    (477286 'end of statement')
    unknown tmp[460669] "temp"
    (460672 'default init var' tmp[460669] size_t[20657])
    (460674 '.=' this[91210] c"callStackSize" tmp[460669])
    (477287 'end of statement')
    unknown tmp[460678] "temp"
    unknown call_tmp[632713] "expr temp" "maybe param" "maybe type" "temp"
    (632716 'move' call_tmp[632713](460681 call chpl__processorAtomicType int(64)[13]))
    (460683 'default init var' tmp[460678] call_tmp[632713])
    (460685 '.=' this[91210] c"runningTaskCounter" tmp[460678])
    (477288 'end of statement')
    (460700 'setcid' this[91210])
    (513851 return _void[55])
  }
  function BaseLocale[91204].numPUs[90716](arg _mt[91216]:_MT[238], arg this[91214]:BaseLocale[91204], arg logical[90712]:bool[10] =
  0, arg accessible[90720]:bool[10] =
  1) : _unknown[51] "inline" "method" "primary method"
  {
    unknown ret[513855] "RVV" "temp"
    unknown tmp[561028] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561029] "maybe param" "temp"
    (561034 'move' tmp[561029](561032 call _cond_test logical[90712]))
    if tmp[561029]
    {
      unknown tmp[560966] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[560967] "maybe param" "temp"
      (560972 'move' tmp[560967](560970 call _cond_test accessible[90720]))
      if tmp[560967]
      {
        unknown tmp[560974] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560976 'move' tmp[560974](377859 call nPUsLogAcc _mt[243] this[91214]))
        (560981 'move' tmp[560966](560978 '_paramFoldLogical' tmp[560967] tmp[560974]))
      }
      {
        unknown tmp[560983] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (560985 'move' tmp[560983](377864 call nPUsLogAll _mt[243] this[91214]))
        (560990 'move' tmp[560966](560987 '_paramFoldLogical' tmp[560967] tmp[560983]))
      }
      (561039 'move' tmp[561028](561036 '_paramFoldLogical' tmp[561029] tmp[560966]))
    }
    {
      unknown tmp[560997] "expr temp" "if-expr result" "maybe type" "temp"
      unknown tmp[560998] "maybe param" "temp"
      (561003 'move' tmp[560998](561001 call _cond_test accessible[90720]))
      if tmp[560998]
      {
        unknown tmp[561005] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561007 'move' tmp[561005](377870 call nPUsPhysAcc _mt[243] this[91214]))
        (561012 'move' tmp[560997](561009 '_paramFoldLogical' tmp[560998] tmp[561005]))
      }
      {
        unknown tmp[561014] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561016 'move' tmp[561014](377875 call nPUsPhysAll _mt[243] this[91214]))
        (561021 'move' tmp[560997](561018 '_paramFoldLogical' tmp[560998] tmp[561014]))
      }
      (561044 'move' tmp[561028](561041 '_paramFoldLogical' tmp[561029] tmp[560997]))
    }
    (513860 'move' ret[513855](513859 'deref' tmp[561028]))
    (513857 return ret[513855])
  }
  function BaseLocale[91204].id[90757](arg _mt[91220]:_MT[238], arg this[91218]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513864] "RVV" "temp"
    unknown call_tmp[632726] "expr temp" "maybe param" "maybe type" "temp"
    (632729 'move' call_tmp[632726](90780 '_wide_get_locale' this[91218]))
    unknown call_tmp[632731] "expr temp" "maybe param" "maybe type" "temp"
    (632734 'move' call_tmp[632731](90782 call chpl_nodeFromLocaleID call_tmp[632726]))
    (513870 'move' ret[513864](513869 'coerce' call_tmp[632731] int(64)[13]))
    (513866 return ret[513864])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91204].localeid[90791](arg _mt[91224]:_MT[238], arg this[91222]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc" "no parens"
  {
    unknown ret[513874] "RVV" "temp"
    unknown call_tmp[632736] "expr temp" "maybe param" "maybe type" "temp"
    (632739 'move' call_tmp[632736](90797 '_wide_get_locale' this[91222]))
    (513880 'move' ret[513874](513879 'coerce' call_tmp[632736] chpl_localeID_t[209352]))
    (513876 return ret[513874])
  }
  { scopeless type
    chpl_localeID_t[209352]
  }
  function BaseLocale[91204].hostname[90806](arg _mt[91228]:_MT[238], arg this[91226]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513890] "RVV" "temp"
    function chpl_nodeName[90811]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[513884] "RVV" "temp"
      (513886 return ret[513884])
    }
    { scopeless type
      c_string[19]
    }
    unknown hname[90819] "dead at end of block" "insert auto destroy"
    (541721 'default init var' hname[90819] string[26])
    (90822 'end of statement')
    const tmp[90842] "const" "temp"
    unknown call_tmp[632741] "expr temp" "maybe param" "maybe type" "temp"
    (632744 'move' call_tmp[632741](90839 '_wide_get_locale' this[91226]))
    (90844 'move' tmp[90842](90840 'deref' call_tmp[632741]))
    {
      {
        Try!
        {
          {
            unknown call_tmp[632746] "expr temp" "maybe param" "maybe type" "temp"
            (632749 'move' call_tmp[632746](90828 call chpl_nodeName))
            unknown call_tmp[632751] "expr temp" "maybe param" "maybe type" "temp"
            (632754 'move' call_tmp[632751](90830 call createStringWithNewBuffer call_tmp[632746]))
            (90831 call = hname[90819] call_tmp[632751])
            (477293 'end of statement' hname[90819])
          }
        }
      }
      (90847 'on block' 0 tmp[90842])
    }
    (513896 'move' ret[513890](513895 'coerce' hname[90819] string[26]))
    gotoReturn _end_hostname[513888] _end_hostname[513888]
    (477295 'end of statement' hname[90819])
    label _end_hostname[513888]
    (513892 return ret[513890])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91204].writeThis[90860](arg _mt[91232]:_MT[238], arg this[91230]:BaseLocale[91204], arg f[90858]:_any[178](?)) : _unknown[51] throws "method" "primary method" "method overrides" "no return value for void"
  {
    (90869 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513900 return _void[55])
    (358376 'referenced modules list' HaltWrappers[210016])
  }
  function BaseLocale[91204].name[90876](arg _mt[91236]:_MT[238], arg this[91234]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[513904] "RVV" "temp"
    unknown call_tmp[632758] "expr temp" "maybe param" "maybe type" "temp"
    (632761 'move' call_tmp[632758](90880 call(377887 call (partial) chpl_name _mt[243] this[91234])))
    unknown call_tmp[632763] "expr temp" "maybe param" "maybe type" "temp"
    (632766 'move' call_tmp[632763](90882 call _cast string[26] call_tmp[632758]))
    (513909 'move' ret[513904](513908 'deref' call_tmp[632763]))
    (513906 return ret[513904])
  }
  function BaseLocale[91204].runningTaskCntSet[90903](arg _mt[91240]:_MT[238], arg this[91238]:BaseLocale[91204], arg val[90900]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632770] "expr temp" "maybe param" "maybe type" "temp"
    (632773 'move' call_tmp[632770](358385 call runningTaskCounter _mt[243] this[91238]))
    (90915 call(90906 call (partial) write _mt[243] call_tmp[632770]) val[90900] relaxed[187010])
    (513911 return _void[55])
  }
  function BaseLocale[91204].runningTaskCntAdd[90926](arg _mt[91244]:_MT[238], arg this[91242]:BaseLocale[91204], arg val[90923]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632779] "expr temp" "maybe param" "maybe type" "temp"
    (632782 'move' call_tmp[632779](358391 call runningTaskCounter _mt[243] this[91242]))
    (90938 call(90929 call (partial) add _mt[243] call_tmp[632779]) val[90923] relaxed[187010])
    (513913 return _void[55])
  }
  function BaseLocale[91204].runningTaskCntSub[90949](arg _mt[91248]:_MT[238], arg this[91246]:BaseLocale[91204], arg val[90946]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[632788] "expr temp" "maybe param" "maybe type" "temp"
    (632791 'move' call_tmp[632788](358397 call runningTaskCounter _mt[243] this[91246]))
    (90961 call(90952 call (partial) sub _mt[243] call_tmp[632788]) val[90946] relaxed[187010])
    (513915 return _void[55])
  }
  function BaseLocale[91204].runningTaskCnt[90968](arg _mt[91252]:_MT[238], arg this[91250]:BaseLocale[91204]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[513919] "RVV" "temp"
    unknown call_tmp[632797] "expr temp" "maybe param" "maybe type" "temp"
    (632800 'move' call_tmp[632797](358403 call runningTaskCounter _mt[243] this[91250]))
    unknown call_tmp[632804] "maybe param" "maybe type" "temp"
    (632807 'move' call_tmp[632804](90979 call(90971 call (partial) read _mt[243] call_tmp[632797]) relaxed[187010]))
    unknown rtc[90980] "dead at end of block" "insert auto destroy"
    (541723 'init var' rtc[90980] call_tmp[632804])
    (90983 'end of statement')
    unknown tmp[561051] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561052] "maybe param" "temp"
    unknown call_tmp[632809] "expr temp" "maybe param" "maybe type" "temp"
    (632812 'move' call_tmp[632809](90987 call <= rtc[90980] 0))
    (561057 'move' tmp[561052](561055 call _cond_test call_tmp[632809]))
    if tmp[561052]
    {
      (561062 'move' tmp[561051](561059 '_paramFoldLogical' tmp[561052] 1))
    }
    {
      (561067 'move' tmp[561051](561064 '_paramFoldLogical' tmp[561052] rtc[90980]))
    }
    (513924 'move' ret[513919](513923 'deref' tmp[561051]))
    gotoReturn _end_runningTaskCnt[513917] _end_runningTaskCnt[513917]
    (477302 'end of statement' rtc[90980] rtc[90980])
    label _end_runningTaskCnt[513917]
    (513921 return ret[513919])
  }
  function BaseLocale[91204].chpl_id[91000](arg _mt[91256]:_MT[238], arg this[91254]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513930] "RVV" "temp"
    (91008 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477305 'end of statement')
    unknown call_tmp[632814] "expr temp" "maybe param" "maybe type" "temp"
    (632817 'move' call_tmp[632814](91012 call - 1))
    (513936 'move' ret[513930](513935 'coerce' call_tmp[632814] int(64)[13]))
    (513932 return ret[513930])
    (358408 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91204].chpl_localeid[91021](arg _mt[91260]:_MT[238], arg this[91258]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513940] "RVV" "temp"
    (91029 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477307 'end of statement')
    unknown call_tmp[632819] "expr temp" "maybe param" "maybe type" "temp"
    (632822 'move' call_tmp[632819](91035 call _cast chpl_nodeID_t[89862] 1))
    unknown call_tmp[632824] "expr temp" "maybe param" "maybe type" "temp"
    (632827 'move' call_tmp[632824](91037 call - call_tmp[632819]))
    unknown call_tmp[632829] "expr temp" "maybe param" "maybe type" "temp"
    (632832 'move' call_tmp[632829](91041 call chpl_buildLocaleID call_tmp[632824] c_sublocid_none[89873]))
    (513946 'move' ret[513940](513945 'coerce' call_tmp[632829] chpl_localeID_t[209352]))
    (513942 return ret[513940])
    (358414 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    chpl_localeID_t[209352]
  }
  function BaseLocale[91204].chpl_name[91049](arg _mt[91264]:_MT[238], arg this[91262]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513950] "RVV" "temp"
    (91057 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477309 'end of statement')
    (513956 'move' ret[513950](513955 'coerce' "" string[26]))
    (513952 return ret[513950])
    (358420 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    string[26]
  }
  function BaseLocale[91204].defaultMemory[91084](arg _mt[91268]:_MT[238], arg this[91266]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513960] "RVV" "temp"
    (91092 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513962 return ret[513960])
    (358426 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91204].largeMemory[91100](arg _mt[91272]:_MT[238], arg this[91270]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513966] "RVV" "temp"
    (91108 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513968 return ret[513966])
    (358432 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91204].lowLatencyMemory[91116](arg _mt[91276]:_MT[238], arg this[91274]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513972] "RVV" "temp"
    (91124 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513974 return ret[513972])
    (358438 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91204].highBandwidthMemory[91132](arg _mt[91280]:_MT[238], arg this[91278]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513978] "RVV" "temp"
    (91140 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513980 return ret[513978])
    (358444 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  function BaseLocale[91204].getChildCount[91148](arg _mt[91284]:_MT[238], arg this[91282]:BaseLocale[91204]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[513984] "RVV" "temp"
    (91156 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477315 'end of statement')
    (513990 'move' ret[513984](513989 'coerce' 0 int(64)[13]))
    (513986 return ret[513984])
    (358450 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    int(64)[13]
  }
  function BaseLocale[91204].addChild[91171](arg _mt[91288]:_MT[238], arg this[91286]:BaseLocale[91204], arg loc[91168]:locale[28]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (91178 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513992 return _void[55])
    (358456 'referenced modules list' HaltWrappers[210016])
  }
  function BaseLocale[91204].getChild[91189](arg _mt[91292]:_MT[238], arg this[91290]:BaseLocale[91204], arg idx[91186]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[513996] "RVV" "temp"
    (91197 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (513998 return ret[513996])
    (358462 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  type BaseLocale[91204] val super[355678]:object[22] "super class" const parent[90684] "const" "no doc" nilLocale[89942] val nPUsLogAcc[90689]:int(64)[13] "no doc" int(64)[13] val nPUsLogAll[90694]:int(64)[13] "no doc" int(64)[13] val nPUsPhysAcc[90699]:int(64)[13] "no doc" int(64)[13] val nPUsPhysAll[90704]:int(64)[13] "no doc" int(64)[13] val maxTaskPar[90746]:int(64)[13] int(64)[13] unknown callStackSize[90751] size_t[20657] unknown runningTaskCounter[90893] "no doc"(90892 call chpl__processorAtomicType int(64)[13])
  type unmanaged BaseLocale?[415461]
  type BaseLocale?[415458](?)
  type BaseLocale[377827](?)
  function DummyLocale[91441].init[91300](arg _mt[91445]:_MT[238], arg this[91443]:DummyLocale[91441]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460703] "temporary of super field" "temp"
    (460705 'move' super_tmp[460703](460702 '.v' this[91443] c"super"))
    (91308 call(91303 call (partial) init _mt[243] super_tmp[460703]) nilLocale[89942])
    (477319 'end of statement')
    unknown tmp[460708] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492022] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632836] "expr temp" "maybe param" "maybe type" "temp"
      (632839 'move' call_tmp[632836](460710 '.v' this[91443] c"super"))
      (492026 'move' call_type_tmp[492022](460713 'typeof' call_tmp[632836]))
    }
    (460714 'move' tmp[460708] call_type_tmp[492022])
    unknown call_tmp[632841] "maybe param" "maybe type" "temp"
    (632844 'move' call_tmp[632841](460719 'cast' tmp[460708] this[91443]))
    unknown chpl__thisAsParent[460716] "dead at end of block" "insert auto destroy" "temp"
    (541725 'init var' chpl__thisAsParent[460716] call_tmp[632841] tmp[460708])
    (460722 'setcid' chpl__thisAsParent[460716])
    (477320 'end of statement')
    (460724 'setcid' this[91443])
    (514000 return _void[55])
  }
  function DummyLocale[91441].chpl_id[91315](arg _mt[91449]:_MT[238], arg this[91447]:DummyLocale[91441]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[514004] "RVV" "temp"
    unknown call_tmp[632846] "expr temp" "maybe param" "maybe type" "temp"
    (632849 'move' call_tmp[632846](91319 call - 1))
    (514010 'move' ret[514004](514009 'coerce' call_tmp[632846] int(64)[13]))
    (514006 return ret[514004])
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91441].chpl_localeid[91329](arg _mt[91453]:_MT[238], arg this[91451]:DummyLocale[91441]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[514014] "RVV" "temp"
    unknown call_tmp[632851] "expr temp" "maybe param" "maybe type" "temp"
    (632854 'move' call_tmp[632851](91335 call _cast chpl_nodeID_t[89862] 1))
    unknown call_tmp[632856] "expr temp" "maybe param" "maybe type" "temp"
    (632859 'move' call_tmp[632856](91337 call - call_tmp[632851]))
    unknown call_tmp[632861] "expr temp" "maybe param" "maybe type" "temp"
    (632864 'move' call_tmp[632861](91341 call chpl_buildLocaleID call_tmp[632856] c_sublocid_none[89873]))
    (514020 'move' ret[514014](514019 'coerce' call_tmp[632861] chpl_localeID_t[209352]))
    (514016 return ret[514014])
  }
  { scopeless type
    chpl_localeID_t[209352]
  }
  function DummyLocale[91441].chpl_name[91350](arg _mt[91457]:_MT[238], arg this[91455]:DummyLocale[91441]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[514024] "RVV" "temp"
    (514030 'move' ret[514024](514029 'coerce' "dummy-locale" string[26]))
    (514026 return ret[514024])
  }
  { scopeless type
    string[26]
  }
  function DummyLocale[91441].getChildCount[91378](arg _mt[91461]:_MT[238], arg this[91459]:DummyLocale[91441]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[514034] "RVV" "temp"
    (514040 'move' ret[514034](514039 'coerce' 0 int(64)[13]))
    (514036 return ret[514034])
  }
  { scopeless type
    int(64)[13]
  }
  function DummyLocale[91441].getChild[91394](arg _mt[91465]:_MT[238], arg this[91463]:DummyLocale[91441], arg idx[91391]:int(64)[13]) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown ret[514044] "RVV" "temp"
    unknown call_tmp[632866] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (632869 'move' call_tmp[632866](747837 'new' locale[28] this[91463]))
    (514050 'move' ret[514044](514049 'coerce' call_tmp[632866] locale[28]))
    (514046 return ret[514044])
  }
  { scopeless type
    locale[28]
  }
  function DummyLocale[91441].addChild[91414](arg _mt[91469]:_MT[238], arg this[91467]:DummyLocale[91441], arg loc[91411]:locale[28]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (91435 call halt "addChild on DummyLocale")
    (514052 return _void[55])
  }
  type DummyLocale[91441] val super[355688]:BaseLocale[91204] "super class"
  type DummyLocale[377845](?)
  function AbstractLocaleModel[91502].init[91481](arg _mt[91506]:_MT[238], arg this[91504]:AbstractLocaleModel[91502], arg parent_loc[91478]:locale[28]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460727] "temporary of super field" "temp"
    (460729 'move' super_tmp[460727](460726 '.v' this[91504] c"super"))
    (91489 call(91484 call (partial) init _mt[243] super_tmp[460727]) parent_loc[91478])
    (477328 'end of statement')
    unknown tmp[460732] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492028] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632873] "expr temp" "maybe param" "maybe type" "temp"
      (632876 'move' call_tmp[632873](460734 '.v' this[91504] c"super"))
      (492032 'move' call_type_tmp[492028](460737 'typeof' call_tmp[632873]))
    }
    (460738 'move' tmp[460732] call_type_tmp[492028])
    unknown call_tmp[632878] "maybe param" "maybe type" "temp"
    (632881 'move' call_tmp[632878](460743 'cast' tmp[460732] this[91504]))
    unknown chpl__thisAsParent[460740] "dead at end of block" "insert auto destroy" "temp"
    (541727 'init var' chpl__thisAsParent[460740] call_tmp[632878] tmp[460732])
    (460746 'setcid' chpl__thisAsParent[460740])
    (477329 'end of statement')
    (460748 'setcid' this[91504])
    (514054 return _void[55])
  }
  function AbstractLocaleModel[91502].init[91496](arg _mt[91510]:_MT[238], arg this[91508]:AbstractLocaleModel[91502]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460770] "temporary of super field" "temp"
    (460778 'move' super_tmp[460770](460771 '.v' this[91508] c"super"))
    (460774 call init _mt[243] super_tmp[460770])
    (477331 'end of statement')
    unknown tmp[460754] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492034] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632883] "expr temp" "maybe param" "maybe type" "temp"
      (632886 'move' call_tmp[632883](460756 '.v' this[91508] c"super"))
      (492038 'move' call_type_tmp[492034](460759 'typeof' call_tmp[632883]))
    }
    (460760 'move' tmp[460754] call_type_tmp[492034])
    unknown call_tmp[632888] "maybe param" "maybe type" "temp"
    (632891 'move' call_tmp[632888](460765 'cast' tmp[460754] this[91508]))
    unknown chpl__thisAsParent[460762] "dead at end of block" "insert auto destroy" "temp"
    (541729 'init var' chpl__thisAsParent[460762] call_tmp[632888] tmp[460754])
    (460768 'setcid' chpl__thisAsParent[460762])
    (477332 'end of statement')
    (460781 'setcid' this[91508])
    (514056 return _void[55])
  }
  type AbstractLocaleModel[91502] val super[355680]:BaseLocale[91204] "super class"
  unknown rootLocale[91514] "dead at end of block" "insert auto destroy" "locale private" "no doc"
  unknown replicateRootLocale[91519] "config" "no doc" "param"
  unknown origRootLocale[91524] "dead at end of block" "insert auto destroy" "no doc"
  function AbstractRootLocale[92012].init[91533](arg _mt[92016]:_MT[238], arg this[92014]:AbstractRootLocale[92012]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460803] "temporary of super field" "temp"
    (460811 'move' super_tmp[460803](460804 '.v' this[92014] c"super"))
    (460807 call init _mt[243] super_tmp[460803])
    (477336 'end of statement')
    unknown tmp[460787] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492040] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632893] "expr temp" "maybe param" "maybe type" "temp"
      (632896 'move' call_tmp[632893](460789 '.v' this[92014] c"super"))
      (492044 'move' call_type_tmp[492040](460792 'typeof' call_tmp[632893]))
    }
    (460793 'move' tmp[460787] call_type_tmp[492040])
    unknown call_tmp[632898] "maybe param" "maybe type" "temp"
    (632901 'move' call_tmp[632898](460798 'cast' tmp[460787] this[92014]))
    unknown chpl__thisAsParent[460795] "dead at end of block" "insert auto destroy" "temp"
    (541737 'init var' chpl__thisAsParent[460795] call_tmp[632898] tmp[460787])
    (460801 'setcid' chpl__thisAsParent[460795])
    (477337 'end of statement')
    (460814 'setcid' this[92014])
    (514058 return _void[55])
  }
  function AbstractRootLocale[92012].init[91544](arg _mt[92020]:_MT[238], arg this[92018]:AbstractRootLocale[92012], arg parent_loc[91541]:locale[28]) : void[4] "inline" "method" "primary method" "no return value for void"
  {
    unknown super_tmp[460817] "temporary of super field" "temp"
    (460819 'move' super_tmp[460817](460816 '.v' this[92018] c"super"))
    (91552 call(91547 call (partial) init _mt[243] super_tmp[460817]) parent_loc[91541])
    (477339 'end of statement')
    unknown tmp[460822] "temp" "type variable"
    { scopeless type
      unknown call_type_tmp[492046] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[632905] "expr temp" "maybe param" "maybe type" "temp"
      (632908 'move' call_tmp[632905](460824 '.v' this[92018] c"super"))
      (492050 'move' call_type_tmp[492046](460827 'typeof' call_tmp[632905]))
    }
    (460828 'move' tmp[460822] call_type_tmp[492046])
    unknown call_tmp[632910] "maybe param" "maybe type" "temp"
    (632913 'move' call_tmp[632910](460833 'cast' tmp[460822] this[92018]))
    unknown chpl__thisAsParent[460830] "dead at end of block" "insert auto destroy" "temp"
    (541739 'init var' chpl__thisAsParent[460830] call_tmp[632910] tmp[460822])
    (460836 'setcid' chpl__thisAsParent[460830])
    (477340 'end of statement')
    (460838 'setcid' this[92018])
    (514060 return _void[55])
  }
  function AbstractRootLocale[92012].getDefaultLocaleSpace[91559](arg _mt[92024]:_MT[238], arg this[92022]:AbstractRootLocale[92012]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[514064] "RVV" "temp"
    (91566 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477342 'end of statement')
    (514069 'move' ret[514064](514068 'addr of' chpl_emptyLocaleSpace[88784]))
    (514066 return ret[514064])
    (358483 'referenced modules list' HaltWrappers[210016])
  }
  function AbstractRootLocale[92012].getDefaultLocaleArray[91576](arg _mt[92028]:_MT[238], arg this[92026]:AbstractRootLocale[92012]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[514073] "RVV" "temp"
    (91583 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (477344 'end of statement')
    (514078 'move' ret[514073](514077 'addr of' chpl_emptyLocales[88795]))
    (514075 return ret[514073])
    (358489 'referenced modules list' HaltWrappers[210016])
  }
  function AbstractRootLocale[92012].localeIDtoLocale[91597](arg _mt[92032]:_MT[238], arg this[92030]:AbstractRootLocale[92012], arg id[91594]:chpl_localeID_t[209352]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown ret[514082] "RVV" "temp"
    (91605 call pureVirtualMethodHalt module=[255] HaltWrappers[210016])
    (514084 return ret[514082])
    (358495 'referenced modules list' HaltWrappers[210016])
  }
  { scopeless type
    locale[28]
  }
  function AbstractRootLocale[92012].chpl_initOnLocales[91613](arg _mt[92036]:_MT[238], arg this[92034]:AbstractRootLocale[92012]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[514088] "RVV" "temp"
    unknown call_tmp[632915] "expr temp" "maybe param" "maybe type" "temp"
    (632918 'move' call_tmp[632915](91617 call > numLocales[209892] 1))
    unknown call_tmp[632920] "expr temp" "maybe param" "maybe type" "temp"
    (632923 'move' call_tmp[632920](91640 call _cond_test call_tmp[632915]))
    if call_tmp[632920]
    {
      (91638 call halt "The locales must be initialized in parallel")
    }
    {
      unknown _indexOfInterest[91679] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[91680] "expr temp" "temp"
      unknown call_tmp[632927] "expr temp" "maybe param" "maybe type" "temp"
      (632930 'move' call_tmp[632927](91648 call _instance _mt[243] origRootLocale[91524]))
      unknown call_tmp[632932] "expr temp" "maybe param" "maybe type" "temp"
      (632935 'move' call_tmp[632932](91654 call _cast borrowed RootLocale?[415467] call_tmp[632927]))
      unknown call_tmp[632937] "expr temp" "maybe param" "maybe type" "temp"
      (632940 'move' call_tmp[632937](91656 call postfix! call_tmp[632932]))
      unknown call_tmp[632944] "expr temp" "maybe param" "maybe type" "temp"
      (632947 'move' call_tmp[632944](91664 call(91660 call (partial) getDefaultLocaleSpace _mt[243] call_tmp[632937])))
      (91689 'move' _iterator[91680](91687 call _getIterator call_tmp[632944]))
      Defer
      {
        {
          (91706 call _freeIterator _iterator[91680])
        }
      }
      { scopeless type
        (91695 'move' _indexOfInterest[91679](91692 call iteratorIndex _iterator[91680]))
      }
      ForLoop[91681]
      {
        unknown locIdx[91699] "index var" "insert auto destroy"
        (477349 'end of statement')
        (91701 'move' locIdx[91699] _indexOfInterest[91679])
        (477350 'end of statement' locIdx[91699])
        {
          unknown yret[514092] "YVV" "temp"
          (514095 'move' yret[514092](514094 'deref' locIdx[91699]))
          (514097 yield yret[514092])
          (477352 'end of statement' locIdx[91699])
          (91671 call = rootLocale[91514] origRootLocale[91524])
          (477354 'end of statement')
          (91676 call = rootLocaleInitialized[310] 1)
        }
        label _continueLabel[91684]
        _indexOfInterest[91679]
        _iterator[91680]
      }
      label _breakLabel[91685]
    }
    (514090 return ret[514088])
  }
  function AbstractRootLocale[92012].chpl_initOnLocales[91721](arg _mt[92040]:_MT[238], arg this[92038]:AbstractRootLocale[92012], param arg tag[91718]:iterKind[453]) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[514101] "RVV" "temp"
    unknown b[91731] "dead at end of block" "insert auto destroy"
    (541741 'default init var' b[91731] localesBarrier[92486])
    (91734 'end of statement')
    unknown flags[91753] "dead at end of block" "insert auto destroy"
    unknown call_tmp[632949] "expr temp" "maybe param" "maybe type" "temp"
    (632952 'move' call_tmp[632949](91737 call chpl_build_low_bounded_range 1))
    unknown call_tmp[632954] "expr temp" "maybe param" "maybe type" "temp"
    (632957 'move' call_tmp[632954](91741 call - numLocales[209892] 1))
    unknown call_tmp[632959] "expr temp" "maybe param" "maybe type" "temp"
    (632962 'move' call_tmp[632959](91743 call # call_tmp[632949] call_tmp[632954]))
    unknown call_tmp[632964] "expr temp" "maybe param" "maybe type" "temp"
    (632967 'move' call_tmp[632964](91749 call chpl__ensureDomainExpr call_tmp[632959]))
    unknown call_tmp[632969] "expr temp" "maybe param" "maybe type" "temp"
    (632972 'move' call_tmp[632969](91751 call chpl__buildArrayRuntimeType call_tmp[632964] unmanaged localesSignal?[415473]))
    (541743 'default init var' flags[91753] call_tmp[632969])
    (91756 'end of statement')
    {
      unknown tmpIter[91818] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[632974] "expr temp" "maybe param" "maybe type" "temp"
      (632977 'move' call_tmp[632974](91759 call chpl_build_low_bounded_range 0))
      (91821 'move' tmpIter[91818](91762 call # call_tmp[632974] numLocales[209892]))
      unknown isRngDomArr[91989] "maybe param" "temp"
      unknown tmp[422381] "maybe param" "temp"
      (422392 'move' tmp[422381](91991 call isBoundedRange tmpIter[91818]))
      unknown call_tmp[632979] "expr temp" "maybe param" "maybe type" "temp"
      (632982 'move' call_tmp[632979](422394 call _cond_invalid tmp[422381]))
      if call_tmp[632979]
      {
        (422397 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[561101] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[561102] "maybe param" "temp"
      unknown call_tmp[632984] "expr temp" "maybe param" "maybe type" "temp"
      (632987 'move' call_tmp[632984](422382 call isTrue tmp[422381]))
      (561107 'move' tmp[561102](561105 call _cond_test call_tmp[632984]))
      if tmp[561102]
      {
        (561112 'move' tmp[561101](561109 '_paramFoldLogical' tmp[561102] 1))
      }
      {
        unknown tmp[422402] "maybe param" "temp"
        (422413 'move' tmp[422402](91994 call isDomain tmpIter[91818]))
        unknown call_tmp[632989] "expr temp" "maybe param" "maybe type" "temp"
        (632992 'move' call_tmp[632989](422415 call _cond_invalid tmp[422402]))
        if call_tmp[632989]
        {
          (422418 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[561074] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[561075] "maybe param" "temp"
        unknown call_tmp[632994] "expr temp" "maybe param" "maybe type" "temp"
        (632997 'move' call_tmp[632994](422403 call isTrue tmp[422402]))
        (561080 'move' tmp[561075](561078 call _cond_test call_tmp[632994]))
        if tmp[561075]
        {
          (561085 'move' tmp[561074](561082 '_paramFoldLogical' tmp[561075] 1))
        }
        {
          unknown tmp[561087] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[632999] "expr temp" "maybe param" "maybe type" "temp"
          (633002 'move' call_tmp[632999](91997 call isArray tmpIter[91818]))
          (561089 'move' tmp[561087](422407 call isTrue call_tmp[632999]))
          (561094 'move' tmp[561074](561091 '_paramFoldLogical' tmp[561075] tmp[561087]))
        }
        unknown tmp[561114] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561116 'move' tmp[561114](422386 call isTrue tmp[561074]))
        (561121 'move' tmp[561101](561118 '_paramFoldLogical' tmp[561102] tmp[561114]))
      }
      (92004 'move' isRngDomArr[91989] tmp[561101])
      if isRngDomArr[91989]
      {
        const _coforallCount[91861] "const" "end count" "temp"
        (91926 'move' _coforallCount[91861](91923 call _endCountAlloc 0))
        unknown numTasks[91862] "temp"
        (91910 'move' numTasks[91862](91906 call size _mt[243] tmpIter[91818]))
        (91901 call _upEndCount _coforallCount[91861] 0 numTasks[91862])
        (477357 'end of statement')
        unknown _indexOfInterest[91868] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91869] "expr temp" "temp"
        (91878 'move' _iterator[91869](91876 call _getIterator tmpIter[91818]))
        Defer
        {
          {
            (91894 call _freeIterator _iterator[91869])
          }
        }
        { scopeless type
          (91883 'move' _indexOfInterest[91868](91880 call iteratorIndex _iterator[91869]))
        }
        ForLoop[91870]
        {
          unknown locIdx[91887] "coforall index var" "index var" "insert auto destroy"
          (477359 'end of statement')
          (91889 'move' locIdx[91887] _indexOfInterest[91868])
          (477360 'end of statement' locIdx[91887])
          const tmp[91824] "const" "temp"
          unknown call_tmp[633006] "expr temp" "maybe param" "maybe type" "temp"
          (633009 'move' call_tmp[633006](91833 call _cast chpl_nodeID_t[89862] locIdx[91887]))
          unknown call_tmp[633011] "expr temp" "maybe param" "maybe type" "temp"
          (633014 'move' call_tmp[633011](91831 call chpl_buildLocaleID call_tmp[633006] c_sublocid_any[89878]))
          unknown call_tmp[633016] "expr temp" "maybe param" "maybe type" "temp"
          (633019 'move' call_tmp[633016](91829 'chpl_on_locale_num' call_tmp[633011]))
          (91826 'move' tmp[91824](91828 'deref' call_tmp[633016]))
          {
            {
              (91843 call chpl_defaultDistInitPrivate)
              (477362 'end of statement')
              unknown yret[514105] "YVV" "temp"
              (514108 'move' yret[514105](514107 'deref' locIdx[91887]))
              (514110 yield yret[514105])
              (477363 'end of statement' locIdx[91887])
              (91850 call(91847 call (partial) wait _mt[243] b[91731]) locIdx[91887] flags[91753])
              (477365 'end of statement' b[91731] locIdx[91887] flags[91753])
              (91854 call chpl_rootLocaleInitPrivate locIdx[91887])
              (477369 'end of statement' locIdx[91887])
              (91857 call chpl_defaultLocaleInitPrivate)
              (477371 'end of statement')
              (91859 call warmupRuntime)
            }
            (91863 call _downEndCount _coforallCount[91861] nil[44])
            (91838 'coforall on block' 0 tmp[91824])
          }
          label _continueLabel[91873]
          _indexOfInterest[91868]
          _iterator[91869]
        }
        label _breakLabel[91874]
        Defer
        {
          {
            (91913 call _endCountFree _coforallCount[91861])
          }
        }
        (91918 call _waitEndCount _coforallCount[91861] 0 numTasks[91862])
      }
      {
        const _coforallCount[91930] "const" "end count" "temp"
        (91986 'move' _coforallCount[91930](91983 call _endCountAlloc 0))
        unknown _indexOfInterest[91937] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[91938] "expr temp" "temp"
        (91947 'move' _iterator[91938](91945 call _getIterator tmpIter[91818]))
        Defer
        {
          {
            (91963 call _freeIterator _iterator[91938])
          }
        }
        { scopeless type
          (91952 'move' _indexOfInterest[91937](91949 call iteratorIndex _iterator[91938]))
        }
        ForLoop[91939]
        {
          unknown locIdx[91956] "coforall index var" "index var" "insert auto destroy"
          (477377 'end of statement')
          (91958 'move' locIdx[91956] _indexOfInterest[91937])
          (477378 'end of statement' locIdx[91956])
          (91970 call _upEndCount _coforallCount[91930] 0)
          (477380 'end of statement')
          const tmp[91809] "const" "temp"
          unknown call_tmp[633023] "expr temp" "maybe param" "maybe type" "temp"
          (633026 'move' call_tmp[633023](91769 call _cast chpl_nodeID_t[89862] locIdx[91956]))
          unknown call_tmp[633028] "expr temp" "maybe param" "maybe type" "temp"
          (633031 'move' call_tmp[633028](91773 call chpl_buildLocaleID call_tmp[633023] c_sublocid_any[89878]))
          unknown call_tmp[633033] "expr temp" "maybe param" "maybe type" "temp"
          (633036 'move' call_tmp[633033](91774 'chpl_on_locale_num' call_tmp[633028]))
          (91811 'move' tmp[91809](91807 'deref' call_tmp[633033]))
          {
            {
              (91777 call chpl_defaultDistInitPrivate)
              (477381 'end of statement')
              unknown yret[514112] "YVV" "temp"
              (514115 'move' yret[514112](514114 'deref' locIdx[91956]))
              (514117 yield yret[514112])
              (477382 'end of statement' locIdx[91956])
              (91792 call(91786 call (partial) wait _mt[243] b[91731]) locIdx[91956] flags[91753])
              (477384 'end of statement' b[91731] locIdx[91956] flags[91753])
              (91797 call chpl_rootLocaleInitPrivate locIdx[91956])
              (477388 'end of statement' locIdx[91956])
              (91801 call chpl_defaultLocaleInitPrivate)
              (477390 'end of statement')
              (91805 call warmupRuntime)
            }
            (91932 call _downEndCount _coforallCount[91930] nil[44])
            (91814 'coforall on block' 0 tmp[91809])
          }
          label _continueLabel[91942]
          _indexOfInterest[91937]
          _iterator[91938]
        }
        label _breakLabel[91943]
        Defer
        {
          {
            (91974 call _endCountFree _coforallCount[91930])
          }
        }
        (91979 call _waitEndCount _coforallCount[91930] 0)
      }
    }
    (514103 return ret[514101])
  }
  where {
    (91728 call == tag[91718] standalone[451])
  }
  type AbstractRootLocale[92012] val super[355684]:BaseLocale[91204] "super class"
  type borrowed AbstractRootLocale?[415479]
  type AbstractRootLocale?[415476](?)
  type AbstractRootLocale[377994](?)
  function warmupRuntime[92045]() : _unknown[51] "private" "no return value for void"
  {
    function chpl_task_getFixedNumThreads[92049]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514121] "RVV" "temp"
      (514123 return ret[514121])
    }
    { scopeless type
      (92054 call uint(64)[115] 32)
    }
    {
      unknown tmpIter[92091] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[633040] "expr temp" "maybe param" "maybe type" "temp"
      (633043 'move' call_tmp[633040](92061 call chpl_build_low_bounded_range 0))
      unknown call_tmp[633045] "expr temp" "maybe param" "maybe type" "temp"
      (633048 'move' call_tmp[633045](92065 call chpl_task_getFixedNumThreads))
      (92094 'move' tmpIter[92091](92066 call # call_tmp[633040] call_tmp[633045]))
      unknown isRngDomArr[92248] "maybe param" "temp"
      unknown tmp[422423] "maybe param" "temp"
      (422434 'move' tmp[422423](92250 call isBoundedRange tmpIter[92091]))
      unknown call_tmp[633050] "expr temp" "maybe param" "maybe type" "temp"
      (633053 'move' call_tmp[633050](422436 call _cond_invalid tmp[422423]))
      if call_tmp[633050]
      {
        (422439 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[561155] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[561156] "maybe param" "temp"
      unknown call_tmp[633055] "expr temp" "maybe param" "maybe type" "temp"
      (633058 'move' call_tmp[633055](422424 call isTrue tmp[422423]))
      (561161 'move' tmp[561156](561159 call _cond_test call_tmp[633055]))
      if tmp[561156]
      {
        (561166 'move' tmp[561155](561163 '_paramFoldLogical' tmp[561156] 1))
      }
      {
        unknown tmp[422444] "maybe param" "temp"
        (422455 'move' tmp[422444](92253 call isDomain tmpIter[92091]))
        unknown call_tmp[633060] "expr temp" "maybe param" "maybe type" "temp"
        (633063 'move' call_tmp[633060](422457 call _cond_invalid tmp[422444]))
        if call_tmp[633060]
        {
          (422460 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[561128] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[561129] "maybe param" "temp"
        unknown call_tmp[633065] "expr temp" "maybe param" "maybe type" "temp"
        (633068 'move' call_tmp[633065](422445 call isTrue tmp[422444]))
        (561134 'move' tmp[561129](561132 call _cond_test call_tmp[633065]))
        if tmp[561129]
        {
          (561139 'move' tmp[561128](561136 '_paramFoldLogical' tmp[561129] 1))
        }
        {
          unknown tmp[561141] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[633070] "expr temp" "maybe param" "maybe type" "temp"
          (633073 'move' call_tmp[633070](92256 call isArray tmpIter[92091]))
          (561143 'move' tmp[561141](422449 call isTrue call_tmp[633070]))
          (561148 'move' tmp[561128](561145 '_paramFoldLogical' tmp[561129] tmp[561141]))
        }
        unknown tmp[561168] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (561170 'move' tmp[561168](422428 call isTrue tmp[561128]))
        (561175 'move' tmp[561155](561172 '_paramFoldLogical' tmp[561156] tmp[561168]))
      }
      (92263 'move' isRngDomArr[92248] tmp[561155])
      if isRngDomArr[92248]
      {
        const _coforallCount[92115] "const" "end count" "temp"
        (92184 'move' _coforallCount[92115](92181 call _endCountAlloc 1))
        unknown numTasks[92116] "temp"
        (92168 'move' numTasks[92116](92164 call size _mt[243] tmpIter[92091]))
        (92159 call _upEndCount _coforallCount[92115] 1 numTasks[92116])
        (477396 'end of statement')
        (92156 call chpl_resetTaskSpawn numTasks[92116])
        (477397 'end of statement')
        unknown _indexOfInterest[92123] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92124] "expr temp" "temp"
        (92133 'move' _iterator[92124](92131 call _getIterator tmpIter[92091]))
        Defer
        {
          {
            (92149 call _freeIterator _iterator[92124])
          }
        }
        { scopeless type
          (92138 'move' _indexOfInterest[92123](92135 call iteratorIndex _iterator[92124]))
        }
        ForLoop[92125]
        {
          unknown i[92142] "coforall index var" "index var" "insert auto destroy"
          (477399 'end of statement')
          (92144 'move' i[92142] _indexOfInterest[92123])
          (477400 'end of statement' i[92142])
          {
            {
              unknown call_tmp[633077] "maybe param" "maybe type" "temp"
              (633080 'move' call_tmp[633077](92100 call c_malloc int(64)[13] 1))
              unknown p[92098] "dead at end of block" "insert auto destroy"
              (541745 'init var' p[92098] call_tmp[633077])
              (92104 'end of statement')
              unknown call_tmp[633082] "expr temp" "maybe param" "maybe type" "temp"
              (633085 'move' call_tmp[633082](92108 call p[92098] 0))
              (92106 call = call_tmp[633082] i[92142])
              (477402 'end of statement' p[92098] i[92142])
              (92112 call c_free p[92098])
              (477405 'end of statement' p[92098])
            }
            (92118 call _downEndCount _coforallCount[92115] nil[44])
            (92117 'coforall loop')
          }
          label _continueLabel[92128]
          _indexOfInterest[92123]
          _iterator[92124]
        }
        label _breakLabel[92129]
        Defer
        {
          {
            (92171 call _endCountFree _coforallCount[92115])
          }
        }
        (92176 call _waitEndCount _coforallCount[92115] 1 numTasks[92116])
      }
      {
        const _coforallCount[92188] "const" "end count" "temp"
        (92245 'move' _coforallCount[92188](92242 call _endCountAlloc 1))
        unknown _indexOfInterest[92196] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92197] "expr temp" "temp"
        (92206 'move' _iterator[92197](92204 call _getIterator tmpIter[92091]))
        Defer
        {
          {
            (92222 call _freeIterator _iterator[92197])
          }
        }
        { scopeless type
          (92211 'move' _indexOfInterest[92196](92208 call iteratorIndex _iterator[92197]))
        }
        ForLoop[92198]
        {
          unknown i[92215] "coforall index var" "index var" "insert auto destroy"
          (477411 'end of statement')
          (92217 'move' i[92215] _indexOfInterest[92196])
          (477412 'end of statement' i[92215])
          (92229 call _upEndCount _coforallCount[92188] 1)
          (477414 'end of statement')
          {
            {
              unknown call_tmp[633087] "maybe param" "maybe type" "temp"
              (633090 'move' call_tmp[633087](92072 call c_malloc int(64)[13] 1))
              unknown p[92073] "dead at end of block" "insert auto destroy"
              (541747 'init var' p[92073] call_tmp[633087])
              (92076 'end of statement')
              unknown call_tmp[633092] "expr temp" "maybe param" "maybe type" "temp"
              (633095 'move' call_tmp[633092](92081 call p[92073] 0))
              (92083 call = call_tmp[633092] i[92215])
              (477415 'end of statement' p[92073] i[92215])
              (92089 call c_free p[92073])
              (477418 'end of statement' p[92073])
            }
            (92191 call _downEndCount _coforallCount[92188] nil[44])
            (92190 'coforall loop')
          }
          label _continueLabel[92201]
          _indexOfInterest[92196]
          _iterator[92197]
        }
        label _breakLabel[92202]
        Defer
        {
          {
            (92233 call _endCountFree _coforallCount[92188])
          }
        }
        (92238 call _waitEndCount _coforallCount[92188] 1)
      }
    }
    (514125 return _void[55])
  }
  type localesSignal[92278] val super[355690]:object[22] "super class" unknown s[92273](92271 call chpl__atomicType bool[10])
  type unmanaged localesSignal?[415473]
  type localesSignal?[415470](?)
  type localesSignal[377924](?)
  function localesBarrier[92486].wait[92286](arg _mt[92490]:_MT[238], arg this[92488]:localesBarrier[92486], arg locIdx[92284]:_any[178](?), arg flags[92288]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[633097] "expr temp" "maybe param" "maybe type" "temp"
    (633100 'move' call_tmp[633097](92292 call == locIdx[92284] 0))
    unknown call_tmp[633102] "expr temp" "maybe param" "maybe type" "temp"
    (633105 'move' call_tmp[633102](92478 call _cond_test call_tmp[633097]))
    if call_tmp[633102]
    {
      {
        unknown tmp[92370] "temp"
        (92388 'move' tmp[92370](92386 call _cond_test 1))
        WhileDo[92375]
        {
          {
            (92297 call atomicFence)
            (477423 'end of statement')
            unknown count[92301] "dead at end of block" "insert auto destroy"
            (541749 'init var' count[92301] 0)
            (92304 'end of statement')
            {
              unknown _indexOfInterest[92318] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[92319] "expr temp" "temp"
              (92328 'move' _iterator[92319](92326 call _getIterator flags[92288]))
              Defer
              {
                {
                  (92344 call _freeIterator _iterator[92319])
                }
              }
              { scopeless type
                (92333 'move' _indexOfInterest[92318](92330 call iteratorIndex _iterator[92319]))
              }
              ForLoop[92320]
              {
                unknown f[92337] "index var" "insert auto destroy"
                (477425 'end of statement')
                (92339 'move' f[92337] _indexOfInterest[92318])
                (477426 'end of statement' f[92337])
                unknown call_tmp[633107] "expr temp" "maybe param" "maybe type" "temp"
                (633110 'move' call_tmp[633107](92313 call _cond_test f[92337]))
                if call_tmp[633107]
                {
                  (92310 call += count[92301] 1)
                  (477428 'end of statement' count[92301])
                }
                label _continueLabel[92323]
                _indexOfInterest[92318]
                _iterator[92319]
              }
              label _breakLabel[92324]
            }
            unknown call_tmp[633112] "expr temp" "maybe param" "maybe type" "temp"
            (633115 'move' call_tmp[633112](92354 call - numLocales[209892] 1))
            unknown call_tmp[633117] "expr temp" "maybe param" "maybe type" "temp"
            (633120 'move' call_tmp[633117](92356 call == count[92301] call_tmp[633112]))
            unknown call_tmp[633122] "expr temp" "maybe param" "maybe type" "temp"
            (633125 'move' call_tmp[633122](92361 call _cond_test call_tmp[633117]))
            if call_tmp[633122]
            {
              break _breakLabel[92374] _breakLabel[92374]
            }
            (92368 call chpl_task_yield)
          }
          label _continueLabel[92373]
          (92381 'move' tmp[92370](92379 call _cond_test 1))
          tmp[92370]
        }
        label _breakLabel[92374]
      }
      {
        unknown _indexOfInterest[92410] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[92411] "expr temp" "temp"
        (92420 'move' _iterator[92411](92418 call _getIterator flags[92288]))
        Defer
        {
          {
            (92436 call _freeIterator _iterator[92411])
          }
        }
        { scopeless type
          (92425 'move' _indexOfInterest[92410](92422 call iteratorIndex _iterator[92411]))
        }
        ForLoop[92412]
        {
          unknown f[92429] "index var" "insert auto destroy"
          (477432 'end of statement')
          (92431 'move' f[92429] _indexOfInterest[92410])
          (477433 'end of statement' f[92429])
          unknown call_tmp[633127] "expr temp" "maybe param" "maybe type" "temp"
          (633130 'move' call_tmp[633127](92395 call postfix! f[92429]))
          unknown call_tmp[633134] "expr temp" "maybe param" "maybe type" "temp"
          (633137 'move' call_tmp[633134](92399 call s _mt[243] call_tmp[633127]))
          (92408 call(92404 call (partial) testAndSet _mt[243] call_tmp[633134]))
          (477435 'end of statement' f[92429])
          label _continueLabel[92415]
          _indexOfInterest[92410]
          _iterator[92411]
        }
        label _breakLabel[92416]
      }
    }
    {
      unknown call_tmp[633141] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (633144 'move' call_tmp[633141](747838 'new' localesSignal[377924](?)(_chpl_manager = unmanaged[220](?))))
      unknown f[92449] "dead at end of block" "insert auto destroy"
      (541751 'init var' f[92449] call_tmp[633141])
      (92452 'end of statement')
      unknown call_tmp[633146] "expr temp" "maybe param" "maybe type" "temp"
      (633149 'move' call_tmp[633146](92457 call flags[92288] locIdx[92284]))
      (92459 call = call_tmp[633146] f[92449])
      (477437 'end of statement' f[92449])
      unknown call_tmp[633153] "expr temp" "maybe param" "maybe type" "temp"
      (633156 'move' call_tmp[633153](92463 call s _mt[243] f[92449]))
      (92471 call(92466 call (partial) waitFor _mt[243] call_tmp[633153]) 1)
      (477439 'end of statement' f[92449])
      (92475 call chpl__delete f[92449])
      (477441 'end of statement' f[92449])
    }
    (514127 return _void[55])
  }
  type localesBarrier[92486]
  function chpl_init_rootLocale[92495]() : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[422465] "maybe param" "temp"
    (422476 'move' tmp[422465](92499 call > numLocales[209892] 1))
    unknown call_tmp[633160] "expr temp" "maybe param" "maybe type" "temp"
    (633163 'move' call_tmp[633160](422478 call _cond_invalid tmp[422465]))
    if call_tmp[633160]
    {
      (422481 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[561182] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561183] "maybe param" "temp"
    unknown call_tmp[633165] "expr temp" "maybe param" "maybe type" "temp"
    (633168 'move' call_tmp[633165](422466 call isTrue tmp[422465]))
    (561188 'move' tmp[561183](561186 call _cond_test call_tmp[633165]))
    if tmp[561183]
    {
      unknown tmp[561190] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (561192 'move' tmp[561190](422469 call isTrue 0))
      (561197 'move' tmp[561182](561194 '_paramFoldLogical' tmp[561183] tmp[561190]))
    }
    {
      (561202 'move' tmp[561182](561199 '_paramFoldLogical' tmp[561183] 0))
    }
    unknown call_tmp[633170] "expr temp" "maybe param" "maybe type" "temp"
    (633173 'move' call_tmp[633170](92525 call _cond_test tmp[561182]))
    if call_tmp[633170]
    {
      (92523 call halt "Cannot run a program compiled with --local in more than 1 locale")
    }
    unknown call_tmp[633177] "expr temp" "maybe param" "maybe type" "temp"
    (633180 'move' call_tmp[633177](92532 call _instance _mt[243] origRootLocale[91524]))
    unknown call_tmp[633182] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
    (633185 'move' call_tmp[633182](747839 'new' RootLocale[377912](?)(_chpl_manager = unmanaged[220](?))))
    (92541 call = call_tmp[633177] call_tmp[633182])
    (477445 'end of statement')
    unknown call_tmp[633189] "expr temp" "maybe param" "maybe type" "temp"
    (633192 'move' call_tmp[633189](92545 call _instance _mt[243] origRootLocale[91524]))
    unknown call_tmp[633194] "expr temp" "maybe param" "maybe type" "temp"
    (633197 'move' call_tmp[633194](92551 call _cast borrowed RootLocale?[415467] call_tmp[633189]))
    unknown call_tmp[633199] "expr temp" "maybe param" "maybe type" "temp"
    (633202 'move' call_tmp[633199](92553 call postfix! call_tmp[633194]))
    (92561 call(92557 call (partial) setup _mt[243] call_tmp[633199]))
    (514129 return _void[55])
  }
  function chpl_defaultLocaleInitPrivate[92567]() : _unknown[51] "inline" "no doc" "no return value for void"
  {
    const rl[92587] "dead at end of block" "const" "no auto destroy" "no copy" "ref var"
    unknown call_tmp[633208] "expr temp" "maybe param" "maybe type" "temp"
    (633211 'move' call_tmp[633208](92570 call _instance _mt[243] rootLocale[91514]))
    unknown call_tmp[633213] "expr temp" "maybe param" "maybe type" "temp"
    (633216 'move' call_tmp[633213](92576 call _cast borrowed RootLocale?[415467] call_tmp[633208]))
    unknown call_tmp[633218] "expr temp" "maybe param" "maybe type" "temp"
    (633221 'move' call_tmp[633218](92578 call postfix! call_tmp[633213]))
    unknown call_tmp[633225] "expr temp" "maybe param" "maybe type" "temp"
    (633228 'move' call_tmp[633225](92586 call(92582 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633218])))
    (541754 'move' rl[92587](541753 'addr of' call_tmp[633225]))
    (92590 'end of statement')
    unknown call_tmp[633232] "expr temp" "maybe param" "maybe type" "temp"
    (633235 'move' call_tmp[633232](92593 call _instance _mt[243] defaultLocale[89956]))
    unknown call_tmp[633237] "expr temp" "maybe param" "maybe type" "temp"
    (633240 'move' call_tmp[633237](92599 call rl[92587] 0))
    unknown call_tmp[633244] "expr temp" "maybe param" "maybe type" "temp"
    (633247 'move' call_tmp[633244](92600 call _instance _mt[243] call_tmp[633237]))
    (92603 call = call_tmp[633232] call_tmp[633244])
    (477447 'end of statement' rl[92587])
    (514131 return _void[55])
  }
  function chpl_rootLocaleInitPrivate[92612](arg locIdx[92610]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    (92616 call = rootLocale[91514] origRootLocale[91524])
    (477449 'end of statement')
    unknown tmp[422486] "maybe param" "temp"
    (422497 'move' tmp[422486] replicateRootLocale[91519])
    unknown call_tmp[633249] "expr temp" "maybe param" "maybe type" "temp"
    (633252 'move' call_tmp[633249](422499 call _cond_invalid tmp[422486]))
    if call_tmp[633249]
    {
      (422502 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[561209] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[561210] "maybe param" "temp"
    unknown call_tmp[633254] "expr temp" "maybe param" "maybe type" "temp"
    (633257 'move' call_tmp[633254](422487 call isTrue tmp[422486]))
    (561215 'move' tmp[561210](561213 call _cond_test call_tmp[633254]))
    if tmp[561210]
    {
      unknown tmp[561217] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[633259] "expr temp" "maybe param" "maybe type" "temp"
      (633262 'move' call_tmp[633259](92623 call != locIdx[92610] 0))
      (561219 'move' tmp[561217](422490 call isTrue call_tmp[633259]))
      (561224 'move' tmp[561209](561221 '_paramFoldLogical' tmp[561210] tmp[561217]))
    }
    {
      (561229 'move' tmp[561209](561226 '_paramFoldLogical' tmp[561210] 0))
    }
    unknown call_tmp[633264] "expr temp" "maybe param" "maybe type" "temp"
    (633267 'move' call_tmp[633264](92730 call _cond_test tmp[561209]))
    if call_tmp[633264]
    {
      unknown call_tmp[633269] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (633272 'move' call_tmp[633269](747840 'new' RootLocale[377912](?)(_chpl_manager = unmanaged[220](?))))
      unknown newRootLocale[92633] "dead at end of block" "insert auto destroy"
      (541756 'init var' newRootLocale[92633] call_tmp[633269])
      (92636 'end of statement')
      const origLocales[92654] "dead at end of block" "const" "no auto destroy" "no copy" "ref var"
      unknown call_tmp[633276] "expr temp" "maybe param" "maybe type" "temp"
      (633279 'move' call_tmp[633276](92639 call _instance _mt[243] origRootLocale[91524]))
      unknown call_tmp[633281] "expr temp" "maybe param" "maybe type" "temp"
      (633284 'move' call_tmp[633281](92645 call _cast borrowed RootLocale?[415467] call_tmp[633276]))
      unknown call_tmp[633286] "expr temp" "maybe param" "maybe type" "temp"
      (633289 'move' call_tmp[633286](92647 call postfix! call_tmp[633281]))
      unknown call_tmp[633293] "expr temp" "maybe param" "maybe type" "temp"
      (633296 'move' call_tmp[633293](92653 call(92649 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633286])))
      (541759 'move' origLocales[92654](541758 'addr of' call_tmp[633293]))
      (92657 'end of statement')
      unknown call_tmp[633300] "expr temp" "maybe param" "maybe type" "temp"
      (633303 'move' call_tmp[633300](92659 call _value _mt[243] origLocales[92654]))
      unknown call_tmp[633307] "maybe param" "maybe type" "temp"
      (633310 'move' call_tmp[633307](92664 call theData _mt[243] call_tmp[633300]))
      unknown origRL[92667] "dead at end of block" "insert auto destroy"
      (541761 'init var' origRL[92667] call_tmp[633307])
      (92670 'end of statement')
      unknown call_tmp[633314] "expr temp" "maybe param" "maybe type" "temp"
      (633317 'move' call_tmp[633314](92676 call(92672 call (partial) getDefaultLocaleArray _mt[243] newRootLocale[92633])))
      unknown call_tmp[633321] "expr temp" "maybe param" "maybe type" "temp"
      (633324 'move' call_tmp[633321](92677 call _value _mt[243] call_tmp[633314]))
      unknown call_tmp[633328] "maybe param" "maybe type" "temp"
      (633331 'move' call_tmp[633328](92680 call theData _mt[243] call_tmp[633321]))
      unknown newRL[92683] "dead at end of block" "insert auto destroy"
      (541763 'init var' newRL[92683] call_tmp[633328])
      (92686 'end of statement' origLocales[92654] newRootLocale[92633])
      unknown call_tmp[633333] "expr temp" "maybe param" "maybe type" "temp"
      (633336 'move' call_tmp[633333](92709 'array_get' newRL[92683] 0))
      unknown call_tmp[633338] "expr temp" "maybe param" "maybe type" "temp"
      (633341 'move' call_tmp[633338](92715 'array_get' origRL[92667] 0))
      unknown call_tmp[633343] "expr temp" "maybe param" "maybe type" "temp"
      (633346 'move' call_tmp[633343](92718 call _cast size_t[20657] numLocales[209892]))
      (92720 'chpl_comm_array_get' call_tmp[633333] 0 call_tmp[633338] call_tmp[633343])
      (477453 'end of statement' newRL[92683] origRL[92667])
      unknown call_tmp[633350] "expr temp" "maybe param" "maybe type" "temp"
      (633353 'move' call_tmp[633350](92723 call _instance _mt[243] rootLocale[91514]))
      (92727 call = call_tmp[633350] newRootLocale[92633])
      (477456 'end of statement' newRootLocale[92633])
    }
    unknown call_tmp[633355] "expr temp" "maybe param" "maybe type" "temp"
    (633358 'move' call_tmp[633355](92736 call != locIdx[92610] 0))
    unknown call_tmp[633360] "expr temp" "maybe param" "maybe type" "temp"
    (633363 'move' call_tmp[633360](92781 call _cond_test call_tmp[633355]))
    if call_tmp[633360]
    {
      const tmp[92754] "dead at end of block" "const" "no auto destroy" "ref var"
      unknown call_tmp[633367] "expr temp" "maybe param" "maybe type" "temp"
      (633370 'move' call_tmp[633367](92739 call _instance _mt[243] rootLocale[91514]))
      unknown call_tmp[633372] "expr temp" "maybe param" "maybe type" "temp"
      (633375 'move' call_tmp[633372](92745 call _cast borrowed RootLocale?[415467] call_tmp[633367]))
      unknown call_tmp[633377] "expr temp" "maybe param" "maybe type" "temp"
      (633380 'move' call_tmp[633377](92747 call postfix! call_tmp[633372]))
      unknown call_tmp[633384] "expr temp" "maybe param" "maybe type" "temp"
      (633387 'move' call_tmp[633384](92753 call(92749 call (partial) getDefaultLocaleArray _mt[243] call_tmp[633377])))
      (541766 'move' tmp[92754](541765 'addr of' call_tmp[633384]))
      (92757 'end of statement')
      (92779 'move' Locales[113662] tmp[92754])
      (477458 'end of statement' tmp[92754])
    }
    (92787 call = rootLocaleInitialized[310] 1)
    (514133 return _void[55])
  }
  function chpl_task_getRequestedSubloc[92794]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "fn synchronization free" "no return value for void"
  {
    unknown ret[514137] "RVV" "temp"
    (514139 return ret[514137])
  }
  { scopeless type
    chpl_sublocID_t[89869]
  }
  function chpl_getLocaleID[92806](ref arg localeID[92803]:chpl_localeID_t[209352]) : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633389] "expr temp" "maybe param" "maybe type" "temp"
    (633392 'move' call_tmp[633389](377986 call here_id[92818]))
    (92810 call = localeID[92803] call_tmp[633389])
    (514141 return _void[55])
  }
  function here_id[92818]() : _unknown[51] "inline" "no doc" "no parens"
  {
    unknown ret[514145] "RVV" "temp"
    unknown call_tmp[633394] "expr temp" "maybe param" "maybe type" "temp"
    (633397 'move' call_tmp[633394](92837 call _cond_test localeModelHasSublocales[187449]))
    if call_tmp[633394]
    {
      unknown call_tmp[633399] "expr temp" "maybe param" "maybe type" "temp"
      (633402 'move' call_tmp[633399](92826 call chpl_task_getRequestedSubloc))
      unknown call_tmp[633404] "expr temp" "maybe param" "maybe type" "temp"
      (633407 'move' call_tmp[633404](92827 call chpl_rt_buildLocaleID chpl_nodeID[208207] call_tmp[633399]))
      (514150 'move' ret[514145](514149 'deref' call_tmp[633404]))
      gotoReturn _end_here_id[514143] _end_here_id[514143]
    }
    {
      unknown call_tmp[633409] "expr temp" "maybe param" "maybe type" "temp"
      (633412 'move' call_tmp[633409](92834 call chpl_rt_buildLocaleID chpl_nodeID[208207] c_sublocid_any[89878]))
      (514155 'move' ret[514145](514154 'deref' call_tmp[633409]))
      gotoReturn _end_here_id[514143] _end_here_id[514143]
    }
    label _end_here_id[514143]
    (514147 return ret[514145])
  }
  function chpl_localeID_to_locale[92852](arg id[92849]:chpl_localeID_t[209352]) : _unknown[51] "no doc" "fn returns infinite lifetime"
  {
    unknown ret[514161] "RVV" "temp"
    unknown call_tmp[633416] "expr temp" "maybe param" "maybe type" "temp"
    (633419 'move' call_tmp[633416](92856 call _instance _mt[243] rootLocale[91514]))
    unknown call_tmp[633421] "expr temp" "maybe param" "maybe type" "temp"
    (633424 'move' call_tmp[633421](92860 call != call_tmp[633416] nil[44]))
    unknown call_tmp[633426] "expr temp" "maybe param" "maybe type" "temp"
    (633429 'move' call_tmp[633426](92912 call _cond_test call_tmp[633421]))
    if call_tmp[633426]
    {
      unknown call_tmp[633433] "expr temp" "maybe param" "maybe type" "temp"
      (633436 'move' call_tmp[633433](92863 call _instance _mt[243] rootLocale[91514]))
      unknown call_tmp[633438] "expr temp" "maybe param" "maybe type" "temp"
      (633441 'move' call_tmp[633438](92869 call _cast borrowed AbstractRootLocale?[415479] call_tmp[633433]))
      unknown call_tmp[633443] "expr temp" "maybe param" "maybe type" "temp"
      (633446 'move' call_tmp[633443](92871 call postfix! call_tmp[633438]))
      unknown call_tmp[633450] "expr temp" "maybe param" "maybe type" "temp"
      (633453 'move' call_tmp[633450](92880 call(92875 call (partial) localeIDtoLocale _mt[243] call_tmp[633443]) id[92849]))
      (514167 'move' ret[514161](514166 'coerce' call_tmp[633450] locale[28]))
      gotoReturn _end_chpl_localeID_to_locale[514159] _end_chpl_localeID_to_locale[514159]
    }
    {
      unknown call_tmp[633457] "expr temp" "maybe param" "maybe type" "temp"
      (633460 'move' call_tmp[633457](92884 call _instance _mt[243] dummyLocale[89970]))
      unknown call_tmp[633462] "expr temp" "maybe param" "maybe type" "temp"
      (633465 'move' call_tmp[633462](92888 call == call_tmp[633457] nil[44]))
      unknown call_tmp[633467] "expr temp" "maybe param" "maybe type" "temp"
      (633470 'move' call_tmp[633467](92904 call _cond_test call_tmp[633462]))
      if call_tmp[633467]
      {
        unknown call_tmp[633474] "expr temp" "maybe param" "maybe type" "temp"
        (633477 'move' call_tmp[633474](92891 call _instance _mt[243] dummyLocale[89970]))
        unknown call_tmp[633479] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
        (633482 'move' call_tmp[633479](747841 'new' DummyLocale[377845](?)(_chpl_manager = unmanaged[220](?))))
        (92900 call = call_tmp[633474] call_tmp[633479])
      }
      (514173 'move' ret[514161](514172 'coerce' dummyLocale[89970] locale[28]))
      gotoReturn _end_chpl_localeID_to_locale[514159] _end_chpl_localeID_to_locale[514159]
    }
    label _end_chpl_localeID_to_locale[514159]
    (514163 return ret[514161])
  }
  { scopeless type
    locale[28]
  }
  type chpl_privateObject_t[92928] val obj[92923]:c_void_ptr[149] c_void_ptr[149]
  unknown chpl_privateObjects[92935] "dead at end of block" "extern" "insert auto destroy" "no doc"
  function chpl_getPrivatizedCopy[92943](arg objectType[92941]:_any[178](?), arg objectPid[92946]:int(64)[13]) : _unknown[51] "inline" "no doc" "fn returns infinite lifetime"
  {
    unknown ret[514179] "RVV" "temp"
    unknown call_tmp[633489] "expr temp" "maybe param" "maybe type" "temp"
    (633492 'move' call_tmp[633489](92956 call chpl_privateObjects[92935] objectPid[92946]))
    unknown call_tmp[633496] "expr temp" "maybe param" "maybe type" "temp"
    (633499 'move' call_tmp[633496](92959 call obj _mt[243] call_tmp[633489]))
    unknown call_tmp[633501] "expr temp" "maybe param" "maybe type" "temp"
    (633504 'move' call_tmp[633501](92962 'cast' objectType[92941] call_tmp[633496]))
    (514185 'move' ret[514179](514184 'coerce' call_tmp[633501] objectType[92941]))
    (514181 return ret[514179])
  }
  { scopeless type
    objectType[92941]
  }
  function locale[28].totalThreads[92972](arg _mt[92977]:_MT[238], arg this[92974]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514195] "RVV" "temp"
    unknown totalThreads[92980] "dead at end of block" "insert auto destroy"
    (541771 'default init var' totalThreads[92980] int(64)[13])
    (92983 'end of statement')
    function chpl_task_getNumThreads[92987]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514189] "RVV" "temp"
      (514191 return ret[514189])
    }
    { scopeless type
      (92992 call uint(64)[115] 32)
    }
    const tmp[93007] "const" "temp"
    unknown call_tmp[633506] "expr temp" "maybe param" "maybe type" "temp"
    (633509 'move' call_tmp[633506](93004 '_wide_get_locale' this[92974]))
    (93009 'move' tmp[93007](93005 'deref' call_tmp[633506]))
    {
      unknown call_tmp[633511] "expr temp" "maybe param" "maybe type" "temp"
      (633514 'move' call_tmp[633511](93000 call chpl_task_getNumThreads))
      (93001 call = totalThreads[92980] call_tmp[633511])
      (477468 'end of statement' totalThreads[92980])
      (93012 'on block' 0 tmp[93007])
    }
    (514200 'move' ret[514195](514199 'deref' totalThreads[92980]))
    gotoReturn _end_totalThreads[514193] _end_totalThreads[514193]
    (477470 'end of statement' totalThreads[92980])
    label _end_totalThreads[514193]
    (514197 return ret[514195])
  }
  function locale[28].idleThreads[93023](arg _mt[93028]:_MT[238], arg this[93025]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514212] "RVV" "temp"
    unknown idleThreads[93031] "dead at end of block" "insert auto destroy"
    (541773 'default init var' idleThreads[93031] int(64)[13])
    (93034 'end of statement')
    function chpl_task_getNumIdleThreads[93038]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514206] "RVV" "temp"
      (514208 return ret[514206])
    }
    { scopeless type
      (93043 call uint(64)[115] 32)
    }
    const tmp[93058] "const" "temp"
    unknown call_tmp[633516] "expr temp" "maybe param" "maybe type" "temp"
    (633519 'move' call_tmp[633516](93055 '_wide_get_locale' this[93025]))
    (93060 'move' tmp[93058](93056 'deref' call_tmp[633516]))
    {
      unknown call_tmp[633521] "expr temp" "maybe param" "maybe type" "temp"
      (633524 'move' call_tmp[633521](93051 call chpl_task_getNumIdleThreads))
      (93052 call = idleThreads[93031] call_tmp[633521])
      (477472 'end of statement' idleThreads[93031])
      (93063 'on block' 0 tmp[93058])
    }
    (514217 'move' ret[514212](514216 'deref' idleThreads[93031]))
    gotoReturn _end_idleThreads[514210] _end_idleThreads[514210]
    (477474 'end of statement' idleThreads[93031])
    label _end_idleThreads[514210]
    (514214 return ret[514212])
  }
  function locale[28].queuedTasks[93074](arg _mt[93079]:_MT[238], arg this[93076]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514229] "RVV" "temp"
    unknown queuedTasks[93082] "dead at end of block" "insert auto destroy"
    (541775 'default init var' queuedTasks[93082] int(64)[13])
    (93085 'end of statement')
    function chpl_task_getNumQueuedTasks[93089]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514223] "RVV" "temp"
      (514225 return ret[514223])
    }
    { scopeless type
      (93094 call uint(64)[115] 32)
    }
    const tmp[93109] "const" "temp"
    unknown call_tmp[633526] "expr temp" "maybe param" "maybe type" "temp"
    (633529 'move' call_tmp[633526](93106 '_wide_get_locale' this[93076]))
    (93111 'move' tmp[93109](93107 'deref' call_tmp[633526]))
    {
      unknown call_tmp[633531] "expr temp" "maybe param" "maybe type" "temp"
      (633534 'move' call_tmp[633531](93102 call chpl_task_getNumQueuedTasks))
      (93103 call = queuedTasks[93082] call_tmp[633531])
      (477476 'end of statement' queuedTasks[93082])
      (93114 'on block' 0 tmp[93109])
    }
    (514234 'move' ret[514229](514233 'deref' queuedTasks[93082]))
    gotoReturn _end_queuedTasks[514227] _end_queuedTasks[514227]
    (477478 'end of statement' queuedTasks[93082])
    label _end_queuedTasks[514227]
    (514231 return ret[514229])
  }
  function locale[28].runningTasks[93125](arg _mt[93130]:_MT[238], arg this[93127]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc" "fn synchronization free"
  {
    unknown ret[514240] "RVV" "temp"
    unknown call_tmp[633538] "expr temp" "maybe param" "maybe type" "temp"
    (633541 'move' call_tmp[633538](93139 call(93135 call (partial) runningTaskCnt _mt[243] this[93127])))
    (514245 'move' ret[514240](514244 'deref' call_tmp[633538]))
    (514242 return ret[514240])
  }
  function locale[28].blockedTasks[93148](arg _mt[93153]:_MT[238], arg this[93150]:locale[28] :
  locale[28]) : _unknown[51] "method" "no doc"
  {
    unknown ret[514255] "RVV" "temp"
    unknown blockedTasks[93156] "dead at end of block" "insert auto destroy"
    (541777 'default init var' blockedTasks[93156] int(64)[13])
    (93159 'end of statement')
    function chpl_task_getNumBlockedTasks[93163]() : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[514249] "RVV" "temp"
      (514251 return ret[514249])
    }
    { scopeless type
      (93168 call int(64)[13] 32)
    }
    const tmp[93183] "const" "temp"
    unknown call_tmp[633543] "expr temp" "maybe param" "maybe type" "temp"
    (633546 'move' call_tmp[633543](93180 '_wide_get_locale' this[93150]))
    (93185 'move' tmp[93183](93181 'deref' call_tmp[633543]))
    {
      unknown call_tmp[633548] "expr temp" "maybe param" "maybe type" "temp"
      (633551 'move' call_tmp[633548](93176 call chpl_task_getNumBlockedTasks))
      (93177 call = blockedTasks[93156] call_tmp[633548])
      (477481 'end of statement' blockedTasks[93156])
      (93188 'on block' 0 tmp[93183])
    }
    (514260 'move' ret[514255](514259 'deref' blockedTasks[93156]))
    gotoReturn _end_blockedTasks[514253] _end_blockedTasks[514253]
    (477483 'end of statement' blockedTasks[93156])
    label _end_blockedTasks[514253]
    (514257 return ret[514255])
  }
  function chpl_taskRunningCntInc[93198]() : _unknown[51] "export" "insert line file info" "inc running task" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633553] "expr temp" "maybe param" "maybe type" "temp"
    (633556 'move' call_tmp[633553](93210 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[633553]
    {
      unknown call_tmp[633558] "expr temp" "maybe param" "maybe type" "temp"
      (633561 'move' call_tmp[633558](358519 call here[90438]))
      (93207 call(93202 call (partial) runningTaskCntAdd _mt[243] call_tmp[633558]) 1)
    }
    (514264 return _void[55])
  }
  function chpl_taskRunningCntDec[93219]() : _unknown[51] "export" "insert line file info" "dec running task" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633565] "expr temp" "maybe param" "maybe type" "temp"
    (633568 'move' call_tmp[633565](93231 call _cond_test rootLocaleInitialized[310]))
    if call_tmp[633565]
    {
      unknown call_tmp[633570] "expr temp" "maybe param" "maybe type" "temp"
      (633573 'move' call_tmp[633570](358521 call here[90438]))
      (93228 call(93223 call (partial) runningTaskCntSub _mt[243] call_tmp[633570]) 1)
    }
    (514266 return _void[55])
  }
  function chpl_taskRunningCntReset[93240]() : _unknown[51] "export" "insert line file info" "local args" "no doc" "no return value for void"
  {
    unknown call_tmp[633577] "expr temp" "maybe param" "maybe type" "temp"
    (633580 'move' call_tmp[633577](358523 call here[90438]))
    (93250 call(93245 call (partial) runningTaskCntSet _mt[243] call_tmp[633577]) 0)
    (514268 return _void[55])
  }
  (355117 'used modules list'(89849 'use' LocaleModel[88729])(89853 'import' HaltWrappers[210016])(89856 'use' SysCTypes[20943]))
}