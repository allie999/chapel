AST dump for CString after pass replaceArrayAccessesWithRefTemps.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_CString[415955]() : void[4] "insert line file info" "module init" "resolved"
  {
    (501848 return _void[55])
  }
  function chpl__initCopy[21698](const in arg x[21695]:c_string[19]) : c_string[19] "init copy fn" "inline" "resolved"
  {
    val ret[501581]:c_string[19] "dead after last mention" "RVV" "temp"
    (964529 'move' ret[501581] x[21695])
    (501583 return ret[501581])
  }
  function chpl__autoCopy[21714](const in arg x[21711]:c_string[19]) : c_string[19] "auto copy fn" "inline" "resolved"
  {
    val ret[501591]:c_string[19] "dead after last mention" "RVV" "temp"
    (959575 'move' ret[501591] x[21711])
    (501593 return ret[501591])
  }
  function ==[21730](const in arg s0[21727]:c_string[19], const in arg s1[21733]:c_string[19]) : bool[10] "inline" "resolved"
  {
    val ret[501601]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[595213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595216 'move' call_tmp[595213](21756 'string_compare' s0[21727] s1[21733]))
    val call_tmp[595218]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595221 'move' call_tmp[595218](21758 call ==[435671] call_tmp[595213] 0))
    (501606 'move' ret[501601] call_tmp[595218])
    (501603 return ret[501601])
  }
  function !=[21771](const in arg s0[21768]:c_string[19], const in arg s1[21774]:c_string[19]) : bool[10] "inline" "resolved"
  {
    val ret[501610]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[595223]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595226 'move' call_tmp[595223](21781 'string_compare' s0[21768] s1[21774]))
    val call_tmp[595228]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595231 'move' call_tmp[595228](21783 call !=[436055] call_tmp[595223] 0))
    (501615 'move' ret[501610] call_tmp[595228])
    (501612 return ret[501610])
  }
  function =[21896](ref arg a[21893]:_ref(c_string)[937288], const in arg b[21899]:c_string[19]) : void[4] "assignop" "inline" "resolved" "no return value for void"
  {
    (21906 '=' a[21893] b[21899])
    (501653 return _void[55])
  }
  function =[21917](ref arg a[21914]:_ref(c_string)[937288], const in arg b[21920]:nil[42]) : void[4] "assignop" "inline" "resolved" "no return value for void"
  {
    val call_tmp[595273]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (595276 'move' call_tmp[595273](368887 call c_nil[205006]))
    val call_tmp[595278]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595281 'move' call_tmp[595278](21926 call _cast[22012] call_tmp[595273]))
    (21928 call =[21896] a[21914] call_tmp[595278])
    (501655 return _void[55])
  }
  function _cast[22012](const in arg x[22015]:c_void_ptr[149]) : c_string[19] "inline" "resolved"
  {
    val _formal_type_tmp_[1838578]:c_string[19] "temp"
    val ret[501679]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[595300]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595303 'move' call_tmp[595300](22022 'cast' c_string[19] x[22015]))
    (501684 'move' ret[501679] call_tmp[595300])
    (501681 return ret[501679])
  }
  function _cast[957867](const in arg x[957871]:c_ptr(uint(8))[937484]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val _formal_type_tmp_[1838642]:c_string[19] "temp"
    val ret[958044]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[964510]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (964512 'move' call_tmp[964510](964514 'cast' c_string[19] x[957871]))
    (964517 'move' ret[958044] call_tmp[964510])
    (964521 return ret[958044])
  }
  function c_string[19].size[22361](const in arg this[22363]:c_string[19]) : int(64)[13] "inline" "method" "no parens" "resolved"
  {
    val ret[501761]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[595522]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (595525 'move' call_tmp[595522](22387 'string_length_bytes' this[22363]))
    (501766 'move' ret[501761] call_tmp[595522])
    (501763 return ret[501761])
  }
  function chpl_free_c_string[22709](ref arg cs[22706]:_ref(c_string)[937288]) : void[4] "inline" "resolved" "no return value for void"
  {
    function chpl_rt_free_c_string[22717](ref arg cs[22714]:_ref(c_string)[937288]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
    {
      (501840 return _void[55])
    }
    val call_tmp[595612]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (595615 'move' call_tmp[595612](368961 call c_nil[205006]))
    val call_tmp[595617]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (595620 'move' call_tmp[595617](22725 call _cast[22012] call_tmp[595612]))
    val call_tmp[595622]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1019205]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019209 'move' coerce_tmp[1019205](1019207 'deref' cs[22706]))
    (595625 'move' call_tmp[595622](22727 call !=[21771] coerce_tmp[1019205] call_tmp[595617]))
    val call_tmp[595627]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (595630 'move' call_tmp[595627] call_tmp[595622])
    if call_tmp[595627]
    {
      (22732 call chpl_rt_free_c_string[22717] cs[22706])
    }
    (501842 return _void[55])
  }
}