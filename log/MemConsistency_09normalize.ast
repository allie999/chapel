AST dump for MemConsistency after pass normalize.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[416160]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (545567 'default init var' memory_order_relaxed[186972] memory_order[186653])
    }
    (186975 'end of statement')
    { scopeless type extern
      (545570 'default init var' memory_order_consume[186977] memory_order[186653])
    }
    (186980 'end of statement')
    { scopeless type extern
      (545573 'default init var' memory_order_acquire[186982] memory_order[186653])
    }
    (186985 'end of statement')
    { scopeless type extern
      (545576 'default init var' memory_order_release[186987] memory_order[186653])
    }
    (186990 'end of statement')
    { scopeless type extern
      (545579 'default init var' memory_order_acq_rel[186992] memory_order[186653])
    }
    (186995 'end of statement')
    { scopeless type extern
      (545582 'default init var' memory_order_seq_cst[186997] memory_order[186653])
    }
    (187000 'end of statement')
    (524130 return _void[55])
  }
  type memory_order[186653]
  function _defaultOf[186662](arg t[186659]:memory_order[186653]) : _unknown[51] "inline" "last resort" "no doc"
  {
    unknown ret[524036] "RVV" "temp"
    function _defaultOfMemoryOrder[186666]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
      unknown ret[524030] "RVV" "temp"
      (524032 return ret[524030])
    }
    { scopeless type
      memory_order[186653]
    }
    unknown call_tmp[690463] "expr temp" "maybe param" "maybe type" "temp"
    (690466 'move' call_tmp[690463](186675 call _defaultOfMemoryOrder))
    (524041 'move' ret[524036](524040 'deref' call_tmp[690463]))
    (524038 return ret[524036])
  }
  function ==[186686](arg a[186683]:memory_order[186653], arg b[186689]:memory_order[186653]) : _unknown[51]
  {
    unknown ret[524045] "RVV" "temp"
    unknown call_tmp[690468] "expr temp" "maybe param" "maybe type" "temp"
    (690471 'move' call_tmp[690468](186697 '==' a[186683] b[186689]))
    (524051 'move' ret[524045](524050 'coerce' call_tmp[690468] bool[10]))
    (524047 return ret[524045])
  }
  { scopeless type
    bool[10]
  }
  function !=[186710](arg a[186707]:memory_order[186653], arg b[186713]:memory_order[186653]) : _unknown[51]
  {
    unknown ret[524055] "RVV" "temp"
    unknown call_tmp[690473] "expr temp" "maybe param" "maybe type" "temp"
    (690476 'move' call_tmp[690473](186721 '!=' a[186707] b[186713]))
    (524061 'move' ret[524055](524060 'coerce' call_tmp[690473] bool[10]))
    (524057 return ret[524055])
  }
  { scopeless type
    bool[10]
  }
  function =[186734](ref arg lhs[186731]:memory_order[186653], arg rhs[186737]:memory_order[186653]) : _unknown[51] "assignop" "no return value for void"
  {
    (186744 '=' lhs[186731] rhs[186737])
    (524063 return _void[55])
  }
  function memory_order[186653].writeThis[186754](arg _mt[186759]:_MT[238], arg this[186756]:memory_order[186653] :
  memory_order[186653], arg ch[186752]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[690478] "expr temp" "maybe param" "maybe type" "temp"
    (690481 'move' call_tmp[690478](186763 call == this[186756] memory_order_relaxed[186972]))
    unknown call_tmp[690483] "expr temp" "maybe param" "maybe type" "temp"
    (690486 'move' call_tmp[690483](186962 call _cond_test call_tmp[690478]))
    if call_tmp[690483]
    {
      (186783 call <~> ch[186752] "memory_order_relaxed")
    }
    {
      unknown call_tmp[690488] "expr temp" "maybe param" "maybe type" "temp"
      (690491 'move' call_tmp[690488](186788 call == this[186756] memory_order_consume[186977]))
      unknown call_tmp[690493] "expr temp" "maybe param" "maybe type" "temp"
      (690496 'move' call_tmp[690493](186956 call _cond_test call_tmp[690488]))
      if call_tmp[690493]
      {
        (186808 call <~> ch[186752] "memory_order_consume")
      }
      {
        unknown call_tmp[690498] "expr temp" "maybe param" "maybe type" "temp"
        (690501 'move' call_tmp[690498](186813 call == this[186756] memory_order_acquire[186982]))
        unknown call_tmp[690503] "expr temp" "maybe param" "maybe type" "temp"
        (690506 'move' call_tmp[690503](186950 call _cond_test call_tmp[690498]))
        if call_tmp[690503]
        {
          (186833 call <~> ch[186752] "memory_order_acquire")
        }
        {
          unknown call_tmp[690508] "expr temp" "maybe param" "maybe type" "temp"
          (690511 'move' call_tmp[690508](186838 call == this[186756] memory_order_release[186987]))
          unknown call_tmp[690513] "expr temp" "maybe param" "maybe type" "temp"
          (690516 'move' call_tmp[690513](186944 call _cond_test call_tmp[690508]))
          if call_tmp[690513]
          {
            (186858 call <~> ch[186752] "memory_order_release")
          }
          {
            unknown call_tmp[690518] "expr temp" "maybe param" "maybe type" "temp"
            (690521 'move' call_tmp[690518](186863 call == this[186756] memory_order_acq_rel[186992]))
            unknown call_tmp[690523] "expr temp" "maybe param" "maybe type" "temp"
            (690526 'move' call_tmp[690523](186938 call _cond_test call_tmp[690518]))
            if call_tmp[690523]
            {
              (186883 call <~> ch[186752] "memory_order_acq_rel")
            }
            {
              unknown call_tmp[690528] "expr temp" "maybe param" "maybe type" "temp"
              (690531 'move' call_tmp[690528](186888 call == this[186756] memory_order_seq_cst[186997]))
              unknown call_tmp[690533] "expr temp" "maybe param" "maybe type" "temp"
              (690536 'move' call_tmp[690533](186932 call _cond_test call_tmp[690528]))
              if call_tmp[690533]
              {
                (186908 call <~> ch[186752] "memory_order_seq_cst")
              }
              {
                (186929 call <~> ch[186752] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
    (524065 return _void[55])
  }
  const memory_order_relaxed[186972] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186977] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acquire[186982] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_release[186987] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186992] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_seq_cst[186997] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[187012] def seqCst[187002]:memoryOrder[187012] def acqRel[187004]:memoryOrder[187012] def release[187006]:memoryOrder[187012] def acquire[187008]:memoryOrder[187012] def relaxed[187010]:memoryOrder[187012]
  function readableOrder[187021](param arg order[187018]:memoryOrder[187012]) param : _unknown[51]
  {
    unknown ret[524069] "RVV" "param" "temp"
    unknown tmp[429599] "maybe param" "temp"
    (429610 'move' tmp[429599](187028 call == order[187018] release[187006]))
    unknown call_tmp[690538] "expr temp" "maybe param" "maybe type" "temp"
    (690541 'move' call_tmp[690538](429612 call _cond_invalid tmp[429599]))
    if call_tmp[690538]
    {
      (429615 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[572192] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572193] "maybe param" "temp"
    unknown call_tmp[690543] "expr temp" "maybe param" "maybe type" "temp"
    (690546 'move' call_tmp[690543](429600 call isTrue tmp[429599]))
    (572198 'move' tmp[572193](572196 call _cond_test call_tmp[690543]))
    if tmp[572193]
    {
      (572203 'move' tmp[572192](572200 '_paramFoldLogical' tmp[572193] 1))
    }
    {
      unknown tmp[572205] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690548] "expr temp" "maybe param" "maybe type" "temp"
      (690551 'move' call_tmp[690548](187037 call == order[187018] acqRel[187004]))
      (572207 'move' tmp[572205](429604 call isTrue call_tmp[690548]))
      (572212 'move' tmp[572192](572209 '_paramFoldLogical' tmp[572193] tmp[572205]))
    }
    unknown call_tmp[690553] "expr temp" "maybe param" "maybe type" "temp"
    (690556 'move' call_tmp[690553](187052 call _cond_test tmp[572192]))
    if call_tmp[690553]
    {
      (524074 'move' ret[524069](524073 'deref' acquire[187008]))
      gotoReturn _end_readableOrder[524067] _end_readableOrder[524067]
    }
    {
      (524079 'move' ret[524069](524078 'deref' order[187018]))
      gotoReturn _end_readableOrder[524067] _end_readableOrder[524067]
    }
    label _end_readableOrder[524067]
    (524071 return ret[524069])
  }
  function c_memory_order[187065](param arg order[187062]:memoryOrder[187012]) : _unknown[51] "inline"
  {
    unknown ret[524085] "RVV" "temp"
    {
      unknown tmp[187158] "expr temp" "maybe param" "maybe type" "temp"
      (187160 'move' tmp[187158] order[187062])
      unknown call_tmp[690558] "expr temp" "maybe param" "maybe type" "temp"
      (690561 'move' call_tmp[690558](187162 call == tmp[187158] relaxed[187010]))
      unknown call_tmp[690563] "expr temp" "maybe param" "maybe type" "temp"
      (690566 'move' call_tmp[690563](187165 call _cond_test call_tmp[690558]))
      if call_tmp[690563]
      {
        (524090 'move' ret[524085](524089 'deref' memory_order_relaxed[186972]))
        gotoReturn _end_c_memory_order[524083] _end_c_memory_order[524083]
      }
      {
        unknown call_tmp[690568] "expr temp" "maybe param" "maybe type" "temp"
        (690571 'move' call_tmp[690568](187168 call == tmp[187158] acquire[187008]))
        unknown call_tmp[690573] "expr temp" "maybe param" "maybe type" "temp"
        (690576 'move' call_tmp[690573](187171 call _cond_test call_tmp[690568]))
        if call_tmp[690573]
        {
          (524095 'move' ret[524085](524094 'deref' memory_order_acquire[186982]))
          gotoReturn _end_c_memory_order[524083] _end_c_memory_order[524083]
        }
        {
          unknown call_tmp[690578] "expr temp" "maybe param" "maybe type" "temp"
          (690581 'move' call_tmp[690578](187175 call == tmp[187158] release[187006]))
          unknown call_tmp[690583] "expr temp" "maybe param" "maybe type" "temp"
          (690586 'move' call_tmp[690583](187178 call _cond_test call_tmp[690578]))
          if call_tmp[690583]
          {
            (524100 'move' ret[524085](524099 'deref' memory_order_release[186987]))
            gotoReturn _end_c_memory_order[524083] _end_c_memory_order[524083]
          }
          {
            unknown call_tmp[690588] "expr temp" "maybe param" "maybe type" "temp"
            (690591 'move' call_tmp[690588](187182 call == tmp[187158] acqRel[187004]))
            unknown call_tmp[690593] "expr temp" "maybe param" "maybe type" "temp"
            (690596 'move' call_tmp[690593](187185 call _cond_test call_tmp[690588]))
            if call_tmp[690593]
            {
              (524105 'move' ret[524085](524104 'deref' memory_order_acq_rel[186992]))
              gotoReturn _end_c_memory_order[524083] _end_c_memory_order[524083]
            }
            {
              unknown call_tmp[690598] "expr temp" "maybe param" "maybe type" "temp"
              (690601 'move' call_tmp[690598](187189 call == tmp[187158] seqCst[187002]))
              unknown call_tmp[690603] "expr temp" "maybe param" "maybe type" "temp"
              (690606 'move' call_tmp[690603](187192 call _cond_test call_tmp[690598]))
              if call_tmp[690603]
              {
                (524110 'move' ret[524085](524109 'deref' memory_order_seq_cst[186997]))
                gotoReturn _end_c_memory_order[524083] _end_c_memory_order[524083]
              }
              {
                (187152 call exhaustiveSelectHalt module=[255] HaltWrappers[210085] "Invalid memoryOrder")
                (361973 'referenced modules list' HaltWrappers[210085])
              }
            }
          }
        }
      }
    }
    label _end_c_memory_order[524083]
    (524087 return ret[524085])
    (355331 'used modules list'(187068 'import' HaltWrappers[210085]))
  }
  function chpl_rmem_consist_release[187201]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524114 return _void[55])
  }
  function chpl_rmem_consist_acquire[187207]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524116 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187217](arg order[187214]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524118 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187227](param arg order[187224]:memoryOrder[187012]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690608] "expr temp" "maybe param" "maybe type" "temp"
    (690611 'move' call_tmp[690608](187233 call c_memory_order order[187224]))
    (187235 call chpl_rmem_consist_maybe_release call_tmp[690608])
    (524120 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187246](arg order[187243]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (524122 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187256](param arg order[187253]:memoryOrder[187012]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690613] "expr temp" "maybe param" "maybe type" "temp"
    (690616 'move' call_tmp[690613](187262 call c_memory_order order[187253]))
    (187264 call chpl_rmem_consist_maybe_acquire call_tmp[690613])
    (524124 return _void[55])
  }
  function chpl_rmem_consist_fence[187275](arg order[187272]:memory_order[186653]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
    (524126 return _void[55])
  }
  function chpl_rmem_consist_fence[187285](param arg order[187282]:memoryOrder[187012]) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[690618] "expr temp" "maybe param" "maybe type" "temp"
    (690621 'move' call_tmp[690618](187291 call c_memory_order order[187282]))
    (187293 call chpl_rmem_consist_fence call_tmp[690618])
    (524128 return _void[55])
  }
}