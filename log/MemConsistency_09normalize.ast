AST dump for MemConsistency after pass normalize.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[415955]() : void[4] "insert line file info" "module init"
  {
    { scopeless type extern
      (545334 'default init var' memory_order_relaxed[186926] memory_order[186607])
    }
    (186929 'end of statement')
    { scopeless type extern
      (545337 'default init var' memory_order_consume[186931] memory_order[186607])
    }
    (186934 'end of statement')
    { scopeless type extern
      (545340 'default init var' memory_order_acquire[186936] memory_order[186607])
    }
    (186939 'end of statement')
    { scopeless type extern
      (545343 'default init var' memory_order_release[186941] memory_order[186607])
    }
    (186944 'end of statement')
    { scopeless type extern
      (545346 'default init var' memory_order_acq_rel[186946] memory_order[186607])
    }
    (186949 'end of statement')
    { scopeless type extern
      (545349 'default init var' memory_order_seq_cst[186951] memory_order[186607])
    }
    (186954 'end of statement')
    (523915 return _void[55])
  }
  type memory_order[186607]
  function _defaultOf[186616](arg t[186613]:memory_order[186607]) : _unknown[51] "inline" "last resort" "no doc"
  {
    unknown ret[523821] "RVV" "temp"
    function _defaultOfMemoryOrder[186620]() : _unknown[51] "extern" "local args" "no fn body" "no doc" "no return value for void"
    {
      unknown ret[523815] "RVV" "temp"
      (523817 return ret[523815])
    }
    { scopeless type
      memory_order[186607]
    }
    unknown call_tmp[690247] "expr temp" "maybe param" "maybe type" "temp"
    (690250 'move' call_tmp[690247](186629 call _defaultOfMemoryOrder))
    (523826 'move' ret[523821](523825 'deref' call_tmp[690247]))
    (523823 return ret[523821])
  }
  function ==[186640](arg a[186637]:memory_order[186607], arg b[186643]:memory_order[186607]) : _unknown[51]
  {
    unknown ret[523830] "RVV" "temp"
    unknown call_tmp[690252] "expr temp" "maybe param" "maybe type" "temp"
    (690255 'move' call_tmp[690252](186651 '==' a[186637] b[186643]))
    (523836 'move' ret[523830](523835 'coerce' call_tmp[690252] bool[10]))
    (523832 return ret[523830])
  }
  { scopeless type
    bool[10]
  }
  function !=[186664](arg a[186661]:memory_order[186607], arg b[186667]:memory_order[186607]) : _unknown[51]
  {
    unknown ret[523840] "RVV" "temp"
    unknown call_tmp[690257] "expr temp" "maybe param" "maybe type" "temp"
    (690260 'move' call_tmp[690257](186675 '!=' a[186661] b[186667]))
    (523846 'move' ret[523840](523845 'coerce' call_tmp[690257] bool[10]))
    (523842 return ret[523840])
  }
  { scopeless type
    bool[10]
  }
  function =[186688](ref arg lhs[186685]:memory_order[186607], arg rhs[186691]:memory_order[186607]) : _unknown[51] "assignop" "no return value for void"
  {
    (186698 '=' lhs[186685] rhs[186691])
    (523848 return _void[55])
  }
  function memory_order[186607].writeThis[186708](arg _mt[186713]:_MT[238], arg this[186710]:memory_order[186607] :
  memory_order[186607], arg ch[186706]:_any[178](?)) : _unknown[51] throws "method" "no return value for void"
  {
    unknown call_tmp[690262] "expr temp" "maybe param" "maybe type" "temp"
    (690265 'move' call_tmp[690262](186717 call == this[186710] memory_order_relaxed[186926]))
    unknown call_tmp[690267] "expr temp" "maybe param" "maybe type" "temp"
    (690270 'move' call_tmp[690267](186916 call _cond_test call_tmp[690262]))
    if call_tmp[690267]
    {
      (186737 call <~> ch[186706] "memory_order_relaxed")
    }
    {
      unknown call_tmp[690272] "expr temp" "maybe param" "maybe type" "temp"
      (690275 'move' call_tmp[690272](186742 call == this[186710] memory_order_consume[186931]))
      unknown call_tmp[690277] "expr temp" "maybe param" "maybe type" "temp"
      (690280 'move' call_tmp[690277](186910 call _cond_test call_tmp[690272]))
      if call_tmp[690277]
      {
        (186762 call <~> ch[186706] "memory_order_consume")
      }
      {
        unknown call_tmp[690282] "expr temp" "maybe param" "maybe type" "temp"
        (690285 'move' call_tmp[690282](186767 call == this[186710] memory_order_acquire[186936]))
        unknown call_tmp[690287] "expr temp" "maybe param" "maybe type" "temp"
        (690290 'move' call_tmp[690287](186904 call _cond_test call_tmp[690282]))
        if call_tmp[690287]
        {
          (186787 call <~> ch[186706] "memory_order_acquire")
        }
        {
          unknown call_tmp[690292] "expr temp" "maybe param" "maybe type" "temp"
          (690295 'move' call_tmp[690292](186792 call == this[186710] memory_order_release[186941]))
          unknown call_tmp[690297] "expr temp" "maybe param" "maybe type" "temp"
          (690300 'move' call_tmp[690297](186898 call _cond_test call_tmp[690292]))
          if call_tmp[690297]
          {
            (186812 call <~> ch[186706] "memory_order_release")
          }
          {
            unknown call_tmp[690302] "expr temp" "maybe param" "maybe type" "temp"
            (690305 'move' call_tmp[690302](186817 call == this[186710] memory_order_acq_rel[186946]))
            unknown call_tmp[690307] "expr temp" "maybe param" "maybe type" "temp"
            (690310 'move' call_tmp[690307](186892 call _cond_test call_tmp[690302]))
            if call_tmp[690307]
            {
              (186837 call <~> ch[186706] "memory_order_acq_rel")
            }
            {
              unknown call_tmp[690312] "expr temp" "maybe param" "maybe type" "temp"
              (690315 'move' call_tmp[690312](186842 call == this[186710] memory_order_seq_cst[186951]))
              unknown call_tmp[690317] "expr temp" "maybe param" "maybe type" "temp"
              (690320 'move' call_tmp[690317](186886 call _cond_test call_tmp[690312]))
              if call_tmp[690317]
              {
                (186862 call <~> ch[186706] "memory_order_seq_cst")
              }
              {
                (186883 call <~> ch[186706] "memory_order_unknown")
              }
            }
          }
        }
      }
    }
    (523850 return _void[55])
  }
  const memory_order_relaxed[186926] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186931] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acquire[186936] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_release[186941] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186946] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_seq_cst[186951] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[186966] def seqCst[186956]:memoryOrder[186966] def acqRel[186958]:memoryOrder[186966] def release[186960]:memoryOrder[186966] def acquire[186962]:memoryOrder[186966] def relaxed[186964]:memoryOrder[186966]
  function readableOrder[186975](param arg order[186972]:memoryOrder[186966]) param : _unknown[51]
  {
    unknown ret[523854] "RVV" "param" "temp"
    unknown tmp[429394] "maybe param" "temp"
    (429405 'move' tmp[429394](186982 call == order[186972] release[186960]))
    unknown call_tmp[690322] "expr temp" "maybe param" "maybe type" "temp"
    (690325 'move' call_tmp[690322](429407 call _cond_invalid tmp[429394]))
    if call_tmp[690322]
    {
      (429410 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[571976] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[571977] "maybe param" "temp"
    unknown call_tmp[690327] "expr temp" "maybe param" "maybe type" "temp"
    (690330 'move' call_tmp[690327](429395 call isTrue tmp[429394]))
    (571982 'move' tmp[571977](571980 call _cond_test call_tmp[690327]))
    if tmp[571977]
    {
      (571987 'move' tmp[571976](571984 '_paramFoldLogical' tmp[571977] 1))
    }
    {
      unknown tmp[571989] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[690332] "expr temp" "maybe param" "maybe type" "temp"
      (690335 'move' call_tmp[690332](186991 call == order[186972] acqRel[186958]))
      (571991 'move' tmp[571989](429399 call isTrue call_tmp[690332]))
      (571996 'move' tmp[571976](571993 '_paramFoldLogical' tmp[571977] tmp[571989]))
    }
    unknown call_tmp[690337] "expr temp" "maybe param" "maybe type" "temp"
    (690340 'move' call_tmp[690337](187006 call _cond_test tmp[571976]))
    if call_tmp[690337]
    {
      (523859 'move' ret[523854](523858 'deref' acquire[186962]))
      gotoReturn _end_readableOrder[523852] _end_readableOrder[523852]
    }
    {
      (523864 'move' ret[523854](523863 'deref' order[186972]))
      gotoReturn _end_readableOrder[523852] _end_readableOrder[523852]
    }
    label _end_readableOrder[523852]
    (523856 return ret[523854])
  }
  function c_memory_order[187019](param arg order[187016]:memoryOrder[186966]) : _unknown[51] "inline"
  {
    unknown ret[523870] "RVV" "temp"
    {
      unknown tmp[187112] "expr temp" "maybe param" "maybe type" "temp"
      (187114 'move' tmp[187112] order[187016])
      unknown call_tmp[690342] "expr temp" "maybe param" "maybe type" "temp"
      (690345 'move' call_tmp[690342](187116 call == tmp[187112] relaxed[186964]))
      unknown call_tmp[690347] "expr temp" "maybe param" "maybe type" "temp"
      (690350 'move' call_tmp[690347](187119 call _cond_test call_tmp[690342]))
      if call_tmp[690347]
      {
        (523875 'move' ret[523870](523874 'deref' memory_order_relaxed[186926]))
        gotoReturn _end_c_memory_order[523868] _end_c_memory_order[523868]
      }
      {
        unknown call_tmp[690352] "expr temp" "maybe param" "maybe type" "temp"
        (690355 'move' call_tmp[690352](187122 call == tmp[187112] acquire[186962]))
        unknown call_tmp[690357] "expr temp" "maybe param" "maybe type" "temp"
        (690360 'move' call_tmp[690357](187125 call _cond_test call_tmp[690352]))
        if call_tmp[690357]
        {
          (523880 'move' ret[523870](523879 'deref' memory_order_acquire[186936]))
          gotoReturn _end_c_memory_order[523868] _end_c_memory_order[523868]
        }
        {
          unknown call_tmp[690362] "expr temp" "maybe param" "maybe type" "temp"
          (690365 'move' call_tmp[690362](187129 call == tmp[187112] release[186960]))
          unknown call_tmp[690367] "expr temp" "maybe param" "maybe type" "temp"
          (690370 'move' call_tmp[690367](187132 call _cond_test call_tmp[690362]))
          if call_tmp[690367]
          {
            (523885 'move' ret[523870](523884 'deref' memory_order_release[186941]))
            gotoReturn _end_c_memory_order[523868] _end_c_memory_order[523868]
          }
          {
            unknown call_tmp[690372] "expr temp" "maybe param" "maybe type" "temp"
            (690375 'move' call_tmp[690372](187136 call == tmp[187112] acqRel[186958]))
            unknown call_tmp[690377] "expr temp" "maybe param" "maybe type" "temp"
            (690380 'move' call_tmp[690377](187139 call _cond_test call_tmp[690372]))
            if call_tmp[690377]
            {
              (523890 'move' ret[523870](523889 'deref' memory_order_acq_rel[186946]))
              gotoReturn _end_c_memory_order[523868] _end_c_memory_order[523868]
            }
            {
              unknown call_tmp[690382] "expr temp" "maybe param" "maybe type" "temp"
              (690385 'move' call_tmp[690382](187143 call == tmp[187112] seqCst[186956]))
              unknown call_tmp[690387] "expr temp" "maybe param" "maybe type" "temp"
              (690390 'move' call_tmp[690387](187146 call _cond_test call_tmp[690382]))
              if call_tmp[690387]
              {
                (523895 'move' ret[523870](523894 'deref' memory_order_seq_cst[186951]))
                gotoReturn _end_c_memory_order[523868] _end_c_memory_order[523868]
              }
              {
                (187106 call exhaustiveSelectHalt module=[255] HaltWrappers[209910] "Invalid memoryOrder")
                (361774 'referenced modules list' HaltWrappers[209910])
              }
            }
          }
        }
      }
    }
    label _end_c_memory_order[523868]
    (523872 return ret[523870])
    (355132 'used modules list'(187022 'import' HaltWrappers[209910]))
  }
  function chpl_rmem_consist_release[187155]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523899 return _void[55])
  }
  function chpl_rmem_consist_acquire[187161]() : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523901 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187171](arg order[187168]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523903 return _void[55])
  }
  function chpl_rmem_consist_maybe_release[187181](param arg order[187178]:memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690392] "expr temp" "maybe param" "maybe type" "temp"
    (690395 'move' call_tmp[690392](187187 call c_memory_order order[187178]))
    (187189 call chpl_rmem_consist_maybe_release call_tmp[690392])
    (523905 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187200](arg order[187197]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "compiler added remote fence" "no return value for void"
  {
    (523907 return _void[55])
  }
  function chpl_rmem_consist_maybe_acquire[187210](param arg order[187207]:memoryOrder[186966]) : _unknown[51] "compiler added remote fence" "no return value for void"
  {
    unknown call_tmp[690397] "expr temp" "maybe param" "maybe type" "temp"
    (690400 'move' call_tmp[690397](187216 call c_memory_order order[187207]))
    (187218 call chpl_rmem_consist_maybe_acquire call_tmp[690397])
    (523909 return _void[55])
  }
  function chpl_rmem_consist_fence[187229](arg order[187226]:memory_order[186607]) : void[4] "extern" "insert line file info" "local args" "no fn body" "no doc" "no return value for void"
  {
    (523911 return _void[55])
  }
  function chpl_rmem_consist_fence[187239](param arg order[187236]:memoryOrder[186966]) : _unknown[51] "no return value for void"
  {
    unknown call_tmp[690402] "expr temp" "maybe param" "maybe type" "temp"
    (690405 'move' call_tmp[690402](187245 call c_memory_order order[187236]))
    (187247 call chpl_rmem_consist_fence call_tmp[690402])
    (523913 return _void[55])
  }
}