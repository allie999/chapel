AST dump for Search after pass parse.
Module use list: 

{
  (353096 'use' ChapelStandard)
  (291268 'use' Sort 'only' defaultComparator, DefaultComparator, reverseComparator, ReverseComparator)
  (291272 'use' Sort)
  function search[291284](arg Data[291281] :
  (291279 call chpl__buildArrayRuntimeType unknown Dom[291276]), arg val[291286]:_any[178](?), arg comparator[291291] :
  unknown rec[291288] =
  defaultComparator, arg lo[291299] =
  (291296 call . Dom c"alignedLow"), arg hi[291306] =
  (291303 call . Dom c"alignedHigh"), arg sorted[291310] =
  0) : _unknown[51]
  {
    if(291334 call _cond_test sorted)
    {
      { scopeless
        (291322 return(291321 call binarySearch Data val comparator lo hi))
      }
    }
    {
      { scopeless
        (291332 return(291331 call linearSearch Data val comparator lo hi))
      }
    }
  }
  function search[291353](arg Data[291350] :
  (291348 call chpl__buildArrayRuntimeType unknown Dom[291345]), arg val[291355]:_any[178](?), arg comparator[291360] :
  unknown rec[291357] =
  defaultComparator, arg lo[291368] =
  (291365 call . Dom c"alignedLow"), arg hi[291375] =
  (291372 call . Dom c"alignedHigh"), arg sorted[291379] =
  0) : _unknown[51] "no doc"
  {
    (291408 call compilerError "search() requires 1-D array")
  }
  where {
    (291387 call !=(291383 call . Dom c"rank") 1)
  }
  function linearSearch[291424](arg Data[291421] :
  (291419 call chpl__buildArrayRuntimeType unknown Dom[291416]), arg val[291426]:_any[178](?), arg comparator[291431] :
  unknown rec[291428] =
  defaultComparator, arg lo[291439] =
  (291436 call . Dom c"alignedLow"), arg hi[291446] =
  (291443 call . Dom c"alignedHigh")) : _unknown[51]
  {
    (291456 call chpl_check_comparator comparator(291453 call . Data c"eltType"))
    { scopeless
      const stride[291474] "const"(291471 IfExpr (291460 call . Dom c"stridable") then
      { scopeless
        (291469 call abs(291465 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (291477 'end of statement')
    }
    if(291629 call _cond_test(291479 call . Dom c"stridable"))
    {
      {
        unknown _indexOfInterest[291516] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291517] "expr temp" "temp"
        (291526 'move' _iterator[291517](291524 call _getIterator(291535 call chpl_direct_range_iter lo hi stride)))
        Defer
        {
          {
            (291551 call _freeIterator _iterator[291517])
          }
        }
        { scopeless type
          (291540 'move' _indexOfInterest[291516](291537 call iteratorIndex _iterator[291517]))
        }
        ForLoop[291518]
        {
          unknown i[291544] "index var" "insert auto destroy"
          (291546 'move' i[291544] _indexOfInterest[291516])
          {
            if(291510 call _cond_test(291501 call ==(291499 call chpl_compare(291494 call Data i) val(comparator = comparator)) 0))
            {
              { scopeless
                (291508 return(291506 call _build_tuple 1 i))
              }
            }
          }
          label _continueLabel[291521]
          _indexOfInterest[291516]
          _iterator[291517]
        }
        label _breakLabel[291522]
      }
    }
    {
      {
        unknown _indexOfInterest[291590] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[291591] "expr temp" "temp"
        (291600 'move' _iterator[291591](291598 call _getIterator(291605 call chpl_direct_range_iter lo hi 1)))
        Defer
        {
          {
            (291621 call _freeIterator _iterator[291591])
          }
        }
        { scopeless type
          (291610 'move' _indexOfInterest[291590](291607 call iteratorIndex _iterator[291591]))
        }
        ForLoop[291592]
        {
          unknown i[291614] "index var" "insert auto destroy"
          (291616 'move' i[291614] _indexOfInterest[291590])
          {
            if(291584 call _cond_test(291575 call ==(291573 call chpl_compare(291568 call Data i) val(comparator = comparator)) 0))
            {
              { scopeless
                (291582 return(291580 call _build_tuple 1 i))
              }
            }
          }
          label _continueLabel[291595]
          _indexOfInterest[291590]
          _iterator[291591]
        }
        label _breakLabel[291596]
      }
    }
    (291641 return(291639 call _build_tuple 0(291636 call + hi stride)))
  }
  function linearSearch[291655](arg Data[291652] :
  (291650 call chpl__buildArrayRuntimeType unknown Dom[291647]), arg val[291657]:_any[178](?), arg comparator[291662] :
  unknown rec[291659] =
  defaultComparator, arg lo[291670] =
  (291667 call . Dom c"alignedLow"), arg hi[291677] =
  (291674 call . Dom c"alignedHigh")) : _unknown[51] "no doc"
  {
    (291706 call compilerError "linearSearch() requires 1-D array")
  }
  where {
    (291685 call !=(291681 call . Dom c"rank") 1)
  }
  function binarySearch[291722](arg Data[291719] :
  (291717 call chpl__buildArrayRuntimeType unknown Dom[291714]), arg val[291724]:_any[178](?), arg comparator[291729] :
  unknown rec[291726] =
  defaultComparator, in arg lo[291737] =
  (291734 call . Dom c"alignedLow"), in arg hi[291744] =
  (291741 call . Dom c"alignedHigh")) : _unknown[51]
  {
    (291754 call chpl_check_comparator comparator(291751 call . Data c"eltType"))
    { scopeless
      const stride[291772] "const"(291769 IfExpr (291758 call . Dom c"stridable") then
      { scopeless
        (291767 call abs(291763 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (291775 'end of statement')
    }
    {
      unknown tmp[291897] "temp"
      (291921 'move' tmp[291897](291916 call _cond_test(291918 call <= lo hi)))
      WhileDo[291902]
      {
        {
          { scopeless
            const size[291787] "const"(291785 call /(291782 call - hi lo) stride)
            const mid[291831] "const"(291828 IfExpr (291792 call == hi lo) then
            { scopeless
              hi
            } else
            { scopeless(291825 IfExpr (291797 call % size 2) then
              { scopeless
                (291810 call + lo(291808 call *(291805 call /(291802 call - size 1) 2) stride))
              } else
              { scopeless
                (291823 call + lo(291821 call *(291818 call -(291815 call / size 2) 1) stride))
              } )
            } )
            (291834 'end of statement')
          }
          if(291891 call _cond_test(291847 call ==(291845 call chpl_compare(291840 call Data mid) val(comparator = comparator)) 0))
          {
            { scopeless
              (291854 return(291852 call _build_tuple 1 mid))
            }
          }
          {
            { scopeless
              if(291885 call _cond_test(291867 call >(291865 call chpl_compare val(291862 call Data mid)(comparator = comparator)) 0))
              {
                { scopeless
                  (291874 call = lo(291872 call + mid stride))
                }
              }
              {
                { scopeless
                  (291882 call = hi(291880 call - mid stride))
                }
              }
            }
          }
        }
        label _continueLabel[291900]
        (291911 'move' tmp[291897](291906 call _cond_test(291908 call <= lo hi)))
        tmp[291897]
      }
      label _breakLabel[291901]
    }
    (291929 return(291927 call _build_tuple 0 lo))
  }
  function binarySearch[291943](arg Data[291940] :
  (291938 call chpl__buildArrayRuntimeType unknown Dom[291935]), arg val[291945]:_any[178](?), arg comparator[291950] :
  unknown rec[291947] =
  defaultComparator, in arg lo[291958] =
  (291955 call . Dom c"alignedLow"), in arg hi[291965] =
  (291962 call . Dom c"alignedHigh")) : _unknown[51] "no doc"
  {
    (291981 call chpl_check_comparator comparator(291978 call . Data c"eltType"))
    {
      unknown tmp[292064] "temp"
      (292088 'move' tmp[292064](292083 call _cond_test(292085 call <= lo hi)))
      WhileDo[292069]
      {
        {
          { scopeless
            const mid[291998] "const"(291996 call +(291993 call /(291990 call - hi lo) 2) lo)
            (292001 'end of statement')
          }
          if(292058 call _cond_test(292014 call ==(292012 call chpl_compare(292007 call Data mid) val(comparator = comparator)) 0))
          {
            { scopeless
              (292021 return(292019 call _build_tuple 1 mid))
            }
          }
          {
            { scopeless
              if(292052 call _cond_test(292034 call >(292032 call chpl_compare val(292029 call Data mid)(comparator = comparator)) 0))
              {
                { scopeless
                  (292041 call = lo(292039 call + mid 1))
                }
              }
              {
                { scopeless
                  (292049 call = hi(292047 call - mid 1))
                }
              }
            }
          }
        }
        label _continueLabel[292067]
        (292078 'move' tmp[292064](292073 call _cond_test(292075 call <= lo hi)))
        tmp[292064]
      }
      label _breakLabel[292068]
    }
    (292096 return(292094 call _build_tuple 0 lo))
  }
  where {
    (291972 call !(291969 call . Dom c"stridable"))
  }
  function binarySearch[292111](arg Data[292108] :
  (292106 call chpl__buildArrayRuntimeType unknown Dom[292103]), arg val[292113]:_any[178](?), arg comparator[292118] :
  unknown rec[292115] =
  defaultComparator, in arg lo[292126] =
  (292123 call . Dom c"alignedLow"), in arg hi[292133] =
  (292130 call . Dom c"alignedHigh")) : _unknown[51] "no doc"
  {
    (292162 call compilerError "binarySearch() requires 1-D array")
  }
  where {
    (292141 call !=(292137 call . Dom c"rank") 1)
  }
}