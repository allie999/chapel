AST dump for ChapelTaskDataHelp after pass refPropagation.
Module use list: ChapelStandard 

{
  function chpl__init_ChapelTaskDataHelp[415877]() : void[4] "insert line file info" "module init" "resolved"
  {
    (513236 return _void[55])
  }
  type chpl_task_infoChapel_t[88577]
  function chpl_task_getInfoChapel[88581]() : c_ptr(chpl_task_infoChapel_t)[1486530] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513220]:c_ptr(chpl_task_infoChapel_t)[1486530] "RVV" "temp"
    (513222 return ret[513220])
  }
  function chpl_task_getInfoChapelInBundle[88596](const in arg args[88593]:chpl_task_bundle_p[209323]) : c_ptr(chpl_task_infoChapel_t)[1486530] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[513226]:c_ptr(chpl_task_infoChapel_t)[1486530] "RVV" "temp"
    (513228 return ret[513226])
  }
  function chpl_task_data_setup[88611](const in arg args[88608]:chpl_task_bundle_p[209323], const in arg infoChapel[88617]:c_ptr(chpl_task_infoChapel_t)[1486530]) : void[4] "resolved" "no return value for void"
  {
    val call_tmp[631839]:c_ptr(chpl_task_infoChapel_t)[1486530] "dead after last mention" "expr temp" "maybe param" "temp"
    (631842 'move' call_tmp[631839](88624 call chpl_task_getInfoChapelInBundle[88596] args[88608]))
    const-val call_tmp[631844]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val call_tmp[2255568]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2255570 'move' call_tmp[2255568](2255573 call sizeof[1356895] chpl_task_infoChapel_t[88577]))
    (631847 'move' call_tmp[631844] call_tmp[2255568])
    const-val coerce_tmp[1487058]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487064 'move' coerce_tmp[1487058](1487060 'cast' c_void_ptr[149] call_tmp[631839]))
    const-val coerce_tmp[1487066]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1487072 'move' coerce_tmp[1487066](1487068 'cast' c_void_ptr[149] infoChapel[88617]))
    (2141532 call memcpy[955988] coerce_tmp[1487058] coerce_tmp[1487066] call_tmp[631844])
    (513230 return _void[55])
  }
  function chpl_save_task_error[1230587](const in arg e[1230589]:_EndCountBase[12715], const in arg err[1230591]:Error[167938]) : void[4] "instantiated generic" "invisible fn" "resolved" "task complete impl fn" "no return value for void"
  {
    const-val call_tmp[1230597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1230647]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1230652 'move' coerce_tmp[1230647](1230649 'cast' object[22] err[1230591]))
    const-val call_tmp[2058946]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2058948 'move' call_tmp[2058946](2058950 'ptr_neq' coerce_tmp[1230647] nil[44]))
    (1230599 'move' call_tmp[1230597] call_tmp[2058946])
    const-val call_tmp[1230605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1230607 'move' call_tmp[1230605] call_tmp[1230597])
    if call_tmp[1230605]
    {
      val coerce_tmp[1230665]:_EndCountBase[12715] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1230670 'move' coerce_tmp[1230665] e[1230589])
      ref call_tmp[2159146]:chpl_TaskErrors[168302] "dead after last mention" "maybe param" "temp"
      (2159148 'move' call_tmp[2159146](2159150 '.' coerce_tmp[1230665] errors[12705]))
      val call_tmp[1230622]:Error[167938] "dead after last mention" "expr temp" "maybe param" "temp"
      (1230624 'move' call_tmp[1230622] err[1230591])
      (1230633 call append[168236] call_tmp[2159146] call_tmp[1230622])
    }
    (1230636 return _void[55])
  }
}