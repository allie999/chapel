AST dump for ChapelSerializedBroadcast after pass createTaskFunctions.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[416081]() : void[4] "insert line file info" "module init"
  {
    (544814 'init var' chpl__enableSerializedGlobals[171427] 1)
    (171430 'end of statement')
    (522483 return _void[55])
  }
  unknown chpl__enableSerializedGlobals[171427] "config" "param"
  function chpl_get_global_serialize_table[171437](arg idx[171434]:int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[522475] "RVV" "temp"
    (522477 return ret[522475])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171450](ref arg localeZeroGlobal[171447]:_any[178](?), arg id[171453]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown tmp[428554] "maybe param" "temp"
    (428565 'move' tmp[428554](171460 call isArray localeZeroGlobal[171447]))
    unknown call_tmp[681107] "expr temp" "maybe param" "maybe type" "temp"
    (681110 'move' call_tmp[681107](428567 call _cond_invalid tmp[428554]))
    if call_tmp[681107]
    {
      (428570 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570625] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570626] "maybe param" "temp"
    unknown call_tmp[681112] "expr temp" "maybe param" "maybe type" "temp"
    (681115 'move' call_tmp[681112](428555 call isTrue tmp[428554]))
    (570631 'move' tmp[570626](570629 call _cond_test call_tmp[681112]))
    if tmp[570626]
    {
      unknown tmp[570633] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[681117] "expr temp" "maybe param" "maybe type" "temp"
      (681120 'move' call_tmp[681117](171464 call chpl__isArrayView localeZeroGlobal[171447]))
      (570635 'move' tmp[570633](428558 call isTrue call_tmp[681117]))
      (570640 'move' tmp[570625](570637 '_paramFoldLogical' tmp[570626] tmp[570633]))
    }
    {
      (570645 'move' tmp[570625](570642 '_paramFoldLogical' tmp[570626] 0))
    }
    unknown call_tmp[681122] "expr temp" "maybe param" "maybe type" "temp"
    (681125 'move' call_tmp[681122](171795 call _cond_test tmp[570625]))
    if call_tmp[681122]
    {
      (171486 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[681129] "maybe param" "maybe type" "temp"
      (681132 'move' call_tmp[681129](171494 call(171490 call (partial) chpl__serialize _mt[243] localeZeroGlobal[171447])))
      const data[171495] "dead at end of block" "const" "insert auto destroy"
      (544816 'init var' data[171495] call_tmp[681129])
      (171498 'end of statement')
      unknown call_tmp[681134] "expr temp" "maybe param" "maybe type" "temp"
      (681137 'move' call_tmp[681134](361490 call here[90439]))
      unknown call_tmp[681141] "maybe param" "maybe type" "temp"
      (681144 'move' call_tmp[681141](171501 call id _mt[243] call_tmp[681134]))
      const root[171504] "dead at end of block" "const" "insert auto destroy"
      (544818 'init var' root[171504] call_tmp[681141])
      (171507 'end of statement')
      {
        unknown tmpIter[171578] "expr temp" "maybe ref" "no copy" "temp"
        (171581 'move' tmpIter[171578] Locales[113668])
        unknown isRngDomArr[171776] "maybe param" "temp"
        unknown tmp[428512] "maybe param" "temp"
        (428523 'move' tmp[428512](171778 call isBoundedRange tmpIter[171578]))
        unknown call_tmp[681146] "expr temp" "maybe param" "maybe type" "temp"
        (681149 'move' call_tmp[681146](428525 call _cond_invalid tmp[428512]))
        if call_tmp[681146]
        {
          (428528 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570679] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570680] "maybe param" "temp"
        unknown call_tmp[681151] "expr temp" "maybe param" "maybe type" "temp"
        (681154 'move' call_tmp[681151](428513 call isTrue tmp[428512]))
        (570685 'move' tmp[570680](570683 call _cond_test call_tmp[681151]))
        if tmp[570680]
        {
          (570690 'move' tmp[570679](570687 '_paramFoldLogical' tmp[570680] 1))
        }
        {
          unknown tmp[428533] "maybe param" "temp"
          (428544 'move' tmp[428533](171781 call isDomain tmpIter[171578]))
          unknown call_tmp[681156] "expr temp" "maybe param" "maybe type" "temp"
          (681159 'move' call_tmp[681156](428546 call _cond_invalid tmp[428533]))
          if call_tmp[681156]
          {
            (428549 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570652] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570653] "maybe param" "temp"
          unknown call_tmp[681161] "expr temp" "maybe param" "maybe type" "temp"
          (681164 'move' call_tmp[681161](428534 call isTrue tmp[428533]))
          (570658 'move' tmp[570653](570656 call _cond_test call_tmp[681161]))
          if tmp[570653]
          {
            (570663 'move' tmp[570652](570660 '_paramFoldLogical' tmp[570653] 1))
          }
          {
            unknown tmp[570665] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[681166] "expr temp" "maybe param" "maybe type" "temp"
            (681169 'move' call_tmp[681166](171784 call isArray tmpIter[171578]))
            (570667 'move' tmp[570665](428538 call isTrue call_tmp[681166]))
            (570672 'move' tmp[570652](570669 '_paramFoldLogical' tmp[570653] tmp[570665]))
          }
          unknown tmp[570692] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570694 'move' tmp[570692](428517 call isTrue tmp[570652]))
          (570699 'move' tmp[570679](570696 '_paramFoldLogical' tmp[570680] tmp[570692]))
        }
        (171791 'move' isRngDomArr[171776] tmp[570679])
        if isRngDomArr[171776]
        {
          const _coforallCount[171643] "const" "end count" "temp"
          (171712 'move' _coforallCount[171643](171709 call _endCountAlloc 1))
          unknown numTasks[171644] "temp"
          (171696 'move' numTasks[171644](171692 call size _mt[243] tmpIter[171578]))
          (171687 call _upEndCount _coforallCount[171643] 1 numTasks[171644])
          (483318 'end of statement')
          (171684 call chpl_resetTaskSpawn numTasks[171644])
          (483319 'end of statement')
          unknown _indexOfInterest[171651] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171652] "expr temp" "temp"
          (171661 'move' _iterator[171652](171659 call _getIterator tmpIter[171578]))
          Defer
          {
            {
              (171677 call _freeIterator _iterator[171652])
            }
          }
          { scopeless type
            (171666 'move' _indexOfInterest[171651](171663 call iteratorIndex _iterator[171652]))
          }
          ForLoop[171653]
          {
            unknown loc[171670] "coforall index var" "index var" "insert auto destroy"
            (483321 'end of statement')
            (171672 'move' loc[171670] _indexOfInterest[171651])
            (483322 'end of statement' loc[171670])
            (934346 call coforall_fn[934344] root[171504] localeZeroGlobal[171447] data[171495] id[171453])
            function coforall_fn[934344](arg root[934351], arg localeZeroGlobal[934354]:_any[178](?), arg data[934357], arg id[934360]:int(64)[13]) : void[4] "cobegin or coforall"
            {
              {
                const tmp[171587] "const" "temp"
                unknown call_tmp[681173] "expr temp" "maybe param" "maybe type" "temp"
                (681176 'move' call_tmp[681173](171592 '_wide_get_locale' loc[171670]))
                (171589 'move' tmp[171587](171591 'deref' call_tmp[681173]))
                {
                  unknown call_tmp[681178] "expr temp" "maybe param" "maybe type" "temp"
                  (681181 'move' call_tmp[681178](361495 call here[90439]))
                  unknown call_tmp[681185] "expr temp" "maybe param" "maybe type" "temp"
                  (681188 'move' call_tmp[681185](171600 call id _mt[243] call_tmp[681178]))
                  unknown call_tmp[681190] "expr temp" "maybe param" "maybe type" "temp"
                  (681193 'move' call_tmp[681190](171598 call != call_tmp[681185] root[934351]))
                  unknown call_tmp[681195] "expr temp" "maybe param" "maybe type" "temp"
                  (681198 'move' call_tmp[681195](171596 call _cond_test call_tmp[681190]))
                  if call_tmp[681195]
                  {
                    unknown call_tmp[681200] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (681203 'move' call_tmp[681200](171609 'typeof' localeZeroGlobal[934354]))
                    unknown call_tmp[681207] "maybe param" "maybe type" "temp"
                    (681210 'move' call_tmp[681207](171612 call(171608 call (partial) chpl__deserialize _mt[243] call_tmp[681200]) data[934357]))
                    unknown temp[171606] "dead at end of block" "no auto destroy" "no copy"
                    (544820 'init var' temp[171606] call_tmp[681207])
                    (171615 'end of statement')
                    unknown call_tmp[681212] "maybe param" "maybe type" "temp"
                    (681215 'move' call_tmp[681212](171619 call chpl_get_global_serialize_table id[934360]))
                    const destVoidPtr[171617] "dead at end of block" "const" "insert auto destroy"
                    (544822 'init var' destVoidPtr[171617] call_tmp[681212])
                    (171622 'end of statement')
                    unknown call_tmp[681217] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (681220 'move' call_tmp[681217](171629 'typeof' localeZeroGlobal[934354]))
                    unknown call_tmp[681222] "expr temp" "maybe param" "maybe type" "temp"
                    (681225 'move' call_tmp[681222](171628 call c_ptr[205057](?) call_tmp[681217]))
                    unknown call_tmp[681227] "maybe param" "maybe type" "temp"
                    (681230 'move' call_tmp[681227](171626 call _cast call_tmp[681222] destVoidPtr[171617]))
                    const dest[171624] "dead at end of block" "const" "insert auto destroy"
                    (544824 'init var' dest[171624] call_tmp[681227])
                    (171633 'end of statement' data[934357] destVoidPtr[171617])
                    unknown call_tmp[681234] "expr temp" "maybe param" "maybe type" "temp"
                    (681237 'move' call_tmp[681234](171639 call(171636 call (partial) deref _mt[243] dest[171624])))
                    (171634 '=' call_tmp[681234] temp[171606])
                    (483326 'end of statement' dest[171624] temp[171606])
                  }
                }
                (171584 'elided on block' 0 tmp[171587])
              }
              (171646 call _downEndCount _coforallCount[171643] nil[44])
              (934349 return _void[55])
            }
            {
            }
            label _continueLabel[171656]
            _indexOfInterest[171651]
            _iterator[171652]
          }
          label _breakLabel[171657]
          Defer
          {
            {
              (171699 call _endCountFree _coforallCount[171643])
            }
          }
          (171704 call _waitEndCount _coforallCount[171643] 1 numTasks[171644])
        }
        {
          const _coforallCount[171716] "const" "end count" "temp"
          (171773 'move' _coforallCount[171716](171770 call _endCountAlloc 1))
          unknown _indexOfInterest[171724] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171725] "expr temp" "temp"
          (171734 'move' _iterator[171725](171732 call _getIterator tmpIter[171578]))
          Defer
          {
            {
              (171750 call _freeIterator _iterator[171725])
            }
          }
          { scopeless type
            (171739 'move' _indexOfInterest[171724](171736 call iteratorIndex _iterator[171725]))
          }
          ForLoop[171726]
          {
            unknown loc[171743] "coforall index var" "index var" "insert auto destroy"
            (483333 'end of statement')
            (171745 'move' loc[171743] _indexOfInterest[171724])
            (483334 'end of statement' loc[171743])
            (171757 call _upEndCount _coforallCount[171716] 1)
            (483336 'end of statement')
            (934365 call coforall_fn[934363] root[171504] localeZeroGlobal[171447] data[171495] id[171453])
            function coforall_fn[934363](arg root[934370], arg localeZeroGlobal[934373]:_any[178](?), arg data[934376], arg id[934379]:int(64)[13]) : void[4] "cobegin or coforall"
            {
              {
                const tmp[171570] "const" "temp"
                unknown call_tmp[681239] "expr temp" "maybe param" "maybe type" "temp"
                (681242 'move' call_tmp[681239](171567 '_wide_get_locale' loc[171743]))
                (171571 'move' tmp[171570](171568 'deref' call_tmp[681239]))
                {
                  unknown call_tmp[681244] "expr temp" "maybe param" "maybe type" "temp"
                  (681247 'move' call_tmp[681244](361492 call here[90439]))
                  unknown call_tmp[681251] "expr temp" "maybe param" "maybe type" "temp"
                  (681254 'move' call_tmp[681251](171512 call id _mt[243] call_tmp[681244]))
                  unknown call_tmp[681256] "expr temp" "maybe param" "maybe type" "temp"
                  (681259 'move' call_tmp[681256](171516 call != call_tmp[681251] root[934370]))
                  unknown call_tmp[681261] "expr temp" "maybe param" "maybe type" "temp"
                  (681264 'move' call_tmp[681261](171562 call _cond_test call_tmp[681256]))
                  if call_tmp[681261]
                  {
                    unknown call_tmp[681266] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (681269 'move' call_tmp[681266](171519 'typeof' localeZeroGlobal[934373]))
                    unknown call_tmp[681273] "maybe param" "maybe type" "temp"
                    (681276 'move' call_tmp[681273](171525 call(171520 call (partial) chpl__deserialize _mt[243] call_tmp[681266]) data[934376]))
                    unknown temp[171526] "dead at end of block" "no auto destroy" "no copy"
                    (544826 'init var' temp[171526] call_tmp[681273])
                    (171529 'end of statement')
                    unknown call_tmp[681278] "maybe param" "maybe type" "temp"
                    (681281 'move' call_tmp[681278](171534 call chpl_get_global_serialize_table id[934379]))
                    const destVoidPtr[171535] "dead at end of block" "const" "insert auto destroy"
                    (544828 'init var' destVoidPtr[171535] call_tmp[681278])
                    (171538 'end of statement')
                    unknown call_tmp[681283] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                    (681286 'move' call_tmp[681283](171542 'typeof' localeZeroGlobal[934373]))
                    unknown call_tmp[681288] "expr temp" "maybe param" "maybe type" "temp"
                    (681291 'move' call_tmp[681288](171544 call c_ptr[205057](?) call_tmp[681283]))
                    unknown call_tmp[681293] "maybe param" "maybe type" "temp"
                    (681296 'move' call_tmp[681293](171545 call _cast call_tmp[681288] destVoidPtr[171535]))
                    const dest[171547] "dead at end of block" "const" "insert auto destroy"
                    (544830 'init var' dest[171547] call_tmp[681293])
                    (171550 'end of statement' data[934376] destVoidPtr[171535])
                    unknown call_tmp[681300] "expr temp" "maybe param" "maybe type" "temp"
                    (681303 'move' call_tmp[681300](171558 call(171554 call (partial) deref _mt[243] dest[171547])))
                    (171560 '=' call_tmp[681300] temp[171526])
                    (483339 'end of statement' dest[171547] temp[171526])
                  }
                }
                (171574 'elided on block' 0 tmp[171570])
              }
              (171719 call _downEndCount _coforallCount[171716] nil[44])
              (934368 return _void[55])
            }
            {
            }
            label _continueLabel[171729]
            _indexOfInterest[171724]
            _iterator[171725]
          }
          label _breakLabel[171730]
          Defer
          {
            {
              (171761 call _endCountFree _coforallCount[171716])
            }
          }
          (171766 call _waitEndCount _coforallCount[171716] 1)
        }
      }
    }
    (522479 return _void[55])
  }
  where {
    (748189 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171427])
  }
  function chpl__destroyBroadcastedGlobal[171807](ref arg localeZeroGlobal[171805]:_any[178](?), arg id[171810]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171816] "dead at end of block" "insert auto destroy" "type variable"(171815 'typeof' localeZeroGlobal[171805])
    (544834 'move' globalType[171816](544832 'typeof' localeZeroGlobal[171805]))
    unknown call_tmp[681305] "expr temp" "maybe param" "maybe type" "temp"
    (681308 'move' call_tmp[681305](361498 call here[90439]))
    unknown call_tmp[681312] "maybe param" "maybe type" "temp"
    (681315 'move' call_tmp[681312](171821 call id _mt[243] call_tmp[681305]))
    const root[171824] "dead at end of block" "const" "insert auto destroy"
    (544836 'init var' root[171824] call_tmp[681312])
    (171827 'end of statement')
    {
      unknown tmpIter[171889] "expr temp" "maybe ref" "no copy" "temp"
      (171892 'move' tmpIter[171889] Locales[113668])
      unknown isRngDomArr[172080] "maybe param" "temp"
      unknown tmp[428575] "maybe param" "temp"
      (428586 'move' tmp[428575](172082 call isBoundedRange tmpIter[171889]))
      unknown call_tmp[681317] "expr temp" "maybe param" "maybe type" "temp"
      (681320 'move' call_tmp[681317](428588 call _cond_invalid tmp[428575]))
      if call_tmp[681317]
      {
        (428591 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570733] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570734] "maybe param" "temp"
      unknown call_tmp[681322] "expr temp" "maybe param" "maybe type" "temp"
      (681325 'move' call_tmp[681322](428576 call isTrue tmp[428575]))
      (570739 'move' tmp[570734](570737 call _cond_test call_tmp[681322]))
      if tmp[570734]
      {
        (570744 'move' tmp[570733](570741 '_paramFoldLogical' tmp[570734] 1))
      }
      {
        unknown tmp[428596] "maybe param" "temp"
        (428607 'move' tmp[428596](172085 call isDomain tmpIter[171889]))
        unknown call_tmp[681327] "expr temp" "maybe param" "maybe type" "temp"
        (681330 'move' call_tmp[681327](428609 call _cond_invalid tmp[428596]))
        if call_tmp[681327]
        {
          (428612 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570706] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570707] "maybe param" "temp"
        unknown call_tmp[681332] "expr temp" "maybe param" "maybe type" "temp"
        (681335 'move' call_tmp[681332](428597 call isTrue tmp[428596]))
        (570712 'move' tmp[570707](570710 call _cond_test call_tmp[681332]))
        if tmp[570707]
        {
          (570717 'move' tmp[570706](570714 '_paramFoldLogical' tmp[570707] 1))
        }
        {
          unknown tmp[570719] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[681337] "expr temp" "maybe param" "maybe type" "temp"
          (681340 'move' call_tmp[681337](172088 call isArray tmpIter[171889]))
          (570721 'move' tmp[570719](428601 call isTrue call_tmp[681337]))
          (570726 'move' tmp[570706](570723 '_paramFoldLogical' tmp[570707] tmp[570719]))
        }
        unknown tmp[570746] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570748 'move' tmp[570746](428580 call isTrue tmp[570706]))
        (570753 'move' tmp[570733](570750 '_paramFoldLogical' tmp[570734] tmp[570746]))
      }
      (172095 'move' isRngDomArr[172080] tmp[570733])
      if isRngDomArr[172080]
      {
        const _coforallCount[171947] "const" "end count" "temp"
        (172016 'move' _coforallCount[171947](172013 call _endCountAlloc 1))
        unknown numTasks[171948] "temp"
        (172000 'move' numTasks[171948](171996 call size _mt[243] tmpIter[171889]))
        (171991 call _upEndCount _coforallCount[171947] 1 numTasks[171948])
        (483346 'end of statement')
        (171988 call chpl_resetTaskSpawn numTasks[171948])
        (483347 'end of statement')
        unknown _indexOfInterest[171955] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171956] "expr temp" "temp"
        (171965 'move' _iterator[171956](171963 call _getIterator tmpIter[171889]))
        Defer
        {
          {
            (171981 call _freeIterator _iterator[171956])
          }
        }
        { scopeless type
          (171970 'move' _indexOfInterest[171955](171967 call iteratorIndex _iterator[171956]))
        }
        ForLoop[171957]
        {
          unknown loc[171974] "coforall index var" "index var" "insert auto destroy"
          (483349 'end of statement')
          (171976 'move' loc[171974] _indexOfInterest[171955])
          (483350 'end of statement' loc[171974])
          (934384 call coforall_fn[934382] root[171824] id[171810])
          function coforall_fn[934382](arg root[934389], arg id[934392]:int(64)[13]) : void[4] "cobegin or coforall"
          {
            {
              const tmp[171898] "const" "temp"
              unknown call_tmp[681344] "expr temp" "maybe param" "maybe type" "temp"
              (681347 'move' call_tmp[681344](171903 '_wide_get_locale' loc[171974]))
              (171900 'move' tmp[171898](171902 'deref' call_tmp[681344]))
              {
                unknown call_tmp[681349] "expr temp" "maybe param" "maybe type" "temp"
                (681352 'move' call_tmp[681349](361503 call here[90439]))
                unknown call_tmp[681356] "expr temp" "maybe param" "maybe type" "temp"
                (681359 'move' call_tmp[681356](171911 call id _mt[243] call_tmp[681349]))
                unknown call_tmp[681361] "expr temp" "maybe param" "maybe type" "temp"
                (681364 'move' call_tmp[681361](171909 call != call_tmp[681356] root[934389]))
                unknown call_tmp[681366] "expr temp" "maybe param" "maybe type" "temp"
                (681369 'move' call_tmp[681366](171907 call _cond_test call_tmp[681361]))
                if call_tmp[681366]
                {
                  unknown call_tmp[681371] "maybe param" "maybe type" "temp"
                  (681374 'move' call_tmp[681371](171919 call chpl_get_global_serialize_table id[934392]))
                  const voidPtr[171917] "dead at end of block" "const" "insert auto destroy"
                  (544838 'init var' voidPtr[171917] call_tmp[681371])
                  (171922 'end of statement')
                  unknown call_tmp[681376] "expr temp" "maybe param" "maybe type" "temp"
                  (681379 'move' call_tmp[681376](171928 call c_ptr[205057](?) globalType[171816]))
                  unknown call_tmp[681381] "maybe param" "maybe type" "temp"
                  (681384 'move' call_tmp[681381](171926 call _cast call_tmp[681376] voidPtr[171917]))
                  unknown ptr[171924] "dead at end of block" "insert auto destroy"
                  (544840 'init var' ptr[171924] call_tmp[681381])
                  (171932 'end of statement')
                  unknown call_tmp[681388] "maybe param" "maybe type" "temp"
                  (681391 'move' call_tmp[681388](171939 call(171936 call (partial) deref _mt[243] ptr[171924])))
                  unknown temp[171934] "dead at end of block" "no auto destroy" "no copy"
                  (544842 'init var' temp[171934] call_tmp[681388])
                  (171941 'end of statement' globalType[171816] voidPtr[171917] ptr[171924])
                  (171943 call chpl__autoDestroy temp[171934])
                  (483355 'end of statement' temp[171934])
                }
              }
              (171895 'elided on block' 0 tmp[171898])
            }
            (171950 call _downEndCount _coforallCount[171947] nil[44])
            (934387 return _void[55])
          }
          {
          }
          label _continueLabel[171960]
          _indexOfInterest[171955]
          _iterator[171956]
        }
        label _breakLabel[171961]
        Defer
        {
          {
            (172003 call _endCountFree _coforallCount[171947])
          }
        }
        (172008 call _waitEndCount _coforallCount[171947] 1 numTasks[171948])
      }
      {
        const _coforallCount[172020] "const" "end count" "temp"
        (172077 'move' _coforallCount[172020](172074 call _endCountAlloc 1))
        unknown _indexOfInterest[172028] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172029] "expr temp" "temp"
        (172038 'move' _iterator[172029](172036 call _getIterator tmpIter[171889]))
        Defer
        {
          {
            (172054 call _freeIterator _iterator[172029])
          }
        }
        { scopeless type
          (172043 'move' _indexOfInterest[172028](172040 call iteratorIndex _iterator[172029]))
        }
        ForLoop[172030]
        {
          unknown loc[172047] "coforall index var" "index var" "insert auto destroy"
          (483361 'end of statement')
          (172049 'move' loc[172047] _indexOfInterest[172028])
          (483362 'end of statement' loc[172047])
          (172061 call _upEndCount _coforallCount[172020] 1)
          (483364 'end of statement')
          (934397 call coforall_fn[934395] root[171824] id[171810])
          function coforall_fn[934395](arg root[934402], arg id[934405]:int(64)[13]) : void[4] "cobegin or coforall"
          {
            {
              const tmp[171881] "const" "temp"
              unknown call_tmp[681393] "expr temp" "maybe param" "maybe type" "temp"
              (681396 'move' call_tmp[681393](171878 '_wide_get_locale' loc[172047]))
              (171882 'move' tmp[171881](171879 'deref' call_tmp[681393]))
              {
                unknown call_tmp[681398] "expr temp" "maybe param" "maybe type" "temp"
                (681401 'move' call_tmp[681398](361500 call here[90439]))
                unknown call_tmp[681405] "expr temp" "maybe param" "maybe type" "temp"
                (681408 'move' call_tmp[681405](171832 call id _mt[243] call_tmp[681398]))
                unknown call_tmp[681410] "expr temp" "maybe param" "maybe type" "temp"
                (681413 'move' call_tmp[681410](171836 call != call_tmp[681405] root[934402]))
                unknown call_tmp[681415] "expr temp" "maybe param" "maybe type" "temp"
                (681418 'move' call_tmp[681415](171873 call _cond_test call_tmp[681410]))
                if call_tmp[681415]
                {
                  unknown call_tmp[681420] "maybe param" "maybe type" "temp"
                  (681423 'move' call_tmp[681420](171841 call chpl_get_global_serialize_table id[934405]))
                  const voidPtr[171842] "dead at end of block" "const" "insert auto destroy"
                  (544844 'init var' voidPtr[171842] call_tmp[681420])
                  (171845 'end of statement')
                  unknown call_tmp[681425] "expr temp" "maybe param" "maybe type" "temp"
                  (681428 'move' call_tmp[681425](171851 call c_ptr[205057](?) globalType[171816]))
                  unknown call_tmp[681430] "maybe param" "maybe type" "temp"
                  (681433 'move' call_tmp[681430](171852 call _cast call_tmp[681425] voidPtr[171842]))
                  unknown ptr[171854] "dead at end of block" "insert auto destroy"
                  (544846 'init var' ptr[171854] call_tmp[681430])
                  (171857 'end of statement')
                  unknown call_tmp[681437] "maybe param" "maybe type" "temp"
                  (681440 'move' call_tmp[681437](171863 call(171859 call (partial) deref _mt[243] ptr[171854])))
                  unknown temp[171864] "dead at end of block" "no auto destroy" "no copy"
                  (544848 'init var' temp[171864] call_tmp[681437])
                  (171867 'end of statement' globalType[171816] voidPtr[171842] ptr[171854])
                  (171871 call chpl__autoDestroy temp[171864])
                  (483368 'end of statement' temp[171864])
                }
              }
              (171885 'elided on block' 0 tmp[171881])
            }
            (172023 call _downEndCount _coforallCount[172020] nil[44])
            (934400 return _void[55])
          }
          {
          }
          label _continueLabel[172033]
          _indexOfInterest[172028]
          _iterator[172029]
        }
        label _breakLabel[172034]
        Defer
        {
          {
            (172065 call _endCountFree _coforallCount[172020])
          }
        }
        (172070 call _waitEndCount _coforallCount[172020] 1)
      }
    }
    (522481 return _void[55])
  }
  where {
    (748191 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171427])
  }
  (355239 'used modules list'(171420 'use' ChapelLocale[89848])(171424 'use' CPtr[204946]))
}