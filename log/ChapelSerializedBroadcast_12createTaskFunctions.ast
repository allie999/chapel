AST dump for ChapelSerializedBroadcast after pass createTaskFunctions.
Module use list: ChapelLocale CPtr 

{
  function chpl__init_ChapelSerializedBroadcast[415934]() : void[4] "insert line file info" "module init"
  {
    (544659 'init var' chpl__enableSerializedGlobals[171423] 1)
    (171426 'end of statement')
    (522328 return _void[55])
  }
  unknown chpl__enableSerializedGlobals[171423] "config" "param"
  function chpl_get_global_serialize_table[171433](arg idx[171430]:int(64)[13]) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
  {
    unknown ret[522320] "RVV" "temp"
    (522322 return ret[522320])
  }
  { scopeless type
    c_void_ptr[149]
  }
  function chpl__broadcastGlobal[171446](ref arg localeZeroGlobal[171443]:_any[178](?), arg id[171449]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown tmp[428407] "maybe param" "temp"
    (428418 'move' tmp[428407](171456 call isArray localeZeroGlobal[171443]))
    unknown call_tmp[680969] "expr temp" "maybe param" "maybe type" "temp"
    (680972 'move' call_tmp[680969](428420 call _cond_invalid tmp[428407]))
    if call_tmp[680969]
    {
      (428423 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[570487] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[570488] "maybe param" "temp"
    unknown call_tmp[680974] "expr temp" "maybe param" "maybe type" "temp"
    (680977 'move' call_tmp[680974](428408 call isTrue tmp[428407]))
    (570493 'move' tmp[570488](570491 call _cond_test call_tmp[680974]))
    if tmp[570488]
    {
      unknown tmp[570495] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[680979] "expr temp" "maybe param" "maybe type" "temp"
      (680982 'move' call_tmp[680979](171460 call chpl__isArrayView localeZeroGlobal[171443]))
      (570497 'move' tmp[570495](428411 call isTrue call_tmp[680979]))
      (570502 'move' tmp[570487](570499 '_paramFoldLogical' tmp[570488] tmp[570495]))
    }
    {
      (570507 'move' tmp[570487](570504 '_paramFoldLogical' tmp[570488] 0))
    }
    unknown call_tmp[680984] "expr temp" "maybe param" "maybe type" "temp"
    (680987 'move' call_tmp[680984](171787 call _cond_test tmp[570487]))
    if call_tmp[680984]
    {
      (171482 call halt "internal error: can't broadcast module-scope arrays yet")
    }
    {
      unknown call_tmp[680991] "maybe param" "maybe type" "temp"
      (680994 'move' call_tmp[680991](171490 call(171486 call (partial) chpl__serialize _mt[243] localeZeroGlobal[171443])))
      const data[171491] "dead at end of block" "const" "insert auto destroy"
      (544661 'init var' data[171491] call_tmp[680991])
      (171494 'end of statement')
      unknown call_tmp[680996] "expr temp" "maybe param" "maybe type" "temp"
      (680999 'move' call_tmp[680996](361345 call here[90435]))
      unknown call_tmp[681003] "maybe param" "maybe type" "temp"
      (681006 'move' call_tmp[681003](171497 call id _mt[243] call_tmp[680996]))
      const root[171500] "dead at end of block" "const" "insert auto destroy"
      (544663 'init var' root[171500] call_tmp[681003])
      (171503 'end of statement')
      {
        unknown tmpIter[171574] "expr temp" "maybe ref" "no copy" "temp"
        (171577 'move' tmpIter[171574] Locales[113656])
        unknown isRngDomArr[171768] "maybe param" "temp"
        unknown tmp[428365] "maybe param" "temp"
        (428376 'move' tmp[428365](171770 call isBoundedRange tmpIter[171574]))
        unknown call_tmp[681008] "expr temp" "maybe param" "maybe type" "temp"
        (681011 'move' call_tmp[681008](428378 call _cond_invalid tmp[428365]))
        if call_tmp[681008]
        {
          (428381 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570541] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570542] "maybe param" "temp"
        unknown call_tmp[681013] "expr temp" "maybe param" "maybe type" "temp"
        (681016 'move' call_tmp[681013](428366 call isTrue tmp[428365]))
        (570547 'move' tmp[570542](570545 call _cond_test call_tmp[681013]))
        if tmp[570542]
        {
          (570552 'move' tmp[570541](570549 '_paramFoldLogical' tmp[570542] 1))
        }
        {
          unknown tmp[428386] "maybe param" "temp"
          (428397 'move' tmp[428386](171773 call isDomain tmpIter[171574]))
          unknown call_tmp[681018] "expr temp" "maybe param" "maybe type" "temp"
          (681021 'move' call_tmp[681018](428399 call _cond_invalid tmp[428386]))
          if call_tmp[681018]
          {
            (428402 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[570514] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[570515] "maybe param" "temp"
          unknown call_tmp[681023] "expr temp" "maybe param" "maybe type" "temp"
          (681026 'move' call_tmp[681023](428387 call isTrue tmp[428386]))
          (570520 'move' tmp[570515](570518 call _cond_test call_tmp[681023]))
          if tmp[570515]
          {
            (570525 'move' tmp[570514](570522 '_paramFoldLogical' tmp[570515] 1))
          }
          {
            unknown tmp[570527] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[681028] "expr temp" "maybe param" "maybe type" "temp"
            (681031 'move' call_tmp[681028](171776 call isArray tmpIter[171574]))
            (570529 'move' tmp[570527](428391 call isTrue call_tmp[681028]))
            (570534 'move' tmp[570514](570531 '_paramFoldLogical' tmp[570515] tmp[570527]))
          }
          unknown tmp[570554] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (570556 'move' tmp[570554](428370 call isTrue tmp[570514]))
          (570561 'move' tmp[570541](570558 '_paramFoldLogical' tmp[570542] tmp[570554]))
        }
        (171783 'move' isRngDomArr[171768] tmp[570541])
        if isRngDomArr[171768]
        {
          const _coforallCount[171640] "const" "end count" "temp"
          (171705 'move' _coforallCount[171640](171702 call _endCountAlloc 0))
          unknown numTasks[171641] "temp"
          (171689 'move' numTasks[171641](171685 call size _mt[243] tmpIter[171574]))
          (171680 call _upEndCount _coforallCount[171640] 0 numTasks[171641])
          (483168 'end of statement')
          unknown _indexOfInterest[171647] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171648] "expr temp" "temp"
          (171657 'move' _iterator[171648](171655 call _getIterator tmpIter[171574]))
          Defer
          {
            {
              (171673 call _freeIterator _iterator[171648])
            }
          }
          { scopeless type
            (171662 'move' _indexOfInterest[171647](171659 call iteratorIndex _iterator[171648]))
          }
          ForLoop[171649]
          {
            unknown loc[171666] "coforall index var" "index var" "insert auto destroy"
            (483170 'end of statement')
            (171668 'move' loc[171666] _indexOfInterest[171647])
            (483171 'end of statement' loc[171666])
            const tmp[171580] "const" "temp"
            unknown call_tmp[681035] "expr temp" "maybe param" "maybe type" "temp"
            (681038 'move' call_tmp[681035](171585 '_wide_get_locale' loc[171666]))
            (171582 'move' tmp[171580](171584 'deref' call_tmp[681035]))
            (935283 call on_fn[935279] tmp[171580] root[171500] localeZeroGlobal[171443] data[171491] id[171449])
            function on_fn[935279](const in arg dummy_locale_arg[935281]:chpl_localeID_t[209294], arg root[935288], arg localeZeroGlobal[935291]:_any[178](?), arg data[935294], arg id[935297]:int(64)[13]) : void[4] "cobegin or coforall" "non blocking" "on"
            {
              {
                unknown call_tmp[681040] "expr temp" "maybe param" "maybe type" "temp"
                (681043 'move' call_tmp[681040](361350 call here[90435]))
                unknown call_tmp[681047] "expr temp" "maybe param" "maybe type" "temp"
                (681050 'move' call_tmp[681047](171597 call id _mt[243] call_tmp[681040]))
                unknown call_tmp[681052] "expr temp" "maybe param" "maybe type" "temp"
                (681055 'move' call_tmp[681052](171595 call != call_tmp[681047] root[935288]))
                unknown call_tmp[681057] "expr temp" "maybe param" "maybe type" "temp"
                (681060 'move' call_tmp[681057](171593 call _cond_test call_tmp[681052]))
                if call_tmp[681057]
                {
                  unknown call_tmp[681062] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681065 'move' call_tmp[681062](171606 'typeof' localeZeroGlobal[935291]))
                  unknown call_tmp[681069] "maybe param" "maybe type" "temp"
                  (681072 'move' call_tmp[681069](171609 call(171605 call (partial) chpl__deserialize _mt[243] call_tmp[681062]) data[935294]))
                  unknown temp[171603] "dead at end of block" "no auto destroy" "no copy"
                  (544665 'init var' temp[171603] call_tmp[681069])
                  (171612 'end of statement')
                  unknown call_tmp[681074] "maybe param" "maybe type" "temp"
                  (681077 'move' call_tmp[681074](171616 call chpl_get_global_serialize_table id[935297]))
                  const destVoidPtr[171614] "dead at end of block" "const" "insert auto destroy"
                  (544667 'init var' destVoidPtr[171614] call_tmp[681074])
                  (171619 'end of statement')
                  unknown call_tmp[681079] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681082 'move' call_tmp[681079](171626 'typeof' localeZeroGlobal[935291]))
                  unknown call_tmp[681084] "expr temp" "maybe param" "maybe type" "temp"
                  (681087 'move' call_tmp[681084](171625 call c_ptr[205045](?) call_tmp[681079]))
                  unknown call_tmp[681089] "maybe param" "maybe type" "temp"
                  (681092 'move' call_tmp[681089](171623 call _cast call_tmp[681084] destVoidPtr[171614]))
                  const dest[171621] "dead at end of block" "const" "insert auto destroy"
                  (544669 'init var' dest[171621] call_tmp[681089])
                  (171630 'end of statement' data[935294] destVoidPtr[171614])
                  unknown call_tmp[681096] "expr temp" "maybe param" "maybe type" "temp"
                  (681099 'move' call_tmp[681096](171636 call(171633 call (partial) deref _mt[243] dest[171621])))
                  (171631 '=' call_tmp[681096] temp[171603])
                  (483175 'end of statement' dest[171621] temp[171603])
                }
              }
              (171642 call _downEndCount _coforallCount[171640] nil[44])
              (935286 return _void[55])
            }
            {
            }
            label _continueLabel[171652]
            _indexOfInterest[171647]
            _iterator[171648]
          }
          label _breakLabel[171653]
          Defer
          {
            {
              (171692 call _endCountFree _coforallCount[171640])
            }
          }
          (171697 call _waitEndCount _coforallCount[171640] 0 numTasks[171641])
        }
        {
          const _coforallCount[171709] "const" "end count" "temp"
          (171765 'move' _coforallCount[171709](171762 call _endCountAlloc 0))
          unknown _indexOfInterest[171716] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[171717] "expr temp" "temp"
          (171726 'move' _iterator[171717](171724 call _getIterator tmpIter[171574]))
          Defer
          {
            {
              (171742 call _freeIterator _iterator[171717])
            }
          }
          { scopeless type
            (171731 'move' _indexOfInterest[171716](171728 call iteratorIndex _iterator[171717]))
          }
          ForLoop[171718]
          {
            unknown loc[171735] "coforall index var" "index var" "insert auto destroy"
            (483182 'end of statement')
            (171737 'move' loc[171735] _indexOfInterest[171716])
            (483183 'end of statement' loc[171735])
            (171749 call _upEndCount _coforallCount[171709] 0)
            (483185 'end of statement')
            const tmp[171566] "const" "temp"
            unknown call_tmp[681101] "expr temp" "maybe param" "maybe type" "temp"
            (681104 'move' call_tmp[681101](171563 '_wide_get_locale' loc[171735]))
            (171568 'move' tmp[171566](171564 'deref' call_tmp[681101]))
            (935262 call on_fn[935258] tmp[171566] root[171500] localeZeroGlobal[171443] data[171491] id[171449])
            function on_fn[935258](const in arg dummy_locale_arg[935260]:chpl_localeID_t[209294], arg root[935267], arg localeZeroGlobal[935270]:_any[178](?), arg data[935273], arg id[935276]:int(64)[13]) : void[4] "cobegin or coforall" "non blocking" "on"
            {
              {
                unknown call_tmp[681106] "expr temp" "maybe param" "maybe type" "temp"
                (681109 'move' call_tmp[681106](361347 call here[90435]))
                unknown call_tmp[681113] "expr temp" "maybe param" "maybe type" "temp"
                (681116 'move' call_tmp[681113](171508 call id _mt[243] call_tmp[681106]))
                unknown call_tmp[681118] "expr temp" "maybe param" "maybe type" "temp"
                (681121 'move' call_tmp[681118](171512 call != call_tmp[681113] root[935267]))
                unknown call_tmp[681123] "expr temp" "maybe param" "maybe type" "temp"
                (681126 'move' call_tmp[681123](171558 call _cond_test call_tmp[681118]))
                if call_tmp[681123]
                {
                  unknown call_tmp[681128] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681131 'move' call_tmp[681128](171515 'typeof' localeZeroGlobal[935270]))
                  unknown call_tmp[681135] "maybe param" "maybe type" "temp"
                  (681138 'move' call_tmp[681135](171521 call(171516 call (partial) chpl__deserialize _mt[243] call_tmp[681128]) data[935273]))
                  unknown temp[171522] "dead at end of block" "no auto destroy" "no copy"
                  (544671 'init var' temp[171522] call_tmp[681135])
                  (171525 'end of statement')
                  unknown call_tmp[681140] "maybe param" "maybe type" "temp"
                  (681143 'move' call_tmp[681140](171530 call chpl_get_global_serialize_table id[935276]))
                  const destVoidPtr[171531] "dead at end of block" "const" "insert auto destroy"
                  (544673 'init var' destVoidPtr[171531] call_tmp[681140])
                  (171534 'end of statement')
                  unknown call_tmp[681145] "expr temp" "maybe param" "maybe type" "temp" "type variable"
                  (681148 'move' call_tmp[681145](171538 'typeof' localeZeroGlobal[935270]))
                  unknown call_tmp[681150] "expr temp" "maybe param" "maybe type" "temp"
                  (681153 'move' call_tmp[681150](171540 call c_ptr[205045](?) call_tmp[681145]))
                  unknown call_tmp[681155] "maybe param" "maybe type" "temp"
                  (681158 'move' call_tmp[681155](171541 call _cast call_tmp[681150] destVoidPtr[171531]))
                  const dest[171543] "dead at end of block" "const" "insert auto destroy"
                  (544675 'init var' dest[171543] call_tmp[681155])
                  (171546 'end of statement' data[935273] destVoidPtr[171531])
                  unknown call_tmp[681162] "expr temp" "maybe param" "maybe type" "temp"
                  (681165 'move' call_tmp[681162](171554 call(171550 call (partial) deref _mt[243] dest[171543])))
                  (171556 '=' call_tmp[681162] temp[171522])
                  (483188 'end of statement' dest[171543] temp[171522])
                }
              }
              (171711 call _downEndCount _coforallCount[171709] nil[44])
              (935265 return _void[55])
            }
            {
            }
            label _continueLabel[171721]
            _indexOfInterest[171716]
            _iterator[171717]
          }
          label _breakLabel[171722]
          Defer
          {
            {
              (171753 call _endCountFree _coforallCount[171709])
            }
          }
          (171758 call _waitEndCount _coforallCount[171709] 0)
        }
      }
    }
    (522324 return _void[55])
  }
  where {
    (748061 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171423])
  }
  function chpl__destroyBroadcastedGlobal[171799](ref arg localeZeroGlobal[171797]:_any[178](?), arg id[171802]:int(64)[13]) : _unknown[51] "no return value for void"
  {
    unknown globalType[171808] "dead at end of block" "insert auto destroy" "type variable"(171807 'typeof' localeZeroGlobal[171797])
    (544679 'move' globalType[171808](544677 'typeof' localeZeroGlobal[171797]))
    unknown call_tmp[681167] "expr temp" "maybe param" "maybe type" "temp"
    (681170 'move' call_tmp[681167](361353 call here[90435]))
    unknown call_tmp[681174] "maybe param" "maybe type" "temp"
    (681177 'move' call_tmp[681174](171813 call id _mt[243] call_tmp[681167]))
    const root[171816] "dead at end of block" "const" "insert auto destroy"
    (544681 'init var' root[171816] call_tmp[681174])
    (171819 'end of statement')
    {
      unknown tmpIter[171881] "expr temp" "maybe ref" "no copy" "temp"
      (171884 'move' tmpIter[171881] Locales[113656])
      unknown isRngDomArr[172068] "maybe param" "temp"
      unknown tmp[428428] "maybe param" "temp"
      (428439 'move' tmp[428428](172070 call isBoundedRange tmpIter[171881]))
      unknown call_tmp[681179] "expr temp" "maybe param" "maybe type" "temp"
      (681182 'move' call_tmp[681179](428441 call _cond_invalid tmp[428428]))
      if call_tmp[681179]
      {
        (428444 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[570595] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[570596] "maybe param" "temp"
      unknown call_tmp[681184] "expr temp" "maybe param" "maybe type" "temp"
      (681187 'move' call_tmp[681184](428429 call isTrue tmp[428428]))
      (570601 'move' tmp[570596](570599 call _cond_test call_tmp[681184]))
      if tmp[570596]
      {
        (570606 'move' tmp[570595](570603 '_paramFoldLogical' tmp[570596] 1))
      }
      {
        unknown tmp[428449] "maybe param" "temp"
        (428460 'move' tmp[428449](172073 call isDomain tmpIter[171881]))
        unknown call_tmp[681189] "expr temp" "maybe param" "maybe type" "temp"
        (681192 'move' call_tmp[681189](428462 call _cond_invalid tmp[428449]))
        if call_tmp[681189]
        {
          (428465 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[570568] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[570569] "maybe param" "temp"
        unknown call_tmp[681194] "expr temp" "maybe param" "maybe type" "temp"
        (681197 'move' call_tmp[681194](428450 call isTrue tmp[428449]))
        (570574 'move' tmp[570569](570572 call _cond_test call_tmp[681194]))
        if tmp[570569]
        {
          (570579 'move' tmp[570568](570576 '_paramFoldLogical' tmp[570569] 1))
        }
        {
          unknown tmp[570581] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[681199] "expr temp" "maybe param" "maybe type" "temp"
          (681202 'move' call_tmp[681199](172076 call isArray tmpIter[171881]))
          (570583 'move' tmp[570581](428454 call isTrue call_tmp[681199]))
          (570588 'move' tmp[570568](570585 '_paramFoldLogical' tmp[570569] tmp[570581]))
        }
        unknown tmp[570608] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (570610 'move' tmp[570608](428433 call isTrue tmp[570568]))
        (570615 'move' tmp[570595](570612 '_paramFoldLogical' tmp[570596] tmp[570608]))
      }
      (172083 'move' isRngDomArr[172068] tmp[570595])
      if isRngDomArr[172068]
      {
        const _coforallCount[171940] "const" "end count" "temp"
        (172005 'move' _coforallCount[171940](172002 call _endCountAlloc 0))
        unknown numTasks[171941] "temp"
        (171989 'move' numTasks[171941](171985 call size _mt[243] tmpIter[171881]))
        (171980 call _upEndCount _coforallCount[171940] 0 numTasks[171941])
        (483195 'end of statement')
        unknown _indexOfInterest[171947] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[171948] "expr temp" "temp"
        (171957 'move' _iterator[171948](171955 call _getIterator tmpIter[171881]))
        Defer
        {
          {
            (171973 call _freeIterator _iterator[171948])
          }
        }
        { scopeless type
          (171962 'move' _indexOfInterest[171947](171959 call iteratorIndex _iterator[171948]))
        }
        ForLoop[171949]
        {
          unknown loc[171966] "coforall index var" "index var" "insert auto destroy"
          (483197 'end of statement')
          (171968 'move' loc[171966] _indexOfInterest[171947])
          (483198 'end of statement' loc[171966])
          const tmp[171887] "const" "temp"
          unknown call_tmp[681206] "expr temp" "maybe param" "maybe type" "temp"
          (681209 'move' call_tmp[681206](171892 '_wide_get_locale' loc[171966]))
          (171889 'move' tmp[171887](171891 'deref' call_tmp[681206]))
          (935319 call on_fn[935315] tmp[171887] root[171816] id[171802])
          function on_fn[935315](const in arg dummy_locale_arg[935317]:chpl_localeID_t[209294], arg root[935324], arg id[935327]:int(64)[13]) : void[4] "cobegin or coforall" "non blocking" "on"
          {
            {
              unknown call_tmp[681211] "expr temp" "maybe param" "maybe type" "temp"
              (681214 'move' call_tmp[681211](361358 call here[90435]))
              unknown call_tmp[681218] "expr temp" "maybe param" "maybe type" "temp"
              (681221 'move' call_tmp[681218](171904 call id _mt[243] call_tmp[681211]))
              unknown call_tmp[681223] "expr temp" "maybe param" "maybe type" "temp"
              (681226 'move' call_tmp[681223](171902 call != call_tmp[681218] root[935324]))
              unknown call_tmp[681228] "expr temp" "maybe param" "maybe type" "temp"
              (681231 'move' call_tmp[681228](171900 call _cond_test call_tmp[681223]))
              if call_tmp[681228]
              {
                unknown call_tmp[681233] "maybe param" "maybe type" "temp"
                (681236 'move' call_tmp[681233](171912 call chpl_get_global_serialize_table id[935327]))
                const voidPtr[171910] "dead at end of block" "const" "insert auto destroy"
                (544683 'init var' voidPtr[171910] call_tmp[681233])
                (171915 'end of statement')
                unknown call_tmp[681238] "expr temp" "maybe param" "maybe type" "temp"
                (681241 'move' call_tmp[681238](171921 call c_ptr[205045](?) globalType[171808]))
                unknown call_tmp[681243] "maybe param" "maybe type" "temp"
                (681246 'move' call_tmp[681243](171919 call _cast call_tmp[681238] voidPtr[171910]))
                unknown ptr[171917] "dead at end of block" "insert auto destroy"
                (544685 'init var' ptr[171917] call_tmp[681243])
                (171925 'end of statement')
                unknown call_tmp[681250] "maybe param" "maybe type" "temp"
                (681253 'move' call_tmp[681250](171932 call(171929 call (partial) deref _mt[243] ptr[171917])))
                unknown temp[171927] "dead at end of block" "no auto destroy" "no copy"
                (544687 'init var' temp[171927] call_tmp[681250])
                (171934 'end of statement' globalType[171808] voidPtr[171910] ptr[171917])
                (171936 call chpl__autoDestroy temp[171927])
                (483203 'end of statement' temp[171927])
              }
            }
            (171942 call _downEndCount _coforallCount[171940] nil[44])
            (935322 return _void[55])
          }
          {
          }
          label _continueLabel[171952]
          _indexOfInterest[171947]
          _iterator[171948]
        }
        label _breakLabel[171953]
        Defer
        {
          {
            (171992 call _endCountFree _coforallCount[171940])
          }
        }
        (171997 call _waitEndCount _coforallCount[171940] 0 numTasks[171941])
      }
      {
        const _coforallCount[172009] "const" "end count" "temp"
        (172065 'move' _coforallCount[172009](172062 call _endCountAlloc 0))
        unknown _indexOfInterest[172016] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[172017] "expr temp" "temp"
        (172026 'move' _iterator[172017](172024 call _getIterator tmpIter[171881]))
        Defer
        {
          {
            (172042 call _freeIterator _iterator[172017])
          }
        }
        { scopeless type
          (172031 'move' _indexOfInterest[172016](172028 call iteratorIndex _iterator[172017]))
        }
        ForLoop[172018]
        {
          unknown loc[172035] "coforall index var" "index var" "insert auto destroy"
          (483209 'end of statement')
          (172037 'move' loc[172035] _indexOfInterest[172016])
          (483210 'end of statement' loc[172035])
          (172049 call _upEndCount _coforallCount[172009] 0)
          (483212 'end of statement')
          const tmp[171873] "const" "temp"
          unknown call_tmp[681255] "expr temp" "maybe param" "maybe type" "temp"
          (681258 'move' call_tmp[681255](171870 '_wide_get_locale' loc[172035]))
          (171875 'move' tmp[171873](171871 'deref' call_tmp[681255]))
          (935304 call on_fn[935300] tmp[171873] root[171816] id[171802])
          function on_fn[935300](const in arg dummy_locale_arg[935302]:chpl_localeID_t[209294], arg root[935309], arg id[935312]:int(64)[13]) : void[4] "cobegin or coforall" "non blocking" "on"
          {
            {
              unknown call_tmp[681260] "expr temp" "maybe param" "maybe type" "temp"
              (681263 'move' call_tmp[681260](361355 call here[90435]))
              unknown call_tmp[681267] "expr temp" "maybe param" "maybe type" "temp"
              (681270 'move' call_tmp[681267](171824 call id _mt[243] call_tmp[681260]))
              unknown call_tmp[681272] "expr temp" "maybe param" "maybe type" "temp"
              (681275 'move' call_tmp[681272](171828 call != call_tmp[681267] root[935309]))
              unknown call_tmp[681277] "expr temp" "maybe param" "maybe type" "temp"
              (681280 'move' call_tmp[681277](171865 call _cond_test call_tmp[681272]))
              if call_tmp[681277]
              {
                unknown call_tmp[681282] "maybe param" "maybe type" "temp"
                (681285 'move' call_tmp[681282](171833 call chpl_get_global_serialize_table id[935312]))
                const voidPtr[171834] "dead at end of block" "const" "insert auto destroy"
                (544689 'init var' voidPtr[171834] call_tmp[681282])
                (171837 'end of statement')
                unknown call_tmp[681287] "expr temp" "maybe param" "maybe type" "temp"
                (681290 'move' call_tmp[681287](171843 call c_ptr[205045](?) globalType[171808]))
                unknown call_tmp[681292] "maybe param" "maybe type" "temp"
                (681295 'move' call_tmp[681292](171844 call _cast call_tmp[681287] voidPtr[171834]))
                unknown ptr[171846] "dead at end of block" "insert auto destroy"
                (544691 'init var' ptr[171846] call_tmp[681292])
                (171849 'end of statement')
                unknown call_tmp[681299] "maybe param" "maybe type" "temp"
                (681302 'move' call_tmp[681299](171855 call(171851 call (partial) deref _mt[243] ptr[171846])))
                unknown temp[171856] "dead at end of block" "no auto destroy" "no copy"
                (544693 'init var' temp[171856] call_tmp[681299])
                (171859 'end of statement' globalType[171808] voidPtr[171834] ptr[171846])
                (171863 call chpl__autoDestroy temp[171856])
                (483216 'end of statement' temp[171856])
              }
            }
            (172011 call _downEndCount _coforallCount[172009] nil[44])
            (935307 return _void[55])
          }
          {
          }
          label _continueLabel[172021]
          _indexOfInterest[172016]
          _iterator[172017]
        }
        label _breakLabel[172022]
        Defer
        {
          {
            (172053 call _endCountFree _coforallCount[172009])
          }
        }
        (172058 call _waitEndCount _coforallCount[172009] 0)
      }
    }
    (522326 return _void[55])
  }
  where {
    (748063 call chpl_statementLevelSymbol chpl__enableSerializedGlobals[171423])
  }
  (355094 'used modules list'(171416 'use' ChapelLocale[89844])(171420 'use' CPtr[204934]))
}