AST dump for InsertionSort after pass cleanup.
Module use list: 

{
  (353064 'use' ChapelStandard)
  (270114 'use' Sort)
  function insertionSort[270129](arg Data[270126] :
  (270124 call chpl__buildArrayRuntimeType unknown Dom[270119] unknown eltType[270122]), arg comparator[270134] :
  unknown rec[270131] =
  defaultComparator, arg lo[270143] :
  int[13] =
  (270140 call . Dom c"alignedLow"), arg hi[270152] :
  int[13] =
  (270149 call . Dom c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (270160 call chpl_check_comparator comparator eltType)
    if(270192 call _cond_test(270168 call !=(270164 call . Dom c"rank") 1))
    {
      (270189 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270197] "const" lo
    const high[270201] "const" hi
    const stride[270211] "const"(270210 call abs(270206 call . Dom c"stride"))
    (270214 'end of statement')
    {
      unknown _indexOfInterest[270368] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270369] "expr temp" "temp"
      (270378 'move' _iterator[270369](270376 call _getIterator(270387 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (270403 call _freeIterator _iterator[270369])
        }
      }
      { scopeless type
        (270392 'move' _indexOfInterest[270368](270389 call iteratorIndex _iterator[270369]))
      }
      ForLoop[270370]
      {
        unknown i[270396] "index var" "insert auto destroy"
        (270398 'move' i[270396] _indexOfInterest[270368])
        {
          unknown ithVal[270227](270226 call Data i)
          (270230 'end of statement')
          unknown inserted[270233] 0
          (270236 'end of statement')
          {
            unknown _indexOfInterest[270302] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270303] "expr temp" "temp"
            (270312 'move' _iterator[270303](270310 call _getIterator(270329 call chpl_direct_range_iter low(270326 call - i stride)(270322 call - stride))))
            Defer
            {
              {
                (270345 call _freeIterator _iterator[270303])
              }
            }
            { scopeless type
              (270334 'move' _indexOfInterest[270302](270331 call iteratorIndex _iterator[270303]))
            }
            ForLoop[270304]
            {
              unknown j[270338] "index var" "insert auto destroy"
              (270340 'move' j[270338] _indexOfInterest[270302])
              {
                if(270297 call _cond_test(270260 call <(270258 call chpl_compare ithVal(270256 call Data j) comparator) 0))
                {
                  (270273 call =(270268 call Data(270265 call + j stride))(270272 call Data j))
                }
                {
                  (270285 call =(270283 call Data(270280 call + j stride)) ithVal)
                  (270291 call = inserted 1)
                  break nil[44]
                }
              }
              label _continueLabel[270307]
              _indexOfInterest[270302]
              _iterator[270303]
            }
            label _breakLabel[270308]
          }
          if(270364 call _cond_test(270353 call ! inserted))
          {
            (270360 call =(270358 call Data low) ithVal)
          }
        }
        label _continueLabel[270373]
        _indexOfInterest[270368]
        _iterator[270369]
      }
      label _breakLabel[270374]
    }
  }
  function insertionSortMoveElts[270424](arg Data[270421] :
  (270419 call chpl__buildArrayRuntimeType unknown Dom[270414] unknown eltType[270417]), arg comparator[270429] :
  unknown rec[270426] =
  defaultComparator, arg lo[270438] :
  int[13] =
  (270435 call . Dom c"alignedLow"), arg hi[270447] :
  int[13] =
  (270444 call . Dom c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (270455 call chpl_check_comparator comparator eltType)
    if(270471 call _cond_test(270463 call !=(270459 call . Dom c"rank") 1))
    {
      (270468 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270476] "const" lo
    const high[270480] "const" hi
    const stride[270490] "const"(270489 call abs(270485 call . Dom c"stride"))
    (270493 'end of statement')
    {
      unknown _indexOfInterest[270669] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270670] "expr temp" "temp"
      (270679 'move' _iterator[270670](270677 call _getIterator(270688 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (270704 call _freeIterator _iterator[270670])
        }
      }
      { scopeless type
        (270693 'move' _indexOfInterest[270669](270690 call iteratorIndex _iterator[270670]))
      }
      ForLoop[270671]
      {
        unknown i[270697] "index var" "insert auto destroy"
        (270699 'move' i[270697] _indexOfInterest[270669])
        {
          unknown ithVal[270514] "no auto destroy"(270513 call(270505 call . ShallowCopy c"shallowCopyInit")(270511 call Data i))
          (270517 'end of statement')
          unknown inserted[270520] 0
          (270523 'end of statement')
          {
            unknown _indexOfInterest[270599] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270600] "expr temp" "temp"
            (270609 'move' _iterator[270600](270607 call _getIterator(270626 call chpl_direct_range_iter low(270623 call - i stride)(270619 call - stride))))
            Defer
            {
              {
                (270642 call _freeIterator _iterator[270600])
              }
            }
            { scopeless type
              (270631 'move' _indexOfInterest[270599](270628 call iteratorIndex _iterator[270600]))
            }
            ForLoop[270601]
            {
              unknown j[270635] "index var" "insert auto destroy"
              (270637 'move' j[270635] _indexOfInterest[270599])
              {
                if(270594 call _cond_test(270547 call <(270545 call chpl_compare ithVal(270543 call Data j) comparator) 0))
                {
                  (270567 call(270552 call . ShallowCopy c"shallowCopy")(270561 call Data(270558 call + j stride))(270566 call Data j))
                }
                {
                  (270583 call(270571 call . ShallowCopy c"shallowCopy")(270580 call Data(270577 call + j stride)) ithVal)
                  (270588 call = inserted 1)
                  break nil[44]
                }
              }
              label _continueLabel[270604]
              _indexOfInterest[270599]
              _iterator[270600]
            }
            label _breakLabel[270605]
          }
          if(270665 call _cond_test(270650 call ! inserted))
          {
            (270662 call(270653 call . ShallowCopy c"shallowCopy")(270659 call Data low) ithVal)
          }
        }
        label _continueLabel[270674]
        _indexOfInterest[270669]
        _iterator[270670]
      }
      label _breakLabel[270675]
    }
  }
}