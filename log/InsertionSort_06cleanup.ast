AST dump for InsertionSort after pass cleanup.
Module use list: 

{
  (353133 'use' ChapelStandard)
  (270183 'use' Sort)
  function insertionSort[270198](arg Data[270195] :
  (270193 call chpl__buildArrayRuntimeType unknown Dom[270188] unknown eltType[270191]), arg comparator[270203] :
  unknown rec[270200] =
  defaultComparator, arg lo[270212] :
  int[13] =
  (270209 call . Dom c"alignedLow"), arg hi[270221] :
  int[13] =
  (270218 call . Dom c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (270229 call chpl_check_comparator comparator eltType)
    if(270261 call _cond_test(270237 call !=(270233 call . Dom c"rank") 1))
    {
      (270258 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270266] "const" lo
    const high[270270] "const" hi
    const stride[270280] "const"(270279 call abs(270275 call . Dom c"stride"))
    (270283 'end of statement')
    {
      unknown _indexOfInterest[270437] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270438] "expr temp" "temp"
      (270447 'move' _iterator[270438](270445 call _getIterator(270456 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (270472 call _freeIterator _iterator[270438])
        }
      }
      { scopeless type
        (270461 'move' _indexOfInterest[270437](270458 call iteratorIndex _iterator[270438]))
      }
      ForLoop[270439]
      {
        unknown i[270465] "index var" "insert auto destroy"
        (270467 'move' i[270465] _indexOfInterest[270437])
        {
          unknown ithVal[270296](270295 call Data i)
          (270299 'end of statement')
          unknown inserted[270302] 0
          (270305 'end of statement')
          {
            unknown _indexOfInterest[270371] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270372] "expr temp" "temp"
            (270381 'move' _iterator[270372](270379 call _getIterator(270398 call chpl_direct_range_iter low(270395 call - i stride)(270391 call - stride))))
            Defer
            {
              {
                (270414 call _freeIterator _iterator[270372])
              }
            }
            { scopeless type
              (270403 'move' _indexOfInterest[270371](270400 call iteratorIndex _iterator[270372]))
            }
            ForLoop[270373]
            {
              unknown j[270407] "index var" "insert auto destroy"
              (270409 'move' j[270407] _indexOfInterest[270371])
              {
                if(270366 call _cond_test(270329 call <(270327 call chpl_compare ithVal(270325 call Data j) comparator) 0))
                {
                  (270342 call =(270337 call Data(270334 call + j stride))(270341 call Data j))
                }
                {
                  (270354 call =(270352 call Data(270349 call + j stride)) ithVal)
                  (270360 call = inserted 1)
                  break nil[44]
                }
              }
              label _continueLabel[270376]
              _indexOfInterest[270371]
              _iterator[270372]
            }
            label _breakLabel[270377]
          }
          if(270433 call _cond_test(270422 call ! inserted))
          {
            (270429 call =(270427 call Data low) ithVal)
          }
        }
        label _continueLabel[270442]
        _indexOfInterest[270437]
        _iterator[270438]
      }
      label _breakLabel[270443]
    }
  }
  function insertionSortMoveElts[270493](arg Data[270490] :
  (270488 call chpl__buildArrayRuntimeType unknown Dom[270483] unknown eltType[270486]), arg comparator[270498] :
  unknown rec[270495] =
  defaultComparator, arg lo[270507] :
  int[13] =
  (270504 call . Dom c"alignedLow"), arg hi[270516] :
  int[13] =
  (270513 call . Dom c"alignedHigh")) : _unknown[51] "no return value for void"
  {
    (270524 call chpl_check_comparator comparator eltType)
    if(270540 call _cond_test(270532 call !=(270528 call . Dom c"rank") 1))
    {
      (270537 call compilerError "insertionSort() requires 1-D array")
    }
    const low[270545] "const" lo
    const high[270549] "const" hi
    const stride[270559] "const"(270558 call abs(270554 call . Dom c"stride"))
    (270562 'end of statement')
    {
      unknown _indexOfInterest[270738] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[270739] "expr temp" "temp"
      (270748 'move' _iterator[270739](270746 call _getIterator(270757 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (270773 call _freeIterator _iterator[270739])
        }
      }
      { scopeless type
        (270762 'move' _indexOfInterest[270738](270759 call iteratorIndex _iterator[270739]))
      }
      ForLoop[270740]
      {
        unknown i[270766] "index var" "insert auto destroy"
        (270768 'move' i[270766] _indexOfInterest[270738])
        {
          unknown ithVal[270583] "no auto destroy"(270582 call(270574 call . ShallowCopy c"shallowCopyInit")(270580 call Data i))
          (270586 'end of statement')
          unknown inserted[270589] 0
          (270592 'end of statement')
          {
            unknown _indexOfInterest[270668] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270669] "expr temp" "temp"
            (270678 'move' _iterator[270669](270676 call _getIterator(270695 call chpl_direct_range_iter low(270692 call - i stride)(270688 call - stride))))
            Defer
            {
              {
                (270711 call _freeIterator _iterator[270669])
              }
            }
            { scopeless type
              (270700 'move' _indexOfInterest[270668](270697 call iteratorIndex _iterator[270669]))
            }
            ForLoop[270670]
            {
              unknown j[270704] "index var" "insert auto destroy"
              (270706 'move' j[270704] _indexOfInterest[270668])
              {
                if(270663 call _cond_test(270616 call <(270614 call chpl_compare ithVal(270612 call Data j) comparator) 0))
                {
                  (270636 call(270621 call . ShallowCopy c"shallowCopy")(270630 call Data(270627 call + j stride))(270635 call Data j))
                }
                {
                  (270652 call(270640 call . ShallowCopy c"shallowCopy")(270649 call Data(270646 call + j stride)) ithVal)
                  (270657 call = inserted 1)
                  break nil[44]
                }
              }
              label _continueLabel[270673]
              _indexOfInterest[270668]
              _iterator[270669]
            }
            label _breakLabel[270674]
          }
          if(270734 call _cond_test(270719 call ! inserted))
          {
            (270731 call(270722 call . ShallowCopy c"shallowCopy")(270728 call Data low) ithVal)
          }
        }
        label _continueLabel[270743]
        _indexOfInterest[270738]
        _iterator[270739]
      }
      label _breakLabel[270744]
    }
  }
}