AST dump for Atomics after pass buildDefaultFunctions.
Module use list: ChapelBase MemConsistency 

{
  function chpl__init_Atomics[415988]() : void[4] "insert line file info" "module init"
  {
    (506315 return _void[55])
  }
  function chpl_atomic_thread_fence[43975](arg order[43972]:memory_order[186619]) : void[4] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no doc" "no return value for void"
  {
    (505622 return _void[55])
  }
  function atomic_fence[43987](arg order[43983]:memory_order[186619] =
  memory_order_seq_cst[186963]) : _unknown[51] "no doc" "no return value for void"
  {
    (43992 call chpl_atomic_thread_fence order[43983])
    (474294 'end of statement')
    unknown call_tmp[605988] "expr temp" "maybe param" "maybe type" "temp"
    (605991 'move' call_tmp[605988](44001 call _cond_test CHPL_CACHE_REMOTE[367]))
    if call_tmp[605988]
    {
      (43999 call chpl_rmem_consist_fence order[43983])
    }
    (505624 return _void[55])
  }
  function atomicFence[44021](param arg order[44017]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "inline" "no return value for void"
  {
    unknown call_tmp[605993] "expr temp" "maybe param" "maybe type" "temp"
    (605996 'move' call_tmp[605993](44027 call c_memory_order order[44017]))
    (44029 call atomic_fence call_tmp[605993])
    (505626 return _void[55])
  }
  function isSupported[44038](arg T[44036]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505630] "RVV" "param" "temp"
    unknown tmp[418453] "maybe param" "temp"
    unknown tmp[418474] "maybe param" "temp"
    unknown tmp[418495] "maybe param" "temp"
    (418506 'move' tmp[418495](44042 call == T[44036] bool[10]))
    unknown call_tmp[605998] "expr temp" "maybe param" "maybe type" "temp"
    (606001 'move' call_tmp[605998](418508 call _cond_invalid tmp[418495]))
    if call_tmp[605998]
    {
      (418511 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554346] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554347] "maybe param" "temp"
    unknown call_tmp[606003] "expr temp" "maybe param" "maybe type" "temp"
    (606006 'move' call_tmp[606003](418496 call isTrue tmp[418495]))
    (554352 'move' tmp[554347](554350 call _cond_test call_tmp[606003]))
    if tmp[554347]
    {
      (554357 'move' tmp[554346](554354 '_paramFoldLogical' tmp[554347] 1))
    }
    {
      unknown tmp[554359] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606008] "expr temp" "maybe param" "maybe type" "temp"
      (606011 'move' call_tmp[606008](44047 call isInt T[44036]))
      (554361 'move' tmp[554359](418500 call isTrue call_tmp[606008]))
      (554366 'move' tmp[554346](554363 '_paramFoldLogical' tmp[554347] tmp[554359]))
    }
    (418485 'move' tmp[418474] tmp[554346])
    unknown call_tmp[606013] "expr temp" "maybe param" "maybe type" "temp"
    (606016 'move' call_tmp[606013](418487 call _cond_invalid tmp[418474]))
    if call_tmp[606013]
    {
      (418490 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554373] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554374] "maybe param" "temp"
    unknown call_tmp[606018] "expr temp" "maybe param" "maybe type" "temp"
    (606021 'move' call_tmp[606018](418475 call isTrue tmp[418474]))
    (554379 'move' tmp[554374](554377 call _cond_test call_tmp[606018]))
    if tmp[554374]
    {
      (554384 'move' tmp[554373](554381 '_paramFoldLogical' tmp[554374] 1))
    }
    {
      unknown tmp[554386] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606023] "expr temp" "maybe param" "maybe type" "temp"
      (606026 'move' call_tmp[606023](44053 call isUint T[44036]))
      (554388 'move' tmp[554386](418479 call isTrue call_tmp[606023]))
      (554393 'move' tmp[554373](554390 '_paramFoldLogical' tmp[554374] tmp[554386]))
    }
    (418464 'move' tmp[418453] tmp[554373])
    unknown call_tmp[606028] "expr temp" "maybe param" "maybe type" "temp"
    (606031 'move' call_tmp[606028](418466 call _cond_invalid tmp[418453]))
    if call_tmp[606028]
    {
      (418469 call compilerError "cannot promote short-circuiting || operator")
    }
    unknown tmp[554400] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554401] "maybe param" "temp"
    unknown call_tmp[606033] "expr temp" "maybe param" "maybe type" "temp"
    (606036 'move' call_tmp[606033](418454 call isTrue tmp[418453]))
    (554406 'move' tmp[554401](554404 call _cond_test call_tmp[606033]))
    if tmp[554401]
    {
      (554411 'move' tmp[554400](554408 '_paramFoldLogical' tmp[554401] 1))
    }
    {
      unknown tmp[554413] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[606038] "expr temp" "maybe param" "maybe type" "temp"
      (606041 'move' call_tmp[606038](44059 call isReal T[44036]))
      (554415 'move' tmp[554413](418458 call isTrue call_tmp[606038]))
      (554420 'move' tmp[554400](554417 '_paramFoldLogical' tmp[554401] tmp[554413]))
    }
    (505635 'move' ret[505630](505634 'deref' tmp[554400]))
    (505632 return ret[505630])
  }
  function externT[44071](arg T[44069]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ret[505639] "RVV" "temp" "type variable"
    function =[761053](ref arg _arg1[761055]:atomic_bool[44077], arg _arg2[761056]:atomic_bool[44077]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761059 '=' _arg1[761055] _arg2[761056])
      (761064 return _void[55])
    }
    type atomic_bool[44077]
    function =[761066](ref arg _arg1[761068]:atomic_int_least8_t[44084], arg _arg2[761069]:atomic_int_least8_t[44084]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761072 '=' _arg1[761068] _arg2[761069])
      (761077 return _void[55])
    }
    type atomic_int_least8_t[44084]
    function =[761079](ref arg _arg1[761081]:atomic_int_least16_t[44090], arg _arg2[761082]:atomic_int_least16_t[44090]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761085 '=' _arg1[761081] _arg2[761082])
      (761090 return _void[55])
    }
    type atomic_int_least16_t[44090]
    function =[761092](ref arg _arg1[761094]:atomic_int_least32_t[44096], arg _arg2[761095]:atomic_int_least32_t[44096]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761098 '=' _arg1[761094] _arg2[761095])
      (761103 return _void[55])
    }
    type atomic_int_least32_t[44096]
    function =[761105](ref arg _arg1[761107]:atomic_int_least64_t[44102], arg _arg2[761108]:atomic_int_least64_t[44102]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761111 '=' _arg1[761107] _arg2[761108])
      (761116 return _void[55])
    }
    type atomic_int_least64_t[44102]
    function =[761118](ref arg _arg1[761120]:atomic_uint_least8_t[44108], arg _arg2[761121]:atomic_uint_least8_t[44108]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761124 '=' _arg1[761120] _arg2[761121])
      (761129 return _void[55])
    }
    type atomic_uint_least8_t[44108]
    function =[761131](ref arg _arg1[761133]:atomic_uint_least16_t[44114], arg _arg2[761134]:atomic_uint_least16_t[44114]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761137 '=' _arg1[761133] _arg2[761134])
      (761142 return _void[55])
    }
    type atomic_uint_least16_t[44114]
    function =[761144](ref arg _arg1[761146]:atomic_uint_least32_t[44120], arg _arg2[761147]:atomic_uint_least32_t[44120]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761150 '=' _arg1[761146] _arg2[761147])
      (761155 return _void[55])
    }
    type atomic_uint_least32_t[44120]
    function =[761157](ref arg _arg1[761159]:atomic_uint_least64_t[44126], arg _arg2[761160]:atomic_uint_least64_t[44126]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761163 '=' _arg1[761159] _arg2[761160])
      (761168 return _void[55])
    }
    type atomic_uint_least64_t[44126]
    function =[761170](ref arg _arg1[761172]:atomic__real64[44132], arg _arg2[761173]:atomic__real64[44132]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761176 '=' _arg1[761172] _arg2[761173])
      (761181 return _void[55])
    }
    type atomic__real64[44132]
    function =[761183](ref arg _arg1[761185]:atomic__real32[44138], arg _arg2[761186]:atomic__real32[44138]) : _unknown[51] "assignop" "compiler generated" "inline" "last resort"
    {
      (761189 '=' _arg1[761185] _arg2[761186])
      (761194 return _void[55])
    }
    type atomic__real32[44138]
    {
      unknown tmp[44261] "expr temp" "maybe param" "maybe type" "temp"
      (44263 'move' tmp[44261] T[44069])
      unknown call_tmp[606043] "expr temp" "maybe param" "maybe type" "temp"
      (606046 'move' call_tmp[606043](44265 call == tmp[44261] bool[10]))
      unknown call_tmp[606048] "expr temp" "maybe param" "maybe type" "temp"
      (606051 'move' call_tmp[606048](44268 call _cond_test call_tmp[606043]))
      if call_tmp[606048]
      {
        (505644 'move' ret[505639](505643 'deref' atomic_bool[44077]))
        gotoReturn _end_externT[505637] _end_externT[505637]
      }
      {
        unknown call_tmp[606053] "expr temp" "maybe param" "maybe type" "temp"
        (606056 'move' call_tmp[606053](44153 call int(64)[13] 8))
        unknown call_tmp[606058] "expr temp" "maybe param" "maybe type" "temp"
        (606061 'move' call_tmp[606058](44271 call == tmp[44261] call_tmp[606053]))
        unknown call_tmp[606063] "expr temp" "maybe param" "maybe type" "temp"
        (606066 'move' call_tmp[606063](44274 call _cond_test call_tmp[606058]))
        if call_tmp[606063]
        {
          (505649 'move' ret[505639](505648 'deref' atomic_int_least8_t[44084]))
          gotoReturn _end_externT[505637] _end_externT[505637]
        }
        {
          unknown call_tmp[606068] "expr temp" "maybe param" "maybe type" "temp"
          (606071 'move' call_tmp[606068](44164 call int(64)[13] 16))
          unknown call_tmp[606073] "expr temp" "maybe param" "maybe type" "temp"
          (606076 'move' call_tmp[606073](44278 call == tmp[44261] call_tmp[606068]))
          unknown call_tmp[606078] "expr temp" "maybe param" "maybe type" "temp"
          (606081 'move' call_tmp[606078](44281 call _cond_test call_tmp[606073]))
          if call_tmp[606078]
          {
            (505654 'move' ret[505639](505653 'deref' atomic_int_least16_t[44090]))
            gotoReturn _end_externT[505637] _end_externT[505637]
          }
          {
            unknown call_tmp[606083] "expr temp" "maybe param" "maybe type" "temp"
            (606086 'move' call_tmp[606083](44175 call int(64)[13] 32))
            unknown call_tmp[606088] "expr temp" "maybe param" "maybe type" "temp"
            (606091 'move' call_tmp[606088](44285 call == tmp[44261] call_tmp[606083]))
            unknown call_tmp[606093] "expr temp" "maybe param" "maybe type" "temp"
            (606096 'move' call_tmp[606093](44288 call _cond_test call_tmp[606088]))
            if call_tmp[606093]
            {
              (505659 'move' ret[505639](505658 'deref' atomic_int_least32_t[44096]))
              gotoReturn _end_externT[505637] _end_externT[505637]
            }
            {
              unknown call_tmp[606098] "expr temp" "maybe param" "maybe type" "temp"
              (606101 'move' call_tmp[606098](44186 call int(64)[13] 64))
              unknown call_tmp[606103] "expr temp" "maybe param" "maybe type" "temp"
              (606106 'move' call_tmp[606103](44292 call == tmp[44261] call_tmp[606098]))
              unknown call_tmp[606108] "expr temp" "maybe param" "maybe type" "temp"
              (606111 'move' call_tmp[606108](44295 call _cond_test call_tmp[606103]))
              if call_tmp[606108]
              {
                (505664 'move' ret[505639](505663 'deref' atomic_int_least64_t[44102]))
                gotoReturn _end_externT[505637] _end_externT[505637]
              }
              {
                unknown call_tmp[606113] "expr temp" "maybe param" "maybe type" "temp"
                (606116 'move' call_tmp[606113](44197 call uint(64)[115] 8))
                unknown call_tmp[606118] "expr temp" "maybe param" "maybe type" "temp"
                (606121 'move' call_tmp[606118](44299 call == tmp[44261] call_tmp[606113]))
                unknown call_tmp[606123] "expr temp" "maybe param" "maybe type" "temp"
                (606126 'move' call_tmp[606123](44302 call _cond_test call_tmp[606118]))
                if call_tmp[606123]
                {
                  (505669 'move' ret[505639](505668 'deref' atomic_uint_least8_t[44108]))
                  gotoReturn _end_externT[505637] _end_externT[505637]
                }
                {
                  unknown call_tmp[606128] "expr temp" "maybe param" "maybe type" "temp"
                  (606131 'move' call_tmp[606128](44208 call uint(64)[115] 16))
                  unknown call_tmp[606133] "expr temp" "maybe param" "maybe type" "temp"
                  (606136 'move' call_tmp[606133](44306 call == tmp[44261] call_tmp[606128]))
                  unknown call_tmp[606138] "expr temp" "maybe param" "maybe type" "temp"
                  (606141 'move' call_tmp[606138](44309 call _cond_test call_tmp[606133]))
                  if call_tmp[606138]
                  {
                    (505674 'move' ret[505639](505673 'deref' atomic_uint_least16_t[44114]))
                    gotoReturn _end_externT[505637] _end_externT[505637]
                  }
                  {
                    unknown call_tmp[606143] "expr temp" "maybe param" "maybe type" "temp"
                    (606146 'move' call_tmp[606143](44219 call uint(64)[115] 32))
                    unknown call_tmp[606148] "expr temp" "maybe param" "maybe type" "temp"
                    (606151 'move' call_tmp[606148](44313 call == tmp[44261] call_tmp[606143]))
                    unknown call_tmp[606153] "expr temp" "maybe param" "maybe type" "temp"
                    (606156 'move' call_tmp[606153](44316 call _cond_test call_tmp[606148]))
                    if call_tmp[606153]
                    {
                      (505679 'move' ret[505639](505678 'deref' atomic_uint_least32_t[44120]))
                      gotoReturn _end_externT[505637] _end_externT[505637]
                    }
                    {
                      unknown call_tmp[606158] "expr temp" "maybe param" "maybe type" "temp"
                      (606161 'move' call_tmp[606158](44230 call uint(64)[115] 64))
                      unknown call_tmp[606163] "expr temp" "maybe param" "maybe type" "temp"
                      (606166 'move' call_tmp[606163](44320 call == tmp[44261] call_tmp[606158]))
                      unknown call_tmp[606168] "expr temp" "maybe param" "maybe type" "temp"
                      (606171 'move' call_tmp[606168](44323 call _cond_test call_tmp[606163]))
                      if call_tmp[606168]
                      {
                        (505684 'move' ret[505639](505683 'deref' atomic_uint_least64_t[44126]))
                        gotoReturn _end_externT[505637] _end_externT[505637]
                      }
                      {
                        unknown call_tmp[606173] "expr temp" "maybe param" "maybe type" "temp"
                        (606176 'move' call_tmp[606173](44241 call real(64)[16] 32))
                        unknown call_tmp[606178] "expr temp" "maybe param" "maybe type" "temp"
                        (606181 'move' call_tmp[606178](44327 call == tmp[44261] call_tmp[606173]))
                        unknown call_tmp[606183] "expr temp" "maybe param" "maybe type" "temp"
                        (606186 'move' call_tmp[606183](44330 call _cond_test call_tmp[606178]))
                        if call_tmp[606183]
                        {
                          (505689 'move' ret[505639](505688 'deref' atomic__real32[44138]))
                          gotoReturn _end_externT[505637] _end_externT[505637]
                        }
                        {
                          unknown call_tmp[606188] "expr temp" "maybe param" "maybe type" "temp"
                          (606191 'move' call_tmp[606188](44252 call real(64)[16] 64))
                          unknown call_tmp[606193] "expr temp" "maybe param" "maybe type" "temp"
                          (606196 'move' call_tmp[606193](44334 call == tmp[44261] call_tmp[606188]))
                          unknown call_tmp[606198] "expr temp" "maybe param" "maybe type" "temp"
                          (606201 'move' call_tmp[606198](44337 call _cond_test call_tmp[606193]))
                          if call_tmp[606198]
                          {
                            (505694 'move' ret[505639](505693 'deref' atomic__real64[44132]))
                            gotoReturn _end_externT[505637] _end_externT[505637]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    label _end_externT[505637]
    (505641 return ret[505639])
  }
  function externTString[44348](arg T[44346]:_any[178](?)) param : _unknown[51] "private"
  {
    unknown ret[505700] "RVV" "param" "temp"
    unknown call_tmp[606203] "expr temp" "maybe param" "maybe type" "temp"
    (606206 'move' call_tmp[606203](44352 call == T[44346] bool[10]))
    unknown call_tmp[606208] "expr temp" "maybe param" "maybe type" "temp"
    (606211 'move' call_tmp[606208](44373 call _cond_test call_tmp[606203]))
    if call_tmp[606208]
    {
      (505705 'move' ret[505700](505704 'deref' "bool"))
      gotoReturn _end_externTString[505698] _end_externTString[505698]
    }
    unknown call_tmp[606213] "expr temp" "maybe param" "maybe type" "temp"
    (606216 'move' call_tmp[606213](44382 call isInt T[44346]))
    unknown call_tmp[606218] "expr temp" "maybe param" "maybe type" "temp"
    (606221 'move' call_tmp[606218](44430 call _cond_test call_tmp[606213]))
    if call_tmp[606218]
    {
      unknown call_tmp[606223] "expr temp" "maybe param" "maybe type" "temp"
      (606226 'move' call_tmp[606223](44403 call numBits T[44346]))
      unknown call_tmp[606228] "expr temp" "maybe param" "maybe type" "temp"
      (606231 'move' call_tmp[606228](44405 call _cast string[26] call_tmp[606223]))
      unknown call_tmp[606233] "expr temp" "maybe param" "maybe type" "temp"
      (606236 'move' call_tmp[606233](44407 call + "int_least" call_tmp[606228]))
      unknown call_tmp[606238] "expr temp" "maybe param" "maybe type" "temp"
      (606241 'move' call_tmp[606238](44426 call + call_tmp[606233] "_t"))
      (505710 'move' ret[505700](505709 'deref' call_tmp[606238]))
      gotoReturn _end_externTString[505698] _end_externTString[505698]
    }
    unknown call_tmp[606243] "expr temp" "maybe param" "maybe type" "temp"
    (606246 'move' call_tmp[606243](44438 call isUint T[44346]))
    unknown call_tmp[606248] "expr temp" "maybe param" "maybe type" "temp"
    (606251 'move' call_tmp[606248](44470 call _cond_test call_tmp[606243]))
    if call_tmp[606248]
    {
      unknown call_tmp[606253] "expr temp" "maybe param" "maybe type" "temp"
      (606256 'move' call_tmp[606253](44459 call numBits T[44346]))
      unknown call_tmp[606258] "expr temp" "maybe param" "maybe type" "temp"
      (606261 'move' call_tmp[606258](44461 call _cast string[26] call_tmp[606253]))
      unknown call_tmp[606263] "expr temp" "maybe param" "maybe type" "temp"
      (606266 'move' call_tmp[606263](44463 call + "uint_least" call_tmp[606258]))
      unknown call_tmp[606268] "expr temp" "maybe param" "maybe type" "temp"
      (606271 'move' call_tmp[606268](44466 call + call_tmp[606263] "_t"))
      (505715 'move' ret[505700](505714 'deref' call_tmp[606268]))
      gotoReturn _end_externTString[505698] _end_externTString[505698]
    }
    unknown call_tmp[606273] "expr temp" "maybe param" "maybe type" "temp"
    (606276 'move' call_tmp[606273](44478 call isReal T[44346]))
    unknown call_tmp[606278] "expr temp" "maybe param" "maybe type" "temp"
    (606281 'move' call_tmp[606278](44507 call _cond_test call_tmp[606273]))
    if call_tmp[606278]
    {
      unknown call_tmp[606283] "expr temp" "maybe param" "maybe type" "temp"
      (606286 'move' call_tmp[606283](44499 call numBits T[44346]))
      unknown call_tmp[606288] "expr temp" "maybe param" "maybe type" "temp"
      (606291 'move' call_tmp[606288](44501 call _cast string[26] call_tmp[606283]))
      unknown call_tmp[606293] "expr temp" "maybe param" "maybe type" "temp"
      (606296 'move' call_tmp[606293](44503 call + "_real" call_tmp[606288]))
      (505720 'move' ret[505700](505719 'deref' call_tmp[606293]))
      gotoReturn _end_externTString[505698] _end_externTString[505698]
    }
    label _end_externTString[505698]
    (505702 return ret[505700])
  }
  function externFunc[44520](param arg s[44517]:string[26], arg T[44522]:_any[178](?), param arg explicit[44525] :
  1 =
  1) param : _unknown[51] "private"
  {
    unknown ret[505726] "RVV" "param" "temp"
    unknown call_tmp[606298] "expr temp" "maybe param" "maybe type" "temp"
    (606301 'move' call_tmp[606298](44607 call _cond_test explicit[44525]))
    if call_tmp[606298]
    {
      unknown call_tmp[606303] "expr temp" "maybe param" "maybe type" "temp"
      (606306 'move' call_tmp[606303](44547 call + "atomic_" s[44517]))
      unknown call_tmp[606308] "expr temp" "maybe param" "maybe type" "temp"
      (606311 'move' call_tmp[606308](44566 call + call_tmp[606303] "_explicit_"))
      unknown call_tmp[606313] "expr temp" "maybe param" "maybe type" "temp"
      (606316 'move' call_tmp[606313](44571 call externTString T[44522]))
      unknown call_tmp[606318] "expr temp" "maybe param" "maybe type" "temp"
      (606321 'move' call_tmp[606318](44572 call + call_tmp[606308] call_tmp[606313]))
      (505731 'move' ret[505726](505730 'deref' call_tmp[606318]))
      gotoReturn _end_externFunc[505724] _end_externFunc[505724]
    }
    {
      unknown call_tmp[606323] "expr temp" "maybe param" "maybe type" "temp"
      (606326 'move' call_tmp[606323](44578 call + "atomic_" s[44517]))
      unknown call_tmp[606328] "expr temp" "maybe param" "maybe type" "temp"
      (606331 'move' call_tmp[606328](44597 call + call_tmp[606323] "_"))
      unknown call_tmp[606333] "expr temp" "maybe param" "maybe type" "temp"
      (606336 'move' call_tmp[606333](44602 call externTString T[44522]))
      unknown call_tmp[606338] "expr temp" "maybe param" "maybe type" "temp"
      (606341 'move' call_tmp[606338](44603 call + call_tmp[606328] call_tmp[606333]))
      (505736 'move' ret[505726](505735 'deref' call_tmp[606338]))
      gotoReturn _end_externFunc[505724] _end_externFunc[505724]
    }
    label _end_externFunc[505724]
    (505728 return ret[505726])
  }
  function chpl__processorAtomicType[44620](arg T[44618]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505742] "RVV" "temp" "type variable"
    unknown call_tmp[606343] "expr temp" "maybe param" "maybe type" "temp"
    (606346 'move' call_tmp[606343](44624 call == T[44618] bool[10]))
    unknown call_tmp[606348] "expr temp" "maybe param" "maybe type" "temp"
    (606351 'move' call_tmp[606348](44672 call _cond_test call_tmp[606343]))
    if call_tmp[606348]
    {
      (505747 'move' ret[505742](505746 'deref' AtomicBool[45874]))
      gotoReturn _end_chpl__processorAtomicType[505740] _end_chpl__processorAtomicType[505740]
    }
    {
      unknown call_tmp[606353] "expr temp" "maybe param" "maybe type" "temp"
      (606356 'move' call_tmp[606353](44632 call isSupported T[44618]))
      unknown call_tmp[606358] "expr temp" "maybe param" "maybe type" "temp"
      (606361 'move' call_tmp[606358](44666 call _cond_test call_tmp[606353]))
      if call_tmp[606358]
      {
        unknown call_tmp[606363] "expr temp" "maybe param" "maybe type" "temp"
        (606366 'move' call_tmp[606363](44636 call AtomicT[48077](?) T[44618]))
        (505752 'move' ret[505742](505751 'deref' call_tmp[606363]))
        gotoReturn _end_chpl__processorAtomicType[505740] _end_chpl__processorAtomicType[505740]
      }
      {
        unknown call_tmp[606368] "expr temp" "maybe param" "maybe type" "temp"
        (606371 'move' call_tmp[606368](44659 call _cast string[26] T[44618]))
        unknown call_tmp[606373] "expr temp" "maybe param" "maybe type" "temp"
        (606376 'move' call_tmp[606373](44661 call + "Unsupported atomic type: " call_tmp[606368]))
        (44664 call compilerError call_tmp[606373])
      }
    }
    label _end_chpl__processorAtomicType[505740]
    (505744 return ret[505742])
  }
  function chpl__atomicType[44685](arg T[44683]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[505758] "RVV" "temp" "type variable"
    unknown call_tmp[606378] "expr temp" "maybe param" "maybe type" "temp"
    (606381 'move' call_tmp[606378](44689 call == CHPL_NETWORK_ATOMICS[21517] "none"))
    unknown call_tmp[606383] "expr temp" "maybe param" "maybe type" "temp"
    (606386 'move' call_tmp[606383](44705 call _cond_test call_tmp[606378]))
    if call_tmp[606383]
    {
      unknown call_tmp[606388] "expr temp" "maybe param" "maybe type" "temp"
      (606391 'move' call_tmp[606388](44694 call chpl__processorAtomicType T[44683]))
      (505763 'move' ret[505758](505762 'deref' call_tmp[606388]))
      gotoReturn _end_chpl__atomicType[505756] _end_chpl__atomicType[505756]
    }
    {
      unknown call_tmp[606393] "expr temp" "maybe param" "maybe type" "temp"
      (606396 'move' call_tmp[606393](44701 call chpl__networkAtomicType T[44683]))
      (505768 'move' ret[505758](505767 'deref' call_tmp[606393]))
      gotoReturn _end_chpl__atomicType[505756] _end_chpl__atomicType[505756]
    }
    label _end_chpl__atomicType[505756]
    (505760 return ret[505758])
  }
  function AtomicBool[45874].init_helper[44727](arg _mt[45878]:_MT[238], arg this[45876]:AtomicBool[45874], arg value[44724]:bool[10]) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[44759](ref arg obj[44756] :
    (44755 call externT bool[10]), arg value[44762]:bool[10], arg _chpl_cname[44770]:string[26] =
    (44749 call externFunc "init" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505774] "RVV" "temp"
      (505776 return ret[505774])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606400] "expr temp" "maybe param" "maybe type" "temp"
    (606403 'move' call_tmp[606400](370930 call _v _mt[243] this[45876]))
    (44779 call atomic_init call_tmp[606400] value[44724])
    (505778 return _void[55])
  }
  function AtomicBool[45874].init[44785](arg _mt[45882]:_MT[238], ref arg this[45880]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454612] "temp"
    unknown call_tmp[606405] "expr temp" "maybe param" "maybe type" "temp"
    (606408 'move' call_tmp[606405](454615 call externT bool[10]))
    (454617 'default init var' tmp[454612] call_tmp[606405])
    (454619 '.=' this[45880] c"_v" tmp[454612])
    (474324 'end of statement')
    const default[44796] "dead at end of block" "const" "insert auto destroy"
    (540649 'default init var' default[44796] bool[10])
    (44799 'end of statement')
    (44803 call(370937 call (partial) init_helper _mt[243] this[45880]) default[44796])
    (474325 'end of statement' default[44796])
    (505780 return _void[55])
  }
  function AtomicBool[45874].init=[44813](arg _mt[45886]:_MT[238], ref arg this[45884]:AtomicBool[45874], arg other[44810]:AtomicBool[45874]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454623] "temp"
    unknown call_tmp[606412] "expr temp" "maybe param" "maybe type" "temp"
    (606415 'move' call_tmp[606412](454626 call externT bool[10]))
    (454628 'default init var' tmp[454623] call_tmp[606412])
    (454630 '.=' this[45884] c"_v" tmp[454623])
    (474327 'end of statement')
    unknown call_tmp[606421] "expr temp" "maybe param" "maybe type" "temp"
    (606424 'move' call_tmp[606421](44829 call(44825 call (partial) read _mt[243] other[44810])))
    (44831 call(370943 call (partial) init_helper _mt[243] this[45884]) call_tmp[606421])
    (505782 return _void[55])
  }
  function AtomicBool[45874].init=[44841](arg _mt[45890]:_MT[238], ref arg this[45888]:AtomicBool[45874], arg other[44838]:bool[10]) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454634] "temp"
    unknown call_tmp[606426] "expr temp" "maybe param" "maybe type" "temp"
    (606429 'move' call_tmp[606426](454637 call externT bool[10]))
    (454639 'default init var' tmp[454634] call_tmp[606426])
    (454641 '.=' this[45888] c"_v" tmp[454634])
    (474329 'end of statement')
    (44854 call(370947 call (partial) init_helper _mt[243] this[45888]) other[44838])
    (505784 return _void[55])
  }
  function AtomicBool[45874].deinit[44860](arg _mt[45894]:_MT[238], arg this[45892]:AtomicBool[45874]) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[44894](ref arg obj[44891] :
    (44890 call externT bool[10]), arg _chpl_cname[44901]:string[26] =
    (44884 call externFunc "destroy" bool[10](explicit = 0))) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505788] "RVV" "temp"
      (505790 return ret[505788])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[44915] "const" "temp"
      unknown call_tmp[606433] "expr temp" "maybe param" "maybe type" "temp"
      (606436 'move' call_tmp[606433](44912 '_wide_get_locale' this[45892]))
      (44916 'move' tmp[44915](44913 'deref' call_tmp[606433]))
      unknown call_tmp[606440] "expr temp" "maybe param" "maybe type" "temp"
      (606443 'move' call_tmp[606440](370954 call _v _mt[243] this[45892]))
      (44910 call atomic_destroy call_tmp[606440])
      (44919 'elided on block' 0 tmp[44915])
    }
    (505792 return _void[55])
  }
  function AtomicBool[45874].read[44936](arg _mt[45898]:_MT[238], const arg this[45896]:AtomicBool[45874], param arg order[44932]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505802] "RVV" "temp"
    function atomic_load[44969](const  ref arg obj[44966] :
    (44965 call externT bool[10]), arg order[44972]:memory_order[186619], arg _chpl_cname[44980]:string[26] =
    (44959 call externFunc "load" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505796] "RVV" "temp"
      (505798 return ret[505796])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[44986] "dead at end of block" "insert auto destroy"
    (540651 'default init var' ret[44986] bool[10])
    (44989 'end of statement')
    {
      const tmp[45006] "const" "temp"
      unknown call_tmp[606445] "expr temp" "maybe param" "maybe type" "temp"
      (606448 'move' call_tmp[606445](45003 '_wide_get_locale' this[45896]))
      (45007 'move' tmp[45006](45004 'deref' call_tmp[606445]))
      unknown call_tmp[606452] "expr temp" "maybe param" "maybe type" "temp"
      (606455 'move' call_tmp[606452](370963 call _v _mt[243] this[45896]))
      unknown call_tmp[606457] "expr temp" "maybe param" "maybe type" "temp"
      (606460 'move' call_tmp[606457](44998 call c_memory_order order[44932]))
      unknown call_tmp[606462] "expr temp" "maybe param" "maybe type" "temp"
      (606465 'move' call_tmp[606462](44999 call atomic_load call_tmp[606452] call_tmp[606457]))
      (45000 call = ret[44986] call_tmp[606462])
      (474332 'end of statement' ret[44986])
      (45010 'elided on block' 0 tmp[45006])
    }
    (505808 'move' ret[505802](505807 'coerce' ret[44986] bool[10]))
    gotoReturn _end_read[505800] _end_read[505800]
    (474334 'end of statement' ret[44986])
    label _end_read[505800]
    (505804 return ret[505802])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].write[45026](arg _mt[45902]:_MT[238], arg this[45900]:AtomicBool[45874], arg value[45023]:bool[10], param arg order[45033]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505820] "RVV" "temp"
    function atomic_store[45068](ref arg obj[45065] :
    (45064 call externT bool[10]), arg value[45071]:bool[10], arg order[45075]:memory_order[186619], arg _chpl_cname[45083]:string[26] =
    (45058 call externFunc "store" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505814] "RVV" "temp"
      (505816 return ret[505814])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[45102] "const" "temp"
      unknown call_tmp[606467] "expr temp" "maybe param" "maybe type" "temp"
      (606470 'move' call_tmp[606467](45099 '_wide_get_locale' this[45900]))
      (45103 'move' tmp[45102](45100 'deref' call_tmp[606467]))
      unknown call_tmp[606474] "expr temp" "maybe param" "maybe type" "temp"
      (606477 'move' call_tmp[606474](370973 call _v _mt[243] this[45900]))
      unknown call_tmp[606479] "expr temp" "maybe param" "maybe type" "temp"
      (606482 'move' call_tmp[606479](45096 call c_memory_order order[45033]))
      (45097 call atomic_store call_tmp[606474] value[45023] call_tmp[606479])
      (45106 'elided on block' 0 tmp[45102])
    }
    (505822 return ret[505820])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].exchange[45119](arg _mt[45906]:_MT[238], arg this[45904]:AtomicBool[45874], arg value[45116]:bool[10], param arg order[45126]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505832] "RVV" "temp"
    function atomic_exchange[45161](ref arg obj[45158] :
    (45157 call externT bool[10]), arg value[45164]:bool[10], arg order[45168]:memory_order[186619], arg _chpl_cname[45176]:string[26] =
    (45151 call externFunc "exchange" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505826] "RVV" "temp"
      (505828 return ret[505826])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45182] "dead at end of block" "insert auto destroy"
    (540653 'default init var' ret[45182] bool[10])
    (45185 'end of statement')
    {
      const tmp[45203] "const" "temp"
      unknown call_tmp[606484] "expr temp" "maybe param" "maybe type" "temp"
      (606487 'move' call_tmp[606484](45200 '_wide_get_locale' this[45904]))
      (45204 'move' tmp[45203](45201 'deref' call_tmp[606484]))
      unknown call_tmp[606491] "expr temp" "maybe param" "maybe type" "temp"
      (606494 'move' call_tmp[606491](370984 call _v _mt[243] this[45904]))
      unknown call_tmp[606496] "expr temp" "maybe param" "maybe type" "temp"
      (606499 'move' call_tmp[606496](45195 call c_memory_order order[45126]))
      unknown call_tmp[606501] "expr temp" "maybe param" "maybe type" "temp"
      (606504 'move' call_tmp[606501](45196 call atomic_exchange call_tmp[606491] value[45116] call_tmp[606496]))
      (45197 call = ret[45182] call_tmp[606501])
      (474337 'end of statement' ret[45182])
      (45207 'elided on block' 0 tmp[45203])
    }
    (505838 'move' ret[505832](505837 'coerce' ret[45182] bool[10]))
    gotoReturn _end_exchange[505830] _end_exchange[505830]
    (474339 'end of statement' ret[45182])
    label _end_exchange[505830]
    (505834 return ret[505832])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45223](arg _mt[45910]:_MT[238], arg this[45908]:AtomicBool[45874], ref arg expected[45220]:bool[10], arg desired[45226]:bool[10], param arg order[45234]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505844] "RVV" "temp"
    unknown call_tmp[606508] "expr temp" "maybe param" "maybe type" "temp"
    (606511 'move' call_tmp[606508](45252 call readableOrder order[45234]))
    unknown call_tmp[606513] "expr temp" "maybe param" "maybe type" "temp"
    (606516 'move' call_tmp[606513](45253 call(45242 call (partial) compareExchange _mt[243] this[45908]) expected[45220] desired[45226] order[45234] call_tmp[606508]))
    (505850 'move' ret[505844](505849 'coerce' call_tmp[606513] bool[10]))
    (505846 return ret[505844])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchange[45266](arg _mt[45914]:_MT[238], arg this[45912]:AtomicBool[45874], ref arg expected[45263]:bool[10], arg desired[45269]:bool[10], param arg success[45273]:memoryOrder[186978], param arg failure[45277]:memoryOrder[186978]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505860] "RVV" "temp"
    function atomic_compare_exchange_strong[45311](ref arg obj[45308] :
    (45307 call externT bool[10]), ref arg expected[45314]:bool[10], arg desired[45318]:bool[10], arg succ[45322]:memory_order[186619], arg fail[45326]:memory_order[186619], arg _chpl_cname[45334]:string[26] =
    (45301 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505854] "RVV" "temp"
      (505856 return ret[505854])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45340] "dead at end of block" "insert auto destroy"
    (540655 'default init var' ret[45340] bool[10])
    (45343 'end of statement')
    {
      const tmp[45385] "const" "temp"
      unknown call_tmp[606518] "expr temp" "maybe param" "maybe type" "temp"
      (606521 'move' call_tmp[606518](45382 '_wide_get_locale' this[45912]))
      (45386 'move' tmp[45385](45383 'deref' call_tmp[606518]))
      {
        unknown localizedExpected[45346] "dead at end of block" "insert auto destroy"
        (540657 'init var' localizedExpected[45346] expected[45263])
        (45349 'end of statement')
        unknown call_tmp[606525] "expr temp" "maybe param" "maybe type" "temp"
        (606528 'move' call_tmp[606525](371004 call _v _mt[243] this[45912]))
        unknown call_tmp[606530] "expr temp" "maybe param" "maybe type" "temp"
        (606533 'move' call_tmp[606530](45360 call c_memory_order success[45273]))
        unknown call_tmp[606535] "expr temp" "maybe param" "maybe type" "temp"
        (606538 'move' call_tmp[606535](45364 call c_memory_order failure[45277]))
        unknown call_tmp[606540] "expr temp" "maybe param" "maybe type" "temp"
        (606543 'move' call_tmp[606540](45365 call atomic_compare_exchange_strong call_tmp[606525] localizedExpected[45346] desired[45269] call_tmp[606530] call_tmp[606535]))
        (45366 call = ret[45340] call_tmp[606540])
        (474342 'end of statement' ret[45340] localizedExpected[45346])
        unknown call_tmp[606545] "expr temp" "maybe param" "maybe type" "temp"
        (606548 'move' call_tmp[606545](45370 call ! ret[45340]))
        unknown call_tmp[606550] "expr temp" "maybe param" "maybe type" "temp"
        (606553 'move' call_tmp[606550](45377 call _cond_test call_tmp[606545]))
        if call_tmp[606550]
        {
          (45374 call = expected[45263] localizedExpected[45346])
          (474345 'end of statement' localizedExpected[45346])
        }
      }
      (45389 'elided on block' 0 tmp[45385])
    }
    (505866 'move' ret[505860](505865 'coerce' ret[45340] bool[10]))
    gotoReturn _end_compareExchange[505858] _end_compareExchange[505858]
    (474347 'end of statement' ret[45340])
    label _end_compareExchange[505858]
    (505862 return ret[505860])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45405](arg _mt[45918]:_MT[238], arg this[45916]:AtomicBool[45874], ref arg expected[45402]:bool[10], arg desired[45408]:bool[10], param arg order[45416]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505872] "RVV" "temp"
    unknown call_tmp[606557] "expr temp" "maybe param" "maybe type" "temp"
    (606560 'move' call_tmp[606557](45434 call readableOrder order[45416]))
    unknown call_tmp[606562] "expr temp" "maybe param" "maybe type" "temp"
    (606565 'move' call_tmp[606562](45435 call(45424 call (partial) compareExchangeWeak _mt[243] this[45916]) expected[45402] desired[45408] order[45416] call_tmp[606557]))
    (505878 'move' ret[505872](505877 'coerce' call_tmp[606562] bool[10]))
    (505874 return ret[505872])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].compareExchangeWeak[45448](arg _mt[45922]:_MT[238], arg this[45920]:AtomicBool[45874], ref arg expected[45445]:bool[10], arg desired[45451]:bool[10], param arg success[45455]:memoryOrder[186978], param arg failure[45459]:memoryOrder[186978]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505888] "RVV" "temp"
    function atomic_compare_exchange_weak[45492](ref arg obj[45489] :
    (45488 call externT bool[10]), ref arg expected[45495]:bool[10], arg desired[45499]:bool[10], arg succ[45503]:memory_order[186619], arg fail[45507]:memory_order[186619], arg _chpl_cname[45515]:string[26] =
    (45482 call externFunc "compare_exchange_weak" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505882] "RVV" "temp"
      (505884 return ret[505882])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45521] "dead at end of block" "insert auto destroy"
    (540659 'default init var' ret[45521] bool[10])
    (45524 'end of statement')
    {
      const tmp[45566] "const" "temp"
      unknown call_tmp[606567] "expr temp" "maybe param" "maybe type" "temp"
      (606570 'move' call_tmp[606567](45563 '_wide_get_locale' this[45920]))
      (45567 'move' tmp[45566](45564 'deref' call_tmp[606567]))
      {
        unknown localizedExpected[45527] "dead at end of block" "insert auto destroy"
        (540661 'init var' localizedExpected[45527] expected[45445])
        (45530 'end of statement')
        unknown call_tmp[606574] "expr temp" "maybe param" "maybe type" "temp"
        (606577 'move' call_tmp[606574](371029 call _v _mt[243] this[45920]))
        unknown call_tmp[606579] "expr temp" "maybe param" "maybe type" "temp"
        (606582 'move' call_tmp[606579](45541 call c_memory_order success[45455]))
        unknown call_tmp[606584] "expr temp" "maybe param" "maybe type" "temp"
        (606587 'move' call_tmp[606584](45545 call c_memory_order failure[45459]))
        unknown call_tmp[606589] "expr temp" "maybe param" "maybe type" "temp"
        (606592 'move' call_tmp[606589](45546 call atomic_compare_exchange_weak call_tmp[606574] localizedExpected[45527] desired[45451] call_tmp[606579] call_tmp[606584]))
        (45547 call = ret[45521] call_tmp[606589])
        (474350 'end of statement' ret[45521] localizedExpected[45527])
        unknown call_tmp[606594] "expr temp" "maybe param" "maybe type" "temp"
        (606597 'move' call_tmp[606594](45551 call ! ret[45521]))
        unknown call_tmp[606599] "expr temp" "maybe param" "maybe type" "temp"
        (606602 'move' call_tmp[606599](45558 call _cond_test call_tmp[606594]))
        if call_tmp[606599]
        {
          (45555 call = expected[45445] localizedExpected[45527])
          (474353 'end of statement' localizedExpected[45527])
        }
      }
      (45570 'elided on block' 0 tmp[45566])
    }
    (505893 'move' ret[505888](505892 'deref' ret[45521]))
    gotoReturn _end_compareExchangeWeak[505886] _end_compareExchangeWeak[505886]
    (474355 'end of statement' ret[45521])
    label _end_compareExchangeWeak[505886]
    (505890 return ret[505888])
  }
  function AtomicBool[45874].compareAndSwap[45585](arg _mt[45926]:_MT[238], arg this[45924]:AtomicBool[45874], arg expected[45582]:bool[10], arg desired[45588]:bool[10], param arg order[45596]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505905] "RVV" "temp"
    function atomic_compare_exchange_strong[45615](ref arg obj[45612] :
    (45611 call externT bool[10]), ref arg expected[45618]:bool[10], arg desired[45622]:bool[10], arg succ[45626]:memory_order[186619], arg fail[45630]:memory_order[186619], arg _chpl_cname[45638]:string[26] =
    (45605 call externFunc "compare_exchange_strong" bool[10])) : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505899] "RVV" "temp"
      (505901 return ret[505899])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[45644] "dead at end of block" "insert auto destroy"
    (540663 'default init var' ret[45644] bool[10])
    (45647 'end of statement')
    {
      const tmp[45679] "const" "temp"
      unknown call_tmp[606604] "expr temp" "maybe param" "maybe type" "temp"
      (606607 'move' call_tmp[606604](45676 '_wide_get_locale' this[45924]))
      (45680 'move' tmp[45679](45677 'deref' call_tmp[606604]))
      {
        unknown mutableExpected[45650] "dead at end of block" "insert auto destroy"
        (540665 'init var' mutableExpected[45650] expected[45582])
        (45653 'end of statement')
        unknown call_tmp[606611] "expr temp" "maybe param" "maybe type" "temp"
        (606614 'move' call_tmp[606611](371048 call _v _mt[243] this[45924]))
        unknown call_tmp[606616] "expr temp" "maybe param" "maybe type" "temp"
        (606619 'move' call_tmp[606616](45664 call c_memory_order order[45596]))
        unknown call_tmp[606621] "expr temp" "maybe param" "maybe type" "temp"
        (606624 'move' call_tmp[606621](45669 call readableOrder order[45596]))
        unknown call_tmp[606626] "expr temp" "maybe param" "maybe type" "temp"
        (606629 'move' call_tmp[606626](45671 call c_memory_order call_tmp[606621]))
        unknown call_tmp[606631] "expr temp" "maybe param" "maybe type" "temp"
        (606634 'move' call_tmp[606631](45672 call atomic_compare_exchange_strong call_tmp[606611] mutableExpected[45650] desired[45588] call_tmp[606616] call_tmp[606626]))
        (45673 call = ret[45644] call_tmp[606631])
        (474357 'end of statement' ret[45644] mutableExpected[45650])
      }
      (45683 'elided on block' 0 tmp[45679])
    }
    (505911 'move' ret[505905](505910 'coerce' ret[45644] bool[10]))
    gotoReturn _end_compareAndSwap[505903] _end_compareAndSwap[505903]
    (474360 'end of statement' ret[45644])
    label _end_compareAndSwap[505903]
    (505907 return ret[505905])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].testAndSet[45704](arg _mt[45930]:_MT[238], arg this[45928]:AtomicBool[45874], param arg order[45700]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505917] "RVV" "temp"
    unknown call_tmp[606638] "expr temp" "maybe param" "maybe type" "temp"
    (606641 'move' call_tmp[606638](45714 call(45708 call (partial) exchange _mt[243] this[45928]) 1 order[45700]))
    (505923 'move' ret[505917](505922 'coerce' call_tmp[606638] bool[10]))
    (505919 return ret[505917])
  }
  { scopeless type
    bool[10]
  }
  function AtomicBool[45874].clear[45732](arg _mt[45934]:_MT[238], arg this[45932]:AtomicBool[45874], param arg order[45728]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505927] "RVV" "temp"
    (45742 call(45736 call (partial) write _mt[243] this[45932]) 0 order[45728])
    (505929 return ret[505927])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].waitFor[45754](arg _mt[45938]:_MT[238], const arg this[45936]:AtomicBool[45874], arg value[45751]:bool[10], param arg order[45761]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505933] "RVV" "temp"
    {
      const tmp[45845] "const" "temp"
      unknown call_tmp[606645] "expr temp" "maybe param" "maybe type" "temp"
      (606648 'move' call_tmp[606645](45842 '_wide_get_locale' this[45936]))
      (45846 'move' tmp[45845](45843 'deref' call_tmp[606645]))
      {
        {
          unknown tmp[45788] "temp"
          unknown call_tmp[606652] "expr temp" "maybe param" "maybe type" "temp"
          (606655 'move' call_tmp[606652](45823 call(45820 call (partial) read _mt[243] this[45936])(order = relaxed[186976])))
          unknown call_tmp[606657] "expr temp" "maybe param" "maybe type" "temp"
          (606660 'move' call_tmp[606657](45818 call != call_tmp[606652] value[45751]))
          (45830 'move' tmp[45788](45816 call _cond_test call_tmp[606657]))
          WhileDo[45793]
          {
            {
              (45785 call chpl_task_yield)
            }
            label _continueLabel[45791]
            unknown call_tmp[606664] "expr temp" "maybe param" "maybe type" "temp"
            (606667 'move' call_tmp[606664](45804 call(45801 call (partial) read _mt[243] this[45936])(order = relaxed[186976])))
            unknown call_tmp[606669] "expr temp" "maybe param" "maybe type" "temp"
            (606672 'move' call_tmp[606669](45799 call != call_tmp[606664] value[45751]))
            (45811 'move' tmp[45788](45797 call _cond_test call_tmp[606669]))
            tmp[45788]
          }
          label _breakLabel[45792]
        }
        unknown call_tmp[606674] "expr temp" "maybe param" "maybe type" "temp"
        (606677 'move' call_tmp[606674](45838 call c_memory_order order[45761]))
        (45840 call chpl_atomic_thread_fence call_tmp[606674])
      }
      (45849 'elided on block' 0 tmp[45845])
    }
    (505935 return ret[505933])
  }
  { scopeless type
    void[4]
  }
  function AtomicBool[45874].writeThis[45861](arg _mt[45942]:_MT[238], const arg this[45940]:AtomicBool[45874], arg x[45859]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[606681] "expr temp" "maybe param" "maybe type" "temp"
    (606684 'move' call_tmp[606681](45866 call(371067 call (partial) read _mt[243] this[45940])))
    (45867 call <~> x[45859] call_tmp[606681])
    (505937 return _void[55])
  }
  function AtomicBool[45874]._v[761196](arg _mt[761198]:_MT[238], ref arg this[761200]:AtomicBool[45874]) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[761210] "RVV" "temp"
    unknown call_tmp[761217] "expr temp" "maybe param" "maybe type" "temp"
    (761220 'move' call_tmp[761217](761204 '.' this[761200] c"_v"))
    (761215 'move' ret[761210](761214 'addr of' call_tmp[761217]))
    (761212 return ret[761210])
  }
  function chpl_fields_are_comparable[761234](arg _arg1[761236]:AtomicBool[45874], arg _arg2[761237]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761255]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761262] "expr temp" "maybe param" "maybe type" "temp"
    (761265 'move' call_tmp[761262](761240 call _v _mt[243] _arg1[761236]))
    unknown call_tmp[761267] "expr temp" "maybe param" "maybe type" "temp"
    (761270 'move' call_tmp[761267](761244 call _v _mt[243] _arg2[761237]))
    unknown call_tmp[761272] "expr temp" "maybe param" "maybe type" "temp"
    (761275 'move' call_tmp[761272](761248 'call resolves' c"==" call_tmp[761262] call_tmp[761267]))
    (761260 'move' ret[761255](761259 'deref' call_tmp[761272]))
    (761257 return ret[761255])
  }
  function ==[761222](arg _arg1[761224]:AtomicBool[45874], arg _arg2[761225]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761304]:bool[10] "RVV" "temp"
    unknown call_tmp[761316] "expr temp" "maybe param" "maybe type" "temp"
    (761319 'move' call_tmp[761316](761283 call _v _mt[243] _arg1[761224]))
    unknown call_tmp[761321] "expr temp" "maybe param" "maybe type" "temp"
    (761324 'move' call_tmp[761321](761287 call _v _mt[243] _arg2[761225]))
    unknown call_tmp[761326] "expr temp" "maybe param" "maybe type" "temp"
    (761329 'move' call_tmp[761326](761291 call != call_tmp[761316] call_tmp[761321]))
    if call_tmp[761326]
    {
      (761309 'move' ret[761304](761308 'deref' 0))
      gotoReturn _end_==[761302] _end_==[761302]
    }
    (761314 'move' ret[761304](761313 'deref' 1))
    label _end_==[761302]
    (761306 return ret[761304])
  }
  where {
    unknown call_tmp[761331] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761334 'move' call_tmp[761331](761228 'typeof' _arg1[761224]))
    unknown call_tmp[761336] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761339 'move' call_tmp[761336](761230 'typeof' _arg2[761225]))
    unknown call_tmp[761341] "expr temp" "maybe param" "maybe type" "temp"
    (761344 'move' call_tmp[761341](761232 call == call_tmp[761331] call_tmp[761336]))
    unknown call_tmp[761346] "expr temp" "maybe param" "maybe type" "temp"
    (761349 'move' call_tmp[761346](761277 call chpl_fields_are_comparable[761234] _arg1[761224] _arg2[761225]))
    (761281 '&' call_tmp[761341] call_tmp[761346])
  }
  function chpl_fields_are_comparable[761363](arg _arg1[761365]:AtomicBool[45874], arg _arg2[761366]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761384]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761391] "expr temp" "maybe param" "maybe type" "temp"
    (761394 'move' call_tmp[761391](761369 call _v _mt[243] _arg1[761365]))
    unknown call_tmp[761396] "expr temp" "maybe param" "maybe type" "temp"
    (761399 'move' call_tmp[761396](761373 call _v _mt[243] _arg2[761366]))
    unknown call_tmp[761401] "expr temp" "maybe param" "maybe type" "temp"
    (761404 'move' call_tmp[761401](761377 'call resolves' c"!=" call_tmp[761391] call_tmp[761396]))
    (761389 'move' ret[761384](761388 'deref' call_tmp[761401]))
    (761386 return ret[761384])
  }
  function !=[761351](arg _arg1[761353]:AtomicBool[45874], arg _arg2[761354]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761433]:bool[10] "RVV" "temp"
    unknown call_tmp[761445] "expr temp" "maybe param" "maybe type" "temp"
    (761448 'move' call_tmp[761445](761412 call _v _mt[243] _arg1[761353]))
    unknown call_tmp[761450] "expr temp" "maybe param" "maybe type" "temp"
    (761453 'move' call_tmp[761450](761416 call _v _mt[243] _arg2[761354]))
    unknown call_tmp[761455] "expr temp" "maybe param" "maybe type" "temp"
    (761458 'move' call_tmp[761455](761420 call != call_tmp[761445] call_tmp[761450]))
    if call_tmp[761455]
    {
      (761438 'move' ret[761433](761437 'deref' 1))
      gotoReturn _end_!=[761431] _end_!=[761431]
    }
    (761443 'move' ret[761433](761442 'deref' 0))
    label _end_!=[761431]
    (761435 return ret[761433])
  }
  where {
    unknown call_tmp[761460] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761463 'move' call_tmp[761460](761357 'typeof' _arg1[761353]))
    unknown call_tmp[761465] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761468 'move' call_tmp[761465](761359 'typeof' _arg2[761354]))
    unknown call_tmp[761470] "expr temp" "maybe param" "maybe type" "temp"
    (761473 'move' call_tmp[761470](761361 call == call_tmp[761460] call_tmp[761465]))
    unknown call_tmp[761475] "expr temp" "maybe param" "maybe type" "temp"
    (761478 'move' call_tmp[761475](761406 call chpl_fields_are_comparable[761363] _arg1[761353] _arg2[761354]))
    (761410 '&' call_tmp[761470] call_tmp[761475])
  }
  function chpl_fields_are_comparable[761492](arg _arg1[761494]:AtomicBool[45874], arg _arg2[761495]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761513]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761520] "expr temp" "maybe param" "maybe type" "temp"
    (761523 'move' call_tmp[761520](761498 call _v _mt[243] _arg1[761494]))
    unknown call_tmp[761525] "expr temp" "maybe param" "maybe type" "temp"
    (761528 'move' call_tmp[761525](761502 call _v _mt[243] _arg2[761495]))
    unknown call_tmp[761530] "expr temp" "maybe param" "maybe type" "temp"
    (761533 'move' call_tmp[761530](761506 'call resolves' c"<" call_tmp[761520] call_tmp[761525]))
    (761518 'move' ret[761513](761517 'deref' call_tmp[761530]))
    (761515 return ret[761513])
  }
  function <[761480](arg _arg1[761482]:AtomicBool[45874], arg _arg2[761483]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761577]:bool[10] "RVV" "temp"
    unknown call_tmp[761594] "expr temp" "maybe param" "maybe type" "temp"
    (761597 'move' call_tmp[761594](761541 call _v _mt[243] _arg1[761482]))
    unknown call_tmp[761599] "expr temp" "maybe param" "maybe type" "temp"
    (761602 'move' call_tmp[761599](761545 call _v _mt[243] _arg2[761483]))
    unknown call_tmp[761604] "expr temp" "maybe param" "maybe type" "temp"
    (761607 'move' call_tmp[761604](761549 call < call_tmp[761594] call_tmp[761599]))
    if call_tmp[761604]
    {
      (761582 'move' ret[761577](761581 'deref' 1))
      gotoReturn _end_<[761575] _end_<[761575]
    }
    unknown call_tmp[761609] "expr temp" "maybe param" "maybe type" "temp"
    (761612 'move' call_tmp[761609](761555 call _v _mt[243] _arg1[761482]))
    unknown call_tmp[761614] "expr temp" "maybe param" "maybe type" "temp"
    (761617 'move' call_tmp[761614](761559 call _v _mt[243] _arg2[761483]))
    unknown call_tmp[761619] "expr temp" "maybe param" "maybe type" "temp"
    (761622 'move' call_tmp[761619](761563 call > call_tmp[761609] call_tmp[761614]))
    if call_tmp[761619]
    {
      (761587 'move' ret[761577](761586 'deref' 0))
      gotoReturn _end_<[761575] _end_<[761575]
    }
    (761592 'move' ret[761577](761591 'deref' 0))
    label _end_<[761575]
    (761579 return ret[761577])
  }
  where {
    unknown call_tmp[761624] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761627 'move' call_tmp[761624](761486 'typeof' _arg1[761482]))
    unknown call_tmp[761629] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761632 'move' call_tmp[761629](761488 'typeof' _arg2[761483]))
    unknown call_tmp[761634] "expr temp" "maybe param" "maybe type" "temp"
    (761637 'move' call_tmp[761634](761490 call == call_tmp[761624] call_tmp[761629]))
    unknown call_tmp[761639] "expr temp" "maybe param" "maybe type" "temp"
    (761642 'move' call_tmp[761639](761535 call chpl_fields_are_comparable[761492] _arg1[761482] _arg2[761483]))
    (761539 '&' call_tmp[761634] call_tmp[761639])
  }
  function chpl_fields_are_comparable[761656](arg _arg1[761658]:AtomicBool[45874], arg _arg2[761659]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761677]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761684] "expr temp" "maybe param" "maybe type" "temp"
    (761687 'move' call_tmp[761684](761662 call _v _mt[243] _arg1[761658]))
    unknown call_tmp[761689] "expr temp" "maybe param" "maybe type" "temp"
    (761692 'move' call_tmp[761689](761666 call _v _mt[243] _arg2[761659]))
    unknown call_tmp[761694] "expr temp" "maybe param" "maybe type" "temp"
    (761697 'move' call_tmp[761694](761670 'call resolves' c"<=" call_tmp[761684] call_tmp[761689]))
    (761682 'move' ret[761677](761681 'deref' call_tmp[761694]))
    (761679 return ret[761677])
  }
  function <=[761644](arg _arg1[761646]:AtomicBool[45874], arg _arg2[761647]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761741]:bool[10] "RVV" "temp"
    unknown call_tmp[761758] "expr temp" "maybe param" "maybe type" "temp"
    (761761 'move' call_tmp[761758](761705 call _v _mt[243] _arg1[761646]))
    unknown call_tmp[761763] "expr temp" "maybe param" "maybe type" "temp"
    (761766 'move' call_tmp[761763](761709 call _v _mt[243] _arg2[761647]))
    unknown call_tmp[761768] "expr temp" "maybe param" "maybe type" "temp"
    (761771 'move' call_tmp[761768](761713 call < call_tmp[761758] call_tmp[761763]))
    if call_tmp[761768]
    {
      (761746 'move' ret[761741](761745 'deref' 1))
      gotoReturn _end_<=[761739] _end_<=[761739]
    }
    unknown call_tmp[761773] "expr temp" "maybe param" "maybe type" "temp"
    (761776 'move' call_tmp[761773](761719 call _v _mt[243] _arg1[761646]))
    unknown call_tmp[761778] "expr temp" "maybe param" "maybe type" "temp"
    (761781 'move' call_tmp[761778](761723 call _v _mt[243] _arg2[761647]))
    unknown call_tmp[761783] "expr temp" "maybe param" "maybe type" "temp"
    (761786 'move' call_tmp[761783](761727 call > call_tmp[761773] call_tmp[761778]))
    if call_tmp[761783]
    {
      (761751 'move' ret[761741](761750 'deref' 0))
      gotoReturn _end_<=[761739] _end_<=[761739]
    }
    (761756 'move' ret[761741](761755 'deref' 1))
    label _end_<=[761739]
    (761743 return ret[761741])
  }
  where {
    unknown call_tmp[761788] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761791 'move' call_tmp[761788](761650 'typeof' _arg1[761646]))
    unknown call_tmp[761793] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761796 'move' call_tmp[761793](761652 'typeof' _arg2[761647]))
    unknown call_tmp[761798] "expr temp" "maybe param" "maybe type" "temp"
    (761801 'move' call_tmp[761798](761654 call == call_tmp[761788] call_tmp[761793]))
    unknown call_tmp[761803] "expr temp" "maybe param" "maybe type" "temp"
    (761806 'move' call_tmp[761803](761699 call chpl_fields_are_comparable[761656] _arg1[761646] _arg2[761647]))
    (761703 '&' call_tmp[761798] call_tmp[761803])
  }
  function chpl_fields_are_comparable[761820](arg _arg1[761822]:AtomicBool[45874], arg _arg2[761823]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[761841]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[761848] "expr temp" "maybe param" "maybe type" "temp"
    (761851 'move' call_tmp[761848](761826 call _v _mt[243] _arg1[761822]))
    unknown call_tmp[761853] "expr temp" "maybe param" "maybe type" "temp"
    (761856 'move' call_tmp[761853](761830 call _v _mt[243] _arg2[761823]))
    unknown call_tmp[761858] "expr temp" "maybe param" "maybe type" "temp"
    (761861 'move' call_tmp[761858](761834 'call resolves' c">" call_tmp[761848] call_tmp[761853]))
    (761846 'move' ret[761841](761845 'deref' call_tmp[761858]))
    (761843 return ret[761841])
  }
  function >[761808](arg _arg1[761810]:AtomicBool[45874], arg _arg2[761811]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[761905]:bool[10] "RVV" "temp"
    unknown call_tmp[761922] "expr temp" "maybe param" "maybe type" "temp"
    (761925 'move' call_tmp[761922](761869 call _v _mt[243] _arg1[761810]))
    unknown call_tmp[761927] "expr temp" "maybe param" "maybe type" "temp"
    (761930 'move' call_tmp[761927](761873 call _v _mt[243] _arg2[761811]))
    unknown call_tmp[761932] "expr temp" "maybe param" "maybe type" "temp"
    (761935 'move' call_tmp[761932](761877 call > call_tmp[761922] call_tmp[761927]))
    if call_tmp[761932]
    {
      (761910 'move' ret[761905](761909 'deref' 1))
      gotoReturn _end_>[761903] _end_>[761903]
    }
    unknown call_tmp[761937] "expr temp" "maybe param" "maybe type" "temp"
    (761940 'move' call_tmp[761937](761883 call _v _mt[243] _arg1[761810]))
    unknown call_tmp[761942] "expr temp" "maybe param" "maybe type" "temp"
    (761945 'move' call_tmp[761942](761887 call _v _mt[243] _arg2[761811]))
    unknown call_tmp[761947] "expr temp" "maybe param" "maybe type" "temp"
    (761950 'move' call_tmp[761947](761891 call < call_tmp[761937] call_tmp[761942]))
    if call_tmp[761947]
    {
      (761915 'move' ret[761905](761914 'deref' 0))
      gotoReturn _end_>[761903] _end_>[761903]
    }
    (761920 'move' ret[761905](761919 'deref' 0))
    label _end_>[761903]
    (761907 return ret[761905])
  }
  where {
    unknown call_tmp[761952] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761955 'move' call_tmp[761952](761814 'typeof' _arg1[761810]))
    unknown call_tmp[761957] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (761960 'move' call_tmp[761957](761816 'typeof' _arg2[761811]))
    unknown call_tmp[761962] "expr temp" "maybe param" "maybe type" "temp"
    (761965 'move' call_tmp[761962](761818 call == call_tmp[761952] call_tmp[761957]))
    unknown call_tmp[761967] "expr temp" "maybe param" "maybe type" "temp"
    (761970 'move' call_tmp[761967](761863 call chpl_fields_are_comparable[761820] _arg1[761810] _arg2[761811]))
    (761867 '&' call_tmp[761962] call_tmp[761967])
  }
  function chpl_fields_are_comparable[761984](arg _arg1[761986]:AtomicBool[45874], arg _arg2[761987]:AtomicBool[45874]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762005]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762012] "expr temp" "maybe param" "maybe type" "temp"
    (762015 'move' call_tmp[762012](761990 call _v _mt[243] _arg1[761986]))
    unknown call_tmp[762017] "expr temp" "maybe param" "maybe type" "temp"
    (762020 'move' call_tmp[762017](761994 call _v _mt[243] _arg2[761987]))
    unknown call_tmp[762022] "expr temp" "maybe param" "maybe type" "temp"
    (762025 'move' call_tmp[762022](761998 'call resolves' c">=" call_tmp[762012] call_tmp[762017]))
    (762010 'move' ret[762005](762009 'deref' call_tmp[762022]))
    (762007 return ret[762005])
  }
  function >=[761972](arg _arg1[761974]:AtomicBool[45874], arg _arg2[761975]:AtomicBool[45874]) : bool[10] "compiler generated" "last resort"
  {
    val ret[762069]:bool[10] "RVV" "temp"
    unknown call_tmp[762086] "expr temp" "maybe param" "maybe type" "temp"
    (762089 'move' call_tmp[762086](762033 call _v _mt[243] _arg1[761974]))
    unknown call_tmp[762091] "expr temp" "maybe param" "maybe type" "temp"
    (762094 'move' call_tmp[762091](762037 call _v _mt[243] _arg2[761975]))
    unknown call_tmp[762096] "expr temp" "maybe param" "maybe type" "temp"
    (762099 'move' call_tmp[762096](762041 call > call_tmp[762086] call_tmp[762091]))
    if call_tmp[762096]
    {
      (762074 'move' ret[762069](762073 'deref' 1))
      gotoReturn _end_>=[762067] _end_>=[762067]
    }
    unknown call_tmp[762101] "expr temp" "maybe param" "maybe type" "temp"
    (762104 'move' call_tmp[762101](762047 call _v _mt[243] _arg1[761974]))
    unknown call_tmp[762106] "expr temp" "maybe param" "maybe type" "temp"
    (762109 'move' call_tmp[762106](762051 call _v _mt[243] _arg2[761975]))
    unknown call_tmp[762111] "expr temp" "maybe param" "maybe type" "temp"
    (762114 'move' call_tmp[762111](762055 call < call_tmp[762101] call_tmp[762106]))
    if call_tmp[762111]
    {
      (762079 'move' ret[762069](762078 'deref' 0))
      gotoReturn _end_>=[762067] _end_>=[762067]
    }
    (762084 'move' ret[762069](762083 'deref' 1))
    label _end_>=[762067]
    (762071 return ret[762069])
  }
  where {
    unknown call_tmp[762116] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762119 'move' call_tmp[762116](761978 'typeof' _arg1[761974]))
    unknown call_tmp[762121] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762124 'move' call_tmp[762121](761980 'typeof' _arg2[761975]))
    unknown call_tmp[762126] "expr temp" "maybe param" "maybe type" "temp"
    (762129 'move' call_tmp[762126](761982 call == call_tmp[762116] call_tmp[762121]))
    unknown call_tmp[762131] "expr temp" "maybe param" "maybe type" "temp"
    (762134 'move' call_tmp[762131](762027 call chpl_fields_are_comparable[761984] _arg1[761974] _arg2[761975]))
    (762031 '&' call_tmp[762126] call_tmp[762131])
  }
  function chpl__defaultHash[762136](arg r[762138]:AtomicBool[45874]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[762151] "RVV" "temp"
    unknown call_tmp[762158] "expr temp" "maybe param" "maybe type" "temp"
    (762161 'move' call_tmp[762158](762140 call _v _mt[243] r[762138]))
    unknown call_tmp[762163] "expr temp" "maybe param" "maybe type" "temp"
    (762166 'move' call_tmp[762163](762144 call chpl__defaultHash call_tmp[762158]))
    (762156 'move' ret[762151](762155 'deref' call_tmp[762163]))
    (762153 return ret[762151])
  }
  type AtomicBool[45874] unknown _v[44717] "no doc"(44716 call externT bool[10])
  function AtomicT[48077](?).init_helper[45963](arg _mt[48081]:_MT[238], arg this[48079]:AtomicT[48077](?), arg value[45960] :
  (371073 call T _mt[243] this[48079])) : _unknown[51] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_init[45981](ref arg obj[45978] :
    unknown call_tmp[606690] "expr temp" "maybe param" "maybe type" "temp", arg value[45984] :
    (371088 call T _mt[243] this[48079]), arg _chpl_cname[45992]:string[26] =
    unknown call_tmp[606699] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505941] "RVV" "temp"
      (505943 return ret[505941])
    }
    { scopeless type
      void[4]
    }
    unknown call_tmp[606706] "expr temp" "maybe param" "maybe type" "temp"
    (606709 'move' call_tmp[606706](371093 call _v _mt[243] this[48079]))
    (46001 call atomic_init call_tmp[606706] value[45960])
    (505945 return _void[55])
  }
  function AtomicT[48077](?).init[46009](arg _mt[48085]:_MT[238], ref arg this[48083]:AtomicT[48077](?), arg T[46007]:_any[178](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454645] "temp" "type variable"
    (454647 'move' tmp[454645] T[46007])
    (454649 'init field' this[48083] c"T" tmp[454645])
    (474368 'end of statement')
    unknown tmp[454653] "temp"
    unknown call_tmp[606711] "expr temp" "maybe param" "maybe type" "temp"
    (606714 'move' call_tmp[606711](454664 '.v' this[48083] c"T"))
    unknown call_tmp[606716] "expr temp" "maybe param" "maybe type" "temp"
    (606719 'move' call_tmp[606716](454656 call externT call_tmp[606711]))
    (454658 'default init var' tmp[454653] call_tmp[606716])
    (454660 '.=' this[48083] c"_v" tmp[454653])
    (474369 'end of statement')
    const default[46030] "dead at end of block" "const" "insert auto destroy"
    (540667 'default init var' default[46030] T[46007])
    (46033 'end of statement')
    (46037 call(371100 call (partial) init_helper _mt[243] this[48083]) default[46030])
    (474370 'end of statement' default[46030])
    (505947 return _void[55])
  }
  function AtomicT[48077](?).init=[46048](arg _mt[48089]:_MT[238], ref arg this[48087]:AtomicT[48077](?), const  ref arg other[46045]:AtomicT[48077](?)) : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454667] "temp" "type variable"
    (454669 'move' tmp[454667](46055 call T _mt[243] other[46045]))
    (454671 'init field' this[48087] c"T" tmp[454667])
    (474372 'end of statement')
    unknown tmp[454675] "temp"
    unknown call_tmp[606725] "expr temp" "maybe param" "maybe type" "temp"
    (606728 'move' call_tmp[606725](454686 '.v' this[48087] c"T"))
    unknown call_tmp[606730] "expr temp" "maybe param" "maybe type" "temp"
    (606733 'move' call_tmp[606730](454678 call externT call_tmp[606725]))
    (454680 'default init var' tmp[454675] call_tmp[606730])
    (454682 '.=' this[48087] c"_v" tmp[454675])
    (474373 'end of statement')
    unknown call_tmp[606739] "expr temp" "maybe param" "maybe type" "temp"
    (606742 'move' call_tmp[606739](46075 call(46071 call (partial) read _mt[243] other[46045])))
    (46077 call(371106 call (partial) init_helper _mt[243] this[48087]) call_tmp[606739])
    (505949 return _void[55])
  }
  function AtomicT[48077](?).init=[46091](arg _mt[48093]:_MT[238], ref arg this[48091]:AtomicT[48077](?), arg other[46088] :
  unknown call_tmp[606744] "expr temp" "maybe param" "maybe type" "temp" "type variable") : void[4] "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown tmp[454689] "temp" "type variable"
    (454691 'move' tmp[454689](46098 'typeof' other[46088]))
    (454693 'init field' this[48091] c"T" tmp[454689])
    (474375 'end of statement')
    unknown tmp[454697] "temp"
    unknown call_tmp[606751] "expr temp" "maybe param" "maybe type" "temp"
    (606754 'move' call_tmp[606751](454708 '.v' this[48091] c"T"))
    unknown call_tmp[606756] "expr temp" "maybe param" "maybe type" "temp"
    (606759 'move' call_tmp[606756](454700 call externT call_tmp[606751]))
    (454702 'default init var' tmp[454697] call_tmp[606756])
    (454704 '.=' this[48091] c"_v" tmp[454697])
    (474376 'end of statement')
    (46113 call(371112 call (partial) init_helper _mt[243] this[48091]) other[46088])
    (505951 return _void[55])
  }
  function AtomicT[48077](?).deinit[46119](arg _mt[48097]:_MT[238], arg this[48095]:AtomicT[48077](?)) : _unknown[51] "atomic type" "destructor" "method" "primary method" "no doc" "no return value for void"
  {
    function atomic_destroy[46137](ref arg obj[46134] :
    unknown call_tmp[606765] "expr temp" "maybe param" "maybe type" "temp", arg _chpl_cname[46144]:string[26] =
    unknown call_tmp[606772] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "fn synchronization free" "no return value for void"
    {
      unknown ret[505955] "RVV" "temp"
      (505957 return ret[505955])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[46158] "const" "temp"
      unknown call_tmp[606777] "expr temp" "maybe param" "maybe type" "temp"
      (606780 'move' call_tmp[606777](46155 '_wide_get_locale' this[48095]))
      (46159 'move' tmp[46158](46156 'deref' call_tmp[606777]))
      unknown call_tmp[606784] "expr temp" "maybe param" "maybe type" "temp"
      (606787 'move' call_tmp[606784](371129 call _v _mt[243] this[48095]))
      (46153 call atomic_destroy call_tmp[606784])
      (46162 'elided on block' 0 tmp[46158])
    }
    (505959 return _void[55])
  }
  function AtomicT[48077](?).read[46179](arg _mt[48101]:_MT[238], const arg this[48099]:AtomicT[48077](?), param arg order[46175]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[505969] "RVV" "temp"
    function atomic_load[46196](const  ref arg obj[46193] :
    unknown call_tmp[606791] "expr temp" "maybe param" "maybe type" "temp", arg order[46199]:memory_order[186619], arg _chpl_cname[46207]:string[26] =
    unknown call_tmp[606798] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505963] "RVV" "temp"
      (505965 return ret[505963])
    }
    { scopeless type
      (371151 call T _mt[243] this[48099])
    }
    unknown ret[46213] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606807] "expr temp" "maybe param" "maybe type" "temp"
    (606810 'move' call_tmp[606807](371156 call T _mt[243] this[48099]))
    (540669 'default init var' ret[46213] call_tmp[606807])
    (46216 'end of statement')
    {
      const tmp[46233] "const" "temp"
      unknown call_tmp[606812] "expr temp" "maybe param" "maybe type" "temp"
      (606815 'move' call_tmp[606812](46230 '_wide_get_locale' this[48099]))
      (46234 'move' tmp[46233](46231 'deref' call_tmp[606812]))
      unknown call_tmp[606819] "expr temp" "maybe param" "maybe type" "temp"
      (606822 'move' call_tmp[606819](371163 call _v _mt[243] this[48099]))
      unknown call_tmp[606824] "expr temp" "maybe param" "maybe type" "temp"
      (606827 'move' call_tmp[606824](46225 call c_memory_order order[46175]))
      unknown call_tmp[606829] "expr temp" "maybe param" "maybe type" "temp"
      (606832 'move' call_tmp[606829](46226 call atomic_load call_tmp[606819] call_tmp[606824]))
      (46227 call = ret[46213] call_tmp[606829])
      (474379 'end of statement' ret[46213])
      (46237 'elided on block' 0 tmp[46233])
    }
    unknown call_tmp[606836] "expr temp" "maybe param" "maybe type" "temp"
    (606839 'move' call_tmp[606836](505974 call T _mt[243] this[48099]))
    (505978 'move' ret[505969](505977 'coerce' ret[46213] call_tmp[606836]))
    gotoReturn _end_read[505967] _end_read[505967]
    (474381 'end of statement' ret[46213])
    label _end_read[505967]
    (505971 return ret[505969])
  }
  { scopeless type
    (371135 call T _mt[243] this[48099])
  }
  function AtomicT[48077](?).write[46253](arg _mt[48105]:_MT[238], arg this[48103]:AtomicT[48077](?), arg value[46250] :
  (371170 call T _mt[243] this[48103]), param arg order[46260]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[505990] "RVV" "temp"
    function atomic_store[46279](ref arg obj[46276] :
    unknown call_tmp[606847] "expr temp" "maybe param" "maybe type" "temp", arg value[46282] :
    (371186 call T _mt[243] this[48103]), arg order[46286]:memory_order[186619], arg _chpl_cname[46294]:string[26] =
    unknown call_tmp[606856] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505984] "RVV" "temp"
      (505986 return ret[505984])
    }
    { scopeless type
      void[4]
    }
    {
      const tmp[46313] "const" "temp"
      unknown call_tmp[606861] "expr temp" "maybe param" "maybe type" "temp"
      (606864 'move' call_tmp[606861](46310 '_wide_get_locale' this[48103]))
      (46314 'move' tmp[46313](46311 'deref' call_tmp[606861]))
      unknown call_tmp[606868] "expr temp" "maybe param" "maybe type" "temp"
      (606871 'move' call_tmp[606868](371193 call _v _mt[243] this[48103]))
      unknown call_tmp[606873] "expr temp" "maybe param" "maybe type" "temp"
      (606876 'move' call_tmp[606873](46307 call c_memory_order order[46260]))
      (46308 call atomic_store call_tmp[606868] value[46250] call_tmp[606873])
      (46317 'elided on block' 0 tmp[46313])
    }
    (505992 return ret[505990])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).exchange[46330](arg _mt[48109]:_MT[238], arg this[48107]:AtomicT[48077](?), arg value[46327] :
  (371200 call T _mt[243] this[48107]), param arg order[46337]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506002] "RVV" "temp"
    function atomic_exchange[46356](ref arg obj[46353] :
    unknown call_tmp[606882] "expr temp" "maybe param" "maybe type" "temp", arg value[46359] :
    (371221 call T _mt[243] this[48107]), arg order[46363]:memory_order[186619], arg _chpl_cname[46371]:string[26] =
    unknown call_tmp[606891] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[505996] "RVV" "temp"
      (505998 return ret[505996])
    }
    { scopeless type
      (371227 call T _mt[243] this[48107])
    }
    unknown ret[46377] "dead at end of block" "insert auto destroy"
    unknown call_tmp[606900] "expr temp" "maybe param" "maybe type" "temp"
    (606903 'move' call_tmp[606900](371232 call T _mt[243] this[48107]))
    (540671 'default init var' ret[46377] call_tmp[606900])
    (46380 'end of statement')
    {
      const tmp[46398] "const" "temp"
      unknown call_tmp[606905] "expr temp" "maybe param" "maybe type" "temp"
      (606908 'move' call_tmp[606905](46395 '_wide_get_locale' this[48107]))
      (46399 'move' tmp[46398](46396 'deref' call_tmp[606905]))
      unknown call_tmp[606912] "expr temp" "maybe param" "maybe type" "temp"
      (606915 'move' call_tmp[606912](371239 call _v _mt[243] this[48107]))
      unknown call_tmp[606917] "expr temp" "maybe param" "maybe type" "temp"
      (606920 'move' call_tmp[606917](46390 call c_memory_order order[46337]))
      unknown call_tmp[606922] "expr temp" "maybe param" "maybe type" "temp"
      (606925 'move' call_tmp[606922](46391 call atomic_exchange call_tmp[606912] value[46327] call_tmp[606917]))
      (46392 call = ret[46377] call_tmp[606922])
      (474384 'end of statement' ret[46377])
      (46402 'elided on block' 0 tmp[46398])
    }
    unknown call_tmp[606929] "expr temp" "maybe param" "maybe type" "temp"
    (606932 'move' call_tmp[606929](506007 call T _mt[243] this[48107]))
    (506011 'move' ret[506002](506010 'coerce' ret[46377] call_tmp[606929]))
    gotoReturn _end_exchange[506000] _end_exchange[506000]
    (474386 'end of statement' ret[46377])
    label _end_exchange[506000]
    (506004 return ret[506002])
  }
  { scopeless type
    (371206 call T _mt[243] this[48107])
  }
  function AtomicT[48077](?).compareExchange[46418](arg _mt[48113]:_MT[238], arg this[48111]:AtomicT[48077](?), ref arg expected[46415] :
  (371247 call T _mt[243] this[48111]), arg desired[46421] :
  (371252 call T _mt[243] this[48111]), param arg order[46429]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506017] "RVV" "temp"
    unknown call_tmp[606942] "expr temp" "maybe param" "maybe type" "temp"
    (606945 'move' call_tmp[606942](46445 call readableOrder order[46429]))
    unknown call_tmp[606947] "expr temp" "maybe param" "maybe type" "temp"
    (606950 'move' call_tmp[606947](46446 call(46435 call (partial) compareExchange _mt[243] this[48111]) expected[46415] desired[46421] order[46429] call_tmp[606942]))
    (506023 'move' ret[506017](506022 'coerce' call_tmp[606947] bool[10]))
    (506019 return ret[506017])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchange[46459](arg _mt[48117]:_MT[238], arg this[48115]:AtomicT[48077](?), ref arg expected[46456] :
  (371262 call T _mt[243] this[48115]), arg desired[46462] :
  (371267 call T _mt[243] this[48115]), param arg success[46466]:memoryOrder[186978], param arg failure[46470]:memoryOrder[186978]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506033] "RVV" "temp"
    function atomic_compare_exchange_strong[46488](ref arg obj[46485] :
    unknown call_tmp[606958] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46491] :
    (371284 call T _mt[243] this[48115]), arg desired[46495] :
    (371289 call T _mt[243] this[48115]), arg succ[46499]:memory_order[186619], arg fail[46503]:memory_order[186619], arg _chpl_cname[46511]:string[26] =
    unknown call_tmp[606969] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506027] "RVV" "temp"
      (506029 return ret[506027])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46517] "dead at end of block" "insert auto destroy"
    (540673 'default init var' ret[46517] bool[10])
    (46520 'end of statement')
    {
      const tmp[46562] "const" "temp"
      unknown call_tmp[606974] "expr temp" "maybe param" "maybe type" "temp"
      (606977 'move' call_tmp[606974](46559 '_wide_get_locale' this[48115]))
      (46563 'move' tmp[46562](46560 'deref' call_tmp[606974]))
      {
        unknown localizedExpected[46523] "dead at end of block" "insert auto destroy"
        (540675 'init var' localizedExpected[46523] expected[46456])
        (46526 'end of statement')
        unknown call_tmp[606981] "expr temp" "maybe param" "maybe type" "temp"
        (606984 'move' call_tmp[606981](371299 call _v _mt[243] this[48115]))
        unknown call_tmp[606986] "expr temp" "maybe param" "maybe type" "temp"
        (606989 'move' call_tmp[606986](46537 call c_memory_order success[46466]))
        unknown call_tmp[606991] "expr temp" "maybe param" "maybe type" "temp"
        (606994 'move' call_tmp[606991](46541 call c_memory_order failure[46470]))
        unknown call_tmp[606996] "expr temp" "maybe param" "maybe type" "temp"
        (606999 'move' call_tmp[606996](46542 call atomic_compare_exchange_strong call_tmp[606981] localizedExpected[46523] desired[46462] call_tmp[606986] call_tmp[606991]))
        (46543 call = ret[46517] call_tmp[606996])
        (474389 'end of statement' ret[46517] localizedExpected[46523])
        unknown call_tmp[607001] "expr temp" "maybe param" "maybe type" "temp"
        (607004 'move' call_tmp[607001](46547 call ! ret[46517]))
        unknown call_tmp[607006] "expr temp" "maybe param" "maybe type" "temp"
        (607009 'move' call_tmp[607006](46554 call _cond_test call_tmp[607001]))
        if call_tmp[607006]
        {
          (46551 call = expected[46456] localizedExpected[46523])
          (474392 'end of statement' localizedExpected[46523])
        }
      }
      (46566 'elided on block' 0 tmp[46562])
    }
    (506039 'move' ret[506033](506038 'coerce' ret[46517] bool[10]))
    gotoReturn _end_compareExchange[506031] _end_compareExchange[506031]
    (474394 'end of statement' ret[46517])
    label _end_compareExchange[506031]
    (506035 return ret[506033])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46582](arg _mt[48121]:_MT[238], arg this[48119]:AtomicT[48077](?), ref arg expected[46579] :
  (371312 call T _mt[243] this[48119]), arg desired[46585] :
  (371317 call T _mt[243] this[48119]), param arg order[46593]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506045] "RVV" "temp"
    unknown call_tmp[607017] "expr temp" "maybe param" "maybe type" "temp"
    (607020 'move' call_tmp[607017](46609 call readableOrder order[46593]))
    unknown call_tmp[607022] "expr temp" "maybe param" "maybe type" "temp"
    (607025 'move' call_tmp[607022](46610 call(46599 call (partial) compareExchangeWeak _mt[243] this[48119]) expected[46579] desired[46585] order[46593] call_tmp[607017]))
    (506051 'move' ret[506045](506050 'coerce' call_tmp[607022] bool[10]))
    (506047 return ret[506045])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareExchangeWeak[46623](arg _mt[48125]:_MT[238], arg this[48123]:AtomicT[48077](?), ref arg expected[46620] :
  (371327 call T _mt[243] this[48123]), arg desired[46626] :
  (371332 call T _mt[243] this[48123]), param arg success[46630]:memoryOrder[186978], param arg failure[46634]:memoryOrder[186978]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506061] "RVV" "temp"
    function atomic_compare_exchange_weak[46652](ref arg obj[46649] :
    unknown call_tmp[607033] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46655] :
    (371349 call T _mt[243] this[48123]), arg desired[46659] :
    (371354 call T _mt[243] this[48123]), arg succ[46663]:memory_order[186619], arg fail[46667]:memory_order[186619], arg _chpl_cname[46675]:string[26] =
    unknown call_tmp[607044] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506055] "RVV" "temp"
      (506057 return ret[506055])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46681] "dead at end of block" "insert auto destroy"
    (540677 'default init var' ret[46681] bool[10])
    (46684 'end of statement')
    {
      const tmp[46726] "const" "temp"
      unknown call_tmp[607049] "expr temp" "maybe param" "maybe type" "temp"
      (607052 'move' call_tmp[607049](46723 '_wide_get_locale' this[48123]))
      (46727 'move' tmp[46726](46724 'deref' call_tmp[607049]))
      {
        unknown localizedExpected[46687] "dead at end of block" "insert auto destroy"
        (540679 'init var' localizedExpected[46687] expected[46620])
        (46690 'end of statement')
        unknown call_tmp[607056] "expr temp" "maybe param" "maybe type" "temp"
        (607059 'move' call_tmp[607056](371364 call _v _mt[243] this[48123]))
        unknown call_tmp[607061] "expr temp" "maybe param" "maybe type" "temp"
        (607064 'move' call_tmp[607061](46701 call c_memory_order success[46630]))
        unknown call_tmp[607066] "expr temp" "maybe param" "maybe type" "temp"
        (607069 'move' call_tmp[607066](46705 call c_memory_order failure[46634]))
        unknown call_tmp[607071] "expr temp" "maybe param" "maybe type" "temp"
        (607074 'move' call_tmp[607071](46706 call atomic_compare_exchange_weak call_tmp[607056] localizedExpected[46687] desired[46626] call_tmp[607061] call_tmp[607066]))
        (46707 call = ret[46681] call_tmp[607071])
        (474397 'end of statement' ret[46681] localizedExpected[46687])
        unknown call_tmp[607076] "expr temp" "maybe param" "maybe type" "temp"
        (607079 'move' call_tmp[607076](46711 call ! ret[46681]))
        unknown call_tmp[607081] "expr temp" "maybe param" "maybe type" "temp"
        (607084 'move' call_tmp[607081](46718 call _cond_test call_tmp[607076]))
        if call_tmp[607081]
        {
          (46715 call = expected[46620] localizedExpected[46687])
          (474400 'end of statement' localizedExpected[46687])
        }
      }
      (46730 'elided on block' 0 tmp[46726])
    }
    (506067 'move' ret[506061](506066 'coerce' ret[46681] bool[10]))
    gotoReturn _end_compareExchangeWeak[506059] _end_compareExchangeWeak[506059]
    (474402 'end of statement' ret[46681])
    label _end_compareExchangeWeak[506059]
    (506063 return ret[506061])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).compareAndSwap[46746](arg _mt[48129]:_MT[238], arg this[48127]:AtomicT[48077](?), arg expected[46743] :
  (371377 call T _mt[243] this[48127]), arg desired[46749] :
  (371382 call T _mt[243] this[48127]), param arg order[46757]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506079] "RVV" "temp"
    function atomic_compare_exchange_strong[46776](ref arg obj[46773] :
    unknown call_tmp[607092] "expr temp" "maybe param" "maybe type" "temp", ref arg expected[46779] :
    (371398 call T _mt[243] this[48127]), arg desired[46783] :
    (371403 call T _mt[243] this[48127]), arg succ[46787]:memory_order[186619], arg fail[46791]:memory_order[186619], arg _chpl_cname[46799]:string[26] =
    unknown call_tmp[607103] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506073] "RVV" "temp"
      (506075 return ret[506073])
    }
    { scopeless type
      bool[10]
    }
    unknown ret[46805] "dead at end of block" "insert auto destroy"
    (540681 'default init var' ret[46805] bool[10])
    (46808 'end of statement')
    {
      const tmp[46840] "const" "temp"
      unknown call_tmp[607108] "expr temp" "maybe param" "maybe type" "temp"
      (607111 'move' call_tmp[607108](46837 '_wide_get_locale' this[48127]))
      (46841 'move' tmp[46840](46838 'deref' call_tmp[607108]))
      {
        unknown mutableExpected[46811] "dead at end of block" "insert auto destroy"
        (540683 'init var' mutableExpected[46811] expected[46743])
        (46814 'end of statement')
        unknown call_tmp[607115] "expr temp" "maybe param" "maybe type" "temp"
        (607118 'move' call_tmp[607115](371413 call _v _mt[243] this[48127]))
        unknown call_tmp[607120] "expr temp" "maybe param" "maybe type" "temp"
        (607123 'move' call_tmp[607120](46825 call c_memory_order order[46757]))
        unknown call_tmp[607125] "expr temp" "maybe param" "maybe type" "temp"
        (607128 'move' call_tmp[607125](46830 call readableOrder order[46757]))
        unknown call_tmp[607130] "expr temp" "maybe param" "maybe type" "temp"
        (607133 'move' call_tmp[607130](46832 call c_memory_order call_tmp[607125]))
        unknown call_tmp[607135] "expr temp" "maybe param" "maybe type" "temp"
        (607138 'move' call_tmp[607135](46833 call atomic_compare_exchange_strong call_tmp[607115] mutableExpected[46811] desired[46749] call_tmp[607120] call_tmp[607130]))
        (46834 call = ret[46805] call_tmp[607135])
        (474404 'end of statement' ret[46805] mutableExpected[46811])
      }
      (46844 'elided on block' 0 tmp[46840])
    }
    (506085 'move' ret[506079](506084 'coerce' ret[46805] bool[10]))
    gotoReturn _end_compareAndSwap[506077] _end_compareAndSwap[506077]
    (474407 'end of statement' ret[46805])
    label _end_compareAndSwap[506077]
    (506081 return ret[506079])
  }
  { scopeless type
    bool[10]
  }
  function AtomicT[48077](?).fetchAdd[46860](arg _mt[48133]:_MT[238], arg this[48131]:AtomicT[48077](?), arg value[46857] :
  (371423 call T _mt[243] this[48131]), param arg order[46867]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506097] "RVV" "temp"
    function atomic_fetch_add[46902](ref arg obj[46899] :
    unknown call_tmp[607144] "expr temp" "maybe param" "maybe type" "temp", arg operand[46905] :
    (371444 call T _mt[243] this[48131]), arg order[46909]:memory_order[186619], arg _chpl_cname[46917]:string[26] =
    unknown call_tmp[607153] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506091] "RVV" "temp"
      (506093 return ret[506091])
    }
    { scopeless type
      (371450 call T _mt[243] this[48131])
    }
    unknown ret[46923] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607162] "expr temp" "maybe param" "maybe type" "temp"
    (607165 'move' call_tmp[607162](371455 call T _mt[243] this[48131]))
    (540685 'default init var' ret[46923] call_tmp[607162])
    (46926 'end of statement')
    {
      const tmp[46944] "const" "temp"
      unknown call_tmp[607167] "expr temp" "maybe param" "maybe type" "temp"
      (607170 'move' call_tmp[607167](46941 '_wide_get_locale' this[48131]))
      (46945 'move' tmp[46944](46942 'deref' call_tmp[607167]))
      unknown call_tmp[607174] "expr temp" "maybe param" "maybe type" "temp"
      (607177 'move' call_tmp[607174](371462 call _v _mt[243] this[48131]))
      unknown call_tmp[607179] "expr temp" "maybe param" "maybe type" "temp"
      (607182 'move' call_tmp[607179](46936 call c_memory_order order[46867]))
      unknown call_tmp[607184] "expr temp" "maybe param" "maybe type" "temp"
      (607187 'move' call_tmp[607184](46937 call atomic_fetch_add call_tmp[607174] value[46857] call_tmp[607179]))
      (46938 call = ret[46923] call_tmp[607184])
      (474409 'end of statement' ret[46923])
      (46948 'elided on block' 0 tmp[46944])
    }
    unknown call_tmp[607191] "expr temp" "maybe param" "maybe type" "temp"
    (607194 'move' call_tmp[607191](506102 call T _mt[243] this[48131]))
    (506106 'move' ret[506097](506105 'coerce' ret[46923] call_tmp[607191]))
    gotoReturn _end_fetchAdd[506095] _end_fetchAdd[506095]
    (474411 'end of statement' ret[46923])
    label _end_fetchAdd[506095]
    (506099 return ret[506097])
  }
  { scopeless type
    (371429 call T _mt[243] this[48131])
  }
  function AtomicT[48077](?).add[46964](arg _mt[48137]:_MT[238], arg this[48135]:AtomicT[48077](?), arg value[46961] :
  (371470 call T _mt[243] this[48135]), param arg order[46971]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506118] "RVV" "temp"
    function atomic_fetch_add[46990](ref arg obj[46987] :
    unknown call_tmp[607202] "expr temp" "maybe param" "maybe type" "temp", arg operand[46993] :
    (371486 call T _mt[243] this[48135]), arg order[46997]:memory_order[186619], arg _chpl_cname[47005]:string[26] =
    unknown call_tmp[607211] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506112] "RVV" "temp"
      (506114 return ret[506112])
    }
    { scopeless type
      (371492 call T _mt[243] this[48135])
    }
    {
      const tmp[47024] "const" "temp"
      unknown call_tmp[607218] "expr temp" "maybe param" "maybe type" "temp"
      (607221 'move' call_tmp[607218](47021 '_wide_get_locale' this[48135]))
      (47025 'move' tmp[47024](47022 'deref' call_tmp[607218]))
      unknown call_tmp[607225] "expr temp" "maybe param" "maybe type" "temp"
      (607228 'move' call_tmp[607225](371498 call _v _mt[243] this[48135]))
      unknown call_tmp[607230] "expr temp" "maybe param" "maybe type" "temp"
      (607233 'move' call_tmp[607230](47018 call c_memory_order order[46971]))
      (47019 call atomic_fetch_add call_tmp[607225] value[46961] call_tmp[607230])
      (47028 'elided on block' 0 tmp[47024])
    }
    (506120 return ret[506118])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchSub[47041](arg _mt[48141]:_MT[238], arg this[48139]:AtomicT[48077](?), arg value[47038] :
  (371505 call T _mt[243] this[48139]), param arg order[47048]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506130] "RVV" "temp"
    function atomic_fetch_sub[47083](ref arg obj[47080] :
    unknown call_tmp[607239] "expr temp" "maybe param" "maybe type" "temp", arg operand[47086] :
    (371526 call T _mt[243] this[48139]), arg order[47090]:memory_order[186619], arg _chpl_cname[47098]:string[26] =
    unknown call_tmp[607248] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506124] "RVV" "temp"
      (506126 return ret[506124])
    }
    { scopeless type
      (371532 call T _mt[243] this[48139])
    }
    unknown ret[47104] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607257] "expr temp" "maybe param" "maybe type" "temp"
    (607260 'move' call_tmp[607257](371537 call T _mt[243] this[48139]))
    (540687 'default init var' ret[47104] call_tmp[607257])
    (47107 'end of statement')
    {
      const tmp[47125] "const" "temp"
      unknown call_tmp[607262] "expr temp" "maybe param" "maybe type" "temp"
      (607265 'move' call_tmp[607262](47122 '_wide_get_locale' this[48139]))
      (47126 'move' tmp[47125](47123 'deref' call_tmp[607262]))
      unknown call_tmp[607269] "expr temp" "maybe param" "maybe type" "temp"
      (607272 'move' call_tmp[607269](371544 call _v _mt[243] this[48139]))
      unknown call_tmp[607274] "expr temp" "maybe param" "maybe type" "temp"
      (607277 'move' call_tmp[607274](47117 call c_memory_order order[47048]))
      unknown call_tmp[607279] "expr temp" "maybe param" "maybe type" "temp"
      (607282 'move' call_tmp[607279](47118 call atomic_fetch_sub call_tmp[607269] value[47038] call_tmp[607274]))
      (47119 call = ret[47104] call_tmp[607279])
      (474414 'end of statement' ret[47104])
      (47129 'elided on block' 0 tmp[47125])
    }
    unknown call_tmp[607286] "expr temp" "maybe param" "maybe type" "temp"
    (607289 'move' call_tmp[607286](506135 call T _mt[243] this[48139]))
    (506139 'move' ret[506130](506138 'coerce' ret[47104] call_tmp[607286]))
    gotoReturn _end_fetchSub[506128] _end_fetchSub[506128]
    (474416 'end of statement' ret[47104])
    label _end_fetchSub[506128]
    (506132 return ret[506130])
  }
  { scopeless type
    (371511 call T _mt[243] this[48139])
  }
  function AtomicT[48077](?).sub[47145](arg _mt[48145]:_MT[238], arg this[48143]:AtomicT[48077](?), arg value[47142] :
  (371552 call T _mt[243] this[48143]), param arg order[47152]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506151] "RVV" "temp"
    function atomic_fetch_sub[47171](ref arg obj[47168] :
    unknown call_tmp[607297] "expr temp" "maybe param" "maybe type" "temp", arg operand[47174] :
    (371568 call T _mt[243] this[48143]), arg order[47178]:memory_order[186619], arg _chpl_cname[47186]:string[26] =
    unknown call_tmp[607306] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506145] "RVV" "temp"
      (506147 return ret[506145])
    }
    { scopeless type
      (371574 call T _mt[243] this[48143])
    }
    {
      const tmp[47205] "const" "temp"
      unknown call_tmp[607313] "expr temp" "maybe param" "maybe type" "temp"
      (607316 'move' call_tmp[607313](47202 '_wide_get_locale' this[48143]))
      (47206 'move' tmp[47205](47203 'deref' call_tmp[607313]))
      unknown call_tmp[607320] "expr temp" "maybe param" "maybe type" "temp"
      (607323 'move' call_tmp[607320](371580 call _v _mt[243] this[48143]))
      unknown call_tmp[607325] "expr temp" "maybe param" "maybe type" "temp"
      (607328 'move' call_tmp[607325](47199 call c_memory_order order[47152]))
      (47200 call atomic_fetch_sub call_tmp[607320] value[47142] call_tmp[607325])
      (47209 'elided on block' 0 tmp[47205])
    }
    (506153 return ret[506151])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchOr[47222](arg _mt[48149]:_MT[238], arg this[48147]:AtomicT[48077](?), arg value[47219] :
  (371587 call T _mt[243] this[48147]), param arg order[47229]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506163] "RVV" "temp"
    unknown call_tmp[607334] "expr temp" "maybe param" "maybe type" "temp"
    (607337 'move' call_tmp[607334](371598 call T _mt[243] this[48147]))
    unknown call_tmp[607339] "expr temp" "maybe param" "maybe type" "temp"
    (607342 'move' call_tmp[607339](47237 call isIntegral call_tmp[607334]))
    unknown call_tmp[607344] "expr temp" "maybe param" "maybe type" "temp"
    (607347 'move' call_tmp[607344](47238 call ! call_tmp[607339]))
    unknown call_tmp[607349] "expr temp" "maybe param" "maybe type" "temp"
    (607352 'move' call_tmp[607349](47261 call _cond_test call_tmp[607344]))
    if call_tmp[607349]
    {
      (47259 call compilerError "fetchOr is only defined for integer atomic types")
    }
    function atomic_fetch_or[47297](ref arg obj[47294] :
    unknown call_tmp[607356] "expr temp" "maybe param" "maybe type" "temp", arg operand[47300] :
    (371613 call T _mt[243] this[48147]), arg order[47304]:memory_order[186619], arg _chpl_cname[47312]:string[26] =
    unknown call_tmp[607365] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506157] "RVV" "temp"
      (506159 return ret[506157])
    }
    { scopeless type
      (371619 call T _mt[243] this[48147])
    }
    unknown ret[47317] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607374] "expr temp" "maybe param" "maybe type" "temp"
    (607377 'move' call_tmp[607374](371624 call T _mt[243] this[48147]))
    (540689 'default init var' ret[47317] call_tmp[607374])
    (47320 'end of statement')
    {
      const tmp[47338] "const" "temp"
      unknown call_tmp[607379] "expr temp" "maybe param" "maybe type" "temp"
      (607382 'move' call_tmp[607379](47335 '_wide_get_locale' this[48147]))
      (47339 'move' tmp[47338](47336 'deref' call_tmp[607379]))
      unknown call_tmp[607386] "expr temp" "maybe param" "maybe type" "temp"
      (607389 'move' call_tmp[607386](371631 call _v _mt[243] this[48147]))
      unknown call_tmp[607391] "expr temp" "maybe param" "maybe type" "temp"
      (607394 'move' call_tmp[607391](47330 call c_memory_order order[47229]))
      unknown call_tmp[607396] "expr temp" "maybe param" "maybe type" "temp"
      (607399 'move' call_tmp[607396](47331 call atomic_fetch_or call_tmp[607386] value[47219] call_tmp[607391]))
      (47332 call = ret[47317] call_tmp[607396])
      (474420 'end of statement' ret[47317])
      (47342 'elided on block' 0 tmp[47338])
    }
    unknown call_tmp[607403] "expr temp" "maybe param" "maybe type" "temp"
    (607406 'move' call_tmp[607403](506168 call T _mt[243] this[48147]))
    (506172 'move' ret[506163](506171 'coerce' ret[47317] call_tmp[607403]))
    gotoReturn _end_fetchOr[506161] _end_fetchOr[506161]
    (474422 'end of statement' ret[47317])
    label _end_fetchOr[506161]
    (506165 return ret[506163])
  }
  { scopeless type
    (371593 call T _mt[243] this[48147])
  }
  function AtomicT[48077](?).or[47358](arg _mt[48153]:_MT[238], arg this[48151]:AtomicT[48077](?), arg value[47355] :
  (371639 call T _mt[243] this[48151]), param arg order[47365]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506184] "RVV" "temp"
    unknown call_tmp[607414] "expr temp" "maybe param" "maybe type" "temp"
    (607417 'move' call_tmp[607414](371645 call T _mt[243] this[48151]))
    unknown call_tmp[607419] "expr temp" "maybe param" "maybe type" "temp"
    (607422 'move' call_tmp[607419](47373 call isIntegral call_tmp[607414]))
    unknown call_tmp[607424] "expr temp" "maybe param" "maybe type" "temp"
    (607427 'move' call_tmp[607424](47374 call ! call_tmp[607419]))
    unknown call_tmp[607429] "expr temp" "maybe param" "maybe type" "temp"
    (607432 'move' call_tmp[607429](47399 call _cond_test call_tmp[607424]))
    if call_tmp[607429]
    {
      (47397 call compilerError "or is only defined for integer atomic types")
    }
    function atomic_fetch_or[47419](ref arg obj[47416] :
    unknown call_tmp[607436] "expr temp" "maybe param" "maybe type" "temp", arg operand[47422] :
    (371660 call T _mt[243] this[48151]), arg order[47426]:memory_order[186619], arg _chpl_cname[47434]:string[26] =
    unknown call_tmp[607445] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506178] "RVV" "temp"
      (506180 return ret[506178])
    }
    { scopeless type
      (371666 call T _mt[243] this[48151])
    }
    {
      const tmp[47452] "const" "temp"
      unknown call_tmp[607452] "expr temp" "maybe param" "maybe type" "temp"
      (607455 'move' call_tmp[607452](47449 '_wide_get_locale' this[48151]))
      (47453 'move' tmp[47452](47450 'deref' call_tmp[607452]))
      unknown call_tmp[607459] "expr temp" "maybe param" "maybe type" "temp"
      (607462 'move' call_tmp[607459](371672 call _v _mt[243] this[48151]))
      unknown call_tmp[607464] "expr temp" "maybe param" "maybe type" "temp"
      (607467 'move' call_tmp[607464](47446 call c_memory_order order[47365]))
      (47447 call atomic_fetch_or call_tmp[607459] value[47355] call_tmp[607464])
      (47456 'elided on block' 0 tmp[47452])
    }
    (506186 return ret[506184])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchAnd[47469](arg _mt[48157]:_MT[238], arg this[48155]:AtomicT[48077](?), arg value[47466] :
  (371679 call T _mt[243] this[48155]), param arg order[47476]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506196] "RVV" "temp"
    unknown call_tmp[607473] "expr temp" "maybe param" "maybe type" "temp"
    (607476 'move' call_tmp[607473](371690 call T _mt[243] this[48155]))
    unknown call_tmp[607478] "expr temp" "maybe param" "maybe type" "temp"
    (607481 'move' call_tmp[607478](47484 call isIntegral call_tmp[607473]))
    unknown call_tmp[607483] "expr temp" "maybe param" "maybe type" "temp"
    (607486 'move' call_tmp[607483](47485 call ! call_tmp[607478]))
    unknown call_tmp[607488] "expr temp" "maybe param" "maybe type" "temp"
    (607491 'move' call_tmp[607488](47508 call _cond_test call_tmp[607483]))
    if call_tmp[607488]
    {
      (47506 call compilerError "fetchAnd is only defined for integer atomic types")
    }
    function atomic_fetch_and[47544](ref arg obj[47541] :
    unknown call_tmp[607495] "expr temp" "maybe param" "maybe type" "temp", arg operand[47547] :
    (371705 call T _mt[243] this[48155]), arg order[47551]:memory_order[186619], arg _chpl_cname[47559]:string[26] =
    unknown call_tmp[607504] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506190] "RVV" "temp"
      (506192 return ret[506190])
    }
    { scopeless type
      (371711 call T _mt[243] this[48155])
    }
    unknown ret[47564] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607513] "expr temp" "maybe param" "maybe type" "temp"
    (607516 'move' call_tmp[607513](371716 call T _mt[243] this[48155]))
    (540691 'default init var' ret[47564] call_tmp[607513])
    (47567 'end of statement')
    {
      const tmp[47585] "const" "temp"
      unknown call_tmp[607518] "expr temp" "maybe param" "maybe type" "temp"
      (607521 'move' call_tmp[607518](47582 '_wide_get_locale' this[48155]))
      (47586 'move' tmp[47585](47583 'deref' call_tmp[607518]))
      unknown call_tmp[607525] "expr temp" "maybe param" "maybe type" "temp"
      (607528 'move' call_tmp[607525](371723 call _v _mt[243] this[48155]))
      unknown call_tmp[607530] "expr temp" "maybe param" "maybe type" "temp"
      (607533 'move' call_tmp[607530](47577 call c_memory_order order[47476]))
      unknown call_tmp[607535] "expr temp" "maybe param" "maybe type" "temp"
      (607538 'move' call_tmp[607535](47578 call atomic_fetch_and call_tmp[607525] value[47466] call_tmp[607530]))
      (47579 call = ret[47564] call_tmp[607535])
      (474427 'end of statement' ret[47564])
      (47589 'elided on block' 0 tmp[47585])
    }
    unknown call_tmp[607542] "expr temp" "maybe param" "maybe type" "temp"
    (607545 'move' call_tmp[607542](506201 call T _mt[243] this[48155]))
    (506205 'move' ret[506196](506204 'coerce' ret[47564] call_tmp[607542]))
    gotoReturn _end_fetchAnd[506194] _end_fetchAnd[506194]
    (474429 'end of statement' ret[47564])
    label _end_fetchAnd[506194]
    (506198 return ret[506196])
  }
  { scopeless type
    (371685 call T _mt[243] this[48155])
  }
  function AtomicT[48077](?).and[47605](arg _mt[48161]:_MT[238], arg this[48159]:AtomicT[48077](?), arg value[47602] :
  (371731 call T _mt[243] this[48159]), param arg order[47612]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506217] "RVV" "temp"
    unknown call_tmp[607553] "expr temp" "maybe param" "maybe type" "temp"
    (607556 'move' call_tmp[607553](371737 call T _mt[243] this[48159]))
    unknown call_tmp[607558] "expr temp" "maybe param" "maybe type" "temp"
    (607561 'move' call_tmp[607558](47620 call isIntegral call_tmp[607553]))
    unknown call_tmp[607563] "expr temp" "maybe param" "maybe type" "temp"
    (607566 'move' call_tmp[607563](47621 call ! call_tmp[607558]))
    unknown call_tmp[607568] "expr temp" "maybe param" "maybe type" "temp"
    (607571 'move' call_tmp[607568](47644 call _cond_test call_tmp[607563]))
    if call_tmp[607568]
    {
      (47642 call compilerError "and is only defined for integer atomic types")
    }
    function atomic_fetch_and[47664](ref arg obj[47661] :
    unknown call_tmp[607575] "expr temp" "maybe param" "maybe type" "temp", arg operand[47667] :
    (371752 call T _mt[243] this[48159]), arg order[47671]:memory_order[186619], arg _chpl_cname[47679]:string[26] =
    unknown call_tmp[607584] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506211] "RVV" "temp"
      (506213 return ret[506211])
    }
    { scopeless type
      (371758 call T _mt[243] this[48159])
    }
    {
      const tmp[47697] "const" "temp"
      unknown call_tmp[607591] "expr temp" "maybe param" "maybe type" "temp"
      (607594 'move' call_tmp[607591](47694 '_wide_get_locale' this[48159]))
      (47698 'move' tmp[47697](47695 'deref' call_tmp[607591]))
      unknown call_tmp[607598] "expr temp" "maybe param" "maybe type" "temp"
      (607601 'move' call_tmp[607598](371764 call _v _mt[243] this[48159]))
      unknown call_tmp[607603] "expr temp" "maybe param" "maybe type" "temp"
      (607606 'move' call_tmp[607603](47691 call c_memory_order order[47612]))
      (47692 call atomic_fetch_and call_tmp[607598] value[47602] call_tmp[607603])
      (47701 'elided on block' 0 tmp[47697])
    }
    (506219 return ret[506217])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).fetchXor[47714](arg _mt[48165]:_MT[238], arg this[48163]:AtomicT[48077](?), arg value[47711] :
  (371771 call T _mt[243] this[48163]), param arg order[47721]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method"
  {
    unknown ret[506229] "RVV" "temp"
    unknown call_tmp[607612] "expr temp" "maybe param" "maybe type" "temp"
    (607615 'move' call_tmp[607612](371782 call T _mt[243] this[48163]))
    unknown call_tmp[607617] "expr temp" "maybe param" "maybe type" "temp"
    (607620 'move' call_tmp[607617](47729 call isIntegral call_tmp[607612]))
    unknown call_tmp[607622] "expr temp" "maybe param" "maybe type" "temp"
    (607625 'move' call_tmp[607622](47730 call ! call_tmp[607617]))
    unknown call_tmp[607627] "expr temp" "maybe param" "maybe type" "temp"
    (607630 'move' call_tmp[607627](47753 call _cond_test call_tmp[607622]))
    if call_tmp[607627]
    {
      (47751 call compilerError "fetchXor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47789](ref arg obj[47786] :
    unknown call_tmp[607634] "expr temp" "maybe param" "maybe type" "temp", arg operand[47792] :
    (371797 call T _mt[243] this[48163]), arg order[47796]:memory_order[186619], arg _chpl_cname[47804]:string[26] =
    unknown call_tmp[607643] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506223] "RVV" "temp"
      (506225 return ret[506223])
    }
    { scopeless type
      (371803 call T _mt[243] this[48163])
    }
    unknown ret[47809] "dead at end of block" "insert auto destroy"
    unknown call_tmp[607652] "expr temp" "maybe param" "maybe type" "temp"
    (607655 'move' call_tmp[607652](371808 call T _mt[243] this[48163]))
    (540693 'default init var' ret[47809] call_tmp[607652])
    (47812 'end of statement')
    {
      const tmp[47830] "const" "temp"
      unknown call_tmp[607657] "expr temp" "maybe param" "maybe type" "temp"
      (607660 'move' call_tmp[607657](47827 '_wide_get_locale' this[48163]))
      (47831 'move' tmp[47830](47828 'deref' call_tmp[607657]))
      unknown call_tmp[607664] "expr temp" "maybe param" "maybe type" "temp"
      (607667 'move' call_tmp[607664](371815 call _v _mt[243] this[48163]))
      unknown call_tmp[607669] "expr temp" "maybe param" "maybe type" "temp"
      (607672 'move' call_tmp[607669](47822 call c_memory_order order[47721]))
      unknown call_tmp[607674] "expr temp" "maybe param" "maybe type" "temp"
      (607677 'move' call_tmp[607674](47823 call atomic_fetch_xor call_tmp[607664] value[47711] call_tmp[607669]))
      (47824 call = ret[47809] call_tmp[607674])
      (474434 'end of statement' ret[47809])
      (47834 'elided on block' 0 tmp[47830])
    }
    unknown call_tmp[607681] "expr temp" "maybe param" "maybe type" "temp"
    (607684 'move' call_tmp[607681](506234 call T _mt[243] this[48163]))
    (506238 'move' ret[506229](506237 'coerce' ret[47809] call_tmp[607681]))
    gotoReturn _end_fetchXor[506227] _end_fetchXor[506227]
    (474436 'end of statement' ret[47809])
    label _end_fetchXor[506227]
    (506231 return ret[506229])
  }
  { scopeless type
    (371777 call T _mt[243] this[48163])
  }
  function AtomicT[48077](?).xor[47850](arg _mt[48169]:_MT[238], arg this[48167]:AtomicT[48077](?), arg value[47847] :
  (371823 call T _mt[243] this[48167]), param arg order[47857]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506250] "RVV" "temp"
    unknown call_tmp[607692] "expr temp" "maybe param" "maybe type" "temp"
    (607695 'move' call_tmp[607692](371829 call T _mt[243] this[48167]))
    unknown call_tmp[607697] "expr temp" "maybe param" "maybe type" "temp"
    (607700 'move' call_tmp[607697](47865 call isIntegral call_tmp[607692]))
    unknown call_tmp[607702] "expr temp" "maybe param" "maybe type" "temp"
    (607705 'move' call_tmp[607702](47866 call ! call_tmp[607697]))
    unknown call_tmp[607707] "expr temp" "maybe param" "maybe type" "temp"
    (607710 'move' call_tmp[607707](47889 call _cond_test call_tmp[607702]))
    if call_tmp[607707]
    {
      (47887 call compilerError "xor is only defined for integer atomic types")
    }
    function atomic_fetch_xor[47909](ref arg obj[47906] :
    unknown call_tmp[607714] "expr temp" "maybe param" "maybe type" "temp", arg operand[47912] :
    (371844 call T _mt[243] this[48167]), arg order[47916]:memory_order[186619], arg _chpl_cname[47924]:string[26] =
    unknown call_tmp[607723] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "extern" "fast-on safe extern function" "local args" "local fn" "no fn body" "no return value for void"
    {
      unknown ret[506244] "RVV" "temp"
      (506246 return ret[506244])
    }
    { scopeless type
      (371850 call T _mt[243] this[48167])
    }
    {
      const tmp[47942] "const" "temp"
      unknown call_tmp[607730] "expr temp" "maybe param" "maybe type" "temp"
      (607733 'move' call_tmp[607730](47939 '_wide_get_locale' this[48167]))
      (47943 'move' tmp[47942](47940 'deref' call_tmp[607730]))
      unknown call_tmp[607737] "expr temp" "maybe param" "maybe type" "temp"
      (607740 'move' call_tmp[607737](371856 call _v _mt[243] this[48167]))
      unknown call_tmp[607742] "expr temp" "maybe param" "maybe type" "temp"
      (607745 'move' call_tmp[607742](47936 call c_memory_order order[47857]))
      (47937 call atomic_fetch_xor call_tmp[607737] value[47847] call_tmp[607742])
      (47946 'elided on block' 0 tmp[47942])
    }
    (506252 return ret[506250])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).waitFor[47959](arg _mt[48173]:_MT[238], const arg this[48171]:AtomicT[48077](?), arg value[47956] :
  (371863 call T _mt[243] this[48171]), param arg order[47966]:memoryOrder[186978] =
  seqCst[186968]) : _unknown[51] "atomic type" "inline" "method" "primary method" "no return value for void"
  {
    unknown ret[506256] "RVV" "temp"
    {
      const tmp[48048] "const" "temp"
      unknown call_tmp[607749] "expr temp" "maybe param" "maybe type" "temp"
      (607752 'move' call_tmp[607749](48045 '_wide_get_locale' this[48171]))
      (48049 'move' tmp[48048](48046 'deref' call_tmp[607749]))
      {
        {
          unknown tmp[47991] "temp"
          unknown call_tmp[607756] "expr temp" "maybe param" "maybe type" "temp"
          (607759 'move' call_tmp[607756](48026 call(48023 call (partial) read _mt[243] this[48171])(order = relaxed[186976])))
          unknown call_tmp[607761] "expr temp" "maybe param" "maybe type" "temp"
          (607764 'move' call_tmp[607761](48021 call != call_tmp[607756] value[47956]))
          (48033 'move' tmp[47991](48019 call _cond_test call_tmp[607761]))
          WhileDo[47996]
          {
            {
              (47988 call chpl_task_yield)
            }
            label _continueLabel[47994]
            unknown call_tmp[607768] "expr temp" "maybe param" "maybe type" "temp"
            (607771 'move' call_tmp[607768](48007 call(48004 call (partial) read _mt[243] this[48171])(order = relaxed[186976])))
            unknown call_tmp[607773] "expr temp" "maybe param" "maybe type" "temp"
            (607776 'move' call_tmp[607773](48002 call != call_tmp[607768] value[47956]))
            (48014 'move' tmp[47991](48000 call _cond_test call_tmp[607773]))
            tmp[47991]
          }
          label _breakLabel[47995]
        }
        unknown call_tmp[607778] "expr temp" "maybe param" "maybe type" "temp"
        (607781 'move' call_tmp[607778](48041 call c_memory_order order[47966]))
        (48043 call chpl_atomic_thread_fence call_tmp[607778])
      }
      (48052 'elided on block' 0 tmp[48048])
    }
    (506258 return ret[506256])
  }
  { scopeless type
    void[4]
  }
  function AtomicT[48077](?).writeThis[48064](arg _mt[48177]:_MT[238], const arg this[48175]:AtomicT[48077](?), arg x[48062]:_any[178](?)) : _unknown[51] throws "atomic type" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[607785] "expr temp" "maybe param" "maybe type" "temp"
    (607788 'move' call_tmp[607785](48069 call(371873 call (partial) read _mt[243] this[48175])))
    (48070 call <~> x[48062] call_tmp[607785])
    (506260 return _void[55])
  }
  function AtomicT[48077](?).T[762168](arg _mt[762170]:_MT[238], arg this[762172]:AtomicT[48077](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[762191] "RVV" "temp" "type variable"
    unknown call_tmp[762205] "expr temp" "maybe param" "maybe type" "temp"
    (762208 'move' call_tmp[762205](762177 'is bound' this[762172] c"T"))
    if call_tmp[762205]
    {
      unknown call_tmp[762210] "expr temp" "maybe param" "maybe type" "temp"
      (762213 'move' call_tmp[762210](762176 '.v' this[762172] c"T"))
      (762196 'move' ret[762191](762195 'deref' call_tmp[762210]))
      gotoReturn _end_T[762189] _end_T[762189]
    }
    {
      (762201 'move' ret[762191](762200 'deref' _uninstantiated[258]))
      gotoReturn _end_T[762189] _end_T[762189]
    }
    label _end_T[762189]
    (762193 return ret[762191])
  }
  function AtomicT[48077](?).T[762215](arg _mt[762217]:_MT[238], arg this[762219]:AtomicT[48077](?)) type : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[762238] "RVV" "temp" "type variable"
    unknown call_tmp[762252] "expr temp" "maybe param" "maybe type" "temp"
    (762255 'move' call_tmp[762252](762224 'is bound' this[762219] c"T"))
    if call_tmp[762252]
    {
      unknown call_tmp[762257] "expr temp" "maybe param" "maybe type" "temp"
      (762260 'move' call_tmp[762257](762223 '.v' this[762219] c"T"))
      (762243 'move' ret[762238](762242 'deref' call_tmp[762257]))
      gotoReturn _end_T[762236] _end_T[762236]
    }
    {
      (762248 'move' ret[762238](762247 'deref' _uninstantiated[258]))
      gotoReturn _end_T[762236] _end_T[762236]
    }
    label _end_T[762236]
    (762240 return ret[762238])
  }
  function AtomicT[48077](?)._v[762262](arg _mt[762264]:_MT[238], ref arg this[762266]:AtomicT[48077](?)) ref : _unknown[51] "atomic type" "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[762276] "RVV" "temp"
    unknown call_tmp[762283] "expr temp" "maybe param" "maybe type" "temp"
    (762286 'move' call_tmp[762283](762270 '.' this[762266] c"_v"))
    (762281 'move' ret[762276](762280 'addr of' call_tmp[762283]))
    (762278 return ret[762276])
  }
  function chpl_fields_are_comparable[762300](arg _arg1[762302]:AtomicT[48077](?), arg _arg2[762303]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762321]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762328] "expr temp" "maybe param" "maybe type" "temp"
    (762331 'move' call_tmp[762328](762306 call _v _mt[243] _arg1[762302]))
    unknown call_tmp[762333] "expr temp" "maybe param" "maybe type" "temp"
    (762336 'move' call_tmp[762333](762310 call _v _mt[243] _arg2[762303]))
    unknown call_tmp[762338] "expr temp" "maybe param" "maybe type" "temp"
    (762341 'move' call_tmp[762338](762314 'call resolves' c"==" call_tmp[762328] call_tmp[762333]))
    (762326 'move' ret[762321](762325 'deref' call_tmp[762338]))
    (762323 return ret[762321])
  }
  function ==[762288](arg _arg1[762290]:AtomicT[48077](?), arg _arg2[762291]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762370]:bool[10] "RVV" "temp"
    unknown call_tmp[762382] "expr temp" "maybe param" "maybe type" "temp"
    (762385 'move' call_tmp[762382](762349 call _v _mt[243] _arg1[762290]))
    unknown call_tmp[762387] "expr temp" "maybe param" "maybe type" "temp"
    (762390 'move' call_tmp[762387](762353 call _v _mt[243] _arg2[762291]))
    unknown call_tmp[762392] "expr temp" "maybe param" "maybe type" "temp"
    (762395 'move' call_tmp[762392](762357 call != call_tmp[762382] call_tmp[762387]))
    if call_tmp[762392]
    {
      (762375 'move' ret[762370](762374 'deref' 0))
      gotoReturn _end_==[762368] _end_==[762368]
    }
    (762380 'move' ret[762370](762379 'deref' 1))
    label _end_==[762368]
    (762372 return ret[762370])
  }
  where {
    unknown call_tmp[762397] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762400 'move' call_tmp[762397](762294 'typeof' _arg1[762290]))
    unknown call_tmp[762402] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762405 'move' call_tmp[762402](762296 'typeof' _arg2[762291]))
    unknown call_tmp[762407] "expr temp" "maybe param" "maybe type" "temp"
    (762410 'move' call_tmp[762407](762298 call == call_tmp[762397] call_tmp[762402]))
    unknown call_tmp[762412] "expr temp" "maybe param" "maybe type" "temp"
    (762415 'move' call_tmp[762412](762343 call chpl_fields_are_comparable[762300] _arg1[762290] _arg2[762291]))
    (762347 '&' call_tmp[762407] call_tmp[762412])
  }
  function chpl_fields_are_comparable[762429](arg _arg1[762431]:AtomicT[48077](?), arg _arg2[762432]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762450]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762457] "expr temp" "maybe param" "maybe type" "temp"
    (762460 'move' call_tmp[762457](762435 call _v _mt[243] _arg1[762431]))
    unknown call_tmp[762462] "expr temp" "maybe param" "maybe type" "temp"
    (762465 'move' call_tmp[762462](762439 call _v _mt[243] _arg2[762432]))
    unknown call_tmp[762467] "expr temp" "maybe param" "maybe type" "temp"
    (762470 'move' call_tmp[762467](762443 'call resolves' c"!=" call_tmp[762457] call_tmp[762462]))
    (762455 'move' ret[762450](762454 'deref' call_tmp[762467]))
    (762452 return ret[762450])
  }
  function !=[762417](arg _arg1[762419]:AtomicT[48077](?), arg _arg2[762420]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762499]:bool[10] "RVV" "temp"
    unknown call_tmp[762511] "expr temp" "maybe param" "maybe type" "temp"
    (762514 'move' call_tmp[762511](762478 call _v _mt[243] _arg1[762419]))
    unknown call_tmp[762516] "expr temp" "maybe param" "maybe type" "temp"
    (762519 'move' call_tmp[762516](762482 call _v _mt[243] _arg2[762420]))
    unknown call_tmp[762521] "expr temp" "maybe param" "maybe type" "temp"
    (762524 'move' call_tmp[762521](762486 call != call_tmp[762511] call_tmp[762516]))
    if call_tmp[762521]
    {
      (762504 'move' ret[762499](762503 'deref' 1))
      gotoReturn _end_!=[762497] _end_!=[762497]
    }
    (762509 'move' ret[762499](762508 'deref' 0))
    label _end_!=[762497]
    (762501 return ret[762499])
  }
  where {
    unknown call_tmp[762526] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762529 'move' call_tmp[762526](762423 'typeof' _arg1[762419]))
    unknown call_tmp[762531] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762534 'move' call_tmp[762531](762425 'typeof' _arg2[762420]))
    unknown call_tmp[762536] "expr temp" "maybe param" "maybe type" "temp"
    (762539 'move' call_tmp[762536](762427 call == call_tmp[762526] call_tmp[762531]))
    unknown call_tmp[762541] "expr temp" "maybe param" "maybe type" "temp"
    (762544 'move' call_tmp[762541](762472 call chpl_fields_are_comparable[762429] _arg1[762419] _arg2[762420]))
    (762476 '&' call_tmp[762536] call_tmp[762541])
  }
  function chpl_fields_are_comparable[762558](arg _arg1[762560]:AtomicT[48077](?), arg _arg2[762561]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762579]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762586] "expr temp" "maybe param" "maybe type" "temp"
    (762589 'move' call_tmp[762586](762564 call _v _mt[243] _arg1[762560]))
    unknown call_tmp[762591] "expr temp" "maybe param" "maybe type" "temp"
    (762594 'move' call_tmp[762591](762568 call _v _mt[243] _arg2[762561]))
    unknown call_tmp[762596] "expr temp" "maybe param" "maybe type" "temp"
    (762599 'move' call_tmp[762596](762572 'call resolves' c"<" call_tmp[762586] call_tmp[762591]))
    (762584 'move' ret[762579](762583 'deref' call_tmp[762596]))
    (762581 return ret[762579])
  }
  function <[762546](arg _arg1[762548]:AtomicT[48077](?), arg _arg2[762549]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762643]:bool[10] "RVV" "temp"
    unknown call_tmp[762660] "expr temp" "maybe param" "maybe type" "temp"
    (762663 'move' call_tmp[762660](762607 call _v _mt[243] _arg1[762548]))
    unknown call_tmp[762665] "expr temp" "maybe param" "maybe type" "temp"
    (762668 'move' call_tmp[762665](762611 call _v _mt[243] _arg2[762549]))
    unknown call_tmp[762670] "expr temp" "maybe param" "maybe type" "temp"
    (762673 'move' call_tmp[762670](762615 call < call_tmp[762660] call_tmp[762665]))
    if call_tmp[762670]
    {
      (762648 'move' ret[762643](762647 'deref' 1))
      gotoReturn _end_<[762641] _end_<[762641]
    }
    unknown call_tmp[762675] "expr temp" "maybe param" "maybe type" "temp"
    (762678 'move' call_tmp[762675](762621 call _v _mt[243] _arg1[762548]))
    unknown call_tmp[762680] "expr temp" "maybe param" "maybe type" "temp"
    (762683 'move' call_tmp[762680](762625 call _v _mt[243] _arg2[762549]))
    unknown call_tmp[762685] "expr temp" "maybe param" "maybe type" "temp"
    (762688 'move' call_tmp[762685](762629 call > call_tmp[762675] call_tmp[762680]))
    if call_tmp[762685]
    {
      (762653 'move' ret[762643](762652 'deref' 0))
      gotoReturn _end_<[762641] _end_<[762641]
    }
    (762658 'move' ret[762643](762657 'deref' 0))
    label _end_<[762641]
    (762645 return ret[762643])
  }
  where {
    unknown call_tmp[762690] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762693 'move' call_tmp[762690](762552 'typeof' _arg1[762548]))
    unknown call_tmp[762695] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762698 'move' call_tmp[762695](762554 'typeof' _arg2[762549]))
    unknown call_tmp[762700] "expr temp" "maybe param" "maybe type" "temp"
    (762703 'move' call_tmp[762700](762556 call == call_tmp[762690] call_tmp[762695]))
    unknown call_tmp[762705] "expr temp" "maybe param" "maybe type" "temp"
    (762708 'move' call_tmp[762705](762601 call chpl_fields_are_comparable[762558] _arg1[762548] _arg2[762549]))
    (762605 '&' call_tmp[762700] call_tmp[762705])
  }
  function chpl_fields_are_comparable[762722](arg _arg1[762724]:AtomicT[48077](?), arg _arg2[762725]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762743]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762750] "expr temp" "maybe param" "maybe type" "temp"
    (762753 'move' call_tmp[762750](762728 call _v _mt[243] _arg1[762724]))
    unknown call_tmp[762755] "expr temp" "maybe param" "maybe type" "temp"
    (762758 'move' call_tmp[762755](762732 call _v _mt[243] _arg2[762725]))
    unknown call_tmp[762760] "expr temp" "maybe param" "maybe type" "temp"
    (762763 'move' call_tmp[762760](762736 'call resolves' c"<=" call_tmp[762750] call_tmp[762755]))
    (762748 'move' ret[762743](762747 'deref' call_tmp[762760]))
    (762745 return ret[762743])
  }
  function <=[762710](arg _arg1[762712]:AtomicT[48077](?), arg _arg2[762713]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762807]:bool[10] "RVV" "temp"
    unknown call_tmp[762824] "expr temp" "maybe param" "maybe type" "temp"
    (762827 'move' call_tmp[762824](762771 call _v _mt[243] _arg1[762712]))
    unknown call_tmp[762829] "expr temp" "maybe param" "maybe type" "temp"
    (762832 'move' call_tmp[762829](762775 call _v _mt[243] _arg2[762713]))
    unknown call_tmp[762834] "expr temp" "maybe param" "maybe type" "temp"
    (762837 'move' call_tmp[762834](762779 call < call_tmp[762824] call_tmp[762829]))
    if call_tmp[762834]
    {
      (762812 'move' ret[762807](762811 'deref' 1))
      gotoReturn _end_<=[762805] _end_<=[762805]
    }
    unknown call_tmp[762839] "expr temp" "maybe param" "maybe type" "temp"
    (762842 'move' call_tmp[762839](762785 call _v _mt[243] _arg1[762712]))
    unknown call_tmp[762844] "expr temp" "maybe param" "maybe type" "temp"
    (762847 'move' call_tmp[762844](762789 call _v _mt[243] _arg2[762713]))
    unknown call_tmp[762849] "expr temp" "maybe param" "maybe type" "temp"
    (762852 'move' call_tmp[762849](762793 call > call_tmp[762839] call_tmp[762844]))
    if call_tmp[762849]
    {
      (762817 'move' ret[762807](762816 'deref' 0))
      gotoReturn _end_<=[762805] _end_<=[762805]
    }
    (762822 'move' ret[762807](762821 'deref' 1))
    label _end_<=[762805]
    (762809 return ret[762807])
  }
  where {
    unknown call_tmp[762854] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762857 'move' call_tmp[762854](762716 'typeof' _arg1[762712]))
    unknown call_tmp[762859] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (762862 'move' call_tmp[762859](762718 'typeof' _arg2[762713]))
    unknown call_tmp[762864] "expr temp" "maybe param" "maybe type" "temp"
    (762867 'move' call_tmp[762864](762720 call == call_tmp[762854] call_tmp[762859]))
    unknown call_tmp[762869] "expr temp" "maybe param" "maybe type" "temp"
    (762872 'move' call_tmp[762869](762765 call chpl_fields_are_comparable[762722] _arg1[762712] _arg2[762713]))
    (762769 '&' call_tmp[762864] call_tmp[762869])
  }
  function chpl_fields_are_comparable[762886](arg _arg1[762888]:AtomicT[48077](?), arg _arg2[762889]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[762907]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[762914] "expr temp" "maybe param" "maybe type" "temp"
    (762917 'move' call_tmp[762914](762892 call _v _mt[243] _arg1[762888]))
    unknown call_tmp[762919] "expr temp" "maybe param" "maybe type" "temp"
    (762922 'move' call_tmp[762919](762896 call _v _mt[243] _arg2[762889]))
    unknown call_tmp[762924] "expr temp" "maybe param" "maybe type" "temp"
    (762927 'move' call_tmp[762924](762900 'call resolves' c">" call_tmp[762914] call_tmp[762919]))
    (762912 'move' ret[762907](762911 'deref' call_tmp[762924]))
    (762909 return ret[762907])
  }
  function >[762874](arg _arg1[762876]:AtomicT[48077](?), arg _arg2[762877]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[762971]:bool[10] "RVV" "temp"
    unknown call_tmp[762988] "expr temp" "maybe param" "maybe type" "temp"
    (762991 'move' call_tmp[762988](762935 call _v _mt[243] _arg1[762876]))
    unknown call_tmp[762993] "expr temp" "maybe param" "maybe type" "temp"
    (762996 'move' call_tmp[762993](762939 call _v _mt[243] _arg2[762877]))
    unknown call_tmp[762998] "expr temp" "maybe param" "maybe type" "temp"
    (763001 'move' call_tmp[762998](762943 call > call_tmp[762988] call_tmp[762993]))
    if call_tmp[762998]
    {
      (762976 'move' ret[762971](762975 'deref' 1))
      gotoReturn _end_>[762969] _end_>[762969]
    }
    unknown call_tmp[763003] "expr temp" "maybe param" "maybe type" "temp"
    (763006 'move' call_tmp[763003](762949 call _v _mt[243] _arg1[762876]))
    unknown call_tmp[763008] "expr temp" "maybe param" "maybe type" "temp"
    (763011 'move' call_tmp[763008](762953 call _v _mt[243] _arg2[762877]))
    unknown call_tmp[763013] "expr temp" "maybe param" "maybe type" "temp"
    (763016 'move' call_tmp[763013](762957 call < call_tmp[763003] call_tmp[763008]))
    if call_tmp[763013]
    {
      (762981 'move' ret[762971](762980 'deref' 0))
      gotoReturn _end_>[762969] _end_>[762969]
    }
    (762986 'move' ret[762971](762985 'deref' 0))
    label _end_>[762969]
    (762973 return ret[762971])
  }
  where {
    unknown call_tmp[763018] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763021 'move' call_tmp[763018](762880 'typeof' _arg1[762876]))
    unknown call_tmp[763023] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763026 'move' call_tmp[763023](762882 'typeof' _arg2[762877]))
    unknown call_tmp[763028] "expr temp" "maybe param" "maybe type" "temp"
    (763031 'move' call_tmp[763028](762884 call == call_tmp[763018] call_tmp[763023]))
    unknown call_tmp[763033] "expr temp" "maybe param" "maybe type" "temp"
    (763036 'move' call_tmp[763033](762929 call chpl_fields_are_comparable[762886] _arg1[762876] _arg2[762877]))
    (762933 '&' call_tmp[763028] call_tmp[763033])
  }
  function chpl_fields_are_comparable[763050](arg _arg1[763052]:AtomicT[48077](?), arg _arg2[763053]:AtomicT[48077](?)) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[763071]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[763078] "expr temp" "maybe param" "maybe type" "temp"
    (763081 'move' call_tmp[763078](763056 call _v _mt[243] _arg1[763052]))
    unknown call_tmp[763083] "expr temp" "maybe param" "maybe type" "temp"
    (763086 'move' call_tmp[763083](763060 call _v _mt[243] _arg2[763053]))
    unknown call_tmp[763088] "expr temp" "maybe param" "maybe type" "temp"
    (763091 'move' call_tmp[763088](763064 'call resolves' c">=" call_tmp[763078] call_tmp[763083]))
    (763076 'move' ret[763071](763075 'deref' call_tmp[763088]))
    (763073 return ret[763071])
  }
  function >=[763038](arg _arg1[763040]:AtomicT[48077](?), arg _arg2[763041]:AtomicT[48077](?)) : bool[10] "compiler generated" "last resort"
  {
    val ret[763135]:bool[10] "RVV" "temp"
    unknown call_tmp[763152] "expr temp" "maybe param" "maybe type" "temp"
    (763155 'move' call_tmp[763152](763099 call _v _mt[243] _arg1[763040]))
    unknown call_tmp[763157] "expr temp" "maybe param" "maybe type" "temp"
    (763160 'move' call_tmp[763157](763103 call _v _mt[243] _arg2[763041]))
    unknown call_tmp[763162] "expr temp" "maybe param" "maybe type" "temp"
    (763165 'move' call_tmp[763162](763107 call > call_tmp[763152] call_tmp[763157]))
    if call_tmp[763162]
    {
      (763140 'move' ret[763135](763139 'deref' 1))
      gotoReturn _end_>=[763133] _end_>=[763133]
    }
    unknown call_tmp[763167] "expr temp" "maybe param" "maybe type" "temp"
    (763170 'move' call_tmp[763167](763113 call _v _mt[243] _arg1[763040]))
    unknown call_tmp[763172] "expr temp" "maybe param" "maybe type" "temp"
    (763175 'move' call_tmp[763172](763117 call _v _mt[243] _arg2[763041]))
    unknown call_tmp[763177] "expr temp" "maybe param" "maybe type" "temp"
    (763180 'move' call_tmp[763177](763121 call < call_tmp[763167] call_tmp[763172]))
    if call_tmp[763177]
    {
      (763145 'move' ret[763135](763144 'deref' 0))
      gotoReturn _end_>=[763133] _end_>=[763133]
    }
    (763150 'move' ret[763135](763149 'deref' 1))
    label _end_>=[763133]
    (763137 return ret[763135])
  }
  where {
    unknown call_tmp[763182] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763185 'move' call_tmp[763182](763044 'typeof' _arg1[763040]))
    unknown call_tmp[763187] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (763190 'move' call_tmp[763187](763046 'typeof' _arg2[763041]))
    unknown call_tmp[763192] "expr temp" "maybe param" "maybe type" "temp"
    (763195 'move' call_tmp[763192](763048 call == call_tmp[763182] call_tmp[763187]))
    unknown call_tmp[763197] "expr temp" "maybe param" "maybe type" "temp"
    (763200 'move' call_tmp[763197](763093 call chpl_fields_are_comparable[763050] _arg1[763040] _arg2[763041]))
    (763097 '&' call_tmp[763192] call_tmp[763197])
  }
  function chpl__defaultHash[763202](arg r[763204]:AtomicT[48077](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[763226] "RVV" "temp"
    unknown call_tmp[763233] "expr temp" "maybe param" "maybe type" "temp"
    (763236 'move' call_tmp[763233](763212 call _v _mt[243] r[763204]))
    unknown call_tmp[763238] "expr temp" "maybe param" "maybe type" "temp"
    (763241 'move' call_tmp[763238](763216 call chpl__defaultHash call_tmp[763233]))
    unknown call_tmp[763243] "expr temp" "maybe param" "maybe type" "temp"
    (763246 'move' call_tmp[763243](763206 call T _mt[243] r[763204]))
    unknown call_tmp[763248] "expr temp" "maybe param" "maybe type" "temp"
    (763251 'move' call_tmp[763248](763210 call chpl__defaultHash call_tmp[763243]))
    unknown call_tmp[763253] "expr temp" "maybe param" "maybe type" "temp"
    (763256 'move' call_tmp[763253](763218 call chpl__defaultHashCombine call_tmp[763238] call_tmp[763248] 2))
    (763231 'move' ret[763226](763230 'deref' call_tmp[763253]))
    (763228 return ret[763226])
  }
  type AtomicT[48077](?) unknown T[45946] "no doc" "type variable" unknown _v[45953] "no doc"(45952 call externT T[45946])
  function =[48186](ref arg a[48183]:AtomicBool[45874], const  ref arg b[48189]:AtomicBool[45874]) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607794] "expr temp" "maybe param" "maybe type" "temp"
    (607797 'move' call_tmp[607794](48201 call(48197 call (partial) read _mt[243] b[48189])))
    (48203 call(48193 call (partial) write _mt[243] a[48183]) call_tmp[607794])
    (506262 return _void[55])
  }
  function =[48214](ref arg a[48211]:AtomicBool[45874], arg b[48216]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48239 call compilerError "Cannot directly assign atomic variables")
    (506264 return _void[55])
  }
  function =[48250](ref arg a[48247]:AtomicT[48077](?), const  ref arg b[48253]:AtomicT[48077](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    unknown call_tmp[607803] "expr temp" "maybe param" "maybe type" "temp"
    (607806 'move' call_tmp[607803](48265 call(48261 call (partial) read _mt[243] b[48253])))
    (48267 call(48257 call (partial) write _mt[243] a[48247]) call_tmp[607803])
    (506266 return _void[55])
  }
  function =[48278](ref arg a[48275]:AtomicT[48077](?), arg b[48280]:_any[178](?)) : _unknown[51] "assignop" "inline" "no return value for void"
  {
    (48285 call compilerError "Cannot directly assign atomic variables")
    (506268 return _void[55])
  }
  function +[48296](arg a[48293]:AtomicT[48077](?), arg b[48298]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506272] "RVV" "temp"
    (48319 call compilerError "Cannot directly add atomic variables")
    (474447 'end of statement')
    (506277 'move' ret[506272](506276 'deref' a[48293]))
    (506274 return ret[506272])
  }
  function -[48333](arg a[48330]:AtomicT[48077](?), arg b[48335]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506281] "RVV" "temp"
    (48356 call compilerError "Cannot directly subtract atomic variables")
    (474449 'end of statement')
    (506286 'move' ret[506281](506285 'deref' a[48330]))
    (506283 return ret[506281])
  }
  function *[48370](arg a[48367]:AtomicT[48077](?), arg b[48372]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506290] "RVV" "temp"
    (48393 call compilerError "Cannot directly multiply atomic variables")
    (474451 'end of statement')
    (506295 'move' ret[506290](506294 'deref' a[48367]))
    (506292 return ret[506290])
  }
  function /[48407](arg a[48404]:AtomicT[48077](?), arg b[48409]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506299] "RVV" "temp"
    (48430 call compilerError "Cannot directly divide atomic variables")
    (474453 'end of statement')
    (506304 'move' ret[506299](506303 'deref' a[48404]))
    (506301 return ret[506299])
  }
  function %[48444](arg a[48441]:AtomicT[48077](?), arg b[48446]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[506308] "RVV" "temp"
    (48451 call compilerError "Cannot directly divide atomic variables")
    (474455 'end of statement')
    (506313 'move' ret[506308](506312 'deref' a[48441]))
    (506310 return ret[506308])
  }
  (355092 'used modules list'(43963 'use' ChapelBase[307])(43967 'use' MemConsistency[186614]))
}