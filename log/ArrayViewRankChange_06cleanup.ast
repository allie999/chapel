AST dump for ArrayViewRankChange after pass cleanup.
Module use list: 

{
  (191455 'use' ChapelStandard)
  function ArrayViewRankChangeDist[191686](?).downDist[191480](arg _mt[191690]:_MT[238], arg this[191688]:ArrayViewRankChangeDist[191686](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191497 call _cond_test(191485 call _isPrivatized downDistInst))
    {
      (191492 return(191491 call chpl_getPrivatizedCopy(191488 'typeof' downDistInst) downDistPid))
    }
    {
      (191495 return downDistInst)
    }
  }
  function ArrayViewRankChangeDist[191686](?).dsiNewRectangularDom[191510](arg _mt[191694]:_MT[238], arg this[191692]:ArrayViewRankChangeDist[191686](?), param arg rank[191508]:_any[178](?), arg idxType[191512]:_any[178](?), param arg stridable[191514]:_any[178](?), arg inds[191516]:_any[178](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    unknown newdom[191544](191520 'new'(_chpl_manager = unmanaged[220](?))(191543 call ArrayViewRankChangeDom(rank = rank)(idxType = idxType)(stridable = stridable)(collapsedDim = collapsedDim)(idx = idx)(distPid =(191534 call . this c"pid"))(distInst =(191541 call _to_unmanaged this))))
    (191547 'end of statement')
    (191555 call(191550 call . newdom c"dsiSetIndices") inds)
    (191558 return newdom)
  }
  function ArrayViewRankChangeDist[191686](?).dsiClone[191564](arg _mt[191698]:_MT[238], arg this[191696]:ArrayViewRankChangeDist[191686](?)) : _unknown[51] "method" "primary method"
  {
    (191590 return(191568 'new'(_chpl_manager = unmanaged[220](?))(191589 call ArrayViewRankChangeDist(downDistPid =(191573 call . this c"downDistPid"))(downDistInst =(191581 call . this c"downDistInst"))(collapsedDim = collapsedDim)(idx = idx))))
  }
  function ArrayViewRankChangeDist[191686](?).dsiSupportsPrivatization[191597](arg _mt[191702]:_MT[238], arg this[191700]:ArrayViewRankChangeDist[191686](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (191605 return(191604 call(191600 call . downDistInst c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeDist[191686](?).dsiGetPrivatizeData[191612](arg _mt[191706]:_MT[238], arg this[191704]:ArrayViewRankChangeDist[191686](?)) : _unknown[51] "method" "primary method"
  {
    (191621 return(191619 call _build_tuple downDistPid downDistInst collapsedDim idx))
  }
  function ArrayViewRankChangeDist[191686](?).dsiPrivatize[191630](arg _mt[191710]:_MT[238], arg this[191708]:ArrayViewRankChangeDist[191686](?), arg privatizeData[191628]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (191658 return(191634 'new'(_chpl_manager = unmanaged[220](?))(191657 call ArrayViewRankChangeDist(downDistPid =(191639 call privatizeData 0))(downDistInst =(191645 call privatizeData 1))(collapsedDim =(191650 call privatizeData 2))(idx =(191655 call privatizeData 3)))))
  }
  function ArrayViewRankChangeDist[191686](?).dsiDestroyDist[191665](arg _mt[191714]:_MT[238], arg this[191712]:ArrayViewRankChangeDist[191686](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
  }
  function ArrayViewRankChangeDist[191686](?).dsiIsLayout[191672](arg _mt[191718]:_MT[238], arg this[191716]:ArrayViewRankChangeDist[191686](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (191680 return(191679 call(191675 call . downDistInst c"dsiIsLayout")))
  }
  type ArrayViewRankChangeDist[191686](?) unknown downDistPid[191462] int[13] unknown downDistInst[191466] const collapsedDim[191470] "const" const idx[191474] "const" BaseDist
  function downDomType[191727](param arg rank[191724] :
  int[13], arg idxType[191729]:_any[178](?), param arg stridable[191732] :
  bool[10], arg dist[191735]:_any[178](?)) type : _unknown[51] "private"
  {
    unknown ranges[191749](191747 call * rank(191746 call range idxType(191742 call . BoundedRangeType c"bounded") stridable))
    (191752 'end of statement')
    unknown a[191771](191770 call(191760 call .(191757 call . dist c"downDist") c"dsiNewRectangularDom")(rank = rank) idxType(stridable = stridable) ranges)
    (191774 'end of statement')
    (191777 return(191776 'typeof' a))
  }
  function ArrayViewRankChangeDom[193427](?).chpl_forwarding_expr8_upDom[191798](arg _mt[193431]:_MT[238], arg this[193429]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (191800 return upDom)
  }
  function ArrayViewRankChangeDom[193427](?).dist[191822](arg _mt[193435]:_MT[238], arg this[193433]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191839 call _cond_test(191827 call _isPrivatized distInst))
    {
      (191834 return(191833 call chpl_getPrivatizedCopy(191830 'typeof' distInst) distPid))
    }
    {
      (191837 return distInst)
    }
  }
  function ArrayViewRankChangeDom[193427](?).downrank[191870](arg _mt[193439]:_MT[238], arg this[193437]:ArrayViewRankChangeDom[193427](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    (191876 return(191873 call . collapsedDim c"size"))
  }
  function ArrayViewRankChangeDom[193427](?).upDom[191883](arg _mt[193443]:_MT[238], arg this[193441]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    (191888 return(191886 call postfix! upDomInst))
  }
  function ArrayViewRankChangeDom[193427](?).downDom[191895](arg _mt[193447]:_MT[238], arg this[193445]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(191918 call _cond_test(191902 call _isPrivatized(191899 call postfix! downDomInst)))
    {
      (191911 return(191910 call chpl_getPrivatizedCopy(191907 'typeof'(191905 call postfix! downDomInst)) downDomPid))
    }
    {
      (191916 return(191914 call postfix! downDomInst))
    }
  }
  function ArrayViewRankChangeDom[193427](?).dsiBuildArray[191931](arg _mt[193451]:_MT[238], arg this[193449]:ArrayViewRankChangeDom[193427](?), arg eltType[191929]:_any[178](?), param arg initElts[191934] :
  bool[10]) : _unknown[51] "method" "primary method"
  {
    const downarr[191948] "const" "no auto destroy"(191947 call _newArray(191945 call(191939 call . downDom c"dsiBuildArray") eltType initElts))
    (191951 'end of statement')
    (191987 return(191955 'new'(_chpl_manager = unmanaged[220](?))(191986 call ArrayViewRankChangeArr(eltType = eltType)(_DomPid =(191961 call . this c"pid"))(dom =(191968 call _to_unmanaged this))(_ArrPid =(191971 call . downarr c"_pid"))(_ArrInstance =(191976 call . downarr c"_instance"))(collapsedDim = collapsedDim)(idx = idx)(ownsArrInstance = 1))))
  }
  function ArrayViewRankChangeDom[193427](?).dsiSetIndices[191995](arg _mt[193455]:_MT[238], arg this[193453]:ArrayViewRankChangeDom[193427](?), arg inds[191993]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (192002 call(191998 call . this c"dsiDestroyDom"))
    unknown upDomRec[192010] "no auto destroy"(192008 call chpl__buildDomainExpr(192006 'expand_tuple' inds))
    (192013 'end of statement')
    (192019 call = upDomInst(192016 call . upDomRec c"_value"))
    unknown ranges[192034](192032 call * downrank(192031 call range idxType(192027 call . BoundedRangeType c"bounded") stridable))
    (192037 'end of statement')
    unknown downDomClass[192053](192052 call(192042 call .(192039 call . dist c"downDist") c"dsiNewRectangularDom")(rank = downrank) idxType(stridable = stridable) ranges)
    (192056 'end of statement')
    unknown downDomLoc[192062] "no auto destroy"(192057 'new'(192061 call _domain downDomClass))
    (192065 'end of statement')
    (192077 call = downDomLoc(192076 call chpl_rankChangeConvertDom inds(192071 call . inds c"size") collapsedDim idx))
    (192088 call =(192084 call .(192081 call . downDomLoc c"_value") c"_free_when_no_arrs") 1)
    (192096 call = downDomPid(192093 call . downDomLoc c"_pid"))
    (192104 call = downDomInst(192101 call . downDomLoc c"_instance"))
  }
  function ArrayViewRankChangeDom[193427](?).dsiAssignDomain[192115](arg _mt[193459]:_MT[238], arg this[193457]:ArrayViewRankChangeDom[193427](?), arg rhs[192112] :
  _domain, arg lhsPrivate[192118] :
  bool[10]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (192125 call chpl_assignDomainWithGetSetIndices this rhs)
  }
  function ArrayViewRankChangeDom[193427](?).these[192132](arg _mt[193463]:_MT[238], arg this[193461]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(192219 call _cond_test(192137 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192143] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192144] "expr temp" "temp"
        (192153 'move' _iterator[192144](192151 call _getIterator upDom))
        Defer
        {
          {
            (192169 call _freeIterator _iterator[192144])
          }
        }
        { scopeless type
          (192158 'move' _indexOfInterest[192143](192155 call iteratorIndex _iterator[192144]))
        }
        ForLoop[192145]
        {
          unknown i[192162] "index var" "insert auto destroy"
          (192164 'move' i[192162] _indexOfInterest[192143])
          (192141 yield i)
          label _continueLabel[192148]
          _indexOfInterest[192143]
          _iterator[192144]
        }
        label _breakLabel[192149]
      }
    }
    {
      {
        unknown _indexOfInterest[192185] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192186] "expr temp" "temp"
        (192195 'move' _iterator[192186](192193 call _getIterator downDom))
        Defer
        {
          {
            (192211 call _freeIterator _iterator[192186])
          }
        }
        { scopeless type
          (192200 'move' _indexOfInterest[192185](192197 call iteratorIndex _iterator[192186]))
        }
        ForLoop[192187]
        {
          unknown i[192204] "index var" "insert auto destroy"
          (192206 'move' i[192204] _indexOfInterest[192185])
          (192183 yield(192182 call downIdxToUpIdx i))
          label _continueLabel[192190]
          _indexOfInterest[192185]
          _iterator[192186]
        }
        label _breakLabel[192191]
      }
    }
  }
  function ArrayViewRankChangeDom[193427](?).these[192232](arg _mt[193467]:_MT[238], arg this[193465]:ArrayViewRankChangeDom[193427](?), param arg tag[192229] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[192266] "index var" "insert auto destroy"
      iterated expressions:
        upDom
      shadow variables:
      other variables
        forall body
      {
        (192263 yield i)
      }
    }
  }
  where {
    (192258 call &&(192250 call &&(192244 call &&(192239 call == tag(192236 call . iterKind c"standalone"))(192242 call ! localeModelHasSublocales))(192249 call chpl__isDROrDRView downDom))(192257 'method call resolves' upDom "these" tag))
  }
  function ArrayViewRankChangeDom[193427](?).these[192279](arg _mt[193471]:_MT[238], arg this[193469]:ArrayViewRankChangeDom[193427](?), param arg tag[192276] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[192318] "index var" "insert auto destroy"
      iterated expressions:
        downDom
      shadow variables:
      other variables
        forall body
      {
        (192315 yield(192314 call downIdxToUpIdx i))
      }
    }
  }
  where {
    (192307 call &&(192299 call &&(192291 call &&(192286 call == tag(192283 call . iterKind c"standalone"))(192289 call ! localeModelHasSublocales))(192297 call !(192296 call chpl__isDROrDRView downDom)))(192306 'method call resolves' downDom "these" tag))
  }
  function ArrayViewRankChangeDom[193427](?).these[192331](arg _mt[193475]:_MT[238], arg this[193473]:ArrayViewRankChangeDom[193427](?), param arg tag[192328] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(192445 call _cond_test(192343 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192355] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192356] "expr temp" "temp"
        (192365 'move' _iterator[192356](192363 call _getIterator(192351 call(192346 call . upDom c"these") tag)))
        Defer
        {
          {
            (192382 call _freeIterator _iterator[192356])
          }
        }
        { scopeless type
          (192371 'move' _indexOfInterest[192355](192368 call iteratorIndex _iterator[192356]))
        }
        ForLoop[192357]
        {
          unknown followThis[192375] "index var" "insert auto destroy"
          (192377 'move' followThis[192375] _indexOfInterest[192355])
          (192353 yield followThis)
          label _continueLabel[192360]
          _indexOfInterest[192355]
          _iterator[192356]
        }
        label _breakLabel[192361]
      }
    }
    {
      {
        unknown _indexOfInterest[192410] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192411] "expr temp" "temp"
        (192420 'move' _iterator[192411](192418 call _getIterator(192397 call(192392 call . downDom c"these") tag)))
        Defer
        {
          {
            (192437 call _freeIterator _iterator[192411])
          }
        }
        { scopeless type
          (192426 'move' _indexOfInterest[192410](192423 call iteratorIndex _iterator[192411]))
        }
        ForLoop[192412]
        {
          unknown followThis[192430] "index var" "insert auto destroy"
          (192432 'move' followThis[192430] _indexOfInterest[192410])
          {
            const followThisLoD[192402] "const"(192401 call chpl_rankChangeConvertHiDTupleToLoD followThis)
            (192405 'end of statement')
            (192408 yield followThisLoD)
          }
          label _continueLabel[192415]
          _indexOfInterest[192410]
          _iterator[192411]
        }
        label _breakLabel[192416]
      }
    }
  }
  where {
    (192338 call == tag(192335 call . iterKind c"leader"))
  }
  function ArrayViewRankChangeDom[193427](?).these[192459](arg _mt[193479]:_MT[238], arg this[193477]:ArrayViewRankChangeDom[193427](?), param arg tag[192456] :
  iterKind, arg followThis[192461]:_any[178](?)) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    if(192583 call _cond_test(192473 call chpl__isDROrDRView downDom))
    {
      {
        unknown _indexOfInterest[192486] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192487] "expr temp" "temp"
        (192496 'move' _iterator[192487](192494 call _getIterator(192482 call(192476 call . upDom c"these") tag followThis)))
        Defer
        {
          {
            (192513 call _freeIterator _iterator[192487])
          }
        }
        { scopeless type
          (192502 'move' _indexOfInterest[192486](192499 call iteratorIndex _iterator[192487]))
        }
        ForLoop[192488]
        {
          unknown i[192506] "index var" "insert auto destroy"
          (192508 'move' i[192506] _indexOfInterest[192486])
          (192484 yield i)
          label _continueLabel[192491]
          _indexOfInterest[192486]
          _iterator[192487]
        }
        label _breakLabel[192492]
      }
    }
    {
      const followThisHiD[192525] "const"(192524 call chpl_rankChangeConvertLoDTupleToHiD followThis)
      (192528 'end of statement')
      {
        unknown _indexOfInterest[192549] "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[192550] "expr temp" "temp"
        (192559 'move' _iterator[192550](192557 call _getIterator(192538 call(192532 call . downDom c"these") tag followThisHiD)))
        Defer
        {
          {
            (192576 call _freeIterator _iterator[192550])
          }
        }
        { scopeless type
          (192565 'move' _indexOfInterest[192549](192562 call iteratorIndex _iterator[192550]))
        }
        ForLoop[192551]
        {
          unknown i[192569] "index var" "insert auto destroy"
          (192571 'move' i[192569] _indexOfInterest[192549])
          {
            (192546 yield(192545 call chpl_rankChangeConvertIdxHiDToLoD i collapsedDim idx rank))
          }
          label _continueLabel[192554]
          _indexOfInterest[192549]
          _iterator[192550]
        }
        label _breakLabel[192555]
      }
    }
  }
  where {
    (192468 call == tag(192465 call . iterKind c"follower"))
  }
  function ArrayViewRankChangeDom[193427](?).chpl_rankChangeConvertLoDTupleToHiD[192595](arg _mt[193483]:_MT[238], arg this[193481]:ArrayViewRankChangeDom[193427](?), arg tup[192593]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown tupHiD[192605](192603 call * downrank(192602 'typeof'(192601 call tup 0)))
    (192608 'end of statement')
    unknown i[192611] 0
    (192614 'end of statement')
    {
      unknown d[192659] 0
      unknown tmp[192660] "maybe param" "temp"
      (192672 'move' tmp[192660](192670 call chpl_compute_low_param_loop_bound 0(192618 call - downrank 1)))
      unknown tmp[192661] "maybe param" "temp"
      (192682 'move' tmp[192661](192680 call chpl_compute_high_param_loop_bound 0(192677 call - downrank 1)))
      unknown tmp[192662] "maybe param" "temp"
      (192685 'move' tmp[192662] 1)
      ParamForLoop[192687]
      { d[192659] tmp[192660] tmp[192661] tmp[192662]
        if(192654 call _cond_test(192625 call collapsedDim d))
        {
          (192634 call =(192629 call tupHiD d)(192632 call chpl_build_bounded_range 0 0))
        }
        {
          (192645 call =(192640 call tupHiD d)(192644 call tup i))
          (192651 call += i 1)
        }
      }
      label _unused_continueLabel[192664]
      label _breakLabel[192663]
    }
    (192697 return tupHiD)
  }
  function ArrayViewRankChangeDom[193427](?).chpl_rankChangeConvertHiDTupleToLoD[192705](arg _mt[193487]:_MT[238], arg this[193485]:ArrayViewRankChangeDom[193427](?), arg tup[192703]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    unknown tupLoD[192715](192713 call * rank(192712 'typeof'(192711 call tup 0)))
    (192718 'end of statement')
    unknown i[192721] 0
    (192724 'end of statement')
    {
      unknown d[192759] 0
      unknown tmp[192760] "maybe param" "temp"
      (192772 'move' tmp[192760](192770 call chpl_compute_low_param_loop_bound 0(192728 call - downrank 1)))
      unknown tmp[192761] "maybe param" "temp"
      (192782 'move' tmp[192761](192780 call chpl_compute_high_param_loop_bound 0(192777 call - downrank 1)))
      unknown tmp[192762] "maybe param" "temp"
      (192785 'move' tmp[192762] 1)
      ParamForLoop[192787]
      { d[192759] tmp[192760] tmp[192761] tmp[192762]
        if(192755 call _cond_test(192736 call !(192735 call collapsedDim d)))
        {
          (192746 call =(192741 call tupLoD i)(192745 call tup d))
          (192752 call += i 1)
        }
      }
      label _unused_continueLabel[192764]
      label _breakLabel[192763]
    }
    (192797 return tupLoD)
  }
  function ArrayViewRankChangeDom[193427](?).downIdxToUpIdx[192805](arg _mt[193491]:_MT[238], arg this[193489]:ArrayViewRankChangeDom[193427](?), arg downIdx[192803]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    unknown upIdx[192811](192809 call * rank idxType)
    (192814 'end of statement')
    unknown upDim[192817] 0
    (192820 'end of statement')
    {
      unknown downDim[192856] 0
      unknown tmp[192857] "maybe param" "temp"
      (192869 'move' tmp[192857](192867 call chpl_compute_low_param_loop_bound 0(192824 call - downrank 1)))
      unknown tmp[192858] "maybe param" "temp"
      (192879 'move' tmp[192858](192877 call chpl_compute_high_param_loop_bound 0(192874 call - downrank 1)))
      unknown tmp[192859] "maybe param" "temp"
      (192882 'move' tmp[192859] 1)
      ParamForLoop[192884]
      { downDim[192856] tmp[192857] tmp[192858] tmp[192859]
        {
          if(192851 call _cond_test(192832 call !(192831 call collapsedDim downDim)))
          {
            (192842 call =(192837 call upIdx upDim)(192841 call downIdx downDim))
            (192848 call += upDim 1)
          }
        }
      }
      label _unused_continueLabel[192861]
      label _breakLabel[192860]
    }
    if(192906 call _cond_test(192895 call == rank 1))
    {
      (192901 return(192900 call upIdx 0))
    }
    {
      (192904 return upIdx)
    }
  }
  function ArrayViewRankChangeDom[193427](?).dsiSerialWrite[192918](arg _mt[193495]:_MT[238], arg this[193493]:ArrayViewRankChangeDom[193427](?), arg f[192916]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    unknown first[192921] 1
    (192924 'end of statement')
    {
      unknown _indexOfInterest[192978] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[192979] "expr temp" "temp"
      (192988 'move' _iterator[192979](192986 call _getIterator(192996 call chpl_direct_range_iter 0(192993 call - downrank 1) 1)))
      Defer
      {
        {
          (193012 call _freeIterator _iterator[192979])
        }
      }
      { scopeless type
        (193001 'move' _indexOfInterest[192978](192998 call iteratorIndex _iterator[192979]))
      }
      ForLoop[192980]
      {
        unknown d[193005] "index var" "insert auto destroy"
        (193007 'move' d[193005] _indexOfInterest[192978])
        if(192974 call _cond_test(192938 call !(192937 call collapsedDim d)))
        {
          if(192957 call _cond_test first)
          {
            (192943 call <~> f "{")
            (192949 call = first 0)
          }
          {
            (192954 call <~> f ", ")
          }
          (192971 call <~> f(192970 call(192965 call . downDom c"dsiDim") d))
        }
        label _continueLabel[192983]
        _indexOfInterest[192978]
        _iterator[192979]
      }
      label _breakLabel[192984]
    }
    (193021 call <~> f "}")
  }
  function ArrayViewRankChangeDom[193427](?).dsiMyDist[193028](arg _mt[193499]:_MT[238], arg this[193497]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (193031 return dist)
  }
  function ArrayViewRankChangeDom[193427](?).dsiTargetLocales[193038](arg _mt[193503]:_MT[238], arg this[193501]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method"
  {
    (193046 return(193045 call(193041 call . downDom c"dsiTargetLocales")))
  }
  function ArrayViewRankChangeDom[193427](?).dsiHasSingleLocalSubdomain[193053](arg _mt[193507]:_MT[238], arg this[193505]:ArrayViewRankChangeDom[193427](?)) param : _unknown[51] "method" "primary method"
  {
    (193061 return(193060 call(193056 call . downDom c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewRankChangeDom[193427](?).dsiLocalSubdomain[193072](arg _mt[193511]:_MT[238], arg this[193509]:ArrayViewRankChangeDom[193427](?), arg loc[193069] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    const dims[193086] "const"(193085 call(193081 call .(193080 call(193075 call . downDom c"dsiLocalSubdomain") loc) c"dims"))
    (193089 'end of statement')
    const empty[193101] "const"(193099 call chpl__buildDomainRuntimeType defaultDist rank idxType(193097 call chpl__anyStridable dims))
    (193104 'end of statement')
    {
      unknown d[193139] 0
      unknown tmp[193140] "maybe param" "temp"
      (193152 'move' tmp[193140](193150 call chpl_compute_low_param_loop_bound 0(193111 call -(193107 call . dims c"size") 1)))
      unknown tmp[193141] "maybe param" "temp"
      (193165 'move' tmp[193141](193163 call chpl_compute_high_param_loop_bound 0(193157 call -(193159 call . dims c"size") 1)))
      unknown tmp[193142] "maybe param" "temp"
      (193168 'move' tmp[193142] 1)
      ParamForLoop[193170]
      { d[193139] tmp[193140] tmp[193141] tmp[193142]
        {
          if(193133 call _cond_test(193128 call &&(193118 call collapsedDim d)(193127 call(193123 call .(193122 call dims d) c"isEmpty"))))
          {
            (193131 return empty)
          }
        }
      }
      label _unused_continueLabel[193144]
      label _breakLabel[193143]
    }
    (193185 return(193184 call chpl_rankChangeConvertDownToUp dims rank collapsedDim))
  }
  function ArrayViewRankChangeDom[193427](?).isRankChangeDomainView[193191](arg _mt[193515]:_MT[238], arg this[193513]:ArrayViewRankChangeDom[193427](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (193194 return 1)
  }
  function ArrayViewRankChangeDom[193427](?)._getActualDomain[193201](arg _mt[193519]:_MT[238], arg this[193517]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method"
  {
    if(193220 call _cond_test(193206 call chpl__isDomainView downDom))
    {
      (193213 return(193212 call(193208 call . downDom c"_getActualDomain")))
    }
    {
      (193217 return downDom)
    }
  }
  function ArrayViewRankChangeDom[193427](?).dsiDestroyDom[193229](arg _mt[193523]:_MT[238], arg this[193521]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    if(193243 call _cond_test(193233 call != upDomInst nil[44]))
    {
      (193241 call _delete_dom(193237 call postfix! upDomInst) 0)
    }
    if(193266 call _cond_test(193251 call != downDomInst nil[44]))
    {
      (193264 call _delete_dom(193255 call postfix! downDomInst)(193263 call _isPrivatized(193260 call postfix! downDomInst)))
    }
  }
  function ArrayViewRankChangeDom[193427](?).dsiSupportsPrivatization[193275](arg _mt[193527]:_MT[238], arg this[193525]:ArrayViewRankChangeDom[193427](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (193285 return(193284 call(193280 call .(193278 call postfix! downDomInst) c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeDom[193427](?).dsiGetPrivatizeData[193292](arg _mt[193531]:_MT[238], arg this[193529]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method"
  {
    (193304 return(193302 call _build_tuple upDomInst collapsedDim idx distPid distInst downDomPid downDomInst))
  }
  function ArrayViewRankChangeDom[193427](?).dsiPrivatize[193313](arg _mt[193535]:_MT[238], arg this[193533]:ArrayViewRankChangeDom[193427](?), arg privatizeData[193311]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (193371 return(193317 'new'(_chpl_manager = unmanaged[220](?))(193370 call ArrayViewRankChangeDom(rank =(193320 call . this c"rank"))(idxType =(193326 call . this c"idxType"))(stridable =(193331 call . this c"stridable"))(upDomInst =(193338 call privatizeData 0))(collapsedDim =(193343 call privatizeData 1))(idx =(193348 call privatizeData 2))(distPid =(193353 call privatizeData 3))(distInst =(193358 call privatizeData 4))(downDomPid =(193363 call privatizeData 5))(downDomInst =(193368 call privatizeData 6)))))
  }
  function ArrayViewRankChangeDom[193427](?).dsiGetReprivatizeData[193378](arg _mt[193539]:_MT[238], arg this[193537]:ArrayViewRankChangeDom[193427](?)) : _unknown[51] "method" "primary method"
  {
    (193386 return(193384 call _build_tuple upDomInst downDomPid downDomInst))
  }
  function ArrayViewRankChangeDom[193427](?).dsiReprivatize[193395](arg _mt[193543]:_MT[238], arg this[193541]:ArrayViewRankChangeDom[193427](?), arg other[193393]:_any[178](?), arg reprivatizeData[193397]:_any[178](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (193404 call = upDomInst(193403 call reprivatizeData 0))
    (193413 call = downDomPid(193412 call reprivatizeData 1))
    (193421 call = downDomInst(193420 call reprivatizeData 2))
  }
  type ArrayViewRankChangeDom[193427](?) unknown upDomInst[191792](191791 'to unmanaged class from unknown'(191790 'to nilable class from type'(191789 call DefaultRectangularDom rank idxType stridable))) const collapsedDim[191804] "const" const idx[191808] "const" const distPid[191812] "const" const distInst[191816] "const" unknown downDomPid[191849] int[13] unknown downDomInst[191864](191863 'to nilable class from type'(191862 call downDomType(191855 call . collapsedDim c"size") idxType stridable distInst)) BaseRectangularDom forwarding ( )
  function buildIndexCacheHelper[193550](arg arr[193548]:_any[178](?), arg dom[193552]:_any[178](?), arg collapsedDim[193554]:_any[178](?), arg idx[193556]:_any[178](?)) : _unknown[51] "private"
  {
    if(193661 call _cond_test(193561 call chpl__isDROrDRView arr))
    {
      if(193652 call _cond_test(193565 call chpl__isArrayView arr))
      {
        if(193630 call _cond_test(193580 call &&(193571 call(193567 call . arr c"isSliceArrayView"))(193578 call !(193577 call(193573 call . arr c"_containsRCRE")))))
        {
          (193612 return(193611 call(193604 call .(193601 call(193593 call .(193592 call(193588 call .(193587 call(193583 call . arr c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(193597 call . arr c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (193627 return(193626 call(193619 call .(193616 call . arr c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (193649 return(193648 call(193641 call .(193640 call(193636 call . arr c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (193658 return 0)
    }
  }
  function ArrayViewRankChangeArr[195210](?).init[193707](arg _mt[195214]:_MT[238], arg this[195212]:ArrayViewRankChangeArr[195210](?), arg eltType[193705]:_any[178](?), const arg _DomPid[193709]:_any[178](?), const arg dom[193711]:_any[178](?), const arg _ArrPid[193713]:_any[178](?), const arg _ArrInstance[193715]:_any[178](?), const arg collapsedDim[193717]:_any[178](?), const arg idx[193719]:_any[178](?), const arg ownsArrInstance[193723] :
  bool[10] =
  0) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (193734 call(193728 call . super c"init")(eltType = eltType))
    (193742 call =(193738 call . this c"_DomPid") _DomPid)
    (193750 call =(193746 call . this c"dom") dom)
    (193758 call =(193754 call . this c"_ArrPid") _ArrPid)
    (193766 call =(193762 call . this c"_ArrInstance") _ArrInstance)
    (193774 call =(193770 call . this c"collapsedDim") collapsedDim)
    (193782 call =(193778 call . this c"idx") idx)
    (193796 call =(193786 call . this c"indexCache")(193795 call buildIndexCacheHelper _ArrInstance dom collapsedDim idx))
    (193806 call =(193802 call . this c"ownsArrInstance") ownsArrInstance)
  }
  function ArrayViewRankChangeArr[195210](?).chpl_forwarding_expr9_arr[193820](arg _mt[195218]:_MT[238], arg this[195216]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "compiler generated" "inline" "maybe ref" "method" "primary method" "reference to const when const this"
  {
    (193822 return arr)
  }
  function ArrayViewRankChangeArr[195210](?).idxType[193828](arg _mt[195222]:_MT[238], arg this[195220]:ArrayViewRankChangeArr[195210](?)) type : _unknown[51] "method" "primary method" "no parens"
  {
    (193834 return(193831 call . dom c"idxType"))
  }
  function ArrayViewRankChangeArr[195210](?).rank[193841](arg _mt[195226]:_MT[238], arg this[195224]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method" "no parens"
  {
    (193847 return(193844 call . dom c"rank"))
  }
  function ArrayViewRankChangeArr[195210](?).isRankChangeArrayView[193854](arg _mt[195230]:_MT[238], arg this[195228]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (193857 return 1)
  }
  function ArrayViewRankChangeArr[195210](?).these[193864](arg _mt[195234]:_MT[238], arg this[195232]:ArrayViewRankChangeArr[195210](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[193875] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[193876] "expr temp" "temp"
      (193885 'move' _iterator[193876](193883 call _getIterator(193871 call chpl__serialViewIter this privDom)))
      Defer
      {
        {
          (193902 call _freeIterator _iterator[193876])
        }
      }
      { scopeless type
        (193891 'move' _indexOfInterest[193875](193888 call iteratorIndex _iterator[193876]))
      }
      ForLoop[193877]
      {
        unknown elem[193895] "index var" "insert auto destroy"
        (193897 'move' elem[193895] _indexOfInterest[193875])
        (193873 yield elem)
        label _continueLabel[193880]
        _indexOfInterest[193875]
        _iterator[193876]
      }
      label _breakLabel[193881]
    }
  }
  function ArrayViewRankChangeArr[195210](?).these[193918](arg _mt[195238]:_MT[238], arg this[195236]:ArrayViewRankChangeArr[195210](?), param arg tag[193915] :
  iterKind) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    Forall {
      induction variables:
        
        unknown i[193977] "index var" "insert auto destroy"
      iterated expressions:
        privDom
      shadow variables:
      other variables
        forall body
      {
        (193973 yield(193970 IfExpr (193944 call shouldUseIndexCache) then
        { scopeless
          (193957 call(193946 call . indexCache c"getDataElem")(193955 call(193950 call . indexCache c"getDataIndex") i))
        } else
        { scopeless
          (193969 call(193959 call . arr c"dsiAccess")(193967 call chpl_rankChangeConvertIdx i collapsedDim idx))
        } ))
      }
    }
  }
  where {
    (193938 call &&(193930 call &&(193925 call == tag(193922 call . iterKind c"standalone"))(193928 call ! localeModelHasSublocales))(193937 'method call resolves' privDom "these" tag))
  }
  function ArrayViewRankChangeArr[195210](?).these[193990](arg _mt[195242]:_MT[238], arg this[195240]:ArrayViewRankChangeArr[195210](?), param arg tag[193987] :
  iterKind) : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[194011] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[194012] "expr temp" "temp"
      (194021 'move' _iterator[194012](194019 call _getIterator(194006 call(194001 call . privDom c"these") tag)))
      Defer
      {
        {
          (194038 call _freeIterator _iterator[194012])
        }
      }
      { scopeless type
        (194027 'move' _indexOfInterest[194011](194024 call iteratorIndex _iterator[194012]))
      }
      ForLoop[194013]
      {
        unknown followThis[194031] "index var" "insert auto destroy"
        (194033 'move' followThis[194031] _indexOfInterest[194011])
        {
          (194008 yield followThis)
        }
        label _continueLabel[194016]
        _indexOfInterest[194011]
        _iterator[194012]
      }
      label _breakLabel[194017]
    }
  }
  where {
    (193997 call == tag(193994 call . iterKind c"leader"))
  }
  function ArrayViewRankChangeArr[195210](?).these[194055](arg _mt[195246]:_MT[238], arg this[195244]:ArrayViewRankChangeArr[195210](?), param arg tag[194052] :
  iterKind, arg followThis[194057]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    {
      unknown _indexOfInterest[194119] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[194120] "expr temp" "temp"
      (194129 'move' _iterator[194120](194127 call _getIterator(194074 call(194068 call . privDom c"these") tag followThis)))
      Defer
      {
        {
          (194146 call _freeIterator _iterator[194120])
        }
      }
      { scopeless type
        (194135 'move' _indexOfInterest[194119](194132 call iteratorIndex _iterator[194120]))
      }
      ForLoop[194121]
      {
        unknown i[194139] "index var" "insert auto destroy"
        (194141 'move' i[194139] _indexOfInterest[194119])
        {
          if(194114 call _cond_test(194077 call shouldUseIndexCache))
          {
            const dataIdx[194085] "const"(194084 call(194079 call . indexCache c"getDataIndex") i)
            (194088 'end of statement')
            (194097 yield(194096 call(194091 call . indexCache c"getDataElem") dataIdx))
          }
          {
            (194111 yield(194110 call(194100 call . arr c"dsiAccess")(194108 call chpl_rankChangeConvertIdx i collapsedDim idx)))
          }
        }
        label _continueLabel[194124]
        _indexOfInterest[194119]
        _iterator[194120]
      }
      label _breakLabel[194125]
    }
  }
  where {
    (194064 call == tag(194061 call . iterKind c"follower"))
  }
  function ArrayViewRankChangeArr[195210](?).dsiSerialWrite[194161](arg _mt[195250]:_MT[238], arg this[195248]:ArrayViewRankChangeArr[195210](?), arg f[194159]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (194168 call chpl_serialReadWriteRectangular f this privDom)
  }
  function ArrayViewRankChangeArr[195210](?).dsiSerialRead[194177](arg _mt[195254]:_MT[238], arg this[195252]:ArrayViewRankChangeArr[195210](?), arg f[194175]:_any[178](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (194184 call chpl_serialReadWriteRectangular f this privDom)
  }
  function ArrayViewRankChangeArr[195210](?).dsiDisplayRepresentation[194191](arg _mt[195258]:_MT[238], arg this[195256]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    (194212 call writeln "Rank Change view")
    (194218 call writeln "----------")
    (194223 call writeln "of domain:")
    (194230 call(194226 call . privDom c"dsiDisplayRepresentation"))
    (194235 call writeln "on array:")
    (194242 call(194238 call . arr c"dsiDisplayRepresentation"))
    (194263 call writeln "where the dims are collapsed as follows:")
    (194268 call writeln collapsedDim)
    (194289 call writeln "and the missing indices are:")
    (194294 call writeln idx)
    (194299 call writeln "----------")
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194311](arg _mt[195262]:_MT[238], arg this[195260]:ArrayViewRankChangeArr[195210](?), arg i[194307] ... :
  idxType) ref : _unknown[51] "inline" "method" "primary method"
  {
    (194317 return(194316 call dsiAccess i))
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194330](arg _mt[195266]:_MT[238], arg this[195264]:ArrayViewRankChangeArr[195210](?), arg i[194326] ... :
  idxType) : _unknown[51] "inline" "method" "primary method"
  {
    (194340 return(194339 call dsiAccess i))
  }
  where {
    (194335 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194354](arg _mt[195270]:_MT[238], arg this[195268]:ArrayViewRankChangeArr[195210](?), arg i[194350] ... :
  idxType) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (194364 return(194363 call dsiAccess i))
  }
  where {
    (194359 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194374](arg _mt[195274]:_MT[238], arg this[195272]:ArrayViewRankChangeArr[195210](?), arg i[194372]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    if(194415 call _cond_test(194378 call shouldUseIndexCache))
    {
      const dataIdx[194386] "const"(194385 call(194380 call . indexCache c"getDataIndex") i)
      (194389 'end of statement')
      (194398 return(194397 call(194392 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194412 return(194411 call(194401 call . arr c"dsiAccess")(194409 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194426](arg _mt[195278]:_MT[238], arg this[195276]:ArrayViewRankChangeArr[195210](?), arg i[194424]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    if(194471 call _cond_test(194434 call shouldUseIndexCache))
    {
      const dataIdx[194442] "const"(194441 call(194436 call . indexCache c"getDataIndex") i)
      (194445 'end of statement')
      (194454 return(194453 call(194448 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194468 return(194467 call(194457 call . arr c"dsiAccess")(194465 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194431 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiAccess[194483](arg _mt[195282]:_MT[238], arg this[195280]:ArrayViewRankChangeArr[195210](?), arg i[194481]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    if(194528 call _cond_test(194491 call shouldUseIndexCache))
    {
      const dataIdx[194499] "const"(194498 call(194493 call . indexCache c"getDataIndex") i)
      (194502 'end of statement')
      (194511 return(194510 call(194505 call . indexCache c"getDataElem") dataIdx))
    }
    {
      (194525 return(194524 call(194514 call . arr c"dsiAccess")(194522 call chpl_rankChangeConvertIdx i collapsedDim idx)))
    }
  }
  where {
    (194488 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiLocalAccess[194540](arg _mt[195286]:_MT[238], arg this[195284]:ArrayViewRankChangeArr[195210](?), arg i[194538]:_any[178](?)) ref : _unknown[51] "inline" "method" "primary method"
  {
    (194554 return(194553 call(194543 call . arr c"dsiLocalAccess")(194551 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  function ArrayViewRankChangeArr[195210](?).dsiLocalAccess[194563](arg _mt[195290]:_MT[238], arg this[195288]:ArrayViewRankChangeArr[195210](?), arg i[194561]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (194581 return(194580 call(194570 call . arr c"dsiLocalAccess")(194578 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  where {
    (194568 call shouldReturnRvalueByValue eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiLocalAccess[194591](arg _mt[195294]:_MT[238], arg this[195292]:ArrayViewRankChangeArr[195210](?), arg i[194589]:_any[178](?)) const ref : _unknown[51] "inline" "method" "primary method"
  {
    (194609 return(194608 call(194598 call . arr c"dsiLocalAccess")(194606 call chpl_rankChangeConvertIdx i collapsedDim idx)))
  }
  where {
    (194596 call shouldReturnRvalueByConstRef eltType)
  }
  function ArrayViewRankChangeArr[195210](?).dsiBoundsCheck[194619](arg _mt[195298]:_MT[238], arg this[195296]:ArrayViewRankChangeArr[195210](?), arg i[194617]:_any[178](?)) : _unknown[51] "inline" "method" "primary method"
  {
    (194628 return(194627 call(194622 call . privDom c"dsiMember") i))
  }
  function ArrayViewRankChangeArr[195210](?).dsiHasSingleLocalSubdomain[194635](arg _mt[195302]:_MT[238], arg this[195300]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method"
  {
    (194643 return(194642 call(194638 call . privDom c"dsiHasSingleLocalSubdomain")))
  }
  function ArrayViewRankChangeArr[195210](?).dsiLocalSubdomain[194654](arg _mt[195306]:_MT[238], arg this[195304]:ArrayViewRankChangeArr[195210](?), arg loc[194651] :
  locale[28]) : _unknown[51] "method" "primary method"
  {
    (194663 return(194662 call(194657 call . privDom c"dsiLocalSubdomain") loc))
  }
  function ArrayViewRankChangeArr[195210](?).dsiSupportsPrivatization[194670](arg _mt[195310]:_MT[238], arg this[195308]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (194678 return(194677 call(194673 call . _ArrInstance c"dsiSupportsPrivatization")))
  }
  function ArrayViewRankChangeArr[195210](?).dsiGetPrivatizeData[194685](arg _mt[195314]:_MT[238], arg this[195312]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method"
  {
    (194696 return(194694 call _build_tuple _DomPid dom _ArrPid _ArrInstance collapsedDim idx))
  }
  function ArrayViewRankChangeArr[195210](?).dsiPrivatize[194705](arg _mt[195318]:_MT[238], arg this[195316]:ArrayViewRankChangeArr[195210](?), arg privatizeData[194703]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    (194748 return(194709 'new'(_chpl_manager = unmanaged[220](?))(194747 call ArrayViewRankChangeArr(eltType =(194712 call . this c"eltType"))(_DomPid =(194720 call privatizeData 0))(dom =(194725 call privatizeData 1))(_ArrPid =(194730 call privatizeData 2))(_ArrInstance =(194735 call privatizeData 3))(collapsedDim =(194740 call privatizeData 4))(idx =(194745 call privatizeData 5)))))
  }
  function ArrayViewRankChangeArr[195210](?).shouldUseIndexCache[194755](arg _mt[195322]:_MT[238], arg this[195320]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method"
  {
    (194761 return(194760 call chpl__isDROrDRView _ArrInstance))
  }
  function ArrayViewRankChangeArr[195210](?).buildIndexCache[194768](arg _mt[195326]:_MT[238], arg this[195324]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method"
  {
    if(194870 call _cond_test(194772 call shouldUseIndexCache))
    {
      if(194861 call _cond_test(194776 call chpl__isArrayView _ArrInstance))
      {
        if(194839 call _cond_test(194791 call &&(194782 call(194778 call . _ArrInstance c"isSliceArrayView"))(194789 call !(194788 call(194784 call . _ArrInstance c"_containsRCRE")))))
        {
          (194821 return(194820 call(194813 call .(194812 call(194804 call .(194803 call(194799 call .(194798 call(194794 call . _ArrInstance c"_getActualArray")) c"dsiGetRAD")) c"toSlice")(194808 call . _ArrInstance c"dom")) c"toRankChange") dom collapsedDim idx))
        }
        {
          (194836 return(194835 call(194828 call .(194825 call . _ArrInstance c"indexCache") c"toRankChange") dom collapsedDim idx))
        }
      }
      {
        (194858 return(194857 call(194850 call .(194849 call(194845 call . _ArrInstance c"dsiGetRAD")) c"toRankChange") dom collapsedDim idx))
      }
    }
    {
      (194867 return 0)
    }
  }
  function ArrayViewRankChangeArr[195210](?).privDom[194879](arg _mt[195330]:_MT[238], arg this[195328]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(194898 call _cond_test(194884 call _isPrivatized dom))
    {
      (194891 return(194890 call chpl_getPrivatizedCopy(194887 'typeof' dom) _DomPid))
    }
    {
      (194895 return dom)
    }
  }
  function ArrayViewRankChangeArr[195210](?).arr[194907](arg _mt[195334]:_MT[238], arg this[195332]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    if(194926 call _cond_test(194912 call _isPrivatized _ArrInstance))
    {
      (194919 return(194918 call chpl_getPrivatizedCopy(194915 'typeof' _ArrInstance) _ArrPid))
    }
    {
      (194923 return _ArrInstance)
    }
  }
  function ArrayViewRankChangeArr[195210](?).dsiGetBaseDom[194935](arg _mt[195338]:_MT[238], arg this[195336]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method" "method overrides"
  {
    (194938 return dom)
  }
  function ArrayViewRankChangeArr[195210](?)._getActualArray[194945](arg _mt[195342]:_MT[238], arg this[195340]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method"
  {
    if(194964 call _cond_test(194950 call chpl__isArrayView arr))
    {
      (194957 return(194956 call(194952 call . arr c"_getActualArray")))
    }
    {
      (194961 return arr)
    }
  }
  function ArrayViewRankChangeArr[195210](?)._containsRCRE[194973](arg _mt[195346]:_MT[238], arg this[195344]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method"
  {
    if(195008 call _cond_test(194978 call chpl__isArrayView arr))
    {
      (195001 return(194999 call ||(194991 call ||(194984 call(194980 call . arr c"isRankChangeArrayView"))(194990 call(194986 call . arr c"isReindexArrayView")))(194998 call(194994 call . arr c"_containsRCRE"))))
    }
    {
      (195005 return 0)
    }
  }
  function ArrayViewRankChangeArr[195210](?)._getRCREView[195017](arg _mt[195350]:_MT[238], arg this[195348]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method"
  {
    (195020 return this)
  }
  function ArrayViewRankChangeArr[195210](?).dsiElementInitializationComplete[195027](arg _mt[195354]:_MT[238], arg this[195352]:ArrayViewRankChangeArr[195210](?)) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
  }
  function ArrayViewRankChangeArr[195210](?).dsiDestroyArr[195038](arg _mt[195358]:_MT[238], arg this[195356]:ArrayViewRankChangeArr[195210](?), arg deinitElts[195035] :
  bool[10]) : _unknown[51] "method" "primary method" "method overrides" "no return value for void"
  {
    if(195051 call _cond_test ownsArrInstance)
    {
      (195048 call _delete_arr _ArrInstance(195047 call _isPrivatized _ArrInstance))
    }
  }
  function ArrayViewRankChangeArr[195210](?).doiCanBulkTransferRankChange[195060](arg _mt[195362]:_MT[238], arg this[195360]:ArrayViewRankChangeArr[195210](?)) param : _unknown[51] "method" "primary method" "method overrides"
  {
    (195068 return(195067 call(195063 call . arr c"doiCanBulkTransferRankChange")))
  }
  function ArrayViewRankChangeArr[195210](?).doiBulkTransferFromKnown[195077](arg _mt[195366]:_MT[238], arg this[195364]:ArrayViewRankChangeArr[195210](?), arg destDom[195075]:_any[178](?), arg srcClass[195079]:_any[178](?), arg srcDom[195081]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[195120] "const"(195119 call chpl_rankChangeConvertDom(195099 call(195095 call . destDom c"dims"))(195102 call . destDom c"rank")(195109 call .(195106 call . this c"dom") c"collapsedDim")(195116 call .(195113 call . this c"dom") c"idx"))
    (195123 'end of statement')
    (195135 return(195134 call chpl__bulkTransferArray(195127 call . this c"arr") shifted srcClass srcDom))
  }
  where {
    (195092 call(195088 call .(195085 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  }
  function ArrayViewRankChangeArr[195210](?).doiBulkTransferToKnown[195145](arg _mt[195370]:_MT[238], arg this[195368]:ArrayViewRankChangeArr[195210](?), arg srcDom[195143]:_any[178](?), arg destClass[195147]:_any[178](?), arg destDom[195149]:_any[178](?)) : _unknown[51] "method" "primary method"
  {
    const shifted[195188] "const"(195187 call chpl_rankChangeConvertDom(195167 call(195163 call . srcDom c"dims"))(195170 call . srcDom c"rank")(195177 call .(195174 call . this c"dom") c"collapsedDim")(195184 call .(195181 call . this c"dom") c"idx"))
    (195191 'end of statement')
    (195203 return(195202 call chpl__bulkTransferArray destClass destDom(195198 call . this c"arr") shifted))
  }
  where {
    (195160 call(195156 call .(195153 call . this c"arr") c"doiCanBulkTransferRankChange"))
  }
  { scopeless type
    bool[10]
  }
  type ArrayViewRankChangeArr[195210](?) const _DomPid[193671] "const" const dom[193675] "const" const _ArrPid[193679] "const" const _ArrInstance[193683] "const" const collapsedDim[193687] "const" const idx[193691] "const" const indexCache[193695] "const" const ownsArrInstance[193699] "const" AbsBaseArr forwarding ( )
  function chpl_rankChangeConvertIdx[195379](arg i[195376] :
  integral, arg collapsedDim[195381]:_any[178](?), arg idx[195383]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown downrank[195389] "param"(195386 call . collapsedDim c"size")
    (195392 'end of statement')
    unknown ind[195395] idx
    (195398 'end of statement')
    unknown j[195400] 0
    (195403 'end of statement')
    {
      unknown d[195436] 0
      unknown tmp[195437] "maybe param" "temp"
      (195449 'move' tmp[195437](195447 call chpl_compute_low_param_loop_bound 0(195407 call - downrank 1)))
      unknown tmp[195438] "maybe param" "temp"
      (195459 'move' tmp[195438](195457 call chpl_compute_high_param_loop_bound 0(195454 call - downrank 1)))
      unknown tmp[195439] "maybe param" "temp"
      (195462 'move' tmp[195439] 1)
      ParamForLoop[195464]
      { d[195436] tmp[195437] tmp[195438] tmp[195439]
        {
          if(195431 call _cond_test(195415 call !(195414 call collapsedDim d)))
          {
            (195422 call =(195420 call ind d) i)
            (195428 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195441]
      label _breakLabel[195440]
    }
    (195479 call assert(195476 call == j 1))
    (195482 return ind)
  }
  function chpl_rankChangeConvertIdx[195490](arg i[195488]:_any[178](?), arg collapsedDim[195492]:_any[178](?), arg idx[195494]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown downrank[195500] "param"(195497 call . collapsedDim c"size")
    (195503 'end of statement')
    unknown ind[195506] idx
    (195509 'end of statement')
    unknown j[195511] 0
    (195514 'end of statement')
    {
      unknown d[195550] 0
      unknown tmp[195551] "maybe param" "temp"
      (195563 'move' tmp[195551](195561 call chpl_compute_low_param_loop_bound 0(195518 call - downrank 1)))
      unknown tmp[195552] "maybe param" "temp"
      (195573 'move' tmp[195552](195571 call chpl_compute_high_param_loop_bound 0(195568 call - downrank 1)))
      unknown tmp[195553] "maybe param" "temp"
      (195576 'move' tmp[195553] 1)
      ParamForLoop[195578]
      { d[195550] tmp[195551] tmp[195552] tmp[195553]
        {
          if(195545 call _cond_test(195526 call !(195525 call collapsedDim d)))
          {
            (195536 call =(195531 call ind d)(195535 call i j))
            (195542 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195555]
      label _breakLabel[195554]
    }
    (195588 return ind)
  }
  function chpl_rankChangeConvertIdxHiDToLoD[195596](arg i[195594]:_any[178](?), arg collapsedDim[195598]:_any[178](?), arg idx[195600]:_any[178](?), param arg rank[195602]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown downrank[195608] "param"(195605 call . collapsedDim c"size")
    (195611 'end of statement')
    unknown ind[195621](195619 call * rank(195618 'typeof'(195617 call i 0)))
    (195624 'end of statement')
    unknown j[195626] 0
    (195629 'end of statement')
    {
      unknown d[195665] 0
      unknown tmp[195666] "maybe param" "temp"
      (195678 'move' tmp[195666](195676 call chpl_compute_low_param_loop_bound 0(195633 call - downrank 1)))
      unknown tmp[195667] "maybe param" "temp"
      (195688 'move' tmp[195667](195686 call chpl_compute_high_param_loop_bound 0(195683 call - downrank 1)))
      unknown tmp[195668] "maybe param" "temp"
      (195691 'move' tmp[195668] 1)
      ParamForLoop[195693]
      { d[195665] tmp[195666] tmp[195667] tmp[195668]
        {
          if(195660 call _cond_test(195641 call !(195640 call collapsedDim d)))
          {
            (195651 call =(195646 call ind j)(195650 call i d))
            (195657 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195670]
      label _breakLabel[195669]
    }
    if(195715 call _cond_test(195704 call == rank 1))
    {
      (195710 return(195709 call ind 0))
    }
    {
      (195713 return ind)
    }
  }
  function chpl_rankChangeConvertDownToUp[195727](arg dims[195725]:_any[178](?), param arg uprank[195729]:_any[178](?), arg collapsedDim[195731]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ranges[195741](195739 call * uprank(195738 'typeof'(195737 call dims 0)))
    (195744 'end of statement')
    unknown j[195747] 0
    (195750 'end of statement')
    {
      unknown d[195789] 0
      unknown tmp[195790] "maybe param" "temp"
      (195802 'move' tmp[195790](195800 call chpl_compute_low_param_loop_bound 0(195757 call -(195753 call . dims c"size") 1)))
      unknown tmp[195791] "maybe param" "temp"
      (195815 'move' tmp[195791](195813 call chpl_compute_high_param_loop_bound 0(195807 call -(195809 call . dims c"size") 1)))
      unknown tmp[195792] "maybe param" "temp"
      (195818 'move' tmp[195792] 1)
      ParamForLoop[195820]
      { d[195789] tmp[195790] tmp[195791] tmp[195792]
        {
          if(195784 call _cond_test(195765 call !(195764 call collapsedDim d)))
          {
            (195775 call =(195770 call ranges j)(195774 call dims d))
            (195781 call += j 1)
          }
        }
      }
      label _unused_continueLabel[195794]
      label _breakLabel[195793]
    }
    (195834 return(195832 call chpl__buildDomainExpr(195830 'expand_tuple' ranges)))
  }
  function chpl_rankChangeConvertDom[195842](arg dims[195840]:_any[178](?), param arg uprank[195844]:_any[178](?), arg collapsedDim[195846]:_any[178](?), arg idx[195848]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown downrank[195854] "param"(195851 call . collapsedDim c"size")
    (195857 'end of statement')
    if(195915 call _cond_test(195864 call != uprank(195861 call . dims c"size")))
    {
      (195913 call compilerError "Called chpl_rankChangeConvertDom with incorrect rank. Got "(195890 call _cast string[26](195886 call . dims c"size")) ", expecting "(195911 call _cast string[26] uprank))
    }
    unknown ranges[195928](195926 call * downrank(195925 'typeof'(195924 call dims 0)))
    (195931 'end of statement')
    unknown j[195933] 0
    (195936 'end of statement')
    {
      unknown d[195990] 0
      unknown tmp[195991] "maybe param" "temp"
      (196003 'move' tmp[195991](196001 call chpl_compute_low_param_loop_bound 0(195940 call - downrank 1)))
      unknown tmp[195992] "maybe param" "temp"
      (196013 'move' tmp[195992](196011 call chpl_compute_high_param_loop_bound 0(196008 call - downrank 1)))
      unknown tmp[195993] "maybe param" "temp"
      (196016 'move' tmp[195993] 1)
      ParamForLoop[196018]
      { d[195990] tmp[195991] tmp[195992] tmp[195993]
        {
          if(195985 call _cond_test(195948 call !(195947 call collapsedDim d)))
          {
            (195958 call =(195953 call ranges d)(195957 call dims j))
            (195964 call += j 1)
          }
          {
            (195981 call =(195970 call ranges d)(195979 call chpl_build_bounded_range(195974 call idx d)(195978 call idx d)))
          }
        }
      }
      label _unused_continueLabel[195995]
      label _breakLabel[195994]
    }
    (196032 return(196030 call chpl__buildDomainExpr(196028 'expand_tuple' ranges)))
  }
}