AST dump for BinaryInsertionSort after pass readExternC.
Module use list: 

{
  (353135 'use' ChapelStandard)
  (270786 'use' Sort)
  function binaryInsertionSort[270801](arg Data[270798] :
  (270796 call chpl__buildArrayRuntimeType unknown Dom[270791] unknown eltType[270794]), arg comparator[270806] :
  unknown rec[270803] =
  defaultComparator) : _unknown[51]
  {
    (270814 call chpl_check_comparator comparator eltType)
    if(270846 call _cond_test(270822 call !=(270818 call . Dom c"rank") 1))
    {
      (270843 call compilerError "binaryInsertionSort() requires 1-D array")
    }
    { scopeless
      const low[270854] "const"(270851 call . Dom c"alignedLow")
      const high[270861] "const"(270858 call . Dom c"alignedHigh")
      const stride[270871] "const"(270870 call abs(270866 call . Dom c"stride"))
      (270874 'end of statement')
    }
    {
      unknown _indexOfInterest[271028] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[271029] "expr temp" "temp"
      (271038 'move' _iterator[271029](271036 call _getIterator(271047 call chpl_direct_range_iter low high stride)))
      Defer
      {
        {
          (271063 call _freeIterator _iterator[271029])
        }
      }
      { scopeless type
        (271052 'move' _indexOfInterest[271028](271049 call iteratorIndex _iterator[271029]))
      }
      ForLoop[271030]
      {
        unknown i[271056] "index var" "insert auto destroy"
        (271058 'move' i[271056] _indexOfInterest[271028])
        {
          { scopeless
            unknown valToInsert[270887](270886 call Data i)
            unknown lo[270891] low
            unknown hi[270898](270896 call - i stride)
            (270901 'end of statement')
          }
          { scopeless
            unknown tmp[270916] "temp"(270915 call _binarySearchForLastOccurrence Data valToInsert comparator lo hi)
            (270923 call _check_tuple_var_decl tmp[270916] 2)
            unknown found[270903](270917 call tmp[270916] 0)
            unknown loc[270905](270920 call tmp[270916] 1)
            (270928 'end of statement')
          }
          (270939 call = loc(270936 IfExpr  found then
          { scopeless
            (270933 call + loc stride)
          } else
          { scopeless
            loc
          } ))
          {
            unknown _indexOfInterest[270970] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[270971] "expr temp" "temp"
            (270980 'move' _iterator[270971](270978 call _getIterator(270997 call chpl_direct_range_iter loc(270994 call - i stride)(270990 call - stride))))
            Defer
            {
              {
                (271013 call _freeIterator _iterator[270971])
              }
            }
            { scopeless type
              (271002 'move' _indexOfInterest[270970](270999 call iteratorIndex _iterator[270971]))
            }
            ForLoop[270972]
            {
              unknown j[271006] "index var" "insert auto destroy"
              (271008 'move' j[271006] _indexOfInterest[270970])
              {
                (270966 call =(270961 call Data(270958 call + j stride))(270965 call Data j))
              }
              label _continueLabel[270975]
              _indexOfInterest[270970]
              _iterator[270971]
            }
            label _breakLabel[270976]
          }
          (271025 call =(271023 call Data loc) valToInsert)
        }
        label _continueLabel[271033]
        _indexOfInterest[271028]
        _iterator[271029]
      }
      label _breakLabel[271034]
    }
  }
  function _binarySearchForLastOccurrence[271082](arg Data[271079] :
  (271077 call chpl__buildArrayRuntimeType unknown Dom[271074]), arg val[271084]:_any[178](?), arg comparator[271089] :
  unknown rec[271086] =
  defaultComparator, in arg lo[271097] =
  (271094 call . Dom c"alignedLow"), in arg hi[271104] =
  (271101 call . Dom c"alignedHigh")) : _unknown[51] "private"
  {
    { scopeless
      const stride[271122] "const"(271119 IfExpr (271108 call . Dom c"stridable") then
      { scopeless
        (271117 call abs(271113 call . Dom c"stride"))
      } else
      { scopeless
        1
      } )
      (271125 'end of statement')
    }
    { scopeless
      unknown loc[271130](271128 call - 1)
      (271133 'end of statement')
    }
    {
      unknown tmp[271228] "temp"
      (271252 'move' tmp[271228](271247 call _cond_test(271249 call <= lo hi)))
      WhileDo[271233]
      {
        {
          { scopeless
            const size[271145] "const"(271143 call /(271140 call - hi lo) stride)
            const mid[271158] "const"(271156 call + lo(271154 call *(271151 call / size 2) stride))
            (271161 'end of statement')
          }
          if(271223 call _cond_test(271173 call ==(271171 call chpl_compare val(271169 call Data mid) comparator) 0))
          {
            (271177 call = loc mid)
            (271186 call = lo(271184 call + loc stride))
          }
          {
            { scopeless
              if(271217 call _cond_test(271199 call >(271197 call chpl_compare val(271195 call Data mid) comparator) 0))
              {
                { scopeless
                  (271206 call = lo(271204 call + mid stride))
                }
              }
              {
                { scopeless
                  (271214 call = hi(271212 call - mid stride))
                }
              }
            }
          }
        }
        label _continueLabel[271231]
        (271242 'move' tmp[271228](271237 call _cond_test(271239 call <= lo hi)))
        tmp[271228]
      }
      label _breakLabel[271232]
    }
    if(271268 call _cond_test(271259 call == loc(271257 call - 1)))
    {
      { scopeless
        (271266 return(271264 call _build_tuple 0 lo))
      }
    }
    (271278 return(271276 call _build_tuple 1 loc))
  }
}