AST dump for ChapelTuple after pass denormalize.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415991](const in arg _ln[2619228]:int(64)[13], in arg _fn[2619230]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_ChapelTuple_p[2590888]
    {
      goto _exit_chpl__init_ChapelTuple[2590925] _exit_chpl__init_ChapelTuple[2590925]
    }
    ref refIndentLevel[2590911]:int(32)[95] "temp"
    (2590909 call printModuleInit[20429] c"%*s\n" c"ChapelTuple" 11 _ln[2619228] _fn[2619230])
    (2590915 'move' refIndentLevel[2590911](2590914 'addr of' moduleInitLevel[20419]))
    (2590918 '+=' refIndentLevel[2590911] 1)
    (2590894 'move' chpl__init_ChapelTuple_p[2590888] 1)
    {
      (2589947 call chpl__init_DSIUtil[416153] _ln[2619228] _fn[2619230])
    }
    (2590921 '-=' refIndentLevel[2590911] 1)
    label _exit_chpl__init_ChapelTuple[2590925]
    (509020 return _void[55])
  }
  function 57*int(64)[1210546]._local_this[2527067](ref arg this[2527069]:57*int(64)[1210546], const in arg i[2527071]:int(64)[13], const in arg _ln[2627394]:int(64)[13], in arg _fn[2627396]:int(32)[95]) ref : _ref(int(64))[936633] "instantiated generic" "invisible fn" "local fn" "method" "no doc" "reference to const when const this" "resolved" "star tuple accessor"
  {
    const-val local__str_literal_779[2527074]:string[26] "temp"
    (2527076 'move' local__str_literal_779[2527074] "tuple access out of bounds: ")
    val tmp[2527086]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2527083 '<' i[2527071] 0)
    {
      (2527090 'move' tmp[2527086] 1)
    }
    {
      (2527101 'move' tmp[2527086](2527098 '>' i[2527071] 56))
    }
    if tmp[2527086]
    {
      (2527108 call _local_halt[2529718] local__str_literal_779[2527074] i[2527071] _ln[2627394] _fn[2627396])
    }
    ref call_tmp[2527112]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (2527114 'move' call_tmp[2527112](2527116 'get svec member' this[2527069] i[2527071]))
    (2527119 return call_tmp[2527112])
  }
  function 57*int(64)[1210546].this[1211664](ref arg this[1211670]:57*int(64)[1210546], const in arg i[1211672]:int(64)[13], const in arg _ln[2621740]:int(64)[13], in arg _fn[2621742]:int(32)[95]) ref : _ref(int(64))[936633] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "star tuple accessor"
  {
    const-val local__str_literal_779[2516618]:string[26] "temp"
    (2516619 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    val tmp[1211741]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2178003 '<' i[1211672] 0)
    {
      (1211759 'move' tmp[1211741] 1)
    }
    {
      (1211796 'move' tmp[1211741](2187582 '>' i[1211672] 56))
    }
    if tmp[1211741]
    {
      (1211812 call halt[1212313] "tuple access out of bounds: " i[1211672] _ln[2621740] _fn[2621742])
    }
    ref call_tmp[1211817]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1211819 'move' call_tmp[1211817](1211821 'get svec member' this[1211670] i[1211672]))
    (1211828 return call_tmp[1211817])
  }
  function 1*range(int(64),bounded,false)[1244757].this[1416851](wide-ref arg this[1416857]:1*range(int(64),bounded,false)[1244757], const in arg i[1416859]:int(64)[13], const in arg _ln[2621746]:int(64)[13], in arg _fn[2621748]:int(32)[95]) ref : __wide__ref_range_int64_t_bounded_F[2520546] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val local__str_literal_779[2517349]:string[26] "temp"
    (2517350 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    val tmp[1416928]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2178063 '<' i[1416859] 0)
    {
      (1416946 'move' tmp[1416928] 1)
    }
    {
      (1416983 'move' tmp[1416928](2187882 '>' i[1416859] 0))
    }
    if tmp[1416928]
    {
      (1416999 call halt[1212313] "tuple access out of bounds: " i[1416859] _ln[2621746] _fn[2621748])
    }
    wide-ref call_tmp[1417004]:range(int(64),bounded,false)[1026875] "dead after last mention" "maybe param" "temp"
    (1417006 'move' call_tmp[1417004](1417008 'get svec member' this[1416857] i[1416859]))
    (1417015 return call_tmp[1417004])
  }
  function 1*int(64)[1256586].this[1417253](wide-ref arg this[1417259]:1*int(64)[1256586], const in arg i[1417261]:int(64)[13], const in arg _ln[2621752]:int(64)[13], in arg _fn[2621754]:int(32)[95]) ref : __wide__ref_int64_t[2519703] "instantiated generic" "invisible fn" "method" "no doc" "reference to const when const this" "resolved" "fn synchronization free" "star tuple accessor"
  {
    const-val local__str_literal_779[2517355]:string[26] "temp"
    (2517356 'move' "tuple access out of bounds: " "tuple access out of bounds: ")
    val tmp[1417330]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    if(2178073 '<' i[1417261] 0)
    {
      (1417348 'move' tmp[1417330] 1)
    }
    {
      (1417385 'move' tmp[1417330](2187897 '>' i[1417261] 0))
    }
    if tmp[1417330]
    {
      (1417401 call halt[1212313] "tuple access out of bounds: " i[1417261] _ln[2621752] _fn[2621754])
    }
    wide-ref call_tmp[1417406]:int(64)[13] "dead after last mention" "maybe param" "temp"
    (1417408 'move' call_tmp[1417406](1417410 'get svec member' this[1417259] i[1417261]))
    (1417417 return call_tmp[1417406])
  }
  function 1*range(int(64),bounded,false)[1244757].indices[1801840](const  wide-ref arg this[1801846]:1*range(int(64),bounded,false)[1244757], ref arg _retArg[1876184]:range(int(64),bounded,false)[1026875], const in arg _ln[2635650]:int(64)[13], in arg _fn[2635652]:int(32)[95]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no parens" "resolved"
  {
    const-val call_tmp[1801872]:range(int(64),bounded,false)[1026875] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1865418]:range(int(64),bounded,false)[1026875] "temp"
    (1801877 call chpl_build_bounded_range[455180] 0 0 ret_tmp[1865418] _ln[2635650] _fn[2635652])
    (1865421 'move' call_tmp[1801872] ret_tmp[1865418])
    (1876186 '=' _retArg[1876184] call_tmp[1801872])
    (1876188 return _void[55])
  }
  type (c_ptr(uint(8)),int(64))[955269] val x0[955265]:c_ptr(uint(8))[937484] val x1[955267]:int(64)[13]
  type (syserr,int(32),int(32))[964681] val x0[964675]:syserr[223605] val x1[964677]:int(32)[95] val x2[964679]:int(32)[95]
  type 6*string[985112] const-ref x0[985100]:string[26] const-ref x1[985102]:string[26] const-ref x2[985104]:string[26] const-ref x3[985106]:string[26] const-ref x4[985108]:string[26] const-ref x5[985110]:string[26]
  type 6*string[985278] val x0[985266]:string[26] val x1[985268]:string[26] val x2[985270]:string[26] val x3[985272]:string[26] val x4[985274]:string[26] val x5[985276]:string[26]
  type 2*int(64)[1040117] val x0[1040113]:int(64)[13] val x1[1040115]:int(64)[13]
  type 1*byteIndex[1057142] wide-ref x0[1057140]:byteIndex[28173]
  type (range(int(64),bounded,false),int(64))[1084985] val x0[1084981]:range(int(64),bounded,false)[1026875] val x1[1084983]:int(64)[13]
  type (byteIndex,int(64))[1121294] const-ref x0[1121290]:byteIndex[28173] val x1[1121292]:int(64)[13]
  type (int(32),byteIndex,int(64))[1122203] val x0[1122197]:int(32)[95] const-ref x1[1122199]:byteIndex[28173] val x2[1122201]:int(64)[13]
  type (string,codepointIndex,string)[1158616] wide-ref x0[1158610]:string[26] wide-ref x1[1158612]:codepointIndex[28277] wide-ref x2[1158614]:string[26]
  type (string,codepointIndex,string,int(64))[1176581] wide-ref x0[1176573]:string[26] wide-ref x1[1176575]:codepointIndex[28277] wide-ref x2[1176577]:string[26] val x3[1176579]:int(64)[13]
  type 57*int(64)[1210546] val x0[1210432]:int(64)[13] val x1[1210434]:int(64)[13] val x2[1210436]:int(64)[13] val x3[1210438]:int(64)[13] val x4[1210440]:int(64)[13] val x5[1210442]:int(64)[13] val x6[1210444]:int(64)[13] val x7[1210446]:int(64)[13] val x8[1210448]:int(64)[13] val x9[1210450]:int(64)[13] val x10[1210452]:int(64)[13] val x11[1210454]:int(64)[13] val x12[1210456]:int(64)[13] val x13[1210458]:int(64)[13] val x14[1210460]:int(64)[13] val x15[1210462]:int(64)[13] val x16[1210464]:int(64)[13] val x17[1210466]:int(64)[13] val x18[1210468]:int(64)[13] val x19[1210470]:int(64)[13] val x20[1210472]:int(64)[13] val x21[1210474]:int(64)[13] val x22[1210476]:int(64)[13] val x23[1210478]:int(64)[13] val x24[1210480]:int(64)[13] val x25[1210482]:int(64)[13] val x26[1210484]:int(64)[13] val x27[1210486]:int(64)[13] val x28[1210488]:int(64)[13] val x29[1210490]:int(64)[13] val x30[1210492]:int(64)[13] val x31[1210494]:int(64)[13] val x32[1210496]:int(64)[13] val x33[1210498]:int(64)[13] val x34[1210500]:int(64)[13] val x35[1210502]:int(64)[13] val x36[1210504]:int(64)[13] val x37[1210506]:int(64)[13] val x38[1210508]:int(64)[13] val x39[1210510]:int(64)[13] val x40[1210512]:int(64)[13] val x41[1210514]:int(64)[13] val x42[1210516]:int(64)[13] val x43[1210518]:int(64)[13] val x44[1210520]:int(64)[13] val x45[1210522]:int(64)[13] val x46[1210524]:int(64)[13] val x47[1210526]:int(64)[13] val x48[1210528]:int(64)[13] val x49[1210530]:int(64)[13] val x50[1210532]:int(64)[13] val x51[1210534]:int(64)[13] val x52[1210536]:int(64)[13] val x53[1210538]:int(64)[13] val x54[1210540]:int(64)[13] val x55[1210542]:int(64)[13] val x56[1210544]:int(64)[13]
  type 1*range(int(64),bounded,false)[1244757] val x0[1244755]:range(int(64),bounded,false)[1026875]
  type 1*int(64)[1256586] val x0[1256584]:int(64)[13]
  type (bool,int(64))[1265193] val x0[1265189]:bool[10] val x1[1265191]:int(64)[13]
  type (1*int(64),1*int(64),int(64))[1417571] const-ref x0[1417565]:1*int(64)[1256586] const-ref x1[1417567]:1*int(64)[1256586] val x2[1417569]:int(64)[13]
  type (1*int(64),1*int(64),int(64))[1417749] val x0[1417743]:1*int(64)[1256586] val x1[1417745]:1*int(64)[1256586] val x2[1417747]:int(64)[13]
  type 2*[domain(1,int(64),false)] range(int(64),bounded,false)[1470611] val x0[1470607]:[domain(1,int(64),false)] range(int(64),bounded,false)[1391740] val x1[1470609]:[domain(1,int(64),false)] range(int(64),bounded,false)[1391740]
  type (BaseArr,unmanaged BaseDom?)[1486148] val x0[1486144]:__wide_BaseArr[2519185] val x1[1486146]:__wide_BaseDom[2519178]
  type (unmanaged BaseDom?,unmanaged BaseDist?)[1486942] val x0[1486938]:__wide_BaseDom[2519178] val x1[1486940]:__wide_BaseDist[2519171]
  type (int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1508993] val x0[1508985]:int(64)[13] val x1[1508987]:[domain(1,int(64),false)] range(int(64),bounded,false)[1391740] val x2[1508989]:[domain(1,int(64),false)] real(64)[1365901] val x3[1508991]:real(64)[16]
  type 2*[domain(1,int(64),false)] real(64)[1529018] val x0[1529014]:[domain(1,int(64),false)] real(64)[1365901] val x1[1529016]:[domain(1,int(64),false)] real(64)[1365901]
  type (int(64),[domain(1,int(64),false)] range(int(64),bounded,false),[domain(1,int(64),false)] real(64),real(64))[1538321] val x0[1538313]:int(64)[13] val x1[1538315]:[domain(1,int(64),false)] range(int(64),bounded,false)[1391740] val x2[1538317]:[domain(1,int(64),false)] real(64)[1365901] val x3[1538319]:real(64)[16]
  type (string,ioNewline)[1543605] wide-ref x0[1543601]:string[26] wide-ref x1[1543603]:ioNewline[238722]
}