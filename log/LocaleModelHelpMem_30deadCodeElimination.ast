AST dump for LocaleModelHelpMem after pass deadCodeElimination.
Module use list: ChapelStandard SysCTypes 

{
  function chpl__init_LocaleModelHelpMem[415964]() : void[4] "insert line file info" "module init" "resolved"
  {
    (524058 return _void[55])
  }
  function chpl_memhook_md_num[187727]() : int(16)[90] "extern" "local args" "no fn body" "private" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523945]:int(16)[90] "RVV" "temp"
    (523947 return ret[523945])
  }
  function chpl_here_alloc[187742](const in arg size[187739]:int(64)[13], const in arg md[187745]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "locale model alloc" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2099714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099716 'move' call_tmp[2099714](2099718 '<' size[187739] 0))
    if call_tmp[2099714]
    {
      (2099724 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2099727]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099729 'move' call_tmp[2099727](2099731 'cast' uint(64)[115] size[187739]))
    const-val call_tmp[690609]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (690612 'move' call_tmp[690609](187778 call chpl_memhook_md_num[187727]))
    const-val call_tmp[2157978]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157980 'move' call_tmp[2157978](2157982 '+' md[187745] call_tmp[690609]))
    const-val call_tmp[690619]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (690622 'move' call_tmp[690619](187781 call chpl_mem_alloc[187755] call_tmp[2099727] call_tmp[2157978]))
    (523959 return call_tmp[690619])
  }
  function chpl_here_alloc[1080401](const in arg size[1080403]:uint(64)[115], const in arg md[1080407]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[1080447]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080449 'move' call_tmp[1080447](1080452 call chpl_memhook_md_num[187727]))
    const-val call_tmp[2157988]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157990 'move' call_tmp[2157988](2157992 '+' md[1080407] call_tmp[1080447]))
    const-val call_tmp[1080461]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1080463 'move' call_tmp[1080461](1080466 call chpl_mem_alloc[1080419] size[1080403] call_tmp[2157988]))
    (1080474 return call_tmp[1080461])
  }
  function chpl_here_calloc[1238430](const in arg size[1238432]:uint(64)[115], const in arg number[1238434]:int(64)[13], const in arg md[1238438]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "llvm return noalias" "resolved"
  {
    const-val call_tmp[2099921]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099923 'move' call_tmp[2099921](2099925 '<' number[1238434] 0))
    if call_tmp[2099921]
    {
      (2099931 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2099934]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099936 'move' call_tmp[2099934](2099938 'cast' uint(64)[115] number[1238434]))
    const-val call_tmp[1238494]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238496 'move' call_tmp[1238494](1238499 call chpl_memhook_md_num[187727]))
    const-val call_tmp[2157998]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2158000 'move' call_tmp[2157998](2158002 '+' md[1238438] call_tmp[1238494]))
    const-val call_tmp[1238508]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (1238510 'move' call_tmp[1238508](1238513 call chpl_mem_calloc[1238452] call_tmp[2099934] size[1238432] call_tmp[2157998]))
    (1238522 return call_tmp[1238508])
  }
  function chpl_here_realloc[970012](const in arg ptr[970014]:c_void_ptr[149], const in arg size[970016]:int(64)[13], const in arg md[970020]:int(16)[90]) : c_void_ptr[149] "allocator" "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2099783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099785 'move' call_tmp[2099783](2099787 '<' size[970016] 0))
    if call_tmp[2099783]
    {
      (2099793 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2099796]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099798 'move' call_tmp[2099796](2099800 'cast' uint(64)[115] size[970016]))
    const-val call_tmp[970062]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (970064 'move' call_tmp[970062](970067 call chpl_memhook_md_num[187727]))
    const-val call_tmp[2157968]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2157970 'move' call_tmp[2157968](2157972 '+' md[970020] call_tmp[970062]))
    const-val call_tmp[970076]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (970078 'move' call_tmp[970076](970081 call chpl_mem_realloc[970032] ptr[970014] call_tmp[2099796] call_tmp[2157968]))
    (970090 return call_tmp[970076])
  }
  function chpl_here_good_alloc_size[949610](const in arg min_size[949612]:int(64)[13]) : int(64)[13] "always propagate line file info" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val call_tmp[2099737]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099739 'move' call_tmp[2099737](2099741 '<' min_size[949612] 0))
    if call_tmp[2099737]
    {
      (2099747 call safeCastCheckHalt[210127] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2099750]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2099752 'move' call_tmp[2099750](2099754 'cast' uint(64)[115] min_size[949612]))
    const-val call_tmp[949649]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (949651 'move' call_tmp[949649](949654 call chpl_mem_good_alloc_size[949625] call_tmp[2099750]))
    const-val call_tmp[2164075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2164077 'move' call_tmp[2164075](2164079 '>' call_tmp[949649] 9223372036854775807))
    if call_tmp[2164075]
    {
      (2164085 call safeCastCheckHalt[210127] "casting uint(64) with a value greater than the maximum of int(64) to int(64)")
    }
    const-val call_tmp[2164088]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2164090 'move' call_tmp[2164088](2164092 'cast' int(64)[13] call_tmp[949649]))
    (949683 return call_tmp[2164088])
  }
  function chpl_here_free[188081](const in arg ptr[188078]:c_void_ptr[149]) : void[4] "always propagate line file info" "locale model free" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524054]:void[4] "dead after last mention" "RVV" "temp"
    (188100 call chpl_mem_free[188090] ptr[188078])
    (524056 return ret[524054])
  }
  function chpl_mem_alloc[187755](const in arg size[187752]:uint(64)[115], const in arg md[187758]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523951]:c_void_ptr[149] "RVV" "temp"
    (523953 return ret[523951])
  }
  function chpl_mem_free[188090](const in arg ptr[188087]:c_void_ptr[149]) : void[4] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[524048]:void[4] "RVV" "temp"
    (524050 return ret[524048])
  }
  function chpl_mem_good_alloc_size[949625](const in arg min_size[949629]:uint(64)[115]) : uint(64)[115] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[949632]:uint(64)[115] "RVV" "temp"
    (949634 return ret[949632])
  }
  function chpl_mem_realloc[970032](const in arg ptr[970034]:c_void_ptr[149], const in arg size[970038]:uint(64)[115], const in arg md[970042]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[970045]:c_void_ptr[149] "RVV" "temp"
    (970047 return ret[970045])
  }
  function chpl_mem_alloc[1080419](const in arg size[1080423]:uint(64)[115], const in arg md[1080427]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1080430]:c_void_ptr[149] "RVV" "temp"
    (1080432 return ret[1080430])
  }
  function chpl_mem_calloc[1238452](const in arg number[1238456]:uint(64)[115], const in arg size[1238460]:uint(64)[115], const in arg md[1238464]:int(16)[90]) : c_void_ptr[149] "extern" "insert line file info" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[1238467]:c_void_ptr[149] "RVV" "temp"
    (1238469 return ret[1238467])
  }
}