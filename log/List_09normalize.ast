AST dump for List after pass normalize.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416193]() : void[4] "insert line file info" "module init"
  {
    (549844 'init var' _initialCapacity[298255] 8)
    (298258 'end of statement')
    (549846 'init var' _initialArrayCapacity[298260] 16)
    (298263 'end of statement')
    (549848 'init var' _sanityChecks[298265] 0)
    (298268 'end of statement')
    (549854 'move' _lockType[298297](549853 call chpl_LocalSpinlock[187432]))
    (490945 'end of statement')
    (539648 return _void[55])
  }
  const _initialCapacity[298255] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298260] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298265] "dead at end of block" "no doc" "param" "private"
  function _sanity[298275](arg expr[298272]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744151] "expr temp" "maybe param" "maybe type" "temp"
    (744154 'move' call_tmp[744151](298283 call _cond_test _sanityChecks[298265]))
    if call_tmp[744151]
    {
      (298281 call assert expr[298272])
    }
    (539090 return _void[55])
  }
  unknown _lockType[298297] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187432]
  function _LockWrapper[298338].lock[298311](arg _mt[298342]:_MT[238], arg this[298340]:_LockWrapper[298338]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744158] "expr temp" "maybe param" "maybe type" "temp"
    (744161 'move' call_tmp[744158](364940 call lock$ _mt[243] this[298340]))
    (298318 call(298314 call (partial) lock _mt[243] call_tmp[744158]))
    (539092 return _void[55])
  }
  function _LockWrapper[298338].unlock[298325](arg _mt[298346]:_MT[238], arg this[298344]:_LockWrapper[298338]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744167] "expr temp" "maybe param" "maybe type" "temp"
    (744170 'move' call_tmp[744167](364945 call lock$ _mt[243] this[298344]))
    (298332 call(298328 call (partial) unlock _mt[243] call_tmp[744167]))
    (539094 return _void[55])
  }
  type _LockWrapper[298338] val super[355812]:object[22] "super class" unknown lock$[298305](298301 'new'(298304 call _lockType[298297]))
  type _LockWrapper[405235](?)
  function _checkType[298353](arg eltType[298351]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744174] "expr temp" "maybe param" "maybe type" "temp"
    (744177 'move' call_tmp[744174](298358 call isGenericType eltType[298351]))
    unknown call_tmp[744179] "expr temp" "maybe param" "maybe type" "temp"
    (744182 'move' call_tmp[744179](298431 call _cond_test call_tmp[744174]))
    if call_tmp[744179]
    {
      unknown call_tmp[744184] "expr temp" "maybe param" "maybe type" "temp"
      (744187 'move' call_tmp[744184](298379 call _cast string[26] eltType[298351]))
      unknown call_tmp[744189] "expr temp" "maybe param" "maybe type" "temp"
      (744192 'move' call_tmp[744189](298381 call + "creating a list with element type " call_tmp[744184]))
      (298384 call compilerWarning call_tmp[744189])
      (490948 'end of statement')
      unknown tmp[434834] "maybe param" "temp"
      (434845 'move' tmp[434834](298390 call isClassType eltType[298351]))
      unknown call_tmp[744194] "expr temp" "maybe param" "maybe type" "temp"
      (744197 'move' call_tmp[744194](434847 call _cond_invalid tmp[434834]))
      if call_tmp[744194]
      {
        (434850 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580696] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580697] "maybe param" "temp"
      unknown call_tmp[744199] "expr temp" "maybe param" "maybe type" "temp"
      (744202 'move' call_tmp[744199](434835 call isTrue tmp[434834]))
      (580702 'move' tmp[580697](580700 call _cond_test call_tmp[744199]))
      if tmp[580697]
      {
        unknown tmp[580704] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744204] "expr temp" "maybe param" "maybe type" "temp"
        (744207 'move' call_tmp[744204](298393 'to borrowed class from unknown' eltType[298351]))
        unknown call_tmp[744209] "expr temp" "maybe param" "maybe type" "temp"
        (744212 'move' call_tmp[744209](298395 call isGenericType call_tmp[744204]))
        unknown call_tmp[744214] "expr temp" "maybe param" "maybe type" "temp"
        (744217 'move' call_tmp[744214](298396 call ! call_tmp[744209]))
        (580706 'move' tmp[580704](434838 call isTrue call_tmp[744214]))
        (580711 'move' tmp[580696](580708 '_paramFoldLogical' tmp[580697] tmp[580704]))
      }
      {
        (580716 'move' tmp[580696](580713 '_paramFoldLogical' tmp[580697] 0))
      }
      unknown call_tmp[744219] "expr temp" "maybe param" "maybe type" "temp"
      (744222 'move' call_tmp[744219](298406 call _cond_test tmp[580696]))
      if call_tmp[744219]
      {
        (298403 call compilerWarning "which now means class type with generic management")
      }
      (298429 call compilerError "list element type cannot currently be generic")
    }
    (539096 return _void[55])
  }
  function _dummyFieldType[298442](arg t[298440]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[539100] "RVV" "temp" "type variable"
    unknown call_tmp[744224] "expr temp" "maybe param" "maybe type" "temp"
    (744227 'move' call_tmp[744224](298447 call isBorrowedClass t[298440]))
    unknown call_tmp[744229] "expr temp" "maybe param" "maybe type" "temp"
    (744232 'move' call_tmp[744229](298457 call _cond_test call_tmp[744224]))
    if call_tmp[744229]
    {
      unknown call_tmp[744234] "expr temp" "maybe param" "maybe type" "temp"
      (744237 'move' call_tmp[744234](298449 'to nilable class from type' t[298440]))
      (539105 'move' ret[539100](539104 'deref' call_tmp[744234]))
      gotoReturn _end__dummyFieldType[539098] _end__dummyFieldType[539098]
    }
    {
      (539110 'move' ret[539100](539109 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[539098] _end__dummyFieldType[539098]
    }
    label _end__dummyFieldType[539098]
    (539102 return ret[539100])
  }
  function list[304220](?).init[298528](arg _mt[304224]:_MT[238], ref arg this[304222]:list[304220](?), arg eltType[298526]:_any[178](?), param arg parSafe[298531] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298537 call _checkType eltType[298526])
    (490954 'end of statement')
    unknown tmp[467116] "temp" "type variable"
    (467118 'move' tmp[467116] eltType[298526])
    (467120 'init field' this[304222] c"eltType" tmp[467116])
    (490955 'end of statement')
    unknown tmp[467124] "param" "temp"
    (467126 'init var' tmp[467124] parSafe[298531])
    (467128 'init field' this[304222] c"parSafe" tmp[467124])
    (490956 'end of statement')
    unknown tmp[467133] "temp"
    (467135 'init var' tmp[467133] 0)
    (467137 '.=' this[304222] c"_size" tmp[467133])
    (490957 'end of statement')
    unknown tmp[467149] "temp"
    unknown tmp[580723] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580724] "maybe param" "temp"
    unknown call_tmp[744239] "expr temp" "maybe param" "maybe type" "temp"
    (744242 'move' call_tmp[744239](467157 '.v' this[304222] c"parSafe"))
    (580729 'move' tmp[580724](580727 call _cond_test call_tmp[744239]))
    if tmp[580724]
    {
      unknown tmp[580731] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580733 'move' tmp[580731](748140 'new' _LockWrapper[405235](?)))
      (580738 'move' tmp[580723](580735 '_paramFoldLogical' tmp[580724] tmp[580731]))
    }
    {
      (580743 'move' tmp[580723](580740 '_paramFoldLogical' tmp[580724] none[57]))
    }
    (467151 'init var' tmp[467149] tmp[580723])
    (467153 '.=' this[304222] c"_lock$" tmp[467149])
    (490958 'end of statement')
    unknown call_tmp[744244] "expr temp" "maybe param" "maybe type" "temp"
    (744247 'move' call_tmp[744244](467174 '.v' this[304222] c"eltType"))
    unknown call_tmp[744249] "expr temp" "maybe param" "maybe type" "temp"
    (744252 'move' call_tmp[744249](467166 call _ddata[11696](?) call_tmp[744244]))
    unknown call_tmp[744254] "maybe param" "maybe type" "temp"
    (744257 'move' call_tmp[744254](467164 call _ddata[11696](?) call_tmp[744249]))
    unknown tmp[467161] "temp"
    (467168 'init var' tmp[467161] nil[44] call_tmp[744254])
    (467170 'init field' this[304222] c"_arrays" tmp[467161])
    (490959 'end of statement')
    unknown tmp[467178] "temp"
    (467180 'init var' tmp[467178] 0)
    (467182 '.=' this[304222] c"_arrayCapacity" tmp[467178])
    (490960 'end of statement')
    unknown tmp[467187] "temp"
    (467189 'init var' tmp[467187] 0)
    (467191 '.=' this[304222] c"_totalCapacity" tmp[467187])
    (490961 'end of statement')
    unknown tmp[467195] "temp"
    unknown call_tmp[744259] "expr temp" "maybe param" "maybe type" "temp"
    (744262 'move' call_tmp[744259](467208 '.v' this[304222] c"eltType"))
    unknown call_tmp[744264] "expr temp" "maybe param" "maybe type" "temp"
    (744267 'move' call_tmp[744264](467198 call _dummyFieldType call_tmp[744259]))
    (467200 'default init var' tmp[467195] call_tmp[744264])
    (467204 '.=' this[304222] c"_dummyFieldToForceBorrowChecking" tmp[467195])
    (490962 'end of statement')
    (298570 call(298566 call (partial) _firstTimeInitializeArrays _mt[243] this[304222]))
    (539114 return _void[55])
  }
  function list[304220](?).init[298584](arg _mt[304228]:_MT[238], ref arg this[304226]:list[304220](?), arg other[298581]:list[304220](?), param arg parSafe[298587] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744271] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744274 'move' call_tmp[744271](298592 'typeof' this[304226]))
    unknown call_tmp[744278] "expr temp" "maybe param" "maybe type" "temp"
    (744281 'move' call_tmp[744278](298593 call eltType _mt[243] call_tmp[744271]))
    unknown call_tmp[744283] "expr temp" "maybe param" "maybe type" "temp"
    (744286 'move' call_tmp[744283](298597 call isCopyableType call_tmp[744278]))
    unknown call_tmp[744288] "expr temp" "maybe param" "maybe type" "temp"
    (744291 'move' call_tmp[744288](298598 call ! call_tmp[744283]))
    unknown call_tmp[744293] "expr temp" "maybe param" "maybe type" "temp"
    (744296 'move' call_tmp[744293](298640 call _cond_test call_tmp[744288]))
    if call_tmp[744293]
    {
      unknown call_tmp[744298] "expr temp" "maybe param" "maybe type" "temp"
      (744301 'move' call_tmp[744298](298635 call + "Cannot copy list with element type that " "cannot be copied"))
      (298638 call compilerError call_tmp[744298])
    }
    unknown tmp[467221] "temp" "type variable"
    (467223 'move' tmp[467221](467217 'query' other[298581] 1))
    (467225 'init field' this[304226] c"eltType" tmp[467221])
    (490965 'end of statement')
    unknown tmp[467229] "param" "temp"
    (467231 'init var' tmp[467229] parSafe[298587])
    (467233 'init field' this[304226] c"parSafe" tmp[467229])
    (490966 'end of statement')
    unknown tmp[467238] "temp"
    (467240 'init var' tmp[467238] 0)
    (467242 '.=' this[304226] c"_size" tmp[467238])
    (490967 'end of statement')
    unknown tmp[467254] "temp"
    unknown tmp[580750] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580751] "maybe param" "temp"
    unknown call_tmp[744303] "expr temp" "maybe param" "maybe type" "temp"
    (744306 'move' call_tmp[744303](467262 '.v' this[304226] c"parSafe"))
    (580756 'move' tmp[580751](580754 call _cond_test call_tmp[744303]))
    if tmp[580751]
    {
      unknown tmp[580758] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580760 'move' tmp[580758](748141 'new' _LockWrapper[405235](?)))
      (580765 'move' tmp[580750](580762 '_paramFoldLogical' tmp[580751] tmp[580758]))
    }
    {
      (580770 'move' tmp[580750](580767 '_paramFoldLogical' tmp[580751] none[57]))
    }
    (467256 'init var' tmp[467254] tmp[580750])
    (467258 '.=' this[304226] c"_lock$" tmp[467254])
    (490968 'end of statement')
    unknown call_tmp[744308] "expr temp" "maybe param" "maybe type" "temp"
    (744311 'move' call_tmp[744308](467279 '.v' this[304226] c"eltType"))
    unknown call_tmp[744313] "expr temp" "maybe param" "maybe type" "temp"
    (744316 'move' call_tmp[744313](467271 call _ddata[11696](?) call_tmp[744308]))
    unknown call_tmp[744318] "maybe param" "maybe type" "temp"
    (744321 'move' call_tmp[744318](467269 call _ddata[11696](?) call_tmp[744313]))
    unknown tmp[467266] "temp"
    (467273 'init var' tmp[467266] nil[44] call_tmp[744318])
    (467275 'init field' this[304226] c"_arrays" tmp[467266])
    (490969 'end of statement')
    unknown tmp[467283] "temp"
    (467285 'init var' tmp[467283] 0)
    (467287 '.=' this[304226] c"_arrayCapacity" tmp[467283])
    (490970 'end of statement')
    unknown tmp[467292] "temp"
    (467294 'init var' tmp[467292] 0)
    (467296 '.=' this[304226] c"_totalCapacity" tmp[467292])
    (490971 'end of statement')
    unknown tmp[467300] "temp"
    unknown call_tmp[744323] "expr temp" "maybe param" "maybe type" "temp"
    (744326 'move' call_tmp[744323](467311 '.v' this[304226] c"eltType"))
    unknown call_tmp[744328] "expr temp" "maybe param" "maybe type" "temp"
    (744331 'move' call_tmp[744328](467303 call _dummyFieldType call_tmp[744323]))
    (467305 'default init var' tmp[467300] call_tmp[744328])
    (467307 '.=' this[304226] c"_dummyFieldToForceBorrowChecking" tmp[467300])
    (490972 'end of statement')
    (298672 call(405252 call (partial) _commonInitFromIterable _mt[243] this[304226]) other[298581])
    (539116 return _void[55])
  }
  function list[304220](?).init[298688](arg _mt[304232]:_MT[238], ref arg this[304230]:list[304220](?), arg other[298685]:_array[133594](?), param arg parSafe[298691] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744337] "expr temp" "maybe param" "maybe type" "temp"
    (744340 'move' call_tmp[744337](467316 call eltType _mt[243] other[298685]))
    (298697 call _checkType call_tmp[744337])
    (490974 'end of statement')
    unknown call_tmp[744344] "expr temp" "maybe param" "maybe type" "temp"
    (744347 'move' call_tmp[744344](467320 call eltType _mt[243] other[298685]))
    unknown call_tmp[744349] "expr temp" "maybe param" "maybe type" "temp"
    (744352 'move' call_tmp[744349](298703 call isCopyableType call_tmp[744344]))
    unknown call_tmp[744354] "expr temp" "maybe param" "maybe type" "temp"
    (744357 'move' call_tmp[744354](298704 call ! call_tmp[744349]))
    unknown call_tmp[744359] "expr temp" "maybe param" "maybe type" "temp"
    (744362 'move' call_tmp[744359](298746 call _cond_test call_tmp[744354]))
    if call_tmp[744359]
    {
      unknown call_tmp[744364] "expr temp" "maybe param" "maybe type" "temp"
      (744367 'move' call_tmp[744364](298741 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298744 call compilerError call_tmp[744364])
    }
    unknown tmp[467328] "temp" "type variable"
    (467330 'move' tmp[467328](467324 call eltType _mt[243] other[298685]))
    (467332 'init field' this[304230] c"eltType" tmp[467328])
    (490976 'end of statement')
    unknown tmp[467336] "param" "temp"
    (467338 'init var' tmp[467336] parSafe[298691])
    (467340 'init field' this[304230] c"parSafe" tmp[467336])
    (490977 'end of statement')
    unknown tmp[467345] "temp"
    (467347 'init var' tmp[467345] 0)
    (467349 '.=' this[304230] c"_size" tmp[467345])
    (490978 'end of statement')
    unknown tmp[467361] "temp"
    unknown tmp[580777] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580778] "maybe param" "temp"
    unknown call_tmp[744371] "expr temp" "maybe param" "maybe type" "temp"
    (744374 'move' call_tmp[744371](467369 '.v' this[304230] c"parSafe"))
    (580783 'move' tmp[580778](580781 call _cond_test call_tmp[744371]))
    if tmp[580778]
    {
      unknown tmp[580785] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580787 'move' tmp[580785](748142 'new' _LockWrapper[405235](?)))
      (580792 'move' tmp[580777](580789 '_paramFoldLogical' tmp[580778] tmp[580785]))
    }
    {
      (580797 'move' tmp[580777](580794 '_paramFoldLogical' tmp[580778] none[57]))
    }
    (467363 'init var' tmp[467361] tmp[580777])
    (467365 '.=' this[304230] c"_lock$" tmp[467361])
    (490979 'end of statement')
    unknown call_tmp[744376] "expr temp" "maybe param" "maybe type" "temp"
    (744379 'move' call_tmp[744376](467386 '.v' this[304230] c"eltType"))
    unknown call_tmp[744381] "expr temp" "maybe param" "maybe type" "temp"
    (744384 'move' call_tmp[744381](467378 call _ddata[11696](?) call_tmp[744376]))
    unknown call_tmp[744386] "maybe param" "maybe type" "temp"
    (744389 'move' call_tmp[744386](467376 call _ddata[11696](?) call_tmp[744381]))
    unknown tmp[467373] "temp"
    (467380 'init var' tmp[467373] nil[44] call_tmp[744386])
    (467382 'init field' this[304230] c"_arrays" tmp[467373])
    (490980 'end of statement')
    unknown tmp[467390] "temp"
    (467392 'init var' tmp[467390] 0)
    (467394 '.=' this[304230] c"_arrayCapacity" tmp[467390])
    (490981 'end of statement')
    unknown tmp[467399] "temp"
    (467401 'init var' tmp[467399] 0)
    (467403 '.=' this[304230] c"_totalCapacity" tmp[467399])
    (490982 'end of statement')
    unknown tmp[467407] "temp"
    unknown call_tmp[744391] "expr temp" "maybe param" "maybe type" "temp"
    (744394 'move' call_tmp[744391](467418 '.v' this[304230] c"eltType"))
    unknown call_tmp[744396] "expr temp" "maybe param" "maybe type" "temp"
    (744399 'move' call_tmp[744396](467410 call _dummyFieldType call_tmp[744391]))
    (467412 'default init var' tmp[467407] call_tmp[744396])
    (467414 '.=' this[304230] c"_dummyFieldToForceBorrowChecking" tmp[467407])
    (490983 'end of statement')
    (298777 call(405261 call (partial) _commonInitFromIterable _mt[243] this[304230]) other[298685])
    (539118 return _void[55])
  }
  function list[304220](?).init[298791](arg _mt[304236]:_MT[238], ref arg this[304234]:list[304220](?), arg other[298788]:range[64319](?), param arg parSafe[298794] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744403] "expr temp" "maybe param" "maybe type" "temp"
    (744406 'move' call_tmp[744403](467427 'query' other[298788] 1))
    (298800 call _checkType call_tmp[744403])
    (490985 'end of statement')
    unknown tmp[467434] "temp" "type variable"
    (467436 'move' tmp[467434](467430 'query' other[298788] 1))
    (467438 'init field' this[304234] c"eltType" tmp[467434])
    (490986 'end of statement')
    unknown tmp[467442] "param" "temp"
    (467444 'init var' tmp[467442] parSafe[298794])
    (467446 'init field' this[304234] c"parSafe" tmp[467442])
    (490987 'end of statement')
    unknown call_tmp[744408] "expr temp" "maybe param" "maybe type" "temp"
    (744411 'move' call_tmp[744408](298822 call isBoundedRange other[298788]))
    unknown call_tmp[744413] "expr temp" "maybe param" "maybe type" "temp"
    (744416 'move' call_tmp[744413](298823 call ! call_tmp[744408]))
    unknown call_tmp[744418] "expr temp" "maybe param" "maybe type" "temp"
    (744421 'move' call_tmp[744418](298895 call _cond_test call_tmp[744413]))
    if call_tmp[744418]
    {
      unknown call_tmp[744423] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744426 'move' call_tmp[744423](298826 'typeof' this[304234]))
      unknown call_tmp[744428] "maybe param" "maybe type" "temp"
      (744431 'move' call_tmp[744428](298828 call _cast string[26] call_tmp[744423]))
      unknown e[298830] "dead at end of block" "param"
      (549856 'init var' e[298830] call_tmp[744428])
      (298833 'end of statement')
      unknown call_tmp[744433] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744436 'move' call_tmp[744433](298836 'typeof' other[298788]))
      unknown call_tmp[744438] "maybe param" "maybe type" "temp"
      (744441 'move' call_tmp[744438](298838 call _cast string[26] call_tmp[744433]))
      unknown f[298840] "dead at end of block" "param"
      (549858 'init var' f[298840] call_tmp[744438])
      (298843 'end of statement')
      unknown call_tmp[744443] "expr temp" "maybe param" "maybe type" "temp"
      (744446 'move' call_tmp[744443](298862 call + "Cannot init " e[298830]))
      unknown call_tmp[744448] "expr temp" "maybe param" "maybe type" "temp"
      (744451 'move' call_tmp[744448](298881 call + call_tmp[744443] " from unbounded "))
      unknown call_tmp[744453] "maybe param" "maybe type" "temp"
      (744456 'move' call_tmp[744453](298884 call + call_tmp[744448] f[298840]))
      unknown msg[298886] "dead at end of block" "param"
      (549860 'init var' msg[298886] call_tmp[744453])
      (298889 'end of statement')
      (298893 call compilerError msg[298886])
    }
    unknown tmp[467451] "temp"
    (467453 'init var' tmp[467451] 0)
    (467455 '.=' this[304234] c"_size" tmp[467451])
    (490989 'end of statement')
    unknown tmp[467467] "temp"
    unknown tmp[580804] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580805] "maybe param" "temp"
    unknown call_tmp[744458] "expr temp" "maybe param" "maybe type" "temp"
    (744461 'move' call_tmp[744458](467475 '.v' this[304234] c"parSafe"))
    (580810 'move' tmp[580805](580808 call _cond_test call_tmp[744458]))
    if tmp[580805]
    {
      unknown tmp[580812] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580814 'move' tmp[580812](748143 'new' _LockWrapper[405235](?)))
      (580819 'move' tmp[580804](580816 '_paramFoldLogical' tmp[580805] tmp[580812]))
    }
    {
      (580824 'move' tmp[580804](580821 '_paramFoldLogical' tmp[580805] none[57]))
    }
    (467469 'init var' tmp[467467] tmp[580804])
    (467471 '.=' this[304234] c"_lock$" tmp[467467])
    (490990 'end of statement')
    unknown call_tmp[744463] "expr temp" "maybe param" "maybe type" "temp"
    (744466 'move' call_tmp[744463](467492 '.v' this[304234] c"eltType"))
    unknown call_tmp[744468] "expr temp" "maybe param" "maybe type" "temp"
    (744471 'move' call_tmp[744468](467484 call _ddata[11696](?) call_tmp[744463]))
    unknown call_tmp[744473] "maybe param" "maybe type" "temp"
    (744476 'move' call_tmp[744473](467482 call _ddata[11696](?) call_tmp[744468]))
    unknown tmp[467479] "temp"
    (467486 'init var' tmp[467479] nil[44] call_tmp[744473])
    (467488 'init field' this[304234] c"_arrays" tmp[467479])
    (490991 'end of statement')
    unknown tmp[467496] "temp"
    (467498 'init var' tmp[467496] 0)
    (467500 '.=' this[304234] c"_arrayCapacity" tmp[467496])
    (490992 'end of statement')
    unknown tmp[467505] "temp"
    (467507 'init var' tmp[467505] 0)
    (467509 '.=' this[304234] c"_totalCapacity" tmp[467505])
    (490993 'end of statement')
    unknown tmp[467513] "temp"
    unknown call_tmp[744478] "expr temp" "maybe param" "maybe type" "temp"
    (744481 'move' call_tmp[744478](467524 '.v' this[304234] c"eltType"))
    unknown call_tmp[744483] "expr temp" "maybe param" "maybe type" "temp"
    (744486 'move' call_tmp[744483](467516 call _dummyFieldType call_tmp[744478]))
    (467518 'default init var' tmp[467513] call_tmp[744483])
    (467520 '.=' this[304234] c"_dummyFieldToForceBorrowChecking" tmp[467513])
    (490994 'end of statement')
    (298909 call(405276 call (partial) _commonInitFromIterable _mt[243] this[304234]) other[298788])
    (539120 return _void[55])
  }
  function list[304220](?).init=[298928](arg _mt[304240]:_MT[238], ref arg this[304238]:list[304220](?), arg other[298925]:list[304220](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744490] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744493 'move' call_tmp[744490](298932 'typeof' this[304238]))
    unknown call_tmp[744497] "expr temp" "maybe param" "maybe type" "temp"
    (744500 'move' call_tmp[744497](298933 call eltType _mt[243] call_tmp[744490]))
    unknown call_tmp[744502] "expr temp" "maybe param" "maybe type" "temp"
    (744505 'move' call_tmp[744502](298937 call isCopyableType call_tmp[744497]))
    unknown call_tmp[744507] "expr temp" "maybe param" "maybe type" "temp"
    (744510 'move' call_tmp[744507](298938 call ! call_tmp[744502]))
    unknown call_tmp[744512] "expr temp" "maybe param" "maybe type" "temp"
    (744515 'move' call_tmp[744512](298948 call _cond_test call_tmp[744507]))
    if call_tmp[744512]
    {
      unknown call_tmp[744517] "expr temp" "maybe param" "maybe type" "temp"
      (744520 'move' call_tmp[744517](298943 call + "Cannot copy list with element type that " "cannot be copied"))
      (298946 call compilerError call_tmp[744517])
    }
    unknown tmp[467548] "temp" "type variable"
    unknown call_tmp[744522] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744525 'move' call_tmp[744522](298959 'typeof' this[304238]))
    (467550 'move' tmp[467548](298960 call eltType _mt[243] call_tmp[744522]))
    (467552 'init field' this[304238] c"eltType" tmp[467548])
    (490997 'end of statement')
    unknown call_tmp[744529] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744532 'move' call_tmp[744529](298971 'typeof' this[304238]))
    unknown call_tmp[744536] "maybe param" "maybe type" "temp"
    (744539 'move' call_tmp[744536](298972 call parSafe _mt[243] call_tmp[744529]))
    unknown tmp[467556] "param" "temp"
    (467558 'init var' tmp[467556] call_tmp[744536])
    (467560 'init field' this[304238] c"parSafe" tmp[467556])
    (490998 'end of statement')
    unknown tmp[467565] "temp"
    (467567 'init var' tmp[467565] 0)
    (467569 '.=' this[304238] c"_size" tmp[467565])
    (490999 'end of statement')
    unknown tmp[467581] "temp"
    unknown tmp[580831] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580832] "maybe param" "temp"
    unknown call_tmp[744541] "expr temp" "maybe param" "maybe type" "temp"
    (744544 'move' call_tmp[744541](467589 '.v' this[304238] c"parSafe"))
    (580837 'move' tmp[580832](580835 call _cond_test call_tmp[744541]))
    if tmp[580832]
    {
      unknown tmp[580839] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580841 'move' tmp[580839](748144 'new' _LockWrapper[405235](?)))
      (580846 'move' tmp[580831](580843 '_paramFoldLogical' tmp[580832] tmp[580839]))
    }
    {
      (580851 'move' tmp[580831](580848 '_paramFoldLogical' tmp[580832] none[57]))
    }
    (467583 'init var' tmp[467581] tmp[580831])
    (467585 '.=' this[304238] c"_lock$" tmp[467581])
    (491000 'end of statement')
    unknown call_tmp[744546] "expr temp" "maybe param" "maybe type" "temp"
    (744549 'move' call_tmp[744546](467606 '.v' this[304238] c"eltType"))
    unknown call_tmp[744551] "expr temp" "maybe param" "maybe type" "temp"
    (744554 'move' call_tmp[744551](467598 call _ddata[11696](?) call_tmp[744546]))
    unknown call_tmp[744556] "maybe param" "maybe type" "temp"
    (744559 'move' call_tmp[744556](467596 call _ddata[11696](?) call_tmp[744551]))
    unknown tmp[467593] "temp"
    (467600 'init var' tmp[467593] nil[44] call_tmp[744556])
    (467602 'init field' this[304238] c"_arrays" tmp[467593])
    (491001 'end of statement')
    unknown tmp[467610] "temp"
    (467612 'init var' tmp[467610] 0)
    (467614 '.=' this[304238] c"_arrayCapacity" tmp[467610])
    (491002 'end of statement')
    unknown tmp[467619] "temp"
    (467621 'init var' tmp[467619] 0)
    (467623 '.=' this[304238] c"_totalCapacity" tmp[467619])
    (491003 'end of statement')
    unknown tmp[467627] "temp"
    unknown call_tmp[744561] "expr temp" "maybe param" "maybe type" "temp"
    (744564 'move' call_tmp[744561](467638 '.v' this[304238] c"eltType"))
    unknown call_tmp[744566] "expr temp" "maybe param" "maybe type" "temp"
    (744569 'move' call_tmp[744566](467630 call _dummyFieldType call_tmp[744561]))
    (467632 'default init var' tmp[467627] call_tmp[744566])
    (467634 '.=' this[304238] c"_dummyFieldToForceBorrowChecking" tmp[467627])
    (491004 'end of statement')
    (298988 call(405286 call (partial) _commonInitFromIterable _mt[243] this[304238]) other[298925])
    (539122 return _void[55])
  }
  where {
    unknown call_tmp[744573] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744576 'move' call_tmp[744573](467535 'typeof' this[304238]))
    unknown call_tmp[744580] "expr temp" "maybe param" "maybe type" "temp"
    (744583 'move' call_tmp[744580](467534 call eltType _mt[243] call_tmp[744573]))
    unknown call_tmp[744585] "expr temp" "maybe param" "maybe type" "temp"
    (744588 'move' call_tmp[744585](467530 'query' other[298925] 1))
    unknown call_tmp[744590] "expr temp" "maybe param" "maybe type" "temp"
    (744593 'move' call_tmp[744590](467538 call == call_tmp[744580] call_tmp[744585]))
    (467542 call & 1 call_tmp[744590])
  }
  function list[304220](?).init=[299007](arg _mt[304244]:_MT[238], ref arg this[304242]:list[304220](?), arg other[299004]:_array[133594](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744595] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744598 'move' call_tmp[744595](299011 'typeof' this[304242]))
    unknown call_tmp[744602] "expr temp" "maybe param" "maybe type" "temp"
    (744605 'move' call_tmp[744602](299012 call eltType _mt[243] call_tmp[744595]))
    unknown call_tmp[744607] "expr temp" "maybe param" "maybe type" "temp"
    (744610 'move' call_tmp[744607](299016 call isCopyableType call_tmp[744602]))
    unknown call_tmp[744612] "expr temp" "maybe param" "maybe type" "temp"
    (744615 'move' call_tmp[744612](299017 call ! call_tmp[744607]))
    unknown call_tmp[744617] "expr temp" "maybe param" "maybe type" "temp"
    (744620 'move' call_tmp[744617](299059 call _cond_test call_tmp[744612]))
    if call_tmp[744617]
    {
      unknown call_tmp[744622] "expr temp" "maybe param" "maybe type" "temp"
      (744625 'move' call_tmp[744622](299054 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (299057 call compilerError call_tmp[744622])
    }
    unknown tmp[467653] "temp" "type variable"
    unknown call_tmp[744627] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744630 'move' call_tmp[744627](299070 'typeof' this[304242]))
    (467655 'move' tmp[467653](299071 call eltType _mt[243] call_tmp[744627]))
    (467657 'init field' this[304242] c"eltType" tmp[467653])
    (491007 'end of statement')
    unknown call_tmp[744634] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744637 'move' call_tmp[744634](299082 'typeof' this[304242]))
    unknown call_tmp[744641] "maybe param" "maybe type" "temp"
    (744644 'move' call_tmp[744641](299083 call parSafe _mt[243] call_tmp[744634]))
    unknown tmp[467661] "param" "temp"
    (467663 'init var' tmp[467661] call_tmp[744641])
    (467665 'init field' this[304242] c"parSafe" tmp[467661])
    (491008 'end of statement')
    unknown tmp[467670] "temp"
    (467672 'init var' tmp[467670] 0)
    (467674 '.=' this[304242] c"_size" tmp[467670])
    (491009 'end of statement')
    unknown tmp[467686] "temp"
    unknown tmp[580858] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580859] "maybe param" "temp"
    unknown call_tmp[744646] "expr temp" "maybe param" "maybe type" "temp"
    (744649 'move' call_tmp[744646](467694 '.v' this[304242] c"parSafe"))
    (580864 'move' tmp[580859](580862 call _cond_test call_tmp[744646]))
    if tmp[580859]
    {
      unknown tmp[580866] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580868 'move' tmp[580866](748145 'new' _LockWrapper[405235](?)))
      (580873 'move' tmp[580858](580870 '_paramFoldLogical' tmp[580859] tmp[580866]))
    }
    {
      (580878 'move' tmp[580858](580875 '_paramFoldLogical' tmp[580859] none[57]))
    }
    (467688 'init var' tmp[467686] tmp[580858])
    (467690 '.=' this[304242] c"_lock$" tmp[467686])
    (491010 'end of statement')
    unknown call_tmp[744651] "expr temp" "maybe param" "maybe type" "temp"
    (744654 'move' call_tmp[744651](467711 '.v' this[304242] c"eltType"))
    unknown call_tmp[744656] "expr temp" "maybe param" "maybe type" "temp"
    (744659 'move' call_tmp[744656](467703 call _ddata[11696](?) call_tmp[744651]))
    unknown call_tmp[744661] "maybe param" "maybe type" "temp"
    (744664 'move' call_tmp[744661](467701 call _ddata[11696](?) call_tmp[744656]))
    unknown tmp[467698] "temp"
    (467705 'init var' tmp[467698] nil[44] call_tmp[744661])
    (467707 'init field' this[304242] c"_arrays" tmp[467698])
    (491011 'end of statement')
    unknown tmp[467715] "temp"
    (467717 'init var' tmp[467715] 0)
    (467719 '.=' this[304242] c"_arrayCapacity" tmp[467715])
    (491012 'end of statement')
    unknown tmp[467724] "temp"
    (467726 'init var' tmp[467724] 0)
    (467728 '.=' this[304242] c"_totalCapacity" tmp[467724])
    (491013 'end of statement')
    unknown tmp[467732] "temp"
    unknown call_tmp[744666] "expr temp" "maybe param" "maybe type" "temp"
    (744669 'move' call_tmp[744666](467743 '.v' this[304242] c"eltType"))
    unknown call_tmp[744671] "expr temp" "maybe param" "maybe type" "temp"
    (744674 'move' call_tmp[744671](467735 call _dummyFieldType call_tmp[744666]))
    (467737 'default init var' tmp[467732] call_tmp[744671])
    (467739 '.=' this[304242] c"_dummyFieldToForceBorrowChecking" tmp[467732])
    (491014 'end of statement')
    (299099 call(405295 call (partial) _commonInitFromIterable _mt[243] this[304242]) other[299004])
    (539124 return _void[55])
  }
  where {
    unknown call_tmp[744678] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744681 'move' call_tmp[744678](298998 'typeof' this[304242]))
    unknown call_tmp[744685] "expr temp" "maybe param" "maybe type" "temp"
    (744688 'move' call_tmp[744685](298999 call eltType _mt[243] call_tmp[744678]))
    unknown call_tmp[744692] "expr temp" "maybe param" "maybe type" "temp"
    (744695 'move' call_tmp[744692](467647 call eltType _mt[243] other[299004]))
    unknown call_tmp[744697] "expr temp" "maybe param" "maybe type" "temp"
    (744700 'move' call_tmp[744697](467651 call == call_tmp[744685] call_tmp[744692]))
    (467645 call & 1 call_tmp[744697])
  }
  function list[304220](?).init=[299120](arg _mt[304248]:_MT[238], ref arg this[304246]:list[304220](?), arg other[299117]:range[64319](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467770] "temp" "type variable"
    unknown call_tmp[744702] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744705 'move' call_tmp[744702](299127 'typeof' this[304246]))
    (467772 'move' tmp[467770](299128 call eltType _mt[243] call_tmp[744702]))
    (467774 'init field' this[304246] c"eltType" tmp[467770])
    (491016 'end of statement')
    unknown call_tmp[744709] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744712 'move' call_tmp[744709](299140 'typeof' this[304246]))
    unknown call_tmp[744716] "maybe param" "maybe type" "temp"
    (744719 'move' call_tmp[744716](299141 call parSafe _mt[243] call_tmp[744709]))
    unknown tmp[467778] "param" "temp"
    (467780 'init var' tmp[467778] call_tmp[744716])
    (467782 'init field' this[304246] c"parSafe" tmp[467778])
    (491017 'end of statement')
    unknown call_tmp[744721] "expr temp" "maybe param" "maybe type" "temp"
    (744724 'move' call_tmp[744721](299150 call isBoundedRange other[299117]))
    unknown call_tmp[744726] "expr temp" "maybe param" "maybe type" "temp"
    (744729 'move' call_tmp[744726](299151 call ! call_tmp[744721]))
    unknown call_tmp[744731] "expr temp" "maybe param" "maybe type" "temp"
    (744734 'move' call_tmp[744731](299191 call _cond_test call_tmp[744726]))
    if call_tmp[744731]
    {
      unknown call_tmp[744736] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744739 'move' call_tmp[744736](299154 'typeof' this[304246]))
      unknown call_tmp[744741] "maybe param" "maybe type" "temp"
      (744744 'move' call_tmp[744741](299156 call _cast string[26] call_tmp[744736]))
      unknown e[299158] "dead at end of block" "param"
      (549862 'init var' e[299158] call_tmp[744741])
      (299161 'end of statement')
      unknown call_tmp[744746] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744749 'move' call_tmp[744746](299164 'typeof' other[299117]))
      unknown call_tmp[744751] "maybe param" "maybe type" "temp"
      (744754 'move' call_tmp[744751](299166 call _cast string[26] call_tmp[744746]))
      unknown f[299168] "dead at end of block" "param"
      (549864 'init var' f[299168] call_tmp[744751])
      (299171 'end of statement')
      unknown call_tmp[744756] "expr temp" "maybe param" "maybe type" "temp"
      (744759 'move' call_tmp[744756](299174 call + "Cannot init " e[299158]))
      unknown call_tmp[744761] "expr temp" "maybe param" "maybe type" "temp"
      (744764 'move' call_tmp[744761](299177 call + call_tmp[744756] " from unbounded "))
      unknown call_tmp[744766] "maybe param" "maybe type" "temp"
      (744769 'move' call_tmp[744766](299180 call + call_tmp[744761] f[299168]))
      unknown msg[299182] "dead at end of block" "param"
      (549866 'init var' msg[299182] call_tmp[744766])
      (299185 'end of statement')
      (299189 call compilerError msg[299182])
    }
    unknown tmp[467787] "temp"
    (467789 'init var' tmp[467787] 0)
    (467791 '.=' this[304246] c"_size" tmp[467787])
    (491019 'end of statement')
    unknown tmp[467803] "temp"
    unknown tmp[580885] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580886] "maybe param" "temp"
    unknown call_tmp[744771] "expr temp" "maybe param" "maybe type" "temp"
    (744774 'move' call_tmp[744771](467811 '.v' this[304246] c"parSafe"))
    (580891 'move' tmp[580886](580889 call _cond_test call_tmp[744771]))
    if tmp[580886]
    {
      unknown tmp[580893] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580895 'move' tmp[580893](748146 'new' _LockWrapper[405235](?)))
      (580900 'move' tmp[580885](580897 '_paramFoldLogical' tmp[580886] tmp[580893]))
    }
    {
      (580905 'move' tmp[580885](580902 '_paramFoldLogical' tmp[580886] none[57]))
    }
    (467805 'init var' tmp[467803] tmp[580885])
    (467807 '.=' this[304246] c"_lock$" tmp[467803])
    (491020 'end of statement')
    unknown call_tmp[744776] "expr temp" "maybe param" "maybe type" "temp"
    (744779 'move' call_tmp[744776](467828 '.v' this[304246] c"eltType"))
    unknown call_tmp[744781] "expr temp" "maybe param" "maybe type" "temp"
    (744784 'move' call_tmp[744781](467820 call _ddata[11696](?) call_tmp[744776]))
    unknown call_tmp[744786] "maybe param" "maybe type" "temp"
    (744789 'move' call_tmp[744786](467818 call _ddata[11696](?) call_tmp[744781]))
    unknown tmp[467815] "temp"
    (467822 'init var' tmp[467815] nil[44] call_tmp[744786])
    (467824 'init field' this[304246] c"_arrays" tmp[467815])
    (491021 'end of statement')
    unknown tmp[467832] "temp"
    (467834 'init var' tmp[467832] 0)
    (467836 '.=' this[304246] c"_arrayCapacity" tmp[467832])
    (491022 'end of statement')
    unknown tmp[467841] "temp"
    (467843 'init var' tmp[467841] 0)
    (467845 '.=' this[304246] c"_totalCapacity" tmp[467841])
    (491023 'end of statement')
    unknown tmp[467849] "temp"
    unknown call_tmp[744791] "expr temp" "maybe param" "maybe type" "temp"
    (744794 'move' call_tmp[744791](467860 '.v' this[304246] c"eltType"))
    unknown call_tmp[744796] "expr temp" "maybe param" "maybe type" "temp"
    (744799 'move' call_tmp[744796](467852 call _dummyFieldType call_tmp[744791]))
    (467854 'default init var' tmp[467849] call_tmp[744796])
    (467856 '.=' this[304246] c"_dummyFieldToForceBorrowChecking" tmp[467849])
    (491024 'end of statement')
    (299205 call(405310 call (partial) _commonInitFromIterable _mt[243] this[304246]) other[299117])
    (539126 return _void[55])
  }
  where {
    unknown call_tmp[744803] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744806 'move' call_tmp[744803](467754 'typeof' this[304246]))
    unknown call_tmp[744810] "expr temp" "maybe param" "maybe type" "temp"
    (744813 'move' call_tmp[744810](467753 call eltType _mt[243] call_tmp[744803]))
    unknown call_tmp[744815] "expr temp" "maybe param" "maybe type" "temp"
    (744818 'move' call_tmp[744815](467749 'query' other[299117] 1))
    unknown call_tmp[744820] "expr temp" "maybe param" "maybe type" "temp"
    (744823 'move' call_tmp[744820](467757 call == call_tmp[744810] call_tmp[744815]))
    (467761 call & 1 call_tmp[744820])
  }
  function list[304220](?)._commonInitFromIterable[299213](arg _mt[304252]:_MT[238], arg this[304250]:list[304220](?), arg iterable[299211]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299226 call(299222 call (partial) _firstTimeInitializeArrays _mt[243] this[304250]))
    (491026 'end of statement')
    {
      unknown _indexOfInterest[299236] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299237] "expr temp" "temp"
      (299246 'move' _iterator[299237](299244 call _getIterator iterable[299211]))
      Defer
      {
        {
          (299262 call _freeIterator _iterator[299237])
        }
      }
      { scopeless type
        (299251 'move' _indexOfInterest[299236](299248 call iteratorIndex _iterator[299237]))
      }
      ForLoop[299238]
      {
        unknown x[299255] "index var" "insert auto destroy"
        (491028 'end of statement')
        (299257 'move' x[299255] _indexOfInterest[299236])
        (491029 'end of statement' x[299255])
        (299234 call(405318 call (partial) append _mt[243] this[304250]) x[299255])
        (491031 'end of statement' x[299255])
        label _continueLabel[299241]
        _indexOfInterest[299236]
        _iterator[299237]
      }
      label _breakLabel[299242]
    }
    (539128 return _void[55])
  }
  {
    (299219 call <(299216 'lifetime_of' this[304250])(299218 'lifetime_of' iterable[299211]))
  }
  function list[304220](?)._firstTimeInitializeArrays[299274](arg _mt[304256]:_MT[238], arg this[304254]:list[304220](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744831] "expr temp" "maybe param" "maybe type" "temp"
    (744834 'move' call_tmp[744831](405326 call _arrays _mt[243] this[304254]))
    unknown call_tmp[744836] "expr temp" "maybe param" "maybe type" "temp"
    (744839 'move' call_tmp[744836](299279 call == call_tmp[744831] nil[44]))
    (299282 call _sanity call_tmp[744836])
    (491033 'end of statement')
    unknown call_tmp[744843] "expr temp" "maybe param" "maybe type" "temp"
    (744846 'move' call_tmp[744843](405333 call _totalCapacity _mt[243] this[304254]))
    unknown call_tmp[744848] "expr temp" "maybe param" "maybe type" "temp"
    (744851 'move' call_tmp[744848](299288 call == call_tmp[744843] 0))
    (299291 call _sanity call_tmp[744848])
    (491034 'end of statement')
    unknown call_tmp[744855] "expr temp" "maybe param" "maybe type" "temp"
    (744858 'move' call_tmp[744855](405340 call _size _mt[243] this[304254]))
    unknown call_tmp[744860] "expr temp" "maybe param" "maybe type" "temp"
    (744863 'move' call_tmp[744860](299296 call == call_tmp[744855] 0))
    (299299 call _sanity call_tmp[744860])
    (491035 'end of statement')
    unknown call_tmp[744867] "expr temp" "maybe param" "maybe type" "temp"
    (744870 'move' call_tmp[744867](405345 call _arrays _mt[243] this[304254]))
    unknown call_tmp[744874] "expr temp" "maybe param" "maybe type" "temp"
    (744877 'move' call_tmp[744874](299305 call(405351 call (partial) _makeBlockArray _mt[243] this[304254]) _initialArrayCapacity[298260]))
    (299306 call = call_tmp[744867] call_tmp[744874])
    (491036 'end of statement')
    unknown call_tmp[744881] "expr temp" "maybe param" "maybe type" "temp"
    (744884 'move' call_tmp[744881](405359 call _arrayCapacity _mt[243] this[304254]))
    (299311 call = call_tmp[744881] _initialArrayCapacity[298260])
    (491037 'end of statement')
    unknown call_tmp[744888] "expr temp" "maybe param" "maybe type" "temp"
    (744891 'move' call_tmp[744888](299317 call(405365 call (partial) _arrays _mt[243] this[304254]) 0))
    unknown call_tmp[744895] "expr temp" "maybe param" "maybe type" "temp"
    (744898 'move' call_tmp[744895](299321 call(405371 call (partial) _makeArray _mt[243] this[304254]) _initialCapacity[298255]))
    (299322 call = call_tmp[744888] call_tmp[744895])
    (491038 'end of statement')
    unknown call_tmp[744902] "expr temp" "maybe param" "maybe type" "temp"
    (744905 'move' call_tmp[744902](405377 call _totalCapacity _mt[243] this[304254]))
    (299327 call = call_tmp[744902] _initialCapacity[298255])
    (539130 return _void[55])
  }
  function list[304220](?).deinit[299334](arg _mt[304260]:_MT[238], arg this[304258]:list[304220](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299338 call(405384 call (partial) _fireAllDestructors _mt[243] this[304258]))
    (491040 'end of statement')
    (299343 call(405390 call (partial) _freeAllArrays _mt[243] this[304258]))
    (491041 'end of statement')
    unknown call_tmp[744913] "expr temp" "maybe param" "maybe type" "temp"
    (744916 'move' call_tmp[744913](405395 call _totalCapacity _mt[243] this[304258]))
    unknown call_tmp[744918] "expr temp" "maybe param" "maybe type" "temp"
    (744921 'move' call_tmp[744918](299348 call == call_tmp[744913] 0))
    (299351 call _sanity call_tmp[744918])
    (491042 'end of statement')
    unknown call_tmp[744925] "expr temp" "maybe param" "maybe type" "temp"
    (744928 'move' call_tmp[744925](405400 call _size _mt[243] this[304258]))
    unknown call_tmp[744930] "expr temp" "maybe param" "maybe type" "temp"
    (744933 'move' call_tmp[744930](299356 call == call_tmp[744925] 0))
    (299359 call _sanity call_tmp[744930])
    (491043 'end of statement')
    unknown call_tmp[744937] "expr temp" "maybe param" "maybe type" "temp"
    (744940 'move' call_tmp[744937](405405 call _arrays _mt[243] this[304258]))
    unknown call_tmp[744942] "expr temp" "maybe param" "maybe type" "temp"
    (744945 'move' call_tmp[744942](299364 call == call_tmp[744937] nil[44]))
    (299367 call _sanity call_tmp[744942])
    (539132 return _void[55])
  }
  function list[304220](?)._destroy[299377](arg _mt[304264]:_MT[238], arg this[304262]:list[304220](?), ref arg item[299374] :
  (405410 call eltType _mt[243] this[304262])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299382 call chpl__autoDestroy item[299374])
    (539134 return _void[55])
  }
  function list[304220](?)._move[299394](arg _mt[304268]:_MT[238], arg this[304266]:list[304220](?), ref arg src[299391]:_any[178](?), ref arg dst[299397] :
  (467863 'typeof' src[299391])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299410 '=' dst[299397] src[299391])
    (539136 return _void[55])
  }
  {
    (299404 call ==(299401 'lifetime_of' src[299391])(299403 'lifetime_of' dst[299397]))
  }
  function list[304220](?)._getArrayCapacity[299422](arg _mt[304272]:_MT[238], arg this[304270]:list[304220](?), arg array[299419]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539140] "RVV" "temp"
    unknown call_tmp[744949] "expr temp" "maybe param" "maybe type" "temp"
    (744952 'move' call_tmp[744949](299429 call log2 _initialCapacity[298255]))
    unknown call_tmp[744954] "maybe param" "maybe type" "temp"
    (744957 'move' call_tmp[744954](299430 call + array[299419] call_tmp[744949]))
    const exp[299432] "dead at end of block" "const" "insert auto destroy"
    (549868 'init var' exp[299432] call_tmp[744954])
    (299435 'end of statement')
    unknown call_tmp[744959] "maybe param" "maybe type" "temp"
    (744962 'move' call_tmp[744959](299439 call ** 2 exp[299432]))
    const result[299441] "dead at end of block" "const" "insert auto destroy"
    (549870 'init var' result[299441] call_tmp[744959])
    (299444 'end of statement' exp[299432])
    (539146 'move' ret[539140](539145 'coerce' result[299441] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539138] _end__getArrayCapacity[539138]
    (491048 'end of statement' result[299441])
    label _end__getArrayCapacity[539138]
    (539142 return ret[539140])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?)._getArrayIdx[299457](arg _mt[304276]:_MT[238], arg this[304274]:list[304220](?), arg zpos[299454]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539152] "RVV" "temp"
    unknown call_tmp[744964] "maybe param" "maybe type" "temp"
    (744967 'move' call_tmp[744964](299462 call + zpos[299454] _initialCapacity[298255]))
    const adj[299464] "dead at end of block" "const" "insert auto destroy"
    (549872 'init var' adj[299464] call_tmp[744964])
    (299467 'end of statement')
    unknown call_tmp[744969] "expr temp" "maybe param" "maybe type" "temp"
    (744972 'move' call_tmp[744969](299472 call log2 adj[299464]))
    unknown call_tmp[744974] "expr temp" "maybe param" "maybe type" "temp"
    (744977 'move' call_tmp[744974](299476 call log2 _initialCapacity[298255]))
    unknown call_tmp[744979] "maybe param" "maybe type" "temp"
    (744982 'move' call_tmp[744979](299477 call - call_tmp[744969] call_tmp[744974]))
    const result[299479] "dead at end of block" "const" "insert auto destroy"
    (549874 'init var' result[299479] call_tmp[744979])
    (299482 'end of statement' adj[299464])
    (539158 'move' ret[539152](539157 'coerce' result[299479] int(64)[13]))
    gotoReturn _end__getArrayIdx[539150] _end__getArrayIdx[539150]
    (491051 'end of statement' result[299479])
    label _end__getArrayIdx[539150]
    (539154 return ret[539152])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?)._getLastArrayIdx[299491](arg _mt[304280]:_MT[238], arg this[304278]:list[304220](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539164] "RVV" "temp"
    unknown call_tmp[744988] "expr temp" "maybe param" "maybe type" "temp"
    (744991 'move' call_tmp[744988](405436 call _size _mt[243] this[304278]))
    unknown call_tmp[744993] "expr temp" "maybe param" "maybe type" "temp"
    (744996 'move' call_tmp[744993](299497 call - call_tmp[744988] 1))
    unknown call_tmp[744998] "maybe param" "maybe type" "temp"
    (745001 'move' call_tmp[744998](299500 call(405431 call (partial) _getArrayIdx _mt[243] this[304278]) call_tmp[744993]))
    const result[299501] "dead at end of block" "const" "insert auto destroy"
    (549876 'init var' result[299501] call_tmp[744998])
    (299504 'end of statement')
    unknown call_tmp[745003] "expr temp" "maybe param" "maybe type" "temp"
    (745006 'move' call_tmp[745003](299509 call >= result[299501] 0))
    (299512 call _sanity call_tmp[745003])
    (491053 'end of statement' result[299501])
    (539170 'move' ret[539164](539169 'coerce' result[299501] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539162] _end__getLastArrayIdx[539162]
    (491055 'end of statement' result[299501])
    label _end__getLastArrayIdx[539162]
    (539166 return ret[539164])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?)._getItemIdx[299526](arg _mt[304284]:_MT[238], arg this[304282]:list[304220](?), arg zpos[299523]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539176] "RVV" "temp"
    unknown call_tmp[745008] "maybe param" "maybe type" "temp"
    (745011 'move' call_tmp[745008](299531 call + zpos[299523] _initialCapacity[298255]))
    const adj[299533] "dead at end of block" "const" "insert auto destroy"
    (549878 'init var' adj[299533] call_tmp[745008])
    (299536 'end of statement')
    unknown call_tmp[745013] "expr temp" "maybe param" "maybe type" "temp"
    (745016 'move' call_tmp[745013](299543 call log2 adj[299533]))
    unknown call_tmp[745018] "expr temp" "maybe param" "maybe type" "temp"
    (745021 'move' call_tmp[745018](299544 call << 1 call_tmp[745013]))
    unknown call_tmp[745023] "maybe param" "maybe type" "temp"
    (745026 'move' call_tmp[745023](299546 call ^ adj[299533] call_tmp[745018]))
    const result[299548] "dead at end of block" "const" "insert auto destroy"
    (549880 'init var' result[299548] call_tmp[745023])
    (299551 'end of statement' adj[299533] adj[299533])
    (539182 'move' ret[539176](539181 'coerce' result[299548] int(64)[13]))
    gotoReturn _end__getItemIdx[539174] _end__getItemIdx[539174]
    (491059 'end of statement' result[299548])
    label _end__getItemIdx[539174]
    (539178 return ret[539176])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?)._getRef[299564](arg _mt[304288]:_MT[238], const  ref arg this[304286]:list[304220](?), arg idx[299561]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539188] "RVV" "temp"
    unknown tmp[434855] "maybe param" "temp"
    (434866 'move' tmp[434855](299569 call >= idx[299561] 0))
    unknown call_tmp[745028] "expr temp" "maybe param" "maybe type" "temp"
    (745031 'move' call_tmp[745028](434868 call _cond_invalid tmp[434855]))
    if call_tmp[745028]
    {
      (434871 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580912] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580913] "maybe param" "temp"
    unknown call_tmp[745033] "expr temp" "maybe param" "maybe type" "temp"
    (745036 'move' call_tmp[745033](434856 call isTrue tmp[434855]))
    (580918 'move' tmp[580913](580916 call _cond_test call_tmp[745033]))
    if tmp[580913]
    {
      unknown tmp[580920] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745040] "expr temp" "maybe param" "maybe type" "temp"
      (745043 'move' call_tmp[745040](405450 call _totalCapacity _mt[243] this[304286]))
      unknown call_tmp[745045] "expr temp" "maybe param" "maybe type" "temp"
      (745048 'move' call_tmp[745045](299573 call < idx[299561] call_tmp[745040]))
      (580922 'move' tmp[580920](434859 call isTrue call_tmp[745045]))
      (580927 'move' tmp[580912](580924 '_paramFoldLogical' tmp[580913] tmp[580920]))
    }
    {
      (580932 'move' tmp[580912](580929 '_paramFoldLogical' tmp[580913] 0))
    }
    (299578 call _sanity tmp[580912])
    (491062 'end of statement')
    unknown call_tmp[745052] "maybe param" "maybe type" "temp"
    (745055 'move' call_tmp[745052](299584 call(405454 call (partial) _getArrayIdx _mt[243] this[304286]) idx[299561]))
    const arrayIdx[299585] "dead at end of block" "const" "insert auto destroy"
    (549882 'init var' arrayIdx[299585] call_tmp[745052])
    (299588 'end of statement')
    unknown call_tmp[745059] "maybe param" "maybe type" "temp"
    (745062 'move' call_tmp[745059](299592 call(405461 call (partial) _getItemIdx _mt[243] this[304286]) idx[299561]))
    const itemIdx[299593] "dead at end of block" "const" "insert auto destroy"
    (549884 'init var' itemIdx[299593] call_tmp[745059])
    (299596 'end of statement')
    unknown call_tmp[745066] "maybe param" "maybe type" "temp"
    (745069 'move' call_tmp[745066](299600 call(405467 call (partial) _arrays _mt[243] this[304286]) arrayIdx[299585]))
    const array[299601] "dead at end of block" "const" "insert auto destroy"
    (549886 'init var' array[299601] call_tmp[745066])
    (299604 'end of statement')
    unknown call_tmp[745071] "expr temp" "maybe param" "maybe type" "temp"
    (745074 'move' call_tmp[745071](299608 call != array[299601] nil[44]))
    (299611 call _sanity call_tmp[745071])
    (491064 'end of statement' array[299601])
    unknown result[299617] "dead at end of block" "ref var"
    unknown call_tmp[745076] "expr temp" "maybe param" "maybe type" "temp"
    (745079 'move' call_tmp[745076](299616 call array[299601] itemIdx[299593]))
    (549889 'move' result[299617](549888 'addr of' call_tmp[745076]))
    (299620 'end of statement' arrayIdx[299585] array[299601] itemIdx[299593])
    (539193 'move' ret[539188](539192 'addr of' result[299617]))
    gotoReturn _end__getRef[539186] _end__getRef[539186]
    (491068 'end of statement' result[299617])
    label _end__getRef[539186]
    (539190 return ret[539188])
  }
  function list[304220](?)._enter[299628](arg _mt[304292]:_MT[238], arg this[304290]:list[304220](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745083] "expr temp" "maybe param" "maybe type" "temp"
    (745086 'move' call_tmp[745083](405477 call parSafe _mt[243] this[304290]))
    unknown call_tmp[745088] "expr temp" "maybe param" "maybe type" "temp"
    (745091 'move' call_tmp[745088](299638 call _cond_test call_tmp[745083]))
    if call_tmp[745088]
    {
      unknown call_tmp[745095] "expr temp" "maybe param" "maybe type" "temp"
      (745098 'move' call_tmp[745095](364975 call _lock$ _mt[243] this[304290]))
      (299636 call(299632 call (partial) lock _mt[243] call_tmp[745095]))
    }
    (539197 return _void[55])
  }
  function list[304220](?)._leave[299648](arg _mt[304296]:_MT[238], arg this[304294]:list[304220](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745104] "expr temp" "maybe param" "maybe type" "temp"
    (745107 'move' call_tmp[745104](405482 call parSafe _mt[243] this[304294]))
    unknown call_tmp[745109] "expr temp" "maybe param" "maybe type" "temp"
    (745112 'move' call_tmp[745109](299658 call _cond_test call_tmp[745104]))
    if call_tmp[745109]
    {
      unknown call_tmp[745116] "expr temp" "maybe param" "maybe type" "temp"
      (745119 'move' call_tmp[745116](364980 call _lock$ _mt[243] this[304294]))
      (299656 call(299652 call (partial) unlock _mt[243] call_tmp[745116]))
    }
    (539199 return _void[55])
  }
  function list[304220](?)._withinBounds[299672](arg _mt[304300]:_MT[238], const arg this[304298]:list[304220](?), arg idx[299669]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539203] "RVV" "temp"
    unknown tmp[434876] "maybe param" "temp"
    (434887 'move' tmp[434876](299677 call >= idx[299669] 0))
    unknown call_tmp[745123] "expr temp" "maybe param" "maybe type" "temp"
    (745126 'move' call_tmp[745123](434889 call _cond_invalid tmp[434876]))
    if call_tmp[745123]
    {
      (434892 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580939] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580940] "maybe param" "temp"
    unknown call_tmp[745128] "expr temp" "maybe param" "maybe type" "temp"
    (745131 'move' call_tmp[745128](434877 call isTrue tmp[434876]))
    (580945 'move' tmp[580940](580943 call _cond_test call_tmp[745128]))
    if tmp[580940]
    {
      unknown tmp[580947] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745135] "expr temp" "maybe param" "maybe type" "temp"
      (745138 'move' call_tmp[745135](405489 call _size _mt[243] this[304298]))
      unknown call_tmp[745140] "expr temp" "maybe param" "maybe type" "temp"
      (745143 'move' call_tmp[745140](299681 call < idx[299669] call_tmp[745135]))
      (580949 'move' tmp[580947](434880 call isTrue call_tmp[745140]))
      (580954 'move' tmp[580939](580951 '_paramFoldLogical' tmp[580940] tmp[580947]))
    }
    {
      (580959 'move' tmp[580939](580956 '_paramFoldLogical' tmp[580940] 0))
    }
    (539209 'move' ret[539203](539208 'coerce' tmp[580939] bool[10]))
    (539205 return ret[539203])
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?)._boundsCheckLeaveOnThrow[299697](arg _mt[304304]:_MT[238], const arg this[304302]:list[304220](?), arg i[299694]:int(64)[13], arg umsg[299717]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745147] "expr temp" "maybe param" "maybe type" "temp"
    (745150 'move' call_tmp[745147](299724 call(405495 call (partial) _withinBounds _mt[243] this[304302]) i[299694]))
    unknown call_tmp[745152] "expr temp" "maybe param" "maybe type" "temp"
    (745155 'move' call_tmp[745152](299725 call ! call_tmp[745147]))
    unknown call_tmp[745157] "expr temp" "maybe param" "maybe type" "temp"
    (745160 'move' call_tmp[745157](299792 call _cond_test call_tmp[745152]))
    if call_tmp[745157]
    {
      (299729 call(405502 call (partial) _leave _mt[243] this[304302]))
      (491074 'end of statement')
      const msg[299779] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[580966] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580967] "maybe param" "temp"
      unknown call_tmp[745164] "expr temp" "maybe param" "maybe type" "temp"
      (745167 'move' call_tmp[745164](299750 call != umsg[299717] ""))
      (580972 'move' tmp[580967](580970 call _cond_test call_tmp[745164]))
      if tmp[580967]
      {
        (580977 'move' tmp[580966](580974 '_paramFoldLogical' tmp[580967] umsg[299717]))
      }
      {
        unknown tmp[580979] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745169] "expr temp" "maybe param" "maybe type" "temp"
        (745172 'move' call_tmp[745169](299772 call _cast string[26] i[299694]))
        (580981 'move' tmp[580979](299774 call + "Index out of bounds: " call_tmp[745169]))
        (580986 'move' tmp[580966](580983 '_paramFoldLogical' tmp[580967] tmp[580979]))
      }
      (549891 'init var' msg[299779] tmp[580966])
      (299782 'end of statement')
      unknown call_tmp[745174] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745177 'move' call_tmp[745174](748147 'new' IllegalArgumentError[388818](?) msg[299779](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745179] "expr temp" "maybe param" "maybe type" "temp"
      (745182 'move' call_tmp[745179](468205 call chpl_fix_thrown_error call_tmp[745174]))
      (299790 'throw' call_tmp[745179])
      (491075 'end of statement' msg[299779])
    }
    (539211 return _void[55])
  }
  function list[304220](?)._makeBlockArray[299805](arg _mt[304308]:_MT[238], arg this[304306]:list[304220](?), arg size[299802]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539215] "RVV" "temp"
    unknown call_tmp[745186] "expr temp" "maybe param" "maybe type" "temp"
    (745189 'move' call_tmp[745186](405513 call eltType _mt[243] this[304306]))
    unknown call_tmp[745191] "expr temp" "maybe param" "maybe type" "temp"
    (745194 'move' call_tmp[745191](299811 call _ddata[11696](?) call_tmp[745186]))
    unknown call_tmp[745196] "expr temp" "maybe param" "maybe type" "temp"
    (745199 'move' call_tmp[745196](299814 call _ddata_allocate call_tmp[745191] size[299802]))
    (539220 'move' ret[539215](539219 'deref' call_tmp[745196]))
    (539217 return ret[539215])
  }
  function list[304220](?)._freeBlockArray[299832](arg _mt[304312]:_MT[238], arg this[304310]:list[304220](?), arg data[299829] :
  unknown call_tmp[745203] "expr temp" "maybe param" "maybe type" "temp", arg size[299835]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299842 call _ddata_free data[299829] size[299835])
    (539222 return _void[55])
  }
  function list[304220](?)._makeArray[299853](arg _mt[304316]:_MT[238], arg this[304314]:list[304220](?), arg size[299850]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539226] "RVV" "temp"
    unknown call_tmp[745215] "expr temp" "maybe param" "maybe type" "temp"
    (745218 'move' call_tmp[745215](405528 call eltType _mt[243] this[304314]))
    unknown call_tmp[745220] "expr temp" "maybe param" "maybe type" "temp"
    (745223 'move' call_tmp[745220](299861 call _ddata_allocate call_tmp[745215] size[299850](initElts = 0)))
    (539231 'move' ret[539226](539230 'deref' call_tmp[745220]))
    (539228 return ret[539226])
  }
  function list[304220](?)._freeArray[299876](arg _mt[304320]:_MT[238], arg this[304318]:list[304220](?), arg data[299873] :
  unknown call_tmp[745227] "expr temp" "maybe param" "maybe type" "temp", arg size[299879]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299886 call _ddata_free data[299873] size[299879])
    (539233 return _void[55])
  }
  function list[304220](?)._maybeAcquireMem[299897](arg _mt[304324]:_MT[238], arg this[304322]:list[304220](?), arg amount[299894]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745234] "expr temp" "maybe param" "maybe type" "temp"
    (745237 'move' call_tmp[745234](405542 call _totalCapacity _mt[243] this[304322]))
    unknown call_tmp[745241] "expr temp" "maybe param" "maybe type" "temp"
    (745244 'move' call_tmp[745241](405547 call _size _mt[243] this[304322]))
    unknown call_tmp[745246] "maybe param" "maybe type" "temp"
    (745249 'move' call_tmp[745246](299901 call - call_tmp[745234] call_tmp[745241]))
    const remaining[299903] "dead at end of block" "const" "insert auto destroy"
    (549893 'init var' remaining[299903] call_tmp[745246])
    (299906 'end of statement')
    unknown call_tmp[745251] "expr temp" "maybe param" "maybe type" "temp"
    (745254 'move' call_tmp[745251](299911 call >= remaining[299903] 0))
    (299914 call _sanity call_tmp[745251])
    (491081 'end of statement' remaining[299903])
    unknown call_tmp[745256] "expr temp" "maybe param" "maybe type" "temp"
    (745259 'move' call_tmp[745256](299918 call >= remaining[299903] amount[299894]))
    unknown call_tmp[745261] "expr temp" "maybe param" "maybe type" "temp"
    (745264 'move' call_tmp[745261](299922 call _cond_test call_tmp[745256]))
    if call_tmp[745261]
    {
      gotoReturn _end__maybeAcquireMem[539235] _end__maybeAcquireMem[539235]
    }
    unknown lastArrayIdx[299938] "dead at end of block" "insert auto destroy"
    unknown tmp[580993] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580994] "maybe param" "temp"
    unknown call_tmp[745268] "expr temp" "maybe param" "maybe type" "temp"
    (745271 'move' call_tmp[745268](405555 call _size _mt[243] this[304322]))
    unknown call_tmp[745273] "expr temp" "maybe param" "maybe type" "temp"
    (745276 'move' call_tmp[745273](299929 call == call_tmp[745268] 0))
    (580999 'move' tmp[580994](580997 call _cond_test call_tmp[745273]))
    if tmp[580994]
    {
      (581004 'move' tmp[580993](581001 '_paramFoldLogical' tmp[580994] 0))
    }
    {
      unknown tmp[581006] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (581008 'move' tmp[581006](299934 call(405561 call (partial) _getLastArrayIdx _mt[243] this[304322])))
      (581013 'move' tmp[580993](581010 '_paramFoldLogical' tmp[580994] tmp[581006]))
    }
    (549895 'init var' lastArrayIdx[299938] tmp[580993])
    (299941 'end of statement')
    unknown call_tmp[745280] "maybe param" "maybe type" "temp"
    (745283 'move' call_tmp[745280](299944 call - amount[299894] remaining[299903]))
    unknown req[299946] "dead at end of block" "insert auto destroy"
    (549897 'init var' req[299946] call_tmp[745280])
    (299949 'end of statement' remaining[299903])
    {
      unknown tmp[300149] "temp"
      unknown call_tmp[745285] "expr temp" "maybe param" "maybe type" "temp"
      (745288 'move' call_tmp[745285](300170 call > req[299946] 0))
      (300173 'move' tmp[300149](300168 call _cond_test call_tmp[745285]))
      WhileDo[300154]
      {
        {
          unknown call_tmp[745292] "expr temp" "maybe param" "maybe type" "temp"
          (745295 'move' call_tmp[745292](405569 call _arrayCapacity _mt[243] this[304322]))
          unknown call_tmp[745297] "expr temp" "maybe param" "maybe type" "temp"
          (745300 'move' call_tmp[745297](299957 call - call_tmp[745292] 1))
          unknown call_tmp[745302] "expr temp" "maybe param" "maybe type" "temp"
          (745305 'move' call_tmp[745302](299959 call >= lastArrayIdx[299938] call_tmp[745297]))
          unknown call_tmp[745307] "expr temp" "maybe param" "maybe type" "temp"
          (745310 'move' call_tmp[745307](300059 call _cond_test call_tmp[745302]))
          if call_tmp[745307]
          {
            const tmp[300051] "const" "temp"
            unknown call_tmp[745312] "expr temp" "maybe param" "maybe type" "temp"
            (745315 'move' call_tmp[745312](300048 '_wide_get_locale' this[304322]))
            (300053 'move' tmp[300051](300049 'deref' call_tmp[745312]))
            {
              {
                unknown call_tmp[745321] "expr temp" "maybe param" "maybe type" "temp"
                (745324 'move' call_tmp[745321](405579 call _arrayCapacity _mt[243] this[304322]))
                unknown call_tmp[745326] "expr temp" "maybe param" "maybe type" "temp"
                (745329 'move' call_tmp[745326](299965 call * call_tmp[745321] 2))
                unknown call_tmp[745331] "maybe param" "maybe type" "temp"
                (745334 'move' call_tmp[745331](299968 call(405574 call (partial) _makeBlockArray _mt[243] this[304322]) call_tmp[745326]))
                unknown _narrays[299969] "dead at end of block" "insert auto destroy"
                (549899 'init var' _narrays[299969] call_tmp[745331])
                (299972 'end of statement')
                {
                  unknown _indexOfInterest[299992] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[299993] "expr temp" "temp"
                  unknown call_tmp[745338] "expr temp" "maybe param" "maybe type" "temp"
                  (745341 'move' call_tmp[745338](405592 call _arrayCapacity _mt[243] this[304322]))
                  unknown call_tmp[745343] "expr temp" "maybe param" "maybe type" "temp"
                  (745346 'move' call_tmp[745343](300009 call chpl_direct_counted_range_iter 0 call_tmp[745338]))
                  (300002 'move' _iterator[299993](300000 call _getIterator call_tmp[745343]))
                  Defer
                  {
                    {
                      (300025 call _freeIterator _iterator[299993])
                    }
                  }
                  { scopeless type
                    (300014 'move' _indexOfInterest[299992](300011 call iteratorIndex _iterator[299993]))
                  }
                  ForLoop[299994]
                  {
                    unknown i[300018] "index var" "insert auto destroy"
                    (491086 'end of statement')
                    (300020 'move' i[300018] _indexOfInterest[299992])
                    (491087 'end of statement' i[300018])
                    unknown call_tmp[745348] "expr temp" "maybe param" "maybe type" "temp"
                    (745351 'move' call_tmp[745348](299984 call _narrays[299969] i[300018]))
                    unknown call_tmp[745355] "expr temp" "maybe param" "maybe type" "temp"
                    (745358 'move' call_tmp[745355](299988 call(405586 call (partial) _arrays _mt[243] this[304322]) i[300018]))
                    (299989 call = call_tmp[745348] call_tmp[745355])
                    (491089 'end of statement' _narrays[299969] i[300018] i[300018])
                    label _continueLabel[299997]
                    _indexOfInterest[299992]
                    _iterator[299993]
                  }
                  label _breakLabel[299998]
                }
                unknown call_tmp[745364] "expr temp" "maybe param" "maybe type" "temp"
                (745367 'move' call_tmp[745364](405603 call _arrays _mt[243] this[304322]))
                unknown call_tmp[745371] "expr temp" "maybe param" "maybe type" "temp"
                (745374 'move' call_tmp[745371](405608 call _arrayCapacity _mt[243] this[304322]))
                (300036 call(405598 call (partial) _freeBlockArray _mt[243] this[304322]) call_tmp[745364] call_tmp[745371])
                (491093 'end of statement')
                unknown call_tmp[745378] "expr temp" "maybe param" "maybe type" "temp"
                (745381 'move' call_tmp[745378](405613 call _arrays _mt[243] this[304322]))
                (300040 call = call_tmp[745378] _narrays[299969])
                (491094 'end of statement' _narrays[299969])
                unknown call_tmp[745385] "expr temp" "maybe param" "maybe type" "temp"
                (745388 'move' call_tmp[745385](405619 call _arrayCapacity _mt[243] this[304322]))
                (300045 call *= call_tmp[745385] 2)
              }
              (300056 'on block' 0 tmp[300051])
            }
          }
          const tmp[300141] "const" "temp"
          unknown call_tmp[745390] "expr temp" "maybe param" "maybe type" "temp"
          (745393 'move' call_tmp[745390](300138 '_wide_get_locale' this[304322]))
          (300143 'move' tmp[300141](300139 'deref' call_tmp[745390]))
          {
            {
              unknown call_tmp[745397] "maybe param" "maybe type" "temp"
              (745400 'move' call_tmp[745397](300069 call(405625 call (partial) _arrays _mt[243] this[304322]) lastArrayIdx[299938]))
              const oldLast[300070] "dead at end of block" "const" "insert auto destroy"
              (549901 'init var' oldLast[300070] call_tmp[745397])
              (300073 'end of statement')
              unknown call_tmp[745404] "maybe param" "maybe type" "temp"
              (745407 'move' call_tmp[745404](300078 call(405632 call (partial) _getArrayCapacity _mt[243] this[304322]) lastArrayIdx[299938]))
              const oldLastCapacity[300079] "dead at end of block" "const" "insert auto destroy"
              (549903 'init var' oldLastCapacity[300079] call_tmp[745404])
              (300082 'end of statement')
              (300085 call += lastArrayIdx[299938] 1)
              (491099 'end of statement' lastArrayIdx[299938])
              unknown newLast[300092] "dead at end of block" "ref var"
              unknown call_tmp[745411] "expr temp" "maybe param" "maybe type" "temp"
              (745414 'move' call_tmp[745411](300091 call(405639 call (partial) _arrays _mt[243] this[304322]) lastArrayIdx[299938]))
              (549906 'move' newLast[300092](549905 'addr of' call_tmp[745411]))
              (300095 'end of statement')
              unknown call_tmp[745416] "maybe param" "maybe type" "temp"
              (745419 'move' call_tmp[745416](300098 call * oldLastCapacity[300079] 2))
              const newLastCapacity[300100] "dead at end of block" "const" "insert auto destroy"
              (549908 'init var' newLastCapacity[300100] call_tmp[745416])
              (300103 'end of statement' lastArrayIdx[299938] lastArrayIdx[299938] lastArrayIdx[299938] oldLastCapacity[300079])
              unknown call_tmp[745421] "expr temp" "maybe param" "maybe type" "temp"
              (745424 'move' call_tmp[745421](300107 call != oldLast[300070] nil[44]))
              (300110 call _sanity call_tmp[745421])
              (491103 'end of statement' oldLast[300070])
              unknown call_tmp[745426] "expr temp" "maybe param" "maybe type" "temp"
              (745429 'move' call_tmp[745426](300115 call == newLast[300092] nil[44]))
              (300118 call _sanity call_tmp[745426])
              (491105 'end of statement' newLast[300092])
              unknown call_tmp[745433] "expr temp" "maybe param" "maybe type" "temp"
              (745436 'move' call_tmp[745433](300124 call(405648 call (partial) _makeArray _mt[243] this[304322]) newLastCapacity[300100]))
              (300125 call = newLast[300092] call_tmp[745433])
              (491107 'end of statement' newLast[300092] newLastCapacity[300100])
              unknown call_tmp[745440] "expr temp" "maybe param" "maybe type" "temp"
              (745443 'move' call_tmp[745440](405654 call _totalCapacity _mt[243] this[304322]))
              (300130 call += call_tmp[745440] newLastCapacity[300100])
              (491110 'end of statement' newLastCapacity[300100])
              (300135 call -= req[299946] newLastCapacity[300100])
              (491112 'end of statement' req[299946] newLastCapacity[300100])
            }
            (300146 'on block' 0 tmp[300141])
          }
        }
        label _continueLabel[300152]
        unknown call_tmp[745445] "expr temp" "maybe param" "maybe type" "temp"
        (745448 'move' call_tmp[745445](300160 call > req[299946] 0))
        (300163 'move' tmp[300149](300158 call _cond_test call_tmp[745445]))
        tmp[300149]
      }
      label _breakLabel[300153]
    }
    label _end__maybeAcquireMem[539235]
    (539237 return _void[55])
  }
  function list[304220](?)._maybeReleaseMem[300186](arg _mt[304328]:_MT[238], arg this[304326]:list[304220](?), arg amount[300183]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745452] "expr temp" "maybe param" "maybe type" "temp"
    (745455 'move' call_tmp[745452](405664 call _totalCapacity _mt[243] this[304326]))
    unknown call_tmp[745457] "expr temp" "maybe param" "maybe type" "temp"
    (745460 'move' call_tmp[745457](300190 call <= call_tmp[745452] _initialCapacity[298255]))
    unknown call_tmp[745462] "expr temp" "maybe param" "maybe type" "temp"
    (745465 'move' call_tmp[745462](300194 call _cond_test call_tmp[745457]))
    if call_tmp[745462]
    {
      gotoReturn _end__maybeReleaseMem[539241] _end__maybeReleaseMem[539241]
    }
    unknown call_tmp[745469] "maybe param" "maybe type" "temp"
    (745472 'move' call_tmp[745469](300202 call(405669 call (partial) _getLastArrayIdx _mt[243] this[304326])))
    const lastArrayIdx[300203] "dead at end of block" "const" "insert auto destroy"
    (549910 'init var' lastArrayIdx[300203] call_tmp[745469])
    (300206 'end of statement')
    unknown call_tmp[745474] "expr temp" "maybe param" "maybe type" "temp"
    (745477 'move' call_tmp[745474](300210 call != lastArrayIdx[300203] 0))
    (300213 call _sanity call_tmp[745474])
    (491117 'end of statement' lastArrayIdx[300203])
    unknown call_tmp[745481] "maybe param" "maybe type" "temp"
    (745484 'move' call_tmp[745481](300218 call(405674 call (partial) _getArrayCapacity _mt[243] this[304326]) lastArrayIdx[300203]))
    const lastArrayCapacity[300219] "dead at end of block" "const" "insert auto destroy"
    (549912 'init var' lastArrayCapacity[300219] call_tmp[745481])
    (300222 'end of statement')
    unknown call_tmp[745488] "expr temp" "maybe param" "maybe type" "temp"
    (745491 'move' call_tmp[745488](405680 call _totalCapacity _mt[243] this[304326]))
    unknown call_tmp[745493] "maybe param" "maybe type" "temp"
    (745496 'move' call_tmp[745493](300225 call - call_tmp[745488] lastArrayCapacity[300219]))
    const threshold[300227] "dead at end of block" "const" "insert auto destroy"
    (549914 'init var' threshold[300227] call_tmp[745493])
    (300230 'end of statement')
    unknown call_tmp[745500] "expr temp" "maybe param" "maybe type" "temp"
    (745503 'move' call_tmp[745500](405686 call _size _mt[243] this[304326]))
    unknown call_tmp[745505] "maybe param" "maybe type" "temp"
    (745508 'move' call_tmp[745505](300233 call - call_tmp[745500] amount[300183]))
    const nsize[300235] "dead at end of block" "const" "insert auto destroy"
    (549916 'init var' nsize[300235] call_tmp[745505])
    (300238 'end of statement')
    unknown call_tmp[745510] "expr temp" "maybe param" "maybe type" "temp"
    (745513 'move' call_tmp[745510](300241 call > nsize[300235] threshold[300227]))
    unknown call_tmp[745515] "expr temp" "maybe param" "maybe type" "temp"
    (745518 'move' call_tmp[745515](300245 call _cond_test call_tmp[745510]))
    if call_tmp[745515]
    {
      gotoReturn _end__maybeReleaseMem[539241] _end__maybeReleaseMem[539241]
    }
    unknown array[300254] "dead at end of block" "ref var"
    unknown call_tmp[745522] "expr temp" "maybe param" "maybe type" "temp"
    (745525 'move' call_tmp[745522](300253 call(405694 call (partial) _arrays _mt[243] this[304326]) lastArrayIdx[300203]))
    (549919 'move' array[300254](549918 'addr of' call_tmp[745522]))
    (300257 'end of statement' lastArrayIdx[300203] lastArrayCapacity[300219] lastArrayIdx[300203])
    unknown call_tmp[745527] "expr temp" "maybe param" "maybe type" "temp"
    (745530 'move' call_tmp[745527](300261 call != array[300254] nil[44]))
    (300264 call _sanity call_tmp[745527])
    (491123 'end of statement' array[300254])
    (300270 call(405702 call (partial) _freeArray _mt[243] this[304326]) array[300254] lastArrayCapacity[300219])
    (491125 'end of statement' array[300254] lastArrayCapacity[300219])
    unknown call_tmp[745536] "expr temp" "maybe param" "maybe type" "temp"
    (745539 'move' call_tmp[745536](405709 call _totalCapacity _mt[243] this[304326]))
    (300274 call -= call_tmp[745536] lastArrayCapacity[300219])
    (491128 'end of statement' lastArrayCapacity[300219])
    (300279 call = array[300254] nil[44])
    (491130 'end of statement' array[300254])
    label _end__maybeReleaseMem[539241]
    (539243 return _void[55])
  }
  function list[304220](?)._expand[300290](arg _mt[304332]:_MT[238], ref arg this[304330]:list[304220](?), arg idx[300287]:int(64)[13], arg shift[300294]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745543] "expr temp" "maybe param" "maybe type" "temp"
    (745546 'move' call_tmp[745543](300302 call(405715 call (partial) _withinBounds _mt[243] this[304330]) idx[300287]))
    (300304 call _sanity call_tmp[745543])
    (491132 'end of statement')
    unknown call_tmp[745548] "expr temp" "maybe param" "maybe type" "temp"
    (745551 'move' call_tmp[745548](300309 call <= shift[300294] 0))
    unknown call_tmp[745553] "expr temp" "maybe param" "maybe type" "temp"
    (745556 'move' call_tmp[745553](300313 call _cond_test call_tmp[745548]))
    if call_tmp[745553]
    {
      gotoReturn _end__expand[539249] _end__expand[539249]
    }
    const tmp[300417] "const" "temp"
    unknown call_tmp[745558] "expr temp" "maybe param" "maybe type" "temp"
    (745561 'move' call_tmp[745558](300414 '_wide_get_locale' this[304330]))
    (300419 'move' tmp[300417](300415 'deref' call_tmp[745558]))
    {
      {
        (300322 call(405724 call (partial) _maybeAcquireMem _mt[243] this[304330]) shift[300294])
        (491134 'end of statement')
        {
          unknown _indexOfInterest[300364] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300365] "expr temp" "temp"
          unknown call_tmp[745567] "expr temp" "maybe param" "maybe type" "temp"
          (745570 'move' call_tmp[745567](405752 call _size _mt[243] this[304330]))
          unknown call_tmp[745572] "expr temp" "maybe param" "maybe type" "temp"
          (745575 'move' call_tmp[745572](300388 call - call_tmp[745567] 1))
          unknown call_tmp[745577] "expr temp" "maybe param" "maybe type" "temp"
          (745580 'move' call_tmp[745577](300384 call - 1))
          unknown call_tmp[745582] "expr temp" "maybe param" "maybe type" "temp"
          (745585 'move' call_tmp[745582](300391 call chpl_direct_range_iter idx[300287] call_tmp[745572] call_tmp[745577]))
          (300374 'move' _iterator[300365](300372 call _getIterator call_tmp[745582]))
          Defer
          {
            {
              (300407 call _freeIterator _iterator[300365])
            }
          }
          { scopeless type
            (300396 'move' _indexOfInterest[300364](300393 call iteratorIndex _iterator[300365]))
          }
          ForLoop[300366]
          {
            unknown i[300400] "index var" "insert auto destroy"
            (491136 'end of statement')
            (300402 'move' i[300400] _indexOfInterest[300364])
            (491137 'end of statement' i[300400])
            {
              unknown src[300342] "dead at end of block" "ref var"
              unknown call_tmp[745589] "expr temp" "maybe param" "maybe type" "temp"
              (745592 'move' call_tmp[745589](300341 call(405731 call (partial) _getRef _mt[243] this[304330]) i[300400]))
              (549922 'move' src[300342](549921 'addr of' call_tmp[745589]))
              (300345 'end of statement')
              unknown dst[300354] "dead at end of block" "ref var"
              unknown call_tmp[745596] "expr temp" "maybe param" "maybe type" "temp"
              (745599 'move' call_tmp[745596](300350 call + i[300400] shift[300294]))
              unknown call_tmp[745601] "expr temp" "maybe param" "maybe type" "temp"
              (745604 'move' call_tmp[745601](300353 call(405736 call (partial) _getRef _mt[243] this[304330]) call_tmp[745596]))
              (549925 'move' dst[300354](549924 'addr of' call_tmp[745601]))
              (300357 'end of statement' i[300400] i[300400])
              (300362 call(405744 call (partial) _move _mt[243] this[304330]) src[300342] dst[300354])
              (491141 'end of statement' src[300342] dst[300354])
            }
            label _continueLabel[300369]
            _indexOfInterest[300364]
            _iterator[300365]
          }
          label _breakLabel[300370]
        }
      }
      (300422 'on block' 0 tmp[300417])
    }
    label _end__expand[539249]
    (539251 return _void[55])
  }
  function list[304220](?)._collapse[300435](arg _mt[304336]:_MT[238], ref arg this[304334]:list[304220](?), arg idx[300432]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745610] "expr temp" "maybe param" "maybe type" "temp"
    (745613 'move' call_tmp[745610](300441 call(405756 call (partial) _withinBounds _mt[243] this[304334]) idx[300432]))
    (300443 call _sanity call_tmp[745610])
    (491145 'end of statement')
    unknown call_tmp[745617] "expr temp" "maybe param" "maybe type" "temp"
    (745620 'move' call_tmp[745617](405763 call _size _mt[243] this[304334]))
    unknown call_tmp[745622] "expr temp" "maybe param" "maybe type" "temp"
    (745625 'move' call_tmp[745622](300449 call - call_tmp[745617] 1))
    unknown call_tmp[745627] "expr temp" "maybe param" "maybe type" "temp"
    (745630 'move' call_tmp[745627](300451 call == idx[300432] call_tmp[745622]))
    unknown call_tmp[745632] "expr temp" "maybe param" "maybe type" "temp"
    (745635 'move' call_tmp[745632](300473 call _cond_test call_tmp[745627]))
    if call_tmp[745632]
    {
      const tmp[300462] "const" "temp"
      unknown call_tmp[745637] "expr temp" "maybe param" "maybe type" "temp"
      (745640 'move' call_tmp[745637](300459 '_wide_get_locale' this[304334]))
      (300464 'move' tmp[300462](300460 'deref' call_tmp[745637]))
      {
        (300457 call(405770 call (partial) _maybeReleaseMem _mt[243] this[304334]) 1)
        (300467 'on block' 0 tmp[300462])
      }
      gotoReturn _end__collapse[539255] _end__collapse[539255]
    }
    const tmp[300562] "const" "temp"
    unknown call_tmp[745644] "expr temp" "maybe param" "maybe type" "temp"
    (745647 'move' call_tmp[745644](300559 '_wide_get_locale' this[304334]))
    (300564 'move' tmp[300562](300560 'deref' call_tmp[745644]))
    {
      {
        {
          unknown _indexOfInterest[300512] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300513] "expr temp" "temp"
          unknown call_tmp[745651] "expr temp" "maybe param" "maybe type" "temp"
          (745654 'move' call_tmp[745651](405793 call _size _mt[243] this[304334]))
          unknown call_tmp[745656] "expr temp" "maybe param" "maybe type" "temp"
          (745659 'move' call_tmp[745656](300527 call - call_tmp[745651] 2))
          unknown call_tmp[745661] "expr temp" "maybe param" "maybe type" "temp"
          (745664 'move' call_tmp[745661](300530 call chpl_direct_range_iter idx[300432] call_tmp[745656] 1))
          (300522 'move' _iterator[300513](300520 call _getIterator call_tmp[745661]))
          Defer
          {
            {
              (300546 call _freeIterator _iterator[300513])
            }
          }
          { scopeless type
            (300535 'move' _indexOfInterest[300512](300532 call iteratorIndex _iterator[300513]))
          }
          ForLoop[300514]
          {
            unknown i[300539] "index var" "insert auto destroy"
            (491149 'end of statement')
            (300541 'move' i[300539] _indexOfInterest[300512])
            (491150 'end of statement' i[300539])
            {
              unknown src[300493] "dead at end of block" "ref var"
              unknown call_tmp[745668] "expr temp" "maybe param" "maybe type" "temp"
              (745671 'move' call_tmp[745668](300489 call + i[300539] 1))
              unknown call_tmp[745673] "expr temp" "maybe param" "maybe type" "temp"
              (745676 'move' call_tmp[745673](300492 call(405775 call (partial) _getRef _mt[243] this[304334]) call_tmp[745668]))
              (549928 'move' src[300493](549927 'addr of' call_tmp[745673]))
              (300496 'end of statement')
              unknown dst[300502] "dead at end of block" "ref var"
              unknown call_tmp[745680] "expr temp" "maybe param" "maybe type" "temp"
              (745683 'move' call_tmp[745680](300501 call(405780 call (partial) _getRef _mt[243] this[304334]) i[300539]))
              (549931 'move' dst[300502](549930 'addr of' call_tmp[745680]))
              (300505 'end of statement' i[300539] i[300539])
              (300510 call(405785 call (partial) _move _mt[243] this[304334]) src[300493] dst[300502])
              (491154 'end of statement' src[300493] dst[300502])
            }
            label _continueLabel[300517]
            _indexOfInterest[300512]
            _iterator[300513]
          }
          label _breakLabel[300518]
        }
        (300557 call(405797 call (partial) _maybeReleaseMem _mt[243] this[304334]) 1)
      }
      (300567 'on block' 0 tmp[300562])
    }
    label _end__collapse[539255]
    (539257 return _void[55])
  }
  function list[304220](?)._appendByRef[300580](arg _mt[304340]:_MT[238], ref arg this[304338]:list[304220](?), ref arg x[300577] :
  (405802 call eltType _mt[243] this[304338])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300585 call(405806 call (partial) _maybeAcquireMem _mt[243] this[304338]) 1)
    (491159 'end of statement')
    unknown src[300589] "dead at end of block" "ref var"
    (549934 'move' src[300589](549933 'addr of' x[300577]))
    (300592 'end of statement')
    unknown dst[300597] "dead at end of block" "ref var"
    unknown call_tmp[745697] "expr temp" "maybe param" "maybe type" "temp"
    (745700 'move' call_tmp[745697](405816 call _size _mt[243] this[304338]))
    unknown call_tmp[745702] "expr temp" "maybe param" "maybe type" "temp"
    (745705 'move' call_tmp[745702](300596 call(405811 call (partial) _getRef _mt[243] this[304338]) call_tmp[745697]))
    (549937 'move' dst[300597](549936 'addr of' call_tmp[745702]))
    (300600 'end of statement')
    (300605 call(405820 call (partial) _move _mt[243] this[304338]) src[300589] dst[300597])
    (491160 'end of statement' src[300589] dst[300597])
    unknown call_tmp[745711] "expr temp" "maybe param" "maybe type" "temp"
    (745714 'move' call_tmp[745711](405827 call _size _mt[243] this[304338]))
    (300609 call += call_tmp[745711] 1)
    (539261 return _void[55])
  }
  function list[304220](?).append[300623](arg _mt[304344]:_MT[238], ref arg this[304342]:list[304220](?), in arg x[300620] :
  (300617 call eltType _mt[243] this[304342])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300633 call(405835 call (partial) _enter _mt[243] this[304342]))
    (491164 'end of statement')
    (300639 call(405841 call (partial) _appendByRef _mt[243] this[304342]) x[300620])
    (491165 'end of statement')
    (300643 call(405846 call (partial) _leave _mt[243] this[304342]))
    (539263 return _void[55])
  }
  {
    (300629 call <(300626 'lifetime_of' this[304342])(300628 'lifetime_of' x[300620]))
  }
  function list[304220](?).contains[300654](arg _mt[304348]:_MT[238], const arg this[304346]:list[304220](?), arg x[300651] :
  (405851 call eltType _mt[243] this[304346])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539267] "RVV" "temp"
    unknown result[300658] "dead at end of block" "insert auto destroy"
    (549939 'init var' result[300658] 0)
    (300661 'end of statement')
    const tmp[300728] "const" "temp"
    unknown call_tmp[745726] "expr temp" "maybe param" "maybe type" "temp"
    (745729 'move' call_tmp[745726](300725 '_wide_get_locale' this[304346]))
    (300730 'move' tmp[300728](300726 'deref' call_tmp[745726]))
    {
      {
        (300666 call(405856 call (partial) _enter _mt[243] this[304346]))
        (491167 'end of statement')
        {
          unknown _indexOfInterest[300688] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300689] "expr temp" "temp"
          (300698 'move' _iterator[300689](300696 call _getIterator this[304346]))
          Defer
          {
            {
              (300714 call _freeIterator _iterator[300689])
            }
          }
          { scopeless type
            (300703 'move' _indexOfInterest[300688](300700 call iteratorIndex _iterator[300689]))
          }
          ForLoop[300690]
          {
            unknown item[300707] "index var" "insert auto destroy"
            (491169 'end of statement')
            (300709 'move' item[300707] _indexOfInterest[300688])
            (491170 'end of statement' item[300707])
            unknown call_tmp[745733] "expr temp" "maybe param" "maybe type" "temp"
            (745736 'move' call_tmp[745733](300673 call == item[300707] x[300651]))
            unknown call_tmp[745738] "expr temp" "maybe param" "maybe type" "temp"
            (745741 'move' call_tmp[745738](300684 call _cond_test call_tmp[745733]))
            if call_tmp[745738]
            {
              (300677 call = result[300658] 1)
              (491172 'end of statement' result[300658])
              break _breakLabel[300694] _breakLabel[300694]
            }
            label _continueLabel[300693]
            _indexOfInterest[300688]
            _iterator[300689]
          }
          label _breakLabel[300694]
        }
        (300723 call(405864 call (partial) _leave _mt[243] this[304346]))
      }
      (300733 'on block' 0 tmp[300728])
    }
    (539273 'move' ret[539267](539272 'coerce' result[300658] bool[10]))
    gotoReturn _end_contains[539265] _end_contains[539265]
    (491175 'end of statement' result[300658])
    label _end_contains[539265]
    (539269 return ret[539267])
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?).first[300744](arg _mt[304352]:_MT[238], ref arg this[304350]:list[304220](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539279] "RVV" "temp"
    (300748 call(405869 call (partial) _enter _mt[243] this[304350]))
    (491177 'end of statement')
    unknown tmp[434897] "maybe param" "temp"
    (434908 'move' tmp[434897] 1)
    unknown call_tmp[745747] "expr temp" "maybe param" "maybe type" "temp"
    (745750 'move' call_tmp[745747](434910 call _cond_invalid tmp[434897]))
    if call_tmp[745747]
    {
      (434913 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581020] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581021] "maybe param" "temp"
    unknown call_tmp[745752] "expr temp" "maybe param" "maybe type" "temp"
    (745755 'move' call_tmp[745752](434898 call isTrue tmp[434897]))
    (581026 'move' tmp[581021](581024 call _cond_test call_tmp[745752]))
    if tmp[581021]
    {
      unknown tmp[581028] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745759] "expr temp" "maybe param" "maybe type" "temp"
      (745762 'move' call_tmp[745759](405875 call _size _mt[243] this[304350]))
      unknown call_tmp[745764] "expr temp" "maybe param" "maybe type" "temp"
      (745767 'move' call_tmp[745764](300754 call == call_tmp[745759] 0))
      (581030 'move' tmp[581028](434901 call isTrue call_tmp[745764]))
      (581035 'move' tmp[581020](581032 '_paramFoldLogical' tmp[581021] tmp[581028]))
    }
    {
      (581040 'move' tmp[581020](581037 '_paramFoldLogical' tmp[581021] 0))
    }
    unknown call_tmp[745769] "expr temp" "maybe param" "maybe type" "temp"
    (745772 'move' call_tmp[745769](300784 call _cond_test tmp[581020]))
    if call_tmp[745769]
    {
      (300760 call(405879 call (partial) _leave _mt[243] this[304350]))
      (491179 'end of statement')
      (300782 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300792] "dead at end of block" "ref var"
    unknown call_tmp[745778] "expr temp" "maybe param" "maybe type" "temp"
    (745781 'move' call_tmp[745778](300791 call(405883 call (partial) _getRef _mt[243] this[304350]) 0))
    (549942 'move' result[300792](549941 'addr of' call_tmp[745778]))
    (300795 'end of statement')
    (300798 call(405887 call (partial) _leave _mt[243] this[304350]))
    (491181 'end of statement')
    (539284 'move' ret[539279](539283 'addr of' result[300792]))
    gotoReturn _end_first[539277] _end_first[539277]
    (491182 'end of statement' result[300792])
    label _end_first[539277]
    (539281 return ret[539279])
  }
  function list[304220](?).last[300807](arg _mt[304356]:_MT[238], ref arg this[304354]:list[304220](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539290] "RVV" "temp"
    (300811 call(405892 call (partial) _enter _mt[243] this[304354]))
    (491184 'end of statement')
    unknown tmp[434918] "maybe param" "temp"
    (434929 'move' tmp[434918] 1)
    unknown call_tmp[745787] "expr temp" "maybe param" "maybe type" "temp"
    (745790 'move' call_tmp[745787](434931 call _cond_invalid tmp[434918]))
    if call_tmp[745787]
    {
      (434934 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581047] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581048] "maybe param" "temp"
    unknown call_tmp[745792] "expr temp" "maybe param" "maybe type" "temp"
    (745795 'move' call_tmp[745792](434919 call isTrue tmp[434918]))
    (581053 'move' tmp[581048](581051 call _cond_test call_tmp[745792]))
    if tmp[581048]
    {
      unknown tmp[581055] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745799] "expr temp" "maybe param" "maybe type" "temp"
      (745802 'move' call_tmp[745799](405898 call _size _mt[243] this[304354]))
      unknown call_tmp[745804] "expr temp" "maybe param" "maybe type" "temp"
      (745807 'move' call_tmp[745804](300817 call == call_tmp[745799] 0))
      (581057 'move' tmp[581055](434922 call isTrue call_tmp[745804]))
      (581062 'move' tmp[581047](581059 '_paramFoldLogical' tmp[581048] tmp[581055]))
    }
    {
      (581067 'move' tmp[581047](581064 '_paramFoldLogical' tmp[581048] 0))
    }
    unknown call_tmp[745809] "expr temp" "maybe param" "maybe type" "temp"
    (745812 'move' call_tmp[745809](300847 call _cond_test tmp[581047]))
    if call_tmp[745809]
    {
      (300823 call(405902 call (partial) _leave _mt[243] this[304354]))
      (491186 'end of statement')
      (300845 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300858] "dead at end of block" "ref var"
    unknown call_tmp[745820] "expr temp" "maybe param" "maybe type" "temp"
    (745823 'move' call_tmp[745820](405911 call _size _mt[243] this[304354]))
    unknown call_tmp[745825] "expr temp" "maybe param" "maybe type" "temp"
    (745828 'move' call_tmp[745825](300854 call - call_tmp[745820] 1))
    unknown call_tmp[745830] "expr temp" "maybe param" "maybe type" "temp"
    (745833 'move' call_tmp[745830](300857 call(405906 call (partial) _getRef _mt[243] this[304354]) call_tmp[745825]))
    (549945 'move' result[300858](549944 'addr of' call_tmp[745830]))
    (300861 'end of statement')
    (300864 call(405915 call (partial) _leave _mt[243] this[304354]))
    (491188 'end of statement')
    (539295 'move' ret[539290](539294 'addr of' result[300858]))
    gotoReturn _end_last[539288] _end_last[539288]
    (491189 'end of statement' result[300858])
    label _end_last[539288]
    (539292 return ret[539290])
  }
  function list[304220](?)._extendGeneric[300875](arg _mt[304360]:_MT[238], ref arg this[304358]:list[304220](?), arg collection[300873]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[300928] "const" "temp"
    unknown call_tmp[745837] "expr temp" "maybe param" "maybe type" "temp"
    (745840 'move' call_tmp[745837](300925 '_wide_get_locale' this[304358]))
    (300930 'move' tmp[300928](300926 'deref' call_tmp[745837]))
    {
      {
        {
          unknown _indexOfInterest[300891] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300892] "expr temp" "temp"
          (300901 'move' _iterator[300892](300899 call _getIterator collection[300873]))
          Defer
          {
            {
              (300917 call _freeIterator _iterator[300892])
            }
          }
          { scopeless type
            (300906 'move' _indexOfInterest[300891](300903 call iteratorIndex _iterator[300892]))
          }
          ForLoop[300893]
          {
            unknown item[300910] "index var" "insert auto destroy"
            (491192 'end of statement')
            (300912 'move' item[300910] _indexOfInterest[300891])
            (491193 'end of statement' item[300910])
            {
              unknown cpy[300881] "dead at end of block" "no auto destroy"
              (549947 'init var' cpy[300881] item[300910])
              (300884 'end of statement' item[300910])
              (300889 call(405923 call (partial) _appendByRef _mt[243] this[304358]) cpy[300881])
              (491196 'end of statement' cpy[300881])
            }
            label _continueLabel[300896]
            _indexOfInterest[300891]
            _iterator[300892]
          }
          label _breakLabel[300897]
        }
      }
      (300933 'on block' 0 tmp[300928])
    }
    (539299 return _void[55])
  }
  function list[304220](?).extend[300950](arg _mt[304364]:_MT[238], ref arg this[304362]:list[304220](?), arg other[300947]:list[304220](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300976] "const" "temp"
    unknown call_tmp[745844] "expr temp" "maybe param" "maybe type" "temp"
    (745847 'move' call_tmp[745844](300973 '_wide_get_locale' this[304362]))
    (300978 'move' tmp[300976](300974 'deref' call_tmp[745844]))
    {
      {
        (300961 call(405937 call (partial) _enter _mt[243] this[304362]))
        (491198 'end of statement')
        (300967 call(405943 call (partial) _extendGeneric _mt[243] this[304362]) other[300947])
        (491199 'end of statement')
        (300971 call(405948 call (partial) _leave _mt[243] this[304362]))
      }
      (300981 'on block' 0 tmp[300976])
    }
    (539301 return _void[55])
  }
  where {
    unknown call_tmp[745857] "expr temp" "maybe param" "maybe type" "temp"
    (745860 'move' call_tmp[745857](467872 call eltType _mt[243] this[304362]))
    unknown call_tmp[745862] "expr temp" "maybe param" "maybe type" "temp"
    (745865 'move' call_tmp[745862](467868 'query' other[300947] 1))
    unknown call_tmp[745867] "expr temp" "maybe param" "maybe type" "temp"
    (745870 'move' call_tmp[745867](467875 call == call_tmp[745857] call_tmp[745862]))
    (467879 call & 1 call_tmp[745867])
  }
  {
    (300956 call <(300953 'lifetime_of' this[304362])(300955 'lifetime_of' other[300947]))
  }
  function list[304220](?).extend[300999](arg _mt[304368]:_MT[238], ref arg this[304366]:list[304220](?), arg other[300996]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[301025] "const" "temp"
    unknown call_tmp[745872] "expr temp" "maybe param" "maybe type" "temp"
    (745875 'move' call_tmp[745872](301022 '_wide_get_locale' this[304366]))
    (301027 'move' tmp[301025](301023 'deref' call_tmp[745872]))
    {
      {
        (301010 call(405960 call (partial) _enter _mt[243] this[304366]))
        (491201 'end of statement')
        (301016 call(405964 call (partial) _extendGeneric _mt[243] this[304366]) other[300996])
        (491202 'end of statement')
        (301020 call(405969 call (partial) _leave _mt[243] this[304366]))
      }
      (301030 'on block' 0 tmp[301025])
    }
    (539303 return _void[55])
  }
  where {
    unknown call_tmp[745885] "expr temp" "maybe param" "maybe type" "temp"
    (745888 'move' call_tmp[745885](405953 call eltType _mt[243] this[304366]))
    unknown call_tmp[745892] "expr temp" "maybe param" "maybe type" "temp"
    (745895 'move' call_tmp[745892](467891 call eltType _mt[243] other[300996]))
    unknown call_tmp[745897] "expr temp" "maybe param" "maybe type" "temp"
    (745900 'move' call_tmp[745897](467895 call == call_tmp[745885] call_tmp[745892]))
    (467889 call & 1 call_tmp[745897])
  }
  {
    (301005 call <(301002 'lifetime_of' this[304366])(301004 'lifetime_of' other[300996]))
  }
  function list[304220](?).extend[301050](arg _mt[304372]:_MT[238], ref arg this[304370]:list[304220](?), arg other[301047]:range[64319](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[745902] "expr temp" "maybe param" "maybe type" "temp"
    (745905 'move' call_tmp[745902](301061 call isBoundedRange other[301047]))
    unknown call_tmp[745907] "expr temp" "maybe param" "maybe type" "temp"
    (745910 'move' call_tmp[745907](301062 call ! call_tmp[745902]))
    unknown call_tmp[745912] "expr temp" "maybe param" "maybe type" "temp"
    (745915 'move' call_tmp[745912](301134 call _cond_test call_tmp[745907]))
    if call_tmp[745912]
    {
      unknown call_tmp[745917] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745920 'move' call_tmp[745917](301065 'typeof' this[304370]))
      unknown call_tmp[745922] "maybe param" "maybe type" "temp"
      (745925 'move' call_tmp[745922](301067 call _cast string[26] call_tmp[745917]))
      unknown e[301069] "dead at end of block" "param"
      (549949 'init var' e[301069] call_tmp[745922])
      (301072 'end of statement')
      unknown call_tmp[745927] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745930 'move' call_tmp[745927](301075 'typeof' other[301047]))
      unknown call_tmp[745932] "maybe param" "maybe type" "temp"
      (745935 'move' call_tmp[745932](301077 call _cast string[26] call_tmp[745927]))
      unknown f[301079] "dead at end of block" "param"
      (549951 'init var' f[301079] call_tmp[745932])
      (301082 'end of statement')
      unknown call_tmp[745937] "expr temp" "maybe param" "maybe type" "temp"
      (745940 'move' call_tmp[745937](301101 call + "Cannot extend " e[301069]))
      unknown call_tmp[745942] "expr temp" "maybe param" "maybe type" "temp"
      (745945 'move' call_tmp[745942](301120 call + call_tmp[745937] " with unbounded "))
      unknown call_tmp[745947] "maybe param" "maybe type" "temp"
      (745950 'move' call_tmp[745947](301123 call + call_tmp[745942] f[301079]))
      unknown msg[301125] "dead at end of block" "param"
      (549953 'init var' msg[301125] call_tmp[745947])
      (301128 'end of statement')
      (301132 call compilerError msg[301125])
    }
    const tmp[301157] "const" "temp"
    unknown call_tmp[745952] "expr temp" "maybe param" "maybe type" "temp"
    (745955 'move' call_tmp[745952](301154 '_wide_get_locale' this[304370]))
    (301159 'move' tmp[301157](301155 'deref' call_tmp[745952]))
    {
      {
        (301142 call(405988 call (partial) _enter _mt[243] this[304370]))
        (491205 'end of statement')
        (301148 call(405992 call (partial) _extendGeneric _mt[243] this[304370]) other[301047])
        (491206 'end of statement')
        (301152 call(405997 call (partial) _leave _mt[243] this[304370]))
      }
      (301162 'on block' 0 tmp[301157])
    }
    (539305 return _void[55])
  }
  where {
    unknown call_tmp[745965] "expr temp" "maybe param" "maybe type" "temp"
    (745968 'move' call_tmp[745965](467904 call eltType _mt[243] this[304370]))
    unknown call_tmp[745970] "expr temp" "maybe param" "maybe type" "temp"
    (745973 'move' call_tmp[745970](467900 'query' other[301047] 1))
    unknown call_tmp[745975] "expr temp" "maybe param" "maybe type" "temp"
    (745978 'move' call_tmp[745975](467907 call == call_tmp[745965] call_tmp[745970]))
    (467911 call & 1 call_tmp[745975])
  }
  {
    (301056 call <(301053 'lifetime_of' this[304370])(301055 'lifetime_of' other[301047]))
  }
  function list[304220](?).insert[301174](arg _mt[304376]:_MT[238], ref arg this[304374]:list[304220](?), arg idx[301171]:int(64)[13], in arg x[301177] :
  (406002 call eltType _mt[243] this[304374])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539309] "RVV" "temp"
    unknown result[301188] "dead at end of block" "insert auto destroy"
    (549955 'init var' result[301188] 0)
    (301191 'end of statement')
    const tmp[301269] "const" "temp"
    unknown call_tmp[745982] "expr temp" "maybe param" "maybe type" "temp"
    (745985 'move' call_tmp[745982](301266 '_wide_get_locale' this[304374]))
    (301271 'move' tmp[301269](301267 'deref' call_tmp[745982]))
    {
      {
        (301196 call(406009 call (partial) _enter _mt[243] this[304374]))
        (491208 'end of statement')
        unknown call_tmp[745991] "expr temp" "maybe param" "maybe type" "temp"
        (745994 'move' call_tmp[745991](406015 call _size _mt[243] this[304374]))
        unknown call_tmp[745996] "expr temp" "maybe param" "maybe type" "temp"
        (745999 'move' call_tmp[745996](301201 call == idx[301171] call_tmp[745991]))
        unknown call_tmp[746001] "expr temp" "maybe param" "maybe type" "temp"
        (746004 'move' call_tmp[746001](301257 call _cond_test call_tmp[745996]))
        if call_tmp[746001]
        {
          (301206 call(406019 call (partial) _appendByRef _mt[243] this[304374]) x[301177])
          (491209 'end of statement')
          (301211 call = result[301188] 1)
          (491210 'end of statement' result[301188])
        }
        {
          unknown call_tmp[746010] "expr temp" "maybe param" "maybe type" "temp"
          (746013 'move' call_tmp[746010](301217 call(406025 call (partial) _withinBounds _mt[243] this[304374]) idx[301171]))
          unknown call_tmp[746015] "expr temp" "maybe param" "maybe type" "temp"
          (746018 'move' call_tmp[746015](301253 call _cond_test call_tmp[746010]))
          if call_tmp[746015]
          {
            (301221 call(406032 call (partial) _expand _mt[243] this[304374]) idx[301171])
            (491212 'end of statement')
            unknown src[301225] "dead at end of block" "ref var"
            (549958 'move' src[301225](549957 'addr of' x[301177]))
            (301228 'end of statement')
            unknown dst[301233] "dead at end of block" "ref var"
            unknown call_tmp[746024] "expr temp" "maybe param" "maybe type" "temp"
            (746027 'move' call_tmp[746024](301232 call(406038 call (partial) _getRef _mt[243] this[304374]) idx[301171]))
            (549961 'move' dst[301233](549960 'addr of' call_tmp[746024]))
            (301236 'end of statement')
            (301241 call(406043 call (partial) _move _mt[243] this[304374]) src[301225] dst[301233])
            (491213 'end of statement' src[301225] dst[301233])
            unknown call_tmp[746033] "expr temp" "maybe param" "maybe type" "temp"
            (746036 'move' call_tmp[746033](406050 call _size _mt[243] this[304374]))
            (301245 call += call_tmp[746033] 1)
            (491216 'end of statement')
            (301250 call = result[301188] 1)
            (491217 'end of statement' result[301188])
          }
        }
        (301264 call(406055 call (partial) _leave _mt[243] this[304374]))
      }
      (301274 'on block' 0 tmp[301269])
    }
    unknown call_tmp[746040] "expr temp" "maybe param" "maybe type" "temp"
    (746043 'move' call_tmp[746040](301278 call ! result[301188]))
    unknown call_tmp[746045] "expr temp" "maybe param" "maybe type" "temp"
    (746048 'move' call_tmp[746045](301285 call _cond_test call_tmp[746040]))
    if call_tmp[746045]
    {
      (301283 call(406062 call (partial) _destroy _mt[243] this[304374]) x[301177])
    }
    (539315 'move' ret[539309](539314 'coerce' result[301188] bool[10]))
    gotoReturn _end_insert[539307] _end_insert[539307]
    (491221 'end of statement' result[301188])
    label _end_insert[539307]
    (539311 return ret[539309])
  }
  {
    (301185 call <(301182 'lifetime_of' this[304374])(301184 'lifetime_of' x[301177]))
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?)._insertGenericKnownSize[301303](arg _mt[304380]:_MT[238], ref arg this[304378]:list[304220](?), arg idx[301300]:int(64)[13], arg items[301305]:_any[178](?), arg size[301308]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539321] "RVV" "temp"
    unknown result[301313] "dead at end of block" "insert auto destroy"
    (549963 'init var' result[301313] 0)
    (301316 'end of statement')
    unknown call_tmp[746052] "expr temp" "maybe param" "maybe type" "temp"
    (746055 'move' call_tmp[746052](301321 call >= size[301308] 0))
    (301324 call _sanity call_tmp[746052])
    (491223 'end of statement')
    unknown call_tmp[746057] "expr temp" "maybe param" "maybe type" "temp"
    (746060 'move' call_tmp[746057](301328 call == size[301308] 0))
    unknown call_tmp[746062] "expr temp" "maybe param" "maybe type" "temp"
    (746065 'move' call_tmp[746062](301333 call _cond_test call_tmp[746057]))
    if call_tmp[746062]
    {
      (539327 'move' ret[539321](539326 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539319] _end__insertGenericKnownSize[539319]
    }
    const tmp[301458] "const" "temp"
    unknown call_tmp[746067] "expr temp" "maybe param" "maybe type" "temp"
    (746070 'move' call_tmp[746067](301455 '_wide_get_locale' this[304378]))
    (301460 'move' tmp[301458](301456 'deref' call_tmp[746067]))
    {
      {
        unknown call_tmp[746074] "expr temp" "maybe param" "maybe type" "temp"
        (746077 'move' call_tmp[746074](406073 call _size _mt[243] this[304378]))
        unknown call_tmp[746079] "expr temp" "maybe param" "maybe type" "temp"
        (746082 'move' call_tmp[746079](301341 call == idx[301300] call_tmp[746074]))
        unknown call_tmp[746084] "expr temp" "maybe param" "maybe type" "temp"
        (746087 'move' call_tmp[746084](301449 call _cond_test call_tmp[746079]))
        if call_tmp[746084]
        {
          (301346 call(406077 call (partial) _extendGeneric _mt[243] this[304378]) items[301305])
          (491225 'end of statement')
          (301351 call = result[301313] 1)
          (491226 'end of statement' result[301313])
        }
        {
          unknown call_tmp[746093] "expr temp" "maybe param" "maybe type" "temp"
          (746096 'move' call_tmp[746093](301357 call(406083 call (partial) _withinBounds _mt[243] this[304378]) idx[301300]))
          unknown call_tmp[746098] "expr temp" "maybe param" "maybe type" "temp"
          (746101 'move' call_tmp[746098](301445 call _cond_test call_tmp[746093]))
          if call_tmp[746098]
          {
            (301362 call(406088 call (partial) _expand _mt[243] this[304378]) idx[301300] size[301308])
            (491228 'end of statement')
            unknown i[301366] "dead at end of block" "insert auto destroy"
            (549965 'init var' i[301366] idx[301300])
            (301369 'end of statement')
            {
              unknown _indexOfInterest[301407] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301408] "expr temp" "temp"
              (301417 'move' _iterator[301408](301415 call _getIterator items[301305]))
              Defer
              {
                {
                  (301433 call _freeIterator _iterator[301408])
                }
              }
              { scopeless type
                (301422 'move' _indexOfInterest[301407](301419 call iteratorIndex _iterator[301408]))
              }
              ForLoop[301409]
              {
                unknown x[301426] "index var" "insert auto destroy"
                (491230 'end of statement')
                (301428 'move' x[301426] _indexOfInterest[301407])
                (491231 'end of statement' x[301426])
                {
                  unknown cpy[301373] "dead at end of block" "no auto destroy"
                  (549967 'init var' cpy[301373] x[301426])
                  (301376 'end of statement')
                  unknown src[301379] "dead at end of block" "ref var"
                  (549970 'move' src[301379](549969 'addr of' cpy[301373]))
                  (301382 'end of statement')
                  unknown dst[301387] "dead at end of block" "ref var"
                  unknown call_tmp[746107] "expr temp" "maybe param" "maybe type" "temp"
                  (746110 'move' call_tmp[746107](301386 call(406098 call (partial) _getRef _mt[243] this[304378]) i[301366]))
                  (549973 'move' dst[301387](549972 'addr of' call_tmp[746107]))
                  (301390 'end of statement' x[301426] cpy[301373] i[301366])
                  (301395 call(406103 call (partial) _move _mt[243] this[304378]) src[301379] dst[301387])
                  (491236 'end of statement' src[301379] dst[301387])
                  unknown call_tmp[746116] "expr temp" "maybe param" "maybe type" "temp"
                  (746119 'move' call_tmp[746116](406110 call _size _mt[243] this[304378]))
                  (301399 call += call_tmp[746116] 1)
                  (491239 'end of statement')
                  (301404 call += i[301366] 1)
                  (491240 'end of statement' i[301366])
                }
                label _continueLabel[301412]
                _indexOfInterest[301407]
                _iterator[301408]
              }
              label _breakLabel[301413]
            }
            (301442 call = result[301313] 1)
            (491242 'end of statement' result[301313])
          }
        }
      }
      (301463 'on block' 0 tmp[301458])
    }
    (539333 'move' ret[539321](539332 'coerce' result[301313] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539319] _end__insertGenericKnownSize[539319]
    (491244 'end of statement' result[301313])
    label _end__insertGenericKnownSize[539319]
    (539323 return ret[539321])
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?).insert[301478](arg _mt[304384]:_MT[238], ref arg this[304382]:list[304220](?), arg idx[301475]:int(64)[13], arg arr[301486]:_array[133594](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539339] "RVV" "temp"
    unknown result[301497] "dead at end of block" "insert auto destroy"
    (549975 'init var' result[301497] 0)
    (301500 'end of statement')
    const tmp[301528] "const" "temp"
    unknown call_tmp[746121] "expr temp" "maybe param" "maybe type" "temp"
    (746124 'move' call_tmp[746121](301525 '_wide_get_locale' this[304382]))
    (301530 'move' tmp[301528](301526 'deref' call_tmp[746121]))
    {
      {
        (301505 call(406125 call (partial) _enter _mt[243] this[304382]))
        (491246 'end of statement')
        unknown call_tmp[746132] "expr temp" "maybe param" "maybe type" "temp"
        (746135 'move' call_tmp[746132](301514 call size _mt[243] arr[301486]))
        unknown call_tmp[746137] "expr temp" "maybe param" "maybe type" "temp"
        (746140 'move' call_tmp[746137](301517 call(406132 call (partial) _insertGenericKnownSize _mt[243] this[304382]) idx[301475] arr[301486] call_tmp[746132]))
        (301518 call = result[301497] call_tmp[746137])
        (491247 'end of statement' result[301497])
        (301523 call(406138 call (partial) _leave _mt[243] this[304382]))
      }
      (301533 'on block' 0 tmp[301528])
    }
    (539345 'move' ret[539339](539344 'coerce' result[301497] bool[10]))
    gotoReturn _end_insert[539337] _end_insert[539337]
    (491250 'end of statement' result[301497])
    label _end_insert[539337]
    (539341 return ret[539339])
  }
  where {
    unknown call_tmp[746146] "expr temp" "maybe param" "maybe type" "temp"
    (746149 'move' call_tmp[746146](406118 call eltType _mt[243] this[304382]))
    unknown call_tmp[746153] "expr temp" "maybe param" "maybe type" "temp"
    (746156 'move' call_tmp[746153](467926 call eltType _mt[243] arr[301486]))
    unknown call_tmp[746158] "expr temp" "maybe param" "maybe type" "temp"
    (746161 'move' call_tmp[746158](467930 call == call_tmp[746146] call_tmp[746153]))
    (467924 call & 1 call_tmp[746158])
  }
  {
    (301494 call <(301491 'lifetime_of' this[304382])(301493 'lifetime_of' arr[301486]))
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?).insert[301549](arg _mt[304388]:_MT[238], ref arg this[304386]:list[304220](?), arg idx[301546]:int(64)[13], arg lst[301555]:list[304220](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539351] "RVV" "temp"
    unknown result[301566] "dead at end of block" "insert auto destroy"
    (549977 'init var' result[301566] 0)
    (301569 'end of statement')
    unknown call_tmp[746165] "maybe param" "maybe type" "temp"
    (746168 'move' call_tmp[746165](301572 call size _mt[243] lst[301555]))
    const size[301575] "dead at end of block" "const" "insert auto destroy"
    (549979 'init var' size[301575] call_tmp[746165])
    (301578 'end of statement')
    const tmp[301602] "const" "temp"
    unknown call_tmp[746170] "expr temp" "maybe param" "maybe type" "temp"
    (746173 'move' call_tmp[746170](301599 '_wide_get_locale' this[304386]))
    (301604 'move' tmp[301602](301600 'deref' call_tmp[746170]))
    {
      {
        (301582 call(406152 call (partial) _enter _mt[243] this[304386]))
        (491252 'end of statement')
        unknown call_tmp[746179] "expr temp" "maybe param" "maybe type" "temp"
        (746182 'move' call_tmp[746179](301591 call(406157 call (partial) _insertGenericKnownSize _mt[243] this[304386]) idx[301546] lst[301555] size[301575]))
        (301592 call = result[301566] call_tmp[746179])
        (491253 'end of statement' result[301566] size[301575])
        (301597 call(406164 call (partial) _leave _mt[243] this[304386]))
      }
      (301607 'on block' 0 tmp[301602])
    }
    (539357 'move' ret[539351](539356 'coerce' result[301566] bool[10]))
    gotoReturn _end_insert[539349] _end_insert[539349]
    (491257 'end of statement' result[301566])
    label _end_insert[539349]
    (539353 return ret[539351])
  }
  where {
    unknown call_tmp[746188] "expr temp" "maybe param" "maybe type" "temp"
    (746191 'move' call_tmp[746188](467939 call eltType _mt[243] this[304386]))
    unknown call_tmp[746193] "expr temp" "maybe param" "maybe type" "temp"
    (746196 'move' call_tmp[746193](467935 'query' lst[301555] 1))
    unknown call_tmp[746198] "expr temp" "maybe param" "maybe type" "temp"
    (746201 'move' call_tmp[746198](467942 call == call_tmp[746188] call_tmp[746193]))
    (467946 call & 1 call_tmp[746198])
  }
  {
    (301563 call <(301560 'lifetime_of' this[304386])(301562 'lifetime_of' lst[301555]))
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?).remove[301623](arg _mt[304392]:_MT[238], ref arg this[304390]:list[304220](?), arg x[301620] :
  (406170 call eltType _mt[243] this[304390]), arg count[301627]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539363] "RVV" "temp"
    unknown result[301633] "dead at end of block" "insert auto destroy"
    (549981 'init var' result[301633] 0)
    (301636 'end of statement')
    const tmp[301873] "const" "temp"
    unknown call_tmp[746205] "expr temp" "maybe param" "maybe type" "temp"
    (746208 'move' call_tmp[746205](301870 '_wide_get_locale' this[304390]))
    (301875 'move' tmp[301873](301871 'deref' call_tmp[746205]))
    {
      {
        unknown src_i[301639] "dead at end of block" "insert auto destroy"
        (549983 'default init var' src_i[301639] int(64)[13])
        unknown dst_i[301643] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746210] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746213 'move' call_tmp[746210](301647 'typeof' src_i[301639]))
        (549985 'default init var' dst_i[301643] call_tmp[746210])
        (301648 'end of statement')
        unknown removed[301651] "dead at end of block" "insert auto destroy"
        (549987 'init var' removed[301651] 0)
        (301654 'end of statement' src_i[301639])
        (301657 call = src_i[301639] 0)
        (491260 'end of statement' src_i[301639])
        (301662 call(406177 call (partial) _enter _mt[243] this[304390]))
        (491262 'end of statement')
        {
          unknown tmp[301704] "temp"
          unknown call_tmp[746219] "expr temp" "maybe param" "maybe type" "temp"
          (746222 'move' call_tmp[746219](406203 call _size _mt[243] this[304390]))
          unknown call_tmp[746224] "expr temp" "maybe param" "maybe type" "temp"
          (746227 'move' call_tmp[746224](301725 call < dst_i[301643] call_tmp[746219]))
          (301728 'move' tmp[301704](301723 call _cond_test call_tmp[746224]))
          WhileDo[301709]
          {
            {
              unknown dst[301672] "dead at end of block" "ref var"
              unknown call_tmp[746231] "expr temp" "maybe param" "maybe type" "temp"
              (746234 'move' call_tmp[746231](301671 call(406181 call (partial) _getRef _mt[243] this[304390]) dst_i[301643]))
              (549990 'move' dst[301672](549989 'addr of' call_tmp[746231]))
              (301675 'end of statement' dst_i[301643])
              unknown call_tmp[746236] "expr temp" "maybe param" "maybe type" "temp"
              (746239 'move' call_tmp[746236](301679 call == dst[301672] x[301620]))
              unknown call_tmp[746241] "expr temp" "maybe param" "maybe type" "temp"
              (746244 'move' call_tmp[746241](301695 call _cond_test call_tmp[746236]))
              if call_tmp[746241]
              {
                (301684 call(406188 call (partial) _destroy _mt[243] this[304390]) dst[301672])
                (491264 'end of statement' dst[301672])
                (301689 call += removed[301651] 1)
                (491266 'end of statement' removed[301651])
                break _breakLabel[301708] _breakLabel[301708]
              }
              (301701 call += dst_i[301643] 1)
              (491268 'end of statement' dst_i[301643])
            }
            label _continueLabel[301707]
            unknown call_tmp[746250] "expr temp" "maybe param" "maybe type" "temp"
            (746253 'move' call_tmp[746250](406197 call _size _mt[243] this[304390]))
            unknown call_tmp[746255] "expr temp" "maybe param" "maybe type" "temp"
            (746258 'move' call_tmp[746255](301715 call < dst_i[301643] call_tmp[746250]))
            (301718 'move' tmp[301704](301713 call _cond_test call_tmp[746255]))
            tmp[301704]
          }
          label _breakLabel[301708]
        }
        unknown call_tmp[746260] "expr temp" "maybe param" "maybe type" "temp"
        (746263 'move' call_tmp[746260](301734 call + dst_i[301643] 1))
        (301736 call = src_i[301639] call_tmp[746260])
        (491270 'end of statement' src_i[301639] dst_i[301643])
        {
          unknown tmp[301815] "temp"
          unknown call_tmp[746267] "expr temp" "maybe param" "maybe type" "temp"
          (746270 'move' call_tmp[746267](406247 call _size _mt[243] this[304390]))
          unknown call_tmp[746272] "expr temp" "maybe param" "maybe type" "temp"
          (746275 'move' call_tmp[746272](301836 call < src_i[301639] call_tmp[746267]))
          (301839 'move' tmp[301815](301834 call _cond_test call_tmp[746272]))
          WhileDo[301820]
          {
            {
              unknown src[301747] "dead at end of block" "ref var"
              unknown call_tmp[746279] "expr temp" "maybe param" "maybe type" "temp"
              (746282 'move' call_tmp[746279](301746 call(406209 call (partial) _getRef _mt[243] this[304390]) src_i[301639]))
              (549993 'move' src[301747](549992 'addr of' call_tmp[746279]))
              (301750 'end of statement')
              unknown tmp[434939] "maybe param" "temp"
              unknown tmp[434960] "maybe param" "temp"
              (434971 'move' tmp[434960](301754 call == count[301627] 0))
              unknown call_tmp[746284] "expr temp" "maybe param" "maybe type" "temp"
              (746287 'move' call_tmp[746284](434973 call _cond_invalid tmp[434960]))
              if call_tmp[746284]
              {
                (434976 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[581074] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581075] "maybe param" "temp"
              unknown call_tmp[746289] "expr temp" "maybe param" "maybe type" "temp"
              (746292 'move' call_tmp[746289](434961 call isTrue tmp[434960]))
              (581080 'move' tmp[581075](581078 call _cond_test call_tmp[746289]))
              if tmp[581075]
              {
                (581085 'move' tmp[581074](581082 '_paramFoldLogical' tmp[581075] 1))
              }
              {
                unknown tmp[581087] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746294] "expr temp" "maybe param" "maybe type" "temp"
                (746297 'move' call_tmp[746294](301758 call < removed[301651] count[301627]))
                (581089 'move' tmp[581087](434965 call isTrue call_tmp[746294]))
                (581094 'move' tmp[581074](581091 '_paramFoldLogical' tmp[581075] tmp[581087]))
              }
              (434950 'move' tmp[434939] tmp[581074])
              unknown call_tmp[746299] "expr temp" "maybe param" "maybe type" "temp"
              (746302 'move' call_tmp[746299](434952 call _cond_invalid tmp[434939]))
              if call_tmp[746299]
              {
                (434955 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[581101] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[581102] "maybe param" "temp"
              unknown call_tmp[746304] "expr temp" "maybe param" "maybe type" "temp"
              (746307 'move' call_tmp[746304](434940 call isTrue tmp[434939]))
              (581107 'move' tmp[581102](581105 call _cond_test call_tmp[746304]))
              if tmp[581102]
              {
                unknown tmp[581109] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746309] "expr temp" "maybe param" "maybe type" "temp"
                (746312 'move' call_tmp[746309](301764 call == src[301747] x[301620]))
                (581111 'move' tmp[581109](434943 call isTrue call_tmp[746309]))
                (581116 'move' tmp[581101](581113 '_paramFoldLogical' tmp[581102] tmp[581109]))
              }
              {
                (581121 'move' tmp[581101](581118 '_paramFoldLogical' tmp[581102] 0))
              }
              unknown call_tmp[746314] "expr temp" "maybe param" "maybe type" "temp"
              (746317 'move' call_tmp[746314](301787 call _cond_test tmp[581101]))
              if call_tmp[746314]
              {
                (301771 call(406219 call (partial) _destroy _mt[243] this[304390]) src[301747])
                (491276 'end of statement' src[301747])
                (301776 call += src_i[301639] 1)
                (491278 'end of statement' src_i[301639])
                (301781 call += removed[301651] 1)
                (491280 'end of statement' removed[301651])
                continue _continueLabel[301818] _continueLabel[301818]
              }
              unknown dst[301795] "dead at end of block" "ref var"
              unknown call_tmp[746323] "expr temp" "maybe param" "maybe type" "temp"
              (746326 'move' call_tmp[746323](301794 call(406226 call (partial) _getRef _mt[243] this[304390]) dst_i[301643]))
              (549996 'move' dst[301795](549995 'addr of' call_tmp[746323]))
              (301798 'end of statement' src_i[301639] dst_i[301643])
              (301803 call(406231 call (partial) _move _mt[243] this[304390]) src[301747] dst[301795])
              (491283 'end of statement' src[301747] dst[301795])
              (301807 call += src_i[301639] 1)
              (491286 'end of statement' src_i[301639])
              (301812 call += dst_i[301643] 1)
              (491288 'end of statement' dst_i[301643])
            }
            label _continueLabel[301818]
            unknown call_tmp[746332] "expr temp" "maybe param" "maybe type" "temp"
            (746335 'move' call_tmp[746332](406241 call _size _mt[243] this[304390]))
            unknown call_tmp[746337] "expr temp" "maybe param" "maybe type" "temp"
            (746340 'move' call_tmp[746337](301826 call < src_i[301639] call_tmp[746332]))
            (301829 'move' tmp[301815](301824 call _cond_test call_tmp[746337]))
            tmp[301815]
          }
          label _breakLabel[301819]
        }
        unknown call_tmp[746342] "expr temp" "maybe param" "maybe type" "temp"
        (746345 'move' call_tmp[746342](301857 call _cond_test removed[301651]))
        if call_tmp[746342]
        {
          (301846 call(406252 call (partial) _maybeReleaseMem _mt[243] this[304390]) removed[301651])
          (491290 'end of statement' removed[301651])
          unknown call_tmp[746351] "expr temp" "maybe param" "maybe type" "temp"
          (746354 'move' call_tmp[746351](406258 call _size _mt[243] this[304390]))
          unknown call_tmp[746358] "expr temp" "maybe param" "maybe type" "temp"
          (746361 'move' call_tmp[746358](406263 call _size _mt[243] this[304390]))
          unknown call_tmp[746363] "expr temp" "maybe param" "maybe type" "temp"
          (746366 'move' call_tmp[746363](301852 call - call_tmp[746358] removed[301651]))
          (301854 call = call_tmp[746351] call_tmp[746363])
          (491292 'end of statement' removed[301651])
        }
        (301863 call(406268 call (partial) _leave _mt[243] this[304390]))
        (491294 'end of statement')
        (301867 call = result[301633] removed[301651])
        (491295 'end of statement' result[301633] removed[301651])
      }
      (301878 'on block' 0 tmp[301873])
    }
    (539369 'move' ret[539363](539368 'coerce' result[301633] int(64)[13]))
    gotoReturn _end_remove[539361] _end_remove[539361]
    (491298 'end of statement' result[301633])
    label _end_remove[539361]
    (539365 return ret[539363])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?)._popAtIndex[301893](arg _mt[304396]:_MT[238], ref arg this[304394]:list[304220](?), arg idx[301890]:int(64)[13], arg unlockBeforeHalt[301896] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539375] "RVV" "temp"
    unknown tmp[434981] "maybe param" "temp"
    (434992 'move' tmp[434981] 1)
    unknown call_tmp[746370] "expr temp" "maybe param" "maybe type" "temp"
    (746373 'move' call_tmp[746370](434994 call _cond_invalid tmp[434981]))
    if call_tmp[746370]
    {
      (434997 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581128] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581129] "maybe param" "temp"
    unknown call_tmp[746375] "expr temp" "maybe param" "maybe type" "temp"
    (746378 'move' call_tmp[746375](434982 call isTrue tmp[434981]))
    (581134 'move' tmp[581129](581132 call _cond_test call_tmp[746375]))
    if tmp[581129]
    {
      unknown tmp[581136] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746382] "expr temp" "maybe param" "maybe type" "temp"
      (746385 'move' call_tmp[746382](406282 call _size _mt[243] this[304394]))
      unknown call_tmp[746387] "expr temp" "maybe param" "maybe type" "temp"
      (746390 'move' call_tmp[746387](301903 call <= call_tmp[746382] 0))
      (581138 'move' tmp[581136](434985 call isTrue call_tmp[746387]))
      (581143 'move' tmp[581128](581140 '_paramFoldLogical' tmp[581129] tmp[581136]))
    }
    {
      (581148 'move' tmp[581128](581145 '_paramFoldLogical' tmp[581129] 0))
    }
    unknown call_tmp[746392] "expr temp" "maybe param" "maybe type" "temp"
    (746395 'move' call_tmp[746392](301939 call _cond_test tmp[581128]))
    if call_tmp[746392]
    {
      unknown call_tmp[746397] "expr temp" "maybe param" "maybe type" "temp"
      (746400 'move' call_tmp[746397](301912 call _cond_test unlockBeforeHalt[301896]))
      if call_tmp[746397]
      {
        (301910 call(406287 call (partial) _leave _mt[243] this[304394]))
      }
      (301937 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[435002] "maybe param" "temp"
    (435013 'move' tmp[435002] 1)
    unknown call_tmp[746404] "expr temp" "maybe param" "maybe type" "temp"
    (746407 'move' call_tmp[746404](435015 call _cond_invalid tmp[435002]))
    if call_tmp[746404]
    {
      (435018 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581155] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581156] "maybe param" "temp"
    unknown call_tmp[746409] "expr temp" "maybe param" "maybe type" "temp"
    (746412 'move' call_tmp[746409](435003 call isTrue tmp[435002]))
    (581161 'move' tmp[581156](581159 call _cond_test call_tmp[746409]))
    if tmp[581156]
    {
      unknown tmp[581163] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746416] "expr temp" "maybe param" "maybe type" "temp"
      (746419 'move' call_tmp[746416](301948 call(406292 call (partial) _withinBounds _mt[243] this[304394]) idx[301890]))
      unknown call_tmp[746421] "expr temp" "maybe param" "maybe type" "temp"
      (746424 'move' call_tmp[746421](301949 call ! call_tmp[746416]))
      (581165 'move' tmp[581163](435006 call isTrue call_tmp[746421]))
      (581170 'move' tmp[581155](581167 '_paramFoldLogical' tmp[581156] tmp[581163]))
    }
    {
      (581175 'move' tmp[581155](581172 '_paramFoldLogical' tmp[581156] 0))
    }
    unknown call_tmp[746426] "expr temp" "maybe param" "maybe type" "temp"
    (746429 'move' call_tmp[746426](301996 call _cond_test tmp[581155]))
    if call_tmp[746426]
    {
      unknown call_tmp[746431] "expr temp" "maybe param" "maybe type" "temp"
      (746434 'move' call_tmp[746431](301958 call _cond_test unlockBeforeHalt[301896]))
      if call_tmp[746431]
      {
        (301956 call(406298 call (partial) _leave _mt[243] this[304394]))
      }
      unknown call_tmp[746438] "expr temp" "maybe param" "maybe type" "temp"
      (746441 'move' call_tmp[746438](301983 call _cast string[26] idx[301890]))
      unknown call_tmp[746443] "maybe param" "maybe type" "temp"
      (746446 'move' call_tmp[746443](301985 call + "Index for \"list.pop\" out of bounds: " call_tmp[746438]))
      const msg[301987] "dead at end of block" "const" "insert auto destroy"
      (549998 'init var' msg[301987] call_tmp[746443])
      (301990 'end of statement')
      (301994 call boundsCheckHalt msg[301987])
      (491305 'end of statement' msg[301987])
    }
    unknown item[302004] "dead at end of block" "ref var"
    unknown call_tmp[746450] "expr temp" "maybe param" "maybe type" "temp"
    (746453 'move' call_tmp[746450](302003 call(406304 call (partial) _getRef _mt[243] this[304394]) idx[301890]))
    (550001 'move' item[302004](550000 'addr of' call_tmp[746450]))
    (302007 'end of statement')
    unknown result[302009] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746457] "expr temp" "maybe param" "maybe type" "temp"
    (746460 'move' call_tmp[746457](406310 call eltType _mt[243] this[304394]))
    (550003 'default init var' result[302009] call_tmp[746457])
    (302012 'end of statement')
    (302017 call(406314 call (partial) _move _mt[243] this[304394]) item[302004] result[302009])
    (491307 'end of statement' item[302004] result[302009])
    (302022 call(406322 call (partial) _collapse _mt[243] this[304394]) idx[301890])
    (491310 'end of statement')
    unknown call_tmp[746468] "expr temp" "maybe param" "maybe type" "temp"
    (746471 'move' call_tmp[746468](406328 call _size _mt[243] this[304394]))
    (302026 call -= call_tmp[746468] 1)
    (491311 'end of statement')
    unknown call_tmp[746475] "expr temp" "maybe param" "maybe type" "temp"
    (746478 'move' call_tmp[746475](539380 call eltType _mt[243] this[304394]))
    (539384 'move' ret[539375](539383 'coerce' result[302009] call_tmp[746475]))
    gotoReturn _end__popAtIndex[539373] _end__popAtIndex[539373]
    (491312 'end of statement' result[302009])
    label _end__popAtIndex[539373]
    (539377 return ret[539375])
  }
  { scopeless type
    (406276 call eltType _mt[243] this[304394])
  }
  function list[304220](?).pop[302037](arg _mt[304400]:_MT[238], ref arg this[304398]:list[304220](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539390] "RVV" "temp"
    (302042 call(406338 call (partial) _enter _mt[243] this[304398]))
    (491314 'end of statement')
    unknown call_tmp[746488] "expr temp" "maybe param" "maybe type" "temp"
    (746491 'move' call_tmp[746488](406349 call _size _mt[243] this[304398]))
    unknown call_tmp[746493] "expr temp" "maybe param" "maybe type" "temp"
    (746496 'move' call_tmp[746493](302048 call - call_tmp[746488] 1))
    unknown call_tmp[746498] "maybe param" "maybe type" "temp"
    (746501 'move' call_tmp[746498](302051 call(406344 call (partial) _popAtIndex _mt[243] this[304398]) call_tmp[746493]))
    unknown result[302052] "dead at end of block" "insert auto destroy"
    (550005 'init var' result[302052] call_tmp[746498])
    (302055 'end of statement')
    (302058 call(406353 call (partial) _leave _mt[243] this[304398]))
    (491315 'end of statement')
    unknown call_tmp[746507] "expr temp" "maybe param" "maybe type" "temp"
    (746510 'move' call_tmp[746507](539395 call eltType _mt[243] this[304398]))
    (539399 'move' ret[539390](539398 'coerce' result[302052] call_tmp[746507]))
    gotoReturn _end_pop[539388] _end_pop[539388]
    (491316 'end of statement' result[302052])
    label _end_pop[539388]
    (539392 return ret[539390])
  }
  { scopeless type
    (406334 call eltType _mt[243] this[304398])
  }
  function list[304220](?).pop[302072](arg _mt[304404]:_MT[238], ref arg this[304402]:list[304220](?), arg idx[302069]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539405] "RVV" "temp"
    (302077 call(406363 call (partial) _enter _mt[243] this[304402]))
    (491318 'end of statement')
    unknown call_tmp[746518] "maybe param" "maybe type" "temp"
    (746521 'move' call_tmp[746518](302083 call(406367 call (partial) _popAtIndex _mt[243] this[304402]) idx[302069]))
    unknown result[302084] "dead at end of block" "insert auto destroy"
    (550007 'init var' result[302084] call_tmp[746518])
    (302087 'end of statement')
    (302090 call(406372 call (partial) _leave _mt[243] this[304402]))
    (491319 'end of statement')
    unknown call_tmp[746527] "expr temp" "maybe param" "maybe type" "temp"
    (746530 'move' call_tmp[746527](539410 call eltType _mt[243] this[304402]))
    (539414 'move' ret[539405](539413 'coerce' result[302084] call_tmp[746527]))
    gotoReturn _end_pop[539403] _end_pop[539403]
    (491320 'end of statement' result[302084])
    label _end_pop[539403]
    (539407 return ret[539405])
  }
  { scopeless type
    (406359 call eltType _mt[243] this[304402])
  }
  function list[304220](?)._fireAllDestructors[302100](arg _mt[304408]:_MT[238], arg this[304406]:list[304220](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[302173] "const" "temp"
    unknown call_tmp[746534] "expr temp" "maybe param" "maybe type" "temp"
    (746537 'move' call_tmp[746534](302170 '_wide_get_locale' this[304406]))
    (302175 'move' tmp[302173](302171 'deref' call_tmp[746534]))
    {
      {
        {
          unknown _indexOfInterest[302124] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302125] "expr temp" "temp"
          unknown call_tmp[746541] "expr temp" "maybe param" "maybe type" "temp"
          (746544 'move' call_tmp[746541](406389 call _size _mt[243] this[304406]))
          unknown call_tmp[746546] "expr temp" "maybe param" "maybe type" "temp"
          (746549 'move' call_tmp[746546](302141 call chpl_direct_counted_range_iter 0 call_tmp[746541]))
          (302134 'move' _iterator[302125](302132 call _getIterator call_tmp[746546]))
          Defer
          {
            {
              (302157 call _freeIterator _iterator[302125])
            }
          }
          { scopeless type
            (302146 'move' _indexOfInterest[302124](302143 call iteratorIndex _iterator[302125]))
          }
          ForLoop[302126]
          {
            unknown i[302150] "index var" "insert auto destroy"
            (491323 'end of statement')
            (302152 'move' i[302150] _indexOfInterest[302124])
            (491324 'end of statement' i[302150])
            {
              unknown item[302114] "dead at end of block" "ref var"
              unknown call_tmp[746553] "expr temp" "maybe param" "maybe type" "temp"
              (746556 'move' call_tmp[746553](302113 call(406378 call (partial) _getRef _mt[243] this[304406]) i[302150]))
              (550010 'move' item[302114](550009 'addr of' call_tmp[746553]))
              (302117 'end of statement' i[302150])
              (302122 call(406383 call (partial) _destroy _mt[243] this[304406]) item[302114])
              (491327 'end of statement' item[302114])
            }
            label _continueLabel[302129]
            _indexOfInterest[302124]
            _iterator[302125]
          }
          label _breakLabel[302130]
        }
        unknown call_tmp[746562] "expr temp" "maybe param" "maybe type" "temp"
        (746565 'move' call_tmp[746562](406394 call _size _mt[243] this[304406]))
        (302167 call = call_tmp[746562] 0)
      }
      (302178 'on block' 0 tmp[302173])
    }
    (539420 return _void[55])
  }
  function list[304220](?)._freeAllArrays[302188](arg _mt[304412]:_MT[238], arg this[304410]:list[304220](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746569] "expr temp" "maybe param" "maybe type" "temp"
    (746572 'move' call_tmp[746569](406399 call _arrays _mt[243] this[304410]))
    unknown call_tmp[746574] "expr temp" "maybe param" "maybe type" "temp"
    (746577 'move' call_tmp[746574](302192 call == call_tmp[746569] nil[44]))
    unknown call_tmp[746579] "expr temp" "maybe param" "maybe type" "temp"
    (746582 'move' call_tmp[746579](302196 call _cond_test call_tmp[746574]))
    if call_tmp[746579]
    {
      gotoReturn _end__freeAllArrays[539422] _end__freeAllArrays[539422]
    }
    unknown call_tmp[746586] "expr temp" "maybe param" "maybe type" "temp"
    (746589 'move' call_tmp[746586](406404 call _totalCapacity _mt[243] this[304410]))
    unknown call_tmp[746591] "expr temp" "maybe param" "maybe type" "temp"
    (746594 'move' call_tmp[746591](302205 call != call_tmp[746586] 0))
    (302208 call _sanity call_tmp[746591])
    (491332 'end of statement')
    unknown call_tmp[746598] "expr temp" "maybe param" "maybe type" "temp"
    (746601 'move' call_tmp[746598](406409 call _arrayCapacity _mt[243] this[304410]))
    unknown call_tmp[746603] "expr temp" "maybe param" "maybe type" "temp"
    (746606 'move' call_tmp[746603](302213 call != call_tmp[746598] 0))
    (302216 call _sanity call_tmp[746603])
    (491333 'end of statement')
    const tmp[302339] "const" "temp"
    unknown call_tmp[746608] "expr temp" "maybe param" "maybe type" "temp"
    (746611 'move' call_tmp[746608](302336 '_wide_get_locale' this[304410]))
    (302341 'move' tmp[302339](302337 'deref' call_tmp[746608]))
    {
      {
        {
          unknown _indexOfInterest[302271] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302272] "expr temp" "temp"
          unknown call_tmp[746615] "expr temp" "maybe param" "maybe type" "temp"
          (746618 'move' call_tmp[746615](406440 call _arrayCapacity _mt[243] this[304410]))
          unknown call_tmp[746620] "expr temp" "maybe param" "maybe type" "temp"
          (746623 'move' call_tmp[746620](302288 call chpl_direct_counted_range_iter 0 call_tmp[746615]))
          (302281 'move' _iterator[302272](302279 call _getIterator call_tmp[746620]))
          Defer
          {
            {
              (302304 call _freeIterator _iterator[302272])
            }
          }
          { scopeless type
            (302293 'move' _indexOfInterest[302271](302290 call iteratorIndex _iterator[302272]))
          }
          ForLoop[302273]
          {
            unknown i[302297] "index var" "insert auto destroy"
            (491335 'end of statement')
            (302299 'move' i[302297] _indexOfInterest[302271])
            (491336 'end of statement' i[302297])
            {
              unknown array[302230] "dead at end of block" "ref var"
              unknown call_tmp[746627] "expr temp" "maybe param" "maybe type" "temp"
              (746630 'move' call_tmp[746627](302229 call(406415 call (partial) _arrays _mt[243] this[304410]) i[302297]))
              (550013 'move' array[302230](550012 'addr of' call_tmp[746627]))
              (302233 'end of statement')
              unknown call_tmp[746632] "expr temp" "maybe param" "maybe type" "temp"
              (746635 'move' call_tmp[746632](302237 call == array[302230] nil[44]))
              unknown call_tmp[746637] "expr temp" "maybe param" "maybe type" "temp"
              (746640 'move' call_tmp[746637](302242 call _cond_test call_tmp[746632]))
              if call_tmp[746637]
              {
                continue _continueLabel[302276] _continueLabel[302276]
              }
              unknown call_tmp[746644] "maybe param" "maybe type" "temp"
              (746647 'move' call_tmp[746644](302250 call(406421 call (partial) _getArrayCapacity _mt[243] this[304410]) i[302297]))
              const capacity[302251] "dead at end of block" "const" "insert auto destroy"
              (550015 'init var' capacity[302251] call_tmp[746644])
              (302254 'end of statement' i[302297] i[302297])
              unknown call_tmp[746651] "expr temp" "maybe param" "maybe type" "temp"
              (746654 'move' call_tmp[746651](406427 call _totalCapacity _mt[243] this[304410]))
              (302257 call -= call_tmp[746651] capacity[302251])
              (491340 'end of statement' capacity[302251])
              (302264 call(406432 call (partial) _freeArray _mt[243] this[304410]) array[302230] capacity[302251])
              (491342 'end of statement' array[302230] capacity[302251])
              (302268 call = array[302230] nil[44])
              (491345 'end of statement' array[302230])
            }
            label _continueLabel[302276]
            _indexOfInterest[302271]
            _iterator[302272]
          }
          label _breakLabel[302277]
        }
        unknown call_tmp[746660] "expr temp" "maybe param" "maybe type" "temp"
        (746663 'move' call_tmp[746660](406445 call _totalCapacity _mt[243] this[304410]))
        unknown call_tmp[746665] "expr temp" "maybe param" "maybe type" "temp"
        (746668 'move' call_tmp[746665](302315 call == call_tmp[746660] 0))
        (302318 call _sanity call_tmp[746665])
        (491347 'end of statement')
        unknown call_tmp[746674] "expr temp" "maybe param" "maybe type" "temp"
        (746677 'move' call_tmp[746674](406454 call _arrays _mt[243] this[304410]))
        unknown call_tmp[746681] "expr temp" "maybe param" "maybe type" "temp"
        (746684 'move' call_tmp[746681](406459 call _arrayCapacity _mt[243] this[304410]))
        (302324 call(406449 call (partial) _freeBlockArray _mt[243] this[304410]) call_tmp[746674] call_tmp[746681])
        (491348 'end of statement')
        unknown call_tmp[746688] "expr temp" "maybe param" "maybe type" "temp"
        (746691 'move' call_tmp[746688](406464 call _arrays _mt[243] this[304410]))
        (302328 call = call_tmp[746688] nil[44])
        (491349 'end of statement')
        unknown call_tmp[746695] "expr temp" "maybe param" "maybe type" "temp"
        (746698 'move' call_tmp[746695](406469 call _size _mt[243] this[304410]))
        (302333 call = call_tmp[746695] 0)
      }
      (302344 'on block' 0 tmp[302339])
    }
    label _end__freeAllArrays[539422]
    (539424 return _void[55])
  }
  function list[304220](?).clear[302353](arg _mt[304416]:_MT[238], ref arg this[304414]:list[304220](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302404] "const" "temp"
    unknown call_tmp[746700] "expr temp" "maybe param" "maybe type" "temp"
    (746703 'move' call_tmp[746700](302401 '_wide_get_locale' this[304414]))
    (302406 'move' tmp[302404](302402 'deref' call_tmp[746700]))
    {
      {
        (302358 call(406474 call (partial) _enter _mt[243] this[304414]))
        (491352 'end of statement')
        (302363 call(406478 call (partial) _fireAllDestructors _mt[243] this[304414]))
        (491353 'end of statement')
        (302367 call(406482 call (partial) _freeAllArrays _mt[243] this[304414]))
        (491354 'end of statement')
        unknown call_tmp[746713] "expr temp" "maybe param" "maybe type" "temp"
        (746716 'move' call_tmp[746713](406487 call _totalCapacity _mt[243] this[304414]))
        unknown call_tmp[746718] "expr temp" "maybe param" "maybe type" "temp"
        (746721 'move' call_tmp[746718](302372 call == call_tmp[746713] 0))
        (302375 call _sanity call_tmp[746718])
        (491355 'end of statement')
        unknown call_tmp[746725] "expr temp" "maybe param" "maybe type" "temp"
        (746728 'move' call_tmp[746725](406492 call _size _mt[243] this[304414]))
        unknown call_tmp[746730] "expr temp" "maybe param" "maybe type" "temp"
        (746733 'move' call_tmp[746730](302380 call == call_tmp[746725] 0))
        (302383 call _sanity call_tmp[746730])
        (491356 'end of statement')
        unknown call_tmp[746737] "expr temp" "maybe param" "maybe type" "temp"
        (746740 'move' call_tmp[746737](406497 call _arrays _mt[243] this[304414]))
        unknown call_tmp[746742] "expr temp" "maybe param" "maybe type" "temp"
        (746745 'move' call_tmp[746742](302388 call == call_tmp[746737] nil[44]))
        (302391 call _sanity call_tmp[746742])
        (491357 'end of statement')
        (302395 call(406501 call (partial) _firstTimeInitializeArrays _mt[243] this[304414]))
        (491358 'end of statement')
        (302399 call(406505 call (partial) _leave _mt[243] this[304414]))
      }
      (302409 'on block' 0 tmp[302404])
    }
    (539428 return _void[55])
  }
  function list[304220](?).indexOf[302421](arg _mt[304420]:_MT[238], const arg this[304418]:list[304220](?), arg x[302418] :
  (406510 call eltType _mt[243] this[304418]), arg start[302425]:int(64)[13] =
  0, arg end[302433]:int(64)[13] =
  (302431 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539432] "RVV" "temp"
    unknown call_tmp[746753] "expr temp" "maybe param" "maybe type" "temp"
    (746756 'move' call_tmp[746753](302549 call _cond_test 1))
    if call_tmp[746753]
    {
      const msg[302456] "dead at end of block" "const" "insert auto destroy"
      (550017 'init var' msg[302456] " index for \"list.indexOf\" out of bounds: ")
      (302459 'end of statement')
      unknown tmp[435023] "maybe param" "temp"
      (435034 'move' tmp[435023](302463 call >= end[302433] 0))
      unknown call_tmp[746758] "expr temp" "maybe param" "maybe type" "temp"
      (746761 'move' call_tmp[746758](435036 call _cond_invalid tmp[435023]))
      if call_tmp[746758]
      {
        (435039 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581182] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581183] "maybe param" "temp"
      unknown call_tmp[746763] "expr temp" "maybe param" "maybe type" "temp"
      (746766 'move' call_tmp[746763](435024 call isTrue tmp[435023]))
      (581188 'move' tmp[581183](581186 call _cond_test call_tmp[746763]))
      if tmp[581183]
      {
        unknown tmp[581190] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746770] "expr temp" "maybe param" "maybe type" "temp"
        (746773 'move' call_tmp[746770](302468 call(406516 call (partial) _withinBounds _mt[243] this[304418]) end[302433]))
        unknown call_tmp[746775] "expr temp" "maybe param" "maybe type" "temp"
        (746778 'move' call_tmp[746775](302469 call ! call_tmp[746770]))
        (581192 'move' tmp[581190](435027 call isTrue call_tmp[746775]))
        (581197 'move' tmp[581182](581194 '_paramFoldLogical' tmp[581183] tmp[581190]))
      }
      {
        (581202 'move' tmp[581182](581199 '_paramFoldLogical' tmp[581183] 0))
      }
      unknown call_tmp[746780] "expr temp" "maybe param" "maybe type" "temp"
      (746783 'move' call_tmp[746780](302503 call _cond_test tmp[581182]))
      if call_tmp[746780]
      {
        unknown call_tmp[746785] "expr temp" "maybe param" "maybe type" "temp"
        (746788 'move' call_tmp[746785](302492 call + "End" msg[302456]))
        unknown call_tmp[746790] "expr temp" "maybe param" "maybe type" "temp"
        (746793 'move' call_tmp[746790](302496 call _cast string[26] end[302433]))
        unknown call_tmp[746795] "expr temp" "maybe param" "maybe type" "temp"
        (746798 'move' call_tmp[746795](302498 call + call_tmp[746785] call_tmp[746790]))
        (302501 call boundsCheckHalt call_tmp[746795])
        (491361 'end of statement' msg[302456])
      }
      unknown call_tmp[746802] "expr temp" "maybe param" "maybe type" "temp"
      (746805 'move' call_tmp[746802](302511 call(406523 call (partial) _withinBounds _mt[243] this[304418]) start[302425]))
      unknown call_tmp[746807] "expr temp" "maybe param" "maybe type" "temp"
      (746810 'move' call_tmp[746807](302512 call ! call_tmp[746802]))
      unknown call_tmp[746812] "expr temp" "maybe param" "maybe type" "temp"
      (746815 'move' call_tmp[746812](302544 call _cond_test call_tmp[746807]))
      if call_tmp[746812]
      {
        unknown call_tmp[746817] "expr temp" "maybe param" "maybe type" "temp"
        (746820 'move' call_tmp[746817](302533 call + "Start" msg[302456]))
        unknown call_tmp[746822] "expr temp" "maybe param" "maybe type" "temp"
        (746825 'move' call_tmp[746822](302537 call _cast string[26] start[302425]))
        unknown call_tmp[746827] "expr temp" "maybe param" "maybe type" "temp"
        (746830 'move' call_tmp[746827](302539 call + call_tmp[746817] call_tmp[746822]))
        (302542 call boundsCheckHalt call_tmp[746827])
        (491363 'end of statement' msg[302456])
      }
    }
    unknown call_tmp[746832] "maybe param" "maybe type" "temp"
    (746835 'move' call_tmp[746832](302555 call - 1))
    unknown error[302557] "dead at end of block" "param"
    (550019 'init var' error[302557] call_tmp[746832])
    (302560 'end of statement')
    unknown tmp[435044] "maybe param" "temp"
    (435055 'move' tmp[435044](302563 call >= end[302433] 0))
    unknown call_tmp[746837] "expr temp" "maybe param" "maybe type" "temp"
    (746840 'move' call_tmp[746837](435057 call _cond_invalid tmp[435044]))
    if call_tmp[746837]
    {
      (435060 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581209] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581210] "maybe param" "temp"
    unknown call_tmp[746842] "expr temp" "maybe param" "maybe type" "temp"
    (746845 'move' call_tmp[746842](435045 call isTrue tmp[435044]))
    (581215 'move' tmp[581210](581213 call _cond_test call_tmp[746842]))
    if tmp[581210]
    {
      unknown tmp[581217] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746847] "expr temp" "maybe param" "maybe type" "temp"
      (746850 'move' call_tmp[746847](302567 call < end[302433] start[302425]))
      (581219 'move' tmp[581217](435048 call isTrue call_tmp[746847]))
      (581224 'move' tmp[581209](581221 '_paramFoldLogical' tmp[581210] tmp[581217]))
    }
    {
      (581229 'move' tmp[581209](581226 '_paramFoldLogical' tmp[581210] 0))
    }
    unknown call_tmp[746852] "expr temp" "maybe param" "maybe type" "temp"
    (746855 'move' call_tmp[746852](302574 call _cond_test tmp[581209]))
    if call_tmp[746852]
    {
      (539438 'move' ret[539432](539437 'coerce' error[302557] int(64)[13]))
      gotoReturn _end_indexOf[539430] _end_indexOf[539430]
    }
    unknown result[302580] "dead at end of block" "insert auto destroy"
    (550021 'init var' result[302580] error[302557])
    (302583 'end of statement')
    const tmp[302676] "const" "temp"
    unknown call_tmp[746857] "expr temp" "maybe param" "maybe type" "temp"
    (746860 'move' call_tmp[746857](302673 '_wide_get_locale' this[304418]))
    (302678 'move' tmp[302676](302674 'deref' call_tmp[746857]))
    {
      {
        (302587 call(406536 call (partial) _enter _mt[243] this[304418]))
        (491367 'end of statement')
        const stop[302602] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581236] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581237] "maybe param" "temp"
        unknown call_tmp[746864] "expr temp" "maybe param" "maybe type" "temp"
        (746867 'move' call_tmp[746864](302592 call < end[302433] 0))
        (581242 'move' tmp[581237](581240 call _cond_test call_tmp[746864]))
        if tmp[581237]
        {
          unknown tmp[581244] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[746871] "expr temp" "maybe param" "maybe type" "temp"
          (746874 'move' call_tmp[746871](406542 call _size _mt[243] this[304418]))
          (581246 'move' tmp[581244](302596 call - call_tmp[746871] 1))
          (581251 'move' tmp[581236](581248 '_paramFoldLogical' tmp[581237] tmp[581244]))
        }
        {
          (581256 'move' tmp[581236](581253 '_paramFoldLogical' tmp[581237] end[302433]))
        }
        (550023 'init var' stop[302602] tmp[581236])
        (302605 'end of statement')
        {
          unknown _indexOfInterest[302631] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302632] "expr temp" "temp"
          unknown call_tmp[746876] "expr temp" "maybe param" "maybe type" "temp"
          (746879 'move' call_tmp[746876](302646 call chpl_direct_range_iter start[302425] stop[302602] 1))
          (302641 'move' _iterator[302632](302639 call _getIterator call_tmp[746876]))
          Defer
          {
            {
              (302662 call _freeIterator _iterator[302632])
            }
          }
          { scopeless type
            (302651 'move' _indexOfInterest[302631](302648 call iteratorIndex _iterator[302632]))
          }
          ForLoop[302633]
          {
            unknown i[302655] "index var" "insert auto destroy"
            (491369 'end of statement')
            (302657 'move' i[302655] _indexOfInterest[302631])
            (491370 'end of statement' i[302655])
            unknown call_tmp[746883] "expr temp" "maybe param" "maybe type" "temp"
            (746886 'move' call_tmp[746883](302615 call(406548 call (partial) _getRef _mt[243] this[304418]) i[302655]))
            unknown call_tmp[746888] "expr temp" "maybe param" "maybe type" "temp"
            (746891 'move' call_tmp[746888](302616 call == x[302418] call_tmp[746883]))
            unknown call_tmp[746893] "expr temp" "maybe param" "maybe type" "temp"
            (746896 'move' call_tmp[746893](302627 call _cond_test call_tmp[746888]))
            if call_tmp[746893]
            {
              (302620 call = result[302580] i[302655])
              (491372 'end of statement' result[302580] i[302655])
              break _breakLabel[302637] _breakLabel[302637]
            }
            label _continueLabel[302636]
            _indexOfInterest[302631]
            _iterator[302632]
          }
          label _breakLabel[302637]
        }
        (302671 call(406557 call (partial) _leave _mt[243] this[304418]))
      }
      (302681 'on block' 0 tmp[302676])
    }
    (539444 'move' ret[539432](539443 'coerce' result[302580] int(64)[13]))
    gotoReturn _end_indexOf[539430] _end_indexOf[539430]
    (491376 'end of statement' result[302580])
    label _end_indexOf[539430]
    (539434 return ret[539432])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?).count[302696](arg _mt[304424]:_MT[238], const arg this[304422]:list[304220](?), arg x[302693] :
  (406563 call eltType _mt[243] this[304422])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539450] "RVV" "temp"
    unknown result[302700] "dead at end of block" "insert auto destroy"
    (550025 'init var' result[302700] 0)
    (302703 'end of statement')
    const tmp[302777] "const" "temp"
    unknown call_tmp[746902] "expr temp" "maybe param" "maybe type" "temp"
    (746905 'move' call_tmp[746902](302774 '_wide_get_locale' this[304422]))
    (302779 'move' tmp[302777](302775 'deref' call_tmp[746902]))
    {
      {
        (302708 call(406568 call (partial) _enter _mt[243] this[304422]))
        (491378 'end of statement')
        unknown count[302712] "dead at end of block" "insert auto destroy"
        (550027 'init var' count[302712] 0)
        (302715 'end of statement')
        {
          unknown _indexOfInterest[302732] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302733] "expr temp" "temp"
          (302742 'move' _iterator[302733](302740 call _getIterator this[304422]))
          Defer
          {
            {
              (302758 call _freeIterator _iterator[302733])
            }
          }
          { scopeless type
            (302747 'move' _indexOfInterest[302732](302744 call iteratorIndex _iterator[302733]))
          }
          ForLoop[302734]
          {
            unknown item[302751] "index var" "insert auto destroy"
            (491380 'end of statement')
            (302753 'move' item[302751] _indexOfInterest[302732])
            (491381 'end of statement' item[302751])
            unknown call_tmp[746909] "expr temp" "maybe param" "maybe type" "temp"
            (746912 'move' call_tmp[746909](302720 call == x[302693] item[302751]))
            unknown call_tmp[746914] "expr temp" "maybe param" "maybe type" "temp"
            (746917 'move' call_tmp[746914](302727 call _cond_test call_tmp[746909]))
            if call_tmp[746914]
            {
              (302724 call += count[302712] 1)
              (491383 'end of statement' count[302712])
            }
            label _continueLabel[302737]
            _indexOfInterest[302732]
            _iterator[302733]
          }
          label _breakLabel[302738]
        }
        (302767 call = result[302700] count[302712])
        (491385 'end of statement' result[302700] count[302712])
        (302772 call(406578 call (partial) _leave _mt[243] this[304422]))
      }
      (302782 'on block' 0 tmp[302777])
    }
    (539456 'move' ret[539450](539455 'coerce' result[302700] int(64)[13]))
    gotoReturn _end_count[539448] _end_count[539448]
    (491389 'end of statement' result[302700])
    label _end_count[539448]
    (539452 return ret[539450])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304220](?).sort[302803](arg _mt[304428]:_MT[238], ref arg this[304426]:list[304220](?), arg comparator[302799]:_any[178](?) :
  defaultComparator[267996] =
  defaultComparator[267996]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302929] "const" "temp"
    unknown call_tmp[746921] "expr temp" "maybe param" "maybe type" "temp"
    (746924 'move' call_tmp[746921](302926 '_wide_get_locale' this[304426]))
    (302931 'move' tmp[302929](302927 'deref' call_tmp[746921]))
    {
      {
        (302808 call(406584 call (partial) _enter _mt[243] this[304426]))
        (491391 'end of statement')
        unknown call_tmp[746930] "expr temp" "maybe param" "maybe type" "temp"
        (746933 'move' call_tmp[746930](406589 call _size _mt[243] this[304426]))
        unknown call_tmp[746935] "expr temp" "maybe param" "maybe type" "temp"
        (746938 'move' call_tmp[746935](302813 call > call_tmp[746930] 1))
        unknown call_tmp[746940] "expr temp" "maybe param" "maybe type" "temp"
        (746943 'move' call_tmp[746940](302918 call _cond_test call_tmp[746935]))
        if call_tmp[746940]
        {
          unknown arr[302827] "dead at end of block" "insert auto destroy"
          unknown call_tmp[746945] "expr temp" "maybe param" "maybe type" "temp"
          (746948 'move' call_tmp[746945](302816 call chpl_build_low_bounded_range 0))
          unknown call_tmp[746952] "expr temp" "maybe param" "maybe type" "temp"
          (746955 'move' call_tmp[746952](406594 call _size _mt[243] this[304426]))
          unknown call_tmp[746957] "expr temp" "maybe param" "maybe type" "temp"
          (746960 'move' call_tmp[746957](302819 call # call_tmp[746945] call_tmp[746952]))
          unknown call_tmp[746962] "expr temp" "maybe param" "maybe type" "temp"
          (746965 'move' call_tmp[746962](302823 call chpl__ensureDomainExpr call_tmp[746957]))
          unknown call_tmp[746969] "expr temp" "maybe param" "maybe type" "temp"
          (746972 'move' call_tmp[746969](406599 call eltType _mt[243] this[304426]))
          unknown call_tmp[746974] "expr temp" "maybe param" "maybe type" "temp"
          (746977 'move' call_tmp[746974](302825 call chpl__buildArrayRuntimeType call_tmp[746962] call_tmp[746969]))
          (550029 'default init var' arr[302827] call_tmp[746974])
          (302830 'end of statement')
          {
            unknown _indexOfInterest[302850] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302851] "expr temp" "temp"
            unknown call_tmp[746981] "expr temp" "maybe param" "maybe type" "temp"
            (746984 'move' call_tmp[746981](406608 call _size _mt[243] this[304426]))
            unknown call_tmp[746986] "expr temp" "maybe param" "maybe type" "temp"
            (746989 'move' call_tmp[746986](302867 call chpl_direct_counted_range_iter 0 call_tmp[746981]))
            (302860 'move' _iterator[302851](302858 call _getIterator call_tmp[746986]))
            Defer
            {
              {
                (302883 call _freeIterator _iterator[302851])
              }
            }
            { scopeless type
              (302872 'move' _indexOfInterest[302850](302869 call iteratorIndex _iterator[302851]))
            }
            ForLoop[302852]
            {
              unknown i[302876] "index var" "insert auto destroy"
              (491393 'end of statement')
              (302878 'move' i[302876] _indexOfInterest[302850])
              (491394 'end of statement' i[302876])
              unknown call_tmp[746991] "expr temp" "maybe param" "maybe type" "temp"
              (746994 'move' call_tmp[746991](302842 call arr[302827] i[302876]))
              unknown call_tmp[746996] "expr temp" "maybe param" "maybe type" "temp"
              (746999 'move' call_tmp[746996](302846 call this[304426] i[302876]))
              (302847 call = call_tmp[746991] call_tmp[746996])
              (491396 'end of statement' arr[302827] i[302876] i[302876])
              label _continueLabel[302855]
              _indexOfInterest[302850]
              _iterator[302851]
            }
            label _breakLabel[302856]
          }
          (302899 call sort module=[255] Sort[267987] arr[302827] comparator[302799])
          (491400 'end of statement' arr[302827])
          (302903 call(406614 call (partial) _fireAllDestructors _mt[243] this[304426]))
          (491402 'end of statement')
          (302907 call(406618 call (partial) _freeAllArrays _mt[243] this[304426]))
          (491403 'end of statement')
          (302911 call(406622 call (partial) _firstTimeInitializeArrays _mt[243] this[304426]))
          (491404 'end of statement')
          (302916 call(406626 call (partial) _extendGeneric _mt[243] this[304426]) arr[302827])
          (491405 'end of statement' arr[302827])
          (364990 'referenced modules list' Sort[267987])
        }
        (302924 call(406631 call (partial) _leave _mt[243] this[304426]))
      }
      (302934 'on block' 0 tmp[302929])
    }
    (539462 return _void[55])
  }
  function list[304220](?).this[302948](arg _mt[304432]:_MT[238], ref arg this[304430]:list[304220](?), arg i[302945]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539466] "RVV" "temp"
    unknown tmp[435065] "maybe param" "temp"
    (435076 'move' tmp[435065] 1)
    unknown call_tmp[747011] "expr temp" "maybe param" "maybe type" "temp"
    (747014 'move' call_tmp[747011](435078 call _cond_invalid tmp[435065]))
    if call_tmp[747011]
    {
      (435081 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581263] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581264] "maybe param" "temp"
    unknown call_tmp[747016] "expr temp" "maybe param" "maybe type" "temp"
    (747019 'move' call_tmp[747016](435066 call isTrue tmp[435065]))
    (581269 'move' tmp[581264](581267 call _cond_test call_tmp[747016]))
    if tmp[581264]
    {
      unknown tmp[581271] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747023] "expr temp" "maybe param" "maybe type" "temp"
      (747026 'move' call_tmp[747023](302954 call(406636 call (partial) _withinBounds _mt[243] this[304430]) i[302945]))
      unknown call_tmp[747028] "expr temp" "maybe param" "maybe type" "temp"
      (747031 'move' call_tmp[747028](302955 call ! call_tmp[747023]))
      (581273 'move' tmp[581271](435069 call isTrue call_tmp[747028]))
      (581278 'move' tmp[581263](581275 '_paramFoldLogical' tmp[581264] tmp[581271]))
    }
    {
      (581283 'move' tmp[581263](581280 '_paramFoldLogical' tmp[581264] 0))
    }
    unknown call_tmp[747033] "expr temp" "maybe param" "maybe type" "temp"
    (747036 'move' call_tmp[747033](302992 call _cond_test tmp[581263]))
    if call_tmp[747033]
    {
      unknown call_tmp[747038] "expr temp" "maybe param" "maybe type" "temp"
      (747041 'move' call_tmp[747038](302978 call _cast string[26] i[302945]))
      unknown call_tmp[747043] "maybe param" "maybe type" "temp"
      (747046 'move' call_tmp[747043](302980 call + "Invalid list index: " call_tmp[747038]))
      const msg[302982] "dead at end of block" "const" "insert auto destroy"
      (550031 'init var' msg[302982] call_tmp[747043])
      (302985 'end of statement')
      (302990 call boundsCheckHalt msg[302982])
      (491410 'end of statement' msg[302982])
    }
    unknown result[303001] "dead at end of block" "ref var"
    unknown call_tmp[747050] "expr temp" "maybe param" "maybe type" "temp"
    (747053 'move' call_tmp[747050](303000 call(406643 call (partial) _getRef _mt[243] this[304430]) i[302945]))
    (550034 'move' result[303001](550033 'addr of' call_tmp[747050]))
    (303004 'end of statement')
    (539471 'move' ret[539466](539470 'addr of' result[303001]))
    gotoReturn _end_this[539464] _end_this[539464]
    (491412 'end of statement' result[303001])
    label _end_this[539464]
    (539468 return ret[539466])
  }
  function list[304220](?).this[303016](arg _mt[304436]:_MT[238], const  ref arg this[304434]:list[304220](?), arg i[303013]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539477] "RVV" "temp"
    unknown tmp[435086] "maybe param" "temp"
    (435097 'move' tmp[435086] 1)
    unknown call_tmp[747055] "expr temp" "maybe param" "maybe type" "temp"
    (747058 'move' call_tmp[747055](435099 call _cond_invalid tmp[435086]))
    if call_tmp[747055]
    {
      (435102 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581290] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581291] "maybe param" "temp"
    unknown call_tmp[747060] "expr temp" "maybe param" "maybe type" "temp"
    (747063 'move' call_tmp[747060](435087 call isTrue tmp[435086]))
    (581296 'move' tmp[581291](581294 call _cond_test call_tmp[747060]))
    if tmp[581291]
    {
      unknown tmp[581298] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747067] "expr temp" "maybe param" "maybe type" "temp"
      (747070 'move' call_tmp[747067](303022 call(406650 call (partial) _withinBounds _mt[243] this[304434]) i[303013]))
      unknown call_tmp[747072] "expr temp" "maybe param" "maybe type" "temp"
      (747075 'move' call_tmp[747072](303023 call ! call_tmp[747067]))
      (581300 'move' tmp[581298](435090 call isTrue call_tmp[747072]))
      (581305 'move' tmp[581290](581302 '_paramFoldLogical' tmp[581291] tmp[581298]))
    }
    {
      (581310 'move' tmp[581290](581307 '_paramFoldLogical' tmp[581291] 0))
    }
    unknown call_tmp[747077] "expr temp" "maybe param" "maybe type" "temp"
    (747080 'move' call_tmp[747077](303044 call _cond_test tmp[581290]))
    if call_tmp[747077]
    {
      unknown call_tmp[747082] "expr temp" "maybe param" "maybe type" "temp"
      (747085 'move' call_tmp[747082](303030 call _cast string[26] i[303013]))
      unknown call_tmp[747087] "maybe param" "maybe type" "temp"
      (747090 'move' call_tmp[747087](303032 call + "Invalid list index: " call_tmp[747082]))
      const msg[303034] "dead at end of block" "const" "insert auto destroy"
      (550036 'init var' msg[303034] call_tmp[747087])
      (303037 'end of statement')
      (303042 call halt msg[303034])
      (491415 'end of statement' msg[303034])
    }
    const result[303053] "dead at end of block" "const" "ref var"
    unknown call_tmp[747094] "expr temp" "maybe param" "maybe type" "temp"
    (747097 'move' call_tmp[747094](303052 call(406657 call (partial) _getRef _mt[243] this[304434]) i[303013]))
    (550039 'move' result[303053](550038 'addr of' call_tmp[747094]))
    (303056 'end of statement')
    (539482 'move' ret[539477](539481 'addr of' result[303053]))
    gotoReturn _end_this[539475] _end_this[539475]
    (491417 'end of statement' result[303053])
    label _end_this[539475]
    (539479 return ret[539477])
  }
  function list[304220](?).these[303064](arg _mt[304440]:_MT[238], arg this[304438]:list[304220](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539488] "RVV" "temp"
    {
      unknown _indexOfInterest[303085] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303086] "expr temp" "temp"
      unknown call_tmp[747101] "expr temp" "maybe param" "maybe type" "temp"
      (747104 'move' call_tmp[747101](406670 call _size _mt[243] this[304438]))
      unknown call_tmp[747106] "expr temp" "maybe param" "maybe type" "temp"
      (747109 'move' call_tmp[747106](303102 call chpl_direct_counted_range_iter 0 call_tmp[747101]))
      (303095 'move' _iterator[303086](303093 call _getIterator call_tmp[747106]))
      Defer
      {
        {
          (303118 call _freeIterator _iterator[303086])
        }
      }
      { scopeless type
        (303107 'move' _indexOfInterest[303085](303104 call iteratorIndex _iterator[303086]))
      }
      ForLoop[303087]
      {
        unknown i[303111] "index var" "insert auto destroy"
        (491420 'end of statement')
        (303113 'move' i[303111] _indexOfInterest[303085])
        (491421 'end of statement' i[303111])
        {
          unknown result[303077] "dead at end of block" "ref var"
          unknown call_tmp[747113] "expr temp" "maybe param" "maybe type" "temp"
          (747116 'move' call_tmp[747113](303076 call(406663 call (partial) _getRef _mt[243] this[304438]) i[303111]))
          (550042 'move' result[303077](550041 'addr of' call_tmp[747113]))
          (303080 'end of statement' i[303111])
          unknown yret[539492] "YVV" "temp"
          (539495 'move' yret[539492](539494 'addr of' result[303077]))
          (539497 yield yret[539492])
          (491424 'end of statement' result[303077])
        }
        label _continueLabel[303090]
        _indexOfInterest[303085]
        _iterator[303086]
      }
      label _breakLabel[303091]
    }
    (539490 return ret[539488])
  }
  function list[304220](?).these[303134](arg _mt[304444]:_MT[238], arg this[304442]:list[304220](?), param arg tag[303131]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539501] "RVV" "temp"
    unknown call_tmp[747120] "maybe param" "maybe type" "temp"
    (747123 'move' call_tmp[747120](406677 call _size _mt[243] this[304442]))
    const osz[303144] "dead at end of block" "const" "insert auto destroy"
    (550044 'init var' osz[303144] call_tmp[747120])
    (303147 'end of statement')
    const minChunkSize[303150] "dead at end of block" "const" "insert auto destroy"
    (550046 'init var' minChunkSize[303150] 64)
    (303153 'end of statement')
    unknown call_tmp[747125] "maybe param" "maybe type" "temp"
    (747128 'move' call_tmp[747125](303156 call <= osz[303144] minChunkSize[303150]))
    const hasOneChunk[303158] "dead at end of block" "const" "insert auto destroy"
    (550048 'init var' hasOneChunk[303158] call_tmp[747125])
    (303161 'end of statement')
    const numTasks[303171] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581317] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581318] "maybe param" "temp"
    (581323 'move' tmp[581318](581321 call _cond_test hasOneChunk[303158]))
    if tmp[581318]
    {
      (581328 'move' tmp[581317](581325 '_paramFoldLogical' tmp[581318] 1))
    }
    {
      unknown tmp[581330] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747130] "expr temp" "maybe param" "maybe type" "temp"
      (747133 'move' call_tmp[747130](364996 call here[90438]))
      (581332 'move' tmp[581330](303165 call maxTaskPar _mt[243] call_tmp[747130]))
      (581337 'move' tmp[581317](581334 '_paramFoldLogical' tmp[581318] tmp[581330]))
    }
    (550050 'init var' numTasks[303171] tmp[581317])
    (303174 'end of statement')
    unknown call_tmp[747137] "expr temp" "maybe param" "maybe type" "temp"
    (747140 'move' call_tmp[747137](303178 call / osz[303144] numTasks[303171]))
    unknown call_tmp[747142] "expr temp" "maybe param" "maybe type" "temp"
    (747145 'move' call_tmp[747142](303181 call floor call_tmp[747137]))
    unknown call_tmp[747147] "maybe param" "maybe type" "temp"
    (747150 'move' call_tmp[747147](303183 call _cast int(64)[13] call_tmp[747142]))
    const chunkSize[303185] "dead at end of block" "const" "insert auto destroy"
    (550052 'init var' chunkSize[303185] call_tmp[747147])
    (303188 'end of statement')
    unknown call_tmp[747152] "expr temp" "maybe param" "maybe type" "temp"
    (747155 'move' call_tmp[747152](303192 call * chunkSize[303185] numTasks[303171]))
    unknown call_tmp[747157] "maybe param" "maybe type" "temp"
    (747160 'move' call_tmp[747157](303194 call - osz[303144] call_tmp[747152]))
    const trailing[303196] "dead at end of block" "const" "insert auto destroy"
    (550054 'init var' trailing[303196] call_tmp[747157])
    (303199 'end of statement' osz[303144] minChunkSize[303150] hasOneChunk[303158] osz[303144] numTasks[303171] osz[303144] chunkSize[303185] numTasks[303171])
    {
      unknown tmpIter[303263] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747162] "expr temp" "maybe param" "maybe type" "temp"
      (747165 'move' call_tmp[747162](303202 call chpl_build_low_bounded_range 0))
      (303266 'move' tmpIter[303263](303205 call # call_tmp[747162] numTasks[303171]))
      unknown isRngDomArr[303452] "maybe param" "temp"
      unknown tmp[435107] "maybe param" "temp"
      (435118 'move' tmp[435107](303454 call isBoundedRange tmpIter[303263]))
      unknown call_tmp[747167] "expr temp" "maybe param" "maybe type" "temp"
      (747170 'move' call_tmp[747167](435120 call _cond_invalid tmp[435107]))
      if call_tmp[747167]
      {
        (435123 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581371] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581372] "maybe param" "temp"
      unknown call_tmp[747172] "expr temp" "maybe param" "maybe type" "temp"
      (747175 'move' call_tmp[747172](435108 call isTrue tmp[435107]))
      (581377 'move' tmp[581372](581375 call _cond_test call_tmp[747172]))
      if tmp[581372]
      {
        (581382 'move' tmp[581371](581379 '_paramFoldLogical' tmp[581372] 1))
      }
      {
        unknown tmp[435128] "maybe param" "temp"
        (435139 'move' tmp[435128](303457 call isDomain tmpIter[303263]))
        unknown call_tmp[747177] "expr temp" "maybe param" "maybe type" "temp"
        (747180 'move' call_tmp[747177](435141 call _cond_invalid tmp[435128]))
        if call_tmp[747177]
        {
          (435144 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581344] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581345] "maybe param" "temp"
        unknown call_tmp[747182] "expr temp" "maybe param" "maybe type" "temp"
        (747185 'move' call_tmp[747182](435129 call isTrue tmp[435128]))
        (581350 'move' tmp[581345](581348 call _cond_test call_tmp[747182]))
        if tmp[581345]
        {
          (581355 'move' tmp[581344](581352 '_paramFoldLogical' tmp[581345] 1))
        }
        {
          unknown tmp[581357] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747187] "expr temp" "maybe param" "maybe type" "temp"
          (747190 'move' call_tmp[747187](303460 call isArray tmpIter[303263]))
          (581359 'move' tmp[581357](435133 call isTrue call_tmp[747187]))
          (581364 'move' tmp[581344](581361 '_paramFoldLogical' tmp[581345] tmp[581357]))
        }
        unknown tmp[581384] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581386 'move' tmp[581384](435112 call isTrue tmp[581344]))
        (581391 'move' tmp[581371](581388 '_paramFoldLogical' tmp[581372] tmp[581384]))
      }
      (303467 'move' isRngDomArr[303452] tmp[581371])
      if isRngDomArr[303452]
      {
        const _coforallCount[303319] "const" "end count" "temp"
        (303388 'move' _coforallCount[303319](303385 call _endCountAlloc 1))
        unknown numTasks[303320] "temp"
        (303372 'move' numTasks[303320](303368 call size _mt[243] tmpIter[303263]))
        (303363 call _upEndCount _coforallCount[303319] 1 numTasks[303320])
        (491435 'end of statement')
        (303360 call chpl_resetTaskSpawn numTasks[303320])
        (491436 'end of statement')
        unknown _indexOfInterest[303327] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303328] "expr temp" "temp"
        (303337 'move' _iterator[303328](303335 call _getIterator tmpIter[303263]))
        Defer
        {
          {
            (303353 call _freeIterator _iterator[303328])
          }
        }
        { scopeless type
          (303342 'move' _indexOfInterest[303327](303339 call iteratorIndex _iterator[303328]))
        }
        ForLoop[303329]
        {
          unknown tid[303346] "coforall index var" "index var" "insert auto destroy"
          (491438 'end of statement')
          (303348 'move' tid[303346] _indexOfInterest[303327])
          (491439 'end of statement' tid[303346])
          {
            {
              unknown call_tmp[747196] "maybe param" "maybe type" "temp"
              (747199 'move' call_tmp[747196](303272 call(406702 call (partial) _computeChunk _mt[243] this[304442]) tid[303346] chunkSize[303185] trailing[303196]))
              unknown chunk[303270] "dead at end of block" "insert auto destroy"
              (550056 'init var' chunk[303270] call_tmp[747196])
              (303277 'end of statement' tid[303346] chunkSize[303185] trailing[303196])
              {
                unknown _indexOfInterest[303279] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303281] "expr temp" "temp"
                unknown call_tmp[747201] "expr temp" "maybe param" "maybe type" "temp"
                (747204 'move' call_tmp[747201](303288 call chunk[303270] 0))
                (303283 'move' _iterator[303281](303286 call _getIterator call_tmp[747201]))
                Defer
                {
                  {
                    (303292 call _freeIterator _iterator[303281])
                  }
                }
                { scopeless type
                  (303296 'move' _indexOfInterest[303279](303299 call iteratorIndex _iterator[303281]))
                }
                ForLoop[303301]
                {
                  unknown i[303304] "index var" "insert auto destroy"
                  (491445 'end of statement')
                  (303306 'move' i[303304] _indexOfInterest[303279])
                  (491446 'end of statement' i[303304])
                  unknown yret[539505] "YVV" "temp"
                  unknown call_tmp[747206] "expr temp" "maybe param" "maybe type" "temp"
                  (747209 'move' call_tmp[747206](303312 call this[304442] i[303304]))
                  (539508 'move' yret[539505](539507 'addr of' call_tmp[747206]))
                  (539510 yield yret[539505])
                  (491448 'end of statement' i[303304])
                  label _continueLabel[303314]
                  _indexOfInterest[303279]
                  _iterator[303281]
                }
                label _breakLabel[303316]
              }
            }
            (303322 call _downEndCount _coforallCount[303319] nil[44])
            (303321 'coforall loop')
          }
          label _continueLabel[303332]
          _indexOfInterest[303327]
          _iterator[303328]
        }
        label _breakLabel[303333]
        Defer
        {
          {
            (303375 call _endCountFree _coforallCount[303319])
          }
        }
        (303380 call _waitEndCount _coforallCount[303319] 1 numTasks[303320])
      }
      {
        const _coforallCount[303392] "const" "end count" "temp"
        (303449 'move' _coforallCount[303392](303446 call _endCountAlloc 1))
        unknown _indexOfInterest[303400] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303401] "expr temp" "temp"
        (303410 'move' _iterator[303401](303408 call _getIterator tmpIter[303263]))
        Defer
        {
          {
            (303426 call _freeIterator _iterator[303401])
          }
        }
        { scopeless type
          (303415 'move' _indexOfInterest[303400](303412 call iteratorIndex _iterator[303401]))
        }
        ForLoop[303402]
        {
          unknown tid[303419] "coforall index var" "index var" "insert auto destroy"
          (491454 'end of statement')
          (303421 'move' tid[303419] _indexOfInterest[303400])
          (491455 'end of statement' tid[303419])
          (303433 call _upEndCount _coforallCount[303392] 1)
          (491457 'end of statement')
          {
            {
              unknown call_tmp[747213] "maybe param" "maybe type" "temp"
              (747216 'move' call_tmp[747213](303212 call(406692 call (partial) _computeChunk _mt[243] this[304442]) tid[303419] chunkSize[303185] trailing[303196]))
              unknown chunk[303213] "dead at end of block" "insert auto destroy"
              (550058 'init var' chunk[303213] call_tmp[747213])
              (303216 'end of statement' tid[303419] chunkSize[303185] trailing[303196])
              {
                unknown _indexOfInterest[303229] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303230] "expr temp" "temp"
                unknown call_tmp[747218] "expr temp" "maybe param" "maybe type" "temp"
                (747221 'move' call_tmp[747218](303222 call chunk[303213] 0))
                (303239 'move' _iterator[303230](303237 call _getIterator call_tmp[747218]))
                Defer
                {
                  {
                    (303256 call _freeIterator _iterator[303230])
                  }
                }
                { scopeless type
                  (303245 'move' _indexOfInterest[303229](303242 call iteratorIndex _iterator[303230]))
                }
                ForLoop[303231]
                {
                  unknown i[303249] "index var" "insert auto destroy"
                  (491462 'end of statement')
                  (303251 'move' i[303249] _indexOfInterest[303229])
                  (491463 'end of statement' i[303249])
                  unknown yret[539512] "YVV" "temp"
                  unknown call_tmp[747223] "expr temp" "maybe param" "maybe type" "temp"
                  (747226 'move' call_tmp[747223](303226 call this[304442] i[303249]))
                  (539515 'move' yret[539512](539514 'addr of' call_tmp[747223]))
                  (539517 yield yret[539512])
                  (491465 'end of statement' i[303249])
                  label _continueLabel[303234]
                  _indexOfInterest[303229]
                  _iterator[303230]
                }
                label _breakLabel[303235]
              }
            }
            (303395 call _downEndCount _coforallCount[303392] nil[44])
            (303394 'coforall loop')
          }
          label _continueLabel[303405]
          _indexOfInterest[303400]
          _iterator[303401]
        }
        label _breakLabel[303406]
        Defer
        {
          {
            (303437 call _endCountFree _coforallCount[303392])
          }
        }
        (303442 call _waitEndCount _coforallCount[303392] 1)
      }
    }
    (539503 return ret[539501])
  }
  where {
    (303141 call == tag[303131] standalone[451])
  }
  function list[304220](?)._computeChunk[303478](arg _mt[304448]:_MT[238], arg this[304446]:list[304220](?), arg tid[303476]:_any[178](?), arg chunkSize[303480]:_any[178](?), arg trailing[303482]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539521] "RVV" "temp"
    unknown lo[303484] "dead at end of block" "insert auto destroy"
    (550060 'init var' lo[303484] 0)
    unknown hi[303488] "dead at end of block" "insert auto destroy"
    (550062 'init var' hi[303488] lo[303484])
    (303492 'end of statement' lo[303484])
    unknown call_tmp[747228] "expr temp" "maybe param" "maybe type" "temp"
    (747231 'move' call_tmp[747228](303496 call <= tid[303476] 0))
    unknown call_tmp[747233] "expr temp" "maybe param" "maybe type" "temp"
    (747236 'move' call_tmp[747233](303538 call _cond_test call_tmp[747228]))
    if call_tmp[747233]
    {
      (303500 call = lo[303484] 0)
      (491471 'end of statement' lo[303484])
      unknown call_tmp[747238] "expr temp" "maybe param" "maybe type" "temp"
      (747241 'move' call_tmp[747238](303507 call + chunkSize[303480] trailing[303482]))
      unknown call_tmp[747243] "expr temp" "maybe param" "maybe type" "temp"
      (747246 'move' call_tmp[747243](303510 call - call_tmp[747238] 1))
      (303512 call = hi[303488] call_tmp[747243])
      (491473 'end of statement' hi[303488])
    }
    {
      unknown call_tmp[747248] "expr temp" "maybe param" "maybe type" "temp"
      (747251 'move' call_tmp[747248](303518 call * chunkSize[303480] tid[303476]))
      unknown call_tmp[747253] "expr temp" "maybe param" "maybe type" "temp"
      (747256 'move' call_tmp[747253](303521 call + call_tmp[747248] trailing[303482]))
      (303523 call = lo[303484] call_tmp[747253])
      (491475 'end of statement' lo[303484])
      unknown call_tmp[747258] "expr temp" "maybe param" "maybe type" "temp"
      (747261 'move' call_tmp[747258](303530 call + lo[303484] chunkSize[303480]))
      unknown call_tmp[747263] "expr temp" "maybe param" "maybe type" "temp"
      (747266 'move' call_tmp[747263](303533 call - call_tmp[747258] 1))
      (303535 call = hi[303488] call_tmp[747263])
      (491477 'end of statement' hi[303488] lo[303484])
    }
    unknown call_tmp[747268] "expr temp" "maybe param" "maybe type" "temp"
    (747271 'move' call_tmp[747268](303544 call chpl_build_bounded_range lo[303484] hi[303488]))
    unknown call_tmp[747273] "expr temp" "maybe param" "maybe type" "temp"
    (747276 'move' call_tmp[747273](303546 call _build_tuple call_tmp[747268]))
    (539526 'move' ret[539521](539525 'deref' call_tmp[747273]))
    gotoReturn _end__computeChunk[539519] _end__computeChunk[539519]
    (491480 'end of statement' lo[303484] hi[303488])
    label _end__computeChunk[539519]
    (539523 return ret[539521])
  }
  function list[304220](?).these[303556](arg _mt[304452]:_MT[238], arg this[304450]:list[304220](?), param arg tag[303554]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539532] "RVV" "temp"
    unknown call_tmp[747280] "maybe param" "maybe type" "temp"
    (747283 'move' call_tmp[747280](406729 call _size _mt[243] this[304450]))
    const osz[303566] "dead at end of block" "const" "insert auto destroy"
    (550064 'init var' osz[303566] call_tmp[747280])
    (303569 'end of statement')
    const minChunkSize[303572] "dead at end of block" "const" "insert auto destroy"
    (550066 'init var' minChunkSize[303572] 32)
    (303575 'end of statement')
    unknown call_tmp[747285] "maybe param" "maybe type" "temp"
    (747288 'move' call_tmp[747285](303578 call <= osz[303566] minChunkSize[303572]))
    const hasOneChunk[303580] "dead at end of block" "const" "insert auto destroy"
    (550068 'init var' hasOneChunk[303580] call_tmp[747285])
    (303583 'end of statement')
    const numTasks[303590] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581398] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581399] "maybe param" "temp"
    (581404 'move' tmp[581399](581402 call _cond_test hasOneChunk[303580]))
    if tmp[581399]
    {
      (581409 'move' tmp[581398](581406 '_paramFoldLogical' tmp[581399] 1))
    }
    {
      (581414 'move' tmp[581398](581411 '_paramFoldLogical' tmp[581399] dataParTasksPerLocale[93284]))
    }
    (550070 'init var' numTasks[303590] tmp[581398])
    (303593 'end of statement')
    unknown call_tmp[747290] "expr temp" "maybe param" "maybe type" "temp"
    (747293 'move' call_tmp[747290](303597 call / osz[303566] numTasks[303590]))
    unknown call_tmp[747295] "expr temp" "maybe param" "maybe type" "temp"
    (747298 'move' call_tmp[747295](303600 call floor call_tmp[747290]))
    unknown call_tmp[747300] "maybe param" "maybe type" "temp"
    (747303 'move' call_tmp[747300](303602 call _cast int(64)[13] call_tmp[747295]))
    const chunkSize[303604] "dead at end of block" "const" "insert auto destroy"
    (550072 'init var' chunkSize[303604] call_tmp[747300])
    (303607 'end of statement')
    unknown call_tmp[747305] "expr temp" "maybe param" "maybe type" "temp"
    (747308 'move' call_tmp[747305](303611 call * chunkSize[303604] numTasks[303590]))
    unknown call_tmp[747310] "maybe param" "maybe type" "temp"
    (747313 'move' call_tmp[747310](303613 call - osz[303566] call_tmp[747305]))
    const trailing[303615] "dead at end of block" "const" "insert auto destroy"
    (550074 'init var' trailing[303615] call_tmp[747310])
    (303618 'end of statement' osz[303566] minChunkSize[303572] hasOneChunk[303580] osz[303566] numTasks[303590] osz[303566] chunkSize[303604] numTasks[303590])
    {
      unknown tmpIter[303640] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747315] "expr temp" "maybe param" "maybe type" "temp"
      (747318 'move' call_tmp[747315](303621 call chpl_build_low_bounded_range 0))
      (303643 'move' tmpIter[303640](303624 call # call_tmp[747315] numTasks[303590]))
      unknown isRngDomArr[303791] "maybe param" "temp"
      unknown tmp[435149] "maybe param" "temp"
      (435160 'move' tmp[435149](303793 call isBoundedRange tmpIter[303640]))
      unknown call_tmp[747320] "expr temp" "maybe param" "maybe type" "temp"
      (747323 'move' call_tmp[747320](435162 call _cond_invalid tmp[435149]))
      if call_tmp[747320]
      {
        (435165 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581448] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581449] "maybe param" "temp"
      unknown call_tmp[747325] "expr temp" "maybe param" "maybe type" "temp"
      (747328 'move' call_tmp[747325](435150 call isTrue tmp[435149]))
      (581454 'move' tmp[581449](581452 call _cond_test call_tmp[747325]))
      if tmp[581449]
      {
        (581459 'move' tmp[581448](581456 '_paramFoldLogical' tmp[581449] 1))
      }
      {
        unknown tmp[435170] "maybe param" "temp"
        (435181 'move' tmp[435170](303796 call isDomain tmpIter[303640]))
        unknown call_tmp[747330] "expr temp" "maybe param" "maybe type" "temp"
        (747333 'move' call_tmp[747330](435183 call _cond_invalid tmp[435170]))
        if call_tmp[747330]
        {
          (435186 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581421] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581422] "maybe param" "temp"
        unknown call_tmp[747335] "expr temp" "maybe param" "maybe type" "temp"
        (747338 'move' call_tmp[747335](435171 call isTrue tmp[435170]))
        (581427 'move' tmp[581422](581425 call _cond_test call_tmp[747335]))
        if tmp[581422]
        {
          (581432 'move' tmp[581421](581429 '_paramFoldLogical' tmp[581422] 1))
        }
        {
          unknown tmp[581434] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747340] "expr temp" "maybe param" "maybe type" "temp"
          (747343 'move' call_tmp[747340](303799 call isArray tmpIter[303640]))
          (581436 'move' tmp[581434](435175 call isTrue call_tmp[747340]))
          (581441 'move' tmp[581421](581438 '_paramFoldLogical' tmp[581422] tmp[581434]))
        }
        unknown tmp[581461] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581463 'move' tmp[581461](435154 call isTrue tmp[581421]))
        (581468 'move' tmp[581448](581465 '_paramFoldLogical' tmp[581449] tmp[581461]))
      }
      (303806 'move' isRngDomArr[303791] tmp[581448])
      if isRngDomArr[303791]
      {
        const _coforallCount[303658] "const" "end count" "temp"
        (303727 'move' _coforallCount[303658](303724 call _endCountAlloc 1))
        unknown numTasks[303659] "temp"
        (303711 'move' numTasks[303659](303707 call size _mt[243] tmpIter[303640]))
        (303702 call _upEndCount _coforallCount[303658] 1 numTasks[303659])
        (491492 'end of statement')
        (303699 call chpl_resetTaskSpawn numTasks[303659])
        (491493 'end of statement')
        unknown _indexOfInterest[303666] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303667] "expr temp" "temp"
        (303676 'move' _iterator[303667](303674 call _getIterator tmpIter[303640]))
        Defer
        {
          {
            (303692 call _freeIterator _iterator[303667])
          }
        }
        { scopeless type
          (303681 'move' _indexOfInterest[303666](303678 call iteratorIndex _iterator[303667]))
        }
        ForLoop[303668]
        {
          unknown tid[303685] "coforall index var" "index var" "insert auto destroy"
          (491495 'end of statement')
          (303687 'move' tid[303685] _indexOfInterest[303666])
          (491496 'end of statement' tid[303685])
          {
            {
              unknown call_tmp[747349] "maybe param" "maybe type" "temp"
              (747352 'move' call_tmp[747349](303649 call(406751 call (partial) _computeChunk _mt[243] this[304450]) tid[303685] chunkSize[303604] trailing[303615]))
              unknown chunk[303647] "dead at end of block" "insert auto destroy"
              (550076 'init var' chunk[303647] call_tmp[747349])
              (303654 'end of statement' tid[303685] chunkSize[303604] trailing[303615])
              unknown yret[539536] "YVV" "temp"
              (539539 'move' yret[539536](539538 'addr of' chunk[303647]))
              (539541 yield yret[539536])
              (491501 'end of statement' chunk[303647])
            }
            (303661 call _downEndCount _coforallCount[303658] nil[44])
            (303660 'coforall loop')
          }
          label _continueLabel[303671]
          _indexOfInterest[303666]
          _iterator[303667]
        }
        label _breakLabel[303672]
        Defer
        {
          {
            (303714 call _endCountFree _coforallCount[303658])
          }
        }
        (303719 call _waitEndCount _coforallCount[303658] 1 numTasks[303659])
      }
      {
        const _coforallCount[303731] "const" "end count" "temp"
        (303788 'move' _coforallCount[303731](303785 call _endCountAlloc 1))
        unknown _indexOfInterest[303739] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303740] "expr temp" "temp"
        (303749 'move' _iterator[303740](303747 call _getIterator tmpIter[303640]))
        Defer
        {
          {
            (303765 call _freeIterator _iterator[303740])
          }
        }
        { scopeless type
          (303754 'move' _indexOfInterest[303739](303751 call iteratorIndex _iterator[303740]))
        }
        ForLoop[303741]
        {
          unknown tid[303758] "coforall index var" "index var" "insert auto destroy"
          (491507 'end of statement')
          (303760 'move' tid[303758] _indexOfInterest[303739])
          (491508 'end of statement' tid[303758])
          (303772 call _upEndCount _coforallCount[303731] 1)
          (491510 'end of statement')
          {
            {
              unknown call_tmp[747356] "maybe param" "maybe type" "temp"
              (747359 'move' call_tmp[747356](303631 call(406743 call (partial) _computeChunk _mt[243] this[304450]) tid[303758] chunkSize[303604] trailing[303615]))
              unknown chunk[303632] "dead at end of block" "insert auto destroy"
              (550078 'init var' chunk[303632] call_tmp[747356])
              (303635 'end of statement' tid[303758] chunkSize[303604] trailing[303615])
              unknown yret[539543] "YVV" "temp"
              (539546 'move' yret[539543](539545 'addr of' chunk[303632]))
              (539548 yield yret[539543])
              (491514 'end of statement' chunk[303632])
            }
            (303734 call _downEndCount _coforallCount[303731] nil[44])
            (303733 'coforall loop')
          }
          label _continueLabel[303744]
          _indexOfInterest[303739]
          _iterator[303740]
        }
        label _breakLabel[303745]
        Defer
        {
          {
            (303776 call _endCountFree _coforallCount[303731])
          }
        }
        (303781 call _waitEndCount _coforallCount[303731] 1)
      }
    }
    (539534 return ret[539532])
  }
  where {
    (303563 call == tag[303554] leader[447])
  }
  function list[304220](?).these[303817](arg _mt[304456]:_MT[238], arg this[304454]:list[304220](?), param arg tag[303815]:_any[178](?), arg followThis[303819]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539552] "RVV" "temp"
    {
      unknown _indexOfInterest[303839] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303840] "expr temp" "temp"
      unknown call_tmp[747361] "expr temp" "maybe param" "maybe type" "temp"
      (747364 'move' call_tmp[747361](303832 call followThis[303819] 0))
      (303849 'move' _iterator[303840](303847 call _getIterator call_tmp[747361]))
      Defer
      {
        {
          (303866 call _freeIterator _iterator[303840])
        }
      }
      { scopeless type
        (303855 'move' _indexOfInterest[303839](303852 call iteratorIndex _iterator[303840]))
      }
      ForLoop[303841]
      {
        unknown i[303859] "index var" "insert auto destroy"
        (491520 'end of statement')
        (303861 'move' i[303859] _indexOfInterest[303839])
        (491521 'end of statement' i[303859])
        unknown yret[539556] "YVV" "temp"
        unknown call_tmp[747366] "expr temp" "maybe param" "maybe type" "temp"
        (747369 'move' call_tmp[747366](303836 call this[304454] i[303859]))
        (539559 'move' yret[539556](539558 'addr of' call_tmp[747366]))
        (539561 yield yret[539556])
        (491523 'end of statement' i[303859])
        label _continueLabel[303844]
        _indexOfInterest[303839]
        _iterator[303840]
      }
      label _breakLabel[303845]
    }
    (539554 return ret[539552])
  }
  where {
    (303826 call == tag[303815] follower[449])
  }
  function list[304220](?).readWriteThis[303883](arg _mt[304460]:_MT[238], arg this[304458]:list[304220](?), arg ch[303880]:channel[237749](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303887 call(406764 call (partial) _enter _mt[243] this[304458]))
    (491525 'end of statement')
    (303892 call <~> ch[303880] "[")
    (491526 'end of statement')
    {
      unknown _indexOfInterest[303914] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303915] "expr temp" "temp"
      unknown call_tmp[747375] "expr temp" "maybe param" "maybe type" "temp"
      (747378 'move' call_tmp[747375](406776 call _size _mt[243] this[304458]))
      unknown call_tmp[747380] "expr temp" "maybe param" "maybe type" "temp"
      (747383 'move' call_tmp[747380](303929 call - call_tmp[747375] 2))
      unknown call_tmp[747385] "expr temp" "maybe param" "maybe type" "temp"
      (747388 'move' call_tmp[747385](303932 call chpl_direct_range_iter 0 call_tmp[747380] 1))
      (303924 'move' _iterator[303915](303922 call _getIterator call_tmp[747385]))
      Defer
      {
        {
          (303948 call _freeIterator _iterator[303915])
        }
      }
      { scopeless type
        (303937 'move' _indexOfInterest[303914](303934 call iteratorIndex _iterator[303915]))
      }
      ForLoop[303916]
      {
        unknown i[303941] "index var" "insert auto destroy"
        (491528 'end of statement')
        (303943 'move' i[303941] _indexOfInterest[303914])
        (491529 'end of statement' i[303941])
        unknown call_tmp[747392] "expr temp" "maybe param" "maybe type" "temp"
        (747395 'move' call_tmp[747392](303907 call(406770 call (partial) _getRef _mt[243] this[304458]) i[303941]))
        unknown call_tmp[747397] "expr temp" "maybe param" "maybe type" "temp"
        (747400 'move' call_tmp[747397](303908 call <~> ch[303880] call_tmp[747392]))
        (303911 call <~> call_tmp[747397] ", ")
        (491531 'end of statement' i[303941])
        label _continueLabel[303919]
        _indexOfInterest[303914]
        _iterator[303915]
      }
      label _breakLabel[303920]
    }
    unknown call_tmp[747404] "expr temp" "maybe param" "maybe type" "temp"
    (747407 'move' call_tmp[747404](406781 call _size _mt[243] this[304458]))
    unknown call_tmp[747409] "expr temp" "maybe param" "maybe type" "temp"
    (747412 'move' call_tmp[747409](303957 call > call_tmp[747404] 0))
    unknown call_tmp[747414] "expr temp" "maybe param" "maybe type" "temp"
    (747417 'move' call_tmp[747414](303970 call _cond_test call_tmp[747409]))
    if call_tmp[747414]
    {
      unknown call_tmp[747423] "expr temp" "maybe param" "maybe type" "temp"
      (747426 'move' call_tmp[747423](406791 call _size _mt[243] this[304458]))
      unknown call_tmp[747428] "expr temp" "maybe param" "maybe type" "temp"
      (747431 'move' call_tmp[747428](303963 call - call_tmp[747423] 1))
      unknown call_tmp[747433] "expr temp" "maybe param" "maybe type" "temp"
      (747436 'move' call_tmp[747433](303966 call(406786 call (partial) _getRef _mt[243] this[304458]) call_tmp[747428]))
      (303967 call <~> ch[303880] call_tmp[747433])
    }
    (303977 call <~> ch[303880] "]")
    (491534 'end of statement')
    (303982 call(406796 call (partial) _leave _mt[243] this[304458]))
    (539563 return _void[55])
  }
  function list[304220](?).isEmpty[303988](arg _mt[304464]:_MT[238], const arg this[304462]:list[304220](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539567] "RVV" "temp"
    (303993 call(406800 call (partial) _enter _mt[243] this[304462]))
    (491536 'end of statement')
    unknown call_tmp[747444] "expr temp" "maybe param" "maybe type" "temp"
    (747447 'move' call_tmp[747444](406805 call _size _mt[243] this[304462]))
    unknown call_tmp[747449] "maybe param" "maybe type" "temp"
    (747452 'move' call_tmp[747449](303998 call == call_tmp[747444] 0))
    unknown result[304000] "dead at end of block" "insert auto destroy"
    (550080 'init var' result[304000] call_tmp[747449])
    (304003 'end of statement')
    (304006 call(406809 call (partial) _leave _mt[243] this[304462]))
    (491537 'end of statement')
    (539573 'move' ret[539567](539572 'coerce' result[304000] bool[10]))
    gotoReturn _end_isEmpty[539565] _end_isEmpty[539565]
    (491538 'end of statement' result[304000])
    label _end_isEmpty[539565]
    (539569 return ret[539567])
  }
  { scopeless type
    bool[10]
  }
  function list[304220](?).size[304016](arg _mt[304468]:_MT[238], const arg this[304466]:list[304220](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539579] "RVV" "temp"
    unknown result[304019] "dead at end of block" "insert auto destroy"
    (550082 'init var' result[304019] 0)
    (304022 'end of statement')
    const tmp[304042] "const" "temp"
    unknown call_tmp[747456] "expr temp" "maybe param" "maybe type" "temp"
    (747459 'move' call_tmp[747456](304039 '_wide_get_locale' this[304466]))
    (304044 'move' tmp[304042](304040 'deref' call_tmp[747456]))
    {
      {
        (304027 call(406815 call (partial) _enter _mt[243] this[304466]))
        (491540 'end of statement')
        unknown call_tmp[747465] "expr temp" "maybe param" "maybe type" "temp"
        (747468 'move' call_tmp[747465](406821 call _size _mt[243] this[304466]))
        (304032 call = result[304019] call_tmp[747465])
        (491541 'end of statement' result[304019])
        (304037 call(406825 call (partial) _leave _mt[243] this[304466]))
      }
      (304047 'on block' 0 tmp[304042])
    }
    (539584 'move' ret[539579](539583 'deref' result[304019]))
    gotoReturn _end_size[539577] _end_size[539577]
    (491544 'end of statement' result[304019])
    label _end_size[539577]
    (539581 return ret[539579])
  }
  function list[304220](?).indices[304057](arg _mt[304472]:_MT[238], arg this[304470]:list[304220](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539590] "RVV" "temp"
    unknown call_tmp[747474] "expr temp" "maybe param" "maybe type" "temp"
    (747477 'move' call_tmp[747474](304061 call size _mt[243] this[304470]))
    unknown call_tmp[747479] "expr temp" "maybe param" "maybe type" "temp"
    (747482 'move' call_tmp[747479](304065 call - call_tmp[747474] 1))
    unknown call_tmp[747484] "expr temp" "maybe param" "maybe type" "temp"
    (747487 'move' call_tmp[747484](304067 call chpl_build_bounded_range 0 call_tmp[747479]))
    (539595 'move' ret[539590](539594 'deref' call_tmp[747484]))
    (539592 return ret[539590])
  }
  function list[304220](?).toArray[304076](arg _mt[304476]:_MT[238], const arg this[304474]:list[304220](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539599] "RVV" "temp"
    unknown tmp[435191] "maybe param" "temp"
    unknown call_tmp[747491] "expr temp" "maybe param" "maybe type" "temp"
    (747494 'move' call_tmp[747491](406836 call eltType _mt[243] this[304474]))
    (435202 'move' tmp[435191](304085 call isNonNilableClass call_tmp[747491]))
    unknown call_tmp[747496] "expr temp" "maybe param" "maybe type" "temp"
    (747499 'move' call_tmp[747496](435204 call _cond_invalid tmp[435191]))
    if call_tmp[747496]
    {
      (435207 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581475] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581476] "maybe param" "temp"
    unknown call_tmp[747501] "expr temp" "maybe param" "maybe type" "temp"
    (747504 'move' call_tmp[747501](435192 call isTrue tmp[435191]))
    (581481 'move' tmp[581476](581479 call _cond_test call_tmp[747501]))
    if tmp[581476]
    {
      unknown tmp[581483] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747508] "expr temp" "maybe param" "maybe type" "temp"
      (747511 'move' call_tmp[747508](406841 call eltType _mt[243] this[304474]))
      unknown call_tmp[747513] "expr temp" "maybe param" "maybe type" "temp"
      (747516 'move' call_tmp[747513](304089 call isOwnedClass call_tmp[747508]))
      (581485 'move' tmp[581483](435195 call isTrue call_tmp[747513]))
      (581490 'move' tmp[581475](581487 '_paramFoldLogical' tmp[581476] tmp[581483]))
    }
    {
      (581495 'move' tmp[581475](581492 '_paramFoldLogical' tmp[581476] 0))
    }
    unknown call_tmp[747518] "expr temp" "maybe param" "maybe type" "temp"
    (747521 'move' call_tmp[747518](304134 call _cond_test tmp[581475]))
    if call_tmp[747518]
    {
      unknown call_tmp[747525] "expr temp" "maybe param" "maybe type" "temp"
      (747528 'move' call_tmp[747525](406846 call eltType _mt[243] this[304474]))
      unknown call_tmp[747530] "expr temp" "maybe param" "maybe type" "temp"
      (747533 'move' call_tmp[747530](304130 call _cast string[26] call_tmp[747525]))
      (304132 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747530])
    }
    unknown result[304152] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747535] "expr temp" "maybe param" "maybe type" "temp"
    (747538 'move' call_tmp[747535](304141 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747542] "expr temp" "maybe param" "maybe type" "temp"
    (747545 'move' call_tmp[747542](406851 call _size _mt[243] this[304474]))
    unknown call_tmp[747547] "expr temp" "maybe param" "maybe type" "temp"
    (747550 'move' call_tmp[747547](304144 call # call_tmp[747535] call_tmp[747542]))
    unknown call_tmp[747552] "expr temp" "maybe param" "maybe type" "temp"
    (747555 'move' call_tmp[747552](304148 call chpl__ensureDomainExpr call_tmp[747547]))
    unknown call_tmp[747559] "expr temp" "maybe param" "maybe type" "temp"
    (747562 'move' call_tmp[747559](406856 call eltType _mt[243] this[304474]))
    unknown call_tmp[747564] "expr temp" "maybe param" "maybe type" "temp"
    (747567 'move' call_tmp[747564](304150 call chpl__buildArrayRuntimeType call_tmp[747552] call_tmp[747559]))
    (550084 'default init var' result[304152] call_tmp[747564])
    (304155 'end of statement')
    const tmp[304205] "const" "temp"
    unknown call_tmp[747569] "expr temp" "maybe param" "maybe type" "temp"
    (747572 'move' call_tmp[747569](304202 '_wide_get_locale' this[304474]))
    (304207 'move' tmp[304205](304203 'deref' call_tmp[747569]))
    {
      {
        (304159 call(406861 call (partial) _enter _mt[243] this[304474]))
        (491549 'end of statement')
        unknown tmp[304189] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583241](arg iterator[583243]:_any[178](?), arg this[583379]:list[304220](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583390] "RVV" "temp"
          {
            unknown _indexOfInterest[583248] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583249] "expr temp" "temp"
            (583258 'move' _iterator[583249](583256 call _getIterator iterator[583243]))
            Defer
            {
              {
                (583272 call _freeIterator _iterator[583249])
              }
            }
            { scopeless type
              (583263 'move' _indexOfInterest[583248](583260 call iteratorIndex _iterator[583249]))
            }
            ForLoop[583250] for-expr
            {
              unknown i[304187] "index var" "insert auto destroy" "no doc"
              (583383 'end of statement')
              (583267 'move' i[304187] _indexOfInterest[583248])
              (583384 'end of statement' i[304187])
              {
                {
                  unknown yret[583394] "YVV" "temp"
                  unknown call_tmp[583403] "expr temp" "maybe param" "maybe type" "temp"
                  (583406 'move' call_tmp[583403](304184 call(406881 call (partial) _getRef _mt[243] this[583379]) i[304187]))
                  (583397 'move' yret[583394](583396 'deref' call_tmp[583403]))
                  (583399 yield yret[583394])
                  (583386 'end of statement' i[304187])
                }
              }
              label _continueLabel[583253]
              _indexOfInterest[583248]
              _iterator[583249]
            }
            label _breakLabel[583254]
          }
          (583392 return ret[583390])
        }
        function chpl__loopexpr_iter10[583279](param arg tag[583283]:iterKind[453], arg iterator[583286]:_any[178](?), arg this[583307]:list[304220](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583433] "RVV" "temp"
          const _leaderIterator[583298] "const" "expr temp" "temp"
          (583303 'move' _leaderIterator[583298](583300 call _toLeader iterator[583286]))
          (583438 'move' ret[583433](583437 'deref' _leaderIterator[583298]))
          (583435 return ret[583433])
        }
        where {
          unknown tmp[583409] "maybe param" "temp"
          (583420 'move' tmp[583409](583288 call == tag[583283] leader[447]))
          unknown call_tmp[583467] "expr temp" "maybe param" "maybe type" "temp"
          (583470 'move' call_tmp[583467](583422 call _cond_invalid tmp[583409]))
          if call_tmp[583467]
          {
            (583425 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583440] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583441] "maybe param" "temp"
          unknown call_tmp[583472] "expr temp" "maybe param" "maybe type" "temp"
          (583475 'move' call_tmp[583472](583410 call isTrue tmp[583409]))
          (583446 'move' tmp[583441](583444 call _cond_test call_tmp[583472]))
          if tmp[583441]
          {
            unknown tmp[583448] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583477] "expr temp" "maybe param" "maybe type" "temp"
            (583480 'move' call_tmp[583477](583292 'call resolves' "_toLeader" iterator[583286]))
            (583450 'move' tmp[583448](583413 call isTrue call_tmp[583477]))
            (583455 'move' tmp[583440](583452 '_paramFoldLogical' tmp[583441] tmp[583448]))
          }
          {
            (583460 'move' tmp[583440](583457 '_paramFoldLogical' tmp[583441] 0))
          }
          (748447 call chpl_statementLevelSymbol tmp[583440])
        }
        function chpl__loopexpr_iter10[583309](param arg tag[583313]:iterKind[453], arg followThis[583316]:_any[178](?), arg iterator[583318]:_any[178](?), arg this[583377]:list[304220](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583491] "RVV" "temp"
          const _followerIterator[583325] "const" "expr temp" "temp"
          (583331 'move' _followerIterator[583325](583327 call _toFollower iterator[583318] followThis[583316]))
          {
            unknown _indexOfInterest[583346] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583347] "expr temp" "temp"
            (583356 'move' _iterator[583347](583354 call _getIterator _followerIterator[583325]))
            Defer
            {
              {
                (583370 call _freeIterator _iterator[583347])
              }
            }
            { scopeless type
              (583361 'move' _indexOfInterest[583346](583358 call iteratorIndex _iterator[583347]))
            }
            ForLoop[583348] lowered-forall for-expr
            {
              unknown i[583333] "index var" "insert auto destroy" "no doc"
              (583484 'end of statement')
              (583365 'move' i[583333] _indexOfInterest[583346])
              (583485 'end of statement' i[583333])
              {
                {
                  unknown yret[583495] "YVV" "temp"
                  unknown call_tmp[583504] "expr temp" "maybe param" "maybe type" "temp"
                  (583507 'move' call_tmp[583504](583342 call(583339 call (partial) _getRef _mt[243] this[583377]) i[583333]))
                  (583498 'move' yret[583495](583497 'deref' call_tmp[583504]))
                  (583500 yield yret[583495])
                  (583487 'end of statement' i[583333])
                }
              }
              label _continueLabel[583351]
              _indexOfInterest[583346]
              _iterator[583347]
            }
            label _breakLabel[583352]
          }
          (583493 return ret[583491])
        }
        where {
          (583321 call == tag[583313] follower[449])
        }
        function chpl__forallexpr10[583221](arg iterExpr[583224]:_any[178](?), arg this[583228]:list[304220](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583512] "RVV" "temp"
          unknown _iterator[583231] "expr temp" "maybe ref" "temp"
          (583233 'move' _iterator[583231] iterExpr[583224])
          unknown call_tmp[583519] "expr temp" "maybe param" "maybe type" "temp"
          (583522 'move' call_tmp[583519](583236 call chpl__loopexpr_iter10 _iterator[583231] this[583228]))
          (583517 'move' ret[583512](583516 'deref' call_tmp[583519]))
          (583514 return ret[583512])
        }
        unknown call_tmp[583524] "expr temp" "maybe param" "maybe type" "temp"
        (583527 'move' call_tmp[583524](304176 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583531] "expr temp" "maybe param" "maybe type" "temp"
        (583534 'move' call_tmp[583531](406877 call _size _mt[243] this[304474]))
        unknown call_tmp[583536] "expr temp" "maybe param" "maybe type" "temp"
        (583539 'move' call_tmp[583536](304179 call # call_tmp[583524] call_tmp[583531]))
        unknown call_tmp[583541] "maybe param" "maybe type" "temp"
        (583544 'move' call_tmp[583541](583226 call chpl__forallexpr10 call_tmp[583536] this[304474]))
        (583548 'iterator record set shape' call_tmp[583541] call_tmp[583536] 0)
        unknown call_tmp[747576] "expr temp" "maybe param" "maybe type" "temp"
        (747579 'move' call_tmp[747576](304163 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747583] "expr temp" "maybe param" "maybe type" "temp"
        (747586 'move' call_tmp[747583](406866 call _size _mt[243] this[304474]))
        unknown call_tmp[747588] "expr temp" "maybe param" "maybe type" "temp"
        (747591 'move' call_tmp[747588](304166 call # call_tmp[747576] call_tmp[747583]))
        unknown call_tmp[747593] "expr temp" "maybe param" "maybe type" "temp"
        (747596 'move' call_tmp[747593](304170 call chpl__ensureDomainExpr call_tmp[747588]))
        unknown call_tmp[747600] "expr temp" "maybe param" "maybe type" "temp"
        (747603 'move' call_tmp[747600](406871 call eltType _mt[243] this[304474]))
        unknown call_tmp[747605] "maybe param" "maybe type" "temp"
        (747608 'move' call_tmp[747605](304172 call chpl__buildArrayRuntimeType call_tmp[747593] call_tmp[747600]))
        (550086 'init var' tmp[304189] call_tmp[583541] call_tmp[747605])
        (304192 'end of statement')
        (304195 call = result[304152] tmp[304189])
        (491550 'end of statement' result[304152] tmp[304189])
        (304200 call(406888 call (partial) _leave _mt[243] this[304474]))
      }
      (304210 'on block' 0 tmp[304205])
    }
    unknown call_tmp[747614] "expr temp" "maybe param" "maybe type" "temp"
    (747617 'move' call_tmp[747614](539605 call eltType _mt[243] this[304474]))
    (539608 call chpl__checkEltTypeMatch result[304152] call_tmp[747614])
    (539610 'move' ret[539599] result[304152])
    gotoReturn _end_toArray[539597] _end_toArray[539597]
    (491554 'end of statement' result[304152])
    label _end_toArray[539597]
    (539601 return ret[539599])
  }
  type list[304220](?) unknown eltType[298468] "type variable" unknown parSafe[298472] "param" 0 val _size[298477]:int(64)[13] "no doc" 0 unknown _lock$[298490] "no doc"(298487 IfExpr  parSafe[298472] then
  { scopeless
    (748148 'new' _LockWrapper[405235](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298502] "no doc" nil[44](298500 call _ddata[11696](?)(298498 call _ddata[11696](?) eltType[298468])) val _arrayCapacity[298507]:int(64)[13] "no doc" 0 val _totalCapacity[298512]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298520] "no doc"(298519 call _dummyFieldType eltType[298468])
  function =[304490](ref arg lhs[304487]:list[304220](?), arg rhs[304497]:list[304220](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304505 call(304501 call (partial) clear _mt[243] lhs[304487]))
    (491556 'end of statement')
    (304516 call(304511 call (partial) extend _mt[243] lhs[304487]) rhs[304497])
    (539614 return _void[55])
  }
  where {
    unknown call_tmp[747623] "expr temp" "maybe param" "maybe type" "temp"
    (747626 'move' call_tmp[747623](467968 'query' lhs[304487] 1))
    unknown call_tmp[747628] "expr temp" "maybe param" "maybe type" "temp"
    (747631 'move' call_tmp[747628](467965 'query' rhs[304497] 1))
    unknown call_tmp[747633] "expr temp" "maybe param" "maybe type" "temp"
    (747636 'move' call_tmp[747633](467971 call == call_tmp[747623] call_tmp[747628]))
    (467975 call & 1 call_tmp[747633])
  }
  function ==[304531](arg a[304528]:list[304220](?), arg b[304538]:list[304220](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539618] "RVV" "temp"
    unknown call_tmp[747640] "expr temp" "maybe param" "maybe type" "temp"
    (747643 'move' call_tmp[747640](304543 call size _mt[243] a[304528]))
    unknown call_tmp[747647] "expr temp" "maybe param" "maybe type" "temp"
    (747650 'move' call_tmp[747647](304547 call size _mt[243] b[304538]))
    unknown call_tmp[747652] "expr temp" "maybe param" "maybe type" "temp"
    (747655 'move' call_tmp[747652](304550 call != call_tmp[747640] call_tmp[747647]))
    unknown call_tmp[747657] "expr temp" "maybe param" "maybe type" "temp"
    (747660 'move' call_tmp[747657](304555 call _cond_test call_tmp[747652]))
    if call_tmp[747657]
    {
      (539624 'move' ret[539618](539623 'coerce' 0 bool[10]))
      gotoReturn _end_==[539616] _end_==[539616]
    }
    {
      unknown _indexOfInterest[304589] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304590] "expr temp" "temp"
      unknown call_tmp[747664] "expr temp" "maybe param" "maybe type" "temp"
      (747667 'move' call_tmp[747664](304605 call size _mt[243] a[304528]))
      unknown call_tmp[747669] "expr temp" "maybe param" "maybe type" "temp"
      (747672 'move' call_tmp[747669](304609 call chpl_direct_counted_range_iter 0 call_tmp[747664]))
      (304599 'move' _iterator[304590](304597 call _getIterator call_tmp[747669]))
      Defer
      {
        {
          (304625 call _freeIterator _iterator[304590])
        }
      }
      { scopeless type
        (304614 'move' _indexOfInterest[304589](304611 call iteratorIndex _iterator[304590]))
      }
      ForLoop[304591]
      {
        unknown i[304618] "index var" "insert auto destroy"
        (491560 'end of statement')
        (304620 'move' i[304618] _indexOfInterest[304589])
        (491561 'end of statement' i[304618])
        unknown call_tmp[747674] "expr temp" "maybe param" "maybe type" "temp"
        (747677 'move' call_tmp[747674](304574 call a[304528] i[304618]))
        unknown call_tmp[747679] "expr temp" "maybe param" "maybe type" "temp"
        (747682 'move' call_tmp[747679](304578 call b[304538] i[304618]))
        unknown call_tmp[747684] "expr temp" "maybe param" "maybe type" "temp"
        (747687 'move' call_tmp[747684](304579 call != call_tmp[747674] call_tmp[747679]))
        unknown call_tmp[747689] "expr temp" "maybe param" "maybe type" "temp"
        (747692 'move' call_tmp[747689](304584 call _cond_test call_tmp[747684]))
        if call_tmp[747689]
        {
          (539630 'move' ret[539618](539629 'coerce' 0 bool[10]))
          gotoReturn _end_==[539616] _end_==[539616]
        }
        label _continueLabel[304594]
        _indexOfInterest[304589]
        _iterator[304590]
      }
      label _breakLabel[304595]
    }
    (539636 'move' ret[539618](539635 'coerce' 1 bool[10]))
    label _end_==[539616]
    (539620 return ret[539618])
  }
  where {
    unknown call_tmp[747694] "expr temp" "maybe param" "maybe type" "temp"
    (747697 'move' call_tmp[747694](468000 'query' a[304528] 1))
    unknown call_tmp[747699] "expr temp" "maybe param" "maybe type" "temp"
    (747702 'move' call_tmp[747699](467997 'query' b[304538] 1))
    unknown call_tmp[747704] "expr temp" "maybe param" "maybe type" "temp"
    (747707 'move' call_tmp[747704](468003 call == call_tmp[747694] call_tmp[747699]))
    (468007 call & 1 call_tmp[747704])
  }
  { scopeless type
    bool[10]
  }
  function !=[304649](arg a[304646]:list[304220](?), arg b[304656]:list[304220](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539640] "RVV" "temp"
    unknown call_tmp[747709] "expr temp" "maybe param" "maybe type" "temp"
    (747712 'move' call_tmp[747709](304662 call == a[304646] b[304656]))
    unknown call_tmp[747714] "expr temp" "maybe param" "maybe type" "temp"
    (747717 'move' call_tmp[747714](304664 call ! call_tmp[747709]))
    (539646 'move' ret[539640](539645 'coerce' call_tmp[747714] bool[10]))
    (539642 return ret[539640])
  }
  where {
    unknown call_tmp[747719] "expr temp" "maybe param" "maybe type" "temp"
    (747722 'move' call_tmp[747719](468032 'query' a[304646] 1))
    unknown call_tmp[747724] "expr temp" "maybe param" "maybe type" "temp"
    (747727 'move' call_tmp[747724](468029 'query' b[304656] 1))
    unknown call_tmp[747729] "expr temp" "maybe param" "maybe type" "temp"
    (747732 'move' call_tmp[747729](468035 call == call_tmp[747719] call_tmp[747724]))
    (468039 call & 1 call_tmp[747729])
  }
  { scopeless type
    bool[10]
  }
  (355551 'used modules list'(353100 'use' ChapelStandard[20267])(298245 'import' ChapelLocks[187302])(298249 'use' HaltWrappers[210016])(298252 'use' Sort[267987])(298465 'use' IO[230910]))
  (364933 'referenced modules list' ChapelLocks[187302] Sort[267987])
}