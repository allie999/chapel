AST dump for List after pass normalize.
Module use list: ChapelStandard ChapelLocks HaltWrappers Sort IO 

{
  function chpl__init_List[416066]() : void[4] "insert line file info" "module init"
  {
    (549731 'init var' _initialCapacity[298140] 8)
    (298143 'end of statement')
    (549733 'init var' _initialArrayCapacity[298145] 16)
    (298148 'end of statement')
    (549735 'init var' _sanityChecks[298150] 0)
    (298153 'end of statement')
    (549741 'move' _lockType[298182](549740 call chpl_LocalSpinlock[187386]))
    (490813 'end of statement')
    (539516 return _void[55])
  }
  const _initialCapacity[298140] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  const _initialArrayCapacity[298145] "dead at end of block" "const" "insert auto destroy" "no doc" "private"
  unknown _sanityChecks[298150] "dead at end of block" "no doc" "param" "private"
  function _sanity[298160](arg expr[298157]:bool[10]) : _unknown[51] "inline" "private" "no return value for void"
  {
    unknown call_tmp[744043] "expr temp" "maybe param" "maybe type" "temp"
    (744046 'move' call_tmp[744043](298168 call _cond_test _sanityChecks[298150]))
    if call_tmp[744043]
    {
      (298166 call assert expr[298157])
    }
    (538958 return _void[55])
  }
  unknown _lockType[298182] "dead at end of block" "insert auto destroy" "no doc" "type variable" chpl_LocalSpinlock[187386]
  function _LockWrapper[298223].lock[298196](arg _mt[298227]:_MT[238], arg this[298225]:_LockWrapper[298223]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744050] "expr temp" "maybe param" "maybe type" "temp"
    (744053 'move' call_tmp[744050](364812 call lock$ _mt[243] this[298225]))
    (298203 call(298199 call (partial) lock _mt[243] call_tmp[744050]))
    (538960 return _void[55])
  }
  function _LockWrapper[298223].unlock[298210](arg _mt[298231]:_MT[238], arg this[298229]:_LockWrapper[298223]) : _unknown[51] "inline" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744059] "expr temp" "maybe param" "maybe type" "temp"
    (744062 'move' call_tmp[744059](364817 call lock$ _mt[243] this[298229]))
    (298217 call(298213 call (partial) unlock _mt[243] call_tmp[744059]))
    (538962 return _void[55])
  }
  type _LockWrapper[298223] val super[355684]:object[22] "super class" unknown lock$[298190](298186 'new'(298189 call _lockType[298182]))
  type _LockWrapper[405108](?)
  function _checkType[298238](arg eltType[298236]:_any[178](?)) : _unknown[51] "no doc" "no return value for void"
  {
    unknown call_tmp[744066] "expr temp" "maybe param" "maybe type" "temp"
    (744069 'move' call_tmp[744066](298243 call isGenericType eltType[298236]))
    unknown call_tmp[744071] "expr temp" "maybe param" "maybe type" "temp"
    (744074 'move' call_tmp[744071](298316 call _cond_test call_tmp[744066]))
    if call_tmp[744071]
    {
      unknown call_tmp[744076] "expr temp" "maybe param" "maybe type" "temp"
      (744079 'move' call_tmp[744076](298264 call _cast string[26] eltType[298236]))
      unknown call_tmp[744081] "expr temp" "maybe param" "maybe type" "temp"
      (744084 'move' call_tmp[744081](298266 call + "creating a list with element type " call_tmp[744076]))
      (298269 call compilerWarning call_tmp[744081])
      (490816 'end of statement')
      unknown tmp[434707] "maybe param" "temp"
      (434718 'move' tmp[434707](298275 call isClassType eltType[298236]))
      unknown call_tmp[744086] "expr temp" "maybe param" "maybe type" "temp"
      (744089 'move' call_tmp[744086](434720 call _cond_invalid tmp[434707]))
      if call_tmp[744086]
      {
        (434723 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[580583] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580584] "maybe param" "temp"
      unknown call_tmp[744091] "expr temp" "maybe param" "maybe type" "temp"
      (744094 'move' call_tmp[744091](434708 call isTrue tmp[434707]))
      (580589 'move' tmp[580584](580587 call _cond_test call_tmp[744091]))
      if tmp[580584]
      {
        unknown tmp[580591] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[744096] "expr temp" "maybe param" "maybe type" "temp"
        (744099 'move' call_tmp[744096](298278 'to borrowed class from unknown' eltType[298236]))
        unknown call_tmp[744101] "expr temp" "maybe param" "maybe type" "temp"
        (744104 'move' call_tmp[744101](298280 call isGenericType call_tmp[744096]))
        unknown call_tmp[744106] "expr temp" "maybe param" "maybe type" "temp"
        (744109 'move' call_tmp[744106](298281 call ! call_tmp[744101]))
        (580593 'move' tmp[580591](434711 call isTrue call_tmp[744106]))
        (580598 'move' tmp[580583](580595 '_paramFoldLogical' tmp[580584] tmp[580591]))
      }
      {
        (580603 'move' tmp[580583](580600 '_paramFoldLogical' tmp[580584] 0))
      }
      unknown call_tmp[744111] "expr temp" "maybe param" "maybe type" "temp"
      (744114 'move' call_tmp[744111](298291 call _cond_test tmp[580583]))
      if call_tmp[744111]
      {
        (298288 call compilerWarning "which now means class type with generic management")
      }
      (298314 call compilerError "list element type cannot currently be generic")
    }
    (538964 return _void[55])
  }
  function _dummyFieldType[298327](arg t[298325]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[538968] "RVV" "temp" "type variable"
    unknown call_tmp[744116] "expr temp" "maybe param" "maybe type" "temp"
    (744119 'move' call_tmp[744116](298332 call isBorrowedClass t[298325]))
    unknown call_tmp[744121] "expr temp" "maybe param" "maybe type" "temp"
    (744124 'move' call_tmp[744121](298342 call _cond_test call_tmp[744116]))
    if call_tmp[744121]
    {
      unknown call_tmp[744126] "expr temp" "maybe param" "maybe type" "temp"
      (744129 'move' call_tmp[744126](298334 'to nilable class from type' t[298325]))
      (538973 'move' ret[538968](538972 'deref' call_tmp[744126]))
      gotoReturn _end__dummyFieldType[538966] _end__dummyFieldType[538966]
    }
    {
      (538978 'move' ret[538968](538977 'deref' nothing[7]))
      gotoReturn _end__dummyFieldType[538966] _end__dummyFieldType[538966]
    }
    label _end__dummyFieldType[538966]
    (538970 return ret[538968])
  }
  function list[304105](?).init[298413](arg _mt[304109]:_MT[238], ref arg this[304107]:list[304105](?), arg eltType[298411]:_any[178](?), param arg parSafe[298416] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    (298422 call _checkType eltType[298411])
    (490822 'end of statement')
    unknown tmp[466989] "temp" "type variable"
    (466991 'move' tmp[466989] eltType[298411])
    (466993 'init field' this[304107] c"eltType" tmp[466989])
    (490823 'end of statement')
    unknown tmp[466997] "param" "temp"
    (466999 'init var' tmp[466997] parSafe[298416])
    (467001 'init field' this[304107] c"parSafe" tmp[466997])
    (490824 'end of statement')
    unknown tmp[467006] "temp"
    (467008 'init var' tmp[467006] 0)
    (467010 '.=' this[304107] c"_size" tmp[467006])
    (490825 'end of statement')
    unknown tmp[467022] "temp"
    unknown tmp[580610] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580611] "maybe param" "temp"
    unknown call_tmp[744131] "expr temp" "maybe param" "maybe type" "temp"
    (744134 'move' call_tmp[744131](467030 '.v' this[304107] c"parSafe"))
    (580616 'move' tmp[580611](580614 call _cond_test call_tmp[744131]))
    if tmp[580611]
    {
      unknown tmp[580618] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580620 'move' tmp[580618](748032 'new' _LockWrapper[405108](?)))
      (580625 'move' tmp[580610](580622 '_paramFoldLogical' tmp[580611] tmp[580618]))
    }
    {
      (580630 'move' tmp[580610](580627 '_paramFoldLogical' tmp[580611] none[57]))
    }
    (467024 'init var' tmp[467022] tmp[580610])
    (467026 '.=' this[304107] c"_lock$" tmp[467022])
    (490826 'end of statement')
    unknown call_tmp[744136] "expr temp" "maybe param" "maybe type" "temp"
    (744139 'move' call_tmp[744136](467047 '.v' this[304107] c"eltType"))
    unknown call_tmp[744141] "expr temp" "maybe param" "maybe type" "temp"
    (744144 'move' call_tmp[744141](467039 call _ddata[11695](?) call_tmp[744136]))
    unknown call_tmp[744146] "maybe param" "maybe type" "temp"
    (744149 'move' call_tmp[744146](467037 call _ddata[11695](?) call_tmp[744141]))
    unknown tmp[467034] "temp"
    (467041 'init var' tmp[467034] nil[44] call_tmp[744146])
    (467043 'init field' this[304107] c"_arrays" tmp[467034])
    (490827 'end of statement')
    unknown tmp[467051] "temp"
    (467053 'init var' tmp[467051] 0)
    (467055 '.=' this[304107] c"_arrayCapacity" tmp[467051])
    (490828 'end of statement')
    unknown tmp[467060] "temp"
    (467062 'init var' tmp[467060] 0)
    (467064 '.=' this[304107] c"_totalCapacity" tmp[467060])
    (490829 'end of statement')
    unknown tmp[467068] "temp"
    unknown call_tmp[744151] "expr temp" "maybe param" "maybe type" "temp"
    (744154 'move' call_tmp[744151](467081 '.v' this[304107] c"eltType"))
    unknown call_tmp[744156] "expr temp" "maybe param" "maybe type" "temp"
    (744159 'move' call_tmp[744156](467071 call _dummyFieldType call_tmp[744151]))
    (467073 'default init var' tmp[467068] call_tmp[744156])
    (467077 '.=' this[304107] c"_dummyFieldToForceBorrowChecking" tmp[467068])
    (490830 'end of statement')
    (298455 call(298451 call (partial) _firstTimeInitializeArrays _mt[243] this[304107]))
    (538982 return _void[55])
  }
  function list[304105](?).init[298469](arg _mt[304113]:_MT[238], ref arg this[304111]:list[304105](?), arg other[298466]:list[304105](?), param arg parSafe[298472] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744163] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744166 'move' call_tmp[744163](298477 'typeof' this[304111]))
    unknown call_tmp[744170] "expr temp" "maybe param" "maybe type" "temp"
    (744173 'move' call_tmp[744170](298478 call eltType _mt[243] call_tmp[744163]))
    unknown call_tmp[744175] "expr temp" "maybe param" "maybe type" "temp"
    (744178 'move' call_tmp[744175](298482 call isCopyableType call_tmp[744170]))
    unknown call_tmp[744180] "expr temp" "maybe param" "maybe type" "temp"
    (744183 'move' call_tmp[744180](298483 call ! call_tmp[744175]))
    unknown call_tmp[744185] "expr temp" "maybe param" "maybe type" "temp"
    (744188 'move' call_tmp[744185](298525 call _cond_test call_tmp[744180]))
    if call_tmp[744185]
    {
      unknown call_tmp[744190] "expr temp" "maybe param" "maybe type" "temp"
      (744193 'move' call_tmp[744190](298520 call + "Cannot copy list with element type that " "cannot be copied"))
      (298523 call compilerError call_tmp[744190])
    }
    unknown tmp[467094] "temp" "type variable"
    (467096 'move' tmp[467094](467090 'query' other[298466] 1))
    (467098 'init field' this[304111] c"eltType" tmp[467094])
    (490833 'end of statement')
    unknown tmp[467102] "param" "temp"
    (467104 'init var' tmp[467102] parSafe[298472])
    (467106 'init field' this[304111] c"parSafe" tmp[467102])
    (490834 'end of statement')
    unknown tmp[467111] "temp"
    (467113 'init var' tmp[467111] 0)
    (467115 '.=' this[304111] c"_size" tmp[467111])
    (490835 'end of statement')
    unknown tmp[467127] "temp"
    unknown tmp[580637] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580638] "maybe param" "temp"
    unknown call_tmp[744195] "expr temp" "maybe param" "maybe type" "temp"
    (744198 'move' call_tmp[744195](467135 '.v' this[304111] c"parSafe"))
    (580643 'move' tmp[580638](580641 call _cond_test call_tmp[744195]))
    if tmp[580638]
    {
      unknown tmp[580645] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580647 'move' tmp[580645](748033 'new' _LockWrapper[405108](?)))
      (580652 'move' tmp[580637](580649 '_paramFoldLogical' tmp[580638] tmp[580645]))
    }
    {
      (580657 'move' tmp[580637](580654 '_paramFoldLogical' tmp[580638] none[57]))
    }
    (467129 'init var' tmp[467127] tmp[580637])
    (467131 '.=' this[304111] c"_lock$" tmp[467127])
    (490836 'end of statement')
    unknown call_tmp[744200] "expr temp" "maybe param" "maybe type" "temp"
    (744203 'move' call_tmp[744200](467152 '.v' this[304111] c"eltType"))
    unknown call_tmp[744205] "expr temp" "maybe param" "maybe type" "temp"
    (744208 'move' call_tmp[744205](467144 call _ddata[11695](?) call_tmp[744200]))
    unknown call_tmp[744210] "maybe param" "maybe type" "temp"
    (744213 'move' call_tmp[744210](467142 call _ddata[11695](?) call_tmp[744205]))
    unknown tmp[467139] "temp"
    (467146 'init var' tmp[467139] nil[44] call_tmp[744210])
    (467148 'init field' this[304111] c"_arrays" tmp[467139])
    (490837 'end of statement')
    unknown tmp[467156] "temp"
    (467158 'init var' tmp[467156] 0)
    (467160 '.=' this[304111] c"_arrayCapacity" tmp[467156])
    (490838 'end of statement')
    unknown tmp[467165] "temp"
    (467167 'init var' tmp[467165] 0)
    (467169 '.=' this[304111] c"_totalCapacity" tmp[467165])
    (490839 'end of statement')
    unknown tmp[467173] "temp"
    unknown call_tmp[744215] "expr temp" "maybe param" "maybe type" "temp"
    (744218 'move' call_tmp[744215](467184 '.v' this[304111] c"eltType"))
    unknown call_tmp[744220] "expr temp" "maybe param" "maybe type" "temp"
    (744223 'move' call_tmp[744220](467176 call _dummyFieldType call_tmp[744215]))
    (467178 'default init var' tmp[467173] call_tmp[744220])
    (467180 '.=' this[304111] c"_dummyFieldToForceBorrowChecking" tmp[467173])
    (490840 'end of statement')
    (298557 call(405125 call (partial) _commonInitFromIterable _mt[243] this[304111]) other[298466])
    (538984 return _void[55])
  }
  function list[304105](?).init[298573](arg _mt[304117]:_MT[238], ref arg this[304115]:list[304105](?), arg other[298570]:_array[133588](?), param arg parSafe[298576] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744229] "expr temp" "maybe param" "maybe type" "temp"
    (744232 'move' call_tmp[744229](467189 call eltType _mt[243] other[298570]))
    (298582 call _checkType call_tmp[744229])
    (490842 'end of statement')
    unknown call_tmp[744236] "expr temp" "maybe param" "maybe type" "temp"
    (744239 'move' call_tmp[744236](467193 call eltType _mt[243] other[298570]))
    unknown call_tmp[744241] "expr temp" "maybe param" "maybe type" "temp"
    (744244 'move' call_tmp[744241](298588 call isCopyableType call_tmp[744236]))
    unknown call_tmp[744246] "expr temp" "maybe param" "maybe type" "temp"
    (744249 'move' call_tmp[744246](298589 call ! call_tmp[744241]))
    unknown call_tmp[744251] "expr temp" "maybe param" "maybe type" "temp"
    (744254 'move' call_tmp[744251](298631 call _cond_test call_tmp[744246]))
    if call_tmp[744251]
    {
      unknown call_tmp[744256] "expr temp" "maybe param" "maybe type" "temp"
      (744259 'move' call_tmp[744256](298626 call + "Cannot construct list from array with element " "type that cannot be copied"))
      (298629 call compilerError call_tmp[744256])
    }
    unknown tmp[467201] "temp" "type variable"
    (467203 'move' tmp[467201](467197 call eltType _mt[243] other[298570]))
    (467205 'init field' this[304115] c"eltType" tmp[467201])
    (490844 'end of statement')
    unknown tmp[467209] "param" "temp"
    (467211 'init var' tmp[467209] parSafe[298576])
    (467213 'init field' this[304115] c"parSafe" tmp[467209])
    (490845 'end of statement')
    unknown tmp[467218] "temp"
    (467220 'init var' tmp[467218] 0)
    (467222 '.=' this[304115] c"_size" tmp[467218])
    (490846 'end of statement')
    unknown tmp[467234] "temp"
    unknown tmp[580664] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580665] "maybe param" "temp"
    unknown call_tmp[744263] "expr temp" "maybe param" "maybe type" "temp"
    (744266 'move' call_tmp[744263](467242 '.v' this[304115] c"parSafe"))
    (580670 'move' tmp[580665](580668 call _cond_test call_tmp[744263]))
    if tmp[580665]
    {
      unknown tmp[580672] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580674 'move' tmp[580672](748034 'new' _LockWrapper[405108](?)))
      (580679 'move' tmp[580664](580676 '_paramFoldLogical' tmp[580665] tmp[580672]))
    }
    {
      (580684 'move' tmp[580664](580681 '_paramFoldLogical' tmp[580665] none[57]))
    }
    (467236 'init var' tmp[467234] tmp[580664])
    (467238 '.=' this[304115] c"_lock$" tmp[467234])
    (490847 'end of statement')
    unknown call_tmp[744268] "expr temp" "maybe param" "maybe type" "temp"
    (744271 'move' call_tmp[744268](467259 '.v' this[304115] c"eltType"))
    unknown call_tmp[744273] "expr temp" "maybe param" "maybe type" "temp"
    (744276 'move' call_tmp[744273](467251 call _ddata[11695](?) call_tmp[744268]))
    unknown call_tmp[744278] "maybe param" "maybe type" "temp"
    (744281 'move' call_tmp[744278](467249 call _ddata[11695](?) call_tmp[744273]))
    unknown tmp[467246] "temp"
    (467253 'init var' tmp[467246] nil[44] call_tmp[744278])
    (467255 'init field' this[304115] c"_arrays" tmp[467246])
    (490848 'end of statement')
    unknown tmp[467263] "temp"
    (467265 'init var' tmp[467263] 0)
    (467267 '.=' this[304115] c"_arrayCapacity" tmp[467263])
    (490849 'end of statement')
    unknown tmp[467272] "temp"
    (467274 'init var' tmp[467272] 0)
    (467276 '.=' this[304115] c"_totalCapacity" tmp[467272])
    (490850 'end of statement')
    unknown tmp[467280] "temp"
    unknown call_tmp[744283] "expr temp" "maybe param" "maybe type" "temp"
    (744286 'move' call_tmp[744283](467291 '.v' this[304115] c"eltType"))
    unknown call_tmp[744288] "expr temp" "maybe param" "maybe type" "temp"
    (744291 'move' call_tmp[744288](467283 call _dummyFieldType call_tmp[744283]))
    (467285 'default init var' tmp[467280] call_tmp[744288])
    (467287 '.=' this[304115] c"_dummyFieldToForceBorrowChecking" tmp[467280])
    (490851 'end of statement')
    (298662 call(405134 call (partial) _commonInitFromIterable _mt[243] this[304115]) other[298570])
    (538986 return _void[55])
  }
  function list[304105](?).init[298676](arg _mt[304121]:_MT[238], ref arg this[304119]:list[304105](?), arg other[298673]:range[64316](?), param arg parSafe[298679] :
  0 =
  0) : void[4] "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744295] "expr temp" "maybe param" "maybe type" "temp"
    (744298 'move' call_tmp[744295](467300 'query' other[298673] 1))
    (298685 call _checkType call_tmp[744295])
    (490853 'end of statement')
    unknown tmp[467307] "temp" "type variable"
    (467309 'move' tmp[467307](467303 'query' other[298673] 1))
    (467311 'init field' this[304119] c"eltType" tmp[467307])
    (490854 'end of statement')
    unknown tmp[467315] "param" "temp"
    (467317 'init var' tmp[467315] parSafe[298679])
    (467319 'init field' this[304119] c"parSafe" tmp[467315])
    (490855 'end of statement')
    unknown call_tmp[744300] "expr temp" "maybe param" "maybe type" "temp"
    (744303 'move' call_tmp[744300](298707 call isBoundedRange other[298673]))
    unknown call_tmp[744305] "expr temp" "maybe param" "maybe type" "temp"
    (744308 'move' call_tmp[744305](298708 call ! call_tmp[744300]))
    unknown call_tmp[744310] "expr temp" "maybe param" "maybe type" "temp"
    (744313 'move' call_tmp[744310](298780 call _cond_test call_tmp[744305]))
    if call_tmp[744310]
    {
      unknown call_tmp[744315] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744318 'move' call_tmp[744315](298711 'typeof' this[304119]))
      unknown call_tmp[744320] "maybe param" "maybe type" "temp"
      (744323 'move' call_tmp[744320](298713 call _cast string[26] call_tmp[744315]))
      unknown e[298715] "dead at end of block" "param"
      (549743 'init var' e[298715] call_tmp[744320])
      (298718 'end of statement')
      unknown call_tmp[744325] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744328 'move' call_tmp[744325](298721 'typeof' other[298673]))
      unknown call_tmp[744330] "maybe param" "maybe type" "temp"
      (744333 'move' call_tmp[744330](298723 call _cast string[26] call_tmp[744325]))
      unknown f[298725] "dead at end of block" "param"
      (549745 'init var' f[298725] call_tmp[744330])
      (298728 'end of statement')
      unknown call_tmp[744335] "expr temp" "maybe param" "maybe type" "temp"
      (744338 'move' call_tmp[744335](298747 call + "Cannot init " e[298715]))
      unknown call_tmp[744340] "expr temp" "maybe param" "maybe type" "temp"
      (744343 'move' call_tmp[744340](298766 call + call_tmp[744335] " from unbounded "))
      unknown call_tmp[744345] "maybe param" "maybe type" "temp"
      (744348 'move' call_tmp[744345](298769 call + call_tmp[744340] f[298725]))
      unknown msg[298771] "dead at end of block" "param"
      (549747 'init var' msg[298771] call_tmp[744345])
      (298774 'end of statement')
      (298778 call compilerError msg[298771])
    }
    unknown tmp[467324] "temp"
    (467326 'init var' tmp[467324] 0)
    (467328 '.=' this[304119] c"_size" tmp[467324])
    (490857 'end of statement')
    unknown tmp[467340] "temp"
    unknown tmp[580691] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580692] "maybe param" "temp"
    unknown call_tmp[744350] "expr temp" "maybe param" "maybe type" "temp"
    (744353 'move' call_tmp[744350](467348 '.v' this[304119] c"parSafe"))
    (580697 'move' tmp[580692](580695 call _cond_test call_tmp[744350]))
    if tmp[580692]
    {
      unknown tmp[580699] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580701 'move' tmp[580699](748035 'new' _LockWrapper[405108](?)))
      (580706 'move' tmp[580691](580703 '_paramFoldLogical' tmp[580692] tmp[580699]))
    }
    {
      (580711 'move' tmp[580691](580708 '_paramFoldLogical' tmp[580692] none[57]))
    }
    (467342 'init var' tmp[467340] tmp[580691])
    (467344 '.=' this[304119] c"_lock$" tmp[467340])
    (490858 'end of statement')
    unknown call_tmp[744355] "expr temp" "maybe param" "maybe type" "temp"
    (744358 'move' call_tmp[744355](467365 '.v' this[304119] c"eltType"))
    unknown call_tmp[744360] "expr temp" "maybe param" "maybe type" "temp"
    (744363 'move' call_tmp[744360](467357 call _ddata[11695](?) call_tmp[744355]))
    unknown call_tmp[744365] "maybe param" "maybe type" "temp"
    (744368 'move' call_tmp[744365](467355 call _ddata[11695](?) call_tmp[744360]))
    unknown tmp[467352] "temp"
    (467359 'init var' tmp[467352] nil[44] call_tmp[744365])
    (467361 'init field' this[304119] c"_arrays" tmp[467352])
    (490859 'end of statement')
    unknown tmp[467369] "temp"
    (467371 'init var' tmp[467369] 0)
    (467373 '.=' this[304119] c"_arrayCapacity" tmp[467369])
    (490860 'end of statement')
    unknown tmp[467378] "temp"
    (467380 'init var' tmp[467378] 0)
    (467382 '.=' this[304119] c"_totalCapacity" tmp[467378])
    (490861 'end of statement')
    unknown tmp[467386] "temp"
    unknown call_tmp[744370] "expr temp" "maybe param" "maybe type" "temp"
    (744373 'move' call_tmp[744370](467397 '.v' this[304119] c"eltType"))
    unknown call_tmp[744375] "expr temp" "maybe param" "maybe type" "temp"
    (744378 'move' call_tmp[744375](467389 call _dummyFieldType call_tmp[744370]))
    (467391 'default init var' tmp[467386] call_tmp[744375])
    (467393 '.=' this[304119] c"_dummyFieldToForceBorrowChecking" tmp[467386])
    (490862 'end of statement')
    (298794 call(405149 call (partial) _commonInitFromIterable _mt[243] this[304119]) other[298673])
    (538988 return _void[55])
  }
  function list[304105](?).init=[298813](arg _mt[304125]:_MT[238], ref arg this[304123]:list[304105](?), arg other[298810]:list[304105](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744382] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744385 'move' call_tmp[744382](298817 'typeof' this[304123]))
    unknown call_tmp[744389] "expr temp" "maybe param" "maybe type" "temp"
    (744392 'move' call_tmp[744389](298818 call eltType _mt[243] call_tmp[744382]))
    unknown call_tmp[744394] "expr temp" "maybe param" "maybe type" "temp"
    (744397 'move' call_tmp[744394](298822 call isCopyableType call_tmp[744389]))
    unknown call_tmp[744399] "expr temp" "maybe param" "maybe type" "temp"
    (744402 'move' call_tmp[744399](298823 call ! call_tmp[744394]))
    unknown call_tmp[744404] "expr temp" "maybe param" "maybe type" "temp"
    (744407 'move' call_tmp[744404](298833 call _cond_test call_tmp[744399]))
    if call_tmp[744404]
    {
      unknown call_tmp[744409] "expr temp" "maybe param" "maybe type" "temp"
      (744412 'move' call_tmp[744409](298828 call + "Cannot copy list with element type that " "cannot be copied"))
      (298831 call compilerError call_tmp[744409])
    }
    unknown tmp[467421] "temp" "type variable"
    unknown call_tmp[744414] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744417 'move' call_tmp[744414](298844 'typeof' this[304123]))
    (467423 'move' tmp[467421](298845 call eltType _mt[243] call_tmp[744414]))
    (467425 'init field' this[304123] c"eltType" tmp[467421])
    (490865 'end of statement')
    unknown call_tmp[744421] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744424 'move' call_tmp[744421](298856 'typeof' this[304123]))
    unknown call_tmp[744428] "maybe param" "maybe type" "temp"
    (744431 'move' call_tmp[744428](298857 call parSafe _mt[243] call_tmp[744421]))
    unknown tmp[467429] "param" "temp"
    (467431 'init var' tmp[467429] call_tmp[744428])
    (467433 'init field' this[304123] c"parSafe" tmp[467429])
    (490866 'end of statement')
    unknown tmp[467438] "temp"
    (467440 'init var' tmp[467438] 0)
    (467442 '.=' this[304123] c"_size" tmp[467438])
    (490867 'end of statement')
    unknown tmp[467454] "temp"
    unknown tmp[580718] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580719] "maybe param" "temp"
    unknown call_tmp[744433] "expr temp" "maybe param" "maybe type" "temp"
    (744436 'move' call_tmp[744433](467462 '.v' this[304123] c"parSafe"))
    (580724 'move' tmp[580719](580722 call _cond_test call_tmp[744433]))
    if tmp[580719]
    {
      unknown tmp[580726] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580728 'move' tmp[580726](748036 'new' _LockWrapper[405108](?)))
      (580733 'move' tmp[580718](580730 '_paramFoldLogical' tmp[580719] tmp[580726]))
    }
    {
      (580738 'move' tmp[580718](580735 '_paramFoldLogical' tmp[580719] none[57]))
    }
    (467456 'init var' tmp[467454] tmp[580718])
    (467458 '.=' this[304123] c"_lock$" tmp[467454])
    (490868 'end of statement')
    unknown call_tmp[744438] "expr temp" "maybe param" "maybe type" "temp"
    (744441 'move' call_tmp[744438](467479 '.v' this[304123] c"eltType"))
    unknown call_tmp[744443] "expr temp" "maybe param" "maybe type" "temp"
    (744446 'move' call_tmp[744443](467471 call _ddata[11695](?) call_tmp[744438]))
    unknown call_tmp[744448] "maybe param" "maybe type" "temp"
    (744451 'move' call_tmp[744448](467469 call _ddata[11695](?) call_tmp[744443]))
    unknown tmp[467466] "temp"
    (467473 'init var' tmp[467466] nil[44] call_tmp[744448])
    (467475 'init field' this[304123] c"_arrays" tmp[467466])
    (490869 'end of statement')
    unknown tmp[467483] "temp"
    (467485 'init var' tmp[467483] 0)
    (467487 '.=' this[304123] c"_arrayCapacity" tmp[467483])
    (490870 'end of statement')
    unknown tmp[467492] "temp"
    (467494 'init var' tmp[467492] 0)
    (467496 '.=' this[304123] c"_totalCapacity" tmp[467492])
    (490871 'end of statement')
    unknown tmp[467500] "temp"
    unknown call_tmp[744453] "expr temp" "maybe param" "maybe type" "temp"
    (744456 'move' call_tmp[744453](467511 '.v' this[304123] c"eltType"))
    unknown call_tmp[744458] "expr temp" "maybe param" "maybe type" "temp"
    (744461 'move' call_tmp[744458](467503 call _dummyFieldType call_tmp[744453]))
    (467505 'default init var' tmp[467500] call_tmp[744458])
    (467507 '.=' this[304123] c"_dummyFieldToForceBorrowChecking" tmp[467500])
    (490872 'end of statement')
    (298873 call(405159 call (partial) _commonInitFromIterable _mt[243] this[304123]) other[298810])
    (538990 return _void[55])
  }
  where {
    unknown call_tmp[744465] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744468 'move' call_tmp[744465](467408 'typeof' this[304123]))
    unknown call_tmp[744472] "expr temp" "maybe param" "maybe type" "temp"
    (744475 'move' call_tmp[744472](467407 call eltType _mt[243] call_tmp[744465]))
    unknown call_tmp[744477] "expr temp" "maybe param" "maybe type" "temp"
    (744480 'move' call_tmp[744477](467403 'query' other[298810] 1))
    unknown call_tmp[744482] "expr temp" "maybe param" "maybe type" "temp"
    (744485 'move' call_tmp[744482](467411 call == call_tmp[744472] call_tmp[744477]))
    (467415 call & 1 call_tmp[744482])
  }
  function list[304105](?).init=[298892](arg _mt[304129]:_MT[238], ref arg this[304127]:list[304105](?), arg other[298889]:_array[133588](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[744487] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744490 'move' call_tmp[744487](298896 'typeof' this[304127]))
    unknown call_tmp[744494] "expr temp" "maybe param" "maybe type" "temp"
    (744497 'move' call_tmp[744494](298897 call eltType _mt[243] call_tmp[744487]))
    unknown call_tmp[744499] "expr temp" "maybe param" "maybe type" "temp"
    (744502 'move' call_tmp[744499](298901 call isCopyableType call_tmp[744494]))
    unknown call_tmp[744504] "expr temp" "maybe param" "maybe type" "temp"
    (744507 'move' call_tmp[744504](298902 call ! call_tmp[744499]))
    unknown call_tmp[744509] "expr temp" "maybe param" "maybe type" "temp"
    (744512 'move' call_tmp[744509](298944 call _cond_test call_tmp[744504]))
    if call_tmp[744509]
    {
      unknown call_tmp[744514] "expr temp" "maybe param" "maybe type" "temp"
      (744517 'move' call_tmp[744514](298939 call + "Cannot copy list from array with element type " "that cannot be copied"))
      (298942 call compilerError call_tmp[744514])
    }
    unknown tmp[467526] "temp" "type variable"
    unknown call_tmp[744519] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744522 'move' call_tmp[744519](298955 'typeof' this[304127]))
    (467528 'move' tmp[467526](298956 call eltType _mt[243] call_tmp[744519]))
    (467530 'init field' this[304127] c"eltType" tmp[467526])
    (490875 'end of statement')
    unknown call_tmp[744526] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744529 'move' call_tmp[744526](298967 'typeof' this[304127]))
    unknown call_tmp[744533] "maybe param" "maybe type" "temp"
    (744536 'move' call_tmp[744533](298968 call parSafe _mt[243] call_tmp[744526]))
    unknown tmp[467534] "param" "temp"
    (467536 'init var' tmp[467534] call_tmp[744533])
    (467538 'init field' this[304127] c"parSafe" tmp[467534])
    (490876 'end of statement')
    unknown tmp[467543] "temp"
    (467545 'init var' tmp[467543] 0)
    (467547 '.=' this[304127] c"_size" tmp[467543])
    (490877 'end of statement')
    unknown tmp[467559] "temp"
    unknown tmp[580745] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580746] "maybe param" "temp"
    unknown call_tmp[744538] "expr temp" "maybe param" "maybe type" "temp"
    (744541 'move' call_tmp[744538](467567 '.v' this[304127] c"parSafe"))
    (580751 'move' tmp[580746](580749 call _cond_test call_tmp[744538]))
    if tmp[580746]
    {
      unknown tmp[580753] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580755 'move' tmp[580753](748037 'new' _LockWrapper[405108](?)))
      (580760 'move' tmp[580745](580757 '_paramFoldLogical' tmp[580746] tmp[580753]))
    }
    {
      (580765 'move' tmp[580745](580762 '_paramFoldLogical' tmp[580746] none[57]))
    }
    (467561 'init var' tmp[467559] tmp[580745])
    (467563 '.=' this[304127] c"_lock$" tmp[467559])
    (490878 'end of statement')
    unknown call_tmp[744543] "expr temp" "maybe param" "maybe type" "temp"
    (744546 'move' call_tmp[744543](467584 '.v' this[304127] c"eltType"))
    unknown call_tmp[744548] "expr temp" "maybe param" "maybe type" "temp"
    (744551 'move' call_tmp[744548](467576 call _ddata[11695](?) call_tmp[744543]))
    unknown call_tmp[744553] "maybe param" "maybe type" "temp"
    (744556 'move' call_tmp[744553](467574 call _ddata[11695](?) call_tmp[744548]))
    unknown tmp[467571] "temp"
    (467578 'init var' tmp[467571] nil[44] call_tmp[744553])
    (467580 'init field' this[304127] c"_arrays" tmp[467571])
    (490879 'end of statement')
    unknown tmp[467588] "temp"
    (467590 'init var' tmp[467588] 0)
    (467592 '.=' this[304127] c"_arrayCapacity" tmp[467588])
    (490880 'end of statement')
    unknown tmp[467597] "temp"
    (467599 'init var' tmp[467597] 0)
    (467601 '.=' this[304127] c"_totalCapacity" tmp[467597])
    (490881 'end of statement')
    unknown tmp[467605] "temp"
    unknown call_tmp[744558] "expr temp" "maybe param" "maybe type" "temp"
    (744561 'move' call_tmp[744558](467616 '.v' this[304127] c"eltType"))
    unknown call_tmp[744563] "expr temp" "maybe param" "maybe type" "temp"
    (744566 'move' call_tmp[744563](467608 call _dummyFieldType call_tmp[744558]))
    (467610 'default init var' tmp[467605] call_tmp[744563])
    (467612 '.=' this[304127] c"_dummyFieldToForceBorrowChecking" tmp[467605])
    (490882 'end of statement')
    (298984 call(405168 call (partial) _commonInitFromIterable _mt[243] this[304127]) other[298889])
    (538992 return _void[55])
  }
  where {
    unknown call_tmp[744570] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744573 'move' call_tmp[744570](298883 'typeof' this[304127]))
    unknown call_tmp[744577] "expr temp" "maybe param" "maybe type" "temp"
    (744580 'move' call_tmp[744577](298884 call eltType _mt[243] call_tmp[744570]))
    unknown call_tmp[744584] "expr temp" "maybe param" "maybe type" "temp"
    (744587 'move' call_tmp[744584](467520 call eltType _mt[243] other[298889]))
    unknown call_tmp[744589] "expr temp" "maybe param" "maybe type" "temp"
    (744592 'move' call_tmp[744589](467524 call == call_tmp[744577] call_tmp[744584]))
    (467518 call & 1 call_tmp[744589])
  }
  function list[304105](?).init=[299005](arg _mt[304133]:_MT[238], ref arg this[304131]:list[304105](?), arg other[299002]:range[64316](?)) : void[4] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown tmp[467643] "temp" "type variable"
    unknown call_tmp[744594] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744597 'move' call_tmp[744594](299012 'typeof' this[304131]))
    (467645 'move' tmp[467643](299013 call eltType _mt[243] call_tmp[744594]))
    (467647 'init field' this[304131] c"eltType" tmp[467643])
    (490884 'end of statement')
    unknown call_tmp[744601] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744604 'move' call_tmp[744601](299025 'typeof' this[304131]))
    unknown call_tmp[744608] "maybe param" "maybe type" "temp"
    (744611 'move' call_tmp[744608](299026 call parSafe _mt[243] call_tmp[744601]))
    unknown tmp[467651] "param" "temp"
    (467653 'init var' tmp[467651] call_tmp[744608])
    (467655 'init field' this[304131] c"parSafe" tmp[467651])
    (490885 'end of statement')
    unknown call_tmp[744613] "expr temp" "maybe param" "maybe type" "temp"
    (744616 'move' call_tmp[744613](299035 call isBoundedRange other[299002]))
    unknown call_tmp[744618] "expr temp" "maybe param" "maybe type" "temp"
    (744621 'move' call_tmp[744618](299036 call ! call_tmp[744613]))
    unknown call_tmp[744623] "expr temp" "maybe param" "maybe type" "temp"
    (744626 'move' call_tmp[744623](299076 call _cond_test call_tmp[744618]))
    if call_tmp[744623]
    {
      unknown call_tmp[744628] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744631 'move' call_tmp[744628](299039 'typeof' this[304131]))
      unknown call_tmp[744633] "maybe param" "maybe type" "temp"
      (744636 'move' call_tmp[744633](299041 call _cast string[26] call_tmp[744628]))
      unknown e[299043] "dead at end of block" "param"
      (549749 'init var' e[299043] call_tmp[744633])
      (299046 'end of statement')
      unknown call_tmp[744638] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (744641 'move' call_tmp[744638](299049 'typeof' other[299002]))
      unknown call_tmp[744643] "maybe param" "maybe type" "temp"
      (744646 'move' call_tmp[744643](299051 call _cast string[26] call_tmp[744638]))
      unknown f[299053] "dead at end of block" "param"
      (549751 'init var' f[299053] call_tmp[744643])
      (299056 'end of statement')
      unknown call_tmp[744648] "expr temp" "maybe param" "maybe type" "temp"
      (744651 'move' call_tmp[744648](299059 call + "Cannot init " e[299043]))
      unknown call_tmp[744653] "expr temp" "maybe param" "maybe type" "temp"
      (744656 'move' call_tmp[744653](299062 call + call_tmp[744648] " from unbounded "))
      unknown call_tmp[744658] "maybe param" "maybe type" "temp"
      (744661 'move' call_tmp[744658](299065 call + call_tmp[744653] f[299053]))
      unknown msg[299067] "dead at end of block" "param"
      (549753 'init var' msg[299067] call_tmp[744658])
      (299070 'end of statement')
      (299074 call compilerError msg[299067])
    }
    unknown tmp[467660] "temp"
    (467662 'init var' tmp[467660] 0)
    (467664 '.=' this[304131] c"_size" tmp[467660])
    (490887 'end of statement')
    unknown tmp[467676] "temp"
    unknown tmp[580772] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580773] "maybe param" "temp"
    unknown call_tmp[744663] "expr temp" "maybe param" "maybe type" "temp"
    (744666 'move' call_tmp[744663](467684 '.v' this[304131] c"parSafe"))
    (580778 'move' tmp[580773](580776 call _cond_test call_tmp[744663]))
    if tmp[580773]
    {
      unknown tmp[580780] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580782 'move' tmp[580780](748038 'new' _LockWrapper[405108](?)))
      (580787 'move' tmp[580772](580784 '_paramFoldLogical' tmp[580773] tmp[580780]))
    }
    {
      (580792 'move' tmp[580772](580789 '_paramFoldLogical' tmp[580773] none[57]))
    }
    (467678 'init var' tmp[467676] tmp[580772])
    (467680 '.=' this[304131] c"_lock$" tmp[467676])
    (490888 'end of statement')
    unknown call_tmp[744668] "expr temp" "maybe param" "maybe type" "temp"
    (744671 'move' call_tmp[744668](467701 '.v' this[304131] c"eltType"))
    unknown call_tmp[744673] "expr temp" "maybe param" "maybe type" "temp"
    (744676 'move' call_tmp[744673](467693 call _ddata[11695](?) call_tmp[744668]))
    unknown call_tmp[744678] "maybe param" "maybe type" "temp"
    (744681 'move' call_tmp[744678](467691 call _ddata[11695](?) call_tmp[744673]))
    unknown tmp[467688] "temp"
    (467695 'init var' tmp[467688] nil[44] call_tmp[744678])
    (467697 'init field' this[304131] c"_arrays" tmp[467688])
    (490889 'end of statement')
    unknown tmp[467705] "temp"
    (467707 'init var' tmp[467705] 0)
    (467709 '.=' this[304131] c"_arrayCapacity" tmp[467705])
    (490890 'end of statement')
    unknown tmp[467714] "temp"
    (467716 'init var' tmp[467714] 0)
    (467718 '.=' this[304131] c"_totalCapacity" tmp[467714])
    (490891 'end of statement')
    unknown tmp[467722] "temp"
    unknown call_tmp[744683] "expr temp" "maybe param" "maybe type" "temp"
    (744686 'move' call_tmp[744683](467733 '.v' this[304131] c"eltType"))
    unknown call_tmp[744688] "expr temp" "maybe param" "maybe type" "temp"
    (744691 'move' call_tmp[744688](467725 call _dummyFieldType call_tmp[744683]))
    (467727 'default init var' tmp[467722] call_tmp[744688])
    (467729 '.=' this[304131] c"_dummyFieldToForceBorrowChecking" tmp[467722])
    (490892 'end of statement')
    (299090 call(405183 call (partial) _commonInitFromIterable _mt[243] this[304131]) other[299002])
    (538994 return _void[55])
  }
  where {
    unknown call_tmp[744695] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (744698 'move' call_tmp[744695](467627 'typeof' this[304131]))
    unknown call_tmp[744702] "expr temp" "maybe param" "maybe type" "temp"
    (744705 'move' call_tmp[744702](467626 call eltType _mt[243] call_tmp[744695]))
    unknown call_tmp[744707] "expr temp" "maybe param" "maybe type" "temp"
    (744710 'move' call_tmp[744707](467622 'query' other[299002] 1))
    unknown call_tmp[744712] "expr temp" "maybe param" "maybe type" "temp"
    (744715 'move' call_tmp[744712](467630 call == call_tmp[744702] call_tmp[744707]))
    (467634 call & 1 call_tmp[744712])
  }
  function list[304105](?)._commonInitFromIterable[299098](arg _mt[304137]:_MT[238], arg this[304135]:list[304105](?), arg iterable[299096]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299111 call(299107 call (partial) _firstTimeInitializeArrays _mt[243] this[304135]))
    (490894 'end of statement')
    {
      unknown _indexOfInterest[299121] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[299122] "expr temp" "temp"
      (299131 'move' _iterator[299122](299129 call _getIterator iterable[299096]))
      Defer
      {
        {
          (299147 call _freeIterator _iterator[299122])
        }
      }
      { scopeless type
        (299136 'move' _indexOfInterest[299121](299133 call iteratorIndex _iterator[299122]))
      }
      ForLoop[299123]
      {
        unknown x[299140] "index var" "insert auto destroy"
        (490896 'end of statement')
        (299142 'move' x[299140] _indexOfInterest[299121])
        (490897 'end of statement' x[299140])
        (299119 call(405191 call (partial) append _mt[243] this[304135]) x[299140])
        (490899 'end of statement' x[299140])
        label _continueLabel[299126]
        _indexOfInterest[299121]
        _iterator[299122]
      }
      label _breakLabel[299127]
    }
    (538996 return _void[55])
  }
  {
    (299104 call <(299101 'lifetime_of' this[304135])(299103 'lifetime_of' iterable[299096]))
  }
  function list[304105](?)._firstTimeInitializeArrays[299159](arg _mt[304141]:_MT[238], arg this[304139]:list[304105](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744723] "expr temp" "maybe param" "maybe type" "temp"
    (744726 'move' call_tmp[744723](405199 call _arrays _mt[243] this[304139]))
    unknown call_tmp[744728] "expr temp" "maybe param" "maybe type" "temp"
    (744731 'move' call_tmp[744728](299164 call == call_tmp[744723] nil[44]))
    (299167 call _sanity call_tmp[744728])
    (490901 'end of statement')
    unknown call_tmp[744735] "expr temp" "maybe param" "maybe type" "temp"
    (744738 'move' call_tmp[744735](405206 call _totalCapacity _mt[243] this[304139]))
    unknown call_tmp[744740] "expr temp" "maybe param" "maybe type" "temp"
    (744743 'move' call_tmp[744740](299173 call == call_tmp[744735] 0))
    (299176 call _sanity call_tmp[744740])
    (490902 'end of statement')
    unknown call_tmp[744747] "expr temp" "maybe param" "maybe type" "temp"
    (744750 'move' call_tmp[744747](405213 call _size _mt[243] this[304139]))
    unknown call_tmp[744752] "expr temp" "maybe param" "maybe type" "temp"
    (744755 'move' call_tmp[744752](299181 call == call_tmp[744747] 0))
    (299184 call _sanity call_tmp[744752])
    (490903 'end of statement')
    unknown call_tmp[744759] "expr temp" "maybe param" "maybe type" "temp"
    (744762 'move' call_tmp[744759](405218 call _arrays _mt[243] this[304139]))
    unknown call_tmp[744766] "expr temp" "maybe param" "maybe type" "temp"
    (744769 'move' call_tmp[744766](299190 call(405224 call (partial) _makeBlockArray _mt[243] this[304139]) _initialArrayCapacity[298145]))
    (299191 call = call_tmp[744759] call_tmp[744766])
    (490904 'end of statement')
    unknown call_tmp[744773] "expr temp" "maybe param" "maybe type" "temp"
    (744776 'move' call_tmp[744773](405232 call _arrayCapacity _mt[243] this[304139]))
    (299196 call = call_tmp[744773] _initialArrayCapacity[298145])
    (490905 'end of statement')
    unknown call_tmp[744780] "expr temp" "maybe param" "maybe type" "temp"
    (744783 'move' call_tmp[744780](299202 call(405238 call (partial) _arrays _mt[243] this[304139]) 0))
    unknown call_tmp[744787] "expr temp" "maybe param" "maybe type" "temp"
    (744790 'move' call_tmp[744787](299206 call(405244 call (partial) _makeArray _mt[243] this[304139]) _initialCapacity[298140]))
    (299207 call = call_tmp[744780] call_tmp[744787])
    (490906 'end of statement')
    unknown call_tmp[744794] "expr temp" "maybe param" "maybe type" "temp"
    (744797 'move' call_tmp[744794](405250 call _totalCapacity _mt[243] this[304139]))
    (299212 call = call_tmp[744794] _initialCapacity[298140])
    (538998 return _void[55])
  }
  function list[304105](?).deinit[299219](arg _mt[304145]:_MT[238], arg this[304143]:list[304105](?)) : _unknown[51] "destructor" "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299223 call(405257 call (partial) _fireAllDestructors _mt[243] this[304143]))
    (490908 'end of statement')
    (299228 call(405263 call (partial) _freeAllArrays _mt[243] this[304143]))
    (490909 'end of statement')
    unknown call_tmp[744805] "expr temp" "maybe param" "maybe type" "temp"
    (744808 'move' call_tmp[744805](405268 call _totalCapacity _mt[243] this[304143]))
    unknown call_tmp[744810] "expr temp" "maybe param" "maybe type" "temp"
    (744813 'move' call_tmp[744810](299233 call == call_tmp[744805] 0))
    (299236 call _sanity call_tmp[744810])
    (490910 'end of statement')
    unknown call_tmp[744817] "expr temp" "maybe param" "maybe type" "temp"
    (744820 'move' call_tmp[744817](405273 call _size _mt[243] this[304143]))
    unknown call_tmp[744822] "expr temp" "maybe param" "maybe type" "temp"
    (744825 'move' call_tmp[744822](299241 call == call_tmp[744817] 0))
    (299244 call _sanity call_tmp[744822])
    (490911 'end of statement')
    unknown call_tmp[744829] "expr temp" "maybe param" "maybe type" "temp"
    (744832 'move' call_tmp[744829](405278 call _arrays _mt[243] this[304143]))
    unknown call_tmp[744834] "expr temp" "maybe param" "maybe type" "temp"
    (744837 'move' call_tmp[744834](299249 call == call_tmp[744829] nil[44]))
    (299252 call _sanity call_tmp[744834])
    (539000 return _void[55])
  }
  function list[304105](?)._destroy[299262](arg _mt[304149]:_MT[238], arg this[304147]:list[304105](?), ref arg item[299259] :
  (405283 call eltType _mt[243] this[304147])) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    (299267 call chpl__autoDestroy item[299259])
    (539002 return _void[55])
  }
  function list[304105](?)._move[299279](arg _mt[304153]:_MT[238], arg this[304151]:list[304105](?), ref arg src[299276]:_any[178](?), ref arg dst[299282] :
  (467736 'typeof' src[299276])) : _unknown[51] "inline" "method" "primary method" "no doc" "unsafe" "no return value for void"
  {
    (299295 '=' dst[299282] src[299276])
    (539004 return _void[55])
  }
  {
    (299289 call ==(299286 'lifetime_of' src[299276])(299288 'lifetime_of' dst[299282]))
  }
  function list[304105](?)._getArrayCapacity[299307](arg _mt[304157]:_MT[238], arg this[304155]:list[304105](?), arg array[299304]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539008] "RVV" "temp"
    unknown call_tmp[744841] "expr temp" "maybe param" "maybe type" "temp"
    (744844 'move' call_tmp[744841](299314 call log2 _initialCapacity[298140]))
    unknown call_tmp[744846] "maybe param" "maybe type" "temp"
    (744849 'move' call_tmp[744846](299315 call + array[299304] call_tmp[744841]))
    const exp[299317] "dead at end of block" "const" "insert auto destroy"
    (549755 'init var' exp[299317] call_tmp[744846])
    (299320 'end of statement')
    unknown call_tmp[744851] "maybe param" "maybe type" "temp"
    (744854 'move' call_tmp[744851](299324 call ** 2 exp[299317]))
    const result[299326] "dead at end of block" "const" "insert auto destroy"
    (549757 'init var' result[299326] call_tmp[744851])
    (299329 'end of statement' exp[299317])
    (539014 'move' ret[539008](539013 'coerce' result[299326] int(64)[13]))
    gotoReturn _end__getArrayCapacity[539006] _end__getArrayCapacity[539006]
    (490916 'end of statement' result[299326])
    label _end__getArrayCapacity[539006]
    (539010 return ret[539008])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?)._getArrayIdx[299342](arg _mt[304161]:_MT[238], arg this[304159]:list[304105](?), arg zpos[299339]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539020] "RVV" "temp"
    unknown call_tmp[744856] "maybe param" "maybe type" "temp"
    (744859 'move' call_tmp[744856](299347 call + zpos[299339] _initialCapacity[298140]))
    const adj[299349] "dead at end of block" "const" "insert auto destroy"
    (549759 'init var' adj[299349] call_tmp[744856])
    (299352 'end of statement')
    unknown call_tmp[744861] "expr temp" "maybe param" "maybe type" "temp"
    (744864 'move' call_tmp[744861](299357 call log2 adj[299349]))
    unknown call_tmp[744866] "expr temp" "maybe param" "maybe type" "temp"
    (744869 'move' call_tmp[744866](299361 call log2 _initialCapacity[298140]))
    unknown call_tmp[744871] "maybe param" "maybe type" "temp"
    (744874 'move' call_tmp[744871](299362 call - call_tmp[744861] call_tmp[744866]))
    const result[299364] "dead at end of block" "const" "insert auto destroy"
    (549761 'init var' result[299364] call_tmp[744871])
    (299367 'end of statement' adj[299349])
    (539026 'move' ret[539020](539025 'coerce' result[299364] int(64)[13]))
    gotoReturn _end__getArrayIdx[539018] _end__getArrayIdx[539018]
    (490919 'end of statement' result[299364])
    label _end__getArrayIdx[539018]
    (539022 return ret[539020])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?)._getLastArrayIdx[299376](arg _mt[304165]:_MT[238], arg this[304163]:list[304105](?)) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539032] "RVV" "temp"
    unknown call_tmp[744880] "expr temp" "maybe param" "maybe type" "temp"
    (744883 'move' call_tmp[744880](405309 call _size _mt[243] this[304163]))
    unknown call_tmp[744885] "expr temp" "maybe param" "maybe type" "temp"
    (744888 'move' call_tmp[744885](299382 call - call_tmp[744880] 1))
    unknown call_tmp[744890] "maybe param" "maybe type" "temp"
    (744893 'move' call_tmp[744890](299385 call(405304 call (partial) _getArrayIdx _mt[243] this[304163]) call_tmp[744885]))
    const result[299386] "dead at end of block" "const" "insert auto destroy"
    (549763 'init var' result[299386] call_tmp[744890])
    (299389 'end of statement')
    unknown call_tmp[744895] "expr temp" "maybe param" "maybe type" "temp"
    (744898 'move' call_tmp[744895](299394 call >= result[299386] 0))
    (299397 call _sanity call_tmp[744895])
    (490921 'end of statement' result[299386])
    (539038 'move' ret[539032](539037 'coerce' result[299386] int(64)[13]))
    gotoReturn _end__getLastArrayIdx[539030] _end__getLastArrayIdx[539030]
    (490923 'end of statement' result[299386])
    label _end__getLastArrayIdx[539030]
    (539034 return ret[539032])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?)._getItemIdx[299411](arg _mt[304169]:_MT[238], arg this[304167]:list[304105](?), arg zpos[299408]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539044] "RVV" "temp"
    unknown call_tmp[744900] "maybe param" "maybe type" "temp"
    (744903 'move' call_tmp[744900](299416 call + zpos[299408] _initialCapacity[298140]))
    const adj[299418] "dead at end of block" "const" "insert auto destroy"
    (549765 'init var' adj[299418] call_tmp[744900])
    (299421 'end of statement')
    unknown call_tmp[744905] "expr temp" "maybe param" "maybe type" "temp"
    (744908 'move' call_tmp[744905](299428 call log2 adj[299418]))
    unknown call_tmp[744910] "expr temp" "maybe param" "maybe type" "temp"
    (744913 'move' call_tmp[744910](299429 call << 1 call_tmp[744905]))
    unknown call_tmp[744915] "maybe param" "maybe type" "temp"
    (744918 'move' call_tmp[744915](299431 call ^ adj[299418] call_tmp[744910]))
    const result[299433] "dead at end of block" "const" "insert auto destroy"
    (549767 'init var' result[299433] call_tmp[744915])
    (299436 'end of statement' adj[299418] adj[299418])
    (539050 'move' ret[539044](539049 'coerce' result[299433] int(64)[13]))
    gotoReturn _end__getItemIdx[539042] _end__getItemIdx[539042]
    (490927 'end of statement' result[299433])
    label _end__getItemIdx[539042]
    (539046 return ret[539044])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?)._getRef[299449](arg _mt[304173]:_MT[238], const  ref arg this[304171]:list[304105](?), arg idx[299446]:int(64)[13]) ref : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539056] "RVV" "temp"
    unknown tmp[434728] "maybe param" "temp"
    (434739 'move' tmp[434728](299454 call >= idx[299446] 0))
    unknown call_tmp[744920] "expr temp" "maybe param" "maybe type" "temp"
    (744923 'move' call_tmp[744920](434741 call _cond_invalid tmp[434728]))
    if call_tmp[744920]
    {
      (434744 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580799] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580800] "maybe param" "temp"
    unknown call_tmp[744925] "expr temp" "maybe param" "maybe type" "temp"
    (744928 'move' call_tmp[744925](434729 call isTrue tmp[434728]))
    (580805 'move' tmp[580800](580803 call _cond_test call_tmp[744925]))
    if tmp[580800]
    {
      unknown tmp[580807] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[744932] "expr temp" "maybe param" "maybe type" "temp"
      (744935 'move' call_tmp[744932](405323 call _totalCapacity _mt[243] this[304171]))
      unknown call_tmp[744937] "expr temp" "maybe param" "maybe type" "temp"
      (744940 'move' call_tmp[744937](299458 call < idx[299446] call_tmp[744932]))
      (580809 'move' tmp[580807](434732 call isTrue call_tmp[744937]))
      (580814 'move' tmp[580799](580811 '_paramFoldLogical' tmp[580800] tmp[580807]))
    }
    {
      (580819 'move' tmp[580799](580816 '_paramFoldLogical' tmp[580800] 0))
    }
    (299463 call _sanity tmp[580799])
    (490930 'end of statement')
    unknown call_tmp[744944] "maybe param" "maybe type" "temp"
    (744947 'move' call_tmp[744944](299469 call(405327 call (partial) _getArrayIdx _mt[243] this[304171]) idx[299446]))
    const arrayIdx[299470] "dead at end of block" "const" "insert auto destroy"
    (549769 'init var' arrayIdx[299470] call_tmp[744944])
    (299473 'end of statement')
    unknown call_tmp[744951] "maybe param" "maybe type" "temp"
    (744954 'move' call_tmp[744951](299477 call(405334 call (partial) _getItemIdx _mt[243] this[304171]) idx[299446]))
    const itemIdx[299478] "dead at end of block" "const" "insert auto destroy"
    (549771 'init var' itemIdx[299478] call_tmp[744951])
    (299481 'end of statement')
    unknown call_tmp[744958] "maybe param" "maybe type" "temp"
    (744961 'move' call_tmp[744958](299485 call(405340 call (partial) _arrays _mt[243] this[304171]) arrayIdx[299470]))
    const array[299486] "dead at end of block" "const" "insert auto destroy"
    (549773 'init var' array[299486] call_tmp[744958])
    (299489 'end of statement')
    unknown call_tmp[744963] "expr temp" "maybe param" "maybe type" "temp"
    (744966 'move' call_tmp[744963](299493 call != array[299486] nil[44]))
    (299496 call _sanity call_tmp[744963])
    (490932 'end of statement' array[299486])
    unknown result[299502] "dead at end of block" "ref var"
    unknown call_tmp[744968] "expr temp" "maybe param" "maybe type" "temp"
    (744971 'move' call_tmp[744968](299501 call array[299486] itemIdx[299478]))
    (549776 'move' result[299502](549775 'addr of' call_tmp[744968]))
    (299505 'end of statement' arrayIdx[299470] array[299486] itemIdx[299478])
    (539061 'move' ret[539056](539060 'addr of' result[299502]))
    gotoReturn _end__getRef[539054] _end__getRef[539054]
    (490936 'end of statement' result[299502])
    label _end__getRef[539054]
    (539058 return ret[539056])
  }
  function list[304105](?)._enter[299513](arg _mt[304177]:_MT[238], arg this[304175]:list[304105](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744975] "expr temp" "maybe param" "maybe type" "temp"
    (744978 'move' call_tmp[744975](405350 call parSafe _mt[243] this[304175]))
    unknown call_tmp[744980] "expr temp" "maybe param" "maybe type" "temp"
    (744983 'move' call_tmp[744980](299523 call _cond_test call_tmp[744975]))
    if call_tmp[744980]
    {
      unknown call_tmp[744987] "expr temp" "maybe param" "maybe type" "temp"
      (744990 'move' call_tmp[744987](364847 call _lock$ _mt[243] this[304175]))
      (299521 call(299517 call (partial) lock _mt[243] call_tmp[744987]))
    }
    (539065 return _void[55])
  }
  function list[304105](?)._leave[299533](arg _mt[304181]:_MT[238], arg this[304179]:list[304105](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[744996] "expr temp" "maybe param" "maybe type" "temp"
    (744999 'move' call_tmp[744996](405355 call parSafe _mt[243] this[304179]))
    unknown call_tmp[745001] "expr temp" "maybe param" "maybe type" "temp"
    (745004 'move' call_tmp[745001](299543 call _cond_test call_tmp[744996]))
    if call_tmp[745001]
    {
      unknown call_tmp[745008] "expr temp" "maybe param" "maybe type" "temp"
      (745011 'move' call_tmp[745008](364852 call _lock$ _mt[243] this[304179]))
      (299541 call(299537 call (partial) unlock _mt[243] call_tmp[745008]))
    }
    (539067 return _void[55])
  }
  function list[304105](?)._withinBounds[299557](arg _mt[304185]:_MT[238], const arg this[304183]:list[304105](?), arg idx[299554]:int(64)[13]) : _unknown[51] "inline" "method" "primary method" "no doc"
  {
    unknown ret[539071] "RVV" "temp"
    unknown tmp[434749] "maybe param" "temp"
    (434760 'move' tmp[434749](299562 call >= idx[299554] 0))
    unknown call_tmp[745015] "expr temp" "maybe param" "maybe type" "temp"
    (745018 'move' call_tmp[745015](434762 call _cond_invalid tmp[434749]))
    if call_tmp[745015]
    {
      (434765 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580826] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580827] "maybe param" "temp"
    unknown call_tmp[745020] "expr temp" "maybe param" "maybe type" "temp"
    (745023 'move' call_tmp[745020](434750 call isTrue tmp[434749]))
    (580832 'move' tmp[580827](580830 call _cond_test call_tmp[745020]))
    if tmp[580827]
    {
      unknown tmp[580834] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745027] "expr temp" "maybe param" "maybe type" "temp"
      (745030 'move' call_tmp[745027](405362 call _size _mt[243] this[304183]))
      unknown call_tmp[745032] "expr temp" "maybe param" "maybe type" "temp"
      (745035 'move' call_tmp[745032](299566 call < idx[299554] call_tmp[745027]))
      (580836 'move' tmp[580834](434753 call isTrue call_tmp[745032]))
      (580841 'move' tmp[580826](580838 '_paramFoldLogical' tmp[580827] tmp[580834]))
    }
    {
      (580846 'move' tmp[580826](580843 '_paramFoldLogical' tmp[580827] 0))
    }
    (539077 'move' ret[539071](539076 'coerce' tmp[580826] bool[10]))
    (539073 return ret[539071])
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?)._boundsCheckLeaveOnThrow[299582](arg _mt[304189]:_MT[238], const arg this[304187]:list[304105](?), arg i[299579]:int(64)[13], arg umsg[299602]:string[26] =
  "") : _unknown[51] throws "inline" "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745039] "expr temp" "maybe param" "maybe type" "temp"
    (745042 'move' call_tmp[745039](299609 call(405368 call (partial) _withinBounds _mt[243] this[304187]) i[299579]))
    unknown call_tmp[745044] "expr temp" "maybe param" "maybe type" "temp"
    (745047 'move' call_tmp[745044](299610 call ! call_tmp[745039]))
    unknown call_tmp[745049] "expr temp" "maybe param" "maybe type" "temp"
    (745052 'move' call_tmp[745049](299677 call _cond_test call_tmp[745044]))
    if call_tmp[745049]
    {
      (299614 call(405375 call (partial) _leave _mt[243] this[304187]))
      (490942 'end of statement')
      const msg[299664] "dead at end of block" "const" "insert auto destroy"
      unknown tmp[580853] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[580854] "maybe param" "temp"
      unknown call_tmp[745056] "expr temp" "maybe param" "maybe type" "temp"
      (745059 'move' call_tmp[745056](299635 call != umsg[299602] ""))
      (580859 'move' tmp[580854](580857 call _cond_test call_tmp[745056]))
      if tmp[580854]
      {
        (580864 'move' tmp[580853](580861 '_paramFoldLogical' tmp[580854] umsg[299602]))
      }
      {
        unknown tmp[580866] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[745061] "expr temp" "maybe param" "maybe type" "temp"
        (745064 'move' call_tmp[745061](299657 call _cast string[26] i[299579]))
        (580868 'move' tmp[580866](299659 call + "Index out of bounds: " call_tmp[745061]))
        (580873 'move' tmp[580853](580870 '_paramFoldLogical' tmp[580854] tmp[580866]))
      }
      (549778 'init var' msg[299664] tmp[580853])
      (299667 'end of statement')
      unknown call_tmp[745066] "insert auto destroy for explicit new" "maybe param" "maybe type" "temp"
      (745069 'move' call_tmp[745066](748039 'new' IllegalArgumentError[388690](?) msg[299664](_chpl_manager = _owned[30](?))))
      unknown call_tmp[745071] "expr temp" "maybe param" "maybe type" "temp"
      (745074 'move' call_tmp[745071](468078 call chpl_fix_thrown_error call_tmp[745066]))
      (299675 'throw' call_tmp[745071])
      (490943 'end of statement' msg[299664])
    }
    (539079 return _void[55])
  }
  function list[304105](?)._makeBlockArray[299690](arg _mt[304193]:_MT[238], arg this[304191]:list[304105](?), arg size[299687]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539083] "RVV" "temp"
    unknown call_tmp[745078] "expr temp" "maybe param" "maybe type" "temp"
    (745081 'move' call_tmp[745078](405386 call eltType _mt[243] this[304191]))
    unknown call_tmp[745083] "expr temp" "maybe param" "maybe type" "temp"
    (745086 'move' call_tmp[745083](299696 call _ddata[11695](?) call_tmp[745078]))
    unknown call_tmp[745088] "expr temp" "maybe param" "maybe type" "temp"
    (745091 'move' call_tmp[745088](299699 call _ddata_allocate call_tmp[745083] size[299687]))
    (539088 'move' ret[539083](539087 'deref' call_tmp[745088]))
    (539085 return ret[539083])
  }
  function list[304105](?)._freeBlockArray[299717](arg _mt[304197]:_MT[238], arg this[304195]:list[304105](?), arg data[299714] :
  unknown call_tmp[745095] "expr temp" "maybe param" "maybe type" "temp", arg size[299720]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299727 call _ddata_free data[299714] size[299720])
    (539090 return _void[55])
  }
  function list[304105](?)._makeArray[299738](arg _mt[304201]:_MT[238], arg this[304199]:list[304105](?), arg size[299735]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539094] "RVV" "temp"
    unknown call_tmp[745107] "expr temp" "maybe param" "maybe type" "temp"
    (745110 'move' call_tmp[745107](405401 call eltType _mt[243] this[304199]))
    unknown call_tmp[745112] "expr temp" "maybe param" "maybe type" "temp"
    (745115 'move' call_tmp[745112](299746 call _ddata_allocate call_tmp[745107] size[299735](initElts = 0)))
    (539099 'move' ret[539094](539098 'deref' call_tmp[745112]))
    (539096 return ret[539094])
  }
  function list[304105](?)._freeArray[299761](arg _mt[304205]:_MT[238], arg this[304203]:list[304105](?), arg data[299758] :
  unknown call_tmp[745119] "expr temp" "maybe param" "maybe type" "temp", arg size[299764]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (299771 call _ddata_free data[299758] size[299764])
    (539101 return _void[55])
  }
  function list[304105](?)._maybeAcquireMem[299782](arg _mt[304209]:_MT[238], arg this[304207]:list[304105](?), arg amount[299779]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745126] "expr temp" "maybe param" "maybe type" "temp"
    (745129 'move' call_tmp[745126](405415 call _totalCapacity _mt[243] this[304207]))
    unknown call_tmp[745133] "expr temp" "maybe param" "maybe type" "temp"
    (745136 'move' call_tmp[745133](405420 call _size _mt[243] this[304207]))
    unknown call_tmp[745138] "maybe param" "maybe type" "temp"
    (745141 'move' call_tmp[745138](299786 call - call_tmp[745126] call_tmp[745133]))
    const remaining[299788] "dead at end of block" "const" "insert auto destroy"
    (549780 'init var' remaining[299788] call_tmp[745138])
    (299791 'end of statement')
    unknown call_tmp[745143] "expr temp" "maybe param" "maybe type" "temp"
    (745146 'move' call_tmp[745143](299796 call >= remaining[299788] 0))
    (299799 call _sanity call_tmp[745143])
    (490949 'end of statement' remaining[299788])
    unknown call_tmp[745148] "expr temp" "maybe param" "maybe type" "temp"
    (745151 'move' call_tmp[745148](299803 call >= remaining[299788] amount[299779]))
    unknown call_tmp[745153] "expr temp" "maybe param" "maybe type" "temp"
    (745156 'move' call_tmp[745153](299807 call _cond_test call_tmp[745148]))
    if call_tmp[745153]
    {
      gotoReturn _end__maybeAcquireMem[539103] _end__maybeAcquireMem[539103]
    }
    unknown lastArrayIdx[299823] "dead at end of block" "insert auto destroy"
    unknown tmp[580880] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580881] "maybe param" "temp"
    unknown call_tmp[745160] "expr temp" "maybe param" "maybe type" "temp"
    (745163 'move' call_tmp[745160](405428 call _size _mt[243] this[304207]))
    unknown call_tmp[745165] "expr temp" "maybe param" "maybe type" "temp"
    (745168 'move' call_tmp[745165](299814 call == call_tmp[745160] 0))
    (580886 'move' tmp[580881](580884 call _cond_test call_tmp[745165]))
    if tmp[580881]
    {
      (580891 'move' tmp[580880](580888 '_paramFoldLogical' tmp[580881] 0))
    }
    {
      unknown tmp[580893] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (580895 'move' tmp[580893](299819 call(405434 call (partial) _getLastArrayIdx _mt[243] this[304207])))
      (580900 'move' tmp[580880](580897 '_paramFoldLogical' tmp[580881] tmp[580893]))
    }
    (549782 'init var' lastArrayIdx[299823] tmp[580880])
    (299826 'end of statement')
    unknown call_tmp[745172] "maybe param" "maybe type" "temp"
    (745175 'move' call_tmp[745172](299829 call - amount[299779] remaining[299788]))
    unknown req[299831] "dead at end of block" "insert auto destroy"
    (549784 'init var' req[299831] call_tmp[745172])
    (299834 'end of statement' remaining[299788])
    {
      unknown tmp[300034] "temp"
      unknown call_tmp[745177] "expr temp" "maybe param" "maybe type" "temp"
      (745180 'move' call_tmp[745177](300055 call > req[299831] 0))
      (300058 'move' tmp[300034](300053 call _cond_test call_tmp[745177]))
      WhileDo[300039]
      {
        {
          unknown call_tmp[745184] "expr temp" "maybe param" "maybe type" "temp"
          (745187 'move' call_tmp[745184](405442 call _arrayCapacity _mt[243] this[304207]))
          unknown call_tmp[745189] "expr temp" "maybe param" "maybe type" "temp"
          (745192 'move' call_tmp[745189](299842 call - call_tmp[745184] 1))
          unknown call_tmp[745194] "expr temp" "maybe param" "maybe type" "temp"
          (745197 'move' call_tmp[745194](299844 call >= lastArrayIdx[299823] call_tmp[745189]))
          unknown call_tmp[745199] "expr temp" "maybe param" "maybe type" "temp"
          (745202 'move' call_tmp[745199](299944 call _cond_test call_tmp[745194]))
          if call_tmp[745199]
          {
            const tmp[299936] "const" "temp"
            unknown call_tmp[745204] "expr temp" "maybe param" "maybe type" "temp"
            (745207 'move' call_tmp[745204](299933 '_wide_get_locale' this[304207]))
            (299938 'move' tmp[299936](299934 'deref' call_tmp[745204]))
            {
              {
                unknown call_tmp[745213] "expr temp" "maybe param" "maybe type" "temp"
                (745216 'move' call_tmp[745213](405452 call _arrayCapacity _mt[243] this[304207]))
                unknown call_tmp[745218] "expr temp" "maybe param" "maybe type" "temp"
                (745221 'move' call_tmp[745218](299850 call * call_tmp[745213] 2))
                unknown call_tmp[745223] "maybe param" "maybe type" "temp"
                (745226 'move' call_tmp[745223](299853 call(405447 call (partial) _makeBlockArray _mt[243] this[304207]) call_tmp[745218]))
                unknown _narrays[299854] "dead at end of block" "insert auto destroy"
                (549786 'init var' _narrays[299854] call_tmp[745223])
                (299857 'end of statement')
                {
                  unknown _indexOfInterest[299877] "an _indexOfInterest or chpl__followIdx variable" "temp"
                  unknown _iterator[299878] "expr temp" "temp"
                  unknown call_tmp[745230] "expr temp" "maybe param" "maybe type" "temp"
                  (745233 'move' call_tmp[745230](405465 call _arrayCapacity _mt[243] this[304207]))
                  unknown call_tmp[745235] "expr temp" "maybe param" "maybe type" "temp"
                  (745238 'move' call_tmp[745235](299894 call chpl_direct_counted_range_iter 0 call_tmp[745230]))
                  (299887 'move' _iterator[299878](299885 call _getIterator call_tmp[745235]))
                  Defer
                  {
                    {
                      (299910 call _freeIterator _iterator[299878])
                    }
                  }
                  { scopeless type
                    (299899 'move' _indexOfInterest[299877](299896 call iteratorIndex _iterator[299878]))
                  }
                  ForLoop[299879]
                  {
                    unknown i[299903] "index var" "insert auto destroy"
                    (490954 'end of statement')
                    (299905 'move' i[299903] _indexOfInterest[299877])
                    (490955 'end of statement' i[299903])
                    unknown call_tmp[745240] "expr temp" "maybe param" "maybe type" "temp"
                    (745243 'move' call_tmp[745240](299869 call _narrays[299854] i[299903]))
                    unknown call_tmp[745247] "expr temp" "maybe param" "maybe type" "temp"
                    (745250 'move' call_tmp[745247](299873 call(405459 call (partial) _arrays _mt[243] this[304207]) i[299903]))
                    (299874 call = call_tmp[745240] call_tmp[745247])
                    (490957 'end of statement' _narrays[299854] i[299903] i[299903])
                    label _continueLabel[299882]
                    _indexOfInterest[299877]
                    _iterator[299878]
                  }
                  label _breakLabel[299883]
                }
                unknown call_tmp[745256] "expr temp" "maybe param" "maybe type" "temp"
                (745259 'move' call_tmp[745256](405476 call _arrays _mt[243] this[304207]))
                unknown call_tmp[745263] "expr temp" "maybe param" "maybe type" "temp"
                (745266 'move' call_tmp[745263](405481 call _arrayCapacity _mt[243] this[304207]))
                (299921 call(405471 call (partial) _freeBlockArray _mt[243] this[304207]) call_tmp[745256] call_tmp[745263])
                (490961 'end of statement')
                unknown call_tmp[745270] "expr temp" "maybe param" "maybe type" "temp"
                (745273 'move' call_tmp[745270](405486 call _arrays _mt[243] this[304207]))
                (299925 call = call_tmp[745270] _narrays[299854])
                (490962 'end of statement' _narrays[299854])
                unknown call_tmp[745277] "expr temp" "maybe param" "maybe type" "temp"
                (745280 'move' call_tmp[745277](405492 call _arrayCapacity _mt[243] this[304207]))
                (299930 call *= call_tmp[745277] 2)
              }
              (299941 'on block' 0 tmp[299936])
            }
          }
          const tmp[300026] "const" "temp"
          unknown call_tmp[745282] "expr temp" "maybe param" "maybe type" "temp"
          (745285 'move' call_tmp[745282](300023 '_wide_get_locale' this[304207]))
          (300028 'move' tmp[300026](300024 'deref' call_tmp[745282]))
          {
            {
              unknown call_tmp[745289] "maybe param" "maybe type" "temp"
              (745292 'move' call_tmp[745289](299954 call(405498 call (partial) _arrays _mt[243] this[304207]) lastArrayIdx[299823]))
              const oldLast[299955] "dead at end of block" "const" "insert auto destroy"
              (549788 'init var' oldLast[299955] call_tmp[745289])
              (299958 'end of statement')
              unknown call_tmp[745296] "maybe param" "maybe type" "temp"
              (745299 'move' call_tmp[745296](299963 call(405505 call (partial) _getArrayCapacity _mt[243] this[304207]) lastArrayIdx[299823]))
              const oldLastCapacity[299964] "dead at end of block" "const" "insert auto destroy"
              (549790 'init var' oldLastCapacity[299964] call_tmp[745296])
              (299967 'end of statement')
              (299970 call += lastArrayIdx[299823] 1)
              (490967 'end of statement' lastArrayIdx[299823])
              unknown newLast[299977] "dead at end of block" "ref var"
              unknown call_tmp[745303] "expr temp" "maybe param" "maybe type" "temp"
              (745306 'move' call_tmp[745303](299976 call(405512 call (partial) _arrays _mt[243] this[304207]) lastArrayIdx[299823]))
              (549793 'move' newLast[299977](549792 'addr of' call_tmp[745303]))
              (299980 'end of statement')
              unknown call_tmp[745308] "maybe param" "maybe type" "temp"
              (745311 'move' call_tmp[745308](299983 call * oldLastCapacity[299964] 2))
              const newLastCapacity[299985] "dead at end of block" "const" "insert auto destroy"
              (549795 'init var' newLastCapacity[299985] call_tmp[745308])
              (299988 'end of statement' lastArrayIdx[299823] lastArrayIdx[299823] lastArrayIdx[299823] oldLastCapacity[299964])
              unknown call_tmp[745313] "expr temp" "maybe param" "maybe type" "temp"
              (745316 'move' call_tmp[745313](299992 call != oldLast[299955] nil[44]))
              (299995 call _sanity call_tmp[745313])
              (490971 'end of statement' oldLast[299955])
              unknown call_tmp[745318] "expr temp" "maybe param" "maybe type" "temp"
              (745321 'move' call_tmp[745318](300000 call == newLast[299977] nil[44]))
              (300003 call _sanity call_tmp[745318])
              (490973 'end of statement' newLast[299977])
              unknown call_tmp[745325] "expr temp" "maybe param" "maybe type" "temp"
              (745328 'move' call_tmp[745325](300009 call(405521 call (partial) _makeArray _mt[243] this[304207]) newLastCapacity[299985]))
              (300010 call = newLast[299977] call_tmp[745325])
              (490975 'end of statement' newLast[299977] newLastCapacity[299985])
              unknown call_tmp[745332] "expr temp" "maybe param" "maybe type" "temp"
              (745335 'move' call_tmp[745332](405527 call _totalCapacity _mt[243] this[304207]))
              (300015 call += call_tmp[745332] newLastCapacity[299985])
              (490978 'end of statement' newLastCapacity[299985])
              (300020 call -= req[299831] newLastCapacity[299985])
              (490980 'end of statement' req[299831] newLastCapacity[299985])
            }
            (300031 'on block' 0 tmp[300026])
          }
        }
        label _continueLabel[300037]
        unknown call_tmp[745337] "expr temp" "maybe param" "maybe type" "temp"
        (745340 'move' call_tmp[745337](300045 call > req[299831] 0))
        (300048 'move' tmp[300034](300043 call _cond_test call_tmp[745337]))
        tmp[300034]
      }
      label _breakLabel[300038]
    }
    label _end__maybeAcquireMem[539103]
    (539105 return _void[55])
  }
  function list[304105](?)._maybeReleaseMem[300071](arg _mt[304213]:_MT[238], arg this[304211]:list[304105](?), arg amount[300068]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745344] "expr temp" "maybe param" "maybe type" "temp"
    (745347 'move' call_tmp[745344](405537 call _totalCapacity _mt[243] this[304211]))
    unknown call_tmp[745349] "expr temp" "maybe param" "maybe type" "temp"
    (745352 'move' call_tmp[745349](300075 call <= call_tmp[745344] _initialCapacity[298140]))
    unknown call_tmp[745354] "expr temp" "maybe param" "maybe type" "temp"
    (745357 'move' call_tmp[745354](300079 call _cond_test call_tmp[745349]))
    if call_tmp[745354]
    {
      gotoReturn _end__maybeReleaseMem[539109] _end__maybeReleaseMem[539109]
    }
    unknown call_tmp[745361] "maybe param" "maybe type" "temp"
    (745364 'move' call_tmp[745361](300087 call(405542 call (partial) _getLastArrayIdx _mt[243] this[304211])))
    const lastArrayIdx[300088] "dead at end of block" "const" "insert auto destroy"
    (549797 'init var' lastArrayIdx[300088] call_tmp[745361])
    (300091 'end of statement')
    unknown call_tmp[745366] "expr temp" "maybe param" "maybe type" "temp"
    (745369 'move' call_tmp[745366](300095 call != lastArrayIdx[300088] 0))
    (300098 call _sanity call_tmp[745366])
    (490985 'end of statement' lastArrayIdx[300088])
    unknown call_tmp[745373] "maybe param" "maybe type" "temp"
    (745376 'move' call_tmp[745373](300103 call(405547 call (partial) _getArrayCapacity _mt[243] this[304211]) lastArrayIdx[300088]))
    const lastArrayCapacity[300104] "dead at end of block" "const" "insert auto destroy"
    (549799 'init var' lastArrayCapacity[300104] call_tmp[745373])
    (300107 'end of statement')
    unknown call_tmp[745380] "expr temp" "maybe param" "maybe type" "temp"
    (745383 'move' call_tmp[745380](405553 call _totalCapacity _mt[243] this[304211]))
    unknown call_tmp[745385] "maybe param" "maybe type" "temp"
    (745388 'move' call_tmp[745385](300110 call - call_tmp[745380] lastArrayCapacity[300104]))
    const threshold[300112] "dead at end of block" "const" "insert auto destroy"
    (549801 'init var' threshold[300112] call_tmp[745385])
    (300115 'end of statement')
    unknown call_tmp[745392] "expr temp" "maybe param" "maybe type" "temp"
    (745395 'move' call_tmp[745392](405559 call _size _mt[243] this[304211]))
    unknown call_tmp[745397] "maybe param" "maybe type" "temp"
    (745400 'move' call_tmp[745397](300118 call - call_tmp[745392] amount[300068]))
    const nsize[300120] "dead at end of block" "const" "insert auto destroy"
    (549803 'init var' nsize[300120] call_tmp[745397])
    (300123 'end of statement')
    unknown call_tmp[745402] "expr temp" "maybe param" "maybe type" "temp"
    (745405 'move' call_tmp[745402](300126 call > nsize[300120] threshold[300112]))
    unknown call_tmp[745407] "expr temp" "maybe param" "maybe type" "temp"
    (745410 'move' call_tmp[745407](300130 call _cond_test call_tmp[745402]))
    if call_tmp[745407]
    {
      gotoReturn _end__maybeReleaseMem[539109] _end__maybeReleaseMem[539109]
    }
    unknown array[300139] "dead at end of block" "ref var"
    unknown call_tmp[745414] "expr temp" "maybe param" "maybe type" "temp"
    (745417 'move' call_tmp[745414](300138 call(405567 call (partial) _arrays _mt[243] this[304211]) lastArrayIdx[300088]))
    (549806 'move' array[300139](549805 'addr of' call_tmp[745414]))
    (300142 'end of statement' lastArrayIdx[300088] lastArrayCapacity[300104] lastArrayIdx[300088])
    unknown call_tmp[745419] "expr temp" "maybe param" "maybe type" "temp"
    (745422 'move' call_tmp[745419](300146 call != array[300139] nil[44]))
    (300149 call _sanity call_tmp[745419])
    (490991 'end of statement' array[300139])
    (300155 call(405575 call (partial) _freeArray _mt[243] this[304211]) array[300139] lastArrayCapacity[300104])
    (490993 'end of statement' array[300139] lastArrayCapacity[300104])
    unknown call_tmp[745428] "expr temp" "maybe param" "maybe type" "temp"
    (745431 'move' call_tmp[745428](405582 call _totalCapacity _mt[243] this[304211]))
    (300159 call -= call_tmp[745428] lastArrayCapacity[300104])
    (490996 'end of statement' lastArrayCapacity[300104])
    (300164 call = array[300139] nil[44])
    (490998 'end of statement' array[300139])
    label _end__maybeReleaseMem[539109]
    (539111 return _void[55])
  }
  function list[304105](?)._expand[300175](arg _mt[304217]:_MT[238], ref arg this[304215]:list[304105](?), arg idx[300172]:int(64)[13], arg shift[300179]:int(64)[13] =
  1) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745435] "expr temp" "maybe param" "maybe type" "temp"
    (745438 'move' call_tmp[745435](300187 call(405588 call (partial) _withinBounds _mt[243] this[304215]) idx[300172]))
    (300189 call _sanity call_tmp[745435])
    (491000 'end of statement')
    unknown call_tmp[745440] "expr temp" "maybe param" "maybe type" "temp"
    (745443 'move' call_tmp[745440](300194 call <= shift[300179] 0))
    unknown call_tmp[745445] "expr temp" "maybe param" "maybe type" "temp"
    (745448 'move' call_tmp[745445](300198 call _cond_test call_tmp[745440]))
    if call_tmp[745445]
    {
      gotoReturn _end__expand[539117] _end__expand[539117]
    }
    const tmp[300302] "const" "temp"
    unknown call_tmp[745450] "expr temp" "maybe param" "maybe type" "temp"
    (745453 'move' call_tmp[745450](300299 '_wide_get_locale' this[304215]))
    (300304 'move' tmp[300302](300300 'deref' call_tmp[745450]))
    {
      {
        (300207 call(405597 call (partial) _maybeAcquireMem _mt[243] this[304215]) shift[300179])
        (491002 'end of statement')
        {
          unknown _indexOfInterest[300249] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300250] "expr temp" "temp"
          unknown call_tmp[745459] "expr temp" "maybe param" "maybe type" "temp"
          (745462 'move' call_tmp[745459](405625 call _size _mt[243] this[304215]))
          unknown call_tmp[745464] "expr temp" "maybe param" "maybe type" "temp"
          (745467 'move' call_tmp[745464](300273 call - call_tmp[745459] 1))
          unknown call_tmp[745469] "expr temp" "maybe param" "maybe type" "temp"
          (745472 'move' call_tmp[745469](300269 call - 1))
          unknown call_tmp[745474] "expr temp" "maybe param" "maybe type" "temp"
          (745477 'move' call_tmp[745474](300276 call chpl_direct_range_iter idx[300172] call_tmp[745464] call_tmp[745469]))
          (300259 'move' _iterator[300250](300257 call _getIterator call_tmp[745474]))
          Defer
          {
            {
              (300292 call _freeIterator _iterator[300250])
            }
          }
          { scopeless type
            (300281 'move' _indexOfInterest[300249](300278 call iteratorIndex _iterator[300250]))
          }
          ForLoop[300251]
          {
            unknown i[300285] "index var" "insert auto destroy"
            (491004 'end of statement')
            (300287 'move' i[300285] _indexOfInterest[300249])
            (491005 'end of statement' i[300285])
            {
              unknown src[300227] "dead at end of block" "ref var"
              unknown call_tmp[745481] "expr temp" "maybe param" "maybe type" "temp"
              (745484 'move' call_tmp[745481](300226 call(405604 call (partial) _getRef _mt[243] this[304215]) i[300285]))
              (549809 'move' src[300227](549808 'addr of' call_tmp[745481]))
              (300230 'end of statement')
              unknown dst[300239] "dead at end of block" "ref var"
              unknown call_tmp[745488] "expr temp" "maybe param" "maybe type" "temp"
              (745491 'move' call_tmp[745488](300235 call + i[300285] shift[300179]))
              unknown call_tmp[745493] "expr temp" "maybe param" "maybe type" "temp"
              (745496 'move' call_tmp[745493](300238 call(405609 call (partial) _getRef _mt[243] this[304215]) call_tmp[745488]))
              (549812 'move' dst[300239](549811 'addr of' call_tmp[745493]))
              (300242 'end of statement' i[300285] i[300285])
              (300247 call(405617 call (partial) _move _mt[243] this[304215]) src[300227] dst[300239])
              (491009 'end of statement' src[300227] dst[300239])
            }
            label _continueLabel[300254]
            _indexOfInterest[300249]
            _iterator[300250]
          }
          label _breakLabel[300255]
        }
      }
      (300307 'on block' 0 tmp[300302])
    }
    label _end__expand[539117]
    (539119 return _void[55])
  }
  function list[304105](?)._collapse[300320](arg _mt[304221]:_MT[238], ref arg this[304219]:list[304105](?), arg idx[300317]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[745502] "expr temp" "maybe param" "maybe type" "temp"
    (745505 'move' call_tmp[745502](300326 call(405629 call (partial) _withinBounds _mt[243] this[304219]) idx[300317]))
    (300328 call _sanity call_tmp[745502])
    (491013 'end of statement')
    unknown call_tmp[745509] "expr temp" "maybe param" "maybe type" "temp"
    (745512 'move' call_tmp[745509](405636 call _size _mt[243] this[304219]))
    unknown call_tmp[745514] "expr temp" "maybe param" "maybe type" "temp"
    (745517 'move' call_tmp[745514](300334 call - call_tmp[745509] 1))
    unknown call_tmp[745519] "expr temp" "maybe param" "maybe type" "temp"
    (745522 'move' call_tmp[745519](300336 call == idx[300317] call_tmp[745514]))
    unknown call_tmp[745524] "expr temp" "maybe param" "maybe type" "temp"
    (745527 'move' call_tmp[745524](300358 call _cond_test call_tmp[745519]))
    if call_tmp[745524]
    {
      const tmp[300347] "const" "temp"
      unknown call_tmp[745529] "expr temp" "maybe param" "maybe type" "temp"
      (745532 'move' call_tmp[745529](300344 '_wide_get_locale' this[304219]))
      (300349 'move' tmp[300347](300345 'deref' call_tmp[745529]))
      {
        (300342 call(405643 call (partial) _maybeReleaseMem _mt[243] this[304219]) 1)
        (300352 'on block' 0 tmp[300347])
      }
      gotoReturn _end__collapse[539123] _end__collapse[539123]
    }
    const tmp[300447] "const" "temp"
    unknown call_tmp[745536] "expr temp" "maybe param" "maybe type" "temp"
    (745539 'move' call_tmp[745536](300444 '_wide_get_locale' this[304219]))
    (300449 'move' tmp[300447](300445 'deref' call_tmp[745536]))
    {
      {
        {
          unknown _indexOfInterest[300397] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300398] "expr temp" "temp"
          unknown call_tmp[745543] "expr temp" "maybe param" "maybe type" "temp"
          (745546 'move' call_tmp[745543](405666 call _size _mt[243] this[304219]))
          unknown call_tmp[745548] "expr temp" "maybe param" "maybe type" "temp"
          (745551 'move' call_tmp[745548](300412 call - call_tmp[745543] 2))
          unknown call_tmp[745553] "expr temp" "maybe param" "maybe type" "temp"
          (745556 'move' call_tmp[745553](300415 call chpl_direct_range_iter idx[300317] call_tmp[745548] 1))
          (300407 'move' _iterator[300398](300405 call _getIterator call_tmp[745553]))
          Defer
          {
            {
              (300431 call _freeIterator _iterator[300398])
            }
          }
          { scopeless type
            (300420 'move' _indexOfInterest[300397](300417 call iteratorIndex _iterator[300398]))
          }
          ForLoop[300399]
          {
            unknown i[300424] "index var" "insert auto destroy"
            (491017 'end of statement')
            (300426 'move' i[300424] _indexOfInterest[300397])
            (491018 'end of statement' i[300424])
            {
              unknown src[300378] "dead at end of block" "ref var"
              unknown call_tmp[745560] "expr temp" "maybe param" "maybe type" "temp"
              (745563 'move' call_tmp[745560](300374 call + i[300424] 1))
              unknown call_tmp[745565] "expr temp" "maybe param" "maybe type" "temp"
              (745568 'move' call_tmp[745565](300377 call(405648 call (partial) _getRef _mt[243] this[304219]) call_tmp[745560]))
              (549815 'move' src[300378](549814 'addr of' call_tmp[745565]))
              (300381 'end of statement')
              unknown dst[300387] "dead at end of block" "ref var"
              unknown call_tmp[745572] "expr temp" "maybe param" "maybe type" "temp"
              (745575 'move' call_tmp[745572](300386 call(405653 call (partial) _getRef _mt[243] this[304219]) i[300424]))
              (549818 'move' dst[300387](549817 'addr of' call_tmp[745572]))
              (300390 'end of statement' i[300424] i[300424])
              (300395 call(405658 call (partial) _move _mt[243] this[304219]) src[300378] dst[300387])
              (491022 'end of statement' src[300378] dst[300387])
            }
            label _continueLabel[300402]
            _indexOfInterest[300397]
            _iterator[300398]
          }
          label _breakLabel[300403]
        }
        (300442 call(405670 call (partial) _maybeReleaseMem _mt[243] this[304219]) 1)
      }
      (300452 'on block' 0 tmp[300447])
    }
    label _end__collapse[539123]
    (539125 return _void[55])
  }
  function list[304105](?)._appendByRef[300465](arg _mt[304225]:_MT[238], ref arg this[304223]:list[304105](?), ref arg x[300462] :
  (405675 call eltType _mt[243] this[304223])) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    (300470 call(405679 call (partial) _maybeAcquireMem _mt[243] this[304223]) 1)
    (491027 'end of statement')
    unknown src[300474] "dead at end of block" "ref var"
    (549821 'move' src[300474](549820 'addr of' x[300462]))
    (300477 'end of statement')
    unknown dst[300482] "dead at end of block" "ref var"
    unknown call_tmp[745589] "expr temp" "maybe param" "maybe type" "temp"
    (745592 'move' call_tmp[745589](405689 call _size _mt[243] this[304223]))
    unknown call_tmp[745594] "expr temp" "maybe param" "maybe type" "temp"
    (745597 'move' call_tmp[745594](300481 call(405684 call (partial) _getRef _mt[243] this[304223]) call_tmp[745589]))
    (549824 'move' dst[300482](549823 'addr of' call_tmp[745594]))
    (300485 'end of statement')
    (300490 call(405693 call (partial) _move _mt[243] this[304223]) src[300474] dst[300482])
    (491028 'end of statement' src[300474] dst[300482])
    unknown call_tmp[745603] "expr temp" "maybe param" "maybe type" "temp"
    (745606 'move' call_tmp[745603](405700 call _size _mt[243] this[304223]))
    (300494 call += call_tmp[745603] 1)
    (539129 return _void[55])
  }
  function list[304105](?).append[300508](arg _mt[304229]:_MT[238], ref arg this[304227]:list[304105](?), in arg x[300505] :
  (300502 call eltType _mt[243] this[304227])) : _unknown[51] "method" "primary method" "no return value for void"
  {
    (300518 call(405708 call (partial) _enter _mt[243] this[304227]))
    (491032 'end of statement')
    (300524 call(405714 call (partial) _appendByRef _mt[243] this[304227]) x[300505])
    (491033 'end of statement')
    (300528 call(405719 call (partial) _leave _mt[243] this[304227]))
    (539131 return _void[55])
  }
  {
    (300514 call <(300511 'lifetime_of' this[304227])(300513 'lifetime_of' x[300505]))
  }
  function list[304105](?).contains[300539](arg _mt[304233]:_MT[238], const arg this[304231]:list[304105](?), arg x[300536] :
  (405724 call eltType _mt[243] this[304231])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539135] "RVV" "temp"
    unknown result[300543] "dead at end of block" "insert auto destroy"
    (549826 'init var' result[300543] 0)
    (300546 'end of statement')
    const tmp[300613] "const" "temp"
    unknown call_tmp[745618] "expr temp" "maybe param" "maybe type" "temp"
    (745621 'move' call_tmp[745618](300610 '_wide_get_locale' this[304231]))
    (300615 'move' tmp[300613](300611 'deref' call_tmp[745618]))
    {
      {
        (300551 call(405729 call (partial) _enter _mt[243] this[304231]))
        (491035 'end of statement')
        {
          unknown _indexOfInterest[300573] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300574] "expr temp" "temp"
          (300583 'move' _iterator[300574](300581 call _getIterator this[304231]))
          Defer
          {
            {
              (300599 call _freeIterator _iterator[300574])
            }
          }
          { scopeless type
            (300588 'move' _indexOfInterest[300573](300585 call iteratorIndex _iterator[300574]))
          }
          ForLoop[300575]
          {
            unknown item[300592] "index var" "insert auto destroy"
            (491037 'end of statement')
            (300594 'move' item[300592] _indexOfInterest[300573])
            (491038 'end of statement' item[300592])
            unknown call_tmp[745625] "expr temp" "maybe param" "maybe type" "temp"
            (745628 'move' call_tmp[745625](300558 call == item[300592] x[300536]))
            unknown call_tmp[745630] "expr temp" "maybe param" "maybe type" "temp"
            (745633 'move' call_tmp[745630](300569 call _cond_test call_tmp[745625]))
            if call_tmp[745630]
            {
              (300562 call = result[300543] 1)
              (491040 'end of statement' result[300543])
              break _breakLabel[300579] _breakLabel[300579]
            }
            label _continueLabel[300578]
            _indexOfInterest[300573]
            _iterator[300574]
          }
          label _breakLabel[300579]
        }
        (300608 call(405737 call (partial) _leave _mt[243] this[304231]))
      }
      (300618 'on block' 0 tmp[300613])
    }
    (539141 'move' ret[539135](539140 'coerce' result[300543] bool[10]))
    gotoReturn _end_contains[539133] _end_contains[539133]
    (491043 'end of statement' result[300543])
    label _end_contains[539133]
    (539137 return ret[539135])
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?).first[300629](arg _mt[304237]:_MT[238], ref arg this[304235]:list[304105](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539147] "RVV" "temp"
    (300633 call(405742 call (partial) _enter _mt[243] this[304235]))
    (491045 'end of statement')
    unknown tmp[434770] "maybe param" "temp"
    (434781 'move' tmp[434770] 1)
    unknown call_tmp[745639] "expr temp" "maybe param" "maybe type" "temp"
    (745642 'move' call_tmp[745639](434783 call _cond_invalid tmp[434770]))
    if call_tmp[745639]
    {
      (434786 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580907] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580908] "maybe param" "temp"
    unknown call_tmp[745644] "expr temp" "maybe param" "maybe type" "temp"
    (745647 'move' call_tmp[745644](434771 call isTrue tmp[434770]))
    (580913 'move' tmp[580908](580911 call _cond_test call_tmp[745644]))
    if tmp[580908]
    {
      unknown tmp[580915] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745651] "expr temp" "maybe param" "maybe type" "temp"
      (745654 'move' call_tmp[745651](405748 call _size _mt[243] this[304235]))
      unknown call_tmp[745656] "expr temp" "maybe param" "maybe type" "temp"
      (745659 'move' call_tmp[745656](300639 call == call_tmp[745651] 0))
      (580917 'move' tmp[580915](434774 call isTrue call_tmp[745656]))
      (580922 'move' tmp[580907](580919 '_paramFoldLogical' tmp[580908] tmp[580915]))
    }
    {
      (580927 'move' tmp[580907](580924 '_paramFoldLogical' tmp[580908] 0))
    }
    unknown call_tmp[745661] "expr temp" "maybe param" "maybe type" "temp"
    (745664 'move' call_tmp[745661](300669 call _cond_test tmp[580907]))
    if call_tmp[745661]
    {
      (300645 call(405752 call (partial) _leave _mt[243] this[304235]))
      (491047 'end of statement')
      (300667 call boundsCheckHalt "Called \"list.first\" on an empty list.")
    }
    unknown result[300677] "dead at end of block" "ref var"
    unknown call_tmp[745670] "expr temp" "maybe param" "maybe type" "temp"
    (745673 'move' call_tmp[745670](300676 call(405756 call (partial) _getRef _mt[243] this[304235]) 0))
    (549829 'move' result[300677](549828 'addr of' call_tmp[745670]))
    (300680 'end of statement')
    (300683 call(405760 call (partial) _leave _mt[243] this[304235]))
    (491049 'end of statement')
    (539152 'move' ret[539147](539151 'addr of' result[300677]))
    gotoReturn _end_first[539145] _end_first[539145]
    (491050 'end of statement' result[300677])
    label _end_first[539145]
    (539149 return ret[539147])
  }
  function list[304105](?).last[300692](arg _mt[304241]:_MT[238], ref arg this[304239]:list[304105](?)) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539158] "RVV" "temp"
    (300696 call(405765 call (partial) _enter _mt[243] this[304239]))
    (491052 'end of statement')
    unknown tmp[434791] "maybe param" "temp"
    (434802 'move' tmp[434791] 1)
    unknown call_tmp[745679] "expr temp" "maybe param" "maybe type" "temp"
    (745682 'move' call_tmp[745679](434804 call _cond_invalid tmp[434791]))
    if call_tmp[745679]
    {
      (434807 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[580934] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[580935] "maybe param" "temp"
    unknown call_tmp[745684] "expr temp" "maybe param" "maybe type" "temp"
    (745687 'move' call_tmp[745684](434792 call isTrue tmp[434791]))
    (580940 'move' tmp[580935](580938 call _cond_test call_tmp[745684]))
    if tmp[580935]
    {
      unknown tmp[580942] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[745691] "expr temp" "maybe param" "maybe type" "temp"
      (745694 'move' call_tmp[745691](405771 call _size _mt[243] this[304239]))
      unknown call_tmp[745696] "expr temp" "maybe param" "maybe type" "temp"
      (745699 'move' call_tmp[745696](300702 call == call_tmp[745691] 0))
      (580944 'move' tmp[580942](434795 call isTrue call_tmp[745696]))
      (580949 'move' tmp[580934](580946 '_paramFoldLogical' tmp[580935] tmp[580942]))
    }
    {
      (580954 'move' tmp[580934](580951 '_paramFoldLogical' tmp[580935] 0))
    }
    unknown call_tmp[745701] "expr temp" "maybe param" "maybe type" "temp"
    (745704 'move' call_tmp[745701](300732 call _cond_test tmp[580934]))
    if call_tmp[745701]
    {
      (300708 call(405775 call (partial) _leave _mt[243] this[304239]))
      (491054 'end of statement')
      (300730 call boundsCheckHalt "Called \"list.last\" on an empty list.")
    }
    unknown result[300743] "dead at end of block" "ref var"
    unknown call_tmp[745712] "expr temp" "maybe param" "maybe type" "temp"
    (745715 'move' call_tmp[745712](405784 call _size _mt[243] this[304239]))
    unknown call_tmp[745717] "expr temp" "maybe param" "maybe type" "temp"
    (745720 'move' call_tmp[745717](300739 call - call_tmp[745712] 1))
    unknown call_tmp[745722] "expr temp" "maybe param" "maybe type" "temp"
    (745725 'move' call_tmp[745722](300742 call(405779 call (partial) _getRef _mt[243] this[304239]) call_tmp[745717]))
    (549832 'move' result[300743](549831 'addr of' call_tmp[745722]))
    (300746 'end of statement')
    (300749 call(405788 call (partial) _leave _mt[243] this[304239]))
    (491056 'end of statement')
    (539163 'move' ret[539158](539162 'addr of' result[300743]))
    gotoReturn _end_last[539156] _end_last[539156]
    (491057 'end of statement' result[300743])
    label _end_last[539156]
    (539160 return ret[539158])
  }
  function list[304105](?)._extendGeneric[300760](arg _mt[304245]:_MT[238], ref arg this[304243]:list[304105](?), arg collection[300758]:_any[178](?)) : _unknown[51] "inline" "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[300813] "const" "temp"
    unknown call_tmp[745729] "expr temp" "maybe param" "maybe type" "temp"
    (745732 'move' call_tmp[745729](300810 '_wide_get_locale' this[304243]))
    (300815 'move' tmp[300813](300811 'deref' call_tmp[745729]))
    {
      {
        {
          unknown _indexOfInterest[300776] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[300777] "expr temp" "temp"
          (300786 'move' _iterator[300777](300784 call _getIterator collection[300758]))
          Defer
          {
            {
              (300802 call _freeIterator _iterator[300777])
            }
          }
          { scopeless type
            (300791 'move' _indexOfInterest[300776](300788 call iteratorIndex _iterator[300777]))
          }
          ForLoop[300778]
          {
            unknown item[300795] "index var" "insert auto destroy"
            (491060 'end of statement')
            (300797 'move' item[300795] _indexOfInterest[300776])
            (491061 'end of statement' item[300795])
            {
              unknown cpy[300766] "dead at end of block" "no auto destroy"
              (549834 'init var' cpy[300766] item[300795])
              (300769 'end of statement' item[300795])
              (300774 call(405796 call (partial) _appendByRef _mt[243] this[304243]) cpy[300766])
              (491064 'end of statement' cpy[300766])
            }
            label _continueLabel[300781]
            _indexOfInterest[300776]
            _iterator[300777]
          }
          label _breakLabel[300782]
        }
      }
      (300818 'on block' 0 tmp[300813])
    }
    (539167 return _void[55])
  }
  function list[304105](?).extend[300835](arg _mt[304249]:_MT[238], ref arg this[304247]:list[304105](?), arg other[300832]:list[304105](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300861] "const" "temp"
    unknown call_tmp[745736] "expr temp" "maybe param" "maybe type" "temp"
    (745739 'move' call_tmp[745736](300858 '_wide_get_locale' this[304247]))
    (300863 'move' tmp[300861](300859 'deref' call_tmp[745736]))
    {
      {
        (300846 call(405810 call (partial) _enter _mt[243] this[304247]))
        (491066 'end of statement')
        (300852 call(405816 call (partial) _extendGeneric _mt[243] this[304247]) other[300832])
        (491067 'end of statement')
        (300856 call(405821 call (partial) _leave _mt[243] this[304247]))
      }
      (300866 'on block' 0 tmp[300861])
    }
    (539169 return _void[55])
  }
  where {
    unknown call_tmp[745749] "expr temp" "maybe param" "maybe type" "temp"
    (745752 'move' call_tmp[745749](467745 call eltType _mt[243] this[304247]))
    unknown call_tmp[745754] "expr temp" "maybe param" "maybe type" "temp"
    (745757 'move' call_tmp[745754](467741 'query' other[300832] 1))
    unknown call_tmp[745759] "expr temp" "maybe param" "maybe type" "temp"
    (745762 'move' call_tmp[745759](467748 call == call_tmp[745749] call_tmp[745754]))
    (467752 call & 1 call_tmp[745759])
  }
  {
    (300841 call <(300838 'lifetime_of' this[304247])(300840 'lifetime_of' other[300832]))
  }
  function list[304105](?).extend[300884](arg _mt[304253]:_MT[238], ref arg this[304251]:list[304105](?), arg other[300881]:_array[133588](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    const tmp[300910] "const" "temp"
    unknown call_tmp[745764] "expr temp" "maybe param" "maybe type" "temp"
    (745767 'move' call_tmp[745764](300907 '_wide_get_locale' this[304251]))
    (300912 'move' tmp[300910](300908 'deref' call_tmp[745764]))
    {
      {
        (300895 call(405833 call (partial) _enter _mt[243] this[304251]))
        (491069 'end of statement')
        (300901 call(405837 call (partial) _extendGeneric _mt[243] this[304251]) other[300881])
        (491070 'end of statement')
        (300905 call(405842 call (partial) _leave _mt[243] this[304251]))
      }
      (300915 'on block' 0 tmp[300910])
    }
    (539171 return _void[55])
  }
  where {
    unknown call_tmp[745777] "expr temp" "maybe param" "maybe type" "temp"
    (745780 'move' call_tmp[745777](405826 call eltType _mt[243] this[304251]))
    unknown call_tmp[745784] "expr temp" "maybe param" "maybe type" "temp"
    (745787 'move' call_tmp[745784](467764 call eltType _mt[243] other[300881]))
    unknown call_tmp[745789] "expr temp" "maybe param" "maybe type" "temp"
    (745792 'move' call_tmp[745789](467768 call == call_tmp[745777] call_tmp[745784]))
    (467762 call & 1 call_tmp[745789])
  }
  {
    (300890 call <(300887 'lifetime_of' this[304251])(300889 'lifetime_of' other[300881]))
  }
  function list[304105](?).extend[300935](arg _mt[304257]:_MT[238], ref arg this[304255]:list[304105](?), arg other[300932]:range[64316](?)) : _unknown[51] "compiler added where" "method" "primary method" "no return value for void"
  {
    unknown call_tmp[745794] "expr temp" "maybe param" "maybe type" "temp"
    (745797 'move' call_tmp[745794](300946 call isBoundedRange other[300932]))
    unknown call_tmp[745799] "expr temp" "maybe param" "maybe type" "temp"
    (745802 'move' call_tmp[745799](300947 call ! call_tmp[745794]))
    unknown call_tmp[745804] "expr temp" "maybe param" "maybe type" "temp"
    (745807 'move' call_tmp[745804](301019 call _cond_test call_tmp[745799]))
    if call_tmp[745804]
    {
      unknown call_tmp[745809] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745812 'move' call_tmp[745809](300950 'typeof' this[304255]))
      unknown call_tmp[745814] "maybe param" "maybe type" "temp"
      (745817 'move' call_tmp[745814](300952 call _cast string[26] call_tmp[745809]))
      unknown e[300954] "dead at end of block" "param"
      (549836 'init var' e[300954] call_tmp[745814])
      (300957 'end of statement')
      unknown call_tmp[745819] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (745822 'move' call_tmp[745819](300960 'typeof' other[300932]))
      unknown call_tmp[745824] "maybe param" "maybe type" "temp"
      (745827 'move' call_tmp[745824](300962 call _cast string[26] call_tmp[745819]))
      unknown f[300964] "dead at end of block" "param"
      (549838 'init var' f[300964] call_tmp[745824])
      (300967 'end of statement')
      unknown call_tmp[745829] "expr temp" "maybe param" "maybe type" "temp"
      (745832 'move' call_tmp[745829](300986 call + "Cannot extend " e[300954]))
      unknown call_tmp[745834] "expr temp" "maybe param" "maybe type" "temp"
      (745837 'move' call_tmp[745834](301005 call + call_tmp[745829] " with unbounded "))
      unknown call_tmp[745839] "maybe param" "maybe type" "temp"
      (745842 'move' call_tmp[745839](301008 call + call_tmp[745834] f[300964]))
      unknown msg[301010] "dead at end of block" "param"
      (549840 'init var' msg[301010] call_tmp[745839])
      (301013 'end of statement')
      (301017 call compilerError msg[301010])
    }
    const tmp[301042] "const" "temp"
    unknown call_tmp[745844] "expr temp" "maybe param" "maybe type" "temp"
    (745847 'move' call_tmp[745844](301039 '_wide_get_locale' this[304255]))
    (301044 'move' tmp[301042](301040 'deref' call_tmp[745844]))
    {
      {
        (301027 call(405861 call (partial) _enter _mt[243] this[304255]))
        (491073 'end of statement')
        (301033 call(405865 call (partial) _extendGeneric _mt[243] this[304255]) other[300932])
        (491074 'end of statement')
        (301037 call(405870 call (partial) _leave _mt[243] this[304255]))
      }
      (301047 'on block' 0 tmp[301042])
    }
    (539173 return _void[55])
  }
  where {
    unknown call_tmp[745857] "expr temp" "maybe param" "maybe type" "temp"
    (745860 'move' call_tmp[745857](467777 call eltType _mt[243] this[304255]))
    unknown call_tmp[745862] "expr temp" "maybe param" "maybe type" "temp"
    (745865 'move' call_tmp[745862](467773 'query' other[300932] 1))
    unknown call_tmp[745867] "expr temp" "maybe param" "maybe type" "temp"
    (745870 'move' call_tmp[745867](467780 call == call_tmp[745857] call_tmp[745862]))
    (467784 call & 1 call_tmp[745867])
  }
  {
    (300941 call <(300938 'lifetime_of' this[304255])(300940 'lifetime_of' other[300932]))
  }
  function list[304105](?).insert[301059](arg _mt[304261]:_MT[238], ref arg this[304259]:list[304105](?), arg idx[301056]:int(64)[13], in arg x[301062] :
  (405875 call eltType _mt[243] this[304259])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539177] "RVV" "temp"
    unknown result[301073] "dead at end of block" "insert auto destroy"
    (549842 'init var' result[301073] 0)
    (301076 'end of statement')
    const tmp[301154] "const" "temp"
    unknown call_tmp[745874] "expr temp" "maybe param" "maybe type" "temp"
    (745877 'move' call_tmp[745874](301151 '_wide_get_locale' this[304259]))
    (301156 'move' tmp[301154](301152 'deref' call_tmp[745874]))
    {
      {
        (301081 call(405882 call (partial) _enter _mt[243] this[304259]))
        (491076 'end of statement')
        unknown call_tmp[745883] "expr temp" "maybe param" "maybe type" "temp"
        (745886 'move' call_tmp[745883](405888 call _size _mt[243] this[304259]))
        unknown call_tmp[745888] "expr temp" "maybe param" "maybe type" "temp"
        (745891 'move' call_tmp[745888](301086 call == idx[301056] call_tmp[745883]))
        unknown call_tmp[745893] "expr temp" "maybe param" "maybe type" "temp"
        (745896 'move' call_tmp[745893](301142 call _cond_test call_tmp[745888]))
        if call_tmp[745893]
        {
          (301091 call(405892 call (partial) _appendByRef _mt[243] this[304259]) x[301062])
          (491077 'end of statement')
          (301096 call = result[301073] 1)
          (491078 'end of statement' result[301073])
        }
        {
          unknown call_tmp[745902] "expr temp" "maybe param" "maybe type" "temp"
          (745905 'move' call_tmp[745902](301102 call(405898 call (partial) _withinBounds _mt[243] this[304259]) idx[301056]))
          unknown call_tmp[745907] "expr temp" "maybe param" "maybe type" "temp"
          (745910 'move' call_tmp[745907](301138 call _cond_test call_tmp[745902]))
          if call_tmp[745907]
          {
            (301106 call(405905 call (partial) _expand _mt[243] this[304259]) idx[301056])
            (491080 'end of statement')
            unknown src[301110] "dead at end of block" "ref var"
            (549845 'move' src[301110](549844 'addr of' x[301062]))
            (301113 'end of statement')
            unknown dst[301118] "dead at end of block" "ref var"
            unknown call_tmp[745916] "expr temp" "maybe param" "maybe type" "temp"
            (745919 'move' call_tmp[745916](301117 call(405911 call (partial) _getRef _mt[243] this[304259]) idx[301056]))
            (549848 'move' dst[301118](549847 'addr of' call_tmp[745916]))
            (301121 'end of statement')
            (301126 call(405916 call (partial) _move _mt[243] this[304259]) src[301110] dst[301118])
            (491081 'end of statement' src[301110] dst[301118])
            unknown call_tmp[745925] "expr temp" "maybe param" "maybe type" "temp"
            (745928 'move' call_tmp[745925](405923 call _size _mt[243] this[304259]))
            (301130 call += call_tmp[745925] 1)
            (491084 'end of statement')
            (301135 call = result[301073] 1)
            (491085 'end of statement' result[301073])
          }
        }
        (301149 call(405928 call (partial) _leave _mt[243] this[304259]))
      }
      (301159 'on block' 0 tmp[301154])
    }
    unknown call_tmp[745932] "expr temp" "maybe param" "maybe type" "temp"
    (745935 'move' call_tmp[745932](301163 call ! result[301073]))
    unknown call_tmp[745937] "expr temp" "maybe param" "maybe type" "temp"
    (745940 'move' call_tmp[745937](301170 call _cond_test call_tmp[745932]))
    if call_tmp[745937]
    {
      (301168 call(405935 call (partial) _destroy _mt[243] this[304259]) x[301062])
    }
    (539183 'move' ret[539177](539182 'coerce' result[301073] bool[10]))
    gotoReturn _end_insert[539175] _end_insert[539175]
    (491089 'end of statement' result[301073])
    label _end_insert[539175]
    (539179 return ret[539177])
  }
  {
    (301070 call <(301067 'lifetime_of' this[304259])(301069 'lifetime_of' x[301062]))
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?)._insertGenericKnownSize[301188](arg _mt[304265]:_MT[238], ref arg this[304263]:list[304105](?), arg idx[301185]:int(64)[13], arg items[301190]:_any[178](?), arg size[301193]:int(64)[13]) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539189] "RVV" "temp"
    unknown result[301198] "dead at end of block" "insert auto destroy"
    (549850 'init var' result[301198] 0)
    (301201 'end of statement')
    unknown call_tmp[745944] "expr temp" "maybe param" "maybe type" "temp"
    (745947 'move' call_tmp[745944](301206 call >= size[301193] 0))
    (301209 call _sanity call_tmp[745944])
    (491091 'end of statement')
    unknown call_tmp[745949] "expr temp" "maybe param" "maybe type" "temp"
    (745952 'move' call_tmp[745949](301213 call == size[301193] 0))
    unknown call_tmp[745954] "expr temp" "maybe param" "maybe type" "temp"
    (745957 'move' call_tmp[745954](301218 call _cond_test call_tmp[745949]))
    if call_tmp[745954]
    {
      (539195 'move' ret[539189](539194 'coerce' 1 bool[10]))
      gotoReturn _end__insertGenericKnownSize[539187] _end__insertGenericKnownSize[539187]
    }
    const tmp[301343] "const" "temp"
    unknown call_tmp[745959] "expr temp" "maybe param" "maybe type" "temp"
    (745962 'move' call_tmp[745959](301340 '_wide_get_locale' this[304263]))
    (301345 'move' tmp[301343](301341 'deref' call_tmp[745959]))
    {
      {
        unknown call_tmp[745966] "expr temp" "maybe param" "maybe type" "temp"
        (745969 'move' call_tmp[745966](405946 call _size _mt[243] this[304263]))
        unknown call_tmp[745971] "expr temp" "maybe param" "maybe type" "temp"
        (745974 'move' call_tmp[745971](301226 call == idx[301185] call_tmp[745966]))
        unknown call_tmp[745976] "expr temp" "maybe param" "maybe type" "temp"
        (745979 'move' call_tmp[745976](301334 call _cond_test call_tmp[745971]))
        if call_tmp[745976]
        {
          (301231 call(405950 call (partial) _extendGeneric _mt[243] this[304263]) items[301190])
          (491093 'end of statement')
          (301236 call = result[301198] 1)
          (491094 'end of statement' result[301198])
        }
        {
          unknown call_tmp[745985] "expr temp" "maybe param" "maybe type" "temp"
          (745988 'move' call_tmp[745985](301242 call(405956 call (partial) _withinBounds _mt[243] this[304263]) idx[301185]))
          unknown call_tmp[745990] "expr temp" "maybe param" "maybe type" "temp"
          (745993 'move' call_tmp[745990](301330 call _cond_test call_tmp[745985]))
          if call_tmp[745990]
          {
            (301247 call(405961 call (partial) _expand _mt[243] this[304263]) idx[301185] size[301193])
            (491096 'end of statement')
            unknown i[301251] "dead at end of block" "insert auto destroy"
            (549852 'init var' i[301251] idx[301185])
            (301254 'end of statement')
            {
              unknown _indexOfInterest[301292] "an _indexOfInterest or chpl__followIdx variable" "temp"
              unknown _iterator[301293] "expr temp" "temp"
              (301302 'move' _iterator[301293](301300 call _getIterator items[301190]))
              Defer
              {
                {
                  (301318 call _freeIterator _iterator[301293])
                }
              }
              { scopeless type
                (301307 'move' _indexOfInterest[301292](301304 call iteratorIndex _iterator[301293]))
              }
              ForLoop[301294]
              {
                unknown x[301311] "index var" "insert auto destroy"
                (491098 'end of statement')
                (301313 'move' x[301311] _indexOfInterest[301292])
                (491099 'end of statement' x[301311])
                {
                  unknown cpy[301258] "dead at end of block" "no auto destroy"
                  (549854 'init var' cpy[301258] x[301311])
                  (301261 'end of statement')
                  unknown src[301264] "dead at end of block" "ref var"
                  (549857 'move' src[301264](549856 'addr of' cpy[301258]))
                  (301267 'end of statement')
                  unknown dst[301272] "dead at end of block" "ref var"
                  unknown call_tmp[745999] "expr temp" "maybe param" "maybe type" "temp"
                  (746002 'move' call_tmp[745999](301271 call(405971 call (partial) _getRef _mt[243] this[304263]) i[301251]))
                  (549860 'move' dst[301272](549859 'addr of' call_tmp[745999]))
                  (301275 'end of statement' x[301311] cpy[301258] i[301251])
                  (301280 call(405976 call (partial) _move _mt[243] this[304263]) src[301264] dst[301272])
                  (491104 'end of statement' src[301264] dst[301272])
                  unknown call_tmp[746008] "expr temp" "maybe param" "maybe type" "temp"
                  (746011 'move' call_tmp[746008](405983 call _size _mt[243] this[304263]))
                  (301284 call += call_tmp[746008] 1)
                  (491107 'end of statement')
                  (301289 call += i[301251] 1)
                  (491108 'end of statement' i[301251])
                }
                label _continueLabel[301297]
                _indexOfInterest[301292]
                _iterator[301293]
              }
              label _breakLabel[301298]
            }
            (301327 call = result[301198] 1)
            (491110 'end of statement' result[301198])
          }
        }
      }
      (301348 'on block' 0 tmp[301343])
    }
    (539201 'move' ret[539189](539200 'coerce' result[301198] bool[10]))
    gotoReturn _end__insertGenericKnownSize[539187] _end__insertGenericKnownSize[539187]
    (491112 'end of statement' result[301198])
    label _end__insertGenericKnownSize[539187]
    (539191 return ret[539189])
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?).insert[301363](arg _mt[304269]:_MT[238], ref arg this[304267]:list[304105](?), arg idx[301360]:int(64)[13], arg arr[301371]:_array[133588](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539207] "RVV" "temp"
    unknown result[301382] "dead at end of block" "insert auto destroy"
    (549862 'init var' result[301382] 0)
    (301385 'end of statement')
    const tmp[301413] "const" "temp"
    unknown call_tmp[746013] "expr temp" "maybe param" "maybe type" "temp"
    (746016 'move' call_tmp[746013](301410 '_wide_get_locale' this[304267]))
    (301415 'move' tmp[301413](301411 'deref' call_tmp[746013]))
    {
      {
        (301390 call(405998 call (partial) _enter _mt[243] this[304267]))
        (491114 'end of statement')
        unknown call_tmp[746024] "expr temp" "maybe param" "maybe type" "temp"
        (746027 'move' call_tmp[746024](301399 call size _mt[243] arr[301371]))
        unknown call_tmp[746029] "expr temp" "maybe param" "maybe type" "temp"
        (746032 'move' call_tmp[746029](301402 call(406005 call (partial) _insertGenericKnownSize _mt[243] this[304267]) idx[301360] arr[301371] call_tmp[746024]))
        (301403 call = result[301382] call_tmp[746029])
        (491115 'end of statement' result[301382])
        (301408 call(406011 call (partial) _leave _mt[243] this[304267]))
      }
      (301418 'on block' 0 tmp[301413])
    }
    (539213 'move' ret[539207](539212 'coerce' result[301382] bool[10]))
    gotoReturn _end_insert[539205] _end_insert[539205]
    (491118 'end of statement' result[301382])
    label _end_insert[539205]
    (539209 return ret[539207])
  }
  where {
    unknown call_tmp[746038] "expr temp" "maybe param" "maybe type" "temp"
    (746041 'move' call_tmp[746038](405991 call eltType _mt[243] this[304267]))
    unknown call_tmp[746045] "expr temp" "maybe param" "maybe type" "temp"
    (746048 'move' call_tmp[746045](467799 call eltType _mt[243] arr[301371]))
    unknown call_tmp[746050] "expr temp" "maybe param" "maybe type" "temp"
    (746053 'move' call_tmp[746050](467803 call == call_tmp[746038] call_tmp[746045]))
    (467797 call & 1 call_tmp[746050])
  }
  {
    (301379 call <(301376 'lifetime_of' this[304267])(301378 'lifetime_of' arr[301371]))
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?).insert[301434](arg _mt[304273]:_MT[238], ref arg this[304271]:list[304105](?), arg idx[301431]:int(64)[13], arg lst[301440]:list[304105](?)) : _unknown[51] "compiler added where" "method" "primary method"
  {
    unknown ret[539219] "RVV" "temp"
    unknown result[301451] "dead at end of block" "insert auto destroy"
    (549864 'init var' result[301451] 0)
    (301454 'end of statement')
    unknown call_tmp[746057] "maybe param" "maybe type" "temp"
    (746060 'move' call_tmp[746057](301457 call size _mt[243] lst[301440]))
    const size[301460] "dead at end of block" "const" "insert auto destroy"
    (549866 'init var' size[301460] call_tmp[746057])
    (301463 'end of statement')
    const tmp[301487] "const" "temp"
    unknown call_tmp[746062] "expr temp" "maybe param" "maybe type" "temp"
    (746065 'move' call_tmp[746062](301484 '_wide_get_locale' this[304271]))
    (301489 'move' tmp[301487](301485 'deref' call_tmp[746062]))
    {
      {
        (301467 call(406025 call (partial) _enter _mt[243] this[304271]))
        (491120 'end of statement')
        unknown call_tmp[746071] "expr temp" "maybe param" "maybe type" "temp"
        (746074 'move' call_tmp[746071](301476 call(406030 call (partial) _insertGenericKnownSize _mt[243] this[304271]) idx[301431] lst[301440] size[301460]))
        (301477 call = result[301451] call_tmp[746071])
        (491121 'end of statement' result[301451] size[301460])
        (301482 call(406037 call (partial) _leave _mt[243] this[304271]))
      }
      (301492 'on block' 0 tmp[301487])
    }
    (539225 'move' ret[539219](539224 'coerce' result[301451] bool[10]))
    gotoReturn _end_insert[539217] _end_insert[539217]
    (491125 'end of statement' result[301451])
    label _end_insert[539217]
    (539221 return ret[539219])
  }
  where {
    unknown call_tmp[746080] "expr temp" "maybe param" "maybe type" "temp"
    (746083 'move' call_tmp[746080](467812 call eltType _mt[243] this[304271]))
    unknown call_tmp[746085] "expr temp" "maybe param" "maybe type" "temp"
    (746088 'move' call_tmp[746085](467808 'query' lst[301440] 1))
    unknown call_tmp[746090] "expr temp" "maybe param" "maybe type" "temp"
    (746093 'move' call_tmp[746090](467815 call == call_tmp[746080] call_tmp[746085]))
    (467819 call & 1 call_tmp[746090])
  }
  {
    (301448 call <(301445 'lifetime_of' this[304271])(301447 'lifetime_of' lst[301440]))
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?).remove[301508](arg _mt[304277]:_MT[238], ref arg this[304275]:list[304105](?), arg x[301505] :
  (406043 call eltType _mt[243] this[304275]), arg count[301512]:int(64)[13] =
  1) : _unknown[51] "method" "primary method"
  {
    unknown ret[539231] "RVV" "temp"
    unknown result[301518] "dead at end of block" "insert auto destroy"
    (549868 'init var' result[301518] 0)
    (301521 'end of statement')
    const tmp[301758] "const" "temp"
    unknown call_tmp[746097] "expr temp" "maybe param" "maybe type" "temp"
    (746100 'move' call_tmp[746097](301755 '_wide_get_locale' this[304275]))
    (301760 'move' tmp[301758](301756 'deref' call_tmp[746097]))
    {
      {
        unknown src_i[301524] "dead at end of block" "insert auto destroy"
        (549870 'default init var' src_i[301524] int(64)[13])
        unknown dst_i[301528] "dead at end of block" "insert auto destroy"
        unknown call_tmp[746102] "expr temp" "maybe param" "maybe type" "temp" "type variable"
        (746105 'move' call_tmp[746102](301532 'typeof' src_i[301524]))
        (549872 'default init var' dst_i[301528] call_tmp[746102])
        (301533 'end of statement')
        unknown removed[301536] "dead at end of block" "insert auto destroy"
        (549874 'init var' removed[301536] 0)
        (301539 'end of statement' src_i[301524])
        (301542 call = src_i[301524] 0)
        (491128 'end of statement' src_i[301524])
        (301547 call(406050 call (partial) _enter _mt[243] this[304275]))
        (491130 'end of statement')
        {
          unknown tmp[301589] "temp"
          unknown call_tmp[746111] "expr temp" "maybe param" "maybe type" "temp"
          (746114 'move' call_tmp[746111](406076 call _size _mt[243] this[304275]))
          unknown call_tmp[746116] "expr temp" "maybe param" "maybe type" "temp"
          (746119 'move' call_tmp[746116](301610 call < dst_i[301528] call_tmp[746111]))
          (301613 'move' tmp[301589](301608 call _cond_test call_tmp[746116]))
          WhileDo[301594]
          {
            {
              unknown dst[301557] "dead at end of block" "ref var"
              unknown call_tmp[746123] "expr temp" "maybe param" "maybe type" "temp"
              (746126 'move' call_tmp[746123](301556 call(406054 call (partial) _getRef _mt[243] this[304275]) dst_i[301528]))
              (549877 'move' dst[301557](549876 'addr of' call_tmp[746123]))
              (301560 'end of statement' dst_i[301528])
              unknown call_tmp[746128] "expr temp" "maybe param" "maybe type" "temp"
              (746131 'move' call_tmp[746128](301564 call == dst[301557] x[301505]))
              unknown call_tmp[746133] "expr temp" "maybe param" "maybe type" "temp"
              (746136 'move' call_tmp[746133](301580 call _cond_test call_tmp[746128]))
              if call_tmp[746133]
              {
                (301569 call(406061 call (partial) _destroy _mt[243] this[304275]) dst[301557])
                (491132 'end of statement' dst[301557])
                (301574 call += removed[301536] 1)
                (491134 'end of statement' removed[301536])
                break _breakLabel[301593] _breakLabel[301593]
              }
              (301586 call += dst_i[301528] 1)
              (491136 'end of statement' dst_i[301528])
            }
            label _continueLabel[301592]
            unknown call_tmp[746142] "expr temp" "maybe param" "maybe type" "temp"
            (746145 'move' call_tmp[746142](406070 call _size _mt[243] this[304275]))
            unknown call_tmp[746147] "expr temp" "maybe param" "maybe type" "temp"
            (746150 'move' call_tmp[746147](301600 call < dst_i[301528] call_tmp[746142]))
            (301603 'move' tmp[301589](301598 call _cond_test call_tmp[746147]))
            tmp[301589]
          }
          label _breakLabel[301593]
        }
        unknown call_tmp[746152] "expr temp" "maybe param" "maybe type" "temp"
        (746155 'move' call_tmp[746152](301619 call + dst_i[301528] 1))
        (301621 call = src_i[301524] call_tmp[746152])
        (491138 'end of statement' src_i[301524] dst_i[301528])
        {
          unknown tmp[301700] "temp"
          unknown call_tmp[746159] "expr temp" "maybe param" "maybe type" "temp"
          (746162 'move' call_tmp[746159](406120 call _size _mt[243] this[304275]))
          unknown call_tmp[746164] "expr temp" "maybe param" "maybe type" "temp"
          (746167 'move' call_tmp[746164](301721 call < src_i[301524] call_tmp[746159]))
          (301724 'move' tmp[301700](301719 call _cond_test call_tmp[746164]))
          WhileDo[301705]
          {
            {
              unknown src[301632] "dead at end of block" "ref var"
              unknown call_tmp[746171] "expr temp" "maybe param" "maybe type" "temp"
              (746174 'move' call_tmp[746171](301631 call(406082 call (partial) _getRef _mt[243] this[304275]) src_i[301524]))
              (549880 'move' src[301632](549879 'addr of' call_tmp[746171]))
              (301635 'end of statement')
              unknown tmp[434812] "maybe param" "temp"
              unknown tmp[434833] "maybe param" "temp"
              (434844 'move' tmp[434833](301639 call == count[301512] 0))
              unknown call_tmp[746176] "expr temp" "maybe param" "maybe type" "temp"
              (746179 'move' call_tmp[746176](434846 call _cond_invalid tmp[434833]))
              if call_tmp[746176]
              {
                (434849 call compilerError "cannot promote short-circuiting || operator")
              }
              unknown tmp[580961] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580962] "maybe param" "temp"
              unknown call_tmp[746181] "expr temp" "maybe param" "maybe type" "temp"
              (746184 'move' call_tmp[746181](434834 call isTrue tmp[434833]))
              (580967 'move' tmp[580962](580965 call _cond_test call_tmp[746181]))
              if tmp[580962]
              {
                (580972 'move' tmp[580961](580969 '_paramFoldLogical' tmp[580962] 1))
              }
              {
                unknown tmp[580974] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746186] "expr temp" "maybe param" "maybe type" "temp"
                (746189 'move' call_tmp[746186](301643 call < removed[301536] count[301512]))
                (580976 'move' tmp[580974](434838 call isTrue call_tmp[746186]))
                (580981 'move' tmp[580961](580978 '_paramFoldLogical' tmp[580962] tmp[580974]))
              }
              (434823 'move' tmp[434812] tmp[580961])
              unknown call_tmp[746191] "expr temp" "maybe param" "maybe type" "temp"
              (746194 'move' call_tmp[746191](434825 call _cond_invalid tmp[434812]))
              if call_tmp[746191]
              {
                (434828 call compilerError "cannot promote short-circuiting && operator")
              }
              unknown tmp[580988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
              unknown tmp[580989] "maybe param" "temp"
              unknown call_tmp[746196] "expr temp" "maybe param" "maybe type" "temp"
              (746199 'move' call_tmp[746196](434813 call isTrue tmp[434812]))
              (580994 'move' tmp[580989](580992 call _cond_test call_tmp[746196]))
              if tmp[580989]
              {
                unknown tmp[580996] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
                unknown call_tmp[746201] "expr temp" "maybe param" "maybe type" "temp"
                (746204 'move' call_tmp[746201](301649 call == src[301632] x[301505]))
                (580998 'move' tmp[580996](434816 call isTrue call_tmp[746201]))
                (581003 'move' tmp[580988](581000 '_paramFoldLogical' tmp[580989] tmp[580996]))
              }
              {
                (581008 'move' tmp[580988](581005 '_paramFoldLogical' tmp[580989] 0))
              }
              unknown call_tmp[746206] "expr temp" "maybe param" "maybe type" "temp"
              (746209 'move' call_tmp[746206](301672 call _cond_test tmp[580988]))
              if call_tmp[746206]
              {
                (301656 call(406092 call (partial) _destroy _mt[243] this[304275]) src[301632])
                (491144 'end of statement' src[301632])
                (301661 call += src_i[301524] 1)
                (491146 'end of statement' src_i[301524])
                (301666 call += removed[301536] 1)
                (491148 'end of statement' removed[301536])
                continue _continueLabel[301703] _continueLabel[301703]
              }
              unknown dst[301680] "dead at end of block" "ref var"
              unknown call_tmp[746215] "expr temp" "maybe param" "maybe type" "temp"
              (746218 'move' call_tmp[746215](301679 call(406099 call (partial) _getRef _mt[243] this[304275]) dst_i[301528]))
              (549883 'move' dst[301680](549882 'addr of' call_tmp[746215]))
              (301683 'end of statement' src_i[301524] dst_i[301528])
              (301688 call(406104 call (partial) _move _mt[243] this[304275]) src[301632] dst[301680])
              (491151 'end of statement' src[301632] dst[301680])
              (301692 call += src_i[301524] 1)
              (491154 'end of statement' src_i[301524])
              (301697 call += dst_i[301528] 1)
              (491156 'end of statement' dst_i[301528])
            }
            label _continueLabel[301703]
            unknown call_tmp[746224] "expr temp" "maybe param" "maybe type" "temp"
            (746227 'move' call_tmp[746224](406114 call _size _mt[243] this[304275]))
            unknown call_tmp[746229] "expr temp" "maybe param" "maybe type" "temp"
            (746232 'move' call_tmp[746229](301711 call < src_i[301524] call_tmp[746224]))
            (301714 'move' tmp[301700](301709 call _cond_test call_tmp[746229]))
            tmp[301700]
          }
          label _breakLabel[301704]
        }
        unknown call_tmp[746234] "expr temp" "maybe param" "maybe type" "temp"
        (746237 'move' call_tmp[746234](301742 call _cond_test removed[301536]))
        if call_tmp[746234]
        {
          (301731 call(406125 call (partial) _maybeReleaseMem _mt[243] this[304275]) removed[301536])
          (491158 'end of statement' removed[301536])
          unknown call_tmp[746243] "expr temp" "maybe param" "maybe type" "temp"
          (746246 'move' call_tmp[746243](406131 call _size _mt[243] this[304275]))
          unknown call_tmp[746250] "expr temp" "maybe param" "maybe type" "temp"
          (746253 'move' call_tmp[746250](406136 call _size _mt[243] this[304275]))
          unknown call_tmp[746255] "expr temp" "maybe param" "maybe type" "temp"
          (746258 'move' call_tmp[746255](301737 call - call_tmp[746250] removed[301536]))
          (301739 call = call_tmp[746243] call_tmp[746255])
          (491160 'end of statement' removed[301536])
        }
        (301748 call(406141 call (partial) _leave _mt[243] this[304275]))
        (491162 'end of statement')
        (301752 call = result[301518] removed[301536])
        (491163 'end of statement' result[301518] removed[301536])
      }
      (301763 'on block' 0 tmp[301758])
    }
    (539237 'move' ret[539231](539236 'coerce' result[301518] int(64)[13]))
    gotoReturn _end_remove[539229] _end_remove[539229]
    (491166 'end of statement' result[301518])
    label _end_remove[539229]
    (539233 return ret[539231])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?)._popAtIndex[301778](arg _mt[304281]:_MT[238], ref arg this[304279]:list[304105](?), arg idx[301775]:int(64)[13], arg unlockBeforeHalt[301781] :
  1 =
  1) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539243] "RVV" "temp"
    unknown tmp[434854] "maybe param" "temp"
    (434865 'move' tmp[434854] 1)
    unknown call_tmp[746262] "expr temp" "maybe param" "maybe type" "temp"
    (746265 'move' call_tmp[746262](434867 call _cond_invalid tmp[434854]))
    if call_tmp[746262]
    {
      (434870 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581015] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581016] "maybe param" "temp"
    unknown call_tmp[746267] "expr temp" "maybe param" "maybe type" "temp"
    (746270 'move' call_tmp[746267](434855 call isTrue tmp[434854]))
    (581021 'move' tmp[581016](581019 call _cond_test call_tmp[746267]))
    if tmp[581016]
    {
      unknown tmp[581023] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746274] "expr temp" "maybe param" "maybe type" "temp"
      (746277 'move' call_tmp[746274](406155 call _size _mt[243] this[304279]))
      unknown call_tmp[746279] "expr temp" "maybe param" "maybe type" "temp"
      (746282 'move' call_tmp[746279](301788 call <= call_tmp[746274] 0))
      (581025 'move' tmp[581023](434858 call isTrue call_tmp[746279]))
      (581030 'move' tmp[581015](581027 '_paramFoldLogical' tmp[581016] tmp[581023]))
    }
    {
      (581035 'move' tmp[581015](581032 '_paramFoldLogical' tmp[581016] 0))
    }
    unknown call_tmp[746284] "expr temp" "maybe param" "maybe type" "temp"
    (746287 'move' call_tmp[746284](301824 call _cond_test tmp[581015]))
    if call_tmp[746284]
    {
      unknown call_tmp[746289] "expr temp" "maybe param" "maybe type" "temp"
      (746292 'move' call_tmp[746289](301797 call _cond_test unlockBeforeHalt[301781]))
      if call_tmp[746289]
      {
        (301795 call(406160 call (partial) _leave _mt[243] this[304279]))
      }
      (301822 call boundsCheckHalt "Called \"list.pop\" on an empty list.")
    }
    unknown tmp[434875] "maybe param" "temp"
    (434886 'move' tmp[434875] 1)
    unknown call_tmp[746296] "expr temp" "maybe param" "maybe type" "temp"
    (746299 'move' call_tmp[746296](434888 call _cond_invalid tmp[434875]))
    if call_tmp[746296]
    {
      (434891 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581042] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581043] "maybe param" "temp"
    unknown call_tmp[746301] "expr temp" "maybe param" "maybe type" "temp"
    (746304 'move' call_tmp[746301](434876 call isTrue tmp[434875]))
    (581048 'move' tmp[581043](581046 call _cond_test call_tmp[746301]))
    if tmp[581043]
    {
      unknown tmp[581050] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746308] "expr temp" "maybe param" "maybe type" "temp"
      (746311 'move' call_tmp[746308](301833 call(406165 call (partial) _withinBounds _mt[243] this[304279]) idx[301775]))
      unknown call_tmp[746313] "expr temp" "maybe param" "maybe type" "temp"
      (746316 'move' call_tmp[746313](301834 call ! call_tmp[746308]))
      (581052 'move' tmp[581050](434879 call isTrue call_tmp[746313]))
      (581057 'move' tmp[581042](581054 '_paramFoldLogical' tmp[581043] tmp[581050]))
    }
    {
      (581062 'move' tmp[581042](581059 '_paramFoldLogical' tmp[581043] 0))
    }
    unknown call_tmp[746318] "expr temp" "maybe param" "maybe type" "temp"
    (746321 'move' call_tmp[746318](301881 call _cond_test tmp[581042]))
    if call_tmp[746318]
    {
      unknown call_tmp[746323] "expr temp" "maybe param" "maybe type" "temp"
      (746326 'move' call_tmp[746323](301843 call _cond_test unlockBeforeHalt[301781]))
      if call_tmp[746323]
      {
        (301841 call(406171 call (partial) _leave _mt[243] this[304279]))
      }
      unknown call_tmp[746330] "expr temp" "maybe param" "maybe type" "temp"
      (746333 'move' call_tmp[746330](301868 call _cast string[26] idx[301775]))
      unknown call_tmp[746335] "maybe param" "maybe type" "temp"
      (746338 'move' call_tmp[746335](301870 call + "Index for \"list.pop\" out of bounds: " call_tmp[746330]))
      const msg[301872] "dead at end of block" "const" "insert auto destroy"
      (549885 'init var' msg[301872] call_tmp[746335])
      (301875 'end of statement')
      (301879 call boundsCheckHalt msg[301872])
      (491173 'end of statement' msg[301872])
    }
    unknown item[301889] "dead at end of block" "ref var"
    unknown call_tmp[746342] "expr temp" "maybe param" "maybe type" "temp"
    (746345 'move' call_tmp[746342](301888 call(406177 call (partial) _getRef _mt[243] this[304279]) idx[301775]))
    (549888 'move' item[301889](549887 'addr of' call_tmp[746342]))
    (301892 'end of statement')
    unknown result[301894] "dead at end of block" "insert auto destroy" "no init"
    unknown call_tmp[746349] "expr temp" "maybe param" "maybe type" "temp"
    (746352 'move' call_tmp[746349](406183 call eltType _mt[243] this[304279]))
    (549890 'default init var' result[301894] call_tmp[746349])
    (301897 'end of statement')
    (301902 call(406187 call (partial) _move _mt[243] this[304279]) item[301889] result[301894])
    (491175 'end of statement' item[301889] result[301894])
    (301907 call(406195 call (partial) _collapse _mt[243] this[304279]) idx[301775])
    (491178 'end of statement')
    unknown call_tmp[746360] "expr temp" "maybe param" "maybe type" "temp"
    (746363 'move' call_tmp[746360](406201 call _size _mt[243] this[304279]))
    (301911 call -= call_tmp[746360] 1)
    (491179 'end of statement')
    unknown call_tmp[746367] "expr temp" "maybe param" "maybe type" "temp"
    (746370 'move' call_tmp[746367](539248 call eltType _mt[243] this[304279]))
    (539252 'move' ret[539243](539251 'coerce' result[301894] call_tmp[746367]))
    gotoReturn _end__popAtIndex[539241] _end__popAtIndex[539241]
    (491180 'end of statement' result[301894])
    label _end__popAtIndex[539241]
    (539245 return ret[539243])
  }
  { scopeless type
    (406149 call eltType _mt[243] this[304279])
  }
  function list[304105](?).pop[301922](arg _mt[304285]:_MT[238], ref arg this[304283]:list[304105](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539258] "RVV" "temp"
    (301927 call(406211 call (partial) _enter _mt[243] this[304283]))
    (491182 'end of statement')
    unknown call_tmp[746380] "expr temp" "maybe param" "maybe type" "temp"
    (746383 'move' call_tmp[746380](406222 call _size _mt[243] this[304283]))
    unknown call_tmp[746385] "expr temp" "maybe param" "maybe type" "temp"
    (746388 'move' call_tmp[746385](301933 call - call_tmp[746380] 1))
    unknown call_tmp[746390] "maybe param" "maybe type" "temp"
    (746393 'move' call_tmp[746390](301936 call(406217 call (partial) _popAtIndex _mt[243] this[304283]) call_tmp[746385]))
    unknown result[301937] "dead at end of block" "insert auto destroy"
    (549892 'init var' result[301937] call_tmp[746390])
    (301940 'end of statement')
    (301943 call(406226 call (partial) _leave _mt[243] this[304283]))
    (491183 'end of statement')
    unknown call_tmp[746399] "expr temp" "maybe param" "maybe type" "temp"
    (746402 'move' call_tmp[746399](539263 call eltType _mt[243] this[304283]))
    (539267 'move' ret[539258](539266 'coerce' result[301937] call_tmp[746399]))
    gotoReturn _end_pop[539256] _end_pop[539256]
    (491184 'end of statement' result[301937])
    label _end_pop[539256]
    (539260 return ret[539258])
  }
  { scopeless type
    (406207 call eltType _mt[243] this[304283])
  }
  function list[304105](?).pop[301957](arg _mt[304289]:_MT[238], ref arg this[304287]:list[304105](?), arg idx[301954]:int(64)[13]) : _unknown[51] "method" "primary method"
  {
    unknown ret[539273] "RVV" "temp"
    (301962 call(406236 call (partial) _enter _mt[243] this[304287]))
    (491186 'end of statement')
    unknown call_tmp[746410] "maybe param" "maybe type" "temp"
    (746413 'move' call_tmp[746410](301968 call(406240 call (partial) _popAtIndex _mt[243] this[304287]) idx[301954]))
    unknown result[301969] "dead at end of block" "insert auto destroy"
    (549894 'init var' result[301969] call_tmp[746410])
    (301972 'end of statement')
    (301975 call(406245 call (partial) _leave _mt[243] this[304287]))
    (491187 'end of statement')
    unknown call_tmp[746419] "expr temp" "maybe param" "maybe type" "temp"
    (746422 'move' call_tmp[746419](539278 call eltType _mt[243] this[304287]))
    (539282 'move' ret[539273](539281 'coerce' result[301969] call_tmp[746419]))
    gotoReturn _end_pop[539271] _end_pop[539271]
    (491188 'end of statement' result[301969])
    label _end_pop[539271]
    (539275 return ret[539273])
  }
  { scopeless type
    (406232 call eltType _mt[243] this[304287])
  }
  function list[304105](?)._fireAllDestructors[301985](arg _mt[304293]:_MT[238], arg this[304291]:list[304105](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    const tmp[302058] "const" "temp"
    unknown call_tmp[746426] "expr temp" "maybe param" "maybe type" "temp"
    (746429 'move' call_tmp[746426](302055 '_wide_get_locale' this[304291]))
    (302060 'move' tmp[302058](302056 'deref' call_tmp[746426]))
    {
      {
        {
          unknown _indexOfInterest[302009] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302010] "expr temp" "temp"
          unknown call_tmp[746433] "expr temp" "maybe param" "maybe type" "temp"
          (746436 'move' call_tmp[746433](406262 call _size _mt[243] this[304291]))
          unknown call_tmp[746438] "expr temp" "maybe param" "maybe type" "temp"
          (746441 'move' call_tmp[746438](302026 call chpl_direct_counted_range_iter 0 call_tmp[746433]))
          (302019 'move' _iterator[302010](302017 call _getIterator call_tmp[746438]))
          Defer
          {
            {
              (302042 call _freeIterator _iterator[302010])
            }
          }
          { scopeless type
            (302031 'move' _indexOfInterest[302009](302028 call iteratorIndex _iterator[302010]))
          }
          ForLoop[302011]
          {
            unknown i[302035] "index var" "insert auto destroy"
            (491191 'end of statement')
            (302037 'move' i[302035] _indexOfInterest[302009])
            (491192 'end of statement' i[302035])
            {
              unknown item[301999] "dead at end of block" "ref var"
              unknown call_tmp[746445] "expr temp" "maybe param" "maybe type" "temp"
              (746448 'move' call_tmp[746445](301998 call(406251 call (partial) _getRef _mt[243] this[304291]) i[302035]))
              (549897 'move' item[301999](549896 'addr of' call_tmp[746445]))
              (302002 'end of statement' i[302035])
              (302007 call(406256 call (partial) _destroy _mt[243] this[304291]) item[301999])
              (491195 'end of statement' item[301999])
            }
            label _continueLabel[302014]
            _indexOfInterest[302009]
            _iterator[302010]
          }
          label _breakLabel[302015]
        }
        unknown call_tmp[746454] "expr temp" "maybe param" "maybe type" "temp"
        (746457 'move' call_tmp[746454](406267 call _size _mt[243] this[304291]))
        (302052 call = call_tmp[746454] 0)
      }
      (302063 'on block' 0 tmp[302058])
    }
    (539288 return _void[55])
  }
  function list[304105](?)._freeAllArrays[302073](arg _mt[304297]:_MT[238], arg this[304295]:list[304105](?)) : _unknown[51] "method" "primary method" "no doc" "no return value for void"
  {
    unknown call_tmp[746461] "expr temp" "maybe param" "maybe type" "temp"
    (746464 'move' call_tmp[746461](406272 call _arrays _mt[243] this[304295]))
    unknown call_tmp[746466] "expr temp" "maybe param" "maybe type" "temp"
    (746469 'move' call_tmp[746466](302077 call == call_tmp[746461] nil[44]))
    unknown call_tmp[746471] "expr temp" "maybe param" "maybe type" "temp"
    (746474 'move' call_tmp[746471](302081 call _cond_test call_tmp[746466]))
    if call_tmp[746471]
    {
      gotoReturn _end__freeAllArrays[539290] _end__freeAllArrays[539290]
    }
    unknown call_tmp[746478] "expr temp" "maybe param" "maybe type" "temp"
    (746481 'move' call_tmp[746478](406277 call _totalCapacity _mt[243] this[304295]))
    unknown call_tmp[746483] "expr temp" "maybe param" "maybe type" "temp"
    (746486 'move' call_tmp[746483](302090 call != call_tmp[746478] 0))
    (302093 call _sanity call_tmp[746483])
    (491200 'end of statement')
    unknown call_tmp[746490] "expr temp" "maybe param" "maybe type" "temp"
    (746493 'move' call_tmp[746490](406282 call _arrayCapacity _mt[243] this[304295]))
    unknown call_tmp[746495] "expr temp" "maybe param" "maybe type" "temp"
    (746498 'move' call_tmp[746495](302098 call != call_tmp[746490] 0))
    (302101 call _sanity call_tmp[746495])
    (491201 'end of statement')
    const tmp[302224] "const" "temp"
    unknown call_tmp[746500] "expr temp" "maybe param" "maybe type" "temp"
    (746503 'move' call_tmp[746500](302221 '_wide_get_locale' this[304295]))
    (302226 'move' tmp[302224](302222 'deref' call_tmp[746500]))
    {
      {
        {
          unknown _indexOfInterest[302156] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302157] "expr temp" "temp"
          unknown call_tmp[746507] "expr temp" "maybe param" "maybe type" "temp"
          (746510 'move' call_tmp[746507](406313 call _arrayCapacity _mt[243] this[304295]))
          unknown call_tmp[746512] "expr temp" "maybe param" "maybe type" "temp"
          (746515 'move' call_tmp[746512](302173 call chpl_direct_counted_range_iter 0 call_tmp[746507]))
          (302166 'move' _iterator[302157](302164 call _getIterator call_tmp[746512]))
          Defer
          {
            {
              (302189 call _freeIterator _iterator[302157])
            }
          }
          { scopeless type
            (302178 'move' _indexOfInterest[302156](302175 call iteratorIndex _iterator[302157]))
          }
          ForLoop[302158]
          {
            unknown i[302182] "index var" "insert auto destroy"
            (491203 'end of statement')
            (302184 'move' i[302182] _indexOfInterest[302156])
            (491204 'end of statement' i[302182])
            {
              unknown array[302115] "dead at end of block" "ref var"
              unknown call_tmp[746519] "expr temp" "maybe param" "maybe type" "temp"
              (746522 'move' call_tmp[746519](302114 call(406288 call (partial) _arrays _mt[243] this[304295]) i[302182]))
              (549900 'move' array[302115](549899 'addr of' call_tmp[746519]))
              (302118 'end of statement')
              unknown call_tmp[746524] "expr temp" "maybe param" "maybe type" "temp"
              (746527 'move' call_tmp[746524](302122 call == array[302115] nil[44]))
              unknown call_tmp[746529] "expr temp" "maybe param" "maybe type" "temp"
              (746532 'move' call_tmp[746529](302127 call _cond_test call_tmp[746524]))
              if call_tmp[746529]
              {
                continue _continueLabel[302161] _continueLabel[302161]
              }
              unknown call_tmp[746536] "maybe param" "maybe type" "temp"
              (746539 'move' call_tmp[746536](302135 call(406294 call (partial) _getArrayCapacity _mt[243] this[304295]) i[302182]))
              const capacity[302136] "dead at end of block" "const" "insert auto destroy"
              (549902 'init var' capacity[302136] call_tmp[746536])
              (302139 'end of statement' i[302182] i[302182])
              unknown call_tmp[746543] "expr temp" "maybe param" "maybe type" "temp"
              (746546 'move' call_tmp[746543](406300 call _totalCapacity _mt[243] this[304295]))
              (302142 call -= call_tmp[746543] capacity[302136])
              (491208 'end of statement' capacity[302136])
              (302149 call(406305 call (partial) _freeArray _mt[243] this[304295]) array[302115] capacity[302136])
              (491210 'end of statement' array[302115] capacity[302136])
              (302153 call = array[302115] nil[44])
              (491213 'end of statement' array[302115])
            }
            label _continueLabel[302161]
            _indexOfInterest[302156]
            _iterator[302157]
          }
          label _breakLabel[302162]
        }
        unknown call_tmp[746552] "expr temp" "maybe param" "maybe type" "temp"
        (746555 'move' call_tmp[746552](406318 call _totalCapacity _mt[243] this[304295]))
        unknown call_tmp[746557] "expr temp" "maybe param" "maybe type" "temp"
        (746560 'move' call_tmp[746557](302200 call == call_tmp[746552] 0))
        (302203 call _sanity call_tmp[746557])
        (491215 'end of statement')
        unknown call_tmp[746566] "expr temp" "maybe param" "maybe type" "temp"
        (746569 'move' call_tmp[746566](406327 call _arrays _mt[243] this[304295]))
        unknown call_tmp[746573] "expr temp" "maybe param" "maybe type" "temp"
        (746576 'move' call_tmp[746573](406332 call _arrayCapacity _mt[243] this[304295]))
        (302209 call(406322 call (partial) _freeBlockArray _mt[243] this[304295]) call_tmp[746566] call_tmp[746573])
        (491216 'end of statement')
        unknown call_tmp[746580] "expr temp" "maybe param" "maybe type" "temp"
        (746583 'move' call_tmp[746580](406337 call _arrays _mt[243] this[304295]))
        (302213 call = call_tmp[746580] nil[44])
        (491217 'end of statement')
        unknown call_tmp[746587] "expr temp" "maybe param" "maybe type" "temp"
        (746590 'move' call_tmp[746587](406342 call _size _mt[243] this[304295]))
        (302218 call = call_tmp[746587] 0)
      }
      (302229 'on block' 0 tmp[302224])
    }
    label _end__freeAllArrays[539290]
    (539292 return _void[55])
  }
  function list[304105](?).clear[302238](arg _mt[304301]:_MT[238], ref arg this[304299]:list[304105](?)) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302289] "const" "temp"
    unknown call_tmp[746592] "expr temp" "maybe param" "maybe type" "temp"
    (746595 'move' call_tmp[746592](302286 '_wide_get_locale' this[304299]))
    (302291 'move' tmp[302289](302287 'deref' call_tmp[746592]))
    {
      {
        (302243 call(406347 call (partial) _enter _mt[243] this[304299]))
        (491220 'end of statement')
        (302248 call(406351 call (partial) _fireAllDestructors _mt[243] this[304299]))
        (491221 'end of statement')
        (302252 call(406355 call (partial) _freeAllArrays _mt[243] this[304299]))
        (491222 'end of statement')
        unknown call_tmp[746605] "expr temp" "maybe param" "maybe type" "temp"
        (746608 'move' call_tmp[746605](406360 call _totalCapacity _mt[243] this[304299]))
        unknown call_tmp[746610] "expr temp" "maybe param" "maybe type" "temp"
        (746613 'move' call_tmp[746610](302257 call == call_tmp[746605] 0))
        (302260 call _sanity call_tmp[746610])
        (491223 'end of statement')
        unknown call_tmp[746617] "expr temp" "maybe param" "maybe type" "temp"
        (746620 'move' call_tmp[746617](406365 call _size _mt[243] this[304299]))
        unknown call_tmp[746622] "expr temp" "maybe param" "maybe type" "temp"
        (746625 'move' call_tmp[746622](302265 call == call_tmp[746617] 0))
        (302268 call _sanity call_tmp[746622])
        (491224 'end of statement')
        unknown call_tmp[746629] "expr temp" "maybe param" "maybe type" "temp"
        (746632 'move' call_tmp[746629](406370 call _arrays _mt[243] this[304299]))
        unknown call_tmp[746634] "expr temp" "maybe param" "maybe type" "temp"
        (746637 'move' call_tmp[746634](302273 call == call_tmp[746629] nil[44]))
        (302276 call _sanity call_tmp[746634])
        (491225 'end of statement')
        (302280 call(406374 call (partial) _firstTimeInitializeArrays _mt[243] this[304299]))
        (491226 'end of statement')
        (302284 call(406378 call (partial) _leave _mt[243] this[304299]))
      }
      (302294 'on block' 0 tmp[302289])
    }
    (539296 return _void[55])
  }
  function list[304105](?).indexOf[302306](arg _mt[304305]:_MT[238], const arg this[304303]:list[304105](?), arg x[302303] :
  (406383 call eltType _mt[243] this[304303]), arg start[302310]:int(64)[13] =
  0, arg end[302318]:int(64)[13] =
  (302316 call - 1)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539300] "RVV" "temp"
    unknown call_tmp[746645] "expr temp" "maybe param" "maybe type" "temp"
    (746648 'move' call_tmp[746645](302434 call _cond_test 1))
    if call_tmp[746645]
    {
      const msg[302341] "dead at end of block" "const" "insert auto destroy"
      (549904 'init var' msg[302341] " index for \"list.indexOf\" out of bounds: ")
      (302344 'end of statement')
      unknown tmp[434896] "maybe param" "temp"
      (434907 'move' tmp[434896](302348 call >= end[302318] 0))
      unknown call_tmp[746650] "expr temp" "maybe param" "maybe type" "temp"
      (746653 'move' call_tmp[746650](434909 call _cond_invalid tmp[434896]))
      if call_tmp[746650]
      {
        (434912 call compilerError "cannot promote short-circuiting && operator")
      }
      unknown tmp[581069] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581070] "maybe param" "temp"
      unknown call_tmp[746655] "expr temp" "maybe param" "maybe type" "temp"
      (746658 'move' call_tmp[746655](434897 call isTrue tmp[434896]))
      (581075 'move' tmp[581070](581073 call _cond_test call_tmp[746655]))
      if tmp[581070]
      {
        unknown tmp[581077] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[746662] "expr temp" "maybe param" "maybe type" "temp"
        (746665 'move' call_tmp[746662](302353 call(406389 call (partial) _withinBounds _mt[243] this[304303]) end[302318]))
        unknown call_tmp[746667] "expr temp" "maybe param" "maybe type" "temp"
        (746670 'move' call_tmp[746667](302354 call ! call_tmp[746662]))
        (581079 'move' tmp[581077](434900 call isTrue call_tmp[746667]))
        (581084 'move' tmp[581069](581081 '_paramFoldLogical' tmp[581070] tmp[581077]))
      }
      {
        (581089 'move' tmp[581069](581086 '_paramFoldLogical' tmp[581070] 0))
      }
      unknown call_tmp[746672] "expr temp" "maybe param" "maybe type" "temp"
      (746675 'move' call_tmp[746672](302388 call _cond_test tmp[581069]))
      if call_tmp[746672]
      {
        unknown call_tmp[746677] "expr temp" "maybe param" "maybe type" "temp"
        (746680 'move' call_tmp[746677](302377 call + "End" msg[302341]))
        unknown call_tmp[746682] "expr temp" "maybe param" "maybe type" "temp"
        (746685 'move' call_tmp[746682](302381 call _cast string[26] end[302318]))
        unknown call_tmp[746687] "expr temp" "maybe param" "maybe type" "temp"
        (746690 'move' call_tmp[746687](302383 call + call_tmp[746677] call_tmp[746682]))
        (302386 call boundsCheckHalt call_tmp[746687])
        (491229 'end of statement' msg[302341])
      }
      unknown call_tmp[746694] "expr temp" "maybe param" "maybe type" "temp"
      (746697 'move' call_tmp[746694](302396 call(406396 call (partial) _withinBounds _mt[243] this[304303]) start[302310]))
      unknown call_tmp[746699] "expr temp" "maybe param" "maybe type" "temp"
      (746702 'move' call_tmp[746699](302397 call ! call_tmp[746694]))
      unknown call_tmp[746704] "expr temp" "maybe param" "maybe type" "temp"
      (746707 'move' call_tmp[746704](302429 call _cond_test call_tmp[746699]))
      if call_tmp[746704]
      {
        unknown call_tmp[746709] "expr temp" "maybe param" "maybe type" "temp"
        (746712 'move' call_tmp[746709](302418 call + "Start" msg[302341]))
        unknown call_tmp[746714] "expr temp" "maybe param" "maybe type" "temp"
        (746717 'move' call_tmp[746714](302422 call _cast string[26] start[302310]))
        unknown call_tmp[746719] "expr temp" "maybe param" "maybe type" "temp"
        (746722 'move' call_tmp[746719](302424 call + call_tmp[746709] call_tmp[746714]))
        (302427 call boundsCheckHalt call_tmp[746719])
        (491231 'end of statement' msg[302341])
      }
    }
    unknown call_tmp[746724] "maybe param" "maybe type" "temp"
    (746727 'move' call_tmp[746724](302440 call - 1))
    unknown error[302442] "dead at end of block" "param"
    (549906 'init var' error[302442] call_tmp[746724])
    (302445 'end of statement')
    unknown tmp[434917] "maybe param" "temp"
    (434928 'move' tmp[434917](302448 call >= end[302318] 0))
    unknown call_tmp[746729] "expr temp" "maybe param" "maybe type" "temp"
    (746732 'move' call_tmp[746729](434930 call _cond_invalid tmp[434917]))
    if call_tmp[746729]
    {
      (434933 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581096] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581097] "maybe param" "temp"
    unknown call_tmp[746734] "expr temp" "maybe param" "maybe type" "temp"
    (746737 'move' call_tmp[746734](434918 call isTrue tmp[434917]))
    (581102 'move' tmp[581097](581100 call _cond_test call_tmp[746734]))
    if tmp[581097]
    {
      unknown tmp[581104] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746739] "expr temp" "maybe param" "maybe type" "temp"
      (746742 'move' call_tmp[746739](302452 call < end[302318] start[302310]))
      (581106 'move' tmp[581104](434921 call isTrue call_tmp[746739]))
      (581111 'move' tmp[581096](581108 '_paramFoldLogical' tmp[581097] tmp[581104]))
    }
    {
      (581116 'move' tmp[581096](581113 '_paramFoldLogical' tmp[581097] 0))
    }
    unknown call_tmp[746744] "expr temp" "maybe param" "maybe type" "temp"
    (746747 'move' call_tmp[746744](302459 call _cond_test tmp[581096]))
    if call_tmp[746744]
    {
      (539306 'move' ret[539300](539305 'coerce' error[302442] int(64)[13]))
      gotoReturn _end_indexOf[539298] _end_indexOf[539298]
    }
    unknown result[302465] "dead at end of block" "insert auto destroy"
    (549908 'init var' result[302465] error[302442])
    (302468 'end of statement')
    const tmp[302561] "const" "temp"
    unknown call_tmp[746749] "expr temp" "maybe param" "maybe type" "temp"
    (746752 'move' call_tmp[746749](302558 '_wide_get_locale' this[304303]))
    (302563 'move' tmp[302561](302559 'deref' call_tmp[746749]))
    {
      {
        (302472 call(406409 call (partial) _enter _mt[243] this[304303]))
        (491235 'end of statement')
        const stop[302487] "dead at end of block" "const" "insert auto destroy"
        unknown tmp[581123] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581124] "maybe param" "temp"
        unknown call_tmp[746756] "expr temp" "maybe param" "maybe type" "temp"
        (746759 'move' call_tmp[746756](302477 call < end[302318] 0))
        (581129 'move' tmp[581124](581127 call _cond_test call_tmp[746756]))
        if tmp[581124]
        {
          unknown tmp[581131] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[746763] "expr temp" "maybe param" "maybe type" "temp"
          (746766 'move' call_tmp[746763](406415 call _size _mt[243] this[304303]))
          (581133 'move' tmp[581131](302481 call - call_tmp[746763] 1))
          (581138 'move' tmp[581123](581135 '_paramFoldLogical' tmp[581124] tmp[581131]))
        }
        {
          (581143 'move' tmp[581123](581140 '_paramFoldLogical' tmp[581124] end[302318]))
        }
        (549910 'init var' stop[302487] tmp[581123])
        (302490 'end of statement')
        {
          unknown _indexOfInterest[302516] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302517] "expr temp" "temp"
          unknown call_tmp[746768] "expr temp" "maybe param" "maybe type" "temp"
          (746771 'move' call_tmp[746768](302531 call chpl_direct_range_iter start[302310] stop[302487] 1))
          (302526 'move' _iterator[302517](302524 call _getIterator call_tmp[746768]))
          Defer
          {
            {
              (302547 call _freeIterator _iterator[302517])
            }
          }
          { scopeless type
            (302536 'move' _indexOfInterest[302516](302533 call iteratorIndex _iterator[302517]))
          }
          ForLoop[302518]
          {
            unknown i[302540] "index var" "insert auto destroy"
            (491237 'end of statement')
            (302542 'move' i[302540] _indexOfInterest[302516])
            (491238 'end of statement' i[302540])
            unknown call_tmp[746775] "expr temp" "maybe param" "maybe type" "temp"
            (746778 'move' call_tmp[746775](302500 call(406421 call (partial) _getRef _mt[243] this[304303]) i[302540]))
            unknown call_tmp[746780] "expr temp" "maybe param" "maybe type" "temp"
            (746783 'move' call_tmp[746780](302501 call == x[302303] call_tmp[746775]))
            unknown call_tmp[746785] "expr temp" "maybe param" "maybe type" "temp"
            (746788 'move' call_tmp[746785](302512 call _cond_test call_tmp[746780]))
            if call_tmp[746785]
            {
              (302505 call = result[302465] i[302540])
              (491240 'end of statement' result[302465] i[302540])
              break _breakLabel[302522] _breakLabel[302522]
            }
            label _continueLabel[302521]
            _indexOfInterest[302516]
            _iterator[302517]
          }
          label _breakLabel[302522]
        }
        (302556 call(406430 call (partial) _leave _mt[243] this[304303]))
      }
      (302566 'on block' 0 tmp[302561])
    }
    (539312 'move' ret[539300](539311 'coerce' result[302465] int(64)[13]))
    gotoReturn _end_indexOf[539298] _end_indexOf[539298]
    (491244 'end of statement' result[302465])
    label _end_indexOf[539298]
    (539302 return ret[539300])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?).count[302581](arg _mt[304309]:_MT[238], const arg this[304307]:list[304105](?), arg x[302578] :
  (406436 call eltType _mt[243] this[304307])) : _unknown[51] "method" "primary method"
  {
    unknown ret[539318] "RVV" "temp"
    unknown result[302585] "dead at end of block" "insert auto destroy"
    (549912 'init var' result[302585] 0)
    (302588 'end of statement')
    const tmp[302662] "const" "temp"
    unknown call_tmp[746794] "expr temp" "maybe param" "maybe type" "temp"
    (746797 'move' call_tmp[746794](302659 '_wide_get_locale' this[304307]))
    (302664 'move' tmp[302662](302660 'deref' call_tmp[746794]))
    {
      {
        (302593 call(406441 call (partial) _enter _mt[243] this[304307]))
        (491246 'end of statement')
        unknown count[302597] "dead at end of block" "insert auto destroy"
        (549914 'init var' count[302597] 0)
        (302600 'end of statement')
        {
          unknown _indexOfInterest[302617] "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[302618] "expr temp" "temp"
          (302627 'move' _iterator[302618](302625 call _getIterator this[304307]))
          Defer
          {
            {
              (302643 call _freeIterator _iterator[302618])
            }
          }
          { scopeless type
            (302632 'move' _indexOfInterest[302617](302629 call iteratorIndex _iterator[302618]))
          }
          ForLoop[302619]
          {
            unknown item[302636] "index var" "insert auto destroy"
            (491248 'end of statement')
            (302638 'move' item[302636] _indexOfInterest[302617])
            (491249 'end of statement' item[302636])
            unknown call_tmp[746801] "expr temp" "maybe param" "maybe type" "temp"
            (746804 'move' call_tmp[746801](302605 call == x[302578] item[302636]))
            unknown call_tmp[746806] "expr temp" "maybe param" "maybe type" "temp"
            (746809 'move' call_tmp[746806](302612 call _cond_test call_tmp[746801]))
            if call_tmp[746806]
            {
              (302609 call += count[302597] 1)
              (491251 'end of statement' count[302597])
            }
            label _continueLabel[302622]
            _indexOfInterest[302617]
            _iterator[302618]
          }
          label _breakLabel[302623]
        }
        (302652 call = result[302585] count[302597])
        (491253 'end of statement' result[302585] count[302597])
        (302657 call(406451 call (partial) _leave _mt[243] this[304307]))
      }
      (302667 'on block' 0 tmp[302662])
    }
    (539324 'move' ret[539318](539323 'coerce' result[302585] int(64)[13]))
    gotoReturn _end_count[539316] _end_count[539316]
    (491257 'end of statement' result[302585])
    label _end_count[539316]
    (539320 return ret[539318])
  }
  { scopeless type
    int(64)[13]
  }
  function list[304105](?).sort[302688](arg _mt[304313]:_MT[238], ref arg this[304311]:list[304105](?), arg comparator[302684]:_any[178](?) :
  defaultComparator[267889] =
  defaultComparator[267889]) : _unknown[51] "method" "primary method" "no return value for void"
  {
    const tmp[302814] "const" "temp"
    unknown call_tmp[746813] "expr temp" "maybe param" "maybe type" "temp"
    (746816 'move' call_tmp[746813](302811 '_wide_get_locale' this[304311]))
    (302816 'move' tmp[302814](302812 'deref' call_tmp[746813]))
    {
      {
        (302693 call(406457 call (partial) _enter _mt[243] this[304311]))
        (491259 'end of statement')
        unknown call_tmp[746822] "expr temp" "maybe param" "maybe type" "temp"
        (746825 'move' call_tmp[746822](406462 call _size _mt[243] this[304311]))
        unknown call_tmp[746827] "expr temp" "maybe param" "maybe type" "temp"
        (746830 'move' call_tmp[746827](302698 call > call_tmp[746822] 1))
        unknown call_tmp[746832] "expr temp" "maybe param" "maybe type" "temp"
        (746835 'move' call_tmp[746832](302803 call _cond_test call_tmp[746827]))
        if call_tmp[746832]
        {
          unknown arr[302712] "dead at end of block" "insert auto destroy"
          unknown call_tmp[746837] "expr temp" "maybe param" "maybe type" "temp"
          (746840 'move' call_tmp[746837](302701 call chpl_build_low_bounded_range 0))
          unknown call_tmp[746844] "expr temp" "maybe param" "maybe type" "temp"
          (746847 'move' call_tmp[746844](406467 call _size _mt[243] this[304311]))
          unknown call_tmp[746849] "expr temp" "maybe param" "maybe type" "temp"
          (746852 'move' call_tmp[746849](302704 call # call_tmp[746837] call_tmp[746844]))
          unknown call_tmp[746854] "expr temp" "maybe param" "maybe type" "temp"
          (746857 'move' call_tmp[746854](302708 call chpl__ensureDomainExpr call_tmp[746849]))
          unknown call_tmp[746861] "expr temp" "maybe param" "maybe type" "temp"
          (746864 'move' call_tmp[746861](406472 call eltType _mt[243] this[304311]))
          unknown call_tmp[746866] "expr temp" "maybe param" "maybe type" "temp"
          (746869 'move' call_tmp[746866](302710 call chpl__buildArrayRuntimeType call_tmp[746854] call_tmp[746861]))
          (549916 'default init var' arr[302712] call_tmp[746866])
          (302715 'end of statement')
          {
            unknown _indexOfInterest[302735] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[302736] "expr temp" "temp"
            unknown call_tmp[746873] "expr temp" "maybe param" "maybe type" "temp"
            (746876 'move' call_tmp[746873](406481 call _size _mt[243] this[304311]))
            unknown call_tmp[746878] "expr temp" "maybe param" "maybe type" "temp"
            (746881 'move' call_tmp[746878](302752 call chpl_direct_counted_range_iter 0 call_tmp[746873]))
            (302745 'move' _iterator[302736](302743 call _getIterator call_tmp[746878]))
            Defer
            {
              {
                (302768 call _freeIterator _iterator[302736])
              }
            }
            { scopeless type
              (302757 'move' _indexOfInterest[302735](302754 call iteratorIndex _iterator[302736]))
            }
            ForLoop[302737]
            {
              unknown i[302761] "index var" "insert auto destroy"
              (491261 'end of statement')
              (302763 'move' i[302761] _indexOfInterest[302735])
              (491262 'end of statement' i[302761])
              unknown call_tmp[746883] "expr temp" "maybe param" "maybe type" "temp"
              (746886 'move' call_tmp[746883](302727 call arr[302712] i[302761]))
              unknown call_tmp[746888] "expr temp" "maybe param" "maybe type" "temp"
              (746891 'move' call_tmp[746888](302731 call this[304311] i[302761]))
              (302732 call = call_tmp[746883] call_tmp[746888])
              (491264 'end of statement' arr[302712] i[302761] i[302761])
              label _continueLabel[302740]
              _indexOfInterest[302735]
              _iterator[302736]
            }
            label _breakLabel[302741]
          }
          (302784 call sort module=[255] Sort[267880] arr[302712] comparator[302684])
          (491268 'end of statement' arr[302712])
          (302788 call(406487 call (partial) _fireAllDestructors _mt[243] this[304311]))
          (491270 'end of statement')
          (302792 call(406491 call (partial) _freeAllArrays _mt[243] this[304311]))
          (491271 'end of statement')
          (302796 call(406495 call (partial) _firstTimeInitializeArrays _mt[243] this[304311]))
          (491272 'end of statement')
          (302801 call(406499 call (partial) _extendGeneric _mt[243] this[304311]) arr[302712])
          (491273 'end of statement' arr[302712])
          (364862 'referenced modules list' Sort[267880])
        }
        (302809 call(406504 call (partial) _leave _mt[243] this[304311]))
      }
      (302819 'on block' 0 tmp[302814])
    }
    (539330 return _void[55])
  }
  function list[304105](?).this[302833](arg _mt[304317]:_MT[238], ref arg this[304315]:list[304105](?), arg i[302830]:int(64)[13]) ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539334] "RVV" "temp"
    unknown tmp[434938] "maybe param" "temp"
    (434949 'move' tmp[434938] 1)
    unknown call_tmp[746903] "expr temp" "maybe param" "maybe type" "temp"
    (746906 'move' call_tmp[746903](434951 call _cond_invalid tmp[434938]))
    if call_tmp[746903]
    {
      (434954 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581150] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581151] "maybe param" "temp"
    unknown call_tmp[746908] "expr temp" "maybe param" "maybe type" "temp"
    (746911 'move' call_tmp[746908](434939 call isTrue tmp[434938]))
    (581156 'move' tmp[581151](581154 call _cond_test call_tmp[746908]))
    if tmp[581151]
    {
      unknown tmp[581158] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746915] "expr temp" "maybe param" "maybe type" "temp"
      (746918 'move' call_tmp[746915](302839 call(406509 call (partial) _withinBounds _mt[243] this[304315]) i[302830]))
      unknown call_tmp[746920] "expr temp" "maybe param" "maybe type" "temp"
      (746923 'move' call_tmp[746920](302840 call ! call_tmp[746915]))
      (581160 'move' tmp[581158](434942 call isTrue call_tmp[746920]))
      (581165 'move' tmp[581150](581162 '_paramFoldLogical' tmp[581151] tmp[581158]))
    }
    {
      (581170 'move' tmp[581150](581167 '_paramFoldLogical' tmp[581151] 0))
    }
    unknown call_tmp[746925] "expr temp" "maybe param" "maybe type" "temp"
    (746928 'move' call_tmp[746925](302877 call _cond_test tmp[581150]))
    if call_tmp[746925]
    {
      unknown call_tmp[746930] "expr temp" "maybe param" "maybe type" "temp"
      (746933 'move' call_tmp[746930](302863 call _cast string[26] i[302830]))
      unknown call_tmp[746935] "maybe param" "maybe type" "temp"
      (746938 'move' call_tmp[746935](302865 call + "Invalid list index: " call_tmp[746930]))
      const msg[302867] "dead at end of block" "const" "insert auto destroy"
      (549918 'init var' msg[302867] call_tmp[746935])
      (302870 'end of statement')
      (302875 call boundsCheckHalt msg[302867])
      (491278 'end of statement' msg[302867])
    }
    unknown result[302886] "dead at end of block" "ref var"
    unknown call_tmp[746942] "expr temp" "maybe param" "maybe type" "temp"
    (746945 'move' call_tmp[746942](302885 call(406516 call (partial) _getRef _mt[243] this[304315]) i[302830]))
    (549921 'move' result[302886](549920 'addr of' call_tmp[746942]))
    (302889 'end of statement')
    (539339 'move' ret[539334](539338 'addr of' result[302886]))
    gotoReturn _end_this[539332] _end_this[539332]
    (491280 'end of statement' result[302886])
    label _end_this[539332]
    (539336 return ret[539334])
  }
  function list[304105](?).this[302901](arg _mt[304321]:_MT[238], const  ref arg this[304319]:list[304105](?), arg i[302898]:int(64)[13]) const ref : _unknown[51] "method" "primary method"
  {
    unknown ret[539345] "RVV" "temp"
    unknown tmp[434959] "maybe param" "temp"
    (434970 'move' tmp[434959] 1)
    unknown call_tmp[746947] "expr temp" "maybe param" "maybe type" "temp"
    (746950 'move' call_tmp[746947](434972 call _cond_invalid tmp[434959]))
    if call_tmp[746947]
    {
      (434975 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581177] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581178] "maybe param" "temp"
    unknown call_tmp[746952] "expr temp" "maybe param" "maybe type" "temp"
    (746955 'move' call_tmp[746952](434960 call isTrue tmp[434959]))
    (581183 'move' tmp[581178](581181 call _cond_test call_tmp[746952]))
    if tmp[581178]
    {
      unknown tmp[581185] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[746959] "expr temp" "maybe param" "maybe type" "temp"
      (746962 'move' call_tmp[746959](302907 call(406523 call (partial) _withinBounds _mt[243] this[304319]) i[302898]))
      unknown call_tmp[746964] "expr temp" "maybe param" "maybe type" "temp"
      (746967 'move' call_tmp[746964](302908 call ! call_tmp[746959]))
      (581187 'move' tmp[581185](434963 call isTrue call_tmp[746964]))
      (581192 'move' tmp[581177](581189 '_paramFoldLogical' tmp[581178] tmp[581185]))
    }
    {
      (581197 'move' tmp[581177](581194 '_paramFoldLogical' tmp[581178] 0))
    }
    unknown call_tmp[746969] "expr temp" "maybe param" "maybe type" "temp"
    (746972 'move' call_tmp[746969](302929 call _cond_test tmp[581177]))
    if call_tmp[746969]
    {
      unknown call_tmp[746974] "expr temp" "maybe param" "maybe type" "temp"
      (746977 'move' call_tmp[746974](302915 call _cast string[26] i[302898]))
      unknown call_tmp[746979] "maybe param" "maybe type" "temp"
      (746982 'move' call_tmp[746979](302917 call + "Invalid list index: " call_tmp[746974]))
      const msg[302919] "dead at end of block" "const" "insert auto destroy"
      (549923 'init var' msg[302919] call_tmp[746979])
      (302922 'end of statement')
      (302927 call halt msg[302919])
      (491283 'end of statement' msg[302919])
    }
    const result[302938] "dead at end of block" "const" "ref var"
    unknown call_tmp[746986] "expr temp" "maybe param" "maybe type" "temp"
    (746989 'move' call_tmp[746986](302937 call(406530 call (partial) _getRef _mt[243] this[304319]) i[302898]))
    (549926 'move' result[302938](549925 'addr of' call_tmp[746986]))
    (302941 'end of statement')
    (539350 'move' ret[539345](539349 'addr of' result[302938]))
    gotoReturn _end_this[539343] _end_this[539343]
    (491285 'end of statement' result[302938])
    label _end_this[539343]
    (539347 return ret[539345])
  }
  function list[304105](?).these[302949](arg _mt[304325]:_MT[238], arg this[304323]:list[304105](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no return value for void"
  {
    unknown ret[539356] "RVV" "temp"
    {
      unknown _indexOfInterest[302970] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[302971] "expr temp" "temp"
      unknown call_tmp[746993] "expr temp" "maybe param" "maybe type" "temp"
      (746996 'move' call_tmp[746993](406543 call _size _mt[243] this[304323]))
      unknown call_tmp[746998] "expr temp" "maybe param" "maybe type" "temp"
      (747001 'move' call_tmp[746998](302987 call chpl_direct_counted_range_iter 0 call_tmp[746993]))
      (302980 'move' _iterator[302971](302978 call _getIterator call_tmp[746998]))
      Defer
      {
        {
          (303003 call _freeIterator _iterator[302971])
        }
      }
      { scopeless type
        (302992 'move' _indexOfInterest[302970](302989 call iteratorIndex _iterator[302971]))
      }
      ForLoop[302972]
      {
        unknown i[302996] "index var" "insert auto destroy"
        (491288 'end of statement')
        (302998 'move' i[302996] _indexOfInterest[302970])
        (491289 'end of statement' i[302996])
        {
          unknown result[302962] "dead at end of block" "ref var"
          unknown call_tmp[747005] "expr temp" "maybe param" "maybe type" "temp"
          (747008 'move' call_tmp[747005](302961 call(406536 call (partial) _getRef _mt[243] this[304323]) i[302996]))
          (549929 'move' result[302962](549928 'addr of' call_tmp[747005]))
          (302965 'end of statement' i[302996])
          unknown yret[539360] "YVV" "temp"
          (539363 'move' yret[539360](539362 'addr of' result[302962]))
          (539365 yield yret[539360])
          (491292 'end of statement' result[302962])
        }
        label _continueLabel[302975]
        _indexOfInterest[302970]
        _iterator[302971]
      }
      label _breakLabel[302976]
    }
    (539358 return ret[539356])
  }
  function list[304105](?).these[303019](arg _mt[304329]:_MT[238], arg this[304327]:list[304105](?), param arg tag[303016]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539369] "RVV" "temp"
    unknown call_tmp[747012] "maybe param" "maybe type" "temp"
    (747015 'move' call_tmp[747012](406550 call _size _mt[243] this[304327]))
    const osz[303029] "dead at end of block" "const" "insert auto destroy"
    (549931 'init var' osz[303029] call_tmp[747012])
    (303032 'end of statement')
    const minChunkSize[303035] "dead at end of block" "const" "insert auto destroy"
    (549933 'init var' minChunkSize[303035] 64)
    (303038 'end of statement')
    unknown call_tmp[747017] "maybe param" "maybe type" "temp"
    (747020 'move' call_tmp[747017](303041 call <= osz[303029] minChunkSize[303035]))
    const hasOneChunk[303043] "dead at end of block" "const" "insert auto destroy"
    (549935 'init var' hasOneChunk[303043] call_tmp[747017])
    (303046 'end of statement')
    const numTasks[303056] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581204] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581205] "maybe param" "temp"
    (581210 'move' tmp[581205](581208 call _cond_test hasOneChunk[303043]))
    if tmp[581205]
    {
      (581215 'move' tmp[581204](581212 '_paramFoldLogical' tmp[581205] 1))
    }
    {
      unknown tmp[581217] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747022] "expr temp" "maybe param" "maybe type" "temp"
      (747025 'move' call_tmp[747022](364868 call here[90435]))
      (581219 'move' tmp[581217](303050 call maxTaskPar _mt[243] call_tmp[747022]))
      (581224 'move' tmp[581204](581221 '_paramFoldLogical' tmp[581205] tmp[581217]))
    }
    (549937 'init var' numTasks[303056] tmp[581204])
    (303059 'end of statement')
    unknown call_tmp[747029] "expr temp" "maybe param" "maybe type" "temp"
    (747032 'move' call_tmp[747029](303063 call / osz[303029] numTasks[303056]))
    unknown call_tmp[747034] "expr temp" "maybe param" "maybe type" "temp"
    (747037 'move' call_tmp[747034](303066 call floor call_tmp[747029]))
    unknown call_tmp[747039] "maybe param" "maybe type" "temp"
    (747042 'move' call_tmp[747039](303068 call _cast int(64)[13] call_tmp[747034]))
    const chunkSize[303070] "dead at end of block" "const" "insert auto destroy"
    (549939 'init var' chunkSize[303070] call_tmp[747039])
    (303073 'end of statement')
    unknown call_tmp[747044] "expr temp" "maybe param" "maybe type" "temp"
    (747047 'move' call_tmp[747044](303077 call * chunkSize[303070] numTasks[303056]))
    unknown call_tmp[747049] "maybe param" "maybe type" "temp"
    (747052 'move' call_tmp[747049](303079 call - osz[303029] call_tmp[747044]))
    const trailing[303081] "dead at end of block" "const" "insert auto destroy"
    (549941 'init var' trailing[303081] call_tmp[747049])
    (303084 'end of statement' osz[303029] minChunkSize[303035] hasOneChunk[303043] osz[303029] numTasks[303056] osz[303029] chunkSize[303070] numTasks[303056])
    {
      unknown tmpIter[303148] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747054] "expr temp" "maybe param" "maybe type" "temp"
      (747057 'move' call_tmp[747054](303087 call chpl_build_low_bounded_range 0))
      (303151 'move' tmpIter[303148](303090 call # call_tmp[747054] numTasks[303056]))
      unknown isRngDomArr[303337] "maybe param" "temp"
      unknown tmp[434980] "maybe param" "temp"
      (434991 'move' tmp[434980](303339 call isBoundedRange tmpIter[303148]))
      unknown call_tmp[747059] "expr temp" "maybe param" "maybe type" "temp"
      (747062 'move' call_tmp[747059](434993 call _cond_invalid tmp[434980]))
      if call_tmp[747059]
      {
        (434996 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581258] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581259] "maybe param" "temp"
      unknown call_tmp[747064] "expr temp" "maybe param" "maybe type" "temp"
      (747067 'move' call_tmp[747064](434981 call isTrue tmp[434980]))
      (581264 'move' tmp[581259](581262 call _cond_test call_tmp[747064]))
      if tmp[581259]
      {
        (581269 'move' tmp[581258](581266 '_paramFoldLogical' tmp[581259] 1))
      }
      {
        unknown tmp[435001] "maybe param" "temp"
        (435012 'move' tmp[435001](303342 call isDomain tmpIter[303148]))
        unknown call_tmp[747069] "expr temp" "maybe param" "maybe type" "temp"
        (747072 'move' call_tmp[747069](435014 call _cond_invalid tmp[435001]))
        if call_tmp[747069]
        {
          (435017 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581232] "maybe param" "temp"
        unknown call_tmp[747074] "expr temp" "maybe param" "maybe type" "temp"
        (747077 'move' call_tmp[747074](435002 call isTrue tmp[435001]))
        (581237 'move' tmp[581232](581235 call _cond_test call_tmp[747074]))
        if tmp[581232]
        {
          (581242 'move' tmp[581231](581239 '_paramFoldLogical' tmp[581232] 1))
        }
        {
          unknown tmp[581244] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747079] "expr temp" "maybe param" "maybe type" "temp"
          (747082 'move' call_tmp[747079](303345 call isArray tmpIter[303148]))
          (581246 'move' tmp[581244](435006 call isTrue call_tmp[747079]))
          (581251 'move' tmp[581231](581248 '_paramFoldLogical' tmp[581232] tmp[581244]))
        }
        unknown tmp[581271] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581273 'move' tmp[581271](434985 call isTrue tmp[581231]))
        (581278 'move' tmp[581258](581275 '_paramFoldLogical' tmp[581259] tmp[581271]))
      }
      (303352 'move' isRngDomArr[303337] tmp[581258])
      if isRngDomArr[303337]
      {
        const _coforallCount[303204] "const" "end count" "temp"
        (303273 'move' _coforallCount[303204](303270 call _endCountAlloc 1))
        unknown numTasks[303205] "temp"
        (303257 'move' numTasks[303205](303253 call size _mt[243] tmpIter[303148]))
        (303248 call _upEndCount _coforallCount[303204] 1 numTasks[303205])
        (491303 'end of statement')
        (303245 call chpl_resetTaskSpawn numTasks[303205])
        (491304 'end of statement')
        unknown _indexOfInterest[303212] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303213] "expr temp" "temp"
        (303222 'move' _iterator[303213](303220 call _getIterator tmpIter[303148]))
        Defer
        {
          {
            (303238 call _freeIterator _iterator[303213])
          }
        }
        { scopeless type
          (303227 'move' _indexOfInterest[303212](303224 call iteratorIndex _iterator[303213]))
        }
        ForLoop[303214]
        {
          unknown tid[303231] "coforall index var" "index var" "insert auto destroy"
          (491306 'end of statement')
          (303233 'move' tid[303231] _indexOfInterest[303212])
          (491307 'end of statement' tid[303231])
          {
            {
              unknown call_tmp[747088] "maybe param" "maybe type" "temp"
              (747091 'move' call_tmp[747088](303157 call(406575 call (partial) _computeChunk _mt[243] this[304327]) tid[303231] chunkSize[303070] trailing[303081]))
              unknown chunk[303155] "dead at end of block" "insert auto destroy"
              (549943 'init var' chunk[303155] call_tmp[747088])
              (303162 'end of statement' tid[303231] chunkSize[303070] trailing[303081])
              {
                unknown _indexOfInterest[303164] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303166] "expr temp" "temp"
                unknown call_tmp[747093] "expr temp" "maybe param" "maybe type" "temp"
                (747096 'move' call_tmp[747093](303173 call chunk[303155] 0))
                (303168 'move' _iterator[303166](303171 call _getIterator call_tmp[747093]))
                Defer
                {
                  {
                    (303177 call _freeIterator _iterator[303166])
                  }
                }
                { scopeless type
                  (303181 'move' _indexOfInterest[303164](303184 call iteratorIndex _iterator[303166]))
                }
                ForLoop[303186]
                {
                  unknown i[303189] "index var" "insert auto destroy"
                  (491313 'end of statement')
                  (303191 'move' i[303189] _indexOfInterest[303164])
                  (491314 'end of statement' i[303189])
                  unknown yret[539373] "YVV" "temp"
                  unknown call_tmp[747098] "expr temp" "maybe param" "maybe type" "temp"
                  (747101 'move' call_tmp[747098](303197 call this[304327] i[303189]))
                  (539376 'move' yret[539373](539375 'addr of' call_tmp[747098]))
                  (539378 yield yret[539373])
                  (491316 'end of statement' i[303189])
                  label _continueLabel[303199]
                  _indexOfInterest[303164]
                  _iterator[303166]
                }
                label _breakLabel[303201]
              }
            }
            (303207 call _downEndCount _coforallCount[303204] nil[44])
            (303206 'coforall loop')
          }
          label _continueLabel[303217]
          _indexOfInterest[303212]
          _iterator[303213]
        }
        label _breakLabel[303218]
        Defer
        {
          {
            (303260 call _endCountFree _coforallCount[303204])
          }
        }
        (303265 call _waitEndCount _coforallCount[303204] 1 numTasks[303205])
      }
      {
        const _coforallCount[303277] "const" "end count" "temp"
        (303334 'move' _coforallCount[303277](303331 call _endCountAlloc 1))
        unknown _indexOfInterest[303285] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303286] "expr temp" "temp"
        (303295 'move' _iterator[303286](303293 call _getIterator tmpIter[303148]))
        Defer
        {
          {
            (303311 call _freeIterator _iterator[303286])
          }
        }
        { scopeless type
          (303300 'move' _indexOfInterest[303285](303297 call iteratorIndex _iterator[303286]))
        }
        ForLoop[303287]
        {
          unknown tid[303304] "coforall index var" "index var" "insert auto destroy"
          (491322 'end of statement')
          (303306 'move' tid[303304] _indexOfInterest[303285])
          (491323 'end of statement' tid[303304])
          (303318 call _upEndCount _coforallCount[303277] 1)
          (491325 'end of statement')
          {
            {
              unknown call_tmp[747105] "maybe param" "maybe type" "temp"
              (747108 'move' call_tmp[747105](303097 call(406565 call (partial) _computeChunk _mt[243] this[304327]) tid[303304] chunkSize[303070] trailing[303081]))
              unknown chunk[303098] "dead at end of block" "insert auto destroy"
              (549945 'init var' chunk[303098] call_tmp[747105])
              (303101 'end of statement' tid[303304] chunkSize[303070] trailing[303081])
              {
                unknown _indexOfInterest[303114] "an _indexOfInterest or chpl__followIdx variable" "temp"
                unknown _iterator[303115] "expr temp" "temp"
                unknown call_tmp[747110] "expr temp" "maybe param" "maybe type" "temp"
                (747113 'move' call_tmp[747110](303107 call chunk[303098] 0))
                (303124 'move' _iterator[303115](303122 call _getIterator call_tmp[747110]))
                Defer
                {
                  {
                    (303141 call _freeIterator _iterator[303115])
                  }
                }
                { scopeless type
                  (303130 'move' _indexOfInterest[303114](303127 call iteratorIndex _iterator[303115]))
                }
                ForLoop[303116]
                {
                  unknown i[303134] "index var" "insert auto destroy"
                  (491330 'end of statement')
                  (303136 'move' i[303134] _indexOfInterest[303114])
                  (491331 'end of statement' i[303134])
                  unknown yret[539380] "YVV" "temp"
                  unknown call_tmp[747115] "expr temp" "maybe param" "maybe type" "temp"
                  (747118 'move' call_tmp[747115](303111 call this[304327] i[303134]))
                  (539383 'move' yret[539380](539382 'addr of' call_tmp[747115]))
                  (539385 yield yret[539380])
                  (491333 'end of statement' i[303134])
                  label _continueLabel[303119]
                  _indexOfInterest[303114]
                  _iterator[303115]
                }
                label _breakLabel[303120]
              }
            }
            (303280 call _downEndCount _coforallCount[303277] nil[44])
            (303279 'coforall loop')
          }
          label _continueLabel[303290]
          _indexOfInterest[303285]
          _iterator[303286]
        }
        label _breakLabel[303291]
        Defer
        {
          {
            (303322 call _endCountFree _coforallCount[303277])
          }
        }
        (303327 call _waitEndCount _coforallCount[303277] 1)
      }
    }
    (539371 return ret[539369])
  }
  where {
    (303026 call == tag[303016] standalone[451])
  }
  function list[304105](?)._computeChunk[303363](arg _mt[304333]:_MT[238], arg this[304331]:list[304105](?), arg tid[303361]:_any[178](?), arg chunkSize[303365]:_any[178](?), arg trailing[303367]:_any[178](?)) : _unknown[51] "method" "primary method" "no doc"
  {
    unknown ret[539389] "RVV" "temp"
    unknown lo[303369] "dead at end of block" "insert auto destroy"
    (549947 'init var' lo[303369] 0)
    unknown hi[303373] "dead at end of block" "insert auto destroy"
    (549949 'init var' hi[303373] lo[303369])
    (303377 'end of statement' lo[303369])
    unknown call_tmp[747120] "expr temp" "maybe param" "maybe type" "temp"
    (747123 'move' call_tmp[747120](303381 call <= tid[303361] 0))
    unknown call_tmp[747125] "expr temp" "maybe param" "maybe type" "temp"
    (747128 'move' call_tmp[747125](303423 call _cond_test call_tmp[747120]))
    if call_tmp[747125]
    {
      (303385 call = lo[303369] 0)
      (491339 'end of statement' lo[303369])
      unknown call_tmp[747130] "expr temp" "maybe param" "maybe type" "temp"
      (747133 'move' call_tmp[747130](303392 call + chunkSize[303365] trailing[303367]))
      unknown call_tmp[747135] "expr temp" "maybe param" "maybe type" "temp"
      (747138 'move' call_tmp[747135](303395 call - call_tmp[747130] 1))
      (303397 call = hi[303373] call_tmp[747135])
      (491341 'end of statement' hi[303373])
    }
    {
      unknown call_tmp[747140] "expr temp" "maybe param" "maybe type" "temp"
      (747143 'move' call_tmp[747140](303403 call * chunkSize[303365] tid[303361]))
      unknown call_tmp[747145] "expr temp" "maybe param" "maybe type" "temp"
      (747148 'move' call_tmp[747145](303406 call + call_tmp[747140] trailing[303367]))
      (303408 call = lo[303369] call_tmp[747145])
      (491343 'end of statement' lo[303369])
      unknown call_tmp[747150] "expr temp" "maybe param" "maybe type" "temp"
      (747153 'move' call_tmp[747150](303415 call + lo[303369] chunkSize[303365]))
      unknown call_tmp[747155] "expr temp" "maybe param" "maybe type" "temp"
      (747158 'move' call_tmp[747155](303418 call - call_tmp[747150] 1))
      (303420 call = hi[303373] call_tmp[747155])
      (491345 'end of statement' hi[303373] lo[303369])
    }
    unknown call_tmp[747160] "expr temp" "maybe param" "maybe type" "temp"
    (747163 'move' call_tmp[747160](303429 call chpl_build_bounded_range lo[303369] hi[303373]))
    unknown call_tmp[747165] "expr temp" "maybe param" "maybe type" "temp"
    (747168 'move' call_tmp[747165](303431 call _build_tuple call_tmp[747160]))
    (539394 'move' ret[539389](539393 'deref' call_tmp[747165]))
    gotoReturn _end__computeChunk[539387] _end__computeChunk[539387]
    (491348 'end of statement' lo[303369] hi[303373])
    label _end__computeChunk[539387]
    (539391 return ret[539389])
  }
  function list[304105](?).these[303441](arg _mt[304337]:_MT[238], arg this[304335]:list[304105](?), param arg tag[303439]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539400] "RVV" "temp"
    unknown call_tmp[747172] "maybe param" "maybe type" "temp"
    (747175 'move' call_tmp[747172](406602 call _size _mt[243] this[304335]))
    const osz[303451] "dead at end of block" "const" "insert auto destroy"
    (549951 'init var' osz[303451] call_tmp[747172])
    (303454 'end of statement')
    const minChunkSize[303457] "dead at end of block" "const" "insert auto destroy"
    (549953 'init var' minChunkSize[303457] 32)
    (303460 'end of statement')
    unknown call_tmp[747177] "maybe param" "maybe type" "temp"
    (747180 'move' call_tmp[747177](303463 call <= osz[303451] minChunkSize[303457]))
    const hasOneChunk[303465] "dead at end of block" "const" "insert auto destroy"
    (549955 'init var' hasOneChunk[303465] call_tmp[747177])
    (303468 'end of statement')
    const numTasks[303475] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[581285] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581286] "maybe param" "temp"
    (581291 'move' tmp[581286](581289 call _cond_test hasOneChunk[303465]))
    if tmp[581286]
    {
      (581296 'move' tmp[581285](581293 '_paramFoldLogical' tmp[581286] 1))
    }
    {
      (581301 'move' tmp[581285](581298 '_paramFoldLogical' tmp[581286] dataParTasksPerLocale[93281]))
    }
    (549957 'init var' numTasks[303475] tmp[581285])
    (303478 'end of statement')
    unknown call_tmp[747182] "expr temp" "maybe param" "maybe type" "temp"
    (747185 'move' call_tmp[747182](303482 call / osz[303451] numTasks[303475]))
    unknown call_tmp[747187] "expr temp" "maybe param" "maybe type" "temp"
    (747190 'move' call_tmp[747187](303485 call floor call_tmp[747182]))
    unknown call_tmp[747192] "maybe param" "maybe type" "temp"
    (747195 'move' call_tmp[747192](303487 call _cast int(64)[13] call_tmp[747187]))
    const chunkSize[303489] "dead at end of block" "const" "insert auto destroy"
    (549959 'init var' chunkSize[303489] call_tmp[747192])
    (303492 'end of statement')
    unknown call_tmp[747197] "expr temp" "maybe param" "maybe type" "temp"
    (747200 'move' call_tmp[747197](303496 call * chunkSize[303489] numTasks[303475]))
    unknown call_tmp[747202] "maybe param" "maybe type" "temp"
    (747205 'move' call_tmp[747202](303498 call - osz[303451] call_tmp[747197]))
    const trailing[303500] "dead at end of block" "const" "insert auto destroy"
    (549961 'init var' trailing[303500] call_tmp[747202])
    (303503 'end of statement' osz[303451] minChunkSize[303457] hasOneChunk[303465] osz[303451] numTasks[303475] osz[303451] chunkSize[303489] numTasks[303475])
    {
      unknown tmpIter[303525] "expr temp" "maybe ref" "no copy" "temp"
      unknown call_tmp[747207] "expr temp" "maybe param" "maybe type" "temp"
      (747210 'move' call_tmp[747207](303506 call chpl_build_low_bounded_range 0))
      (303528 'move' tmpIter[303525](303509 call # call_tmp[747207] numTasks[303475]))
      unknown isRngDomArr[303676] "maybe param" "temp"
      unknown tmp[435022] "maybe param" "temp"
      (435033 'move' tmp[435022](303678 call isBoundedRange tmpIter[303525]))
      unknown call_tmp[747212] "expr temp" "maybe param" "maybe type" "temp"
      (747215 'move' call_tmp[747212](435035 call _cond_invalid tmp[435022]))
      if call_tmp[747212]
      {
        (435038 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[581335] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[581336] "maybe param" "temp"
      unknown call_tmp[747217] "expr temp" "maybe param" "maybe type" "temp"
      (747220 'move' call_tmp[747217](435023 call isTrue tmp[435022]))
      (581341 'move' tmp[581336](581339 call _cond_test call_tmp[747217]))
      if tmp[581336]
      {
        (581346 'move' tmp[581335](581343 '_paramFoldLogical' tmp[581336] 1))
      }
      {
        unknown tmp[435043] "maybe param" "temp"
        (435054 'move' tmp[435043](303681 call isDomain tmpIter[303525]))
        unknown call_tmp[747222] "expr temp" "maybe param" "maybe type" "temp"
        (747225 'move' call_tmp[747222](435056 call _cond_invalid tmp[435043]))
        if call_tmp[747222]
        {
          (435059 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[581308] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[581309] "maybe param" "temp"
        unknown call_tmp[747227] "expr temp" "maybe param" "maybe type" "temp"
        (747230 'move' call_tmp[747227](435044 call isTrue tmp[435043]))
        (581314 'move' tmp[581309](581312 call _cond_test call_tmp[747227]))
        if tmp[581309]
        {
          (581319 'move' tmp[581308](581316 '_paramFoldLogical' tmp[581309] 1))
        }
        {
          unknown tmp[581321] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          unknown call_tmp[747232] "expr temp" "maybe param" "maybe type" "temp"
          (747235 'move' call_tmp[747232](303684 call isArray tmpIter[303525]))
          (581323 'move' tmp[581321](435048 call isTrue call_tmp[747232]))
          (581328 'move' tmp[581308](581325 '_paramFoldLogical' tmp[581309] tmp[581321]))
        }
        unknown tmp[581348] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        (581350 'move' tmp[581348](435027 call isTrue tmp[581308]))
        (581355 'move' tmp[581335](581352 '_paramFoldLogical' tmp[581336] tmp[581348]))
      }
      (303691 'move' isRngDomArr[303676] tmp[581335])
      if isRngDomArr[303676]
      {
        const _coforallCount[303543] "const" "end count" "temp"
        (303612 'move' _coforallCount[303543](303609 call _endCountAlloc 1))
        unknown numTasks[303544] "temp"
        (303596 'move' numTasks[303544](303592 call size _mt[243] tmpIter[303525]))
        (303587 call _upEndCount _coforallCount[303543] 1 numTasks[303544])
        (491360 'end of statement')
        (303584 call chpl_resetTaskSpawn numTasks[303544])
        (491361 'end of statement')
        unknown _indexOfInterest[303551] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303552] "expr temp" "temp"
        (303561 'move' _iterator[303552](303559 call _getIterator tmpIter[303525]))
        Defer
        {
          {
            (303577 call _freeIterator _iterator[303552])
          }
        }
        { scopeless type
          (303566 'move' _indexOfInterest[303551](303563 call iteratorIndex _iterator[303552]))
        }
        ForLoop[303553]
        {
          unknown tid[303570] "coforall index var" "index var" "insert auto destroy"
          (491363 'end of statement')
          (303572 'move' tid[303570] _indexOfInterest[303551])
          (491364 'end of statement' tid[303570])
          {
            {
              unknown call_tmp[747241] "maybe param" "maybe type" "temp"
              (747244 'move' call_tmp[747241](303534 call(406624 call (partial) _computeChunk _mt[243] this[304335]) tid[303570] chunkSize[303489] trailing[303500]))
              unknown chunk[303532] "dead at end of block" "insert auto destroy"
              (549963 'init var' chunk[303532] call_tmp[747241])
              (303539 'end of statement' tid[303570] chunkSize[303489] trailing[303500])
              unknown yret[539404] "YVV" "temp"
              (539407 'move' yret[539404](539406 'addr of' chunk[303532]))
              (539409 yield yret[539404])
              (491369 'end of statement' chunk[303532])
            }
            (303546 call _downEndCount _coforallCount[303543] nil[44])
            (303545 'coforall loop')
          }
          label _continueLabel[303556]
          _indexOfInterest[303551]
          _iterator[303552]
        }
        label _breakLabel[303557]
        Defer
        {
          {
            (303599 call _endCountFree _coforallCount[303543])
          }
        }
        (303604 call _waitEndCount _coforallCount[303543] 1 numTasks[303544])
      }
      {
        const _coforallCount[303616] "const" "end count" "temp"
        (303673 'move' _coforallCount[303616](303670 call _endCountAlloc 1))
        unknown _indexOfInterest[303624] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
        unknown _iterator[303625] "expr temp" "temp"
        (303634 'move' _iterator[303625](303632 call _getIterator tmpIter[303525]))
        Defer
        {
          {
            (303650 call _freeIterator _iterator[303625])
          }
        }
        { scopeless type
          (303639 'move' _indexOfInterest[303624](303636 call iteratorIndex _iterator[303625]))
        }
        ForLoop[303626]
        {
          unknown tid[303643] "coforall index var" "index var" "insert auto destroy"
          (491375 'end of statement')
          (303645 'move' tid[303643] _indexOfInterest[303624])
          (491376 'end of statement' tid[303643])
          (303657 call _upEndCount _coforallCount[303616] 1)
          (491378 'end of statement')
          {
            {
              unknown call_tmp[747248] "maybe param" "maybe type" "temp"
              (747251 'move' call_tmp[747248](303516 call(406616 call (partial) _computeChunk _mt[243] this[304335]) tid[303643] chunkSize[303489] trailing[303500]))
              unknown chunk[303517] "dead at end of block" "insert auto destroy"
              (549965 'init var' chunk[303517] call_tmp[747248])
              (303520 'end of statement' tid[303643] chunkSize[303489] trailing[303500])
              unknown yret[539411] "YVV" "temp"
              (539414 'move' yret[539411](539413 'addr of' chunk[303517]))
              (539416 yield yret[539411])
              (491382 'end of statement' chunk[303517])
            }
            (303619 call _downEndCount _coforallCount[303616] nil[44])
            (303618 'coforall loop')
          }
          label _continueLabel[303629]
          _indexOfInterest[303624]
          _iterator[303625]
        }
        label _breakLabel[303630]
        Defer
        {
          {
            (303661 call _endCountFree _coforallCount[303616])
          }
        }
        (303666 call _waitEndCount _coforallCount[303616] 1)
      }
    }
    (539402 return ret[539400])
  }
  where {
    (303448 call == tag[303439] leader[447])
  }
  function list[304105](?).these[303702](arg _mt[304341]:_MT[238], arg this[304339]:list[304105](?), param arg tag[303700]:_any[178](?), arg followThis[303704]:_any[178](?)) ref : _unknown[51] "iterator fn" "method" "primary method" "no doc" "no return value for void"
  {
    unknown ret[539420] "RVV" "temp"
    {
      unknown _indexOfInterest[303724] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303725] "expr temp" "temp"
      unknown call_tmp[747253] "expr temp" "maybe param" "maybe type" "temp"
      (747256 'move' call_tmp[747253](303717 call followThis[303704] 0))
      (303734 'move' _iterator[303725](303732 call _getIterator call_tmp[747253]))
      Defer
      {
        {
          (303751 call _freeIterator _iterator[303725])
        }
      }
      { scopeless type
        (303740 'move' _indexOfInterest[303724](303737 call iteratorIndex _iterator[303725]))
      }
      ForLoop[303726]
      {
        unknown i[303744] "index var" "insert auto destroy"
        (491388 'end of statement')
        (303746 'move' i[303744] _indexOfInterest[303724])
        (491389 'end of statement' i[303744])
        unknown yret[539424] "YVV" "temp"
        unknown call_tmp[747258] "expr temp" "maybe param" "maybe type" "temp"
        (747261 'move' call_tmp[747258](303721 call this[304339] i[303744]))
        (539427 'move' yret[539424](539426 'addr of' call_tmp[747258]))
        (539429 yield yret[539424])
        (491391 'end of statement' i[303744])
        label _continueLabel[303729]
        _indexOfInterest[303724]
        _iterator[303725]
      }
      label _breakLabel[303730]
    }
    (539422 return ret[539420])
  }
  where {
    (303711 call == tag[303700] follower[449])
  }
  function list[304105](?).readWriteThis[303768](arg _mt[304345]:_MT[238], arg this[304343]:list[304105](?), arg ch[303765]:channel[237642](?)) : _unknown[51] throws "method" "primary method" "no return value for void"
  {
    (303772 call(406637 call (partial) _enter _mt[243] this[304343]))
    (491393 'end of statement')
    (303777 call <~> ch[303765] "[")
    (491394 'end of statement')
    {
      unknown _indexOfInterest[303799] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[303800] "expr temp" "temp"
      unknown call_tmp[747267] "expr temp" "maybe param" "maybe type" "temp"
      (747270 'move' call_tmp[747267](406649 call _size _mt[243] this[304343]))
      unknown call_tmp[747272] "expr temp" "maybe param" "maybe type" "temp"
      (747275 'move' call_tmp[747272](303814 call - call_tmp[747267] 2))
      unknown call_tmp[747277] "expr temp" "maybe param" "maybe type" "temp"
      (747280 'move' call_tmp[747277](303817 call chpl_direct_range_iter 0 call_tmp[747272] 1))
      (303809 'move' _iterator[303800](303807 call _getIterator call_tmp[747277]))
      Defer
      {
        {
          (303833 call _freeIterator _iterator[303800])
        }
      }
      { scopeless type
        (303822 'move' _indexOfInterest[303799](303819 call iteratorIndex _iterator[303800]))
      }
      ForLoop[303801]
      {
        unknown i[303826] "index var" "insert auto destroy"
        (491396 'end of statement')
        (303828 'move' i[303826] _indexOfInterest[303799])
        (491397 'end of statement' i[303826])
        unknown call_tmp[747284] "expr temp" "maybe param" "maybe type" "temp"
        (747287 'move' call_tmp[747284](303792 call(406643 call (partial) _getRef _mt[243] this[304343]) i[303826]))
        unknown call_tmp[747289] "expr temp" "maybe param" "maybe type" "temp"
        (747292 'move' call_tmp[747289](303793 call <~> ch[303765] call_tmp[747284]))
        (303796 call <~> call_tmp[747289] ", ")
        (491399 'end of statement' i[303826])
        label _continueLabel[303804]
        _indexOfInterest[303799]
        _iterator[303800]
      }
      label _breakLabel[303805]
    }
    unknown call_tmp[747296] "expr temp" "maybe param" "maybe type" "temp"
    (747299 'move' call_tmp[747296](406654 call _size _mt[243] this[304343]))
    unknown call_tmp[747301] "expr temp" "maybe param" "maybe type" "temp"
    (747304 'move' call_tmp[747301](303842 call > call_tmp[747296] 0))
    unknown call_tmp[747306] "expr temp" "maybe param" "maybe type" "temp"
    (747309 'move' call_tmp[747306](303855 call _cond_test call_tmp[747301]))
    if call_tmp[747306]
    {
      unknown call_tmp[747315] "expr temp" "maybe param" "maybe type" "temp"
      (747318 'move' call_tmp[747315](406664 call _size _mt[243] this[304343]))
      unknown call_tmp[747320] "expr temp" "maybe param" "maybe type" "temp"
      (747323 'move' call_tmp[747320](303848 call - call_tmp[747315] 1))
      unknown call_tmp[747325] "expr temp" "maybe param" "maybe type" "temp"
      (747328 'move' call_tmp[747325](303851 call(406659 call (partial) _getRef _mt[243] this[304343]) call_tmp[747320]))
      (303852 call <~> ch[303765] call_tmp[747325])
    }
    (303862 call <~> ch[303765] "]")
    (491402 'end of statement')
    (303867 call(406669 call (partial) _leave _mt[243] this[304343]))
    (539431 return _void[55])
  }
  function list[304105](?).isEmpty[303873](arg _mt[304349]:_MT[238], const arg this[304347]:list[304105](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539435] "RVV" "temp"
    (303878 call(406673 call (partial) _enter _mt[243] this[304347]))
    (491404 'end of statement')
    unknown call_tmp[747336] "expr temp" "maybe param" "maybe type" "temp"
    (747339 'move' call_tmp[747336](406678 call _size _mt[243] this[304347]))
    unknown call_tmp[747341] "maybe param" "maybe type" "temp"
    (747344 'move' call_tmp[747341](303883 call == call_tmp[747336] 0))
    unknown result[303885] "dead at end of block" "insert auto destroy"
    (549967 'init var' result[303885] call_tmp[747341])
    (303888 'end of statement')
    (303891 call(406682 call (partial) _leave _mt[243] this[304347]))
    (491405 'end of statement')
    (539441 'move' ret[539435](539440 'coerce' result[303885] bool[10]))
    gotoReturn _end_isEmpty[539433] _end_isEmpty[539433]
    (491406 'end of statement' result[303885])
    label _end_isEmpty[539433]
    (539437 return ret[539435])
  }
  { scopeless type
    bool[10]
  }
  function list[304105](?).size[303901](arg _mt[304353]:_MT[238], const arg this[304351]:list[304105](?)) : _unknown[51] "inline" "method" "primary method" "no parens"
  {
    unknown ret[539447] "RVV" "temp"
    unknown result[303904] "dead at end of block" "insert auto destroy"
    (549969 'init var' result[303904] 0)
    (303907 'end of statement')
    const tmp[303927] "const" "temp"
    unknown call_tmp[747348] "expr temp" "maybe param" "maybe type" "temp"
    (747351 'move' call_tmp[747348](303924 '_wide_get_locale' this[304351]))
    (303929 'move' tmp[303927](303925 'deref' call_tmp[747348]))
    {
      {
        (303912 call(406688 call (partial) _enter _mt[243] this[304351]))
        (491408 'end of statement')
        unknown call_tmp[747357] "expr temp" "maybe param" "maybe type" "temp"
        (747360 'move' call_tmp[747357](406694 call _size _mt[243] this[304351]))
        (303917 call = result[303904] call_tmp[747357])
        (491409 'end of statement' result[303904])
        (303922 call(406698 call (partial) _leave _mt[243] this[304351]))
      }
      (303932 'on block' 0 tmp[303927])
    }
    (539452 'move' ret[539447](539451 'deref' result[303904]))
    gotoReturn _end_size[539445] _end_size[539445]
    (491412 'end of statement' result[303904])
    label _end_size[539445]
    (539449 return ret[539447])
  }
  function list[304105](?).indices[303942](arg _mt[304357]:_MT[238], arg this[304355]:list[304105](?)) : _unknown[51] "method" "primary method" "no parens"
  {
    unknown ret[539458] "RVV" "temp"
    unknown call_tmp[747366] "expr temp" "maybe param" "maybe type" "temp"
    (747369 'move' call_tmp[747366](303946 call size _mt[243] this[304355]))
    unknown call_tmp[747371] "expr temp" "maybe param" "maybe type" "temp"
    (747374 'move' call_tmp[747371](303950 call - call_tmp[747366] 1))
    unknown call_tmp[747376] "expr temp" "maybe param" "maybe type" "temp"
    (747379 'move' call_tmp[747376](303952 call chpl_build_bounded_range 0 call_tmp[747371]))
    (539463 'move' ret[539458](539462 'deref' call_tmp[747376]))
    (539460 return ret[539458])
  }
  function list[304105](?).toArray[303961](arg _mt[304361]:_MT[238], const arg this[304359]:list[304105](?)) : _unknown[51] "method" "primary method"
  {
    unknown ret[539467] "RVV" "temp"
    unknown tmp[435064] "maybe param" "temp"
    unknown call_tmp[747383] "expr temp" "maybe param" "maybe type" "temp"
    (747386 'move' call_tmp[747383](406709 call eltType _mt[243] this[304359]))
    (435075 'move' tmp[435064](303970 call isNonNilableClass call_tmp[747383]))
    unknown call_tmp[747388] "expr temp" "maybe param" "maybe type" "temp"
    (747391 'move' call_tmp[747388](435077 call _cond_invalid tmp[435064]))
    if call_tmp[747388]
    {
      (435080 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[581362] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[581363] "maybe param" "temp"
    unknown call_tmp[747393] "expr temp" "maybe param" "maybe type" "temp"
    (747396 'move' call_tmp[747393](435065 call isTrue tmp[435064]))
    (581368 'move' tmp[581363](581366 call _cond_test call_tmp[747393]))
    if tmp[581363]
    {
      unknown tmp[581370] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[747400] "expr temp" "maybe param" "maybe type" "temp"
      (747403 'move' call_tmp[747400](406714 call eltType _mt[243] this[304359]))
      unknown call_tmp[747405] "expr temp" "maybe param" "maybe type" "temp"
      (747408 'move' call_tmp[747405](303974 call isOwnedClass call_tmp[747400]))
      (581372 'move' tmp[581370](435068 call isTrue call_tmp[747405]))
      (581377 'move' tmp[581362](581374 '_paramFoldLogical' tmp[581363] tmp[581370]))
    }
    {
      (581382 'move' tmp[581362](581379 '_paramFoldLogical' tmp[581363] 0))
    }
    unknown call_tmp[747410] "expr temp" "maybe param" "maybe type" "temp"
    (747413 'move' call_tmp[747410](304019 call _cond_test tmp[581362]))
    if call_tmp[747410]
    {
      unknown call_tmp[747417] "expr temp" "maybe param" "maybe type" "temp"
      (747420 'move' call_tmp[747417](406719 call eltType _mt[243] this[304359]))
      unknown call_tmp[747422] "expr temp" "maybe param" "maybe type" "temp"
      (747425 'move' call_tmp[747422](304015 call _cast string[26] call_tmp[747417]))
      (304017 call compilerError "toArray() method is not available on a 'list'" " with elements of a non-nilable owned type, here: " call_tmp[747422])
    }
    unknown result[304037] "dead at end of block" "insert auto destroy" "unsafe"
    unknown call_tmp[747427] "expr temp" "maybe param" "maybe type" "temp"
    (747430 'move' call_tmp[747427](304026 call chpl_build_low_bounded_range 0))
    unknown call_tmp[747434] "expr temp" "maybe param" "maybe type" "temp"
    (747437 'move' call_tmp[747434](406724 call _size _mt[243] this[304359]))
    unknown call_tmp[747439] "expr temp" "maybe param" "maybe type" "temp"
    (747442 'move' call_tmp[747439](304029 call # call_tmp[747427] call_tmp[747434]))
    unknown call_tmp[747444] "expr temp" "maybe param" "maybe type" "temp"
    (747447 'move' call_tmp[747444](304033 call chpl__ensureDomainExpr call_tmp[747439]))
    unknown call_tmp[747451] "expr temp" "maybe param" "maybe type" "temp"
    (747454 'move' call_tmp[747451](406729 call eltType _mt[243] this[304359]))
    unknown call_tmp[747456] "expr temp" "maybe param" "maybe type" "temp"
    (747459 'move' call_tmp[747456](304035 call chpl__buildArrayRuntimeType call_tmp[747444] call_tmp[747451]))
    (549971 'default init var' result[304037] call_tmp[747456])
    (304040 'end of statement')
    const tmp[304090] "const" "temp"
    unknown call_tmp[747461] "expr temp" "maybe param" "maybe type" "temp"
    (747464 'move' call_tmp[747461](304087 '_wide_get_locale' this[304359]))
    (304092 'move' tmp[304090](304088 'deref' call_tmp[747461]))
    {
      {
        (304044 call(406734 call (partial) _enter _mt[243] this[304359]))
        (491417 'end of statement')
        unknown tmp[304074] "dead at end of block" "insert auto destroy"
        function chpl__loopexpr_iter10[583128](arg iterator[583130]:_any[178](?), arg this[583266]:list[304105](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583277] "RVV" "temp"
          {
            unknown _indexOfInterest[583135] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583136] "expr temp" "temp"
            (583145 'move' _iterator[583136](583143 call _getIterator iterator[583130]))
            Defer
            {
              {
                (583159 call _freeIterator _iterator[583136])
              }
            }
            { scopeless type
              (583150 'move' _indexOfInterest[583135](583147 call iteratorIndex _iterator[583136]))
            }
            ForLoop[583137] for-expr
            {
              unknown i[304072] "index var" "insert auto destroy" "no doc"
              (583270 'end of statement')
              (583154 'move' i[304072] _indexOfInterest[583135])
              (583271 'end of statement' i[304072])
              {
                {
                  unknown yret[583281] "YVV" "temp"
                  unknown call_tmp[583290] "expr temp" "maybe param" "maybe type" "temp"
                  (583293 'move' call_tmp[583290](304069 call(406754 call (partial) _getRef _mt[243] this[583266]) i[304072]))
                  (583284 'move' yret[583281](583283 'deref' call_tmp[583290]))
                  (583286 yield yret[583281])
                  (583273 'end of statement' i[304072])
                }
              }
              label _continueLabel[583140]
              _indexOfInterest[583135]
              _iterator[583136]
            }
            label _breakLabel[583141]
          }
          (583279 return ret[583277])
        }
        function chpl__loopexpr_iter10[583166](param arg tag[583170]:iterKind[453], arg iterator[583173]:_any[178](?), arg this[583194]:list[304105](?)) : _unknown[51] "fn returns iterator"
        {
          unknown ret[583320] "RVV" "temp"
          const _leaderIterator[583185] "const" "expr temp" "temp"
          (583190 'move' _leaderIterator[583185](583187 call _toLeader iterator[583173]))
          (583325 'move' ret[583320](583324 'deref' _leaderIterator[583185]))
          (583322 return ret[583320])
        }
        where {
          unknown tmp[583296] "maybe param" "temp"
          (583307 'move' tmp[583296](583175 call == tag[583170] leader[447]))
          unknown call_tmp[583354] "expr temp" "maybe param" "maybe type" "temp"
          (583357 'move' call_tmp[583354](583309 call _cond_invalid tmp[583296]))
          if call_tmp[583354]
          {
            (583312 call compilerError "cannot promote short-circuiting && operator")
          }
          unknown tmp[583327] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[583328] "maybe param" "temp"
          unknown call_tmp[583359] "expr temp" "maybe param" "maybe type" "temp"
          (583362 'move' call_tmp[583359](583297 call isTrue tmp[583296]))
          (583333 'move' tmp[583328](583331 call _cond_test call_tmp[583359]))
          if tmp[583328]
          {
            unknown tmp[583335] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[583364] "expr temp" "maybe param" "maybe type" "temp"
            (583367 'move' call_tmp[583364](583179 'call resolves' "_toLeader" iterator[583173]))
            (583337 'move' tmp[583335](583300 call isTrue call_tmp[583364]))
            (583342 'move' tmp[583327](583339 '_paramFoldLogical' tmp[583328] tmp[583335]))
          }
          {
            (583347 'move' tmp[583327](583344 '_paramFoldLogical' tmp[583328] 0))
          }
          (748339 call chpl_statementLevelSymbol tmp[583327])
        }
        function chpl__loopexpr_iter10[583196](param arg tag[583200]:iterKind[453], arg followThis[583203]:_any[178](?), arg iterator[583205]:_any[178](?), arg this[583264]:list[304105](?)) : _unknown[51] "iterator fn"
        {
          unknown ret[583378] "RVV" "temp"
          const _followerIterator[583212] "const" "expr temp" "temp"
          (583218 'move' _followerIterator[583212](583214 call _toFollower iterator[583205] followThis[583203]))
          {
            unknown _indexOfInterest[583233] "an _indexOfInterest or chpl__followIdx variable" "temp"
            unknown _iterator[583234] "expr temp" "temp"
            (583243 'move' _iterator[583234](583241 call _getIterator _followerIterator[583212]))
            Defer
            {
              {
                (583257 call _freeIterator _iterator[583234])
              }
            }
            { scopeless type
              (583248 'move' _indexOfInterest[583233](583245 call iteratorIndex _iterator[583234]))
            }
            ForLoop[583235] lowered-forall for-expr
            {
              unknown i[583220] "index var" "insert auto destroy" "no doc"
              (583371 'end of statement')
              (583252 'move' i[583220] _indexOfInterest[583233])
              (583372 'end of statement' i[583220])
              {
                {
                  unknown yret[583382] "YVV" "temp"
                  unknown call_tmp[583391] "expr temp" "maybe param" "maybe type" "temp"
                  (583394 'move' call_tmp[583391](583229 call(583226 call (partial) _getRef _mt[243] this[583264]) i[583220]))
                  (583385 'move' yret[583382](583384 'deref' call_tmp[583391]))
                  (583387 yield yret[583382])
                  (583374 'end of statement' i[583220])
                }
              }
              label _continueLabel[583238]
              _indexOfInterest[583233]
              _iterator[583234]
            }
            label _breakLabel[583239]
          }
          (583380 return ret[583378])
        }
        where {
          (583208 call == tag[583200] follower[449])
        }
        function chpl__forallexpr10[583108](arg iterExpr[583111]:_any[178](?), arg this[583115]:list[304105](?)) : _unknown[51] "compiler generated" "compiler nested function" "maybe array type" "fn returns iterator"
        {
          unknown ret[583399] "RVV" "temp"
          unknown _iterator[583118] "expr temp" "maybe ref" "temp"
          (583120 'move' _iterator[583118] iterExpr[583111])
          unknown call_tmp[583406] "expr temp" "maybe param" "maybe type" "temp"
          (583409 'move' call_tmp[583406](583123 call chpl__loopexpr_iter10 _iterator[583118] this[583115]))
          (583404 'move' ret[583399](583403 'deref' call_tmp[583406]))
          (583401 return ret[583399])
        }
        unknown call_tmp[583411] "expr temp" "maybe param" "maybe type" "temp"
        (583414 'move' call_tmp[583411](304061 call chpl_build_low_bounded_range 0))
        unknown call_tmp[583418] "expr temp" "maybe param" "maybe type" "temp"
        (583421 'move' call_tmp[583418](406750 call _size _mt[243] this[304359]))
        unknown call_tmp[583423] "expr temp" "maybe param" "maybe type" "temp"
        (583426 'move' call_tmp[583423](304064 call # call_tmp[583411] call_tmp[583418]))
        unknown call_tmp[583428] "maybe param" "maybe type" "temp"
        (583431 'move' call_tmp[583428](583113 call chpl__forallexpr10 call_tmp[583423] this[304359]))
        (583435 'iterator record set shape' call_tmp[583428] call_tmp[583423] 0)
        unknown call_tmp[747468] "expr temp" "maybe param" "maybe type" "temp"
        (747471 'move' call_tmp[747468](304048 call chpl_build_low_bounded_range 0))
        unknown call_tmp[747475] "expr temp" "maybe param" "maybe type" "temp"
        (747478 'move' call_tmp[747475](406739 call _size _mt[243] this[304359]))
        unknown call_tmp[747480] "expr temp" "maybe param" "maybe type" "temp"
        (747483 'move' call_tmp[747480](304051 call # call_tmp[747468] call_tmp[747475]))
        unknown call_tmp[747485] "expr temp" "maybe param" "maybe type" "temp"
        (747488 'move' call_tmp[747485](304055 call chpl__ensureDomainExpr call_tmp[747480]))
        unknown call_tmp[747492] "expr temp" "maybe param" "maybe type" "temp"
        (747495 'move' call_tmp[747492](406744 call eltType _mt[243] this[304359]))
        unknown call_tmp[747497] "maybe param" "maybe type" "temp"
        (747500 'move' call_tmp[747497](304057 call chpl__buildArrayRuntimeType call_tmp[747485] call_tmp[747492]))
        (549973 'init var' tmp[304074] call_tmp[583428] call_tmp[747497])
        (304077 'end of statement')
        (304080 call = result[304037] tmp[304074])
        (491418 'end of statement' result[304037] tmp[304074])
        (304085 call(406761 call (partial) _leave _mt[243] this[304359]))
      }
      (304095 'on block' 0 tmp[304090])
    }
    unknown call_tmp[747506] "expr temp" "maybe param" "maybe type" "temp"
    (747509 'move' call_tmp[747506](539473 call eltType _mt[243] this[304359]))
    (539476 call chpl__checkEltTypeMatch result[304037] call_tmp[747506])
    (539478 'move' ret[539467] result[304037])
    gotoReturn _end_toArray[539465] _end_toArray[539465]
    (491422 'end of statement' result[304037])
    label _end_toArray[539465]
    (539469 return ret[539467])
  }
  type list[304105](?) unknown eltType[298353] "type variable" unknown parSafe[298357] "param" 0 val _size[298362]:int(64)[13] "no doc" 0 unknown _lock$[298375] "no doc"(298372 IfExpr  parSafe[298357] then
  { scopeless
    (748040 'new' _LockWrapper[405108](?))
  } else
  { scopeless
    none[57]
  } ) unknown _arrays[298387] "no doc" nil[44](298385 call _ddata[11695](?)(298383 call _ddata[11695](?) eltType[298353])) val _arrayCapacity[298392]:int(64)[13] "no doc" 0 val _totalCapacity[298397]:int(64)[13] "no doc" 0 unknown _dummyFieldToForceBorrowChecking[298405] "no doc"(298404 call _dummyFieldType eltType[298353])
  function =[304375](ref arg lhs[304372]:list[304105](?), arg rhs[304382]:list[304105](?)) : _unknown[51] "assignop" "compiler added where" "no return value for void"
  {
    (304390 call(304386 call (partial) clear _mt[243] lhs[304372]))
    (491424 'end of statement')
    (304401 call(304396 call (partial) extend _mt[243] lhs[304372]) rhs[304382])
    (539482 return _void[55])
  }
  where {
    unknown call_tmp[747515] "expr temp" "maybe param" "maybe type" "temp"
    (747518 'move' call_tmp[747515](467841 'query' lhs[304372] 1))
    unknown call_tmp[747520] "expr temp" "maybe param" "maybe type" "temp"
    (747523 'move' call_tmp[747520](467838 'query' rhs[304382] 1))
    unknown call_tmp[747525] "expr temp" "maybe param" "maybe type" "temp"
    (747528 'move' call_tmp[747525](467844 call == call_tmp[747515] call_tmp[747520]))
    (467848 call & 1 call_tmp[747525])
  }
  function ==[304416](arg a[304413]:list[304105](?), arg b[304423]:list[304105](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539486] "RVV" "temp"
    unknown call_tmp[747532] "expr temp" "maybe param" "maybe type" "temp"
    (747535 'move' call_tmp[747532](304428 call size _mt[243] a[304413]))
    unknown call_tmp[747539] "expr temp" "maybe param" "maybe type" "temp"
    (747542 'move' call_tmp[747539](304432 call size _mt[243] b[304423]))
    unknown call_tmp[747544] "expr temp" "maybe param" "maybe type" "temp"
    (747547 'move' call_tmp[747544](304435 call != call_tmp[747532] call_tmp[747539]))
    unknown call_tmp[747549] "expr temp" "maybe param" "maybe type" "temp"
    (747552 'move' call_tmp[747549](304440 call _cond_test call_tmp[747544]))
    if call_tmp[747549]
    {
      (539492 'move' ret[539486](539491 'coerce' 0 bool[10]))
      gotoReturn _end_==[539484] _end_==[539484]
    }
    {
      unknown _indexOfInterest[304474] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[304475] "expr temp" "temp"
      unknown call_tmp[747556] "expr temp" "maybe param" "maybe type" "temp"
      (747559 'move' call_tmp[747556](304490 call size _mt[243] a[304413]))
      unknown call_tmp[747561] "expr temp" "maybe param" "maybe type" "temp"
      (747564 'move' call_tmp[747561](304494 call chpl_direct_counted_range_iter 0 call_tmp[747556]))
      (304484 'move' _iterator[304475](304482 call _getIterator call_tmp[747561]))
      Defer
      {
        {
          (304510 call _freeIterator _iterator[304475])
        }
      }
      { scopeless type
        (304499 'move' _indexOfInterest[304474](304496 call iteratorIndex _iterator[304475]))
      }
      ForLoop[304476]
      {
        unknown i[304503] "index var" "insert auto destroy"
        (491428 'end of statement')
        (304505 'move' i[304503] _indexOfInterest[304474])
        (491429 'end of statement' i[304503])
        unknown call_tmp[747566] "expr temp" "maybe param" "maybe type" "temp"
        (747569 'move' call_tmp[747566](304459 call a[304413] i[304503]))
        unknown call_tmp[747571] "expr temp" "maybe param" "maybe type" "temp"
        (747574 'move' call_tmp[747571](304463 call b[304423] i[304503]))
        unknown call_tmp[747576] "expr temp" "maybe param" "maybe type" "temp"
        (747579 'move' call_tmp[747576](304464 call != call_tmp[747566] call_tmp[747571]))
        unknown call_tmp[747581] "expr temp" "maybe param" "maybe type" "temp"
        (747584 'move' call_tmp[747581](304469 call _cond_test call_tmp[747576]))
        if call_tmp[747581]
        {
          (539498 'move' ret[539486](539497 'coerce' 0 bool[10]))
          gotoReturn _end_==[539484] _end_==[539484]
        }
        label _continueLabel[304479]
        _indexOfInterest[304474]
        _iterator[304475]
      }
      label _breakLabel[304480]
    }
    (539504 'move' ret[539486](539503 'coerce' 1 bool[10]))
    label _end_==[539484]
    (539488 return ret[539486])
  }
  where {
    unknown call_tmp[747586] "expr temp" "maybe param" "maybe type" "temp"
    (747589 'move' call_tmp[747586](467873 'query' a[304413] 1))
    unknown call_tmp[747591] "expr temp" "maybe param" "maybe type" "temp"
    (747594 'move' call_tmp[747591](467870 'query' b[304423] 1))
    unknown call_tmp[747596] "expr temp" "maybe param" "maybe type" "temp"
    (747599 'move' call_tmp[747596](467876 call == call_tmp[747586] call_tmp[747591]))
    (467880 call & 1 call_tmp[747596])
  }
  { scopeless type
    bool[10]
  }
  function !=[304534](arg a[304531]:list[304105](?), arg b[304541]:list[304105](?)) : _unknown[51] "compiler added where"
  {
    unknown ret[539508] "RVV" "temp"
    unknown call_tmp[747601] "expr temp" "maybe param" "maybe type" "temp"
    (747604 'move' call_tmp[747601](304547 call == a[304531] b[304541]))
    unknown call_tmp[747606] "expr temp" "maybe param" "maybe type" "temp"
    (747609 'move' call_tmp[747606](304549 call ! call_tmp[747601]))
    (539514 'move' ret[539508](539513 'coerce' call_tmp[747606] bool[10]))
    (539510 return ret[539508])
  }
  where {
    unknown call_tmp[747611] "expr temp" "maybe param" "maybe type" "temp"
    (747614 'move' call_tmp[747611](467905 'query' a[304531] 1))
    unknown call_tmp[747616] "expr temp" "maybe param" "maybe type" "temp"
    (747619 'move' call_tmp[747616](467902 'query' b[304541] 1))
    unknown call_tmp[747621] "expr temp" "maybe param" "maybe type" "temp"
    (747624 'move' call_tmp[747621](467908 call == call_tmp[747611] call_tmp[747616]))
    (467912 call & 1 call_tmp[747621])
  }
  { scopeless type
    bool[10]
  }
  (355423 'used modules list'(352972 'use' ChapelStandard[20264])(298130 'import' ChapelLocks[187256])(298134 'use' HaltWrappers[209910])(298137 'use' Sort[267880])(298350 'use' IO[230803]))
  (364805 'referenced modules list' ChapelLocks[187256] Sort[267880])
}