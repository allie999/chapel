AST dump for IO after pass copyPropagation.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2064257] val _runtime_hdr[2064258]:chpl_comm_on_bundle_t[209359] val _0_tmp[2064260]:chpl_localeID_t[209352] ref _1_this[2064262]:channel(false,dynamic,false)[1080701]
  type _class_localson_fn[2063996] val _runtime_hdr[2063997]:chpl_comm_on_bundle_t[209359] val _0_tmp[2063999]:chpl_localeID_t[209352] ref _1_this[2064001]:channel(true,dynamic,false)[1060966]
  type _class_localson_fn[2063820] val _runtime_hdr[2063821]:chpl_comm_on_bundle_t[209359] val _0_tmp[2063823]:chpl_localeID_t[209352] ref _1_this[2063825]:channel(true,dynamic,true)[1021844]
  type _class_localson_fn[2062029] val _runtime_hdr[2062030]:chpl_comm_on_bundle_t[209359] val _0_tmp[2062032]:chpl_localeID_t[209352] ref _1_this[2062034]:channel(false,dynamic,true)[985646]
  type _class_localson_fn[2059999] val _runtime_hdr[2060000]:chpl_comm_on_bundle_t[209359] val _0_tmp[2060002]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2060004]:channel(true,dynamic,true)[1021844] ref _2_args[2060006]:(real(64),ioNewline)[1398991] val _3_rvfDerefTmp[2060008]:locale[28] ref _4_error[2060010]:Error[167984] "error variable"
  type _class_localson_fn[2059911] val _runtime_hdr[2059912]:chpl_comm_on_bundle_t[209359] val _0_tmp[2059914]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2059916]:channel(true,dynamic,true)[1021844]
  type _class_localson_fn[2059766] val _runtime_hdr[2059767]:chpl_comm_on_bundle_t[209359] val _0_tmp[2059769]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2059771]:channel(true,dynamic,true)[1021844] ref _2_path[2059773]:string[26] ref _3_offset[2059775]:int(64)[13] ref _4_error[2059777]:Error[167984] "error variable"
  type _class_localson_fn[2059658] val _runtime_hdr[2059659]:chpl_comm_on_bundle_t[209359] val _0_tmp[2059661]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2059663]:channel(true,dynamic,true)[1021844] ref _2_err[2059665]:syserr[223603]
  type _class_localson_fn[2059518] val _runtime_hdr[2059519]:chpl_comm_on_bundle_t[209359] val _0_tmp[2059521]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2059523]:channel(true,dynamic,true)[1021844] ref _2_args[2059525]:(string,ioNewline)[1389119] val _3_rvfDerefTmp[2059527]:locale[28] ref _4_error[2059529]:Error[167984] "error variable"
  type _class_localson_fn[2056696] val _runtime_hdr[2056697]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056699]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2056701]:channel(true,dynamic,false)[1060966] ref _2_args[2056703]:(string,codepointIndex,string,int(64))[1176539] val _3_rvfDerefTmp[2056705]:locale[28] ref _4_error[2056707]:Error[167984] "error variable"
  type _class_localson_fn[2056554] val _runtime_hdr[2056555]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056557]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2056559]:channel(true,dynamic,false)[1060966] ref _2_args[2056561]:(string,codepointIndex,string)[1158574] val _3_rvfDerefTmp[2056563]:locale[28] ref _4_error[2056565]:Error[167984] "error variable"
  type _class_localson_fn[2056264] val _runtime_hdr[2056265]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056267]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2056269]:channel(false,dynamic,false)[1080701] ref _2_path[2056271]:string[26] ref _3_offset[2056273]:int(64)[13] ref _4_error[2056275]:Error[167984] "error variable"
  type _class_localson_fn[2056156] val _runtime_hdr[2056157]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056159]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2056161]:channel(false,dynamic,false)[1080701] ref _2_err[2056163]:syserr[223603]
  type _class_localson_fn[2056064] val _runtime_hdr[2056065]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056067]:chpl_localeID_t[209352] ref _1_lhs[2056069]:channel(false,dynamic,false)[1080701]
  type _class_localson_fn[2055979] val _runtime_hdr[2055980]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055982]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2055984]:channel(false,dynamic,false)[1080701]
  type _class_localson_fn[2055798] val _runtime_hdr[2055799]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055801]:chpl_localeID_t[209352] val _1_start[2055803]:int(64)[13] val _2_rvfDerefTmp[2055805]:file[235599] ref _3__formal_tmp_error[2055807]:syserr[223603] val _4_end[2055809]:int(64)[13] ref _5_this[2055811]:channel(false,dynamic,false)[1080701] val _6_hints[2055813]:int(32)[95] val _7_rvfDerefTmp[2055815]:iostyle[231863]
  type _class_localson_fn[2055591] val _runtime_hdr[2055592]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055594]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2055596]:iostyle[231863] val _2_rvfDerefTmp[2055598]:file[235599] ref _3_err[2055600]:syserr[223603] val _4_hints[2055602]:int(32)[95] val _5_start[2055604]:int(64)[13] ref _6_ret[2055606]:channel(false,dynamic,false)[1080701] val _7_end[2055608]:int(64)[13] ref _8_error[2055610]:Error[167984] "error variable"
  type _class_localson_fn[2055479] val _runtime_hdr[2055480]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055482]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2055484]:channel(true,dynamic,false)[1060966] ref _2_ret[2055486]:int(64)[13]
  type _class_localson_fn[2055339] val _runtime_hdr[2055340]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055342]:chpl_localeID_t[209352] ref _1_this[2055344]:channel(true,dynamic,false)[1060966] val _2_x[2055346]:int(64)[13] val _3_rvfDerefTmp[2055348]:locale[28] ref _4_error[2055350]:Error[167984] "error variable"
  type _class_localson_fn[2055197] val _runtime_hdr[2055198]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055200]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2055202]:channel(true,dynamic,false)[1060966] ref _2_args[2055204]:1*byteIndex[1057100] val _3_rvfDerefTmp[2055206]:locale[28] ref _4_error[2055208]:Error[167984] "error variable"
  type _class_localson_fn[2055043] val _runtime_hdr[2055044]:chpl_comm_on_bundle_t[209359] val _0_tmp[2055046]:chpl_localeID_t[209352] ref _1_this[2055048]:channel(true,dynamic,false)[1060966] ref _2_path[2055050]:string[26] ref _3_offset[2055052]:int(64)[13] ref _4_error[2055054]:Error[167984] "error variable"
  type _class_localson_fn[2054935] val _runtime_hdr[2054936]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054938]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2054940]:channel(true,dynamic,false)[1060966] ref _2_err[2054942]:syserr[223603]
  type _class_localson_fn[2054843] val _runtime_hdr[2054844]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054846]:chpl_localeID_t[209352] ref _1_lhs[2054848]:channel(true,dynamic,false)[1060966]
  type _class_localson_fn[2054758] val _runtime_hdr[2054759]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054761]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2054763]:channel(true,dynamic,false)[1060966]
  type _class_localson_fn[2054577] val _runtime_hdr[2054578]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054580]:chpl_localeID_t[209352] ref _1_this[2054582]:channel(true,dynamic,false)[1060966] val _2_start[2054584]:int(64)[13] val _3_rvfDerefTmp[2054586]:file[235599] ref _4__formal_tmp_error[2054588]:syserr[223603] val _5_end[2054590]:int(64)[13] val _6_hints[2054592]:int(32)[95] val _7_rvfDerefTmp[2054594]:iostyle[231863]
  type _class_localson_fn[2054370] val _runtime_hdr[2054371]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054373]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2054375]:file[235599] ref _2_err[2054377]:syserr[223603] val _3_hints[2054379]:int(32)[95] val _4_start[2054381]:int(64)[13] ref _5_ret[2054383]:channel(true,dynamic,false)[1060966] val _6_end[2054385]:int(64)[13] val _7_rvfDerefTmp[2054387]:iostyle[231863] ref _8_error[2054389]:Error[167984] "error variable"
  type _class_localson_fn[2054130] val _runtime_hdr[2054131]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054133]:chpl_localeID_t[209352] ref _1_lhs[2054135]:channel(true,dynamic,true)[1021844]
  type _class_localson_fn[2054045] val _runtime_hdr[2054046]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054048]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2054050]:channel(true,dynamic,true)[1021844]
  type _class_localson_fn[2053864] val _runtime_hdr[2053865]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053867]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2053869]:iostyle[231863] val _2_end[2053871]:int(64)[13] val _3_start[2053873]:int(64)[13] val _4_rvfDerefTmp[2053875]:file[235599] ref _5__formal_tmp_error[2053877]:syserr[223603] ref _6_this[2053879]:channel(true,dynamic,true)[1021844] val _7_hints[2053881]:int(32)[95]
  type _class_localson_fn[2053657] val _runtime_hdr[2053658]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053660]:chpl_localeID_t[209352] val _1_hints[2053662]:int(32)[95] ref _2_err[2053664]:syserr[223603] val _3_start[2053666]:int(64)[13] val _4_end[2053668]:int(64)[13] val _5_rvfDerefTmp[2053670]:iostyle[231863] val _6_rvfDerefTmp[2053672]:file[235599] ref _7_ret[2053674]:channel(true,dynamic,true)[1021844] ref _8_error[2053676]:Error[167984] "error variable"
  type _class_localson_fn[2053447] val _runtime_hdr[2053448]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053450]:chpl_localeID_t[209352] ref _1_lhs[2053452]:channel(false,dynamic,true)[985646]
  type _class_localson_fn[2053362] val _runtime_hdr[2053363]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053365]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2053367]:channel(false,dynamic,true)[985646]
  type _class_localson_fn[2053181] val _runtime_hdr[2053182]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053184]:chpl_localeID_t[209352] val _1_start[2053186]:int(64)[13] val _2_rvfDerefTmp[2053188]:file[235599] ref _3__formal_tmp_error[2053190]:syserr[223603] val _4_end[2053192]:int(64)[13] val _5_hints[2053194]:int(32)[95] val _6_rvfDerefTmp[2053196]:iostyle[231863] ref _7_this[2053198]:channel(false,dynamic,true)[985646]
  type _class_localson_fn[2052974] val _runtime_hdr[2052975]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052977]:chpl_localeID_t[209352] ref _1_ret[2052979]:channel(false,dynamic,true)[985646] val _2_hints[2052981]:int(32)[95] ref _3_err[2052983]:syserr[223603] val _4_start[2052985]:int(64)[13] val _5_rvfDerefTmp[2052987]:iostyle[231863] val _6_end[2052989]:int(64)[13] val _7_rvfDerefTmp[2052991]:file[235599] ref _8_error[2052993]:Error[167984] "error variable"
  type _class_localson_fn[2052625] val _runtime_hdr[2052626]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052628]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2052630]:file[235599] ref _2_err[2052632]:syserr[223603] ref _3_ret[2052634]:string[26] ref _4_error[2052636]:Error[167984] "error variable"
  type _class_localson_fn[2052517] val _runtime_hdr[2052518]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052520]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2052522]:file[235599] ref _2_err[2052524]:syserr[223603]
  type _class_localson_fn[2052391] val _runtime_hdr[2052392]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052394]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2052396]:file[235599] ref _2_ret[2052398]:iostyle[231863] ref _3_error[2052400]:Error[167984] "error variable"
  type _class_localson_fn[2052298] val _runtime_hdr[2052299]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052301]:chpl_localeID_t[209352] ref _1_this[2052303]:file[235599]
  function chpl__init_IO[416151]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546849 'move' IOHINT_NONE[231430] 0)
    (2050473 '_private_broadcast' IOHINT_NONE[231430])
    (546851 'move' IOHINT_RANDOM[231435] QIO_HINT_RANDOM[231382])
    (2050475 '_private_broadcast' IOHINT_RANDOM[231435])
    (546853 'move' IOHINT_SEQUENTIAL[231440] QIO_HINT_SEQUENTIAL[231387])
    (2050477 '_private_broadcast' IOHINT_SEQUENTIAL[231440])
    (546855 'move' IOHINT_CACHED[231445] QIO_HINT_CACHED[231402])
    (2050479 '_private_broadcast' IOHINT_CACHED[231445])
    (546857 'move' IOHINT_PARALLEL[231450] QIO_HINT_PARALLEL[231407])
    (2050481 '_private_broadcast' IOHINT_PARALLEL[231450])
    const-val ret_tmp[1805520]:6*string[985070] "temp"
    val inlineImm[2182204]:string[26] "temp"
    (2182207 'move' inlineImm[2182204] "a")
    ref i__e0_x[2182209]:string[26] "temp"
    (2182213 'move' i__e0_x[2182209](2182211 'set reference' inlineImm[2182204]))
    val inlineImm[2182215]:string[26] "temp"
    (2182218 'move' inlineImm[2182215] "b")
    ref i__e1_x[2182220]:string[26] "temp"
    (2182224 'move' i__e1_x[2182220](2182222 'set reference' inlineImm[2182215]))
    val inlineImm[2182226]:string[26] "temp"
    (2182229 'move' inlineImm[2182226] "c")
    ref i__e2_x[2182231]:string[26] "temp"
    (2182235 'move' i__e2_x[2182231](2182233 'set reference' inlineImm[2182226]))
    val inlineImm[2182237]:string[26] "temp"
    (2182240 'move' inlineImm[2182237] "d")
    ref i__e3_x[2182242]:string[26] "temp"
    (2182246 'move' i__e3_x[2182242](2182244 'set reference' inlineImm[2182237]))
    val inlineImm[2182248]:string[26] "temp"
    (2182251 'move' inlineImm[2182248] "e")
    ref i__e4_x[2182253]:string[26] "temp"
    (2182257 'move' i__e4_x[2182253](2182255 'set reference' inlineImm[2182248]))
    val inlineImm[2182259]:string[26] "temp"
    (2182262 'move' inlineImm[2182259] "f")
    ref i__e5_x[2182264]:string[26] "temp"
    (2182268 'move' i__e5_x[2182264](2182266 'set reference' inlineImm[2182259]))
    (2298336 '.=' ret_tmp[1805520] x0[985058] i__e0_x[2182209])
    (2298340 '.=' ret_tmp[1805520] x1[985060] i__e1_x[2182220])
    (2298344 '.=' ret_tmp[1805520] x2[985062] i__e2_x[2182231])
    (2298348 '.=' ret_tmp[1805520] x3[985064] i__e3_x[2182242])
    (2298352 '.=' ret_tmp[1805520] x4[985066] i__e4_x[2182253])
    (2298356 '.=' ret_tmp[1805520] x5[985068] i__e5_x[2182264])
    (1805523 'move' call_tmp[721885] ret_tmp[1805520])
    val ret[2182315]:6*string[985236] "dead after last mention" "RVV" "temp"
    const-ref read_x0[2182319]:string[26]
    (2182321 'move' read_x0[2182319](2182323 '.v' call_tmp[721885] x0[985058]))
    val ret[2182326]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182328]:string[26] "dead after last mention" "temp"
    (2182331 call init=[30774] tmp[2182328] read_x0[2182319])
    (2182334 'move' ret[2182326] tmp[2182328])
    const-ref read_x1[2182341]:string[26]
    (2182343 'move' read_x1[2182341](2182345 '.v' call_tmp[721885] x1[985060]))
    val ret[2182348]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182350]:string[26] "dead after last mention" "temp"
    (2182353 call init=[30774] tmp[2182350] read_x1[2182341])
    (2182356 'move' ret[2182348] tmp[2182350])
    const-ref read_x2[2182363]:string[26]
    (2182365 'move' read_x2[2182363](2182367 '.v' call_tmp[721885] x2[985062]))
    val ret[2182370]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182372]:string[26] "dead after last mention" "temp"
    (2182375 call init=[30774] tmp[2182372] read_x2[2182363])
    (2182378 'move' ret[2182370] tmp[2182372])
    const-ref read_x3[2182385]:string[26]
    (2182387 'move' read_x3[2182385](2182389 '.v' call_tmp[721885] x3[985064]))
    val ret[2182392]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182394]:string[26] "dead after last mention" "temp"
    (2182397 call init=[30774] tmp[2182394] read_x3[2182385])
    (2182400 'move' ret[2182392] tmp[2182394])
    const-ref read_x4[2182407]:string[26]
    (2182409 'move' read_x4[2182407](2182411 '.v' call_tmp[721885] x4[985066]))
    val ret[2182414]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182416]:string[26] "dead after last mention" "temp"
    (2182419 call init=[30774] tmp[2182416] read_x4[2182407])
    (2182422 'move' ret[2182414] tmp[2182416])
    const-ref read_x5[2182429]:string[26]
    (2182431 'move' read_x5[2182429](2182433 '.v' call_tmp[721885] x5[985068]))
    val ret[2182436]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2182438]:string[26] "dead after last mention" "temp"
    (2182441 call init=[30774] tmp[2182438] read_x5[2182429])
    (2182444 'move' ret[2182436] tmp[2182438])
    (2298378 '.=' ret[2182315] x0[985224] ret[2182326])
    (2298382 '.=' ret[2182315] x1[985226] ret[2182348])
    (2298386 '.=' ret[2182315] x2[985228] ret[2182370])
    (2298390 '.=' ret[2182315] x3[985230] ret[2182392])
    (2298394 '.=' ret[2182315] x4[985232] ret[2182414])
    (2298398 '.=' ret[2182315] x5[985234] ret[2182436])
    (2050761 '.=' _arg_to_proto_names[246580] value[2050754] ret[2182315])
    const-val coerce_tmp[985713]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985719 'move' coerce_tmp[985713](985715 'cast' int(32)[95] 0))
    val error[1783016]:Error[167984] "error variable" "temp"
    (1783018 'move' error[1783016] nil[44])
    const-val tmp[2182532]:int(32)[95] "dead after last mention" "temp"
    (2182534 'move' tmp[2182532] IOHINT_NONE[231430])
    val errorExists[2072513]:bool[10] "temp"
    (2072518 'move' errorExists[2072513](2072515 '!=' error[1783016] nil[44]))
    if errorExists[2072513]
    {
      (1783021 call chpl_propagate_error[170518] error[1783016])
    }
    const-val default_arg_style[985812]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1783029]:Error[167984] "error variable" "temp"
    (1783031 'move' error[1783029] nil[44])
    const-val style[2182553]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2182555 'move' style[2182553](2182558 call defaultIOStyle[235314]))
    (985817 'move' default_arg_style[985812] style[2182553])
    val errorExists[2072521]:bool[10] "temp"
    (2072526 'move' errorExists[2072521](2072523 '!=' error[1783029] nil[44]))
    if errorExists[2072521]
    {
      (1783034 call chpl_propagate_error[170518] error[1783029])
    }
    val error[1783042]:Error[167984] "error variable" "temp"
    (1783044 'move' error[1783042] nil[44])
    const-val ret_tmp[1804824]:file[235599] "temp"
    (250235 call openfd[237290] coerce_tmp[985713] tmp[2182532] default_arg_style[985812] error[1783042] ret_tmp[1804824])
    (1804827 'move' call_tmp[724016] ret_tmp[1804824])
    val errorExists[2072529]:bool[10] "temp"
    (2072534 'move' errorExists[2072529](2072531 '!=' error[1783042] nil[44]))
    if errorExists[2072529]
    {
      (1783047 call chpl_propagate_error[170518] error[1783042])
    }
    val error[1783055]:Error[167984] "error variable" "temp"
    (1783057 'move' error[1783055] nil[44])
    (1016923 'move' default_arg_start[1016916] 0)
    val errorExists[2072537]:bool[10] "temp"
    (2072542 'move' errorExists[2072537](2072539 '!=' error[1783055] nil[44]))
    if errorExists[2072537]
    {
      (1783060 call chpl_propagate_error[170518] error[1783055])
    }
    val error[1783068]:Error[167984] "error variable" "temp"
    (1783070 'move' error[1783068] nil[44])
    (1016987 'move' default_arg_end[1016980] 9223372036854775807)
    val errorExists[2072545]:bool[10] "temp"
    (2072550 'move' errorExists[2072545](2072547 '!=' error[1783068] nil[44]))
    if errorExists[2072545]
    {
      (1783073 call chpl_propagate_error[170518] error[1783068])
    }
    val error[1783081]:Error[167984] "error variable" "temp"
    (1783083 'move' error[1783081] nil[44])
    const-val tmp[2188390]:int(32)[95] "dead after last mention" "temp"
    (2188392 'move' tmp[2188390] IOHINT_NONE[231430])
    (1017035 'move' default_arg_hints[1017028] tmp[2188390])
    val errorExists[2072553]:bool[10] "temp"
    (2072558 'move' errorExists[2072553](2072555 '!=' error[1783081] nil[44]))
    if errorExists[2072553]
    {
      (1783086 call chpl_propagate_error[170518] error[1783081])
    }
    val error[1783094]:Error[167984] "error variable" "temp"
    (1783096 'move' error[1783094] nil[44])
    ref i_this[2188402]:file[235599] "temp"
    (2188406 'move' i_this[2188402](2188404 'set reference' call_tmp[724016]))
    val ret[2188415]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2188417]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2188419]:Error[167984] "error variable" "temp"
    (2188421 'move' error[2188419] nil[44])
    (2188424 'move' style[2188417](2188427 call _style[235979] i_this[2188402] error[2188419]))
    val errorExists[2188430]:bool[10] "temp"
    (2188432 'move' errorExists[2188430](2188434 '!=' error[2188419] nil[44]))
    if errorExists[2188430]
    {
      (2188439 '=' error[1783094] error[2188419])
      gotoErrorHandlingReturn _endreader_default_style[2188448] _endreader_default_style[2188448]
    }
    (2188445 'move' ret[2188415] style[2188417])
    label _endreader_default_style[2188448]
    (1017613 'move' default_arg_style[1017606] ret[2188415])
    val errorExists[2072561]:bool[10] "temp"
    (2072566 'move' errorExists[2072561](2072563 '!=' error[1783094] nil[44]))
    if errorExists[2072561]
    {
      (1783099 call chpl_propagate_error[170518] error[1783094])
    }
    val error[1783107]:Error[167984] "error variable" "temp"
    (1783109 'move' error[1783107] nil[44])
    const-val ret_tmp[1805856]:channel(false,dynamic,true)[985646] "temp"
    (250240 call reader[1016580] call_tmp[724016] default_arg_start[1016916] default_arg_end[1016980] default_arg_hints[1017028] default_arg_style[1017606] error[1783107] ret_tmp[1805856])
    (1805859 'move' call_tmp[724023] ret_tmp[1805856])
    val errorExists[2072569]:bool[10] "temp"
    (2072574 'move' errorExists[2072569](2072571 '!=' error[1783107] nil[44]))
    if errorExists[2072569]
    {
      (1783112 call chpl_propagate_error[170518] error[1783107])
    }
    (547589 'move' stdin[250227] call_tmp[724023])
    (2050483 '_private_broadcast' stdin[250227])
    (724031 'move' call_tmp[724028](250262 call chpl_cstdout[223577]))
    val error[1783120]:Error[167984] "error variable" "temp"
    (1783122 'move' error[1783120] nil[44])
    const-val tmp[2189218]:int(32)[95] "dead after last mention" "temp"
    (2189220 'move' tmp[2189218] IOHINT_NONE[231430])
    val errorExists[2072577]:bool[10] "temp"
    (2072582 'move' errorExists[2072577](2072579 '!=' error[1783120] nil[44]))
    if errorExists[2072577]
    {
      (1783125 call chpl_propagate_error[170518] error[1783120])
    }
    const-val default_arg_style[1021933]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1783133]:Error[167984] "error variable" "temp"
    (1783135 'move' error[1783133] nil[44])
    const-val style[2189260]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2189262 'move' style[2189260](2189265 call defaultIOStyle[235314]))
    (1021938 'move' default_arg_style[1021933] style[2189260])
    val errorExists[2072585]:bool[10] "temp"
    (2072590 'move' errorExists[2072585](2072587 '!=' error[1783133] nil[44]))
    if errorExists[2072585]
    {
      (1783138 call chpl_propagate_error[170518] error[1783133])
    }
    val error[1783146]:Error[167984] "error variable" "temp"
    (1783148 'move' error[1783146] nil[44])
    const-val ret_tmp[1804838]:file[235599] "temp"
    (250264 call openfp[237419] call_tmp[724028] tmp[2189218] default_arg_style[1021933] error[1783146] ret_tmp[1804838])
    (1804841 'move' call_tmp[724033] ret_tmp[1804838])
    val errorExists[2072593]:bool[10] "temp"
    (2072598 'move' errorExists[2072593](2072595 '!=' error[1783146] nil[44]))
    if errorExists[2072593]
    {
      (1783151 call chpl_propagate_error[170518] error[1783146])
    }
    val error[1783159]:Error[167984] "error variable" "temp"
    (1783161 'move' error[1783159] nil[44])
    (1022498 'move' default_arg_start[1022491] 0)
    val errorExists[2072601]:bool[10] "temp"
    (2072606 'move' errorExists[2072601](2072603 '!=' error[1783159] nil[44]))
    if errorExists[2072601]
    {
      (1783164 call chpl_propagate_error[170518] error[1783159])
    }
    val error[1783172]:Error[167984] "error variable" "temp"
    (1783174 'move' error[1783172] nil[44])
    (1022562 'move' default_arg_end[1022555] 9223372036854775807)
    val errorExists[2072609]:bool[10] "temp"
    (2072614 'move' errorExists[2072609](2072611 '!=' error[1783172] nil[44]))
    if errorExists[2072609]
    {
      (1783177 call chpl_propagate_error[170518] error[1783172])
    }
    val error[1783185]:Error[167984] "error variable" "temp"
    (1783187 'move' error[1783185] nil[44])
    const-val tmp[2189398]:int(32)[95] "dead after last mention" "temp"
    (2189400 'move' tmp[2189398](2189402 'cast' int(32)[95] 0))
    (1022613 'move' default_arg_hints[1022606] tmp[2189398])
    val errorExists[2072617]:bool[10] "temp"
    (2072622 'move' errorExists[2072617](2072619 '!=' error[1783185] nil[44]))
    if errorExists[2072617]
    {
      (1783190 call chpl_propagate_error[170518] error[1783185])
    }
    val error[1783198]:Error[167984] "error variable" "temp"
    (1783200 'move' error[1783198] nil[44])
    ref i_this[2189441]:file[235599] "temp"
    (2189445 'move' i_this[2189441](2189443 'set reference' call_tmp[724033]))
    val ret[2189454]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2189456]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2189458]:Error[167984] "error variable" "temp"
    (2189460 'move' error[2189458] nil[44])
    (2189463 'move' style[2189456](2189466 call _style[235979] i_this[2189441] error[2189458]))
    val errorExists[2189469]:bool[10] "temp"
    (2189471 'move' errorExists[2189469](2189473 '!=' error[2189458] nil[44]))
    if errorExists[2189469]
    {
      (2189478 '=' error[1783198] error[2189458])
      gotoErrorHandlingReturn _endwriter_default_style[2189487] _endwriter_default_style[2189487]
    }
    (2189484 'move' ret[2189454] style[2189456])
    label _endwriter_default_style[2189487]
    (1022650 'move' default_arg_style[1022643] ret[2189454])
    val errorExists[2072625]:bool[10] "temp"
    (2072630 'move' errorExists[2072625](2072627 '!=' error[1783198] nil[44]))
    if errorExists[2072625]
    {
      (1783203 call chpl_propagate_error[170518] error[1783198])
    }
    val error[1783211]:Error[167984] "error variable" "temp"
    (1783213 'move' error[1783211] nil[44])
    const-val ret_tmp[1805916]:channel(true,dynamic,true)[1021844] "temp"
    (250269 call writer[1022155] call_tmp[724033] default_arg_start[1022491] default_arg_end[1022555] default_arg_hints[1022606] default_arg_style[1022643] error[1783211] ret_tmp[1805916])
    (1805919 'move' call_tmp[724040] ret_tmp[1805916])
    val errorExists[2072633]:bool[10] "temp"
    (2072638 'move' errorExists[2072633](2072635 '!=' error[1783211] nil[44]))
    if errorExists[2072633]
    {
      (1783216 call chpl_propagate_error[170518] error[1783211])
    }
    (547604 'move' stdout[250254] call_tmp[724040])
    (2050485 '_private_broadcast' stdout[250254])
    (724048 'move' call_tmp[724045](250291 call chpl_cstderr[223585]))
    val error[1783224]:Error[167984] "error variable" "temp"
    (1783226 'move' error[1783224] nil[44])
    const-val tmp[2189239]:int(32)[95] "dead after last mention" "temp"
    (2189241 'move' tmp[2189239] IOHINT_NONE[231430])
    val errorExists[2072641]:bool[10] "temp"
    (2072646 'move' errorExists[2072641](2072643 '!=' error[1783224] nil[44]))
    if errorExists[2072641]
    {
      (1783229 call chpl_propagate_error[170518] error[1783224])
    }
    const-val default_arg_style[1023885]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1783237]:Error[167984] "error variable" "temp"
    (1783239 'move' error[1783237] nil[44])
    const-val style[2189282]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2189284 'move' style[2189282](2189287 call defaultIOStyle[235314]))
    (1023890 'move' default_arg_style[1023885] style[2189282])
    val errorExists[2072649]:bool[10] "temp"
    (2072654 'move' errorExists[2072649](2072651 '!=' error[1783237] nil[44]))
    if errorExists[2072649]
    {
      (1783242 call chpl_propagate_error[170518] error[1783237])
    }
    val error[1783250]:Error[167984] "error variable" "temp"
    (1783252 'move' error[1783250] nil[44])
    const-val ret_tmp[1804844]:file[235599] "temp"
    (250293 call openfp[237419] call_tmp[724045] tmp[2189239] default_arg_style[1023885] error[1783250] ret_tmp[1804844])
    (1804847 'move' call_tmp[724050] ret_tmp[1804844])
    val errorExists[2072657]:bool[10] "temp"
    (2072662 'move' errorExists[2072657](2072659 '!=' error[1783250] nil[44]))
    if errorExists[2072657]
    {
      (1783255 call chpl_propagate_error[170518] error[1783250])
    }
    val error[1783263]:Error[167984] "error variable" "temp"
    (1783265 'move' error[1783263] nil[44])
    (1023934 'move' default_arg_start[1023927] 0)
    val errorExists[2072665]:bool[10] "temp"
    (2072670 'move' errorExists[2072665](2072667 '!=' error[1783263] nil[44]))
    if errorExists[2072665]
    {
      (1783268 call chpl_propagate_error[170518] error[1783263])
    }
    val error[1783276]:Error[167984] "error variable" "temp"
    (1783278 'move' error[1783276] nil[44])
    (1023945 'move' default_arg_end[1023938] 9223372036854775807)
    val errorExists[2072673]:bool[10] "temp"
    (2072678 'move' errorExists[2072673](2072675 '!=' error[1783276] nil[44]))
    if errorExists[2072673]
    {
      (1783281 call chpl_propagate_error[170518] error[1783276])
    }
    val error[1783289]:Error[167984] "error variable" "temp"
    (1783291 'move' error[1783289] nil[44])
    const-val tmp[2189427]:int(32)[95] "dead after last mention" "temp"
    (2189429 'move' tmp[2189427](2189431 'cast' int(32)[95] 0))
    (1023956 'move' default_arg_hints[1023949] tmp[2189427])
    val errorExists[2072681]:bool[10] "temp"
    (2072686 'move' errorExists[2072681](2072683 '!=' error[1783289] nil[44]))
    if errorExists[2072681]
    {
      (1783294 call chpl_propagate_error[170518] error[1783289])
    }
    val error[1783302]:Error[167984] "error variable" "temp"
    (1783304 'move' error[1783302] nil[44])
    ref i_this[2189491]:file[235599] "temp"
    (2189495 'move' i_this[2189491](2189493 'set reference' call_tmp[724050]))
    val ret[2189504]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2189506]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2189508]:Error[167984] "error variable" "temp"
    (2189510 'move' error[2189508] nil[44])
    (2189513 'move' style[2189506](2189516 call _style[235979] i_this[2189491] error[2189508]))
    val errorExists[2189519]:bool[10] "temp"
    (2189521 'move' errorExists[2189519](2189523 '!=' error[2189508] nil[44]))
    if errorExists[2189519]
    {
      (2189528 '=' error[1783302] error[2189508])
      gotoErrorHandlingReturn _endwriter_default_style[2189537] _endwriter_default_style[2189537]
    }
    (2189534 'move' ret[2189504] style[2189506])
    label _endwriter_default_style[2189537]
    (1023967 'move' default_arg_style[1023960] ret[2189504])
    val errorExists[2072689]:bool[10] "temp"
    (2072694 'move' errorExists[2072689](2072691 '!=' error[1783302] nil[44]))
    if errorExists[2072689]
    {
      (1783307 call chpl_propagate_error[170518] error[1783302])
    }
    val error[1783315]:Error[167984] "error variable" "temp"
    (1783317 'move' error[1783315] nil[44])
    const-val ret_tmp[1805922]:channel(true,dynamic,true)[1021844] "temp"
    (250298 call writer[1022155] call_tmp[724050] default_arg_start[1023927] default_arg_end[1023938] default_arg_hints[1023949] default_arg_style[1023960] error[1783315] ret_tmp[1805922])
    (1805925 'move' call_tmp[724057] ret_tmp[1805922])
    val errorExists[2072697]:bool[10] "temp"
    (2072702 'move' errorExists[2072697](2072699 '!=' error[1783315] nil[44]))
    if errorExists[2072697]
    {
      (1783320 call chpl_propagate_error[170518] error[1783315])
    }
    (547619 'move' stderr[250283] call_tmp[724057])
    (2050487 '_private_broadcast' stderr[250283])
    (536229 return _void[55])
  }
  def module FormattedIO[251287]  
  type iomode[230934] def r[230923]:iomode[230934] 1 def cw[230926]:iomode[230934] 2 def rw[230929]:iomode[230934] 3 def cwr[230932]:iomode[230934] 4
  type iokind[230950] def dynamic[230939]:iokind[230950] 0 def native[230942]:iokind[230950] 1 def big[230945]:iokind[230950] 2 def little[230948]:iokind[230950] 3
  type iostringstyle[231033] def len1b_data[230997]:iostringstyle[231033] -1 def len2b_data[231002]:iostringstyle[231033] -2 def len4b_data[231007]:iostringstyle[231033] -4 def len8b_data[231012]:iostringstyle[231033] -8 def lenVb_data[231017]:iostringstyle[231033] -10 def data_toeof[231024]:iostringstyle[231033] -65280 def data_null[231031]:iostringstyle[231033] -256
  type iostringformat[231055] def word[231038]:iostringformat[231055] 0 def basic[231041]:iostringformat[231055] 1 def chpl[231044]:iostringformat[231055] 2 def json[231047]:iostringformat[231055] 3 def toend[231050]:iostringformat[231055] 4 def toeof[231053]:iostringformat[231055] 5
  const QIO_FDFLAG_UNK[231317]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231322]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231327]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231332]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231337]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231342]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231347]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231352]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231357]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231362]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231367]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231372]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231377]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231382]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231387]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231392]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231397]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231402]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231407]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231412]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231417]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231422]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231430]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231435]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231440]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231445]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231450]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  type qio_file_ptr_t[231458]
  const-val QIO_FILE_PTR_NULL[231461]:qio_file_ptr_t[231458] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qio_channel_ptr_t[231484]
  const-val QIO_CHANNEL_PTR_NULL[231487]:qio_channel_ptr_t[231484] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231495]
  const-val QBUFFER_PTR_NULL[231498]:qbuffer_ptr_t[231495] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231513]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231521]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231529]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231537]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231545]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231553]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  type iostyle[231863] val binary[231563]:uint(8)[100] val byteorder[231581]:uint(8)[100] val str_style[231601]:int(64)[13] val min_width_columns[231610]:uint(32)[110] val max_width_columns[231625]:uint(32)[110] val max_width_characters[231640]:uint(32)[110] val max_width_bytes[231655]:uint(32)[110] val string_start[231661]:uint(8)[100] val string_end[231667]:uint(8)[100] val string_format[231687]:uint(8)[100] val bytes_prefix[231693]:uint(8)[100] val base[231702]:uint(8)[100] val point_char[231708]:uint(8)[100] val exponent_char[231716]:uint(8)[100] val other_exponent_char[231722]:uint(8)[100] val positive_char[231728]:uint(8)[100] val negative_char[231734]:uint(8)[100] val i_char[231742]:uint(8)[100] val prefix_base[231751]:uint(8)[100] val pad_char[231757]:uint(8)[100] val showplus[231766]:uint(8)[100] val uppercase[231775]:uint(8)[100] val leftjustify[231784]:uint(8)[100] val showpoint[231793]:uint(8)[100] val showpointzero[231802]:uint(8)[100] val precision[231813]:int(32)[95] val realfmt[231822]:uint(8)[100] val complex_style[231831]:uint(8)[100] val array_style[231840]:uint(8)[100] val aggregate_style[231849]:uint(8)[100] val tuple_style[231858]:uint(8)[100]
  function QioPluginFile[232029].setupChannel[231875](const in arg this[232031]:QioPluginFile[232029], ref arg pluginChannel[231872]:QioPluginChannel[232112], const in arg start[231881]:int(64)[13], const in arg end[231888]:int(64)[13], const in arg qioChannelPtr[231892]:qio_channel_ptr_t[231484]) : syserr[223603] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1430227]:QioPluginChannel[232112] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1430252 'move' _formal_tmp_pluginChannel[1430227](1430250 'cast' QioPluginChannel[232112] nil[44]))
    const-val call_tmp[2169359]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169361 'move' call_tmp[2169359](2169364 call qio_int_to_err[223653] ENOSYS[224703]))
    label _endsetupChannel[1430237]
    (1815576 '=' pluginChannel[231872] _formal_tmp_pluginChannel[1430227])
    (533696 return call_tmp[2169359])
  }
  function QioPluginFile[232029].filelength[231912](const in arg this[232035]:QioPluginFile[232029], ref arg length[231909]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169435]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169437 'move' call_tmp[2169435](2169440 call qio_int_to_err[223653] ENOSYS[224703]))
    label _endfilelength[1431874]
    (1815579 '=' length[231909] 0)
    (533706 return call_tmp[2169435])
  }
  function QioPluginFile[232029].getpath[231928](const in arg this[232039]:QioPluginFile[232029], ref arg path[231925]:c_string[19], ref arg len[231934]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1431922]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1431957 'move' _formal_tmp_path[1431922](1431955 'cast' c_string[19] nil[44]))
    const-val call_tmp[2169454]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169456 'move' call_tmp[2169454](2169459 call qio_int_to_err[223653] ENOSYS[224703]))
    label _endgetpath[1431933]
    (1815582 '=' path[231925] _formal_tmp_path[1431922])
    (1815585 '=' len[231934] 0)
    (533716 return call_tmp[2169454])
  }
  function QioPluginFile[232029].fsync[231947](const in arg this[232043]:QioPluginFile[232029]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169473]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169475 'move' call_tmp[2169473](2169478 call qio_int_to_err[223653] ENOSYS[224703]))
    (533726 return call_tmp[2169473])
  }
  function QioPluginFile[232029].getChunk[231966](const in arg this[232047]:QioPluginFile[232029], ref arg length[231963]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169492]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169494 'move' call_tmp[2169492](2169497 call qio_int_to_err[223653] ENOSYS[224703]))
    label _endgetChunk[1432024]
    (1815588 '=' length[231963] 0)
    (533736 return call_tmp[2169492])
  }
  function QioPluginFile[232029].getLocalesForRegion[231985](const in arg this[232051]:QioPluginFile[232029], const in arg start[231982]:int(64)[13], const in arg end[231991]:int(64)[13], ref arg localeNames[231998]:c_ptr(c_string)[1432049], ref arg nLocales[232005]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1432101]:c_ptr(c_string)[1432049] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1432126 'move' _formal_tmp_localeNames[1432101](1432124 'cast' c_ptr(c_string)[1432049] nil[44]))
    const-val call_tmp[2169511]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169513 'move' call_tmp[2169511](2169516 call qio_int_to_err[223653] ENOSYS[224703]))
    label _endgetLocalesForRegion[1432111]
    (1815591 '=' localeNames[231998] _formal_tmp_localeNames[1432101])
    (533746 return call_tmp[2169511])
  }
  function QioPluginFile[232029].close[232018](const in arg this[232055]:QioPluginFile[232029]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169530]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169532 'move' call_tmp[2169530](2169535 call qio_int_to_err[223653] ENOSYS[224703]))
    (533756 return call_tmp[2169530])
  }
  function QioPluginFile[232029].deinit[879980](const in arg this[879984]:QioPluginFile[232029]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1788407]
    (879992 return _void[55])
  }
  type QioPluginFile[232029] val super[355764]:object[22] "super class"
  function QioPluginChannel[232112].readAtLeast[232070](const in arg this[232114]:QioPluginChannel[232112], const in arg amt[232067]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169378]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169380 'move' call_tmp[2169378](2169383 call qio_int_to_err[223653] ENOSYS[224703]))
    (533766 return call_tmp[2169378])
  }
  function QioPluginChannel[232112].write[232089](const in arg this[232118]:QioPluginChannel[232112], const in arg amt[232086]:int(64)[13]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169397]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169399 'move' call_tmp[2169397](2169402 call qio_int_to_err[223653] ENOSYS[224703]))
    (533776 return call_tmp[2169397])
  }
  function QioPluginChannel[232112].close[232101](const in arg this[232122]:QioPluginChannel[232112]) : syserr[223603] "method" "primary method" "resolved"
  {
    const-val call_tmp[2169416]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169418 'move' call_tmp[2169416](2169421 call qio_int_to_err[223653] ENOSYS[224703]))
    (533786 return call_tmp[2169416])
  }
  function QioPluginChannel[232112].deinit[880116](const in arg this[880120]:QioPluginChannel[232112]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1788419]
    (880128 return _void[55])
  }
  type QioPluginChannel[232112] val super[355766]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232133](const in arg file[232130]:c_void_ptr[149], ref arg plugin_ch[232136]:c_void_ptr[149], const in arg start[232143]:int(64)[13], const in arg end[232150]:int(64)[13], const in arg qio_ch[232154]:qio_channel_ptr_t[231484]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281682]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281684 'move' call_tmp[2281682](2281686 'cast' QioPluginFile[232029] file[232130]))
    val coerce_tmp[2281795]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281797 'move' coerce_tmp[2281795](2281799 'cast' object[22] call_tmp[2281682]))
    const-val call_tmp[2281802]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281804 'move' call_tmp[2281802](2281806 'ptr_eq' coerce_tmp[2281795] nil[44]))
    if call_tmp[2281802]
    {
      (2281812 call nilCheckHalt[210169] "argument to ! is nil")
    }
    val pluginChannel[232175]:QioPluginChannel[232112] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1430204]:QioPluginChannel[232112] "dead at end of block" "temp"
    (1430207 'move' init_coerce_tmp[1430204](1430372 'cast' QioPluginChannel[232112] nil[44]))
    (546894 'move' pluginChannel[232175] init_coerce_tmp[1430204])
    const-val call_tmp[715137]:syserr[223603] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_pluginChannel[1430219]:QioPluginChannel[232112] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715140 'move' call_tmp[715137](232190 call setupChannel[231875] call_tmp[2281682] _formal_tmp_out_pluginChannel[1430219] start[232143] end[232150] qio_ch[232154]))
    (2281962 '=' pluginChannel[232175] _formal_tmp_out_pluginChannel[1430219])
    const-val call_tmp[2281968]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281970 'move' call_tmp[2281968](2281972 'cast' c_void_ptr[149] pluginChannel[232175]))
    (2079684 '=' plugin_ch[232136] call_tmp[2281968])
    label _end_chpl_qio_setup_plugin_channel[533792]
    (533796 return call_tmp[715137])
  }
  function chpl_qio_read_atleast[232215](const in arg ch_plugin[232212]:c_void_ptr[149], const in arg amt[232221]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281978]:QioPluginChannel[232112] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281980 'move' call_tmp[2281978](2281982 'cast' QioPluginChannel[232112] ch_plugin[232212]))
    val coerce_tmp[2282051]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282053 'move' coerce_tmp[2282051](2282055 'cast' object[22] call_tmp[2281978]))
    const-val call_tmp[2282058]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282060 'move' call_tmp[2282058](2282062 'ptr_eq' coerce_tmp[2282051] nil[44]))
    if call_tmp[2282058]
    {
      (2282068 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715159]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (715162 'move' call_tmp[715159](232245 call readAtLeast[232070] call_tmp[2281978] amt[232221]))
    label _end_chpl_qio_read_atleast[533804]
    (533808 return call_tmp[715159])
  }
  function chpl_qio_write[232256](const in arg ch_plugin[232253]:c_void_ptr[149], const in arg amt[232262]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281988]:QioPluginChannel[232112] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281990 'move' call_tmp[2281988](2281992 'cast' QioPluginChannel[232112] ch_plugin[232253]))
    val coerce_tmp[2282074]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282076 'move' coerce_tmp[2282074](2282078 'cast' object[22] call_tmp[2281988]))
    const-val call_tmp[2282081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282083 'move' call_tmp[2282081](2282085 'ptr_eq' coerce_tmp[2282074] nil[44]))
    if call_tmp[2282081]
    {
      (2282091 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715176]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (715179 'move' call_tmp[715176](232284 call write[232089] call_tmp[2281988] amt[232262]))
    label _end_chpl_qio_write[533815]
    (533819 return call_tmp[715176])
  }
  function chpl_qio_channel_close[232295](const in arg ch[232292]:c_void_ptr[149]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281998]:QioPluginChannel[232112] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282000 'move' call_tmp[2281998](2282002 'cast' QioPluginChannel[232112] ch[232292]))
    val coerce_tmp[2282097]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282099 'move' coerce_tmp[2282097](2282101 'cast' object[22] call_tmp[2281998]))
    const-val call_tmp[2282104]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282106 'move' call_tmp[2282104](2282108 'ptr_eq' coerce_tmp[2282097] nil[44]))
    if call_tmp[2282104]
    {
      (2282114 call nilCheckHalt[210169] "argument to ! is nil")
    }
    val c[232306]:QioPluginChannel[232112] "dead at end of block" "insert auto destroy"
    (546902 'move' c[232306] call_tmp[2281998])
    const-val call_tmp[715193]:syserr[223603] "dead at end of block" "maybe param" "temp"
    (715196 'move' call_tmp[715193](232318 call close[232101] call_tmp[2281998]))
    val coerce_tmp[2282120]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282122 'move' coerce_tmp[2282120](2282124 'cast' object[22] c[232306]))
    const-val call_tmp[2282127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282129 'move' call_tmp[2282127](2282131 'ptr_neq' coerce_tmp[2282120] nil[44]))
    if call_tmp[2282127]
    {
      const-val call_tmp[2282143]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (2282145 'move' call_tmp[2282143](2282147 '_wide_get_locale' c[232306]))
      val isdirect[2282152]:bool[10] "temp"
      (2282154 'move' isdirect[2282152](2282157 call chpl_doDirectExecuteOn[187469] call_tmp[2282143]))
      if isdirect[2282152]
      {
        (2282162 call on_fn[1431039] c[232306])
      }
      {
        val _args_foron_fn[2282165]:_class_localson_fn[2061416] "temp"
        (2282167 'move' _args_foron_fn[2282165](2282169 'stack allocate class' _class_localson_fn[2061416]))
        (2282171 '.=' _args_foron_fn[2282165] _0_tmp[2061419] call_tmp[2282143])
        (2282175 '.=' _args_foron_fn[2282165] _1_arg[2061421] c[232306])
        val _args_vforon_fn[2282179]:c_void_ptr[149] "temp"
        (2282181 'move' _args_vforon_fn[2282179](2282183 'cast_to_void_star' _args_foron_fn[2282165]))
        val _args_sizeon_fn[2282185]:int(64)[13] "temp"
        (2282187 'move' _args_sizeon_fn[2282185](2282189 'sizeof_bundle' _class_localson_fn[2061416]))
        on(2282192 call wrapon_fn[2061450] call_tmp[2282143] _args_vforon_fn[2282179] _args_sizeon_fn[2282185] _args_foron_fn[2282165])
      }
    }
    label _end_chpl_qio_channel_close[533826]
    (533830 return call_tmp[715193])
  }
  function chpl_qio_filelength[232340](const in arg file[232337]:c_void_ptr[149], ref arg length[232346]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281692]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281694 'move' call_tmp[2281692](2281696 'cast' QioPluginFile[232029] file[232337]))
    val coerce_tmp[2281818]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281820 'move' coerce_tmp[2281818](2281822 'cast' object[22] call_tmp[2281692]))
    const-val call_tmp[2281825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281827 'move' call_tmp[2281825](2281829 'ptr_eq' coerce_tmp[2281818] nil[44]))
    if call_tmp[2281825]
    {
      (2281835 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715210]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1431856]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715213 'move' call_tmp[715210](232371 call filelength[231912] call_tmp[2281692] _formal_tmp_out_length[1431856]))
    (2085517 '=' length[232346] _formal_tmp_out_length[1431856])
    label _end_chpl_qio_filelength[533838]
    (533842 return call_tmp[715210])
  }
  function chpl_qio_getpath[232383](const in arg file[232380]:c_void_ptr[149], ref arg str[232386]:c_string[19], ref arg len[232393]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281702]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281704 'move' call_tmp[2281702](2281706 'cast' QioPluginFile[232029] file[232380]))
    val coerce_tmp[2281841]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281843 'move' coerce_tmp[2281841](2281845 'cast' object[22] call_tmp[2281702]))
    const-val call_tmp[2281848]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281850 'move' call_tmp[2281848](2281852 'ptr_eq' coerce_tmp[2281841] nil[44]))
    if call_tmp[2281848]
    {
      (2281858 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715227]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_path[1431907]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1431914]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715230 'move' call_tmp[715227](232419 call getpath[231928] call_tmp[2281702] _formal_tmp_out_path[1431907] _formal_tmp_out_len[1431914]))
    (2083468 '=' str[232386] _formal_tmp_out_path[1431907])
    (2085523 '=' len[232393] _formal_tmp_out_len[1431914])
    label _end_chpl_qio_getpath[533850]
    (533854 return call_tmp[715227])
  }
  function chpl_qio_fsync[232431](const in arg file[232428]:c_void_ptr[149]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281712]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281714 'move' call_tmp[2281712](2281716 'cast' QioPluginFile[232029] file[232428]))
    val coerce_tmp[2281864]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281866 'move' coerce_tmp[2281864](2281868 'cast' object[22] call_tmp[2281712]))
    const-val call_tmp[2281871]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281873 'move' call_tmp[2281871](2281875 'ptr_eq' coerce_tmp[2281864] nil[44]))
    if call_tmp[2281871]
    {
      (2281881 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715244]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (715247 'move' call_tmp[715244](232454 call fsync[231947] call_tmp[2281712]))
    label _end_chpl_qio_fsync[533862]
    (533866 return call_tmp[715244])
  }
  function chpl_qio_get_chunk[232466](const in arg file[232463]:c_void_ptr[149], ref arg length[232472]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281722]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281724 'move' call_tmp[2281722](2281726 'cast' QioPluginFile[232029] file[232463]))
    val coerce_tmp[2281887]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281889 'move' coerce_tmp[2281887](2281891 'cast' object[22] call_tmp[2281722]))
    const-val call_tmp[2281894]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281896 'move' call_tmp[2281894](2281898 'ptr_eq' coerce_tmp[2281887] nil[44]))
    if call_tmp[2281894]
    {
      (2281904 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715261]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1432006]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715264 'move' call_tmp[715261](232497 call getChunk[231966] call_tmp[2281722] _formal_tmp_out_length[1432006]))
    (2085529 '=' length[232472] _formal_tmp_out_length[1432006])
    label _end_chpl_qio_get_chunk[533874]
    (533878 return call_tmp[715261])
  }
  function chpl_qio_get_locales_for_region[232509](const in arg file[232506]:c_void_ptr[149], const in arg start[232515]:int(64)[13], const in arg end[232522]:int(64)[13], ref arg localeNames[232526]:c_void_ptr[149], const  ref arg nLocales[232533]:int(64)[13]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val strPtr[232541]:c_ptr(c_string)[1432049] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[2281732]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281734 'move' call_tmp[2281732](2281736 'cast' QioPluginFile[232029] file[232506]))
    val coerce_tmp[2281910]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281912 'move' coerce_tmp[2281910](2281914 'cast' object[22] call_tmp[2281732]))
    const-val call_tmp[2281917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281919 'move' call_tmp[2281917](2281921 'ptr_eq' coerce_tmp[2281910] nil[44]))
    if call_tmp[2281917]
    {
      (2281927 call nilCheckHalt[210169] "argument to ! is nil")
    }
    const-val call_tmp[715283]:syserr[223603] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_localeNames[1432093]:c_ptr(c_string)[1432049] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715286 'move' call_tmp[715283](232569 call getLocalesForRegion[231985] call_tmp[2281732] start[232515] end[232522] _formal_tmp_out_localeNames[1432093] nLocales[232533]))
    (1815594 '=' strPtr[232541] _formal_tmp_out_localeNames[1432093])
    (1432160 'noop')
    const-val call_tmp[715288]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715291 'move' call_tmp[715288](232577 'cast' c_void_ptr[149] strPtr[232541]))
    (2079690 '=' localeNames[232526] call_tmp[715288])
    label _end_chpl_qio_get_locales_for_region[533886]
    (533890 return call_tmp[715283])
  }
  function chpl_qio_file_close[232594](const in arg file[232591]:c_void_ptr[149]) : syserr[223603] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2281742]:QioPluginFile[232029] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281744 'move' call_tmp[2281742](2281746 'cast' QioPluginFile[232029] file[232591]))
    val coerce_tmp[2281933]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2281935 'move' coerce_tmp[2281933](2281937 'cast' object[22] call_tmp[2281742]))
    const-val call_tmp[2281940]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2281942 'move' call_tmp[2281940](2281944 'ptr_eq' coerce_tmp[2281933] nil[44]))
    if call_tmp[2281940]
    {
      (2281950 call nilCheckHalt[210169] "argument to ! is nil")
    }
    val f[232605]:QioPluginFile[232029] "dead at end of block" "insert auto destroy"
    (546920 'move' f[232605] call_tmp[2281742])
    const-val call_tmp[715305]:syserr[223603] "dead at end of block" "maybe param" "temp"
    (715308 'move' call_tmp[715305](232615 call close[232018] call_tmp[2281742]))
    val coerce_tmp[2282202]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282204 'move' coerce_tmp[2282202](2282206 'cast' object[22] f[232605]))
    const-val call_tmp[2282209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282211 'move' call_tmp[2282209](2282213 'ptr_neq' coerce_tmp[2282202] nil[44]))
    if call_tmp[2282209]
    {
      const-val call_tmp[2282225]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (2282227 'move' call_tmp[2282225](2282229 '_wide_get_locale' f[232605]))
      val isdirect[2282234]:bool[10] "temp"
      (2282236 'move' isdirect[2282234](2282239 call chpl_doDirectExecuteOn[187469] call_tmp[2282225]))
      if isdirect[2282234]
      {
        (2282244 call on_fn[1432471] f[232605])
      }
      {
        val _args_foron_fn[2282247]:_class_localson_fn[2061501] "temp"
        (2282249 'move' _args_foron_fn[2282247](2282251 'stack allocate class' _class_localson_fn[2061501]))
        (2282253 '.=' _args_foron_fn[2282247] _0_tmp[2061504] call_tmp[2282225])
        (2282257 '.=' _args_foron_fn[2282247] _1_arg[2061506] f[232605])
        val _args_vforon_fn[2282261]:c_void_ptr[149] "temp"
        (2282263 'move' _args_vforon_fn[2282261](2282265 'cast_to_void_star' _args_foron_fn[2282247]))
        val _args_sizeon_fn[2282267]:int(64)[13] "temp"
        (2282269 'move' _args_sizeon_fn[2282267](2282271 'sizeof_bundle' _class_localson_fn[2061501]))
        on(2282274 call wrapon_fn[2061535] call_tmp[2282225] _args_vforon_fn[2282261] _args_sizeon_fn[2282267] _args_foron_fn[2282247])
      }
    }
    label _end_chpl_qio_file_close[533898]
    (533902 return call_tmp[715305])
  }
  function qio_style_init_default[232637](ref arg s[232634]:iostyle[231863]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533910 return _void[55])
  }
  function qio_file_release[232657](const in arg f[232654]:qio_file_ptr_t[231458]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533914 return _void[55])
  }
  function qio_file_init[232667](ref arg file_out[232664]:qio_file_ptr_t[231458], const in arg fp[232670]:_file[155], const in arg fd[232674]:int(32)[95], const in arg iohints[232678]:int(32)[95], const  ref arg style[232682]:iostyle[231863], const in arg usefilestar[232686]:int(32)[95]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533918]:syserr[223603] "RVV" "temp"
    (533920 return ret[533918])
  }
  function qio_file_open_mem[232747](ref arg file_out[232744]:qio_file_ptr_t[231458], const in arg buf[232750]:qbuffer_ptr_t[231495], const  ref arg style[232754]:iostyle[231863]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533936]:syserr[223603] "RVV" "temp"
    (533938 return ret[533936])
  }
  function qio_file_close[232767](const in arg f[232764]:qio_file_ptr_t[231458]) : syserr[223603] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[533942]:syserr[223603] "RVV" "temp"
    (533944 return ret[533942])
  }
  function qio_file_isopen[232801](const in arg f[232798]:qio_file_ptr_t[231458]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533956]:bool[10] "RVV" "temp"
    (533958 return ret[533956])
  }
  function qio_file_get_style[232840](const in arg f[232837]:qio_file_ptr_t[231458], ref arg style[232843]:iostyle[231863]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (533972 return _void[55])
  }
  function qio_channel_create[232897](ref arg ch[232894]:qio_channel_ptr_t[231484], const in arg file[232900]:qio_file_ptr_t[231458], const in arg hints[232904]:int(32)[95], const in arg readable[232908]:int(32)[95], const in arg writeable[232912]:int(32)[95], const in arg start[232919]:int(64)[13], const in arg end[232926]:int(64)[13], const  ref arg style[232930]:iostyle[231863]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[533994]:syserr[223603] "RVV" "temp"
    (533996 return ret[533994])
  }
  function qio_channel_path_offset[232943](const in arg threadsafe[232940]:int(32)[95], const in arg ch[232946]:qio_channel_ptr_t[231484], ref arg path[232950]:c_string[19], ref arg offset[232957]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534000]:syserr[223603] "RVV" "temp"
    (534002 return ret[534000])
  }
  function qio_channel_retain[232970](const in arg ch[232967]:qio_channel_ptr_t[231484]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534004 return _void[55])
  }
  function qio_channel_release[232980](const in arg ch[232977]:qio_channel_ptr_t[231484]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534006 return _void[55])
  }
  function qio_channel_lock[233026](const in arg ch[233023]:qio_channel_ptr_t[231484]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534020]:syserr[223603] "RVV" "temp"
    (534022 return ret[534020])
  }
  function qio_channel_unlock[233038](const in arg ch[233035]:qio_channel_ptr_t[231484]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534024 return _void[55])
  }
  function qio_channel_binary[233076](const in arg ch[233073]:qio_channel_ptr_t[231484]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534032]:uint(8)[100] "RVV" "temp"
    (534034 return ret[534032])
  }
  function qio_channel_byteorder[233091](const in arg ch[233088]:qio_channel_ptr_t[231484]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534038]:uint(8)[100] "RVV" "temp"
    (534040 return ret[534038])
  }
  function qio_channel_str_style[233106](const in arg ch[233103]:qio_channel_ptr_t[231484]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534044]:int(64)[13] "RVV" "temp"
    (534046 return ret[534044])
  }
  function qio_channel_close[233159](const in arg threadsafe[233156]:int(32)[95], const in arg ch[233162]:qio_channel_ptr_t[231484]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534062]:syserr[223603] "RVV" "temp"
    (534064 return ret[534062])
  }
  function qio_channel_read_amt[1083302](const in arg threadsafe[1083306]:int(32)[95], const in arg ch[1083308]:qio_channel_ptr_t[231484], const in arg ptr[1083310]:c_ptr(uint(8))[937442], const in arg len[1083314]:int(64)[13]) : syserr[223603] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083318]:syserr[223603] "RVV" "temp"
    (1083326 return ret[1083318])
  }
  function qio_channel_offset_unlocked[233401](const in arg ch[233398]:qio_channel_ptr_t[231484]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534128]:int(64)[13] "RVV" "temp"
    (534130 return ret[534128])
  }
  function qio_file_path_for_fd[233666](const in arg fd[233663]:int(32)[95], ref arg path[233669]:c_string[19]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534198]:syserr[223603] "RVV" "temp"
    (534200 return ret[534198])
  }
  function qio_file_path_for_fp[233682](const in arg fp[233679]:_file[155], ref arg path[233685]:c_string[19]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534204]:syserr[223603] "RVV" "temp"
    (534206 return ret[534204])
  }
  function qio_file_path[233698](const in arg f[233695]:qio_file_ptr_t[231458], ref arg path[233701]:c_string[19]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534210]:syserr[223603] "RVV" "temp"
    (534212 return ret[534210])
  }
  function qio_shortest_path[233714](const in arg fl[233711]:qio_file_ptr_t[231458], ref arg path_out[233717]:c_string[19], const in arg path_in[233721]:c_string[19]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534216]:syserr[223603] "RVV" "temp"
    (534218 return ret[534216])
  }
  function qio_channel_write_int64[234069](const in arg threadsafe[234066]:int(32)[95], const in arg byteorder[234072]:int(32)[95], const in arg ch[234076]:qio_channel_ptr_t[231484], const in arg x[234083]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534300]:syserr[223603] "RVV" "temp"
    (534302 return ret[534300])
  }
  function qio_channel_write_float64[234285](const in arg threadsafe[234282]:int(32)[95], const in arg byteorder[234288]:int(32)[95], const in arg ch[234292]:qio_channel_ptr_t[231484], const in arg x[234299]:real(64)[16]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534348]:syserr[223603] "RVV" "temp"
    (534350 return ret[534348])
  }
  function qio_channel_write_string[234408](const in arg threadsafe[234405]:int(32)[95], const in arg byteorder[234411]:int(32)[95], const in arg str_style[234418]:int(64)[13], const in arg ch[234422]:qio_channel_ptr_t[231484], const in arg s[234426]:c_string[19], const in arg len[234430]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534372]:syserr[223603] "RVV" "temp"
    (534374 return ret[534372])
  }
  function qio_channel_print_int[1079544](const in arg threadsafe[1079548]:int(32)[95], const in arg ch[1079550]:qio_channel_ptr_t[231484], const  ref arg ptr[1079552]:int(64)[13], const in arg len[1079556]:uint(64)[115], const in arg issigned[1079560]:int(32)[95]) : syserr[223603] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079564]:syserr[223603] "RVV" "temp"
    (1079572 return ret[1079564])
  }
  function qio_channel_print_float[1406364](const in arg threadsafe[1406368]:int(32)[95], const in arg ch[1406370]:qio_channel_ptr_t[231484], const  ref arg ptr[1406372]:real(64)[16], const in arg len[1406376]:uint(64)[115]) : syserr[223603] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1406380]:syserr[223603] "RVV" "temp"
    (1406388 return ret[1406380])
  }
  function qio_channel_write_newline[234754](const in arg threadsafe[234751]:int(32)[95], const in arg ch[234757]:qio_channel_ptr_t[231484]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534462]:syserr[223603] "RVV" "temp"
    (534464 return ret[534462])
  }
  function qio_channel_print_string[234856](const in arg threadsafe[234853]:int(32)[95], const in arg ch[234859]:qio_channel_ptr_t[231484], const in arg ptr[234863]:c_string[19], const in arg len[234867]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534486]:syserr[223603] "RVV" "temp"
    (534488 return ret[534486])
  }
  const QIO_CONV_UNK[235079]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235084]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235089]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235094]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235099]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235104]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235109]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235114]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235119]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235124]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235129]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235134]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235139]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235144]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235149]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235154]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235159]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235164]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235169]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235174]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235179]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235184]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235189]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235194]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235199]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235204]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235209]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235214]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235219]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235224]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235229]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235314]() : iostyle[231863] "resolved"
  {
    val ret[534558]:iostyle[231863] "dead after last mention" "RVV" "temp"
    val ret[235318]:iostyle[231863] "dead at end of block" "insert auto destroy"
    (235326 call qio_style_init_default[232637] ret[235318])
    (985806 'move' ret[534558] ret[235318])
    label _end_defaultIOStyle[534556]
    (534560 return ret[534558])
  }
  val iohints[235575]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function file[235599].init[235593](ref arg this[235601]:file[235599]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2130401]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130403]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130405 'move' call_tmp[2130403](2130408 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130411 'move' call_tmp[2130401] call_tmp[2130403])
    const-val call_tmp[2130414]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130416]:locale[28] "temp"
    (2130419 call chpl_localeID_to_locale[92852] call_tmp[2130401] ret_tmp[2130416])
    (2130422 'move' call_tmp[2130414] ret_tmp[2130416])
    (465297 '.=' this[235601] home[235581] call_tmp[2130414])
    val tmp[465302]:qio_file_ptr_t[231458] "dead after last mention" "temp"
    (465305 'move' tmp[465302] QIO_FILE_PTR_NULL[231461])
    (465307 '.=' this[235601] _file_internal[235587] tmp[465302])
    (534616 return _void[55])
  }
  type file[235599] val home[235581]:locale[28] "no doc" val _file_internal[235587]:qio_file_ptr_t[231458] "no doc"
  function file[235599].checkAssumingLocal[235787](const  ref arg this[235789]:file[235599], ref arg error_out[1782573]:Error[167984]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1017117]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017121 'move' coerce_tmp[1017117](2320483 '.v' this[235789] _file_internal[235587]))
    const-val call_tmp[2188453]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188455 'move' call_tmp[2188453](2188457 'cast' c_void_ptr[149] coerce_tmp[1017117]))
    const-val call_tmp[2188460]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188462 'move' call_tmp[2188460](2188464 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2188467]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188469 'move' call_tmp[2188467](2188471 'ptr_eq' call_tmp[2188453] call_tmp[2188460]))
    if call_tmp[2188467]
    {
      const-val call_tmp[715535]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017177]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017183 'move' coerce_tmp[1017177](1017179 'cast' int(64)[13] EBADF[224343]))
      const-val ret_tmp[1805868]:owned SystemError[1000257] "temp"
      (235821 call fromSyserr[1017132] coerce_tmp[1017177] "Operation attempted on an invalid file" ret_tmp[1805868])
      (1805871 'move' call_tmp[715535] ret_tmp[1805868])
      val call_tmp[715540]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017192]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805796]:owned Error[966477] "temp"
      ref i_x[2187377]:owned SystemError[1000257] "temp"
      (2187381 'move' i_x[2187377](2187379 'set reference' call_tmp[715535]))
      ref i__retArg[2187383]:owned Error[966477] "temp"
      (2187387 'move' i__retArg[2187383](2187385 'set reference' ret_tmp[1805796]))
      val _formal_tmp_x[2187390]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2187392 'move' _formal_tmp_x[2187390] i_x[2187377])
      const-val ret[2187395]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2187397]:owned SystemError[1000257] "temp"
      (2187399 'move' i_this[2187397](2187401 'set reference' _formal_tmp_x[2187390]))
      val coerce_tmp[2187403]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2187405 'move' coerce_tmp[2187403](2187407 '.v' i_this[2187397] chpl_p[1000252]))
      val call_tmp[2187410]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187412 'move' call_tmp[2187410](2187414 'cast' Error[167984] coerce_tmp[2187403]))
      ref i_this[2187422]:owned SystemError[1000257] "temp"
      (2187424 'move' i_this[2187422](2187426 'set reference' _formal_tmp_x[2187390]))
      val tmp[2187428]:SystemError[264864] "temp"
      (2187430 'move' tmp[2187428](2187432 'cast' SystemError[264864] nil[44]))
      (2187435 '.=' i_this[2187422] chpl_p[1000252] tmp[2187428])
      val coerce_tmp[2187439]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2187441 'move' coerce_tmp[2187439](2187443 'cast' object[22] call_tmp[2187410]))
      const-val call_tmp[2187446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187448 'move' call_tmp[2187446](2187450 'ptr_eq' coerce_tmp[2187439] nil[44]))
      if call_tmp[2187446]
      {
        (2187456 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2187459]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2187461]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2187464 call init[968113] initTemp[2187461] call_tmp[2187410])
      (2187467 'move' call_tmp[2187459] initTemp[2187461])
      (2187470 'move' ret[2187395] call_tmp[2187459])
      (2187474 call chpl__autoDestroy[1490020] _formal_tmp_x[2187390])
      (2187478 '=' i__retArg[2187383] ret[2187395])
      (1805799 'move' coerce_tmp[1017192] ret_tmp[1805796])
      const-val _formal_tmp_in_err[1017371]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017375 'move' _formal_tmp_in_err[1017371] coerce_tmp[1017192])
      (715543 'move' call_tmp[715540](468153 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017371]))
      (1782586 '=' error_out[1782573] call_tmp[715540])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1782575] _endcheckAssumingLocal[1782575]
    }
    const-val call_tmp[715552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017381]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017385 'move' coerce_tmp[1017381](2320489 '.v' this[235789] _file_internal[235587]))
    (715555 'move' call_tmp[715552](235833 call qio_file_isopen[232801] coerce_tmp[1017381]))
    const-val call_tmp[2078011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2078013 'move' call_tmp[2078011](2078015 '!' call_tmp[715552]))
    if call_tmp[2078011]
    {
      const-val call_tmp[715569]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017391]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017397 'move' coerce_tmp[1017391](1017393 'cast' int(64)[13] EBADF[224343]))
      const-val ret_tmp[1805874]:owned SystemError[1000257] "temp"
      (235859 call fromSyserr[1017132] coerce_tmp[1017391] "Operation attempted on closed file" ret_tmp[1805874])
      (1805877 'move' call_tmp[715569] ret_tmp[1805874])
      val call_tmp[715574]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017400]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805802]:owned Error[966477] "temp"
      ref i_x[2187483]:owned SystemError[1000257] "temp"
      (2187487 'move' i_x[2187483](2187485 'set reference' call_tmp[715569]))
      ref i__retArg[2187489]:owned Error[966477] "temp"
      (2187493 'move' i__retArg[2187489](2187491 'set reference' ret_tmp[1805802]))
      val _formal_tmp_x[2187496]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2187498 'move' _formal_tmp_x[2187496] i_x[2187483])
      const-val ret[2187501]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2187503]:owned SystemError[1000257] "temp"
      (2187505 'move' i_this[2187503](2187507 'set reference' _formal_tmp_x[2187496]))
      val coerce_tmp[2187509]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2187511 'move' coerce_tmp[2187509](2187513 '.v' i_this[2187503] chpl_p[1000252]))
      val call_tmp[2187516]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187518 'move' call_tmp[2187516](2187520 'cast' Error[167984] coerce_tmp[2187509]))
      ref i_this[2187528]:owned SystemError[1000257] "temp"
      (2187530 'move' i_this[2187528](2187532 'set reference' _formal_tmp_x[2187496]))
      val tmp[2187534]:SystemError[264864] "temp"
      (2187536 'move' tmp[2187534](2187538 'cast' SystemError[264864] nil[44]))
      (2187541 '.=' i_this[2187528] chpl_p[1000252] tmp[2187534])
      val coerce_tmp[2187545]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2187547 'move' coerce_tmp[2187545](2187549 'cast' object[22] call_tmp[2187516]))
      const-val call_tmp[2187552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187554 'move' call_tmp[2187552](2187556 'ptr_eq' coerce_tmp[2187545] nil[44]))
      if call_tmp[2187552]
      {
        (2187562 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2187565]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2187567]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2187570 call init[968113] initTemp[2187567] call_tmp[2187516])
      (2187573 'move' call_tmp[2187565] initTemp[2187567])
      (2187576 'move' ret[2187501] call_tmp[2187565])
      (2187580 call chpl__autoDestroy[1490020] _formal_tmp_x[2187496])
      (2187584 '=' i__retArg[2187489] ret[2187501])
      (1805805 'move' coerce_tmp[1017400] ret_tmp[1805802])
      const-val _formal_tmp_in_err[1017579]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017583 'move' _formal_tmp_in_err[1017579] coerce_tmp[1017400])
      (715577 'move' call_tmp[715574](468155 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017579]))
      (1782599 '=' error_out[1782573] call_tmp[715574])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1782575] _endcheckAssumingLocal[1782575]
    }
    label _endcheckAssumingLocal[1782575]
    (534624 return _void[55])
  }
  function file[235599].deinit[235910](ref arg this[235912]:file[235599]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2177823]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177825 'move' call_tmp[2177823](2177827 '.' this[235912] home[235581]))
    const-val call_tmp[715600]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128031]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128033 'move' coerce_tmp[2128031](2128035 '.v' call_tmp[2177823] _instance[89978]))
    val coerce_tmp[2128038]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128040 'move' coerce_tmp[2128038](2128042 'cast' object[22] coerce_tmp[2128031]))
    const-val call_tmp[2128045]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128047 'move' call_tmp[2128045](2128049 'ptr_eq' coerce_tmp[2128038] nil[44]))
    if call_tmp[2128045]
    {
      (2128055 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (715603 'move' call_tmp[715600](235935 '_wide_get_locale' coerce_tmp[2128031]))
    val isdirect[2052282]:bool[10] "temp"
    (2052287 'move' isdirect[2052282](2052284 call chpl_doDirectExecuteOn[187469] call_tmp[715600]))
    if isdirect[2052282]
    {
      (2052291 call on_fn[935616] this[235912])
    }
    {
      val _args_foron_fn[2052306]:_class_localson_fn[2052298] "temp"
      (2052310 'move' _args_foron_fn[2052306](2052308 'stack allocate class' _class_localson_fn[2052298]))
      (2052312 '.=' _args_foron_fn[2052306] _0_tmp[2052301] call_tmp[715600])
      ref tmp[2052316]:file[235599] "temp"
      (2052320 'move' tmp[2052316](2052318 'set reference' this[235912]))
      (2052322 '.=' _args_foron_fn[2052306] _1_this[2052303] tmp[2052316])
      val _args_vforon_fn[2052326]:c_void_ptr[149] "temp"
      (2052330 'move' _args_vforon_fn[2052326](2052328 'cast_to_void_star' _args_foron_fn[2052306]))
      val _args_sizeon_fn[2052332]:int(64)[13] "temp"
      (2052336 'move' _args_sizeon_fn[2052332](2052334 'sizeof_bundle' _class_localson_fn[2052298]))
      on(2052368 call wrapon_fn[2052338] call_tmp[715600] _args_vforon_fn[2052326] _args_sizeon_fn[2052332] _args_foron_fn[2052306])
    }
    label _enddeinit[1788020]
    const-ref _field_destructor_tmp_[1788018]:locale[28] "temp"
    (1788025 'move' _field_destructor_tmp_[1788018](1788022 '.' this[235912] home[235581]))
    (1788027 call deinit[90188] _field_destructor_tmp_[1788018])
    (534628 return _void[55])
  }
  function file[235599]._style[235979](const  ref arg this[235981]:file[235599], ref arg error_out[1782603]:Error[167984]) : iostyle[231863] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534642]:iostyle[231863] "dead after last mention" "RVV" "temp"
    val ret[235988]:iostyle[231863] "dead at end of block" "insert auto destroy"
    ref call_tmp[2177849]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177851 'move' call_tmp[2177849](2177853 '.' this[235981] home[235581]))
    const-val call_tmp[715638]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128061]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128063 'move' coerce_tmp[2128061](2128065 '.v' call_tmp[2177849] _instance[89978]))
    val coerce_tmp[2128068]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128070 'move' coerce_tmp[2128068](2128072 'cast' object[22] coerce_tmp[2128061]))
    const-val call_tmp[2128075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128077 'move' call_tmp[2128075](2128079 'ptr_eq' coerce_tmp[2128068] nil[44]))
    if call_tmp[2128075]
    {
      (2128085 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (715641 'move' call_tmp[715638](236023 '_wide_get_locale' coerce_tmp[2128061]))
    val error[1782606]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1782608 'move' error[1782606] nil[44])
    val rvfDerefTmp[2048871]:file[235599] "temp"
    (2048875 'move' rvfDerefTmp[2048871](2048873 'deref' this[235981]))
    val isdirect[2052373]:bool[10] "temp"
    (2052378 'move' isdirect[2052373](2052375 call chpl_doDirectExecuteOn[187469] call_tmp[715638]))
    if isdirect[2052373]
    {
      (2052382 call on_fn[935625] rvfDerefTmp[2048871] ret[235988] error[1782606])
    }
    {
      val _args_foron_fn[2052403]:_class_localson_fn[2052391] "temp"
      (2052407 'move' _args_foron_fn[2052403](2052405 'stack allocate class' _class_localson_fn[2052391]))
      (2052409 '.=' _args_foron_fn[2052403] _0_tmp[2052394] call_tmp[715638])
      (2052413 '.=' _args_foron_fn[2052403] _1_rvfDerefTmp[2052396] rvfDerefTmp[2048871])
      ref tmp[2052417]:iostyle[231863] "temp"
      (2052421 'move' tmp[2052417](2052419 'set reference' ret[235988]))
      (2052423 '.=' _args_foron_fn[2052403] _2_ret[2052398] tmp[2052417])
      ref tmp[2052427]:Error[167984] "temp"
      (2052431 'move' tmp[2052427](2052429 'set reference' error[1782606]))
      (2052433 '.=' _args_foron_fn[2052403] _3_error[2052400] tmp[2052427])
      val _args_vforon_fn[2052437]:c_void_ptr[149] "temp"
      (2052441 'move' _args_vforon_fn[2052437](2052439 'cast_to_void_star' _args_foron_fn[2052403]))
      val _args_sizeon_fn[2052443]:int(64)[13] "temp"
      (2052447 'move' _args_sizeon_fn[2052443](2052445 'sizeof_bundle' _class_localson_fn[2052391]))
      on(2052495 call wrapon_fn[2052449] call_tmp[715638] _args_vforon_fn[2052437] _args_sizeon_fn[2052443] _args_foron_fn[2052403])
    }
    val errorExists[2072305]:bool[10] "temp"
    (2072310 'move' errorExists[2072305](2072307 '!=' error[1782606] nil[44]))
    if errorExists[2072305]
    {
      (1782612 '=' error_out[1782603] error[1782606])
      gotoErrorHandlingReturn _end__style[534640] _end__style[534640]
    }
    (1017600 'move' ret[534642] ret[235988])
    label _end__style[534640]
    (534644 return ret[534642])
  }
  function file[235599].close[236043](const  ref arg this[236045]:file[235599], ref arg error_out[1782620]:Error[167984]) : void[4] throws "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1060627]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060631 'move' coerce_tmp[1060627](2320505 '.v' this[236045] _file_internal[235587]))
    const-val call_tmp[2188477]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188479 'move' call_tmp[2188477](2188481 'cast' c_void_ptr[149] coerce_tmp[1060627]))
    const-val call_tmp[2188484]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188486 'move' call_tmp[2188484](2188488 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2188491]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2188493 'move' call_tmp[2188491](2188495 'ptr_eq' call_tmp[2188477] call_tmp[2188484]))
    if call_tmp[2188491]
    {
      const-val call_tmp[715671]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060636]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060642 'move' coerce_tmp[1060636](1060638 'cast' int(64)[13] EBADF[224343]))
      const-val ret_tmp[1805880]:owned SystemError[1000257] "temp"
      (236061 call fromSyserr[1017132] coerce_tmp[1060636] "Operation attempted on an invalid file" ret_tmp[1805880])
      (1805883 'move' call_tmp[715671] ret_tmp[1805880])
      val call_tmp[715676]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060645]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805814]:owned Error[966477] "temp"
      ref i_x[2187695]:owned SystemError[1000257] "temp"
      (2187699 'move' i_x[2187695](2187697 'set reference' call_tmp[715671]))
      ref i__retArg[2187701]:owned Error[966477] "temp"
      (2187705 'move' i__retArg[2187701](2187703 'set reference' ret_tmp[1805814]))
      val _formal_tmp_x[2187708]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2187710 'move' _formal_tmp_x[2187708] i_x[2187695])
      const-val ret[2187713]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2187715]:owned SystemError[1000257] "temp"
      (2187717 'move' i_this[2187715](2187719 'set reference' _formal_tmp_x[2187708]))
      val coerce_tmp[2187721]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2187723 'move' coerce_tmp[2187721](2187725 '.v' i_this[2187715] chpl_p[1000252]))
      val call_tmp[2187728]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187730 'move' call_tmp[2187728](2187732 'cast' Error[167984] coerce_tmp[2187721]))
      ref i_this[2187740]:owned SystemError[1000257] "temp"
      (2187742 'move' i_this[2187740](2187744 'set reference' _formal_tmp_x[2187708]))
      val tmp[2187746]:SystemError[264864] "temp"
      (2187748 'move' tmp[2187746](2187750 'cast' SystemError[264864] nil[44]))
      (2187753 '.=' i_this[2187740] chpl_p[1000252] tmp[2187746])
      val coerce_tmp[2187757]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2187759 'move' coerce_tmp[2187757](2187761 'cast' object[22] call_tmp[2187728]))
      const-val call_tmp[2187764]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187766 'move' call_tmp[2187764](2187768 'ptr_eq' coerce_tmp[2187757] nil[44]))
      if call_tmp[2187764]
      {
        (2187774 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2187777]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2187779]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2187782 call init[968113] initTemp[2187779] call_tmp[2187728])
      (2187785 'move' call_tmp[2187777] initTemp[2187779])
      (2187788 'move' ret[2187713] call_tmp[2187777])
      (2187792 call chpl__autoDestroy[1490020] _formal_tmp_x[2187708])
      (2187796 '=' i__retArg[2187701] ret[2187713])
      (1805817 'move' coerce_tmp[1060645] ret_tmp[1805814])
      const-val _formal_tmp_in_err[1060824]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060828 'move' _formal_tmp_in_err[1060824] coerce_tmp[1060645])
      (715679 'move' call_tmp[715676](468157 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1060824]))
      (1782633 '=' error_out[1782620] call_tmp[715676])
      gotoErrorHandlingReturn _endclose[1782622] _endclose[1782622]
    }
    val err[236072]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169036]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169038 'move' call_tmp[2169036](2169041 call qio_int_to_err[223653] 0))
    (547039 'move' err[236072] call_tmp[2169036])
    ref call_tmp[2177941]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177943 'move' call_tmp[2177941](2177945 '.' this[236045] home[235581]))
    const-val call_tmp[715693]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128361]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128363 'move' coerce_tmp[2128361](2128365 '.v' call_tmp[2177941] _instance[89978]))
    val coerce_tmp[2128368]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128370 'move' coerce_tmp[2128368](2128372 'cast' object[22] coerce_tmp[2128361]))
    const-val call_tmp[2128375]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128377 'move' call_tmp[2128375](2128379 'ptr_eq' coerce_tmp[2128368] nil[44]))
    if call_tmp[2128375]
    {
      (2128385 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (715696 'move' call_tmp[715693](236089 '_wide_get_locale' coerce_tmp[2128361]))
    val rvfDerefTmp[2048892]:file[235599] "temp"
    (2048896 'move' rvfDerefTmp[2048892](2048894 'deref' this[236045]))
    val isdirect[2052500]:bool[10] "temp"
    (2052505 'move' isdirect[2052500](2052502 call chpl_doDirectExecuteOn[187469] call_tmp[715693]))
    if isdirect[2052500]
    {
      (2052509 call on_fn[935634] rvfDerefTmp[2048892] err[236072])
    }
    {
      val _args_foron_fn[2052527]:_class_localson_fn[2052517] "temp"
      (2052531 'move' _args_foron_fn[2052527](2052529 'stack allocate class' _class_localson_fn[2052517]))
      (2052533 '.=' _args_foron_fn[2052527] _0_tmp[2052520] call_tmp[715693])
      (2052537 '.=' _args_foron_fn[2052527] _1_rvfDerefTmp[2052522] rvfDerefTmp[2048892])
      ref tmp[2052541]:syserr[223603] "temp"
      (2052545 'move' tmp[2052541](2052543 'set reference' err[236072]))
      (2052547 '.=' _args_foron_fn[2052527] _2_err[2052524] tmp[2052541])
      val _args_vforon_fn[2052551]:c_void_ptr[149] "temp"
      (2052555 'move' _args_vforon_fn[2052551](2052553 'cast_to_void_star' _args_foron_fn[2052527]))
      val _args_sizeon_fn[2052557]:int(64)[13] "temp"
      (2052561 'move' _args_sizeon_fn[2052557](2052559 'sizeof_bundle' _class_localson_fn[2052517]))
      on(2052601 call wrapon_fn[2052563] call_tmp[715693] _args_vforon_fn[2052551] _args_sizeon_fn[2052557] _args_foron_fn[2052527])
    }
    const-val call_tmp[2168522]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168524 'move' call_tmp[2168522](2168527 call qio_err_iserr[223665] err[236072]))
    const-val call_tmp[2168529]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168531 'move' call_tmp[2168529](2168533 '!=' call_tmp[2168522] 0))
    if call_tmp[2168529]
    {
      val error[1782637]:Error[167984] "error variable" "temp"
      (1782646 'move' error[1782637] nil[44])
      const-val call_tmp[715717]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804786]:string[26] "temp"
      (236128 call tryGetPath[236383] this[236045] ret_tmp[1804786])
      (1804789 'move' call_tmp[715717] ret_tmp[1804786])
      (236129 call ioerror[266269] err[236072] "in file.close" call_tmp[715717] error[1782637])
      val errorExists[2072313]:bool[10] "temp"
      (2072318 'move' errorExists[2072313](2072315 '!=' error[1782637] nil[44]))
      if errorExists[2072313]
      {
        ref i_x[2093403]:string[26] "temp"
        (2093407 'move' i_x[2093403](2093405 'set reference' call_tmp[715717]))
        (2093411 call deinit[30834] i_x[2093403])
        gotoErrorHandling handler[1782638] handler[1782638]
      }
      ref i_x[2093415]:string[26] "temp"
      (2093419 'move' i_x[2093415](2093417 'set reference' call_tmp[715717]))
      (2093423 call deinit[30834] i_x[2093415])
      label handler[1782638]
      val errorExists[2072321]:bool[10] "temp"
      (2072326 'move' errorExists[2072321](2072323 '!=' error[1782637] nil[44]))
      if errorExists[2072321]
      {
        (1782653 '=' error_out[1782620] error[1782637])
        gotoErrorHandlingReturn _endclose[1782622] _endclose[1782622]
      }
    }
    label _endclose[1782622]
    (534652 return _void[55])
  }
  function file[235599].path[236231](const  ref arg this[236233]:file[235599], ref arg error_out[1782665]:Error[167984], ref arg _retArg[1804780]:string[26]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534658]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236240]:string[26] "dead at end of block" "insert auto destroy"
    (1021700 call init[30763] ret[236240])
    val err[236247]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2168979]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168981 'move' call_tmp[2168979](2168984 call qio_int_to_err[223653] 0))
    (547045 'move' err[236247] call_tmp[2168979])
    ref call_tmp[2177879]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177881 'move' call_tmp[2177879](2177883 '.' this[236233] home[235581]))
    const-val call_tmp[715777]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128211]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128213 'move' coerce_tmp[2128211](2128215 '.v' call_tmp[2177879] _instance[89978]))
    val coerce_tmp[2128218]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128220 'move' coerce_tmp[2128218](2128222 'cast' object[22] coerce_tmp[2128211]))
    const-val call_tmp[2128225]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128227 'move' call_tmp[2128225](2128229 'ptr_eq' coerce_tmp[2128218] nil[44]))
    if call_tmp[2128225]
    {
      (2128235 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (715780 'move' call_tmp[715777](236333 '_wide_get_locale' coerce_tmp[2128211]))
    val error[1782668]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1782670 'move' error[1782668] nil[44])
    val rvfDerefTmp[2048906]:file[235599] "temp"
    (2048910 'move' rvfDerefTmp[2048906](2048908 'deref' this[236233]))
    val isdirect[2052606]:bool[10] "temp"
    (2052611 'move' isdirect[2052606](2052608 call chpl_doDirectExecuteOn[187469] call_tmp[715777]))
    if isdirect[2052606]
    {
      (2052615 call on_fn[935652] rvfDerefTmp[2048906] err[236247] ret[236240] error[1782668])
    }
    {
      val _args_foron_fn[2052639]:_class_localson_fn[2052625] "temp"
      (2052643 'move' _args_foron_fn[2052639](2052641 'stack allocate class' _class_localson_fn[2052625]))
      (2052645 '.=' _args_foron_fn[2052639] _0_tmp[2052628] call_tmp[715777])
      (2052649 '.=' _args_foron_fn[2052639] _1_rvfDerefTmp[2052630] rvfDerefTmp[2048906])
      ref tmp[2052653]:syserr[223603] "temp"
      (2052657 'move' tmp[2052653](2052655 'set reference' err[236247]))
      (2052659 '.=' _args_foron_fn[2052639] _2_err[2052632] tmp[2052653])
      ref tmp[2052663]:string[26] "temp"
      (2052667 'move' tmp[2052663](2052665 'set reference' ret[236240]))
      (2052669 '.=' _args_foron_fn[2052639] _3_ret[2052634] tmp[2052663])
      ref tmp[2052673]:Error[167984] "temp"
      (2052677 'move' tmp[2052673](2052675 'set reference' error[1782668]))
      (2052679 '.=' _args_foron_fn[2052639] _4_error[2052636] tmp[2052673])
      val _args_vforon_fn[2052683]:c_void_ptr[149] "temp"
      (2052687 'move' _args_vforon_fn[2052683](2052685 'cast_to_void_star' _args_foron_fn[2052639]))
      val _args_sizeon_fn[2052689]:int(64)[13] "temp"
      (2052693 'move' _args_sizeon_fn[2052689](2052691 'sizeof_bundle' _class_localson_fn[2052625]))
      on(2052749 call wrapon_fn[2052695] call_tmp[715777] _args_vforon_fn[2052683] _args_sizeon_fn[2052689] _args_foron_fn[2052639])
    }
    val errorExists[2072329]:bool[10] "temp"
    (2072334 'move' errorExists[2072329](2072331 '!=' error[1782668] nil[44]))
    if errorExists[2072329]
    {
      (1782674 '=' error_out[1782665] error[1782668])
      ref i_x[2093427]:string[26] "temp"
      (2093431 'move' i_x[2093427](2093429 'set reference' ret[236240]))
      (2093435 call deinit[30834] i_x[2093427])
      gotoErrorHandlingReturn _end_path[534656] _end_path[534656]
    }
    const-val call_tmp[2168420]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168422 'move' call_tmp[2168420](2168425 call qio_err_iserr[223665] err[236247]))
    const-val call_tmp[2168427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168429 'move' call_tmp[2168427](2168431 '!=' call_tmp[2168420] 0))
    if call_tmp[2168427]
    {
      val error[1782682]:Error[167984] "error variable" "temp"
      (1782691 'move' error[1782682] nil[44])
      (236365 call ioerror[266330] err[236247] "in file.path" error[1782682])
      val errorExists[2072337]:bool[10] "temp"
      (2072342 'move' errorExists[2072337](2072339 '!=' error[1782682] nil[44]))
      if errorExists[2072337]
      {
        gotoErrorHandling handler[1782683] handler[1782683]
      }
      label handler[1782683]
      val errorExists[2072345]:bool[10] "temp"
      (2072350 'move' errorExists[2072345](2072347 '!=' error[1782682] nil[44]))
      if errorExists[2072345]
      {
        (1782698 '=' error_out[1782665] error[1782682])
        ref i_x[2093439]:string[26] "temp"
        (2093443 'move' i_x[2093439](2093441 'set reference' ret[236240]))
        (2093447 call deinit[30834] i_x[2093439])
        gotoErrorHandlingReturn _end_path[534656] _end_path[534656]
      }
    }
    (1021698 'move' ret[534658] ret[236240])
    label _end_path[534656]
    (1804782 '=' _retArg[1804780] ret[534658])
    (1804784 return _void[55])
  }
  function file[235599].tryGetPath[236383](const  ref arg this[236385]:file[235599], ref arg _retArg[1804816]:string[26]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534670]:string[26] "dead after last mention" "RVV" "temp"
    val error[1782710]:Error[167984] "error variable" "temp"
    (1782719 'move' error[1782710] nil[44])
    const-val call_tmp[715840]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804774]:string[26] "temp"
    (236394 call path[236231] this[236385] error[1782710] ret_tmp[1804774])
    (1804777 'move' call_tmp[715840] ret_tmp[1804774])
    val errorExists[2072353]:bool[10] "temp"
    (2072358 'move' errorExists[2072353](2072355 '!=' error[1782710] nil[44]))
    if errorExists[2072353]
    {
      gotoErrorHandling handler[1782711] handler[1782711]
    }
    (1021732 'move' ret[534670] call_tmp[715840])
    gotoReturn _end_tryGetPath[534668] _end_tryGetPath[534668]
    label handler[1782711]
    val errorExists[2072361]:bool[10] "temp"
    (2072366 'move' errorExists[2072361](2072363 '!=' error[1782710] nil[44]))
    if errorExists[2072361]
    {
      val call_tmp[715845]:Error[167984] "dead at end of block" "maybe param" "temp"
      (715848 'move' call_tmp[715845] error[1782710])
      const-val call_tmp[715855]:owned Error[966477] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[1021712]:owned Error[966477] "dead at end of block" "delay instantiation" "temp"
      (1021715 call init[968113] initTemp[1021712] call_tmp[715845])
      (715858 'move' call_tmp[715855] initTemp[1021712])
      const-val chpl_anon_error[354573]:owned Error[966477] "dead at end of block" "delay instantiation" "insert auto destroy"
      (547053 'move' chpl_anon_error[354573] call_tmp[715855])
      val inlineImm[2166226]:string[26] "temp"
      (2166229 'move' inlineImm[2166226] "unknown")
      ref i_x[2166231]:string[26] "temp"
      (2166235 'move' i_x[2166231](2166233 'set reference' inlineImm[2166226]))
      val ret[2166238]:string[26] "dead after last mention" "RVV" "temp"
      const-val tmp[2166240]:string[26] "dead after last mention" "temp"
      (2166243 call init=[30774] tmp[2166240] i_x[2166231])
      (2166246 'move' ret[2166238] tmp[2166240])
      (534682 'move' ret[534670] ret[2166238])
      (1815612 call chpl__autoDestroy[1442451] chpl_anon_error[354573])
      gotoReturn _end_tryGetPath[534668] _end_tryGetPath[534668]
      (1815616 call chpl__autoDestroy[1442451] chpl_anon_error[354573])
    }
    label _end_tryGetPath[534668]
    (1804818 '=' _retArg[1804816] ret[534670])
    (1804822 return _void[55])
  }
  function openfd[237290](const in arg fd[237287]:int(32)[95], const in arg hints[237294]:int(32)[95], const  ref arg style[237302]:iostyle[231863], ref arg error_out[1782734]:Error[167984], ref arg _retArg[1804830]:file[235599]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534769]:file[235599] "dead after last mention" "RVV" "temp"
    const-val local_style[237308]:iostyle[231863] "dead at end of block" "insert auto destroy"
    (547089 'move' local_style[237308] style[237302])
    val ret[237314]:file[235599] "dead at end of block" "insert auto destroy"
    (1016540 call init[235593] ret[237314])
    ref call_tmp[2177839]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177841 'move' call_tmp[2177839](2177843 '.' ret[237314] home[235581]))
    const-val call_tmp[716144]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130293]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130295]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130297 'move' call_tmp[2130295](2130300 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130303 'move' call_tmp[2130293] call_tmp[2130295])
    const-val call_tmp[2130306]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130308]:locale[28] "temp"
    (2130311 call chpl_localeID_to_locale[92852] call_tmp[2130293] ret_tmp[2130308])
    (2130314 'move' call_tmp[2130306] ret_tmp[2130308])
    (1803863 'move' call_tmp[716144] call_tmp[2130306])
    (237323 call =[90634] call_tmp[2177839] call_tmp[716144])
    ref i_x[2224809]:locale[28] "temp"
    (2224813 'move' i_x[2224809](2224811 'set reference' call_tmp[716144]))
    (2224817 call deinit[90188] i_x[2224809])
    ref call_tmp[2178041]:qio_file_ptr_t[231458] "dead after last mention" "maybe param" "temp"
    (2178043 'move' call_tmp[2178041](2178045 '.' ret[237314] _file_internal[235587]))
    const-val call_tmp[716156]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716159 'move' call_tmp[716156](237334 call chpl_cnullfile[223593]))
    const-val call_tmp[716161]:syserr[223603] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986543]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986549 'move' coerce_tmp[986543](986545 'cast' int(32)[95] 0))
    (716164 'move' call_tmp[716161](237339 call qio_file_init[232667] call_tmp[2178041] call_tmp[716156] fd[237287] hints[237294] local_style[237308] coerce_tmp[986543]))
    const-val call_tmp[2168352]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168354 'move' call_tmp[2168352](2168357 call qio_err_iserr[223665] call_tmp[716161]))
    const-val call_tmp[2168359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168361 'move' call_tmp[2168359](2168363 '!=' call_tmp[2168352] 0))
    if call_tmp[2168359]
    {
      val path_cs[237346]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016578 'move' path_cs[237346](1016576 'cast' c_string[19] nil[44]))
      const-val call_tmp[716171]:syserr[223603] "dead at end of block" "maybe param" "temp"
      (716174 'move' call_tmp[716171](237355 call qio_file_path_for_fd[233666] fd[237287] path_cs[237346]))
      const-val path[237374]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576760]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2168369]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168371 'move' call_tmp[2168369](2168374 call qio_err_iserr[223665] call_tmp[716171]))
      const-val call_tmp[2168376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168378 'move' call_tmp[2168376](2168380 '!=' call_tmp[2168369] 0))
      if call_tmp[2168376]
      {
        val inlineImm[2166251]:string[26] "temp"
        (2166254 'move' inlineImm[2166251] "unknown")
        ref i_x[2166256]:string[26] "temp"
        (2166260 'move' i_x[2166256](2166258 'set reference' inlineImm[2166251]))
        val ret[2166263]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2166265]:string[26] "dead after last mention" "temp"
        (2166268 call init=[30774] tmp[2166265] i_x[2166256])
        (2166271 'move' ret[2166263] tmp[2166265])
        (576771 'move' tmp[576760] ret[2166263])
      }
      {
        val error[1782737]:Error[167984] "error variable" "temp"
        (1782739 'move' error[1782737] nil[44])
        const-val call_tmp[2165679]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2165681 'move' call_tmp[2165679](2165683 'string_length_bytes' path_cs[237346]))
        val errorExists[2072369]:bool[10] "temp"
        (2072374 'move' errorExists[2072369](2072371 '!=' error[1782737] nil[44]))
        if errorExists[2072369]
        {
          (1782743 '=' error_out[1782734] error[1782737])
          ref i_x[2282416]:file[235599] "temp"
          (2282420 'move' i_x[2282416](2282418 'set reference' ret[237314]))
          (2282424 call deinit[235910] i_x[2282416])
          gotoErrorHandlingReturn _end_openfd[534767] _end_openfd[534767]
        }
        val error[1782752]:Error[167984] "error variable" "temp"
        (1782754 'move' error[1782752] nil[44])
        const-val ret[2104512]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2104514]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        (2104516 'move' call_tmp[2104514](2104518 'cast' c_ptr(uint(8))[937442] path_cs[237346]))
        val error[2104523]:Error[167984] "error variable" "temp"
        (2104525 'move' error[2104523] nil[44])
        const-val ret[2104528]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2104530]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2104532]:Error[167984] "error variable" "temp"
        (2104534 'move' error[2104532] nil[44])
        const-val ret_tmp[2104537]:string[26] "temp"
        (2104540 call decodeByteBuffer[173938] call_tmp[2104514] call_tmp[2165679] replace[173694] error[2104532] ret_tmp[2104537])
        (2104546 'move' call_tmp[2104530] ret_tmp[2104537])
        val errorExists[2104549]:bool[10] "temp"
        (2104551 'move' errorExists[2104549](2104553 '!=' error[2104532] nil[44]))
        if errorExists[2104549]
        {
          (2104558 '=' error[2104523] error[2104532])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104567] _endcreateStringWithNewBuffer[2104567]
        }
        (2104564 'move' ret[2104528] call_tmp[2104530])
        label _endcreateStringWithNewBuffer[2104567]
        val errorExists[2104572]:bool[10] "temp"
        (2104574 'move' errorExists[2104572](2104576 '!=' error[2104523] nil[44]))
        if errorExists[2104572]
        {
          (2104581 '=' error[1782752] error[2104523])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104590] _endcreateStringWithNewBuffer[2104590]
        }
        (2104587 'move' ret[2104512] ret[2104528])
        label _endcreateStringWithNewBuffer[2104590]
        val errorExists[2072377]:bool[10] "temp"
        (2072382 'move' errorExists[2072377](2072379 '!=' error[1782752] nil[44]))
        if errorExists[2072377]
        {
          (1782758 '=' error_out[1782734] error[1782752])
          ref i_x[2282428]:file[235599] "temp"
          (2282432 'move' i_x[2282428](2282430 'set reference' ret[237314]))
          (2282436 call deinit[235910] i_x[2282428])
          gotoErrorHandlingReturn _end_openfd[534767] _end_openfd[534767]
        }
        (576780 'move' tmp[576760] ret[2104512])
      }
      (547099 'move' path[237374] tmp[576760])
      val error[1782766]:Error[167984] "error variable" "temp"
      (1782775 'move' error[1782766] nil[44])
      (237399 call ioerror[266269] call_tmp[716161] "in openfd" path[237374] error[1782766])
      val errorExists[2072385]:bool[10] "temp"
      (2072390 'move' errorExists[2072385](2072387 '!=' error[1782766] nil[44]))
      if errorExists[2072385]
      {
        gotoErrorHandling handler[1782767] handler[1782767]
      }
      label handler[1782767]
      val errorExists[2072393]:bool[10] "temp"
      (2072398 'move' errorExists[2072393](2072395 '!=' error[1782766] nil[44]))
      if errorExists[2072393]
      {
        (1782782 '=' error_out[1782734] error[1782766])
        ref i_x[2093451]:string[26] "temp"
        (2093455 'move' i_x[2093451](2093453 'set reference' path[237374]))
        (2093459 call deinit[30834] i_x[2093451])
        ref i_x[2282440]:file[235599] "temp"
        (2282444 'move' i_x[2282440](2282442 'set reference' ret[237314]))
        (2282448 call deinit[235910] i_x[2282440])
        gotoErrorHandlingReturn _end_openfd[534767] _end_openfd[534767]
      }
      ref i_x[2093463]:string[26] "temp"
      (2093467 'move' i_x[2093463](2093465 'set reference' path[237374]))
      (2093471 call deinit[30834] i_x[2093463])
    }
    (1016538 'move' ret[534769] ret[237314])
    label _end_openfd[534767]
    (1804832 '=' _retArg[1804830] ret[534769])
    (1804836 return _void[55])
  }
  function openfp[237419](const in arg fp[237416]:_file[155], const in arg hints[237423]:int(32)[95], const  ref arg style[237431]:iostyle[231863], ref arg error_out[1782794]:Error[167984], ref arg _retArg[1804850]:file[235599]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534781]:file[235599] "dead after last mention" "RVV" "temp"
    const-val local_style[237437]:iostyle[231863] "dead at end of block" "insert auto destroy"
    (547101 'move' local_style[237437] style[237431])
    val ret[237443]:file[235599] "dead at end of block" "insert auto destroy"
    (1022145 call init[235593] ret[237443])
    ref call_tmp[2177895]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177897 'move' call_tmp[2177895](2177899 '.' ret[237443] home[235581]))
    const-val call_tmp[716183]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130329]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130331]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130333 'move' call_tmp[2130331](2130336 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130339 'move' call_tmp[2130329] call_tmp[2130331])
    const-val call_tmp[2130342]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130344]:locale[28] "temp"
    (2130347 call chpl_localeID_to_locale[92852] call_tmp[2130329] ret_tmp[2130344])
    (2130350 'move' call_tmp[2130342] ret_tmp[2130344])
    (1803869 'move' call_tmp[716183] call_tmp[2130342])
    (237452 call =[90634] call_tmp[2177895] call_tmp[716183])
    ref i_x[2224821]:locale[28] "temp"
    (2224825 'move' i_x[2224821](2224823 'set reference' call_tmp[716183]))
    (2224829 call deinit[90188] i_x[2224821])
    ref call_tmp[2178077]:qio_file_ptr_t[231458] "dead after last mention" "maybe param" "temp"
    (2178079 'move' call_tmp[2178077](2178081 '.' ret[237443] _file_internal[235587]))
    const-val call_tmp[716200]:syserr[223603] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022100]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022106 'move' coerce_tmp[1022100](1022102 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022108]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022114 'move' coerce_tmp[1022108](1022110 'cast' int(32)[95] 1))
    (716203 'move' call_tmp[716200](237468 call qio_file_init[232667] call_tmp[2178077] fp[237416] coerce_tmp[1022100] hints[237423] local_style[237437] coerce_tmp[1022108]))
    const-val call_tmp[2168454]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168456 'move' call_tmp[2168454](2168459 call qio_err_iserr[223665] call_tmp[716200]))
    const-val call_tmp[2168461]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168463 'move' call_tmp[2168461](2168465 '!=' call_tmp[2168454] 0))
    if call_tmp[2168461]
    {
      val path_cs[237475]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022153 'move' path_cs[237475](1022151 'cast' c_string[19] nil[44]))
      const-val call_tmp[716210]:syserr[223603] "dead at end of block" "maybe param" "temp"
      (716213 'move' call_tmp[716210](237484 call qio_file_path_for_fp[233682] fp[237416] path_cs[237475]))
      const-val path[237503]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576787]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2168471]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168473 'move' call_tmp[2168471](2168476 call qio_err_iserr[223665] call_tmp[716210]))
      const-val call_tmp[2168478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2168480 'move' call_tmp[2168478](2168482 '!=' call_tmp[2168471] 0))
      if call_tmp[2168478]
      {
        val inlineImm[2166276]:string[26] "temp"
        (2166279 'move' inlineImm[2166276] "unknown")
        ref i_x[2166281]:string[26] "temp"
        (2166285 'move' i_x[2166281](2166283 'set reference' inlineImm[2166276]))
        val ret[2166288]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2166290]:string[26] "dead after last mention" "temp"
        (2166293 call init=[30774] tmp[2166290] i_x[2166281])
        (2166296 'move' ret[2166288] tmp[2166290])
        (576798 'move' tmp[576787] ret[2166288])
      }
      {
        val error[1782797]:Error[167984] "error variable" "temp"
        (1782799 'move' error[1782797] nil[44])
        const-val call_tmp[2165701]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2165703 'move' call_tmp[2165701](2165705 'string_length_bytes' path_cs[237475]))
        val errorExists[2072401]:bool[10] "temp"
        (2072406 'move' errorExists[2072401](2072403 '!=' error[1782797] nil[44]))
        if errorExists[2072401]
        {
          (1782803 '=' error_out[1782794] error[1782797])
          ref i_x[2282452]:file[235599] "temp"
          (2282456 'move' i_x[2282452](2282454 'set reference' ret[237443]))
          (2282460 call deinit[235910] i_x[2282452])
          gotoErrorHandlingReturn _end_openfp[534779] _end_openfp[534779]
        }
        val error[1782812]:Error[167984] "error variable" "temp"
        (1782814 'move' error[1782812] nil[44])
        const-val ret[2104610]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2104612]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        (2104614 'move' call_tmp[2104612](2104616 'cast' c_ptr(uint(8))[937442] path_cs[237475]))
        val error[2104621]:Error[167984] "error variable" "temp"
        (2104623 'move' error[2104621] nil[44])
        const-val ret[2104626]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2104628]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2104630]:Error[167984] "error variable" "temp"
        (2104632 'move' error[2104630] nil[44])
        const-val ret_tmp[2104635]:string[26] "temp"
        (2104638 call decodeByteBuffer[173938] call_tmp[2104612] call_tmp[2165701] replace[173694] error[2104630] ret_tmp[2104635])
        (2104644 'move' call_tmp[2104628] ret_tmp[2104635])
        val errorExists[2104647]:bool[10] "temp"
        (2104649 'move' errorExists[2104647](2104651 '!=' error[2104630] nil[44]))
        if errorExists[2104647]
        {
          (2104656 '=' error[2104621] error[2104630])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104665] _endcreateStringWithNewBuffer[2104665]
        }
        (2104662 'move' ret[2104626] call_tmp[2104628])
        label _endcreateStringWithNewBuffer[2104665]
        val errorExists[2104670]:bool[10] "temp"
        (2104672 'move' errorExists[2104670](2104674 '!=' error[2104621] nil[44]))
        if errorExists[2104670]
        {
          (2104679 '=' error[1782812] error[2104621])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104688] _endcreateStringWithNewBuffer[2104688]
        }
        (2104685 'move' ret[2104610] ret[2104626])
        label _endcreateStringWithNewBuffer[2104688]
        val errorExists[2072409]:bool[10] "temp"
        (2072414 'move' errorExists[2072409](2072411 '!=' error[1782812] nil[44]))
        if errorExists[2072409]
        {
          (1782818 '=' error_out[1782794] error[1782812])
          ref i_x[2282464]:file[235599] "temp"
          (2282468 'move' i_x[2282464](2282466 'set reference' ret[237443]))
          (2282472 call deinit[235910] i_x[2282464])
          gotoErrorHandlingReturn _end_openfp[534779] _end_openfp[534779]
        }
        (576807 'move' tmp[576787] ret[2104610])
      }
      (547111 'move' path[237503] tmp[576787])
      ref i_cs[2083631]:c_string[19] "temp"
      (2083635 'move' i_cs[2083631](2083633 'set reference' path_cs[237475]))
      const-val call_tmp[2083638]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083640 'move' call_tmp[2083638](2083642 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2083645]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083647 'move' call_tmp[2083645](2083649 'cast' c_string[19] call_tmp[2083638]))
      const-val coerce_tmp[2083652]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2083654 'move' coerce_tmp[2083652] path_cs[237475])
      const-val call_tmp[2083658]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083660 'move' call_tmp[2083658](2083662 'string_compare' coerce_tmp[2083652] call_tmp[2083645]))
      const-val call_tmp[2083665]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083667 'move' call_tmp[2083665](2083669 '!=' call_tmp[2083658] 0))
      if call_tmp[2083665]
      {
        (2083675 call chpl_rt_free_c_string[22717] i_cs[2083631])
      }
      val error[1782826]:Error[167984] "error variable" "temp"
      (1782835 'move' error[1782826] nil[44])
      (237533 call ioerror[266269] call_tmp[716200] "in openfp" path[237503] error[1782826])
      val errorExists[2072417]:bool[10] "temp"
      (2072422 'move' errorExists[2072417](2072419 '!=' error[1782826] nil[44]))
      if errorExists[2072417]
      {
        gotoErrorHandling handler[1782827] handler[1782827]
      }
      label handler[1782827]
      val errorExists[2072425]:bool[10] "temp"
      (2072430 'move' errorExists[2072425](2072427 '!=' error[1782826] nil[44]))
      if errorExists[2072425]
      {
        (1782842 '=' error_out[1782794] error[1782826])
        ref i_x[2093475]:string[26] "temp"
        (2093479 'move' i_x[2093475](2093477 'set reference' path[237503]))
        (2093483 call deinit[30834] i_x[2093475])
        ref i_x[2282476]:file[235599] "temp"
        (2282480 'move' i_x[2282476](2282478 'set reference' ret[237443]))
        (2282484 call deinit[235910] i_x[2282476])
        gotoErrorHandlingReturn _end_openfp[534779] _end_openfp[534779]
      }
      ref i_x[2093487]:string[26] "temp"
      (2093491 'move' i_x[2093487](2093489 'set reference' path[237503]))
      (2093495 call deinit[30834] i_x[2093487])
    }
    (1022143 'move' ret[534781] ret[237443])
    label _end_openfp[534779]
    (1804852 '=' _retArg[1804850] ret[534781])
    (1804856 return _void[55])
  }
  function openmem[237644](const  ref arg style[237640]:iostyle[231863], ref arg error_out[1782854]:Error[167984], ref arg _retArg[1804876]:file[235599]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534805]:file[235599] "dead after last mention" "RVV" "temp"
    const-val local_style[237648]:iostyle[231863] "dead at end of block" "insert auto destroy"
    (547119 'move' local_style[237648] style[237640])
    val ret[237654]:file[235599] "dead at end of block" "insert auto destroy"
    (1060620 call init[235593] ret[237654])
    ref call_tmp[2177931]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177933 'move' call_tmp[2177931](2177935 '.' ret[237654] home[235581]))
    const-val call_tmp[716251]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130365]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130367]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130369 'move' call_tmp[2130367](2130372 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130375 'move' call_tmp[2130365] call_tmp[2130367])
    const-val call_tmp[2130378]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130380]:locale[28] "temp"
    (2130383 call chpl_localeID_to_locale[92852] call_tmp[2130365] ret_tmp[2130380])
    (2130386 'move' call_tmp[2130378] ret_tmp[2130380])
    (1803875 'move' call_tmp[716251] call_tmp[2130378])
    (237663 call =[90634] call_tmp[2177931] call_tmp[716251])
    ref i_x[2224833]:locale[28] "temp"
    (2224837 'move' i_x[2224833](2224835 'set reference' call_tmp[716251]))
    (2224841 call deinit[90188] i_x[2224833])
    ref call_tmp[2178093]:qio_file_ptr_t[231458] "dead after last mention" "maybe param" "temp"
    (2178095 'move' call_tmp[2178093](2178097 '.' ret[237654] _file_internal[235587]))
    const-val call_tmp[716263]:syserr[223603] "dead at end of block" "maybe param" "temp"
    (716266 'move' call_tmp[716263](237674 call qio_file_open_mem[232747] call_tmp[2178093] QBUFFER_PTR_NULL[231498] local_style[237648]))
    const-val call_tmp[2168505]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168507 'move' call_tmp[2168505](2168510 call qio_err_iserr[223665] call_tmp[716263]))
    const-val call_tmp[2168512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168514 'move' call_tmp[2168512](2168516 '!=' call_tmp[2168505] 0))
    if call_tmp[2168512]
    {
      val error[1782856]:Error[167984] "error variable" "temp"
      (1782865 'move' error[1782856] nil[44])
      (237700 call ioerror[266330] call_tmp[716263] "in openmem" error[1782856])
      val errorExists[2072433]:bool[10] "temp"
      (2072438 'move' errorExists[2072433](2072435 '!=' error[1782856] nil[44]))
      if errorExists[2072433]
      {
        gotoErrorHandling handler[1782857] handler[1782857]
      }
      label handler[1782857]
      val errorExists[2072441]:bool[10] "temp"
      (2072446 'move' errorExists[2072441](2072443 '!=' error[1782856] nil[44]))
      if errorExists[2072441]
      {
        (1782872 '=' error_out[1782854] error[1782856])
        ref i_x[2282488]:file[235599] "temp"
        (2282492 'move' i_x[2282488](2282490 'set reference' ret[237654]))
        (2282496 call deinit[235910] i_x[2282488])
        gotoErrorHandlingReturn _end_openmem[534803] _end_openmem[534803]
      }
    }
    (1060618 'move' ret[534805] ret[237654])
    label _end_openmem[534803]
    (1804878 '=' _retArg[1804876] ret[534805])
    (1804880 return _void[55])
  }
  type channel(false,dynamic,true)[985646] val home[985634]:locale[28] "no doc" val _channel_internal[985639]:qio_channel_ptr_t[231484] "no doc" val _readWriteThisFromLocale[985643]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080701] val home[1080689]:locale[28] "no doc" val _channel_internal[1080694]:qio_channel_ptr_t[231484] "no doc" val _readWriteThisFromLocale[1080698]:locale[28] "no doc"
  type channel(true,dynamic,true)[1021844] val home[1021832]:locale[28] "no doc" val _channel_internal[1021837]:qio_channel_ptr_t[231484] "no doc" val _readWriteThisFromLocale[1021841]:locale[28] "no doc"
  type channel(true,dynamic,false)[1060966] val home[1060954]:locale[28] "no doc" val _channel_internal[1060959]:qio_channel_ptr_t[231484] "no doc" val _readWriteThisFromLocale[1060963]:locale[28] "no doc"
  function =[1018458](ref arg lhs[1018460]:channel(false,dynamic,true)[985646], const  ref arg rhs[1018462]:channel(false,dynamic,true)[985646]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2188505]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188507 'move' call_tmp[2188505](2188509 '.' rhs[1018462] home[985634]))
    const-val call_tmp[1018671]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128151]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128153 'move' coerce_tmp[2128151](2128155 '.v' call_tmp[2188505] _instance[89978]))
    val coerce_tmp[2128158]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128160 'move' coerce_tmp[2128158](2128162 'cast' object[22] coerce_tmp[2128151]))
    const-val call_tmp[2128165]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128167 'move' call_tmp[2128165](2128169 'ptr_eq' coerce_tmp[2128158] nil[44]))
    if call_tmp[2128165]
    {
      (2128175 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1018673 'move' call_tmp[1018671](1018675 '_wide_get_locale' coerce_tmp[2128151]))
    val rvfDerefTmp[2048997]:channel(false,dynamic,true)[985646] "temp"
    (2049001 'move' rvfDerefTmp[2048997](2048999 'deref' rhs[1018462]))
    val isdirect[2053346]:bool[10] "temp"
    (2053351 'move' isdirect[2053346](2053348 call chpl_doDirectExecuteOn[187469] call_tmp[1018671]))
    if isdirect[2053346]
    {
      (2053355 call on_fn[1018684] rvfDerefTmp[2048997])
    }
    {
      val _args_foron_fn[2053370]:_class_localson_fn[2053362] "temp"
      (2053374 'move' _args_foron_fn[2053370](2053372 'stack allocate class' _class_localson_fn[2053362]))
      (2053376 '.=' _args_foron_fn[2053370] _0_tmp[2053365] call_tmp[1018671])
      (2053380 '.=' _args_foron_fn[2053370] _1_rvfDerefTmp[2053367] rvfDerefTmp[2048997])
      val _args_vforon_fn[2053384]:c_void_ptr[149] "temp"
      (2053388 'move' _args_vforon_fn[2053384](2053386 'cast_to_void_star' _args_foron_fn[2053370]))
      val _args_sizeon_fn[2053390]:int(64)[13] "temp"
      (2053394 'move' _args_sizeon_fn[2053390](2053392 'sizeof_bundle' _class_localson_fn[2053362]))
      on(2053426 call wrapon_fn[2053396] call_tmp[1018671] _args_vforon_fn[2053384] _args_sizeon_fn[2053390] _args_foron_fn[2053370])
    }
    ref call_tmp[2188515]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188517 'move' call_tmp[2188515](2188519 '.' lhs[1018460] home[985634]))
    const-val call_tmp[1018715]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128181]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128183 'move' coerce_tmp[2128181](2128185 '.v' call_tmp[2188515] _instance[89978]))
    val coerce_tmp[2128188]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128190 'move' coerce_tmp[2128188](2128192 'cast' object[22] coerce_tmp[2128181]))
    const-val call_tmp[2128195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128197 'move' call_tmp[2128195](2128199 'ptr_eq' coerce_tmp[2128188] nil[44]))
    if call_tmp[2128195]
    {
      (2128205 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1018717 'move' call_tmp[1018715](1018719 '_wide_get_locale' coerce_tmp[2128181]))
    val isdirect[2053431]:bool[10] "temp"
    (2053436 'move' isdirect[2053431](2053433 call chpl_doDirectExecuteOn[187469] call_tmp[1018715]))
    if isdirect[2053431]
    {
      (2053440 call on_fn[1018728] lhs[1018460])
    }
    {
      val _args_foron_fn[2053455]:_class_localson_fn[2053447] "temp"
      (2053459 'move' _args_foron_fn[2053455](2053457 'stack allocate class' _class_localson_fn[2053447]))
      (2053461 '.=' _args_foron_fn[2053455] _0_tmp[2053450] call_tmp[1018715])
      ref tmp[2053465]:channel(false,dynamic,true)[985646] "temp"
      (2053469 'move' tmp[2053465](2053467 'set reference' lhs[1018460]))
      (2053471 '.=' _args_foron_fn[2053455] _1_lhs[2053452] tmp[2053465])
      val _args_vforon_fn[2053475]:c_void_ptr[149] "temp"
      (2053479 'move' _args_vforon_fn[2053475](2053477 'cast_to_void_star' _args_foron_fn[2053455]))
      val _args_sizeon_fn[2053481]:int(64)[13] "temp"
      (2053485 'move' _args_sizeon_fn[2053481](2053483 'sizeof_bundle' _class_localson_fn[2053447]))
      on(2053517 call wrapon_fn[2053487] call_tmp[1018715] _args_vforon_fn[2053475] _args_sizeon_fn[2053481] _args_foron_fn[2053455])
    }
    ref call_tmp[2188525]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188527 'move' call_tmp[2188525](2188529 '.' lhs[1018460] home[985634]))
    ref call_tmp[2188535]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188537 'move' call_tmp[2188535](2188539 '.' rhs[1018462] home[985634]))
    (1018766 call =[90634] call_tmp[2188525] call_tmp[2188535])
    const-val coerce_tmp[1019105]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019109 'move' coerce_tmp[1019105](2321489 '.v' rhs[1018462] _channel_internal[985639]))
    (2321483 '.=' lhs[1018460] _channel_internal[985639] coerce_tmp[1019105])
    (1018790 return _void[55])
  }
  function =[1023166](ref arg lhs[1023168]:channel(true,dynamic,true)[1021844], const  ref arg rhs[1023170]:channel(true,dynamic,true)[1021844]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2189546]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189548 'move' call_tmp[2189546](2189550 '.' rhs[1023170] home[1021832]))
    const-val call_tmp[1023379]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128301]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128303 'move' coerce_tmp[2128301](2128305 '.v' call_tmp[2189546] _instance[89978]))
    val coerce_tmp[2128308]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128310 'move' coerce_tmp[2128308](2128312 'cast' object[22] coerce_tmp[2128301]))
    const-val call_tmp[2128315]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128317 'move' call_tmp[2128315](2128319 'ptr_eq' coerce_tmp[2128308] nil[44]))
    if call_tmp[2128315]
    {
      (2128325 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1023381 'move' call_tmp[1023379](1023383 '_wide_get_locale' coerce_tmp[2128301]))
    val rvfDerefTmp[2049074]:channel(true,dynamic,true)[1021844] "temp"
    (2049078 'move' rvfDerefTmp[2049074](2049076 'deref' rhs[1023170]))
    val isdirect[2054029]:bool[10] "temp"
    (2054034 'move' isdirect[2054029](2054031 call chpl_doDirectExecuteOn[187469] call_tmp[1023379]))
    if isdirect[2054029]
    {
      (2054038 call on_fn[1023392] rvfDerefTmp[2049074])
    }
    {
      val _args_foron_fn[2054053]:_class_localson_fn[2054045] "temp"
      (2054057 'move' _args_foron_fn[2054053](2054055 'stack allocate class' _class_localson_fn[2054045]))
      (2054059 '.=' _args_foron_fn[2054053] _0_tmp[2054048] call_tmp[1023379])
      (2054063 '.=' _args_foron_fn[2054053] _1_rvfDerefTmp[2054050] rvfDerefTmp[2049074])
      val _args_vforon_fn[2054067]:c_void_ptr[149] "temp"
      (2054071 'move' _args_vforon_fn[2054067](2054069 'cast_to_void_star' _args_foron_fn[2054053]))
      val _args_sizeon_fn[2054073]:int(64)[13] "temp"
      (2054077 'move' _args_sizeon_fn[2054073](2054075 'sizeof_bundle' _class_localson_fn[2054045]))
      on(2054109 call wrapon_fn[2054079] call_tmp[1023379] _args_vforon_fn[2054067] _args_sizeon_fn[2054073] _args_foron_fn[2054053])
    }
    ref call_tmp[2189556]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189558 'move' call_tmp[2189556](2189560 '.' lhs[1023168] home[1021832]))
    const-val call_tmp[1023423]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128331]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128333 'move' coerce_tmp[2128331](2128335 '.v' call_tmp[2189556] _instance[89978]))
    val coerce_tmp[2128338]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128340 'move' coerce_tmp[2128338](2128342 'cast' object[22] coerce_tmp[2128331]))
    const-val call_tmp[2128345]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128347 'move' call_tmp[2128345](2128349 'ptr_eq' coerce_tmp[2128338] nil[44]))
    if call_tmp[2128345]
    {
      (2128355 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1023425 'move' call_tmp[1023423](1023427 '_wide_get_locale' coerce_tmp[2128331]))
    val isdirect[2054114]:bool[10] "temp"
    (2054119 'move' isdirect[2054114](2054116 call chpl_doDirectExecuteOn[187469] call_tmp[1023423]))
    if isdirect[2054114]
    {
      (2054123 call on_fn[1023436] lhs[1023168])
    }
    {
      val _args_foron_fn[2054138]:_class_localson_fn[2054130] "temp"
      (2054142 'move' _args_foron_fn[2054138](2054140 'stack allocate class' _class_localson_fn[2054130]))
      (2054144 '.=' _args_foron_fn[2054138] _0_tmp[2054133] call_tmp[1023423])
      ref tmp[2054148]:channel(true,dynamic,true)[1021844] "temp"
      (2054152 'move' tmp[2054148](2054150 'set reference' lhs[1023168]))
      (2054154 '.=' _args_foron_fn[2054138] _1_lhs[2054135] tmp[2054148])
      val _args_vforon_fn[2054158]:c_void_ptr[149] "temp"
      (2054162 'move' _args_vforon_fn[2054158](2054160 'cast_to_void_star' _args_foron_fn[2054138]))
      val _args_sizeon_fn[2054164]:int(64)[13] "temp"
      (2054168 'move' _args_sizeon_fn[2054164](2054166 'sizeof_bundle' _class_localson_fn[2054130]))
      on(2054200 call wrapon_fn[2054170] call_tmp[1023423] _args_vforon_fn[2054158] _args_sizeon_fn[2054164] _args_foron_fn[2054138])
    }
    ref call_tmp[2189566]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189568 'move' call_tmp[2189566](2189570 '.' lhs[1023168] home[1021832]))
    ref call_tmp[2189576]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189578 'move' call_tmp[2189576](2189580 '.' rhs[1023170] home[1021832]))
    (1023474 call =[90634] call_tmp[2189566] call_tmp[2189576])
    const-val coerce_tmp[1023813]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023817 'move' coerce_tmp[1023813](2321764 '.v' rhs[1023170] _channel_internal[1021837]))
    (2321758 '.=' lhs[1023168] _channel_internal[1021837] coerce_tmp[1023813])
    (1023498 return _void[55])
  }
  function =[1061879](ref arg lhs[1061881]:channel(true,dynamic,false)[1060966], const  ref arg rhs[1061883]:channel(true,dynamic,false)[1060966]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2224168]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224170 'move' call_tmp[2224168](2224172 '.' rhs[1061883] home[1060954]))
    const-val call_tmp[1062092]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128451]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128453 'move' coerce_tmp[2128451](2128455 '.v' call_tmp[2224168] _instance[89978]))
    val coerce_tmp[2128458]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128460 'move' coerce_tmp[2128458](2128462 'cast' object[22] coerce_tmp[2128451]))
    const-val call_tmp[2128465]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128467 'move' call_tmp[2128465](2128469 'ptr_eq' coerce_tmp[2128458] nil[44]))
    if call_tmp[2128465]
    {
      (2128475 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1062094 'move' call_tmp[1062092](1062096 '_wide_get_locale' coerce_tmp[2128451]))
    val rvfDerefTmp[2049182]:channel(true,dynamic,false)[1060966] "temp"
    (2049186 'move' rvfDerefTmp[2049182](2049184 'deref' rhs[1061883]))
    val isdirect[2054742]:bool[10] "temp"
    (2054747 'move' isdirect[2054742](2054744 call chpl_doDirectExecuteOn[187469] call_tmp[1062092]))
    if isdirect[2054742]
    {
      (2054751 call on_fn[1062105] rvfDerefTmp[2049182])
    }
    {
      val _args_foron_fn[2054766]:_class_localson_fn[2054758] "temp"
      (2054770 'move' _args_foron_fn[2054766](2054768 'stack allocate class' _class_localson_fn[2054758]))
      (2054772 '.=' _args_foron_fn[2054766] _0_tmp[2054761] call_tmp[1062092])
      (2054776 '.=' _args_foron_fn[2054766] _1_rvfDerefTmp[2054763] rvfDerefTmp[2049182])
      val _args_vforon_fn[2054780]:c_void_ptr[149] "temp"
      (2054784 'move' _args_vforon_fn[2054780](2054782 'cast_to_void_star' _args_foron_fn[2054766]))
      val _args_sizeon_fn[2054786]:int(64)[13] "temp"
      (2054790 'move' _args_sizeon_fn[2054786](2054788 'sizeof_bundle' _class_localson_fn[2054758]))
      on(2054822 call wrapon_fn[2054792] call_tmp[1062092] _args_vforon_fn[2054780] _args_sizeon_fn[2054786] _args_foron_fn[2054766])
    }
    ref call_tmp[2224178]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224180 'move' call_tmp[2224178](2224182 '.' lhs[1061881] home[1060954]))
    const-val call_tmp[1062136]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128481]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128483 'move' coerce_tmp[2128481](2128485 '.v' call_tmp[2224178] _instance[89978]))
    val coerce_tmp[2128488]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128490 'move' coerce_tmp[2128488](2128492 'cast' object[22] coerce_tmp[2128481]))
    const-val call_tmp[2128495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128497 'move' call_tmp[2128495](2128499 'ptr_eq' coerce_tmp[2128488] nil[44]))
    if call_tmp[2128495]
    {
      (2128505 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1062138 'move' call_tmp[1062136](1062140 '_wide_get_locale' coerce_tmp[2128481]))
    val isdirect[2054827]:bool[10] "temp"
    (2054832 'move' isdirect[2054827](2054829 call chpl_doDirectExecuteOn[187469] call_tmp[1062136]))
    if isdirect[2054827]
    {
      (2054836 call on_fn[1062149] lhs[1061881])
    }
    {
      val _args_foron_fn[2054851]:_class_localson_fn[2054843] "temp"
      (2054855 'move' _args_foron_fn[2054851](2054853 'stack allocate class' _class_localson_fn[2054843]))
      (2054857 '.=' _args_foron_fn[2054851] _0_tmp[2054846] call_tmp[1062136])
      ref tmp[2054861]:channel(true,dynamic,false)[1060966] "temp"
      (2054865 'move' tmp[2054861](2054863 'set reference' lhs[1061881]))
      (2054867 '.=' _args_foron_fn[2054851] _1_lhs[2054848] tmp[2054861])
      val _args_vforon_fn[2054871]:c_void_ptr[149] "temp"
      (2054875 'move' _args_vforon_fn[2054871](2054873 'cast_to_void_star' _args_foron_fn[2054851]))
      val _args_sizeon_fn[2054877]:int(64)[13] "temp"
      (2054881 'move' _args_sizeon_fn[2054877](2054879 'sizeof_bundle' _class_localson_fn[2054843]))
      on(2054913 call wrapon_fn[2054883] call_tmp[1062136] _args_vforon_fn[2054871] _args_sizeon_fn[2054877] _args_foron_fn[2054851])
    }
    ref call_tmp[2224188]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224190 'move' call_tmp[2224188](2224192 '.' lhs[1061881] home[1060954]))
    ref call_tmp[2224198]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224200 'move' call_tmp[2224198](2224202 '.' rhs[1061883] home[1060954]))
    (1062187 call =[90634] call_tmp[2224188] call_tmp[2224198])
    const-val coerce_tmp[1062335]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062339 'move' coerce_tmp[1062335](2322247 '.v' rhs[1061883] _channel_internal[1060959]))
    (2322241 '.=' lhs[1061881] _channel_internal[1060959] coerce_tmp[1062335])
    (1062211 return _void[55])
  }
  function =[1081611](ref arg lhs[1081613]:channel(false,dynamic,false)[1080701], const  ref arg rhs[1081615]:channel(false,dynamic,false)[1080701]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2229265]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229267 'move' call_tmp[2229265](2229269 '.' rhs[1081615] home[1080689]))
    const-val call_tmp[1081824]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128721]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128723 'move' coerce_tmp[2128721](2128725 '.v' call_tmp[2229265] _instance[89978]))
    val coerce_tmp[2128728]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128730 'move' coerce_tmp[2128728](2128732 'cast' object[22] coerce_tmp[2128721]))
    const-val call_tmp[2128735]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128737 'move' call_tmp[2128735](2128739 'ptr_eq' coerce_tmp[2128728] nil[44]))
    if call_tmp[2128735]
    {
      (2128745 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1081826 'move' call_tmp[1081824](1081828 '_wide_get_locale' coerce_tmp[2128721]))
    val rvfDerefTmp[2049360]:channel(false,dynamic,false)[1080701] "temp"
    (2049364 'move' rvfDerefTmp[2049360](2049362 'deref' rhs[1081615]))
    val isdirect[2055963]:bool[10] "temp"
    (2055968 'move' isdirect[2055963](2055965 call chpl_doDirectExecuteOn[187469] call_tmp[1081824]))
    if isdirect[2055963]
    {
      (2055972 call on_fn[1081837] rvfDerefTmp[2049360])
    }
    {
      val _args_foron_fn[2055987]:_class_localson_fn[2055979] "temp"
      (2055991 'move' _args_foron_fn[2055987](2055989 'stack allocate class' _class_localson_fn[2055979]))
      (2055993 '.=' _args_foron_fn[2055987] _0_tmp[2055982] call_tmp[1081824])
      (2055997 '.=' _args_foron_fn[2055987] _1_rvfDerefTmp[2055984] rvfDerefTmp[2049360])
      val _args_vforon_fn[2056001]:c_void_ptr[149] "temp"
      (2056005 'move' _args_vforon_fn[2056001](2056003 'cast_to_void_star' _args_foron_fn[2055987]))
      val _args_sizeon_fn[2056007]:int(64)[13] "temp"
      (2056011 'move' _args_sizeon_fn[2056007](2056009 'sizeof_bundle' _class_localson_fn[2055979]))
      on(2056043 call wrapon_fn[2056013] call_tmp[1081824] _args_vforon_fn[2056001] _args_sizeon_fn[2056007] _args_foron_fn[2055987])
    }
    ref call_tmp[2229275]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229277 'move' call_tmp[2229275](2229279 '.' lhs[1081613] home[1080689]))
    const-val call_tmp[1081868]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128751]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128753 'move' coerce_tmp[2128751](2128755 '.v' call_tmp[2229275] _instance[89978]))
    val coerce_tmp[2128758]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128760 'move' coerce_tmp[2128758](2128762 'cast' object[22] coerce_tmp[2128751]))
    const-val call_tmp[2128765]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128767 'move' call_tmp[2128765](2128769 'ptr_eq' coerce_tmp[2128758] nil[44]))
    if call_tmp[2128765]
    {
      (2128775 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1081870 'move' call_tmp[1081868](1081872 '_wide_get_locale' coerce_tmp[2128751]))
    val isdirect[2056048]:bool[10] "temp"
    (2056053 'move' isdirect[2056048](2056050 call chpl_doDirectExecuteOn[187469] call_tmp[1081868]))
    if isdirect[2056048]
    {
      (2056057 call on_fn[1081881] lhs[1081613])
    }
    {
      val _args_foron_fn[2056072]:_class_localson_fn[2056064] "temp"
      (2056076 'move' _args_foron_fn[2056072](2056074 'stack allocate class' _class_localson_fn[2056064]))
      (2056078 '.=' _args_foron_fn[2056072] _0_tmp[2056067] call_tmp[1081868])
      ref tmp[2056082]:channel(false,dynamic,false)[1080701] "temp"
      (2056086 'move' tmp[2056082](2056084 'set reference' lhs[1081613]))
      (2056088 '.=' _args_foron_fn[2056072] _1_lhs[2056069] tmp[2056082])
      val _args_vforon_fn[2056092]:c_void_ptr[149] "temp"
      (2056096 'move' _args_vforon_fn[2056092](2056094 'cast_to_void_star' _args_foron_fn[2056072]))
      val _args_sizeon_fn[2056098]:int(64)[13] "temp"
      (2056102 'move' _args_sizeon_fn[2056098](2056100 'sizeof_bundle' _class_localson_fn[2056064]))
      on(2056134 call wrapon_fn[2056104] call_tmp[1081868] _args_vforon_fn[2056092] _args_sizeon_fn[2056098] _args_foron_fn[2056072])
    }
    ref call_tmp[2229285]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229287 'move' call_tmp[2229285](2229289 '.' lhs[1081613] home[1080689]))
    ref call_tmp[2229295]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229297 'move' call_tmp[2229295](2229299 '.' rhs[1081615] home[1080689]))
    (1081919 call =[90634] call_tmp[2229285] call_tmp[2229295])
    const-val coerce_tmp[1082067]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082071 'move' coerce_tmp[1082067](2322410 '.v' rhs[1081615] _channel_internal[1080694]))
    (2322404 '.=' lhs[1081613] _channel_internal[1080694] coerce_tmp[1082067])
    (1081943 return _void[55])
  }
  function channel(false,dynamic,true)[985646].init[1017890](ref arg this[1017896]:channel(false,dynamic,true)[985646]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2130437]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130439]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130441 'move' call_tmp[2130439](2130444 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130447 'move' call_tmp[2130437] call_tmp[2130439])
    const-val call_tmp[2130450]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130452]:locale[28] "temp"
    (2130455 call chpl_localeID_to_locale[92852] call_tmp[2130437] ret_tmp[2130452])
    (2130458 'move' call_tmp[2130450] ret_tmp[2130452])
    (1017962 '.=' this[1017896] home[985634] call_tmp[2130450])
    val tmp[1017967]:qio_channel_ptr_t[231484] "dead after last mention" "temp"
    (1017969 'move' tmp[1017967] QIO_CHANNEL_PTR_NULL[231487])
    (1017973 '.=' this[1017896] _channel_internal[985639] tmp[1017967])
    val tmp[1017978]:locale[28] "dead after last mention" "temp"
    (1017980 call init=[90170] tmp[1017978] nilLocale[89942])
    (1017983 '.=' this[1017896] _readWriteThisFromLocale[985643] tmp[1017978])
    (1017988 return _void[55])
  }
  function channel(true,dynamic,true)[1021844].init[1022926](ref arg this[1022932]:channel(true,dynamic,true)[1021844]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2130473]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130475]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130477 'move' call_tmp[2130475](2130480 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130483 'move' call_tmp[2130473] call_tmp[2130475])
    const-val call_tmp[2130486]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130488]:locale[28] "temp"
    (2130491 call chpl_localeID_to_locale[92852] call_tmp[2130473] ret_tmp[2130488])
    (2130494 'move' call_tmp[2130486] ret_tmp[2130488])
    (1022998 '.=' this[1022932] home[1021832] call_tmp[2130486])
    val tmp[1023003]:qio_channel_ptr_t[231484] "dead after last mention" "temp"
    (1023005 'move' tmp[1023003] QIO_CHANNEL_PTR_NULL[231487])
    (1023009 '.=' this[1022932] _channel_internal[1021837] tmp[1023003])
    val tmp[1023014]:locale[28] "dead after last mention" "temp"
    (1023016 call init=[90170] tmp[1023014] nilLocale[89942])
    (1023019 '.=' this[1022932] _readWriteThisFromLocale[1021841] tmp[1023014])
    (1023024 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].init[1061639](ref arg this[1061645]:channel(true,dynamic,false)[1060966]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2130509]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130511]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130513 'move' call_tmp[2130511](2130516 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130519 'move' call_tmp[2130509] call_tmp[2130511])
    const-val call_tmp[2130522]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130524]:locale[28] "temp"
    (2130527 call chpl_localeID_to_locale[92852] call_tmp[2130509] ret_tmp[2130524])
    (2130530 'move' call_tmp[2130522] ret_tmp[2130524])
    (1061711 '.=' this[1061645] home[1060954] call_tmp[2130522])
    val tmp[1061716]:qio_channel_ptr_t[231484] "dead after last mention" "temp"
    (1061718 'move' tmp[1061716] QIO_CHANNEL_PTR_NULL[231487])
    (1061722 '.=' this[1061645] _channel_internal[1060959] tmp[1061716])
    val tmp[1061727]:locale[28] "dead after last mention" "temp"
    (1061729 call init=[90170] tmp[1061727] nilLocale[89942])
    (1061732 '.=' this[1061645] _readWriteThisFromLocale[1060963] tmp[1061727])
    (1061737 return _void[55])
  }
  function channel(false,dynamic,false)[1080701].init[1081371](ref arg this[1081377]:channel(false,dynamic,false)[1080701]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2130617]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130619]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130621 'move' call_tmp[2130619](2130624 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130627 'move' call_tmp[2130617] call_tmp[2130619])
    const-val call_tmp[2130630]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130632]:locale[28] "temp"
    (2130635 call chpl_localeID_to_locale[92852] call_tmp[2130617] ret_tmp[2130632])
    (2130638 'move' call_tmp[2130630] ret_tmp[2130632])
    (1081443 '.=' this[1081377] home[1080689] call_tmp[2130630])
    val tmp[1081448]:qio_channel_ptr_t[231484] "dead after last mention" "temp"
    (1081450 'move' tmp[1081448] QIO_CHANNEL_PTR_NULL[231487])
    (1081454 '.=' this[1081377] _channel_internal[1080694] tmp[1081448])
    val tmp[1081459]:locale[28] "dead after last mention" "temp"
    (1081461 call init=[90170] tmp[1081459] nilLocale[89942])
    (1081464 '.=' this[1081377] _readWriteThisFromLocale[1080698] tmp[1081459])
    (1081469 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].init[1068407](ref arg this[1068413]:channel(true,dynamic,false)[1060966], const  ref arg home[1068421]:locale[28], const in arg _channel_internal[1068423]:qio_channel_ptr_t[231484], const  ref arg _readWriteThisFromLocale[1068425]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068473]:locale[28] "dead after last mention" "temp"
    (1068475 call init=[90170] tmp[1068473] home[1068421])
    (1068479 '.=' this[1068413] home[1060954] tmp[1068473])
    (1068490 '.=' this[1068413] _channel_internal[1060959] _channel_internal[1068423])
    val tmp[1068495]:locale[28] "dead after last mention" "temp"
    (1068497 call init=[90170] tmp[1068495] _readWriteThisFromLocale[1068425])
    (1068500 '.=' this[1068413] _readWriteThisFromLocale[1060963] tmp[1068495])
    (1068505 return _void[55])
  }
  function channel(false,dynamic,true)[985646].init[1017666](ref arg this[1017672]:channel(false,dynamic,true)[985646], const  ref arg f[1017680]:file[235599], ref arg error[1017682]:syserr[223603], const in arg hints[1017686]:int(32)[95], const in arg start[1017692]:int(64)[13], const in arg end[1017698]:int(64)[13], const in arg local_style[1017700]:iostyle[231863]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1017877]:syserr[223603] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017716 call init[1017890] this[1017672])
    ref call_tmp[2177869]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177871 'move' call_tmp[2177869](2177873 '.' f[1017680] home[235581]))
    const-val call_tmp[1017731]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128121]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128123 'move' coerce_tmp[2128121](2128125 '.v' call_tmp[2177869] _instance[89978]))
    val coerce_tmp[2128128]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128130 'move' coerce_tmp[2128128](2128132 'cast' object[22] coerce_tmp[2128121]))
    const-val call_tmp[2128135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128137 'move' call_tmp[2128135](2128139 'ptr_eq' coerce_tmp[2128128] nil[44]))
    if call_tmp[2128135]
    {
      (2128145 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1017733 'move' call_tmp[1017731](1017735 '_wide_get_locale' coerce_tmp[2128121]))
    val rvfDerefTmp[2048963]:file[235599] "temp"
    (2048967 'move' rvfDerefTmp[2048963](2048965 'deref' f[1017680]))
    val isdirect[2053159]:bool[10] "temp"
    (2053164 'move' isdirect[2053159](2053161 call chpl_doDirectExecuteOn[187469] call_tmp[1017731]))
    if isdirect[2053159]
    {
      (2053168 call on_fn[1017744] start[1017692] rvfDerefTmp[2048963] _formal_tmp_error[1017877] end[1017698] hints[1017686] local_style[1017700] this[1017672])
    }
    {
      val _args_foron_fn[2053201]:_class_localson_fn[2053181] "temp"
      (2053205 'move' _args_foron_fn[2053201](2053203 'stack allocate class' _class_localson_fn[2053181]))
      (2053207 '.=' _args_foron_fn[2053201] _0_tmp[2053184] call_tmp[1017731])
      (2053211 '.=' _args_foron_fn[2053201] _1_start[2053186] start[1017692])
      (2053215 '.=' _args_foron_fn[2053201] _2_rvfDerefTmp[2053188] rvfDerefTmp[2048963])
      ref tmp[2053219]:syserr[223603] "temp"
      (2053223 'move' tmp[2053219](2053221 'set reference' _formal_tmp_error[1017877]))
      (2053225 '.=' _args_foron_fn[2053201] _3__formal_tmp_error[2053190] tmp[2053219])
      (2053229 '.=' _args_foron_fn[2053201] _4_end[2053192] end[1017698])
      (2053233 '.=' _args_foron_fn[2053201] _5_hints[2053194] hints[1017686])
      (2053237 '.=' _args_foron_fn[2053201] _6_rvfDerefTmp[2053196] local_style[1017700])
      ref tmp[2053241]:channel(false,dynamic,true)[985646] "temp"
      (2053245 'move' tmp[2053241](2053243 'set reference' this[1017672]))
      (2053247 '.=' _args_foron_fn[2053201] _7_this[2053198] tmp[2053241])
      val _args_vforon_fn[2053251]:c_void_ptr[149] "temp"
      (2053255 'move' _args_vforon_fn[2053251](2053253 'cast_to_void_star' _args_foron_fn[2053201]))
      val _args_sizeon_fn[2053257]:int(64)[13] "temp"
      (2053261 'move' _args_sizeon_fn[2053257](2053259 'sizeof_bundle' _class_localson_fn[2053181]))
      on(2053341 call wrapon_fn[2053263] call_tmp[1017731] _args_vforon_fn[2053251] _args_sizeon_fn[2053257] _args_foron_fn[2053201])
    }
    label _endinit[1017887]
    (1815944 '=' error[1017682] _formal_tmp_error[1017877])
    (1017874 return _void[55])
  }
  function channel(true,dynamic,true)[1021844].init[1022702](ref arg this[1022708]:channel(true,dynamic,true)[1021844], const  ref arg f[1022716]:file[235599], ref arg error[1022718]:syserr[223603], const in arg hints[1022722]:int(32)[95], const in arg start[1022728]:int(64)[13], const in arg end[1022734]:int(64)[13], const in arg local_style[1022736]:iostyle[231863]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1022913]:syserr[223603] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022752 call init[1022926] this[1022708])
    ref call_tmp[2177915]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177917 'move' call_tmp[2177915](2177919 '.' f[1022716] home[235581]))
    const-val call_tmp[1022767]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128271]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128273 'move' coerce_tmp[2128271](2128275 '.v' call_tmp[2177915] _instance[89978]))
    val coerce_tmp[2128278]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128280 'move' coerce_tmp[2128278](2128282 'cast' object[22] coerce_tmp[2128271]))
    const-val call_tmp[2128285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128287 'move' call_tmp[2128285](2128289 'ptr_eq' coerce_tmp[2128278] nil[44]))
    if call_tmp[2128285]
    {
      (2128295 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1022769 'move' call_tmp[1022767](1022771 '_wide_get_locale' coerce_tmp[2128271]))
    val rvfDerefTmp[2049053]:file[235599] "temp"
    (2049057 'move' rvfDerefTmp[2049053](2049055 'deref' f[1022716]))
    val isdirect[2053842]:bool[10] "temp"
    (2053847 'move' isdirect[2053842](2053844 call chpl_doDirectExecuteOn[187469] call_tmp[1022767]))
    if isdirect[2053842]
    {
      (2053851 call on_fn[1022780] local_style[1022736] end[1022734] start[1022728] rvfDerefTmp[2049053] _formal_tmp_error[1022913] this[1022708] hints[1022722])
    }
    {
      val _args_foron_fn[2053884]:_class_localson_fn[2053864] "temp"
      (2053888 'move' _args_foron_fn[2053884](2053886 'stack allocate class' _class_localson_fn[2053864]))
      (2053890 '.=' _args_foron_fn[2053884] _0_tmp[2053867] call_tmp[1022767])
      (2053894 '.=' _args_foron_fn[2053884] _1_rvfDerefTmp[2053869] local_style[1022736])
      (2053898 '.=' _args_foron_fn[2053884] _2_end[2053871] end[1022734])
      (2053902 '.=' _args_foron_fn[2053884] _3_start[2053873] start[1022728])
      (2053906 '.=' _args_foron_fn[2053884] _4_rvfDerefTmp[2053875] rvfDerefTmp[2049053])
      ref tmp[2053910]:syserr[223603] "temp"
      (2053914 'move' tmp[2053910](2053912 'set reference' _formal_tmp_error[1022913]))
      (2053916 '.=' _args_foron_fn[2053884] _5__formal_tmp_error[2053877] tmp[2053910])
      ref tmp[2053920]:channel(true,dynamic,true)[1021844] "temp"
      (2053924 'move' tmp[2053920](2053922 'set reference' this[1022708]))
      (2053926 '.=' _args_foron_fn[2053884] _6_this[2053879] tmp[2053920])
      (2053930 '.=' _args_foron_fn[2053884] _7_hints[2053881] hints[1022722])
      val _args_vforon_fn[2053934]:c_void_ptr[149] "temp"
      (2053938 'move' _args_vforon_fn[2053934](2053936 'cast_to_void_star' _args_foron_fn[2053884]))
      val _args_sizeon_fn[2053940]:int(64)[13] "temp"
      (2053944 'move' _args_sizeon_fn[2053940](2053942 'sizeof_bundle' _class_localson_fn[2053864]))
      on(2054024 call wrapon_fn[2053946] call_tmp[1022767] _args_vforon_fn[2053934] _args_sizeon_fn[2053940] _args_foron_fn[2053884])
    }
    label _endinit[1022923]
    (1815967 '=' error[1022718] _formal_tmp_error[1022913])
    (1022910 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].init[1061415](ref arg this[1061421]:channel(true,dynamic,false)[1060966], const  ref arg f[1061429]:file[235599], ref arg error[1061431]:syserr[223603], const in arg hints[1061435]:int(32)[95], const in arg start[1061441]:int(64)[13], const in arg end[1061447]:int(64)[13], const in arg local_style[1061449]:iostyle[231863]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061626]:syserr[223603] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061465 call init[1061639] this[1061421])
    ref call_tmp[2177961]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177963 'move' call_tmp[2177961](2177965 '.' f[1061429] home[235581]))
    const-val call_tmp[1061480]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128421]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128423 'move' coerce_tmp[2128421](2128425 '.v' call_tmp[2177961] _instance[89978]))
    val coerce_tmp[2128428]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128430 'move' coerce_tmp[2128428](2128432 'cast' object[22] coerce_tmp[2128421]))
    const-val call_tmp[2128435]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128437 'move' call_tmp[2128435](2128439 'ptr_eq' coerce_tmp[2128428] nil[44]))
    if call_tmp[2128435]
    {
      (2128445 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1061482 'move' call_tmp[1061480](1061484 '_wide_get_locale' coerce_tmp[2128421]))
    val rvfDerefTmp[2049148]:file[235599] "temp"
    (2049152 'move' rvfDerefTmp[2049148](2049150 'deref' f[1061429]))
    val isdirect[2054555]:bool[10] "temp"
    (2054560 'move' isdirect[2054555](2054557 call chpl_doDirectExecuteOn[187469] call_tmp[1061480]))
    if isdirect[2054555]
    {
      (2054564 call on_fn[1061493] this[1061421] start[1061441] rvfDerefTmp[2049148] _formal_tmp_error[1061626] end[1061447] hints[1061435] local_style[1061449])
    }
    {
      val _args_foron_fn[2054597]:_class_localson_fn[2054577] "temp"
      (2054601 'move' _args_foron_fn[2054597](2054599 'stack allocate class' _class_localson_fn[2054577]))
      (2054603 '.=' _args_foron_fn[2054597] _0_tmp[2054580] call_tmp[1061480])
      ref tmp[2054607]:channel(true,dynamic,false)[1060966] "temp"
      (2054611 'move' tmp[2054607](2054609 'set reference' this[1061421]))
      (2054613 '.=' _args_foron_fn[2054597] _1_this[2054582] tmp[2054607])
      (2054617 '.=' _args_foron_fn[2054597] _2_start[2054584] start[1061441])
      (2054621 '.=' _args_foron_fn[2054597] _3_rvfDerefTmp[2054586] rvfDerefTmp[2049148])
      ref tmp[2054625]:syserr[223603] "temp"
      (2054629 'move' tmp[2054625](2054627 'set reference' _formal_tmp_error[1061626]))
      (2054631 '.=' _args_foron_fn[2054597] _4__formal_tmp_error[2054588] tmp[2054625])
      (2054635 '.=' _args_foron_fn[2054597] _5_end[2054590] end[1061447])
      (2054639 '.=' _args_foron_fn[2054597] _6_hints[2054592] hints[1061435])
      (2054643 '.=' _args_foron_fn[2054597] _7_rvfDerefTmp[2054594] local_style[1061449])
      val _args_vforon_fn[2054647]:c_void_ptr[149] "temp"
      (2054651 'move' _args_vforon_fn[2054647](2054649 'cast_to_void_star' _args_foron_fn[2054597]))
      val _args_sizeon_fn[2054653]:int(64)[13] "temp"
      (2054657 'move' _args_sizeon_fn[2054653](2054655 'sizeof_bundle' _class_localson_fn[2054577]))
      on(2054737 call wrapon_fn[2054659] call_tmp[1061480] _args_vforon_fn[2054647] _args_sizeon_fn[2054653] _args_foron_fn[2054597])
    }
    label _endinit[1061636]
    (1817192 '=' error[1061431] _formal_tmp_error[1061626])
    (1061623 return _void[55])
  }
  function channel(false,dynamic,false)[1080701].init[1081147](ref arg this[1081153]:channel(false,dynamic,false)[1080701], const  ref arg f[1081161]:file[235599], ref arg error[1081163]:syserr[223603], const in arg hints[1081167]:int(32)[95], const in arg start[1081173]:int(64)[13], const in arg end[1081179]:int(64)[13], const in arg local_style[1081181]:iostyle[231863]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081358]:syserr[223603] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081197 call init[1081371] this[1081153])
    ref call_tmp[2177981]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177983 'move' call_tmp[2177981](2177985 '.' f[1081161] home[235581]))
    const-val call_tmp[1081212]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128691]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128693 'move' coerce_tmp[2128691](2128695 '.v' call_tmp[2177981] _instance[89978]))
    val coerce_tmp[2128698]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128700 'move' coerce_tmp[2128698](2128702 'cast' object[22] coerce_tmp[2128691]))
    const-val call_tmp[2128705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128707 'move' call_tmp[2128705](2128709 'ptr_eq' coerce_tmp[2128698] nil[44]))
    if call_tmp[2128705]
    {
      (2128715 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1081214 'move' call_tmp[1081212](1081216 '_wide_get_locale' coerce_tmp[2128691]))
    val rvfDerefTmp[2049326]:file[235599] "temp"
    (2049330 'move' rvfDerefTmp[2049326](2049328 'deref' f[1081161]))
    val isdirect[2055776]:bool[10] "temp"
    (2055781 'move' isdirect[2055776](2055778 call chpl_doDirectExecuteOn[187469] call_tmp[1081212]))
    if isdirect[2055776]
    {
      (2055785 call on_fn[1081225] start[1081173] rvfDerefTmp[2049326] _formal_tmp_error[1081358] end[1081179] this[1081153] hints[1081167] local_style[1081181])
    }
    {
      val _args_foron_fn[2055818]:_class_localson_fn[2055798] "temp"
      (2055822 'move' _args_foron_fn[2055818](2055820 'stack allocate class' _class_localson_fn[2055798]))
      (2055824 '.=' _args_foron_fn[2055818] _0_tmp[2055801] call_tmp[1081212])
      (2055828 '.=' _args_foron_fn[2055818] _1_start[2055803] start[1081173])
      (2055832 '.=' _args_foron_fn[2055818] _2_rvfDerefTmp[2055805] rvfDerefTmp[2049326])
      ref tmp[2055836]:syserr[223603] "temp"
      (2055840 'move' tmp[2055836](2055838 'set reference' _formal_tmp_error[1081358]))
      (2055842 '.=' _args_foron_fn[2055818] _3__formal_tmp_error[2055807] tmp[2055836])
      (2055846 '.=' _args_foron_fn[2055818] _4_end[2055809] end[1081179])
      ref tmp[2055850]:channel(false,dynamic,false)[1080701] "temp"
      (2055854 'move' tmp[2055850](2055852 'set reference' this[1081153]))
      (2055856 '.=' _args_foron_fn[2055818] _5_this[2055811] tmp[2055850])
      (2055860 '.=' _args_foron_fn[2055818] _6_hints[2055813] hints[1081167])
      (2055864 '.=' _args_foron_fn[2055818] _7_rvfDerefTmp[2055815] local_style[1081181])
      val _args_vforon_fn[2055868]:c_void_ptr[149] "temp"
      (2055872 'move' _args_vforon_fn[2055868](2055870 'cast_to_void_star' _args_foron_fn[2055818]))
      val _args_sizeon_fn[2055874]:int(64)[13] "temp"
      (2055878 'move' _args_sizeon_fn[2055874](2055876 'sizeof_bundle' _class_localson_fn[2055798]))
      on(2055958 call wrapon_fn[2055880] call_tmp[1081212] _args_vforon_fn[2055868] _args_sizeon_fn[2055874] _args_foron_fn[2055818])
    }
    label _endinit[1081368]
    (1817353 '=' error[1081163] _formal_tmp_error[1081358])
    (1081355 return _void[55])
  }
  function channel(false,dynamic,true)[985646].deinit[1444880](ref arg this[1444886]:channel(false,dynamic,true)[985646]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2188545]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188547 'move' call_tmp[2188545](2188549 '.' this[1444886] home[985634]))
    const-val call_tmp[1444902]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2129207]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129209 'move' coerce_tmp[2129207](2129211 '.v' call_tmp[2188545] _instance[89978]))
    val coerce_tmp[2129214]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129216 'move' coerce_tmp[2129214](2129218 'cast' object[22] coerce_tmp[2129207]))
    const-val call_tmp[2129221]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129223 'move' call_tmp[2129221](2129225 'ptr_eq' coerce_tmp[2129214] nil[44]))
    if call_tmp[2129221]
    {
      (2129231 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1444904 'move' call_tmp[1444902](1444906 '_wide_get_locale' coerce_tmp[2129207]))
    val isdirect[2062013]:bool[10] "temp"
    (2062018 'move' isdirect[2062013](2062015 call chpl_doDirectExecuteOn[187469] call_tmp[1444902]))
    if isdirect[2062013]
    {
      (2062022 call on_fn[1444915] this[1444886])
    }
    {
      val _args_foron_fn[2062037]:_class_localson_fn[2062029] "temp"
      (2062041 'move' _args_foron_fn[2062037](2062039 'stack allocate class' _class_localson_fn[2062029]))
      (2062043 '.=' _args_foron_fn[2062037] _0_tmp[2062032] call_tmp[1444902])
      ref tmp[2062047]:channel(false,dynamic,true)[985646] "temp"
      (2062051 'move' tmp[2062047](2062049 'set reference' this[1444886]))
      (2062053 '.=' _args_foron_fn[2062037] _1_this[2062034] tmp[2062047])
      val _args_vforon_fn[2062057]:c_void_ptr[149] "temp"
      (2062061 'move' _args_vforon_fn[2062057](2062059 'cast_to_void_star' _args_foron_fn[2062037]))
      val _args_sizeon_fn[2062063]:int(64)[13] "temp"
      (2062067 'move' _args_sizeon_fn[2062063](2062065 'sizeof_bundle' _class_localson_fn[2062029]))
      on(2062099 call wrapon_fn[2062069] call_tmp[1444902] _args_vforon_fn[2062057] _args_sizeon_fn[2062063] _args_foron_fn[2062037])
    }
    label _enddeinit[1789304]
    const-ref _field_destructor_tmp_[1789302]:locale[28] "temp"
    (1789309 'move' _field_destructor_tmp_[1789302](1789306 '.' this[1444886] _readWriteThisFromLocale[985643]))
    (1789311 call deinit[90188] _field_destructor_tmp_[1789302])
    const-ref _field_destructor_tmp_[1789314]:locale[28] "temp"
    (1789319 'move' _field_destructor_tmp_[1789314](1789316 '.' this[1444886] home[985634]))
    (1789321 call deinit[90188] _field_destructor_tmp_[1789314])
    (1444949 return _void[55])
  }
  function channel(true,dynamic,true)[1021844].deinit[1507859](ref arg this[1507865]:channel(true,dynamic,true)[1021844]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2189636]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189638 'move' call_tmp[2189636](2189640 '.' this[1507865] home[1021832]))
    const-val call_tmp[1507881]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2129237]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129239 'move' coerce_tmp[2129237](2129241 '.v' call_tmp[2189636] _instance[89978]))
    val coerce_tmp[2129244]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129246 'move' coerce_tmp[2129244](2129248 'cast' object[22] coerce_tmp[2129237]))
    const-val call_tmp[2129251]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129253 'move' call_tmp[2129251](2129255 'ptr_eq' coerce_tmp[2129244] nil[44]))
    if call_tmp[2129251]
    {
      (2129261 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1507883 'move' call_tmp[1507881](1507885 '_wide_get_locale' coerce_tmp[2129237]))
    val isdirect[2063804]:bool[10] "temp"
    (2063809 'move' isdirect[2063804](2063806 call chpl_doDirectExecuteOn[187469] call_tmp[1507881]))
    if isdirect[2063804]
    {
      (2063813 call on_fn[1507894] this[1507865])
    }
    {
      val _args_foron_fn[2063828]:_class_localson_fn[2063820] "temp"
      (2063832 'move' _args_foron_fn[2063828](2063830 'stack allocate class' _class_localson_fn[2063820]))
      (2063834 '.=' _args_foron_fn[2063828] _0_tmp[2063823] call_tmp[1507881])
      ref tmp[2063838]:channel(true,dynamic,true)[1021844] "temp"
      (2063842 'move' tmp[2063838](2063840 'set reference' this[1507865]))
      (2063844 '.=' _args_foron_fn[2063828] _1_this[2063825] tmp[2063838])
      val _args_vforon_fn[2063848]:c_void_ptr[149] "temp"
      (2063852 'move' _args_vforon_fn[2063848](2063850 'cast_to_void_star' _args_foron_fn[2063828]))
      val _args_sizeon_fn[2063854]:int(64)[13] "temp"
      (2063858 'move' _args_sizeon_fn[2063854](2063856 'sizeof_bundle' _class_localson_fn[2063820]))
      on(2063890 call wrapon_fn[2063860] call_tmp[1507881] _args_vforon_fn[2063848] _args_sizeon_fn[2063854] _args_foron_fn[2063828])
    }
    label _enddeinit[1789326]
    const-ref _field_destructor_tmp_[1789324]:locale[28] "temp"
    (1789331 'move' _field_destructor_tmp_[1789324](1789328 '.' this[1507865] _readWriteThisFromLocale[1021841]))
    (1789333 call deinit[90188] _field_destructor_tmp_[1789324])
    const-ref _field_destructor_tmp_[1789336]:locale[28] "temp"
    (1789341 'move' _field_destructor_tmp_[1789336](1789338 '.' this[1507865] home[1021832]))
    (1789343 call deinit[90188] _field_destructor_tmp_[1789336])
    (1507928 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].deinit[1510035](ref arg this[1510041]:channel(true,dynamic,false)[1060966]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2224278]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224280 'move' call_tmp[2224278](2224282 '.' this[1510041] home[1060954]))
    const-val call_tmp[1510057]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2129267]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129269 'move' coerce_tmp[2129267](2129271 '.v' call_tmp[2224278] _instance[89978]))
    val coerce_tmp[2129274]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129276 'move' coerce_tmp[2129274](2129278 'cast' object[22] coerce_tmp[2129267]))
    const-val call_tmp[2129281]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129283 'move' call_tmp[2129281](2129285 'ptr_eq' coerce_tmp[2129274] nil[44]))
    if call_tmp[2129281]
    {
      (2129291 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1510059 'move' call_tmp[1510057](1510061 '_wide_get_locale' coerce_tmp[2129267]))
    val isdirect[2063980]:bool[10] "temp"
    (2063985 'move' isdirect[2063980](2063982 call chpl_doDirectExecuteOn[187469] call_tmp[1510057]))
    if isdirect[2063980]
    {
      (2063989 call on_fn[1510070] this[1510041])
    }
    {
      val _args_foron_fn[2064004]:_class_localson_fn[2063996] "temp"
      (2064008 'move' _args_foron_fn[2064004](2064006 'stack allocate class' _class_localson_fn[2063996]))
      (2064010 '.=' _args_foron_fn[2064004] _0_tmp[2063999] call_tmp[1510057])
      ref tmp[2064014]:channel(true,dynamic,false)[1060966] "temp"
      (2064018 'move' tmp[2064014](2064016 'set reference' this[1510041]))
      (2064020 '.=' _args_foron_fn[2064004] _1_this[2064001] tmp[2064014])
      val _args_vforon_fn[2064024]:c_void_ptr[149] "temp"
      (2064028 'move' _args_vforon_fn[2064024](2064026 'cast_to_void_star' _args_foron_fn[2064004]))
      val _args_sizeon_fn[2064030]:int(64)[13] "temp"
      (2064034 'move' _args_sizeon_fn[2064030](2064032 'sizeof_bundle' _class_localson_fn[2063996]))
      on(2064066 call wrapon_fn[2064036] call_tmp[1510057] _args_vforon_fn[2064024] _args_sizeon_fn[2064030] _args_foron_fn[2064004])
    }
    label _enddeinit[1789360]
    const-ref _field_destructor_tmp_[1789358]:locale[28] "temp"
    (1789365 'move' _field_destructor_tmp_[1789358](1789362 '.' this[1510041] _readWriteThisFromLocale[1060963]))
    (1789367 call deinit[90188] _field_destructor_tmp_[1789358])
    const-ref _field_destructor_tmp_[1789370]:locale[28] "temp"
    (1789375 'move' _field_destructor_tmp_[1789370](1789372 '.' this[1510041] home[1060954]))
    (1789377 call deinit[90188] _field_destructor_tmp_[1789370])
    (1510104 return _void[55])
  }
  function channel(false,dynamic,false)[1080701].deinit[1514289](ref arg this[1514295]:channel(false,dynamic,false)[1080701]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2229335]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229337 'move' call_tmp[2229335](2229339 '.' this[1514295] home[1080689]))
    const-val call_tmp[1514311]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2129297]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129299 'move' coerce_tmp[2129297](2129301 '.v' call_tmp[2229335] _instance[89978]))
    val coerce_tmp[2129304]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129306 'move' coerce_tmp[2129304](2129308 'cast' object[22] coerce_tmp[2129297]))
    const-val call_tmp[2129311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129313 'move' call_tmp[2129311](2129315 'ptr_eq' coerce_tmp[2129304] nil[44]))
    if call_tmp[2129311]
    {
      (2129321 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1514313 'move' call_tmp[1514311](1514315 '_wide_get_locale' coerce_tmp[2129297]))
    val isdirect[2064241]:bool[10] "temp"
    (2064246 'move' isdirect[2064241](2064243 call chpl_doDirectExecuteOn[187469] call_tmp[1514311]))
    if isdirect[2064241]
    {
      (2064250 call on_fn[1514324] this[1514295])
    }
    {
      val _args_foron_fn[2064265]:_class_localson_fn[2064257] "temp"
      (2064269 'move' _args_foron_fn[2064265](2064267 'stack allocate class' _class_localson_fn[2064257]))
      (2064271 '.=' _args_foron_fn[2064265] _0_tmp[2064260] call_tmp[1514311])
      ref tmp[2064275]:channel(false,dynamic,false)[1080701] "temp"
      (2064279 'move' tmp[2064275](2064277 'set reference' this[1514295]))
      (2064281 '.=' _args_foron_fn[2064265] _1_this[2064262] tmp[2064275])
      val _args_vforon_fn[2064285]:c_void_ptr[149] "temp"
      (2064289 'move' _args_vforon_fn[2064285](2064287 'cast_to_void_star' _args_foron_fn[2064265]))
      val _args_sizeon_fn[2064291]:int(64)[13] "temp"
      (2064295 'move' _args_sizeon_fn[2064291](2064293 'sizeof_bundle' _class_localson_fn[2064257]))
      on(2064327 call wrapon_fn[2064297] call_tmp[1514311] _args_vforon_fn[2064285] _args_sizeon_fn[2064291] _args_foron_fn[2064265])
    }
    label _enddeinit[1789382]
    const-ref _field_destructor_tmp_[1789380]:locale[28] "temp"
    (1789387 'move' _field_destructor_tmp_[1789380](1789384 '.' this[1514295] _readWriteThisFromLocale[1080698]))
    (1789389 call deinit[90188] _field_destructor_tmp_[1789380])
    const-ref _field_destructor_tmp_[1789392]:locale[28] "temp"
    (1789397 'move' _field_destructor_tmp_[1789392](1789394 '.' this[1514295] home[1080689]))
    (1789399 call deinit[90188] _field_destructor_tmp_[1789392])
    (1514358 return _void[55])
  }
  function ioNewline[238720].init[893688](ref arg this[893691]:ioNewline[238720], in arg skipWhitespaceOnly[893694]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893710 '.=' this[893691] skipWhitespaceOnly[238701] skipWhitespaceOnly[893694])
    (893714 return _void[55])
  }
  type ioNewline[238720] val skipWhitespaceOnly[238701]:bool[10]
  function channel(true,dynamic,false)[1060966]._ch_ioerror[1062884](const  ref arg this[1062890]:channel(true,dynamic,false)[1060966], const in arg error[1062892]:syserr[223603], const  ref arg msg[1062894]:string[26], ref arg error_out[1784198]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1062900]:string[26] "dead at end of block" "insert auto destroy"
    (1062902 'move' path[1062900] "unknown")
    val offset[1062921]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1062923 'move' offset[1062921] -1)
    ref call_tmp[2224218]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224220 'move' call_tmp[2224218](2224222 '.' this[1062890] home[1060954]))
    const-val call_tmp[1062938]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128541]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128543 'move' coerce_tmp[2128541](2128545 '.v' call_tmp[2224218] _instance[89978]))
    val coerce_tmp[2128548]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128550 'move' coerce_tmp[2128548](2128552 'cast' object[22] coerce_tmp[2128541]))
    const-val call_tmp[2128555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128557 'move' call_tmp[2128555](2128559 'ptr_eq' coerce_tmp[2128548] nil[44]))
    if call_tmp[2128555]
    {
      (2128565 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1062940 'move' call_tmp[1062938](1062942 '_wide_get_locale' coerce_tmp[2128541]))
    val error[1784203]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1784205 'move' error[1784203] nil[44])
    val isdirect[2055024]:bool[10] "temp"
    (2055029 'move' isdirect[2055024](2055026 call chpl_doDirectExecuteOn[187469] call_tmp[1062938]))
    if isdirect[2055024]
    {
      (2055033 call on_fn[1062951] this[1062890] path[1062900] offset[1062921] error[1784203])
    }
    {
      val _args_foron_fn[2055057]:_class_localson_fn[2055043] "temp"
      (2055061 'move' _args_foron_fn[2055057](2055059 'stack allocate class' _class_localson_fn[2055043]))
      (2055063 '.=' _args_foron_fn[2055057] _0_tmp[2055046] call_tmp[1062938])
      ref tmp[2055067]:channel(true,dynamic,false)[1060966] "temp"
      (2055071 'move' tmp[2055067](2055069 'set reference' this[1062890]))
      (2055073 '.=' _args_foron_fn[2055057] _1_this[2055048] tmp[2055067])
      ref tmp[2055077]:string[26] "temp"
      (2055081 'move' tmp[2055077](2055079 'set reference' path[1062900]))
      (2055083 '.=' _args_foron_fn[2055057] _2_path[2055050] tmp[2055077])
      ref tmp[2055087]:int(64)[13] "temp"
      (2055091 'move' tmp[2055087](2055089 'set reference' offset[1062921]))
      (2055093 '.=' _args_foron_fn[2055057] _3_offset[2055052] tmp[2055087])
      ref tmp[2055097]:Error[167984] "temp"
      (2055101 'move' tmp[2055097](2055099 'set reference' error[1784203]))
      (2055103 '.=' _args_foron_fn[2055057] _4_error[2055054] tmp[2055097])
      val _args_vforon_fn[2055107]:c_void_ptr[149] "temp"
      (2055111 'move' _args_vforon_fn[2055107](2055109 'cast_to_void_star' _args_foron_fn[2055057]))
      val _args_sizeon_fn[2055113]:int(64)[13] "temp"
      (2055117 'move' _args_sizeon_fn[2055113](2055115 'sizeof_bundle' _class_localson_fn[2055043]))
      on(2055173 call wrapon_fn[2055119] call_tmp[1062938] _args_vforon_fn[2055107] _args_sizeon_fn[2055113] _args_foron_fn[2055057])
    }
    val errorExists[2073121]:bool[10] "temp"
    (2073126 'move' errorExists[2073121](2073123 '!=' error[1784203] nil[44]))
    if errorExists[2073121]
    {
      (1784209 '=' error_out[1784198] error[1784203])
      ref i_x[2094267]:string[26] "temp"
      (2094271 'move' i_x[2094267](2094269 'set reference' path[1062900]))
      (2094275 call deinit[30834] i_x[2094267])
      gotoErrorHandlingReturn _end_ch_ioerror[1784200] _end_ch_ioerror[1784200]
    }
    val error[1784217]:Error[167984] "error variable" "temp"
    (1784226 'move' error[1784217] nil[44])
    (1063074 call ioerror[266160] error[1062892] msg[1062894] path[1062900] offset[1062921] error[1784217])
    val errorExists[2073129]:bool[10] "temp"
    (2073134 'move' errorExists[2073129](2073131 '!=' error[1784217] nil[44]))
    if errorExists[2073129]
    {
      gotoErrorHandling handler[1784218] handler[1784218]
    }
    label handler[1784218]
    val errorExists[2073137]:bool[10] "temp"
    (2073142 'move' errorExists[2073137](2073139 '!=' error[1784217] nil[44]))
    if errorExists[2073137]
    {
      (1784233 '=' error_out[1784198] error[1784217])
      ref i_x[2094279]:string[26] "temp"
      (2094283 'move' i_x[2094279](2094281 'set reference' path[1062900]))
      (2094287 call deinit[30834] i_x[2094279])
      gotoErrorHandlingReturn _end_ch_ioerror[1784200] _end_ch_ioerror[1784200]
    }
    ref i_x[2094291]:string[26] "temp"
    (2094295 'move' i_x[2094291](2094293 'set reference' path[1062900]))
    (2094299 call deinit[30834] i_x[2094291])
    label _end_ch_ioerror[1784200]
    (1063083 return _void[55])
  }
  function channel(false,dynamic,false)[1080701]._ch_ioerror[1082568](const  ref arg this[1082574]:channel(false,dynamic,false)[1080701], const in arg error[1082576]:syserr[223603], const  ref arg msg[1082578]:string[26], ref arg error_out[1784994]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082584]:string[26] "dead at end of block" "insert auto destroy"
    (1082586 'move' path[1082584] "unknown")
    val offset[1082605]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082607 'move' offset[1082605] -1)
    ref call_tmp[2229315]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229317 'move' call_tmp[2229315](2229319 '.' this[1082574] home[1080689]))
    const-val call_tmp[1082622]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128811]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128813 'move' coerce_tmp[2128811](2128815 '.v' call_tmp[2229315] _instance[89978]))
    val coerce_tmp[2128818]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128820 'move' coerce_tmp[2128818](2128822 'cast' object[22] coerce_tmp[2128811]))
    const-val call_tmp[2128825]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128827 'move' call_tmp[2128825](2128829 'ptr_eq' coerce_tmp[2128818] nil[44]))
    if call_tmp[2128825]
    {
      (2128835 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1082624 'move' call_tmp[1082622](1082626 '_wide_get_locale' coerce_tmp[2128811]))
    val error[1784999]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1785001 'move' error[1784999] nil[44])
    val rvfDerefTmp[2049388]:channel(false,dynamic,false)[1080701] "temp"
    (2049392 'move' rvfDerefTmp[2049388](2049390 'deref' this[1082574]))
    val isdirect[2056245]:bool[10] "temp"
    (2056250 'move' isdirect[2056245](2056247 call chpl_doDirectExecuteOn[187469] call_tmp[1082622]))
    if isdirect[2056245]
    {
      (2056254 call on_fn[1082635] rvfDerefTmp[2049388] path[1082584] offset[1082605] error[1784999])
    }
    {
      val _args_foron_fn[2056278]:_class_localson_fn[2056264] "temp"
      (2056282 'move' _args_foron_fn[2056278](2056280 'stack allocate class' _class_localson_fn[2056264]))
      (2056284 '.=' _args_foron_fn[2056278] _0_tmp[2056267] call_tmp[1082622])
      (2056288 '.=' _args_foron_fn[2056278] _1_rvfDerefTmp[2056269] rvfDerefTmp[2049388])
      ref tmp[2056292]:string[26] "temp"
      (2056296 'move' tmp[2056292](2056294 'set reference' path[1082584]))
      (2056298 '.=' _args_foron_fn[2056278] _2_path[2056271] tmp[2056292])
      ref tmp[2056302]:int(64)[13] "temp"
      (2056306 'move' tmp[2056302](2056304 'set reference' offset[1082605]))
      (2056308 '.=' _args_foron_fn[2056278] _3_offset[2056273] tmp[2056302])
      ref tmp[2056312]:Error[167984] "temp"
      (2056316 'move' tmp[2056312](2056314 'set reference' error[1784999]))
      (2056318 '.=' _args_foron_fn[2056278] _4_error[2056275] tmp[2056312])
      val _args_vforon_fn[2056322]:c_void_ptr[149] "temp"
      (2056326 'move' _args_vforon_fn[2056322](2056324 'cast_to_void_star' _args_foron_fn[2056278]))
      val _args_sizeon_fn[2056328]:int(64)[13] "temp"
      (2056332 'move' _args_sizeon_fn[2056328](2056330 'sizeof_bundle' _class_localson_fn[2056264]))
      on(2056388 call wrapon_fn[2056334] call_tmp[1082622] _args_vforon_fn[2056322] _args_sizeon_fn[2056328] _args_foron_fn[2056278])
    }
    val errorExists[2073481]:bool[10] "temp"
    (2073486 'move' errorExists[2073481](2073483 '!=' error[1784999] nil[44]))
    if errorExists[2073481]
    {
      (1785005 '=' error_out[1784994] error[1784999])
      ref i_x[2094507]:string[26] "temp"
      (2094511 'move' i_x[2094507](2094509 'set reference' path[1082584]))
      (2094515 call deinit[30834] i_x[2094507])
      gotoErrorHandlingReturn _end_ch_ioerror[1784996] _end_ch_ioerror[1784996]
    }
    val error[1785013]:Error[167984] "error variable" "temp"
    (1785022 'move' error[1785013] nil[44])
    (1082758 call ioerror[266160] error[1082576] msg[1082578] path[1082584] offset[1082605] error[1785013])
    val errorExists[2073489]:bool[10] "temp"
    (2073494 'move' errorExists[2073489](2073491 '!=' error[1785013] nil[44]))
    if errorExists[2073489]
    {
      gotoErrorHandling handler[1785014] handler[1785014]
    }
    label handler[1785014]
    val errorExists[2073497]:bool[10] "temp"
    (2073502 'move' errorExists[2073497](2073499 '!=' error[1785013] nil[44]))
    if errorExists[2073497]
    {
      (1785029 '=' error_out[1784994] error[1785013])
      ref i_x[2094519]:string[26] "temp"
      (2094523 'move' i_x[2094519](2094521 'set reference' path[1082584]))
      (2094527 call deinit[30834] i_x[2094519])
      gotoErrorHandlingReturn _end_ch_ioerror[1784996] _end_ch_ioerror[1784996]
    }
    ref i_x[2094531]:string[26] "temp"
    (2094535 'move' i_x[2094531](2094533 'set reference' path[1082584]))
    (2094539 call deinit[30834] i_x[2094531])
    label _end_ch_ioerror[1784996]
    (1082767 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._ch_ioerror[1389786](const  ref arg this[1389792]:channel(true,dynamic,true)[1021844], const in arg error[1389794]:syserr[223603], const  ref arg msg[1389796]:string[26], ref arg error_out[1786826]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1389802]:string[26] "dead at end of block" "insert auto destroy"
    (1389804 'move' path[1389802] "unknown")
    val offset[1389823]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1389825 'move' offset[1389823] -1)
    ref call_tmp[2189606]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189608 'move' call_tmp[2189606](2189610 '.' this[1389792] home[1021832]))
    const-val call_tmp[1389840]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2129057]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129059 'move' coerce_tmp[2129057](2129061 '.v' call_tmp[2189606] _instance[89978]))
    val coerce_tmp[2129064]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2129066 'move' coerce_tmp[2129064](2129068 'cast' object[22] coerce_tmp[2129057]))
    const-val call_tmp[2129071]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2129073 'move' call_tmp[2129071](2129075 'ptr_eq' coerce_tmp[2129064] nil[44]))
    if call_tmp[2129071]
    {
      (2129081 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1389842 'move' call_tmp[1389840](1389844 '_wide_get_locale' coerce_tmp[2129057]))
    val error[1786831]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1786833 'move' error[1786831] nil[44])
    val rvfDerefTmp[2049817]:channel(true,dynamic,true)[1021844] "temp"
    (2049821 'move' rvfDerefTmp[2049817](2049819 'deref' this[1389792]))
    val isdirect[2059747]:bool[10] "temp"
    (2059752 'move' isdirect[2059747](2059749 call chpl_doDirectExecuteOn[187469] call_tmp[1389840]))
    if isdirect[2059747]
    {
      (2059756 call on_fn[1389853] rvfDerefTmp[2049817] path[1389802] offset[1389823] error[1786831])
    }
    {
      val _args_foron_fn[2059780]:_class_localson_fn[2059766] "temp"
      (2059784 'move' _args_foron_fn[2059780](2059782 'stack allocate class' _class_localson_fn[2059766]))
      (2059786 '.=' _args_foron_fn[2059780] _0_tmp[2059769] call_tmp[1389840])
      (2059790 '.=' _args_foron_fn[2059780] _1_rvfDerefTmp[2059771] rvfDerefTmp[2049817])
      ref tmp[2059794]:string[26] "temp"
      (2059798 'move' tmp[2059794](2059796 'set reference' path[1389802]))
      (2059800 '.=' _args_foron_fn[2059780] _2_path[2059773] tmp[2059794])
      ref tmp[2059804]:int(64)[13] "temp"
      (2059808 'move' tmp[2059804](2059806 'set reference' offset[1389823]))
      (2059810 '.=' _args_foron_fn[2059780] _3_offset[2059775] tmp[2059804])
      ref tmp[2059814]:Error[167984] "temp"
      (2059818 'move' tmp[2059814](2059816 'set reference' error[1786831]))
      (2059820 '.=' _args_foron_fn[2059780] _4_error[2059777] tmp[2059814])
      val _args_vforon_fn[2059824]:c_void_ptr[149] "temp"
      (2059828 'move' _args_vforon_fn[2059824](2059826 'cast_to_void_star' _args_foron_fn[2059780]))
      val _args_sizeon_fn[2059830]:int(64)[13] "temp"
      (2059834 'move' _args_sizeon_fn[2059830](2059832 'sizeof_bundle' _class_localson_fn[2059766]))
      on(2059890 call wrapon_fn[2059836] call_tmp[1389840] _args_vforon_fn[2059824] _args_sizeon_fn[2059830] _args_foron_fn[2059780])
    }
    val errorExists[2074417]:bool[10] "temp"
    (2074422 'move' errorExists[2074417](2074419 '!=' error[1786831] nil[44]))
    if errorExists[2074417]
    {
      (1786837 '=' error_out[1786826] error[1786831])
      ref i_x[2096175]:string[26] "temp"
      (2096179 'move' i_x[2096175](2096177 'set reference' path[1389802]))
      (2096183 call deinit[30834] i_x[2096175])
      gotoErrorHandlingReturn _end_ch_ioerror[1786828] _end_ch_ioerror[1786828]
    }
    val error[1786845]:Error[167984] "error variable" "temp"
    (1786854 'move' error[1786845] nil[44])
    (1389976 call ioerror[266160] error[1389794] msg[1389796] path[1389802] offset[1389823] error[1786845])
    val errorExists[2074425]:bool[10] "temp"
    (2074430 'move' errorExists[2074425](2074427 '!=' error[1786845] nil[44]))
    if errorExists[2074425]
    {
      gotoErrorHandling handler[1786846] handler[1786846]
    }
    label handler[1786846]
    val errorExists[2074433]:bool[10] "temp"
    (2074438 'move' errorExists[2074433](2074435 '!=' error[1786845] nil[44]))
    if errorExists[2074433]
    {
      (1786861 '=' error_out[1786826] error[1786845])
      ref i_x[2096187]:string[26] "temp"
      (2096191 'move' i_x[2096187](2096189 'set reference' path[1389802]))
      (2096195 call deinit[30834] i_x[2096187])
      gotoErrorHandlingReturn _end_ch_ioerror[1786828] _end_ch_ioerror[1786828]
    }
    ref i_x[2096199]:string[26] "temp"
    (2096203 'move' i_x[2096199](2096201 'set reference' path[1389802]))
    (2096207 call deinit[30834] i_x[2096199])
    label _end_ch_ioerror[1786828]
    (1389985 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].offset[1080167](const  ref arg this[1080173]:channel(true,dynamic,false)[1060966]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080179]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080188]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1080318 'move' ret[1080188] 0)
    ref call_tmp[2224248]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224250 'move' call_tmp[2224248](2224252 '.' this[1080173] home[1060954]))
    const-val call_tmp[1080211]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128631]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128633 'move' coerce_tmp[2128631](2128635 '.v' call_tmp[2224248] _instance[89978]))
    val coerce_tmp[2128638]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128640 'move' coerce_tmp[2128638](2128642 'cast' object[22] coerce_tmp[2128631]))
    const-val call_tmp[2128645]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128647 'move' call_tmp[2128645](2128649 'ptr_eq' coerce_tmp[2128638] nil[44]))
    if call_tmp[2128645]
    {
      (2128655 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1080213 'move' call_tmp[1080211](1080215 '_wide_get_locale' coerce_tmp[2128631]))
    val rvfDerefTmp[2049269]:channel(true,dynamic,false)[1060966] "temp"
    (2049273 'move' rvfDerefTmp[2049269](2049271 'deref' this[1080173]))
    val isdirect[2055462]:bool[10] "temp"
    (2055467 'move' isdirect[2055462](2055464 call chpl_doDirectExecuteOn[187469] call_tmp[1080211]))
    if isdirect[2055462]
    {
      (2055471 call on_fn[1080224] rvfDerefTmp[2049269] ret[1080188])
    }
    {
      val _args_foron_fn[2055489]:_class_localson_fn[2055479] "temp"
      (2055493 'move' _args_foron_fn[2055489](2055491 'stack allocate class' _class_localson_fn[2055479]))
      (2055495 '.=' _args_foron_fn[2055489] _0_tmp[2055482] call_tmp[1080211])
      (2055499 '.=' _args_foron_fn[2055489] _1_rvfDerefTmp[2055484] rvfDerefTmp[2049269])
      ref tmp[2055503]:int(64)[13] "temp"
      (2055507 'move' tmp[2055503](2055505 'set reference' ret[1080188]))
      (2055509 '.=' _args_foron_fn[2055489] _2_ret[2055486] tmp[2055503])
      val _args_vforon_fn[2055513]:c_void_ptr[149] "temp"
      (2055517 'move' _args_vforon_fn[2055513](2055515 'cast_to_void_star' _args_foron_fn[2055489]))
      val _args_sizeon_fn[2055519]:int(64)[13] "temp"
      (2055523 'move' _args_sizeon_fn[2055519](2055521 'sizeof_bundle' _class_localson_fn[2055479]))
      on(2055563 call wrapon_fn[2055525] call_tmp[1080211] _args_vforon_fn[2055513] _args_sizeon_fn[2055519] _args_foron_fn[2055489])
    }
    (1080315 'move' ret[1080179] ret[1080188])
    label _end_offset[1080283]
    (1080285 return ret[1080179])
  }
  function file[235599].reader[1016580](const  ref arg this[1016586]:file[235599], const in arg start[1016606]:int(64)[13], const in arg end[1016623]:int(64)[13], const in arg hints[1016629]:int(32)[95], const  ref arg style[1016636]:iostyle[231863], ref arg error_out[1783498]:Error[167984], ref arg _retArg[1805862]:channel(false,dynamic,true)[985646]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016644]:channel(false,dynamic,true)[985646] "dead after last mention" "RVV" "temp"
    val ret[1016663]:channel(false,dynamic,true)[985646] "dead at end of block" "insert auto destroy"
    (1021760 call init[1017890] ret[1016663])
    val err[1016684]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2168998]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169000 'move' call_tmp[2168998](2169003 call qio_int_to_err[223653] 0))
    (1016686 'move' err[1016684] call_tmp[2168998])
    ref call_tmp[2177859]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177861 'move' call_tmp[2177859](2177863 '.' this[1016586] home[235581]))
    const-val call_tmp[1016701]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128091]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128093 'move' coerce_tmp[2128091](2128095 '.v' call_tmp[2177859] _instance[89978]))
    val coerce_tmp[2128098]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128100 'move' coerce_tmp[2128098](2128102 'cast' object[22] coerce_tmp[2128091]))
    const-val call_tmp[2128105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128107 'move' call_tmp[2128105](2128109 'ptr_eq' coerce_tmp[2128098] nil[44]))
    if call_tmp[2128105]
    {
      (2128115 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1016703 'move' call_tmp[1016701](1016705 '_wide_get_locale' coerce_tmp[2128091]))
    val error[1783501]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1783503 'move' error[1783501] nil[44])
    val rvfDerefTmp[2048934]:iostyle[231863] "temp"
    (2048938 'move' rvfDerefTmp[2048934](2048936 'deref' style[1016636]))
    val rvfDerefTmp[2048942]:file[235599] "temp"
    (2048946 'move' rvfDerefTmp[2048942](2048944 'deref' this[1016586]))
    val isdirect[2052951]:bool[10] "temp"
    (2052956 'move' isdirect[2052951](2052953 call chpl_doDirectExecuteOn[187469] call_tmp[1016701]))
    if isdirect[2052951]
    {
      (2052960 call on_fn[1016714] ret[1016663] hints[1016629] err[1016684] start[1016606] rvfDerefTmp[2048934] end[1016623] rvfDerefTmp[2048942] error[1783501])
    }
    {
      val _args_foron_fn[2052996]:_class_localson_fn[2052974] "temp"
      (2053000 'move' _args_foron_fn[2052996](2052998 'stack allocate class' _class_localson_fn[2052974]))
      (2053002 '.=' _args_foron_fn[2052996] _0_tmp[2052977] call_tmp[1016701])
      ref tmp[2053006]:channel(false,dynamic,true)[985646] "temp"
      (2053010 'move' tmp[2053006](2053008 'set reference' ret[1016663]))
      (2053012 '.=' _args_foron_fn[2052996] _1_ret[2052979] tmp[2053006])
      (2053016 '.=' _args_foron_fn[2052996] _2_hints[2052981] hints[1016629])
      ref tmp[2053020]:syserr[223603] "temp"
      (2053024 'move' tmp[2053020](2053022 'set reference' err[1016684]))
      (2053026 '.=' _args_foron_fn[2052996] _3_err[2052983] tmp[2053020])
      (2053030 '.=' _args_foron_fn[2052996] _4_start[2052985] start[1016606])
      (2053034 '.=' _args_foron_fn[2052996] _5_rvfDerefTmp[2052987] rvfDerefTmp[2048934])
      (2053038 '.=' _args_foron_fn[2052996] _6_end[2052989] end[1016623])
      (2053042 '.=' _args_foron_fn[2052996] _7_rvfDerefTmp[2052991] rvfDerefTmp[2048942])
      ref tmp[2053046]:Error[167984] "temp"
      (2053050 'move' tmp[2053046](2053048 'set reference' error[1783501]))
      (2053052 '.=' _args_foron_fn[2052996] _8_error[2052993] tmp[2053046])
      val _args_vforon_fn[2053056]:c_void_ptr[149] "temp"
      (2053060 'move' _args_vforon_fn[2053056](2053058 'cast_to_void_star' _args_foron_fn[2052996]))
      val _args_sizeon_fn[2053062]:int(64)[13] "temp"
      (2053066 'move' _args_sizeon_fn[2053062](2053064 'sizeof_bundle' _class_localson_fn[2052974]))
      on(2053154 call wrapon_fn[2053068] call_tmp[1016701] _args_vforon_fn[2053056] _args_sizeon_fn[2053062] _args_foron_fn[2052996])
    }
    val errorExists[2072785]:bool[10] "temp"
    (2072790 'move' errorExists[2072785](2072787 '!=' error[1783501] nil[44]))
    if errorExists[2072785]
    {
      (1783507 '=' error_out[1783498] error[1783501])
      ref i_x[2283287]:channel(false,dynamic,true)[985646] "temp"
      (2283291 'move' i_x[2283287](2283289 'set reference' ret[1016663]))
      (2283295 call deinit[1444880] i_x[2283287])
      gotoErrorHandlingReturn _end_reader[1016799] _end_reader[1016799]
    }
    const-val call_tmp[2168403]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168405 'move' call_tmp[2168403](2168408 call qio_err_iserr[223665] err[1016684]))
    const-val call_tmp[2168410]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168412 'move' call_tmp[2168410](2168414 '!=' call_tmp[2168403] 0))
    if call_tmp[2168410]
    {
      val error[1783515]:Error[167984] "error variable" "temp"
      (1783524 'move' error[1783515] nil[44])
      const-val call_tmp[1016763]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804792]:string[26] "temp"
      (1016771 call tryGetPath[236383] this[1016586] ret_tmp[1804792])
      (1804795 'move' call_tmp[1016763] ret_tmp[1804792])
      (1016773 call ioerror[266269] err[1016684] "in file.reader" call_tmp[1016763] error[1783515])
      val errorExists[2072793]:bool[10] "temp"
      (2072798 'move' errorExists[2072793](2072795 '!=' error[1783515] nil[44]))
      if errorExists[2072793]
      {
        ref i_x[2093823]:string[26] "temp"
        (2093827 'move' i_x[2093823](2093825 'set reference' call_tmp[1016763]))
        (2093831 call deinit[30834] i_x[2093823])
        gotoErrorHandling handler[1783516] handler[1783516]
      }
      ref i_x[2093835]:string[26] "temp"
      (2093839 'move' i_x[2093835](2093837 'set reference' call_tmp[1016763]))
      (2093843 call deinit[30834] i_x[2093835])
      label handler[1783516]
      val errorExists[2072801]:bool[10] "temp"
      (2072806 'move' errorExists[2072801](2072803 '!=' error[1783515] nil[44]))
      if errorExists[2072801]
      {
        (1783531 '=' error_out[1783498] error[1783515])
        ref i_x[2283299]:channel(false,dynamic,true)[985646] "temp"
        (2283303 'move' i_x[2283299](2283301 'set reference' ret[1016663]))
        (2283307 call deinit[1444880] i_x[2283299])
        gotoErrorHandlingReturn _end_reader[1016799] _end_reader[1016799]
      }
    }
    (1021756 'move' ret[1016644] ret[1016663])
    label _end_reader[1016799]
    (1805864 '=' _retArg[1805862] ret[1016644])
    (1805866 return _void[55])
  }
  function file[235599].reader[1080607](const  ref arg this[1080613]:file[235599], const in arg start[1080633]:int(64)[13], const in arg end[1080650]:int(64)[13], const in arg hints[1080656]:int(32)[95], const  ref arg style[1080663]:iostyle[231863], ref arg error_out[1784841]:Error[167984], ref arg _retArg[1806766]:channel(false,dynamic,false)[1080701]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080671]:channel(false,dynamic,false)[1080701] "dead after last mention" "RVV" "temp"
    val ret[1080725]:channel(false,dynamic,false)[1080701] "dead at end of block" "insert auto destroy"
    (1082102 call init[1081371] ret[1080725])
    val err[1080746]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169150]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169152 'move' call_tmp[2169150](2169155 call qio_int_to_err[223653] 0))
    (1080748 'move' err[1080746] call_tmp[2169150])
    ref call_tmp[2177971]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177973 'move' call_tmp[2177971](2177975 '.' this[1080613] home[235581]))
    const-val call_tmp[1080763]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128661]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128663 'move' coerce_tmp[2128661](2128665 '.v' call_tmp[2177971] _instance[89978]))
    val coerce_tmp[2128668]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128670 'move' coerce_tmp[2128668](2128672 'cast' object[22] coerce_tmp[2128661]))
    const-val call_tmp[2128675]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128677 'move' call_tmp[2128675](2128679 'ptr_eq' coerce_tmp[2128668] nil[44]))
    if call_tmp[2128675]
    {
      (2128685 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1080765 'move' call_tmp[1080763](1080767 '_wide_get_locale' coerce_tmp[2128661]))
    val error[1784844]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1784846 'move' error[1784844] nil[44])
    val rvfDerefTmp[2049297]:iostyle[231863] "temp"
    (2049301 'move' rvfDerefTmp[2049297](2049299 'deref' style[1080663]))
    val rvfDerefTmp[2049305]:file[235599] "temp"
    (2049309 'move' rvfDerefTmp[2049305](2049307 'deref' this[1080613]))
    val isdirect[2055568]:bool[10] "temp"
    (2055573 'move' isdirect[2055568](2055570 call chpl_doDirectExecuteOn[187469] call_tmp[1080763]))
    if isdirect[2055568]
    {
      (2055577 call on_fn[1080776] rvfDerefTmp[2049297] rvfDerefTmp[2049305] err[1080746] hints[1080656] start[1080633] ret[1080725] end[1080650] error[1784844])
    }
    {
      val _args_foron_fn[2055613]:_class_localson_fn[2055591] "temp"
      (2055617 'move' _args_foron_fn[2055613](2055615 'stack allocate class' _class_localson_fn[2055591]))
      (2055619 '.=' _args_foron_fn[2055613] _0_tmp[2055594] call_tmp[1080763])
      (2055623 '.=' _args_foron_fn[2055613] _1_rvfDerefTmp[2055596] rvfDerefTmp[2049297])
      (2055627 '.=' _args_foron_fn[2055613] _2_rvfDerefTmp[2055598] rvfDerefTmp[2049305])
      ref tmp[2055631]:syserr[223603] "temp"
      (2055635 'move' tmp[2055631](2055633 'set reference' err[1080746]))
      (2055637 '.=' _args_foron_fn[2055613] _3_err[2055600] tmp[2055631])
      (2055641 '.=' _args_foron_fn[2055613] _4_hints[2055602] hints[1080656])
      (2055645 '.=' _args_foron_fn[2055613] _5_start[2055604] start[1080633])
      ref tmp[2055649]:channel(false,dynamic,false)[1080701] "temp"
      (2055653 'move' tmp[2055649](2055651 'set reference' ret[1080725]))
      (2055655 '.=' _args_foron_fn[2055613] _6_ret[2055606] tmp[2055649])
      (2055659 '.=' _args_foron_fn[2055613] _7_end[2055608] end[1080650])
      ref tmp[2055663]:Error[167984] "temp"
      (2055667 'move' tmp[2055663](2055665 'set reference' error[1784844]))
      (2055669 '.=' _args_foron_fn[2055613] _8_error[2055610] tmp[2055663])
      val _args_vforon_fn[2055673]:c_void_ptr[149] "temp"
      (2055677 'move' _args_vforon_fn[2055673](2055675 'cast_to_void_star' _args_foron_fn[2055613]))
      val _args_sizeon_fn[2055679]:int(64)[13] "temp"
      (2055683 'move' _args_sizeon_fn[2055679](2055681 'sizeof_bundle' _class_localson_fn[2055591]))
      on(2055771 call wrapon_fn[2055685] call_tmp[1080763] _args_vforon_fn[2055673] _args_sizeon_fn[2055679] _args_foron_fn[2055613])
    }
    val errorExists[2073417]:bool[10] "temp"
    (2073422 'move' errorExists[2073417](2073419 '!=' error[1784844] nil[44]))
    if errorExists[2073417]
    {
      (1784850 '=' error_out[1784841] error[1784844])
      ref i_x[2285967]:channel(false,dynamic,false)[1080701] "temp"
      (2285971 'move' i_x[2285967](2285969 'set reference' ret[1080725]))
      (2285975 call deinit[1514289] i_x[2285967])
      gotoErrorHandlingReturn _end_reader[1080861] _end_reader[1080861]
    }
    const-val call_tmp[2168607]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168609 'move' call_tmp[2168607](2168612 call qio_err_iserr[223665] err[1080746]))
    const-val call_tmp[2168614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168616 'move' call_tmp[2168614](2168618 '!=' call_tmp[2168607] 0))
    if call_tmp[2168614]
    {
      val error[1784858]:Error[167984] "error variable" "temp"
      (1784867 'move' error[1784858] nil[44])
      const-val call_tmp[1080825]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804810]:string[26] "temp"
      (1080833 call tryGetPath[236383] this[1080613] ret_tmp[1804810])
      (1804813 'move' call_tmp[1080825] ret_tmp[1804810])
      (1080835 call ioerror[266269] err[1080746] "in file.reader" call_tmp[1080825] error[1784858])
      val errorExists[2073425]:bool[10] "temp"
      (2073430 'move' errorExists[2073425](2073427 '!=' error[1784858] nil[44]))
      if errorExists[2073425]
      {
        ref i_x[2094483]:string[26] "temp"
        (2094487 'move' i_x[2094483](2094485 'set reference' call_tmp[1080825]))
        (2094491 call deinit[30834] i_x[2094483])
        gotoErrorHandling handler[1784859] handler[1784859]
      }
      ref i_x[2094495]:string[26] "temp"
      (2094499 'move' i_x[2094495](2094497 'set reference' call_tmp[1080825]))
      (2094503 call deinit[30834] i_x[2094495])
      label handler[1784859]
      val errorExists[2073433]:bool[10] "temp"
      (2073438 'move' errorExists[2073433](2073435 '!=' error[1784858] nil[44]))
      if errorExists[2073433]
      {
        (1784874 '=' error_out[1784841] error[1784858])
        ref i_x[2285979]:channel(false,dynamic,false)[1080701] "temp"
        (2285983 'move' i_x[2285979](2285981 'set reference' ret[1080725]))
        (2285987 call deinit[1514289] i_x[2285979])
        gotoErrorHandlingReturn _end_reader[1080861] _end_reader[1080861]
      }
    }
    (1082098 'move' ret[1080671] ret[1080725])
    label _end_reader[1080861]
    (1806768 '=' _retArg[1806766] ret[1080671])
    (1806770 return _void[55])
  }
  function file[235599].writer[1022155](const  ref arg this[1022161]:file[235599], const in arg start[1022181]:int(64)[13], const in arg end[1022198]:int(64)[13], const in arg hints[1022204]:int(32)[95], const  ref arg style[1022211]:iostyle[231863], ref arg error_out[1783614]:Error[167984], ref arg _retArg[1805928]:channel(true,dynamic,true)[1021844]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022219]:channel(true,dynamic,true)[1021844] "dead after last mention" "RVV" "temp"
    val ret[1022238]:channel(true,dynamic,true)[1021844] "dead at end of block" "insert auto destroy"
    (1023848 call init[1022926] ret[1022238])
    val err[1022259]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169017]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169019 'move' call_tmp[2169017](2169022 call qio_int_to_err[223653] 0))
    (1022261 'move' err[1022259] call_tmp[2169017])
    ref call_tmp[2177905]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177907 'move' call_tmp[2177905](2177909 '.' this[1022161] home[235581]))
    const-val call_tmp[1022276]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128241]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128243 'move' coerce_tmp[2128241](2128245 '.v' call_tmp[2177905] _instance[89978]))
    val coerce_tmp[2128248]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128250 'move' coerce_tmp[2128248](2128252 'cast' object[22] coerce_tmp[2128241]))
    const-val call_tmp[2128255]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128257 'move' call_tmp[2128255](2128259 'ptr_eq' coerce_tmp[2128248] nil[44]))
    if call_tmp[2128255]
    {
      (2128265 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1022278 'move' call_tmp[1022276](1022280 '_wide_get_locale' coerce_tmp[2128241]))
    val error[1783617]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1783619 'move' error[1783617] nil[44])
    val rvfDerefTmp[2049011]:iostyle[231863] "temp"
    (2049015 'move' rvfDerefTmp[2049011](2049013 'deref' style[1022211]))
    val rvfDerefTmp[2049019]:file[235599] "temp"
    (2049023 'move' rvfDerefTmp[2049019](2049021 'deref' this[1022161]))
    val isdirect[2053634]:bool[10] "temp"
    (2053639 'move' isdirect[2053634](2053636 call chpl_doDirectExecuteOn[187469] call_tmp[1022276]))
    if isdirect[2053634]
    {
      (2053643 call on_fn[1022289] hints[1022204] err[1022259] start[1022181] end[1022198] rvfDerefTmp[2049011] rvfDerefTmp[2049019] ret[1022238] error[1783617])
    }
    {
      val _args_foron_fn[2053679]:_class_localson_fn[2053657] "temp"
      (2053683 'move' _args_foron_fn[2053679](2053681 'stack allocate class' _class_localson_fn[2053657]))
      (2053685 '.=' _args_foron_fn[2053679] _0_tmp[2053660] call_tmp[1022276])
      (2053689 '.=' _args_foron_fn[2053679] _1_hints[2053662] hints[1022204])
      ref tmp[2053693]:syserr[223603] "temp"
      (2053697 'move' tmp[2053693](2053695 'set reference' err[1022259]))
      (2053699 '.=' _args_foron_fn[2053679] _2_err[2053664] tmp[2053693])
      (2053703 '.=' _args_foron_fn[2053679] _3_start[2053666] start[1022181])
      (2053707 '.=' _args_foron_fn[2053679] _4_end[2053668] end[1022198])
      (2053711 '.=' _args_foron_fn[2053679] _5_rvfDerefTmp[2053670] rvfDerefTmp[2049011])
      (2053715 '.=' _args_foron_fn[2053679] _6_rvfDerefTmp[2053672] rvfDerefTmp[2049019])
      ref tmp[2053719]:channel(true,dynamic,true)[1021844] "temp"
      (2053723 'move' tmp[2053719](2053721 'set reference' ret[1022238]))
      (2053725 '.=' _args_foron_fn[2053679] _7_ret[2053674] tmp[2053719])
      ref tmp[2053729]:Error[167984] "temp"
      (2053733 'move' tmp[2053729](2053731 'set reference' error[1783617]))
      (2053735 '.=' _args_foron_fn[2053679] _8_error[2053676] tmp[2053729])
      val _args_vforon_fn[2053739]:c_void_ptr[149] "temp"
      (2053743 'move' _args_vforon_fn[2053739](2053741 'cast_to_void_star' _args_foron_fn[2053679]))
      val _args_sizeon_fn[2053745]:int(64)[13] "temp"
      (2053749 'move' _args_sizeon_fn[2053745](2053747 'sizeof_bundle' _class_localson_fn[2053657]))
      on(2053837 call wrapon_fn[2053751] call_tmp[1022276] _args_vforon_fn[2053739] _args_sizeon_fn[2053745] _args_foron_fn[2053679])
    }
    val errorExists[2072833]:bool[10] "temp"
    (2072838 'move' errorExists[2072833](2072835 '!=' error[1783617] nil[44]))
    if errorExists[2072833]
    {
      (1783623 '=' error_out[1783614] error[1783617])
      ref i_x[2285730]:channel(true,dynamic,true)[1021844] "temp"
      (2285734 'move' i_x[2285730](2285732 'set reference' ret[1022238]))
      (2285738 call deinit[1507859] i_x[2285730])
      gotoErrorHandlingReturn _end_writer[1022374] _end_writer[1022374]
    }
    const-val call_tmp[2168488]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168490 'move' call_tmp[2168488](2168493 call qio_err_iserr[223665] err[1022259]))
    const-val call_tmp[2168495]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168497 'move' call_tmp[2168495](2168499 '!=' call_tmp[2168488] 0))
    if call_tmp[2168495]
    {
      val error[1783631]:Error[167984] "error variable" "temp"
      (1783640 'move' error[1783631] nil[44])
      const-val call_tmp[1022338]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804798]:string[26] "temp"
      (1022346 call tryGetPath[236383] this[1022161] ret_tmp[1804798])
      (1804801 'move' call_tmp[1022338] ret_tmp[1804798])
      (1022348 call ioerror[266269] err[1022259] "in file.writer" call_tmp[1022338] error[1783631])
      val errorExists[2072841]:bool[10] "temp"
      (2072846 'move' errorExists[2072841](2072843 '!=' error[1783631] nil[44]))
      if errorExists[2072841]
      {
        ref i_x[2093847]:string[26] "temp"
        (2093851 'move' i_x[2093847](2093849 'set reference' call_tmp[1022338]))
        (2093855 call deinit[30834] i_x[2093847])
        gotoErrorHandling handler[1783632] handler[1783632]
      }
      ref i_x[2093859]:string[26] "temp"
      (2093863 'move' i_x[2093859](2093861 'set reference' call_tmp[1022338]))
      (2093867 call deinit[30834] i_x[2093859])
      label handler[1783632]
      val errorExists[2072849]:bool[10] "temp"
      (2072854 'move' errorExists[2072849](2072851 '!=' error[1783631] nil[44]))
      if errorExists[2072849]
      {
        (1783647 '=' error_out[1783614] error[1783631])
        ref i_x[2285742]:channel(true,dynamic,true)[1021844] "temp"
        (2285746 'move' i_x[2285742](2285744 'set reference' ret[1022238]))
        (2285750 call deinit[1507859] i_x[2285742])
        gotoErrorHandlingReturn _end_writer[1022374] _end_writer[1022374]
      }
    }
    (1023844 'move' ret[1022219] ret[1022238])
    label _end_writer[1022374]
    (1805930 '=' _retArg[1805928] ret[1022219])
    (1805932 return _void[55])
  }
  function file[235599].writer[1060872](const  ref arg this[1060878]:file[235599], const in arg start[1060898]:int(64)[13], const in arg end[1060915]:int(64)[13], const in arg hints[1060921]:int(32)[95], const  ref arg style[1060928]:iostyle[231863], ref arg error_out[1784045]:Error[167984], ref arg _retArg[1806376]:channel(true,dynamic,false)[1060966]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1060936]:channel(true,dynamic,false)[1060966] "dead after last mention" "RVV" "temp"
    val ret[1060990]:channel(true,dynamic,false)[1060966] "dead at end of block" "insert auto destroy"
    (1062370 call init[1061639] ret[1060990])
    val err[1061011]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169055]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169057 'move' call_tmp[2169055](2169060 call qio_int_to_err[223653] 0))
    (1061013 'move' err[1061011] call_tmp[2169055])
    ref call_tmp[2177951]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177953 'move' call_tmp[2177951](2177955 '.' this[1060878] home[235581]))
    const-val call_tmp[1061028]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128391]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128393 'move' coerce_tmp[2128391](2128395 '.v' call_tmp[2177951] _instance[89978]))
    val coerce_tmp[2128398]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128400 'move' coerce_tmp[2128398](2128402 'cast' object[22] coerce_tmp[2128391]))
    const-val call_tmp[2128405]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128407 'move' call_tmp[2128405](2128409 'ptr_eq' coerce_tmp[2128398] nil[44]))
    if call_tmp[2128405]
    {
      (2128415 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1061030 'move' call_tmp[1061028](1061032 '_wide_get_locale' coerce_tmp[2128391]))
    val error[1784048]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1784050 'move' error[1784048] nil[44])
    val rvfDerefTmp[2049119]:file[235599] "temp"
    (2049123 'move' rvfDerefTmp[2049119](2049121 'deref' this[1060878]))
    val rvfDerefTmp[2049140]:iostyle[231863] "temp"
    (2049144 'move' rvfDerefTmp[2049140](2049142 'deref' style[1060928]))
    val isdirect[2054347]:bool[10] "temp"
    (2054352 'move' isdirect[2054347](2054349 call chpl_doDirectExecuteOn[187469] call_tmp[1061028]))
    if isdirect[2054347]
    {
      (2054356 call on_fn[1061041] rvfDerefTmp[2049119] err[1061011] hints[1060921] start[1060898] ret[1060990] end[1060915] rvfDerefTmp[2049140] error[1784048])
    }
    {
      val _args_foron_fn[2054392]:_class_localson_fn[2054370] "temp"
      (2054396 'move' _args_foron_fn[2054392](2054394 'stack allocate class' _class_localson_fn[2054370]))
      (2054398 '.=' _args_foron_fn[2054392] _0_tmp[2054373] call_tmp[1061028])
      (2054402 '.=' _args_foron_fn[2054392] _1_rvfDerefTmp[2054375] rvfDerefTmp[2049119])
      ref tmp[2054406]:syserr[223603] "temp"
      (2054410 'move' tmp[2054406](2054408 'set reference' err[1061011]))
      (2054412 '.=' _args_foron_fn[2054392] _2_err[2054377] tmp[2054406])
      (2054416 '.=' _args_foron_fn[2054392] _3_hints[2054379] hints[1060921])
      (2054420 '.=' _args_foron_fn[2054392] _4_start[2054381] start[1060898])
      ref tmp[2054424]:channel(true,dynamic,false)[1060966] "temp"
      (2054428 'move' tmp[2054424](2054426 'set reference' ret[1060990]))
      (2054430 '.=' _args_foron_fn[2054392] _5_ret[2054383] tmp[2054424])
      (2054434 '.=' _args_foron_fn[2054392] _6_end[2054385] end[1060915])
      (2054438 '.=' _args_foron_fn[2054392] _7_rvfDerefTmp[2054387] rvfDerefTmp[2049140])
      ref tmp[2054442]:Error[167984] "temp"
      (2054446 'move' tmp[2054442](2054444 'set reference' error[1784048]))
      (2054448 '.=' _args_foron_fn[2054392] _8_error[2054389] tmp[2054442])
      val _args_vforon_fn[2054452]:c_void_ptr[149] "temp"
      (2054456 'move' _args_vforon_fn[2054452](2054454 'cast_to_void_star' _args_foron_fn[2054392]))
      val _args_sizeon_fn[2054458]:int(64)[13] "temp"
      (2054462 'move' _args_sizeon_fn[2054458](2054460 'sizeof_bundle' _class_localson_fn[2054370]))
      on(2054550 call wrapon_fn[2054464] call_tmp[1061028] _args_vforon_fn[2054452] _args_sizeon_fn[2054458] _args_foron_fn[2054392])
    }
    val errorExists[2073057]:bool[10] "temp"
    (2073062 'move' errorExists[2073057](2073059 '!=' error[1784048] nil[44]))
    if errorExists[2073057]
    {
      (1784054 '=' error_out[1784045] error[1784048])
      ref i_x[2227690]:channel(true,dynamic,false)[1060966] "temp"
      (2227694 'move' i_x[2227690](2227692 'set reference' ret[1060990]))
      (2227698 call deinit[1510035] i_x[2227690])
      gotoErrorHandlingReturn _end_writer[1061126] _end_writer[1061126]
    }
    const-val call_tmp[2168539]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168541 'move' call_tmp[2168539](2168544 call qio_err_iserr[223665] err[1061011]))
    const-val call_tmp[2168546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168548 'move' call_tmp[2168546](2168550 '!=' call_tmp[2168539] 0))
    if call_tmp[2168546]
    {
      val error[1784062]:Error[167984] "error variable" "temp"
      (1784071 'move' error[1784062] nil[44])
      const-val call_tmp[1061090]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1804804]:string[26] "temp"
      (1061098 call tryGetPath[236383] this[1060878] ret_tmp[1804804])
      (1804807 'move' call_tmp[1061090] ret_tmp[1804804])
      (1061100 call ioerror[266269] err[1061011] "in file.writer" call_tmp[1061090] error[1784062])
      val errorExists[2073065]:bool[10] "temp"
      (2073070 'move' errorExists[2073065](2073067 '!=' error[1784062] nil[44]))
      if errorExists[2073065]
      {
        ref i_x[2094243]:string[26] "temp"
        (2094247 'move' i_x[2094243](2094245 'set reference' call_tmp[1061090]))
        (2094251 call deinit[30834] i_x[2094243])
        gotoErrorHandling handler[1784063] handler[1784063]
      }
      ref i_x[2094255]:string[26] "temp"
      (2094259 'move' i_x[2094255](2094257 'set reference' call_tmp[1061090]))
      (2094263 call deinit[30834] i_x[2094255])
      label handler[1784063]
      val errorExists[2073073]:bool[10] "temp"
      (2073078 'move' errorExists[2073073](2073075 '!=' error[1784062] nil[44]))
      if errorExists[2073073]
      {
        (1784078 '=' error_out[1784045] error[1784062])
        ref i_x[2227702]:channel(true,dynamic,false)[1060966] "temp"
        (2227706 'move' i_x[2227702](2227704 'set reference' ret[1060990]))
        (2227710 call deinit[1510035] i_x[2227702])
        gotoErrorHandlingReturn _end_writer[1061126] _end_writer[1061126]
      }
    }
    (1062366 'move' ret[1060936] ret[1060990])
    label _end_writer[1061126]
    (1806378 '=' _retArg[1806376] ret[1060936])
    (1806380 return _void[55])
  }
  function _write_text_internal[1078779](const in arg _channel_internal[1078781]:qio_channel_ptr_t[231484], const in arg x[1078783]:int(64)[13]) : syserr[223603] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1078955]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1079574]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079580 'move' coerce_tmp[1079574](1079576 'cast' int(32)[95] 0))
    const-val coerce_tmp[1079582]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079588 'move' coerce_tmp[1079582](1079584 'cast' uint(64)[115] 8))
    const-val coerce_tmp[1079590]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079596 'move' coerce_tmp[1079590](1079592 'cast' int(32)[95] 1))
    (1078957 'move' call_tmp[1078955](1078960 call qio_channel_print_int[1079544] coerce_tmp[1079574] _channel_internal[1078781] x[1078783] coerce_tmp[1079582] coerce_tmp[1079590]))
    label _end__write_text_internal[1079527]
    (1079529 return call_tmp[1078955])
  }
  function _write_text_internal[1172863](const in arg _channel_internal[1172865]:qio_channel_ptr_t[231484], const  ref arg x[1172867]:string[26]) : syserr[223603] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1172881]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
    val ret[2111596]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2111598]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2111600 'move' coerce_tmp[2111598](2111602 '.v' x[1172867] locale_id[30757]))
    const-val call_tmp[2111605]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2111607 'move' call_tmp[2111605](2111609 '==' coerce_tmp[2111598] chpl_nodeID[208207]))
    if call_tmp[2111605]
    {
      const-val ret[2111614]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2111616]:string[26] "dead at end of block" "insert auto destroy"
      (2111619 call init[30763] ret[2111616])
      const-val coerce_tmp[2111621]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2111623 'move' coerce_tmp[2111621](2111625 '.v' x[1172867] cachedNumCodepoints[30734]))
      (2111628 '.=' ret[2111616] cachedNumCodepoints[30734] coerce_tmp[2111621])
      (2111633 call initWithBorrowedBuffer[948893] ret[2111616] x[1172867])
      (2111636 'move' ret[2111614] ret[2111616])
      (2111639 'move' ret[2111596] ret[2111614])
      gotoReturn _end_localize[2111657] _end_localize[2111657]
    }
    {
      const-val x[2111645]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2111648 call init=[30774] x[2111645] x[1172867])
      (2111651 'move' ret[2111596] x[2111645])
      gotoReturn _end_localize[2111657] _end_localize[2111657]
    }
    label _end_localize[2111657]
    const local_x[1173282]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1173284 'move' local_x[1173282] ret[2111596])
    const-val tmp[1173641]:bool[10] "dead after last mention" "const" "temp"
    (1173643 'move' tmp[1173641](2323456 '.v' local_x[1173282] hasEscapes[30752]))
    if tmp[1173641]
    {
      const-val call_tmp[2169245]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      (2169247 'move' call_tmp[2169245](2169250 call qio_int_to_err[223653] EILSEQ[224463]))
      (2169252 '=' ret[1172881] call_tmp[2169245])
      ref i_x[2095047]:string[26] "temp"
      (2095051 'move' i_x[2095047](2095049 'set reference' local_x[1173282]))
      (2095055 call deinit[30834] i_x[2095047])
      gotoReturn _end__write_text_internal[1173611] _end__write_text_internal[1173611]
    }
    const-val coerce_tmp[2114527]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2114529 'move' coerce_tmp[2114527](2114531 '.v' local_x[1173282] locale_id[30757]))
    const-val call_tmp[2114534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114536 'move' call_tmp[2114534](2114538 '!=' coerce_tmp[2114527] chpl_nodeID[208207]))
    if call_tmp[2114534]
    {
      (2114544 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2114547]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2114549 'move' coerce_tmp[2114547](2114551 '.v' local_x[1173282] buff[30740]))
    const-val call_tmp[2114554]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2114556 'move' call_tmp[2114554](2114558 'cast' c_string[19] coerce_tmp[2114547]))
    val ret[2106533]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2106535 'move' ret[2106533](2106537 '.v' local_x[1173282] buffLen[30722]))
    const-val call_tmp[1173338]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1173650]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1173656 'move' coerce_tmp[1173650](1173652 'cast' int(32)[95] 0))
    (1173340 'move' call_tmp[1173338](1173343 call qio_channel_print_string[234856] coerce_tmp[1173650] _channel_internal[1172865] call_tmp[2114554] ret[2106533]))
    (1173669 'move' ret[1172881] call_tmp[1173338])
    ref i_x[2095059]:string[26] "temp"
    (2095063 'move' i_x[2095059](2095061 'set reference' local_x[1173282]))
    (2095067 call deinit[30834] i_x[2095059])
    label _end__write_text_internal[1173611]
    (1173613 return ret[1172881])
  }
  function _write_text_internal[1405597](const in arg _channel_internal[1405599]:qio_channel_ptr_t[231484], const in arg x[1405601]:real(64)[16]) : syserr[223603] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1405827]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1406390]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1406396 'move' coerce_tmp[1406390](1406392 'cast' int(32)[95] 0))
    const-val coerce_tmp[1406398]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1406404 'move' coerce_tmp[1406398](1406400 'cast' uint(64)[115] 8))
    (1405829 'move' call_tmp[1405827](1405832 call qio_channel_print_float[1406364] coerce_tmp[1406390] _channel_internal[1405599] x[1405601] coerce_tmp[1406398]))
    label _end__write_text_internal[1406345]
    (1406347 return call_tmp[1405827])
  }
  function channel(true,dynamic,false)[1060966]._constructIoErrorMsg[1079631](const  ref arg this[1079637]:channel(true,dynamic,false)[1060966], const in arg x[1079641]:int(64)[13], ref arg _retArg[1806726]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079645]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079657]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166365]:string[26] "temp"
    (2166368 'move' inlineImm[2166365] "while ")
    ref i_x[2166370]:string[26] "temp"
    (2166374 'move' i_x[2166370](2166372 'set reference' inlineImm[2166365]))
    val ret[2166377]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166379]:string[26] "dead after last mention" "temp"
    (2166382 call init=[30774] tmp[2166379] i_x[2166370])
    (2166385 'move' ret[2166377] tmp[2166379])
    (1079659 'move' result[1079657] ret[2166377])
    (1079696 call +=[38800] result[1079657] "writing ")
    (1079716 call +=[38800] result[1079657] "int(64)")
    (1079850 'move' ret[1079645] result[1079657])
    label _end__constructIoErrorMsg[1079826]
    (1806728 '=' _retArg[1806726] ret[1079645])
    (1806732 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._constructIoErrorMsg[1079924](const  ref arg this[1079930]:channel(true,dynamic,false)[1060966], const  ref arg x[1079934]:byteIndex[28173], ref arg _retArg[1806740]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079938]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079950]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166390]:string[26] "temp"
    (2166393 'move' inlineImm[2166390] "while ")
    ref i_x[2166395]:string[26] "temp"
    (2166399 'move' i_x[2166395](2166397 'set reference' inlineImm[2166390]))
    val ret[2166402]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166404]:string[26] "dead after last mention" "temp"
    (2166407 call init=[30774] tmp[2166404] i_x[2166395])
    (2166410 'move' ret[2166402] tmp[2166404])
    (1079952 'move' result[1079950] ret[2166402])
    (1079989 call +=[38800] result[1079950] "writing ")
    (1080009 call +=[38800] result[1079950] "byteIndex")
    (1080157 'move' ret[1079938] result[1079950])
    label _end__constructIoErrorMsg[1080119]
    (1806742 '=' _retArg[1806740] ret[1079938])
    (1806746 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._constructIoErrorMsg[1173698](const  ref arg this[1173704]:channel(true,dynamic,false)[1060966], const  ref arg x[1173708]:string[26], ref arg _retArg[1807959]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173712]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173724]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166515]:string[26] "temp"
    (2166518 'move' inlineImm[2166515] "while ")
    ref i_x[2166520]:string[26] "temp"
    (2166524 'move' i_x[2166520](2166522 'set reference' inlineImm[2166515]))
    val ret[2166527]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166529]:string[26] "dead after last mention" "temp"
    (2166532 call init=[30774] tmp[2166529] i_x[2166520])
    (2166535 'move' ret[2166527] tmp[2166529])
    (1173726 'move' result[1173724] ret[2166527])
    (1173763 call +=[38800] result[1173724] "writing ")
    (1173783 call +=[38800] result[1173724] "string")
    (1173917 'move' ret[1173712] result[1173724])
    label _end__constructIoErrorMsg[1173893]
    (1807961 '=' _retArg[1807959] ret[1173712])
    (1807965 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._constructIoErrorMsg[1175416](const  ref arg this[1175422]:channel(true,dynamic,false)[1060966], const  ref arg x[1175426]:codepointIndex[28277], ref arg _retArg[1807973]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175430]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175442]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166540]:string[26] "temp"
    (2166543 'move' inlineImm[2166540] "while ")
    ref i_x[2166545]:string[26] "temp"
    (2166549 'move' i_x[2166545](2166547 'set reference' inlineImm[2166540]))
    val ret[2166552]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166554]:string[26] "dead after last mention" "temp"
    (2166557 call init=[30774] tmp[2166554] i_x[2166545])
    (2166560 'move' ret[2166552] tmp[2166554])
    (1175444 'move' result[1175442] ret[2166552])
    (1175481 call +=[38800] result[1175442] "writing ")
    (1175501 call +=[38800] result[1175442] "codepointIndex")
    (1175651 'move' ret[1175430] result[1175442])
    label _end__constructIoErrorMsg[1175611]
    (1807975 '=' _retArg[1807973] ret[1175430])
    (1807979 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._constructIoErrorMsg[1390469](const  ref arg this[1390475]:channel(true,dynamic,true)[1021844], const  ref arg x[1390479]:string[26], ref arg _retArg[1811570]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1390483]:string[26] "dead after last mention" "RVV" "temp"
    val result[1390495]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166715]:string[26] "temp"
    (2166718 'move' inlineImm[2166715] "while ")
    ref i_x[2166720]:string[26] "temp"
    (2166724 'move' i_x[2166720](2166722 'set reference' inlineImm[2166715]))
    val ret[2166727]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166729]:string[26] "dead after last mention" "temp"
    (2166732 call init=[30774] tmp[2166729] i_x[2166720])
    (2166735 'move' ret[2166727] tmp[2166729])
    (1390497 'move' result[1390495] ret[2166727])
    (1390534 call +=[38800] result[1390495] "writing ")
    (1390554 call +=[38800] result[1390495] "string")
    (1390688 'move' ret[1390483] result[1390495])
    label _end__constructIoErrorMsg[1390664]
    (1811572 '=' _retArg[1811570] ret[1390483])
    (1811576 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._constructIoErrorMsg[1393631](const  ref arg this[1393637]:channel(true,dynamic,true)[1021844], const  ref arg x[1393641]:ioNewline[238720], ref arg _retArg[1811584]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1393645]:string[26] "dead after last mention" "RVV" "temp"
    val result[1393657]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166740]:string[26] "temp"
    (2166743 'move' inlineImm[2166740] "while ")
    ref i_x[2166745]:string[26] "temp"
    (2166749 'move' i_x[2166745](2166747 'set reference' inlineImm[2166740]))
    val ret[2166752]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166754]:string[26] "dead after last mention" "temp"
    (2166757 call init=[30774] tmp[2166754] i_x[2166745])
    (2166760 'move' ret[2166752] tmp[2166754])
    (1393659 'move' result[1393657] ret[2166752])
    (1393696 call +=[38800] result[1393657] "writing ")
    (1393716 call +=[38800] result[1393657] "ioNewline")
    (1393754 call +=[38800] result[1393657] " newline")
    (1393911 'move' ret[1393645] result[1393657])
    label _end__constructIoErrorMsg[1393826]
    (1811586 '=' _retArg[1811584] ret[1393645])
    (1811590 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._constructIoErrorMsg[1406437](const  ref arg this[1406443]:channel(true,dynamic,true)[1021844], const in arg x[1406447]:real(64)[16], ref arg _retArg[1811640]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1406451]:string[26] "dead after last mention" "RVV" "temp"
    val result[1406463]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166765]:string[26] "temp"
    (2166768 'move' inlineImm[2166765] "while ")
    ref i_x[2166770]:string[26] "temp"
    (2166774 'move' i_x[2166770](2166772 'set reference' inlineImm[2166765]))
    val ret[2166777]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166779]:string[26] "dead after last mention" "temp"
    (2166782 call init=[30774] tmp[2166779] i_x[2166770])
    (2166785 'move' ret[2166777] tmp[2166779])
    (1406465 'move' result[1406463] ret[2166777])
    (1406502 call +=[38800] result[1406463] "writing ")
    (1406522 call +=[38800] result[1406463] "real(64)")
    (1406672 'move' ret[1406451] result[1406463])
    label _end__constructIoErrorMsg[1406632]
    (1811642 '=' _retArg[1811640] ret[1406451])
    (1811646 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._writeOne[1067031](const  ref arg this[1067037]:channel(true,dynamic,false)[1060966], const  ref arg x[1067041]:byteIndex[28173], const  ref arg loc[1067043]:locale[28], ref arg error_out[1784435]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1068380]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068384 'move' coerce_tmp[1068380](2322309 '.v' this[1067037] _channel_internal[1060959]))
    val error[1784440]:Error[167984] "error variable" "temp"
    (1784442 'move' error[1784440] nil[44])
    val ret[2228015]:syserr[223603] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2228017]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2228019]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2228021]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2228023 'move' call_tmp[2228021](2228026 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2228029 'move' call_tmp[2228019] call_tmp[2228021])
    const-val call_tmp[2228032]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2228034]:locale[28] "temp"
    (2228037 call chpl_localeID_to_locale[92852] call_tmp[2228019] ret_tmp[2228034])
    (2228040 'move' call_tmp[2228032] ret_tmp[2228034])
    (2228043 'move' call_tmp[2228017] call_tmp[2228032])
    const-val call_tmp[2228046]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2228048]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "temp"
    (2228051 call init[1068407] initTemp[2228048] call_tmp[2228017] coerce_tmp[1068380] loc[1067043])
    (2228056 'move' call_tmp[2228046] initTemp[2228048])
    val writer[2228059]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2228061 'move' writer[2228059] call_tmp[2228046])
    const-val call_tmp[2228066]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228068 'move' call_tmp[2228066](2228071 call qio_int_to_err[223653] 0))
    val error[2228076]:Error[167984] "error variable" "temp"
    (2228078 'move' error[2228076] nil[44])
    (2228082 call writeThis[1068639] x[1067041] writer[2228059] error[2228076])
    val errorExists[2228086]:bool[10] "temp"
    (2228088 'move' errorExists[2228086](2228090 '!=' error[2228076] nil[44]))
    if errorExists[2228086]
    {
      gotoErrorHandling handler[2228098] handler[2228098]
    }
    label handler[2228098]
    val errorExists[2228100]:bool[10] "temp"
    (2228102 'move' errorExists[2228100](2228104 '!=' error[2228076] nil[44]))
    if errorExists[2228100]
    {
      (2228109 '=' error[1784440] error[2228076])
      (2228112 '.=' writer[2228059] _channel_internal[1060959] QIO_CHANNEL_PTR_NULL[231487])
      ref i_x[2228116]:channel(true,dynamic,false)[1060966] "temp"
      (2228118 'move' i_x[2228116](2228120 'set reference' writer[2228059]))
      (2228123 call deinit[1510035] i_x[2228116])
      ref i_x[2228125]:locale[28] "temp"
      (2228127 'move' i_x[2228125](2228129 'set reference' call_tmp[2228017]))
      (2228132 call deinit[90188] i_x[2228125])
      gotoErrorHandlingReturn _end__write_one_internal[2228162] _end__write_one_internal[2228162]
    }
    (2228137 'move' ret[2228015] call_tmp[2228066])
    (2228140 '.=' writer[2228059] _channel_internal[1060959] QIO_CHANNEL_PTR_NULL[231487])
    ref i_x[2228144]:channel(true,dynamic,false)[1060966] "temp"
    (2228146 'move' i_x[2228144](2228148 'set reference' writer[2228059]))
    (2228151 call deinit[1510035] i_x[2228144])
    ref i_x[2228153]:locale[28] "temp"
    (2228155 'move' i_x[2228153](2228157 'set reference' call_tmp[2228017]))
    (2228160 call deinit[90188] i_x[2228153])
    label _end__write_one_internal[2228162]
    val errorExists[2073225]:bool[10] "temp"
    (2073230 'move' errorExists[2073225](2073227 '!=' error[1784440] nil[44]))
    if errorExists[2073225]
    {
      (1784446 '=' error_out[1784435] error[1784440])
      gotoErrorHandlingReturn _end_writeOne[1784437] _end_writeOne[1784437]
    }
    const-val call_tmp[2168094]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168096 'move' call_tmp[2168094](2168099 call qio_err_to_int[223635] ret[2228015]))
    const-val call_tmp[2168101]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168103 'move' call_tmp[2168101](2168105 '==' call_tmp[2168094] 0))
    const-val call_tmp[2168108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168110 'move' call_tmp[2168108](2168112 '!' call_tmp[2168101]))
    if call_tmp[2168108]
    {
      const-val call_tmp[1067100]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1806734]:string[26] "temp"
      (1067108 call _constructIoErrorMsg[1079924] this[1067037] x[1067041] ret_tmp[1806734])
      (1806737 'move' call_tmp[1067100] ret_tmp[1806734])
      val msg[1067111]:string[26] "dead at end of block" "insert auto destroy"
      (1067113 'move' msg[1067111] call_tmp[1067100])
      const-val call_tmp[2167895]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167897 'move' call_tmp[2167895](2167900 call qio_err_to_int[223635] ret[2228015]))
      const-val call_tmp[2167902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167904 'move' call_tmp[2167902](2167906 '==' call_tmp[2167895] EILSEQ[224463]))
      if call_tmp[2167902]
      {
        const-val call_tmp[1067142]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803398]:string[26] "temp"
        (1067147 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067111] ret_tmp[1803398])
        (1803401 'move' call_tmp[1067142] ret_tmp[1803398])
        (1067151 call =[38272] msg[1067111] call_tmp[1067142])
        ref i_x[2094315]:string[26] "temp"
        (2094319 'move' i_x[2094315](2094317 'set reference' call_tmp[1067142]))
        (2094323 call deinit[30834] i_x[2094315])
      }
      val error[1784454]:Error[167984] "error variable" "temp"
      (1784463 'move' error[1784454] nil[44])
      (1067163 call _ch_ioerror[1062884] this[1067037] ret[2228015] msg[1067111] error[1784454])
      val errorExists[2073233]:bool[10] "temp"
      (2073238 'move' errorExists[2073233](2073235 '!=' error[1784454] nil[44]))
      if errorExists[2073233]
      {
        gotoErrorHandling handler[1784455] handler[1784455]
      }
      label handler[1784455]
      val errorExists[2073241]:bool[10] "temp"
      (2073246 'move' errorExists[2073241](2073243 '!=' error[1784454] nil[44]))
      if errorExists[2073241]
      {
        (1784470 '=' error_out[1784435] error[1784454])
        ref i_x[2094327]:string[26] "temp"
        (2094331 'move' i_x[2094327](2094329 'set reference' msg[1067111]))
        (2094335 call deinit[30834] i_x[2094327])
        gotoErrorHandlingReturn _end_writeOne[1784437] _end_writeOne[1784437]
      }
      ref i_x[2094339]:string[26] "temp"
      (2094343 'move' i_x[2094339](2094341 'set reference' msg[1067111]))
      (2094347 call deinit[30834] i_x[2094339])
    }
    label _end_writeOne[1784437]
    (1067171 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._writeOne[1068956](const  ref arg this[1068962]:channel(true,dynamic,false)[1060966], const in arg x[1068966]:int(64)[13], const  ref arg loc[1068968]:locale[28], ref arg error_out[1784672]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1070224]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070228 'move' coerce_tmp[1070224](2322332 '.v' this[1068962] _channel_internal[1060959]))
    val error[1784677]:Error[167984] "error variable" "temp"
    (1784679 'move' error[1784677] nil[44])
    val ret[2228483]:syserr[223603] "dead after last mention" "RVV" "temp"
    val e[2228485]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2228487]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228489 'move' call_tmp[2228487](2228492 call qio_int_to_err[223653] 0))
    (2228494 'move' e[2228485] call_tmp[2228487])
    const-val call_tmp[2228497]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2228499 'move' call_tmp[2228497](2228502 call qio_channel_binary[233076] coerce_tmp[1070224]))
    const-val call_tmp[2228504]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2228506 'move' call_tmp[2228504](2228509 call qio_channel_byteorder[233091] coerce_tmp[1070224]))
    const-val coerce_tmp[2228516]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2228518 'move' coerce_tmp[2228516](2228520 'cast' int(64)[13] call_tmp[2228497]))
    const-val call_tmp[2228523]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228525 'move' call_tmp[2228523](2228527 '!=' coerce_tmp[2228516] 0))
    if call_tmp[2228523]
    {
      const-val tmp[2228532]:iokind[230950] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2228534]:Error[167984] "error variable" "temp"
      (2228536 'move' error[2228534] nil[44])
      (2228539 'move' tmp[2228532](2228542 call _cast[1070327] call_tmp[2228504] error[2228534]))
      val errorExists[2228545]:bool[10] "temp"
      (2228547 'move' errorExists[2228545](2228549 '!=' error[2228534] nil[44]))
      if errorExists[2228545]
      {
        (2228554 '=' error[1784677] error[2228534])
        gotoErrorHandlingReturn _end__write_one_internal[2228658] _end__write_one_internal[2228658]
      }
      const-val call_tmp[2228560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2228562 'move' call_tmp[2228560](2228564 '==' tmp[2228532] big[230945]))
      if call_tmp[2228560]
      {
        const-val call_tmp[2228569]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2228571]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2228573 'move' coerce_tmp[2228571](2228575 'cast' int(32)[95] 0))
        (2228578 'move' call_tmp[2228569](2228581 call qio_channel_write_int64[234069] coerce_tmp[2228571] 2 coerce_tmp[1070224] x[1068966]))
        (2228586 '=' e[2228485] call_tmp[2228569])
      }
      {
        const-val call_tmp[2228590]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2228592 'move' call_tmp[2228590](2228594 '==' tmp[2228532] little[230948]))
        if call_tmp[2228590]
        {
          const-val call_tmp[2228599]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2228601]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2228603 'move' coerce_tmp[2228601](2228605 'cast' int(32)[95] 0))
          (2228608 'move' call_tmp[2228599](2228611 call qio_channel_write_int64[234069] coerce_tmp[2228601] 3 coerce_tmp[1070224] x[1068966]))
          (2228616 '=' e[2228485] call_tmp[2228599])
        }
        {
          const-val call_tmp[2228620]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2228622]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2228624 'move' coerce_tmp[2228622](2228626 'cast' int(32)[95] 0))
          (2228629 'move' call_tmp[2228620](2228632 call qio_channel_write_int64[234069] coerce_tmp[2228622] 1 coerce_tmp[1070224] x[1068966]))
          (2228637 '=' e[2228485] call_tmp[2228620])
        }
      }
    }
    {
      const-val call_tmp[2228643]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      (2228645 'move' call_tmp[2228643](2228648 call _write_text_internal[1078779] coerce_tmp[1070224] x[1068966]))
      (2228651 '=' e[2228485] call_tmp[2228643])
    }
    (2228655 'move' ret[2228483] e[2228485])
    label _end__write_one_internal[2228658]
    val errorExists[2073345]:bool[10] "temp"
    (2073350 'move' errorExists[2073345](2073347 '!=' error[1784677] nil[44]))
    if errorExists[2073345]
    {
      (1784683 '=' error_out[1784672] error[1784677])
      gotoErrorHandlingReturn _end_writeOne[1784674] _end_writeOne[1784674]
    }
    const-val call_tmp[2168071]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168073 'move' call_tmp[2168071](2168076 call qio_err_to_int[223635] ret[2228483]))
    const-val call_tmp[2168078]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168080 'move' call_tmp[2168078](2168082 '==' call_tmp[2168071] 0))
    const-val call_tmp[2168085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168087 'move' call_tmp[2168085](2168089 '!' call_tmp[2168078]))
    if call_tmp[2168085]
    {
      const-val call_tmp[1069025]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1806720]:string[26] "temp"
      (1069033 call _constructIoErrorMsg[1079631] this[1068962] x[1068966] ret_tmp[1806720])
      (1806723 'move' call_tmp[1069025] ret_tmp[1806720])
      val msg[1069036]:string[26] "dead at end of block" "insert auto destroy"
      (1069038 'move' msg[1069036] call_tmp[1069025])
      const-val call_tmp[2167878]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167880 'move' call_tmp[2167878](2167883 call qio_err_to_int[223635] ret[2228483]))
      const-val call_tmp[2167885]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167887 'move' call_tmp[2167885](2167889 '==' call_tmp[2167878] EILSEQ[224463]))
      if call_tmp[2167885]
      {
        const-val call_tmp[1069067]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803404]:string[26] "temp"
        (1069072 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069036] ret_tmp[1803404])
        (1803407 'move' call_tmp[1069067] ret_tmp[1803404])
        (1069076 call =[38272] msg[1069036] call_tmp[1069067])
        ref i_x[2094351]:string[26] "temp"
        (2094355 'move' i_x[2094351](2094353 'set reference' call_tmp[1069067]))
        (2094359 call deinit[30834] i_x[2094351])
      }
      val error[1784691]:Error[167984] "error variable" "temp"
      (1784700 'move' error[1784691] nil[44])
      (1069088 call _ch_ioerror[1062884] this[1068962] ret[2228483] msg[1069036] error[1784691])
      val errorExists[2073353]:bool[10] "temp"
      (2073358 'move' errorExists[2073353](2073355 '!=' error[1784691] nil[44]))
      if errorExists[2073353]
      {
        gotoErrorHandling handler[1784692] handler[1784692]
      }
      label handler[1784692]
      val errorExists[2073361]:bool[10] "temp"
      (2073366 'move' errorExists[2073361](2073363 '!=' error[1784691] nil[44]))
      if errorExists[2073361]
      {
        (1784707 '=' error_out[1784672] error[1784691])
        ref i_x[2094363]:string[26] "temp"
        (2094367 'move' i_x[2094363](2094365 'set reference' msg[1069036]))
        (2094371 call deinit[30834] i_x[2094363])
        gotoErrorHandlingReturn _end_writeOne[1784674] _end_writeOne[1784674]
      }
      ref i_x[2094375]:string[26] "temp"
      (2094379 'move' i_x[2094375](2094377 'set reference' msg[1069036]))
      (2094383 call deinit[30834] i_x[2094375])
    }
    label _end_writeOne[1784674]
    (1069096 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._writeOne[1165179](const  ref arg this[1165185]:channel(true,dynamic,false)[1060966], const  ref arg x[1165189]:string[26], const  ref arg loc[1165191]:locale[28], ref arg error_out[1785470]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1168049]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168053 'move' coerce_tmp[1168049](2323446 '.v' this[1165185] _channel_internal[1060959]))
    val error[1785475]:Error[167984] "error variable" "temp"
    (1785477 'move' error[1785475] nil[44])
    val ret[2233030]:syserr[223603] "dead after last mention" "RVV" "temp"
    val e[2233032]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2233034]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233036 'move' call_tmp[2233034](2233039 call qio_int_to_err[223653] 0))
    (2233041 'move' e[2233032] call_tmp[2233034])
    const-val call_tmp[2233044]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2233046 'move' call_tmp[2233044](2233049 call qio_channel_binary[233076] coerce_tmp[1168049]))
    const-val call_tmp[2233051]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2233053 'move' call_tmp[2233051](2233056 call qio_channel_byteorder[233091] coerce_tmp[1168049]))
    const-val coerce_tmp[2233063]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2233065 'move' coerce_tmp[2233063](2233067 'cast' int(64)[13] call_tmp[2233044]))
    const-val call_tmp[2233070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233072 'move' call_tmp[2233070](2233074 '!=' coerce_tmp[2233063] 0))
    if call_tmp[2233070]
    {
      const-val tmp[2233079]:iokind[230950] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2233081]:Error[167984] "error variable" "temp"
      (2233083 'move' error[2233081] nil[44])
      (2233086 'move' tmp[2233079](2233089 call _cast[1070327] call_tmp[2233051] error[2233081]))
      val errorExists[2233092]:bool[10] "temp"
      (2233094 'move' errorExists[2233092](2233096 '!=' error[2233081] nil[44]))
      if errorExists[2233092]
      {
        (2233101 '=' error[1785475] error[2233081])
        gotoErrorHandlingReturn _end__write_one_internal[2233700] _end__write_one_internal[2233700]
      }
      const-val call_tmp[2233107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2233109 'move' call_tmp[2233107](2233111 '==' tmp[2233079] big[230945]))
      if call_tmp[2233107]
      {
        val ret[2233116]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2233118]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2233120]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233122 'move' coerce_tmp[2233120](2233124 '.v' x[1165189] locale_id[30757]))
        const-val call_tmp[2233127]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233129 'move' call_tmp[2233127](2233131 '==' coerce_tmp[2233120] chpl_nodeID[208207]))
        if call_tmp[2233127]
        {
          const-val ret[2233136]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2233138]:string[26] "dead at end of block" "insert auto destroy"
          (2233141 call init[30763] ret[2233138])
          const-val coerce_tmp[2233143]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233145 'move' coerce_tmp[2233143](2233147 '.v' x[1165189] cachedNumCodepoints[30734]))
          (2233150 '.=' ret[2233138] cachedNumCodepoints[30734] coerce_tmp[2233143])
          (2233155 call initWithBorrowedBuffer[948893] ret[2233138] x[1165189])
          (2233158 'move' ret[2233136] ret[2233138])
          (2233161 'move' ret[2233118] ret[2233136])
          gotoReturn _end_localize[2233179] _end_localize[2233179]
        }
        {
          const-val x[2233167]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2233170 call init=[30774] x[2233167] x[1165189])
          (2233173 'move' ret[2233118] x[2233167])
          gotoReturn _end_localize[2233179] _end_localize[2233179]
        }
        label _end_localize[2233179]
        val local_x[2233181]:string[26] "dead at end of block" "insert auto destroy"
        (2233183 'move' local_x[2233181] ret[2233118])
        const-val tmp[2233186]:bool[10] "dead after last mention" "const" "temp"
        (2233188 'move' tmp[2233186](2233190 '.v' local_x[2233181] hasEscapes[30752]))
        if tmp[2233186]
        {
          const-val call_tmp[2233195]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233197 'move' call_tmp[2233195](2233200 call qio_int_to_err[223653] EILSEQ[224463]))
          (2233202 '=' ret[2233116] call_tmp[2233195])
          ref i_x[2233205]:string[26] "temp"
          (2233207 'move' i_x[2233205](2233209 'set reference' local_x[2233181]))
          (2233212 call deinit[30834] i_x[2233205])
          gotoReturn _end__write_binary_internal[2233296] _end__write_binary_internal[2233296]
        }
        const-val call_tmp[2233217]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233219 'move' call_tmp[2233217](2233222 call qio_channel_str_style[233106] coerce_tmp[1168049]))
        const-val coerce_tmp[2233224]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233226 'move' coerce_tmp[2233224](2233228 '.v' local_x[2233181] locale_id[30757]))
        const-val call_tmp[2233231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233233 'move' call_tmp[2233231](2233235 '!=' coerce_tmp[2233224] chpl_nodeID[208207]))
        if call_tmp[2233231]
        {
          (2233241 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2233244]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233246 'move' coerce_tmp[2233244](2233248 '.v' local_x[2233181] buff[30740]))
        const-val call_tmp[2233251]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233253 'move' call_tmp[2233251](2233255 'cast' c_string[19] coerce_tmp[2233244]))
        val ret[2233258]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2233260 'move' ret[2233258](2233262 '.v' local_x[2233181] buffLen[30722]))
        const-val call_tmp[2233265]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2233267]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233269 'move' coerce_tmp[2233267](2233271 'cast' int(32)[95] 0))
        (2233274 'move' call_tmp[2233265](2233277 call qio_channel_write_string[234408] coerce_tmp[2233267] 2 call_tmp[2233217] coerce_tmp[1168049] call_tmp[2233251] ret[2233258]))
        (2233284 'move' ret[2233116] call_tmp[2233265])
        ref i_x[2233287]:string[26] "temp"
        (2233289 'move' i_x[2233287](2233291 'set reference' local_x[2233181]))
        (2233294 call deinit[30834] i_x[2233287])
        label _end__write_binary_internal[2233296]
        (2233298 '=' e[2233032] ret[2233116])
      }
      {
        const-val call_tmp[2233302]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233304 'move' call_tmp[2233302](2233306 '==' tmp[2233079] little[230948]))
        if call_tmp[2233302]
        {
          val ret[2233311]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2233313]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2233315]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233317 'move' coerce_tmp[2233315](2233319 '.v' x[1165189] locale_id[30757]))
          const-val call_tmp[2233322]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233324 'move' call_tmp[2233322](2233326 '==' coerce_tmp[2233315] chpl_nodeID[208207]))
          if call_tmp[2233322]
          {
            const-val ret[2233331]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2233333]:string[26] "dead at end of block" "insert auto destroy"
            (2233336 call init[30763] ret[2233333])
            const-val coerce_tmp[2233338]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2233340 'move' coerce_tmp[2233338](2233342 '.v' x[1165189] cachedNumCodepoints[30734]))
            (2233345 '.=' ret[2233333] cachedNumCodepoints[30734] coerce_tmp[2233338])
            (2233350 call initWithBorrowedBuffer[948893] ret[2233333] x[1165189])
            (2233353 'move' ret[2233331] ret[2233333])
            (2233356 'move' ret[2233313] ret[2233331])
            gotoReturn _end_localize[2233374] _end_localize[2233374]
          }
          {
            const-val x[2233362]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2233365 call init=[30774] x[2233362] x[1165189])
            (2233368 'move' ret[2233313] x[2233362])
            gotoReturn _end_localize[2233374] _end_localize[2233374]
          }
          label _end_localize[2233374]
          val local_x[2233376]:string[26] "dead at end of block" "insert auto destroy"
          (2233378 'move' local_x[2233376] ret[2233313])
          const-val tmp[2233381]:bool[10] "dead after last mention" "const" "temp"
          (2233383 'move' tmp[2233381](2233385 '.v' local_x[2233376] hasEscapes[30752]))
          if tmp[2233381]
          {
            const-val call_tmp[2233390]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
            (2233392 'move' call_tmp[2233390](2233395 call qio_int_to_err[223653] EILSEQ[224463]))
            (2233397 '=' ret[2233311] call_tmp[2233390])
            ref i_x[2233400]:string[26] "temp"
            (2233402 'move' i_x[2233400](2233404 'set reference' local_x[2233376]))
            (2233407 call deinit[30834] i_x[2233400])
            gotoReturn _end__write_binary_internal[2233491] _end__write_binary_internal[2233491]
          }
          const-val call_tmp[2233412]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233414 'move' call_tmp[2233412](2233417 call qio_channel_str_style[233106] coerce_tmp[1168049]))
          const-val coerce_tmp[2233419]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233421 'move' coerce_tmp[2233419](2233423 '.v' local_x[2233376] locale_id[30757]))
          const-val call_tmp[2233426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233428 'move' call_tmp[2233426](2233430 '!=' coerce_tmp[2233419] chpl_nodeID[208207]))
          if call_tmp[2233426]
          {
            (2233436 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2233439]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233441 'move' coerce_tmp[2233439](2233443 '.v' local_x[2233376] buff[30740]))
          const-val call_tmp[2233446]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233448 'move' call_tmp[2233446](2233450 'cast' c_string[19] coerce_tmp[2233439]))
          val ret[2233453]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2233455 'move' ret[2233453](2233457 '.v' local_x[2233376] buffLen[30722]))
          const-val call_tmp[2233460]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2233462]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233464 'move' coerce_tmp[2233462](2233466 'cast' int(32)[95] 0))
          (2233469 'move' call_tmp[2233460](2233472 call qio_channel_write_string[234408] coerce_tmp[2233462] 3 call_tmp[2233412] coerce_tmp[1168049] call_tmp[2233446] ret[2233453]))
          (2233479 'move' ret[2233311] call_tmp[2233460])
          ref i_x[2233482]:string[26] "temp"
          (2233484 'move' i_x[2233482](2233486 'set reference' local_x[2233376]))
          (2233489 call deinit[30834] i_x[2233482])
          label _end__write_binary_internal[2233491]
          (2233493 '=' e[2233032] ret[2233311])
        }
        {
          val ret[2233497]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2233499]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2233501]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233503 'move' coerce_tmp[2233501](2233505 '.v' x[1165189] locale_id[30757]))
          const-val call_tmp[2233508]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233510 'move' call_tmp[2233508](2233512 '==' coerce_tmp[2233501] chpl_nodeID[208207]))
          if call_tmp[2233508]
          {
            const-val ret[2233517]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2233519]:string[26] "dead at end of block" "insert auto destroy"
            (2233522 call init[30763] ret[2233519])
            const-val coerce_tmp[2233524]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2233526 'move' coerce_tmp[2233524](2233528 '.v' x[1165189] cachedNumCodepoints[30734]))
            (2233531 '.=' ret[2233519] cachedNumCodepoints[30734] coerce_tmp[2233524])
            (2233536 call initWithBorrowedBuffer[948893] ret[2233519] x[1165189])
            (2233539 'move' ret[2233517] ret[2233519])
            (2233542 'move' ret[2233499] ret[2233517])
            gotoReturn _end_localize[2233560] _end_localize[2233560]
          }
          {
            const-val x[2233548]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2233551 call init=[30774] x[2233548] x[1165189])
            (2233554 'move' ret[2233499] x[2233548])
            gotoReturn _end_localize[2233560] _end_localize[2233560]
          }
          label _end_localize[2233560]
          val local_x[2233562]:string[26] "dead at end of block" "insert auto destroy"
          (2233564 'move' local_x[2233562] ret[2233499])
          const-val tmp[2233567]:bool[10] "dead after last mention" "const" "temp"
          (2233569 'move' tmp[2233567](2233571 '.v' local_x[2233562] hasEscapes[30752]))
          if tmp[2233567]
          {
            const-val call_tmp[2233576]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
            (2233578 'move' call_tmp[2233576](2233581 call qio_int_to_err[223653] EILSEQ[224463]))
            (2233583 '=' ret[2233497] call_tmp[2233576])
            ref i_x[2233586]:string[26] "temp"
            (2233588 'move' i_x[2233586](2233590 'set reference' local_x[2233562]))
            (2233593 call deinit[30834] i_x[2233586])
            gotoReturn _end__write_binary_internal[2233677] _end__write_binary_internal[2233677]
          }
          const-val call_tmp[2233598]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233600 'move' call_tmp[2233598](2233603 call qio_channel_str_style[233106] coerce_tmp[1168049]))
          const-val coerce_tmp[2233605]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233607 'move' coerce_tmp[2233605](2233609 '.v' local_x[2233562] locale_id[30757]))
          const-val call_tmp[2233612]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233614 'move' call_tmp[2233612](2233616 '!=' coerce_tmp[2233605] chpl_nodeID[208207]))
          if call_tmp[2233612]
          {
            (2233622 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2233625]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233627 'move' coerce_tmp[2233625](2233629 '.v' local_x[2233562] buff[30740]))
          const-val call_tmp[2233632]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233634 'move' call_tmp[2233632](2233636 'cast' c_string[19] coerce_tmp[2233625]))
          val ret[2233639]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2233641 'move' ret[2233639](2233643 '.v' local_x[2233562] buffLen[30722]))
          const-val call_tmp[2233646]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2233648]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233650 'move' coerce_tmp[2233648](2233652 'cast' int(32)[95] 0))
          (2233655 'move' call_tmp[2233646](2233658 call qio_channel_write_string[234408] coerce_tmp[2233648] 1 call_tmp[2233598] coerce_tmp[1168049] call_tmp[2233632] ret[2233639]))
          (2233665 'move' ret[2233497] call_tmp[2233646])
          ref i_x[2233668]:string[26] "temp"
          (2233670 'move' i_x[2233668](2233672 'set reference' local_x[2233562]))
          (2233675 call deinit[30834] i_x[2233668])
          label _end__write_binary_internal[2233677]
          (2233679 '=' e[2233032] ret[2233497])
        }
      }
    }
    {
      const-val call_tmp[2233685]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      (2233687 'move' call_tmp[2233685](2233690 call _write_text_internal[1172863] coerce_tmp[1168049] x[1165189]))
      (2233693 '=' e[2233032] call_tmp[2233685])
    }
    (2233697 'move' ret[2233030] e[2233032])
    label _end__write_one_internal[2233700]
    val errorExists[2073737]:bool[10] "temp"
    (2073742 'move' errorExists[2073737](2073739 '!=' error[1785475] nil[44]))
    if errorExists[2073737]
    {
      (1785481 '=' error_out[1785470] error[1785475])
      gotoErrorHandlingReturn _end_writeOne[1785472] _end_writeOne[1785472]
    }
    const-val call_tmp[2168117]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168119 'move' call_tmp[2168117](2168122 call qio_err_to_int[223635] ret[2233030]))
    const-val call_tmp[2168124]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168126 'move' call_tmp[2168124](2168128 '==' call_tmp[2168117] 0))
    const-val call_tmp[2168131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168133 'move' call_tmp[2168131](2168135 '!' call_tmp[2168124]))
    if call_tmp[2168131]
    {
      const-val call_tmp[1165248]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1807953]:string[26] "temp"
      (1165256 call _constructIoErrorMsg[1173698] this[1165185] x[1165189] ret_tmp[1807953])
      (1807956 'move' call_tmp[1165248] ret_tmp[1807953])
      val msg[1165259]:string[26] "dead at end of block" "insert auto destroy"
      (1165261 'move' msg[1165259] call_tmp[1165248])
      const-val call_tmp[2167912]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167914 'move' call_tmp[2167912](2167917 call qio_err_to_int[223635] ret[2233030]))
      const-val call_tmp[2167919]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167921 'move' call_tmp[2167919](2167923 '==' call_tmp[2167912] EILSEQ[224463]))
      if call_tmp[2167919]
      {
        const-val call_tmp[1165290]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803488]:string[26] "temp"
        (1165295 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165259] ret_tmp[1803488])
        (1803491 'move' call_tmp[1165290] ret_tmp[1803488])
        (1165299 call =[38272] msg[1165259] call_tmp[1165290])
        ref i_x[2094939]:string[26] "temp"
        (2094943 'move' i_x[2094939](2094941 'set reference' call_tmp[1165290]))
        (2094947 call deinit[30834] i_x[2094939])
      }
      val error[1785489]:Error[167984] "error variable" "temp"
      (1785498 'move' error[1785489] nil[44])
      (1165311 call _ch_ioerror[1062884] this[1165185] ret[2233030] msg[1165259] error[1785489])
      val errorExists[2073745]:bool[10] "temp"
      (2073750 'move' errorExists[2073745](2073747 '!=' error[1785489] nil[44]))
      if errorExists[2073745]
      {
        gotoErrorHandling handler[1785490] handler[1785490]
      }
      label handler[1785490]
      val errorExists[2073753]:bool[10] "temp"
      (2073758 'move' errorExists[2073753](2073755 '!=' error[1785489] nil[44]))
      if errorExists[2073753]
      {
        (1785505 '=' error_out[1785470] error[1785489])
        ref i_x[2094951]:string[26] "temp"
        (2094955 'move' i_x[2094951](2094953 'set reference' msg[1165259]))
        (2094959 call deinit[30834] i_x[2094951])
        gotoErrorHandlingReturn _end_writeOne[1785472] _end_writeOne[1785472]
      }
      ref i_x[2094963]:string[26] "temp"
      (2094967 'move' i_x[2094963](2094965 'set reference' msg[1165259]))
      (2094971 call deinit[30834] i_x[2094963])
    }
    label _end_writeOne[1785472]
    (1165319 return _void[55])
  }
  function channel(true,dynamic,false)[1060966]._writeOne[1173932](const  ref arg this[1173938]:channel(true,dynamic,false)[1060966], const  ref arg x[1173942]:codepointIndex[28277], const  ref arg loc[1173944]:locale[28], ref arg error_out[1785534]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1175229]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175233 'move' coerce_tmp[1175229](2323467 '.v' this[1173938] _channel_internal[1060959]))
    val error[1785539]:Error[167984] "error variable" "temp"
    (1785541 'move' error[1785539] nil[44])
    val ret[2234410]:syserr[223603] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2234412]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2234414]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2234416]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2234418 'move' call_tmp[2234416](2234421 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2234424 'move' call_tmp[2234414] call_tmp[2234416])
    const-val call_tmp[2234427]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2234429]:locale[28] "temp"
    (2234432 call chpl_localeID_to_locale[92852] call_tmp[2234414] ret_tmp[2234429])
    (2234435 'move' call_tmp[2234427] ret_tmp[2234429])
    (2234438 'move' call_tmp[2234412] call_tmp[2234427])
    const-val call_tmp[2234441]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2234443]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "temp"
    (2234446 call init[1068407] initTemp[2234443] call_tmp[2234412] coerce_tmp[1175229] loc[1173944])
    (2234451 'move' call_tmp[2234441] initTemp[2234443])
    val writer[2234454]:channel(true,dynamic,false)[1060966] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2234456 'move' writer[2234454] call_tmp[2234441])
    const-val call_tmp[2234461]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2234463 'move' call_tmp[2234461](2234466 call qio_int_to_err[223653] 0))
    val error[2234471]:Error[167984] "error variable" "temp"
    (2234473 'move' error[2234471] nil[44])
    (2234477 call writeThis[1175364] x[1173942] writer[2234454] error[2234471])
    val errorExists[2234481]:bool[10] "temp"
    (2234483 'move' errorExists[2234481](2234485 '!=' error[2234471] nil[44]))
    if errorExists[2234481]
    {
      gotoErrorHandling handler[2234493] handler[2234493]
    }
    label handler[2234493]
    val errorExists[2234495]:bool[10] "temp"
    (2234497 'move' errorExists[2234495](2234499 '!=' error[2234471] nil[44]))
    if errorExists[2234495]
    {
      (2234504 '=' error[1785539] error[2234471])
      (2234507 '.=' writer[2234454] _channel_internal[1060959] QIO_CHANNEL_PTR_NULL[231487])
      ref i_x[2234511]:channel(true,dynamic,false)[1060966] "temp"
      (2234513 'move' i_x[2234511](2234515 'set reference' writer[2234454]))
      (2234518 call deinit[1510035] i_x[2234511])
      ref i_x[2234520]:locale[28] "temp"
      (2234522 'move' i_x[2234520](2234524 'set reference' call_tmp[2234412]))
      (2234527 call deinit[90188] i_x[2234520])
      gotoErrorHandlingReturn _end__write_one_internal[2234557] _end__write_one_internal[2234557]
    }
    (2234532 'move' ret[2234410] call_tmp[2234461])
    (2234535 '.=' writer[2234454] _channel_internal[1060959] QIO_CHANNEL_PTR_NULL[231487])
    ref i_x[2234539]:channel(true,dynamic,false)[1060966] "temp"
    (2234541 'move' i_x[2234539](2234543 'set reference' writer[2234454]))
    (2234546 call deinit[1510035] i_x[2234539])
    ref i_x[2234548]:locale[28] "temp"
    (2234550 'move' i_x[2234548](2234552 'set reference' call_tmp[2234412]))
    (2234555 call deinit[90188] i_x[2234548])
    label _end__write_one_internal[2234557]
    val errorExists[2073769]:bool[10] "temp"
    (2073774 'move' errorExists[2073769](2073771 '!=' error[1785539] nil[44]))
    if errorExists[2073769]
    {
      (1785545 '=' error_out[1785534] error[1785539])
      gotoErrorHandlingReturn _end_writeOne[1785536] _end_writeOne[1785536]
    }
    const-val call_tmp[2168140]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168142 'move' call_tmp[2168140](2168145 call qio_err_to_int[223635] ret[2234410]))
    const-val call_tmp[2168147]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168149 'move' call_tmp[2168147](2168151 '==' call_tmp[2168140] 0))
    const-val call_tmp[2168154]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168156 'move' call_tmp[2168154](2168158 '!' call_tmp[2168147]))
    if call_tmp[2168154]
    {
      const-val call_tmp[1174001]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1807967]:string[26] "temp"
      (1174009 call _constructIoErrorMsg[1175416] this[1173938] x[1173942] ret_tmp[1807967])
      (1807970 'move' call_tmp[1174001] ret_tmp[1807967])
      val msg[1174012]:string[26] "dead at end of block" "insert auto destroy"
      (1174014 'move' msg[1174012] call_tmp[1174001])
      const-val call_tmp[2167929]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167931 'move' call_tmp[2167929](2167934 call qio_err_to_int[223635] ret[2234410]))
      const-val call_tmp[2167936]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167938 'move' call_tmp[2167936](2167940 '==' call_tmp[2167929] EILSEQ[224463]))
      if call_tmp[2167936]
      {
        const-val call_tmp[1174043]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803494]:string[26] "temp"
        (1174048 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1174012] ret_tmp[1803494])
        (1803497 'move' call_tmp[1174043] ret_tmp[1803494])
        (1174052 call =[38272] msg[1174012] call_tmp[1174043])
        ref i_x[2095071]:string[26] "temp"
        (2095075 'move' i_x[2095071](2095073 'set reference' call_tmp[1174043]))
        (2095079 call deinit[30834] i_x[2095071])
      }
      val error[1785553]:Error[167984] "error variable" "temp"
      (1785562 'move' error[1785553] nil[44])
      (1174064 call _ch_ioerror[1062884] this[1173938] ret[2234410] msg[1174012] error[1785553])
      val errorExists[2073777]:bool[10] "temp"
      (2073782 'move' errorExists[2073777](2073779 '!=' error[1785553] nil[44]))
      if errorExists[2073777]
      {
        gotoErrorHandling handler[1785554] handler[1785554]
      }
      label handler[1785554]
      val errorExists[2073785]:bool[10] "temp"
      (2073790 'move' errorExists[2073785](2073787 '!=' error[1785553] nil[44]))
      if errorExists[2073785]
      {
        (1785569 '=' error_out[1785534] error[1785553])
        ref i_x[2095083]:string[26] "temp"
        (2095087 'move' i_x[2095083](2095085 'set reference' msg[1174012]))
        (2095091 call deinit[30834] i_x[2095083])
        gotoErrorHandlingReturn _end_writeOne[1785536] _end_writeOne[1785536]
      }
      ref i_x[2095095]:string[26] "temp"
      (2095099 'move' i_x[2095095](2095097 'set reference' msg[1174012]))
      (2095103 call deinit[30834] i_x[2095095])
    }
    label _end_writeOne[1785536]
    (1174072 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._writeOne[1390313](const  ref arg this[1390319]:channel(true,dynamic,true)[1021844], const  ref arg x[1390323]:string[26], const  ref arg loc[1390325]:locale[28], ref arg error_out[1786907]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1390457]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1390461 'move' coerce_tmp[1390457](2325814 '.v' this[1390319] _channel_internal[1021837]))
    val error[1786912]:Error[167984] "error variable" "temp"
    (1786914 'move' error[1786912] nil[44])
    val ret[2233711]:syserr[223603] "dead after last mention" "RVV" "temp"
    val e[2233713]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2233715]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233717 'move' call_tmp[2233715](2233720 call qio_int_to_err[223653] 0))
    (2233722 'move' e[2233713] call_tmp[2233715])
    const-val call_tmp[2233725]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2233727 'move' call_tmp[2233725](2233730 call qio_channel_binary[233076] coerce_tmp[1390457]))
    const-val call_tmp[2233732]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2233734 'move' call_tmp[2233732](2233737 call qio_channel_byteorder[233091] coerce_tmp[1390457]))
    const-val coerce_tmp[2233744]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2233746 'move' coerce_tmp[2233744](2233748 'cast' int(64)[13] call_tmp[2233725]))
    const-val call_tmp[2233751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2233753 'move' call_tmp[2233751](2233755 '!=' coerce_tmp[2233744] 0))
    if call_tmp[2233751]
    {
      const-val tmp[2233760]:iokind[230950] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2233762]:Error[167984] "error variable" "temp"
      (2233764 'move' error[2233762] nil[44])
      (2233767 'move' tmp[2233760](2233770 call _cast[1070327] call_tmp[2233732] error[2233762]))
      val errorExists[2233773]:bool[10] "temp"
      (2233775 'move' errorExists[2233773](2233777 '!=' error[2233762] nil[44]))
      if errorExists[2233773]
      {
        (2233782 '=' error[1786912] error[2233762])
        gotoErrorHandlingReturn _end__write_one_internal[2234381] _end__write_one_internal[2234381]
      }
      const-val call_tmp[2233788]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2233790 'move' call_tmp[2233788](2233792 '==' tmp[2233760] big[230945]))
      if call_tmp[2233788]
      {
        val ret[2233797]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2233799]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2233801]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233803 'move' coerce_tmp[2233801](2233805 '.v' x[1390323] locale_id[30757]))
        const-val call_tmp[2233808]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233810 'move' call_tmp[2233808](2233812 '==' coerce_tmp[2233801] chpl_nodeID[208207]))
        if call_tmp[2233808]
        {
          const-val ret[2233817]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2233819]:string[26] "dead at end of block" "insert auto destroy"
          (2233822 call init[30763] ret[2233819])
          const-val coerce_tmp[2233824]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233826 'move' coerce_tmp[2233824](2233828 '.v' x[1390323] cachedNumCodepoints[30734]))
          (2233831 '.=' ret[2233819] cachedNumCodepoints[30734] coerce_tmp[2233824])
          (2233836 call initWithBorrowedBuffer[948893] ret[2233819] x[1390323])
          (2233839 'move' ret[2233817] ret[2233819])
          (2233842 'move' ret[2233799] ret[2233817])
          gotoReturn _end_localize[2233860] _end_localize[2233860]
        }
        {
          const-val x[2233848]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2233851 call init=[30774] x[2233848] x[1390323])
          (2233854 'move' ret[2233799] x[2233848])
          gotoReturn _end_localize[2233860] _end_localize[2233860]
        }
        label _end_localize[2233860]
        val local_x[2233862]:string[26] "dead at end of block" "insert auto destroy"
        (2233864 'move' local_x[2233862] ret[2233799])
        const-val tmp[2233867]:bool[10] "dead after last mention" "const" "temp"
        (2233869 'move' tmp[2233867](2233871 '.v' local_x[2233862] hasEscapes[30752]))
        if tmp[2233867]
        {
          const-val call_tmp[2233876]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          (2233878 'move' call_tmp[2233876](2233881 call qio_int_to_err[223653] EILSEQ[224463]))
          (2233883 '=' ret[2233797] call_tmp[2233876])
          ref i_x[2233886]:string[26] "temp"
          (2233888 'move' i_x[2233886](2233890 'set reference' local_x[2233862]))
          (2233893 call deinit[30834] i_x[2233886])
          gotoReturn _end__write_binary_internal[2233977] _end__write_binary_internal[2233977]
        }
        const-val call_tmp[2233898]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233900 'move' call_tmp[2233898](2233903 call qio_channel_str_style[233106] coerce_tmp[1390457]))
        const-val coerce_tmp[2233905]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233907 'move' coerce_tmp[2233905](2233909 '.v' local_x[2233862] locale_id[30757]))
        const-val call_tmp[2233912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233914 'move' call_tmp[2233912](2233916 '!=' coerce_tmp[2233905] chpl_nodeID[208207]))
        if call_tmp[2233912]
        {
          (2233922 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2233925]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233927 'move' coerce_tmp[2233925](2233929 '.v' local_x[2233862] buff[30740]))
        const-val call_tmp[2233932]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233934 'move' call_tmp[2233932](2233936 'cast' c_string[19] coerce_tmp[2233925]))
        val ret[2233939]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2233941 'move' ret[2233939](2233943 '.v' local_x[2233862] buffLen[30722]))
        const-val call_tmp[2233946]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2233948]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2233950 'move' coerce_tmp[2233948](2233952 'cast' int(32)[95] 0))
        (2233955 'move' call_tmp[2233946](2233958 call qio_channel_write_string[234408] coerce_tmp[2233948] 2 call_tmp[2233898] coerce_tmp[1390457] call_tmp[2233932] ret[2233939]))
        (2233965 'move' ret[2233797] call_tmp[2233946])
        ref i_x[2233968]:string[26] "temp"
        (2233970 'move' i_x[2233968](2233972 'set reference' local_x[2233862]))
        (2233975 call deinit[30834] i_x[2233968])
        label _end__write_binary_internal[2233977]
        (2233979 '=' e[2233713] ret[2233797])
      }
      {
        const-val call_tmp[2233983]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2233985 'move' call_tmp[2233983](2233987 '==' tmp[2233760] little[230948]))
        if call_tmp[2233983]
        {
          val ret[2233992]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2233994]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2233996]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2233998 'move' coerce_tmp[2233996](2234000 '.v' x[1390323] locale_id[30757]))
          const-val call_tmp[2234003]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234005 'move' call_tmp[2234003](2234007 '==' coerce_tmp[2233996] chpl_nodeID[208207]))
          if call_tmp[2234003]
          {
            const-val ret[2234012]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2234014]:string[26] "dead at end of block" "insert auto destroy"
            (2234017 call init[30763] ret[2234014])
            const-val coerce_tmp[2234019]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2234021 'move' coerce_tmp[2234019](2234023 '.v' x[1390323] cachedNumCodepoints[30734]))
            (2234026 '.=' ret[2234014] cachedNumCodepoints[30734] coerce_tmp[2234019])
            (2234031 call initWithBorrowedBuffer[948893] ret[2234014] x[1390323])
            (2234034 'move' ret[2234012] ret[2234014])
            (2234037 'move' ret[2233994] ret[2234012])
            gotoReturn _end_localize[2234055] _end_localize[2234055]
          }
          {
            const-val x[2234043]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2234046 call init=[30774] x[2234043] x[1390323])
            (2234049 'move' ret[2233994] x[2234043])
            gotoReturn _end_localize[2234055] _end_localize[2234055]
          }
          label _end_localize[2234055]
          val local_x[2234057]:string[26] "dead at end of block" "insert auto destroy"
          (2234059 'move' local_x[2234057] ret[2233994])
          const-val tmp[2234062]:bool[10] "dead after last mention" "const" "temp"
          (2234064 'move' tmp[2234062](2234066 '.v' local_x[2234057] hasEscapes[30752]))
          if tmp[2234062]
          {
            const-val call_tmp[2234071]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
            (2234073 'move' call_tmp[2234071](2234076 call qio_int_to_err[223653] EILSEQ[224463]))
            (2234078 '=' ret[2233992] call_tmp[2234071])
            ref i_x[2234081]:string[26] "temp"
            (2234083 'move' i_x[2234081](2234085 'set reference' local_x[2234057]))
            (2234088 call deinit[30834] i_x[2234081])
            gotoReturn _end__write_binary_internal[2234172] _end__write_binary_internal[2234172]
          }
          const-val call_tmp[2234093]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234095 'move' call_tmp[2234093](2234098 call qio_channel_str_style[233106] coerce_tmp[1390457]))
          const-val coerce_tmp[2234100]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234102 'move' coerce_tmp[2234100](2234104 '.v' local_x[2234057] locale_id[30757]))
          const-val call_tmp[2234107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234109 'move' call_tmp[2234107](2234111 '!=' coerce_tmp[2234100] chpl_nodeID[208207]))
          if call_tmp[2234107]
          {
            (2234117 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2234120]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234122 'move' coerce_tmp[2234120](2234124 '.v' local_x[2234057] buff[30740]))
          const-val call_tmp[2234127]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234129 'move' call_tmp[2234127](2234131 'cast' c_string[19] coerce_tmp[2234120]))
          val ret[2234134]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2234136 'move' ret[2234134](2234138 '.v' local_x[2234057] buffLen[30722]))
          const-val call_tmp[2234141]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2234143]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234145 'move' coerce_tmp[2234143](2234147 'cast' int(32)[95] 0))
          (2234150 'move' call_tmp[2234141](2234153 call qio_channel_write_string[234408] coerce_tmp[2234143] 3 call_tmp[2234093] coerce_tmp[1390457] call_tmp[2234127] ret[2234134]))
          (2234160 'move' ret[2233992] call_tmp[2234141])
          ref i_x[2234163]:string[26] "temp"
          (2234165 'move' i_x[2234163](2234167 'set reference' local_x[2234057]))
          (2234170 call deinit[30834] i_x[2234163])
          label _end__write_binary_internal[2234172]
          (2234174 '=' e[2233713] ret[2233992])
        }
        {
          val ret[2234178]:syserr[223603] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2234180]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2234182]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234184 'move' coerce_tmp[2234182](2234186 '.v' x[1390323] locale_id[30757]))
          const-val call_tmp[2234189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234191 'move' call_tmp[2234189](2234193 '==' coerce_tmp[2234182] chpl_nodeID[208207]))
          if call_tmp[2234189]
          {
            const-val ret[2234198]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2234200]:string[26] "dead at end of block" "insert auto destroy"
            (2234203 call init[30763] ret[2234200])
            const-val coerce_tmp[2234205]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2234207 'move' coerce_tmp[2234205](2234209 '.v' x[1390323] cachedNumCodepoints[30734]))
            (2234212 '.=' ret[2234200] cachedNumCodepoints[30734] coerce_tmp[2234205])
            (2234217 call initWithBorrowedBuffer[948893] ret[2234200] x[1390323])
            (2234220 'move' ret[2234198] ret[2234200])
            (2234223 'move' ret[2234180] ret[2234198])
            gotoReturn _end_localize[2234241] _end_localize[2234241]
          }
          {
            const-val x[2234229]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2234232 call init=[30774] x[2234229] x[1390323])
            (2234235 'move' ret[2234180] x[2234229])
            gotoReturn _end_localize[2234241] _end_localize[2234241]
          }
          label _end_localize[2234241]
          val local_x[2234243]:string[26] "dead at end of block" "insert auto destroy"
          (2234245 'move' local_x[2234243] ret[2234180])
          const-val tmp[2234248]:bool[10] "dead after last mention" "const" "temp"
          (2234250 'move' tmp[2234248](2234252 '.v' local_x[2234243] hasEscapes[30752]))
          if tmp[2234248]
          {
            const-val call_tmp[2234257]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
            (2234259 'move' call_tmp[2234257](2234262 call qio_int_to_err[223653] EILSEQ[224463]))
            (2234264 '=' ret[2234178] call_tmp[2234257])
            ref i_x[2234267]:string[26] "temp"
            (2234269 'move' i_x[2234267](2234271 'set reference' local_x[2234243]))
            (2234274 call deinit[30834] i_x[2234267])
            gotoReturn _end__write_binary_internal[2234358] _end__write_binary_internal[2234358]
          }
          const-val call_tmp[2234279]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234281 'move' call_tmp[2234279](2234284 call qio_channel_str_style[233106] coerce_tmp[1390457]))
          const-val coerce_tmp[2234286]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234288 'move' coerce_tmp[2234286](2234290 '.v' local_x[2234243] locale_id[30757]))
          const-val call_tmp[2234293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234295 'move' call_tmp[2234293](2234297 '!=' coerce_tmp[2234286] chpl_nodeID[208207]))
          if call_tmp[2234293]
          {
            (2234303 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2234306]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234308 'move' coerce_tmp[2234306](2234310 '.v' local_x[2234243] buff[30740]))
          const-val call_tmp[2234313]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2234315 'move' call_tmp[2234313](2234317 'cast' c_string[19] coerce_tmp[2234306]))
          val ret[2234320]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2234322 'move' ret[2234320](2234324 '.v' local_x[2234243] buffLen[30722]))
          const-val call_tmp[2234327]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2234329]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2234331 'move' coerce_tmp[2234329](2234333 'cast' int(32)[95] 0))
          (2234336 'move' call_tmp[2234327](2234339 call qio_channel_write_string[234408] coerce_tmp[2234329] 1 call_tmp[2234279] coerce_tmp[1390457] call_tmp[2234313] ret[2234320]))
          (2234346 'move' ret[2234178] call_tmp[2234327])
          ref i_x[2234349]:string[26] "temp"
          (2234351 'move' i_x[2234349](2234353 'set reference' local_x[2234243]))
          (2234356 call deinit[30834] i_x[2234349])
          label _end__write_binary_internal[2234358]
          (2234360 '=' e[2233713] ret[2234178])
        }
      }
    }
    {
      const-val call_tmp[2234366]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      (2234368 'move' call_tmp[2234366](2234371 call _write_text_internal[1172863] coerce_tmp[1390457] x[1390323]))
      (2234374 '=' e[2233713] call_tmp[2234366])
    }
    (2234378 'move' ret[2233711] e[2233713])
    label _end__write_one_internal[2234381]
    val errorExists[2074457]:bool[10] "temp"
    (2074462 'move' errorExists[2074457](2074459 '!=' error[1786912] nil[44]))
    if errorExists[2074457]
    {
      (1786918 '=' error_out[1786907] error[1786912])
      gotoErrorHandlingReturn _end_writeOne[1786909] _end_writeOne[1786909]
    }
    const-val call_tmp[2168163]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168165 'move' call_tmp[2168163](2168168 call qio_err_to_int[223635] ret[2233711]))
    const-val call_tmp[2168170]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168172 'move' call_tmp[2168170](2168174 '==' call_tmp[2168163] 0))
    const-val call_tmp[2168177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168179 'move' call_tmp[2168177](2168181 '!' call_tmp[2168170]))
    if call_tmp[2168177]
    {
      const-val call_tmp[1390382]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1811564]:string[26] "temp"
      (1390390 call _constructIoErrorMsg[1390469] this[1390319] x[1390323] ret_tmp[1811564])
      (1811567 'move' call_tmp[1390382] ret_tmp[1811564])
      val msg[1390393]:string[26] "dead at end of block" "insert auto destroy"
      (1390395 'move' msg[1390393] call_tmp[1390382])
      const-val call_tmp[2167946]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167948 'move' call_tmp[2167946](2167951 call qio_err_to_int[223635] ret[2233711]))
      const-val call_tmp[2167953]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167955 'move' call_tmp[2167953](2167957 '==' call_tmp[2167946] EILSEQ[224463]))
      if call_tmp[2167953]
      {
        const-val call_tmp[1390424]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803692]:string[26] "temp"
        (1390429 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1390393] ret_tmp[1803692])
        (1803695 'move' call_tmp[1390424] ret_tmp[1803692])
        (1390433 call =[38272] msg[1390393] call_tmp[1390424])
        ref i_x[2096223]:string[26] "temp"
        (2096227 'move' i_x[2096223](2096225 'set reference' call_tmp[1390424]))
        (2096231 call deinit[30834] i_x[2096223])
      }
      val error[1786926]:Error[167984] "error variable" "temp"
      (1786935 'move' error[1786926] nil[44])
      (1390445 call _ch_ioerror[1389786] this[1390319] ret[2233711] msg[1390393] error[1786926])
      val errorExists[2074465]:bool[10] "temp"
      (2074470 'move' errorExists[2074465](2074467 '!=' error[1786926] nil[44]))
      if errorExists[2074465]
      {
        gotoErrorHandling handler[1786927] handler[1786927]
      }
      label handler[1786927]
      val errorExists[2074473]:bool[10] "temp"
      (2074478 'move' errorExists[2074473](2074475 '!=' error[1786926] nil[44]))
      if errorExists[2074473]
      {
        (1786942 '=' error_out[1786907] error[1786926])
        ref i_x[2096235]:string[26] "temp"
        (2096239 'move' i_x[2096235](2096237 'set reference' msg[1390393]))
        (2096243 call deinit[30834] i_x[2096235])
        gotoErrorHandlingReturn _end_writeOne[1786909] _end_writeOne[1786909]
      }
      ref i_x[2096247]:string[26] "temp"
      (2096251 'move' i_x[2096247](2096249 'set reference' msg[1390393]))
      (2096255 call deinit[30834] i_x[2096247])
    }
    label _end_writeOne[1786909]
    (1390453 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._writeOne[1390703](const  ref arg this[1390709]:channel(true,dynamic,true)[1021844], const  ref arg x[1390713]:ioNewline[238720], const  ref arg loc[1390715]:locale[28], ref arg error_out[1786954]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1393575]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1393579 'move' coerce_tmp[1393575](2325822 '.v' this[1390709] _channel_internal[1021837]))
    val error[1786959]:Error[167984] "error variable" "temp"
    (1786961 'move' error[1786959] nil[44])
    (2278205 call qio_int_to_err[223653] 0)
    const-val call_tmp[2278207]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2278209]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2278211 'move' coerce_tmp[2278209](2278213 'cast' int(32)[95] 0))
    (2278216 'move' call_tmp[2278207](2278219 call qio_channel_write_newline[234754] coerce_tmp[2278209] coerce_tmp[1393575]))
    val errorExists[2074481]:bool[10] "temp"
    (2074486 'move' errorExists[2074481](2074483 '!=' error[1786959] nil[44]))
    if errorExists[2074481]
    {
      (1786965 '=' error_out[1786954] error[1786959])
      gotoErrorHandlingReturn _end_writeOne[1786956] _end_writeOne[1786956]
    }
    const-val call_tmp[2168186]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168188 'move' call_tmp[2168186](2168191 call qio_err_to_int[223635] call_tmp[2278207]))
    const-val call_tmp[2168193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168195 'move' call_tmp[2168193](2168197 '==' call_tmp[2168186] 0))
    const-val call_tmp[2168200]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168202 'move' call_tmp[2168200](2168204 '!' call_tmp[2168193]))
    if call_tmp[2168200]
    {
      const-val call_tmp[1390772]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1811578]:string[26] "temp"
      (1390780 call _constructIoErrorMsg[1393631] this[1390709] x[1390713] ret_tmp[1811578])
      (1811581 'move' call_tmp[1390772] ret_tmp[1811578])
      val msg[1390783]:string[26] "dead at end of block" "insert auto destroy"
      (1390785 'move' msg[1390783] call_tmp[1390772])
      const-val call_tmp[2167963]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167965 'move' call_tmp[2167963](2167968 call qio_err_to_int[223635] call_tmp[2278207]))
      const-val call_tmp[2167970]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167972 'move' call_tmp[2167970](2167974 '==' call_tmp[2167963] EILSEQ[224463]))
      if call_tmp[2167970]
      {
        const-val call_tmp[1390814]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803698]:string[26] "temp"
        (1390819 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1390783] ret_tmp[1803698])
        (1803701 'move' call_tmp[1390814] ret_tmp[1803698])
        (1390823 call =[38272] msg[1390783] call_tmp[1390814])
        ref i_x[2096259]:string[26] "temp"
        (2096263 'move' i_x[2096259](2096261 'set reference' call_tmp[1390814]))
        (2096267 call deinit[30834] i_x[2096259])
      }
      val error[1786973]:Error[167984] "error variable" "temp"
      (1786982 'move' error[1786973] nil[44])
      (1390835 call _ch_ioerror[1389786] this[1390709] call_tmp[2278207] msg[1390783] error[1786973])
      val errorExists[2074489]:bool[10] "temp"
      (2074494 'move' errorExists[2074489](2074491 '!=' error[1786973] nil[44]))
      if errorExists[2074489]
      {
        gotoErrorHandling handler[1786974] handler[1786974]
      }
      label handler[1786974]
      val errorExists[2074497]:bool[10] "temp"
      (2074502 'move' errorExists[2074497](2074499 '!=' error[1786973] nil[44]))
      if errorExists[2074497]
      {
        (1786989 '=' error_out[1786954] error[1786973])
        ref i_x[2096271]:string[26] "temp"
        (2096275 'move' i_x[2096271](2096273 'set reference' msg[1390783]))
        (2096279 call deinit[30834] i_x[2096271])
        gotoErrorHandlingReturn _end_writeOne[1786956] _end_writeOne[1786956]
      }
      ref i_x[2096283]:string[26] "temp"
      (2096287 'move' i_x[2096283](2096285 'set reference' msg[1390783]))
      (2096291 call deinit[30834] i_x[2096283])
    }
    label _end_writeOne[1786956]
    (1390843 return _void[55])
  }
  function channel(true,dynamic,true)[1021844]._writeOne[1399202](const  ref arg this[1399208]:channel(true,dynamic,true)[1021844], const in arg x[1399212]:real(64)[16], const  ref arg loc[1399214]:locale[28], ref arg error_out[1787155]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1400807]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1400811 'move' coerce_tmp[1400807](2325857 '.v' this[1399208] _channel_internal[1021837]))
    val error[1787160]:Error[167984] "error variable" "temp"
    (1787162 'move' error[1787160] nil[44])
    val ret[2279329]:syserr[223603] "dead after last mention" "RVV" "temp"
    val e[2279331]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2279333]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279335 'move' call_tmp[2279333](2279338 call qio_int_to_err[223653] 0))
    (2279340 'move' e[2279331] call_tmp[2279333])
    const-val call_tmp[2279343]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2279345 'move' call_tmp[2279343](2279348 call qio_channel_binary[233076] coerce_tmp[1400807]))
    const-val call_tmp[2279350]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2279352 'move' call_tmp[2279350](2279355 call qio_channel_byteorder[233091] coerce_tmp[1400807]))
    const-val coerce_tmp[2279362]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2279364 'move' coerce_tmp[2279362](2279366 'cast' int(64)[13] call_tmp[2279343]))
    const-val call_tmp[2279369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279371 'move' call_tmp[2279369](2279373 '!=' coerce_tmp[2279362] 0))
    if call_tmp[2279369]
    {
      const-val tmp[2279378]:iokind[230950] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2279380]:Error[167984] "error variable" "temp"
      (2279382 'move' error[2279380] nil[44])
      (2279385 'move' tmp[2279378](2279388 call _cast[1070327] call_tmp[2279350] error[2279380]))
      val errorExists[2279391]:bool[10] "temp"
      (2279393 'move' errorExists[2279391](2279395 '!=' error[2279380] nil[44]))
      if errorExists[2279391]
      {
        (2279400 '=' error[1787160] error[2279380])
        gotoErrorHandlingReturn _end__write_one_internal[2279504] _end__write_one_internal[2279504]
      }
      const-val call_tmp[2279406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279408 'move' call_tmp[2279406](2279410 '==' tmp[2279378] big[230945]))
      if call_tmp[2279406]
      {
        const-val call_tmp[2279415]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2279417]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2279419 'move' coerce_tmp[2279417](2279421 'cast' int(32)[95] 0))
        (2279424 'move' call_tmp[2279415](2279427 call qio_channel_write_float64[234285] coerce_tmp[2279417] 2 coerce_tmp[1400807] x[1399212]))
        (2279432 '=' e[2279331] call_tmp[2279415])
      }
      {
        const-val call_tmp[2279436]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2279438 'move' call_tmp[2279436](2279440 '==' tmp[2279378] little[230948]))
        if call_tmp[2279436]
        {
          const-val call_tmp[2279445]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2279447]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279449 'move' coerce_tmp[2279447](2279451 'cast' int(32)[95] 0))
          (2279454 'move' call_tmp[2279445](2279457 call qio_channel_write_float64[234285] coerce_tmp[2279447] 3 coerce_tmp[1400807] x[1399212]))
          (2279462 '=' e[2279331] call_tmp[2279445])
        }
        {
          const-val call_tmp[2279466]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2279468]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2279470 'move' coerce_tmp[2279468](2279472 'cast' int(32)[95] 0))
          (2279475 'move' call_tmp[2279466](2279478 call qio_channel_write_float64[234285] coerce_tmp[2279468] 1 coerce_tmp[1400807] x[1399212]))
          (2279483 '=' e[2279331] call_tmp[2279466])
        }
      }
    }
    {
      const-val call_tmp[2279489]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      (2279491 'move' call_tmp[2279489](2279494 call _write_text_internal[1405597] coerce_tmp[1400807] x[1399212]))
      (2279497 '=' e[2279331] call_tmp[2279489])
    }
    (2279501 'move' ret[2279329] e[2279331])
    label _end__write_one_internal[2279504]
    val errorExists[2074585]:bool[10] "temp"
    (2074590 'move' errorExists[2074585](2074587 '!=' error[1787160] nil[44]))
    if errorExists[2074585]
    {
      (1787166 '=' error_out[1787155] error[1787160])
      gotoErrorHandlingReturn _end_writeOne[1787157] _end_writeOne[1787157]
    }
    const-val call_tmp[2168209]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168211 'move' call_tmp[2168209](2168214 call qio_err_to_int[223635] ret[2279329]))
    const-val call_tmp[2168216]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168218 'move' call_tmp[2168216](2168220 '==' call_tmp[2168209] 0))
    const-val call_tmp[2168223]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168225 'move' call_tmp[2168223](2168227 '!' call_tmp[2168216]))
    if call_tmp[2168223]
    {
      const-val call_tmp[1399271]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1811634]:string[26] "temp"
      (1399279 call _constructIoErrorMsg[1406437] this[1399208] x[1399212] ret_tmp[1811634])
      (1811637 'move' call_tmp[1399271] ret_tmp[1811634])
      val msg[1399282]:string[26] "dead at end of block" "insert auto destroy"
      (1399284 'move' msg[1399282] call_tmp[1399271])
      const-val call_tmp[2167980]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167982 'move' call_tmp[2167980](2167985 call qio_err_to_int[223635] ret[2279329]))
      const-val call_tmp[2167987]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2167989 'move' call_tmp[2167987](2167991 '==' call_tmp[2167980] EILSEQ[224463]))
      if call_tmp[2167987]
      {
        const-val call_tmp[1399313]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1803704]:string[26] "temp"
        (1399318 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1399282] ret_tmp[1803704])
        (1803707 'move' call_tmp[1399313] ret_tmp[1803704])
        (1399322 call =[38272] msg[1399282] call_tmp[1399313])
        ref i_x[2096295]:string[26] "temp"
        (2096299 'move' i_x[2096295](2096297 'set reference' call_tmp[1399313]))
        (2096303 call deinit[30834] i_x[2096295])
      }
      val error[1787174]:Error[167984] "error variable" "temp"
      (1787183 'move' error[1787174] nil[44])
      (1399334 call _ch_ioerror[1389786] this[1399208] ret[2279329] msg[1399282] error[1787174])
      val errorExists[2074593]:bool[10] "temp"
      (2074598 'move' errorExists[2074593](2074595 '!=' error[1787174] nil[44]))
      if errorExists[2074593]
      {
        gotoErrorHandling handler[1787175] handler[1787175]
      }
      label handler[1787175]
      val errorExists[2074601]:bool[10] "temp"
      (2074606 'move' errorExists[2074601](2074603 '!=' error[1787174] nil[44]))
      if errorExists[2074601]
      {
        (1787190 '=' error_out[1787155] error[1787174])
        ref i_x[2096307]:string[26] "temp"
        (2096311 'move' i_x[2096307](2096309 'set reference' msg[1399282]))
        (2096315 call deinit[30834] i_x[2096307])
        gotoErrorHandlingReturn _end_writeOne[1787157] _end_writeOne[1787157]
      }
      ref i_x[2096319]:string[26] "temp"
      (2096323 'move' i_x[2096319](2096321 'set reference' msg[1399282]))
      (2096327 call deinit[30834] i_x[2096319])
    }
    label _end_writeOne[1787157]
    (1399342 return _void[55])
  }
  function channel(true,dynamic,false)[1060966].writeIt[1068805](const  ref arg this[1068811]:channel(true,dynamic,false)[1060966], const in arg x[1068813]:int(64)[13], ref arg error_out[1784595]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val ret[2225651]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2225653]:locale[28] "dead after last mention" "maybe param" "temp"
    (2225655 'move' call_tmp[2225653](2225657 '.' this[1068811] _readWriteThisFromLocale[1060963]))
    val ret[2225660]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2225662]:locale[28] "dead after last mention" "temp"
    (2225665 call init=[90170] tmp[2225662] call_tmp[2225653])
    (2225668 'move' ret[2225660] tmp[2225662])
    val ret[2225671]:locale[28] "dead at end of block" "insert auto destroy"
    (2225673 'move' ret[2225671] ret[2225660])
    const-val call_tmp[2225676]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2225678 'move' call_tmp[2225676](2225681 call ==[782800] ret[2225671] nilLocale[89942]))
    if call_tmp[2225676]
    {
      const-val call_tmp[2225686]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2225688]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2225690]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2225692 'move' call_tmp[2225690](2225695 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2225698 'move' call_tmp[2225688] call_tmp[2225690])
      const-val call_tmp[2225701]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2225703]:locale[28] "temp"
      (2225706 call chpl_localeID_to_locale[92852] call_tmp[2225688] ret_tmp[2225703])
      (2225709 'move' call_tmp[2225701] ret_tmp[2225703])
      (2225712 'move' call_tmp[2225686] call_tmp[2225701])
      (2225716 call =[90634] ret[2225671] call_tmp[2225686])
      ref i_x[2225719]:locale[28] "temp"
      (2225721 'move' i_x[2225719](2225723 'set reference' call_tmp[2225686]))
      (2225726 call deinit[90188] i_x[2225719])
    }
    (2225729 'move' ret[2225651] ret[2225671])
    const-val origLocale[1068858]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1068860 'move' origLocale[1068858] ret[2225651])
    ref call_tmp[2224238]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224240 'move' call_tmp[2224238](2224242 '.' this[1068811] home[1060954]))
    const-val call_tmp[1068874]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128601]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128603 'move' coerce_tmp[2128601](2128605 '.v' call_tmp[2224238] _instance[89978]))
    val coerce_tmp[2128608]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128610 'move' coerce_tmp[2128608](2128612 'cast' object[22] coerce_tmp[2128601]))
    const-val call_tmp[2128615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128617 'move' call_tmp[2128615](2128619 'ptr_eq' coerce_tmp[2128608] nil[44]))
    if call_tmp[2128615]
    {
      (2128625 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1068876 'move' call_tmp[1068874](1068878 '_wide_get_locale' coerce_tmp[2128601]))
    val error[1784600]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1784602 'move' error[1784600] nil[44])
    val isdirect[2055320]:bool[10] "temp"
    (2055325 'move' isdirect[2055320](2055322 call chpl_doDirectExecuteOn[187469] call_tmp[1068874]))
    if isdirect[2055320]
    {
      (2055329 call on_fn[1068887] this[1068811] x[1068813] ret[2225651] error[1784600])
    }
    {
      val _args_foron_fn[2055353]:_class_localson_fn[2055339] "temp"
      (2055357 'move' _args_foron_fn[2055353](2055355 'stack allocate class' _class_localson_fn[2055339]))
      (2055359 '.=' _args_foron_fn[2055353] _0_tmp[2055342] call_tmp[1068874])
      ref tmp[2055363]:channel(true,dynamic,false)[1060966] "temp"
      (2055367 'move' tmp[2055363](2055365 'set reference' this[1068811]))
      (2055369 '.=' _args_foron_fn[2055353] _1_this[2055344] tmp[2055363])
      (2055373 '.=' _args_foron_fn[2055353] _2_x[2055346] x[1068813])
      (2055377 '.=' _args_foron_fn[2055353] _3_rvfDerefTmp[2055348] ret[2225651])
      ref tmp[2055381]:Error[167984] "temp"
      (2055385 'move' tmp[2055381](2055383 'set reference' error[1784600]))
      (2055387 '.=' _args_foron_fn[2055353] _4_error[2055350] tmp[2055381])
      val _args_vforon_fn[2055391]:c_void_ptr[149] "temp"
      (2055395 'move' _args_vforon_fn[2055391](2055393 'cast_to_void_star' _args_foron_fn[2055353]))
      val _args_sizeon_fn[2055397]:int(64)[13] "temp"
      (2055401 'move' _args_sizeon_fn[2055397](2055399 'sizeof_bundle' _class_localson_fn[2055339]))
      on(2055457 call wrapon_fn[2055403] call_tmp[1068874] _args_vforon_fn[2055391] _args_sizeon_fn[2055397] _args_foron_fn[2055353])
    }
    val errorExists[2073305]:bool[10] "temp"
    (2073310 'move' errorExists[2073305](2073307 '!=' error[1784600] nil[44]))
    if errorExists[2073305]
    {
      (1784606 '=' error_out[1784595] error[1784600])
      ref i_x[2224917]:locale[28] "temp"
      (2224921 'move' i_x[2224917](2224919 'set reference' origLocale[1068858]))
      (2224925 call deinit[90188] i_x[2224917])
      gotoErrorHandlingReturn _endwriteIt[1784597] _endwriteIt[1784597]
    }
    ref i_x[2224929]:locale[28] "temp"
    (2224933 'move' i_x[2224929](2224931 'set reference' origLocale[1068858]))
    (2224937 call deinit[90188] i_x[2224929])
    label _endwriteIt[1784597]
    (1068931 return _void[55])
  }
  function stringify[958806](const in arg _e0_args[958808]:c_string[19], ref arg _retArg[1805382]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[958812]:string[26] "dead after last mention" "RVV" "temp"
    val str[958844]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166301]:string[26] "temp"
    (2166304 'move' inlineImm[2166301] "")
    ref i_x[2166306]:string[26] "temp"
    (2166310 'move' i_x[2166306](2166308 'set reference' inlineImm[2166301]))
    val ret[2166313]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166315]:string[26] "dead after last mention" "temp"
    (2166318 call init=[30774] tmp[2166315] i_x[2166306])
    (2166321 'move' ret[2166313] tmp[2166315])
    (958846 'move' str[958844] ret[2166313])
    val error[1783434]:Error[167984] "error variable" "temp"
    (1783450 'move' error[1783434] nil[44])
    const-val call_tmp[963730]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2165899]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2165901 'move' call_tmp[2165899](2165903 'string_length_bytes' _e0_args[958808]))
    val errorExists[2072761]:bool[10] "temp"
    (2072766 'move' errorExists[2072761](2072763 '!=' error[1783434] nil[44]))
    if errorExists[2072761]
    {
      gotoErrorHandling handler[1783435] handler[1783435]
    }
    const-val ret[2104708]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2104710]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2104712 'move' call_tmp[2104710](2104714 'cast' c_ptr(uint(8))[937442] _e0_args[958808]))
    val error[2104719]:Error[167984] "error variable" "temp"
    (2104721 'move' error[2104719] nil[44])
    const-val ret[2104724]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2104726]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2104728]:Error[167984] "error variable" "temp"
    (2104730 'move' error[2104728] nil[44])
    const-val ret_tmp[2104733]:string[26] "temp"
    (2104736 call decodeByteBuffer[173938] call_tmp[2104710] call_tmp[2165899] replace[173694] error[2104728] ret_tmp[2104733])
    (2104742 'move' call_tmp[2104726] ret_tmp[2104733])
    val errorExists[2104745]:bool[10] "temp"
    (2104747 'move' errorExists[2104745](2104749 '!=' error[2104728] nil[44]))
    if errorExists[2104745]
    {
      (2104754 '=' error[2104719] error[2104728])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104763] _endcreateStringWithNewBuffer[2104763]
    }
    (2104760 'move' ret[2104724] call_tmp[2104726])
    label _endcreateStringWithNewBuffer[2104763]
    val errorExists[2104768]:bool[10] "temp"
    (2104770 'move' errorExists[2104768](2104772 '!=' error[2104719] nil[44]))
    if errorExists[2104768]
    {
      (2104777 '=' error[1783434] error[2104719])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104786] _endcreateStringWithNewBuffer[2104786]
    }
    (2104783 'move' ret[2104708] ret[2104724])
    label _endcreateStringWithNewBuffer[2104786]
    (1802457 'move' call_tmp[963730] ret[2104708])
    val errorExists[2072769]:bool[10] "temp"
    (2072774 'move' errorExists[2072769](2072771 '!=' error[1783434] nil[44]))
    if errorExists[2072769]
    {
      gotoErrorHandling handler[1783435] handler[1783435]
    }
    (963740 call +=[38800] str[958844] call_tmp[963730])
    ref i_x[2093811]:string[26] "temp"
    (2093815 'move' i_x[2093811](2093813 'set reference' call_tmp[963730]))
    (2093819 call deinit[30834] i_x[2093811])
    label handler[1783435]
    val errorExists[2072777]:bool[10] "temp"
    (2072782 'move' errorExists[2072777](2072779 '!=' error[1783434] nil[44]))
    if errorExists[2072777]
    {
      (1783456 call chpl_uncaught_error[170289] error[1783434])
    }
    (980879 'move' ret[958812] str[958844])
    gotoReturn _end_stringify[959469] _end_stringify[959469]
    label _end_stringify[959469]
    (1805384 '=' _retArg[1805382] ret[958812])
    (1805388 return _void[55])
  }
  function stringify[1056425](const  ref arg _e0_args[1056427]:byteIndex[28173], ref arg _retArg[1806334]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1056431]:string[26] "dead after last mention" "RVV" "temp"
    val error[1783839]:Error[167984] "error variable" "temp"
    (1784024 'move' error[1783839] nil[44])
    const-val call_tmp[1056876]:file[235599] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1060598]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2223737]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2223739 'move' style[2223737](2223742 call defaultIOStyle[235314]))
    (1060602 'move' default_arg_style[1060598] style[2223737])
    val errorExists[2072929]:bool[10] "temp"
    (2072934 'move' errorExists[2072929](2072931 '!=' error[1783839] nil[44]))
    if errorExists[2072929]
    {
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val ret_tmp[1804858]:file[235599] "temp"
    (1056881 call openmem[237644] default_arg_style[1060598] error[1783839] ret_tmp[1804858])
    (1804861 'move' call_tmp[1056876] ret_tmp[1804858])
    val errorExists[2072937]:bool[10] "temp"
    (2072942 'move' errorExists[2072937](2072939 '!=' error[1783839] nil[44]))
    if errorExists[2072937]
    {
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val f[1056882]:file[235599] "dead at end of block" "insert auto destroy"
    (1056884 'move' f[1056882] call_tmp[1056876])
    const-val call_tmp[1056899]:channel(true,dynamic,false)[1060966] "dead at end of block" "maybe param" "temp"
    val errorExists[2072945]:bool[10] "temp"
    (2072950 'move' errorExists[2072945](2072947 '!=' error[1783839] nil[44]))
    if errorExists[2072945]
    {
      val error[1816236]:Error[167984] "error variable" "temp"
      (1816238 'move' error[1816236] nil[44])
      (1816242 call close[236043] f[1056882] error[1816236])
      val errorExists[2074673]:bool[10] "temp"
      (2074678 'move' errorExists[2074673](2074675 '!=' error[1816236] nil[44]))
      if errorExists[2074673]
      {
        gotoErrorHandling handler[1816253] handler[1816253]
      }
      label handler[1816253]
      val errorExists[2074681]:bool[10] "temp"
      (2074686 'move' errorExists[2074681](2074683 '!=' error[1816236] nil[44]))
      if errorExists[2074681]
      {
        (1816264 call chpl_uncaught_error[170289] error[1816236])
      }
      ref i_x[2282500]:file[235599] "temp"
      (2282504 'move' i_x[2282500](2282502 'set reference' f[1056882]))
      (2282508 call deinit[235910] i_x[2282500])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    val errorExists[2072953]:bool[10] "temp"
    (2072958 'move' errorExists[2072953](2072955 '!=' error[1783839] nil[44]))
    if errorExists[2072953]
    {
      val error[1816272]:Error[167984] "error variable" "temp"
      (1816274 'move' error[1816272] nil[44])
      (1816278 call close[236043] f[1056882] error[1816272])
      val errorExists[2074689]:bool[10] "temp"
      (2074694 'move' errorExists[2074689](2074691 '!=' error[1816272] nil[44]))
      if errorExists[2074689]
      {
        gotoErrorHandling handler[1816289] handler[1816289]
      }
      label handler[1816289]
      val errorExists[2074697]:bool[10] "temp"
      (2074702 'move' errorExists[2074697](2074699 '!=' error[1816272] nil[44]))
      if errorExists[2074697]
      {
        (1816300 call chpl_uncaught_error[170289] error[1816272])
      }
      ref i_x[2282512]:file[235599] "temp"
      (2282516 'move' i_x[2282512](2282514 'set reference' f[1056882]))
      (2282520 call deinit[235910] i_x[2282512])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val tmp[2223941]:int(32)[95] "dead after last mention" "temp"
    (2223943 'move' tmp[2223941](2223945 'cast' int(32)[95] 0))
    val errorExists[2072961]:bool[10] "temp"
    (2072966 'move' errorExists[2072961](2072963 '!=' error[1783839] nil[44]))
    if errorExists[2072961]
    {
      val error[1816308]:Error[167984] "error variable" "temp"
      (1816310 'move' error[1816308] nil[44])
      (1816314 call close[236043] f[1056882] error[1816308])
      val errorExists[2074705]:bool[10] "temp"
      (2074710 'move' errorExists[2074705](2074707 '!=' error[1816308] nil[44]))
      if errorExists[2074705]
      {
        gotoErrorHandling handler[1816325] handler[1816325]
      }
      label handler[1816325]
      val errorExists[2074713]:bool[10] "temp"
      (2074718 'move' errorExists[2074713](2074715 '!=' error[1816308] nil[44]))
      if errorExists[2074713]
      {
        (1816336 call chpl_uncaught_error[170289] error[1816308])
      }
      ref i_x[2282524]:file[235599] "temp"
      (2282528 'move' i_x[2282524](2282526 'set reference' f[1056882]))
      (2282532 call deinit[235910] i_x[2282524])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val default_arg_style[1061357]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2224013]:file[235599] "temp"
    (2224017 'move' i_this[2224013](2224015 'set reference' f[1056882]))
    val ret[2224026]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2224028]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2224030]:Error[167984] "error variable" "temp"
    (2224032 'move' error[2224030] nil[44])
    (2224035 'move' style[2224028](2224038 call _style[235979] i_this[2224013] error[2224030]))
    val errorExists[2224041]:bool[10] "temp"
    (2224043 'move' errorExists[2224041](2224045 '!=' error[2224030] nil[44]))
    if errorExists[2224041]
    {
      (2224050 '=' error[1783839] error[2224030])
      gotoErrorHandlingReturn _endwriter_default_style[2224059] _endwriter_default_style[2224059]
    }
    (2224056 'move' ret[2224026] style[2224028])
    label _endwriter_default_style[2224059]
    (1061363 'move' default_arg_style[1061357] ret[2224026])
    val errorExists[2072969]:bool[10] "temp"
    (2072974 'move' errorExists[2072969](2072971 '!=' error[1783839] nil[44]))
    if errorExists[2072969]
    {
      val error[1816344]:Error[167984] "error variable" "temp"
      (1816346 'move' error[1816344] nil[44])
      (1816350 call close[236043] f[1056882] error[1816344])
      val errorExists[2074721]:bool[10] "temp"
      (2074726 'move' errorExists[2074721](2074723 '!=' error[1816344] nil[44]))
      if errorExists[2074721]
      {
        gotoErrorHandling handler[1816361] handler[1816361]
      }
      label handler[1816361]
      val errorExists[2074729]:bool[10] "temp"
      (2074734 'move' errorExists[2074729](2074731 '!=' error[1816344] nil[44]))
      if errorExists[2074729]
      {
        (1816372 call chpl_uncaught_error[170289] error[1816344])
      }
      ref i_x[2282536]:file[235599] "temp"
      (2282540 'move' i_x[2282536](2282538 'set reference' f[1056882]))
      (2282544 call deinit[235910] i_x[2282536])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val ret_tmp[1806358]:channel(true,dynamic,false)[1060966] "temp"
    (1056907 call writer[1060872] f[1056882] 0 9223372036854775807 tmp[2223941] default_arg_style[1061357] error[1783839] ret_tmp[1806358])
    (1806361 'move' call_tmp[1056899] ret_tmp[1806358])
    val errorExists[2072977]:bool[10] "temp"
    (2072982 'move' errorExists[2072977](2072979 '!=' error[1783839] nil[44]))
    if errorExists[2072977]
    {
      val error[1816380]:Error[167984] "error variable" "temp"
      (1816382 'move' error[1816380] nil[44])
      (1816386 call close[236043] f[1056882] error[1816380])
      val errorExists[2074737]:bool[10] "temp"
      (2074742 'move' errorExists[2074737](2074739 '!=' error[1816380] nil[44]))
      if errorExists[2074737]
      {
        gotoErrorHandling handler[1816397] handler[1816397]
      }
      label handler[1816397]
      val errorExists[2074745]:bool[10] "temp"
      (2074750 'move' errorExists[2074745](2074747 '!=' error[1816380] nil[44]))
      if errorExists[2074745]
      {
        (1816408 call chpl_uncaught_error[170289] error[1816380])
      }
      ref i_x[2282548]:file[235599] "temp"
      (2282552 'move' i_x[2282548](2282550 'set reference' f[1056882]))
      (2282556 call deinit[235910] i_x[2282548])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val w[1056910]:channel(true,dynamic,false)[1060966] "dead at end of block" "insert auto destroy"
    (1056912 'move' w[1056910] call_tmp[1056899])
    const-val args[2225984]:1*byteIndex[1057100] "insert auto destroy"
    (2305134 '.=' args[2225984] x0[1057098] _e0_args[1056427])
    const-val ret[2225997]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2225999]:locale[28] "dead after last mention" "maybe param" "temp"
    (2226001 'move' call_tmp[2225999](2226003 '.' w[1056910] _readWriteThisFromLocale[1060963]))
    val ret[2226006]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2226008]:locale[28] "dead after last mention" "temp"
    (2226011 call init=[90170] tmp[2226008] call_tmp[2225999])
    (2226014 'move' ret[2226006] tmp[2226008])
    val ret[2226017]:locale[28] "dead at end of block" "insert auto destroy"
    (2226019 'move' ret[2226017] ret[2226006])
    const-val call_tmp[2226022]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226024 'move' call_tmp[2226022](2226027 call ==[782800] ret[2226017] nilLocale[89942]))
    if call_tmp[2226022]
    {
      const-val call_tmp[2226032]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2226034]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2226036]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2226038 'move' call_tmp[2226036](2226041 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2226044 'move' call_tmp[2226034] call_tmp[2226036])
      const-val call_tmp[2226047]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2226049]:locale[28] "temp"
      (2226052 call chpl_localeID_to_locale[92852] call_tmp[2226034] ret_tmp[2226049])
      (2226055 'move' call_tmp[2226047] ret_tmp[2226049])
      (2226058 'move' call_tmp[2226032] call_tmp[2226047])
      (2226062 call =[90634] ret[2226017] call_tmp[2226032])
      ref i_x[2226065]:locale[28] "temp"
      (2226067 'move' i_x[2226065](2226069 'set reference' call_tmp[2226032]))
      (2226072 call deinit[90188] i_x[2226065])
    }
    (2226075 'move' ret[2225997] ret[2226017])
    const-val origLocale[2226078]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2226080 'move' origLocale[2226078] ret[2225997])
    ref call_tmp[2226085]:locale[28] "dead after last mention" "maybe param" "temp"
    (2226087 'move' call_tmp[2226085](2226089 '.' w[1056910] home[1060954]))
    const-val call_tmp[2226092]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2226094]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2226096 'move' coerce_tmp[2226094](2226098 '.v' call_tmp[2226085] _instance[89978]))
    val coerce_tmp[2226101]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2226103 'move' coerce_tmp[2226101](2226105 'cast' object[22] coerce_tmp[2226094]))
    const-val call_tmp[2226108]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226110 'move' call_tmp[2226108](2226112 'ptr_eq' coerce_tmp[2226101] nil[44]))
    if call_tmp[2226108]
    {
      (2226118 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2226121 'move' call_tmp[2226092](2226123 '_wide_get_locale' coerce_tmp[2226094]))
    val error[2226128]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2226130 'move' error[2226128] nil[44])
    val isdirect[2226144]:bool[10] "temp"
    (2226146 'move' isdirect[2226144](2226149 call chpl_doDirectExecuteOn[187469] call_tmp[2226092]))
    if isdirect[2226144]
    {
      (2226154 call on_fn[1066108] w[1056910] args[2225984] ret[2225997] error[2226128])
    }
    {
      val _args_foron_fn[2226160]:_class_localson_fn[2055197] "temp"
      (2226162 'move' _args_foron_fn[2226160](2226164 'stack allocate class' _class_localson_fn[2055197]))
      (2226166 '.=' _args_foron_fn[2226160] _0_tmp[2055200] call_tmp[2226092])
      (2226170 '.=' _args_foron_fn[2226160] _1_rvfDerefTmp[2055202] w[1056910])
      ref tmp[2226174]:1*byteIndex[1057100] "temp"
      (2226176 'move' tmp[2226174](2226178 'set reference' args[2225984]))
      (2226180 '.=' _args_foron_fn[2226160] _2_args[2055204] tmp[2226174])
      (2226184 '.=' _args_foron_fn[2226160] _3_rvfDerefTmp[2055206] ret[2225997])
      ref tmp[2226188]:Error[167984] "temp"
      (2226190 'move' tmp[2226188](2226192 'set reference' error[2226128]))
      (2226194 '.=' _args_foron_fn[2226160] _4_error[2055208] tmp[2226188])
      val _args_vforon_fn[2226198]:c_void_ptr[149] "temp"
      (2226200 'move' _args_vforon_fn[2226198](2226202 'cast_to_void_star' _args_foron_fn[2226160]))
      val _args_sizeon_fn[2226204]:int(64)[13] "temp"
      (2226206 'move' _args_sizeon_fn[2226204](2226208 'sizeof_bundle' _class_localson_fn[2055197]))
      on(2226211 call wrapon_fn[2055261] call_tmp[2226092] _args_vforon_fn[2226198] _args_sizeon_fn[2226204] _args_foron_fn[2226160])
    }
    val errorExists[2226217]:bool[10] "temp"
    (2226219 'move' errorExists[2226217](2226221 '!=' error[2226128] nil[44]))
    if errorExists[2226217]
    {
      (2226226 '=' error[1783839] error[2226128])
      ref i_x[2226229]:locale[28] "temp"
      (2226231 'move' i_x[2226229](2226233 'set reference' origLocale[2226078]))
      (2226236 call deinit[90188] i_x[2226229])
      gotoErrorHandlingReturn _endwrite[2226253] _endwrite[2226253]
    }
    ref i_x[2226244]:locale[28] "temp"
    (2226246 'move' i_x[2226244](2226248 'set reference' origLocale[2226078]))
    (2226251 call deinit[90188] i_x[2226244])
    label _endwrite[2226253]
    val errorExists[2072985]:bool[10] "temp"
    (2072990 'move' errorExists[2072985](2072987 '!=' error[1783839] nil[44]))
    if errorExists[2072985]
    {
      val error[1816416]:Error[167984] "error variable" "temp"
      (1816418 'move' error[1816416] nil[44])
      (1816422 call close[1062381] w[1056910] error[1816416])
      val errorExists[2074753]:bool[10] "temp"
      (2074758 'move' errorExists[2074753](2074755 '!=' error[1816416] nil[44]))
      if errorExists[2074753]
      {
        gotoErrorHandling handler[1816433] handler[1816433]
      }
      label handler[1816433]
      val errorExists[2074761]:bool[10] "temp"
      (2074766 'move' errorExists[2074761](2074763 '!=' error[1816416] nil[44]))
      if errorExists[2074761]
      {
        (1816444 call chpl_uncaught_error[170289] error[1816416])
      }
      ref i_x[2227582]:channel(true,dynamic,false)[1060966] "temp"
      (2227586 'move' i_x[2227582](2227584 'set reference' w[1056910]))
      (2227590 call deinit[1510035] i_x[2227582])
      val error[1816452]:Error[167984] "error variable" "temp"
      (1816454 'move' error[1816452] nil[44])
      (1816458 call close[236043] f[1056882] error[1816452])
      val errorExists[2074769]:bool[10] "temp"
      (2074774 'move' errorExists[2074769](2074771 '!=' error[1816452] nil[44]))
      if errorExists[2074769]
      {
        gotoErrorHandling handler[1816469] handler[1816469]
      }
      label handler[1816469]
      val errorExists[2074777]:bool[10] "temp"
      (2074782 'move' errorExists[2074777](2074779 '!=' error[1816452] nil[44]))
      if errorExists[2074777]
      {
        (1816480 call chpl_uncaught_error[170289] error[1816452])
      }
      ref i_x[2282560]:file[235599] "temp"
      (2282564 'move' i_x[2282560](2282562 'set reference' f[1056882]))
      (2282568 call deinit[235910] i_x[2282560])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val call_tmp[1056936]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1056938 'move' call_tmp[1056936](1056944 call offset[1080167] w[1056910]))
    const-val call_tmp[2084326]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084328 'move' call_tmp[2084326](2084330 '+' call_tmp[1056936] 1))
    const-val call_tmp[2228705]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228707 'move' call_tmp[2228705](2228709 '<' call_tmp[2084326] 0))
    if call_tmp[2228705]
    {
      (2228715 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2228718]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228720 'move' call_tmp[2228718](2228722 'cast' uint(64)[115] call_tmp[2084326]))
    const-val call_tmp[2228725]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228727 'move' call_tmp[2228725](2228730 call sizeof[1080473] uint(8)[100]))
    const-val call_tmp[2228732]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228734 'move' call_tmp[2228732](2228736 '*' call_tmp[2228718] call_tmp[2228725]))
    const-val call_tmp[2228739]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228741 'move' call_tmp[2228739](2228744 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2228745]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228747 'move' call_tmp[2228745](2228750 call chpl_here_alloc[1080509] call_tmp[2228732] call_tmp[2228739]))
    val call_tmp[2228753]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228755 'move' call_tmp[2228753](2228757 'cast' c_ptr(uint(8))[937442] call_tmp[2228745]))
    val buf[1056974]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    (1056976 'move' buf[1056974] call_tmp[2228753])
    const-val call_tmp[1056980]:channel(false,dynamic,false)[1080701] "dead at end of block" "maybe param" "temp"
    val errorExists[2072993]:bool[10] "temp"
    (2072998 'move' errorExists[2072993](2072995 '!=' error[1783839] nil[44]))
    if errorExists[2072993]
    {
      val error[1816488]:Error[167984] "error variable" "temp"
      (1816490 'move' error[1816488] nil[44])
      (1816494 call close[1062381] w[1056910] error[1816488])
      val errorExists[2074785]:bool[10] "temp"
      (2074790 'move' errorExists[2074785](2074787 '!=' error[1816488] nil[44]))
      if errorExists[2074785]
      {
        gotoErrorHandling handler[1816505] handler[1816505]
      }
      label handler[1816505]
      val errorExists[2074793]:bool[10] "temp"
      (2074798 'move' errorExists[2074793](2074795 '!=' error[1816488] nil[44]))
      if errorExists[2074793]
      {
        (1816516 call chpl_uncaught_error[170289] error[1816488])
      }
      ref i_x[2227594]:channel(true,dynamic,false)[1060966] "temp"
      (2227598 'move' i_x[2227594](2227596 'set reference' w[1056910]))
      (2227602 call deinit[1510035] i_x[2227594])
      val error[1816524]:Error[167984] "error variable" "temp"
      (1816526 'move' error[1816524] nil[44])
      (1816530 call close[236043] f[1056882] error[1816524])
      val errorExists[2074801]:bool[10] "temp"
      (2074806 'move' errorExists[2074801](2074803 '!=' error[1816524] nil[44]))
      if errorExists[2074801]
      {
        gotoErrorHandling handler[1816541] handler[1816541]
      }
      label handler[1816541]
      val errorExists[2074809]:bool[10] "temp"
      (2074814 'move' errorExists[2074809](2074811 '!=' error[1816524] nil[44]))
      if errorExists[2074809]
      {
        (1816552 call chpl_uncaught_error[170289] error[1816524])
      }
      ref i_x[2282572]:file[235599] "temp"
      (2282576 'move' i_x[2282572](2282574 'set reference' f[1056882]))
      (2282580 call deinit[235910] i_x[2282572])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    val errorExists[2073001]:bool[10] "temp"
    (2073006 'move' errorExists[2073001](2073003 '!=' error[1783839] nil[44]))
    if errorExists[2073001]
    {
      val error[1816560]:Error[167984] "error variable" "temp"
      (1816562 'move' error[1816560] nil[44])
      (1816566 call close[1062381] w[1056910] error[1816560])
      val errorExists[2074817]:bool[10] "temp"
      (2074822 'move' errorExists[2074817](2074819 '!=' error[1816560] nil[44]))
      if errorExists[2074817]
      {
        gotoErrorHandling handler[1816577] handler[1816577]
      }
      label handler[1816577]
      val errorExists[2074825]:bool[10] "temp"
      (2074830 'move' errorExists[2074825](2074827 '!=' error[1816560] nil[44]))
      if errorExists[2074825]
      {
        (1816588 call chpl_uncaught_error[170289] error[1816560])
      }
      ref i_x[2227606]:channel(true,dynamic,false)[1060966] "temp"
      (2227610 'move' i_x[2227606](2227608 'set reference' w[1056910]))
      (2227614 call deinit[1510035] i_x[2227606])
      val error[1816596]:Error[167984] "error variable" "temp"
      (1816598 'move' error[1816596] nil[44])
      (1816602 call close[236043] f[1056882] error[1816596])
      val errorExists[2074833]:bool[10] "temp"
      (2074838 'move' errorExists[2074833](2074835 '!=' error[1816596] nil[44]))
      if errorExists[2074833]
      {
        gotoErrorHandling handler[1816613] handler[1816613]
      }
      label handler[1816613]
      val errorExists[2074841]:bool[10] "temp"
      (2074846 'move' errorExists[2074841](2074843 '!=' error[1816596] nil[44]))
      if errorExists[2074841]
      {
        (1816624 call chpl_uncaught_error[170289] error[1816596])
      }
      ref i_x[2282584]:file[235599] "temp"
      (2282588 'move' i_x[2282584](2282586 'set reference' f[1056882]))
      (2282592 call deinit[235910] i_x[2282584])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val tmp[2229044]:int(32)[95] "dead after last mention" "temp"
    (2229046 'move' tmp[2229044] IOHINT_NONE[231430])
    val errorExists[2073009]:bool[10] "temp"
    (2073014 'move' errorExists[2073009](2073011 '!=' error[1783839] nil[44]))
    if errorExists[2073009]
    {
      val error[1816632]:Error[167984] "error variable" "temp"
      (1816634 'move' error[1816632] nil[44])
      (1816638 call close[1062381] w[1056910] error[1816632])
      val errorExists[2074849]:bool[10] "temp"
      (2074854 'move' errorExists[2074849](2074851 '!=' error[1816632] nil[44]))
      if errorExists[2074849]
      {
        gotoErrorHandling handler[1816649] handler[1816649]
      }
      label handler[1816649]
      val errorExists[2074857]:bool[10] "temp"
      (2074862 'move' errorExists[2074857](2074859 '!=' error[1816632] nil[44]))
      if errorExists[2074857]
      {
        (1816660 call chpl_uncaught_error[170289] error[1816632])
      }
      ref i_x[2227618]:channel(true,dynamic,false)[1060966] "temp"
      (2227622 'move' i_x[2227618](2227620 'set reference' w[1056910]))
      (2227626 call deinit[1510035] i_x[2227618])
      val error[1816668]:Error[167984] "error variable" "temp"
      (1816670 'move' error[1816668] nil[44])
      (1816674 call close[236043] f[1056882] error[1816668])
      val errorExists[2074865]:bool[10] "temp"
      (2074870 'move' errorExists[2074865](2074867 '!=' error[1816668] nil[44]))
      if errorExists[2074865]
      {
        gotoErrorHandling handler[1816685] handler[1816685]
      }
      label handler[1816685]
      val errorExists[2074873]:bool[10] "temp"
      (2074878 'move' errorExists[2074873](2074875 '!=' error[1816668] nil[44]))
      if errorExists[2074873]
      {
        (1816696 call chpl_uncaught_error[170289] error[1816668])
      }
      ref i_x[2282596]:file[235599] "temp"
      (2282600 'move' i_x[2282596](2282598 'set reference' f[1056882]))
      (2282604 call deinit[235910] i_x[2282596])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val default_arg_style[1081089]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2229110]:file[235599] "temp"
    (2229114 'move' i_this[2229110](2229112 'set reference' f[1056882]))
    val ret[2229123]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2229125]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2229127]:Error[167984] "error variable" "temp"
    (2229129 'move' error[2229127] nil[44])
    (2229132 'move' style[2229125](2229135 call _style[235979] i_this[2229110] error[2229127]))
    val errorExists[2229138]:bool[10] "temp"
    (2229140 'move' errorExists[2229138](2229142 '!=' error[2229127] nil[44]))
    if errorExists[2229138]
    {
      (2229147 '=' error[1783839] error[2229127])
      gotoErrorHandlingReturn _endreader_default_style[2229156] _endreader_default_style[2229156]
    }
    (2229153 'move' ret[2229123] style[2229125])
    label _endreader_default_style[2229156]
    (1081095 'move' default_arg_style[1081089] ret[2229123])
    val errorExists[2073017]:bool[10] "temp"
    (2073022 'move' errorExists[2073017](2073019 '!=' error[1783839] nil[44]))
    if errorExists[2073017]
    {
      val error[1816704]:Error[167984] "error variable" "temp"
      (1816706 'move' error[1816704] nil[44])
      (1816710 call close[1062381] w[1056910] error[1816704])
      val errorExists[2074881]:bool[10] "temp"
      (2074886 'move' errorExists[2074881](2074883 '!=' error[1816704] nil[44]))
      if errorExists[2074881]
      {
        gotoErrorHandling handler[1816721] handler[1816721]
      }
      label handler[1816721]
      val errorExists[2074889]:bool[10] "temp"
      (2074894 'move' errorExists[2074889](2074891 '!=' error[1816704] nil[44]))
      if errorExists[2074889]
      {
        (1816732 call chpl_uncaught_error[170289] error[1816704])
      }
      ref i_x[2227630]:channel(true,dynamic,false)[1060966] "temp"
      (2227634 'move' i_x[2227630](2227632 'set reference' w[1056910]))
      (2227638 call deinit[1510035] i_x[2227630])
      val error[1816740]:Error[167984] "error variable" "temp"
      (1816742 'move' error[1816740] nil[44])
      (1816746 call close[236043] f[1056882] error[1816740])
      val errorExists[2074897]:bool[10] "temp"
      (2074902 'move' errorExists[2074897](2074899 '!=' error[1816740] nil[44]))
      if errorExists[2074897]
      {
        gotoErrorHandling handler[1816757] handler[1816757]
      }
      label handler[1816757]
      val errorExists[2074905]:bool[10] "temp"
      (2074910 'move' errorExists[2074905](2074907 '!=' error[1816740] nil[44]))
      if errorExists[2074905]
      {
        (1816768 call chpl_uncaught_error[170289] error[1816740])
      }
      ref i_x[2282608]:file[235599] "temp"
      (2282612 'move' i_x[2282608](2282610 'set reference' f[1056882]))
      (2282616 call deinit[235910] i_x[2282608])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val ret_tmp[1806748]:channel(false,dynamic,false)[1080701] "temp"
    (1056988 call reader[1080607] f[1056882] 0 9223372036854775807 tmp[2229044] default_arg_style[1081089] error[1783839] ret_tmp[1806748])
    (1806751 'move' call_tmp[1056980] ret_tmp[1806748])
    val errorExists[2073025]:bool[10] "temp"
    (2073030 'move' errorExists[2073025](2073027 '!=' error[1783839] nil[44]))
    if errorExists[2073025]
    {
      val error[1816776]:Error[167984] "error variable" "temp"
      (1816778 'move' error[1816776] nil[44])
      (1816782 call close[1062381] w[1056910] error[1816776])
      val errorExists[2074913]:bool[10] "temp"
      (2074918 'move' errorExists[2074913](2074915 '!=' error[1816776] nil[44]))
      if errorExists[2074913]
      {
        gotoErrorHandling handler[1816793] handler[1816793]
      }
      label handler[1816793]
      val errorExists[2074921]:bool[10] "temp"
      (2074926 'move' errorExists[2074921](2074923 '!=' error[1816776] nil[44]))
      if errorExists[2074921]
      {
        (1816804 call chpl_uncaught_error[170289] error[1816776])
      }
      ref i_x[2227642]:channel(true,dynamic,false)[1060966] "temp"
      (2227646 'move' i_x[2227642](2227644 'set reference' w[1056910]))
      (2227650 call deinit[1510035] i_x[2227642])
      val error[1816812]:Error[167984] "error variable" "temp"
      (1816814 'move' error[1816812] nil[44])
      (1816818 call close[236043] f[1056882] error[1816812])
      val errorExists[2074929]:bool[10] "temp"
      (2074934 'move' errorExists[2074929](2074931 '!=' error[1816812] nil[44]))
      if errorExists[2074929]
      {
        gotoErrorHandling handler[1816829] handler[1816829]
      }
      label handler[1816829]
      val errorExists[2074937]:bool[10] "temp"
      (2074942 'move' errorExists[2074937](2074939 '!=' error[1816812] nil[44]))
      if errorExists[2074937]
      {
        (1816840 call chpl_uncaught_error[170289] error[1816812])
      }
      ref i_x[2282620]:file[235599] "temp"
      (2282624 'move' i_x[2282620](2282622 'set reference' f[1056882]))
      (2282628 call deinit[235910] i_x[2282620])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val r[1056991]:channel(false,dynamic,false)[1080701] "dead at end of block" "insert auto destroy"
    (1056993 'move' r[1056991] call_tmp[1056980])
    (1057020 call readBytes[1082858] r[1056991] call_tmp[2228753] call_tmp[1056936] error[1783839])
    val errorExists[2073033]:bool[10] "temp"
    (2073038 'move' errorExists[2073033](2073035 '!=' error[1783839] nil[44]))
    if errorExists[2073033]
    {
      val error[1816848]:Error[167984] "error variable" "temp"
      (1816850 'move' error[1816848] nil[44])
      (1816854 call close[1082113] r[1056991] error[1816848])
      val errorExists[2074945]:bool[10] "temp"
      (2074950 'move' errorExists[2074945](2074947 '!=' error[1816848] nil[44]))
      if errorExists[2074945]
      {
        gotoErrorHandling handler[1816865] handler[1816865]
      }
      label handler[1816865]
      val errorExists[2074953]:bool[10] "temp"
      (2074958 'move' errorExists[2074953](2074955 '!=' error[1816848] nil[44]))
      if errorExists[2074953]
      {
        (1816876 call chpl_uncaught_error[170289] error[1816848])
      }
      ref i_x[2285931]:channel(false,dynamic,false)[1080701] "temp"
      (2285935 'move' i_x[2285931](2285933 'set reference' r[1056991]))
      (2285939 call deinit[1514289] i_x[2285931])
      val error[1816884]:Error[167984] "error variable" "temp"
      (1816886 'move' error[1816884] nil[44])
      (1816890 call close[1062381] w[1056910] error[1816884])
      val errorExists[2074961]:bool[10] "temp"
      (2074966 'move' errorExists[2074961](2074963 '!=' error[1816884] nil[44]))
      if errorExists[2074961]
      {
        gotoErrorHandling handler[1816901] handler[1816901]
      }
      label handler[1816901]
      val errorExists[2074969]:bool[10] "temp"
      (2074974 'move' errorExists[2074969](2074971 '!=' error[1816884] nil[44]))
      if errorExists[2074969]
      {
        (1816912 call chpl_uncaught_error[170289] error[1816884])
      }
      ref i_x[2227654]:channel(true,dynamic,false)[1060966] "temp"
      (2227658 'move' i_x[2227654](2227656 'set reference' w[1056910]))
      (2227662 call deinit[1510035] i_x[2227654])
      val error[1816920]:Error[167984] "error variable" "temp"
      (1816922 'move' error[1816920] nil[44])
      (1816926 call close[236043] f[1056882] error[1816920])
      val errorExists[2074977]:bool[10] "temp"
      (2074982 'move' errorExists[2074977](2074979 '!=' error[1816920] nil[44]))
      if errorExists[2074977]
      {
        gotoErrorHandling handler[1816937] handler[1816937]
      }
      label handler[1816937]
      val errorExists[2074985]:bool[10] "temp"
      (2074990 'move' errorExists[2074985](2074987 '!=' error[1816920] nil[44]))
      if errorExists[2074985]
      {
        (1816948 call chpl_uncaught_error[170289] error[1816920])
      }
      ref i_x[2282632]:file[235599] "temp"
      (2282636 'move' i_x[2282632](2282634 'set reference' f[1056882]))
      (2282640 call deinit[235910] i_x[2282632])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    ref call_tmp[2157506]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2157508 'move' call_tmp[2157506](2157510 'array_get' buf[1056974] call_tmp[1056936]))
    const-val coerce_tmp[1083351]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083357 'move' coerce_tmp[1083351](1083353 'cast' uint(8)[100] 0))
    (2157986 '=' call_tmp[2157506] coerce_tmp[1083351])
    const-val ret[2103843]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2103845]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2103847]:Error[167984] "error variable" "temp"
    (2103849 'move' error[2103847] nil[44])
    const-val ret_tmp[2103852]:string[26] "temp"
    (2103855 call decodeByteBuffer[173938] call_tmp[2228753] call_tmp[1056936] replace[173694] error[2103847] ret_tmp[2103852])
    (2103861 'move' call_tmp[2103845] ret_tmp[2103852])
    val errorExists[2103864]:bool[10] "temp"
    (2103866 'move' errorExists[2103864](2103868 '!=' error[2103847] nil[44]))
    if errorExists[2103864]
    {
      (2103873 '=' error[1783839] error[2103847])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2103882] _endcreateStringWithNewBuffer[2103882]
    }
    (2103879 'move' ret[2103843] call_tmp[2103845])
    label _endcreateStringWithNewBuffer[2103882]
    val errorExists[2073041]:bool[10] "temp"
    (2073046 'move' errorExists[2073041](2073043 '!=' error[1783839] nil[44]))
    if errorExists[2073041]
    {
      val error[1816956]:Error[167984] "error variable" "temp"
      (1816958 'move' error[1816956] nil[44])
      (1816962 call close[1082113] r[1056991] error[1816956])
      val errorExists[2074993]:bool[10] "temp"
      (2074998 'move' errorExists[2074993](2074995 '!=' error[1816956] nil[44]))
      if errorExists[2074993]
      {
        gotoErrorHandling handler[1816973] handler[1816973]
      }
      label handler[1816973]
      val errorExists[2075001]:bool[10] "temp"
      (2075006 'move' errorExists[2075001](2075003 '!=' error[1816956] nil[44]))
      if errorExists[2075001]
      {
        (1816984 call chpl_uncaught_error[170289] error[1816956])
      }
      ref i_x[2285943]:channel(false,dynamic,false)[1080701] "temp"
      (2285947 'move' i_x[2285943](2285945 'set reference' r[1056991]))
      (2285951 call deinit[1514289] i_x[2285943])
      val error[1816992]:Error[167984] "error variable" "temp"
      (1816994 'move' error[1816992] nil[44])
      (1816998 call close[1062381] w[1056910] error[1816992])
      val errorExists[2075009]:bool[10] "temp"
      (2075014 'move' errorExists[2075009](2075011 '!=' error[1816992] nil[44]))
      if errorExists[2075009]
      {
        gotoErrorHandling handler[1817009] handler[1817009]
      }
      label handler[1817009]
      val errorExists[2075017]:bool[10] "temp"
      (2075022 'move' errorExists[2075017](2075019 '!=' error[1816992] nil[44]))
      if errorExists[2075017]
      {
        (1817020 call chpl_uncaught_error[170289] error[1816992])
      }
      ref i_x[2227666]:channel(true,dynamic,false)[1060966] "temp"
      (2227670 'move' i_x[2227666](2227668 'set reference' w[1056910]))
      (2227674 call deinit[1510035] i_x[2227666])
      val error[1817028]:Error[167984] "error variable" "temp"
      (1817030 'move' error[1817028] nil[44])
      (1817034 call close[236043] f[1056882] error[1817028])
      val errorExists[2075025]:bool[10] "temp"
      (2075030 'move' errorExists[2075025](2075027 '!=' error[1817028] nil[44]))
      if errorExists[2075025]
      {
        gotoErrorHandling handler[1817045] handler[1817045]
      }
      label handler[1817045]
      val errorExists[2075033]:bool[10] "temp"
      (2075038 'move' errorExists[2075033](2075035 '!=' error[1817028] nil[44]))
      if errorExists[2075033]
      {
        (1817056 call chpl_uncaught_error[170289] error[1817028])
      }
      ref i_x[2282644]:file[235599] "temp"
      (2282648 'move' i_x[2282644](2282646 'set reference' f[1056882]))
      (2282652 call deinit[235910] i_x[2282644])
      gotoErrorHandling handler[1783840] handler[1783840]
    }
    const-val coerce_tmp[1083362]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083368 'move' coerce_tmp[1083362](1083364 'cast' c_void_ptr[149] call_tmp[2228753]))
    (2165580 call chpl_here_free[188127] coerce_tmp[1083362])
    (1083373 'move' ret[1056431] ret[2103843])
    val error[1817064]:Error[167984] "error variable" "temp"
    (1817066 'move' error[1817064] nil[44])
    (1817070 call close[1082113] r[1056991] error[1817064])
    val errorExists[2075041]:bool[10] "temp"
    (2075046 'move' errorExists[2075041](2075043 '!=' error[1817064] nil[44]))
    if errorExists[2075041]
    {
      gotoErrorHandling handler[1817081] handler[1817081]
    }
    label handler[1817081]
    val errorExists[2075049]:bool[10] "temp"
    (2075054 'move' errorExists[2075049](2075051 '!=' error[1817064] nil[44]))
    if errorExists[2075049]
    {
      (1817092 call chpl_uncaught_error[170289] error[1817064])
    }
    ref i_x[2285955]:channel(false,dynamic,false)[1080701] "temp"
    (2285959 'move' i_x[2285955](2285957 'set reference' r[1056991]))
    (2285963 call deinit[1514289] i_x[2285955])
    val error[1817100]:Error[167984] "error variable" "temp"
    (1817102 'move' error[1817100] nil[44])
    (1817106 call close[1062381] w[1056910] error[1817100])
    val errorExists[2075057]:bool[10] "temp"
    (2075062 'move' errorExists[2075057](2075059 '!=' error[1817100] nil[44]))
    if errorExists[2075057]
    {
      gotoErrorHandling handler[1817117] handler[1817117]
    }
    label handler[1817117]
    val errorExists[2075065]:bool[10] "temp"
    (2075070 'move' errorExists[2075065](2075067 '!=' error[1817100] nil[44]))
    if errorExists[2075065]
    {
      (1817128 call chpl_uncaught_error[170289] error[1817100])
    }
    ref i_x[2227678]:channel(true,dynamic,false)[1060966] "temp"
    (2227682 'move' i_x[2227678](2227680 'set reference' w[1056910]))
    (2227686 call deinit[1510035] i_x[2227678])
    val error[1817136]:Error[167984] "error variable" "temp"
    (1817138 'move' error[1817136] nil[44])
    (1817142 call close[236043] f[1056882] error[1817136])
    val errorExists[2075073]:bool[10] "temp"
    (2075078 'move' errorExists[2075073](2075075 '!=' error[1817136] nil[44]))
    if errorExists[2075073]
    {
      gotoErrorHandling handler[1817153] handler[1817153]
    }
    label handler[1817153]
    val errorExists[2075081]:bool[10] "temp"
    (2075086 'move' errorExists[2075081](2075083 '!=' error[1817136] nil[44]))
    if errorExists[2075081]
    {
      (1817164 call chpl_uncaught_error[170289] error[1817136])
    }
    ref i_x[2282656]:file[235599] "temp"
    (2282660 'move' i_x[2282656](2282658 'set reference' f[1056882]))
    (2282664 call deinit[235910] i_x[2282656])
    gotoReturn _end_stringify[1057088] _end_stringify[1057088]
    label handler[1783840]
    val errorExists[2073049]:bool[10] "temp"
    (2073054 'move' errorExists[2073049](2073051 '!=' error[1783839] nil[44]))
    if errorExists[2073049]
    {
      (1784030 call chpl_uncaught_error[170289] error[1783839])
    }
    label _end_stringify[1057088]
    (1806336 '=' _retArg[1806334] ret[1056431])
    (1806338 return _void[55])
  }
  function stringify[1043721](const  ref arg _e0_args[1043723]:string[26], const in arg _e1_args[1043725]:range(byteIndex,bounded,false)[1025811], const  ref arg _e2_args[1043727]:string[26], const in arg _e3_args[1043729]:int(64)[13], ref arg _retArg[1806252]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1043733]:string[26] "dead after last mention" "RVV" "temp"
    val str[1043774]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166340]:string[26] "temp"
    (2166343 'move' inlineImm[2166340] "")
    ref i_x[2166345]:string[26] "temp"
    (2166349 'move' i_x[2166345](2166347 'set reference' inlineImm[2166340]))
    val ret[2166352]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166354]:string[26] "dead after last mention" "temp"
    (2166357 call init=[30774] tmp[2166354] i_x[2166345])
    (2166360 'move' ret[2166352] tmp[2166354])
    (1043776 'move' str[1043774] ret[2166352])
    (1052907 call +=[38800] str[1043774] _e0_args[1043723])
    const-val call_tmp[1053482]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806286]:string[26] "temp"
    (1053487 call _cast[1054377] _e1_args[1043725] ret_tmp[1806286])
    (1806289 'move' call_tmp[1053482] ret_tmp[1806286])
    (1053491 call +=[38800] str[1043774] call_tmp[1053482])
    ref i_x[2094195]:string[26] "temp"
    (2094199 'move' i_x[2094195](2094197 'set reference' call_tmp[1053482]))
    (2094203 call deinit[30834] i_x[2094195])
    (1053597 call +=[38800] str[1043774] _e2_args[1043727])
    const-val call_tmp[1054172]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806412]:string[26] "temp"
    (1054177 call _cast[1063172] _e3_args[1043729] ret_tmp[1806412])
    (1806415 'move' call_tmp[1054172] ret_tmp[1806412])
    (1054181 call +=[38800] str[1043774] call_tmp[1054172])
    ref i_x[2094207]:string[26] "temp"
    (2094211 'move' i_x[2094207](2094209 'set reference' call_tmp[1054172]))
    (2094215 call deinit[30834] i_x[2094207])
    (1084882 'move' ret[1043733] str[1043774])
    gotoReturn _end_stringify[1044399] _end_stringify[1044399]
    label _end_stringify[1044399]
    (1806254 '=' _retArg[1806252] ret[1043733])
    (1806260 return _void[55])
  }
  function stringify[1113539](const  ref arg _e0_args[1113541]:string[26], const in arg _e1_args[1113543]:range(int(64),bounded,false)[1026833], const  ref arg _e2_args[1113545]:string[26], const in arg _e3_args[1113547]:int(64)[13], ref arg _retArg[1807313]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1113551]:string[26] "dead after last mention" "RVV" "temp"
    val str[1113592]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166440]:string[26] "temp"
    (2166443 'move' inlineImm[2166440] "")
    ref i_x[2166445]:string[26] "temp"
    (2166449 'move' i_x[2166445](2166447 'set reference' inlineImm[2166440]))
    val ret[2166452]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166454]:string[26] "dead after last mention" "temp"
    (2166457 call init=[30774] tmp[2166454] i_x[2166445])
    (2166460 'move' ret[2166452] tmp[2166454])
    (1113594 'move' str[1113592] ret[2166452])
    (1117986 call +=[38800] str[1113592] _e0_args[1113541])
    const-val call_tmp[1118561]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807335]:string[26] "temp"
    (1118566 call _cast[1119456] _e1_args[1113543] ret_tmp[1807335])
    (1807338 'move' call_tmp[1118561] ret_tmp[1807335])
    (1118570 call +=[38800] str[1113592] call_tmp[1118561])
    ref i_x[2094699]:string[26] "temp"
    (2094703 'move' i_x[2094699](2094701 'set reference' call_tmp[1118561]))
    (2094707 call deinit[30834] i_x[2094699])
    (1118676 call +=[38800] str[1113592] _e2_args[1113545])
    const-val call_tmp[1119251]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806436]:string[26] "temp"
    (1119256 call _cast[1063172] _e3_args[1113547] ret_tmp[1806436])
    (1806439 'move' call_tmp[1119251] ret_tmp[1806436])
    (1119260 call +=[38800] str[1113592] call_tmp[1119251])
    ref i_x[2094711]:string[26] "temp"
    (2094715 'move' i_x[2094711](2094713 'set reference' call_tmp[1119251]))
    (2094719 call deinit[30834] i_x[2094711])
    (1120918 'move' ret[1113551] str[1113592])
    gotoReturn _end_stringify[1114217] _end_stringify[1114217]
    label _end_stringify[1114217]
    (1807315 '=' _retArg[1807313] ret[1113551])
    (1807321 return _void[55])
  }
  function stringify[1128363](const  ref arg _e0_args[1128365]:string[26], const in arg _e1_args[1128367]:range(int(64),boundedLow,false)[1087584], const  ref arg _e2_args[1128369]:string[26], const in arg _e3_args[1128371]:int(64)[13], ref arg _retArg[1807607]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1128375]:string[26] "dead after last mention" "RVV" "temp"
    val str[1128416]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166465]:string[26] "temp"
    (2166468 'move' inlineImm[2166465] "")
    ref i_x[2166470]:string[26] "temp"
    (2166474 'move' i_x[2166470](2166472 'set reference' inlineImm[2166465]))
    val ret[2166477]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166479]:string[26] "dead after last mention" "temp"
    (2166482 call init=[30774] tmp[2166479] i_x[2166470])
    (2166485 'move' ret[2166477] tmp[2166479])
    (1128418 'move' str[1128416] ret[2166477])
    (1134509 call +=[38800] str[1128416] _e0_args[1128365])
    const-val call_tmp[1135084]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807629]:string[26] "temp"
    (1135089 call _cast[1135979] _e1_args[1128367] ret_tmp[1807629])
    (1807632 'move' call_tmp[1135084] ret_tmp[1807629])
    (1135093 call +=[38800] str[1128416] call_tmp[1135084])
    ref i_x[2094771]:string[26] "temp"
    (2094775 'move' i_x[2094771](2094773 'set reference' call_tmp[1135084]))
    (2094779 call deinit[30834] i_x[2094771])
    (1135199 call +=[38800] str[1128416] _e2_args[1128369])
    const-val call_tmp[1135774]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806454]:string[26] "temp"
    (1135779 call _cast[1063172] _e3_args[1128371] ret_tmp[1806454])
    (1806457 'move' call_tmp[1135774] ret_tmp[1806454])
    (1135783 call +=[38800] str[1128416] call_tmp[1135774])
    ref i_x[2094783]:string[26] "temp"
    (2094787 'move' i_x[2094783](2094785 'set reference' call_tmp[1135774]))
    (2094791 call deinit[30834] i_x[2094783])
    (1138972 'move' ret[1128375] str[1128416])
    gotoReturn _end_stringify[1129041] _end_stringify[1129041]
    label _end_stringify[1129041]
    (1807609 '=' _retArg[1807607] ret[1128375])
    (1807615 return _void[55])
  }
  function stringify[1146534](const  ref arg _e0_args[1146536]:string[26], const in arg _e1_args[1146538]:range(byteIndex,boundedLow,false)[1143422], const  ref arg _e2_args[1146540]:string[26], const in arg _e3_args[1146542]:int(64)[13], ref arg _retArg[1807871]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1146546]:string[26] "dead after last mention" "RVV" "temp"
    val str[1146587]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166490]:string[26] "temp"
    (2166493 'move' inlineImm[2166490] "")
    ref i_x[2166495]:string[26] "temp"
    (2166499 'move' i_x[2166495](2166497 'set reference' inlineImm[2166490]))
    val ret[2166502]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166504]:string[26] "dead after last mention" "temp"
    (2166507 call init=[30774] tmp[2166504] i_x[2166495])
    (2166510 'move' ret[2166502] tmp[2166504])
    (1146589 'move' str[1146587] ret[2166502])
    (1152973 call +=[38800] str[1146587] _e0_args[1146536])
    const-val call_tmp[1153548]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807911]:string[26] "temp"
    (1153553 call _cast[1154443] _e1_args[1146538] ret_tmp[1807911])
    (1807914 'move' call_tmp[1153548] ret_tmp[1807911])
    (1153557 call +=[38800] str[1146587] call_tmp[1153548])
    ref i_x[2094855]:string[26] "temp"
    (2094859 'move' i_x[2094855](2094857 'set reference' call_tmp[1153548]))
    (2094863 call deinit[30834] i_x[2094855])
    (1153663 call +=[38800] str[1146587] _e2_args[1146540])
    const-val call_tmp[1154238]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806472]:string[26] "temp"
    (1154243 call _cast[1063172] _e3_args[1146542] ret_tmp[1806472])
    (1806475 'move' call_tmp[1154238] ret_tmp[1806472])
    (1154247 call +=[38800] str[1146587] call_tmp[1154238])
    ref i_x[2094867]:string[26] "temp"
    (2094871 'move' i_x[2094867](2094869 'set reference' call_tmp[1154238]))
    (2094875 call deinit[30834] i_x[2094867])
    (1156293 'move' ret[1146546] str[1146587])
    gotoReturn _end_stringify[1147212] _end_stringify[1147212]
    label _end_stringify[1147212]
    (1807873 '=' _retArg[1807871] ret[1146546])
    (1807879 return _void[55])
  }
  function stringify[1175840](const  ref arg _e0_args[1175842]:string[26], const  ref arg _e1_args[1175844]:codepointIndex[28277], const  ref arg _e2_args[1175846]:string[26], const in arg _e3_args[1175848]:int(64)[13], ref arg _retArg[1807987]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1175852]:string[26] "dead after last mention" "RVV" "temp"
    val error[1785630]:Error[167984] "error variable" "temp"
    (1785815 'move' error[1785630] nil[44])
    const-val call_tmp[1176306]:file[235599] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1179644]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2223781]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2223783 'move' style[2223781](2223786 call defaultIOStyle[235314]))
    (1179648 'move' default_arg_style[1179644] style[2223781])
    val errorExists[2073817]:bool[10] "temp"
    (2073822 'move' errorExists[2073817](2073819 '!=' error[1785630] nil[44]))
    if errorExists[2073817]
    {
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val ret_tmp[1804870]:file[235599] "temp"
    (1176311 call openmem[237644] default_arg_style[1179644] error[1785630] ret_tmp[1804870])
    (1804873 'move' call_tmp[1176306] ret_tmp[1804870])
    val errorExists[2073825]:bool[10] "temp"
    (2073830 'move' errorExists[2073825](2073827 '!=' error[1785630] nil[44]))
    if errorExists[2073825]
    {
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val f[1176312]:file[235599] "dead at end of block" "insert auto destroy"
    (1176314 'move' f[1176312] call_tmp[1176306])
    const-val call_tmp[1176329]:channel(true,dynamic,false)[1060966] "dead at end of block" "maybe param" "temp"
    val errorExists[2073833]:bool[10] "temp"
    (2073838 'move' errorExists[2073833](2073835 '!=' error[1785630] nil[44]))
    if errorExists[2073833]
    {
      val error[1819098]:Error[167984] "error variable" "temp"
      (1819100 'move' error[1819098] nil[44])
      (1819104 call close[236043] f[1176312] error[1819098])
      val errorExists[2075505]:bool[10] "temp"
      (2075510 'move' errorExists[2075505](2075507 '!=' error[1819098] nil[44]))
      if errorExists[2075505]
      {
        gotoErrorHandling handler[1819115] handler[1819115]
      }
      label handler[1819115]
      val errorExists[2075513]:bool[10] "temp"
      (2075518 'move' errorExists[2075513](2075515 '!=' error[1819098] nil[44]))
      if errorExists[2075513]
      {
        (1819126 call chpl_uncaught_error[170289] error[1819098])
      }
      ref i_x[2282836]:file[235599] "temp"
      (2282840 'move' i_x[2282836](2282838 'set reference' f[1176312]))
      (2282844 call deinit[235910] i_x[2282836])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    val errorExists[2073841]:bool[10] "temp"
    (2073846 'move' errorExists[2073841](2073843 '!=' error[1785630] nil[44]))
    if errorExists[2073841]
    {
      val error[1819134]:Error[167984] "error variable" "temp"
      (1819136 'move' error[1819134] nil[44])
      (1819140 call close[236043] f[1176312] error[1819134])
      val errorExists[2075521]:bool[10] "temp"
      (2075526 'move' errorExists[2075521](2075523 '!=' error[1819134] nil[44]))
      if errorExists[2075521]
      {
        gotoErrorHandling handler[1819151] handler[1819151]
      }
      label handler[1819151]
      val errorExists[2075529]:bool[10] "temp"
      (2075534 'move' errorExists[2075529](2075531 '!=' error[1819134] nil[44]))
      if errorExists[2075529]
      {
        (1819162 call chpl_uncaught_error[170289] error[1819134])
      }
      ref i_x[2282848]:file[235599] "temp"
      (2282852 'move' i_x[2282848](2282850 'set reference' f[1176312]))
      (2282856 call deinit[235910] i_x[2282848])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val tmp[2223999]:int(32)[95] "dead after last mention" "temp"
    (2224001 'move' tmp[2223999](2224003 'cast' int(32)[95] 0))
    val errorExists[2073849]:bool[10] "temp"
    (2073854 'move' errorExists[2073849](2073851 '!=' error[1785630] nil[44]))
    if errorExists[2073849]
    {
      val error[1819170]:Error[167984] "error variable" "temp"
      (1819172 'move' error[1819170] nil[44])
      (1819176 call close[236043] f[1176312] error[1819170])
      val errorExists[2075537]:bool[10] "temp"
      (2075542 'move' errorExists[2075537](2075539 '!=' error[1819170] nil[44]))
      if errorExists[2075537]
      {
        gotoErrorHandling handler[1819187] handler[1819187]
      }
      label handler[1819187]
      val errorExists[2075545]:bool[10] "temp"
      (2075550 'move' errorExists[2075545](2075547 '!=' error[1819170] nil[44]))
      if errorExists[2075545]
      {
        (1819198 call chpl_uncaught_error[170289] error[1819170])
      }
      ref i_x[2282860]:file[235599] "temp"
      (2282864 'move' i_x[2282860](2282862 'set reference' f[1176312]))
      (2282868 call deinit[235910] i_x[2282860])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val default_arg_style[1179703]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2224113]:file[235599] "temp"
    (2224117 'move' i_this[2224113](2224115 'set reference' f[1176312]))
    val ret[2224126]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2224128]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2224130]:Error[167984] "error variable" "temp"
    (2224132 'move' error[2224130] nil[44])
    (2224135 'move' style[2224128](2224138 call _style[235979] i_this[2224113] error[2224130]))
    val errorExists[2224141]:bool[10] "temp"
    (2224143 'move' errorExists[2224141](2224145 '!=' error[2224130] nil[44]))
    if errorExists[2224141]
    {
      (2224150 '=' error[1785630] error[2224130])
      gotoErrorHandlingReturn _endwriter_default_style[2224159] _endwriter_default_style[2224159]
    }
    (2224156 'move' ret[2224126] style[2224128])
    label _endwriter_default_style[2224159]
    (1179709 'move' default_arg_style[1179703] ret[2224126])
    val errorExists[2073857]:bool[10] "temp"
    (2073862 'move' errorExists[2073857](2073859 '!=' error[1785630] nil[44]))
    if errorExists[2073857]
    {
      val error[1819206]:Error[167984] "error variable" "temp"
      (1819208 'move' error[1819206] nil[44])
      (1819212 call close[236043] f[1176312] error[1819206])
      val errorExists[2075553]:bool[10] "temp"
      (2075558 'move' errorExists[2075553](2075555 '!=' error[1819206] nil[44]))
      if errorExists[2075553]
      {
        gotoErrorHandling handler[1819223] handler[1819223]
      }
      label handler[1819223]
      val errorExists[2075561]:bool[10] "temp"
      (2075566 'move' errorExists[2075561](2075563 '!=' error[1819206] nil[44]))
      if errorExists[2075561]
      {
        (1819234 call chpl_uncaught_error[170289] error[1819206])
      }
      ref i_x[2282872]:file[235599] "temp"
      (2282876 'move' i_x[2282872](2282874 'set reference' f[1176312]))
      (2282880 call deinit[235910] i_x[2282872])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val ret_tmp[1806370]:channel(true,dynamic,false)[1060966] "temp"
    (1176337 call writer[1060872] f[1176312] 0 9223372036854775807 tmp[2223999] default_arg_style[1179703] error[1785630] ret_tmp[1806370])
    (1806373 'move' call_tmp[1176329] ret_tmp[1806370])
    val errorExists[2073865]:bool[10] "temp"
    (2073870 'move' errorExists[2073865](2073867 '!=' error[1785630] nil[44]))
    if errorExists[2073865]
    {
      val error[1819242]:Error[167984] "error variable" "temp"
      (1819244 'move' error[1819242] nil[44])
      (1819248 call close[236043] f[1176312] error[1819242])
      val errorExists[2075569]:bool[10] "temp"
      (2075574 'move' errorExists[2075569](2075571 '!=' error[1819242] nil[44]))
      if errorExists[2075569]
      {
        gotoErrorHandling handler[1819259] handler[1819259]
      }
      label handler[1819259]
      val errorExists[2075577]:bool[10] "temp"
      (2075582 'move' errorExists[2075577](2075579 '!=' error[1819242] nil[44]))
      if errorExists[2075577]
      {
        (1819270 call chpl_uncaught_error[170289] error[1819242])
      }
      ref i_x[2282884]:file[235599] "temp"
      (2282888 'move' i_x[2282884](2282886 'set reference' f[1176312]))
      (2282892 call deinit[235910] i_x[2282884])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val w[1176340]:channel(true,dynamic,false)[1060966] "dead at end of block" "insert auto destroy"
    (1176342 'move' w[1176340] call_tmp[1176329])
    const-val args[2234679]:(string,codepointIndex,string,int(64))[1176539] "insert auto destroy"
    (2300567 '.=' args[2234679] x0[1176531] _e0_args[1175842])
    (2300571 '.=' args[2234679] x1[1176533] _e1_args[1175844])
    (2300575 '.=' args[2234679] x2[1176535] _e2_args[1175846])
    (2300579 '.=' args[2234679] x3[1176537] _e3_args[1175848])
    const-val ret[2234704]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2234706]:locale[28] "dead after last mention" "maybe param" "temp"
    (2234708 'move' call_tmp[2234706](2234710 '.' w[1176340] _readWriteThisFromLocale[1060963]))
    val ret[2234713]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2234715]:locale[28] "dead after last mention" "temp"
    (2234718 call init=[90170] tmp[2234715] call_tmp[2234706])
    (2234721 'move' ret[2234713] tmp[2234715])
    val ret[2234724]:locale[28] "dead at end of block" "insert auto destroy"
    (2234726 'move' ret[2234724] ret[2234713])
    const-val call_tmp[2234729]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2234731 'move' call_tmp[2234729](2234734 call ==[782800] ret[2234724] nilLocale[89942]))
    if call_tmp[2234729]
    {
      const-val call_tmp[2234739]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2234741]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2234743]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2234745 'move' call_tmp[2234743](2234748 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2234751 'move' call_tmp[2234741] call_tmp[2234743])
      const-val call_tmp[2234754]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2234756]:locale[28] "temp"
      (2234759 call chpl_localeID_to_locale[92852] call_tmp[2234741] ret_tmp[2234756])
      (2234762 'move' call_tmp[2234754] ret_tmp[2234756])
      (2234765 'move' call_tmp[2234739] call_tmp[2234754])
      (2234769 call =[90634] ret[2234724] call_tmp[2234739])
      ref i_x[2234772]:locale[28] "temp"
      (2234774 'move' i_x[2234772](2234776 'set reference' call_tmp[2234739]))
      (2234779 call deinit[90188] i_x[2234772])
    }
    (2234782 'move' ret[2234704] ret[2234724])
    const-val origLocale[2234785]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2234787 'move' origLocale[2234785] ret[2234704])
    ref call_tmp[2234792]:locale[28] "dead after last mention" "maybe param" "temp"
    (2234794 'move' call_tmp[2234792](2234796 '.' w[1176340] home[1060954]))
    const-val call_tmp[2234799]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2234801]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2234803 'move' coerce_tmp[2234801](2234805 '.v' call_tmp[2234792] _instance[89978]))
    val coerce_tmp[2234808]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2234810 'move' coerce_tmp[2234808](2234812 'cast' object[22] coerce_tmp[2234801]))
    const-val call_tmp[2234815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2234817 'move' call_tmp[2234815](2234819 'ptr_eq' coerce_tmp[2234808] nil[44]))
    if call_tmp[2234815]
    {
      (2234825 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2234828 'move' call_tmp[2234799](2234830 '_wide_get_locale' coerce_tmp[2234801]))
    val error[2234835]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2234837 'move' error[2234835] nil[44])
    val isdirect[2234851]:bool[10] "temp"
    (2234853 'move' isdirect[2234851](2234856 call chpl_doDirectExecuteOn[187469] call_tmp[2234799]))
    if isdirect[2234851]
    {
      (2234861 call on_fn[1180405] w[1176340] args[2234679] ret[2234704] error[2234835])
    }
    {
      val _args_foron_fn[2234867]:_class_localson_fn[2056696] "temp"
      (2234869 'move' _args_foron_fn[2234867](2234871 'stack allocate class' _class_localson_fn[2056696]))
      (2234873 '.=' _args_foron_fn[2234867] _0_tmp[2056699] call_tmp[2234799])
      (2234877 '.=' _args_foron_fn[2234867] _1_rvfDerefTmp[2056701] w[1176340])
      ref tmp[2234881]:(string,codepointIndex,string,int(64))[1176539] "temp"
      (2234883 'move' tmp[2234881](2234885 'set reference' args[2234679]))
      (2234887 '.=' _args_foron_fn[2234867] _2_args[2056703] tmp[2234881])
      (2234891 '.=' _args_foron_fn[2234867] _3_rvfDerefTmp[2056705] ret[2234704])
      ref tmp[2234895]:Error[167984] "temp"
      (2234897 'move' tmp[2234895](2234899 'set reference' error[2234835]))
      (2234901 '.=' _args_foron_fn[2234867] _4_error[2056707] tmp[2234895])
      val _args_vforon_fn[2234905]:c_void_ptr[149] "temp"
      (2234907 'move' _args_vforon_fn[2234905](2234909 'cast_to_void_star' _args_foron_fn[2234867]))
      val _args_sizeon_fn[2234911]:int(64)[13] "temp"
      (2234913 'move' _args_sizeon_fn[2234911](2234915 'sizeof_bundle' _class_localson_fn[2056696]))
      on(2234918 call wrapon_fn[2056760] call_tmp[2234799] _args_vforon_fn[2234905] _args_sizeon_fn[2234911] _args_foron_fn[2234867])
    }
    val errorExists[2234924]:bool[10] "temp"
    (2234926 'move' errorExists[2234924](2234928 '!=' error[2234835] nil[44]))
    if errorExists[2234924]
    {
      (2234933 '=' error[1785630] error[2234835])
      ref i_x[2234936]:locale[28] "temp"
      (2234938 'move' i_x[2234936](2234940 'set reference' origLocale[2234785]))
      (2234943 call deinit[90188] i_x[2234936])
      gotoErrorHandlingReturn _endwrite[2234960] _endwrite[2234960]
    }
    ref i_x[2234951]:locale[28] "temp"
    (2234953 'move' i_x[2234951](2234955 'set reference' origLocale[2234785]))
    (2234958 call deinit[90188] i_x[2234951])
    label _endwrite[2234960]
    val errorExists[2073873]:bool[10] "temp"
    (2073878 'move' errorExists[2073873](2073875 '!=' error[1785630] nil[44]))
    if errorExists[2073873]
    {
      val error[1819278]:Error[167984] "error variable" "temp"
      (1819280 'move' error[1819278] nil[44])
      (1819284 call close[1062381] w[1176340] error[1819278])
      val errorExists[2075585]:bool[10] "temp"
      (2075590 'move' errorExists[2075585](2075587 '!=' error[1819278] nil[44]))
      if errorExists[2075585]
      {
        gotoErrorHandling handler[1819295] handler[1819295]
      }
      label handler[1819295]
      val errorExists[2075593]:bool[10] "temp"
      (2075598 'move' errorExists[2075593](2075595 '!=' error[1819278] nil[44]))
      if errorExists[2075593]
      {
        (1819306 call chpl_uncaught_error[170289] error[1819278])
      }
      ref i_x[2227882]:channel(true,dynamic,false)[1060966] "temp"
      (2227886 'move' i_x[2227882](2227884 'set reference' w[1176340]))
      (2227890 call deinit[1510035] i_x[2227882])
      val error[1819314]:Error[167984] "error variable" "temp"
      (1819316 'move' error[1819314] nil[44])
      (1819320 call close[236043] f[1176312] error[1819314])
      val errorExists[2075601]:bool[10] "temp"
      (2075606 'move' errorExists[2075601](2075603 '!=' error[1819314] nil[44]))
      if errorExists[2075601]
      {
        gotoErrorHandling handler[1819331] handler[1819331]
      }
      label handler[1819331]
      val errorExists[2075609]:bool[10] "temp"
      (2075614 'move' errorExists[2075609](2075611 '!=' error[1819314] nil[44]))
      if errorExists[2075609]
      {
        (1819342 call chpl_uncaught_error[170289] error[1819314])
      }
      ref i_x[2282896]:file[235599] "temp"
      (2282900 'move' i_x[2282896](2282898 'set reference' f[1176312]))
      (2282904 call deinit[235910] i_x[2282896])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val call_tmp[1176366]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1176368 'move' call_tmp[1176366](1176374 call offset[1080167] w[1176340]))
    const-val call_tmp[2084366]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084368 'move' call_tmp[2084366](2084370 '+' call_tmp[1176366] 1))
    const-val call_tmp[2228835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228837 'move' call_tmp[2228835](2228839 '<' call_tmp[2084366] 0))
    if call_tmp[2228835]
    {
      (2228845 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2228848]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228850 'move' call_tmp[2228848](2228852 'cast' uint(64)[115] call_tmp[2084366]))
    const-val call_tmp[2228855]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228857 'move' call_tmp[2228855](2228860 call sizeof[1080473] uint(8)[100]))
    const-val call_tmp[2228862]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228864 'move' call_tmp[2228862](2228866 '*' call_tmp[2228848] call_tmp[2228855]))
    const-val call_tmp[2228869]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228871 'move' call_tmp[2228869](2228874 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2228875]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228877 'move' call_tmp[2228875](2228880 call chpl_here_alloc[1080509] call_tmp[2228862] call_tmp[2228869]))
    val call_tmp[2228883]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228885 'move' call_tmp[2228883](2228887 'cast' c_ptr(uint(8))[937442] call_tmp[2228875]))
    val buf[1176404]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    (1176406 'move' buf[1176404] call_tmp[2228883])
    const-val call_tmp[1176410]:channel(false,dynamic,false)[1080701] "dead at end of block" "maybe param" "temp"
    val errorExists[2073881]:bool[10] "temp"
    (2073886 'move' errorExists[2073881](2073883 '!=' error[1785630] nil[44]))
    if errorExists[2073881]
    {
      val error[1819350]:Error[167984] "error variable" "temp"
      (1819352 'move' error[1819350] nil[44])
      (1819356 call close[1062381] w[1176340] error[1819350])
      val errorExists[2075617]:bool[10] "temp"
      (2075622 'move' errorExists[2075617](2075619 '!=' error[1819350] nil[44]))
      if errorExists[2075617]
      {
        gotoErrorHandling handler[1819367] handler[1819367]
      }
      label handler[1819367]
      val errorExists[2075625]:bool[10] "temp"
      (2075630 'move' errorExists[2075625](2075627 '!=' error[1819350] nil[44]))
      if errorExists[2075625]
      {
        (1819378 call chpl_uncaught_error[170289] error[1819350])
      }
      ref i_x[2227894]:channel(true,dynamic,false)[1060966] "temp"
      (2227898 'move' i_x[2227894](2227896 'set reference' w[1176340]))
      (2227902 call deinit[1510035] i_x[2227894])
      val error[1819386]:Error[167984] "error variable" "temp"
      (1819388 'move' error[1819386] nil[44])
      (1819392 call close[236043] f[1176312] error[1819386])
      val errorExists[2075633]:bool[10] "temp"
      (2075638 'move' errorExists[2075633](2075635 '!=' error[1819386] nil[44]))
      if errorExists[2075633]
      {
        gotoErrorHandling handler[1819403] handler[1819403]
      }
      label handler[1819403]
      val errorExists[2075641]:bool[10] "temp"
      (2075646 'move' errorExists[2075641](2075643 '!=' error[1819386] nil[44]))
      if errorExists[2075641]
      {
        (1819414 call chpl_uncaught_error[170289] error[1819386])
      }
      ref i_x[2282908]:file[235599] "temp"
      (2282912 'move' i_x[2282908](2282910 'set reference' f[1176312]))
      (2282916 call deinit[235910] i_x[2282908])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    val errorExists[2073889]:bool[10] "temp"
    (2073894 'move' errorExists[2073889](2073891 '!=' error[1785630] nil[44]))
    if errorExists[2073889]
    {
      val error[1819422]:Error[167984] "error variable" "temp"
      (1819424 'move' error[1819422] nil[44])
      (1819428 call close[1062381] w[1176340] error[1819422])
      val errorExists[2075649]:bool[10] "temp"
      (2075654 'move' errorExists[2075649](2075651 '!=' error[1819422] nil[44]))
      if errorExists[2075649]
      {
        gotoErrorHandling handler[1819439] handler[1819439]
      }
      label handler[1819439]
      val errorExists[2075657]:bool[10] "temp"
      (2075662 'move' errorExists[2075657](2075659 '!=' error[1819422] nil[44]))
      if errorExists[2075657]
      {
        (1819450 call chpl_uncaught_error[170289] error[1819422])
      }
      ref i_x[2227906]:channel(true,dynamic,false)[1060966] "temp"
      (2227910 'move' i_x[2227906](2227908 'set reference' w[1176340]))
      (2227914 call deinit[1510035] i_x[2227906])
      val error[1819458]:Error[167984] "error variable" "temp"
      (1819460 'move' error[1819458] nil[44])
      (1819464 call close[236043] f[1176312] error[1819458])
      val errorExists[2075665]:bool[10] "temp"
      (2075670 'move' errorExists[2075665](2075667 '!=' error[1819458] nil[44]))
      if errorExists[2075665]
      {
        gotoErrorHandling handler[1819475] handler[1819475]
      }
      label handler[1819475]
      val errorExists[2075673]:bool[10] "temp"
      (2075678 'move' errorExists[2075673](2075675 '!=' error[1819458] nil[44]))
      if errorExists[2075673]
      {
        (1819486 call chpl_uncaught_error[170289] error[1819458])
      }
      ref i_x[2282920]:file[235599] "temp"
      (2282924 'move' i_x[2282920](2282922 'set reference' f[1176312]))
      (2282928 call deinit[235910] i_x[2282920])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val tmp[2229098]:int(32)[95] "dead after last mention" "temp"
    (2229100 'move' tmp[2229098] IOHINT_NONE[231430])
    val errorExists[2073897]:bool[10] "temp"
    (2073902 'move' errorExists[2073897](2073899 '!=' error[1785630] nil[44]))
    if errorExists[2073897]
    {
      val error[1819494]:Error[167984] "error variable" "temp"
      (1819496 'move' error[1819494] nil[44])
      (1819500 call close[1062381] w[1176340] error[1819494])
      val errorExists[2075681]:bool[10] "temp"
      (2075686 'move' errorExists[2075681](2075683 '!=' error[1819494] nil[44]))
      if errorExists[2075681]
      {
        gotoErrorHandling handler[1819511] handler[1819511]
      }
      label handler[1819511]
      val errorExists[2075689]:bool[10] "temp"
      (2075694 'move' errorExists[2075689](2075691 '!=' error[1819494] nil[44]))
      if errorExists[2075689]
      {
        (1819522 call chpl_uncaught_error[170289] error[1819494])
      }
      ref i_x[2227918]:channel(true,dynamic,false)[1060966] "temp"
      (2227922 'move' i_x[2227918](2227920 'set reference' w[1176340]))
      (2227926 call deinit[1510035] i_x[2227918])
      val error[1819530]:Error[167984] "error variable" "temp"
      (1819532 'move' error[1819530] nil[44])
      (1819536 call close[236043] f[1176312] error[1819530])
      val errorExists[2075697]:bool[10] "temp"
      (2075702 'move' errorExists[2075697](2075699 '!=' error[1819530] nil[44]))
      if errorExists[2075697]
      {
        gotoErrorHandling handler[1819547] handler[1819547]
      }
      label handler[1819547]
      val errorExists[2075705]:bool[10] "temp"
      (2075710 'move' errorExists[2075705](2075707 '!=' error[1819530] nil[44]))
      if errorExists[2075705]
      {
        (1819558 call chpl_uncaught_error[170289] error[1819530])
      }
      ref i_x[2282932]:file[235599] "temp"
      (2282936 'move' i_x[2282932](2282934 'set reference' f[1176312]))
      (2282940 call deinit[235910] i_x[2282932])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val default_arg_style[1180786]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2229210]:file[235599] "temp"
    (2229214 'move' i_this[2229210](2229212 'set reference' f[1176312]))
    val ret[2229223]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2229225]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2229227]:Error[167984] "error variable" "temp"
    (2229229 'move' error[2229227] nil[44])
    (2229232 'move' style[2229225](2229235 call _style[235979] i_this[2229210] error[2229227]))
    val errorExists[2229238]:bool[10] "temp"
    (2229240 'move' errorExists[2229238](2229242 '!=' error[2229227] nil[44]))
    if errorExists[2229238]
    {
      (2229247 '=' error[1785630] error[2229227])
      gotoErrorHandlingReturn _endreader_default_style[2229256] _endreader_default_style[2229256]
    }
    (2229253 'move' ret[2229223] style[2229225])
    label _endreader_default_style[2229256]
    (1180792 'move' default_arg_style[1180786] ret[2229223])
    val errorExists[2073905]:bool[10] "temp"
    (2073910 'move' errorExists[2073905](2073907 '!=' error[1785630] nil[44]))
    if errorExists[2073905]
    {
      val error[1819566]:Error[167984] "error variable" "temp"
      (1819568 'move' error[1819566] nil[44])
      (1819572 call close[1062381] w[1176340] error[1819566])
      val errorExists[2075713]:bool[10] "temp"
      (2075718 'move' errorExists[2075713](2075715 '!=' error[1819566] nil[44]))
      if errorExists[2075713]
      {
        gotoErrorHandling handler[1819583] handler[1819583]
      }
      label handler[1819583]
      val errorExists[2075721]:bool[10] "temp"
      (2075726 'move' errorExists[2075721](2075723 '!=' error[1819566] nil[44]))
      if errorExists[2075721]
      {
        (1819594 call chpl_uncaught_error[170289] error[1819566])
      }
      ref i_x[2227930]:channel(true,dynamic,false)[1060966] "temp"
      (2227934 'move' i_x[2227930](2227932 'set reference' w[1176340]))
      (2227938 call deinit[1510035] i_x[2227930])
      val error[1819602]:Error[167984] "error variable" "temp"
      (1819604 'move' error[1819602] nil[44])
      (1819608 call close[236043] f[1176312] error[1819602])
      val errorExists[2075729]:bool[10] "temp"
      (2075734 'move' errorExists[2075729](2075731 '!=' error[1819602] nil[44]))
      if errorExists[2075729]
      {
        gotoErrorHandling handler[1819619] handler[1819619]
      }
      label handler[1819619]
      val errorExists[2075737]:bool[10] "temp"
      (2075742 'move' errorExists[2075737](2075739 '!=' error[1819602] nil[44]))
      if errorExists[2075737]
      {
        (1819630 call chpl_uncaught_error[170289] error[1819602])
      }
      ref i_x[2282944]:file[235599] "temp"
      (2282948 'move' i_x[2282944](2282946 'set reference' f[1176312]))
      (2282952 call deinit[235910] i_x[2282944])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val ret_tmp[1806760]:channel(false,dynamic,false)[1080701] "temp"
    (1176418 call reader[1080607] f[1176312] 0 9223372036854775807 tmp[2229098] default_arg_style[1180786] error[1785630] ret_tmp[1806760])
    (1806763 'move' call_tmp[1176410] ret_tmp[1806760])
    val errorExists[2073913]:bool[10] "temp"
    (2073918 'move' errorExists[2073913](2073915 '!=' error[1785630] nil[44]))
    if errorExists[2073913]
    {
      val error[1819638]:Error[167984] "error variable" "temp"
      (1819640 'move' error[1819638] nil[44])
      (1819644 call close[1062381] w[1176340] error[1819638])
      val errorExists[2075745]:bool[10] "temp"
      (2075750 'move' errorExists[2075745](2075747 '!=' error[1819638] nil[44]))
      if errorExists[2075745]
      {
        gotoErrorHandling handler[1819655] handler[1819655]
      }
      label handler[1819655]
      val errorExists[2075753]:bool[10] "temp"
      (2075758 'move' errorExists[2075753](2075755 '!=' error[1819638] nil[44]))
      if errorExists[2075753]
      {
        (1819666 call chpl_uncaught_error[170289] error[1819638])
      }
      ref i_x[2227942]:channel(true,dynamic,false)[1060966] "temp"
      (2227946 'move' i_x[2227942](2227944 'set reference' w[1176340]))
      (2227950 call deinit[1510035] i_x[2227942])
      val error[1819674]:Error[167984] "error variable" "temp"
      (1819676 'move' error[1819674] nil[44])
      (1819680 call close[236043] f[1176312] error[1819674])
      val errorExists[2075761]:bool[10] "temp"
      (2075766 'move' errorExists[2075761](2075763 '!=' error[1819674] nil[44]))
      if errorExists[2075761]
      {
        gotoErrorHandling handler[1819691] handler[1819691]
      }
      label handler[1819691]
      val errorExists[2075769]:bool[10] "temp"
      (2075774 'move' errorExists[2075769](2075771 '!=' error[1819674] nil[44]))
      if errorExists[2075769]
      {
        (1819702 call chpl_uncaught_error[170289] error[1819674])
      }
      ref i_x[2282956]:file[235599] "temp"
      (2282960 'move' i_x[2282956](2282958 'set reference' f[1176312]))
      (2282964 call deinit[235910] i_x[2282956])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val r[1176421]:channel(false,dynamic,false)[1080701] "dead at end of block" "insert auto destroy"
    (1176423 'move' r[1176421] call_tmp[1176410])
    (1176450 call readBytes[1082858] r[1176421] call_tmp[2228883] call_tmp[1176366] error[1785630])
    val errorExists[2073921]:bool[10] "temp"
    (2073926 'move' errorExists[2073921](2073923 '!=' error[1785630] nil[44]))
    if errorExists[2073921]
    {
      val error[1819710]:Error[167984] "error variable" "temp"
      (1819712 'move' error[1819710] nil[44])
      (1819716 call close[1082113] r[1176421] error[1819710])
      val errorExists[2075777]:bool[10] "temp"
      (2075782 'move' errorExists[2075777](2075779 '!=' error[1819710] nil[44]))
      if errorExists[2075777]
      {
        gotoErrorHandling handler[1819727] handler[1819727]
      }
      label handler[1819727]
      val errorExists[2075785]:bool[10] "temp"
      (2075790 'move' errorExists[2075785](2075787 '!=' error[1819710] nil[44]))
      if errorExists[2075785]
      {
        (1819738 call chpl_uncaught_error[170289] error[1819710])
      }
      ref i_x[2286039]:channel(false,dynamic,false)[1080701] "temp"
      (2286043 'move' i_x[2286039](2286041 'set reference' r[1176421]))
      (2286047 call deinit[1514289] i_x[2286039])
      val error[1819746]:Error[167984] "error variable" "temp"
      (1819748 'move' error[1819746] nil[44])
      (1819752 call close[1062381] w[1176340] error[1819746])
      val errorExists[2075793]:bool[10] "temp"
      (2075798 'move' errorExists[2075793](2075795 '!=' error[1819746] nil[44]))
      if errorExists[2075793]
      {
        gotoErrorHandling handler[1819763] handler[1819763]
      }
      label handler[1819763]
      val errorExists[2075801]:bool[10] "temp"
      (2075806 'move' errorExists[2075801](2075803 '!=' error[1819746] nil[44]))
      if errorExists[2075801]
      {
        (1819774 call chpl_uncaught_error[170289] error[1819746])
      }
      ref i_x[2227954]:channel(true,dynamic,false)[1060966] "temp"
      (2227958 'move' i_x[2227954](2227956 'set reference' w[1176340]))
      (2227962 call deinit[1510035] i_x[2227954])
      val error[1819782]:Error[167984] "error variable" "temp"
      (1819784 'move' error[1819782] nil[44])
      (1819788 call close[236043] f[1176312] error[1819782])
      val errorExists[2075809]:bool[10] "temp"
      (2075814 'move' errorExists[2075809](2075811 '!=' error[1819782] nil[44]))
      if errorExists[2075809]
      {
        gotoErrorHandling handler[1819799] handler[1819799]
      }
      label handler[1819799]
      val errorExists[2075817]:bool[10] "temp"
      (2075822 'move' errorExists[2075817](2075819 '!=' error[1819782] nil[44]))
      if errorExists[2075817]
      {
        (1819810 call chpl_uncaught_error[170289] error[1819782])
      }
      ref i_x[2282968]:file[235599] "temp"
      (2282972 'move' i_x[2282968](2282970 'set reference' f[1176312]))
      (2282976 call deinit[235910] i_x[2282968])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    ref call_tmp[2157526]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2157528 'move' call_tmp[2157526](2157530 'array_get' buf[1176404] call_tmp[1176366]))
    const-val coerce_tmp[1180802]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180808 'move' coerce_tmp[1180802](1180804 'cast' uint(8)[100] 0))
    (2157998 '=' call_tmp[2157526] coerce_tmp[1180802])
    const-val ret[2103961]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2103963]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2103965]:Error[167984] "error variable" "temp"
    (2103967 'move' error[2103965] nil[44])
    const-val ret_tmp[2103970]:string[26] "temp"
    (2103973 call decodeByteBuffer[173938] call_tmp[2228883] call_tmp[1176366] replace[173694] error[2103965] ret_tmp[2103970])
    (2103979 'move' call_tmp[2103963] ret_tmp[2103970])
    val errorExists[2103982]:bool[10] "temp"
    (2103984 'move' errorExists[2103982](2103986 '!=' error[2103965] nil[44]))
    if errorExists[2103982]
    {
      (2103991 '=' error[1785630] error[2103965])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104000] _endcreateStringWithNewBuffer[2104000]
    }
    (2103997 'move' ret[2103961] call_tmp[2103963])
    label _endcreateStringWithNewBuffer[2104000]
    val errorExists[2073929]:bool[10] "temp"
    (2073934 'move' errorExists[2073929](2073931 '!=' error[1785630] nil[44]))
    if errorExists[2073929]
    {
      val error[1819818]:Error[167984] "error variable" "temp"
      (1819820 'move' error[1819818] nil[44])
      (1819824 call close[1082113] r[1176421] error[1819818])
      val errorExists[2075825]:bool[10] "temp"
      (2075830 'move' errorExists[2075825](2075827 '!=' error[1819818] nil[44]))
      if errorExists[2075825]
      {
        gotoErrorHandling handler[1819835] handler[1819835]
      }
      label handler[1819835]
      val errorExists[2075833]:bool[10] "temp"
      (2075838 'move' errorExists[2075833](2075835 '!=' error[1819818] nil[44]))
      if errorExists[2075833]
      {
        (1819846 call chpl_uncaught_error[170289] error[1819818])
      }
      ref i_x[2286051]:channel(false,dynamic,false)[1080701] "temp"
      (2286055 'move' i_x[2286051](2286053 'set reference' r[1176421]))
      (2286059 call deinit[1514289] i_x[2286051])
      val error[1819854]:Error[167984] "error variable" "temp"
      (1819856 'move' error[1819854] nil[44])
      (1819860 call close[1062381] w[1176340] error[1819854])
      val errorExists[2075841]:bool[10] "temp"
      (2075846 'move' errorExists[2075841](2075843 '!=' error[1819854] nil[44]))
      if errorExists[2075841]
      {
        gotoErrorHandling handler[1819871] handler[1819871]
      }
      label handler[1819871]
      val errorExists[2075849]:bool[10] "temp"
      (2075854 'move' errorExists[2075849](2075851 '!=' error[1819854] nil[44]))
      if errorExists[2075849]
      {
        (1819882 call chpl_uncaught_error[170289] error[1819854])
      }
      ref i_x[2227966]:channel(true,dynamic,false)[1060966] "temp"
      (2227970 'move' i_x[2227966](2227968 'set reference' w[1176340]))
      (2227974 call deinit[1510035] i_x[2227966])
      val error[1819890]:Error[167984] "error variable" "temp"
      (1819892 'move' error[1819890] nil[44])
      (1819896 call close[236043] f[1176312] error[1819890])
      val errorExists[2075857]:bool[10] "temp"
      (2075862 'move' errorExists[2075857](2075859 '!=' error[1819890] nil[44]))
      if errorExists[2075857]
      {
        gotoErrorHandling handler[1819907] handler[1819907]
      }
      label handler[1819907]
      val errorExists[2075865]:bool[10] "temp"
      (2075870 'move' errorExists[2075865](2075867 '!=' error[1819890] nil[44]))
      if errorExists[2075865]
      {
        (1819918 call chpl_uncaught_error[170289] error[1819890])
      }
      ref i_x[2282980]:file[235599] "temp"
      (2282984 'move' i_x[2282980](2282982 'set reference' f[1176312]))
      (2282988 call deinit[235910] i_x[2282980])
      gotoErrorHandling handler[1785631] handler[1785631]
    }
    const-val coerce_tmp[1180813]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180819 'move' coerce_tmp[1180813](1180815 'cast' c_void_ptr[149] call_tmp[2228883]))
    (2165592 call chpl_here_free[188127] coerce_tmp[1180813])
    (1180823 'move' ret[1175852] ret[2103961])
    val error[1819926]:Error[167984] "error variable" "temp"
    (1819928 'move' error[1819926] nil[44])
    (1819932 call close[1082113] r[1176421] error[1819926])
    val errorExists[2075873]:bool[10] "temp"
    (2075878 'move' errorExists[2075873](2075875 '!=' error[1819926] nil[44]))
    if errorExists[2075873]
    {
      gotoErrorHandling handler[1819943] handler[1819943]
    }
    label handler[1819943]
    val errorExists[2075881]:bool[10] "temp"
    (2075886 'move' errorExists[2075881](2075883 '!=' error[1819926] nil[44]))
    if errorExists[2075881]
    {
      (1819954 call chpl_uncaught_error[170289] error[1819926])
    }
    ref i_x[2286063]:channel(false,dynamic,false)[1080701] "temp"
    (2286067 'move' i_x[2286063](2286065 'set reference' r[1176421]))
    (2286071 call deinit[1514289] i_x[2286063])
    val error[1819962]:Error[167984] "error variable" "temp"
    (1819964 'move' error[1819962] nil[44])
    (1819968 call close[1062381] w[1176340] error[1819962])
    val errorExists[2075889]:bool[10] "temp"
    (2075894 'move' errorExists[2075889](2075891 '!=' error[1819962] nil[44]))
    if errorExists[2075889]
    {
      gotoErrorHandling handler[1819979] handler[1819979]
    }
    label handler[1819979]
    val errorExists[2075897]:bool[10] "temp"
    (2075902 'move' errorExists[2075897](2075899 '!=' error[1819962] nil[44]))
    if errorExists[2075897]
    {
      (1819990 call chpl_uncaught_error[170289] error[1819962])
    }
    ref i_x[2227978]:channel(true,dynamic,false)[1060966] "temp"
    (2227982 'move' i_x[2227978](2227980 'set reference' w[1176340]))
    (2227986 call deinit[1510035] i_x[2227978])
    val error[1819998]:Error[167984] "error variable" "temp"
    (1820000 'move' error[1819998] nil[44])
    (1820004 call close[236043] f[1176312] error[1819998])
    val errorExists[2075905]:bool[10] "temp"
    (2075910 'move' errorExists[2075905](2075907 '!=' error[1819998] nil[44]))
    if errorExists[2075905]
    {
      gotoErrorHandling handler[1820015] handler[1820015]
    }
    label handler[1820015]
    val errorExists[2075913]:bool[10] "temp"
    (2075918 'move' errorExists[2075913](2075915 '!=' error[1819998] nil[44]))
    if errorExists[2075913]
    {
      (1820026 call chpl_uncaught_error[170289] error[1819998])
    }
    ref i_x[2282992]:file[235599] "temp"
    (2282996 'move' i_x[2282992](2282994 'set reference' f[1176312]))
    (2283000 call deinit[235910] i_x[2282992])
    gotoReturn _end_stringify[1176518] _end_stringify[1176518]
    label handler[1785631]
    val errorExists[2073937]:bool[10] "temp"
    (2073942 'move' errorExists[2073937](2073939 '!=' error[1785630] nil[44]))
    if errorExists[2073937]
    {
      (1785821 call chpl_uncaught_error[170289] error[1785630])
    }
    label _end_stringify[1176518]
    (1807989 '=' _retArg[1807987] ret[1175852])
    (1807991 return _void[55])
  }
  function stringify[1190739](const  ref arg _e0_args[1190741]:string[26], const in arg _e1_args[1190743]:range(byteIndex,boundedHigh,false)[1184938], const  ref arg _e2_args[1190745]:string[26], const in arg _e3_args[1190747]:int(64)[13], ref arg _retArg[1808193]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1190751]:string[26] "dead after last mention" "RVV" "temp"
    val str[1190792]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166565]:string[26] "temp"
    (2166568 'move' inlineImm[2166565] "")
    ref i_x[2166570]:string[26] "temp"
    (2166574 'move' i_x[2166570](2166572 'set reference' inlineImm[2166565]))
    val ret[2166577]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166579]:string[26] "dead after last mention" "temp"
    (2166582 call init=[30774] tmp[2166579] i_x[2166570])
    (2166585 'move' ret[2166577] tmp[2166579])
    (1190794 'move' str[1190792] ret[2166577])
    (1197180 call +=[38800] str[1190792] _e0_args[1190741])
    const-val call_tmp[1197755]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1808233]:string[26] "temp"
    (1197760 call _cast[1198650] _e1_args[1190743] ret_tmp[1808233])
    (1808236 'move' call_tmp[1197755] ret_tmp[1808233])
    (1197764 call +=[38800] str[1190792] call_tmp[1197755])
    ref i_x[2095251]:string[26] "temp"
    (2095255 'move' i_x[2095251](2095253 'set reference' call_tmp[1197755]))
    (2095259 call deinit[30834] i_x[2095251])
    (1197870 call +=[38800] str[1190792] _e2_args[1190745])
    const-val call_tmp[1198445]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806484]:string[26] "temp"
    (1198450 call _cast[1063172] _e3_args[1190747] ret_tmp[1806484])
    (1806487 'move' call_tmp[1198445] ret_tmp[1806484])
    (1198454 call +=[38800] str[1190792] call_tmp[1198445])
    ref i_x[2095263]:string[26] "temp"
    (2095267 'move' i_x[2095263](2095265 'set reference' call_tmp[1198445]))
    (2095271 call deinit[30834] i_x[2095263])
    (1200352 'move' ret[1190751] str[1190792])
    gotoReturn _end_stringify[1191417] _end_stringify[1191417]
    label _end_stringify[1191417]
    (1808195 '=' _retArg[1808193] ret[1190751])
    (1808201 return _void[55])
  }
  function stringify[1291157](const  ref arg _e0_args[1291159]:string[26], const  ref arg _e1_args[1291161]:string[26], const  ref arg _e2_args[1291163]:string[26], const  ref arg _e3_args[1291165]:string[26], ref arg _retArg[1810313]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1291169]:string[26] "dead after last mention" "RVV" "temp"
    val str[1291210]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166665]:string[26] "temp"
    (2166668 'move' inlineImm[2166665] "")
    ref i_x[2166670]:string[26] "temp"
    (2166674 'move' i_x[2166670](2166672 'set reference' inlineImm[2166665]))
    val ret[2166677]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166679]:string[26] "dead after last mention" "temp"
    (2166682 call init=[30774] tmp[2166679] i_x[2166670])
    (2166685 'move' ret[2166677] tmp[2166679])
    (1291212 'move' str[1291210] ret[2166677])
    (1295026 call +=[38800] str[1291210] _e0_args[1291159])
    (1295371 call +=[38800] str[1291210] _e1_args[1291161])
    (1295716 call +=[38800] str[1291210] _e2_args[1291163])
    (1296061 call +=[38800] str[1291210] _e3_args[1291165])
    (1296500 'move' ret[1291169] str[1291210])
    gotoReturn _end_stringify[1291835] _end_stringify[1291835]
    label _end_stringify[1291835]
    (1810315 '=' _retArg[1810313] ret[1291169])
    (1810319 return _void[55])
  }
  function stringify[1157883](const  ref arg _e0_args[1157885]:string[26], const  ref arg _e1_args[1157887]:codepointIndex[28277], const  ref arg _e2_args[1157889]:string[26], ref arg _retArg[1807929]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1157893]:string[26] "dead after last mention" "RVV" "temp"
    val error[1785133]:Error[167984] "error variable" "temp"
    (1785318 'move' error[1785133] nil[44])
    const-val call_tmp[1158344]:file[235599] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1164198]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2223759]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2223761 'move' style[2223759](2223764 call defaultIOStyle[235314]))
    (1164202 'move' default_arg_style[1164198] style[2223759])
    val errorExists[2073537]:bool[10] "temp"
    (2073542 'move' errorExists[2073537](2073539 '!=' error[1785133] nil[44]))
    if errorExists[2073537]
    {
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val ret_tmp[1804864]:file[235599] "temp"
    (1158349 call openmem[237644] default_arg_style[1164198] error[1785133] ret_tmp[1804864])
    (1804867 'move' call_tmp[1158344] ret_tmp[1804864])
    val errorExists[2073545]:bool[10] "temp"
    (2073550 'move' errorExists[2073545](2073547 '!=' error[1785133] nil[44]))
    if errorExists[2073545]
    {
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val f[1158350]:file[235599] "dead at end of block" "insert auto destroy"
    (1158352 'move' f[1158350] call_tmp[1158344])
    const-val call_tmp[1158367]:channel(true,dynamic,false)[1060966] "dead at end of block" "maybe param" "temp"
    val errorExists[2073553]:bool[10] "temp"
    (2073558 'move' errorExists[2073553](2073555 '!=' error[1785133] nil[44]))
    if errorExists[2073553]
    {
      val error[1818035]:Error[167984] "error variable" "temp"
      (1818037 'move' error[1818035] nil[44])
      (1818041 call close[236043] f[1158350] error[1818035])
      val errorExists[2075089]:bool[10] "temp"
      (2075094 'move' errorExists[2075089](2075091 '!=' error[1818035] nil[44]))
      if errorExists[2075089]
      {
        gotoErrorHandling handler[1818052] handler[1818052]
      }
      label handler[1818052]
      val errorExists[2075097]:bool[10] "temp"
      (2075102 'move' errorExists[2075097](2075099 '!=' error[1818035] nil[44]))
      if errorExists[2075097]
      {
        (1818063 call chpl_uncaught_error[170289] error[1818035])
      }
      ref i_x[2282668]:file[235599] "temp"
      (2282672 'move' i_x[2282668](2282670 'set reference' f[1158350]))
      (2282676 call deinit[235910] i_x[2282668])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    val errorExists[2073561]:bool[10] "temp"
    (2073566 'move' errorExists[2073561](2073563 '!=' error[1785133] nil[44]))
    if errorExists[2073561]
    {
      val error[1818071]:Error[167984] "error variable" "temp"
      (1818073 'move' error[1818071] nil[44])
      (1818077 call close[236043] f[1158350] error[1818071])
      val errorExists[2075105]:bool[10] "temp"
      (2075110 'move' errorExists[2075105](2075107 '!=' error[1818071] nil[44]))
      if errorExists[2075105]
      {
        gotoErrorHandling handler[1818088] handler[1818088]
      }
      label handler[1818088]
      val errorExists[2075113]:bool[10] "temp"
      (2075118 'move' errorExists[2075113](2075115 '!=' error[1818071] nil[44]))
      if errorExists[2075113]
      {
        (1818099 call chpl_uncaught_error[170289] error[1818071])
      }
      ref i_x[2282680]:file[235599] "temp"
      (2282684 'move' i_x[2282680](2282682 'set reference' f[1158350]))
      (2282688 call deinit[235910] i_x[2282680])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val tmp[2223970]:int(32)[95] "dead after last mention" "temp"
    (2223972 'move' tmp[2223970](2223974 'cast' int(32)[95] 0))
    val errorExists[2073569]:bool[10] "temp"
    (2073574 'move' errorExists[2073569](2073571 '!=' error[1785133] nil[44]))
    if errorExists[2073569]
    {
      val error[1818107]:Error[167984] "error variable" "temp"
      (1818109 'move' error[1818107] nil[44])
      (1818113 call close[236043] f[1158350] error[1818107])
      val errorExists[2075121]:bool[10] "temp"
      (2075126 'move' errorExists[2075121](2075123 '!=' error[1818107] nil[44]))
      if errorExists[2075121]
      {
        gotoErrorHandling handler[1818124] handler[1818124]
      }
      label handler[1818124]
      val errorExists[2075129]:bool[10] "temp"
      (2075134 'move' errorExists[2075129](2075131 '!=' error[1818107] nil[44]))
      if errorExists[2075129]
      {
        (1818135 call chpl_uncaught_error[170289] error[1818107])
      }
      ref i_x[2282692]:file[235599] "temp"
      (2282696 'move' i_x[2282692](2282694 'set reference' f[1158350]))
      (2282700 call deinit[235910] i_x[2282692])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val default_arg_style[1164257]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2224063]:file[235599] "temp"
    (2224067 'move' i_this[2224063](2224065 'set reference' f[1158350]))
    val ret[2224076]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2224078]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2224080]:Error[167984] "error variable" "temp"
    (2224082 'move' error[2224080] nil[44])
    (2224085 'move' style[2224078](2224088 call _style[235979] i_this[2224063] error[2224080]))
    val errorExists[2224091]:bool[10] "temp"
    (2224093 'move' errorExists[2224091](2224095 '!=' error[2224080] nil[44]))
    if errorExists[2224091]
    {
      (2224100 '=' error[1785133] error[2224080])
      gotoErrorHandlingReturn _endwriter_default_style[2224109] _endwriter_default_style[2224109]
    }
    (2224106 'move' ret[2224076] style[2224078])
    label _endwriter_default_style[2224109]
    (1164263 'move' default_arg_style[1164257] ret[2224076])
    val errorExists[2073577]:bool[10] "temp"
    (2073582 'move' errorExists[2073577](2073579 '!=' error[1785133] nil[44]))
    if errorExists[2073577]
    {
      val error[1818143]:Error[167984] "error variable" "temp"
      (1818145 'move' error[1818143] nil[44])
      (1818149 call close[236043] f[1158350] error[1818143])
      val errorExists[2075137]:bool[10] "temp"
      (2075142 'move' errorExists[2075137](2075139 '!=' error[1818143] nil[44]))
      if errorExists[2075137]
      {
        gotoErrorHandling handler[1818160] handler[1818160]
      }
      label handler[1818160]
      val errorExists[2075145]:bool[10] "temp"
      (2075150 'move' errorExists[2075145](2075147 '!=' error[1818143] nil[44]))
      if errorExists[2075145]
      {
        (1818171 call chpl_uncaught_error[170289] error[1818143])
      }
      ref i_x[2282704]:file[235599] "temp"
      (2282708 'move' i_x[2282704](2282706 'set reference' f[1158350]))
      (2282712 call deinit[235910] i_x[2282704])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val ret_tmp[1806364]:channel(true,dynamic,false)[1060966] "temp"
    (1158375 call writer[1060872] f[1158350] 0 9223372036854775807 tmp[2223970] default_arg_style[1164257] error[1785133] ret_tmp[1806364])
    (1806367 'move' call_tmp[1158367] ret_tmp[1806364])
    val errorExists[2073585]:bool[10] "temp"
    (2073590 'move' errorExists[2073585](2073587 '!=' error[1785133] nil[44]))
    if errorExists[2073585]
    {
      val error[1818179]:Error[167984] "error variable" "temp"
      (1818181 'move' error[1818179] nil[44])
      (1818185 call close[236043] f[1158350] error[1818179])
      val errorExists[2075153]:bool[10] "temp"
      (2075158 'move' errorExists[2075153](2075155 '!=' error[1818179] nil[44]))
      if errorExists[2075153]
      {
        gotoErrorHandling handler[1818196] handler[1818196]
      }
      label handler[1818196]
      val errorExists[2075161]:bool[10] "temp"
      (2075166 'move' errorExists[2075161](2075163 '!=' error[1818179] nil[44]))
      if errorExists[2075161]
      {
        (1818207 call chpl_uncaught_error[170289] error[1818179])
      }
      ref i_x[2282716]:file[235599] "temp"
      (2282720 'move' i_x[2282716](2282718 'set reference' f[1158350]))
      (2282724 call deinit[235910] i_x[2282716])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val w[1158378]:channel(true,dynamic,false)[1060966] "dead at end of block" "insert auto destroy"
    (1158380 'move' w[1158378] call_tmp[1158367])
    const-val args[2232143]:(string,codepointIndex,string)[1158574] "insert auto destroy"
    (2300461 '.=' args[2232143] x0[1158568] _e0_args[1157885])
    (2300465 '.=' args[2232143] x1[1158570] _e1_args[1157887])
    (2300469 '.=' args[2232143] x2[1158572] _e2_args[1157889])
    const-val ret[2232164]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2232166]:locale[28] "dead after last mention" "maybe param" "temp"
    (2232168 'move' call_tmp[2232166](2232170 '.' w[1158378] _readWriteThisFromLocale[1060963]))
    val ret[2232173]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2232175]:locale[28] "dead after last mention" "temp"
    (2232178 call init=[90170] tmp[2232175] call_tmp[2232166])
    (2232181 'move' ret[2232173] tmp[2232175])
    val ret[2232184]:locale[28] "dead at end of block" "insert auto destroy"
    (2232186 'move' ret[2232184] ret[2232173])
    const-val call_tmp[2232189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2232191 'move' call_tmp[2232189](2232194 call ==[782800] ret[2232184] nilLocale[89942]))
    if call_tmp[2232189]
    {
      const-val call_tmp[2232199]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2232201]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2232203]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2232205 'move' call_tmp[2232203](2232208 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2232211 'move' call_tmp[2232201] call_tmp[2232203])
      const-val call_tmp[2232214]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2232216]:locale[28] "temp"
      (2232219 call chpl_localeID_to_locale[92852] call_tmp[2232201] ret_tmp[2232216])
      (2232222 'move' call_tmp[2232214] ret_tmp[2232216])
      (2232225 'move' call_tmp[2232199] call_tmp[2232214])
      (2232229 call =[90634] ret[2232184] call_tmp[2232199])
      ref i_x[2232232]:locale[28] "temp"
      (2232234 'move' i_x[2232232](2232236 'set reference' call_tmp[2232199]))
      (2232239 call deinit[90188] i_x[2232232])
    }
    (2232242 'move' ret[2232164] ret[2232184])
    const-val origLocale[2232245]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2232247 'move' origLocale[2232245] ret[2232164])
    ref call_tmp[2232252]:locale[28] "dead after last mention" "maybe param" "temp"
    (2232254 'move' call_tmp[2232252](2232256 '.' w[1158378] home[1060954]))
    const-val call_tmp[2232259]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2232261]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2232263 'move' coerce_tmp[2232261](2232265 '.v' call_tmp[2232252] _instance[89978]))
    val coerce_tmp[2232268]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2232270 'move' coerce_tmp[2232268](2232272 'cast' object[22] coerce_tmp[2232261]))
    const-val call_tmp[2232275]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2232277 'move' call_tmp[2232275](2232279 'ptr_eq' coerce_tmp[2232268] nil[44]))
    if call_tmp[2232275]
    {
      (2232285 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2232288 'move' call_tmp[2232259](2232290 '_wide_get_locale' coerce_tmp[2232261]))
    val error[2232295]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2232297 'move' error[2232295] nil[44])
    val isdirect[2232311]:bool[10] "temp"
    (2232313 'move' isdirect[2232311](2232316 call chpl_doDirectExecuteOn[187469] call_tmp[2232259]))
    if isdirect[2232311]
    {
      (2232321 call on_fn[1164926] w[1158378] args[2232143] ret[2232164] error[2232295])
    }
    {
      val _args_foron_fn[2232327]:_class_localson_fn[2056554] "temp"
      (2232329 'move' _args_foron_fn[2232327](2232331 'stack allocate class' _class_localson_fn[2056554]))
      (2232333 '.=' _args_foron_fn[2232327] _0_tmp[2056557] call_tmp[2232259])
      (2232337 '.=' _args_foron_fn[2232327] _1_rvfDerefTmp[2056559] w[1158378])
      ref tmp[2232341]:(string,codepointIndex,string)[1158574] "temp"
      (2232343 'move' tmp[2232341](2232345 'set reference' args[2232143]))
      (2232347 '.=' _args_foron_fn[2232327] _2_args[2056561] tmp[2232341])
      (2232351 '.=' _args_foron_fn[2232327] _3_rvfDerefTmp[2056563] ret[2232164])
      ref tmp[2232355]:Error[167984] "temp"
      (2232357 'move' tmp[2232355](2232359 'set reference' error[2232295]))
      (2232361 '.=' _args_foron_fn[2232327] _4_error[2056565] tmp[2232355])
      val _args_vforon_fn[2232365]:c_void_ptr[149] "temp"
      (2232367 'move' _args_vforon_fn[2232365](2232369 'cast_to_void_star' _args_foron_fn[2232327]))
      val _args_sizeon_fn[2232371]:int(64)[13] "temp"
      (2232373 'move' _args_sizeon_fn[2232371](2232375 'sizeof_bundle' _class_localson_fn[2056554]))
      on(2232378 call wrapon_fn[2056618] call_tmp[2232259] _args_vforon_fn[2232365] _args_sizeon_fn[2232371] _args_foron_fn[2232327])
    }
    val errorExists[2232384]:bool[10] "temp"
    (2232386 'move' errorExists[2232384](2232388 '!=' error[2232295] nil[44]))
    if errorExists[2232384]
    {
      (2232393 '=' error[1785133] error[2232295])
      ref i_x[2232396]:locale[28] "temp"
      (2232398 'move' i_x[2232396](2232400 'set reference' origLocale[2232245]))
      (2232403 call deinit[90188] i_x[2232396])
      gotoErrorHandlingReturn _endwrite[2232420] _endwrite[2232420]
    }
    ref i_x[2232411]:locale[28] "temp"
    (2232413 'move' i_x[2232411](2232415 'set reference' origLocale[2232245]))
    (2232418 call deinit[90188] i_x[2232411])
    label _endwrite[2232420]
    val errorExists[2073593]:bool[10] "temp"
    (2073598 'move' errorExists[2073593](2073595 '!=' error[1785133] nil[44]))
    if errorExists[2073593]
    {
      val error[1818215]:Error[167984] "error variable" "temp"
      (1818217 'move' error[1818215] nil[44])
      (1818221 call close[1062381] w[1158378] error[1818215])
      val errorExists[2075169]:bool[10] "temp"
      (2075174 'move' errorExists[2075169](2075171 '!=' error[1818215] nil[44]))
      if errorExists[2075169]
      {
        gotoErrorHandling handler[1818232] handler[1818232]
      }
      label handler[1818232]
      val errorExists[2075177]:bool[10] "temp"
      (2075182 'move' errorExists[2075177](2075179 '!=' error[1818215] nil[44]))
      if errorExists[2075177]
      {
        (1818243 call chpl_uncaught_error[170289] error[1818215])
      }
      ref i_x[2227750]:channel(true,dynamic,false)[1060966] "temp"
      (2227754 'move' i_x[2227750](2227752 'set reference' w[1158378]))
      (2227758 call deinit[1510035] i_x[2227750])
      val error[1818251]:Error[167984] "error variable" "temp"
      (1818253 'move' error[1818251] nil[44])
      (1818257 call close[236043] f[1158350] error[1818251])
      val errorExists[2075185]:bool[10] "temp"
      (2075190 'move' errorExists[2075185](2075187 '!=' error[1818251] nil[44]))
      if errorExists[2075185]
      {
        gotoErrorHandling handler[1818268] handler[1818268]
      }
      label handler[1818268]
      val errorExists[2075193]:bool[10] "temp"
      (2075198 'move' errorExists[2075193](2075195 '!=' error[1818251] nil[44]))
      if errorExists[2075193]
      {
        (1818279 call chpl_uncaught_error[170289] error[1818251])
      }
      ref i_x[2282728]:file[235599] "temp"
      (2282732 'move' i_x[2282728](2282730 'set reference' f[1158350]))
      (2282736 call deinit[235910] i_x[2282728])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val call_tmp[1158404]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1158406 'move' call_tmp[1158404](1158412 call offset[1080167] w[1158378]))
    const-val call_tmp[2084346]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2084348 'move' call_tmp[2084346](2084350 '+' call_tmp[1158404] 1))
    const-val call_tmp[2228770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228772 'move' call_tmp[2228770](2228774 '<' call_tmp[2084346] 0))
    if call_tmp[2228770]
    {
      (2228780 call safeCastCheckHalt[210233] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2228783]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228785 'move' call_tmp[2228783](2228787 'cast' uint(64)[115] call_tmp[2084346]))
    const-val call_tmp[2228790]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228792 'move' call_tmp[2228790](2228795 call sizeof[1080473] uint(8)[100]))
    const-val call_tmp[2228797]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228799 'move' call_tmp[2228797](2228801 '*' call_tmp[2228783] call_tmp[2228790]))
    const-val call_tmp[2228804]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228806 'move' call_tmp[2228804](2228809 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2228810]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228812 'move' call_tmp[2228810](2228815 call chpl_here_alloc[1080509] call_tmp[2228797] call_tmp[2228804]))
    val call_tmp[2228818]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228820 'move' call_tmp[2228818](2228822 'cast' c_ptr(uint(8))[937442] call_tmp[2228810]))
    val buf[1158442]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    (1158444 'move' buf[1158442] call_tmp[2228818])
    const-val call_tmp[1158448]:channel(false,dynamic,false)[1080701] "dead at end of block" "maybe param" "temp"
    val errorExists[2073601]:bool[10] "temp"
    (2073606 'move' errorExists[2073601](2073603 '!=' error[1785133] nil[44]))
    if errorExists[2073601]
    {
      val error[1818287]:Error[167984] "error variable" "temp"
      (1818289 'move' error[1818287] nil[44])
      (1818293 call close[1062381] w[1158378] error[1818287])
      val errorExists[2075201]:bool[10] "temp"
      (2075206 'move' errorExists[2075201](2075203 '!=' error[1818287] nil[44]))
      if errorExists[2075201]
      {
        gotoErrorHandling handler[1818304] handler[1818304]
      }
      label handler[1818304]
      val errorExists[2075209]:bool[10] "temp"
      (2075214 'move' errorExists[2075209](2075211 '!=' error[1818287] nil[44]))
      if errorExists[2075209]
      {
        (1818315 call chpl_uncaught_error[170289] error[1818287])
      }
      ref i_x[2227762]:channel(true,dynamic,false)[1060966] "temp"
      (2227766 'move' i_x[2227762](2227764 'set reference' w[1158378]))
      (2227770 call deinit[1510035] i_x[2227762])
      val error[1818323]:Error[167984] "error variable" "temp"
      (1818325 'move' error[1818323] nil[44])
      (1818329 call close[236043] f[1158350] error[1818323])
      val errorExists[2075217]:bool[10] "temp"
      (2075222 'move' errorExists[2075217](2075219 '!=' error[1818323] nil[44]))
      if errorExists[2075217]
      {
        gotoErrorHandling handler[1818340] handler[1818340]
      }
      label handler[1818340]
      val errorExists[2075225]:bool[10] "temp"
      (2075230 'move' errorExists[2075225](2075227 '!=' error[1818323] nil[44]))
      if errorExists[2075225]
      {
        (1818351 call chpl_uncaught_error[170289] error[1818323])
      }
      ref i_x[2282740]:file[235599] "temp"
      (2282744 'move' i_x[2282740](2282742 'set reference' f[1158350]))
      (2282748 call deinit[235910] i_x[2282740])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    val errorExists[2073609]:bool[10] "temp"
    (2073614 'move' errorExists[2073609](2073611 '!=' error[1785133] nil[44]))
    if errorExists[2073609]
    {
      val error[1818359]:Error[167984] "error variable" "temp"
      (1818361 'move' error[1818359] nil[44])
      (1818365 call close[1062381] w[1158378] error[1818359])
      val errorExists[2075233]:bool[10] "temp"
      (2075238 'move' errorExists[2075233](2075235 '!=' error[1818359] nil[44]))
      if errorExists[2075233]
      {
        gotoErrorHandling handler[1818376] handler[1818376]
      }
      label handler[1818376]
      val errorExists[2075241]:bool[10] "temp"
      (2075246 'move' errorExists[2075241](2075243 '!=' error[1818359] nil[44]))
      if errorExists[2075241]
      {
        (1818387 call chpl_uncaught_error[170289] error[1818359])
      }
      ref i_x[2227774]:channel(true,dynamic,false)[1060966] "temp"
      (2227778 'move' i_x[2227774](2227776 'set reference' w[1158378]))
      (2227782 call deinit[1510035] i_x[2227774])
      val error[1818395]:Error[167984] "error variable" "temp"
      (1818397 'move' error[1818395] nil[44])
      (1818401 call close[236043] f[1158350] error[1818395])
      val errorExists[2075249]:bool[10] "temp"
      (2075254 'move' errorExists[2075249](2075251 '!=' error[1818395] nil[44]))
      if errorExists[2075249]
      {
        gotoErrorHandling handler[1818412] handler[1818412]
      }
      label handler[1818412]
      val errorExists[2075257]:bool[10] "temp"
      (2075262 'move' errorExists[2075257](2075259 '!=' error[1818395] nil[44]))
      if errorExists[2075257]
      {
        (1818423 call chpl_uncaught_error[170289] error[1818395])
      }
      ref i_x[2282752]:file[235599] "temp"
      (2282756 'move' i_x[2282752](2282754 'set reference' f[1158350]))
      (2282760 call deinit[235910] i_x[2282752])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val tmp[2229071]:int(32)[95] "dead after last mention" "temp"
    (2229073 'move' tmp[2229071] IOHINT_NONE[231430])
    val errorExists[2073617]:bool[10] "temp"
    (2073622 'move' errorExists[2073617](2073619 '!=' error[1785133] nil[44]))
    if errorExists[2073617]
    {
      val error[1818431]:Error[167984] "error variable" "temp"
      (1818433 'move' error[1818431] nil[44])
      (1818437 call close[1062381] w[1158378] error[1818431])
      val errorExists[2075265]:bool[10] "temp"
      (2075270 'move' errorExists[2075265](2075267 '!=' error[1818431] nil[44]))
      if errorExists[2075265]
      {
        gotoErrorHandling handler[1818448] handler[1818448]
      }
      label handler[1818448]
      val errorExists[2075273]:bool[10] "temp"
      (2075278 'move' errorExists[2075273](2075275 '!=' error[1818431] nil[44]))
      if errorExists[2075273]
      {
        (1818459 call chpl_uncaught_error[170289] error[1818431])
      }
      ref i_x[2227786]:channel(true,dynamic,false)[1060966] "temp"
      (2227790 'move' i_x[2227786](2227788 'set reference' w[1158378]))
      (2227794 call deinit[1510035] i_x[2227786])
      val error[1818467]:Error[167984] "error variable" "temp"
      (1818469 'move' error[1818467] nil[44])
      (1818473 call close[236043] f[1158350] error[1818467])
      val errorExists[2075281]:bool[10] "temp"
      (2075286 'move' errorExists[2075281](2075283 '!=' error[1818467] nil[44]))
      if errorExists[2075281]
      {
        gotoErrorHandling handler[1818484] handler[1818484]
      }
      label handler[1818484]
      val errorExists[2075289]:bool[10] "temp"
      (2075294 'move' errorExists[2075289](2075291 '!=' error[1818467] nil[44]))
      if errorExists[2075289]
      {
        (1818495 call chpl_uncaught_error[170289] error[1818467])
      }
      ref i_x[2282764]:file[235599] "temp"
      (2282768 'move' i_x[2282764](2282766 'set reference' f[1158350]))
      (2282772 call deinit[235910] i_x[2282764])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val default_arg_style[1175726]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2229160]:file[235599] "temp"
    (2229164 'move' i_this[2229160](2229162 'set reference' f[1158350]))
    val ret[2229173]:iostyle[231863] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2229175]:iostyle[231863] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2229177]:Error[167984] "error variable" "temp"
    (2229179 'move' error[2229177] nil[44])
    (2229182 'move' style[2229175](2229185 call _style[235979] i_this[2229160] error[2229177]))
    val errorExists[2229188]:bool[10] "temp"
    (2229190 'move' errorExists[2229188](2229192 '!=' error[2229177] nil[44]))
    if errorExists[2229188]
    {
      (2229197 '=' error[1785133] error[2229177])
      gotoErrorHandlingReturn _endreader_default_style[2229206] _endreader_default_style[2229206]
    }
    (2229203 'move' ret[2229173] style[2229175])
    label _endreader_default_style[2229206]
    (1175732 'move' default_arg_style[1175726] ret[2229173])
    val errorExists[2073625]:bool[10] "temp"
    (2073630 'move' errorExists[2073625](2073627 '!=' error[1785133] nil[44]))
    if errorExists[2073625]
    {
      val error[1818503]:Error[167984] "error variable" "temp"
      (1818505 'move' error[1818503] nil[44])
      (1818509 call close[1062381] w[1158378] error[1818503])
      val errorExists[2075297]:bool[10] "temp"
      (2075302 'move' errorExists[2075297](2075299 '!=' error[1818503] nil[44]))
      if errorExists[2075297]
      {
        gotoErrorHandling handler[1818520] handler[1818520]
      }
      label handler[1818520]
      val errorExists[2075305]:bool[10] "temp"
      (2075310 'move' errorExists[2075305](2075307 '!=' error[1818503] nil[44]))
      if errorExists[2075305]
      {
        (1818531 call chpl_uncaught_error[170289] error[1818503])
      }
      ref i_x[2227798]:channel(true,dynamic,false)[1060966] "temp"
      (2227802 'move' i_x[2227798](2227800 'set reference' w[1158378]))
      (2227806 call deinit[1510035] i_x[2227798])
      val error[1818539]:Error[167984] "error variable" "temp"
      (1818541 'move' error[1818539] nil[44])
      (1818545 call close[236043] f[1158350] error[1818539])
      val errorExists[2075313]:bool[10] "temp"
      (2075318 'move' errorExists[2075313](2075315 '!=' error[1818539] nil[44]))
      if errorExists[2075313]
      {
        gotoErrorHandling handler[1818556] handler[1818556]
      }
      label handler[1818556]
      val errorExists[2075321]:bool[10] "temp"
      (2075326 'move' errorExists[2075321](2075323 '!=' error[1818539] nil[44]))
      if errorExists[2075321]
      {
        (1818567 call chpl_uncaught_error[170289] error[1818539])
      }
      ref i_x[2282776]:file[235599] "temp"
      (2282780 'move' i_x[2282776](2282778 'set reference' f[1158350]))
      (2282784 call deinit[235910] i_x[2282776])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val ret_tmp[1806754]:channel(false,dynamic,false)[1080701] "temp"
    (1158456 call reader[1080607] f[1158350] 0 9223372036854775807 tmp[2229071] default_arg_style[1175726] error[1785133] ret_tmp[1806754])
    (1806757 'move' call_tmp[1158448] ret_tmp[1806754])
    val errorExists[2073633]:bool[10] "temp"
    (2073638 'move' errorExists[2073633](2073635 '!=' error[1785133] nil[44]))
    if errorExists[2073633]
    {
      val error[1818575]:Error[167984] "error variable" "temp"
      (1818577 'move' error[1818575] nil[44])
      (1818581 call close[1062381] w[1158378] error[1818575])
      val errorExists[2075329]:bool[10] "temp"
      (2075334 'move' errorExists[2075329](2075331 '!=' error[1818575] nil[44]))
      if errorExists[2075329]
      {
        gotoErrorHandling handler[1818592] handler[1818592]
      }
      label handler[1818592]
      val errorExists[2075337]:bool[10] "temp"
      (2075342 'move' errorExists[2075337](2075339 '!=' error[1818575] nil[44]))
      if errorExists[2075337]
      {
        (1818603 call chpl_uncaught_error[170289] error[1818575])
      }
      ref i_x[2227810]:channel(true,dynamic,false)[1060966] "temp"
      (2227814 'move' i_x[2227810](2227812 'set reference' w[1158378]))
      (2227818 call deinit[1510035] i_x[2227810])
      val error[1818611]:Error[167984] "error variable" "temp"
      (1818613 'move' error[1818611] nil[44])
      (1818617 call close[236043] f[1158350] error[1818611])
      val errorExists[2075345]:bool[10] "temp"
      (2075350 'move' errorExists[2075345](2075347 '!=' error[1818611] nil[44]))
      if errorExists[2075345]
      {
        gotoErrorHandling handler[1818628] handler[1818628]
      }
      label handler[1818628]
      val errorExists[2075353]:bool[10] "temp"
      (2075358 'move' errorExists[2075353](2075355 '!=' error[1818611] nil[44]))
      if errorExists[2075353]
      {
        (1818639 call chpl_uncaught_error[170289] error[1818611])
      }
      ref i_x[2282788]:file[235599] "temp"
      (2282792 'move' i_x[2282788](2282790 'set reference' f[1158350]))
      (2282796 call deinit[235910] i_x[2282788])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val r[1158459]:channel(false,dynamic,false)[1080701] "dead at end of block" "insert auto destroy"
    (1158461 'move' r[1158459] call_tmp[1158448])
    (1158488 call readBytes[1082858] r[1158459] call_tmp[2228818] call_tmp[1158404] error[1785133])
    val errorExists[2073641]:bool[10] "temp"
    (2073646 'move' errorExists[2073641](2073643 '!=' error[1785133] nil[44]))
    if errorExists[2073641]
    {
      val error[1818647]:Error[167984] "error variable" "temp"
      (1818649 'move' error[1818647] nil[44])
      (1818653 call close[1082113] r[1158459] error[1818647])
      val errorExists[2075361]:bool[10] "temp"
      (2075366 'move' errorExists[2075361](2075363 '!=' error[1818647] nil[44]))
      if errorExists[2075361]
      {
        gotoErrorHandling handler[1818664] handler[1818664]
      }
      label handler[1818664]
      val errorExists[2075369]:bool[10] "temp"
      (2075374 'move' errorExists[2075369](2075371 '!=' error[1818647] nil[44]))
      if errorExists[2075369]
      {
        (1818675 call chpl_uncaught_error[170289] error[1818647])
      }
      ref i_x[2286003]:channel(false,dynamic,false)[1080701] "temp"
      (2286007 'move' i_x[2286003](2286005 'set reference' r[1158459]))
      (2286011 call deinit[1514289] i_x[2286003])
      val error[1818683]:Error[167984] "error variable" "temp"
      (1818685 'move' error[1818683] nil[44])
      (1818689 call close[1062381] w[1158378] error[1818683])
      val errorExists[2075377]:bool[10] "temp"
      (2075382 'move' errorExists[2075377](2075379 '!=' error[1818683] nil[44]))
      if errorExists[2075377]
      {
        gotoErrorHandling handler[1818700] handler[1818700]
      }
      label handler[1818700]
      val errorExists[2075385]:bool[10] "temp"
      (2075390 'move' errorExists[2075385](2075387 '!=' error[1818683] nil[44]))
      if errorExists[2075385]
      {
        (1818711 call chpl_uncaught_error[170289] error[1818683])
      }
      ref i_x[2227822]:channel(true,dynamic,false)[1060966] "temp"
      (2227826 'move' i_x[2227822](2227824 'set reference' w[1158378]))
      (2227830 call deinit[1510035] i_x[2227822])
      val error[1818719]:Error[167984] "error variable" "temp"
      (1818721 'move' error[1818719] nil[44])
      (1818725 call close[236043] f[1158350] error[1818719])
      val errorExists[2075393]:bool[10] "temp"
      (2075398 'move' errorExists[2075393](2075395 '!=' error[1818719] nil[44]))
      if errorExists[2075393]
      {
        gotoErrorHandling handler[1818736] handler[1818736]
      }
      label handler[1818736]
      val errorExists[2075401]:bool[10] "temp"
      (2075406 'move' errorExists[2075401](2075403 '!=' error[1818719] nil[44]))
      if errorExists[2075401]
      {
        (1818747 call chpl_uncaught_error[170289] error[1818719])
      }
      ref i_x[2282800]:file[235599] "temp"
      (2282804 'move' i_x[2282800](2282802 'set reference' f[1158350]))
      (2282808 call deinit[235910] i_x[2282800])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    ref call_tmp[2157516]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2157518 'move' call_tmp[2157516](2157520 'array_get' buf[1158442] call_tmp[1158404]))
    const-val coerce_tmp[1175742]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175748 'move' coerce_tmp[1175742](1175744 'cast' uint(8)[100] 0))
    (2157992 '=' call_tmp[2157516] coerce_tmp[1175742])
    const-val ret[2103902]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2103904]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2103906]:Error[167984] "error variable" "temp"
    (2103908 'move' error[2103906] nil[44])
    const-val ret_tmp[2103911]:string[26] "temp"
    (2103914 call decodeByteBuffer[173938] call_tmp[2228818] call_tmp[1158404] replace[173694] error[2103906] ret_tmp[2103911])
    (2103920 'move' call_tmp[2103904] ret_tmp[2103911])
    val errorExists[2103923]:bool[10] "temp"
    (2103925 'move' errorExists[2103923](2103927 '!=' error[2103906] nil[44]))
    if errorExists[2103923]
    {
      (2103932 '=' error[1785133] error[2103906])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2103941] _endcreateStringWithNewBuffer[2103941]
    }
    (2103938 'move' ret[2103902] call_tmp[2103904])
    label _endcreateStringWithNewBuffer[2103941]
    val errorExists[2073649]:bool[10] "temp"
    (2073654 'move' errorExists[2073649](2073651 '!=' error[1785133] nil[44]))
    if errorExists[2073649]
    {
      val error[1818755]:Error[167984] "error variable" "temp"
      (1818757 'move' error[1818755] nil[44])
      (1818761 call close[1082113] r[1158459] error[1818755])
      val errorExists[2075409]:bool[10] "temp"
      (2075414 'move' errorExists[2075409](2075411 '!=' error[1818755] nil[44]))
      if errorExists[2075409]
      {
        gotoErrorHandling handler[1818772] handler[1818772]
      }
      label handler[1818772]
      val errorExists[2075417]:bool[10] "temp"
      (2075422 'move' errorExists[2075417](2075419 '!=' error[1818755] nil[44]))
      if errorExists[2075417]
      {
        (1818783 call chpl_uncaught_error[170289] error[1818755])
      }
      ref i_x[2286015]:channel(false,dynamic,false)[1080701] "temp"
      (2286019 'move' i_x[2286015](2286017 'set reference' r[1158459]))
      (2286023 call deinit[1514289] i_x[2286015])
      val error[1818791]:Error[167984] "error variable" "temp"
      (1818793 'move' error[1818791] nil[44])
      (1818797 call close[1062381] w[1158378] error[1818791])
      val errorExists[2075425]:bool[10] "temp"
      (2075430 'move' errorExists[2075425](2075427 '!=' error[1818791] nil[44]))
      if errorExists[2075425]
      {
        gotoErrorHandling handler[1818808] handler[1818808]
      }
      label handler[1818808]
      val errorExists[2075433]:bool[10] "temp"
      (2075438 'move' errorExists[2075433](2075435 '!=' error[1818791] nil[44]))
      if errorExists[2075433]
      {
        (1818819 call chpl_uncaught_error[170289] error[1818791])
      }
      ref i_x[2227834]:channel(true,dynamic,false)[1060966] "temp"
      (2227838 'move' i_x[2227834](2227836 'set reference' w[1158378]))
      (2227842 call deinit[1510035] i_x[2227834])
      val error[1818827]:Error[167984] "error variable" "temp"
      (1818829 'move' error[1818827] nil[44])
      (1818833 call close[236043] f[1158350] error[1818827])
      val errorExists[2075441]:bool[10] "temp"
      (2075446 'move' errorExists[2075441](2075443 '!=' error[1818827] nil[44]))
      if errorExists[2075441]
      {
        gotoErrorHandling handler[1818844] handler[1818844]
      }
      label handler[1818844]
      val errorExists[2075449]:bool[10] "temp"
      (2075454 'move' errorExists[2075449](2075451 '!=' error[1818827] nil[44]))
      if errorExists[2075449]
      {
        (1818855 call chpl_uncaught_error[170289] error[1818827])
      }
      ref i_x[2282812]:file[235599] "temp"
      (2282816 'move' i_x[2282812](2282814 'set reference' f[1158350]))
      (2282820 call deinit[235910] i_x[2282812])
      gotoErrorHandling handler[1785134] handler[1785134]
    }
    const-val coerce_tmp[1175753]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175759 'move' coerce_tmp[1175753](1175755 'cast' c_void_ptr[149] call_tmp[2228818]))
    (2165586 call chpl_here_free[188127] coerce_tmp[1175753])
    (1175763 'move' ret[1157893] ret[2103902])
    val error[1818863]:Error[167984] "error variable" "temp"
    (1818865 'move' error[1818863] nil[44])
    (1818869 call close[1082113] r[1158459] error[1818863])
    val errorExists[2075457]:bool[10] "temp"
    (2075462 'move' errorExists[2075457](2075459 '!=' error[1818863] nil[44]))
    if errorExists[2075457]
    {
      gotoErrorHandling handler[1818880] handler[1818880]
    }
    label handler[1818880]
    val errorExists[2075465]:bool[10] "temp"
    (2075470 'move' errorExists[2075465](2075467 '!=' error[1818863] nil[44]))
    if errorExists[2075465]
    {
      (1818891 call chpl_uncaught_error[170289] error[1818863])
    }
    ref i_x[2286027]:channel(false,dynamic,false)[1080701] "temp"
    (2286031 'move' i_x[2286027](2286029 'set reference' r[1158459]))
    (2286035 call deinit[1514289] i_x[2286027])
    val error[1818899]:Error[167984] "error variable" "temp"
    (1818901 'move' error[1818899] nil[44])
    (1818905 call close[1062381] w[1158378] error[1818899])
    val errorExists[2075473]:bool[10] "temp"
    (2075478 'move' errorExists[2075473](2075475 '!=' error[1818899] nil[44]))
    if errorExists[2075473]
    {
      gotoErrorHandling handler[1818916] handler[1818916]
    }
    label handler[1818916]
    val errorExists[2075481]:bool[10] "temp"
    (2075486 'move' errorExists[2075481](2075483 '!=' error[1818899] nil[44]))
    if errorExists[2075481]
    {
      (1818927 call chpl_uncaught_error[170289] error[1818899])
    }
    ref i_x[2227846]:channel(true,dynamic,false)[1060966] "temp"
    (2227850 'move' i_x[2227846](2227848 'set reference' w[1158378]))
    (2227854 call deinit[1510035] i_x[2227846])
    val error[1818935]:Error[167984] "error variable" "temp"
    (1818937 'move' error[1818935] nil[44])
    (1818941 call close[236043] f[1158350] error[1818935])
    val errorExists[2075489]:bool[10] "temp"
    (2075494 'move' errorExists[2075489](2075491 '!=' error[1818935] nil[44]))
    if errorExists[2075489]
    {
      gotoErrorHandling handler[1818952] handler[1818952]
    }
    label handler[1818952]
    val errorExists[2075497]:bool[10] "temp"
    (2075502 'move' errorExists[2075497](2075499 '!=' error[1818935] nil[44]))
    if errorExists[2075497]
    {
      (1818963 call chpl_uncaught_error[170289] error[1818935])
    }
    ref i_x[2282824]:file[235599] "temp"
    (2282828 'move' i_x[2282824](2282826 'set reference' f[1158350]))
    (2282832 call deinit[235910] i_x[2282824])
    gotoReturn _end_stringify[1158556] _end_stringify[1158556]
    label handler[1785134]
    val errorExists[2073657]:bool[10] "temp"
    (2073662 'move' errorExists[2073657](2073659 '!=' error[1785133] nil[44]))
    if errorExists[2073657]
    {
      (1785324 call chpl_uncaught_error[170289] error[1785133])
    }
    label _end_stringify[1158556]
    (1807931 '=' _retArg[1807929] ret[1157893])
    (1807933 return _void[55])
  }
  function stringify[1272512](const  ref arg _e0_args[1272514]:string[26], const in arg _e1_args[1272516]:int(64)[13], const  ref arg _e2_args[1272518]:string[26], ref arg _retArg[1810157]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1272522]:string[26] "dead after last mention" "RVV" "temp"
    val str[1272560]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166615]:string[26] "temp"
    (2166618 'move' inlineImm[2166615] "")
    ref i_x[2166620]:string[26] "temp"
    (2166624 'move' i_x[2166620](2166622 'set reference' inlineImm[2166615]))
    val ret[2166627]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166629]:string[26] "dead after last mention" "temp"
    (2166632 call init=[30774] tmp[2166629] i_x[2166620])
    (2166635 'move' ret[2166627] tmp[2166629])
    (1272562 'move' str[1272560] ret[2166627])
    (1276283 call +=[38800] str[1272560] _e0_args[1272514])
    const-val call_tmp[1276858]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806526]:string[26] "temp"
    (1276863 call _cast[1063172] _e1_args[1272516] ret_tmp[1806526])
    (1806529 'move' call_tmp[1276858] ret_tmp[1806526])
    (1276867 call +=[38800] str[1272560] call_tmp[1276858])
    ref i_x[2095743]:string[26] "temp"
    (2095747 'move' i_x[2095743](2095745 'set reference' call_tmp[1276858]))
    (2095751 call deinit[30834] i_x[2095743])
    (1276973 call +=[38800] str[1272560] _e2_args[1272518])
    (1277458 'move' ret[1272522] str[1272560])
    gotoReturn _end_stringify[1273185] _end_stringify[1273185]
    label _end_stringify[1273185]
    (1810159 '=' _retArg[1810157] ret[1272522])
    (1810163 return _void[55])
  }
  function stringify[1212997](const  ref arg _e0_args[1212999]:string[26], const in arg _e1_args[1213001]:int(64)[13], ref arg _retArg[1808317]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1213005]:string[26] "dead after last mention" "RVV" "temp"
    val str[1213040]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166590]:string[26] "temp"
    (2166593 'move' inlineImm[2166590] "")
    ref i_x[2166595]:string[26] "temp"
    (2166599 'move' i_x[2166595](2166597 'set reference' inlineImm[2166590]))
    val ret[2166602]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166604]:string[26] "dead after last mention" "temp"
    (2166607 call init=[30774] tmp[2166604] i_x[2166595])
    (2166610 'move' ret[2166602] tmp[2166604])
    (1213042 'move' str[1213040] ret[2166602])
    (1216680 call +=[38800] str[1213040] _e0_args[1212999])
    const-val call_tmp[1217255]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806496]:string[26] "temp"
    (1217260 call _cast[1063172] _e1_args[1213001] ret_tmp[1806496])
    (1806499 'move' call_tmp[1217255] ret_tmp[1806496])
    (1217264 call +=[38800] str[1213040] call_tmp[1217255])
    ref i_x[2095479]:string[26] "temp"
    (2095483 'move' i_x[2095479](2095481 'set reference' call_tmp[1217255]))
    (2095487 call deinit[30834] i_x[2095479])
    (1217476 'move' ret[1213005] str[1213040])
    gotoReturn _end_stringify[1213665] _end_stringify[1213665]
    label _end_stringify[1213665]
    (1808319 '=' _retArg[1808317] ret[1213005])
    (1808323 return _void[55])
  }
  function stringify[1279009](const  ref arg _e0_args[1279011]:string[26], const in arg _e1_args[1279013]:int(64)[13], const  ref arg _e2_args[1279015]:string[26], const in arg _e3_args[1279017]:int(64)[13], const  ref arg _e4_args[1279019]:string[26], ref arg _retArg[1810183]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1279023]:string[26] "dead after last mention" "RVV" "temp"
    val str[1279067]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166640]:string[26] "temp"
    (2166643 'move' inlineImm[2166640] "")
    ref i_x[2166645]:string[26] "temp"
    (2166649 'move' i_x[2166645](2166647 'set reference' inlineImm[2166640]))
    val ret[2166652]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166654]:string[26] "dead after last mention" "temp"
    (2166657 call init=[30774] tmp[2166654] i_x[2166645])
    (2166660 'move' ret[2166652] tmp[2166654])
    (1279069 'move' str[1279067] ret[2166652])
    (1283598 call +=[38800] str[1279067] _e0_args[1279011])
    const-val call_tmp[1284173]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806532]:string[26] "temp"
    (1284178 call _cast[1063172] _e1_args[1279013] ret_tmp[1806532])
    (1806535 'move' call_tmp[1284173] ret_tmp[1806532])
    (1284182 call +=[38800] str[1279067] call_tmp[1284173])
    ref i_x[2095779]:string[26] "temp"
    (2095783 'move' i_x[2095779](2095781 'set reference' call_tmp[1284173]))
    (2095787 call deinit[30834] i_x[2095779])
    (1284288 call +=[38800] str[1279067] _e2_args[1279015])
    const-val call_tmp[1284863]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806538]:string[26] "temp"
    (1284868 call _cast[1063172] _e3_args[1279017] ret_tmp[1806538])
    (1806541 'move' call_tmp[1284863] ret_tmp[1806538])
    (1284872 call +=[38800] str[1279067] call_tmp[1284863])
    ref i_x[2095791]:string[26] "temp"
    (2095795 'move' i_x[2095791](2095793 'set reference' call_tmp[1284863]))
    (2095799 call deinit[30834] i_x[2095791])
    (1284978 call +=[38800] str[1279067] _e4_args[1279019])
    (1285611 'move' ret[1279023] str[1279067])
    gotoReturn _end_stringify[1279692] _end_stringify[1279692]
    label _end_stringify[1279692]
    (1810185 '=' _retArg[1810183] ret[1279023])
    (1810189 return _void[55])
  }
  function stringify[1337807](const  ref arg _e0_args[1337809]:string[26], const  ref arg _e1_args[1337811]:string[26], const in arg _e2_args[1337813]:int(64)[13], const  ref arg _e3_args[1337815]:string[26], const in arg _e4_args[1337817]:range(int(64),bounded,false)[1026833], ref arg _retArg[1810884]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1337821]:string[26] "dead after last mention" "RVV" "temp"
    val str[1337865]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2166690]:string[26] "temp"
    (2166693 'move' inlineImm[2166690] "")
    ref i_x[2166695]:string[26] "temp"
    (2166699 'move' i_x[2166695](2166697 'set reference' inlineImm[2166690]))
    val ret[2166702]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2166704]:string[26] "dead after last mention" "temp"
    (2166707 call init=[30774] tmp[2166704] i_x[2166695])
    (2166710 'move' ret[2166702] tmp[2166704])
    (1337867 'move' str[1337865] ret[2166702])
    (1341762 call +=[38800] str[1337865] _e0_args[1337809])
    (1342107 call +=[38800] str[1337865] _e1_args[1337811])
    const-val call_tmp[1342682]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1806544]:string[26] "temp"
    (1342687 call _cast[1063172] _e2_args[1337813] ret_tmp[1806544])
    (1806547 'move' call_tmp[1342682] ret_tmp[1806544])
    (1342691 call +=[38800] str[1337865] call_tmp[1342682])
    ref i_x[2095851]:string[26] "temp"
    (2095855 'move' i_x[2095851](2095853 'set reference' call_tmp[1342682]))
    (2095859 call deinit[30834] i_x[2095851])
    (1342797 call +=[38800] str[1337865] _e3_args[1337815])
    const-val call_tmp[1343372]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807341]:string[26] "temp"
    (1343377 call _cast[1119456] _e4_args[1337817] ret_tmp[1807341])
    (1807344 'move' call_tmp[1343372] ret_tmp[1807341])
    (1343381 call +=[38800] str[1337865] call_tmp[1343372])
    ref i_x[2095863]:string[26] "temp"
    (2095867 'move' i_x[2095863](2095865 'set reference' call_tmp[1343372]))
    (2095871 call deinit[30834] i_x[2095863])
    (1343768 'move' ret[1337821] str[1337865])
    gotoReturn _end_stringify[1338490] _end_stringify[1338490]
    label _end_stringify[1338490]
    (1810886 '=' _retArg[1810884] ret[1337821])
    (1810892 return _void[55])
  }
  val _arg_to_proto_names[246580]:heap__tuple_6_star_string[2050752] "dead at end of block" "insert auto destroy" "private"
  function channel(true,dynamic,true)[1021844].writeln[1388748](const  ref arg this[1388754]:channel(true,dynamic,true)[1021844], const  ref arg _e0_args[1388756]:string[26], ref arg error_out[1786655]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1388760]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1388807]:ioNewline[238720] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1388833]:ioNewline[238720] "dead after last mention" "temp"
    (1388836 call init[893688] initTemp[1388833] 0)
    (1388809 'move' call_tmp[1388807] initTemp[1388833])
    val error[1786660]:Error[167984] "error variable" "temp"
    (1786662 'move' error[1786660] nil[44])
    ref i__e1_args[2276562]:ioNewline[238720] "temp"
    (2276566 'move' i__e1_args[2276562](2276564 'set reference' call_tmp[1388807]))
    const-val args[2276575]:(string,ioNewline)[1389119] "insert auto destroy"
    (2301337 '.=' args[2276575] x0[1389115] _e0_args[1388756])
    (2301341 '.=' args[2276575] x1[1389117] i__e1_args[2276562])
    val ret[2276590]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2276592]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2276594]:locale[28] "dead after last mention" "maybe param" "temp"
    (2276596 'move' call_tmp[2276594](2276598 '.' this[1388754] _readWriteThisFromLocale[1021841]))
    val ret[2276601]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2276603]:locale[28] "dead after last mention" "temp"
    (2276606 call init=[90170] tmp[2276603] call_tmp[2276594])
    (2276609 'move' ret[2276601] tmp[2276603])
    val ret[2276612]:locale[28] "dead at end of block" "insert auto destroy"
    (2276614 'move' ret[2276612] ret[2276601])
    const-val call_tmp[2276617]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276619 'move' call_tmp[2276617](2276622 call ==[782800] ret[2276612] nilLocale[89942]))
    if call_tmp[2276617]
    {
      const-val call_tmp[2276627]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2276629]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2276631]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2276633 'move' call_tmp[2276631](2276636 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2276639 'move' call_tmp[2276629] call_tmp[2276631])
      const-val call_tmp[2276642]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2276644]:locale[28] "temp"
      (2276647 call chpl_localeID_to_locale[92852] call_tmp[2276629] ret_tmp[2276644])
      (2276650 'move' call_tmp[2276642] ret_tmp[2276644])
      (2276653 'move' call_tmp[2276627] call_tmp[2276642])
      (2276657 call =[90634] ret[2276612] call_tmp[2276627])
      ref i_x[2276660]:locale[28] "temp"
      (2276662 'move' i_x[2276660](2276664 'set reference' call_tmp[2276627]))
      (2276667 call deinit[90188] i_x[2276660])
    }
    (2276670 'move' ret[2276592] ret[2276612])
    const-val origLocale[2276673]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2276675 'move' origLocale[2276673] ret[2276592])
    ref call_tmp[2276680]:locale[28] "dead after last mention" "maybe param" "temp"
    (2276682 'move' call_tmp[2276680](2276684 '.' this[1388754] home[1021832]))
    const-val call_tmp[2276687]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2276689]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276691 'move' coerce_tmp[2276689](2276693 '.v' call_tmp[2276680] _instance[89978]))
    val coerce_tmp[2276696]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276698 'move' coerce_tmp[2276696](2276700 'cast' object[22] coerce_tmp[2276689]))
    const-val call_tmp[2276703]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276705 'move' call_tmp[2276703](2276707 'ptr_eq' coerce_tmp[2276696] nil[44]))
    if call_tmp[2276703]
    {
      (2276713 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2276716 'move' call_tmp[2276687](2276718 '_wide_get_locale' coerce_tmp[2276689]))
    val error[2276723]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2276725 'move' error[2276723] nil[44])
    val rvfDerefTmp[2276728]:channel(true,dynamic,true)[1021844] "temp"
    (2276730 'move' rvfDerefTmp[2276728](2276732 'deref' this[1388754]))
    val isdirect[2276739]:bool[10] "temp"
    (2276741 'move' isdirect[2276739](2276744 call chpl_doDirectExecuteOn[187469] call_tmp[2276687]))
    if isdirect[2276739]
    {
      (2276749 call on_fn[1388994] rvfDerefTmp[2276728] args[2276575] ret[2276592] error[2276723])
    }
    {
      val _args_foron_fn[2276755]:_class_localson_fn[2059518] "temp"
      (2276757 'move' _args_foron_fn[2276755](2276759 'stack allocate class' _class_localson_fn[2059518]))
      (2276761 '.=' _args_foron_fn[2276755] _0_tmp[2059521] call_tmp[2276687])
      (2276765 '.=' _args_foron_fn[2276755] _1_rvfDerefTmp[2059523] rvfDerefTmp[2276728])
      ref tmp[2276769]:(string,ioNewline)[1389119] "temp"
      (2276771 'move' tmp[2276769](2276773 'set reference' args[2276575]))
      (2276775 '.=' _args_foron_fn[2276755] _2_args[2059525] tmp[2276769])
      (2276779 '.=' _args_foron_fn[2276755] _3_rvfDerefTmp[2059527] ret[2276592])
      ref tmp[2276783]:Error[167984] "temp"
      (2276785 'move' tmp[2276783](2276787 'set reference' error[2276723]))
      (2276789 '.=' _args_foron_fn[2276755] _4_error[2059529] tmp[2276783])
      val _args_vforon_fn[2276793]:c_void_ptr[149] "temp"
      (2276795 'move' _args_vforon_fn[2276793](2276797 'cast_to_void_star' _args_foron_fn[2276755]))
      val _args_sizeon_fn[2276799]:int(64)[13] "temp"
      (2276801 'move' _args_sizeon_fn[2276799](2276803 'sizeof_bundle' _class_localson_fn[2059518]))
      on(2276806 call wrapon_fn[2059582] call_tmp[2276687] _args_vforon_fn[2276793] _args_sizeon_fn[2276799] _args_foron_fn[2276755])
    }
    val errorExists[2276812]:bool[10] "temp"
    (2276814 'move' errorExists[2276812](2276816 '!=' error[2276723] nil[44]))
    if errorExists[2276812]
    {
      (2276821 '=' error[1786660] error[2276723])
      ref i_x[2276824]:locale[28] "temp"
      (2276826 'move' i_x[2276824](2276828 'set reference' origLocale[2276673]))
      (2276831 call deinit[90188] i_x[2276824])
      gotoErrorHandlingReturn _endwrite[2276848] _endwrite[2276848]
    }
    (2276836 'move' ret[2276590] 1)
    ref i_x[2276839]:locale[28] "temp"
    (2276841 'move' i_x[2276839](2276843 'set reference' origLocale[2276673]))
    (2276846 call deinit[90188] i_x[2276839])
    label _endwrite[2276848]
    val errorExists[2074337]:bool[10] "temp"
    (2074342 'move' errorExists[2074337](2074339 '!=' error[1786660] nil[44]))
    if errorExists[2074337]
    {
      (1786666 '=' error_out[1786655] error[1786660])
      gotoErrorHandlingReturn _endwriteln[1786657] _endwriteln[1786657]
    }
    (1393922 'move' ret[1388760] ret[2276590])
    label _endwriteln[1786657]
    (1388829 return ret[1388760])
  }
  function channel(true,dynamic,true)[1021844].writeln[1398690](const  ref arg this[1398696]:channel(true,dynamic,true)[1021844], const in arg _e0_args[1398698]:real(64)[16], ref arg error_out[1787029]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1398702]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1398712]:ioNewline[238720] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1398738]:ioNewline[238720] "dead after last mention" "temp"
    (1398741 call init[893688] initTemp[1398738] 0)
    (1398714 'move' call_tmp[1398712] initTemp[1398738])
    val error[1787034]:Error[167984] "error variable" "temp"
    (1787036 'move' error[1787034] nil[44])
    ref i__e1_args[2278946]:ioNewline[238720] "temp"
    (2278950 'move' i__e1_args[2278946](2278948 'set reference' call_tmp[1398712]))
    const-val args[2278959]:(real(64),ioNewline)[1398991] "insert auto destroy"
    (2305144 '.=' args[2278959] x0[1398987] _e0_args[1398698])
    (2305148 '.=' args[2278959] x1[1398989] i__e1_args[2278946])
    val ret[2278974]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2278976]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2278978]:locale[28] "dead after last mention" "maybe param" "temp"
    (2278980 'move' call_tmp[2278978](2278982 '.' this[1398696] _readWriteThisFromLocale[1021841]))
    val ret[2278985]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2278987]:locale[28] "dead after last mention" "temp"
    (2278990 call init=[90170] tmp[2278987] call_tmp[2278978])
    (2278993 'move' ret[2278985] tmp[2278987])
    val ret[2278996]:locale[28] "dead at end of block" "insert auto destroy"
    (2278998 'move' ret[2278996] ret[2278985])
    const-val call_tmp[2279001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279003 'move' call_tmp[2279001](2279006 call ==[782800] ret[2278996] nilLocale[89942]))
    if call_tmp[2279001]
    {
      const-val call_tmp[2279011]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2279013]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2279015]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2279017 'move' call_tmp[2279015](2279020 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2279023 'move' call_tmp[2279013] call_tmp[2279015])
      const-val call_tmp[2279026]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2279028]:locale[28] "temp"
      (2279031 call chpl_localeID_to_locale[92852] call_tmp[2279013] ret_tmp[2279028])
      (2279034 'move' call_tmp[2279026] ret_tmp[2279028])
      (2279037 'move' call_tmp[2279011] call_tmp[2279026])
      (2279041 call =[90634] ret[2278996] call_tmp[2279011])
      ref i_x[2279044]:locale[28] "temp"
      (2279046 'move' i_x[2279044](2279048 'set reference' call_tmp[2279011]))
      (2279051 call deinit[90188] i_x[2279044])
    }
    (2279054 'move' ret[2278976] ret[2278996])
    const-val origLocale[2279057]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2279059 'move' origLocale[2279057] ret[2278976])
    ref call_tmp[2279064]:locale[28] "dead after last mention" "maybe param" "temp"
    (2279066 'move' call_tmp[2279064](2279068 '.' this[1398696] home[1021832]))
    const-val call_tmp[2279071]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2279073]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2279075 'move' coerce_tmp[2279073](2279077 '.v' call_tmp[2279064] _instance[89978]))
    val coerce_tmp[2279080]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2279082 'move' coerce_tmp[2279080](2279084 'cast' object[22] coerce_tmp[2279073]))
    const-val call_tmp[2279087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2279089 'move' call_tmp[2279087](2279091 'ptr_eq' coerce_tmp[2279080] nil[44]))
    if call_tmp[2279087]
    {
      (2279097 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2279100 'move' call_tmp[2279071](2279102 '_wide_get_locale' coerce_tmp[2279073]))
    val error[2279107]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2279109 'move' error[2279107] nil[44])
    val rvfDerefTmp[2279112]:channel(true,dynamic,true)[1021844] "temp"
    (2279114 'move' rvfDerefTmp[2279112](2279116 'deref' this[1398696]))
    val isdirect[2279123]:bool[10] "temp"
    (2279125 'move' isdirect[2279123](2279128 call chpl_doDirectExecuteOn[187469] call_tmp[2279071]))
    if isdirect[2279123]
    {
      (2279133 call on_fn[1398866] rvfDerefTmp[2279112] args[2278959] ret[2278976] error[2279107])
    }
    {
      val _args_foron_fn[2279139]:_class_localson_fn[2059999] "temp"
      (2279141 'move' _args_foron_fn[2279139](2279143 'stack allocate class' _class_localson_fn[2059999]))
      (2279145 '.=' _args_foron_fn[2279139] _0_tmp[2060002] call_tmp[2279071])
      (2279149 '.=' _args_foron_fn[2279139] _1_rvfDerefTmp[2060004] rvfDerefTmp[2279112])
      ref tmp[2279153]:(real(64),ioNewline)[1398991] "temp"
      (2279155 'move' tmp[2279153](2279157 'set reference' args[2278959]))
      (2279159 '.=' _args_foron_fn[2279139] _2_args[2060006] tmp[2279153])
      (2279163 '.=' _args_foron_fn[2279139] _3_rvfDerefTmp[2060008] ret[2278976])
      ref tmp[2279167]:Error[167984] "temp"
      (2279169 'move' tmp[2279167](2279171 'set reference' error[2279107]))
      (2279173 '.=' _args_foron_fn[2279139] _4_error[2060010] tmp[2279167])
      val _args_vforon_fn[2279177]:c_void_ptr[149] "temp"
      (2279179 'move' _args_vforon_fn[2279177](2279181 'cast_to_void_star' _args_foron_fn[2279139]))
      val _args_sizeon_fn[2279183]:int(64)[13] "temp"
      (2279185 'move' _args_sizeon_fn[2279183](2279187 'sizeof_bundle' _class_localson_fn[2059999]))
      on(2279190 call wrapon_fn[2060063] call_tmp[2279071] _args_vforon_fn[2279177] _args_sizeon_fn[2279183] _args_foron_fn[2279139])
    }
    val errorExists[2279196]:bool[10] "temp"
    (2279198 'move' errorExists[2279196](2279200 '!=' error[2279107] nil[44]))
    if errorExists[2279196]
    {
      (2279205 '=' error[1787034] error[2279107])
      ref i_x[2279208]:locale[28] "temp"
      (2279210 'move' i_x[2279208](2279212 'set reference' origLocale[2279057]))
      (2279215 call deinit[90188] i_x[2279208])
      gotoErrorHandlingReturn _endwrite[2279232] _endwrite[2279232]
    }
    (2279220 'move' ret[2278974] 1)
    ref i_x[2279223]:locale[28] "temp"
    (2279225 'move' i_x[2279223](2279227 'set reference' origLocale[2279057]))
    (2279230 call deinit[90188] i_x[2279223])
    label _endwrite[2279232]
    val errorExists[2074521]:bool[10] "temp"
    (2074526 'move' errorExists[2074521](2074523 '!=' error[1787034] nil[44]))
    if errorExists[2074521]
    {
      (1787040 '=' error_out[1787029] error[1787034])
      gotoErrorHandlingReturn _endwriteln[1787031] _endwriteln[1787031]
    }
    (1406691 'move' ret[1398702] ret[2278974])
    label _endwriteln[1787031]
    (1398734 return ret[1398702])
  }
  function channel(true,dynamic,false)[1060966].close[1062381](const  ref arg this[1062387]:channel(true,dynamic,false)[1060966], ref arg error_out[1784153]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val err[1062399]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169074]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169076 'move' call_tmp[2169074](2169079 call qio_int_to_err[223653] 0))
    (1062401 'move' err[1062399] call_tmp[2169074])
    const-val coerce_tmp[1062588]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062592 'move' coerce_tmp[1062588](2322271 '.v' this[1062387] _channel_internal[1060959]))
    const-val call_tmp[2224526]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224528 'move' call_tmp[2224526](2224530 'cast' c_void_ptr[149] coerce_tmp[1062588]))
    const-val call_tmp[2224533]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224535 'move' call_tmp[2224533](2224537 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2224540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224542 'move' call_tmp[2224540](2224544 'ptr_eq' call_tmp[2224526] call_tmp[2224533]))
    if call_tmp[2224540]
    {
      const-val call_tmp[1062430]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062603]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062609 'move' coerce_tmp[1062603](1062605 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[1805886]:owned SystemError[1000257] "temp"
      (1062438 call fromSyserr[1017132] coerce_tmp[1062603] "cannot close invalid channel" ret_tmp[1805886])
      (1805889 'move' call_tmp[1062430] ret_tmp[1805886])
      val call_tmp[1062441]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062612]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805820]:owned Error[966477] "temp"
      ref i_x[2187801]:owned SystemError[1000257] "temp"
      (2187805 'move' i_x[2187801](2187803 'set reference' call_tmp[1062430]))
      ref i__retArg[2187807]:owned Error[966477] "temp"
      (2187811 'move' i__retArg[2187807](2187809 'set reference' ret_tmp[1805820]))
      val _formal_tmp_x[2187814]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2187816 'move' _formal_tmp_x[2187814] i_x[2187801])
      const-val ret[2187819]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2187821]:owned SystemError[1000257] "temp"
      (2187823 'move' i_this[2187821](2187825 'set reference' _formal_tmp_x[2187814]))
      val coerce_tmp[2187827]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2187829 'move' coerce_tmp[2187827](2187831 '.v' i_this[2187821] chpl_p[1000252]))
      val call_tmp[2187834]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187836 'move' call_tmp[2187834](2187838 'cast' Error[167984] coerce_tmp[2187827]))
      ref i_this[2187846]:owned SystemError[1000257] "temp"
      (2187848 'move' i_this[2187846](2187850 'set reference' _formal_tmp_x[2187814]))
      val tmp[2187852]:SystemError[264864] "temp"
      (2187854 'move' tmp[2187852](2187856 'cast' SystemError[264864] nil[44]))
      (2187859 '.=' i_this[2187846] chpl_p[1000252] tmp[2187852])
      val coerce_tmp[2187863]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2187865 'move' coerce_tmp[2187863](2187867 'cast' object[22] call_tmp[2187834]))
      const-val call_tmp[2187870]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2187872 'move' call_tmp[2187870](2187874 'ptr_eq' coerce_tmp[2187863] nil[44]))
      if call_tmp[2187870]
      {
        (2187880 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2187883]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2187885]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2187888 call init[968113] initTemp[2187885] call_tmp[2187834])
      (2187891 'move' call_tmp[2187883] initTemp[2187885])
      (2187894 'move' ret[2187819] call_tmp[2187883])
      (2187898 call chpl__autoDestroy[1490020] _formal_tmp_x[2187814])
      (2187902 '=' i__retArg[2187807] ret[2187819])
      (1805823 'move' coerce_tmp[1062612] ret_tmp[1805820])
      const-val _formal_tmp_in_err[1062791]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062795 'move' _formal_tmp_in_err[1062791] coerce_tmp[1062612])
      (1062443 'move' call_tmp[1062441](1062446 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1062791]))
      (1784166 '=' error_out[1784153] call_tmp[1062441])
      gotoErrorHandlingReturn _endclose[1784155] _endclose[1784155]
    }
    ref call_tmp[2224208]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224210 'move' call_tmp[2224208](2224212 '.' this[1062387] home[1060954]))
    const-val call_tmp[1062461]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128511]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128513 'move' coerce_tmp[2128511](2128515 '.v' call_tmp[2224208] _instance[89978]))
    val coerce_tmp[2128518]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128520 'move' coerce_tmp[2128518](2128522 'cast' object[22] coerce_tmp[2128511]))
    const-val call_tmp[2128525]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128527 'move' call_tmp[2128525](2128529 'ptr_eq' coerce_tmp[2128518] nil[44]))
    if call_tmp[2128525]
    {
      (2128535 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1062463 'move' call_tmp[1062461](1062465 '_wide_get_locale' coerce_tmp[2128511]))
    val rvfDerefTmp[2049196]:channel(true,dynamic,false)[1060966] "temp"
    (2049200 'move' rvfDerefTmp[2049196](2049198 'deref' this[1062387]))
    val isdirect[2054918]:bool[10] "temp"
    (2054923 'move' isdirect[2054918](2054920 call chpl_doDirectExecuteOn[187469] call_tmp[1062461]))
    if isdirect[2054918]
    {
      (2054927 call on_fn[1062474] rvfDerefTmp[2049196] err[1062399])
    }
    {
      val _args_foron_fn[2054945]:_class_localson_fn[2054935] "temp"
      (2054949 'move' _args_foron_fn[2054945](2054947 'stack allocate class' _class_localson_fn[2054935]))
      (2054951 '.=' _args_foron_fn[2054945] _0_tmp[2054938] call_tmp[1062461])
      (2054955 '.=' _args_foron_fn[2054945] _1_rvfDerefTmp[2054940] rvfDerefTmp[2049196])
      ref tmp[2054959]:syserr[223603] "temp"
      (2054963 'move' tmp[2054959](2054961 'set reference' err[1062399]))
      (2054965 '.=' _args_foron_fn[2054945] _2_err[2054942] tmp[2054959])
      val _args_vforon_fn[2054969]:c_void_ptr[149] "temp"
      (2054973 'move' _args_vforon_fn[2054969](2054971 'cast_to_void_star' _args_foron_fn[2054945]))
      val _args_sizeon_fn[2054975]:int(64)[13] "temp"
      (2054979 'move' _args_sizeon_fn[2054975](2054977 'sizeof_bundle' _class_localson_fn[2054935]))
      on(2055019 call wrapon_fn[2054981] call_tmp[1062461] _args_vforon_fn[2054969] _args_sizeon_fn[2054975] _args_foron_fn[2054945])
    }
    const-val call_tmp[2168556]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168558 'move' call_tmp[2168556](2168561 call qio_err_iserr[223665] err[1062399]))
    const-val call_tmp[2168563]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168565 'move' call_tmp[2168563](2168567 '!=' call_tmp[2168556] 0))
    if call_tmp[2168563]
    {
      val error[1784170]:Error[167984] "error variable" "temp"
      (1784179 'move' error[1784170] nil[44])
      (1062528 call _ch_ioerror[1062884] this[1062387] err[1062399] "in channel.close" error[1784170])
      val errorExists[2073105]:bool[10] "temp"
      (2073110 'move' errorExists[2073105](2073107 '!=' error[1784170] nil[44]))
      if errorExists[2073105]
      {
        gotoErrorHandling handler[1784171] handler[1784171]
      }
      label handler[1784171]
      val errorExists[2073113]:bool[10] "temp"
      (2073118 'move' errorExists[2073113](2073115 '!=' error[1784170] nil[44]))
      if errorExists[2073113]
      {
        (1784186 '=' error_out[1784153] error[1784170])
        gotoErrorHandlingReturn _endclose[1784155] _endclose[1784155]
      }
    }
    label _endclose[1784155]
    (1062535 return _void[55])
  }
  function channel(false,dynamic,false)[1080701].close[1082113](const  ref arg this[1082119]:channel(false,dynamic,false)[1080701], ref arg error_out[1784949]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val err[1082131]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2169169]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2169171 'move' call_tmp[2169169](2169174 call qio_int_to_err[223653] 0))
    (1082133 'move' err[1082131] call_tmp[2169169])
    const-val coerce_tmp[1082278]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082282 'move' coerce_tmp[1082278](2322434 '.v' this[1082119] _channel_internal[1080694]))
    const-val call_tmp[2224574]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224576 'move' call_tmp[2224574](2224578 'cast' c_void_ptr[149] coerce_tmp[1082278]))
    const-val call_tmp[2224581]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224583 'move' call_tmp[2224581](2224585 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2224588]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2224590 'move' call_tmp[2224588](2224592 'ptr_eq' call_tmp[2224574] call_tmp[2224581]))
    if call_tmp[2224588]
    {
      const-val call_tmp[1082162]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082287]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082293 'move' coerce_tmp[1082287](1082289 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[1805898]:owned SystemError[1000257] "temp"
      (1082170 call fromSyserr[1017132] coerce_tmp[1082287] "cannot close invalid channel" ret_tmp[1805898])
      (1805901 'move' call_tmp[1082162] ret_tmp[1805898])
      val call_tmp[1082173]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082296]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1805838]:owned Error[966477] "temp"
      ref i_x[2188119]:owned SystemError[1000257] "temp"
      (2188123 'move' i_x[2188119](2188121 'set reference' call_tmp[1082162]))
      ref i__retArg[2188125]:owned Error[966477] "temp"
      (2188129 'move' i__retArg[2188125](2188127 'set reference' ret_tmp[1805838]))
      val _formal_tmp_x[2188132]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2188134 'move' _formal_tmp_x[2188132] i_x[2188119])
      const-val ret[2188137]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2188139]:owned SystemError[1000257] "temp"
      (2188141 'move' i_this[2188139](2188143 'set reference' _formal_tmp_x[2188132]))
      val coerce_tmp[2188145]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2188147 'move' coerce_tmp[2188145](2188149 '.v' i_this[2188139] chpl_p[1000252]))
      val call_tmp[2188152]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2188154 'move' call_tmp[2188152](2188156 'cast' Error[167984] coerce_tmp[2188145]))
      ref i_this[2188164]:owned SystemError[1000257] "temp"
      (2188166 'move' i_this[2188164](2188168 'set reference' _formal_tmp_x[2188132]))
      val tmp[2188170]:SystemError[264864] "temp"
      (2188172 'move' tmp[2188170](2188174 'cast' SystemError[264864] nil[44]))
      (2188177 '.=' i_this[2188164] chpl_p[1000252] tmp[2188170])
      val coerce_tmp[2188181]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2188183 'move' coerce_tmp[2188181](2188185 'cast' object[22] call_tmp[2188152]))
      const-val call_tmp[2188188]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2188190 'move' call_tmp[2188188](2188192 'ptr_eq' coerce_tmp[2188181] nil[44]))
      if call_tmp[2188188]
      {
        (2188198 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2188201]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2188203]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2188206 call init[968113] initTemp[2188203] call_tmp[2188152])
      (2188209 'move' call_tmp[2188201] initTemp[2188203])
      (2188212 'move' ret[2188137] call_tmp[2188201])
      (2188216 call chpl__autoDestroy[1490020] _formal_tmp_x[2188132])
      (2188220 '=' i__retArg[2188125] ret[2188137])
      (1805841 'move' coerce_tmp[1082296] ret_tmp[1805838])
      const-val _formal_tmp_in_err[1082475]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082479 'move' _formal_tmp_in_err[1082475] coerce_tmp[1082296])
      (1082175 'move' call_tmp[1082173](1082178 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1082475]))
      (1784962 '=' error_out[1784949] call_tmp[1082173])
      gotoErrorHandlingReturn _endclose[1784951] _endclose[1784951]
    }
    ref call_tmp[2229305]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229307 'move' call_tmp[2229305](2229309 '.' this[1082119] home[1080689]))
    const-val call_tmp[1082193]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2128781]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128783 'move' coerce_tmp[2128781](2128785 '.v' call_tmp[2229305] _instance[89978]))
    val coerce_tmp[2128788]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2128790 'move' coerce_tmp[2128788](2128792 'cast' object[22] coerce_tmp[2128781]))
    const-val call_tmp[2128795]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2128797 'move' call_tmp[2128795](2128799 'ptr_eq' coerce_tmp[2128788] nil[44]))
    if call_tmp[2128795]
    {
      (2128805 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (1082195 'move' call_tmp[1082193](1082197 '_wide_get_locale' coerce_tmp[2128781]))
    val rvfDerefTmp[2049374]:channel(false,dynamic,false)[1080701] "temp"
    (2049378 'move' rvfDerefTmp[2049374](2049376 'deref' this[1082119]))
    val isdirect[2056139]:bool[10] "temp"
    (2056144 'move' isdirect[2056139](2056141 call chpl_doDirectExecuteOn[187469] call_tmp[1082193]))
    if isdirect[2056139]
    {
      (2056148 call on_fn[1082206] rvfDerefTmp[2049374] err[1082131])
    }
    {
      val _args_foron_fn[2056166]:_class_localson_fn[2056156] "temp"
      (2056170 'move' _args_foron_fn[2056166](2056168 'stack allocate class' _class_localson_fn[2056156]))
      (2056172 '.=' _args_foron_fn[2056166] _0_tmp[2056159] call_tmp[1082193])
      (2056176 '.=' _args_foron_fn[2056166] _1_rvfDerefTmp[2056161] rvfDerefTmp[2049374])
      ref tmp[2056180]:syserr[223603] "temp"
      (2056184 'move' tmp[2056180](2056182 'set reference' err[1082131]))
      (2056186 '.=' _args_foron_fn[2056166] _2_err[2056163] tmp[2056180])
      val _args_vforon_fn[2056190]:c_void_ptr[149] "temp"
      (2056194 'move' _args_vforon_fn[2056190](2056192 'cast_to_void_star' _args_foron_fn[2056166]))
      val _args_sizeon_fn[2056196]:int(64)[13] "temp"
      (2056200 'move' _args_sizeon_fn[2056196](2056198 'sizeof_bundle' _class_localson_fn[2056156]))
      on(2056240 call wrapon_fn[2056202] call_tmp[1082193] _args_vforon_fn[2056190] _args_sizeon_fn[2056196] _args_foron_fn[2056166])
    }
    const-val call_tmp[2168624]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168626 'move' call_tmp[2168624](2168629 call qio_err_iserr[223665] err[1082131]))
    const-val call_tmp[2168631]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168633 'move' call_tmp[2168631](2168635 '!=' call_tmp[2168624] 0))
    if call_tmp[2168631]
    {
      val error[1784966]:Error[167984] "error variable" "temp"
      (1784975 'move' error[1784966] nil[44])
      (1082260 call _ch_ioerror[1082568] this[1082119] err[1082131] "in channel.close" error[1784966])
      val errorExists[2073465]:bool[10] "temp"
      (2073470 'move' errorExists[2073465](2073467 '!=' error[1784966] nil[44]))
      if errorExists[2073465]
      {
        gotoErrorHandling handler[1784967] handler[1784967]
      }
      label handler[1784967]
      val errorExists[2073473]:bool[10] "temp"
      (2073478 'move' errorExists[2073473](2073475 '!=' error[1784966] nil[44]))
      if errorExists[2073473]
      {
        (1784982 '=' error_out[1784949] error[1784966])
        gotoErrorHandlingReturn _endclose[1784951] _endclose[1784951]
      }
    }
    label _endclose[1784951]
    (1082267 return _void[55])
  }
  function channel(false,dynamic,false)[1080701].readBytes[1082858](const  ref arg this[1082864]:channel(false,dynamic,false)[1080701], const in arg x[1082866]:c_ptr(uint(8))[937442], const in arg len[1082870]:int(64)[13], ref arg error_out[1785075]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1082878]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130653]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2130655]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2130657 'move' call_tmp[2130655](2130660 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2130663 'move' call_tmp[2130653] call_tmp[2130655])
    const-val call_tmp[2130666]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2130668]:locale[28] "temp"
    (2130671 call chpl_localeID_to_locale[92852] call_tmp[2130653] ret_tmp[2130668])
    (2130674 'move' call_tmp[2130666] ret_tmp[2130668])
    (1803923 'move' call_tmp[1082878] call_tmp[2130666])
    ref call_tmp[2229325]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229327 'move' call_tmp[2229325](2229329 '.' this[1082864] home[1080689]))
    const-val call_tmp[1082892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1082894 'move' call_tmp[1082892](1082897 call !=[782929] call_tmp[1082878] call_tmp[2229325]))
    if call_tmp[1082892]
    {
      const-val call_tmp[1082909]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083066]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1083068 'move' new_temp[1083066](1083053 call _new[1064126] "bad remote channel.readBytes"))
      const-val initTemp[1083075]:owned IllegalArgumentError[1064577] "dead after last mention" "delay instantiation" "temp"
      (1083078 call init[1064228] initTemp[1083075] new_temp[1083066])
      (1082911 'move' call_tmp[1082909] initTemp[1083075])
      val call_tmp[1082918]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083092]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1806598]:owned Error[966477] "temp"
      ref i_x[2213328]:owned IllegalArgumentError[1064577] "temp"
      (2213332 'move' i_x[2213328](2213330 'set reference' call_tmp[1082909]))
      ref i__retArg[2213334]:owned Error[966477] "temp"
      (2213338 'move' i__retArg[2213334](2213336 'set reference' ret_tmp[1806598]))
      val _formal_tmp_x[2213341]:owned IllegalArgumentError[1064577] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2213343 'move' _formal_tmp_x[2213341] i_x[2213328])
      const-val ret[2213346]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2213348]:owned IllegalArgumentError[1064577] "temp"
      (2213350 'move' i_this[2213348](2213352 'set reference' _formal_tmp_x[2213341]))
      val coerce_tmp[2213354]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2213356 'move' coerce_tmp[2213354](2213358 '.v' i_this[2213348] chpl_p[1064572]))
      val call_tmp[2213361]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2213363 'move' call_tmp[2213361](2213365 'cast' Error[167984] coerce_tmp[2213354]))
      ref i_this[2213373]:owned IllegalArgumentError[1064577] "temp"
      (2213375 'move' i_this[2213373](2213377 'set reference' _formal_tmp_x[2213341]))
      val tmp[2213379]:IllegalArgumentError[168246] "temp"
      (2213381 'move' tmp[2213379](2213383 'cast' IllegalArgumentError[168246] nil[44]))
      (2213386 '.=' i_this[2213373] chpl_p[1064572] tmp[2213379])
      val coerce_tmp[2213390]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2213392 'move' coerce_tmp[2213390](2213394 'cast' object[22] call_tmp[2213361]))
      const-val call_tmp[2213397]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2213399 'move' call_tmp[2213397](2213401 'ptr_eq' coerce_tmp[2213390] nil[44]))
      if call_tmp[2213397]
      {
        (2213407 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2213410]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2213412]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2213415 call init[968113] initTemp[2213412] call_tmp[2213361])
      (2213418 'move' call_tmp[2213410] initTemp[2213412])
      (2213421 'move' ret[2213346] call_tmp[2213410])
      (2213425 call chpl__autoDestroy[1512515] _formal_tmp_x[2213341])
      (2213429 '=' i__retArg[2213334] ret[2213346])
      (1806601 'move' coerce_tmp[1083092] ret_tmp[1806598])
      const-val _formal_tmp_in_err[1083271]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083275 'move' _formal_tmp_in_err[1083271] coerce_tmp[1083092])
      (1082920 'move' call_tmp[1082918](1082923 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1083271]))
      (1785088 '=' error_out[1785075] call_tmp[1082918])
      ref i_x[2224941]:locale[28] "temp"
      (2224945 'move' i_x[2224941](2224943 'set reference' call_tmp[1082878]))
      (2224949 call deinit[90188] i_x[2224941])
      gotoErrorHandlingReturn _endreadBytes[1785077] _endreadBytes[1785077]
    }
    ref i_x[2224953]:locale[28] "temp"
    (2224957 'move' i_x[2224953](2224955 'set reference' call_tmp[1082878]))
    (2224961 call deinit[90188] i_x[2224953])
    const-val call_tmp[1082936]:syserr[223603] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083328]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083334 'move' coerce_tmp[1083328](1083330 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083336]:qio_channel_ptr_t[231484] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083340 'move' coerce_tmp[1083336](2322474 '.v' this[1082864] _channel_internal[1080694]))
    (1082938 'move' call_tmp[1082936](1082941 call qio_channel_read_amt[1083302] coerce_tmp[1083328] coerce_tmp[1083336] x[1082866] len[1082870]))
    const-val call_tmp[2168641]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168643 'move' call_tmp[2168641](2168646 call qio_err_iserr[223665] call_tmp[1082936]))
    const-val call_tmp[2168648]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168650 'move' call_tmp[2168648](2168652 '!=' call_tmp[2168641] 0))
    if call_tmp[2168648]
    {
      val error[1785092]:Error[167984] "error variable" "temp"
      (1785101 'move' error[1785092] nil[44])
      (1082966 call _ch_ioerror[1082568] this[1082864] call_tmp[1082936] "in channel.readBytes" error[1785092])
      val errorExists[2073521]:bool[10] "temp"
      (2073526 'move' errorExists[2073521](2073523 '!=' error[1785092] nil[44]))
      if errorExists[2073521]
      {
        gotoErrorHandling handler[1785093] handler[1785093]
      }
      label handler[1785093]
      val errorExists[2073529]:bool[10] "temp"
      (2073534 'move' errorExists[2073529](2073531 '!=' error[1785092] nil[44]))
      if errorExists[2073529]
      {
        (1785108 '=' error_out[1785075] error[1785092])
        gotoErrorHandlingReturn _endreadBytes[1785077] _endreadBytes[1785077]
      }
    }
    label _endreadBytes[1785077]
    (1082973 return _void[55])
  }
  const-val stdin[250227]:channel(false,dynamic,true)[985646] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250254]:channel(true,dynamic,true)[1021844] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250283]:channel(true,dynamic,true)[1021844] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250513]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250518]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[721885]:6*string[985070] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[724016]:file[235599] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724023]:channel(false,dynamic,true)[985646] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1016916]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1016980]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017028]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017606]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724028]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724033]:file[235599] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724040]:channel(true,dynamic,true)[1021844] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022491]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022555]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022606]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022643]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724045]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724050]:file[235599] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724057]:channel(true,dynamic,true)[1021844] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1023927]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1023938]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1023949]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1023960]:iostyle[231863] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935616](ref arg this[1781259]:file[235599]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[985701]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (985705 'move' coerce_tmp[985701](2320975 '.v' this[1781259] _file_internal[235587]))
    (235924 call qio_file_release[232657] coerce_tmp[985701])
    (2320981 '.=' this[1781259] _file_internal[235587] QIO_FILE_PTR_NULL[231461])
    (935623 return _void[55])
  }
  function on_fn[935625](const in arg this[1781261]:file[235599], ref arg ret[1781263]:iostyle[231863], ref arg error_out[1783340]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1783344]:Error[167984] "error variable" "temp"
    (1783353 'move' error[1783344] nil[44])
    ref rvfRerefTmp[2048885]:file[235599] "temp"
    (2048889 'move' rvfRerefTmp[2048885](2048886 'set reference' this[1781261]))
    (236002 call checkAssumingLocal[235787] rvfRerefTmp[2048885] error[1783344])
    val errorExists[2072713]:bool[10] "temp"
    (2072718 'move' errorExists[2072713](2072715 '!=' error[1783344] nil[44]))
    if errorExists[2072713]
    {
      gotoErrorHandling handler[1783345] handler[1783345]
    }
    label handler[1783345]
    val errorExists[2072721]:bool[10] "temp"
    (2072726 'move' errorExists[2072721](2072723 '!=' error[1783344] nil[44]))
    if errorExists[2072721]
    {
      (1783360 '=' error_out[1783340] error[1783344])
      gotoErrorHandlingReturn _endon_fn[1783342] _endon_fn[1783342]
    }
    val local_style[236008]:iostyle[231863] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1017590]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017594 'move' coerce_tmp[1017590](2320989 '.v' this[1781261] _file_internal[235587]))
    (236016 call qio_file_get_style[232840] coerce_tmp[1017590] local_style[236008])
    ref i__arg2[2177796]:iostyle[231863] "temp"
    (2177800 'move' i__arg2[2177796](2177798 'set reference' local_style[236008]))
    (2177803 '=' ret[1781263] i__arg2[2177796])
    label _endon_fn[1783342]
    (935632 return _void[55])
  }
  function on_fn[935634](const in arg this[1781265]:file[235599], ref arg err[1781267]:syserr[223603]) : void[4] "on" "resolved"
  {
    const-val call_tmp[715705]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1060852]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060856 'move' coerce_tmp[1060852](2320997 '.v' this[1781265] _file_internal[235587]))
    (715708 'move' call_tmp[715705](236084 call qio_file_close[232767] coerce_tmp[1060852]))
    (2168853 '=' err[1781267] call_tmp[715705])
    (935641 return _void[55])
  }
  function on_fn[935652](const in arg this[1781269]:file[235599], ref arg err[1781271]:syserr[223603], ref arg ret[1781273]:string[26], ref arg error_out[1783372]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1783376]:Error[167984] "error variable" "temp"
    (1783385 'move' error[1783376] nil[44])
    ref rvfRerefTmp[2048927]:file[235599] "temp"
    (2048931 'move' rvfRerefTmp[2048927](2048928 'set reference' this[1781269]))
    (236260 call checkAssumingLocal[235787] rvfRerefTmp[2048927] error[1783376])
    val errorExists[2072729]:bool[10] "temp"
    (2072734 'move' errorExists[2072729](2072731 '!=' error[1783376] nil[44]))
    if errorExists[2072729]
    {
      gotoErrorHandling handler[1783377] handler[1783377]
    }
    label handler[1783377]
    val errorExists[2072737]:bool[10] "temp"
    (2072742 'move' errorExists[2072737](2072739 '!=' error[1783376] nil[44]))
    if errorExists[2072737]
    {
      (1783392 '=' error_out[1783372] error[1783376])
      gotoErrorHandlingReturn _endon_fn[1783374] _endon_fn[1783374]
    }
    val tmp[236266]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021486 'move' tmp[236266](1021484 'cast' c_string[19] nil[44]))
    val tmp2[236271]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021491 'move' tmp2[236271](1021489 'cast' c_string[19] nil[44]))
    const-val call_tmp[715791]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019138]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019142 'move' coerce_tmp[1019138](2321006 '.v' this[1781269] _file_internal[235587]))
    (715794 'move' call_tmp[715791](236280 call qio_file_path[233698] coerce_tmp[1019138] tmp[236266]))
    (2168859 '=' err[1781271] call_tmp[715791])
    const-val tmp[1781943]:syserr[223603] "temp"
    (1781946 'move' tmp[1781943](1781944 'deref' err[1781271]))
    const-val call_tmp[2168267]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168269 'move' call_tmp[2168267](2168272 call qio_err_iserr[223665] tmp[1781943]))
    const-val call_tmp[2168274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168276 'move' call_tmp[2168274](2168278 '==' call_tmp[2168267] 0))
    if call_tmp[2168274]
    {
      const-val call_tmp[715813]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019151]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019155 'move' coerce_tmp[1019151](2321013 '.v' this[1781269] _file_internal[235587]))
      (715816 'move' call_tmp[715813](236293 call qio_shortest_path[233714] coerce_tmp[1019151] tmp2[236271] tmp[236266]))
      (2168865 '=' err[1781271] call_tmp[715813])
    }
    ref i_cs[2083680]:c_string[19] "temp"
    (2083684 'move' i_cs[2083680](2083682 'set reference' tmp[236266]))
    const-val call_tmp[2083687]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083689 'move' call_tmp[2083687](2083691 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2083694]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083696 'move' call_tmp[2083694](2083698 'cast' c_string[19] call_tmp[2083687]))
    const-val coerce_tmp[2083701]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083703 'move' coerce_tmp[2083701] tmp[236266])
    const-val call_tmp[2083707]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083709 'move' call_tmp[2083707](2083711 'string_compare' coerce_tmp[2083701] call_tmp[2083694]))
    const-val call_tmp[2083714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083716 'move' call_tmp[2083714](2083718 '!=' call_tmp[2083707] 0))
    if call_tmp[2083714]
    {
      (2083724 call chpl_rt_free_c_string[22717] i_cs[2083680])
    }
    const-val tmp[1781949]:syserr[223603] "temp"
    (1781952 'move' tmp[1781949](1781950 'deref' err[1781271]))
    const-val call_tmp[2168284]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168286 'move' call_tmp[2168284](2168289 call qio_err_iserr[223665] tmp[1781949]))
    const-val call_tmp[2168291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168293 'move' call_tmp[2168291](2168295 '==' call_tmp[2168284] 0))
    if call_tmp[2168291]
    {
      const-val call_tmp[715828]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1783405]:Error[167984] "error variable" "temp"
      (1783407 'move' error[1783405] nil[44])
      const-val call_tmp[2165723]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165725 'move' call_tmp[2165723](2165727 'string_length_bytes' tmp2[236271]))
      val errorExists[2072745]:bool[10] "temp"
      (2072750 'move' errorExists[2072745](2072747 '!=' error[1783405] nil[44]))
      if errorExists[2072745]
      {
        (1783411 '=' error_out[1783372] error[1783405])
        gotoErrorHandlingReturn _endon_fn[1783374] _endon_fn[1783374]
      }
      val error[1783420]:Error[167984] "error variable" "temp"
      (1783422 'move' error[1783420] nil[44])
      const-val ret[2104414]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2104416]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
      (2104418 'move' call_tmp[2104416](2104420 'cast' c_ptr(uint(8))[937442] tmp2[236271]))
      val error[2104425]:Error[167984] "error variable" "temp"
      (2104427 'move' error[2104425] nil[44])
      const-val ret[2104430]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2104432]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2104434]:Error[167984] "error variable" "temp"
      (2104436 'move' error[2104434] nil[44])
      const-val ret_tmp[2104439]:string[26] "temp"
      (2104442 call decodeByteBuffer[173938] call_tmp[2104416] call_tmp[2165723] escape[173698] error[2104434] ret_tmp[2104439])
      (2104448 'move' call_tmp[2104432] ret_tmp[2104439])
      val errorExists[2104451]:bool[10] "temp"
      (2104453 'move' errorExists[2104451](2104455 '!=' error[2104434] nil[44]))
      if errorExists[2104451]
      {
        (2104460 '=' error[2104425] error[2104434])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104469] _endcreateStringWithNewBuffer[2104469]
      }
      (2104466 'move' ret[2104430] call_tmp[2104432])
      label _endcreateStringWithNewBuffer[2104469]
      val errorExists[2104474]:bool[10] "temp"
      (2104476 'move' errorExists[2104474](2104478 '!=' error[2104425] nil[44]))
      if errorExists[2104474]
      {
        (2104483 '=' error[1783420] error[2104425])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104492] _endcreateStringWithNewBuffer[2104492]
      }
      (2104489 'move' ret[2104414] ret[2104430])
      label _endcreateStringWithNewBuffer[2104492]
      (1802439 'move' call_tmp[715828] ret[2104414])
      val errorExists[2072753]:bool[10] "temp"
      (2072758 'move' errorExists[2072753](2072755 '!=' error[1783420] nil[44]))
      if errorExists[2072753]
      {
        (1783426 '=' error_out[1783372] error[1783420])
        gotoErrorHandlingReturn _endon_fn[1783374] _endon_fn[1783374]
      }
      (236320 call =[38272] ret[1781273] call_tmp[715828])
      ref i_x[2093775]:string[26] "temp"
      (2093779 'move' i_x[2093775](2093777 'set reference' call_tmp[715828]))
      (2093783 call deinit[30834] i_x[2093775])
    }
    ref i_cs[2083729]:c_string[19] "temp"
    (2083733 'move' i_cs[2083729](2083731 'set reference' tmp2[236271]))
    const-val call_tmp[2083736]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083738 'move' call_tmp[2083736](2083740 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2083743]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083745 'move' call_tmp[2083743](2083747 'cast' c_string[19] call_tmp[2083736]))
    const-val coerce_tmp[2083750]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2083752 'move' coerce_tmp[2083750] tmp2[236271])
    const-val call_tmp[2083756]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083758 'move' call_tmp[2083756](2083760 'string_compare' coerce_tmp[2083750] call_tmp[2083743]))
    const-val call_tmp[2083763]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2083765 'move' call_tmp[2083763](2083767 '!=' call_tmp[2083756] 0))
    if call_tmp[2083763]
    {
      (2083773 call chpl_rt_free_c_string[22717] i_cs[2083729])
    }
    label _endon_fn[1783374]
    (935659 return _void[55])
  }
  function on_fn[1016714](ref arg ret[1781281]:channel(false,dynamic,true)[985646], const in arg hints[1781283]:int(32)[95], ref arg err[1781285]:syserr[223603], const in arg start[1781287]:int(64)[13], const in arg style[1781289]:iostyle[231863], const in arg end[1781291]:int(64)[13], const in arg this[1781293]:file[235599], ref arg error_out[1783543]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1783547]:Error[167984] "error variable" "temp"
    (1783556 'move' error[1783547] nil[44])
    ref rvfRerefTmp[2048956]:file[235599] "temp"
    (2048960 'move' rvfRerefTmp[2048956](2048957 'set reference' this[1781293]))
    (1016725 call checkAssumingLocal[235787] rvfRerefTmp[2048956] error[1783547])
    val errorExists[2072809]:bool[10] "temp"
    (2072814 'move' errorExists[2072809](2072811 '!=' error[1783547] nil[44]))
    if errorExists[2072809]
    {
      gotoErrorHandling handler[1783548] handler[1783548]
    }
    label handler[1783548]
    val errorExists[2072817]:bool[10] "temp"
    (2072822 'move' errorExists[2072817](2072819 '!=' error[1783547] nil[44]))
    if errorExists[2072817]
    {
      (1783563 '=' error_out[1783543] error[1783547])
      gotoErrorHandlingReturn _endon_fn[1783545] _endon_fn[1783545]
    }
    const-val call_tmp[1016727]:channel(false,dynamic,true)[985646] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1017650]:channel(false,dynamic,true)[985646] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1018449]:syserr[223603] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2048949]:file[235599] "temp"
    (2048953 'move' rvfRerefTmp[2048949](2048950 'set reference' this[1781293]))
    (1017653 call init[1017666] initTemp[1017650] rvfRerefTmp[2048949] _formal_tmp_out_error[1018449] hints[1781283] start[1781287] end[1781291] style[1781289])
    (2168871 '=' err[1781285] _formal_tmp_out_error[1018449])
    (1016729 'move' call_tmp[1016727] initTemp[1017650])
    (1016743 call =[1018458] ret[1781281] call_tmp[1016727])
    ref i_x[2283311]:channel(false,dynamic,true)[985646] "temp"
    (2283315 'move' i_x[2283311](2283313 'set reference' call_tmp[1016727]))
    (2283319 call deinit[1444880] i_x[2283311])
    label _endon_fn[1783545]
    (1016749 return _void[55])
  }
  function on_fn[1017744](const in arg start[1781295]:int(64)[13], const in arg f[1781297]:file[235599], ref arg _formal_tmp_error[1781299]:syserr[223603], const in arg end[1781301]:int(64)[13], const in arg hints[1781303]:int(32)[95], const in arg local_style[1781305]:iostyle[231863], ref arg this[1781307]:channel(false,dynamic,true)[985646]) : void[4] "on" "resolved"
  {
    ref call_tmp[2188555]:locale[28] "dead after last mention" "maybe param" "temp"
    (2188557 'move' call_tmp[2188555](2188559 '.' this[1781307] home[985634]))
    ref call_tmp[2177991]:locale[28] "dead after last mention" "maybe param" "temp"
    (2177993 'move' call_tmp[2177991](2177995 '.' f[1781297] home[235581]))
    (1017767 call =[90634] call_tmp[2188555] call_tmp[2177991])
    ref call_tmp[2188649]:qio_channel_ptr_t[231484] "dead after last mention" "maybe param" "temp"
    (2188651 'move' call_tmp[2188649](2188653 '.' this[1781307] _channel_internal[985639]))
    const-val call_tmp[1017852]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018418]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018422 'move' coerce_tmp[1018418](2321458 '.v' f[1781297] _file_internal[235587]))
    const-val coerce_tmp[1018424]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018430 'move' coerce_tmp[1018424](1018426 'cast' int(32)[95] 1))
    const-val coerce_tmp[1018432]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018438 'move' coerce_tmp[1018432](1018434 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2048990]:iostyle[231863] "temp"
    (2048994 'move' rvfRerefTmp[2048990](2048991 'set reference' local_style[1781305]))
    (1017854 'move' call_tmp[1017852](1017857 call qio_channel_create[232897] call_tmp[2188649] coerce_tmp[1018418] hints[1781303] coerce_tmp[1018424] coerce_tmp[1018432] start[1781295] end[1781301] rvfRerefTmp[2048990]))
    (2168877 '=' _formal_tmp_error[1781299] call_tmp[1017852])
    (1017870 return _void[55])
  }
  function on_fn[1018684](const in arg rhs[1781309]:channel(false,dynamic,true)[985646]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019074]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019078 'move' coerce_tmp[1019074](2321497 '.v' rhs[1781309] _channel_internal[985639]))
    (1018699 call qio_channel_retain[232970] coerce_tmp[1019074])
    (1018701 return _void[55])
  }
  function on_fn[1018728](const  ref arg lhs[1781311]:channel(false,dynamic,true)[985646]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019093]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019097 'move' coerce_tmp[1019093](2321504 '.v' lhs[1781311] _channel_internal[985639]))
    (1018743 call qio_channel_release[232980] coerce_tmp[1019093])
    (1018745 return _void[55])
  }
  function on_fn[1022289](const in arg hints[1781317]:int(32)[95], ref arg err[1781319]:syserr[223603], const in arg start[1781321]:int(64)[13], const in arg end[1781323]:int(64)[13], const in arg style[1781325]:iostyle[231863], const in arg this[1781327]:file[235599], ref arg ret[1781329]:channel(true,dynamic,true)[1021844], ref arg error_out[1783659]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1783663]:Error[167984] "error variable" "temp"
    (1783672 'move' error[1783663] nil[44])
    ref rvfRerefTmp[2049033]:file[235599] "temp"
    (2049037 'move' rvfRerefTmp[2049033](2049034 'set reference' this[1781327]))
    (1022300 call checkAssumingLocal[235787] rvfRerefTmp[2049033] error[1783663])
    val errorExists[2072857]:bool[10] "temp"
    (2072862 'move' errorExists[2072857](2072859 '!=' error[1783663] nil[44]))
    if errorExists[2072857]
    {
      gotoErrorHandling handler[1783664] handler[1783664]
    }
    label handler[1783664]
    val errorExists[2072865]:bool[10] "temp"
    (2072870 'move' errorExists[2072865](2072867 '!=' error[1783663] nil[44]))
    if errorExists[2072865]
    {
      (1783679 '=' error_out[1783659] error[1783663])
      gotoErrorHandlingReturn _endon_fn[1783661] _endon_fn[1783661]
    }
    const-val call_tmp[1022302]:channel(true,dynamic,true)[1021844] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1022686]:channel(true,dynamic,true)[1021844] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1023157]:syserr[223603] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2049026]:file[235599] "temp"
    (2049030 'move' rvfRerefTmp[2049026](2049027 'set reference' this[1781327]))
    (1022689 call init[1022702] initTemp[1022686] rvfRerefTmp[2049026] _formal_tmp_out_error[1023157] hints[1781317] start[1781321] end[1781323] style[1781325])
    (2168883 '=' err[1781319] _formal_tmp_out_error[1023157])
    (1022304 'move' call_tmp[1022302] initTemp[1022686])
    (1022318 call =[1023166] ret[1781329] call_tmp[1022302])
    ref i_x[2285754]:channel(true,dynamic,true)[1021844] "temp"
    (2285758 'move' i_x[2285754](2285756 'set reference' call_tmp[1022302]))
    (2285762 call deinit[1507859] i_x[2285754])
    label _endon_fn[1783661]
    (1022324 return _void[55])
  }
  function on_fn[1022780](const in arg local_style[1781331]:iostyle[231863], const in arg end[1781333]:int(64)[13], const in arg start[1781335]:int(64)[13], const in arg f[1781337]:file[235599], ref arg _formal_tmp_error[1781339]:syserr[223603], ref arg this[1781341]:channel(true,dynamic,true)[1021844], const in arg hints[1781343]:int(32)[95]) : void[4] "on" "resolved"
  {
    ref call_tmp[2189646]:locale[28] "dead after last mention" "maybe param" "temp"
    (2189648 'move' call_tmp[2189646](2189650 '.' this[1781341] home[1021832]))
    ref call_tmp[2178001]:locale[28] "dead after last mention" "maybe param" "temp"
    (2178003 'move' call_tmp[2178001](2178005 '.' f[1781337] home[235581]))
    (1022803 call =[90634] call_tmp[2189646] call_tmp[2178001])
    ref call_tmp[2189720]:qio_channel_ptr_t[231484] "dead after last mention" "maybe param" "temp"
    (2189722 'move' call_tmp[2189720](2189724 '.' this[1781341] _channel_internal[1021837]))
    const-val call_tmp[1022888]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1023126]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023130 'move' coerce_tmp[1023126](2321733 '.v' f[1781337] _file_internal[235587]))
    const-val coerce_tmp[1023132]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023138 'move' coerce_tmp[1023132](1023134 'cast' int(32)[95] 0))
    const-val coerce_tmp[1023140]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023146 'move' coerce_tmp[1023140](1023142 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2049046]:iostyle[231863] "temp"
    (2049050 'move' rvfRerefTmp[2049046](2049047 'set reference' local_style[1781331]))
    (1022890 'move' call_tmp[1022888](1022893 call qio_channel_create[232897] call_tmp[2189720] coerce_tmp[1023126] hints[1781343] coerce_tmp[1023132] coerce_tmp[1023140] start[1781335] end[1781333] rvfRerefTmp[2049046]))
    (2168889 '=' _formal_tmp_error[1781339] call_tmp[1022888])
    (1022906 return _void[55])
  }
  function on_fn[1023392](const in arg rhs[1781345]:channel(true,dynamic,true)[1021844]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023782]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023786 'move' coerce_tmp[1023782](2321772 '.v' rhs[1781345] _channel_internal[1021837]))
    (1023407 call qio_channel_retain[232970] coerce_tmp[1023782])
    (1023409 return _void[55])
  }
  function on_fn[1023436](const  ref arg lhs[1781347]:channel(true,dynamic,true)[1021844]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023801]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023805 'move' coerce_tmp[1023801](2321779 '.v' lhs[1781347] _channel_internal[1021837]))
    (1023451 call qio_channel_release[232980] coerce_tmp[1023801])
    (1023453 return _void[55])
  }
  function on_fn[1061041](const in arg this[1781361]:file[235599], ref arg err[1781363]:syserr[223603], const in arg hints[1781365]:int(32)[95], const in arg start[1781367]:int(64)[13], ref arg ret[1781369]:channel(true,dynamic,false)[1060966], const in arg end[1781371]:int(64)[13], const in arg style[1781373]:iostyle[231863], ref arg error_out[1784090]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1784094]:Error[167984] "error variable" "temp"
    (1784103 'move' error[1784094] nil[44])
    ref rvfRerefTmp[2049133]:file[235599] "temp"
    (2049137 'move' rvfRerefTmp[2049133](2049134 'set reference' this[1781361]))
    (1061052 call checkAssumingLocal[235787] rvfRerefTmp[2049133] error[1784094])
    val errorExists[2073081]:bool[10] "temp"
    (2073086 'move' errorExists[2073081](2073083 '!=' error[1784094] nil[44]))
    if errorExists[2073081]
    {
      gotoErrorHandling handler[1784095] handler[1784095]
    }
    label handler[1784095]
    val errorExists[2073089]:bool[10] "temp"
    (2073094 'move' errorExists[2073089](2073091 '!=' error[1784094] nil[44]))
    if errorExists[2073089]
    {
      (1784110 '=' error_out[1784090] error[1784094])
      gotoErrorHandlingReturn _endon_fn[1784092] _endon_fn[1784092]
    }
    const-val call_tmp[1061054]:channel(true,dynamic,false)[1060966] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1061399]:channel(true,dynamic,false)[1060966] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1061870]:syserr[223603] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2049126]:file[235599] "temp"
    (2049130 'move' rvfRerefTmp[2049126](2049127 'set reference' this[1781361]))
    (1061402 call init[1061415] initTemp[1061399] rvfRerefTmp[2049126] _formal_tmp_out_error[1061870] hints[1781365] start[1781367] end[1781371] style[1781373])
    (2168895 '=' err[1781363] _formal_tmp_out_error[1061870])
    (1061056 'move' call_tmp[1061054] initTemp[1061399])
    (1061070 call =[1061879] ret[1781369] call_tmp[1061054])
    ref i_x[2227714]:channel(true,dynamic,false)[1060966] "temp"
    (2227718 'move' i_x[2227714](2227716 'set reference' call_tmp[1061054]))
    (2227722 call deinit[1510035] i_x[2227714])
    label _endon_fn[1784092]
    (1061076 return _void[55])
  }
  function on_fn[1061493](ref arg this[1781375]:channel(true,dynamic,false)[1060966], const in arg start[1781377]:int(64)[13], const in arg f[1781379]:file[235599], ref arg _formal_tmp_error[1781381]:syserr[223603], const in arg end[1781383]:int(64)[13], const in arg hints[1781385]:int(32)[95], const in arg local_style[1781387]:iostyle[231863]) : void[4] "on" "resolved"
  {
    ref call_tmp[2224288]:locale[28] "dead after last mention" "maybe param" "temp"
    (2224290 'move' call_tmp[2224288](2224292 '.' this[1781375] home[1060954]))
    ref call_tmp[2178011]:locale[28] "dead after last mention" "maybe param" "temp"
    (2178013 'move' call_tmp[2178011](2178015 '.' f[1781379] home[235581]))
    (1061516 call =[90634] call_tmp[2224288] call_tmp[2178011])
    ref call_tmp[2224382]:qio_channel_ptr_t[231484] "dead after last mention" "maybe param" "temp"
    (2224384 'move' call_tmp[2224382](2224386 '.' this[1781375] _channel_internal[1060959]))
    const-val call_tmp[1061601]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1061839]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061843 'move' coerce_tmp[1061839](2322216 '.v' f[1781379] _file_internal[235587]))
    const-val coerce_tmp[1061845]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061851 'move' coerce_tmp[1061845](1061847 'cast' int(32)[95] 0))
    const-val coerce_tmp[1061853]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061859 'move' coerce_tmp[1061853](1061855 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2049175]:iostyle[231863] "temp"
    (2049179 'move' rvfRerefTmp[2049175](2049176 'set reference' local_style[1781387]))
    (1061603 'move' call_tmp[1061601](1061606 call qio_channel_create[232897] call_tmp[2224382] coerce_tmp[1061839] hints[1781385] coerce_tmp[1061845] coerce_tmp[1061853] start[1781377] end[1781383] rvfRerefTmp[2049175]))
    (2168901 '=' _formal_tmp_error[1781381] call_tmp[1061601])
    (1061619 return _void[55])
  }
  function on_fn[1062105](const in arg rhs[1781389]:channel(true,dynamic,false)[1060966]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062304]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062308 'move' coerce_tmp[1062304](2322255 '.v' rhs[1781389] _channel_internal[1060959]))
    (1062120 call qio_channel_retain[232970] coerce_tmp[1062304])
    (1062122 return _void[55])
  }
  function on_fn[1062149](const  ref arg lhs[1781391]:channel(true,dynamic,false)[1060966]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062323]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062327 'move' coerce_tmp[1062323](2322262 '.v' lhs[1781391] _channel_internal[1060959]))
    (1062164 call qio_channel_release[232980] coerce_tmp[1062323])
    (1062166 return _void[55])
  }
  function on_fn[1062474](const in arg this[1781393]:channel(true,dynamic,false)[1060966], ref arg err[1781395]:syserr[223603]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1062496]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062867]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062873 'move' coerce_tmp[1062867](1062869 'cast' int(32)[95] 0))
    const-val coerce_tmp[1062875]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062879 'move' coerce_tmp[1062875](2322282 '.v' this[1781393] _channel_internal[1060959]))
    (1062498 'move' call_tmp[1062496](1062501 call qio_channel_close[233159] coerce_tmp[1062867] coerce_tmp[1062875]))
    (2168907 '=' err[1781395] call_tmp[1062496])
    (1062510 return _void[55])
  }
  function on_fn[1062951](const  ref arg this[1781397]:channel(true,dynamic,false)[1060966], ref arg path[1781399]:string[26], ref arg offset[1781401]:int(64)[13], ref arg error_out[1784245]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1062957]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063159 'move' tmp_path[1062957](1063157 'cast' c_string[19] nil[44]))
    val tmp_offset[1062963]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063162 'move' tmp_offset[1062963] 0)
    (2169554 call qio_int_to_err[223653] 0)
    const-val call_tmp[1063005]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063114]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063120 'move' coerce_tmp[1063114](1063116 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063122]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063126 'move' coerce_tmp[1063122](2322294 '.v' this[1781397] _channel_internal[1060959]))
    (1063007 'move' call_tmp[1063005](1063010 call qio_channel_path_offset[232943] coerce_tmp[1063114] coerce_tmp[1063122] tmp_path[1062957] tmp_offset[1062963]))
    const-val call_tmp[2168301]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168303 'move' call_tmp[2168301](2168306 call qio_err_iserr[223665] call_tmp[1063005]))
    const-val call_tmp[2168308]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168310 'move' call_tmp[2168308](2168312 '==' call_tmp[2168301] 0))
    if call_tmp[2168308]
    {
      const-val call_tmp[1063039]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1784250]:Error[167984] "error variable" "temp"
      (1784252 'move' error[1784250] nil[44])
      const-val call_tmp[2165745]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165747 'move' call_tmp[2165745](2165749 'string_length_bytes' tmp_path[1062957]))
      val errorExists[2073145]:bool[10] "temp"
      (2073150 'move' errorExists[2073145](2073147 '!=' error[1784250] nil[44]))
      if errorExists[2073145]
      {
        (1784256 '=' error_out[1784245] error[1784250])
        gotoErrorHandlingReturn _endon_fn[1784247] _endon_fn[1784247]
      }
      val error[1784265]:Error[167984] "error variable" "temp"
      (1784267 'move' error[1784265] nil[44])
      const-val ret[2104904]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2104906]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
      (2104908 'move' call_tmp[2104906](2104910 'cast' c_ptr(uint(8))[937442] tmp_path[1062957]))
      val error[2104915]:Error[167984] "error variable" "temp"
      (2104917 'move' error[2104915] nil[44])
      const-val ret[2104920]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2104922]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2104924]:Error[167984] "error variable" "temp"
      (2104926 'move' error[2104924] nil[44])
      const-val ret_tmp[2104929]:string[26] "temp"
      (2104932 call decodeByteBuffer[173938] call_tmp[2104906] call_tmp[2165745] replace[173694] error[2104924] ret_tmp[2104929])
      (2104938 'move' call_tmp[2104922] ret_tmp[2104929])
      val errorExists[2104941]:bool[10] "temp"
      (2104943 'move' errorExists[2104941](2104945 '!=' error[2104924] nil[44]))
      if errorExists[2104941]
      {
        (2104950 '=' error[2104915] error[2104924])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104959] _endcreateStringWithNewBuffer[2104959]
      }
      (2104956 'move' ret[2104920] call_tmp[2104922])
      label _endcreateStringWithNewBuffer[2104959]
      val errorExists[2104964]:bool[10] "temp"
      (2104966 'move' errorExists[2104964](2104968 '!=' error[2104915] nil[44]))
      if errorExists[2104964]
      {
        (2104973 '=' error[1784265] error[2104915])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2104982] _endcreateStringWithNewBuffer[2104982]
      }
      (2104979 'move' ret[2104904] ret[2104920])
      label _endcreateStringWithNewBuffer[2104982]
      (1802469 'move' call_tmp[1063039] ret[2104904])
      val errorExists[2073153]:bool[10] "temp"
      (2073158 'move' errorExists[2073153](2073155 '!=' error[1784265] nil[44]))
      if errorExists[2073153]
      {
        (1784271 '=' error_out[1784245] error[1784265])
        gotoErrorHandlingReturn _endon_fn[1784247] _endon_fn[1784247]
      }
      (1063049 call =[38272] path[1781399] call_tmp[1063039])
      ref i_x[2094303]:string[26] "temp"
      (2094307 'move' i_x[2094303](2094305 'set reference' call_tmp[1063039]))
      (2094311 call deinit[30834] i_x[2094303])
      ref i_cs[2083778]:c_string[19] "temp"
      (2083782 'move' i_cs[2083778](2083780 'set reference' tmp_path[1062957]))
      const-val call_tmp[2083785]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083787 'move' call_tmp[2083785](2083789 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2083792]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083794 'move' call_tmp[2083792](2083796 'cast' c_string[19] call_tmp[2083785]))
      const-val coerce_tmp[2083799]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2083801 'move' coerce_tmp[2083799] tmp_path[1062957])
      const-val call_tmp[2083805]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083807 'move' call_tmp[2083805](2083809 'string_compare' coerce_tmp[2083799] call_tmp[2083792]))
      const-val call_tmp[2083812]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083814 'move' call_tmp[2083812](2083816 '!=' call_tmp[2083805] 0))
      if call_tmp[2083812]
      {
        (2083822 call chpl_rt_free_c_string[22717] i_cs[2083778])
      }
      (2085817 '=' offset[1781401] tmp_offset[1062963])
    }
    label _endon_fn[1784247]
    (1063068 return _void[55])
  }
  function on_fn[1066108](const in arg this[1781403]:channel(true,dynamic,false)[1060966], const  ref arg args[1781405]:1*byteIndex[1057100], const in arg origLocale[1781407]:locale[28], ref arg error_out[1784330]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1784334]:Error[167984] "error variable" "temp"
    (1784343 'move' error[1784334] nil[44])
    ref rvfRerefTmp[2049217]:channel(true,dynamic,false)[1060966] "temp"
    (2049221 'move' rvfRerefTmp[2049217](2049218 'set reference' this[1781403]))
    const-val call_tmp[2226274]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226276 'move' call_tmp[2226274](2226279 call qio_int_to_err[223653] 0))
    const-val coerce_tmp[2226284]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2226286 'move' coerce_tmp[2226284](2226288 '.v' this[1781403] _channel_internal[1060959]))
    const-val call_tmp[2226291]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226293 'move' call_tmp[2226291](2226295 'cast' c_void_ptr[149] coerce_tmp[2226284]))
    const-val call_tmp[2226298]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226300 'move' call_tmp[2226298](2226302 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226305]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226307 'move' call_tmp[2226305](2226309 'ptr_eq' call_tmp[2226291] call_tmp[2226298]))
    if call_tmp[2226305]
    {
      const-val call_tmp[2226314]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2226316]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226318 'move' coerce_tmp[2226316](2226320 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2226323]:owned SystemError[1000257] "temp"
      (2226326 call fromSyserr[1017132] coerce_tmp[2226316] "Operation attempted on an invalid channel" ret_tmp[2226323])
      (2226330 'move' call_tmp[2226314] ret_tmp[2226323])
      val call_tmp[2226333]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2226335]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2226337]:owned Error[966477] "temp"
      ref i_x[2226339]:owned SystemError[1000257] "temp"
      (2226341 'move' i_x[2226339](2226343 'set reference' call_tmp[2226314]))
      ref i__retArg[2226345]:owned Error[966477] "temp"
      (2226347 'move' i__retArg[2226345](2226349 'set reference' ret_tmp[2226337]))
      val _formal_tmp_x[2226351]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226353 'move' _formal_tmp_x[2226351] i_x[2226339])
      const-val ret[2226356]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2226358]:owned SystemError[1000257] "temp"
      (2226360 'move' i_this[2226358](2226362 'set reference' _formal_tmp_x[2226351]))
      val coerce_tmp[2226364]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226366 'move' coerce_tmp[2226364](2226368 '.v' i_this[2226358] chpl_p[1000252]))
      val call_tmp[2226371]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226373 'move' call_tmp[2226371](2226375 'cast' Error[167984] coerce_tmp[2226364]))
      ref i_this[2226383]:owned SystemError[1000257] "temp"
      (2226385 'move' i_this[2226383](2226387 'set reference' _formal_tmp_x[2226351]))
      val tmp[2226389]:SystemError[264864] "temp"
      (2226391 'move' tmp[2226389](2226393 'cast' SystemError[264864] nil[44]))
      (2226396 '.=' i_this[2226383] chpl_p[1000252] tmp[2226389])
      val coerce_tmp[2226400]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226402 'move' coerce_tmp[2226400](2226404 'cast' object[22] call_tmp[2226371]))
      const-val call_tmp[2226407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226409 'move' call_tmp[2226407](2226411 'ptr_eq' coerce_tmp[2226400] nil[44]))
      if call_tmp[2226407]
      {
        (2226417 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2226420]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226422]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2226425 call init[968113] initTemp[2226422] call_tmp[2226371])
      (2226428 'move' call_tmp[2226420] initTemp[2226422])
      (2226431 'move' ret[2226356] call_tmp[2226420])
      (2226435 call chpl__autoDestroy[1490020] _formal_tmp_x[2226351])
      (2226437 '=' i__retArg[2226345] ret[2226356])
      (2226440 'move' coerce_tmp[2226335] ret_tmp[2226337])
      const-val _formal_tmp_in_err[2226443]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2226445 'move' _formal_tmp_in_err[2226443] coerce_tmp[2226335])
      (2226448 'move' call_tmp[2226333](2226451 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2226443]))
      (2226453 '=' error[1784334] call_tmp[2226333])
      gotoErrorHandlingReturn _endlock[2226516] _endlock[2226516]
    }
    const-val call_tmp[2226459]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226461 'move' call_tmp[2226459](2226464 call qio_err_iserr[223665] call_tmp[2226274]))
    const-val call_tmp[2226466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226468 'move' call_tmp[2226466](2226470 '!=' call_tmp[2226459] 0))
    if call_tmp[2226466]
    {
      val error[2226475]:Error[167984] "error variable" "temp"
      (2226477 'move' error[2226475] nil[44])
      (2226481 call _ch_ioerror[1062884] rvfRerefTmp[2049217] call_tmp[2226274] "in lock" error[2226475])
      val errorExists[2226486]:bool[10] "temp"
      (2226488 'move' errorExists[2226486](2226490 '!=' error[2226475] nil[44]))
      if errorExists[2226486]
      {
        gotoErrorHandling handler[2226498] handler[2226498]
      }
      label handler[2226498]
      val errorExists[2226500]:bool[10] "temp"
      (2226502 'move' errorExists[2226500](2226504 '!=' error[2226475] nil[44]))
      if errorExists[2226500]
      {
        (2226509 '=' error[1784334] error[2226475])
        gotoErrorHandlingReturn _endlock[2226516] _endlock[2226516]
      }
    }
    label _endlock[2226516]
    val errorExists[2073177]:bool[10] "temp"
    (2073182 'move' errorExists[2073177](2073179 '!=' error[1784334] nil[44]))
    if errorExists[2073177]
    {
      gotoErrorHandling handler[1784335] handler[1784335]
    }
    label handler[1784335]
    val errorExists[2073185]:bool[10] "temp"
    (2073190 'move' errorExists[2073185](2073187 '!=' error[1784334] nil[44]))
    if errorExists[2073185]
    {
      (1784350 '=' error_out[1784330] error[1784334])
      gotoErrorHandlingReturn _endon_fn[1784332] _endon_fn[1784332]
    }
    val error[1784362]:Error[167984] "error variable" "temp"
    (1784371 'move' error[1784362] nil[44])
    const-ref call_tmp[1066952]:byteIndex[28173] "dead after last mention" "maybe param" "temp"
    (1066954 'move' call_tmp[1066952](1067028 '.v' args[1781405] x0[1057098]))
    ref rvfRerefTmp[2049224]:channel(true,dynamic,false)[1060966] "temp"
    (2049228 'move' rvfRerefTmp[2049224](2049225 'set reference' this[1781403]))
    val rvfRerefTmp[2049251]:locale[28] "temp"
    (2049254 'move' rvfRerefTmp[2049251] origLocale[1781407])
    (1066963 call _writeOne[1067031] rvfRerefTmp[2049224] call_tmp[1066952] rvfRerefTmp[2049251] error[1784362])
    val errorExists[2073193]:bool[10] "temp"
    (2073198 'move' errorExists[2073193](2073195 '!=' error[1784362] nil[44]))
    if errorExists[2073193]
    {
      gotoErrorHandling handler[1784363] handler[1784363]
    }
    label handler[1784363]
    val errorExists[2073201]:bool[10] "temp"
    (2073206 'move' errorExists[2073201](2073203 '!=' error[1784362] nil[44]))
    if errorExists[2073201]
    {
      (1784378 '=' error_out[1784330] error[1784362])
      gotoErrorHandlingReturn _endon_fn[1784332] _endon_fn[1784332]
    }
    label _endon_fn[1784332]
    (1066211 return _void[55])
  }
  function on_fn[1068887](const  ref arg this[1781409]:channel(true,dynamic,false)[1060966], const in arg x[1781411]:int(64)[13], const in arg origLocale[1781413]:locale[28], ref arg error_out[1784614]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1784618]:Error[167984] "error variable" "temp"
    (1784627 'move' error[1784618] nil[44])
    const-val call_tmp[2226529]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226531 'move' call_tmp[2226529](2226534 call qio_int_to_err[223653] 0))
    const-val coerce_tmp[2226539]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2226541 'move' coerce_tmp[2226539](2226543 '.v' this[1781409] _channel_internal[1060959]))
    const-val call_tmp[2226546]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226548 'move' call_tmp[2226546](2226550 'cast' c_void_ptr[149] coerce_tmp[2226539]))
    const-val call_tmp[2226553]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226555 'move' call_tmp[2226553](2226557 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226560]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226562 'move' call_tmp[2226560](2226564 'ptr_eq' call_tmp[2226546] call_tmp[2226553]))
    if call_tmp[2226560]
    {
      const-val call_tmp[2226569]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2226571]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226573 'move' coerce_tmp[2226571](2226575 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2226578]:owned SystemError[1000257] "temp"
      (2226581 call fromSyserr[1017132] coerce_tmp[2226571] "Operation attempted on an invalid channel" ret_tmp[2226578])
      (2226585 'move' call_tmp[2226569] ret_tmp[2226578])
      val call_tmp[2226588]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2226590]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2226592]:owned Error[966477] "temp"
      ref i_x[2226594]:owned SystemError[1000257] "temp"
      (2226596 'move' i_x[2226594](2226598 'set reference' call_tmp[2226569]))
      ref i__retArg[2226600]:owned Error[966477] "temp"
      (2226602 'move' i__retArg[2226600](2226604 'set reference' ret_tmp[2226592]))
      val _formal_tmp_x[2226606]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226608 'move' _formal_tmp_x[2226606] i_x[2226594])
      const-val ret[2226611]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2226613]:owned SystemError[1000257] "temp"
      (2226615 'move' i_this[2226613](2226617 'set reference' _formal_tmp_x[2226606]))
      val coerce_tmp[2226619]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226621 'move' coerce_tmp[2226619](2226623 '.v' i_this[2226613] chpl_p[1000252]))
      val call_tmp[2226626]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226628 'move' call_tmp[2226626](2226630 'cast' Error[167984] coerce_tmp[2226619]))
      ref i_this[2226638]:owned SystemError[1000257] "temp"
      (2226640 'move' i_this[2226638](2226642 'set reference' _formal_tmp_x[2226606]))
      val tmp[2226644]:SystemError[264864] "temp"
      (2226646 'move' tmp[2226644](2226648 'cast' SystemError[264864] nil[44]))
      (2226651 '.=' i_this[2226638] chpl_p[1000252] tmp[2226644])
      val coerce_tmp[2226655]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226657 'move' coerce_tmp[2226655](2226659 'cast' object[22] call_tmp[2226626]))
      const-val call_tmp[2226662]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226664 'move' call_tmp[2226662](2226666 'ptr_eq' coerce_tmp[2226655] nil[44]))
      if call_tmp[2226662]
      {
        (2226672 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2226675]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226677]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2226680 call init[968113] initTemp[2226677] call_tmp[2226626])
      (2226683 'move' call_tmp[2226675] initTemp[2226677])
      (2226686 'move' ret[2226611] call_tmp[2226675])
      (2226690 call chpl__autoDestroy[1490020] _formal_tmp_x[2226606])
      (2226692 '=' i__retArg[2226600] ret[2226611])
      (2226695 'move' coerce_tmp[2226590] ret_tmp[2226592])
      const-val _formal_tmp_in_err[2226698]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2226700 'move' _formal_tmp_in_err[2226698] coerce_tmp[2226590])
      (2226703 'move' call_tmp[2226588](2226706 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2226698]))
      (2226708 '=' error[1784618] call_tmp[2226588])
      gotoErrorHandlingReturn _endlock[2226771] _endlock[2226771]
    }
    const-val call_tmp[2226714]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226716 'move' call_tmp[2226714](2226719 call qio_err_iserr[223665] call_tmp[2226529]))
    const-val call_tmp[2226721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226723 'move' call_tmp[2226721](2226725 '!=' call_tmp[2226714] 0))
    if call_tmp[2226721]
    {
      val error[2226730]:Error[167984] "error variable" "temp"
      (2226732 'move' error[2226730] nil[44])
      (2226736 call _ch_ioerror[1062884] this[1781409] call_tmp[2226529] "in lock" error[2226730])
      val errorExists[2226741]:bool[10] "temp"
      (2226743 'move' errorExists[2226741](2226745 '!=' error[2226730] nil[44]))
      if errorExists[2226741]
      {
        gotoErrorHandling handler[2226753] handler[2226753]
      }
      label handler[2226753]
      val errorExists[2226755]:bool[10] "temp"
      (2226757 'move' errorExists[2226755](2226759 '!=' error[2226730] nil[44]))
      if errorExists[2226755]
      {
        (2226764 '=' error[1784618] error[2226730])
        gotoErrorHandlingReturn _endlock[2226771] _endlock[2226771]
      }
    }
    label _endlock[2226771]
    val errorExists[2073313]:bool[10] "temp"
    (2073318 'move' errorExists[2073313](2073315 '!=' error[1784618] nil[44]))
    if errorExists[2073313]
    {
      gotoErrorHandling handler[1784619] handler[1784619]
    }
    label handler[1784619]
    val errorExists[2073321]:bool[10] "temp"
    (2073326 'move' errorExists[2073321](2073323 '!=' error[1784618] nil[44]))
    if errorExists[2073321]
    {
      (1784633 call chpl_uncaught_error[170289] error[1784618])
    }
    val error[1784644]:Error[167984] "error variable" "temp"
    (1784653 'move' error[1784644] nil[44])
    val rvfRerefTmp[2049263]:locale[28] "temp"
    (2049266 'move' rvfRerefTmp[2049263] origLocale[1781413])
    (1068920 call _writeOne[1068956] this[1781409] x[1781411] rvfRerefTmp[2049263] error[1784644])
    val errorExists[2073329]:bool[10] "temp"
    (2073334 'move' errorExists[2073329](2073331 '!=' error[1784644] nil[44]))
    if errorExists[2073329]
    {
      gotoErrorHandling handler[1784645] handler[1784645]
    }
    label handler[1784645]
    val errorExists[2073337]:bool[10] "temp"
    (2073342 'move' errorExists[2073337](2073339 '!=' error[1784644] nil[44]))
    if errorExists[2073337]
    {
      (1784660 '=' error_out[1784614] error[1784644])
      gotoErrorHandlingReturn _endon_fn[1784616] _endon_fn[1784616]
    }
    label _endon_fn[1784616]
    (1068927 return _void[55])
  }
  function on_fn[1080224](const in arg this[1781415]:channel(true,dynamic,false)[1060966], ref arg ret[1781417]:int(64)[13]) : void[4] "on" "resolved"
  {
    val error[1784815]:Error[167984] "error variable" "temp"
    (1784824 'move' error[1784815] nil[44])
    ref rvfRerefTmp[2049290]:channel(true,dynamic,false)[1060966] "temp"
    (2049294 'move' rvfRerefTmp[2049290](2049291 'set reference' this[1781415]))
    const-val call_tmp[2226784]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226786 'move' call_tmp[2226784](2226789 call qio_int_to_err[223653] 0))
    const-val coerce_tmp[2226794]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2226796 'move' coerce_tmp[2226794](2226798 '.v' this[1781415] _channel_internal[1060959]))
    const-val call_tmp[2226801]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226803 'move' call_tmp[2226801](2226805 'cast' c_void_ptr[149] coerce_tmp[2226794]))
    const-val call_tmp[2226808]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226810 'move' call_tmp[2226808](2226812 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2226815]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226817 'move' call_tmp[2226815](2226819 'ptr_eq' call_tmp[2226801] call_tmp[2226808]))
    if call_tmp[2226815]
    {
      const-val call_tmp[2226824]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2226826]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226828 'move' coerce_tmp[2226826](2226830 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2226833]:owned SystemError[1000257] "temp"
      (2226836 call fromSyserr[1017132] coerce_tmp[2226826] "Operation attempted on an invalid channel" ret_tmp[2226833])
      (2226840 'move' call_tmp[2226824] ret_tmp[2226833])
      val call_tmp[2226843]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2226845]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2226847]:owned Error[966477] "temp"
      ref i_x[2226849]:owned SystemError[1000257] "temp"
      (2226851 'move' i_x[2226849](2226853 'set reference' call_tmp[2226824]))
      ref i__retArg[2226855]:owned Error[966477] "temp"
      (2226857 'move' i__retArg[2226855](2226859 'set reference' ret_tmp[2226847]))
      val _formal_tmp_x[2226861]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2226863 'move' _formal_tmp_x[2226861] i_x[2226849])
      const-val ret[2226866]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2226868]:owned SystemError[1000257] "temp"
      (2226870 'move' i_this[2226868](2226872 'set reference' _formal_tmp_x[2226861]))
      val coerce_tmp[2226874]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2226876 'move' coerce_tmp[2226874](2226878 '.v' i_this[2226868] chpl_p[1000252]))
      val call_tmp[2226881]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226883 'move' call_tmp[2226881](2226885 'cast' Error[167984] coerce_tmp[2226874]))
      ref i_this[2226893]:owned SystemError[1000257] "temp"
      (2226895 'move' i_this[2226893](2226897 'set reference' _formal_tmp_x[2226861]))
      val tmp[2226899]:SystemError[264864] "temp"
      (2226901 'move' tmp[2226899](2226903 'cast' SystemError[264864] nil[44]))
      (2226906 '.=' i_this[2226893] chpl_p[1000252] tmp[2226899])
      val coerce_tmp[2226910]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2226912 'move' coerce_tmp[2226910](2226914 'cast' object[22] call_tmp[2226881]))
      const-val call_tmp[2226917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2226919 'move' call_tmp[2226917](2226921 'ptr_eq' coerce_tmp[2226910] nil[44]))
      if call_tmp[2226917]
      {
        (2226927 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2226930]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2226932]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2226935 call init[968113] initTemp[2226932] call_tmp[2226881])
      (2226938 'move' call_tmp[2226930] initTemp[2226932])
      (2226941 'move' ret[2226866] call_tmp[2226930])
      (2226945 call chpl__autoDestroy[1490020] _formal_tmp_x[2226861])
      (2226947 '=' i__retArg[2226855] ret[2226866])
      (2226950 'move' coerce_tmp[2226845] ret_tmp[2226847])
      const-val _formal_tmp_in_err[2226953]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2226955 'move' _formal_tmp_in_err[2226953] coerce_tmp[2226845])
      (2226958 'move' call_tmp[2226843](2226961 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2226953]))
      (2226963 '=' error[1784815] call_tmp[2226843])
      gotoErrorHandlingReturn _endlock[2227026] _endlock[2227026]
    }
    const-val call_tmp[2226969]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226971 'move' call_tmp[2226969](2226974 call qio_err_iserr[223665] call_tmp[2226784]))
    const-val call_tmp[2226976]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2226978 'move' call_tmp[2226976](2226980 '!=' call_tmp[2226969] 0))
    if call_tmp[2226976]
    {
      val error[2226985]:Error[167984] "error variable" "temp"
      (2226987 'move' error[2226985] nil[44])
      (2226991 call _ch_ioerror[1062884] rvfRerefTmp[2049290] call_tmp[2226784] "in lock" error[2226985])
      val errorExists[2226996]:bool[10] "temp"
      (2226998 'move' errorExists[2226996](2227000 '!=' error[2226985] nil[44]))
      if errorExists[2226996]
      {
        gotoErrorHandling handler[2227008] handler[2227008]
      }
      label handler[2227008]
      val errorExists[2227010]:bool[10] "temp"
      (2227012 'move' errorExists[2227010](2227014 '!=' error[2226985] nil[44]))
      if errorExists[2227010]
      {
        (2227019 '=' error[1784815] error[2226985])
        gotoErrorHandlingReturn _endlock[2227026] _endlock[2227026]
      }
    }
    label _endlock[2227026]
    val errorExists[2073401]:bool[10] "temp"
    (2073406 'move' errorExists[2073401](2073403 '!=' error[1784815] nil[44]))
    if errorExists[2073401]
    {
      gotoErrorHandling handler[1784816] handler[1784816]
    }
    label handler[1784816]
    val errorExists[2073409]:bool[10] "temp"
    (2073414 'move' errorExists[2073409](2073411 '!=' error[1784815] nil[44]))
    if errorExists[2073409]
    {
      (1784830 call chpl_uncaught_error[170289] error[1784815])
    }
    const-val call_tmp[1080245]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1080304]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1080308 'move' coerce_tmp[1080304](2322349 '.v' this[1781415] _channel_internal[1060959]))
    (1080247 'move' call_tmp[1080245](1080250 call qio_channel_offset_unlocked[233401] coerce_tmp[1080304]))
    (2085823 '=' ret[1781417] call_tmp[1080245])
    (1080263 return _void[55])
  }
  function on_fn[1080776](const in arg style[1781419]:iostyle[231863], const in arg this[1781421]:file[235599], ref arg err[1781423]:syserr[223603], const in arg hints[1781425]:int(32)[95], const in arg start[1781427]:int(64)[13], ref arg ret[1781429]:channel(false,dynamic,false)[1080701], const in arg end[1781431]:int(64)[13], ref arg error_out[1784886]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1784890]:Error[167984] "error variable" "temp"
    (1784899 'move' error[1784890] nil[44])
    ref rvfRerefTmp[2049319]:file[235599] "temp"
    (2049323 'move' rvfRerefTmp[2049319](2049320 'set reference' this[1781421]))
    (1080787 call checkAssumingLocal[235787] rvfRerefTmp[2049319] error[1784890])
    val errorExists[2073441]:bool[10] "temp"
    (2073446 'move' errorExists[2073441](2073443 '!=' error[1784890] nil[44]))
    if errorExists[2073441]
    {
      gotoErrorHandling handler[1784891] handler[1784891]
    }
    label handler[1784891]
    val errorExists[2073449]:bool[10] "temp"
    (2073454 'move' errorExists[2073449](2073451 '!=' error[1784890] nil[44]))
    if errorExists[2073449]
    {
      (1784906 '=' error_out[1784886] error[1784890])
      gotoErrorHandlingReturn _endon_fn[1784888] _endon_fn[1784888]
    }
    const-val call_tmp[1080789]:channel(false,dynamic,false)[1080701] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1081131]:channel(false,dynamic,false)[1080701] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1081602]:syserr[223603] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2049312]:file[235599] "temp"
    (2049316 'move' rvfRerefTmp[2049312](2049313 'set reference' this[1781421]))
    (1081134 call init[1081147] initTemp[1081131] rvfRerefTmp[2049312] _formal_tmp_out_error[1081602] hints[1781425] start[1781427] end[1781431] style[1781419])
    (2168925 '=' err[1781423] _formal_tmp_out_error[1081602])
    (1080791 'move' call_tmp[1080789] initTemp[1081131])
    (1080805 call =[1081611] ret[1781429] call_tmp[1080789])
    ref i_x[2285991]:channel(false,dynamic,false)[1080701] "temp"
    (2285995 'move' i_x[2285991](2285993 'set reference' call_tmp[1080789]))
    (2285999 call deinit[1514289] i_x[2285991])
    label _endon_fn[1784888]
    (1080811 return _void[55])
  }
  function on_fn[1081225](const in arg start[1781433]:int(64)[13], const in arg f[1781435]:file[235599], ref arg _formal_tmp_error[1781437]:syserr[223603], const in arg end[1781439]:int(64)[13], ref arg this[1781441]:channel(false,dynamic,false)[1080701], const in arg hints[1781443]:int(32)[95], const in arg local_style[1781445]:iostyle[231863]) : void[4] "on" "resolved"
  {
    ref call_tmp[2229345]:locale[28] "dead after last mention" "maybe param" "temp"
    (2229347 'move' call_tmp[2229345](2229349 '.' this[1781441] home[1080689]))
    ref call_tmp[2178021]:locale[28] "dead after last mention" "maybe param" "temp"
    (2178023 'move' call_tmp[2178021](2178025 '.' f[1781435] home[235581]))
    (1081248 call =[90634] call_tmp[2229345] call_tmp[2178021])
    ref call_tmp[2229399]:qio_channel_ptr_t[231484] "dead after last mention" "maybe param" "temp"
    (2229401 'move' call_tmp[2229399](2229403 '.' this[1781441] _channel_internal[1080694]))
    const-val call_tmp[1081333]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1081571]:qio_file_ptr_t[231458] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081575 'move' coerce_tmp[1081571](2322379 '.v' f[1781435] _file_internal[235587]))
    const-val coerce_tmp[1081577]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081583 'move' coerce_tmp[1081577](1081579 'cast' int(32)[95] 1))
    const-val coerce_tmp[1081585]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081591 'move' coerce_tmp[1081585](1081587 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2049353]:iostyle[231863] "temp"
    (2049357 'move' rvfRerefTmp[2049353](2049354 'set reference' local_style[1781445]))
    (1081335 'move' call_tmp[1081333](1081338 call qio_channel_create[232897] call_tmp[2229399] coerce_tmp[1081571] hints[1781443] coerce_tmp[1081577] coerce_tmp[1081585] start[1781433] end[1781439] rvfRerefTmp[2049353]))
    (2168931 '=' _formal_tmp_error[1781437] call_tmp[1081333])
    (1081351 return _void[55])
  }
  function on_fn[1081837](const in arg rhs[1781447]:channel(false,dynamic,false)[1080701]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082036]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082040 'move' coerce_tmp[1082036](2322418 '.v' rhs[1781447] _channel_internal[1080694]))
    (1081852 call qio_channel_retain[232970] coerce_tmp[1082036])
    (1081854 return _void[55])
  }
  function on_fn[1081881](const  ref arg lhs[1781449]:channel(false,dynamic,false)[1080701]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082055]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082059 'move' coerce_tmp[1082055](2322425 '.v' lhs[1781449] _channel_internal[1080694]))
    (1081896 call qio_channel_release[232980] coerce_tmp[1082055])
    (1081898 return _void[55])
  }
  function on_fn[1082206](const in arg this[1781451]:channel(false,dynamic,false)[1080701], ref arg err[1781453]:syserr[223603]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1082228]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082551]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082557 'move' coerce_tmp[1082551](1082553 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082559]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082563 'move' coerce_tmp[1082559](2322445 '.v' this[1781451] _channel_internal[1080694]))
    (1082230 'move' call_tmp[1082228](1082233 call qio_channel_close[233159] coerce_tmp[1082551] coerce_tmp[1082559]))
    (2168937 '=' err[1781453] call_tmp[1082228])
    (1082242 return _void[55])
  }
  function on_fn[1082635](const in arg this[1781455]:channel(false,dynamic,false)[1080701], ref arg path[1781457]:string[26], ref arg offset[1781459]:int(64)[13], ref arg error_out[1785041]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1082641]:c_string[19] "dead at end of block" "insert auto destroy"
    (1082842 'move' tmp_path[1082641](1082840 'cast' c_string[19] nil[44]))
    val tmp_offset[1082647]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082845 'move' tmp_offset[1082647] 0)
    (2169573 call qio_int_to_err[223653] 0)
    const-val call_tmp[1082689]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082797]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082803 'move' coerce_tmp[1082797](1082799 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082805]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082809 'move' coerce_tmp[1082805](2322458 '.v' this[1781455] _channel_internal[1080694]))
    (1082691 'move' call_tmp[1082689](1082694 call qio_channel_path_offset[232943] coerce_tmp[1082797] coerce_tmp[1082805] tmp_path[1082641] tmp_offset[1082647]))
    const-val call_tmp[2168318]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168320 'move' call_tmp[2168318](2168323 call qio_err_iserr[223665] call_tmp[1082689]))
    const-val call_tmp[2168325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168327 'move' call_tmp[2168325](2168329 '==' call_tmp[2168318] 0))
    if call_tmp[2168325]
    {
      const-val call_tmp[1082723]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1785046]:Error[167984] "error variable" "temp"
      (1785048 'move' error[1785046] nil[44])
      const-val call_tmp[2165767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165769 'move' call_tmp[2165767](2165771 'string_length_bytes' tmp_path[1082641]))
      val errorExists[2073505]:bool[10] "temp"
      (2073510 'move' errorExists[2073505](2073507 '!=' error[1785046] nil[44]))
      if errorExists[2073505]
      {
        (1785052 '=' error_out[1785041] error[1785046])
        gotoErrorHandlingReturn _endon_fn[1785043] _endon_fn[1785043]
      }
      val error[1785061]:Error[167984] "error variable" "temp"
      (1785063 'move' error[1785061] nil[44])
      const-val ret[2105002]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2105004]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105006 'move' call_tmp[2105004](2105008 'cast' c_ptr(uint(8))[937442] tmp_path[1082641]))
      val error[2105013]:Error[167984] "error variable" "temp"
      (2105015 'move' error[2105013] nil[44])
      const-val ret[2105018]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2105020]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2105022]:Error[167984] "error variable" "temp"
      (2105024 'move' error[2105022] nil[44])
      const-val ret_tmp[2105027]:string[26] "temp"
      (2105030 call decodeByteBuffer[173938] call_tmp[2105004] call_tmp[2165767] replace[173694] error[2105022] ret_tmp[2105027])
      (2105036 'move' call_tmp[2105020] ret_tmp[2105027])
      val errorExists[2105039]:bool[10] "temp"
      (2105041 'move' errorExists[2105039](2105043 '!=' error[2105022] nil[44]))
      if errorExists[2105039]
      {
        (2105048 '=' error[2105013] error[2105022])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2105057] _endcreateStringWithNewBuffer[2105057]
      }
      (2105054 'move' ret[2105018] call_tmp[2105020])
      label _endcreateStringWithNewBuffer[2105057]
      val errorExists[2105062]:bool[10] "temp"
      (2105064 'move' errorExists[2105062](2105066 '!=' error[2105013] nil[44]))
      if errorExists[2105062]
      {
        (2105071 '=' error[1785061] error[2105013])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2105080] _endcreateStringWithNewBuffer[2105080]
      }
      (2105077 'move' ret[2105002] ret[2105018])
      label _endcreateStringWithNewBuffer[2105080]
      (1802475 'move' call_tmp[1082723] ret[2105002])
      val errorExists[2073513]:bool[10] "temp"
      (2073518 'move' errorExists[2073513](2073515 '!=' error[1785061] nil[44]))
      if errorExists[2073513]
      {
        (1785067 '=' error_out[1785041] error[1785061])
        gotoErrorHandlingReturn _endon_fn[1785043] _endon_fn[1785043]
      }
      (1082733 call =[38272] path[1781457] call_tmp[1082723])
      ref i_x[2094543]:string[26] "temp"
      (2094547 'move' i_x[2094543](2094545 'set reference' call_tmp[1082723]))
      (2094551 call deinit[30834] i_x[2094543])
      ref i_cs[2083827]:c_string[19] "temp"
      (2083831 'move' i_cs[2083827](2083829 'set reference' tmp_path[1082641]))
      const-val call_tmp[2083834]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083836 'move' call_tmp[2083834](2083838 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2083841]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083843 'move' call_tmp[2083841](2083845 'cast' c_string[19] call_tmp[2083834]))
      const-val coerce_tmp[2083848]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2083850 'move' coerce_tmp[2083848] tmp_path[1082641])
      const-val call_tmp[2083854]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083856 'move' call_tmp[2083854](2083858 'string_compare' coerce_tmp[2083848] call_tmp[2083841]))
      const-val call_tmp[2083861]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083863 'move' call_tmp[2083861](2083865 '!=' call_tmp[2083854] 0))
      if call_tmp[2083861]
      {
        (2083871 call chpl_rt_free_c_string[22717] i_cs[2083827])
      }
      (2085829 '=' offset[1781459] tmp_offset[1082647])
    }
    label _endon_fn[1785043]
    (1082752 return _void[55])
  }
  function on_fn[1164926](const in arg this[1781487]:channel(true,dynamic,false)[1060966], const  ref arg args[1781489]:(string,codepointIndex,string)[1158574], const in arg origLocale[1781491]:locale[28], ref arg error_out[1785354]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1785358]:Error[167984] "error variable" "temp"
    (1785367 'move' error[1785358] nil[44])
    ref rvfRerefTmp[2049440]:channel(true,dynamic,false)[1060966] "temp"
    (2049444 'move' rvfRerefTmp[2049440](2049441 'set reference' this[1781487]))
    const-val call_tmp[2227039]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227041 'move' call_tmp[2227039](2227044 call qio_int_to_err[223653] 0))
    const-val coerce_tmp[2227049]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2227051 'move' coerce_tmp[2227049](2227053 '.v' this[1781487] _channel_internal[1060959]))
    const-val call_tmp[2227056]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227058 'move' call_tmp[2227056](2227060 'cast' c_void_ptr[149] coerce_tmp[2227049]))
    const-val call_tmp[2227063]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227065 'move' call_tmp[2227063](2227067 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2227070]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227072 'move' call_tmp[2227070](2227074 'ptr_eq' call_tmp[2227056] call_tmp[2227063]))
    if call_tmp[2227070]
    {
      const-val call_tmp[2227079]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2227081]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2227083 'move' coerce_tmp[2227081](2227085 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2227088]:owned SystemError[1000257] "temp"
      (2227091 call fromSyserr[1017132] coerce_tmp[2227081] "Operation attempted on an invalid channel" ret_tmp[2227088])
      (2227095 'move' call_tmp[2227079] ret_tmp[2227088])
      val call_tmp[2227098]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2227100]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2227102]:owned Error[966477] "temp"
      ref i_x[2227104]:owned SystemError[1000257] "temp"
      (2227106 'move' i_x[2227104](2227108 'set reference' call_tmp[2227079]))
      ref i__retArg[2227110]:owned Error[966477] "temp"
      (2227112 'move' i__retArg[2227110](2227114 'set reference' ret_tmp[2227102]))
      val _formal_tmp_x[2227116]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2227118 'move' _formal_tmp_x[2227116] i_x[2227104])
      const-val ret[2227121]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2227123]:owned SystemError[1000257] "temp"
      (2227125 'move' i_this[2227123](2227127 'set reference' _formal_tmp_x[2227116]))
      val coerce_tmp[2227129]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2227131 'move' coerce_tmp[2227129](2227133 '.v' i_this[2227123] chpl_p[1000252]))
      val call_tmp[2227136]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227138 'move' call_tmp[2227136](2227140 'cast' Error[167984] coerce_tmp[2227129]))
      ref i_this[2227148]:owned SystemError[1000257] "temp"
      (2227150 'move' i_this[2227148](2227152 'set reference' _formal_tmp_x[2227116]))
      val tmp[2227154]:SystemError[264864] "temp"
      (2227156 'move' tmp[2227154](2227158 'cast' SystemError[264864] nil[44]))
      (2227161 '.=' i_this[2227148] chpl_p[1000252] tmp[2227154])
      val coerce_tmp[2227165]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2227167 'move' coerce_tmp[2227165](2227169 'cast' object[22] call_tmp[2227136]))
      const-val call_tmp[2227172]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227174 'move' call_tmp[2227172](2227176 'ptr_eq' coerce_tmp[2227165] nil[44]))
      if call_tmp[2227172]
      {
        (2227182 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2227185]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2227187]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2227190 call init[968113] initTemp[2227187] call_tmp[2227136])
      (2227193 'move' call_tmp[2227185] initTemp[2227187])
      (2227196 'move' ret[2227121] call_tmp[2227185])
      (2227200 call chpl__autoDestroy[1490020] _formal_tmp_x[2227116])
      (2227202 '=' i__retArg[2227110] ret[2227121])
      (2227205 'move' coerce_tmp[2227100] ret_tmp[2227102])
      const-val _formal_tmp_in_err[2227208]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2227210 'move' _formal_tmp_in_err[2227208] coerce_tmp[2227100])
      (2227213 'move' call_tmp[2227098](2227216 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2227208]))
      (2227218 '=' error[1785358] call_tmp[2227098])
      gotoErrorHandlingReturn _endlock[2227281] _endlock[2227281]
    }
    const-val call_tmp[2227224]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227226 'move' call_tmp[2227224](2227229 call qio_err_iserr[223665] call_tmp[2227039]))
    const-val call_tmp[2227231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227233 'move' call_tmp[2227231](2227235 '!=' call_tmp[2227224] 0))
    if call_tmp[2227231]
    {
      val error[2227240]:Error[167984] "error variable" "temp"
      (2227242 'move' error[2227240] nil[44])
      (2227246 call _ch_ioerror[1062884] rvfRerefTmp[2049440] call_tmp[2227039] "in lock" error[2227240])
      val errorExists[2227251]:bool[10] "temp"
      (2227253 'move' errorExists[2227251](2227255 '!=' error[2227240] nil[44]))
      if errorExists[2227251]
      {
        gotoErrorHandling handler[2227263] handler[2227263]
      }
      label handler[2227263]
      val errorExists[2227265]:bool[10] "temp"
      (2227267 'move' errorExists[2227265](2227269 '!=' error[2227240] nil[44]))
      if errorExists[2227265]
      {
        (2227274 '=' error[1785358] error[2227240])
        gotoErrorHandlingReturn _endlock[2227281] _endlock[2227281]
      }
    }
    label _endlock[2227281]
    val errorExists[2073673]:bool[10] "temp"
    (2073678 'move' errorExists[2073673](2073675 '!=' error[1785358] nil[44]))
    if errorExists[2073673]
    {
      gotoErrorHandling handler[1785359] handler[1785359]
    }
    label handler[1785359]
    val errorExists[2073681]:bool[10] "temp"
    (2073686 'move' errorExists[2073681](2073683 '!=' error[1785358] nil[44]))
    if errorExists[2073681]
    {
      (1785374 '=' error_out[1785354] error[1785358])
      gotoErrorHandlingReturn _endon_fn[1785356] _endon_fn[1785356]
    }
    val error[1785386]:Error[167984] "error variable" "temp"
    (1785395 'move' error[1785386] nil[44])
    const-ref call_tmp[1165089]:string[26] "dead after last mention" "maybe param" "temp"
    (1165091 'move' call_tmp[1165089](1165176 '.v' args[1781489] x0[1158568]))
    ref rvfRerefTmp[2049447]:channel(true,dynamic,false)[1060966] "temp"
    (2049451 'move' rvfRerefTmp[2049447](2049448 'set reference' this[1781487]))
    val rvfRerefTmp[2049502]:locale[28] "temp"
    (2049505 'move' rvfRerefTmp[2049502] origLocale[1781491])
    (1165100 call _writeOne[1165179] rvfRerefTmp[2049447] call_tmp[1165089] rvfRerefTmp[2049502] error[1785386])
    val errorExists[2073689]:bool[10] "temp"
    (2073694 'move' errorExists[2073689](2073691 '!=' error[1785386] nil[44]))
    if errorExists[2073689]
    {
      gotoErrorHandling handler[1785387] handler[1785387]
    }
    label handler[1785387]
    val errorExists[2073697]:bool[10] "temp"
    (2073702 'move' errorExists[2073697](2073699 '!=' error[1785386] nil[44]))
    if errorExists[2073697]
    {
      (1785402 '=' error_out[1785354] error[1785386])
      gotoErrorHandlingReturn _endon_fn[1785356] _endon_fn[1785356]
    }
    val error[1785414]:Error[167984] "error variable" "temp"
    (1785423 'move' error[1785414] nil[44])
    const-ref call_tmp[1165121]:codepointIndex[28277] "dead after last mention" "maybe param" "temp"
    (1165123 'move' call_tmp[1165121](1173929 '.v' args[1781489] x1[1158570]))
    ref rvfRerefTmp[2049454]:channel(true,dynamic,false)[1060966] "temp"
    (2049458 'move' rvfRerefTmp[2049454](2049455 'set reference' this[1781487]))
    val rvfRerefTmp[2049508]:locale[28] "temp"
    (2049511 'move' rvfRerefTmp[2049508] origLocale[1781491])
    (1165132 call _writeOne[1173932] rvfRerefTmp[2049454] call_tmp[1165121] rvfRerefTmp[2049508] error[1785414])
    val errorExists[2073705]:bool[10] "temp"
    (2073710 'move' errorExists[2073705](2073707 '!=' error[1785414] nil[44]))
    if errorExists[2073705]
    {
      gotoErrorHandling handler[1785415] handler[1785415]
    }
    label handler[1785415]
    val errorExists[2073713]:bool[10] "temp"
    (2073718 'move' errorExists[2073713](2073715 '!=' error[1785414] nil[44]))
    if errorExists[2073713]
    {
      (1785430 '=' error_out[1785354] error[1785414])
      gotoErrorHandlingReturn _endon_fn[1785356] _endon_fn[1785356]
    }
    val error[1785442]:Error[167984] "error variable" "temp"
    (1785451 'move' error[1785442] nil[44])
    const-ref call_tmp[1165153]:string[26] "dead after last mention" "maybe param" "temp"
    (1165155 'move' call_tmp[1165153](1175663 '.v' args[1781489] x2[1158572]))
    ref rvfRerefTmp[2049461]:channel(true,dynamic,false)[1060966] "temp"
    (2049465 'move' rvfRerefTmp[2049461](2049462 'set reference' this[1781487]))
    val rvfRerefTmp[2049514]:locale[28] "temp"
    (2049517 'move' rvfRerefTmp[2049514] origLocale[1781491])
    (1165164 call _writeOne[1165179] rvfRerefTmp[2049461] call_tmp[1165153] rvfRerefTmp[2049514] error[1785442])
    val errorExists[2073721]:bool[10] "temp"
    (2073726 'move' errorExists[2073721](2073723 '!=' error[1785442] nil[44]))
    if errorExists[2073721]
    {
      gotoErrorHandling handler[1785443] handler[1785443]
    }
    label handler[1785443]
    val errorExists[2073729]:bool[10] "temp"
    (2073734 'move' errorExists[2073729](2073731 '!=' error[1785442] nil[44]))
    if errorExists[2073729]
    {
      (1785458 '=' error_out[1785354] error[1785442])
      gotoErrorHandlingReturn _endon_fn[1785356] _endon_fn[1785356]
    }
    label _endon_fn[1785356]
    (1165029 return _void[55])
  }
  function on_fn[1180405](const in arg this[1781493]:channel(true,dynamic,false)[1060966], const  ref arg args[1781495]:(string,codepointIndex,string,int(64))[1176539], const in arg origLocale[1781497]:locale[28], ref arg error_out[1785851]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1785855]:Error[167984] "error variable" "temp"
    (1785864 'move' error[1785855] nil[44])
    ref rvfRerefTmp[2049527]:channel(true,dynamic,false)[1060966] "temp"
    (2049531 'move' rvfRerefTmp[2049527](2049528 'set reference' this[1781493]))
    const-val call_tmp[2227294]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227296 'move' call_tmp[2227294](2227299 call qio_int_to_err[223653] 0))
    const-val coerce_tmp[2227304]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2227306 'move' coerce_tmp[2227304](2227308 '.v' this[1781493] _channel_internal[1060959]))
    const-val call_tmp[2227311]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227313 'move' call_tmp[2227311](2227315 'cast' c_void_ptr[149] coerce_tmp[2227304]))
    const-val call_tmp[2227318]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227320 'move' call_tmp[2227318](2227322 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2227325]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227327 'move' call_tmp[2227325](2227329 'ptr_eq' call_tmp[2227311] call_tmp[2227318]))
    if call_tmp[2227325]
    {
      const-val call_tmp[2227334]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2227336]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2227338 'move' coerce_tmp[2227336](2227340 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2227343]:owned SystemError[1000257] "temp"
      (2227346 call fromSyserr[1017132] coerce_tmp[2227336] "Operation attempted on an invalid channel" ret_tmp[2227343])
      (2227350 'move' call_tmp[2227334] ret_tmp[2227343])
      val call_tmp[2227353]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2227355]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2227357]:owned Error[966477] "temp"
      ref i_x[2227359]:owned SystemError[1000257] "temp"
      (2227361 'move' i_x[2227359](2227363 'set reference' call_tmp[2227334]))
      ref i__retArg[2227365]:owned Error[966477] "temp"
      (2227367 'move' i__retArg[2227365](2227369 'set reference' ret_tmp[2227357]))
      val _formal_tmp_x[2227371]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2227373 'move' _formal_tmp_x[2227371] i_x[2227359])
      const-val ret[2227376]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2227378]:owned SystemError[1000257] "temp"
      (2227380 'move' i_this[2227378](2227382 'set reference' _formal_tmp_x[2227371]))
      val coerce_tmp[2227384]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2227386 'move' coerce_tmp[2227384](2227388 '.v' i_this[2227378] chpl_p[1000252]))
      val call_tmp[2227391]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227393 'move' call_tmp[2227391](2227395 'cast' Error[167984] coerce_tmp[2227384]))
      ref i_this[2227403]:owned SystemError[1000257] "temp"
      (2227405 'move' i_this[2227403](2227407 'set reference' _formal_tmp_x[2227371]))
      val tmp[2227409]:SystemError[264864] "temp"
      (2227411 'move' tmp[2227409](2227413 'cast' SystemError[264864] nil[44]))
      (2227416 '.=' i_this[2227403] chpl_p[1000252] tmp[2227409])
      val coerce_tmp[2227420]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2227422 'move' coerce_tmp[2227420](2227424 'cast' object[22] call_tmp[2227391]))
      const-val call_tmp[2227427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2227429 'move' call_tmp[2227427](2227431 'ptr_eq' coerce_tmp[2227420] nil[44]))
      if call_tmp[2227427]
      {
        (2227437 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2227440]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2227442]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2227445 call init[968113] initTemp[2227442] call_tmp[2227391])
      (2227448 'move' call_tmp[2227440] initTemp[2227442])
      (2227451 'move' ret[2227376] call_tmp[2227440])
      (2227455 call chpl__autoDestroy[1490020] _formal_tmp_x[2227371])
      (2227457 '=' i__retArg[2227365] ret[2227376])
      (2227460 'move' coerce_tmp[2227355] ret_tmp[2227357])
      const-val _formal_tmp_in_err[2227463]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2227465 'move' _formal_tmp_in_err[2227463] coerce_tmp[2227355])
      (2227468 'move' call_tmp[2227353](2227471 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2227463]))
      (2227473 '=' error[1785855] call_tmp[2227353])
      gotoErrorHandlingReturn _endlock[2227536] _endlock[2227536]
    }
    const-val call_tmp[2227479]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227481 'move' call_tmp[2227479](2227484 call qio_err_iserr[223665] call_tmp[2227294]))
    const-val call_tmp[2227486]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2227488 'move' call_tmp[2227486](2227490 '!=' call_tmp[2227479] 0))
    if call_tmp[2227486]
    {
      val error[2227495]:Error[167984] "error variable" "temp"
      (2227497 'move' error[2227495] nil[44])
      (2227501 call _ch_ioerror[1062884] rvfRerefTmp[2049527] call_tmp[2227294] "in lock" error[2227495])
      val errorExists[2227506]:bool[10] "temp"
      (2227508 'move' errorExists[2227506](2227510 '!=' error[2227495] nil[44]))
      if errorExists[2227506]
      {
        gotoErrorHandling handler[2227518] handler[2227518]
      }
      label handler[2227518]
      val errorExists[2227520]:bool[10] "temp"
      (2227522 'move' errorExists[2227520](2227524 '!=' error[2227495] nil[44]))
      if errorExists[2227520]
      {
        (2227529 '=' error[1785855] error[2227495])
        gotoErrorHandlingReturn _endlock[2227536] _endlock[2227536]
      }
    }
    label _endlock[2227536]
    val errorExists[2073953]:bool[10] "temp"
    (2073958 'move' errorExists[2073953](2073955 '!=' error[1785855] nil[44]))
    if errorExists[2073953]
    {
      gotoErrorHandling handler[1785856] handler[1785856]
    }
    label handler[1785856]
    val errorExists[2073961]:bool[10] "temp"
    (2073966 'move' errorExists[2073961](2073963 '!=' error[1785855] nil[44]))
    if errorExists[2073961]
    {
      (1785871 '=' error_out[1785851] error[1785855])
      gotoErrorHandlingReturn _endon_fn[1785853] _endon_fn[1785853]
    }
    val error[1785883]:Error[167984] "error variable" "temp"
    (1785892 'move' error[1785883] nil[44])
    const-ref call_tmp[1180574]:string[26] "dead after last mention" "maybe param" "temp"
    (1180576 'move' call_tmp[1180574](1180693 '.v' args[1781495] x0[1176531]))
    ref rvfRerefTmp[2049534]:channel(true,dynamic,false)[1060966] "temp"
    (2049538 'move' rvfRerefTmp[2049534](2049535 'set reference' this[1781493]))
    val rvfRerefTmp[2049603]:locale[28] "temp"
    (2049606 'move' rvfRerefTmp[2049603] origLocale[1781497])
    (1180585 call _writeOne[1165179] rvfRerefTmp[2049534] call_tmp[1180574] rvfRerefTmp[2049603] error[1785883])
    val errorExists[2073969]:bool[10] "temp"
    (2073974 'move' errorExists[2073969](2073971 '!=' error[1785883] nil[44]))
    if errorExists[2073969]
    {
      gotoErrorHandling handler[1785884] handler[1785884]
    }
    label handler[1785884]
    val errorExists[2073977]:bool[10] "temp"
    (2073982 'move' errorExists[2073977](2073979 '!=' error[1785883] nil[44]))
    if errorExists[2073977]
    {
      (1785899 '=' error_out[1785851] error[1785883])
      gotoErrorHandlingReturn _endon_fn[1785853] _endon_fn[1785853]
    }
    val error[1785911]:Error[167984] "error variable" "temp"
    (1785920 'move' error[1785911] nil[44])
    const-ref call_tmp[1180606]:codepointIndex[28277] "dead after last mention" "maybe param" "temp"
    (1180608 'move' call_tmp[1180606](1180701 '.v' args[1781495] x1[1176533]))
    ref rvfRerefTmp[2049541]:channel(true,dynamic,false)[1060966] "temp"
    (2049545 'move' rvfRerefTmp[2049541](2049542 'set reference' this[1781493]))
    val rvfRerefTmp[2049609]:locale[28] "temp"
    (2049612 'move' rvfRerefTmp[2049609] origLocale[1781497])
    (1180617 call _writeOne[1173932] rvfRerefTmp[2049541] call_tmp[1180606] rvfRerefTmp[2049609] error[1785911])
    val errorExists[2073985]:bool[10] "temp"
    (2073990 'move' errorExists[2073985](2073987 '!=' error[1785911] nil[44]))
    if errorExists[2073985]
    {
      gotoErrorHandling handler[1785912] handler[1785912]
    }
    label handler[1785912]
    val errorExists[2073993]:bool[10] "temp"
    (2073998 'move' errorExists[2073993](2073995 '!=' error[1785911] nil[44]))
    if errorExists[2073993]
    {
      (1785927 '=' error_out[1785851] error[1785911])
      gotoErrorHandlingReturn _endon_fn[1785853] _endon_fn[1785853]
    }
    val error[1785939]:Error[167984] "error variable" "temp"
    (1785948 'move' error[1785939] nil[44])
    const-ref call_tmp[1180638]:string[26] "dead after last mention" "maybe param" "temp"
    (1180640 'move' call_tmp[1180638](1180709 '.v' args[1781495] x2[1176535]))
    ref rvfRerefTmp[2049548]:channel(true,dynamic,false)[1060966] "temp"
    (2049552 'move' rvfRerefTmp[2049548](2049549 'set reference' this[1781493]))
    val rvfRerefTmp[2049615]:locale[28] "temp"
    (2049618 'move' rvfRerefTmp[2049615] origLocale[1781497])
    (1180649 call _writeOne[1165179] rvfRerefTmp[2049548] call_tmp[1180638] rvfRerefTmp[2049615] error[1785939])
    val errorExists[2074001]:bool[10] "temp"
    (2074006 'move' errorExists[2074001](2074003 '!=' error[1785939] nil[44]))
    if errorExists[2074001]
    {
      gotoErrorHandling handler[1785940] handler[1785940]
    }
    label handler[1785940]
    val errorExists[2074009]:bool[10] "temp"
    (2074014 'move' errorExists[2074009](2074011 '!=' error[1785939] nil[44]))
    if errorExists[2074009]
    {
      (1785955 '=' error_out[1785851] error[1785939])
      gotoErrorHandlingReturn _endon_fn[1785853] _endon_fn[1785853]
    }
    val error[1785967]:Error[167984] "error variable" "temp"
    (1785976 'move' error[1785967] nil[44])
    const-val coerce_tmp[1180720]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180724 'move' coerce_tmp[1180720](2323518 '.v' args[1781495] x3[1176537]))
    ref rvfRerefTmp[2049555]:channel(true,dynamic,false)[1060966] "temp"
    (2049559 'move' rvfRerefTmp[2049555](2049556 'set reference' this[1781493]))
    val rvfRerefTmp[2049621]:locale[28] "temp"
    (2049624 'move' rvfRerefTmp[2049621] origLocale[1781497])
    (1180681 call _writeOne[1068956] rvfRerefTmp[2049555] coerce_tmp[1180720] rvfRerefTmp[2049621] error[1785967])
    val errorExists[2074017]:bool[10] "temp"
    (2074022 'move' errorExists[2074017](2074019 '!=' error[1785967] nil[44]))
    if errorExists[2074017]
    {
      gotoErrorHandling handler[1785968] handler[1785968]
    }
    label handler[1785968]
    val errorExists[2074025]:bool[10] "temp"
    (2074030 'move' errorExists[2074025](2074027 '!=' error[1785967] nil[44]))
    if errorExists[2074025]
    {
      (1785983 '=' error_out[1785851] error[1785967])
      gotoErrorHandlingReturn _endon_fn[1785853] _endon_fn[1785853]
    }
    label _endon_fn[1785853]
    (1180508 return _void[55])
  }
  function on_fn[1388994](const in arg this[1781641]:channel(true,dynamic,true)[1021844], const  ref arg args[1781643]:(string,ioNewline)[1389119], const in arg origLocale[1781645]:locale[28], ref arg error_out[1786693]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1786697]:Error[167984] "error variable" "temp"
    (1786706 'move' error[1786697] nil[44])
    ref rvfRerefTmp[2049743]:channel(true,dynamic,true)[1021844] "temp"
    (2049747 'move' rvfRerefTmp[2049743](2049744 'set reference' this[1781641]))
    val err[2276871]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2276873]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276875 'move' call_tmp[2276873](2276878 call qio_int_to_err[223653] 0))
    (2276880 'move' err[2276871] call_tmp[2276873])
    const-val coerce_tmp[2276883]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2276885 'move' coerce_tmp[2276883](2276887 '.v' this[1781641] _channel_internal[1021837]))
    const-val call_tmp[2276890]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276892 'move' call_tmp[2276890](2276894 'cast' c_void_ptr[149] coerce_tmp[2276883]))
    const-val call_tmp[2276897]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276899 'move' call_tmp[2276897](2276901 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2276904]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2276906 'move' call_tmp[2276904](2276908 'ptr_eq' call_tmp[2276890] call_tmp[2276897]))
    if call_tmp[2276904]
    {
      const-val call_tmp[2276913]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2276915]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2276917 'move' coerce_tmp[2276915](2276919 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2276922]:owned SystemError[1000257] "temp"
      (2276925 call fromSyserr[1017132] coerce_tmp[2276915] "Operation attempted on an invalid channel" ret_tmp[2276922])
      (2276929 'move' call_tmp[2276913] ret_tmp[2276922])
      val call_tmp[2276932]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2276934]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2276936]:owned Error[966477] "temp"
      ref i_x[2276938]:owned SystemError[1000257] "temp"
      (2276940 'move' i_x[2276938](2276942 'set reference' call_tmp[2276913]))
      ref i__retArg[2276944]:owned Error[966477] "temp"
      (2276946 'move' i__retArg[2276944](2276948 'set reference' ret_tmp[2276936]))
      val _formal_tmp_x[2276950]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2276952 'move' _formal_tmp_x[2276950] i_x[2276938])
      const-val ret[2276955]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2276957]:owned SystemError[1000257] "temp"
      (2276959 'move' i_this[2276957](2276961 'set reference' _formal_tmp_x[2276950]))
      val coerce_tmp[2276963]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2276965 'move' coerce_tmp[2276963](2276967 '.v' i_this[2276957] chpl_p[1000252]))
      val call_tmp[2276970]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2276972 'move' call_tmp[2276970](2276974 'cast' Error[167984] coerce_tmp[2276963]))
      ref i_this[2276982]:owned SystemError[1000257] "temp"
      (2276984 'move' i_this[2276982](2276986 'set reference' _formal_tmp_x[2276950]))
      val tmp[2276988]:SystemError[264864] "temp"
      (2276990 'move' tmp[2276988](2276992 'cast' SystemError[264864] nil[44]))
      (2276995 '.=' i_this[2276982] chpl_p[1000252] tmp[2276988])
      val coerce_tmp[2276999]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277001 'move' coerce_tmp[2276999](2277003 'cast' object[22] call_tmp[2276970]))
      const-val call_tmp[2277006]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277008 'move' call_tmp[2277006](2277010 'ptr_eq' coerce_tmp[2276999] nil[44]))
      if call_tmp[2277006]
      {
        (2277016 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2277019]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2277021]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2277024 call init[968113] initTemp[2277021] call_tmp[2276970])
      (2277027 'move' call_tmp[2277019] initTemp[2277021])
      (2277030 'move' ret[2276955] call_tmp[2277019])
      (2277034 call chpl__autoDestroy[1490020] _formal_tmp_x[2276950])
      (2277036 '=' i__retArg[2276944] ret[2276955])
      (2277039 'move' coerce_tmp[2276934] ret_tmp[2276936])
      const-val _formal_tmp_in_err[2277042]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2277044 'move' _formal_tmp_in_err[2277042] coerce_tmp[2276934])
      (2277047 'move' call_tmp[2276932](2277050 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2277042]))
      (2277052 '=' error[1786697] call_tmp[2276932])
      gotoErrorHandlingReturn _endlock[2277223] _endlock[2277223]
    }
    ref call_tmp[2277060]:locale[28] "dead after last mention" "maybe param" "temp"
    (2277062 'move' call_tmp[2277060](2277064 '.' this[1781641] home[1021832]))
    const-val call_tmp[2277067]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2277069]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277071 'move' coerce_tmp[2277069](2277073 '.v' call_tmp[2277060] _instance[89978]))
    val coerce_tmp[2277076]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277078 'move' coerce_tmp[2277076](2277080 'cast' object[22] coerce_tmp[2277069]))
    const-val call_tmp[2277083]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277085 'move' call_tmp[2277083](2277087 'ptr_eq' coerce_tmp[2277076] nil[44]))
    if call_tmp[2277083]
    {
      (2277093 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2277096 'move' call_tmp[2277067](2277098 '_wide_get_locale' coerce_tmp[2277069]))
    val rvfDerefTmp[2277103]:channel(true,dynamic,true)[1021844] "temp"
    (2277105 'move' rvfDerefTmp[2277103] this[1781641])
    val isdirect[2277109]:bool[10] "temp"
    (2277111 'move' isdirect[2277109](2277114 call chpl_doDirectExecuteOn[187469] call_tmp[2277067]))
    if isdirect[2277109]
    {
      (2277119 call on_fn[1389436] rvfDerefTmp[2277103] err[2276871])
    }
    {
      val _args_foron_fn[2277123]:_class_localson_fn[2059658] "temp"
      (2277125 'move' _args_foron_fn[2277123](2277127 'stack allocate class' _class_localson_fn[2059658]))
      (2277129 '.=' _args_foron_fn[2277123] _0_tmp[2059661] call_tmp[2277067])
      (2277133 '.=' _args_foron_fn[2277123] _1_rvfDerefTmp[2059663] rvfDerefTmp[2277103])
      ref tmp[2277137]:syserr[223603] "temp"
      (2277139 'move' tmp[2277137](2277141 'set reference' err[2276871]))
      (2277143 '.=' _args_foron_fn[2277123] _2_err[2059665] tmp[2277137])
      val _args_vforon_fn[2277147]:c_void_ptr[149] "temp"
      (2277149 'move' _args_vforon_fn[2277147](2277151 'cast_to_void_star' _args_foron_fn[2277123]))
      val _args_sizeon_fn[2277153]:int(64)[13] "temp"
      (2277155 'move' _args_sizeon_fn[2277153](2277157 'sizeof_bundle' _class_localson_fn[2059658]))
      on(2277160 call wrapon_fn[2059704] call_tmp[2277067] _args_vforon_fn[2277147] _args_sizeon_fn[2277153] _args_foron_fn[2277123])
    }
    const-val call_tmp[2277166]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277168 'move' call_tmp[2277166](2277171 call qio_err_iserr[223665] err[2276871]))
    const-val call_tmp[2277173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277175 'move' call_tmp[2277173](2277177 '!=' call_tmp[2277166] 0))
    if call_tmp[2277173]
    {
      val error[2277182]:Error[167984] "error variable" "temp"
      (2277184 'move' error[2277182] nil[44])
      (2277188 call _ch_ioerror[1389786] rvfRerefTmp[2049743] err[2276871] "in lock" error[2277182])
      val errorExists[2277193]:bool[10] "temp"
      (2277195 'move' errorExists[2277193](2277197 '!=' error[2277182] nil[44]))
      if errorExists[2277193]
      {
        gotoErrorHandling handler[2277205] handler[2277205]
      }
      label handler[2277205]
      val errorExists[2277207]:bool[10] "temp"
      (2277209 'move' errorExists[2277207](2277211 '!=' error[2277182] nil[44]))
      if errorExists[2277207]
      {
        (2277216 '=' error[1786697] error[2277182])
        gotoErrorHandlingReturn _endlock[2277223] _endlock[2277223]
      }
    }
    label _endlock[2277223]
    val errorExists[2074353]:bool[10] "temp"
    (2074358 'move' errorExists[2074353](2074355 '!=' error[1786697] nil[44]))
    if errorExists[2074353]
    {
      gotoErrorHandling handler[1786698] handler[1786698]
    }
    label handler[1786698]
    val errorExists[2074361]:bool[10] "temp"
    (2074366 'move' errorExists[2074361](2074363 '!=' error[1786697] nil[44]))
    if errorExists[2074361]
    {
      (1786713 '=' error_out[1786693] error[1786697])
      gotoErrorHandlingReturn _endon_fn[1786695] _endon_fn[1786695]
    }
    val error[1786725]:Error[167984] "error variable" "temp"
    (1786734 'move' error[1786725] nil[44])
    const-ref call_tmp[1390202]:string[26] "dead after last mention" "maybe param" "temp"
    (1390204 'move' call_tmp[1390202](1390310 '.v' args[1781643] x0[1389115]))
    ref rvfRerefTmp[2049750]:channel(true,dynamic,true)[1021844] "temp"
    (2049754 'move' rvfRerefTmp[2049750](2049751 'set reference' this[1781641]))
    val rvfRerefTmp[2049791]:locale[28] "temp"
    (2049794 'move' rvfRerefTmp[2049791] origLocale[1781645])
    (1390213 call _writeOne[1390313] rvfRerefTmp[2049750] call_tmp[1390202] rvfRerefTmp[2049791] error[1786725])
    val errorExists[2074369]:bool[10] "temp"
    (2074374 'move' errorExists[2074369](2074371 '!=' error[1786725] nil[44]))
    if errorExists[2074369]
    {
      gotoErrorHandling handler[1786726] handler[1786726]
    }
    label handler[1786726]
    val errorExists[2074377]:bool[10] "temp"
    (2074382 'move' errorExists[2074377](2074379 '!=' error[1786725] nil[44]))
    if errorExists[2074377]
    {
      (1786741 '=' error_out[1786693] error[1786725])
      ref call_tmp[2277597]:locale[28] "dead after last mention" "maybe param" "temp"
      (2277599 'move' call_tmp[2277597](2277601 '.' this[1781641] home[1021832]))
      const-val call_tmp[2277604]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2277606]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277608 'move' coerce_tmp[2277606](2277610 '.v' call_tmp[2277597] _instance[89978]))
      val coerce_tmp[2277613]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277615 'move' coerce_tmp[2277613](2277617 'cast' object[22] coerce_tmp[2277606]))
      const-val call_tmp[2277620]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277622 'move' call_tmp[2277620](2277624 'ptr_eq' coerce_tmp[2277613] nil[44]))
      if call_tmp[2277620]
      {
        (2277630 call nilCheckHalt[210169] "argument to ! is nil")
      }
      (2277633 'move' call_tmp[2277604](2277635 '_wide_get_locale' coerce_tmp[2277606]))
      val rvfDerefTmp[2277640]:channel(true,dynamic,true)[1021844] "temp"
      (2277642 'move' rvfDerefTmp[2277640] this[1781641])
      val isdirect[2277646]:bool[10] "temp"
      (2277648 'move' isdirect[2277646](2277651 call chpl_doDirectExecuteOn[187469] call_tmp[2277604]))
      if isdirect[2277646]
      {
        (2277656 call on_fn[1390127] rvfDerefTmp[2277640])
      }
      {
        val _args_foron_fn[2277659]:_class_localson_fn[2059911] "temp"
        (2277661 'move' _args_foron_fn[2277659](2277663 'stack allocate class' _class_localson_fn[2059911]))
        (2277665 '.=' _args_foron_fn[2277659] _0_tmp[2059914] call_tmp[2277604])
        (2277669 '.=' _args_foron_fn[2277659] _1_rvfDerefTmp[2059916] rvfDerefTmp[2277640])
        val _args_vforon_fn[2277673]:c_void_ptr[149] "temp"
        (2277675 'move' _args_vforon_fn[2277673](2277677 'cast_to_void_star' _args_foron_fn[2277659]))
        val _args_sizeon_fn[2277679]:int(64)[13] "temp"
        (2277681 'move' _args_sizeon_fn[2277679](2277683 'sizeof_bundle' _class_localson_fn[2059911]))
        on(2277686 call wrapon_fn[2059945] call_tmp[2277604] _args_vforon_fn[2277673] _args_sizeon_fn[2277679] _args_foron_fn[2277659])
      }
      gotoErrorHandlingReturn _endon_fn[1786695] _endon_fn[1786695]
    }
    val error[1786753]:Error[167984] "error variable" "temp"
    (1786762 'move' error[1786753] nil[44])
    const-ref call_tmp[1390234]:ioNewline[238720] "dead after last mention" "maybe param" "temp"
    (1390236 'move' call_tmp[1390234](1390700 '.v' args[1781643] x1[1389117]))
    ref rvfRerefTmp[2049757]:channel(true,dynamic,true)[1021844] "temp"
    (2049761 'move' rvfRerefTmp[2049757](2049758 'set reference' this[1781641]))
    val rvfRerefTmp[2049797]:locale[28] "temp"
    (2049800 'move' rvfRerefTmp[2049797] origLocale[1781645])
    (1390245 call _writeOne[1390703] rvfRerefTmp[2049757] call_tmp[1390234] rvfRerefTmp[2049797] error[1786753])
    val errorExists[2074385]:bool[10] "temp"
    (2074390 'move' errorExists[2074385](2074387 '!=' error[1786753] nil[44]))
    if errorExists[2074385]
    {
      gotoErrorHandling handler[1786754] handler[1786754]
    }
    label handler[1786754]
    val errorExists[2074393]:bool[10] "temp"
    (2074398 'move' errorExists[2074393](2074395 '!=' error[1786753] nil[44]))
    if errorExists[2074393]
    {
      (1786769 '=' error_out[1786693] error[1786753])
      ref call_tmp[2277697]:locale[28] "dead after last mention" "maybe param" "temp"
      (2277699 'move' call_tmp[2277697](2277701 '.' this[1781641] home[1021832]))
      const-val call_tmp[2277704]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2277706]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277708 'move' coerce_tmp[2277706](2277710 '.v' call_tmp[2277697] _instance[89978]))
      val coerce_tmp[2277713]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277715 'move' coerce_tmp[2277713](2277717 'cast' object[22] coerce_tmp[2277706]))
      const-val call_tmp[2277720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277722 'move' call_tmp[2277720](2277724 'ptr_eq' coerce_tmp[2277713] nil[44]))
      if call_tmp[2277720]
      {
        (2277730 call nilCheckHalt[210169] "argument to ! is nil")
      }
      (2277733 'move' call_tmp[2277704](2277735 '_wide_get_locale' coerce_tmp[2277706]))
      val rvfDerefTmp[2277740]:channel(true,dynamic,true)[1021844] "temp"
      (2277742 'move' rvfDerefTmp[2277740] this[1781641])
      val isdirect[2277746]:bool[10] "temp"
      (2277748 'move' isdirect[2277746](2277751 call chpl_doDirectExecuteOn[187469] call_tmp[2277704]))
      if isdirect[2277746]
      {
        (2277756 call on_fn[1390127] rvfDerefTmp[2277740])
      }
      {
        val _args_foron_fn[2277759]:_class_localson_fn[2059911] "temp"
        (2277761 'move' _args_foron_fn[2277759](2277763 'stack allocate class' _class_localson_fn[2059911]))
        (2277765 '.=' _args_foron_fn[2277759] _0_tmp[2059914] call_tmp[2277704])
        (2277769 '.=' _args_foron_fn[2277759] _1_rvfDerefTmp[2059916] rvfDerefTmp[2277740])
        val _args_vforon_fn[2277773]:c_void_ptr[149] "temp"
        (2277775 'move' _args_vforon_fn[2277773](2277777 'cast_to_void_star' _args_foron_fn[2277759]))
        val _args_sizeon_fn[2277779]:int(64)[13] "temp"
        (2277781 'move' _args_sizeon_fn[2277779](2277783 'sizeof_bundle' _class_localson_fn[2059911]))
        on(2277786 call wrapon_fn[2059945] call_tmp[2277704] _args_vforon_fn[2277773] _args_sizeon_fn[2277779] _args_foron_fn[2277759])
      }
      gotoErrorHandlingReturn _endon_fn[1786695] _endon_fn[1786695]
    }
    ref call_tmp[2277797]:locale[28] "dead after last mention" "maybe param" "temp"
    (2277799 'move' call_tmp[2277797](2277801 '.' this[1781641] home[1021832]))
    const-val call_tmp[2277804]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2277806]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277808 'move' coerce_tmp[2277806](2277810 '.v' call_tmp[2277797] _instance[89978]))
    val coerce_tmp[2277813]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277815 'move' coerce_tmp[2277813](2277817 'cast' object[22] coerce_tmp[2277806]))
    const-val call_tmp[2277820]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277822 'move' call_tmp[2277820](2277824 'ptr_eq' coerce_tmp[2277813] nil[44]))
    if call_tmp[2277820]
    {
      (2277830 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2277833 'move' call_tmp[2277804](2277835 '_wide_get_locale' coerce_tmp[2277806]))
    val rvfDerefTmp[2277840]:channel(true,dynamic,true)[1021844] "temp"
    (2277842 'move' rvfDerefTmp[2277840] this[1781641])
    val isdirect[2277846]:bool[10] "temp"
    (2277848 'move' isdirect[2277846](2277851 call chpl_doDirectExecuteOn[187469] call_tmp[2277804]))
    if isdirect[2277846]
    {
      (2277856 call on_fn[1390127] rvfDerefTmp[2277840])
    }
    {
      val _args_foron_fn[2277859]:_class_localson_fn[2059911] "temp"
      (2277861 'move' _args_foron_fn[2277859](2277863 'stack allocate class' _class_localson_fn[2059911]))
      (2277865 '.=' _args_foron_fn[2277859] _0_tmp[2059914] call_tmp[2277804])
      (2277869 '.=' _args_foron_fn[2277859] _1_rvfDerefTmp[2059916] rvfDerefTmp[2277840])
      val _args_vforon_fn[2277873]:c_void_ptr[149] "temp"
      (2277875 'move' _args_vforon_fn[2277873](2277877 'cast_to_void_star' _args_foron_fn[2277859]))
      val _args_sizeon_fn[2277879]:int(64)[13] "temp"
      (2277881 'move' _args_sizeon_fn[2277879](2277883 'sizeof_bundle' _class_localson_fn[2059911]))
      on(2277886 call wrapon_fn[2059945] call_tmp[2277804] _args_vforon_fn[2277873] _args_sizeon_fn[2277879] _args_foron_fn[2277859])
    }
    label _endon_fn[1786695]
    (1389097 return _void[55])
  }
  function on_fn[1389436](const in arg this[1781647]:channel(true,dynamic,true)[1021844], ref arg err[1781649]:syserr[223603]) : void[4] "inlined function" "on" "resolved"
  {
    const-val call_tmp[1389450]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1389777]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1389781 'move' coerce_tmp[1389777](2325782 '.v' this[1781647] _channel_internal[1021837]))
    (1389452 'move' call_tmp[1389450](1389455 call qio_channel_lock[233026] coerce_tmp[1389777]))
    (2168955 '=' err[1781649] call_tmp[1389450])
    (1389463 return _void[55])
  }
  function on_fn[1389853](const in arg this[1781651]:channel(true,dynamic,true)[1021844], ref arg path[1781653]:string[26], ref arg offset[1781655]:int(64)[13], ref arg error_out[1786873]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1389859]:c_string[19] "dead at end of block" "insert auto destroy"
    (1390060 'move' tmp_path[1389859](1390058 'cast' c_string[19] nil[44]))
    val tmp_offset[1389865]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1390063 'move' tmp_offset[1389865] 0)
    (2169592 call qio_int_to_err[223653] 0)
    const-val call_tmp[1389907]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1390015]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1390021 'move' coerce_tmp[1390015](1390017 'cast' int(32)[95] 1))
    const-val coerce_tmp[1390023]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1390027 'move' coerce_tmp[1390023](2325795 '.v' this[1781651] _channel_internal[1021837]))
    (1389909 'move' call_tmp[1389907](1389912 call qio_channel_path_offset[232943] coerce_tmp[1390015] coerce_tmp[1390023] tmp_path[1389859] tmp_offset[1389865]))
    const-val call_tmp[2168335]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168337 'move' call_tmp[2168335](2168340 call qio_err_iserr[223665] call_tmp[1389907]))
    const-val call_tmp[2168342]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2168344 'move' call_tmp[2168342](2168346 '==' call_tmp[2168335] 0))
    if call_tmp[2168342]
    {
      const-val call_tmp[1389941]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1786878]:Error[167984] "error variable" "temp"
      (1786880 'move' error[1786878] nil[44])
      const-val call_tmp[2165789]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2165791 'move' call_tmp[2165789](2165793 'string_length_bytes' tmp_path[1389859]))
      val errorExists[2074441]:bool[10] "temp"
      (2074446 'move' errorExists[2074441](2074443 '!=' error[1786878] nil[44]))
      if errorExists[2074441]
      {
        (1786884 '=' error_out[1786873] error[1786878])
        gotoErrorHandlingReturn _endon_fn[1786875] _endon_fn[1786875]
      }
      val error[1786893]:Error[167984] "error variable" "temp"
      (1786895 'move' error[1786893] nil[44])
      const-val ret[2105394]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2105396]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
      (2105398 'move' call_tmp[2105396](2105400 'cast' c_ptr(uint(8))[937442] tmp_path[1389859]))
      val error[2105405]:Error[167984] "error variable" "temp"
      (2105407 'move' error[2105405] nil[44])
      const-val ret[2105410]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2105412]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2105414]:Error[167984] "error variable" "temp"
      (2105416 'move' error[2105414] nil[44])
      const-val ret_tmp[2105419]:string[26] "temp"
      (2105422 call decodeByteBuffer[173938] call_tmp[2105396] call_tmp[2165789] replace[173694] error[2105414] ret_tmp[2105419])
      (2105428 'move' call_tmp[2105412] ret_tmp[2105419])
      val errorExists[2105431]:bool[10] "temp"
      (2105433 'move' errorExists[2105431](2105435 '!=' error[2105414] nil[44]))
      if errorExists[2105431]
      {
        (2105440 '=' error[2105405] error[2105414])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2105449] _endcreateStringWithNewBuffer[2105449]
      }
      (2105446 'move' ret[2105410] call_tmp[2105412])
      label _endcreateStringWithNewBuffer[2105449]
      val errorExists[2105454]:bool[10] "temp"
      (2105456 'move' errorExists[2105454](2105458 '!=' error[2105405] nil[44]))
      if errorExists[2105454]
      {
        (2105463 '=' error[1786893] error[2105405])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2105472] _endcreateStringWithNewBuffer[2105472]
      }
      (2105469 'move' ret[2105394] ret[2105410])
      label _endcreateStringWithNewBuffer[2105472]
      (1802499 'move' call_tmp[1389941] ret[2105394])
      val errorExists[2074449]:bool[10] "temp"
      (2074454 'move' errorExists[2074449](2074451 '!=' error[1786893] nil[44]))
      if errorExists[2074449]
      {
        (1786899 '=' error_out[1786873] error[1786893])
        gotoErrorHandlingReturn _endon_fn[1786875] _endon_fn[1786875]
      }
      (1389951 call =[38272] path[1781653] call_tmp[1389941])
      ref i_x[2096211]:string[26] "temp"
      (2096215 'move' i_x[2096211](2096213 'set reference' call_tmp[1389941]))
      (2096219 call deinit[30834] i_x[2096211])
      ref i_cs[2083876]:c_string[19] "temp"
      (2083880 'move' i_cs[2083876](2083878 'set reference' tmp_path[1389859]))
      const-val call_tmp[2083883]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083885 'move' call_tmp[2083883](2083887 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2083890]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083892 'move' call_tmp[2083890](2083894 'cast' c_string[19] call_tmp[2083883]))
      const-val coerce_tmp[2083897]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2083899 'move' coerce_tmp[2083897] tmp_path[1389859])
      const-val call_tmp[2083903]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083905 'move' call_tmp[2083903](2083907 'string_compare' coerce_tmp[2083897] call_tmp[2083890]))
      const-val call_tmp[2083910]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2083912 'move' call_tmp[2083910](2083914 '!=' call_tmp[2083903] 0))
      if call_tmp[2083910]
      {
        (2083920 call chpl_rt_free_c_string[22717] i_cs[2083876])
      }
      (2086018 '=' offset[1781655] tmp_offset[1389865])
    }
    label _endon_fn[1786875]
    (1389970 return _void[55])
  }
  function on_fn[1390127](const in arg this[1781657]:channel(true,dynamic,true)[1021844]) : void[4] "inlined function" "on" "resolved"
  {
    const-val coerce_tmp[1390168]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1390172 'move' coerce_tmp[1390168](2325807 '.v' this[1781657] _channel_internal[1021837]))
    (1390142 call qio_channel_unlock[233038] coerce_tmp[1390168])
    (1390144 return _void[55])
  }
  function on_fn[1398866](const in arg this[1781659]:channel(true,dynamic,true)[1021844], const  ref arg args[1781661]:(real(64),ioNewline)[1398991], const in arg origLocale[1781663]:locale[28], ref arg error_out[1787067]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1787071]:Error[167984] "error variable" "temp"
    (1787080 'move' error[1787071] nil[44])
    ref rvfRerefTmp[2049852]:channel(true,dynamic,true)[1021844] "temp"
    (2049856 'move' rvfRerefTmp[2049852](2049853 'set reference' this[1781659]))
    val err[2277234]:syserr[223603] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2277236]:syserr[223603] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277238 'move' call_tmp[2277236](2277241 call qio_int_to_err[223653] 0))
    (2277243 'move' err[2277234] call_tmp[2277236])
    const-val coerce_tmp[2277246]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277248 'move' coerce_tmp[2277246](2277250 '.v' this[1781659] _channel_internal[1021837]))
    const-val call_tmp[2277253]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277255 'move' call_tmp[2277253](2277257 'cast' c_void_ptr[149] coerce_tmp[2277246]))
    const-val call_tmp[2277260]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277262 'move' call_tmp[2277260](2277264 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2277267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277269 'move' call_tmp[2277267](2277271 'ptr_eq' call_tmp[2277253] call_tmp[2277260]))
    if call_tmp[2277267]
    {
      const-val call_tmp[2277276]:owned SystemError[1000257] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2277278]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277280 'move' coerce_tmp[2277278](2277282 'cast' int(64)[13] EINVAL[224478]))
      const-val ret_tmp[2277285]:owned SystemError[1000257] "temp"
      (2277288 call fromSyserr[1017132] coerce_tmp[2277278] "Operation attempted on an invalid channel" ret_tmp[2277285])
      (2277292 'move' call_tmp[2277276] ret_tmp[2277285])
      val call_tmp[2277295]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2277297]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2277299]:owned Error[966477] "temp"
      ref i_x[2277301]:owned SystemError[1000257] "temp"
      (2277303 'move' i_x[2277301](2277305 'set reference' call_tmp[2277276]))
      ref i__retArg[2277307]:owned Error[966477] "temp"
      (2277309 'move' i__retArg[2277307](2277311 'set reference' ret_tmp[2277299]))
      val _formal_tmp_x[2277313]:owned SystemError[1000257] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2277315 'move' _formal_tmp_x[2277313] i_x[2277301])
      const-val ret[2277318]:owned Error[966477] "dead after last mention" "RVV" "temp"
      ref i_this[2277320]:owned SystemError[1000257] "temp"
      (2277322 'move' i_this[2277320](2277324 'set reference' _formal_tmp_x[2277313]))
      val coerce_tmp[2277326]:SystemError[264864] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2277328 'move' coerce_tmp[2277326](2277330 '.v' i_this[2277320] chpl_p[1000252]))
      val call_tmp[2277333]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277335 'move' call_tmp[2277333](2277337 'cast' Error[167984] coerce_tmp[2277326]))
      ref i_this[2277345]:owned SystemError[1000257] "temp"
      (2277347 'move' i_this[2277345](2277349 'set reference' _formal_tmp_x[2277313]))
      val tmp[2277351]:SystemError[264864] "temp"
      (2277353 'move' tmp[2277351](2277355 'cast' SystemError[264864] nil[44]))
      (2277358 '.=' i_this[2277345] chpl_p[1000252] tmp[2277351])
      val coerce_tmp[2277362]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277364 'move' coerce_tmp[2277362](2277366 'cast' object[22] call_tmp[2277333]))
      const-val call_tmp[2277369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277371 'move' call_tmp[2277369](2277373 'ptr_eq' coerce_tmp[2277362] nil[44]))
      if call_tmp[2277369]
      {
        (2277379 call nilCheckHalt[210169] "argument to ! is nil")
      }
      const-val call_tmp[2277382]:owned Error[966477] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2277384]:owned Error[966477] "dead after last mention" "delay instantiation" "temp"
      (2277387 call init[968113] initTemp[2277384] call_tmp[2277333])
      (2277390 'move' call_tmp[2277382] initTemp[2277384])
      (2277393 'move' ret[2277318] call_tmp[2277382])
      (2277397 call chpl__autoDestroy[1490020] _formal_tmp_x[2277313])
      (2277399 '=' i__retArg[2277307] ret[2277318])
      (2277402 'move' coerce_tmp[2277297] ret_tmp[2277299])
      const-val _formal_tmp_in_err[2277405]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2277407 'move' _formal_tmp_in_err[2277405] coerce_tmp[2277297])
      (2277410 'move' call_tmp[2277295](2277413 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2277405]))
      (2277415 '=' error[1787071] call_tmp[2277295])
      gotoErrorHandlingReturn _endlock[2277586] _endlock[2277586]
    }
    ref call_tmp[2277423]:locale[28] "dead after last mention" "maybe param" "temp"
    (2277425 'move' call_tmp[2277423](2277427 '.' this[1781659] home[1021832]))
    const-val call_tmp[2277430]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2277432]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277434 'move' coerce_tmp[2277432](2277436 '.v' call_tmp[2277423] _instance[89978]))
    val coerce_tmp[2277439]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2277441 'move' coerce_tmp[2277439](2277443 'cast' object[22] coerce_tmp[2277432]))
    const-val call_tmp[2277446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277448 'move' call_tmp[2277446](2277450 'ptr_eq' coerce_tmp[2277439] nil[44]))
    if call_tmp[2277446]
    {
      (2277456 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2277459 'move' call_tmp[2277430](2277461 '_wide_get_locale' coerce_tmp[2277432]))
    val rvfDerefTmp[2277466]:channel(true,dynamic,true)[1021844] "temp"
    (2277468 'move' rvfDerefTmp[2277466] this[1781659])
    val isdirect[2277472]:bool[10] "temp"
    (2277474 'move' isdirect[2277472](2277477 call chpl_doDirectExecuteOn[187469] call_tmp[2277430]))
    if isdirect[2277472]
    {
      (2277482 call on_fn[1389436] rvfDerefTmp[2277466] err[2277234])
    }
    {
      val _args_foron_fn[2277486]:_class_localson_fn[2059658] "temp"
      (2277488 'move' _args_foron_fn[2277486](2277490 'stack allocate class' _class_localson_fn[2059658]))
      (2277492 '.=' _args_foron_fn[2277486] _0_tmp[2059661] call_tmp[2277430])
      (2277496 '.=' _args_foron_fn[2277486] _1_rvfDerefTmp[2059663] rvfDerefTmp[2277466])
      ref tmp[2277500]:syserr[223603] "temp"
      (2277502 'move' tmp[2277500](2277504 'set reference' err[2277234]))
      (2277506 '.=' _args_foron_fn[2277486] _2_err[2059665] tmp[2277500])
      val _args_vforon_fn[2277510]:c_void_ptr[149] "temp"
      (2277512 'move' _args_vforon_fn[2277510](2277514 'cast_to_void_star' _args_foron_fn[2277486]))
      val _args_sizeon_fn[2277516]:int(64)[13] "temp"
      (2277518 'move' _args_sizeon_fn[2277516](2277520 'sizeof_bundle' _class_localson_fn[2059658]))
      on(2277523 call wrapon_fn[2059704] call_tmp[2277430] _args_vforon_fn[2277510] _args_sizeon_fn[2277516] _args_foron_fn[2277486])
    }
    const-val call_tmp[2277529]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277531 'move' call_tmp[2277529](2277534 call qio_err_iserr[223665] err[2277234]))
    const-val call_tmp[2277536]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2277538 'move' call_tmp[2277536](2277540 '!=' call_tmp[2277529] 0))
    if call_tmp[2277536]
    {
      val error[2277545]:Error[167984] "error variable" "temp"
      (2277547 'move' error[2277545] nil[44])
      (2277551 call _ch_ioerror[1389786] rvfRerefTmp[2049852] err[2277234] "in lock" error[2277545])
      val errorExists[2277556]:bool[10] "temp"
      (2277558 'move' errorExists[2277556](2277560 '!=' error[2277545] nil[44]))
      if errorExists[2277556]
      {
        gotoErrorHandling handler[2277568] handler[2277568]
      }
      label handler[2277568]
      val errorExists[2277570]:bool[10] "temp"
      (2277572 'move' errorExists[2277570](2277574 '!=' error[2277545] nil[44]))
      if errorExists[2277570]
      {
        (2277579 '=' error[1787071] error[2277545])
        gotoErrorHandlingReturn _endlock[2277586] _endlock[2277586]
      }
    }
    label _endlock[2277586]
    val errorExists[2074537]:bool[10] "temp"
    (2074542 'move' errorExists[2074537](2074539 '!=' error[1787071] nil[44]))
    if errorExists[2074537]
    {
      gotoErrorHandling handler[1787072] handler[1787072]
    }
    label handler[1787072]
    val errorExists[2074545]:bool[10] "temp"
    (2074550 'move' errorExists[2074545](2074547 '!=' error[1787071] nil[44]))
    if errorExists[2074545]
    {
      (1787087 '=' error_out[1787067] error[1787071])
      gotoErrorHandlingReturn _endon_fn[1787069] _endon_fn[1787069]
    }
    val error[1787099]:Error[167984] "error variable" "temp"
    (1787108 'move' error[1787099] nil[44])
    const-val coerce_tmp[1399344]:real(64)[16] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1399348 'move' coerce_tmp[1399344](2325844 '.v' args[1781661] x0[1398987]))
    ref rvfRerefTmp[2049859]:channel(true,dynamic,true)[1021844] "temp"
    (2049863 'move' rvfRerefTmp[2049859](2049860 'set reference' this[1781659]))
    val rvfRerefTmp[2049900]:locale[28] "temp"
    (2049903 'move' rvfRerefTmp[2049900] origLocale[1781663])
    (1399155 call _writeOne[1399202] rvfRerefTmp[2049859] coerce_tmp[1399344] rvfRerefTmp[2049900] error[1787099])
    val errorExists[2074553]:bool[10] "temp"
    (2074558 'move' errorExists[2074553](2074555 '!=' error[1787099] nil[44]))
    if errorExists[2074553]
    {
      gotoErrorHandling handler[1787100] handler[1787100]
    }
    label handler[1787100]
    val errorExists[2074561]:bool[10] "temp"
    (2074566 'move' errorExists[2074561](2074563 '!=' error[1787099] nil[44]))
    if errorExists[2074561]
    {
      (1787115 '=' error_out[1787067] error[1787099])
      ref call_tmp[2277897]:locale[28] "dead after last mention" "maybe param" "temp"
      (2277899 'move' call_tmp[2277897](2277901 '.' this[1781659] home[1021832]))
      const-val call_tmp[2277904]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2277906]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277908 'move' coerce_tmp[2277906](2277910 '.v' call_tmp[2277897] _instance[89978]))
      val coerce_tmp[2277913]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2277915 'move' coerce_tmp[2277913](2277917 'cast' object[22] coerce_tmp[2277906]))
      const-val call_tmp[2277920]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2277922 'move' call_tmp[2277920](2277924 'ptr_eq' coerce_tmp[2277913] nil[44]))
      if call_tmp[2277920]
      {
        (2277930 call nilCheckHalt[210169] "argument to ! is nil")
      }
      (2277933 'move' call_tmp[2277904](2277935 '_wide_get_locale' coerce_tmp[2277906]))
      val rvfDerefTmp[2277940]:channel(true,dynamic,true)[1021844] "temp"
      (2277942 'move' rvfDerefTmp[2277940] this[1781659])
      val isdirect[2277946]:bool[10] "temp"
      (2277948 'move' isdirect[2277946](2277951 call chpl_doDirectExecuteOn[187469] call_tmp[2277904]))
      if isdirect[2277946]
      {
        (2277956 call on_fn[1390127] rvfDerefTmp[2277940])
      }
      {
        val _args_foron_fn[2277959]:_class_localson_fn[2059911] "temp"
        (2277961 'move' _args_foron_fn[2277959](2277963 'stack allocate class' _class_localson_fn[2059911]))
        (2277965 '.=' _args_foron_fn[2277959] _0_tmp[2059914] call_tmp[2277904])
        (2277969 '.=' _args_foron_fn[2277959] _1_rvfDerefTmp[2059916] rvfDerefTmp[2277940])
        val _args_vforon_fn[2277973]:c_void_ptr[149] "temp"
        (2277975 'move' _args_vforon_fn[2277973](2277977 'cast_to_void_star' _args_foron_fn[2277959]))
        val _args_sizeon_fn[2277979]:int(64)[13] "temp"
        (2277981 'move' _args_sizeon_fn[2277979](2277983 'sizeof_bundle' _class_localson_fn[2059911]))
        on(2277986 call wrapon_fn[2059945] call_tmp[2277904] _args_vforon_fn[2277973] _args_sizeon_fn[2277979] _args_foron_fn[2277959])
      }
      gotoErrorHandlingReturn _endon_fn[1787069] _endon_fn[1787069]
    }
    val error[1787127]:Error[167984] "error variable" "temp"
    (1787136 'move' error[1787127] nil[44])
    const-ref call_tmp[1399176]:ioNewline[238720] "dead after last mention" "maybe param" "temp"
    (1399178 'move' call_tmp[1399176](1406684 '.v' args[1781661] x1[1398989]))
    ref rvfRerefTmp[2049866]:channel(true,dynamic,true)[1021844] "temp"
    (2049870 'move' rvfRerefTmp[2049866](2049867 'set reference' this[1781659]))
    val rvfRerefTmp[2049906]:locale[28] "temp"
    (2049909 'move' rvfRerefTmp[2049906] origLocale[1781663])
    (1399187 call _writeOne[1390703] rvfRerefTmp[2049866] call_tmp[1399176] rvfRerefTmp[2049906] error[1787127])
    val errorExists[2074569]:bool[10] "temp"
    (2074574 'move' errorExists[2074569](2074571 '!=' error[1787127] nil[44]))
    if errorExists[2074569]
    {
      gotoErrorHandling handler[1787128] handler[1787128]
    }
    label handler[1787128]
    val errorExists[2074577]:bool[10] "temp"
    (2074582 'move' errorExists[2074577](2074579 '!=' error[1787127] nil[44]))
    if errorExists[2074577]
    {
      (1787143 '=' error_out[1787067] error[1787127])
      ref call_tmp[2277997]:locale[28] "dead after last mention" "maybe param" "temp"
      (2277999 'move' call_tmp[2277997](2278001 '.' this[1781659] home[1021832]))
      const-val call_tmp[2278004]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2278006]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2278008 'move' coerce_tmp[2278006](2278010 '.v' call_tmp[2277997] _instance[89978]))
      val coerce_tmp[2278013]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2278015 'move' coerce_tmp[2278013](2278017 'cast' object[22] coerce_tmp[2278006]))
      const-val call_tmp[2278020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2278022 'move' call_tmp[2278020](2278024 'ptr_eq' coerce_tmp[2278013] nil[44]))
      if call_tmp[2278020]
      {
        (2278030 call nilCheckHalt[210169] "argument to ! is nil")
      }
      (2278033 'move' call_tmp[2278004](2278035 '_wide_get_locale' coerce_tmp[2278006]))
      val rvfDerefTmp[2278040]:channel(true,dynamic,true)[1021844] "temp"
      (2278042 'move' rvfDerefTmp[2278040] this[1781659])
      val isdirect[2278046]:bool[10] "temp"
      (2278048 'move' isdirect[2278046](2278051 call chpl_doDirectExecuteOn[187469] call_tmp[2278004]))
      if isdirect[2278046]
      {
        (2278056 call on_fn[1390127] rvfDerefTmp[2278040])
      }
      {
        val _args_foron_fn[2278059]:_class_localson_fn[2059911] "temp"
        (2278061 'move' _args_foron_fn[2278059](2278063 'stack allocate class' _class_localson_fn[2059911]))
        (2278065 '.=' _args_foron_fn[2278059] _0_tmp[2059914] call_tmp[2278004])
        (2278069 '.=' _args_foron_fn[2278059] _1_rvfDerefTmp[2059916] rvfDerefTmp[2278040])
        val _args_vforon_fn[2278073]:c_void_ptr[149] "temp"
        (2278075 'move' _args_vforon_fn[2278073](2278077 'cast_to_void_star' _args_foron_fn[2278059]))
        val _args_sizeon_fn[2278079]:int(64)[13] "temp"
        (2278081 'move' _args_sizeon_fn[2278079](2278083 'sizeof_bundle' _class_localson_fn[2059911]))
        on(2278086 call wrapon_fn[2059945] call_tmp[2278004] _args_vforon_fn[2278073] _args_sizeon_fn[2278079] _args_foron_fn[2278059])
      }
      gotoErrorHandlingReturn _endon_fn[1787069] _endon_fn[1787069]
    }
    ref call_tmp[2278097]:locale[28] "dead after last mention" "maybe param" "temp"
    (2278099 'move' call_tmp[2278097](2278101 '.' this[1781659] home[1021832]))
    const-val call_tmp[2278104]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2278106]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2278108 'move' coerce_tmp[2278106](2278110 '.v' call_tmp[2278097] _instance[89978]))
    val coerce_tmp[2278113]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2278115 'move' coerce_tmp[2278113](2278117 'cast' object[22] coerce_tmp[2278106]))
    const-val call_tmp[2278120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2278122 'move' call_tmp[2278120](2278124 'ptr_eq' coerce_tmp[2278113] nil[44]))
    if call_tmp[2278120]
    {
      (2278130 call nilCheckHalt[210169] "argument to ! is nil")
    }
    (2278133 'move' call_tmp[2278104](2278135 '_wide_get_locale' coerce_tmp[2278106]))
    val rvfDerefTmp[2278140]:channel(true,dynamic,true)[1021844] "temp"
    (2278142 'move' rvfDerefTmp[2278140] this[1781659])
    val isdirect[2278146]:bool[10] "temp"
    (2278148 'move' isdirect[2278146](2278151 call chpl_doDirectExecuteOn[187469] call_tmp[2278104]))
    if isdirect[2278146]
    {
      (2278156 call on_fn[1390127] rvfDerefTmp[2278140])
    }
    {
      val _args_foron_fn[2278159]:_class_localson_fn[2059911] "temp"
      (2278161 'move' _args_foron_fn[2278159](2278163 'stack allocate class' _class_localson_fn[2059911]))
      (2278165 '.=' _args_foron_fn[2278159] _0_tmp[2059914] call_tmp[2278104])
      (2278169 '.=' _args_foron_fn[2278159] _1_rvfDerefTmp[2059916] rvfDerefTmp[2278140])
      val _args_vforon_fn[2278173]:c_void_ptr[149] "temp"
      (2278175 'move' _args_vforon_fn[2278173](2278177 'cast_to_void_star' _args_foron_fn[2278159]))
      val _args_sizeon_fn[2278179]:int(64)[13] "temp"
      (2278181 'move' _args_sizeon_fn[2278179](2278183 'sizeof_bundle' _class_localson_fn[2059911]))
      on(2278186 call wrapon_fn[2059945] call_tmp[2278104] _args_vforon_fn[2278173] _args_sizeon_fn[2278179] _args_foron_fn[2278159])
    }
    label _endon_fn[1787069]
    (1398969 return _void[55])
  }
  function on_fn[1444915](ref arg this[1781723]:channel(false,dynamic,true)[985646]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1444964]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1444968 'move' coerce_tmp[1444964](2326490 '.v' this[1781723] _channel_internal[985639]))
    (1444930 call qio_channel_release[232980] coerce_tmp[1444964])
    (2326496 '.=' this[1781723] _channel_internal[985639] QIO_CHANNEL_PTR_NULL[231487])
    (1444945 return _void[55])
  }
  function on_fn[1507894](ref arg this[1781765]:channel(true,dynamic,true)[1021844]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1507943]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1507947 'move' coerce_tmp[1507943](2326831 '.v' this[1781765] _channel_internal[1021837]))
    (1507909 call qio_channel_release[232980] coerce_tmp[1507943])
    (2326837 '.=' this[1781765] _channel_internal[1021837] QIO_CHANNEL_PTR_NULL[231487])
    (1507924 return _void[55])
  }
  function on_fn[1510070](ref arg this[1781769]:channel(true,dynamic,false)[1060966]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1510119]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1510123 'move' coerce_tmp[1510119](2326849 '.v' this[1781769] _channel_internal[1060959]))
    (1510085 call qio_channel_release[232980] coerce_tmp[1510119])
    (2326855 '.=' this[1781769] _channel_internal[1060959] QIO_CHANNEL_PTR_NULL[231487])
    (1510100 return _void[55])
  }
  function on_fn[1514324](ref arg this[1781775]:channel(false,dynamic,false)[1080701]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1514373]:qio_channel_ptr_t[231484] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1514377 'move' coerce_tmp[1514373](2326884 '.v' this[1781775] _channel_internal[1080694]))
    (1514339 call qio_channel_release[232980] coerce_tmp[1514373])
    (2326890 '.=' this[1781775] _channel_internal[1080694] QIO_CHANNEL_PTR_NULL[231487])
    (1514354 return _void[55])
  }
  function chpl__deinit_IO[1824937]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1824943]
    ref i_x[2283028]:file[235599] "temp"
    (2283032 'move' i_x[2283028](2283030 'set reference' call_tmp[724050]))
    (2283036 call deinit[235910] i_x[2283028])
    ref i_x[2283016]:file[235599] "temp"
    (2283020 'move' i_x[2283016](2283018 'set reference' call_tmp[724033]))
    (2283024 call deinit[235910] i_x[2283016])
    ref i_x[2283004]:file[235599] "temp"
    (2283008 'move' i_x[2283004](2283006 'set reference' call_tmp[724016]))
    (2283012 call deinit[235910] i_x[2283004])
    ref i_x[2285778]:channel(true,dynamic,true)[1021844] "temp"
    (2285782 'move' i_x[2285778](2285780 'set reference' stderr[250283]))
    (2285786 call deinit[1507859] i_x[2285778])
    ref i_x[2285766]:channel(true,dynamic,true)[1021844] "temp"
    (2285770 'move' i_x[2285766](2285768 'set reference' stdout[250254]))
    (2285774 call deinit[1507859] i_x[2285766])
    ref i_x[2283323]:channel(false,dynamic,true)[985646] "temp"
    (2283327 'move' i_x[2283323](2283325 'set reference' stdin[250227]))
    (2283331 call deinit[1444880] i_x[2283323])
    ref tmp[2050764]:6*string[985236] "temp"
    (2050769 'move' tmp[2050764](2050766 '.' _arg_to_proto_names[246580] value[2050754]))
    ref _field_destructor_tmp_[2283225]:string[26] "temp"
    (2283227 'move' _field_destructor_tmp_[2283225](2283229 '.' tmp[2050764] x5[985234]))
    (2283233 call deinit[30834] _field_destructor_tmp_[2283225])
    ref _field_destructor_tmp_[2283235]:string[26] "temp"
    (2283237 'move' _field_destructor_tmp_[2283235](2283239 '.' tmp[2050764] x4[985232]))
    (2283243 call deinit[30834] _field_destructor_tmp_[2283235])
    ref _field_destructor_tmp_[2283245]:string[26] "temp"
    (2283247 'move' _field_destructor_tmp_[2283245](2283249 '.' tmp[2050764] x3[985230]))
    (2283253 call deinit[30834] _field_destructor_tmp_[2283245])
    ref _field_destructor_tmp_[2283255]:string[26] "temp"
    (2283257 'move' _field_destructor_tmp_[2283255](2283259 '.' tmp[2050764] x2[985228]))
    (2283263 call deinit[30834] _field_destructor_tmp_[2283255])
    ref _field_destructor_tmp_[2283265]:string[26] "temp"
    (2283267 'move' _field_destructor_tmp_[2283265](2283269 '.' tmp[2050764] x1[985226]))
    (2283273 call deinit[30834] _field_destructor_tmp_[2283265])
    ref _field_destructor_tmp_[2283275]:string[26] "temp"
    (2283277 'move' _field_destructor_tmp_[2283275](2283279 '.' tmp[2050764] x0[985224]))
    (2283283 call deinit[30834] _field_destructor_tmp_[2283275])
    (1824940 return _void[55])
  }
  function wrapon_fn[2052338](const in arg dummy_locale_arg[2052340]:chpl_localeID_t[209352], in arg buf[2052342]:c_void_ptr[149], in arg buf_size[2052344]:int(64)[13], in arg c[2052346]:_class_localson_fn[2052298]) : void[4] "on block"
  {
    ref _1_this[2052358]:file[235599] "temp"
    (2052363 'move' _1_this[2052358](2052360 '.v' c[2052346] _1_this[2052303]))
    (2052349 call on_fn[935616] _1_this[2052358])
    (2052366 return _void[55])
  }
  function wrapon_fn[2052449](const in arg dummy_locale_arg[2052451]:chpl_localeID_t[209352], in arg buf[2052453]:c_void_ptr[149], in arg buf_size[2052455]:int(64)[13], in arg c[2052457]:_class_localson_fn[2052391]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2052469]:file[235599] "temp"
    (2052474 'move' _1_rvfDerefTmp[2052469](2052471 '.v' c[2052457] _1_rvfDerefTmp[2052396]))
    ref _2_ret[2052477]:iostyle[231863] "temp"
    (2052482 'move' _2_ret[2052477](2052479 '.v' c[2052457] _2_ret[2052398]))
    ref _3_error[2052485]:Error[167984] "temp"
    (2052490 'move' _3_error[2052485](2052487 '.v' c[2052457] _3_error[2052400]))
    (2052460 call on_fn[935625] _1_rvfDerefTmp[2052469] _2_ret[2052477] _3_error[2052485])
    (2052493 return _void[55])
  }
  function wrapon_fn[2052563](const in arg dummy_locale_arg[2052565]:chpl_localeID_t[209352], in arg buf[2052567]:c_void_ptr[149], in arg buf_size[2052569]:int(64)[13], in arg c[2052571]:_class_localson_fn[2052517]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2052583]:file[235599] "temp"
    (2052588 'move' _1_rvfDerefTmp[2052583](2052585 '.v' c[2052571] _1_rvfDerefTmp[2052522]))
    ref _2_err[2052591]:syserr[223603] "temp"
    (2052596 'move' _2_err[2052591](2052593 '.v' c[2052571] _2_err[2052524]))
    (2052574 call on_fn[935634] _1_rvfDerefTmp[2052583] _2_err[2052591])
    (2052599 return _void[55])
  }
  function wrapon_fn[2052695](const in arg dummy_locale_arg[2052697]:chpl_localeID_t[209352], in arg buf[2052699]:c_void_ptr[149], in arg buf_size[2052701]:int(64)[13], in arg c[2052703]:_class_localson_fn[2052625]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2052715]:file[235599] "temp"
    (2052720 'move' _1_rvfDerefTmp[2052715](2052717 '.v' c[2052703] _1_rvfDerefTmp[2052630]))
    ref _2_err[2052723]:syserr[223603] "temp"
    (2052728 'move' _2_err[2052723](2052725 '.v' c[2052703] _2_err[2052632]))
    ref _3_ret[2052731]:string[26] "temp"
    (2052736 'move' _3_ret[2052731](2052733 '.v' c[2052703] _3_ret[2052634]))
    ref _4_error[2052739]:Error[167984] "temp"
    (2052744 'move' _4_error[2052739](2052741 '.v' c[2052703] _4_error[2052636]))
    (2052706 call on_fn[935652] _1_rvfDerefTmp[2052715] _2_err[2052723] _3_ret[2052731] _4_error[2052739])
    (2052747 return _void[55])
  }
  function wrapon_fn[2053068](const in arg dummy_locale_arg[2053070]:chpl_localeID_t[209352], in arg buf[2053072]:c_void_ptr[149], in arg buf_size[2053074]:int(64)[13], in arg c[2053076]:_class_localson_fn[2052974]) : void[4] "on block"
  {
    ref _1_ret[2053088]:channel(false,dynamic,true)[985646] "temp"
    (2053093 'move' _1_ret[2053088](2053090 '.v' c[2053076] _1_ret[2052979]))
    val _2_hints[2053096]:int(32)[95] "temp"
    (2053101 'move' _2_hints[2053096](2053098 '.v' c[2053076] _2_hints[2052981]))
    ref _3_err[2053104]:syserr[223603] "temp"
    (2053109 'move' _3_err[2053104](2053106 '.v' c[2053076] _3_err[2052983]))
    val _4_start[2053112]:int(64)[13] "temp"
    (2053117 'move' _4_start[2053112](2053114 '.v' c[2053076] _4_start[2052985]))
    val _5_rvfDerefTmp[2053120]:iostyle[231863] "temp"
    (2053125 'move' _5_rvfDerefTmp[2053120](2053122 '.v' c[2053076] _5_rvfDerefTmp[2052987]))
    val _6_end[2053128]:int(64)[13] "temp"
    (2053133 'move' _6_end[2053128](2053130 '.v' c[2053076] _6_end[2052989]))
    val _7_rvfDerefTmp[2053136]:file[235599] "temp"
    (2053141 'move' _7_rvfDerefTmp[2053136](2053138 '.v' c[2053076] _7_rvfDerefTmp[2052991]))
    ref _8_error[2053144]:Error[167984] "temp"
    (2053149 'move' _8_error[2053144](2053146 '.v' c[2053076] _8_error[2052993]))
    (2053079 call on_fn[1016714] _1_ret[2053088] _2_hints[2053096] _3_err[2053104] _4_start[2053112] _5_rvfDerefTmp[2053120] _6_end[2053128] _7_rvfDerefTmp[2053136] _8_error[2053144])
    (2053152 return _void[55])
  }
  function wrapon_fn[2053263](const in arg dummy_locale_arg[2053265]:chpl_localeID_t[209352], in arg buf[2053267]:c_void_ptr[149], in arg buf_size[2053269]:int(64)[13], in arg c[2053271]:_class_localson_fn[2053181]) : void[4] "on block"
  {
    val _1_start[2053283]:int(64)[13] "temp"
    (2053288 'move' _1_start[2053283](2053285 '.v' c[2053271] _1_start[2053186]))
    val _2_rvfDerefTmp[2053291]:file[235599] "temp"
    (2053296 'move' _2_rvfDerefTmp[2053291](2053293 '.v' c[2053271] _2_rvfDerefTmp[2053188]))
    ref _3__formal_tmp_error[2053299]:syserr[223603] "temp"
    (2053304 'move' _3__formal_tmp_error[2053299](2053301 '.v' c[2053271] _3__formal_tmp_error[2053190]))
    val _4_end[2053307]:int(64)[13] "temp"
    (2053312 'move' _4_end[2053307](2053309 '.v' c[2053271] _4_end[2053192]))
    val _5_hints[2053315]:int(32)[95] "temp"
    (2053320 'move' _5_hints[2053315](2053317 '.v' c[2053271] _5_hints[2053194]))
    val _6_rvfDerefTmp[2053323]:iostyle[231863] "temp"
    (2053328 'move' _6_rvfDerefTmp[2053323](2053325 '.v' c[2053271] _6_rvfDerefTmp[2053196]))
    ref _7_this[2053331]:channel(false,dynamic,true)[985646] "temp"
    (2053336 'move' _7_this[2053331](2053333 '.v' c[2053271] _7_this[2053198]))
    (2053274 call on_fn[1017744] _1_start[2053283] _2_rvfDerefTmp[2053291] _3__formal_tmp_error[2053299] _4_end[2053307] _5_hints[2053315] _6_rvfDerefTmp[2053323] _7_this[2053331])
    (2053339 return _void[55])
  }
  function wrapon_fn[2053396](const in arg dummy_locale_arg[2053398]:chpl_localeID_t[209352], in arg buf[2053400]:c_void_ptr[149], in arg buf_size[2053402]:int(64)[13], in arg c[2053404]:_class_localson_fn[2053362]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2053416]:channel(false,dynamic,true)[985646] "temp"
    (2053421 'move' _1_rvfDerefTmp[2053416](2053418 '.v' c[2053404] _1_rvfDerefTmp[2053367]))
    (2053407 call on_fn[1018684] _1_rvfDerefTmp[2053416])
    (2053424 return _void[55])
  }
  function wrapon_fn[2053487](const in arg dummy_locale_arg[2053489]:chpl_localeID_t[209352], in arg buf[2053491]:c_void_ptr[149], in arg buf_size[2053493]:int(64)[13], in arg c[2053495]:_class_localson_fn[2053447]) : void[4] "on block"
  {
    ref _1_lhs[2053507]:channel(false,dynamic,true)[985646] "temp"
    (2053512 'move' _1_lhs[2053507](2053509 '.v' c[2053495] _1_lhs[2053452]))
    (2053498 call on_fn[1018728] _1_lhs[2053507])
    (2053515 return _void[55])
  }
  function wrapon_fn[2053751](const in arg dummy_locale_arg[2053753]:chpl_localeID_t[209352], in arg buf[2053755]:c_void_ptr[149], in arg buf_size[2053757]:int(64)[13], in arg c[2053759]:_class_localson_fn[2053657]) : void[4] "on block"
  {
    val _1_hints[2053771]:int(32)[95] "temp"
    (2053776 'move' _1_hints[2053771](2053773 '.v' c[2053759] _1_hints[2053662]))
    ref _2_err[2053779]:syserr[223603] "temp"
    (2053784 'move' _2_err[2053779](2053781 '.v' c[2053759] _2_err[2053664]))
    val _3_start[2053787]:int(64)[13] "temp"
    (2053792 'move' _3_start[2053787](2053789 '.v' c[2053759] _3_start[2053666]))
    val _4_end[2053795]:int(64)[13] "temp"
    (2053800 'move' _4_end[2053795](2053797 '.v' c[2053759] _4_end[2053668]))
    val _5_rvfDerefTmp[2053803]:iostyle[231863] "temp"
    (2053808 'move' _5_rvfDerefTmp[2053803](2053805 '.v' c[2053759] _5_rvfDerefTmp[2053670]))
    val _6_rvfDerefTmp[2053811]:file[235599] "temp"
    (2053816 'move' _6_rvfDerefTmp[2053811](2053813 '.v' c[2053759] _6_rvfDerefTmp[2053672]))
    ref _7_ret[2053819]:channel(true,dynamic,true)[1021844] "temp"
    (2053824 'move' _7_ret[2053819](2053821 '.v' c[2053759] _7_ret[2053674]))
    ref _8_error[2053827]:Error[167984] "temp"
    (2053832 'move' _8_error[2053827](2053829 '.v' c[2053759] _8_error[2053676]))
    (2053762 call on_fn[1022289] _1_hints[2053771] _2_err[2053779] _3_start[2053787] _4_end[2053795] _5_rvfDerefTmp[2053803] _6_rvfDerefTmp[2053811] _7_ret[2053819] _8_error[2053827])
    (2053835 return _void[55])
  }
  function wrapon_fn[2053946](const in arg dummy_locale_arg[2053948]:chpl_localeID_t[209352], in arg buf[2053950]:c_void_ptr[149], in arg buf_size[2053952]:int(64)[13], in arg c[2053954]:_class_localson_fn[2053864]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2053966]:iostyle[231863] "temp"
    (2053971 'move' _1_rvfDerefTmp[2053966](2053968 '.v' c[2053954] _1_rvfDerefTmp[2053869]))
    val _2_end[2053974]:int(64)[13] "temp"
    (2053979 'move' _2_end[2053974](2053976 '.v' c[2053954] _2_end[2053871]))
    val _3_start[2053982]:int(64)[13] "temp"
    (2053987 'move' _3_start[2053982](2053984 '.v' c[2053954] _3_start[2053873]))
    val _4_rvfDerefTmp[2053990]:file[235599] "temp"
    (2053995 'move' _4_rvfDerefTmp[2053990](2053992 '.v' c[2053954] _4_rvfDerefTmp[2053875]))
    ref _5__formal_tmp_error[2053998]:syserr[223603] "temp"
    (2054003 'move' _5__formal_tmp_error[2053998](2054000 '.v' c[2053954] _5__formal_tmp_error[2053877]))
    ref _6_this[2054006]:channel(true,dynamic,true)[1021844] "temp"
    (2054011 'move' _6_this[2054006](2054008 '.v' c[2053954] _6_this[2053879]))
    val _7_hints[2054014]:int(32)[95] "temp"
    (2054019 'move' _7_hints[2054014](2054016 '.v' c[2053954] _7_hints[2053881]))
    (2053957 call on_fn[1022780] _1_rvfDerefTmp[2053966] _2_end[2053974] _3_start[2053982] _4_rvfDerefTmp[2053990] _5__formal_tmp_error[2053998] _6_this[2054006] _7_hints[2054014])
    (2054022 return _void[55])
  }
  function wrapon_fn[2054079](const in arg dummy_locale_arg[2054081]:chpl_localeID_t[209352], in arg buf[2054083]:c_void_ptr[149], in arg buf_size[2054085]:int(64)[13], in arg c[2054087]:_class_localson_fn[2054045]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2054099]:channel(true,dynamic,true)[1021844] "temp"
    (2054104 'move' _1_rvfDerefTmp[2054099](2054101 '.v' c[2054087] _1_rvfDerefTmp[2054050]))
    (2054090 call on_fn[1023392] _1_rvfDerefTmp[2054099])
    (2054107 return _void[55])
  }
  function wrapon_fn[2054170](const in arg dummy_locale_arg[2054172]:chpl_localeID_t[209352], in arg buf[2054174]:c_void_ptr[149], in arg buf_size[2054176]:int(64)[13], in arg c[2054178]:_class_localson_fn[2054130]) : void[4] "on block"
  {
    ref _1_lhs[2054190]:channel(true,dynamic,true)[1021844] "temp"
    (2054195 'move' _1_lhs[2054190](2054192 '.v' c[2054178] _1_lhs[2054135]))
    (2054181 call on_fn[1023436] _1_lhs[2054190])
    (2054198 return _void[55])
  }
  function wrapon_fn[2054464](const in arg dummy_locale_arg[2054466]:chpl_localeID_t[209352], in arg buf[2054468]:c_void_ptr[149], in arg buf_size[2054470]:int(64)[13], in arg c[2054472]:_class_localson_fn[2054370]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2054484]:file[235599] "temp"
    (2054489 'move' _1_rvfDerefTmp[2054484](2054486 '.v' c[2054472] _1_rvfDerefTmp[2054375]))
    ref _2_err[2054492]:syserr[223603] "temp"
    (2054497 'move' _2_err[2054492](2054494 '.v' c[2054472] _2_err[2054377]))
    val _3_hints[2054500]:int(32)[95] "temp"
    (2054505 'move' _3_hints[2054500](2054502 '.v' c[2054472] _3_hints[2054379]))
    val _4_start[2054508]:int(64)[13] "temp"
    (2054513 'move' _4_start[2054508](2054510 '.v' c[2054472] _4_start[2054381]))
    ref _5_ret[2054516]:channel(true,dynamic,false)[1060966] "temp"
    (2054521 'move' _5_ret[2054516](2054518 '.v' c[2054472] _5_ret[2054383]))
    val _6_end[2054524]:int(64)[13] "temp"
    (2054529 'move' _6_end[2054524](2054526 '.v' c[2054472] _6_end[2054385]))
    val _7_rvfDerefTmp[2054532]:iostyle[231863] "temp"
    (2054537 'move' _7_rvfDerefTmp[2054532](2054534 '.v' c[2054472] _7_rvfDerefTmp[2054387]))
    ref _8_error[2054540]:Error[167984] "temp"
    (2054545 'move' _8_error[2054540](2054542 '.v' c[2054472] _8_error[2054389]))
    (2054475 call on_fn[1061041] _1_rvfDerefTmp[2054484] _2_err[2054492] _3_hints[2054500] _4_start[2054508] _5_ret[2054516] _6_end[2054524] _7_rvfDerefTmp[2054532] _8_error[2054540])
    (2054548 return _void[55])
  }
  function wrapon_fn[2054659](const in arg dummy_locale_arg[2054661]:chpl_localeID_t[209352], in arg buf[2054663]:c_void_ptr[149], in arg buf_size[2054665]:int(64)[13], in arg c[2054667]:_class_localson_fn[2054577]) : void[4] "on block"
  {
    ref _1_this[2054679]:channel(true,dynamic,false)[1060966] "temp"
    (2054684 'move' _1_this[2054679](2054681 '.v' c[2054667] _1_this[2054582]))
    val _2_start[2054687]:int(64)[13] "temp"
    (2054692 'move' _2_start[2054687](2054689 '.v' c[2054667] _2_start[2054584]))
    val _3_rvfDerefTmp[2054695]:file[235599] "temp"
    (2054700 'move' _3_rvfDerefTmp[2054695](2054697 '.v' c[2054667] _3_rvfDerefTmp[2054586]))
    ref _4__formal_tmp_error[2054703]:syserr[223603] "temp"
    (2054708 'move' _4__formal_tmp_error[2054703](2054705 '.v' c[2054667] _4__formal_tmp_error[2054588]))
    val _5_end[2054711]:int(64)[13] "temp"
    (2054716 'move' _5_end[2054711](2054713 '.v' c[2054667] _5_end[2054590]))
    val _6_hints[2054719]:int(32)[95] "temp"
    (2054724 'move' _6_hints[2054719](2054721 '.v' c[2054667] _6_hints[2054592]))
    val _7_rvfDerefTmp[2054727]:iostyle[231863] "temp"
    (2054732 'move' _7_rvfDerefTmp[2054727](2054729 '.v' c[2054667] _7_rvfDerefTmp[2054594]))
    (2054670 call on_fn[1061493] _1_this[2054679] _2_start[2054687] _3_rvfDerefTmp[2054695] _4__formal_tmp_error[2054703] _5_end[2054711] _6_hints[2054719] _7_rvfDerefTmp[2054727])
    (2054735 return _void[55])
  }
  function wrapon_fn[2054792](const in arg dummy_locale_arg[2054794]:chpl_localeID_t[209352], in arg buf[2054796]:c_void_ptr[149], in arg buf_size[2054798]:int(64)[13], in arg c[2054800]:_class_localson_fn[2054758]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2054812]:channel(true,dynamic,false)[1060966] "temp"
    (2054817 'move' _1_rvfDerefTmp[2054812](2054814 '.v' c[2054800] _1_rvfDerefTmp[2054763]))
    (2054803 call on_fn[1062105] _1_rvfDerefTmp[2054812])
    (2054820 return _void[55])
  }
  function wrapon_fn[2054883](const in arg dummy_locale_arg[2054885]:chpl_localeID_t[209352], in arg buf[2054887]:c_void_ptr[149], in arg buf_size[2054889]:int(64)[13], in arg c[2054891]:_class_localson_fn[2054843]) : void[4] "on block"
  {
    ref _1_lhs[2054903]:channel(true,dynamic,false)[1060966] "temp"
    (2054908 'move' _1_lhs[2054903](2054905 '.v' c[2054891] _1_lhs[2054848]))
    (2054894 call on_fn[1062149] _1_lhs[2054903])
    (2054911 return _void[55])
  }
  function wrapon_fn[2054981](const in arg dummy_locale_arg[2054983]:chpl_localeID_t[209352], in arg buf[2054985]:c_void_ptr[149], in arg buf_size[2054987]:int(64)[13], in arg c[2054989]:_class_localson_fn[2054935]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2055001]:channel(true,dynamic,false)[1060966] "temp"
    (2055006 'move' _1_rvfDerefTmp[2055001](2055003 '.v' c[2054989] _1_rvfDerefTmp[2054940]))
    ref _2_err[2055009]:syserr[223603] "temp"
    (2055014 'move' _2_err[2055009](2055011 '.v' c[2054989] _2_err[2054942]))
    (2054992 call on_fn[1062474] _1_rvfDerefTmp[2055001] _2_err[2055009])
    (2055017 return _void[55])
  }
  function wrapon_fn[2055119](const in arg dummy_locale_arg[2055121]:chpl_localeID_t[209352], in arg buf[2055123]:c_void_ptr[149], in arg buf_size[2055125]:int(64)[13], in arg c[2055127]:_class_localson_fn[2055043]) : void[4] "on block"
  {
    ref _1_this[2055139]:channel(true,dynamic,false)[1060966] "temp"
    (2055144 'move' _1_this[2055139](2055141 '.v' c[2055127] _1_this[2055048]))
    ref _2_path[2055147]:string[26] "temp"
    (2055152 'move' _2_path[2055147](2055149 '.v' c[2055127] _2_path[2055050]))
    ref _3_offset[2055155]:int(64)[13] "temp"
    (2055160 'move' _3_offset[2055155](2055157 '.v' c[2055127] _3_offset[2055052]))
    ref _4_error[2055163]:Error[167984] "temp"
    (2055168 'move' _4_error[2055163](2055165 '.v' c[2055127] _4_error[2055054]))
    (2055130 call on_fn[1062951] _1_this[2055139] _2_path[2055147] _3_offset[2055155] _4_error[2055163])
    (2055171 return _void[55])
  }
  function wrapon_fn[2055261](const in arg dummy_locale_arg[2055263]:chpl_localeID_t[209352], in arg buf[2055265]:c_void_ptr[149], in arg buf_size[2055267]:int(64)[13], in arg c[2055269]:_class_localson_fn[2055197]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2055281]:channel(true,dynamic,false)[1060966] "temp"
    (2055286 'move' _1_rvfDerefTmp[2055281](2055283 '.v' c[2055269] _1_rvfDerefTmp[2055202]))
    ref _2_args[2055289]:1*byteIndex[1057100] "temp"
    (2055294 'move' _2_args[2055289](2055291 '.v' c[2055269] _2_args[2055204]))
    val _3_rvfDerefTmp[2055297]:locale[28] "temp"
    (2055302 'move' _3_rvfDerefTmp[2055297](2055299 '.v' c[2055269] _3_rvfDerefTmp[2055206]))
    ref _4_error[2055305]:Error[167984] "temp"
    (2055310 'move' _4_error[2055305](2055307 '.v' c[2055269] _4_error[2055208]))
    (2055272 call on_fn[1066108] _1_rvfDerefTmp[2055281] _2_args[2055289] _3_rvfDerefTmp[2055297] _4_error[2055305])
    (2055313 return _void[55])
  }
  function wrapon_fn[2055403](const in arg dummy_locale_arg[2055405]:chpl_localeID_t[209352], in arg buf[2055407]:c_void_ptr[149], in arg buf_size[2055409]:int(64)[13], in arg c[2055411]:_class_localson_fn[2055339]) : void[4] "on block"
  {
    ref _1_this[2055423]:channel(true,dynamic,false)[1060966] "temp"
    (2055428 'move' _1_this[2055423](2055425 '.v' c[2055411] _1_this[2055344]))
    val _2_x[2055431]:int(64)[13] "temp"
    (2055436 'move' _2_x[2055431](2055433 '.v' c[2055411] _2_x[2055346]))
    val _3_rvfDerefTmp[2055439]:locale[28] "temp"
    (2055444 'move' _3_rvfDerefTmp[2055439](2055441 '.v' c[2055411] _3_rvfDerefTmp[2055348]))
    ref _4_error[2055447]:Error[167984] "temp"
    (2055452 'move' _4_error[2055447](2055449 '.v' c[2055411] _4_error[2055350]))
    (2055414 call on_fn[1068887] _1_this[2055423] _2_x[2055431] _3_rvfDerefTmp[2055439] _4_error[2055447])
    (2055455 return _void[55])
  }
  function wrapon_fn[2055525](const in arg dummy_locale_arg[2055527]:chpl_localeID_t[209352], in arg buf[2055529]:c_void_ptr[149], in arg buf_size[2055531]:int(64)[13], in arg c[2055533]:_class_localson_fn[2055479]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2055545]:channel(true,dynamic,false)[1060966] "temp"
    (2055550 'move' _1_rvfDerefTmp[2055545](2055547 '.v' c[2055533] _1_rvfDerefTmp[2055484]))
    ref _2_ret[2055553]:int(64)[13] "temp"
    (2055558 'move' _2_ret[2055553](2055555 '.v' c[2055533] _2_ret[2055486]))
    (2055536 call on_fn[1080224] _1_rvfDerefTmp[2055545] _2_ret[2055553])
    (2055561 return _void[55])
  }
  function wrapon_fn[2055685](const in arg dummy_locale_arg[2055687]:chpl_localeID_t[209352], in arg buf[2055689]:c_void_ptr[149], in arg buf_size[2055691]:int(64)[13], in arg c[2055693]:_class_localson_fn[2055591]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2055705]:iostyle[231863] "temp"
    (2055710 'move' _1_rvfDerefTmp[2055705](2055707 '.v' c[2055693] _1_rvfDerefTmp[2055596]))
    val _2_rvfDerefTmp[2055713]:file[235599] "temp"
    (2055718 'move' _2_rvfDerefTmp[2055713](2055715 '.v' c[2055693] _2_rvfDerefTmp[2055598]))
    ref _3_err[2055721]:syserr[223603] "temp"
    (2055726 'move' _3_err[2055721](2055723 '.v' c[2055693] _3_err[2055600]))
    val _4_hints[2055729]:int(32)[95] "temp"
    (2055734 'move' _4_hints[2055729](2055731 '.v' c[2055693] _4_hints[2055602]))
    val _5_start[2055737]:int(64)[13] "temp"
    (2055742 'move' _5_start[2055737](2055739 '.v' c[2055693] _5_start[2055604]))
    ref _6_ret[2055745]:channel(false,dynamic,false)[1080701] "temp"
    (2055750 'move' _6_ret[2055745](2055747 '.v' c[2055693] _6_ret[2055606]))
    val _7_end[2055753]:int(64)[13] "temp"
    (2055758 'move' _7_end[2055753](2055755 '.v' c[2055693] _7_end[2055608]))
    ref _8_error[2055761]:Error[167984] "temp"
    (2055766 'move' _8_error[2055761](2055763 '.v' c[2055693] _8_error[2055610]))
    (2055696 call on_fn[1080776] _1_rvfDerefTmp[2055705] _2_rvfDerefTmp[2055713] _3_err[2055721] _4_hints[2055729] _5_start[2055737] _6_ret[2055745] _7_end[2055753] _8_error[2055761])
    (2055769 return _void[55])
  }
  function wrapon_fn[2055880](const in arg dummy_locale_arg[2055882]:chpl_localeID_t[209352], in arg buf[2055884]:c_void_ptr[149], in arg buf_size[2055886]:int(64)[13], in arg c[2055888]:_class_localson_fn[2055798]) : void[4] "on block"
  {
    val _1_start[2055900]:int(64)[13] "temp"
    (2055905 'move' _1_start[2055900](2055902 '.v' c[2055888] _1_start[2055803]))
    val _2_rvfDerefTmp[2055908]:file[235599] "temp"
    (2055913 'move' _2_rvfDerefTmp[2055908](2055910 '.v' c[2055888] _2_rvfDerefTmp[2055805]))
    ref _3__formal_tmp_error[2055916]:syserr[223603] "temp"
    (2055921 'move' _3__formal_tmp_error[2055916](2055918 '.v' c[2055888] _3__formal_tmp_error[2055807]))
    val _4_end[2055924]:int(64)[13] "temp"
    (2055929 'move' _4_end[2055924](2055926 '.v' c[2055888] _4_end[2055809]))
    ref _5_this[2055932]:channel(false,dynamic,false)[1080701] "temp"
    (2055937 'move' _5_this[2055932](2055934 '.v' c[2055888] _5_this[2055811]))
    val _6_hints[2055940]:int(32)[95] "temp"
    (2055945 'move' _6_hints[2055940](2055942 '.v' c[2055888] _6_hints[2055813]))
    val _7_rvfDerefTmp[2055948]:iostyle[231863] "temp"
    (2055953 'move' _7_rvfDerefTmp[2055948](2055950 '.v' c[2055888] _7_rvfDerefTmp[2055815]))
    (2055891 call on_fn[1081225] _1_start[2055900] _2_rvfDerefTmp[2055908] _3__formal_tmp_error[2055916] _4_end[2055924] _5_this[2055932] _6_hints[2055940] _7_rvfDerefTmp[2055948])
    (2055956 return _void[55])
  }
  function wrapon_fn[2056013](const in arg dummy_locale_arg[2056015]:chpl_localeID_t[209352], in arg buf[2056017]:c_void_ptr[149], in arg buf_size[2056019]:int(64)[13], in arg c[2056021]:_class_localson_fn[2055979]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2056033]:channel(false,dynamic,false)[1080701] "temp"
    (2056038 'move' _1_rvfDerefTmp[2056033](2056035 '.v' c[2056021] _1_rvfDerefTmp[2055984]))
    (2056024 call on_fn[1081837] _1_rvfDerefTmp[2056033])
    (2056041 return _void[55])
  }
  function wrapon_fn[2056104](const in arg dummy_locale_arg[2056106]:chpl_localeID_t[209352], in arg buf[2056108]:c_void_ptr[149], in arg buf_size[2056110]:int(64)[13], in arg c[2056112]:_class_localson_fn[2056064]) : void[4] "on block"
  {
    ref _1_lhs[2056124]:channel(false,dynamic,false)[1080701] "temp"
    (2056129 'move' _1_lhs[2056124](2056126 '.v' c[2056112] _1_lhs[2056069]))
    (2056115 call on_fn[1081881] _1_lhs[2056124])
    (2056132 return _void[55])
  }
  function wrapon_fn[2056202](const in arg dummy_locale_arg[2056204]:chpl_localeID_t[209352], in arg buf[2056206]:c_void_ptr[149], in arg buf_size[2056208]:int(64)[13], in arg c[2056210]:_class_localson_fn[2056156]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2056222]:channel(false,dynamic,false)[1080701] "temp"
    (2056227 'move' _1_rvfDerefTmp[2056222](2056224 '.v' c[2056210] _1_rvfDerefTmp[2056161]))
    ref _2_err[2056230]:syserr[223603] "temp"
    (2056235 'move' _2_err[2056230](2056232 '.v' c[2056210] _2_err[2056163]))
    (2056213 call on_fn[1082206] _1_rvfDerefTmp[2056222] _2_err[2056230])
    (2056238 return _void[55])
  }
  function wrapon_fn[2056334](const in arg dummy_locale_arg[2056336]:chpl_localeID_t[209352], in arg buf[2056338]:c_void_ptr[149], in arg buf_size[2056340]:int(64)[13], in arg c[2056342]:_class_localson_fn[2056264]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2056354]:channel(false,dynamic,false)[1080701] "temp"
    (2056359 'move' _1_rvfDerefTmp[2056354](2056356 '.v' c[2056342] _1_rvfDerefTmp[2056269]))
    ref _2_path[2056362]:string[26] "temp"
    (2056367 'move' _2_path[2056362](2056364 '.v' c[2056342] _2_path[2056271]))
    ref _3_offset[2056370]:int(64)[13] "temp"
    (2056375 'move' _3_offset[2056370](2056372 '.v' c[2056342] _3_offset[2056273]))
    ref _4_error[2056378]:Error[167984] "temp"
    (2056383 'move' _4_error[2056378](2056380 '.v' c[2056342] _4_error[2056275]))
    (2056345 call on_fn[1082635] _1_rvfDerefTmp[2056354] _2_path[2056362] _3_offset[2056370] _4_error[2056378])
    (2056386 return _void[55])
  }
  function wrapon_fn[2056618](const in arg dummy_locale_arg[2056620]:chpl_localeID_t[209352], in arg buf[2056622]:c_void_ptr[149], in arg buf_size[2056624]:int(64)[13], in arg c[2056626]:_class_localson_fn[2056554]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2056638]:channel(true,dynamic,false)[1060966] "temp"
    (2056643 'move' _1_rvfDerefTmp[2056638](2056640 '.v' c[2056626] _1_rvfDerefTmp[2056559]))
    ref _2_args[2056646]:(string,codepointIndex,string)[1158574] "temp"
    (2056651 'move' _2_args[2056646](2056648 '.v' c[2056626] _2_args[2056561]))
    val _3_rvfDerefTmp[2056654]:locale[28] "temp"
    (2056659 'move' _3_rvfDerefTmp[2056654](2056656 '.v' c[2056626] _3_rvfDerefTmp[2056563]))
    ref _4_error[2056662]:Error[167984] "temp"
    (2056667 'move' _4_error[2056662](2056664 '.v' c[2056626] _4_error[2056565]))
    (2056629 call on_fn[1164926] _1_rvfDerefTmp[2056638] _2_args[2056646] _3_rvfDerefTmp[2056654] _4_error[2056662])
    (2056670 return _void[55])
  }
  function wrapon_fn[2056760](const in arg dummy_locale_arg[2056762]:chpl_localeID_t[209352], in arg buf[2056764]:c_void_ptr[149], in arg buf_size[2056766]:int(64)[13], in arg c[2056768]:_class_localson_fn[2056696]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2056780]:channel(true,dynamic,false)[1060966] "temp"
    (2056785 'move' _1_rvfDerefTmp[2056780](2056782 '.v' c[2056768] _1_rvfDerefTmp[2056701]))
    ref _2_args[2056788]:(string,codepointIndex,string,int(64))[1176539] "temp"
    (2056793 'move' _2_args[2056788](2056790 '.v' c[2056768] _2_args[2056703]))
    val _3_rvfDerefTmp[2056796]:locale[28] "temp"
    (2056801 'move' _3_rvfDerefTmp[2056796](2056798 '.v' c[2056768] _3_rvfDerefTmp[2056705]))
    ref _4_error[2056804]:Error[167984] "temp"
    (2056809 'move' _4_error[2056804](2056806 '.v' c[2056768] _4_error[2056707]))
    (2056771 call on_fn[1180405] _1_rvfDerefTmp[2056780] _2_args[2056788] _3_rvfDerefTmp[2056796] _4_error[2056804])
    (2056812 return _void[55])
  }
  function wrapon_fn[2059582](const in arg dummy_locale_arg[2059584]:chpl_localeID_t[209352], in arg buf[2059586]:c_void_ptr[149], in arg buf_size[2059588]:int(64)[13], in arg c[2059590]:_class_localson_fn[2059518]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2059602]:channel(true,dynamic,true)[1021844] "temp"
    (2059607 'move' _1_rvfDerefTmp[2059602](2059604 '.v' c[2059590] _1_rvfDerefTmp[2059523]))
    ref _2_args[2059610]:(string,ioNewline)[1389119] "temp"
    (2059615 'move' _2_args[2059610](2059612 '.v' c[2059590] _2_args[2059525]))
    val _3_rvfDerefTmp[2059618]:locale[28] "temp"
    (2059623 'move' _3_rvfDerefTmp[2059618](2059620 '.v' c[2059590] _3_rvfDerefTmp[2059527]))
    ref _4_error[2059626]:Error[167984] "temp"
    (2059631 'move' _4_error[2059626](2059628 '.v' c[2059590] _4_error[2059529]))
    (2059593 call on_fn[1388994] _1_rvfDerefTmp[2059602] _2_args[2059610] _3_rvfDerefTmp[2059618] _4_error[2059626])
    (2059634 return _void[55])
  }
  function wrapon_fn[2059704](const in arg dummy_locale_arg[2059706]:chpl_localeID_t[209352], in arg buf[2059708]:c_void_ptr[149], in arg buf_size[2059710]:int(64)[13], in arg c[2059712]:_class_localson_fn[2059658]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2059724]:channel(true,dynamic,true)[1021844] "temp"
    (2059729 'move' _1_rvfDerefTmp[2059724](2059726 '.v' c[2059712] _1_rvfDerefTmp[2059663]))
    ref _2_err[2059732]:syserr[223603] "temp"
    (2059737 'move' _2_err[2059732](2059734 '.v' c[2059712] _2_err[2059665]))
    (2059715 call on_fn[1389436] _1_rvfDerefTmp[2059724] _2_err[2059732])
    (2059740 return _void[55])
  }
  function wrapon_fn[2059836](const in arg dummy_locale_arg[2059838]:chpl_localeID_t[209352], in arg buf[2059840]:c_void_ptr[149], in arg buf_size[2059842]:int(64)[13], in arg c[2059844]:_class_localson_fn[2059766]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2059856]:channel(true,dynamic,true)[1021844] "temp"
    (2059861 'move' _1_rvfDerefTmp[2059856](2059858 '.v' c[2059844] _1_rvfDerefTmp[2059771]))
    ref _2_path[2059864]:string[26] "temp"
    (2059869 'move' _2_path[2059864](2059866 '.v' c[2059844] _2_path[2059773]))
    ref _3_offset[2059872]:int(64)[13] "temp"
    (2059877 'move' _3_offset[2059872](2059874 '.v' c[2059844] _3_offset[2059775]))
    ref _4_error[2059880]:Error[167984] "temp"
    (2059885 'move' _4_error[2059880](2059882 '.v' c[2059844] _4_error[2059777]))
    (2059847 call on_fn[1389853] _1_rvfDerefTmp[2059856] _2_path[2059864] _3_offset[2059872] _4_error[2059880])
    (2059888 return _void[55])
  }
  function wrapon_fn[2059945](const in arg dummy_locale_arg[2059947]:chpl_localeID_t[209352], in arg buf[2059949]:c_void_ptr[149], in arg buf_size[2059951]:int(64)[13], in arg c[2059953]:_class_localson_fn[2059911]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2059965]:channel(true,dynamic,true)[1021844] "temp"
    (2059970 'move' _1_rvfDerefTmp[2059965](2059967 '.v' c[2059953] _1_rvfDerefTmp[2059916]))
    (2059956 call on_fn[1390127] _1_rvfDerefTmp[2059965])
    (2059973 return _void[55])
  }
  function wrapon_fn[2060063](const in arg dummy_locale_arg[2060065]:chpl_localeID_t[209352], in arg buf[2060067]:c_void_ptr[149], in arg buf_size[2060069]:int(64)[13], in arg c[2060071]:_class_localson_fn[2059999]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2060083]:channel(true,dynamic,true)[1021844] "temp"
    (2060088 'move' _1_rvfDerefTmp[2060083](2060085 '.v' c[2060071] _1_rvfDerefTmp[2060004]))
    ref _2_args[2060091]:(real(64),ioNewline)[1398991] "temp"
    (2060096 'move' _2_args[2060091](2060093 '.v' c[2060071] _2_args[2060006]))
    val _3_rvfDerefTmp[2060099]:locale[28] "temp"
    (2060104 'move' _3_rvfDerefTmp[2060099](2060101 '.v' c[2060071] _3_rvfDerefTmp[2060008]))
    ref _4_error[2060107]:Error[167984] "temp"
    (2060112 'move' _4_error[2060107](2060109 '.v' c[2060071] _4_error[2060010]))
    (2060074 call on_fn[1398866] _1_rvfDerefTmp[2060083] _2_args[2060091] _3_rvfDerefTmp[2060099] _4_error[2060107])
    (2060115 return _void[55])
  }
  function wrapon_fn[2062069](const in arg dummy_locale_arg[2062071]:chpl_localeID_t[209352], in arg buf[2062073]:c_void_ptr[149], in arg buf_size[2062075]:int(64)[13], in arg c[2062077]:_class_localson_fn[2062029]) : void[4] "on block"
  {
    ref _1_this[2062089]:channel(false,dynamic,true)[985646] "temp"
    (2062094 'move' _1_this[2062089](2062091 '.v' c[2062077] _1_this[2062034]))
    (2062080 call on_fn[1444915] _1_this[2062089])
    (2062097 return _void[55])
  }
  function wrapon_fn[2063860](const in arg dummy_locale_arg[2063862]:chpl_localeID_t[209352], in arg buf[2063864]:c_void_ptr[149], in arg buf_size[2063866]:int(64)[13], in arg c[2063868]:_class_localson_fn[2063820]) : void[4] "on block"
  {
    ref _1_this[2063880]:channel(true,dynamic,true)[1021844] "temp"
    (2063885 'move' _1_this[2063880](2063882 '.v' c[2063868] _1_this[2063825]))
    (2063871 call on_fn[1507894] _1_this[2063880])
    (2063888 return _void[55])
  }
  function wrapon_fn[2064036](const in arg dummy_locale_arg[2064038]:chpl_localeID_t[209352], in arg buf[2064040]:c_void_ptr[149], in arg buf_size[2064042]:int(64)[13], in arg c[2064044]:_class_localson_fn[2063996]) : void[4] "on block"
  {
    ref _1_this[2064056]:channel(true,dynamic,false)[1060966] "temp"
    (2064061 'move' _1_this[2064056](2064058 '.v' c[2064044] _1_this[2064001]))
    (2064047 call on_fn[1510070] _1_this[2064056])
    (2064064 return _void[55])
  }
  function wrapon_fn[2064297](const in arg dummy_locale_arg[2064299]:chpl_localeID_t[209352], in arg buf[2064301]:c_void_ptr[149], in arg buf_size[2064303]:int(64)[13], in arg c[2064305]:_class_localson_fn[2064257]) : void[4] "on block"
  {
    ref _1_this[2064317]:channel(false,dynamic,false)[1080701] "temp"
    (2064322 'move' _1_this[2064317](2064319 '.v' c[2064305] _1_this[2064262]))
    (2064308 call on_fn[1514324] _1_this[2064317])
    (2064325 return _void[55])
  }
}