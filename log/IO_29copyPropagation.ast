AST dump for IO after pass copyPropagation.
Module use list: ChapelStandard SysBasic SysCTypes SysError HaltWrappers FormattedIO 

{
  type _class_localson_fn[2212981] val _runtime_hdr[2212982]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212984]:chpl_localeID_t[209352] ref _1_this[2212986]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2212720] val _runtime_hdr[2212721]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212723]:chpl_localeID_t[209352] ref _1_this[2212725]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2212544] val _runtime_hdr[2212545]:chpl_comm_on_bundle_t[209359] val _0_tmp[2212547]:chpl_localeID_t[209352] ref _1_this[2212549]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2210753] val _runtime_hdr[2210754]:chpl_comm_on_bundle_t[209359] val _0_tmp[2210756]:chpl_localeID_t[209352] ref _1_this[2210758]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2209710] val _runtime_hdr[2209711]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209713]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2209715]:channel(true,dynamic,true)[1022014] ref _2_args[2209717]:(string,ioNewline)[1589826] val _3_rvfDerefTmp[2209719]:locale[28] ref _4_error[2209721]:Error[167984] "error variable"
  type _class_localson_fn[2209568] val _runtime_hdr[2209569]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209571]:chpl_localeID_t[209352] ref _1_this[2209573]:channel(true,dynamic,false)[1061136] val _2_x[2209575]:real(64)[16] val _3_rvfDerefTmp[2209577]:locale[28] ref _4_error[2209579]:Error[167984] "error variable"
  type _class_localson_fn[2209426] val _runtime_hdr[2209427]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209429]:chpl_localeID_t[209352] ref _1_this[2209431]:channel(true,dynamic,false)[1061136] val _2_rvfDerefTmp[2209433]:ioLiteral[238841] val _3_rvfDerefTmp[2209435]:locale[28] ref _4_error[2209437]:Error[167984] "error variable"
  type _class_localson_fn[2209264] val _runtime_hdr[2209265]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209267]:chpl_localeID_t[209352] ref _1_this[2209269]:channel(true,dynamic,false)[1061136] val _2_x[2209271]:_ddata(real(64))[1358105] val _3_len[2209273]:int(64)[13] ref _4_err[2209275]:syserr[223672] ref _5_error[2209277]:Error[167984] "error variable"
  type _class_localson_fn[2209149] val _runtime_hdr[2209150]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209152]:chpl_localeID_t[209352] ref _1_this[2209154]:channel(true,dynamic,false)[1061136] ref _2_ret[2209156]:uint(8)[100]
  type _class_localson_fn[2209023] val _runtime_hdr[2209024]:chpl_comm_on_bundle_t[209359] val _0_tmp[2209026]:chpl_localeID_t[209352] ref _1_this[2209028]:channel(true,dynamic,false)[1061136] val _2_element[2209030]:int(64)[13] ref _3_ret[2209032]:int(64)[13]
  type _class_localson_fn[2208936] val _runtime_hdr[2208937]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208939]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208941]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2208791] val _runtime_hdr[2208792]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208794]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208796]:channel(true,dynamic,true)[1022014] ref _2_path[2208798]:string[26] ref _3_offset[2208800]:int(64)[13] ref _4_error[2208802]:Error[167984] "error variable"
  type _class_localson_fn[2208683] val _runtime_hdr[2208684]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208686]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208688]:channel(true,dynamic,true)[1022014] ref _2_err[2208690]:syserr[223672]
  type _class_localson_fn[2208543] val _runtime_hdr[2208544]:chpl_comm_on_bundle_t[209359] val _0_tmp[2208546]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2208548]:channel(true,dynamic,true)[1022014] ref _2_args[2208550]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] val _3_rvfDerefTmp[2208552]:locale[28] ref _4_error[2208554]:Error[167984] "error variable"
  type _class_localson_fn[2203635] val _runtime_hdr[2203636]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203638]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203640]:channel(true,dynamic,false)[1061136] ref _2_args[2203642]:(string,codepointIndex,string,int(64))[1176709] val _3_rvfDerefTmp[2203644]:locale[28] ref _4_error[2203646]:Error[167984] "error variable"
  type _class_localson_fn[2203493] val _runtime_hdr[2203494]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203496]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203498]:channel(true,dynamic,false)[1061136] ref _2_args[2203500]:(string,codepointIndex,string)[1158744] val _3_rvfDerefTmp[2203502]:locale[28] ref _4_error[2203504]:Error[167984] "error variable"
  type _class_localson_fn[2203203] val _runtime_hdr[2203204]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203206]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203208]:channel(false,dynamic,false)[1080871] ref _2_path[2203210]:string[26] ref _3_offset[2203212]:int(64)[13] ref _4_error[2203214]:Error[167984] "error variable"
  type _class_localson_fn[2203095] val _runtime_hdr[2203096]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203098]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2203100]:channel(false,dynamic,false)[1080871] ref _2_err[2203102]:syserr[223672]
  type _class_localson_fn[2203003] val _runtime_hdr[2203004]:chpl_comm_on_bundle_t[209359] val _0_tmp[2203006]:chpl_localeID_t[209352] ref _1_lhs[2203008]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202918] val _runtime_hdr[2202919]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202921]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202923]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202737] val _runtime_hdr[2202738]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202740]:chpl_localeID_t[209352] val _1_start[2202742]:int(64)[13] val _2_rvfDerefTmp[2202744]:file[235668] ref _3__formal_tmp_error[2202746]:syserr[223672] val _4_end[2202748]:int(64)[13] val _5_hints[2202750]:int(32)[95] val _6_rvfDerefTmp[2202752]:iostyle[231932] ref _7_this[2202754]:channel(false,dynamic,false)[1080871]
  type _class_localson_fn[2202530] val _runtime_hdr[2202531]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202533]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202535]:iostyle[231932] val _2_end[2202537]:int(64)[13] val _3_rvfDerefTmp[2202539]:file[235668] ref _4_err[2202541]:syserr[223672] val _5_hints[2202543]:int(32)[95] val _6_start[2202545]:int(64)[13] ref _7_ret[2202547]:channel(false,dynamic,false)[1080871] ref _8_error[2202549]:Error[167984] "error variable"
  type _class_localson_fn[2202418] val _runtime_hdr[2202419]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202421]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202423]:channel(true,dynamic,false)[1061136] ref _2_ret[2202425]:int(64)[13]
  type _class_localson_fn[2202278] val _runtime_hdr[2202279]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202281]:chpl_localeID_t[209352] ref _1_this[2202283]:channel(true,dynamic,false)[1061136] val _2_x[2202285]:int(64)[13] val _3_rvfDerefTmp[2202287]:locale[28] ref _4_error[2202289]:Error[167984] "error variable"
  type _class_localson_fn[2202136] val _runtime_hdr[2202137]:chpl_comm_on_bundle_t[209359] val _0_tmp[2202139]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2202141]:channel(true,dynamic,false)[1061136] ref _2_args[2202143]:1*byteIndex[1057270] val _3_rvfDerefTmp[2202145]:locale[28] ref _4_error[2202147]:Error[167984] "error variable"
  type _class_localson_fn[2201982] val _runtime_hdr[2201983]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201985]:chpl_localeID_t[209352] ref _1_this[2201987]:channel(true,dynamic,false)[1061136] ref _2_path[2201989]:string[26] ref _3_offset[2201991]:int(64)[13] ref _4_error[2201993]:Error[167984] "error variable"
  type _class_localson_fn[2201874] val _runtime_hdr[2201875]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201877]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201879]:channel(true,dynamic,false)[1061136] ref _2_err[2201881]:syserr[223672]
  type _class_localson_fn[2201782] val _runtime_hdr[2201783]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201785]:chpl_localeID_t[209352] ref _1_lhs[2201787]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2201697] val _runtime_hdr[2201698]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201700]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201702]:channel(true,dynamic,false)[1061136]
  type _class_localson_fn[2201516] val _runtime_hdr[2201517]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201519]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201521]:iostyle[231932] ref _2_this[2201523]:channel(true,dynamic,false)[1061136] val _3_start[2201525]:int(64)[13] val _4_rvfDerefTmp[2201527]:file[235668] ref _5__formal_tmp_error[2201529]:syserr[223672] val _6_end[2201531]:int(64)[13] val _7_hints[2201533]:int(32)[95]
  type _class_localson_fn[2201309] val _runtime_hdr[2201310]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201312]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2201314]:iostyle[231932] val _2_rvfDerefTmp[2201316]:file[235668] ref _3_err[2201318]:syserr[223672] val _4_hints[2201320]:int(32)[95] val _5_start[2201322]:int(64)[13] ref _6_ret[2201324]:channel(true,dynamic,false)[1061136] val _7_end[2201326]:int(64)[13] ref _8_error[2201328]:Error[167984] "error variable"
  type _class_localson_fn[2201069] val _runtime_hdr[2201070]:chpl_comm_on_bundle_t[209359] val _0_tmp[2201072]:chpl_localeID_t[209352] ref _1_lhs[2201074]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2200984] val _runtime_hdr[2200985]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200987]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2200989]:channel(true,dynamic,true)[1022014]
  type _class_localson_fn[2200803] val _runtime_hdr[2200804]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200806]:chpl_localeID_t[209352] ref _1_this[2200808]:channel(true,dynamic,true)[1022014] val _2_hints[2200810]:int(32)[95] val _3_rvfDerefTmp[2200812]:iostyle[231932] val _4_start[2200814]:int(64)[13] val _5_rvfDerefTmp[2200816]:file[235668] ref _6__formal_tmp_error[2200818]:syserr[223672] val _7_end[2200820]:int(64)[13]
  type _class_localson_fn[2200596] val _runtime_hdr[2200597]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200599]:chpl_localeID_t[209352] ref _1_ret[2200601]:channel(true,dynamic,true)[1022014] val _2_hints[2200603]:int(32)[95] val _3_start[2200605]:int(64)[13] ref _4_err[2200607]:syserr[223672] val _5_end[2200609]:int(64)[13] val _6_rvfDerefTmp[2200611]:iostyle[231932] val _7_rvfDerefTmp[2200613]:file[235668] ref _8_error[2200615]:Error[167984] "error variable"
  type _class_localson_fn[2200386] val _runtime_hdr[2200387]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200389]:chpl_localeID_t[209352] ref _1_lhs[2200391]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2200301] val _runtime_hdr[2200302]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200304]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2200306]:channel(false,dynamic,true)[985816]
  type _class_localson_fn[2200120] val _runtime_hdr[2200121]:chpl_comm_on_bundle_t[209359] val _0_tmp[2200123]:chpl_localeID_t[209352] val _1_start[2200125]:int(64)[13] val _2_rvfDerefTmp[2200127]:file[235668] ref _3__formal_tmp_error[2200129]:syserr[223672] ref _4_this[2200131]:channel(false,dynamic,true)[985816] val _5_hints[2200133]:int(32)[95] val _6_rvfDerefTmp[2200135]:iostyle[231932] val _7_end[2200137]:int(64)[13]
  type _class_localson_fn[2199913] val _runtime_hdr[2199914]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199916]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199918]:file[235668] ref _2_ret[2199920]:channel(false,dynamic,true)[985816] val _3_hints[2199922]:int(32)[95] ref _4_err[2199924]:syserr[223672] val _5_start[2199926]:int(64)[13] val _6_end[2199928]:int(64)[13] val _7_rvfDerefTmp[2199930]:iostyle[231932] ref _8_error[2199932]:Error[167984] "error variable"
  type _class_localson_fn[2199564] val _runtime_hdr[2199565]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199567]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199569]:file[235668] ref _2_err[2199571]:syserr[223672] ref _3_ret[2199573]:string[26] ref _4_error[2199575]:Error[167984] "error variable"
  type _class_localson_fn[2199456] val _runtime_hdr[2199457]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199459]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199461]:file[235668] ref _2_err[2199463]:syserr[223672]
  type _class_localson_fn[2199330] val _runtime_hdr[2199331]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199333]:chpl_localeID_t[209352] val _1_rvfDerefTmp[2199335]:file[235668] ref _2_ret[2199337]:iostyle[231932] ref _3_error[2199339]:Error[167984] "error variable"
  type _class_localson_fn[2199237] val _runtime_hdr[2199238]:chpl_comm_on_bundle_t[209359] val _0_tmp[2199240]:chpl_localeID_t[209352] ref _1_this[2199242]:file[235668]
  function chpl__init_IO[416229]() : void[4] "insert line file info" "module init" "resolved"
  {
    (546952 'move' IOHINT_NONE[231499] 0)
    (2197382 '_private_broadcast' IOHINT_NONE[231499])
    (546954 'move' IOHINT_RANDOM[231504] QIO_HINT_RANDOM[231451])
    (2197384 '_private_broadcast' IOHINT_RANDOM[231504])
    (546956 'move' IOHINT_SEQUENTIAL[231509] QIO_HINT_SEQUENTIAL[231456])
    (2197386 '_private_broadcast' IOHINT_SEQUENTIAL[231509])
    (546958 'move' IOHINT_CACHED[231514] QIO_HINT_CACHED[231471])
    (2197388 '_private_broadcast' IOHINT_CACHED[231514])
    (546960 'move' IOHINT_PARALLEL[231519] QIO_HINT_PARALLEL[231476])
    (2197390 '_private_broadcast' IOHINT_PARALLEL[231519])
    const-val ret_tmp[1908084]:6*string[985240] "temp"
    val inlineImm[2343191]:string[26] "temp"
    (2343194 'move' inlineImm[2343191] "a")
    ref i__e0_x[2343196]:string[26] "temp"
    (2343200 'move' i__e0_x[2343196](2343198 'set reference' inlineImm[2343191]))
    val inlineImm[2343202]:string[26] "temp"
    (2343205 'move' inlineImm[2343202] "b")
    ref i__e1_x[2343207]:string[26] "temp"
    (2343211 'move' i__e1_x[2343207](2343209 'set reference' inlineImm[2343202]))
    val inlineImm[2343213]:string[26] "temp"
    (2343216 'move' inlineImm[2343213] "c")
    ref i__e2_x[2343218]:string[26] "temp"
    (2343222 'move' i__e2_x[2343218](2343220 'set reference' inlineImm[2343213]))
    val inlineImm[2343224]:string[26] "temp"
    (2343227 'move' inlineImm[2343224] "d")
    ref i__e3_x[2343229]:string[26] "temp"
    (2343233 'move' i__e3_x[2343229](2343231 'set reference' inlineImm[2343224]))
    val inlineImm[2343235]:string[26] "temp"
    (2343238 'move' inlineImm[2343235] "e")
    ref i__e4_x[2343240]:string[26] "temp"
    (2343244 'move' i__e4_x[2343240](2343242 'set reference' inlineImm[2343235]))
    val inlineImm[2343246]:string[26] "temp"
    (2343249 'move' inlineImm[2343246] "f")
    ref i__e5_x[2343251]:string[26] "temp"
    (2343255 'move' i__e5_x[2343251](2343253 'set reference' inlineImm[2343246]))
    (2537831 '.=' ret_tmp[1908084] x0[985228] i__e0_x[2343196])
    (2537835 '.=' ret_tmp[1908084] x1[985230] i__e1_x[2343207])
    (2537839 '.=' ret_tmp[1908084] x2[985232] i__e2_x[2343218])
    (2537843 '.=' ret_tmp[1908084] x3[985234] i__e3_x[2343229])
    (2537847 '.=' ret_tmp[1908084] x4[985236] i__e4_x[2343240])
    (2537851 '.=' ret_tmp[1908084] x5[985238] i__e5_x[2343251])
    (1908087 'move' call_tmp[722053] ret_tmp[1908084])
    val ret[2343302]:6*string[985406] "dead after last mention" "RVV" "temp"
    const-ref read_x0[2343306]:string[26]
    (2343308 'move' read_x0[2343306](2343310 '.v' call_tmp[722053] x0[985228]))
    val ret[2343313]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343315]:string[26] "dead after last mention" "temp"
    (2343318 call init=[30774] tmp[2343315] read_x0[2343306])
    (2343321 'move' ret[2343313] tmp[2343315])
    const-ref read_x1[2343328]:string[26]
    (2343330 'move' read_x1[2343328](2343332 '.v' call_tmp[722053] x1[985230]))
    val ret[2343335]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343337]:string[26] "dead after last mention" "temp"
    (2343340 call init=[30774] tmp[2343337] read_x1[2343328])
    (2343343 'move' ret[2343335] tmp[2343337])
    const-ref read_x2[2343350]:string[26]
    (2343352 'move' read_x2[2343350](2343354 '.v' call_tmp[722053] x2[985232]))
    val ret[2343357]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343359]:string[26] "dead after last mention" "temp"
    (2343362 call init=[30774] tmp[2343359] read_x2[2343350])
    (2343365 'move' ret[2343357] tmp[2343359])
    const-ref read_x3[2343372]:string[26]
    (2343374 'move' read_x3[2343372](2343376 '.v' call_tmp[722053] x3[985234]))
    val ret[2343379]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343381]:string[26] "dead after last mention" "temp"
    (2343384 call init=[30774] tmp[2343381] read_x3[2343372])
    (2343387 'move' ret[2343379] tmp[2343381])
    const-ref read_x4[2343394]:string[26]
    (2343396 'move' read_x4[2343394](2343398 '.v' call_tmp[722053] x4[985236]))
    val ret[2343401]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343403]:string[26] "dead after last mention" "temp"
    (2343406 call init=[30774] tmp[2343403] read_x4[2343394])
    (2343409 'move' ret[2343401] tmp[2343403])
    const-ref read_x5[2343416]:string[26]
    (2343418 'move' read_x5[2343416](2343420 '.v' call_tmp[722053] x5[985238]))
    val ret[2343423]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2343425]:string[26] "dead after last mention" "temp"
    (2343428 call init=[30774] tmp[2343425] read_x5[2343416])
    (2343431 'move' ret[2343423] tmp[2343425])
    (2538292 '.=' ret[2343302] x0[985394] ret[2343313])
    (2538296 '.=' ret[2343302] x1[985396] ret[2343335])
    (2538300 '.=' ret[2343302] x2[985398] ret[2343357])
    (2538304 '.=' ret[2343302] x3[985400] ret[2343379])
    (2538308 '.=' ret[2343302] x4[985402] ret[2343401])
    (2538312 '.=' ret[2343302] x5[985404] ret[2343423])
    (2197670 '.=' _arg_to_proto_names[246649] value[2197663] ret[2343302])
    const-val coerce_tmp[985883]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (985889 'move' coerce_tmp[985883](985885 'cast' int(32)[95] 0))
    val error[1884158]:Error[167984] "error variable" "temp"
    (1884160 'move' error[1884158] nil[44])
    const-val tmp[2343519]:int(32)[95] "dead after last mention" "temp"
    (2343521 'move' tmp[2343519] IOHINT_NONE[231499])
    val errorExists[2222064]:bool[10] "temp"
    (2222069 'move' errorExists[2222064](2222066 '!=' error[1884158] nil[44]))
    if errorExists[2222064]
    {
      (1884163 call chpl_propagate_error[170518] error[1884158])
    }
    const-val default_arg_style[985982]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884171]:Error[167984] "error variable" "temp"
    (1884173 'move' error[1884171] nil[44])
    const-val style[2343540]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2343542 'move' style[2343540](2343545 call defaultIOStyle[235383]))
    (985987 'move' default_arg_style[985982] style[2343540])
    val errorExists[2222072]:bool[10] "temp"
    (2222077 'move' errorExists[2222072](2222074 '!=' error[1884171] nil[44]))
    if errorExists[2222072]
    {
      (1884176 call chpl_propagate_error[170518] error[1884171])
    }
    val error[1884184]:Error[167984] "error variable" "temp"
    (1884186 'move' error[1884184] nil[44])
    const-val ret_tmp[1907292]:file[235668] "temp"
    (250304 call openfd[237359] coerce_tmp[985883] tmp[2343519] default_arg_style[985982] error[1884184] ret_tmp[1907292])
    (1907295 'move' call_tmp[724184] ret_tmp[1907292])
    val errorExists[2222080]:bool[10] "temp"
    (2222085 'move' errorExists[2222080](2222082 '!=' error[1884184] nil[44]))
    if errorExists[2222080]
    {
      (1884189 call chpl_propagate_error[170518] error[1884184])
    }
    val error[1884197]:Error[167984] "error variable" "temp"
    (1884199 'move' error[1884197] nil[44])
    (1017093 'move' default_arg_start[1017086] 0)
    val errorExists[2222088]:bool[10] "temp"
    (2222093 'move' errorExists[2222088](2222090 '!=' error[1884197] nil[44]))
    if errorExists[2222088]
    {
      (1884202 call chpl_propagate_error[170518] error[1884197])
    }
    val error[1884210]:Error[167984] "error variable" "temp"
    (1884212 'move' error[1884210] nil[44])
    (1017157 'move' default_arg_end[1017150] 9223372036854775807)
    val errorExists[2222096]:bool[10] "temp"
    (2222101 'move' errorExists[2222096](2222098 '!=' error[1884210] nil[44]))
    if errorExists[2222096]
    {
      (1884215 call chpl_propagate_error[170518] error[1884210])
    }
    val error[1884223]:Error[167984] "error variable" "temp"
    (1884225 'move' error[1884223] nil[44])
    const-val tmp[2349377]:int(32)[95] "dead after last mention" "temp"
    (2349379 'move' tmp[2349377] IOHINT_NONE[231499])
    (1017205 'move' default_arg_hints[1017198] tmp[2349377])
    val errorExists[2222104]:bool[10] "temp"
    (2222109 'move' errorExists[2222104](2222106 '!=' error[1884223] nil[44]))
    if errorExists[2222104]
    {
      (1884228 call chpl_propagate_error[170518] error[1884223])
    }
    val error[1884236]:Error[167984] "error variable" "temp"
    (1884238 'move' error[1884236] nil[44])
    ref i_this[2349389]:file[235668] "temp"
    (2349393 'move' i_this[2349389](2349391 'set reference' call_tmp[724184]))
    val ret[2349402]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2349404]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2349406]:Error[167984] "error variable" "temp"
    (2349408 'move' error[2349406] nil[44])
    (2349411 'move' style[2349404](2349414 call _style[236048] i_this[2349389] error[2349406]))
    val errorExists[2349417]:bool[10] "temp"
    (2349419 'move' errorExists[2349417](2349421 '!=' error[2349406] nil[44]))
    if errorExists[2349417]
    {
      (2349426 '=' error[1884236] error[2349406])
      gotoErrorHandlingReturn _endreader_default_style[2349435] _endreader_default_style[2349435]
    }
    (2349432 'move' ret[2349402] style[2349404])
    label _endreader_default_style[2349435]
    (1017783 'move' default_arg_style[1017776] ret[2349402])
    val errorExists[2222112]:bool[10] "temp"
    (2222117 'move' errorExists[2222112](2222114 '!=' error[1884236] nil[44]))
    if errorExists[2222112]
    {
      (1884241 call chpl_propagate_error[170518] error[1884236])
    }
    val error[1884249]:Error[167984] "error variable" "temp"
    (1884251 'move' error[1884249] nil[44])
    const-val ret_tmp[1908420]:channel(false,dynamic,true)[985816] "temp"
    (250309 call reader[1016750] call_tmp[724184] default_arg_start[1017086] default_arg_end[1017150] default_arg_hints[1017198] default_arg_style[1017776] error[1884249] ret_tmp[1908420])
    (1908423 'move' call_tmp[724191] ret_tmp[1908420])
    val errorExists[2222120]:bool[10] "temp"
    (2222125 'move' errorExists[2222120](2222122 '!=' error[1884249] nil[44]))
    if errorExists[2222120]
    {
      (1884254 call chpl_propagate_error[170518] error[1884249])
    }
    (547692 'move' stdin[250296] call_tmp[724191])
    (2197392 '_private_broadcast' stdin[250296])
    (724199 'move' call_tmp[724196](250331 call chpl_cstdout[223646]))
    val error[1884262]:Error[167984] "error variable" "temp"
    (1884264 'move' error[1884262] nil[44])
    const-val tmp[2350205]:int(32)[95] "dead after last mention" "temp"
    (2350207 'move' tmp[2350205] IOHINT_NONE[231499])
    val errorExists[2222128]:bool[10] "temp"
    (2222133 'move' errorExists[2222128](2222130 '!=' error[1884262] nil[44]))
    if errorExists[2222128]
    {
      (1884267 call chpl_propagate_error[170518] error[1884262])
    }
    const-val default_arg_style[1022103]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884275]:Error[167984] "error variable" "temp"
    (1884277 'move' error[1884275] nil[44])
    const-val style[2350247]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2350249 'move' style[2350247](2350252 call defaultIOStyle[235383]))
    (1022108 'move' default_arg_style[1022103] style[2350247])
    val errorExists[2222136]:bool[10] "temp"
    (2222141 'move' errorExists[2222136](2222138 '!=' error[1884275] nil[44]))
    if errorExists[2222136]
    {
      (1884280 call chpl_propagate_error[170518] error[1884275])
    }
    val error[1884288]:Error[167984] "error variable" "temp"
    (1884290 'move' error[1884288] nil[44])
    const-val ret_tmp[1907306]:file[235668] "temp"
    (250333 call openfp[237488] call_tmp[724196] tmp[2350205] default_arg_style[1022103] error[1884288] ret_tmp[1907306])
    (1907309 'move' call_tmp[724201] ret_tmp[1907306])
    val errorExists[2222144]:bool[10] "temp"
    (2222149 'move' errorExists[2222144](2222146 '!=' error[1884288] nil[44]))
    if errorExists[2222144]
    {
      (1884293 call chpl_propagate_error[170518] error[1884288])
    }
    val error[1884301]:Error[167984] "error variable" "temp"
    (1884303 'move' error[1884301] nil[44])
    (1022668 'move' default_arg_start[1022661] 0)
    val errorExists[2222152]:bool[10] "temp"
    (2222157 'move' errorExists[2222152](2222154 '!=' error[1884301] nil[44]))
    if errorExists[2222152]
    {
      (1884306 call chpl_propagate_error[170518] error[1884301])
    }
    val error[1884314]:Error[167984] "error variable" "temp"
    (1884316 'move' error[1884314] nil[44])
    (1022732 'move' default_arg_end[1022725] 9223372036854775807)
    val errorExists[2222160]:bool[10] "temp"
    (2222165 'move' errorExists[2222160](2222162 '!=' error[1884314] nil[44]))
    if errorExists[2222160]
    {
      (1884319 call chpl_propagate_error[170518] error[1884314])
    }
    val error[1884327]:Error[167984] "error variable" "temp"
    (1884329 'move' error[1884327] nil[44])
    const-val tmp[2350385]:int(32)[95] "dead after last mention" "temp"
    (2350387 'move' tmp[2350385](2350389 'cast' int(32)[95] 0))
    (1022783 'move' default_arg_hints[1022776] tmp[2350385])
    val errorExists[2222168]:bool[10] "temp"
    (2222173 'move' errorExists[2222168](2222170 '!=' error[1884327] nil[44]))
    if errorExists[2222168]
    {
      (1884332 call chpl_propagate_error[170518] error[1884327])
    }
    val error[1884340]:Error[167984] "error variable" "temp"
    (1884342 'move' error[1884340] nil[44])
    ref i_this[2350428]:file[235668] "temp"
    (2350432 'move' i_this[2350428](2350430 'set reference' call_tmp[724201]))
    val ret[2350441]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2350443]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2350445]:Error[167984] "error variable" "temp"
    (2350447 'move' error[2350445] nil[44])
    (2350450 'move' style[2350443](2350453 call _style[236048] i_this[2350428] error[2350445]))
    val errorExists[2350456]:bool[10] "temp"
    (2350458 'move' errorExists[2350456](2350460 '!=' error[2350445] nil[44]))
    if errorExists[2350456]
    {
      (2350465 '=' error[1884340] error[2350445])
      gotoErrorHandlingReturn _endwriter_default_style[2350474] _endwriter_default_style[2350474]
    }
    (2350471 'move' ret[2350441] style[2350443])
    label _endwriter_default_style[2350474]
    (1022820 'move' default_arg_style[1022813] ret[2350441])
    val errorExists[2222176]:bool[10] "temp"
    (2222181 'move' errorExists[2222176](2222178 '!=' error[1884340] nil[44]))
    if errorExists[2222176]
    {
      (1884345 call chpl_propagate_error[170518] error[1884340])
    }
    val error[1884353]:Error[167984] "error variable" "temp"
    (1884355 'move' error[1884353] nil[44])
    const-val ret_tmp[1908480]:channel(true,dynamic,true)[1022014] "temp"
    (250338 call writer[1022325] call_tmp[724201] default_arg_start[1022661] default_arg_end[1022725] default_arg_hints[1022776] default_arg_style[1022813] error[1884353] ret_tmp[1908480])
    (1908483 'move' call_tmp[724208] ret_tmp[1908480])
    val errorExists[2222184]:bool[10] "temp"
    (2222189 'move' errorExists[2222184](2222186 '!=' error[1884353] nil[44]))
    if errorExists[2222184]
    {
      (1884358 call chpl_propagate_error[170518] error[1884353])
    }
    (547707 'move' stdout[250323] call_tmp[724208])
    (2197394 '_private_broadcast' stdout[250323])
    (724216 'move' call_tmp[724213](250360 call chpl_cstderr[223654]))
    val error[1884366]:Error[167984] "error variable" "temp"
    (1884368 'move' error[1884366] nil[44])
    const-val tmp[2350226]:int(32)[95] "dead after last mention" "temp"
    (2350228 'move' tmp[2350226] IOHINT_NONE[231499])
    val errorExists[2222192]:bool[10] "temp"
    (2222197 'move' errorExists[2222192](2222194 '!=' error[1884366] nil[44]))
    if errorExists[2222192]
    {
      (1884371 call chpl_propagate_error[170518] error[1884366])
    }
    const-val default_arg_style[1024055]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    val error[1884379]:Error[167984] "error variable" "temp"
    (1884381 'move' error[1884379] nil[44])
    const-val style[2350269]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2350271 'move' style[2350269](2350274 call defaultIOStyle[235383]))
    (1024060 'move' default_arg_style[1024055] style[2350269])
    val errorExists[2222200]:bool[10] "temp"
    (2222205 'move' errorExists[2222200](2222202 '!=' error[1884379] nil[44]))
    if errorExists[2222200]
    {
      (1884384 call chpl_propagate_error[170518] error[1884379])
    }
    val error[1884392]:Error[167984] "error variable" "temp"
    (1884394 'move' error[1884392] nil[44])
    const-val ret_tmp[1907312]:file[235668] "temp"
    (250362 call openfp[237488] call_tmp[724213] tmp[2350226] default_arg_style[1024055] error[1884392] ret_tmp[1907312])
    (1907315 'move' call_tmp[724218] ret_tmp[1907312])
    val errorExists[2222208]:bool[10] "temp"
    (2222213 'move' errorExists[2222208](2222210 '!=' error[1884392] nil[44]))
    if errorExists[2222208]
    {
      (1884397 call chpl_propagate_error[170518] error[1884392])
    }
    val error[1884405]:Error[167984] "error variable" "temp"
    (1884407 'move' error[1884405] nil[44])
    (1024104 'move' default_arg_start[1024097] 0)
    val errorExists[2222216]:bool[10] "temp"
    (2222221 'move' errorExists[2222216](2222218 '!=' error[1884405] nil[44]))
    if errorExists[2222216]
    {
      (1884410 call chpl_propagate_error[170518] error[1884405])
    }
    val error[1884418]:Error[167984] "error variable" "temp"
    (1884420 'move' error[1884418] nil[44])
    (1024115 'move' default_arg_end[1024108] 9223372036854775807)
    val errorExists[2222224]:bool[10] "temp"
    (2222229 'move' errorExists[2222224](2222226 '!=' error[1884418] nil[44]))
    if errorExists[2222224]
    {
      (1884423 call chpl_propagate_error[170518] error[1884418])
    }
    val error[1884431]:Error[167984] "error variable" "temp"
    (1884433 'move' error[1884431] nil[44])
    const-val tmp[2350414]:int(32)[95] "dead after last mention" "temp"
    (2350416 'move' tmp[2350414](2350418 'cast' int(32)[95] 0))
    (1024126 'move' default_arg_hints[1024119] tmp[2350414])
    val errorExists[2222232]:bool[10] "temp"
    (2222237 'move' errorExists[2222232](2222234 '!=' error[1884431] nil[44]))
    if errorExists[2222232]
    {
      (1884436 call chpl_propagate_error[170518] error[1884431])
    }
    val error[1884444]:Error[167984] "error variable" "temp"
    (1884446 'move' error[1884444] nil[44])
    ref i_this[2350478]:file[235668] "temp"
    (2350482 'move' i_this[2350478](2350480 'set reference' call_tmp[724218]))
    val ret[2350491]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2350493]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2350495]:Error[167984] "error variable" "temp"
    (2350497 'move' error[2350495] nil[44])
    (2350500 'move' style[2350493](2350503 call _style[236048] i_this[2350478] error[2350495]))
    val errorExists[2350506]:bool[10] "temp"
    (2350508 'move' errorExists[2350506](2350510 '!=' error[2350495] nil[44]))
    if errorExists[2350506]
    {
      (2350515 '=' error[1884444] error[2350495])
      gotoErrorHandlingReturn _endwriter_default_style[2350524] _endwriter_default_style[2350524]
    }
    (2350521 'move' ret[2350491] style[2350493])
    label _endwriter_default_style[2350524]
    (1024137 'move' default_arg_style[1024130] ret[2350491])
    val errorExists[2222240]:bool[10] "temp"
    (2222245 'move' errorExists[2222240](2222242 '!=' error[1884444] nil[44]))
    if errorExists[2222240]
    {
      (1884449 call chpl_propagate_error[170518] error[1884444])
    }
    val error[1884457]:Error[167984] "error variable" "temp"
    (1884459 'move' error[1884457] nil[44])
    const-val ret_tmp[1908486]:channel(true,dynamic,true)[1022014] "temp"
    (250367 call writer[1022325] call_tmp[724218] default_arg_start[1024097] default_arg_end[1024108] default_arg_hints[1024119] default_arg_style[1024130] error[1884457] ret_tmp[1908486])
    (1908489 'move' call_tmp[724225] ret_tmp[1908486])
    val errorExists[2222248]:bool[10] "temp"
    (2222253 'move' errorExists[2222248](2222250 '!=' error[1884457] nil[44]))
    if errorExists[2222248]
    {
      (1884462 call chpl_propagate_error[170518] error[1884457])
    }
    (547722 'move' stderr[250352] call_tmp[724225])
    (2197396 '_private_broadcast' stderr[250352])
    (536330 return _void[55])
  }
  def module FormattedIO[251356]  
  type iomode[231003] def r[230992]:iomode[231003] 1 def cw[230995]:iomode[231003] 2 def rw[230998]:iomode[231003] 3 def cwr[231001]:iomode[231003] 4
  type iokind[231019] def dynamic[231008]:iokind[231019] 0 def native[231011]:iokind[231019] 1 def big[231014]:iokind[231019] 2 def little[231017]:iokind[231019] 3
  type iostringstyle[231102] def len1b_data[231066]:iostringstyle[231102] -1 def len2b_data[231071]:iostringstyle[231102] -2 def len4b_data[231076]:iostringstyle[231102] -4 def len8b_data[231081]:iostringstyle[231102] -8 def lenVb_data[231086]:iostringstyle[231102] -10 def data_toeof[231093]:iostringstyle[231102] -65280 def data_null[231100]:iostringstyle[231102] -256
  type iostringformat[231124] def word[231107]:iostringformat[231124] 0 def basic[231110]:iostringformat[231124] 1 def chpl[231113]:iostringformat[231124] 2 def json[231116]:iostringformat[231124] 3 def toend[231119]:iostringformat[231124] 4 def toeof[231122]:iostringformat[231124] 5
  const QIO_FDFLAG_UNK[231386]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_READABLE[231391]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_WRITEABLE[231396]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_FDFLAG_SEEKABLE[231401]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_UNBUFFERED[231406]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_ALWAYS_BUFFERED[231411]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_CH_BUFFERED[231416]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_DEFAULT[231421]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_READWRITE[231426]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_PREADPWRITE[231431]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_FREADFWRITE[231436]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHOD_MMAP[231441]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_METHODMASK[231446]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_RANDOM[231451]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_SEQUENTIAL[231456]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_LATENCY[231461]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_BANDWIDTH[231466]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_CACHED[231471]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val QIO_HINT_PARALLEL[231476]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_DIRECT[231481]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_NOREUSE[231486]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_HINT_OWNED[231491]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const-val IOHINT_NONE[231499]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_RANDOM[231504]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_SEQUENTIAL[231509]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_CACHED[231514]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  const-val IOHINT_PARALLEL[231519]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
  type qio_file_ptr_t[231527]
  const-val QIO_FILE_PTR_NULL[231530]:qio_file_ptr_t[231527] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qio_channel_ptr_t[231553]
  const-val QIO_CHANNEL_PTR_NULL[231556]:qio_channel_ptr_t[231553] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  type qbuffer_ptr_t[231564]
  const-val QBUFFER_PTR_NULL[231567]:qbuffer_ptr_t[231564] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_WORD[231582]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_BASIC[231590]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_CHPL[231598]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_JSON[231606]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEND[231614]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  const QIO_STRING_FORMAT_TOEOF[231622]:uint(8)[100] "dead at end of block" "const" "extern" "insert auto destroy" "no doc"
  type iostyle[231932] val binary[231632]:uint(8)[100] val byteorder[231650]:uint(8)[100] val str_style[231670]:int(64)[13] val min_width_columns[231679]:uint(32)[110] val max_width_columns[231694]:uint(32)[110] val max_width_characters[231709]:uint(32)[110] val max_width_bytes[231724]:uint(32)[110] val string_start[231730]:uint(8)[100] val string_end[231736]:uint(8)[100] val string_format[231756]:uint(8)[100] val bytes_prefix[231762]:uint(8)[100] val base[231771]:uint(8)[100] val point_char[231777]:uint(8)[100] val exponent_char[231785]:uint(8)[100] val other_exponent_char[231791]:uint(8)[100] val positive_char[231797]:uint(8)[100] val negative_char[231803]:uint(8)[100] val i_char[231811]:uint(8)[100] val prefix_base[231820]:uint(8)[100] val pad_char[231826]:uint(8)[100] val showplus[231835]:uint(8)[100] val uppercase[231844]:uint(8)[100] val leftjustify[231853]:uint(8)[100] val showpoint[231862]:uint(8)[100] val showpointzero[231871]:uint(8)[100] val precision[231882]:int(32)[95] val realfmt[231891]:uint(8)[100] val complex_style[231900]:uint(8)[100] val array_style[231909]:uint(8)[100] val aggregate_style[231918]:uint(8)[100] val tuple_style[231927]:uint(8)[100]
  function QioPluginFile[232098].setupChannel[231944](const in arg this[232100]:QioPluginFile[232098], ref arg pluginChannel[231941]:QioPluginChannel[232181], const in arg start[231950]:int(64)[13], const in arg end[231957]:int(64)[13], const in arg qioChannelPtr[231961]:qio_channel_ptr_t[231553]) : syserr[223672] "method" "primary method" "resolved"
  {
    val _formal_tmp_pluginChannel[1596612]:QioPluginChannel[232181] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1596637 'move' _formal_tmp_pluginChannel[1596612](1596635 'cast' QioPluginChannel[232181] nil[44]))
    const-val call_tmp[2329546]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329548 'move' call_tmp[2329546](2329551 call qio_int_to_err[223722] ENOSYS[224772]))
    label _endsetupChannel[1596622]
    (1919779 '=' pluginChannel[231941] _formal_tmp_pluginChannel[1596612])
    (533797 return call_tmp[2329546])
  }
  function QioPluginFile[232098].filelength[231981](const in arg this[232104]:QioPluginFile[232098], ref arg length[231978]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329622]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329624 'move' call_tmp[2329622](2329627 call qio_int_to_err[223722] ENOSYS[224772]))
    label _endfilelength[1598259]
    (1919782 '=' length[231978] 0)
    (533807 return call_tmp[2329622])
  }
  function QioPluginFile[232098].getpath[231997](const in arg this[232108]:QioPluginFile[232098], ref arg path[231994]:c_string[19], ref arg len[232003]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val _formal_tmp_path[1598307]:c_string[19] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598342 'move' _formal_tmp_path[1598307](1598340 'cast' c_string[19] nil[44]))
    const-val call_tmp[2329641]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329643 'move' call_tmp[2329641](2329646 call qio_int_to_err[223722] ENOSYS[224772]))
    label _endgetpath[1598318]
    (1919785 '=' path[231994] _formal_tmp_path[1598307])
    (1919788 '=' len[232003] 0)
    (533817 return call_tmp[2329641])
  }
  function QioPluginFile[232098].fsync[232016](const in arg this[232112]:QioPluginFile[232098]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329660]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329662 'move' call_tmp[2329660](2329665 call qio_int_to_err[223722] ENOSYS[224772]))
    (533827 return call_tmp[2329660])
  }
  function QioPluginFile[232098].getChunk[232035](const in arg this[232116]:QioPluginFile[232098], ref arg length[232032]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329679]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329681 'move' call_tmp[2329679](2329684 call qio_int_to_err[223722] ENOSYS[224772]))
    label _endgetChunk[1598409]
    (1919791 '=' length[232032] 0)
    (533837 return call_tmp[2329679])
  }
  function QioPluginFile[232098].getLocalesForRegion[232054](const in arg this[232120]:QioPluginFile[232098], const in arg start[232051]:int(64)[13], const in arg end[232060]:int(64)[13], ref arg localeNames[232067]:c_ptr(c_string)[1598434], ref arg nLocales[232074]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    val _formal_tmp_localeNames[1598486]:c_ptr(c_string)[1598434] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1598511 'move' _formal_tmp_localeNames[1598486](1598509 'cast' c_ptr(c_string)[1598434] nil[44]))
    const-val call_tmp[2329698]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329700 'move' call_tmp[2329698](2329703 call qio_int_to_err[223722] ENOSYS[224772]))
    label _endgetLocalesForRegion[1598496]
    (1919794 '=' localeNames[232067] _formal_tmp_localeNames[1598486])
    (533847 return call_tmp[2329698])
  }
  function QioPluginFile[232098].close[232087](const in arg this[232124]:QioPluginFile[232098]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329717]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329719 'move' call_tmp[2329717](2329722 call qio_int_to_err[223722] ENOSYS[224772]))
    (533857 return call_tmp[2329717])
  }
  function QioPluginFile[232098].deinit[880150](const in arg this[880154]:QioPluginFile[232098]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890575]
    (880162 return _void[55])
  }
  type QioPluginFile[232098] val super[355835]:object[22] "super class"
  function QioPluginChannel[232181].readAtLeast[232139](const in arg this[232183]:QioPluginChannel[232181], const in arg amt[232136]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329565]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329567 'move' call_tmp[2329565](2329570 call qio_int_to_err[223722] ENOSYS[224772]))
    (533867 return call_tmp[2329565])
  }
  function QioPluginChannel[232181].write[232158](const in arg this[232187]:QioPluginChannel[232181], const in arg amt[232155]:int(64)[13]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329584]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329586 'move' call_tmp[2329584](2329589 call qio_int_to_err[223722] ENOSYS[224772]))
    (533877 return call_tmp[2329584])
  }
  function QioPluginChannel[232181].close[232170](const in arg this[232191]:QioPluginChannel[232181]) : syserr[223672] "method" "primary method" "resolved"
  {
    const-val call_tmp[2329603]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329605 'move' call_tmp[2329603](2329608 call qio_int_to_err[223722] ENOSYS[224772]))
    (533887 return call_tmp[2329603])
  }
  function QioPluginChannel[232181].deinit[880286](const in arg this[880290]:QioPluginChannel[232181]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method" "resolved" "virtual"
  {
    label _enddeinit[1890587]
    (880298 return _void[55])
  }
  type QioPluginChannel[232181] val super[355837]:object[22] "super class"
  function chpl_qio_setup_plugin_channel[232202](const in arg file[232199]:c_void_ptr[149], ref arg plugin_ch[232205]:c_void_ptr[149], const in arg start[232212]:int(64)[13], const in arg end[232219]:int(64)[13], const in arg qio_ch[232223]:qio_channel_ptr_t[231553]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512437]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512439 'move' call_tmp[2512437](2512441 'cast' QioPluginFile[232098] file[232199]))
    val coerce_tmp[2512550]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512552 'move' coerce_tmp[2512550](2512554 'cast' object[22] call_tmp[2512437]))
    const-val call_tmp[2512557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512559 'move' call_tmp[2512557](2512561 'ptr_eq' coerce_tmp[2512550] nil[44]))
    if call_tmp[2512557]
    {
      (2512567 call nilCheckHalt[210238] "argument to ! is nil")
    }
    val pluginChannel[232244]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    val init_coerce_tmp[1596589]:QioPluginChannel[232181] "dead at end of block" "temp"
    (1596592 'move' init_coerce_tmp[1596589](1596757 'cast' QioPluginChannel[232181] nil[44]))
    (546997 'move' pluginChannel[232244] init_coerce_tmp[1596589])
    const-val call_tmp[715305]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_pluginChannel[1596604]:QioPluginChannel[232181] "dead at end of block" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715308 'move' call_tmp[715305](232259 call setupChannel[231944] call_tmp[2512437] _formal_tmp_out_pluginChannel[1596604] start[232212] end[232219] qio_ch[232223]))
    (2512717 '=' pluginChannel[232244] _formal_tmp_out_pluginChannel[1596604])
    const-val call_tmp[2512723]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512725 'move' call_tmp[2512723](2512727 'cast' c_void_ptr[149] pluginChannel[232244]))
    (2230446 '=' plugin_ch[232205] call_tmp[2512723])
    label _end_chpl_qio_setup_plugin_channel[533893]
    (533897 return call_tmp[715305])
  }
  function chpl_qio_read_atleast[232284](const in arg ch_plugin[232281]:c_void_ptr[149], const in arg amt[232290]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512733]:QioPluginChannel[232181] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512735 'move' call_tmp[2512733](2512737 'cast' QioPluginChannel[232181] ch_plugin[232281]))
    val coerce_tmp[2512806]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512808 'move' coerce_tmp[2512806](2512810 'cast' object[22] call_tmp[2512733]))
    const-val call_tmp[2512813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512815 'move' call_tmp[2512813](2512817 'ptr_eq' coerce_tmp[2512806] nil[44]))
    if call_tmp[2512813]
    {
      (2512823 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715327]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (715330 'move' call_tmp[715327](232314 call readAtLeast[232139] call_tmp[2512733] amt[232290]))
    label _end_chpl_qio_read_atleast[533905]
    (533909 return call_tmp[715327])
  }
  function chpl_qio_write[232325](const in arg ch_plugin[232322]:c_void_ptr[149], const in arg amt[232331]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512743]:QioPluginChannel[232181] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512745 'move' call_tmp[2512743](2512747 'cast' QioPluginChannel[232181] ch_plugin[232322]))
    val coerce_tmp[2512829]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512831 'move' coerce_tmp[2512829](2512833 'cast' object[22] call_tmp[2512743]))
    const-val call_tmp[2512836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512838 'move' call_tmp[2512836](2512840 'ptr_eq' coerce_tmp[2512829] nil[44]))
    if call_tmp[2512836]
    {
      (2512846 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715344]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (715347 'move' call_tmp[715344](232353 call write[232158] call_tmp[2512743] amt[232331]))
    label _end_chpl_qio_write[533916]
    (533920 return call_tmp[715344])
  }
  function chpl_qio_channel_close[232364](const in arg ch[232361]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512753]:QioPluginChannel[232181] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512755 'move' call_tmp[2512753](2512757 'cast' QioPluginChannel[232181] ch[232361]))
    val coerce_tmp[2512852]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512854 'move' coerce_tmp[2512852](2512856 'cast' object[22] call_tmp[2512753]))
    const-val call_tmp[2512859]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512861 'move' call_tmp[2512859](2512863 'ptr_eq' coerce_tmp[2512852] nil[44]))
    if call_tmp[2512859]
    {
      (2512869 call nilCheckHalt[210238] "argument to ! is nil")
    }
    val c[232375]:QioPluginChannel[232181] "dead at end of block" "insert auto destroy"
    (547005 'move' c[232375] call_tmp[2512753])
    const-val call_tmp[715361]:syserr[223672] "dead at end of block" "maybe param" "temp"
    (715364 'move' call_tmp[715361](232387 call close[232170] call_tmp[2512753]))
    val coerce_tmp[2512875]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512877 'move' coerce_tmp[2512875](2512879 'cast' object[22] c[232375]))
    const-val call_tmp[2512882]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512884 'move' call_tmp[2512882](2512886 'ptr_neq' coerce_tmp[2512875] nil[44]))
    if call_tmp[2512882]
    {
      const-val call_tmp[2512898]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (2512900 'move' call_tmp[2512898](2512902 '_wide_get_locale' c[232375]))
      val isdirect[2512907]:bool[10] "temp"
      (2512909 'move' isdirect[2512907](2512912 call chpl_doDirectExecuteOn[187469] call_tmp[2512898]))
      if isdirect[2512907]
      {
        (2512917 call on_fn[1597424] c[232375])
      }
      {
        val _args_foron_fn[2512920]:_class_localson_fn[2210140] "temp"
        (2512922 'move' _args_foron_fn[2512920](2512924 'stack allocate class' _class_localson_fn[2210140]))
        (2512926 '.=' _args_foron_fn[2512920] _0_tmp[2210143] call_tmp[2512898])
        (2512930 '.=' _args_foron_fn[2512920] _1_arg[2210145] c[232375])
        val _args_vforon_fn[2512934]:c_void_ptr[149] "temp"
        (2512936 'move' _args_vforon_fn[2512934](2512938 'cast_to_void_star' _args_foron_fn[2512920]))
        val _args_sizeon_fn[2512940]:int(64)[13] "temp"
        (2512942 'move' _args_sizeon_fn[2512940](2512944 'sizeof_bundle' _class_localson_fn[2210140]))
        on(2512947 call wrapon_fn[2210174] call_tmp[2512898] _args_vforon_fn[2512934] _args_sizeon_fn[2512940] _args_foron_fn[2512920])
      }
    }
    label _end_chpl_qio_channel_close[533927]
    (533931 return call_tmp[715361])
  }
  function chpl_qio_filelength[232409](const in arg file[232406]:c_void_ptr[149], ref arg length[232415]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512447]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512449 'move' call_tmp[2512447](2512451 'cast' QioPluginFile[232098] file[232406]))
    val coerce_tmp[2512573]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512575 'move' coerce_tmp[2512573](2512577 'cast' object[22] call_tmp[2512447]))
    const-val call_tmp[2512580]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512582 'move' call_tmp[2512580](2512584 'ptr_eq' coerce_tmp[2512573] nil[44]))
    if call_tmp[2512580]
    {
      (2512590 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715378]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1598241]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715381 'move' call_tmp[715378](232440 call filelength[231981] call_tmp[2512447] _formal_tmp_out_length[1598241]))
    (2237883 '=' length[232415] _formal_tmp_out_length[1598241])
    label _end_chpl_qio_filelength[533939]
    (533943 return call_tmp[715378])
  }
  function chpl_qio_getpath[232452](const in arg file[232449]:c_void_ptr[149], ref arg str[232455]:c_string[19], ref arg len[232462]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512457]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512459 'move' call_tmp[2512457](2512461 'cast' QioPluginFile[232098] file[232449]))
    val coerce_tmp[2512596]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512598 'move' coerce_tmp[2512596](2512600 'cast' object[22] call_tmp[2512457]))
    const-val call_tmp[2512603]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512605 'move' call_tmp[2512603](2512607 'ptr_eq' coerce_tmp[2512596] nil[44]))
    if call_tmp[2512603]
    {
      (2512613 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715395]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_path[1598292]:c_string[19] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    val _formal_tmp_out_len[1598299]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715398 'move' call_tmp[715395](232488 call getpath[231997] call_tmp[2512457] _formal_tmp_out_path[1598292] _formal_tmp_out_len[1598299]))
    (2235472 '=' str[232455] _formal_tmp_out_path[1598292])
    (2237889 '=' len[232462] _formal_tmp_out_len[1598299])
    label _end_chpl_qio_getpath[533951]
    (533955 return call_tmp[715395])
  }
  function chpl_qio_fsync[232500](const in arg file[232497]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512467]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512469 'move' call_tmp[2512467](2512471 'cast' QioPluginFile[232098] file[232497]))
    val coerce_tmp[2512619]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512621 'move' coerce_tmp[2512619](2512623 'cast' object[22] call_tmp[2512467]))
    const-val call_tmp[2512626]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512628 'move' call_tmp[2512626](2512630 'ptr_eq' coerce_tmp[2512619] nil[44]))
    if call_tmp[2512626]
    {
      (2512636 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715412]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (715415 'move' call_tmp[715412](232523 call fsync[232016] call_tmp[2512467]))
    label _end_chpl_qio_fsync[533963]
    (533967 return call_tmp[715412])
  }
  function chpl_qio_get_chunk[232535](const in arg file[232532]:c_void_ptr[149], ref arg length[232541]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512477]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512479 'move' call_tmp[2512477](2512481 'cast' QioPluginFile[232098] file[232532]))
    val coerce_tmp[2512642]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512644 'move' coerce_tmp[2512642](2512646 'cast' object[22] call_tmp[2512477]))
    const-val call_tmp[2512649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512651 'move' call_tmp[2512649](2512653 'ptr_eq' coerce_tmp[2512642] nil[44]))
    if call_tmp[2512649]
    {
      (2512659 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715429]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    val _formal_tmp_out_length[1598391]:int(64)[13] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    (715432 'move' call_tmp[715429](232566 call getChunk[232035] call_tmp[2512477] _formal_tmp_out_length[1598391]))
    (2237895 '=' length[232541] _formal_tmp_out_length[1598391])
    label _end_chpl_qio_get_chunk[533975]
    (533979 return call_tmp[715429])
  }
  function chpl_qio_get_locales_for_region[232578](const in arg file[232575]:c_void_ptr[149], const in arg start[232584]:int(64)[13], const in arg end[232591]:int(64)[13], ref arg localeNames[232595]:c_void_ptr[149], const  ref arg nLocales[232602]:int(64)[13]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val strPtr[232610]:c_ptr(c_string)[1598434] "dead at end of block" "insert auto destroy" "split inited"
    val call_tmp[2512487]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512489 'move' call_tmp[2512487](2512491 'cast' QioPluginFile[232098] file[232575]))
    val coerce_tmp[2512665]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512667 'move' coerce_tmp[2512665](2512669 'cast' object[22] call_tmp[2512487]))
    const-val call_tmp[2512672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512674 'move' call_tmp[2512672](2512676 'ptr_eq' coerce_tmp[2512665] nil[44]))
    if call_tmp[2512672]
    {
      (2512682 call nilCheckHalt[210238] "argument to ! is nil")
    }
    const-val call_tmp[715451]:syserr[223672] "dead at end of block" "maybe param" "temp"
    val _formal_tmp_out_localeNames[1598478]:c_ptr(c_string)[1598434] "dead at end of block" "expr temp" "insert auto destroy" "maybe copy elided" "suppress lvalue error" "temp"
    (715454 'move' call_tmp[715451](232638 call getLocalesForRegion[232054] call_tmp[2512487] start[232584] end[232591] _formal_tmp_out_localeNames[1598478] nLocales[232602]))
    (1919797 '=' strPtr[232610] _formal_tmp_out_localeNames[1598478])
    (1598545 'noop')
    const-val call_tmp[715456]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (715459 'move' call_tmp[715456](232646 'cast' c_void_ptr[149] strPtr[232610]))
    (2230452 '=' localeNames[232595] call_tmp[715456])
    label _end_chpl_qio_get_locales_for_region[533987]
    (533991 return call_tmp[715451])
  }
  function chpl_qio_file_close[232663](const in arg file[232660]:c_void_ptr[149]) : syserr[223672] "export" "local args" "no doc" "resolved"
  {
    val call_tmp[2512497]:QioPluginFile[232098] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512499 'move' call_tmp[2512497](2512501 'cast' QioPluginFile[232098] file[232660]))
    val coerce_tmp[2512688]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512690 'move' coerce_tmp[2512688](2512692 'cast' object[22] call_tmp[2512497]))
    const-val call_tmp[2512695]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512697 'move' call_tmp[2512695](2512699 'ptr_eq' coerce_tmp[2512688] nil[44]))
    if call_tmp[2512695]
    {
      (2512705 call nilCheckHalt[210238] "argument to ! is nil")
    }
    val f[232674]:QioPluginFile[232098] "dead at end of block" "insert auto destroy"
    (547023 'move' f[232674] call_tmp[2512497])
    const-val call_tmp[715473]:syserr[223672] "dead at end of block" "maybe param" "temp"
    (715476 'move' call_tmp[715473](232684 call close[232087] call_tmp[2512497]))
    val coerce_tmp[2512957]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2512959 'move' coerce_tmp[2512957](2512961 'cast' object[22] f[232674]))
    const-val call_tmp[2512964]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2512966 'move' call_tmp[2512964](2512968 'ptr_neq' coerce_tmp[2512957] nil[44]))
    if call_tmp[2512964]
    {
      const-val call_tmp[2512980]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (2512982 'move' call_tmp[2512980](2512984 '_wide_get_locale' f[232674]))
      val isdirect[2512989]:bool[10] "temp"
      (2512991 'move' isdirect[2512989](2512994 call chpl_doDirectExecuteOn[187469] call_tmp[2512980]))
      if isdirect[2512989]
      {
        (2512999 call on_fn[1598856] f[232674])
      }
      {
        val _args_foron_fn[2513002]:_class_localson_fn[2210225] "temp"
        (2513004 'move' _args_foron_fn[2513002](2513006 'stack allocate class' _class_localson_fn[2210225]))
        (2513008 '.=' _args_foron_fn[2513002] _0_tmp[2210228] call_tmp[2512980])
        (2513012 '.=' _args_foron_fn[2513002] _1_arg[2210230] f[232674])
        val _args_vforon_fn[2513016]:c_void_ptr[149] "temp"
        (2513018 'move' _args_vforon_fn[2513016](2513020 'cast_to_void_star' _args_foron_fn[2513002]))
        val _args_sizeon_fn[2513022]:int(64)[13] "temp"
        (2513024 'move' _args_sizeon_fn[2513022](2513026 'sizeof_bundle' _class_localson_fn[2210225]))
        on(2513029 call wrapon_fn[2210259] call_tmp[2512980] _args_vforon_fn[2513016] _args_sizeon_fn[2513022] _args_foron_fn[2513002])
      }
    }
    label _end_chpl_qio_file_close[533999]
    (534003 return call_tmp[715473])
  }
  function qio_style_init_default[232706](ref arg s[232703]:iostyle[231932]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534011 return _void[55])
  }
  function qio_file_release[232726](const in arg f[232723]:qio_file_ptr_t[231527]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534015 return _void[55])
  }
  function qio_file_init[232736](ref arg file_out[232733]:qio_file_ptr_t[231527], const in arg fp[232739]:_file[155], const in arg fd[232743]:int(32)[95], const in arg iohints[232747]:int(32)[95], const  ref arg style[232751]:iostyle[231932], const in arg usefilestar[232755]:int(32)[95]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534019]:syserr[223672] "RVV" "temp"
    (534021 return ret[534019])
  }
  function qio_file_open_mem[232816](ref arg file_out[232813]:qio_file_ptr_t[231527], const in arg buf[232819]:qbuffer_ptr_t[231564], const  ref arg style[232823]:iostyle[231932]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534037]:syserr[223672] "RVV" "temp"
    (534039 return ret[534037])
  }
  function qio_file_close[232836](const in arg f[232833]:qio_file_ptr_t[231527]) : syserr[223672] "extern" "local args" "no fn body" "no doc" "resolved" "no return value for void"
  {
    val ret[534043]:syserr[223672] "RVV" "temp"
    (534045 return ret[534043])
  }
  function qio_file_isopen[232870](const in arg f[232867]:qio_file_ptr_t[231527]) : bool[10] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534057]:bool[10] "RVV" "temp"
    (534059 return ret[534057])
  }
  function qio_file_get_style[232909](const in arg f[232906]:qio_file_ptr_t[231527], ref arg style[232912]:iostyle[231932]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534073 return _void[55])
  }
  function qio_channel_create[232966](ref arg ch[232963]:qio_channel_ptr_t[231553], const in arg file[232969]:qio_file_ptr_t[231527], const in arg hints[232973]:int(32)[95], const in arg readable[232977]:int(32)[95], const in arg writeable[232981]:int(32)[95], const in arg start[232988]:int(64)[13], const in arg end[232995]:int(64)[13], const  ref arg style[232999]:iostyle[231932]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534095]:syserr[223672] "RVV" "temp"
    (534097 return ret[534095])
  }
  function qio_channel_path_offset[233012](const in arg threadsafe[233009]:int(32)[95], const in arg ch[233015]:qio_channel_ptr_t[231553], ref arg path[233019]:c_string[19], ref arg offset[233026]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534101]:syserr[223672] "RVV" "temp"
    (534103 return ret[534101])
  }
  function qio_channel_retain[233039](const in arg ch[233036]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534105 return _void[55])
  }
  function qio_channel_release[233049](const in arg ch[233046]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534107 return _void[55])
  }
  function qio_channel_lock[233095](const in arg ch[233092]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534121]:syserr[223672] "RVV" "temp"
    (534123 return ret[534121])
  }
  function qio_channel_unlock[233107](const in arg ch[233104]:qio_channel_ptr_t[231553]) : void[4] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    (534125 return _void[55])
  }
  function qio_channel_binary[233145](const in arg ch[233142]:qio_channel_ptr_t[231553]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534133]:uint(8)[100] "RVV" "temp"
    (534135 return ret[534133])
  }
  function qio_channel_byteorder[233160](const in arg ch[233157]:qio_channel_ptr_t[231553]) : uint(8)[100] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534139]:uint(8)[100] "RVV" "temp"
    (534141 return ret[534139])
  }
  function qio_channel_str_style[233175](const in arg ch[233172]:qio_channel_ptr_t[231553]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534145]:int(64)[13] "RVV" "temp"
    (534147 return ret[534145])
  }
  function qio_channel_style_element[233190](const in arg ch[233187]:qio_channel_ptr_t[231553], const in arg element[233196]:int(64)[13]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534151]:int(64)[13] "RVV" "temp"
    (534153 return ret[534151])
  }
  function qio_channel_close[233228](const in arg threadsafe[233225]:int(32)[95], const in arg ch[233231]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534163]:syserr[223672] "RVV" "temp"
    (534165 return ret[534163])
  }
  function qio_channel_read_amt[1083472](const in arg threadsafe[1083476]:int(32)[95], const in arg ch[1083478]:qio_channel_ptr_t[231553], const in arg ptr[1083480]:c_ptr(uint(8))[937612], const in arg len[1083484]:int(64)[13]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1083488]:syserr[223672] "RVV" "temp"
    (1083496 return ret[1083488])
  }
  function qio_channel_write_amt[1565157](const in arg threadsafe[1565161]:int(32)[95], const in arg ch[1565163]:qio_channel_ptr_t[231553], const in arg ptr[1565165]:_ddata(real(64))[1358105], const in arg len[1565169]:int(64)[13]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "no doc" "private" "resolved" "no return value for void"
  {
    val ret[1565173]:syserr[223672] "RVV" "temp"
    (1565181 return ret[1565173])
  }
  function qio_channel_offset_unlocked[233470](const in arg ch[233467]:qio_channel_ptr_t[231553]) : int(64)[13] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534229]:int(64)[13] "RVV" "temp"
    (534231 return ret[534229])
  }
  function qio_file_path_for_fd[233735](const in arg fd[233732]:int(32)[95], ref arg path[233738]:c_string[19]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534299]:syserr[223672] "RVV" "temp"
    (534301 return ret[534299])
  }
  function qio_file_path_for_fp[233751](const in arg fp[233748]:_file[155], ref arg path[233754]:c_string[19]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534305]:syserr[223672] "RVV" "temp"
    (534307 return ret[534305])
  }
  function qio_file_path[233767](const in arg f[233764]:qio_file_ptr_t[231527], ref arg path[233770]:c_string[19]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534311]:syserr[223672] "RVV" "temp"
    (534313 return ret[534311])
  }
  function qio_shortest_path[233783](const in arg fl[233780]:qio_file_ptr_t[231527], ref arg path_out[233786]:c_string[19], const in arg path_in[233790]:c_string[19]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534317]:syserr[223672] "RVV" "temp"
    (534319 return ret[534317])
  }
  function qio_channel_write_int64[234138](const in arg threadsafe[234135]:int(32)[95], const in arg byteorder[234141]:int(32)[95], const in arg ch[234145]:qio_channel_ptr_t[231553], const in arg x[234152]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534401]:syserr[223672] "RVV" "temp"
    (534403 return ret[534401])
  }
  function qio_channel_write_float64[234354](const in arg threadsafe[234351]:int(32)[95], const in arg byteorder[234357]:int(32)[95], const in arg ch[234361]:qio_channel_ptr_t[231553], const in arg x[234368]:real(64)[16]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534449]:syserr[223672] "RVV" "temp"
    (534451 return ret[534449])
  }
  function qio_channel_write_string[234477](const in arg threadsafe[234474]:int(32)[95], const in arg byteorder[234480]:int(32)[95], const in arg str_style[234487]:int(64)[13], const in arg ch[234491]:qio_channel_ptr_t[231553], const in arg s[234495]:c_string[19], const in arg len[234499]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534473]:syserr[223672] "RVV" "temp"
    (534475 return ret[534473])
  }
  function qio_channel_print_int[1079714](const in arg threadsafe[1079718]:int(32)[95], const in arg ch[1079720]:qio_channel_ptr_t[231553], const  ref arg ptr[1079722]:int(64)[13], const in arg len[1079726]:uint(64)[115], const in arg issigned[1079730]:int(32)[95]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1079734]:syserr[223672] "RVV" "temp"
    (1079742 return ret[1079734])
  }
  function qio_channel_print_float[1585383](const in arg threadsafe[1585387]:int(32)[95], const in arg ch[1585389]:qio_channel_ptr_t[231553], const  ref arg ptr[1585391]:real(64)[16], const in arg len[1585395]:uint(64)[115]) : syserr[223672] "extern" "instantiated generic" "invisible fn" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[1585399]:syserr[223672] "RVV" "temp"
    (1585407 return ret[1585399])
  }
  function qio_channel_write_newline[234823](const in arg threadsafe[234820]:int(32)[95], const in arg ch[234826]:qio_channel_ptr_t[231553]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534563]:syserr[223672] "RVV" "temp"
    (534565 return ret[534563])
  }
  function qio_channel_print_string[234925](const in arg threadsafe[234922]:int(32)[95], const in arg ch[234928]:qio_channel_ptr_t[231553], const in arg ptr[234932]:c_string[19], const in arg len[234936]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534587]:syserr[223672] "RVV" "temp"
    (534589 return ret[534587])
  }
  function qio_channel_print_literal[235005](const in arg threadsafe[235002]:int(32)[95], const in arg ch[235008]:qio_channel_ptr_t[231553], const in arg match[235012]:c_string[19], const in arg len[235016]:int(64)[13]) : syserr[223672] "extern" "local args" "no fn body" "private" "resolved" "no return value for void"
  {
    val ret[534605]:syserr[223672] "RVV" "temp"
    (534607 return ret[534605])
  }
  const QIO_CONV_UNK[235148]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NUMERIC[235153]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_SIGNED[235158]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_SIGNED[235163]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_UNSIGNED[235168]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_UNSIGNED[235173]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REAL[235178]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_REAL[235183]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_IMAG[235188]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_IMAG[235193]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_COMPLEX[235198]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_COMPLEX[235203]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_CHAR[235208]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_STRING[235213]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_BINARY_STRING[235218]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REPR[235223]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_REGEXP[235228]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_REGEXP_LITERAL[235233]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_ARG_TYPE_NONE_LITERAL[235238]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MIN_WIDTH_COLS[235243]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_COLS[235248]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_CHARS[235253]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_MAX_WIDTH_BYTES[235258]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_PRECISION[235263]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGLEN[235268]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_TERMINATOR[235273]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTART[235278]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGSTARTEND[235283]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_STRINGEND[235288]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_CAPTURE[235293]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const QIO_CONV_SET_DONE[235298]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  function defaultIOStyle[235383]() : iostyle[231932] "resolved"
  {
    val ret[534659]:iostyle[231932] "dead after last mention" "RVV" "temp"
    val ret[235387]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (235395 call qio_style_init_default[232706] ret[235387])
    (985976 'move' ret[534659] ret[235387])
    label _end_defaultIOStyle[534657]
    (534661 return ret[534659])
  }
  val iohints[235644]:int(32)[95] "dead at end of block" "extern" "insert auto destroy" "type variable"
  function file[235668].init[235662](ref arg this[235670]:file[235668]) : void[4] "method" "primary method" "resolved" "no return value for void"
  {
    const-val call_tmp[2285747]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285749]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285751 'move' call_tmp[2285749](2285754 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285757 'move' call_tmp[2285747] call_tmp[2285749])
    const-val call_tmp[2285760]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285762]:locale[28] "temp"
    (2285765 call chpl_localeID_to_locale[92852] call_tmp[2285747] ret_tmp[2285762])
    (2285768 'move' call_tmp[2285760] ret_tmp[2285762])
    (465375 '.=' this[235670] home[235650] call_tmp[2285760])
    val tmp[465380]:qio_file_ptr_t[231527] "dead after last mention" "temp"
    (465383 'move' tmp[465380] QIO_FILE_PTR_NULL[231530])
    (465385 '.=' this[235670] _file_internal[235656] tmp[465380])
    (534717 return _void[55])
  }
  type file[235668] val home[235650]:locale[28] "no doc" val _file_internal[235656]:qio_file_ptr_t[231527] "no doc"
  function file[235668].checkAssumingLocal[235856](const  ref arg this[235858]:file[235668], ref arg error_out[1883715]:Error[167984]) : void[4] throws "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1017287]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017291 'move' coerce_tmp[1017287](2564624 '.v' this[235858] _file_internal[235656]))
    const-val call_tmp[2349440]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349442 'move' call_tmp[2349440](2349444 'cast' c_void_ptr[149] coerce_tmp[1017287]))
    const-val call_tmp[2349447]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349449 'move' call_tmp[2349447](2349451 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2349454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349456 'move' call_tmp[2349454](2349458 'ptr_eq' call_tmp[2349440] call_tmp[2349447]))
    if call_tmp[2349454]
    {
      const-val call_tmp[715703]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017347]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017353 'move' coerce_tmp[1017347](1017349 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908432]:owned SystemError[1000427] "temp"
      (235890 call fromSyserr[1017302] coerce_tmp[1017347] "Operation attempted on an invalid file" ret_tmp[1908432])
      (1908435 'move' call_tmp[715703] ret_tmp[1908432])
      val call_tmp[715708]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017362]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908360]:owned Error[966647] "temp"
      ref i_x[2348364]:owned SystemError[1000427] "temp"
      (2348368 'move' i_x[2348364](2348366 'set reference' call_tmp[715703]))
      ref i__retArg[2348370]:owned Error[966647] "temp"
      (2348374 'move' i__retArg[2348370](2348372 'set reference' ret_tmp[1908360]))
      val _formal_tmp_x[2348377]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2348379 'move' _formal_tmp_x[2348377] i_x[2348364])
      const-val ret[2348382]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2348384]:owned SystemError[1000427] "temp"
      (2348386 'move' i_this[2348384](2348388 'set reference' _formal_tmp_x[2348377]))
      val coerce_tmp[2348390]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2348392 'move' coerce_tmp[2348390](2348394 '.v' i_this[2348384] chpl_p[1000422]))
      val call_tmp[2348397]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348399 'move' call_tmp[2348397](2348401 'cast' Error[167984] coerce_tmp[2348390]))
      ref i_this[2348409]:owned SystemError[1000427] "temp"
      (2348411 'move' i_this[2348409](2348413 'set reference' _formal_tmp_x[2348377]))
      val tmp[2348415]:SystemError[264933] "temp"
      (2348417 'move' tmp[2348415](2348419 'cast' SystemError[264933] nil[44]))
      (2348422 '.=' i_this[2348409] chpl_p[1000422] tmp[2348415])
      val coerce_tmp[2348426]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2348428 'move' coerce_tmp[2348426](2348430 'cast' object[22] call_tmp[2348397]))
      const-val call_tmp[2348433]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348435 'move' call_tmp[2348433](2348437 'ptr_eq' coerce_tmp[2348426] nil[44]))
      if call_tmp[2348433]
      {
        (2348443 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2348446]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2348448]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2348451 call init[968283] initTemp[2348448] call_tmp[2348397])
      (2348454 'move' call_tmp[2348446] initTemp[2348448])
      (2348457 'move' ret[2348382] call_tmp[2348446])
      (2348461 call chpl__autoDestroy[1656343] _formal_tmp_x[2348377])
      (2348465 '=' i__retArg[2348370] ret[2348382])
      (1908363 'move' coerce_tmp[1017362] ret_tmp[1908360])
      const-val _formal_tmp_in_err[1017541]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017545 'move' _formal_tmp_in_err[1017541] coerce_tmp[1017362])
      (715711 'move' call_tmp[715708](468231 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017541]))
      (1883728 '=' error_out[1883715] call_tmp[715708])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1883717] _endcheckAssumingLocal[1883717]
    }
    const-val call_tmp[715720]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1017551]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017555 'move' coerce_tmp[1017551](2564630 '.v' this[235858] _file_internal[235656]))
    (715723 'move' call_tmp[715720](235902 call qio_file_isopen[232870] coerce_tmp[1017551]))
    const-val call_tmp[2228274]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2228276 'move' call_tmp[2228274](2228278 '!' call_tmp[715720]))
    if call_tmp[2228274]
    {
      const-val call_tmp[715737]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1017561]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1017567 'move' coerce_tmp[1017561](1017563 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908438]:owned SystemError[1000427] "temp"
      (235928 call fromSyserr[1017302] coerce_tmp[1017561] "Operation attempted on closed file" ret_tmp[1908438])
      (1908441 'move' call_tmp[715737] ret_tmp[1908438])
      val call_tmp[715742]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1017570]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908366]:owned Error[966647] "temp"
      ref i_x[2348470]:owned SystemError[1000427] "temp"
      (2348474 'move' i_x[2348470](2348472 'set reference' call_tmp[715737]))
      ref i__retArg[2348476]:owned Error[966647] "temp"
      (2348480 'move' i__retArg[2348476](2348478 'set reference' ret_tmp[1908366]))
      val _formal_tmp_x[2348483]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2348485 'move' _formal_tmp_x[2348483] i_x[2348470])
      const-val ret[2348488]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2348490]:owned SystemError[1000427] "temp"
      (2348492 'move' i_this[2348490](2348494 'set reference' _formal_tmp_x[2348483]))
      val coerce_tmp[2348496]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2348498 'move' coerce_tmp[2348496](2348500 '.v' i_this[2348490] chpl_p[1000422]))
      val call_tmp[2348503]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348505 'move' call_tmp[2348503](2348507 'cast' Error[167984] coerce_tmp[2348496]))
      ref i_this[2348515]:owned SystemError[1000427] "temp"
      (2348517 'move' i_this[2348515](2348519 'set reference' _formal_tmp_x[2348483]))
      val tmp[2348521]:SystemError[264933] "temp"
      (2348523 'move' tmp[2348521](2348525 'cast' SystemError[264933] nil[44]))
      (2348528 '.=' i_this[2348515] chpl_p[1000422] tmp[2348521])
      val coerce_tmp[2348532]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2348534 'move' coerce_tmp[2348532](2348536 'cast' object[22] call_tmp[2348503]))
      const-val call_tmp[2348539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348541 'move' call_tmp[2348539](2348543 'ptr_eq' coerce_tmp[2348532] nil[44]))
      if call_tmp[2348539]
      {
        (2348549 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2348552]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2348554]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2348557 call init[968283] initTemp[2348554] call_tmp[2348503])
      (2348560 'move' call_tmp[2348552] initTemp[2348554])
      (2348563 'move' ret[2348488] call_tmp[2348552])
      (2348567 call chpl__autoDestroy[1656343] _formal_tmp_x[2348483])
      (2348571 '=' i__retArg[2348476] ret[2348488])
      (1908369 'move' coerce_tmp[1017570] ret_tmp[1908366])
      const-val _formal_tmp_in_err[1017749]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1017753 'move' _formal_tmp_in_err[1017749] coerce_tmp[1017570])
      (715745 'move' call_tmp[715742](468233 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1017749]))
      (1883741 '=' error_out[1883715] call_tmp[715742])
      gotoErrorHandlingReturn _endcheckAssumingLocal[1883717] _endcheckAssumingLocal[1883717]
    }
    label _endcheckAssumingLocal[1883717]
    (534725 return _void[55])
  }
  function file[235668].deinit[235979](ref arg this[235981]:file[235668]) : void[4] "destructor" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2338822]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338824 'move' call_tmp[2338822](2338826 '.' this[235981] home[235650]))
    const-val call_tmp[715768]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2282975]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282977 'move' coerce_tmp[2282975](2282979 '.v' call_tmp[2338822] _instance[89978]))
    val coerce_tmp[2282982]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2282984 'move' coerce_tmp[2282982](2282986 'cast' object[22] coerce_tmp[2282975]))
    const-val call_tmp[2282989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2282991 'move' call_tmp[2282989](2282993 'ptr_eq' coerce_tmp[2282982] nil[44]))
    if call_tmp[2282989]
    {
      (2282999 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (715771 'move' call_tmp[715768](236004 '_wide_get_locale' coerce_tmp[2282975]))
    val isdirect[2199221]:bool[10] "temp"
    (2199226 'move' isdirect[2199221](2199223 call chpl_doDirectExecuteOn[187469] call_tmp[715768]))
    if isdirect[2199221]
    {
      (2199230 call on_fn[935786] this[235981])
    }
    {
      val _args_foron_fn[2199245]:_class_localson_fn[2199237] "temp"
      (2199249 'move' _args_foron_fn[2199245](2199247 'stack allocate class' _class_localson_fn[2199237]))
      (2199251 '.=' _args_foron_fn[2199245] _0_tmp[2199240] call_tmp[715768])
      ref tmp[2199255]:file[235668] "temp"
      (2199259 'move' tmp[2199255](2199257 'set reference' this[235981]))
      (2199261 '.=' _args_foron_fn[2199245] _1_this[2199242] tmp[2199255])
      val _args_vforon_fn[2199265]:c_void_ptr[149] "temp"
      (2199269 'move' _args_vforon_fn[2199265](2199267 'cast_to_void_star' _args_foron_fn[2199245]))
      val _args_sizeon_fn[2199271]:int(64)[13] "temp"
      (2199275 'move' _args_sizeon_fn[2199271](2199273 'sizeof_bundle' _class_localson_fn[2199237]))
      on(2199307 call wrapon_fn[2199277] call_tmp[715768] _args_vforon_fn[2199265] _args_sizeon_fn[2199271] _args_foron_fn[2199245])
    }
    label _enddeinit[1890188]
    const-ref _field_destructor_tmp_[1890186]:locale[28] "temp"
    (1890193 'move' _field_destructor_tmp_[1890186](1890190 '.' this[235981] home[235650]))
    (1890195 call deinit[90188] _field_destructor_tmp_[1890186])
    (534729 return _void[55])
  }
  function file[235668]._style[236048](const  ref arg this[236050]:file[235668], ref arg error_out[1883745]:Error[167984]) : iostyle[231932] throws "method" "no doc" "no parens" "resolved"
  {
    val ret[534743]:iostyle[231932] "dead after last mention" "RVV" "temp"
    val ret[236057]:iostyle[231932] "dead at end of block" "insert auto destroy"
    ref call_tmp[2338848]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338850 'move' call_tmp[2338848](2338852 '.' this[236050] home[235650]))
    const-val call_tmp[715806]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283005]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283007 'move' coerce_tmp[2283005](2283009 '.v' call_tmp[2338848] _instance[89978]))
    val coerce_tmp[2283012]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283014 'move' coerce_tmp[2283012](2283016 'cast' object[22] coerce_tmp[2283005]))
    const-val call_tmp[2283019]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283021 'move' call_tmp[2283019](2283023 'ptr_eq' coerce_tmp[2283012] nil[44]))
    if call_tmp[2283019]
    {
      (2283029 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (715809 'move' call_tmp[715806](236092 '_wide_get_locale' coerce_tmp[2283005]))
    val error[1883748]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1883750 'move' error[1883748] nil[44])
    val rvfDerefTmp[2195672]:file[235668] "temp"
    (2195676 'move' rvfDerefTmp[2195672](2195674 'deref' this[236050]))
    val isdirect[2199312]:bool[10] "temp"
    (2199317 'move' isdirect[2199312](2199314 call chpl_doDirectExecuteOn[187469] call_tmp[715806]))
    if isdirect[2199312]
    {
      (2199321 call on_fn[935795] rvfDerefTmp[2195672] ret[236057] error[1883748])
    }
    {
      val _args_foron_fn[2199342]:_class_localson_fn[2199330] "temp"
      (2199346 'move' _args_foron_fn[2199342](2199344 'stack allocate class' _class_localson_fn[2199330]))
      (2199348 '.=' _args_foron_fn[2199342] _0_tmp[2199333] call_tmp[715806])
      (2199352 '.=' _args_foron_fn[2199342] _1_rvfDerefTmp[2199335] rvfDerefTmp[2195672])
      ref tmp[2199356]:iostyle[231932] "temp"
      (2199360 'move' tmp[2199356](2199358 'set reference' ret[236057]))
      (2199362 '.=' _args_foron_fn[2199342] _2_ret[2199337] tmp[2199356])
      ref tmp[2199366]:Error[167984] "temp"
      (2199370 'move' tmp[2199366](2199368 'set reference' error[1883748]))
      (2199372 '.=' _args_foron_fn[2199342] _3_error[2199339] tmp[2199366])
      val _args_vforon_fn[2199376]:c_void_ptr[149] "temp"
      (2199380 'move' _args_vforon_fn[2199376](2199378 'cast_to_void_star' _args_foron_fn[2199342]))
      val _args_sizeon_fn[2199382]:int(64)[13] "temp"
      (2199386 'move' _args_sizeon_fn[2199382](2199384 'sizeof_bundle' _class_localson_fn[2199330]))
      on(2199434 call wrapon_fn[2199388] call_tmp[715806] _args_vforon_fn[2199376] _args_sizeon_fn[2199382] _args_foron_fn[2199342])
    }
    val errorExists[2221856]:bool[10] "temp"
    (2221861 'move' errorExists[2221856](2221858 '!=' error[1883748] nil[44]))
    if errorExists[2221856]
    {
      (1883754 '=' error_out[1883745] error[1883748])
      gotoErrorHandlingReturn _end__style[534741] _end__style[534741]
    }
    (1017770 'move' ret[534743] ret[236057])
    label _end__style[534741]
    (534745 return ret[534743])
  }
  function file[235668].close[236112](const  ref arg this[236114]:file[235668], ref arg error_out[1883762]:Error[167984]) : void[4] throws "method" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1060797]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1060801 'move' coerce_tmp[1060797](2564646 '.v' this[236114] _file_internal[235656]))
    const-val call_tmp[2349464]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349466 'move' call_tmp[2349464](2349468 'cast' c_void_ptr[149] coerce_tmp[1060797]))
    const-val call_tmp[2349471]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349473 'move' call_tmp[2349471](2349475 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2349478]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2349480 'move' call_tmp[2349478](2349482 'ptr_eq' call_tmp[2349464] call_tmp[2349471]))
    if call_tmp[2349478]
    {
      const-val call_tmp[715839]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1060806]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1060812 'move' coerce_tmp[1060806](1060808 'cast' int(64)[13] EBADF[224412]))
      const-val ret_tmp[1908444]:owned SystemError[1000427] "temp"
      (236130 call fromSyserr[1017302] coerce_tmp[1060806] "Operation attempted on an invalid file" ret_tmp[1908444])
      (1908447 'move' call_tmp[715839] ret_tmp[1908444])
      val call_tmp[715844]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1060815]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908378]:owned Error[966647] "temp"
      ref i_x[2348682]:owned SystemError[1000427] "temp"
      (2348686 'move' i_x[2348682](2348684 'set reference' call_tmp[715839]))
      ref i__retArg[2348688]:owned Error[966647] "temp"
      (2348692 'move' i__retArg[2348688](2348690 'set reference' ret_tmp[1908378]))
      val _formal_tmp_x[2348695]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2348697 'move' _formal_tmp_x[2348695] i_x[2348682])
      const-val ret[2348700]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2348702]:owned SystemError[1000427] "temp"
      (2348704 'move' i_this[2348702](2348706 'set reference' _formal_tmp_x[2348695]))
      val coerce_tmp[2348708]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2348710 'move' coerce_tmp[2348708](2348712 '.v' i_this[2348702] chpl_p[1000422]))
      val call_tmp[2348715]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348717 'move' call_tmp[2348715](2348719 'cast' Error[167984] coerce_tmp[2348708]))
      ref i_this[2348727]:owned SystemError[1000427] "temp"
      (2348729 'move' i_this[2348727](2348731 'set reference' _formal_tmp_x[2348695]))
      val tmp[2348733]:SystemError[264933] "temp"
      (2348735 'move' tmp[2348733](2348737 'cast' SystemError[264933] nil[44]))
      (2348740 '.=' i_this[2348727] chpl_p[1000422] tmp[2348733])
      val coerce_tmp[2348744]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2348746 'move' coerce_tmp[2348744](2348748 'cast' object[22] call_tmp[2348715]))
      const-val call_tmp[2348751]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348753 'move' call_tmp[2348751](2348755 'ptr_eq' coerce_tmp[2348744] nil[44]))
      if call_tmp[2348751]
      {
        (2348761 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2348764]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2348766]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2348769 call init[968283] initTemp[2348766] call_tmp[2348715])
      (2348772 'move' call_tmp[2348764] initTemp[2348766])
      (2348775 'move' ret[2348700] call_tmp[2348764])
      (2348779 call chpl__autoDestroy[1656343] _formal_tmp_x[2348695])
      (2348783 '=' i__retArg[2348688] ret[2348700])
      (1908381 'move' coerce_tmp[1060815] ret_tmp[1908378])
      const-val _formal_tmp_in_err[1060994]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1060998 'move' _formal_tmp_in_err[1060994] coerce_tmp[1060815])
      (715847 'move' call_tmp[715844](468235 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1060994]))
      (1883775 '=' error_out[1883762] call_tmp[715844])
      gotoErrorHandlingReturn _endclose[1883764] _endclose[1883764]
    }
    val err[236141]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329166]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329168 'move' call_tmp[2329166](2329171 call qio_int_to_err[223722] 0))
    (547142 'move' err[236141] call_tmp[2329166])
    ref call_tmp[2338940]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338942 'move' call_tmp[2338940](2338944 '.' this[236114] home[235650]))
    const-val call_tmp[715861]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283305]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283307 'move' coerce_tmp[2283305](2283309 '.v' call_tmp[2338940] _instance[89978]))
    val coerce_tmp[2283312]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283314 'move' coerce_tmp[2283312](2283316 'cast' object[22] coerce_tmp[2283305]))
    const-val call_tmp[2283319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283321 'move' call_tmp[2283319](2283323 'ptr_eq' coerce_tmp[2283312] nil[44]))
    if call_tmp[2283319]
    {
      (2283329 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (715864 'move' call_tmp[715861](236158 '_wide_get_locale' coerce_tmp[2283305]))
    val rvfDerefTmp[2195693]:file[235668] "temp"
    (2195697 'move' rvfDerefTmp[2195693](2195695 'deref' this[236114]))
    val isdirect[2199439]:bool[10] "temp"
    (2199444 'move' isdirect[2199439](2199441 call chpl_doDirectExecuteOn[187469] call_tmp[715861]))
    if isdirect[2199439]
    {
      (2199448 call on_fn[935804] rvfDerefTmp[2195693] err[236141])
    }
    {
      val _args_foron_fn[2199466]:_class_localson_fn[2199456] "temp"
      (2199470 'move' _args_foron_fn[2199466](2199468 'stack allocate class' _class_localson_fn[2199456]))
      (2199472 '.=' _args_foron_fn[2199466] _0_tmp[2199459] call_tmp[715861])
      (2199476 '.=' _args_foron_fn[2199466] _1_rvfDerefTmp[2199461] rvfDerefTmp[2195693])
      ref tmp[2199480]:syserr[223672] "temp"
      (2199484 'move' tmp[2199480](2199482 'set reference' err[236141]))
      (2199486 '.=' _args_foron_fn[2199466] _2_err[2199463] tmp[2199480])
      val _args_vforon_fn[2199490]:c_void_ptr[149] "temp"
      (2199494 'move' _args_vforon_fn[2199490](2199492 'cast_to_void_star' _args_foron_fn[2199466]))
      val _args_sizeon_fn[2199496]:int(64)[13] "temp"
      (2199500 'move' _args_sizeon_fn[2199496](2199498 'sizeof_bundle' _class_localson_fn[2199456]))
      on(2199540 call wrapon_fn[2199502] call_tmp[715861] _args_vforon_fn[2199490] _args_sizeon_fn[2199496] _args_foron_fn[2199466])
    }
    const-val call_tmp[2328629]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328631 'move' call_tmp[2328629](2328634 call qio_err_iserr[223734] err[236141]))
    const-val call_tmp[2328636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328638 'move' call_tmp[2328636](2328640 '!=' call_tmp[2328629] 0))
    if call_tmp[2328636]
    {
      val error[1883779]:Error[167984] "error variable" "temp"
      (1883788 'move' error[1883779] nil[44])
      const-val call_tmp[715885]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907254]:string[26] "temp"
      (236197 call tryGetPath[236452] this[236114] ret_tmp[1907254])
      (1907257 'move' call_tmp[715885] ret_tmp[1907254])
      (236198 call ioerror[266338] err[236141] "in file.close" call_tmp[715885] error[1883779])
      val errorExists[2221864]:bool[10] "temp"
      (2221869 'move' errorExists[2221864](2221866 '!=' error[1883779] nil[44]))
      if errorExists[2221864]
      {
        ref i_x[2246405]:string[26] "temp"
        (2246409 'move' i_x[2246405](2246407 'set reference' call_tmp[715885]))
        (2246413 call deinit[30834] i_x[2246405])
        gotoErrorHandling handler[1883780] handler[1883780]
      }
      ref i_x[2246417]:string[26] "temp"
      (2246421 'move' i_x[2246417](2246419 'set reference' call_tmp[715885]))
      (2246425 call deinit[30834] i_x[2246417])
      label handler[1883780]
      val errorExists[2221872]:bool[10] "temp"
      (2221877 'move' errorExists[2221872](2221874 '!=' error[1883779] nil[44]))
      if errorExists[2221872]
      {
        (1883795 '=' error_out[1883762] error[1883779])
        gotoErrorHandlingReturn _endclose[1883764] _endclose[1883764]
      }
    }
    label _endclose[1883764]
    (534753 return _void[55])
  }
  function file[235668].path[236300](const  ref arg this[236302]:file[235668], ref arg error_out[1883807]:Error[167984], ref arg _retArg[1907248]:string[26]) : void[4] throws "fn returns via _retArg" "method" "no parens" "resolved"
  {
    const-val ret[534759]:string[26] "dead after last mention" "RVV" "temp"
    val ret[236309]:string[26] "dead at end of block" "insert auto destroy"
    (1021870 call init[30763] ret[236309])
    val err[236316]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329109]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329111 'move' call_tmp[2329109](2329114 call qio_int_to_err[223722] 0))
    (547148 'move' err[236316] call_tmp[2329109])
    ref call_tmp[2338878]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338880 'move' call_tmp[2338878](2338882 '.' this[236302] home[235650]))
    const-val call_tmp[715945]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283155]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283157 'move' coerce_tmp[2283155](2283159 '.v' call_tmp[2338878] _instance[89978]))
    val coerce_tmp[2283162]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283164 'move' coerce_tmp[2283162](2283166 'cast' object[22] coerce_tmp[2283155]))
    const-val call_tmp[2283169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283171 'move' call_tmp[2283169](2283173 'ptr_eq' coerce_tmp[2283162] nil[44]))
    if call_tmp[2283169]
    {
      (2283179 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (715948 'move' call_tmp[715945](236402 '_wide_get_locale' coerce_tmp[2283155]))
    val error[1883810]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1883812 'move' error[1883810] nil[44])
    val rvfDerefTmp[2195707]:file[235668] "temp"
    (2195711 'move' rvfDerefTmp[2195707](2195709 'deref' this[236302]))
    val isdirect[2199545]:bool[10] "temp"
    (2199550 'move' isdirect[2199545](2199547 call chpl_doDirectExecuteOn[187469] call_tmp[715945]))
    if isdirect[2199545]
    {
      (2199554 call on_fn[935822] rvfDerefTmp[2195707] err[236316] ret[236309] error[1883810])
    }
    {
      val _args_foron_fn[2199578]:_class_localson_fn[2199564] "temp"
      (2199582 'move' _args_foron_fn[2199578](2199580 'stack allocate class' _class_localson_fn[2199564]))
      (2199584 '.=' _args_foron_fn[2199578] _0_tmp[2199567] call_tmp[715945])
      (2199588 '.=' _args_foron_fn[2199578] _1_rvfDerefTmp[2199569] rvfDerefTmp[2195707])
      ref tmp[2199592]:syserr[223672] "temp"
      (2199596 'move' tmp[2199592](2199594 'set reference' err[236316]))
      (2199598 '.=' _args_foron_fn[2199578] _2_err[2199571] tmp[2199592])
      ref tmp[2199602]:string[26] "temp"
      (2199606 'move' tmp[2199602](2199604 'set reference' ret[236309]))
      (2199608 '.=' _args_foron_fn[2199578] _3_ret[2199573] tmp[2199602])
      ref tmp[2199612]:Error[167984] "temp"
      (2199616 'move' tmp[2199612](2199614 'set reference' error[1883810]))
      (2199618 '.=' _args_foron_fn[2199578] _4_error[2199575] tmp[2199612])
      val _args_vforon_fn[2199622]:c_void_ptr[149] "temp"
      (2199626 'move' _args_vforon_fn[2199622](2199624 'cast_to_void_star' _args_foron_fn[2199578]))
      val _args_sizeon_fn[2199628]:int(64)[13] "temp"
      (2199632 'move' _args_sizeon_fn[2199628](2199630 'sizeof_bundle' _class_localson_fn[2199564]))
      on(2199688 call wrapon_fn[2199634] call_tmp[715945] _args_vforon_fn[2199622] _args_sizeon_fn[2199628] _args_foron_fn[2199578])
    }
    val errorExists[2221880]:bool[10] "temp"
    (2221885 'move' errorExists[2221880](2221882 '!=' error[1883810] nil[44]))
    if errorExists[2221880]
    {
      (1883816 '=' error_out[1883807] error[1883810])
      ref i_x[2246429]:string[26] "temp"
      (2246433 'move' i_x[2246429](2246431 'set reference' ret[236309]))
      (2246437 call deinit[30834] i_x[2246429])
      gotoErrorHandlingReturn _end_path[534757] _end_path[534757]
    }
    const-val call_tmp[2328527]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328529 'move' call_tmp[2328527](2328532 call qio_err_iserr[223734] err[236316]))
    const-val call_tmp[2328534]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328536 'move' call_tmp[2328534](2328538 '!=' call_tmp[2328527] 0))
    if call_tmp[2328534]
    {
      val error[1883824]:Error[167984] "error variable" "temp"
      (1883833 'move' error[1883824] nil[44])
      (236434 call ioerror[266399] err[236316] "in file.path" error[1883824])
      val errorExists[2221888]:bool[10] "temp"
      (2221893 'move' errorExists[2221888](2221890 '!=' error[1883824] nil[44]))
      if errorExists[2221888]
      {
        gotoErrorHandling handler[1883825] handler[1883825]
      }
      label handler[1883825]
      val errorExists[2221896]:bool[10] "temp"
      (2221901 'move' errorExists[2221896](2221898 '!=' error[1883824] nil[44]))
      if errorExists[2221896]
      {
        (1883840 '=' error_out[1883807] error[1883824])
        ref i_x[2246441]:string[26] "temp"
        (2246445 'move' i_x[2246441](2246443 'set reference' ret[236309]))
        (2246449 call deinit[30834] i_x[2246441])
        gotoErrorHandlingReturn _end_path[534757] _end_path[534757]
      }
    }
    (1021868 'move' ret[534759] ret[236309])
    label _end_path[534757]
    (1907250 '=' _retArg[1907248] ret[534759])
    (1907252 return _void[55])
  }
  function file[235668].tryGetPath[236452](const  ref arg this[236454]:file[235668], ref arg _retArg[1907284]:string[26]) : void[4] "fn returns via _retArg" "method" "resolved"
  {
    val ret[534771]:string[26] "dead after last mention" "RVV" "temp"
    val error[1883852]:Error[167984] "error variable" "temp"
    (1883861 'move' error[1883852] nil[44])
    const-val call_tmp[716008]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1907242]:string[26] "temp"
    (236463 call path[236300] this[236454] error[1883852] ret_tmp[1907242])
    (1907245 'move' call_tmp[716008] ret_tmp[1907242])
    val errorExists[2221904]:bool[10] "temp"
    (2221909 'move' errorExists[2221904](2221906 '!=' error[1883852] nil[44]))
    if errorExists[2221904]
    {
      gotoErrorHandling handler[1883853] handler[1883853]
    }
    (1021902 'move' ret[534771] call_tmp[716008])
    gotoReturn _end_tryGetPath[534769] _end_tryGetPath[534769]
    label handler[1883853]
    val errorExists[2221912]:bool[10] "temp"
    (2221917 'move' errorExists[2221912](2221914 '!=' error[1883852] nil[44]))
    if errorExists[2221912]
    {
      val call_tmp[716013]:Error[167984] "dead at end of block" "maybe param" "temp"
      (716016 'move' call_tmp[716013] error[1883852])
      const-val call_tmp[716023]:owned Error[966647] "dead at end of block" "delay instantiation" "maybe param" "temp"
      const-val initTemp[1021882]:owned Error[966647] "dead at end of block" "delay instantiation" "temp"
      (1021885 call init[968283] initTemp[1021882] call_tmp[716013])
      (716026 'move' call_tmp[716023] initTemp[1021882])
      const-val chpl_anon_error[354644]:owned Error[966647] "dead at end of block" "delay instantiation" "insert auto destroy"
      (547156 'move' chpl_anon_error[354644] call_tmp[716023])
      val inlineImm[2325954]:string[26] "temp"
      (2325957 'move' inlineImm[2325954] "unknown")
      ref i_x[2325959]:string[26] "temp"
      (2325963 'move' i_x[2325959](2325961 'set reference' inlineImm[2325954]))
      val ret[2325966]:string[26] "dead after last mention" "RVV" "temp"
      const-val tmp[2325968]:string[26] "dead after last mention" "temp"
      (2325971 call init=[30774] tmp[2325968] i_x[2325959])
      (2325974 'move' ret[2325966] tmp[2325968])
      (534783 'move' ret[534771] ret[2325966])
      (1919815 call chpl__autoDestroy[1608774] chpl_anon_error[354644])
      gotoReturn _end_tryGetPath[534769] _end_tryGetPath[534769]
      (1919819 call chpl__autoDestroy[1608774] chpl_anon_error[354644])
    }
    label _end_tryGetPath[534769]
    (1907286 '=' _retArg[1907284] ret[534771])
    (1907290 return _void[55])
  }
  function openfd[237359](const in arg fd[237356]:int(32)[95], const in arg hints[237363]:int(32)[95], const  ref arg style[237371]:iostyle[231932], ref arg error_out[1883876]:Error[167984], ref arg _retArg[1907298]:file[235668]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534870]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237377]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547192 'move' local_style[237377] style[237371])
    val ret[237383]:file[235668] "dead at end of block" "insert auto destroy"
    (1016710 call init[235662] ret[237383])
    ref call_tmp[2338838]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338840 'move' call_tmp[2338838](2338842 '.' ret[237383] home[235650]))
    const-val call_tmp[716312]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285639]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285641]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285643 'move' call_tmp[2285641](2285646 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285649 'move' call_tmp[2285639] call_tmp[2285641])
    const-val call_tmp[2285652]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285654]:locale[28] "temp"
    (2285657 call chpl_localeID_to_locale[92852] call_tmp[2285639] ret_tmp[2285654])
    (2285660 'move' call_tmp[2285652] ret_tmp[2285654])
    (1906271 'move' call_tmp[716312] call_tmp[2285652])
    (237392 call =[90634] call_tmp[2338838] call_tmp[716312])
    ref i_x[2388533]:locale[28] "temp"
    (2388537 'move' i_x[2388533](2388535 'set reference' call_tmp[716312]))
    (2388541 call deinit[90188] i_x[2388533])
    ref call_tmp[2339040]:qio_file_ptr_t[231527] "dead after last mention" "maybe param" "temp"
    (2339042 'move' call_tmp[2339040](2339044 '.' ret[237383] _file_internal[235656]))
    const-val call_tmp[716324]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
    (716327 'move' call_tmp[716324](237403 call chpl_cnullfile[223662]))
    const-val call_tmp[716329]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[986713]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (986719 'move' coerce_tmp[986713](986715 'cast' int(32)[95] 0))
    (716332 'move' call_tmp[716329](237408 call qio_file_init[232736] call_tmp[2339040] call_tmp[716324] fd[237356] hints[237363] local_style[237377] coerce_tmp[986713]))
    const-val call_tmp[2328459]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328461 'move' call_tmp[2328459](2328464 call qio_err_iserr[223734] call_tmp[716329]))
    const-val call_tmp[2328466]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328468 'move' call_tmp[2328466](2328470 '!=' call_tmp[2328459] 0))
    if call_tmp[2328466]
    {
      val path_cs[237415]:c_string[19] "dead at end of block" "insert auto destroy"
      (1016748 'move' path_cs[237415](1016746 'cast' c_string[19] nil[44]))
      const-val call_tmp[716339]:syserr[223672] "dead at end of block" "maybe param" "temp"
      (716342 'move' call_tmp[716339](237424 call qio_file_path_for_fd[233735] fd[237356] path_cs[237415]))
      const-val path[237443]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576863]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2328476]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328478 'move' call_tmp[2328476](2328481 call qio_err_iserr[223734] call_tmp[716339]))
      const-val call_tmp[2328483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328485 'move' call_tmp[2328483](2328487 '!=' call_tmp[2328476] 0))
      if call_tmp[2328483]
      {
        val inlineImm[2325979]:string[26] "temp"
        (2325982 'move' inlineImm[2325979] "unknown")
        ref i_x[2325984]:string[26] "temp"
        (2325988 'move' i_x[2325984](2325986 'set reference' inlineImm[2325979]))
        val ret[2325991]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2325993]:string[26] "dead after last mention" "temp"
        (2325996 call init=[30774] tmp[2325993] i_x[2325984])
        (2325999 'move' ret[2325991] tmp[2325993])
        (576874 'move' tmp[576863] ret[2325991])
      }
      {
        val error[1883879]:Error[167984] "error variable" "temp"
        (1883881 'move' error[1883879] nil[44])
        const-val call_tmp[2325257]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2325259 'move' call_tmp[2325257](2325261 'string_length_bytes' path_cs[237415]))
        val errorExists[2221920]:bool[10] "temp"
        (2221925 'move' errorExists[2221920](2221922 '!=' error[1883879] nil[44]))
        if errorExists[2221920]
        {
          (1883885 '=' error_out[1883876] error[1883879])
          ref i_x[2513171]:file[235668] "temp"
          (2513175 'move' i_x[2513171](2513173 'set reference' ret[237383]))
          (2513179 call deinit[235979] i_x[2513171])
          gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
        }
        val error[1883894]:Error[167984] "error variable" "temp"
        (1883896 'move' error[1883894] nil[44])
        const-val ret[2258031]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2258033]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
        (2258035 'move' call_tmp[2258033](2258037 'cast' c_ptr(uint(8))[937612] path_cs[237415]))
        val error[2258042]:Error[167984] "error variable" "temp"
        (2258044 'move' error[2258042] nil[44])
        const-val ret[2258047]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2258049]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2258051]:Error[167984] "error variable" "temp"
        (2258053 'move' error[2258051] nil[44])
        const-val ret_tmp[2258056]:string[26] "temp"
        (2258059 call decodeByteBuffer[173938] call_tmp[2258033] call_tmp[2325257] replace[173694] error[2258051] ret_tmp[2258056])
        (2258065 'move' call_tmp[2258049] ret_tmp[2258056])
        val errorExists[2258068]:bool[10] "temp"
        (2258070 'move' errorExists[2258068](2258072 '!=' error[2258051] nil[44]))
        if errorExists[2258068]
        {
          (2258077 '=' error[2258042] error[2258051])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258086] _endcreateStringWithNewBuffer[2258086]
        }
        (2258083 'move' ret[2258047] call_tmp[2258049])
        label _endcreateStringWithNewBuffer[2258086]
        val errorExists[2258091]:bool[10] "temp"
        (2258093 'move' errorExists[2258091](2258095 '!=' error[2258042] nil[44]))
        if errorExists[2258091]
        {
          (2258100 '=' error[1883894] error[2258042])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258109] _endcreateStringWithNewBuffer[2258109]
        }
        (2258106 'move' ret[2258031] ret[2258047])
        label _endcreateStringWithNewBuffer[2258109]
        val errorExists[2221928]:bool[10] "temp"
        (2221933 'move' errorExists[2221928](2221930 '!=' error[1883894] nil[44]))
        if errorExists[2221928]
        {
          (1883900 '=' error_out[1883876] error[1883894])
          ref i_x[2513183]:file[235668] "temp"
          (2513187 'move' i_x[2513183](2513185 'set reference' ret[237383]))
          (2513191 call deinit[235979] i_x[2513183])
          gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
        }
        (576883 'move' tmp[576863] ret[2258031])
      }
      (547202 'move' path[237443] tmp[576863])
      val error[1883908]:Error[167984] "error variable" "temp"
      (1883917 'move' error[1883908] nil[44])
      (237468 call ioerror[266338] call_tmp[716329] "in openfd" path[237443] error[1883908])
      val errorExists[2221936]:bool[10] "temp"
      (2221941 'move' errorExists[2221936](2221938 '!=' error[1883908] nil[44]))
      if errorExists[2221936]
      {
        gotoErrorHandling handler[1883909] handler[1883909]
      }
      label handler[1883909]
      val errorExists[2221944]:bool[10] "temp"
      (2221949 'move' errorExists[2221944](2221946 '!=' error[1883908] nil[44]))
      if errorExists[2221944]
      {
        (1883924 '=' error_out[1883876] error[1883908])
        ref i_x[2246453]:string[26] "temp"
        (2246457 'move' i_x[2246453](2246455 'set reference' path[237443]))
        (2246461 call deinit[30834] i_x[2246453])
        ref i_x[2513195]:file[235668] "temp"
        (2513199 'move' i_x[2513195](2513197 'set reference' ret[237383]))
        (2513203 call deinit[235979] i_x[2513195])
        gotoErrorHandlingReturn _end_openfd[534868] _end_openfd[534868]
      }
      ref i_x[2246465]:string[26] "temp"
      (2246469 'move' i_x[2246465](2246467 'set reference' path[237443]))
      (2246473 call deinit[30834] i_x[2246465])
    }
    (1016708 'move' ret[534870] ret[237383])
    label _end_openfd[534868]
    (1907300 '=' _retArg[1907298] ret[534870])
    (1907304 return _void[55])
  }
  function openfp[237488](const in arg fp[237485]:_file[155], const in arg hints[237492]:int(32)[95], const  ref arg style[237500]:iostyle[231932], ref arg error_out[1883936]:Error[167984], ref arg _retArg[1907318]:file[235668]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534882]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237506]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547204 'move' local_style[237506] style[237500])
    val ret[237512]:file[235668] "dead at end of block" "insert auto destroy"
    (1022315 call init[235662] ret[237512])
    ref call_tmp[2338894]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338896 'move' call_tmp[2338894](2338898 '.' ret[237512] home[235650]))
    const-val call_tmp[716351]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285675]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285677]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285679 'move' call_tmp[2285677](2285682 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285685 'move' call_tmp[2285675] call_tmp[2285677])
    const-val call_tmp[2285688]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285690]:locale[28] "temp"
    (2285693 call chpl_localeID_to_locale[92852] call_tmp[2285675] ret_tmp[2285690])
    (2285696 'move' call_tmp[2285688] ret_tmp[2285690])
    (1906277 'move' call_tmp[716351] call_tmp[2285688])
    (237521 call =[90634] call_tmp[2338894] call_tmp[716351])
    ref i_x[2388545]:locale[28] "temp"
    (2388549 'move' i_x[2388545](2388547 'set reference' call_tmp[716351]))
    (2388553 call deinit[90188] i_x[2388545])
    ref call_tmp[2339076]:qio_file_ptr_t[231527] "dead after last mention" "maybe param" "temp"
    (2339078 'move' call_tmp[2339076](2339080 '.' ret[237512] _file_internal[235656]))
    const-val call_tmp[716368]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1022270]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022276 'move' coerce_tmp[1022270](1022272 'cast' int(32)[95] -1))
    const-val coerce_tmp[1022278]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1022284 'move' coerce_tmp[1022278](1022280 'cast' int(32)[95] 1))
    (716371 'move' call_tmp[716368](237537 call qio_file_init[232736] call_tmp[2339076] fp[237485] coerce_tmp[1022270] hints[237492] local_style[237506] coerce_tmp[1022278]))
    const-val call_tmp[2328561]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328563 'move' call_tmp[2328561](2328566 call qio_err_iserr[223734] call_tmp[716368]))
    const-val call_tmp[2328568]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328570 'move' call_tmp[2328568](2328572 '!=' call_tmp[2328561] 0))
    if call_tmp[2328568]
    {
      val path_cs[237544]:c_string[19] "dead at end of block" "insert auto destroy"
      (1022323 'move' path_cs[237544](1022321 'cast' c_string[19] nil[44]))
      const-val call_tmp[716378]:syserr[223672] "dead at end of block" "maybe param" "temp"
      (716381 'move' call_tmp[716378](237553 call qio_file_path_for_fp[233751] fp[237485] path_cs[237544]))
      const-val path[237572]:string[26] "dead at end of block" "insert auto destroy"
      val tmp[576890]:string[26] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "no auto destroy" "temp"
      const-val call_tmp[2328578]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328580 'move' call_tmp[2328578](2328583 call qio_err_iserr[223734] call_tmp[716378]))
      const-val call_tmp[2328585]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328587 'move' call_tmp[2328585](2328589 '!=' call_tmp[2328578] 0))
      if call_tmp[2328585]
      {
        val inlineImm[2326004]:string[26] "temp"
        (2326007 'move' inlineImm[2326004] "unknown")
        ref i_x[2326009]:string[26] "temp"
        (2326013 'move' i_x[2326009](2326011 'set reference' inlineImm[2326004]))
        val ret[2326016]:string[26] "dead after last mention" "RVV" "temp"
        const-val tmp[2326018]:string[26] "dead after last mention" "temp"
        (2326021 call init=[30774] tmp[2326018] i_x[2326009])
        (2326024 'move' ret[2326016] tmp[2326018])
        (576901 'move' tmp[576890] ret[2326016])
      }
      {
        val error[1883939]:Error[167984] "error variable" "temp"
        (1883941 'move' error[1883939] nil[44])
        const-val call_tmp[2325279]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2325281 'move' call_tmp[2325279](2325283 'string_length_bytes' path_cs[237544]))
        val errorExists[2221952]:bool[10] "temp"
        (2221957 'move' errorExists[2221952](2221954 '!=' error[1883939] nil[44]))
        if errorExists[2221952]
        {
          (1883945 '=' error_out[1883936] error[1883939])
          ref i_x[2513207]:file[235668] "temp"
          (2513211 'move' i_x[2513207](2513209 'set reference' ret[237512]))
          (2513215 call deinit[235979] i_x[2513207])
          gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
        }
        val error[1883954]:Error[167984] "error variable" "temp"
        (1883956 'move' error[1883954] nil[44])
        const-val ret[2258129]:string[26] "dead after last mention" "RVV" "temp"
        val call_tmp[2258131]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
        (2258133 'move' call_tmp[2258131](2258135 'cast' c_ptr(uint(8))[937612] path_cs[237544]))
        val error[2258140]:Error[167984] "error variable" "temp"
        (2258142 'move' error[2258140] nil[44])
        const-val ret[2258145]:string[26] "dead after last mention" "RVV" "temp"
        const-val call_tmp[2258147]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        val error[2258149]:Error[167984] "error variable" "temp"
        (2258151 'move' error[2258149] nil[44])
        const-val ret_tmp[2258154]:string[26] "temp"
        (2258157 call decodeByteBuffer[173938] call_tmp[2258131] call_tmp[2325279] replace[173694] error[2258149] ret_tmp[2258154])
        (2258163 'move' call_tmp[2258147] ret_tmp[2258154])
        val errorExists[2258166]:bool[10] "temp"
        (2258168 'move' errorExists[2258166](2258170 '!=' error[2258149] nil[44]))
        if errorExists[2258166]
        {
          (2258175 '=' error[2258140] error[2258149])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258184] _endcreateStringWithNewBuffer[2258184]
        }
        (2258181 'move' ret[2258145] call_tmp[2258147])
        label _endcreateStringWithNewBuffer[2258184]
        val errorExists[2258189]:bool[10] "temp"
        (2258191 'move' errorExists[2258189](2258193 '!=' error[2258140] nil[44]))
        if errorExists[2258189]
        {
          (2258198 '=' error[1883954] error[2258140])
          gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258207] _endcreateStringWithNewBuffer[2258207]
        }
        (2258204 'move' ret[2258129] ret[2258145])
        label _endcreateStringWithNewBuffer[2258207]
        val errorExists[2221960]:bool[10] "temp"
        (2221965 'move' errorExists[2221960](2221962 '!=' error[1883954] nil[44]))
        if errorExists[2221960]
        {
          (1883960 '=' error_out[1883936] error[1883954])
          ref i_x[2513219]:file[235668] "temp"
          (2513223 'move' i_x[2513219](2513221 'set reference' ret[237512]))
          (2513227 call deinit[235979] i_x[2513219])
          gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
        }
        (576910 'move' tmp[576890] ret[2258129])
      }
      (547214 'move' path[237572] tmp[576890])
      ref i_cs[2235635]:c_string[19] "temp"
      (2235639 'move' i_cs[2235635](2235637 'set reference' path_cs[237544]))
      const-val call_tmp[2235642]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235644 'move' call_tmp[2235642](2235646 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2235649]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235651 'move' call_tmp[2235649](2235653 'cast' c_string[19] call_tmp[2235642]))
      const-val coerce_tmp[2235656]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2235658 'move' coerce_tmp[2235656] path_cs[237544])
      const-val call_tmp[2235662]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235664 'move' call_tmp[2235662](2235666 'string_compare' coerce_tmp[2235656] call_tmp[2235649]))
      const-val call_tmp[2235669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235671 'move' call_tmp[2235669](2235673 '!=' call_tmp[2235662] 0))
      if call_tmp[2235669]
      {
        (2235679 call chpl_rt_free_c_string[22717] i_cs[2235635])
      }
      val error[1883968]:Error[167984] "error variable" "temp"
      (1883977 'move' error[1883968] nil[44])
      (237602 call ioerror[266338] call_tmp[716368] "in openfp" path[237572] error[1883968])
      val errorExists[2221968]:bool[10] "temp"
      (2221973 'move' errorExists[2221968](2221970 '!=' error[1883968] nil[44]))
      if errorExists[2221968]
      {
        gotoErrorHandling handler[1883969] handler[1883969]
      }
      label handler[1883969]
      val errorExists[2221976]:bool[10] "temp"
      (2221981 'move' errorExists[2221976](2221978 '!=' error[1883968] nil[44]))
      if errorExists[2221976]
      {
        (1883984 '=' error_out[1883936] error[1883968])
        ref i_x[2246477]:string[26] "temp"
        (2246481 'move' i_x[2246477](2246479 'set reference' path[237572]))
        (2246485 call deinit[30834] i_x[2246477])
        ref i_x[2513231]:file[235668] "temp"
        (2513235 'move' i_x[2513231](2513233 'set reference' ret[237512]))
        (2513239 call deinit[235979] i_x[2513231])
        gotoErrorHandlingReturn _end_openfp[534880] _end_openfp[534880]
      }
      ref i_x[2246489]:string[26] "temp"
      (2246493 'move' i_x[2246489](2246491 'set reference' path[237572]))
      (2246497 call deinit[30834] i_x[2246489])
    }
    (1022313 'move' ret[534882] ret[237512])
    label _end_openfp[534880]
    (1907320 '=' _retArg[1907318] ret[534882])
    (1907324 return _void[55])
  }
  function openmem[237713](const  ref arg style[237709]:iostyle[231932], ref arg error_out[1883996]:Error[167984], ref arg _retArg[1907344]:file[235668]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    const-val ret[534906]:file[235668] "dead after last mention" "RVV" "temp"
    const-val local_style[237717]:iostyle[231932] "dead at end of block" "insert auto destroy"
    (547222 'move' local_style[237717] style[237709])
    val ret[237723]:file[235668] "dead at end of block" "insert auto destroy"
    (1060790 call init[235662] ret[237723])
    ref call_tmp[2338930]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338932 'move' call_tmp[2338930](2338934 '.' ret[237723] home[235650]))
    const-val call_tmp[716419]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285711]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285713]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285715 'move' call_tmp[2285713](2285718 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285721 'move' call_tmp[2285711] call_tmp[2285713])
    const-val call_tmp[2285724]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285726]:locale[28] "temp"
    (2285729 call chpl_localeID_to_locale[92852] call_tmp[2285711] ret_tmp[2285726])
    (2285732 'move' call_tmp[2285724] ret_tmp[2285726])
    (1906283 'move' call_tmp[716419] call_tmp[2285724])
    (237732 call =[90634] call_tmp[2338930] call_tmp[716419])
    ref i_x[2388557]:locale[28] "temp"
    (2388561 'move' i_x[2388557](2388559 'set reference' call_tmp[716419]))
    (2388565 call deinit[90188] i_x[2388557])
    ref call_tmp[2339092]:qio_file_ptr_t[231527] "dead after last mention" "maybe param" "temp"
    (2339094 'move' call_tmp[2339092](2339096 '.' ret[237723] _file_internal[235656]))
    const-val call_tmp[716431]:syserr[223672] "dead at end of block" "maybe param" "temp"
    (716434 'move' call_tmp[716431](237743 call qio_file_open_mem[232816] call_tmp[2339092] QBUFFER_PTR_NULL[231567] local_style[237717]))
    const-val call_tmp[2328612]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328614 'move' call_tmp[2328612](2328617 call qio_err_iserr[223734] call_tmp[716431]))
    const-val call_tmp[2328619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328621 'move' call_tmp[2328619](2328623 '!=' call_tmp[2328612] 0))
    if call_tmp[2328619]
    {
      val error[1883998]:Error[167984] "error variable" "temp"
      (1884007 'move' error[1883998] nil[44])
      (237769 call ioerror[266399] call_tmp[716431] "in openmem" error[1883998])
      val errorExists[2221984]:bool[10] "temp"
      (2221989 'move' errorExists[2221984](2221986 '!=' error[1883998] nil[44]))
      if errorExists[2221984]
      {
        gotoErrorHandling handler[1883999] handler[1883999]
      }
      label handler[1883999]
      val errorExists[2221992]:bool[10] "temp"
      (2221997 'move' errorExists[2221992](2221994 '!=' error[1883998] nil[44]))
      if errorExists[2221992]
      {
        (1884014 '=' error_out[1883996] error[1883998])
        ref i_x[2513243]:file[235668] "temp"
        (2513247 'move' i_x[2513243](2513245 'set reference' ret[237723]))
        (2513251 call deinit[235979] i_x[2513243])
        gotoErrorHandlingReturn _end_openmem[534904] _end_openmem[534904]
      }
    }
    (1060788 'move' ret[534906] ret[237723])
    label _end_openmem[534904]
    (1907346 '=' _retArg[1907344] ret[534906])
    (1907348 return _void[55])
  }
  type channel(false,dynamic,true)[985816] val home[985804]:locale[28] "no doc" val _channel_internal[985809]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[985813]:locale[28] "no doc"
  type channel(false,dynamic,false)[1080871] val home[1080859]:locale[28] "no doc" val _channel_internal[1080864]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1080868]:locale[28] "no doc"
  type channel(true,dynamic,true)[1022014] val home[1022002]:locale[28] "no doc" val _channel_internal[1022007]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1022011]:locale[28] "no doc"
  type channel(true,dynamic,false)[1061136] val home[1061124]:locale[28] "no doc" val _channel_internal[1061129]:qio_channel_ptr_t[231553] "no doc" val _readWriteThisFromLocale[1061133]:locale[28] "no doc"
  function =[1018628](ref arg lhs[1018630]:channel(false,dynamic,true)[985816], const  ref arg rhs[1018632]:channel(false,dynamic,true)[985816]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2349492]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349494 'move' call_tmp[2349492](2349496 '.' rhs[1018632] home[985804]))
    const-val call_tmp[1018841]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283095]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283097 'move' coerce_tmp[2283095](2283099 '.v' call_tmp[2349492] _instance[89978]))
    val coerce_tmp[2283102]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283104 'move' coerce_tmp[2283102](2283106 'cast' object[22] coerce_tmp[2283095]))
    const-val call_tmp[2283109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283111 'move' call_tmp[2283109](2283113 'ptr_eq' coerce_tmp[2283102] nil[44]))
    if call_tmp[2283109]
    {
      (2283119 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1018843 'move' call_tmp[1018841](1018845 '_wide_get_locale' coerce_tmp[2283095]))
    val rvfDerefTmp[2195798]:channel(false,dynamic,true)[985816] "temp"
    (2195802 'move' rvfDerefTmp[2195798](2195800 'deref' rhs[1018632]))
    val isdirect[2200285]:bool[10] "temp"
    (2200290 'move' isdirect[2200285](2200287 call chpl_doDirectExecuteOn[187469] call_tmp[1018841]))
    if isdirect[2200285]
    {
      (2200294 call on_fn[1018854] rvfDerefTmp[2195798])
    }
    {
      val _args_foron_fn[2200309]:_class_localson_fn[2200301] "temp"
      (2200313 'move' _args_foron_fn[2200309](2200311 'stack allocate class' _class_localson_fn[2200301]))
      (2200315 '.=' _args_foron_fn[2200309] _0_tmp[2200304] call_tmp[1018841])
      (2200319 '.=' _args_foron_fn[2200309] _1_rvfDerefTmp[2200306] rvfDerefTmp[2195798])
      val _args_vforon_fn[2200323]:c_void_ptr[149] "temp"
      (2200327 'move' _args_vforon_fn[2200323](2200325 'cast_to_void_star' _args_foron_fn[2200309]))
      val _args_sizeon_fn[2200329]:int(64)[13] "temp"
      (2200333 'move' _args_sizeon_fn[2200329](2200331 'sizeof_bundle' _class_localson_fn[2200301]))
      on(2200365 call wrapon_fn[2200335] call_tmp[1018841] _args_vforon_fn[2200323] _args_sizeon_fn[2200329] _args_foron_fn[2200309])
    }
    ref call_tmp[2349502]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349504 'move' call_tmp[2349502](2349506 '.' lhs[1018630] home[985804]))
    const-val call_tmp[1018885]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283125]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283127 'move' coerce_tmp[2283125](2283129 '.v' call_tmp[2349502] _instance[89978]))
    val coerce_tmp[2283132]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283134 'move' coerce_tmp[2283132](2283136 'cast' object[22] coerce_tmp[2283125]))
    const-val call_tmp[2283139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283141 'move' call_tmp[2283139](2283143 'ptr_eq' coerce_tmp[2283132] nil[44]))
    if call_tmp[2283139]
    {
      (2283149 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1018887 'move' call_tmp[1018885](1018889 '_wide_get_locale' coerce_tmp[2283125]))
    val isdirect[2200370]:bool[10] "temp"
    (2200375 'move' isdirect[2200370](2200372 call chpl_doDirectExecuteOn[187469] call_tmp[1018885]))
    if isdirect[2200370]
    {
      (2200379 call on_fn[1018898] lhs[1018630])
    }
    {
      val _args_foron_fn[2200394]:_class_localson_fn[2200386] "temp"
      (2200398 'move' _args_foron_fn[2200394](2200396 'stack allocate class' _class_localson_fn[2200386]))
      (2200400 '.=' _args_foron_fn[2200394] _0_tmp[2200389] call_tmp[1018885])
      ref tmp[2200404]:channel(false,dynamic,true)[985816] "temp"
      (2200408 'move' tmp[2200404](2200406 'set reference' lhs[1018630]))
      (2200410 '.=' _args_foron_fn[2200394] _1_lhs[2200391] tmp[2200404])
      val _args_vforon_fn[2200414]:c_void_ptr[149] "temp"
      (2200418 'move' _args_vforon_fn[2200414](2200416 'cast_to_void_star' _args_foron_fn[2200394]))
      val _args_sizeon_fn[2200420]:int(64)[13] "temp"
      (2200424 'move' _args_sizeon_fn[2200420](2200422 'sizeof_bundle' _class_localson_fn[2200386]))
      on(2200456 call wrapon_fn[2200426] call_tmp[1018885] _args_vforon_fn[2200414] _args_sizeon_fn[2200420] _args_foron_fn[2200394])
    }
    ref call_tmp[2349512]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349514 'move' call_tmp[2349512](2349516 '.' lhs[1018630] home[985804]))
    ref call_tmp[2349522]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349524 'move' call_tmp[2349522](2349526 '.' rhs[1018632] home[985804]))
    (1018936 call =[90634] call_tmp[2349512] call_tmp[2349522])
    const-val coerce_tmp[1019275]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019279 'move' coerce_tmp[1019275](2565877 '.v' rhs[1018632] _channel_internal[985809]))
    (2565871 '.=' lhs[1018630] _channel_internal[985809] coerce_tmp[1019275])
    (1018960 return _void[55])
  }
  function =[1023336](ref arg lhs[1023338]:channel(true,dynamic,true)[1022014], const  ref arg rhs[1023340]:channel(true,dynamic,true)[1022014]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2350533]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350535 'move' call_tmp[2350533](2350537 '.' rhs[1023340] home[1022002]))
    const-val call_tmp[1023549]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283245]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283247 'move' coerce_tmp[2283245](2283249 '.v' call_tmp[2350533] _instance[89978]))
    val coerce_tmp[2283252]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283254 'move' coerce_tmp[2283252](2283256 'cast' object[22] coerce_tmp[2283245]))
    const-val call_tmp[2283259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283261 'move' call_tmp[2283259](2283263 'ptr_eq' coerce_tmp[2283252] nil[44]))
    if call_tmp[2283259]
    {
      (2283269 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1023551 'move' call_tmp[1023549](1023553 '_wide_get_locale' coerce_tmp[2283245]))
    val rvfDerefTmp[2195875]:channel(true,dynamic,true)[1022014] "temp"
    (2195879 'move' rvfDerefTmp[2195875](2195877 'deref' rhs[1023340]))
    val isdirect[2200968]:bool[10] "temp"
    (2200973 'move' isdirect[2200968](2200970 call chpl_doDirectExecuteOn[187469] call_tmp[1023549]))
    if isdirect[2200968]
    {
      (2200977 call on_fn[1023562] rvfDerefTmp[2195875])
    }
    {
      val _args_foron_fn[2200992]:_class_localson_fn[2200984] "temp"
      (2200996 'move' _args_foron_fn[2200992](2200994 'stack allocate class' _class_localson_fn[2200984]))
      (2200998 '.=' _args_foron_fn[2200992] _0_tmp[2200987] call_tmp[1023549])
      (2201002 '.=' _args_foron_fn[2200992] _1_rvfDerefTmp[2200989] rvfDerefTmp[2195875])
      val _args_vforon_fn[2201006]:c_void_ptr[149] "temp"
      (2201010 'move' _args_vforon_fn[2201006](2201008 'cast_to_void_star' _args_foron_fn[2200992]))
      val _args_sizeon_fn[2201012]:int(64)[13] "temp"
      (2201016 'move' _args_sizeon_fn[2201012](2201014 'sizeof_bundle' _class_localson_fn[2200984]))
      on(2201048 call wrapon_fn[2201018] call_tmp[1023549] _args_vforon_fn[2201006] _args_sizeon_fn[2201012] _args_foron_fn[2200992])
    }
    ref call_tmp[2350543]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350545 'move' call_tmp[2350543](2350547 '.' lhs[1023338] home[1022002]))
    const-val call_tmp[1023593]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283275]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283277 'move' coerce_tmp[2283275](2283279 '.v' call_tmp[2350543] _instance[89978]))
    val coerce_tmp[2283282]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283284 'move' coerce_tmp[2283282](2283286 'cast' object[22] coerce_tmp[2283275]))
    const-val call_tmp[2283289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283291 'move' call_tmp[2283289](2283293 'ptr_eq' coerce_tmp[2283282] nil[44]))
    if call_tmp[2283289]
    {
      (2283299 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1023595 'move' call_tmp[1023593](1023597 '_wide_get_locale' coerce_tmp[2283275]))
    val isdirect[2201053]:bool[10] "temp"
    (2201058 'move' isdirect[2201053](2201055 call chpl_doDirectExecuteOn[187469] call_tmp[1023593]))
    if isdirect[2201053]
    {
      (2201062 call on_fn[1023606] lhs[1023338])
    }
    {
      val _args_foron_fn[2201077]:_class_localson_fn[2201069] "temp"
      (2201081 'move' _args_foron_fn[2201077](2201079 'stack allocate class' _class_localson_fn[2201069]))
      (2201083 '.=' _args_foron_fn[2201077] _0_tmp[2201072] call_tmp[1023593])
      ref tmp[2201087]:channel(true,dynamic,true)[1022014] "temp"
      (2201091 'move' tmp[2201087](2201089 'set reference' lhs[1023338]))
      (2201093 '.=' _args_foron_fn[2201077] _1_lhs[2201074] tmp[2201087])
      val _args_vforon_fn[2201097]:c_void_ptr[149] "temp"
      (2201101 'move' _args_vforon_fn[2201097](2201099 'cast_to_void_star' _args_foron_fn[2201077]))
      val _args_sizeon_fn[2201103]:int(64)[13] "temp"
      (2201107 'move' _args_sizeon_fn[2201103](2201105 'sizeof_bundle' _class_localson_fn[2201069]))
      on(2201139 call wrapon_fn[2201109] call_tmp[1023593] _args_vforon_fn[2201097] _args_sizeon_fn[2201103] _args_foron_fn[2201077])
    }
    ref call_tmp[2350553]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350555 'move' call_tmp[2350553](2350557 '.' lhs[1023338] home[1022002]))
    ref call_tmp[2350563]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350565 'move' call_tmp[2350563](2350567 '.' rhs[1023340] home[1022002]))
    (1023644 call =[90634] call_tmp[2350553] call_tmp[2350563])
    const-val coerce_tmp[1023983]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023987 'move' coerce_tmp[1023983](2566152 '.v' rhs[1023340] _channel_internal[1022007]))
    (2566146 '.=' lhs[1023338] _channel_internal[1022007] coerce_tmp[1023983])
    (1023668 return _void[55])
  }
  function =[1062049](ref arg lhs[1062051]:channel(true,dynamic,false)[1061136], const  ref arg rhs[1062053]:channel(true,dynamic,false)[1061136]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2387760]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387762 'move' call_tmp[2387760](2387764 '.' rhs[1062053] home[1061124]))
    const-val call_tmp[1062262]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283395]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283397 'move' coerce_tmp[2283395](2283399 '.v' call_tmp[2387760] _instance[89978]))
    val coerce_tmp[2283402]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283404 'move' coerce_tmp[2283402](2283406 'cast' object[22] coerce_tmp[2283395]))
    const-val call_tmp[2283409]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283411 'move' call_tmp[2283409](2283413 'ptr_eq' coerce_tmp[2283402] nil[44]))
    if call_tmp[2283409]
    {
      (2283419 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1062264 'move' call_tmp[1062262](1062266 '_wide_get_locale' coerce_tmp[2283395]))
    val rvfDerefTmp[2195983]:channel(true,dynamic,false)[1061136] "temp"
    (2195987 'move' rvfDerefTmp[2195983](2195985 'deref' rhs[1062053]))
    val isdirect[2201681]:bool[10] "temp"
    (2201686 'move' isdirect[2201681](2201683 call chpl_doDirectExecuteOn[187469] call_tmp[1062262]))
    if isdirect[2201681]
    {
      (2201690 call on_fn[1062275] rvfDerefTmp[2195983])
    }
    {
      val _args_foron_fn[2201705]:_class_localson_fn[2201697] "temp"
      (2201709 'move' _args_foron_fn[2201705](2201707 'stack allocate class' _class_localson_fn[2201697]))
      (2201711 '.=' _args_foron_fn[2201705] _0_tmp[2201700] call_tmp[1062262])
      (2201715 '.=' _args_foron_fn[2201705] _1_rvfDerefTmp[2201702] rvfDerefTmp[2195983])
      val _args_vforon_fn[2201719]:c_void_ptr[149] "temp"
      (2201723 'move' _args_vforon_fn[2201719](2201721 'cast_to_void_star' _args_foron_fn[2201705]))
      val _args_sizeon_fn[2201725]:int(64)[13] "temp"
      (2201729 'move' _args_sizeon_fn[2201725](2201727 'sizeof_bundle' _class_localson_fn[2201697]))
      on(2201761 call wrapon_fn[2201731] call_tmp[1062262] _args_vforon_fn[2201719] _args_sizeon_fn[2201725] _args_foron_fn[2201705])
    }
    ref call_tmp[2387770]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387772 'move' call_tmp[2387770](2387774 '.' lhs[1062051] home[1061124]))
    const-val call_tmp[1062306]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283425]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283427 'move' coerce_tmp[2283425](2283429 '.v' call_tmp[2387770] _instance[89978]))
    val coerce_tmp[2283432]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283434 'move' coerce_tmp[2283432](2283436 'cast' object[22] coerce_tmp[2283425]))
    const-val call_tmp[2283439]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283441 'move' call_tmp[2283439](2283443 'ptr_eq' coerce_tmp[2283432] nil[44]))
    if call_tmp[2283439]
    {
      (2283449 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1062308 'move' call_tmp[1062306](1062310 '_wide_get_locale' coerce_tmp[2283425]))
    val isdirect[2201766]:bool[10] "temp"
    (2201771 'move' isdirect[2201766](2201768 call chpl_doDirectExecuteOn[187469] call_tmp[1062306]))
    if isdirect[2201766]
    {
      (2201775 call on_fn[1062319] lhs[1062051])
    }
    {
      val _args_foron_fn[2201790]:_class_localson_fn[2201782] "temp"
      (2201794 'move' _args_foron_fn[2201790](2201792 'stack allocate class' _class_localson_fn[2201782]))
      (2201796 '.=' _args_foron_fn[2201790] _0_tmp[2201785] call_tmp[1062306])
      ref tmp[2201800]:channel(true,dynamic,false)[1061136] "temp"
      (2201804 'move' tmp[2201800](2201802 'set reference' lhs[1062051]))
      (2201806 '.=' _args_foron_fn[2201790] _1_lhs[2201787] tmp[2201800])
      val _args_vforon_fn[2201810]:c_void_ptr[149] "temp"
      (2201814 'move' _args_vforon_fn[2201810](2201812 'cast_to_void_star' _args_foron_fn[2201790]))
      val _args_sizeon_fn[2201816]:int(64)[13] "temp"
      (2201820 'move' _args_sizeon_fn[2201816](2201818 'sizeof_bundle' _class_localson_fn[2201782]))
      on(2201852 call wrapon_fn[2201822] call_tmp[1062306] _args_vforon_fn[2201810] _args_sizeon_fn[2201816] _args_foron_fn[2201790])
    }
    ref call_tmp[2387780]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387782 'move' call_tmp[2387780](2387784 '.' lhs[1062051] home[1061124]))
    ref call_tmp[2387790]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387792 'move' call_tmp[2387790](2387794 '.' rhs[1062053] home[1061124]))
    (1062357 call =[90634] call_tmp[2387780] call_tmp[2387790])
    const-val coerce_tmp[1062505]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062509 'move' coerce_tmp[1062505](2566635 '.v' rhs[1062053] _channel_internal[1061129]))
    (2566629 '.=' lhs[1062051] _channel_internal[1061129] coerce_tmp[1062505])
    (1062381 return _void[55])
  }
  function =[1081781](ref arg lhs[1081783]:channel(false,dynamic,false)[1080871], const  ref arg rhs[1081785]:channel(false,dynamic,false)[1080871]) : void[4] "assignop" "instantiated generic" "invisible fn" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2394319]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394321 'move' call_tmp[2394319](2394323 '.' rhs[1081785] home[1080859]))
    const-val call_tmp[1081994]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283665]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283667 'move' coerce_tmp[2283665](2283669 '.v' call_tmp[2394319] _instance[89978]))
    val coerce_tmp[2283672]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283674 'move' coerce_tmp[2283672](2283676 'cast' object[22] coerce_tmp[2283665]))
    const-val call_tmp[2283679]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283681 'move' call_tmp[2283679](2283683 'ptr_eq' coerce_tmp[2283672] nil[44]))
    if call_tmp[2283679]
    {
      (2283689 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1081996 'move' call_tmp[1081994](1081998 '_wide_get_locale' coerce_tmp[2283665]))
    val rvfDerefTmp[2196161]:channel(false,dynamic,false)[1080871] "temp"
    (2196165 'move' rvfDerefTmp[2196161](2196163 'deref' rhs[1081785]))
    val isdirect[2202902]:bool[10] "temp"
    (2202907 'move' isdirect[2202902](2202904 call chpl_doDirectExecuteOn[187469] call_tmp[1081994]))
    if isdirect[2202902]
    {
      (2202911 call on_fn[1082007] rvfDerefTmp[2196161])
    }
    {
      val _args_foron_fn[2202926]:_class_localson_fn[2202918] "temp"
      (2202930 'move' _args_foron_fn[2202926](2202928 'stack allocate class' _class_localson_fn[2202918]))
      (2202932 '.=' _args_foron_fn[2202926] _0_tmp[2202921] call_tmp[1081994])
      (2202936 '.=' _args_foron_fn[2202926] _1_rvfDerefTmp[2202923] rvfDerefTmp[2196161])
      val _args_vforon_fn[2202940]:c_void_ptr[149] "temp"
      (2202944 'move' _args_vforon_fn[2202940](2202942 'cast_to_void_star' _args_foron_fn[2202926]))
      val _args_sizeon_fn[2202946]:int(64)[13] "temp"
      (2202950 'move' _args_sizeon_fn[2202946](2202948 'sizeof_bundle' _class_localson_fn[2202918]))
      on(2202982 call wrapon_fn[2202952] call_tmp[1081994] _args_vforon_fn[2202940] _args_sizeon_fn[2202946] _args_foron_fn[2202926])
    }
    ref call_tmp[2394329]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394331 'move' call_tmp[2394329](2394333 '.' lhs[1081783] home[1080859]))
    const-val call_tmp[1082038]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283695]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283697 'move' coerce_tmp[2283695](2283699 '.v' call_tmp[2394329] _instance[89978]))
    val coerce_tmp[2283702]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283704 'move' coerce_tmp[2283702](2283706 'cast' object[22] coerce_tmp[2283695]))
    const-val call_tmp[2283709]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283711 'move' call_tmp[2283709](2283713 'ptr_eq' coerce_tmp[2283702] nil[44]))
    if call_tmp[2283709]
    {
      (2283719 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1082040 'move' call_tmp[1082038](1082042 '_wide_get_locale' coerce_tmp[2283695]))
    val isdirect[2202987]:bool[10] "temp"
    (2202992 'move' isdirect[2202987](2202989 call chpl_doDirectExecuteOn[187469] call_tmp[1082038]))
    if isdirect[2202987]
    {
      (2202996 call on_fn[1082051] lhs[1081783])
    }
    {
      val _args_foron_fn[2203011]:_class_localson_fn[2203003] "temp"
      (2203015 'move' _args_foron_fn[2203011](2203013 'stack allocate class' _class_localson_fn[2203003]))
      (2203017 '.=' _args_foron_fn[2203011] _0_tmp[2203006] call_tmp[1082038])
      ref tmp[2203021]:channel(false,dynamic,false)[1080871] "temp"
      (2203025 'move' tmp[2203021](2203023 'set reference' lhs[1081783]))
      (2203027 '.=' _args_foron_fn[2203011] _1_lhs[2203008] tmp[2203021])
      val _args_vforon_fn[2203031]:c_void_ptr[149] "temp"
      (2203035 'move' _args_vforon_fn[2203031](2203033 'cast_to_void_star' _args_foron_fn[2203011]))
      val _args_sizeon_fn[2203037]:int(64)[13] "temp"
      (2203041 'move' _args_sizeon_fn[2203037](2203039 'sizeof_bundle' _class_localson_fn[2203003]))
      on(2203073 call wrapon_fn[2203043] call_tmp[1082038] _args_vforon_fn[2203031] _args_sizeon_fn[2203037] _args_foron_fn[2203011])
    }
    ref call_tmp[2394339]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394341 'move' call_tmp[2394339](2394343 '.' lhs[1081783] home[1080859]))
    ref call_tmp[2394349]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394351 'move' call_tmp[2394349](2394353 '.' rhs[1081785] home[1080859]))
    (1082089 call =[90634] call_tmp[2394339] call_tmp[2394349])
    const-val coerce_tmp[1082237]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082241 'move' coerce_tmp[1082237](2566798 '.v' rhs[1081785] _channel_internal[1080864]))
    (2566792 '.=' lhs[1081783] _channel_internal[1080864] coerce_tmp[1082237])
    (1082113 return _void[55])
  }
  function channel(false,dynamic,true)[985816].init[1018060](ref arg this[1018066]:channel(false,dynamic,true)[985816]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2285783]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285785]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285787 'move' call_tmp[2285785](2285790 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285793 'move' call_tmp[2285783] call_tmp[2285785])
    const-val call_tmp[2285796]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285798]:locale[28] "temp"
    (2285801 call chpl_localeID_to_locale[92852] call_tmp[2285783] ret_tmp[2285798])
    (2285804 'move' call_tmp[2285796] ret_tmp[2285798])
    (1018132 '.=' this[1018066] home[985804] call_tmp[2285796])
    val tmp[1018137]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1018139 'move' tmp[1018137] QIO_CHANNEL_PTR_NULL[231556])
    (1018143 '.=' this[1018066] _channel_internal[985809] tmp[1018137])
    val tmp[1018148]:locale[28] "dead after last mention" "temp"
    (1018150 call init=[90170] tmp[1018148] nilLocale[89942])
    (1018153 '.=' this[1018066] _readWriteThisFromLocale[985813] tmp[1018148])
    (1018158 return _void[55])
  }
  function channel(true,dynamic,true)[1022014].init[1023096](ref arg this[1023102]:channel(true,dynamic,true)[1022014]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2285819]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285821]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285823 'move' call_tmp[2285821](2285826 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285829 'move' call_tmp[2285819] call_tmp[2285821])
    const-val call_tmp[2285832]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285834]:locale[28] "temp"
    (2285837 call chpl_localeID_to_locale[92852] call_tmp[2285819] ret_tmp[2285834])
    (2285840 'move' call_tmp[2285832] ret_tmp[2285834])
    (1023168 '.=' this[1023102] home[1022002] call_tmp[2285832])
    val tmp[1023173]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1023175 'move' tmp[1023173] QIO_CHANNEL_PTR_NULL[231556])
    (1023179 '.=' this[1023102] _channel_internal[1022007] tmp[1023173])
    val tmp[1023184]:locale[28] "dead after last mention" "temp"
    (1023186 call init=[90170] tmp[1023184] nilLocale[89942])
    (1023189 '.=' this[1023102] _readWriteThisFromLocale[1022011] tmp[1023184])
    (1023194 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1061809](ref arg this[1061815]:channel(true,dynamic,false)[1061136]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2285855]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285857]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285859 'move' call_tmp[2285857](2285862 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285865 'move' call_tmp[2285855] call_tmp[2285857])
    const-val call_tmp[2285868]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285870]:locale[28] "temp"
    (2285873 call chpl_localeID_to_locale[92852] call_tmp[2285855] ret_tmp[2285870])
    (2285876 'move' call_tmp[2285868] ret_tmp[2285870])
    (1061881 '.=' this[1061815] home[1061124] call_tmp[2285868])
    val tmp[1061886]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1061888 'move' tmp[1061886] QIO_CHANNEL_PTR_NULL[231556])
    (1061892 '.=' this[1061815] _channel_internal[1061129] tmp[1061886])
    val tmp[1061897]:locale[28] "dead after last mention" "temp"
    (1061899 call init=[90170] tmp[1061897] nilLocale[89942])
    (1061902 '.=' this[1061815] _readWriteThisFromLocale[1061133] tmp[1061897])
    (1061907 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].init[1081541](ref arg this[1081547]:channel(false,dynamic,false)[1080871]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[2285963]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285965]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2285967 'move' call_tmp[2285965](2285970 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2285973 'move' call_tmp[2285963] call_tmp[2285965])
    const-val call_tmp[2285976]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2285978]:locale[28] "temp"
    (2285981 call chpl_localeID_to_locale[92852] call_tmp[2285963] ret_tmp[2285978])
    (2285984 'move' call_tmp[2285976] ret_tmp[2285978])
    (1081613 '.=' this[1081547] home[1080859] call_tmp[2285976])
    val tmp[1081618]:qio_channel_ptr_t[231553] "dead after last mention" "temp"
    (1081620 'move' tmp[1081618] QIO_CHANNEL_PTR_NULL[231556])
    (1081624 '.=' this[1081547] _channel_internal[1080864] tmp[1081618])
    val tmp[1081629]:locale[28] "dead after last mention" "temp"
    (1081631 call init=[90170] tmp[1081629] nilLocale[89942])
    (1081634 '.=' this[1081547] _readWriteThisFromLocale[1080868] tmp[1081629])
    (1081639 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1068577](ref arg this[1068583]:channel(true,dynamic,false)[1061136], const  ref arg home[1068591]:locale[28], const in arg _channel_internal[1068593]:qio_channel_ptr_t[231553], const  ref arg _readWriteThisFromLocale[1068595]:locale[28]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val tmp[1068643]:locale[28] "dead after last mention" "temp"
    (1068645 call init=[90170] tmp[1068643] home[1068591])
    (1068649 '.=' this[1068583] home[1061124] tmp[1068643])
    (1068660 '.=' this[1068583] _channel_internal[1061129] _channel_internal[1068593])
    val tmp[1068665]:locale[28] "dead after last mention" "temp"
    (1068667 call init=[90170] tmp[1068665] _readWriteThisFromLocale[1068595])
    (1068670 '.=' this[1068583] _readWriteThisFromLocale[1061133] tmp[1068665])
    (1068675 return _void[55])
  }
  function channel(false,dynamic,true)[985816].init[1017836](ref arg this[1017842]:channel(false,dynamic,true)[985816], const  ref arg f[1017850]:file[235668], ref arg error[1017852]:syserr[223672], const in arg hints[1017856]:int(32)[95], const in arg start[1017862]:int(64)[13], const in arg end[1017868]:int(64)[13], const in arg local_style[1017870]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1018047]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1017886 call init[1018060] this[1017842])
    ref call_tmp[2338868]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338870 'move' call_tmp[2338868](2338872 '.' f[1017850] home[235650]))
    const-val call_tmp[1017901]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283065]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283067 'move' coerce_tmp[2283065](2283069 '.v' call_tmp[2338868] _instance[89978]))
    val coerce_tmp[2283072]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283074 'move' coerce_tmp[2283072](2283076 'cast' object[22] coerce_tmp[2283065]))
    const-val call_tmp[2283079]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283081 'move' call_tmp[2283079](2283083 'ptr_eq' coerce_tmp[2283072] nil[44]))
    if call_tmp[2283079]
    {
      (2283089 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1017903 'move' call_tmp[1017901](1017905 '_wide_get_locale' coerce_tmp[2283065]))
    val rvfDerefTmp[2195764]:file[235668] "temp"
    (2195768 'move' rvfDerefTmp[2195764](2195766 'deref' f[1017850]))
    val isdirect[2200098]:bool[10] "temp"
    (2200103 'move' isdirect[2200098](2200100 call chpl_doDirectExecuteOn[187469] call_tmp[1017901]))
    if isdirect[2200098]
    {
      (2200107 call on_fn[1017914] start[1017862] rvfDerefTmp[2195764] _formal_tmp_error[1018047] this[1017842] hints[1017856] local_style[1017870] end[1017868])
    }
    {
      val _args_foron_fn[2200140]:_class_localson_fn[2200120] "temp"
      (2200144 'move' _args_foron_fn[2200140](2200142 'stack allocate class' _class_localson_fn[2200120]))
      (2200146 '.=' _args_foron_fn[2200140] _0_tmp[2200123] call_tmp[1017901])
      (2200150 '.=' _args_foron_fn[2200140] _1_start[2200125] start[1017862])
      (2200154 '.=' _args_foron_fn[2200140] _2_rvfDerefTmp[2200127] rvfDerefTmp[2195764])
      ref tmp[2200158]:syserr[223672] "temp"
      (2200162 'move' tmp[2200158](2200160 'set reference' _formal_tmp_error[1018047]))
      (2200164 '.=' _args_foron_fn[2200140] _3__formal_tmp_error[2200129] tmp[2200158])
      ref tmp[2200168]:channel(false,dynamic,true)[985816] "temp"
      (2200172 'move' tmp[2200168](2200170 'set reference' this[1017842]))
      (2200174 '.=' _args_foron_fn[2200140] _4_this[2200131] tmp[2200168])
      (2200178 '.=' _args_foron_fn[2200140] _5_hints[2200133] hints[1017856])
      (2200182 '.=' _args_foron_fn[2200140] _6_rvfDerefTmp[2200135] local_style[1017870])
      (2200186 '.=' _args_foron_fn[2200140] _7_end[2200137] end[1017868])
      val _args_vforon_fn[2200190]:c_void_ptr[149] "temp"
      (2200194 'move' _args_vforon_fn[2200190](2200192 'cast_to_void_star' _args_foron_fn[2200140]))
      val _args_sizeon_fn[2200196]:int(64)[13] "temp"
      (2200200 'move' _args_sizeon_fn[2200196](2200198 'sizeof_bundle' _class_localson_fn[2200120]))
      on(2200280 call wrapon_fn[2200202] call_tmp[1017901] _args_vforon_fn[2200190] _args_sizeon_fn[2200196] _args_foron_fn[2200140])
    }
    label _endinit[1018057]
    (1920162 '=' error[1017852] _formal_tmp_error[1018047])
    (1018044 return _void[55])
  }
  function channel(true,dynamic,true)[1022014].init[1022872](ref arg this[1022878]:channel(true,dynamic,true)[1022014], const  ref arg f[1022886]:file[235668], ref arg error[1022888]:syserr[223672], const in arg hints[1022892]:int(32)[95], const in arg start[1022898]:int(64)[13], const in arg end[1022904]:int(64)[13], const in arg local_style[1022906]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1023083]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1022922 call init[1023096] this[1022878])
    ref call_tmp[2338914]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338916 'move' call_tmp[2338914](2338918 '.' f[1022886] home[235650]))
    const-val call_tmp[1022937]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283215]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283217 'move' coerce_tmp[2283215](2283219 '.v' call_tmp[2338914] _instance[89978]))
    val coerce_tmp[2283222]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283224 'move' coerce_tmp[2283222](2283226 'cast' object[22] coerce_tmp[2283215]))
    const-val call_tmp[2283229]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283231 'move' call_tmp[2283229](2283233 'ptr_eq' coerce_tmp[2283222] nil[44]))
    if call_tmp[2283229]
    {
      (2283239 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1022939 'move' call_tmp[1022937](1022941 '_wide_get_locale' coerce_tmp[2283215]))
    val rvfDerefTmp[2195854]:file[235668] "temp"
    (2195858 'move' rvfDerefTmp[2195854](2195856 'deref' f[1022886]))
    val isdirect[2200781]:bool[10] "temp"
    (2200786 'move' isdirect[2200781](2200783 call chpl_doDirectExecuteOn[187469] call_tmp[1022937]))
    if isdirect[2200781]
    {
      (2200790 call on_fn[1022950] this[1022878] hints[1022892] local_style[1022906] start[1022898] rvfDerefTmp[2195854] _formal_tmp_error[1023083] end[1022904])
    }
    {
      val _args_foron_fn[2200823]:_class_localson_fn[2200803] "temp"
      (2200827 'move' _args_foron_fn[2200823](2200825 'stack allocate class' _class_localson_fn[2200803]))
      (2200829 '.=' _args_foron_fn[2200823] _0_tmp[2200806] call_tmp[1022937])
      ref tmp[2200833]:channel(true,dynamic,true)[1022014] "temp"
      (2200837 'move' tmp[2200833](2200835 'set reference' this[1022878]))
      (2200839 '.=' _args_foron_fn[2200823] _1_this[2200808] tmp[2200833])
      (2200843 '.=' _args_foron_fn[2200823] _2_hints[2200810] hints[1022892])
      (2200847 '.=' _args_foron_fn[2200823] _3_rvfDerefTmp[2200812] local_style[1022906])
      (2200851 '.=' _args_foron_fn[2200823] _4_start[2200814] start[1022898])
      (2200855 '.=' _args_foron_fn[2200823] _5_rvfDerefTmp[2200816] rvfDerefTmp[2195854])
      ref tmp[2200859]:syserr[223672] "temp"
      (2200863 'move' tmp[2200859](2200861 'set reference' _formal_tmp_error[1023083]))
      (2200865 '.=' _args_foron_fn[2200823] _6__formal_tmp_error[2200818] tmp[2200859])
      (2200869 '.=' _args_foron_fn[2200823] _7_end[2200820] end[1022904])
      val _args_vforon_fn[2200873]:c_void_ptr[149] "temp"
      (2200877 'move' _args_vforon_fn[2200873](2200875 'cast_to_void_star' _args_foron_fn[2200823]))
      val _args_sizeon_fn[2200879]:int(64)[13] "temp"
      (2200883 'move' _args_sizeon_fn[2200879](2200881 'sizeof_bundle' _class_localson_fn[2200803]))
      on(2200963 call wrapon_fn[2200885] call_tmp[1022937] _args_vforon_fn[2200873] _args_sizeon_fn[2200879] _args_foron_fn[2200823])
    }
    label _endinit[1023093]
    (1920185 '=' error[1022888] _formal_tmp_error[1023083])
    (1023080 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].init[1061585](ref arg this[1061591]:channel(true,dynamic,false)[1061136], const  ref arg f[1061599]:file[235668], ref arg error[1061601]:syserr[223672], const in arg hints[1061605]:int(32)[95], const in arg start[1061611]:int(64)[13], const in arg end[1061617]:int(64)[13], const in arg local_style[1061619]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1061796]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1061635 call init[1061809] this[1061591])
    ref call_tmp[2338960]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338962 'move' call_tmp[2338960](2338964 '.' f[1061599] home[235650]))
    const-val call_tmp[1061650]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283365]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283367 'move' coerce_tmp[2283365](2283369 '.v' call_tmp[2338960] _instance[89978]))
    val coerce_tmp[2283372]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283374 'move' coerce_tmp[2283372](2283376 'cast' object[22] coerce_tmp[2283365]))
    const-val call_tmp[2283379]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283381 'move' call_tmp[2283379](2283383 'ptr_eq' coerce_tmp[2283372] nil[44]))
    if call_tmp[2283379]
    {
      (2283389 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1061652 'move' call_tmp[1061650](1061654 '_wide_get_locale' coerce_tmp[2283365]))
    val rvfDerefTmp[2195962]:file[235668] "temp"
    (2195966 'move' rvfDerefTmp[2195962](2195964 'deref' f[1061599]))
    val isdirect[2201494]:bool[10] "temp"
    (2201499 'move' isdirect[2201494](2201496 call chpl_doDirectExecuteOn[187469] call_tmp[1061650]))
    if isdirect[2201494]
    {
      (2201503 call on_fn[1061663] local_style[1061619] this[1061591] start[1061611] rvfDerefTmp[2195962] _formal_tmp_error[1061796] end[1061617] hints[1061605])
    }
    {
      val _args_foron_fn[2201536]:_class_localson_fn[2201516] "temp"
      (2201540 'move' _args_foron_fn[2201536](2201538 'stack allocate class' _class_localson_fn[2201516]))
      (2201542 '.=' _args_foron_fn[2201536] _0_tmp[2201519] call_tmp[1061650])
      (2201546 '.=' _args_foron_fn[2201536] _1_rvfDerefTmp[2201521] local_style[1061619])
      ref tmp[2201550]:channel(true,dynamic,false)[1061136] "temp"
      (2201554 'move' tmp[2201550](2201552 'set reference' this[1061591]))
      (2201556 '.=' _args_foron_fn[2201536] _2_this[2201523] tmp[2201550])
      (2201560 '.=' _args_foron_fn[2201536] _3_start[2201525] start[1061611])
      (2201564 '.=' _args_foron_fn[2201536] _4_rvfDerefTmp[2201527] rvfDerefTmp[2195962])
      ref tmp[2201568]:syserr[223672] "temp"
      (2201572 'move' tmp[2201568](2201570 'set reference' _formal_tmp_error[1061796]))
      (2201574 '.=' _args_foron_fn[2201536] _5__formal_tmp_error[2201529] tmp[2201568])
      (2201578 '.=' _args_foron_fn[2201536] _6_end[2201531] end[1061617])
      (2201582 '.=' _args_foron_fn[2201536] _7_hints[2201533] hints[1061605])
      val _args_vforon_fn[2201586]:c_void_ptr[149] "temp"
      (2201590 'move' _args_vforon_fn[2201586](2201588 'cast_to_void_star' _args_foron_fn[2201536]))
      val _args_sizeon_fn[2201592]:int(64)[13] "temp"
      (2201596 'move' _args_sizeon_fn[2201592](2201594 'sizeof_bundle' _class_localson_fn[2201516]))
      on(2201676 call wrapon_fn[2201598] call_tmp[1061650] _args_vforon_fn[2201586] _args_sizeon_fn[2201592] _args_foron_fn[2201536])
    }
    label _endinit[1061806]
    (1921410 '=' error[1061601] _formal_tmp_error[1061796])
    (1061793 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].init[1081317](ref arg this[1081323]:channel(false,dynamic,false)[1080871], const  ref arg f[1081331]:file[235668], ref arg error[1081333]:syserr[223672], const in arg hints[1081337]:int(32)[95], const in arg start[1081343]:int(64)[13], const in arg end[1081349]:int(64)[13], const in arg local_style[1081351]:iostyle[231932]) : void[4] "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val _formal_tmp_error[1081528]:syserr[223672] "dead at end of block" "formal temp" "formal temp out" "insert auto destroy" "temp"
    (1081367 call init[1081541] this[1081323])
    ref call_tmp[2338980]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338982 'move' call_tmp[2338980](2338984 '.' f[1081331] home[235650]))
    const-val call_tmp[1081382]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283635]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283637 'move' coerce_tmp[2283635](2283639 '.v' call_tmp[2338980] _instance[89978]))
    val coerce_tmp[2283642]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283644 'move' coerce_tmp[2283642](2283646 'cast' object[22] coerce_tmp[2283635]))
    const-val call_tmp[2283649]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283651 'move' call_tmp[2283649](2283653 'ptr_eq' coerce_tmp[2283642] nil[44]))
    if call_tmp[2283649]
    {
      (2283659 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1081384 'move' call_tmp[1081382](1081386 '_wide_get_locale' coerce_tmp[2283635]))
    val rvfDerefTmp[2196127]:file[235668] "temp"
    (2196131 'move' rvfDerefTmp[2196127](2196129 'deref' f[1081331]))
    val isdirect[2202715]:bool[10] "temp"
    (2202720 'move' isdirect[2202715](2202717 call chpl_doDirectExecuteOn[187469] call_tmp[1081382]))
    if isdirect[2202715]
    {
      (2202724 call on_fn[1081395] start[1081343] rvfDerefTmp[2196127] _formal_tmp_error[1081528] end[1081349] hints[1081337] local_style[1081351] this[1081323])
    }
    {
      val _args_foron_fn[2202757]:_class_localson_fn[2202737] "temp"
      (2202761 'move' _args_foron_fn[2202757](2202759 'stack allocate class' _class_localson_fn[2202737]))
      (2202763 '.=' _args_foron_fn[2202757] _0_tmp[2202740] call_tmp[1081382])
      (2202767 '.=' _args_foron_fn[2202757] _1_start[2202742] start[1081343])
      (2202771 '.=' _args_foron_fn[2202757] _2_rvfDerefTmp[2202744] rvfDerefTmp[2196127])
      ref tmp[2202775]:syserr[223672] "temp"
      (2202779 'move' tmp[2202775](2202777 'set reference' _formal_tmp_error[1081528]))
      (2202781 '.=' _args_foron_fn[2202757] _3__formal_tmp_error[2202746] tmp[2202775])
      (2202785 '.=' _args_foron_fn[2202757] _4_end[2202748] end[1081349])
      (2202789 '.=' _args_foron_fn[2202757] _5_hints[2202750] hints[1081337])
      (2202793 '.=' _args_foron_fn[2202757] _6_rvfDerefTmp[2202752] local_style[1081351])
      ref tmp[2202797]:channel(false,dynamic,false)[1080871] "temp"
      (2202801 'move' tmp[2202797](2202799 'set reference' this[1081323]))
      (2202803 '.=' _args_foron_fn[2202757] _7_this[2202754] tmp[2202797])
      val _args_vforon_fn[2202807]:c_void_ptr[149] "temp"
      (2202811 'move' _args_vforon_fn[2202807](2202809 'cast_to_void_star' _args_foron_fn[2202757]))
      val _args_sizeon_fn[2202813]:int(64)[13] "temp"
      (2202817 'move' _args_sizeon_fn[2202813](2202815 'sizeof_bundle' _class_localson_fn[2202737]))
      on(2202897 call wrapon_fn[2202819] call_tmp[1081382] _args_vforon_fn[2202807] _args_sizeon_fn[2202813] _args_foron_fn[2202757])
    }
    label _endinit[1081538]
    (1921571 '=' error[1081333] _formal_tmp_error[1081528])
    (1081525 return _void[55])
  }
  function channel(false,dynamic,true)[985816].deinit[1611203](ref arg this[1611209]:channel(false,dynamic,true)[985816]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2349532]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349534 'move' call_tmp[2349532](2349536 '.' this[1611209] home[985804]))
    const-val call_tmp[1611225]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284403]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284405 'move' coerce_tmp[2284403](2284407 '.v' call_tmp[2349532] _instance[89978]))
    val coerce_tmp[2284410]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284412 'move' coerce_tmp[2284410](2284414 'cast' object[22] coerce_tmp[2284403]))
    const-val call_tmp[2284417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284419 'move' call_tmp[2284417](2284421 'ptr_eq' coerce_tmp[2284410] nil[44]))
    if call_tmp[2284417]
    {
      (2284427 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1611227 'move' call_tmp[1611225](1611229 '_wide_get_locale' coerce_tmp[2284403]))
    val isdirect[2210737]:bool[10] "temp"
    (2210742 'move' isdirect[2210737](2210739 call chpl_doDirectExecuteOn[187469] call_tmp[1611225]))
    if isdirect[2210737]
    {
      (2210746 call on_fn[1611238] this[1611209])
    }
    {
      val _args_foron_fn[2210761]:_class_localson_fn[2210753] "temp"
      (2210765 'move' _args_foron_fn[2210761](2210763 'stack allocate class' _class_localson_fn[2210753]))
      (2210767 '.=' _args_foron_fn[2210761] _0_tmp[2210756] call_tmp[1611225])
      ref tmp[2210771]:channel(false,dynamic,true)[985816] "temp"
      (2210775 'move' tmp[2210771](2210773 'set reference' this[1611209]))
      (2210777 '.=' _args_foron_fn[2210761] _1_this[2210758] tmp[2210771])
      val _args_vforon_fn[2210781]:c_void_ptr[149] "temp"
      (2210785 'move' _args_vforon_fn[2210781](2210783 'cast_to_void_star' _args_foron_fn[2210761]))
      val _args_sizeon_fn[2210787]:int(64)[13] "temp"
      (2210791 'move' _args_sizeon_fn[2210787](2210789 'sizeof_bundle' _class_localson_fn[2210753]))
      on(2210823 call wrapon_fn[2210793] call_tmp[1611225] _args_vforon_fn[2210781] _args_sizeon_fn[2210787] _args_foron_fn[2210761])
    }
    label _enddeinit[1891694]
    const-ref _field_destructor_tmp_[1891692]:locale[28] "temp"
    (1891699 'move' _field_destructor_tmp_[1891692](1891696 '.' this[1611209] _readWriteThisFromLocale[985813]))
    (1891701 call deinit[90188] _field_destructor_tmp_[1891692])
    const-ref _field_destructor_tmp_[1891704]:locale[28] "temp"
    (1891709 'move' _field_destructor_tmp_[1891704](1891706 '.' this[1611209] home[985804]))
    (1891711 call deinit[90188] _field_destructor_tmp_[1891704])
    (1611272 return _void[55])
  }
  function channel(true,dynamic,true)[1022014].deinit[1674182](ref arg this[1674188]:channel(true,dynamic,true)[1022014]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2350623]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350625 'move' call_tmp[2350623](2350627 '.' this[1674188] home[1022002]))
    const-val call_tmp[1674204]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284433]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284435 'move' coerce_tmp[2284433](2284437 '.v' call_tmp[2350623] _instance[89978]))
    val coerce_tmp[2284440]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284442 'move' coerce_tmp[2284440](2284444 'cast' object[22] coerce_tmp[2284433]))
    const-val call_tmp[2284447]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284449 'move' call_tmp[2284447](2284451 'ptr_eq' coerce_tmp[2284440] nil[44]))
    if call_tmp[2284447]
    {
      (2284457 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1674206 'move' call_tmp[1674204](1674208 '_wide_get_locale' coerce_tmp[2284433]))
    val isdirect[2212528]:bool[10] "temp"
    (2212533 'move' isdirect[2212528](2212530 call chpl_doDirectExecuteOn[187469] call_tmp[1674204]))
    if isdirect[2212528]
    {
      (2212537 call on_fn[1674217] this[1674188])
    }
    {
      val _args_foron_fn[2212552]:_class_localson_fn[2212544] "temp"
      (2212556 'move' _args_foron_fn[2212552](2212554 'stack allocate class' _class_localson_fn[2212544]))
      (2212558 '.=' _args_foron_fn[2212552] _0_tmp[2212547] call_tmp[1674204])
      ref tmp[2212562]:channel(true,dynamic,true)[1022014] "temp"
      (2212566 'move' tmp[2212562](2212564 'set reference' this[1674188]))
      (2212568 '.=' _args_foron_fn[2212552] _1_this[2212549] tmp[2212562])
      val _args_vforon_fn[2212572]:c_void_ptr[149] "temp"
      (2212576 'move' _args_vforon_fn[2212572](2212574 'cast_to_void_star' _args_foron_fn[2212552]))
      val _args_sizeon_fn[2212578]:int(64)[13] "temp"
      (2212582 'move' _args_sizeon_fn[2212578](2212580 'sizeof_bundle' _class_localson_fn[2212544]))
      on(2212614 call wrapon_fn[2212584] call_tmp[1674204] _args_vforon_fn[2212572] _args_sizeon_fn[2212578] _args_foron_fn[2212552])
    }
    label _enddeinit[1891716]
    const-ref _field_destructor_tmp_[1891714]:locale[28] "temp"
    (1891721 'move' _field_destructor_tmp_[1891714](1891718 '.' this[1674188] _readWriteThisFromLocale[1022011]))
    (1891723 call deinit[90188] _field_destructor_tmp_[1891714])
    const-ref _field_destructor_tmp_[1891726]:locale[28] "temp"
    (1891731 'move' _field_destructor_tmp_[1891726](1891728 '.' this[1674188] home[1022002]))
    (1891733 call deinit[90188] _field_destructor_tmp_[1891726])
    (1674251 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].deinit[1676346](ref arg this[1676352]:channel(true,dynamic,false)[1061136]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2387920]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387922 'move' call_tmp[2387920](2387924 '.' this[1676352] home[1061124]))
    const-val call_tmp[1676368]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284463]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284465 'move' coerce_tmp[2284463](2284467 '.v' call_tmp[2387920] _instance[89978]))
    val coerce_tmp[2284470]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284472 'move' coerce_tmp[2284470](2284474 'cast' object[22] coerce_tmp[2284463]))
    const-val call_tmp[2284477]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284479 'move' call_tmp[2284477](2284481 'ptr_eq' coerce_tmp[2284470] nil[44]))
    if call_tmp[2284477]
    {
      (2284487 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1676370 'move' call_tmp[1676368](1676372 '_wide_get_locale' coerce_tmp[2284463]))
    val isdirect[2212704]:bool[10] "temp"
    (2212709 'move' isdirect[2212704](2212706 call chpl_doDirectExecuteOn[187469] call_tmp[1676368]))
    if isdirect[2212704]
    {
      (2212713 call on_fn[1676381] this[1676352])
    }
    {
      val _args_foron_fn[2212728]:_class_localson_fn[2212720] "temp"
      (2212732 'move' _args_foron_fn[2212728](2212730 'stack allocate class' _class_localson_fn[2212720]))
      (2212734 '.=' _args_foron_fn[2212728] _0_tmp[2212723] call_tmp[1676368])
      ref tmp[2212738]:channel(true,dynamic,false)[1061136] "temp"
      (2212742 'move' tmp[2212738](2212740 'set reference' this[1676352]))
      (2212744 '.=' _args_foron_fn[2212728] _1_this[2212725] tmp[2212738])
      val _args_vforon_fn[2212748]:c_void_ptr[149] "temp"
      (2212752 'move' _args_vforon_fn[2212748](2212750 'cast_to_void_star' _args_foron_fn[2212728]))
      val _args_sizeon_fn[2212754]:int(64)[13] "temp"
      (2212758 'move' _args_sizeon_fn[2212754](2212756 'sizeof_bundle' _class_localson_fn[2212720]))
      on(2212790 call wrapon_fn[2212760] call_tmp[1676368] _args_vforon_fn[2212748] _args_sizeon_fn[2212754] _args_foron_fn[2212728])
    }
    label _enddeinit[1891750]
    const-ref _field_destructor_tmp_[1891748]:locale[28] "temp"
    (1891755 'move' _field_destructor_tmp_[1891748](1891752 '.' this[1676352] _readWriteThisFromLocale[1061133]))
    (1891757 call deinit[90188] _field_destructor_tmp_[1891748])
    const-ref _field_destructor_tmp_[1891760]:locale[28] "temp"
    (1891765 'move' _field_destructor_tmp_[1891760](1891762 '.' this[1676352] home[1061124]))
    (1891767 call deinit[90188] _field_destructor_tmp_[1891760])
    (1676415 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].deinit[1680600](ref arg this[1680606]:channel(false,dynamic,false)[1080871]) : void[4] "destructor" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    ref call_tmp[2394389]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394391 'move' call_tmp[2394389](2394393 '.' this[1680606] home[1080859]))
    const-val call_tmp[1680622]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284493]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284495 'move' coerce_tmp[2284493](2284497 '.v' call_tmp[2394389] _instance[89978]))
    val coerce_tmp[2284500]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284502 'move' coerce_tmp[2284500](2284504 'cast' object[22] coerce_tmp[2284493]))
    const-val call_tmp[2284507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284509 'move' call_tmp[2284507](2284511 'ptr_eq' coerce_tmp[2284500] nil[44]))
    if call_tmp[2284507]
    {
      (2284517 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1680624 'move' call_tmp[1680622](1680626 '_wide_get_locale' coerce_tmp[2284493]))
    val isdirect[2212965]:bool[10] "temp"
    (2212970 'move' isdirect[2212965](2212967 call chpl_doDirectExecuteOn[187469] call_tmp[1680622]))
    if isdirect[2212965]
    {
      (2212974 call on_fn[1680635] this[1680606])
    }
    {
      val _args_foron_fn[2212989]:_class_localson_fn[2212981] "temp"
      (2212993 'move' _args_foron_fn[2212989](2212991 'stack allocate class' _class_localson_fn[2212981]))
      (2212995 '.=' _args_foron_fn[2212989] _0_tmp[2212984] call_tmp[1680622])
      ref tmp[2212999]:channel(false,dynamic,false)[1080871] "temp"
      (2213003 'move' tmp[2212999](2213001 'set reference' this[1680606]))
      (2213005 '.=' _args_foron_fn[2212989] _1_this[2212986] tmp[2212999])
      val _args_vforon_fn[2213009]:c_void_ptr[149] "temp"
      (2213013 'move' _args_vforon_fn[2213009](2213011 'cast_to_void_star' _args_foron_fn[2212989]))
      val _args_sizeon_fn[2213015]:int(64)[13] "temp"
      (2213019 'move' _args_sizeon_fn[2213015](2213017 'sizeof_bundle' _class_localson_fn[2212981]))
      on(2213051 call wrapon_fn[2213021] call_tmp[1680622] _args_vforon_fn[2213009] _args_sizeon_fn[2213015] _args_foron_fn[2212989])
    }
    label _enddeinit[1891772]
    const-ref _field_destructor_tmp_[1891770]:locale[28] "temp"
    (1891777 'move' _field_destructor_tmp_[1891770](1891774 '.' this[1680606] _readWriteThisFromLocale[1080868]))
    (1891779 call deinit[90188] _field_destructor_tmp_[1891770])
    const-ref _field_destructor_tmp_[1891782]:locale[28] "temp"
    (1891787 'move' _field_destructor_tmp_[1891782](1891784 '.' this[1680606] home[1080859]))
    (1891789 call deinit[90188] _field_destructor_tmp_[1891782])
    (1680669 return _void[55])
  }
  function ioNewline[238789].init[893858](ref arg this[893861]:ioNewline[238789], in arg skipWhitespaceOnly[893864]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "suppress lvalue error"
  {
    (893880 '.=' this[893861] skipWhitespaceOnly[238770] skipWhitespaceOnly[893864])
    (893884 return _void[55])
  }
  type ioNewline[238789] val skipWhitespaceOnly[238770]:bool[10]
  function ioLiteral[238841].init[894987](ref arg this[894990]:ioLiteral[238841], const  ref arg val[894993]:string[26], in arg ignoreWhiteSpace[895006]:bool[10]) : void[4] "compiler generated" "last resort" "method" "primary method" "resolved" "fn synchronization free" "suppress lvalue error"
  {
    val _formal_tmp_val[1565371]:string[26] "dead at end of block" "no auto destroy" "no copy" "temp"
    (1565374 'move' _formal_tmp_val[1565371] val[894993])
    (895022 '.=' this[894990] val[238816] _formal_tmp_val[1565371])
    (895025 '.=' this[894990] ignoreWhiteSpace[238822] ignoreWhiteSpace[895006])
    (895029 return _void[55])
  }
  type ioLiteral[238841] val val[238816]:string[26] val ignoreWhiteSpace[238822]:bool[10]
  function channel(true,dynamic,false)[1061136]._ch_ioerror[1063054](const  ref arg this[1063060]:channel(true,dynamic,false)[1061136], const in arg error[1063062]:syserr[223672], const  ref arg msg[1063064]:string[26], ref arg error_out[1885340]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1063070]:string[26] "dead at end of block" "insert auto destroy"
    (1063072 'move' path[1063070] "unknown")
    val offset[1063091]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063093 'move' offset[1063091] -1)
    ref call_tmp[2387810]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387812 'move' call_tmp[2387810](2387814 '.' this[1063060] home[1061124]))
    const-val call_tmp[1063108]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283485]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283487 'move' coerce_tmp[2283485](2283489 '.v' call_tmp[2387810] _instance[89978]))
    val coerce_tmp[2283492]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283494 'move' coerce_tmp[2283492](2283496 'cast' object[22] coerce_tmp[2283485]))
    const-val call_tmp[2283499]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283501 'move' call_tmp[2283499](2283503 'ptr_eq' coerce_tmp[2283492] nil[44]))
    if call_tmp[2283499]
    {
      (2283509 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1063110 'move' call_tmp[1063108](1063112 '_wide_get_locale' coerce_tmp[2283485]))
    val error[1885345]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885347 'move' error[1885345] nil[44])
    val isdirect[2201963]:bool[10] "temp"
    (2201968 'move' isdirect[2201963](2201965 call chpl_doDirectExecuteOn[187469] call_tmp[1063108]))
    if isdirect[2201963]
    {
      (2201972 call on_fn[1063121] this[1063060] path[1063070] offset[1063091] error[1885345])
    }
    {
      val _args_foron_fn[2201996]:_class_localson_fn[2201982] "temp"
      (2202000 'move' _args_foron_fn[2201996](2201998 'stack allocate class' _class_localson_fn[2201982]))
      (2202002 '.=' _args_foron_fn[2201996] _0_tmp[2201985] call_tmp[1063108])
      ref tmp[2202006]:channel(true,dynamic,false)[1061136] "temp"
      (2202010 'move' tmp[2202006](2202008 'set reference' this[1063060]))
      (2202012 '.=' _args_foron_fn[2201996] _1_this[2201987] tmp[2202006])
      ref tmp[2202016]:string[26] "temp"
      (2202020 'move' tmp[2202016](2202018 'set reference' path[1063070]))
      (2202022 '.=' _args_foron_fn[2201996] _2_path[2201989] tmp[2202016])
      ref tmp[2202026]:int(64)[13] "temp"
      (2202030 'move' tmp[2202026](2202028 'set reference' offset[1063091]))
      (2202032 '.=' _args_foron_fn[2201996] _3_offset[2201991] tmp[2202026])
      ref tmp[2202036]:Error[167984] "temp"
      (2202040 'move' tmp[2202036](2202038 'set reference' error[1885345]))
      (2202042 '.=' _args_foron_fn[2201996] _4_error[2201993] tmp[2202036])
      val _args_vforon_fn[2202046]:c_void_ptr[149] "temp"
      (2202050 'move' _args_vforon_fn[2202046](2202048 'cast_to_void_star' _args_foron_fn[2201996]))
      val _args_sizeon_fn[2202052]:int(64)[13] "temp"
      (2202056 'move' _args_sizeon_fn[2202052](2202054 'sizeof_bundle' _class_localson_fn[2201982]))
      on(2202112 call wrapon_fn[2202058] call_tmp[1063108] _args_vforon_fn[2202046] _args_sizeon_fn[2202052] _args_foron_fn[2201996])
    }
    val errorExists[2222672]:bool[10] "temp"
    (2222677 'move' errorExists[2222672](2222674 '!=' error[1885345] nil[44]))
    if errorExists[2222672]
    {
      (1885351 '=' error_out[1885340] error[1885345])
      ref i_x[2247269]:string[26] "temp"
      (2247273 'move' i_x[2247269](2247271 'set reference' path[1063070]))
      (2247277 call deinit[30834] i_x[2247269])
      gotoErrorHandlingReturn _end_ch_ioerror[1885342] _end_ch_ioerror[1885342]
    }
    val error[1885359]:Error[167984] "error variable" "temp"
    (1885368 'move' error[1885359] nil[44])
    (1063244 call ioerror[266229] error[1063062] msg[1063064] path[1063070] offset[1063091] error[1885359])
    val errorExists[2222680]:bool[10] "temp"
    (2222685 'move' errorExists[2222680](2222682 '!=' error[1885359] nil[44]))
    if errorExists[2222680]
    {
      gotoErrorHandling handler[1885360] handler[1885360]
    }
    label handler[1885360]
    val errorExists[2222688]:bool[10] "temp"
    (2222693 'move' errorExists[2222688](2222690 '!=' error[1885359] nil[44]))
    if errorExists[2222688]
    {
      (1885375 '=' error_out[1885340] error[1885359])
      ref i_x[2247281]:string[26] "temp"
      (2247285 'move' i_x[2247281](2247283 'set reference' path[1063070]))
      (2247289 call deinit[30834] i_x[2247281])
      gotoErrorHandlingReturn _end_ch_ioerror[1885342] _end_ch_ioerror[1885342]
    }
    ref i_x[2247293]:string[26] "temp"
    (2247297 'move' i_x[2247293](2247295 'set reference' path[1063070]))
    (2247301 call deinit[30834] i_x[2247293])
    label _end_ch_ioerror[1885342]
    (1063253 return _void[55])
  }
  function channel(false,dynamic,false)[1080871]._ch_ioerror[1082738](const  ref arg this[1082744]:channel(false,dynamic,false)[1080871], const in arg error[1082746]:syserr[223672], const  ref arg msg[1082748]:string[26], ref arg error_out[1886136]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1082754]:string[26] "dead at end of block" "insert auto destroy"
    (1082756 'move' path[1082754] "unknown")
    val offset[1082775]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1082777 'move' offset[1082775] -1)
    ref call_tmp[2394369]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394371 'move' call_tmp[2394369](2394373 '.' this[1082744] home[1080859]))
    const-val call_tmp[1082792]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283755]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283757 'move' coerce_tmp[2283755](2283759 '.v' call_tmp[2394369] _instance[89978]))
    val coerce_tmp[2283762]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283764 'move' coerce_tmp[2283762](2283766 'cast' object[22] coerce_tmp[2283755]))
    const-val call_tmp[2283769]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283771 'move' call_tmp[2283769](2283773 'ptr_eq' coerce_tmp[2283762] nil[44]))
    if call_tmp[2283769]
    {
      (2283779 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1082794 'move' call_tmp[1082792](1082796 '_wide_get_locale' coerce_tmp[2283755]))
    val error[1886141]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1886143 'move' error[1886141] nil[44])
    val rvfDerefTmp[2196189]:channel(false,dynamic,false)[1080871] "temp"
    (2196193 'move' rvfDerefTmp[2196189](2196191 'deref' this[1082744]))
    val isdirect[2203184]:bool[10] "temp"
    (2203189 'move' isdirect[2203184](2203186 call chpl_doDirectExecuteOn[187469] call_tmp[1082792]))
    if isdirect[2203184]
    {
      (2203193 call on_fn[1082805] rvfDerefTmp[2196189] path[1082754] offset[1082775] error[1886141])
    }
    {
      val _args_foron_fn[2203217]:_class_localson_fn[2203203] "temp"
      (2203221 'move' _args_foron_fn[2203217](2203219 'stack allocate class' _class_localson_fn[2203203]))
      (2203223 '.=' _args_foron_fn[2203217] _0_tmp[2203206] call_tmp[1082792])
      (2203227 '.=' _args_foron_fn[2203217] _1_rvfDerefTmp[2203208] rvfDerefTmp[2196189])
      ref tmp[2203231]:string[26] "temp"
      (2203235 'move' tmp[2203231](2203233 'set reference' path[1082754]))
      (2203237 '.=' _args_foron_fn[2203217] _2_path[2203210] tmp[2203231])
      ref tmp[2203241]:int(64)[13] "temp"
      (2203245 'move' tmp[2203241](2203243 'set reference' offset[1082775]))
      (2203247 '.=' _args_foron_fn[2203217] _3_offset[2203212] tmp[2203241])
      ref tmp[2203251]:Error[167984] "temp"
      (2203255 'move' tmp[2203251](2203253 'set reference' error[1886141]))
      (2203257 '.=' _args_foron_fn[2203217] _4_error[2203214] tmp[2203251])
      val _args_vforon_fn[2203261]:c_void_ptr[149] "temp"
      (2203265 'move' _args_vforon_fn[2203261](2203263 'cast_to_void_star' _args_foron_fn[2203217]))
      val _args_sizeon_fn[2203267]:int(64)[13] "temp"
      (2203271 'move' _args_sizeon_fn[2203267](2203269 'sizeof_bundle' _class_localson_fn[2203203]))
      on(2203327 call wrapon_fn[2203273] call_tmp[1082792] _args_vforon_fn[2203261] _args_sizeon_fn[2203267] _args_foron_fn[2203217])
    }
    val errorExists[2223032]:bool[10] "temp"
    (2223037 'move' errorExists[2223032](2223034 '!=' error[1886141] nil[44]))
    if errorExists[2223032]
    {
      (1886147 '=' error_out[1886136] error[1886141])
      ref i_x[2247509]:string[26] "temp"
      (2247513 'move' i_x[2247509](2247511 'set reference' path[1082754]))
      (2247517 call deinit[30834] i_x[2247509])
      gotoErrorHandlingReturn _end_ch_ioerror[1886138] _end_ch_ioerror[1886138]
    }
    val error[1886155]:Error[167984] "error variable" "temp"
    (1886164 'move' error[1886155] nil[44])
    (1082928 call ioerror[266229] error[1082746] msg[1082748] path[1082754] offset[1082775] error[1886155])
    val errorExists[2223040]:bool[10] "temp"
    (2223045 'move' errorExists[2223040](2223042 '!=' error[1886155] nil[44]))
    if errorExists[2223040]
    {
      gotoErrorHandling handler[1886156] handler[1886156]
    }
    label handler[1886156]
    val errorExists[2223048]:bool[10] "temp"
    (2223053 'move' errorExists[2223048](2223050 '!=' error[1886155] nil[44]))
    if errorExists[2223048]
    {
      (1886171 '=' error_out[1886136] error[1886155])
      ref i_x[2247521]:string[26] "temp"
      (2247525 'move' i_x[2247521](2247523 'set reference' path[1082754]))
      (2247529 call deinit[30834] i_x[2247521])
      gotoErrorHandlingReturn _end_ch_ioerror[1886138] _end_ch_ioerror[1886138]
    }
    ref i_x[2247533]:string[26] "temp"
    (2247537 'move' i_x[2247533](2247535 'set reference' path[1082754]))
    (2247541 call deinit[30834] i_x[2247533])
    label _end_ch_ioerror[1886138]
    (1082937 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._ch_ioerror[1552948](const  ref arg this[1552954]:channel(true,dynamic,true)[1022014], const in arg error[1552956]:syserr[223672], const  ref arg msg[1552958]:string[26], ref arg error_out[1888054]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    val path[1552964]:string[26] "dead at end of block" "insert auto destroy"
    (1552966 'move' path[1552964] "unknown")
    val offset[1552985]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1552987 'move' offset[1552985] -1)
    ref call_tmp[2350593]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350595 'move' call_tmp[2350593](2350597 '.' this[1552954] home[1022002]))
    const-val call_tmp[1553002]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284163]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284165 'move' coerce_tmp[2284163](2284167 '.v' call_tmp[2350593] _instance[89978]))
    val coerce_tmp[2284170]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284172 'move' coerce_tmp[2284170](2284174 'cast' object[22] coerce_tmp[2284163]))
    const-val call_tmp[2284177]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284179 'move' call_tmp[2284177](2284181 'ptr_eq' coerce_tmp[2284170] nil[44]))
    if call_tmp[2284177]
    {
      (2284187 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1553004 'move' call_tmp[1553002](1553006 '_wide_get_locale' coerce_tmp[2284163]))
    val error[1888059]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888061 'move' error[1888059] nil[44])
    val rvfDerefTmp[2196754]:channel(true,dynamic,true)[1022014] "temp"
    (2196758 'move' rvfDerefTmp[2196754](2196756 'deref' this[1552954]))
    val isdirect[2208772]:bool[10] "temp"
    (2208777 'move' isdirect[2208772](2208774 call chpl_doDirectExecuteOn[187469] call_tmp[1553002]))
    if isdirect[2208772]
    {
      (2208781 call on_fn[1553015] rvfDerefTmp[2196754] path[1552964] offset[1552985] error[1888059])
    }
    {
      val _args_foron_fn[2208805]:_class_localson_fn[2208791] "temp"
      (2208809 'move' _args_foron_fn[2208805](2208807 'stack allocate class' _class_localson_fn[2208791]))
      (2208811 '.=' _args_foron_fn[2208805] _0_tmp[2208794] call_tmp[1553002])
      (2208815 '.=' _args_foron_fn[2208805] _1_rvfDerefTmp[2208796] rvfDerefTmp[2196754])
      ref tmp[2208819]:string[26] "temp"
      (2208823 'move' tmp[2208819](2208821 'set reference' path[1552964]))
      (2208825 '.=' _args_foron_fn[2208805] _2_path[2208798] tmp[2208819])
      ref tmp[2208829]:int(64)[13] "temp"
      (2208833 'move' tmp[2208829](2208831 'set reference' offset[1552985]))
      (2208835 '.=' _args_foron_fn[2208805] _3_offset[2208800] tmp[2208829])
      ref tmp[2208839]:Error[167984] "temp"
      (2208843 'move' tmp[2208839](2208841 'set reference' error[1888059]))
      (2208845 '.=' _args_foron_fn[2208805] _4_error[2208802] tmp[2208839])
      val _args_vforon_fn[2208849]:c_void_ptr[149] "temp"
      (2208853 'move' _args_vforon_fn[2208849](2208851 'cast_to_void_star' _args_foron_fn[2208805]))
      val _args_sizeon_fn[2208855]:int(64)[13] "temp"
      (2208859 'move' _args_sizeon_fn[2208855](2208857 'sizeof_bundle' _class_localson_fn[2208791]))
      on(2208915 call wrapon_fn[2208861] call_tmp[1553002] _args_vforon_fn[2208849] _args_sizeon_fn[2208855] _args_foron_fn[2208805])
    }
    val errorExists[2224016]:bool[10] "temp"
    (2224021 'move' errorExists[2224016](2224018 '!=' error[1888059] nil[44]))
    if errorExists[2224016]
    {
      (1888065 '=' error_out[1888054] error[1888059])
      ref i_x[2249309]:string[26] "temp"
      (2249313 'move' i_x[2249309](2249311 'set reference' path[1552964]))
      (2249317 call deinit[30834] i_x[2249309])
      gotoErrorHandlingReturn _end_ch_ioerror[1888056] _end_ch_ioerror[1888056]
    }
    val error[1888073]:Error[167984] "error variable" "temp"
    (1888082 'move' error[1888073] nil[44])
    (1553138 call ioerror[266229] error[1552956] msg[1552958] path[1552964] offset[1552985] error[1888073])
    val errorExists[2224024]:bool[10] "temp"
    (2224029 'move' errorExists[2224024](2224026 '!=' error[1888073] nil[44]))
    if errorExists[2224024]
    {
      gotoErrorHandling handler[1888074] handler[1888074]
    }
    label handler[1888074]
    val errorExists[2224032]:bool[10] "temp"
    (2224037 'move' errorExists[2224032](2224034 '!=' error[1888073] nil[44]))
    if errorExists[2224032]
    {
      (1888089 '=' error_out[1888054] error[1888073])
      ref i_x[2249321]:string[26] "temp"
      (2249325 'move' i_x[2249321](2249323 'set reference' path[1552964]))
      (2249329 call deinit[30834] i_x[2249321])
      gotoErrorHandlingReturn _end_ch_ioerror[1888056] _end_ch_ioerror[1888056]
    }
    ref i_x[2249333]:string[26] "temp"
    (2249337 'move' i_x[2249333](2249335 'set reference' path[1552964]))
    (2249341 call deinit[30834] i_x[2249333])
    label _end_ch_ioerror[1888056]
    (1553147 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].offset[1080337](const  ref arg this[1080343]:channel(true,dynamic,false)[1061136]) : int(64)[13] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1080349]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1080358]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1080488 'move' ret[1080358] 0)
    ref call_tmp[2387840]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387842 'move' call_tmp[2387840](2387844 '.' this[1080343] home[1061124]))
    const-val call_tmp[1080381]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283575]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283577 'move' coerce_tmp[2283575](2283579 '.v' call_tmp[2387840] _instance[89978]))
    val coerce_tmp[2283582]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283584 'move' coerce_tmp[2283582](2283586 'cast' object[22] coerce_tmp[2283575]))
    const-val call_tmp[2283589]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283591 'move' call_tmp[2283589](2283593 'ptr_eq' coerce_tmp[2283582] nil[44]))
    if call_tmp[2283589]
    {
      (2283599 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1080383 'move' call_tmp[1080381](1080385 '_wide_get_locale' coerce_tmp[2283575]))
    val rvfDerefTmp[2196070]:channel(true,dynamic,false)[1061136] "temp"
    (2196074 'move' rvfDerefTmp[2196070](2196072 'deref' this[1080343]))
    val isdirect[2202401]:bool[10] "temp"
    (2202406 'move' isdirect[2202401](2202403 call chpl_doDirectExecuteOn[187469] call_tmp[1080381]))
    if isdirect[2202401]
    {
      (2202410 call on_fn[1080394] rvfDerefTmp[2196070] ret[1080358])
    }
    {
      val _args_foron_fn[2202428]:_class_localson_fn[2202418] "temp"
      (2202432 'move' _args_foron_fn[2202428](2202430 'stack allocate class' _class_localson_fn[2202418]))
      (2202434 '.=' _args_foron_fn[2202428] _0_tmp[2202421] call_tmp[1080381])
      (2202438 '.=' _args_foron_fn[2202428] _1_rvfDerefTmp[2202423] rvfDerefTmp[2196070])
      ref tmp[2202442]:int(64)[13] "temp"
      (2202446 'move' tmp[2202442](2202444 'set reference' ret[1080358]))
      (2202448 '.=' _args_foron_fn[2202428] _2_ret[2202425] tmp[2202442])
      val _args_vforon_fn[2202452]:c_void_ptr[149] "temp"
      (2202456 'move' _args_vforon_fn[2202452](2202454 'cast_to_void_star' _args_foron_fn[2202428]))
      val _args_sizeon_fn[2202458]:int(64)[13] "temp"
      (2202462 'move' _args_sizeon_fn[2202458](2202460 'sizeof_bundle' _class_localson_fn[2202418]))
      on(2202502 call wrapon_fn[2202464] call_tmp[1080381] _args_vforon_fn[2202452] _args_sizeon_fn[2202458] _args_foron_fn[2202428])
    }
    (1080485 'move' ret[1080349] ret[1080358])
    label _end_offset[1080453]
    (1080455 return ret[1080349])
  }
  function file[235668].reader[1016750](const  ref arg this[1016756]:file[235668], const in arg start[1016776]:int(64)[13], const in arg end[1016793]:int(64)[13], const in arg hints[1016799]:int(32)[95], const  ref arg style[1016806]:iostyle[231932], ref arg error_out[1884640]:Error[167984], ref arg _retArg[1908426]:channel(false,dynamic,true)[985816]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1016814]:channel(false,dynamic,true)[985816] "dead after last mention" "RVV" "temp"
    val ret[1016833]:channel(false,dynamic,true)[985816] "dead at end of block" "insert auto destroy"
    (1021930 call init[1018060] ret[1016833])
    val err[1016854]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329128]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329130 'move' call_tmp[2329128](2329133 call qio_int_to_err[223722] 0))
    (1016856 'move' err[1016854] call_tmp[2329128])
    ref call_tmp[2338858]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338860 'move' call_tmp[2338858](2338862 '.' this[1016756] home[235650]))
    const-val call_tmp[1016871]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283035]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283037 'move' coerce_tmp[2283035](2283039 '.v' call_tmp[2338858] _instance[89978]))
    val coerce_tmp[2283042]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283044 'move' coerce_tmp[2283042](2283046 'cast' object[22] coerce_tmp[2283035]))
    const-val call_tmp[2283049]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283051 'move' call_tmp[2283049](2283053 'ptr_eq' coerce_tmp[2283042] nil[44]))
    if call_tmp[2283049]
    {
      (2283059 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1016873 'move' call_tmp[1016871](1016875 '_wide_get_locale' coerce_tmp[2283035]))
    val error[1884643]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1884645 'move' error[1884643] nil[44])
    val rvfDerefTmp[2195735]:file[235668] "temp"
    (2195739 'move' rvfDerefTmp[2195735](2195737 'deref' this[1016756]))
    val rvfDerefTmp[2195756]:iostyle[231932] "temp"
    (2195760 'move' rvfDerefTmp[2195756](2195758 'deref' style[1016806]))
    val isdirect[2199890]:bool[10] "temp"
    (2199895 'move' isdirect[2199890](2199892 call chpl_doDirectExecuteOn[187469] call_tmp[1016871]))
    if isdirect[2199890]
    {
      (2199899 call on_fn[1016884] rvfDerefTmp[2195735] ret[1016833] hints[1016799] err[1016854] start[1016776] end[1016793] rvfDerefTmp[2195756] error[1884643])
    }
    {
      val _args_foron_fn[2199935]:_class_localson_fn[2199913] "temp"
      (2199939 'move' _args_foron_fn[2199935](2199937 'stack allocate class' _class_localson_fn[2199913]))
      (2199941 '.=' _args_foron_fn[2199935] _0_tmp[2199916] call_tmp[1016871])
      (2199945 '.=' _args_foron_fn[2199935] _1_rvfDerefTmp[2199918] rvfDerefTmp[2195735])
      ref tmp[2199949]:channel(false,dynamic,true)[985816] "temp"
      (2199953 'move' tmp[2199949](2199951 'set reference' ret[1016833]))
      (2199955 '.=' _args_foron_fn[2199935] _2_ret[2199920] tmp[2199949])
      (2199959 '.=' _args_foron_fn[2199935] _3_hints[2199922] hints[1016799])
      ref tmp[2199963]:syserr[223672] "temp"
      (2199967 'move' tmp[2199963](2199965 'set reference' err[1016854]))
      (2199969 '.=' _args_foron_fn[2199935] _4_err[2199924] tmp[2199963])
      (2199973 '.=' _args_foron_fn[2199935] _5_start[2199926] start[1016776])
      (2199977 '.=' _args_foron_fn[2199935] _6_end[2199928] end[1016793])
      (2199981 '.=' _args_foron_fn[2199935] _7_rvfDerefTmp[2199930] rvfDerefTmp[2195756])
      ref tmp[2199985]:Error[167984] "temp"
      (2199989 'move' tmp[2199985](2199987 'set reference' error[1884643]))
      (2199991 '.=' _args_foron_fn[2199935] _8_error[2199932] tmp[2199985])
      val _args_vforon_fn[2199995]:c_void_ptr[149] "temp"
      (2199999 'move' _args_vforon_fn[2199995](2199997 'cast_to_void_star' _args_foron_fn[2199935]))
      val _args_sizeon_fn[2200001]:int(64)[13] "temp"
      (2200005 'move' _args_sizeon_fn[2200001](2200003 'sizeof_bundle' _class_localson_fn[2199913]))
      on(2200093 call wrapon_fn[2200007] call_tmp[1016871] _args_vforon_fn[2199995] _args_sizeon_fn[2200001] _args_foron_fn[2199935])
    }
    val errorExists[2222336]:bool[10] "temp"
    (2222341 'move' errorExists[2222336](2222338 '!=' error[1884643] nil[44]))
    if errorExists[2222336]
    {
      (1884649 '=' error_out[1884640] error[1884643])
      ref i_x[2514422]:channel(false,dynamic,true)[985816] "temp"
      (2514426 'move' i_x[2514422](2514424 'set reference' ret[1016833]))
      (2514430 call deinit[1611203] i_x[2514422])
      gotoErrorHandlingReturn _end_reader[1016969] _end_reader[1016969]
    }
    const-val call_tmp[2328510]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328512 'move' call_tmp[2328510](2328515 call qio_err_iserr[223734] err[1016854]))
    const-val call_tmp[2328517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328519 'move' call_tmp[2328517](2328521 '!=' call_tmp[2328510] 0))
    if call_tmp[2328517]
    {
      val error[1884657]:Error[167984] "error variable" "temp"
      (1884666 'move' error[1884657] nil[44])
      const-val call_tmp[1016933]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907260]:string[26] "temp"
      (1016941 call tryGetPath[236452] this[1016756] ret_tmp[1907260])
      (1907263 'move' call_tmp[1016933] ret_tmp[1907260])
      (1016943 call ioerror[266338] err[1016854] "in file.reader" call_tmp[1016933] error[1884657])
      val errorExists[2222344]:bool[10] "temp"
      (2222349 'move' errorExists[2222344](2222346 '!=' error[1884657] nil[44]))
      if errorExists[2222344]
      {
        ref i_x[2246825]:string[26] "temp"
        (2246829 'move' i_x[2246825](2246827 'set reference' call_tmp[1016933]))
        (2246833 call deinit[30834] i_x[2246825])
        gotoErrorHandling handler[1884658] handler[1884658]
      }
      ref i_x[2246837]:string[26] "temp"
      (2246841 'move' i_x[2246837](2246839 'set reference' call_tmp[1016933]))
      (2246845 call deinit[30834] i_x[2246837])
      label handler[1884658]
      val errorExists[2222352]:bool[10] "temp"
      (2222357 'move' errorExists[2222352](2222354 '!=' error[1884657] nil[44]))
      if errorExists[2222352]
      {
        (1884673 '=' error_out[1884640] error[1884657])
        ref i_x[2514434]:channel(false,dynamic,true)[985816] "temp"
        (2514438 'move' i_x[2514434](2514436 'set reference' ret[1016833]))
        (2514442 call deinit[1611203] i_x[2514434])
        gotoErrorHandlingReturn _end_reader[1016969] _end_reader[1016969]
      }
    }
    (1021926 'move' ret[1016814] ret[1016833])
    label _end_reader[1016969]
    (1908428 '=' _retArg[1908426] ret[1016814])
    (1908430 return _void[55])
  }
  function file[235668].reader[1080777](const  ref arg this[1080783]:file[235668], const in arg start[1080803]:int(64)[13], const in arg end[1080820]:int(64)[13], const in arg hints[1080826]:int(32)[95], const  ref arg style[1080833]:iostyle[231932], ref arg error_out[1885983]:Error[167984], ref arg _retArg[1909378]:channel(false,dynamic,false)[1080871]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1080841]:channel(false,dynamic,false)[1080871] "dead after last mention" "RVV" "temp"
    val ret[1080895]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
    (1082272 call init[1081541] ret[1080895])
    val err[1080916]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329280]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329282 'move' call_tmp[2329280](2329285 call qio_int_to_err[223722] 0))
    (1080918 'move' err[1080916] call_tmp[2329280])
    ref call_tmp[2338970]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338972 'move' call_tmp[2338970](2338974 '.' this[1080783] home[235650]))
    const-val call_tmp[1080933]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283605]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283607 'move' coerce_tmp[2283605](2283609 '.v' call_tmp[2338970] _instance[89978]))
    val coerce_tmp[2283612]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283614 'move' coerce_tmp[2283612](2283616 'cast' object[22] coerce_tmp[2283605]))
    const-val call_tmp[2283619]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283621 'move' call_tmp[2283619](2283623 'ptr_eq' coerce_tmp[2283612] nil[44]))
    if call_tmp[2283619]
    {
      (2283629 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1080935 'move' call_tmp[1080933](1080937 '_wide_get_locale' coerce_tmp[2283605]))
    val error[1885986]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885988 'move' error[1885986] nil[44])
    val rvfDerefTmp[2196098]:iostyle[231932] "temp"
    (2196102 'move' rvfDerefTmp[2196098](2196100 'deref' style[1080833]))
    val rvfDerefTmp[2196106]:file[235668] "temp"
    (2196110 'move' rvfDerefTmp[2196106](2196108 'deref' this[1080783]))
    val isdirect[2202507]:bool[10] "temp"
    (2202512 'move' isdirect[2202507](2202509 call chpl_doDirectExecuteOn[187469] call_tmp[1080933]))
    if isdirect[2202507]
    {
      (2202516 call on_fn[1080946] rvfDerefTmp[2196098] end[1080820] rvfDerefTmp[2196106] err[1080916] hints[1080826] start[1080803] ret[1080895] error[1885986])
    }
    {
      val _args_foron_fn[2202552]:_class_localson_fn[2202530] "temp"
      (2202556 'move' _args_foron_fn[2202552](2202554 'stack allocate class' _class_localson_fn[2202530]))
      (2202558 '.=' _args_foron_fn[2202552] _0_tmp[2202533] call_tmp[1080933])
      (2202562 '.=' _args_foron_fn[2202552] _1_rvfDerefTmp[2202535] rvfDerefTmp[2196098])
      (2202566 '.=' _args_foron_fn[2202552] _2_end[2202537] end[1080820])
      (2202570 '.=' _args_foron_fn[2202552] _3_rvfDerefTmp[2202539] rvfDerefTmp[2196106])
      ref tmp[2202574]:syserr[223672] "temp"
      (2202578 'move' tmp[2202574](2202576 'set reference' err[1080916]))
      (2202580 '.=' _args_foron_fn[2202552] _4_err[2202541] tmp[2202574])
      (2202584 '.=' _args_foron_fn[2202552] _5_hints[2202543] hints[1080826])
      (2202588 '.=' _args_foron_fn[2202552] _6_start[2202545] start[1080803])
      ref tmp[2202592]:channel(false,dynamic,false)[1080871] "temp"
      (2202596 'move' tmp[2202592](2202594 'set reference' ret[1080895]))
      (2202598 '.=' _args_foron_fn[2202552] _7_ret[2202547] tmp[2202592])
      ref tmp[2202602]:Error[167984] "temp"
      (2202606 'move' tmp[2202602](2202604 'set reference' error[1885986]))
      (2202608 '.=' _args_foron_fn[2202552] _8_error[2202549] tmp[2202602])
      val _args_vforon_fn[2202612]:c_void_ptr[149] "temp"
      (2202616 'move' _args_vforon_fn[2202612](2202614 'cast_to_void_star' _args_foron_fn[2202552]))
      val _args_sizeon_fn[2202618]:int(64)[13] "temp"
      (2202622 'move' _args_sizeon_fn[2202618](2202620 'sizeof_bundle' _class_localson_fn[2202530]))
      on(2202710 call wrapon_fn[2202624] call_tmp[1080933] _args_vforon_fn[2202612] _args_sizeon_fn[2202618] _args_foron_fn[2202552])
    }
    val errorExists[2222968]:bool[10] "temp"
    (2222973 'move' errorExists[2222968](2222970 '!=' error[1885986] nil[44]))
    if errorExists[2222968]
    {
      (1885992 '=' error_out[1885983] error[1885986])
      ref i_x[2517102]:channel(false,dynamic,false)[1080871] "temp"
      (2517106 'move' i_x[2517102](2517104 'set reference' ret[1080895]))
      (2517110 call deinit[1680600] i_x[2517102])
      gotoErrorHandlingReturn _end_reader[1081031] _end_reader[1081031]
    }
    const-val call_tmp[2328714]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328716 'move' call_tmp[2328714](2328719 call qio_err_iserr[223734] err[1080916]))
    const-val call_tmp[2328721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328723 'move' call_tmp[2328721](2328725 '!=' call_tmp[2328714] 0))
    if call_tmp[2328721]
    {
      val error[1886000]:Error[167984] "error variable" "temp"
      (1886009 'move' error[1886000] nil[44])
      const-val call_tmp[1080995]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907278]:string[26] "temp"
      (1081003 call tryGetPath[236452] this[1080783] ret_tmp[1907278])
      (1907281 'move' call_tmp[1080995] ret_tmp[1907278])
      (1081005 call ioerror[266338] err[1080916] "in file.reader" call_tmp[1080995] error[1886000])
      val errorExists[2222976]:bool[10] "temp"
      (2222981 'move' errorExists[2222976](2222978 '!=' error[1886000] nil[44]))
      if errorExists[2222976]
      {
        ref i_x[2247485]:string[26] "temp"
        (2247489 'move' i_x[2247485](2247487 'set reference' call_tmp[1080995]))
        (2247493 call deinit[30834] i_x[2247485])
        gotoErrorHandling handler[1886001] handler[1886001]
      }
      ref i_x[2247497]:string[26] "temp"
      (2247501 'move' i_x[2247497](2247499 'set reference' call_tmp[1080995]))
      (2247505 call deinit[30834] i_x[2247497])
      label handler[1886001]
      val errorExists[2222984]:bool[10] "temp"
      (2222989 'move' errorExists[2222984](2222986 '!=' error[1886000] nil[44]))
      if errorExists[2222984]
      {
        (1886016 '=' error_out[1885983] error[1886000])
        ref i_x[2517114]:channel(false,dynamic,false)[1080871] "temp"
        (2517118 'move' i_x[2517114](2517116 'set reference' ret[1080895]))
        (2517122 call deinit[1680600] i_x[2517114])
        gotoErrorHandlingReturn _end_reader[1081031] _end_reader[1081031]
      }
    }
    (1082268 'move' ret[1080841] ret[1080895])
    label _end_reader[1081031]
    (1909380 '=' _retArg[1909378] ret[1080841])
    (1909382 return _void[55])
  }
  function file[235668].writer[1022325](const  ref arg this[1022331]:file[235668], const in arg start[1022351]:int(64)[13], const in arg end[1022368]:int(64)[13], const in arg hints[1022374]:int(32)[95], const  ref arg style[1022381]:iostyle[231932], ref arg error_out[1884756]:Error[167984], ref arg _retArg[1908492]:channel(true,dynamic,true)[1022014]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1022389]:channel(true,dynamic,true)[1022014] "dead after last mention" "RVV" "temp"
    val ret[1022408]:channel(true,dynamic,true)[1022014] "dead at end of block" "insert auto destroy"
    (1024018 call init[1023096] ret[1022408])
    val err[1022429]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329147]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329149 'move' call_tmp[2329147](2329152 call qio_int_to_err[223722] 0))
    (1022431 'move' err[1022429] call_tmp[2329147])
    ref call_tmp[2338904]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338906 'move' call_tmp[2338904](2338908 '.' this[1022331] home[235650]))
    const-val call_tmp[1022446]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283185]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283187 'move' coerce_tmp[2283185](2283189 '.v' call_tmp[2338904] _instance[89978]))
    val coerce_tmp[2283192]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283194 'move' coerce_tmp[2283192](2283196 'cast' object[22] coerce_tmp[2283185]))
    const-val call_tmp[2283199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283201 'move' call_tmp[2283199](2283203 'ptr_eq' coerce_tmp[2283192] nil[44]))
    if call_tmp[2283199]
    {
      (2283209 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1022448 'move' call_tmp[1022446](1022450 '_wide_get_locale' coerce_tmp[2283185]))
    val error[1884759]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1884761 'move' error[1884759] nil[44])
    val rvfDerefTmp[2195812]:iostyle[231932] "temp"
    (2195816 'move' rvfDerefTmp[2195812](2195814 'deref' style[1022381]))
    val rvfDerefTmp[2195820]:file[235668] "temp"
    (2195824 'move' rvfDerefTmp[2195820](2195822 'deref' this[1022331]))
    val isdirect[2200573]:bool[10] "temp"
    (2200578 'move' isdirect[2200573](2200575 call chpl_doDirectExecuteOn[187469] call_tmp[1022446]))
    if isdirect[2200573]
    {
      (2200582 call on_fn[1022459] ret[1022408] hints[1022374] start[1022351] err[1022429] end[1022368] rvfDerefTmp[2195812] rvfDerefTmp[2195820] error[1884759])
    }
    {
      val _args_foron_fn[2200618]:_class_localson_fn[2200596] "temp"
      (2200622 'move' _args_foron_fn[2200618](2200620 'stack allocate class' _class_localson_fn[2200596]))
      (2200624 '.=' _args_foron_fn[2200618] _0_tmp[2200599] call_tmp[1022446])
      ref tmp[2200628]:channel(true,dynamic,true)[1022014] "temp"
      (2200632 'move' tmp[2200628](2200630 'set reference' ret[1022408]))
      (2200634 '.=' _args_foron_fn[2200618] _1_ret[2200601] tmp[2200628])
      (2200638 '.=' _args_foron_fn[2200618] _2_hints[2200603] hints[1022374])
      (2200642 '.=' _args_foron_fn[2200618] _3_start[2200605] start[1022351])
      ref tmp[2200646]:syserr[223672] "temp"
      (2200650 'move' tmp[2200646](2200648 'set reference' err[1022429]))
      (2200652 '.=' _args_foron_fn[2200618] _4_err[2200607] tmp[2200646])
      (2200656 '.=' _args_foron_fn[2200618] _5_end[2200609] end[1022368])
      (2200660 '.=' _args_foron_fn[2200618] _6_rvfDerefTmp[2200611] rvfDerefTmp[2195812])
      (2200664 '.=' _args_foron_fn[2200618] _7_rvfDerefTmp[2200613] rvfDerefTmp[2195820])
      ref tmp[2200668]:Error[167984] "temp"
      (2200672 'move' tmp[2200668](2200670 'set reference' error[1884759]))
      (2200674 '.=' _args_foron_fn[2200618] _8_error[2200615] tmp[2200668])
      val _args_vforon_fn[2200678]:c_void_ptr[149] "temp"
      (2200682 'move' _args_vforon_fn[2200678](2200680 'cast_to_void_star' _args_foron_fn[2200618]))
      val _args_sizeon_fn[2200684]:int(64)[13] "temp"
      (2200688 'move' _args_sizeon_fn[2200684](2200686 'sizeof_bundle' _class_localson_fn[2200596]))
      on(2200776 call wrapon_fn[2200690] call_tmp[1022446] _args_vforon_fn[2200678] _args_sizeon_fn[2200684] _args_foron_fn[2200618])
    }
    val errorExists[2222384]:bool[10] "temp"
    (2222389 'move' errorExists[2222384](2222386 '!=' error[1884759] nil[44]))
    if errorExists[2222384]
    {
      (1884765 '=' error_out[1884756] error[1884759])
      ref i_x[2516865]:channel(true,dynamic,true)[1022014] "temp"
      (2516869 'move' i_x[2516865](2516867 'set reference' ret[1022408]))
      (2516873 call deinit[1674182] i_x[2516865])
      gotoErrorHandlingReturn _end_writer[1022544] _end_writer[1022544]
    }
    const-val call_tmp[2328595]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328597 'move' call_tmp[2328595](2328600 call qio_err_iserr[223734] err[1022429]))
    const-val call_tmp[2328602]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328604 'move' call_tmp[2328602](2328606 '!=' call_tmp[2328595] 0))
    if call_tmp[2328602]
    {
      val error[1884773]:Error[167984] "error variable" "temp"
      (1884782 'move' error[1884773] nil[44])
      const-val call_tmp[1022508]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907266]:string[26] "temp"
      (1022516 call tryGetPath[236452] this[1022331] ret_tmp[1907266])
      (1907269 'move' call_tmp[1022508] ret_tmp[1907266])
      (1022518 call ioerror[266338] err[1022429] "in file.writer" call_tmp[1022508] error[1884773])
      val errorExists[2222392]:bool[10] "temp"
      (2222397 'move' errorExists[2222392](2222394 '!=' error[1884773] nil[44]))
      if errorExists[2222392]
      {
        ref i_x[2246849]:string[26] "temp"
        (2246853 'move' i_x[2246849](2246851 'set reference' call_tmp[1022508]))
        (2246857 call deinit[30834] i_x[2246849])
        gotoErrorHandling handler[1884774] handler[1884774]
      }
      ref i_x[2246861]:string[26] "temp"
      (2246865 'move' i_x[2246861](2246863 'set reference' call_tmp[1022508]))
      (2246869 call deinit[30834] i_x[2246861])
      label handler[1884774]
      val errorExists[2222400]:bool[10] "temp"
      (2222405 'move' errorExists[2222400](2222402 '!=' error[1884773] nil[44]))
      if errorExists[2222400]
      {
        (1884789 '=' error_out[1884756] error[1884773])
        ref i_x[2516877]:channel(true,dynamic,true)[1022014] "temp"
        (2516881 'move' i_x[2516877](2516879 'set reference' ret[1022408]))
        (2516885 call deinit[1674182] i_x[2516877])
        gotoErrorHandlingReturn _end_writer[1022544] _end_writer[1022544]
      }
    }
    (1024014 'move' ret[1022389] ret[1022408])
    label _end_writer[1022544]
    (1908494 '=' _retArg[1908492] ret[1022389])
    (1908496 return _void[55])
  }
  function file[235668].writer[1061042](const  ref arg this[1061048]:file[235668], const in arg start[1061068]:int(64)[13], const in arg end[1061085]:int(64)[13], const in arg hints[1061091]:int(32)[95], const  ref arg style[1061098]:iostyle[231932], ref arg error_out[1885187]:Error[167984], ref arg _retArg[1908976]:channel(true,dynamic,false)[1061136]) : void[4] throws "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "resolved"
  {
    const-val ret[1061106]:channel(true,dynamic,false)[1061136] "dead after last mention" "RVV" "temp"
    val ret[1061160]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
    (1062540 call init[1061809] ret[1061160])
    val err[1061181]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329185]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329187 'move' call_tmp[2329185](2329190 call qio_int_to_err[223722] 0))
    (1061183 'move' err[1061181] call_tmp[2329185])
    ref call_tmp[2338950]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338952 'move' call_tmp[2338950](2338954 '.' this[1061048] home[235650]))
    const-val call_tmp[1061198]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283335]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283337 'move' coerce_tmp[2283335](2283339 '.v' call_tmp[2338950] _instance[89978]))
    val coerce_tmp[2283342]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283344 'move' coerce_tmp[2283342](2283346 'cast' object[22] coerce_tmp[2283335]))
    const-val call_tmp[2283349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283351 'move' call_tmp[2283349](2283353 'ptr_eq' coerce_tmp[2283342] nil[44]))
    if call_tmp[2283349]
    {
      (2283359 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1061200 'move' call_tmp[1061198](1061202 '_wide_get_locale' coerce_tmp[2283335]))
    val error[1885190]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885192 'move' error[1885190] nil[44])
    val rvfDerefTmp[2195920]:iostyle[231932] "temp"
    (2195924 'move' rvfDerefTmp[2195920](2195922 'deref' style[1061098]))
    val rvfDerefTmp[2195928]:file[235668] "temp"
    (2195932 'move' rvfDerefTmp[2195928](2195930 'deref' this[1061048]))
    val isdirect[2201286]:bool[10] "temp"
    (2201291 'move' isdirect[2201286](2201288 call chpl_doDirectExecuteOn[187469] call_tmp[1061198]))
    if isdirect[2201286]
    {
      (2201295 call on_fn[1061211] rvfDerefTmp[2195920] rvfDerefTmp[2195928] err[1061181] hints[1061091] start[1061068] ret[1061160] end[1061085] error[1885190])
    }
    {
      val _args_foron_fn[2201331]:_class_localson_fn[2201309] "temp"
      (2201335 'move' _args_foron_fn[2201331](2201333 'stack allocate class' _class_localson_fn[2201309]))
      (2201337 '.=' _args_foron_fn[2201331] _0_tmp[2201312] call_tmp[1061198])
      (2201341 '.=' _args_foron_fn[2201331] _1_rvfDerefTmp[2201314] rvfDerefTmp[2195920])
      (2201345 '.=' _args_foron_fn[2201331] _2_rvfDerefTmp[2201316] rvfDerefTmp[2195928])
      ref tmp[2201349]:syserr[223672] "temp"
      (2201353 'move' tmp[2201349](2201351 'set reference' err[1061181]))
      (2201355 '.=' _args_foron_fn[2201331] _3_err[2201318] tmp[2201349])
      (2201359 '.=' _args_foron_fn[2201331] _4_hints[2201320] hints[1061091])
      (2201363 '.=' _args_foron_fn[2201331] _5_start[2201322] start[1061068])
      ref tmp[2201367]:channel(true,dynamic,false)[1061136] "temp"
      (2201371 'move' tmp[2201367](2201369 'set reference' ret[1061160]))
      (2201373 '.=' _args_foron_fn[2201331] _6_ret[2201324] tmp[2201367])
      (2201377 '.=' _args_foron_fn[2201331] _7_end[2201326] end[1061085])
      ref tmp[2201381]:Error[167984] "temp"
      (2201385 'move' tmp[2201381](2201383 'set reference' error[1885190]))
      (2201387 '.=' _args_foron_fn[2201331] _8_error[2201328] tmp[2201381])
      val _args_vforon_fn[2201391]:c_void_ptr[149] "temp"
      (2201395 'move' _args_vforon_fn[2201391](2201393 'cast_to_void_star' _args_foron_fn[2201331]))
      val _args_sizeon_fn[2201397]:int(64)[13] "temp"
      (2201401 'move' _args_sizeon_fn[2201397](2201399 'sizeof_bundle' _class_localson_fn[2201309]))
      on(2201489 call wrapon_fn[2201403] call_tmp[1061198] _args_vforon_fn[2201391] _args_sizeon_fn[2201397] _args_foron_fn[2201331])
    }
    val errorExists[2222608]:bool[10] "temp"
    (2222613 'move' errorExists[2222608](2222610 '!=' error[1885190] nil[44]))
    if errorExists[2222608]
    {
      (1885196 '=' error_out[1885187] error[1885190])
      ref i_x[2392720]:channel(true,dynamic,false)[1061136] "temp"
      (2392724 'move' i_x[2392720](2392722 'set reference' ret[1061160]))
      (2392728 call deinit[1676346] i_x[2392720])
      gotoErrorHandlingReturn _end_writer[1061296] _end_writer[1061296]
    }
    const-val call_tmp[2328646]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328648 'move' call_tmp[2328646](2328651 call qio_err_iserr[223734] err[1061181]))
    const-val call_tmp[2328653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328655 'move' call_tmp[2328653](2328657 '!=' call_tmp[2328646] 0))
    if call_tmp[2328653]
    {
      val error[1885204]:Error[167984] "error variable" "temp"
      (1885213 'move' error[1885204] nil[44])
      const-val call_tmp[1061260]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1907272]:string[26] "temp"
      (1061268 call tryGetPath[236452] this[1061048] ret_tmp[1907272])
      (1907275 'move' call_tmp[1061260] ret_tmp[1907272])
      (1061270 call ioerror[266338] err[1061181] "in file.writer" call_tmp[1061260] error[1885204])
      val errorExists[2222616]:bool[10] "temp"
      (2222621 'move' errorExists[2222616](2222618 '!=' error[1885204] nil[44]))
      if errorExists[2222616]
      {
        ref i_x[2247245]:string[26] "temp"
        (2247249 'move' i_x[2247245](2247247 'set reference' call_tmp[1061260]))
        (2247253 call deinit[30834] i_x[2247245])
        gotoErrorHandling handler[1885205] handler[1885205]
      }
      ref i_x[2247257]:string[26] "temp"
      (2247261 'move' i_x[2247257](2247259 'set reference' call_tmp[1061260]))
      (2247265 call deinit[30834] i_x[2247257])
      label handler[1885205]
      val errorExists[2222624]:bool[10] "temp"
      (2222629 'move' errorExists[2222624](2222626 '!=' error[1885204] nil[44]))
      if errorExists[2222624]
      {
        (1885220 '=' error_out[1885187] error[1885204])
        ref i_x[2392732]:channel(true,dynamic,false)[1061136] "temp"
        (2392736 'move' i_x[2392732](2392734 'set reference' ret[1061160]))
        (2392740 call deinit[1676346] i_x[2392732])
        gotoErrorHandlingReturn _end_writer[1061296] _end_writer[1061296]
      }
    }
    (1062536 'move' ret[1061106] ret[1061160])
    label _end_writer[1061296]
    (1908978 '=' _retArg[1908976] ret[1061106])
    (1908980 return _void[55])
  }
  function _write_text_internal[1078949](const in arg _channel_internal[1078951]:qio_channel_ptr_t[231553], const in arg x[1078953]:int(64)[13]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1079125]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1079744]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079750 'move' coerce_tmp[1079744](1079746 'cast' int(32)[95] 0))
    const-val coerce_tmp[1079752]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079758 'move' coerce_tmp[1079752](1079754 'cast' uint(64)[115] 8))
    const-val coerce_tmp[1079760]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1079766 'move' coerce_tmp[1079760](1079762 'cast' int(32)[95] 1))
    (1079127 'move' call_tmp[1079125](1079130 call qio_channel_print_int[1079714] coerce_tmp[1079744] _channel_internal[1078951] x[1078953] coerce_tmp[1079752] coerce_tmp[1079760]))
    label _end__write_text_internal[1079697]
    (1079699 return call_tmp[1079125])
  }
  function _write_text_internal[1173033](const in arg _channel_internal[1173035]:qio_channel_ptr_t[231553], const  ref arg x[1173037]:string[26]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    val ret[1173051]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
    val ret[2265445]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2265447]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2265449 'move' coerce_tmp[2265447](2265451 '.v' x[1173037] locale_id[30757]))
    const-val call_tmp[2265454]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2265456 'move' call_tmp[2265454](2265458 '==' coerce_tmp[2265447] chpl_nodeID[208207]))
    if call_tmp[2265454]
    {
      const-val ret[2265463]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2265465]:string[26] "dead at end of block" "insert auto destroy"
      (2265468 call init[30763] ret[2265465])
      const-val coerce_tmp[2265470]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2265472 'move' coerce_tmp[2265470](2265474 '.v' x[1173037] cachedNumCodepoints[30734]))
      (2265477 '.=' ret[2265465] cachedNumCodepoints[30734] coerce_tmp[2265470])
      (2265482 call initWithBorrowedBuffer[949063] ret[2265465] x[1173037])
      (2265485 'move' ret[2265463] ret[2265465])
      (2265488 'move' ret[2265445] ret[2265463])
      gotoReturn _end_localize[2265506] _end_localize[2265506]
    }
    {
      const-val x[2265494]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2265497 call init=[30774] x[2265494] x[1173037])
      (2265500 'move' ret[2265445] x[2265494])
      gotoReturn _end_localize[2265506] _end_localize[2265506]
    }
    label _end_localize[2265506]
    const local_x[1173452]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1173454 'move' local_x[1173452] ret[2265445])
    const-val tmp[1173811]:bool[10] "dead after last mention" "const" "temp"
    (1173813 'move' tmp[1173811](2567844 '.v' local_x[1173452] hasEscapes[30752]))
    if tmp[1173811]
    {
      const-val call_tmp[2329375]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      (2329377 'move' call_tmp[2329375](2329380 call qio_int_to_err[223722] EILSEQ[224532]))
      (2329382 '=' ret[1173051] call_tmp[2329375])
      ref i_x[2248049]:string[26] "temp"
      (2248053 'move' i_x[2248049](2248051 'set reference' local_x[1173452]))
      (2248057 call deinit[30834] i_x[2248049])
      gotoReturn _end__write_text_internal[1173781] _end__write_text_internal[1173781]
    }
    const-val coerce_tmp[2268451]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2268453 'move' coerce_tmp[2268451](2268455 '.v' local_x[1173452] locale_id[30757]))
    const-val call_tmp[2268458]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268460 'move' call_tmp[2268458](2268462 '!=' coerce_tmp[2268451] chpl_nodeID[208207]))
    if call_tmp[2268458]
    {
      (2268468 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2268471]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2268473 'move' coerce_tmp[2268471](2268475 '.v' local_x[1173452] buff[30740]))
    const-val call_tmp[2268478]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2268480 'move' call_tmp[2268478](2268482 'cast' c_string[19] coerce_tmp[2268471]))
    val ret[2260052]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2260054 'move' ret[2260052](2260056 '.v' local_x[1173452] buffLen[30722]))
    const-val call_tmp[1173508]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1173820]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1173826 'move' coerce_tmp[1173820](1173822 'cast' int(32)[95] 0))
    (1173510 'move' call_tmp[1173508](1173513 call qio_channel_print_string[234925] coerce_tmp[1173820] _channel_internal[1173035] call_tmp[2268478] ret[2260052]))
    (1173839 'move' ret[1173051] call_tmp[1173508])
    ref i_x[2248061]:string[26] "temp"
    (2248065 'move' i_x[2248061](2248063 'set reference' local_x[1173452]))
    (2248069 call deinit[30834] i_x[2248061])
    label _end__write_text_internal[1173781]
    (1173783 return ret[1173051])
  }
  function _write_text_internal[1584616](const in arg _channel_internal[1584618]:qio_channel_ptr_t[231553], const in arg x[1584620]:real(64)[16]) : syserr[223672] "instantiated generic" "invisible fn" "private" "resolved"
  {
    const-val call_tmp[1584846]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1585409]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1585415 'move' coerce_tmp[1585409](1585411 'cast' int(32)[95] 0))
    const-val coerce_tmp[1585417]:uint(64)[115] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1585423 'move' coerce_tmp[1585417](1585419 'cast' uint(64)[115] 8))
    (1584848 'move' call_tmp[1584846](1584851 call qio_channel_print_float[1585383] coerce_tmp[1585409] _channel_internal[1584618] x[1584620] coerce_tmp[1585417]))
    label _end__write_text_internal[1585364]
    (1585366 return call_tmp[1584846])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1079801](const  ref arg this[1079807]:channel(true,dynamic,false)[1061136], const in arg x[1079811]:int(64)[13], ref arg _retArg[1909338]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1079815]:string[26] "dead after last mention" "RVV" "temp"
    val result[1079827]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326107]:string[26] "temp"
    (2326110 'move' inlineImm[2326107] "while ")
    ref i_x[2326112]:string[26] "temp"
    (2326116 'move' i_x[2326112](2326114 'set reference' inlineImm[2326107]))
    val ret[2326119]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326121]:string[26] "dead after last mention" "temp"
    (2326124 call init=[30774] tmp[2326121] i_x[2326112])
    (2326127 'move' ret[2326119] tmp[2326121])
    (1079829 'move' result[1079827] ret[2326119])
    (1079866 call +=[38800] result[1079827] "writing ")
    (1079886 call +=[38800] result[1079827] "int(64)")
    (1080020 'move' ret[1079815] result[1079827])
    label _end__constructIoErrorMsg[1079996]
    (1909340 '=' _retArg[1909338] ret[1079815])
    (1909344 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1080094](const  ref arg this[1080100]:channel(true,dynamic,false)[1061136], const  ref arg x[1080104]:byteIndex[28173], ref arg _retArg[1909352]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1080108]:string[26] "dead after last mention" "RVV" "temp"
    val result[1080120]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326132]:string[26] "temp"
    (2326135 'move' inlineImm[2326132] "while ")
    ref i_x[2326137]:string[26] "temp"
    (2326141 'move' i_x[2326137](2326139 'set reference' inlineImm[2326132]))
    val ret[2326144]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326146]:string[26] "dead after last mention" "temp"
    (2326149 call init=[30774] tmp[2326146] i_x[2326137])
    (2326152 'move' ret[2326144] tmp[2326146])
    (1080122 'move' result[1080120] ret[2326144])
    (1080159 call +=[38800] result[1080120] "writing ")
    (1080179 call +=[38800] result[1080120] "byteIndex")
    (1080327 'move' ret[1080108] result[1080120])
    label _end__constructIoErrorMsg[1080289]
    (1909354 '=' _retArg[1909352] ret[1080108])
    (1909358 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1173868](const  ref arg this[1173874]:channel(true,dynamic,false)[1061136], const  ref arg x[1173878]:string[26], ref arg _retArg[1910602]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1173882]:string[26] "dead after last mention" "RVV" "temp"
    val result[1173894]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326257]:string[26] "temp"
    (2326260 'move' inlineImm[2326257] "while ")
    ref i_x[2326262]:string[26] "temp"
    (2326266 'move' i_x[2326262](2326264 'set reference' inlineImm[2326257]))
    val ret[2326269]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326271]:string[26] "dead after last mention" "temp"
    (2326274 call init=[30774] tmp[2326271] i_x[2326262])
    (2326277 'move' ret[2326269] tmp[2326271])
    (1173896 'move' result[1173894] ret[2326269])
    (1173933 call +=[38800] result[1173894] "writing ")
    (1173953 call +=[38800] result[1173894] "string")
    (1174087 'move' ret[1173882] result[1173894])
    label _end__constructIoErrorMsg[1174063]
    (1910604 '=' _retArg[1910602] ret[1173882])
    (1910608 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1175586](const  ref arg this[1175592]:channel(true,dynamic,false)[1061136], const  ref arg x[1175596]:codepointIndex[28277], ref arg _retArg[1910616]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1175600]:string[26] "dead after last mention" "RVV" "temp"
    val result[1175612]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326282]:string[26] "temp"
    (2326285 'move' inlineImm[2326282] "while ")
    ref i_x[2326287]:string[26] "temp"
    (2326291 'move' i_x[2326287](2326289 'set reference' inlineImm[2326282]))
    val ret[2326294]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326296]:string[26] "dead after last mention" "temp"
    (2326299 call init=[30774] tmp[2326296] i_x[2326287])
    (2326302 'move' ret[2326294] tmp[2326296])
    (1175614 'move' result[1175612] ret[2326294])
    (1175651 call +=[38800] result[1175612] "writing ")
    (1175671 call +=[38800] result[1175612] "codepointIndex")
    (1175821 'move' ret[1175600] result[1175612])
    label _end__constructIoErrorMsg[1175781]
    (1910618 '=' _retArg[1910616] ret[1175600])
    (1910622 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1568710](const  ref arg this[1568716]:channel(true,dynamic,false)[1061136], const  ref arg x[1568720]:ioLiteral[238841], ref arg _retArg[1916893]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1568724]:string[26] "dead after last mention" "RVV" "temp"
    val result[1568736]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326557]:string[26] "temp"
    (2326560 'move' inlineImm[2326557] "while ")
    ref i_x[2326562]:string[26] "temp"
    (2326566 'move' i_x[2326562](2326564 'set reference' inlineImm[2326557]))
    val ret[2326569]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326571]:string[26] "dead after last mention" "temp"
    (2326574 call init=[30774] tmp[2326571] i_x[2326562])
    (2326577 'move' ret[2326569] tmp[2326571])
    (1568738 'move' result[1568736] ret[2326569])
    (1568775 call +=[38800] result[1568736] "writing ")
    (1568795 call +=[38800] result[1568736] "ioLiteral")
    const-val call_tmp[1568864]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    ref call_tmp[2329858]:string[26] "dead after last mention" "maybe param" "temp"
    (2329860 'move' call_tmp[2329858](2329862 '.' x[1568720] val[238816]))
    val ret[2329865]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2329867]:string[26] "dead after last mention" "temp"
    (2329870 call init=[30774] tmp[2329867] call_tmp[2329858])
    (2329873 'move' ret[2329865] tmp[2329867])
    (1907353 'move' call_tmp[1568864] ret[2329865])
    const-val call_tmp[1568872]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906106]:string[26] "temp"
    (1568877 call +[38345] " \"" call_tmp[1568864] ret_tmp[1906106])
    (1906109 'move' call_tmp[1568872] ret_tmp[1906106])
    const-val call_tmp[1568880]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1906112]:string[26] "temp"
    (1568885 call +[38345] call_tmp[1568872] "\"" ret_tmp[1906112])
    (1906115 'move' call_tmp[1568880] ret_tmp[1906112])
    (1568889 call +=[38800] result[1568736] call_tmp[1568880])
    ref i_x[2249477]:string[26] "temp"
    (2249481 'move' i_x[2249477](2249479 'set reference' call_tmp[1568880]))
    (2249485 call deinit[30834] i_x[2249477])
    ref i_x[2249489]:string[26] "temp"
    (2249493 'move' i_x[2249489](2249491 'set reference' call_tmp[1568872]))
    (2249497 call deinit[30834] i_x[2249489])
    ref i_x[2249501]:string[26] "temp"
    (2249505 'move' i_x[2249501](2249503 'set reference' call_tmp[1568864]))
    (2249509 call deinit[30834] i_x[2249501])
    (1568999 'move' ret[1568724] result[1568736])
    label _end__constructIoErrorMsg[1568905]
    (1916895 '=' _retArg[1916893] ret[1568724])
    (1916899 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._constructIoErrorMsg[1585456](const  ref arg this[1585462]:channel(true,dynamic,false)[1061136], const in arg x[1585466]:real(64)[16], ref arg _retArg[1916947]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved" "fn synchronization free"
  {
    const-val ret[1585470]:string[26] "dead after last mention" "RVV" "temp"
    val result[1585482]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326582]:string[26] "temp"
    (2326585 'move' inlineImm[2326582] "while ")
    ref i_x[2326587]:string[26] "temp"
    (2326591 'move' i_x[2326587](2326589 'set reference' inlineImm[2326582]))
    val ret[2326594]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326596]:string[26] "dead after last mention" "temp"
    (2326599 call init=[30774] tmp[2326596] i_x[2326587])
    (2326602 'move' ret[2326594] tmp[2326596])
    (1585484 'move' result[1585482] ret[2326594])
    (1585521 call +=[38800] result[1585482] "writing ")
    (1585541 call +=[38800] result[1585482] "real(64)")
    (1585691 'move' ret[1585470] result[1585482])
    label _end__constructIoErrorMsg[1585651]
    (1916949 '=' _retArg[1916947] ret[1585470])
    (1916953 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._constructIoErrorMsg[1586029](const  ref arg this[1586035]:channel(true,dynamic,true)[1022014], const  ref arg x[1586039]:[domain(1,int(64),false)] real(64)[1366029], ref arg _retArg[1916961]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1586043]:string[26] "dead after last mention" "RVV" "temp"
    val result[1586055]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326607]:string[26] "temp"
    (2326610 'move' inlineImm[2326607] "while ")
    ref i_x[2326612]:string[26] "temp"
    (2326616 'move' i_x[2326612](2326614 'set reference' inlineImm[2326607]))
    val ret[2326619]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326621]:string[26] "dead after last mention" "temp"
    (2326624 call init=[30774] tmp[2326621] i_x[2326612])
    (2326627 'move' ret[2326619] tmp[2326621])
    (1586057 'move' result[1586055] ret[2326619])
    (1586094 call +=[38800] result[1586055] "writing ")
    (1586233 call chpl__convertValueToRuntimeType[1517719] x[1586039])
    (1586114 call +=[38800] result[1586055] "[domain(1,int(64),false)] real(64)")
    (1586254 call chpl__convertValueToRuntimeType[1517719] x[1586039])
    (1586270 'move' ret[1586043] result[1586055])
    label _end__constructIoErrorMsg[1586224]
    (1916963 '=' _retArg[1916961] ret[1586043])
    (1916967 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._constructIoErrorMsg[1589213](const  ref arg this[1589219]:channel(true,dynamic,true)[1022014], const  ref arg x[1589223]:ioNewline[238789], ref arg _retArg[1916975]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1589227]:string[26] "dead after last mention" "RVV" "temp"
    val result[1589239]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326632]:string[26] "temp"
    (2326635 'move' inlineImm[2326632] "while ")
    ref i_x[2326637]:string[26] "temp"
    (2326641 'move' i_x[2326637](2326639 'set reference' inlineImm[2326632]))
    val ret[2326644]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326646]:string[26] "dead after last mention" "temp"
    (2326649 call init=[30774] tmp[2326646] i_x[2326637])
    (2326652 'move' ret[2326644] tmp[2326646])
    (1589241 'move' result[1589239] ret[2326644])
    (1589278 call +=[38800] result[1589239] "writing ")
    (1589298 call +=[38800] result[1589239] "ioNewline")
    (1589336 call +=[38800] result[1589239] " newline")
    (1589493 'move' ret[1589227] result[1589239])
    label _end__constructIoErrorMsg[1589408]
    (1916977 '=' _retArg[1916975] ret[1589227])
    (1916981 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._constructIoErrorMsg[1590141](const  ref arg this[1590147]:channel(true,dynamic,true)[1022014], const  ref arg x[1590151]:string[26], ref arg _retArg[1917001]:string[26]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    const-val ret[1590155]:string[26] "dead after last mention" "RVV" "temp"
    val result[1590167]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326657]:string[26] "temp"
    (2326660 'move' inlineImm[2326657] "while ")
    ref i_x[2326662]:string[26] "temp"
    (2326666 'move' i_x[2326662](2326664 'set reference' inlineImm[2326657]))
    val ret[2326669]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326671]:string[26] "dead after last mention" "temp"
    (2326674 call init=[30774] tmp[2326671] i_x[2326662])
    (2326677 'move' ret[2326669] tmp[2326671])
    (1590169 'move' result[1590167] ret[2326669])
    (1590206 call +=[38800] result[1590167] "writing ")
    (1590226 call +=[38800] result[1590167] "string")
    (1590360 'move' ret[1590155] result[1590167])
    label _end__constructIoErrorMsg[1590336]
    (1917003 '=' _retArg[1917001] ret[1590155])
    (1917007 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1067201](const  ref arg this[1067207]:channel(true,dynamic,false)[1061136], const  ref arg x[1067211]:byteIndex[28173], const  ref arg loc[1067213]:locale[28], ref arg error_out[1885577]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1068550]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1068554 'move' coerce_tmp[1068550](2566697 '.v' this[1067207] _channel_internal[1061129]))
    val error[1885582]:Error[167984] "error variable" "temp"
    (1885584 'move' error[1885582] nil[44])
    val ret[2393069]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2393071]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2393073]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2393075]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2393077 'move' call_tmp[2393075](2393080 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2393083 'move' call_tmp[2393073] call_tmp[2393075])
    const-val call_tmp[2393086]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2393088]:locale[28] "temp"
    (2393091 call chpl_localeID_to_locale[92852] call_tmp[2393073] ret_tmp[2393088])
    (2393094 'move' call_tmp[2393086] ret_tmp[2393088])
    (2393097 'move' call_tmp[2393071] call_tmp[2393086])
    const-val call_tmp[2393100]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2393102]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (2393105 call init[1068577] initTemp[2393102] call_tmp[2393071] coerce_tmp[1068550] loc[1067213])
    (2393110 'move' call_tmp[2393100] initTemp[2393102])
    val writer[2393113]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2393115 'move' writer[2393113] call_tmp[2393100])
    const-val call_tmp[2393120]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393122 'move' call_tmp[2393120](2393125 call qio_int_to_err[223722] 0))
    val error[2393130]:Error[167984] "error variable" "temp"
    (2393132 'move' error[2393130] nil[44])
    (2393136 call writeThis[1068809] x[1067211] writer[2393113] error[2393130])
    val errorExists[2393140]:bool[10] "temp"
    (2393142 'move' errorExists[2393140](2393144 '!=' error[2393130] nil[44]))
    if errorExists[2393140]
    {
      gotoErrorHandling handler[2393152] handler[2393152]
    }
    label handler[2393152]
    val errorExists[2393154]:bool[10] "temp"
    (2393156 'move' errorExists[2393154](2393158 '!=' error[2393130] nil[44]))
    if errorExists[2393154]
    {
      (2393163 '=' error[1885582] error[2393130])
      (2393166 '.=' writer[2393113] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
      ref i_x[2393170]:channel(true,dynamic,false)[1061136] "temp"
      (2393172 'move' i_x[2393170](2393174 'set reference' writer[2393113]))
      (2393177 call deinit[1676346] i_x[2393170])
      ref i_x[2393179]:locale[28] "temp"
      (2393181 'move' i_x[2393179](2393183 'set reference' call_tmp[2393071]))
      (2393186 call deinit[90188] i_x[2393179])
      gotoErrorHandlingReturn _end__write_one_internal[2393216] _end__write_one_internal[2393216]
    }
    (2393191 'move' ret[2393069] call_tmp[2393120])
    (2393194 '.=' writer[2393113] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
    ref i_x[2393198]:channel(true,dynamic,false)[1061136] "temp"
    (2393200 'move' i_x[2393198](2393202 'set reference' writer[2393113]))
    (2393205 call deinit[1676346] i_x[2393198])
    ref i_x[2393207]:locale[28] "temp"
    (2393209 'move' i_x[2393207](2393211 'set reference' call_tmp[2393071]))
    (2393214 call deinit[90188] i_x[2393207])
    label _end__write_one_internal[2393216]
    val errorExists[2222776]:bool[10] "temp"
    (2222781 'move' errorExists[2222776](2222778 '!=' error[1885582] nil[44]))
    if errorExists[2222776]
    {
      (1885588 '=' error_out[1885577] error[1885582])
      gotoErrorHandlingReturn _end_writeOne[1885579] _end_writeOne[1885579]
    }
    const-val call_tmp[2328155]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328157 'move' call_tmp[2328155](2328160 call qio_err_to_int[223704] ret[2393069]))
    const-val call_tmp[2328162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328164 'move' call_tmp[2328162](2328166 '==' call_tmp[2328155] 0))
    const-val call_tmp[2328169]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328171 'move' call_tmp[2328169](2328173 '!' call_tmp[2328162]))
    if call_tmp[2328169]
    {
      const-val call_tmp[1067270]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1909346]:string[26] "temp"
      (1067278 call _constructIoErrorMsg[1080094] this[1067207] x[1067211] ret_tmp[1909346])
      (1909349 'move' call_tmp[1067270] ret_tmp[1909346])
      val msg[1067281]:string[26] "dead at end of block" "insert auto destroy"
      (1067283 'move' msg[1067281] call_tmp[1067270])
      const-val call_tmp[2327902]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327904 'move' call_tmp[2327902](2327907 call qio_err_to_int[223704] ret[2393069]))
      const-val call_tmp[2327909]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327911 'move' call_tmp[2327909](2327913 '==' call_tmp[2327902] EILSEQ[224532]))
      if call_tmp[2327909]
      {
        const-val call_tmp[1067312]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905776]:string[26] "temp"
        (1067317 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1067281] ret_tmp[1905776])
        (1905779 'move' call_tmp[1067312] ret_tmp[1905776])
        (1067321 call =[38272] msg[1067281] call_tmp[1067312])
        ref i_x[2247317]:string[26] "temp"
        (2247321 'move' i_x[2247317](2247319 'set reference' call_tmp[1067312]))
        (2247325 call deinit[30834] i_x[2247317])
      }
      val error[1885596]:Error[167984] "error variable" "temp"
      (1885605 'move' error[1885596] nil[44])
      (1067333 call _ch_ioerror[1063054] this[1067207] ret[2393069] msg[1067281] error[1885596])
      val errorExists[2222784]:bool[10] "temp"
      (2222789 'move' errorExists[2222784](2222786 '!=' error[1885596] nil[44]))
      if errorExists[2222784]
      {
        gotoErrorHandling handler[1885597] handler[1885597]
      }
      label handler[1885597]
      val errorExists[2222792]:bool[10] "temp"
      (2222797 'move' errorExists[2222792](2222794 '!=' error[1885596] nil[44]))
      if errorExists[2222792]
      {
        (1885612 '=' error_out[1885577] error[1885596])
        ref i_x[2247329]:string[26] "temp"
        (2247333 'move' i_x[2247329](2247331 'set reference' msg[1067281]))
        (2247337 call deinit[30834] i_x[2247329])
        gotoErrorHandlingReturn _end_writeOne[1885579] _end_writeOne[1885579]
      }
      ref i_x[2247341]:string[26] "temp"
      (2247345 'move' i_x[2247341](2247343 'set reference' msg[1067281]))
      (2247349 call deinit[30834] i_x[2247341])
    }
    label _end_writeOne[1885579]
    (1067341 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1069126](const  ref arg this[1069132]:channel(true,dynamic,false)[1061136], const in arg x[1069136]:int(64)[13], const  ref arg loc[1069138]:locale[28], ref arg error_out[1885814]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1070394]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1070398 'move' coerce_tmp[1070394](2566720 '.v' this[1069132] _channel_internal[1061129]))
    val error[1885819]:Error[167984] "error variable" "temp"
    (1885821 'move' error[1885819] nil[44])
    val ret[2393537]:syserr[223672] "dead after last mention" "RVV" "temp"
    val e[2393539]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2393541]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393543 'move' call_tmp[2393541](2393546 call qio_int_to_err[223722] 0))
    (2393548 'move' e[2393539] call_tmp[2393541])
    const-val call_tmp[2393551]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2393553 'move' call_tmp[2393551](2393556 call qio_channel_binary[233145] coerce_tmp[1070394]))
    const-val call_tmp[2393558]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2393560 'move' call_tmp[2393558](2393563 call qio_channel_byteorder[233160] coerce_tmp[1070394]))
    const-val coerce_tmp[2393570]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2393572 'move' coerce_tmp[2393570](2393574 'cast' int(64)[13] call_tmp[2393551]))
    const-val call_tmp[2393577]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393579 'move' call_tmp[2393577](2393581 '!=' coerce_tmp[2393570] 0))
    if call_tmp[2393577]
    {
      const-val tmp[2393586]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2393588]:Error[167984] "error variable" "temp"
      (2393590 'move' error[2393588] nil[44])
      (2393593 'move' tmp[2393586](2393596 call _cast[1070497] call_tmp[2393558] error[2393588]))
      val errorExists[2393599]:bool[10] "temp"
      (2393601 'move' errorExists[2393599](2393603 '!=' error[2393588] nil[44]))
      if errorExists[2393599]
      {
        (2393608 '=' error[1885819] error[2393588])
        gotoErrorHandlingReturn _end__write_one_internal[2393712] _end__write_one_internal[2393712]
      }
      const-val call_tmp[2393614]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2393616 'move' call_tmp[2393614](2393618 '==' tmp[2393586] big[231014]))
      if call_tmp[2393614]
      {
        const-val call_tmp[2393623]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2393625]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2393627 'move' coerce_tmp[2393625](2393629 'cast' int(32)[95] 0))
        (2393632 'move' call_tmp[2393623](2393635 call qio_channel_write_int64[234138] coerce_tmp[2393625] 2 coerce_tmp[1070394] x[1069136]))
        (2393640 '=' e[2393539] call_tmp[2393623])
      }
      {
        const-val call_tmp[2393644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2393646 'move' call_tmp[2393644](2393648 '==' tmp[2393586] little[231017]))
        if call_tmp[2393644]
        {
          const-val call_tmp[2393653]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2393655]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2393657 'move' coerce_tmp[2393655](2393659 'cast' int(32)[95] 0))
          (2393662 'move' call_tmp[2393653](2393665 call qio_channel_write_int64[234138] coerce_tmp[2393655] 3 coerce_tmp[1070394] x[1069136]))
          (2393670 '=' e[2393539] call_tmp[2393653])
        }
        {
          const-val call_tmp[2393674]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2393676]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2393678 'move' coerce_tmp[2393676](2393680 'cast' int(32)[95] 0))
          (2393683 'move' call_tmp[2393674](2393686 call qio_channel_write_int64[234138] coerce_tmp[2393676] 1 coerce_tmp[1070394] x[1069136]))
          (2393691 '=' e[2393539] call_tmp[2393674])
        }
      }
    }
    {
      const-val call_tmp[2393697]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      (2393699 'move' call_tmp[2393697](2393702 call _write_text_internal[1078949] coerce_tmp[1070394] x[1069136]))
      (2393705 '=' e[2393539] call_tmp[2393697])
    }
    (2393709 'move' ret[2393537] e[2393539])
    label _end__write_one_internal[2393712]
    val errorExists[2222896]:bool[10] "temp"
    (2222901 'move' errorExists[2222896](2222898 '!=' error[1885819] nil[44]))
    if errorExists[2222896]
    {
      (1885825 '=' error_out[1885814] error[1885819])
      gotoErrorHandlingReturn _end_writeOne[1885816] _end_writeOne[1885816]
    }
    const-val call_tmp[2328132]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328134 'move' call_tmp[2328132](2328137 call qio_err_to_int[223704] ret[2393537]))
    const-val call_tmp[2328139]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328141 'move' call_tmp[2328139](2328143 '==' call_tmp[2328132] 0))
    const-val call_tmp[2328146]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328148 'move' call_tmp[2328146](2328150 '!' call_tmp[2328139]))
    if call_tmp[2328146]
    {
      const-val call_tmp[1069195]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1909332]:string[26] "temp"
      (1069203 call _constructIoErrorMsg[1079801] this[1069132] x[1069136] ret_tmp[1909332])
      (1909335 'move' call_tmp[1069195] ret_tmp[1909332])
      val msg[1069206]:string[26] "dead at end of block" "insert auto destroy"
      (1069208 'move' msg[1069206] call_tmp[1069195])
      const-val call_tmp[2327885]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327887 'move' call_tmp[2327885](2327890 call qio_err_to_int[223704] ret[2393537]))
      const-val call_tmp[2327892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327894 'move' call_tmp[2327892](2327896 '==' call_tmp[2327885] EILSEQ[224532]))
      if call_tmp[2327892]
      {
        const-val call_tmp[1069237]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905782]:string[26] "temp"
        (1069242 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1069206] ret_tmp[1905782])
        (1905785 'move' call_tmp[1069237] ret_tmp[1905782])
        (1069246 call =[38272] msg[1069206] call_tmp[1069237])
        ref i_x[2247353]:string[26] "temp"
        (2247357 'move' i_x[2247353](2247355 'set reference' call_tmp[1069237]))
        (2247361 call deinit[30834] i_x[2247353])
      }
      val error[1885833]:Error[167984] "error variable" "temp"
      (1885842 'move' error[1885833] nil[44])
      (1069258 call _ch_ioerror[1063054] this[1069132] ret[2393537] msg[1069206] error[1885833])
      val errorExists[2222904]:bool[10] "temp"
      (2222909 'move' errorExists[2222904](2222906 '!=' error[1885833] nil[44]))
      if errorExists[2222904]
      {
        gotoErrorHandling handler[1885834] handler[1885834]
      }
      label handler[1885834]
      val errorExists[2222912]:bool[10] "temp"
      (2222917 'move' errorExists[2222912](2222914 '!=' error[1885833] nil[44]))
      if errorExists[2222912]
      {
        (1885849 '=' error_out[1885814] error[1885833])
        ref i_x[2247365]:string[26] "temp"
        (2247369 'move' i_x[2247365](2247367 'set reference' msg[1069206]))
        (2247373 call deinit[30834] i_x[2247365])
        gotoErrorHandlingReturn _end_writeOne[1885816] _end_writeOne[1885816]
      }
      ref i_x[2247377]:string[26] "temp"
      (2247381 'move' i_x[2247377](2247379 'set reference' msg[1069206]))
      (2247385 call deinit[30834] i_x[2247377])
    }
    label _end_writeOne[1885816]
    (1069266 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1165349](const  ref arg this[1165355]:channel(true,dynamic,false)[1061136], const  ref arg x[1165359]:string[26], const  ref arg loc[1165361]:locale[28], ref arg error_out[1886612]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1168219]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1168223 'move' coerce_tmp[1168219](2567834 '.v' this[1165355] _channel_internal[1061129]))
    val error[1886617]:Error[167984] "error variable" "temp"
    (1886619 'move' error[1886617] nil[44])
    val ret[2398240]:syserr[223672] "dead after last mention" "RVV" "temp"
    val e[2398242]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2398244]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2398246 'move' call_tmp[2398244](2398249 call qio_int_to_err[223722] 0))
    (2398251 'move' e[2398242] call_tmp[2398244])
    const-val call_tmp[2398254]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2398256 'move' call_tmp[2398254](2398259 call qio_channel_binary[233145] coerce_tmp[1168219]))
    const-val call_tmp[2398261]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2398263 'move' call_tmp[2398261](2398266 call qio_channel_byteorder[233160] coerce_tmp[1168219]))
    const-val coerce_tmp[2398273]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2398275 'move' coerce_tmp[2398273](2398277 'cast' int(64)[13] call_tmp[2398254]))
    const-val call_tmp[2398280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2398282 'move' call_tmp[2398280](2398284 '!=' coerce_tmp[2398273] 0))
    if call_tmp[2398280]
    {
      const-val tmp[2398289]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2398291]:Error[167984] "error variable" "temp"
      (2398293 'move' error[2398291] nil[44])
      (2398296 'move' tmp[2398289](2398299 call _cast[1070497] call_tmp[2398261] error[2398291]))
      val errorExists[2398302]:bool[10] "temp"
      (2398304 'move' errorExists[2398302](2398306 '!=' error[2398291] nil[44]))
      if errorExists[2398302]
      {
        (2398311 '=' error[1886617] error[2398291])
        gotoErrorHandlingReturn _end__write_one_internal[2398910] _end__write_one_internal[2398910]
      }
      const-val call_tmp[2398317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2398319 'move' call_tmp[2398317](2398321 '==' tmp[2398289] big[231014]))
      if call_tmp[2398317]
      {
        val ret[2398326]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2398328]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2398330]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2398332 'move' coerce_tmp[2398330](2398334 '.v' x[1165359] locale_id[30757]))
        const-val call_tmp[2398337]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2398339 'move' call_tmp[2398337](2398341 '==' coerce_tmp[2398330] chpl_nodeID[208207]))
        if call_tmp[2398337]
        {
          const-val ret[2398346]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2398348]:string[26] "dead at end of block" "insert auto destroy"
          (2398351 call init[30763] ret[2398348])
          const-val coerce_tmp[2398353]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398355 'move' coerce_tmp[2398353](2398357 '.v' x[1165359] cachedNumCodepoints[30734]))
          (2398360 '.=' ret[2398348] cachedNumCodepoints[30734] coerce_tmp[2398353])
          (2398365 call initWithBorrowedBuffer[949063] ret[2398348] x[1165359])
          (2398368 'move' ret[2398346] ret[2398348])
          (2398371 'move' ret[2398328] ret[2398346])
          gotoReturn _end_localize[2398389] _end_localize[2398389]
        }
        {
          const-val x[2398377]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2398380 call init=[30774] x[2398377] x[1165359])
          (2398383 'move' ret[2398328] x[2398377])
          gotoReturn _end_localize[2398389] _end_localize[2398389]
        }
        label _end_localize[2398389]
        val local_x[2398391]:string[26] "dead at end of block" "insert auto destroy"
        (2398393 'move' local_x[2398391] ret[2398328])
        const-val tmp[2398396]:bool[10] "dead after last mention" "const" "temp"
        (2398398 'move' tmp[2398396](2398400 '.v' local_x[2398391] hasEscapes[30752]))
        if tmp[2398396]
        {
          const-val call_tmp[2398405]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398407 'move' call_tmp[2398405](2398410 call qio_int_to_err[223722] EILSEQ[224532]))
          (2398412 '=' ret[2398326] call_tmp[2398405])
          ref i_x[2398415]:string[26] "temp"
          (2398417 'move' i_x[2398415](2398419 'set reference' local_x[2398391]))
          (2398422 call deinit[30834] i_x[2398415])
          gotoReturn _end__write_binary_internal[2398506] _end__write_binary_internal[2398506]
        }
        const-val call_tmp[2398427]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2398429 'move' call_tmp[2398427](2398432 call qio_channel_str_style[233175] coerce_tmp[1168219]))
        const-val coerce_tmp[2398434]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2398436 'move' coerce_tmp[2398434](2398438 '.v' local_x[2398391] locale_id[30757]))
        const-val call_tmp[2398441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2398443 'move' call_tmp[2398441](2398445 '!=' coerce_tmp[2398434] chpl_nodeID[208207]))
        if call_tmp[2398441]
        {
          (2398451 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2398454]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2398456 'move' coerce_tmp[2398454](2398458 '.v' local_x[2398391] buff[30740]))
        const-val call_tmp[2398461]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2398463 'move' call_tmp[2398461](2398465 'cast' c_string[19] coerce_tmp[2398454]))
        val ret[2398468]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2398470 'move' ret[2398468](2398472 '.v' local_x[2398391] buffLen[30722]))
        const-val call_tmp[2398475]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2398477]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2398479 'move' coerce_tmp[2398477](2398481 'cast' int(32)[95] 0))
        (2398484 'move' call_tmp[2398475](2398487 call qio_channel_write_string[234477] coerce_tmp[2398477] 2 call_tmp[2398427] coerce_tmp[1168219] call_tmp[2398461] ret[2398468]))
        (2398494 'move' ret[2398326] call_tmp[2398475])
        ref i_x[2398497]:string[26] "temp"
        (2398499 'move' i_x[2398497](2398501 'set reference' local_x[2398391]))
        (2398504 call deinit[30834] i_x[2398497])
        label _end__write_binary_internal[2398506]
        (2398508 '=' e[2398242] ret[2398326])
      }
      {
        const-val call_tmp[2398512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2398514 'move' call_tmp[2398512](2398516 '==' tmp[2398289] little[231017]))
        if call_tmp[2398512]
        {
          val ret[2398521]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2398523]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2398525]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398527 'move' coerce_tmp[2398525](2398529 '.v' x[1165359] locale_id[30757]))
          const-val call_tmp[2398532]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398534 'move' call_tmp[2398532](2398536 '==' coerce_tmp[2398525] chpl_nodeID[208207]))
          if call_tmp[2398532]
          {
            const-val ret[2398541]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2398543]:string[26] "dead at end of block" "insert auto destroy"
            (2398546 call init[30763] ret[2398543])
            const-val coerce_tmp[2398548]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2398550 'move' coerce_tmp[2398548](2398552 '.v' x[1165359] cachedNumCodepoints[30734]))
            (2398555 '.=' ret[2398543] cachedNumCodepoints[30734] coerce_tmp[2398548])
            (2398560 call initWithBorrowedBuffer[949063] ret[2398543] x[1165359])
            (2398563 'move' ret[2398541] ret[2398543])
            (2398566 'move' ret[2398523] ret[2398541])
            gotoReturn _end_localize[2398584] _end_localize[2398584]
          }
          {
            const-val x[2398572]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2398575 call init=[30774] x[2398572] x[1165359])
            (2398578 'move' ret[2398523] x[2398572])
            gotoReturn _end_localize[2398584] _end_localize[2398584]
          }
          label _end_localize[2398584]
          val local_x[2398586]:string[26] "dead at end of block" "insert auto destroy"
          (2398588 'move' local_x[2398586] ret[2398523])
          const-val tmp[2398591]:bool[10] "dead after last mention" "const" "temp"
          (2398593 'move' tmp[2398591](2398595 '.v' local_x[2398586] hasEscapes[30752]))
          if tmp[2398591]
          {
            const-val call_tmp[2398600]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
            (2398602 'move' call_tmp[2398600](2398605 call qio_int_to_err[223722] EILSEQ[224532]))
            (2398607 '=' ret[2398521] call_tmp[2398600])
            ref i_x[2398610]:string[26] "temp"
            (2398612 'move' i_x[2398610](2398614 'set reference' local_x[2398586]))
            (2398617 call deinit[30834] i_x[2398610])
            gotoReturn _end__write_binary_internal[2398701] _end__write_binary_internal[2398701]
          }
          const-val call_tmp[2398622]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398624 'move' call_tmp[2398622](2398627 call qio_channel_str_style[233175] coerce_tmp[1168219]))
          const-val coerce_tmp[2398629]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398631 'move' coerce_tmp[2398629](2398633 '.v' local_x[2398586] locale_id[30757]))
          const-val call_tmp[2398636]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398638 'move' call_tmp[2398636](2398640 '!=' coerce_tmp[2398629] chpl_nodeID[208207]))
          if call_tmp[2398636]
          {
            (2398646 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2398649]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398651 'move' coerce_tmp[2398649](2398653 '.v' local_x[2398586] buff[30740]))
          const-val call_tmp[2398656]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398658 'move' call_tmp[2398656](2398660 'cast' c_string[19] coerce_tmp[2398649]))
          val ret[2398663]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2398665 'move' ret[2398663](2398667 '.v' local_x[2398586] buffLen[30722]))
          const-val call_tmp[2398670]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2398672]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398674 'move' coerce_tmp[2398672](2398676 'cast' int(32)[95] 0))
          (2398679 'move' call_tmp[2398670](2398682 call qio_channel_write_string[234477] coerce_tmp[2398672] 3 call_tmp[2398622] coerce_tmp[1168219] call_tmp[2398656] ret[2398663]))
          (2398689 'move' ret[2398521] call_tmp[2398670])
          ref i_x[2398692]:string[26] "temp"
          (2398694 'move' i_x[2398692](2398696 'set reference' local_x[2398586]))
          (2398699 call deinit[30834] i_x[2398692])
          label _end__write_binary_internal[2398701]
          (2398703 '=' e[2398242] ret[2398521])
        }
        {
          val ret[2398707]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2398709]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2398711]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398713 'move' coerce_tmp[2398711](2398715 '.v' x[1165359] locale_id[30757]))
          const-val call_tmp[2398718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398720 'move' call_tmp[2398718](2398722 '==' coerce_tmp[2398711] chpl_nodeID[208207]))
          if call_tmp[2398718]
          {
            const-val ret[2398727]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2398729]:string[26] "dead at end of block" "insert auto destroy"
            (2398732 call init[30763] ret[2398729])
            const-val coerce_tmp[2398734]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2398736 'move' coerce_tmp[2398734](2398738 '.v' x[1165359] cachedNumCodepoints[30734]))
            (2398741 '.=' ret[2398729] cachedNumCodepoints[30734] coerce_tmp[2398734])
            (2398746 call initWithBorrowedBuffer[949063] ret[2398729] x[1165359])
            (2398749 'move' ret[2398727] ret[2398729])
            (2398752 'move' ret[2398709] ret[2398727])
            gotoReturn _end_localize[2398770] _end_localize[2398770]
          }
          {
            const-val x[2398758]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2398761 call init=[30774] x[2398758] x[1165359])
            (2398764 'move' ret[2398709] x[2398758])
            gotoReturn _end_localize[2398770] _end_localize[2398770]
          }
          label _end_localize[2398770]
          val local_x[2398772]:string[26] "dead at end of block" "insert auto destroy"
          (2398774 'move' local_x[2398772] ret[2398709])
          const-val tmp[2398777]:bool[10] "dead after last mention" "const" "temp"
          (2398779 'move' tmp[2398777](2398781 '.v' local_x[2398772] hasEscapes[30752]))
          if tmp[2398777]
          {
            const-val call_tmp[2398786]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
            (2398788 'move' call_tmp[2398786](2398791 call qio_int_to_err[223722] EILSEQ[224532]))
            (2398793 '=' ret[2398707] call_tmp[2398786])
            ref i_x[2398796]:string[26] "temp"
            (2398798 'move' i_x[2398796](2398800 'set reference' local_x[2398772]))
            (2398803 call deinit[30834] i_x[2398796])
            gotoReturn _end__write_binary_internal[2398887] _end__write_binary_internal[2398887]
          }
          const-val call_tmp[2398808]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398810 'move' call_tmp[2398808](2398813 call qio_channel_str_style[233175] coerce_tmp[1168219]))
          const-val coerce_tmp[2398815]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398817 'move' coerce_tmp[2398815](2398819 '.v' local_x[2398772] locale_id[30757]))
          const-val call_tmp[2398822]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398824 'move' call_tmp[2398822](2398826 '!=' coerce_tmp[2398815] chpl_nodeID[208207]))
          if call_tmp[2398822]
          {
            (2398832 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2398835]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398837 'move' coerce_tmp[2398835](2398839 '.v' local_x[2398772] buff[30740]))
          const-val call_tmp[2398842]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2398844 'move' call_tmp[2398842](2398846 'cast' c_string[19] coerce_tmp[2398835]))
          val ret[2398849]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2398851 'move' ret[2398849](2398853 '.v' local_x[2398772] buffLen[30722]))
          const-val call_tmp[2398856]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2398858]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2398860 'move' coerce_tmp[2398858](2398862 'cast' int(32)[95] 0))
          (2398865 'move' call_tmp[2398856](2398868 call qio_channel_write_string[234477] coerce_tmp[2398858] 1 call_tmp[2398808] coerce_tmp[1168219] call_tmp[2398842] ret[2398849]))
          (2398875 'move' ret[2398707] call_tmp[2398856])
          ref i_x[2398878]:string[26] "temp"
          (2398880 'move' i_x[2398878](2398882 'set reference' local_x[2398772]))
          (2398885 call deinit[30834] i_x[2398878])
          label _end__write_binary_internal[2398887]
          (2398889 '=' e[2398242] ret[2398707])
        }
      }
    }
    {
      const-val call_tmp[2398895]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      (2398897 'move' call_tmp[2398895](2398900 call _write_text_internal[1173033] coerce_tmp[1168219] x[1165359]))
      (2398903 '=' e[2398242] call_tmp[2398895])
    }
    (2398907 'move' ret[2398240] e[2398242])
    label _end__write_one_internal[2398910]
    val errorExists[2223288]:bool[10] "temp"
    (2223293 'move' errorExists[2223288](2223290 '!=' error[1886617] nil[44]))
    if errorExists[2223288]
    {
      (1886623 '=' error_out[1886612] error[1886617])
      gotoErrorHandlingReturn _end_writeOne[1886614] _end_writeOne[1886614]
    }
    const-val call_tmp[2328178]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328180 'move' call_tmp[2328178](2328183 call qio_err_to_int[223704] ret[2398240]))
    const-val call_tmp[2328185]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328187 'move' call_tmp[2328185](2328189 '==' call_tmp[2328178] 0))
    const-val call_tmp[2328192]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328194 'move' call_tmp[2328192](2328196 '!' call_tmp[2328185]))
    if call_tmp[2328192]
    {
      const-val call_tmp[1165418]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1910596]:string[26] "temp"
      (1165426 call _constructIoErrorMsg[1173868] this[1165355] x[1165359] ret_tmp[1910596])
      (1910599 'move' call_tmp[1165418] ret_tmp[1910596])
      val msg[1165429]:string[26] "dead at end of block" "insert auto destroy"
      (1165431 'move' msg[1165429] call_tmp[1165418])
      const-val call_tmp[2327919]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327921 'move' call_tmp[2327919](2327924 call qio_err_to_int[223704] ret[2398240]))
      const-val call_tmp[2327926]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327928 'move' call_tmp[2327926](2327930 '==' call_tmp[2327919] EILSEQ[224532]))
      if call_tmp[2327926]
      {
        const-val call_tmp[1165460]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905866]:string[26] "temp"
        (1165465 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1165429] ret_tmp[1905866])
        (1905869 'move' call_tmp[1165460] ret_tmp[1905866])
        (1165469 call =[38272] msg[1165429] call_tmp[1165460])
        ref i_x[2247941]:string[26] "temp"
        (2247945 'move' i_x[2247941](2247943 'set reference' call_tmp[1165460]))
        (2247949 call deinit[30834] i_x[2247941])
      }
      val error[1886631]:Error[167984] "error variable" "temp"
      (1886640 'move' error[1886631] nil[44])
      (1165481 call _ch_ioerror[1063054] this[1165355] ret[2398240] msg[1165429] error[1886631])
      val errorExists[2223296]:bool[10] "temp"
      (2223301 'move' errorExists[2223296](2223298 '!=' error[1886631] nil[44]))
      if errorExists[2223296]
      {
        gotoErrorHandling handler[1886632] handler[1886632]
      }
      label handler[1886632]
      val errorExists[2223304]:bool[10] "temp"
      (2223309 'move' errorExists[2223304](2223306 '!=' error[1886631] nil[44]))
      if errorExists[2223304]
      {
        (1886647 '=' error_out[1886612] error[1886631])
        ref i_x[2247953]:string[26] "temp"
        (2247957 'move' i_x[2247953](2247955 'set reference' msg[1165429]))
        (2247961 call deinit[30834] i_x[2247953])
        gotoErrorHandlingReturn _end_writeOne[1886614] _end_writeOne[1886614]
      }
      ref i_x[2247965]:string[26] "temp"
      (2247969 'move' i_x[2247965](2247967 'set reference' msg[1165429]))
      (2247973 call deinit[30834] i_x[2247965])
    }
    label _end_writeOne[1886614]
    (1165489 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1174102](const  ref arg this[1174108]:channel(true,dynamic,false)[1061136], const  ref arg x[1174112]:codepointIndex[28277], const  ref arg loc[1174114]:locale[28], ref arg error_out[1886676]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1175399]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1175403 'move' coerce_tmp[1175399](2567855 '.v' this[1174108] _channel_internal[1061129]))
    val error[1886681]:Error[167984] "error variable" "temp"
    (1886683 'move' error[1886681] nil[44])
    val ret[2399620]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2399622]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2399624]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2399626]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2399628 'move' call_tmp[2399626](2399631 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2399634 'move' call_tmp[2399624] call_tmp[2399626])
    const-val call_tmp[2399637]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2399639]:locale[28] "temp"
    (2399642 call chpl_localeID_to_locale[92852] call_tmp[2399624] ret_tmp[2399639])
    (2399645 'move' call_tmp[2399637] ret_tmp[2399639])
    (2399648 'move' call_tmp[2399622] call_tmp[2399637])
    const-val call_tmp[2399651]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2399653]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (2399656 call init[1068577] initTemp[2399653] call_tmp[2399622] coerce_tmp[1175399] loc[1174114])
    (2399661 'move' call_tmp[2399651] initTemp[2399653])
    val writer[2399664]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2399666 'move' writer[2399664] call_tmp[2399651])
    const-val call_tmp[2399671]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2399673 'move' call_tmp[2399671](2399676 call qio_int_to_err[223722] 0))
    val error[2399681]:Error[167984] "error variable" "temp"
    (2399683 'move' error[2399681] nil[44])
    (2399687 call writeThis[1175534] x[1174112] writer[2399664] error[2399681])
    val errorExists[2399691]:bool[10] "temp"
    (2399693 'move' errorExists[2399691](2399695 '!=' error[2399681] nil[44]))
    if errorExists[2399691]
    {
      gotoErrorHandling handler[2399703] handler[2399703]
    }
    label handler[2399703]
    val errorExists[2399705]:bool[10] "temp"
    (2399707 'move' errorExists[2399705](2399709 '!=' error[2399681] nil[44]))
    if errorExists[2399705]
    {
      (2399714 '=' error[1886681] error[2399681])
      (2399717 '.=' writer[2399664] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
      ref i_x[2399721]:channel(true,dynamic,false)[1061136] "temp"
      (2399723 'move' i_x[2399721](2399725 'set reference' writer[2399664]))
      (2399728 call deinit[1676346] i_x[2399721])
      ref i_x[2399730]:locale[28] "temp"
      (2399732 'move' i_x[2399730](2399734 'set reference' call_tmp[2399622]))
      (2399737 call deinit[90188] i_x[2399730])
      gotoErrorHandlingReturn _end__write_one_internal[2399767] _end__write_one_internal[2399767]
    }
    (2399742 'move' ret[2399620] call_tmp[2399671])
    (2399745 '.=' writer[2399664] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
    ref i_x[2399749]:channel(true,dynamic,false)[1061136] "temp"
    (2399751 'move' i_x[2399749](2399753 'set reference' writer[2399664]))
    (2399756 call deinit[1676346] i_x[2399749])
    ref i_x[2399758]:locale[28] "temp"
    (2399760 'move' i_x[2399758](2399762 'set reference' call_tmp[2399622]))
    (2399765 call deinit[90188] i_x[2399758])
    label _end__write_one_internal[2399767]
    val errorExists[2223320]:bool[10] "temp"
    (2223325 'move' errorExists[2223320](2223322 '!=' error[1886681] nil[44]))
    if errorExists[2223320]
    {
      (1886687 '=' error_out[1886676] error[1886681])
      gotoErrorHandlingReturn _end_writeOne[1886678] _end_writeOne[1886678]
    }
    const-val call_tmp[2328201]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328203 'move' call_tmp[2328201](2328206 call qio_err_to_int[223704] ret[2399620]))
    const-val call_tmp[2328208]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328210 'move' call_tmp[2328208](2328212 '==' call_tmp[2328201] 0))
    const-val call_tmp[2328215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328217 'move' call_tmp[2328215](2328219 '!' call_tmp[2328208]))
    if call_tmp[2328215]
    {
      const-val call_tmp[1174171]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1910610]:string[26] "temp"
      (1174179 call _constructIoErrorMsg[1175586] this[1174108] x[1174112] ret_tmp[1910610])
      (1910613 'move' call_tmp[1174171] ret_tmp[1910610])
      val msg[1174182]:string[26] "dead at end of block" "insert auto destroy"
      (1174184 'move' msg[1174182] call_tmp[1174171])
      const-val call_tmp[2327936]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327938 'move' call_tmp[2327936](2327941 call qio_err_to_int[223704] ret[2399620]))
      const-val call_tmp[2327943]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327945 'move' call_tmp[2327943](2327947 '==' call_tmp[2327936] EILSEQ[224532]))
      if call_tmp[2327943]
      {
        const-val call_tmp[1174213]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1905872]:string[26] "temp"
        (1174218 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1174182] ret_tmp[1905872])
        (1905875 'move' call_tmp[1174213] ret_tmp[1905872])
        (1174222 call =[38272] msg[1174182] call_tmp[1174213])
        ref i_x[2248073]:string[26] "temp"
        (2248077 'move' i_x[2248073](2248075 'set reference' call_tmp[1174213]))
        (2248081 call deinit[30834] i_x[2248073])
      }
      val error[1886695]:Error[167984] "error variable" "temp"
      (1886704 'move' error[1886695] nil[44])
      (1174234 call _ch_ioerror[1063054] this[1174108] ret[2399620] msg[1174182] error[1886695])
      val errorExists[2223328]:bool[10] "temp"
      (2223333 'move' errorExists[2223328](2223330 '!=' error[1886695] nil[44]))
      if errorExists[2223328]
      {
        gotoErrorHandling handler[1886696] handler[1886696]
      }
      label handler[1886696]
      val errorExists[2223336]:bool[10] "temp"
      (2223341 'move' errorExists[2223336](2223338 '!=' error[1886695] nil[44]))
      if errorExists[2223336]
      {
        (1886711 '=' error_out[1886676] error[1886695])
        ref i_x[2248085]:string[26] "temp"
        (2248089 'move' i_x[2248085](2248087 'set reference' msg[1174182]))
        (2248093 call deinit[30834] i_x[2248085])
        gotoErrorHandlingReturn _end_writeOne[1886678] _end_writeOne[1886678]
      }
      ref i_x[2248097]:string[26] "temp"
      (2248101 'move' i_x[2248097](2248099 'set reference' msg[1174182]))
      (2248105 call deinit[30834] i_x[2248097])
    }
    label _end_writeOne[1886678]
    (1174242 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._writeOne[1553475](const  ref arg this[1553481]:channel(true,dynamic,true)[1022014], const  ref arg x[1553485]:[domain(1,int(64),false)] real(64)[1366029], const  ref arg loc[1553487]:locale[28], ref arg error_out[1888135]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1555244]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1555248 'move' coerce_tmp[1555244](2572228 '.v' this[1553481] _channel_internal[1022007]))
    val error[1888140]:Error[167984] "error variable" "temp"
    (1888142 'move' error[1888140] nil[44])
    val ret[2507882]:syserr[223672] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2507884]:locale[28] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2507886]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2507888]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2507890 'move' call_tmp[2507888](2507893 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2507896 'move' call_tmp[2507886] call_tmp[2507888])
    const-val call_tmp[2507899]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2507901]:locale[28] "temp"
    (2507904 call chpl_localeID_to_locale[92852] call_tmp[2507886] ret_tmp[2507901])
    (2507907 'move' call_tmp[2507899] ret_tmp[2507901])
    (2507910 'move' call_tmp[2507884] call_tmp[2507899])
    const-val call_tmp[2507913]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "maybe param" "temp"
    const-val initTemp[2507915]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "temp"
    (2507918 call init[1068577] initTemp[2507915] call_tmp[2507884] coerce_tmp[1555244] loc[1553487])
    (2507923 'move' call_tmp[2507913] initTemp[2507915])
    val writer[2507926]:channel(true,dynamic,false)[1061136] "dead at end of block" "delay instantiation" "insert auto destroy"
    (2507928 'move' writer[2507926] call_tmp[2507913])
    const-val call_tmp[2507933]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507935 'move' call_tmp[2507933](2507938 call qio_int_to_err[223722] 0))
    val error[2507943]:Error[167984] "error variable" "temp"
    (2507945 'move' error[2507943] nil[44])
    (2507949 call writeThis[1555402] x[1553485] writer[2507926] error[2507943])
    val errorExists[2507953]:bool[10] "temp"
    (2507955 'move' errorExists[2507953](2507957 '!=' error[2507943] nil[44]))
    if errorExists[2507953]
    {
      gotoErrorHandling handler[2507965] handler[2507965]
    }
    label handler[2507965]
    val errorExists[2507967]:bool[10] "temp"
    (2507969 'move' errorExists[2507967](2507971 '!=' error[2507943] nil[44]))
    if errorExists[2507967]
    {
      (2507976 '=' error[1888140] error[2507943])
      (2507979 '.=' writer[2507926] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
      ref i_x[2507983]:channel(true,dynamic,false)[1061136] "temp"
      (2507985 'move' i_x[2507983](2507987 'set reference' writer[2507926]))
      (2507990 call deinit[1676346] i_x[2507983])
      ref i_x[2507992]:locale[28] "temp"
      (2507994 'move' i_x[2507992](2507996 'set reference' call_tmp[2507884]))
      (2507999 call deinit[90188] i_x[2507992])
      gotoErrorHandlingReturn _end__write_one_internal[2508029] _end__write_one_internal[2508029]
    }
    (2508004 'move' ret[2507882] call_tmp[2507933])
    (2508007 '.=' writer[2507926] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
    ref i_x[2508011]:channel(true,dynamic,false)[1061136] "temp"
    (2508013 'move' i_x[2508011](2508015 'set reference' writer[2507926]))
    (2508018 call deinit[1676346] i_x[2508011])
    ref i_x[2508020]:locale[28] "temp"
    (2508022 'move' i_x[2508020](2508024 'set reference' call_tmp[2507884]))
    (2508027 call deinit[90188] i_x[2508020])
    label _end__write_one_internal[2508029]
    val errorExists[2224056]:bool[10] "temp"
    (2224061 'move' errorExists[2224056](2224058 '!=' error[1888140] nil[44]))
    if errorExists[2224056]
    {
      (1888146 '=' error_out[1888135] error[1888140])
      gotoErrorHandlingReturn _end_writeOne[1888137] _end_writeOne[1888137]
    }
    const-val call_tmp[2328270]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328272 'move' call_tmp[2328270](2328275 call qio_err_to_int[223704] ret[2507882]))
    const-val call_tmp[2328277]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328279 'move' call_tmp[2328277](2328281 '==' call_tmp[2328270] 0))
    const-val call_tmp[2328284]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328286 'move' call_tmp[2328284](2328288 '!' call_tmp[2328277]))
    if call_tmp[2328284]
    {
      const-val call_tmp[1553544]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916955]:string[26] "temp"
      (1553552 call _constructIoErrorMsg[1586029] this[1553481] x[1553485] ret_tmp[1916955])
      (1916958 'move' call_tmp[1553544] ret_tmp[1916955])
      val msg[1553555]:string[26] "dead at end of block" "insert auto destroy"
      (1553557 'move' msg[1553555] call_tmp[1553544])
      const-val call_tmp[2327987]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327989 'move' call_tmp[2327987](2327992 call qio_err_to_int[223704] ret[2507882]))
      const-val call_tmp[2327994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327996 'move' call_tmp[2327994](2327998 '==' call_tmp[2327987] EILSEQ[224532]))
      if call_tmp[2327994]
      {
        const-val call_tmp[1553586]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906088]:string[26] "temp"
        (1553591 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1553555] ret_tmp[1906088])
        (1906091 'move' call_tmp[1553586] ret_tmp[1906088])
        (1553595 call =[38272] msg[1553555] call_tmp[1553586])
        ref i_x[2249357]:string[26] "temp"
        (2249361 'move' i_x[2249357](2249359 'set reference' call_tmp[1553586]))
        (2249365 call deinit[30834] i_x[2249357])
      }
      val error[1888154]:Error[167984] "error variable" "temp"
      (1888163 'move' error[1888154] nil[44])
      (1553607 call _ch_ioerror[1552948] this[1553481] ret[2507882] msg[1553555] error[1888154])
      val errorExists[2224064]:bool[10] "temp"
      (2224069 'move' errorExists[2224064](2224066 '!=' error[1888154] nil[44]))
      if errorExists[2224064]
      {
        gotoErrorHandling handler[1888155] handler[1888155]
      }
      label handler[1888155]
      val errorExists[2224072]:bool[10] "temp"
      (2224077 'move' errorExists[2224072](2224074 '!=' error[1888154] nil[44]))
      if errorExists[2224072]
      {
        (1888170 '=' error_out[1888135] error[1888154])
        ref i_x[2249369]:string[26] "temp"
        (2249373 'move' i_x[2249369](2249371 'set reference' msg[1553555]))
        (2249377 call deinit[30834] i_x[2249369])
        gotoErrorHandlingReturn _end_writeOne[1888137] _end_writeOne[1888137]
      }
      ref i_x[2249381]:string[26] "temp"
      (2249385 'move' i_x[2249381](2249383 'set reference' msg[1553555]))
      (2249389 call deinit[30834] i_x[2249381])
    }
    label _end_writeOne[1888137]
    (1553615 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1565749](const  ref arg this[1565755]:channel(true,dynamic,false)[1061136], const  ref arg x[1565759]:ioLiteral[238841], const  ref arg loc[1565761]:locale[28], ref arg error_out[1888816]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1568622]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1568626 'move' coerce_tmp[1568622](2572353 '.v' this[1565755] _channel_internal[1061129]))
    val error[1888821]:Error[167984] "error variable" "temp"
    (1888823 'move' error[1888821] nil[44])
    (2509109 call qio_int_to_err[223722] 0)
    ref call_tmp[2509111]:string[26] "dead after last mention" "maybe param" "temp"
    (2509113 'move' call_tmp[2509111](2509115 '.' x[1565759] val[238816]))
    const-val call_tmp[2509118]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val ret[2509120]:string[26] "dead after last mention" "RVV" "temp"
    const-val coerce_tmp[2509122]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2509124 'move' coerce_tmp[2509122](2509126 '.v' call_tmp[2509111] locale_id[30757]))
    const-val call_tmp[2509129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2509131 'move' call_tmp[2509129](2509133 '==' coerce_tmp[2509122] chpl_nodeID[208207]))
    if call_tmp[2509129]
    {
      const-val ret[2509138]:string[26] "dead after last mention" "RVV" "temp"
      val ret[2509140]:string[26] "dead at end of block" "insert auto destroy"
      (2509143 call init[30763] ret[2509140])
      const-val coerce_tmp[2509145]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2509147 'move' coerce_tmp[2509145](2509149 '.v' call_tmp[2509111] cachedNumCodepoints[30734]))
      (2509152 '.=' ret[2509140] cachedNumCodepoints[30734] coerce_tmp[2509145])
      (2509157 call initWithBorrowedBuffer[949063] ret[2509140] call_tmp[2509111])
      (2509160 'move' ret[2509138] ret[2509140])
      (2509163 'move' ret[2509120] ret[2509138])
      gotoReturn _end_localize[2509181] _end_localize[2509181]
    }
    {
      const-val x[2509169]:string[26] "dead at end of block" "const" "insert auto destroy"
      (2509172 call init=[30774] x[2509169] call_tmp[2509111])
      (2509175 'move' ret[2509120] x[2509169])
      gotoReturn _end_localize[2509181] _end_localize[2509181]
    }
    label _end_localize[2509181]
    (2509183 'move' call_tmp[2509118] ret[2509120])
    const-val coerce_tmp[2509186]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2509188 'move' coerce_tmp[2509186](2509190 '.v' call_tmp[2509118] locale_id[30757]))
    const-val call_tmp[2509193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2509195 'move' call_tmp[2509193](2509197 '!=' coerce_tmp[2509186] chpl_nodeID[208207]))
    if call_tmp[2509193]
    {
      (2509203 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    val coerce_tmp[2509206]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2509208 'move' coerce_tmp[2509206](2509210 '.v' call_tmp[2509118] buff[30740]))
    const-val call_tmp[2509213]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2509215 'move' call_tmp[2509213](2509217 'cast' c_string[19] coerce_tmp[2509206]))
    ref call_tmp[2509220]:string[26] "dead after last mention" "maybe param" "temp"
    (2509222 'move' call_tmp[2509220](2509224 '.' x[1565759] val[238816]))
    val ret[2509227]:int(64)[13] "dead after last mention" "RVV" "temp"
    (2509229 'move' ret[2509227](2509231 '.v' call_tmp[2509220] buffLen[30722]))
    const-val call_tmp[2509234]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2509236]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2509238 'move' coerce_tmp[2509236](2509240 'cast' int(32)[95] 0))
    (2509243 'move' call_tmp[2509234](2509246 call qio_channel_print_literal[235005] coerce_tmp[2509236] coerce_tmp[1568622] call_tmp[2509213] ret[2509227]))
    ref i_x[2509254]:string[26] "temp"
    (2509256 'move' i_x[2509254](2509258 'set reference' call_tmp[2509118]))
    (2509261 call deinit[30834] i_x[2509254])
    val errorExists[2224336]:bool[10] "temp"
    (2224341 'move' errorExists[2224336](2224338 '!=' error[1888821] nil[44]))
    if errorExists[2224336]
    {
      (1888827 '=' error_out[1888816] error[1888821])
      gotoErrorHandlingReturn _end_writeOne[1888818] _end_writeOne[1888818]
    }
    const-val call_tmp[2328224]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328226 'move' call_tmp[2328224](2328229 call qio_err_to_int[223704] call_tmp[2509234]))
    const-val call_tmp[2328231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328233 'move' call_tmp[2328231](2328235 '==' call_tmp[2328224] 0))
    const-val call_tmp[2328238]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328240 'move' call_tmp[2328238](2328242 '!' call_tmp[2328231]))
    if call_tmp[2328238]
    {
      const-val call_tmp[1565818]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916887]:string[26] "temp"
      (1565826 call _constructIoErrorMsg[1568710] this[1565755] x[1565759] ret_tmp[1916887])
      (1916890 'move' call_tmp[1565818] ret_tmp[1916887])
      val msg[1565829]:string[26] "dead at end of block" "insert auto destroy"
      (1565831 'move' msg[1565829] call_tmp[1565818])
      const-val call_tmp[2327953]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327955 'move' call_tmp[2327953](2327958 call qio_err_to_int[223704] call_tmp[2509234]))
      const-val call_tmp[2327960]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327962 'move' call_tmp[2327960](2327964 '==' call_tmp[2327953] EILSEQ[224532]))
      if call_tmp[2327960]
      {
        const-val call_tmp[1565860]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906100]:string[26] "temp"
        (1565865 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1565829] ret_tmp[1906100])
        (1906103 'move' call_tmp[1565860] ret_tmp[1906100])
        (1565869 call =[38272] msg[1565829] call_tmp[1565860])
        ref i_x[2249429]:string[26] "temp"
        (2249433 'move' i_x[2249429](2249431 'set reference' call_tmp[1565860]))
        (2249437 call deinit[30834] i_x[2249429])
      }
      val error[1888835]:Error[167984] "error variable" "temp"
      (1888844 'move' error[1888835] nil[44])
      (1565881 call _ch_ioerror[1063054] this[1565755] call_tmp[2509234] msg[1565829] error[1888835])
      val errorExists[2224344]:bool[10] "temp"
      (2224349 'move' errorExists[2224344](2224346 '!=' error[1888835] nil[44]))
      if errorExists[2224344]
      {
        gotoErrorHandling handler[1888836] handler[1888836]
      }
      label handler[1888836]
      val errorExists[2224352]:bool[10] "temp"
      (2224357 'move' errorExists[2224352](2224354 '!=' error[1888835] nil[44]))
      if errorExists[2224352]
      {
        (1888851 '=' error_out[1888816] error[1888835])
        ref i_x[2249441]:string[26] "temp"
        (2249445 'move' i_x[2249441](2249443 'set reference' msg[1565829]))
        (2249449 call deinit[30834] i_x[2249441])
        gotoErrorHandlingReturn _end_writeOne[1888818] _end_writeOne[1888818]
      }
      ref i_x[2249453]:string[26] "temp"
      (2249457 'move' i_x[2249453](2249455 'set reference' msg[1565829]))
      (2249461 call deinit[30834] i_x[2249453])
    }
    label _end_writeOne[1888818]
    (1565889 return _void[55])
  }
  function channel(true,dynamic,false)[1061136]._writeOne[1578717](const  ref arg this[1578723]:channel(true,dynamic,false)[1061136], const in arg x[1578727]:real(64)[16], const  ref arg loc[1578729]:locale[28], ref arg error_out[1889006]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1579826]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1579830 'move' coerce_tmp[1579826](2572407 '.v' this[1578723] _channel_internal[1061129]))
    val error[1889011]:Error[167984] "error variable" "temp"
    (1889013 'move' error[1889011] nil[44])
    val ret[2511386]:syserr[223672] "dead after last mention" "RVV" "temp"
    val e[2511388]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2511390]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2511392 'move' call_tmp[2511390](2511395 call qio_int_to_err[223722] 0))
    (2511397 'move' e[2511388] call_tmp[2511390])
    const-val call_tmp[2511400]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2511402 'move' call_tmp[2511400](2511405 call qio_channel_binary[233145] coerce_tmp[1579826]))
    const-val call_tmp[2511407]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2511409 'move' call_tmp[2511407](2511412 call qio_channel_byteorder[233160] coerce_tmp[1579826]))
    const-val coerce_tmp[2511419]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2511421 'move' coerce_tmp[2511419](2511423 'cast' int(64)[13] call_tmp[2511400]))
    const-val call_tmp[2511426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2511428 'move' call_tmp[2511426](2511430 '!=' coerce_tmp[2511419] 0))
    if call_tmp[2511426]
    {
      const-val tmp[2511435]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2511437]:Error[167984] "error variable" "temp"
      (2511439 'move' error[2511437] nil[44])
      (2511442 'move' tmp[2511435](2511445 call _cast[1070497] call_tmp[2511407] error[2511437]))
      val errorExists[2511448]:bool[10] "temp"
      (2511450 'move' errorExists[2511448](2511452 '!=' error[2511437] nil[44]))
      if errorExists[2511448]
      {
        (2511457 '=' error[1889011] error[2511437])
        gotoErrorHandlingReturn _end__write_one_internal[2511561] _end__write_one_internal[2511561]
      }
      const-val call_tmp[2511463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2511465 'move' call_tmp[2511463](2511467 '==' tmp[2511435] big[231014]))
      if call_tmp[2511463]
      {
        const-val call_tmp[2511472]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2511474]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2511476 'move' coerce_tmp[2511474](2511478 'cast' int(32)[95] 0))
        (2511481 'move' call_tmp[2511472](2511484 call qio_channel_write_float64[234354] coerce_tmp[2511474] 2 coerce_tmp[1579826] x[1578727]))
        (2511489 '=' e[2511388] call_tmp[2511472])
      }
      {
        const-val call_tmp[2511493]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2511495 'move' call_tmp[2511493](2511497 '==' tmp[2511435] little[231017]))
        if call_tmp[2511493]
        {
          const-val call_tmp[2511502]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2511504]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2511506 'move' coerce_tmp[2511504](2511508 'cast' int(32)[95] 0))
          (2511511 'move' call_tmp[2511502](2511514 call qio_channel_write_float64[234354] coerce_tmp[2511504] 3 coerce_tmp[1579826] x[1578727]))
          (2511519 '=' e[2511388] call_tmp[2511502])
        }
        {
          const-val call_tmp[2511523]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2511525]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2511527 'move' coerce_tmp[2511525](2511529 'cast' int(32)[95] 0))
          (2511532 'move' call_tmp[2511523](2511535 call qio_channel_write_float64[234354] coerce_tmp[2511525] 1 coerce_tmp[1579826] x[1578727]))
          (2511540 '=' e[2511388] call_tmp[2511523])
        }
      }
    }
    {
      const-val call_tmp[2511546]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      (2511548 'move' call_tmp[2511546](2511551 call _write_text_internal[1584616] coerce_tmp[1579826] x[1578727]))
      (2511554 '=' e[2511388] call_tmp[2511546])
    }
    (2511558 'move' ret[2511386] e[2511388])
    label _end__write_one_internal[2511561]
    val errorExists[2224432]:bool[10] "temp"
    (2224437 'move' errorExists[2224432](2224434 '!=' error[1889011] nil[44]))
    if errorExists[2224432]
    {
      (1889017 '=' error_out[1889006] error[1889011])
      gotoErrorHandlingReturn _end_writeOne[1889008] _end_writeOne[1889008]
    }
    const-val call_tmp[2328247]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328249 'move' call_tmp[2328247](2328252 call qio_err_to_int[223704] ret[2511386]))
    const-val call_tmp[2328254]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328256 'move' call_tmp[2328254](2328258 '==' call_tmp[2328247] 0))
    const-val call_tmp[2328261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328263 'move' call_tmp[2328261](2328265 '!' call_tmp[2328254]))
    if call_tmp[2328261]
    {
      const-val call_tmp[1578786]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916941]:string[26] "temp"
      (1578794 call _constructIoErrorMsg[1585456] this[1578723] x[1578727] ret_tmp[1916941])
      (1916944 'move' call_tmp[1578786] ret_tmp[1916941])
      val msg[1578797]:string[26] "dead at end of block" "insert auto destroy"
      (1578799 'move' msg[1578797] call_tmp[1578786])
      const-val call_tmp[2327970]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327972 'move' call_tmp[2327970](2327975 call qio_err_to_int[223704] ret[2511386]))
      const-val call_tmp[2327977]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2327979 'move' call_tmp[2327977](2327981 '==' call_tmp[2327970] EILSEQ[224532]))
      if call_tmp[2327977]
      {
        const-val call_tmp[1578828]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906118]:string[26] "temp"
        (1578833 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1578797] ret_tmp[1906118])
        (1906121 'move' call_tmp[1578828] ret_tmp[1906118])
        (1578837 call =[38272] msg[1578797] call_tmp[1578828])
        ref i_x[2249513]:string[26] "temp"
        (2249517 'move' i_x[2249513](2249515 'set reference' call_tmp[1578828]))
        (2249521 call deinit[30834] i_x[2249513])
      }
      val error[1889025]:Error[167984] "error variable" "temp"
      (1889034 'move' error[1889025] nil[44])
      (1578849 call _ch_ioerror[1063054] this[1578723] ret[2511386] msg[1578797] error[1889025])
      val errorExists[2224440]:bool[10] "temp"
      (2224445 'move' errorExists[2224440](2224442 '!=' error[1889025] nil[44]))
      if errorExists[2224440]
      {
        gotoErrorHandling handler[1889026] handler[1889026]
      }
      label handler[1889026]
      val errorExists[2224448]:bool[10] "temp"
      (2224453 'move' errorExists[2224448](2224450 '!=' error[1889025] nil[44]))
      if errorExists[2224448]
      {
        (1889041 '=' error_out[1889006] error[1889025])
        ref i_x[2249525]:string[26] "temp"
        (2249529 'move' i_x[2249525](2249527 'set reference' msg[1578797]))
        (2249533 call deinit[30834] i_x[2249525])
        gotoErrorHandlingReturn _end_writeOne[1889008] _end_writeOne[1889008]
      }
      ref i_x[2249537]:string[26] "temp"
      (2249541 'move' i_x[2249537](2249539 'set reference' msg[1578797]))
      (2249545 call deinit[30834] i_x[2249537])
    }
    label _end_writeOne[1889008]
    (1578857 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._writeOne[1586285](const  ref arg this[1586291]:channel(true,dynamic,true)[1022014], const  ref arg x[1586295]:ioNewline[238789], const  ref arg loc[1586297]:locale[28], ref arg error_out[1889070]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1589157]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1589161 'move' coerce_tmp[1589157](2572415 '.v' this[1586291] _channel_internal[1022007]))
    val error[1889075]:Error[167984] "error variable" "temp"
    (1889077 'move' error[1889075] nil[44])
    (2511586 call qio_int_to_err[223722] 0)
    const-val call_tmp[2511588]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[2511590]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2511592 'move' coerce_tmp[2511590](2511594 'cast' int(32)[95] 0))
    (2511597 'move' call_tmp[2511588](2511600 call qio_channel_write_newline[234823] coerce_tmp[2511590] coerce_tmp[1589157]))
    val errorExists[2224464]:bool[10] "temp"
    (2224469 'move' errorExists[2224464](2224466 '!=' error[1889075] nil[44]))
    if errorExists[2224464]
    {
      (1889081 '=' error_out[1889070] error[1889075])
      gotoErrorHandlingReturn _end_writeOne[1889072] _end_writeOne[1889072]
    }
    const-val call_tmp[2328293]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328295 'move' call_tmp[2328293](2328298 call qio_err_to_int[223704] call_tmp[2511588]))
    const-val call_tmp[2328300]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328302 'move' call_tmp[2328300](2328304 '==' call_tmp[2328293] 0))
    const-val call_tmp[2328307]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328309 'move' call_tmp[2328307](2328311 '!' call_tmp[2328300]))
    if call_tmp[2328307]
    {
      const-val call_tmp[1586354]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916969]:string[26] "temp"
      (1586362 call _constructIoErrorMsg[1589213] this[1586291] x[1586295] ret_tmp[1916969])
      (1916972 'move' call_tmp[1586354] ret_tmp[1916969])
      val msg[1586365]:string[26] "dead at end of block" "insert auto destroy"
      (1586367 'move' msg[1586365] call_tmp[1586354])
      const-val call_tmp[2328004]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328006 'move' call_tmp[2328004](2328009 call qio_err_to_int[223704] call_tmp[2511588]))
      const-val call_tmp[2328011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328013 'move' call_tmp[2328011](2328015 '==' call_tmp[2328004] EILSEQ[224532]))
      if call_tmp[2328011]
      {
        const-val call_tmp[1586396]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906124]:string[26] "temp"
        (1586401 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1586365] ret_tmp[1906124])
        (1906127 'move' call_tmp[1586396] ret_tmp[1906124])
        (1586405 call =[38272] msg[1586365] call_tmp[1586396])
        ref i_x[2249549]:string[26] "temp"
        (2249553 'move' i_x[2249549](2249551 'set reference' call_tmp[1586396]))
        (2249557 call deinit[30834] i_x[2249549])
      }
      val error[1889089]:Error[167984] "error variable" "temp"
      (1889098 'move' error[1889089] nil[44])
      (1586417 call _ch_ioerror[1552948] this[1586291] call_tmp[2511588] msg[1586365] error[1889089])
      val errorExists[2224472]:bool[10] "temp"
      (2224477 'move' errorExists[2224472](2224474 '!=' error[1889089] nil[44]))
      if errorExists[2224472]
      {
        gotoErrorHandling handler[1889090] handler[1889090]
      }
      label handler[1889090]
      val errorExists[2224480]:bool[10] "temp"
      (2224485 'move' errorExists[2224480](2224482 '!=' error[1889089] nil[44]))
      if errorExists[2224480]
      {
        (1889105 '=' error_out[1889070] error[1889089])
        ref i_x[2249561]:string[26] "temp"
        (2249565 'move' i_x[2249561](2249563 'set reference' msg[1586365]))
        (2249569 call deinit[30834] i_x[2249561])
        gotoErrorHandlingReturn _end_writeOne[1889072] _end_writeOne[1889072]
      }
      ref i_x[2249573]:string[26] "temp"
      (2249577 'move' i_x[2249573](2249575 'set reference' msg[1586365]))
      (2249581 call deinit[30834] i_x[2249573])
    }
    label _end_writeOne[1889072]
    (1586425 return _void[55])
  }
  function channel(true,dynamic,true)[1022014]._writeOne[1589985](const  ref arg this[1589991]:channel(true,dynamic,true)[1022014], const  ref arg x[1589995]:string[26], const  ref arg loc[1589997]:locale[28], ref arg error_out[1889271]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val coerce_tmp[1590129]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1590133 'move' coerce_tmp[1590129](2572438 '.v' this[1589991] _channel_internal[1022007]))
    val error[1889276]:Error[167984] "error variable" "temp"
    (1889278 'move' error[1889276] nil[44])
    val ret[2398921]:syserr[223672] "dead after last mention" "RVV" "temp"
    val e[2398923]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2398925]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2398927 'move' call_tmp[2398925](2398930 call qio_int_to_err[223722] 0))
    (2398932 'move' e[2398923] call_tmp[2398925])
    const-val call_tmp[2398935]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2398937 'move' call_tmp[2398935](2398940 call qio_channel_binary[233145] coerce_tmp[1590129]))
    const-val call_tmp[2398942]:uint(8)[100] "dead at end of block" "maybe param" "temp"
    (2398944 'move' call_tmp[2398942](2398947 call qio_channel_byteorder[233160] coerce_tmp[1590129]))
    const-val coerce_tmp[2398954]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2398956 'move' coerce_tmp[2398954](2398958 'cast' int(64)[13] call_tmp[2398935]))
    const-val call_tmp[2398961]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2398963 'move' call_tmp[2398961](2398965 '!=' coerce_tmp[2398954] 0))
    if call_tmp[2398961]
    {
      const-val tmp[2398970]:iokind[231019] "dead after last mention" "expr temp" "maybe param" "temp"
      val error[2398972]:Error[167984] "error variable" "temp"
      (2398974 'move' error[2398972] nil[44])
      (2398977 'move' tmp[2398970](2398980 call _cast[1070497] call_tmp[2398942] error[2398972]))
      val errorExists[2398983]:bool[10] "temp"
      (2398985 'move' errorExists[2398983](2398987 '!=' error[2398972] nil[44]))
      if errorExists[2398983]
      {
        (2398992 '=' error[1889276] error[2398972])
        gotoErrorHandlingReturn _end__write_one_internal[2399591] _end__write_one_internal[2399591]
      }
      const-val call_tmp[2398998]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2399000 'move' call_tmp[2398998](2399002 '==' tmp[2398970] big[231014]))
      if call_tmp[2398998]
      {
        val ret[2399007]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
        val ret[2399009]:string[26] "dead after last mention" "RVV" "temp"
        const-val coerce_tmp[2399011]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2399013 'move' coerce_tmp[2399011](2399015 '.v' x[1589995] locale_id[30757]))
        const-val call_tmp[2399018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2399020 'move' call_tmp[2399018](2399022 '==' coerce_tmp[2399011] chpl_nodeID[208207]))
        if call_tmp[2399018]
        {
          const-val ret[2399027]:string[26] "dead after last mention" "RVV" "temp"
          val ret[2399029]:string[26] "dead at end of block" "insert auto destroy"
          (2399032 call init[30763] ret[2399029])
          const-val coerce_tmp[2399034]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399036 'move' coerce_tmp[2399034](2399038 '.v' x[1589995] cachedNumCodepoints[30734]))
          (2399041 '.=' ret[2399029] cachedNumCodepoints[30734] coerce_tmp[2399034])
          (2399046 call initWithBorrowedBuffer[949063] ret[2399029] x[1589995])
          (2399049 'move' ret[2399027] ret[2399029])
          (2399052 'move' ret[2399009] ret[2399027])
          gotoReturn _end_localize[2399070] _end_localize[2399070]
        }
        {
          const-val x[2399058]:string[26] "dead at end of block" "const" "insert auto destroy"
          (2399061 call init=[30774] x[2399058] x[1589995])
          (2399064 'move' ret[2399009] x[2399058])
          gotoReturn _end_localize[2399070] _end_localize[2399070]
        }
        label _end_localize[2399070]
        val local_x[2399072]:string[26] "dead at end of block" "insert auto destroy"
        (2399074 'move' local_x[2399072] ret[2399009])
        const-val tmp[2399077]:bool[10] "dead after last mention" "const" "temp"
        (2399079 'move' tmp[2399077](2399081 '.v' local_x[2399072] hasEscapes[30752]))
        if tmp[2399077]
        {
          const-val call_tmp[2399086]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399088 'move' call_tmp[2399086](2399091 call qio_int_to_err[223722] EILSEQ[224532]))
          (2399093 '=' ret[2399007] call_tmp[2399086])
          ref i_x[2399096]:string[26] "temp"
          (2399098 'move' i_x[2399096](2399100 'set reference' local_x[2399072]))
          (2399103 call deinit[30834] i_x[2399096])
          gotoReturn _end__write_binary_internal[2399187] _end__write_binary_internal[2399187]
        }
        const-val call_tmp[2399108]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (2399110 'move' call_tmp[2399108](2399113 call qio_channel_str_style[233175] coerce_tmp[1590129]))
        const-val coerce_tmp[2399115]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2399117 'move' coerce_tmp[2399115](2399119 '.v' local_x[2399072] locale_id[30757]))
        const-val call_tmp[2399122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2399124 'move' call_tmp[2399122](2399126 '!=' coerce_tmp[2399115] chpl_nodeID[208207]))
        if call_tmp[2399122]
        {
          (2399132 call halt[154111] "Cannot call .c_str() on a remote string")
        }
        val coerce_tmp[2399135]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2399137 'move' coerce_tmp[2399135](2399139 '.v' local_x[2399072] buff[30740]))
        const-val call_tmp[2399142]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
        (2399144 'move' call_tmp[2399142](2399146 'cast' c_string[19] coerce_tmp[2399135]))
        val ret[2399149]:int(64)[13] "dead after last mention" "RVV" "temp"
        (2399151 'move' ret[2399149](2399153 '.v' local_x[2399072] buffLen[30722]))
        const-val call_tmp[2399156]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[2399158]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (2399160 'move' coerce_tmp[2399158](2399162 'cast' int(32)[95] 0))
        (2399165 'move' call_tmp[2399156](2399168 call qio_channel_write_string[234477] coerce_tmp[2399158] 2 call_tmp[2399108] coerce_tmp[1590129] call_tmp[2399142] ret[2399149]))
        (2399175 'move' ret[2399007] call_tmp[2399156])
        ref i_x[2399178]:string[26] "temp"
        (2399180 'move' i_x[2399178](2399182 'set reference' local_x[2399072]))
        (2399185 call deinit[30834] i_x[2399178])
        label _end__write_binary_internal[2399187]
        (2399189 '=' e[2398923] ret[2399007])
      }
      {
        const-val call_tmp[2399193]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (2399195 'move' call_tmp[2399193](2399197 '==' tmp[2398970] little[231017]))
        if call_tmp[2399193]
        {
          val ret[2399202]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2399204]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2399206]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399208 'move' coerce_tmp[2399206](2399210 '.v' x[1589995] locale_id[30757]))
          const-val call_tmp[2399213]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399215 'move' call_tmp[2399213](2399217 '==' coerce_tmp[2399206] chpl_nodeID[208207]))
          if call_tmp[2399213]
          {
            const-val ret[2399222]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2399224]:string[26] "dead at end of block" "insert auto destroy"
            (2399227 call init[30763] ret[2399224])
            const-val coerce_tmp[2399229]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2399231 'move' coerce_tmp[2399229](2399233 '.v' x[1589995] cachedNumCodepoints[30734]))
            (2399236 '.=' ret[2399224] cachedNumCodepoints[30734] coerce_tmp[2399229])
            (2399241 call initWithBorrowedBuffer[949063] ret[2399224] x[1589995])
            (2399244 'move' ret[2399222] ret[2399224])
            (2399247 'move' ret[2399204] ret[2399222])
            gotoReturn _end_localize[2399265] _end_localize[2399265]
          }
          {
            const-val x[2399253]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2399256 call init=[30774] x[2399253] x[1589995])
            (2399259 'move' ret[2399204] x[2399253])
            gotoReturn _end_localize[2399265] _end_localize[2399265]
          }
          label _end_localize[2399265]
          val local_x[2399267]:string[26] "dead at end of block" "insert auto destroy"
          (2399269 'move' local_x[2399267] ret[2399204])
          const-val tmp[2399272]:bool[10] "dead after last mention" "const" "temp"
          (2399274 'move' tmp[2399272](2399276 '.v' local_x[2399267] hasEscapes[30752]))
          if tmp[2399272]
          {
            const-val call_tmp[2399281]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
            (2399283 'move' call_tmp[2399281](2399286 call qio_int_to_err[223722] EILSEQ[224532]))
            (2399288 '=' ret[2399202] call_tmp[2399281])
            ref i_x[2399291]:string[26] "temp"
            (2399293 'move' i_x[2399291](2399295 'set reference' local_x[2399267]))
            (2399298 call deinit[30834] i_x[2399291])
            gotoReturn _end__write_binary_internal[2399382] _end__write_binary_internal[2399382]
          }
          const-val call_tmp[2399303]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399305 'move' call_tmp[2399303](2399308 call qio_channel_str_style[233175] coerce_tmp[1590129]))
          const-val coerce_tmp[2399310]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399312 'move' coerce_tmp[2399310](2399314 '.v' local_x[2399267] locale_id[30757]))
          const-val call_tmp[2399317]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399319 'move' call_tmp[2399317](2399321 '!=' coerce_tmp[2399310] chpl_nodeID[208207]))
          if call_tmp[2399317]
          {
            (2399327 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2399330]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399332 'move' coerce_tmp[2399330](2399334 '.v' local_x[2399267] buff[30740]))
          const-val call_tmp[2399337]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399339 'move' call_tmp[2399337](2399341 'cast' c_string[19] coerce_tmp[2399330]))
          val ret[2399344]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2399346 'move' ret[2399344](2399348 '.v' local_x[2399267] buffLen[30722]))
          const-val call_tmp[2399351]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2399353]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399355 'move' coerce_tmp[2399353](2399357 'cast' int(32)[95] 0))
          (2399360 'move' call_tmp[2399351](2399363 call qio_channel_write_string[234477] coerce_tmp[2399353] 3 call_tmp[2399303] coerce_tmp[1590129] call_tmp[2399337] ret[2399344]))
          (2399370 'move' ret[2399202] call_tmp[2399351])
          ref i_x[2399373]:string[26] "temp"
          (2399375 'move' i_x[2399373](2399377 'set reference' local_x[2399267]))
          (2399380 call deinit[30834] i_x[2399373])
          label _end__write_binary_internal[2399382]
          (2399384 '=' e[2398923] ret[2399202])
        }
        {
          val ret[2399388]:syserr[223672] "dead after last mention" "RVV" "initialized later" "temp"
          val ret[2399390]:string[26] "dead after last mention" "RVV" "temp"
          const-val coerce_tmp[2399392]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399394 'move' coerce_tmp[2399392](2399396 '.v' x[1589995] locale_id[30757]))
          const-val call_tmp[2399399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399401 'move' call_tmp[2399399](2399403 '==' coerce_tmp[2399392] chpl_nodeID[208207]))
          if call_tmp[2399399]
          {
            const-val ret[2399408]:string[26] "dead after last mention" "RVV" "temp"
            val ret[2399410]:string[26] "dead at end of block" "insert auto destroy"
            (2399413 call init[30763] ret[2399410])
            const-val coerce_tmp[2399415]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (2399417 'move' coerce_tmp[2399415](2399419 '.v' x[1589995] cachedNumCodepoints[30734]))
            (2399422 '.=' ret[2399410] cachedNumCodepoints[30734] coerce_tmp[2399415])
            (2399427 call initWithBorrowedBuffer[949063] ret[2399410] x[1589995])
            (2399430 'move' ret[2399408] ret[2399410])
            (2399433 'move' ret[2399390] ret[2399408])
            gotoReturn _end_localize[2399451] _end_localize[2399451]
          }
          {
            const-val x[2399439]:string[26] "dead at end of block" "const" "insert auto destroy"
            (2399442 call init=[30774] x[2399439] x[1589995])
            (2399445 'move' ret[2399390] x[2399439])
            gotoReturn _end_localize[2399451] _end_localize[2399451]
          }
          label _end_localize[2399451]
          val local_x[2399453]:string[26] "dead at end of block" "insert auto destroy"
          (2399455 'move' local_x[2399453] ret[2399390])
          const-val tmp[2399458]:bool[10] "dead after last mention" "const" "temp"
          (2399460 'move' tmp[2399458](2399462 '.v' local_x[2399453] hasEscapes[30752]))
          if tmp[2399458]
          {
            const-val call_tmp[2399467]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
            (2399469 'move' call_tmp[2399467](2399472 call qio_int_to_err[223722] EILSEQ[224532]))
            (2399474 '=' ret[2399388] call_tmp[2399467])
            ref i_x[2399477]:string[26] "temp"
            (2399479 'move' i_x[2399477](2399481 'set reference' local_x[2399453]))
            (2399484 call deinit[30834] i_x[2399477])
            gotoReturn _end__write_binary_internal[2399568] _end__write_binary_internal[2399568]
          }
          const-val call_tmp[2399489]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399491 'move' call_tmp[2399489](2399494 call qio_channel_str_style[233175] coerce_tmp[1590129]))
          const-val coerce_tmp[2399496]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399498 'move' coerce_tmp[2399496](2399500 '.v' local_x[2399453] locale_id[30757]))
          const-val call_tmp[2399503]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399505 'move' call_tmp[2399503](2399507 '!=' coerce_tmp[2399496] chpl_nodeID[208207]))
          if call_tmp[2399503]
          {
            (2399513 call halt[154111] "Cannot call .c_str() on a remote string")
          }
          val coerce_tmp[2399516]:c_ptr(uint(8))[937612] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399518 'move' coerce_tmp[2399516](2399520 '.v' local_x[2399453] buff[30740]))
          const-val call_tmp[2399523]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
          (2399525 'move' call_tmp[2399523](2399527 'cast' c_string[19] coerce_tmp[2399516]))
          val ret[2399530]:int(64)[13] "dead after last mention" "RVV" "temp"
          (2399532 'move' ret[2399530](2399534 '.v' local_x[2399453] buffLen[30722]))
          const-val call_tmp[2399537]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val coerce_tmp[2399539]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (2399541 'move' coerce_tmp[2399539](2399543 'cast' int(32)[95] 0))
          (2399546 'move' call_tmp[2399537](2399549 call qio_channel_write_string[234477] coerce_tmp[2399539] 1 call_tmp[2399489] coerce_tmp[1590129] call_tmp[2399523] ret[2399530]))
          (2399556 'move' ret[2399388] call_tmp[2399537])
          ref i_x[2399559]:string[26] "temp"
          (2399561 'move' i_x[2399559](2399563 'set reference' local_x[2399453]))
          (2399566 call deinit[30834] i_x[2399559])
          label _end__write_binary_internal[2399568]
          (2399570 '=' e[2398923] ret[2399388])
        }
      }
    }
    {
      const-val call_tmp[2399576]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      (2399578 'move' call_tmp[2399576](2399581 call _write_text_internal[1173033] coerce_tmp[1590129] x[1589995]))
      (2399584 '=' e[2398923] call_tmp[2399576])
    }
    (2399588 'move' ret[2398921] e[2398923])
    label _end__write_one_internal[2399591]
    val errorExists[2224568]:bool[10] "temp"
    (2224573 'move' errorExists[2224568](2224570 '!=' error[1889276] nil[44]))
    if errorExists[2224568]
    {
      (1889282 '=' error_out[1889271] error[1889276])
      gotoErrorHandlingReturn _end_writeOne[1889273] _end_writeOne[1889273]
    }
    const-val call_tmp[2328316]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328318 'move' call_tmp[2328316](2328321 call qio_err_to_int[223704] ret[2398921]))
    const-val call_tmp[2328323]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328325 'move' call_tmp[2328323](2328327 '==' call_tmp[2328316] 0))
    const-val call_tmp[2328330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328332 'move' call_tmp[2328330](2328334 '!' call_tmp[2328323]))
    if call_tmp[2328330]
    {
      const-val call_tmp[1590054]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1916995]:string[26] "temp"
      (1590062 call _constructIoErrorMsg[1590141] this[1589991] x[1589995] ret_tmp[1916995])
      (1916998 'move' call_tmp[1590054] ret_tmp[1916995])
      val msg[1590065]:string[26] "dead at end of block" "insert auto destroy"
      (1590067 'move' msg[1590065] call_tmp[1590054])
      const-val call_tmp[2328021]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328023 'move' call_tmp[2328021](2328026 call qio_err_to_int[223704] ret[2398921]))
      const-val call_tmp[2328028]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2328030 'move' call_tmp[2328028](2328032 '==' call_tmp[2328021] EILSEQ[224532]))
      if call_tmp[2328028]
      {
        const-val call_tmp[1590096]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1906130]:string[26] "temp"
        (1590101 call +[38345] "Strings with escaped non-UTF8 bytes cannot be used with I/O. Try using string.encode(encodePolicy.unescape) first." msg[1590065] ret_tmp[1906130])
        (1906133 'move' call_tmp[1590096] ret_tmp[1906130])
        (1590105 call =[38272] msg[1590065] call_tmp[1590096])
        ref i_x[2249585]:string[26] "temp"
        (2249589 'move' i_x[2249585](2249587 'set reference' call_tmp[1590096]))
        (2249593 call deinit[30834] i_x[2249585])
      }
      val error[1889290]:Error[167984] "error variable" "temp"
      (1889299 'move' error[1889290] nil[44])
      (1590117 call _ch_ioerror[1552948] this[1589991] ret[2398921] msg[1590065] error[1889290])
      val errorExists[2224576]:bool[10] "temp"
      (2224581 'move' errorExists[2224576](2224578 '!=' error[1889290] nil[44]))
      if errorExists[2224576]
      {
        gotoErrorHandling handler[1889291] handler[1889291]
      }
      label handler[1889291]
      val errorExists[2224584]:bool[10] "temp"
      (2224589 'move' errorExists[2224584](2224586 '!=' error[1889290] nil[44]))
      if errorExists[2224584]
      {
        (1889306 '=' error_out[1889271] error[1889290])
        ref i_x[2249597]:string[26] "temp"
        (2249601 'move' i_x[2249597](2249599 'set reference' msg[1590065]))
        (2249605 call deinit[30834] i_x[2249597])
        gotoErrorHandlingReturn _end_writeOne[1889273] _end_writeOne[1889273]
      }
      ref i_x[2249609]:string[26] "temp"
      (2249613 'move' i_x[2249609](2249611 'set reference' msg[1590065]))
      (2249617 call deinit[30834] i_x[2249609])
    }
    label _end_writeOne[1889273]
    (1590125 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].writeIt[1068975](const  ref arg this[1068981]:channel(true,dynamic,false)[1061136], const in arg x[1068983]:int(64)[13], ref arg error_out[1885737]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val ret[2389711]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2389713]:locale[28] "dead after last mention" "maybe param" "temp"
    (2389715 'move' call_tmp[2389713](2389717 '.' this[1068981] _readWriteThisFromLocale[1061133]))
    val ret[2389720]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2389722]:locale[28] "dead after last mention" "temp"
    (2389725 call init=[90170] tmp[2389722] call_tmp[2389713])
    (2389728 'move' ret[2389720] tmp[2389722])
    val ret[2389731]:locale[28] "dead at end of block" "insert auto destroy"
    (2389733 'move' ret[2389731] ret[2389720])
    const-val call_tmp[2389736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2389738 'move' call_tmp[2389736](2389741 call ==[782970] ret[2389731] nilLocale[89942]))
    if call_tmp[2389736]
    {
      const-val call_tmp[2389746]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2389748]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2389750]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2389752 'move' call_tmp[2389750](2389755 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2389758 'move' call_tmp[2389748] call_tmp[2389750])
      const-val call_tmp[2389761]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2389763]:locale[28] "temp"
      (2389766 call chpl_localeID_to_locale[92852] call_tmp[2389748] ret_tmp[2389763])
      (2389769 'move' call_tmp[2389761] ret_tmp[2389763])
      (2389772 'move' call_tmp[2389746] call_tmp[2389761])
      (2389776 call =[90634] ret[2389731] call_tmp[2389746])
      ref i_x[2389779]:locale[28] "temp"
      (2389781 'move' i_x[2389779](2389783 'set reference' call_tmp[2389746]))
      (2389786 call deinit[90188] i_x[2389779])
    }
    (2389789 'move' ret[2389711] ret[2389731])
    const-val origLocale[1069028]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1069030 'move' origLocale[1069028] ret[2389711])
    ref call_tmp[2387830]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387832 'move' call_tmp[2387830](2387834 '.' this[1068981] home[1061124]))
    const-val call_tmp[1069044]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283545]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283547 'move' coerce_tmp[2283545](2283549 '.v' call_tmp[2387830] _instance[89978]))
    val coerce_tmp[2283552]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283554 'move' coerce_tmp[2283552](2283556 'cast' object[22] coerce_tmp[2283545]))
    const-val call_tmp[2283559]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283561 'move' call_tmp[2283559](2283563 'ptr_eq' coerce_tmp[2283552] nil[44]))
    if call_tmp[2283559]
    {
      (2283569 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1069046 'move' call_tmp[1069044](1069048 '_wide_get_locale' coerce_tmp[2283545]))
    val error[1885742]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1885744 'move' error[1885742] nil[44])
    val isdirect[2202259]:bool[10] "temp"
    (2202264 'move' isdirect[2202259](2202261 call chpl_doDirectExecuteOn[187469] call_tmp[1069044]))
    if isdirect[2202259]
    {
      (2202268 call on_fn[1069057] this[1068981] x[1068983] ret[2389711] error[1885742])
    }
    {
      val _args_foron_fn[2202292]:_class_localson_fn[2202278] "temp"
      (2202296 'move' _args_foron_fn[2202292](2202294 'stack allocate class' _class_localson_fn[2202278]))
      (2202298 '.=' _args_foron_fn[2202292] _0_tmp[2202281] call_tmp[1069044])
      ref tmp[2202302]:channel(true,dynamic,false)[1061136] "temp"
      (2202306 'move' tmp[2202302](2202304 'set reference' this[1068981]))
      (2202308 '.=' _args_foron_fn[2202292] _1_this[2202283] tmp[2202302])
      (2202312 '.=' _args_foron_fn[2202292] _2_x[2202285] x[1068983])
      (2202316 '.=' _args_foron_fn[2202292] _3_rvfDerefTmp[2202287] ret[2389711])
      ref tmp[2202320]:Error[167984] "temp"
      (2202324 'move' tmp[2202320](2202322 'set reference' error[1885742]))
      (2202326 '.=' _args_foron_fn[2202292] _4_error[2202289] tmp[2202320])
      val _args_vforon_fn[2202330]:c_void_ptr[149] "temp"
      (2202334 'move' _args_vforon_fn[2202330](2202332 'cast_to_void_star' _args_foron_fn[2202292]))
      val _args_sizeon_fn[2202336]:int(64)[13] "temp"
      (2202340 'move' _args_sizeon_fn[2202336](2202338 'sizeof_bundle' _class_localson_fn[2202278]))
      on(2202396 call wrapon_fn[2202342] call_tmp[1069044] _args_vforon_fn[2202330] _args_sizeon_fn[2202336] _args_foron_fn[2202292])
    }
    val errorExists[2222856]:bool[10] "temp"
    (2222861 'move' errorExists[2222856](2222858 '!=' error[1885742] nil[44]))
    if errorExists[2222856]
    {
      (1885748 '=' error_out[1885737] error[1885742])
      ref i_x[2388641]:locale[28] "temp"
      (2388645 'move' i_x[2388641](2388643 'set reference' origLocale[1069028]))
      (2388649 call deinit[90188] i_x[2388641])
      gotoErrorHandlingReturn _endwriteIt[1885739] _endwriteIt[1885739]
    }
    ref i_x[2388653]:locale[28] "temp"
    (2388657 'move' i_x[2388653](2388655 'set reference' origLocale[1069028]))
    (2388661 call deinit[90188] i_x[2388653])
    label _endwriteIt[1885739]
    (1069101 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].writeIt[1565598](const  ref arg this[1565604]:channel(true,dynamic,false)[1061136], const  ref arg x[1565606]:ioLiteral[238841], ref arg error_out[1888739]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val ret[2389996]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2389998]:locale[28] "dead after last mention" "maybe param" "temp"
    (2390000 'move' call_tmp[2389998](2390002 '.' this[1565604] _readWriteThisFromLocale[1061133]))
    val ret[2390005]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2390007]:locale[28] "dead after last mention" "temp"
    (2390010 call init=[90170] tmp[2390007] call_tmp[2389998])
    (2390013 'move' ret[2390005] tmp[2390007])
    val ret[2390016]:locale[28] "dead at end of block" "insert auto destroy"
    (2390018 'move' ret[2390016] ret[2390005])
    const-val call_tmp[2390021]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390023 'move' call_tmp[2390021](2390026 call ==[782970] ret[2390016] nilLocale[89942]))
    if call_tmp[2390021]
    {
      const-val call_tmp[2390031]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390033]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390035]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2390037 'move' call_tmp[2390035](2390040 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2390043 'move' call_tmp[2390033] call_tmp[2390035])
      const-val call_tmp[2390046]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2390048]:locale[28] "temp"
      (2390051 call chpl_localeID_to_locale[92852] call_tmp[2390033] ret_tmp[2390048])
      (2390054 'move' call_tmp[2390046] ret_tmp[2390048])
      (2390057 'move' call_tmp[2390031] call_tmp[2390046])
      (2390061 call =[90634] ret[2390016] call_tmp[2390031])
      ref i_x[2390064]:locale[28] "temp"
      (2390066 'move' i_x[2390064](2390068 'set reference' call_tmp[2390031]))
      (2390071 call deinit[90188] i_x[2390064])
    }
    (2390074 'move' ret[2389996] ret[2390016])
    const-val origLocale[1565651]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1565653 'move' origLocale[1565651] ret[2389996])
    ref call_tmp[2387900]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387902 'move' call_tmp[2387900](2387904 '.' this[1565604] home[1061124]))
    const-val call_tmp[1565667]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284313]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284315 'move' coerce_tmp[2284313](2284317 '.v' call_tmp[2387900] _instance[89978]))
    val coerce_tmp[2284320]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284322 'move' coerce_tmp[2284320](2284324 'cast' object[22] coerce_tmp[2284313]))
    const-val call_tmp[2284327]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284329 'move' call_tmp[2284327](2284331 'ptr_eq' coerce_tmp[2284320] nil[44]))
    if call_tmp[2284327]
    {
      (2284337 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1565669 'move' call_tmp[1565667](1565671 '_wide_get_locale' coerce_tmp[2284313]))
    val error[1888744]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888746 'move' error[1888744] nil[44])
    val rvfDerefTmp[2196782]:ioLiteral[238841] "temp"
    (2196786 'move' rvfDerefTmp[2196782](2196784 'deref' x[1565606]))
    val isdirect[2209407]:bool[10] "temp"
    (2209412 'move' isdirect[2209407](2209409 call chpl_doDirectExecuteOn[187469] call_tmp[1565667]))
    if isdirect[2209407]
    {
      (2209416 call on_fn[1565680] this[1565604] rvfDerefTmp[2196782] ret[2389996] error[1888744])
    }
    {
      val _args_foron_fn[2209440]:_class_localson_fn[2209426] "temp"
      (2209444 'move' _args_foron_fn[2209440](2209442 'stack allocate class' _class_localson_fn[2209426]))
      (2209446 '.=' _args_foron_fn[2209440] _0_tmp[2209429] call_tmp[1565667])
      ref tmp[2209450]:channel(true,dynamic,false)[1061136] "temp"
      (2209454 'move' tmp[2209450](2209452 'set reference' this[1565604]))
      (2209456 '.=' _args_foron_fn[2209440] _1_this[2209431] tmp[2209450])
      (2209460 '.=' _args_foron_fn[2209440] _2_rvfDerefTmp[2209433] rvfDerefTmp[2196782])
      (2209464 '.=' _args_foron_fn[2209440] _3_rvfDerefTmp[2209435] ret[2389996])
      ref tmp[2209468]:Error[167984] "temp"
      (2209472 'move' tmp[2209468](2209470 'set reference' error[1888744]))
      (2209474 '.=' _args_foron_fn[2209440] _4_error[2209437] tmp[2209468])
      val _args_vforon_fn[2209478]:c_void_ptr[149] "temp"
      (2209482 'move' _args_vforon_fn[2209478](2209480 'cast_to_void_star' _args_foron_fn[2209440]))
      val _args_sizeon_fn[2209484]:int(64)[13] "temp"
      (2209488 'move' _args_sizeon_fn[2209484](2209486 'sizeof_bundle' _class_localson_fn[2209426]))
      on(2209544 call wrapon_fn[2209490] call_tmp[1565667] _args_vforon_fn[2209478] _args_sizeon_fn[2209484] _args_foron_fn[2209440])
    }
    val errorExists[2224296]:bool[10] "temp"
    (2224301 'move' errorExists[2224296](2224298 '!=' error[1888744] nil[44]))
    if errorExists[2224296]
    {
      (1888750 '=' error_out[1888739] error[1888744])
      ref i_x[2389061]:locale[28] "temp"
      (2389065 'move' i_x[2389061](2389063 'set reference' origLocale[1565651]))
      (2389069 call deinit[90188] i_x[2389061])
      gotoErrorHandlingReturn _endwriteIt[1888741] _endwriteIt[1888741]
    }
    ref i_x[2389073]:locale[28] "temp"
    (2389077 'move' i_x[2389073](2389075 'set reference' origLocale[1565651]))
    (2389081 call deinit[90188] i_x[2389073])
    label _endwriteIt[1888741]
    (1565724 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].writeIt[1578566](const  ref arg this[1578572]:channel(true,dynamic,false)[1061136], const in arg x[1578574]:real(64)[16], ref arg error_out[1888929]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val ret[2390091]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2390093]:locale[28] "dead after last mention" "maybe param" "temp"
    (2390095 'move' call_tmp[2390093](2390097 '.' this[1578572] _readWriteThisFromLocale[1061133]))
    val ret[2390100]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2390102]:locale[28] "dead after last mention" "temp"
    (2390105 call init=[90170] tmp[2390102] call_tmp[2390093])
    (2390108 'move' ret[2390100] tmp[2390102])
    val ret[2390111]:locale[28] "dead at end of block" "insert auto destroy"
    (2390113 'move' ret[2390111] ret[2390100])
    const-val call_tmp[2390116]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390118 'move' call_tmp[2390116](2390121 call ==[782970] ret[2390111] nilLocale[89942]))
    if call_tmp[2390116]
    {
      const-val call_tmp[2390126]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390128]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390130]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2390132 'move' call_tmp[2390130](2390135 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2390138 'move' call_tmp[2390128] call_tmp[2390130])
      const-val call_tmp[2390141]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2390143]:locale[28] "temp"
      (2390146 call chpl_localeID_to_locale[92852] call_tmp[2390128] ret_tmp[2390143])
      (2390149 'move' call_tmp[2390141] ret_tmp[2390143])
      (2390152 'move' call_tmp[2390126] call_tmp[2390141])
      (2390156 call =[90634] ret[2390111] call_tmp[2390126])
      ref i_x[2390159]:locale[28] "temp"
      (2390161 'move' i_x[2390159](2390163 'set reference' call_tmp[2390126]))
      (2390166 call deinit[90188] i_x[2390159])
    }
    (2390169 'move' ret[2390091] ret[2390111])
    const-val origLocale[1578619]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (1578621 'move' origLocale[1578619] ret[2390091])
    ref call_tmp[2387910]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387912 'move' call_tmp[2387910](2387914 '.' this[1578572] home[1061124]))
    const-val call_tmp[1578635]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284343]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284345 'move' coerce_tmp[2284343](2284347 '.v' call_tmp[2387910] _instance[89978]))
    val coerce_tmp[2284350]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284352 'move' coerce_tmp[2284350](2284354 'cast' object[22] coerce_tmp[2284343]))
    const-val call_tmp[2284357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284359 'move' call_tmp[2284357](2284361 'ptr_eq' coerce_tmp[2284350] nil[44]))
    if call_tmp[2284357]
    {
      (2284367 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1578637 'move' call_tmp[1578635](1578639 '_wide_get_locale' coerce_tmp[2284343]))
    val error[1888934]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888936 'move' error[1888934] nil[44])
    val isdirect[2209549]:bool[10] "temp"
    (2209554 'move' isdirect[2209549](2209551 call chpl_doDirectExecuteOn[187469] call_tmp[1578635]))
    if isdirect[2209549]
    {
      (2209558 call on_fn[1578648] this[1578572] x[1578574] ret[2390091] error[1888934])
    }
    {
      val _args_foron_fn[2209582]:_class_localson_fn[2209568] "temp"
      (2209586 'move' _args_foron_fn[2209582](2209584 'stack allocate class' _class_localson_fn[2209568]))
      (2209588 '.=' _args_foron_fn[2209582] _0_tmp[2209571] call_tmp[1578635])
      ref tmp[2209592]:channel(true,dynamic,false)[1061136] "temp"
      (2209596 'move' tmp[2209592](2209594 'set reference' this[1578572]))
      (2209598 '.=' _args_foron_fn[2209582] _1_this[2209573] tmp[2209592])
      (2209602 '.=' _args_foron_fn[2209582] _2_x[2209575] x[1578574])
      (2209606 '.=' _args_foron_fn[2209582] _3_rvfDerefTmp[2209577] ret[2390091])
      ref tmp[2209610]:Error[167984] "temp"
      (2209614 'move' tmp[2209610](2209612 'set reference' error[1888934]))
      (2209616 '.=' _args_foron_fn[2209582] _4_error[2209579] tmp[2209610])
      val _args_vforon_fn[2209620]:c_void_ptr[149] "temp"
      (2209624 'move' _args_vforon_fn[2209620](2209622 'cast_to_void_star' _args_foron_fn[2209582]))
      val _args_sizeon_fn[2209626]:int(64)[13] "temp"
      (2209630 'move' _args_sizeon_fn[2209626](2209628 'sizeof_bundle' _class_localson_fn[2209568]))
      on(2209686 call wrapon_fn[2209632] call_tmp[1578635] _args_vforon_fn[2209620] _args_sizeon_fn[2209626] _args_foron_fn[2209582])
    }
    val errorExists[2224392]:bool[10] "temp"
    (2224397 'move' errorExists[2224392](2224394 '!=' error[1888934] nil[44]))
    if errorExists[2224392]
    {
      (1888940 '=' error_out[1888929] error[1888934])
      ref i_x[2389085]:locale[28] "temp"
      (2389089 'move' i_x[2389085](2389087 'set reference' origLocale[1578619]))
      (2389093 call deinit[90188] i_x[2389085])
      gotoErrorHandlingReturn _endwriteIt[1888931] _endwriteIt[1888931]
    }
    ref i_x[2389097]:locale[28] "temp"
    (2389101 'move' i_x[2389097](2389099 'set reference' origLocale[1578619]))
    (2389105 call deinit[90188] i_x[2389097])
    label _endwriteIt[1888931]
    (1578692 return _void[55])
  }
  function channel(true,dynamic,false)[1061136].binary[1559617](const  ref arg this[1559623]:channel(true,dynamic,false)[1061136]) : bool[10] "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1559635]:uint(8)[100] "dead at end of block" "insert auto destroy"
    (1559759 'move' ret[1559635] 0)
    ref call_tmp[2387880]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387882 'move' call_tmp[2387880](2387884 '.' this[1559623] home[1061124]))
    const-val call_tmp[1559658]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284253]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284255 'move' coerce_tmp[2284253](2284257 '.v' call_tmp[2387880] _instance[89978]))
    val coerce_tmp[2284260]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284262 'move' coerce_tmp[2284260](2284264 'cast' object[22] coerce_tmp[2284253]))
    const-val call_tmp[2284267]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284269 'move' call_tmp[2284267](2284271 'ptr_eq' coerce_tmp[2284260] nil[44]))
    if call_tmp[2284267]
    {
      (2284277 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1559660 'move' call_tmp[1559658](1559662 '_wide_get_locale' coerce_tmp[2284253]))
    val isdirect[2209132]:bool[10] "temp"
    (2209137 'move' isdirect[2209132](2209134 call chpl_doDirectExecuteOn[187469] call_tmp[1559658]))
    if isdirect[2209132]
    {
      (2209141 call on_fn[1559671] this[1559623] ret[1559635])
    }
    {
      val _args_foron_fn[2209159]:_class_localson_fn[2209149] "temp"
      (2209163 'move' _args_foron_fn[2209159](2209161 'stack allocate class' _class_localson_fn[2209149]))
      (2209165 '.=' _args_foron_fn[2209159] _0_tmp[2209152] call_tmp[1559658])
      ref tmp[2209169]:channel(true,dynamic,false)[1061136] "temp"
      (2209173 'move' tmp[2209169](2209171 'set reference' this[1559623]))
      (2209175 '.=' _args_foron_fn[2209159] _1_this[2209154] tmp[2209169])
      ref tmp[2209179]:uint(8)[100] "temp"
      (2209183 'move' tmp[2209179](2209181 'set reference' ret[1559635]))
      (2209185 '.=' _args_foron_fn[2209159] _2_ret[2209156] tmp[2209179])
      val _args_vforon_fn[2209189]:c_void_ptr[149] "temp"
      (2209193 'move' _args_vforon_fn[2209189](2209191 'cast_to_void_star' _args_foron_fn[2209159]))
      val _args_sizeon_fn[2209195]:int(64)[13] "temp"
      (2209199 'move' _args_sizeon_fn[2209195](2209197 'sizeof_bundle' _class_localson_fn[2209149]))
      on(2209239 call wrapon_fn[2209201] call_tmp[1559658] _args_vforon_fn[2209189] _args_sizeon_fn[2209195] _args_foron_fn[2209159])
    }
    const-val coerce_tmp[1559746]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1559752 'move' coerce_tmp[1559746](1559748 'cast' uint(8)[100] 0))
    const-val call_tmp[2320823]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2320825 'move' call_tmp[2320823](2320827 '!=' ret[1559635] coerce_tmp[1559746]))
    label _end_binary[1559719]
    (1559721 return call_tmp[2320823])
  }
  function channel(true,dynamic,false)[1061136].styleElement[1559243](const  ref arg this[1559249]:channel(true,dynamic,false)[1061136], const in arg element[1559251]:int(64)[13]) : int(64)[13] "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1559255]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[1559263]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1559265 'move' ret[1559263] 0)
    ref call_tmp[2387870]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387872 'move' call_tmp[2387870](2387874 '.' this[1559249] home[1061124]))
    const-val call_tmp[1559280]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284223]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284225 'move' coerce_tmp[2284223](2284227 '.v' call_tmp[2387870] _instance[89978]))
    val coerce_tmp[2284230]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284232 'move' coerce_tmp[2284230](2284234 'cast' object[22] coerce_tmp[2284223]))
    const-val call_tmp[2284237]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284239 'move' call_tmp[2284237](2284241 'ptr_eq' coerce_tmp[2284230] nil[44]))
    if call_tmp[2284237]
    {
      (2284247 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1559282 'move' call_tmp[1559280](1559284 '_wide_get_locale' coerce_tmp[2284223]))
    val isdirect[2209005]:bool[10] "temp"
    (2209010 'move' isdirect[2209005](2209007 call chpl_doDirectExecuteOn[187469] call_tmp[1559280]))
    if isdirect[2209005]
    {
      (2209014 call on_fn[1559293] this[1559249] element[1559251] ret[1559263])
    }
    {
      val _args_foron_fn[2209035]:_class_localson_fn[2209023] "temp"
      (2209039 'move' _args_foron_fn[2209035](2209037 'stack allocate class' _class_localson_fn[2209023]))
      (2209041 '.=' _args_foron_fn[2209035] _0_tmp[2209026] call_tmp[1559280])
      ref tmp[2209045]:channel(true,dynamic,false)[1061136] "temp"
      (2209049 'move' tmp[2209045](2209047 'set reference' this[1559249]))
      (2209051 '.=' _args_foron_fn[2209035] _1_this[2209028] tmp[2209045])
      (2209055 '.=' _args_foron_fn[2209035] _2_element[2209030] element[1559251])
      ref tmp[2209059]:int(64)[13] "temp"
      (2209063 'move' tmp[2209059](2209061 'set reference' ret[1559263]))
      (2209065 '.=' _args_foron_fn[2209035] _3_ret[2209032] tmp[2209059])
      val _args_vforon_fn[2209069]:c_void_ptr[149] "temp"
      (2209073 'move' _args_vforon_fn[2209069](2209071 'cast_to_void_star' _args_foron_fn[2209035]))
      val _args_sizeon_fn[2209075]:int(64)[13] "temp"
      (2209079 'move' _args_sizeon_fn[2209075](2209077 'sizeof_bundle' _class_localson_fn[2209023]))
      on(2209127 call wrapon_fn[2209081] call_tmp[1559280] _args_vforon_fn[2209069] _args_sizeon_fn[2209075] _args_foron_fn[2209035])
    }
    (1559362 'move' ret[1559255] ret[1559263])
    label _end_styleElement[1559334]
    (1559336 return ret[1559255])
  }
  function channel(true,dynamic,false)[1061136].writeBytes[1564976](const  ref arg this[1564982]:channel(true,dynamic,false)[1061136], const in arg x[1564984]:_ddata(real(64))[1358105], const in arg len[1564988]:int(64)[13], ref arg error_out[1888596]:Error[167984]) : bool[10] throws "instantiated generic" "invisible fn" "method" "resolved"
  {
    val ret[1564992]:bool[10] "dead after last mention" "RVV" "temp"
    val err[1565008]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329451]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329453 'move' call_tmp[2329451](2329456 call qio_int_to_err[223722] 0))
    (1565010 'move' err[1565008] call_tmp[2329451])
    ref call_tmp[2387890]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387892 'move' call_tmp[2387890](2387894 '.' this[1564982] home[1061124]))
    const-val call_tmp[1565025]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2284283]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284285 'move' coerce_tmp[2284283](2284287 '.v' call_tmp[2387890] _instance[89978]))
    val coerce_tmp[2284290]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2284292 'move' coerce_tmp[2284290](2284294 'cast' object[22] coerce_tmp[2284283]))
    const-val call_tmp[2284297]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2284299 'move' call_tmp[2284297](2284301 'ptr_eq' coerce_tmp[2284290] nil[44]))
    if call_tmp[2284297]
    {
      (2284307 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1565027 'move' call_tmp[1565025](1565029 '_wide_get_locale' coerce_tmp[2284283]))
    val error[1888601]:Error[167984] "concurrently accessed" "error variable" "temp"
    (1888603 'move' error[1888601] nil[44])
    val isdirect[2209244]:bool[10] "temp"
    (2209249 'move' isdirect[2209244](2209246 call chpl_doDirectExecuteOn[187469] call_tmp[1565025]))
    if isdirect[2209244]
    {
      (2209253 call on_fn[1565038] this[1564982] x[1564984] len[1564988] err[1565008] error[1888601])
    }
    {
      val _args_foron_fn[2209280]:_class_localson_fn[2209264] "temp"
      (2209284 'move' _args_foron_fn[2209280](2209282 'stack allocate class' _class_localson_fn[2209264]))
      (2209286 '.=' _args_foron_fn[2209280] _0_tmp[2209267] call_tmp[1565025])
      ref tmp[2209290]:channel(true,dynamic,false)[1061136] "temp"
      (2209294 'move' tmp[2209290](2209292 'set reference' this[1564982]))
      (2209296 '.=' _args_foron_fn[2209280] _1_this[2209269] tmp[2209290])
      (2209300 '.=' _args_foron_fn[2209280] _2_x[2209271] x[1564984])
      (2209304 '.=' _args_foron_fn[2209280] _3_len[2209273] len[1564988])
      ref tmp[2209308]:syserr[223672] "temp"
      (2209312 'move' tmp[2209308](2209310 'set reference' err[1565008]))
      (2209314 '.=' _args_foron_fn[2209280] _4_err[2209275] tmp[2209308])
      ref tmp[2209318]:Error[167984] "temp"
      (2209322 'move' tmp[2209318](2209320 'set reference' error[1888601]))
      (2209324 '.=' _args_foron_fn[2209280] _5_error[2209277] tmp[2209318])
      val _args_vforon_fn[2209328]:c_void_ptr[149] "temp"
      (2209332 'move' _args_vforon_fn[2209328](2209330 'cast_to_void_star' _args_foron_fn[2209280]))
      val _args_sizeon_fn[2209334]:int(64)[13] "temp"
      (2209338 'move' _args_sizeon_fn[2209334](2209336 'sizeof_bundle' _class_localson_fn[2209264]))
      on(2209402 call wrapon_fn[2209340] call_tmp[1565025] _args_vforon_fn[2209328] _args_sizeon_fn[2209334] _args_foron_fn[2209280])
    }
    val errorExists[2224224]:bool[10] "temp"
    (2224229 'move' errorExists[2224224](2224226 '!=' error[1888601] nil[44]))
    if errorExists[2224224]
    {
      (1888607 '=' error_out[1888596] error[1888601])
      gotoErrorHandlingReturn _endwriteBytes[1888598] _endwriteBytes[1888598]
    }
    const-val call_tmp[2328782]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328784 'move' call_tmp[2328782](2328787 call qio_err_iserr[223734] err[1565008]))
    const-val call_tmp[2328789]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328791 'move' call_tmp[2328789](2328793 '!=' call_tmp[2328782] 0))
    if call_tmp[2328789]
    {
      val error[1888615]:Error[167984] "error variable" "temp"
      (1888624 'move' error[1888615] nil[44])
      (1565100 call _ch_ioerror[1063054] this[1564982] err[1565008] "in channel.writeBytes()" error[1888615])
      val errorExists[2224232]:bool[10] "temp"
      (2224237 'move' errorExists[2224232](2224234 '!=' error[1888615] nil[44]))
      if errorExists[2224232]
      {
        gotoErrorHandling handler[1888616] handler[1888616]
      }
      label handler[1888616]
      val errorExists[2224240]:bool[10] "temp"
      (2224245 'move' errorExists[2224240](2224242 '!=' error[1888615] nil[44]))
      if errorExists[2224240]
      {
        (1888631 '=' error_out[1888596] error[1888615])
        gotoErrorHandlingReturn _endwriteBytes[1888598] _endwriteBytes[1888598]
      }
    }
    (1565107 'move' ret[1564992] 1)
    label _endwriteBytes[1888598]
    (1565112 return ret[1564992])
  }
  function stringify[958976](const in arg _e0_args[958978]:c_string[19], ref arg _retArg[1907946]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[958982]:string[26] "dead after last mention" "RVV" "temp"
    val str[959014]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326043]:string[26] "temp"
    (2326046 'move' inlineImm[2326043] "")
    ref i_x[2326048]:string[26] "temp"
    (2326052 'move' i_x[2326048](2326050 'set reference' inlineImm[2326043]))
    val ret[2326055]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326057]:string[26] "dead after last mention" "temp"
    (2326060 call init=[30774] tmp[2326057] i_x[2326048])
    (2326063 'move' ret[2326055] tmp[2326057])
    (959016 'move' str[959014] ret[2326055])
    val error[1884576]:Error[167984] "error variable" "temp"
    (1884592 'move' error[1884576] nil[44])
    const-val call_tmp[963900]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2325477]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2325479 'move' call_tmp[2325477](2325481 'string_length_bytes' _e0_args[958978]))
    val errorExists[2222312]:bool[10] "temp"
    (2222317 'move' errorExists[2222312](2222314 '!=' error[1884576] nil[44]))
    if errorExists[2222312]
    {
      gotoErrorHandling handler[1884577] handler[1884577]
    }
    const-val ret[2258227]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[2258229]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2258231 'move' call_tmp[2258229](2258233 'cast' c_ptr(uint(8))[937612] _e0_args[958978]))
    val error[2258238]:Error[167984] "error variable" "temp"
    (2258240 'move' error[2258238] nil[44])
    const-val ret[2258243]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2258245]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2258247]:Error[167984] "error variable" "temp"
    (2258249 'move' error[2258247] nil[44])
    const-val ret_tmp[2258252]:string[26] "temp"
    (2258255 call decodeByteBuffer[173938] call_tmp[2258229] call_tmp[2325477] replace[173694] error[2258247] ret_tmp[2258252])
    (2258261 'move' call_tmp[2258245] ret_tmp[2258252])
    val errorExists[2258264]:bool[10] "temp"
    (2258266 'move' errorExists[2258264](2258268 '!=' error[2258247] nil[44]))
    if errorExists[2258264]
    {
      (2258273 '=' error[2258238] error[2258247])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258282] _endcreateStringWithNewBuffer[2258282]
    }
    (2258279 'move' ret[2258243] call_tmp[2258245])
    label _endcreateStringWithNewBuffer[2258282]
    val errorExists[2258287]:bool[10] "temp"
    (2258289 'move' errorExists[2258287](2258291 '!=' error[2258238] nil[44]))
    if errorExists[2258287]
    {
      (2258296 '=' error[1884576] error[2258238])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258305] _endcreateStringWithNewBuffer[2258305]
    }
    (2258302 'move' ret[2258227] ret[2258243])
    label _endcreateStringWithNewBuffer[2258305]
    (1904829 'move' call_tmp[963900] ret[2258227])
    val errorExists[2222320]:bool[10] "temp"
    (2222325 'move' errorExists[2222320](2222322 '!=' error[1884576] nil[44]))
    if errorExists[2222320]
    {
      gotoErrorHandling handler[1884577] handler[1884577]
    }
    (963910 call +=[38800] str[959014] call_tmp[963900])
    ref i_x[2246813]:string[26] "temp"
    (2246817 'move' i_x[2246813](2246815 'set reference' call_tmp[963900]))
    (2246821 call deinit[30834] i_x[2246813])
    label handler[1884577]
    val errorExists[2222328]:bool[10] "temp"
    (2222333 'move' errorExists[2222328](2222330 '!=' error[1884576] nil[44]))
    if errorExists[2222328]
    {
      (1884598 call chpl_uncaught_error[170289] error[1884576])
    }
    (981049 'move' ret[958982] str[959014])
    gotoReturn _end_stringify[959639] _end_stringify[959639]
    label _end_stringify[959639]
    (1907948 '=' _retArg[1907946] ret[958982])
    (1907952 return _void[55])
  }
  function stringify[1056595](const  ref arg _e0_args[1056597]:byteIndex[28173], ref arg _retArg[1908934]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1056601]:string[26] "dead after last mention" "RVV" "temp"
    val error[1884981]:Error[167984] "error variable" "temp"
    (1885166 'move' error[1884981] nil[44])
    const-val call_tmp[1057046]:file[235668] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1060768]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2387329]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2387331 'move' style[2387329](2387334 call defaultIOStyle[235383]))
    (1060772 'move' default_arg_style[1060768] style[2387329])
    val errorExists[2222480]:bool[10] "temp"
    (2222485 'move' errorExists[2222480](2222482 '!=' error[1884981] nil[44]))
    if errorExists[2222480]
    {
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val ret_tmp[1907326]:file[235668] "temp"
    (1057051 call openmem[237713] default_arg_style[1060768] error[1884981] ret_tmp[1907326])
    (1907329 'move' call_tmp[1057046] ret_tmp[1907326])
    val errorExists[2222488]:bool[10] "temp"
    (2222493 'move' errorExists[2222488](2222490 '!=' error[1884981] nil[44]))
    if errorExists[2222488]
    {
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val f[1057052]:file[235668] "dead at end of block" "insert auto destroy"
    (1057054 'move' f[1057052] call_tmp[1057046])
    const-val call_tmp[1057069]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
    val errorExists[2222496]:bool[10] "temp"
    (2222501 'move' errorExists[2222496](2222498 '!=' error[1884981] nil[44]))
    if errorExists[2222496]
    {
      val error[1920454]:Error[167984] "error variable" "temp"
      (1920456 'move' error[1920454] nil[44])
      (1920460 call close[236112] f[1057052] error[1920454])
      val errorExists[2224640]:bool[10] "temp"
      (2224645 'move' errorExists[2224640](2224642 '!=' error[1920454] nil[44]))
      if errorExists[2224640]
      {
        gotoErrorHandling handler[1920471] handler[1920471]
      }
      label handler[1920471]
      val errorExists[2224648]:bool[10] "temp"
      (2224653 'move' errorExists[2224648](2224650 '!=' error[1920454] nil[44]))
      if errorExists[2224648]
      {
        (1920482 call chpl_uncaught_error[170289] error[1920454])
      }
      ref i_x[2513255]:file[235668] "temp"
      (2513259 'move' i_x[2513255](2513257 'set reference' f[1057052]))
      (2513263 call deinit[235979] i_x[2513255])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    val errorExists[2222504]:bool[10] "temp"
    (2222509 'move' errorExists[2222504](2222506 '!=' error[1884981] nil[44]))
    if errorExists[2222504]
    {
      val error[1920490]:Error[167984] "error variable" "temp"
      (1920492 'move' error[1920490] nil[44])
      (1920496 call close[236112] f[1057052] error[1920490])
      val errorExists[2224656]:bool[10] "temp"
      (2224661 'move' errorExists[2224656](2224658 '!=' error[1920490] nil[44]))
      if errorExists[2224656]
      {
        gotoErrorHandling handler[1920507] handler[1920507]
      }
      label handler[1920507]
      val errorExists[2224664]:bool[10] "temp"
      (2224669 'move' errorExists[2224664](2224666 '!=' error[1920490] nil[44]))
      if errorExists[2224664]
      {
        (1920518 call chpl_uncaught_error[170289] error[1920490])
      }
      ref i_x[2513267]:file[235668] "temp"
      (2513271 'move' i_x[2513267](2513269 'set reference' f[1057052]))
      (2513275 call deinit[235979] i_x[2513267])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val tmp[2387533]:int(32)[95] "dead after last mention" "temp"
    (2387535 'move' tmp[2387533](2387537 'cast' int(32)[95] 0))
    val errorExists[2222512]:bool[10] "temp"
    (2222517 'move' errorExists[2222512](2222514 '!=' error[1884981] nil[44]))
    if errorExists[2222512]
    {
      val error[1920526]:Error[167984] "error variable" "temp"
      (1920528 'move' error[1920526] nil[44])
      (1920532 call close[236112] f[1057052] error[1920526])
      val errorExists[2224672]:bool[10] "temp"
      (2224677 'move' errorExists[2224672](2224674 '!=' error[1920526] nil[44]))
      if errorExists[2224672]
      {
        gotoErrorHandling handler[1920543] handler[1920543]
      }
      label handler[1920543]
      val errorExists[2224680]:bool[10] "temp"
      (2224685 'move' errorExists[2224680](2224682 '!=' error[1920526] nil[44]))
      if errorExists[2224680]
      {
        (1920554 call chpl_uncaught_error[170289] error[1920526])
      }
      ref i_x[2513279]:file[235668] "temp"
      (2513283 'move' i_x[2513279](2513281 'set reference' f[1057052]))
      (2513287 call deinit[235979] i_x[2513279])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val default_arg_style[1061527]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2387605]:file[235668] "temp"
    (2387609 'move' i_this[2387605](2387607 'set reference' f[1057052]))
    val ret[2387618]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2387620]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2387622]:Error[167984] "error variable" "temp"
    (2387624 'move' error[2387622] nil[44])
    (2387627 'move' style[2387620](2387630 call _style[236048] i_this[2387605] error[2387622]))
    val errorExists[2387633]:bool[10] "temp"
    (2387635 'move' errorExists[2387633](2387637 '!=' error[2387622] nil[44]))
    if errorExists[2387633]
    {
      (2387642 '=' error[1884981] error[2387622])
      gotoErrorHandlingReturn _endwriter_default_style[2387651] _endwriter_default_style[2387651]
    }
    (2387648 'move' ret[2387618] style[2387620])
    label _endwriter_default_style[2387651]
    (1061533 'move' default_arg_style[1061527] ret[2387618])
    val errorExists[2222520]:bool[10] "temp"
    (2222525 'move' errorExists[2222520](2222522 '!=' error[1884981] nil[44]))
    if errorExists[2222520]
    {
      val error[1920562]:Error[167984] "error variable" "temp"
      (1920564 'move' error[1920562] nil[44])
      (1920568 call close[236112] f[1057052] error[1920562])
      val errorExists[2224688]:bool[10] "temp"
      (2224693 'move' errorExists[2224688](2224690 '!=' error[1920562] nil[44]))
      if errorExists[2224688]
      {
        gotoErrorHandling handler[1920579] handler[1920579]
      }
      label handler[1920579]
      val errorExists[2224696]:bool[10] "temp"
      (2224701 'move' errorExists[2224696](2224698 '!=' error[1920562] nil[44]))
      if errorExists[2224696]
      {
        (1920590 call chpl_uncaught_error[170289] error[1920562])
      }
      ref i_x[2513291]:file[235668] "temp"
      (2513295 'move' i_x[2513291](2513293 'set reference' f[1057052]))
      (2513299 call deinit[235979] i_x[2513291])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val ret_tmp[1908958]:channel(true,dynamic,false)[1061136] "temp"
    (1057077 call writer[1061042] f[1057052] 0 9223372036854775807 tmp[2387533] default_arg_style[1061527] error[1884981] ret_tmp[1908958])
    (1908961 'move' call_tmp[1057069] ret_tmp[1908958])
    val errorExists[2222528]:bool[10] "temp"
    (2222533 'move' errorExists[2222528](2222530 '!=' error[1884981] nil[44]))
    if errorExists[2222528]
    {
      val error[1920598]:Error[167984] "error variable" "temp"
      (1920600 'move' error[1920598] nil[44])
      (1920604 call close[236112] f[1057052] error[1920598])
      val errorExists[2224704]:bool[10] "temp"
      (2224709 'move' errorExists[2224704](2224706 '!=' error[1920598] nil[44]))
      if errorExists[2224704]
      {
        gotoErrorHandling handler[1920615] handler[1920615]
      }
      label handler[1920615]
      val errorExists[2224712]:bool[10] "temp"
      (2224717 'move' errorExists[2224712](2224714 '!=' error[1920598] nil[44]))
      if errorExists[2224712]
      {
        (1920626 call chpl_uncaught_error[170289] error[1920598])
      }
      ref i_x[2513303]:file[235668] "temp"
      (2513307 'move' i_x[2513303](2513305 'set reference' f[1057052]))
      (2513311 call deinit[235979] i_x[2513303])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val w[1057080]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
    (1057082 'move' w[1057080] call_tmp[1057069])
    const-val args[2390234]:1*byteIndex[1057270] "insert auto destroy"
    (2546852 '.=' args[2390234] x0[1057268] _e0_args[1056597])
    const-val ret[2390247]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2390249]:locale[28] "dead after last mention" "maybe param" "temp"
    (2390251 'move' call_tmp[2390249](2390253 '.' w[1057080] _readWriteThisFromLocale[1061133]))
    val ret[2390256]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2390258]:locale[28] "dead after last mention" "temp"
    (2390261 call init=[90170] tmp[2390258] call_tmp[2390249])
    (2390264 'move' ret[2390256] tmp[2390258])
    val ret[2390267]:locale[28] "dead at end of block" "insert auto destroy"
    (2390269 'move' ret[2390267] ret[2390256])
    const-val call_tmp[2390272]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390274 'move' call_tmp[2390272](2390277 call ==[782970] ret[2390267] nilLocale[89942]))
    if call_tmp[2390272]
    {
      const-val call_tmp[2390282]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390284]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2390286]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2390288 'move' call_tmp[2390286](2390291 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2390294 'move' call_tmp[2390284] call_tmp[2390286])
      const-val call_tmp[2390297]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2390299]:locale[28] "temp"
      (2390302 call chpl_localeID_to_locale[92852] call_tmp[2390284] ret_tmp[2390299])
      (2390305 'move' call_tmp[2390297] ret_tmp[2390299])
      (2390308 'move' call_tmp[2390282] call_tmp[2390297])
      (2390312 call =[90634] ret[2390267] call_tmp[2390282])
      ref i_x[2390315]:locale[28] "temp"
      (2390317 'move' i_x[2390315](2390319 'set reference' call_tmp[2390282]))
      (2390322 call deinit[90188] i_x[2390315])
    }
    (2390325 'move' ret[2390247] ret[2390267])
    const-val origLocale[2390328]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2390330 'move' origLocale[2390328] ret[2390247])
    ref call_tmp[2390335]:locale[28] "dead after last mention" "maybe param" "temp"
    (2390337 'move' call_tmp[2390335](2390339 '.' w[1057080] home[1061124]))
    const-val call_tmp[2390342]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2390344]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390346 'move' coerce_tmp[2390344](2390348 '.v' call_tmp[2390335] _instance[89978]))
    val coerce_tmp[2390351]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390353 'move' coerce_tmp[2390351](2390355 'cast' object[22] coerce_tmp[2390344]))
    const-val call_tmp[2390358]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390360 'move' call_tmp[2390358](2390362 'ptr_eq' coerce_tmp[2390351] nil[44]))
    if call_tmp[2390358]
    {
      (2390368 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2390371 'move' call_tmp[2390342](2390373 '_wide_get_locale' coerce_tmp[2390344]))
    val error[2390378]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2390380 'move' error[2390378] nil[44])
    val isdirect[2390394]:bool[10] "temp"
    (2390396 'move' isdirect[2390394](2390399 call chpl_doDirectExecuteOn[187469] call_tmp[2390342]))
    if isdirect[2390394]
    {
      (2390404 call on_fn[1066278] w[1057080] args[2390234] ret[2390247] error[2390378])
    }
    {
      val _args_foron_fn[2390410]:_class_localson_fn[2202136] "temp"
      (2390412 'move' _args_foron_fn[2390410](2390414 'stack allocate class' _class_localson_fn[2202136]))
      (2390416 '.=' _args_foron_fn[2390410] _0_tmp[2202139] call_tmp[2390342])
      (2390420 '.=' _args_foron_fn[2390410] _1_rvfDerefTmp[2202141] w[1057080])
      ref tmp[2390424]:1*byteIndex[1057270] "temp"
      (2390426 'move' tmp[2390424](2390428 'set reference' args[2390234]))
      (2390430 '.=' _args_foron_fn[2390410] _2_args[2202143] tmp[2390424])
      (2390434 '.=' _args_foron_fn[2390410] _3_rvfDerefTmp[2202145] ret[2390247])
      ref tmp[2390438]:Error[167984] "temp"
      (2390440 'move' tmp[2390438](2390442 'set reference' error[2390378]))
      (2390444 '.=' _args_foron_fn[2390410] _4_error[2202147] tmp[2390438])
      val _args_vforon_fn[2390448]:c_void_ptr[149] "temp"
      (2390450 'move' _args_vforon_fn[2390448](2390452 'cast_to_void_star' _args_foron_fn[2390410]))
      val _args_sizeon_fn[2390454]:int(64)[13] "temp"
      (2390456 'move' _args_sizeon_fn[2390454](2390458 'sizeof_bundle' _class_localson_fn[2202136]))
      on(2390461 call wrapon_fn[2202200] call_tmp[2390342] _args_vforon_fn[2390448] _args_sizeon_fn[2390454] _args_foron_fn[2390410])
    }
    val errorExists[2390467]:bool[10] "temp"
    (2390469 'move' errorExists[2390467](2390471 '!=' error[2390378] nil[44]))
    if errorExists[2390467]
    {
      (2390476 '=' error[1884981] error[2390378])
      ref i_x[2390479]:locale[28] "temp"
      (2390481 'move' i_x[2390479](2390483 'set reference' origLocale[2390328]))
      (2390486 call deinit[90188] i_x[2390479])
      gotoErrorHandlingReturn _endwrite[2390503] _endwrite[2390503]
    }
    ref i_x[2390494]:locale[28] "temp"
    (2390496 'move' i_x[2390494](2390498 'set reference' origLocale[2390328]))
    (2390501 call deinit[90188] i_x[2390494])
    label _endwrite[2390503]
    val errorExists[2222536]:bool[10] "temp"
    (2222541 'move' errorExists[2222536](2222538 '!=' error[1884981] nil[44]))
    if errorExists[2222536]
    {
      val error[1920634]:Error[167984] "error variable" "temp"
      (1920636 'move' error[1920634] nil[44])
      (1920640 call close[1062551] w[1057080] error[1920634])
      val errorExists[2224720]:bool[10] "temp"
      (2224725 'move' errorExists[2224720](2224722 '!=' error[1920634] nil[44]))
      if errorExists[2224720]
      {
        gotoErrorHandling handler[1920651] handler[1920651]
      }
      label handler[1920651]
      val errorExists[2224728]:bool[10] "temp"
      (2224733 'move' errorExists[2224728](2224730 '!=' error[1920634] nil[44]))
      if errorExists[2224728]
      {
        (1920662 call chpl_uncaught_error[170289] error[1920634])
      }
      ref i_x[2392612]:channel(true,dynamic,false)[1061136] "temp"
      (2392616 'move' i_x[2392612](2392614 'set reference' w[1057080]))
      (2392620 call deinit[1676346] i_x[2392612])
      val error[1920670]:Error[167984] "error variable" "temp"
      (1920672 'move' error[1920670] nil[44])
      (1920676 call close[236112] f[1057052] error[1920670])
      val errorExists[2224736]:bool[10] "temp"
      (2224741 'move' errorExists[2224736](2224738 '!=' error[1920670] nil[44]))
      if errorExists[2224736]
      {
        gotoErrorHandling handler[1920687] handler[1920687]
      }
      label handler[1920687]
      val errorExists[2224744]:bool[10] "temp"
      (2224749 'move' errorExists[2224744](2224746 '!=' error[1920670] nil[44]))
      if errorExists[2224744]
      {
        (1920698 call chpl_uncaught_error[170289] error[1920670])
      }
      ref i_x[2513315]:file[235668] "temp"
      (2513319 'move' i_x[2513315](2513317 'set reference' f[1057052]))
      (2513323 call deinit[235979] i_x[2513315])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val call_tmp[1057106]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1057108 'move' call_tmp[1057106](1057114 call offset[1080337] w[1057080]))
    const-val call_tmp[2236430]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236432 'move' call_tmp[2236430](2236434 '+' call_tmp[1057106] 1))
    const-val call_tmp[2393759]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393761 'move' call_tmp[2393759](2393763 '<' call_tmp[2236430] 0))
    if call_tmp[2393759]
    {
      (2393769 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2393772]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393774 'move' call_tmp[2393772](2393776 'cast' uint(64)[115] call_tmp[2236430]))
    const-val call_tmp[2393779]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393781 'move' call_tmp[2393779](2393784 call sizeof[1080643] uint(8)[100]))
    const-val call_tmp[2393786]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393788 'move' call_tmp[2393786](2393790 '*' call_tmp[2393772] call_tmp[2393779]))
    const-val call_tmp[2393793]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393795 'move' call_tmp[2393793](2393798 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2393799]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393801 'move' call_tmp[2393799](2393804 call chpl_here_alloc[1080679] call_tmp[2393786] call_tmp[2393793]))
    val call_tmp[2393807]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393809 'move' call_tmp[2393807](2393811 'cast' c_ptr(uint(8))[937612] call_tmp[2393799]))
    val buf[1057144]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
    (1057146 'move' buf[1057144] call_tmp[2393807])
    const-val call_tmp[1057150]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
    val errorExists[2222544]:bool[10] "temp"
    (2222549 'move' errorExists[2222544](2222546 '!=' error[1884981] nil[44]))
    if errorExists[2222544]
    {
      val error[1920706]:Error[167984] "error variable" "temp"
      (1920708 'move' error[1920706] nil[44])
      (1920712 call close[1062551] w[1057080] error[1920706])
      val errorExists[2224752]:bool[10] "temp"
      (2224757 'move' errorExists[2224752](2224754 '!=' error[1920706] nil[44]))
      if errorExists[2224752]
      {
        gotoErrorHandling handler[1920723] handler[1920723]
      }
      label handler[1920723]
      val errorExists[2224760]:bool[10] "temp"
      (2224765 'move' errorExists[2224760](2224762 '!=' error[1920706] nil[44]))
      if errorExists[2224760]
      {
        (1920734 call chpl_uncaught_error[170289] error[1920706])
      }
      ref i_x[2392624]:channel(true,dynamic,false)[1061136] "temp"
      (2392628 'move' i_x[2392624](2392626 'set reference' w[1057080]))
      (2392632 call deinit[1676346] i_x[2392624])
      val error[1920742]:Error[167984] "error variable" "temp"
      (1920744 'move' error[1920742] nil[44])
      (1920748 call close[236112] f[1057052] error[1920742])
      val errorExists[2224768]:bool[10] "temp"
      (2224773 'move' errorExists[2224768](2224770 '!=' error[1920742] nil[44]))
      if errorExists[2224768]
      {
        gotoErrorHandling handler[1920759] handler[1920759]
      }
      label handler[1920759]
      val errorExists[2224776]:bool[10] "temp"
      (2224781 'move' errorExists[2224776](2224778 '!=' error[1920742] nil[44]))
      if errorExists[2224776]
      {
        (1920770 call chpl_uncaught_error[170289] error[1920742])
      }
      ref i_x[2513327]:file[235668] "temp"
      (2513331 'move' i_x[2513327](2513329 'set reference' f[1057052]))
      (2513335 call deinit[235979] i_x[2513327])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    val errorExists[2222552]:bool[10] "temp"
    (2222557 'move' errorExists[2222552](2222554 '!=' error[1884981] nil[44]))
    if errorExists[2222552]
    {
      val error[1920778]:Error[167984] "error variable" "temp"
      (1920780 'move' error[1920778] nil[44])
      (1920784 call close[1062551] w[1057080] error[1920778])
      val errorExists[2224784]:bool[10] "temp"
      (2224789 'move' errorExists[2224784](2224786 '!=' error[1920778] nil[44]))
      if errorExists[2224784]
      {
        gotoErrorHandling handler[1920795] handler[1920795]
      }
      label handler[1920795]
      val errorExists[2224792]:bool[10] "temp"
      (2224797 'move' errorExists[2224792](2224794 '!=' error[1920778] nil[44]))
      if errorExists[2224792]
      {
        (1920806 call chpl_uncaught_error[170289] error[1920778])
      }
      ref i_x[2392636]:channel(true,dynamic,false)[1061136] "temp"
      (2392640 'move' i_x[2392636](2392638 'set reference' w[1057080]))
      (2392644 call deinit[1676346] i_x[2392636])
      val error[1920814]:Error[167984] "error variable" "temp"
      (1920816 'move' error[1920814] nil[44])
      (1920820 call close[236112] f[1057052] error[1920814])
      val errorExists[2224800]:bool[10] "temp"
      (2224805 'move' errorExists[2224800](2224802 '!=' error[1920814] nil[44]))
      if errorExists[2224800]
      {
        gotoErrorHandling handler[1920831] handler[1920831]
      }
      label handler[1920831]
      val errorExists[2224808]:bool[10] "temp"
      (2224813 'move' errorExists[2224808](2224810 '!=' error[1920814] nil[44]))
      if errorExists[2224808]
      {
        (1920842 call chpl_uncaught_error[170289] error[1920814])
      }
      ref i_x[2513339]:file[235668] "temp"
      (2513343 'move' i_x[2513339](2513341 'set reference' f[1057052]))
      (2513347 call deinit[235979] i_x[2513339])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val tmp[2394098]:int(32)[95] "dead after last mention" "temp"
    (2394100 'move' tmp[2394098] IOHINT_NONE[231499])
    val errorExists[2222560]:bool[10] "temp"
    (2222565 'move' errorExists[2222560](2222562 '!=' error[1884981] nil[44]))
    if errorExists[2222560]
    {
      val error[1920850]:Error[167984] "error variable" "temp"
      (1920852 'move' error[1920850] nil[44])
      (1920856 call close[1062551] w[1057080] error[1920850])
      val errorExists[2224816]:bool[10] "temp"
      (2224821 'move' errorExists[2224816](2224818 '!=' error[1920850] nil[44]))
      if errorExists[2224816]
      {
        gotoErrorHandling handler[1920867] handler[1920867]
      }
      label handler[1920867]
      val errorExists[2224824]:bool[10] "temp"
      (2224829 'move' errorExists[2224824](2224826 '!=' error[1920850] nil[44]))
      if errorExists[2224824]
      {
        (1920878 call chpl_uncaught_error[170289] error[1920850])
      }
      ref i_x[2392648]:channel(true,dynamic,false)[1061136] "temp"
      (2392652 'move' i_x[2392648](2392650 'set reference' w[1057080]))
      (2392656 call deinit[1676346] i_x[2392648])
      val error[1920886]:Error[167984] "error variable" "temp"
      (1920888 'move' error[1920886] nil[44])
      (1920892 call close[236112] f[1057052] error[1920886])
      val errorExists[2224832]:bool[10] "temp"
      (2224837 'move' errorExists[2224832](2224834 '!=' error[1920886] nil[44]))
      if errorExists[2224832]
      {
        gotoErrorHandling handler[1920903] handler[1920903]
      }
      label handler[1920903]
      val errorExists[2224840]:bool[10] "temp"
      (2224845 'move' errorExists[2224840](2224842 '!=' error[1920886] nil[44]))
      if errorExists[2224840]
      {
        (1920914 call chpl_uncaught_error[170289] error[1920886])
      }
      ref i_x[2513351]:file[235668] "temp"
      (2513355 'move' i_x[2513351](2513353 'set reference' f[1057052]))
      (2513359 call deinit[235979] i_x[2513351])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val default_arg_style[1081259]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2394164]:file[235668] "temp"
    (2394168 'move' i_this[2394164](2394166 'set reference' f[1057052]))
    val ret[2394177]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2394179]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2394181]:Error[167984] "error variable" "temp"
    (2394183 'move' error[2394181] nil[44])
    (2394186 'move' style[2394179](2394189 call _style[236048] i_this[2394164] error[2394181]))
    val errorExists[2394192]:bool[10] "temp"
    (2394194 'move' errorExists[2394192](2394196 '!=' error[2394181] nil[44]))
    if errorExists[2394192]
    {
      (2394201 '=' error[1884981] error[2394181])
      gotoErrorHandlingReturn _endreader_default_style[2394210] _endreader_default_style[2394210]
    }
    (2394207 'move' ret[2394177] style[2394179])
    label _endreader_default_style[2394210]
    (1081265 'move' default_arg_style[1081259] ret[2394177])
    val errorExists[2222568]:bool[10] "temp"
    (2222573 'move' errorExists[2222568](2222570 '!=' error[1884981] nil[44]))
    if errorExists[2222568]
    {
      val error[1920922]:Error[167984] "error variable" "temp"
      (1920924 'move' error[1920922] nil[44])
      (1920928 call close[1062551] w[1057080] error[1920922])
      val errorExists[2224848]:bool[10] "temp"
      (2224853 'move' errorExists[2224848](2224850 '!=' error[1920922] nil[44]))
      if errorExists[2224848]
      {
        gotoErrorHandling handler[1920939] handler[1920939]
      }
      label handler[1920939]
      val errorExists[2224856]:bool[10] "temp"
      (2224861 'move' errorExists[2224856](2224858 '!=' error[1920922] nil[44]))
      if errorExists[2224856]
      {
        (1920950 call chpl_uncaught_error[170289] error[1920922])
      }
      ref i_x[2392660]:channel(true,dynamic,false)[1061136] "temp"
      (2392664 'move' i_x[2392660](2392662 'set reference' w[1057080]))
      (2392668 call deinit[1676346] i_x[2392660])
      val error[1920958]:Error[167984] "error variable" "temp"
      (1920960 'move' error[1920958] nil[44])
      (1920964 call close[236112] f[1057052] error[1920958])
      val errorExists[2224864]:bool[10] "temp"
      (2224869 'move' errorExists[2224864](2224866 '!=' error[1920958] nil[44]))
      if errorExists[2224864]
      {
        gotoErrorHandling handler[1920975] handler[1920975]
      }
      label handler[1920975]
      val errorExists[2224872]:bool[10] "temp"
      (2224877 'move' errorExists[2224872](2224874 '!=' error[1920958] nil[44]))
      if errorExists[2224872]
      {
        (1920986 call chpl_uncaught_error[170289] error[1920958])
      }
      ref i_x[2513363]:file[235668] "temp"
      (2513367 'move' i_x[2513363](2513365 'set reference' f[1057052]))
      (2513371 call deinit[235979] i_x[2513363])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val ret_tmp[1909360]:channel(false,dynamic,false)[1080871] "temp"
    (1057158 call reader[1080777] f[1057052] 0 9223372036854775807 tmp[2394098] default_arg_style[1081259] error[1884981] ret_tmp[1909360])
    (1909363 'move' call_tmp[1057150] ret_tmp[1909360])
    val errorExists[2222576]:bool[10] "temp"
    (2222581 'move' errorExists[2222576](2222578 '!=' error[1884981] nil[44]))
    if errorExists[2222576]
    {
      val error[1920994]:Error[167984] "error variable" "temp"
      (1920996 'move' error[1920994] nil[44])
      (1921000 call close[1062551] w[1057080] error[1920994])
      val errorExists[2224880]:bool[10] "temp"
      (2224885 'move' errorExists[2224880](2224882 '!=' error[1920994] nil[44]))
      if errorExists[2224880]
      {
        gotoErrorHandling handler[1921011] handler[1921011]
      }
      label handler[1921011]
      val errorExists[2224888]:bool[10] "temp"
      (2224893 'move' errorExists[2224888](2224890 '!=' error[1920994] nil[44]))
      if errorExists[2224888]
      {
        (1921022 call chpl_uncaught_error[170289] error[1920994])
      }
      ref i_x[2392672]:channel(true,dynamic,false)[1061136] "temp"
      (2392676 'move' i_x[2392672](2392674 'set reference' w[1057080]))
      (2392680 call deinit[1676346] i_x[2392672])
      val error[1921030]:Error[167984] "error variable" "temp"
      (1921032 'move' error[1921030] nil[44])
      (1921036 call close[236112] f[1057052] error[1921030])
      val errorExists[2224896]:bool[10] "temp"
      (2224901 'move' errorExists[2224896](2224898 '!=' error[1921030] nil[44]))
      if errorExists[2224896]
      {
        gotoErrorHandling handler[1921047] handler[1921047]
      }
      label handler[1921047]
      val errorExists[2224904]:bool[10] "temp"
      (2224909 'move' errorExists[2224904](2224906 '!=' error[1921030] nil[44]))
      if errorExists[2224904]
      {
        (1921058 call chpl_uncaught_error[170289] error[1921030])
      }
      ref i_x[2513375]:file[235668] "temp"
      (2513379 'move' i_x[2513375](2513377 'set reference' f[1057052]))
      (2513383 call deinit[235979] i_x[2513375])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val r[1057161]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
    (1057163 'move' r[1057161] call_tmp[1057150])
    (1057190 call readBytes[1083028] r[1057161] call_tmp[2393807] call_tmp[1057106] error[1884981])
    val errorExists[2222584]:bool[10] "temp"
    (2222589 'move' errorExists[2222584](2222586 '!=' error[1884981] nil[44]))
    if errorExists[2222584]
    {
      val error[1921066]:Error[167984] "error variable" "temp"
      (1921068 'move' error[1921066] nil[44])
      (1921072 call close[1082283] r[1057161] error[1921066])
      val errorExists[2224912]:bool[10] "temp"
      (2224917 'move' errorExists[2224912](2224914 '!=' error[1921066] nil[44]))
      if errorExists[2224912]
      {
        gotoErrorHandling handler[1921083] handler[1921083]
      }
      label handler[1921083]
      val errorExists[2224920]:bool[10] "temp"
      (2224925 'move' errorExists[2224920](2224922 '!=' error[1921066] nil[44]))
      if errorExists[2224920]
      {
        (1921094 call chpl_uncaught_error[170289] error[1921066])
      }
      ref i_x[2517066]:channel(false,dynamic,false)[1080871] "temp"
      (2517070 'move' i_x[2517066](2517068 'set reference' r[1057161]))
      (2517074 call deinit[1680600] i_x[2517066])
      val error[1921102]:Error[167984] "error variable" "temp"
      (1921104 'move' error[1921102] nil[44])
      (1921108 call close[1062551] w[1057080] error[1921102])
      val errorExists[2224928]:bool[10] "temp"
      (2224933 'move' errorExists[2224928](2224930 '!=' error[1921102] nil[44]))
      if errorExists[2224928]
      {
        gotoErrorHandling handler[1921119] handler[1921119]
      }
      label handler[1921119]
      val errorExists[2224936]:bool[10] "temp"
      (2224941 'move' errorExists[2224936](2224938 '!=' error[1921102] nil[44]))
      if errorExists[2224936]
      {
        (1921130 call chpl_uncaught_error[170289] error[1921102])
      }
      ref i_x[2392684]:channel(true,dynamic,false)[1061136] "temp"
      (2392688 'move' i_x[2392684](2392686 'set reference' w[1057080]))
      (2392692 call deinit[1676346] i_x[2392684])
      val error[1921138]:Error[167984] "error variable" "temp"
      (1921140 'move' error[1921138] nil[44])
      (1921144 call close[236112] f[1057052] error[1921138])
      val errorExists[2224944]:bool[10] "temp"
      (2224949 'move' errorExists[2224944](2224946 '!=' error[1921138] nil[44]))
      if errorExists[2224944]
      {
        gotoErrorHandling handler[1921155] handler[1921155]
      }
      label handler[1921155]
      val errorExists[2224952]:bool[10] "temp"
      (2224957 'move' errorExists[2224952](2224954 '!=' error[1921138] nil[44]))
      if errorExists[2224952]
      {
        (1921166 call chpl_uncaught_error[170289] error[1921138])
      }
      ref i_x[2513387]:file[235668] "temp"
      (2513391 'move' i_x[2513387](2513389 'set reference' f[1057052]))
      (2513395 call deinit[235979] i_x[2513387])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    ref call_tmp[2317068]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2317070 'move' call_tmp[2317068](2317072 'array_get' buf[1057144] call_tmp[1057106]))
    const-val coerce_tmp[1083521]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083527 'move' coerce_tmp[1083521](1083523 'cast' uint(8)[100] 0))
    (2317554 '=' call_tmp[2317068] coerce_tmp[1083521])
    const-val ret[2257362]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257364]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257366]:Error[167984] "error variable" "temp"
    (2257368 'move' error[2257366] nil[44])
    const-val ret_tmp[2257371]:string[26] "temp"
    (2257374 call decodeByteBuffer[173938] call_tmp[2393807] call_tmp[1057106] replace[173694] error[2257366] ret_tmp[2257371])
    (2257380 'move' call_tmp[2257364] ret_tmp[2257371])
    val errorExists[2257383]:bool[10] "temp"
    (2257385 'move' errorExists[2257383](2257387 '!=' error[2257366] nil[44]))
    if errorExists[2257383]
    {
      (2257392 '=' error[1884981] error[2257366])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257401] _endcreateStringWithNewBuffer[2257401]
    }
    (2257398 'move' ret[2257362] call_tmp[2257364])
    label _endcreateStringWithNewBuffer[2257401]
    val errorExists[2222592]:bool[10] "temp"
    (2222597 'move' errorExists[2222592](2222594 '!=' error[1884981] nil[44]))
    if errorExists[2222592]
    {
      val error[1921174]:Error[167984] "error variable" "temp"
      (1921176 'move' error[1921174] nil[44])
      (1921180 call close[1082283] r[1057161] error[1921174])
      val errorExists[2224960]:bool[10] "temp"
      (2224965 'move' errorExists[2224960](2224962 '!=' error[1921174] nil[44]))
      if errorExists[2224960]
      {
        gotoErrorHandling handler[1921191] handler[1921191]
      }
      label handler[1921191]
      val errorExists[2224968]:bool[10] "temp"
      (2224973 'move' errorExists[2224968](2224970 '!=' error[1921174] nil[44]))
      if errorExists[2224968]
      {
        (1921202 call chpl_uncaught_error[170289] error[1921174])
      }
      ref i_x[2517078]:channel(false,dynamic,false)[1080871] "temp"
      (2517082 'move' i_x[2517078](2517080 'set reference' r[1057161]))
      (2517086 call deinit[1680600] i_x[2517078])
      val error[1921210]:Error[167984] "error variable" "temp"
      (1921212 'move' error[1921210] nil[44])
      (1921216 call close[1062551] w[1057080] error[1921210])
      val errorExists[2224976]:bool[10] "temp"
      (2224981 'move' errorExists[2224976](2224978 '!=' error[1921210] nil[44]))
      if errorExists[2224976]
      {
        gotoErrorHandling handler[1921227] handler[1921227]
      }
      label handler[1921227]
      val errorExists[2224984]:bool[10] "temp"
      (2224989 'move' errorExists[2224984](2224986 '!=' error[1921210] nil[44]))
      if errorExists[2224984]
      {
        (1921238 call chpl_uncaught_error[170289] error[1921210])
      }
      ref i_x[2392696]:channel(true,dynamic,false)[1061136] "temp"
      (2392700 'move' i_x[2392696](2392698 'set reference' w[1057080]))
      (2392704 call deinit[1676346] i_x[2392696])
      val error[1921246]:Error[167984] "error variable" "temp"
      (1921248 'move' error[1921246] nil[44])
      (1921252 call close[236112] f[1057052] error[1921246])
      val errorExists[2224992]:bool[10] "temp"
      (2224997 'move' errorExists[2224992](2224994 '!=' error[1921246] nil[44]))
      if errorExists[2224992]
      {
        gotoErrorHandling handler[1921263] handler[1921263]
      }
      label handler[1921263]
      val errorExists[2225000]:bool[10] "temp"
      (2225005 'move' errorExists[2225000](2225002 '!=' error[1921246] nil[44]))
      if errorExists[2225000]
      {
        (1921274 call chpl_uncaught_error[170289] error[1921246])
      }
      ref i_x[2513399]:file[235668] "temp"
      (2513403 'move' i_x[2513399](2513401 'set reference' f[1057052]))
      (2513407 call deinit[235979] i_x[2513399])
      gotoErrorHandling handler[1884982] handler[1884982]
    }
    const-val coerce_tmp[1083532]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1083538 'move' coerce_tmp[1083532](1083534 'cast' c_void_ptr[149] call_tmp[2393807]))
    (2325158 call chpl_here_free[188127] coerce_tmp[1083532])
    (1083543 'move' ret[1056601] ret[2257362])
    val error[1921282]:Error[167984] "error variable" "temp"
    (1921284 'move' error[1921282] nil[44])
    (1921288 call close[1082283] r[1057161] error[1921282])
    val errorExists[2225008]:bool[10] "temp"
    (2225013 'move' errorExists[2225008](2225010 '!=' error[1921282] nil[44]))
    if errorExists[2225008]
    {
      gotoErrorHandling handler[1921299] handler[1921299]
    }
    label handler[1921299]
    val errorExists[2225016]:bool[10] "temp"
    (2225021 'move' errorExists[2225016](2225018 '!=' error[1921282] nil[44]))
    if errorExists[2225016]
    {
      (1921310 call chpl_uncaught_error[170289] error[1921282])
    }
    ref i_x[2517090]:channel(false,dynamic,false)[1080871] "temp"
    (2517094 'move' i_x[2517090](2517092 'set reference' r[1057161]))
    (2517098 call deinit[1680600] i_x[2517090])
    val error[1921318]:Error[167984] "error variable" "temp"
    (1921320 'move' error[1921318] nil[44])
    (1921324 call close[1062551] w[1057080] error[1921318])
    val errorExists[2225024]:bool[10] "temp"
    (2225029 'move' errorExists[2225024](2225026 '!=' error[1921318] nil[44]))
    if errorExists[2225024]
    {
      gotoErrorHandling handler[1921335] handler[1921335]
    }
    label handler[1921335]
    val errorExists[2225032]:bool[10] "temp"
    (2225037 'move' errorExists[2225032](2225034 '!=' error[1921318] nil[44]))
    if errorExists[2225032]
    {
      (1921346 call chpl_uncaught_error[170289] error[1921318])
    }
    ref i_x[2392708]:channel(true,dynamic,false)[1061136] "temp"
    (2392712 'move' i_x[2392708](2392710 'set reference' w[1057080]))
    (2392716 call deinit[1676346] i_x[2392708])
    val error[1921354]:Error[167984] "error variable" "temp"
    (1921356 'move' error[1921354] nil[44])
    (1921360 call close[236112] f[1057052] error[1921354])
    val errorExists[2225040]:bool[10] "temp"
    (2225045 'move' errorExists[2225040](2225042 '!=' error[1921354] nil[44]))
    if errorExists[2225040]
    {
      gotoErrorHandling handler[1921371] handler[1921371]
    }
    label handler[1921371]
    val errorExists[2225048]:bool[10] "temp"
    (2225053 'move' errorExists[2225048](2225050 '!=' error[1921354] nil[44]))
    if errorExists[2225048]
    {
      (1921382 call chpl_uncaught_error[170289] error[1921354])
    }
    ref i_x[2513411]:file[235668] "temp"
    (2513415 'move' i_x[2513411](2513413 'set reference' f[1057052]))
    (2513419 call deinit[235979] i_x[2513411])
    gotoReturn _end_stringify[1057258] _end_stringify[1057258]
    label handler[1884982]
    val errorExists[2222600]:bool[10] "temp"
    (2222605 'move' errorExists[2222600](2222602 '!=' error[1884981] nil[44]))
    if errorExists[2222600]
    {
      (1885172 call chpl_uncaught_error[170289] error[1884981])
    }
    label _end_stringify[1057258]
    (1908936 '=' _retArg[1908934] ret[1056601])
    (1908938 return _void[55])
  }
  function stringify[1442480](const  ref arg _e0_args[1442482]:string[26], ref arg _retArg[1915127]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1442486]:string[26] "dead after last mention" "RVV" "temp"
    val str[1442518]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326482]:string[26] "temp"
    (2326485 'move' inlineImm[2326482] "")
    ref i_x[2326487]:string[26] "temp"
    (2326491 'move' i_x[2326487](2326489 'set reference' inlineImm[2326482]))
    val ret[2326494]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326496]:string[26] "dead after last mention" "temp"
    (2326499 call init=[30774] tmp[2326496] i_x[2326487])
    (2326502 'move' ret[2326494] tmp[2326496])
    (1442520 'move' str[1442518] ret[2326494])
    (1446085 call +=[38800] str[1442518] _e0_args[1442482])
    (1446422 'move' ret[1442486] str[1442518])
    gotoReturn _end_stringify[1443143] _end_stringify[1443143]
    label _end_stringify[1443143]
    (1915129 '=' _retArg[1915127] ret[1442486])
    (1915133 return _void[55])
  }
  function stringify[1043891](const  ref arg _e0_args[1043893]:string[26], const in arg _e1_args[1043895]:range(byteIndex,bounded,false)[1025981], const  ref arg _e2_args[1043897]:string[26], const in arg _e3_args[1043899]:int(64)[13], ref arg _retArg[1908852]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1043903]:string[26] "dead after last mention" "RVV" "temp"
    val str[1043944]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326082]:string[26] "temp"
    (2326085 'move' inlineImm[2326082] "")
    ref i_x[2326087]:string[26] "temp"
    (2326091 'move' i_x[2326087](2326089 'set reference' inlineImm[2326082]))
    val ret[2326094]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326096]:string[26] "dead after last mention" "temp"
    (2326099 call init=[30774] tmp[2326096] i_x[2326087])
    (2326102 'move' ret[2326094] tmp[2326096])
    (1043946 'move' str[1043944] ret[2326094])
    (1053077 call +=[38800] str[1043944] _e0_args[1043893])
    const-val call_tmp[1053652]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1908886]:string[26] "temp"
    (1053657 call _cast[1054547] _e1_args[1043895] ret_tmp[1908886])
    (1908889 'move' call_tmp[1053652] ret_tmp[1908886])
    (1053661 call +=[38800] str[1043944] call_tmp[1053652])
    ref i_x[2247197]:string[26] "temp"
    (2247201 'move' i_x[2247197](2247199 'set reference' call_tmp[1053652]))
    (2247205 call deinit[30834] i_x[2247197])
    (1053767 call +=[38800] str[1043944] _e2_args[1043897])
    const-val call_tmp[1054342]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909012]:string[26] "temp"
    (1054347 call _cast[1063342] _e3_args[1043899] ret_tmp[1909012])
    (1909015 'move' call_tmp[1054342] ret_tmp[1909012])
    (1054351 call +=[38800] str[1043944] call_tmp[1054342])
    ref i_x[2247209]:string[26] "temp"
    (2247213 'move' i_x[2247209](2247211 'set reference' call_tmp[1054342]))
    (2247217 call deinit[30834] i_x[2247209])
    (1085052 'move' ret[1043903] str[1043944])
    gotoReturn _end_stringify[1044569] _end_stringify[1044569]
    label _end_stringify[1044569]
    (1908854 '=' _retArg[1908852] ret[1043903])
    (1908860 return _void[55])
  }
  function stringify[1113709](const  ref arg _e0_args[1113711]:string[26], const in arg _e1_args[1113713]:range(int(64),bounded,false)[1027003], const  ref arg _e2_args[1113715]:string[26], const in arg _e3_args[1113717]:int(64)[13], ref arg _retArg[1909956]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1113721]:string[26] "dead after last mention" "RVV" "temp"
    val str[1113762]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326182]:string[26] "temp"
    (2326185 'move' inlineImm[2326182] "")
    ref i_x[2326187]:string[26] "temp"
    (2326191 'move' i_x[2326187](2326189 'set reference' inlineImm[2326182]))
    val ret[2326194]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326196]:string[26] "dead after last mention" "temp"
    (2326199 call init=[30774] tmp[2326196] i_x[2326187])
    (2326202 'move' ret[2326194] tmp[2326196])
    (1113764 'move' str[1113762] ret[2326194])
    (1118156 call +=[38800] str[1113762] _e0_args[1113711])
    const-val call_tmp[1118731]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909978]:string[26] "temp"
    (1118736 call _cast[1119626] _e1_args[1113713] ret_tmp[1909978])
    (1909981 'move' call_tmp[1118731] ret_tmp[1909978])
    (1118740 call +=[38800] str[1113762] call_tmp[1118731])
    ref i_x[2247701]:string[26] "temp"
    (2247705 'move' i_x[2247701](2247703 'set reference' call_tmp[1118731]))
    (2247709 call deinit[30834] i_x[2247701])
    (1118846 call +=[38800] str[1113762] _e2_args[1113715])
    const-val call_tmp[1119421]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909036]:string[26] "temp"
    (1119426 call _cast[1063342] _e3_args[1113717] ret_tmp[1909036])
    (1909039 'move' call_tmp[1119421] ret_tmp[1909036])
    (1119430 call +=[38800] str[1113762] call_tmp[1119421])
    ref i_x[2247713]:string[26] "temp"
    (2247717 'move' i_x[2247713](2247715 'set reference' call_tmp[1119421]))
    (2247721 call deinit[30834] i_x[2247713])
    (1121088 'move' ret[1113721] str[1113762])
    gotoReturn _end_stringify[1114387] _end_stringify[1114387]
    label _end_stringify[1114387]
    (1909958 '=' _retArg[1909956] ret[1113721])
    (1909964 return _void[55])
  }
  function stringify[1128533](const  ref arg _e0_args[1128535]:string[26], const in arg _e1_args[1128537]:range(int(64),boundedLow,false)[1087754], const  ref arg _e2_args[1128539]:string[26], const in arg _e3_args[1128541]:int(64)[13], ref arg _retArg[1910250]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1128545]:string[26] "dead after last mention" "RVV" "temp"
    val str[1128586]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326207]:string[26] "temp"
    (2326210 'move' inlineImm[2326207] "")
    ref i_x[2326212]:string[26] "temp"
    (2326216 'move' i_x[2326212](2326214 'set reference' inlineImm[2326207]))
    val ret[2326219]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326221]:string[26] "dead after last mention" "temp"
    (2326224 call init=[30774] tmp[2326221] i_x[2326212])
    (2326227 'move' ret[2326219] tmp[2326221])
    (1128588 'move' str[1128586] ret[2326219])
    (1134679 call +=[38800] str[1128586] _e0_args[1128535])
    const-val call_tmp[1135254]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910272]:string[26] "temp"
    (1135259 call _cast[1136149] _e1_args[1128537] ret_tmp[1910272])
    (1910275 'move' call_tmp[1135254] ret_tmp[1910272])
    (1135263 call +=[38800] str[1128586] call_tmp[1135254])
    ref i_x[2247773]:string[26] "temp"
    (2247777 'move' i_x[2247773](2247775 'set reference' call_tmp[1135254]))
    (2247781 call deinit[30834] i_x[2247773])
    (1135369 call +=[38800] str[1128586] _e2_args[1128539])
    const-val call_tmp[1135944]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909054]:string[26] "temp"
    (1135949 call _cast[1063342] _e3_args[1128541] ret_tmp[1909054])
    (1909057 'move' call_tmp[1135944] ret_tmp[1909054])
    (1135953 call +=[38800] str[1128586] call_tmp[1135944])
    ref i_x[2247785]:string[26] "temp"
    (2247789 'move' i_x[2247785](2247787 'set reference' call_tmp[1135944]))
    (2247793 call deinit[30834] i_x[2247785])
    (1139142 'move' ret[1128545] str[1128586])
    gotoReturn _end_stringify[1129211] _end_stringify[1129211]
    label _end_stringify[1129211]
    (1910252 '=' _retArg[1910250] ret[1128545])
    (1910258 return _void[55])
  }
  function stringify[1146704](const  ref arg _e0_args[1146706]:string[26], const in arg _e1_args[1146708]:range(byteIndex,boundedLow,false)[1143592], const  ref arg _e2_args[1146710]:string[26], const in arg _e3_args[1146712]:int(64)[13], ref arg _retArg[1910514]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1146716]:string[26] "dead after last mention" "RVV" "temp"
    val str[1146757]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326232]:string[26] "temp"
    (2326235 'move' inlineImm[2326232] "")
    ref i_x[2326237]:string[26] "temp"
    (2326241 'move' i_x[2326237](2326239 'set reference' inlineImm[2326232]))
    val ret[2326244]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326246]:string[26] "dead after last mention" "temp"
    (2326249 call init=[30774] tmp[2326246] i_x[2326237])
    (2326252 'move' ret[2326244] tmp[2326246])
    (1146759 'move' str[1146757] ret[2326244])
    (1153143 call +=[38800] str[1146757] _e0_args[1146706])
    const-val call_tmp[1153718]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910554]:string[26] "temp"
    (1153723 call _cast[1154613] _e1_args[1146708] ret_tmp[1910554])
    (1910557 'move' call_tmp[1153718] ret_tmp[1910554])
    (1153727 call +=[38800] str[1146757] call_tmp[1153718])
    ref i_x[2247857]:string[26] "temp"
    (2247861 'move' i_x[2247857](2247859 'set reference' call_tmp[1153718]))
    (2247865 call deinit[30834] i_x[2247857])
    (1153833 call +=[38800] str[1146757] _e2_args[1146710])
    const-val call_tmp[1154408]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909072]:string[26] "temp"
    (1154413 call _cast[1063342] _e3_args[1146712] ret_tmp[1909072])
    (1909075 'move' call_tmp[1154408] ret_tmp[1909072])
    (1154417 call +=[38800] str[1146757] call_tmp[1154408])
    ref i_x[2247869]:string[26] "temp"
    (2247873 'move' i_x[2247869](2247871 'set reference' call_tmp[1154408]))
    (2247877 call deinit[30834] i_x[2247869])
    (1156463 'move' ret[1146716] str[1146757])
    gotoReturn _end_stringify[1147382] _end_stringify[1147382]
    label _end_stringify[1147382]
    (1910516 '=' _retArg[1910514] ret[1146716])
    (1910522 return _void[55])
  }
  function stringify[1176010](const  ref arg _e0_args[1176012]:string[26], const  ref arg _e1_args[1176014]:codepointIndex[28277], const  ref arg _e2_args[1176016]:string[26], const in arg _e3_args[1176018]:int(64)[13], ref arg _retArg[1910630]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1176022]:string[26] "dead after last mention" "RVV" "temp"
    val error[1886772]:Error[167984] "error variable" "temp"
    (1886957 'move' error[1886772] nil[44])
    const-val call_tmp[1176476]:file[235668] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1179814]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2387373]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2387375 'move' style[2387373](2387378 call defaultIOStyle[235383]))
    (1179818 'move' default_arg_style[1179814] style[2387373])
    val errorExists[2223368]:bool[10] "temp"
    (2223373 'move' errorExists[2223368](2223370 '!=' error[1886772] nil[44]))
    if errorExists[2223368]
    {
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val ret_tmp[1907338]:file[235668] "temp"
    (1176481 call openmem[237713] default_arg_style[1179814] error[1886772] ret_tmp[1907338])
    (1907341 'move' call_tmp[1176476] ret_tmp[1907338])
    val errorExists[2223376]:bool[10] "temp"
    (2223381 'move' errorExists[2223376](2223378 '!=' error[1886772] nil[44]))
    if errorExists[2223376]
    {
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val f[1176482]:file[235668] "dead at end of block" "insert auto destroy"
    (1176484 'move' f[1176482] call_tmp[1176476])
    const-val call_tmp[1176499]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
    val errorExists[2223384]:bool[10] "temp"
    (2223389 'move' errorExists[2223384](2223386 '!=' error[1886772] nil[44]))
    if errorExists[2223384]
    {
      val error[1923316]:Error[167984] "error variable" "temp"
      (1923318 'move' error[1923316] nil[44])
      (1923322 call close[236112] f[1176482] error[1923316])
      val errorExists[2225472]:bool[10] "temp"
      (2225477 'move' errorExists[2225472](2225474 '!=' error[1923316] nil[44]))
      if errorExists[2225472]
      {
        gotoErrorHandling handler[1923333] handler[1923333]
      }
      label handler[1923333]
      val errorExists[2225480]:bool[10] "temp"
      (2225485 'move' errorExists[2225480](2225482 '!=' error[1923316] nil[44]))
      if errorExists[2225480]
      {
        (1923344 call chpl_uncaught_error[170289] error[1923316])
      }
      ref i_x[2513591]:file[235668] "temp"
      (2513595 'move' i_x[2513591](2513593 'set reference' f[1176482]))
      (2513599 call deinit[235979] i_x[2513591])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    val errorExists[2223392]:bool[10] "temp"
    (2223397 'move' errorExists[2223392](2223394 '!=' error[1886772] nil[44]))
    if errorExists[2223392]
    {
      val error[1923352]:Error[167984] "error variable" "temp"
      (1923354 'move' error[1923352] nil[44])
      (1923358 call close[236112] f[1176482] error[1923352])
      val errorExists[2225488]:bool[10] "temp"
      (2225493 'move' errorExists[2225488](2225490 '!=' error[1923352] nil[44]))
      if errorExists[2225488]
      {
        gotoErrorHandling handler[1923369] handler[1923369]
      }
      label handler[1923369]
      val errorExists[2225496]:bool[10] "temp"
      (2225501 'move' errorExists[2225496](2225498 '!=' error[1923352] nil[44]))
      if errorExists[2225496]
      {
        (1923380 call chpl_uncaught_error[170289] error[1923352])
      }
      ref i_x[2513603]:file[235668] "temp"
      (2513607 'move' i_x[2513603](2513605 'set reference' f[1176482]))
      (2513611 call deinit[235979] i_x[2513603])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val tmp[2387591]:int(32)[95] "dead after last mention" "temp"
    (2387593 'move' tmp[2387591](2387595 'cast' int(32)[95] 0))
    val errorExists[2223400]:bool[10] "temp"
    (2223405 'move' errorExists[2223400](2223402 '!=' error[1886772] nil[44]))
    if errorExists[2223400]
    {
      val error[1923388]:Error[167984] "error variable" "temp"
      (1923390 'move' error[1923388] nil[44])
      (1923394 call close[236112] f[1176482] error[1923388])
      val errorExists[2225504]:bool[10] "temp"
      (2225509 'move' errorExists[2225504](2225506 '!=' error[1923388] nil[44]))
      if errorExists[2225504]
      {
        gotoErrorHandling handler[1923405] handler[1923405]
      }
      label handler[1923405]
      val errorExists[2225512]:bool[10] "temp"
      (2225517 'move' errorExists[2225512](2225514 '!=' error[1923388] nil[44]))
      if errorExists[2225512]
      {
        (1923416 call chpl_uncaught_error[170289] error[1923388])
      }
      ref i_x[2513615]:file[235668] "temp"
      (2513619 'move' i_x[2513615](2513617 'set reference' f[1176482]))
      (2513623 call deinit[235979] i_x[2513615])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val default_arg_style[1179873]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2387705]:file[235668] "temp"
    (2387709 'move' i_this[2387705](2387707 'set reference' f[1176482]))
    val ret[2387718]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2387720]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2387722]:Error[167984] "error variable" "temp"
    (2387724 'move' error[2387722] nil[44])
    (2387727 'move' style[2387720](2387730 call _style[236048] i_this[2387705] error[2387722]))
    val errorExists[2387733]:bool[10] "temp"
    (2387735 'move' errorExists[2387733](2387737 '!=' error[2387722] nil[44]))
    if errorExists[2387733]
    {
      (2387742 '=' error[1886772] error[2387722])
      gotoErrorHandlingReturn _endwriter_default_style[2387751] _endwriter_default_style[2387751]
    }
    (2387748 'move' ret[2387718] style[2387720])
    label _endwriter_default_style[2387751]
    (1179879 'move' default_arg_style[1179873] ret[2387718])
    val errorExists[2223408]:bool[10] "temp"
    (2223413 'move' errorExists[2223408](2223410 '!=' error[1886772] nil[44]))
    if errorExists[2223408]
    {
      val error[1923424]:Error[167984] "error variable" "temp"
      (1923426 'move' error[1923424] nil[44])
      (1923430 call close[236112] f[1176482] error[1923424])
      val errorExists[2225520]:bool[10] "temp"
      (2225525 'move' errorExists[2225520](2225522 '!=' error[1923424] nil[44]))
      if errorExists[2225520]
      {
        gotoErrorHandling handler[1923441] handler[1923441]
      }
      label handler[1923441]
      val errorExists[2225528]:bool[10] "temp"
      (2225533 'move' errorExists[2225528](2225530 '!=' error[1923424] nil[44]))
      if errorExists[2225528]
      {
        (1923452 call chpl_uncaught_error[170289] error[1923424])
      }
      ref i_x[2513627]:file[235668] "temp"
      (2513631 'move' i_x[2513627](2513629 'set reference' f[1176482]))
      (2513635 call deinit[235979] i_x[2513627])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val ret_tmp[1908970]:channel(true,dynamic,false)[1061136] "temp"
    (1176507 call writer[1061042] f[1176482] 0 9223372036854775807 tmp[2387591] default_arg_style[1179873] error[1886772] ret_tmp[1908970])
    (1908973 'move' call_tmp[1176499] ret_tmp[1908970])
    val errorExists[2223416]:bool[10] "temp"
    (2223421 'move' errorExists[2223416](2223418 '!=' error[1886772] nil[44]))
    if errorExists[2223416]
    {
      val error[1923460]:Error[167984] "error variable" "temp"
      (1923462 'move' error[1923460] nil[44])
      (1923466 call close[236112] f[1176482] error[1923460])
      val errorExists[2225536]:bool[10] "temp"
      (2225541 'move' errorExists[2225536](2225538 '!=' error[1923460] nil[44]))
      if errorExists[2225536]
      {
        gotoErrorHandling handler[1923477] handler[1923477]
      }
      label handler[1923477]
      val errorExists[2225544]:bool[10] "temp"
      (2225549 'move' errorExists[2225544](2225546 '!=' error[1923460] nil[44]))
      if errorExists[2225544]
      {
        (1923488 call chpl_uncaught_error[170289] error[1923460])
      }
      ref i_x[2513639]:file[235668] "temp"
      (2513643 'move' i_x[2513639](2513641 'set reference' f[1176482]))
      (2513647 call deinit[235979] i_x[2513639])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val w[1176510]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
    (1176512 'move' w[1176510] call_tmp[1176499])
    const-val args[2399889]:(string,codepointIndex,string,int(64))[1176709] "insert auto destroy"
    (2538074 '.=' args[2399889] x0[1176701] _e0_args[1176012])
    (2538078 '.=' args[2399889] x1[1176703] _e1_args[1176014])
    (2538082 '.=' args[2399889] x2[1176705] _e2_args[1176016])
    (2538086 '.=' args[2399889] x3[1176707] _e3_args[1176018])
    const-val ret[2399914]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2399916]:locale[28] "dead after last mention" "maybe param" "temp"
    (2399918 'move' call_tmp[2399916](2399920 '.' w[1176510] _readWriteThisFromLocale[1061133]))
    val ret[2399923]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2399925]:locale[28] "dead after last mention" "temp"
    (2399928 call init=[90170] tmp[2399925] call_tmp[2399916])
    (2399931 'move' ret[2399923] tmp[2399925])
    val ret[2399934]:locale[28] "dead at end of block" "insert auto destroy"
    (2399936 'move' ret[2399934] ret[2399923])
    const-val call_tmp[2399939]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2399941 'move' call_tmp[2399939](2399944 call ==[782970] ret[2399934] nilLocale[89942]))
    if call_tmp[2399939]
    {
      const-val call_tmp[2399949]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2399951]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2399953]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2399955 'move' call_tmp[2399953](2399958 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2399961 'move' call_tmp[2399951] call_tmp[2399953])
      const-val call_tmp[2399964]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2399966]:locale[28] "temp"
      (2399969 call chpl_localeID_to_locale[92852] call_tmp[2399951] ret_tmp[2399966])
      (2399972 'move' call_tmp[2399964] ret_tmp[2399966])
      (2399975 'move' call_tmp[2399949] call_tmp[2399964])
      (2399979 call =[90634] ret[2399934] call_tmp[2399949])
      ref i_x[2399982]:locale[28] "temp"
      (2399984 'move' i_x[2399982](2399986 'set reference' call_tmp[2399949]))
      (2399989 call deinit[90188] i_x[2399982])
    }
    (2399992 'move' ret[2399914] ret[2399934])
    const-val origLocale[2399995]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2399997 'move' origLocale[2399995] ret[2399914])
    ref call_tmp[2400002]:locale[28] "dead after last mention" "maybe param" "temp"
    (2400004 'move' call_tmp[2400002](2400006 '.' w[1176510] home[1061124]))
    const-val call_tmp[2400009]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2400011]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2400013 'move' coerce_tmp[2400011](2400015 '.v' call_tmp[2400002] _instance[89978]))
    val coerce_tmp[2400018]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2400020 'move' coerce_tmp[2400018](2400022 'cast' object[22] coerce_tmp[2400011]))
    const-val call_tmp[2400025]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2400027 'move' call_tmp[2400025](2400029 'ptr_eq' coerce_tmp[2400018] nil[44]))
    if call_tmp[2400025]
    {
      (2400035 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2400038 'move' call_tmp[2400009](2400040 '_wide_get_locale' coerce_tmp[2400011]))
    val error[2400045]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2400047 'move' error[2400045] nil[44])
    val isdirect[2400061]:bool[10] "temp"
    (2400063 'move' isdirect[2400061](2400066 call chpl_doDirectExecuteOn[187469] call_tmp[2400009]))
    if isdirect[2400061]
    {
      (2400071 call on_fn[1180575] w[1176510] args[2399889] ret[2399914] error[2400045])
    }
    {
      val _args_foron_fn[2400077]:_class_localson_fn[2203635] "temp"
      (2400079 'move' _args_foron_fn[2400077](2400081 'stack allocate class' _class_localson_fn[2203635]))
      (2400083 '.=' _args_foron_fn[2400077] _0_tmp[2203638] call_tmp[2400009])
      (2400087 '.=' _args_foron_fn[2400077] _1_rvfDerefTmp[2203640] w[1176510])
      ref tmp[2400091]:(string,codepointIndex,string,int(64))[1176709] "temp"
      (2400093 'move' tmp[2400091](2400095 'set reference' args[2399889]))
      (2400097 '.=' _args_foron_fn[2400077] _2_args[2203642] tmp[2400091])
      (2400101 '.=' _args_foron_fn[2400077] _3_rvfDerefTmp[2203644] ret[2399914])
      ref tmp[2400105]:Error[167984] "temp"
      (2400107 'move' tmp[2400105](2400109 'set reference' error[2400045]))
      (2400111 '.=' _args_foron_fn[2400077] _4_error[2203646] tmp[2400105])
      val _args_vforon_fn[2400115]:c_void_ptr[149] "temp"
      (2400117 'move' _args_vforon_fn[2400115](2400119 'cast_to_void_star' _args_foron_fn[2400077]))
      val _args_sizeon_fn[2400121]:int(64)[13] "temp"
      (2400123 'move' _args_sizeon_fn[2400121](2400125 'sizeof_bundle' _class_localson_fn[2203635]))
      on(2400128 call wrapon_fn[2203699] call_tmp[2400009] _args_vforon_fn[2400115] _args_sizeon_fn[2400121] _args_foron_fn[2400077])
    }
    val errorExists[2400134]:bool[10] "temp"
    (2400136 'move' errorExists[2400134](2400138 '!=' error[2400045] nil[44]))
    if errorExists[2400134]
    {
      (2400143 '=' error[1886772] error[2400045])
      ref i_x[2400146]:locale[28] "temp"
      (2400148 'move' i_x[2400146](2400150 'set reference' origLocale[2399995]))
      (2400153 call deinit[90188] i_x[2400146])
      gotoErrorHandlingReturn _endwrite[2400170] _endwrite[2400170]
    }
    ref i_x[2400161]:locale[28] "temp"
    (2400163 'move' i_x[2400161](2400165 'set reference' origLocale[2399995]))
    (2400168 call deinit[90188] i_x[2400161])
    label _endwrite[2400170]
    val errorExists[2223424]:bool[10] "temp"
    (2223429 'move' errorExists[2223424](2223426 '!=' error[1886772] nil[44]))
    if errorExists[2223424]
    {
      val error[1923496]:Error[167984] "error variable" "temp"
      (1923498 'move' error[1923496] nil[44])
      (1923502 call close[1062551] w[1176510] error[1923496])
      val errorExists[2225552]:bool[10] "temp"
      (2225557 'move' errorExists[2225552](2225554 '!=' error[1923496] nil[44]))
      if errorExists[2225552]
      {
        gotoErrorHandling handler[1923513] handler[1923513]
      }
      label handler[1923513]
      val errorExists[2225560]:bool[10] "temp"
      (2225565 'move' errorExists[2225560](2225562 '!=' error[1923496] nil[44]))
      if errorExists[2225560]
      {
        (1923524 call chpl_uncaught_error[170289] error[1923496])
      }
      ref i_x[2392912]:channel(true,dynamic,false)[1061136] "temp"
      (2392916 'move' i_x[2392912](2392914 'set reference' w[1176510]))
      (2392920 call deinit[1676346] i_x[2392912])
      val error[1923532]:Error[167984] "error variable" "temp"
      (1923534 'move' error[1923532] nil[44])
      (1923538 call close[236112] f[1176482] error[1923532])
      val errorExists[2225568]:bool[10] "temp"
      (2225573 'move' errorExists[2225568](2225570 '!=' error[1923532] nil[44]))
      if errorExists[2225568]
      {
        gotoErrorHandling handler[1923549] handler[1923549]
      }
      label handler[1923549]
      val errorExists[2225576]:bool[10] "temp"
      (2225581 'move' errorExists[2225576](2225578 '!=' error[1923532] nil[44]))
      if errorExists[2225576]
      {
        (1923560 call chpl_uncaught_error[170289] error[1923532])
      }
      ref i_x[2513651]:file[235668] "temp"
      (2513655 'move' i_x[2513651](2513653 'set reference' f[1176482]))
      (2513659 call deinit[235979] i_x[2513651])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val call_tmp[1176536]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1176538 'move' call_tmp[1176536](1176544 call offset[1080337] w[1176510]))
    const-val call_tmp[2236470]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236472 'move' call_tmp[2236470](2236474 '+' call_tmp[1176536] 1))
    const-val call_tmp[2393889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393891 'move' call_tmp[2393889](2393893 '<' call_tmp[2236470] 0))
    if call_tmp[2393889]
    {
      (2393899 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2393902]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393904 'move' call_tmp[2393902](2393906 'cast' uint(64)[115] call_tmp[2236470]))
    const-val call_tmp[2393909]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393911 'move' call_tmp[2393909](2393914 call sizeof[1080643] uint(8)[100]))
    const-val call_tmp[2393916]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393918 'move' call_tmp[2393916](2393920 '*' call_tmp[2393902] call_tmp[2393909]))
    const-val call_tmp[2393923]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393925 'move' call_tmp[2393923](2393928 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2393929]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393931 'move' call_tmp[2393929](2393934 call chpl_here_alloc[1080679] call_tmp[2393916] call_tmp[2393923]))
    val call_tmp[2393937]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393939 'move' call_tmp[2393937](2393941 'cast' c_ptr(uint(8))[937612] call_tmp[2393929]))
    val buf[1176574]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
    (1176576 'move' buf[1176574] call_tmp[2393937])
    const-val call_tmp[1176580]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
    val errorExists[2223432]:bool[10] "temp"
    (2223437 'move' errorExists[2223432](2223434 '!=' error[1886772] nil[44]))
    if errorExists[2223432]
    {
      val error[1923568]:Error[167984] "error variable" "temp"
      (1923570 'move' error[1923568] nil[44])
      (1923574 call close[1062551] w[1176510] error[1923568])
      val errorExists[2225584]:bool[10] "temp"
      (2225589 'move' errorExists[2225584](2225586 '!=' error[1923568] nil[44]))
      if errorExists[2225584]
      {
        gotoErrorHandling handler[1923585] handler[1923585]
      }
      label handler[1923585]
      val errorExists[2225592]:bool[10] "temp"
      (2225597 'move' errorExists[2225592](2225594 '!=' error[1923568] nil[44]))
      if errorExists[2225592]
      {
        (1923596 call chpl_uncaught_error[170289] error[1923568])
      }
      ref i_x[2392924]:channel(true,dynamic,false)[1061136] "temp"
      (2392928 'move' i_x[2392924](2392926 'set reference' w[1176510]))
      (2392932 call deinit[1676346] i_x[2392924])
      val error[1923604]:Error[167984] "error variable" "temp"
      (1923606 'move' error[1923604] nil[44])
      (1923610 call close[236112] f[1176482] error[1923604])
      val errorExists[2225600]:bool[10] "temp"
      (2225605 'move' errorExists[2225600](2225602 '!=' error[1923604] nil[44]))
      if errorExists[2225600]
      {
        gotoErrorHandling handler[1923621] handler[1923621]
      }
      label handler[1923621]
      val errorExists[2225608]:bool[10] "temp"
      (2225613 'move' errorExists[2225608](2225610 '!=' error[1923604] nil[44]))
      if errorExists[2225608]
      {
        (1923632 call chpl_uncaught_error[170289] error[1923604])
      }
      ref i_x[2513663]:file[235668] "temp"
      (2513667 'move' i_x[2513663](2513665 'set reference' f[1176482]))
      (2513671 call deinit[235979] i_x[2513663])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    val errorExists[2223440]:bool[10] "temp"
    (2223445 'move' errorExists[2223440](2223442 '!=' error[1886772] nil[44]))
    if errorExists[2223440]
    {
      val error[1923640]:Error[167984] "error variable" "temp"
      (1923642 'move' error[1923640] nil[44])
      (1923646 call close[1062551] w[1176510] error[1923640])
      val errorExists[2225616]:bool[10] "temp"
      (2225621 'move' errorExists[2225616](2225618 '!=' error[1923640] nil[44]))
      if errorExists[2225616]
      {
        gotoErrorHandling handler[1923657] handler[1923657]
      }
      label handler[1923657]
      val errorExists[2225624]:bool[10] "temp"
      (2225629 'move' errorExists[2225624](2225626 '!=' error[1923640] nil[44]))
      if errorExists[2225624]
      {
        (1923668 call chpl_uncaught_error[170289] error[1923640])
      }
      ref i_x[2392936]:channel(true,dynamic,false)[1061136] "temp"
      (2392940 'move' i_x[2392936](2392938 'set reference' w[1176510]))
      (2392944 call deinit[1676346] i_x[2392936])
      val error[1923676]:Error[167984] "error variable" "temp"
      (1923678 'move' error[1923676] nil[44])
      (1923682 call close[236112] f[1176482] error[1923676])
      val errorExists[2225632]:bool[10] "temp"
      (2225637 'move' errorExists[2225632](2225634 '!=' error[1923676] nil[44]))
      if errorExists[2225632]
      {
        gotoErrorHandling handler[1923693] handler[1923693]
      }
      label handler[1923693]
      val errorExists[2225640]:bool[10] "temp"
      (2225645 'move' errorExists[2225640](2225642 '!=' error[1923676] nil[44]))
      if errorExists[2225640]
      {
        (1923704 call chpl_uncaught_error[170289] error[1923676])
      }
      ref i_x[2513675]:file[235668] "temp"
      (2513679 'move' i_x[2513675](2513677 'set reference' f[1176482]))
      (2513683 call deinit[235979] i_x[2513675])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val tmp[2394152]:int(32)[95] "dead after last mention" "temp"
    (2394154 'move' tmp[2394152] IOHINT_NONE[231499])
    val errorExists[2223448]:bool[10] "temp"
    (2223453 'move' errorExists[2223448](2223450 '!=' error[1886772] nil[44]))
    if errorExists[2223448]
    {
      val error[1923712]:Error[167984] "error variable" "temp"
      (1923714 'move' error[1923712] nil[44])
      (1923718 call close[1062551] w[1176510] error[1923712])
      val errorExists[2225648]:bool[10] "temp"
      (2225653 'move' errorExists[2225648](2225650 '!=' error[1923712] nil[44]))
      if errorExists[2225648]
      {
        gotoErrorHandling handler[1923729] handler[1923729]
      }
      label handler[1923729]
      val errorExists[2225656]:bool[10] "temp"
      (2225661 'move' errorExists[2225656](2225658 '!=' error[1923712] nil[44]))
      if errorExists[2225656]
      {
        (1923740 call chpl_uncaught_error[170289] error[1923712])
      }
      ref i_x[2392948]:channel(true,dynamic,false)[1061136] "temp"
      (2392952 'move' i_x[2392948](2392950 'set reference' w[1176510]))
      (2392956 call deinit[1676346] i_x[2392948])
      val error[1923748]:Error[167984] "error variable" "temp"
      (1923750 'move' error[1923748] nil[44])
      (1923754 call close[236112] f[1176482] error[1923748])
      val errorExists[2225664]:bool[10] "temp"
      (2225669 'move' errorExists[2225664](2225666 '!=' error[1923748] nil[44]))
      if errorExists[2225664]
      {
        gotoErrorHandling handler[1923765] handler[1923765]
      }
      label handler[1923765]
      val errorExists[2225672]:bool[10] "temp"
      (2225677 'move' errorExists[2225672](2225674 '!=' error[1923748] nil[44]))
      if errorExists[2225672]
      {
        (1923776 call chpl_uncaught_error[170289] error[1923748])
      }
      ref i_x[2513687]:file[235668] "temp"
      (2513691 'move' i_x[2513687](2513689 'set reference' f[1176482]))
      (2513695 call deinit[235979] i_x[2513687])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val default_arg_style[1180956]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2394264]:file[235668] "temp"
    (2394268 'move' i_this[2394264](2394266 'set reference' f[1176482]))
    val ret[2394277]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2394279]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2394281]:Error[167984] "error variable" "temp"
    (2394283 'move' error[2394281] nil[44])
    (2394286 'move' style[2394279](2394289 call _style[236048] i_this[2394264] error[2394281]))
    val errorExists[2394292]:bool[10] "temp"
    (2394294 'move' errorExists[2394292](2394296 '!=' error[2394281] nil[44]))
    if errorExists[2394292]
    {
      (2394301 '=' error[1886772] error[2394281])
      gotoErrorHandlingReturn _endreader_default_style[2394310] _endreader_default_style[2394310]
    }
    (2394307 'move' ret[2394277] style[2394279])
    label _endreader_default_style[2394310]
    (1180962 'move' default_arg_style[1180956] ret[2394277])
    val errorExists[2223456]:bool[10] "temp"
    (2223461 'move' errorExists[2223456](2223458 '!=' error[1886772] nil[44]))
    if errorExists[2223456]
    {
      val error[1923784]:Error[167984] "error variable" "temp"
      (1923786 'move' error[1923784] nil[44])
      (1923790 call close[1062551] w[1176510] error[1923784])
      val errorExists[2225680]:bool[10] "temp"
      (2225685 'move' errorExists[2225680](2225682 '!=' error[1923784] nil[44]))
      if errorExists[2225680]
      {
        gotoErrorHandling handler[1923801] handler[1923801]
      }
      label handler[1923801]
      val errorExists[2225688]:bool[10] "temp"
      (2225693 'move' errorExists[2225688](2225690 '!=' error[1923784] nil[44]))
      if errorExists[2225688]
      {
        (1923812 call chpl_uncaught_error[170289] error[1923784])
      }
      ref i_x[2392960]:channel(true,dynamic,false)[1061136] "temp"
      (2392964 'move' i_x[2392960](2392962 'set reference' w[1176510]))
      (2392968 call deinit[1676346] i_x[2392960])
      val error[1923820]:Error[167984] "error variable" "temp"
      (1923822 'move' error[1923820] nil[44])
      (1923826 call close[236112] f[1176482] error[1923820])
      val errorExists[2225696]:bool[10] "temp"
      (2225701 'move' errorExists[2225696](2225698 '!=' error[1923820] nil[44]))
      if errorExists[2225696]
      {
        gotoErrorHandling handler[1923837] handler[1923837]
      }
      label handler[1923837]
      val errorExists[2225704]:bool[10] "temp"
      (2225709 'move' errorExists[2225704](2225706 '!=' error[1923820] nil[44]))
      if errorExists[2225704]
      {
        (1923848 call chpl_uncaught_error[170289] error[1923820])
      }
      ref i_x[2513699]:file[235668] "temp"
      (2513703 'move' i_x[2513699](2513701 'set reference' f[1176482]))
      (2513707 call deinit[235979] i_x[2513699])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val ret_tmp[1909372]:channel(false,dynamic,false)[1080871] "temp"
    (1176588 call reader[1080777] f[1176482] 0 9223372036854775807 tmp[2394152] default_arg_style[1180956] error[1886772] ret_tmp[1909372])
    (1909375 'move' call_tmp[1176580] ret_tmp[1909372])
    val errorExists[2223464]:bool[10] "temp"
    (2223469 'move' errorExists[2223464](2223466 '!=' error[1886772] nil[44]))
    if errorExists[2223464]
    {
      val error[1923856]:Error[167984] "error variable" "temp"
      (1923858 'move' error[1923856] nil[44])
      (1923862 call close[1062551] w[1176510] error[1923856])
      val errorExists[2225712]:bool[10] "temp"
      (2225717 'move' errorExists[2225712](2225714 '!=' error[1923856] nil[44]))
      if errorExists[2225712]
      {
        gotoErrorHandling handler[1923873] handler[1923873]
      }
      label handler[1923873]
      val errorExists[2225720]:bool[10] "temp"
      (2225725 'move' errorExists[2225720](2225722 '!=' error[1923856] nil[44]))
      if errorExists[2225720]
      {
        (1923884 call chpl_uncaught_error[170289] error[1923856])
      }
      ref i_x[2392972]:channel(true,dynamic,false)[1061136] "temp"
      (2392976 'move' i_x[2392972](2392974 'set reference' w[1176510]))
      (2392980 call deinit[1676346] i_x[2392972])
      val error[1923892]:Error[167984] "error variable" "temp"
      (1923894 'move' error[1923892] nil[44])
      (1923898 call close[236112] f[1176482] error[1923892])
      val errorExists[2225728]:bool[10] "temp"
      (2225733 'move' errorExists[2225728](2225730 '!=' error[1923892] nil[44]))
      if errorExists[2225728]
      {
        gotoErrorHandling handler[1923909] handler[1923909]
      }
      label handler[1923909]
      val errorExists[2225736]:bool[10] "temp"
      (2225741 'move' errorExists[2225736](2225738 '!=' error[1923892] nil[44]))
      if errorExists[2225736]
      {
        (1923920 call chpl_uncaught_error[170289] error[1923892])
      }
      ref i_x[2513711]:file[235668] "temp"
      (2513715 'move' i_x[2513711](2513713 'set reference' f[1176482]))
      (2513719 call deinit[235979] i_x[2513711])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val r[1176591]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
    (1176593 'move' r[1176591] call_tmp[1176580])
    (1176620 call readBytes[1083028] r[1176591] call_tmp[2393937] call_tmp[1176536] error[1886772])
    val errorExists[2223472]:bool[10] "temp"
    (2223477 'move' errorExists[2223472](2223474 '!=' error[1886772] nil[44]))
    if errorExists[2223472]
    {
      val error[1923928]:Error[167984] "error variable" "temp"
      (1923930 'move' error[1923928] nil[44])
      (1923934 call close[1082283] r[1176591] error[1923928])
      val errorExists[2225744]:bool[10] "temp"
      (2225749 'move' errorExists[2225744](2225746 '!=' error[1923928] nil[44]))
      if errorExists[2225744]
      {
        gotoErrorHandling handler[1923945] handler[1923945]
      }
      label handler[1923945]
      val errorExists[2225752]:bool[10] "temp"
      (2225757 'move' errorExists[2225752](2225754 '!=' error[1923928] nil[44]))
      if errorExists[2225752]
      {
        (1923956 call chpl_uncaught_error[170289] error[1923928])
      }
      ref i_x[2517174]:channel(false,dynamic,false)[1080871] "temp"
      (2517178 'move' i_x[2517174](2517176 'set reference' r[1176591]))
      (2517182 call deinit[1680600] i_x[2517174])
      val error[1923964]:Error[167984] "error variable" "temp"
      (1923966 'move' error[1923964] nil[44])
      (1923970 call close[1062551] w[1176510] error[1923964])
      val errorExists[2225760]:bool[10] "temp"
      (2225765 'move' errorExists[2225760](2225762 '!=' error[1923964] nil[44]))
      if errorExists[2225760]
      {
        gotoErrorHandling handler[1923981] handler[1923981]
      }
      label handler[1923981]
      val errorExists[2225768]:bool[10] "temp"
      (2225773 'move' errorExists[2225768](2225770 '!=' error[1923964] nil[44]))
      if errorExists[2225768]
      {
        (1923992 call chpl_uncaught_error[170289] error[1923964])
      }
      ref i_x[2392984]:channel(true,dynamic,false)[1061136] "temp"
      (2392988 'move' i_x[2392984](2392986 'set reference' w[1176510]))
      (2392992 call deinit[1676346] i_x[2392984])
      val error[1924000]:Error[167984] "error variable" "temp"
      (1924002 'move' error[1924000] nil[44])
      (1924006 call close[236112] f[1176482] error[1924000])
      val errorExists[2225776]:bool[10] "temp"
      (2225781 'move' errorExists[2225776](2225778 '!=' error[1924000] nil[44]))
      if errorExists[2225776]
      {
        gotoErrorHandling handler[1924017] handler[1924017]
      }
      label handler[1924017]
      val errorExists[2225784]:bool[10] "temp"
      (2225789 'move' errorExists[2225784](2225786 '!=' error[1924000] nil[44]))
      if errorExists[2225784]
      {
        (1924028 call chpl_uncaught_error[170289] error[1924000])
      }
      ref i_x[2513723]:file[235668] "temp"
      (2513727 'move' i_x[2513723](2513725 'set reference' f[1176482]))
      (2513731 call deinit[235979] i_x[2513723])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    ref call_tmp[2317088]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2317090 'move' call_tmp[2317088](2317092 'array_get' buf[1176574] call_tmp[1176536]))
    const-val coerce_tmp[1180972]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180978 'move' coerce_tmp[1180972](1180974 'cast' uint(8)[100] 0))
    (2317566 '=' call_tmp[2317088] coerce_tmp[1180972])
    const-val ret[2257480]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257482]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257484]:Error[167984] "error variable" "temp"
    (2257486 'move' error[2257484] nil[44])
    const-val ret_tmp[2257489]:string[26] "temp"
    (2257492 call decodeByteBuffer[173938] call_tmp[2393937] call_tmp[1176536] replace[173694] error[2257484] ret_tmp[2257489])
    (2257498 'move' call_tmp[2257482] ret_tmp[2257489])
    val errorExists[2257501]:bool[10] "temp"
    (2257503 'move' errorExists[2257501](2257505 '!=' error[2257484] nil[44]))
    if errorExists[2257501]
    {
      (2257510 '=' error[1886772] error[2257484])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257519] _endcreateStringWithNewBuffer[2257519]
    }
    (2257516 'move' ret[2257480] call_tmp[2257482])
    label _endcreateStringWithNewBuffer[2257519]
    val errorExists[2223480]:bool[10] "temp"
    (2223485 'move' errorExists[2223480](2223482 '!=' error[1886772] nil[44]))
    if errorExists[2223480]
    {
      val error[1924036]:Error[167984] "error variable" "temp"
      (1924038 'move' error[1924036] nil[44])
      (1924042 call close[1082283] r[1176591] error[1924036])
      val errorExists[2225792]:bool[10] "temp"
      (2225797 'move' errorExists[2225792](2225794 '!=' error[1924036] nil[44]))
      if errorExists[2225792]
      {
        gotoErrorHandling handler[1924053] handler[1924053]
      }
      label handler[1924053]
      val errorExists[2225800]:bool[10] "temp"
      (2225805 'move' errorExists[2225800](2225802 '!=' error[1924036] nil[44]))
      if errorExists[2225800]
      {
        (1924064 call chpl_uncaught_error[170289] error[1924036])
      }
      ref i_x[2517186]:channel(false,dynamic,false)[1080871] "temp"
      (2517190 'move' i_x[2517186](2517188 'set reference' r[1176591]))
      (2517194 call deinit[1680600] i_x[2517186])
      val error[1924072]:Error[167984] "error variable" "temp"
      (1924074 'move' error[1924072] nil[44])
      (1924078 call close[1062551] w[1176510] error[1924072])
      val errorExists[2225808]:bool[10] "temp"
      (2225813 'move' errorExists[2225808](2225810 '!=' error[1924072] nil[44]))
      if errorExists[2225808]
      {
        gotoErrorHandling handler[1924089] handler[1924089]
      }
      label handler[1924089]
      val errorExists[2225816]:bool[10] "temp"
      (2225821 'move' errorExists[2225816](2225818 '!=' error[1924072] nil[44]))
      if errorExists[2225816]
      {
        (1924100 call chpl_uncaught_error[170289] error[1924072])
      }
      ref i_x[2392996]:channel(true,dynamic,false)[1061136] "temp"
      (2393000 'move' i_x[2392996](2392998 'set reference' w[1176510]))
      (2393004 call deinit[1676346] i_x[2392996])
      val error[1924108]:Error[167984] "error variable" "temp"
      (1924110 'move' error[1924108] nil[44])
      (1924114 call close[236112] f[1176482] error[1924108])
      val errorExists[2225824]:bool[10] "temp"
      (2225829 'move' errorExists[2225824](2225826 '!=' error[1924108] nil[44]))
      if errorExists[2225824]
      {
        gotoErrorHandling handler[1924125] handler[1924125]
      }
      label handler[1924125]
      val errorExists[2225832]:bool[10] "temp"
      (2225837 'move' errorExists[2225832](2225834 '!=' error[1924108] nil[44]))
      if errorExists[2225832]
      {
        (1924136 call chpl_uncaught_error[170289] error[1924108])
      }
      ref i_x[2513735]:file[235668] "temp"
      (2513739 'move' i_x[2513735](2513737 'set reference' f[1176482]))
      (2513743 call deinit[235979] i_x[2513735])
      gotoErrorHandling handler[1886773] handler[1886773]
    }
    const-val coerce_tmp[1180983]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180989 'move' coerce_tmp[1180983](1180985 'cast' c_void_ptr[149] call_tmp[2393937]))
    (2325170 call chpl_here_free[188127] coerce_tmp[1180983])
    (1180993 'move' ret[1176022] ret[2257480])
    val error[1924144]:Error[167984] "error variable" "temp"
    (1924146 'move' error[1924144] nil[44])
    (1924150 call close[1082283] r[1176591] error[1924144])
    val errorExists[2225840]:bool[10] "temp"
    (2225845 'move' errorExists[2225840](2225842 '!=' error[1924144] nil[44]))
    if errorExists[2225840]
    {
      gotoErrorHandling handler[1924161] handler[1924161]
    }
    label handler[1924161]
    val errorExists[2225848]:bool[10] "temp"
    (2225853 'move' errorExists[2225848](2225850 '!=' error[1924144] nil[44]))
    if errorExists[2225848]
    {
      (1924172 call chpl_uncaught_error[170289] error[1924144])
    }
    ref i_x[2517198]:channel(false,dynamic,false)[1080871] "temp"
    (2517202 'move' i_x[2517198](2517200 'set reference' r[1176591]))
    (2517206 call deinit[1680600] i_x[2517198])
    val error[1924180]:Error[167984] "error variable" "temp"
    (1924182 'move' error[1924180] nil[44])
    (1924186 call close[1062551] w[1176510] error[1924180])
    val errorExists[2225856]:bool[10] "temp"
    (2225861 'move' errorExists[2225856](2225858 '!=' error[1924180] nil[44]))
    if errorExists[2225856]
    {
      gotoErrorHandling handler[1924197] handler[1924197]
    }
    label handler[1924197]
    val errorExists[2225864]:bool[10] "temp"
    (2225869 'move' errorExists[2225864](2225866 '!=' error[1924180] nil[44]))
    if errorExists[2225864]
    {
      (1924208 call chpl_uncaught_error[170289] error[1924180])
    }
    ref i_x[2393008]:channel(true,dynamic,false)[1061136] "temp"
    (2393012 'move' i_x[2393008](2393010 'set reference' w[1176510]))
    (2393016 call deinit[1676346] i_x[2393008])
    val error[1924216]:Error[167984] "error variable" "temp"
    (1924218 'move' error[1924216] nil[44])
    (1924222 call close[236112] f[1176482] error[1924216])
    val errorExists[2225872]:bool[10] "temp"
    (2225877 'move' errorExists[2225872](2225874 '!=' error[1924216] nil[44]))
    if errorExists[2225872]
    {
      gotoErrorHandling handler[1924233] handler[1924233]
    }
    label handler[1924233]
    val errorExists[2225880]:bool[10] "temp"
    (2225885 'move' errorExists[2225880](2225882 '!=' error[1924216] nil[44]))
    if errorExists[2225880]
    {
      (1924244 call chpl_uncaught_error[170289] error[1924216])
    }
    ref i_x[2513747]:file[235668] "temp"
    (2513751 'move' i_x[2513747](2513749 'set reference' f[1176482]))
    (2513755 call deinit[235979] i_x[2513747])
    gotoReturn _end_stringify[1176688] _end_stringify[1176688]
    label handler[1886773]
    val errorExists[2223488]:bool[10] "temp"
    (2223493 'move' errorExists[2223488](2223490 '!=' error[1886772] nil[44]))
    if errorExists[2223488]
    {
      (1886963 call chpl_uncaught_error[170289] error[1886772])
    }
    label _end_stringify[1176688]
    (1910632 '=' _retArg[1910630] ret[1176022])
    (1910634 return _void[55])
  }
  function stringify[1190909](const  ref arg _e0_args[1190911]:string[26], const in arg _e1_args[1190913]:range(byteIndex,boundedHigh,false)[1185108], const  ref arg _e2_args[1190915]:string[26], const in arg _e3_args[1190917]:int(64)[13], ref arg _retArg[1910836]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1190921]:string[26] "dead after last mention" "RVV" "temp"
    val str[1190962]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326307]:string[26] "temp"
    (2326310 'move' inlineImm[2326307] "")
    ref i_x[2326312]:string[26] "temp"
    (2326316 'move' i_x[2326312](2326314 'set reference' inlineImm[2326307]))
    val ret[2326319]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326321]:string[26] "dead after last mention" "temp"
    (2326324 call init=[30774] tmp[2326321] i_x[2326312])
    (2326327 'move' ret[2326319] tmp[2326321])
    (1190964 'move' str[1190962] ret[2326319])
    (1197350 call +=[38800] str[1190962] _e0_args[1190911])
    const-val call_tmp[1197925]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1910876]:string[26] "temp"
    (1197930 call _cast[1198820] _e1_args[1190913] ret_tmp[1910876])
    (1910879 'move' call_tmp[1197925] ret_tmp[1910876])
    (1197934 call +=[38800] str[1190962] call_tmp[1197925])
    ref i_x[2248253]:string[26] "temp"
    (2248257 'move' i_x[2248253](2248255 'set reference' call_tmp[1197925]))
    (2248261 call deinit[30834] i_x[2248253])
    (1198040 call +=[38800] str[1190962] _e2_args[1190915])
    const-val call_tmp[1198615]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909084]:string[26] "temp"
    (1198620 call _cast[1063342] _e3_args[1190917] ret_tmp[1909084])
    (1909087 'move' call_tmp[1198615] ret_tmp[1909084])
    (1198624 call +=[38800] str[1190962] call_tmp[1198615])
    ref i_x[2248265]:string[26] "temp"
    (2248269 'move' i_x[2248265](2248267 'set reference' call_tmp[1198615]))
    (2248273 call deinit[30834] i_x[2248265])
    (1200522 'move' ret[1190921] str[1190962])
    gotoReturn _end_stringify[1191587] _end_stringify[1191587]
    label _end_stringify[1191587]
    (1910838 '=' _retArg[1910836] ret[1190921])
    (1910844 return _void[55])
  }
  function stringify[1291327](const  ref arg _e0_args[1291329]:string[26], const  ref arg _e1_args[1291331]:string[26], const  ref arg _e2_args[1291333]:string[26], const  ref arg _e3_args[1291335]:string[26], ref arg _retArg[1913300]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1291339]:string[26] "dead after last mention" "RVV" "temp"
    val str[1291380]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326407]:string[26] "temp"
    (2326410 'move' inlineImm[2326407] "")
    ref i_x[2326412]:string[26] "temp"
    (2326416 'move' i_x[2326412](2326414 'set reference' inlineImm[2326407]))
    val ret[2326419]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326421]:string[26] "dead after last mention" "temp"
    (2326424 call init=[30774] tmp[2326421] i_x[2326412])
    (2326427 'move' ret[2326419] tmp[2326421])
    (1291382 'move' str[1291380] ret[2326419])
    (1295196 call +=[38800] str[1291380] _e0_args[1291329])
    (1295541 call +=[38800] str[1291380] _e1_args[1291331])
    (1295886 call +=[38800] str[1291380] _e2_args[1291333])
    (1296231 call +=[38800] str[1291380] _e3_args[1291335])
    (1296670 'move' ret[1291339] str[1291380])
    gotoReturn _end_stringify[1292005] _end_stringify[1292005]
    label _end_stringify[1292005]
    (1913302 '=' _retArg[1913300] ret[1291339])
    (1913306 return _void[55])
  }
  function stringify[1466032](const  ref arg _e0_args[1466034]:string[26], const in arg _e1_args[1466036]:uint(64)[115], const  ref arg _e2_args[1466038]:string[26], const in arg _e3_args[1466040]:int(64)[13], ref arg _retArg[1915346]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1466044]:string[26] "dead after last mention" "RVV" "temp"
    val str[1466085]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326507]:string[26] "temp"
    (2326510 'move' inlineImm[2326507] "")
    ref i_x[2326512]:string[26] "temp"
    (2326516 'move' i_x[2326512](2326514 'set reference' inlineImm[2326507]))
    val ret[2326519]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326521]:string[26] "dead after last mention" "temp"
    (2326524 call init=[30774] tmp[2326521] i_x[2326512])
    (2326527 'move' ret[2326519] tmp[2326521])
    (1466087 'move' str[1466085] ret[2326519])
    (1470918 call +=[38800] str[1466085] _e0_args[1466034])
    const-val call_tmp[1471493]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1913036]:string[26] "temp"
    (1471498 call _cast[1268654] _e1_args[1466036] ret_tmp[1913036])
    (1913039 'move' call_tmp[1471493] ret_tmp[1913036])
    (1471502 call +=[38800] str[1466085] call_tmp[1471493])
    ref i_x[2249285]:string[26] "temp"
    (2249289 'move' i_x[2249285](2249287 'set reference' call_tmp[1471493]))
    (2249293 call deinit[30834] i_x[2249285])
    (1471608 call +=[38800] str[1466085] _e2_args[1466038])
    const-val call_tmp[1472183]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909168]:string[26] "temp"
    (1472188 call _cast[1063342] _e3_args[1466040] ret_tmp[1909168])
    (1909171 'move' call_tmp[1472183] ret_tmp[1909168])
    (1472192 call +=[38800] str[1466085] call_tmp[1472183])
    ref i_x[2249297]:string[26] "temp"
    (2249301 'move' i_x[2249297](2249299 'set reference' call_tmp[1472183]))
    (2249305 call deinit[30834] i_x[2249297])
    (1472552 'move' ret[1466044] str[1466085])
    gotoReturn _end_stringify[1466710] _end_stringify[1466710]
    label _end_stringify[1466710]
    (1915348 '=' _retArg[1915346] ret[1466044])
    (1915352 return _void[55])
  }
  function stringify[1158053](const  ref arg _e0_args[1158055]:string[26], const  ref arg _e1_args[1158057]:codepointIndex[28277], const  ref arg _e2_args[1158059]:string[26], ref arg _retArg[1910572]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1158063]:string[26] "dead after last mention" "RVV" "temp"
    val error[1886275]:Error[167984] "error variable" "temp"
    (1886460 'move' error[1886275] nil[44])
    const-val call_tmp[1158514]:file[235668] "dead at end of block" "maybe param" "temp"
    const-val default_arg_style[1164368]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    const-val style[2387351]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    (2387353 'move' style[2387351](2387356 call defaultIOStyle[235383]))
    (1164372 'move' default_arg_style[1164368] style[2387351])
    val errorExists[2223088]:bool[10] "temp"
    (2223093 'move' errorExists[2223088](2223090 '!=' error[1886275] nil[44]))
    if errorExists[2223088]
    {
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val ret_tmp[1907332]:file[235668] "temp"
    (1158519 call openmem[237713] default_arg_style[1164368] error[1886275] ret_tmp[1907332])
    (1907335 'move' call_tmp[1158514] ret_tmp[1907332])
    val errorExists[2223096]:bool[10] "temp"
    (2223101 'move' errorExists[2223096](2223098 '!=' error[1886275] nil[44]))
    if errorExists[2223096]
    {
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val f[1158520]:file[235668] "dead at end of block" "insert auto destroy"
    (1158522 'move' f[1158520] call_tmp[1158514])
    const-val call_tmp[1158537]:channel(true,dynamic,false)[1061136] "dead at end of block" "maybe param" "temp"
    val errorExists[2223104]:bool[10] "temp"
    (2223109 'move' errorExists[2223104](2223106 '!=' error[1886275] nil[44]))
    if errorExists[2223104]
    {
      val error[1922253]:Error[167984] "error variable" "temp"
      (1922255 'move' error[1922253] nil[44])
      (1922259 call close[236112] f[1158520] error[1922253])
      val errorExists[2225056]:bool[10] "temp"
      (2225061 'move' errorExists[2225056](2225058 '!=' error[1922253] nil[44]))
      if errorExists[2225056]
      {
        gotoErrorHandling handler[1922270] handler[1922270]
      }
      label handler[1922270]
      val errorExists[2225064]:bool[10] "temp"
      (2225069 'move' errorExists[2225064](2225066 '!=' error[1922253] nil[44]))
      if errorExists[2225064]
      {
        (1922281 call chpl_uncaught_error[170289] error[1922253])
      }
      ref i_x[2513423]:file[235668] "temp"
      (2513427 'move' i_x[2513423](2513425 'set reference' f[1158520]))
      (2513431 call deinit[235979] i_x[2513423])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    val errorExists[2223112]:bool[10] "temp"
    (2223117 'move' errorExists[2223112](2223114 '!=' error[1886275] nil[44]))
    if errorExists[2223112]
    {
      val error[1922289]:Error[167984] "error variable" "temp"
      (1922291 'move' error[1922289] nil[44])
      (1922295 call close[236112] f[1158520] error[1922289])
      val errorExists[2225072]:bool[10] "temp"
      (2225077 'move' errorExists[2225072](2225074 '!=' error[1922289] nil[44]))
      if errorExists[2225072]
      {
        gotoErrorHandling handler[1922306] handler[1922306]
      }
      label handler[1922306]
      val errorExists[2225080]:bool[10] "temp"
      (2225085 'move' errorExists[2225080](2225082 '!=' error[1922289] nil[44]))
      if errorExists[2225080]
      {
        (1922317 call chpl_uncaught_error[170289] error[1922289])
      }
      ref i_x[2513435]:file[235668] "temp"
      (2513439 'move' i_x[2513435](2513437 'set reference' f[1158520]))
      (2513443 call deinit[235979] i_x[2513435])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val tmp[2387562]:int(32)[95] "dead after last mention" "temp"
    (2387564 'move' tmp[2387562](2387566 'cast' int(32)[95] 0))
    val errorExists[2223120]:bool[10] "temp"
    (2223125 'move' errorExists[2223120](2223122 '!=' error[1886275] nil[44]))
    if errorExists[2223120]
    {
      val error[1922325]:Error[167984] "error variable" "temp"
      (1922327 'move' error[1922325] nil[44])
      (1922331 call close[236112] f[1158520] error[1922325])
      val errorExists[2225088]:bool[10] "temp"
      (2225093 'move' errorExists[2225088](2225090 '!=' error[1922325] nil[44]))
      if errorExists[2225088]
      {
        gotoErrorHandling handler[1922342] handler[1922342]
      }
      label handler[1922342]
      val errorExists[2225096]:bool[10] "temp"
      (2225101 'move' errorExists[2225096](2225098 '!=' error[1922325] nil[44]))
      if errorExists[2225096]
      {
        (1922353 call chpl_uncaught_error[170289] error[1922325])
      }
      ref i_x[2513447]:file[235668] "temp"
      (2513451 'move' i_x[2513447](2513449 'set reference' f[1158520]))
      (2513455 call deinit[235979] i_x[2513447])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val default_arg_style[1164427]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2387655]:file[235668] "temp"
    (2387659 'move' i_this[2387655](2387657 'set reference' f[1158520]))
    val ret[2387668]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2387670]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2387672]:Error[167984] "error variable" "temp"
    (2387674 'move' error[2387672] nil[44])
    (2387677 'move' style[2387670](2387680 call _style[236048] i_this[2387655] error[2387672]))
    val errorExists[2387683]:bool[10] "temp"
    (2387685 'move' errorExists[2387683](2387687 '!=' error[2387672] nil[44]))
    if errorExists[2387683]
    {
      (2387692 '=' error[1886275] error[2387672])
      gotoErrorHandlingReturn _endwriter_default_style[2387701] _endwriter_default_style[2387701]
    }
    (2387698 'move' ret[2387668] style[2387670])
    label _endwriter_default_style[2387701]
    (1164433 'move' default_arg_style[1164427] ret[2387668])
    val errorExists[2223128]:bool[10] "temp"
    (2223133 'move' errorExists[2223128](2223130 '!=' error[1886275] nil[44]))
    if errorExists[2223128]
    {
      val error[1922361]:Error[167984] "error variable" "temp"
      (1922363 'move' error[1922361] nil[44])
      (1922367 call close[236112] f[1158520] error[1922361])
      val errorExists[2225104]:bool[10] "temp"
      (2225109 'move' errorExists[2225104](2225106 '!=' error[1922361] nil[44]))
      if errorExists[2225104]
      {
        gotoErrorHandling handler[1922378] handler[1922378]
      }
      label handler[1922378]
      val errorExists[2225112]:bool[10] "temp"
      (2225117 'move' errorExists[2225112](2225114 '!=' error[1922361] nil[44]))
      if errorExists[2225112]
      {
        (1922389 call chpl_uncaught_error[170289] error[1922361])
      }
      ref i_x[2513459]:file[235668] "temp"
      (2513463 'move' i_x[2513459](2513461 'set reference' f[1158520]))
      (2513467 call deinit[235979] i_x[2513459])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val ret_tmp[1908964]:channel(true,dynamic,false)[1061136] "temp"
    (1158545 call writer[1061042] f[1158520] 0 9223372036854775807 tmp[2387562] default_arg_style[1164427] error[1886275] ret_tmp[1908964])
    (1908967 'move' call_tmp[1158537] ret_tmp[1908964])
    val errorExists[2223136]:bool[10] "temp"
    (2223141 'move' errorExists[2223136](2223138 '!=' error[1886275] nil[44]))
    if errorExists[2223136]
    {
      val error[1922397]:Error[167984] "error variable" "temp"
      (1922399 'move' error[1922397] nil[44])
      (1922403 call close[236112] f[1158520] error[1922397])
      val errorExists[2225120]:bool[10] "temp"
      (2225125 'move' errorExists[2225120](2225122 '!=' error[1922397] nil[44]))
      if errorExists[2225120]
      {
        gotoErrorHandling handler[1922414] handler[1922414]
      }
      label handler[1922414]
      val errorExists[2225128]:bool[10] "temp"
      (2225133 'move' errorExists[2225128](2225130 '!=' error[1922397] nil[44]))
      if errorExists[2225128]
      {
        (1922425 call chpl_uncaught_error[170289] error[1922397])
      }
      ref i_x[2513471]:file[235668] "temp"
      (2513475 'move' i_x[2513471](2513473 'set reference' f[1158520]))
      (2513479 call deinit[235979] i_x[2513471])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val w[1158548]:channel(true,dynamic,false)[1061136] "dead at end of block" "insert auto destroy"
    (1158550 'move' w[1158548] call_tmp[1158537])
    const-val args[2397353]:(string,codepointIndex,string)[1158744] "insert auto destroy"
    (2539742 '.=' args[2397353] x0[1158738] _e0_args[1158055])
    (2539746 '.=' args[2397353] x1[1158740] _e1_args[1158057])
    (2539750 '.=' args[2397353] x2[1158742] _e2_args[1158059])
    const-val ret[2397374]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2397376]:locale[28] "dead after last mention" "maybe param" "temp"
    (2397378 'move' call_tmp[2397376](2397380 '.' w[1158548] _readWriteThisFromLocale[1061133]))
    val ret[2397383]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2397385]:locale[28] "dead after last mention" "temp"
    (2397388 call init=[90170] tmp[2397385] call_tmp[2397376])
    (2397391 'move' ret[2397383] tmp[2397385])
    val ret[2397394]:locale[28] "dead at end of block" "insert auto destroy"
    (2397396 'move' ret[2397394] ret[2397383])
    const-val call_tmp[2397399]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2397401 'move' call_tmp[2397399](2397404 call ==[782970] ret[2397394] nilLocale[89942]))
    if call_tmp[2397399]
    {
      const-val call_tmp[2397409]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2397411]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2397413]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2397415 'move' call_tmp[2397413](2397418 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2397421 'move' call_tmp[2397411] call_tmp[2397413])
      const-val call_tmp[2397424]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2397426]:locale[28] "temp"
      (2397429 call chpl_localeID_to_locale[92852] call_tmp[2397411] ret_tmp[2397426])
      (2397432 'move' call_tmp[2397424] ret_tmp[2397426])
      (2397435 'move' call_tmp[2397409] call_tmp[2397424])
      (2397439 call =[90634] ret[2397394] call_tmp[2397409])
      ref i_x[2397442]:locale[28] "temp"
      (2397444 'move' i_x[2397442](2397446 'set reference' call_tmp[2397409]))
      (2397449 call deinit[90188] i_x[2397442])
    }
    (2397452 'move' ret[2397374] ret[2397394])
    const-val origLocale[2397455]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2397457 'move' origLocale[2397455] ret[2397374])
    ref call_tmp[2397462]:locale[28] "dead after last mention" "maybe param" "temp"
    (2397464 'move' call_tmp[2397462](2397466 '.' w[1158548] home[1061124]))
    const-val call_tmp[2397469]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2397471]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397473 'move' coerce_tmp[2397471](2397475 '.v' call_tmp[2397462] _instance[89978]))
    val coerce_tmp[2397478]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2397480 'move' coerce_tmp[2397478](2397482 'cast' object[22] coerce_tmp[2397471]))
    const-val call_tmp[2397485]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2397487 'move' call_tmp[2397485](2397489 'ptr_eq' coerce_tmp[2397478] nil[44]))
    if call_tmp[2397485]
    {
      (2397495 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2397498 'move' call_tmp[2397469](2397500 '_wide_get_locale' coerce_tmp[2397471]))
    val error[2397505]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2397507 'move' error[2397505] nil[44])
    val isdirect[2397521]:bool[10] "temp"
    (2397523 'move' isdirect[2397521](2397526 call chpl_doDirectExecuteOn[187469] call_tmp[2397469]))
    if isdirect[2397521]
    {
      (2397531 call on_fn[1165096] w[1158548] args[2397353] ret[2397374] error[2397505])
    }
    {
      val _args_foron_fn[2397537]:_class_localson_fn[2203493] "temp"
      (2397539 'move' _args_foron_fn[2397537](2397541 'stack allocate class' _class_localson_fn[2203493]))
      (2397543 '.=' _args_foron_fn[2397537] _0_tmp[2203496] call_tmp[2397469])
      (2397547 '.=' _args_foron_fn[2397537] _1_rvfDerefTmp[2203498] w[1158548])
      ref tmp[2397551]:(string,codepointIndex,string)[1158744] "temp"
      (2397553 'move' tmp[2397551](2397555 'set reference' args[2397353]))
      (2397557 '.=' _args_foron_fn[2397537] _2_args[2203500] tmp[2397551])
      (2397561 '.=' _args_foron_fn[2397537] _3_rvfDerefTmp[2203502] ret[2397374])
      ref tmp[2397565]:Error[167984] "temp"
      (2397567 'move' tmp[2397565](2397569 'set reference' error[2397505]))
      (2397571 '.=' _args_foron_fn[2397537] _4_error[2203504] tmp[2397565])
      val _args_vforon_fn[2397575]:c_void_ptr[149] "temp"
      (2397577 'move' _args_vforon_fn[2397575](2397579 'cast_to_void_star' _args_foron_fn[2397537]))
      val _args_sizeon_fn[2397581]:int(64)[13] "temp"
      (2397583 'move' _args_sizeon_fn[2397581](2397585 'sizeof_bundle' _class_localson_fn[2203493]))
      on(2397588 call wrapon_fn[2203557] call_tmp[2397469] _args_vforon_fn[2397575] _args_sizeon_fn[2397581] _args_foron_fn[2397537])
    }
    val errorExists[2397594]:bool[10] "temp"
    (2397596 'move' errorExists[2397594](2397598 '!=' error[2397505] nil[44]))
    if errorExists[2397594]
    {
      (2397603 '=' error[1886275] error[2397505])
      ref i_x[2397606]:locale[28] "temp"
      (2397608 'move' i_x[2397606](2397610 'set reference' origLocale[2397455]))
      (2397613 call deinit[90188] i_x[2397606])
      gotoErrorHandlingReturn _endwrite[2397630] _endwrite[2397630]
    }
    ref i_x[2397621]:locale[28] "temp"
    (2397623 'move' i_x[2397621](2397625 'set reference' origLocale[2397455]))
    (2397628 call deinit[90188] i_x[2397621])
    label _endwrite[2397630]
    val errorExists[2223144]:bool[10] "temp"
    (2223149 'move' errorExists[2223144](2223146 '!=' error[1886275] nil[44]))
    if errorExists[2223144]
    {
      val error[1922433]:Error[167984] "error variable" "temp"
      (1922435 'move' error[1922433] nil[44])
      (1922439 call close[1062551] w[1158548] error[1922433])
      val errorExists[2225136]:bool[10] "temp"
      (2225141 'move' errorExists[2225136](2225138 '!=' error[1922433] nil[44]))
      if errorExists[2225136]
      {
        gotoErrorHandling handler[1922450] handler[1922450]
      }
      label handler[1922450]
      val errorExists[2225144]:bool[10] "temp"
      (2225149 'move' errorExists[2225144](2225146 '!=' error[1922433] nil[44]))
      if errorExists[2225144]
      {
        (1922461 call chpl_uncaught_error[170289] error[1922433])
      }
      ref i_x[2392780]:channel(true,dynamic,false)[1061136] "temp"
      (2392784 'move' i_x[2392780](2392782 'set reference' w[1158548]))
      (2392788 call deinit[1676346] i_x[2392780])
      val error[1922469]:Error[167984] "error variable" "temp"
      (1922471 'move' error[1922469] nil[44])
      (1922475 call close[236112] f[1158520] error[1922469])
      val errorExists[2225152]:bool[10] "temp"
      (2225157 'move' errorExists[2225152](2225154 '!=' error[1922469] nil[44]))
      if errorExists[2225152]
      {
        gotoErrorHandling handler[1922486] handler[1922486]
      }
      label handler[1922486]
      val errorExists[2225160]:bool[10] "temp"
      (2225165 'move' errorExists[2225160](2225162 '!=' error[1922469] nil[44]))
      if errorExists[2225160]
      {
        (1922497 call chpl_uncaught_error[170289] error[1922469])
      }
      ref i_x[2513483]:file[235668] "temp"
      (2513487 'move' i_x[2513483](2513485 'set reference' f[1158520]))
      (2513491 call deinit[235979] i_x[2513483])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val call_tmp[1158574]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1158576 'move' call_tmp[1158574](1158582 call offset[1080337] w[1158548]))
    const-val call_tmp[2236450]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2236452 'move' call_tmp[2236450](2236454 '+' call_tmp[1158574] 1))
    const-val call_tmp[2393824]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393826 'move' call_tmp[2393824](2393828 '<' call_tmp[2236450] 0))
    if call_tmp[2393824]
    {
      (2393834 call safeCastCheckHalt[210302] "casting int(64) less than 0 to uint(64)")
    }
    const-val call_tmp[2393837]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393839 'move' call_tmp[2393837](2393841 'cast' uint(64)[115] call_tmp[2236450]))
    const-val call_tmp[2393844]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393846 'move' call_tmp[2393844](2393849 call sizeof[1080643] uint(8)[100]))
    const-val call_tmp[2393851]:uint(64)[115] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393853 'move' call_tmp[2393851](2393855 '*' call_tmp[2393837] call_tmp[2393844]))
    const-val call_tmp[2393858]:int(16)[90] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393860 'move' call_tmp[2393858](2393863 call offset_ARRAY_ELEMENTS[207445]))
    const-val call_tmp[2393864]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393866 'move' call_tmp[2393864](2393869 call chpl_here_alloc[1080679] call_tmp[2393851] call_tmp[2393858]))
    val call_tmp[2393872]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
    (2393874 'move' call_tmp[2393872](2393876 'cast' c_ptr(uint(8))[937612] call_tmp[2393864]))
    val buf[1158612]:c_ptr(uint(8))[937612] "dead at end of block" "insert auto destroy"
    (1158614 'move' buf[1158612] call_tmp[2393872])
    const-val call_tmp[1158618]:channel(false,dynamic,false)[1080871] "dead at end of block" "maybe param" "temp"
    val errorExists[2223152]:bool[10] "temp"
    (2223157 'move' errorExists[2223152](2223154 '!=' error[1886275] nil[44]))
    if errorExists[2223152]
    {
      val error[1922505]:Error[167984] "error variable" "temp"
      (1922507 'move' error[1922505] nil[44])
      (1922511 call close[1062551] w[1158548] error[1922505])
      val errorExists[2225168]:bool[10] "temp"
      (2225173 'move' errorExists[2225168](2225170 '!=' error[1922505] nil[44]))
      if errorExists[2225168]
      {
        gotoErrorHandling handler[1922522] handler[1922522]
      }
      label handler[1922522]
      val errorExists[2225176]:bool[10] "temp"
      (2225181 'move' errorExists[2225176](2225178 '!=' error[1922505] nil[44]))
      if errorExists[2225176]
      {
        (1922533 call chpl_uncaught_error[170289] error[1922505])
      }
      ref i_x[2392792]:channel(true,dynamic,false)[1061136] "temp"
      (2392796 'move' i_x[2392792](2392794 'set reference' w[1158548]))
      (2392800 call deinit[1676346] i_x[2392792])
      val error[1922541]:Error[167984] "error variable" "temp"
      (1922543 'move' error[1922541] nil[44])
      (1922547 call close[236112] f[1158520] error[1922541])
      val errorExists[2225184]:bool[10] "temp"
      (2225189 'move' errorExists[2225184](2225186 '!=' error[1922541] nil[44]))
      if errorExists[2225184]
      {
        gotoErrorHandling handler[1922558] handler[1922558]
      }
      label handler[1922558]
      val errorExists[2225192]:bool[10] "temp"
      (2225197 'move' errorExists[2225192](2225194 '!=' error[1922541] nil[44]))
      if errorExists[2225192]
      {
        (1922569 call chpl_uncaught_error[170289] error[1922541])
      }
      ref i_x[2513495]:file[235668] "temp"
      (2513499 'move' i_x[2513495](2513497 'set reference' f[1158520]))
      (2513503 call deinit[235979] i_x[2513495])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    val errorExists[2223160]:bool[10] "temp"
    (2223165 'move' errorExists[2223160](2223162 '!=' error[1886275] nil[44]))
    if errorExists[2223160]
    {
      val error[1922577]:Error[167984] "error variable" "temp"
      (1922579 'move' error[1922577] nil[44])
      (1922583 call close[1062551] w[1158548] error[1922577])
      val errorExists[2225200]:bool[10] "temp"
      (2225205 'move' errorExists[2225200](2225202 '!=' error[1922577] nil[44]))
      if errorExists[2225200]
      {
        gotoErrorHandling handler[1922594] handler[1922594]
      }
      label handler[1922594]
      val errorExists[2225208]:bool[10] "temp"
      (2225213 'move' errorExists[2225208](2225210 '!=' error[1922577] nil[44]))
      if errorExists[2225208]
      {
        (1922605 call chpl_uncaught_error[170289] error[1922577])
      }
      ref i_x[2392804]:channel(true,dynamic,false)[1061136] "temp"
      (2392808 'move' i_x[2392804](2392806 'set reference' w[1158548]))
      (2392812 call deinit[1676346] i_x[2392804])
      val error[1922613]:Error[167984] "error variable" "temp"
      (1922615 'move' error[1922613] nil[44])
      (1922619 call close[236112] f[1158520] error[1922613])
      val errorExists[2225216]:bool[10] "temp"
      (2225221 'move' errorExists[2225216](2225218 '!=' error[1922613] nil[44]))
      if errorExists[2225216]
      {
        gotoErrorHandling handler[1922630] handler[1922630]
      }
      label handler[1922630]
      val errorExists[2225224]:bool[10] "temp"
      (2225229 'move' errorExists[2225224](2225226 '!=' error[1922613] nil[44]))
      if errorExists[2225224]
      {
        (1922641 call chpl_uncaught_error[170289] error[1922613])
      }
      ref i_x[2513507]:file[235668] "temp"
      (2513511 'move' i_x[2513507](2513509 'set reference' f[1158520]))
      (2513515 call deinit[235979] i_x[2513507])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val tmp[2394125]:int(32)[95] "dead after last mention" "temp"
    (2394127 'move' tmp[2394125] IOHINT_NONE[231499])
    val errorExists[2223168]:bool[10] "temp"
    (2223173 'move' errorExists[2223168](2223170 '!=' error[1886275] nil[44]))
    if errorExists[2223168]
    {
      val error[1922649]:Error[167984] "error variable" "temp"
      (1922651 'move' error[1922649] nil[44])
      (1922655 call close[1062551] w[1158548] error[1922649])
      val errorExists[2225232]:bool[10] "temp"
      (2225237 'move' errorExists[2225232](2225234 '!=' error[1922649] nil[44]))
      if errorExists[2225232]
      {
        gotoErrorHandling handler[1922666] handler[1922666]
      }
      label handler[1922666]
      val errorExists[2225240]:bool[10] "temp"
      (2225245 'move' errorExists[2225240](2225242 '!=' error[1922649] nil[44]))
      if errorExists[2225240]
      {
        (1922677 call chpl_uncaught_error[170289] error[1922649])
      }
      ref i_x[2392816]:channel(true,dynamic,false)[1061136] "temp"
      (2392820 'move' i_x[2392816](2392818 'set reference' w[1158548]))
      (2392824 call deinit[1676346] i_x[2392816])
      val error[1922685]:Error[167984] "error variable" "temp"
      (1922687 'move' error[1922685] nil[44])
      (1922691 call close[236112] f[1158520] error[1922685])
      val errorExists[2225248]:bool[10] "temp"
      (2225253 'move' errorExists[2225248](2225250 '!=' error[1922685] nil[44]))
      if errorExists[2225248]
      {
        gotoErrorHandling handler[1922702] handler[1922702]
      }
      label handler[1922702]
      val errorExists[2225256]:bool[10] "temp"
      (2225261 'move' errorExists[2225256](2225258 '!=' error[1922685] nil[44]))
      if errorExists[2225256]
      {
        (1922713 call chpl_uncaught_error[170289] error[1922685])
      }
      ref i_x[2513519]:file[235668] "temp"
      (2513523 'move' i_x[2513519](2513521 'set reference' f[1158520]))
      (2513527 call deinit[235979] i_x[2513519])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val default_arg_style[1175896]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
    ref i_this[2394214]:file[235668] "temp"
    (2394218 'move' i_this[2394214](2394216 'set reference' f[1158520]))
    val ret[2394227]:iostyle[231932] "dead after last mention" "RVV" "maybe param" "temp"
    const-val style[2394229]:iostyle[231932] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "maybe ref" "suppress lvalue error" "temp" "user variable name"
    val error[2394231]:Error[167984] "error variable" "temp"
    (2394233 'move' error[2394231] nil[44])
    (2394236 'move' style[2394229](2394239 call _style[236048] i_this[2394214] error[2394231]))
    val errorExists[2394242]:bool[10] "temp"
    (2394244 'move' errorExists[2394242](2394246 '!=' error[2394231] nil[44]))
    if errorExists[2394242]
    {
      (2394251 '=' error[1886275] error[2394231])
      gotoErrorHandlingReturn _endreader_default_style[2394260] _endreader_default_style[2394260]
    }
    (2394257 'move' ret[2394227] style[2394229])
    label _endreader_default_style[2394260]
    (1175902 'move' default_arg_style[1175896] ret[2394227])
    val errorExists[2223176]:bool[10] "temp"
    (2223181 'move' errorExists[2223176](2223178 '!=' error[1886275] nil[44]))
    if errorExists[2223176]
    {
      val error[1922721]:Error[167984] "error variable" "temp"
      (1922723 'move' error[1922721] nil[44])
      (1922727 call close[1062551] w[1158548] error[1922721])
      val errorExists[2225264]:bool[10] "temp"
      (2225269 'move' errorExists[2225264](2225266 '!=' error[1922721] nil[44]))
      if errorExists[2225264]
      {
        gotoErrorHandling handler[1922738] handler[1922738]
      }
      label handler[1922738]
      val errorExists[2225272]:bool[10] "temp"
      (2225277 'move' errorExists[2225272](2225274 '!=' error[1922721] nil[44]))
      if errorExists[2225272]
      {
        (1922749 call chpl_uncaught_error[170289] error[1922721])
      }
      ref i_x[2392828]:channel(true,dynamic,false)[1061136] "temp"
      (2392832 'move' i_x[2392828](2392830 'set reference' w[1158548]))
      (2392836 call deinit[1676346] i_x[2392828])
      val error[1922757]:Error[167984] "error variable" "temp"
      (1922759 'move' error[1922757] nil[44])
      (1922763 call close[236112] f[1158520] error[1922757])
      val errorExists[2225280]:bool[10] "temp"
      (2225285 'move' errorExists[2225280](2225282 '!=' error[1922757] nil[44]))
      if errorExists[2225280]
      {
        gotoErrorHandling handler[1922774] handler[1922774]
      }
      label handler[1922774]
      val errorExists[2225288]:bool[10] "temp"
      (2225293 'move' errorExists[2225288](2225290 '!=' error[1922757] nil[44]))
      if errorExists[2225288]
      {
        (1922785 call chpl_uncaught_error[170289] error[1922757])
      }
      ref i_x[2513531]:file[235668] "temp"
      (2513535 'move' i_x[2513531](2513533 'set reference' f[1158520]))
      (2513539 call deinit[235979] i_x[2513531])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val ret_tmp[1909366]:channel(false,dynamic,false)[1080871] "temp"
    (1158626 call reader[1080777] f[1158520] 0 9223372036854775807 tmp[2394125] default_arg_style[1175896] error[1886275] ret_tmp[1909366])
    (1909369 'move' call_tmp[1158618] ret_tmp[1909366])
    val errorExists[2223184]:bool[10] "temp"
    (2223189 'move' errorExists[2223184](2223186 '!=' error[1886275] nil[44]))
    if errorExists[2223184]
    {
      val error[1922793]:Error[167984] "error variable" "temp"
      (1922795 'move' error[1922793] nil[44])
      (1922799 call close[1062551] w[1158548] error[1922793])
      val errorExists[2225296]:bool[10] "temp"
      (2225301 'move' errorExists[2225296](2225298 '!=' error[1922793] nil[44]))
      if errorExists[2225296]
      {
        gotoErrorHandling handler[1922810] handler[1922810]
      }
      label handler[1922810]
      val errorExists[2225304]:bool[10] "temp"
      (2225309 'move' errorExists[2225304](2225306 '!=' error[1922793] nil[44]))
      if errorExists[2225304]
      {
        (1922821 call chpl_uncaught_error[170289] error[1922793])
      }
      ref i_x[2392840]:channel(true,dynamic,false)[1061136] "temp"
      (2392844 'move' i_x[2392840](2392842 'set reference' w[1158548]))
      (2392848 call deinit[1676346] i_x[2392840])
      val error[1922829]:Error[167984] "error variable" "temp"
      (1922831 'move' error[1922829] nil[44])
      (1922835 call close[236112] f[1158520] error[1922829])
      val errorExists[2225312]:bool[10] "temp"
      (2225317 'move' errorExists[2225312](2225314 '!=' error[1922829] nil[44]))
      if errorExists[2225312]
      {
        gotoErrorHandling handler[1922846] handler[1922846]
      }
      label handler[1922846]
      val errorExists[2225320]:bool[10] "temp"
      (2225325 'move' errorExists[2225320](2225322 '!=' error[1922829] nil[44]))
      if errorExists[2225320]
      {
        (1922857 call chpl_uncaught_error[170289] error[1922829])
      }
      ref i_x[2513543]:file[235668] "temp"
      (2513547 'move' i_x[2513543](2513545 'set reference' f[1158520]))
      (2513551 call deinit[235979] i_x[2513543])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val r[1158629]:channel(false,dynamic,false)[1080871] "dead at end of block" "insert auto destroy"
    (1158631 'move' r[1158629] call_tmp[1158618])
    (1158658 call readBytes[1083028] r[1158629] call_tmp[2393872] call_tmp[1158574] error[1886275])
    val errorExists[2223192]:bool[10] "temp"
    (2223197 'move' errorExists[2223192](2223194 '!=' error[1886275] nil[44]))
    if errorExists[2223192]
    {
      val error[1922865]:Error[167984] "error variable" "temp"
      (1922867 'move' error[1922865] nil[44])
      (1922871 call close[1082283] r[1158629] error[1922865])
      val errorExists[2225328]:bool[10] "temp"
      (2225333 'move' errorExists[2225328](2225330 '!=' error[1922865] nil[44]))
      if errorExists[2225328]
      {
        gotoErrorHandling handler[1922882] handler[1922882]
      }
      label handler[1922882]
      val errorExists[2225336]:bool[10] "temp"
      (2225341 'move' errorExists[2225336](2225338 '!=' error[1922865] nil[44]))
      if errorExists[2225336]
      {
        (1922893 call chpl_uncaught_error[170289] error[1922865])
      }
      ref i_x[2517138]:channel(false,dynamic,false)[1080871] "temp"
      (2517142 'move' i_x[2517138](2517140 'set reference' r[1158629]))
      (2517146 call deinit[1680600] i_x[2517138])
      val error[1922901]:Error[167984] "error variable" "temp"
      (1922903 'move' error[1922901] nil[44])
      (1922907 call close[1062551] w[1158548] error[1922901])
      val errorExists[2225344]:bool[10] "temp"
      (2225349 'move' errorExists[2225344](2225346 '!=' error[1922901] nil[44]))
      if errorExists[2225344]
      {
        gotoErrorHandling handler[1922918] handler[1922918]
      }
      label handler[1922918]
      val errorExists[2225352]:bool[10] "temp"
      (2225357 'move' errorExists[2225352](2225354 '!=' error[1922901] nil[44]))
      if errorExists[2225352]
      {
        (1922929 call chpl_uncaught_error[170289] error[1922901])
      }
      ref i_x[2392852]:channel(true,dynamic,false)[1061136] "temp"
      (2392856 'move' i_x[2392852](2392854 'set reference' w[1158548]))
      (2392860 call deinit[1676346] i_x[2392852])
      val error[1922937]:Error[167984] "error variable" "temp"
      (1922939 'move' error[1922937] nil[44])
      (1922943 call close[236112] f[1158520] error[1922937])
      val errorExists[2225360]:bool[10] "temp"
      (2225365 'move' errorExists[2225360](2225362 '!=' error[1922937] nil[44]))
      if errorExists[2225360]
      {
        gotoErrorHandling handler[1922954] handler[1922954]
      }
      label handler[1922954]
      val errorExists[2225368]:bool[10] "temp"
      (2225373 'move' errorExists[2225368](2225370 '!=' error[1922937] nil[44]))
      if errorExists[2225368]
      {
        (1922965 call chpl_uncaught_error[170289] error[1922937])
      }
      ref i_x[2513555]:file[235668] "temp"
      (2513559 'move' i_x[2513555](2513557 'set reference' f[1158520]))
      (2513563 call deinit[235979] i_x[2513555])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    ref call_tmp[2317078]:uint(8)[100] "dead after last mention" "maybe param" "temp"
    (2317080 'move' call_tmp[2317078](2317082 'array_get' buf[1158612] call_tmp[1158574]))
    const-val coerce_tmp[1175912]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175918 'move' coerce_tmp[1175912](1175914 'cast' uint(8)[100] 0))
    (2317560 '=' call_tmp[2317078] coerce_tmp[1175912])
    const-val ret[2257421]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[2257423]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    val error[2257425]:Error[167984] "error variable" "temp"
    (2257427 'move' error[2257425] nil[44])
    const-val ret_tmp[2257430]:string[26] "temp"
    (2257433 call decodeByteBuffer[173938] call_tmp[2393872] call_tmp[1158574] replace[173694] error[2257425] ret_tmp[2257430])
    (2257439 'move' call_tmp[2257423] ret_tmp[2257430])
    val errorExists[2257442]:bool[10] "temp"
    (2257444 'move' errorExists[2257442](2257446 '!=' error[2257425] nil[44]))
    if errorExists[2257442]
    {
      (2257451 '=' error[1886275] error[2257425])
      gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257460] _endcreateStringWithNewBuffer[2257460]
    }
    (2257457 'move' ret[2257421] call_tmp[2257423])
    label _endcreateStringWithNewBuffer[2257460]
    val errorExists[2223200]:bool[10] "temp"
    (2223205 'move' errorExists[2223200](2223202 '!=' error[1886275] nil[44]))
    if errorExists[2223200]
    {
      val error[1922973]:Error[167984] "error variable" "temp"
      (1922975 'move' error[1922973] nil[44])
      (1922979 call close[1082283] r[1158629] error[1922973])
      val errorExists[2225376]:bool[10] "temp"
      (2225381 'move' errorExists[2225376](2225378 '!=' error[1922973] nil[44]))
      if errorExists[2225376]
      {
        gotoErrorHandling handler[1922990] handler[1922990]
      }
      label handler[1922990]
      val errorExists[2225384]:bool[10] "temp"
      (2225389 'move' errorExists[2225384](2225386 '!=' error[1922973] nil[44]))
      if errorExists[2225384]
      {
        (1923001 call chpl_uncaught_error[170289] error[1922973])
      }
      ref i_x[2517150]:channel(false,dynamic,false)[1080871] "temp"
      (2517154 'move' i_x[2517150](2517152 'set reference' r[1158629]))
      (2517158 call deinit[1680600] i_x[2517150])
      val error[1923009]:Error[167984] "error variable" "temp"
      (1923011 'move' error[1923009] nil[44])
      (1923015 call close[1062551] w[1158548] error[1923009])
      val errorExists[2225392]:bool[10] "temp"
      (2225397 'move' errorExists[2225392](2225394 '!=' error[1923009] nil[44]))
      if errorExists[2225392]
      {
        gotoErrorHandling handler[1923026] handler[1923026]
      }
      label handler[1923026]
      val errorExists[2225400]:bool[10] "temp"
      (2225405 'move' errorExists[2225400](2225402 '!=' error[1923009] nil[44]))
      if errorExists[2225400]
      {
        (1923037 call chpl_uncaught_error[170289] error[1923009])
      }
      ref i_x[2392864]:channel(true,dynamic,false)[1061136] "temp"
      (2392868 'move' i_x[2392864](2392866 'set reference' w[1158548]))
      (2392872 call deinit[1676346] i_x[2392864])
      val error[1923045]:Error[167984] "error variable" "temp"
      (1923047 'move' error[1923045] nil[44])
      (1923051 call close[236112] f[1158520] error[1923045])
      val errorExists[2225408]:bool[10] "temp"
      (2225413 'move' errorExists[2225408](2225410 '!=' error[1923045] nil[44]))
      if errorExists[2225408]
      {
        gotoErrorHandling handler[1923062] handler[1923062]
      }
      label handler[1923062]
      val errorExists[2225416]:bool[10] "temp"
      (2225421 'move' errorExists[2225416](2225418 '!=' error[1923045] nil[44]))
      if errorExists[2225416]
      {
        (1923073 call chpl_uncaught_error[170289] error[1923045])
      }
      ref i_x[2513567]:file[235668] "temp"
      (2513571 'move' i_x[2513567](2513569 'set reference' f[1158520]))
      (2513575 call deinit[235979] i_x[2513567])
      gotoErrorHandling handler[1886276] handler[1886276]
    }
    const-val coerce_tmp[1175923]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1175929 'move' coerce_tmp[1175923](1175925 'cast' c_void_ptr[149] call_tmp[2393872]))
    (2325164 call chpl_here_free[188127] coerce_tmp[1175923])
    (1175933 'move' ret[1158063] ret[2257421])
    val error[1923081]:Error[167984] "error variable" "temp"
    (1923083 'move' error[1923081] nil[44])
    (1923087 call close[1082283] r[1158629] error[1923081])
    val errorExists[2225424]:bool[10] "temp"
    (2225429 'move' errorExists[2225424](2225426 '!=' error[1923081] nil[44]))
    if errorExists[2225424]
    {
      gotoErrorHandling handler[1923098] handler[1923098]
    }
    label handler[1923098]
    val errorExists[2225432]:bool[10] "temp"
    (2225437 'move' errorExists[2225432](2225434 '!=' error[1923081] nil[44]))
    if errorExists[2225432]
    {
      (1923109 call chpl_uncaught_error[170289] error[1923081])
    }
    ref i_x[2517162]:channel(false,dynamic,false)[1080871] "temp"
    (2517166 'move' i_x[2517162](2517164 'set reference' r[1158629]))
    (2517170 call deinit[1680600] i_x[2517162])
    val error[1923117]:Error[167984] "error variable" "temp"
    (1923119 'move' error[1923117] nil[44])
    (1923123 call close[1062551] w[1158548] error[1923117])
    val errorExists[2225440]:bool[10] "temp"
    (2225445 'move' errorExists[2225440](2225442 '!=' error[1923117] nil[44]))
    if errorExists[2225440]
    {
      gotoErrorHandling handler[1923134] handler[1923134]
    }
    label handler[1923134]
    val errorExists[2225448]:bool[10] "temp"
    (2225453 'move' errorExists[2225448](2225450 '!=' error[1923117] nil[44]))
    if errorExists[2225448]
    {
      (1923145 call chpl_uncaught_error[170289] error[1923117])
    }
    ref i_x[2392876]:channel(true,dynamic,false)[1061136] "temp"
    (2392880 'move' i_x[2392876](2392878 'set reference' w[1158548]))
    (2392884 call deinit[1676346] i_x[2392876])
    val error[1923153]:Error[167984] "error variable" "temp"
    (1923155 'move' error[1923153] nil[44])
    (1923159 call close[236112] f[1158520] error[1923153])
    val errorExists[2225456]:bool[10] "temp"
    (2225461 'move' errorExists[2225456](2225458 '!=' error[1923153] nil[44]))
    if errorExists[2225456]
    {
      gotoErrorHandling handler[1923170] handler[1923170]
    }
    label handler[1923170]
    val errorExists[2225464]:bool[10] "temp"
    (2225469 'move' errorExists[2225464](2225466 '!=' error[1923153] nil[44]))
    if errorExists[2225464]
    {
      (1923181 call chpl_uncaught_error[170289] error[1923153])
    }
    ref i_x[2513579]:file[235668] "temp"
    (2513583 'move' i_x[2513579](2513581 'set reference' f[1158520]))
    (2513587 call deinit[235979] i_x[2513579])
    gotoReturn _end_stringify[1158726] _end_stringify[1158726]
    label handler[1886276]
    val errorExists[2223208]:bool[10] "temp"
    (2223213 'move' errorExists[2223208](2223210 '!=' error[1886275] nil[44]))
    if errorExists[2223208]
    {
      (1886466 call chpl_uncaught_error[170289] error[1886275])
    }
    label _end_stringify[1158726]
    (1910574 '=' _retArg[1910572] ret[1158063])
    (1910576 return _void[55])
  }
  function stringify[1272682](const  ref arg _e0_args[1272684]:string[26], const in arg _e1_args[1272686]:int(64)[13], const  ref arg _e2_args[1272688]:string[26], ref arg _retArg[1913144]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1272692]:string[26] "dead after last mention" "RVV" "temp"
    val str[1272730]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326357]:string[26] "temp"
    (2326360 'move' inlineImm[2326357] "")
    ref i_x[2326362]:string[26] "temp"
    (2326366 'move' i_x[2326362](2326364 'set reference' inlineImm[2326357]))
    val ret[2326369]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326371]:string[26] "dead after last mention" "temp"
    (2326374 call init=[30774] tmp[2326371] i_x[2326362])
    (2326377 'move' ret[2326369] tmp[2326371])
    (1272732 'move' str[1272730] ret[2326369])
    (1276453 call +=[38800] str[1272730] _e0_args[1272684])
    const-val call_tmp[1277028]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909126]:string[26] "temp"
    (1277033 call _cast[1063342] _e1_args[1272686] ret_tmp[1909126])
    (1909129 'move' call_tmp[1277028] ret_tmp[1909126])
    (1277037 call +=[38800] str[1272730] call_tmp[1277028])
    ref i_x[2248745]:string[26] "temp"
    (2248749 'move' i_x[2248745](2248747 'set reference' call_tmp[1277028]))
    (2248753 call deinit[30834] i_x[2248745])
    (1277143 call +=[38800] str[1272730] _e2_args[1272688])
    (1277628 'move' ret[1272692] str[1272730])
    gotoReturn _end_stringify[1273355] _end_stringify[1273355]
    label _end_stringify[1273355]
    (1913146 '=' _retArg[1913144] ret[1272692])
    (1913150 return _void[55])
  }
  function stringify[1560024](const  ref arg _e0_args[1560026]:string[26], const  ref arg _e1_args[1560028]:string[26], const  ref arg _e2_args[1560030]:string[26], ref arg _retArg[1916867]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1560034]:string[26] "dead after last mention" "RVV" "temp"
    val str[1560072]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326532]:string[26] "temp"
    (2326535 'move' inlineImm[2326532] "")
    ref i_x[2326537]:string[26] "temp"
    (2326541 'move' i_x[2326537](2326539 'set reference' inlineImm[2326532]))
    val ret[2326544]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326546]:string[26] "dead after last mention" "temp"
    (2326549 call init=[30774] tmp[2326546] i_x[2326537])
    (2326552 'move' ret[2326544] tmp[2326546])
    (1560074 'move' str[1560072] ret[2326544])
    (1563805 call +=[38800] str[1560072] _e0_args[1560026])
    (1564150 call +=[38800] str[1560072] _e1_args[1560028])
    (1564495 call +=[38800] str[1560072] _e2_args[1560030])
    (1564900 'move' ret[1560034] str[1560072])
    gotoReturn _end_stringify[1560697] _end_stringify[1560697]
    label _end_stringify[1560697]
    (1916869 '=' _retArg[1916867] ret[1560034])
    (1916873 return _void[55])
  }
  function stringify[1213167](const  ref arg _e0_args[1213169]:string[26], const in arg _e1_args[1213171]:int(64)[13], ref arg _retArg[1910960]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1213175]:string[26] "dead after last mention" "RVV" "temp"
    val str[1213210]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326332]:string[26] "temp"
    (2326335 'move' inlineImm[2326332] "")
    ref i_x[2326337]:string[26] "temp"
    (2326341 'move' i_x[2326337](2326339 'set reference' inlineImm[2326332]))
    val ret[2326344]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326346]:string[26] "dead after last mention" "temp"
    (2326349 call init=[30774] tmp[2326346] i_x[2326337])
    (2326352 'move' ret[2326344] tmp[2326346])
    (1213212 'move' str[1213210] ret[2326344])
    (1216850 call +=[38800] str[1213210] _e0_args[1213169])
    const-val call_tmp[1217425]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909096]:string[26] "temp"
    (1217430 call _cast[1063342] _e1_args[1213171] ret_tmp[1909096])
    (1909099 'move' call_tmp[1217425] ret_tmp[1909096])
    (1217434 call +=[38800] str[1213210] call_tmp[1217425])
    ref i_x[2248481]:string[26] "temp"
    (2248485 'move' i_x[2248481](2248483 'set reference' call_tmp[1217425]))
    (2248489 call deinit[30834] i_x[2248481])
    (1217646 'move' ret[1213175] str[1213210])
    gotoReturn _end_stringify[1213835] _end_stringify[1213835]
    label _end_stringify[1213835]
    (1910962 '=' _retArg[1910960] ret[1213175])
    (1910966 return _void[55])
  }
  function stringify[1279179](const  ref arg _e0_args[1279181]:string[26], const in arg _e1_args[1279183]:int(64)[13], const  ref arg _e2_args[1279185]:string[26], const in arg _e3_args[1279187]:int(64)[13], const  ref arg _e4_args[1279189]:string[26], ref arg _retArg[1913170]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1279193]:string[26] "dead after last mention" "RVV" "temp"
    val str[1279237]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326382]:string[26] "temp"
    (2326385 'move' inlineImm[2326382] "")
    ref i_x[2326387]:string[26] "temp"
    (2326391 'move' i_x[2326387](2326389 'set reference' inlineImm[2326382]))
    val ret[2326394]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326396]:string[26] "dead after last mention" "temp"
    (2326399 call init=[30774] tmp[2326396] i_x[2326387])
    (2326402 'move' ret[2326394] tmp[2326396])
    (1279239 'move' str[1279237] ret[2326394])
    (1283768 call +=[38800] str[1279237] _e0_args[1279181])
    const-val call_tmp[1284343]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909132]:string[26] "temp"
    (1284348 call _cast[1063342] _e1_args[1279183] ret_tmp[1909132])
    (1909135 'move' call_tmp[1284343] ret_tmp[1909132])
    (1284352 call +=[38800] str[1279237] call_tmp[1284343])
    ref i_x[2248781]:string[26] "temp"
    (2248785 'move' i_x[2248781](2248783 'set reference' call_tmp[1284343]))
    (2248789 call deinit[30834] i_x[2248781])
    (1284458 call +=[38800] str[1279237] _e2_args[1279185])
    const-val call_tmp[1285033]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909138]:string[26] "temp"
    (1285038 call _cast[1063342] _e3_args[1279187] ret_tmp[1909138])
    (1909141 'move' call_tmp[1285033] ret_tmp[1909138])
    (1285042 call +=[38800] str[1279237] call_tmp[1285033])
    ref i_x[2248793]:string[26] "temp"
    (2248797 'move' i_x[2248793](2248795 'set reference' call_tmp[1285033]))
    (2248801 call deinit[30834] i_x[2248793])
    (1285148 call +=[38800] str[1279237] _e4_args[1279189])
    (1285781 'move' ret[1279193] str[1279237])
    gotoReturn _end_stringify[1279862] _end_stringify[1279862]
    label _end_stringify[1279862]
    (1913172 '=' _retArg[1913170] ret[1279193])
    (1913176 return _void[55])
  }
  function stringify[1337977](const  ref arg _e0_args[1337979]:string[26], const  ref arg _e1_args[1337981]:string[26], const in arg _e2_args[1337983]:int(64)[13], const  ref arg _e3_args[1337985]:string[26], const in arg _e4_args[1337987]:range(int(64),bounded,false)[1027003], ref arg _retArg[1913903]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1337991]:string[26] "dead after last mention" "RVV" "temp"
    val str[1338035]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326432]:string[26] "temp"
    (2326435 'move' inlineImm[2326432] "")
    ref i_x[2326437]:string[26] "temp"
    (2326441 'move' i_x[2326437](2326439 'set reference' inlineImm[2326432]))
    val ret[2326444]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326446]:string[26] "dead after last mention" "temp"
    (2326449 call init=[30774] tmp[2326446] i_x[2326437])
    (2326452 'move' ret[2326444] tmp[2326446])
    (1338037 'move' str[1338035] ret[2326444])
    (1341932 call +=[38800] str[1338035] _e0_args[1337979])
    (1342277 call +=[38800] str[1338035] _e1_args[1337981])
    const-val call_tmp[1342852]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909144]:string[26] "temp"
    (1342857 call _cast[1063342] _e2_args[1337983] ret_tmp[1909144])
    (1909147 'move' call_tmp[1342852] ret_tmp[1909144])
    (1342861 call +=[38800] str[1338035] call_tmp[1342852])
    ref i_x[2248853]:string[26] "temp"
    (2248857 'move' i_x[2248853](2248855 'set reference' call_tmp[1342852]))
    (2248861 call deinit[30834] i_x[2248853])
    (1342967 call +=[38800] str[1338035] _e3_args[1337985])
    const-val call_tmp[1343542]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909984]:string[26] "temp"
    (1343547 call _cast[1119626] _e4_args[1337987] ret_tmp[1909984])
    (1909987 'move' call_tmp[1343542] ret_tmp[1909984])
    (1343551 call +=[38800] str[1338035] call_tmp[1343542])
    ref i_x[2248865]:string[26] "temp"
    (2248869 'move' i_x[2248865](2248867 'set reference' call_tmp[1343542]))
    (2248873 call deinit[30834] i_x[2248865])
    (1343938 'move' ret[1337991] str[1338035])
    gotoReturn _end_stringify[1338660] _end_stringify[1338660]
    label _end_stringify[1338660]
    (1913905 '=' _retArg[1913903] ret[1337991])
    (1913911 return _void[55])
  }
  function stringify[1423263](const  ref arg _e0_args[1423265]:string[26], const in arg _e1_args[1423267]:int(64)[13], const  ref arg _e2_args[1423269]:string[26], const in arg _e3_args[1423271]:int(64)[13], const  ref arg _e4_args[1423273]:string[26], const in arg _e5_args[1423275]:int(64)[13], ref arg _retArg[1915023]:string[26]) : void[4] "expanded varargs" "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1423279]:string[26] "dead after last mention" "RVV" "temp"
    val str[1423326]:string[26] "dead at end of block" "insert auto destroy"
    val inlineImm[2326457]:string[26] "temp"
    (2326460 'move' inlineImm[2326457] "")
    ref i_x[2326462]:string[26] "temp"
    (2326466 'move' i_x[2326462](2326464 'set reference' inlineImm[2326457]))
    val ret[2326469]:string[26] "dead after last mention" "RVV" "temp"
    const-val tmp[2326471]:string[26] "dead after last mention" "temp"
    (2326474 call init=[30774] tmp[2326471] i_x[2326462])
    (2326477 'move' ret[2326469] tmp[2326471])
    (1423328 'move' str[1423326] ret[2326469])
    (1427948 call +=[38800] str[1423326] _e0_args[1423265])
    const-val call_tmp[1428523]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909150]:string[26] "temp"
    (1428528 call _cast[1063342] _e1_args[1423267] ret_tmp[1909150])
    (1909153 'move' call_tmp[1428523] ret_tmp[1909150])
    (1428532 call +=[38800] str[1423326] call_tmp[1428523])
    ref i_x[2249201]:string[26] "temp"
    (2249205 'move' i_x[2249201](2249203 'set reference' call_tmp[1428523]))
    (2249209 call deinit[30834] i_x[2249201])
    (1428638 call +=[38800] str[1423326] _e2_args[1423269])
    const-val call_tmp[1429213]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909156]:string[26] "temp"
    (1429218 call _cast[1063342] _e3_args[1423271] ret_tmp[1909156])
    (1909159 'move' call_tmp[1429213] ret_tmp[1909156])
    (1429222 call +=[38800] str[1423326] call_tmp[1429213])
    ref i_x[2249213]:string[26] "temp"
    (2249217 'move' i_x[2249213](2249215 'set reference' call_tmp[1429213]))
    (2249221 call deinit[30834] i_x[2249213])
    (1429328 call +=[38800] str[1423326] _e4_args[1423273])
    const-val call_tmp[1429903]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1909162]:string[26] "temp"
    (1429908 call _cast[1063342] _e5_args[1423275] ret_tmp[1909162])
    (1909165 'move' call_tmp[1429903] ret_tmp[1909162])
    (1429912 call +=[38800] str[1423326] call_tmp[1429903])
    ref i_x[2249225]:string[26] "temp"
    (2249229 'move' i_x[2249225](2249227 'set reference' call_tmp[1429903]))
    (2249233 call deinit[30834] i_x[2249225])
    (1430420 'move' ret[1423279] str[1423326])
    gotoReturn _end_stringify[1423951] _end_stringify[1423951]
    label _end_stringify[1423951]
    (1915025 '=' _retArg[1915023] ret[1423279])
    (1915029 return _void[55])
  }
  val _arg_to_proto_names[246649]:heap__tuple_6_star_string[2197661] "dead at end of block" "insert auto destroy" "private"
  function channel(true,dynamic,true)[1022014].writeln[1551910](const  ref arg this[1551916]:channel(true,dynamic,true)[1022014], const  ref arg _e0_args[1551918]:[domain(1,int(64),false)] real(64)[1366029], ref arg error_out[1887883]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1551922]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1551969]:ioNewline[238789] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1551995]:ioNewline[238789] "dead after last mention" "temp"
    (1551998 call init[893858] initTemp[1551995] 0)
    (1551971 'move' call_tmp[1551969] initTemp[1551995])
    val error[1887888]:Error[167984] "error variable" "temp"
    (1887890 'move' error[1887888] nil[44])
    ref i__e1_args[2506225]:ioNewline[238789] "temp"
    (2506229 'move' i__e1_args[2506225](2506227 'set reference' call_tmp[1551969]))
    const-val args[2506238]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "insert auto destroy"
    val this_x0[2525241]:[domain(1,int(64),false)] real(64)[1366029]
    (2506242 'move' this_x0[2525241] _e0_args[1551918])
    (2525249 '.=' args[2506238] x0[1552277] this_x0[2525241])
    (2525253 '.=' args[2506238] x1[1552279] i__e1_args[2506225])
    val ret[2506253]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2506255]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2506257]:locale[28] "dead after last mention" "maybe param" "temp"
    (2506259 'move' call_tmp[2506257](2506261 '.' this[1551916] _readWriteThisFromLocale[1022011]))
    val ret[2506264]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2506266]:locale[28] "dead after last mention" "temp"
    (2506269 call init=[90170] tmp[2506266] call_tmp[2506257])
    (2506272 'move' ret[2506264] tmp[2506266])
    val ret[2506275]:locale[28] "dead at end of block" "insert auto destroy"
    (2506277 'move' ret[2506275] ret[2506264])
    const-val call_tmp[2506280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506282 'move' call_tmp[2506280](2506285 call ==[782970] ret[2506275] nilLocale[89942]))
    if call_tmp[2506280]
    {
      const-val call_tmp[2506290]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2506292]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2506294]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2506296 'move' call_tmp[2506294](2506299 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2506302 'move' call_tmp[2506292] call_tmp[2506294])
      const-val call_tmp[2506305]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2506307]:locale[28] "temp"
      (2506310 call chpl_localeID_to_locale[92852] call_tmp[2506292] ret_tmp[2506307])
      (2506313 'move' call_tmp[2506305] ret_tmp[2506307])
      (2506316 'move' call_tmp[2506290] call_tmp[2506305])
      (2506320 call =[90634] ret[2506275] call_tmp[2506290])
      ref i_x[2506323]:locale[28] "temp"
      (2506325 'move' i_x[2506323](2506327 'set reference' call_tmp[2506290]))
      (2506330 call deinit[90188] i_x[2506323])
    }
    (2506333 'move' ret[2506255] ret[2506275])
    const-val origLocale[2506336]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2506338 'move' origLocale[2506336] ret[2506255])
    ref call_tmp[2506343]:locale[28] "dead after last mention" "maybe param" "temp"
    (2506345 'move' call_tmp[2506343](2506347 '.' this[1551916] home[1022002]))
    const-val call_tmp[2506350]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2506352]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506354 'move' coerce_tmp[2506352](2506356 '.v' call_tmp[2506343] _instance[89978]))
    val coerce_tmp[2506359]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506361 'move' coerce_tmp[2506359](2506363 'cast' object[22] coerce_tmp[2506352]))
    const-val call_tmp[2506366]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506368 'move' call_tmp[2506366](2506370 'ptr_eq' coerce_tmp[2506359] nil[44]))
    if call_tmp[2506366]
    {
      (2506376 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2506379 'move' call_tmp[2506350](2506381 '_wide_get_locale' coerce_tmp[2506352]))
    val error[2506386]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2506388 'move' error[2506386] nil[44])
    val rvfDerefTmp[2506391]:channel(true,dynamic,true)[1022014] "temp"
    (2506393 'move' rvfDerefTmp[2506391](2506395 'deref' this[1551916]))
    val isdirect[2506402]:bool[10] "temp"
    (2506404 'move' isdirect[2506402](2506407 call chpl_doDirectExecuteOn[187469] call_tmp[2506350]))
    if isdirect[2506402]
    {
      (2506412 call on_fn[1552156] rvfDerefTmp[2506391] args[2506238] ret[2506255] error[2506386])
    }
    {
      val _args_foron_fn[2506418]:_class_localson_fn[2208543] "temp"
      (2506420 'move' _args_foron_fn[2506418](2506422 'stack allocate class' _class_localson_fn[2208543]))
      (2506424 '.=' _args_foron_fn[2506418] _0_tmp[2208546] call_tmp[2506350])
      (2506428 '.=' _args_foron_fn[2506418] _1_rvfDerefTmp[2208548] rvfDerefTmp[2506391])
      ref tmp[2506432]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "temp"
      (2506434 'move' tmp[2506432](2506436 'set reference' args[2506238]))
      (2506438 '.=' _args_foron_fn[2506418] _2_args[2208550] tmp[2506432])
      (2506442 '.=' _args_foron_fn[2506418] _3_rvfDerefTmp[2208552] ret[2506255])
      ref tmp[2506446]:Error[167984] "temp"
      (2506448 'move' tmp[2506446](2506450 'set reference' error[2506386]))
      (2506452 '.=' _args_foron_fn[2506418] _4_error[2208554] tmp[2506446])
      val _args_vforon_fn[2506456]:c_void_ptr[149] "temp"
      (2506458 'move' _args_vforon_fn[2506456](2506460 'cast_to_void_star' _args_foron_fn[2506418]))
      val _args_sizeon_fn[2506462]:int(64)[13] "temp"
      (2506464 'move' _args_sizeon_fn[2506462](2506466 'sizeof_bundle' _class_localson_fn[2208543]))
      on(2506469 call wrapon_fn[2208607] call_tmp[2506350] _args_vforon_fn[2506456] _args_sizeon_fn[2506462] _args_foron_fn[2506418])
    }
    val errorExists[2506475]:bool[10] "temp"
    (2506477 'move' errorExists[2506475](2506479 '!=' error[2506386] nil[44]))
    if errorExists[2506475]
    {
      (2506484 '=' error[1887888] error[2506386])
      ref i_x[2506487]:locale[28] "temp"
      (2506489 'move' i_x[2506487](2506491 'set reference' origLocale[2506336]))
      (2506494 call deinit[90188] i_x[2506487])
      gotoErrorHandlingReturn _endwrite[2506511] _endwrite[2506511]
    }
    (2506499 'move' ret[2506253] 1)
    ref i_x[2506502]:locale[28] "temp"
    (2506504 'move' i_x[2506502](2506506 'set reference' origLocale[2506336]))
    (2506509 call deinit[90188] i_x[2506502])
    label _endwrite[2506511]
    val errorExists[2223936]:bool[10] "temp"
    (2223941 'move' errorExists[2223936](2223938 '!=' error[1887888] nil[44]))
    if errorExists[2223936]
    {
      (1887894 '=' error_out[1887883] error[1887888])
      gotoErrorHandlingReturn _endwriteln[1887885] _endwriteln[1887885]
    }
    (1589504 'move' ret[1551922] ret[2506253])
    label _endwriteln[1887885]
    (1551991 return ret[1551922])
  }
  function channel(true,dynamic,true)[1022014].writeln[1589525](const  ref arg this[1589531]:channel(true,dynamic,true)[1022014], const  ref arg _e0_args[1589533]:string[26], ref arg error_out[1889145]:Error[167984]) : bool[10] throws "expanded varargs" "instantiated generic" "invisible fn" "method" "no doc" "resolved"
  {
    val ret[1589537]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1589547]:ioNewline[238789] "dead after last mention" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1589573]:ioNewline[238789] "dead after last mention" "temp"
    (1589576 call init[893858] initTemp[1589573] 0)
    (1589549 'move' call_tmp[1589547] initTemp[1589573])
    val error[1889150]:Error[167984] "error variable" "temp"
    (1889152 'move' error[1889150] nil[44])
    ref i__e1_args[2511659]:ioNewline[238789] "temp"
    (2511663 'move' i__e1_args[2511659](2511661 'set reference' call_tmp[1589547]))
    const-val args[2511672]:(string,ioNewline)[1589826] "insert auto destroy"
    (2538158 '.=' args[2511672] x0[1589822] _e0_args[1589533])
    (2538162 '.=' args[2511672] x1[1589824] i__e1_args[2511659])
    val ret[2511687]:bool[10] "dead after last mention" "RVV" "temp"
    const-val ret[2511689]:locale[28] "dead after last mention" "RVV" "temp"
    ref call_tmp[2511691]:locale[28] "dead after last mention" "maybe param" "temp"
    (2511693 'move' call_tmp[2511691](2511695 '.' this[1589531] _readWriteThisFromLocale[1022011]))
    val ret[2511698]:locale[28] "dead after last mention" "RVV" "temp"
    const-val tmp[2511700]:locale[28] "dead after last mention" "temp"
    (2511703 call init=[90170] tmp[2511700] call_tmp[2511691])
    (2511706 'move' ret[2511698] tmp[2511700])
    val ret[2511709]:locale[28] "dead at end of block" "insert auto destroy"
    (2511711 'move' ret[2511709] ret[2511698])
    const-val call_tmp[2511714]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2511716 'move' call_tmp[2511714](2511719 call ==[782970] ret[2511709] nilLocale[89942]))
    if call_tmp[2511714]
    {
      const-val call_tmp[2511724]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2511726]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val call_tmp[2511728]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      (2511730 'move' call_tmp[2511728](2511733 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
      (2511736 'move' call_tmp[2511726] call_tmp[2511728])
      const-val call_tmp[2511739]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[2511741]:locale[28] "temp"
      (2511744 call chpl_localeID_to_locale[92852] call_tmp[2511726] ret_tmp[2511741])
      (2511747 'move' call_tmp[2511739] ret_tmp[2511741])
      (2511750 'move' call_tmp[2511724] call_tmp[2511739])
      (2511754 call =[90634] ret[2511709] call_tmp[2511724])
      ref i_x[2511757]:locale[28] "temp"
      (2511759 'move' i_x[2511757](2511761 'set reference' call_tmp[2511724]))
      (2511764 call deinit[90188] i_x[2511757])
    }
    (2511767 'move' ret[2511689] ret[2511709])
    const-val origLocale[2511770]:locale[28] "dead at end of block" "const" "insert auto destroy"
    (2511772 'move' origLocale[2511770] ret[2511689])
    ref call_tmp[2511777]:locale[28] "dead after last mention" "maybe param" "temp"
    (2511779 'move' call_tmp[2511777](2511781 '.' this[1589531] home[1022002]))
    const-val call_tmp[2511784]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2511786]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2511788 'move' coerce_tmp[2511786](2511790 '.v' call_tmp[2511777] _instance[89978]))
    val coerce_tmp[2511793]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2511795 'move' coerce_tmp[2511793](2511797 'cast' object[22] coerce_tmp[2511786]))
    const-val call_tmp[2511800]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2511802 'move' call_tmp[2511800](2511804 'ptr_eq' coerce_tmp[2511793] nil[44]))
    if call_tmp[2511800]
    {
      (2511810 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2511813 'move' call_tmp[2511784](2511815 '_wide_get_locale' coerce_tmp[2511786]))
    val error[2511820]:Error[167984] "concurrently accessed" "error variable" "temp"
    (2511822 'move' error[2511820] nil[44])
    val rvfDerefTmp[2511825]:channel(true,dynamic,true)[1022014] "temp"
    (2511827 'move' rvfDerefTmp[2511825](2511829 'deref' this[1589531]))
    val isdirect[2511836]:bool[10] "temp"
    (2511838 'move' isdirect[2511836](2511841 call chpl_doDirectExecuteOn[187469] call_tmp[2511784]))
    if isdirect[2511836]
    {
      (2511846 call on_fn[1589701] rvfDerefTmp[2511825] args[2511672] ret[2511689] error[2511820])
    }
    {
      val _args_foron_fn[2511852]:_class_localson_fn[2209710] "temp"
      (2511854 'move' _args_foron_fn[2511852](2511856 'stack allocate class' _class_localson_fn[2209710]))
      (2511858 '.=' _args_foron_fn[2511852] _0_tmp[2209713] call_tmp[2511784])
      (2511862 '.=' _args_foron_fn[2511852] _1_rvfDerefTmp[2209715] rvfDerefTmp[2511825])
      ref tmp[2511866]:(string,ioNewline)[1589826] "temp"
      (2511868 'move' tmp[2511866](2511870 'set reference' args[2511672]))
      (2511872 '.=' _args_foron_fn[2511852] _2_args[2209717] tmp[2511866])
      (2511876 '.=' _args_foron_fn[2511852] _3_rvfDerefTmp[2209719] ret[2511689])
      ref tmp[2511880]:Error[167984] "temp"
      (2511882 'move' tmp[2511880](2511884 'set reference' error[2511820]))
      (2511886 '.=' _args_foron_fn[2511852] _4_error[2209721] tmp[2511880])
      val _args_vforon_fn[2511890]:c_void_ptr[149] "temp"
      (2511892 'move' _args_vforon_fn[2511890](2511894 'cast_to_void_star' _args_foron_fn[2511852]))
      val _args_sizeon_fn[2511896]:int(64)[13] "temp"
      (2511898 'move' _args_sizeon_fn[2511896](2511900 'sizeof_bundle' _class_localson_fn[2209710]))
      on(2511903 call wrapon_fn[2209774] call_tmp[2511784] _args_vforon_fn[2511890] _args_sizeon_fn[2511896] _args_foron_fn[2511852])
    }
    val errorExists[2511909]:bool[10] "temp"
    (2511911 'move' errorExists[2511909](2511913 '!=' error[2511820] nil[44]))
    if errorExists[2511909]
    {
      (2511918 '=' error[1889150] error[2511820])
      ref i_x[2511921]:locale[28] "temp"
      (2511923 'move' i_x[2511921](2511925 'set reference' origLocale[2511770]))
      (2511928 call deinit[90188] i_x[2511921])
      gotoErrorHandlingReturn _endwrite[2511945] _endwrite[2511945]
    }
    (2511933 'move' ret[2511687] 1)
    ref i_x[2511936]:locale[28] "temp"
    (2511938 'move' i_x[2511936](2511940 'set reference' origLocale[2511770]))
    (2511943 call deinit[90188] i_x[2511936])
    label _endwrite[2511945]
    val errorExists[2224504]:bool[10] "temp"
    (2224509 'move' errorExists[2224504](2224506 '!=' error[1889150] nil[44]))
    if errorExists[2224504]
    {
      (1889156 '=' error_out[1889145] error[1889150])
      gotoErrorHandlingReturn _endwriteln[1889147] _endwriteln[1889147]
    }
    (1590379 'move' ret[1589537] ret[2511687])
    label _endwriteln[1889147]
    (1589569 return ret[1589537])
  }
  function channel(true,dynamic,false)[1061136].close[1062551](const  ref arg this[1062557]:channel(true,dynamic,false)[1061136], ref arg error_out[1885295]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val err[1062569]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329204]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329206 'move' call_tmp[2329204](2329209 call qio_int_to_err[223722] 0))
    (1062571 'move' err[1062569] call_tmp[2329204])
    const-val coerce_tmp[1062758]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062762 'move' coerce_tmp[1062758](2566659 '.v' this[1062557] _channel_internal[1061129]))
    const-val call_tmp[2388250]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388252 'move' call_tmp[2388250](2388254 'cast' c_void_ptr[149] coerce_tmp[1062758]))
    const-val call_tmp[2388257]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388259 'move' call_tmp[2388257](2388261 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2388264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388266 'move' call_tmp[2388264](2388268 'ptr_eq' call_tmp[2388250] call_tmp[2388257]))
    if call_tmp[2388264]
    {
      const-val call_tmp[1062600]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1062773]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1062779 'move' coerce_tmp[1062773](1062775 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908450]:owned SystemError[1000427] "temp"
      (1062608 call fromSyserr[1017302] coerce_tmp[1062773] "cannot close invalid channel" ret_tmp[1908450])
      (1908453 'move' call_tmp[1062600] ret_tmp[1908450])
      val call_tmp[1062611]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1062782]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908384]:owned Error[966647] "temp"
      ref i_x[2348788]:owned SystemError[1000427] "temp"
      (2348792 'move' i_x[2348788](2348790 'set reference' call_tmp[1062600]))
      ref i__retArg[2348794]:owned Error[966647] "temp"
      (2348798 'move' i__retArg[2348794](2348796 'set reference' ret_tmp[1908384]))
      val _formal_tmp_x[2348801]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2348803 'move' _formal_tmp_x[2348801] i_x[2348788])
      const-val ret[2348806]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2348808]:owned SystemError[1000427] "temp"
      (2348810 'move' i_this[2348808](2348812 'set reference' _formal_tmp_x[2348801]))
      val coerce_tmp[2348814]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2348816 'move' coerce_tmp[2348814](2348818 '.v' i_this[2348808] chpl_p[1000422]))
      val call_tmp[2348821]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348823 'move' call_tmp[2348821](2348825 'cast' Error[167984] coerce_tmp[2348814]))
      ref i_this[2348833]:owned SystemError[1000427] "temp"
      (2348835 'move' i_this[2348833](2348837 'set reference' _formal_tmp_x[2348801]))
      val tmp[2348839]:SystemError[264933] "temp"
      (2348841 'move' tmp[2348839](2348843 'cast' SystemError[264933] nil[44]))
      (2348846 '.=' i_this[2348833] chpl_p[1000422] tmp[2348839])
      val coerce_tmp[2348850]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2348852 'move' coerce_tmp[2348850](2348854 'cast' object[22] call_tmp[2348821]))
      const-val call_tmp[2348857]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2348859 'move' call_tmp[2348857](2348861 'ptr_eq' coerce_tmp[2348850] nil[44]))
      if call_tmp[2348857]
      {
        (2348867 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2348870]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2348872]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2348875 call init[968283] initTemp[2348872] call_tmp[2348821])
      (2348878 'move' call_tmp[2348870] initTemp[2348872])
      (2348881 'move' ret[2348806] call_tmp[2348870])
      (2348885 call chpl__autoDestroy[1656343] _formal_tmp_x[2348801])
      (2348889 '=' i__retArg[2348794] ret[2348806])
      (1908387 'move' coerce_tmp[1062782] ret_tmp[1908384])
      const-val _formal_tmp_in_err[1062961]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1062965 'move' _formal_tmp_in_err[1062961] coerce_tmp[1062782])
      (1062613 'move' call_tmp[1062611](1062616 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1062961]))
      (1885308 '=' error_out[1885295] call_tmp[1062611])
      gotoErrorHandlingReturn _endclose[1885297] _endclose[1885297]
    }
    ref call_tmp[2387800]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387802 'move' call_tmp[2387800](2387804 '.' this[1062557] home[1061124]))
    const-val call_tmp[1062631]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283455]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283457 'move' coerce_tmp[2283455](2283459 '.v' call_tmp[2387800] _instance[89978]))
    val coerce_tmp[2283462]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283464 'move' coerce_tmp[2283462](2283466 'cast' object[22] coerce_tmp[2283455]))
    const-val call_tmp[2283469]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283471 'move' call_tmp[2283469](2283473 'ptr_eq' coerce_tmp[2283462] nil[44]))
    if call_tmp[2283469]
    {
      (2283479 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1062633 'move' call_tmp[1062631](1062635 '_wide_get_locale' coerce_tmp[2283455]))
    val rvfDerefTmp[2195997]:channel(true,dynamic,false)[1061136] "temp"
    (2196001 'move' rvfDerefTmp[2195997](2195999 'deref' this[1062557]))
    val isdirect[2201857]:bool[10] "temp"
    (2201862 'move' isdirect[2201857](2201859 call chpl_doDirectExecuteOn[187469] call_tmp[1062631]))
    if isdirect[2201857]
    {
      (2201866 call on_fn[1062644] rvfDerefTmp[2195997] err[1062569])
    }
    {
      val _args_foron_fn[2201884]:_class_localson_fn[2201874] "temp"
      (2201888 'move' _args_foron_fn[2201884](2201886 'stack allocate class' _class_localson_fn[2201874]))
      (2201890 '.=' _args_foron_fn[2201884] _0_tmp[2201877] call_tmp[1062631])
      (2201894 '.=' _args_foron_fn[2201884] _1_rvfDerefTmp[2201879] rvfDerefTmp[2195997])
      ref tmp[2201898]:syserr[223672] "temp"
      (2201902 'move' tmp[2201898](2201900 'set reference' err[1062569]))
      (2201904 '.=' _args_foron_fn[2201884] _2_err[2201881] tmp[2201898])
      val _args_vforon_fn[2201908]:c_void_ptr[149] "temp"
      (2201912 'move' _args_vforon_fn[2201908](2201910 'cast_to_void_star' _args_foron_fn[2201884]))
      val _args_sizeon_fn[2201914]:int(64)[13] "temp"
      (2201918 'move' _args_sizeon_fn[2201914](2201916 'sizeof_bundle' _class_localson_fn[2201874]))
      on(2201958 call wrapon_fn[2201920] call_tmp[1062631] _args_vforon_fn[2201908] _args_sizeon_fn[2201914] _args_foron_fn[2201884])
    }
    const-val call_tmp[2328663]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328665 'move' call_tmp[2328663](2328668 call qio_err_iserr[223734] err[1062569]))
    const-val call_tmp[2328670]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328672 'move' call_tmp[2328670](2328674 '!=' call_tmp[2328663] 0))
    if call_tmp[2328670]
    {
      val error[1885312]:Error[167984] "error variable" "temp"
      (1885321 'move' error[1885312] nil[44])
      (1062698 call _ch_ioerror[1063054] this[1062557] err[1062569] "in channel.close" error[1885312])
      val errorExists[2222656]:bool[10] "temp"
      (2222661 'move' errorExists[2222656](2222658 '!=' error[1885312] nil[44]))
      if errorExists[2222656]
      {
        gotoErrorHandling handler[1885313] handler[1885313]
      }
      label handler[1885313]
      val errorExists[2222664]:bool[10] "temp"
      (2222669 'move' errorExists[2222664](2222666 '!=' error[1885312] nil[44]))
      if errorExists[2222664]
      {
        (1885328 '=' error_out[1885295] error[1885312])
        gotoErrorHandlingReturn _endclose[1885297] _endclose[1885297]
      }
    }
    label _endclose[1885297]
    (1062705 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].close[1082283](const  ref arg this[1082289]:channel(false,dynamic,false)[1080871], ref arg error_out[1886091]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "resolved" "no return value for void"
  {
    val err[1082301]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2329299]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2329301 'move' call_tmp[2329299](2329304 call qio_int_to_err[223722] 0))
    (1082303 'move' err[1082301] call_tmp[2329299])
    const-val coerce_tmp[1082448]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082452 'move' coerce_tmp[1082448](2566822 '.v' this[1082289] _channel_internal[1080864]))
    const-val call_tmp[2388298]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388300 'move' call_tmp[2388298](2388302 'cast' c_void_ptr[149] coerce_tmp[1082448]))
    const-val call_tmp[2388305]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388307 'move' call_tmp[2388305](2388309 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2388312]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2388314 'move' call_tmp[2388312](2388316 'ptr_eq' call_tmp[2388298] call_tmp[2388305]))
    if call_tmp[2388312]
    {
      const-val call_tmp[1082332]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[1082457]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1082463 'move' coerce_tmp[1082457](1082459 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[1908462]:owned SystemError[1000427] "temp"
      (1082340 call fromSyserr[1017302] coerce_tmp[1082457] "cannot close invalid channel" ret_tmp[1908462])
      (1908465 'move' call_tmp[1082332] ret_tmp[1908462])
      val call_tmp[1082343]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1082466]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1908402]:owned Error[966647] "temp"
      ref i_x[2349106]:owned SystemError[1000427] "temp"
      (2349110 'move' i_x[2349106](2349108 'set reference' call_tmp[1082332]))
      ref i__retArg[2349112]:owned Error[966647] "temp"
      (2349116 'move' i__retArg[2349112](2349114 'set reference' ret_tmp[1908402]))
      val _formal_tmp_x[2349119]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2349121 'move' _formal_tmp_x[2349119] i_x[2349106])
      const-val ret[2349124]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2349126]:owned SystemError[1000427] "temp"
      (2349128 'move' i_this[2349126](2349130 'set reference' _formal_tmp_x[2349119]))
      val coerce_tmp[2349132]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2349134 'move' coerce_tmp[2349132](2349136 '.v' i_this[2349126] chpl_p[1000422]))
      val call_tmp[2349139]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2349141 'move' call_tmp[2349139](2349143 'cast' Error[167984] coerce_tmp[2349132]))
      ref i_this[2349151]:owned SystemError[1000427] "temp"
      (2349153 'move' i_this[2349151](2349155 'set reference' _formal_tmp_x[2349119]))
      val tmp[2349157]:SystemError[264933] "temp"
      (2349159 'move' tmp[2349157](2349161 'cast' SystemError[264933] nil[44]))
      (2349164 '.=' i_this[2349151] chpl_p[1000422] tmp[2349157])
      val coerce_tmp[2349168]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2349170 'move' coerce_tmp[2349168](2349172 'cast' object[22] call_tmp[2349139]))
      const-val call_tmp[2349175]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2349177 'move' call_tmp[2349175](2349179 'ptr_eq' coerce_tmp[2349168] nil[44]))
      if call_tmp[2349175]
      {
        (2349185 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2349188]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2349190]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2349193 call init[968283] initTemp[2349190] call_tmp[2349139])
      (2349196 'move' call_tmp[2349188] initTemp[2349190])
      (2349199 'move' ret[2349124] call_tmp[2349188])
      (2349203 call chpl__autoDestroy[1656343] _formal_tmp_x[2349119])
      (2349207 '=' i__retArg[2349112] ret[2349124])
      (1908405 'move' coerce_tmp[1082466] ret_tmp[1908402])
      const-val _formal_tmp_in_err[1082645]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1082649 'move' _formal_tmp_in_err[1082645] coerce_tmp[1082466])
      (1082345 'move' call_tmp[1082343](1082348 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1082645]))
      (1886104 '=' error_out[1886091] call_tmp[1082343])
      gotoErrorHandlingReturn _endclose[1886093] _endclose[1886093]
    }
    ref call_tmp[2394359]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394361 'move' call_tmp[2394359](2394363 '.' this[1082289] home[1080859]))
    const-val call_tmp[1082363]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2283725]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283727 'move' coerce_tmp[2283725](2283729 '.v' call_tmp[2394359] _instance[89978]))
    val coerce_tmp[2283732]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2283734 'move' coerce_tmp[2283732](2283736 'cast' object[22] coerce_tmp[2283725]))
    const-val call_tmp[2283739]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2283741 'move' call_tmp[2283739](2283743 'ptr_eq' coerce_tmp[2283732] nil[44]))
    if call_tmp[2283739]
    {
      (2283749 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (1082365 'move' call_tmp[1082363](1082367 '_wide_get_locale' coerce_tmp[2283725]))
    val rvfDerefTmp[2196175]:channel(false,dynamic,false)[1080871] "temp"
    (2196179 'move' rvfDerefTmp[2196175](2196177 'deref' this[1082289]))
    val isdirect[2203078]:bool[10] "temp"
    (2203083 'move' isdirect[2203078](2203080 call chpl_doDirectExecuteOn[187469] call_tmp[1082363]))
    if isdirect[2203078]
    {
      (2203087 call on_fn[1082376] rvfDerefTmp[2196175] err[1082301])
    }
    {
      val _args_foron_fn[2203105]:_class_localson_fn[2203095] "temp"
      (2203109 'move' _args_foron_fn[2203105](2203107 'stack allocate class' _class_localson_fn[2203095]))
      (2203111 '.=' _args_foron_fn[2203105] _0_tmp[2203098] call_tmp[1082363])
      (2203115 '.=' _args_foron_fn[2203105] _1_rvfDerefTmp[2203100] rvfDerefTmp[2196175])
      ref tmp[2203119]:syserr[223672] "temp"
      (2203123 'move' tmp[2203119](2203121 'set reference' err[1082301]))
      (2203125 '.=' _args_foron_fn[2203105] _2_err[2203102] tmp[2203119])
      val _args_vforon_fn[2203129]:c_void_ptr[149] "temp"
      (2203133 'move' _args_vforon_fn[2203129](2203131 'cast_to_void_star' _args_foron_fn[2203105]))
      val _args_sizeon_fn[2203135]:int(64)[13] "temp"
      (2203139 'move' _args_sizeon_fn[2203135](2203137 'sizeof_bundle' _class_localson_fn[2203095]))
      on(2203179 call wrapon_fn[2203141] call_tmp[1082363] _args_vforon_fn[2203129] _args_sizeon_fn[2203135] _args_foron_fn[2203105])
    }
    const-val call_tmp[2328731]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328733 'move' call_tmp[2328731](2328736 call qio_err_iserr[223734] err[1082301]))
    const-val call_tmp[2328738]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328740 'move' call_tmp[2328738](2328742 '!=' call_tmp[2328731] 0))
    if call_tmp[2328738]
    {
      val error[1886108]:Error[167984] "error variable" "temp"
      (1886117 'move' error[1886108] nil[44])
      (1082430 call _ch_ioerror[1082738] this[1082289] err[1082301] "in channel.close" error[1886108])
      val errorExists[2223016]:bool[10] "temp"
      (2223021 'move' errorExists[2223016](2223018 '!=' error[1886108] nil[44]))
      if errorExists[2223016]
      {
        gotoErrorHandling handler[1886109] handler[1886109]
      }
      label handler[1886109]
      val errorExists[2223024]:bool[10] "temp"
      (2223029 'move' errorExists[2223024](2223026 '!=' error[1886108] nil[44]))
      if errorExists[2223024]
      {
        (1886124 '=' error_out[1886091] error[1886108])
        gotoErrorHandlingReturn _endclose[1886093] _endclose[1886093]
      }
    }
    label _endclose[1886093]
    (1082437 return _void[55])
  }
  function channel(false,dynamic,false)[1080871].readBytes[1083028](const  ref arg this[1083034]:channel(false,dynamic,false)[1080871], const in arg x[1083036]:c_ptr(uint(8))[937612], const in arg len[1083040]:int(64)[13], ref arg error_out[1886217]:Error[167984]) : void[4] throws "instantiated generic" "invisible fn" "method" "no doc" "resolved" "no return value for void"
  {
    const-val call_tmp[1083048]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2285999]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val call_tmp[2286001]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    (2286003 'move' call_tmp[2286001](2286006 call chpl_rt_buildLocaleID[209430] chpl_nodeID[208207] c_sublocid_any[89878]))
    (2286009 'move' call_tmp[2285999] call_tmp[2286001])
    const-val call_tmp[2286012]:locale[28] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[2286014]:locale[28] "temp"
    (2286017 call chpl_localeID_to_locale[92852] call_tmp[2285999] ret_tmp[2286014])
    (2286020 'move' call_tmp[2286012] ret_tmp[2286014])
    (1906331 'move' call_tmp[1083048] call_tmp[2286012])
    ref call_tmp[2394379]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394381 'move' call_tmp[2394379](2394383 '.' this[1083034] home[1080859]))
    const-val call_tmp[1083062]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1083064 'move' call_tmp[1083062](1083067 call !=[783099] call_tmp[1083048] call_tmp[2394379]))
    if call_tmp[1083062]
    {
      const-val call_tmp[1083079]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
      val new_temp[1083236]:IllegalArgumentError[168246] "dead after last mention" "temp"
      (1083238 'move' new_temp[1083236](1083223 call _new[1064296] "bad remote channel.readBytes"))
      const-val initTemp[1083245]:owned IllegalArgumentError[1064747] "dead after last mention" "delay instantiation" "temp"
      (1083248 call init[1064398] initTemp[1083245] new_temp[1083236])
      (1083081 'move' call_tmp[1083079] initTemp[1083245])
      val call_tmp[1083088]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1083262]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[1909198]:owned Error[966647] "temp"
      ref i_x[2376744]:owned IllegalArgumentError[1064747] "temp"
      (2376748 'move' i_x[2376744](2376746 'set reference' call_tmp[1083079]))
      ref i__retArg[2376750]:owned Error[966647] "temp"
      (2376754 'move' i__retArg[2376750](2376752 'set reference' ret_tmp[1909198]))
      val _formal_tmp_x[2376757]:owned IllegalArgumentError[1064747] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2376759 'move' _formal_tmp_x[2376757] i_x[2376744])
      const-val ret[2376762]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2376764]:owned IllegalArgumentError[1064747] "temp"
      (2376766 'move' i_this[2376764](2376768 'set reference' _formal_tmp_x[2376757]))
      val coerce_tmp[2376770]:IllegalArgumentError[168246] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2376772 'move' coerce_tmp[2376770](2376774 '.v' i_this[2376764] chpl_p[1064742]))
      val call_tmp[2376777]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2376779 'move' call_tmp[2376777](2376781 'cast' Error[167984] coerce_tmp[2376770]))
      ref i_this[2376789]:owned IllegalArgumentError[1064747] "temp"
      (2376791 'move' i_this[2376789](2376793 'set reference' _formal_tmp_x[2376757]))
      val tmp[2376795]:IllegalArgumentError[168246] "temp"
      (2376797 'move' tmp[2376795](2376799 'cast' IllegalArgumentError[168246] nil[44]))
      (2376802 '.=' i_this[2376789] chpl_p[1064742] tmp[2376795])
      val coerce_tmp[2376806]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2376808 'move' coerce_tmp[2376806](2376810 'cast' object[22] call_tmp[2376777]))
      const-val call_tmp[2376813]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2376815 'move' call_tmp[2376813](2376817 'ptr_eq' coerce_tmp[2376806] nil[44]))
      if call_tmp[2376813]
      {
        (2376823 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2376826]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2376828]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2376831 call init[968283] initTemp[2376828] call_tmp[2376777])
      (2376834 'move' call_tmp[2376826] initTemp[2376828])
      (2376837 'move' ret[2376762] call_tmp[2376826])
      (2376841 call chpl__autoDestroy[1678826] _formal_tmp_x[2376757])
      (2376845 '=' i__retArg[2376750] ret[2376762])
      (1909201 'move' coerce_tmp[1083262] ret_tmp[1909198])
      const-val _formal_tmp_in_err[1083441]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (1083445 'move' _formal_tmp_in_err[1083441] coerce_tmp[1083262])
      (1083090 'move' call_tmp[1083088](1083093 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[1083441]))
      (1886230 '=' error_out[1886217] call_tmp[1083088])
      ref i_x[2388665]:locale[28] "temp"
      (2388669 'move' i_x[2388665](2388667 'set reference' call_tmp[1083048]))
      (2388673 call deinit[90188] i_x[2388665])
      gotoErrorHandlingReturn _endreadBytes[1886219] _endreadBytes[1886219]
    }
    ref i_x[2388677]:locale[28] "temp"
    (2388681 'move' i_x[2388677](2388679 'set reference' call_tmp[1083048]))
    (2388685 call deinit[90188] i_x[2388677])
    const-val call_tmp[1083106]:syserr[223672] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1083498]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083504 'move' coerce_tmp[1083498](1083500 'cast' int(32)[95] 0))
    const-val coerce_tmp[1083506]:qio_channel_ptr_t[231553] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1083510 'move' coerce_tmp[1083506](2566862 '.v' this[1083034] _channel_internal[1080864]))
    (1083108 'move' call_tmp[1083106](1083111 call qio_channel_read_amt[1083472] coerce_tmp[1083498] coerce_tmp[1083506] x[1083036] len[1083040]))
    const-val call_tmp[2328748]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328750 'move' call_tmp[2328748](2328753 call qio_err_iserr[223734] call_tmp[1083106]))
    const-val call_tmp[2328755]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328757 'move' call_tmp[2328755](2328759 '!=' call_tmp[2328748] 0))
    if call_tmp[2328755]
    {
      val error[1886234]:Error[167984] "error variable" "temp"
      (1886243 'move' error[1886234] nil[44])
      (1083136 call _ch_ioerror[1082738] this[1083034] call_tmp[1083106] "in channel.readBytes" error[1886234])
      val errorExists[2223072]:bool[10] "temp"
      (2223077 'move' errorExists[2223072](2223074 '!=' error[1886234] nil[44]))
      if errorExists[2223072]
      {
        gotoErrorHandling handler[1886235] handler[1886235]
      }
      label handler[1886235]
      val errorExists[2223080]:bool[10] "temp"
      (2223085 'move' errorExists[2223080](2223082 '!=' error[1886234] nil[44]))
      if errorExists[2223080]
      {
        (1886250 '=' error_out[1886217] error[1886234])
        gotoErrorHandlingReturn _endreadBytes[1886219] _endreadBytes[1886219]
      }
    }
    label _endreadBytes[1886219]
    (1083143 return _void[55])
  }
  const-val stdin[250296]:channel(false,dynamic,true)[985816] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stdout[250323]:channel(true,dynamic,true)[1022014] "dead at end of block" "const" "insert auto destroy" "split inited"
  const-val stderr[250352]:channel(true,dynamic,true)[1022014] "dead at end of block" "const" "insert auto destroy" "split inited"
  const FTYPE_NONE[250582]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const FTYPE_LUSTRE[250587]:int(32)[95] "dead at end of block" "const" "extern" "insert auto destroy" "private"
  const-val call_tmp[722053]:6*string[985240] "dead at end of block" "maybe param" "temp"
  const-val call_tmp[724184]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724191]:channel(false,dynamic,true)[985816] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1017086]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1017150]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1017198]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1017776]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724196]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724201]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724208]:channel(true,dynamic,true)[1022014] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1022661]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1022725]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1022776]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1022813]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  const-val call_tmp[724213]:_file[155] "dead at end of block" "expr temp" "maybe param" "temp"
  const-val call_tmp[724218]:file[235668] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
  const-val call_tmp[724225]:channel(true,dynamic,true)[1022014] "dead at end of block" "maybe param" "temp"
  const-val default_arg_start[1024097]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_end[1024108]:int(64)[13] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_hints[1024119]:int(32)[95] "dead at end of block" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
  const-val default_arg_style[1024130]:iostyle[231932] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
  function on_fn[935786](ref arg this[1882184]:file[235668]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[985871]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (985875 'move' coerce_tmp[985871](2565363 '.v' this[1882184] _file_internal[235656]))
    (235993 call qio_file_release[232726] coerce_tmp[985871])
    (2565369 '.=' this[1882184] _file_internal[235656] QIO_FILE_PTR_NULL[231530])
    (935793 return _void[55])
  }
  function on_fn[935795](const in arg this[1882186]:file[235668], ref arg ret[1882188]:iostyle[231932], ref arg error_out[1884482]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1884486]:Error[167984] "error variable" "temp"
    (1884495 'move' error[1884486] nil[44])
    ref rvfRerefTmp[2195686]:file[235668] "temp"
    (2195690 'move' rvfRerefTmp[2195686](2195687 'set reference' this[1882186]))
    (236071 call checkAssumingLocal[235856] rvfRerefTmp[2195686] error[1884486])
    val errorExists[2222264]:bool[10] "temp"
    (2222269 'move' errorExists[2222264](2222266 '!=' error[1884486] nil[44]))
    if errorExists[2222264]
    {
      gotoErrorHandling handler[1884487] handler[1884487]
    }
    label handler[1884487]
    val errorExists[2222272]:bool[10] "temp"
    (2222277 'move' errorExists[2222272](2222274 '!=' error[1884486] nil[44]))
    if errorExists[2222272]
    {
      (1884502 '=' error_out[1884482] error[1884486])
      gotoErrorHandlingReturn _endon_fn[1884484] _endon_fn[1884484]
    }
    val local_style[236077]:iostyle[231932] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1017760]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1017764 'move' coerce_tmp[1017760](2565377 '.v' this[1882186] _file_internal[235656]))
    (236085 call qio_file_get_style[232909] coerce_tmp[1017760] local_style[236077])
    ref i__arg2[2338795]:iostyle[231932] "temp"
    (2338799 'move' i__arg2[2338795](2338797 'set reference' local_style[236077]))
    (2338802 '=' ret[1882188] i__arg2[2338795])
    label _endon_fn[1884484]
    (935802 return _void[55])
  }
  function on_fn[935804](const in arg this[1882190]:file[235668], ref arg err[1882192]:syserr[223672]) : void[4] "on" "resolved"
  {
    const-val call_tmp[715873]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1061022]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1061026 'move' coerce_tmp[1061022](2565385 '.v' this[1882190] _file_internal[235656]))
    (715876 'move' call_tmp[715873](236153 call qio_file_close[232836] coerce_tmp[1061022]))
    (2328977 '=' err[1882192] call_tmp[715873])
    (935811 return _void[55])
  }
  function on_fn[935822](const in arg this[1882194]:file[235668], ref arg err[1882196]:syserr[223672], ref arg ret[1882198]:string[26], ref arg error_out[1884514]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1884518]:Error[167984] "error variable" "temp"
    (1884527 'move' error[1884518] nil[44])
    ref rvfRerefTmp[2195728]:file[235668] "temp"
    (2195732 'move' rvfRerefTmp[2195728](2195729 'set reference' this[1882194]))
    (236329 call checkAssumingLocal[235856] rvfRerefTmp[2195728] error[1884518])
    val errorExists[2222280]:bool[10] "temp"
    (2222285 'move' errorExists[2222280](2222282 '!=' error[1884518] nil[44]))
    if errorExists[2222280]
    {
      gotoErrorHandling handler[1884519] handler[1884519]
    }
    label handler[1884519]
    val errorExists[2222288]:bool[10] "temp"
    (2222293 'move' errorExists[2222288](2222290 '!=' error[1884518] nil[44]))
    if errorExists[2222288]
    {
      (1884534 '=' error_out[1884514] error[1884518])
      gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
    }
    val tmp[236335]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021656 'move' tmp[236335](1021654 'cast' c_string[19] nil[44]))
    val tmp2[236340]:c_string[19] "dead at end of block" "insert auto destroy"
    (1021661 'move' tmp2[236340](1021659 'cast' c_string[19] nil[44]))
    const-val call_tmp[715959]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019308]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019312 'move' coerce_tmp[1019308](2565394 '.v' this[1882194] _file_internal[235656]))
    (715962 'move' call_tmp[715959](236349 call qio_file_path[233767] coerce_tmp[1019308] tmp[236335]))
    (2328983 '=' err[1882196] call_tmp[715959])
    const-val tmp[1882984]:syserr[223672] "temp"
    (1882987 'move' tmp[1882984](1882985 'deref' err[1882196]))
    const-val call_tmp[2328374]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328376 'move' call_tmp[2328374](2328379 call qio_err_iserr[223734] tmp[1882984]))
    const-val call_tmp[2328381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328383 'move' call_tmp[2328381](2328385 '==' call_tmp[2328374] 0))
    if call_tmp[2328381]
    {
      const-val call_tmp[715981]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[1019321]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019325 'move' coerce_tmp[1019321](2565401 '.v' this[1882194] _file_internal[235656]))
      (715984 'move' call_tmp[715981](236362 call qio_shortest_path[233783] coerce_tmp[1019321] tmp2[236340] tmp[236335]))
      (2328989 '=' err[1882196] call_tmp[715981])
    }
    ref i_cs[2235684]:c_string[19] "temp"
    (2235688 'move' i_cs[2235684](2235686 'set reference' tmp[236335]))
    const-val call_tmp[2235691]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235693 'move' call_tmp[2235691](2235695 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2235698]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235700 'move' call_tmp[2235698](2235702 'cast' c_string[19] call_tmp[2235691]))
    const-val coerce_tmp[2235705]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2235707 'move' coerce_tmp[2235705] tmp[236335])
    const-val call_tmp[2235711]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235713 'move' call_tmp[2235711](2235715 'string_compare' coerce_tmp[2235705] call_tmp[2235698]))
    const-val call_tmp[2235718]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235720 'move' call_tmp[2235718](2235722 '!=' call_tmp[2235711] 0))
    if call_tmp[2235718]
    {
      (2235728 call chpl_rt_free_c_string[22717] i_cs[2235684])
    }
    const-val tmp[1882990]:syserr[223672] "temp"
    (1882993 'move' tmp[1882990](1882991 'deref' err[1882196]))
    const-val call_tmp[2328391]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328393 'move' call_tmp[2328391](2328396 call qio_err_iserr[223734] tmp[1882990]))
    const-val call_tmp[2328398]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328400 'move' call_tmp[2328398](2328402 '==' call_tmp[2328391] 0))
    if call_tmp[2328398]
    {
      const-val call_tmp[715996]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1884547]:Error[167984] "error variable" "temp"
      (1884549 'move' error[1884547] nil[44])
      const-val call_tmp[2325301]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2325303 'move' call_tmp[2325301](2325305 'string_length_bytes' tmp2[236340]))
      val errorExists[2222296]:bool[10] "temp"
      (2222301 'move' errorExists[2222296](2222298 '!=' error[1884547] nil[44]))
      if errorExists[2222296]
      {
        (1884553 '=' error_out[1884514] error[1884547])
        gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
      }
      val error[1884562]:Error[167984] "error variable" "temp"
      (1884564 'move' error[1884562] nil[44])
      const-val ret[2257933]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2257935]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
      (2257937 'move' call_tmp[2257935](2257939 'cast' c_ptr(uint(8))[937612] tmp2[236340]))
      val error[2257944]:Error[167984] "error variable" "temp"
      (2257946 'move' error[2257944] nil[44])
      const-val ret[2257949]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2257951]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2257953]:Error[167984] "error variable" "temp"
      (2257955 'move' error[2257953] nil[44])
      const-val ret_tmp[2257958]:string[26] "temp"
      (2257961 call decodeByteBuffer[173938] call_tmp[2257935] call_tmp[2325301] escape[173698] error[2257953] ret_tmp[2257958])
      (2257967 'move' call_tmp[2257951] ret_tmp[2257958])
      val errorExists[2257970]:bool[10] "temp"
      (2257972 'move' errorExists[2257970](2257974 '!=' error[2257953] nil[44]))
      if errorExists[2257970]
      {
        (2257979 '=' error[2257944] error[2257953])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2257988] _endcreateStringWithNewBuffer[2257988]
      }
      (2257985 'move' ret[2257949] call_tmp[2257951])
      label _endcreateStringWithNewBuffer[2257988]
      val errorExists[2257993]:bool[10] "temp"
      (2257995 'move' errorExists[2257993](2257997 '!=' error[2257944] nil[44]))
      if errorExists[2257993]
      {
        (2258002 '=' error[1884562] error[2257944])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258011] _endcreateStringWithNewBuffer[2258011]
      }
      (2258008 'move' ret[2257933] ret[2257949])
      label _endcreateStringWithNewBuffer[2258011]
      (1904811 'move' call_tmp[715996] ret[2257933])
      val errorExists[2222304]:bool[10] "temp"
      (2222309 'move' errorExists[2222304](2222306 '!=' error[1884562] nil[44]))
      if errorExists[2222304]
      {
        (1884568 '=' error_out[1884514] error[1884562])
        gotoErrorHandlingReturn _endon_fn[1884516] _endon_fn[1884516]
      }
      (236389 call =[38272] ret[1882198] call_tmp[715996])
      ref i_x[2246777]:string[26] "temp"
      (2246781 'move' i_x[2246777](2246779 'set reference' call_tmp[715996]))
      (2246785 call deinit[30834] i_x[2246777])
    }
    ref i_cs[2235733]:c_string[19] "temp"
    (2235737 'move' i_cs[2235733](2235735 'set reference' tmp2[236340]))
    const-val call_tmp[2235740]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235742 'move' call_tmp[2235740](2235744 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2235747]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235749 'move' call_tmp[2235747](2235751 'cast' c_string[19] call_tmp[2235740]))
    const-val coerce_tmp[2235754]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2235756 'move' coerce_tmp[2235754] tmp2[236340])
    const-val call_tmp[2235760]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235762 'move' call_tmp[2235760](2235764 'string_compare' coerce_tmp[2235754] call_tmp[2235747]))
    const-val call_tmp[2235767]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2235769 'move' call_tmp[2235767](2235771 '!=' call_tmp[2235760] 0))
    if call_tmp[2235767]
    {
      (2235777 call chpl_rt_free_c_string[22717] i_cs[2235733])
    }
    label _endon_fn[1884516]
    (935829 return _void[55])
  }
  function on_fn[1016884](const in arg this[1882206]:file[235668], ref arg ret[1882208]:channel(false,dynamic,true)[985816], const in arg hints[1882210]:int(32)[95], ref arg err[1882212]:syserr[223672], const in arg start[1882214]:int(64)[13], const in arg end[1882216]:int(64)[13], const in arg style[1882218]:iostyle[231932], ref arg error_out[1884685]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1884689]:Error[167984] "error variable" "temp"
    (1884698 'move' error[1884689] nil[44])
    ref rvfRerefTmp[2195749]:file[235668] "temp"
    (2195753 'move' rvfRerefTmp[2195749](2195750 'set reference' this[1882206]))
    (1016895 call checkAssumingLocal[235856] rvfRerefTmp[2195749] error[1884689])
    val errorExists[2222360]:bool[10] "temp"
    (2222365 'move' errorExists[2222360](2222362 '!=' error[1884689] nil[44]))
    if errorExists[2222360]
    {
      gotoErrorHandling handler[1884690] handler[1884690]
    }
    label handler[1884690]
    val errorExists[2222368]:bool[10] "temp"
    (2222373 'move' errorExists[2222368](2222370 '!=' error[1884689] nil[44]))
    if errorExists[2222368]
    {
      (1884705 '=' error_out[1884685] error[1884689])
      gotoErrorHandlingReturn _endon_fn[1884687] _endon_fn[1884687]
    }
    const-val call_tmp[1016897]:channel(false,dynamic,true)[985816] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1017820]:channel(false,dynamic,true)[985816] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1018619]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2195742]:file[235668] "temp"
    (2195746 'move' rvfRerefTmp[2195742](2195743 'set reference' this[1882206]))
    (1017823 call init[1017836] initTemp[1017820] rvfRerefTmp[2195742] _formal_tmp_out_error[1018619] hints[1882210] start[1882214] end[1882216] style[1882218])
    (2328995 '=' err[1882212] _formal_tmp_out_error[1018619])
    (1016899 'move' call_tmp[1016897] initTemp[1017820])
    (1016913 call =[1018628] ret[1882208] call_tmp[1016897])
    ref i_x[2514446]:channel(false,dynamic,true)[985816] "temp"
    (2514450 'move' i_x[2514446](2514448 'set reference' call_tmp[1016897]))
    (2514454 call deinit[1611203] i_x[2514446])
    label _endon_fn[1884687]
    (1016919 return _void[55])
  }
  function on_fn[1017914](const in arg start[1882220]:int(64)[13], const in arg f[1882222]:file[235668], ref arg _formal_tmp_error[1882224]:syserr[223672], ref arg this[1882226]:channel(false,dynamic,true)[985816], const in arg hints[1882228]:int(32)[95], const in arg local_style[1882230]:iostyle[231932], const in arg end[1882232]:int(64)[13]) : void[4] "on" "resolved"
  {
    ref call_tmp[2349542]:locale[28] "dead after last mention" "maybe param" "temp"
    (2349544 'move' call_tmp[2349542](2349546 '.' this[1882226] home[985804]))
    ref call_tmp[2338990]:locale[28] "dead after last mention" "maybe param" "temp"
    (2338992 'move' call_tmp[2338990](2338994 '.' f[1882222] home[235650]))
    (1017937 call =[90634] call_tmp[2349542] call_tmp[2338990])
    ref call_tmp[2349636]:qio_channel_ptr_t[231553] "dead after last mention" "maybe param" "temp"
    (2349638 'move' call_tmp[2349636](2349640 '.' this[1882226] _channel_internal[985809]))
    const-val call_tmp[1018022]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1018588]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018592 'move' coerce_tmp[1018588](2565846 '.v' f[1882222] _file_internal[235656]))
    const-val coerce_tmp[1018594]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018600 'move' coerce_tmp[1018594](1018596 'cast' int(32)[95] 1))
    const-val coerce_tmp[1018602]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1018608 'move' coerce_tmp[1018602](1018604 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2195791]:iostyle[231932] "temp"
    (2195795 'move' rvfRerefTmp[2195791](2195792 'set reference' local_style[1882230]))
    (1018024 'move' call_tmp[1018022](1018027 call qio_channel_create[232966] call_tmp[2349636] coerce_tmp[1018588] hints[1882228] coerce_tmp[1018594] coerce_tmp[1018602] start[1882220] end[1882232] rvfRerefTmp[2195791]))
    (2329001 '=' _formal_tmp_error[1882224] call_tmp[1018022])
    (1018040 return _void[55])
  }
  function on_fn[1018854](const in arg rhs[1882234]:channel(false,dynamic,true)[985816]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019244]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019248 'move' coerce_tmp[1019244](2565885 '.v' rhs[1882234] _channel_internal[985809]))
    (1018869 call qio_channel_retain[233039] coerce_tmp[1019244])
    (1018871 return _void[55])
  }
  function on_fn[1018898](const  ref arg lhs[1882236]:channel(false,dynamic,true)[985816]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1019263]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019267 'move' coerce_tmp[1019263](2565892 '.v' lhs[1882236] _channel_internal[985809]))
    (1018913 call qio_channel_release[233049] coerce_tmp[1019263])
    (1018915 return _void[55])
  }
  function on_fn[1022459](ref arg ret[1882242]:channel(true,dynamic,true)[1022014], const in arg hints[1882244]:int(32)[95], const in arg start[1882246]:int(64)[13], ref arg err[1882248]:syserr[223672], const in arg end[1882250]:int(64)[13], const in arg style[1882252]:iostyle[231932], const in arg this[1882254]:file[235668], ref arg error_out[1884801]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1884805]:Error[167984] "error variable" "temp"
    (1884814 'move' error[1884805] nil[44])
    ref rvfRerefTmp[2195834]:file[235668] "temp"
    (2195838 'move' rvfRerefTmp[2195834](2195835 'set reference' this[1882254]))
    (1022470 call checkAssumingLocal[235856] rvfRerefTmp[2195834] error[1884805])
    val errorExists[2222408]:bool[10] "temp"
    (2222413 'move' errorExists[2222408](2222410 '!=' error[1884805] nil[44]))
    if errorExists[2222408]
    {
      gotoErrorHandling handler[1884806] handler[1884806]
    }
    label handler[1884806]
    val errorExists[2222416]:bool[10] "temp"
    (2222421 'move' errorExists[2222416](2222418 '!=' error[1884805] nil[44]))
    if errorExists[2222416]
    {
      (1884821 '=' error_out[1884801] error[1884805])
      gotoErrorHandlingReturn _endon_fn[1884803] _endon_fn[1884803]
    }
    const-val call_tmp[1022472]:channel(true,dynamic,true)[1022014] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1022856]:channel(true,dynamic,true)[1022014] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1023327]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2195827]:file[235668] "temp"
    (2195831 'move' rvfRerefTmp[2195827](2195828 'set reference' this[1882254]))
    (1022859 call init[1022872] initTemp[1022856] rvfRerefTmp[2195827] _formal_tmp_out_error[1023327] hints[1882244] start[1882246] end[1882250] style[1882252])
    (2329007 '=' err[1882248] _formal_tmp_out_error[1023327])
    (1022474 'move' call_tmp[1022472] initTemp[1022856])
    (1022488 call =[1023336] ret[1882242] call_tmp[1022472])
    ref i_x[2516889]:channel(true,dynamic,true)[1022014] "temp"
    (2516893 'move' i_x[2516889](2516891 'set reference' call_tmp[1022472]))
    (2516897 call deinit[1674182] i_x[2516889])
    label _endon_fn[1884803]
    (1022494 return _void[55])
  }
  function on_fn[1022950](ref arg this[1882256]:channel(true,dynamic,true)[1022014], const in arg hints[1882258]:int(32)[95], const in arg local_style[1882260]:iostyle[231932], const in arg start[1882262]:int(64)[13], const in arg f[1882264]:file[235668], ref arg _formal_tmp_error[1882266]:syserr[223672], const in arg end[1882268]:int(64)[13]) : void[4] "on" "resolved"
  {
    ref call_tmp[2350633]:locale[28] "dead after last mention" "maybe param" "temp"
    (2350635 'move' call_tmp[2350633](2350637 '.' this[1882256] home[1022002]))
    ref call_tmp[2339000]:locale[28] "dead after last mention" "maybe param" "temp"
    (2339002 'move' call_tmp[2339000](2339004 '.' f[1882264] home[235650]))
    (1022973 call =[90634] call_tmp[2350633] call_tmp[2339000])
    ref call_tmp[2350707]:qio_channel_ptr_t[231553] "dead after last mention" "maybe param" "temp"
    (2350709 'move' call_tmp[2350707](2350711 '.' this[1882256] _channel_internal[1022007]))
    const-val call_tmp[1023058]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1023296]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023300 'move' coerce_tmp[1023296](2566121 '.v' f[1882264] _file_internal[235656]))
    const-val coerce_tmp[1023302]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023308 'move' coerce_tmp[1023302](1023304 'cast' int(32)[95] 0))
    const-val coerce_tmp[1023310]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023316 'move' coerce_tmp[1023310](1023312 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2195847]:iostyle[231932] "temp"
    (2195851 'move' rvfRerefTmp[2195847](2195848 'set reference' local_style[1882260]))
    (1023060 'move' call_tmp[1023058](1023063 call qio_channel_create[232966] call_tmp[2350707] coerce_tmp[1023296] hints[1882258] coerce_tmp[1023302] coerce_tmp[1023310] start[1882262] end[1882268] rvfRerefTmp[2195847]))
    (2329013 '=' _formal_tmp_error[1882266] call_tmp[1023058])
    (1023076 return _void[55])
  }
  function on_fn[1023562](const in arg rhs[1882270]:channel(true,dynamic,true)[1022014]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023952]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023956 'move' coerce_tmp[1023952](2566160 '.v' rhs[1882270] _channel_internal[1022007]))
    (1023577 call qio_channel_retain[233039] coerce_tmp[1023952])
    (1023579 return _void[55])
  }
  function on_fn[1023606](const  ref arg lhs[1882272]:channel(true,dynamic,true)[1022014]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1023971]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1023975 'move' coerce_tmp[1023971](2566167 '.v' lhs[1882272] _channel_internal[1022007]))
    (1023621 call qio_channel_release[233049] coerce_tmp[1023971])
    (1023623 return _void[55])
  }
  function on_fn[1061211](const in arg style[1882286]:iostyle[231932], const in arg this[1882288]:file[235668], ref arg err[1882290]:syserr[223672], const in arg hints[1882292]:int(32)[95], const in arg start[1882294]:int(64)[13], ref arg ret[1882296]:channel(true,dynamic,false)[1061136], const in arg end[1882298]:int(64)[13], ref arg error_out[1885232]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1885236]:Error[167984] "error variable" "temp"
    (1885245 'move' error[1885236] nil[44])
    ref rvfRerefTmp[2195942]:file[235668] "temp"
    (2195946 'move' rvfRerefTmp[2195942](2195943 'set reference' this[1882288]))
    (1061222 call checkAssumingLocal[235856] rvfRerefTmp[2195942] error[1885236])
    val errorExists[2222632]:bool[10] "temp"
    (2222637 'move' errorExists[2222632](2222634 '!=' error[1885236] nil[44]))
    if errorExists[2222632]
    {
      gotoErrorHandling handler[1885237] handler[1885237]
    }
    label handler[1885237]
    val errorExists[2222640]:bool[10] "temp"
    (2222645 'move' errorExists[2222640](2222642 '!=' error[1885236] nil[44]))
    if errorExists[2222640]
    {
      (1885252 '=' error_out[1885232] error[1885236])
      gotoErrorHandlingReturn _endon_fn[1885234] _endon_fn[1885234]
    }
    const-val call_tmp[1061224]:channel(true,dynamic,false)[1061136] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1061569]:channel(true,dynamic,false)[1061136] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1062040]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2195935]:file[235668] "temp"
    (2195939 'move' rvfRerefTmp[2195935](2195936 'set reference' this[1882288]))
    (1061572 call init[1061585] initTemp[1061569] rvfRerefTmp[2195935] _formal_tmp_out_error[1062040] hints[1882292] start[1882294] end[1882298] style[1882286])
    (2329019 '=' err[1882290] _formal_tmp_out_error[1062040])
    (1061226 'move' call_tmp[1061224] initTemp[1061569])
    (1061240 call =[1062049] ret[1882296] call_tmp[1061224])
    ref i_x[2392744]:channel(true,dynamic,false)[1061136] "temp"
    (2392748 'move' i_x[2392744](2392746 'set reference' call_tmp[1061224]))
    (2392752 call deinit[1676346] i_x[2392744])
    label _endon_fn[1885234]
    (1061246 return _void[55])
  }
  function on_fn[1061663](const in arg local_style[1882300]:iostyle[231932], ref arg this[1882302]:channel(true,dynamic,false)[1061136], const in arg start[1882304]:int(64)[13], const in arg f[1882306]:file[235668], ref arg _formal_tmp_error[1882308]:syserr[223672], const in arg end[1882310]:int(64)[13], const in arg hints[1882312]:int(32)[95]) : void[4] "on" "resolved"
  {
    ref call_tmp[2387930]:locale[28] "dead after last mention" "maybe param" "temp"
    (2387932 'move' call_tmp[2387930](2387934 '.' this[1882302] home[1061124]))
    ref call_tmp[2339010]:locale[28] "dead after last mention" "maybe param" "temp"
    (2339012 'move' call_tmp[2339010](2339014 '.' f[1882306] home[235650]))
    (1061686 call =[90634] call_tmp[2387930] call_tmp[2339010])
    ref call_tmp[2388044]:qio_channel_ptr_t[231553] "dead after last mention" "maybe param" "temp"
    (2388046 'move' call_tmp[2388044](2388048 '.' this[1882302] _channel_internal[1061129]))
    const-val call_tmp[1061771]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1062009]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062013 'move' coerce_tmp[1062009](2566604 '.v' f[1882306] _file_internal[235656]))
    const-val coerce_tmp[1062015]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062021 'move' coerce_tmp[1062015](1062017 'cast' int(32)[95] 0))
    const-val coerce_tmp[1062023]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062029 'move' coerce_tmp[1062023](1062025 'cast' int(32)[95] 1))
    ref rvfRerefTmp[2195955]:iostyle[231932] "temp"
    (2195959 'move' rvfRerefTmp[2195955](2195956 'set reference' local_style[1882300]))
    (1061773 'move' call_tmp[1061771](1061776 call qio_channel_create[232966] call_tmp[2388044] coerce_tmp[1062009] hints[1882312] coerce_tmp[1062015] coerce_tmp[1062023] start[1882304] end[1882310] rvfRerefTmp[2195955]))
    (2329025 '=' _formal_tmp_error[1882308] call_tmp[1061771])
    (1061789 return _void[55])
  }
  function on_fn[1062275](const in arg rhs[1882314]:channel(true,dynamic,false)[1061136]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062474]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062478 'move' coerce_tmp[1062474](2566643 '.v' rhs[1882314] _channel_internal[1061129]))
    (1062290 call qio_channel_retain[233039] coerce_tmp[1062474])
    (1062292 return _void[55])
  }
  function on_fn[1062319](const  ref arg lhs[1882316]:channel(true,dynamic,false)[1061136]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1062493]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1062497 'move' coerce_tmp[1062493](2566650 '.v' lhs[1882316] _channel_internal[1061129]))
    (1062334 call qio_channel_release[233049] coerce_tmp[1062493])
    (1062336 return _void[55])
  }
  function on_fn[1062644](const in arg this[1882318]:channel(true,dynamic,false)[1061136], ref arg err[1882320]:syserr[223672]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1062666]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063037]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063043 'move' coerce_tmp[1063037](1063039 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063045]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063049 'move' coerce_tmp[1063045](2566670 '.v' this[1882318] _channel_internal[1061129]))
    (1062668 'move' call_tmp[1062666](1062671 call qio_channel_close[233228] coerce_tmp[1063037] coerce_tmp[1063045]))
    (2329031 '=' err[1882320] call_tmp[1062666])
    (1062680 return _void[55])
  }
  function on_fn[1063121](const  ref arg this[1882322]:channel(true,dynamic,false)[1061136], ref arg path[1882324]:string[26], ref arg offset[1882326]:int(64)[13], ref arg error_out[1885387]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1063127]:c_string[19] "dead at end of block" "insert auto destroy"
    (1063329 'move' tmp_path[1063127](1063327 'cast' c_string[19] nil[44]))
    val tmp_offset[1063133]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1063332 'move' tmp_offset[1063133] 0)
    (2329741 call qio_int_to_err[223722] 0)
    const-val call_tmp[1063175]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1063284]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063290 'move' coerce_tmp[1063284](1063286 'cast' int(32)[95] 0))
    const-val coerce_tmp[1063292]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1063296 'move' coerce_tmp[1063292](2566682 '.v' this[1882322] _channel_internal[1061129]))
    (1063177 'move' call_tmp[1063175](1063180 call qio_channel_path_offset[233012] coerce_tmp[1063284] coerce_tmp[1063292] tmp_path[1063127] tmp_offset[1063133]))
    const-val call_tmp[2328408]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328410 'move' call_tmp[2328408](2328413 call qio_err_iserr[223734] call_tmp[1063175]))
    const-val call_tmp[2328415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328417 'move' call_tmp[2328415](2328419 '==' call_tmp[2328408] 0))
    if call_tmp[2328415]
    {
      const-val call_tmp[1063209]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1885392]:Error[167984] "error variable" "temp"
      (1885394 'move' error[1885392] nil[44])
      const-val call_tmp[2325323]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2325325 'move' call_tmp[2325323](2325327 'string_length_bytes' tmp_path[1063127]))
      val errorExists[2222696]:bool[10] "temp"
      (2222701 'move' errorExists[2222696](2222698 '!=' error[1885392] nil[44]))
      if errorExists[2222696]
      {
        (1885398 '=' error_out[1885387] error[1885392])
        gotoErrorHandlingReturn _endon_fn[1885389] _endon_fn[1885389]
      }
      val error[1885407]:Error[167984] "error variable" "temp"
      (1885409 'move' error[1885407] nil[44])
      const-val ret[2258423]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2258425]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
      (2258427 'move' call_tmp[2258425](2258429 'cast' c_ptr(uint(8))[937612] tmp_path[1063127]))
      val error[2258434]:Error[167984] "error variable" "temp"
      (2258436 'move' error[2258434] nil[44])
      const-val ret[2258439]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2258441]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2258443]:Error[167984] "error variable" "temp"
      (2258445 'move' error[2258443] nil[44])
      const-val ret_tmp[2258448]:string[26] "temp"
      (2258451 call decodeByteBuffer[173938] call_tmp[2258425] call_tmp[2325323] replace[173694] error[2258443] ret_tmp[2258448])
      (2258457 'move' call_tmp[2258441] ret_tmp[2258448])
      val errorExists[2258460]:bool[10] "temp"
      (2258462 'move' errorExists[2258460](2258464 '!=' error[2258443] nil[44]))
      if errorExists[2258460]
      {
        (2258469 '=' error[2258434] error[2258443])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258478] _endcreateStringWithNewBuffer[2258478]
      }
      (2258475 'move' ret[2258439] call_tmp[2258441])
      label _endcreateStringWithNewBuffer[2258478]
      val errorExists[2258483]:bool[10] "temp"
      (2258485 'move' errorExists[2258483](2258487 '!=' error[2258434] nil[44]))
      if errorExists[2258483]
      {
        (2258492 '=' error[1885407] error[2258434])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258501] _endcreateStringWithNewBuffer[2258501]
      }
      (2258498 'move' ret[2258423] ret[2258439])
      label _endcreateStringWithNewBuffer[2258501]
      (1904841 'move' call_tmp[1063209] ret[2258423])
      val errorExists[2222704]:bool[10] "temp"
      (2222709 'move' errorExists[2222704](2222706 '!=' error[1885407] nil[44]))
      if errorExists[2222704]
      {
        (1885413 '=' error_out[1885387] error[1885407])
        gotoErrorHandlingReturn _endon_fn[1885389] _endon_fn[1885389]
      }
      (1063219 call =[38272] path[1882324] call_tmp[1063209])
      ref i_x[2247305]:string[26] "temp"
      (2247309 'move' i_x[2247305](2247307 'set reference' call_tmp[1063209]))
      (2247313 call deinit[30834] i_x[2247305])
      ref i_cs[2235782]:c_string[19] "temp"
      (2235786 'move' i_cs[2235782](2235784 'set reference' tmp_path[1063127]))
      const-val call_tmp[2235789]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235791 'move' call_tmp[2235789](2235793 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2235796]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235798 'move' call_tmp[2235796](2235800 'cast' c_string[19] call_tmp[2235789]))
      const-val coerce_tmp[2235803]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2235805 'move' coerce_tmp[2235803] tmp_path[1063127])
      const-val call_tmp[2235809]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235811 'move' call_tmp[2235809](2235813 'string_compare' coerce_tmp[2235803] call_tmp[2235796]))
      const-val call_tmp[2235816]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235818 'move' call_tmp[2235816](2235820 '!=' call_tmp[2235809] 0))
      if call_tmp[2235816]
      {
        (2235826 call chpl_rt_free_c_string[22717] i_cs[2235782])
      }
      (2238150 '=' offset[1882326] tmp_offset[1063133])
    }
    label _endon_fn[1885389]
    (1063238 return _void[55])
  }
  function on_fn[1066278](const in arg this[1882328]:channel(true,dynamic,false)[1061136], const  ref arg args[1882330]:1*byteIndex[1057270], const in arg origLocale[1882332]:locale[28], ref arg error_out[1885472]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1885476]:Error[167984] "error variable" "temp"
    (1885485 'move' error[1885476] nil[44])
    ref rvfRerefTmp[2196018]:channel(true,dynamic,false)[1061136] "temp"
    (2196022 'move' rvfRerefTmp[2196018](2196019 'set reference' this[1882328]))
    const-val call_tmp[2390524]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390526 'move' call_tmp[2390524](2390529 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2390534]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390536 'move' coerce_tmp[2390534](2390538 '.v' this[1882328] _channel_internal[1061129]))
    const-val call_tmp[2390541]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390543 'move' call_tmp[2390541](2390545 'cast' c_void_ptr[149] coerce_tmp[2390534]))
    const-val call_tmp[2390548]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390550 'move' call_tmp[2390548](2390552 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2390555]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390557 'move' call_tmp[2390555](2390559 'ptr_eq' call_tmp[2390541] call_tmp[2390548]))
    if call_tmp[2390555]
    {
      const-val call_tmp[2390564]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2390566]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2390568 'move' coerce_tmp[2390566](2390570 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2390573]:owned SystemError[1000427] "temp"
      (2390576 call fromSyserr[1017302] coerce_tmp[2390566] "Operation attempted on an invalid channel" ret_tmp[2390573])
      (2390580 'move' call_tmp[2390564] ret_tmp[2390573])
      val call_tmp[2390583]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2390585]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2390587]:owned Error[966647] "temp"
      ref i_x[2390589]:owned SystemError[1000427] "temp"
      (2390591 'move' i_x[2390589](2390593 'set reference' call_tmp[2390564]))
      ref i__retArg[2390595]:owned Error[966647] "temp"
      (2390597 'move' i__retArg[2390595](2390599 'set reference' ret_tmp[2390587]))
      val _formal_tmp_x[2390601]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2390603 'move' _formal_tmp_x[2390601] i_x[2390589])
      const-val ret[2390606]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2390608]:owned SystemError[1000427] "temp"
      (2390610 'move' i_this[2390608](2390612 'set reference' _formal_tmp_x[2390601]))
      val coerce_tmp[2390614]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2390616 'move' coerce_tmp[2390614](2390618 '.v' i_this[2390608] chpl_p[1000422]))
      val call_tmp[2390621]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2390623 'move' call_tmp[2390621](2390625 'cast' Error[167984] coerce_tmp[2390614]))
      ref i_this[2390633]:owned SystemError[1000427] "temp"
      (2390635 'move' i_this[2390633](2390637 'set reference' _formal_tmp_x[2390601]))
      val tmp[2390639]:SystemError[264933] "temp"
      (2390641 'move' tmp[2390639](2390643 'cast' SystemError[264933] nil[44]))
      (2390646 '.=' i_this[2390633] chpl_p[1000422] tmp[2390639])
      val coerce_tmp[2390650]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2390652 'move' coerce_tmp[2390650](2390654 'cast' object[22] call_tmp[2390621]))
      const-val call_tmp[2390657]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2390659 'move' call_tmp[2390657](2390661 'ptr_eq' coerce_tmp[2390650] nil[44]))
      if call_tmp[2390657]
      {
        (2390667 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2390670]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2390672]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2390675 call init[968283] initTemp[2390672] call_tmp[2390621])
      (2390678 'move' call_tmp[2390670] initTemp[2390672])
      (2390681 'move' ret[2390606] call_tmp[2390670])
      (2390685 call chpl__autoDestroy[1656343] _formal_tmp_x[2390601])
      (2390687 '=' i__retArg[2390595] ret[2390606])
      (2390690 'move' coerce_tmp[2390585] ret_tmp[2390587])
      const-val _formal_tmp_in_err[2390693]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2390695 'move' _formal_tmp_in_err[2390693] coerce_tmp[2390585])
      (2390698 'move' call_tmp[2390583](2390701 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2390693]))
      (2390703 '=' error[1885476] call_tmp[2390583])
      gotoErrorHandlingReturn _endlock[2390766] _endlock[2390766]
    }
    const-val call_tmp[2390709]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390711 'move' call_tmp[2390709](2390714 call qio_err_iserr[223734] call_tmp[2390524]))
    const-val call_tmp[2390716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390718 'move' call_tmp[2390716](2390720 '!=' call_tmp[2390709] 0))
    if call_tmp[2390716]
    {
      val error[2390725]:Error[167984] "error variable" "temp"
      (2390727 'move' error[2390725] nil[44])
      (2390731 call _ch_ioerror[1063054] rvfRerefTmp[2196018] call_tmp[2390524] "in lock" error[2390725])
      val errorExists[2390736]:bool[10] "temp"
      (2390738 'move' errorExists[2390736](2390740 '!=' error[2390725] nil[44]))
      if errorExists[2390736]
      {
        gotoErrorHandling handler[2390748] handler[2390748]
      }
      label handler[2390748]
      val errorExists[2390750]:bool[10] "temp"
      (2390752 'move' errorExists[2390750](2390754 '!=' error[2390725] nil[44]))
      if errorExists[2390750]
      {
        (2390759 '=' error[1885476] error[2390725])
        gotoErrorHandlingReturn _endlock[2390766] _endlock[2390766]
      }
    }
    label _endlock[2390766]
    val errorExists[2222728]:bool[10] "temp"
    (2222733 'move' errorExists[2222728](2222730 '!=' error[1885476] nil[44]))
    if errorExists[2222728]
    {
      gotoErrorHandling handler[1885477] handler[1885477]
    }
    label handler[1885477]
    val errorExists[2222736]:bool[10] "temp"
    (2222741 'move' errorExists[2222736](2222738 '!=' error[1885476] nil[44]))
    if errorExists[2222736]
    {
      (1885492 '=' error_out[1885472] error[1885476])
      gotoErrorHandlingReturn _endon_fn[1885474] _endon_fn[1885474]
    }
    val error[1885504]:Error[167984] "error variable" "temp"
    (1885513 'move' error[1885504] nil[44])
    const-ref call_tmp[1067122]:byteIndex[28173] "dead after last mention" "maybe param" "temp"
    (1067124 'move' call_tmp[1067122](1067198 '.v' args[1882330] x0[1057268]))
    ref rvfRerefTmp[2196025]:channel(true,dynamic,false)[1061136] "temp"
    (2196029 'move' rvfRerefTmp[2196025](2196026 'set reference' this[1882328]))
    val rvfRerefTmp[2196052]:locale[28] "temp"
    (2196055 'move' rvfRerefTmp[2196052] origLocale[1882332])
    (1067133 call _writeOne[1067201] rvfRerefTmp[2196025] call_tmp[1067122] rvfRerefTmp[2196052] error[1885504])
    val errorExists[2222744]:bool[10] "temp"
    (2222749 'move' errorExists[2222744](2222746 '!=' error[1885504] nil[44]))
    if errorExists[2222744]
    {
      gotoErrorHandling handler[1885505] handler[1885505]
    }
    label handler[1885505]
    val errorExists[2222752]:bool[10] "temp"
    (2222757 'move' errorExists[2222752](2222754 '!=' error[1885504] nil[44]))
    if errorExists[2222752]
    {
      (1885520 '=' error_out[1885472] error[1885504])
      gotoErrorHandlingReturn _endon_fn[1885474] _endon_fn[1885474]
    }
    label _endon_fn[1885474]
    (1066381 return _void[55])
  }
  function on_fn[1069057](const  ref arg this[1882334]:channel(true,dynamic,false)[1061136], const in arg x[1882336]:int(64)[13], const in arg origLocale[1882338]:locale[28], ref arg error_out[1885756]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1885760]:Error[167984] "error variable" "temp"
    (1885769 'move' error[1885760] nil[44])
    const-val call_tmp[2390779]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390781 'move' call_tmp[2390779](2390784 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2390789]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2390791 'move' coerce_tmp[2390789](2390793 '.v' this[1882334] _channel_internal[1061129]))
    const-val call_tmp[2390796]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390798 'move' call_tmp[2390796](2390800 'cast' c_void_ptr[149] coerce_tmp[2390789]))
    const-val call_tmp[2390803]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390805 'move' call_tmp[2390803](2390807 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2390810]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390812 'move' call_tmp[2390810](2390814 'ptr_eq' call_tmp[2390796] call_tmp[2390803]))
    if call_tmp[2390810]
    {
      const-val call_tmp[2390819]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2390821]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2390823 'move' coerce_tmp[2390821](2390825 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2390828]:owned SystemError[1000427] "temp"
      (2390831 call fromSyserr[1017302] coerce_tmp[2390821] "Operation attempted on an invalid channel" ret_tmp[2390828])
      (2390835 'move' call_tmp[2390819] ret_tmp[2390828])
      val call_tmp[2390838]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2390840]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2390842]:owned Error[966647] "temp"
      ref i_x[2390844]:owned SystemError[1000427] "temp"
      (2390846 'move' i_x[2390844](2390848 'set reference' call_tmp[2390819]))
      ref i__retArg[2390850]:owned Error[966647] "temp"
      (2390852 'move' i__retArg[2390850](2390854 'set reference' ret_tmp[2390842]))
      val _formal_tmp_x[2390856]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2390858 'move' _formal_tmp_x[2390856] i_x[2390844])
      const-val ret[2390861]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2390863]:owned SystemError[1000427] "temp"
      (2390865 'move' i_this[2390863](2390867 'set reference' _formal_tmp_x[2390856]))
      val coerce_tmp[2390869]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2390871 'move' coerce_tmp[2390869](2390873 '.v' i_this[2390863] chpl_p[1000422]))
      val call_tmp[2390876]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2390878 'move' call_tmp[2390876](2390880 'cast' Error[167984] coerce_tmp[2390869]))
      ref i_this[2390888]:owned SystemError[1000427] "temp"
      (2390890 'move' i_this[2390888](2390892 'set reference' _formal_tmp_x[2390856]))
      val tmp[2390894]:SystemError[264933] "temp"
      (2390896 'move' tmp[2390894](2390898 'cast' SystemError[264933] nil[44]))
      (2390901 '.=' i_this[2390888] chpl_p[1000422] tmp[2390894])
      val coerce_tmp[2390905]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2390907 'move' coerce_tmp[2390905](2390909 'cast' object[22] call_tmp[2390876]))
      const-val call_tmp[2390912]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2390914 'move' call_tmp[2390912](2390916 'ptr_eq' coerce_tmp[2390905] nil[44]))
      if call_tmp[2390912]
      {
        (2390922 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2390925]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2390927]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2390930 call init[968283] initTemp[2390927] call_tmp[2390876])
      (2390933 'move' call_tmp[2390925] initTemp[2390927])
      (2390936 'move' ret[2390861] call_tmp[2390925])
      (2390940 call chpl__autoDestroy[1656343] _formal_tmp_x[2390856])
      (2390942 '=' i__retArg[2390850] ret[2390861])
      (2390945 'move' coerce_tmp[2390840] ret_tmp[2390842])
      const-val _formal_tmp_in_err[2390948]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2390950 'move' _formal_tmp_in_err[2390948] coerce_tmp[2390840])
      (2390953 'move' call_tmp[2390838](2390956 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2390948]))
      (2390958 '=' error[1885760] call_tmp[2390838])
      gotoErrorHandlingReturn _endlock[2391021] _endlock[2391021]
    }
    const-val call_tmp[2390964]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390966 'move' call_tmp[2390964](2390969 call qio_err_iserr[223734] call_tmp[2390779]))
    const-val call_tmp[2390971]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2390973 'move' call_tmp[2390971](2390975 '!=' call_tmp[2390964] 0))
    if call_tmp[2390971]
    {
      val error[2390980]:Error[167984] "error variable" "temp"
      (2390982 'move' error[2390980] nil[44])
      (2390986 call _ch_ioerror[1063054] this[1882334] call_tmp[2390779] "in lock" error[2390980])
      val errorExists[2390991]:bool[10] "temp"
      (2390993 'move' errorExists[2390991](2390995 '!=' error[2390980] nil[44]))
      if errorExists[2390991]
      {
        gotoErrorHandling handler[2391003] handler[2391003]
      }
      label handler[2391003]
      val errorExists[2391005]:bool[10] "temp"
      (2391007 'move' errorExists[2391005](2391009 '!=' error[2390980] nil[44]))
      if errorExists[2391005]
      {
        (2391014 '=' error[1885760] error[2390980])
        gotoErrorHandlingReturn _endlock[2391021] _endlock[2391021]
      }
    }
    label _endlock[2391021]
    val errorExists[2222864]:bool[10] "temp"
    (2222869 'move' errorExists[2222864](2222866 '!=' error[1885760] nil[44]))
    if errorExists[2222864]
    {
      gotoErrorHandling handler[1885761] handler[1885761]
    }
    label handler[1885761]
    val errorExists[2222872]:bool[10] "temp"
    (2222877 'move' errorExists[2222872](2222874 '!=' error[1885760] nil[44]))
    if errorExists[2222872]
    {
      (1885775 call chpl_uncaught_error[170289] error[1885760])
    }
    val error[1885786]:Error[167984] "error variable" "temp"
    (1885795 'move' error[1885786] nil[44])
    val rvfRerefTmp[2196064]:locale[28] "temp"
    (2196067 'move' rvfRerefTmp[2196064] origLocale[1882338])
    (1069090 call _writeOne[1069126] this[1882334] x[1882336] rvfRerefTmp[2196064] error[1885786])
    val errorExists[2222880]:bool[10] "temp"
    (2222885 'move' errorExists[2222880](2222882 '!=' error[1885786] nil[44]))
    if errorExists[2222880]
    {
      gotoErrorHandling handler[1885787] handler[1885787]
    }
    label handler[1885787]
    val errorExists[2222888]:bool[10] "temp"
    (2222893 'move' errorExists[2222888](2222890 '!=' error[1885786] nil[44]))
    if errorExists[2222888]
    {
      (1885802 '=' error_out[1885756] error[1885786])
      gotoErrorHandlingReturn _endon_fn[1885758] _endon_fn[1885758]
    }
    label _endon_fn[1885758]
    (1069097 return _void[55])
  }
  function on_fn[1080394](const in arg this[1882340]:channel(true,dynamic,false)[1061136], ref arg ret[1882342]:int(64)[13]) : void[4] "on" "resolved"
  {
    val error[1885957]:Error[167984] "error variable" "temp"
    (1885966 'move' error[1885957] nil[44])
    ref rvfRerefTmp[2196091]:channel(true,dynamic,false)[1061136] "temp"
    (2196095 'move' rvfRerefTmp[2196091](2196092 'set reference' this[1882340]))
    const-val call_tmp[2391034]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391036 'move' call_tmp[2391034](2391039 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2391044]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391046 'move' coerce_tmp[2391044](2391048 '.v' this[1882340] _channel_internal[1061129]))
    const-val call_tmp[2391051]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391053 'move' call_tmp[2391051](2391055 'cast' c_void_ptr[149] coerce_tmp[2391044]))
    const-val call_tmp[2391058]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391060 'move' call_tmp[2391058](2391062 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2391065]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391067 'move' call_tmp[2391065](2391069 'ptr_eq' call_tmp[2391051] call_tmp[2391058]))
    if call_tmp[2391065]
    {
      const-val call_tmp[2391074]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2391076]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391078 'move' coerce_tmp[2391076](2391080 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2391083]:owned SystemError[1000427] "temp"
      (2391086 call fromSyserr[1017302] coerce_tmp[2391076] "Operation attempted on an invalid channel" ret_tmp[2391083])
      (2391090 'move' call_tmp[2391074] ret_tmp[2391083])
      val call_tmp[2391093]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2391095]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2391097]:owned Error[966647] "temp"
      ref i_x[2391099]:owned SystemError[1000427] "temp"
      (2391101 'move' i_x[2391099](2391103 'set reference' call_tmp[2391074]))
      ref i__retArg[2391105]:owned Error[966647] "temp"
      (2391107 'move' i__retArg[2391105](2391109 'set reference' ret_tmp[2391097]))
      val _formal_tmp_x[2391111]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2391113 'move' _formal_tmp_x[2391111] i_x[2391099])
      const-val ret[2391116]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2391118]:owned SystemError[1000427] "temp"
      (2391120 'move' i_this[2391118](2391122 'set reference' _formal_tmp_x[2391111]))
      val coerce_tmp[2391124]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2391126 'move' coerce_tmp[2391124](2391128 '.v' i_this[2391118] chpl_p[1000422]))
      val call_tmp[2391131]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391133 'move' call_tmp[2391131](2391135 'cast' Error[167984] coerce_tmp[2391124]))
      ref i_this[2391143]:owned SystemError[1000427] "temp"
      (2391145 'move' i_this[2391143](2391147 'set reference' _formal_tmp_x[2391111]))
      val tmp[2391149]:SystemError[264933] "temp"
      (2391151 'move' tmp[2391149](2391153 'cast' SystemError[264933] nil[44]))
      (2391156 '.=' i_this[2391143] chpl_p[1000422] tmp[2391149])
      val coerce_tmp[2391160]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391162 'move' coerce_tmp[2391160](2391164 'cast' object[22] call_tmp[2391131]))
      const-val call_tmp[2391167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391169 'move' call_tmp[2391167](2391171 'ptr_eq' coerce_tmp[2391160] nil[44]))
      if call_tmp[2391167]
      {
        (2391177 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2391180]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2391182]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2391185 call init[968283] initTemp[2391182] call_tmp[2391131])
      (2391188 'move' call_tmp[2391180] initTemp[2391182])
      (2391191 'move' ret[2391116] call_tmp[2391180])
      (2391195 call chpl__autoDestroy[1656343] _formal_tmp_x[2391111])
      (2391197 '=' i__retArg[2391105] ret[2391116])
      (2391200 'move' coerce_tmp[2391095] ret_tmp[2391097])
      const-val _formal_tmp_in_err[2391203]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2391205 'move' _formal_tmp_in_err[2391203] coerce_tmp[2391095])
      (2391208 'move' call_tmp[2391093](2391211 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2391203]))
      (2391213 '=' error[1885957] call_tmp[2391093])
      gotoErrorHandlingReturn _endlock[2391276] _endlock[2391276]
    }
    const-val call_tmp[2391219]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391221 'move' call_tmp[2391219](2391224 call qio_err_iserr[223734] call_tmp[2391034]))
    const-val call_tmp[2391226]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391228 'move' call_tmp[2391226](2391230 '!=' call_tmp[2391219] 0))
    if call_tmp[2391226]
    {
      val error[2391235]:Error[167984] "error variable" "temp"
      (2391237 'move' error[2391235] nil[44])
      (2391241 call _ch_ioerror[1063054] rvfRerefTmp[2196091] call_tmp[2391034] "in lock" error[2391235])
      val errorExists[2391246]:bool[10] "temp"
      (2391248 'move' errorExists[2391246](2391250 '!=' error[2391235] nil[44]))
      if errorExists[2391246]
      {
        gotoErrorHandling handler[2391258] handler[2391258]
      }
      label handler[2391258]
      val errorExists[2391260]:bool[10] "temp"
      (2391262 'move' errorExists[2391260](2391264 '!=' error[2391235] nil[44]))
      if errorExists[2391260]
      {
        (2391269 '=' error[1885957] error[2391235])
        gotoErrorHandlingReturn _endlock[2391276] _endlock[2391276]
      }
    }
    label _endlock[2391276]
    val errorExists[2222952]:bool[10] "temp"
    (2222957 'move' errorExists[2222952](2222954 '!=' error[1885957] nil[44]))
    if errorExists[2222952]
    {
      gotoErrorHandling handler[1885958] handler[1885958]
    }
    label handler[1885958]
    val errorExists[2222960]:bool[10] "temp"
    (2222965 'move' errorExists[2222960](2222962 '!=' error[1885957] nil[44]))
    if errorExists[2222960]
    {
      (1885972 call chpl_uncaught_error[170289] error[1885957])
    }
    const-val call_tmp[1080415]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1080474]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1080478 'move' coerce_tmp[1080474](2566737 '.v' this[1882340] _channel_internal[1061129]))
    (1080417 'move' call_tmp[1080415](1080420 call qio_channel_offset_unlocked[233470] coerce_tmp[1080474]))
    (2238156 '=' ret[1882342] call_tmp[1080415])
    (1080433 return _void[55])
  }
  function on_fn[1080946](const in arg style[1882344]:iostyle[231932], const in arg end[1882346]:int(64)[13], const in arg this[1882348]:file[235668], ref arg err[1882350]:syserr[223672], const in arg hints[1882352]:int(32)[95], const in arg start[1882354]:int(64)[13], ref arg ret[1882356]:channel(false,dynamic,false)[1080871], ref arg error_out[1886028]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1886032]:Error[167984] "error variable" "temp"
    (1886041 'move' error[1886032] nil[44])
    ref rvfRerefTmp[2196120]:file[235668] "temp"
    (2196124 'move' rvfRerefTmp[2196120](2196121 'set reference' this[1882348]))
    (1080957 call checkAssumingLocal[235856] rvfRerefTmp[2196120] error[1886032])
    val errorExists[2222992]:bool[10] "temp"
    (2222997 'move' errorExists[2222992](2222994 '!=' error[1886032] nil[44]))
    if errorExists[2222992]
    {
      gotoErrorHandling handler[1886033] handler[1886033]
    }
    label handler[1886033]
    val errorExists[2223000]:bool[10] "temp"
    (2223005 'move' errorExists[2223000](2223002 '!=' error[1886032] nil[44]))
    if errorExists[2223000]
    {
      (1886048 '=' error_out[1886028] error[1886032])
      gotoErrorHandlingReturn _endon_fn[1886030] _endon_fn[1886030]
    }
    const-val call_tmp[1080959]:channel(false,dynamic,false)[1080871] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
    const-val initTemp[1081301]:channel(false,dynamic,false)[1080871] "dead after last mention" "delay instantiation" "temp"
    val _formal_tmp_out_error[1081772]:syserr[223672] "dead after last mention" "expr temp" "insert auto destroy" "suppress lvalue error" "temp"
    ref rvfRerefTmp[2196113]:file[235668] "temp"
    (2196117 'move' rvfRerefTmp[2196113](2196114 'set reference' this[1882348]))
    (1081304 call init[1081317] initTemp[1081301] rvfRerefTmp[2196113] _formal_tmp_out_error[1081772] hints[1882352] start[1882354] end[1882346] style[1882344])
    (2329049 '=' err[1882350] _formal_tmp_out_error[1081772])
    (1080961 'move' call_tmp[1080959] initTemp[1081301])
    (1080975 call =[1081781] ret[1882356] call_tmp[1080959])
    ref i_x[2517126]:channel(false,dynamic,false)[1080871] "temp"
    (2517130 'move' i_x[2517126](2517128 'set reference' call_tmp[1080959]))
    (2517134 call deinit[1680600] i_x[2517126])
    label _endon_fn[1886030]
    (1080981 return _void[55])
  }
  function on_fn[1081395](const in arg start[1882358]:int(64)[13], const in arg f[1882360]:file[235668], ref arg _formal_tmp_error[1882362]:syserr[223672], const in arg end[1882364]:int(64)[13], const in arg hints[1882366]:int(32)[95], const in arg local_style[1882368]:iostyle[231932], ref arg this[1882370]:channel(false,dynamic,false)[1080871]) : void[4] "on" "resolved"
  {
    ref call_tmp[2394399]:locale[28] "dead after last mention" "maybe param" "temp"
    (2394401 'move' call_tmp[2394399](2394403 '.' this[1882370] home[1080859]))
    ref call_tmp[2339020]:locale[28] "dead after last mention" "maybe param" "temp"
    (2339022 'move' call_tmp[2339020](2339024 '.' f[1882360] home[235650]))
    (1081418 call =[90634] call_tmp[2394399] call_tmp[2339020])
    ref call_tmp[2394453]:qio_channel_ptr_t[231553] "dead after last mention" "maybe param" "temp"
    (2394455 'move' call_tmp[2394453](2394457 '.' this[1882370] _channel_internal[1080864]))
    const-val call_tmp[1081503]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1081741]:qio_file_ptr_t[231527] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081745 'move' coerce_tmp[1081741](2566767 '.v' f[1882360] _file_internal[235656]))
    const-val coerce_tmp[1081747]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081753 'move' coerce_tmp[1081747](1081749 'cast' int(32)[95] 1))
    const-val coerce_tmp[1081755]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1081761 'move' coerce_tmp[1081755](1081757 'cast' int(32)[95] 0))
    ref rvfRerefTmp[2196154]:iostyle[231932] "temp"
    (2196158 'move' rvfRerefTmp[2196154](2196155 'set reference' local_style[1882368]))
    (1081505 'move' call_tmp[1081503](1081508 call qio_channel_create[232966] call_tmp[2394453] coerce_tmp[1081741] hints[1882366] coerce_tmp[1081747] coerce_tmp[1081755] start[1882358] end[1882364] rvfRerefTmp[2196154]))
    (2329055 '=' _formal_tmp_error[1882362] call_tmp[1081503])
    (1081521 return _void[55])
  }
  function on_fn[1082007](const in arg rhs[1882372]:channel(false,dynamic,false)[1080871]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082206]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082210 'move' coerce_tmp[1082206](2566806 '.v' rhs[1882372] _channel_internal[1080864]))
    (1082022 call qio_channel_retain[233039] coerce_tmp[1082206])
    (1082024 return _void[55])
  }
  function on_fn[1082051](const  ref arg lhs[1882374]:channel(false,dynamic,false)[1080871]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1082225]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082229 'move' coerce_tmp[1082225](2566813 '.v' lhs[1882374] _channel_internal[1080864]))
    (1082066 call qio_channel_release[233049] coerce_tmp[1082225])
    (1082068 return _void[55])
  }
  function on_fn[1082376](const in arg this[1882376]:channel(false,dynamic,false)[1080871], ref arg err[1882378]:syserr[223672]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1082398]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082721]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082727 'move' coerce_tmp[1082721](1082723 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082729]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082733 'move' coerce_tmp[1082729](2566833 '.v' this[1882376] _channel_internal[1080864]))
    (1082400 'move' call_tmp[1082398](1082403 call qio_channel_close[233228] coerce_tmp[1082721] coerce_tmp[1082729]))
    (2329061 '=' err[1882378] call_tmp[1082398])
    (1082412 return _void[55])
  }
  function on_fn[1082805](const in arg this[1882380]:channel(false,dynamic,false)[1080871], ref arg path[1882382]:string[26], ref arg offset[1882384]:int(64)[13], ref arg error_out[1886183]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1082811]:c_string[19] "dead at end of block" "insert auto destroy"
    (1083012 'move' tmp_path[1082811](1083010 'cast' c_string[19] nil[44]))
    val tmp_offset[1082817]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1083015 'move' tmp_offset[1082817] 0)
    (2329760 call qio_int_to_err[223722] 0)
    const-val call_tmp[1082859]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1082967]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082973 'move' coerce_tmp[1082967](1082969 'cast' int(32)[95] 0))
    const-val coerce_tmp[1082975]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1082979 'move' coerce_tmp[1082975](2566846 '.v' this[1882380] _channel_internal[1080864]))
    (1082861 'move' call_tmp[1082859](1082864 call qio_channel_path_offset[233012] coerce_tmp[1082967] coerce_tmp[1082975] tmp_path[1082811] tmp_offset[1082817]))
    const-val call_tmp[2328425]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328427 'move' call_tmp[2328425](2328430 call qio_err_iserr[223734] call_tmp[1082859]))
    const-val call_tmp[2328432]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328434 'move' call_tmp[2328432](2328436 '==' call_tmp[2328425] 0))
    if call_tmp[2328432]
    {
      const-val call_tmp[1082893]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1886188]:Error[167984] "error variable" "temp"
      (1886190 'move' error[1886188] nil[44])
      const-val call_tmp[2325345]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2325347 'move' call_tmp[2325345](2325349 'string_length_bytes' tmp_path[1082811]))
      val errorExists[2223056]:bool[10] "temp"
      (2223061 'move' errorExists[2223056](2223058 '!=' error[1886188] nil[44]))
      if errorExists[2223056]
      {
        (1886194 '=' error_out[1886183] error[1886188])
        gotoErrorHandlingReturn _endon_fn[1886185] _endon_fn[1886185]
      }
      val error[1886203]:Error[167984] "error variable" "temp"
      (1886205 'move' error[1886203] nil[44])
      const-val ret[2258521]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2258523]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
      (2258525 'move' call_tmp[2258523](2258527 'cast' c_ptr(uint(8))[937612] tmp_path[1082811]))
      val error[2258532]:Error[167984] "error variable" "temp"
      (2258534 'move' error[2258532] nil[44])
      const-val ret[2258537]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2258539]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2258541]:Error[167984] "error variable" "temp"
      (2258543 'move' error[2258541] nil[44])
      const-val ret_tmp[2258546]:string[26] "temp"
      (2258549 call decodeByteBuffer[173938] call_tmp[2258523] call_tmp[2325345] replace[173694] error[2258541] ret_tmp[2258546])
      (2258555 'move' call_tmp[2258539] ret_tmp[2258546])
      val errorExists[2258558]:bool[10] "temp"
      (2258560 'move' errorExists[2258558](2258562 '!=' error[2258541] nil[44]))
      if errorExists[2258558]
      {
        (2258567 '=' error[2258532] error[2258541])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258576] _endcreateStringWithNewBuffer[2258576]
      }
      (2258573 'move' ret[2258537] call_tmp[2258539])
      label _endcreateStringWithNewBuffer[2258576]
      val errorExists[2258581]:bool[10] "temp"
      (2258583 'move' errorExists[2258581](2258585 '!=' error[2258532] nil[44]))
      if errorExists[2258581]
      {
        (2258590 '=' error[1886203] error[2258532])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258599] _endcreateStringWithNewBuffer[2258599]
      }
      (2258596 'move' ret[2258521] ret[2258537])
      label _endcreateStringWithNewBuffer[2258599]
      (1904847 'move' call_tmp[1082893] ret[2258521])
      val errorExists[2223064]:bool[10] "temp"
      (2223069 'move' errorExists[2223064](2223066 '!=' error[1886203] nil[44]))
      if errorExists[2223064]
      {
        (1886209 '=' error_out[1886183] error[1886203])
        gotoErrorHandlingReturn _endon_fn[1886185] _endon_fn[1886185]
      }
      (1082903 call =[38272] path[1882382] call_tmp[1082893])
      ref i_x[2247545]:string[26] "temp"
      (2247549 'move' i_x[2247545](2247547 'set reference' call_tmp[1082893]))
      (2247553 call deinit[30834] i_x[2247545])
      ref i_cs[2235831]:c_string[19] "temp"
      (2235835 'move' i_cs[2235831](2235833 'set reference' tmp_path[1082811]))
      const-val call_tmp[2235838]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235840 'move' call_tmp[2235838](2235842 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2235845]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235847 'move' call_tmp[2235845](2235849 'cast' c_string[19] call_tmp[2235838]))
      const-val coerce_tmp[2235852]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2235854 'move' coerce_tmp[2235852] tmp_path[1082811])
      const-val call_tmp[2235858]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235860 'move' call_tmp[2235858](2235862 'string_compare' coerce_tmp[2235852] call_tmp[2235845]))
      const-val call_tmp[2235865]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235867 'move' call_tmp[2235865](2235869 '!=' call_tmp[2235858] 0))
      if call_tmp[2235865]
      {
        (2235875 call chpl_rt_free_c_string[22717] i_cs[2235831])
      }
      (2238162 '=' offset[1882384] tmp_offset[1082817])
    }
    label _endon_fn[1886185]
    (1082922 return _void[55])
  }
  function on_fn[1165096](const in arg this[1882412]:channel(true,dynamic,false)[1061136], const  ref arg args[1882414]:(string,codepointIndex,string)[1158744], const in arg origLocale[1882416]:locale[28], ref arg error_out[1886496]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1886500]:Error[167984] "error variable" "temp"
    (1886509 'move' error[1886500] nil[44])
    ref rvfRerefTmp[2196241]:channel(true,dynamic,false)[1061136] "temp"
    (2196245 'move' rvfRerefTmp[2196241](2196242 'set reference' this[1882412]))
    const-val call_tmp[2391289]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391291 'move' call_tmp[2391289](2391294 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2391299]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391301 'move' coerce_tmp[2391299](2391303 '.v' this[1882412] _channel_internal[1061129]))
    const-val call_tmp[2391306]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391308 'move' call_tmp[2391306](2391310 'cast' c_void_ptr[149] coerce_tmp[2391299]))
    const-val call_tmp[2391313]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391315 'move' call_tmp[2391313](2391317 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2391320]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391322 'move' call_tmp[2391320](2391324 'ptr_eq' call_tmp[2391306] call_tmp[2391313]))
    if call_tmp[2391320]
    {
      const-val call_tmp[2391329]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2391331]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391333 'move' coerce_tmp[2391331](2391335 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2391338]:owned SystemError[1000427] "temp"
      (2391341 call fromSyserr[1017302] coerce_tmp[2391331] "Operation attempted on an invalid channel" ret_tmp[2391338])
      (2391345 'move' call_tmp[2391329] ret_tmp[2391338])
      val call_tmp[2391348]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2391350]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2391352]:owned Error[966647] "temp"
      ref i_x[2391354]:owned SystemError[1000427] "temp"
      (2391356 'move' i_x[2391354](2391358 'set reference' call_tmp[2391329]))
      ref i__retArg[2391360]:owned Error[966647] "temp"
      (2391362 'move' i__retArg[2391360](2391364 'set reference' ret_tmp[2391352]))
      val _formal_tmp_x[2391366]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2391368 'move' _formal_tmp_x[2391366] i_x[2391354])
      const-val ret[2391371]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2391373]:owned SystemError[1000427] "temp"
      (2391375 'move' i_this[2391373](2391377 'set reference' _formal_tmp_x[2391366]))
      val coerce_tmp[2391379]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2391381 'move' coerce_tmp[2391379](2391383 '.v' i_this[2391373] chpl_p[1000422]))
      val call_tmp[2391386]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391388 'move' call_tmp[2391386](2391390 'cast' Error[167984] coerce_tmp[2391379]))
      ref i_this[2391398]:owned SystemError[1000427] "temp"
      (2391400 'move' i_this[2391398](2391402 'set reference' _formal_tmp_x[2391366]))
      val tmp[2391404]:SystemError[264933] "temp"
      (2391406 'move' tmp[2391404](2391408 'cast' SystemError[264933] nil[44]))
      (2391411 '.=' i_this[2391398] chpl_p[1000422] tmp[2391404])
      val coerce_tmp[2391415]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391417 'move' coerce_tmp[2391415](2391419 'cast' object[22] call_tmp[2391386]))
      const-val call_tmp[2391422]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391424 'move' call_tmp[2391422](2391426 'ptr_eq' coerce_tmp[2391415] nil[44]))
      if call_tmp[2391422]
      {
        (2391432 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2391435]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2391437]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2391440 call init[968283] initTemp[2391437] call_tmp[2391386])
      (2391443 'move' call_tmp[2391435] initTemp[2391437])
      (2391446 'move' ret[2391371] call_tmp[2391435])
      (2391450 call chpl__autoDestroy[1656343] _formal_tmp_x[2391366])
      (2391452 '=' i__retArg[2391360] ret[2391371])
      (2391455 'move' coerce_tmp[2391350] ret_tmp[2391352])
      const-val _formal_tmp_in_err[2391458]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2391460 'move' _formal_tmp_in_err[2391458] coerce_tmp[2391350])
      (2391463 'move' call_tmp[2391348](2391466 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2391458]))
      (2391468 '=' error[1886500] call_tmp[2391348])
      gotoErrorHandlingReturn _endlock[2391531] _endlock[2391531]
    }
    const-val call_tmp[2391474]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391476 'move' call_tmp[2391474](2391479 call qio_err_iserr[223734] call_tmp[2391289]))
    const-val call_tmp[2391481]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391483 'move' call_tmp[2391481](2391485 '!=' call_tmp[2391474] 0))
    if call_tmp[2391481]
    {
      val error[2391490]:Error[167984] "error variable" "temp"
      (2391492 'move' error[2391490] nil[44])
      (2391496 call _ch_ioerror[1063054] rvfRerefTmp[2196241] call_tmp[2391289] "in lock" error[2391490])
      val errorExists[2391501]:bool[10] "temp"
      (2391503 'move' errorExists[2391501](2391505 '!=' error[2391490] nil[44]))
      if errorExists[2391501]
      {
        gotoErrorHandling handler[2391513] handler[2391513]
      }
      label handler[2391513]
      val errorExists[2391515]:bool[10] "temp"
      (2391517 'move' errorExists[2391515](2391519 '!=' error[2391490] nil[44]))
      if errorExists[2391515]
      {
        (2391524 '=' error[1886500] error[2391490])
        gotoErrorHandlingReturn _endlock[2391531] _endlock[2391531]
      }
    }
    label _endlock[2391531]
    val errorExists[2223224]:bool[10] "temp"
    (2223229 'move' errorExists[2223224](2223226 '!=' error[1886500] nil[44]))
    if errorExists[2223224]
    {
      gotoErrorHandling handler[1886501] handler[1886501]
    }
    label handler[1886501]
    val errorExists[2223232]:bool[10] "temp"
    (2223237 'move' errorExists[2223232](2223234 '!=' error[1886500] nil[44]))
    if errorExists[2223232]
    {
      (1886516 '=' error_out[1886496] error[1886500])
      gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
    }
    val error[1886528]:Error[167984] "error variable" "temp"
    (1886537 'move' error[1886528] nil[44])
    const-ref call_tmp[1165259]:string[26] "dead after last mention" "maybe param" "temp"
    (1165261 'move' call_tmp[1165259](1165346 '.v' args[1882414] x0[1158738]))
    ref rvfRerefTmp[2196248]:channel(true,dynamic,false)[1061136] "temp"
    (2196252 'move' rvfRerefTmp[2196248](2196249 'set reference' this[1882412]))
    val rvfRerefTmp[2196303]:locale[28] "temp"
    (2196306 'move' rvfRerefTmp[2196303] origLocale[1882416])
    (1165270 call _writeOne[1165349] rvfRerefTmp[2196248] call_tmp[1165259] rvfRerefTmp[2196303] error[1886528])
    val errorExists[2223240]:bool[10] "temp"
    (2223245 'move' errorExists[2223240](2223242 '!=' error[1886528] nil[44]))
    if errorExists[2223240]
    {
      gotoErrorHandling handler[1886529] handler[1886529]
    }
    label handler[1886529]
    val errorExists[2223248]:bool[10] "temp"
    (2223253 'move' errorExists[2223248](2223250 '!=' error[1886528] nil[44]))
    if errorExists[2223248]
    {
      (1886544 '=' error_out[1886496] error[1886528])
      gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
    }
    val error[1886556]:Error[167984] "error variable" "temp"
    (1886565 'move' error[1886556] nil[44])
    const-ref call_tmp[1165291]:codepointIndex[28277] "dead after last mention" "maybe param" "temp"
    (1165293 'move' call_tmp[1165291](1174099 '.v' args[1882414] x1[1158740]))
    ref rvfRerefTmp[2196255]:channel(true,dynamic,false)[1061136] "temp"
    (2196259 'move' rvfRerefTmp[2196255](2196256 'set reference' this[1882412]))
    val rvfRerefTmp[2196309]:locale[28] "temp"
    (2196312 'move' rvfRerefTmp[2196309] origLocale[1882416])
    (1165302 call _writeOne[1174102] rvfRerefTmp[2196255] call_tmp[1165291] rvfRerefTmp[2196309] error[1886556])
    val errorExists[2223256]:bool[10] "temp"
    (2223261 'move' errorExists[2223256](2223258 '!=' error[1886556] nil[44]))
    if errorExists[2223256]
    {
      gotoErrorHandling handler[1886557] handler[1886557]
    }
    label handler[1886557]
    val errorExists[2223264]:bool[10] "temp"
    (2223269 'move' errorExists[2223264](2223266 '!=' error[1886556] nil[44]))
    if errorExists[2223264]
    {
      (1886572 '=' error_out[1886496] error[1886556])
      gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
    }
    val error[1886584]:Error[167984] "error variable" "temp"
    (1886593 'move' error[1886584] nil[44])
    const-ref call_tmp[1165323]:string[26] "dead after last mention" "maybe param" "temp"
    (1165325 'move' call_tmp[1165323](1175833 '.v' args[1882414] x2[1158742]))
    ref rvfRerefTmp[2196262]:channel(true,dynamic,false)[1061136] "temp"
    (2196266 'move' rvfRerefTmp[2196262](2196263 'set reference' this[1882412]))
    val rvfRerefTmp[2196315]:locale[28] "temp"
    (2196318 'move' rvfRerefTmp[2196315] origLocale[1882416])
    (1165334 call _writeOne[1165349] rvfRerefTmp[2196262] call_tmp[1165323] rvfRerefTmp[2196315] error[1886584])
    val errorExists[2223272]:bool[10] "temp"
    (2223277 'move' errorExists[2223272](2223274 '!=' error[1886584] nil[44]))
    if errorExists[2223272]
    {
      gotoErrorHandling handler[1886585] handler[1886585]
    }
    label handler[1886585]
    val errorExists[2223280]:bool[10] "temp"
    (2223285 'move' errorExists[2223280](2223282 '!=' error[1886584] nil[44]))
    if errorExists[2223280]
    {
      (1886600 '=' error_out[1886496] error[1886584])
      gotoErrorHandlingReturn _endon_fn[1886498] _endon_fn[1886498]
    }
    label _endon_fn[1886498]
    (1165199 return _void[55])
  }
  function on_fn[1180575](const in arg this[1882418]:channel(true,dynamic,false)[1061136], const  ref arg args[1882420]:(string,codepointIndex,string,int(64))[1176709], const in arg origLocale[1882422]:locale[28], ref arg error_out[1886993]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1886997]:Error[167984] "error variable" "temp"
    (1887006 'move' error[1886997] nil[44])
    ref rvfRerefTmp[2196328]:channel(true,dynamic,false)[1061136] "temp"
    (2196332 'move' rvfRerefTmp[2196328](2196329 'set reference' this[1882418]))
    const-val call_tmp[2391544]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391546 'move' call_tmp[2391544](2391549 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2391554]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391556 'move' coerce_tmp[2391554](2391558 '.v' this[1882418] _channel_internal[1061129]))
    const-val call_tmp[2391561]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391563 'move' call_tmp[2391561](2391565 'cast' c_void_ptr[149] coerce_tmp[2391554]))
    const-val call_tmp[2391568]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391570 'move' call_tmp[2391568](2391572 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2391575]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391577 'move' call_tmp[2391575](2391579 'ptr_eq' call_tmp[2391561] call_tmp[2391568]))
    if call_tmp[2391575]
    {
      const-val call_tmp[2391584]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2391586]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391588 'move' coerce_tmp[2391586](2391590 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2391593]:owned SystemError[1000427] "temp"
      (2391596 call fromSyserr[1017302] coerce_tmp[2391586] "Operation attempted on an invalid channel" ret_tmp[2391593])
      (2391600 'move' call_tmp[2391584] ret_tmp[2391593])
      val call_tmp[2391603]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2391605]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2391607]:owned Error[966647] "temp"
      ref i_x[2391609]:owned SystemError[1000427] "temp"
      (2391611 'move' i_x[2391609](2391613 'set reference' call_tmp[2391584]))
      ref i__retArg[2391615]:owned Error[966647] "temp"
      (2391617 'move' i__retArg[2391615](2391619 'set reference' ret_tmp[2391607]))
      val _formal_tmp_x[2391621]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2391623 'move' _formal_tmp_x[2391621] i_x[2391609])
      const-val ret[2391626]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2391628]:owned SystemError[1000427] "temp"
      (2391630 'move' i_this[2391628](2391632 'set reference' _formal_tmp_x[2391621]))
      val coerce_tmp[2391634]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2391636 'move' coerce_tmp[2391634](2391638 '.v' i_this[2391628] chpl_p[1000422]))
      val call_tmp[2391641]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391643 'move' call_tmp[2391641](2391645 'cast' Error[167984] coerce_tmp[2391634]))
      ref i_this[2391653]:owned SystemError[1000427] "temp"
      (2391655 'move' i_this[2391653](2391657 'set reference' _formal_tmp_x[2391621]))
      val tmp[2391659]:SystemError[264933] "temp"
      (2391661 'move' tmp[2391659](2391663 'cast' SystemError[264933] nil[44]))
      (2391666 '.=' i_this[2391653] chpl_p[1000422] tmp[2391659])
      val coerce_tmp[2391670]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391672 'move' coerce_tmp[2391670](2391674 'cast' object[22] call_tmp[2391641]))
      const-val call_tmp[2391677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391679 'move' call_tmp[2391677](2391681 'ptr_eq' coerce_tmp[2391670] nil[44]))
      if call_tmp[2391677]
      {
        (2391687 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2391690]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2391692]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2391695 call init[968283] initTemp[2391692] call_tmp[2391641])
      (2391698 'move' call_tmp[2391690] initTemp[2391692])
      (2391701 'move' ret[2391626] call_tmp[2391690])
      (2391705 call chpl__autoDestroy[1656343] _formal_tmp_x[2391621])
      (2391707 '=' i__retArg[2391615] ret[2391626])
      (2391710 'move' coerce_tmp[2391605] ret_tmp[2391607])
      const-val _formal_tmp_in_err[2391713]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2391715 'move' _formal_tmp_in_err[2391713] coerce_tmp[2391605])
      (2391718 'move' call_tmp[2391603](2391721 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2391713]))
      (2391723 '=' error[1886997] call_tmp[2391603])
      gotoErrorHandlingReturn _endlock[2391786] _endlock[2391786]
    }
    const-val call_tmp[2391729]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391731 'move' call_tmp[2391729](2391734 call qio_err_iserr[223734] call_tmp[2391544]))
    const-val call_tmp[2391736]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391738 'move' call_tmp[2391736](2391740 '!=' call_tmp[2391729] 0))
    if call_tmp[2391736]
    {
      val error[2391745]:Error[167984] "error variable" "temp"
      (2391747 'move' error[2391745] nil[44])
      (2391751 call _ch_ioerror[1063054] rvfRerefTmp[2196328] call_tmp[2391544] "in lock" error[2391745])
      val errorExists[2391756]:bool[10] "temp"
      (2391758 'move' errorExists[2391756](2391760 '!=' error[2391745] nil[44]))
      if errorExists[2391756]
      {
        gotoErrorHandling handler[2391768] handler[2391768]
      }
      label handler[2391768]
      val errorExists[2391770]:bool[10] "temp"
      (2391772 'move' errorExists[2391770](2391774 '!=' error[2391745] nil[44]))
      if errorExists[2391770]
      {
        (2391779 '=' error[1886997] error[2391745])
        gotoErrorHandlingReturn _endlock[2391786] _endlock[2391786]
      }
    }
    label _endlock[2391786]
    val errorExists[2223504]:bool[10] "temp"
    (2223509 'move' errorExists[2223504](2223506 '!=' error[1886997] nil[44]))
    if errorExists[2223504]
    {
      gotoErrorHandling handler[1886998] handler[1886998]
    }
    label handler[1886998]
    val errorExists[2223512]:bool[10] "temp"
    (2223517 'move' errorExists[2223512](2223514 '!=' error[1886997] nil[44]))
    if errorExists[2223512]
    {
      (1887013 '=' error_out[1886993] error[1886997])
      gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
    }
    val error[1887025]:Error[167984] "error variable" "temp"
    (1887034 'move' error[1887025] nil[44])
    const-ref call_tmp[1180744]:string[26] "dead after last mention" "maybe param" "temp"
    (1180746 'move' call_tmp[1180744](1180863 '.v' args[1882420] x0[1176701]))
    ref rvfRerefTmp[2196335]:channel(true,dynamic,false)[1061136] "temp"
    (2196339 'move' rvfRerefTmp[2196335](2196336 'set reference' this[1882418]))
    val rvfRerefTmp[2196404]:locale[28] "temp"
    (2196407 'move' rvfRerefTmp[2196404] origLocale[1882422])
    (1180755 call _writeOne[1165349] rvfRerefTmp[2196335] call_tmp[1180744] rvfRerefTmp[2196404] error[1887025])
    val errorExists[2223520]:bool[10] "temp"
    (2223525 'move' errorExists[2223520](2223522 '!=' error[1887025] nil[44]))
    if errorExists[2223520]
    {
      gotoErrorHandling handler[1887026] handler[1887026]
    }
    label handler[1887026]
    val errorExists[2223528]:bool[10] "temp"
    (2223533 'move' errorExists[2223528](2223530 '!=' error[1887025] nil[44]))
    if errorExists[2223528]
    {
      (1887041 '=' error_out[1886993] error[1887025])
      gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
    }
    val error[1887053]:Error[167984] "error variable" "temp"
    (1887062 'move' error[1887053] nil[44])
    const-ref call_tmp[1180776]:codepointIndex[28277] "dead after last mention" "maybe param" "temp"
    (1180778 'move' call_tmp[1180776](1180871 '.v' args[1882420] x1[1176703]))
    ref rvfRerefTmp[2196342]:channel(true,dynamic,false)[1061136] "temp"
    (2196346 'move' rvfRerefTmp[2196342](2196343 'set reference' this[1882418]))
    val rvfRerefTmp[2196410]:locale[28] "temp"
    (2196413 'move' rvfRerefTmp[2196410] origLocale[1882422])
    (1180787 call _writeOne[1174102] rvfRerefTmp[2196342] call_tmp[1180776] rvfRerefTmp[2196410] error[1887053])
    val errorExists[2223536]:bool[10] "temp"
    (2223541 'move' errorExists[2223536](2223538 '!=' error[1887053] nil[44]))
    if errorExists[2223536]
    {
      gotoErrorHandling handler[1887054] handler[1887054]
    }
    label handler[1887054]
    val errorExists[2223544]:bool[10] "temp"
    (2223549 'move' errorExists[2223544](2223546 '!=' error[1887053] nil[44]))
    if errorExists[2223544]
    {
      (1887069 '=' error_out[1886993] error[1887053])
      gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
    }
    val error[1887081]:Error[167984] "error variable" "temp"
    (1887090 'move' error[1887081] nil[44])
    const-ref call_tmp[1180808]:string[26] "dead after last mention" "maybe param" "temp"
    (1180810 'move' call_tmp[1180808](1180879 '.v' args[1882420] x2[1176705]))
    ref rvfRerefTmp[2196349]:channel(true,dynamic,false)[1061136] "temp"
    (2196353 'move' rvfRerefTmp[2196349](2196350 'set reference' this[1882418]))
    val rvfRerefTmp[2196416]:locale[28] "temp"
    (2196419 'move' rvfRerefTmp[2196416] origLocale[1882422])
    (1180819 call _writeOne[1165349] rvfRerefTmp[2196349] call_tmp[1180808] rvfRerefTmp[2196416] error[1887081])
    val errorExists[2223552]:bool[10] "temp"
    (2223557 'move' errorExists[2223552](2223554 '!=' error[1887081] nil[44]))
    if errorExists[2223552]
    {
      gotoErrorHandling handler[1887082] handler[1887082]
    }
    label handler[1887082]
    val errorExists[2223560]:bool[10] "temp"
    (2223565 'move' errorExists[2223560](2223562 '!=' error[1887081] nil[44]))
    if errorExists[2223560]
    {
      (1887097 '=' error_out[1886993] error[1887081])
      gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
    }
    val error[1887109]:Error[167984] "error variable" "temp"
    (1887118 'move' error[1887109] nil[44])
    const-val coerce_tmp[1180890]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1180894 'move' coerce_tmp[1180890](2567906 '.v' args[1882420] x3[1176707]))
    ref rvfRerefTmp[2196356]:channel(true,dynamic,false)[1061136] "temp"
    (2196360 'move' rvfRerefTmp[2196356](2196357 'set reference' this[1882418]))
    val rvfRerefTmp[2196422]:locale[28] "temp"
    (2196425 'move' rvfRerefTmp[2196422] origLocale[1882422])
    (1180851 call _writeOne[1069126] rvfRerefTmp[2196356] coerce_tmp[1180890] rvfRerefTmp[2196422] error[1887109])
    val errorExists[2223568]:bool[10] "temp"
    (2223573 'move' errorExists[2223568](2223570 '!=' error[1887109] nil[44]))
    if errorExists[2223568]
    {
      gotoErrorHandling handler[1887110] handler[1887110]
    }
    label handler[1887110]
    val errorExists[2223576]:bool[10] "temp"
    (2223581 'move' errorExists[2223576](2223578 '!=' error[1887109] nil[44]))
    if errorExists[2223576]
    {
      (1887125 '=' error_out[1886993] error[1887109])
      gotoErrorHandlingReturn _endon_fn[1886995] _endon_fn[1886995]
    }
    label _endon_fn[1886995]
    (1180678 return _void[55])
  }
  function on_fn[1552156](const in arg this[1882706]:channel(true,dynamic,true)[1022014], const  ref arg args[1882708]:([domain(1,int(64),false)] real(64),ioNewline)[1552281], const in arg origLocale[1882710]:locale[28], ref arg error_out[1887921]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1887925]:Error[167984] "error variable" "temp"
    (1887934 'move' error[1887925] nil[44])
    ref rvfRerefTmp[2196680]:channel(true,dynamic,true)[1022014] "temp"
    (2196684 'move' rvfRerefTmp[2196680](2196681 'set reference' this[1882706]))
    val err[2506534]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2506536]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506538 'move' call_tmp[2506536](2506541 call qio_int_to_err[223722] 0))
    (2506543 'move' err[2506534] call_tmp[2506536])
    const-val coerce_tmp[2506546]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506548 'move' coerce_tmp[2506546](2506550 '.v' this[1882706] _channel_internal[1022007]))
    const-val call_tmp[2506553]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506555 'move' call_tmp[2506553](2506557 'cast' c_void_ptr[149] coerce_tmp[2506546]))
    const-val call_tmp[2506560]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506562 'move' call_tmp[2506560](2506564 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2506567]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506569 'move' call_tmp[2506567](2506571 'ptr_eq' call_tmp[2506553] call_tmp[2506560]))
    if call_tmp[2506567]
    {
      const-val call_tmp[2506576]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2506578]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2506580 'move' coerce_tmp[2506578](2506582 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2506585]:owned SystemError[1000427] "temp"
      (2506588 call fromSyserr[1017302] coerce_tmp[2506578] "Operation attempted on an invalid channel" ret_tmp[2506585])
      (2506592 'move' call_tmp[2506576] ret_tmp[2506585])
      val call_tmp[2506595]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2506597]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2506599]:owned Error[966647] "temp"
      ref i_x[2506601]:owned SystemError[1000427] "temp"
      (2506603 'move' i_x[2506601](2506605 'set reference' call_tmp[2506576]))
      ref i__retArg[2506607]:owned Error[966647] "temp"
      (2506609 'move' i__retArg[2506607](2506611 'set reference' ret_tmp[2506599]))
      val _formal_tmp_x[2506613]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2506615 'move' _formal_tmp_x[2506613] i_x[2506601])
      const-val ret[2506618]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2506620]:owned SystemError[1000427] "temp"
      (2506622 'move' i_this[2506620](2506624 'set reference' _formal_tmp_x[2506613]))
      val coerce_tmp[2506626]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2506628 'move' coerce_tmp[2506626](2506630 '.v' i_this[2506620] chpl_p[1000422]))
      val call_tmp[2506633]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2506635 'move' call_tmp[2506633](2506637 'cast' Error[167984] coerce_tmp[2506626]))
      ref i_this[2506645]:owned SystemError[1000427] "temp"
      (2506647 'move' i_this[2506645](2506649 'set reference' _formal_tmp_x[2506613]))
      val tmp[2506651]:SystemError[264933] "temp"
      (2506653 'move' tmp[2506651](2506655 'cast' SystemError[264933] nil[44]))
      (2506658 '.=' i_this[2506645] chpl_p[1000422] tmp[2506651])
      val coerce_tmp[2506662]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2506664 'move' coerce_tmp[2506662](2506666 'cast' object[22] call_tmp[2506633]))
      const-val call_tmp[2506669]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2506671 'move' call_tmp[2506669](2506673 'ptr_eq' coerce_tmp[2506662] nil[44]))
      if call_tmp[2506669]
      {
        (2506679 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2506682]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2506684]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2506687 call init[968283] initTemp[2506684] call_tmp[2506633])
      (2506690 'move' call_tmp[2506682] initTemp[2506684])
      (2506693 'move' ret[2506618] call_tmp[2506682])
      (2506697 call chpl__autoDestroy[1656343] _formal_tmp_x[2506613])
      (2506699 '=' i__retArg[2506607] ret[2506618])
      (2506702 'move' coerce_tmp[2506597] ret_tmp[2506599])
      const-val _formal_tmp_in_err[2506705]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2506707 'move' _formal_tmp_in_err[2506705] coerce_tmp[2506597])
      (2506710 'move' call_tmp[2506595](2506713 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2506705]))
      (2506715 '=' error[1887925] call_tmp[2506595])
      gotoErrorHandlingReturn _endlock[2506886] _endlock[2506886]
    }
    ref call_tmp[2506723]:locale[28] "dead after last mention" "maybe param" "temp"
    (2506725 'move' call_tmp[2506723](2506727 '.' this[1882706] home[1022002]))
    const-val call_tmp[2506730]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2506732]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506734 'move' coerce_tmp[2506732](2506736 '.v' call_tmp[2506723] _instance[89978]))
    val coerce_tmp[2506739]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506741 'move' coerce_tmp[2506739](2506743 'cast' object[22] coerce_tmp[2506732]))
    const-val call_tmp[2506746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506748 'move' call_tmp[2506746](2506750 'ptr_eq' coerce_tmp[2506739] nil[44]))
    if call_tmp[2506746]
    {
      (2506756 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2506759 'move' call_tmp[2506730](2506761 '_wide_get_locale' coerce_tmp[2506732]))
    val rvfDerefTmp[2506766]:channel(true,dynamic,true)[1022014] "temp"
    (2506768 'move' rvfDerefTmp[2506766] this[1882706])
    val isdirect[2506772]:bool[10] "temp"
    (2506774 'move' isdirect[2506772](2506777 call chpl_doDirectExecuteOn[187469] call_tmp[2506730]))
    if isdirect[2506772]
    {
      (2506782 call on_fn[1552598] rvfDerefTmp[2506766] err[2506534])
    }
    {
      val _args_foron_fn[2506786]:_class_localson_fn[2208683] "temp"
      (2506788 'move' _args_foron_fn[2506786](2506790 'stack allocate class' _class_localson_fn[2208683]))
      (2506792 '.=' _args_foron_fn[2506786] _0_tmp[2208686] call_tmp[2506730])
      (2506796 '.=' _args_foron_fn[2506786] _1_rvfDerefTmp[2208688] rvfDerefTmp[2506766])
      ref tmp[2506800]:syserr[223672] "temp"
      (2506802 'move' tmp[2506800](2506804 'set reference' err[2506534]))
      (2506806 '.=' _args_foron_fn[2506786] _2_err[2208690] tmp[2506800])
      val _args_vforon_fn[2506810]:c_void_ptr[149] "temp"
      (2506812 'move' _args_vforon_fn[2506810](2506814 'cast_to_void_star' _args_foron_fn[2506786]))
      val _args_sizeon_fn[2506816]:int(64)[13] "temp"
      (2506818 'move' _args_sizeon_fn[2506816](2506820 'sizeof_bundle' _class_localson_fn[2208683]))
      on(2506823 call wrapon_fn[2208729] call_tmp[2506730] _args_vforon_fn[2506810] _args_sizeon_fn[2506816] _args_foron_fn[2506786])
    }
    const-val call_tmp[2506829]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506831 'move' call_tmp[2506829](2506834 call qio_err_iserr[223734] err[2506534]))
    const-val call_tmp[2506836]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506838 'move' call_tmp[2506836](2506840 '!=' call_tmp[2506829] 0))
    if call_tmp[2506836]
    {
      val error[2506845]:Error[167984] "error variable" "temp"
      (2506847 'move' error[2506845] nil[44])
      (2506851 call _ch_ioerror[1552948] rvfRerefTmp[2196680] err[2506534] "in lock" error[2506845])
      val errorExists[2506856]:bool[10] "temp"
      (2506858 'move' errorExists[2506856](2506860 '!=' error[2506845] nil[44]))
      if errorExists[2506856]
      {
        gotoErrorHandling handler[2506868] handler[2506868]
      }
      label handler[2506868]
      val errorExists[2506870]:bool[10] "temp"
      (2506872 'move' errorExists[2506870](2506874 '!=' error[2506845] nil[44]))
      if errorExists[2506870]
      {
        (2506879 '=' error[1887925] error[2506845])
        gotoErrorHandlingReturn _endlock[2506886] _endlock[2506886]
      }
    }
    label _endlock[2506886]
    val errorExists[2223952]:bool[10] "temp"
    (2223957 'move' errorExists[2223952](2223954 '!=' error[1887925] nil[44]))
    if errorExists[2223952]
    {
      gotoErrorHandling handler[1887926] handler[1887926]
    }
    label handler[1887926]
    val errorExists[2223960]:bool[10] "temp"
    (2223965 'move' errorExists[2223960](2223962 '!=' error[1887925] nil[44]))
    if errorExists[2223960]
    {
      (1887941 '=' error_out[1887921] error[1887925])
      gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
    }
    val error[1887953]:Error[167984] "error variable" "temp"
    (1887962 'move' error[1887953] nil[44])
    const-val call_tmp[1553364]:[domain(1,int(64),false)] real(64)[1366029] "dead after last mention" "maybe param" "temp"
    (1553366 'move' call_tmp[1553364](1553472 '.v' args[1882708] x0[1552277]))
    ref rvfRerefTmp[2196687]:channel(true,dynamic,true)[1022014] "temp"
    (2196691 'move' rvfRerefTmp[2196687](2196688 'set reference' this[1882706]))
    val rvfRerefTmp[2196728]:locale[28] "temp"
    (2196731 'move' rvfRerefTmp[2196728] origLocale[1882710])
    (1553375 call _writeOne[1553475] rvfRerefTmp[2196687] call_tmp[1553364] rvfRerefTmp[2196728] error[1887953])
    val errorExists[2223968]:bool[10] "temp"
    (2223973 'move' errorExists[2223968](2223970 '!=' error[1887953] nil[44]))
    if errorExists[2223968]
    {
      gotoErrorHandling handler[1887954] handler[1887954]
    }
    label handler[1887954]
    val errorExists[2223976]:bool[10] "temp"
    (2223981 'move' errorExists[2223976](2223978 '!=' error[1887953] nil[44]))
    if errorExists[2223976]
    {
      (1887969 '=' error_out[1887921] error[1887953])
      ref call_tmp[2507260]:locale[28] "dead after last mention" "maybe param" "temp"
      (2507262 'move' call_tmp[2507260](2507264 '.' this[1882706] home[1022002]))
      const-val call_tmp[2507267]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2507269]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507271 'move' coerce_tmp[2507269](2507273 '.v' call_tmp[2507260] _instance[89978]))
      val coerce_tmp[2507276]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507278 'move' coerce_tmp[2507276](2507280 'cast' object[22] coerce_tmp[2507269]))
      const-val call_tmp[2507283]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2507285 'move' call_tmp[2507283](2507287 'ptr_eq' coerce_tmp[2507276] nil[44]))
      if call_tmp[2507283]
      {
        (2507293 call nilCheckHalt[210238] "argument to ! is nil")
      }
      (2507296 'move' call_tmp[2507267](2507298 '_wide_get_locale' coerce_tmp[2507269]))
      val rvfDerefTmp[2507303]:channel(true,dynamic,true)[1022014] "temp"
      (2507305 'move' rvfDerefTmp[2507303] this[1882706])
      val isdirect[2507309]:bool[10] "temp"
      (2507311 'move' isdirect[2507309](2507314 call chpl_doDirectExecuteOn[187469] call_tmp[2507267]))
      if isdirect[2507309]
      {
        (2507319 call on_fn[1553289] rvfDerefTmp[2507303])
      }
      {
        val _args_foron_fn[2507322]:_class_localson_fn[2208936] "temp"
        (2507324 'move' _args_foron_fn[2507322](2507326 'stack allocate class' _class_localson_fn[2208936]))
        (2507328 '.=' _args_foron_fn[2507322] _0_tmp[2208939] call_tmp[2507267])
        (2507332 '.=' _args_foron_fn[2507322] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507303])
        val _args_vforon_fn[2507336]:c_void_ptr[149] "temp"
        (2507338 'move' _args_vforon_fn[2507336](2507340 'cast_to_void_star' _args_foron_fn[2507322]))
        val _args_sizeon_fn[2507342]:int(64)[13] "temp"
        (2507344 'move' _args_sizeon_fn[2507342](2507346 'sizeof_bundle' _class_localson_fn[2208936]))
        on(2507349 call wrapon_fn[2208970] call_tmp[2507267] _args_vforon_fn[2507336] _args_sizeon_fn[2507342] _args_foron_fn[2507322])
      }
      gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
    }
    val error[1887981]:Error[167984] "error variable" "temp"
    (1887990 'move' error[1887981] nil[44])
    const-ref call_tmp[1553396]:ioNewline[238789] "dead after last mention" "maybe param" "temp"
    (1553398 'move' call_tmp[1553396](1586282 '.v' args[1882708] x1[1552279]))
    ref rvfRerefTmp[2196694]:channel(true,dynamic,true)[1022014] "temp"
    (2196698 'move' rvfRerefTmp[2196694](2196695 'set reference' this[1882706]))
    val rvfRerefTmp[2196734]:locale[28] "temp"
    (2196737 'move' rvfRerefTmp[2196734] origLocale[1882710])
    (1553407 call _writeOne[1586285] rvfRerefTmp[2196694] call_tmp[1553396] rvfRerefTmp[2196734] error[1887981])
    val errorExists[2223984]:bool[10] "temp"
    (2223989 'move' errorExists[2223984](2223986 '!=' error[1887981] nil[44]))
    if errorExists[2223984]
    {
      gotoErrorHandling handler[1887982] handler[1887982]
    }
    label handler[1887982]
    val errorExists[2223992]:bool[10] "temp"
    (2223997 'move' errorExists[2223992](2223994 '!=' error[1887981] nil[44]))
    if errorExists[2223992]
    {
      (1887997 '=' error_out[1887921] error[1887981])
      ref call_tmp[2507360]:locale[28] "dead after last mention" "maybe param" "temp"
      (2507362 'move' call_tmp[2507360](2507364 '.' this[1882706] home[1022002]))
      const-val call_tmp[2507367]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2507369]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507371 'move' coerce_tmp[2507369](2507373 '.v' call_tmp[2507360] _instance[89978]))
      val coerce_tmp[2507376]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507378 'move' coerce_tmp[2507376](2507380 'cast' object[22] coerce_tmp[2507369]))
      const-val call_tmp[2507383]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2507385 'move' call_tmp[2507383](2507387 'ptr_eq' coerce_tmp[2507376] nil[44]))
      if call_tmp[2507383]
      {
        (2507393 call nilCheckHalt[210238] "argument to ! is nil")
      }
      (2507396 'move' call_tmp[2507367](2507398 '_wide_get_locale' coerce_tmp[2507369]))
      val rvfDerefTmp[2507403]:channel(true,dynamic,true)[1022014] "temp"
      (2507405 'move' rvfDerefTmp[2507403] this[1882706])
      val isdirect[2507409]:bool[10] "temp"
      (2507411 'move' isdirect[2507409](2507414 call chpl_doDirectExecuteOn[187469] call_tmp[2507367]))
      if isdirect[2507409]
      {
        (2507419 call on_fn[1553289] rvfDerefTmp[2507403])
      }
      {
        val _args_foron_fn[2507422]:_class_localson_fn[2208936] "temp"
        (2507424 'move' _args_foron_fn[2507422](2507426 'stack allocate class' _class_localson_fn[2208936]))
        (2507428 '.=' _args_foron_fn[2507422] _0_tmp[2208939] call_tmp[2507367])
        (2507432 '.=' _args_foron_fn[2507422] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507403])
        val _args_vforon_fn[2507436]:c_void_ptr[149] "temp"
        (2507438 'move' _args_vforon_fn[2507436](2507440 'cast_to_void_star' _args_foron_fn[2507422]))
        val _args_sizeon_fn[2507442]:int(64)[13] "temp"
        (2507444 'move' _args_sizeon_fn[2507442](2507446 'sizeof_bundle' _class_localson_fn[2208936]))
        on(2507449 call wrapon_fn[2208970] call_tmp[2507367] _args_vforon_fn[2507436] _args_sizeon_fn[2507442] _args_foron_fn[2507422])
      }
      gotoErrorHandlingReturn _endon_fn[1887923] _endon_fn[1887923]
    }
    ref call_tmp[2507460]:locale[28] "dead after last mention" "maybe param" "temp"
    (2507462 'move' call_tmp[2507460](2507464 '.' this[1882706] home[1022002]))
    const-val call_tmp[2507467]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2507469]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507471 'move' coerce_tmp[2507469](2507473 '.v' call_tmp[2507460] _instance[89978]))
    val coerce_tmp[2507476]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507478 'move' coerce_tmp[2507476](2507480 'cast' object[22] coerce_tmp[2507469]))
    const-val call_tmp[2507483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507485 'move' call_tmp[2507483](2507487 'ptr_eq' coerce_tmp[2507476] nil[44]))
    if call_tmp[2507483]
    {
      (2507493 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2507496 'move' call_tmp[2507467](2507498 '_wide_get_locale' coerce_tmp[2507469]))
    val rvfDerefTmp[2507503]:channel(true,dynamic,true)[1022014] "temp"
    (2507505 'move' rvfDerefTmp[2507503] this[1882706])
    val isdirect[2507509]:bool[10] "temp"
    (2507511 'move' isdirect[2507509](2507514 call chpl_doDirectExecuteOn[187469] call_tmp[2507467]))
    if isdirect[2507509]
    {
      (2507519 call on_fn[1553289] rvfDerefTmp[2507503])
    }
    {
      val _args_foron_fn[2507522]:_class_localson_fn[2208936] "temp"
      (2507524 'move' _args_foron_fn[2507522](2507526 'stack allocate class' _class_localson_fn[2208936]))
      (2507528 '.=' _args_foron_fn[2507522] _0_tmp[2208939] call_tmp[2507467])
      (2507532 '.=' _args_foron_fn[2507522] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507503])
      val _args_vforon_fn[2507536]:c_void_ptr[149] "temp"
      (2507538 'move' _args_vforon_fn[2507536](2507540 'cast_to_void_star' _args_foron_fn[2507522]))
      val _args_sizeon_fn[2507542]:int(64)[13] "temp"
      (2507544 'move' _args_sizeon_fn[2507542](2507546 'sizeof_bundle' _class_localson_fn[2208936]))
      on(2507549 call wrapon_fn[2208970] call_tmp[2507467] _args_vforon_fn[2507536] _args_sizeon_fn[2507542] _args_foron_fn[2507522])
    }
    label _endon_fn[1887923]
    (1552259 return _void[55])
  }
  function on_fn[1552598](const in arg this[1882712]:channel(true,dynamic,true)[1022014], ref arg err[1882714]:syserr[223672]) : void[4] "inlined function" "on" "resolved"
  {
    const-val call_tmp[1552612]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1552939]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1552943 'move' coerce_tmp[1552939](2572196 '.v' this[1882712] _channel_internal[1022007]))
    (1552614 'move' call_tmp[1552612](1552617 call qio_channel_lock[233095] coerce_tmp[1552939]))
    (2329079 '=' err[1882714] call_tmp[1552612])
    (1552625 return _void[55])
  }
  function on_fn[1553015](const in arg this[1882716]:channel(true,dynamic,true)[1022014], ref arg path[1882718]:string[26], ref arg offset[1882720]:int(64)[13], ref arg error_out[1888101]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val tmp_path[1553021]:c_string[19] "dead at end of block" "insert auto destroy"
    (1553222 'move' tmp_path[1553021](1553220 'cast' c_string[19] nil[44]))
    val tmp_offset[1553027]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1553225 'move' tmp_offset[1553027] 0)
    (2329779 call qio_int_to_err[223722] 0)
    const-val call_tmp[1553069]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1553177]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1553183 'move' coerce_tmp[1553177](1553179 'cast' int(32)[95] 1))
    const-val coerce_tmp[1553185]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1553189 'move' coerce_tmp[1553185](2572209 '.v' this[1882716] _channel_internal[1022007]))
    (1553071 'move' call_tmp[1553069](1553074 call qio_channel_path_offset[233012] coerce_tmp[1553177] coerce_tmp[1553185] tmp_path[1553021] tmp_offset[1553027]))
    const-val call_tmp[2328442]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328444 'move' call_tmp[2328442](2328447 call qio_err_iserr[223734] call_tmp[1553069]))
    const-val call_tmp[2328449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2328451 'move' call_tmp[2328449](2328453 '==' call_tmp[2328442] 0))
    if call_tmp[2328449]
    {
      const-val call_tmp[1553103]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[1888106]:Error[167984] "error variable" "temp"
      (1888108 'move' error[1888106] nil[44])
      const-val call_tmp[2325367]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2325369 'move' call_tmp[2325367](2325371 'string_length_bytes' tmp_path[1553021]))
      val errorExists[2224040]:bool[10] "temp"
      (2224045 'move' errorExists[2224040](2224042 '!=' error[1888106] nil[44]))
      if errorExists[2224040]
      {
        (1888112 '=' error_out[1888101] error[1888106])
        gotoErrorHandlingReturn _endon_fn[1888103] _endon_fn[1888103]
      }
      val error[1888121]:Error[167984] "error variable" "temp"
      (1888123 'move' error[1888121] nil[44])
      const-val ret[2258913]:string[26] "dead after last mention" "RVV" "temp"
      val call_tmp[2258915]:c_ptr(uint(8))[937612] "dead after last mention" "expr temp" "maybe param" "temp"
      (2258917 'move' call_tmp[2258915](2258919 'cast' c_ptr(uint(8))[937612] tmp_path[1553021]))
      val error[2258924]:Error[167984] "error variable" "temp"
      (2258926 'move' error[2258924] nil[44])
      const-val ret[2258929]:string[26] "dead after last mention" "RVV" "temp"
      const-val call_tmp[2258931]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      val error[2258933]:Error[167984] "error variable" "temp"
      (2258935 'move' error[2258933] nil[44])
      const-val ret_tmp[2258938]:string[26] "temp"
      (2258941 call decodeByteBuffer[173938] call_tmp[2258915] call_tmp[2325367] replace[173694] error[2258933] ret_tmp[2258938])
      (2258947 'move' call_tmp[2258931] ret_tmp[2258938])
      val errorExists[2258950]:bool[10] "temp"
      (2258952 'move' errorExists[2258950](2258954 '!=' error[2258933] nil[44]))
      if errorExists[2258950]
      {
        (2258959 '=' error[2258924] error[2258933])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258968] _endcreateStringWithNewBuffer[2258968]
      }
      (2258965 'move' ret[2258929] call_tmp[2258931])
      label _endcreateStringWithNewBuffer[2258968]
      val errorExists[2258973]:bool[10] "temp"
      (2258975 'move' errorExists[2258973](2258977 '!=' error[2258924] nil[44]))
      if errorExists[2258973]
      {
        (2258982 '=' error[1888121] error[2258924])
        gotoErrorHandlingReturn _endcreateStringWithNewBuffer[2258991] _endcreateStringWithNewBuffer[2258991]
      }
      (2258988 'move' ret[2258913] ret[2258929])
      label _endcreateStringWithNewBuffer[2258991]
      (1904871 'move' call_tmp[1553103] ret[2258913])
      val errorExists[2224048]:bool[10] "temp"
      (2224053 'move' errorExists[2224048](2224050 '!=' error[1888121] nil[44]))
      if errorExists[2224048]
      {
        (1888127 '=' error_out[1888101] error[1888121])
        gotoErrorHandlingReturn _endon_fn[1888103] _endon_fn[1888103]
      }
      (1553113 call =[38272] path[1882718] call_tmp[1553103])
      ref i_x[2249345]:string[26] "temp"
      (2249349 'move' i_x[2249345](2249347 'set reference' call_tmp[1553103]))
      (2249353 call deinit[30834] i_x[2249345])
      ref i_cs[2235880]:c_string[19] "temp"
      (2235884 'move' i_cs[2235880](2235882 'set reference' tmp_path[1553021]))
      const-val call_tmp[2235887]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235889 'move' call_tmp[2235887](2235891 'cast' c_void_ptr[149] nil[44]))
      const-val call_tmp[2235894]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235896 'move' call_tmp[2235894](2235898 'cast' c_string[19] call_tmp[2235887]))
      const-val coerce_tmp[2235901]:c_string[19] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2235903 'move' coerce_tmp[2235901] tmp_path[1553021])
      const-val call_tmp[2235907]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235909 'move' call_tmp[2235907](2235911 'string_compare' coerce_tmp[2235901] call_tmp[2235894]))
      const-val call_tmp[2235914]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2235916 'move' call_tmp[2235914](2235918 '!=' call_tmp[2235907] 0))
      if call_tmp[2235914]
      {
        (2235924 call chpl_rt_free_c_string[22717] i_cs[2235880])
      }
      (2238381 '=' offset[1882720] tmp_offset[1553027])
    }
    label _endon_fn[1888103]
    (1553132 return _void[55])
  }
  function on_fn[1553289](const in arg this[1882722]:channel(true,dynamic,true)[1022014]) : void[4] "inlined function" "on" "resolved"
  {
    const-val coerce_tmp[1553330]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1553334 'move' coerce_tmp[1553330](2572221 '.v' this[1882722] _channel_internal[1022007]))
    (1553304 call qio_channel_unlock[233107] coerce_tmp[1553330])
    (1553306 return _void[55])
  }
  function on_fn[1559293](const  ref arg this[1882732]:channel(true,dynamic,false)[1061136], const in arg element[1882734]:int(64)[13], ref arg ret[1882736]:int(64)[13]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1559307]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1559353]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1559357 'move' coerce_tmp[1559353](2572291 '.v' this[1882732] _channel_internal[1061129]))
    (1559309 'move' call_tmp[1559307](1559312 call qio_channel_style_element[233190] coerce_tmp[1559353] element[1882734]))
    (2238387 '=' ret[1882736] call_tmp[1559307])
    (1559321 return _void[55])
  }
  function on_fn[1559671](const  ref arg this[1882738]:channel(true,dynamic,false)[1061136], ref arg ret[1882740]:uint(8)[100]) : void[4] "on" "resolved"
  {
    const-val call_tmp[1559685]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1559738]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1559742 'move' coerce_tmp[1559738](2572302 '.v' this[1882738] _channel_internal[1061129]))
    (1559687 'move' call_tmp[1559685](1559690 call qio_channel_binary[233145] coerce_tmp[1559738]))
    (2317548 '=' ret[1882740] call_tmp[1559685])
    (1559698 return _void[55])
  }
  function on_fn[1565038](const  ref arg this[1882742]:channel(true,dynamic,false)[1061136], const in arg x[1882744]:_ddata(real(64))[1358105], const in arg len[1882746]:int(64)[13], ref arg err[1882748]:syserr[223672], ref arg error_out[1888643]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1888647]:Error[167984] "error variable" "temp"
    (1888656 'move' error[1888647] nil[44])
    const-val call_tmp[2391799]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391801 'move' call_tmp[2391799](2391804 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2391809]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2391811 'move' coerce_tmp[2391809](2391813 '.v' this[1882742] _channel_internal[1061129]))
    const-val call_tmp[2391816]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391818 'move' call_tmp[2391816](2391820 'cast' c_void_ptr[149] coerce_tmp[2391809]))
    const-val call_tmp[2391823]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391825 'move' call_tmp[2391823](2391827 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2391830]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391832 'move' call_tmp[2391830](2391834 'ptr_eq' call_tmp[2391816] call_tmp[2391823]))
    if call_tmp[2391830]
    {
      const-val call_tmp[2391839]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2391841]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391843 'move' coerce_tmp[2391841](2391845 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2391848]:owned SystemError[1000427] "temp"
      (2391851 call fromSyserr[1017302] coerce_tmp[2391841] "Operation attempted on an invalid channel" ret_tmp[2391848])
      (2391855 'move' call_tmp[2391839] ret_tmp[2391848])
      val call_tmp[2391858]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2391860]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2391862]:owned Error[966647] "temp"
      ref i_x[2391864]:owned SystemError[1000427] "temp"
      (2391866 'move' i_x[2391864](2391868 'set reference' call_tmp[2391839]))
      ref i__retArg[2391870]:owned Error[966647] "temp"
      (2391872 'move' i__retArg[2391870](2391874 'set reference' ret_tmp[2391862]))
      val _formal_tmp_x[2391876]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2391878 'move' _formal_tmp_x[2391876] i_x[2391864])
      const-val ret[2391881]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2391883]:owned SystemError[1000427] "temp"
      (2391885 'move' i_this[2391883](2391887 'set reference' _formal_tmp_x[2391876]))
      val coerce_tmp[2391889]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2391891 'move' coerce_tmp[2391889](2391893 '.v' i_this[2391883] chpl_p[1000422]))
      val call_tmp[2391896]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391898 'move' call_tmp[2391896](2391900 'cast' Error[167984] coerce_tmp[2391889]))
      ref i_this[2391908]:owned SystemError[1000427] "temp"
      (2391910 'move' i_this[2391908](2391912 'set reference' _formal_tmp_x[2391876]))
      val tmp[2391914]:SystemError[264933] "temp"
      (2391916 'move' tmp[2391914](2391918 'cast' SystemError[264933] nil[44]))
      (2391921 '.=' i_this[2391908] chpl_p[1000422] tmp[2391914])
      val coerce_tmp[2391925]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2391927 'move' coerce_tmp[2391925](2391929 'cast' object[22] call_tmp[2391896]))
      const-val call_tmp[2391932]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2391934 'move' call_tmp[2391932](2391936 'ptr_eq' coerce_tmp[2391925] nil[44]))
      if call_tmp[2391932]
      {
        (2391942 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2391945]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2391947]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2391950 call init[968283] initTemp[2391947] call_tmp[2391896])
      (2391953 'move' call_tmp[2391945] initTemp[2391947])
      (2391956 'move' ret[2391881] call_tmp[2391945])
      (2391960 call chpl__autoDestroy[1656343] _formal_tmp_x[2391876])
      (2391962 '=' i__retArg[2391870] ret[2391881])
      (2391965 'move' coerce_tmp[2391860] ret_tmp[2391862])
      const-val _formal_tmp_in_err[2391968]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2391970 'move' _formal_tmp_in_err[2391968] coerce_tmp[2391860])
      (2391973 'move' call_tmp[2391858](2391976 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2391968]))
      (2391978 '=' error[1888647] call_tmp[2391858])
      gotoErrorHandlingReturn _endlock[2392041] _endlock[2392041]
    }
    const-val call_tmp[2391984]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391986 'move' call_tmp[2391984](2391989 call qio_err_iserr[223734] call_tmp[2391799]))
    const-val call_tmp[2391991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2391993 'move' call_tmp[2391991](2391995 '!=' call_tmp[2391984] 0))
    if call_tmp[2391991]
    {
      val error[2392000]:Error[167984] "error variable" "temp"
      (2392002 'move' error[2392000] nil[44])
      (2392006 call _ch_ioerror[1063054] this[1882742] call_tmp[2391799] "in lock" error[2392000])
      val errorExists[2392011]:bool[10] "temp"
      (2392013 'move' errorExists[2392011](2392015 '!=' error[2392000] nil[44]))
      if errorExists[2392011]
      {
        gotoErrorHandling handler[2392023] handler[2392023]
      }
      label handler[2392023]
      val errorExists[2392025]:bool[10] "temp"
      (2392027 'move' errorExists[2392025](2392029 '!=' error[2392000] nil[44]))
      if errorExists[2392025]
      {
        (2392034 '=' error[1888647] error[2392000])
        gotoErrorHandlingReturn _endlock[2392041] _endlock[2392041]
      }
    }
    label _endlock[2392041]
    val errorExists[2224248]:bool[10] "temp"
    (2224253 'move' errorExists[2224248](2224250 '!=' error[1888647] nil[44]))
    if errorExists[2224248]
    {
      gotoErrorHandling handler[1888648] handler[1888648]
    }
    label handler[1888648]
    val errorExists[2224256]:bool[10] "temp"
    (2224261 'move' errorExists[2224256](2224258 '!=' error[1888647] nil[44]))
    if errorExists[2224256]
    {
      (1888663 '=' error_out[1888643] error[1888647])
      gotoErrorHandlingReturn _endon_fn[1888645] _endon_fn[1888645]
    }
    const-val call_tmp[1565066]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1565183]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1565189 'move' coerce_tmp[1565183](1565185 'cast' int(32)[95] 0))
    const-val coerce_tmp[1565191]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1565195 'move' coerce_tmp[1565191](2572339 '.v' this[1882742] _channel_internal[1061129]))
    (1565068 'move' call_tmp[1565066](1565071 call qio_channel_write_amt[1565157] coerce_tmp[1565183] coerce_tmp[1565191] x[1882744] len[1882746]))
    (2329097 '=' err[1882748] call_tmp[1565066])
    label _endon_fn[1888645]
    (1565082 return _void[55])
  }
  function on_fn[1565680](const  ref arg this[1882750]:channel(true,dynamic,false)[1061136], const in arg x[1882752]:ioLiteral[238841], const in arg origLocale[1882754]:locale[28], ref arg error_out[1888758]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1888762]:Error[167984] "error variable" "temp"
    (1888771 'move' error[1888762] nil[44])
    const-val call_tmp[2392054]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392056 'move' call_tmp[2392054](2392059 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2392064]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2392066 'move' coerce_tmp[2392064](2392068 '.v' this[1882750] _channel_internal[1061129]))
    const-val call_tmp[2392071]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392073 'move' call_tmp[2392071](2392075 'cast' c_void_ptr[149] coerce_tmp[2392064]))
    const-val call_tmp[2392078]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392080 'move' call_tmp[2392078](2392082 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2392085]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392087 'move' call_tmp[2392085](2392089 'ptr_eq' call_tmp[2392071] call_tmp[2392078]))
    if call_tmp[2392085]
    {
      const-val call_tmp[2392094]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2392096]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2392098 'move' coerce_tmp[2392096](2392100 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2392103]:owned SystemError[1000427] "temp"
      (2392106 call fromSyserr[1017302] coerce_tmp[2392096] "Operation attempted on an invalid channel" ret_tmp[2392103])
      (2392110 'move' call_tmp[2392094] ret_tmp[2392103])
      val call_tmp[2392113]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2392115]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2392117]:owned Error[966647] "temp"
      ref i_x[2392119]:owned SystemError[1000427] "temp"
      (2392121 'move' i_x[2392119](2392123 'set reference' call_tmp[2392094]))
      ref i__retArg[2392125]:owned Error[966647] "temp"
      (2392127 'move' i__retArg[2392125](2392129 'set reference' ret_tmp[2392117]))
      val _formal_tmp_x[2392131]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2392133 'move' _formal_tmp_x[2392131] i_x[2392119])
      const-val ret[2392136]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2392138]:owned SystemError[1000427] "temp"
      (2392140 'move' i_this[2392138](2392142 'set reference' _formal_tmp_x[2392131]))
      val coerce_tmp[2392144]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2392146 'move' coerce_tmp[2392144](2392148 '.v' i_this[2392138] chpl_p[1000422]))
      val call_tmp[2392151]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2392153 'move' call_tmp[2392151](2392155 'cast' Error[167984] coerce_tmp[2392144]))
      ref i_this[2392163]:owned SystemError[1000427] "temp"
      (2392165 'move' i_this[2392163](2392167 'set reference' _formal_tmp_x[2392131]))
      val tmp[2392169]:SystemError[264933] "temp"
      (2392171 'move' tmp[2392169](2392173 'cast' SystemError[264933] nil[44]))
      (2392176 '.=' i_this[2392163] chpl_p[1000422] tmp[2392169])
      val coerce_tmp[2392180]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2392182 'move' coerce_tmp[2392180](2392184 'cast' object[22] call_tmp[2392151]))
      const-val call_tmp[2392187]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2392189 'move' call_tmp[2392187](2392191 'ptr_eq' coerce_tmp[2392180] nil[44]))
      if call_tmp[2392187]
      {
        (2392197 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2392200]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2392202]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2392205 call init[968283] initTemp[2392202] call_tmp[2392151])
      (2392208 'move' call_tmp[2392200] initTemp[2392202])
      (2392211 'move' ret[2392136] call_tmp[2392200])
      (2392215 call chpl__autoDestroy[1656343] _formal_tmp_x[2392131])
      (2392217 '=' i__retArg[2392125] ret[2392136])
      (2392220 'move' coerce_tmp[2392115] ret_tmp[2392117])
      const-val _formal_tmp_in_err[2392223]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2392225 'move' _formal_tmp_in_err[2392223] coerce_tmp[2392115])
      (2392228 'move' call_tmp[2392113](2392231 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2392223]))
      (2392233 '=' error[1888762] call_tmp[2392113])
      gotoErrorHandlingReturn _endlock[2392296] _endlock[2392296]
    }
    const-val call_tmp[2392239]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392241 'move' call_tmp[2392239](2392244 call qio_err_iserr[223734] call_tmp[2392054]))
    const-val call_tmp[2392246]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392248 'move' call_tmp[2392246](2392250 '!=' call_tmp[2392239] 0))
    if call_tmp[2392246]
    {
      val error[2392255]:Error[167984] "error variable" "temp"
      (2392257 'move' error[2392255] nil[44])
      (2392261 call _ch_ioerror[1063054] this[1882750] call_tmp[2392054] "in lock" error[2392255])
      val errorExists[2392266]:bool[10] "temp"
      (2392268 'move' errorExists[2392266](2392270 '!=' error[2392255] nil[44]))
      if errorExists[2392266]
      {
        gotoErrorHandling handler[2392278] handler[2392278]
      }
      label handler[2392278]
      val errorExists[2392280]:bool[10] "temp"
      (2392282 'move' errorExists[2392280](2392284 '!=' error[2392255] nil[44]))
      if errorExists[2392280]
      {
        (2392289 '=' error[1888762] error[2392255])
        gotoErrorHandlingReturn _endlock[2392296] _endlock[2392296]
      }
    }
    label _endlock[2392296]
    val errorExists[2224304]:bool[10] "temp"
    (2224309 'move' errorExists[2224304](2224306 '!=' error[1888762] nil[44]))
    if errorExists[2224304]
    {
      gotoErrorHandling handler[1888763] handler[1888763]
    }
    label handler[1888763]
    val errorExists[2224312]:bool[10] "temp"
    (2224317 'move' errorExists[2224312](2224314 '!=' error[1888762] nil[44]))
    if errorExists[2224312]
    {
      (1888777 call chpl_uncaught_error[170289] error[1888762])
    }
    val error[1888788]:Error[167984] "error variable" "temp"
    (1888797 'move' error[1888788] nil[44])
    ref rvfRerefTmp[2196789]:ioLiteral[238841] "temp"
    (2196793 'move' rvfRerefTmp[2196789](2196790 'set reference' x[1882752]))
    val rvfRerefTmp[2196802]:locale[28] "temp"
    (2196805 'move' rvfRerefTmp[2196802] origLocale[1882754])
    (1565713 call _writeOne[1565749] this[1882750] rvfRerefTmp[2196789] rvfRerefTmp[2196802] error[1888788])
    val errorExists[2224320]:bool[10] "temp"
    (2224325 'move' errorExists[2224320](2224322 '!=' error[1888788] nil[44]))
    if errorExists[2224320]
    {
      gotoErrorHandling handler[1888789] handler[1888789]
    }
    label handler[1888789]
    val errorExists[2224328]:bool[10] "temp"
    (2224333 'move' errorExists[2224328](2224330 '!=' error[1888788] nil[44]))
    if errorExists[2224328]
    {
      (1888804 '=' error_out[1888758] error[1888788])
      gotoErrorHandlingReturn _endon_fn[1888760] _endon_fn[1888760]
    }
    label _endon_fn[1888760]
    (1565720 return _void[55])
  }
  function on_fn[1578648](const  ref arg this[1882756]:channel(true,dynamic,false)[1061136], const in arg x[1882758]:real(64)[16], const in arg origLocale[1882760]:locale[28], ref arg error_out[1888948]:Error[167984]) : void[4] throws "on" "resolved"
  {
    val error[1888952]:Error[167984] "error variable" "temp"
    (1888961 'move' error[1888952] nil[44])
    const-val call_tmp[2392309]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392311 'move' call_tmp[2392309](2392314 call qio_int_to_err[223722] 0))
    const-val coerce_tmp[2392319]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2392321 'move' coerce_tmp[2392319](2392323 '.v' this[1882756] _channel_internal[1061129]))
    const-val call_tmp[2392326]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392328 'move' call_tmp[2392326](2392330 'cast' c_void_ptr[149] coerce_tmp[2392319]))
    const-val call_tmp[2392333]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392335 'move' call_tmp[2392333](2392337 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2392340]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392342 'move' call_tmp[2392340](2392344 'ptr_eq' call_tmp[2392326] call_tmp[2392333]))
    if call_tmp[2392340]
    {
      const-val call_tmp[2392349]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2392351]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2392353 'move' coerce_tmp[2392351](2392355 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2392358]:owned SystemError[1000427] "temp"
      (2392361 call fromSyserr[1017302] coerce_tmp[2392351] "Operation attempted on an invalid channel" ret_tmp[2392358])
      (2392365 'move' call_tmp[2392349] ret_tmp[2392358])
      val call_tmp[2392368]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2392370]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2392372]:owned Error[966647] "temp"
      ref i_x[2392374]:owned SystemError[1000427] "temp"
      (2392376 'move' i_x[2392374](2392378 'set reference' call_tmp[2392349]))
      ref i__retArg[2392380]:owned Error[966647] "temp"
      (2392382 'move' i__retArg[2392380](2392384 'set reference' ret_tmp[2392372]))
      val _formal_tmp_x[2392386]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2392388 'move' _formal_tmp_x[2392386] i_x[2392374])
      const-val ret[2392391]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2392393]:owned SystemError[1000427] "temp"
      (2392395 'move' i_this[2392393](2392397 'set reference' _formal_tmp_x[2392386]))
      val coerce_tmp[2392399]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2392401 'move' coerce_tmp[2392399](2392403 '.v' i_this[2392393] chpl_p[1000422]))
      val call_tmp[2392406]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2392408 'move' call_tmp[2392406](2392410 'cast' Error[167984] coerce_tmp[2392399]))
      ref i_this[2392418]:owned SystemError[1000427] "temp"
      (2392420 'move' i_this[2392418](2392422 'set reference' _formal_tmp_x[2392386]))
      val tmp[2392424]:SystemError[264933] "temp"
      (2392426 'move' tmp[2392424](2392428 'cast' SystemError[264933] nil[44]))
      (2392431 '.=' i_this[2392418] chpl_p[1000422] tmp[2392424])
      val coerce_tmp[2392435]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2392437 'move' coerce_tmp[2392435](2392439 'cast' object[22] call_tmp[2392406]))
      const-val call_tmp[2392442]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2392444 'move' call_tmp[2392442](2392446 'ptr_eq' coerce_tmp[2392435] nil[44]))
      if call_tmp[2392442]
      {
        (2392452 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2392455]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2392457]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2392460 call init[968283] initTemp[2392457] call_tmp[2392406])
      (2392463 'move' call_tmp[2392455] initTemp[2392457])
      (2392466 'move' ret[2392391] call_tmp[2392455])
      (2392470 call chpl__autoDestroy[1656343] _formal_tmp_x[2392386])
      (2392472 '=' i__retArg[2392380] ret[2392391])
      (2392475 'move' coerce_tmp[2392370] ret_tmp[2392372])
      const-val _formal_tmp_in_err[2392478]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2392480 'move' _formal_tmp_in_err[2392478] coerce_tmp[2392370])
      (2392483 'move' call_tmp[2392368](2392486 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2392478]))
      (2392488 '=' error[1888952] call_tmp[2392368])
      gotoErrorHandlingReturn _endlock[2392551] _endlock[2392551]
    }
    const-val call_tmp[2392494]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392496 'move' call_tmp[2392494](2392499 call qio_err_iserr[223734] call_tmp[2392309]))
    const-val call_tmp[2392501]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2392503 'move' call_tmp[2392501](2392505 '!=' call_tmp[2392494] 0))
    if call_tmp[2392501]
    {
      val error[2392510]:Error[167984] "error variable" "temp"
      (2392512 'move' error[2392510] nil[44])
      (2392516 call _ch_ioerror[1063054] this[1882756] call_tmp[2392309] "in lock" error[2392510])
      val errorExists[2392521]:bool[10] "temp"
      (2392523 'move' errorExists[2392521](2392525 '!=' error[2392510] nil[44]))
      if errorExists[2392521]
      {
        gotoErrorHandling handler[2392533] handler[2392533]
      }
      label handler[2392533]
      val errorExists[2392535]:bool[10] "temp"
      (2392537 'move' errorExists[2392535](2392539 '!=' error[2392510] nil[44]))
      if errorExists[2392535]
      {
        (2392544 '=' error[1888952] error[2392510])
        gotoErrorHandlingReturn _endlock[2392551] _endlock[2392551]
      }
    }
    label _endlock[2392551]
    val errorExists[2224400]:bool[10] "temp"
    (2224405 'move' errorExists[2224400](2224402 '!=' error[1888952] nil[44]))
    if errorExists[2224400]
    {
      gotoErrorHandling handler[1888953] handler[1888953]
    }
    label handler[1888953]
    val errorExists[2224408]:bool[10] "temp"
    (2224413 'move' errorExists[2224408](2224410 '!=' error[1888952] nil[44]))
    if errorExists[2224408]
    {
      (1888967 call chpl_uncaught_error[170289] error[1888952])
    }
    val error[1888978]:Error[167984] "error variable" "temp"
    (1888987 'move' error[1888978] nil[44])
    val rvfRerefTmp[2196814]:locale[28] "temp"
    (2196817 'move' rvfRerefTmp[2196814] origLocale[1882760])
    (1578681 call _writeOne[1578717] this[1882756] x[1882758] rvfRerefTmp[2196814] error[1888978])
    val errorExists[2224416]:bool[10] "temp"
    (2224421 'move' errorExists[2224416](2224418 '!=' error[1888978] nil[44]))
    if errorExists[2224416]
    {
      gotoErrorHandling handler[1888979] handler[1888979]
    }
    label handler[1888979]
    val errorExists[2224424]:bool[10] "temp"
    (2224429 'move' errorExists[2224424](2224426 '!=' error[1888978] nil[44]))
    if errorExists[2224424]
    {
      (1888994 '=' error_out[1888948] error[1888978])
      gotoErrorHandlingReturn _endon_fn[1888950] _endon_fn[1888950]
    }
    label _endon_fn[1888950]
    (1578688 return _void[55])
  }
  function on_fn[1589701](const in arg this[1882762]:channel(true,dynamic,true)[1022014], const  ref arg args[1882764]:(string,ioNewline)[1589826], const in arg origLocale[1882766]:locale[28], ref arg error_out[1889183]:Error[167984]) : void[4] throws "inlined function" "on" "resolved"
  {
    val error[1889187]:Error[167984] "error variable" "temp"
    (1889196 'move' error[1889187] nil[44])
    ref rvfRerefTmp[2196827]:channel(true,dynamic,true)[1022014] "temp"
    (2196831 'move' rvfRerefTmp[2196827](2196828 'set reference' this[1882762]))
    val err[2506897]:syserr[223672] "dead at end of block" "insert auto destroy"
    const-val call_tmp[2506899]:syserr[223672] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506901 'move' call_tmp[2506899](2506904 call qio_int_to_err[223722] 0))
    (2506906 'move' err[2506897] call_tmp[2506899])
    const-val coerce_tmp[2506909]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2506911 'move' coerce_tmp[2506909](2506913 '.v' this[1882762] _channel_internal[1022007]))
    const-val call_tmp[2506916]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506918 'move' call_tmp[2506916](2506920 'cast' c_void_ptr[149] coerce_tmp[2506909]))
    const-val call_tmp[2506923]:c_void_ptr[149] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506925 'move' call_tmp[2506923](2506927 'cast' c_void_ptr[149] nil[44]))
    const-val call_tmp[2506930]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2506932 'move' call_tmp[2506930](2506934 'ptr_eq' call_tmp[2506916] call_tmp[2506923]))
    if call_tmp[2506930]
    {
      const-val call_tmp[2506939]:owned SystemError[1000427] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
      const-val coerce_tmp[2506941]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2506943 'move' coerce_tmp[2506941](2506945 'cast' int(64)[13] EINVAL[224547]))
      const-val ret_tmp[2506948]:owned SystemError[1000427] "temp"
      (2506951 call fromSyserr[1017302] coerce_tmp[2506941] "Operation attempted on an invalid channel" ret_tmp[2506948])
      (2506955 'move' call_tmp[2506939] ret_tmp[2506948])
      val call_tmp[2506958]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[2506960]:owned Error[966647] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
      const-val ret_tmp[2506962]:owned Error[966647] "temp"
      ref i_x[2506964]:owned SystemError[1000427] "temp"
      (2506966 'move' i_x[2506964](2506968 'set reference' call_tmp[2506939]))
      ref i__retArg[2506970]:owned Error[966647] "temp"
      (2506972 'move' i__retArg[2506970](2506974 'set reference' ret_tmp[2506962]))
      val _formal_tmp_x[2506976]:owned SystemError[1000427] "dead at end of block" "insert auto destroy" "no copy" "temp"
      (2506978 'move' _formal_tmp_x[2506976] i_x[2506964])
      const-val ret[2506981]:owned Error[966647] "dead after last mention" "RVV" "temp"
      ref i_this[2506983]:owned SystemError[1000427] "temp"
      (2506985 'move' i_this[2506983](2506987 'set reference' _formal_tmp_x[2506976]))
      val coerce_tmp[2506989]:SystemError[264933] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (2506991 'move' coerce_tmp[2506989](2506993 '.v' i_this[2506983] chpl_p[1000422]))
      val call_tmp[2506996]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
      (2506998 'move' call_tmp[2506996](2507000 'cast' Error[167984] coerce_tmp[2506989]))
      ref i_this[2507008]:owned SystemError[1000427] "temp"
      (2507010 'move' i_this[2507008](2507012 'set reference' _formal_tmp_x[2506976]))
      val tmp[2507014]:SystemError[264933] "temp"
      (2507016 'move' tmp[2507014](2507018 'cast' SystemError[264933] nil[44]))
      (2507021 '.=' i_this[2507008] chpl_p[1000422] tmp[2507014])
      val coerce_tmp[2507025]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507027 'move' coerce_tmp[2507025](2507029 'cast' object[22] call_tmp[2506996]))
      const-val call_tmp[2507032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2507034 'move' call_tmp[2507032](2507036 'ptr_eq' coerce_tmp[2507025] nil[44]))
      if call_tmp[2507032]
      {
        (2507042 call nilCheckHalt[210238] "argument to ! is nil")
      }
      const-val call_tmp[2507045]:owned Error[966647] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "temp"
      const-val initTemp[2507047]:owned Error[966647] "dead after last mention" "delay instantiation" "temp"
      (2507050 call init[968283] initTemp[2507047] call_tmp[2506996])
      (2507053 'move' call_tmp[2507045] initTemp[2507047])
      (2507056 'move' ret[2506981] call_tmp[2507045])
      (2507060 call chpl__autoDestroy[1656343] _formal_tmp_x[2506976])
      (2507062 '=' i__retArg[2506970] ret[2506981])
      (2507065 'move' coerce_tmp[2506960] ret_tmp[2506962])
      const-val _formal_tmp_in_err[2507068]:owned Error[966647] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (2507070 'move' _formal_tmp_in_err[2507068] coerce_tmp[2506960])
      (2507073 'move' call_tmp[2506958](2507076 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[2507068]))
      (2507078 '=' error[1889187] call_tmp[2506958])
      gotoErrorHandlingReturn _endlock[2507249] _endlock[2507249]
    }
    ref call_tmp[2507086]:locale[28] "dead after last mention" "maybe param" "temp"
    (2507088 'move' call_tmp[2507086](2507090 '.' this[1882762] home[1022002]))
    const-val call_tmp[2507093]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2507095]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507097 'move' coerce_tmp[2507095](2507099 '.v' call_tmp[2507086] _instance[89978]))
    val coerce_tmp[2507102]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507104 'move' coerce_tmp[2507102](2507106 'cast' object[22] coerce_tmp[2507095]))
    const-val call_tmp[2507109]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507111 'move' call_tmp[2507109](2507113 'ptr_eq' coerce_tmp[2507102] nil[44]))
    if call_tmp[2507109]
    {
      (2507119 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2507122 'move' call_tmp[2507093](2507124 '_wide_get_locale' coerce_tmp[2507095]))
    val rvfDerefTmp[2507129]:channel(true,dynamic,true)[1022014] "temp"
    (2507131 'move' rvfDerefTmp[2507129] this[1882762])
    val isdirect[2507135]:bool[10] "temp"
    (2507137 'move' isdirect[2507135](2507140 call chpl_doDirectExecuteOn[187469] call_tmp[2507093]))
    if isdirect[2507135]
    {
      (2507145 call on_fn[1552598] rvfDerefTmp[2507129] err[2506897])
    }
    {
      val _args_foron_fn[2507149]:_class_localson_fn[2208683] "temp"
      (2507151 'move' _args_foron_fn[2507149](2507153 'stack allocate class' _class_localson_fn[2208683]))
      (2507155 '.=' _args_foron_fn[2507149] _0_tmp[2208686] call_tmp[2507093])
      (2507159 '.=' _args_foron_fn[2507149] _1_rvfDerefTmp[2208688] rvfDerefTmp[2507129])
      ref tmp[2507163]:syserr[223672] "temp"
      (2507165 'move' tmp[2507163](2507167 'set reference' err[2506897]))
      (2507169 '.=' _args_foron_fn[2507149] _2_err[2208690] tmp[2507163])
      val _args_vforon_fn[2507173]:c_void_ptr[149] "temp"
      (2507175 'move' _args_vforon_fn[2507173](2507177 'cast_to_void_star' _args_foron_fn[2507149]))
      val _args_sizeon_fn[2507179]:int(64)[13] "temp"
      (2507181 'move' _args_sizeon_fn[2507179](2507183 'sizeof_bundle' _class_localson_fn[2208683]))
      on(2507186 call wrapon_fn[2208729] call_tmp[2507093] _args_vforon_fn[2507173] _args_sizeon_fn[2507179] _args_foron_fn[2507149])
    }
    const-val call_tmp[2507192]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507194 'move' call_tmp[2507192](2507197 call qio_err_iserr[223734] err[2506897]))
    const-val call_tmp[2507199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507201 'move' call_tmp[2507199](2507203 '!=' call_tmp[2507192] 0))
    if call_tmp[2507199]
    {
      val error[2507208]:Error[167984] "error variable" "temp"
      (2507210 'move' error[2507208] nil[44])
      (2507214 call _ch_ioerror[1552948] rvfRerefTmp[2196827] err[2506897] "in lock" error[2507208])
      val errorExists[2507219]:bool[10] "temp"
      (2507221 'move' errorExists[2507219](2507223 '!=' error[2507208] nil[44]))
      if errorExists[2507219]
      {
        gotoErrorHandling handler[2507231] handler[2507231]
      }
      label handler[2507231]
      val errorExists[2507233]:bool[10] "temp"
      (2507235 'move' errorExists[2507233](2507237 '!=' error[2507208] nil[44]))
      if errorExists[2507233]
      {
        (2507242 '=' error[1889187] error[2507208])
        gotoErrorHandlingReturn _endlock[2507249] _endlock[2507249]
      }
    }
    label _endlock[2507249]
    val errorExists[2224520]:bool[10] "temp"
    (2224525 'move' errorExists[2224520](2224522 '!=' error[1889187] nil[44]))
    if errorExists[2224520]
    {
      gotoErrorHandling handler[1889188] handler[1889188]
    }
    label handler[1889188]
    val errorExists[2224528]:bool[10] "temp"
    (2224533 'move' errorExists[2224528](2224530 '!=' error[1889187] nil[44]))
    if errorExists[2224528]
    {
      (1889203 '=' error_out[1889183] error[1889187])
      gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
    }
    val error[1889215]:Error[167984] "error variable" "temp"
    (1889224 'move' error[1889215] nil[44])
    const-ref call_tmp[1589927]:string[26] "dead after last mention" "maybe param" "temp"
    (1589929 'move' call_tmp[1589927](1589982 '.v' args[1882764] x0[1589822]))
    ref rvfRerefTmp[2196834]:channel(true,dynamic,true)[1022014] "temp"
    (2196838 'move' rvfRerefTmp[2196834](2196835 'set reference' this[1882762]))
    val rvfRerefTmp[2196875]:locale[28] "temp"
    (2196878 'move' rvfRerefTmp[2196875] origLocale[1882766])
    (1589938 call _writeOne[1589985] rvfRerefTmp[2196834] call_tmp[1589927] rvfRerefTmp[2196875] error[1889215])
    val errorExists[2224536]:bool[10] "temp"
    (2224541 'move' errorExists[2224536](2224538 '!=' error[1889215] nil[44]))
    if errorExists[2224536]
    {
      gotoErrorHandling handler[1889216] handler[1889216]
    }
    label handler[1889216]
    val errorExists[2224544]:bool[10] "temp"
    (2224549 'move' errorExists[2224544](2224546 '!=' error[1889215] nil[44]))
    if errorExists[2224544]
    {
      (1889231 '=' error_out[1889183] error[1889215])
      ref call_tmp[2507560]:locale[28] "dead after last mention" "maybe param" "temp"
      (2507562 'move' call_tmp[2507560](2507564 '.' this[1882762] home[1022002]))
      const-val call_tmp[2507567]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2507569]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507571 'move' coerce_tmp[2507569](2507573 '.v' call_tmp[2507560] _instance[89978]))
      val coerce_tmp[2507576]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507578 'move' coerce_tmp[2507576](2507580 'cast' object[22] coerce_tmp[2507569]))
      const-val call_tmp[2507583]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2507585 'move' call_tmp[2507583](2507587 'ptr_eq' coerce_tmp[2507576] nil[44]))
      if call_tmp[2507583]
      {
        (2507593 call nilCheckHalt[210238] "argument to ! is nil")
      }
      (2507596 'move' call_tmp[2507567](2507598 '_wide_get_locale' coerce_tmp[2507569]))
      val rvfDerefTmp[2507603]:channel(true,dynamic,true)[1022014] "temp"
      (2507605 'move' rvfDerefTmp[2507603] this[1882762])
      val isdirect[2507609]:bool[10] "temp"
      (2507611 'move' isdirect[2507609](2507614 call chpl_doDirectExecuteOn[187469] call_tmp[2507567]))
      if isdirect[2507609]
      {
        (2507619 call on_fn[1553289] rvfDerefTmp[2507603])
      }
      {
        val _args_foron_fn[2507622]:_class_localson_fn[2208936] "temp"
        (2507624 'move' _args_foron_fn[2507622](2507626 'stack allocate class' _class_localson_fn[2208936]))
        (2507628 '.=' _args_foron_fn[2507622] _0_tmp[2208939] call_tmp[2507567])
        (2507632 '.=' _args_foron_fn[2507622] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507603])
        val _args_vforon_fn[2507636]:c_void_ptr[149] "temp"
        (2507638 'move' _args_vforon_fn[2507636](2507640 'cast_to_void_star' _args_foron_fn[2507622]))
        val _args_sizeon_fn[2507642]:int(64)[13] "temp"
        (2507644 'move' _args_sizeon_fn[2507642](2507646 'sizeof_bundle' _class_localson_fn[2208936]))
        on(2507649 call wrapon_fn[2208970] call_tmp[2507567] _args_vforon_fn[2507636] _args_sizeon_fn[2507642] _args_foron_fn[2507622])
      }
      gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
    }
    val error[1889243]:Error[167984] "error variable" "temp"
    (1889252 'move' error[1889243] nil[44])
    const-ref call_tmp[1589959]:ioNewline[238789] "dead after last mention" "maybe param" "temp"
    (1589961 'move' call_tmp[1589959](1590372 '.v' args[1882764] x1[1589824]))
    ref rvfRerefTmp[2196841]:channel(true,dynamic,true)[1022014] "temp"
    (2196845 'move' rvfRerefTmp[2196841](2196842 'set reference' this[1882762]))
    val rvfRerefTmp[2196881]:locale[28] "temp"
    (2196884 'move' rvfRerefTmp[2196881] origLocale[1882766])
    (1589970 call _writeOne[1586285] rvfRerefTmp[2196841] call_tmp[1589959] rvfRerefTmp[2196881] error[1889243])
    val errorExists[2224552]:bool[10] "temp"
    (2224557 'move' errorExists[2224552](2224554 '!=' error[1889243] nil[44]))
    if errorExists[2224552]
    {
      gotoErrorHandling handler[1889244] handler[1889244]
    }
    label handler[1889244]
    val errorExists[2224560]:bool[10] "temp"
    (2224565 'move' errorExists[2224560](2224562 '!=' error[1889243] nil[44]))
    if errorExists[2224560]
    {
      (1889259 '=' error_out[1889183] error[1889243])
      ref call_tmp[2507660]:locale[28] "dead after last mention" "maybe param" "temp"
      (2507662 'move' call_tmp[2507660](2507664 '.' this[1882762] home[1022002]))
      const-val call_tmp[2507667]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[2507669]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507671 'move' coerce_tmp[2507669](2507673 '.v' call_tmp[2507660] _instance[89978]))
      val coerce_tmp[2507676]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (2507678 'move' coerce_tmp[2507676](2507680 'cast' object[22] coerce_tmp[2507669]))
      const-val call_tmp[2507683]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (2507685 'move' call_tmp[2507683](2507687 'ptr_eq' coerce_tmp[2507676] nil[44]))
      if call_tmp[2507683]
      {
        (2507693 call nilCheckHalt[210238] "argument to ! is nil")
      }
      (2507696 'move' call_tmp[2507667](2507698 '_wide_get_locale' coerce_tmp[2507669]))
      val rvfDerefTmp[2507703]:channel(true,dynamic,true)[1022014] "temp"
      (2507705 'move' rvfDerefTmp[2507703] this[1882762])
      val isdirect[2507709]:bool[10] "temp"
      (2507711 'move' isdirect[2507709](2507714 call chpl_doDirectExecuteOn[187469] call_tmp[2507667]))
      if isdirect[2507709]
      {
        (2507719 call on_fn[1553289] rvfDerefTmp[2507703])
      }
      {
        val _args_foron_fn[2507722]:_class_localson_fn[2208936] "temp"
        (2507724 'move' _args_foron_fn[2507722](2507726 'stack allocate class' _class_localson_fn[2208936]))
        (2507728 '.=' _args_foron_fn[2507722] _0_tmp[2208939] call_tmp[2507667])
        (2507732 '.=' _args_foron_fn[2507722] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507703])
        val _args_vforon_fn[2507736]:c_void_ptr[149] "temp"
        (2507738 'move' _args_vforon_fn[2507736](2507740 'cast_to_void_star' _args_foron_fn[2507722]))
        val _args_sizeon_fn[2507742]:int(64)[13] "temp"
        (2507744 'move' _args_sizeon_fn[2507742](2507746 'sizeof_bundle' _class_localson_fn[2208936]))
        on(2507749 call wrapon_fn[2208970] call_tmp[2507667] _args_vforon_fn[2507736] _args_sizeon_fn[2507742] _args_foron_fn[2507722])
      }
      gotoErrorHandlingReturn _endon_fn[1889185] _endon_fn[1889185]
    }
    ref call_tmp[2507760]:locale[28] "dead after last mention" "maybe param" "temp"
    (2507762 'move' call_tmp[2507760](2507764 '.' this[1882762] home[1022002]))
    const-val call_tmp[2507767]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[2507769]:BaseLocale[91204] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507771 'move' coerce_tmp[2507769](2507773 '.v' call_tmp[2507760] _instance[89978]))
    val coerce_tmp[2507776]:object[22] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (2507778 'move' coerce_tmp[2507776](2507780 'cast' object[22] coerce_tmp[2507769]))
    const-val call_tmp[2507783]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (2507785 'move' call_tmp[2507783](2507787 'ptr_eq' coerce_tmp[2507776] nil[44]))
    if call_tmp[2507783]
    {
      (2507793 call nilCheckHalt[210238] "argument to ! is nil")
    }
    (2507796 'move' call_tmp[2507767](2507798 '_wide_get_locale' coerce_tmp[2507769]))
    val rvfDerefTmp[2507803]:channel(true,dynamic,true)[1022014] "temp"
    (2507805 'move' rvfDerefTmp[2507803] this[1882762])
    val isdirect[2507809]:bool[10] "temp"
    (2507811 'move' isdirect[2507809](2507814 call chpl_doDirectExecuteOn[187469] call_tmp[2507767]))
    if isdirect[2507809]
    {
      (2507819 call on_fn[1553289] rvfDerefTmp[2507803])
    }
    {
      val _args_foron_fn[2507822]:_class_localson_fn[2208936] "temp"
      (2507824 'move' _args_foron_fn[2507822](2507826 'stack allocate class' _class_localson_fn[2208936]))
      (2507828 '.=' _args_foron_fn[2507822] _0_tmp[2208939] call_tmp[2507767])
      (2507832 '.=' _args_foron_fn[2507822] _1_rvfDerefTmp[2208941] rvfDerefTmp[2507803])
      val _args_vforon_fn[2507836]:c_void_ptr[149] "temp"
      (2507838 'move' _args_vforon_fn[2507836](2507840 'cast_to_void_star' _args_foron_fn[2507822]))
      val _args_sizeon_fn[2507842]:int(64)[13] "temp"
      (2507844 'move' _args_sizeon_fn[2507842](2507846 'sizeof_bundle' _class_localson_fn[2208936]))
      on(2507849 call wrapon_fn[2208970] call_tmp[2507767] _args_vforon_fn[2507836] _args_sizeon_fn[2507842] _args_foron_fn[2507822])
    }
    label _endon_fn[1889185]
    (1589804 return _void[55])
  }
  function on_fn[1611238](ref arg this[1882792]:channel(false,dynamic,true)[985816]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1611287]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1611291 'move' coerce_tmp[1611287](2572553 '.v' this[1882792] _channel_internal[985809]))
    (1611253 call qio_channel_release[233049] coerce_tmp[1611287])
    (2572559 '.=' this[1882792] _channel_internal[985809] QIO_CHANNEL_PTR_NULL[231556])
    (1611268 return _void[55])
  }
  function on_fn[1674217](ref arg this[1882834]:channel(true,dynamic,true)[1022014]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1674266]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1674270 'move' coerce_tmp[1674266](2572894 '.v' this[1882834] _channel_internal[1022007]))
    (1674232 call qio_channel_release[233049] coerce_tmp[1674266])
    (2572900 '.=' this[1882834] _channel_internal[1022007] QIO_CHANNEL_PTR_NULL[231556])
    (1674247 return _void[55])
  }
  function on_fn[1676381](ref arg this[1882838]:channel(true,dynamic,false)[1061136]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1676430]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1676434 'move' coerce_tmp[1676430](2572912 '.v' this[1882838] _channel_internal[1061129]))
    (1676396 call qio_channel_release[233049] coerce_tmp[1676430])
    (2572918 '.=' this[1882838] _channel_internal[1061129] QIO_CHANNEL_PTR_NULL[231556])
    (1676411 return _void[55])
  }
  function on_fn[1680635](ref arg this[1882844]:channel(false,dynamic,false)[1080871]) : void[4] "on" "resolved"
  {
    const-val coerce_tmp[1680684]:qio_channel_ptr_t[231553] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1680688 'move' coerce_tmp[1680684](2572947 '.v' this[1882844] _channel_internal[1080864]))
    (1680650 call qio_channel_release[233049] coerce_tmp[1680684])
    (2572953 '.=' this[1882844] _channel_internal[1080864] QIO_CHANNEL_PTR_NULL[231556])
    (1680665 return _void[55])
  }
  function chpl__deinit_IO[1930276]() : void[4] "resolved"
  {
    label _endchpl__deinit_IO[1930282]
    ref i_x[2513783]:file[235668] "temp"
    (2513787 'move' i_x[2513783](2513785 'set reference' call_tmp[724218]))
    (2513791 call deinit[235979] i_x[2513783])
    ref i_x[2513771]:file[235668] "temp"
    (2513775 'move' i_x[2513771](2513773 'set reference' call_tmp[724201]))
    (2513779 call deinit[235979] i_x[2513771])
    ref i_x[2513759]:file[235668] "temp"
    (2513763 'move' i_x[2513759](2513761 'set reference' call_tmp[724184]))
    (2513767 call deinit[235979] i_x[2513759])
    ref i_x[2516913]:channel(true,dynamic,true)[1022014] "temp"
    (2516917 'move' i_x[2516913](2516915 'set reference' stderr[250352]))
    (2516921 call deinit[1674182] i_x[2516913])
    ref i_x[2516901]:channel(true,dynamic,true)[1022014] "temp"
    (2516905 'move' i_x[2516901](2516903 'set reference' stdout[250323]))
    (2516909 call deinit[1674182] i_x[2516901])
    ref i_x[2514458]:channel(false,dynamic,true)[985816] "temp"
    (2514462 'move' i_x[2514458](2514460 'set reference' stdin[250296]))
    (2514466 call deinit[1611203] i_x[2514458])
    ref tmp[2197673]:6*string[985406] "temp"
    (2197678 'move' tmp[2197673](2197675 '.' _arg_to_proto_names[246649] value[2197663]))
    ref _field_destructor_tmp_[2514360]:string[26] "temp"
    (2514362 'move' _field_destructor_tmp_[2514360](2514364 '.' tmp[2197673] x5[985404]))
    (2514368 call deinit[30834] _field_destructor_tmp_[2514360])
    ref _field_destructor_tmp_[2514370]:string[26] "temp"
    (2514372 'move' _field_destructor_tmp_[2514370](2514374 '.' tmp[2197673] x4[985402]))
    (2514378 call deinit[30834] _field_destructor_tmp_[2514370])
    ref _field_destructor_tmp_[2514380]:string[26] "temp"
    (2514382 'move' _field_destructor_tmp_[2514380](2514384 '.' tmp[2197673] x3[985400]))
    (2514388 call deinit[30834] _field_destructor_tmp_[2514380])
    ref _field_destructor_tmp_[2514390]:string[26] "temp"
    (2514392 'move' _field_destructor_tmp_[2514390](2514394 '.' tmp[2197673] x2[985398]))
    (2514398 call deinit[30834] _field_destructor_tmp_[2514390])
    ref _field_destructor_tmp_[2514400]:string[26] "temp"
    (2514402 'move' _field_destructor_tmp_[2514400](2514404 '.' tmp[2197673] x1[985396]))
    (2514408 call deinit[30834] _field_destructor_tmp_[2514400])
    ref _field_destructor_tmp_[2514410]:string[26] "temp"
    (2514412 'move' _field_destructor_tmp_[2514410](2514414 '.' tmp[2197673] x0[985394]))
    (2514418 call deinit[30834] _field_destructor_tmp_[2514410])
    (1930279 return _void[55])
  }
  function wrapon_fn[2199277](const in arg dummy_locale_arg[2199279]:chpl_localeID_t[209352], in arg buf[2199281]:c_void_ptr[149], in arg buf_size[2199283]:int(64)[13], in arg c[2199285]:_class_localson_fn[2199237]) : void[4] "on block"
  {
    ref _1_this[2199297]:file[235668] "temp"
    (2199302 'move' _1_this[2199297](2199299 '.v' c[2199285] _1_this[2199242]))
    (2199288 call on_fn[935786] _1_this[2199297])
    (2199305 return _void[55])
  }
  function wrapon_fn[2199388](const in arg dummy_locale_arg[2199390]:chpl_localeID_t[209352], in arg buf[2199392]:c_void_ptr[149], in arg buf_size[2199394]:int(64)[13], in arg c[2199396]:_class_localson_fn[2199330]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2199408]:file[235668] "temp"
    (2199413 'move' _1_rvfDerefTmp[2199408](2199410 '.v' c[2199396] _1_rvfDerefTmp[2199335]))
    ref _2_ret[2199416]:iostyle[231932] "temp"
    (2199421 'move' _2_ret[2199416](2199418 '.v' c[2199396] _2_ret[2199337]))
    ref _3_error[2199424]:Error[167984] "temp"
    (2199429 'move' _3_error[2199424](2199426 '.v' c[2199396] _3_error[2199339]))
    (2199399 call on_fn[935795] _1_rvfDerefTmp[2199408] _2_ret[2199416] _3_error[2199424])
    (2199432 return _void[55])
  }
  function wrapon_fn[2199502](const in arg dummy_locale_arg[2199504]:chpl_localeID_t[209352], in arg buf[2199506]:c_void_ptr[149], in arg buf_size[2199508]:int(64)[13], in arg c[2199510]:_class_localson_fn[2199456]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2199522]:file[235668] "temp"
    (2199527 'move' _1_rvfDerefTmp[2199522](2199524 '.v' c[2199510] _1_rvfDerefTmp[2199461]))
    ref _2_err[2199530]:syserr[223672] "temp"
    (2199535 'move' _2_err[2199530](2199532 '.v' c[2199510] _2_err[2199463]))
    (2199513 call on_fn[935804] _1_rvfDerefTmp[2199522] _2_err[2199530])
    (2199538 return _void[55])
  }
  function wrapon_fn[2199634](const in arg dummy_locale_arg[2199636]:chpl_localeID_t[209352], in arg buf[2199638]:c_void_ptr[149], in arg buf_size[2199640]:int(64)[13], in arg c[2199642]:_class_localson_fn[2199564]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2199654]:file[235668] "temp"
    (2199659 'move' _1_rvfDerefTmp[2199654](2199656 '.v' c[2199642] _1_rvfDerefTmp[2199569]))
    ref _2_err[2199662]:syserr[223672] "temp"
    (2199667 'move' _2_err[2199662](2199664 '.v' c[2199642] _2_err[2199571]))
    ref _3_ret[2199670]:string[26] "temp"
    (2199675 'move' _3_ret[2199670](2199672 '.v' c[2199642] _3_ret[2199573]))
    ref _4_error[2199678]:Error[167984] "temp"
    (2199683 'move' _4_error[2199678](2199680 '.v' c[2199642] _4_error[2199575]))
    (2199645 call on_fn[935822] _1_rvfDerefTmp[2199654] _2_err[2199662] _3_ret[2199670] _4_error[2199678])
    (2199686 return _void[55])
  }
  function wrapon_fn[2200007](const in arg dummy_locale_arg[2200009]:chpl_localeID_t[209352], in arg buf[2200011]:c_void_ptr[149], in arg buf_size[2200013]:int(64)[13], in arg c[2200015]:_class_localson_fn[2199913]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2200027]:file[235668] "temp"
    (2200032 'move' _1_rvfDerefTmp[2200027](2200029 '.v' c[2200015] _1_rvfDerefTmp[2199918]))
    ref _2_ret[2200035]:channel(false,dynamic,true)[985816] "temp"
    (2200040 'move' _2_ret[2200035](2200037 '.v' c[2200015] _2_ret[2199920]))
    val _3_hints[2200043]:int(32)[95] "temp"
    (2200048 'move' _3_hints[2200043](2200045 '.v' c[2200015] _3_hints[2199922]))
    ref _4_err[2200051]:syserr[223672] "temp"
    (2200056 'move' _4_err[2200051](2200053 '.v' c[2200015] _4_err[2199924]))
    val _5_start[2200059]:int(64)[13] "temp"
    (2200064 'move' _5_start[2200059](2200061 '.v' c[2200015] _5_start[2199926]))
    val _6_end[2200067]:int(64)[13] "temp"
    (2200072 'move' _6_end[2200067](2200069 '.v' c[2200015] _6_end[2199928]))
    val _7_rvfDerefTmp[2200075]:iostyle[231932] "temp"
    (2200080 'move' _7_rvfDerefTmp[2200075](2200077 '.v' c[2200015] _7_rvfDerefTmp[2199930]))
    ref _8_error[2200083]:Error[167984] "temp"
    (2200088 'move' _8_error[2200083](2200085 '.v' c[2200015] _8_error[2199932]))
    (2200018 call on_fn[1016884] _1_rvfDerefTmp[2200027] _2_ret[2200035] _3_hints[2200043] _4_err[2200051] _5_start[2200059] _6_end[2200067] _7_rvfDerefTmp[2200075] _8_error[2200083])
    (2200091 return _void[55])
  }
  function wrapon_fn[2200202](const in arg dummy_locale_arg[2200204]:chpl_localeID_t[209352], in arg buf[2200206]:c_void_ptr[149], in arg buf_size[2200208]:int(64)[13], in arg c[2200210]:_class_localson_fn[2200120]) : void[4] "on block"
  {
    val _1_start[2200222]:int(64)[13] "temp"
    (2200227 'move' _1_start[2200222](2200224 '.v' c[2200210] _1_start[2200125]))
    val _2_rvfDerefTmp[2200230]:file[235668] "temp"
    (2200235 'move' _2_rvfDerefTmp[2200230](2200232 '.v' c[2200210] _2_rvfDerefTmp[2200127]))
    ref _3__formal_tmp_error[2200238]:syserr[223672] "temp"
    (2200243 'move' _3__formal_tmp_error[2200238](2200240 '.v' c[2200210] _3__formal_tmp_error[2200129]))
    ref _4_this[2200246]:channel(false,dynamic,true)[985816] "temp"
    (2200251 'move' _4_this[2200246](2200248 '.v' c[2200210] _4_this[2200131]))
    val _5_hints[2200254]:int(32)[95] "temp"
    (2200259 'move' _5_hints[2200254](2200256 '.v' c[2200210] _5_hints[2200133]))
    val _6_rvfDerefTmp[2200262]:iostyle[231932] "temp"
    (2200267 'move' _6_rvfDerefTmp[2200262](2200264 '.v' c[2200210] _6_rvfDerefTmp[2200135]))
    val _7_end[2200270]:int(64)[13] "temp"
    (2200275 'move' _7_end[2200270](2200272 '.v' c[2200210] _7_end[2200137]))
    (2200213 call on_fn[1017914] _1_start[2200222] _2_rvfDerefTmp[2200230] _3__formal_tmp_error[2200238] _4_this[2200246] _5_hints[2200254] _6_rvfDerefTmp[2200262] _7_end[2200270])
    (2200278 return _void[55])
  }
  function wrapon_fn[2200335](const in arg dummy_locale_arg[2200337]:chpl_localeID_t[209352], in arg buf[2200339]:c_void_ptr[149], in arg buf_size[2200341]:int(64)[13], in arg c[2200343]:_class_localson_fn[2200301]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2200355]:channel(false,dynamic,true)[985816] "temp"
    (2200360 'move' _1_rvfDerefTmp[2200355](2200357 '.v' c[2200343] _1_rvfDerefTmp[2200306]))
    (2200346 call on_fn[1018854] _1_rvfDerefTmp[2200355])
    (2200363 return _void[55])
  }
  function wrapon_fn[2200426](const in arg dummy_locale_arg[2200428]:chpl_localeID_t[209352], in arg buf[2200430]:c_void_ptr[149], in arg buf_size[2200432]:int(64)[13], in arg c[2200434]:_class_localson_fn[2200386]) : void[4] "on block"
  {
    ref _1_lhs[2200446]:channel(false,dynamic,true)[985816] "temp"
    (2200451 'move' _1_lhs[2200446](2200448 '.v' c[2200434] _1_lhs[2200391]))
    (2200437 call on_fn[1018898] _1_lhs[2200446])
    (2200454 return _void[55])
  }
  function wrapon_fn[2200690](const in arg dummy_locale_arg[2200692]:chpl_localeID_t[209352], in arg buf[2200694]:c_void_ptr[149], in arg buf_size[2200696]:int(64)[13], in arg c[2200698]:_class_localson_fn[2200596]) : void[4] "on block"
  {
    ref _1_ret[2200710]:channel(true,dynamic,true)[1022014] "temp"
    (2200715 'move' _1_ret[2200710](2200712 '.v' c[2200698] _1_ret[2200601]))
    val _2_hints[2200718]:int(32)[95] "temp"
    (2200723 'move' _2_hints[2200718](2200720 '.v' c[2200698] _2_hints[2200603]))
    val _3_start[2200726]:int(64)[13] "temp"
    (2200731 'move' _3_start[2200726](2200728 '.v' c[2200698] _3_start[2200605]))
    ref _4_err[2200734]:syserr[223672] "temp"
    (2200739 'move' _4_err[2200734](2200736 '.v' c[2200698] _4_err[2200607]))
    val _5_end[2200742]:int(64)[13] "temp"
    (2200747 'move' _5_end[2200742](2200744 '.v' c[2200698] _5_end[2200609]))
    val _6_rvfDerefTmp[2200750]:iostyle[231932] "temp"
    (2200755 'move' _6_rvfDerefTmp[2200750](2200752 '.v' c[2200698] _6_rvfDerefTmp[2200611]))
    val _7_rvfDerefTmp[2200758]:file[235668] "temp"
    (2200763 'move' _7_rvfDerefTmp[2200758](2200760 '.v' c[2200698] _7_rvfDerefTmp[2200613]))
    ref _8_error[2200766]:Error[167984] "temp"
    (2200771 'move' _8_error[2200766](2200768 '.v' c[2200698] _8_error[2200615]))
    (2200701 call on_fn[1022459] _1_ret[2200710] _2_hints[2200718] _3_start[2200726] _4_err[2200734] _5_end[2200742] _6_rvfDerefTmp[2200750] _7_rvfDerefTmp[2200758] _8_error[2200766])
    (2200774 return _void[55])
  }
  function wrapon_fn[2200885](const in arg dummy_locale_arg[2200887]:chpl_localeID_t[209352], in arg buf[2200889]:c_void_ptr[149], in arg buf_size[2200891]:int(64)[13], in arg c[2200893]:_class_localson_fn[2200803]) : void[4] "on block"
  {
    ref _1_this[2200905]:channel(true,dynamic,true)[1022014] "temp"
    (2200910 'move' _1_this[2200905](2200907 '.v' c[2200893] _1_this[2200808]))
    val _2_hints[2200913]:int(32)[95] "temp"
    (2200918 'move' _2_hints[2200913](2200915 '.v' c[2200893] _2_hints[2200810]))
    val _3_rvfDerefTmp[2200921]:iostyle[231932] "temp"
    (2200926 'move' _3_rvfDerefTmp[2200921](2200923 '.v' c[2200893] _3_rvfDerefTmp[2200812]))
    val _4_start[2200929]:int(64)[13] "temp"
    (2200934 'move' _4_start[2200929](2200931 '.v' c[2200893] _4_start[2200814]))
    val _5_rvfDerefTmp[2200937]:file[235668] "temp"
    (2200942 'move' _5_rvfDerefTmp[2200937](2200939 '.v' c[2200893] _5_rvfDerefTmp[2200816]))
    ref _6__formal_tmp_error[2200945]:syserr[223672] "temp"
    (2200950 'move' _6__formal_tmp_error[2200945](2200947 '.v' c[2200893] _6__formal_tmp_error[2200818]))
    val _7_end[2200953]:int(64)[13] "temp"
    (2200958 'move' _7_end[2200953](2200955 '.v' c[2200893] _7_end[2200820]))
    (2200896 call on_fn[1022950] _1_this[2200905] _2_hints[2200913] _3_rvfDerefTmp[2200921] _4_start[2200929] _5_rvfDerefTmp[2200937] _6__formal_tmp_error[2200945] _7_end[2200953])
    (2200961 return _void[55])
  }
  function wrapon_fn[2201018](const in arg dummy_locale_arg[2201020]:chpl_localeID_t[209352], in arg buf[2201022]:c_void_ptr[149], in arg buf_size[2201024]:int(64)[13], in arg c[2201026]:_class_localson_fn[2200984]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2201038]:channel(true,dynamic,true)[1022014] "temp"
    (2201043 'move' _1_rvfDerefTmp[2201038](2201040 '.v' c[2201026] _1_rvfDerefTmp[2200989]))
    (2201029 call on_fn[1023562] _1_rvfDerefTmp[2201038])
    (2201046 return _void[55])
  }
  function wrapon_fn[2201109](const in arg dummy_locale_arg[2201111]:chpl_localeID_t[209352], in arg buf[2201113]:c_void_ptr[149], in arg buf_size[2201115]:int(64)[13], in arg c[2201117]:_class_localson_fn[2201069]) : void[4] "on block"
  {
    ref _1_lhs[2201129]:channel(true,dynamic,true)[1022014] "temp"
    (2201134 'move' _1_lhs[2201129](2201131 '.v' c[2201117] _1_lhs[2201074]))
    (2201120 call on_fn[1023606] _1_lhs[2201129])
    (2201137 return _void[55])
  }
  function wrapon_fn[2201403](const in arg dummy_locale_arg[2201405]:chpl_localeID_t[209352], in arg buf[2201407]:c_void_ptr[149], in arg buf_size[2201409]:int(64)[13], in arg c[2201411]:_class_localson_fn[2201309]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2201423]:iostyle[231932] "temp"
    (2201428 'move' _1_rvfDerefTmp[2201423](2201425 '.v' c[2201411] _1_rvfDerefTmp[2201314]))
    val _2_rvfDerefTmp[2201431]:file[235668] "temp"
    (2201436 'move' _2_rvfDerefTmp[2201431](2201433 '.v' c[2201411] _2_rvfDerefTmp[2201316]))
    ref _3_err[2201439]:syserr[223672] "temp"
    (2201444 'move' _3_err[2201439](2201441 '.v' c[2201411] _3_err[2201318]))
    val _4_hints[2201447]:int(32)[95] "temp"
    (2201452 'move' _4_hints[2201447](2201449 '.v' c[2201411] _4_hints[2201320]))
    val _5_start[2201455]:int(64)[13] "temp"
    (2201460 'move' _5_start[2201455](2201457 '.v' c[2201411] _5_start[2201322]))
    ref _6_ret[2201463]:channel(true,dynamic,false)[1061136] "temp"
    (2201468 'move' _6_ret[2201463](2201465 '.v' c[2201411] _6_ret[2201324]))
    val _7_end[2201471]:int(64)[13] "temp"
    (2201476 'move' _7_end[2201471](2201473 '.v' c[2201411] _7_end[2201326]))
    ref _8_error[2201479]:Error[167984] "temp"
    (2201484 'move' _8_error[2201479](2201481 '.v' c[2201411] _8_error[2201328]))
    (2201414 call on_fn[1061211] _1_rvfDerefTmp[2201423] _2_rvfDerefTmp[2201431] _3_err[2201439] _4_hints[2201447] _5_start[2201455] _6_ret[2201463] _7_end[2201471] _8_error[2201479])
    (2201487 return _void[55])
  }
  function wrapon_fn[2201598](const in arg dummy_locale_arg[2201600]:chpl_localeID_t[209352], in arg buf[2201602]:c_void_ptr[149], in arg buf_size[2201604]:int(64)[13], in arg c[2201606]:_class_localson_fn[2201516]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2201618]:iostyle[231932] "temp"
    (2201623 'move' _1_rvfDerefTmp[2201618](2201620 '.v' c[2201606] _1_rvfDerefTmp[2201521]))
    ref _2_this[2201626]:channel(true,dynamic,false)[1061136] "temp"
    (2201631 'move' _2_this[2201626](2201628 '.v' c[2201606] _2_this[2201523]))
    val _3_start[2201634]:int(64)[13] "temp"
    (2201639 'move' _3_start[2201634](2201636 '.v' c[2201606] _3_start[2201525]))
    val _4_rvfDerefTmp[2201642]:file[235668] "temp"
    (2201647 'move' _4_rvfDerefTmp[2201642](2201644 '.v' c[2201606] _4_rvfDerefTmp[2201527]))
    ref _5__formal_tmp_error[2201650]:syserr[223672] "temp"
    (2201655 'move' _5__formal_tmp_error[2201650](2201652 '.v' c[2201606] _5__formal_tmp_error[2201529]))
    val _6_end[2201658]:int(64)[13] "temp"
    (2201663 'move' _6_end[2201658](2201660 '.v' c[2201606] _6_end[2201531]))
    val _7_hints[2201666]:int(32)[95] "temp"
    (2201671 'move' _7_hints[2201666](2201668 '.v' c[2201606] _7_hints[2201533]))
    (2201609 call on_fn[1061663] _1_rvfDerefTmp[2201618] _2_this[2201626] _3_start[2201634] _4_rvfDerefTmp[2201642] _5__formal_tmp_error[2201650] _6_end[2201658] _7_hints[2201666])
    (2201674 return _void[55])
  }
  function wrapon_fn[2201731](const in arg dummy_locale_arg[2201733]:chpl_localeID_t[209352], in arg buf[2201735]:c_void_ptr[149], in arg buf_size[2201737]:int(64)[13], in arg c[2201739]:_class_localson_fn[2201697]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2201751]:channel(true,dynamic,false)[1061136] "temp"
    (2201756 'move' _1_rvfDerefTmp[2201751](2201753 '.v' c[2201739] _1_rvfDerefTmp[2201702]))
    (2201742 call on_fn[1062275] _1_rvfDerefTmp[2201751])
    (2201759 return _void[55])
  }
  function wrapon_fn[2201822](const in arg dummy_locale_arg[2201824]:chpl_localeID_t[209352], in arg buf[2201826]:c_void_ptr[149], in arg buf_size[2201828]:int(64)[13], in arg c[2201830]:_class_localson_fn[2201782]) : void[4] "on block"
  {
    ref _1_lhs[2201842]:channel(true,dynamic,false)[1061136] "temp"
    (2201847 'move' _1_lhs[2201842](2201844 '.v' c[2201830] _1_lhs[2201787]))
    (2201833 call on_fn[1062319] _1_lhs[2201842])
    (2201850 return _void[55])
  }
  function wrapon_fn[2201920](const in arg dummy_locale_arg[2201922]:chpl_localeID_t[209352], in arg buf[2201924]:c_void_ptr[149], in arg buf_size[2201926]:int(64)[13], in arg c[2201928]:_class_localson_fn[2201874]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2201940]:channel(true,dynamic,false)[1061136] "temp"
    (2201945 'move' _1_rvfDerefTmp[2201940](2201942 '.v' c[2201928] _1_rvfDerefTmp[2201879]))
    ref _2_err[2201948]:syserr[223672] "temp"
    (2201953 'move' _2_err[2201948](2201950 '.v' c[2201928] _2_err[2201881]))
    (2201931 call on_fn[1062644] _1_rvfDerefTmp[2201940] _2_err[2201948])
    (2201956 return _void[55])
  }
  function wrapon_fn[2202058](const in arg dummy_locale_arg[2202060]:chpl_localeID_t[209352], in arg buf[2202062]:c_void_ptr[149], in arg buf_size[2202064]:int(64)[13], in arg c[2202066]:_class_localson_fn[2201982]) : void[4] "on block"
  {
    ref _1_this[2202078]:channel(true,dynamic,false)[1061136] "temp"
    (2202083 'move' _1_this[2202078](2202080 '.v' c[2202066] _1_this[2201987]))
    ref _2_path[2202086]:string[26] "temp"
    (2202091 'move' _2_path[2202086](2202088 '.v' c[2202066] _2_path[2201989]))
    ref _3_offset[2202094]:int(64)[13] "temp"
    (2202099 'move' _3_offset[2202094](2202096 '.v' c[2202066] _3_offset[2201991]))
    ref _4_error[2202102]:Error[167984] "temp"
    (2202107 'move' _4_error[2202102](2202104 '.v' c[2202066] _4_error[2201993]))
    (2202069 call on_fn[1063121] _1_this[2202078] _2_path[2202086] _3_offset[2202094] _4_error[2202102])
    (2202110 return _void[55])
  }
  function wrapon_fn[2202200](const in arg dummy_locale_arg[2202202]:chpl_localeID_t[209352], in arg buf[2202204]:c_void_ptr[149], in arg buf_size[2202206]:int(64)[13], in arg c[2202208]:_class_localson_fn[2202136]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2202220]:channel(true,dynamic,false)[1061136] "temp"
    (2202225 'move' _1_rvfDerefTmp[2202220](2202222 '.v' c[2202208] _1_rvfDerefTmp[2202141]))
    ref _2_args[2202228]:1*byteIndex[1057270] "temp"
    (2202233 'move' _2_args[2202228](2202230 '.v' c[2202208] _2_args[2202143]))
    val _3_rvfDerefTmp[2202236]:locale[28] "temp"
    (2202241 'move' _3_rvfDerefTmp[2202236](2202238 '.v' c[2202208] _3_rvfDerefTmp[2202145]))
    ref _4_error[2202244]:Error[167984] "temp"
    (2202249 'move' _4_error[2202244](2202246 '.v' c[2202208] _4_error[2202147]))
    (2202211 call on_fn[1066278] _1_rvfDerefTmp[2202220] _2_args[2202228] _3_rvfDerefTmp[2202236] _4_error[2202244])
    (2202252 return _void[55])
  }
  function wrapon_fn[2202342](const in arg dummy_locale_arg[2202344]:chpl_localeID_t[209352], in arg buf[2202346]:c_void_ptr[149], in arg buf_size[2202348]:int(64)[13], in arg c[2202350]:_class_localson_fn[2202278]) : void[4] "on block"
  {
    ref _1_this[2202362]:channel(true,dynamic,false)[1061136] "temp"
    (2202367 'move' _1_this[2202362](2202364 '.v' c[2202350] _1_this[2202283]))
    val _2_x[2202370]:int(64)[13] "temp"
    (2202375 'move' _2_x[2202370](2202372 '.v' c[2202350] _2_x[2202285]))
    val _3_rvfDerefTmp[2202378]:locale[28] "temp"
    (2202383 'move' _3_rvfDerefTmp[2202378](2202380 '.v' c[2202350] _3_rvfDerefTmp[2202287]))
    ref _4_error[2202386]:Error[167984] "temp"
    (2202391 'move' _4_error[2202386](2202388 '.v' c[2202350] _4_error[2202289]))
    (2202353 call on_fn[1069057] _1_this[2202362] _2_x[2202370] _3_rvfDerefTmp[2202378] _4_error[2202386])
    (2202394 return _void[55])
  }
  function wrapon_fn[2202464](const in arg dummy_locale_arg[2202466]:chpl_localeID_t[209352], in arg buf[2202468]:c_void_ptr[149], in arg buf_size[2202470]:int(64)[13], in arg c[2202472]:_class_localson_fn[2202418]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2202484]:channel(true,dynamic,false)[1061136] "temp"
    (2202489 'move' _1_rvfDerefTmp[2202484](2202486 '.v' c[2202472] _1_rvfDerefTmp[2202423]))
    ref _2_ret[2202492]:int(64)[13] "temp"
    (2202497 'move' _2_ret[2202492](2202494 '.v' c[2202472] _2_ret[2202425]))
    (2202475 call on_fn[1080394] _1_rvfDerefTmp[2202484] _2_ret[2202492])
    (2202500 return _void[55])
  }
  function wrapon_fn[2202624](const in arg dummy_locale_arg[2202626]:chpl_localeID_t[209352], in arg buf[2202628]:c_void_ptr[149], in arg buf_size[2202630]:int(64)[13], in arg c[2202632]:_class_localson_fn[2202530]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2202644]:iostyle[231932] "temp"
    (2202649 'move' _1_rvfDerefTmp[2202644](2202646 '.v' c[2202632] _1_rvfDerefTmp[2202535]))
    val _2_end[2202652]:int(64)[13] "temp"
    (2202657 'move' _2_end[2202652](2202654 '.v' c[2202632] _2_end[2202537]))
    val _3_rvfDerefTmp[2202660]:file[235668] "temp"
    (2202665 'move' _3_rvfDerefTmp[2202660](2202662 '.v' c[2202632] _3_rvfDerefTmp[2202539]))
    ref _4_err[2202668]:syserr[223672] "temp"
    (2202673 'move' _4_err[2202668](2202670 '.v' c[2202632] _4_err[2202541]))
    val _5_hints[2202676]:int(32)[95] "temp"
    (2202681 'move' _5_hints[2202676](2202678 '.v' c[2202632] _5_hints[2202543]))
    val _6_start[2202684]:int(64)[13] "temp"
    (2202689 'move' _6_start[2202684](2202686 '.v' c[2202632] _6_start[2202545]))
    ref _7_ret[2202692]:channel(false,dynamic,false)[1080871] "temp"
    (2202697 'move' _7_ret[2202692](2202694 '.v' c[2202632] _7_ret[2202547]))
    ref _8_error[2202700]:Error[167984] "temp"
    (2202705 'move' _8_error[2202700](2202702 '.v' c[2202632] _8_error[2202549]))
    (2202635 call on_fn[1080946] _1_rvfDerefTmp[2202644] _2_end[2202652] _3_rvfDerefTmp[2202660] _4_err[2202668] _5_hints[2202676] _6_start[2202684] _7_ret[2202692] _8_error[2202700])
    (2202708 return _void[55])
  }
  function wrapon_fn[2202819](const in arg dummy_locale_arg[2202821]:chpl_localeID_t[209352], in arg buf[2202823]:c_void_ptr[149], in arg buf_size[2202825]:int(64)[13], in arg c[2202827]:_class_localson_fn[2202737]) : void[4] "on block"
  {
    val _1_start[2202839]:int(64)[13] "temp"
    (2202844 'move' _1_start[2202839](2202841 '.v' c[2202827] _1_start[2202742]))
    val _2_rvfDerefTmp[2202847]:file[235668] "temp"
    (2202852 'move' _2_rvfDerefTmp[2202847](2202849 '.v' c[2202827] _2_rvfDerefTmp[2202744]))
    ref _3__formal_tmp_error[2202855]:syserr[223672] "temp"
    (2202860 'move' _3__formal_tmp_error[2202855](2202857 '.v' c[2202827] _3__formal_tmp_error[2202746]))
    val _4_end[2202863]:int(64)[13] "temp"
    (2202868 'move' _4_end[2202863](2202865 '.v' c[2202827] _4_end[2202748]))
    val _5_hints[2202871]:int(32)[95] "temp"
    (2202876 'move' _5_hints[2202871](2202873 '.v' c[2202827] _5_hints[2202750]))
    val _6_rvfDerefTmp[2202879]:iostyle[231932] "temp"
    (2202884 'move' _6_rvfDerefTmp[2202879](2202881 '.v' c[2202827] _6_rvfDerefTmp[2202752]))
    ref _7_this[2202887]:channel(false,dynamic,false)[1080871] "temp"
    (2202892 'move' _7_this[2202887](2202889 '.v' c[2202827] _7_this[2202754]))
    (2202830 call on_fn[1081395] _1_start[2202839] _2_rvfDerefTmp[2202847] _3__formal_tmp_error[2202855] _4_end[2202863] _5_hints[2202871] _6_rvfDerefTmp[2202879] _7_this[2202887])
    (2202895 return _void[55])
  }
  function wrapon_fn[2202952](const in arg dummy_locale_arg[2202954]:chpl_localeID_t[209352], in arg buf[2202956]:c_void_ptr[149], in arg buf_size[2202958]:int(64)[13], in arg c[2202960]:_class_localson_fn[2202918]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2202972]:channel(false,dynamic,false)[1080871] "temp"
    (2202977 'move' _1_rvfDerefTmp[2202972](2202974 '.v' c[2202960] _1_rvfDerefTmp[2202923]))
    (2202963 call on_fn[1082007] _1_rvfDerefTmp[2202972])
    (2202980 return _void[55])
  }
  function wrapon_fn[2203043](const in arg dummy_locale_arg[2203045]:chpl_localeID_t[209352], in arg buf[2203047]:c_void_ptr[149], in arg buf_size[2203049]:int(64)[13], in arg c[2203051]:_class_localson_fn[2203003]) : void[4] "on block"
  {
    ref _1_lhs[2203063]:channel(false,dynamic,false)[1080871] "temp"
    (2203068 'move' _1_lhs[2203063](2203065 '.v' c[2203051] _1_lhs[2203008]))
    (2203054 call on_fn[1082051] _1_lhs[2203063])
    (2203071 return _void[55])
  }
  function wrapon_fn[2203141](const in arg dummy_locale_arg[2203143]:chpl_localeID_t[209352], in arg buf[2203145]:c_void_ptr[149], in arg buf_size[2203147]:int(64)[13], in arg c[2203149]:_class_localson_fn[2203095]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2203161]:channel(false,dynamic,false)[1080871] "temp"
    (2203166 'move' _1_rvfDerefTmp[2203161](2203163 '.v' c[2203149] _1_rvfDerefTmp[2203100]))
    ref _2_err[2203169]:syserr[223672] "temp"
    (2203174 'move' _2_err[2203169](2203171 '.v' c[2203149] _2_err[2203102]))
    (2203152 call on_fn[1082376] _1_rvfDerefTmp[2203161] _2_err[2203169])
    (2203177 return _void[55])
  }
  function wrapon_fn[2203273](const in arg dummy_locale_arg[2203275]:chpl_localeID_t[209352], in arg buf[2203277]:c_void_ptr[149], in arg buf_size[2203279]:int(64)[13], in arg c[2203281]:_class_localson_fn[2203203]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2203293]:channel(false,dynamic,false)[1080871] "temp"
    (2203298 'move' _1_rvfDerefTmp[2203293](2203295 '.v' c[2203281] _1_rvfDerefTmp[2203208]))
    ref _2_path[2203301]:string[26] "temp"
    (2203306 'move' _2_path[2203301](2203303 '.v' c[2203281] _2_path[2203210]))
    ref _3_offset[2203309]:int(64)[13] "temp"
    (2203314 'move' _3_offset[2203309](2203311 '.v' c[2203281] _3_offset[2203212]))
    ref _4_error[2203317]:Error[167984] "temp"
    (2203322 'move' _4_error[2203317](2203319 '.v' c[2203281] _4_error[2203214]))
    (2203284 call on_fn[1082805] _1_rvfDerefTmp[2203293] _2_path[2203301] _3_offset[2203309] _4_error[2203317])
    (2203325 return _void[55])
  }
  function wrapon_fn[2203557](const in arg dummy_locale_arg[2203559]:chpl_localeID_t[209352], in arg buf[2203561]:c_void_ptr[149], in arg buf_size[2203563]:int(64)[13], in arg c[2203565]:_class_localson_fn[2203493]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2203577]:channel(true,dynamic,false)[1061136] "temp"
    (2203582 'move' _1_rvfDerefTmp[2203577](2203579 '.v' c[2203565] _1_rvfDerefTmp[2203498]))
    ref _2_args[2203585]:(string,codepointIndex,string)[1158744] "temp"
    (2203590 'move' _2_args[2203585](2203587 '.v' c[2203565] _2_args[2203500]))
    val _3_rvfDerefTmp[2203593]:locale[28] "temp"
    (2203598 'move' _3_rvfDerefTmp[2203593](2203595 '.v' c[2203565] _3_rvfDerefTmp[2203502]))
    ref _4_error[2203601]:Error[167984] "temp"
    (2203606 'move' _4_error[2203601](2203603 '.v' c[2203565] _4_error[2203504]))
    (2203568 call on_fn[1165096] _1_rvfDerefTmp[2203577] _2_args[2203585] _3_rvfDerefTmp[2203593] _4_error[2203601])
    (2203609 return _void[55])
  }
  function wrapon_fn[2203699](const in arg dummy_locale_arg[2203701]:chpl_localeID_t[209352], in arg buf[2203703]:c_void_ptr[149], in arg buf_size[2203705]:int(64)[13], in arg c[2203707]:_class_localson_fn[2203635]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2203719]:channel(true,dynamic,false)[1061136] "temp"
    (2203724 'move' _1_rvfDerefTmp[2203719](2203721 '.v' c[2203707] _1_rvfDerefTmp[2203640]))
    ref _2_args[2203727]:(string,codepointIndex,string,int(64))[1176709] "temp"
    (2203732 'move' _2_args[2203727](2203729 '.v' c[2203707] _2_args[2203642]))
    val _3_rvfDerefTmp[2203735]:locale[28] "temp"
    (2203740 'move' _3_rvfDerefTmp[2203735](2203737 '.v' c[2203707] _3_rvfDerefTmp[2203644]))
    ref _4_error[2203743]:Error[167984] "temp"
    (2203748 'move' _4_error[2203743](2203745 '.v' c[2203707] _4_error[2203646]))
    (2203710 call on_fn[1180575] _1_rvfDerefTmp[2203719] _2_args[2203727] _3_rvfDerefTmp[2203735] _4_error[2203743])
    (2203751 return _void[55])
  }
  function wrapon_fn[2208607](const in arg dummy_locale_arg[2208609]:chpl_localeID_t[209352], in arg buf[2208611]:c_void_ptr[149], in arg buf_size[2208613]:int(64)[13], in arg c[2208615]:_class_localson_fn[2208543]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2208627]:channel(true,dynamic,true)[1022014] "temp"
    (2208632 'move' _1_rvfDerefTmp[2208627](2208629 '.v' c[2208615] _1_rvfDerefTmp[2208548]))
    ref _2_args[2208635]:([domain(1,int(64),false)] real(64),ioNewline)[1552281] "temp"
    (2208640 'move' _2_args[2208635](2208637 '.v' c[2208615] _2_args[2208550]))
    val _3_rvfDerefTmp[2208643]:locale[28] "temp"
    (2208648 'move' _3_rvfDerefTmp[2208643](2208645 '.v' c[2208615] _3_rvfDerefTmp[2208552]))
    ref _4_error[2208651]:Error[167984] "temp"
    (2208656 'move' _4_error[2208651](2208653 '.v' c[2208615] _4_error[2208554]))
    (2208618 call on_fn[1552156] _1_rvfDerefTmp[2208627] _2_args[2208635] _3_rvfDerefTmp[2208643] _4_error[2208651])
    (2208659 return _void[55])
  }
  function wrapon_fn[2208729](const in arg dummy_locale_arg[2208731]:chpl_localeID_t[209352], in arg buf[2208733]:c_void_ptr[149], in arg buf_size[2208735]:int(64)[13], in arg c[2208737]:_class_localson_fn[2208683]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2208749]:channel(true,dynamic,true)[1022014] "temp"
    (2208754 'move' _1_rvfDerefTmp[2208749](2208751 '.v' c[2208737] _1_rvfDerefTmp[2208688]))
    ref _2_err[2208757]:syserr[223672] "temp"
    (2208762 'move' _2_err[2208757](2208759 '.v' c[2208737] _2_err[2208690]))
    (2208740 call on_fn[1552598] _1_rvfDerefTmp[2208749] _2_err[2208757])
    (2208765 return _void[55])
  }
  function wrapon_fn[2208861](const in arg dummy_locale_arg[2208863]:chpl_localeID_t[209352], in arg buf[2208865]:c_void_ptr[149], in arg buf_size[2208867]:int(64)[13], in arg c[2208869]:_class_localson_fn[2208791]) : void[4] "on block"
  {
    val _1_rvfDerefTmp[2208881]:channel(true,dynamic,true)[1022014] "temp"
    (2208886 'move' _1_rvfDerefTmp[2208881](2208883 '.v' c[2208869] _1_rvfDerefTmp[2208796]))
    ref _2_path[2208889]:string[26] "temp"
    (2208894 'move' _2_path[2208889](2208891 '.v' c[2208869] _2_path[2208798]))
    ref _3_offset[2208897]:int(64)[13] "temp"
    (2208902 'move' _3_offset[2208897](2208899 '.v' c[2208869] _3_offset[2208800]))
    ref _4_error[2208905]:Error[167984] "temp"
    (2208910 'move' _4_error[2208905](2208907 '.v' c[2208869] _4_error[2208802]))
    (2208872 call on_fn[1553015] _1_rvfDerefTmp[2208881] _2_path[2208889] _3_offset[2208897] _4_error[2208905])
    (2208913 return _void[55])
  }
  function wrapon_fn[2208970](const in arg dummy_locale_arg[2208972]:chpl_localeID_t[209352], in arg buf[2208974]:c_void_ptr[149], in arg buf_size[2208976]:int(64)[13], in arg c[2208978]:_class_localson_fn[2208936]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2208990]:channel(true,dynamic,true)[1022014] "temp"
    (2208995 'move' _1_rvfDerefTmp[2208990](2208992 '.v' c[2208978] _1_rvfDerefTmp[2208941]))
    (2208981 call on_fn[1553289] _1_rvfDerefTmp[2208990])
    (2208998 return _void[55])
  }
  function wrapon_fn[2209081](const in arg dummy_locale_arg[2209083]:chpl_localeID_t[209352], in arg buf[2209085]:c_void_ptr[149], in arg buf_size[2209087]:int(64)[13], in arg c[2209089]:_class_localson_fn[2209023]) : void[4] "on block"
  {
    ref _1_this[2209101]:channel(true,dynamic,false)[1061136] "temp"
    (2209106 'move' _1_this[2209101](2209103 '.v' c[2209089] _1_this[2209028]))
    val _2_element[2209109]:int(64)[13] "temp"
    (2209114 'move' _2_element[2209109](2209111 '.v' c[2209089] _2_element[2209030]))
    ref _3_ret[2209117]:int(64)[13] "temp"
    (2209122 'move' _3_ret[2209117](2209119 '.v' c[2209089] _3_ret[2209032]))
    (2209092 call on_fn[1559293] _1_this[2209101] _2_element[2209109] _3_ret[2209117])
    (2209125 return _void[55])
  }
  function wrapon_fn[2209201](const in arg dummy_locale_arg[2209203]:chpl_localeID_t[209352], in arg buf[2209205]:c_void_ptr[149], in arg buf_size[2209207]:int(64)[13], in arg c[2209209]:_class_localson_fn[2209149]) : void[4] "on block"
  {
    ref _1_this[2209221]:channel(true,dynamic,false)[1061136] "temp"
    (2209226 'move' _1_this[2209221](2209223 '.v' c[2209209] _1_this[2209154]))
    ref _2_ret[2209229]:uint(8)[100] "temp"
    (2209234 'move' _2_ret[2209229](2209231 '.v' c[2209209] _2_ret[2209156]))
    (2209212 call on_fn[1559671] _1_this[2209221] _2_ret[2209229])
    (2209237 return _void[55])
  }
  function wrapon_fn[2209340](const in arg dummy_locale_arg[2209342]:chpl_localeID_t[209352], in arg buf[2209344]:c_void_ptr[149], in arg buf_size[2209346]:int(64)[13], in arg c[2209348]:_class_localson_fn[2209264]) : void[4] "on block"
  {
    ref _1_this[2209360]:channel(true,dynamic,false)[1061136] "temp"
    (2209365 'move' _1_this[2209360](2209362 '.v' c[2209348] _1_this[2209269]))
    val _2_x[2209368]:_ddata(real(64))[1358105] "temp"
    (2209373 'move' _2_x[2209368](2209370 '.v' c[2209348] _2_x[2209271]))
    val _3_len[2209376]:int(64)[13] "temp"
    (2209381 'move' _3_len[2209376](2209378 '.v' c[2209348] _3_len[2209273]))
    ref _4_err[2209384]:syserr[223672] "temp"
    (2209389 'move' _4_err[2209384](2209386 '.v' c[2209348] _4_err[2209275]))
    ref _5_error[2209392]:Error[167984] "temp"
    (2209397 'move' _5_error[2209392](2209394 '.v' c[2209348] _5_error[2209277]))
    (2209351 call on_fn[1565038] _1_this[2209360] _2_x[2209368] _3_len[2209376] _4_err[2209384] _5_error[2209392])
    (2209400 return _void[55])
  }
  function wrapon_fn[2209490](const in arg dummy_locale_arg[2209492]:chpl_localeID_t[209352], in arg buf[2209494]:c_void_ptr[149], in arg buf_size[2209496]:int(64)[13], in arg c[2209498]:_class_localson_fn[2209426]) : void[4] "on block"
  {
    ref _1_this[2209510]:channel(true,dynamic,false)[1061136] "temp"
    (2209515 'move' _1_this[2209510](2209512 '.v' c[2209498] _1_this[2209431]))
    val _2_rvfDerefTmp[2209518]:ioLiteral[238841] "temp"
    (2209523 'move' _2_rvfDerefTmp[2209518](2209520 '.v' c[2209498] _2_rvfDerefTmp[2209433]))
    val _3_rvfDerefTmp[2209526]:locale[28] "temp"
    (2209531 'move' _3_rvfDerefTmp[2209526](2209528 '.v' c[2209498] _3_rvfDerefTmp[2209435]))
    ref _4_error[2209534]:Error[167984] "temp"
    (2209539 'move' _4_error[2209534](2209536 '.v' c[2209498] _4_error[2209437]))
    (2209501 call on_fn[1565680] _1_this[2209510] _2_rvfDerefTmp[2209518] _3_rvfDerefTmp[2209526] _4_error[2209534])
    (2209542 return _void[55])
  }
  function wrapon_fn[2209632](const in arg dummy_locale_arg[2209634]:chpl_localeID_t[209352], in arg buf[2209636]:c_void_ptr[149], in arg buf_size[2209638]:int(64)[13], in arg c[2209640]:_class_localson_fn[2209568]) : void[4] "on block"
  {
    ref _1_this[2209652]:channel(true,dynamic,false)[1061136] "temp"
    (2209657 'move' _1_this[2209652](2209654 '.v' c[2209640] _1_this[2209573]))
    val _2_x[2209660]:real(64)[16] "temp"
    (2209665 'move' _2_x[2209660](2209662 '.v' c[2209640] _2_x[2209575]))
    val _3_rvfDerefTmp[2209668]:locale[28] "temp"
    (2209673 'move' _3_rvfDerefTmp[2209668](2209670 '.v' c[2209640] _3_rvfDerefTmp[2209577]))
    ref _4_error[2209676]:Error[167984] "temp"
    (2209681 'move' _4_error[2209676](2209678 '.v' c[2209640] _4_error[2209579]))
    (2209643 call on_fn[1578648] _1_this[2209652] _2_x[2209660] _3_rvfDerefTmp[2209668] _4_error[2209676])
    (2209684 return _void[55])
  }
  function wrapon_fn[2209774](const in arg dummy_locale_arg[2209776]:chpl_localeID_t[209352], in arg buf[2209778]:c_void_ptr[149], in arg buf_size[2209780]:int(64)[13], in arg c[2209782]:_class_localson_fn[2209710]) : void[4] "inlined function" "on block"
  {
    val _1_rvfDerefTmp[2209794]:channel(true,dynamic,true)[1022014] "temp"
    (2209799 'move' _1_rvfDerefTmp[2209794](2209796 '.v' c[2209782] _1_rvfDerefTmp[2209715]))
    ref _2_args[2209802]:(string,ioNewline)[1589826] "temp"
    (2209807 'move' _2_args[2209802](2209804 '.v' c[2209782] _2_args[2209717]))
    val _3_rvfDerefTmp[2209810]:locale[28] "temp"
    (2209815 'move' _3_rvfDerefTmp[2209810](2209812 '.v' c[2209782] _3_rvfDerefTmp[2209719]))
    ref _4_error[2209818]:Error[167984] "temp"
    (2209823 'move' _4_error[2209818](2209820 '.v' c[2209782] _4_error[2209721]))
    (2209785 call on_fn[1589701] _1_rvfDerefTmp[2209794] _2_args[2209802] _3_rvfDerefTmp[2209810] _4_error[2209818])
    (2209826 return _void[55])
  }
  function wrapon_fn[2210793](const in arg dummy_locale_arg[2210795]:chpl_localeID_t[209352], in arg buf[2210797]:c_void_ptr[149], in arg buf_size[2210799]:int(64)[13], in arg c[2210801]:_class_localson_fn[2210753]) : void[4] "on block"
  {
    ref _1_this[2210813]:channel(false,dynamic,true)[985816] "temp"
    (2210818 'move' _1_this[2210813](2210815 '.v' c[2210801] _1_this[2210758]))
    (2210804 call on_fn[1611238] _1_this[2210813])
    (2210821 return _void[55])
  }
  function wrapon_fn[2212584](const in arg dummy_locale_arg[2212586]:chpl_localeID_t[209352], in arg buf[2212588]:c_void_ptr[149], in arg buf_size[2212590]:int(64)[13], in arg c[2212592]:_class_localson_fn[2212544]) : void[4] "on block"
  {
    ref _1_this[2212604]:channel(true,dynamic,true)[1022014] "temp"
    (2212609 'move' _1_this[2212604](2212606 '.v' c[2212592] _1_this[2212549]))
    (2212595 call on_fn[1674217] _1_this[2212604])
    (2212612 return _void[55])
  }
  function wrapon_fn[2212760](const in arg dummy_locale_arg[2212762]:chpl_localeID_t[209352], in arg buf[2212764]:c_void_ptr[149], in arg buf_size[2212766]:int(64)[13], in arg c[2212768]:_class_localson_fn[2212720]) : void[4] "on block"
  {
    ref _1_this[2212780]:channel(true,dynamic,false)[1061136] "temp"
    (2212785 'move' _1_this[2212780](2212782 '.v' c[2212768] _1_this[2212725]))
    (2212771 call on_fn[1676381] _1_this[2212780])
    (2212788 return _void[55])
  }
  function wrapon_fn[2213021](const in arg dummy_locale_arg[2213023]:chpl_localeID_t[209352], in arg buf[2213025]:c_void_ptr[149], in arg buf_size[2213027]:int(64)[13], in arg c[2213029]:_class_localson_fn[2212981]) : void[4] "on block"
  {
    ref _1_this[2213041]:channel(false,dynamic,false)[1080871] "temp"
    (2213046 'move' _1_this[2213041](2213043 '.v' c[2213029] _1_this[2212986]))
    (2213032 call on_fn[1680635] _1_this[2213041])
    (2213049 return _void[55])
  }
}