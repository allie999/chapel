AST dump for BytesStringCommon after pass parallel.
Module use list: ChapelStandard SysCTypes ByteBufferHelpers NVStringFactory SysBasic Bytes String 

{
  type _class_localson_fn[2056838] val _runtime_hdr[2056839]:chpl_comm_on_bundle_t[209359] val _0_tmp[2056841]:chpl_localeID_t[209352] val _1_needle_data[2056843]:__serializeHelper[28089] ref _2_x[2056845]:string[26] val _3_region[2056847]:range(byteIndex,boundedLow,false)[1143422] ref _4_ret[2056849]:int(64)[13]
  type _class_localson_fn[2054224] val _runtime_hdr[2054225]:chpl_comm_on_bundle_t[209359] val _0_tmp[2054227]:chpl_localeID_t[209352] val _1_needle_data[2054229]:__serializeHelper[28089] ref _2_x[2054231]:string[26] val _3_region[2054233]:range(byteIndex,bounded,false)[1025811] ref _4_ret[2054235]:int(64)[13]
  type _class_localson_fn[2053539] val _runtime_hdr[2053540]:chpl_comm_on_bundle_t[209359] val _0_tmp[2053542]:chpl_localeID_t[209352] ref _1_lhs[2053544]:string[26] ref _2_rhs[2053546]:string[26]
  type _class_localson_fn[2052771] val _runtime_hdr[2052772]:chpl_comm_on_bundle_t[209359] val _0_tmp[2052774]:chpl_localeID_t[209352] ref _1_lhs[2052776]:string[26] ref _2_rhs[2052778]:string[26]
  type _class_localson_fn[2051935] val _runtime_hdr[2051936]:chpl_comm_on_bundle_t[209359] val _0_tmp[2051938]:chpl_localeID_t[209352] ref _1_x[2051940]:string[26] ref _2_ret[2051942]:int(64)[13]
  function chpl__init_BytesStringCommon[416073]() : void[4] "insert line file info" "module init" "resolved"
  {
    {
    }
    (523443 return _void[55])
  }
  type decodePolicy[173702] def strict[173692]:decodePolicy[173702] def replace[173694]:decodePolicy[173702] def drop[173696]:decodePolicy[173702] def escape[173698]:decodePolicy[173702] def ignore[173700]:decodePolicy[173702]
  type encodePolicy[173710] def unescape[173706]:encodePolicy[173710] def pass[173708]:encodePolicy[173710]
  function getCStr[957303](const  ref arg x[957305]:_ref(string)[937958]) : c_string[19] "inline" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[957309]:c_string[19] "dead after last mention" "RVV" "temp"
    val call_tmp[957317]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[957374]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[957392]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[957394]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957396 'move' call_tmp[957394](957399 call locale_id[758061] x[957305]))
    const-val call_tmp[957402]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[957750]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (957754 'move' coerce_tmp[957750](957752 'deref' call_tmp[957394]))
    (957404 'move' call_tmp[957402](957407 call !=[436028] coerce_tmp[957750] chpl_nodeID[208207]))
    (957410 'move' tmp[957392] call_tmp[957402])
    (957415 'move' tmp[957374] tmp[957392])
    const-val call_tmp[957427]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (957429 'move' call_tmp[957427] tmp[957374])
    if call_tmp[957427]
    {
      val call_tmp[957436]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (957459 call halt[154111] "Cannot call .c_str() on a remote string")
    }
    ref call_tmp[957462]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (957464 'move' call_tmp[957462](957467 call buff[757983] x[957305]))
    const-val call_tmp[957470]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[958076]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (958080 'move' coerce_tmp[958076](958078 'deref' call_tmp[957462]))
    (957472 'move' call_tmp[957470](957475 call _cast[957328] coerce_tmp[958076]))
    (958085 'move' ret[957309] call_tmp[957470])
    (957483 return ret[957309])
  }
  function decodeByteBuffer[173938](const in arg buff[173935]:c_ptr(uint(8))[937442], const in arg length[173941]:int(64)[13], const in arg policy[173945]:decodePolicy[173702], ref arg error_out[1782525]:Error[167984], ref arg _retArg[1804654]:_ref(string)[937958]) : void[4] throws "fn returns via _retArg" "resolved"
  {
    val ret[522804]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[682259]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682262 'move' call_tmp[682259](173988 call ==[435666] length[173941] 0))
    const-val call_tmp[682264]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682267 'move' call_tmp[682264] call_tmp[682259])
    if call_tmp[682264]
    {
      (522809 'move' ret[522804](1804658 call chpl__initCopy[981367] ""))
      gotoReturn _end_decodeByteBuffer[522802] _end_decodeByteBuffer[522802]
    }
    const-val call_tmp[682269]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (682272 'move' call_tmp[682269](174022 call +[949685] length[173941]))
    const-val call_tmp[682274]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1805298]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (174025 call bufferAlloc[955037] call_tmp[682269] ret_tmp[1805298])
    (1805301 'move' call_tmp[682274] ret_tmp[1805298])
    const-val tmp[174026]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (544917 'move' tmp[174026] call_tmp[682274])
    1
    ref call_tmp[682279]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (682282 'move' call_tmp[682279](964364 '.' tmp[174026] x0[955223]))
    val newBuff[174014]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[964369]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964373 'move' coerce_tmp[964369](964371 'deref' call_tmp[682279]))
    (1815499 '=' newBuff[174014] coerce_tmp[964369])
    (544919 'noop')
    ref call_tmp[682284]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (682287 'move' call_tmp[682284](964378 '.' tmp[174026] x1[955225]))
    val allocSize[174016]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[964383]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (964387 'move' coerce_tmp[964383](964385 'deref' call_tmp[682284]))
    (1815502 '=' allocSize[174016] coerce_tmp[964383])
    (544921 'noop')
    val hasEscapes[174040]:bool[10] "dead at end of block" "insert auto destroy"
    (544923 'move' hasEscapes[174040] 0)
    val numCodepoints[174045]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544925 'move' numCodepoints[174045] 0)
    val expectedSize[174050]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544927 'move' expectedSize[174050] allocSize[174016])
    val thisIdx[174055]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544929 'move' thisIdx[174055] 0)
    val decodedIdx[174060]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544931 'move' decodedIdx[174060] 0)
    {
      val tmp[174375]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[682289]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (682292 'move' call_tmp[682289](174396 call <[437490] thisIdx[174055] length[173941]))
      (174399 'move' tmp[174375] call_tmp[682289])
      WhileDo[174380] hazard
      {
        {
          const-val call_tmp[682294]:(syserr,int(32),int(32))[964639] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1804674]:(syserr,int(32),int(32))[964639] "temp"
          (174082 call decodeHelp[174452] buff[173935] length[173941] thisIdx[174055] 0 ret_tmp[1804674])
          (1804677 'move' call_tmp[682294] ret_tmp[1804674])
          const-val tmp[174083]:(syserr,int(32),int(32))[964639] "dead at end of block" "const" "insert auto destroy" "temp"
          (544933 'move' tmp[174083] call_tmp[682294])
          1
          ref call_tmp[682299]:_ref(syserr)[948851] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682302 'move' call_tmp[682299](965401 '.' tmp[174083] x0[964633]))
          const-val decodeRet[174068]:syserr[223603] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965406]:syserr[223603] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965410 'move' coerce_tmp[965406](965408 'deref' call_tmp[682299]))
          (1815505 '=' decodeRet[174068] coerce_tmp[965406])
          (544935 'noop')
          ref call_tmp[682304]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682307 'move' call_tmp[682304](965415 '.' tmp[174083] x1[964635]))
          const-val cp[174070]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965420]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965424 'move' coerce_tmp[965420](965422 'deref' call_tmp[682304]))
          (1815508 '=' cp[174070] coerce_tmp[965420])
          (544937 'noop')
          ref call_tmp[682309]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
          (682312 'move' call_tmp[682309](965429 '.' tmp[174083] x2[964637]))
          const-val nBytes[174072]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
          const-val coerce_tmp[965434]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
          (965438 'move' coerce_tmp[965434](965436 'deref' call_tmp[682309]))
          (1815511 '=' nBytes[174072] coerce_tmp[965434])
          (544939 'noop')
          val call_tmp[682314]:c_ptr(uint(8))[937442] "dead at end of block" "maybe param" "temp"
          (682317 'move' call_tmp[682314](174102 call +[956020] buff[173935] thisIdx[174055]))
          val buffToDecode[174104]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
          (544941 'move' buffToDecode[174104](965442 call chpl__initCopy[954049] call_tmp[682314]))
          (174110 call +=[451353] numCodepoints[174045] 1)
          const-val call_tmp[682319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682322 'move' call_tmp[682319](174115 call !=[223899] decodeRet[174068] 0))
          const-val call_tmp[682324]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (682327 'move' call_tmp[682324] call_tmp[682319])
          if call_tmp[682324]
          {
            const-val call_tmp[682329]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682332 'move' call_tmp[682329](174122 call ==[965489] policy[173945] strict[173692]))
            const-val call_tmp[682334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (682337 'move' call_tmp[682334] call_tmp[682329])
            if call_tmp[682334]
            {
              (174127 call bufferFree[172958] newBuff[174014])
              const-val call_tmp[682339]:owned DecodeError[966300] "dead after last mention" "delay instantiation" "insert auto destroy for explicit new" "maybe param" "no auto destroy" "temp"
              val new_temp[965710]:DecodeError[168140] "dead after last mention" "temp"
              (965712 'move' new_temp[965710](965586 call _new[965661]))
              const-val initTemp[965741]:owned DecodeError[966300] "dead after last mention" "delay instantiation" "temp"
              (965744 call init[965760] initTemp[965741] new_temp[965710])
              (682342 'move' call_tmp[682339] initTemp[965741])
              val call_tmp[682344]:Error[167984] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[966504]:owned Error[966477] "dead after last mention" "coerce temp" "insert auto destroy" "no auto destroy" "temp"
              const-val ret_tmp[1805426]:owned Error[966477] "temp"
              (966506 call _cast[966562] call_tmp[682339] ret_tmp[1805426])
              (1805429 'move' coerce_tmp[966504] ret_tmp[1805426])
              const-val _formal_tmp_in_err[968525]:owned Error[966477] "dead after last mention" "expr temp" "no auto destroy" "temp"
              (968529 'move' _formal_tmp_in_err[968525] coerce_tmp[966504])
              (682347 'move' call_tmp[682344](468105 call chpl_fix_thrown_error[170049] _formal_tmp_in_err[968525]))
              {
                val castedError[1782528]:Error[167984] "temp"
                (1782534 'move' castedError[1782528] call_tmp[682344])
                (1782536 '=' error_out[1782525] castedError[1782528])
                (1815514 call chpl__autoDestroy[1439223] tmp[174083])
                (1815517 call chpl__autoDestroy[1438961] tmp[174026])
                gotoErrorHandlingReturn _end_decodeByteBuffer[522802] _end_decodeByteBuffer[522802]
              }
            }
            {
              const-val nInvalidBytes[174150]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
              val tmp[570951]:int(32)[95] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[570952]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[682349]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[969796]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969802 'move' coerce_tmp[969796](969798 'cast' int(32)[95] 1))
              (682352 'move' call_tmp[682349](174140 call ==[435644] nBytes[174072] coerce_tmp[969796]))
              (570957 'move' tmp[570952] call_tmp[682349])
              if tmp[570952]
              {
                (570962 'move' tmp[570951] nBytes[174072])
              }
              {
                const-val tmp[570964]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val coerce_tmp[969805]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (969811 'move' coerce_tmp[969805](969807 'cast' int(32)[95] 1))
                (570966 'move' tmp[570964](174145 call -[440432] nBytes[174072] coerce_tmp[969805]))
                (570971 'move' tmp[570951] tmp[570964])
              }
              (544943 'move' nInvalidBytes[174150] tmp[570951])
              const-val coerce_tmp[969825]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (969831 'move' coerce_tmp[969825](969827 'cast' int(64)[13] nInvalidBytes[174150]))
              (174157 call +=[451353] thisIdx[174055] coerce_tmp[969825])
              const-val call_tmp[682354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682357 'move' call_tmp[682354](174165 call ==[965489] policy[173945] replace[173694]))
              const-val call_tmp[682359]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (682362 'move' call_tmp[682359] call_tmp[682354])
              if call_tmp[682359]
              {
                val call_tmp[682364]:int(32)[95] "dead after last mention" "maybe param" "temp" "type variable"
                const-val call_tmp[682369]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[970096]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970102 'move' coerce_tmp[970096](970098 'cast' int(32)[95] 3))
                (682372 'move' call_tmp[682369](174182 call -[440432] coerce_tmp[970096] nInvalidBytes[174150]))
                const-val coerce_tmp[970105]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970111 'move' coerce_tmp[970105](970107 'cast' int(64)[13] call_tmp[682369]))
                (174184 call +=[451353] expectedSize[174050] coerce_tmp[970105])
                const-val tmp[492558]:(c_ptr(uint(8)),int(64))[955227] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                ref tmp[492583]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
                (492586 'move' tmp[492583](492584 'addr of' newBuff[174014]))
                ref tmp[492594]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (492597 'move' tmp[492594](492595 'addr of' allocSize[174016]))
                const-val ret_tmp[1804552]:(c_ptr(uint(8)),int(64))[955227] "temp"
                (174197 call bufferEnsureSize[172784] newBuff[174014] allocSize[174016] expectedSize[174050] ret_tmp[1804552])
                (1804555 'move' tmp[492558] ret_tmp[1804552])
                { scopeless
                }
                ref call_tmp[682391]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
                (682394 'move' call_tmp[682391](970488 '.' tmp[492558] x0[955223]))
                val coerce_tmp[970491]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970495 'move' coerce_tmp[970491](970493 'deref' call_tmp[682391]))
                (492588 call =[954232] tmp[492583] coerce_tmp[970491])
                ref call_tmp[682396]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (682399 'move' call_tmp[682396](970500 '.' tmp[492558] x1[955225]))
                const-val coerce_tmp[970503]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970507 'move' coerce_tmp[970503](970505 'deref' call_tmp[682396]))
                (492599 call =[435365] tmp[492594] coerce_tmp[970503])
                (1815520 call chpl__autoDestroy[1438961] tmp[492558])
                val call_tmp[682401]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
                (682404 'move' call_tmp[682401](174204 call +[956020] newBuff[174014] decodedIdx[174060]))
                const-val coerce_tmp[970519]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (970525 'move' coerce_tmp[970519](970521 'cast' c_void_ptr[149] call_tmp[682401]))
                const-val _return_tmp_[1774973]:syserr[223603] "dead after last mention" "temp"
                (1774975 'move' _return_tmp_[1774973](174208 call qio_encode_char_buf[173958] coerce_tmp[970519] 65533))
                (174212 call +=[451353] decodedIdx[174060] 3)
              }
              {
                const-val call_tmp[682406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682409 'move' call_tmp[682406](174222 call ==[965489] policy[173945] escape[173698]))
                const-val call_tmp[682411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (682414 'move' call_tmp[682411] call_tmp[682406])
                if call_tmp[682411]
                {
                  (174226 call =[435212] hasEscapes[174040] 1)
                  const-val call_tmp[682416]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[970783]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970789 'move' coerce_tmp[970783](970785 'cast' int(32)[95] 2))
                  (682419 'move' call_tmp[682416](174233 call *[441844] coerce_tmp[970783] nInvalidBytes[174150]))
                  const-val coerce_tmp[970792]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970798 'move' coerce_tmp[970792](970794 'cast' int(64)[13] call_tmp[682416]))
                  (174235 call +=[451353] expectedSize[174050] coerce_tmp[970792])
                  const-val tmp[492602]:(c_ptr(uint(8)),int(64))[955227] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[492627]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
                  (492630 'move' tmp[492627](492628 'addr of' newBuff[174014]))
                  ref tmp[492638]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (492641 'move' tmp[492638](492639 'addr of' allocSize[174016]))
                  const-val ret_tmp[1804558]:(c_ptr(uint(8)),int(64))[955227] "temp"
                  (174248 call bufferEnsureSize[172784] newBuff[174014] allocSize[174016] expectedSize[174050] ret_tmp[1804558])
                  (1804561 'move' tmp[492602] ret_tmp[1804558])
                  { scopeless
                  }
                  ref call_tmp[682438]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
                  (682441 'move' call_tmp[682438](970810 '.' tmp[492602] x0[955223]))
                  val coerce_tmp[970813]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970817 'move' coerce_tmp[970813](970815 'deref' call_tmp[682438]))
                  (492632 call =[954232] tmp[492627] coerce_tmp[970813])
                  ref call_tmp[682443]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (682446 'move' call_tmp[682443](970822 '.' tmp[492602] x1[955225]))
                  const-val coerce_tmp[970825]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (970829 'move' coerce_tmp[970825](970827 'deref' call_tmp[682443]))
                  (492643 call =[435365] tmp[492638] coerce_tmp[970825])
                  (1815524 call chpl__autoDestroy[1438961] tmp[492602])
                  {
                    val _indexOfInterest[174286]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[174287]:_ic_chpl_direct_counted_range_iter[978330] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[682448]:_ir_chpl_direct_counted_range_iter[978336] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[970898]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                    (970904 'move' coerce_tmp[970898](970900 'cast' int(32)[95] 0))
                    const-val ret_tmp[1805164]:_ir_chpl_direct_counted_range_iter[978336] "temp"
                    (174303 call chpl_direct_counted_range_iter[457978] coerce_tmp[970898] nInvalidBytes[174150] ret_tmp[1805164])
                    (1805167 'move' call_tmp[682448] ret_tmp[1805164])
                    (174296 'move' _iterator[174287](174294 call _getIterator[978345] call_tmp[682448]))
                    {
                      val ret[1876327]:_ir_chpl_direct_counted_range_iter[978336] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1876329]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1876331]:_ic_chpl_direct_counted_range_iter_helper[978080] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1876333]:_ir_chpl_direct_counted_range_iter_helper[978086] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1876335]:_ir_chpl_direct_counted_range_iter_helper[978086] "temp"
                      const-val low[1876493]:int(32)[95] "temp"
                      (1876498 'move' low[1876493](1876495 '.v' _iterator[174287] F0_low[1975051]))
                      const-val count[1876500]:int(32)[95] "temp"
                      (1876505 'move' count[1876500](1876502 '.v' _iterator[174287] F1_count[1975055]))
                      (1876338 call chpl_direct_counted_range_iter_helper[970907] low[1876493] count[1876500] ret_tmp[1876335])
                      (1876342 'move' call_tmp[1876333] ret_tmp[1876335])
                      (1876345 'move' _iterator[1876331](1876348 call _getIterator[978095] call_tmp[1876333]))
                      {
                        val ret[1936181]:_ir_chpl_direct_counted_range_iter_helper[978086] "dead after last mention" "RVV" "temp"
                        val call_tmp[1936183]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1936185]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1936187]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1936189]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1936191]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1936193 'move' coerce_tmp[1936191](1936195 'cast' int(32)[95] 0))
                        const-val count[1936677]:int(32)[95] "temp"
                        (1936682 'move' count[1936677](1936679 '.v' _iterator[1876331] F1_count[1978710]))
                        (1936198 'move' call_tmp[1936189](1936201 call <[437468] count[1936677] coerce_tmp[1936191]))
                        (1936204 'move' tmp[1936187] call_tmp[1936189])
                        (1936207 'move' tmp[1936185] call_tmp[1936189])
                        const-val call_tmp[1936210]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1936212 'move' call_tmp[1936210] call_tmp[1936189])
                        if call_tmp[1936189]
                        {
                          (1936218 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1936221]:2*int(32)[971697] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1936223]:2*int(32)[971697] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1936225]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1936227]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val coerce_tmp[1936229]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                        (1936231 'move' coerce_tmp[1936229](1936233 'cast' int(32)[95] 0))
                        const-val count[1936684]:int(32)[95] "temp"
                        (1936689 'move' count[1936684](1936686 '.v' _iterator[1876331] F1_count[1978710]))
                        (1936236 'move' call_tmp[1936227](1936239 call ==[435644] count[1936684] coerce_tmp[1936229]))
                        (1936242 'move' tmp[1936225] call_tmp[1936227])
                        if call_tmp[1936227]
                        {
                          const-val tmp[1936247]:2*int(32)[971697] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1936249]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1936251]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1936691]:int(32)[95] "temp"
                          (1936696 'move' low[1936691](1936693 '.v' _iterator[1876331] F0_low[1978706]))
                          (1936253 'move' call_tmp[1936251](1936256 call _cast[971561] low[1936691]))
                          const-val call_tmp[1936258]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1936260]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1936262 'move' coerce_tmp[1936260](1936264 'cast' uint(64)[115] 1))
                          (1936267 'move' call_tmp[1936258](1936270 call -[962212] call_tmp[1936251]))
                          const-val call_tmp[1936272]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1936274 'move' call_tmp[1936272](1936277 call _cast[971624] call_tmp[1936258]))
                          const-val ret_tmp[1936279]:2*int(32)[971697] "temp"
                          const-val low[1936698]:int(32)[95] "temp"
                          (1936703 'move' low[1936698](1936700 '.v' _iterator[1876331] F0_low[1978706]))
                          (1936282 call _build_tuple[971655] low[1936698] call_tmp[1936272] ret_tmp[1936279])
                          (1936286 'move' tmp[1936247] ret_tmp[1936279])
                          (1936289 'move' tmp[1936223] tmp[1936247])
                        }
                        {
                          const-val tmp[1936293]:2*int(32)[971697] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1936295]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1936297]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1936705]:int(32)[95] "temp"
                          (1936710 'move' count[1936705](1936707 '.v' _iterator[1876331] F1_count[1978710]))
                          (1936299 'move' call_tmp[1936297] count[1936705])
                          const-val call_tmp[1936302]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1936304]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1936306 'move' coerce_tmp[1936304](1936308 'cast' int(32)[95] 1))
                          const-val count[1936712]:int(32)[95] "temp"
                          (1936717 'move' count[1936712](1936714 '.v' _iterator[1876331] F1_count[1978710]))
                          (1936311 'move' call_tmp[1936302](1936314 call -[440432] count[1936712] coerce_tmp[1936304]))
                          const-val call_tmp[1936317]:int(32)[95] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1936719]:int(32)[95] "temp"
                          (1936724 'move' low[1936719](1936721 '.v' _iterator[1876331] F0_low[1978706]))
                          (1936319 'move' call_tmp[1936317](1936322 call +[439652] low[1936719] call_tmp[1936302]))
                          const-val ret_tmp[1936325]:2*int(32)[971697] "temp"
                          const-val low[1936726]:int(32)[95] "temp"
                          (1936731 'move' low[1936726](1936728 '.v' _iterator[1876331] F0_low[1978706]))
                          (1936328 call _build_tuple[971655] low[1936726] call_tmp[1936317] ret_tmp[1936325])
                          (1936332 'move' tmp[1936293] ret_tmp[1936325])
                          (1936335 'move' tmp[1936223] tmp[1936293])
                        }
                        (1936339 '=' tmp[1936221] tmp[1936223])
                        (1936342 'noop')
                        1
                        ref call_tmp[1936344]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1936346 'move' call_tmp[1936344](1936348 '.' tmp[1936221] x0[971693]))
                        const-val start[1936351]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1936353]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1936355 'move' coerce_tmp[1936353](1936357 'deref' call_tmp[1936344]))
                        (1936359 '=' start[1936351] coerce_tmp[1936353])
                        (1936362 'noop')
                        ref call_tmp[1936363]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1936365 'move' call_tmp[1936363](1936367 '.' tmp[1936221] x1[971695]))
                        const-val end[1936370]:int(32)[95] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1936372]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1936374 'move' coerce_tmp[1936372](1936376 'deref' call_tmp[1936363]))
                        (1936378 '=' end[1936370] coerce_tmp[1936372])
                        (1936381 'noop')
                        val _indexOfInterest[1936382]:int(32)[95] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1936384]:_ic_chpl_direct_param_stride_range_iter[977826] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1936386]:_ir_chpl_direct_param_stride_range_iter[977832] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1936388]:_ir_chpl_direct_param_stride_range_iter[977832] "temp"
                        (1936391 call chpl_direct_param_stride_range_iter[972118] coerce_tmp[1936353] coerce_tmp[1936372] ret_tmp[1936388])
                        (1936395 'move' call_tmp[1936386] ret_tmp[1936388])
                        (1936398 'move' _iterator[1936384](1936401 call _getIterator[977841] call_tmp[1936386]))
                        {
                          val ret[1936404]:_ir_chpl_direct_param_stride_range_iter[977832] "dead after last mention" "RVV" "temp"
                          val call_tmp[1936406]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1936409 call chpl_range_check_stride[972438])
                          val i[1936410]:int(32)[95] "dead at end of block" "insert auto destroy"
                          val call_tmp[1936412]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1936414 'move' i[1936410] 0)
                          val call_tmp[1936417]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1936419]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1936421]:int(32)[95] "temp"
                          (1936423 'move' low[1936421](1936425 '.v' _iterator[1936384] F0_low[1980247]))
                          (1936428 'move' default_arg_first[1936419](1936431 call chpl_checkIfRangeIterWillOverflow_default_first[976921] low[1936421]))
                          const-val default_arg_last[1936433]:int(32)[95] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1936435]:int(32)[95] "temp"
                          (1936437 'move' high[1936435](1936439 '.v' _iterator[1936384] F1_high[1980251]))
                          (1936442 'move' default_arg_last[1936433](1936445 call chpl_checkIfRangeIterWillOverflow_default_last[976949] high[1936435]))
                          const-val _return_tmp_[1936447]:bool[10] "dead after last mention" "temp"
                          const-val low[1936449]:int(32)[95] "temp"
                          (1936451 'move' low[1936449](1936453 '.v' _iterator[1936384] F0_low[1980247]))
                          const-val high[1936456]:int(32)[95] "temp"
                          (1936458 'move' high[1936456](1936460 '.v' _iterator[1936384] F1_high[1980251]))
                          (1936463 'move' _return_tmp_[1936447](1936466 call chpl_checkIfRangeIterWillOverflow[976369] low[1936449] high[1936456] 1 default_arg_first[1936419] default_arg_last[1936433] 1))
                          CForLoop[1936473]
                          {
                            const-val yret[1936502]:int(32)[95] "dead after last mention" "YVV" "temp"
                            (1936504 'move' yret[1936502] i[1936410])
                            const-val _yieldedIndex[1936507]:int(32)[95] "temp"
                            (1936509 'move' _yieldedIndex[1936507] i[1936410])
                            {
                              const-val i[1936513]:int(32)[95] "const" "index var" "insert auto destroy"
                              (1936515 'move' i[1936513] _yieldedIndex[1936507])
                              const-val yret[1936518]:int(32)[95] "dead after last mention" "YVV" "temp"
                              (1936520 'move' yret[1936518] _yieldedIndex[1936507])
                              const-val _yieldedIndex[1936548]:int(32)[95] "temp"
                              (1936675 'move' _yieldedIndex[1936548] _yieldedIndex[1936507])
                              {
                                const-val i[1936550]:int(32)[95] "const" "index var" "insert auto destroy"
                                (1936552 'move' i[1936550] _yieldedIndex[1936548])
                                const-val yret[1936555]:int(32)[95] "dead after last mention" "YVV" "temp"
                                (1936557 'move' yret[1936555] _yieldedIndex[1936548])
                                const-val _yieldedIndex[1936560]:int(32)[95] "temp"
                                (1936562 'move' _yieldedIndex[1936560] _yieldedIndex[1936548])
                                {
                                  const-val i[1936566]:int(32)[95] "const" "index var" "insert auto destroy"
                                  (1936568 'move' i[1936566] _yieldedIndex[1936560])
                                  {
                                    val call_tmp[1936572]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1936574 'move' call_tmp[1936572](1936577 call +[956020] newBuff[174014] decodedIdx[174060]))
                                    const-val call_tmp[1936580]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1936582]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936584 'move' coerce_tmp[1936582](1936586 'cast' int(64)[13] nInvalidBytes[174150]))
                                    (1936589 'move' call_tmp[1936580](1936592 call -[440454] thisIdx[174055] coerce_tmp[1936582]))
                                    const-val call_tmp[1936595]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1936597]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936599 'move' coerce_tmp[1936597](1936601 'cast' int(64)[13] i[1936566]))
                                    (1936604 'move' call_tmp[1936595](1936607 call +[439674] call_tmp[1936580] coerce_tmp[1936597]))
                                    ref call_tmp[1936610]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    (1936612 'move' call_tmp[1936610](1936615 call this[954110] buff[173935] call_tmp[1936595]))
                                    const-val call_tmp[1936618]:uint(16)[105] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1936620]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936622 'move' coerce_tmp[1936620](1936624 'cast' uint(16)[105] 56320))
                                    const-val coerce_tmp[1936627]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936629 'move' coerce_tmp[1936627](1936631 'deref' call_tmp[1936610]))
                                    const-val coerce_tmp[1936633]:uint(16)[105] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936635 'move' coerce_tmp[1936633](1936637 'cast' uint(16)[105] coerce_tmp[1936627]))
                                    (1936640 'move' call_tmp[1936618](1936643 call +[439718] coerce_tmp[1936620] coerce_tmp[1936633]))
                                    const-val coerce_tmp[1936646]:c_void_ptr[149] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936648 'move' coerce_tmp[1936646](1936650 'cast' c_void_ptr[149] call_tmp[1936572]))
                                    const-val coerce_tmp[1936653]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1936655 'move' coerce_tmp[1936653](1936657 'cast' int(32)[95] call_tmp[1936618]))
                                    const-val _return_tmp_[1936660]:syserr[223603] "dead after last mention" "temp"
                                    (1936662 'move' _return_tmp_[1936660](1936665 call qio_encode_char_buf[173958] coerce_tmp[1936646] coerce_tmp[1936653]))
                                    (1936669 call +=[451353] decodedIdx[174060] 3)
                                  }
                                  label _continueLabel[1936672]
                                }
                              }
                            }
                            {
                              const-val low[1936475]:int(32)[95] "temp"
                              (1936477 'move' low[1936475](1936479 '.v' _iterator[1936384] F0_low[1980247]))
                              (1936482 '=' i[1936410] low[1936475])
                            }
                            {
                              const-val high[1936486]:int(32)[95] "temp"
                              (1936488 'move' high[1936486](1936490 '.v' _iterator[1936384] F1_high[1980251]))
                              (1936493 '<=' i[1936410] high[1936486])
                            }
                            {
                              val call_tmp[1936497]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1936499 '+=' i[1936410] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1936536]
                        }
                        (1936539 call _freeIterator[978014] _iterator[1936384])
                        (1936542 call chpl__autoDestroy[1443482] tmp[1936221])
                        label _endchpl_direct_counted_range_iter_helper[1936544]
                      }
                      (1876374 call _freeIterator[978264] _iterator[1876331])
                      label _endchpl_direct_counted_range_iter[1876376]
                    }
                    label _breakLabel[174292]
                    (1815530 call _freeIterator[978514] _iterator[174287])
                  }
                  const-val call_tmp[682478]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[978840]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978846 'move' coerce_tmp[978840](978842 'cast' int(32)[95] 1))
                  (682481 'move' call_tmp[682478](174329 call -[440432] nInvalidBytes[174150] coerce_tmp[978840]))
                  const-val coerce_tmp[978849]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (978855 'move' coerce_tmp[978849](978851 'cast' int(64)[13] call_tmp[682478]))
                  (174331 call +=[451353] numCodepoints[174045] coerce_tmp[978849])
                }
              }
            }
          }
          {
            const-val coerce_tmp[978863]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978869 'move' coerce_tmp[978863](978865 'cast' int(64)[13] nBytes[174072]))
            (174358 call bufferMemcpyLocal[173122] newBuff[174014] buffToDecode[174104] coerce_tmp[978863] decodedIdx[174060] 0)
            const-val coerce_tmp[978881]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978887 'move' coerce_tmp[978881](978883 'cast' int(64)[13] nBytes[174072]))
            (174363 call +=[451353] thisIdx[174055] coerce_tmp[978881])
            const-val coerce_tmp[978890]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
            (978896 'move' coerce_tmp[978890](978892 'cast' int(64)[13] nBytes[174072]))
            (174368 call +=[451353] decodedIdx[174060] coerce_tmp[978890])
          }
          (1815534 call chpl__autoDestroy[1439223] tmp[174083])
        }
        label _continueLabel[174378]
        const-val call_tmp[682483]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (682486 'move' call_tmp[682483](174386 call <[437490] thisIdx[174055] length[173941]))
        (174389 'move' tmp[174375] call_tmp[682483])
        tmp[174375]
      }
      label _breakLabel[174379]
    }
    ref call_tmp[682488]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (682491 'move' call_tmp[682488](174405 call this[954110] newBuff[174014] decodedIdx[174060]))
    const-val coerce_tmp[978903]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (978909 'move' coerce_tmp[978903](978905 'cast' uint(8)[100] 0))
    (174407 call =[435386] call_tmp[682488] coerce_tmp[978903])
    const-val call_tmp[682493]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802580]:string[26] "temp"
    (174420 call chpl_createStringWithOwnedBufferNV[30676] newBuff[174014] decodedIdx[174060] allocSize[174016] numCodepoints[174045] ret_tmp[1802580])
    (1802583 'move' call_tmp[682493] ret_tmp[1802580])
    val ret[174421]:string[26] "dead at end of block" "insert auto destroy"
    (544947 'move' ret[174421] call_tmp[682493])
    ref call_tmp[682500]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (682503 'move' call_tmp[682500](174428 call hasEscapes[758035] ret[174421]))
    (174432 call =[435212] call_tmp[682500] hasEscapes[174040])
    (522814 'move' ret[522804] ret[174421])
    (1815537 call chpl__autoDestroy[1438961] tmp[174026])
    gotoReturn _end_decodeByteBuffer[522802] _end_decodeByteBuffer[522802]
    label _end_decodeByteBuffer[522802]
    (1804656 '=' _retArg[1804654] ret[522804])
    (1804660 return _void[55])
  }
  function decodeHelp[174452](const in arg buff[174449]:c_ptr(uint(8))[937442], const in arg buffLen[174455]:int(64)[13], const in arg offset[174459]:int(64)[13], const in arg allowEsc[174463]:bool[10], ref arg _retArg[1804680]:_ref((syserr,int(32),int(32)))[964746]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[522832]:(syserr,int(32),int(32))[964639] "dead after last mention" "RVV" "temp"
    val chr[174528]:int(32)[95] "dead at end of block" "insert auto destroy"
    val call_tmp[682510]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (964799 'move' chr[174528] 0)
    val nBytes[174533]:int(32)[95] "dead at end of block" "insert auto destroy"
    (964802 'move' nBytes[174533] 0)
    const-val call_tmp[682515]:int(32)[95] "dead at end of block" "maybe param" "temp"
    (682518 'move' call_tmp[682515](174539 call _cast[964404] offset[174459]))
    const-val start[174541]:int(32)[95] "dead at end of block" "insert auto destroy"
    (544953 'move' start[174541] call_tmp[682515])
    val call_tmp[682520]:c_ptr(uint(8))[937442] "dead at end of block" "expr temp" "maybe param" "temp"
    (682523 'move' call_tmp[682520](174547 call +[964435] buff[174449] start[174541]))
    const-val call_tmp[682525]:c_string[19] "dead at end of block" "maybe param" "temp"
    (682528 'move' call_tmp[682525](174550 call _cast[957825] call_tmp[682520]))
    const-val multibytes[174552]:c_string[19] "dead at end of block" "insert auto destroy"
    (544955 'move' multibytes[174552](964483 call chpl__initCopy[21698] call_tmp[682525]))
    const-val call_tmp[682530]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[964489]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (964495 'move' coerce_tmp[964489](964491 'cast' int(64)[13] start[174541]))
    (682533 'move' call_tmp[682530](174558 call -[440454] buffLen[174455] coerce_tmp[964489]))
    const-val call_tmp[682535]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (682538 'move' call_tmp[682535] call_tmp[682530])
    const-val maxbytes[174563]:int(64)[13] "dead at end of block" "insert auto destroy"
    (544957 'move' maxbytes[174563] call_tmp[682535])
    val decodeRet[174568]:syserr[223603] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[544959]:syserr[223603] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[682540]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (682543 'move' call_tmp[682540] allowEsc[174463])
    if call_tmp[682540]
    {
      const-val call_tmp[682545]:syserr[223603] "dead at end of block" "maybe param" "temp"
      (682548 'move' call_tmp[682545](174580 call qio_decode_char_buf_esc[174506] chr[174528] nBytes[174533] multibytes[174552] maxbytes[174563]))
      (544967 'move' decodeRet[174568](964502 call chpl__initCopy[964504] call_tmp[682545]))
    }
    {
      const-val call_tmp[682550]:syserr[223603] "dead at end of block" "maybe param" "temp"
      (682553 'move' call_tmp[682550](174591 call qio_decode_char_buf[174479] chr[174528] nBytes[174533] multibytes[174552] maxbytes[174563]))
      (544970 'move' decodeRet[174568](964525 call chpl__initCopy[964504] call_tmp[682550]))
    }
    const-val call_tmp[682555]:(syserr,int(32),int(32))[964639] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1805402]:(syserr,int(32),int(32))[964639] "temp"
    (174605 call _build_tuple[964589] decodeRet[174568] chr[174528] nBytes[174533] ret_tmp[1805402])
    (1805405 'move' call_tmp[682555] ret_tmp[1805402])
    (522837 'move' ret[522832] call_tmp[682555])
    gotoReturn _end_decodeHelp[522830] _end_decodeHelp[522830]
    label _end_decodeHelp[522830]
    (1804682 '=' _retArg[1804680] ret[522832])
    (1804684 return _void[55])
  }
  function initWithBorrowedBuffer[948893](ref arg x[948895]:_ref(string)[937958], const  ref arg other[948900]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[948906]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[948917]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (948919 'move' call_tmp[948917](948922 call isOwned[758009] x[948895]))
    (948926 call =[435212] call_tmp[948917] 0)
    val call_tmp[948930]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[948953]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (948955 'move' call_tmp[948953](948958 call hasEscapes[758035] x[948895]))
      ref call_tmp[948961]:_ref(bool)[937218] "dead after last mention" "maybe param" "reference to a const" "temp"
      (948963 'move' call_tmp[948961](948966 call hasEscapes[758035] other[948900]))
      const-val coerce_tmp[949601]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (949605 'move' coerce_tmp[949601](949603 'deref' call_tmp[948961]))
      (948970 call =[435212] call_tmp[948953] coerce_tmp[949601])
    }
    ref call_tmp[948974]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (948976 'move' call_tmp[948974](948979 call locale_id[758061] other[948900]))
    const-val call_tmp[948982]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[949609]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (949613 'move' coerce_tmp[949609](949611 'deref' call_tmp[948974]))
    (948984 'move' call_tmp[948982](948987 call !=[436028] coerce_tmp[949609] chpl_nodeID[208207]))
    const-val otherRemote[948990]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (948992 'move' otherRemote[948990] call_tmp[948982])
    const-val call_tmp[948996]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (948998 'move' call_tmp[948996](949001 call numBytes[32810] other[948900]))
    const-val otherLen[949004]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (949006 'move' otherLen[949004] call_tmp[948996])
    const-val call_tmp[949010]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (949012 'move' call_tmp[949010](949015 call >[437710] otherLen[949004] 0))
    const-val call_tmp[949018]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (949020 'move' call_tmp[949018] call_tmp[949010])
    if call_tmp[949018]
    {
      ref call_tmp[949027]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (949029 'move' call_tmp[949027](949032 call buffLen[757905] x[948895]))
      (949036 call =[435365] call_tmp[949027] otherLen[949004])
      const-val call_tmp[949041]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (949043 'move' call_tmp[949041] otherRemote[948990])
      if call_tmp[949041]
      {
        ref call_tmp[949050]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
        (949052 'move' call_tmp[949050](949055 call isOwned[758009] x[948895]))
        (949059 call =[435212] call_tmp[949050] 1)
        ref call_tmp[949063]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (949065 'move' call_tmp[949063](949068 call buff[757983] x[948895]))
        ref call_tmp[949071]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949073 'move' call_tmp[949071](949076 call locale_id[758061] other[948900]))
        ref call_tmp[949079]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949081 'move' call_tmp[949079](949084 call buff[757983] other[948900]))
        val call_tmp[949087]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[949664]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949668 'move' coerce_tmp[949664](949666 'deref' call_tmp[949071]))
        const-val coerce_tmp[949670]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949676 'move' coerce_tmp[949670](949672 'cast' int(64)[13] coerce_tmp[949664]))
        val coerce_tmp[949678]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (949682 'move' coerce_tmp[949678](949680 'deref' call_tmp[949079]))
        (949089 'move' call_tmp[949087](949092 call bufferCopyRemote[172830] coerce_tmp[949670] coerce_tmp[949678] otherLen[949004]))
        (949097 call =[954232] call_tmp[949063] call_tmp[949087])
        ref call_tmp[949102]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (949104 'move' call_tmp[949102](949107 call buffLen[757905] x[948895]))
        const-val call_tmp[949110]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (949112 'move' call_tmp[949110](949115 call +[949685] otherLen[949004]))
        (949119 call =[435365] call_tmp[949102] call_tmp[949110])
        val call_tmp[949124]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949147]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (949149 'move' call_tmp[949147](949152 call cachedNumCodepoints[757957] x[948895]))
          ref call_tmp[949155]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949157 'move' call_tmp[949155](949160 call cachedNumCodepoints[757957] other[948900]))
          const-val coerce_tmp[954267]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954271 'move' coerce_tmp[954267](954269 'deref' call_tmp[949155]))
          (949164 call =[435365] call_tmp[949147] coerce_tmp[954267])
        }
      }
      {
        ref call_tmp[949169]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (949171 'move' call_tmp[949169](949174 call buff[757983] x[948895]))
        ref call_tmp[949177]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949179 'move' call_tmp[949177](949182 call buff[757983] other[948900]))
        val coerce_tmp[954276]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954280 'move' coerce_tmp[954276](954278 'deref' call_tmp[949177]))
        (949186 call =[954232] call_tmp[949169] coerce_tmp[954276])
        ref call_tmp[949190]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (949192 'move' call_tmp[949190](949195 call buffSize[757931] x[948895]))
        ref call_tmp[949198]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (949200 'move' call_tmp[949198](949203 call buffSize[757931] other[948900]))
        const-val coerce_tmp[954285]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (954289 'move' coerce_tmp[954285](954287 'deref' call_tmp[949198]))
        (949207 call =[435365] call_tmp[949190] coerce_tmp[954285])
        val call_tmp[949211]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        {
          ref call_tmp[949234]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (949236 'move' call_tmp[949234](949239 call cachedNumCodepoints[757957] x[948895]))
          ref call_tmp[949242]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
          (949244 'move' call_tmp[949242](949247 call cachedNumCodepoints[757957] other[948900]))
          const-val coerce_tmp[954297]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (954301 'move' coerce_tmp[954297](954299 'deref' call_tmp[949242]))
          (949251 call =[435365] call_tmp[949234] coerce_tmp[954297])
        }
      }
    }
    (949257 return _void[55])
  }
  function initWithBorrowedBuffer[1734740](ref arg x[1734742]:_ref(string)[937958], const in arg other[1734746]:c_ptr(uint(8))[937442], const in arg length[1734748]:int(64)[13], const in arg size[1734750]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1734756]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1734767]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1734769 'move' call_tmp[1734767](1734772 call isOwned[758009] x[1734742]))
    (1734776 call =[435212] call_tmp[1734767] 0)
    ref call_tmp[1734780]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (1734782 'move' call_tmp[1734780](1734785 call buff[757983] x[1734742]))
    (1734789 call =[954232] call_tmp[1734780] other[1734746])
    ref call_tmp[1734793]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1734795 'move' call_tmp[1734793](1734798 call buffSize[757931] x[1734742]))
    (1734802 call =[435365] call_tmp[1734793] size[1734750])
    ref call_tmp[1734806]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1734808 'move' call_tmp[1734806](1734811 call buffLen[757905] x[1734742]))
    (1734815 call =[435365] call_tmp[1734806] length[1734748])
    (1734818 return _void[55])
  }
  function initWithBorrowedBuffer[1734853](ref arg x[1734855]:_ref(bytes)[938006], const in arg other[1734859]:c_ptr(uint(8))[937442], const in arg length[1734861]:int(64)[13], const in arg size[1734863]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1734869]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1734880]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1734882 'move' call_tmp[1734880](1734885 call isOwned[752904] x[1734855]))
    (1734889 call =[435212] call_tmp[1734880] 0)
    ref call_tmp[1734893]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (1734895 'move' call_tmp[1734893](1734898 call buff[752878] x[1734855]))
    (1734902 call =[954232] call_tmp[1734893] other[1734859])
    ref call_tmp[1734906]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1734908 'move' call_tmp[1734906](1734911 call buffSize[752852] x[1734855]))
    (1734915 call =[435365] call_tmp[1734906] size[1734863])
    ref call_tmp[1734919]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1734921 'move' call_tmp[1734919](1734924 call buffLen[752826] x[1734855]))
    (1734928 call =[435365] call_tmp[1734919] length[1734861])
    (1734931 return _void[55])
  }
  function initWithOwnedBuffer[978914](ref arg x[978916]:_ref(string)[937958], const in arg other[978920]:c_ptr(uint(8))[937442], const in arg length[978922]:int(64)[13], const in arg size[978924]:int(64)[13]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[978930]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[978941]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (978943 'move' call_tmp[978941](978946 call isOwned[758009] x[978916]))
    (978950 call =[435212] call_tmp[978941] 1)
    ref call_tmp[978954]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
    (978956 'move' call_tmp[978954](978959 call buff[757983] x[978916]))
    (978963 call =[954232] call_tmp[978954] other[978920])
    ref call_tmp[978967]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (978969 'move' call_tmp[978967](978972 call buffSize[757931] x[978916]))
    (978976 call =[435365] call_tmp[978967] size[978924])
    ref call_tmp[978980]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (978982 'move' call_tmp[978980](978985 call buffLen[757905] x[978916]))
    (978989 call =[435365] call_tmp[978980] length[978922])
    (978992 return _void[55])
  }
  function initWithNewBuffer[954348](ref arg x[954350]:_ref(string)[937958], const  ref arg other[954355]:string[26]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[954361]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[954372]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (954374 'move' call_tmp[954372](954377 call locale_id[758061] other[954355]))
    const-val call_tmp[954380]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[954841]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (954845 'move' coerce_tmp[954841](954843 'deref' call_tmp[954372]))
    (954382 'move' call_tmp[954380](954385 call !=[436028] coerce_tmp[954841] chpl_nodeID[208207]))
    const-val otherRemote[954388]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (954390 'move' otherRemote[954388] call_tmp[954380])
    const-val call_tmp[954394]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (954396 'move' call_tmp[954394](954399 call numBytes[32810] other[954355]))
    const-val otherLen[954402]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (954404 'move' otherLen[954402] call_tmp[954394])
    ref call_tmp[954408]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (954410 'move' call_tmp[954408](954413 call isOwned[758009] x[954350]))
    (954417 call =[435212] call_tmp[954408] 1)
    val call_tmp[954421]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954444]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (954446 'move' call_tmp[954444](954449 call hasEscapes[758035] x[954350]))
      ref call_tmp[954452]:_ref(bool)[937218] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954454 'move' call_tmp[954452](954457 call hasEscapes[758035] other[954355]))
      const-val coerce_tmp[954856]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954860 'move' coerce_tmp[954856](954858 'deref' call_tmp[954452]))
      (954461 call =[435212] call_tmp[954444] coerce_tmp[954856])
    }
    val call_tmp[954465]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[954488]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (954490 'move' call_tmp[954488](954493 call cachedNumCodepoints[757957] x[954350]))
      ref call_tmp[954496]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (954498 'move' call_tmp[954496](954501 call cachedNumCodepoints[757957] other[954355]))
      const-val coerce_tmp[954868]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (954872 'move' coerce_tmp[954868](954870 'deref' call_tmp[954496]))
      (954505 call =[435365] call_tmp[954488] coerce_tmp[954868])
    }
    const-val call_tmp[954509]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954511 'move' call_tmp[954509](954514 call >[437710] otherLen[954402] 0))
    const-val call_tmp[954517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (954519 'move' call_tmp[954517] call_tmp[954509])
    if call_tmp[954517]
    {
      ref call_tmp[954526]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (954528 'move' call_tmp[954526](954531 call buffLen[757905] x[954350]))
      (954535 call =[435365] call_tmp[954526] otherLen[954402])
      const-val tmp[954560]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[954578]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (954580 'move' tmp[954578] otherRemote[954388])
      (954585 'move' tmp[954560] tmp[954578])
      const-val call_tmp[954597]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (954599 'move' call_tmp[954597] tmp[954560])
      if call_tmp[954597]
      {
        ref call_tmp[954606]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (954608 'move' call_tmp[954606](954611 call buff[757983] x[954350]))
        ref call_tmp[954614]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954616 'move' call_tmp[954614](954619 call locale_id[758061] other[954355]))
        ref call_tmp[954622]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (954624 'move' call_tmp[954622](954627 call buff[757983] other[954355]))
        val call_tmp[954630]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[955003]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955007 'move' coerce_tmp[955003](955005 'deref' call_tmp[954614]))
        const-val coerce_tmp[955009]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955015 'move' coerce_tmp[955009](955011 'cast' int(64)[13] coerce_tmp[955003]))
        val coerce_tmp[955017]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (955021 'move' coerce_tmp[955017](955019 'deref' call_tmp[954622]))
        (954632 'move' call_tmp[954630](954635 call bufferCopyRemote[172830] coerce_tmp[955009] coerce_tmp[955017] otherLen[954402]))
        (954640 call =[954232] call_tmp[954606] call_tmp[954630])
        ref call_tmp[954645]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (954647 'move' call_tmp[954645](954650 call buffSize[757931] x[954350]))
        const-val call_tmp[954653]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (954655 'move' call_tmp[954653](954658 call +[949685] otherLen[954402]))
        (954662 call =[435365] call_tmp[954645] call_tmp[954653])
      }
      {
        ref call_tmp[954668]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954670 'move' call_tmp[954668](954673 call buff[757983] other[954355]))
        const-val call_tmp[954676]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[955029]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (955033 'move' coerce_tmp[955029](955031 'deref' call_tmp[954668]))
        const-val ret_tmp[1804576]:(c_ptr(uint(8)),int(64))[955227] "temp"
        (954681 call bufferCopyLocal[172893] coerce_tmp[955029] otherLen[954402] ret_tmp[1804576])
        (1804579 'move' call_tmp[954676] ret_tmp[1804576])
        const-val tmp[954684]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "const" "insert auto destroy" "temp"
        (954686 'move' tmp[954684] call_tmp[954676])
        1
        ref call_tmp[954694]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954696 'move' call_tmp[954694](957231 '.' tmp[954684] x0[955223]))
        const buff[954701]:c_ptr(uint(8))[937442] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[957236]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957240 'move' coerce_tmp[957236](957238 'deref' call_tmp[954694]))
        (954703 'move' buff[954701](957234 call chpl__initCopy[954049] coerce_tmp[957236]))
        ref call_tmp[954706]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (954708 'move' call_tmp[954706](957245 '.' tmp[954684] x1[955225]))
        const-val allocSize[954713]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[957250]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (957254 'move' coerce_tmp[957250](957252 'deref' call_tmp[954706]))
        (954715 'move' allocSize[954713](957248 call chpl__initCopy[955351] coerce_tmp[957250]))
        ref call_tmp[954719]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (954721 'move' call_tmp[954719](954724 call buff[757983] x[954350]))
        (954728 call =[954232] call_tmp[954719] buff[954701])
        ref call_tmp[954733]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (954735 'move' call_tmp[954733](954738 call buffLen[757905] x[954350]))
        ref call_tmp[954741]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[957261]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
        (957263 'move' _this_tmp_[957261](954746 call buff[757983] x[954350]))
        val coerce_tmp[957268]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957272 'move' coerce_tmp[957268](957270 'deref' _this_tmp_[957261]))
        const-val coerce_tmp[957274]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957278 'move' coerce_tmp[957274](957276 'deref' call_tmp[954733]))
        (954743 'move' call_tmp[954741](954749 call this[954110] coerce_tmp[957268] coerce_tmp[957274]))
        const-val coerce_tmp[957281]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (957287 'move' coerce_tmp[957281](957283 'cast' uint(8)[100] 0))
        (954752 call =[435386] call_tmp[954741] coerce_tmp[957281])
        ref call_tmp[954756]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (954758 'move' call_tmp[954756](954761 call buffSize[757931] x[954350]))
        (954765 call =[435365] call_tmp[954756] allocSize[954713])
        (1815779 call chpl__autoDestroy[1438961] tmp[954684])
      }
    }
    (954772 return _void[55])
  }
  function initWithNewBuffer[1434550](ref arg x[1434552]:_ref(bytes)[938006], const  ref arg other[1434557]:bytes[24]) : void[4] "inline" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1434563]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1434574]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1434576 'move' call_tmp[1434574](1434579 call locale_id[752930] other[1434557]))
    const-val call_tmp[1434582]:bool[10] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1435139]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1435143 'move' coerce_tmp[1435139](1435141 'deref' call_tmp[1434574]))
    (1434584 'move' call_tmp[1434582](1434587 call !=[436028] coerce_tmp[1435139] chpl_nodeID[208207]))
    const-val otherRemote[1434590]:bool[10] "dead at end of block" "const" "insert auto destroy"
    (1434592 'move' otherRemote[1434590] call_tmp[1434582])
    const-val call_tmp[1434596]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1434598 'move' call_tmp[1434596](1434601 call numBytes[24571] other[1434557]))
    const-val otherLen[1434604]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1434606 'move' otherLen[1434604] call_tmp[1434596])
    ref call_tmp[1434610]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1434612 'move' call_tmp[1434610](1434615 call isOwned[752904] x[1434552]))
    (1434619 call =[435212] call_tmp[1434610] 1)
    val call_tmp[1434623]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1434667]:bytes[24] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1434711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1434713 'move' call_tmp[1434711](1434716 call >[437710] otherLen[1434604] 0))
    const-val call_tmp[1434719]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1434721 'move' call_tmp[1434719] call_tmp[1434711])
    if call_tmp[1434719]
    {
      ref call_tmp[1434728]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1434730 'move' call_tmp[1434728](1434733 call buffLen[752826] x[1434552]))
      (1434737 call =[435365] call_tmp[1434728] otherLen[1434604])
      const-val tmp[1434762]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1434780]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      (1434782 'move' tmp[1434780] otherRemote[1434590])
      (1434787 'move' tmp[1434762] tmp[1434780])
      const-val call_tmp[1434799]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1434801 'move' call_tmp[1434799] tmp[1434762])
      if call_tmp[1434799]
      {
        ref call_tmp[1434808]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1434810 'move' call_tmp[1434808](1434813 call buff[752878] x[1434552]))
        ref call_tmp[1434816]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1434818 'move' call_tmp[1434816](1434821 call locale_id[752930] other[1434557]))
        ref call_tmp[1434824]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1434826 'move' call_tmp[1434824](1434829 call buff[752878] other[1434557]))
        val call_tmp[1434832]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1435170]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435174 'move' coerce_tmp[1435170](1435172 'deref' call_tmp[1434816]))
        const-val coerce_tmp[1435176]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435182 'move' coerce_tmp[1435176](1435178 'cast' int(64)[13] coerce_tmp[1435170]))
        val coerce_tmp[1435184]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435188 'move' coerce_tmp[1435184](1435186 'deref' call_tmp[1434824]))
        (1434834 'move' call_tmp[1434832](1434837 call bufferCopyRemote[172830] coerce_tmp[1435176] coerce_tmp[1435184] otherLen[1434604]))
        (1434842 call =[954232] call_tmp[1434808] call_tmp[1434832])
        ref call_tmp[1434847]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (1434849 'move' call_tmp[1434847](1434852 call buffSize[752852] x[1434552]))
        const-val call_tmp[1434855]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1434857 'move' call_tmp[1434855](1434860 call +[949685] otherLen[1434604]))
        (1434864 call =[435365] call_tmp[1434847] call_tmp[1434855])
      }
      {
        ref call_tmp[1434870]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1434872 'move' call_tmp[1434870](1434875 call buff[752878] other[1434557]))
        const-val call_tmp[1434878]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
        val coerce_tmp[1435196]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1435200 'move' coerce_tmp[1435196](1435198 'deref' call_tmp[1434870]))
        const-val ret_tmp[1804582]:(c_ptr(uint(8)),int(64))[955227] "temp"
        (1434883 call bufferCopyLocal[172893] coerce_tmp[1435196] otherLen[1434604] ret_tmp[1804582])
        (1804585 'move' call_tmp[1434878] ret_tmp[1804582])
        const-val tmp[1434886]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "const" "insert auto destroy" "temp"
        (1434888 'move' tmp[1434886] call_tmp[1434878])
        1
        ref call_tmp[1434896]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1434898 'move' call_tmp[1434896](1435210 '.' tmp[1434886] x0[955223]))
        const buff[1434903]:c_ptr(uint(8))[937442] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1435215]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1435219 'move' coerce_tmp[1435215](1435217 'deref' call_tmp[1434896]))
        (1434905 'move' buff[1434903](1435213 call chpl__initCopy[954049] coerce_tmp[1435215]))
        ref call_tmp[1434908]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1434910 'move' call_tmp[1434908](1435224 '.' tmp[1434886] x1[955225]))
        const-val allocSize[1434915]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1435229]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1435233 'move' coerce_tmp[1435229](1435231 'deref' call_tmp[1434908]))
        (1434917 'move' allocSize[1434915](1435227 call chpl__initCopy[955351] coerce_tmp[1435229]))
        ref call_tmp[1434921]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1434923 'move' call_tmp[1434921](1434926 call buff[752878] x[1434552]))
        (1434930 call =[954232] call_tmp[1434921] buff[1434903])
        ref call_tmp[1434935]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (1434937 'move' call_tmp[1434935](1434940 call buffLen[752826] x[1434552]))
        ref call_tmp[1434943]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
        ref _this_tmp_[1435240]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
        (1435242 'move' _this_tmp_[1435240](1434948 call buff[752878] x[1434552]))
        val coerce_tmp[1435247]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435251 'move' coerce_tmp[1435247](1435249 'deref' _this_tmp_[1435240]))
        const-val coerce_tmp[1435253]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435257 'move' coerce_tmp[1435253](1435255 'deref' call_tmp[1434935]))
        (1434945 'move' call_tmp[1434943](1434951 call this[954110] coerce_tmp[1435247] coerce_tmp[1435253]))
        const-val coerce_tmp[1435260]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1435266 'move' coerce_tmp[1435260](1435262 'cast' uint(8)[100] 0))
        (1434954 call =[435386] call_tmp[1434943] coerce_tmp[1435260])
        ref call_tmp[1434958]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (1434960 'move' call_tmp[1434958](1434963 call buffSize[752852] x[1434552]))
        (1434967 call =[435365] call_tmp[1434958] allocSize[1434915])
        (1821816 call chpl__autoDestroy[1438961] tmp[1434886])
      }
    }
    (1434974 return _void[55])
  }
  function initWithNewBuffer[1767216](ref arg x[1767218]:_ref(string)[937958], const in arg other[1767222]:c_ptr(uint(8))[937442], const in arg length[1767224]:int(64)[13], const in arg size[1767226]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[1767232]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val otherLen[1767243]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1767245 'move' otherLen[1767243] length[1767224])
    ref call_tmp[1767249]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1767251 'move' call_tmp[1767249](1767254 call isOwned[758009] x[1767218]))
    (1767258 call =[435212] call_tmp[1767249] 1)
    const-val call_tmp[1767262]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1767264 'move' call_tmp[1767262](1767267 call >[437710] otherLen[1767243] 0))
    const-val call_tmp[1767270]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1767272 'move' call_tmp[1767270] call_tmp[1767262])
    if call_tmp[1767270]
    {
      val call_tmp[1767279]:c_ptr(uint(8))[937442] "dead at end of block" "expr temp" "maybe param" "temp"
      (1767281 'move' call_tmp[1767279] other[1767222])
      const-val call_tmp[1767287]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1804588]:(c_ptr(uint(8)),int(64))[955227] "temp"
      (1767292 call bufferCopyLocal[172893] call_tmp[1767279] otherLen[1767243] ret_tmp[1804588])
      (1804591 'move' call_tmp[1767287] ret_tmp[1804588])
      const-val tmp[1767295]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "const" "insert auto destroy" "temp"
      (1767297 'move' tmp[1767295] call_tmp[1767287])
      1
      ref call_tmp[1767305]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1767307 'move' call_tmp[1767305](1767413 '.' tmp[1767295] x0[955223]))
      const buff[1767312]:c_ptr(uint(8))[937442] "dead at end of block" "const" "insert auto destroy"
      val coerce_tmp[1767418]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1767422 'move' coerce_tmp[1767418](1767420 'deref' call_tmp[1767305]))
      (1767314 'move' buff[1767312](1767416 call chpl__initCopy[954049] coerce_tmp[1767418]))
      ref call_tmp[1767317]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1767319 'move' call_tmp[1767317](1767427 '.' tmp[1767295] x1[955225]))
      const-val allocSize[1767324]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1767432]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1767436 'move' coerce_tmp[1767432](1767434 'deref' call_tmp[1767317]))
      (1767326 'move' allocSize[1767324](1767430 call chpl__initCopy[955351] coerce_tmp[1767432]))
      ref call_tmp[1767330]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (1767332 'move' call_tmp[1767330](1767335 call buff[757983] x[1767218]))
      (1767339 call =[954232] call_tmp[1767330] buff[1767312])
      ref call_tmp[1767344]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1767346 'move' call_tmp[1767344](1767349 call buffLen[757905] x[1767218]))
      (1767353 call =[435365] call_tmp[1767344] otherLen[1767243])
      ref call_tmp[1767358]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1767360 'move' call_tmp[1767358](1767363 call buffLen[757905] x[1767218]))
      ref call_tmp[1767366]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1767445]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
      (1767447 'move' _this_tmp_[1767445](1767371 call buff[757983] x[1767218]))
      val coerce_tmp[1767452]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767456 'move' coerce_tmp[1767452](1767454 'deref' _this_tmp_[1767445]))
      const-val coerce_tmp[1767458]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767462 'move' coerce_tmp[1767458](1767460 'deref' call_tmp[1767358]))
      (1767368 'move' call_tmp[1767366](1767374 call this[954110] coerce_tmp[1767452] coerce_tmp[1767458]))
      const-val coerce_tmp[1767465]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1767471 'move' coerce_tmp[1767465](1767467 'cast' uint(8)[100] 0))
      (1767377 call =[435386] call_tmp[1767366] coerce_tmp[1767465])
      ref call_tmp[1767381]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1767383 'move' call_tmp[1767381](1767386 call buffSize[757931] x[1767218]))
      (1767390 call =[435365] call_tmp[1767381] allocSize[1767324])
      (1824760 call chpl__autoDestroy[1438961] tmp[1767295])
    }
    (1767396 return _void[55])
  }
  function getView[1031173](const  ref arg x[1031175]:_ref(string)[937958], const in arg r[1031177]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1806042]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1031179]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1031189]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031202]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031545]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1031596]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031632]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806048]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1031637 call simpleCaseHelper[1031293] r[1031177] x[1031175] ret_tmp[1806048])
      (1806051 'move' call_tmp[1031632] ret_tmp[1806048])
      (1031638 'move' ret[1031179] call_tmp[1031632])
      gotoReturn _end_getView[1032404] _end_getView[1032404]
    }
    label _end_getView[1032404]
    (1806044 '=' _retArg[1806042] ret[1031179])
    (1806046 return _void[55])
  }
  function getView[1112166](const  ref arg x[1112168]:_ref(string)[937958], const in arg r[1112170]:range(int(64),bounded,false)[1026833], ref arg _retArg[1807271]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1112172]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1112182]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112195]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112538]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1112589]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1112640]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1112665]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1112683]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1112685]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112687 'move' call_tmp[1112685](1112693 call isASCII[31049] x[1112168]))
      (1112694 'move' tmp[1112683] call_tmp[1112685])
      (1112699 'move' tmp[1112665] tmp[1112683])
      const-val call_tmp[1112711]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112713 'move' call_tmp[1112711] tmp[1112665])
      if call_tmp[1112711]
      {
        const-val call_tmp[1112720]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1807277]:(range(int(64),bounded,false),int(64))[1084943] "temp"
        (1112725 call simpleCaseHelper[1112286] r[1112170] x[1112168] ret_tmp[1807277])
        (1807280 'move' call_tmp[1112720] ret_tmp[1807277])
        (1112726 'move' ret[1112172] call_tmp[1112720])
        gotoReturn _end_getView[1113397] _end_getView[1113397]
      }
      {
        const-val call_tmp[1112754]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1802798]:range(int(64),bounded,false)[1026833] "temp"
        (1112759 call indices[32788] x[1112168] ret_tmp[1802798])
        (1802801 'move' call_tmp[1112754] ret_tmp[1802798])
        const-val call_tmp[1112762]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112764 'move' call_tmp[1112762](1112767 call ==[1041931] r[1112170] call_tmp[1112754]))
        const-val call_tmp[1112770]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112772 'move' call_tmp[1112770] call_tmp[1112762])
        if call_tmp[1112770]
        {
          const-val call_tmp[1112779]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1802694]:range(int(64),bounded,false)[1026833] "temp"
          (1112784 call byteIndices[31068] x[1112168] ret_tmp[1802694])
          (1802697 'move' call_tmp[1112779] ret_tmp[1802694])
          ref call_tmp[1112787]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
          (1112789 'move' call_tmp[1112787](1112792 call cachedNumCodepoints[757957] x[1112168]))
          const-val call_tmp[1112795]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val coerce_tmp[1120945]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1120949 'move' coerce_tmp[1120945](1120947 'deref' call_tmp[1112787]))
          const-val ret_tmp[1806784]:(range(int(64),bounded,false),int(64))[1084943] "temp"
          (1112800 call _build_tuple[1084901] call_tmp[1112779] coerce_tmp[1120945] ret_tmp[1806784])
          (1806787 'move' call_tmp[1112795] ret_tmp[1806784])
          (1112803 'move' ret[1112172] call_tmp[1112795])
          (1817602 call chpl__autoDestroy[1508195] call_tmp[1112779])
          (1817605 call chpl__autoDestroy[1508195] call_tmp[1112754])
          gotoReturn _end_getView[1113397] _end_getView[1113397]
        }
        (1817608 call chpl__autoDestroy[1508195] call_tmp[1112754])
        val call_tmp[1112826]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112835]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1120963]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1120967 'move' _formal_tmp_in_x[1120963](1120964 call chpl__initCopy[1085025] r[1112170]))
        const-val ret_tmp[1807295]:range(int(64),bounded,false)[1026833] "temp"
        (1120960 call _removed_cast[1113442] _formal_tmp_in_x[1120963] ret_tmp[1807295])
        (1807298 'move' call_tmp[1112835] ret_tmp[1807295])
        const-val intR[1112843]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
        (1112845 'move' intR[1112843] call_tmp[1112835])
        {
          const-val call_tmp[1112858]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1802804]:range(int(64),bounded,false)[1026833] "temp"
          (1112863 call indices[32788] x[1112168] ret_tmp[1802804])
          (1802807 'move' call_tmp[1112858] ret_tmp[1802804])
          const-val call_tmp[1112866]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112868 'move' call_tmp[1112866](1112874 call boundsCheck[1033393] call_tmp[1112858] intR[1112843]))
          const-val call_tmp[1112876]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112878 'move' call_tmp[1112876](1112881 call ![7494] call_tmp[1112866]))
          const-val call_tmp[1112883]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1112885 'move' call_tmp[1112883] call_tmp[1112876])
          if call_tmp[1112883]
          {
            const-val call_tmp[1112892]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1112894 'move' call_tmp[1112892](1112897 call size[32772] x[1112168]))
            (1112901 call halt[1113479] "range " r[1112170] " out of bounds for string with length " call_tmp[1112892])
          }
          (1817612 call chpl__autoDestroy[1508195] call_tmp[1112858])
        }
        val cpCount[1112908]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1112910 'move' cpCount[1112908] 0)
        const-val cpIdxLow[1112936]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1112938]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1112956]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1112958]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112960 'move' call_tmp[1112958](1112963 call alignedLow[1104880] intR[1112843]))
        const-val call_tmp[1112966]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112968 'move' call_tmp[1112966] call_tmp[1112958])
        const-val call_tmp[1112974]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112976 'move' call_tmp[1112974](1112979 call >=[979995] call_tmp[1112966]))
        (1112982 'move' tmp[1112956] call_tmp[1112974])
        (1112987 'move' tmp[1112938] tmp[1112956])
        val tmp[1112999]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1113001]:bool[10] "dead after last mention" "maybe param" "temp"
        (1113003 'move' tmp[1113001] tmp[1112938])
        if tmp[1113001]
        {
          const-val tmp[1113010]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1113012]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1113014 'move' call_tmp[1113012](1113017 call alignedLow[1104880] intR[1112843]))
          (1113020 'move' tmp[1113010] call_tmp[1113012])
          (1113026 'move' tmp[1112999] tmp[1113010])
        }
        {
          (1113032 'move' tmp[1112999] 0)
        }
        (1113038 'move' cpIdxLow[1112936] tmp[1112999])
        const-val cpIdxHigh[1113042]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1113044]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1113064]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1113066]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1113068 'move' call_tmp[1113066](1113071 call alignedHigh[1104944] intR[1112843]))
        (1113074 'move' tmp[1113064] call_tmp[1113066])
        (1113080 'move' tmp[1113044] tmp[1113064])
        (1113108 'move' cpIdxHigh[1113042] tmp[1113044])
        ref call_tmp[1113112]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113114 'move' call_tmp[1113112](1113117 call buffLen[757905] x[1112168]))
        val byteLow[1113120]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1121001]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1121005 'move' coerce_tmp[1121001](1121003 'deref' call_tmp[1113112]))
        (1817599 '=' byteLow[1113120] coerce_tmp[1121001])
        (1113122 'noop')
        ref call_tmp[1113126]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1113128 'move' call_tmp[1113126](1113131 call buffLen[757905] x[1112168]))
        const-val call_tmp[1113134]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1121009]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1121013 'move' coerce_tmp[1121009](1121011 'deref' call_tmp[1113126]))
        (1113136 'move' call_tmp[1113134](1113139 call -[962245] coerce_tmp[1121009]))
        val byteHigh[1113142]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1113144 'move' byteHigh[1113142] call_tmp[1113134])
        const-val call_tmp[1113152]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113154 'move' call_tmp[1113152](1113157 call >=[979995] cpIdxHigh[1113042]))
        const-val call_tmp[1113160]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113162 'move' call_tmp[1113160] call_tmp[1113152])
        if call_tmp[1113160]
        {
          {
            val _indexOfInterest[1113170]:(byteIndex,int(64))[1121252] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1113172]:_ic__indexLen__ref_string[1121324] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1113174]:_ir__indexLen__ref_string[1121330] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1121048]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1807353]:byteIndex[28173] "temp"
            (1121050 call _indexLen_default_start[1121022] x[1112168] ret_tmp[1807353])
            (1807356 'move' default_arg_start[1121048] ret_tmp[1807353])
            const-val ret_tmp[1802770]:_ir__indexLen__ref_string[1121330] "temp"
            (1113182 call _indexLen[31454] x[1112168] default_arg_start[1121048] ret_tmp[1802770])
            (1802773 'move' call_tmp[1113174] ret_tmp[1802770])
            (1113183 'move' _iterator[1113172](1113186 call _getIterator[1121339] call_tmp[1113174]))
            {
              val ret[1882201]:_ir__indexLen__ref_string[1121330] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1882203]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1882205]:string[26] "temp"
              ref this[1882863]:_ref(string)[937958] "temp"
              (1882868 'move' this[1882863](1882865 '.v' _iterator[1113172] F0_this[1964473]))
              (1882208 call localize[32889] this[1882863] ret_tmp[1882205])
              (1882211 'move' call_tmp[1882203] ret_tmp[1882205])
              val localThis[1882214]:string[26] "dead at end of block" "insert auto destroy"
              (1882216 'move' localThis[1882214] call_tmp[1882203])
              const-val call_tmp[1882219]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1882870]:_ref(byteIndex)[948778] "temp"
              (1882875 'move' start[1882870](1882872 '.v' _iterator[1113172] F1_start[1964477]))
              (1882221 'move' call_tmp[1882219](1882224 call _cast[39465] start[1882870]))
              val i[1882226]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1882228 'move' i[1882226] call_tmp[1882219])
              const-val call_tmp[1882231]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1882233 'move' call_tmp[1882231](1882236 call >[437710] call_tmp[1882219] 0))
              const-val call_tmp[1882239]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1882241 'move' call_tmp[1882239] call_tmp[1882231])
              if call_tmp[1882231]
              {
                val tmp[1882246]:bool[10] "dead after last mention" "temp"
                const-val tmp[1882248]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1882250]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1882252 'move' call_tmp[1882250](1882255 call buffLen[757905] localThis[1882214]))
                const-val coerce_tmp[1882257]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1882259 'move' coerce_tmp[1882257](1882261 'deref' call_tmp[1882250]))
                (1882263 'move' tmp[1882248](1882266 call <[437490] i[1882226] coerce_tmp[1882257]))
                val tmp[1882269]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1882271]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1882273]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1882275 'move' call_tmp[1882273] tmp[1882248])
                (1882278 'move' tmp[1882271] tmp[1882248])
                if tmp[1882248]
                {
                  const-val tmp[1882283]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1882285]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1882287]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1882289 'move' _this_tmp_[1882287](1882292 call buff[757983] localThis[1882214]))
                  val coerce_tmp[1882294]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882296 'move' coerce_tmp[1882294](1882298 'deref' _this_tmp_[1882287]))
                  (1882300 'move' call_tmp[1882285](1882303 call this[954110] coerce_tmp[1882294] i[1882226]))
                  const-val call_tmp[1882306]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1882308]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882310 'move' coerce_tmp[1882308](1882312 'deref' call_tmp[1882285]))
                  (1882314 'move' call_tmp[1882306](1882317 call isInitialByte[181574] coerce_tmp[1882308]))
                  const-val call_tmp[1882319]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1882321 'move' call_tmp[1882319](1882324 call ![7494] call_tmp[1882306]))
                  (1882326 'move' tmp[1882283] call_tmp[1882319])
                  (1882329 'move' tmp[1882269] call_tmp[1882319])
                }
                {
                  (1882333 'move' tmp[1882269] 0)
                }
                (1882337 'move' tmp[1882246] tmp[1882269])
                WhileDo[1882340]
                {
                  (1882343 call +=[451353] i[1882226] 1)
                  const-val tmp[1882346]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1882348]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1882350 'move' call_tmp[1882348](1882353 call buffLen[757905] localThis[1882214]))
                  const-val coerce_tmp[1882355]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882357 'move' coerce_tmp[1882355](1882359 'deref' call_tmp[1882348]))
                  (1882361 'move' tmp[1882346](1882364 call <[437490] i[1882226] coerce_tmp[1882355]))
                  val tmp[1882367]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1882369]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1882371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1882373 'move' call_tmp[1882371] tmp[1882346])
                  (1882376 'move' tmp[1882369] tmp[1882346])
                  if tmp[1882346]
                  {
                    const-val tmp[1882381]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1882383]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1882385]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1882387 'move' _this_tmp_[1882385](1882390 call buff[757983] localThis[1882214]))
                    val coerce_tmp[1882392]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1882394 'move' coerce_tmp[1882392](1882396 'deref' _this_tmp_[1882385]))
                    (1882398 'move' call_tmp[1882383](1882401 call this[954110] coerce_tmp[1882392] i[1882226]))
                    const-val call_tmp[1882404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1882406]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1882408 'move' coerce_tmp[1882406](1882410 'deref' call_tmp[1882383]))
                    (1882412 'move' call_tmp[1882404](1882415 call isInitialByte[181574] coerce_tmp[1882406]))
                    const-val call_tmp[1882417]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882419 'move' call_tmp[1882417](1882422 call ![7494] call_tmp[1882404]))
                    (1882424 'move' tmp[1882381] call_tmp[1882417])
                    (1882427 'move' tmp[1882367] call_tmp[1882417])
                  }
                  {
                    (1882431 'move' tmp[1882367] 0)
                  }
                  (1882435 'move' tmp[1882246] tmp[1882367])
                  tmp[1882246]
                }
              }
              val tmp[1882439]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1882441]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1882443 'move' call_tmp[1882441](1882446 call buffLen[757905] localThis[1882214]))
              const-val call_tmp[1882448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1882450]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1882452 'move' coerce_tmp[1882450](1882454 'deref' call_tmp[1882441]))
              (1882456 'move' call_tmp[1882448](1882459 call <[437490] i[1882226] coerce_tmp[1882450]))
              (1882462 'move' tmp[1882439] call_tmp[1882448])
              WhileDo[1882465]
              {
                const-val call_tmp[1882467]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1882469 'move' call_tmp[1882467](1882472 call +[949685] i[1882226]))
                val j[1882474]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1882476 'move' j[1882474] call_tmp[1882467])
                val tmp[1882479]:bool[10] "dead after last mention" "temp"
                const-val tmp[1882481]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1882483]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1882485 'move' call_tmp[1882483](1882488 call buffLen[757905] localThis[1882214]))
                const-val coerce_tmp[1882490]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1882492 'move' coerce_tmp[1882490](1882494 'deref' call_tmp[1882483]))
                (1882496 'move' tmp[1882481](1882499 call <[437490] call_tmp[1882467] coerce_tmp[1882490]))
                val tmp[1882502]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1882504]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1882506]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1882508 'move' call_tmp[1882506] tmp[1882481])
                (1882511 'move' tmp[1882504] tmp[1882481])
                if tmp[1882481]
                {
                  const-val tmp[1882516]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1882518]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1882520]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1882522 'move' _this_tmp_[1882520](1882525 call buff[757983] localThis[1882214]))
                  val coerce_tmp[1882527]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882529 'move' coerce_tmp[1882527](1882531 'deref' _this_tmp_[1882520]))
                  (1882533 'move' call_tmp[1882518](1882536 call this[954110] coerce_tmp[1882527] j[1882474]))
                  const-val call_tmp[1882539]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1882541]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882543 'move' coerce_tmp[1882541](1882545 'deref' call_tmp[1882518]))
                  (1882547 'move' call_tmp[1882539](1882550 call isInitialByte[181574] coerce_tmp[1882541]))
                  const-val call_tmp[1882552]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1882554 'move' call_tmp[1882552](1882557 call ![7494] call_tmp[1882539]))
                  (1882559 'move' tmp[1882516] call_tmp[1882552])
                  (1882562 'move' tmp[1882502] call_tmp[1882552])
                }
                {
                  (1882566 'move' tmp[1882502] 0)
                }
                (1882570 'move' tmp[1882479] tmp[1882502])
                WhileDo[1882573]
                {
                  (1882576 call +=[451353] j[1882474] 1)
                  const-val tmp[1882579]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1882581]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1882583 'move' call_tmp[1882581](1882586 call buffLen[757905] localThis[1882214]))
                  const-val coerce_tmp[1882588]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1882590 'move' coerce_tmp[1882588](1882592 'deref' call_tmp[1882581]))
                  (1882594 'move' tmp[1882579](1882597 call <[437490] j[1882474] coerce_tmp[1882588]))
                  val tmp[1882600]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1882602]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1882604]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1882606 'move' call_tmp[1882604] tmp[1882579])
                  (1882609 'move' tmp[1882602] tmp[1882579])
                  if tmp[1882579]
                  {
                    const-val tmp[1882614]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1882616]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1882618]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1882620 'move' _this_tmp_[1882618](1882623 call buff[757983] localThis[1882214]))
                    val coerce_tmp[1882625]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1882627 'move' coerce_tmp[1882625](1882629 'deref' _this_tmp_[1882618]))
                    (1882631 'move' call_tmp[1882616](1882634 call this[954110] coerce_tmp[1882625] j[1882474]))
                    const-val call_tmp[1882637]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1882639]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1882641 'move' coerce_tmp[1882639](1882643 'deref' call_tmp[1882616]))
                    (1882645 'move' call_tmp[1882637](1882648 call isInitialByte[181574] coerce_tmp[1882639]))
                    const-val call_tmp[1882650]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882652 'move' call_tmp[1882650](1882655 call ![7494] call_tmp[1882637]))
                    (1882657 'move' tmp[1882614] call_tmp[1882650])
                    (1882660 'move' tmp[1882600] call_tmp[1882650])
                  }
                  {
                    (1882664 'move' tmp[1882600] 0)
                  }
                  (1882668 'move' tmp[1882479] tmp[1882600])
                  tmp[1882479]
                }
                const-val yret[1882671]:(byteIndex,int(64))[1121252] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1882673]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1882675]:byteIndex[28173] "temp"
                (1882678 call _cast[39486] i[1882226] ret_tmp[1882675])
                (1882681 'move' call_tmp[1882673] ret_tmp[1882675])
                const-val call_tmp[1882684]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1882686 'move' call_tmp[1882684](1882689 call -[440454] j[1882474] i[1882226]))
                const-val call_tmp[1882692]:(byteIndex,int(64))[1121252] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1882694]:(byteIndex,int(64))[1121252] "temp"
                (1882697 call _build_tuple[1121210] call_tmp[1882673] call_tmp[1882684] ret_tmp[1882694])
                (1882701 'move' call_tmp[1882692] ret_tmp[1882694])
                (1882704 'move' yret[1882671] call_tmp[1882692])
                const-val _yieldedIndex[1882758]:(byteIndex,int(64))[1121252] "temp"
                (1882861 'move' _yieldedIndex[1882758] call_tmp[1882692])
                {
                  1
                  ref i[1882761]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1882763 'move' i[1882761](1882765 '.v' _yieldedIndex[1882758] x0[1121248]))
                  const-val nBytes[1882768]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1882770 'move' nBytes[1882768](1882772 '.v' _yieldedIndex[1882758] x1[1121250]))
                  {
                    const-val call_tmp[1882776]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882778 'move' call_tmp[1882776](1882781 call ==[435666] cpCount[1112908] cpIdxLow[1112936]))
                    const-val call_tmp[1882784]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882786 'move' call_tmp[1882784] call_tmp[1882776])
                    if call_tmp[1882784]
                    {
                      const-val call_tmp[1882791]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1882793 'move' call_tmp[1882791](1882796 call _cast[39465] i[1882761]))
                      (1882799 call =[435365] byteLow[1113120] call_tmp[1882791])
                    }
                    const-val call_tmp[1882803]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882805 'move' call_tmp[1882803](1882808 call ==[435666] cpCount[1112908] cpIdxHigh[1113042]))
                    const-val call_tmp[1882811]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1882813 'move' call_tmp[1882811] call_tmp[1882803])
                    if call_tmp[1882811]
                    {
                      const-val call_tmp[1882818]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1882820 'move' call_tmp[1882818](1882823 call _cast[39465] i[1882761]))
                      const-val call_tmp[1882825]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1882827 'move' call_tmp[1882825](1882830 call +[439674] call_tmp[1882818] nBytes[1882768]))
                      const-val call_tmp[1882833]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1882835 'move' call_tmp[1882833](1882838 call -[962245] call_tmp[1882825]))
                      (1882841 call =[435365] byteHigh[1113142] call_tmp[1882833])
                      (1882855 call chpl__autoDestroy[1435583] call_tmp[1882673])
                      (1882858 call chpl__autoDestroy[1435320] localThis[1882214])
                      break _breakLabel[1113349] _breakLabel[1113349]
                    }
                    (1882848 call +=[451353] cpCount[1112908] 1)
                  }
                  label _continueLabel[1882851]
                }
                (1882721 call chpl__autoDestroy[1435583] call_tmp[1882673])
                (1882724 call =[435365] i[1882226] j[1882474])
                ref call_tmp[1882727]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1882729 'move' call_tmp[1882727](1882732 call buffLen[757905] localThis[1882214]))
                const-val call_tmp[1882734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1882736]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1882738 'move' coerce_tmp[1882736](1882740 'deref' call_tmp[1882727]))
                (1882742 'move' call_tmp[1882734](1882745 call <[437490] i[1882226] coerce_tmp[1882736]))
                (1882748 'move' tmp[1882439] call_tmp[1882734])
                tmp[1882439]
              }
              (1882752 call chpl__autoDestroy[1435320] localThis[1882214])
              label _end_indexLen[1882754]
            }
            label _breakLabel[1113349]
            (1817618 call _freeIterator[1121512] _iterator[1113172])
            (1817620 call chpl__autoDestroy[1435583] default_arg_start[1121048])
          }
        }
        const-val call_tmp[1113352]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1804936]:range(int(64),bounded,false)[1026833] "temp"
        (1113357 call chpl_build_bounded_range[455175] byteLow[1113120] byteHigh[1113142] ret_tmp[1804936])
        (1804939 'move' call_tmp[1113352] ret_tmp[1804936])
        const-val call_tmp[1113360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113362 'move' call_tmp[1113360](1113365 call -[440454] cpIdxHigh[1113042] cpIdxLow[1112936]))
        const-val call_tmp[1113368]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1113370 'move' call_tmp[1113368](1113373 call +[949685] call_tmp[1113360]))
        const-val call_tmp[1113376]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806790]:(range(int(64),bounded,false),int(64))[1084943] "temp"
        (1113381 call _build_tuple[1084901] call_tmp[1113352] call_tmp[1113368] ret_tmp[1806790])
        (1806793 'move' call_tmp[1113376] ret_tmp[1806790])
        (1113384 'move' ret[1112172] call_tmp[1113376])
        (1817623 call chpl__autoDestroy[1508195] call_tmp[1113352])
        (1817626 call chpl__autoDestroy[1508195] intR[1112843])
        gotoReturn _end_getView[1113397] _end_getView[1113397]
      }
    }
    label _end_getView[1113397]
    (1807273 '=' _retArg[1807271] ret[1112172])
    (1807275 return _void[55])
  }
  function getView[1126299](const  ref arg x[1126301]:_ref(string)[937958], const in arg r[1126303]:range(int(64),boundedLow,false)[1087584], ref arg _retArg[1807565]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1126305]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1126315]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126328]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126671]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1126722]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val call_tmp[1126773]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val tmp[1126798]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val tmp[1126816]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1126818]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126820 'move' call_tmp[1126818](1126826 call isASCII[31049] x[1126301]))
      (1126827 'move' tmp[1126816] call_tmp[1126818])
      (1126832 'move' tmp[1126798] tmp[1126816])
      const-val call_tmp[1126844]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126846 'move' call_tmp[1126844] tmp[1126798])
      if call_tmp[1126844]
      {
        const-val call_tmp[1126853]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1807571]:(range(int(64),bounded,false),int(64))[1084943] "temp"
        (1126858 call simpleCaseHelper[1126419] r[1126303] x[1126301] ret_tmp[1807571])
        (1807574 'move' call_tmp[1126853] ret_tmp[1807571])
        (1126859 'move' ret[1126305] call_tmp[1126853])
        gotoReturn _end_getView[1127530] _end_getView[1127530]
      }
      {
        const-val call_tmp[1126887]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1802816]:range(int(64),bounded,false)[1026833] "temp"
        (1126892 call indices[32788] x[1126301] ret_tmp[1802816])
        (1802819 'move' call_tmp[1126887] ret_tmp[1802816])
        (1817813 call chpl__autoDestroy[1508195] call_tmp[1126887])
        val call_tmp[1126959]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126968]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "maybe param" "temp"
        const-val _formal_tmp_in_x[1142187]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "no auto destroy" "temp"
        (1142191 'move' _formal_tmp_in_x[1142187](1142188 call chpl__initCopy[1129171] r[1126303]))
        const-val ret_tmp[1807589]:range(int(64),boundedLow,false)[1087584] "temp"
        (1142184 call _removed_cast[1127575] _formal_tmp_in_x[1142187] ret_tmp[1807589])
        (1807592 'move' call_tmp[1126968] ret_tmp[1807589])
        const-val intR[1126976]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "const" "insert auto destroy"
        (1126978 'move' intR[1126976] call_tmp[1126968])
        {
          const-val call_tmp[1126991]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1802822]:range(int(64),bounded,false)[1026833] "temp"
          (1126996 call indices[32788] x[1126301] ret_tmp[1802822])
          (1802825 'move' call_tmp[1126991] ret_tmp[1802822])
          const-val call_tmp[1126999]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127001 'move' call_tmp[1126999](1127007 call boundsCheck[1127640] call_tmp[1126991] intR[1126976]))
          const-val call_tmp[1127009]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127011 'move' call_tmp[1127009](1127014 call ![7494] call_tmp[1126999]))
          const-val call_tmp[1127016]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1127018 'move' call_tmp[1127016] call_tmp[1127009])
          if call_tmp[1127016]
          {
            const-val call_tmp[1127025]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
            (1127027 'move' call_tmp[1127025](1127030 call size[32772] x[1126301]))
            (1127034 call halt[1128303] "range " r[1126303] " out of bounds for string with length " call_tmp[1127025])
          }
          (1817817 call chpl__autoDestroy[1508195] call_tmp[1126991])
        }
        val cpCount[1127041]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127043 'move' cpCount[1127041] 0)
        const-val cpIdxLow[1127069]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127071]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127089]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1127091]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127093 'move' call_tmp[1127091](1127096 call alignedLow[1142211] intR[1126976]))
        const-val call_tmp[1127099]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127101 'move' call_tmp[1127099] call_tmp[1127091])
        const-val call_tmp[1127107]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127109 'move' call_tmp[1127107](1127112 call >=[979995] call_tmp[1127099]))
        (1127115 'move' tmp[1127089] call_tmp[1127107])
        (1127120 'move' tmp[1127071] tmp[1127089])
        val tmp[1127132]:int(64)[13] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1127134]:bool[10] "dead after last mention" "maybe param" "temp"
        (1127136 'move' tmp[1127134] tmp[1127071])
        if tmp[1127134]
        {
          const-val tmp[1127143]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1127145]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
          (1127147 'move' call_tmp[1127145](1127150 call alignedLow[1142211] intR[1126976]))
          (1127153 'move' tmp[1127143] call_tmp[1127145])
          (1127159 'move' tmp[1127132] tmp[1127143])
        }
        {
          (1127165 'move' tmp[1127132] 0)
        }
        (1127171 'move' cpIdxLow[1127069] tmp[1127132])
        const-val cpIdxHigh[1127175]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1127177]:int(64)[13] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val tmp[1127219]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "no auto destroy" "temp"
        ref call_tmp[1127221]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127223 'move' call_tmp[1127221](1127226 call buffLen[757905] x[1126301]))
        const-val coerce_tmp[1142284]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142288 'move' coerce_tmp[1142284](1142286 'deref' call_tmp[1127221]))
        (1127229 'move' tmp[1127219](1127232 call -[962245] coerce_tmp[1142284]))
        (1127235 'move' tmp[1127177] tmp[1127219])
        (1127241 'move' cpIdxHigh[1127175] tmp[1127177])
        ref call_tmp[1127245]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127247 'move' call_tmp[1127245](1127250 call buffLen[757905] x[1126301]))
        val byteLow[1127253]:int(64)[13] "dead at end of block" "insert auto destroy"
        const-val coerce_tmp[1142294]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
        (1142298 'move' coerce_tmp[1142294](1142296 'deref' call_tmp[1127245]))
        (1817810 '=' byteLow[1127253] coerce_tmp[1142294])
        (1127255 'noop')
        ref call_tmp[1127259]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1127261 'move' call_tmp[1127259](1127264 call buffLen[757905] x[1126301]))
        const-val call_tmp[1127267]:int(64)[13] "dead at end of block" "maybe param" "temp"
        const-val coerce_tmp[1142302]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1142306 'move' coerce_tmp[1142302](1142304 'deref' call_tmp[1127259]))
        (1127269 'move' call_tmp[1127267](1127272 call -[962245] coerce_tmp[1142302]))
        val byteHigh[1127275]:int(64)[13] "dead at end of block" "insert auto destroy"
        (1127277 'move' byteHigh[1127275] call_tmp[1127267])
        const-val call_tmp[1127285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127287 'move' call_tmp[1127285](1127290 call >=[979995] cpIdxHigh[1127175]))
        const-val call_tmp[1127293]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127295 'move' call_tmp[1127293] call_tmp[1127285])
        if call_tmp[1127293]
        {
          {
            val _indexOfInterest[1127303]:(byteIndex,int(64))[1121252] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
            val _iterator[1127305]:_ic__indexLen__ref_string[1121324] "dead at end of block" "expr temp" "temp"
            const-val call_tmp[1127307]:_ir__indexLen__ref_string[1121330] "dead at end of block" "expr temp" "maybe param" "temp"
            const-val default_arg_start[1142314]:byteIndex[28173] "dead at end of block" "default actual temp" "expr temp" "insert auto destroy" "maybe param" "suppress lvalue error" "temp"
            const-val ret_tmp[1807359]:byteIndex[28173] "temp"
            (1142316 call _indexLen_default_start[1121022] x[1126301] ret_tmp[1807359])
            (1807362 'move' default_arg_start[1142314] ret_tmp[1807359])
            const-val ret_tmp[1802776]:_ir__indexLen__ref_string[1121330] "temp"
            (1127315 call _indexLen[31454] x[1126301] default_arg_start[1142314] ret_tmp[1802776])
            (1802779 'move' call_tmp[1127307] ret_tmp[1802776])
            (1127316 'move' _iterator[1127305](1127319 call _getIterator[1121339] call_tmp[1127307]))
            {
              val ret[1883686]:_ir__indexLen__ref_string[1121330] "dead after last mention" "RVV" "temp"
              const-val call_tmp[1883688]:string[26] "dead at end of block" "maybe param" "temp"
              const-val ret_tmp[1883690]:string[26] "temp"
              ref this[1884358]:_ref(string)[937958] "temp"
              (1884363 'move' this[1884358](1884360 '.v' _iterator[1127305] F0_this[1964473]))
              (1883693 call localize[32889] this[1884358] ret_tmp[1883690])
              (1883696 'move' call_tmp[1883688] ret_tmp[1883690])
              val localThis[1883699]:string[26] "dead at end of block" "insert auto destroy"
              (1883701 'move' localThis[1883699] call_tmp[1883688])
              const-val call_tmp[1883704]:int(64)[13] "dead at end of block" "maybe param" "temp"
              ref start[1884365]:_ref(byteIndex)[948778] "temp"
              (1884370 'move' start[1884365](1884367 '.v' _iterator[1127305] F1_start[1964477]))
              (1883706 'move' call_tmp[1883704](1883709 call _cast[39465] start[1884365]))
              val i[1883711]:int(64)[13] "dead at end of block" "insert auto destroy"
              (1883713 'move' i[1883711] call_tmp[1883704])
              const-val call_tmp[1883716]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1883718 'move' call_tmp[1883716](1883721 call >[437710] call_tmp[1883704] 0))
              const-val call_tmp[1883724]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1883726 'move' call_tmp[1883724] call_tmp[1883716])
              if call_tmp[1883716]
              {
                val tmp[1883731]:bool[10] "dead after last mention" "temp"
                const-val tmp[1883733]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1883735]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1883737 'move' call_tmp[1883735](1883740 call buffLen[757905] localThis[1883699]))
                const-val coerce_tmp[1883742]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1883744 'move' coerce_tmp[1883742](1883746 'deref' call_tmp[1883735]))
                (1883748 'move' tmp[1883733](1883751 call <[437490] i[1883711] coerce_tmp[1883742]))
                val tmp[1883754]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1883756]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1883758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1883760 'move' call_tmp[1883758] tmp[1883733])
                (1883763 'move' tmp[1883756] tmp[1883733])
                if tmp[1883733]
                {
                  const-val tmp[1883768]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1883770]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1883772]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1883774 'move' _this_tmp_[1883772](1883777 call buff[757983] localThis[1883699]))
                  val coerce_tmp[1883779]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1883781 'move' coerce_tmp[1883779](1883783 'deref' _this_tmp_[1883772]))
                  (1883785 'move' call_tmp[1883770](1883788 call this[954110] coerce_tmp[1883779] i[1883711]))
                  const-val call_tmp[1883791]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1883793]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1883795 'move' coerce_tmp[1883793](1883797 'deref' call_tmp[1883770]))
                  (1883799 'move' call_tmp[1883791](1883802 call isInitialByte[181574] coerce_tmp[1883793]))
                  const-val call_tmp[1883804]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1883806 'move' call_tmp[1883804](1883809 call ![7494] call_tmp[1883791]))
                  (1883811 'move' tmp[1883768] call_tmp[1883804])
                  (1883814 'move' tmp[1883754] call_tmp[1883804])
                }
                {
                  (1883818 'move' tmp[1883754] 0)
                }
                (1883822 'move' tmp[1883731] tmp[1883754])
                WhileDo[1883825]
                {
                  (1883828 call +=[451353] i[1883711] 1)
                  const-val tmp[1883831]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1883833]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1883835 'move' call_tmp[1883833](1883838 call buffLen[757905] localThis[1883699]))
                  const-val coerce_tmp[1883840]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1883842 'move' coerce_tmp[1883840](1883844 'deref' call_tmp[1883833]))
                  (1883846 'move' tmp[1883831](1883849 call <[437490] i[1883711] coerce_tmp[1883840]))
                  val tmp[1883852]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1883854]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1883856]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1883858 'move' call_tmp[1883856] tmp[1883831])
                  (1883861 'move' tmp[1883854] tmp[1883831])
                  if tmp[1883831]
                  {
                    const-val tmp[1883866]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1883868]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1883870]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1883872 'move' _this_tmp_[1883870](1883875 call buff[757983] localThis[1883699]))
                    val coerce_tmp[1883877]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1883879 'move' coerce_tmp[1883877](1883881 'deref' _this_tmp_[1883870]))
                    (1883883 'move' call_tmp[1883868](1883886 call this[954110] coerce_tmp[1883877] i[1883711]))
                    const-val call_tmp[1883889]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1883891]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1883893 'move' coerce_tmp[1883891](1883895 'deref' call_tmp[1883868]))
                    (1883897 'move' call_tmp[1883889](1883900 call isInitialByte[181574] coerce_tmp[1883891]))
                    const-val call_tmp[1883902]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1883904 'move' call_tmp[1883902](1883907 call ![7494] call_tmp[1883889]))
                    (1883909 'move' tmp[1883866] call_tmp[1883902])
                    (1883912 'move' tmp[1883852] call_tmp[1883902])
                  }
                  {
                    (1883916 'move' tmp[1883852] 0)
                  }
                  (1883920 'move' tmp[1883731] tmp[1883852])
                  tmp[1883731]
                }
              }
              val tmp[1883924]:bool[10] "dead after last mention" "temp"
              ref call_tmp[1883926]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
              (1883928 'move' call_tmp[1883926](1883931 call buffLen[757905] localThis[1883699]))
              const-val call_tmp[1883933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1883935]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1883937 'move' coerce_tmp[1883935](1883939 'deref' call_tmp[1883926]))
              (1883941 'move' call_tmp[1883933](1883944 call <[437490] i[1883711] coerce_tmp[1883935]))
              (1883947 'move' tmp[1883924] call_tmp[1883933])
              WhileDo[1883950]
              {
                const-val call_tmp[1883952]:int(64)[13] "dead at end of block" "maybe param" "temp"
                (1883954 'move' call_tmp[1883952](1883957 call +[949685] i[1883711]))
                val j[1883959]:int(64)[13] "dead at end of block" "insert auto destroy"
                (1883961 'move' j[1883959] call_tmp[1883952])
                val tmp[1883964]:bool[10] "dead after last mention" "temp"
                const-val tmp[1883966]:bool[10] "dead after last mention" "maybe param" "temp"
                ref call_tmp[1883968]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1883970 'move' call_tmp[1883968](1883973 call buffLen[757905] localThis[1883699]))
                const-val coerce_tmp[1883975]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1883977 'move' coerce_tmp[1883975](1883979 'deref' call_tmp[1883968]))
                (1883981 'move' tmp[1883966](1883984 call <[437490] call_tmp[1883952] coerce_tmp[1883975]))
                val tmp[1883987]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1883989]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1883991]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1883993 'move' call_tmp[1883991] tmp[1883966])
                (1883996 'move' tmp[1883989] tmp[1883966])
                if tmp[1883966]
                {
                  const-val tmp[1884001]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  ref call_tmp[1884003]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1884005]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1884007 'move' _this_tmp_[1884005](1884010 call buff[757983] localThis[1883699]))
                  val coerce_tmp[1884012]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1884014 'move' coerce_tmp[1884012](1884016 'deref' _this_tmp_[1884005]))
                  (1884018 'move' call_tmp[1884003](1884021 call this[954110] coerce_tmp[1884012] j[1883959]))
                  const-val call_tmp[1884024]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1884026]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1884028 'move' coerce_tmp[1884026](1884030 'deref' call_tmp[1884003]))
                  (1884032 'move' call_tmp[1884024](1884035 call isInitialByte[181574] coerce_tmp[1884026]))
                  const-val call_tmp[1884037]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884039 'move' call_tmp[1884037](1884042 call ![7494] call_tmp[1884024]))
                  (1884044 'move' tmp[1884001] call_tmp[1884037])
                  (1884047 'move' tmp[1883987] call_tmp[1884037])
                }
                {
                  (1884051 'move' tmp[1883987] 0)
                }
                (1884055 'move' tmp[1883964] tmp[1883987])
                WhileDo[1884058]
                {
                  (1884061 call +=[451353] j[1883959] 1)
                  const-val tmp[1884064]:bool[10] "dead after last mention" "maybe param" "temp"
                  ref call_tmp[1884066]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                  (1884068 'move' call_tmp[1884066](1884071 call buffLen[757905] localThis[1883699]))
                  const-val coerce_tmp[1884073]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1884075 'move' coerce_tmp[1884073](1884077 'deref' call_tmp[1884066]))
                  (1884079 'move' tmp[1884064](1884082 call <[437490] j[1883959] coerce_tmp[1884073]))
                  val tmp[1884085]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                  const-val tmp[1884087]:bool[10] "dead after last mention" "maybe param" "temp"
                  const-val call_tmp[1884089]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884091 'move' call_tmp[1884089] tmp[1884064])
                  (1884094 'move' tmp[1884087] tmp[1884064])
                  if tmp[1884064]
                  {
                    const-val tmp[1884099]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                    ref call_tmp[1884101]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                    ref _this_tmp_[1884103]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                    (1884105 'move' _this_tmp_[1884103](1884108 call buff[757983] localThis[1883699]))
                    val coerce_tmp[1884110]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1884112 'move' coerce_tmp[1884110](1884114 'deref' _this_tmp_[1884103]))
                    (1884116 'move' call_tmp[1884101](1884119 call this[954110] coerce_tmp[1884110] j[1883959]))
                    const-val call_tmp[1884122]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    const-val coerce_tmp[1884124]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                    (1884126 'move' coerce_tmp[1884124](1884128 'deref' call_tmp[1884101]))
                    (1884130 'move' call_tmp[1884122](1884133 call isInitialByte[181574] coerce_tmp[1884124]))
                    const-val call_tmp[1884135]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1884137 'move' call_tmp[1884135](1884140 call ![7494] call_tmp[1884122]))
                    (1884142 'move' tmp[1884099] call_tmp[1884135])
                    (1884145 'move' tmp[1884085] call_tmp[1884135])
                  }
                  {
                    (1884149 'move' tmp[1884085] 0)
                  }
                  (1884153 'move' tmp[1883964] tmp[1884085])
                  tmp[1883964]
                }
                const-val yret[1884156]:(byteIndex,int(64))[1121252] "dead after last mention" "YVV" "temp"
                const-val call_tmp[1884158]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1884160]:byteIndex[28173] "temp"
                (1884163 call _cast[39486] i[1883711] ret_tmp[1884160])
                (1884166 'move' call_tmp[1884158] ret_tmp[1884160])
                const-val call_tmp[1884169]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                (1884171 'move' call_tmp[1884169](1884174 call -[440454] j[1883959] i[1883711]))
                const-val call_tmp[1884177]:(byteIndex,int(64))[1121252] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val ret_tmp[1884179]:(byteIndex,int(64))[1121252] "temp"
                (1884182 call _build_tuple[1121210] call_tmp[1884158] call_tmp[1884169] ret_tmp[1884179])
                (1884186 'move' call_tmp[1884177] ret_tmp[1884179])
                (1884189 'move' yret[1884156] call_tmp[1884177])
                const-val _yieldedIndex[1884243]:(byteIndex,int(64))[1121252] "temp"
                (1884356 'move' _yieldedIndex[1884243] call_tmp[1884177])
                {
                  1
                  ref i[1884246]:_ref(byteIndex)[948778] "index var" "insert auto destroy"
                  (1884248 'move' i[1884246](1884250 '.v' _yieldedIndex[1884243] x0[1121248]))
                  const-val nBytes[1884253]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1884255 'move' nBytes[1884253](1884257 '.v' _yieldedIndex[1884243] x1[1121250]))
                  {
                    const-val call_tmp[1884261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1884263 'move' call_tmp[1884261](1884266 call ==[435666] cpCount[1127041] cpIdxLow[1127069]))
                    const-val call_tmp[1884269]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1884271 'move' call_tmp[1884269] call_tmp[1884261])
                    if call_tmp[1884269]
                    {
                      const-val call_tmp[1884276]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1884278 'move' call_tmp[1884276](1884281 call _cast[39465] i[1884246]))
                      (1884284 call =[435365] byteLow[1127253] call_tmp[1884276])
                      {
                        (1884343 call chpl__autoDestroy[1435583] call_tmp[1884158])
                        (1884346 call chpl__autoDestroy[1435320] localThis[1883699])
                        break _breakLabel[1127482] _breakLabel[1127482]
                      }
                    }
                    const-val call_tmp[1884291]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1884293 'move' call_tmp[1884291](1884296 call ==[435666] cpCount[1127041] cpIdxHigh[1127175]))
                    const-val call_tmp[1884299]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                    (1884301 'move' call_tmp[1884299] call_tmp[1884291])
                    if call_tmp[1884299]
                    {
                      const-val call_tmp[1884306]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1884308 'move' call_tmp[1884306](1884311 call _cast[39465] i[1884246]))
                      const-val call_tmp[1884313]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1884315 'move' call_tmp[1884313](1884318 call +[439674] call_tmp[1884306] nBytes[1884253]))
                      const-val call_tmp[1884321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1884323 'move' call_tmp[1884321](1884326 call -[962245] call_tmp[1884313]))
                      (1884329 call =[435365] byteHigh[1127275] call_tmp[1884321])
                      (1884350 call chpl__autoDestroy[1435583] call_tmp[1884158])
                      (1884353 call chpl__autoDestroy[1435320] localThis[1883699])
                      break _breakLabel[1127482] _breakLabel[1127482]
                    }
                    (1884336 call +=[451353] cpCount[1127041] 1)
                  }
                  label _continueLabel[1884339]
                }
                (1884206 call chpl__autoDestroy[1435583] call_tmp[1884158])
                (1884209 call =[435365] i[1883711] j[1883959])
                ref call_tmp[1884212]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
                (1884214 'move' call_tmp[1884212](1884217 call buffLen[757905] localThis[1883699]))
                const-val call_tmp[1884219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1884221]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1884223 'move' coerce_tmp[1884221](1884225 'deref' call_tmp[1884212]))
                (1884227 'move' call_tmp[1884219](1884230 call <[437490] i[1883711] coerce_tmp[1884221]))
                (1884233 'move' tmp[1883924] call_tmp[1884219])
                tmp[1883924]
              }
              (1884237 call chpl__autoDestroy[1435320] localThis[1883699])
              label _end_indexLen[1884239]
            }
            label _breakLabel[1127482]
            (1817823 call _freeIterator[1121512] _iterator[1127305])
            (1817825 call chpl__autoDestroy[1435583] default_arg_start[1142314])
          }
        }
        const-val call_tmp[1127485]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1804948]:range(int(64),bounded,false)[1026833] "temp"
        (1127490 call chpl_build_bounded_range[455175] byteLow[1127253] byteHigh[1127275] ret_tmp[1804948])
        (1804951 'move' call_tmp[1127485] ret_tmp[1804948])
        const-val call_tmp[1127493]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127495 'move' call_tmp[1127493](1127498 call -[440454] cpIdxHigh[1127175] cpIdxLow[1127069]))
        const-val call_tmp[1127501]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1127503 'move' call_tmp[1127501](1127506 call +[949685] call_tmp[1127493]))
        const-val call_tmp[1127509]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806802]:(range(int(64),bounded,false),int(64))[1084943] "temp"
        (1127514 call _build_tuple[1084901] call_tmp[1127485] call_tmp[1127501] ret_tmp[1806802])
        (1806805 'move' call_tmp[1127509] ret_tmp[1806802])
        (1127517 'move' ret[1126305] call_tmp[1127509])
        (1817828 call chpl__autoDestroy[1508195] call_tmp[1127485])
        (1817831 call chpl__autoDestroy[1514564] intR[1126976])
        gotoReturn _end_getView[1127530] _end_getView[1127530]
      }
    }
    label _end_getView[1127530]
    (1807567 '=' _retArg[1807565] ret[1126305])
    (1807569 return _void[55])
  }
  function getView[1144460](const  ref arg x[1144462]:_ref(string)[937958], const in arg r[1144464]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807781]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1144466]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1144476]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144489]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144832]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1144883]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144919]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807787]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1144924 call simpleCaseHelper[1144580] r[1144464] x[1144462] ret_tmp[1807787])
      (1807790 'move' call_tmp[1144919] ret_tmp[1807787])
      (1144925 'move' ret[1144466] call_tmp[1144919])
      gotoReturn _end_getView[1145691] _end_getView[1145691]
    }
    label _end_getView[1145691]
    (1807783 '=' _retArg[1807781] ret[1144466])
    (1807785 return _void[55])
  }
  function getView[1185976](const  ref arg x[1185978]:_ref(string)[937958], const in arg r[1185980]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808103]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    const-val ret[1185982]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1185992]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186005]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186348]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1186399]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186435]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1808109]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1186440 call simpleCaseHelper[1186096] r[1185980] x[1185978] ret_tmp[1808109])
      (1808112 'move' call_tmp[1186435] ret_tmp[1808109])
      (1186441 'move' ret[1185982] call_tmp[1186435])
      gotoReturn _end_getView[1187207] _end_getView[1187207]
    }
    label _end_getView[1187207]
    (1808105 '=' _retArg[1808103] ret[1185982])
    (1808107 return _void[55])
  }
  function getSlice[1111421](const  ref arg x[1111423]:_ref(string)[937958], const in arg r[1111425]:range(int(64),bounded,false)[1026833], ref arg _retArg[1807257]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1111427]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1111437]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1111448]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111450 'move' call_tmp[1111448](1111456 call isEmpty[35064] x[1111423]))
    const-val call_tmp[1111457]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111459 'move' call_tmp[1111457] call_tmp[1111448])
    if call_tmp[1111457]
    {
      const-val ret[1111466]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111468]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121976 call init[30763] ret[1111466])
      (1111478 'move' ret[1111427] ret[1111466])
      gotoReturn _end_getSlice[1112094] _end_getSlice[1112094]
    }
    const-val call_tmp[1111487]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807265]:(range(int(64),bounded,false),int(64))[1084943] "temp"
    (1111492 call getView[1112166] x[1111423] r[1111425] ret_tmp[1807265])
    (1807268 'move' call_tmp[1111487] ret_tmp[1807265])
    const-val tmp[1111495]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
    (1111497 'move' tmp[1111495] call_tmp[1111487])
    1
    ref call_tmp[1111505]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111507 'move' call_tmp[1111505](1121807 '.' tmp[1111495] x0[1084939]))
    const-val r2[1111512]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1111514 'move' r2[1111512](1807261 call chpl__initCopy[1085025] call_tmp[1111505]))
    ref call_tmp[1111517]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111519 'move' call_tmp[1111517](1121813 '.' tmp[1111495] x1[1084941]))
    const-val numChars[1111524]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1121818]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121822 'move' coerce_tmp[1121818](1121820 'deref' call_tmp[1111517]))
    (1817566 '=' numChars[1111524] coerce_tmp[1121818])
    (1111526 'noop')
    const-val call_tmp[1111530]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111532 'move' call_tmp[1111530](1111535 call size[1035808] r2[1111512]))
    const-val call_tmp[1111538]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111540 'move' call_tmp[1111538](1111543 call <=[437050] call_tmp[1111530] 0))
    const-val call_tmp[1111546]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1111548 'move' call_tmp[1111546] call_tmp[1111538])
    if call_tmp[1111546]
    {
      const-val ret[1111555]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1111557]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121981 call init[30763] ret[1111555])
      (1111567 'move' ret[1111427] ret[1111555])
      (1817575 call chpl__autoDestroy[1508195] r2[1111512])
      (1817578 call chpl__autoDestroy[1514519] tmp[1111495])
      gotoReturn _end_getSlice[1112094] _end_getSlice[1112094]
    }
    val buff[1111576]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111578]:c_ptr(uint(8))[937442] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1111587]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1111589]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1111598]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111600 'move' call_tmp[1111598](1111603 call high[1028638] r2[1111512]))
    const-val call_tmp[1111606]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111608 'move' call_tmp[1111606](1111611 call low[1028430] r2[1111512]))
    const-val call_tmp[1111614]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111616 'move' call_tmp[1111614](1111619 call -[440454] call_tmp[1111598] call_tmp[1111606]))
    const-val call_tmp[1111622]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111624 'move' call_tmp[1111622](1111627 call +[949685] call_tmp[1111614]))
    const-val copyLen[1111630]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111632 'move' copyLen[1111630] call_tmp[1111622])
    ref call_tmp[1111636]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111638 'move' call_tmp[1111636](1111641 call buff[757983] x[1111423]))
    const-val call_tmp[1111644]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1111646 'move' call_tmp[1111644](1111649 call low[1028430] r2[1111512]))
    ref call_tmp[1111652]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1111654 'move' call_tmp[1111652](1111657 call locale_id[758061] x[1111423]))
    const-val call_tmp[1111660]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1121837]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121841 'move' coerce_tmp[1121837](1121839 'deref' call_tmp[1111636]))
    const-val coerce_tmp[1121843]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1121847 'move' coerce_tmp[1121843](1121845 'deref' call_tmp[1111652]))
    const-val ret_tmp[1804612]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (1111665 call bufferCopy[172974] coerce_tmp[1121837] call_tmp[1111644] copyLen[1111630] coerce_tmp[1121843] ret_tmp[1804612])
    (1804615 'move' call_tmp[1111660] ret_tmp[1804612])
    const-val tmp[1111674]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (1111676 'move' tmp[1111674] call_tmp[1111660])
    1
    ref call_tmp[1111684]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (1111686 'move' call_tmp[1111684](1121881 '.' tmp[1111674] x0[955223]))
    val copyBuf[1111691]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1121886]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121890 'move' coerce_tmp[1121886](1121888 'deref' call_tmp[1111684]))
    (1817569 '=' copyBuf[1111691] coerce_tmp[1121886])
    (1111693 'noop')
    ref call_tmp[1111696]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (1111698 'move' call_tmp[1111696](1121895 '.' tmp[1111674] x1[955225]))
    const-val copySize[1111703]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1121900]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1121904 'move' coerce_tmp[1121900](1121902 'deref' call_tmp[1111696]))
    (1817572 '=' copySize[1111703] coerce_tmp[1121900])
    (1111705 'noop')
    {
      (1111734 'move' buff[1111576](1121933 call chpl__initCopy[954049] copyBuf[1111691]))
      (1111741 'move' buffSize[1111587] copySize[1111703])
    }
    const-val call_tmp[1111943]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1111945 'move' call_tmp[1111943](1111948 call size[1035808] r2[1111512]))
    const-val buffLen[1111951]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1111953 'move' buffLen[1111951] call_tmp[1111943])
    ref call_tmp[1111960]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (1111962 'move' call_tmp[1111960](1111965 call this[954110] buff[1111576] buffLen[1111951]))
    const-val coerce_tmp[1121940]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1121946 'move' coerce_tmp[1121940](1121942 'cast' uint(8)[100] 0))
    (1111968 call =[435386] call_tmp[1111960] coerce_tmp[1121940])
    val call_tmp[1111974]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1111997]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1111999 'move' numCodepoints[1111997] numChars[1111524])
      const-val call_tmp[1112011]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112013 'move' call_tmp[1112011](1112016 call ==[435666] numCodepoints[1111997] -1))
      const-val call_tmp[1112019]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112021 'move' call_tmp[1112019] call_tmp[1112011])
      if call_tmp[1112019]
      {
        const-val call_tmp[1112028]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112030 'move' call_tmp[1112028](1112033 call countNumCodepoints[181436] buff[1111576] buffLen[1111951]))
        (1112037 call =[435365] numCodepoints[1111997] call_tmp[1112028])
      }
      const-val call_tmp[1112045]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802598]:string[26] "temp"
      (1112050 call chpl_createStringWithOwnedBufferNV[30676] buff[1111576] buffLen[1111951] buffSize[1111587] numCodepoints[1111997] ret_tmp[1802598])
      (1802601 'move' call_tmp[1112045] ret_tmp[1802598])
      (1112059 'move' ret[1111427] call_tmp[1112045])
      (1817581 call chpl__autoDestroy[1438961] tmp[1111674])
      (1817584 call chpl__autoDestroy[1508195] r2[1111512])
      (1817587 call chpl__autoDestroy[1514519] tmp[1111495])
      gotoReturn _end_getSlice[1112094] _end_getSlice[1112094]
    }
    (1817590 call chpl__autoDestroy[1438961] tmp[1111674])
    (1817593 call chpl__autoDestroy[1508195] r2[1111512])
    (1817596 call chpl__autoDestroy[1514519] tmp[1111495])
    label _end_getSlice[1112094]
    (1807259 '=' _retArg[1807257] ret[1111427])
    (1807263 return _void[55])
  }
  function getSlice[1123555](const  ref arg x[1123557]:_ref(string)[937958], const in arg r[1123559]:range(byteIndex,bounded,false)[1025811], ref arg _retArg[1807491]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1123561]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1123571]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1123582]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123584 'move' call_tmp[1123582](1123590 call isEmpty[35064] x[1123557]))
    const-val call_tmp[1123591]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123593 'move' call_tmp[1123591] call_tmp[1123582])
    if call_tmp[1123591]
    {
      const-val ret[1123600]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123602]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124390 call init[30763] ret[1123600])
      (1123612 'move' ret[1123561] ret[1123600])
      gotoReturn _end_getSlice[1124228] _end_getSlice[1124228]
    }
    const-val call_tmp[1123621]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1806036]:(range(int(64),bounded,false),int(64))[1084943] "temp"
    (1123626 call getView[1031173] x[1123557] r[1123559] ret_tmp[1806036])
    (1806039 'move' call_tmp[1123621] ret_tmp[1806036])
    const-val tmp[1123629]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
    (1123631 'move' tmp[1123629] call_tmp[1123621])
    1
    ref call_tmp[1123639]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123641 'move' call_tmp[1123639](1124245 '.' tmp[1123629] x0[1084939]))
    const-val r2[1123646]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1123648 'move' r2[1123646](1807495 call chpl__initCopy[1085025] call_tmp[1123639]))
    ref call_tmp[1123651]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123653 'move' call_tmp[1123651](1124251 '.' tmp[1123629] x1[1084941]))
    const-val numChars[1123658]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1124256]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124260 'move' coerce_tmp[1124256](1124258 'deref' call_tmp[1123651]))
    (1817682 '=' numChars[1123658] coerce_tmp[1124256])
    (1123660 'noop')
    const-val call_tmp[1123664]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123666 'move' call_tmp[1123664](1123669 call size[1035808] r2[1123646]))
    const-val call_tmp[1123672]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123674 'move' call_tmp[1123672](1123677 call <=[437050] call_tmp[1123664] 0))
    const-val call_tmp[1123680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1123682 'move' call_tmp[1123680] call_tmp[1123672])
    if call_tmp[1123680]
    {
      const-val ret[1123689]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1123691]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1124395 call init[30763] ret[1123689])
      (1123701 'move' ret[1123561] ret[1123689])
      (1817691 call chpl__autoDestroy[1508195] r2[1123646])
      (1817694 call chpl__autoDestroy[1514519] tmp[1123629])
      gotoReturn _end_getSlice[1124228] _end_getSlice[1124228]
    }
    val buff[1123710]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123712]:c_ptr(uint(8))[937442] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1123721]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1123723]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1123732]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123734 'move' call_tmp[1123732](1123737 call high[1028638] r2[1123646]))
    const-val call_tmp[1123740]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123742 'move' call_tmp[1123740](1123745 call low[1028430] r2[1123646]))
    const-val call_tmp[1123748]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123750 'move' call_tmp[1123748](1123753 call -[440454] call_tmp[1123732] call_tmp[1123740]))
    const-val call_tmp[1123756]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1123758 'move' call_tmp[1123756](1123761 call +[949685] call_tmp[1123748]))
    const-val copyLen[1123764]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1123766 'move' copyLen[1123764] call_tmp[1123756])
    ref call_tmp[1123770]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123772 'move' call_tmp[1123770](1123775 call buff[757983] x[1123557]))
    const-val call_tmp[1123778]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1123780 'move' call_tmp[1123778](1123783 call low[1028430] r2[1123646]))
    ref call_tmp[1123786]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1123788 'move' call_tmp[1123786](1123791 call locale_id[758061] x[1123557]))
    const-val call_tmp[1123794]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1124275]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124279 'move' coerce_tmp[1124275](1124277 'deref' call_tmp[1123770]))
    const-val coerce_tmp[1124281]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1124285 'move' coerce_tmp[1124281](1124283 'deref' call_tmp[1123786]))
    const-val ret_tmp[1804618]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (1123799 call bufferCopy[172974] coerce_tmp[1124275] call_tmp[1123778] copyLen[1123764] coerce_tmp[1124281] ret_tmp[1804618])
    (1804621 'move' call_tmp[1123794] ret_tmp[1804618])
    const-val tmp[1123808]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (1123810 'move' tmp[1123808] call_tmp[1123794])
    1
    ref call_tmp[1123818]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (1123820 'move' call_tmp[1123818](1124295 '.' tmp[1123808] x0[955223]))
    val copyBuf[1123825]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1124300]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124304 'move' coerce_tmp[1124300](1124302 'deref' call_tmp[1123818]))
    (1817685 '=' copyBuf[1123825] coerce_tmp[1124300])
    (1123827 'noop')
    ref call_tmp[1123830]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (1123832 'move' call_tmp[1123830](1124309 '.' tmp[1123808] x1[955225]))
    const-val copySize[1123837]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1124314]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1124318 'move' coerce_tmp[1124314](1124316 'deref' call_tmp[1123830]))
    (1817688 '=' copySize[1123837] coerce_tmp[1124314])
    (1123839 'noop')
    {
      (1123868 'move' buff[1123710](1124347 call chpl__initCopy[954049] copyBuf[1123825]))
      (1123875 'move' buffSize[1123721] copySize[1123837])
    }
    const-val call_tmp[1124077]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1124079 'move' call_tmp[1124077](1124082 call size[1035808] r2[1123646]))
    const-val buffLen[1124085]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1124087 'move' buffLen[1124085] call_tmp[1124077])
    ref call_tmp[1124094]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (1124096 'move' call_tmp[1124094](1124099 call this[954110] buff[1123710] buffLen[1124085]))
    const-val coerce_tmp[1124354]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1124360 'move' coerce_tmp[1124354](1124356 'cast' uint(8)[100] 0))
    (1124102 call =[435386] call_tmp[1124094] coerce_tmp[1124354])
    val call_tmp[1124108]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1124131]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1124133 'move' numCodepoints[1124131] numChars[1123658])
      const-val call_tmp[1124145]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124147 'move' call_tmp[1124145](1124150 call ==[435666] numCodepoints[1124131] -1))
      const-val call_tmp[1124153]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1124155 'move' call_tmp[1124153] call_tmp[1124145])
      if call_tmp[1124153]
      {
        const-val call_tmp[1124162]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1124164 'move' call_tmp[1124162](1124167 call countNumCodepoints[181436] buff[1123710] buffLen[1124085]))
        (1124171 call =[435365] numCodepoints[1124131] call_tmp[1124162])
      }
      const-val call_tmp[1124179]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802604]:string[26] "temp"
      (1124184 call chpl_createStringWithOwnedBufferNV[30676] buff[1123710] buffLen[1124085] buffSize[1123721] numCodepoints[1124131] ret_tmp[1802604])
      (1802607 'move' call_tmp[1124179] ret_tmp[1802604])
      (1124193 'move' ret[1123561] call_tmp[1124179])
      (1817697 call chpl__autoDestroy[1438961] tmp[1123808])
      (1817700 call chpl__autoDestroy[1508195] r2[1123646])
      (1817703 call chpl__autoDestroy[1514519] tmp[1123629])
      gotoReturn _end_getSlice[1124228] _end_getSlice[1124228]
    }
    (1817706 call chpl__autoDestroy[1438961] tmp[1123808])
    (1817709 call chpl__autoDestroy[1508195] r2[1123646])
    (1817712 call chpl__autoDestroy[1514519] tmp[1123629])
    label _end_getSlice[1124228]
    (1807493 '=' _retArg[1807491] ret[1123561])
    (1807497 return _void[55])
  }
  function getSlice[1125617](const  ref arg x[1125619]:_ref(string)[937958], const in arg r[1125621]:range(int(64),boundedLow,false)[1087584], ref arg _retArg[1807551]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1125623]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1125633]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1125644]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125646 'move' call_tmp[1125644](1125652 call isEmpty[35064] x[1125619]))
    const-val call_tmp[1125653]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125655 'move' call_tmp[1125653] call_tmp[1125644])
    if call_tmp[1125653]
    {
      const-val ret[1125662]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125664]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142510 call init[30763] ret[1125662])
      (1125674 'move' ret[1125623] ret[1125662])
      gotoReturn _end_getSlice[1126290] _end_getSlice[1126290]
    }
    const-val call_tmp[1125683]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807559]:(range(int(64),bounded,false),int(64))[1084943] "temp"
    (1125688 call getView[1126299] x[1125619] r[1125621] ret_tmp[1807559])
    (1807562 'move' call_tmp[1125683] ret_tmp[1807559])
    const-val tmp[1125691]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
    (1125693 'move' tmp[1125691] call_tmp[1125683])
    1
    ref call_tmp[1125701]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125703 'move' call_tmp[1125701](1142365 '.' tmp[1125691] x0[1084939]))
    const-val r2[1125708]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1125710 'move' r2[1125708](1807555 call chpl__initCopy[1085025] call_tmp[1125701]))
    ref call_tmp[1125713]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125715 'move' call_tmp[1125713](1142371 '.' tmp[1125691] x1[1084941]))
    const-val numChars[1125720]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1142376]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142380 'move' coerce_tmp[1142376](1142378 'deref' call_tmp[1125713]))
    (1817777 '=' numChars[1125720] coerce_tmp[1142376])
    (1125722 'noop')
    const-val call_tmp[1125726]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125728 'move' call_tmp[1125726](1125731 call size[1035808] r2[1125708]))
    const-val call_tmp[1125734]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125736 'move' call_tmp[1125734](1125739 call <=[437050] call_tmp[1125726] 0))
    const-val call_tmp[1125742]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1125744 'move' call_tmp[1125742] call_tmp[1125734])
    if call_tmp[1125742]
    {
      const-val ret[1125751]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1125753]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1142515 call init[30763] ret[1125751])
      (1125763 'move' ret[1125623] ret[1125751])
      (1817786 call chpl__autoDestroy[1508195] r2[1125708])
      (1817789 call chpl__autoDestroy[1514519] tmp[1125691])
      gotoReturn _end_getSlice[1126290] _end_getSlice[1126290]
    }
    val buff[1125772]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125774]:c_ptr(uint(8))[937442] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1125783]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1125785]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1125794]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125796 'move' call_tmp[1125794](1125799 call high[1028638] r2[1125708]))
    const-val call_tmp[1125802]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125804 'move' call_tmp[1125802](1125807 call low[1028430] r2[1125708]))
    const-val call_tmp[1125810]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125812 'move' call_tmp[1125810](1125815 call -[440454] call_tmp[1125794] call_tmp[1125802]))
    const-val call_tmp[1125818]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1125820 'move' call_tmp[1125818](1125823 call +[949685] call_tmp[1125810]))
    const-val copyLen[1125826]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1125828 'move' copyLen[1125826] call_tmp[1125818])
    ref call_tmp[1125832]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125834 'move' call_tmp[1125832](1125837 call buff[757983] x[1125619]))
    const-val call_tmp[1125840]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1125842 'move' call_tmp[1125840](1125845 call low[1028430] r2[1125708]))
    ref call_tmp[1125848]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1125850 'move' call_tmp[1125848](1125853 call locale_id[758061] x[1125619]))
    const-val call_tmp[1125856]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1142395]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142399 'move' coerce_tmp[1142395](1142397 'deref' call_tmp[1125832]))
    const-val coerce_tmp[1142401]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1142405 'move' coerce_tmp[1142401](1142403 'deref' call_tmp[1125848]))
    const-val ret_tmp[1804624]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (1125861 call bufferCopy[172974] coerce_tmp[1142395] call_tmp[1125840] copyLen[1125826] coerce_tmp[1142401] ret_tmp[1804624])
    (1804627 'move' call_tmp[1125856] ret_tmp[1804624])
    const-val tmp[1125870]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (1125872 'move' tmp[1125870] call_tmp[1125856])
    1
    ref call_tmp[1125880]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (1125882 'move' call_tmp[1125880](1142415 '.' tmp[1125870] x0[955223]))
    val copyBuf[1125887]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1142420]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142424 'move' coerce_tmp[1142420](1142422 'deref' call_tmp[1125880]))
    (1817780 '=' copyBuf[1125887] coerce_tmp[1142420])
    (1125889 'noop')
    ref call_tmp[1125892]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (1125894 'move' call_tmp[1125892](1142429 '.' tmp[1125870] x1[955225]))
    const-val copySize[1125899]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1142434]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1142438 'move' coerce_tmp[1142434](1142436 'deref' call_tmp[1125892]))
    (1817783 '=' copySize[1125899] coerce_tmp[1142434])
    (1125901 'noop')
    {
      (1125930 'move' buff[1125772](1142467 call chpl__initCopy[954049] copyBuf[1125887]))
      (1125937 'move' buffSize[1125783] copySize[1125899])
    }
    const-val call_tmp[1126139]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1126141 'move' call_tmp[1126139](1126144 call size[1035808] r2[1125708]))
    const-val buffLen[1126147]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1126149 'move' buffLen[1126147] call_tmp[1126139])
    ref call_tmp[1126156]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (1126158 'move' call_tmp[1126156](1126161 call this[954110] buff[1125772] buffLen[1126147]))
    const-val coerce_tmp[1142474]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1142480 'move' coerce_tmp[1142474](1142476 'cast' uint(8)[100] 0))
    (1126164 call =[435386] call_tmp[1126156] coerce_tmp[1142474])
    val call_tmp[1126170]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1126193]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1126195 'move' numCodepoints[1126193] numChars[1125720])
      const-val call_tmp[1126207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126209 'move' call_tmp[1126207](1126212 call ==[435666] numCodepoints[1126193] -1))
      const-val call_tmp[1126215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126217 'move' call_tmp[1126215] call_tmp[1126207])
      if call_tmp[1126215]
      {
        const-val call_tmp[1126224]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126226 'move' call_tmp[1126224](1126229 call countNumCodepoints[181436] buff[1125772] buffLen[1126147]))
        (1126233 call =[435365] numCodepoints[1126193] call_tmp[1126224])
      }
      const-val call_tmp[1126241]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802610]:string[26] "temp"
      (1126246 call chpl_createStringWithOwnedBufferNV[30676] buff[1125772] buffLen[1126147] buffSize[1125783] numCodepoints[1126193] ret_tmp[1802610])
      (1802613 'move' call_tmp[1126241] ret_tmp[1802610])
      (1126255 'move' ret[1125623] call_tmp[1126241])
      (1817792 call chpl__autoDestroy[1438961] tmp[1125870])
      (1817795 call chpl__autoDestroy[1508195] r2[1125708])
      (1817798 call chpl__autoDestroy[1514519] tmp[1125691])
      gotoReturn _end_getSlice[1126290] _end_getSlice[1126290]
    }
    (1817801 call chpl__autoDestroy[1438961] tmp[1125870])
    (1817804 call chpl__autoDestroy[1508195] r2[1125708])
    (1817807 call chpl__autoDestroy[1514519] tmp[1125691])
    label _end_getSlice[1126290]
    (1807553 '=' _retArg[1807551] ret[1125623])
    (1807557 return _void[55])
  }
  function getSlice[1143778](const  ref arg x[1143780]:_ref(string)[937958], const in arg r[1143782]:range(byteIndex,boundedLow,false)[1143422], ref arg _retArg[1807755]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1143784]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1143794]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1143805]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143807 'move' call_tmp[1143805](1143813 call isEmpty[35064] x[1143780]))
    const-val call_tmp[1143814]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143816 'move' call_tmp[1143814] call_tmp[1143805])
    if call_tmp[1143814]
    {
      const-val ret[1143823]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143825]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156465 call init[30763] ret[1143823])
      (1143835 'move' ret[1143784] ret[1143823])
      gotoReturn _end_getSlice[1144451] _end_getSlice[1144451]
    }
    const-val call_tmp[1143844]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807763]:(range(int(64),bounded,false),int(64))[1084943] "temp"
    (1143849 call getView[1144460] x[1143780] r[1143782] ret_tmp[1807763])
    (1807766 'move' call_tmp[1143844] ret_tmp[1807763])
    const-val tmp[1143852]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
    (1143854 'move' tmp[1143852] call_tmp[1143844])
    1
    ref call_tmp[1143862]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143864 'move' call_tmp[1143862](1156320 '.' tmp[1143852] x0[1084939]))
    const-val r2[1143869]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1143871 'move' r2[1143869](1807759 call chpl__initCopy[1085025] call_tmp[1143862]))
    ref call_tmp[1143874]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143876 'move' call_tmp[1143874](1156326 '.' tmp[1143852] x1[1084941]))
    const-val numChars[1143881]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1156331]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156335 'move' coerce_tmp[1156331](1156333 'deref' call_tmp[1143874]))
    (1817917 '=' numChars[1143881] coerce_tmp[1156331])
    (1143883 'noop')
    const-val call_tmp[1143887]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143889 'move' call_tmp[1143887](1143892 call size[1035808] r2[1143869]))
    const-val call_tmp[1143895]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143897 'move' call_tmp[1143895](1143900 call <=[437050] call_tmp[1143887] 0))
    const-val call_tmp[1143903]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1143905 'move' call_tmp[1143903] call_tmp[1143895])
    if call_tmp[1143903]
    {
      const-val ret[1143912]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1143914]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1156470 call init[30763] ret[1143912])
      (1143924 'move' ret[1143784] ret[1143912])
      (1817926 call chpl__autoDestroy[1508195] r2[1143869])
      (1817929 call chpl__autoDestroy[1514519] tmp[1143852])
      gotoReturn _end_getSlice[1144451] _end_getSlice[1144451]
    }
    val buff[1143933]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143935]:c_ptr(uint(8))[937442] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1143944]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1143946]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1143955]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143957 'move' call_tmp[1143955](1143960 call high[1028638] r2[1143869]))
    const-val call_tmp[1143963]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143965 'move' call_tmp[1143963](1143968 call low[1028430] r2[1143869]))
    const-val call_tmp[1143971]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1143973 'move' call_tmp[1143971](1143976 call -[440454] call_tmp[1143955] call_tmp[1143963]))
    const-val call_tmp[1143979]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1143981 'move' call_tmp[1143979](1143984 call +[949685] call_tmp[1143971]))
    const-val copyLen[1143987]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1143989 'move' copyLen[1143987] call_tmp[1143979])
    ref call_tmp[1143993]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1143995 'move' call_tmp[1143993](1143998 call buff[757983] x[1143780]))
    const-val call_tmp[1144001]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1144003 'move' call_tmp[1144001](1144006 call low[1028430] r2[1143869]))
    ref call_tmp[1144009]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1144011 'move' call_tmp[1144009](1144014 call locale_id[758061] x[1143780]))
    const-val call_tmp[1144017]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1156350]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156354 'move' coerce_tmp[1156350](1156352 'deref' call_tmp[1143993]))
    const-val coerce_tmp[1156356]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1156360 'move' coerce_tmp[1156356](1156358 'deref' call_tmp[1144009]))
    const-val ret_tmp[1804630]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (1144022 call bufferCopy[172974] coerce_tmp[1156350] call_tmp[1144001] copyLen[1143987] coerce_tmp[1156356] ret_tmp[1804630])
    (1804633 'move' call_tmp[1144017] ret_tmp[1804630])
    const-val tmp[1144031]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (1144033 'move' tmp[1144031] call_tmp[1144017])
    1
    ref call_tmp[1144041]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (1144043 'move' call_tmp[1144041](1156370 '.' tmp[1144031] x0[955223]))
    val copyBuf[1144048]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1156375]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156379 'move' coerce_tmp[1156375](1156377 'deref' call_tmp[1144041]))
    (1817920 '=' copyBuf[1144048] coerce_tmp[1156375])
    (1144050 'noop')
    ref call_tmp[1144053]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (1144055 'move' call_tmp[1144053](1156384 '.' tmp[1144031] x1[955225]))
    const-val copySize[1144060]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1156389]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1156393 'move' coerce_tmp[1156389](1156391 'deref' call_tmp[1144053]))
    (1817923 '=' copySize[1144060] coerce_tmp[1156389])
    (1144062 'noop')
    {
      (1144091 'move' buff[1143933](1156422 call chpl__initCopy[954049] copyBuf[1144048]))
      (1144098 'move' buffSize[1143944] copySize[1144060])
    }
    const-val call_tmp[1144300]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1144302 'move' call_tmp[1144300](1144305 call size[1035808] r2[1143869]))
    const-val buffLen[1144308]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1144310 'move' buffLen[1144308] call_tmp[1144300])
    ref call_tmp[1144317]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (1144319 'move' call_tmp[1144317](1144322 call this[954110] buff[1143933] buffLen[1144308]))
    const-val coerce_tmp[1156429]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1156435 'move' coerce_tmp[1156429](1156431 'cast' uint(8)[100] 0))
    (1144325 call =[435386] call_tmp[1144317] coerce_tmp[1156429])
    val call_tmp[1144331]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1144354]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1144356 'move' numCodepoints[1144354] numChars[1143881])
      const-val call_tmp[1144368]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144370 'move' call_tmp[1144368](1144373 call ==[435666] numCodepoints[1144354] -1))
      const-val call_tmp[1144376]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144378 'move' call_tmp[1144376] call_tmp[1144368])
      if call_tmp[1144376]
      {
        const-val call_tmp[1144385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144387 'move' call_tmp[1144385](1144390 call countNumCodepoints[181436] buff[1143933] buffLen[1144308]))
        (1144394 call =[435365] numCodepoints[1144354] call_tmp[1144385])
      }
      const-val call_tmp[1144402]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802616]:string[26] "temp"
      (1144407 call chpl_createStringWithOwnedBufferNV[30676] buff[1143933] buffLen[1144308] buffSize[1143944] numCodepoints[1144354] ret_tmp[1802616])
      (1802619 'move' call_tmp[1144402] ret_tmp[1802616])
      (1144416 'move' ret[1143784] call_tmp[1144402])
      (1817932 call chpl__autoDestroy[1438961] tmp[1144031])
      (1817935 call chpl__autoDestroy[1508195] r2[1143869])
      (1817938 call chpl__autoDestroy[1514519] tmp[1143852])
      gotoReturn _end_getSlice[1144451] _end_getSlice[1144451]
    }
    (1817941 call chpl__autoDestroy[1438961] tmp[1144031])
    (1817944 call chpl__autoDestroy[1508195] r2[1143869])
    (1817947 call chpl__autoDestroy[1514519] tmp[1143852])
    label _end_getSlice[1144451]
    (1807757 '=' _retArg[1807755] ret[1143784])
    (1807761 return _void[55])
  }
  function getSlice[1185294](const  ref arg x[1185296]:_ref(string)[937958], const in arg r[1185298]:range(byteIndex,boundedHigh,false)[1184938], ref arg _retArg[1808089]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1185300]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1185310]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1185321]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185323 'move' call_tmp[1185321](1185329 call isEmpty[35064] x[1185296]))
    const-val call_tmp[1185330]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185332 'move' call_tmp[1185330] call_tmp[1185321])
    if call_tmp[1185330]
    {
      const-val ret[1185339]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185341]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203768 call init[30763] ret[1185339])
      (1185351 'move' ret[1185300] ret[1185339])
      gotoReturn _end_getSlice[1185967] _end_getSlice[1185967]
    }
    const-val call_tmp[1185360]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1808097]:(range(int(64),bounded,false),int(64))[1084943] "temp"
    (1185365 call getView[1185976] x[1185296] r[1185298] ret_tmp[1808097])
    (1808100 'move' call_tmp[1185360] ret_tmp[1808097])
    const-val tmp[1185368]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
    (1185370 'move' tmp[1185368] call_tmp[1185360])
    1
    ref call_tmp[1185378]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185380 'move' call_tmp[1185378](1203623 '.' tmp[1185368] x0[1084939]))
    const-val r2[1185385]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1185387 'move' r2[1185385](1808093 call chpl__initCopy[1085025] call_tmp[1185378]))
    ref call_tmp[1185390]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185392 'move' call_tmp[1185390](1203629 '.' tmp[1185368] x1[1084941]))
    const-val numChars[1185397]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[1203634]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203638 'move' coerce_tmp[1203634](1203636 'deref' call_tmp[1185390]))
    (1820186 '=' numChars[1185397] coerce_tmp[1203634])
    (1185399 'noop')
    const-val call_tmp[1185403]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185405 'move' call_tmp[1185403](1185408 call size[1035808] r2[1185385]))
    const-val call_tmp[1185411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185413 'move' call_tmp[1185411](1185416 call <=[437050] call_tmp[1185403] 0))
    const-val call_tmp[1185419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1185421 'move' call_tmp[1185419] call_tmp[1185411])
    if call_tmp[1185419]
    {
      const-val ret[1185428]:string[26] "dead at end of block" "insert auto destroy"
      val call_tmp[1185430]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1203773 call init[30763] ret[1185428])
      (1185440 'move' ret[1185300] ret[1185428])
      (1820195 call chpl__autoDestroy[1508195] r2[1185385])
      (1820198 call chpl__autoDestroy[1514519] tmp[1185368])
      gotoReturn _end_getSlice[1185967] _end_getSlice[1185967]
    }
    val buff[1185449]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185451]:c_ptr(uint(8))[937442] "dead after last mention" "maybe param" "temp" "type variable"
    const-val buffSize[1185460]:int(64)[13] "dead at end of block" "insert auto destroy" "split inited"
    val type_tmp[1185462]:int(64)[13] "dead after last mention" "maybe param" "temp" "type variable"
    const-val call_tmp[1185471]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185473 'move' call_tmp[1185471](1185476 call high[1028638] r2[1185385]))
    const-val call_tmp[1185479]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185481 'move' call_tmp[1185479](1185484 call low[1028430] r2[1185385]))
    const-val call_tmp[1185487]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185489 'move' call_tmp[1185487](1185492 call -[440454] call_tmp[1185471] call_tmp[1185479]))
    const-val call_tmp[1185495]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185497 'move' call_tmp[1185495](1185500 call +[949685] call_tmp[1185487]))
    const-val copyLen[1185503]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185505 'move' copyLen[1185503] call_tmp[1185495])
    ref call_tmp[1185509]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185511 'move' call_tmp[1185509](1185514 call buff[757983] x[1185296]))
    const-val call_tmp[1185517]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (1185519 'move' call_tmp[1185517](1185522 call low[1028430] r2[1185385]))
    ref call_tmp[1185525]:_ref(int(32))[936645] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1185527 'move' call_tmp[1185525](1185530 call locale_id[758061] x[1185296]))
    const-val call_tmp[1185533]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    val coerce_tmp[1203653]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203657 'move' coerce_tmp[1203653](1203655 'deref' call_tmp[1185509]))
    const-val coerce_tmp[1203659]:int(32)[95] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1203663 'move' coerce_tmp[1203659](1203661 'deref' call_tmp[1185525]))
    const-val ret_tmp[1804636]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (1185538 call bufferCopy[172974] coerce_tmp[1203653] call_tmp[1185517] copyLen[1185503] coerce_tmp[1203659] ret_tmp[1804636])
    (1804639 'move' call_tmp[1185533] ret_tmp[1804636])
    const-val tmp[1185547]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (1185549 'move' tmp[1185547] call_tmp[1185533])
    1
    ref call_tmp[1185557]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (1185559 'move' call_tmp[1185557](1203673 '.' tmp[1185547] x0[955223]))
    val copyBuf[1185564]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[1203678]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203682 'move' coerce_tmp[1203678](1203680 'deref' call_tmp[1185557]))
    (1820189 '=' copyBuf[1185564] coerce_tmp[1203678])
    (1185566 'noop')
    ref call_tmp[1185569]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (1185571 'move' call_tmp[1185569](1203687 '.' tmp[1185547] x1[955225]))
    const-val copySize[1185576]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[1203692]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (1203696 'move' coerce_tmp[1203692](1203694 'deref' call_tmp[1185569]))
    (1820192 '=' copySize[1185576] coerce_tmp[1203692])
    (1185578 'noop')
    {
      (1185607 'move' buff[1185449](1203725 call chpl__initCopy[954049] copyBuf[1185564]))
      (1185614 'move' buffSize[1185460] copySize[1185576])
    }
    const-val call_tmp[1185816]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (1185818 'move' call_tmp[1185816](1185821 call size[1035808] r2[1185385]))
    const-val buffLen[1185824]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (1185826 'move' buffLen[1185824] call_tmp[1185816])
    ref call_tmp[1185833]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (1185835 'move' call_tmp[1185833](1185838 call this[954110] buff[1185449] buffLen[1185824]))
    const-val coerce_tmp[1203732]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1203738 'move' coerce_tmp[1203732](1203734 'cast' uint(8)[100] 0))
    (1185841 call =[435386] call_tmp[1185833] coerce_tmp[1203732])
    val call_tmp[1185847]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      val numCodepoints[1185870]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1185872 'move' numCodepoints[1185870] numChars[1185397])
      const-val call_tmp[1185884]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185886 'move' call_tmp[1185884](1185889 call ==[435666] numCodepoints[1185870] -1))
      const-val call_tmp[1185892]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1185894 'move' call_tmp[1185892] call_tmp[1185884])
      if call_tmp[1185892]
      {
        const-val call_tmp[1185901]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1185903 'move' call_tmp[1185901](1185906 call countNumCodepoints[181436] buff[1185449] buffLen[1185824]))
        (1185910 call =[435365] numCodepoints[1185870] call_tmp[1185901])
      }
      const-val call_tmp[1185918]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802622]:string[26] "temp"
      (1185923 call chpl_createStringWithOwnedBufferNV[30676] buff[1185449] buffLen[1185824] buffSize[1185460] numCodepoints[1185870] ret_tmp[1802622])
      (1802625 'move' call_tmp[1185918] ret_tmp[1802622])
      (1185932 'move' ret[1185300] call_tmp[1185918])
      (1820201 call chpl__autoDestroy[1438961] tmp[1185547])
      (1820204 call chpl__autoDestroy[1508195] r2[1185385])
      (1820207 call chpl__autoDestroy[1514519] tmp[1185368])
      gotoReturn _end_getSlice[1185967] _end_getSlice[1185967]
    }
    (1820210 call chpl__autoDestroy[1438961] tmp[1185547])
    (1820213 call chpl__autoDestroy[1508195] r2[1185385])
    (1820216 call chpl__autoDestroy[1514519] tmp[1185368])
    label _end_getSlice[1185967]
    (1808091 '=' _retArg[1808089] ret[1185300])
    (1808095 return _void[55])
  }
  function doReplace[1181033](const  ref arg x[1181035]:_ref(string)[937958], const  ref arg needle[1181040]:string[26], const  ref arg replacement[1181045]:string[26], const in arg count[1181051]:int(64)[13], ref arg _retArg[1808017]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    const-val ret[1181056]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[1181064]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181075]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val _idxt[1181081]:byteIndex[28173] "dead at end of block" "insert auto destroy" "type variable"
    val call_tmp[1181086]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1181097]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    val result[1181103]:string[26] "dead at end of block" "insert auto destroy"
    (1181105 call init=[30774] result[1181103] x[1181035])
    val found[1181110]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181112 'move' found[1181110] 0)
    val startIdx[1181117]:byteIndex[28173] "dead at end of block" "insert auto destroy"
    (1181119 call init=[28148] startIdx[1181117] 0)
    const-val call_tmp[1181124]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802948]:string[26] "temp"
    (1181132 call localize[32889] needle[1181040] ret_tmp[1802948])
    (1802951 'move' call_tmp[1181124] ret_tmp[1802948])
    val call_tmp[1181133]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localNeedle[1181139]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181141 'move' localNeedle[1181139] call_tmp[1181124])
    const-val call_tmp[1181146]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802954]:string[26] "temp"
    (1181154 call localize[32889] replacement[1181045] ret_tmp[1802954])
    (1802957 'move' call_tmp[1181146] ret_tmp[1802954])
    val call_tmp[1181155]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localReplacement[1181161]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1181163 'move' localReplacement[1181161] call_tmp[1181146])
    {
      val tmp[1181170]:bool[10] "dead after last mention" "temp"
      const-val tmp[1181172]:bool[10] "dead after last mention" "maybe param" "temp"
      (1181174 'move' tmp[1181172](1181177 call <[948417] count[1181051]))
      val tmp[1181193]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1181195]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1181197]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1181199 'move' call_tmp[1181197] tmp[1181172])
      (1181204 'move' tmp[1181195] call_tmp[1181197])
      if tmp[1181195]
      {
        (1181211 'move' tmp[1181193] 1)
      }
      {
        const-val tmp[1181217]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1181219]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181221 'move' call_tmp[1181219](1181224 call <[437490] found[1181110] count[1181051]))
        (1181227 'move' tmp[1181217] call_tmp[1181219])
        (1181232 'move' tmp[1181193] tmp[1181217])
      }
      (1181238 'move' tmp[1181170] tmp[1181193])
      WhileDo[1181243] hazard
      {
        {
          const-val call_tmp[1181246]:range(byteIndex,boundedLow,false)[1143422] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1807677]:range(byteIndex,boundedLow,false)[1143422] "temp"
          (1181251 call chpl_build_low_bounded_range[1142729] startIdx[1181117] ret_tmp[1807677])
          (1807680 'move' call_tmp[1181246] ret_tmp[1807677])
          const-val call_tmp[1181253]:byteIndex[28173] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1808023]:byteIndex[28173] "temp"
          (1181261 call find[1181665] result[1181103] localNeedle[1181139] call_tmp[1181246] ret_tmp[1808023])
          (1808026 'move' call_tmp[1181253] ret_tmp[1808023])
          const-val idx[1181264]:byteIndex[28173] "dead at end of block" "const" "insert auto destroy"
          (1181266 'move' idx[1181264] call_tmp[1181253])
          const-val call_tmp[1181280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181282 'move' call_tmp[1181280](1181285 call ==[29469] idx[1181264] -1))
          const-val call_tmp[1181288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181290 'move' call_tmp[1181288] call_tmp[1181280])
          if call_tmp[1181288]
          {
            (1820071 call chpl__autoDestroy[1435583] idx[1181264])
            (1820074 call chpl__autoDestroy[1516646] call_tmp[1181246])
            break _breakLabel[1181483] _breakLabel[1181483]
          }
          (1181301 call +=[451353] found[1181110] 1)
          const-val call_tmp[1181306]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791612]:byteIndex[28173] "temp"
          (1181311 call -[28857] idx[1181264] 1 ret_tmp[1791612])
          (1791615 'move' call_tmp[1181306] ret_tmp[1791612])
          const-val call_tmp[1181314]:range(byteIndex,boundedHigh,false)[1184938] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1808035]:range(byteIndex,boundedHigh,false)[1184938] "temp"
          (1181319 call chpl_build_high_bounded_range[1184245] call_tmp[1181306] ret_tmp[1808035])
          (1808038 'move' call_tmp[1181314] ret_tmp[1808035])
          const-val call_tmp[1181321]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1808071]:string[26] "temp"
          (1181326 call this[1185258] result[1181103] call_tmp[1181314] ret_tmp[1808071])
          (1808074 'move' call_tmp[1181321] ret_tmp[1808071])
          const-val call_tmp[1181328]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1803506]:string[26] "temp"
          (1181333 call +[38345] call_tmp[1181321] localReplacement[1181161] ret_tmp[1803506])
          (1803509 'move' call_tmp[1181328] ret_tmp[1803506])
          const-val call_tmp[1181336]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181338 'move' call_tmp[1181336](1181341 call numBytes[32810] localNeedle[1181139]))
          const-val call_tmp[1181344]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791570]:byteIndex[28173] "temp"
          (1181349 call +[28725] idx[1181264] call_tmp[1181336] ret_tmp[1791570])
          (1791573 'move' call_tmp[1181344] ret_tmp[1791570])
          const-val call_tmp[1181352]:range(byteIndex,boundedLow,false)[1143422] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1807683]:range(byteIndex,boundedLow,false)[1143422] "temp"
          (1181357 call chpl_build_low_bounded_range[1142729] call_tmp[1181344] ret_tmp[1807683])
          (1807686 'move' call_tmp[1181352] ret_tmp[1807683])
          const-val call_tmp[1181359]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1807737]:string[26] "temp"
          (1181364 call this[1143742] result[1181103] call_tmp[1181352] ret_tmp[1807737])
          (1807740 'move' call_tmp[1181359] ret_tmp[1807737])
          const-val call_tmp[1181366]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1803512]:string[26] "temp"
          (1181371 call +[38345] call_tmp[1181328] call_tmp[1181359] ret_tmp[1803512])
          (1803515 'move' call_tmp[1181366] ret_tmp[1803512])
          (1181375 call =[38272] result[1181103] call_tmp[1181366])
          (1820098 call chpl__autoDestroy[1435320] call_tmp[1181366])
          (1820095 call chpl__autoDestroy[1435320] call_tmp[1181359])
          (1820092 call chpl__autoDestroy[1516646] call_tmp[1181352])
          (1820089 call chpl__autoDestroy[1435583] call_tmp[1181344])
          (1820086 call chpl__autoDestroy[1435320] call_tmp[1181328])
          (1820083 call chpl__autoDestroy[1435320] call_tmp[1181321])
          (1820080 call chpl__autoDestroy[1517703] call_tmp[1181314])
          (1820077 call chpl__autoDestroy[1435583] call_tmp[1181306])
          const-val call_tmp[1181386]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181388 'move' call_tmp[1181386](1181391 call numBytes[32810] localReplacement[1181161]))
          const-val call_tmp[1181394]:byteIndex[28173] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
          const-val ret_tmp[1791576]:byteIndex[28173] "temp"
          (1181399 call +[28725] idx[1181264] call_tmp[1181386] ret_tmp[1791576])
          (1791579 'move' call_tmp[1181394] ret_tmp[1791576])
          (1181403 call =[38194] startIdx[1181117] call_tmp[1181394])
          (1820102 call chpl__autoDestroy[1435583] call_tmp[1181394])
          (1820105 call chpl__autoDestroy[1435583] idx[1181264])
          (1820108 call chpl__autoDestroy[1516646] call_tmp[1181246])
        }
        label _continueLabel[1181410]
        const-val tmp[1181412]:bool[10] "dead after last mention" "maybe param" "temp"
        (1181414 'move' tmp[1181412](1181417 call <[948417] count[1181051]))
        val tmp[1181433]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1181435]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1181437]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181439 'move' call_tmp[1181437] tmp[1181412])
        (1181444 'move' tmp[1181435] call_tmp[1181437])
        if tmp[1181435]
        {
          (1181451 'move' tmp[1181433] 1)
        }
        {
          const-val tmp[1181457]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1181459]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1181461 'move' call_tmp[1181459](1181464 call <[437490] found[1181110] count[1181051]))
          (1181467 'move' tmp[1181457] call_tmp[1181459])
          (1181472 'move' tmp[1181433] tmp[1181457])
        }
        (1181478 'move' tmp[1181170] tmp[1181433])
        tmp[1181170]
      }
      label _breakLabel[1181483]
    }
    val call_tmp[1181485]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1203799 'move' ret[1181056] result[1181103])
    (1820111 call chpl__autoDestroy[1435320] localReplacement[1181161])
    (1820114 call chpl__autoDestroy[1435320] localNeedle[1181139])
    (1820117 call chpl__autoDestroy[1435583] startIdx[1181117])
    gotoReturn _end_doReplace[1181500] _end_doReplace[1181500]
    label _end_doReplace[1181500]
    (1808019 '=' _retArg[1808017] ret[1181056])
    (1808021 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].advance[1124520](const in arg this[1124522]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "method" "resolved"
  {
    const-val more[1984341]:int(64)[13]
    (1984369 'move' more[1984341](1984366 '.v' this[1124522] more[1124497]))
    const-val tmp[1984344]:bool[10] "temp"
    (1984351 'move' tmp[1984344](1984348 '==' more[1984341] 2))
    if tmp[1984344]
    {
      gotoIterResume _jump_2[1984333] _jump_2[1984333]
    }
    const-val tmp[1984356]:bool[10] "temp"
    (1984361 'move' tmp[1984356](1984358 '==' more[1984341] -2))
    if tmp[1984356]
    {
      gotoIterResume _jump_break_2[1984335] _jump_break_2[1984335]
    }
    val ret[1124488]:_ir_doSplitWSNoEnc[1124500] "dead at end of block" "RVV" "temp"
    val call_tmp[1124653]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1124664]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    ref tmp[1983428]:_ref(string)[937958] "temp"
    (1983433 'move' tmp[1983428](1983430 '.v' this[1124522] F0_x[1983372]))
    (1124666 'move' call_tmp[1124664](1124672 call isEmpty[35064] tmp[1983428]))
    const-val call_tmp[1124673]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124675 'move' call_tmp[1124673](1124678 call ![7494] call_tmp[1124664]))
    const-val call_tmp[1124680]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124682 'move' call_tmp[1124680] call_tmp[1124673])
    if call_tmp[1124673]
    {
      const-val call_tmp[1124689]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1802918]:string[26] "temp"
      ref tmp[1983435]:_ref(string)[937958] "temp"
      (1983440 'move' tmp[1983435](1983437 '.v' this[1124522] F0_x[1983372]))
      (1124697 call localize[32889] tmp[1983435] ret_tmp[1802918])
      (1802921 'move' call_tmp[1124689] ret_tmp[1802918])
      val call_tmp[1124698]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
      const tmp[1983442]:string[26] "temp"
      (1124706 'move' tmp[1983442] call_tmp[1124689])
      (1983444 '.=' this[1124522] F2_localx[1983380] tmp[1983442])
      val tmp[1983448]:bool[10] "temp"
      (1124713 'move' tmp[1983448] 0)
      (1983450 '.=' this[1124522] F3_done[1983382] tmp[1983448])
      val tmp[1983454]:bool[10] "temp"
      (1124720 'move' tmp[1983454] 0)
      (1983456 '.=' this[1124522] F4_yieldChunk[1983384] tmp[1983454])
      val call_tmp[1124727]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      ref tmp[1983460]:_ref(string)[937958] "temp"
      (1983465 'move' tmp[1983460](1983462 '.' this[1124522] F5_chunk[1983386]))
      (1142558 call init[30763] tmp[1983460])
      const-val call_tmp[1124737]:bool[10] "dead at end of block" "maybe param" "temp"
      const-val tmp[1983467]:int(64)[13] "temp"
      (1983472 'move' tmp[1983467](1983469 '.v' this[1124522] F1_maxsplit[1983376]))
      (1124739 'move' call_tmp[1124737](1124742 call ==[435666] tmp[1983467] 0))
      const tmp[1983474]:bool[10] "temp"
      (1124747 'move' tmp[1983474] call_tmp[1124737])
      (1983476 '.=' this[1124522] F6_noSplits[1983388] tmp[1983474])
      const-val call_tmp[1124752]:bool[10] "dead at end of block" "maybe param" "temp"
      const-val tmp[1983480]:int(64)[13] "temp"
      (1983485 'move' tmp[1983480](1983482 '.v' this[1124522] F1_maxsplit[1983376]))
      (1124754 'move' call_tmp[1124752](1124757 call >[437710] tmp[1983480] 0))
      const tmp[1983487]:bool[10] "temp"
      (1124762 'move' tmp[1983487] call_tmp[1124752])
      (1983489 '.=' this[1124522] F7_limitSplits[1983390] tmp[1983487])
      val tmp[1983493]:int(64)[13] "temp"
      (1124769 'move' tmp[1983493] 0)
      (1983495 '.=' this[1124522] F8_splitCount[1983392] tmp[1983493])
      ref call_tmp[1124774]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      ref tmp[1983499]:_ref(string)[937958] "temp"
      (1983504 'move' tmp[1983499](1983501 '.' this[1124522] F2_localx[1983380]))
      (1124776 'move' call_tmp[1124774](1124779 call buffLen[757905] tmp[1983499]))
      const-val call_tmp[1124782]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[1125488]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1125492 'move' coerce_tmp[1125488](1125490 'deref' call_tmp[1124774]))
      (1124784 'move' call_tmp[1124782](1124787 call -[1125457] coerce_tmp[1125488]))
      const tmp[1983506]:int(64)[13] "temp"
      (1124792 'move' tmp[1983506] call_tmp[1124782])
      (1983508 '.=' this[1124522] F9_iEnd[1983394] tmp[1983506])
      val tmp[1983512]:bool[10] "temp"
      (1124799 'move' tmp[1983512] 0)
      (1983514 '.=' this[1124522] F10_inChunk[1983396] tmp[1983512])
      val tmp[1983518]:int(64)[13] "temp"
      (1142564 'move' tmp[1983518] 0)
      (1983520 '.=' this[1124522] F11_chunkStart[1983398] tmp[1983518])
      const-val ret_tmp[1802810]:range(int(64),bounded,false)[1026833] "temp"
      ref tmp[1983524]:_ref(string)[937958] "temp"
      (1983529 'move' tmp[1983524](1983526 '.v' this[1124522] F0_x[1983372]))
      (1124821 call indices[32788] tmp[1983524] ret_tmp[1802810])
      val tmp[1983531]:range(int(64),bounded,false)[1026833] "temp"
      (1802813 'move' tmp[1983531] ret_tmp[1802810])
      (1983533 '.=' this[1124522] F13_call_tmp[1983402] tmp[1983531])
      val call_tmp[1124824]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
      ref tmp[1983537]:_ref(range(int(64),bounded,false))[1026877] "temp"
      (1983542 'move' tmp[1983537](1983539 '.' this[1124522] F13_call_tmp[1983402]))
      (1124826 'move' call_tmp[1124824](1124829 call _getIterator[1095339] tmp[1983537]))
      const-val call_tmp[1124831]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
      const-val ret_tmp[1803020]:_ir_chpl_bytes__ref_string[1108281] "temp"
      ref tmp[1983544]:_ref(string)[937958] "temp"
      (1983549 'move' tmp[1983544](1983546 '.' this[1124522] F2_localx[1983380]))
      (1124839 call chpl_bytes[33577] tmp[1983544] ret_tmp[1803020])
      (1803023 'move' call_tmp[1124831] ret_tmp[1803020])
      val call_tmp[1124840]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
      (1124842 'move' call_tmp[1124840](1124845 call _getIterator[1108290] call_tmp[1124831]))
      const-val ret_tmp[1807137]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
      (1124850 call _build_tuple[1108543] call_tmp[1124824] call_tmp[1124840] ret_tmp[1807137])
      val tmp[1983551]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
      (1807140 'move' tmp[1983551] ret_tmp[1807137])
      (1983553 '.=' this[1124522] F12__iterator[1983400] tmp[1983551])
      val tmp[1983557]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
      const-val tmp[1983563]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
      (1983568 'move' tmp[1983563](1983565 '.v' this[1124522] F12__iterator[1983400]))
      (1882885 'move' tmp[1983557](1882882 '.v' tmp[1983563] x0[1108581]))
      (1983559 '.=' this[1124522] F14__iterator[1983404] tmp[1983557])
      val tmp[1983570]:_ic_chpl_bytes__ref_string[1108275] "temp"
      const-val tmp[1983576]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
      (1983581 'move' tmp[1983576](1983578 '.v' this[1124522] F12__iterator[1983400]))
      (1882898 'move' tmp[1983570](1882895 '.v' tmp[1983576] x1[1108583]))
      (1983572 '.=' this[1124522] F15__iterator[1983406] tmp[1983570])
      val tmp[1983583]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
      (1983588 'move' tmp[1983583](1983585 '.v' this[1124522] F14__iterator[1983404]))
      (1882907 call zip1[1096757] tmp[1983583])
      val tmp[1983590]:_ic_chpl_bytes__ref_string[1108275] "temp"
      (1983595 'move' tmp[1983590](1983592 '.v' this[1124522] F15__iterator[1983406]))
      (1882942 call zip1[1108310] tmp[1983590])
      const-val isFinished[1882968]:bool[10] "temp"
      val hasMore[1882967]:bool[10] "temp"
      CForLoop[1883015]
      {
        val tmp[1983597]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1983602 'move' tmp[1983597](1983599 '.v' this[1124522] F15__iterator[1983406]))
        (1883020 call zip2[1108319] tmp[1983597])
        const-val retTmp[1883023]:int(64)[13] "temp"
        val tmp[1983604]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1983609 'move' tmp[1983604](1983606 '.v' this[1124522] F15__iterator[1983406]))
        (1883025 'move' retTmp[1883023](1883028 call hasMore[1108346] tmp[1983604]))
        (1883030 'move' hasMore[1882967](1883032 'cast' bool[10] retTmp[1883023]))
        (1883035 'move' isFinished[1882968](1883037 '!' hasMore[1882967]))
        if isFinished[1882968]
        {
          (1883041 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        val tmp[1983611]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1983616 'move' tmp[1983611](1983613 '.v' this[1124522] F15__iterator[1983406]))
        (1883045 'move' _index[1883060](1883048 call getValue[1108355] tmp[1983611]))
        val tmp[1983618]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
        (1983623 'move' tmp[1983618](1983620 '.v' this[1124522] F14__iterator[1983404]))
        (1883052 call zip2[1096766] tmp[1983618])
        val tmp[1983625]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
        (1983630 'move' tmp[1983625](1983627 '.v' this[1124522] F14__iterator[1983404]))
        (1883055 'move' _index[1883066](1883058 call getValue[1096802] tmp[1983625]))
        val _index[1883060]:uint(8)[100] "temp"
        val tmp[1983632]:(int(64),uint(8))[1111059] "temp"
        (1983637 'move' tmp[1983632](1983634 '.v' this[1124522] F16__indexOfInterest[1983408]))
        (1883062 '.=' tmp[1983632] x1[1111057] _index[1883060])
        (1983639 '.=' this[1124522] F16__indexOfInterest[1983408] tmp[1983632])
        val _index[1883066]:int(64)[13] "temp"
        val tmp[1983643]:(int(64),uint(8))[1111059] "temp"
        (1983648 'move' tmp[1983643](1983645 '.v' this[1124522] F16__indexOfInterest[1983408]))
        (1883068 '.=' tmp[1983643] x0[1111055] _index[1883066])
        (1983650 '.=' this[1124522] F16__indexOfInterest[1983408] tmp[1983643])
        1
        const-val i[1883073]:int(64)[13] "const" "index var" "insert auto destroy"
        const-val tmp[1983654]:(int(64),uint(8))[1111059] "temp"
        (1983659 'move' tmp[1983654](1983656 '.v' this[1124522] F16__indexOfInterest[1983408]))
        (1883075 'move' i[1883073](1883077 '.v' tmp[1983654] x0[1111055]))
        const-val c[1883080]:uint(8)[100] "const" "index var" "insert auto destroy"
        const-val tmp[1983661]:(int(64),uint(8))[1111059] "temp"
        (1983666 'move' tmp[1983661](1983663 '.v' this[1124522] F16__indexOfInterest[1983408]))
        (1883082 'move' c[1883080](1883084 '.v' tmp[1983661] x1[1111057]))
        const-val call_tmp[1883087]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1983668]:bool[10] "temp"
        (1983673 'move' tmp[1983668](1983670 '.v' this[1124522] F6_noSplits[1983388]))
        (1883089 'move' call_tmp[1883087] tmp[1983668])
        const-val tmp[1983675]:bool[10] "temp"
        (1983680 'move' tmp[1983675](1983677 '.v' this[1124522] F6_noSplits[1983388]))
        if tmp[1983675]
        {
          ref tmp[1983682]:_ref(bool)[937218] "temp"
          (1983687 'move' tmp[1983682](1983684 '.' this[1124522] F3_done[1983382]))
          (1883095 call =[435212] tmp[1983682] 1)
          const-val call_tmp[1883098]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          ref tmp[1983689]:_ref(string)[937958] "temp"
          (1983694 'move' tmp[1983689](1983691 '.' this[1124522] F2_localx[1983380]))
          (1883100 'move' call_tmp[1883098](1883103 call isSpace[36843] tmp[1983689]))
          const-val call_tmp[1883105]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1883107 'move' call_tmp[1883105](1883110 call ![7494] call_tmp[1883098]))
          const-val call_tmp[1883112]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1883114 'move' call_tmp[1883112] call_tmp[1883105])
          if call_tmp[1883105]
          {
            ref tmp[1983696]:_ref(string)[937958] "temp"
            (1983701 'move' tmp[1983696](1983698 '.' this[1124522] F5_chunk[1983386]))
            ref tmp[1983703]:_ref(string)[937958] "temp"
            (1983708 'move' tmp[1983703](1983705 '.' this[1124522] F2_localx[1983380]))
            (1883120 call =[38272] tmp[1983696] tmp[1983703])
            ref tmp[1983710]:_ref(bool)[937218] "temp"
            (1983715 'move' tmp[1983710](1983712 '.' this[1124522] F4_yieldChunk[1983384]))
            (1883124 call =[435212] tmp[1983710] 1)
          }
        }
        {
          const-val call_tmp[1883129]:bool[10] "dead at end of block" "maybe param" "temp"
          (1883131 'move' call_tmp[1883129](1883134 call byte_isWhitespace[181655] c[1883080]))
          const-val cSpace[1883136]:bool[10] "dead at end of block" "insert auto destroy"
          (1883138 'move' cSpace[1883136] call_tmp[1883129])
          const-val tmp[1883141]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val tmp[1983717]:bool[10] "temp"
          (1983722 'move' tmp[1983717](1983719 '.v' this[1124522] F10_inChunk[1983396]))
          (1883143 'move' tmp[1883141] tmp[1983717])
          val tmp[1883146]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
          const-val tmp[1883148]:bool[10] "dead after last mention" "maybe param" "temp"
          const-val call_tmp[1883150]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          const-val tmp[1983724]:bool[10] "temp"
          (1983729 'move' tmp[1983724](1983726 '.v' this[1124522] F10_inChunk[1983396]))
          (1883152 'move' call_tmp[1883150] tmp[1983724])
          const-val tmp[1983731]:bool[10] "temp"
          (1983736 'move' tmp[1983731](1983733 '.v' this[1124522] F10_inChunk[1983396]))
          (1883155 'move' tmp[1883148] tmp[1983731])
          const-val tmp[1983738]:bool[10] "temp"
          (1983743 'move' tmp[1983738](1983740 '.v' this[1124522] F10_inChunk[1983396]))
          if tmp[1983738]
          {
            (1883160 'move' tmp[1883146] 1)
          }
          {
            const-val tmp[1883164]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
            (1883166 'move' tmp[1883164] cSpace[1883136])
            (1883169 'move' tmp[1883146] cSpace[1883136])
          }
          const-val call_tmp[1883173]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1883175 'move' call_tmp[1883173](1883178 call ![7494] tmp[1883146]))
          const-val call_tmp[1883180]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1883182 'move' call_tmp[1883180] call_tmp[1883173])
          if call_tmp[1883173]
          {
            ref tmp[1983745]:_ref(int(64))[936591] "temp"
            (1983750 'move' tmp[1983745](1983747 '.' this[1124522] F11_chunkStart[1983398]))
            (1883188 call =[435365] tmp[1983745] i[1883073])
            ref tmp[1983752]:_ref(bool)[937218] "temp"
            (1983757 'move' tmp[1983752](1983754 '.' this[1124522] F10_inChunk[1983396]))
            (1883192 call =[435212] tmp[1983752] 1)
            const-val call_tmp[1883195]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[1983759]:int(64)[13] "temp"
            (1983764 'move' tmp[1983759](1983761 '.v' this[1124522] F9_iEnd[1983394]))
            (1883197 'move' call_tmp[1883195](1883200 call >[437710] i[1883073] tmp[1983759]))
            const-val call_tmp[1883203]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (1883205 'move' call_tmp[1883203] call_tmp[1883195])
            if call_tmp[1883195]
            {
              const-val call_tmp[1883210]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              const-val tmp[1983766]:int(64)[13] "temp"
              (1983771 'move' tmp[1983766](1983768 '.v' this[1124522] F11_chunkStart[1983398]))
              ref tmp[1983773]:_ref(range(int(64),boundedLow,false))[1087628] "temp"
              (1983778 'move' tmp[1983773](1983775 '.' this[1124522] F17_ret_tmp[1983410]))
              (1883215 call chpl_build_low_bounded_range[1086977] tmp[1983766] tmp[1983773])
              const-val tmp[1983780]:range(int(64),boundedLow,false)[1087584] "temp"
              (1983785 'move' tmp[1983780](1983782 '.v' this[1124522] F17_ret_tmp[1983410]))
              (1883218 'move' call_tmp[1883210] tmp[1983780])
              const-val call_tmp[1883221]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
              ref tmp[1983787]:_ref(string)[937958] "temp"
              (1983792 'move' tmp[1983787](1983789 '.' this[1124522] F2_localx[1983380]))
              ref tmp[1983794]:_ref(string)[937958] "temp"
              (1983799 'move' tmp[1983794](1983796 '.' this[1124522] F18_ret_tmp[1983412]))
              (1883226 call this[1125581] tmp[1983787] call_tmp[1883210] tmp[1983794])
              const-val tmp[1983801]:string[26] "temp"
              (1983806 'move' tmp[1983801](1983803 '.v' this[1124522] F18_ret_tmp[1983412]))
              (1883230 'move' call_tmp[1883221] tmp[1983801])
              ref tmp[1983808]:_ref(string)[937958] "temp"
              (1983813 'move' tmp[1983808](1983810 '.' this[1124522] F5_chunk[1983386]))
              (1883234 call =[38272] tmp[1983808] call_tmp[1883221])
              (1883238 call chpl__autoDestroy[1435320] call_tmp[1883221])
              (1883241 call chpl__autoDestroy[1514564] call_tmp[1883210])
              ref tmp[1983815]:_ref(bool)[937218] "temp"
              (1983820 'move' tmp[1983815](1983817 '.' this[1124522] F4_yieldChunk[1983384]))
              (1883244 call =[435212] tmp[1983815] 1)
              ref tmp[1983822]:_ref(bool)[937218] "temp"
              (1983827 'move' tmp[1983822](1983824 '.' this[1124522] F3_done[1983382]))
              (1883248 call =[435212] tmp[1983822] 1)
            }
          }
          {
            const-val call_tmp[1883253]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            const-val tmp[1983829]:bool[10] "temp"
            (1983834 'move' tmp[1983829](1983831 '.v' this[1124522] F10_inChunk[1983396]))
            (1883255 'move' call_tmp[1883253] tmp[1983829])
            if call_tmp[1883253]
            {
              const-val call_tmp[1883260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (1883262 'move' call_tmp[1883260] cSpace[1883136])
              if cSpace[1883136]
              {
                ref tmp[1983836]:_ref(int(64))[936591] "temp"
                (1983841 'move' tmp[1983836](1983838 '.' this[1124522] F8_splitCount[1983392]))
                (1883268 call +=[451353] tmp[1983836] 1)
                const-val tmp[1883271]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val tmp[1983843]:bool[10] "temp"
                (1983848 'move' tmp[1983843](1983845 '.v' this[1124522] F7_limitSplits[1983390]))
                (1883273 'move' tmp[1883271] tmp[1983843])
                val tmp[1883276]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
                const-val tmp[1883278]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1883280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1983850]:bool[10] "temp"
                (1983855 'move' tmp[1983850](1983852 '.v' this[1124522] F7_limitSplits[1983390]))
                (1883282 'move' call_tmp[1883280] tmp[1983850])
                const-val tmp[1983857]:bool[10] "temp"
                (1983862 'move' tmp[1983857](1983859 '.v' this[1124522] F7_limitSplits[1983390]))
                (1883285 'move' tmp[1883278] tmp[1983857])
                const-val tmp[1983864]:bool[10] "temp"
                (1983869 'move' tmp[1983864](1983866 '.v' this[1124522] F7_limitSplits[1983390]))
                if tmp[1983864]
                {
                  const-val tmp[1883290]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1883292]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  const-val tmp[1983871]:int(64)[13] "temp"
                  (1983876 'move' tmp[1983871](1983873 '.v' this[1124522] F8_splitCount[1983392]))
                  const-val tmp[1983878]:int(64)[13] "temp"
                  (1983883 'move' tmp[1983878](1983880 '.v' this[1124522] F1_maxsplit[1983376]))
                  (1883294 'move' call_tmp[1883292](1883297 call >[437710] tmp[1983871] tmp[1983878]))
                  (1883300 'move' tmp[1883290] call_tmp[1883292])
                  (1883303 'move' tmp[1883276] call_tmp[1883292])
                }
                {
                  (1883307 'move' tmp[1883276] 0)
                }
                const-val call_tmp[1883311]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1883313 'move' call_tmp[1883311] tmp[1883276])
                if tmp[1883276]
                {
                  const-val call_tmp[1883318]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1983885]:int(64)[13] "temp"
                  (1983890 'move' tmp[1983885](1983887 '.v' this[1124522] F11_chunkStart[1983398]))
                  ref tmp[1983892]:_ref(range(int(64),boundedLow,false))[1087628] "temp"
                  (1983897 'move' tmp[1983892](1983894 '.' this[1124522] F19_ret_tmp[1983414]))
                  (1883323 call chpl_build_low_bounded_range[1086977] tmp[1983885] tmp[1983892])
                  const-val tmp[1983899]:range(int(64),boundedLow,false)[1087584] "temp"
                  (1983904 'move' tmp[1983899](1983901 '.v' this[1124522] F19_ret_tmp[1983414]))
                  (1883326 'move' call_tmp[1883318] tmp[1983899])
                  const-val call_tmp[1883329]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[1983906]:_ref(string)[937958] "temp"
                  (1983911 'move' tmp[1983906](1983908 '.' this[1124522] F2_localx[1983380]))
                  ref tmp[1983913]:_ref(string)[937958] "temp"
                  (1983918 'move' tmp[1983913](1983915 '.' this[1124522] F20_ret_tmp[1983416]))
                  (1883334 call this[1125581] tmp[1983906] call_tmp[1883318] tmp[1983913])
                  const-val tmp[1983920]:string[26] "temp"
                  (1983925 'move' tmp[1983920](1983922 '.v' this[1124522] F20_ret_tmp[1983416]))
                  (1883338 'move' call_tmp[1883329] tmp[1983920])
                  ref tmp[1983927]:_ref(string)[937958] "temp"
                  (1983932 'move' tmp[1983927](1983929 '.' this[1124522] F5_chunk[1983386]))
                  (1883342 call =[38272] tmp[1983927] call_tmp[1883329])
                  (1883346 call chpl__autoDestroy[1435320] call_tmp[1883329])
                  (1883349 call chpl__autoDestroy[1514564] call_tmp[1883318])
                  ref tmp[1983934]:_ref(bool)[937218] "temp"
                  (1983939 'move' tmp[1983934](1983936 '.' this[1124522] F4_yieldChunk[1983384]))
                  (1883352 call =[435212] tmp[1983934] 1)
                  ref tmp[1983941]:_ref(bool)[937218] "temp"
                  (1983946 'move' tmp[1983941](1983943 '.' this[1124522] F3_done[1983382]))
                  (1883356 call =[435212] tmp[1983941] 1)
                }
                {
                  const-val call_tmp[1883360]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1883362 'move' call_tmp[1883360](1883365 call -[962245] i[1883073]))
                  const-val call_tmp[1883367]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1983948]:int(64)[13] "temp"
                  (1983953 'move' tmp[1983948](1983950 '.v' this[1124522] F11_chunkStart[1983398]))
                  ref tmp[1983955]:_ref(range(int(64),bounded,false))[1026877] "temp"
                  (1983960 'move' tmp[1983955](1983957 '.' this[1124522] F21_ret_tmp[1983418]))
                  (1883372 call chpl_build_bounded_range[455175] tmp[1983948] call_tmp[1883360] tmp[1983955])
                  const-val tmp[1983962]:range(int(64),bounded,false)[1026833] "temp"
                  (1983967 'move' tmp[1983962](1983964 '.v' this[1124522] F21_ret_tmp[1983418]))
                  (1883376 'move' call_tmp[1883367] tmp[1983962])
                  const-val call_tmp[1883379]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[1983969]:_ref(string)[937958] "temp"
                  (1983974 'move' tmp[1983969](1983971 '.' this[1124522] F2_localx[1983380]))
                  ref tmp[1983976]:_ref(string)[937958] "temp"
                  (1983981 'move' tmp[1983976](1983978 '.' this[1124522] F22_ret_tmp[1983420]))
                  (1883384 call this[1111385] tmp[1983969] call_tmp[1883367] tmp[1983976])
                  const-val tmp[1983983]:string[26] "temp"
                  (1983988 'move' tmp[1983983](1983985 '.v' this[1124522] F22_ret_tmp[1983420]))
                  (1883388 'move' call_tmp[1883379] tmp[1983983])
                  ref tmp[1983990]:_ref(string)[937958] "temp"
                  (1983995 'move' tmp[1983990](1983992 '.' this[1124522] F5_chunk[1983386]))
                  (1883392 call =[38272] tmp[1983990] call_tmp[1883379])
                  (1883396 call chpl__autoDestroy[1435320] call_tmp[1883379])
                  (1883399 call chpl__autoDestroy[1508195] call_tmp[1883367])
                  ref tmp[1983997]:_ref(bool)[937218] "temp"
                  (1984002 'move' tmp[1983997](1983999 '.' this[1124522] F4_yieldChunk[1983384]))
                  (1883402 call =[435212] tmp[1983997] 1)
                  ref tmp[1984004]:_ref(bool)[937218] "temp"
                  (1984009 'move' tmp[1984004](1984006 '.' this[1124522] F10_inChunk[1983396]))
                  (1883406 call =[435212] tmp[1984004] 0)
                }
              }
              {
                const-val call_tmp[1883411]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val tmp[1984011]:int(64)[13] "temp"
                (1984016 'move' tmp[1984011](1984013 '.v' this[1124522] F9_iEnd[1983394]))
                (1883413 'move' call_tmp[1883411](1883416 call >[437710] i[1883073] tmp[1984011]))
                const-val call_tmp[1883419]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1883421 'move' call_tmp[1883419] call_tmp[1883411])
                if call_tmp[1883411]
                {
                  const-val call_tmp[1883426]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1984018]:int(64)[13] "temp"
                  (1984023 'move' tmp[1984018](1984020 '.v' this[1124522] F11_chunkStart[1983398]))
                  ref tmp[1984025]:_ref(range(int(64),boundedLow,false))[1087628] "temp"
                  (1984030 'move' tmp[1984025](1984027 '.' this[1124522] F23_ret_tmp[1983422]))
                  (1883431 call chpl_build_low_bounded_range[1086977] tmp[1984018] tmp[1984025])
                  const-val tmp[1984032]:range(int(64),boundedLow,false)[1087584] "temp"
                  (1984037 'move' tmp[1984032](1984034 '.v' this[1124522] F23_ret_tmp[1983422]))
                  (1883434 'move' call_tmp[1883426] tmp[1984032])
                  const-val call_tmp[1883437]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  ref tmp[1984039]:_ref(string)[937958] "temp"
                  (1984044 'move' tmp[1984039](1984041 '.' this[1124522] F2_localx[1983380]))
                  ref tmp[1984046]:_ref(string)[937958] "temp"
                  (1984051 'move' tmp[1984046](1984048 '.' this[1124522] F24_ret_tmp[1983424]))
                  (1883442 call this[1125581] tmp[1984039] call_tmp[1883426] tmp[1984046])
                  const-val tmp[1984053]:string[26] "temp"
                  (1984058 'move' tmp[1984053](1984055 '.v' this[1124522] F24_ret_tmp[1983424]))
                  (1883446 'move' call_tmp[1883437] tmp[1984053])
                  ref tmp[1984060]:_ref(string)[937958] "temp"
                  (1984065 'move' tmp[1984060](1984062 '.' this[1124522] F5_chunk[1983386]))
                  (1883450 call =[38272] tmp[1984060] call_tmp[1883437])
                  (1883454 call chpl__autoDestroy[1435320] call_tmp[1883437])
                  (1883457 call chpl__autoDestroy[1514564] call_tmp[1883426])
                  ref tmp[1984067]:_ref(bool)[937218] "temp"
                  (1984072 'move' tmp[1984067](1984069 '.' this[1124522] F4_yieldChunk[1983384]))
                  (1883460 call =[435212] tmp[1984067] 1)
                  ref tmp[1984074]:_ref(bool)[937218] "temp"
                  (1984079 'move' tmp[1984074](1984076 '.' this[1124522] F3_done[1983382]))
                  (1883464 call =[435212] tmp[1984074] 1)
                }
              }
            }
          }
        }
        const-val call_tmp[1883472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1984081]:bool[10] "temp"
        (1984086 'move' tmp[1984081](1984083 '.v' this[1124522] F4_yieldChunk[1983384]))
        (1883474 'move' call_tmp[1883472] tmp[1984081])
        if call_tmp[1883472]
        {
          const-val yret[1883479]:string[26] "dead after last mention" "YVV" "temp"
          val call_tmp[1883481]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
          val tmp[1984088]:string[26] "temp"
          ref tmp[1984094]:_ref(string)[937958] "temp"
          (1984099 'move' tmp[1984094](1984096 '.' this[1124522] F5_chunk[1983386]))
          (1883485 'move' tmp[1984088](1883488 call chpl__initCopy[981367] tmp[1984094]))
          (1984090 '.=' this[1124522] value[1983426] tmp[1984088])
          const-val tmp[1984101]:string[26] "temp"
          (1984106 'move' tmp[1984101](1984103 '.v' this[1124522] value[1983426]))
          (1883490 'move' yret[1883479] tmp[1984101])
          (1984327 '.=' this[1124522] more[1124497] 2)
          gotoIterEnd _end[1984325] _end[1984325]
          label _jump_break_2[1984335]
          ref moreRef1[1883637]:_ref(int(64))[936591] "temp"
          ref tmp[1984108]:_ref(_ic_these_range_int64_t_bounded_F)[1096865] "temp"
          (1984113 'move' tmp[1984108](1984110 '.' this[1124522] F14__iterator[1983404]))
          (1883639 'move' moreRef1[1883637](1883641 '.' tmp[1984108] more[1096725]))
          const-val moreVal1[1883644]:int(64)[13] "const" "temp"
          (1883646 '=' moreVal1[1883644] moreRef1[1883637])
          const-val moreValNeg1[1883649]:int(64)[13] "const" "temp"
          (1883651 'move' moreValNeg1[1883649](1883653 'u-' moreVal1[1883644]))
          (1883655 '=' moreRef1[1883637] moreValNeg1[1883649])
          val tmp[1984115]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
          (1984120 'move' tmp[1984115](1984117 '.v' this[1124522] F14__iterator[1983404]))
          (1883659 call advance[1096748] tmp[1984115])
          ref moreRef2[1883661]:_ref(int(64))[936591] "temp"
          ref tmp[1984122]:_ref(_ic_chpl_bytes__ref_string)[1108418] "temp"
          (1984127 'move' tmp[1984122](1984124 '.' this[1124522] F15__iterator[1983406]))
          (1883663 'move' moreRef2[1883661](1883665 '.' tmp[1984122] more[1108278]))
          const-val moreVal2[1883668]:int(64)[13] "const" "temp"
          (1883670 '=' moreVal2[1883668] moreRef2[1883661])
          const-val moreValNeg2[1883673]:int(64)[13] "const" "temp"
          (1883675 'move' moreValNeg2[1883673](1883677 'u-' moreVal2[1883668]))
          (1883679 '=' moreRef2[1883661] moreValNeg2[1883673])
          val tmp[1984129]:_ic_chpl_bytes__ref_string[1108275] "temp"
          (1984134 'move' tmp[1984129](1984131 '.v' this[1124522] F15__iterator[1983406]))
          (1883683 call advance[1108301] tmp[1984129])
          ref tmp[1984136]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108693] "temp"
          (1984141 'move' tmp[1984136](1984138 '.' this[1124522] F12__iterator[1983400]))
          (1883498 call _freeIterator[1108743] tmp[1984136])
          ref tmp[1984143]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108693] "temp"
          (1984148 'move' tmp[1984143](1984145 '.' this[1124522] F12__iterator[1983400]))
          (1883501 call chpl__autoDestroy[1515237] tmp[1984143])
          const-val tmp[1984150]:range(int(64),bounded,false)[1026833] "temp"
          (1984155 'move' tmp[1984150](1984152 '.v' this[1124522] F13_call_tmp[1983402]))
          (1883504 call chpl__autoDestroy[1508195] tmp[1984150])
          ref tmp[1984157]:_ref(string)[937958] "temp"
          (1984162 'move' tmp[1984157](1984159 '.' this[1124522] F5_chunk[1983386]))
          (1883507 call chpl__autoDestroy[1435320] tmp[1984157])
          ref tmp[1984164]:_ref(string)[937958] "temp"
          (1984169 'move' tmp[1984164](1984166 '.' this[1124522] F2_localx[1983380]))
          (1883510 call chpl__autoDestroy[1435320] tmp[1984164])
          gotoReturn _enddoSplitWSNoEnc[1787461] _enddoSplitWSNoEnc[1787461]
          label _jump_2[1984333]
          ref tmp[1984171]:_ref(bool)[937218] "temp"
          (1984176 'move' tmp[1984171](1984173 '.' this[1124522] F4_yieldChunk[1983384]))
          (1883516 call =[435212] tmp[1984171] 0)
        }
        const-val call_tmp[1883520]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1984178]:bool[10] "temp"
        (1984183 'move' tmp[1984178](1984180 '.v' this[1124522] F3_done[1983382]))
        (1883522 'move' call_tmp[1883520] tmp[1984178])
        if call_tmp[1883520]
        {
          ref moreRef1[1883588]:_ref(int(64))[936591] "temp"
          ref tmp[1984185]:_ref(_ic_these_range_int64_t_bounded_F)[1096865] "temp"
          (1984190 'move' tmp[1984185](1984187 '.' this[1124522] F14__iterator[1983404]))
          (1883590 'move' moreRef1[1883588](1883592 '.' tmp[1984185] more[1096725]))
          const-val moreVal1[1883595]:int(64)[13] "const" "temp"
          (1883597 '=' moreVal1[1883595] moreRef1[1883588])
          const-val moreValNeg1[1883600]:int(64)[13] "const" "temp"
          (1883602 'move' moreValNeg1[1883600](1883604 'u-' moreVal1[1883595]))
          (1883606 '=' moreRef1[1883588] moreValNeg1[1883600])
          val tmp[1984192]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
          (1984197 'move' tmp[1984192](1984194 '.v' this[1124522] F14__iterator[1983404]))
          (1883610 call advance[1096748] tmp[1984192])
          ref moreRef2[1883612]:_ref(int(64))[936591] "temp"
          ref tmp[1984199]:_ref(_ic_chpl_bytes__ref_string)[1108418] "temp"
          (1984204 'move' tmp[1984199](1984201 '.' this[1124522] F15__iterator[1983406]))
          (1883614 'move' moreRef2[1883612](1883616 '.' tmp[1984199] more[1108278]))
          const-val moreVal2[1883619]:int(64)[13] "const" "temp"
          (1883621 '=' moreVal2[1883619] moreRef2[1883612])
          const-val moreValNeg2[1883624]:int(64)[13] "const" "temp"
          (1883626 'move' moreValNeg2[1883624](1883628 'u-' moreVal2[1883619]))
          (1883630 '=' moreRef2[1883612] moreValNeg2[1883624])
          val tmp[1984206]:_ic_chpl_bytes__ref_string[1108275] "temp"
          (1984211 'move' tmp[1984206](1984208 '.v' this[1124522] F15__iterator[1983406]))
          (1883634 call advance[1108301] tmp[1984206])
          break _breakLabel[1125379] _breakLabel[1125379]
        }
        val tmp[1984213]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
        (1984218 'move' tmp[1984213](1984215 '.v' this[1124522] F14__iterator[1983404]))
        (1883532 call zip3[1096775] tmp[1984213])
        val tmp[1984220]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1984225 'move' tmp[1984220](1984222 '.v' this[1124522] F15__iterator[1983406]))
        (1883536 call zip3[1108328] tmp[1984220])
        {
          val tmp[1984227]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
          (1984232 'move' tmp[1984227](1984229 '.v' this[1124522] F14__iterator[1983404]))
          (1882917 call init[1096811] tmp[1984227])
          val tmp[1984234]:_ic_chpl_bytes__ref_string[1108275] "temp"
          (1984239 'move' tmp[1984234](1984236 '.v' this[1124522] F15__iterator[1983406]))
          (1882952 call init[1108364] tmp[1984234])
        }
        {
          val tmp[1984241]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
          (1984246 'move' tmp[1984241](1984243 '.v' this[1124522] F14__iterator[1983404]))
          (1882933 call hasMore[1096793] tmp[1984241])
        }
        {
          val tmp[1984248]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
          (1984253 'move' tmp[1984248](1984250 '.v' this[1124522] F14__iterator[1983404]))
          (1882921 call incr[1096820] tmp[1984248])
          val tmp[1984255]:_ic_chpl_bytes__ref_string[1108275] "temp"
          (1984260 'move' tmp[1984255](1984257 '.v' this[1124522] F15__iterator[1983406]))
          (1882956 call incr[1108373] tmp[1984255])
        }
      }
      const-val retTmp[1883002]:int(64)[13] "temp"
      val tmp[1984262]:_ic_chpl_bytes__ref_string[1108275] "temp"
      (1984267 'move' tmp[1984262](1984264 '.v' this[1124522] F15__iterator[1983406]))
      (1883004 'move' retTmp[1883002](1882999 call hasMore[1108346] tmp[1984262]))
      (1883009 'move' hasMore[1882967](1883006 'cast' bool[10] retTmp[1883002]))
      if hasMore[1882967]
      {
        (1882994 'chpl_error' c"zippered iterations have non-equal lengths")
      }
      val tmp[1984269]:_ic_chpl_bytes__ref_string[1108275] "temp"
      (1984274 'move' tmp[1984269](1984271 '.v' this[1124522] F15__iterator[1983406]))
      (1882964 call zip4[1108337] tmp[1984269])
      val tmp[1984276]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
      (1984281 'move' tmp[1984276](1984278 '.v' this[1124522] F14__iterator[1983404]))
      (1882929 call zip4[1096784] tmp[1984276])
      label _breakLabel[1125379]
      ref tmp[1984283]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108693] "temp"
      (1984288 'move' tmp[1984283](1984285 '.' this[1124522] F12__iterator[1983400]))
      (1817762 call _freeIterator[1108743] tmp[1984283])
      ref tmp[1984290]:_ref((_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string))[1108693] "temp"
      (1984295 'move' tmp[1984290](1984292 '.' this[1124522] F12__iterator[1983400]))
      (1817764 call chpl__autoDestroy[1515237] tmp[1984290])
      const-val tmp[1984297]:range(int(64),bounded,false)[1026833] "temp"
      (1984302 'move' tmp[1984297](1984299 '.v' this[1124522] F13_call_tmp[1983402]))
      (1817767 call chpl__autoDestroy[1508195] tmp[1984297])
      ref tmp[1984304]:_ref(string)[937958] "temp"
      (1984309 'move' tmp[1984304](1984306 '.' this[1124522] F5_chunk[1983386]))
      (1817771 call chpl__autoDestroy[1435320] tmp[1984304])
      ref tmp[1984311]:_ref(string)[937958] "temp"
      (1984316 'move' tmp[1984311](1984313 '.' this[1124522] F2_localx[1983380]))
      (1817774 call chpl__autoDestroy[1435320] tmp[1984311])
    }
    label _enddoSplitWSNoEnc[1787461]
    (1984337 '.=' this[1124522] more[1124497] 0)
    label _end[1984325]
    (1984372 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].zip1[1124529](const in arg this[1124531]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1984318 call advance[1124520] this[1124531])
    (1124536 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].zip2[1124538](const in arg this[1124540]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1124545 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].zip3[1124547](const in arg this[1124549]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1984321 call advance[1124520] this[1124549])
    (1124554 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].zip4[1124556](const in arg this[1124558]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1124563 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].hasMore[1124565](const in arg this[1124567]:_ic_doSplitWSNoEnc[1124494]) : int(64)[13] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1984375]:int(64)[13] "temp"
    (1984380 'move' tmp[1984375](1984377 '.v' this[1124567] more[1124497]))
    (1984382 return tmp[1984375])
  }
  function _ic_doSplitWSNoEnc[1124494].getValue[1124574](const in arg this[1124576]:_ic_doSplitWSNoEnc[1124494]) : string[26] "auto ii" "inline" "method" "resolved"
  {
    val tmp[1984385]:string[26] "temp"
    (1984390 'move' tmp[1984385](1984387 '.v' this[1124576] value[1983426]))
    (1984392 return tmp[1984385])
  }
  function doSplitWSNoEnc[1124475](const  ref arg x[1124477]:_ref(string)[937958], const in arg maxsplit[1124483]:int(64)[13], ref arg _retArg[1807505]:_ref(_ir_doSplitWSNoEnc)[1124611]) : void[4] "fn returns via _retArg" "inline" "instantiated generic" "invisible fn" "iterator fn" "resolved" "no return value for void"
  {
    val _ir[1984400]:_ir_doSplitWSNoEnc[1124500] "temp"
    (1984402 '.=' _ir[1984400] F0_x[1983374] x[1124477])
    (1984406 '.=' _ir[1984400] F1_maxsplit[1983378] maxsplit[1124483])
    (1984410 '=' _retArg[1807505] _ir[1984400])
    (1984413 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].init[1124583](const in arg this[1124585]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1984395 return _void[55])
  }
  function _ic_doSplitWSNoEnc[1124494].incr[1124592](const in arg this[1124594]:_ic_doSplitWSNoEnc[1124494]) : void[4] "auto ii" "inline" "method" "resolved"
  {
    (1984398 return _void[55])
  }
  type _ic_doSplitWSNoEnc[1124494] val super[1124495]:object[22] "super class" val more[1124497]:int(64)[13] ref F0_x[1983372]:_ref(string)[937958] const-val F1_maxsplit[1983376]:int(64)[13] const F2_localx[1983380]:string[26] val F3_done[1983382]:bool[10] val F4_yieldChunk[1983384]:bool[10] const-val F5_chunk[1983386]:string[26] const F6_noSplits[1983388]:bool[10] const F7_limitSplits[1983390]:bool[10] val F8_splitCount[1983392]:int(64)[13] const F9_iEnd[1983394]:int(64)[13] val F10_inChunk[1983396]:bool[10] val F11_chunkStart[1983398]:int(64)[13] val F12__iterator[1983400]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] val F13_call_tmp[1983402]:range(int(64),bounded,false)[1026833] val F14__iterator[1983404]:_ic_these_range_int64_t_bounded_F[1096722] val F15__iterator[1983406]:_ic_chpl_bytes__ref_string[1108275] val F16__indexOfInterest[1983408]:(int(64),uint(8))[1111059] const-val F17_ret_tmp[1983410]:range(int(64),boundedLow,false)[1087584] const-val F18_ret_tmp[1983412]:string[26] const-val F19_ret_tmp[1983414]:range(int(64),boundedLow,false)[1087584] const-val F20_ret_tmp[1983416]:string[26] const-val F21_ret_tmp[1983418]:range(int(64),bounded,false)[1026833] const-val F22_ret_tmp[1983420]:string[26] const-val F23_ret_tmp[1983422]:range(int(64),boundedLow,false)[1087584] const-val F24_ret_tmp[1983424]:string[26] val value[1983426]:string[26]
  type _ir_doSplitWSNoEnc[1124500] ref F0_x[1983374]:_ref(string)[937958] const-val F1_maxsplit[1983378]:int(64)[13]
  function _getIterator[1124509](const  ref arg ir[1124511]:_ir_doSplitWSNoEnc[1124500]) : _ic_doSplitWSNoEnc[1124494] "auto ii" "inline" "resolved" "unsafe"
  {
    val ret[1124618]:_ic_doSplitWSNoEnc[1124494] "dead after last mention" "RVV" "temp"
    val _ic_[1124501]:_ic_doSplitWSNoEnc[1124494] "dead after last mention" "temp"
    const-val call_tmp[1124625]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    (1124628 'move' call_tmp[1124625](1124640 'sizeof_bundle' _ic_doSplitWSNoEnc[1124494]))
    const-val cast_tmp[1124643]:c_void_ptr[149] "dead after last mention" "temp"
    (1124645 'move' cast_tmp[1124643](1124506 call chpl_here_alloc[187788] call_tmp[1124625] 35))
    (1124514 'move' _ic_[1124501](1124647 'cast' _ic_doSplitWSNoEnc[1124494] cast_tmp[1124643]))
    (1124516 'setcid' _ic_[1124501])
    (1124623 'move' ret[1124618] _ic_[1124501])
    (1984416 '.=' ret[1124618] more[1124497] 1)
    ref tmp[1984420]:_ref(string)[937958] "temp"
    (1984425 'move' tmp[1984420](1984421 '.v' ir[1124511] F0_x[1983374]))
    (1984427 '.=' ret[1124618] F0_x[1983372] tmp[1984420])
    const-val tmp[1984431]:int(64)[13] "temp"
    (1984436 'move' tmp[1984431](1984432 '.v' ir[1124511] F1_maxsplit[1983378]))
    (1984438 '.=' ret[1124618] F1_maxsplit[1983376] tmp[1984431])
    (1124620 return ret[1124618])
  }
  function doSearchNoEnc[1030072](const  ref arg x[1030074]:_ref(string)[937958], const  ref arg needle[1030079]:string[26], const in arg region[1030081]:range(byteIndex,bounded,false)[1025811]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1030089]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1030101]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1030119]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1030121 'move' ret[1030119] -1)
    const-val tmp[1030126]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1030128]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1030130 'move' call_tmp[1030128](1030133 call locale_id[758061] x[1030074]))
    const-val call_tmp[1030136]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1031002]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1031006 'move' coerce_tmp[1031002](1031004 'deref' call_tmp[1030128]))
    (1030138 'move' call_tmp[1030136](1030141 call chpl_buildLocaleID[209470] coerce_tmp[1031002] c_sublocid_any[89878]))
    const-val call_tmp[1030144]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1030146 'move' call_tmp[1030144](1030148 'chpl_on_locale_num' call_tmp[1030136]))
    (1030150 'move' tmp[1030126] call_tmp[1030144])
    val needle_data[2049088]:__serializeHelper[28089] "temp"
    (2049090 call chpl__serialize[30886] needle[1030079] needle_data[2049088])
    val isdirect[2054205]:bool[10] "temp"
    (2054210 'move' isdirect[2054205](2054207 call chpl_doDirectExecuteOn[187469] tmp[1030126]))
    if isdirect[2054205]
    {
      (2054214 call on_fn[1030157] needle_data[2049088] x[1030074] region[1030081] ret[1030119])
    }
    {
      val _args_foron_fn[2054238]:_class_localson_fn[2054224] "temp"
      (2054242 'move' _args_foron_fn[2054238](2054240 'stack allocate class' _class_localson_fn[2054224]))
      (2054244 '.=' _args_foron_fn[2054238] _0_tmp[2054227] tmp[1030126])
      (2054248 '.=' _args_foron_fn[2054238] _1_needle_data[2054229] needle_data[2049088])
      ref tmp[2054252]:string[26] "temp"
      (2054256 'move' tmp[2054252](2054254 'set reference' x[1030074]))
      (2054258 '.=' _args_foron_fn[2054238] _2_x[2054231] tmp[2054252])
      (2054262 '.=' _args_foron_fn[2054238] _3_region[2054233] region[1030081])
      ref tmp[2054266]:int(64)[13] "temp"
      (2054270 'move' tmp[2054266](2054268 'set reference' ret[1030119]))
      (2054272 '.=' _args_foron_fn[2054238] _4_ret[2054235] tmp[2054266])
      val _args_vforon_fn[2054276]:c_void_ptr[149] "temp"
      (2054280 'move' _args_vforon_fn[2054276](2054278 'cast_to_void_star' _args_foron_fn[2054238]))
      val _args_sizeon_fn[2054282]:int(64)[13] "temp"
      (2054286 'move' _args_sizeon_fn[2054282](2054284 'sizeof_bundle' _class_localson_fn[2054224]))
      on(2054342 call wrapon_fn[2054288] tmp[1030126] _args_vforon_fn[2054276] _args_sizeon_fn[2054282] _args_foron_fn[2054238])
    }
    {
    }
    (1030889 'move' ret[1030089] ret[1030119])
    gotoReturn _end_doSearchNoEnc[1030897] _end_doSearchNoEnc[1030897]
    label _end_doSearchNoEnc[1030897]
    (1030899 return ret[1030089])
  }
  function doSearchNoEnc[1181785](const  ref arg x[1181787]:_ref(string)[937958], const  ref arg needle[1181792]:string[26], const in arg region[1181794]:range(byteIndex,boundedLow,false)[1143422]) : int(64)[13] "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1181802]:int(64)[13] "dead after last mention" "RVV" "temp"
    val call_tmp[1181814]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val ret[1181832]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1181834 'move' ret[1181832] -1)
    const-val tmp[1181839]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[1181841]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1181843 'move' call_tmp[1181841](1181846 call locale_id[758061] x[1181787]))
    const-val call_tmp[1181849]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1182652]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1182656 'move' coerce_tmp[1182652](1182654 'deref' call_tmp[1181841]))
    (1181851 'move' call_tmp[1181849](1181854 call chpl_buildLocaleID[209470] coerce_tmp[1182652] c_sublocid_any[89878]))
    const-val call_tmp[1181857]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (1181859 'move' call_tmp[1181857](1181861 'chpl_on_locale_num' call_tmp[1181849]))
    (1181863 'move' tmp[1181839] call_tmp[1181857])
    val needle_data[2049627]:__serializeHelper[28089] "temp"
    (2049629 call chpl__serialize[30886] needle[1181792] needle_data[2049627])
    val isdirect[2056819]:bool[10] "temp"
    (2056824 'move' isdirect[2056819](2056821 call chpl_doDirectExecuteOn[187469] tmp[1181839]))
    if isdirect[2056819]
    {
      (2056828 call on_fn[1181870] needle_data[2049627] x[1181787] region[1181794] ret[1181832])
    }
    {
      val _args_foron_fn[2056852]:_class_localson_fn[2056838] "temp"
      (2056856 'move' _args_foron_fn[2056852](2056854 'stack allocate class' _class_localson_fn[2056838]))
      (2056858 '.=' _args_foron_fn[2056852] _0_tmp[2056841] tmp[1181839])
      (2056862 '.=' _args_foron_fn[2056852] _1_needle_data[2056843] needle_data[2049627])
      ref tmp[2056866]:string[26] "temp"
      (2056870 'move' tmp[2056866](2056868 'set reference' x[1181787]))
      (2056872 '.=' _args_foron_fn[2056852] _2_x[2056845] tmp[2056866])
      (2056876 '.=' _args_foron_fn[2056852] _3_region[2056847] region[1181794])
      ref tmp[2056880]:int(64)[13] "temp"
      (2056884 'move' tmp[2056880](2056882 'set reference' ret[1181832]))
      (2056886 '.=' _args_foron_fn[2056852] _4_ret[2056849] tmp[2056880])
      val _args_vforon_fn[2056890]:c_void_ptr[149] "temp"
      (2056894 'move' _args_vforon_fn[2056890](2056892 'cast_to_void_star' _args_foron_fn[2056852]))
      val _args_sizeon_fn[2056896]:int(64)[13] "temp"
      (2056900 'move' _args_sizeon_fn[2056896](2056898 'sizeof_bundle' _class_localson_fn[2056838]))
      on(2056956 call wrapon_fn[2056902] tmp[1181839] _args_vforon_fn[2056890] _args_sizeon_fn[2056896] _args_foron_fn[2056852])
    }
    {
    }
    (1182602 'move' ret[1181802] ret[1181832])
    gotoReturn _end_doSearchNoEnc[1182610] _end_doSearchNoEnc[1182610]
    label _end_doSearchNoEnc[1182610]
    (1182612 return ret[1181802])
  }
  function doAppend[979089](ref arg lhs[979091]:_ref(string)[937958], const  ref arg rhs[979096]:_ref(string)[937958]) : void[4] "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    val call_tmp[979102]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[979113]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (979115 'move' call_tmp[979113](979118 call buffLen[757905] rhs[979096]))
    const-val call_tmp[979121]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[979730]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979734 'move' coerce_tmp[979730](979732 'deref' call_tmp[979113]))
    (979123 'move' call_tmp[979121](979126 call ==[435666] coerce_tmp[979730] 0))
    const-val call_tmp[979129]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (979131 'move' call_tmp[979129] call_tmp[979121])
    if call_tmp[979129]
    {
      gotoReturn _end_doAppend[979659] _end_doAppend[979659]
    }
    const-val tmp[979141]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[979143]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (979145 'move' call_tmp[979143](979148 call locale_id[758061] lhs[979091]))
    const-val call_tmp[979151]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[979738]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (979742 'move' coerce_tmp[979738](979740 'deref' call_tmp[979143]))
    (979153 'move' call_tmp[979151](979156 call chpl_buildLocaleID[209470] coerce_tmp[979738] c_sublocid_any[89878]))
    const-val call_tmp[979159]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (979161 'move' call_tmp[979159](979163 'chpl_on_locale_num' call_tmp[979151]))
    (979165 'move' tmp[979141] call_tmp[979159])
    val isdirect[2052754]:bool[10] "temp"
    (2052759 'move' isdirect[2052754](2052756 call chpl_doDirectExecuteOn[187469] tmp[979141]))
    if isdirect[2052754]
    {
      (2052763 call on_fn[979172] lhs[979091] rhs[979096])
    }
    {
      val _args_foron_fn[2052781]:_class_localson_fn[2052771] "temp"
      (2052785 'move' _args_foron_fn[2052781](2052783 'stack allocate class' _class_localson_fn[2052771]))
      (2052787 '.=' _args_foron_fn[2052781] _0_tmp[2052774] tmp[979141])
      ref tmp[2052791]:string[26] "temp"
      (2052795 'move' tmp[2052791](2052793 'set reference' lhs[979091]))
      (2052797 '.=' _args_foron_fn[2052781] _1_lhs[2052776] tmp[2052791])
      ref tmp[2052801]:string[26] "temp"
      (2052805 'move' tmp[2052801](2052803 'set reference' rhs[979096]))
      (2052807 '.=' _args_foron_fn[2052781] _2_rhs[2052778] tmp[2052801])
      val _args_vforon_fn[2052811]:c_void_ptr[149] "temp"
      (2052815 'move' _args_vforon_fn[2052811](2052813 'cast_to_void_star' _args_foron_fn[2052781]))
      val _args_sizeon_fn[2052817]:int(64)[13] "temp"
      (2052821 'move' _args_sizeon_fn[2052817](2052819 'sizeof_bundle' _class_localson_fn[2052771]))
      on(2052861 call wrapon_fn[2052823] tmp[979141] _args_vforon_fn[2052811] _args_sizeon_fn[2052817] _args_foron_fn[2052781])
    }
    {
    }
    label _end_doAppend[979659]
    (979661 return _void[55])
  }
  function reinitWithNewBuffer[1019927](ref arg lhs[1019929]:_ref(string)[937958], const in arg buff[1019933]:c_ptr(uint(8))[937442], const in arg buffLen[1019935]:int(64)[13], const in arg buffSize[1019937]:int(64)[13], const in arg numCodepoints[1019941]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019947]:bool[10] "dead after last mention" "maybe param" "temp"
    (1019949 'move' tmp[1019947](1019955 call isEmpty[35064] lhs[1019929]))
    val tmp[1019969]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1019971]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1019973]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019975 'move' call_tmp[1019973] tmp[1019947])
    (1019980 'move' tmp[1019971] call_tmp[1019973])
    if tmp[1019971]
    {
      const-val tmp[1019987]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1019989]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019991 'move' call_tmp[1019989](1019994 call ==[1020564] buff[1019933] nil[44]))
      (1019997 'move' tmp[1019987] call_tmp[1019989])
      (1020002 'move' tmp[1019969] tmp[1019987])
    }
    {
      (1020008 'move' tmp[1019969] 0)
    }
    const-val call_tmp[1020014]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020016 'move' call_tmp[1020014] tmp[1019969])
    if call_tmp[1020014]
    {
      gotoReturn _end_reinitWithNewBuffer[1020526] _end_reinitWithNewBuffer[1020526]
    }
    const-val call_tmp[1020026]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020028 'move' call_tmp[1020026](1020031 call !=[436050] buffLen[1019935] 0))
    const-val call_tmp[1020034]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1020036 'move' call_tmp[1020034] call_tmp[1020026])
    if call_tmp[1020034]
    {
      const-val tmp[1020043]:bool[10] "dead after last mention" "maybe param" "temp"
      ref call_tmp[1020045]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (1020047 'move' call_tmp[1020045](1020050 call isOwned[758009] lhs[1019929]))
      const-val coerce_tmp[1020594]:bool[10] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020598 'move' coerce_tmp[1020594](1020596 'deref' call_tmp[1020045]))
      (1020053 'move' tmp[1020043](1020056 call ![7494] coerce_tmp[1020594]))
      val tmp[1020071]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020073]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020075]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020077 'move' call_tmp[1020075] tmp[1020043])
      (1020082 'move' tmp[1020073] call_tmp[1020075])
      if tmp[1020073]
      {
        (1020089 'move' tmp[1020071] 1)
      }
      {
        const-val tmp[1020095]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020097]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020099 'move' call_tmp[1020097](1020102 call +[949685] buffLen[1019935]))
        ref call_tmp[1020105]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (1020107 'move' call_tmp[1020105](1020110 call buffSize[757931] lhs[1019929]))
        const-val call_tmp[1020113]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020606]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020610 'move' coerce_tmp[1020606](1020608 'deref' call_tmp[1020105]))
        (1020115 'move' call_tmp[1020113](1020118 call >[437710] call_tmp[1020097] coerce_tmp[1020606]))
        (1020121 'move' tmp[1020095] call_tmp[1020113])
        (1020126 'move' tmp[1020071] tmp[1020095])
      }
      const-val call_tmp[1020132]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020134 'move' call_tmp[1020132] tmp[1020071])
      if call_tmp[1020132]
      {
        ref tmp[1020141]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
        (1020143 'move' tmp[1020141](1020146 call isOwned[758009] lhs[1019929]))
        val tmp[1020162]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
        const-val tmp[1020164]:bool[10] "dead after last mention" "maybe param" "temp"
        const-val call_tmp[1020166]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[1020617]:bool[10] "dead after last mention" "const" "temp"
        (1020619 'move' tmp[1020617](1020621 'deref' tmp[1020141]))
        (1020168 'move' call_tmp[1020166] tmp[1020617])
        (1020173 'move' tmp[1020164] call_tmp[1020166])
        if tmp[1020164]
        {
          const-val tmp[1020180]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
          const-val call_tmp[1020182]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020184 'move' call_tmp[1020182](1020190 call isEmpty[35064] lhs[1019929]))
          const-val call_tmp[1020191]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
          (1020193 'move' call_tmp[1020191](1020196 call ![7494] call_tmp[1020182]))
          (1020198 'move' tmp[1020180] call_tmp[1020191])
          (1020203 'move' tmp[1020162] tmp[1020180])
        }
        {
          (1020209 'move' tmp[1020162] 0)
        }
        const-val call_tmp[1020215]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020217 'move' call_tmp[1020215] tmp[1020162])
        if call_tmp[1020215]
        {
          ref call_tmp[1020224]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
          (1020226 'move' call_tmp[1020224](1020229 call buff[757983] lhs[1019929]))
          val coerce_tmp[1020626]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (1020630 'move' coerce_tmp[1020626](1020628 'deref' call_tmp[1020224]))
          (1020233 call bufferFree[172958] coerce_tmp[1020626])
        }
        const-val call_tmp[1020236]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1020238 'move' call_tmp[1020236](1020241 call +[949685] buffLen[1019935]))
        const-val call_tmp[1020244]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1805316]:(c_ptr(uint(8)),int(64))[955227] "temp"
        (1020249 call bufferAlloc[955037] call_tmp[1020236] ret_tmp[1805316])
        (1805319 'move' call_tmp[1020244] ret_tmp[1805316])
        const-val tmp[1020251]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "const" "insert auto destroy" "temp"
        (1020253 'move' tmp[1020251] call_tmp[1020244])
        1
        ref call_tmp[1020261]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020263 'move' call_tmp[1020261](1020642 '.' tmp[1020251] x0[955223]))
        const buff[1020268]:c_ptr(uint(8))[937442] "dead at end of block" "const" "insert auto destroy"
        val coerce_tmp[1020647]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020651 'move' coerce_tmp[1020647](1020649 'deref' call_tmp[1020261]))
        (1020270 'move' buff[1020268](1020645 call chpl__initCopy[954049] coerce_tmp[1020647]))
        ref call_tmp[1020273]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1020275 'move' call_tmp[1020273](1020656 '.' tmp[1020251] x1[955225]))
        const-val allocSize[1020280]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1020661]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1020665 'move' coerce_tmp[1020661](1020663 'deref' call_tmp[1020273]))
        (1020282 'move' allocSize[1020280](1020659 call chpl__initCopy[955351] coerce_tmp[1020661]))
        ref call_tmp[1020286]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1020288 'move' call_tmp[1020286](1020291 call buff[757983] lhs[1019929]))
        (1020295 call =[954232] call_tmp[1020286] buff[1020268])
        ref call_tmp[1020300]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (1020302 'move' call_tmp[1020300](1020305 call buffSize[757931] lhs[1019929]))
        (1020309 call =[435365] call_tmp[1020300] allocSize[1020280])
        ref call_tmp[1020314]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
        (1020316 'move' call_tmp[1020314](1020319 call isOwned[758009] lhs[1019929]))
        (1020323 call =[435212] call_tmp[1020314] 1)
        (1815948 call chpl__autoDestroy[1438961] tmp[1020251])
      }
      ref call_tmp[1020327]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (1020329 'move' call_tmp[1020327](1020332 call buff[757983] lhs[1019929]))
      val coerce_tmp[1020725]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020729 'move' coerce_tmp[1020725](1020727 'deref' call_tmp[1020327]))
      (1020336 call bufferMemmoveLocal[1020675] coerce_tmp[1020725] buff[1019933] buffLen[1019935] 0 0)
      ref call_tmp[1020341]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[1020851]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
      (1020853 'move' _this_tmp_[1020851](1020346 call buff[757983] lhs[1019929]))
      val coerce_tmp[1020858]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020862 'move' coerce_tmp[1020858](1020860 'deref' _this_tmp_[1020851]))
      (1020343 'move' call_tmp[1020341](1020349 call this[954110] coerce_tmp[1020858] buffLen[1019935]))
      const-val coerce_tmp[1020865]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1020871 'move' coerce_tmp[1020865](1020867 'cast' uint(8)[100] 0))
      (1020352 call =[435386] call_tmp[1020341] coerce_tmp[1020865])
    }
    {
      ref tmp[1020356]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (1020358 'move' tmp[1020356](1020361 call isOwned[758009] lhs[1019929]))
      val tmp[1020377]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1020379]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1020381]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1020878]:bool[10] "dead after last mention" "const" "temp"
      (1020880 'move' tmp[1020878](1020882 'deref' tmp[1020356]))
      (1020383 'move' call_tmp[1020381] tmp[1020878])
      (1020388 'move' tmp[1020379] call_tmp[1020381])
      if tmp[1020379]
      {
        const-val tmp[1020395]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1020397]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020399 'move' call_tmp[1020397](1020405 call isEmpty[35064] lhs[1019929]))
        const-val call_tmp[1020406]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1020408 'move' call_tmp[1020406](1020411 call ![7494] call_tmp[1020397]))
        (1020413 'move' tmp[1020395] call_tmp[1020406])
        (1020418 'move' tmp[1020377] tmp[1020395])
      }
      {
        (1020424 'move' tmp[1020377] 0)
      }
      const-val call_tmp[1020430]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1020432 'move' call_tmp[1020430] tmp[1020377])
      if call_tmp[1020430]
      {
        ref call_tmp[1020439]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1020441 'move' call_tmp[1020439](1020444 call buff[757983] lhs[1019929]))
        val coerce_tmp[1020887]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020891 'move' coerce_tmp[1020887](1020889 'deref' call_tmp[1020439]))
        (1020448 call bufferFree[172958] coerce_tmp[1020887])
      }
      ref call_tmp[1020451]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1020453 'move' call_tmp[1020451](1020456 call buffSize[757931] lhs[1019929]))
      (1020460 call =[435365] call_tmp[1020451] 0)
      ref call_tmp[1020464]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (1020466 'move' call_tmp[1020464](1020469 call buff[757983] lhs[1019929]))
      (1020473 call =[954243] call_tmp[1020464] nil[44])
    }
    ref call_tmp[1020477]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1020479 'move' call_tmp[1020477](1020482 call buffLen[757905] lhs[1019929]))
    (1020486 call =[435365] call_tmp[1020477] buffLen[1019935])
    val call_tmp[1020490]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1020513]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1020515 'move' call_tmp[1020513](1020518 call cachedNumCodepoints[757957] lhs[1019929]))
      (1020522 call =[435365] call_tmp[1020513] numCodepoints[1019941])
    }
    label _end_reinitWithNewBuffer[1020526]
    (1020528 return _void[55])
  }
  function reinitWithOwnedBuffer[1020974](ref arg lhs[1020976]:_ref(string)[937958], const in arg buff[1020980]:c_ptr(uint(8))[937442], const in arg buffLen[1020982]:int(64)[13], const in arg buffSize[1020984]:int(64)[13], const in arg numCodepoints[1020988]:int(64)[13]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1020994]:bool[10] "dead after last mention" "maybe param" "temp"
    (1020996 'move' tmp[1020994](1021002 call isEmpty[35064] lhs[1020976]))
    val tmp[1021016]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
    const-val tmp[1021018]:bool[10] "dead after last mention" "maybe param" "temp"
    const-val call_tmp[1021020]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021022 'move' call_tmp[1021020] tmp[1020994])
    (1021027 'move' tmp[1021018] call_tmp[1021020])
    if tmp[1021018]
    {
      const-val tmp[1021034]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
      const-val call_tmp[1021036]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021038 'move' call_tmp[1021036](1021041 call ==[1020564] buff[1020980] nil[44]))
      (1021044 'move' tmp[1021034] call_tmp[1021036])
      (1021049 'move' tmp[1021016] tmp[1021034])
    }
    {
      (1021055 'move' tmp[1021016] 0)
    }
    const-val call_tmp[1021061]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021063 'move' call_tmp[1021061] tmp[1021016])
    if call_tmp[1021061]
    {
      gotoReturn _end_reinitWithOwnedBuffer[1021394] _end_reinitWithOwnedBuffer[1021394]
    }
    const-val call_tmp[1021073]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021075 'move' call_tmp[1021073](1021078 call !=[436050] buffLen[1020982] 0))
    const-val call_tmp[1021081]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1021083 'move' call_tmp[1021081] call_tmp[1021073])
    if call_tmp[1021081]
    {
      ref tmp[1021090]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (1021092 'move' tmp[1021090](1021095 call isOwned[758009] lhs[1020976]))
      val tmp[1021111]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021113]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021115]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021415]:bool[10] "dead after last mention" "const" "temp"
      (1021417 'move' tmp[1021415](1021419 'deref' tmp[1021090]))
      (1021117 'move' call_tmp[1021115] tmp[1021415])
      (1021122 'move' tmp[1021113] call_tmp[1021115])
      if tmp[1021113]
      {
        const-val tmp[1021129]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021131]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021133 'move' call_tmp[1021131](1021139 call isEmpty[35064] lhs[1020976]))
        const-val call_tmp[1021140]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021142 'move' call_tmp[1021140](1021145 call ![7494] call_tmp[1021131]))
        (1021147 'move' tmp[1021129] call_tmp[1021140])
        (1021152 'move' tmp[1021111] tmp[1021129])
      }
      {
        (1021158 'move' tmp[1021111] 0)
      }
      const-val call_tmp[1021164]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021166 'move' call_tmp[1021164] tmp[1021111])
      if call_tmp[1021164]
      {
        ref call_tmp[1021173]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1021175 'move' call_tmp[1021173](1021178 call buff[757983] lhs[1020976]))
        val coerce_tmp[1021424]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021428 'move' coerce_tmp[1021424](1021426 'deref' call_tmp[1021173]))
        (1021182 call bufferFree[172958] coerce_tmp[1021424])
      }
      ref call_tmp[1021185]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (1021187 'move' call_tmp[1021185](1021190 call buff[757983] lhs[1020976]))
      (1021194 call =[954232] call_tmp[1021185] buff[1020980])
      ref call_tmp[1021198]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1021200 'move' call_tmp[1021198](1021203 call buffSize[757931] lhs[1020976]))
      (1021207 call =[435365] call_tmp[1021198] buffSize[1020984])
    }
    {
      ref tmp[1021211]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
      (1021213 'move' tmp[1021211](1021216 call isOwned[758009] lhs[1020976]))
      val tmp[1021232]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
      const-val tmp[1021234]:bool[10] "dead after last mention" "maybe param" "temp"
      const-val call_tmp[1021236]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val tmp[1021439]:bool[10] "dead after last mention" "const" "temp"
      (1021441 'move' tmp[1021439](1021443 'deref' tmp[1021211]))
      (1021238 'move' call_tmp[1021236] tmp[1021439])
      (1021243 'move' tmp[1021234] call_tmp[1021236])
      if tmp[1021234]
      {
        const-val tmp[1021250]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1021252]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021254 'move' call_tmp[1021252](1021260 call isEmpty[35064] lhs[1020976]))
        const-val call_tmp[1021261]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1021263 'move' call_tmp[1021261](1021266 call ![7494] call_tmp[1021252]))
        (1021268 'move' tmp[1021250] call_tmp[1021261])
        (1021273 'move' tmp[1021232] tmp[1021250])
      }
      {
        (1021279 'move' tmp[1021232] 0)
      }
      const-val call_tmp[1021285]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1021287 'move' call_tmp[1021285] tmp[1021232])
      if call_tmp[1021285]
      {
        ref call_tmp[1021294]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
        (1021296 'move' call_tmp[1021294](1021299 call buff[757983] lhs[1020976]))
        val coerce_tmp[1021448]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021452 'move' coerce_tmp[1021448](1021450 'deref' call_tmp[1021294]))
        (1021303 call bufferFree[172958] coerce_tmp[1021448])
      }
      ref call_tmp[1021306]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (1021308 'move' call_tmp[1021306](1021311 call buff[757983] lhs[1020976]))
      (1021315 call =[954232] call_tmp[1021306] buff[1020980])
      ref call_tmp[1021319]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1021321 'move' call_tmp[1021319](1021324 call buffSize[757931] lhs[1020976]))
      (1021328 call =[435365] call_tmp[1021319] 0)
    }
    ref call_tmp[1021332]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
    (1021334 'move' call_tmp[1021332](1021337 call isOwned[758009] lhs[1020976]))
    (1021341 call =[435212] call_tmp[1021332] 1)
    ref call_tmp[1021345]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
    (1021347 'move' call_tmp[1021345](1021350 call buffLen[757905] lhs[1020976]))
    (1021354 call =[435365] call_tmp[1021345] buffLen[1020982])
    val call_tmp[1021358]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[1021381]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (1021383 'move' call_tmp[1021381](1021386 call cachedNumCodepoints[757957] lhs[1020976]))
      (1021390 call =[435365] call_tmp[1021381] numCodepoints[1020988])
    }
    label _end_reinitWithOwnedBuffer[1021394]
    (1021396 return _void[55])
  }
  function doAssign[1019187](ref arg lhs[1019189]:_ref(string)[937958], const  ref arg rhs[1019194]:string[26]) : void[4] "instantiated generic" "invisible fn" "resolved" "fn synchronization free" "no return value for void"
  {
    val call_tmp[1019200]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val tmp[1019562]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019586]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019588]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
    (1019590 'move' call_tmp[1019588](1019593 call locale_id[758061] lhs[1019189]))
    const-val call_tmp[1019596]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019749]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019753 'move' coerce_tmp[1019749](1019751 'deref' call_tmp[1019588]))
    (1019598 'move' call_tmp[1019596](1019601 call ==[435644] coerce_tmp[1019749] chpl_nodeID[208207]))
    (1019604 'move' tmp[1019586] call_tmp[1019596])
    (1019609 'move' tmp[1019562] tmp[1019586])
    const-val call_tmp[1019615]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019617 'move' call_tmp[1019615] tmp[1019562])
    if call_tmp[1019615]
    {
      (1019625 call helpMe[1019211] lhs[1019189] rhs[1019194])
    }
    {
      const-val tmp[1019629]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
      ref call_tmp[1019631]:_ref(int(32))[936645] "dead after last mention" "maybe param" "temp"
      (1019633 'move' call_tmp[1019631](1019636 call locale_id[758061] lhs[1019189]))
      const-val call_tmp[1019639]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val coerce_tmp[1021473]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1021477 'move' coerce_tmp[1021473](1021475 'deref' call_tmp[1019631]))
      (1019641 'move' call_tmp[1019639](1019644 call chpl_buildLocaleID[209470] coerce_tmp[1021473] c_sublocid_any[89878]))
      const-val call_tmp[1019647]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019649 'move' call_tmp[1019647](1019651 'chpl_on_locale_num' call_tmp[1019639]))
      (1019653 'move' tmp[1019629] call_tmp[1019647])
      val isdirect[2053522]:bool[10] "temp"
      (2053527 'move' isdirect[2053522](2053524 call chpl_doDirectExecuteOn[187469] tmp[1019629]))
      if isdirect[2053522]
      {
        (2053531 call on_fn[1019660] lhs[1019189] rhs[1019194])
      }
      {
        val _args_foron_fn[2053549]:_class_localson_fn[2053539] "temp"
        (2053553 'move' _args_foron_fn[2053549](2053551 'stack allocate class' _class_localson_fn[2053539]))
        (2053555 '.=' _args_foron_fn[2053549] _0_tmp[2053542] tmp[1019629])
        ref tmp[2053559]:string[26] "temp"
        (2053563 'move' tmp[2053559](2053561 'set reference' lhs[1019189]))
        (2053565 '.=' _args_foron_fn[2053549] _1_lhs[2053544] tmp[2053559])
        ref tmp[2053569]:string[26] "temp"
        (2053573 'move' tmp[2053569](2053571 'set reference' rhs[1019194]))
        (2053575 '.=' _args_foron_fn[2053549] _2_rhs[2053546] tmp[2053569])
        val _args_vforon_fn[2053579]:c_void_ptr[149] "temp"
        (2053583 'move' _args_vforon_fn[2053579](2053581 'cast_to_void_star' _args_foron_fn[2053549]))
        val _args_sizeon_fn[2053585]:int(64)[13] "temp"
        (2053589 'move' _args_sizeon_fn[2053585](2053587 'sizeof_bundle' _class_localson_fn[2053539]))
        on(2053629 call wrapon_fn[2053591] tmp[1019629] _args_vforon_fn[2053579] _args_sizeon_fn[2053585] _args_foron_fn[2053549])
      }
      {
      }
    }
    (1019675 return _void[55])
  }
  function doConcat[980882](const  ref arg s0[980884]:string[26], const  ref arg s1[980889]:string[26], ref arg _retArg[1805500]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[980894]:string[26] "dead after last mention" "RVV" "temp"
    val call_tmp[980902]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[980913]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980915 'move' call_tmp[980913](980918 call buffLen[757905] s0[980884]))
    const-val s0len[980921]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981331]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981335 'move' coerce_tmp[981331](981333 'deref' call_tmp[980913]))
    (1815856 '=' s0len[980921] coerce_tmp[981331])
    (980923 'noop')
    const-val call_tmp[980927]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980929 'move' call_tmp[980927](980932 call ==[435666] s0len[980921] 0))
    const-val call_tmp[980935]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980937 'move' call_tmp[980935] call_tmp[980927])
    if call_tmp[980935]
    {
      val call_tmp[980944]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      const-val call_tmp[980950]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val _formal_tmp_in_x[981360]:string[26] "dead after last mention" "expr temp" "no auto destroy" "temp"
      (981364 'move' _formal_tmp_in_x[981360](981361 call chpl__initCopy[981367] s1[980889]))
      const-val ret_tmp[1805508]:string[26] "temp"
      (981339 call _removed_cast[981342] _formal_tmp_in_x[981360] ret_tmp[1805508])
      (1805511 'move' call_tmp[980950] ret_tmp[1805508])
      val call_tmp[980958]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981600 'move' ret[980894] call_tmp[980950])
      gotoReturn _end_doConcat[981258] _end_doConcat[981258]
    }
    ref call_tmp[980972]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (980974 'move' call_tmp[980972](980977 call buffLen[757905] s1[980889]))
    const-val s1len[980980]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    const-val coerce_tmp[981416]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981420 'move' coerce_tmp[981416](981418 'deref' call_tmp[980972]))
    (1815859 '=' s1len[980980] coerce_tmp[981416])
    (980982 'noop')
    const-val call_tmp[980986]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980988 'move' call_tmp[980986](980991 call ==[435666] s1len[980980] 0))
    const-val call_tmp[980994]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (980996 'move' call_tmp[980994] call_tmp[980986])
    if call_tmp[980994]
    {
      val call_tmp[981003]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (981603 'move' ret[980894](1805504 call chpl__initCopy[981367] s0[980884]))
      gotoReturn _end_doConcat[981258] _end_doConcat[981258]
    }
    const-val call_tmp[981017]:int(64)[13] "dead at end of block" "maybe param" "temp"
    (981019 'move' call_tmp[981017](981022 call +[439674] s0len[980921] s1len[980980]))
    const-val buffLen[981025]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
    (981027 'move' buffLen[981025] call_tmp[981017])
    const-val call_tmp[981031]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
    (981033 'move' call_tmp[981031](981036 call +[949685] buffLen[981025]))
    const-val call_tmp[981039]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1805310]:(c_ptr(uint(8)),int(64))[955227] "temp"
    (981044 call bufferAlloc[955037] call_tmp[981031] ret_tmp[1805310])
    (1805313 'move' call_tmp[981039] ret_tmp[1805310])
    const-val tmp[981046]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
    (981048 'move' tmp[981046] call_tmp[981039])
    1
    ref call_tmp[981056]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
    (981058 'move' call_tmp[981056](981434 '.' tmp[981046] x0[955223]))
    val buff[981063]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
    val coerce_tmp[981439]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981443 'move' coerce_tmp[981439](981441 'deref' call_tmp[981056]))
    (1815862 '=' buff[981063] coerce_tmp[981439])
    (981065 'noop')
    ref call_tmp[981068]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
    (981070 'move' call_tmp[981068](981448 '.' tmp[981046] x1[955225]))
    const-val buffSize[981075]:int(64)[13] "dead at end of block" "insert auto destroy"
    const-val coerce_tmp[981453]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
    (981457 'move' coerce_tmp[981453](981455 'deref' call_tmp[981068]))
    (1815865 '=' buffSize[981075] coerce_tmp[981453])
    (981077 'noop')
    ref call_tmp[981081]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981083 'move' call_tmp[981081](981086 call locale_id[758061] s0[980884]))
    ref call_tmp[981089]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981091 'move' call_tmp[981089](981094 call buff[757983] s0[980884]))
    const-val coerce_tmp[981468]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981472 'move' coerce_tmp[981468](981470 'deref' call_tmp[981081]))
    const-val coerce_tmp[981474]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981480 'move' coerce_tmp[981474](981476 'cast' int(64)[13] coerce_tmp[981468]))
    val coerce_tmp[981482]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981486 'move' coerce_tmp[981482](981484 'deref' call_tmp[981089]))
    (981098 call bufferMemcpy[173042] buff[981063] coerce_tmp[981474] coerce_tmp[981482] s0len[980921] 0 0)
    ref call_tmp[981110]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981112 'move' call_tmp[981110](981115 call locale_id[758061] s1[980889]))
    ref call_tmp[981118]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (981120 'move' call_tmp[981118](981123 call buff[757983] s1[980889]))
    const-val coerce_tmp[981533]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981537 'move' coerce_tmp[981533](981535 'deref' call_tmp[981110]))
    const-val coerce_tmp[981539]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981545 'move' coerce_tmp[981539](981541 'cast' int(64)[13] coerce_tmp[981533]))
    val coerce_tmp[981547]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981551 'move' coerce_tmp[981547](981549 'deref' call_tmp[981118]))
    (981127 call bufferMemcpy[173042] buff[981063] coerce_tmp[981539] coerce_tmp[981547] s1len[980980] s0len[980921] 0)
    ref call_tmp[981142]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
    (981144 'move' call_tmp[981142](981147 call this[954110] buff[981063] buffLen[981025]))
    const-val coerce_tmp[981566]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (981572 'move' coerce_tmp[981566](981568 'cast' uint(8)[100] 0))
    (981150 call =[435386] call_tmp[981142] coerce_tmp[981566])
    val ret[981156]:string[26] "dead at end of block" "insert auto destroy"
    val call_tmp[981158]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981608 call init[30763] ret[981156])
    val call_tmp[981170]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      ref call_tmp[981193]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (981195 'move' call_tmp[981193](981198 call cachedNumCodepoints[757957] ret[981156]))
      ref call_tmp[981201]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981203 'move' call_tmp[981201](981206 call cachedNumCodepoints[757957] s0[980884]))
      ref call_tmp[981209]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (981211 'move' call_tmp[981209](981214 call cachedNumCodepoints[757957] s1[980889]))
      const-val call_tmp[981217]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[981584]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981588 'move' coerce_tmp[981584](981586 'deref' call_tmp[981201]))
      const-val coerce_tmp[981590]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (981594 'move' coerce_tmp[981590](981592 'deref' call_tmp[981209]))
      (981219 'move' call_tmp[981217](981222 call +[439674] coerce_tmp[981584] coerce_tmp[981590]))
      (981226 call =[435365] call_tmp[981193] call_tmp[981217])
    }
    (981233 call initWithOwnedBuffer[978914] ret[981156] buff[981063] buffLen[981025] buffSize[981075])
    val call_tmp[981243]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (981606 'move' ret[980894] ret[981156])
    (1815868 call chpl__autoDestroy[1438961] tmp[981046])
    gotoReturn _end_doConcat[981258] _end_doConcat[981258]
    label _end_doConcat[981258]
    (1805502 '=' _retArg[1805500] ret[980894])
    (1805506 return _void[55])
  }
  function doStripNoEnc[1107653](const  ref arg x[1107655]:_ref(string)[937958], const  ref arg chars[1107660]:string[26], const in arg leading[1107662]:bool[10], const in arg trailing[1107664]:bool[10], ref arg _retArg[1807111]:_ref(string)[937958]) : void[4] "fn returns via _retArg" "instantiated generic" "invisible fn" "resolved"
  {
    val ret[1107669]:string[26] "dead after last mention" "RVV" "temp"
    const-val call_tmp[1107677]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107679 'move' call_tmp[1107677](1107685 call isEmpty[35064] x[1107655]))
    const-val call_tmp[1107686]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107688 'move' call_tmp[1107686] call_tmp[1107677])
    if call_tmp[1107686]
    {
      val call_tmp[1107699]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      val call_tmp[1107732]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1107738 'move' ret[1107669](1807115 call chpl__initCopy[981367] ""))
      gotoReturn _end_doStripNoEnc[1108246] _end_doStripNoEnc[1108246]
    }
    const-val call_tmp[1107746]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107748 'move' call_tmp[1107746](1107754 call isEmpty[35064] chars[1107660]))
    const-val call_tmp[1107755]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107757 'move' call_tmp[1107755] call_tmp[1107746])
    if call_tmp[1107755]
    {
      val call_tmp[1107764]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      (1121992 'move' ret[1107669](1121990 call chpl__autoCopy[1121994] x[1107655]))
      gotoReturn _end_doStripNoEnc[1108246] _end_doStripNoEnc[1108246]
    }
    const-val call_tmp[1107778]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802906]:string[26] "temp"
    (1107786 call localize[32889] x[1107655] ret_tmp[1802906])
    (1802909 'move' call_tmp[1107778] ret_tmp[1802906])
    val call_tmp[1107787]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const localX[1107793]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107795 'move' localX[1107793] call_tmp[1107778])
    const-val call_tmp[1107800]:string[26] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1802912]:string[26] "temp"
    (1107808 call localize[32889] chars[1107660] ret_tmp[1802912])
    (1802915 'move' call_tmp[1107800] ret_tmp[1802912])
    val call_tmp[1107809]:string[26] "dead after last mention" "maybe param" "temp" "type variable"
    const-val localChars[1107815]:string[26] "dead at end of block" "const" "insert auto destroy"
    (1107817 'move' localChars[1107815] call_tmp[1107800])
    val start[1107822]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107824 'move' start[1107822] 0)
    ref call_tmp[1107829]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
    (1107831 'move' call_tmp[1107829](1107834 call buffLen[757905] localX[1107793]))
    const-val call_tmp[1107837]:int(64)[13] "dead at end of block" "maybe param" "temp"
    const-val coerce_tmp[1108261]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
    (1108265 'move' coerce_tmp[1108261](1108263 'deref' call_tmp[1107829]))
    (1107839 'move' call_tmp[1107837](1107842 call -[962245] coerce_tmp[1108261]))
    val end[1107845]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1107847 'move' end[1107845] call_tmp[1107837])
    const-val call_tmp[1107853]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1107855 'move' call_tmp[1107853] leading[1107662])
    if call_tmp[1107853]
    {
      {
        const-val _iterator[1107865]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1107867]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1802786]:range(int(64),bounded,false)[1026833] "temp"
        (1107872 call indices[32788] x[1107655] ret_tmp[1802786])
        (1802789 'move' call_tmp[1107867] ret_tmp[1802786])
        val call_tmp[1107875]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107877 'move' call_tmp[1107875](1107880 call _getIterator[1095339] call_tmp[1107867]))
        const-val call_tmp[1107882]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1802996]:_ir_chpl_bytes__ref_string[1108281] "temp"
        (1107890 call chpl_bytes[33577] localX[1107793] ret_tmp[1802996])
        (1802999 'move' call_tmp[1107882] ret_tmp[1802996])
        val call_tmp[1107891]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
        (1107893 'move' call_tmp[1107891](1107896 call _getIterator[1108290] call_tmp[1107882]))
        const-val ret_tmp[1807125]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
        (1107901 call _build_tuple[1108543] call_tmp[1107875] call_tmp[1107891] ret_tmp[1807125])
        (1807128 'move' _iterator[1107865] ret_tmp[1807125])
        val _iterator[1881480]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
        (1881486 'move' _iterator[1881480](1881483 '.v' _iterator[1107865] x0[1108581]))
        val _iterator[1881493]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1881499 'move' _iterator[1881493](1881496 '.v' _iterator[1107865] x1[1108583]))
        {
          (1881508 call zip1[1096757] _iterator[1881480])
        }
        {
          (1881543 call zip1[1108310] _iterator[1881493])
        }
        const-val isFinished[1881569]:bool[10] "temp"
        val hasMore[1881568]:bool[10] "temp"
        CForLoop[1881616]
        {
          val _indexOfInterest[1881617]:(int(64),uint(8))[1111059] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1881621 call zip2[1108319] _iterator[1881493])
          }
          {
            const-val retTmp[1881624]:int(64)[13] "temp"
            (1881626 'move' retTmp[1881624](1881629 call hasMore[1108346] _iterator[1881493]))
            (1881631 'move' hasMore[1881568](1881633 'cast' bool[10] retTmp[1881624]))
          }
          (1881636 'move' isFinished[1881569](1881638 '!' hasMore[1881568]))
          if isFinished[1881569]
          {
            (1881642 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1881646 'move' _index[1881661](1881649 call getValue[1108355] _iterator[1881493]))
          }
          {
            (1881653 call zip2[1096766] _iterator[1881480])
          }
          {
            (1881656 'move' _index[1881667](1881659 call getValue[1096802] _iterator[1881480]))
          }
          val _index[1881661]:uint(8)[100] "temp"
          (1881663 '.=' _indexOfInterest[1881617] x1[1111057] _index[1881661])
          val _index[1881667]:int(64)[13] "temp"
          (1881669 '.=' _indexOfInterest[1881617] x0[1111055] _index[1881667])
          1
          const-val i[1881674]:int(64)[13] "const" "index var" "insert auto destroy"
          (1881676 'move' i[1881674](1881678 '.v' _indexOfInterest[1881617] x0[1111055]))
          const-val xChar[1881681]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1881683 'move' xChar[1881681](1881685 '.v' _indexOfInterest[1881617] x1[1111057]))
          {
            {
              val _indexOfInterest[1881690]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1881692]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1881694]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1881696]:_ir_chpl_bytes__ref_string[1108281] "temp"
              (1881699 call chpl_bytes[33577] localChars[1107815] ret_tmp[1881696])
              (1881702 'move' call_tmp[1881694] ret_tmp[1881696])
              (1881705 'move' _iterator[1881692](1881708 call _getIterator[1108290] call_tmp[1881694]))
              {
                val ret[1939624]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1939626]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1939628]:string[26] "temp"
                ref this[1940252]:_ref(string)[937958] "temp"
                (1940257 'move' this[1940252](1940254 '.v' _iterator[1881692] F0_this[1964922]))
                (1939631 call localize[32889] this[1940252] ret_tmp[1939628])
                (1939634 'move' call_tmp[1939626] ret_tmp[1939628])
                val localThis[1939637]:string[26] "dead at end of block" "insert auto destroy"
                (1939639 'move' localThis[1939637] call_tmp[1939626])
                val _indexOfInterest[1939642]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1939644]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1939646]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                (1939648 'move' call_tmp[1939646](1939651 call buffLen[757905] localThis[1939637]))
                const-val call_tmp[1939653]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1939655]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1939657 'move' coerce_tmp[1939655](1939659 'deref' call_tmp[1939646]))
                const-val ret_tmp[1939661]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                (1939664 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1939655] ret_tmp[1939661])
                (1939668 'move' call_tmp[1939653] ret_tmp[1939661])
                (1939671 'move' _iterator[1939644](1939674 call _getIterator[1103824] call_tmp[1939653]))
                val ret[1939676]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1939678]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1939680]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1939682]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1939684]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                const-val low[1939686]:int(64)[13] "temp"
                (1939688 'move' low[1939686](1939690 '.v' _iterator[1939644] F0_low[1976900]))
                const-val count[1939693]:int(64)[13] "temp"
                (1939695 'move' count[1939693](1939697 '.v' _iterator[1939644] F1_count[1976904]))
                (1939701 call chpl_direct_counted_range_iter_helper[1102117] low[1939686] count[1939693] ret_tmp[1939684])
                (1939705 'move' call_tmp[1939682] ret_tmp[1939684])
                (1939708 'move' _iterator[1939680](1939711 call _getIterator[1103574] call_tmp[1939682]))
                val ret[1939713]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                val call_tmp[1939715]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1939717]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1939719]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1939721]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1939723]:int(64)[13] "temp"
                (1939725 'move' count[1939723](1939727 '.v' _iterator[1939680] F1_count[1981376]))
                (1939730 'move' call_tmp[1939721](1939733 call <[948417] count[1939723]))
                (1939735 'move' tmp[1939719] call_tmp[1939721])
                (1939738 'move' tmp[1939717] call_tmp[1939721])
                const-val call_tmp[1939741]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1939743 'move' call_tmp[1939741] call_tmp[1939721])
                if call_tmp[1939721]
                {
                  (1939749 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1939752]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1939754]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1939756]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1939758]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1939760]:int(64)[13] "temp"
                (1939762 'move' count[1939760](1939764 '.v' _iterator[1939680] F1_count[1981376]))
                (1939767 'move' call_tmp[1939758](1939770 call ==[435666] count[1939760] 0))
                (1939773 'move' tmp[1939756] call_tmp[1939758])
                if call_tmp[1939758]
                {
                  const-val tmp[1939778]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1939780]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1939782]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1939784]:int(64)[13] "temp"
                  (1939786 'move' low[1939784](1939788 '.v' _iterator[1939680] F0_low[1981372]))
                  (1939791 'move' call_tmp[1939782](1939794 call _cast[956053] low[1939784]))
                  const-val call_tmp[1939796]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1939798]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1939800 'move' coerce_tmp[1939798](1939802 'cast' uint(64)[115] 1))
                  (1939805 'move' call_tmp[1939796](1939808 call -[962212] call_tmp[1939782]))
                  const-val call_tmp[1939810]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1939812 'move' call_tmp[1939810](1939815 call _cast[953562] call_tmp[1939796]))
                  const-val ret_tmp[1939817]:2*int(64)[1040075] "temp"
                  const-val low[1939819]:int(64)[13] "temp"
                  (1939821 'move' low[1939819](1939823 '.v' _iterator[1939680] F0_low[1981372]))
                  (1939827 call _build_tuple[1040033] low[1939819] call_tmp[1939810] ret_tmp[1939817])
                  (1939831 'move' tmp[1939778] ret_tmp[1939817])
                  (1939834 'move' tmp[1939754] tmp[1939778])
                }
                {
                  const-val tmp[1939838]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1939840]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1939842]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1939844]:int(64)[13] "temp"
                  (1939846 'move' count[1939844](1939848 '.v' _iterator[1939680] F1_count[1981376]))
                  (1939851 'move' call_tmp[1939842] count[1939844])
                  const-val call_tmp[1939854]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1939856]:int(64)[13] "temp"
                  (1939858 'move' count[1939856](1939860 '.v' _iterator[1939680] F1_count[1981376]))
                  (1939863 'move' call_tmp[1939854](1939866 call -[962245] count[1939856]))
                  const-val call_tmp[1939868]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1939870]:int(64)[13] "temp"
                  (1939872 'move' low[1939870](1939874 '.v' _iterator[1939680] F0_low[1981372]))
                  (1939877 'move' call_tmp[1939868](1939880 call +[439674] low[1939870] call_tmp[1939854]))
                  const-val ret_tmp[1939883]:2*int(64)[1040075] "temp"
                  const-val low[1939885]:int(64)[13] "temp"
                  (1939887 'move' low[1939885](1939889 '.v' _iterator[1939680] F0_low[1981372]))
                  (1939893 call _build_tuple[1040033] low[1939885] call_tmp[1939868] ret_tmp[1939883])
                  (1939897 'move' tmp[1939838] ret_tmp[1939883])
                  (1939900 'move' tmp[1939754] tmp[1939838])
                }
                (1939904 '=' tmp[1939752] tmp[1939754])
                (1939907 'noop')
                1
                ref call_tmp[1939909]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1939911 'move' call_tmp[1939909](1939913 '.' tmp[1939752] x0[1040071]))
                const-val start[1939916]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1939918]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1939920 'move' coerce_tmp[1939918](1939922 'deref' call_tmp[1939909]))
                (1939924 '=' start[1939916] coerce_tmp[1939918])
                (1939927 'noop')
                ref call_tmp[1939928]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1939930 'move' call_tmp[1939928](1939932 '.' tmp[1939752] x1[1040073]))
                const-val end[1939935]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1939937]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1939939 'move' coerce_tmp[1939937](1939941 'deref' call_tmp[1939928]))
                (1939943 '=' end[1939935] coerce_tmp[1939937])
                (1939946 'noop')
                val _indexOfInterest[1939947]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1939949]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1939951]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1939953]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                (1939956 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1939918] coerce_tmp[1939937] ret_tmp[1939953])
                (1939960 'move' call_tmp[1939951] ret_tmp[1939953])
                (1939963 'move' _iterator[1939949](1939966 call _getIterator[1103320] call_tmp[1939951]))
                val ret[1939968]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                val call_tmp[1939970]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1939973 call chpl_range_check_stride[1102863])
                val i[1939974]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1939976]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1939978 'move' i[1939974] 0)
                val call_tmp[1939981]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1939983]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1939985]:int(64)[13] "temp"
                (1939987 'move' low[1939985](1939989 '.v' _iterator[1939949] F0_low[1982870]))
                (1939992 'move' default_arg_first[1939983](1939995 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1939985]))
                const-val default_arg_last[1939997]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1939999]:int(64)[13] "temp"
                (1940001 'move' high[1939999](1940003 '.v' _iterator[1939949] F1_high[1982874]))
                (1940006 'move' default_arg_last[1939997](1940009 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1939999]))
                const-val _return_tmp_[1940011]:bool[10] "dead after last mention" "temp"
                const-val low[1940013]:int(64)[13] "temp"
                (1940015 'move' low[1940013](1940017 '.v' _iterator[1939949] F0_low[1982870]))
                const-val high[1940020]:int(64)[13] "temp"
                (1940022 'move' high[1940020](1940024 '.v' _iterator[1939949] F1_high[1982874]))
                (1940027 'move' _return_tmp_[1940011](1940030 call chpl_checkIfRangeIterWillOverflow[1096095] low[1940013] high[1940020] 1 default_arg_first[1939983] default_arg_last[1939997] 1))
                CForLoop[1940037]
                {
                  const-val yret[1940066]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940068 'move' yret[1940066] i[1939974])
                  const-val _yieldedIndex[1940071]:int(64)[13] "temp"
                  (1940073 'move' _yieldedIndex[1940071] i[1939974])
                  const-val i[1940076]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940078 'move' i[1940076] _yieldedIndex[1940071])
                  const-val yret[1940081]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940083 'move' yret[1940081] _yieldedIndex[1940071])
                  const-val _yieldedIndex[1940086]:int(64)[13] "temp"
                  (1940088 'move' _yieldedIndex[1940086] _yieldedIndex[1940071])
                  const-val i[1940091]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940093 'move' i[1940091] _yieldedIndex[1940086])
                  const-val yret[1940096]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940098 'move' yret[1940096] _yieldedIndex[1940086])
                  const-val _yieldedIndex[1940101]:int(64)[13] "temp"
                  (1940103 'move' _yieldedIndex[1940101] _yieldedIndex[1940086])
                  const-val i[1940106]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940108 'move' i[1940106] _yieldedIndex[1940101])
                  const-val yret[1940111]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1940113]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1940115]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1940117 'move' _this_tmp_[1940115](1940120 call buff[757983] localThis[1939637]))
                  val coerce_tmp[1940122]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1940124 'move' coerce_tmp[1940122](1940126 'deref' _this_tmp_[1940115]))
                  (1940128 'move' call_tmp[1940113](1940131 call this[954110] coerce_tmp[1940122] _yieldedIndex[1940101]))
                  const-val coerce_tmp[1940134]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1940136 'move' coerce_tmp[1940134](1940138 'deref' call_tmp[1940113]))
                  (1940140 '=' yret[1940111] coerce_tmp[1940134])
                  (1940143 'noop')
                  const-val _yieldedIndex[1940191]:uint(8)[100] "temp"
                  (1940250 'move' _yieldedIndex[1940191] coerce_tmp[1940134])
                  {
                    const-val removeChar[1940193]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1940195 'move' removeChar[1940193] _yieldedIndex[1940191])
                    {
                      const-val call_tmp[1940199]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1940201 'move' call_tmp[1940199](1940204 call ==[435688] xChar[1881681] removeChar[1940193]))
                      const-val call_tmp[1940207]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1940209 'move' call_tmp[1940207] call_tmp[1940199])
                      if call_tmp[1940207]
                      {
                        const-val call_tmp[1940214]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1940216 'move' call_tmp[1940214](1940219 call +[949685] i[1881674]))
                        (1940222 call =[435365] start[1107822] call_tmp[1940214])
                        (1940235 call _freeIterator[1103493] _iterator[1939949])
                        (1940238 call chpl__autoDestroy[1508492] tmp[1939752])
                        (1940241 call _freeIterator[1103743] _iterator[1939680])
                        (1940244 call _freeIterator[1103993] _iterator[1939644])
                        (1940247 call chpl__autoDestroy[1435320] localThis[1939637])
                        (1940226 call _freeIterator[1109588] _iterator[1881692])
                        continue _continueLabel[1881760] _continueLabel[1881760]
                      }
                    }
                    label _continueLabel[1940231]
                  }
                  {
                    const-val low[1940039]:int(64)[13] "temp"
                    (1940041 'move' low[1940039](1940043 '.v' _iterator[1939949] F0_low[1982870]))
                    (1940046 '=' i[1939974] low[1940039])
                  }
                  {
                    const-val high[1940050]:int(64)[13] "temp"
                    (1940052 'move' high[1940050](1940054 '.v' _iterator[1939949] F1_high[1982874]))
                    (1940057 '<=' i[1939974] high[1940050])
                  }
                  {
                    val call_tmp[1940061]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1940063 '+=' i[1939974] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1940166]
                (1940169 call _freeIterator[1103493] _iterator[1939949])
                (1940172 call chpl__autoDestroy[1508492] tmp[1939752])
                label _endchpl_direct_counted_range_iter_helper[1940174]
                (1940177 call _freeIterator[1103743] _iterator[1939680])
                label _endchpl_direct_counted_range_iter[1940179]
                (1940182 call _freeIterator[1103993] _iterator[1939644])
                (1940185 call chpl__autoDestroy[1435320] localThis[1939637])
                label _endchpl_bytes[1940187]
              }
              label _breakLabel[1881753]
              (1881756 call _freeIterator[1109588] _iterator[1881692])
            }
            ref moreRef1[1881820]:_ref(int(64))[936591] "temp"
            (1881822 'move' moreRef1[1881820](1881824 '.' _iterator[1881480] more[1096725]))
            const-val moreVal1[1881827]:int(64)[13] "const" "temp"
            (1881829 '=' moreVal1[1881827] moreRef1[1881820])
            const-val moreValNeg1[1881832]:int(64)[13] "const" "temp"
            (1881834 'move' moreValNeg1[1881832](1881836 'u-' moreVal1[1881827]))
            (1881838 '=' moreRef1[1881820] moreValNeg1[1881832])
            (1881842 call advance[1096748] _iterator[1881480])
            ref moreRef2[1881844]:_ref(int(64))[936591] "temp"
            (1881846 'move' moreRef2[1881844](1881848 '.' _iterator[1881493] more[1108278]))
            const-val moreVal2[1881851]:int(64)[13] "const" "temp"
            (1881853 '=' moreVal2[1881851] moreRef2[1881844])
            const-val moreValNeg2[1881856]:int(64)[13] "const" "temp"
            (1881858 'move' moreValNeg2[1881856](1881860 'u-' moreVal2[1881851]))
            (1881862 '=' moreRef2[1881844] moreValNeg2[1881856])
            (1881866 call advance[1108301] _iterator[1881493])
            break _breakLabel[1108029] _breakLabel[1108029]
          }
          label _continueLabel[1881760]
          {
            (1881764 call zip3[1096775] _iterator[1881480])
          }
          {
            (1881768 call zip3[1108328] _iterator[1881493])
          }
          {
            {
              (1881518 call init[1096811] _iterator[1881480])
            }
            {
              (1881553 call init[1108364] _iterator[1881493])
            }
          }
          {
            (1881534 call hasMore[1096793] _iterator[1881480])
          }
          {
            {
              (1881522 call incr[1096820] _iterator[1881480])
            }
            {
              (1881557 call incr[1108373] _iterator[1881493])
            }
          }
        }
        {
          const-val retTmp[1881603]:int(64)[13] "temp"
          (1881605 'move' retTmp[1881603](1881600 call hasMore[1108346] _iterator[1881493]))
          (1881610 'move' hasMore[1881568](1881607 'cast' bool[10] retTmp[1881603]))
        }
        if hasMore[1881568]
        {
          (1881595 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1881565 call zip4[1108337] _iterator[1881493])
        }
        {
          (1881530 call zip4[1096784] _iterator[1881480])
        }
        label _breakLabel[1108029]
        (1817526 call _freeIterator[1108743] _iterator[1107865])
        (1817528 call chpl__autoDestroy[1515237] _iterator[1107865])
        (1817531 call chpl__autoDestroy[1508195] call_tmp[1107867])
      }
    }
    const-val call_tmp[1108032]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1108034 'move' call_tmp[1108032] trailing[1107664])
    if call_tmp[1108032]
    {
      (1108049 call =[435365] end[1107845] -1)
      {
        const-val _iterator[1108057]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "dead at end of block" "expr temp" "insert auto destroy" "temp"
        const-val call_tmp[1108059]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1802792]:range(int(64),bounded,false)[1026833] "temp"
        (1108064 call indices[32788] x[1107655] ret_tmp[1802792])
        (1802795 'move' call_tmp[1108059] ret_tmp[1802792])
        val call_tmp[1108067]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108069 'move' call_tmp[1108067](1108072 call _getIterator[1095339] call_tmp[1108059]))
        const-val call_tmp[1108074]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val ret_tmp[1803008]:_ir_chpl_bytes__ref_string[1108281] "temp"
        (1108082 call chpl_bytes[33577] localX[1107793] ret_tmp[1803008])
        (1803011 'move' call_tmp[1108074] ret_tmp[1803008])
        val call_tmp[1108083]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "maybe param" "temp"
        (1108085 'move' call_tmp[1108083](1108088 call _getIterator[1108290] call_tmp[1108074]))
        const-val ret_tmp[1807131]:(_ic_these_range_int64_t_bounded_F,_ic_chpl_bytes__ref_string)[1108585] "temp"
        (1108093 call _build_tuple[1108543] call_tmp[1108067] call_tmp[1108083] ret_tmp[1807131])
        (1807134 'move' _iterator[1108057] ret_tmp[1807131])
        val _iterator[1881870]:_ic_these_range_int64_t_bounded_F[1096722] "temp"
        (1881876 'move' _iterator[1881870](1881873 '.v' _iterator[1108057] x0[1108581]))
        val _iterator[1881883]:_ic_chpl_bytes__ref_string[1108275] "temp"
        (1881889 'move' _iterator[1881883](1881886 '.v' _iterator[1108057] x1[1108583]))
        {
          (1881898 call zip1[1096757] _iterator[1881870])
        }
        {
          (1881933 call zip1[1108310] _iterator[1881883])
        }
        const-val isFinished[1881959]:bool[10] "temp"
        val hasMore[1881958]:bool[10] "temp"
        CForLoop[1882006]
        {
          val _indexOfInterest[1882007]:(int(64),uint(8))[1111059] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          {
            (1882011 call zip2[1108319] _iterator[1881883])
          }
          {
            const-val retTmp[1882014]:int(64)[13] "temp"
            (1882016 'move' retTmp[1882014](1882019 call hasMore[1108346] _iterator[1881883]))
            (1882021 'move' hasMore[1881958](1882023 'cast' bool[10] retTmp[1882014]))
          }
          (1882026 'move' isFinished[1881959](1882028 '!' hasMore[1881958]))
          if isFinished[1881959]
          {
            (1882032 'chpl_error' c"zippered iterations have non-equal lengths")
          }
          {
            (1882036 'move' _index[1882051](1882039 call getValue[1108355] _iterator[1881883]))
          }
          {
            (1882043 call zip2[1096766] _iterator[1881870])
          }
          {
            (1882046 'move' _index[1882057](1882049 call getValue[1096802] _iterator[1881870]))
          }
          val _index[1882051]:uint(8)[100] "temp"
          (1882053 '.=' _indexOfInterest[1882007] x1[1111057] _index[1882051])
          val _index[1882057]:int(64)[13] "temp"
          (1882059 '.=' _indexOfInterest[1882007] x0[1111055] _index[1882057])
          1
          const-val i[1882064]:int(64)[13] "const" "index var" "insert auto destroy"
          (1882066 'move' i[1882064](1882068 '.v' _indexOfInterest[1882007] x0[1111055]))
          const-val xChar[1882071]:uint(8)[100] "const" "index var" "insert auto destroy"
          (1882073 'move' xChar[1882071](1882075 '.v' _indexOfInterest[1882007] x1[1111057]))
          {
            {
              val _indexOfInterest[1882080]:uint(8)[100] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
              val _iterator[1882082]:_ic_chpl_bytes__ref_string[1108275] "dead at end of block" "expr temp" "temp"
              const-val call_tmp[1882084]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "expr temp" "maybe param" "temp"
              const-val ret_tmp[1882086]:_ir_chpl_bytes__ref_string[1108281] "temp"
              (1882089 call chpl_bytes[33577] localChars[1107815] ret_tmp[1882086])
              (1882092 'move' call_tmp[1882084] ret_tmp[1882086])
              (1882095 'move' _iterator[1882082](1882098 call _getIterator[1108290] call_tmp[1882084]))
              {
                val ret[1940260]:_ir_chpl_bytes__ref_string[1108281] "dead at end of block" "RVV" "temp"
                const-val call_tmp[1940262]:string[26] "dead at end of block" "maybe param" "temp"
                const-val ret_tmp[1940264]:string[26] "temp"
                ref this[1940877]:_ref(string)[937958] "temp"
                (1940882 'move' this[1940877](1940879 '.v' _iterator[1882082] F0_this[1964922]))
                (1940267 call localize[32889] this[1940877] ret_tmp[1940264])
                (1940270 'move' call_tmp[1940262] ret_tmp[1940264])
                val localThis[1940273]:string[26] "dead at end of block" "insert auto destroy"
                (1940275 'move' localThis[1940273] call_tmp[1940262])
                val _indexOfInterest[1940278]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1940280]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                ref call_tmp[1940282]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
                (1940284 'move' call_tmp[1940282](1940287 call buffLen[757905] localThis[1940273]))
                const-val call_tmp[1940289]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1940291]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                (1940293 'move' coerce_tmp[1940291](1940295 'deref' call_tmp[1940282]))
                const-val ret_tmp[1940297]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                (1940300 call chpl_direct_counted_range_iter[458034] 0 coerce_tmp[1940291] ret_tmp[1940297])
                (1940304 'move' call_tmp[1940289] ret_tmp[1940297])
                (1940307 'move' _iterator[1940280](1940310 call _getIterator[1103824] call_tmp[1940289]))
                val ret[1940312]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                val _indexOfInterest[1940314]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1940316]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1940318]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1940320]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                const-val low[1940322]:int(64)[13] "temp"
                (1940324 'move' low[1940322](1940326 '.v' _iterator[1940280] F0_low[1976900]))
                const-val count[1940329]:int(64)[13] "temp"
                (1940331 'move' count[1940329](1940333 '.v' _iterator[1940280] F1_count[1976904]))
                (1940337 call chpl_direct_counted_range_iter_helper[1102117] low[1940322] count[1940329] ret_tmp[1940320])
                (1940341 'move' call_tmp[1940318] ret_tmp[1940320])
                (1940344 'move' _iterator[1940316](1940347 call _getIterator[1103574] call_tmp[1940318]))
                val ret[1940349]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                val call_tmp[1940351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val tmp[1940353]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                const-val tmp[1940355]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                const-val call_tmp[1940357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1940359]:int(64)[13] "temp"
                (1940361 'move' count[1940359](1940363 '.v' _iterator[1940316] F1_count[1981376]))
                (1940366 'move' call_tmp[1940357](1940369 call <[948417] count[1940359]))
                (1940371 'move' tmp[1940355] call_tmp[1940357])
                (1940374 'move' tmp[1940353] call_tmp[1940357])
                const-val call_tmp[1940377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (1940379 'move' call_tmp[1940377] call_tmp[1940357])
                if call_tmp[1940357]
                {
                  (1940385 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                }
                const-val tmp[1940388]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                val tmp[1940390]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                const-val tmp[1940392]:bool[10] "dead after last mention" "maybe param" "temp"
                const-val call_tmp[1940394]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val count[1940396]:int(64)[13] "temp"
                (1940398 'move' count[1940396](1940400 '.v' _iterator[1940316] F1_count[1981376]))
                (1940403 'move' call_tmp[1940394](1940406 call ==[435666] count[1940396] 0))
                (1940409 'move' tmp[1940392] call_tmp[1940394])
                if call_tmp[1940394]
                {
                  const-val tmp[1940414]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1940416]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1940418]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1940420]:int(64)[13] "temp"
                  (1940422 'move' low[1940420](1940424 '.v' _iterator[1940316] F0_low[1981372]))
                  (1940427 'move' call_tmp[1940418](1940430 call _cast[956053] low[1940420]))
                  const-val call_tmp[1940432]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val coerce_tmp[1940434]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                  (1940436 'move' coerce_tmp[1940434](1940438 'cast' uint(64)[115] 1))
                  (1940441 'move' call_tmp[1940432](1940444 call -[962212] call_tmp[1940418]))
                  const-val call_tmp[1940446]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  (1940448 'move' call_tmp[1940446](1940451 call _cast[953562] call_tmp[1940432]))
                  const-val ret_tmp[1940453]:2*int(64)[1040075] "temp"
                  const-val low[1940455]:int(64)[13] "temp"
                  (1940457 'move' low[1940455](1940459 '.v' _iterator[1940316] F0_low[1981372]))
                  (1940463 call _build_tuple[1040033] low[1940455] call_tmp[1940446] ret_tmp[1940453])
                  (1940467 'move' tmp[1940414] ret_tmp[1940453])
                  (1940470 'move' tmp[1940390] tmp[1940414])
                }
                {
                  const-val tmp[1940474]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                  val call_tmp[1940476]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                  const-val call_tmp[1940478]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1940480]:int(64)[13] "temp"
                  (1940482 'move' count[1940480](1940484 '.v' _iterator[1940316] F1_count[1981376]))
                  (1940487 'move' call_tmp[1940478] count[1940480])
                  const-val call_tmp[1940490]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val count[1940492]:int(64)[13] "temp"
                  (1940494 'move' count[1940492](1940496 '.v' _iterator[1940316] F1_count[1981376]))
                  (1940499 'move' call_tmp[1940490](1940502 call -[962245] count[1940492]))
                  const-val call_tmp[1940504]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                  const-val low[1940506]:int(64)[13] "temp"
                  (1940508 'move' low[1940506](1940510 '.v' _iterator[1940316] F0_low[1981372]))
                  (1940513 'move' call_tmp[1940504](1940516 call +[439674] low[1940506] call_tmp[1940490]))
                  const-val ret_tmp[1940519]:2*int(64)[1040075] "temp"
                  const-val low[1940521]:int(64)[13] "temp"
                  (1940523 'move' low[1940521](1940525 '.v' _iterator[1940316] F0_low[1981372]))
                  (1940529 call _build_tuple[1040033] low[1940521] call_tmp[1940504] ret_tmp[1940519])
                  (1940533 'move' tmp[1940474] ret_tmp[1940519])
                  (1940536 'move' tmp[1940390] tmp[1940474])
                }
                (1940540 '=' tmp[1940388] tmp[1940390])
                (1940543 'noop')
                1
                ref call_tmp[1940545]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1940547 'move' call_tmp[1940545](1940549 '.' tmp[1940388] x0[1040071]))
                const-val start[1940552]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1940554]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1940556 'move' coerce_tmp[1940554](1940558 'deref' call_tmp[1940545]))
                (1940560 '=' start[1940552] coerce_tmp[1940554])
                (1940563 'noop')
                ref call_tmp[1940564]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                (1940566 'move' call_tmp[1940564](1940568 '.' tmp[1940388] x1[1040073]))
                const-val end[1940571]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                const-val coerce_tmp[1940573]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                (1940575 'move' coerce_tmp[1940573](1940577 'deref' call_tmp[1940564]))
                (1940579 '=' end[1940571] coerce_tmp[1940573])
                (1940582 'noop')
                val _indexOfInterest[1940583]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                val _iterator[1940585]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                const-val call_tmp[1940587]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                const-val ret_tmp[1940589]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                (1940592 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1940554] coerce_tmp[1940573] ret_tmp[1940589])
                (1940596 'move' call_tmp[1940587] ret_tmp[1940589])
                (1940599 'move' _iterator[1940585](1940602 call _getIterator[1103320] call_tmp[1940587]))
                val ret[1940604]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                val call_tmp[1940606]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1940609 call chpl_range_check_stride[1102863])
                val i[1940610]:int(64)[13] "dead at end of block" "insert auto destroy"
                val call_tmp[1940612]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1940614 'move' i[1940610] 0)
                val call_tmp[1940617]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                const-val default_arg_first[1940619]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val low[1940621]:int(64)[13] "temp"
                (1940623 'move' low[1940621](1940625 '.v' _iterator[1940585] F0_low[1982870]))
                (1940628 'move' default_arg_first[1940619](1940631 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1940621]))
                const-val default_arg_last[1940633]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                const-val high[1940635]:int(64)[13] "temp"
                (1940637 'move' high[1940635](1940639 '.v' _iterator[1940585] F1_high[1982874]))
                (1940642 'move' default_arg_last[1940633](1940645 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1940635]))
                const-val _return_tmp_[1940647]:bool[10] "dead after last mention" "temp"
                const-val low[1940649]:int(64)[13] "temp"
                (1940651 'move' low[1940649](1940653 '.v' _iterator[1940585] F0_low[1982870]))
                const-val high[1940656]:int(64)[13] "temp"
                (1940658 'move' high[1940656](1940660 '.v' _iterator[1940585] F1_high[1982874]))
                (1940663 'move' _return_tmp_[1940647](1940666 call chpl_checkIfRangeIterWillOverflow[1096095] low[1940649] high[1940656] 1 default_arg_first[1940619] default_arg_last[1940633] 1))
                CForLoop[1940673]
                {
                  const-val yret[1940702]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940704 'move' yret[1940702] i[1940610])
                  const-val _yieldedIndex[1940707]:int(64)[13] "temp"
                  (1940709 'move' _yieldedIndex[1940707] i[1940610])
                  const-val i[1940712]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940714 'move' i[1940712] _yieldedIndex[1940707])
                  const-val yret[1940717]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940719 'move' yret[1940717] _yieldedIndex[1940707])
                  const-val _yieldedIndex[1940722]:int(64)[13] "temp"
                  (1940724 'move' _yieldedIndex[1940722] _yieldedIndex[1940707])
                  const-val i[1940727]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940729 'move' i[1940727] _yieldedIndex[1940722])
                  const-val yret[1940732]:int(64)[13] "dead after last mention" "YVV" "temp"
                  (1940734 'move' yret[1940732] _yieldedIndex[1940722])
                  const-val _yieldedIndex[1940737]:int(64)[13] "temp"
                  (1940739 'move' _yieldedIndex[1940737] _yieldedIndex[1940722])
                  const-val i[1940742]:int(64)[13] "const" "index var" "insert auto destroy"
                  (1940744 'move' i[1940742] _yieldedIndex[1940737])
                  const-val yret[1940747]:uint(8)[100] "dead after last mention" "YVV" "temp"
                  ref call_tmp[1940749]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                  ref _this_tmp_[1940751]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
                  (1940753 'move' _this_tmp_[1940751](1940756 call buff[757983] localThis[1940273]))
                  val coerce_tmp[1940758]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                  (1940760 'move' coerce_tmp[1940758](1940762 'deref' _this_tmp_[1940751]))
                  (1940764 'move' call_tmp[1940749](1940767 call this[954110] coerce_tmp[1940758] _yieldedIndex[1940737]))
                  const-val coerce_tmp[1940770]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                  (1940772 'move' coerce_tmp[1940770](1940774 'deref' call_tmp[1940749]))
                  (1940776 '=' yret[1940747] coerce_tmp[1940770])
                  (1940779 'noop')
                  const-val _yieldedIndex[1940827]:uint(8)[100] "temp"
                  (1940875 'move' _yieldedIndex[1940827] coerce_tmp[1940770])
                  {
                    const-val removeChar[1940829]:uint(8)[100] "const" "index var" "insert auto destroy"
                    (1940831 'move' removeChar[1940829] _yieldedIndex[1940827])
                    {
                      const-val call_tmp[1940835]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1940837 'move' call_tmp[1940835](1940840 call ==[435688] xChar[1882071] removeChar[1940829]))
                      const-val call_tmp[1940843]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                      (1940845 'move' call_tmp[1940843] call_tmp[1940835])
                      if call_tmp[1940843]
                      {
                        (1940860 call _freeIterator[1103493] _iterator[1940585])
                        (1940863 call chpl__autoDestroy[1508492] tmp[1940388])
                        (1940866 call _freeIterator[1103743] _iterator[1940316])
                        (1940869 call _freeIterator[1103993] _iterator[1940280])
                        (1940872 call chpl__autoDestroy[1435320] localThis[1940273])
                        (1940851 call _freeIterator[1109588] _iterator[1882082])
                        continue _continueLabel[1882141] _continueLabel[1882141]
                      }
                    }
                    label _continueLabel[1940856]
                  }
                  {
                    const-val low[1940675]:int(64)[13] "temp"
                    (1940677 'move' low[1940675](1940679 '.v' _iterator[1940585] F0_low[1982870]))
                    (1940682 '=' i[1940610] low[1940675])
                  }
                  {
                    const-val high[1940686]:int(64)[13] "temp"
                    (1940688 'move' high[1940686](1940690 '.v' _iterator[1940585] F1_high[1982874]))
                    (1940693 '<=' i[1940610] high[1940686])
                  }
                  {
                    val call_tmp[1940697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                    (1940699 '+=' i[1940610] 1)
                  }
                }
                label _endchpl_direct_param_stride_range_iter[1940802]
                (1940805 call _freeIterator[1103493] _iterator[1940585])
                (1940808 call chpl__autoDestroy[1508492] tmp[1940388])
                label _endchpl_direct_counted_range_iter_helper[1940810]
                (1940813 call _freeIterator[1103743] _iterator[1940316])
                label _endchpl_direct_counted_range_iter[1940815]
                (1940818 call _freeIterator[1103993] _iterator[1940280])
                (1940821 call chpl__autoDestroy[1435320] localThis[1940273])
                label _endchpl_bytes[1940823]
              }
              label _breakLabel[1882132]
              (1882135 call _freeIterator[1109588] _iterator[1882082])
            }
            (1882138 call =[435365] end[1107845] i[1882064])
          }
          label _continueLabel[1882141]
          {
            (1882145 call zip3[1096775] _iterator[1881870])
          }
          {
            (1882149 call zip3[1108328] _iterator[1881883])
          }
          {
            {
              (1881908 call init[1096811] _iterator[1881870])
            }
            {
              (1881943 call init[1108364] _iterator[1881883])
            }
          }
          {
            (1881924 call hasMore[1096793] _iterator[1881870])
          }
          {
            {
              (1881912 call incr[1096820] _iterator[1881870])
            }
            {
              (1881947 call incr[1108373] _iterator[1881883])
            }
          }
        }
        {
          const-val retTmp[1881993]:int(64)[13] "temp"
          (1881995 'move' retTmp[1881993](1881990 call hasMore[1108346] _iterator[1881883]))
          (1882000 'move' hasMore[1881958](1881997 'cast' bool[10] retTmp[1881993]))
        }
        if hasMore[1881958]
        {
          (1881985 'chpl_error' c"zippered iterations have non-equal lengths")
        }
        {
          (1881955 call zip4[1108337] _iterator[1881883])
        }
        {
          (1881920 call zip4[1096784] _iterator[1881870])
        }
        label _breakLabel[1108211]
        (1817546 call _freeIterator[1108743] _iterator[1108057])
        (1817548 call chpl__autoDestroy[1515237] _iterator[1108057])
        (1817551 call chpl__autoDestroy[1508195] call_tmp[1108059])
      }
    }
    const-val call_tmp[1108214]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1804930]:range(int(64),bounded,false)[1026833] "temp"
    (1108219 call chpl_build_bounded_range[455175] start[1107822] end[1107845] ret_tmp[1804930])
    (1804933 'move' call_tmp[1108214] ret_tmp[1804930])
    const-val call_tmp[1108222]:string[26] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val ret_tmp[1807233]:string[26] "temp"
    (1108227 call this[1111385] localX[1107793] call_tmp[1108214] ret_tmp[1807233])
    (1807236 'move' call_tmp[1108222] ret_tmp[1807233])
    val call_tmp[1108229]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    (1122022 'move' ret[1107669] call_tmp[1108222])
    (1817554 call chpl__autoDestroy[1508195] call_tmp[1108214])
    (1817557 call chpl__autoDestroy[1435320] localChars[1107815])
    (1817560 call chpl__autoDestroy[1435320] localX[1107793])
    gotoReturn _end_doStripNoEnc[1108246] _end_doStripNoEnc[1108246]
    label _end_doStripNoEnc[1108246]
    (1807113 '=' _retArg[1807111] ret[1107669])
    (1807117 return _void[55])
  }
  function doEq[1206235](const  ref arg a[1206237]:string[26], const  ref arg b[1206239]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1206241]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1206251]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1206262]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1206273]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206275 'move' call_tmp[1206273](1206278 call buff[757983] a[1206237]))
    ref call_tmp[1206281]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206283 'move' call_tmp[1206281](1206286 call buffLen[757905] a[1206237]))
    ref call_tmp[1206289]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206291 'move' call_tmp[1206289](1206294 call locale_id[758061] a[1206237]))
    ref call_tmp[1206297]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206299 'move' call_tmp[1206297](1206302 call buff[757983] b[1206239]))
    ref call_tmp[1206305]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206307 'move' call_tmp[1206305](1206310 call buffLen[757905] b[1206239]))
    ref call_tmp[1206313]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1206315 'move' call_tmp[1206313](1206318 call locale_id[758061] b[1206239]))
    const-val call_tmp[1206321]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1206421]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206425 'move' coerce_tmp[1206421](1206423 'deref' call_tmp[1206273]))
    const-val coerce_tmp[1206427]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206431 'move' coerce_tmp[1206427](1206429 'deref' call_tmp[1206281]))
    const-val coerce_tmp[1206433]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206437 'move' coerce_tmp[1206433](1206435 'deref' call_tmp[1206289]))
    val coerce_tmp[1206439]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206443 'move' coerce_tmp[1206439](1206441 'deref' call_tmp[1206297]))
    const-val coerce_tmp[1206445]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206449 'move' coerce_tmp[1206445](1206447 'deref' call_tmp[1206305]))
    const-val coerce_tmp[1206451]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1206455 'move' coerce_tmp[1206451](1206453 'deref' call_tmp[1206313]))
    (1206323 'move' call_tmp[1206321](1206326 call _strcmp[173484] coerce_tmp[1206421] coerce_tmp[1206427] coerce_tmp[1206433] coerce_tmp[1206439] coerce_tmp[1206445] coerce_tmp[1206451]))
    const-val call_tmp[1206333]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1206335 'move' call_tmp[1206333](1206338 call ==[435666] call_tmp[1206321] 0))
    (1206341 'move' ret[1206241] call_tmp[1206333])
    (1206345 return ret[1206241])
  }
  function doLessThan[1744064](const  ref arg a[1744066]:string[26], const  ref arg b[1744068]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1744070]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1744080]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1744091]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1744102]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744104 'move' call_tmp[1744102](1744107 call buff[757983] a[1744066]))
    ref call_tmp[1744110]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744112 'move' call_tmp[1744110](1744115 call buffLen[757905] a[1744066]))
    ref call_tmp[1744118]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744120 'move' call_tmp[1744118](1744123 call locale_id[758061] a[1744066]))
    ref call_tmp[1744126]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744128 'move' call_tmp[1744126](1744131 call buff[757983] b[1744068]))
    ref call_tmp[1744134]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744136 'move' call_tmp[1744134](1744139 call buffLen[757905] b[1744068]))
    ref call_tmp[1744142]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744144 'move' call_tmp[1744142](1744147 call locale_id[758061] b[1744068]))
    const-val call_tmp[1744150]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1744187]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744191 'move' coerce_tmp[1744187](1744189 'deref' call_tmp[1744102]))
    const-val coerce_tmp[1744193]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744197 'move' coerce_tmp[1744193](1744195 'deref' call_tmp[1744110]))
    const-val coerce_tmp[1744199]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744203 'move' coerce_tmp[1744199](1744201 'deref' call_tmp[1744118]))
    val coerce_tmp[1744205]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744209 'move' coerce_tmp[1744205](1744207 'deref' call_tmp[1744126]))
    const-val coerce_tmp[1744211]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744215 'move' coerce_tmp[1744211](1744213 'deref' call_tmp[1744134]))
    const-val coerce_tmp[1744217]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744221 'move' coerce_tmp[1744217](1744219 'deref' call_tmp[1744142]))
    (1744152 'move' call_tmp[1744150](1744155 call _strcmp[173484] coerce_tmp[1744187] coerce_tmp[1744193] coerce_tmp[1744199] coerce_tmp[1744205] coerce_tmp[1744211] coerce_tmp[1744217]))
    const-val call_tmp[1744162]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1744164 'move' call_tmp[1744162](1744167 call <[948417] call_tmp[1744150]))
    (1744170 'move' ret[1744070] call_tmp[1744162])
    (1744174 return ret[1744070])
  }
  function doGreaterThan[1744236](const  ref arg a[1744238]:string[26], const  ref arg b[1744240]:string[26]) : bool[10] "inline" "instantiated generic" "invisible fn" "resolved" "fn synchronization free"
  {
    val ret[1744242]:bool[10] "dead after last mention" "RVV" "temp"
    val call_tmp[1744252]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    val call_tmp[1744263]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    ref call_tmp[1744274]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744276 'move' call_tmp[1744274](1744279 call buff[757983] a[1744238]))
    ref call_tmp[1744282]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744284 'move' call_tmp[1744282](1744287 call buffLen[757905] a[1744238]))
    ref call_tmp[1744290]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744292 'move' call_tmp[1744290](1744295 call locale_id[758061] a[1744238]))
    ref call_tmp[1744298]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744300 'move' call_tmp[1744298](1744303 call buff[757983] b[1744240]))
    ref call_tmp[1744306]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744308 'move' call_tmp[1744306](1744311 call buffLen[757905] b[1744240]))
    ref call_tmp[1744314]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1744316 'move' call_tmp[1744314](1744319 call locale_id[758061] b[1744240]))
    const-val call_tmp[1744322]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
    val coerce_tmp[1744359]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744363 'move' coerce_tmp[1744359](1744361 'deref' call_tmp[1744274]))
    const-val coerce_tmp[1744365]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744369 'move' coerce_tmp[1744365](1744367 'deref' call_tmp[1744282]))
    const-val coerce_tmp[1744371]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744375 'move' coerce_tmp[1744371](1744373 'deref' call_tmp[1744290]))
    val coerce_tmp[1744377]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744381 'move' coerce_tmp[1744377](1744379 'deref' call_tmp[1744298]))
    const-val coerce_tmp[1744383]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744387 'move' coerce_tmp[1744383](1744385 'deref' call_tmp[1744306]))
    const-val coerce_tmp[1744389]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1744393 'move' coerce_tmp[1744389](1744391 'deref' call_tmp[1744314]))
    (1744324 'move' call_tmp[1744322](1744327 call _strcmp[173484] coerce_tmp[1744359] coerce_tmp[1744365] coerce_tmp[1744371] coerce_tmp[1744377] coerce_tmp[1744383] coerce_tmp[1744389]))
    const-val call_tmp[1744334]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1744336 'move' call_tmp[1744334](1744339 call >[437710] call_tmp[1744322] 0))
    (1744342 'move' ret[1744242] call_tmp[1744334])
    (1744346 return ret[1744242])
  }
  function countNumCodepoints[181380](const  ref arg x[181377]:string[26]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523253]:int(64)[13] "dead after last mention" "RVV" "temp"
    val ret[181383]:int(64)[13] "dead at end of block" "insert auto destroy"
    (1019923 'move' ret[181383] 0)
    const-val tmp[181417]:chpl_localeID_t[209352] "dead after last mention" "const" "temp"
    ref call_tmp[687428]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (687431 'move' call_tmp[687428](181392 call locale_id[758061] x[181377]))
    const-val call_tmp[687433]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val coerce_tmp[1019793]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019797 'move' coerce_tmp[1019793](1019795 'deref' call_tmp[687428]))
    (687436 'move' call_tmp[687433](181397 call chpl_buildLocaleID[209470] coerce_tmp[1019793] c_sublocid_any[89878]))
    const-val call_tmp[687438]:chpl_localeID_t[209352] "dead after last mention" "expr temp" "maybe param" "temp"
    (687441 'move' call_tmp[687438](181398 'chpl_on_locale_num' call_tmp[687433]))
    (181419 'move' tmp[181417] call_tmp[687438])
    val isdirect[2051918]:bool[10] "temp"
    (2051923 'move' isdirect[2051918](2051920 call chpl_doDirectExecuteOn[187469] tmp[181417]))
    if isdirect[2051918]
    {
      (2051927 call on_fn[935483] x[181377] ret[181383])
    }
    {
      val _args_foron_fn[2051945]:_class_localson_fn[2051935] "temp"
      (2051949 'move' _args_foron_fn[2051945](2051947 'stack allocate class' _class_localson_fn[2051935]))
      (2051951 '.=' _args_foron_fn[2051945] _0_tmp[2051938] tmp[181417])
      ref tmp[2051955]:string[26] "temp"
      (2051959 'move' tmp[2051955](2051957 'set reference' x[181377]))
      (2051961 '.=' _args_foron_fn[2051945] _1_x[2051940] tmp[2051955])
      ref tmp[2051965]:int(64)[13] "temp"
      (2051969 'move' tmp[2051965](2051967 'set reference' ret[181383]))
      (2051971 '.=' _args_foron_fn[2051945] _2_ret[2051942] tmp[2051965])
      val _args_vforon_fn[2051975]:c_void_ptr[149] "temp"
      (2051979 'move' _args_vforon_fn[2051975](2051977 'cast_to_void_star' _args_foron_fn[2051945]))
      val _args_sizeon_fn[2051981]:int(64)[13] "temp"
      (2051985 'move' _args_sizeon_fn[2051981](2051983 'sizeof_bundle' _class_localson_fn[2051935]))
      on(2052025 call wrapon_fn[2051987] tmp[181417] _args_vforon_fn[2051975] _args_sizeon_fn[2051981] _args_foron_fn[2051945])
    }
    {
    }
    (523258 'move' ret[523253] ret[181383])
    gotoReturn _end_countNumCodepoints[523251] _end_countNumCodepoints[523251]
    label _end_countNumCodepoints[523251]
    (523255 return ret[523253])
  }
  function countNumCodepoints[181436](const in arg buff[181433]:c_ptr(uint(8))[937442], const in arg buffLen[181439]:int(64)[13]) : int(64)[13] "resolved" "fn synchronization free"
  {
    val ret[523264]:int(64)[13] "dead after last mention" "RVV" "temp"
    val n[181443]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545278 'move' n[181443] 0)
    val i[181449]:int(64)[13] "dead at end of block" "insert auto destroy"
    (545280 'move' i[181449] 0)
    {
      val tmp[181533]:bool[10] "dead after last mention" "temp"
      const-val call_tmp[687462]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (687465 'move' call_tmp[687462](181554 call <[437490] i[181449] buffLen[181439]))
      (181557 'move' tmp[181533] call_tmp[687462])
      WhileDo[181538]
      {
        {
          (181459 call +=[451353] i[181449] 1)
          {
            val tmp[181483]:bool[10] "dead after last mention" "temp"
            const-val tmp[429332]:bool[10] "dead after last mention" "maybe param" "temp"
            (429343 'move' tmp[429332](181515 call <[437490] i[181449] buffLen[181439]))
            val tmp[571819]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
            const-val tmp[571820]:bool[10] "dead after last mention" "maybe param" "temp"
            const-val call_tmp[687472]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
            (687475 'move' call_tmp[687472] tmp[429332])
            (571825 'move' tmp[571820] call_tmp[687472])
            if tmp[571820]
            {
              const-val tmp[571827]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
              ref call_tmp[687477]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
              (687480 'move' call_tmp[687477](181523 call this[954110] buff[181433] i[181449]))
              const-val call_tmp[687482]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val coerce_tmp[1019826]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
              (1019830 'move' coerce_tmp[1019826](1019828 'deref' call_tmp[687477]))
              (687485 'move' call_tmp[687482](181521 call isInitialByte[181574] coerce_tmp[1019826]))
              const-val call_tmp[687487]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687490 'move' call_tmp[687487](181519 call ![7494] call_tmp[687482]))
              (571829 'move' tmp[571827] call_tmp[687487])
              (571834 'move' tmp[571819] tmp[571827])
            }
            {
              (571839 'move' tmp[571819] 0)
            }
            (181525 'move' tmp[181483] tmp[571819])
            WhileDo[181488]
            {
              (181480 call +=[451353] i[181449] 1)
              label _continueLabel[181486]
              const-val tmp[429311]:bool[10] "dead after last mention" "maybe param" "temp"
              (429322 'move' tmp[429311](181496 call <[437490] i[181449] buffLen[181439]))
              val tmp[571846]:bool[10] "dead after last mention" "expr temp" "if-expr result" "insert auto destroy" "temp"
              const-val tmp[571847]:bool[10] "dead after last mention" "maybe param" "temp"
              const-val call_tmp[687497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
              (687500 'move' call_tmp[687497] tmp[429311])
              (571852 'move' tmp[571847] call_tmp[687497])
              if tmp[571847]
              {
                const-val tmp[571854]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                ref call_tmp[687502]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                (687505 'move' call_tmp[687502](181504 call this[954110] buff[181433] i[181449]))
                const-val call_tmp[687507]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                const-val coerce_tmp[1019911]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                (1019915 'move' coerce_tmp[1019911](1019913 'deref' call_tmp[687502]))
                (687510 'move' call_tmp[687507](181502 call isInitialByte[181574] coerce_tmp[1019911]))
                const-val call_tmp[687512]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                (687515 'move' call_tmp[687512](181500 call ![7494] call_tmp[687507]))
                (571856 'move' tmp[571854] call_tmp[687512])
                (571861 'move' tmp[571846] tmp[571854])
              }
              {
                (571866 'move' tmp[571846] 0)
              }
              (181506 'move' tmp[181483] tmp[571846])
              tmp[181483]
            }
            label _breakLabel[181487]
          }
          (181530 call +=[451353] n[181443] 1)
        }
        label _continueLabel[181536]
        const-val call_tmp[687517]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (687520 'move' call_tmp[687517](181544 call <[437490] i[181449] buffLen[181439]))
        (181547 'move' tmp[181533] call_tmp[687517])
        tmp[181533]
      }
      label _breakLabel[181537]
    }
    (523269 'move' ret[523264] n[181443])
    gotoReturn _end_countNumCodepoints[523262] _end_countNumCodepoints[523262]
    label _end_countNumCodepoints[523262]
    (523266 return ret[523264])
  }
  function isInitialByte[181574](const in arg b[181571]:uint(8)[100]) : bool[10] "inline" "no doc" "resolved" "fn synchronization free"
  {
    val ret[523275]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687522]:uint(8)[100] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019881]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019887 'move' coerce_tmp[1019881](1019883 'cast' uint(8)[100] 192))
    (687525 'move' call_tmp[687522](181581 call &[446370] b[181571] coerce_tmp[1019881]))
    const-val call_tmp[687527]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019890]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019896 'move' coerce_tmp[1019890](1019892 'cast' uint(8)[100] 128))
    (687530 'move' call_tmp[687527](181584 call !=[436072] call_tmp[687522] coerce_tmp[1019890]))
    (1019900 'move' ret[523275] call_tmp[687527])
    (523277 return ret[523275])
  }
  function byte_isWhitespace[181655](const in arg c[181652]:uint(8)[100]) : bool[10] "inline" "resolved" "fn synchronization free"
  {
    val ret[523307]:bool[10] "dead after last mention" "RVV" "temp"
    const-val call_tmp[687547]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687550 'move' call_tmp[687547](181674 'cast' int(32)[95] c[181652]))
    const-val call_tmp[687552]:int(32)[95] "dead after last mention" "expr temp" "maybe param" "temp"
    (687555 'move' call_tmp[687552](181677 call isspace[181664] call_tmp[687547]))
    const-val call_tmp[687557]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1125559]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1125565 'move' coerce_tmp[1125559](1125561 'cast' int(32)[95] 0))
    (687560 'move' call_tmp[687557](181679 call !=[436028] call_tmp[687552] coerce_tmp[1125559]))
    (1125569 'move' ret[523307] call_tmp[687557])
    (523309 return ret[523307])
  }
  function qio_encode_char_buf[173958](const in arg dst[173955]:c_void_ptr[149], const in arg chr[173964]:int(32)[95]) : syserr[223603] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522792]:syserr[223603] "RVV" "temp"
    (522794 return ret[522792])
  }
  function qio_decode_char_buf[174479](ref arg chr[174476]:_ref(int(32))[936645], ref arg nBytes[174482]:_ref(int(32))[936645], const in arg buf[174486]:c_string[19], const in arg buflen[174490]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522820]:syserr[223603] "RVV" "temp"
    (522822 return ret[522820])
  }
  function qio_decode_char_buf_esc[174506](ref arg chr[174503]:_ref(int(32))[936645], ref arg nBytes[174509]:_ref(int(32))[936645], const in arg buf[174513]:c_string[19], const in arg buffLen[174517]:int(64)[13]) : syserr[223603] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[522826]:syserr[223603] "RVV" "temp"
    (522828 return ret[522826])
  }
  function isspace[181664](const in arg c[181661]:int(32)[95]) : int(32)[95] "extern" "local args" "no fn body" "resolved" "fn synchronization free" "no return value for void"
  {
    val ret[523301]:int(32)[95] "RVV" "temp"
    (523303 return ret[523301])
  }
  function on_fn[935483](const  ref arg x[1781251]:_ref(string)[937958], ref arg ret[1781253]:_ref(int(64))[936591]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      ref call_tmp[687445]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687448 'move' call_tmp[687445](181402 call buff[757983] x[1781251]))
      ref call_tmp[687452]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (687455 'move' call_tmp[687452](181407 call buffLen[757905] x[1781251]))
      const-val call_tmp[687457]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      val coerce_tmp[1019803]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019807 'move' coerce_tmp[1019803](1019805 'deref' call_tmp[687445]))
      const-val coerce_tmp[1019809]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (1019813 'move' coerce_tmp[1019809](1019811 'deref' call_tmp[687452]))
      (687460 'move' call_tmp[687457](181410 call countNumCodepoints[181436] coerce_tmp[1019803] coerce_tmp[1019809]))
      (181411 call =[435365] ret[1781253] call_tmp[687457])
    }
    (935490 return _void[55])
  }
  function _cast[957328](const in arg b[957334]:c_ptr(uint(8))[937442]) : c_string[19] "inline" "resolved"
  {
    val _formal_type_tmp_[1778896]:c_string[19] "temp"
    val ret[957337]:c_string[19] "dead after last mention" "RVV" "temp"
    const-val call_tmp[957339]:c_string[19] "dead after last mention" "expr temp" "maybe param" "temp"
    (957341 'move' call_tmp[957339](957343 'cast' c_string[19] b[957334]))
    (957346 'move' ret[957337] call_tmp[957339])
    (957350 return ret[957337])
  }
  function on_fn[979172](ref arg lhs[1781275]:_ref(string)[937958], const  ref arg rhs[1781277]:_ref(string)[937958]) : void[4] "on" "resolved"
  {
    {
      ref call_tmp[979178]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (979180 'move' call_tmp[979178](979183 call buffLen[757905] lhs[1781275]))
      ref call_tmp[979186]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979188 'move' call_tmp[979186](979191 call buffLen[757905] rhs[1781277]))
      const-val call_tmp[979194]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[979975]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979979 'move' coerce_tmp[979975](979977 'deref' call_tmp[979178]))
      const-val coerce_tmp[979981]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (979985 'move' coerce_tmp[979981](979983 'deref' call_tmp[979186]))
      (979196 'move' call_tmp[979194](979199 call safeAdd[979748] coerce_tmp[979975] coerce_tmp[979981]))
      const-val call_tmp[979202]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979204 'move' call_tmp[979202](979207 call ![7494] call_tmp[979194]))
      const-val call_tmp[979209]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979211 'move' call_tmp[979209] call_tmp[979202])
      if call_tmp[979209]
      {
        (979219 call halt[154111] "Buffer overflow allocating string copy data")
      }
      ref call_tmp[979222]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
      (979224 'move' call_tmp[979222](979227 call buffLen[757905] lhs[1781275]))
      ref call_tmp[979230]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (979232 'move' call_tmp[979230](979235 call buffLen[757905] rhs[1781277]))
      const-val call_tmp[979238]:int(64)[13] "dead at end of block" "maybe param" "temp"
      const-val coerce_tmp[980479]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980483 'move' coerce_tmp[980479](980481 'deref' call_tmp[979222]))
      const-val coerce_tmp[980485]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (980489 'move' coerce_tmp[980485](980487 'deref' call_tmp[979230]))
      (979240 'move' call_tmp[979238](979243 call +[439674] coerce_tmp[980479] coerce_tmp[980485]))
      const-val newLength[979246]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (979248 'move' newLength[979246] call_tmp[979238])
      ref call_tmp[979252]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (979254 'move' call_tmp[979252](979257 call buffSize[757931] lhs[1781275]))
      const-val call_tmp[979260]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      const-val coerce_tmp[980493]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980497 'move' coerce_tmp[980493](980495 'deref' call_tmp[979252]))
      (979262 'move' call_tmp[979260](979265 call <=[437050] coerce_tmp[980493] newLength[979246]))
      const-val call_tmp[979268]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (979270 'move' call_tmp[979268] call_tmp[979260])
      if call_tmp[979268]
      {
        const-val call_tmp[979277]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979279 'move' call_tmp[979277](979282 call +[949685] newLength[979246]))
        ref call_tmp[979285]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
        (979287 'move' call_tmp[979285](979290 call buffLen[757905] lhs[1781275]))
        const-val call_tmp[979293]:real(64)[16] "dead at end of block" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[980502]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980506 'move' coerce_tmp[980502](980504 'deref' call_tmp[979285]))
        const-val coerce_tmp[980508]:real(64)[16] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (980514 'move' coerce_tmp[980508](980510 'cast' real(64)[16] coerce_tmp[980502]))
        (979295 'move' call_tmp[979293](979298 call *[441998] coerce_tmp[980508] 1.5))
        const-val call_tmp[979301]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (979303 'move' call_tmp[979301](979306 call _cast[980517] call_tmp[979293]))
        const-val call_tmp[979309]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (979311 'move' call_tmp[979309](979314 call max[450146] call_tmp[979277] call_tmp[979301]))
        const-val requestedSize[979317]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (979319 'move' requestedSize[979317] call_tmp[979309])
        ref call_tmp[979324]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
        (979326 'move' call_tmp[979324](979329 call isOwned[758009] lhs[1781275]))
        const-val call_tmp[979332]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val tmp[980550]:bool[10] "dead after last mention" "const" "temp"
        (980552 'move' tmp[980550](980554 'deref' call_tmp[979324]))
        (979334 'move' call_tmp[979332] tmp[980550])
        if call_tmp[979332]
        {
          ref call_tmp[979341]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
          (979343 'move' call_tmp[979341](979346 call buff[757983] lhs[1781275]))
          const-val call_tmp[979349]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
          val coerce_tmp[980557]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980561 'move' coerce_tmp[980557](980559 'deref' call_tmp[979341]))
          const-val ret_tmp[1804540]:(c_ptr(uint(8)),int(64))[955227] "temp"
          (979354 call bufferRealloc[172738] coerce_tmp[980557] requestedSize[979317] ret_tmp[1804540])
          (1804543 'move' call_tmp[979349] ret_tmp[1804540])
          const-val tmp[979357]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
          (979359 'move' tmp[979357] call_tmp[979349])
          1
          ref call_tmp[979367]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
          (979369 'move' call_tmp[979367](980571 '.' tmp[979357] x0[955223]))
          val newBuff[979374]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980576]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980580 'move' coerce_tmp[980576](980578 'deref' call_tmp[979367]))
          (979376 'move' newBuff[979374](980574 call chpl__initCopy[954049] coerce_tmp[980576]))
          ref call_tmp[979379]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
          (979381 'move' call_tmp[979379](980585 '.' tmp[979357] x1[955225]))
          const-val allocSize[979386]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980590]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980594 'move' coerce_tmp[980590](980592 'deref' call_tmp[979379]))
          (979388 'move' allocSize[979386](980588 call chpl__initCopy[955351] coerce_tmp[980590]))
          ref call_tmp[979392]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
          (979394 'move' call_tmp[979392](979397 call buff[757983] lhs[1781275]))
          (979401 call =[954232] call_tmp[979392] newBuff[979374])
          ref call_tmp[979406]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (979408 'move' call_tmp[979406](979411 call buffSize[757931] lhs[1781275]))
          (979415 call =[435365] call_tmp[979406] allocSize[979386])
          (1815849 call chpl__autoDestroy[1438961] tmp[979357])
        }
        {
          const-val call_tmp[979421]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "maybe param" "temp"
          const-val ret_tmp[1805304]:(c_ptr(uint(8)),int(64))[955227] "temp"
          (979426 call bufferAlloc[955037] requestedSize[979317] ret_tmp[1805304])
          (1805307 'move' call_tmp[979421] ret_tmp[1805304])
          const-val tmp[979428]:(c_ptr(uint(8)),int(64))[955227] "dead at end of block" "insert auto destroy" "temp"
          (979430 'move' tmp[979428] call_tmp[979421])
          1
          ref call_tmp[979438]:_ref(c_ptr(uint(8)))[937451] "dead at end of block" "maybe param" "temp"
          (979440 'move' call_tmp[979438](980609 '.' tmp[979428] x0[955223]))
          val newBuff[979445]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
          val coerce_tmp[980614]:c_ptr(uint(8))[937442] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980618 'move' coerce_tmp[980614](980616 'deref' call_tmp[979438]))
          (979447 'move' newBuff[979445](980612 call chpl__initCopy[954049] coerce_tmp[980614]))
          ref call_tmp[979450]:_ref(int(64))[936591] "dead at end of block" "maybe param" "temp"
          (979452 'move' call_tmp[979450](980623 '.' tmp[979428] x1[955225]))
          const-val allocSize[979457]:int(64)[13] "dead at end of block" "insert auto destroy"
          const-val coerce_tmp[980628]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
          (980632 'move' coerce_tmp[980628](980630 'deref' call_tmp[979450]))
          (979459 'move' allocSize[979457](980626 call chpl__initCopy[955351] coerce_tmp[980628]))
          ref call_tmp[979463]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
          (979465 'move' call_tmp[979463](979468 call buff[757983] lhs[1781275]))
          ref call_tmp[979471]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (979473 'move' call_tmp[979471](979476 call buffLen[757905] lhs[1781275]))
          val coerce_tmp[980642]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980646 'move' coerce_tmp[980642](980644 'deref' call_tmp[979463]))
          const-val coerce_tmp[980648]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
          (980652 'move' coerce_tmp[980648](980650 'deref' call_tmp[979471]))
          (979480 call bufferMemcpyLocal[173122] newBuff[979445] coerce_tmp[980642] coerce_tmp[980648] 0 0)
          ref call_tmp[979488]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
          (979490 'move' call_tmp[979488](979493 call buff[757983] lhs[1781275]))
          (979497 call =[954232] call_tmp[979488] newBuff[979445])
          ref call_tmp[979502]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
          (979504 'move' call_tmp[979502](979507 call buffSize[757931] lhs[1781275]))
          (979511 call =[435365] call_tmp[979502] allocSize[979457])
          ref call_tmp[979516]:_ref(bool)[937218] "dead after last mention" "maybe param" "temp"
          (979518 'move' call_tmp[979516](979521 call isOwned[758009] lhs[1781275]))
          (979525 call =[435212] call_tmp[979516] 1)
          (1815853 call chpl__autoDestroy[1438961] tmp[979428])
        }
      }
      ref call_tmp[979530]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "temp"
      (979532 'move' call_tmp[979530](979535 call buff[757983] lhs[1781275]))
      ref call_tmp[979538]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979540 'move' call_tmp[979538](979543 call locale_id[758061] rhs[1781277]))
      ref call_tmp[979546]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979548 'move' call_tmp[979546](979551 call buff[757983] rhs[1781277]))
      ref call_tmp[979554]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
      (979556 'move' call_tmp[979554](979559 call buffLen[757905] rhs[1781277]))
      ref call_tmp[979562]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (979564 'move' call_tmp[979562](979567 call buffLen[757905] lhs[1781275]))
      val coerce_tmp[980691]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980695 'move' coerce_tmp[980691](980693 'deref' call_tmp[979530]))
      const-val coerce_tmp[980697]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980701 'move' coerce_tmp[980697](980699 'deref' call_tmp[979538]))
      const-val coerce_tmp[980703]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980709 'move' coerce_tmp[980703](980705 'cast' int(64)[13] coerce_tmp[980697]))
      val coerce_tmp[980711]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980715 'move' coerce_tmp[980711](980713 'deref' call_tmp[979546]))
      const-val coerce_tmp[980717]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980721 'move' coerce_tmp[980717](980719 'deref' call_tmp[979554]))
      const-val coerce_tmp[980723]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980727 'move' coerce_tmp[980723](980725 'deref' call_tmp[979562]))
      (979571 call bufferMemcpy[173042] coerce_tmp[980691] coerce_tmp[980703] coerce_tmp[980711] coerce_tmp[980717] coerce_tmp[980723] 0)
      ref call_tmp[979581]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
      (979583 'move' call_tmp[979581](979586 call buffLen[757905] lhs[1781275]))
      (979590 call =[435365] call_tmp[979581] newLength[979246])
      ref call_tmp[979595]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
      ref _this_tmp_[980843]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "temp"
      (980845 'move' _this_tmp_[980843](979600 call buff[757983] lhs[1781275]))
      val coerce_tmp[980850]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980854 'move' coerce_tmp[980850](980852 'deref' _this_tmp_[980843]))
      (979597 'move' call_tmp[979595](979603 call this[954110] coerce_tmp[980850] newLength[979246]))
      const-val coerce_tmp[980857]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
      (980863 'move' coerce_tmp[980857](980859 'cast' uint(8)[100] 0))
      (979606 call =[435386] call_tmp[979595] coerce_tmp[980857])
      val call_tmp[979611]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[979634]:_ref(int(64))[936591] "dead after last mention" "maybe param" "temp"
        (979636 'move' call_tmp[979634](979639 call cachedNumCodepoints[757957] lhs[1781275]))
        ref call_tmp[979642]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (979644 'move' call_tmp[979642](979647 call cachedNumCodepoints[757957] rhs[1781277]))
        const-val coerce_tmp[980871]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (980875 'move' coerce_tmp[980871](980873 'deref' call_tmp[979642]))
        (979651 call +=[451353] call_tmp[979634] coerce_tmp[980871])
      }
    }
    (979655 return _void[55])
  }
  function helpMe[1019211](ref arg lhs[1019216]:_ref(string)[937958], const  ref arg rhs[1019221]:string[26]) : void[4] "inline" "resolved" "fn synchronization free" "no return value for void"
  {
    const-val tmp[1019242]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
    const-val tmp[1019266]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
    ref call_tmp[1019268]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
    (1019270 'move' call_tmp[1019268](1019273 call locale_id[758061] rhs[1019221]))
    const-val call_tmp[1019276]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    const-val coerce_tmp[1019763]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
    (1019767 'move' coerce_tmp[1019763](1019765 'deref' call_tmp[1019268]))
    (1019278 'move' call_tmp[1019276](1019281 call ==[435644] coerce_tmp[1019763] chpl_nodeID[208207]))
    (1019284 'move' tmp[1019266] call_tmp[1019276])
    (1019289 'move' tmp[1019242] tmp[1019266])
    const-val call_tmp[1019295]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
    (1019297 'move' call_tmp[1019295] tmp[1019242])
    if call_tmp[1019295]
    {
      val call_tmp[1019304]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        ref call_tmp[1019327]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019329 'move' call_tmp[1019327](1019332 call buff[757983] rhs[1019221]))
        ref call_tmp[1019335]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019337 'move' call_tmp[1019335](1019340 call buffLen[757905] rhs[1019221]))
        ref call_tmp[1019343]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019345 'move' call_tmp[1019343](1019348 call buffSize[757931] rhs[1019221]))
        const-val call_tmp[1019351]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019353 'move' call_tmp[1019351](1019356 call numCodepoints[32826] rhs[1019221]))
        val coerce_tmp[1020530]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020534 'move' coerce_tmp[1020530](1020532 'deref' call_tmp[1019327]))
        const-val coerce_tmp[1020536]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020540 'move' coerce_tmp[1020536](1020538 'deref' call_tmp[1019335]))
        const-val coerce_tmp[1020542]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020546 'move' coerce_tmp[1020542](1020544 'deref' call_tmp[1019343]))
        (1019360 call reinitWithNewBuffer[1019927] lhs[1019216] coerce_tmp[1020530] coerce_tmp[1020536] coerce_tmp[1020542] call_tmp[1019351])
      }
    }
    {
      ref call_tmp[1019399]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1019401 'move' call_tmp[1019399](1019404 call buffLen[757905] rhs[1019221]))
      const-val len[1019407]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1020919]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
      (1020923 'move' coerce_tmp[1020919](1020921 'deref' call_tmp[1019399]))
      (1019409 'move' len[1019407](1020917 call chpl__initCopy[955351] coerce_tmp[1020919]))
      val remote_buf[1019413]:c_ptr(uint(8))[937442] "dead at end of block" "insert auto destroy"
      val init_coerce_tmp[1020926]:c_ptr(uint(8))[937442] "dead at end of block" "temp"
      (1020929 'move' init_coerce_tmp[1020926](1021468 'cast' c_ptr(uint(8))[937442] nil[44]))
      (1019415 'move' remote_buf[1019413] init_coerce_tmp[1020926])
      const-val call_tmp[1019420]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019422 'move' call_tmp[1019420](1019425 call !=[436050] len[1019407] 0))
      const-val call_tmp[1019428]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1019430 'move' call_tmp[1019428] call_tmp[1019420])
      if call_tmp[1019428]
      {
        ref call_tmp[1019437]:_ref(int(32))[936645] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019439 'move' call_tmp[1019437](1019442 call locale_id[758061] rhs[1019221]))
        ref call_tmp[1019445]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019447 'move' call_tmp[1019445](1019450 call buff[757983] rhs[1019221]))
        val call_tmp[1019453]:c_ptr(uint(8))[937442] "dead after last mention" "expr temp" "maybe param" "temp"
        const-val coerce_tmp[1020935]:int(32)[95] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020939 'move' coerce_tmp[1020935](1020937 'deref' call_tmp[1019437]))
        const-val coerce_tmp[1020941]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020947 'move' coerce_tmp[1020941](1020943 'cast' int(64)[13] coerce_tmp[1020935]))
        val coerce_tmp[1020949]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1020953 'move' coerce_tmp[1020949](1020951 'deref' call_tmp[1019445]))
        (1019455 'move' call_tmp[1019453](1019458 call bufferCopyRemote[172830] coerce_tmp[1020941] coerce_tmp[1020949] len[1019407]))
        (1019463 call =[954232] remote_buf[1019413] call_tmp[1019453])
      }
      val call_tmp[1019470]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
      {
        const-val call_tmp[1019493]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1019495 'move' call_tmp[1019493](1019498 call +[949685] len[1019407]))
        ref call_tmp[1019501]:_ref(int(64))[936591] "dead after last mention" "maybe param" "reference to a const" "temp"
        (1019503 'move' call_tmp[1019501](1019506 call cachedNumCodepoints[757957] rhs[1019221]))
        const-val coerce_tmp[1021398]:int(64)[13] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
        (1021402 'move' coerce_tmp[1021398](1021400 'deref' call_tmp[1019501]))
        (1019510 call reinitWithOwnedBuffer[1020974] lhs[1019216] remote_buf[1019413] len[1019407] call_tmp[1019493] coerce_tmp[1021398])
      }
    }
    (1019541 return _void[55])
  }
  function on_fn[1019660](ref arg lhs[1781313]:_ref(string)[937958], const  ref arg rhs[1781315]:_ref(string)[937958]) : void[4] "on" "resolved" "fn synchronization free"
  {
    {
      (1019667 call helpMe[1019211] lhs[1781313] rhs[1781315])
    }
    (1019670 return _void[55])
  }
  function on_fn[1030157](const in arg needle[1781349]:__serializeHelper[28089], const  ref arg x[1781351]:_ref(string)[937958], const in arg region[1781353]:range(byteIndex,bounded,false)[1025811], ref arg ret[1781355]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    val needle[2049095]:string[26] "temp"
    ref needle[2049096]:string[26] "temp"
    ref tmp[2049102]:string[26] "temp"
    (2049106 'move' tmp[2049102](2049104 'set reference' needle[2049095]))
    (2049099 call chpl__deserialize[1766908] needle[1781349] tmp[2049102])
    (2049111 'move' needle[2049096](2049109 'set reference' needle[2049095]))
    {
      val localRet[1030170]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1030172 'move' localRet[1030170] -2)
      ref call_tmp[1030177]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030179 'move' call_tmp[1030177](1030182 call buffLen[757905] needle[2049096]))
      const-val nLen[1030185]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1031166]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1031170 'move' coerce_tmp[1031166](1031168 'deref' call_tmp[1030177]))
      (1816097 '=' nLen[1030185] coerce_tmp[1031166])
      (1030187 'noop')
      const-val call_tmp[1030191]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1806024]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1030196 call getView[1031173] x[1781351] region[1781353] ret_tmp[1806024])
      (1806027 'move' call_tmp[1030191] ret_tmp[1806024])
      const-val tmp[1030199]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
      (1030201 'move' tmp[1030199] call_tmp[1030191])
      1
      ref call_tmp[1030209]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1030211 'move' call_tmp[1030209](1086820 '.' tmp[1030199] x0[1084939]))
      const-val view[1030216]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1030218 'move' view[1030216](1086823 'deref' call_tmp[1030209]))
      const-val call_tmp[1030222]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1030224 'move' call_tmp[1030222](1030227 call size[1035808] view[1030216]))
      const-val xLen[1030230]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1030232 'move' xLen[1030230] call_tmp[1030222])
      {
        const-val call_tmp[1030280]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030282 'move' call_tmp[1030280](1030285 call ==[435666] nLen[1030185] 0))
        const-val call_tmp[1030288]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1030290 'move' call_tmp[1030288] call_tmp[1030280])
        if call_tmp[1030288]
        {
          {
            (1030314 call =[435365] localRet[1030170] -1)
          }
        }
      }
      const-val call_tmp[1030369]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030371 'move' call_tmp[1030369](1030374 call >[437710] nLen[1030185] xLen[1030230]))
      const-val call_tmp[1030377]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030379 'move' call_tmp[1030377] call_tmp[1030369])
      if call_tmp[1030377]
      {
        (1030394 call =[435365] localRet[1030170] -1)
      }
      const-val call_tmp[1030407]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030409 'move' call_tmp[1030407](1030412 call ==[435666] localRet[1030170] -2))
      const-val call_tmp[1030415]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1030417 'move' call_tmp[1030415] call_tmp[1030407])
      if call_tmp[1030415]
      {
        (1030432 call =[435365] localRet[1030170] -1)
        const-val call_tmp[1030437]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1802894]:string[26] "temp"
        (1030445 call localize[32889] needle[2049096] ret_tmp[1802894])
        (1802897 'move' call_tmp[1030437] ret_tmp[1802894])
        const localNeedle[1030446]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1030448 'move' localNeedle[1030446] call_tmp[1030437])
        ref call_tmp[1030452]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1030454 'move' call_tmp[1030452](1030457 call buffLen[757905] localNeedle[1030446]))
        const-val needleLen[1030460]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1086869]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1086873 'move' coerce_tmp[1086869](1086871 'deref' call_tmp[1030452]))
        (1030462 'move' needleLen[1030460](1086867 call chpl__initCopy[955351] coerce_tmp[1086869]))
        const-val call_tmp[1030466]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1030468 'move' call_tmp[1030466](1030471 call -[440454] xLen[1030230] nLen[1030185]))
        const-val call_tmp[1030474]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1030476 'move' call_tmp[1030474](1030479 call +[949685] call_tmp[1030466]))
        const-val numPossible[1030482]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1030484 'move' numPossible[1030482] call_tmp[1030474])
        const-val searchSpace[1030488]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1030490]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1030501]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1030503]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806850]:range(int(64),boundedLow,false)[1087584] "temp"
        (1030508 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1806850])
        (1806853 'move' call_tmp[1030503] ret_tmp[1806850])
        const-val ret_tmp[1806964]:range(int(64),bounded,false)[1026833] "temp"
        (1030513 call #[1087944] call_tmp[1030503] numPossible[1030482] ret_tmp[1806964])
        (1806967 'move' tmp[1030501] ret_tmp[1806964])
        (1030516 'move' tmp[1030490] tmp[1030501])
        (1030558 'move' searchSpace[1030488] tmp[1030490])
        {
          val _indexOfInterest[1030568]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1030570]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          (1030572 'move' _iterator[1030570](1030575 call _getIterator[1095339] searchSpace[1030488]))
          {
            val ret[1880671]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1880673]:bool[10] "dead after last mention" "temp"
            const-val this[1880974]:range(int(64),bounded,false)[1026833] "temp"
            (1880979 'move' this[1880974](1880976 '.v' _iterator[1030570] F0_this[1980749]))
            (1880675 'move' _return_tmp_[1880673](1880678 call checkIfIterWillOverflow[1095833] this[1880974] 1))
            val i[1880681]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1880683]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1880685 'move' i[1880681] 0)
            ref call_tmp[1880688]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1880981]:range(int(64),bounded,false)[1026833] "temp"
            (1880986 'move' this[1880981](1880983 '.v' _iterator[1030570] F0_this[1980749]))
            (1880690 'move' call_tmp[1880688](1880693 call _low[1028471] this[1880981]))
            const-val start[1880695]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1880697]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1880699 'move' coerce_tmp[1880697](1880701 'deref' call_tmp[1880688]))
            (1880703 '=' start[1880695] coerce_tmp[1880697])
            (1880706 'noop')
            ref call_tmp[1880707]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1880988]:range(int(64),bounded,false)[1026833] "temp"
            (1880993 'move' this[1880988](1880990 '.v' _iterator[1030570] F0_this[1980749]))
            (1880709 'move' call_tmp[1880707](1880712 call _high[1028679] this[1880988]))
            const end[1880714]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1880716]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1880718 'move' coerce_tmp[1880716](1880720 'deref' call_tmp[1880707]))
            (1880722 '=' end[1880714] coerce_tmp[1880716])
            (1880725 'noop')
            CForLoop[1880726] hazard
            {
              const-val yret[1880741]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1880743]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1880995]:range(int(64),bounded,false)[1026833] "temp"
              (1881000 'move' this[1880995](1880997 '.v' _iterator[1030570] F0_this[1980749]))
              (1880745 'move' call_tmp[1880743](1880748 call chpl_intToIdx[1028499] this[1880995] i[1880681]))
              (1880751 'move' yret[1880741] call_tmp[1880743])
              const-val _yieldedIndex[1880765]:int(64)[13] "temp"
              (1880972 'move' _yieldedIndex[1880765] call_tmp[1880743])
              {
                const-val i[1880767]:int(64)[13] "const" "index var" "insert auto destroy"
                (1880769 'move' i[1880767] _yieldedIndex[1880765])
                {
                  {
                    val _indexOfInterest[1880774]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1880776]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1880778]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1880780]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                    (1880783 call chpl_direct_counted_range_iter[458034] 0 nLen[1030185] ret_tmp[1880780])
                    (1880787 'move' call_tmp[1880778] ret_tmp[1880780])
                    (1880790 'move' _iterator[1880776](1880793 call _getIterator[1103824] call_tmp[1880778]))
                    {
                      val ret[1938394]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1938396]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1938398]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1938400]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1938402]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                      const-val low[1938994]:int(64)[13] "temp"
                      (1938999 'move' low[1938994](1938996 '.v' _iterator[1880776] F0_low[1976900]))
                      const-val count[1939001]:int(64)[13] "temp"
                      (1939006 'move' count[1939001](1939003 '.v' _iterator[1880776] F1_count[1976904]))
                      (1938405 call chpl_direct_counted_range_iter_helper[1102117] low[1938994] count[1939001] ret_tmp[1938402])
                      (1938409 'move' call_tmp[1938400] ret_tmp[1938402])
                      (1938412 'move' _iterator[1938398](1938415 call _getIterator[1103574] call_tmp[1938400]))
                      {
                        val ret[1938418]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                        val call_tmp[1938420]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1938422]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1938424]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1938426]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1938428]:int(64)[13] "temp"
                        (1938430 'move' count[1938428](1938432 '.v' _iterator[1938398] F1_count[1981376]))
                        (1938435 'move' call_tmp[1938426](1938438 call <[948417] count[1938428]))
                        (1938440 'move' tmp[1938424] call_tmp[1938426])
                        (1938443 'move' tmp[1938422] call_tmp[1938426])
                        const-val call_tmp[1938446]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1938448 'move' call_tmp[1938446] call_tmp[1938426])
                        if call_tmp[1938426]
                        {
                          (1938454 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1938457]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1938459]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1938461]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1938463]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1938465]:int(64)[13] "temp"
                        (1938467 'move' count[1938465](1938469 '.v' _iterator[1938398] F1_count[1981376]))
                        (1938472 'move' call_tmp[1938463](1938475 call ==[435666] count[1938465] 0))
                        (1938478 'move' tmp[1938461] call_tmp[1938463])
                        if call_tmp[1938463]
                        {
                          const-val tmp[1938483]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1938485]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1938487]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1938489]:int(64)[13] "temp"
                          (1938491 'move' low[1938489](1938493 '.v' _iterator[1938398] F0_low[1981372]))
                          (1938496 'move' call_tmp[1938487](1938499 call _cast[956053] low[1938489]))
                          const-val call_tmp[1938501]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1938503]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1938505 'move' coerce_tmp[1938503](1938507 'cast' uint(64)[115] 1))
                          (1938510 'move' call_tmp[1938501](1938513 call -[962212] call_tmp[1938487]))
                          const-val call_tmp[1938515]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1938517 'move' call_tmp[1938515](1938520 call _cast[953562] call_tmp[1938501]))
                          const-val ret_tmp[1938522]:2*int(64)[1040075] "temp"
                          const-val low[1938524]:int(64)[13] "temp"
                          (1938526 'move' low[1938524](1938528 '.v' _iterator[1938398] F0_low[1981372]))
                          (1938532 call _build_tuple[1040033] low[1938524] call_tmp[1938515] ret_tmp[1938522])
                          (1938536 'move' tmp[1938483] ret_tmp[1938522])
                          (1938539 'move' tmp[1938459] tmp[1938483])
                        }
                        {
                          const-val tmp[1938543]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1938545]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1938547]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1938549]:int(64)[13] "temp"
                          (1938551 'move' count[1938549](1938553 '.v' _iterator[1938398] F1_count[1981376]))
                          (1938556 'move' call_tmp[1938547] count[1938549])
                          const-val call_tmp[1938559]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1938561]:int(64)[13] "temp"
                          (1938563 'move' count[1938561](1938565 '.v' _iterator[1938398] F1_count[1981376]))
                          (1938568 'move' call_tmp[1938559](1938571 call -[962245] count[1938561]))
                          const-val call_tmp[1938573]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1938575]:int(64)[13] "temp"
                          (1938577 'move' low[1938575](1938579 '.v' _iterator[1938398] F0_low[1981372]))
                          (1938582 'move' call_tmp[1938573](1938585 call +[439674] low[1938575] call_tmp[1938559]))
                          const-val ret_tmp[1938588]:2*int(64)[1040075] "temp"
                          const-val low[1938590]:int(64)[13] "temp"
                          (1938592 'move' low[1938590](1938594 '.v' _iterator[1938398] F0_low[1981372]))
                          (1938598 call _build_tuple[1040033] low[1938590] call_tmp[1938573] ret_tmp[1938588])
                          (1938602 'move' tmp[1938543] ret_tmp[1938588])
                          (1938605 'move' tmp[1938459] tmp[1938543])
                        }
                        (1938609 '=' tmp[1938457] tmp[1938459])
                        (1938612 'noop')
                        1
                        ref call_tmp[1938614]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1938616 'move' call_tmp[1938614](1938618 '.' tmp[1938457] x0[1040071]))
                        const-val start[1938621]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1938623]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1938625 'move' coerce_tmp[1938623](1938627 'deref' call_tmp[1938614]))
                        (1938629 '=' start[1938621] coerce_tmp[1938623])
                        (1938632 'noop')
                        ref call_tmp[1938633]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1938635 'move' call_tmp[1938633](1938637 '.' tmp[1938457] x1[1040073]))
                        const-val end[1938640]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1938642]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1938644 'move' coerce_tmp[1938642](1938646 'deref' call_tmp[1938633]))
                        (1938648 '=' end[1938640] coerce_tmp[1938642])
                        (1938651 'noop')
                        val _indexOfInterest[1938652]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1938654]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1938656]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1938658]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                        (1938661 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1938623] coerce_tmp[1938642] ret_tmp[1938658])
                        (1938665 'move' call_tmp[1938656] ret_tmp[1938658])
                        (1938668 'move' _iterator[1938654](1938671 call _getIterator[1103320] call_tmp[1938656]))
                        {
                          val ret[1938674]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                          val call_tmp[1938676]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1938679 call chpl_range_check_stride[1102863])
                          val i[1938680]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1938682]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1938684 'move' i[1938680] 0)
                          val call_tmp[1938687]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1938689]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1938691]:int(64)[13] "temp"
                          (1938693 'move' low[1938691](1938695 '.v' _iterator[1938654] F0_low[1982870]))
                          (1938698 'move' default_arg_first[1938689](1938701 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1938691]))
                          const-val default_arg_last[1938703]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1938705]:int(64)[13] "temp"
                          (1938707 'move' high[1938705](1938709 '.v' _iterator[1938654] F1_high[1982874]))
                          (1938712 'move' default_arg_last[1938703](1938715 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1938705]))
                          const-val _return_tmp_[1938717]:bool[10] "dead after last mention" "temp"
                          const-val low[1938719]:int(64)[13] "temp"
                          (1938721 'move' low[1938719](1938723 '.v' _iterator[1938654] F0_low[1982870]))
                          const-val high[1938726]:int(64)[13] "temp"
                          (1938728 'move' high[1938726](1938730 '.v' _iterator[1938654] F1_high[1982874]))
                          (1938733 'move' _return_tmp_[1938717](1938736 call chpl_checkIfRangeIterWillOverflow[1096095] low[1938719] high[1938726] 1 default_arg_first[1938689] default_arg_last[1938703] 1))
                          CForLoop[1938743]
                          {
                            const-val yret[1938772]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1938774 'move' yret[1938772] i[1938680])
                            const-val _yieldedIndex[1938777]:int(64)[13] "temp"
                            (1938779 'move' _yieldedIndex[1938777] i[1938680])
                            {
                              const-val i[1938783]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1938785 'move' i[1938783] _yieldedIndex[1938777])
                              const-val yret[1938788]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1938790 'move' yret[1938788] _yieldedIndex[1938777])
                              const-val _yieldedIndex[1938793]:int(64)[13] "temp"
                              (1938795 'move' _yieldedIndex[1938793] _yieldedIndex[1938777])
                              {
                                const-val i[1938799]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1938801 'move' i[1938799] _yieldedIndex[1938793])
                                const-val yret[1938804]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1938806 'move' yret[1938804] _yieldedIndex[1938793])
                                const-val _yieldedIndex[1938842]:int(64)[13] "temp"
                                (1938992 'move' _yieldedIndex[1938842] _yieldedIndex[1938793])
                                {
                                  const-val j[1938844]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1938846 'move' j[1938844] _yieldedIndex[1938842])
                                  {
                                    const-val call_tmp[1938850]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1938852 'move' call_tmp[1938850](1938855 call +[439674] i[1880767] j[1938844]))
                                    const-val call_tmp[1938858]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1938860 'move' call_tmp[1938858](1938863 call orderToIndex[1104059] view[1030216] call_tmp[1938850]))
                                    const-val idx[1938866]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1938868 'move' idx[1938866] call_tmp[1938858])
                                    ref call_tmp[1938871]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1938873]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1938875 'move' _this_tmp_[1938873](1938878 call buff[757983] x[1781351]))
                                    val coerce_tmp[1938880]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1938882 'move' coerce_tmp[1938880](1938884 'deref' _this_tmp_[1938873]))
                                    (1938886 'move' call_tmp[1938871](1938889 call this[954110] coerce_tmp[1938880] idx[1938866]))
                                    ref call_tmp[1938892]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1938894]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1938896 'move' _this_tmp_[1938894](1938899 call buff[757983] localNeedle[1030446]))
                                    val coerce_tmp[1938901]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1938903 'move' coerce_tmp[1938901](1938905 'deref' _this_tmp_[1938894]))
                                    (1938907 'move' call_tmp[1938892](1938910 call this[954110] coerce_tmp[1938901] j[1938844]))
                                    const-val call_tmp[1938913]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1938915]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1938917 'move' coerce_tmp[1938915](1938919 'deref' call_tmp[1938871]))
                                    const-val coerce_tmp[1938921]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1938923 'move' coerce_tmp[1938921](1938925 'deref' call_tmp[1938892]))
                                    (1938927 'move' call_tmp[1938913](1938930 call !=[436072] coerce_tmp[1938915] coerce_tmp[1938921]))
                                    const-val call_tmp[1938933]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1938935 'move' call_tmp[1938933] call_tmp[1938913])
                                    if call_tmp[1938933]
                                    {
                                      (1938983 call _freeIterator[1103493] _iterator[1938654])
                                      (1938986 call chpl__autoDestroy[1508492] tmp[1938457])
                                      (1938989 call _freeIterator[1103743] _iterator[1938398])
                                      break _breakLabel[1880935] _breakLabel[1880935]
                                    }
                                    const-val call_tmp[1938943]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1938945 'move' call_tmp[1938943](1938948 call -[962245] nLen[1030185]))
                                    const-val call_tmp[1938950]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1938952 'move' call_tmp[1938950](1938955 call ==[435666] j[1938844] call_tmp[1938943]))
                                    const-val call_tmp[1938958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1938960 'move' call_tmp[1938958] call_tmp[1938950])
                                    if call_tmp[1938958]
                                    {
                                      {
                                        const-val call_tmp[1938966]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1938968 'move' call_tmp[1938966](1938971 call orderToIndex[1104059] view[1030216] i[1880767]))
                                        (1938975 call =[435365] localRet[1030170] call_tmp[1938966])
                                      }
                                    }
                                  }
                                  label _continueLabel[1938979]
                                }
                              }
                            }
                            {
                              const-val low[1938745]:int(64)[13] "temp"
                              (1938747 'move' low[1938745](1938749 '.v' _iterator[1938654] F0_low[1982870]))
                              (1938752 '=' i[1938680] low[1938745])
                            }
                            {
                              const-val high[1938756]:int(64)[13] "temp"
                              (1938758 'move' high[1938756](1938760 '.v' _iterator[1938654] F1_high[1982874]))
                              (1938763 '<=' i[1938680] high[1938756])
                            }
                            {
                              val call_tmp[1938767]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1938769 '+=' i[1938680] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1938825]
                        }
                        (1938828 call _freeIterator[1103493] _iterator[1938654])
                        (1938831 call chpl__autoDestroy[1508492] tmp[1938457])
                        label _endchpl_direct_counted_range_iter_helper[1938833]
                      }
                      (1938836 call _freeIterator[1103743] _iterator[1938398])
                      label _endchpl_direct_counted_range_iter[1938838]
                    }
                    label _breakLabel[1880935]
                    (1880938 call _freeIterator[1103993] _iterator[1880776])
                  }
                  const-val tmp[1880940]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1880942]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1880944]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1880946 'move' call_tmp[1880944](1880949 call !=[436050] localRet[1030170] -1))
                  (1880952 'move' tmp[1880942] call_tmp[1880944])
                  (1880955 'move' tmp[1880940] tmp[1880942])
                  const-val call_tmp[1880958]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1880960 'move' call_tmp[1880958] tmp[1880940])
                  if call_tmp[1880958]
                  {
                    break _breakLabel[1030859] _breakLabel[1030859]
                  }
                }
                label _continueLabel[1880968]
              }
              {
                (1880728 '=' i[1880681] coerce_tmp[1880697])
              }
              {
                (1880732 '<=' i[1880681] end[1880714])
              }
              {
                val call_tmp[1880736]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1880738 '+=' i[1880681] 1)
              }
            }
            label _endthese[1880761]
          }
          label _breakLabel[1030859]
          (1816108 call _freeIterator[1102025] _iterator[1030570])
        }
        (1816111 call chpl__autoDestroy[1508195] searchSpace[1030488])
        (1816114 call chpl__autoDestroy[1514564] call_tmp[1030503])
        (1816117 call chpl__autoDestroy[1435320] localNeedle[1030446])
      }
      (1030879 call =[435365] ret[1781355] localRet[1030170])
      (1816121 call chpl__autoDestroy[1508195] view[1030216])
      (1816124 call chpl__autoDestroy[1514519] tmp[1030199])
    }
    (2049113 call chpl__autoDestroy[1435507] needle[1781349])
    (2049116 call chpl__autoDestroy[1435320] needle[2049095])
    (1030885 return _void[55])
  }
  function simpleCaseHelper[1031293](const in arg r[1781357]:range(byteIndex,bounded,false)[1025811], const  ref arg x[1781359]:_ref(string)[937958], ref arg _retArg[1806054]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1031296]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1031314]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1031323]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1806060]:range(int(64),bounded,false)[1026833] "temp"
    (1031328 call _cast[1032502] r[1781357] ret_tmp[1806060])
    (1806063 'move' call_tmp[1031323] ret_tmp[1806060])
    const-val intR[1031331]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1031333 'move' intR[1031331] call_tmp[1031323])
    {
      const-val call_tmp[1031346]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802670]:range(int(64),bounded,false)[1026833] "temp"
      (1031351 call byteIndices[31068] x[1781359] ret_tmp[1802670])
      (1802673 'move' call_tmp[1031346] ret_tmp[1802670])
      const-val call_tmp[1031354]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031356 'move' call_tmp[1031354](1031362 call boundsCheck[1033393] call_tmp[1031346] intR[1031331]))
      const-val call_tmp[1031364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031366 'move' call_tmp[1031364](1031369 call ![7494] call_tmp[1031354]))
      const-val call_tmp[1031371]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1031373 'move' call_tmp[1031371] call_tmp[1031364])
      if call_tmp[1031371]
      {
        val call_tmp[1031380]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1031410]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1031412 'move' call_tmp[1031410](1031415 call numBytes[32810] x[1781359]))
        (1031419 call halt[1042975] "range " r[1781357] " out of bounds for string with length " call_tmp[1031410])
      }
      (1816128 call chpl__autoDestroy[1508195] call_tmp[1031346])
    }
    val call_tmp[1031426]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1031451]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802676]:range(int(64),bounded,false)[1026833] "temp"
      (1031456 call byteIndices[31068] x[1781359] ret_tmp[1802676])
      (1802679 'move' call_tmp[1031451] ret_tmp[1802676])
      const-val call_tmp[1031459]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806132]:range(int(64),bounded,false)[1026833] "temp"
      (1031464 call this[1037467] intR[1031331] call_tmp[1031451] ret_tmp[1806132])
      (1806135 'move' call_tmp[1031459] ret_tmp[1806132])
      const-val call_tmp[1031473]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806772]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1031478 call _build_tuple[1084901] call_tmp[1031459] -1 ret_tmp[1806772])
      (1806775 'move' call_tmp[1031473] ret_tmp[1806772])
      (1031481 'move' ret[1031296] call_tmp[1031473])
      (1816131 call chpl__autoDestroy[1508195] call_tmp[1031459])
      (1816134 call chpl__autoDestroy[1508195] call_tmp[1031451])
      (1816137 call chpl__autoDestroy[1508195] intR[1031331])
      gotoReturn _end_simpleCaseHelper[1031538] _end_simpleCaseHelper[1031538]
    }
    (1816140 call chpl__autoDestroy[1508195] intR[1031331])
    label _end_simpleCaseHelper[1031538]
    (1806056 '=' _retArg[1806054] ret[1031296])
    (1806058 return _void[55])
  }
  function simpleCaseHelper[1112286](const in arg r[1781475]:range(int(64),bounded,false)[1026833], const  ref arg x[1781477]:_ref(string)[937958], ref arg _retArg[1807283]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1112289]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1112307]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1112316]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807289]:range(int(64),bounded,false)[1026833] "temp"
    (1113439 call _removed_cast[1113442] r[1781475] ret_tmp[1807289])
    (1807292 'move' call_tmp[1112316] ret_tmp[1807289])
    const-val intR[1112324]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
    (1112326 'move' intR[1112324] call_tmp[1112316])
    {
      const-val call_tmp[1112339]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802682]:range(int(64),bounded,false)[1026833] "temp"
      (1112344 call byteIndices[31068] x[1781477] ret_tmp[1802682])
      (1802685 'move' call_tmp[1112339] ret_tmp[1802682])
      const-val call_tmp[1112347]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112349 'move' call_tmp[1112347](1112355 call boundsCheck[1033393] call_tmp[1112339] intR[1112324]))
      const-val call_tmp[1112357]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112359 'move' call_tmp[1112357](1112362 call ![7494] call_tmp[1112347]))
      const-val call_tmp[1112364]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112366 'move' call_tmp[1112364] call_tmp[1112357])
      if call_tmp[1112364]
      {
        val call_tmp[1112373]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1112403]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1112405 'move' call_tmp[1112403](1112408 call numBytes[32810] x[1781477]))
        (1112412 call halt[1113479] "range " r[1781475] " out of bounds for string with length " call_tmp[1112403])
      }
      (1817630 call chpl__autoDestroy[1508195] call_tmp[1112339])
    }
    val call_tmp[1112419]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1112483]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802688]:range(int(64),bounded,false)[1026833] "temp"
      (1112488 call byteIndices[31068] x[1781477] ret_tmp[1802688])
      (1802691 'move' call_tmp[1112483] ret_tmp[1802688])
      const-val call_tmp[1112491]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1806144]:range(int(64),bounded,false)[1026833] "temp"
      (1112496 call this[1037467] intR[1112324] call_tmp[1112483] ret_tmp[1806144])
      (1806147 'move' call_tmp[1112491] ret_tmp[1806144])
      const-val retRange[1112498]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1112500 'move' retRange[1112498] call_tmp[1112491])
      const-val call_tmp[1112505]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1112507 'move' call_tmp[1112505](1112510 call size[1035808] retRange[1112498]))
      const-val call_tmp[1112513]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806778]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1112518 call _build_tuple[1084901] retRange[1112498] call_tmp[1112505] ret_tmp[1806778])
      (1806781 'move' call_tmp[1112513] ret_tmp[1806778])
      (1112521 'move' ret[1112289] call_tmp[1112513])
      (1817633 call chpl__autoDestroy[1508195] retRange[1112498])
      (1817636 call chpl__autoDestroy[1508195] call_tmp[1112483])
      (1817639 call chpl__autoDestroy[1508195] intR[1112324])
      gotoReturn _end_simpleCaseHelper[1112531] _end_simpleCaseHelper[1112531]
    }
    (1817642 call chpl__autoDestroy[1508195] intR[1112324])
    label _end_simpleCaseHelper[1112531]
    (1807285 '=' _retArg[1807283] ret[1112289])
    (1807287 return _void[55])
  }
  function simpleCaseHelper[1126419](const in arg r[1781479]:range(int(64),boundedLow,false)[1087584], const  ref arg x[1781481]:_ref(string)[937958], ref arg _retArg[1807577]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1126422]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1126440]:range(int(64),boundedLow,false)[1087584] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1126449]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807583]:range(int(64),boundedLow,false)[1087584] "temp"
    (1127572 call _removed_cast[1127575] r[1781479] ret_tmp[1807583])
    (1807586 'move' call_tmp[1126449] ret_tmp[1807583])
    const-val intR[1126457]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "const" "insert auto destroy"
    (1126459 'move' intR[1126457] call_tmp[1126449])
    {
      const-val call_tmp[1126472]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802700]:range(int(64),bounded,false)[1026833] "temp"
      (1126477 call byteIndices[31068] x[1781481] ret_tmp[1802700])
      (1802703 'move' call_tmp[1126472] ret_tmp[1802700])
      const-val call_tmp[1126480]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126482 'move' call_tmp[1126480](1126488 call boundsCheck[1127640] call_tmp[1126472] intR[1126457]))
      const-val call_tmp[1126490]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126492 'move' call_tmp[1126490](1126495 call ![7494] call_tmp[1126480]))
      const-val call_tmp[1126497]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126499 'move' call_tmp[1126497] call_tmp[1126490])
      if call_tmp[1126497]
      {
        val call_tmp[1126506]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1126536]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1126538 'move' call_tmp[1126536](1126541 call numBytes[32810] x[1781481]))
        (1126545 call halt[1128303] "range " r[1781479] " out of bounds for string with length " call_tmp[1126536])
      }
      (1817835 call chpl__autoDestroy[1508195] call_tmp[1126472])
    }
    val call_tmp[1126552]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1126616]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802706]:range(int(64),bounded,false)[1026833] "temp"
      (1126621 call byteIndices[31068] x[1781481] ret_tmp[1802706])
      (1802709 'move' call_tmp[1126616] ret_tmp[1802706])
      const-val call_tmp[1126624]:range(int(64),bounded,false)[1026833] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1807641]:range(int(64),bounded,false)[1026833] "temp"
      (1126629 call this[1138988] intR[1126457] call_tmp[1126616] ret_tmp[1807641])
      (1807644 'move' call_tmp[1126624] ret_tmp[1807641])
      const-val retRange[1126631]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1126633 'move' retRange[1126631] call_tmp[1126624])
      const-val call_tmp[1126638]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
      (1126640 'move' call_tmp[1126638](1126643 call size[1035808] retRange[1126631]))
      const-val call_tmp[1126646]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806796]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1126651 call _build_tuple[1084901] retRange[1126631] call_tmp[1126638] ret_tmp[1806796])
      (1806799 'move' call_tmp[1126646] ret_tmp[1806796])
      (1126654 'move' ret[1126422] call_tmp[1126646])
      (1817838 call chpl__autoDestroy[1508195] retRange[1126631])
      (1817841 call chpl__autoDestroy[1508195] call_tmp[1126616])
      (1817844 call chpl__autoDestroy[1514564] intR[1126457])
      gotoReturn _end_simpleCaseHelper[1126664] _end_simpleCaseHelper[1126664]
    }
    (1817847 call chpl__autoDestroy[1514564] intR[1126457])
    label _end_simpleCaseHelper[1126664]
    (1807579 '=' _retArg[1807577] ret[1126422])
    (1807581 return _void[55])
  }
  function simpleCaseHelper[1144580](const in arg r[1781483]:range(byteIndex,boundedLow,false)[1143422], const  ref arg x[1781485]:_ref(string)[937958], ref arg _retArg[1807793]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1144583]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1144601]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1144610]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1807799]:range(int(64),boundedLow,false)[1087584] "temp"
    (1144615 call _cast[1145832] r[1781483] ret_tmp[1807799])
    (1807802 'move' call_tmp[1144610] ret_tmp[1807799])
    const-val intR[1144618]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "const" "insert auto destroy"
    (1144620 'move' intR[1144618] call_tmp[1144610])
    {
      const-val call_tmp[1144633]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802712]:range(int(64),bounded,false)[1026833] "temp"
      (1144638 call byteIndices[31068] x[1781485] ret_tmp[1802712])
      (1802715 'move' call_tmp[1144633] ret_tmp[1802712])
      const-val call_tmp[1144641]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144643 'move' call_tmp[1144641](1144649 call boundsCheck[1127640] call_tmp[1144633] intR[1144618]))
      const-val call_tmp[1144651]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144653 'move' call_tmp[1144651](1144656 call ![7494] call_tmp[1144641]))
      const-val call_tmp[1144658]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1144660 'move' call_tmp[1144658] call_tmp[1144651])
      if call_tmp[1144658]
      {
        val call_tmp[1144667]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1144697]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1144699 'move' call_tmp[1144697](1144702 call numBytes[32810] x[1781485]))
        (1144706 call halt[1146474] "range " r[1781483] " out of bounds for string with length " call_tmp[1144697])
      }
      (1817951 call chpl__autoDestroy[1508195] call_tmp[1144633])
    }
    val call_tmp[1144713]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1144738]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802718]:range(int(64),bounded,false)[1026833] "temp"
      (1144743 call byteIndices[31068] x[1781485] ret_tmp[1802718])
      (1802721 'move' call_tmp[1144738] ret_tmp[1802718])
      const-val call_tmp[1144746]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1807647]:range(int(64),bounded,false)[1026833] "temp"
      (1144751 call this[1138988] intR[1144618] call_tmp[1144738] ret_tmp[1807647])
      (1807650 'move' call_tmp[1144746] ret_tmp[1807647])
      const-val call_tmp[1144760]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806808]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1144765 call _build_tuple[1084901] call_tmp[1144746] -1 ret_tmp[1806808])
      (1806811 'move' call_tmp[1144760] ret_tmp[1806808])
      (1144768 'move' ret[1144583] call_tmp[1144760])
      (1817954 call chpl__autoDestroy[1508195] call_tmp[1144746])
      (1817957 call chpl__autoDestroy[1508195] call_tmp[1144738])
      (1817960 call chpl__autoDestroy[1514564] intR[1144618])
      gotoReturn _end_simpleCaseHelper[1144825] _end_simpleCaseHelper[1144825]
    }
    (1817963 call chpl__autoDestroy[1514564] intR[1144618])
    label _end_simpleCaseHelper[1144825]
    (1807795 '=' _retArg[1807793] ret[1144583])
    (1807797 return _void[55])
  }
  function on_fn[1181870](const in arg needle[1781499]:__serializeHelper[28089], const  ref arg x[1781501]:_ref(string)[937958], const in arg region[1781503]:range(byteIndex,boundedLow,false)[1143422], ref arg ret[1781505]:_ref(int(64))[936591]) : void[4] "on" "resolved"
  {
    val needle[2049634]:string[26] "temp"
    ref needle[2049635]:string[26] "temp"
    ref tmp[2049641]:string[26] "temp"
    (2049645 'move' tmp[2049641](2049643 'set reference' needle[2049634]))
    (2049638 call chpl__deserialize[1766908] needle[1781499] tmp[2049641])
    (2049650 'move' needle[2049635](2049648 'set reference' needle[2049634]))
    {
      val localRet[1181883]:int(64)[13] "dead at end of block" "insert auto destroy"
      (1181885 'move' localRet[1181883] -2)
      ref call_tmp[1181890]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181892 'move' call_tmp[1181890](1181895 call buffLen[757905] needle[2049635]))
      const-val nLen[1181898]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      const-val coerce_tmp[1182665]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
      (1182669 'move' coerce_tmp[1182665](1182667 'deref' call_tmp[1181890]))
      (1820120 '=' nLen[1181898] coerce_tmp[1182665])
      (1181900 'noop')
      const-val call_tmp[1181904]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1807769]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1181909 call getView[1144460] x[1781501] region[1781503] ret_tmp[1807769])
      (1807772 'move' call_tmp[1181904] ret_tmp[1807769])
      const-val tmp[1181912]:(range(int(64),bounded,false),int(64))[1084943] "dead at end of block" "const" "insert auto destroy" "temp"
      (1181914 'move' tmp[1181912] call_tmp[1181904])
      1
      ref call_tmp[1181922]:_ref(range(int(64),bounded,false))[1026877] "dead at end of block" "maybe param" "reference to a const" "temp"
      (1181924 'move' call_tmp[1181922](1182680 '.' tmp[1181912] x0[1084939]))
      const-val view[1181929]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
      (1181931 'move' view[1181929](1182683 'deref' call_tmp[1181922]))
      const-val call_tmp[1181935]:int(64)[13] "dead at end of block" "maybe param" "temp"
      (1181937 'move' call_tmp[1181935](1181940 call size[1035808] view[1181929]))
      const-val xLen[1181943]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
      (1181945 'move' xLen[1181943] call_tmp[1181935])
      {
        const-val call_tmp[1181993]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1181995 'move' call_tmp[1181993](1181998 call ==[435666] nLen[1181898] 0))
        const-val call_tmp[1182001]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
        (1182003 'move' call_tmp[1182001] call_tmp[1181993])
        if call_tmp[1182001]
        {
          {
            (1182027 call =[435365] localRet[1181883] -1)
          }
        }
      }
      const-val call_tmp[1182082]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182084 'move' call_tmp[1182082](1182087 call >[437710] nLen[1181898] xLen[1181943]))
      const-val call_tmp[1182090]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182092 'move' call_tmp[1182090] call_tmp[1182082])
      if call_tmp[1182090]
      {
        (1182107 call =[435365] localRet[1181883] -1)
      }
      const-val call_tmp[1182120]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182122 'move' call_tmp[1182120](1182125 call ==[435666] localRet[1181883] -2))
      const-val call_tmp[1182128]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1182130 'move' call_tmp[1182128] call_tmp[1182120])
      if call_tmp[1182128]
      {
        (1182145 call =[435365] localRet[1181883] -1)
        const-val call_tmp[1182150]:string[26] "dead at end of block" "maybe param" "temp"
        const-val ret_tmp[1802960]:string[26] "temp"
        (1182158 call localize[32889] needle[2049635] ret_tmp[1802960])
        (1802963 'move' call_tmp[1182150] ret_tmp[1802960])
        const localNeedle[1182159]:string[26] "dead at end of block" "const" "insert auto destroy"
        (1182161 'move' localNeedle[1182159] call_tmp[1182150])
        ref call_tmp[1182165]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
        (1182167 'move' call_tmp[1182165](1182170 call buffLen[757905] localNeedle[1182159]))
        const-val needleLen[1182173]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        const-val coerce_tmp[1182729]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
        (1182733 'move' coerce_tmp[1182729](1182731 'deref' call_tmp[1182165]))
        (1182175 'move' needleLen[1182173](1182727 call chpl__initCopy[955351] coerce_tmp[1182729]))
        const-val call_tmp[1182179]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
        (1182181 'move' call_tmp[1182179](1182184 call -[440454] xLen[1181943] nLen[1181898]))
        const-val call_tmp[1182187]:int(64)[13] "dead at end of block" "maybe param" "temp"
        (1182189 'move' call_tmp[1182187](1182192 call +[949685] call_tmp[1182179]))
        const-val numPossible[1182195]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
        (1182197 'move' numPossible[1182195] call_tmp[1182187])
        const-val searchSpace[1182201]:range(int(64),bounded,false)[1026833] "dead at end of block" "const" "insert auto destroy"
        const-val tmp[1182203]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val tmp[1182214]:range(int(64),bounded,false)[1026833] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
        const-val call_tmp[1182216]:range(int(64),boundedLow,false)[1087584] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
        const-val ret_tmp[1806886]:range(int(64),boundedLow,false)[1087584] "temp"
        (1182221 call chpl_build_low_bounded_range[1086977] 0 ret_tmp[1806886])
        (1806889 'move' call_tmp[1182216] ret_tmp[1806886])
        const-val ret_tmp[1806982]:range(int(64),bounded,false)[1026833] "temp"
        (1182226 call #[1087944] call_tmp[1182216] numPossible[1182195] ret_tmp[1806982])
        (1806985 'move' tmp[1182214] ret_tmp[1806982])
        (1182229 'move' tmp[1182203] tmp[1182214])
        (1182271 'move' searchSpace[1182201] tmp[1182203])
        {
          val _indexOfInterest[1182281]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
          val _iterator[1182283]:_ic_these_range_int64_t_bounded_F[1096722] "dead at end of block" "expr temp" "temp"
          (1182285 'move' _iterator[1182283](1182288 call _getIterator[1095339] searchSpace[1182201]))
          {
            val ret[1884373]:_ir_these_range_int64_t_bounded_F[1096728] "dead after last mention" "RVV" "temp"
            const-val _return_tmp_[1884375]:bool[10] "dead after last mention" "temp"
            const-val this[1884676]:range(int(64),bounded,false)[1026833] "temp"
            (1884681 'move' this[1884676](1884678 '.v' _iterator[1182283] F0_this[1980749]))
            (1884377 'move' _return_tmp_[1884375](1884380 call checkIfIterWillOverflow[1095833] this[1884676] 1))
            val i[1884383]:int(64)[13] "dead at end of block" "insert auto destroy"
            val call_tmp[1884385]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
            (1884387 'move' i[1884383] 0)
            ref call_tmp[1884390]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1884683]:range(int(64),bounded,false)[1026833] "temp"
            (1884688 'move' this[1884683](1884685 '.v' _iterator[1182283] F0_this[1980749]))
            (1884392 'move' call_tmp[1884390](1884395 call _low[1028471] this[1884683]))
            const-val start[1884397]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1884399]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1884401 'move' coerce_tmp[1884399](1884403 'deref' call_tmp[1884390]))
            (1884405 '=' start[1884397] coerce_tmp[1884399])
            (1884408 'noop')
            ref call_tmp[1884409]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const field of 'this'" "reference to a const" "temp"
            const-val this[1884690]:range(int(64),bounded,false)[1026833] "temp"
            (1884695 'move' this[1884690](1884692 '.v' _iterator[1182283] F0_this[1980749]))
            (1884411 'move' call_tmp[1884409](1884414 call _high[1028679] this[1884690]))
            const end[1884416]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
            const-val coerce_tmp[1884418]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
            (1884420 'move' coerce_tmp[1884418](1884422 'deref' call_tmp[1884409]))
            (1884424 '=' end[1884416] coerce_tmp[1884418])
            (1884427 'noop')
            CForLoop[1884428] hazard
            {
              const-val yret[1884443]:int(64)[13] "dead after last mention" "YVV" "temp"
              const-val call_tmp[1884445]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
              const-val this[1884697]:range(int(64),bounded,false)[1026833] "temp"
              (1884702 'move' this[1884697](1884699 '.v' _iterator[1182283] F0_this[1980749]))
              (1884447 'move' call_tmp[1884445](1884450 call chpl_intToIdx[1028499] this[1884697] i[1884383]))
              (1884453 'move' yret[1884443] call_tmp[1884445])
              const-val _yieldedIndex[1884467]:int(64)[13] "temp"
              (1884674 'move' _yieldedIndex[1884467] call_tmp[1884445])
              {
                const-val i[1884469]:int(64)[13] "const" "index var" "insert auto destroy"
                (1884471 'move' i[1884469] _yieldedIndex[1884467])
                {
                  {
                    val _indexOfInterest[1884476]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                    val _iterator[1884478]:_ic_chpl_direct_counted_range_iter[1103809] "dead at end of block" "expr temp" "temp"
                    const-val call_tmp[1884480]:_ir_chpl_direct_counted_range_iter[1103815] "dead at end of block" "expr temp" "maybe param" "temp"
                    const-val ret_tmp[1884482]:_ir_chpl_direct_counted_range_iter[1103815] "temp"
                    (1884485 call chpl_direct_counted_range_iter[458034] 0 nLen[1181898] ret_tmp[1884482])
                    (1884489 'move' call_tmp[1884480] ret_tmp[1884482])
                    (1884492 'move' _iterator[1884478](1884495 call _getIterator[1103824] call_tmp[1884480]))
                    {
                      val ret[1940885]:_ir_chpl_direct_counted_range_iter[1103815] "dead after last mention" "RVV" "temp"
                      val _indexOfInterest[1940887]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                      val _iterator[1940889]:_ic_chpl_direct_counted_range_iter_helper[1103559] "dead at end of block" "expr temp" "temp"
                      const-val call_tmp[1940891]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead at end of block" "expr temp" "maybe param" "temp"
                      const-val ret_tmp[1940893]:_ir_chpl_direct_counted_range_iter_helper[1103565] "temp"
                      const-val low[1941485]:int(64)[13] "temp"
                      (1941490 'move' low[1941485](1941487 '.v' _iterator[1884478] F0_low[1976900]))
                      const-val count[1941492]:int(64)[13] "temp"
                      (1941497 'move' count[1941492](1941494 '.v' _iterator[1884478] F1_count[1976904]))
                      (1940896 call chpl_direct_counted_range_iter_helper[1102117] low[1941485] count[1941492] ret_tmp[1940893])
                      (1940900 'move' call_tmp[1940891] ret_tmp[1940893])
                      (1940903 'move' _iterator[1940889](1940906 call _getIterator[1103574] call_tmp[1940891]))
                      {
                        val ret[1940909]:_ir_chpl_direct_counted_range_iter_helper[1103565] "dead after last mention" "RVV" "temp"
                        val call_tmp[1940911]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                        const-val tmp[1940913]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                        const-val tmp[1940915]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                        const-val call_tmp[1940917]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1940919]:int(64)[13] "temp"
                        (1940921 'move' count[1940919](1940923 '.v' _iterator[1940889] F1_count[1981376]))
                        (1940926 'move' call_tmp[1940917](1940929 call <[948417] count[1940919]))
                        (1940931 'move' tmp[1940915] call_tmp[1940917])
                        (1940934 'move' tmp[1940913] call_tmp[1940917])
                        const-val call_tmp[1940937]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        (1940939 'move' call_tmp[1940937] call_tmp[1940917])
                        if call_tmp[1940917]
                        {
                          (1940945 call boundsCheckHalt[210185] "With a negative count, the range must have a last index.")
                        }
                        const-val tmp[1940948]:2*int(64)[1040075] "dead at end of block" "const" "insert auto destroy" "temp"
                        val tmp[1940950]:2*int(64)[1040075] "dead at end of block" "expr temp" "if-expr result" "insert auto destroy" "maybe copy elided" "temp"
                        const-val tmp[1940952]:bool[10] "dead after last mention" "maybe param" "temp"
                        const-val call_tmp[1940954]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                        const-val count[1940956]:int(64)[13] "temp"
                        (1940958 'move' count[1940956](1940960 '.v' _iterator[1940889] F1_count[1981376]))
                        (1940963 'move' call_tmp[1940954](1940966 call ==[435666] count[1940956] 0))
                        (1940969 'move' tmp[1940952] call_tmp[1940954])
                        if call_tmp[1940954]
                        {
                          const-val tmp[1940974]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1940976]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1940978]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1940980]:int(64)[13] "temp"
                          (1940982 'move' low[1940980](1940984 '.v' _iterator[1940889] F0_low[1981372]))
                          (1940987 'move' call_tmp[1940978](1940990 call _cast[956053] low[1940980]))
                          const-val call_tmp[1940992]:uint(64)[115] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val coerce_tmp[1940994]:uint(64)[115] "dead at end of block" "coerce temp" "insert auto destroy" "temp"
                          (1940996 'move' coerce_tmp[1940994](1940998 'cast' uint(64)[115] 1))
                          (1941001 'move' call_tmp[1940992](1941004 call -[962212] call_tmp[1940978]))
                          const-val call_tmp[1941006]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          (1941008 'move' call_tmp[1941006](1941011 call _cast[953562] call_tmp[1940992]))
                          const-val ret_tmp[1941013]:2*int(64)[1040075] "temp"
                          const-val low[1941015]:int(64)[13] "temp"
                          (1941017 'move' low[1941015](1941019 '.v' _iterator[1940889] F0_low[1981372]))
                          (1941023 call _build_tuple[1040033] low[1941015] call_tmp[1941006] ret_tmp[1941013])
                          (1941027 'move' tmp[1940974] ret_tmp[1941013])
                          (1941030 'move' tmp[1940950] tmp[1940974])
                        }
                        {
                          const-val tmp[1941034]:2*int(64)[1040075] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "no auto destroy" "temp"
                          val call_tmp[1941036]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val call_tmp[1941038]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1941040]:int(64)[13] "temp"
                          (1941042 'move' count[1941040](1941044 '.v' _iterator[1940889] F1_count[1981376]))
                          (1941047 'move' call_tmp[1941038] count[1941040])
                          const-val call_tmp[1941050]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val count[1941052]:int(64)[13] "temp"
                          (1941054 'move' count[1941052](1941056 '.v' _iterator[1940889] F1_count[1981376]))
                          (1941059 'move' call_tmp[1941050](1941062 call -[962245] count[1941052]))
                          const-val call_tmp[1941064]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                          const-val low[1941066]:int(64)[13] "temp"
                          (1941068 'move' low[1941066](1941070 '.v' _iterator[1940889] F0_low[1981372]))
                          (1941073 'move' call_tmp[1941064](1941076 call +[439674] low[1941066] call_tmp[1941050]))
                          const-val ret_tmp[1941079]:2*int(64)[1040075] "temp"
                          const-val low[1941081]:int(64)[13] "temp"
                          (1941083 'move' low[1941081](1941085 '.v' _iterator[1940889] F0_low[1981372]))
                          (1941089 call _build_tuple[1040033] low[1941081] call_tmp[1941064] ret_tmp[1941079])
                          (1941093 'move' tmp[1941034] ret_tmp[1941079])
                          (1941096 'move' tmp[1940950] tmp[1941034])
                        }
                        (1941100 '=' tmp[1940948] tmp[1940950])
                        (1941103 'noop')
                        1
                        ref call_tmp[1941105]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1941107 'move' call_tmp[1941105](1941109 '.' tmp[1940948] x0[1040071]))
                        const-val start[1941112]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1941114]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1941116 'move' coerce_tmp[1941114](1941118 'deref' call_tmp[1941105]))
                        (1941120 '=' start[1941112] coerce_tmp[1941114])
                        (1941123 'noop')
                        ref call_tmp[1941124]:_ref(int(64))[936591] "dead at end of block" "maybe param" "reference to a const" "temp"
                        (1941126 'move' call_tmp[1941124](1941128 '.' tmp[1940948] x1[1040073]))
                        const-val end[1941131]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                        const-val coerce_tmp[1941133]:int(64)[13] "dead at end of block" "coerce temp" "insert auto destroy" "maybe copy elided" "temp"
                        (1941135 'move' coerce_tmp[1941133](1941137 'deref' call_tmp[1941124]))
                        (1941139 '=' end[1941131] coerce_tmp[1941133])
                        (1941142 'noop')
                        val _indexOfInterest[1941143]:int(64)[13] "dead at end of block" "an _indexOfInterest or chpl__followIdx variable" "temp"
                        val _iterator[1941145]:_ic_chpl_direct_param_stride_range_iter[1103305] "dead at end of block" "expr temp" "temp"
                        const-val call_tmp[1941147]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead at end of block" "expr temp" "maybe param" "temp"
                        const-val ret_tmp[1941149]:_ir_chpl_direct_param_stride_range_iter[1103311] "temp"
                        (1941152 call chpl_direct_param_stride_range_iter[1102543] coerce_tmp[1941114] coerce_tmp[1941133] ret_tmp[1941149])
                        (1941156 'move' call_tmp[1941147] ret_tmp[1941149])
                        (1941159 'move' _iterator[1941145](1941162 call _getIterator[1103320] call_tmp[1941147]))
                        {
                          val ret[1941165]:_ir_chpl_direct_param_stride_range_iter[1103311] "dead after last mention" "RVV" "temp"
                          val call_tmp[1941167]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1941170 call chpl_range_check_stride[1102863])
                          val i[1941171]:int(64)[13] "dead at end of block" "insert auto destroy"
                          val call_tmp[1941173]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          (1941175 'move' i[1941171] 0)
                          val call_tmp[1941178]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                          const-val default_arg_first[1941180]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val low[1941182]:int(64)[13] "temp"
                          (1941184 'move' low[1941182](1941186 '.v' _iterator[1941145] F0_low[1982870]))
                          (1941189 'move' default_arg_first[1941180](1941192 call chpl_checkIfRangeIterWillOverflow_default_first[1103217] low[1941182]))
                          const-val default_arg_last[1941194]:int(64)[13] "dead after last mention" "default actual temp" "expr temp" "maybe param" "suppress lvalue error" "temp"
                          const-val high[1941196]:int(64)[13] "temp"
                          (1941198 'move' high[1941196](1941200 '.v' _iterator[1941145] F1_high[1982874]))
                          (1941203 'move' default_arg_last[1941194](1941206 call chpl_checkIfRangeIterWillOverflow_default_last[1103245] high[1941196]))
                          const-val _return_tmp_[1941208]:bool[10] "dead after last mention" "temp"
                          const-val low[1941210]:int(64)[13] "temp"
                          (1941212 'move' low[1941210](1941214 '.v' _iterator[1941145] F0_low[1982870]))
                          const-val high[1941217]:int(64)[13] "temp"
                          (1941219 'move' high[1941217](1941221 '.v' _iterator[1941145] F1_high[1982874]))
                          (1941224 'move' _return_tmp_[1941208](1941227 call chpl_checkIfRangeIterWillOverflow[1096095] low[1941210] high[1941217] 1 default_arg_first[1941180] default_arg_last[1941194] 1))
                          CForLoop[1941234]
                          {
                            const-val yret[1941263]:int(64)[13] "dead after last mention" "YVV" "temp"
                            (1941265 'move' yret[1941263] i[1941171])
                            const-val _yieldedIndex[1941268]:int(64)[13] "temp"
                            (1941270 'move' _yieldedIndex[1941268] i[1941171])
                            {
                              const-val i[1941274]:int(64)[13] "const" "index var" "insert auto destroy"
                              (1941276 'move' i[1941274] _yieldedIndex[1941268])
                              const-val yret[1941279]:int(64)[13] "dead after last mention" "YVV" "temp"
                              (1941281 'move' yret[1941279] _yieldedIndex[1941268])
                              const-val _yieldedIndex[1941284]:int(64)[13] "temp"
                              (1941286 'move' _yieldedIndex[1941284] _yieldedIndex[1941268])
                              {
                                const-val i[1941290]:int(64)[13] "const" "index var" "insert auto destroy"
                                (1941292 'move' i[1941290] _yieldedIndex[1941284])
                                const-val yret[1941295]:int(64)[13] "dead after last mention" "YVV" "temp"
                                (1941297 'move' yret[1941295] _yieldedIndex[1941284])
                                const-val _yieldedIndex[1941333]:int(64)[13] "temp"
                                (1941483 'move' _yieldedIndex[1941333] _yieldedIndex[1941284])
                                {
                                  const-val j[1941335]:int(64)[13] "const" "index var" "insert auto destroy"
                                  (1941337 'move' j[1941335] _yieldedIndex[1941333])
                                  {
                                    const-val call_tmp[1941341]:int(64)[13] "dead at end of block" "expr temp" "maybe param" "temp"
                                    (1941343 'move' call_tmp[1941341](1941346 call +[439674] i[1884469] j[1941335]))
                                    const-val call_tmp[1941349]:int(64)[13] "dead at end of block" "maybe param" "temp"
                                    (1941351 'move' call_tmp[1941349](1941354 call orderToIndex[1104059] view[1181929] call_tmp[1941341]))
                                    const-val idx[1941357]:int(64)[13] "dead at end of block" "const" "insert auto destroy"
                                    (1941359 'move' idx[1941357] call_tmp[1941349])
                                    ref call_tmp[1941362]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1941364]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1941366 'move' _this_tmp_[1941364](1941369 call buff[757983] x[1781501]))
                                    val coerce_tmp[1941371]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1941373 'move' coerce_tmp[1941371](1941375 'deref' _this_tmp_[1941364]))
                                    (1941377 'move' call_tmp[1941362](1941380 call this[954110] coerce_tmp[1941371] idx[1941357]))
                                    ref call_tmp[1941383]:_ref(uint(8))[936927] "dead after last mention" "maybe param" "temp"
                                    ref _this_tmp_[1941385]:_ref(c_ptr(uint(8)))[937451] "dead after last mention" "reference to a const" "temp"
                                    (1941387 'move' _this_tmp_[1941385](1941390 call buff[757983] localNeedle[1182159]))
                                    val coerce_tmp[1941392]:c_ptr(uint(8))[937442] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1941394 'move' coerce_tmp[1941392](1941396 'deref' _this_tmp_[1941385]))
                                    (1941398 'move' call_tmp[1941383](1941401 call this[954110] coerce_tmp[1941392] j[1941335]))
                                    const-val call_tmp[1941404]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    const-val coerce_tmp[1941406]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1941408 'move' coerce_tmp[1941406](1941410 'deref' call_tmp[1941362]))
                                    const-val coerce_tmp[1941412]:uint(8)[100] "dead after last mention" "coerce temp" "insert auto destroy" "temp"
                                    (1941414 'move' coerce_tmp[1941412](1941416 'deref' call_tmp[1941383]))
                                    (1941418 'move' call_tmp[1941404](1941421 call !=[436072] coerce_tmp[1941406] coerce_tmp[1941412]))
                                    const-val call_tmp[1941424]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1941426 'move' call_tmp[1941424] call_tmp[1941404])
                                    if call_tmp[1941424]
                                    {
                                      (1941474 call _freeIterator[1103493] _iterator[1941145])
                                      (1941477 call chpl__autoDestroy[1508492] tmp[1940948])
                                      (1941480 call _freeIterator[1103743] _iterator[1940889])
                                      break _breakLabel[1884637] _breakLabel[1884637]
                                    }
                                    const-val call_tmp[1941434]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1941436 'move' call_tmp[1941434](1941439 call -[962245] nLen[1181898]))
                                    const-val call_tmp[1941441]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1941443 'move' call_tmp[1941441](1941446 call ==[435666] j[1941335] call_tmp[1941434]))
                                    const-val call_tmp[1941449]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                                    (1941451 'move' call_tmp[1941449] call_tmp[1941441])
                                    if call_tmp[1941449]
                                    {
                                      {
                                        const-val call_tmp[1941457]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
                                        (1941459 'move' call_tmp[1941457](1941462 call orderToIndex[1104059] view[1181929] i[1884469]))
                                        (1941466 call =[435365] localRet[1181883] call_tmp[1941457])
                                      }
                                    }
                                  }
                                  label _continueLabel[1941470]
                                }
                              }
                            }
                            {
                              const-val low[1941236]:int(64)[13] "temp"
                              (1941238 'move' low[1941236](1941240 '.v' _iterator[1941145] F0_low[1982870]))
                              (1941243 '=' i[1941171] low[1941236])
                            }
                            {
                              const-val high[1941247]:int(64)[13] "temp"
                              (1941249 'move' high[1941247](1941251 '.v' _iterator[1941145] F1_high[1982874]))
                              (1941254 '<=' i[1941171] high[1941247])
                            }
                            {
                              val call_tmp[1941258]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                              (1941260 '+=' i[1941171] 1)
                            }
                          }
                          label _endchpl_direct_param_stride_range_iter[1941316]
                        }
                        (1941319 call _freeIterator[1103493] _iterator[1941145])
                        (1941322 call chpl__autoDestroy[1508492] tmp[1940948])
                        label _endchpl_direct_counted_range_iter_helper[1941324]
                      }
                      (1941327 call _freeIterator[1103743] _iterator[1940889])
                      label _endchpl_direct_counted_range_iter[1941329]
                    }
                    label _breakLabel[1884637]
                    (1884640 call _freeIterator[1103993] _iterator[1884478])
                  }
                  const-val tmp[1884642]:bool[10] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
                  const-val tmp[1884644]:bool[10] "dead after last mention" "expr temp" "maybe param" "no auto destroy" "temp"
                  const-val call_tmp[1884646]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884648 'move' call_tmp[1884646](1884651 call !=[436050] localRet[1181883] -1))
                  (1884654 'move' tmp[1884644] call_tmp[1884646])
                  (1884657 'move' tmp[1884642] tmp[1884644])
                  const-val call_tmp[1884660]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
                  (1884662 'move' call_tmp[1884660] tmp[1884642])
                  if call_tmp[1884660]
                  {
                    break _breakLabel[1182572] _breakLabel[1182572]
                  }
                }
                label _continueLabel[1884670]
              }
              {
                (1884430 '=' i[1884383] coerce_tmp[1884399])
              }
              {
                (1884434 '<=' i[1884383] end[1884416])
              }
              {
                val call_tmp[1884438]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
                (1884440 '+=' i[1884383] 1)
              }
            }
            label _endthese[1884463]
          }
          label _breakLabel[1182572]
          (1820131 call _freeIterator[1102025] _iterator[1182283])
        }
        (1820134 call chpl__autoDestroy[1508195] searchSpace[1182201])
        (1820137 call chpl__autoDestroy[1514564] call_tmp[1182216])
        (1820140 call chpl__autoDestroy[1435320] localNeedle[1182159])
      }
      (1182592 call =[435365] ret[1781505] localRet[1181883])
      (1820144 call chpl__autoDestroy[1508195] view[1181929])
      (1820147 call chpl__autoDestroy[1514519] tmp[1181912])
    }
    (2049652 call chpl__autoDestroy[1435507] needle[1781499])
    (2049655 call chpl__autoDestroy[1435320] needle[2049634])
    (1182598 return _void[55])
  }
  function simpleCaseHelper[1186096](const in arg r[1781515]:range(byteIndex,boundedHigh,false)[1184938], const  ref arg x[1781517]:_ref(string)[937958], ref arg _retArg[1808115]:_ref((range(int(64),bounded,false),int(64)))[1086505]) : void[4] "fn returns via _retArg" "resolved" "fn synchronization free"
  {
    const-val ret[1186099]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "RVV" "temp"
    val call_tmp[1186117]:range(int(64),boundedHigh,false)[1187448] "dead at end of block" "expr temp" "maybe param" "temp" "type variable"
    const-val call_tmp[1186126]:range(int(64),boundedHigh,false)[1187448] "dead at end of block" "maybe param" "temp"
    const-val ret_tmp[1808121]:range(int(64),boundedHigh,false)[1187448] "temp"
    (1186131 call _cast[1187650] r[1781515] ret_tmp[1808121])
    (1808124 'move' call_tmp[1186126] ret_tmp[1808121])
    const-val intR[1186134]:range(int(64),boundedHigh,false)[1187448] "dead at end of block" "const" "insert auto destroy"
    (1186136 'move' intR[1186134] call_tmp[1186126])
    {
      const-val call_tmp[1186149]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802724]:range(int(64),bounded,false)[1026833] "temp"
      (1186154 call byteIndices[31068] x[1781517] ret_tmp[1802724])
      (1802727 'move' call_tmp[1186149] ret_tmp[1802724])
      const-val call_tmp[1186157]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186159 'move' call_tmp[1186157](1186165 call boundsCheck[1189557] call_tmp[1186149] intR[1186134]))
      const-val call_tmp[1186167]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186169 'move' call_tmp[1186167](1186172 call ![7494] call_tmp[1186157]))
      const-val call_tmp[1186174]:bool[10] "dead after last mention" "expr temp" "maybe param" "temp"
      (1186176 'move' call_tmp[1186174] call_tmp[1186167])
      if call_tmp[1186174]
      {
        val call_tmp[1186183]:string[26] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
        const-val call_tmp[1186213]:int(64)[13] "dead after last mention" "expr temp" "maybe param" "temp"
        (1186215 'move' call_tmp[1186213](1186218 call numBytes[32810] x[1781517]))
        (1186222 call halt[1190679] "range " r[1781515] " out of bounds for string with length " call_tmp[1186213])
      }
      (1820220 call chpl__autoDestroy[1508195] call_tmp[1186149])
    }
    val call_tmp[1186229]:byteIndex[28173] "dead after last mention" "expr temp" "maybe param" "temp" "type variable"
    {
      const-val call_tmp[1186254]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1802730]:range(int(64),bounded,false)[1026833] "temp"
      (1186259 call byteIndices[31068] x[1781517] ret_tmp[1802730])
      (1802733 'move' call_tmp[1186254] ret_tmp[1802730])
      const-val call_tmp[1186262]:range(int(64),bounded,false)[1026833] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1808245]:range(int(64),bounded,false)[1026833] "temp"
      (1186267 call this[1200368] intR[1186134] call_tmp[1186254] ret_tmp[1808245])
      (1808248 'move' call_tmp[1186262] ret_tmp[1808245])
      const-val call_tmp[1186276]:(range(int(64),bounded,false),int(64))[1084943] "dead after last mention" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1806814]:(range(int(64),bounded,false),int(64))[1084943] "temp"
      (1186281 call _build_tuple[1084901] call_tmp[1186262] -1 ret_tmp[1806814])
      (1806817 'move' call_tmp[1186276] ret_tmp[1806814])
      (1186284 'move' ret[1186099] call_tmp[1186276])
      (1820223 call chpl__autoDestroy[1508195] call_tmp[1186262])
      (1820226 call chpl__autoDestroy[1508195] call_tmp[1186254])
      (1820229 call chpl__autoDestroy[1519220] intR[1186134])
      gotoReturn _end_simpleCaseHelper[1186341] _end_simpleCaseHelper[1186341]
    }
    (1820232 call chpl__autoDestroy[1519220] intR[1186134])
    label _end_simpleCaseHelper[1186341]
    (1808117 '=' _retArg[1808115] ret[1186099])
    (1808119 return _void[55])
  }
  function wrapon_fn[2051987](const in arg dummy_locale_arg[2051989]:chpl_localeID_t[209352], in arg buf[2051991]:c_void_ptr[149], in arg buf_size[2051993]:int(64)[13], in arg c[2051995]:_class_localson_fn[2051935]) : void[4] "on block"
  {
    val _0_tmp[2052000]:chpl_localeID_t[209352] "temp"
    (2052005 'move' _0_tmp[2052000](2052002 '.v' c[2051995] _0_tmp[2051938]))
    ref _1_x[2052007]:string[26] "temp"
    (2052012 'move' _1_x[2052007](2052009 '.v' c[2051995] _1_x[2051940]))
    ref _2_ret[2052015]:int(64)[13] "temp"
    (2052020 'move' _2_ret[2052015](2052017 '.v' c[2051995] _2_ret[2051942]))
    (2051998 call on_fn[935483] _1_x[2052007] _2_ret[2052015])
    (2052023 return _void[55])
  }
  function wrapon_fn[2052823](const in arg dummy_locale_arg[2052825]:chpl_localeID_t[209352], in arg buf[2052827]:c_void_ptr[149], in arg buf_size[2052829]:int(64)[13], in arg c[2052831]:_class_localson_fn[2052771]) : void[4] "on block"
  {
    val _0_tmp[2052836]:chpl_localeID_t[209352] "temp"
    (2052841 'move' _0_tmp[2052836](2052838 '.v' c[2052831] _0_tmp[2052774]))
    ref _1_lhs[2052843]:string[26] "temp"
    (2052848 'move' _1_lhs[2052843](2052845 '.v' c[2052831] _1_lhs[2052776]))
    ref _2_rhs[2052851]:string[26] "temp"
    (2052856 'move' _2_rhs[2052851](2052853 '.v' c[2052831] _2_rhs[2052778]))
    (2052834 call on_fn[979172] _1_lhs[2052843] _2_rhs[2052851])
    (2052859 return _void[55])
  }
  function wrapon_fn[2053591](const in arg dummy_locale_arg[2053593]:chpl_localeID_t[209352], in arg buf[2053595]:c_void_ptr[149], in arg buf_size[2053597]:int(64)[13], in arg c[2053599]:_class_localson_fn[2053539]) : void[4] "on block"
  {
    val _0_tmp[2053604]:chpl_localeID_t[209352] "temp"
    (2053609 'move' _0_tmp[2053604](2053606 '.v' c[2053599] _0_tmp[2053542]))
    ref _1_lhs[2053611]:string[26] "temp"
    (2053616 'move' _1_lhs[2053611](2053613 '.v' c[2053599] _1_lhs[2053544]))
    ref _2_rhs[2053619]:string[26] "temp"
    (2053624 'move' _2_rhs[2053619](2053621 '.v' c[2053599] _2_rhs[2053546]))
    (2053602 call on_fn[1019660] _1_lhs[2053611] _2_rhs[2053619])
    (2053627 return _void[55])
  }
  function wrapon_fn[2054288](const in arg dummy_locale_arg[2054290]:chpl_localeID_t[209352], in arg buf[2054292]:c_void_ptr[149], in arg buf_size[2054294]:int(64)[13], in arg c[2054296]:_class_localson_fn[2054224]) : void[4] "on block"
  {
    val _0_tmp[2054301]:chpl_localeID_t[209352] "temp"
    (2054306 'move' _0_tmp[2054301](2054303 '.v' c[2054296] _0_tmp[2054227]))
    val _1_needle_data[2054308]:__serializeHelper[28089] "temp"
    (2054313 'move' _1_needle_data[2054308](2054310 '.v' c[2054296] _1_needle_data[2054229]))
    ref _2_x[2054316]:string[26] "temp"
    (2054321 'move' _2_x[2054316](2054318 '.v' c[2054296] _2_x[2054231]))
    val _3_region[2054324]:range(byteIndex,bounded,false)[1025811] "temp"
    (2054329 'move' _3_region[2054324](2054326 '.v' c[2054296] _3_region[2054233]))
    ref _4_ret[2054332]:int(64)[13] "temp"
    (2054337 'move' _4_ret[2054332](2054334 '.v' c[2054296] _4_ret[2054235]))
    (2054299 call on_fn[1030157] _1_needle_data[2054308] _2_x[2054316] _3_region[2054324] _4_ret[2054332])
    (2054340 return _void[55])
  }
  function wrapon_fn[2056902](const in arg dummy_locale_arg[2056904]:chpl_localeID_t[209352], in arg buf[2056906]:c_void_ptr[149], in arg buf_size[2056908]:int(64)[13], in arg c[2056910]:_class_localson_fn[2056838]) : void[4] "on block"
  {
    val _0_tmp[2056915]:chpl_localeID_t[209352] "temp"
    (2056920 'move' _0_tmp[2056915](2056917 '.v' c[2056910] _0_tmp[2056841]))
    val _1_needle_data[2056922]:__serializeHelper[28089] "temp"
    (2056927 'move' _1_needle_data[2056922](2056924 '.v' c[2056910] _1_needle_data[2056843]))
    ref _2_x[2056930]:string[26] "temp"
    (2056935 'move' _2_x[2056930](2056932 '.v' c[2056910] _2_x[2056845]))
    val _3_region[2056938]:range(byteIndex,boundedLow,false)[1143422] "temp"
    (2056943 'move' _3_region[2056938](2056940 '.v' c[2056910] _3_region[2056847]))
    ref _4_ret[2056946]:int(64)[13] "temp"
    (2056951 'move' _4_ret[2056946](2056948 '.v' c[2056910] _4_ret[2056849]))
    (2056913 call on_fn[1181870] _1_needle_data[2056922] _2_x[2056930] _3_region[2056938] _4_ret[2056946])
    (2056954 return _void[55])
  }
}