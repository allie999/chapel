AST dump for ChapelDebugPrint after pass createTaskFunctions.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[415967]() : void[4] "insert line file info" "module init"
  {
    (545378 'init var' chpl__testParFlag[188300] 0)
    (188303 'end of statement')
    (545380 'init var' chpl__testParOn[188305] 0)
    (188308 'end of statement')
    (524086 return _void[55])
  }
  function chpl_debug_stringify[188125](arg args[188122]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524062] "RVV" "temp"
    unknown str[188145] "dead at end of block" "insert auto destroy"
    (545370 'init var' str[188145] "")
    (188148 'end of statement')
    {
      unknown i[188192] "dead at end of block" "insert auto destroy"
      (545372 'init var' i[188192] 0)
      (484440 'end of statement')
      unknown tmp[188193] "maybe param" "temp"
      unknown call_tmp[690757] "expr temp" "maybe param" "maybe type" "temp"
      (690760 'move' call_tmp[690757](188152 call size _mt[243] args[188122]))
      unknown call_tmp[690762] "expr temp" "maybe param" "maybe type" "temp"
      (690765 'move' call_tmp[690762](188156 call - call_tmp[690757] 1))
      (188205 'move' tmp[188193](188203 call chpl_compute_low_param_loop_bound 0 call_tmp[690762]))
      unknown tmp[188194] "maybe param" "temp"
      unknown call_tmp[690769] "expr temp" "maybe param" "maybe type" "temp"
      (690772 'move' call_tmp[690769](188212 call size _mt[243] args[188122]))
      unknown call_tmp[690774] "expr temp" "maybe param" "maybe type" "temp"
      (690777 'move' call_tmp[690774](188210 call - call_tmp[690769] 1))
      (188218 'move' tmp[188194](188216 call chpl_compute_high_param_loop_bound 0 call_tmp[690774]))
      unknown tmp[188195] "maybe param" "temp"
      (188221 'move' tmp[188195] 1)
      ParamForLoop[188223]
      { i[188192] tmp[188193] tmp[188194] tmp[188195]
        {
          unknown call_tmp[690779] "maybe param" "maybe type" "temp"
          (690782 'move' call_tmp[690779](188163 call args[188122] i[188192]))
          unknown tmp[188164] "dead at end of block" "insert auto destroy"
          (545374 'init var' tmp[188164] call_tmp[690779])
          (188167 'end of statement' i[188192])
          unknown call_tmp[690784] "expr temp" "maybe param" "maybe type" "temp"
          (690787 'move' call_tmp[690784](188172 call _can_stringify_direct tmp[188164]))
          unknown call_tmp[690789] "expr temp" "maybe param" "maybe type" "temp"
          (690792 'move' call_tmp[690789](188188 call _cond_test call_tmp[690784]))
          if call_tmp[690789]
          {
            unknown call_tmp[690794] "expr temp" "maybe param" "maybe type" "temp"
            (690797 'move' call_tmp[690794](188177 call stringify tmp[188164]))
            (188178 call += str[188145] call_tmp[690794])
            (484442 'end of statement' str[188145] tmp[188164])
          }
          {
            (188184 call += str[188145] "\?")
            (484445 'end of statement' str[188145])
          }
        }
      }
      label _unused_continueLabel[188197]
      label _breakLabel[188196]
    }
    (524068 'move' ret[524062](524067 'coerce' str[188145] string[26]))
    gotoReturn _end_chpl_debug_stringify[524060] _end_chpl_debug_stringify[524060]
    (484447 'end of statement' str[188145])
    label _end_chpl_debug_stringify[524060]
    (524064 return ret[524062])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188244](arg args[188241]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188252](arg fmt[188249]:c_string[19], arg f[188255]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524072 return _void[55])
    }
    unknown call_tmp[690799] "maybe param" "maybe type" "temp"
    (690802 'move' call_tmp[690799](188265 call chpl_debug_stringify(188263 'expand_tuple' args[188241])))
    unknown str[188266] "dead at end of block" "insert auto destroy"
    (545376 'init var' str[188266] call_tmp[690799])
    (188269 'end of statement')
    unknown call_tmp[690806] "expr temp" "maybe param" "maybe type" "temp"
    (690809 'move' call_tmp[690806](188294 call(188290 call (partial) c_str _mt[243] str[188266])))
    (188295 call printf "%s\n" call_tmp[690806])
    (484449 'end of statement' str[188266])
    (524074 return _void[55])
  }
  unknown chpl__testParFlag[188300] "config" "no doc" "param"
  unknown chpl__testParOn[188305] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188311]() : _unknown[51] "no doc" "no return value for void"
  {
    (188315 call = chpl__testParOn[188305] 1)
    (524076 return _void[55])
  }
  function chpl__testParStop[188323]() : _unknown[51] "no doc" "no return value for void"
  {
    (188327 call = chpl__testParOn[188305] 0)
    (524078 return _void[55])
  }
  function chpl__testPar[188339](arg args[188336]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429457] "maybe param" "temp"
    (429468 'move' tmp[429457] chpl__testParFlag[188300])
    unknown call_tmp[690811] "expr temp" "maybe param" "maybe type" "temp"
    (690814 'move' call_tmp[690811](429470 call _cond_invalid tmp[429457]))
    if call_tmp[690811]
    {
      (429473 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572057] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572058] "maybe param" "temp"
    unknown call_tmp[690816] "expr temp" "maybe param" "maybe type" "temp"
    (690819 'move' call_tmp[690816](429458 call isTrue tmp[429457]))
    (572063 'move' tmp[572058](572061 call _cond_test call_tmp[690816]))
    if tmp[572058]
    {
      unknown tmp[572065] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572067 'move' tmp[572065](429461 call isTrue chpl__testParOn[188305]))
      (572072 'move' tmp[572057](572069 '_paramFoldLogical' tmp[572058] tmp[572065]))
    }
    {
      (572077 'move' tmp[572057](572074 '_paramFoldLogical' tmp[572058] 0))
    }
    unknown call_tmp[690821] "expr temp" "maybe param" "maybe type" "temp"
    (690824 'move' call_tmp[690821](188444 call _cond_test tmp[572057]))
    if call_tmp[690821]
    {
      unknown call_tmp[690826] "expr temp" "maybe param" "maybe type" "temp"
      (690829 'move' call_tmp[690826](188350 '_get_user_file'))
      unknown call_tmp[690831] "maybe param" "maybe type" "temp"
      (690834 'move' call_tmp[690831](188351 'chpl_lookupFilename' call_tmp[690826]))
      const file_cs[188352] "dead at end of block" "const" "insert auto destroy"
      (545382 'init var' file_cs[188352] call_tmp[690831] c_string[19])
      (188355 'end of statement')
      unknown file[188358] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545384] "maybe param" "maybe type" "temp"
      (545393 'move' type_tmp[545384](545392 call string[26]))
      (545386 'init var split decl' file[188358] type_tmp[545384])
      (188361 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690836] "maybe param" "maybe type" "temp"
          (690839 'move' call_tmp[690836](188366 call createStringWithNewBuffer file_cs[188352]))
          (545395 'init var split init' file[188358] call_tmp[690836] type_tmp[545384])
          (484454 'end of statement' file[188358] file_cs[188352])
        }
      }
      unknown call_tmp[690841] "maybe param" "maybe type" "temp"
      (690844 'move' call_tmp[690841](188376 '_get_user_line'))
      const line[188377] "dead at end of block" "const" "insert auto destroy"
      (545398 'init var' line[188377] call_tmp[690841])
      (188380 'end of statement')
      unknown call_tmp[690846] "maybe param" "maybe type" "temp"
      (690849 'move' call_tmp[690846](188385 call chpl_debug_stringify(188383 'expand_tuple' args[188336])))
      unknown str[188386] "dead at end of block" "insert auto destroy"
      (545400 'init var' str[188386] call_tmp[690846])
      (188389 'end of statement')
      function printf[188396](arg fmt[188393]:c_string[19], arg f[188399]:c_string[19], arg ln[188403] :
      c_int[20549], arg s[188407]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524080 return _void[55])
      }
      unknown call_tmp[690851] "expr temp" "maybe param" "maybe type" "temp"
      (690854 'move' call_tmp[690851](188434 call _cast c_int[20549] line[188377]))
      unknown call_tmp[690858] "expr temp" "maybe param" "maybe type" "temp"
      (690861 'move' call_tmp[690858](188441 call(188437 call (partial) c_str _mt[243] str[188386])))
      (188442 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188352] call_tmp[690851] call_tmp[690858])
      (484457 'end of statement' file_cs[188352] line[188377] str[188386])
    }
    (524082 return _void[55])
  }
  function chpl__testParWriteln[188457](arg args[188454]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429478] "maybe param" "temp"
    (429489 'move' tmp[429478] chpl__testParFlag[188300])
    unknown call_tmp[690863] "expr temp" "maybe param" "maybe type" "temp"
    (690866 'move' call_tmp[690863](429491 call _cond_invalid tmp[429478]))
    if call_tmp[690863]
    {
      (429494 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572084] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572085] "maybe param" "temp"
    unknown call_tmp[690868] "expr temp" "maybe param" "maybe type" "temp"
    (690871 'move' call_tmp[690868](429479 call isTrue tmp[429478]))
    (572090 'move' tmp[572085](572088 call _cond_test call_tmp[690868]))
    if tmp[572085]
    {
      unknown tmp[572092] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572094 'move' tmp[572092](429482 call isTrue chpl__testParOn[188305]))
      (572099 'move' tmp[572084](572096 '_paramFoldLogical' tmp[572085] tmp[572092]))
    }
    {
      (572104 'move' tmp[572084](572101 '_paramFoldLogical' tmp[572085] 0))
    }
    unknown call_tmp[690873] "expr temp" "maybe param" "maybe type" "temp"
    (690876 'move' call_tmp[690873](188542 call _cond_test tmp[572084]))
    if call_tmp[690873]
    {
      unknown call_tmp[690878] "expr temp" "maybe param" "maybe type" "temp"
      (690881 'move' call_tmp[690878](188468 '_get_user_file'))
      unknown call_tmp[690883] "maybe param" "maybe type" "temp"
      (690886 'move' call_tmp[690883](188469 'chpl_lookupFilename' call_tmp[690878]))
      const file_cs[188470] "dead at end of block" "const" "insert auto destroy"
      (545402 'init var' file_cs[188470] call_tmp[690883] c_string[19])
      (188473 'end of statement')
      unknown file[188476] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545404] "maybe param" "maybe type" "temp"
      (545413 'move' type_tmp[545404](545412 call string[26]))
      (545406 'init var split decl' file[188476] type_tmp[545404])
      (188479 'end of statement')
      Try!
      {
        {
          unknown call_tmp[690888] "maybe param" "maybe type" "temp"
          (690891 'move' call_tmp[690888](188484 call createStringWithNewBuffer file_cs[188470]))
          (545415 'init var split init' file[188476] call_tmp[690888] type_tmp[545404])
          (484462 'end of statement' file[188476] file_cs[188470])
        }
      }
      unknown call_tmp[690893] "maybe param" "maybe type" "temp"
      (690896 'move' call_tmp[690893](188494 '_get_user_line'))
      const line[188495] "dead at end of block" "const" "insert auto destroy"
      (545418 'init var' line[188495] call_tmp[690893])
      (188498 'end of statement')
      (188540 call writeln "CHPL TEST PAR (" file[188476] ":" line[188495] "): "(188539 'expand_tuple' args[188454]))
      (484465 'end of statement' file[188476] line[188495])
    }
    (524084 return _void[55])
  }
  (355145 'used modules list'(188112 'use' ChapelStandard[20264])(188114 'use' SysCTypes[20940])(188117 'use' IO[230803]))
}