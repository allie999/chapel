AST dump for ChapelDebugPrint after pass createTaskFunctions.
Module use list: ChapelStandard SysCTypes IO 

{
  function chpl__init_ChapelDebugPrint[416172]() : void[4] "insert line file info" "module init"
  {
    (545611 'init var' chpl__testParFlag[188346] 0)
    (188349 'end of statement')
    (545613 'init var' chpl__testParOn[188351] 0)
    (188354 'end of statement')
    (524301 return _void[55])
  }
  function chpl_debug_stringify[188171](arg args[188168]:_any[178](?) ...) : _unknown[51]
  {
    unknown ret[524277] "RVV" "temp"
    unknown str[188191] "dead at end of block" "insert auto destroy"
    (545603 'init var' str[188191] "")
    (188194 'end of statement')
    {
      unknown i[188238] "dead at end of block" "insert auto destroy"
      (545605 'init var' i[188238] 0)
      (484647 'end of statement')
      unknown tmp[188239] "maybe param" "temp"
      unknown call_tmp[690973] "expr temp" "maybe param" "maybe type" "temp"
      (690976 'move' call_tmp[690973](188198 call size _mt[243] args[188168]))
      unknown call_tmp[690978] "expr temp" "maybe param" "maybe type" "temp"
      (690981 'move' call_tmp[690978](188202 call - call_tmp[690973] 1))
      (188251 'move' tmp[188239](188249 call chpl_compute_low_param_loop_bound 0 call_tmp[690978]))
      unknown tmp[188240] "maybe param" "temp"
      unknown call_tmp[690985] "expr temp" "maybe param" "maybe type" "temp"
      (690988 'move' call_tmp[690985](188258 call size _mt[243] args[188168]))
      unknown call_tmp[690990] "expr temp" "maybe param" "maybe type" "temp"
      (690993 'move' call_tmp[690990](188256 call - call_tmp[690985] 1))
      (188264 'move' tmp[188240](188262 call chpl_compute_high_param_loop_bound 0 call_tmp[690990]))
      unknown tmp[188241] "maybe param" "temp"
      (188267 'move' tmp[188241] 1)
      ParamForLoop[188269]
      { i[188238] tmp[188239] tmp[188240] tmp[188241]
        {
          unknown call_tmp[690995] "maybe param" "maybe type" "temp"
          (690998 'move' call_tmp[690995](188209 call args[188168] i[188238]))
          unknown tmp[188210] "dead at end of block" "insert auto destroy"
          (545607 'init var' tmp[188210] call_tmp[690995])
          (188213 'end of statement' i[188238])
          unknown call_tmp[691000] "expr temp" "maybe param" "maybe type" "temp"
          (691003 'move' call_tmp[691000](188218 call _can_stringify_direct tmp[188210]))
          unknown call_tmp[691005] "expr temp" "maybe param" "maybe type" "temp"
          (691008 'move' call_tmp[691005](188234 call _cond_test call_tmp[691000]))
          if call_tmp[691005]
          {
            unknown call_tmp[691010] "expr temp" "maybe param" "maybe type" "temp"
            (691013 'move' call_tmp[691010](188223 call stringify tmp[188210]))
            (188224 call += str[188191] call_tmp[691010])
            (484649 'end of statement' str[188191] tmp[188210])
          }
          {
            (188230 call += str[188191] "\?")
            (484652 'end of statement' str[188191])
          }
        }
      }
      label _unused_continueLabel[188243]
      label _breakLabel[188242]
    }
    (524283 'move' ret[524277](524282 'coerce' str[188191] string[26]))
    gotoReturn _end_chpl_debug_stringify[524275] _end_chpl_debug_stringify[524275]
    (484654 'end of statement' str[188191])
    label _end_chpl_debug_stringify[524275]
    (524279 return ret[524277])
  }
  { scopeless type
    string[26]
  }
  function chpl_debug_writeln[188290](arg args[188287]:_any[178](?) ...) : _unknown[51] "no return value for void"
  {
    function printf[188298](arg fmt[188295]:c_string[19], arg f[188301]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
    {
      (524287 return _void[55])
    }
    unknown call_tmp[691015] "maybe param" "maybe type" "temp"
    (691018 'move' call_tmp[691015](188311 call chpl_debug_stringify(188309 'expand_tuple' args[188287])))
    unknown str[188312] "dead at end of block" "insert auto destroy"
    (545609 'init var' str[188312] call_tmp[691015])
    (188315 'end of statement')
    unknown call_tmp[691022] "expr temp" "maybe param" "maybe type" "temp"
    (691025 'move' call_tmp[691022](188340 call(188336 call (partial) c_str _mt[243] str[188312])))
    (188341 call printf "%s\n" call_tmp[691022])
    (484656 'end of statement' str[188312])
    (524289 return _void[55])
  }
  unknown chpl__testParFlag[188346] "config" "no doc" "param"
  unknown chpl__testParOn[188351] "dead at end of block" "insert auto destroy" "no doc"
  function chpl__testParStart[188357]() : _unknown[51] "no doc" "no return value for void"
  {
    (188361 call = chpl__testParOn[188351] 1)
    (524291 return _void[55])
  }
  function chpl__testParStop[188369]() : _unknown[51] "no doc" "no return value for void"
  {
    (188373 call = chpl__testParOn[188351] 0)
    (524293 return _void[55])
  }
  function chpl__testPar[188385](arg args[188382]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429662] "maybe param" "temp"
    (429673 'move' tmp[429662] chpl__testParFlag[188346])
    unknown call_tmp[691027] "expr temp" "maybe param" "maybe type" "temp"
    (691030 'move' call_tmp[691027](429675 call _cond_invalid tmp[429662]))
    if call_tmp[691027]
    {
      (429678 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572273] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572274] "maybe param" "temp"
    unknown call_tmp[691032] "expr temp" "maybe param" "maybe type" "temp"
    (691035 'move' call_tmp[691032](429663 call isTrue tmp[429662]))
    (572279 'move' tmp[572274](572277 call _cond_test call_tmp[691032]))
    if tmp[572274]
    {
      unknown tmp[572281] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572283 'move' tmp[572281](429666 call isTrue chpl__testParOn[188351]))
      (572288 'move' tmp[572273](572285 '_paramFoldLogical' tmp[572274] tmp[572281]))
    }
    {
      (572293 'move' tmp[572273](572290 '_paramFoldLogical' tmp[572274] 0))
    }
    unknown call_tmp[691037] "expr temp" "maybe param" "maybe type" "temp"
    (691040 'move' call_tmp[691037](188490 call _cond_test tmp[572273]))
    if call_tmp[691037]
    {
      unknown call_tmp[691042] "expr temp" "maybe param" "maybe type" "temp"
      (691045 'move' call_tmp[691042](188396 '_get_user_file'))
      unknown call_tmp[691047] "maybe param" "maybe type" "temp"
      (691050 'move' call_tmp[691047](188397 'chpl_lookupFilename' call_tmp[691042]))
      const file_cs[188398] "dead at end of block" "const" "insert auto destroy"
      (545615 'init var' file_cs[188398] call_tmp[691047] c_string[19])
      (188401 'end of statement')
      unknown file[188404] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545617] "maybe param" "maybe type" "temp"
      (545626 'move' type_tmp[545617](545625 call string[26]))
      (545619 'init var split decl' file[188404] type_tmp[545617])
      (188407 'end of statement')
      Try!
      {
        {
          unknown call_tmp[691052] "maybe param" "maybe type" "temp"
          (691055 'move' call_tmp[691052](188412 call createStringWithNewBuffer file_cs[188398]))
          (545628 'init var split init' file[188404] call_tmp[691052] type_tmp[545617])
          (484661 'end of statement' file[188404] file_cs[188398])
        }
      }
      unknown call_tmp[691057] "maybe param" "maybe type" "temp"
      (691060 'move' call_tmp[691057](188422 '_get_user_line'))
      const line[188423] "dead at end of block" "const" "insert auto destroy"
      (545631 'init var' line[188423] call_tmp[691057])
      (188426 'end of statement')
      unknown call_tmp[691062] "maybe param" "maybe type" "temp"
      (691065 'move' call_tmp[691062](188431 call chpl_debug_stringify(188429 'expand_tuple' args[188382])))
      unknown str[188432] "dead at end of block" "insert auto destroy"
      (545633 'init var' str[188432] call_tmp[691062])
      (188435 'end of statement')
      function printf[188442](arg fmt[188439]:c_string[19], arg f[188445]:c_string[19], arg ln[188449] :
      c_int[20552], arg s[188453]:c_string[19]) : void[4] "extern" "local args" "no fn body" "no return value for void"
      {
        (524295 return _void[55])
      }
      unknown call_tmp[691067] "expr temp" "maybe param" "maybe type" "temp"
      (691070 'move' call_tmp[691067](188480 call _cast c_int[20552] line[188423]))
      unknown call_tmp[691074] "expr temp" "maybe param" "maybe type" "temp"
      (691077 'move' call_tmp[691074](188487 call(188483 call (partial) c_str _mt[243] str[188432])))
      (188488 call printf "CHPL TEST PAR (%s:%i): %s\n" file_cs[188398] call_tmp[691067] call_tmp[691074])
      (484664 'end of statement' file_cs[188398] line[188423] str[188432])
    }
    (524297 return _void[55])
  }
  function chpl__testParWriteln[188503](arg args[188500]:_any[178](?) ...) : _unknown[51] "no doc" "no return value for void"
  {
    unknown tmp[429683] "maybe param" "temp"
    (429694 'move' tmp[429683] chpl__testParFlag[188346])
    unknown call_tmp[691079] "expr temp" "maybe param" "maybe type" "temp"
    (691082 'move' call_tmp[691079](429696 call _cond_invalid tmp[429683]))
    if call_tmp[691079]
    {
      (429699 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[572300] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[572301] "maybe param" "temp"
    unknown call_tmp[691084] "expr temp" "maybe param" "maybe type" "temp"
    (691087 'move' call_tmp[691084](429684 call isTrue tmp[429683]))
    (572306 'move' tmp[572301](572304 call _cond_test call_tmp[691084]))
    if tmp[572301]
    {
      unknown tmp[572308] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      (572310 'move' tmp[572308](429687 call isTrue chpl__testParOn[188351]))
      (572315 'move' tmp[572300](572312 '_paramFoldLogical' tmp[572301] tmp[572308]))
    }
    {
      (572320 'move' tmp[572300](572317 '_paramFoldLogical' tmp[572301] 0))
    }
    unknown call_tmp[691089] "expr temp" "maybe param" "maybe type" "temp"
    (691092 'move' call_tmp[691089](188588 call _cond_test tmp[572300]))
    if call_tmp[691089]
    {
      unknown call_tmp[691094] "expr temp" "maybe param" "maybe type" "temp"
      (691097 'move' call_tmp[691094](188514 '_get_user_file'))
      unknown call_tmp[691099] "maybe param" "maybe type" "temp"
      (691102 'move' call_tmp[691099](188515 'chpl_lookupFilename' call_tmp[691094]))
      const file_cs[188516] "dead at end of block" "const" "insert auto destroy"
      (545635 'init var' file_cs[188516] call_tmp[691099] c_string[19])
      (188519 'end of statement')
      unknown file[188522] "dead at end of block" "insert auto destroy" "split inited"
      unknown type_tmp[545637] "maybe param" "maybe type" "temp"
      (545646 'move' type_tmp[545637](545645 call string[26]))
      (545639 'init var split decl' file[188522] type_tmp[545637])
      (188525 'end of statement')
      Try!
      {
        {
          unknown call_tmp[691104] "maybe param" "maybe type" "temp"
          (691107 'move' call_tmp[691104](188530 call createStringWithNewBuffer file_cs[188516]))
          (545648 'init var split init' file[188522] call_tmp[691104] type_tmp[545637])
          (484669 'end of statement' file[188522] file_cs[188516])
        }
      }
      unknown call_tmp[691109] "maybe param" "maybe type" "temp"
      (691112 'move' call_tmp[691109](188540 '_get_user_line'))
      const line[188541] "dead at end of block" "const" "insert auto destroy"
      (545651 'init var' line[188541] call_tmp[691109])
      (188544 'end of statement')
      (188586 call writeln "CHPL TEST PAR (" file[188522] ":" line[188541] "): "(188585 'expand_tuple' args[188500]))
      (484672 'end of statement' file[188522] line[188541])
    }
    (524299 return _void[55])
  }
  (355344 'used modules list'(188158 'use' ChapelStandard[20267])(188160 'use' SysCTypes[20943])(188163 'use' IO[230979]))
}