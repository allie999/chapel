AST dump for QuickSort after pass readExternC.
Module use list: 

{
  (352942 'use' ChapelStandard)
  (271953 'use' Sort)
  (271962 'use'(271959 call . Sort c"ShallowCopy"))
  function partition[271976](arg Data[271973] :
  (271971 call chpl__buildArrayRuntimeType unknown Dom[271966] unknown eltType[271969]), arg lo[271979] :
  int[13], arg pivIdx[271983] :
  int[13], arg hi[271987] :
  int[13], arg comparator[271990]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown a[271993] lo
      (271996 'end of statement')
    }
    { scopeless
      unknown b[271999] lo
      (272002 'end of statement')
    }
    { scopeless
      unknown c[272004] hi
      (272007 'end of statement')
    }
    { scopeless
      unknown d[272009] hi
      (272012 'end of statement')
    }
    if(272034 call _cond_test(272015 call != lo pivIdx))
    {
      { scopeless
        (272032 call(272020 call . ShallowCopy c"shallowSwap")(272026 call Data lo)(272031 call Data pivIdx))
      }
    }
    (272041 call += a 1)
    (272046 call += b 1)
    { scopeless
      unknown piv[272060] "no auto destroy"(272059 call(272051 call . ShallowCopy c"shallowCopyInit")(272057 call Data lo)) eltType
      (272063 'end of statement')
    }
    {
      unknown tmp[272294] "temp"
      (272312 'move' tmp[272294](272310 call _cond_test 1))
      WhileDo[272299]
      {
        {
          {
            unknown tmp[272138] "temp"
            (272162 'move' tmp[272138](272157 call _cond_test(272159 call <= b c)))
            WhileDo[272143]
            {
              {
                { scopeless
                  unknown cmp[272078](272077 call chpl_compare(272073 call Data b) piv comparator)
                  (272081 'end of statement')
                }
                if(272090 call _cond_test(272085 call > cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272129 call _cond_test(272097 call == cmp 0))
                {
                  if(272119 call _cond_test(272101 call != a b))
                  {
                    (272116 call(272104 call . ShallowCopy c"shallowSwap")(272110 call Data a)(272115 call Data b))
                  }
                  (272126 call += a 1)
                }
                (272135 call += b 1)
              }
              label _continueLabel[272141]
              (272152 'move' tmp[272138](272147 call _cond_test(272149 call <= b c)))
              tmp[272138]
            }
            label _breakLabel[272142]
          }
          {
            unknown tmp[272230] "temp"
            (272254 'move' tmp[272230](272249 call _cond_test(272251 call >= c b)))
            WhileDo[272235]
            {
              {
                { scopeless
                  unknown cmp[272179](272178 call chpl_compare(272174 call Data c) piv comparator)
                  (272182 'end of statement')
                }
                if(272191 call _cond_test(272186 call < cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272221 call _cond_test(272198 call == cmp 0))
                {
                  (272213 call(272201 call . ShallowCopy c"shallowSwap")(272207 call Data d)(272212 call Data c))
                  (272218 call -= d 1)
                }
                (272227 call -= c 1)
              }
              label _continueLabel[272233]
              (272244 'move' tmp[272230](272239 call _cond_test(272241 call >= c b)))
              tmp[272230]
            }
            label _breakLabel[272234]
          }
          if(272264 call _cond_test(272259 call > b c))
          {
            { scopeless
              break nil[44]
            }
          }
          (272282 call(272270 call . ShallowCopy c"shallowSwap")(272276 call Data b)(272281 call Data c))
          (272286 call += b 1)
          (272291 call -= c 1)
        }
        label _continueLabel[272297]
        (272305 'move' tmp[272294](272303 call _cond_test 1))
        tmp[272294]
      }
      label _breakLabel[272298]
    }
    (272325 call(272316 call . ShallowCopy c"shallowCopy")(272322 call Data lo) piv)
    { scopeless
      unknown s[272327] int[13]
      unknown l[272330](272340 'typeof' s)
      unknown h[272334](272338 'typeof' l)
      (272341 'end of statement')
    }
    (272354 call = s(272353 call min(272346 call - a lo)(272351 call - b a)))
    (272359 call = l lo)
    (272367 call = h(272365 call - b s))
    {
      unknown tmp[272405] "temp"
      (272429 'move' tmp[272405](272424 call _cond_test(272426 call > s 0)))
      WhileDo[272410]
      {
        {
          (272387 call(272375 call . ShallowCopy c"shallowSwap")(272381 call Data l)(272386 call Data h))
          (272392 call += l 1)
          (272397 call += h 1)
          (272402 call -= s 1)
        }
        label _continueLabel[272408]
        (272419 'move' tmp[272405](272414 call _cond_test(272416 call > s 0)))
        tmp[272405]
      }
      label _breakLabel[272409]
    }
    { scopeless
      unknown n[272436](272434 call + hi 1)
      (272439 'end of statement')
    }
    (272452 call = s(272451 call min(272444 call - d c)(272449 call - hi d)))
    (272457 call = l b)
    (272465 call = h(272463 call - n s))
    {
      unknown tmp[272503] "temp"
      (272527 'move' tmp[272503](272522 call _cond_test(272524 call > s 0)))
      WhileDo[272508]
      {
        {
          (272485 call(272473 call . ShallowCopy c"shallowSwap")(272479 call Data l)(272484 call Data h))
          (272490 call += l 1)
          (272495 call += h 1)
          (272500 call -= s 1)
        }
        label _continueLabel[272506]
        (272517 'move' tmp[272503](272512 call _cond_test(272514 call > s 0)))
        tmp[272503]
      }
      label _breakLabel[272507]
    }
    { scopeless
      unknown eqStart[272537](272535 call +(272532 call - b a) lo)
      (272540 'end of statement')
    }
    { scopeless
      unknown eqEnd[272548](272546 call - hi(272544 call - d c))
      (272551 'end of statement')
    }
    (272557 return(272555 call _build_tuple eqStart eqEnd))
  }
  function order3[272573](arg Data[272570] :
  (272568 call chpl__buildArrayRuntimeType unknown Dom[272563] unknown eltType[272566]), arg lo[272576] :
  int[13], arg mid[272580] :
  int[13], arg hi[272584] :
  int[13], arg comparator[272587]:_any[178](?)) : _unknown[51]
  {
    if(272709 call _cond_test(272603 call <(272601 call chpl_compare(272594 call Data lo)(272599 call Data mid) comparator) 0))
    {
      if(272651 call _cond_test(272618 call <(272616 call chpl_compare(272609 call Data hi)(272614 call Data lo) comparator) 0))
      {
        (272621 return lo)
      }
      {
        { scopeless
          if(272647 call _cond_test(272637 call <(272635 call chpl_compare(272628 call Data mid)(272633 call Data hi) comparator) 0))
          {
            (272640 return mid)
          }
          {
            (272644 return hi)
          }
        }
      }
    }
    {
      if(272703 call _cond_test(272670 call <(272668 call chpl_compare(272661 call Data lo)(272666 call Data hi) comparator) 0))
      {
        (272673 return lo)
      }
      {
        { scopeless
          if(272699 call _cond_test(272689 call <(272687 call chpl_compare(272680 call Data hi)(272685 call Data mid) comparator) 0))
          {
            (272692 return mid)
          }
          {
            (272696 return hi)
          }
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272729](arg Data[272726] :
  (272724 call chpl__buildArrayRuntimeType unknown Dom[272719] unknown eltType[272722]), arg minlen[272732] =
  16, arg comparator[272738] :
  unknown rec[272735] =
  defaultComparator) : _unknown[51]
  {
    (272746 call chpl_check_comparator comparator eltType)
    if(272778 call _cond_test(272754 call !=(272750 call . Dom c"rank") 1))
    {
      (272775 call compilerError "quickSort() requires 1-D array")
    }
    if(272843 call _cond_test(272793 call &&(272783 call . Dom c"stridable")(272791 call !=(272787 call . Dom c"stride") 1)))
    {
      { scopeless
        unknown reindexed[272815] "ref var"(272814 call(272798 call . Data c"reindex")(272811 call #(272805 call chpl_build_low_bounded_range(272802 call . Dom c"alignedLow"))(272808 call . Dom c"size")))
        (272818 'end of statement')
      }
      (272832 call assert(272829 call ==(272825 call .(272822 call . reindexed c"_dom") c"stride") 1))
      (272839 call quickSortImpl reindexed minlen comparator)
      (272841 return)
    }
    (272856 call assert(272853 call ==(272849 call . Dom c"stride") 1))
    (272863 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[272879](arg Data[272876] :
  (272874 call chpl__buildArrayRuntimeType unknown Dom[272869] unknown eltType[272872]), arg minlen[272882] =
  16, arg comparator[272888] :
  unknown rec[272885] =
  defaultComparator, arg start[272897] :
  int[13] =
  (272894 call . Dom c"low"), arg end[272906] :
  int[13] =
  (272903 call . Dom c"high")) : _unknown[51]
  {
    (272914 'import'(272911 call . Sort c"InsertionSort"))
    { scopeless
      const lo[272918] "const" start
      const hi[272922] "const" end
      const mid[272938] "const"(272936 call + lo(272934 call /(272931 call +(272928 call - hi lo) 1) 2))
      (272941 'end of statement')
    }
    { scopeless
      unknown piv[272943] mid
      (272946 'end of statement')
    }
    if(272982 call _cond_test(272952 call <(272949 call - hi lo) 0))
    {
      (272966 call(272957 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (272969 return)
    }
    {
      { scopeless
        if(272978 call _cond_test(272973 call <= hi lo))
        {
          (272975 return)
        }
      }
    }
    if(273074 call _cond_test(272992 call <(272989 call - hi lo) 100))
    {
      (273003 call = piv(273002 call order3 Data lo mid hi comparator))
    }
    {
      { scopeless
        const medLo[273021] "const"(273020 call order3 Data lo(273013 call + lo 1)(273017 call + lo 2) comparator)
        (273024 'end of statement')
      }
      { scopeless
        const medMid[273040] "const"(273039 call order3 Data(273031 call - mid 1) mid(273036 call + mid 1) comparator)
        (273043 'end of statement')
      }
      { scopeless
        const medHi[273058] "const"(273057 call order3 Data(273049 call - hi 2)(273053 call - hi 1) hi comparator)
        (273061 'end of statement')
      }
      (273071 call = piv(273070 call order3 Data medLo medMid medHi comparator))
    }
    { scopeless
      unknown tmp[273091] "temp"(273090 call partition Data lo piv hi comparator)
      (273098 call _check_tuple_var_decl tmp[273091] 2)
      unknown eqStart[273078](273092 call tmp[273091] 0)
      unknown eqEnd[273080](273095 call tmp[273091] 1)
      (273103 'end of statement')
    }
    if(273183 call _cond_test(273111 call <(273106 call - hi lo) 300))
    {
      (273123 call quickSortImpl Data minlen comparator lo(273121 call - eqStart 1))
      (273136 call quickSortImpl Data minlen comparator(273133 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273179] "index var" "insert auto destroy"
        iterated expressions:
          (273141 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273171 call _cond_test(273145 call == i 1))
          {
            { scopeless
              (273157 call quickSortImpl Data minlen comparator lo(273155 call - eqStart 1))
            }
          }
          {
            { scopeless
              (273169 call quickSortImpl Data minlen comparator(273166 call + eqEnd 1) hi)
            }
          }
        }
      }
    }
  }
}