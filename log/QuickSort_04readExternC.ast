AST dump for QuickSort after pass readExternC.
Module use list: 

{
  (353139 'use' ChapelStandard)
  (272130 'use' Sort)
  (272139 'use'(272136 call . Sort c"ShallowCopy"))
  function partition[272153](arg Data[272150] :
  (272148 call chpl__buildArrayRuntimeType unknown Dom[272143] unknown eltType[272146]), arg lo[272156] :
  int[13], arg pivIdx[272160] :
  int[13], arg hi[272164] :
  int[13], arg comparator[272167]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown a[272170] lo
      (272173 'end of statement')
    }
    { scopeless
      unknown b[272176] lo
      (272179 'end of statement')
    }
    { scopeless
      unknown c[272181] hi
      (272184 'end of statement')
    }
    { scopeless
      unknown d[272186] hi
      (272189 'end of statement')
    }
    if(272211 call _cond_test(272192 call != lo pivIdx))
    {
      { scopeless
        (272209 call(272197 call . ShallowCopy c"shallowSwap")(272203 call Data lo)(272208 call Data pivIdx))
      }
    }
    (272218 call += a 1)
    (272223 call += b 1)
    { scopeless
      unknown piv[272237] "no auto destroy"(272236 call(272228 call . ShallowCopy c"shallowCopyInit")(272234 call Data lo)) eltType
      (272240 'end of statement')
    }
    {
      unknown tmp[272471] "temp"
      (272489 'move' tmp[272471](272487 call _cond_test 1))
      WhileDo[272476]
      {
        {
          {
            unknown tmp[272315] "temp"
            (272339 'move' tmp[272315](272334 call _cond_test(272336 call <= b c)))
            WhileDo[272320]
            {
              {
                { scopeless
                  unknown cmp[272255](272254 call chpl_compare(272250 call Data b) piv comparator)
                  (272258 'end of statement')
                }
                if(272267 call _cond_test(272262 call > cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272306 call _cond_test(272274 call == cmp 0))
                {
                  if(272296 call _cond_test(272278 call != a b))
                  {
                    (272293 call(272281 call . ShallowCopy c"shallowSwap")(272287 call Data a)(272292 call Data b))
                  }
                  (272303 call += a 1)
                }
                (272312 call += b 1)
              }
              label _continueLabel[272318]
              (272329 'move' tmp[272315](272324 call _cond_test(272326 call <= b c)))
              tmp[272315]
            }
            label _breakLabel[272319]
          }
          {
            unknown tmp[272407] "temp"
            (272431 'move' tmp[272407](272426 call _cond_test(272428 call >= c b)))
            WhileDo[272412]
            {
              {
                { scopeless
                  unknown cmp[272356](272355 call chpl_compare(272351 call Data c) piv comparator)
                  (272359 'end of statement')
                }
                if(272368 call _cond_test(272363 call < cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272398 call _cond_test(272375 call == cmp 0))
                {
                  (272390 call(272378 call . ShallowCopy c"shallowSwap")(272384 call Data d)(272389 call Data c))
                  (272395 call -= d 1)
                }
                (272404 call -= c 1)
              }
              label _continueLabel[272410]
              (272421 'move' tmp[272407](272416 call _cond_test(272418 call >= c b)))
              tmp[272407]
            }
            label _breakLabel[272411]
          }
          if(272441 call _cond_test(272436 call > b c))
          {
            { scopeless
              break nil[44]
            }
          }
          (272459 call(272447 call . ShallowCopy c"shallowSwap")(272453 call Data b)(272458 call Data c))
          (272463 call += b 1)
          (272468 call -= c 1)
        }
        label _continueLabel[272474]
        (272482 'move' tmp[272471](272480 call _cond_test 1))
        tmp[272471]
      }
      label _breakLabel[272475]
    }
    (272502 call(272493 call . ShallowCopy c"shallowCopy")(272499 call Data lo) piv)
    { scopeless
      unknown s[272504] int[13]
      unknown l[272507](272517 'typeof' s)
      unknown h[272511](272515 'typeof' l)
      (272518 'end of statement')
    }
    (272531 call = s(272530 call min(272523 call - a lo)(272528 call - b a)))
    (272536 call = l lo)
    (272544 call = h(272542 call - b s))
    {
      unknown tmp[272582] "temp"
      (272606 'move' tmp[272582](272601 call _cond_test(272603 call > s 0)))
      WhileDo[272587]
      {
        {
          (272564 call(272552 call . ShallowCopy c"shallowSwap")(272558 call Data l)(272563 call Data h))
          (272569 call += l 1)
          (272574 call += h 1)
          (272579 call -= s 1)
        }
        label _continueLabel[272585]
        (272596 'move' tmp[272582](272591 call _cond_test(272593 call > s 0)))
        tmp[272582]
      }
      label _breakLabel[272586]
    }
    { scopeless
      unknown n[272613](272611 call + hi 1)
      (272616 'end of statement')
    }
    (272629 call = s(272628 call min(272621 call - d c)(272626 call - hi d)))
    (272634 call = l b)
    (272642 call = h(272640 call - n s))
    {
      unknown tmp[272680] "temp"
      (272704 'move' tmp[272680](272699 call _cond_test(272701 call > s 0)))
      WhileDo[272685]
      {
        {
          (272662 call(272650 call . ShallowCopy c"shallowSwap")(272656 call Data l)(272661 call Data h))
          (272667 call += l 1)
          (272672 call += h 1)
          (272677 call -= s 1)
        }
        label _continueLabel[272683]
        (272694 'move' tmp[272680](272689 call _cond_test(272691 call > s 0)))
        tmp[272680]
      }
      label _breakLabel[272684]
    }
    { scopeless
      unknown eqStart[272714](272712 call +(272709 call - b a) lo)
      (272717 'end of statement')
    }
    { scopeless
      unknown eqEnd[272725](272723 call - hi(272721 call - d c))
      (272728 'end of statement')
    }
    (272734 return(272732 call _build_tuple eqStart eqEnd))
  }
  function order3[272750](arg Data[272747] :
  (272745 call chpl__buildArrayRuntimeType unknown Dom[272740] unknown eltType[272743]), arg lo[272753] :
  int[13], arg mid[272757] :
  int[13], arg hi[272761] :
  int[13], arg comparator[272764]:_any[178](?)) : _unknown[51]
  {
    if(272886 call _cond_test(272780 call <(272778 call chpl_compare(272771 call Data lo)(272776 call Data mid) comparator) 0))
    {
      if(272828 call _cond_test(272795 call <(272793 call chpl_compare(272786 call Data hi)(272791 call Data lo) comparator) 0))
      {
        (272798 return lo)
      }
      {
        { scopeless
          if(272824 call _cond_test(272814 call <(272812 call chpl_compare(272805 call Data mid)(272810 call Data hi) comparator) 0))
          {
            (272817 return mid)
          }
          {
            (272821 return hi)
          }
        }
      }
    }
    {
      if(272880 call _cond_test(272847 call <(272845 call chpl_compare(272838 call Data lo)(272843 call Data hi) comparator) 0))
      {
        (272850 return lo)
      }
      {
        { scopeless
          if(272876 call _cond_test(272866 call <(272864 call chpl_compare(272857 call Data hi)(272862 call Data mid) comparator) 0))
          {
            (272869 return mid)
          }
          {
            (272873 return hi)
          }
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272906](arg Data[272903] :
  (272901 call chpl__buildArrayRuntimeType unknown Dom[272896] unknown eltType[272899]), arg minlen[272909] =
  16, arg comparator[272915] :
  unknown rec[272912] =
  defaultComparator) : _unknown[51]
  {
    (272923 call chpl_check_comparator comparator eltType)
    if(272955 call _cond_test(272931 call !=(272927 call . Dom c"rank") 1))
    {
      (272952 call compilerError "quickSort() requires 1-D array")
    }
    if(273020 call _cond_test(272970 call &&(272960 call . Dom c"stridable")(272968 call !=(272964 call . Dom c"stride") 1)))
    {
      { scopeless
        unknown reindexed[272992] "ref var"(272991 call(272975 call . Data c"reindex")(272988 call #(272982 call chpl_build_low_bounded_range(272979 call . Dom c"alignedLow"))(272985 call . Dom c"size")))
        (272995 'end of statement')
      }
      (273009 call assert(273006 call ==(273002 call .(272999 call . reindexed c"_dom") c"stride") 1))
      (273016 call quickSortImpl reindexed minlen comparator)
      (273018 return)
    }
    (273033 call assert(273030 call ==(273026 call . Dom c"stride") 1))
    (273040 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[273056](arg Data[273053] :
  (273051 call chpl__buildArrayRuntimeType unknown Dom[273046] unknown eltType[273049]), arg minlen[273059] =
  16, arg comparator[273065] :
  unknown rec[273062] =
  defaultComparator, arg start[273074] :
  int[13] =
  (273071 call . Dom c"low"), arg end[273083] :
  int[13] =
  (273080 call . Dom c"high")) : _unknown[51]
  {
    (273091 'import'(273088 call . Sort c"InsertionSort"))
    { scopeless
      const lo[273095] "const" start
      const hi[273099] "const" end
      const mid[273115] "const"(273113 call + lo(273111 call /(273108 call +(273105 call - hi lo) 1) 2))
      (273118 'end of statement')
    }
    { scopeless
      unknown piv[273120] mid
      (273123 'end of statement')
    }
    if(273159 call _cond_test(273129 call <(273126 call - hi lo) 0))
    {
      (273143 call(273134 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (273146 return)
    }
    {
      { scopeless
        if(273155 call _cond_test(273150 call <= hi lo))
        {
          (273152 return)
        }
      }
    }
    if(273251 call _cond_test(273169 call <(273166 call - hi lo) 100))
    {
      (273180 call = piv(273179 call order3 Data lo mid hi comparator))
    }
    {
      { scopeless
        const medLo[273198] "const"(273197 call order3 Data lo(273190 call + lo 1)(273194 call + lo 2) comparator)
        (273201 'end of statement')
      }
      { scopeless
        const medMid[273217] "const"(273216 call order3 Data(273208 call - mid 1) mid(273213 call + mid 1) comparator)
        (273220 'end of statement')
      }
      { scopeless
        const medHi[273235] "const"(273234 call order3 Data(273226 call - hi 2)(273230 call - hi 1) hi comparator)
        (273238 'end of statement')
      }
      (273248 call = piv(273247 call order3 Data medLo medMid medHi comparator))
    }
    { scopeless
      unknown tmp[273268] "temp"(273267 call partition Data lo piv hi comparator)
      (273275 call _check_tuple_var_decl tmp[273268] 2)
      unknown eqStart[273255](273269 call tmp[273268] 0)
      unknown eqEnd[273257](273272 call tmp[273268] 1)
      (273280 'end of statement')
    }
    if(273361 call _cond_test(273288 call <(273283 call - hi lo) 300))
    {
      (273300 call quickSortImpl Data minlen comparator lo(273298 call - eqStart 1))
      (273313 call quickSortImpl Data minlen comparator(273310 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273356] "index var" "insert auto destroy"
        iterated expressions:
          (273318 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273348 call _cond_test(273322 call == i 1))
          {
            { scopeless
              (273334 call quickSortImpl Data minlen comparator lo(273332 call - eqStart 1))
            }
          }
          {
            { scopeless
              (273346 call quickSortImpl Data minlen comparator(273343 call + eqEnd 1) hi)
            }
          }
        }
      }
    }
  }
}