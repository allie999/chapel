AST dump for QuickSort after pass readExternC.
Module use list: 

{
  (353030 'use' ChapelStandard)
  (272041 'use' Sort)
  (272050 'use'(272047 call . Sort c"ShallowCopy"))
  function partition[272064](arg Data[272061] :
  (272059 call chpl__buildArrayRuntimeType unknown Dom[272054] unknown eltType[272057]), arg lo[272067] :
  int[13], arg pivIdx[272071] :
  int[13], arg hi[272075] :
  int[13], arg comparator[272078]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown a[272081] lo
      (272084 'end of statement')
    }
    { scopeless
      unknown b[272087] lo
      (272090 'end of statement')
    }
    { scopeless
      unknown c[272092] hi
      (272095 'end of statement')
    }
    { scopeless
      unknown d[272097] hi
      (272100 'end of statement')
    }
    if(272122 call _cond_test(272103 call != lo pivIdx))
    {
      { scopeless
        (272120 call(272108 call . ShallowCopy c"shallowSwap")(272114 call Data lo)(272119 call Data pivIdx))
      }
    }
    (272129 call += a 1)
    (272134 call += b 1)
    { scopeless
      unknown piv[272148] "no auto destroy"(272147 call(272139 call . ShallowCopy c"shallowCopyInit")(272145 call Data lo)) eltType
      (272151 'end of statement')
    }
    {
      unknown tmp[272382] "temp"
      (272400 'move' tmp[272382](272398 call _cond_test 1))
      WhileDo[272387]
      {
        {
          {
            unknown tmp[272226] "temp"
            (272250 'move' tmp[272226](272245 call _cond_test(272247 call <= b c)))
            WhileDo[272231]
            {
              {
                { scopeless
                  unknown cmp[272166](272165 call chpl_compare(272161 call Data b) piv comparator)
                  (272169 'end of statement')
                }
                if(272178 call _cond_test(272173 call > cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272217 call _cond_test(272185 call == cmp 0))
                {
                  if(272207 call _cond_test(272189 call != a b))
                  {
                    (272204 call(272192 call . ShallowCopy c"shallowSwap")(272198 call Data a)(272203 call Data b))
                  }
                  (272214 call += a 1)
                }
                (272223 call += b 1)
              }
              label _continueLabel[272229]
              (272240 'move' tmp[272226](272235 call _cond_test(272237 call <= b c)))
              tmp[272226]
            }
            label _breakLabel[272230]
          }
          {
            unknown tmp[272318] "temp"
            (272342 'move' tmp[272318](272337 call _cond_test(272339 call >= c b)))
            WhileDo[272323]
            {
              {
                { scopeless
                  unknown cmp[272267](272266 call chpl_compare(272262 call Data c) piv comparator)
                  (272270 'end of statement')
                }
                if(272279 call _cond_test(272274 call < cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272309 call _cond_test(272286 call == cmp 0))
                {
                  (272301 call(272289 call . ShallowCopy c"shallowSwap")(272295 call Data d)(272300 call Data c))
                  (272306 call -= d 1)
                }
                (272315 call -= c 1)
              }
              label _continueLabel[272321]
              (272332 'move' tmp[272318](272327 call _cond_test(272329 call >= c b)))
              tmp[272318]
            }
            label _breakLabel[272322]
          }
          if(272352 call _cond_test(272347 call > b c))
          {
            { scopeless
              break nil[44]
            }
          }
          (272370 call(272358 call . ShallowCopy c"shallowSwap")(272364 call Data b)(272369 call Data c))
          (272374 call += b 1)
          (272379 call -= c 1)
        }
        label _continueLabel[272385]
        (272393 'move' tmp[272382](272391 call _cond_test 1))
        tmp[272382]
      }
      label _breakLabel[272386]
    }
    (272413 call(272404 call . ShallowCopy c"shallowCopy")(272410 call Data lo) piv)
    { scopeless
      unknown s[272415] int[13]
      unknown l[272418](272428 'typeof' s)
      unknown h[272422](272426 'typeof' l)
      (272429 'end of statement')
    }
    (272442 call = s(272441 call min(272434 call - a lo)(272439 call - b a)))
    (272447 call = l lo)
    (272455 call = h(272453 call - b s))
    {
      unknown tmp[272493] "temp"
      (272517 'move' tmp[272493](272512 call _cond_test(272514 call > s 0)))
      WhileDo[272498]
      {
        {
          (272475 call(272463 call . ShallowCopy c"shallowSwap")(272469 call Data l)(272474 call Data h))
          (272480 call += l 1)
          (272485 call += h 1)
          (272490 call -= s 1)
        }
        label _continueLabel[272496]
        (272507 'move' tmp[272493](272502 call _cond_test(272504 call > s 0)))
        tmp[272493]
      }
      label _breakLabel[272497]
    }
    { scopeless
      unknown n[272524](272522 call + hi 1)
      (272527 'end of statement')
    }
    (272540 call = s(272539 call min(272532 call - d c)(272537 call - hi d)))
    (272545 call = l b)
    (272553 call = h(272551 call - n s))
    {
      unknown tmp[272591] "temp"
      (272615 'move' tmp[272591](272610 call _cond_test(272612 call > s 0)))
      WhileDo[272596]
      {
        {
          (272573 call(272561 call . ShallowCopy c"shallowSwap")(272567 call Data l)(272572 call Data h))
          (272578 call += l 1)
          (272583 call += h 1)
          (272588 call -= s 1)
        }
        label _continueLabel[272594]
        (272605 'move' tmp[272591](272600 call _cond_test(272602 call > s 0)))
        tmp[272591]
      }
      label _breakLabel[272595]
    }
    { scopeless
      unknown eqStart[272625](272623 call +(272620 call - b a) lo)
      (272628 'end of statement')
    }
    { scopeless
      unknown eqEnd[272636](272634 call - hi(272632 call - d c))
      (272639 'end of statement')
    }
    (272645 return(272643 call _build_tuple eqStart eqEnd))
  }
  function order3[272661](arg Data[272658] :
  (272656 call chpl__buildArrayRuntimeType unknown Dom[272651] unknown eltType[272654]), arg lo[272664] :
  int[13], arg mid[272668] :
  int[13], arg hi[272672] :
  int[13], arg comparator[272675]:_any[178](?)) : _unknown[51]
  {
    if(272797 call _cond_test(272691 call <(272689 call chpl_compare(272682 call Data lo)(272687 call Data mid) comparator) 0))
    {
      if(272739 call _cond_test(272706 call <(272704 call chpl_compare(272697 call Data hi)(272702 call Data lo) comparator) 0))
      {
        (272709 return lo)
      }
      {
        { scopeless
          if(272735 call _cond_test(272725 call <(272723 call chpl_compare(272716 call Data mid)(272721 call Data hi) comparator) 0))
          {
            (272728 return mid)
          }
          {
            (272732 return hi)
          }
        }
      }
    }
    {
      if(272791 call _cond_test(272758 call <(272756 call chpl_compare(272749 call Data lo)(272754 call Data hi) comparator) 0))
      {
        (272761 return lo)
      }
      {
        { scopeless
          if(272787 call _cond_test(272777 call <(272775 call chpl_compare(272768 call Data hi)(272773 call Data mid) comparator) 0))
          {
            (272780 return mid)
          }
          {
            (272784 return hi)
          }
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272817](arg Data[272814] :
  (272812 call chpl__buildArrayRuntimeType unknown Dom[272807] unknown eltType[272810]), arg minlen[272820] =
  16, arg comparator[272826] :
  unknown rec[272823] =
  defaultComparator) : _unknown[51]
  {
    (272834 call chpl_check_comparator comparator eltType)
    if(272866 call _cond_test(272842 call !=(272838 call . Dom c"rank") 1))
    {
      (272863 call compilerError "quickSort() requires 1-D array")
    }
    if(272931 call _cond_test(272881 call &&(272871 call . Dom c"stridable")(272879 call !=(272875 call . Dom c"stride") 1)))
    {
      { scopeless
        unknown reindexed[272903] "ref var"(272902 call(272886 call . Data c"reindex")(272899 call #(272893 call chpl_build_low_bounded_range(272890 call . Dom c"alignedLow"))(272896 call . Dom c"size")))
        (272906 'end of statement')
      }
      (272920 call assert(272917 call ==(272913 call .(272910 call . reindexed c"_dom") c"stride") 1))
      (272927 call quickSortImpl reindexed minlen comparator)
      (272929 return)
    }
    (272944 call assert(272941 call ==(272937 call . Dom c"stride") 1))
    (272951 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[272967](arg Data[272964] :
  (272962 call chpl__buildArrayRuntimeType unknown Dom[272957] unknown eltType[272960]), arg minlen[272970] =
  16, arg comparator[272976] :
  unknown rec[272973] =
  defaultComparator, arg start[272985] :
  int[13] =
  (272982 call . Dom c"low"), arg end[272994] :
  int[13] =
  (272991 call . Dom c"high")) : _unknown[51]
  {
    (273002 'import'(272999 call . Sort c"InsertionSort"))
    { scopeless
      const lo[273006] "const" start
      const hi[273010] "const" end
      const mid[273026] "const"(273024 call + lo(273022 call /(273019 call +(273016 call - hi lo) 1) 2))
      (273029 'end of statement')
    }
    { scopeless
      unknown piv[273031] mid
      (273034 'end of statement')
    }
    if(273070 call _cond_test(273040 call <(273037 call - hi lo) 0))
    {
      (273054 call(273045 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (273057 return)
    }
    {
      { scopeless
        if(273066 call _cond_test(273061 call <= hi lo))
        {
          (273063 return)
        }
      }
    }
    if(273162 call _cond_test(273080 call <(273077 call - hi lo) 100))
    {
      (273091 call = piv(273090 call order3 Data lo mid hi comparator))
    }
    {
      { scopeless
        const medLo[273109] "const"(273108 call order3 Data lo(273101 call + lo 1)(273105 call + lo 2) comparator)
        (273112 'end of statement')
      }
      { scopeless
        const medMid[273128] "const"(273127 call order3 Data(273119 call - mid 1) mid(273124 call + mid 1) comparator)
        (273131 'end of statement')
      }
      { scopeless
        const medHi[273146] "const"(273145 call order3 Data(273137 call - hi 2)(273141 call - hi 1) hi comparator)
        (273149 'end of statement')
      }
      (273159 call = piv(273158 call order3 Data medLo medMid medHi comparator))
    }
    { scopeless
      unknown tmp[273179] "temp"(273178 call partition Data lo piv hi comparator)
      (273186 call _check_tuple_var_decl tmp[273179] 2)
      unknown eqStart[273166](273180 call tmp[273179] 0)
      unknown eqEnd[273168](273183 call tmp[273179] 1)
      (273191 'end of statement')
    }
    if(273271 call _cond_test(273199 call <(273194 call - hi lo) 300))
    {
      (273211 call quickSortImpl Data minlen comparator lo(273209 call - eqStart 1))
      (273224 call quickSortImpl Data minlen comparator(273221 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273267] "index var" "insert auto destroy"
        iterated expressions:
          (273229 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273259 call _cond_test(273233 call == i 1))
          {
            { scopeless
              (273245 call quickSortImpl Data minlen comparator lo(273243 call - eqStart 1))
            }
          }
          {
            { scopeless
              (273257 call quickSortImpl Data minlen comparator(273254 call + eqEnd 1) hi)
            }
          }
        }
      }
    }
  }
}