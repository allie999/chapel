AST dump for QuickSort after pass readExternC.
Module use list: 

{
  (353072 'use' ChapelStandard)
  (272063 'use' Sort)
  (272072 'use'(272069 call . Sort c"ShallowCopy"))
  function partition[272086](arg Data[272083] :
  (272081 call chpl__buildArrayRuntimeType unknown Dom[272076] unknown eltType[272079]), arg lo[272089] :
  int[13], arg pivIdx[272093] :
  int[13], arg hi[272097] :
  int[13], arg comparator[272100]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown a[272103] lo
      (272106 'end of statement')
    }
    { scopeless
      unknown b[272109] lo
      (272112 'end of statement')
    }
    { scopeless
      unknown c[272114] hi
      (272117 'end of statement')
    }
    { scopeless
      unknown d[272119] hi
      (272122 'end of statement')
    }
    if(272144 call _cond_test(272125 call != lo pivIdx))
    {
      { scopeless
        (272142 call(272130 call . ShallowCopy c"shallowSwap")(272136 call Data lo)(272141 call Data pivIdx))
      }
    }
    (272151 call += a 1)
    (272156 call += b 1)
    { scopeless
      unknown piv[272170] "no auto destroy"(272169 call(272161 call . ShallowCopy c"shallowCopyInit")(272167 call Data lo)) eltType
      (272173 'end of statement')
    }
    {
      unknown tmp[272404] "temp"
      (272422 'move' tmp[272404](272420 call _cond_test 1))
      WhileDo[272409]
      {
        {
          {
            unknown tmp[272248] "temp"
            (272272 'move' tmp[272248](272267 call _cond_test(272269 call <= b c)))
            WhileDo[272253]
            {
              {
                { scopeless
                  unknown cmp[272188](272187 call chpl_compare(272183 call Data b) piv comparator)
                  (272191 'end of statement')
                }
                if(272200 call _cond_test(272195 call > cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272239 call _cond_test(272207 call == cmp 0))
                {
                  if(272229 call _cond_test(272211 call != a b))
                  {
                    (272226 call(272214 call . ShallowCopy c"shallowSwap")(272220 call Data a)(272225 call Data b))
                  }
                  (272236 call += a 1)
                }
                (272245 call += b 1)
              }
              label _continueLabel[272251]
              (272262 'move' tmp[272248](272257 call _cond_test(272259 call <= b c)))
              tmp[272248]
            }
            label _breakLabel[272252]
          }
          {
            unknown tmp[272340] "temp"
            (272364 'move' tmp[272340](272359 call _cond_test(272361 call >= c b)))
            WhileDo[272345]
            {
              {
                { scopeless
                  unknown cmp[272289](272288 call chpl_compare(272284 call Data c) piv comparator)
                  (272292 'end of statement')
                }
                if(272301 call _cond_test(272296 call < cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272331 call _cond_test(272308 call == cmp 0))
                {
                  (272323 call(272311 call . ShallowCopy c"shallowSwap")(272317 call Data d)(272322 call Data c))
                  (272328 call -= d 1)
                }
                (272337 call -= c 1)
              }
              label _continueLabel[272343]
              (272354 'move' tmp[272340](272349 call _cond_test(272351 call >= c b)))
              tmp[272340]
            }
            label _breakLabel[272344]
          }
          if(272374 call _cond_test(272369 call > b c))
          {
            { scopeless
              break nil[44]
            }
          }
          (272392 call(272380 call . ShallowCopy c"shallowSwap")(272386 call Data b)(272391 call Data c))
          (272396 call += b 1)
          (272401 call -= c 1)
        }
        label _continueLabel[272407]
        (272415 'move' tmp[272404](272413 call _cond_test 1))
        tmp[272404]
      }
      label _breakLabel[272408]
    }
    (272435 call(272426 call . ShallowCopy c"shallowCopy")(272432 call Data lo) piv)
    { scopeless
      unknown s[272437] int[13]
      unknown l[272440](272450 'typeof' s)
      unknown h[272444](272448 'typeof' l)
      (272451 'end of statement')
    }
    (272464 call = s(272463 call min(272456 call - a lo)(272461 call - b a)))
    (272469 call = l lo)
    (272477 call = h(272475 call - b s))
    {
      unknown tmp[272515] "temp"
      (272539 'move' tmp[272515](272534 call _cond_test(272536 call > s 0)))
      WhileDo[272520]
      {
        {
          (272497 call(272485 call . ShallowCopy c"shallowSwap")(272491 call Data l)(272496 call Data h))
          (272502 call += l 1)
          (272507 call += h 1)
          (272512 call -= s 1)
        }
        label _continueLabel[272518]
        (272529 'move' tmp[272515](272524 call _cond_test(272526 call > s 0)))
        tmp[272515]
      }
      label _breakLabel[272519]
    }
    { scopeless
      unknown n[272546](272544 call + hi 1)
      (272549 'end of statement')
    }
    (272562 call = s(272561 call min(272554 call - d c)(272559 call - hi d)))
    (272567 call = l b)
    (272575 call = h(272573 call - n s))
    {
      unknown tmp[272613] "temp"
      (272637 'move' tmp[272613](272632 call _cond_test(272634 call > s 0)))
      WhileDo[272618]
      {
        {
          (272595 call(272583 call . ShallowCopy c"shallowSwap")(272589 call Data l)(272594 call Data h))
          (272600 call += l 1)
          (272605 call += h 1)
          (272610 call -= s 1)
        }
        label _continueLabel[272616]
        (272627 'move' tmp[272613](272622 call _cond_test(272624 call > s 0)))
        tmp[272613]
      }
      label _breakLabel[272617]
    }
    { scopeless
      unknown eqStart[272647](272645 call +(272642 call - b a) lo)
      (272650 'end of statement')
    }
    { scopeless
      unknown eqEnd[272658](272656 call - hi(272654 call - d c))
      (272661 'end of statement')
    }
    (272667 return(272665 call _build_tuple eqStart eqEnd))
  }
  function order3[272683](arg Data[272680] :
  (272678 call chpl__buildArrayRuntimeType unknown Dom[272673] unknown eltType[272676]), arg lo[272686] :
  int[13], arg mid[272690] :
  int[13], arg hi[272694] :
  int[13], arg comparator[272697]:_any[178](?)) : _unknown[51]
  {
    if(272819 call _cond_test(272713 call <(272711 call chpl_compare(272704 call Data lo)(272709 call Data mid) comparator) 0))
    {
      if(272761 call _cond_test(272728 call <(272726 call chpl_compare(272719 call Data hi)(272724 call Data lo) comparator) 0))
      {
        (272731 return lo)
      }
      {
        { scopeless
          if(272757 call _cond_test(272747 call <(272745 call chpl_compare(272738 call Data mid)(272743 call Data hi) comparator) 0))
          {
            (272750 return mid)
          }
          {
            (272754 return hi)
          }
        }
      }
    }
    {
      if(272813 call _cond_test(272780 call <(272778 call chpl_compare(272771 call Data lo)(272776 call Data hi) comparator) 0))
      {
        (272783 return lo)
      }
      {
        { scopeless
          if(272809 call _cond_test(272799 call <(272797 call chpl_compare(272790 call Data hi)(272795 call Data mid) comparator) 0))
          {
            (272802 return mid)
          }
          {
            (272806 return hi)
          }
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272839](arg Data[272836] :
  (272834 call chpl__buildArrayRuntimeType unknown Dom[272829] unknown eltType[272832]), arg minlen[272842] =
  16, arg comparator[272848] :
  unknown rec[272845] =
  defaultComparator) : _unknown[51]
  {
    (272856 call chpl_check_comparator comparator eltType)
    if(272888 call _cond_test(272864 call !=(272860 call . Dom c"rank") 1))
    {
      (272885 call compilerError "quickSort() requires 1-D array")
    }
    if(272953 call _cond_test(272903 call &&(272893 call . Dom c"stridable")(272901 call !=(272897 call . Dom c"stride") 1)))
    {
      { scopeless
        unknown reindexed[272925] "ref var"(272924 call(272908 call . Data c"reindex")(272921 call #(272915 call chpl_build_low_bounded_range(272912 call . Dom c"alignedLow"))(272918 call . Dom c"size")))
        (272928 'end of statement')
      }
      (272942 call assert(272939 call ==(272935 call .(272932 call . reindexed c"_dom") c"stride") 1))
      (272949 call quickSortImpl reindexed minlen comparator)
      (272951 return)
    }
    (272966 call assert(272963 call ==(272959 call . Dom c"stride") 1))
    (272973 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[272989](arg Data[272986] :
  (272984 call chpl__buildArrayRuntimeType unknown Dom[272979] unknown eltType[272982]), arg minlen[272992] =
  16, arg comparator[272998] :
  unknown rec[272995] =
  defaultComparator, arg start[273007] :
  int[13] =
  (273004 call . Dom c"low"), arg end[273016] :
  int[13] =
  (273013 call . Dom c"high")) : _unknown[51]
  {
    (273024 'import'(273021 call . Sort c"InsertionSort"))
    { scopeless
      const lo[273028] "const" start
      const hi[273032] "const" end
      const mid[273048] "const"(273046 call + lo(273044 call /(273041 call +(273038 call - hi lo) 1) 2))
      (273051 'end of statement')
    }
    { scopeless
      unknown piv[273053] mid
      (273056 'end of statement')
    }
    if(273092 call _cond_test(273062 call <(273059 call - hi lo) 0))
    {
      (273076 call(273067 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (273079 return)
    }
    {
      { scopeless
        if(273088 call _cond_test(273083 call <= hi lo))
        {
          (273085 return)
        }
      }
    }
    if(273184 call _cond_test(273102 call <(273099 call - hi lo) 100))
    {
      (273113 call = piv(273112 call order3 Data lo mid hi comparator))
    }
    {
      { scopeless
        const medLo[273131] "const"(273130 call order3 Data lo(273123 call + lo 1)(273127 call + lo 2) comparator)
        (273134 'end of statement')
      }
      { scopeless
        const medMid[273150] "const"(273149 call order3 Data(273141 call - mid 1) mid(273146 call + mid 1) comparator)
        (273153 'end of statement')
      }
      { scopeless
        const medHi[273168] "const"(273167 call order3 Data(273159 call - hi 2)(273163 call - hi 1) hi comparator)
        (273171 'end of statement')
      }
      (273181 call = piv(273180 call order3 Data medLo medMid medHi comparator))
    }
    { scopeless
      unknown tmp[273201] "temp"(273200 call partition Data lo piv hi comparator)
      (273208 call _check_tuple_var_decl tmp[273201] 2)
      unknown eqStart[273188](273202 call tmp[273201] 0)
      unknown eqEnd[273190](273205 call tmp[273201] 1)
      (273213 'end of statement')
    }
    if(273294 call _cond_test(273221 call <(273216 call - hi lo) 300))
    {
      (273233 call quickSortImpl Data minlen comparator lo(273231 call - eqStart 1))
      (273246 call quickSortImpl Data minlen comparator(273243 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273289] "index var" "insert auto destroy"
        iterated expressions:
          (273251 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273281 call _cond_test(273255 call == i 1))
          {
            { scopeless
              (273267 call quickSortImpl Data minlen comparator lo(273265 call - eqStart 1))
            }
          }
          {
            { scopeless
              (273279 call quickSortImpl Data minlen comparator(273276 call + eqEnd 1) hi)
            }
          }
        }
      }
    }
  }
}