AST dump for QuickSort after pass readExternC.
Module use list: 

{
  (353087 'use' ChapelStandard)
  (271958 'use' Sort)
  (271967 'use'(271964 call . Sort c"ShallowCopy"))
  function partition[271981](arg Data[271978] :
  (271976 call chpl__buildArrayRuntimeType unknown Dom[271971] unknown eltType[271974]), arg lo[271984] :
  int[13], arg pivIdx[271988] :
  int[13], arg hi[271992] :
  int[13], arg comparator[271995]:_any[178](?)) : _unknown[51]
  {
    { scopeless
      unknown a[271998] lo
      (272001 'end of statement')
    }
    { scopeless
      unknown b[272004] lo
      (272007 'end of statement')
    }
    { scopeless
      unknown c[272009] hi
      (272012 'end of statement')
    }
    { scopeless
      unknown d[272014] hi
      (272017 'end of statement')
    }
    if(272039 call _cond_test(272020 call != lo pivIdx))
    {
      { scopeless
        (272037 call(272025 call . ShallowCopy c"shallowSwap")(272031 call Data lo)(272036 call Data pivIdx))
      }
    }
    (272046 call += a 1)
    (272051 call += b 1)
    { scopeless
      unknown piv[272065] "no auto destroy"(272064 call(272056 call . ShallowCopy c"shallowCopyInit")(272062 call Data lo)) eltType
      (272068 'end of statement')
    }
    {
      unknown tmp[272299] "temp"
      (272317 'move' tmp[272299](272315 call _cond_test 1))
      WhileDo[272304]
      {
        {
          {
            unknown tmp[272143] "temp"
            (272167 'move' tmp[272143](272162 call _cond_test(272164 call <= b c)))
            WhileDo[272148]
            {
              {
                { scopeless
                  unknown cmp[272083](272082 call chpl_compare(272078 call Data b) piv comparator)
                  (272086 'end of statement')
                }
                if(272095 call _cond_test(272090 call > cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272134 call _cond_test(272102 call == cmp 0))
                {
                  if(272124 call _cond_test(272106 call != a b))
                  {
                    (272121 call(272109 call . ShallowCopy c"shallowSwap")(272115 call Data a)(272120 call Data b))
                  }
                  (272131 call += a 1)
                }
                (272140 call += b 1)
              }
              label _continueLabel[272146]
              (272157 'move' tmp[272143](272152 call _cond_test(272154 call <= b c)))
              tmp[272143]
            }
            label _breakLabel[272147]
          }
          {
            unknown tmp[272235] "temp"
            (272259 'move' tmp[272235](272254 call _cond_test(272256 call >= c b)))
            WhileDo[272240]
            {
              {
                { scopeless
                  unknown cmp[272184](272183 call chpl_compare(272179 call Data c) piv comparator)
                  (272187 'end of statement')
                }
                if(272196 call _cond_test(272191 call < cmp 0))
                {
                  { scopeless
                    break nil[44]
                  }
                }
                if(272226 call _cond_test(272203 call == cmp 0))
                {
                  (272218 call(272206 call . ShallowCopy c"shallowSwap")(272212 call Data d)(272217 call Data c))
                  (272223 call -= d 1)
                }
                (272232 call -= c 1)
              }
              label _continueLabel[272238]
              (272249 'move' tmp[272235](272244 call _cond_test(272246 call >= c b)))
              tmp[272235]
            }
            label _breakLabel[272239]
          }
          if(272269 call _cond_test(272264 call > b c))
          {
            { scopeless
              break nil[44]
            }
          }
          (272287 call(272275 call . ShallowCopy c"shallowSwap")(272281 call Data b)(272286 call Data c))
          (272291 call += b 1)
          (272296 call -= c 1)
        }
        label _continueLabel[272302]
        (272310 'move' tmp[272299](272308 call _cond_test 1))
        tmp[272299]
      }
      label _breakLabel[272303]
    }
    (272330 call(272321 call . ShallowCopy c"shallowCopy")(272327 call Data lo) piv)
    { scopeless
      unknown s[272332] int[13]
      unknown l[272335](272345 'typeof' s)
      unknown h[272339](272343 'typeof' l)
      (272346 'end of statement')
    }
    (272359 call = s(272358 call min(272351 call - a lo)(272356 call - b a)))
    (272364 call = l lo)
    (272372 call = h(272370 call - b s))
    {
      unknown tmp[272410] "temp"
      (272434 'move' tmp[272410](272429 call _cond_test(272431 call > s 0)))
      WhileDo[272415]
      {
        {
          (272392 call(272380 call . ShallowCopy c"shallowSwap")(272386 call Data l)(272391 call Data h))
          (272397 call += l 1)
          (272402 call += h 1)
          (272407 call -= s 1)
        }
        label _continueLabel[272413]
        (272424 'move' tmp[272410](272419 call _cond_test(272421 call > s 0)))
        tmp[272410]
      }
      label _breakLabel[272414]
    }
    { scopeless
      unknown n[272441](272439 call + hi 1)
      (272444 'end of statement')
    }
    (272457 call = s(272456 call min(272449 call - d c)(272454 call - hi d)))
    (272462 call = l b)
    (272470 call = h(272468 call - n s))
    {
      unknown tmp[272508] "temp"
      (272532 'move' tmp[272508](272527 call _cond_test(272529 call > s 0)))
      WhileDo[272513]
      {
        {
          (272490 call(272478 call . ShallowCopy c"shallowSwap")(272484 call Data l)(272489 call Data h))
          (272495 call += l 1)
          (272500 call += h 1)
          (272505 call -= s 1)
        }
        label _continueLabel[272511]
        (272522 'move' tmp[272508](272517 call _cond_test(272519 call > s 0)))
        tmp[272508]
      }
      label _breakLabel[272512]
    }
    { scopeless
      unknown eqStart[272542](272540 call +(272537 call - b a) lo)
      (272545 'end of statement')
    }
    { scopeless
      unknown eqEnd[272553](272551 call - hi(272549 call - d c))
      (272556 'end of statement')
    }
    (272562 return(272560 call _build_tuple eqStart eqEnd))
  }
  function order3[272578](arg Data[272575] :
  (272573 call chpl__buildArrayRuntimeType unknown Dom[272568] unknown eltType[272571]), arg lo[272581] :
  int[13], arg mid[272585] :
  int[13], arg hi[272589] :
  int[13], arg comparator[272592]:_any[178](?)) : _unknown[51]
  {
    if(272714 call _cond_test(272608 call <(272606 call chpl_compare(272599 call Data lo)(272604 call Data mid) comparator) 0))
    {
      if(272656 call _cond_test(272623 call <(272621 call chpl_compare(272614 call Data hi)(272619 call Data lo) comparator) 0))
      {
        (272626 return lo)
      }
      {
        { scopeless
          if(272652 call _cond_test(272642 call <(272640 call chpl_compare(272633 call Data mid)(272638 call Data hi) comparator) 0))
          {
            (272645 return mid)
          }
          {
            (272649 return hi)
          }
        }
      }
    }
    {
      if(272708 call _cond_test(272675 call <(272673 call chpl_compare(272666 call Data lo)(272671 call Data hi) comparator) 0))
      {
        (272678 return lo)
      }
      {
        { scopeless
          if(272704 call _cond_test(272694 call <(272692 call chpl_compare(272685 call Data hi)(272690 call Data mid) comparator) 0))
          {
            (272697 return mid)
          }
          {
            (272701 return hi)
          }
        }
      }
    }
  }
  { scopeless type
    int[13]
  }
  function quickSort[272734](arg Data[272731] :
  (272729 call chpl__buildArrayRuntimeType unknown Dom[272724] unknown eltType[272727]), arg minlen[272737] =
  16, arg comparator[272743] :
  unknown rec[272740] =
  defaultComparator) : _unknown[51]
  {
    (272751 call chpl_check_comparator comparator eltType)
    if(272783 call _cond_test(272759 call !=(272755 call . Dom c"rank") 1))
    {
      (272780 call compilerError "quickSort() requires 1-D array")
    }
    if(272848 call _cond_test(272798 call &&(272788 call . Dom c"stridable")(272796 call !=(272792 call . Dom c"stride") 1)))
    {
      { scopeless
        unknown reindexed[272820] "ref var"(272819 call(272803 call . Data c"reindex")(272816 call #(272810 call chpl_build_low_bounded_range(272807 call . Dom c"alignedLow"))(272813 call . Dom c"size")))
        (272823 'end of statement')
      }
      (272837 call assert(272834 call ==(272830 call .(272827 call . reindexed c"_dom") c"stride") 1))
      (272844 call quickSortImpl reindexed minlen comparator)
      (272846 return)
    }
    (272861 call assert(272858 call ==(272854 call . Dom c"stride") 1))
    (272868 call quickSortImpl Data minlen comparator)
  }
  function quickSortImpl[272884](arg Data[272881] :
  (272879 call chpl__buildArrayRuntimeType unknown Dom[272874] unknown eltType[272877]), arg minlen[272887] =
  16, arg comparator[272893] :
  unknown rec[272890] =
  defaultComparator, arg start[272902] :
  int[13] =
  (272899 call . Dom c"low"), arg end[272911] :
  int[13] =
  (272908 call . Dom c"high")) : _unknown[51]
  {
    (272919 'import'(272916 call . Sort c"InsertionSort"))
    { scopeless
      const lo[272923] "const" start
      const hi[272927] "const" end
      const mid[272943] "const"(272941 call + lo(272939 call /(272936 call +(272933 call - hi lo) 1) 2))
      (272946 'end of statement')
    }
    { scopeless
      unknown piv[272948] mid
      (272951 'end of statement')
    }
    if(272987 call _cond_test(272957 call <(272954 call - hi lo) 0))
    {
      (272971 call(272962 call . InsertionSort c"insertionSortMoveElts") Data(comparator = comparator) lo hi)
      (272974 return)
    }
    {
      { scopeless
        if(272983 call _cond_test(272978 call <= hi lo))
        {
          (272980 return)
        }
      }
    }
    if(273079 call _cond_test(272997 call <(272994 call - hi lo) 100))
    {
      (273008 call = piv(273007 call order3 Data lo mid hi comparator))
    }
    {
      { scopeless
        const medLo[273026] "const"(273025 call order3 Data lo(273018 call + lo 1)(273022 call + lo 2) comparator)
        (273029 'end of statement')
      }
      { scopeless
        const medMid[273045] "const"(273044 call order3 Data(273036 call - mid 1) mid(273041 call + mid 1) comparator)
        (273048 'end of statement')
      }
      { scopeless
        const medHi[273063] "const"(273062 call order3 Data(273054 call - hi 2)(273058 call - hi 1) hi comparator)
        (273066 'end of statement')
      }
      (273076 call = piv(273075 call order3 Data medLo medMid medHi comparator))
    }
    { scopeless
      unknown tmp[273096] "temp"(273095 call partition Data lo piv hi comparator)
      (273103 call _check_tuple_var_decl tmp[273096] 2)
      unknown eqStart[273083](273097 call tmp[273096] 0)
      unknown eqEnd[273085](273100 call tmp[273096] 1)
      (273108 'end of statement')
    }
    if(273188 call _cond_test(273116 call <(273111 call - hi lo) 300))
    {
      (273128 call quickSortImpl Data minlen comparator lo(273126 call - eqStart 1))
      (273141 call quickSortImpl Data minlen comparator(273138 call + eqEnd 1) hi)
    }
    {
      Forall {
        induction variables:
          
          unknown i[273184] "index var" "insert auto destroy"
        iterated expressions:
          (273146 call chpl_build_bounded_range 1 2)
        shadow variables:
        other variables
          forall body
        {
          if(273176 call _cond_test(273150 call == i 1))
          {
            { scopeless
              (273162 call quickSortImpl Data minlen comparator lo(273160 call - eqStart 1))
            }
          }
          {
            { scopeless
              (273174 call quickSortImpl Data minlen comparator(273171 call + eqEnd 1) hi)
            }
          }
        }
      }
    }
  }
}