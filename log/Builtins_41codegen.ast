AST dump for Builtins after pass codegen.
Module use list: ChapelStandard IO 

{
  function chpl__init_Builtins[416135](const in arg _ln[2619348]:int(64)[13], in arg _fn[2619350]:int(32)[95]) : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_Builtins_p[2592482]
    {
      goto _exit_chpl__init_Builtins[2592519] _exit_chpl__init_Builtins[2592519]
    }
    ref refIndentLevel[2592505]:_ref(int(32))[936687] "temp"
    (2592503 call printModuleInit[20429] c"%*s\n" c"Builtins" 8 _ln[2619348] _fn[2619350])
    (2592509 'move' refIndentLevel[2592505](2592508 'addr of' moduleInitLevel[20419]))
    (2592512 '+=' refIndentLevel[2592505] 1)
    (2592488 'move' chpl__init_Builtins_p[2592482] 1)
    {
      (2590208 call chpl__init_IO[416156] _ln[2619348] _fn[2619350])
    }
    (2592515 '-=' refIndentLevel[2592505] 1)
    label _exit_chpl__init_Builtins[2592519]
    (527895 return _void[55])
  }
  function _local_assert[2548779](const in arg test[2548781]:bool[10], const in arg _ln[2609232]:int(64)[13], in arg _fn[2609234]:int(32)[95]) : void[4] "always propagate line file info" "insert line file info" "local fn" "resolved" "fn synchronization free" "no return value for void"
  {
    if(2548788 '!' test[2548781])
    {
      (2548792 'chpl_error' c"assert failed" _ln[2609232] _fn[2609234])
    }
    (2548795 return _void[55])
  }
  function assert[210365](const in arg test[210362]:bool[10], const in arg _ln[2601394]:int(64)[13], in arg _fn[2601396]:int(32)[95]) : void[4] "always propagate line file info" "insert line file info" "resolved" "fn synchronization free" "no return value for void"
  {
    if(2175741 '!' test[210362])
    {
      (210375 'chpl_error' c"assert failed" _ln[2601394] _fn[2601396])
    }
    (527873 return _void[55])
  }
  function assert[1430742](const in arg test[1430744]:bool[10], const  ref arg _e0_args[1430746]:_ref(string)[938000], const in arg _ln[2602802]:int(64)[13], in arg _fn[2602804]:int(32)[95]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4796[2517391]:string[26] "temp"
    (2517392 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2728[2517385]:string[26] "temp"
    (2517386 'move' "assert failed - " "assert failed - ")
    if(2176218 '!' test[1430744])
    {
      const-val call_tmp[1430771]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1872593]:string[26] "temp"
      (1430776 call stringify[1430810] _e0_args[1430746] ret_tmp[1872593] _ln[2602802] _fn[2602804])
      (1872596 'move' call_tmp[1430771] ret_tmp[1872593])
      const-val call_tmp[1430778]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1863856]:string[26] "temp"
      wide-ref tmp[2555515]:__wide__ref_string[2519787] "temp"
      (2555519 'move' tmp[2555515](2555517 'set reference' call_tmp[1430771]))
      (1430783 call +[38345] "assert failed - " tmp[2555515] ret_tmp[1863856] _ln[2602802] _fn[2602804])
      (1863859 'move' call_tmp[1430778] ret_tmp[1863856])
      const-val tmpstring[1430786]:string[26] "dead at end of block" "insert auto destroy"
      (1430788 'move' tmpstring[1430786] call_tmp[1430778])
      if(2215688 '!='(2215681 '.v' tmpstring[1430786] locale_id[30757]) chpl_nodeID[208207])
      {
        (2215694 call halt[154111] "Cannot call .c_str() on a remote string" _ln[2602802] _fn[2602804])
      }
      (1430801 'chpl_error'(2215708 'cast' c_string[19](2215701 '.v' tmpstring[1430786] buff[30740]) _ln[2602802] _fn[2602804]) _ln[2602802] _fn[2602804])
      ref i_x[2196247]:_ref(string)[938000] "temp"
      (2196251 'move' i_x[2196247](2196249 'set reference' tmpstring[1430786]))
      wide-ref tmp[2564976]:__wide__ref_string[2519787] "temp"
      (2564979 'move' tmp[2564976] i_x[2196247])
      (2196255 call deinit[30834] tmp[2564976] _ln[2602802] _fn[2602804])
      ref i_x[2196259]:_ref(string)[938000] "temp"
      (2196263 'move' i_x[2196259](2196261 'set reference' call_tmp[1430771]))
      wide-ref tmp[2564982]:__wide__ref_string[2519787] "temp"
      (2564985 'move' tmp[2564982] i_x[2196259])
      (2196267 call deinit[30834] tmp[2564982] _ln[2602802] _fn[2602804])
    }
    (1430806 return _void[55])
  }
  function assert[1454284](const in arg test[1454286]:bool[10], const  ref arg _e0_args[1454288]:_ref(string)[938000], const in arg _e1_args[1454290]:uint(64)[115], const  ref arg _e2_args[1454292]:_ref(string)[938000], const in arg _e3_args[1454294]:int(64)[13], const in arg _ln[2602854]:int(64)[13], in arg _fn[2602856]:int(32)[95]) : void[4] "always propagate line file info" "expanded varargs" "insert line file info" "instantiated generic" "invisible fn" "resolved" "no return value for void"
  {
    const-val local__str_literal_4796[2517433]:string[26] "temp"
    (2517434 'move' "Cannot call .c_str() on a remote string" "Cannot call .c_str() on a remote string")
    const-val local__str_literal_2728[2517427]:string[26] "temp"
    (2517428 'move' "assert failed - " "assert failed - ")
    if(2176254 '!' test[1454286])
    {
      const-val call_tmp[1454325]:string[26] "dead at end of block" "expr temp" "insert auto destroy" "maybe param" "temp"
      const-val ret_tmp[1872812]:string[26] "temp"
      (1454330 call stringify[1454373] _e0_args[1454288] _e1_args[1454290] _e2_args[1454292] _e3_args[1454294] ret_tmp[1872812] _ln[2602854] _fn[2602856])
      (1872815 'move' call_tmp[1454325] ret_tmp[1872812])
      const-val call_tmp[1454335]:string[26] "dead at end of block" "maybe param" "temp"
      const-val ret_tmp[1863862]:string[26] "temp"
      wide-ref tmp[2555597]:__wide__ref_string[2519787] "temp"
      (2555601 'move' tmp[2555597](2555599 'set reference' call_tmp[1454325]))
      (1454340 call +[38345] "assert failed - " tmp[2555597] ret_tmp[1863862] _ln[2602854] _fn[2602856])
      (1863865 'move' call_tmp[1454335] ret_tmp[1863862])
      const-val tmpstring[1454343]:string[26] "dead at end of block" "insert auto destroy"
      (1454345 'move' tmpstring[1454343] call_tmp[1454335])
      if(2215731 '!='(2215724 '.v' tmpstring[1454343] locale_id[30757]) chpl_nodeID[208207])
      {
        (2215737 call halt[154111] "Cannot call .c_str() on a remote string" _ln[2602854] _fn[2602856])
      }
      (1454358 'chpl_error'(2215751 'cast' c_string[19](2215744 '.v' tmpstring[1454343] buff[30740]) _ln[2602854] _fn[2602856]) _ln[2602854] _fn[2602856])
      ref i_x[2196271]:_ref(string)[938000] "temp"
      (2196275 'move' i_x[2196271](2196273 'set reference' tmpstring[1454343]))
      wide-ref tmp[2564988]:__wide__ref_string[2519787] "temp"
      (2564991 'move' tmp[2564988] i_x[2196271])
      (2196279 call deinit[30834] tmp[2564988] _ln[2602854] _fn[2602856])
      ref i_x[2196283]:_ref(string)[938000] "temp"
      (2196287 'move' i_x[2196283](2196285 'set reference' call_tmp[1454325]))
      wide-ref tmp[2564994]:__wide__ref_string[2519787] "temp"
      (2564997 'move' tmp[2564994] i_x[2196283])
      (2196291 call deinit[30834] tmp[2564994] _ln[2602854] _fn[2602856])
    }
    (1454363 return _void[55])
  }
  function compilerAssert[973951]() : void[4] "fast on" "instantiated generic" "invisible fn" "local fn" "resolved" "no return value for void"
  {
    (973979 return _void[55])
  }
}