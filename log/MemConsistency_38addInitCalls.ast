AST dump for MemConsistency after pass addInitCalls.
Module use list: HaltWrappers 

{
  function chpl__init_MemConsistency[415955]() : void[4] "fast on" "insert line file info" "local fn" "module init" "resolved"
  {
    if chpl__init_MemConsistency_p[2406843]
    {
      goto _exit_chpl__init_MemConsistency[2406880] _exit_chpl__init_MemConsistency[2406880]
    }
    val modFormatStr[2406851]:c_string[19] "temp"
    val modStr[2406852]:c_string[19] "temp"
    ref refIndentLevel[2406866]:int(32)[95] "temp"
    (2406859 'move' modFormatStr[2406851] c"%*s\n")
    (2406861 'move' modStr[2406852] c"MemConsistency")
    (2406864 call printModuleInit[20426] modFormatStr[2406851] modStr[2406852] 14)
    (2406870 'move' refIndentLevel[2406866](2406869 'addr of' moduleInitLevel[20416]))
    (2406873 '+=' refIndentLevel[2406866] 1)
    (2406849 'move' chpl__init_MemConsistency_p[2406843] 1)
    {
      (2405099 call chpl__init_HaltWrappers[416000])
    }
    (2406876 '-=' refIndentLevel[2406866] 1)
    label _endchpl__init_MemConsistency[2406882]
    label _exit_chpl__init_MemConsistency[2406880]
    (523915 return _void[55])
  }
  type memory_order[186607]
  const-val memory_order_relaxed[186926]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_consume[186931]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  const-val memory_order_acquire[186936]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  const-val memory_order_release[186941]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  const memory_order_acq_rel[186946]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  const-val memory_order_seq_cst[186951]:memory_order[186607] "dead at end of block" "const" "extern" "insert auto destroy"
  type memoryOrder[186966] def seqCst[186956]:memoryOrder[186966] def acqRel[186958]:memoryOrder[186966] def release[186960]:memoryOrder[186966] def acquire[186962]:memoryOrder[186966] def relaxed[186964]:memoryOrder[186966]
}