AST dump for ChapelTuple after pass buildDefaultFunctions.
Module use list: ChapelStandard DSIUtil 

{
  function chpl__init_ChapelTuple[415948]() : void[4] "insert line file info" "module init"
  {
    (540787 'init var' CHPL_WARN_TUPLE_ITERATION[57023] "unset")
    (57026 'end of statement')
    (508974 return _void[55])
  }
  function _tuple[56199](?).size[766517](arg _mt[766519]:_MT[238], arg this[766521]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[766540] "RVV" "param" "temp"
    unknown call_tmp[766554] "expr temp" "maybe param" "maybe type" "temp"
    (766557 'move' call_tmp[766554](766526 'is bound' this[766521] c"size"))
    if call_tmp[766554]
    {
      unknown call_tmp[766559] "expr temp" "maybe param" "maybe type" "temp"
      (766562 'move' call_tmp[766559](766525 '.' this[766521] c"size"))
      (766545 'move' ret[766540](766544 'deref' call_tmp[766559]))
      gotoReturn _end_size[766538] _end_size[766538]
    }
    {
      (766550 'move' ret[766540](766549 'deref' ?[260]))
      gotoReturn _end_size[766538] _end_size[766538]
    }
    label _end_size[766538]
    (766542 return ret[766540])
  }
  function _tuple[56199](?).size[766564](arg _mt[766566]:_MT[238], arg this[766568]:_tuple[56199](?)) param : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens"
  {
    unknown ret[766587] "RVV" "param" "temp"
    unknown call_tmp[766601] "expr temp" "maybe param" "maybe type" "temp"
    (766604 'move' call_tmp[766601](766573 'is bound' this[766568] c"size"))
    if call_tmp[766601]
    {
      unknown call_tmp[766606] "expr temp" "maybe param" "maybe type" "temp"
      (766609 'move' call_tmp[766606](766572 '.' this[766568] c"size"))
      (766592 'move' ret[766587](766591 'deref' call_tmp[766606]))
      gotoReturn _end_size[766585] _end_size[766585]
    }
    {
      (766597 'move' ret[766587](766596 'deref' ?[260]))
      gotoReturn _end_size[766585] _end_size[766585]
    }
    label _end_size[766585]
    (766589 return ret[766587])
  }
  function _tuple[56199](?).deinit[766611](arg _mt[766613]:_MT[238], arg this[766615]:_tuple[56199](?)) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (766623 return _void[55])
  }
  function _defaultOf[766625](arg t[766627]:_tuple[56199](?)) : _unknown[51] "compiler generated" "inline" "last resort"
  {
    (766630 return _void[55])
  }
  function _tuple[56199](?).writeThis[766632](arg _mt[766636]:_MT[238], arg this[766634]:_tuple[56199](?), arg f[766635]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766645 call(766641 call (partial) readWriteThis _mt[243] this[766634]) f[766635])
    (766648 return _void[55])
  }
  function _tuple[56199](?).readThis[766652](arg _mt[766656]:_MT[238], arg this[766654]:_tuple[56199](?), arg f[766655]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (766664 call(766660 call (partial) readWriteThis _mt[243] this[766654]) f[766655])
    (766668 return _void[55])
  }
  function chpl__defaultHash[766672](arg r[766674]:_tuple[56199](?)) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[766687] "RVV" "temp"
    unknown call_tmp[766694] "expr temp" "maybe param" "maybe type" "temp"
    (766697 'move' call_tmp[766694](766676 call size _mt[243] r[766674]))
    unknown call_tmp[766699] "expr temp" "maybe param" "maybe type" "temp"
    (766702 'move' call_tmp[766699](766680 call chpl__defaultHash call_tmp[766694]))
    (766692 'move' ret[766687](766691 'deref' call_tmp[766699]))
    (766689 return ret[766687])
  }
  type _tuple[56199](?) unknown size[56194] "param" int(64)[13]
  function chpl__init_tuple[56208](param arg size[56205]:int(64)[13]) : _unknown[51] "tuple init fn" "inline" "no return value for void"
  {
    (507974 return _void[55])
  }
  function _build_tuple[56219](arg t[56216]:_any[178](?) ...) type : _unknown[51] "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (507976 return _void[55])
  }
  function _build_tuple[56230](arg x[56227]:_any[178](?) ...) : _unknown[51] "build tuple" "inline"
  {
    unknown ret[507980] "RVV" "temp"
    (507985 'move' ret[507980](507984 'deref' x[56227]))
    (507982 return ret[507980])
  }
  function _build_tuple_noref[56244](arg t[56241]:_any[178](?) ...) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "inline" "no return value for void"
  {
    (507987 return _void[55])
  }
  function _build_tuple_always_allow_ref[56255](arg x[56252]:_any[178](?) ...) : _unknown[51] "allow ref" "build tuple" "inline" "suppress lvalue error"
  {
    unknown ret[507991] "RVV" "temp"
    (507996 'move' ret[507991](507995 'deref' x[56252]))
    (507993 return ret[507991])
  }
  function chpl__unref[56267](arg t[56265]:_any[178](?)) type : _unknown[51] "inline"
  {
    unknown ret[508000] "RVV" "temp" "type variable"
    unknown call_tmp[611223] "expr temp" "maybe param" "maybe type" "temp"
    (611226 'move' call_tmp[611223](56272 call isTupleType t[56265]))
    unknown call_tmp[611228] "expr temp" "maybe param" "maybe type" "temp"
    (611231 'move' call_tmp[611228](56283 call _cond_test call_tmp[611223]))
    if call_tmp[611228]
    {
      unknown call_tmp[611233] "expr temp" "maybe param" "maybe type" "temp"
      (611236 'move' call_tmp[611233](56277 call _build_tuple_noref(56275 'expand_tuple' t[56265])))
      (508005 'move' ret[508000](508004 'deref' call_tmp[611233]))
      gotoReturn _end_chpl__unref[507998] _end_chpl__unref[507998]
    }
    {
      (508010 'move' ret[508000](508009 'deref' t[56265]))
      gotoReturn _end_chpl__unref[507998] _end_chpl__unref[507998]
    }
    label _end_chpl__unref[507998]
    (508002 return ret[508000])
  }
  function *[56298](param arg p[56295]:int(64)[13], arg t[56300]:_any[178](?)) type : _unknown[51] "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508014 return _void[55])
  }
  function *[56311](param arg p[56308]:uint(64)[115], arg t[56313]:_any[178](?)) type : _unknown[51] "no doc"
  {
    unknown ret[508018] "RVV" "temp" "type variable"
    unknown call_tmp[611238] "expr temp" "maybe param" "maybe type" "temp"
    (611241 'move' call_tmp[611238](56319 call max int(64)[13]))
    unknown call_tmp[611243] "expr temp" "maybe param" "maybe type" "temp"
    (611246 'move' call_tmp[611243](56320 call > p[56308] call_tmp[611238]))
    unknown call_tmp[611248] "expr temp" "maybe param" "maybe type" "temp"
    (611251 'move' call_tmp[611248](56371 call _cond_test call_tmp[611243]))
    if call_tmp[611248]
    {
      unknown call_tmp[611253] "expr temp" "maybe param" "maybe type" "temp"
      (611256 'move' call_tmp[611253](56343 call max int(64)[13]))
      unknown call_tmp[611258] "expr temp" "maybe param" "maybe type" "temp"
      (611261 'move' call_tmp[611258](56345 call _cast string[26] call_tmp[611253]))
      unknown call_tmp[611263] "expr temp" "maybe param" "maybe type" "temp"
      (611266 'move' call_tmp[611263](56347 call + "Tuples of size >" call_tmp[611258]))
      unknown call_tmp[611268] "expr temp" "maybe param" "maybe type" "temp"
      (611271 'move' call_tmp[611268](56366 call + call_tmp[611263] " are not currently supported"))
      (56369 call compilerError call_tmp[611268])
    }
    unknown call_tmp[611273] "maybe param" "maybe type" "temp"
    (611276 'move' call_tmp[611273](56379 call _cast int(64)[13] p[56308]))
    unknown pAsInt[56381] "dead at end of block" "param"
    (540783 'init var' pAsInt[56381] call_tmp[611273])
    (56384 'end of statement')
    unknown call_tmp[611278] "expr temp" "maybe param" "maybe type" "temp"
    (611281 'move' call_tmp[611278](56387 call * pAsInt[56381] t[56313]))
    (508023 'move' ret[508018](508022 'deref' call_tmp[611278]))
    (508020 return ret[508018])
  }
  function *[56399](param arg p[56396]:bool[10], arg t[56401]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56422 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508025 return _void[55])
  }
  function *[56433](arg p[56430]:bool[10], arg t[56435]:_any[178](?)) type : _unknown[51] "last resort" "no doc" "no return value for void"
  {
    (56440 call compilerError "Tuple types cannot be defined using boolean sizes")
    (508027 return _void[55])
  }
  function _build_star_tuple_noref[56451](param arg p[56448]:int(64)[13], arg t[56453]:_any[178](?)) type : _unknown[51] "do not allow ref" "build tuple" "build tuple type" "star tuple" "no return value for void"
  {
    (508029 return _void[55])
  }
  function *[56462](arg t[56460]:_any[178](?), param arg p[56465]:int(64)[13]) : _unknown[51] "last resort" "no return value for void"
  {
    (56489 call compilerError "<type>*<param int> not supported.  If you're trying to specify a homogeneous tuple type, use <param int>*<type>.")
    (508031 return _void[55])
  }
  function *[56500](arg p[56497]:integral[199](?), arg t[56502]:_any[178](?)) type : _unknown[51] "last resort" "no return value for void"
  {
    (56523 call compilerError "tuple size must be known at compile-time")
    (508033 return _void[55])
  }
  function chpl__tuplify[56532](arg x[56530]:_any[178](?)) : _unknown[51] "inline"
  {
    unknown ret[508037] "RVV" "temp"
    unknown call_tmp[611283] "expr temp" "maybe param" "maybe type" "temp"
    (611286 'move' call_tmp[611283](56537 call isTuple x[56530]))
    unknown call_tmp[611288] "expr temp" "maybe param" "maybe type" "temp"
    (611291 'move' call_tmp[611288](56546 call _cond_test call_tmp[611283]))
    if call_tmp[611288]
    {
      (508042 'move' ret[508037](508041 'deref' x[56530]))
      gotoReturn _end_chpl__tuplify[508035] _end_chpl__tuplify[508035]
    }
    {
      unknown call_tmp[611293] "expr temp" "maybe param" "maybe type" "temp"
      (611296 'move' call_tmp[611293](56542 call _build_tuple x[56530]))
      (508047 'move' ret[508037](508046 'deref' call_tmp[611293]))
      gotoReturn _end_chpl__tuplify[508035] _end_chpl__tuplify[508035]
    }
    label _end_chpl__tuplify[508035]
    (508039 return ret[508037])
  }
  function isTupleValue[56561](arg x[56558]:_tuple[56199](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508053] "RVV" "param" "temp"
    (508058 'move' ret[508053](508057 'deref' 1))
    (508055 return ret[508053])
  }
  function isTupleValue[56573](arg x[56571]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508062] "RVV" "param" "temp"
    (508067 'move' ret[508062](508066 'deref' 0))
    (508064 return ret[508062])
  }
  function isHomogeneousTupleValue[56585](arg x[56583]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508071] "RVV" "param" "temp"
    unknown call_tmp[611298] "expr temp" "maybe param" "maybe type" "temp"
    (611301 'move' call_tmp[611298](56606 'is star tuple type' x[56583]))
    (508076 'move' ret[508071](508075 'deref' call_tmp[611298]))
    (508073 return ret[508071])
  }
  function _check_tuple_var_decl[56618](arg x[56615]:_tuple[56199](?), param arg p[56620]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508080] "RVV" "param" "temp"
    unknown call_tmp[611305] "expr temp" "maybe param" "maybe type" "temp"
    (611308 'move' call_tmp[611305](56624 call size _mt[243] x[56615]))
    unknown call_tmp[611310] "expr temp" "maybe param" "maybe type" "temp"
    (611313 'move' call_tmp[611310](56627 call == p[56620] call_tmp[611305]))
    unknown call_tmp[611315] "expr temp" "maybe param" "maybe type" "temp"
    (611318 'move' call_tmp[611315](56711 call _cond_test call_tmp[611310]))
    if call_tmp[611315]
    {
      (508085 'move' ret[508080](508084 'deref' 1))
      gotoReturn _end__check_tuple_var_decl[508078] _end__check_tuple_var_decl[508078]
    }
    {
      unknown call_tmp[611322] "expr temp" "maybe param" "maybe type" "temp"
      (611325 'move' call_tmp[611322](56652 call size _mt[243] x[56615]))
      unknown call_tmp[611327] "expr temp" "maybe param" "maybe type" "temp"
      (611330 'move' call_tmp[611327](56656 call _cast string[26] call_tmp[611322]))
      unknown call_tmp[611332] "expr temp" "maybe param" "maybe type" "temp"
      (611335 'move' call_tmp[611332](56658 call + "tuple size (" call_tmp[611327]))
      unknown call_tmp[611337] "expr temp" "maybe param" "maybe type" "temp"
      (611340 'move' call_tmp[611337](56677 call + call_tmp[611332] ") must match the number of grouped variables ("))
      unknown call_tmp[611342] "expr temp" "maybe param" "maybe type" "temp"
      (611345 'move' call_tmp[611342](56681 call _cast string[26] p[56620]))
      unknown call_tmp[611347] "expr temp" "maybe param" "maybe type" "temp"
      (611350 'move' call_tmp[611347](56683 call + call_tmp[611337] call_tmp[611342]))
      unknown call_tmp[611352] "expr temp" "maybe param" "maybe type" "temp"
      (611355 'move' call_tmp[611352](56702 call + call_tmp[611347] ")"))
      (56705 call compilerError call_tmp[611352])
      (474806 'end of statement')
      (508090 'move' ret[508080](508089 'deref' 0))
      gotoReturn _end__check_tuple_var_decl[508078] _end__check_tuple_var_decl[508078]
    }
    label _end__check_tuple_var_decl[508078]
    (508082 return ret[508080])
  }
  function _check_tuple_var_decl[56722](arg x[56720]:_any[178](?), param arg p[56724]:_any[178](?)) param : _unknown[51] "no doc"
  {
    unknown ret[508096] "RVV" "param" "temp"
    (56745 call compilerError "illegal tuple variable declaration with non-tuple initializer")
    (474808 'end of statement')
    (508101 'move' ret[508096](508100 'deref' 0))
    (508098 return ret[508096])
  }
  function isTupleType[56757](arg t[56755]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508105] "RVV" "param" "temp"
    unknown call_tmp[611357] "expr temp" "maybe param" "maybe type" "temp"
    (611360 'move' call_tmp[611357](56778 'is tuple type' t[56755]))
    (508110 'move' ret[508105](508109 'deref' call_tmp[611357]))
    (508107 return ret[508105])
  }
  function isHomogeneousTupleType[56788](arg t[56786]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508114] "RVV" "param" "temp"
    unknown call_tmp[611362] "expr temp" "maybe param" "maybe type" "temp"
    (611365 'move' call_tmp[611362](56793 'is star tuple type' t[56786]))
    (508119 'move' ret[508114](508118 'deref' call_tmp[611362]))
    (508116 return ret[508114])
  }
  function =[56805](ref arg x[56802]:_tuple[56199](?), arg y[56808]:_tuple[56199](?)) : _unknown[51] "assignop" "compiler generated" "inline" "last resort" "no return value for void"
  {
    {
      unknown i[56842] "dead at end of block" "insert auto destroy"
      (540785 'init var' i[56842] 0)
      unknown tmp[56843] "maybe param" "temp"
      unknown call_tmp[611369] "expr temp" "maybe param" "maybe type" "temp"
      (611372 'move' call_tmp[611369](56823 call size _mt[243] x[56802]))
      unknown call_tmp[611374] "expr temp" "maybe param" "maybe type" "temp"
      (611377 'move' call_tmp[611374](56827 call - call_tmp[611369] 1))
      (56855 'move' tmp[56843](56853 call chpl_compute_low_param_loop_bound 0 call_tmp[611374]))
      unknown tmp[56844] "maybe param" "temp"
      unknown call_tmp[611381] "expr temp" "maybe param" "maybe type" "temp"
      (611384 'move' call_tmp[611381](56862 call size _mt[243] x[56802]))
      unknown call_tmp[611386] "expr temp" "maybe param" "maybe type" "temp"
      (611389 'move' call_tmp[611386](56860 call - call_tmp[611381] 1))
      (56868 'move' tmp[56844](56866 call chpl_compute_high_param_loop_bound 0 call_tmp[611386]))
      unknown tmp[56845] "maybe param" "temp"
      (56871 'move' tmp[56845] 1)
      ParamForLoop[56873]
      { i[56842] tmp[56843] tmp[56844] tmp[56845]
        unknown call_tmp[611391] "expr temp" "maybe param" "maybe type" "temp"
        (611394 'move' call_tmp[611391](56834 call x[56802] i[56842]))
        unknown call_tmp[611396] "expr temp" "maybe param" "maybe type" "temp"
        (611399 'move' call_tmp[611396](56838 call y[56808] i[56842]))
        (56839 call = call_tmp[611391] call_tmp[611396])
      }
      label _unused_continueLabel[56847]
      label _breakLabel[56846]
    }
    (508121 return _void[55])
  }
  where {
    unknown call_tmp[611403] "expr temp" "maybe param" "maybe type" "temp"
    (611406 'move' call_tmp[611403](56812 call size _mt[243] x[56802]))
    unknown call_tmp[611410] "expr temp" "maybe param" "maybe type" "temp"
    (611413 'move' call_tmp[611410](56816 call size _mt[243] y[56808]))
    (56819 call == call_tmp[611403] call_tmp[611410])
  }
  function _tuple[56199](?).this[56893](arg _mt[56898]:_MT[238], arg this[56895]:_tuple[56199](?) :
  _tuple[56199](?), arg i[56890]:integral[199](?)) ref : _unknown[51] "method" "no doc" "reference to const when const this" "star tuple accessor"
  {
    unknown ret[508125] "RVV" "temp"
    unknown call_tmp[611415] "expr temp" "maybe param" "maybe type" "temp"
    (611418 'move' call_tmp[611415](56903 call isHomogeneousTuple this[56895]))
    unknown call_tmp[611420] "expr temp" "maybe param" "maybe type" "temp"
    (611423 'move' call_tmp[611420](56904 call ! call_tmp[611415]))
    unknown call_tmp[611425] "expr temp" "maybe param" "maybe type" "temp"
    (611428 'move' call_tmp[611425](56929 call _cond_test call_tmp[611420]))
    if call_tmp[611425]
    {
      (56927 call compilerError "invalid access of non-homogeneous tuple by runtime value")
    }
    unknown call_tmp[611430] "expr temp" "maybe param" "maybe type" "temp"
    (611433 'move' call_tmp[611430](56976 call _cond_test 1))
    if call_tmp[611430]
    {
      unknown tmp[418878] "maybe param" "temp"
      (418889 'move' tmp[418878](56938 call < i[56890] 0))
      unknown call_tmp[611435] "expr temp" "maybe param" "maybe type" "temp"
      (611438 'move' call_tmp[611435](418891 call _cond_invalid tmp[418878]))
      if call_tmp[611435]
      {
        (418894 call compilerError "cannot promote short-circuiting || operator")
      }
      unknown tmp[554934] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
      unknown tmp[554935] "maybe param" "temp"
      unknown call_tmp[611440] "expr temp" "maybe param" "maybe type" "temp"
      (611443 'move' call_tmp[611440](418879 call isTrue tmp[418878]))
      (554940 'move' tmp[554935](554938 call _cond_test call_tmp[611440]))
      if tmp[554935]
      {
        (554945 'move' tmp[554934](554942 '_paramFoldLogical' tmp[554935] 1))
      }
      {
        unknown tmp[554947] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
        unknown call_tmp[611447] "expr temp" "maybe param" "maybe type" "temp"
        (611450 'move' call_tmp[611447](373065 call size _mt[243] this[56895]))
        unknown call_tmp[611452] "expr temp" "maybe param" "maybe type" "temp"
        (611455 'move' call_tmp[611452](56943 call - call_tmp[611447] 1))
        unknown call_tmp[611457] "expr temp" "maybe param" "maybe type" "temp"
        (611460 'move' call_tmp[611457](56945 call > i[56890] call_tmp[611452]))
        (554949 'move' tmp[554947](418883 call isTrue call_tmp[611457]))
        (554954 'move' tmp[554934](554951 '_paramFoldLogical' tmp[554935] tmp[554947]))
      }
      unknown call_tmp[611462] "expr temp" "maybe param" "maybe type" "temp"
      (611465 'move' call_tmp[611462](56971 call _cond_test tmp[554934]))
      if call_tmp[611462]
      {
        (56969 call halt "tuple access out of bounds: " i[56890])
      }
    }
    unknown call_tmp[611467] "expr temp" "maybe param" "maybe type" "temp"
    (611470 'move' call_tmp[611467](57001 'get svec member' this[56895] i[56890]))
    (508130 'move' ret[508125](508129 'addr of' call_tmp[611467]))
    (508127 return ret[508125])
  }
  unknown CHPL_WARN_TUPLE_ITERATION[57023] "config" "no doc" "param"
  function _tuple[56199](?).these[57030](arg _mt[57035]:_MT[238], arg this[57032]:_tuple[56199](?) :
  _tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508134] "RVV" "temp"
    unknown call_tmp[611472] "expr temp" "maybe param" "maybe type" "temp"
    (611475 'move' call_tmp[611472](57040 call isHomogeneousTuple this[57032]))
    unknown call_tmp[611477] "expr temp" "maybe param" "maybe type" "temp"
    (611480 'move' call_tmp[611477](57041 call ! call_tmp[611472]))
    unknown call_tmp[611482] "expr temp" "maybe param" "maybe type" "temp"
    (611485 'move' call_tmp[611482](57064 call _cond_test call_tmp[611477]))
    if call_tmp[611482]
    {
      (57062 call compilerError "Heterogeneous tuples don't support this style of loop yet")
    }
    unknown call_tmp[611487] "expr temp" "maybe param" "maybe type" "temp"
    (611490 'move' call_tmp[611487](57088 call == CHPL_WARN_TUPLE_ITERATION[57023] "true"))
    unknown call_tmp[611492] "expr temp" "maybe param" "maybe type" "temp"
    (611495 'move' call_tmp[611492](57113 call _cond_test call_tmp[611487]))
    if call_tmp[611492]
    {
      (57111 call compilerWarning "Iterating over tuples. If you intended to use zippered iteration, add the new keyword 'zip' before the tuple of iteratable exp)
    }
    {
      unknown _indexOfInterest[57135] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57136] "expr temp" "temp"
      unknown call_tmp[611499] "expr temp" "maybe param" "maybe type" "temp"
      (611502 'move' call_tmp[611499](57151 call size _mt[243] this[57032]))
      unknown call_tmp[611504] "expr temp" "maybe param" "maybe type" "temp"
      (611507 'move' call_tmp[611504](57155 call chpl_direct_counted_range_iter 0 call_tmp[611499]))
      (57145 'move' _iterator[57136](57143 call _getIterator call_tmp[611504]))
      Defer
      {
        {
          (57171 call _freeIterator _iterator[57136])
        }
      }
      { scopeless type
        (57160 'move' _indexOfInterest[57135](57157 call iteratorIndex _iterator[57136]))
      }
      ForLoop[57137]
      {
        unknown i[57164] "index var" "insert auto destroy"
        (474819 'end of statement')
        (57166 'move' i[57164] _indexOfInterest[57135])
        (474820 'end of statement' i[57164])
        {
          unknown yret[508138] "YVV" "temp"
          unknown call_tmp[611509] "expr temp" "maybe param" "maybe type" "temp"
          (611512 'move' call_tmp[611509](57131 call this[57032] i[57164]))
          (508141 'move' yret[508138](508140 'addr of' call_tmp[611509]))
          (508143 yield yret[508138])
          (474822 'end of statement' i[57164])
        }
        label _continueLabel[57140]
        _indexOfInterest[57135]
        _iterator[57136]
      }
      label _breakLabel[57141]
    }
    (508136 return ret[508134])
  }
  function _tuple[56199](?).these[57187](arg _mt[57192]:_MT[238], arg this[57189]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57184]:iterKind[453]) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508147] "RVV" "temp"
    const numTasks[57213] "dead at end of block" "const" "insert auto destroy"
    unknown tmp[554961] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[554962] "maybe param" "temp"
    unknown call_tmp[611514] "expr temp" "maybe param" "maybe type" "temp"
    (611517 'move' call_tmp[611514](57203 call == dataParTasksPerLocale[93281] 0))
    (554967 'move' tmp[554962](554965 call _cond_test call_tmp[611514]))
    if tmp[554962]
    {
      unknown tmp[554969] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[611519] "expr temp" "maybe param" "maybe type" "temp"
      (611522 'move' call_tmp[611519](357302 call here[90435]))
      (554971 'move' tmp[554969](57206 call maxTaskPar _mt[243] call_tmp[611519]))
      (554976 'move' tmp[554961](554973 '_paramFoldLogical' tmp[554962] tmp[554969]))
    }
    {
      (554981 'move' tmp[554961](554978 '_paramFoldLogical' tmp[554962] dataParTasksPerLocale[93281]))
    }
    (540789 'init var' numTasks[57213] tmp[554961])
    (57216 'end of statement')
    const ignoreRunning[57219] "dead at end of block" "const" "insert auto destroy"
    (540791 'init var' ignoreRunning[57219] dataParIgnoreRunningTasks[93287])
    (57222 'end of statement')
    const minIndicesPerTask[57224] "dead at end of block" "const" "insert auto destroy"
    (540793 'init var' minIndicesPerTask[57224] dataParMinGranularity[93293])
    (57227 'end of statement')
    unknown call_tmp[611528] "maybe param" "maybe type" "temp"
    (611531 'move' call_tmp[611528](57229 call size _mt[243] this[57189]))
    const length[57232] "dead at end of block" "const" "insert auto destroy"
    (540795 'init var' length[57232] call_tmp[611528])
    (57235 'end of statement')
    unknown call_tmp[611533] "expr temp" "maybe param" "maybe type" "temp"
    (611536 'move' call_tmp[611533](57237 call chpl_build_low_bounded_range 0))
    unknown call_tmp[611538] "expr temp" "maybe param" "maybe type" "temp"
    (611541 'move' call_tmp[611538](57240 call # call_tmp[611533] length[57232]))
    unknown call_tmp[611543] "maybe param" "maybe type" "temp"
    (611546 'move' call_tmp[611543](57242 call _build_tuple call_tmp[611538]))
    const myRange[57244] "dead at end of block" "const" "insert auto destroy"
    (540797 'init var' myRange[57244] call_tmp[611543])
    (57247 'end of statement')
    unknown call_tmp[611548] "maybe param" "maybe type" "temp"
    (611551 'move' call_tmp[611548](57259 call _computeChunkStuff numTasks[57213] ignoreRunning[57219] minIndicesPerTask[57224] myRange[57244]))
    unknown tmp[57260] "dead at end of block" "insert auto destroy" "temp"
    (540799 'init var' tmp[57260] call_tmp[611548])
    (57264 call _check_tuple_var_decl tmp[57260] 2)
    (474825 'end of statement')
    unknown call_tmp[611553] "maybe param" "maybe type" "temp"
    (611556 'move' call_tmp[611553](57261 call tmp[57260] 0))
    unknown numChunks[57248] "dead at end of block" "insert auto destroy"
    (540801 'init var' numChunks[57248] call_tmp[611553])
    (57269 'end of statement' length[57232])
    unknown call_tmp[611558] "expr temp" "maybe param" "maybe type" "temp"
    (611561 'move' call_tmp[611558](57272 call == numChunks[57248] 1))
    unknown call_tmp[611563] "expr temp" "maybe param" "maybe type" "temp"
    (611566 'move' call_tmp[611563](57516 call _cond_test call_tmp[611558]))
    if call_tmp[611563]
    {
      unknown yret[508151] "YVV" "temp"
      (508154 'move' yret[508151](508153 'addr of' myRange[57244]))
      (508156 yield yret[508151])
      (474826 'end of statement' myRange[57244])
    }
    {
      {
        unknown tmpIter[57322] "expr temp" "maybe ref" "no copy" "temp"
        unknown call_tmp[611568] "expr temp" "maybe param" "maybe type" "temp"
        (611571 'move' call_tmp[611568](57280 call chpl_build_low_bounded_range 0))
        (57325 'move' tmpIter[57322](57283 call # call_tmp[611568] numChunks[57248]))
        unknown isRngDomArr[57496] "maybe param" "temp"
        unknown tmp[418899] "maybe param" "temp"
        (418910 'move' tmp[418899](57498 call isBoundedRange tmpIter[57322]))
        unknown call_tmp[611573] "expr temp" "maybe param" "maybe type" "temp"
        (611576 'move' call_tmp[611573](418912 call _cond_invalid tmp[418899]))
        if call_tmp[611573]
        {
          (418915 call compilerError "cannot promote short-circuiting || operator")
        }
        unknown tmp[555015] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
        unknown tmp[555016] "maybe param" "temp"
        unknown call_tmp[611578] "expr temp" "maybe param" "maybe type" "temp"
        (611581 'move' call_tmp[611578](418900 call isTrue tmp[418899]))
        (555021 'move' tmp[555016](555019 call _cond_test call_tmp[611578]))
        if tmp[555016]
        {
          (555026 'move' tmp[555015](555023 '_paramFoldLogical' tmp[555016] 1))
        }
        {
          unknown tmp[418920] "maybe param" "temp"
          (418931 'move' tmp[418920](57501 call isDomain tmpIter[57322]))
          unknown call_tmp[611583] "expr temp" "maybe param" "maybe type" "temp"
          (611586 'move' call_tmp[611583](418933 call _cond_invalid tmp[418920]))
          if call_tmp[611583]
          {
            (418936 call compilerError "cannot promote short-circuiting || operator")
          }
          unknown tmp[554988] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
          unknown tmp[554989] "maybe param" "temp"
          unknown call_tmp[611588] "expr temp" "maybe param" "maybe type" "temp"
          (611591 'move' call_tmp[611588](418921 call isTrue tmp[418920]))
          (554994 'move' tmp[554989](554992 call _cond_test call_tmp[611588]))
          if tmp[554989]
          {
            (554999 'move' tmp[554988](554996 '_paramFoldLogical' tmp[554989] 1))
          }
          {
            unknown tmp[555001] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
            unknown call_tmp[611593] "expr temp" "maybe param" "maybe type" "temp"
            (611596 'move' call_tmp[611593](57504 call isArray tmpIter[57322]))
            (555003 'move' tmp[555001](418925 call isTrue call_tmp[611593]))
            (555008 'move' tmp[554988](555005 '_paramFoldLogical' tmp[554989] tmp[555001]))
          }
          unknown tmp[555028] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
          (555030 'move' tmp[555028](418904 call isTrue tmp[554988]))
          (555035 'move' tmp[555015](555032 '_paramFoldLogical' tmp[555016] tmp[555028]))
        }
        (57511 'move' isRngDomArr[57496] tmp[555015])
        if isRngDomArr[57496]
        {
          const _coforallCount[57363] "const" "end count" "temp"
          (57432 'move' _coforallCount[57363](57429 call _endCountAlloc 1))
          unknown numTasks[57364] "temp"
          (57416 'move' numTasks[57364](57412 call size _mt[243] tmpIter[57322]))
          (57407 call _upEndCount _coforallCount[57363] 1 numTasks[57364])
          (474829 'end of statement')
          (57404 call chpl_resetTaskSpawn numTasks[57364])
          (474830 'end of statement')
          unknown _indexOfInterest[57371] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57372] "expr temp" "temp"
          (57381 'move' _iterator[57372](57379 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57397 call _freeIterator _iterator[57372])
            }
          }
          { scopeless type
            (57386 'move' _indexOfInterest[57371](57383 call iteratorIndex _iterator[57372]))
          }
          ForLoop[57373]
          {
            unknown chunk[57390] "coforall index var" "index var" "insert auto destroy"
            (474832 'end of statement')
            (57392 'move' chunk[57390] _indexOfInterest[57371])
            (474833 'end of statement' chunk[57390])
            {
              {
                unknown call_tmp[611600] "expr temp" "maybe param" "maybe type" "temp"
                (611603 'move' call_tmp[611600](57336 call - length[57232] 1))
                unknown call_tmp[611605] "maybe param" "maybe type" "temp"
                (611608 'move' call_tmp[611605](57331 call _computeBlock length[57232] numChunks[57248] chunk[57390] call_tmp[611600]))
                const tmp[57329] "dead at end of block" "const" "insert auto destroy" "temp"
                (540803 'init var' tmp[57329] call_tmp[611605])
                (57341 call _check_tuple_var_decl tmp[57329] 2)
                (474835 'end of statement')
                unknown call_tmp[611610] "maybe param" "maybe type" "temp"
                (611613 'move' call_tmp[611610](57346 call tmp[57329] 0))
                const lo[57344] "dead at end of block" "const" "insert auto destroy"
                (540805 'init var' lo[57344] call_tmp[611610])
                unknown call_tmp[611615] "maybe param" "maybe type" "temp"
                (611618 'move' call_tmp[611615](57351 call tmp[57329] 1))
                const hi[57349] "dead at end of block" "const" "insert auto destroy"
                (540807 'init var' hi[57349] call_tmp[611615])
                (57354 'end of statement')
                unknown yret[508158] "YVV" "temp"
                unknown call_tmp[611620] "expr temp" "maybe param" "maybe type" "temp"
                (611623 'move' call_tmp[611620](57359 call chpl_build_bounded_range lo[57344] hi[57349]))
                unknown call_tmp[611625] "expr temp" "maybe param" "maybe type" "temp"
                (611628 'move' call_tmp[611625](57357 call _build_tuple call_tmp[611620]))
                (508161 'move' yret[508158](508160 'addr of' call_tmp[611625]))
                (508163 yield yret[508158])
                (474836 'end of statement' lo[57344] hi[57349])
              }
              (57366 call _downEndCount _coforallCount[57363] nil[44])
              (57365 'coforall loop')
            }
            label _continueLabel[57376]
            _indexOfInterest[57371]
            _iterator[57372]
          }
          label _breakLabel[57377]
          Defer
          {
            {
              (57419 call _endCountFree _coforallCount[57363])
            }
          }
          (57424 call _waitEndCount _coforallCount[57363] 1 numTasks[57364])
        }
        {
          const _coforallCount[57436] "const" "end count" "temp"
          (57493 'move' _coforallCount[57436](57490 call _endCountAlloc 1))
          unknown _indexOfInterest[57444] "coforall index var" "an _indexOfInterest or chpl__followIdx variable" "temp"
          unknown _iterator[57445] "expr temp" "temp"
          (57454 'move' _iterator[57445](57452 call _getIterator tmpIter[57322]))
          Defer
          {
            {
              (57470 call _freeIterator _iterator[57445])
            }
          }
          { scopeless type
            (57459 'move' _indexOfInterest[57444](57456 call iteratorIndex _iterator[57445]))
          }
          ForLoop[57446]
          {
            unknown chunk[57463] "coforall index var" "index var" "insert auto destroy"
            (474843 'end of statement')
            (57465 'move' chunk[57463] _indexOfInterest[57444])
            (474844 'end of statement' chunk[57463])
            (57477 call _upEndCount _coforallCount[57436] 1)
            (474846 'end of statement')
            {
              {
                unknown call_tmp[611630] "expr temp" "maybe param" "maybe type" "temp"
                (611633 'move' call_tmp[611630](57297 call - length[57232] 1))
                unknown call_tmp[611635] "maybe param" "maybe type" "temp"
                (611638 'move' call_tmp[611635](57299 call _computeBlock length[57232] numChunks[57248] chunk[57463] call_tmp[611630]))
                const tmp[57300] "dead at end of block" "const" "insert auto destroy" "temp"
                (540809 'init var' tmp[57300] call_tmp[611635])
                (57307 call _check_tuple_var_decl tmp[57300] 2)
                (474847 'end of statement')
                unknown call_tmp[611640] "maybe param" "maybe type" "temp"
                (611643 'move' call_tmp[611640](57301 call tmp[57300] 0))
                const lo[57285] "dead at end of block" "const" "insert auto destroy"
                (540811 'init var' lo[57285] call_tmp[611640])
                unknown call_tmp[611645] "maybe param" "maybe type" "temp"
                (611648 'move' call_tmp[611645](57304 call tmp[57300] 1))
                const hi[57287] "dead at end of block" "const" "insert auto destroy"
                (540813 'init var' hi[57287] call_tmp[611645])
                (57312 'end of statement')
                unknown yret[508165] "YVV" "temp"
                unknown call_tmp[611650] "expr temp" "maybe param" "maybe type" "temp"
                (611653 'move' call_tmp[611650](57316 call chpl_build_bounded_range lo[57285] hi[57287]))
                unknown call_tmp[611655] "expr temp" "maybe param" "maybe type" "temp"
                (611658 'move' call_tmp[611655](57318 call _build_tuple call_tmp[611650]))
                (508168 'move' yret[508165](508167 'addr of' call_tmp[611655]))
                (508170 yield yret[508165])
                (474848 'end of statement' lo[57285] hi[57287])
              }
              (57439 call _downEndCount _coforallCount[57436] nil[44])
              (57438 'coforall loop')
            }
            label _continueLabel[57449]
            _indexOfInterest[57444]
            _iterator[57445]
          }
          label _breakLabel[57450]
          Defer
          {
            {
              (57481 call _endCountFree _coforallCount[57436])
            }
          }
          (57486 call _waitEndCount _coforallCount[57436] 1)
        }
      }
    }
    (508149 return ret[508147])
  }
  where {
    (57199 call == tag[57184] leader[447])
  }
  function _tuple[56199](?).these[57530](arg _mt[57539]:_MT[238], arg this[57536]:_tuple[56199](?) :
  _tuple[56199](?), param arg tag[57527]:iterKind[453], arg followThis[57533]:_tuple[56199](?)) ref : _unknown[51] "iterator fn" "method" "no doc" "reference to const when const this" "no return value for void"
  {
    unknown ret[508174] "RVV" "temp"
    unknown call_tmp[611662] "expr temp" "maybe param" "maybe type" "temp"
    (611665 'move' call_tmp[611662](57549 call size _mt[243] followThis[57533]))
    unknown call_tmp[611667] "expr temp" "maybe param" "maybe type" "temp"
    (611670 'move' call_tmp[611667](57553 call != call_tmp[611662] 1))
    unknown call_tmp[611672] "expr temp" "maybe param" "maybe type" "temp"
    (611675 'move' call_tmp[611672](57576 call _cond_test call_tmp[611667]))
    if call_tmp[611672]
    {
      (57574 call compilerError "Tuple zipped with incompatible iterator expression.")
    }
    unknown call_tmp[611677] "maybe param" "maybe type" "temp"
    (611680 'move' call_tmp[611677](57585 call followThis[57533] 0))
    unknown fThis[57586] "dead at end of block" "insert auto destroy"
    (540815 'init var' fThis[57586] call_tmp[611677])
    (57589 'end of statement')
    {
      unknown _indexOfInterest[57599] "an _indexOfInterest or chpl__followIdx variable" "temp"
      unknown _iterator[57600] "expr temp" "temp"
      (57609 'move' _iterator[57600](57607 call _getIterator fThis[57586]))
      Defer
      {
        {
          (57625 call _freeIterator _iterator[57600])
        }
      }
      { scopeless type
        (57614 'move' _indexOfInterest[57599](57611 call iteratorIndex _iterator[57600]))
      }
      ForLoop[57601]
      {
        unknown i[57618] "index var" "insert auto destroy"
        (474856 'end of statement')
        (57620 'move' i[57618] _indexOfInterest[57599])
        (474857 'end of statement' i[57618])
        {
          unknown yret[508178] "YVV" "temp"
          unknown call_tmp[611682] "expr temp" "maybe param" "maybe type" "temp"
          (611685 'move' call_tmp[611682](57595 call this[57536] i[57618]))
          (508181 'move' yret[508178](508180 'addr of' call_tmp[611682]))
          (508183 yield yret[508178])
          (474859 'end of statement' i[57618])
        }
        label _continueLabel[57604]
        _indexOfInterest[57599]
        _iterator[57600]
      }
      label _breakLabel[57605]
    }
    (508176 return ret[508174])
  }
  where {
    (57546 call == tag[57527] follower[449])
  }
  function _tuple[56199](?).indices[57638](arg _mt[57643]:_MT[238], arg this[57640]:_tuple[56199](?) :
  _tuple[56199](?)) : _unknown[51] "method" "no parens"
  {
    unknown ret[508187] "RVV" "temp"
    unknown call_tmp[611689] "expr temp" "maybe param" "maybe type" "temp"
    (611692 'move' call_tmp[611689](57647 call size _mt[243] this[57640]))
    unknown call_tmp[611694] "expr temp" "maybe param" "maybe type" "temp"
    (611697 'move' call_tmp[611694](57651 call - call_tmp[611689] 1))
    unknown call_tmp[611699] "expr temp" "maybe param" "maybe type" "temp"
    (611702 'move' call_tmp[611699](57653 call chpl_build_bounded_range 0 call_tmp[611694]))
    (508192 'move' ret[508187](508191 'deref' call_tmp[611699]))
    (508189 return ret[508187])
  }
  function _cast[57669](arg t[57666] :
  (57665 call complex(128)[140] 64), arg x[57676]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508202] "RVV" "temp"
    function _chpl_complex64[57688](arg re[57685] :
    (57684 call real(64)[16] 32), arg im[57694] :
    (57693 call real(64)[16] 32)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508196] "RVV" "temp"
      (508198 return ret[508196])
    }
    { scopeless type
      (57700 call complex(128)[140] 64)
    }
    unknown call_tmp[611704] "expr temp" "maybe param" "maybe type" "temp"
    (611707 'move' call_tmp[611704](57713 call real(64)[16] 32))
    unknown call_tmp[611709] "expr temp" "maybe param" "maybe type" "temp"
    (611712 'move' call_tmp[611709](57709 call x[57676] 0))
    unknown call_tmp[611714] "expr temp" "maybe param" "maybe type" "temp"
    (611717 'move' call_tmp[611714](57714 call _cast call_tmp[611704] call_tmp[611709]))
    unknown call_tmp[611719] "expr temp" "maybe param" "maybe type" "temp"
    (611722 'move' call_tmp[611719](57724 call real(64)[16] 32))
    unknown call_tmp[611724] "expr temp" "maybe param" "maybe type" "temp"
    (611727 'move' call_tmp[611724](57720 call x[57676] 1))
    unknown call_tmp[611729] "expr temp" "maybe param" "maybe type" "temp"
    (611732 'move' call_tmp[611729](57725 call _cast call_tmp[611719] call_tmp[611724]))
    unknown call_tmp[611734] "expr temp" "maybe param" "maybe type" "temp"
    (611737 'move' call_tmp[611734](57727 call _chpl_complex64 call_tmp[611714] call_tmp[611729]))
    (508207 'move' ret[508202](508206 'deref' call_tmp[611734]))
    (508204 return ret[508202])
  }
  where {
    unknown call_tmp[611739] "expr temp" "maybe param" "maybe type" "temp"
    (611742 'move' call_tmp[611739](454738 'query' x[57676] c"size"))
    unknown call_tmp[611744] "expr temp" "maybe param" "maybe type" "temp"
    (611747 'move' call_tmp[611744](454739 call == 2 call_tmp[611739]))
    (454743 call & 1 call_tmp[611744])
  }
  function _cast[57741](arg t[57738] :
  (57737 call complex(128)[140] 128), arg x[57748]:_tuple[56199](?)) : _unknown[51] "compiler added where" "inline"
  {
    unknown ret[508217] "RVV" "temp"
    function _chpl_complex128[57760](arg re[57757] :
    (57756 call real(64)[16] 64), arg im[57766] :
    (57765 call real(64)[16] 64)) : _unknown[51] "extern" "local args" "no fn body" "no return value for void"
    {
      unknown ret[508211] "RVV" "temp"
      (508213 return ret[508211])
    }
    { scopeless type
      (57772 call complex(128)[140] 128)
    }
    unknown call_tmp[611749] "expr temp" "maybe param" "maybe type" "temp"
    (611752 'move' call_tmp[611749](57785 call real(64)[16] 64))
    unknown call_tmp[611754] "expr temp" "maybe param" "maybe type" "temp"
    (611757 'move' call_tmp[611754](57781 call x[57748] 0))
    unknown call_tmp[611759] "expr temp" "maybe param" "maybe type" "temp"
    (611762 'move' call_tmp[611759](57786 call _cast call_tmp[611749] call_tmp[611754]))
    unknown call_tmp[611764] "expr temp" "maybe param" "maybe type" "temp"
    (611767 'move' call_tmp[611764](57796 call real(64)[16] 64))
    unknown call_tmp[611769] "expr temp" "maybe param" "maybe type" "temp"
    (611772 'move' call_tmp[611769](57792 call x[57748] 1))
    unknown call_tmp[611774] "expr temp" "maybe param" "maybe type" "temp"
    (611777 'move' call_tmp[611774](57797 call _cast call_tmp[611764] call_tmp[611769]))
    unknown call_tmp[611779] "expr temp" "maybe param" "maybe type" "temp"
    (611782 'move' call_tmp[611779](57799 call _chpl_complex128 call_tmp[611759] call_tmp[611774]))
    (508222 'move' ret[508217](508221 'deref' call_tmp[611779]))
    (508219 return ret[508217])
  }
  where {
    unknown call_tmp[611784] "expr temp" "maybe param" "maybe type" "temp"
    (611787 'move' call_tmp[611784](454759 'query' x[57748] c"size"))
    unknown call_tmp[611789] "expr temp" "maybe param" "maybe type" "temp"
    (611792 'move' call_tmp[611789](454760 call == 2 call_tmp[611784]))
    (454764 call & 1 call_tmp[611789])
  }
  function _cast[57810](arg t[57807]:_tuple[56199](?), arg x[57813]:_tuple[56199](?)) : _unknown[51] "inline" "tuple cast fn" "unsafe" "no return value for void"
  {
    (508224 return _void[55])
  }
  function chpl__tupleRest[57825](arg t[57822]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508237] "RVV" "temp"
    function chpl__tupleRestHelper[57831](arg first[57829]:_any[178](?), arg rest[57834]:_any[178](?) ...) : _unknown[51] "inline"
    {
      unknown ret[508228] "RVV" "temp"
      (508233 'move' ret[508228](508232 'deref' rest[57834]))
      (508230 return ret[508228])
    }
    unknown call_tmp[611794] "expr temp" "maybe param" "maybe type" "temp"
    (611797 'move' call_tmp[611794](57848 call chpl__tupleRestHelper(57846 'expand_tuple' t[57822])))
    (508242 'move' ret[508237](508241 'deref' call_tmp[611794]))
    (508239 return ret[508237])
  }
  function +[57859](arg a[57856]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508246] "RVV" "temp"
    unknown result[57863] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611799] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611802 'move' call_tmp[611799](57862 'typeof' a[57856]))
    (540817 'default init var' result[57863] call_tmp[611799])
    (57866 'end of statement')
    {
      unknown d[57891] "dead at end of block" "insert auto destroy"
      (540819 'init var' d[57891] 0)
      (474866 'end of statement')
      unknown tmp[57892] "maybe param" "temp"
      unknown call_tmp[611806] "expr temp" "maybe param" "maybe type" "temp"
      (611809 'move' call_tmp[611806](57870 call size _mt[243] a[57856]))
      unknown call_tmp[611811] "expr temp" "maybe param" "maybe type" "temp"
      (611814 'move' call_tmp[611811](57874 call - call_tmp[611806] 1))
      (57904 'move' tmp[57892](57902 call chpl_compute_low_param_loop_bound 0 call_tmp[611811]))
      unknown tmp[57893] "maybe param" "temp"
      unknown call_tmp[611818] "expr temp" "maybe param" "maybe type" "temp"
      (611821 'move' call_tmp[611818](57911 call size _mt[243] a[57856]))
      unknown call_tmp[611823] "expr temp" "maybe param" "maybe type" "temp"
      (611826 'move' call_tmp[611823](57909 call - call_tmp[611818] 1))
      (57917 'move' tmp[57893](57915 call chpl_compute_high_param_loop_bound 0 call_tmp[611823]))
      unknown tmp[57894] "maybe param" "temp"
      (57920 'move' tmp[57894] 1)
      ParamForLoop[57922]
      { d[57891] tmp[57892] tmp[57893] tmp[57894]
        unknown call_tmp[611828] "expr temp" "maybe param" "maybe type" "temp"
        (611831 'move' call_tmp[611828](57881 call result[57863] d[57891]))
        unknown call_tmp[611833] "expr temp" "maybe param" "maybe type" "temp"
        (611836 'move' call_tmp[611833](57885 call a[57856] d[57891]))
        unknown call_tmp[611838] "expr temp" "maybe param" "maybe type" "temp"
        (611841 'move' call_tmp[611838](57886 call + call_tmp[611833]))
        (57888 call = call_tmp[611828] call_tmp[611838])
        (474867 'end of statement' result[57863] d[57891] d[57891])
      }
      label _unused_continueLabel[57896]
      label _breakLabel[57895]
    }
    (508251 'move' ret[508246](508250 'deref' result[57863]))
    gotoReturn _end_+[508244] _end_+[508244]
    (474871 'end of statement' result[57863])
    label _end_+[508244]
    (508248 return ret[508246])
  }
  function -[57942](arg a[57939]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508257] "RVV" "temp"
    unknown result[57946] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611843] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611846 'move' call_tmp[611843](57945 'typeof' a[57939]))
    (540821 'default init var' result[57946] call_tmp[611843])
    (57949 'end of statement')
    {
      unknown d[57974] "dead at end of block" "insert auto destroy"
      (540823 'init var' d[57974] 0)
      (474873 'end of statement')
      unknown tmp[57975] "maybe param" "temp"
      unknown call_tmp[611850] "expr temp" "maybe param" "maybe type" "temp"
      (611853 'move' call_tmp[611850](57953 call size _mt[243] a[57939]))
      unknown call_tmp[611855] "expr temp" "maybe param" "maybe type" "temp"
      (611858 'move' call_tmp[611855](57957 call - call_tmp[611850] 1))
      (57987 'move' tmp[57975](57985 call chpl_compute_low_param_loop_bound 0 call_tmp[611855]))
      unknown tmp[57976] "maybe param" "temp"
      unknown call_tmp[611862] "expr temp" "maybe param" "maybe type" "temp"
      (611865 'move' call_tmp[611862](57994 call size _mt[243] a[57939]))
      unknown call_tmp[611867] "expr temp" "maybe param" "maybe type" "temp"
      (611870 'move' call_tmp[611867](57992 call - call_tmp[611862] 1))
      (58000 'move' tmp[57976](57998 call chpl_compute_high_param_loop_bound 0 call_tmp[611867]))
      unknown tmp[57977] "maybe param" "temp"
      (58003 'move' tmp[57977] 1)
      ParamForLoop[58005]
      { d[57974] tmp[57975] tmp[57976] tmp[57977]
        unknown call_tmp[611872] "expr temp" "maybe param" "maybe type" "temp"
        (611875 'move' call_tmp[611872](57964 call result[57946] d[57974]))
        unknown call_tmp[611877] "expr temp" "maybe param" "maybe type" "temp"
        (611880 'move' call_tmp[611877](57968 call a[57939] d[57974]))
        unknown call_tmp[611882] "expr temp" "maybe param" "maybe type" "temp"
        (611885 'move' call_tmp[611882](57969 call - call_tmp[611877]))
        (57971 call = call_tmp[611872] call_tmp[611882])
        (474874 'end of statement' result[57946] d[57974] d[57974])
      }
      label _unused_continueLabel[57979]
      label _breakLabel[57978]
    }
    (508262 'move' ret[508257](508261 'deref' result[57946]))
    gotoReturn _end_-[508255] _end_-[508255]
    (474878 'end of statement' result[57946])
    label _end_-[508255]
    (508259 return ret[508257])
  }
  function ~[58025](arg a[58022]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508268] "RVV" "temp"
    unknown result[58029] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611887] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611890 'move' call_tmp[611887](58028 'typeof' a[58022]))
    (540825 'default init var' result[58029] call_tmp[611887])
    (58032 'end of statement')
    {
      unknown d[58057] "dead at end of block" "insert auto destroy"
      (540827 'init var' d[58057] 0)
      (474880 'end of statement')
      unknown tmp[58058] "maybe param" "temp"
      unknown call_tmp[611894] "expr temp" "maybe param" "maybe type" "temp"
      (611897 'move' call_tmp[611894](58036 call size _mt[243] a[58022]))
      unknown call_tmp[611899] "expr temp" "maybe param" "maybe type" "temp"
      (611902 'move' call_tmp[611899](58040 call - call_tmp[611894] 1))
      (58070 'move' tmp[58058](58068 call chpl_compute_low_param_loop_bound 0 call_tmp[611899]))
      unknown tmp[58059] "maybe param" "temp"
      unknown call_tmp[611906] "expr temp" "maybe param" "maybe type" "temp"
      (611909 'move' call_tmp[611906](58077 call size _mt[243] a[58022]))
      unknown call_tmp[611911] "expr temp" "maybe param" "maybe type" "temp"
      (611914 'move' call_tmp[611911](58075 call - call_tmp[611906] 1))
      (58083 'move' tmp[58059](58081 call chpl_compute_high_param_loop_bound 0 call_tmp[611911]))
      unknown tmp[58060] "maybe param" "temp"
      (58086 'move' tmp[58060] 1)
      ParamForLoop[58088]
      { d[58057] tmp[58058] tmp[58059] tmp[58060]
        unknown call_tmp[611916] "expr temp" "maybe param" "maybe type" "temp"
        (611919 'move' call_tmp[611916](58047 call result[58029] d[58057]))
        unknown call_tmp[611921] "expr temp" "maybe param" "maybe type" "temp"
        (611924 'move' call_tmp[611921](58051 call a[58022] d[58057]))
        unknown call_tmp[611926] "expr temp" "maybe param" "maybe type" "temp"
        (611929 'move' call_tmp[611926](58052 call ~ call_tmp[611921]))
        (58054 call = call_tmp[611916] call_tmp[611926])
        (474881 'end of statement' result[58029] d[58057] d[58057])
      }
      label _unused_continueLabel[58062]
      label _breakLabel[58061]
    }
    (508273 'move' ret[508268](508272 'deref' result[58029]))
    gotoReturn _end_~[508266] _end_~[508266]
    (474885 'end of statement' result[58029])
    label _end_~[508266]
    (508270 return ret[508268])
  }
  function ![58108](arg a[58105]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508279] "RVV" "temp"
    unknown result[58112] "dead at end of block" "insert auto destroy"
    unknown call_tmp[611931] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (611934 'move' call_tmp[611931](58111 'typeof' a[58105]))
    (540829 'default init var' result[58112] call_tmp[611931])
    (58115 'end of statement')
    {
      unknown d[58140] "dead at end of block" "insert auto destroy"
      (540831 'init var' d[58140] 0)
      (474887 'end of statement')
      unknown tmp[58141] "maybe param" "temp"
      unknown call_tmp[611938] "expr temp" "maybe param" "maybe type" "temp"
      (611941 'move' call_tmp[611938](58119 call size _mt[243] a[58105]))
      unknown call_tmp[611943] "expr temp" "maybe param" "maybe type" "temp"
      (611946 'move' call_tmp[611943](58123 call - call_tmp[611938] 1))
      (58153 'move' tmp[58141](58151 call chpl_compute_low_param_loop_bound 0 call_tmp[611943]))
      unknown tmp[58142] "maybe param" "temp"
      unknown call_tmp[611950] "expr temp" "maybe param" "maybe type" "temp"
      (611953 'move' call_tmp[611950](58160 call size _mt[243] a[58105]))
      unknown call_tmp[611955] "expr temp" "maybe param" "maybe type" "temp"
      (611958 'move' call_tmp[611955](58158 call - call_tmp[611950] 1))
      (58166 'move' tmp[58142](58164 call chpl_compute_high_param_loop_bound 0 call_tmp[611955]))
      unknown tmp[58143] "maybe param" "temp"
      (58169 'move' tmp[58143] 1)
      ParamForLoop[58171]
      { d[58140] tmp[58141] tmp[58142] tmp[58143]
        unknown call_tmp[611960] "expr temp" "maybe param" "maybe type" "temp"
        (611963 'move' call_tmp[611960](58130 call result[58112] d[58140]))
        unknown call_tmp[611965] "expr temp" "maybe param" "maybe type" "temp"
        (611968 'move' call_tmp[611965](58134 call a[58105] d[58140]))
        unknown call_tmp[611970] "expr temp" "maybe param" "maybe type" "temp"
        (611973 'move' call_tmp[611970](58135 call ! call_tmp[611965]))
        (58137 call = call_tmp[611960] call_tmp[611970])
        (474888 'end of statement' result[58112] d[58140] d[58140])
      }
      label _unused_continueLabel[58145]
      label _breakLabel[58144]
    }
    (508284 'move' ret[508279](508283 'deref' result[58112]))
    gotoReturn _end_![508277] _end_![508277]
    (474892 'end of statement' result[58112])
    label _end_![508277]
    (508281 return ret[508279])
  }
  function max[58189](arg t[58187]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508290] "RVV" "temp"
    unknown result[58197] "dead at end of block" "insert auto destroy"
    (540833 'default init var' result[58197] t[58187])
    (58200 'end of statement')
    {
      unknown i[58227] "dead at end of block" "insert auto destroy"
      (540835 'init var' i[58227] 0)
      (474894 'end of statement')
      unknown tmp[58228] "maybe param" "temp"
      unknown call_tmp[611977] "expr temp" "maybe param" "maybe type" "temp"
      (611980 'move' call_tmp[611977](58204 call size _mt[243] result[58197]))
      unknown call_tmp[611982] "expr temp" "maybe param" "maybe type" "temp"
      (611985 'move' call_tmp[611982](58208 call - call_tmp[611977] 1))
      (58240 'move' tmp[58228](58238 call chpl_compute_low_param_loop_bound 0 call_tmp[611982]))
      unknown tmp[58229] "maybe param" "temp"
      unknown call_tmp[611989] "expr temp" "maybe param" "maybe type" "temp"
      (611992 'move' call_tmp[611989](58247 call size _mt[243] result[58197]))
      unknown call_tmp[611994] "expr temp" "maybe param" "maybe type" "temp"
      (611997 'move' call_tmp[611994](58245 call - call_tmp[611989] 1))
      (58253 'move' tmp[58229](58251 call chpl_compute_high_param_loop_bound 0 call_tmp[611994]))
      unknown tmp[58230] "maybe param" "temp"
      (58256 'move' tmp[58230] 1)
      ParamForLoop[58258]
      { i[58227] tmp[58228] tmp[58229] tmp[58230]
        {
          unknown call_tmp[611999] "expr temp" "maybe param" "maybe type" "temp"
          (612002 'move' call_tmp[611999](58215 call result[58197] i[58227]))
          unknown call_tmp[612004] "expr temp" "maybe param" "maybe type" "temp"
          (612007 'move' call_tmp[612004](58220 call t[58187] i[58227]))
          unknown call_tmp[612009] "expr temp" "maybe param" "maybe type" "temp"
          (612012 'move' call_tmp[612009](58222 call max call_tmp[612004]))
          (58223 call = call_tmp[611999] call_tmp[612009])
          (474895 'end of statement' result[58197] i[58227] i[58227])
        }
      }
      label _unused_continueLabel[58232]
      label _breakLabel[58231]
    }
    (508296 'move' ret[508290](508295 'coerce' result[58197] t[58187]))
    gotoReturn _end_max[508288] _end_max[508288]
    (474899 'end of statement' result[58197])
    label _end_max[508288]
    (508292 return ret[508290])
  }
  where {
    (58195 call isTupleType t[58187])
  }
  { scopeless type
    t[58187]
  }
  function min[58278](arg t[58276]:_any[178](?)) : _unknown[51]
  {
    unknown ret[508302] "RVV" "temp"
    unknown result[58286] "dead at end of block" "insert auto destroy"
    (540837 'default init var' result[58286] t[58276])
    (58289 'end of statement')
    {
      unknown i[58316] "dead at end of block" "insert auto destroy"
      (540839 'init var' i[58316] 0)
      (474901 'end of statement')
      unknown tmp[58317] "maybe param" "temp"
      unknown call_tmp[612016] "expr temp" "maybe param" "maybe type" "temp"
      (612019 'move' call_tmp[612016](58293 call size _mt[243] result[58286]))
      unknown call_tmp[612021] "expr temp" "maybe param" "maybe type" "temp"
      (612024 'move' call_tmp[612021](58297 call - call_tmp[612016] 1))
      (58329 'move' tmp[58317](58327 call chpl_compute_low_param_loop_bound 0 call_tmp[612021]))
      unknown tmp[58318] "maybe param" "temp"
      unknown call_tmp[612028] "expr temp" "maybe param" "maybe type" "temp"
      (612031 'move' call_tmp[612028](58336 call size _mt[243] result[58286]))
      unknown call_tmp[612033] "expr temp" "maybe param" "maybe type" "temp"
      (612036 'move' call_tmp[612033](58334 call - call_tmp[612028] 1))
      (58342 'move' tmp[58318](58340 call chpl_compute_high_param_loop_bound 0 call_tmp[612033]))
      unknown tmp[58319] "maybe param" "temp"
      (58345 'move' tmp[58319] 1)
      ParamForLoop[58347]
      { i[58316] tmp[58317] tmp[58318] tmp[58319]
        {
          unknown call_tmp[612038] "expr temp" "maybe param" "maybe type" "temp"
          (612041 'move' call_tmp[612038](58304 call result[58286] i[58316]))
          unknown call_tmp[612043] "expr temp" "maybe param" "maybe type" "temp"
          (612046 'move' call_tmp[612043](58309 call t[58276] i[58316]))
          unknown call_tmp[612048] "expr temp" "maybe param" "maybe type" "temp"
          (612051 'move' call_tmp[612048](58311 call min call_tmp[612043]))
          (58312 call = call_tmp[612038] call_tmp[612048])
          (474902 'end of statement' result[58286] i[58316] i[58316])
        }
      }
      label _unused_continueLabel[58321]
      label _breakLabel[58320]
    }
    (508308 'move' ret[508302](508307 'coerce' result[58286] t[58276]))
    gotoReturn _end_min[508300] _end_min[508300]
    (474906 'end of statement' result[58286])
    label _end_min[508300]
    (508304 return ret[508302])
  }
  where {
    (58284 call isTupleType t[58276])
  }
  { scopeless type
    t[58276]
  }
  function chpl_TwoHomogTuples[58367](arg t1[58365]:_any[178](?), arg t2[58369]:_any[178](?)) param : _unknown[51]
  {
    unknown ret[508314] "RVV" "param" "temp"
    unknown tmp[418941] "maybe param" "temp"
    (418952 'move' tmp[418941](58374 call isHomogeneousTuple t1[58365]))
    unknown call_tmp[612053] "expr temp" "maybe param" "maybe type" "temp"
    (612056 'move' call_tmp[612053](418954 call _cond_invalid tmp[418941]))
    if call_tmp[612053]
    {
      (418957 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555042] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555043] "maybe param" "temp"
    unknown call_tmp[612058] "expr temp" "maybe param" "maybe type" "temp"
    (612061 'move' call_tmp[612058](418942 call isTrue tmp[418941]))
    (555048 'move' tmp[555043](555046 call _cond_test call_tmp[612058]))
    if tmp[555043]
    {
      unknown tmp[555050] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[612063] "expr temp" "maybe param" "maybe type" "temp"
      (612066 'move' call_tmp[612063](58378 call isHomogeneousTuple t2[58369]))
      (555052 'move' tmp[555050](418945 call isTrue call_tmp[612063]))
      (555057 'move' tmp[555042](555054 '_paramFoldLogical' tmp[555043] tmp[555050]))
    }
    {
      (555062 'move' tmp[555042](555059 '_paramFoldLogical' tmp[555043] 0))
    }
    (508319 'move' ret[508314](508318 'deref' tmp[555042]))
    (508316 return ret[508314])
  }
  function +[58392](arg a[58389]:_tuple[56199](?), arg b[58395]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508323] "RVV" "temp"
    unknown call_tmp[612070] "expr temp" "maybe param" "maybe type" "temp"
    (612073 'move' call_tmp[612070](58404 call size _mt[243] a[58389]))
    unknown call_tmp[612077] "expr temp" "maybe param" "maybe type" "temp"
    (612080 'move' call_tmp[612077](58408 call size _mt[243] b[58395]))
    unknown call_tmp[612082] "expr temp" "maybe param" "maybe type" "temp"
    (612085 'move' call_tmp[612082](58411 call != call_tmp[612070] call_tmp[612077]))
    unknown call_tmp[612087] "expr temp" "maybe param" "maybe type" "temp"
    (612090 'move' call_tmp[612087](58434 call _cond_test call_tmp[612082]))
    if call_tmp[612087]
    {
      (58432 call compilerError "tuple operands to + have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491579] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612092] "expr temp" "maybe param" "maybe type" "temp"
      (612095 'move' call_tmp[612092](58447 call a[58389] 0))
      unknown call_tmp[612097] "expr temp" "maybe param" "maybe type" "temp"
      (612100 'move' call_tmp[612097](58451 call b[58395] 0))
      unknown call_tmp[612102] "expr temp" "maybe param" "maybe type" "temp"
      (612105 'move' call_tmp[612102](58452 call + call_tmp[612092] call_tmp[612097]))
      (491583 'move' call_type_tmp[491579](58454 'typeof' call_tmp[612102]))
    }
    unknown result[58457] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612109] "expr temp" "maybe param" "maybe type" "temp"
    (612112 'move' call_tmp[612109](58441 call size _mt[243] a[58389]))
    unknown call_tmp[612114] "expr temp" "maybe param" "maybe type" "temp"
    (612117 'move' call_tmp[612114](58455 call * call_tmp[612109] call_type_tmp[491579]))
    (540841 'default init var' result[58457] call_tmp[612114])
    (58460 'end of statement')
    {
      unknown d[58488] "dead at end of block" "insert auto destroy"
      (540843 'init var' d[58488] 0)
      (474911 'end of statement')
      unknown tmp[58489] "maybe param" "temp"
      unknown call_tmp[612121] "expr temp" "maybe param" "maybe type" "temp"
      (612124 'move' call_tmp[612121](58463 call size _mt[243] a[58389]))
      unknown call_tmp[612126] "expr temp" "maybe param" "maybe type" "temp"
      (612129 'move' call_tmp[612126](58467 call - call_tmp[612121] 1))
      (58501 'move' tmp[58489](58499 call chpl_compute_low_param_loop_bound 0 call_tmp[612126]))
      unknown tmp[58490] "maybe param" "temp"
      unknown call_tmp[612133] "expr temp" "maybe param" "maybe type" "temp"
      (612136 'move' call_tmp[612133](58508 call size _mt[243] a[58389]))
      unknown call_tmp[612138] "expr temp" "maybe param" "maybe type" "temp"
      (612141 'move' call_tmp[612138](58506 call - call_tmp[612133] 1))
      (58514 'move' tmp[58490](58512 call chpl_compute_high_param_loop_bound 0 call_tmp[612138]))
      unknown tmp[58491] "maybe param" "temp"
      (58517 'move' tmp[58491] 1)
      ParamForLoop[58519]
      { d[58488] tmp[58489] tmp[58490] tmp[58491]
        unknown call_tmp[612143] "expr temp" "maybe param" "maybe type" "temp"
        (612146 'move' call_tmp[612143](58474 call result[58457] d[58488]))
        unknown call_tmp[612148] "expr temp" "maybe param" "maybe type" "temp"
        (612151 'move' call_tmp[612148](58478 call a[58389] d[58488]))
        unknown call_tmp[612153] "expr temp" "maybe param" "maybe type" "temp"
        (612156 'move' call_tmp[612153](58482 call b[58395] d[58488]))
        unknown call_tmp[612158] "expr temp" "maybe param" "maybe type" "temp"
        (612161 'move' call_tmp[612158](58483 call + call_tmp[612148] call_tmp[612153]))
        (58485 call = call_tmp[612143] call_tmp[612158])
        (474912 'end of statement' result[58457] d[58488] d[58488] d[58488])
      }
      label _unused_continueLabel[58493]
      label _breakLabel[58492]
    }
    (508328 'move' ret[508323](508327 'deref' result[58457]))
    gotoReturn _end_+[508321] _end_+[508321]
    (474917 'end of statement' result[58457])
    label _end_+[508321]
    (508325 return ret[508323])
  }
  where {
    (58402 call chpl_TwoHomogTuples a[58389] b[58395])
  }
  function +[58540](arg a[58537]:_tuple[56199](?), arg b[58543]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508334] "RVV" "temp"
    unknown call_tmp[612165] "expr temp" "maybe param" "maybe type" "temp"
    (612168 'move' call_tmp[612165](58547 call size _mt[243] a[58537]))
    unknown call_tmp[612172] "expr temp" "maybe param" "maybe type" "temp"
    (612175 'move' call_tmp[612172](58551 call size _mt[243] b[58543]))
    unknown call_tmp[612177] "expr temp" "maybe param" "maybe type" "temp"
    (612180 'move' call_tmp[612177](58554 call != call_tmp[612165] call_tmp[612172]))
    unknown call_tmp[612182] "expr temp" "maybe param" "maybe type" "temp"
    (612185 'move' call_tmp[612182](58561 call _cond_test call_tmp[612177]))
    if call_tmp[612182]
    {
      (58559 call compilerError "tuple operands to + have different sizes")
    }
    unknown call_tmp[612189] "expr temp" "maybe param" "maybe type" "temp"
    (612192 'move' call_tmp[612189](58568 call size _mt[243] a[58537]))
    unknown call_tmp[612194] "expr temp" "maybe param" "maybe type" "temp"
    (612197 'move' call_tmp[612194](58572 call == call_tmp[612189] 1))
    unknown call_tmp[612199] "expr temp" "maybe param" "maybe type" "temp"
    (612202 'move' call_tmp[612199](58614 call _cond_test call_tmp[612194]))
    if call_tmp[612199]
    {
      unknown call_tmp[612204] "expr temp" "maybe param" "maybe type" "temp"
      (612207 'move' call_tmp[612204](58577 call a[58537] 0))
      unknown call_tmp[612209] "expr temp" "maybe param" "maybe type" "temp"
      (612212 'move' call_tmp[612209](58581 call b[58543] 0))
      unknown call_tmp[612214] "expr temp" "maybe param" "maybe type" "temp"
      (612217 'move' call_tmp[612214](58582 call + call_tmp[612204] call_tmp[612209]))
      unknown call_tmp[612219] "expr temp" "maybe param" "maybe type" "temp"
      (612222 'move' call_tmp[612219](58584 call _build_tuple call_tmp[612214]))
      (508339 'move' ret[508334](508338 'deref' call_tmp[612219]))
      gotoReturn _end_+[508332] _end_+[508332]
    }
    {
      unknown call_tmp[612224] "expr temp" "maybe param" "maybe type" "temp"
      (612227 'move' call_tmp[612224](58591 call a[58537] 0))
      unknown call_tmp[612229] "expr temp" "maybe param" "maybe type" "temp"
      (612232 'move' call_tmp[612229](58595 call b[58543] 0))
      unknown call_tmp[612234] "expr temp" "maybe param" "maybe type" "temp"
      (612237 'move' call_tmp[612234](58596 call + call_tmp[612224] call_tmp[612229]))
      unknown call_tmp[612239] "expr temp" "maybe param" "maybe type" "temp"
      (612242 'move' call_tmp[612239](58601 call chpl__tupleRest a[58537]))
      unknown call_tmp[612244] "expr temp" "maybe param" "maybe type" "temp"
      (612247 'move' call_tmp[612244](58605 call chpl__tupleRest b[58543]))
      unknown call_tmp[612249] "expr temp" "maybe param" "maybe type" "temp"
      (612252 'move' call_tmp[612249](58606 call + call_tmp[612239] call_tmp[612244]))
      unknown call_tmp[612254] "expr temp" "maybe param" "maybe type" "temp"
      (612257 'move' call_tmp[612254](58610 call _build_tuple call_tmp[612234](58608 'expand_tuple' call_tmp[612249])))
      (508344 'move' ret[508334](508343 'deref' call_tmp[612254]))
      gotoReturn _end_+[508332] _end_+[508332]
    }
    label _end_+[508332]
    (508336 return ret[508334])
  }
  function -[58628](arg a[58625]:_tuple[56199](?), arg b[58631]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508350] "RVV" "temp"
    unknown call_tmp[612261] "expr temp" "maybe param" "maybe type" "temp"
    (612264 'move' call_tmp[612261](58640 call size _mt[243] a[58625]))
    unknown call_tmp[612268] "expr temp" "maybe param" "maybe type" "temp"
    (612271 'move' call_tmp[612268](58644 call size _mt[243] b[58631]))
    unknown call_tmp[612273] "expr temp" "maybe param" "maybe type" "temp"
    (612276 'move' call_tmp[612273](58647 call != call_tmp[612261] call_tmp[612268]))
    unknown call_tmp[612278] "expr temp" "maybe param" "maybe type" "temp"
    (612281 'move' call_tmp[612278](58670 call _cond_test call_tmp[612273]))
    if call_tmp[612278]
    {
      (58668 call compilerError "tuple operands to - have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491585] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612283] "expr temp" "maybe param" "maybe type" "temp"
      (612286 'move' call_tmp[612283](58683 call a[58625] 0))
      unknown call_tmp[612288] "expr temp" "maybe param" "maybe type" "temp"
      (612291 'move' call_tmp[612288](58687 call b[58631] 0))
      unknown call_tmp[612293] "expr temp" "maybe param" "maybe type" "temp"
      (612296 'move' call_tmp[612293](58688 call - call_tmp[612283] call_tmp[612288]))
      (491589 'move' call_type_tmp[491585](58690 'typeof' call_tmp[612293]))
    }
    unknown result[58693] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612300] "expr temp" "maybe param" "maybe type" "temp"
    (612303 'move' call_tmp[612300](58677 call size _mt[243] a[58625]))
    unknown call_tmp[612305] "expr temp" "maybe param" "maybe type" "temp"
    (612308 'move' call_tmp[612305](58691 call * call_tmp[612300] call_type_tmp[491585]))
    (540845 'default init var' result[58693] call_tmp[612305])
    (58696 'end of statement')
    {
      unknown d[58724] "dead at end of block" "insert auto destroy"
      (540847 'init var' d[58724] 0)
      (474923 'end of statement')
      unknown tmp[58725] "maybe param" "temp"
      unknown call_tmp[612312] "expr temp" "maybe param" "maybe type" "temp"
      (612315 'move' call_tmp[612312](58699 call size _mt[243] a[58625]))
      unknown call_tmp[612317] "expr temp" "maybe param" "maybe type" "temp"
      (612320 'move' call_tmp[612317](58703 call - call_tmp[612312] 1))
      (58737 'move' tmp[58725](58735 call chpl_compute_low_param_loop_bound 0 call_tmp[612317]))
      unknown tmp[58726] "maybe param" "temp"
      unknown call_tmp[612324] "expr temp" "maybe param" "maybe type" "temp"
      (612327 'move' call_tmp[612324](58744 call size _mt[243] a[58625]))
      unknown call_tmp[612329] "expr temp" "maybe param" "maybe type" "temp"
      (612332 'move' call_tmp[612329](58742 call - call_tmp[612324] 1))
      (58750 'move' tmp[58726](58748 call chpl_compute_high_param_loop_bound 0 call_tmp[612329]))
      unknown tmp[58727] "maybe param" "temp"
      (58753 'move' tmp[58727] 1)
      ParamForLoop[58755]
      { d[58724] tmp[58725] tmp[58726] tmp[58727]
        unknown call_tmp[612334] "expr temp" "maybe param" "maybe type" "temp"
        (612337 'move' call_tmp[612334](58710 call result[58693] d[58724]))
        unknown call_tmp[612339] "expr temp" "maybe param" "maybe type" "temp"
        (612342 'move' call_tmp[612339](58714 call a[58625] d[58724]))
        unknown call_tmp[612344] "expr temp" "maybe param" "maybe type" "temp"
        (612347 'move' call_tmp[612344](58718 call b[58631] d[58724]))
        unknown call_tmp[612349] "expr temp" "maybe param" "maybe type" "temp"
        (612352 'move' call_tmp[612349](58719 call - call_tmp[612339] call_tmp[612344]))
        (58721 call = call_tmp[612334] call_tmp[612349])
        (474924 'end of statement' result[58693] d[58724] d[58724] d[58724])
      }
      label _unused_continueLabel[58729]
      label _breakLabel[58728]
    }
    (508355 'move' ret[508350](508354 'deref' result[58693]))
    gotoReturn _end_-[508348] _end_-[508348]
    (474929 'end of statement' result[58693])
    label _end_-[508348]
    (508352 return ret[508350])
  }
  where {
    (58638 call chpl_TwoHomogTuples a[58625] b[58631])
  }
  function -[58776](arg a[58773]:_tuple[56199](?), arg b[58779]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508361] "RVV" "temp"
    unknown call_tmp[612356] "expr temp" "maybe param" "maybe type" "temp"
    (612359 'move' call_tmp[612356](58783 call size _mt[243] a[58773]))
    unknown call_tmp[612363] "expr temp" "maybe param" "maybe type" "temp"
    (612366 'move' call_tmp[612363](58787 call size _mt[243] b[58779]))
    unknown call_tmp[612368] "expr temp" "maybe param" "maybe type" "temp"
    (612371 'move' call_tmp[612368](58790 call != call_tmp[612356] call_tmp[612363]))
    unknown call_tmp[612373] "expr temp" "maybe param" "maybe type" "temp"
    (612376 'move' call_tmp[612373](58797 call _cond_test call_tmp[612368]))
    if call_tmp[612373]
    {
      (58795 call compilerError "tuple operands to - have different sizes")
    }
    unknown call_tmp[612380] "expr temp" "maybe param" "maybe type" "temp"
    (612383 'move' call_tmp[612380](58804 call size _mt[243] a[58773]))
    unknown call_tmp[612385] "expr temp" "maybe param" "maybe type" "temp"
    (612388 'move' call_tmp[612385](58808 call == call_tmp[612380] 1))
    unknown call_tmp[612390] "expr temp" "maybe param" "maybe type" "temp"
    (612393 'move' call_tmp[612390](58850 call _cond_test call_tmp[612385]))
    if call_tmp[612390]
    {
      unknown call_tmp[612395] "expr temp" "maybe param" "maybe type" "temp"
      (612398 'move' call_tmp[612395](58813 call a[58773] 0))
      unknown call_tmp[612400] "expr temp" "maybe param" "maybe type" "temp"
      (612403 'move' call_tmp[612400](58817 call b[58779] 0))
      unknown call_tmp[612405] "expr temp" "maybe param" "maybe type" "temp"
      (612408 'move' call_tmp[612405](58818 call - call_tmp[612395] call_tmp[612400]))
      unknown call_tmp[612410] "expr temp" "maybe param" "maybe type" "temp"
      (612413 'move' call_tmp[612410](58820 call _build_tuple call_tmp[612405]))
      (508366 'move' ret[508361](508365 'deref' call_tmp[612410]))
      gotoReturn _end_-[508359] _end_-[508359]
    }
    {
      unknown call_tmp[612415] "expr temp" "maybe param" "maybe type" "temp"
      (612418 'move' call_tmp[612415](58827 call a[58773] 0))
      unknown call_tmp[612420] "expr temp" "maybe param" "maybe type" "temp"
      (612423 'move' call_tmp[612420](58831 call b[58779] 0))
      unknown call_tmp[612425] "expr temp" "maybe param" "maybe type" "temp"
      (612428 'move' call_tmp[612425](58832 call - call_tmp[612415] call_tmp[612420]))
      unknown call_tmp[612430] "expr temp" "maybe param" "maybe type" "temp"
      (612433 'move' call_tmp[612430](58837 call chpl__tupleRest a[58773]))
      unknown call_tmp[612435] "expr temp" "maybe param" "maybe type" "temp"
      (612438 'move' call_tmp[612435](58841 call chpl__tupleRest b[58779]))
      unknown call_tmp[612440] "expr temp" "maybe param" "maybe type" "temp"
      (612443 'move' call_tmp[612440](58842 call - call_tmp[612430] call_tmp[612435]))
      unknown call_tmp[612445] "expr temp" "maybe param" "maybe type" "temp"
      (612448 'move' call_tmp[612445](58846 call _build_tuple call_tmp[612425](58844 'expand_tuple' call_tmp[612440])))
      (508371 'move' ret[508361](508370 'deref' call_tmp[612445]))
      gotoReturn _end_-[508359] _end_-[508359]
    }
    label _end_-[508359]
    (508363 return ret[508361])
  }
  function *[58864](arg a[58861]:_tuple[56199](?), arg b[58867]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508377] "RVV" "temp"
    unknown call_tmp[612452] "expr temp" "maybe param" "maybe type" "temp"
    (612455 'move' call_tmp[612452](58876 call size _mt[243] a[58861]))
    unknown call_tmp[612459] "expr temp" "maybe param" "maybe type" "temp"
    (612462 'move' call_tmp[612459](58880 call size _mt[243] b[58867]))
    unknown call_tmp[612464] "expr temp" "maybe param" "maybe type" "temp"
    (612467 'move' call_tmp[612464](58883 call != call_tmp[612452] call_tmp[612459]))
    unknown call_tmp[612469] "expr temp" "maybe param" "maybe type" "temp"
    (612472 'move' call_tmp[612469](58906 call _cond_test call_tmp[612464]))
    if call_tmp[612469]
    {
      (58904 call compilerError "tuple operands to * have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491591] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612474] "expr temp" "maybe param" "maybe type" "temp"
      (612477 'move' call_tmp[612474](58919 call a[58861] 0))
      unknown call_tmp[612479] "expr temp" "maybe param" "maybe type" "temp"
      (612482 'move' call_tmp[612479](58923 call b[58867] 0))
      unknown call_tmp[612484] "expr temp" "maybe param" "maybe type" "temp"
      (612487 'move' call_tmp[612484](58924 call * call_tmp[612474] call_tmp[612479]))
      (491595 'move' call_type_tmp[491591](58926 'typeof' call_tmp[612484]))
    }
    unknown result[58929] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612491] "expr temp" "maybe param" "maybe type" "temp"
    (612494 'move' call_tmp[612491](58913 call size _mt[243] a[58861]))
    unknown call_tmp[612496] "expr temp" "maybe param" "maybe type" "temp"
    (612499 'move' call_tmp[612496](58927 call * call_tmp[612491] call_type_tmp[491591]))
    (540849 'default init var' result[58929] call_tmp[612496])
    (58932 'end of statement')
    {
      unknown d[58960] "dead at end of block" "insert auto destroy"
      (540851 'init var' d[58960] 0)
      (474935 'end of statement')
      unknown tmp[58961] "maybe param" "temp"
      unknown call_tmp[612503] "expr temp" "maybe param" "maybe type" "temp"
      (612506 'move' call_tmp[612503](58935 call size _mt[243] a[58861]))
      unknown call_tmp[612508] "expr temp" "maybe param" "maybe type" "temp"
      (612511 'move' call_tmp[612508](58939 call - call_tmp[612503] 1))
      (58973 'move' tmp[58961](58971 call chpl_compute_low_param_loop_bound 0 call_tmp[612508]))
      unknown tmp[58962] "maybe param" "temp"
      unknown call_tmp[612515] "expr temp" "maybe param" "maybe type" "temp"
      (612518 'move' call_tmp[612515](58980 call size _mt[243] a[58861]))
      unknown call_tmp[612520] "expr temp" "maybe param" "maybe type" "temp"
      (612523 'move' call_tmp[612520](58978 call - call_tmp[612515] 1))
      (58986 'move' tmp[58962](58984 call chpl_compute_high_param_loop_bound 0 call_tmp[612520]))
      unknown tmp[58963] "maybe param" "temp"
      (58989 'move' tmp[58963] 1)
      ParamForLoop[58991]
      { d[58960] tmp[58961] tmp[58962] tmp[58963]
        unknown call_tmp[612525] "expr temp" "maybe param" "maybe type" "temp"
        (612528 'move' call_tmp[612525](58946 call result[58929] d[58960]))
        unknown call_tmp[612530] "expr temp" "maybe param" "maybe type" "temp"
        (612533 'move' call_tmp[612530](58950 call a[58861] d[58960]))
        unknown call_tmp[612535] "expr temp" "maybe param" "maybe type" "temp"
        (612538 'move' call_tmp[612535](58954 call b[58867] d[58960]))
        unknown call_tmp[612540] "expr temp" "maybe param" "maybe type" "temp"
        (612543 'move' call_tmp[612540](58955 call * call_tmp[612530] call_tmp[612535]))
        (58957 call = call_tmp[612525] call_tmp[612540])
        (474936 'end of statement' result[58929] d[58960] d[58960] d[58960])
      }
      label _unused_continueLabel[58965]
      label _breakLabel[58964]
    }
    (508382 'move' ret[508377](508381 'deref' result[58929]))
    gotoReturn _end_*[508375] _end_*[508375]
    (474941 'end of statement' result[58929])
    label _end_*[508375]
    (508379 return ret[508377])
  }
  where {
    (58874 call chpl_TwoHomogTuples a[58861] b[58867])
  }
  function *[59012](arg a[59009]:_tuple[56199](?), arg b[59015]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508388] "RVV" "temp"
    unknown call_tmp[612547] "expr temp" "maybe param" "maybe type" "temp"
    (612550 'move' call_tmp[612547](59019 call size _mt[243] a[59009]))
    unknown call_tmp[612554] "expr temp" "maybe param" "maybe type" "temp"
    (612557 'move' call_tmp[612554](59023 call size _mt[243] b[59015]))
    unknown call_tmp[612559] "expr temp" "maybe param" "maybe type" "temp"
    (612562 'move' call_tmp[612559](59026 call != call_tmp[612547] call_tmp[612554]))
    unknown call_tmp[612564] "expr temp" "maybe param" "maybe type" "temp"
    (612567 'move' call_tmp[612564](59033 call _cond_test call_tmp[612559]))
    if call_tmp[612564]
    {
      (59031 call compilerError "tuple operands to * have different sizes")
    }
    unknown call_tmp[612571] "expr temp" "maybe param" "maybe type" "temp"
    (612574 'move' call_tmp[612571](59040 call size _mt[243] a[59009]))
    unknown call_tmp[612576] "expr temp" "maybe param" "maybe type" "temp"
    (612579 'move' call_tmp[612576](59044 call == call_tmp[612571] 1))
    unknown call_tmp[612581] "expr temp" "maybe param" "maybe type" "temp"
    (612584 'move' call_tmp[612581](59086 call _cond_test call_tmp[612576]))
    if call_tmp[612581]
    {
      unknown call_tmp[612586] "expr temp" "maybe param" "maybe type" "temp"
      (612589 'move' call_tmp[612586](59049 call a[59009] 0))
      unknown call_tmp[612591] "expr temp" "maybe param" "maybe type" "temp"
      (612594 'move' call_tmp[612591](59053 call b[59015] 0))
      unknown call_tmp[612596] "expr temp" "maybe param" "maybe type" "temp"
      (612599 'move' call_tmp[612596](59054 call * call_tmp[612586] call_tmp[612591]))
      unknown call_tmp[612601] "expr temp" "maybe param" "maybe type" "temp"
      (612604 'move' call_tmp[612601](59056 call _build_tuple call_tmp[612596]))
      (508393 'move' ret[508388](508392 'deref' call_tmp[612601]))
      gotoReturn _end_*[508386] _end_*[508386]
    }
    {
      unknown call_tmp[612606] "expr temp" "maybe param" "maybe type" "temp"
      (612609 'move' call_tmp[612606](59063 call a[59009] 0))
      unknown call_tmp[612611] "expr temp" "maybe param" "maybe type" "temp"
      (612614 'move' call_tmp[612611](59067 call b[59015] 0))
      unknown call_tmp[612616] "expr temp" "maybe param" "maybe type" "temp"
      (612619 'move' call_tmp[612616](59068 call * call_tmp[612606] call_tmp[612611]))
      unknown call_tmp[612621] "expr temp" "maybe param" "maybe type" "temp"
      (612624 'move' call_tmp[612621](59073 call chpl__tupleRest a[59009]))
      unknown call_tmp[612626] "expr temp" "maybe param" "maybe type" "temp"
      (612629 'move' call_tmp[612626](59077 call chpl__tupleRest b[59015]))
      unknown call_tmp[612631] "expr temp" "maybe param" "maybe type" "temp"
      (612634 'move' call_tmp[612631](59078 call * call_tmp[612621] call_tmp[612626]))
      unknown call_tmp[612636] "expr temp" "maybe param" "maybe type" "temp"
      (612639 'move' call_tmp[612636](59082 call _build_tuple call_tmp[612616](59080 'expand_tuple' call_tmp[612631])))
      (508398 'move' ret[508388](508397 'deref' call_tmp[612636]))
      gotoReturn _end_*[508386] _end_*[508386]
    }
    label _end_*[508386]
    (508390 return ret[508388])
  }
  function /[59100](arg a[59097]:_tuple[56199](?), arg b[59103]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508404] "RVV" "temp"
    unknown call_tmp[612643] "expr temp" "maybe param" "maybe type" "temp"
    (612646 'move' call_tmp[612643](59112 call size _mt[243] a[59097]))
    unknown call_tmp[612650] "expr temp" "maybe param" "maybe type" "temp"
    (612653 'move' call_tmp[612650](59116 call size _mt[243] b[59103]))
    unknown call_tmp[612655] "expr temp" "maybe param" "maybe type" "temp"
    (612658 'move' call_tmp[612655](59119 call != call_tmp[612643] call_tmp[612650]))
    unknown call_tmp[612660] "expr temp" "maybe param" "maybe type" "temp"
    (612663 'move' call_tmp[612660](59142 call _cond_test call_tmp[612655]))
    if call_tmp[612660]
    {
      (59140 call compilerError "tuple operands to / have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491597] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612665] "expr temp" "maybe param" "maybe type" "temp"
      (612668 'move' call_tmp[612665](59155 call a[59097] 0))
      unknown call_tmp[612670] "expr temp" "maybe param" "maybe type" "temp"
      (612673 'move' call_tmp[612670](59159 call b[59103] 0))
      unknown call_tmp[612675] "expr temp" "maybe param" "maybe type" "temp"
      (612678 'move' call_tmp[612675](59160 call / call_tmp[612665] call_tmp[612670]))
      (491601 'move' call_type_tmp[491597](59162 'typeof' call_tmp[612675]))
    }
    unknown result[59165] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612682] "expr temp" "maybe param" "maybe type" "temp"
    (612685 'move' call_tmp[612682](59149 call size _mt[243] a[59097]))
    unknown call_tmp[612687] "expr temp" "maybe param" "maybe type" "temp"
    (612690 'move' call_tmp[612687](59163 call * call_tmp[612682] call_type_tmp[491597]))
    (540853 'default init var' result[59165] call_tmp[612687])
    (59168 'end of statement')
    {
      unknown d[59196] "dead at end of block" "insert auto destroy"
      (540855 'init var' d[59196] 0)
      (474947 'end of statement')
      unknown tmp[59197] "maybe param" "temp"
      unknown call_tmp[612694] "expr temp" "maybe param" "maybe type" "temp"
      (612697 'move' call_tmp[612694](59171 call size _mt[243] a[59097]))
      unknown call_tmp[612699] "expr temp" "maybe param" "maybe type" "temp"
      (612702 'move' call_tmp[612699](59175 call - call_tmp[612694] 1))
      (59209 'move' tmp[59197](59207 call chpl_compute_low_param_loop_bound 0 call_tmp[612699]))
      unknown tmp[59198] "maybe param" "temp"
      unknown call_tmp[612706] "expr temp" "maybe param" "maybe type" "temp"
      (612709 'move' call_tmp[612706](59216 call size _mt[243] a[59097]))
      unknown call_tmp[612711] "expr temp" "maybe param" "maybe type" "temp"
      (612714 'move' call_tmp[612711](59214 call - call_tmp[612706] 1))
      (59222 'move' tmp[59198](59220 call chpl_compute_high_param_loop_bound 0 call_tmp[612711]))
      unknown tmp[59199] "maybe param" "temp"
      (59225 'move' tmp[59199] 1)
      ParamForLoop[59227]
      { d[59196] tmp[59197] tmp[59198] tmp[59199]
        unknown call_tmp[612716] "expr temp" "maybe param" "maybe type" "temp"
        (612719 'move' call_tmp[612716](59182 call result[59165] d[59196]))
        unknown call_tmp[612721] "expr temp" "maybe param" "maybe type" "temp"
        (612724 'move' call_tmp[612721](59186 call a[59097] d[59196]))
        unknown call_tmp[612726] "expr temp" "maybe param" "maybe type" "temp"
        (612729 'move' call_tmp[612726](59190 call b[59103] d[59196]))
        unknown call_tmp[612731] "expr temp" "maybe param" "maybe type" "temp"
        (612734 'move' call_tmp[612731](59191 call / call_tmp[612721] call_tmp[612726]))
        (59193 call = call_tmp[612716] call_tmp[612731])
        (474948 'end of statement' result[59165] d[59196] d[59196] d[59196])
      }
      label _unused_continueLabel[59201]
      label _breakLabel[59200]
    }
    (508409 'move' ret[508404](508408 'deref' result[59165]))
    gotoReturn _end_/[508402] _end_/[508402]
    (474953 'end of statement' result[59165])
    label _end_/[508402]
    (508406 return ret[508404])
  }
  where {
    (59110 call chpl_TwoHomogTuples a[59097] b[59103])
  }
  function /[59248](arg a[59245]:_tuple[56199](?), arg b[59251]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508415] "RVV" "temp"
    unknown call_tmp[612738] "expr temp" "maybe param" "maybe type" "temp"
    (612741 'move' call_tmp[612738](59255 call size _mt[243] a[59245]))
    unknown call_tmp[612745] "expr temp" "maybe param" "maybe type" "temp"
    (612748 'move' call_tmp[612745](59259 call size _mt[243] b[59251]))
    unknown call_tmp[612750] "expr temp" "maybe param" "maybe type" "temp"
    (612753 'move' call_tmp[612750](59262 call != call_tmp[612738] call_tmp[612745]))
    unknown call_tmp[612755] "expr temp" "maybe param" "maybe type" "temp"
    (612758 'move' call_tmp[612755](59269 call _cond_test call_tmp[612750]))
    if call_tmp[612755]
    {
      (59267 call compilerError "tuple operands to / have different sizes")
    }
    unknown call_tmp[612762] "expr temp" "maybe param" "maybe type" "temp"
    (612765 'move' call_tmp[612762](59276 call size _mt[243] a[59245]))
    unknown call_tmp[612767] "expr temp" "maybe param" "maybe type" "temp"
    (612770 'move' call_tmp[612767](59280 call == call_tmp[612762] 1))
    unknown call_tmp[612772] "expr temp" "maybe param" "maybe type" "temp"
    (612775 'move' call_tmp[612772](59322 call _cond_test call_tmp[612767]))
    if call_tmp[612772]
    {
      unknown call_tmp[612777] "expr temp" "maybe param" "maybe type" "temp"
      (612780 'move' call_tmp[612777](59285 call a[59245] 0))
      unknown call_tmp[612782] "expr temp" "maybe param" "maybe type" "temp"
      (612785 'move' call_tmp[612782](59289 call b[59251] 0))
      unknown call_tmp[612787] "expr temp" "maybe param" "maybe type" "temp"
      (612790 'move' call_tmp[612787](59290 call / call_tmp[612777] call_tmp[612782]))
      unknown call_tmp[612792] "expr temp" "maybe param" "maybe type" "temp"
      (612795 'move' call_tmp[612792](59292 call _build_tuple call_tmp[612787]))
      (508420 'move' ret[508415](508419 'deref' call_tmp[612792]))
      gotoReturn _end_/[508413] _end_/[508413]
    }
    {
      unknown call_tmp[612797] "expr temp" "maybe param" "maybe type" "temp"
      (612800 'move' call_tmp[612797](59299 call a[59245] 0))
      unknown call_tmp[612802] "expr temp" "maybe param" "maybe type" "temp"
      (612805 'move' call_tmp[612802](59303 call b[59251] 0))
      unknown call_tmp[612807] "expr temp" "maybe param" "maybe type" "temp"
      (612810 'move' call_tmp[612807](59304 call / call_tmp[612797] call_tmp[612802]))
      unknown call_tmp[612812] "expr temp" "maybe param" "maybe type" "temp"
      (612815 'move' call_tmp[612812](59309 call chpl__tupleRest a[59245]))
      unknown call_tmp[612817] "expr temp" "maybe param" "maybe type" "temp"
      (612820 'move' call_tmp[612817](59313 call chpl__tupleRest b[59251]))
      unknown call_tmp[612822] "expr temp" "maybe param" "maybe type" "temp"
      (612825 'move' call_tmp[612822](59314 call / call_tmp[612812] call_tmp[612817]))
      unknown call_tmp[612827] "expr temp" "maybe param" "maybe type" "temp"
      (612830 'move' call_tmp[612827](59318 call _build_tuple call_tmp[612807](59316 'expand_tuple' call_tmp[612822])))
      (508425 'move' ret[508415](508424 'deref' call_tmp[612827]))
      gotoReturn _end_/[508413] _end_/[508413]
    }
    label _end_/[508413]
    (508417 return ret[508415])
  }
  function %[59336](arg a[59333]:_tuple[56199](?), arg b[59339]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508431] "RVV" "temp"
    unknown call_tmp[612834] "expr temp" "maybe param" "maybe type" "temp"
    (612837 'move' call_tmp[612834](59348 call size _mt[243] a[59333]))
    unknown call_tmp[612841] "expr temp" "maybe param" "maybe type" "temp"
    (612844 'move' call_tmp[612841](59352 call size _mt[243] b[59339]))
    unknown call_tmp[612846] "expr temp" "maybe param" "maybe type" "temp"
    (612849 'move' call_tmp[612846](59355 call != call_tmp[612834] call_tmp[612841]))
    unknown call_tmp[612851] "expr temp" "maybe param" "maybe type" "temp"
    (612854 'move' call_tmp[612851](59378 call _cond_test call_tmp[612846]))
    if call_tmp[612851]
    {
      (59376 call compilerError "tuple operands to % have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491603] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[612856] "expr temp" "maybe param" "maybe type" "temp"
      (612859 'move' call_tmp[612856](59391 call a[59333] 0))
      unknown call_tmp[612861] "expr temp" "maybe param" "maybe type" "temp"
      (612864 'move' call_tmp[612861](59395 call b[59339] 0))
      unknown call_tmp[612866] "expr temp" "maybe param" "maybe type" "temp"
      (612869 'move' call_tmp[612866](59396 call % call_tmp[612856] call_tmp[612861]))
      (491607 'move' call_type_tmp[491603](59398 'typeof' call_tmp[612866]))
    }
    unknown result[59401] "dead at end of block" "insert auto destroy"
    unknown call_tmp[612873] "expr temp" "maybe param" "maybe type" "temp"
    (612876 'move' call_tmp[612873](59385 call size _mt[243] a[59333]))
    unknown call_tmp[612878] "expr temp" "maybe param" "maybe type" "temp"
    (612881 'move' call_tmp[612878](59399 call * call_tmp[612873] call_type_tmp[491603]))
    (540857 'default init var' result[59401] call_tmp[612878])
    (59404 'end of statement')
    {
      unknown d[59432] "dead at end of block" "insert auto destroy"
      (540859 'init var' d[59432] 0)
      (474959 'end of statement')
      unknown tmp[59433] "maybe param" "temp"
      unknown call_tmp[612885] "expr temp" "maybe param" "maybe type" "temp"
      (612888 'move' call_tmp[612885](59407 call size _mt[243] a[59333]))
      unknown call_tmp[612890] "expr temp" "maybe param" "maybe type" "temp"
      (612893 'move' call_tmp[612890](59411 call - call_tmp[612885] 1))
      (59445 'move' tmp[59433](59443 call chpl_compute_low_param_loop_bound 0 call_tmp[612890]))
      unknown tmp[59434] "maybe param" "temp"
      unknown call_tmp[612897] "expr temp" "maybe param" "maybe type" "temp"
      (612900 'move' call_tmp[612897](59452 call size _mt[243] a[59333]))
      unknown call_tmp[612902] "expr temp" "maybe param" "maybe type" "temp"
      (612905 'move' call_tmp[612902](59450 call - call_tmp[612897] 1))
      (59458 'move' tmp[59434](59456 call chpl_compute_high_param_loop_bound 0 call_tmp[612902]))
      unknown tmp[59435] "maybe param" "temp"
      (59461 'move' tmp[59435] 1)
      ParamForLoop[59463]
      { d[59432] tmp[59433] tmp[59434] tmp[59435]
        unknown call_tmp[612907] "expr temp" "maybe param" "maybe type" "temp"
        (612910 'move' call_tmp[612907](59418 call result[59401] d[59432]))
        unknown call_tmp[612912] "expr temp" "maybe param" "maybe type" "temp"
        (612915 'move' call_tmp[612912](59422 call a[59333] d[59432]))
        unknown call_tmp[612917] "expr temp" "maybe param" "maybe type" "temp"
        (612920 'move' call_tmp[612917](59426 call b[59339] d[59432]))
        unknown call_tmp[612922] "expr temp" "maybe param" "maybe type" "temp"
        (612925 'move' call_tmp[612922](59427 call % call_tmp[612912] call_tmp[612917]))
        (59429 call = call_tmp[612907] call_tmp[612922])
        (474960 'end of statement' result[59401] d[59432] d[59432] d[59432])
      }
      label _unused_continueLabel[59437]
      label _breakLabel[59436]
    }
    (508436 'move' ret[508431](508435 'deref' result[59401]))
    gotoReturn _end_%[508429] _end_%[508429]
    (474965 'end of statement' result[59401])
    label _end_%[508429]
    (508433 return ret[508431])
  }
  where {
    (59346 call chpl_TwoHomogTuples a[59333] b[59339])
  }
  function %[59484](arg a[59481]:_tuple[56199](?), arg b[59487]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508442] "RVV" "temp"
    unknown call_tmp[612929] "expr temp" "maybe param" "maybe type" "temp"
    (612932 'move' call_tmp[612929](59491 call size _mt[243] a[59481]))
    unknown call_tmp[612936] "expr temp" "maybe param" "maybe type" "temp"
    (612939 'move' call_tmp[612936](59495 call size _mt[243] b[59487]))
    unknown call_tmp[612941] "expr temp" "maybe param" "maybe type" "temp"
    (612944 'move' call_tmp[612941](59498 call != call_tmp[612929] call_tmp[612936]))
    unknown call_tmp[612946] "expr temp" "maybe param" "maybe type" "temp"
    (612949 'move' call_tmp[612946](59505 call _cond_test call_tmp[612941]))
    if call_tmp[612946]
    {
      (59503 call compilerError "tuple operands to % have different sizes")
    }
    unknown call_tmp[612953] "expr temp" "maybe param" "maybe type" "temp"
    (612956 'move' call_tmp[612953](59512 call size _mt[243] a[59481]))
    unknown call_tmp[612958] "expr temp" "maybe param" "maybe type" "temp"
    (612961 'move' call_tmp[612958](59516 call == call_tmp[612953] 1))
    unknown call_tmp[612963] "expr temp" "maybe param" "maybe type" "temp"
    (612966 'move' call_tmp[612963](59558 call _cond_test call_tmp[612958]))
    if call_tmp[612963]
    {
      unknown call_tmp[612968] "expr temp" "maybe param" "maybe type" "temp"
      (612971 'move' call_tmp[612968](59521 call a[59481] 0))
      unknown call_tmp[612973] "expr temp" "maybe param" "maybe type" "temp"
      (612976 'move' call_tmp[612973](59525 call b[59487] 0))
      unknown call_tmp[612978] "expr temp" "maybe param" "maybe type" "temp"
      (612981 'move' call_tmp[612978](59526 call % call_tmp[612968] call_tmp[612973]))
      unknown call_tmp[612983] "expr temp" "maybe param" "maybe type" "temp"
      (612986 'move' call_tmp[612983](59528 call _build_tuple call_tmp[612978]))
      (508447 'move' ret[508442](508446 'deref' call_tmp[612983]))
      gotoReturn _end_%[508440] _end_%[508440]
    }
    {
      unknown call_tmp[612988] "expr temp" "maybe param" "maybe type" "temp"
      (612991 'move' call_tmp[612988](59535 call a[59481] 0))
      unknown call_tmp[612993] "expr temp" "maybe param" "maybe type" "temp"
      (612996 'move' call_tmp[612993](59539 call b[59487] 0))
      unknown call_tmp[612998] "expr temp" "maybe param" "maybe type" "temp"
      (613001 'move' call_tmp[612998](59540 call % call_tmp[612988] call_tmp[612993]))
      unknown call_tmp[613003] "expr temp" "maybe param" "maybe type" "temp"
      (613006 'move' call_tmp[613003](59545 call chpl__tupleRest a[59481]))
      unknown call_tmp[613008] "expr temp" "maybe param" "maybe type" "temp"
      (613011 'move' call_tmp[613008](59549 call chpl__tupleRest b[59487]))
      unknown call_tmp[613013] "expr temp" "maybe param" "maybe type" "temp"
      (613016 'move' call_tmp[613013](59550 call % call_tmp[613003] call_tmp[613008]))
      unknown call_tmp[613018] "expr temp" "maybe param" "maybe type" "temp"
      (613021 'move' call_tmp[613018](59554 call _build_tuple call_tmp[612998](59552 'expand_tuple' call_tmp[613013])))
      (508452 'move' ret[508442](508451 'deref' call_tmp[613018]))
      gotoReturn _end_%[508440] _end_%[508440]
    }
    label _end_%[508440]
    (508444 return ret[508442])
  }
  function **[59572](arg a[59569]:_tuple[56199](?), arg b[59575]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508458] "RVV" "temp"
    unknown call_tmp[613025] "expr temp" "maybe param" "maybe type" "temp"
    (613028 'move' call_tmp[613025](59584 call size _mt[243] a[59569]))
    unknown call_tmp[613032] "expr temp" "maybe param" "maybe type" "temp"
    (613035 'move' call_tmp[613032](59588 call size _mt[243] b[59575]))
    unknown call_tmp[613037] "expr temp" "maybe param" "maybe type" "temp"
    (613040 'move' call_tmp[613037](59591 call != call_tmp[613025] call_tmp[613032]))
    unknown call_tmp[613042] "expr temp" "maybe param" "maybe type" "temp"
    (613045 'move' call_tmp[613042](59614 call _cond_test call_tmp[613037]))
    if call_tmp[613042]
    {
      (59612 call compilerError "tuple operands to ** have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491609] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613047] "expr temp" "maybe param" "maybe type" "temp"
      (613050 'move' call_tmp[613047](59627 call a[59569] 0))
      unknown call_tmp[613052] "expr temp" "maybe param" "maybe type" "temp"
      (613055 'move' call_tmp[613052](59631 call b[59575] 0))
      unknown call_tmp[613057] "expr temp" "maybe param" "maybe type" "temp"
      (613060 'move' call_tmp[613057](59632 call ** call_tmp[613047] call_tmp[613052]))
      (491613 'move' call_type_tmp[491609](59634 'typeof' call_tmp[613057]))
    }
    unknown result[59637] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613064] "expr temp" "maybe param" "maybe type" "temp"
    (613067 'move' call_tmp[613064](59621 call size _mt[243] a[59569]))
    unknown call_tmp[613069] "expr temp" "maybe param" "maybe type" "temp"
    (613072 'move' call_tmp[613069](59635 call * call_tmp[613064] call_type_tmp[491609]))
    (540861 'default init var' result[59637] call_tmp[613069])
    (59640 'end of statement')
    {
      unknown d[59668] "dead at end of block" "insert auto destroy"
      (540863 'init var' d[59668] 0)
      (474971 'end of statement')
      unknown tmp[59669] "maybe param" "temp"
      unknown call_tmp[613076] "expr temp" "maybe param" "maybe type" "temp"
      (613079 'move' call_tmp[613076](59643 call size _mt[243] a[59569]))
      unknown call_tmp[613081] "expr temp" "maybe param" "maybe type" "temp"
      (613084 'move' call_tmp[613081](59647 call - call_tmp[613076] 1))
      (59681 'move' tmp[59669](59679 call chpl_compute_low_param_loop_bound 0 call_tmp[613081]))
      unknown tmp[59670] "maybe param" "temp"
      unknown call_tmp[613088] "expr temp" "maybe param" "maybe type" "temp"
      (613091 'move' call_tmp[613088](59688 call size _mt[243] a[59569]))
      unknown call_tmp[613093] "expr temp" "maybe param" "maybe type" "temp"
      (613096 'move' call_tmp[613093](59686 call - call_tmp[613088] 1))
      (59694 'move' tmp[59670](59692 call chpl_compute_high_param_loop_bound 0 call_tmp[613093]))
      unknown tmp[59671] "maybe param" "temp"
      (59697 'move' tmp[59671] 1)
      ParamForLoop[59699]
      { d[59668] tmp[59669] tmp[59670] tmp[59671]
        unknown call_tmp[613098] "expr temp" "maybe param" "maybe type" "temp"
        (613101 'move' call_tmp[613098](59654 call result[59637] d[59668]))
        unknown call_tmp[613103] "expr temp" "maybe param" "maybe type" "temp"
        (613106 'move' call_tmp[613103](59658 call a[59569] d[59668]))
        unknown call_tmp[613108] "expr temp" "maybe param" "maybe type" "temp"
        (613111 'move' call_tmp[613108](59662 call b[59575] d[59668]))
        unknown call_tmp[613113] "expr temp" "maybe param" "maybe type" "temp"
        (613116 'move' call_tmp[613113](59663 call ** call_tmp[613103] call_tmp[613108]))
        (59665 call = call_tmp[613098] call_tmp[613113])
        (474972 'end of statement' result[59637] d[59668] d[59668] d[59668])
      }
      label _unused_continueLabel[59673]
      label _breakLabel[59672]
    }
    (508463 'move' ret[508458](508462 'deref' result[59637]))
    gotoReturn _end_**[508456] _end_**[508456]
    (474977 'end of statement' result[59637])
    label _end_**[508456]
    (508460 return ret[508458])
  }
  where {
    (59582 call chpl_TwoHomogTuples a[59569] b[59575])
  }
  function **[59720](arg a[59717]:_tuple[56199](?), arg b[59723]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508469] "RVV" "temp"
    unknown call_tmp[613120] "expr temp" "maybe param" "maybe type" "temp"
    (613123 'move' call_tmp[613120](59727 call size _mt[243] a[59717]))
    unknown call_tmp[613127] "expr temp" "maybe param" "maybe type" "temp"
    (613130 'move' call_tmp[613127](59731 call size _mt[243] b[59723]))
    unknown call_tmp[613132] "expr temp" "maybe param" "maybe type" "temp"
    (613135 'move' call_tmp[613132](59734 call != call_tmp[613120] call_tmp[613127]))
    unknown call_tmp[613137] "expr temp" "maybe param" "maybe type" "temp"
    (613140 'move' call_tmp[613137](59741 call _cond_test call_tmp[613132]))
    if call_tmp[613137]
    {
      (59739 call compilerError "tuple operands to ** have different sizes")
    }
    unknown call_tmp[613144] "expr temp" "maybe param" "maybe type" "temp"
    (613147 'move' call_tmp[613144](59748 call size _mt[243] a[59717]))
    unknown call_tmp[613149] "expr temp" "maybe param" "maybe type" "temp"
    (613152 'move' call_tmp[613149](59752 call == call_tmp[613144] 1))
    unknown call_tmp[613154] "expr temp" "maybe param" "maybe type" "temp"
    (613157 'move' call_tmp[613154](59794 call _cond_test call_tmp[613149]))
    if call_tmp[613154]
    {
      unknown call_tmp[613159] "expr temp" "maybe param" "maybe type" "temp"
      (613162 'move' call_tmp[613159](59757 call a[59717] 0))
      unknown call_tmp[613164] "expr temp" "maybe param" "maybe type" "temp"
      (613167 'move' call_tmp[613164](59761 call b[59723] 0))
      unknown call_tmp[613169] "expr temp" "maybe param" "maybe type" "temp"
      (613172 'move' call_tmp[613169](59762 call ** call_tmp[613159] call_tmp[613164]))
      unknown call_tmp[613174] "expr temp" "maybe param" "maybe type" "temp"
      (613177 'move' call_tmp[613174](59764 call _build_tuple call_tmp[613169]))
      (508474 'move' ret[508469](508473 'deref' call_tmp[613174]))
      gotoReturn _end_**[508467] _end_**[508467]
    }
    {
      unknown call_tmp[613179] "expr temp" "maybe param" "maybe type" "temp"
      (613182 'move' call_tmp[613179](59771 call a[59717] 0))
      unknown call_tmp[613184] "expr temp" "maybe param" "maybe type" "temp"
      (613187 'move' call_tmp[613184](59775 call b[59723] 0))
      unknown call_tmp[613189] "expr temp" "maybe param" "maybe type" "temp"
      (613192 'move' call_tmp[613189](59776 call ** call_tmp[613179] call_tmp[613184]))
      unknown call_tmp[613194] "expr temp" "maybe param" "maybe type" "temp"
      (613197 'move' call_tmp[613194](59781 call chpl__tupleRest a[59717]))
      unknown call_tmp[613199] "expr temp" "maybe param" "maybe type" "temp"
      (613202 'move' call_tmp[613199](59785 call chpl__tupleRest b[59723]))
      unknown call_tmp[613204] "expr temp" "maybe param" "maybe type" "temp"
      (613207 'move' call_tmp[613204](59786 call ** call_tmp[613194] call_tmp[613199]))
      unknown call_tmp[613209] "expr temp" "maybe param" "maybe type" "temp"
      (613212 'move' call_tmp[613209](59790 call _build_tuple call_tmp[613189](59788 'expand_tuple' call_tmp[613204])))
      (508479 'move' ret[508469](508478 'deref' call_tmp[613209]))
      gotoReturn _end_**[508467] _end_**[508467]
    }
    label _end_**[508467]
    (508471 return ret[508469])
  }
  function &[59808](arg a[59805]:_tuple[56199](?), arg b[59811]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508485] "RVV" "temp"
    unknown call_tmp[613216] "expr temp" "maybe param" "maybe type" "temp"
    (613219 'move' call_tmp[613216](59820 call size _mt[243] a[59805]))
    unknown call_tmp[613223] "expr temp" "maybe param" "maybe type" "temp"
    (613226 'move' call_tmp[613223](59824 call size _mt[243] b[59811]))
    unknown call_tmp[613228] "expr temp" "maybe param" "maybe type" "temp"
    (613231 'move' call_tmp[613228](59827 call != call_tmp[613216] call_tmp[613223]))
    unknown call_tmp[613233] "expr temp" "maybe param" "maybe type" "temp"
    (613236 'move' call_tmp[613233](59850 call _cond_test call_tmp[613228]))
    if call_tmp[613233]
    {
      (59848 call compilerError "tuple operands to & have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491615] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613238] "expr temp" "maybe param" "maybe type" "temp"
      (613241 'move' call_tmp[613238](59863 call a[59805] 0))
      unknown call_tmp[613243] "expr temp" "maybe param" "maybe type" "temp"
      (613246 'move' call_tmp[613243](59867 call b[59811] 0))
      unknown call_tmp[613248] "expr temp" "maybe param" "maybe type" "temp"
      (613251 'move' call_tmp[613248](59868 call & call_tmp[613238] call_tmp[613243]))
      (491619 'move' call_type_tmp[491615](59870 'typeof' call_tmp[613248]))
    }
    unknown result[59873] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613255] "expr temp" "maybe param" "maybe type" "temp"
    (613258 'move' call_tmp[613255](59857 call size _mt[243] a[59805]))
    unknown call_tmp[613260] "expr temp" "maybe param" "maybe type" "temp"
    (613263 'move' call_tmp[613260](59871 call * call_tmp[613255] call_type_tmp[491615]))
    (540865 'default init var' result[59873] call_tmp[613260])
    (59876 'end of statement')
    {
      unknown d[59904] "dead at end of block" "insert auto destroy"
      (540867 'init var' d[59904] 0)
      (474983 'end of statement')
      unknown tmp[59905] "maybe param" "temp"
      unknown call_tmp[613267] "expr temp" "maybe param" "maybe type" "temp"
      (613270 'move' call_tmp[613267](59879 call size _mt[243] a[59805]))
      unknown call_tmp[613272] "expr temp" "maybe param" "maybe type" "temp"
      (613275 'move' call_tmp[613272](59883 call - call_tmp[613267] 1))
      (59917 'move' tmp[59905](59915 call chpl_compute_low_param_loop_bound 0 call_tmp[613272]))
      unknown tmp[59906] "maybe param" "temp"
      unknown call_tmp[613279] "expr temp" "maybe param" "maybe type" "temp"
      (613282 'move' call_tmp[613279](59924 call size _mt[243] a[59805]))
      unknown call_tmp[613284] "expr temp" "maybe param" "maybe type" "temp"
      (613287 'move' call_tmp[613284](59922 call - call_tmp[613279] 1))
      (59930 'move' tmp[59906](59928 call chpl_compute_high_param_loop_bound 0 call_tmp[613284]))
      unknown tmp[59907] "maybe param" "temp"
      (59933 'move' tmp[59907] 1)
      ParamForLoop[59935]
      { d[59904] tmp[59905] tmp[59906] tmp[59907]
        unknown call_tmp[613289] "expr temp" "maybe param" "maybe type" "temp"
        (613292 'move' call_tmp[613289](59890 call result[59873] d[59904]))
        unknown call_tmp[613294] "expr temp" "maybe param" "maybe type" "temp"
        (613297 'move' call_tmp[613294](59894 call a[59805] d[59904]))
        unknown call_tmp[613299] "expr temp" "maybe param" "maybe type" "temp"
        (613302 'move' call_tmp[613299](59898 call b[59811] d[59904]))
        unknown call_tmp[613304] "expr temp" "maybe param" "maybe type" "temp"
        (613307 'move' call_tmp[613304](59899 call & call_tmp[613294] call_tmp[613299]))
        (59901 call = call_tmp[613289] call_tmp[613304])
        (474984 'end of statement' result[59873] d[59904] d[59904] d[59904])
      }
      label _unused_continueLabel[59909]
      label _breakLabel[59908]
    }
    (508490 'move' ret[508485](508489 'deref' result[59873]))
    gotoReturn _end_&[508483] _end_&[508483]
    (474989 'end of statement' result[59873])
    label _end_&[508483]
    (508487 return ret[508485])
  }
  where {
    (59818 call chpl_TwoHomogTuples a[59805] b[59811])
  }
  function &[59956](arg a[59953]:_tuple[56199](?), arg b[59959]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508496] "RVV" "temp"
    unknown call_tmp[613311] "expr temp" "maybe param" "maybe type" "temp"
    (613314 'move' call_tmp[613311](59963 call size _mt[243] a[59953]))
    unknown call_tmp[613318] "expr temp" "maybe param" "maybe type" "temp"
    (613321 'move' call_tmp[613318](59967 call size _mt[243] b[59959]))
    unknown call_tmp[613323] "expr temp" "maybe param" "maybe type" "temp"
    (613326 'move' call_tmp[613323](59970 call != call_tmp[613311] call_tmp[613318]))
    unknown call_tmp[613328] "expr temp" "maybe param" "maybe type" "temp"
    (613331 'move' call_tmp[613328](59977 call _cond_test call_tmp[613323]))
    if call_tmp[613328]
    {
      (59975 call compilerError "tuple operands to & have different sizes")
    }
    unknown call_tmp[613335] "expr temp" "maybe param" "maybe type" "temp"
    (613338 'move' call_tmp[613335](59984 call size _mt[243] a[59953]))
    unknown call_tmp[613340] "expr temp" "maybe param" "maybe type" "temp"
    (613343 'move' call_tmp[613340](59988 call == call_tmp[613335] 1))
    unknown call_tmp[613345] "expr temp" "maybe param" "maybe type" "temp"
    (613348 'move' call_tmp[613345](60030 call _cond_test call_tmp[613340]))
    if call_tmp[613345]
    {
      unknown call_tmp[613350] "expr temp" "maybe param" "maybe type" "temp"
      (613353 'move' call_tmp[613350](59993 call a[59953] 0))
      unknown call_tmp[613355] "expr temp" "maybe param" "maybe type" "temp"
      (613358 'move' call_tmp[613355](59997 call b[59959] 0))
      unknown call_tmp[613360] "expr temp" "maybe param" "maybe type" "temp"
      (613363 'move' call_tmp[613360](59998 call & call_tmp[613350] call_tmp[613355]))
      unknown call_tmp[613365] "expr temp" "maybe param" "maybe type" "temp"
      (613368 'move' call_tmp[613365](60000 call _build_tuple call_tmp[613360]))
      (508501 'move' ret[508496](508500 'deref' call_tmp[613365]))
      gotoReturn _end_&[508494] _end_&[508494]
    }
    {
      unknown call_tmp[613370] "expr temp" "maybe param" "maybe type" "temp"
      (613373 'move' call_tmp[613370](60007 call a[59953] 0))
      unknown call_tmp[613375] "expr temp" "maybe param" "maybe type" "temp"
      (613378 'move' call_tmp[613375](60011 call b[59959] 0))
      unknown call_tmp[613380] "expr temp" "maybe param" "maybe type" "temp"
      (613383 'move' call_tmp[613380](60012 call & call_tmp[613370] call_tmp[613375]))
      unknown call_tmp[613385] "expr temp" "maybe param" "maybe type" "temp"
      (613388 'move' call_tmp[613385](60017 call chpl__tupleRest a[59953]))
      unknown call_tmp[613390] "expr temp" "maybe param" "maybe type" "temp"
      (613393 'move' call_tmp[613390](60021 call chpl__tupleRest b[59959]))
      unknown call_tmp[613395] "expr temp" "maybe param" "maybe type" "temp"
      (613398 'move' call_tmp[613395](60022 call & call_tmp[613385] call_tmp[613390]))
      unknown call_tmp[613400] "expr temp" "maybe param" "maybe type" "temp"
      (613403 'move' call_tmp[613400](60026 call _build_tuple call_tmp[613380](60024 'expand_tuple' call_tmp[613395])))
      (508506 'move' ret[508496](508505 'deref' call_tmp[613400]))
      gotoReturn _end_&[508494] _end_&[508494]
    }
    label _end_&[508494]
    (508498 return ret[508496])
  }
  function |[60044](arg a[60041]:_tuple[56199](?), arg b[60047]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508512] "RVV" "temp"
    unknown call_tmp[613407] "expr temp" "maybe param" "maybe type" "temp"
    (613410 'move' call_tmp[613407](60056 call size _mt[243] a[60041]))
    unknown call_tmp[613414] "expr temp" "maybe param" "maybe type" "temp"
    (613417 'move' call_tmp[613414](60060 call size _mt[243] b[60047]))
    unknown call_tmp[613419] "expr temp" "maybe param" "maybe type" "temp"
    (613422 'move' call_tmp[613419](60063 call != call_tmp[613407] call_tmp[613414]))
    unknown call_tmp[613424] "expr temp" "maybe param" "maybe type" "temp"
    (613427 'move' call_tmp[613424](60086 call _cond_test call_tmp[613419]))
    if call_tmp[613424]
    {
      (60084 call compilerError "tuple operands to | have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491621] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613429] "expr temp" "maybe param" "maybe type" "temp"
      (613432 'move' call_tmp[613429](60099 call a[60041] 0))
      unknown call_tmp[613434] "expr temp" "maybe param" "maybe type" "temp"
      (613437 'move' call_tmp[613434](60103 call b[60047] 0))
      unknown call_tmp[613439] "expr temp" "maybe param" "maybe type" "temp"
      (613442 'move' call_tmp[613439](60104 call | call_tmp[613429] call_tmp[613434]))
      (491625 'move' call_type_tmp[491621](60106 'typeof' call_tmp[613439]))
    }
    unknown result[60109] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613446] "expr temp" "maybe param" "maybe type" "temp"
    (613449 'move' call_tmp[613446](60093 call size _mt[243] a[60041]))
    unknown call_tmp[613451] "expr temp" "maybe param" "maybe type" "temp"
    (613454 'move' call_tmp[613451](60107 call * call_tmp[613446] call_type_tmp[491621]))
    (540869 'default init var' result[60109] call_tmp[613451])
    (60112 'end of statement')
    {
      unknown d[60140] "dead at end of block" "insert auto destroy"
      (540871 'init var' d[60140] 0)
      (474995 'end of statement')
      unknown tmp[60141] "maybe param" "temp"
      unknown call_tmp[613458] "expr temp" "maybe param" "maybe type" "temp"
      (613461 'move' call_tmp[613458](60115 call size _mt[243] a[60041]))
      unknown call_tmp[613463] "expr temp" "maybe param" "maybe type" "temp"
      (613466 'move' call_tmp[613463](60119 call - call_tmp[613458] 1))
      (60153 'move' tmp[60141](60151 call chpl_compute_low_param_loop_bound 0 call_tmp[613463]))
      unknown tmp[60142] "maybe param" "temp"
      unknown call_tmp[613470] "expr temp" "maybe param" "maybe type" "temp"
      (613473 'move' call_tmp[613470](60160 call size _mt[243] a[60041]))
      unknown call_tmp[613475] "expr temp" "maybe param" "maybe type" "temp"
      (613478 'move' call_tmp[613475](60158 call - call_tmp[613470] 1))
      (60166 'move' tmp[60142](60164 call chpl_compute_high_param_loop_bound 0 call_tmp[613475]))
      unknown tmp[60143] "maybe param" "temp"
      (60169 'move' tmp[60143] 1)
      ParamForLoop[60171]
      { d[60140] tmp[60141] tmp[60142] tmp[60143]
        unknown call_tmp[613480] "expr temp" "maybe param" "maybe type" "temp"
        (613483 'move' call_tmp[613480](60126 call result[60109] d[60140]))
        unknown call_tmp[613485] "expr temp" "maybe param" "maybe type" "temp"
        (613488 'move' call_tmp[613485](60130 call a[60041] d[60140]))
        unknown call_tmp[613490] "expr temp" "maybe param" "maybe type" "temp"
        (613493 'move' call_tmp[613490](60134 call b[60047] d[60140]))
        unknown call_tmp[613495] "expr temp" "maybe param" "maybe type" "temp"
        (613498 'move' call_tmp[613495](60135 call | call_tmp[613485] call_tmp[613490]))
        (60137 call = call_tmp[613480] call_tmp[613495])
        (474996 'end of statement' result[60109] d[60140] d[60140] d[60140])
      }
      label _unused_continueLabel[60145]
      label _breakLabel[60144]
    }
    (508517 'move' ret[508512](508516 'deref' result[60109]))
    gotoReturn _end_|[508510] _end_|[508510]
    (475001 'end of statement' result[60109])
    label _end_|[508510]
    (508514 return ret[508512])
  }
  where {
    (60054 call chpl_TwoHomogTuples a[60041] b[60047])
  }
  function |[60192](arg a[60189]:_tuple[56199](?), arg b[60195]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508523] "RVV" "temp"
    unknown call_tmp[613502] "expr temp" "maybe param" "maybe type" "temp"
    (613505 'move' call_tmp[613502](60199 call size _mt[243] a[60189]))
    unknown call_tmp[613509] "expr temp" "maybe param" "maybe type" "temp"
    (613512 'move' call_tmp[613509](60203 call size _mt[243] b[60195]))
    unknown call_tmp[613514] "expr temp" "maybe param" "maybe type" "temp"
    (613517 'move' call_tmp[613514](60206 call != call_tmp[613502] call_tmp[613509]))
    unknown call_tmp[613519] "expr temp" "maybe param" "maybe type" "temp"
    (613522 'move' call_tmp[613519](60213 call _cond_test call_tmp[613514]))
    if call_tmp[613519]
    {
      (60211 call compilerError "tuple operands to | have different sizes")
    }
    unknown call_tmp[613526] "expr temp" "maybe param" "maybe type" "temp"
    (613529 'move' call_tmp[613526](60220 call size _mt[243] a[60189]))
    unknown call_tmp[613531] "expr temp" "maybe param" "maybe type" "temp"
    (613534 'move' call_tmp[613531](60224 call == call_tmp[613526] 1))
    unknown call_tmp[613536] "expr temp" "maybe param" "maybe type" "temp"
    (613539 'move' call_tmp[613536](60266 call _cond_test call_tmp[613531]))
    if call_tmp[613536]
    {
      unknown call_tmp[613541] "expr temp" "maybe param" "maybe type" "temp"
      (613544 'move' call_tmp[613541](60229 call a[60189] 0))
      unknown call_tmp[613546] "expr temp" "maybe param" "maybe type" "temp"
      (613549 'move' call_tmp[613546](60233 call b[60195] 0))
      unknown call_tmp[613551] "expr temp" "maybe param" "maybe type" "temp"
      (613554 'move' call_tmp[613551](60234 call | call_tmp[613541] call_tmp[613546]))
      unknown call_tmp[613556] "expr temp" "maybe param" "maybe type" "temp"
      (613559 'move' call_tmp[613556](60236 call _build_tuple call_tmp[613551]))
      (508528 'move' ret[508523](508527 'deref' call_tmp[613556]))
      gotoReturn _end_|[508521] _end_|[508521]
    }
    {
      unknown call_tmp[613561] "expr temp" "maybe param" "maybe type" "temp"
      (613564 'move' call_tmp[613561](60243 call a[60189] 0))
      unknown call_tmp[613566] "expr temp" "maybe param" "maybe type" "temp"
      (613569 'move' call_tmp[613566](60247 call b[60195] 0))
      unknown call_tmp[613571] "expr temp" "maybe param" "maybe type" "temp"
      (613574 'move' call_tmp[613571](60248 call | call_tmp[613561] call_tmp[613566]))
      unknown call_tmp[613576] "expr temp" "maybe param" "maybe type" "temp"
      (613579 'move' call_tmp[613576](60253 call chpl__tupleRest a[60189]))
      unknown call_tmp[613581] "expr temp" "maybe param" "maybe type" "temp"
      (613584 'move' call_tmp[613581](60257 call chpl__tupleRest b[60195]))
      unknown call_tmp[613586] "expr temp" "maybe param" "maybe type" "temp"
      (613589 'move' call_tmp[613586](60258 call | call_tmp[613576] call_tmp[613581]))
      unknown call_tmp[613591] "expr temp" "maybe param" "maybe type" "temp"
      (613594 'move' call_tmp[613591](60262 call _build_tuple call_tmp[613571](60260 'expand_tuple' call_tmp[613586])))
      (508533 'move' ret[508523](508532 'deref' call_tmp[613591]))
      gotoReturn _end_|[508521] _end_|[508521]
    }
    label _end_|[508521]
    (508525 return ret[508523])
  }
  function ^[60280](arg a[60277]:_tuple[56199](?), arg b[60283]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508539] "RVV" "temp"
    unknown call_tmp[613598] "expr temp" "maybe param" "maybe type" "temp"
    (613601 'move' call_tmp[613598](60292 call size _mt[243] a[60277]))
    unknown call_tmp[613605] "expr temp" "maybe param" "maybe type" "temp"
    (613608 'move' call_tmp[613605](60296 call size _mt[243] b[60283]))
    unknown call_tmp[613610] "expr temp" "maybe param" "maybe type" "temp"
    (613613 'move' call_tmp[613610](60299 call != call_tmp[613598] call_tmp[613605]))
    unknown call_tmp[613615] "expr temp" "maybe param" "maybe type" "temp"
    (613618 'move' call_tmp[613615](60322 call _cond_test call_tmp[613610]))
    if call_tmp[613615]
    {
      (60320 call compilerError "tuple operands to ^ have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491627] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613620] "expr temp" "maybe param" "maybe type" "temp"
      (613623 'move' call_tmp[613620](60335 call a[60277] 0))
      unknown call_tmp[613625] "expr temp" "maybe param" "maybe type" "temp"
      (613628 'move' call_tmp[613625](60339 call b[60283] 0))
      unknown call_tmp[613630] "expr temp" "maybe param" "maybe type" "temp"
      (613633 'move' call_tmp[613630](60340 call ^ call_tmp[613620] call_tmp[613625]))
      (491631 'move' call_type_tmp[491627](60342 'typeof' call_tmp[613630]))
    }
    unknown result[60345] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613637] "expr temp" "maybe param" "maybe type" "temp"
    (613640 'move' call_tmp[613637](60329 call size _mt[243] a[60277]))
    unknown call_tmp[613642] "expr temp" "maybe param" "maybe type" "temp"
    (613645 'move' call_tmp[613642](60343 call * call_tmp[613637] call_type_tmp[491627]))
    (540873 'default init var' result[60345] call_tmp[613642])
    (60348 'end of statement')
    {
      unknown d[60376] "dead at end of block" "insert auto destroy"
      (540875 'init var' d[60376] 0)
      (475007 'end of statement')
      unknown tmp[60377] "maybe param" "temp"
      unknown call_tmp[613649] "expr temp" "maybe param" "maybe type" "temp"
      (613652 'move' call_tmp[613649](60351 call size _mt[243] a[60277]))
      unknown call_tmp[613654] "expr temp" "maybe param" "maybe type" "temp"
      (613657 'move' call_tmp[613654](60355 call - call_tmp[613649] 1))
      (60389 'move' tmp[60377](60387 call chpl_compute_low_param_loop_bound 0 call_tmp[613654]))
      unknown tmp[60378] "maybe param" "temp"
      unknown call_tmp[613661] "expr temp" "maybe param" "maybe type" "temp"
      (613664 'move' call_tmp[613661](60396 call size _mt[243] a[60277]))
      unknown call_tmp[613666] "expr temp" "maybe param" "maybe type" "temp"
      (613669 'move' call_tmp[613666](60394 call - call_tmp[613661] 1))
      (60402 'move' tmp[60378](60400 call chpl_compute_high_param_loop_bound 0 call_tmp[613666]))
      unknown tmp[60379] "maybe param" "temp"
      (60405 'move' tmp[60379] 1)
      ParamForLoop[60407]
      { d[60376] tmp[60377] tmp[60378] tmp[60379]
        unknown call_tmp[613671] "expr temp" "maybe param" "maybe type" "temp"
        (613674 'move' call_tmp[613671](60362 call result[60345] d[60376]))
        unknown call_tmp[613676] "expr temp" "maybe param" "maybe type" "temp"
        (613679 'move' call_tmp[613676](60366 call a[60277] d[60376]))
        unknown call_tmp[613681] "expr temp" "maybe param" "maybe type" "temp"
        (613684 'move' call_tmp[613681](60370 call b[60283] d[60376]))
        unknown call_tmp[613686] "expr temp" "maybe param" "maybe type" "temp"
        (613689 'move' call_tmp[613686](60371 call ^ call_tmp[613676] call_tmp[613681]))
        (60373 call = call_tmp[613671] call_tmp[613686])
        (475008 'end of statement' result[60345] d[60376] d[60376] d[60376])
      }
      label _unused_continueLabel[60381]
      label _breakLabel[60380]
    }
    (508544 'move' ret[508539](508543 'deref' result[60345]))
    gotoReturn _end_^[508537] _end_^[508537]
    (475013 'end of statement' result[60345])
    label _end_^[508537]
    (508541 return ret[508539])
  }
  where {
    (60290 call chpl_TwoHomogTuples a[60277] b[60283])
  }
  function ^[60428](arg a[60425]:_tuple[56199](?), arg b[60431]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508550] "RVV" "temp"
    unknown call_tmp[613693] "expr temp" "maybe param" "maybe type" "temp"
    (613696 'move' call_tmp[613693](60435 call size _mt[243] a[60425]))
    unknown call_tmp[613700] "expr temp" "maybe param" "maybe type" "temp"
    (613703 'move' call_tmp[613700](60439 call size _mt[243] b[60431]))
    unknown call_tmp[613705] "expr temp" "maybe param" "maybe type" "temp"
    (613708 'move' call_tmp[613705](60442 call != call_tmp[613693] call_tmp[613700]))
    unknown call_tmp[613710] "expr temp" "maybe param" "maybe type" "temp"
    (613713 'move' call_tmp[613710](60449 call _cond_test call_tmp[613705]))
    if call_tmp[613710]
    {
      (60447 call compilerError "tuple operands to ^ have different sizes")
    }
    unknown call_tmp[613717] "expr temp" "maybe param" "maybe type" "temp"
    (613720 'move' call_tmp[613717](60456 call size _mt[243] a[60425]))
    unknown call_tmp[613722] "expr temp" "maybe param" "maybe type" "temp"
    (613725 'move' call_tmp[613722](60460 call == call_tmp[613717] 1))
    unknown call_tmp[613727] "expr temp" "maybe param" "maybe type" "temp"
    (613730 'move' call_tmp[613727](60502 call _cond_test call_tmp[613722]))
    if call_tmp[613727]
    {
      unknown call_tmp[613732] "expr temp" "maybe param" "maybe type" "temp"
      (613735 'move' call_tmp[613732](60465 call a[60425] 0))
      unknown call_tmp[613737] "expr temp" "maybe param" "maybe type" "temp"
      (613740 'move' call_tmp[613737](60469 call b[60431] 0))
      unknown call_tmp[613742] "expr temp" "maybe param" "maybe type" "temp"
      (613745 'move' call_tmp[613742](60470 call ^ call_tmp[613732] call_tmp[613737]))
      unknown call_tmp[613747] "expr temp" "maybe param" "maybe type" "temp"
      (613750 'move' call_tmp[613747](60472 call _build_tuple call_tmp[613742]))
      (508555 'move' ret[508550](508554 'deref' call_tmp[613747]))
      gotoReturn _end_^[508548] _end_^[508548]
    }
    {
      unknown call_tmp[613752] "expr temp" "maybe param" "maybe type" "temp"
      (613755 'move' call_tmp[613752](60479 call a[60425] 0))
      unknown call_tmp[613757] "expr temp" "maybe param" "maybe type" "temp"
      (613760 'move' call_tmp[613757](60483 call b[60431] 0))
      unknown call_tmp[613762] "expr temp" "maybe param" "maybe type" "temp"
      (613765 'move' call_tmp[613762](60484 call ^ call_tmp[613752] call_tmp[613757]))
      unknown call_tmp[613767] "expr temp" "maybe param" "maybe type" "temp"
      (613770 'move' call_tmp[613767](60489 call chpl__tupleRest a[60425]))
      unknown call_tmp[613772] "expr temp" "maybe param" "maybe type" "temp"
      (613775 'move' call_tmp[613772](60493 call chpl__tupleRest b[60431]))
      unknown call_tmp[613777] "expr temp" "maybe param" "maybe type" "temp"
      (613780 'move' call_tmp[613777](60494 call ^ call_tmp[613767] call_tmp[613772]))
      unknown call_tmp[613782] "expr temp" "maybe param" "maybe type" "temp"
      (613785 'move' call_tmp[613782](60498 call _build_tuple call_tmp[613762](60496 'expand_tuple' call_tmp[613777])))
      (508560 'move' ret[508550](508559 'deref' call_tmp[613782]))
      gotoReturn _end_^[508548] _end_^[508548]
    }
    label _end_^[508548]
    (508552 return ret[508550])
  }
  function <<[60516](arg a[60513]:_tuple[56199](?), arg b[60519]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508566] "RVV" "temp"
    unknown call_tmp[613789] "expr temp" "maybe param" "maybe type" "temp"
    (613792 'move' call_tmp[613789](60528 call size _mt[243] a[60513]))
    unknown call_tmp[613796] "expr temp" "maybe param" "maybe type" "temp"
    (613799 'move' call_tmp[613796](60532 call size _mt[243] b[60519]))
    unknown call_tmp[613801] "expr temp" "maybe param" "maybe type" "temp"
    (613804 'move' call_tmp[613801](60535 call != call_tmp[613789] call_tmp[613796]))
    unknown call_tmp[613806] "expr temp" "maybe param" "maybe type" "temp"
    (613809 'move' call_tmp[613806](60558 call _cond_test call_tmp[613801]))
    if call_tmp[613806]
    {
      (60556 call compilerError "tuple operands to << have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491633] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[613811] "expr temp" "maybe param" "maybe type" "temp"
      (613814 'move' call_tmp[613811](60571 call a[60513] 0))
      unknown call_tmp[613816] "expr temp" "maybe param" "maybe type" "temp"
      (613819 'move' call_tmp[613816](60575 call b[60519] 0))
      unknown call_tmp[613821] "expr temp" "maybe param" "maybe type" "temp"
      (613824 'move' call_tmp[613821](60576 call << call_tmp[613811] call_tmp[613816]))
      (491637 'move' call_type_tmp[491633](60578 'typeof' call_tmp[613821]))
    }
    unknown result[60581] "dead at end of block" "insert auto destroy"
    unknown call_tmp[613828] "expr temp" "maybe param" "maybe type" "temp"
    (613831 'move' call_tmp[613828](60565 call size _mt[243] a[60513]))
    unknown call_tmp[613833] "expr temp" "maybe param" "maybe type" "temp"
    (613836 'move' call_tmp[613833](60579 call * call_tmp[613828] call_type_tmp[491633]))
    (540877 'default init var' result[60581] call_tmp[613833])
    (60584 'end of statement')
    {
      unknown d[60612] "dead at end of block" "insert auto destroy"
      (540879 'init var' d[60612] 0)
      (475019 'end of statement')
      unknown tmp[60613] "maybe param" "temp"
      unknown call_tmp[613840] "expr temp" "maybe param" "maybe type" "temp"
      (613843 'move' call_tmp[613840](60587 call size _mt[243] a[60513]))
      unknown call_tmp[613845] "expr temp" "maybe param" "maybe type" "temp"
      (613848 'move' call_tmp[613845](60591 call - call_tmp[613840] 1))
      (60625 'move' tmp[60613](60623 call chpl_compute_low_param_loop_bound 0 call_tmp[613845]))
      unknown tmp[60614] "maybe param" "temp"
      unknown call_tmp[613852] "expr temp" "maybe param" "maybe type" "temp"
      (613855 'move' call_tmp[613852](60632 call size _mt[243] a[60513]))
      unknown call_tmp[613857] "expr temp" "maybe param" "maybe type" "temp"
      (613860 'move' call_tmp[613857](60630 call - call_tmp[613852] 1))
      (60638 'move' tmp[60614](60636 call chpl_compute_high_param_loop_bound 0 call_tmp[613857]))
      unknown tmp[60615] "maybe param" "temp"
      (60641 'move' tmp[60615] 1)
      ParamForLoop[60643]
      { d[60612] tmp[60613] tmp[60614] tmp[60615]
        unknown call_tmp[613862] "expr temp" "maybe param" "maybe type" "temp"
        (613865 'move' call_tmp[613862](60598 call result[60581] d[60612]))
        unknown call_tmp[613867] "expr temp" "maybe param" "maybe type" "temp"
        (613870 'move' call_tmp[613867](60602 call a[60513] d[60612]))
        unknown call_tmp[613872] "expr temp" "maybe param" "maybe type" "temp"
        (613875 'move' call_tmp[613872](60606 call b[60519] d[60612]))
        unknown call_tmp[613877] "expr temp" "maybe param" "maybe type" "temp"
        (613880 'move' call_tmp[613877](60607 call << call_tmp[613867] call_tmp[613872]))
        (60609 call = call_tmp[613862] call_tmp[613877])
        (475020 'end of statement' result[60581] d[60612] d[60612] d[60612])
      }
      label _unused_continueLabel[60617]
      label _breakLabel[60616]
    }
    (508571 'move' ret[508566](508570 'deref' result[60581]))
    gotoReturn _end_<<[508564] _end_<<[508564]
    (475025 'end of statement' result[60581])
    label _end_<<[508564]
    (508568 return ret[508566])
  }
  where {
    (60526 call chpl_TwoHomogTuples a[60513] b[60519])
  }
  function <<[60664](arg a[60661]:_tuple[56199](?), arg b[60667]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508577] "RVV" "temp"
    unknown call_tmp[613884] "expr temp" "maybe param" "maybe type" "temp"
    (613887 'move' call_tmp[613884](60671 call size _mt[243] a[60661]))
    unknown call_tmp[613891] "expr temp" "maybe param" "maybe type" "temp"
    (613894 'move' call_tmp[613891](60675 call size _mt[243] b[60667]))
    unknown call_tmp[613896] "expr temp" "maybe param" "maybe type" "temp"
    (613899 'move' call_tmp[613896](60678 call != call_tmp[613884] call_tmp[613891]))
    unknown call_tmp[613901] "expr temp" "maybe param" "maybe type" "temp"
    (613904 'move' call_tmp[613901](60685 call _cond_test call_tmp[613896]))
    if call_tmp[613901]
    {
      (60683 call compilerError "tuple operands to << have different sizes")
    }
    unknown call_tmp[613908] "expr temp" "maybe param" "maybe type" "temp"
    (613911 'move' call_tmp[613908](60692 call size _mt[243] a[60661]))
    unknown call_tmp[613913] "expr temp" "maybe param" "maybe type" "temp"
    (613916 'move' call_tmp[613913](60696 call == call_tmp[613908] 1))
    unknown call_tmp[613918] "expr temp" "maybe param" "maybe type" "temp"
    (613921 'move' call_tmp[613918](60738 call _cond_test call_tmp[613913]))
    if call_tmp[613918]
    {
      unknown call_tmp[613923] "expr temp" "maybe param" "maybe type" "temp"
      (613926 'move' call_tmp[613923](60701 call a[60661] 0))
      unknown call_tmp[613928] "expr temp" "maybe param" "maybe type" "temp"
      (613931 'move' call_tmp[613928](60705 call b[60667] 0))
      unknown call_tmp[613933] "expr temp" "maybe param" "maybe type" "temp"
      (613936 'move' call_tmp[613933](60706 call << call_tmp[613923] call_tmp[613928]))
      unknown call_tmp[613938] "expr temp" "maybe param" "maybe type" "temp"
      (613941 'move' call_tmp[613938](60708 call _build_tuple call_tmp[613933]))
      (508582 'move' ret[508577](508581 'deref' call_tmp[613938]))
      gotoReturn _end_<<[508575] _end_<<[508575]
    }
    {
      unknown call_tmp[613943] "expr temp" "maybe param" "maybe type" "temp"
      (613946 'move' call_tmp[613943](60715 call a[60661] 0))
      unknown call_tmp[613948] "expr temp" "maybe param" "maybe type" "temp"
      (613951 'move' call_tmp[613948](60719 call b[60667] 0))
      unknown call_tmp[613953] "expr temp" "maybe param" "maybe type" "temp"
      (613956 'move' call_tmp[613953](60720 call << call_tmp[613943] call_tmp[613948]))
      unknown call_tmp[613958] "expr temp" "maybe param" "maybe type" "temp"
      (613961 'move' call_tmp[613958](60725 call chpl__tupleRest a[60661]))
      unknown call_tmp[613963] "expr temp" "maybe param" "maybe type" "temp"
      (613966 'move' call_tmp[613963](60729 call chpl__tupleRest b[60667]))
      unknown call_tmp[613968] "expr temp" "maybe param" "maybe type" "temp"
      (613971 'move' call_tmp[613968](60730 call << call_tmp[613958] call_tmp[613963]))
      unknown call_tmp[613973] "expr temp" "maybe param" "maybe type" "temp"
      (613976 'move' call_tmp[613973](60734 call _build_tuple call_tmp[613953](60732 'expand_tuple' call_tmp[613968])))
      (508587 'move' ret[508577](508586 'deref' call_tmp[613973]))
      gotoReturn _end_<<[508575] _end_<<[508575]
    }
    label _end_<<[508575]
    (508579 return ret[508577])
  }
  function >>[60752](arg a[60749]:_tuple[56199](?), arg b[60755]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508593] "RVV" "temp"
    unknown call_tmp[613980] "expr temp" "maybe param" "maybe type" "temp"
    (613983 'move' call_tmp[613980](60764 call size _mt[243] a[60749]))
    unknown call_tmp[613987] "expr temp" "maybe param" "maybe type" "temp"
    (613990 'move' call_tmp[613987](60768 call size _mt[243] b[60755]))
    unknown call_tmp[613992] "expr temp" "maybe param" "maybe type" "temp"
    (613995 'move' call_tmp[613992](60771 call != call_tmp[613980] call_tmp[613987]))
    unknown call_tmp[613997] "expr temp" "maybe param" "maybe type" "temp"
    (614000 'move' call_tmp[613997](60794 call _cond_test call_tmp[613992]))
    if call_tmp[613997]
    {
      (60792 call compilerError "tuple operands to >> have different sizes")
    }
    { scopeless type
      unknown call_type_tmp[491639] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614002] "expr temp" "maybe param" "maybe type" "temp"
      (614005 'move' call_tmp[614002](60807 call a[60749] 0))
      unknown call_tmp[614007] "expr temp" "maybe param" "maybe type" "temp"
      (614010 'move' call_tmp[614007](60811 call b[60755] 0))
      unknown call_tmp[614012] "expr temp" "maybe param" "maybe type" "temp"
      (614015 'move' call_tmp[614012](60812 call >> call_tmp[614002] call_tmp[614007]))
      (491643 'move' call_type_tmp[491639](60814 'typeof' call_tmp[614012]))
    }
    unknown result[60817] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614019] "expr temp" "maybe param" "maybe type" "temp"
    (614022 'move' call_tmp[614019](60801 call size _mt[243] a[60749]))
    unknown call_tmp[614024] "expr temp" "maybe param" "maybe type" "temp"
    (614027 'move' call_tmp[614024](60815 call * call_tmp[614019] call_type_tmp[491639]))
    (540881 'default init var' result[60817] call_tmp[614024])
    (60820 'end of statement')
    {
      unknown d[60848] "dead at end of block" "insert auto destroy"
      (540883 'init var' d[60848] 0)
      (475031 'end of statement')
      unknown tmp[60849] "maybe param" "temp"
      unknown call_tmp[614031] "expr temp" "maybe param" "maybe type" "temp"
      (614034 'move' call_tmp[614031](60823 call size _mt[243] a[60749]))
      unknown call_tmp[614036] "expr temp" "maybe param" "maybe type" "temp"
      (614039 'move' call_tmp[614036](60827 call - call_tmp[614031] 1))
      (60861 'move' tmp[60849](60859 call chpl_compute_low_param_loop_bound 0 call_tmp[614036]))
      unknown tmp[60850] "maybe param" "temp"
      unknown call_tmp[614043] "expr temp" "maybe param" "maybe type" "temp"
      (614046 'move' call_tmp[614043](60868 call size _mt[243] a[60749]))
      unknown call_tmp[614048] "expr temp" "maybe param" "maybe type" "temp"
      (614051 'move' call_tmp[614048](60866 call - call_tmp[614043] 1))
      (60874 'move' tmp[60850](60872 call chpl_compute_high_param_loop_bound 0 call_tmp[614048]))
      unknown tmp[60851] "maybe param" "temp"
      (60877 'move' tmp[60851] 1)
      ParamForLoop[60879]
      { d[60848] tmp[60849] tmp[60850] tmp[60851]
        unknown call_tmp[614053] "expr temp" "maybe param" "maybe type" "temp"
        (614056 'move' call_tmp[614053](60834 call result[60817] d[60848]))
        unknown call_tmp[614058] "expr temp" "maybe param" "maybe type" "temp"
        (614061 'move' call_tmp[614058](60838 call a[60749] d[60848]))
        unknown call_tmp[614063] "expr temp" "maybe param" "maybe type" "temp"
        (614066 'move' call_tmp[614063](60842 call b[60755] d[60848]))
        unknown call_tmp[614068] "expr temp" "maybe param" "maybe type" "temp"
        (614071 'move' call_tmp[614068](60843 call >> call_tmp[614058] call_tmp[614063]))
        (60845 call = call_tmp[614053] call_tmp[614068])
        (475032 'end of statement' result[60817] d[60848] d[60848] d[60848])
      }
      label _unused_continueLabel[60853]
      label _breakLabel[60852]
    }
    (508598 'move' ret[508593](508597 'deref' result[60817]))
    gotoReturn _end_>>[508591] _end_>>[508591]
    (475037 'end of statement' result[60817])
    label _end_>>[508591]
    (508595 return ret[508593])
  }
  where {
    (60762 call chpl_TwoHomogTuples a[60749] b[60755])
  }
  function >>[60900](arg a[60897]:_tuple[56199](?), arg b[60903]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508604] "RVV" "temp"
    unknown call_tmp[614075] "expr temp" "maybe param" "maybe type" "temp"
    (614078 'move' call_tmp[614075](60907 call size _mt[243] a[60897]))
    unknown call_tmp[614082] "expr temp" "maybe param" "maybe type" "temp"
    (614085 'move' call_tmp[614082](60911 call size _mt[243] b[60903]))
    unknown call_tmp[614087] "expr temp" "maybe param" "maybe type" "temp"
    (614090 'move' call_tmp[614087](60914 call != call_tmp[614075] call_tmp[614082]))
    unknown call_tmp[614092] "expr temp" "maybe param" "maybe type" "temp"
    (614095 'move' call_tmp[614092](60921 call _cond_test call_tmp[614087]))
    if call_tmp[614092]
    {
      (60919 call compilerError "tuple operands to >> have different sizes")
    }
    unknown call_tmp[614099] "expr temp" "maybe param" "maybe type" "temp"
    (614102 'move' call_tmp[614099](60928 call size _mt[243] a[60897]))
    unknown call_tmp[614104] "expr temp" "maybe param" "maybe type" "temp"
    (614107 'move' call_tmp[614104](60932 call == call_tmp[614099] 1))
    unknown call_tmp[614109] "expr temp" "maybe param" "maybe type" "temp"
    (614112 'move' call_tmp[614109](60974 call _cond_test call_tmp[614104]))
    if call_tmp[614109]
    {
      unknown call_tmp[614114] "expr temp" "maybe param" "maybe type" "temp"
      (614117 'move' call_tmp[614114](60937 call a[60897] 0))
      unknown call_tmp[614119] "expr temp" "maybe param" "maybe type" "temp"
      (614122 'move' call_tmp[614119](60941 call b[60903] 0))
      unknown call_tmp[614124] "expr temp" "maybe param" "maybe type" "temp"
      (614127 'move' call_tmp[614124](60942 call >> call_tmp[614114] call_tmp[614119]))
      unknown call_tmp[614129] "expr temp" "maybe param" "maybe type" "temp"
      (614132 'move' call_tmp[614129](60944 call _build_tuple call_tmp[614124]))
      (508609 'move' ret[508604](508608 'deref' call_tmp[614129]))
      gotoReturn _end_>>[508602] _end_>>[508602]
    }
    {
      unknown call_tmp[614134] "expr temp" "maybe param" "maybe type" "temp"
      (614137 'move' call_tmp[614134](60951 call a[60897] 0))
      unknown call_tmp[614139] "expr temp" "maybe param" "maybe type" "temp"
      (614142 'move' call_tmp[614139](60955 call b[60903] 0))
      unknown call_tmp[614144] "expr temp" "maybe param" "maybe type" "temp"
      (614147 'move' call_tmp[614144](60956 call >> call_tmp[614134] call_tmp[614139]))
      unknown call_tmp[614149] "expr temp" "maybe param" "maybe type" "temp"
      (614152 'move' call_tmp[614149](60961 call chpl__tupleRest a[60897]))
      unknown call_tmp[614154] "expr temp" "maybe param" "maybe type" "temp"
      (614157 'move' call_tmp[614154](60965 call chpl__tupleRest b[60903]))
      unknown call_tmp[614159] "expr temp" "maybe param" "maybe type" "temp"
      (614162 'move' call_tmp[614159](60966 call >> call_tmp[614149] call_tmp[614154]))
      unknown call_tmp[614164] "expr temp" "maybe param" "maybe type" "temp"
      (614167 'move' call_tmp[614164](60970 call _build_tuple call_tmp[614144](60968 'expand_tuple' call_tmp[614159])))
      (508614 'move' ret[508604](508613 'deref' call_tmp[614164]))
      gotoReturn _end_>>[508602] _end_>>[508602]
    }
    label _end_>>[508602]
    (508606 return ret[508604])
  }
  function >[60988](arg a[60985]:_tuple[56199](?), arg b[60991]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508620] "RVV" "temp"
    unknown call_tmp[614171] "expr temp" "maybe param" "maybe type" "temp"
    (614174 'move' call_tmp[614171](60995 call size _mt[243] a[60985]))
    unknown call_tmp[614178] "expr temp" "maybe param" "maybe type" "temp"
    (614181 'move' call_tmp[614178](60999 call size _mt[243] b[60991]))
    unknown call_tmp[614183] "expr temp" "maybe param" "maybe type" "temp"
    (614186 'move' call_tmp[614183](61002 call != call_tmp[614171] call_tmp[614178]))
    unknown call_tmp[614188] "expr temp" "maybe param" "maybe type" "temp"
    (614191 'move' call_tmp[614188](61025 call _cond_test call_tmp[614183]))
    if call_tmp[614188]
    {
      (61023 call compilerError "tuple operands to > have different sizes")
    }
    {
      unknown i[61078] "dead at end of block" "insert auto destroy"
      (540885 'init var' i[61078] 0)
      (475043 'end of statement')
      unknown tmp[61079] "maybe param" "temp"
      unknown call_tmp[614195] "expr temp" "maybe param" "maybe type" "temp"
      (614198 'move' call_tmp[614195](61033 call size _mt[243] a[60985]))
      unknown call_tmp[614200] "expr temp" "maybe param" "maybe type" "temp"
      (614203 'move' call_tmp[614200](61037 call - call_tmp[614195] 1))
      (61091 'move' tmp[61079](61089 call chpl_compute_low_param_loop_bound 0 call_tmp[614200]))
      unknown tmp[61080] "maybe param" "temp"
      unknown call_tmp[614207] "expr temp" "maybe param" "maybe type" "temp"
      (614210 'move' call_tmp[614207](61098 call size _mt[243] a[60985]))
      unknown call_tmp[614212] "expr temp" "maybe param" "maybe type" "temp"
      (614215 'move' call_tmp[614212](61096 call - call_tmp[614207] 1))
      (61104 'move' tmp[61080](61102 call chpl_compute_high_param_loop_bound 0 call_tmp[614212]))
      unknown tmp[61081] "maybe param" "temp"
      (61107 'move' tmp[61081] 1)
      ParamForLoop[61109]
      { i[61078] tmp[61079] tmp[61080] tmp[61081]
        unknown call_tmp[614217] "expr temp" "maybe param" "maybe type" "temp"
        (614220 'move' call_tmp[614217](61044 call a[60985] i[61078]))
        unknown call_tmp[614222] "expr temp" "maybe param" "maybe type" "temp"
        (614225 'move' call_tmp[614222](61048 call b[60991] i[61078]))
        unknown call_tmp[614227] "expr temp" "maybe param" "maybe type" "temp"
        (614230 'move' call_tmp[614227](61049 call > call_tmp[614217] call_tmp[614222]))
        unknown call_tmp[614232] "expr temp" "maybe param" "maybe type" "temp"
        (614235 'move' call_tmp[614232](61072 call _cond_test call_tmp[614227]))
        if call_tmp[614232]
        {
          (508625 'move' ret[508620](508624 'deref' 1))
          gotoReturn _end_>[508618] _end_>[508618]
        }
        {
          unknown call_tmp[614237] "expr temp" "maybe param" "maybe type" "temp"
          (614240 'move' call_tmp[614237](61057 call a[60985] i[61078]))
          unknown call_tmp[614242] "expr temp" "maybe param" "maybe type" "temp"
          (614245 'move' call_tmp[614242](61061 call b[60991] i[61078]))
          unknown call_tmp[614247] "expr temp" "maybe param" "maybe type" "temp"
          (614250 'move' call_tmp[614247](61062 call < call_tmp[614237] call_tmp[614242]))
          unknown call_tmp[614252] "expr temp" "maybe param" "maybe type" "temp"
          (614255 'move' call_tmp[614252](61067 call _cond_test call_tmp[614247]))
          if call_tmp[614252]
          {
            (508630 'move' ret[508620](508629 'deref' 0))
            gotoReturn _end_>[508618] _end_>[508618]
          }
        }
      }
      label _unused_continueLabel[61083]
      label _breakLabel[61082]
    }
    (508635 'move' ret[508620](508634 'deref' 0))
    label _end_>[508618]
    (508622 return ret[508620])
  }
  function >=[61129](arg a[61126]:_tuple[56199](?), arg b[61132]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508639] "RVV" "temp"
    unknown call_tmp[614259] "expr temp" "maybe param" "maybe type" "temp"
    (614262 'move' call_tmp[614259](61136 call size _mt[243] a[61126]))
    unknown call_tmp[614266] "expr temp" "maybe param" "maybe type" "temp"
    (614269 'move' call_tmp[614266](61140 call size _mt[243] b[61132]))
    unknown call_tmp[614271] "expr temp" "maybe param" "maybe type" "temp"
    (614274 'move' call_tmp[614271](61143 call != call_tmp[614259] call_tmp[614266]))
    unknown call_tmp[614276] "expr temp" "maybe param" "maybe type" "temp"
    (614279 'move' call_tmp[614276](61166 call _cond_test call_tmp[614271]))
    if call_tmp[614276]
    {
      (61164 call compilerError "tuple operands to >= have different sizes")
    }
    {
      unknown i[61219] "dead at end of block" "insert auto destroy"
      (540887 'init var' i[61219] 0)
      (475048 'end of statement')
      unknown tmp[61220] "maybe param" "temp"
      unknown call_tmp[614283] "expr temp" "maybe param" "maybe type" "temp"
      (614286 'move' call_tmp[614283](61174 call size _mt[243] a[61126]))
      unknown call_tmp[614288] "expr temp" "maybe param" "maybe type" "temp"
      (614291 'move' call_tmp[614288](61178 call - call_tmp[614283] 1))
      (61232 'move' tmp[61220](61230 call chpl_compute_low_param_loop_bound 0 call_tmp[614288]))
      unknown tmp[61221] "maybe param" "temp"
      unknown call_tmp[614295] "expr temp" "maybe param" "maybe type" "temp"
      (614298 'move' call_tmp[614295](61239 call size _mt[243] a[61126]))
      unknown call_tmp[614300] "expr temp" "maybe param" "maybe type" "temp"
      (614303 'move' call_tmp[614300](61237 call - call_tmp[614295] 1))
      (61245 'move' tmp[61221](61243 call chpl_compute_high_param_loop_bound 0 call_tmp[614300]))
      unknown tmp[61222] "maybe param" "temp"
      (61248 'move' tmp[61222] 1)
      ParamForLoop[61250]
      { i[61219] tmp[61220] tmp[61221] tmp[61222]
        unknown call_tmp[614305] "expr temp" "maybe param" "maybe type" "temp"
        (614308 'move' call_tmp[614305](61185 call a[61126] i[61219]))
        unknown call_tmp[614310] "expr temp" "maybe param" "maybe type" "temp"
        (614313 'move' call_tmp[614310](61189 call b[61132] i[61219]))
        unknown call_tmp[614315] "expr temp" "maybe param" "maybe type" "temp"
        (614318 'move' call_tmp[614315](61190 call > call_tmp[614305] call_tmp[614310]))
        unknown call_tmp[614320] "expr temp" "maybe param" "maybe type" "temp"
        (614323 'move' call_tmp[614320](61213 call _cond_test call_tmp[614315]))
        if call_tmp[614320]
        {
          (508644 'move' ret[508639](508643 'deref' 1))
          gotoReturn _end_>=[508637] _end_>=[508637]
        }
        {
          unknown call_tmp[614325] "expr temp" "maybe param" "maybe type" "temp"
          (614328 'move' call_tmp[614325](61198 call a[61126] i[61219]))
          unknown call_tmp[614330] "expr temp" "maybe param" "maybe type" "temp"
          (614333 'move' call_tmp[614330](61202 call b[61132] i[61219]))
          unknown call_tmp[614335] "expr temp" "maybe param" "maybe type" "temp"
          (614338 'move' call_tmp[614335](61203 call < call_tmp[614325] call_tmp[614330]))
          unknown call_tmp[614340] "expr temp" "maybe param" "maybe type" "temp"
          (614343 'move' call_tmp[614340](61208 call _cond_test call_tmp[614335]))
          if call_tmp[614340]
          {
            (508649 'move' ret[508639](508648 'deref' 0))
            gotoReturn _end_>=[508637] _end_>=[508637]
          }
        }
      }
      label _unused_continueLabel[61224]
      label _breakLabel[61223]
    }
    (508654 'move' ret[508639](508653 'deref' 1))
    label _end_>=[508637]
    (508641 return ret[508639])
  }
  function <[61270](arg a[61267]:_tuple[56199](?), arg b[61273]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508658] "RVV" "temp"
    unknown call_tmp[614347] "expr temp" "maybe param" "maybe type" "temp"
    (614350 'move' call_tmp[614347](61277 call size _mt[243] a[61267]))
    unknown call_tmp[614354] "expr temp" "maybe param" "maybe type" "temp"
    (614357 'move' call_tmp[614354](61281 call size _mt[243] b[61273]))
    unknown call_tmp[614359] "expr temp" "maybe param" "maybe type" "temp"
    (614362 'move' call_tmp[614359](61284 call != call_tmp[614347] call_tmp[614354]))
    unknown call_tmp[614364] "expr temp" "maybe param" "maybe type" "temp"
    (614367 'move' call_tmp[614364](61307 call _cond_test call_tmp[614359]))
    if call_tmp[614364]
    {
      (61305 call compilerError "tuple operands to < have different sizes")
    }
    {
      unknown i[61360] "dead at end of block" "insert auto destroy"
      (540889 'init var' i[61360] 0)
      (475053 'end of statement')
      unknown tmp[61361] "maybe param" "temp"
      unknown call_tmp[614371] "expr temp" "maybe param" "maybe type" "temp"
      (614374 'move' call_tmp[614371](61315 call size _mt[243] a[61267]))
      unknown call_tmp[614376] "expr temp" "maybe param" "maybe type" "temp"
      (614379 'move' call_tmp[614376](61319 call - call_tmp[614371] 1))
      (61373 'move' tmp[61361](61371 call chpl_compute_low_param_loop_bound 0 call_tmp[614376]))
      unknown tmp[61362] "maybe param" "temp"
      unknown call_tmp[614383] "expr temp" "maybe param" "maybe type" "temp"
      (614386 'move' call_tmp[614383](61380 call size _mt[243] a[61267]))
      unknown call_tmp[614388] "expr temp" "maybe param" "maybe type" "temp"
      (614391 'move' call_tmp[614388](61378 call - call_tmp[614383] 1))
      (61386 'move' tmp[61362](61384 call chpl_compute_high_param_loop_bound 0 call_tmp[614388]))
      unknown tmp[61363] "maybe param" "temp"
      (61389 'move' tmp[61363] 1)
      ParamForLoop[61391]
      { i[61360] tmp[61361] tmp[61362] tmp[61363]
        unknown call_tmp[614393] "expr temp" "maybe param" "maybe type" "temp"
        (614396 'move' call_tmp[614393](61326 call a[61267] i[61360]))
        unknown call_tmp[614398] "expr temp" "maybe param" "maybe type" "temp"
        (614401 'move' call_tmp[614398](61330 call b[61273] i[61360]))
        unknown call_tmp[614403] "expr temp" "maybe param" "maybe type" "temp"
        (614406 'move' call_tmp[614403](61331 call < call_tmp[614393] call_tmp[614398]))
        unknown call_tmp[614408] "expr temp" "maybe param" "maybe type" "temp"
        (614411 'move' call_tmp[614408](61354 call _cond_test call_tmp[614403]))
        if call_tmp[614408]
        {
          (508663 'move' ret[508658](508662 'deref' 1))
          gotoReturn _end_<[508656] _end_<[508656]
        }
        {
          unknown call_tmp[614413] "expr temp" "maybe param" "maybe type" "temp"
          (614416 'move' call_tmp[614413](61339 call a[61267] i[61360]))
          unknown call_tmp[614418] "expr temp" "maybe param" "maybe type" "temp"
          (614421 'move' call_tmp[614418](61343 call b[61273] i[61360]))
          unknown call_tmp[614423] "expr temp" "maybe param" "maybe type" "temp"
          (614426 'move' call_tmp[614423](61344 call > call_tmp[614413] call_tmp[614418]))
          unknown call_tmp[614428] "expr temp" "maybe param" "maybe type" "temp"
          (614431 'move' call_tmp[614428](61349 call _cond_test call_tmp[614423]))
          if call_tmp[614428]
          {
            (508668 'move' ret[508658](508667 'deref' 0))
            gotoReturn _end_<[508656] _end_<[508656]
          }
        }
      }
      label _unused_continueLabel[61365]
      label _breakLabel[61364]
    }
    (508673 'move' ret[508658](508672 'deref' 0))
    label _end_<[508656]
    (508660 return ret[508658])
  }
  function <=[61411](arg a[61408]:_tuple[56199](?), arg b[61414]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508677] "RVV" "temp"
    unknown call_tmp[614435] "expr temp" "maybe param" "maybe type" "temp"
    (614438 'move' call_tmp[614435](61418 call size _mt[243] a[61408]))
    unknown call_tmp[614442] "expr temp" "maybe param" "maybe type" "temp"
    (614445 'move' call_tmp[614442](61422 call size _mt[243] b[61414]))
    unknown call_tmp[614447] "expr temp" "maybe param" "maybe type" "temp"
    (614450 'move' call_tmp[614447](61425 call != call_tmp[614435] call_tmp[614442]))
    unknown call_tmp[614452] "expr temp" "maybe param" "maybe type" "temp"
    (614455 'move' call_tmp[614452](61448 call _cond_test call_tmp[614447]))
    if call_tmp[614452]
    {
      (61446 call compilerError "tuple operands to <= have different sizes")
    }
    {
      unknown i[61501] "dead at end of block" "insert auto destroy"
      (540891 'init var' i[61501] 0)
      (475058 'end of statement')
      unknown tmp[61502] "maybe param" "temp"
      unknown call_tmp[614459] "expr temp" "maybe param" "maybe type" "temp"
      (614462 'move' call_tmp[614459](61456 call size _mt[243] a[61408]))
      unknown call_tmp[614464] "expr temp" "maybe param" "maybe type" "temp"
      (614467 'move' call_tmp[614464](61460 call - call_tmp[614459] 1))
      (61514 'move' tmp[61502](61512 call chpl_compute_low_param_loop_bound 0 call_tmp[614464]))
      unknown tmp[61503] "maybe param" "temp"
      unknown call_tmp[614471] "expr temp" "maybe param" "maybe type" "temp"
      (614474 'move' call_tmp[614471](61521 call size _mt[243] a[61408]))
      unknown call_tmp[614476] "expr temp" "maybe param" "maybe type" "temp"
      (614479 'move' call_tmp[614476](61519 call - call_tmp[614471] 1))
      (61527 'move' tmp[61503](61525 call chpl_compute_high_param_loop_bound 0 call_tmp[614476]))
      unknown tmp[61504] "maybe param" "temp"
      (61530 'move' tmp[61504] 1)
      ParamForLoop[61532]
      { i[61501] tmp[61502] tmp[61503] tmp[61504]
        unknown call_tmp[614481] "expr temp" "maybe param" "maybe type" "temp"
        (614484 'move' call_tmp[614481](61467 call a[61408] i[61501]))
        unknown call_tmp[614486] "expr temp" "maybe param" "maybe type" "temp"
        (614489 'move' call_tmp[614486](61471 call b[61414] i[61501]))
        unknown call_tmp[614491] "expr temp" "maybe param" "maybe type" "temp"
        (614494 'move' call_tmp[614491](61472 call < call_tmp[614481] call_tmp[614486]))
        unknown call_tmp[614496] "expr temp" "maybe param" "maybe type" "temp"
        (614499 'move' call_tmp[614496](61495 call _cond_test call_tmp[614491]))
        if call_tmp[614496]
        {
          (508682 'move' ret[508677](508681 'deref' 1))
          gotoReturn _end_<=[508675] _end_<=[508675]
        }
        {
          unknown call_tmp[614501] "expr temp" "maybe param" "maybe type" "temp"
          (614504 'move' call_tmp[614501](61480 call a[61408] i[61501]))
          unknown call_tmp[614506] "expr temp" "maybe param" "maybe type" "temp"
          (614509 'move' call_tmp[614506](61484 call b[61414] i[61501]))
          unknown call_tmp[614511] "expr temp" "maybe param" "maybe type" "temp"
          (614514 'move' call_tmp[614511](61485 call > call_tmp[614501] call_tmp[614506]))
          unknown call_tmp[614516] "expr temp" "maybe param" "maybe type" "temp"
          (614519 'move' call_tmp[614516](61490 call _cond_test call_tmp[614511]))
          if call_tmp[614516]
          {
            (508687 'move' ret[508677](508686 'deref' 0))
            gotoReturn _end_<=[508675] _end_<=[508675]
          }
        }
      }
      label _unused_continueLabel[61506]
      label _breakLabel[61505]
    }
    (508692 'move' ret[508677](508691 'deref' 1))
    label _end_<=[508675]
    (508679 return ret[508677])
  }
  function ==[61552](arg a[61549]:_tuple[56199](?), arg b[61555]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508696] "RVV" "temp"
    unknown call_tmp[614523] "expr temp" "maybe param" "maybe type" "temp"
    (614526 'move' call_tmp[614523](61559 call size _mt[243] a[61549]))
    unknown call_tmp[614530] "expr temp" "maybe param" "maybe type" "temp"
    (614533 'move' call_tmp[614530](61563 call size _mt[243] b[61555]))
    unknown call_tmp[614535] "expr temp" "maybe param" "maybe type" "temp"
    (614538 'move' call_tmp[614535](61566 call != call_tmp[614523] call_tmp[614530]))
    unknown call_tmp[614540] "expr temp" "maybe param" "maybe type" "temp"
    (614543 'move' call_tmp[614540](61641 call _cond_test call_tmp[614535]))
    if call_tmp[614540]
    {
      (508701 'move' ret[508696](508700 'deref' 0))
      gotoReturn _end_==[508694] _end_==[508694]
    }
    {
      {
        unknown i[61600] "dead at end of block" "insert auto destroy"
        (540893 'init var' i[61600] 0)
        (475063 'end of statement')
        unknown tmp[61601] "maybe param" "temp"
        unknown call_tmp[614547] "expr temp" "maybe param" "maybe type" "temp"
        (614550 'move' call_tmp[614547](61574 call size _mt[243] a[61549]))
        unknown call_tmp[614552] "expr temp" "maybe param" "maybe type" "temp"
        (614555 'move' call_tmp[614552](61578 call - call_tmp[614547] 1))
        (61613 'move' tmp[61601](61611 call chpl_compute_low_param_loop_bound 0 call_tmp[614552]))
        unknown tmp[61602] "maybe param" "temp"
        unknown call_tmp[614559] "expr temp" "maybe param" "maybe type" "temp"
        (614562 'move' call_tmp[614559](61620 call size _mt[243] a[61549]))
        unknown call_tmp[614564] "expr temp" "maybe param" "maybe type" "temp"
        (614567 'move' call_tmp[614564](61618 call - call_tmp[614559] 1))
        (61626 'move' tmp[61602](61624 call chpl_compute_high_param_loop_bound 0 call_tmp[614564]))
        unknown tmp[61603] "maybe param" "temp"
        (61629 'move' tmp[61603] 1)
        ParamForLoop[61631]
        { i[61600] tmp[61601] tmp[61602] tmp[61603]
          unknown call_tmp[614569] "expr temp" "maybe param" "maybe type" "temp"
          (614572 'move' call_tmp[614569](61585 call a[61549] i[61600]))
          unknown call_tmp[614574] "expr temp" "maybe param" "maybe type" "temp"
          (614577 'move' call_tmp[614574](61589 call b[61555] i[61600]))
          unknown call_tmp[614579] "expr temp" "maybe param" "maybe type" "temp"
          (614582 'move' call_tmp[614579](61590 call != call_tmp[614569] call_tmp[614574]))
          unknown call_tmp[614584] "expr temp" "maybe param" "maybe type" "temp"
          (614587 'move' call_tmp[614584](61595 call _cond_test call_tmp[614579]))
          if call_tmp[614584]
          {
            (508706 'move' ret[508696](508705 'deref' 0))
            gotoReturn _end_==[508694] _end_==[508694]
          }
        }
        label _unused_continueLabel[61605]
        label _breakLabel[61604]
      }
    }
    (508711 'move' ret[508696](508710 'deref' 1))
    label _end_==[508694]
    (508698 return ret[508696])
  }
  function !=[61657](arg a[61654]:_tuple[56199](?), arg b[61660]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508715] "RVV" "temp"
    unknown call_tmp[614591] "expr temp" "maybe param" "maybe type" "temp"
    (614594 'move' call_tmp[614591](61664 call size _mt[243] a[61654]))
    unknown call_tmp[614598] "expr temp" "maybe param" "maybe type" "temp"
    (614601 'move' call_tmp[614598](61668 call size _mt[243] b[61660]))
    unknown call_tmp[614603] "expr temp" "maybe param" "maybe type" "temp"
    (614606 'move' call_tmp[614603](61671 call != call_tmp[614591] call_tmp[614598]))
    unknown call_tmp[614608] "expr temp" "maybe param" "maybe type" "temp"
    (614611 'move' call_tmp[614608](61746 call _cond_test call_tmp[614603]))
    if call_tmp[614608]
    {
      (508720 'move' ret[508715](508719 'deref' 1))
      gotoReturn _end_!=[508713] _end_!=[508713]
    }
    {
      {
        unknown i[61705] "dead at end of block" "insert auto destroy"
        (540895 'init var' i[61705] 0)
        (475067 'end of statement')
        unknown tmp[61706] "maybe param" "temp"
        unknown call_tmp[614615] "expr temp" "maybe param" "maybe type" "temp"
        (614618 'move' call_tmp[614615](61679 call size _mt[243] a[61654]))
        unknown call_tmp[614620] "expr temp" "maybe param" "maybe type" "temp"
        (614623 'move' call_tmp[614620](61683 call - call_tmp[614615] 1))
        (61718 'move' tmp[61706](61716 call chpl_compute_low_param_loop_bound 0 call_tmp[614620]))
        unknown tmp[61707] "maybe param" "temp"
        unknown call_tmp[614627] "expr temp" "maybe param" "maybe type" "temp"
        (614630 'move' call_tmp[614627](61725 call size _mt[243] a[61654]))
        unknown call_tmp[614632] "expr temp" "maybe param" "maybe type" "temp"
        (614635 'move' call_tmp[614632](61723 call - call_tmp[614627] 1))
        (61731 'move' tmp[61707](61729 call chpl_compute_high_param_loop_bound 0 call_tmp[614632]))
        unknown tmp[61708] "maybe param" "temp"
        (61734 'move' tmp[61708] 1)
        ParamForLoop[61736]
        { i[61705] tmp[61706] tmp[61707] tmp[61708]
          unknown call_tmp[614637] "expr temp" "maybe param" "maybe type" "temp"
          (614640 'move' call_tmp[614637](61690 call a[61654] i[61705]))
          unknown call_tmp[614642] "expr temp" "maybe param" "maybe type" "temp"
          (614645 'move' call_tmp[614642](61694 call b[61660] i[61705]))
          unknown call_tmp[614647] "expr temp" "maybe param" "maybe type" "temp"
          (614650 'move' call_tmp[614647](61695 call != call_tmp[614637] call_tmp[614642]))
          unknown call_tmp[614652] "expr temp" "maybe param" "maybe type" "temp"
          (614655 'move' call_tmp[614652](61700 call _cond_test call_tmp[614647]))
          if call_tmp[614652]
          {
            (508725 'move' ret[508715](508724 'deref' 1))
            gotoReturn _end_!=[508713] _end_!=[508713]
          }
        }
        label _unused_continueLabel[61710]
        label _breakLabel[61709]
      }
    }
    (508730 'move' ret[508715](508729 'deref' 0))
    label _end_!=[508713]
    (508717 return ret[508715])
  }
  function +[61762](arg x[61759]:_tuple[56199](?), arg y[61769] :
  unknown call_tmp[614657] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508734] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491645] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614662] "expr temp" "maybe param" "maybe type" "temp"
      (614665 'move' call_tmp[614662](61783 call x[61759] 0))
      (491649 'move' call_type_tmp[491645](61784 'typeof' call_tmp[614662]))
    }
    unknown result[61787] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614669] "expr temp" "maybe param" "maybe type" "temp"
    (614672 'move' call_tmp[614669](61777 call size _mt[243] x[61759]))
    unknown call_tmp[614674] "expr temp" "maybe param" "maybe type" "temp"
    (614677 'move' call_tmp[614674](61785 call * call_tmp[614669] call_type_tmp[491645]))
    (540897 'default init var' result[61787] call_tmp[614674])
    (61790 'end of statement')
    {
      unknown d[61816] "dead at end of block" "insert auto destroy"
      (540899 'init var' d[61816] 0)
      (475070 'end of statement')
      unknown tmp[61817] "maybe param" "temp"
      unknown call_tmp[614681] "expr temp" "maybe param" "maybe type" "temp"
      (614684 'move' call_tmp[614681](61794 call size _mt[243] x[61759]))
      unknown call_tmp[614686] "expr temp" "maybe param" "maybe type" "temp"
      (614689 'move' call_tmp[614686](61798 call - call_tmp[614681] 1))
      (61829 'move' tmp[61817](61827 call chpl_compute_low_param_loop_bound 0 call_tmp[614686]))
      unknown tmp[61818] "maybe param" "temp"
      unknown call_tmp[614693] "expr temp" "maybe param" "maybe type" "temp"
      (614696 'move' call_tmp[614693](61836 call size _mt[243] x[61759]))
      unknown call_tmp[614698] "expr temp" "maybe param" "maybe type" "temp"
      (614701 'move' call_tmp[614698](61834 call - call_tmp[614693] 1))
      (61842 'move' tmp[61818](61840 call chpl_compute_high_param_loop_bound 0 call_tmp[614698]))
      unknown tmp[61819] "maybe param" "temp"
      (61845 'move' tmp[61819] 1)
      ParamForLoop[61847]
      { d[61816] tmp[61817] tmp[61818] tmp[61819]
        unknown call_tmp[614703] "expr temp" "maybe param" "maybe type" "temp"
        (614706 'move' call_tmp[614703](61805 call result[61787] d[61816]))
        unknown call_tmp[614708] "expr temp" "maybe param" "maybe type" "temp"
        (614711 'move' call_tmp[614708](61809 call x[61759] d[61816]))
        unknown call_tmp[614713] "expr temp" "maybe param" "maybe type" "temp"
        (614716 'move' call_tmp[614713](61811 call + call_tmp[614708] y[61769]))
        (61813 call = call_tmp[614703] call_tmp[614713])
        (475071 'end of statement' result[61787] d[61816] d[61816])
      }
      label _unused_continueLabel[61821]
      label _breakLabel[61820]
    }
    (508739 'move' ret[508734](508738 'deref' result[61787]))
    gotoReturn _end_+[508732] _end_+[508732]
    (475075 'end of statement' result[61787])
    label _end_+[508732]
    (508736 return ret[508734])
  }
  where {
    (61775 call isHomogeneousTuple x[61759])
  }
  function +[61869](arg x[61866]:_any[178](?), arg y[61872]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508745] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491651] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614718] "expr temp" "maybe param" "maybe type" "temp"
      (614721 'move' call_tmp[614718](61897 call y[61872] 0))
      (491655 'move' call_type_tmp[491651](61898 'typeof' call_tmp[614718]))
    }
    unknown result[61901] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614725] "expr temp" "maybe param" "maybe type" "temp"
    (614728 'move' call_tmp[614725](61891 call size _mt[243] y[61872]))
    unknown call_tmp[614730] "expr temp" "maybe param" "maybe type" "temp"
    (614733 'move' call_tmp[614730](61899 call * call_tmp[614725] call_type_tmp[491651]))
    (540901 'default init var' result[61901] call_tmp[614730])
    (61904 'end of statement')
    {
      unknown d[61930] "dead at end of block" "insert auto destroy"
      (540903 'init var' d[61930] 0)
      (475077 'end of statement')
      unknown tmp[61931] "maybe param" "temp"
      unknown call_tmp[614737] "expr temp" "maybe param" "maybe type" "temp"
      (614740 'move' call_tmp[614737](61908 call size _mt[243] y[61872]))
      unknown call_tmp[614742] "expr temp" "maybe param" "maybe type" "temp"
      (614745 'move' call_tmp[614742](61912 call - call_tmp[614737] 1))
      (61943 'move' tmp[61931](61941 call chpl_compute_low_param_loop_bound 0 call_tmp[614742]))
      unknown tmp[61932] "maybe param" "temp"
      unknown call_tmp[614749] "expr temp" "maybe param" "maybe type" "temp"
      (614752 'move' call_tmp[614749](61950 call size _mt[243] y[61872]))
      unknown call_tmp[614754] "expr temp" "maybe param" "maybe type" "temp"
      (614757 'move' call_tmp[614754](61948 call - call_tmp[614749] 1))
      (61956 'move' tmp[61932](61954 call chpl_compute_high_param_loop_bound 0 call_tmp[614754]))
      unknown tmp[61933] "maybe param" "temp"
      (61959 'move' tmp[61933] 1)
      ParamForLoop[61961]
      { d[61930] tmp[61931] tmp[61932] tmp[61933]
        unknown call_tmp[614759] "expr temp" "maybe param" "maybe type" "temp"
        (614762 'move' call_tmp[614759](61919 call result[61901] d[61930]))
        unknown call_tmp[614764] "expr temp" "maybe param" "maybe type" "temp"
        (614767 'move' call_tmp[614764](61924 call y[61872] d[61930]))
        unknown call_tmp[614769] "expr temp" "maybe param" "maybe type" "temp"
        (614772 'move' call_tmp[614769](61925 call + x[61866] call_tmp[614764]))
        (61927 call = call_tmp[614759] call_tmp[614769])
        (475078 'end of statement' result[61901] d[61930] d[61930])
      }
      label _unused_continueLabel[61935]
      label _breakLabel[61934]
    }
    (508750 'move' ret[508745](508749 'deref' result[61901]))
    gotoReturn _end_+[508743] _end_+[508743]
    (475082 'end of statement' result[61901])
    label _end_+[508743]
    (508747 return ret[508745])
  }
  where {
    unknown tmp[418962] "maybe param" "temp"
    (418973 'move' tmp[418962](61878 call isHomogeneousTuple y[61872]))
    unknown call_tmp[614774] "expr temp" "maybe param" "maybe type" "temp"
    (614777 'move' call_tmp[614774](418975 call _cond_invalid tmp[418962]))
    if call_tmp[614774]
    {
      (418978 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555069] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555070] "maybe param" "temp"
    unknown call_tmp[614779] "expr temp" "maybe param" "maybe type" "temp"
    (614782 'move' call_tmp[614779](418963 call isTrue tmp[418962]))
    (555075 'move' tmp[555070](555073 call _cond_test call_tmp[614779]))
    if tmp[555070]
    {
      { scopeless type
        unknown call_type_tmp[491657] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614784] "expr temp" "maybe param" "maybe type" "temp"
        (614787 'move' call_tmp[614784](61885 call y[61872] 0))
        (491661 'move' call_type_tmp[491657](61886 'typeof' call_tmp[614784]))
      }
      unknown tmp[555077] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614789] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614792 'move' call_tmp[614789](454776 'typeof' x[61866]))
      unknown call_tmp[614794] "expr temp" "maybe param" "maybe type" "temp"
      (614797 'move' call_tmp[614794](354212 'is_subtype' call_type_tmp[491657] call_tmp[614789]))
      (555079 'move' tmp[555077](418966 call isTrue call_tmp[614794]))
      (555084 'move' tmp[555069](555081 '_paramFoldLogical' tmp[555070] tmp[555077]))
    }
    {
      (555089 'move' tmp[555069](555086 '_paramFoldLogical' tmp[555070] 0))
    }
    (748202 call chpl_statementLevelSymbol tmp[555069])
  }
  function -[61982](arg x[61979]:_tuple[56199](?), arg y[61989] :
  unknown call_tmp[614799] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508756] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491663] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614804] "expr temp" "maybe param" "maybe type" "temp"
      (614807 'move' call_tmp[614804](62003 call x[61979] 0))
      (491667 'move' call_type_tmp[491663](62004 'typeof' call_tmp[614804]))
    }
    unknown result[62007] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614811] "expr temp" "maybe param" "maybe type" "temp"
    (614814 'move' call_tmp[614811](61997 call size _mt[243] x[61979]))
    unknown call_tmp[614816] "expr temp" "maybe param" "maybe type" "temp"
    (614819 'move' call_tmp[614816](62005 call * call_tmp[614811] call_type_tmp[491663]))
    (540905 'default init var' result[62007] call_tmp[614816])
    (62010 'end of statement')
    {
      unknown d[62036] "dead at end of block" "insert auto destroy"
      (540907 'init var' d[62036] 0)
      (475084 'end of statement')
      unknown tmp[62037] "maybe param" "temp"
      unknown call_tmp[614823] "expr temp" "maybe param" "maybe type" "temp"
      (614826 'move' call_tmp[614823](62014 call size _mt[243] x[61979]))
      unknown call_tmp[614828] "expr temp" "maybe param" "maybe type" "temp"
      (614831 'move' call_tmp[614828](62018 call - call_tmp[614823] 1))
      (62049 'move' tmp[62037](62047 call chpl_compute_low_param_loop_bound 0 call_tmp[614828]))
      unknown tmp[62038] "maybe param" "temp"
      unknown call_tmp[614835] "expr temp" "maybe param" "maybe type" "temp"
      (614838 'move' call_tmp[614835](62056 call size _mt[243] x[61979]))
      unknown call_tmp[614840] "expr temp" "maybe param" "maybe type" "temp"
      (614843 'move' call_tmp[614840](62054 call - call_tmp[614835] 1))
      (62062 'move' tmp[62038](62060 call chpl_compute_high_param_loop_bound 0 call_tmp[614840]))
      unknown tmp[62039] "maybe param" "temp"
      (62065 'move' tmp[62039] 1)
      ParamForLoop[62067]
      { d[62036] tmp[62037] tmp[62038] tmp[62039]
        unknown call_tmp[614845] "expr temp" "maybe param" "maybe type" "temp"
        (614848 'move' call_tmp[614845](62025 call result[62007] d[62036]))
        unknown call_tmp[614850] "expr temp" "maybe param" "maybe type" "temp"
        (614853 'move' call_tmp[614850](62029 call x[61979] d[62036]))
        unknown call_tmp[614855] "expr temp" "maybe param" "maybe type" "temp"
        (614858 'move' call_tmp[614855](62031 call - call_tmp[614850] y[61989]))
        (62033 call = call_tmp[614845] call_tmp[614855])
        (475085 'end of statement' result[62007] d[62036] d[62036])
      }
      label _unused_continueLabel[62041]
      label _breakLabel[62040]
    }
    (508761 'move' ret[508756](508760 'deref' result[62007]))
    gotoReturn _end_-[508754] _end_-[508754]
    (475089 'end of statement' result[62007])
    label _end_-[508754]
    (508758 return ret[508756])
  }
  where {
    (61995 call isHomogeneousTuple x[61979])
  }
  function -[62089](arg x[62086]:_any[178](?), arg y[62092]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508767] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491669] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614860] "expr temp" "maybe param" "maybe type" "temp"
      (614863 'move' call_tmp[614860](62117 call y[62092] 0))
      (491673 'move' call_type_tmp[491669](62118 'typeof' call_tmp[614860]))
    }
    unknown result[62121] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614867] "expr temp" "maybe param" "maybe type" "temp"
    (614870 'move' call_tmp[614867](62111 call size _mt[243] y[62092]))
    unknown call_tmp[614872] "expr temp" "maybe param" "maybe type" "temp"
    (614875 'move' call_tmp[614872](62119 call * call_tmp[614867] call_type_tmp[491669]))
    (540909 'default init var' result[62121] call_tmp[614872])
    (62124 'end of statement')
    {
      unknown d[62150] "dead at end of block" "insert auto destroy"
      (540911 'init var' d[62150] 0)
      (475091 'end of statement')
      unknown tmp[62151] "maybe param" "temp"
      unknown call_tmp[614879] "expr temp" "maybe param" "maybe type" "temp"
      (614882 'move' call_tmp[614879](62128 call size _mt[243] y[62092]))
      unknown call_tmp[614884] "expr temp" "maybe param" "maybe type" "temp"
      (614887 'move' call_tmp[614884](62132 call - call_tmp[614879] 1))
      (62163 'move' tmp[62151](62161 call chpl_compute_low_param_loop_bound 0 call_tmp[614884]))
      unknown tmp[62152] "maybe param" "temp"
      unknown call_tmp[614891] "expr temp" "maybe param" "maybe type" "temp"
      (614894 'move' call_tmp[614891](62170 call size _mt[243] y[62092]))
      unknown call_tmp[614896] "expr temp" "maybe param" "maybe type" "temp"
      (614899 'move' call_tmp[614896](62168 call - call_tmp[614891] 1))
      (62176 'move' tmp[62152](62174 call chpl_compute_high_param_loop_bound 0 call_tmp[614896]))
      unknown tmp[62153] "maybe param" "temp"
      (62179 'move' tmp[62153] 1)
      ParamForLoop[62181]
      { d[62150] tmp[62151] tmp[62152] tmp[62153]
        unknown call_tmp[614901] "expr temp" "maybe param" "maybe type" "temp"
        (614904 'move' call_tmp[614901](62139 call result[62121] d[62150]))
        unknown call_tmp[614906] "expr temp" "maybe param" "maybe type" "temp"
        (614909 'move' call_tmp[614906](62144 call y[62092] d[62150]))
        unknown call_tmp[614911] "expr temp" "maybe param" "maybe type" "temp"
        (614914 'move' call_tmp[614911](62145 call - x[62086] call_tmp[614906]))
        (62147 call = call_tmp[614901] call_tmp[614911])
        (475092 'end of statement' result[62121] d[62150] d[62150])
      }
      label _unused_continueLabel[62155]
      label _breakLabel[62154]
    }
    (508772 'move' ret[508767](508771 'deref' result[62121]))
    gotoReturn _end_-[508765] _end_-[508765]
    (475096 'end of statement' result[62121])
    label _end_-[508765]
    (508769 return ret[508767])
  }
  where {
    unknown tmp[418983] "maybe param" "temp"
    (418994 'move' tmp[418983](62098 call isHomogeneousTuple y[62092]))
    unknown call_tmp[614916] "expr temp" "maybe param" "maybe type" "temp"
    (614919 'move' call_tmp[614916](418996 call _cond_invalid tmp[418983]))
    if call_tmp[614916]
    {
      (418999 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555096] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555097] "maybe param" "temp"
    unknown call_tmp[614921] "expr temp" "maybe param" "maybe type" "temp"
    (614924 'move' call_tmp[614921](418984 call isTrue tmp[418983]))
    (555102 'move' tmp[555097](555100 call _cond_test call_tmp[614921]))
    if tmp[555097]
    {
      { scopeless type
        unknown call_type_tmp[491675] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[614926] "expr temp" "maybe param" "maybe type" "temp"
        (614929 'move' call_tmp[614926](62105 call y[62092] 0))
        (491679 'move' call_type_tmp[491675](62106 'typeof' call_tmp[614926]))
      }
      unknown tmp[555104] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[614931] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (614934 'move' call_tmp[614931](454778 'typeof' x[62086]))
      unknown call_tmp[614936] "expr temp" "maybe param" "maybe type" "temp"
      (614939 'move' call_tmp[614936](354213 'is_subtype' call_type_tmp[491675] call_tmp[614931]))
      (555106 'move' tmp[555104](418987 call isTrue call_tmp[614936]))
      (555111 'move' tmp[555096](555108 '_paramFoldLogical' tmp[555097] tmp[555104]))
    }
    {
      (555116 'move' tmp[555096](555113 '_paramFoldLogical' tmp[555097] 0))
    }
    (748204 call chpl_statementLevelSymbol tmp[555096])
  }
  function *[62202](arg x[62199]:_tuple[56199](?), arg y[62209] :
  unknown call_tmp[614941] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508778] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491681] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[614946] "expr temp" "maybe param" "maybe type" "temp"
      (614949 'move' call_tmp[614946](62223 call x[62199] 0))
      (491685 'move' call_type_tmp[491681](62224 'typeof' call_tmp[614946]))
    }
    unknown result[62227] "dead at end of block" "insert auto destroy"
    unknown call_tmp[614953] "expr temp" "maybe param" "maybe type" "temp"
    (614956 'move' call_tmp[614953](62217 call size _mt[243] x[62199]))
    unknown call_tmp[614958] "expr temp" "maybe param" "maybe type" "temp"
    (614961 'move' call_tmp[614958](62225 call * call_tmp[614953] call_type_tmp[491681]))
    (540913 'default init var' result[62227] call_tmp[614958])
    (62230 'end of statement')
    {
      unknown d[62256] "dead at end of block" "insert auto destroy"
      (540915 'init var' d[62256] 0)
      (475098 'end of statement')
      unknown tmp[62257] "maybe param" "temp"
      unknown call_tmp[614965] "expr temp" "maybe param" "maybe type" "temp"
      (614968 'move' call_tmp[614965](62234 call size _mt[243] x[62199]))
      unknown call_tmp[614970] "expr temp" "maybe param" "maybe type" "temp"
      (614973 'move' call_tmp[614970](62238 call - call_tmp[614965] 1))
      (62269 'move' tmp[62257](62267 call chpl_compute_low_param_loop_bound 0 call_tmp[614970]))
      unknown tmp[62258] "maybe param" "temp"
      unknown call_tmp[614977] "expr temp" "maybe param" "maybe type" "temp"
      (614980 'move' call_tmp[614977](62276 call size _mt[243] x[62199]))
      unknown call_tmp[614982] "expr temp" "maybe param" "maybe type" "temp"
      (614985 'move' call_tmp[614982](62274 call - call_tmp[614977] 1))
      (62282 'move' tmp[62258](62280 call chpl_compute_high_param_loop_bound 0 call_tmp[614982]))
      unknown tmp[62259] "maybe param" "temp"
      (62285 'move' tmp[62259] 1)
      ParamForLoop[62287]
      { d[62256] tmp[62257] tmp[62258] tmp[62259]
        unknown call_tmp[614987] "expr temp" "maybe param" "maybe type" "temp"
        (614990 'move' call_tmp[614987](62245 call result[62227] d[62256]))
        unknown call_tmp[614992] "expr temp" "maybe param" "maybe type" "temp"
        (614995 'move' call_tmp[614992](62249 call x[62199] d[62256]))
        unknown call_tmp[614997] "expr temp" "maybe param" "maybe type" "temp"
        (615000 'move' call_tmp[614997](62251 call * call_tmp[614992] y[62209]))
        (62253 call = call_tmp[614987] call_tmp[614997])
        (475099 'end of statement' result[62227] d[62256] d[62256])
      }
      label _unused_continueLabel[62261]
      label _breakLabel[62260]
    }
    (508783 'move' ret[508778](508782 'deref' result[62227]))
    gotoReturn _end_*[508776] _end_*[508776]
    (475103 'end of statement' result[62227])
    label _end_*[508776]
    (508780 return ret[508778])
  }
  where {
    (62215 call isHomogeneousTuple x[62199])
  }
  function *[62309](arg x[62306]:_any[178](?), arg y[62312]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508789] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491687] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615002] "expr temp" "maybe param" "maybe type" "temp"
      (615005 'move' call_tmp[615002](62337 call y[62312] 0))
      (491691 'move' call_type_tmp[491687](62338 'typeof' call_tmp[615002]))
    }
    unknown result[62341] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615009] "expr temp" "maybe param" "maybe type" "temp"
    (615012 'move' call_tmp[615009](62331 call size _mt[243] y[62312]))
    unknown call_tmp[615014] "expr temp" "maybe param" "maybe type" "temp"
    (615017 'move' call_tmp[615014](62339 call * call_tmp[615009] call_type_tmp[491687]))
    (540917 'default init var' result[62341] call_tmp[615014])
    (62344 'end of statement')
    {
      unknown d[62370] "dead at end of block" "insert auto destroy"
      (540919 'init var' d[62370] 0)
      (475105 'end of statement')
      unknown tmp[62371] "maybe param" "temp"
      unknown call_tmp[615021] "expr temp" "maybe param" "maybe type" "temp"
      (615024 'move' call_tmp[615021](62348 call size _mt[243] y[62312]))
      unknown call_tmp[615026] "expr temp" "maybe param" "maybe type" "temp"
      (615029 'move' call_tmp[615026](62352 call - call_tmp[615021] 1))
      (62383 'move' tmp[62371](62381 call chpl_compute_low_param_loop_bound 0 call_tmp[615026]))
      unknown tmp[62372] "maybe param" "temp"
      unknown call_tmp[615033] "expr temp" "maybe param" "maybe type" "temp"
      (615036 'move' call_tmp[615033](62390 call size _mt[243] y[62312]))
      unknown call_tmp[615038] "expr temp" "maybe param" "maybe type" "temp"
      (615041 'move' call_tmp[615038](62388 call - call_tmp[615033] 1))
      (62396 'move' tmp[62372](62394 call chpl_compute_high_param_loop_bound 0 call_tmp[615038]))
      unknown tmp[62373] "maybe param" "temp"
      (62399 'move' tmp[62373] 1)
      ParamForLoop[62401]
      { d[62370] tmp[62371] tmp[62372] tmp[62373]
        unknown call_tmp[615043] "expr temp" "maybe param" "maybe type" "temp"
        (615046 'move' call_tmp[615043](62359 call result[62341] d[62370]))
        unknown call_tmp[615048] "expr temp" "maybe param" "maybe type" "temp"
        (615051 'move' call_tmp[615048](62364 call y[62312] d[62370]))
        unknown call_tmp[615053] "expr temp" "maybe param" "maybe type" "temp"
        (615056 'move' call_tmp[615053](62365 call * x[62306] call_tmp[615048]))
        (62367 call = call_tmp[615043] call_tmp[615053])
        (475106 'end of statement' result[62341] d[62370] d[62370])
      }
      label _unused_continueLabel[62375]
      label _breakLabel[62374]
    }
    (508794 'move' ret[508789](508793 'deref' result[62341]))
    gotoReturn _end_*[508787] _end_*[508787]
    (475110 'end of statement' result[62341])
    label _end_*[508787]
    (508791 return ret[508789])
  }
  where {
    unknown tmp[419004] "maybe param" "temp"
    (419015 'move' tmp[419004](62318 call isHomogeneousTuple y[62312]))
    unknown call_tmp[615058] "expr temp" "maybe param" "maybe type" "temp"
    (615061 'move' call_tmp[615058](419017 call _cond_invalid tmp[419004]))
    if call_tmp[615058]
    {
      (419020 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555123] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555124] "maybe param" "temp"
    unknown call_tmp[615063] "expr temp" "maybe param" "maybe type" "temp"
    (615066 'move' call_tmp[615063](419005 call isTrue tmp[419004]))
    (555129 'move' tmp[555124](555127 call _cond_test call_tmp[615063]))
    if tmp[555124]
    {
      { scopeless type
        unknown call_type_tmp[491693] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615068] "expr temp" "maybe param" "maybe type" "temp"
        (615071 'move' call_tmp[615068](62325 call y[62312] 0))
        (491697 'move' call_type_tmp[491693](62326 'typeof' call_tmp[615068]))
      }
      unknown tmp[555131] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615073] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615076 'move' call_tmp[615073](454780 'typeof' x[62306]))
      unknown call_tmp[615078] "expr temp" "maybe param" "maybe type" "temp"
      (615081 'move' call_tmp[615078](354214 'is_subtype' call_type_tmp[491693] call_tmp[615073]))
      (555133 'move' tmp[555131](419008 call isTrue call_tmp[615078]))
      (555138 'move' tmp[555123](555135 '_paramFoldLogical' tmp[555124] tmp[555131]))
    }
    {
      (555143 'move' tmp[555123](555140 '_paramFoldLogical' tmp[555124] 0))
    }
    (748206 call chpl_statementLevelSymbol tmp[555123])
  }
  function /[62422](arg x[62419]:_tuple[56199](?), arg y[62429] :
  unknown call_tmp[615083] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508800] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491699] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615088] "expr temp" "maybe param" "maybe type" "temp"
      (615091 'move' call_tmp[615088](62443 call x[62419] 0))
      (491703 'move' call_type_tmp[491699](62444 'typeof' call_tmp[615088]))
    }
    unknown result[62447] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615095] "expr temp" "maybe param" "maybe type" "temp"
    (615098 'move' call_tmp[615095](62437 call size _mt[243] x[62419]))
    unknown call_tmp[615100] "expr temp" "maybe param" "maybe type" "temp"
    (615103 'move' call_tmp[615100](62445 call * call_tmp[615095] call_type_tmp[491699]))
    (540921 'default init var' result[62447] call_tmp[615100])
    (62450 'end of statement')
    {
      unknown d[62476] "dead at end of block" "insert auto destroy"
      (540923 'init var' d[62476] 0)
      (475112 'end of statement')
      unknown tmp[62477] "maybe param" "temp"
      unknown call_tmp[615107] "expr temp" "maybe param" "maybe type" "temp"
      (615110 'move' call_tmp[615107](62454 call size _mt[243] x[62419]))
      unknown call_tmp[615112] "expr temp" "maybe param" "maybe type" "temp"
      (615115 'move' call_tmp[615112](62458 call - call_tmp[615107] 1))
      (62489 'move' tmp[62477](62487 call chpl_compute_low_param_loop_bound 0 call_tmp[615112]))
      unknown tmp[62478] "maybe param" "temp"
      unknown call_tmp[615119] "expr temp" "maybe param" "maybe type" "temp"
      (615122 'move' call_tmp[615119](62496 call size _mt[243] x[62419]))
      unknown call_tmp[615124] "expr temp" "maybe param" "maybe type" "temp"
      (615127 'move' call_tmp[615124](62494 call - call_tmp[615119] 1))
      (62502 'move' tmp[62478](62500 call chpl_compute_high_param_loop_bound 0 call_tmp[615124]))
      unknown tmp[62479] "maybe param" "temp"
      (62505 'move' tmp[62479] 1)
      ParamForLoop[62507]
      { d[62476] tmp[62477] tmp[62478] tmp[62479]
        unknown call_tmp[615129] "expr temp" "maybe param" "maybe type" "temp"
        (615132 'move' call_tmp[615129](62465 call result[62447] d[62476]))
        unknown call_tmp[615134] "expr temp" "maybe param" "maybe type" "temp"
        (615137 'move' call_tmp[615134](62469 call x[62419] d[62476]))
        unknown call_tmp[615139] "expr temp" "maybe param" "maybe type" "temp"
        (615142 'move' call_tmp[615139](62471 call / call_tmp[615134] y[62429]))
        (62473 call = call_tmp[615129] call_tmp[615139])
        (475113 'end of statement' result[62447] d[62476] d[62476])
      }
      label _unused_continueLabel[62481]
      label _breakLabel[62480]
    }
    (508805 'move' ret[508800](508804 'deref' result[62447]))
    gotoReturn _end_/[508798] _end_/[508798]
    (475117 'end of statement' result[62447])
    label _end_/[508798]
    (508802 return ret[508800])
  }
  where {
    (62435 call isHomogeneousTuple x[62419])
  }
  function /[62529](arg x[62526]:_any[178](?), arg y[62532]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508811] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491705] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615144] "expr temp" "maybe param" "maybe type" "temp"
      (615147 'move' call_tmp[615144](62557 call y[62532] 0))
      (491709 'move' call_type_tmp[491705](62558 'typeof' call_tmp[615144]))
    }
    unknown result[62561] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615151] "expr temp" "maybe param" "maybe type" "temp"
    (615154 'move' call_tmp[615151](62551 call size _mt[243] y[62532]))
    unknown call_tmp[615156] "expr temp" "maybe param" "maybe type" "temp"
    (615159 'move' call_tmp[615156](62559 call * call_tmp[615151] call_type_tmp[491705]))
    (540925 'default init var' result[62561] call_tmp[615156])
    (62564 'end of statement')
    {
      unknown d[62590] "dead at end of block" "insert auto destroy"
      (540927 'init var' d[62590] 0)
      (475119 'end of statement')
      unknown tmp[62591] "maybe param" "temp"
      unknown call_tmp[615163] "expr temp" "maybe param" "maybe type" "temp"
      (615166 'move' call_tmp[615163](62568 call size _mt[243] y[62532]))
      unknown call_tmp[615168] "expr temp" "maybe param" "maybe type" "temp"
      (615171 'move' call_tmp[615168](62572 call - call_tmp[615163] 1))
      (62603 'move' tmp[62591](62601 call chpl_compute_low_param_loop_bound 0 call_tmp[615168]))
      unknown tmp[62592] "maybe param" "temp"
      unknown call_tmp[615175] "expr temp" "maybe param" "maybe type" "temp"
      (615178 'move' call_tmp[615175](62610 call size _mt[243] y[62532]))
      unknown call_tmp[615180] "expr temp" "maybe param" "maybe type" "temp"
      (615183 'move' call_tmp[615180](62608 call - call_tmp[615175] 1))
      (62616 'move' tmp[62592](62614 call chpl_compute_high_param_loop_bound 0 call_tmp[615180]))
      unknown tmp[62593] "maybe param" "temp"
      (62619 'move' tmp[62593] 1)
      ParamForLoop[62621]
      { d[62590] tmp[62591] tmp[62592] tmp[62593]
        unknown call_tmp[615185] "expr temp" "maybe param" "maybe type" "temp"
        (615188 'move' call_tmp[615185](62579 call result[62561] d[62590]))
        unknown call_tmp[615190] "expr temp" "maybe param" "maybe type" "temp"
        (615193 'move' call_tmp[615190](62584 call y[62532] d[62590]))
        unknown call_tmp[615195] "expr temp" "maybe param" "maybe type" "temp"
        (615198 'move' call_tmp[615195](62585 call / x[62526] call_tmp[615190]))
        (62587 call = call_tmp[615185] call_tmp[615195])
        (475120 'end of statement' result[62561] d[62590] d[62590])
      }
      label _unused_continueLabel[62595]
      label _breakLabel[62594]
    }
    (508816 'move' ret[508811](508815 'deref' result[62561]))
    gotoReturn _end_/[508809] _end_/[508809]
    (475124 'end of statement' result[62561])
    label _end_/[508809]
    (508813 return ret[508811])
  }
  where {
    unknown tmp[419025] "maybe param" "temp"
    (419036 'move' tmp[419025](62538 call isHomogeneousTuple y[62532]))
    unknown call_tmp[615200] "expr temp" "maybe param" "maybe type" "temp"
    (615203 'move' call_tmp[615200](419038 call _cond_invalid tmp[419025]))
    if call_tmp[615200]
    {
      (419041 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555150] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555151] "maybe param" "temp"
    unknown call_tmp[615205] "expr temp" "maybe param" "maybe type" "temp"
    (615208 'move' call_tmp[615205](419026 call isTrue tmp[419025]))
    (555156 'move' tmp[555151](555154 call _cond_test call_tmp[615205]))
    if tmp[555151]
    {
      { scopeless type
        unknown call_type_tmp[491711] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615210] "expr temp" "maybe param" "maybe type" "temp"
        (615213 'move' call_tmp[615210](62545 call y[62532] 0))
        (491715 'move' call_type_tmp[491711](62546 'typeof' call_tmp[615210]))
      }
      unknown tmp[555158] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615215] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615218 'move' call_tmp[615215](454782 'typeof' x[62526]))
      unknown call_tmp[615220] "expr temp" "maybe param" "maybe type" "temp"
      (615223 'move' call_tmp[615220](354215 'is_subtype' call_type_tmp[491711] call_tmp[615215]))
      (555160 'move' tmp[555158](419029 call isTrue call_tmp[615220]))
      (555165 'move' tmp[555150](555162 '_paramFoldLogical' tmp[555151] tmp[555158]))
    }
    {
      (555170 'move' tmp[555150](555167 '_paramFoldLogical' tmp[555151] 0))
    }
    (748208 call chpl_statementLevelSymbol tmp[555150])
  }
  function %[62642](arg x[62639]:_tuple[56199](?), arg y[62649] :
  unknown call_tmp[615225] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508822] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491717] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615230] "expr temp" "maybe param" "maybe type" "temp"
      (615233 'move' call_tmp[615230](62663 call x[62639] 0))
      (491721 'move' call_type_tmp[491717](62664 'typeof' call_tmp[615230]))
    }
    unknown result[62667] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615237] "expr temp" "maybe param" "maybe type" "temp"
    (615240 'move' call_tmp[615237](62657 call size _mt[243] x[62639]))
    unknown call_tmp[615242] "expr temp" "maybe param" "maybe type" "temp"
    (615245 'move' call_tmp[615242](62665 call * call_tmp[615237] call_type_tmp[491717]))
    (540929 'default init var' result[62667] call_tmp[615242])
    (62670 'end of statement')
    {
      unknown d[62696] "dead at end of block" "insert auto destroy"
      (540931 'init var' d[62696] 0)
      (475126 'end of statement')
      unknown tmp[62697] "maybe param" "temp"
      unknown call_tmp[615249] "expr temp" "maybe param" "maybe type" "temp"
      (615252 'move' call_tmp[615249](62674 call size _mt[243] x[62639]))
      unknown call_tmp[615254] "expr temp" "maybe param" "maybe type" "temp"
      (615257 'move' call_tmp[615254](62678 call - call_tmp[615249] 1))
      (62709 'move' tmp[62697](62707 call chpl_compute_low_param_loop_bound 0 call_tmp[615254]))
      unknown tmp[62698] "maybe param" "temp"
      unknown call_tmp[615261] "expr temp" "maybe param" "maybe type" "temp"
      (615264 'move' call_tmp[615261](62716 call size _mt[243] x[62639]))
      unknown call_tmp[615266] "expr temp" "maybe param" "maybe type" "temp"
      (615269 'move' call_tmp[615266](62714 call - call_tmp[615261] 1))
      (62722 'move' tmp[62698](62720 call chpl_compute_high_param_loop_bound 0 call_tmp[615266]))
      unknown tmp[62699] "maybe param" "temp"
      (62725 'move' tmp[62699] 1)
      ParamForLoop[62727]
      { d[62696] tmp[62697] tmp[62698] tmp[62699]
        unknown call_tmp[615271] "expr temp" "maybe param" "maybe type" "temp"
        (615274 'move' call_tmp[615271](62685 call result[62667] d[62696]))
        unknown call_tmp[615276] "expr temp" "maybe param" "maybe type" "temp"
        (615279 'move' call_tmp[615276](62689 call x[62639] d[62696]))
        unknown call_tmp[615281] "expr temp" "maybe param" "maybe type" "temp"
        (615284 'move' call_tmp[615281](62691 call % call_tmp[615276] y[62649]))
        (62693 call = call_tmp[615271] call_tmp[615281])
        (475127 'end of statement' result[62667] d[62696] d[62696])
      }
      label _unused_continueLabel[62701]
      label _breakLabel[62700]
    }
    (508827 'move' ret[508822](508826 'deref' result[62667]))
    gotoReturn _end_%[508820] _end_%[508820]
    (475131 'end of statement' result[62667])
    label _end_%[508820]
    (508824 return ret[508822])
  }
  where {
    (62655 call isHomogeneousTuple x[62639])
  }
  function %[62749](arg x[62746]:_any[178](?), arg y[62752]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508833] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491723] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615286] "expr temp" "maybe param" "maybe type" "temp"
      (615289 'move' call_tmp[615286](62777 call y[62752] 0))
      (491727 'move' call_type_tmp[491723](62778 'typeof' call_tmp[615286]))
    }
    unknown result[62781] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615293] "expr temp" "maybe param" "maybe type" "temp"
    (615296 'move' call_tmp[615293](62771 call size _mt[243] y[62752]))
    unknown call_tmp[615298] "expr temp" "maybe param" "maybe type" "temp"
    (615301 'move' call_tmp[615298](62779 call * call_tmp[615293] call_type_tmp[491723]))
    (540933 'default init var' result[62781] call_tmp[615298])
    (62784 'end of statement')
    {
      unknown d[62810] "dead at end of block" "insert auto destroy"
      (540935 'init var' d[62810] 0)
      (475133 'end of statement')
      unknown tmp[62811] "maybe param" "temp"
      unknown call_tmp[615305] "expr temp" "maybe param" "maybe type" "temp"
      (615308 'move' call_tmp[615305](62788 call size _mt[243] y[62752]))
      unknown call_tmp[615310] "expr temp" "maybe param" "maybe type" "temp"
      (615313 'move' call_tmp[615310](62792 call - call_tmp[615305] 1))
      (62823 'move' tmp[62811](62821 call chpl_compute_low_param_loop_bound 0 call_tmp[615310]))
      unknown tmp[62812] "maybe param" "temp"
      unknown call_tmp[615317] "expr temp" "maybe param" "maybe type" "temp"
      (615320 'move' call_tmp[615317](62830 call size _mt[243] y[62752]))
      unknown call_tmp[615322] "expr temp" "maybe param" "maybe type" "temp"
      (615325 'move' call_tmp[615322](62828 call - call_tmp[615317] 1))
      (62836 'move' tmp[62812](62834 call chpl_compute_high_param_loop_bound 0 call_tmp[615322]))
      unknown tmp[62813] "maybe param" "temp"
      (62839 'move' tmp[62813] 1)
      ParamForLoop[62841]
      { d[62810] tmp[62811] tmp[62812] tmp[62813]
        unknown call_tmp[615327] "expr temp" "maybe param" "maybe type" "temp"
        (615330 'move' call_tmp[615327](62799 call result[62781] d[62810]))
        unknown call_tmp[615332] "expr temp" "maybe param" "maybe type" "temp"
        (615335 'move' call_tmp[615332](62804 call y[62752] d[62810]))
        unknown call_tmp[615337] "expr temp" "maybe param" "maybe type" "temp"
        (615340 'move' call_tmp[615337](62805 call % x[62746] call_tmp[615332]))
        (62807 call = call_tmp[615327] call_tmp[615337])
        (475134 'end of statement' result[62781] d[62810] d[62810])
      }
      label _unused_continueLabel[62815]
      label _breakLabel[62814]
    }
    (508838 'move' ret[508833](508837 'deref' result[62781]))
    gotoReturn _end_%[508831] _end_%[508831]
    (475138 'end of statement' result[62781])
    label _end_%[508831]
    (508835 return ret[508833])
  }
  where {
    unknown tmp[419046] "maybe param" "temp"
    (419057 'move' tmp[419046](62758 call isHomogeneousTuple y[62752]))
    unknown call_tmp[615342] "expr temp" "maybe param" "maybe type" "temp"
    (615345 'move' call_tmp[615342](419059 call _cond_invalid tmp[419046]))
    if call_tmp[615342]
    {
      (419062 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555177] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555178] "maybe param" "temp"
    unknown call_tmp[615347] "expr temp" "maybe param" "maybe type" "temp"
    (615350 'move' call_tmp[615347](419047 call isTrue tmp[419046]))
    (555183 'move' tmp[555178](555181 call _cond_test call_tmp[615347]))
    if tmp[555178]
    {
      { scopeless type
        unknown call_type_tmp[491729] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615352] "expr temp" "maybe param" "maybe type" "temp"
        (615355 'move' call_tmp[615352](62765 call y[62752] 0))
        (491733 'move' call_type_tmp[491729](62766 'typeof' call_tmp[615352]))
      }
      unknown tmp[555185] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615357] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615360 'move' call_tmp[615357](454784 'typeof' x[62746]))
      unknown call_tmp[615362] "expr temp" "maybe param" "maybe type" "temp"
      (615365 'move' call_tmp[615362](354216 'is_subtype' call_type_tmp[491729] call_tmp[615357]))
      (555187 'move' tmp[555185](419050 call isTrue call_tmp[615362]))
      (555192 'move' tmp[555177](555189 '_paramFoldLogical' tmp[555178] tmp[555185]))
    }
    {
      (555197 'move' tmp[555177](555194 '_paramFoldLogical' tmp[555178] 0))
    }
    (748210 call chpl_statementLevelSymbol tmp[555177])
  }
  function **[62862](arg x[62859]:_tuple[56199](?), arg y[62869] :
  unknown call_tmp[615367] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508844] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491735] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615372] "expr temp" "maybe param" "maybe type" "temp"
      (615375 'move' call_tmp[615372](62883 call x[62859] 0))
      (491739 'move' call_type_tmp[491735](62884 'typeof' call_tmp[615372]))
    }
    unknown result[62887] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615379] "expr temp" "maybe param" "maybe type" "temp"
    (615382 'move' call_tmp[615379](62877 call size _mt[243] x[62859]))
    unknown call_tmp[615384] "expr temp" "maybe param" "maybe type" "temp"
    (615387 'move' call_tmp[615384](62885 call * call_tmp[615379] call_type_tmp[491735]))
    (540937 'default init var' result[62887] call_tmp[615384])
    (62890 'end of statement')
    {
      unknown d[62916] "dead at end of block" "insert auto destroy"
      (540939 'init var' d[62916] 0)
      (475140 'end of statement')
      unknown tmp[62917] "maybe param" "temp"
      unknown call_tmp[615391] "expr temp" "maybe param" "maybe type" "temp"
      (615394 'move' call_tmp[615391](62894 call size _mt[243] x[62859]))
      unknown call_tmp[615396] "expr temp" "maybe param" "maybe type" "temp"
      (615399 'move' call_tmp[615396](62898 call - call_tmp[615391] 1))
      (62929 'move' tmp[62917](62927 call chpl_compute_low_param_loop_bound 0 call_tmp[615396]))
      unknown tmp[62918] "maybe param" "temp"
      unknown call_tmp[615403] "expr temp" "maybe param" "maybe type" "temp"
      (615406 'move' call_tmp[615403](62936 call size _mt[243] x[62859]))
      unknown call_tmp[615408] "expr temp" "maybe param" "maybe type" "temp"
      (615411 'move' call_tmp[615408](62934 call - call_tmp[615403] 1))
      (62942 'move' tmp[62918](62940 call chpl_compute_high_param_loop_bound 0 call_tmp[615408]))
      unknown tmp[62919] "maybe param" "temp"
      (62945 'move' tmp[62919] 1)
      ParamForLoop[62947]
      { d[62916] tmp[62917] tmp[62918] tmp[62919]
        unknown call_tmp[615413] "expr temp" "maybe param" "maybe type" "temp"
        (615416 'move' call_tmp[615413](62905 call result[62887] d[62916]))
        unknown call_tmp[615418] "expr temp" "maybe param" "maybe type" "temp"
        (615421 'move' call_tmp[615418](62909 call x[62859] d[62916]))
        unknown call_tmp[615423] "expr temp" "maybe param" "maybe type" "temp"
        (615426 'move' call_tmp[615423](62911 call ** call_tmp[615418] y[62869]))
        (62913 call = call_tmp[615413] call_tmp[615423])
        (475141 'end of statement' result[62887] d[62916] d[62916])
      }
      label _unused_continueLabel[62921]
      label _breakLabel[62920]
    }
    (508849 'move' ret[508844](508848 'deref' result[62887]))
    gotoReturn _end_**[508842] _end_**[508842]
    (475145 'end of statement' result[62887])
    label _end_**[508842]
    (508846 return ret[508844])
  }
  where {
    (62875 call isHomogeneousTuple x[62859])
  }
  function **[62969](arg x[62966]:_any[178](?), arg y[62972]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508855] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491741] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615428] "expr temp" "maybe param" "maybe type" "temp"
      (615431 'move' call_tmp[615428](62997 call y[62972] 0))
      (491745 'move' call_type_tmp[491741](62998 'typeof' call_tmp[615428]))
    }
    unknown result[63001] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615435] "expr temp" "maybe param" "maybe type" "temp"
    (615438 'move' call_tmp[615435](62991 call size _mt[243] y[62972]))
    unknown call_tmp[615440] "expr temp" "maybe param" "maybe type" "temp"
    (615443 'move' call_tmp[615440](62999 call * call_tmp[615435] call_type_tmp[491741]))
    (540941 'default init var' result[63001] call_tmp[615440])
    (63004 'end of statement')
    {
      unknown d[63030] "dead at end of block" "insert auto destroy"
      (540943 'init var' d[63030] 0)
      (475147 'end of statement')
      unknown tmp[63031] "maybe param" "temp"
      unknown call_tmp[615447] "expr temp" "maybe param" "maybe type" "temp"
      (615450 'move' call_tmp[615447](63008 call size _mt[243] y[62972]))
      unknown call_tmp[615452] "expr temp" "maybe param" "maybe type" "temp"
      (615455 'move' call_tmp[615452](63012 call - call_tmp[615447] 1))
      (63043 'move' tmp[63031](63041 call chpl_compute_low_param_loop_bound 0 call_tmp[615452]))
      unknown tmp[63032] "maybe param" "temp"
      unknown call_tmp[615459] "expr temp" "maybe param" "maybe type" "temp"
      (615462 'move' call_tmp[615459](63050 call size _mt[243] y[62972]))
      unknown call_tmp[615464] "expr temp" "maybe param" "maybe type" "temp"
      (615467 'move' call_tmp[615464](63048 call - call_tmp[615459] 1))
      (63056 'move' tmp[63032](63054 call chpl_compute_high_param_loop_bound 0 call_tmp[615464]))
      unknown tmp[63033] "maybe param" "temp"
      (63059 'move' tmp[63033] 1)
      ParamForLoop[63061]
      { d[63030] tmp[63031] tmp[63032] tmp[63033]
        unknown call_tmp[615469] "expr temp" "maybe param" "maybe type" "temp"
        (615472 'move' call_tmp[615469](63019 call result[63001] d[63030]))
        unknown call_tmp[615474] "expr temp" "maybe param" "maybe type" "temp"
        (615477 'move' call_tmp[615474](63024 call y[62972] d[63030]))
        unknown call_tmp[615479] "expr temp" "maybe param" "maybe type" "temp"
        (615482 'move' call_tmp[615479](63025 call ** x[62966] call_tmp[615474]))
        (63027 call = call_tmp[615469] call_tmp[615479])
        (475148 'end of statement' result[63001] d[63030] d[63030])
      }
      label _unused_continueLabel[63035]
      label _breakLabel[63034]
    }
    (508860 'move' ret[508855](508859 'deref' result[63001]))
    gotoReturn _end_**[508853] _end_**[508853]
    (475152 'end of statement' result[63001])
    label _end_**[508853]
    (508857 return ret[508855])
  }
  where {
    unknown tmp[419067] "maybe param" "temp"
    (419078 'move' tmp[419067](62978 call isHomogeneousTuple y[62972]))
    unknown call_tmp[615484] "expr temp" "maybe param" "maybe type" "temp"
    (615487 'move' call_tmp[615484](419080 call _cond_invalid tmp[419067]))
    if call_tmp[615484]
    {
      (419083 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555204] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555205] "maybe param" "temp"
    unknown call_tmp[615489] "expr temp" "maybe param" "maybe type" "temp"
    (615492 'move' call_tmp[615489](419068 call isTrue tmp[419067]))
    (555210 'move' tmp[555205](555208 call _cond_test call_tmp[615489]))
    if tmp[555205]
    {
      { scopeless type
        unknown call_type_tmp[491747] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615494] "expr temp" "maybe param" "maybe type" "temp"
        (615497 'move' call_tmp[615494](62985 call y[62972] 0))
        (491751 'move' call_type_tmp[491747](62986 'typeof' call_tmp[615494]))
      }
      unknown tmp[555212] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615499] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615502 'move' call_tmp[615499](454786 'typeof' x[62966]))
      unknown call_tmp[615504] "expr temp" "maybe param" "maybe type" "temp"
      (615507 'move' call_tmp[615504](354217 'is_subtype' call_type_tmp[491747] call_tmp[615499]))
      (555214 'move' tmp[555212](419071 call isTrue call_tmp[615504]))
      (555219 'move' tmp[555204](555216 '_paramFoldLogical' tmp[555205] tmp[555212]))
    }
    {
      (555224 'move' tmp[555204](555221 '_paramFoldLogical' tmp[555205] 0))
    }
    (748212 call chpl_statementLevelSymbol tmp[555204])
  }
  function &[63082](arg x[63079]:_tuple[56199](?), arg y[63089] :
  unknown call_tmp[615509] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508866] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491753] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615514] "expr temp" "maybe param" "maybe type" "temp"
      (615517 'move' call_tmp[615514](63103 call x[63079] 0))
      (491757 'move' call_type_tmp[491753](63104 'typeof' call_tmp[615514]))
    }
    unknown result[63107] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615521] "expr temp" "maybe param" "maybe type" "temp"
    (615524 'move' call_tmp[615521](63097 call size _mt[243] x[63079]))
    unknown call_tmp[615526] "expr temp" "maybe param" "maybe type" "temp"
    (615529 'move' call_tmp[615526](63105 call * call_tmp[615521] call_type_tmp[491753]))
    (540945 'default init var' result[63107] call_tmp[615526])
    (63110 'end of statement')
    {
      unknown d[63136] "dead at end of block" "insert auto destroy"
      (540947 'init var' d[63136] 0)
      (475154 'end of statement')
      unknown tmp[63137] "maybe param" "temp"
      unknown call_tmp[615533] "expr temp" "maybe param" "maybe type" "temp"
      (615536 'move' call_tmp[615533](63114 call size _mt[243] x[63079]))
      unknown call_tmp[615538] "expr temp" "maybe param" "maybe type" "temp"
      (615541 'move' call_tmp[615538](63118 call - call_tmp[615533] 1))
      (63149 'move' tmp[63137](63147 call chpl_compute_low_param_loop_bound 0 call_tmp[615538]))
      unknown tmp[63138] "maybe param" "temp"
      unknown call_tmp[615545] "expr temp" "maybe param" "maybe type" "temp"
      (615548 'move' call_tmp[615545](63156 call size _mt[243] x[63079]))
      unknown call_tmp[615550] "expr temp" "maybe param" "maybe type" "temp"
      (615553 'move' call_tmp[615550](63154 call - call_tmp[615545] 1))
      (63162 'move' tmp[63138](63160 call chpl_compute_high_param_loop_bound 0 call_tmp[615550]))
      unknown tmp[63139] "maybe param" "temp"
      (63165 'move' tmp[63139] 1)
      ParamForLoop[63167]
      { d[63136] tmp[63137] tmp[63138] tmp[63139]
        unknown call_tmp[615555] "expr temp" "maybe param" "maybe type" "temp"
        (615558 'move' call_tmp[615555](63125 call result[63107] d[63136]))
        unknown call_tmp[615560] "expr temp" "maybe param" "maybe type" "temp"
        (615563 'move' call_tmp[615560](63129 call x[63079] d[63136]))
        unknown call_tmp[615565] "expr temp" "maybe param" "maybe type" "temp"
        (615568 'move' call_tmp[615565](63131 call & call_tmp[615560] y[63089]))
        (63133 call = call_tmp[615555] call_tmp[615565])
        (475155 'end of statement' result[63107] d[63136] d[63136])
      }
      label _unused_continueLabel[63141]
      label _breakLabel[63140]
    }
    (508871 'move' ret[508866](508870 'deref' result[63107]))
    gotoReturn _end_&[508864] _end_&[508864]
    (475159 'end of statement' result[63107])
    label _end_&[508864]
    (508868 return ret[508866])
  }
  where {
    (63095 call isHomogeneousTuple x[63079])
  }
  function &[63189](arg x[63186]:_any[178](?), arg y[63192]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508877] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491759] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615570] "expr temp" "maybe param" "maybe type" "temp"
      (615573 'move' call_tmp[615570](63217 call y[63192] 0))
      (491763 'move' call_type_tmp[491759](63218 'typeof' call_tmp[615570]))
    }
    unknown result[63221] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615577] "expr temp" "maybe param" "maybe type" "temp"
    (615580 'move' call_tmp[615577](63211 call size _mt[243] y[63192]))
    unknown call_tmp[615582] "expr temp" "maybe param" "maybe type" "temp"
    (615585 'move' call_tmp[615582](63219 call * call_tmp[615577] call_type_tmp[491759]))
    (540949 'default init var' result[63221] call_tmp[615582])
    (63224 'end of statement')
    {
      unknown d[63250] "dead at end of block" "insert auto destroy"
      (540951 'init var' d[63250] 0)
      (475161 'end of statement')
      unknown tmp[63251] "maybe param" "temp"
      unknown call_tmp[615589] "expr temp" "maybe param" "maybe type" "temp"
      (615592 'move' call_tmp[615589](63228 call size _mt[243] y[63192]))
      unknown call_tmp[615594] "expr temp" "maybe param" "maybe type" "temp"
      (615597 'move' call_tmp[615594](63232 call - call_tmp[615589] 1))
      (63263 'move' tmp[63251](63261 call chpl_compute_low_param_loop_bound 0 call_tmp[615594]))
      unknown tmp[63252] "maybe param" "temp"
      unknown call_tmp[615601] "expr temp" "maybe param" "maybe type" "temp"
      (615604 'move' call_tmp[615601](63270 call size _mt[243] y[63192]))
      unknown call_tmp[615606] "expr temp" "maybe param" "maybe type" "temp"
      (615609 'move' call_tmp[615606](63268 call - call_tmp[615601] 1))
      (63276 'move' tmp[63252](63274 call chpl_compute_high_param_loop_bound 0 call_tmp[615606]))
      unknown tmp[63253] "maybe param" "temp"
      (63279 'move' tmp[63253] 1)
      ParamForLoop[63281]
      { d[63250] tmp[63251] tmp[63252] tmp[63253]
        unknown call_tmp[615611] "expr temp" "maybe param" "maybe type" "temp"
        (615614 'move' call_tmp[615611](63239 call result[63221] d[63250]))
        unknown call_tmp[615616] "expr temp" "maybe param" "maybe type" "temp"
        (615619 'move' call_tmp[615616](63244 call y[63192] d[63250]))
        unknown call_tmp[615621] "expr temp" "maybe param" "maybe type" "temp"
        (615624 'move' call_tmp[615621](63245 call & x[63186] call_tmp[615616]))
        (63247 call = call_tmp[615611] call_tmp[615621])
        (475162 'end of statement' result[63221] d[63250] d[63250])
      }
      label _unused_continueLabel[63255]
      label _breakLabel[63254]
    }
    (508882 'move' ret[508877](508881 'deref' result[63221]))
    gotoReturn _end_&[508875] _end_&[508875]
    (475166 'end of statement' result[63221])
    label _end_&[508875]
    (508879 return ret[508877])
  }
  where {
    unknown tmp[419088] "maybe param" "temp"
    (419099 'move' tmp[419088](63198 call isHomogeneousTuple y[63192]))
    unknown call_tmp[615626] "expr temp" "maybe param" "maybe type" "temp"
    (615629 'move' call_tmp[615626](419101 call _cond_invalid tmp[419088]))
    if call_tmp[615626]
    {
      (419104 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555231] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555232] "maybe param" "temp"
    unknown call_tmp[615631] "expr temp" "maybe param" "maybe type" "temp"
    (615634 'move' call_tmp[615631](419089 call isTrue tmp[419088]))
    (555237 'move' tmp[555232](555235 call _cond_test call_tmp[615631]))
    if tmp[555232]
    {
      { scopeless type
        unknown call_type_tmp[491765] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615636] "expr temp" "maybe param" "maybe type" "temp"
        (615639 'move' call_tmp[615636](63205 call y[63192] 0))
        (491769 'move' call_type_tmp[491765](63206 'typeof' call_tmp[615636]))
      }
      unknown tmp[555239] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615641] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615644 'move' call_tmp[615641](454788 'typeof' x[63186]))
      unknown call_tmp[615646] "expr temp" "maybe param" "maybe type" "temp"
      (615649 'move' call_tmp[615646](354218 'is_subtype' call_type_tmp[491765] call_tmp[615641]))
      (555241 'move' tmp[555239](419092 call isTrue call_tmp[615646]))
      (555246 'move' tmp[555231](555243 '_paramFoldLogical' tmp[555232] tmp[555239]))
    }
    {
      (555251 'move' tmp[555231](555248 '_paramFoldLogical' tmp[555232] 0))
    }
    (748214 call chpl_statementLevelSymbol tmp[555231])
  }
  function |[63302](arg x[63299]:_tuple[56199](?), arg y[63309] :
  unknown call_tmp[615651] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508888] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491771] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615656] "expr temp" "maybe param" "maybe type" "temp"
      (615659 'move' call_tmp[615656](63323 call x[63299] 0))
      (491775 'move' call_type_tmp[491771](63324 'typeof' call_tmp[615656]))
    }
    unknown result[63327] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615663] "expr temp" "maybe param" "maybe type" "temp"
    (615666 'move' call_tmp[615663](63317 call size _mt[243] x[63299]))
    unknown call_tmp[615668] "expr temp" "maybe param" "maybe type" "temp"
    (615671 'move' call_tmp[615668](63325 call * call_tmp[615663] call_type_tmp[491771]))
    (540953 'default init var' result[63327] call_tmp[615668])
    (63330 'end of statement')
    {
      unknown d[63356] "dead at end of block" "insert auto destroy"
      (540955 'init var' d[63356] 0)
      (475168 'end of statement')
      unknown tmp[63357] "maybe param" "temp"
      unknown call_tmp[615675] "expr temp" "maybe param" "maybe type" "temp"
      (615678 'move' call_tmp[615675](63334 call size _mt[243] x[63299]))
      unknown call_tmp[615680] "expr temp" "maybe param" "maybe type" "temp"
      (615683 'move' call_tmp[615680](63338 call - call_tmp[615675] 1))
      (63369 'move' tmp[63357](63367 call chpl_compute_low_param_loop_bound 0 call_tmp[615680]))
      unknown tmp[63358] "maybe param" "temp"
      unknown call_tmp[615687] "expr temp" "maybe param" "maybe type" "temp"
      (615690 'move' call_tmp[615687](63376 call size _mt[243] x[63299]))
      unknown call_tmp[615692] "expr temp" "maybe param" "maybe type" "temp"
      (615695 'move' call_tmp[615692](63374 call - call_tmp[615687] 1))
      (63382 'move' tmp[63358](63380 call chpl_compute_high_param_loop_bound 0 call_tmp[615692]))
      unknown tmp[63359] "maybe param" "temp"
      (63385 'move' tmp[63359] 1)
      ParamForLoop[63387]
      { d[63356] tmp[63357] tmp[63358] tmp[63359]
        unknown call_tmp[615697] "expr temp" "maybe param" "maybe type" "temp"
        (615700 'move' call_tmp[615697](63345 call result[63327] d[63356]))
        unknown call_tmp[615702] "expr temp" "maybe param" "maybe type" "temp"
        (615705 'move' call_tmp[615702](63349 call x[63299] d[63356]))
        unknown call_tmp[615707] "expr temp" "maybe param" "maybe type" "temp"
        (615710 'move' call_tmp[615707](63351 call | call_tmp[615702] y[63309]))
        (63353 call = call_tmp[615697] call_tmp[615707])
        (475169 'end of statement' result[63327] d[63356] d[63356])
      }
      label _unused_continueLabel[63361]
      label _breakLabel[63360]
    }
    (508893 'move' ret[508888](508892 'deref' result[63327]))
    gotoReturn _end_|[508886] _end_|[508886]
    (475173 'end of statement' result[63327])
    label _end_|[508886]
    (508890 return ret[508888])
  }
  where {
    (63315 call isHomogeneousTuple x[63299])
  }
  function |[63409](arg x[63406]:_any[178](?), arg y[63412]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508899] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491777] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615712] "expr temp" "maybe param" "maybe type" "temp"
      (615715 'move' call_tmp[615712](63437 call y[63412] 0))
      (491781 'move' call_type_tmp[491777](63438 'typeof' call_tmp[615712]))
    }
    unknown result[63441] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615719] "expr temp" "maybe param" "maybe type" "temp"
    (615722 'move' call_tmp[615719](63431 call size _mt[243] y[63412]))
    unknown call_tmp[615724] "expr temp" "maybe param" "maybe type" "temp"
    (615727 'move' call_tmp[615724](63439 call * call_tmp[615719] call_type_tmp[491777]))
    (540957 'default init var' result[63441] call_tmp[615724])
    (63444 'end of statement')
    {
      unknown d[63470] "dead at end of block" "insert auto destroy"
      (540959 'init var' d[63470] 0)
      (475175 'end of statement')
      unknown tmp[63471] "maybe param" "temp"
      unknown call_tmp[615731] "expr temp" "maybe param" "maybe type" "temp"
      (615734 'move' call_tmp[615731](63448 call size _mt[243] y[63412]))
      unknown call_tmp[615736] "expr temp" "maybe param" "maybe type" "temp"
      (615739 'move' call_tmp[615736](63452 call - call_tmp[615731] 1))
      (63483 'move' tmp[63471](63481 call chpl_compute_low_param_loop_bound 0 call_tmp[615736]))
      unknown tmp[63472] "maybe param" "temp"
      unknown call_tmp[615743] "expr temp" "maybe param" "maybe type" "temp"
      (615746 'move' call_tmp[615743](63490 call size _mt[243] y[63412]))
      unknown call_tmp[615748] "expr temp" "maybe param" "maybe type" "temp"
      (615751 'move' call_tmp[615748](63488 call - call_tmp[615743] 1))
      (63496 'move' tmp[63472](63494 call chpl_compute_high_param_loop_bound 0 call_tmp[615748]))
      unknown tmp[63473] "maybe param" "temp"
      (63499 'move' tmp[63473] 1)
      ParamForLoop[63501]
      { d[63470] tmp[63471] tmp[63472] tmp[63473]
        unknown call_tmp[615753] "expr temp" "maybe param" "maybe type" "temp"
        (615756 'move' call_tmp[615753](63459 call result[63441] d[63470]))
        unknown call_tmp[615758] "expr temp" "maybe param" "maybe type" "temp"
        (615761 'move' call_tmp[615758](63464 call y[63412] d[63470]))
        unknown call_tmp[615763] "expr temp" "maybe param" "maybe type" "temp"
        (615766 'move' call_tmp[615763](63465 call | x[63406] call_tmp[615758]))
        (63467 call = call_tmp[615753] call_tmp[615763])
        (475176 'end of statement' result[63441] d[63470] d[63470])
      }
      label _unused_continueLabel[63475]
      label _breakLabel[63474]
    }
    (508904 'move' ret[508899](508903 'deref' result[63441]))
    gotoReturn _end_|[508897] _end_|[508897]
    (475180 'end of statement' result[63441])
    label _end_|[508897]
    (508901 return ret[508899])
  }
  where {
    unknown tmp[419109] "maybe param" "temp"
    (419120 'move' tmp[419109](63418 call isHomogeneousTuple y[63412]))
    unknown call_tmp[615768] "expr temp" "maybe param" "maybe type" "temp"
    (615771 'move' call_tmp[615768](419122 call _cond_invalid tmp[419109]))
    if call_tmp[615768]
    {
      (419125 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555258] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555259] "maybe param" "temp"
    unknown call_tmp[615773] "expr temp" "maybe param" "maybe type" "temp"
    (615776 'move' call_tmp[615773](419110 call isTrue tmp[419109]))
    (555264 'move' tmp[555259](555262 call _cond_test call_tmp[615773]))
    if tmp[555259]
    {
      { scopeless type
        unknown call_type_tmp[491783] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615778] "expr temp" "maybe param" "maybe type" "temp"
        (615781 'move' call_tmp[615778](63425 call y[63412] 0))
        (491787 'move' call_type_tmp[491783](63426 'typeof' call_tmp[615778]))
      }
      unknown tmp[555266] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615783] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615786 'move' call_tmp[615783](454790 'typeof' x[63406]))
      unknown call_tmp[615788] "expr temp" "maybe param" "maybe type" "temp"
      (615791 'move' call_tmp[615788](354219 'is_subtype' call_type_tmp[491783] call_tmp[615783]))
      (555268 'move' tmp[555266](419113 call isTrue call_tmp[615788]))
      (555273 'move' tmp[555258](555270 '_paramFoldLogical' tmp[555259] tmp[555266]))
    }
    {
      (555278 'move' tmp[555258](555275 '_paramFoldLogical' tmp[555259] 0))
    }
    (748216 call chpl_statementLevelSymbol tmp[555258])
  }
  function ^[63522](arg x[63519]:_tuple[56199](?), arg y[63529] :
  unknown call_tmp[615793] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508910] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491789] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615798] "expr temp" "maybe param" "maybe type" "temp"
      (615801 'move' call_tmp[615798](63543 call x[63519] 0))
      (491793 'move' call_type_tmp[491789](63544 'typeof' call_tmp[615798]))
    }
    unknown result[63547] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615805] "expr temp" "maybe param" "maybe type" "temp"
    (615808 'move' call_tmp[615805](63537 call size _mt[243] x[63519]))
    unknown call_tmp[615810] "expr temp" "maybe param" "maybe type" "temp"
    (615813 'move' call_tmp[615810](63545 call * call_tmp[615805] call_type_tmp[491789]))
    (540961 'default init var' result[63547] call_tmp[615810])
    (63550 'end of statement')
    {
      unknown d[63576] "dead at end of block" "insert auto destroy"
      (540963 'init var' d[63576] 0)
      (475182 'end of statement')
      unknown tmp[63577] "maybe param" "temp"
      unknown call_tmp[615817] "expr temp" "maybe param" "maybe type" "temp"
      (615820 'move' call_tmp[615817](63554 call size _mt[243] x[63519]))
      unknown call_tmp[615822] "expr temp" "maybe param" "maybe type" "temp"
      (615825 'move' call_tmp[615822](63558 call - call_tmp[615817] 1))
      (63589 'move' tmp[63577](63587 call chpl_compute_low_param_loop_bound 0 call_tmp[615822]))
      unknown tmp[63578] "maybe param" "temp"
      unknown call_tmp[615829] "expr temp" "maybe param" "maybe type" "temp"
      (615832 'move' call_tmp[615829](63596 call size _mt[243] x[63519]))
      unknown call_tmp[615834] "expr temp" "maybe param" "maybe type" "temp"
      (615837 'move' call_tmp[615834](63594 call - call_tmp[615829] 1))
      (63602 'move' tmp[63578](63600 call chpl_compute_high_param_loop_bound 0 call_tmp[615834]))
      unknown tmp[63579] "maybe param" "temp"
      (63605 'move' tmp[63579] 1)
      ParamForLoop[63607]
      { d[63576] tmp[63577] tmp[63578] tmp[63579]
        unknown call_tmp[615839] "expr temp" "maybe param" "maybe type" "temp"
        (615842 'move' call_tmp[615839](63565 call result[63547] d[63576]))
        unknown call_tmp[615844] "expr temp" "maybe param" "maybe type" "temp"
        (615847 'move' call_tmp[615844](63569 call x[63519] d[63576]))
        unknown call_tmp[615849] "expr temp" "maybe param" "maybe type" "temp"
        (615852 'move' call_tmp[615849](63571 call ^ call_tmp[615844] y[63529]))
        (63573 call = call_tmp[615839] call_tmp[615849])
        (475183 'end of statement' result[63547] d[63576] d[63576])
      }
      label _unused_continueLabel[63581]
      label _breakLabel[63580]
    }
    (508915 'move' ret[508910](508914 'deref' result[63547]))
    gotoReturn _end_^[508908] _end_^[508908]
    (475187 'end of statement' result[63547])
    label _end_^[508908]
    (508912 return ret[508910])
  }
  where {
    (63535 call isHomogeneousTuple x[63519])
  }
  function ^[63629](arg x[63626]:_any[178](?), arg y[63632]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508921] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491795] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615854] "expr temp" "maybe param" "maybe type" "temp"
      (615857 'move' call_tmp[615854](63657 call y[63632] 0))
      (491799 'move' call_type_tmp[491795](63658 'typeof' call_tmp[615854]))
    }
    unknown result[63661] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615861] "expr temp" "maybe param" "maybe type" "temp"
    (615864 'move' call_tmp[615861](63651 call size _mt[243] y[63632]))
    unknown call_tmp[615866] "expr temp" "maybe param" "maybe type" "temp"
    (615869 'move' call_tmp[615866](63659 call * call_tmp[615861] call_type_tmp[491795]))
    (540965 'default init var' result[63661] call_tmp[615866])
    (63664 'end of statement')
    {
      unknown d[63690] "dead at end of block" "insert auto destroy"
      (540967 'init var' d[63690] 0)
      (475189 'end of statement')
      unknown tmp[63691] "maybe param" "temp"
      unknown call_tmp[615873] "expr temp" "maybe param" "maybe type" "temp"
      (615876 'move' call_tmp[615873](63668 call size _mt[243] y[63632]))
      unknown call_tmp[615878] "expr temp" "maybe param" "maybe type" "temp"
      (615881 'move' call_tmp[615878](63672 call - call_tmp[615873] 1))
      (63703 'move' tmp[63691](63701 call chpl_compute_low_param_loop_bound 0 call_tmp[615878]))
      unknown tmp[63692] "maybe param" "temp"
      unknown call_tmp[615885] "expr temp" "maybe param" "maybe type" "temp"
      (615888 'move' call_tmp[615885](63710 call size _mt[243] y[63632]))
      unknown call_tmp[615890] "expr temp" "maybe param" "maybe type" "temp"
      (615893 'move' call_tmp[615890](63708 call - call_tmp[615885] 1))
      (63716 'move' tmp[63692](63714 call chpl_compute_high_param_loop_bound 0 call_tmp[615890]))
      unknown tmp[63693] "maybe param" "temp"
      (63719 'move' tmp[63693] 1)
      ParamForLoop[63721]
      { d[63690] tmp[63691] tmp[63692] tmp[63693]
        unknown call_tmp[615895] "expr temp" "maybe param" "maybe type" "temp"
        (615898 'move' call_tmp[615895](63679 call result[63661] d[63690]))
        unknown call_tmp[615900] "expr temp" "maybe param" "maybe type" "temp"
        (615903 'move' call_tmp[615900](63684 call y[63632] d[63690]))
        unknown call_tmp[615905] "expr temp" "maybe param" "maybe type" "temp"
        (615908 'move' call_tmp[615905](63685 call ^ x[63626] call_tmp[615900]))
        (63687 call = call_tmp[615895] call_tmp[615905])
        (475190 'end of statement' result[63661] d[63690] d[63690])
      }
      label _unused_continueLabel[63695]
      label _breakLabel[63694]
    }
    (508926 'move' ret[508921](508925 'deref' result[63661]))
    gotoReturn _end_^[508919] _end_^[508919]
    (475194 'end of statement' result[63661])
    label _end_^[508919]
    (508923 return ret[508921])
  }
  where {
    unknown tmp[419130] "maybe param" "temp"
    (419141 'move' tmp[419130](63638 call isHomogeneousTuple y[63632]))
    unknown call_tmp[615910] "expr temp" "maybe param" "maybe type" "temp"
    (615913 'move' call_tmp[615910](419143 call _cond_invalid tmp[419130]))
    if call_tmp[615910]
    {
      (419146 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555285] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555286] "maybe param" "temp"
    unknown call_tmp[615915] "expr temp" "maybe param" "maybe type" "temp"
    (615918 'move' call_tmp[615915](419131 call isTrue tmp[419130]))
    (555291 'move' tmp[555286](555289 call _cond_test call_tmp[615915]))
    if tmp[555286]
    {
      { scopeless type
        unknown call_type_tmp[491801] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[615920] "expr temp" "maybe param" "maybe type" "temp"
        (615923 'move' call_tmp[615920](63645 call y[63632] 0))
        (491805 'move' call_type_tmp[491801](63646 'typeof' call_tmp[615920]))
      }
      unknown tmp[555293] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[615925] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (615928 'move' call_tmp[615925](454792 'typeof' x[63626]))
      unknown call_tmp[615930] "expr temp" "maybe param" "maybe type" "temp"
      (615933 'move' call_tmp[615930](354220 'is_subtype' call_type_tmp[491801] call_tmp[615925]))
      (555295 'move' tmp[555293](419134 call isTrue call_tmp[615930]))
      (555300 'move' tmp[555285](555297 '_paramFoldLogical' tmp[555286] tmp[555293]))
    }
    {
      (555305 'move' tmp[555285](555302 '_paramFoldLogical' tmp[555286] 0))
    }
    (748218 call chpl_statementLevelSymbol tmp[555285])
  }
  function <<[63742](arg x[63739]:_tuple[56199](?), arg y[63749] :
  unknown call_tmp[615935] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508932] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491807] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615940] "expr temp" "maybe param" "maybe type" "temp"
      (615943 'move' call_tmp[615940](63763 call x[63739] 0))
      (491811 'move' call_type_tmp[491807](63764 'typeof' call_tmp[615940]))
    }
    unknown result[63767] "dead at end of block" "insert auto destroy"
    unknown call_tmp[615947] "expr temp" "maybe param" "maybe type" "temp"
    (615950 'move' call_tmp[615947](63757 call size _mt[243] x[63739]))
    unknown call_tmp[615952] "expr temp" "maybe param" "maybe type" "temp"
    (615955 'move' call_tmp[615952](63765 call * call_tmp[615947] call_type_tmp[491807]))
    (540969 'default init var' result[63767] call_tmp[615952])
    (63770 'end of statement')
    {
      unknown d[63796] "dead at end of block" "insert auto destroy"
      (540971 'init var' d[63796] 0)
      (475196 'end of statement')
      unknown tmp[63797] "maybe param" "temp"
      unknown call_tmp[615959] "expr temp" "maybe param" "maybe type" "temp"
      (615962 'move' call_tmp[615959](63774 call size _mt[243] x[63739]))
      unknown call_tmp[615964] "expr temp" "maybe param" "maybe type" "temp"
      (615967 'move' call_tmp[615964](63778 call - call_tmp[615959] 1))
      (63809 'move' tmp[63797](63807 call chpl_compute_low_param_loop_bound 0 call_tmp[615964]))
      unknown tmp[63798] "maybe param" "temp"
      unknown call_tmp[615971] "expr temp" "maybe param" "maybe type" "temp"
      (615974 'move' call_tmp[615971](63816 call size _mt[243] x[63739]))
      unknown call_tmp[615976] "expr temp" "maybe param" "maybe type" "temp"
      (615979 'move' call_tmp[615976](63814 call - call_tmp[615971] 1))
      (63822 'move' tmp[63798](63820 call chpl_compute_high_param_loop_bound 0 call_tmp[615976]))
      unknown tmp[63799] "maybe param" "temp"
      (63825 'move' tmp[63799] 1)
      ParamForLoop[63827]
      { d[63796] tmp[63797] tmp[63798] tmp[63799]
        unknown call_tmp[615981] "expr temp" "maybe param" "maybe type" "temp"
        (615984 'move' call_tmp[615981](63785 call result[63767] d[63796]))
        unknown call_tmp[615986] "expr temp" "maybe param" "maybe type" "temp"
        (615989 'move' call_tmp[615986](63789 call x[63739] d[63796]))
        unknown call_tmp[615991] "expr temp" "maybe param" "maybe type" "temp"
        (615994 'move' call_tmp[615991](63791 call << call_tmp[615986] y[63749]))
        (63793 call = call_tmp[615981] call_tmp[615991])
        (475197 'end of statement' result[63767] d[63796] d[63796])
      }
      label _unused_continueLabel[63801]
      label _breakLabel[63800]
    }
    (508937 'move' ret[508932](508936 'deref' result[63767]))
    gotoReturn _end_<<[508930] _end_<<[508930]
    (475201 'end of statement' result[63767])
    label _end_<<[508930]
    (508934 return ret[508932])
  }
  where {
    (63755 call isHomogeneousTuple x[63739])
  }
  function <<[63849](arg x[63846]:_any[178](?), arg y[63852]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508943] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491813] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[615996] "expr temp" "maybe param" "maybe type" "temp"
      (615999 'move' call_tmp[615996](63877 call y[63852] 0))
      (491817 'move' call_type_tmp[491813](63878 'typeof' call_tmp[615996]))
    }
    unknown result[63881] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616003] "expr temp" "maybe param" "maybe type" "temp"
    (616006 'move' call_tmp[616003](63871 call size _mt[243] y[63852]))
    unknown call_tmp[616008] "expr temp" "maybe param" "maybe type" "temp"
    (616011 'move' call_tmp[616008](63879 call * call_tmp[616003] call_type_tmp[491813]))
    (540973 'default init var' result[63881] call_tmp[616008])
    (63884 'end of statement')
    {
      unknown d[63910] "dead at end of block" "insert auto destroy"
      (540975 'init var' d[63910] 0)
      (475203 'end of statement')
      unknown tmp[63911] "maybe param" "temp"
      unknown call_tmp[616015] "expr temp" "maybe param" "maybe type" "temp"
      (616018 'move' call_tmp[616015](63888 call size _mt[243] y[63852]))
      unknown call_tmp[616020] "expr temp" "maybe param" "maybe type" "temp"
      (616023 'move' call_tmp[616020](63892 call - call_tmp[616015] 1))
      (63923 'move' tmp[63911](63921 call chpl_compute_low_param_loop_bound 0 call_tmp[616020]))
      unknown tmp[63912] "maybe param" "temp"
      unknown call_tmp[616027] "expr temp" "maybe param" "maybe type" "temp"
      (616030 'move' call_tmp[616027](63930 call size _mt[243] y[63852]))
      unknown call_tmp[616032] "expr temp" "maybe param" "maybe type" "temp"
      (616035 'move' call_tmp[616032](63928 call - call_tmp[616027] 1))
      (63936 'move' tmp[63912](63934 call chpl_compute_high_param_loop_bound 0 call_tmp[616032]))
      unknown tmp[63913] "maybe param" "temp"
      (63939 'move' tmp[63913] 1)
      ParamForLoop[63941]
      { d[63910] tmp[63911] tmp[63912] tmp[63913]
        unknown call_tmp[616037] "expr temp" "maybe param" "maybe type" "temp"
        (616040 'move' call_tmp[616037](63899 call result[63881] d[63910]))
        unknown call_tmp[616042] "expr temp" "maybe param" "maybe type" "temp"
        (616045 'move' call_tmp[616042](63904 call y[63852] d[63910]))
        unknown call_tmp[616047] "expr temp" "maybe param" "maybe type" "temp"
        (616050 'move' call_tmp[616047](63905 call << x[63846] call_tmp[616042]))
        (63907 call = call_tmp[616037] call_tmp[616047])
        (475204 'end of statement' result[63881] d[63910] d[63910])
      }
      label _unused_continueLabel[63915]
      label _breakLabel[63914]
    }
    (508948 'move' ret[508943](508947 'deref' result[63881]))
    gotoReturn _end_<<[508941] _end_<<[508941]
    (475208 'end of statement' result[63881])
    label _end_<<[508941]
    (508945 return ret[508943])
  }
  where {
    unknown tmp[419151] "maybe param" "temp"
    (419162 'move' tmp[419151](63858 call isHomogeneousTuple y[63852]))
    unknown call_tmp[616052] "expr temp" "maybe param" "maybe type" "temp"
    (616055 'move' call_tmp[616052](419164 call _cond_invalid tmp[419151]))
    if call_tmp[616052]
    {
      (419167 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555312] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555313] "maybe param" "temp"
    unknown call_tmp[616057] "expr temp" "maybe param" "maybe type" "temp"
    (616060 'move' call_tmp[616057](419152 call isTrue tmp[419151]))
    (555318 'move' tmp[555313](555316 call _cond_test call_tmp[616057]))
    if tmp[555313]
    {
      { scopeless type
        unknown call_type_tmp[491819] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616062] "expr temp" "maybe param" "maybe type" "temp"
        (616065 'move' call_tmp[616062](63865 call y[63852] 0))
        (491823 'move' call_type_tmp[491819](63866 'typeof' call_tmp[616062]))
      }
      unknown tmp[555320] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616067] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616070 'move' call_tmp[616067](454794 'typeof' x[63846]))
      unknown call_tmp[616072] "expr temp" "maybe param" "maybe type" "temp"
      (616075 'move' call_tmp[616072](354221 'is_subtype' call_type_tmp[491819] call_tmp[616067]))
      (555322 'move' tmp[555320](419155 call isTrue call_tmp[616072]))
      (555327 'move' tmp[555312](555324 '_paramFoldLogical' tmp[555313] tmp[555320]))
    }
    {
      (555332 'move' tmp[555312](555329 '_paramFoldLogical' tmp[555313] 0))
    }
    (748220 call chpl_statementLevelSymbol tmp[555312])
  }
  function >>[63962](arg x[63959]:_tuple[56199](?), arg y[63969] :
  unknown call_tmp[616077] "expr temp" "maybe param" "maybe type" "temp") : _unknown[51] "inline"
  {
    unknown ret[508954] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491825] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616082] "expr temp" "maybe param" "maybe type" "temp"
      (616085 'move' call_tmp[616082](63983 call x[63959] 0))
      (491829 'move' call_type_tmp[491825](63984 'typeof' call_tmp[616082]))
    }
    unknown result[63987] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616089] "expr temp" "maybe param" "maybe type" "temp"
    (616092 'move' call_tmp[616089](63977 call size _mt[243] x[63959]))
    unknown call_tmp[616094] "expr temp" "maybe param" "maybe type" "temp"
    (616097 'move' call_tmp[616094](63985 call * call_tmp[616089] call_type_tmp[491825]))
    (540977 'default init var' result[63987] call_tmp[616094])
    (63990 'end of statement')
    {
      unknown d[64016] "dead at end of block" "insert auto destroy"
      (540979 'init var' d[64016] 0)
      (475210 'end of statement')
      unknown tmp[64017] "maybe param" "temp"
      unknown call_tmp[616101] "expr temp" "maybe param" "maybe type" "temp"
      (616104 'move' call_tmp[616101](63994 call size _mt[243] x[63959]))
      unknown call_tmp[616106] "expr temp" "maybe param" "maybe type" "temp"
      (616109 'move' call_tmp[616106](63998 call - call_tmp[616101] 1))
      (64029 'move' tmp[64017](64027 call chpl_compute_low_param_loop_bound 0 call_tmp[616106]))
      unknown tmp[64018] "maybe param" "temp"
      unknown call_tmp[616113] "expr temp" "maybe param" "maybe type" "temp"
      (616116 'move' call_tmp[616113](64036 call size _mt[243] x[63959]))
      unknown call_tmp[616118] "expr temp" "maybe param" "maybe type" "temp"
      (616121 'move' call_tmp[616118](64034 call - call_tmp[616113] 1))
      (64042 'move' tmp[64018](64040 call chpl_compute_high_param_loop_bound 0 call_tmp[616118]))
      unknown tmp[64019] "maybe param" "temp"
      (64045 'move' tmp[64019] 1)
      ParamForLoop[64047]
      { d[64016] tmp[64017] tmp[64018] tmp[64019]
        unknown call_tmp[616123] "expr temp" "maybe param" "maybe type" "temp"
        (616126 'move' call_tmp[616123](64005 call result[63987] d[64016]))
        unknown call_tmp[616128] "expr temp" "maybe param" "maybe type" "temp"
        (616131 'move' call_tmp[616128](64009 call x[63959] d[64016]))
        unknown call_tmp[616133] "expr temp" "maybe param" "maybe type" "temp"
        (616136 'move' call_tmp[616133](64011 call >> call_tmp[616128] y[63969]))
        (64013 call = call_tmp[616123] call_tmp[616133])
        (475211 'end of statement' result[63987] d[64016] d[64016])
      }
      label _unused_continueLabel[64021]
      label _breakLabel[64020]
    }
    (508959 'move' ret[508954](508958 'deref' result[63987]))
    gotoReturn _end_>>[508952] _end_>>[508952]
    (475215 'end of statement' result[63987])
    label _end_>>[508952]
    (508956 return ret[508954])
  }
  where {
    (63975 call isHomogeneousTuple x[63959])
  }
  function >>[64069](arg x[64066]:_any[178](?), arg y[64072]:_tuple[56199](?)) : _unknown[51] "inline"
  {
    unknown ret[508965] "RVV" "temp"
    { scopeless type
      unknown call_type_tmp[491831] "expr temp" "maybe type" "temp" "type variable"
      unknown call_tmp[616138] "expr temp" "maybe param" "maybe type" "temp"
      (616141 'move' call_tmp[616138](64097 call y[64072] 0))
      (491835 'move' call_type_tmp[491831](64098 'typeof' call_tmp[616138]))
    }
    unknown result[64101] "dead at end of block" "insert auto destroy"
    unknown call_tmp[616145] "expr temp" "maybe param" "maybe type" "temp"
    (616148 'move' call_tmp[616145](64091 call size _mt[243] y[64072]))
    unknown call_tmp[616150] "expr temp" "maybe param" "maybe type" "temp"
    (616153 'move' call_tmp[616150](64099 call * call_tmp[616145] call_type_tmp[491831]))
    (540981 'default init var' result[64101] call_tmp[616150])
    (64104 'end of statement')
    {
      unknown d[64130] "dead at end of block" "insert auto destroy"
      (540983 'init var' d[64130] 0)
      (475217 'end of statement')
      unknown tmp[64131] "maybe param" "temp"
      unknown call_tmp[616157] "expr temp" "maybe param" "maybe type" "temp"
      (616160 'move' call_tmp[616157](64108 call size _mt[243] y[64072]))
      unknown call_tmp[616162] "expr temp" "maybe param" "maybe type" "temp"
      (616165 'move' call_tmp[616162](64112 call - call_tmp[616157] 1))
      (64143 'move' tmp[64131](64141 call chpl_compute_low_param_loop_bound 0 call_tmp[616162]))
      unknown tmp[64132] "maybe param" "temp"
      unknown call_tmp[616169] "expr temp" "maybe param" "maybe type" "temp"
      (616172 'move' call_tmp[616169](64150 call size _mt[243] y[64072]))
      unknown call_tmp[616174] "expr temp" "maybe param" "maybe type" "temp"
      (616177 'move' call_tmp[616174](64148 call - call_tmp[616169] 1))
      (64156 'move' tmp[64132](64154 call chpl_compute_high_param_loop_bound 0 call_tmp[616174]))
      unknown tmp[64133] "maybe param" "temp"
      (64159 'move' tmp[64133] 1)
      ParamForLoop[64161]
      { d[64130] tmp[64131] tmp[64132] tmp[64133]
        unknown call_tmp[616179] "expr temp" "maybe param" "maybe type" "temp"
        (616182 'move' call_tmp[616179](64119 call result[64101] d[64130]))
        unknown call_tmp[616184] "expr temp" "maybe param" "maybe type" "temp"
        (616187 'move' call_tmp[616184](64124 call y[64072] d[64130]))
        unknown call_tmp[616189] "expr temp" "maybe param" "maybe type" "temp"
        (616192 'move' call_tmp[616189](64125 call >> x[64066] call_tmp[616184]))
        (64127 call = call_tmp[616179] call_tmp[616189])
        (475218 'end of statement' result[64101] d[64130] d[64130])
      }
      label _unused_continueLabel[64135]
      label _breakLabel[64134]
    }
    (508970 'move' ret[508965](508969 'deref' result[64101]))
    gotoReturn _end_>>[508963] _end_>>[508963]
    (475222 'end of statement' result[64101])
    label _end_>>[508963]
    (508967 return ret[508965])
  }
  where {
    unknown tmp[419172] "maybe param" "temp"
    (419183 'move' tmp[419172](64078 call isHomogeneousTuple y[64072]))
    unknown call_tmp[616194] "expr temp" "maybe param" "maybe type" "temp"
    (616197 'move' call_tmp[616194](419185 call _cond_invalid tmp[419172]))
    if call_tmp[616194]
    {
      (419188 call compilerError "cannot promote short-circuiting && operator")
    }
    unknown tmp[555339] "expr temp" "if-expr result" "insert auto destroy" "maybe type" "temp"
    unknown tmp[555340] "maybe param" "temp"
    unknown call_tmp[616199] "expr temp" "maybe param" "maybe type" "temp"
    (616202 'move' call_tmp[616199](419173 call isTrue tmp[419172]))
    (555345 'move' tmp[555340](555343 call _cond_test call_tmp[616199]))
    if tmp[555340]
    {
      { scopeless type
        unknown call_type_tmp[491837] "expr temp" "maybe type" "temp" "type variable"
        unknown call_tmp[616204] "expr temp" "maybe param" "maybe type" "temp"
        (616207 'move' call_tmp[616204](64085 call y[64072] 0))
        (491841 'move' call_type_tmp[491837](64086 'typeof' call_tmp[616204]))
      }
      unknown tmp[555347] "expr temp" "maybe param" "maybe type" "no auto destroy" "temp"
      unknown call_tmp[616209] "expr temp" "maybe param" "maybe type" "temp" "type variable"
      (616212 'move' call_tmp[616209](454796 'typeof' x[64066]))
      unknown call_tmp[616214] "expr temp" "maybe param" "maybe type" "temp"
      (616217 'move' call_tmp[616214](354222 'is_subtype' call_type_tmp[491837] call_tmp[616209]))
      (555349 'move' tmp[555347](419176 call isTrue call_tmp[616214]))
      (555354 'move' tmp[555339](555351 '_paramFoldLogical' tmp[555340] tmp[555347]))
    }
    {
      (555359 'move' tmp[555339](555356 '_paramFoldLogical' tmp[555340] 0))
    }
    (748222 call chpl_statementLevelSymbol tmp[555339])
  }
  (355046 'used modules list'(56188 'use' ChapelStandard[20264])(56190 'use' DSIUtil[230888]))
}