AST dump for ExportWrappers after pass createTaskFunctions.
Module use list: ChapelStandard CPtr SysCTypes 

{
  function chpl__init_ExportWrappers[416084]() : void[4] "insert line file info" "module init"
  {
    (544854 'move' chpl__exportTypeChplByteBuffer[172157](544853 call chpl_byte_buffer[172143]))
    (483373 'end of statement')
    (522555 return _void[55])
  }
  function chpl_byte_buffer[172143].isOwned[814122](arg _mt[814124]:_MT[238], ref arg this[814126]:chpl_byte_buffer[172143]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814136] "RVV" "temp"
    unknown call_tmp[814143] "expr temp" "maybe param" "maybe type" "temp"
    (814146 'move' call_tmp[814143](814130 '.' this[814126] c"isOwned"))
    (814141 'move' ret[814136](814140 'addr of' call_tmp[814143]))
    (814138 return ret[814136])
  }
  function chpl_byte_buffer[172143].data[814148](arg _mt[814150]:_MT[238], ref arg this[814152]:chpl_byte_buffer[172143]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814162] "RVV" "temp"
    unknown call_tmp[814169] "expr temp" "maybe param" "maybe type" "temp"
    (814172 'move' call_tmp[814169](814156 '.' this[814152] c"data"))
    (814167 'move' ret[814162](814166 'addr of' call_tmp[814169]))
    (814164 return ret[814162])
  }
  function chpl_byte_buffer[172143].size[814174](arg _mt[814176]:_MT[238], ref arg this[814178]:chpl_byte_buffer[172143]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814188] "RVV" "temp"
    unknown call_tmp[814195] "expr temp" "maybe param" "maybe type" "temp"
    (814198 'move' call_tmp[814195](814182 '.' this[814178] c"size"))
    (814193 'move' ret[814188](814192 'addr of' call_tmp[814195]))
    (814190 return ret[814188])
  }
  function chpl_byte_buffer[172143].init[814200](arg _mt[814202]:_MT[238], ref arg this[814203]:chpl_byte_buffer[172143], in arg isOwned[814206] :
  (814209 call int(64)[13] 8) =
  _typeDefaultT[250], in arg data[814221] :
  (814224 call c_ptr[205057](?) c_char[20591]) =
  _typeDefaultT[250], in arg size[814236] :
  (814239 call uint(64)[115] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814252 'init field' this[814203] c"isOwned" isOwned[814206])
    (814255 'init field' this[814203] c"data" data[814221])
    (814261 'end of statement')
    (814258 'init field' this[814203] c"size" size[814236])
    (814263 return _void[55])
  }
  function chpl_byte_buffer[172143].init=[814265](arg _mt[814268]:_MT[238], arg this[814269]:chpl_byte_buffer[172143], arg other[814270]:chpl_byte_buffer[172143]) : _unknown[51] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814274 '=' this[814269] other[814270])
    (814278 return _void[55])
  }
  function chpl_byte_buffer[172143].deinit[814280](arg _mt[814282]:_MT[238], arg this[814284]:chpl_byte_buffer[172143]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (814292 return _void[55])
  }
  function chpl_byte_buffer[172143].writeThis[814294](arg _mt[814298]:_MT[238], arg this[814296]:chpl_byte_buffer[172143], arg f[814297]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814303 call writeThisDefaultImpl f[814297] this[814296])
    (814308 return _void[55])
  }
  function chpl_byte_buffer[172143].readThis[814310](arg _mt[814314]:_MT[238], arg this[814312]:chpl_byte_buffer[172143], arg f[814313]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814318 call readThisDefaultImpl f[814313] this[814312])
    (814324 return _void[55])
  }
  function chpl_fields_are_comparable[814338](arg _arg1[814340]:chpl_byte_buffer[172143], arg _arg2[814341]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814380]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814387] "expr temp" "maybe param" "maybe type" "temp"
    (814390 'move' call_tmp[814387](814344 call isOwned _mt[243] _arg1[814340]))
    unknown call_tmp[814392] "expr temp" "maybe param" "maybe type" "temp"
    (814395 'move' call_tmp[814392](814348 call isOwned _mt[243] _arg2[814341]))
    unknown call_tmp[814397] "expr temp" "maybe param" "maybe type" "temp"
    (814400 'move' call_tmp[814397](814352 'call resolves' c"==" call_tmp[814387] call_tmp[814392]))
    unknown call_tmp[814402] "expr temp" "maybe param" "maybe type" "temp"
    (814405 'move' call_tmp[814402](814354 call data _mt[243] _arg1[814340]))
    unknown call_tmp[814407] "expr temp" "maybe param" "maybe type" "temp"
    (814410 'move' call_tmp[814407](814358 call data _mt[243] _arg2[814341]))
    unknown call_tmp[814412] "expr temp" "maybe param" "maybe type" "temp"
    (814415 'move' call_tmp[814412](814362 'call resolves' c"==" call_tmp[814402] call_tmp[814407]))
    unknown call_tmp[814417] "expr temp" "maybe param" "maybe type" "temp"
    (814420 'move' call_tmp[814417](814364 call size _mt[243] _arg1[814340]))
    unknown call_tmp[814422] "expr temp" "maybe param" "maybe type" "temp"
    (814425 'move' call_tmp[814422](814368 call size _mt[243] _arg2[814341]))
    unknown call_tmp[814427] "expr temp" "maybe param" "maybe type" "temp"
    (814430 'move' call_tmp[814427](814372 'call resolves' c"==" call_tmp[814417] call_tmp[814422]))
    unknown call_tmp[814432] "expr temp" "maybe param" "maybe type" "temp"
    (814435 'move' call_tmp[814432](814374 '&' call_tmp[814397] call_tmp[814412] call_tmp[814427]))
    (814385 'move' ret[814380](814384 'deref' call_tmp[814432]))
    (814382 return ret[814380])
  }
  function ==[814326](arg _arg1[814328]:chpl_byte_buffer[172143], arg _arg2[814329]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814494]:bool[10] "RVV" "temp"
    unknown call_tmp[814516] "expr temp" "maybe param" "maybe type" "temp"
    (814519 'move' call_tmp[814516](814443 call isOwned _mt[243] _arg1[814328]))
    unknown call_tmp[814521] "expr temp" "maybe param" "maybe type" "temp"
    (814524 'move' call_tmp[814521](814447 call isOwned _mt[243] _arg2[814329]))
    unknown call_tmp[814526] "expr temp" "maybe param" "maybe type" "temp"
    (814529 'move' call_tmp[814526](814451 call != call_tmp[814516] call_tmp[814521]))
    if call_tmp[814526]
    {
      (814499 'move' ret[814494](814498 'deref' 0))
      gotoReturn _end_==[814492] _end_==[814492]
    }
    unknown call_tmp[814531] "expr temp" "maybe param" "maybe type" "temp"
    (814534 'move' call_tmp[814531](814457 call data _mt[243] _arg1[814328]))
    unknown call_tmp[814536] "expr temp" "maybe param" "maybe type" "temp"
    (814539 'move' call_tmp[814536](814461 call data _mt[243] _arg2[814329]))
    unknown call_tmp[814541] "expr temp" "maybe param" "maybe type" "temp"
    (814544 'move' call_tmp[814541](814465 call != call_tmp[814531] call_tmp[814536]))
    if call_tmp[814541]
    {
      (814504 'move' ret[814494](814503 'deref' 0))
      gotoReturn _end_==[814492] _end_==[814492]
    }
    unknown call_tmp[814546] "expr temp" "maybe param" "maybe type" "temp"
    (814549 'move' call_tmp[814546](814471 call size _mt[243] _arg1[814328]))
    unknown call_tmp[814551] "expr temp" "maybe param" "maybe type" "temp"
    (814554 'move' call_tmp[814551](814475 call size _mt[243] _arg2[814329]))
    unknown call_tmp[814556] "expr temp" "maybe param" "maybe type" "temp"
    (814559 'move' call_tmp[814556](814479 call != call_tmp[814546] call_tmp[814551]))
    if call_tmp[814556]
    {
      (814509 'move' ret[814494](814508 'deref' 0))
      gotoReturn _end_==[814492] _end_==[814492]
    }
    (814514 'move' ret[814494](814513 'deref' 1))
    label _end_==[814492]
    (814496 return ret[814494])
  }
  where {
    unknown call_tmp[814561] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814564 'move' call_tmp[814561](814332 'typeof' _arg1[814328]))
    unknown call_tmp[814566] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814569 'move' call_tmp[814566](814334 'typeof' _arg2[814329]))
    unknown call_tmp[814571] "expr temp" "maybe param" "maybe type" "temp"
    (814574 'move' call_tmp[814571](814336 call == call_tmp[814561] call_tmp[814566]))
    unknown call_tmp[814576] "expr temp" "maybe param" "maybe type" "temp"
    (814579 'move' call_tmp[814576](814437 call chpl_fields_are_comparable[814338] _arg1[814328] _arg2[814329]))
    (814441 '&' call_tmp[814571] call_tmp[814576])
  }
  function chpl_fields_are_comparable[814593](arg _arg1[814595]:chpl_byte_buffer[172143], arg _arg2[814596]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814635]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814642] "expr temp" "maybe param" "maybe type" "temp"
    (814645 'move' call_tmp[814642](814599 call isOwned _mt[243] _arg1[814595]))
    unknown call_tmp[814647] "expr temp" "maybe param" "maybe type" "temp"
    (814650 'move' call_tmp[814647](814603 call isOwned _mt[243] _arg2[814596]))
    unknown call_tmp[814652] "expr temp" "maybe param" "maybe type" "temp"
    (814655 'move' call_tmp[814652](814607 'call resolves' c"!=" call_tmp[814642] call_tmp[814647]))
    unknown call_tmp[814657] "expr temp" "maybe param" "maybe type" "temp"
    (814660 'move' call_tmp[814657](814609 call data _mt[243] _arg1[814595]))
    unknown call_tmp[814662] "expr temp" "maybe param" "maybe type" "temp"
    (814665 'move' call_tmp[814662](814613 call data _mt[243] _arg2[814596]))
    unknown call_tmp[814667] "expr temp" "maybe param" "maybe type" "temp"
    (814670 'move' call_tmp[814667](814617 'call resolves' c"!=" call_tmp[814657] call_tmp[814662]))
    unknown call_tmp[814672] "expr temp" "maybe param" "maybe type" "temp"
    (814675 'move' call_tmp[814672](814619 call size _mt[243] _arg1[814595]))
    unknown call_tmp[814677] "expr temp" "maybe param" "maybe type" "temp"
    (814680 'move' call_tmp[814677](814623 call size _mt[243] _arg2[814596]))
    unknown call_tmp[814682] "expr temp" "maybe param" "maybe type" "temp"
    (814685 'move' call_tmp[814682](814627 'call resolves' c"!=" call_tmp[814672] call_tmp[814677]))
    unknown call_tmp[814687] "expr temp" "maybe param" "maybe type" "temp"
    (814690 'move' call_tmp[814687](814629 '&' call_tmp[814652] call_tmp[814667] call_tmp[814682]))
    (814640 'move' ret[814635](814639 'deref' call_tmp[814687]))
    (814637 return ret[814635])
  }
  function !=[814581](arg _arg1[814583]:chpl_byte_buffer[172143], arg _arg2[814584]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814749]:bool[10] "RVV" "temp"
    unknown call_tmp[814771] "expr temp" "maybe param" "maybe type" "temp"
    (814774 'move' call_tmp[814771](814698 call isOwned _mt[243] _arg1[814583]))
    unknown call_tmp[814776] "expr temp" "maybe param" "maybe type" "temp"
    (814779 'move' call_tmp[814776](814702 call isOwned _mt[243] _arg2[814584]))
    unknown call_tmp[814781] "expr temp" "maybe param" "maybe type" "temp"
    (814784 'move' call_tmp[814781](814706 call != call_tmp[814771] call_tmp[814776]))
    if call_tmp[814781]
    {
      (814754 'move' ret[814749](814753 'deref' 1))
      gotoReturn _end_!=[814747] _end_!=[814747]
    }
    unknown call_tmp[814786] "expr temp" "maybe param" "maybe type" "temp"
    (814789 'move' call_tmp[814786](814712 call data _mt[243] _arg1[814583]))
    unknown call_tmp[814791] "expr temp" "maybe param" "maybe type" "temp"
    (814794 'move' call_tmp[814791](814716 call data _mt[243] _arg2[814584]))
    unknown call_tmp[814796] "expr temp" "maybe param" "maybe type" "temp"
    (814799 'move' call_tmp[814796](814720 call != call_tmp[814786] call_tmp[814791]))
    if call_tmp[814796]
    {
      (814759 'move' ret[814749](814758 'deref' 1))
      gotoReturn _end_!=[814747] _end_!=[814747]
    }
    unknown call_tmp[814801] "expr temp" "maybe param" "maybe type" "temp"
    (814804 'move' call_tmp[814801](814726 call size _mt[243] _arg1[814583]))
    unknown call_tmp[814806] "expr temp" "maybe param" "maybe type" "temp"
    (814809 'move' call_tmp[814806](814730 call size _mt[243] _arg2[814584]))
    unknown call_tmp[814811] "expr temp" "maybe param" "maybe type" "temp"
    (814814 'move' call_tmp[814811](814734 call != call_tmp[814801] call_tmp[814806]))
    if call_tmp[814811]
    {
      (814764 'move' ret[814749](814763 'deref' 1))
      gotoReturn _end_!=[814747] _end_!=[814747]
    }
    (814769 'move' ret[814749](814768 'deref' 0))
    label _end_!=[814747]
    (814751 return ret[814749])
  }
  where {
    unknown call_tmp[814816] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814819 'move' call_tmp[814816](814587 'typeof' _arg1[814583]))
    unknown call_tmp[814821] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814824 'move' call_tmp[814821](814589 'typeof' _arg2[814584]))
    unknown call_tmp[814826] "expr temp" "maybe param" "maybe type" "temp"
    (814829 'move' call_tmp[814826](814591 call == call_tmp[814816] call_tmp[814821]))
    unknown call_tmp[814831] "expr temp" "maybe param" "maybe type" "temp"
    (814834 'move' call_tmp[814831](814692 call chpl_fields_are_comparable[814593] _arg1[814583] _arg2[814584]))
    (814696 '&' call_tmp[814826] call_tmp[814831])
  }
  function chpl_fields_are_comparable[814848](arg _arg1[814850]:chpl_byte_buffer[172143], arg _arg2[814851]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814890]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814897] "expr temp" "maybe param" "maybe type" "temp"
    (814900 'move' call_tmp[814897](814854 call isOwned _mt[243] _arg1[814850]))
    unknown call_tmp[814902] "expr temp" "maybe param" "maybe type" "temp"
    (814905 'move' call_tmp[814902](814858 call isOwned _mt[243] _arg2[814851]))
    unknown call_tmp[814907] "expr temp" "maybe param" "maybe type" "temp"
    (814910 'move' call_tmp[814907](814862 'call resolves' c"<" call_tmp[814897] call_tmp[814902]))
    unknown call_tmp[814912] "expr temp" "maybe param" "maybe type" "temp"
    (814915 'move' call_tmp[814912](814864 call data _mt[243] _arg1[814850]))
    unknown call_tmp[814917] "expr temp" "maybe param" "maybe type" "temp"
    (814920 'move' call_tmp[814917](814868 call data _mt[243] _arg2[814851]))
    unknown call_tmp[814922] "expr temp" "maybe param" "maybe type" "temp"
    (814925 'move' call_tmp[814922](814872 'call resolves' c"<" call_tmp[814912] call_tmp[814917]))
    unknown call_tmp[814927] "expr temp" "maybe param" "maybe type" "temp"
    (814930 'move' call_tmp[814927](814874 call size _mt[243] _arg1[814850]))
    unknown call_tmp[814932] "expr temp" "maybe param" "maybe type" "temp"
    (814935 'move' call_tmp[814932](814878 call size _mt[243] _arg2[814851]))
    unknown call_tmp[814937] "expr temp" "maybe param" "maybe type" "temp"
    (814940 'move' call_tmp[814937](814882 'call resolves' c"<" call_tmp[814927] call_tmp[814932]))
    unknown call_tmp[814942] "expr temp" "maybe param" "maybe type" "temp"
    (814945 'move' call_tmp[814942](814884 '&' call_tmp[814907] call_tmp[814922] call_tmp[814937]))
    (814895 'move' ret[814890](814894 'deref' call_tmp[814942]))
    (814892 return ret[814890])
  }
  function <[814836](arg _arg1[814838]:chpl_byte_buffer[172143], arg _arg2[814839]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815049]:bool[10] "RVV" "temp"
    unknown call_tmp[815086] "expr temp" "maybe param" "maybe type" "temp"
    (815089 'move' call_tmp[815086](814953 call isOwned _mt[243] _arg1[814838]))
    unknown call_tmp[815091] "expr temp" "maybe param" "maybe type" "temp"
    (815094 'move' call_tmp[815091](814957 call isOwned _mt[243] _arg2[814839]))
    unknown call_tmp[815096] "expr temp" "maybe param" "maybe type" "temp"
    (815099 'move' call_tmp[815096](814961 call < call_tmp[815086] call_tmp[815091]))
    if call_tmp[815096]
    {
      (815054 'move' ret[815049](815053 'deref' 1))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    unknown call_tmp[815101] "expr temp" "maybe param" "maybe type" "temp"
    (815104 'move' call_tmp[815101](814967 call isOwned _mt[243] _arg1[814838]))
    unknown call_tmp[815106] "expr temp" "maybe param" "maybe type" "temp"
    (815109 'move' call_tmp[815106](814971 call isOwned _mt[243] _arg2[814839]))
    unknown call_tmp[815111] "expr temp" "maybe param" "maybe type" "temp"
    (815114 'move' call_tmp[815111](814975 call > call_tmp[815101] call_tmp[815106]))
    if call_tmp[815111]
    {
      (815059 'move' ret[815049](815058 'deref' 0))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    unknown call_tmp[815116] "expr temp" "maybe param" "maybe type" "temp"
    (815119 'move' call_tmp[815116](814981 call data _mt[243] _arg1[814838]))
    unknown call_tmp[815121] "expr temp" "maybe param" "maybe type" "temp"
    (815124 'move' call_tmp[815121](814985 call data _mt[243] _arg2[814839]))
    unknown call_tmp[815126] "expr temp" "maybe param" "maybe type" "temp"
    (815129 'move' call_tmp[815126](814989 call < call_tmp[815116] call_tmp[815121]))
    if call_tmp[815126]
    {
      (815064 'move' ret[815049](815063 'deref' 1))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    unknown call_tmp[815131] "expr temp" "maybe param" "maybe type" "temp"
    (815134 'move' call_tmp[815131](814995 call data _mt[243] _arg1[814838]))
    unknown call_tmp[815136] "expr temp" "maybe param" "maybe type" "temp"
    (815139 'move' call_tmp[815136](814999 call data _mt[243] _arg2[814839]))
    unknown call_tmp[815141] "expr temp" "maybe param" "maybe type" "temp"
    (815144 'move' call_tmp[815141](815003 call > call_tmp[815131] call_tmp[815136]))
    if call_tmp[815141]
    {
      (815069 'move' ret[815049](815068 'deref' 0))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    unknown call_tmp[815146] "expr temp" "maybe param" "maybe type" "temp"
    (815149 'move' call_tmp[815146](815009 call size _mt[243] _arg1[814838]))
    unknown call_tmp[815151] "expr temp" "maybe param" "maybe type" "temp"
    (815154 'move' call_tmp[815151](815013 call size _mt[243] _arg2[814839]))
    unknown call_tmp[815156] "expr temp" "maybe param" "maybe type" "temp"
    (815159 'move' call_tmp[815156](815017 call < call_tmp[815146] call_tmp[815151]))
    if call_tmp[815156]
    {
      (815074 'move' ret[815049](815073 'deref' 1))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    unknown call_tmp[815161] "expr temp" "maybe param" "maybe type" "temp"
    (815164 'move' call_tmp[815161](815023 call size _mt[243] _arg1[814838]))
    unknown call_tmp[815166] "expr temp" "maybe param" "maybe type" "temp"
    (815169 'move' call_tmp[815166](815027 call size _mt[243] _arg2[814839]))
    unknown call_tmp[815171] "expr temp" "maybe param" "maybe type" "temp"
    (815174 'move' call_tmp[815171](815031 call > call_tmp[815161] call_tmp[815166]))
    if call_tmp[815171]
    {
      (815079 'move' ret[815049](815078 'deref' 0))
      gotoReturn _end_<[815047] _end_<[815047]
    }
    (815084 'move' ret[815049](815083 'deref' 0))
    label _end_<[815047]
    (815051 return ret[815049])
  }
  where {
    unknown call_tmp[815176] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815179 'move' call_tmp[815176](814842 'typeof' _arg1[814838]))
    unknown call_tmp[815181] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815184 'move' call_tmp[815181](814844 'typeof' _arg2[814839]))
    unknown call_tmp[815186] "expr temp" "maybe param" "maybe type" "temp"
    (815189 'move' call_tmp[815186](814846 call == call_tmp[815176] call_tmp[815181]))
    unknown call_tmp[815191] "expr temp" "maybe param" "maybe type" "temp"
    (815194 'move' call_tmp[815191](814947 call chpl_fields_are_comparable[814848] _arg1[814838] _arg2[814839]))
    (814951 '&' call_tmp[815186] call_tmp[815191])
  }
  function chpl_fields_are_comparable[815208](arg _arg1[815210]:chpl_byte_buffer[172143], arg _arg2[815211]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815250]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815257] "expr temp" "maybe param" "maybe type" "temp"
    (815260 'move' call_tmp[815257](815214 call isOwned _mt[243] _arg1[815210]))
    unknown call_tmp[815262] "expr temp" "maybe param" "maybe type" "temp"
    (815265 'move' call_tmp[815262](815218 call isOwned _mt[243] _arg2[815211]))
    unknown call_tmp[815267] "expr temp" "maybe param" "maybe type" "temp"
    (815270 'move' call_tmp[815267](815222 'call resolves' c"<=" call_tmp[815257] call_tmp[815262]))
    unknown call_tmp[815272] "expr temp" "maybe param" "maybe type" "temp"
    (815275 'move' call_tmp[815272](815224 call data _mt[243] _arg1[815210]))
    unknown call_tmp[815277] "expr temp" "maybe param" "maybe type" "temp"
    (815280 'move' call_tmp[815277](815228 call data _mt[243] _arg2[815211]))
    unknown call_tmp[815282] "expr temp" "maybe param" "maybe type" "temp"
    (815285 'move' call_tmp[815282](815232 'call resolves' c"<=" call_tmp[815272] call_tmp[815277]))
    unknown call_tmp[815287] "expr temp" "maybe param" "maybe type" "temp"
    (815290 'move' call_tmp[815287](815234 call size _mt[243] _arg1[815210]))
    unknown call_tmp[815292] "expr temp" "maybe param" "maybe type" "temp"
    (815295 'move' call_tmp[815292](815238 call size _mt[243] _arg2[815211]))
    unknown call_tmp[815297] "expr temp" "maybe param" "maybe type" "temp"
    (815300 'move' call_tmp[815297](815242 'call resolves' c"<=" call_tmp[815287] call_tmp[815292]))
    unknown call_tmp[815302] "expr temp" "maybe param" "maybe type" "temp"
    (815305 'move' call_tmp[815302](815244 '&' call_tmp[815267] call_tmp[815282] call_tmp[815297]))
    (815255 'move' ret[815250](815254 'deref' call_tmp[815302]))
    (815252 return ret[815250])
  }
  function <=[815196](arg _arg1[815198]:chpl_byte_buffer[172143], arg _arg2[815199]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815409]:bool[10] "RVV" "temp"
    unknown call_tmp[815446] "expr temp" "maybe param" "maybe type" "temp"
    (815449 'move' call_tmp[815446](815313 call isOwned _mt[243] _arg1[815198]))
    unknown call_tmp[815451] "expr temp" "maybe param" "maybe type" "temp"
    (815454 'move' call_tmp[815451](815317 call isOwned _mt[243] _arg2[815199]))
    unknown call_tmp[815456] "expr temp" "maybe param" "maybe type" "temp"
    (815459 'move' call_tmp[815456](815321 call < call_tmp[815446] call_tmp[815451]))
    if call_tmp[815456]
    {
      (815414 'move' ret[815409](815413 'deref' 1))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    unknown call_tmp[815461] "expr temp" "maybe param" "maybe type" "temp"
    (815464 'move' call_tmp[815461](815327 call isOwned _mt[243] _arg1[815198]))
    unknown call_tmp[815466] "expr temp" "maybe param" "maybe type" "temp"
    (815469 'move' call_tmp[815466](815331 call isOwned _mt[243] _arg2[815199]))
    unknown call_tmp[815471] "expr temp" "maybe param" "maybe type" "temp"
    (815474 'move' call_tmp[815471](815335 call > call_tmp[815461] call_tmp[815466]))
    if call_tmp[815471]
    {
      (815419 'move' ret[815409](815418 'deref' 0))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    unknown call_tmp[815476] "expr temp" "maybe param" "maybe type" "temp"
    (815479 'move' call_tmp[815476](815341 call data _mt[243] _arg1[815198]))
    unknown call_tmp[815481] "expr temp" "maybe param" "maybe type" "temp"
    (815484 'move' call_tmp[815481](815345 call data _mt[243] _arg2[815199]))
    unknown call_tmp[815486] "expr temp" "maybe param" "maybe type" "temp"
    (815489 'move' call_tmp[815486](815349 call < call_tmp[815476] call_tmp[815481]))
    if call_tmp[815486]
    {
      (815424 'move' ret[815409](815423 'deref' 1))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    unknown call_tmp[815491] "expr temp" "maybe param" "maybe type" "temp"
    (815494 'move' call_tmp[815491](815355 call data _mt[243] _arg1[815198]))
    unknown call_tmp[815496] "expr temp" "maybe param" "maybe type" "temp"
    (815499 'move' call_tmp[815496](815359 call data _mt[243] _arg2[815199]))
    unknown call_tmp[815501] "expr temp" "maybe param" "maybe type" "temp"
    (815504 'move' call_tmp[815501](815363 call > call_tmp[815491] call_tmp[815496]))
    if call_tmp[815501]
    {
      (815429 'move' ret[815409](815428 'deref' 0))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    unknown call_tmp[815506] "expr temp" "maybe param" "maybe type" "temp"
    (815509 'move' call_tmp[815506](815369 call size _mt[243] _arg1[815198]))
    unknown call_tmp[815511] "expr temp" "maybe param" "maybe type" "temp"
    (815514 'move' call_tmp[815511](815373 call size _mt[243] _arg2[815199]))
    unknown call_tmp[815516] "expr temp" "maybe param" "maybe type" "temp"
    (815519 'move' call_tmp[815516](815377 call < call_tmp[815506] call_tmp[815511]))
    if call_tmp[815516]
    {
      (815434 'move' ret[815409](815433 'deref' 1))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    unknown call_tmp[815521] "expr temp" "maybe param" "maybe type" "temp"
    (815524 'move' call_tmp[815521](815383 call size _mt[243] _arg1[815198]))
    unknown call_tmp[815526] "expr temp" "maybe param" "maybe type" "temp"
    (815529 'move' call_tmp[815526](815387 call size _mt[243] _arg2[815199]))
    unknown call_tmp[815531] "expr temp" "maybe param" "maybe type" "temp"
    (815534 'move' call_tmp[815531](815391 call > call_tmp[815521] call_tmp[815526]))
    if call_tmp[815531]
    {
      (815439 'move' ret[815409](815438 'deref' 0))
      gotoReturn _end_<=[815407] _end_<=[815407]
    }
    (815444 'move' ret[815409](815443 'deref' 1))
    label _end_<=[815407]
    (815411 return ret[815409])
  }
  where {
    unknown call_tmp[815536] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815539 'move' call_tmp[815536](815202 'typeof' _arg1[815198]))
    unknown call_tmp[815541] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815544 'move' call_tmp[815541](815204 'typeof' _arg2[815199]))
    unknown call_tmp[815546] "expr temp" "maybe param" "maybe type" "temp"
    (815549 'move' call_tmp[815546](815206 call == call_tmp[815536] call_tmp[815541]))
    unknown call_tmp[815551] "expr temp" "maybe param" "maybe type" "temp"
    (815554 'move' call_tmp[815551](815307 call chpl_fields_are_comparable[815208] _arg1[815198] _arg2[815199]))
    (815311 '&' call_tmp[815546] call_tmp[815551])
  }
  function chpl_fields_are_comparable[815568](arg _arg1[815570]:chpl_byte_buffer[172143], arg _arg2[815571]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815610]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815617] "expr temp" "maybe param" "maybe type" "temp"
    (815620 'move' call_tmp[815617](815574 call isOwned _mt[243] _arg1[815570]))
    unknown call_tmp[815622] "expr temp" "maybe param" "maybe type" "temp"
    (815625 'move' call_tmp[815622](815578 call isOwned _mt[243] _arg2[815571]))
    unknown call_tmp[815627] "expr temp" "maybe param" "maybe type" "temp"
    (815630 'move' call_tmp[815627](815582 'call resolves' c">" call_tmp[815617] call_tmp[815622]))
    unknown call_tmp[815632] "expr temp" "maybe param" "maybe type" "temp"
    (815635 'move' call_tmp[815632](815584 call data _mt[243] _arg1[815570]))
    unknown call_tmp[815637] "expr temp" "maybe param" "maybe type" "temp"
    (815640 'move' call_tmp[815637](815588 call data _mt[243] _arg2[815571]))
    unknown call_tmp[815642] "expr temp" "maybe param" "maybe type" "temp"
    (815645 'move' call_tmp[815642](815592 'call resolves' c">" call_tmp[815632] call_tmp[815637]))
    unknown call_tmp[815647] "expr temp" "maybe param" "maybe type" "temp"
    (815650 'move' call_tmp[815647](815594 call size _mt[243] _arg1[815570]))
    unknown call_tmp[815652] "expr temp" "maybe param" "maybe type" "temp"
    (815655 'move' call_tmp[815652](815598 call size _mt[243] _arg2[815571]))
    unknown call_tmp[815657] "expr temp" "maybe param" "maybe type" "temp"
    (815660 'move' call_tmp[815657](815602 'call resolves' c">" call_tmp[815647] call_tmp[815652]))
    unknown call_tmp[815662] "expr temp" "maybe param" "maybe type" "temp"
    (815665 'move' call_tmp[815662](815604 '&' call_tmp[815627] call_tmp[815642] call_tmp[815657]))
    (815615 'move' ret[815610](815614 'deref' call_tmp[815662]))
    (815612 return ret[815610])
  }
  function >[815556](arg _arg1[815558]:chpl_byte_buffer[172143], arg _arg2[815559]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815769]:bool[10] "RVV" "temp"
    unknown call_tmp[815806] "expr temp" "maybe param" "maybe type" "temp"
    (815809 'move' call_tmp[815806](815673 call isOwned _mt[243] _arg1[815558]))
    unknown call_tmp[815811] "expr temp" "maybe param" "maybe type" "temp"
    (815814 'move' call_tmp[815811](815677 call isOwned _mt[243] _arg2[815559]))
    unknown call_tmp[815816] "expr temp" "maybe param" "maybe type" "temp"
    (815819 'move' call_tmp[815816](815681 call > call_tmp[815806] call_tmp[815811]))
    if call_tmp[815816]
    {
      (815774 'move' ret[815769](815773 'deref' 1))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    unknown call_tmp[815821] "expr temp" "maybe param" "maybe type" "temp"
    (815824 'move' call_tmp[815821](815687 call isOwned _mt[243] _arg1[815558]))
    unknown call_tmp[815826] "expr temp" "maybe param" "maybe type" "temp"
    (815829 'move' call_tmp[815826](815691 call isOwned _mt[243] _arg2[815559]))
    unknown call_tmp[815831] "expr temp" "maybe param" "maybe type" "temp"
    (815834 'move' call_tmp[815831](815695 call < call_tmp[815821] call_tmp[815826]))
    if call_tmp[815831]
    {
      (815779 'move' ret[815769](815778 'deref' 0))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    unknown call_tmp[815836] "expr temp" "maybe param" "maybe type" "temp"
    (815839 'move' call_tmp[815836](815701 call data _mt[243] _arg1[815558]))
    unknown call_tmp[815841] "expr temp" "maybe param" "maybe type" "temp"
    (815844 'move' call_tmp[815841](815705 call data _mt[243] _arg2[815559]))
    unknown call_tmp[815846] "expr temp" "maybe param" "maybe type" "temp"
    (815849 'move' call_tmp[815846](815709 call > call_tmp[815836] call_tmp[815841]))
    if call_tmp[815846]
    {
      (815784 'move' ret[815769](815783 'deref' 1))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    unknown call_tmp[815851] "expr temp" "maybe param" "maybe type" "temp"
    (815854 'move' call_tmp[815851](815715 call data _mt[243] _arg1[815558]))
    unknown call_tmp[815856] "expr temp" "maybe param" "maybe type" "temp"
    (815859 'move' call_tmp[815856](815719 call data _mt[243] _arg2[815559]))
    unknown call_tmp[815861] "expr temp" "maybe param" "maybe type" "temp"
    (815864 'move' call_tmp[815861](815723 call < call_tmp[815851] call_tmp[815856]))
    if call_tmp[815861]
    {
      (815789 'move' ret[815769](815788 'deref' 0))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    unknown call_tmp[815866] "expr temp" "maybe param" "maybe type" "temp"
    (815869 'move' call_tmp[815866](815729 call size _mt[243] _arg1[815558]))
    unknown call_tmp[815871] "expr temp" "maybe param" "maybe type" "temp"
    (815874 'move' call_tmp[815871](815733 call size _mt[243] _arg2[815559]))
    unknown call_tmp[815876] "expr temp" "maybe param" "maybe type" "temp"
    (815879 'move' call_tmp[815876](815737 call > call_tmp[815866] call_tmp[815871]))
    if call_tmp[815876]
    {
      (815794 'move' ret[815769](815793 'deref' 1))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    unknown call_tmp[815881] "expr temp" "maybe param" "maybe type" "temp"
    (815884 'move' call_tmp[815881](815743 call size _mt[243] _arg1[815558]))
    unknown call_tmp[815886] "expr temp" "maybe param" "maybe type" "temp"
    (815889 'move' call_tmp[815886](815747 call size _mt[243] _arg2[815559]))
    unknown call_tmp[815891] "expr temp" "maybe param" "maybe type" "temp"
    (815894 'move' call_tmp[815891](815751 call < call_tmp[815881] call_tmp[815886]))
    if call_tmp[815891]
    {
      (815799 'move' ret[815769](815798 'deref' 0))
      gotoReturn _end_>[815767] _end_>[815767]
    }
    (815804 'move' ret[815769](815803 'deref' 0))
    label _end_>[815767]
    (815771 return ret[815769])
  }
  where {
    unknown call_tmp[815896] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815899 'move' call_tmp[815896](815562 'typeof' _arg1[815558]))
    unknown call_tmp[815901] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815904 'move' call_tmp[815901](815564 'typeof' _arg2[815559]))
    unknown call_tmp[815906] "expr temp" "maybe param" "maybe type" "temp"
    (815909 'move' call_tmp[815906](815566 call == call_tmp[815896] call_tmp[815901]))
    unknown call_tmp[815911] "expr temp" "maybe param" "maybe type" "temp"
    (815914 'move' call_tmp[815911](815667 call chpl_fields_are_comparable[815568] _arg1[815558] _arg2[815559]))
    (815671 '&' call_tmp[815906] call_tmp[815911])
  }
  function chpl_fields_are_comparable[815928](arg _arg1[815930]:chpl_byte_buffer[172143], arg _arg2[815931]:chpl_byte_buffer[172143]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815970]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815977] "expr temp" "maybe param" "maybe type" "temp"
    (815980 'move' call_tmp[815977](815934 call isOwned _mt[243] _arg1[815930]))
    unknown call_tmp[815982] "expr temp" "maybe param" "maybe type" "temp"
    (815985 'move' call_tmp[815982](815938 call isOwned _mt[243] _arg2[815931]))
    unknown call_tmp[815987] "expr temp" "maybe param" "maybe type" "temp"
    (815990 'move' call_tmp[815987](815942 'call resolves' c">=" call_tmp[815977] call_tmp[815982]))
    unknown call_tmp[815992] "expr temp" "maybe param" "maybe type" "temp"
    (815995 'move' call_tmp[815992](815944 call data _mt[243] _arg1[815930]))
    unknown call_tmp[815997] "expr temp" "maybe param" "maybe type" "temp"
    (816000 'move' call_tmp[815997](815948 call data _mt[243] _arg2[815931]))
    unknown call_tmp[816002] "expr temp" "maybe param" "maybe type" "temp"
    (816005 'move' call_tmp[816002](815952 'call resolves' c">=" call_tmp[815992] call_tmp[815997]))
    unknown call_tmp[816007] "expr temp" "maybe param" "maybe type" "temp"
    (816010 'move' call_tmp[816007](815954 call size _mt[243] _arg1[815930]))
    unknown call_tmp[816012] "expr temp" "maybe param" "maybe type" "temp"
    (816015 'move' call_tmp[816012](815958 call size _mt[243] _arg2[815931]))
    unknown call_tmp[816017] "expr temp" "maybe param" "maybe type" "temp"
    (816020 'move' call_tmp[816017](815962 'call resolves' c">=" call_tmp[816007] call_tmp[816012]))
    unknown call_tmp[816022] "expr temp" "maybe param" "maybe type" "temp"
    (816025 'move' call_tmp[816022](815964 '&' call_tmp[815987] call_tmp[816002] call_tmp[816017]))
    (815975 'move' ret[815970](815974 'deref' call_tmp[816022]))
    (815972 return ret[815970])
  }
  function >=[815916](arg _arg1[815918]:chpl_byte_buffer[172143], arg _arg2[815919]:chpl_byte_buffer[172143]) : bool[10] "compiler generated" "last resort"
  {
    val ret[816129]:bool[10] "RVV" "temp"
    unknown call_tmp[816166] "expr temp" "maybe param" "maybe type" "temp"
    (816169 'move' call_tmp[816166](816033 call isOwned _mt[243] _arg1[815918]))
    unknown call_tmp[816171] "expr temp" "maybe param" "maybe type" "temp"
    (816174 'move' call_tmp[816171](816037 call isOwned _mt[243] _arg2[815919]))
    unknown call_tmp[816176] "expr temp" "maybe param" "maybe type" "temp"
    (816179 'move' call_tmp[816176](816041 call > call_tmp[816166] call_tmp[816171]))
    if call_tmp[816176]
    {
      (816134 'move' ret[816129](816133 'deref' 1))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    unknown call_tmp[816181] "expr temp" "maybe param" "maybe type" "temp"
    (816184 'move' call_tmp[816181](816047 call isOwned _mt[243] _arg1[815918]))
    unknown call_tmp[816186] "expr temp" "maybe param" "maybe type" "temp"
    (816189 'move' call_tmp[816186](816051 call isOwned _mt[243] _arg2[815919]))
    unknown call_tmp[816191] "expr temp" "maybe param" "maybe type" "temp"
    (816194 'move' call_tmp[816191](816055 call < call_tmp[816181] call_tmp[816186]))
    if call_tmp[816191]
    {
      (816139 'move' ret[816129](816138 'deref' 0))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    unknown call_tmp[816196] "expr temp" "maybe param" "maybe type" "temp"
    (816199 'move' call_tmp[816196](816061 call data _mt[243] _arg1[815918]))
    unknown call_tmp[816201] "expr temp" "maybe param" "maybe type" "temp"
    (816204 'move' call_tmp[816201](816065 call data _mt[243] _arg2[815919]))
    unknown call_tmp[816206] "expr temp" "maybe param" "maybe type" "temp"
    (816209 'move' call_tmp[816206](816069 call > call_tmp[816196] call_tmp[816201]))
    if call_tmp[816206]
    {
      (816144 'move' ret[816129](816143 'deref' 1))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    unknown call_tmp[816211] "expr temp" "maybe param" "maybe type" "temp"
    (816214 'move' call_tmp[816211](816075 call data _mt[243] _arg1[815918]))
    unknown call_tmp[816216] "expr temp" "maybe param" "maybe type" "temp"
    (816219 'move' call_tmp[816216](816079 call data _mt[243] _arg2[815919]))
    unknown call_tmp[816221] "expr temp" "maybe param" "maybe type" "temp"
    (816224 'move' call_tmp[816221](816083 call < call_tmp[816211] call_tmp[816216]))
    if call_tmp[816221]
    {
      (816149 'move' ret[816129](816148 'deref' 0))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    unknown call_tmp[816226] "expr temp" "maybe param" "maybe type" "temp"
    (816229 'move' call_tmp[816226](816089 call size _mt[243] _arg1[815918]))
    unknown call_tmp[816231] "expr temp" "maybe param" "maybe type" "temp"
    (816234 'move' call_tmp[816231](816093 call size _mt[243] _arg2[815919]))
    unknown call_tmp[816236] "expr temp" "maybe param" "maybe type" "temp"
    (816239 'move' call_tmp[816236](816097 call > call_tmp[816226] call_tmp[816231]))
    if call_tmp[816236]
    {
      (816154 'move' ret[816129](816153 'deref' 1))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    unknown call_tmp[816241] "expr temp" "maybe param" "maybe type" "temp"
    (816244 'move' call_tmp[816241](816103 call size _mt[243] _arg1[815918]))
    unknown call_tmp[816246] "expr temp" "maybe param" "maybe type" "temp"
    (816249 'move' call_tmp[816246](816107 call size _mt[243] _arg2[815919]))
    unknown call_tmp[816251] "expr temp" "maybe param" "maybe type" "temp"
    (816254 'move' call_tmp[816251](816111 call < call_tmp[816241] call_tmp[816246]))
    if call_tmp[816251]
    {
      (816159 'move' ret[816129](816158 'deref' 0))
      gotoReturn _end_>=[816127] _end_>=[816127]
    }
    (816164 'move' ret[816129](816163 'deref' 1))
    label _end_>=[816127]
    (816131 return ret[816129])
  }
  where {
    unknown call_tmp[816256] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816259 'move' call_tmp[816256](815922 'typeof' _arg1[815918]))
    unknown call_tmp[816261] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816264 'move' call_tmp[816261](815924 'typeof' _arg2[815919]))
    unknown call_tmp[816266] "expr temp" "maybe param" "maybe type" "temp"
    (816269 'move' call_tmp[816266](815926 call == call_tmp[816256] call_tmp[816261]))
    unknown call_tmp[816271] "expr temp" "maybe param" "maybe type" "temp"
    (816274 'move' call_tmp[816271](816027 call chpl_fields_are_comparable[815928] _arg1[815918] _arg2[815919]))
    (816031 '&' call_tmp[816266] call_tmp[816271])
  }
  function =[816276](ref arg _arg1[816278]:chpl_byte_buffer[172143], const?  ref arg _arg2[816279]:chpl_byte_buffer[172143]) : void[4] "assignop" "compiler generated" "inline" "last resort"
  {
    (816289 '=' _arg1[816278] _arg2[816279])
    (816294 return _void[55])
  }
  where {
    unknown call_tmp[816296] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816299 'move' call_tmp[816296](816282 'typeof' _arg1[816278]))
    unknown call_tmp[816301] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816304 'move' call_tmp[816301](816284 'typeof' _arg2[816279]))
    (816286 call == call_tmp[816296] call_tmp[816301])
  }
  function chpl__defaultHash[816306](arg r[816308]:chpl_byte_buffer[172143]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[816339] "RVV" "temp"
    unknown call_tmp[816346] "expr temp" "maybe param" "maybe type" "temp"
    (816349 'move' call_tmp[816346](816325 call size _mt[243] r[816308]))
    unknown call_tmp[816351] "expr temp" "maybe param" "maybe type" "temp"
    (816354 'move' call_tmp[816351](816329 call chpl__defaultHash call_tmp[816346]))
    unknown call_tmp[816356] "expr temp" "maybe param" "maybe type" "temp"
    (816359 'move' call_tmp[816356](816316 call data _mt[243] r[816308]))
    unknown call_tmp[816361] "expr temp" "maybe param" "maybe type" "temp"
    (816364 'move' call_tmp[816361](816320 call chpl__defaultHash call_tmp[816356]))
    unknown call_tmp[816366] "expr temp" "maybe param" "maybe type" "temp"
    (816369 'move' call_tmp[816366](816310 call isOwned _mt[243] r[816308]))
    unknown call_tmp[816371] "expr temp" "maybe param" "maybe type" "temp"
    (816374 'move' call_tmp[816371](816314 call chpl__defaultHash call_tmp[816366]))
    unknown call_tmp[816376] "expr temp" "maybe param" "maybe type" "temp"
    (816379 'move' call_tmp[816376](816322 call chpl__defaultHashCombine call_tmp[816361] call_tmp[816371] 2))
    unknown call_tmp[816381] "expr temp" "maybe param" "maybe type" "temp"
    (816384 'move' call_tmp[816381](816331 call chpl__defaultHashCombine call_tmp[816351] call_tmp[816376] 3))
    (816344 'move' ret[816339](816343 'deref' call_tmp[816381]))
    (816341 return ret[816339])
  }
  type chpl_byte_buffer[172143] val isOwned[172122]:int(8)[85](172121 call int(64)[13] 8) unknown data[172130](172129 call c_ptr[205057](?) c_char[20591]) val size[172138]:uint(64)[115](172137 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172152](arg cb[172149]:chpl_byte_buffer[172143]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
    (522485 return _void[55])
  }
  unknown chpl__exportTypeChplByteBuffer[172157] "dead at end of block" "insert auto destroy" "type variable" chpl_byte_buffer[172143]
  function chpl__exportRetStringOrBytes[172164](ref arg val[172162]:_any[178](?)) : _unknown[51]
  {
    unknown ret[522489] "RVV" "temp"
    unknown result[172168] "dead at end of block" "insert auto destroy"
    (544856 'default init var' result[172168] chpl_byte_buffer[172143])
    (172171 'end of statement')
    unknown call_tmp[681444] "expr temp" "maybe param" "maybe type" "temp"
    (681447 'move' call_tmp[681444](172174 call isOwned _mt[243] result[172168]))
    unknown call_tmp[681449] "expr temp" "maybe param" "maybe type" "temp"
    (681452 'move' call_tmp[681449](172184 call int(64)[13] 8))
    unknown call_tmp[681456] "expr temp" "maybe param" "maybe type" "temp"
    (681459 'move' call_tmp[681456](172178 call isOwned _mt[243] val[172162]))
    unknown call_tmp[681461] "expr temp" "maybe param" "maybe type" "temp"
    (681464 'move' call_tmp[681461](172185 call _cast call_tmp[681449] call_tmp[681456]))
    (172187 call = call_tmp[681444] call_tmp[681461])
    (483374 'end of statement' result[172168])
    unknown call_tmp[681468] "expr temp" "maybe param" "maybe type" "temp"
    (681471 'move' call_tmp[681468](172191 call data _mt[243] result[172168]))
    unknown call_tmp[681473] "expr temp" "maybe param" "maybe type" "temp"
    (681476 'move' call_tmp[681473](172201 call c_ptr[205057](?) c_char[20591]))
    unknown call_tmp[681480] "expr temp" "maybe param" "maybe type" "temp"
    (681483 'move' call_tmp[681480](172195 call buff _mt[243] val[172162]))
    unknown call_tmp[681485] "expr temp" "maybe param" "maybe type" "temp"
    (681488 'move' call_tmp[681485](172202 call _cast call_tmp[681473] call_tmp[681480]))
    (172204 call = call_tmp[681468] call_tmp[681485])
    (483376 'end of statement' result[172168])
    unknown call_tmp[681492] "expr temp" "maybe param" "maybe type" "temp"
    (681495 'move' call_tmp[681492](172208 call size _mt[243] result[172168]))
    unknown call_tmp[681497] "expr temp" "maybe param" "maybe type" "temp"
    (681500 'move' call_tmp[681497](172218 call uint(64)[115] 64))
    unknown call_tmp[681504] "expr temp" "maybe param" "maybe type" "temp"
    (681507 'move' call_tmp[681504](172212 call numBytes _mt[243] val[172162]))
    unknown call_tmp[681509] "expr temp" "maybe param" "maybe type" "temp"
    (681512 'move' call_tmp[681509](172219 call _cast call_tmp[681497] call_tmp[681504]))
    (172221 call = call_tmp[681492] call_tmp[681509])
    (483378 'end of statement' result[172168])
    unknown call_tmp[681516] "expr temp" "maybe param" "maybe type" "temp"
    (681519 'move' call_tmp[681516](172225 call isOwned _mt[243] val[172162]))
    (172229 call = call_tmp[681516] 0)
    (483380 'end of statement')
    (522495 'move' ret[522489](522494 'coerce' result[172168] chpl_byte_buffer[172143]))
    gotoReturn _end_chpl__exportRetStringOrBytes[522487] _end_chpl__exportRetStringOrBytes[522487]
    (483381 'end of statement' result[172168])
    label _end_chpl__exportRetStringOrBytes[522487]
    (522491 return ret[522489])
  }
  { scopeless type
    chpl_byte_buffer[172143]
  }
  function chpl__exportRet[172244](ref arg val[172241]:string[26], arg rt[172247]:chpl_byte_buffer[172143]) : _unknown[51]
  {
    unknown ret[522501] "RVV" "temp"
    unknown call_tmp[681521] "expr temp" "maybe param" "maybe type" "temp"
    (681524 'move' call_tmp[681521](172254 call chpl__exportRetStringOrBytes val[172241]))
    (522507 'move' ret[522501](522506 'coerce' call_tmp[681521] rt[172247]))
    (522503 return ret[522501])
  }
  { scopeless type
    rt[172247]
  }
  function chpl__exportRet[172267](ref arg val[172264]:bytes[24], arg rt[172270]:chpl_byte_buffer[172143]) : _unknown[51]
  {
    unknown ret[522511] "RVV" "temp"
    unknown call_tmp[681526] "expr temp" "maybe param" "maybe type" "temp"
    (681529 'move' call_tmp[681526](172277 call chpl__exportRetStringOrBytes val[172264]))
    (522517 'move' ret[522511](522516 'coerce' call_tmp[681526] rt[172270]))
    (522513 return ret[522511])
  }
  { scopeless type
    rt[172270]
  }
  function chpl__exportArg[172290](arg cp[172287]:bool[10], arg val[172293]:chpl_byte_buffer[172143], arg rt[172297]:string[26]) : _unknown[51]
  {
    unknown ret[522521] "RVV" "temp"
    unknown call_tmp[681533] "expr temp" "maybe param" "maybe type" "temp"
    (681536 'move' call_tmp[681533](172302 call data _mt[243] val[172293]))
    unknown call_tmp[681538] "maybe param" "maybe type" "temp"
    (681541 'move' call_tmp[681538](172306 call _cast c_string[19] call_tmp[681533]))
    unknown data[172308] "dead at end of block" "insert auto destroy"
    (544858 'init var' data[172308] call_tmp[681538])
    (172311 'end of statement')
    unknown call_tmp[681545] "expr temp" "maybe param" "maybe type" "temp"
    (681548 'move' call_tmp[681545](172314 call size _mt[243] val[172293]))
    unknown call_tmp[681552] "maybe param" "maybe type" "temp"
    (681555 'move' call_tmp[681552](172322 call(172317 call (partial) safeCast _mt[243] call_tmp[681545]) int(64)[13]))
    unknown size[172323] "dead at end of block" "insert auto destroy"
    (544860 'init var' size[172323] call_tmp[681552])
    (172326 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681557] "expr temp" "maybe param" "maybe type" "temp"
        (681560 'move' call_tmp[681557](172335 call _cond_test cp[172287]))
        if call_tmp[681557]
        {
          unknown call_tmp[681562] "expr temp" "maybe param" "maybe type" "temp"
          (681565 'move' call_tmp[681562](172332 call createStringWithNewBuffer data[172308] size[172323]))
          (522527 'move' ret[522521](522526 'coerce' call_tmp[681562] rt[172297]))
          gotoReturn _end_chpl__exportArg[522519] _end_chpl__exportArg[522519]
          (483385 'end of statement' data[172308] size[172323])
        }
        unknown call_tmp[681567] "expr temp" "maybe param" "maybe type" "temp"
        (681570 'move' call_tmp[681567](172345 call createStringWithBorrowedBuffer data[172308] size[172323]))
        (522533 'move' ret[522521](522532 'coerce' call_tmp[681567] rt[172297]))
        gotoReturn _end_chpl__exportArg[522519] _end_chpl__exportArg[522519]
        (483388 'end of statement' data[172308] size[172323])
      }
    }
    label _end_chpl__exportArg[522519]
    (522523 return ret[522521])
  }
  { scopeless type
    rt[172297]
  }
  function chpl__exportArg[172360](arg cp[172357]:bool[10], arg val[172363]:chpl_byte_buffer[172143], arg rt[172367]:bytes[24]) : _unknown[51]
  {
    unknown ret[522539] "RVV" "temp"
    unknown call_tmp[681574] "expr temp" "maybe param" "maybe type" "temp"
    (681577 'move' call_tmp[681574](172372 call data _mt[243] val[172363]))
    unknown call_tmp[681579] "maybe param" "maybe type" "temp"
    (681582 'move' call_tmp[681579](172376 call _cast c_string[19] call_tmp[681574]))
    unknown data[172378] "dead at end of block" "insert auto destroy"
    (544862 'init var' data[172378] call_tmp[681579])
    (172381 'end of statement')
    unknown call_tmp[681586] "expr temp" "maybe param" "maybe type" "temp"
    (681589 'move' call_tmp[681586](172384 call size _mt[243] val[172363]))
    unknown call_tmp[681593] "maybe param" "maybe type" "temp"
    (681596 'move' call_tmp[681593](172392 call(172387 call (partial) safeCast _mt[243] call_tmp[681586]) int(64)[13]))
    unknown size[172393] "dead at end of block" "insert auto destroy"
    (544864 'init var' size[172393] call_tmp[681593])
    (172396 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681598] "expr temp" "maybe param" "maybe type" "temp"
        (681601 'move' call_tmp[681598](172405 call _cond_test cp[172357]))
        if call_tmp[681598]
        {
          unknown call_tmp[681603] "expr temp" "maybe param" "maybe type" "temp"
          (681606 'move' call_tmp[681603](172402 call createBytesWithNewBuffer data[172378] size[172393]))
          (522545 'move' ret[522539](522544 'coerce' call_tmp[681603] rt[172367]))
          gotoReturn _end_chpl__exportArg[522537] _end_chpl__exportArg[522537]
          (483391 'end of statement' data[172378] size[172393])
        }
        unknown call_tmp[681608] "expr temp" "maybe param" "maybe type" "temp"
        (681611 'move' call_tmp[681608](172415 call createBytesWithBorrowedBuffer data[172378] size[172393]))
        (522551 'move' ret[522539](522550 'coerce' call_tmp[681608] rt[172367]))
        gotoReturn _end_chpl__exportArg[522537] _end_chpl__exportArg[522537]
        (483394 'end of statement' data[172378] size[172393])
      }
    }
    label _end_chpl__exportArg[522537]
    (522541 return ret[522539])
  }
  { scopeless type
    rt[172367]
  }
  (355242 'used modules list'(172108 'use' ChapelStandard[20264])(172112 'use' CPtr[204946])(172115 'use' SysCTypes[20940]))
}