AST dump for ExportWrappers after pass createTaskFunctions.
Module use list: ChapelStandard CPtr SysCTypes 

{
  function chpl__init_ExportWrappers[415937]() : void[4] "insert line file info" "module init"
  {
    (544699 'move' chpl__exportTypeChplByteBuffer[172145](544698 call chpl_byte_buffer[172131]))
    (483221 'end of statement')
    (522400 return _void[55])
  }
  function chpl_byte_buffer[172131].isOwned[813994](arg _mt[813996]:_MT[238], ref arg this[813998]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814008] "RVV" "temp"
    unknown call_tmp[814015] "expr temp" "maybe param" "maybe type" "temp"
    (814018 'move' call_tmp[814015](814002 '.' this[813998] c"isOwned"))
    (814013 'move' ret[814008](814012 'addr of' call_tmp[814015]))
    (814010 return ret[814008])
  }
  function chpl_byte_buffer[172131].data[814020](arg _mt[814022]:_MT[238], ref arg this[814024]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814034] "RVV" "temp"
    unknown call_tmp[814041] "expr temp" "maybe param" "maybe type" "temp"
    (814044 'move' call_tmp[814041](814028 '.' this[814024] c"data"))
    (814039 'move' ret[814034](814038 'addr of' call_tmp[814041]))
    (814036 return ret[814034])
  }
  function chpl_byte_buffer[172131].size[814046](arg _mt[814048]:_MT[238], ref arg this[814050]:chpl_byte_buffer[172131]) ref : _unknown[51] "field accessor" "inline" "method" "primary method" "no implicit copy" "no parens" "reference to const when const this"
  {
    unknown ret[814060] "RVV" "temp"
    unknown call_tmp[814067] "expr temp" "maybe param" "maybe type" "temp"
    (814070 'move' call_tmp[814067](814054 '.' this[814050] c"size"))
    (814065 'move' ret[814060](814064 'addr of' call_tmp[814067]))
    (814062 return ret[814060])
  }
  function chpl_byte_buffer[172131].init[814072](arg _mt[814074]:_MT[238], ref arg this[814075]:chpl_byte_buffer[172131], in arg isOwned[814078] :
  (814081 call int(64)[13] 8) =
  _typeDefaultT[250], in arg data[814093] :
  (814096 call c_ptr[205045](?) c_char[20591]) =
  _typeDefaultT[250], in arg size[814108] :
  (814111 call uint(64)[115] 64) =
  _typeDefaultT[250]) : void[4] "compiler generated" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814124 'init field' this[814075] c"isOwned" isOwned[814078])
    (814127 'init field' this[814075] c"data" data[814093])
    (814133 'end of statement')
    (814130 'init field' this[814075] c"size" size[814108])
    (814135 return _void[55])
  }
  function chpl_byte_buffer[172131].init=[814137](arg _mt[814140]:_MT[238], arg this[814141]:chpl_byte_buffer[172131], arg other[814142]:chpl_byte_buffer[172131]) : _unknown[51] "compiler generated" "copy initializer" "last resort" "method" "primary method" "suppress lvalue error"
  {
    (814146 '=' this[814141] other[814142])
    (814150 return _void[55])
  }
  function chpl_byte_buffer[172131].deinit[814152](arg _mt[814154]:_MT[238], arg this[814156]:chpl_byte_buffer[172131]) : void[4] "compiler generated" "destructor" "inline" "last resort" "method" "primary method"
  {
    (814164 return _void[55])
  }
  function chpl_byte_buffer[172131].writeThis[814166](arg _mt[814170]:_MT[238], arg this[814168]:chpl_byte_buffer[172131], arg f[814169]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814175 call writeThisDefaultImpl f[814169] this[814168])
    (814180 return _void[55])
  }
  function chpl_byte_buffer[172131].readThis[814182](arg _mt[814186]:_MT[238], arg this[814184]:chpl_byte_buffer[172131], arg f[814185]:_any[178](?)) : void[4] throws "compiler generated" "inline" "last resort" "method" "primary method"
  {
    (814190 call readThisDefaultImpl f[814185] this[814184])
    (814196 return _void[55])
  }
  function chpl_fields_are_comparable[814210](arg _arg1[814212]:chpl_byte_buffer[172131], arg _arg2[814213]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814252]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814259] "expr temp" "maybe param" "maybe type" "temp"
    (814262 'move' call_tmp[814259](814216 call isOwned _mt[243] _arg1[814212]))
    unknown call_tmp[814264] "expr temp" "maybe param" "maybe type" "temp"
    (814267 'move' call_tmp[814264](814220 call isOwned _mt[243] _arg2[814213]))
    unknown call_tmp[814269] "expr temp" "maybe param" "maybe type" "temp"
    (814272 'move' call_tmp[814269](814224 'call resolves' c"==" call_tmp[814259] call_tmp[814264]))
    unknown call_tmp[814274] "expr temp" "maybe param" "maybe type" "temp"
    (814277 'move' call_tmp[814274](814226 call data _mt[243] _arg1[814212]))
    unknown call_tmp[814279] "expr temp" "maybe param" "maybe type" "temp"
    (814282 'move' call_tmp[814279](814230 call data _mt[243] _arg2[814213]))
    unknown call_tmp[814284] "expr temp" "maybe param" "maybe type" "temp"
    (814287 'move' call_tmp[814284](814234 'call resolves' c"==" call_tmp[814274] call_tmp[814279]))
    unknown call_tmp[814289] "expr temp" "maybe param" "maybe type" "temp"
    (814292 'move' call_tmp[814289](814236 call size _mt[243] _arg1[814212]))
    unknown call_tmp[814294] "expr temp" "maybe param" "maybe type" "temp"
    (814297 'move' call_tmp[814294](814240 call size _mt[243] _arg2[814213]))
    unknown call_tmp[814299] "expr temp" "maybe param" "maybe type" "temp"
    (814302 'move' call_tmp[814299](814244 'call resolves' c"==" call_tmp[814289] call_tmp[814294]))
    unknown call_tmp[814304] "expr temp" "maybe param" "maybe type" "temp"
    (814307 'move' call_tmp[814304](814246 '&' call_tmp[814269] call_tmp[814284] call_tmp[814299]))
    (814257 'move' ret[814252](814256 'deref' call_tmp[814304]))
    (814254 return ret[814252])
  }
  function ==[814198](arg _arg1[814200]:chpl_byte_buffer[172131], arg _arg2[814201]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814366]:bool[10] "RVV" "temp"
    unknown call_tmp[814388] "expr temp" "maybe param" "maybe type" "temp"
    (814391 'move' call_tmp[814388](814315 call isOwned _mt[243] _arg1[814200]))
    unknown call_tmp[814393] "expr temp" "maybe param" "maybe type" "temp"
    (814396 'move' call_tmp[814393](814319 call isOwned _mt[243] _arg2[814201]))
    unknown call_tmp[814398] "expr temp" "maybe param" "maybe type" "temp"
    (814401 'move' call_tmp[814398](814323 call != call_tmp[814388] call_tmp[814393]))
    if call_tmp[814398]
    {
      (814371 'move' ret[814366](814370 'deref' 0))
      gotoReturn _end_==[814364] _end_==[814364]
    }
    unknown call_tmp[814403] "expr temp" "maybe param" "maybe type" "temp"
    (814406 'move' call_tmp[814403](814329 call data _mt[243] _arg1[814200]))
    unknown call_tmp[814408] "expr temp" "maybe param" "maybe type" "temp"
    (814411 'move' call_tmp[814408](814333 call data _mt[243] _arg2[814201]))
    unknown call_tmp[814413] "expr temp" "maybe param" "maybe type" "temp"
    (814416 'move' call_tmp[814413](814337 call != call_tmp[814403] call_tmp[814408]))
    if call_tmp[814413]
    {
      (814376 'move' ret[814366](814375 'deref' 0))
      gotoReturn _end_==[814364] _end_==[814364]
    }
    unknown call_tmp[814418] "expr temp" "maybe param" "maybe type" "temp"
    (814421 'move' call_tmp[814418](814343 call size _mt[243] _arg1[814200]))
    unknown call_tmp[814423] "expr temp" "maybe param" "maybe type" "temp"
    (814426 'move' call_tmp[814423](814347 call size _mt[243] _arg2[814201]))
    unknown call_tmp[814428] "expr temp" "maybe param" "maybe type" "temp"
    (814431 'move' call_tmp[814428](814351 call != call_tmp[814418] call_tmp[814423]))
    if call_tmp[814428]
    {
      (814381 'move' ret[814366](814380 'deref' 0))
      gotoReturn _end_==[814364] _end_==[814364]
    }
    (814386 'move' ret[814366](814385 'deref' 1))
    label _end_==[814364]
    (814368 return ret[814366])
  }
  where {
    unknown call_tmp[814433] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814436 'move' call_tmp[814433](814204 'typeof' _arg1[814200]))
    unknown call_tmp[814438] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814441 'move' call_tmp[814438](814206 'typeof' _arg2[814201]))
    unknown call_tmp[814443] "expr temp" "maybe param" "maybe type" "temp"
    (814446 'move' call_tmp[814443](814208 call == call_tmp[814433] call_tmp[814438]))
    unknown call_tmp[814448] "expr temp" "maybe param" "maybe type" "temp"
    (814451 'move' call_tmp[814448](814309 call chpl_fields_are_comparable[814210] _arg1[814200] _arg2[814201]))
    (814313 '&' call_tmp[814443] call_tmp[814448])
  }
  function chpl_fields_are_comparable[814465](arg _arg1[814467]:chpl_byte_buffer[172131], arg _arg2[814468]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814507]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814514] "expr temp" "maybe param" "maybe type" "temp"
    (814517 'move' call_tmp[814514](814471 call isOwned _mt[243] _arg1[814467]))
    unknown call_tmp[814519] "expr temp" "maybe param" "maybe type" "temp"
    (814522 'move' call_tmp[814519](814475 call isOwned _mt[243] _arg2[814468]))
    unknown call_tmp[814524] "expr temp" "maybe param" "maybe type" "temp"
    (814527 'move' call_tmp[814524](814479 'call resolves' c"!=" call_tmp[814514] call_tmp[814519]))
    unknown call_tmp[814529] "expr temp" "maybe param" "maybe type" "temp"
    (814532 'move' call_tmp[814529](814481 call data _mt[243] _arg1[814467]))
    unknown call_tmp[814534] "expr temp" "maybe param" "maybe type" "temp"
    (814537 'move' call_tmp[814534](814485 call data _mt[243] _arg2[814468]))
    unknown call_tmp[814539] "expr temp" "maybe param" "maybe type" "temp"
    (814542 'move' call_tmp[814539](814489 'call resolves' c"!=" call_tmp[814529] call_tmp[814534]))
    unknown call_tmp[814544] "expr temp" "maybe param" "maybe type" "temp"
    (814547 'move' call_tmp[814544](814491 call size _mt[243] _arg1[814467]))
    unknown call_tmp[814549] "expr temp" "maybe param" "maybe type" "temp"
    (814552 'move' call_tmp[814549](814495 call size _mt[243] _arg2[814468]))
    unknown call_tmp[814554] "expr temp" "maybe param" "maybe type" "temp"
    (814557 'move' call_tmp[814554](814499 'call resolves' c"!=" call_tmp[814544] call_tmp[814549]))
    unknown call_tmp[814559] "expr temp" "maybe param" "maybe type" "temp"
    (814562 'move' call_tmp[814559](814501 '&' call_tmp[814524] call_tmp[814539] call_tmp[814554]))
    (814512 'move' ret[814507](814511 'deref' call_tmp[814559]))
    (814509 return ret[814507])
  }
  function !=[814453](arg _arg1[814455]:chpl_byte_buffer[172131], arg _arg2[814456]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814621]:bool[10] "RVV" "temp"
    unknown call_tmp[814643] "expr temp" "maybe param" "maybe type" "temp"
    (814646 'move' call_tmp[814643](814570 call isOwned _mt[243] _arg1[814455]))
    unknown call_tmp[814648] "expr temp" "maybe param" "maybe type" "temp"
    (814651 'move' call_tmp[814648](814574 call isOwned _mt[243] _arg2[814456]))
    unknown call_tmp[814653] "expr temp" "maybe param" "maybe type" "temp"
    (814656 'move' call_tmp[814653](814578 call != call_tmp[814643] call_tmp[814648]))
    if call_tmp[814653]
    {
      (814626 'move' ret[814621](814625 'deref' 1))
      gotoReturn _end_!=[814619] _end_!=[814619]
    }
    unknown call_tmp[814658] "expr temp" "maybe param" "maybe type" "temp"
    (814661 'move' call_tmp[814658](814584 call data _mt[243] _arg1[814455]))
    unknown call_tmp[814663] "expr temp" "maybe param" "maybe type" "temp"
    (814666 'move' call_tmp[814663](814588 call data _mt[243] _arg2[814456]))
    unknown call_tmp[814668] "expr temp" "maybe param" "maybe type" "temp"
    (814671 'move' call_tmp[814668](814592 call != call_tmp[814658] call_tmp[814663]))
    if call_tmp[814668]
    {
      (814631 'move' ret[814621](814630 'deref' 1))
      gotoReturn _end_!=[814619] _end_!=[814619]
    }
    unknown call_tmp[814673] "expr temp" "maybe param" "maybe type" "temp"
    (814676 'move' call_tmp[814673](814598 call size _mt[243] _arg1[814455]))
    unknown call_tmp[814678] "expr temp" "maybe param" "maybe type" "temp"
    (814681 'move' call_tmp[814678](814602 call size _mt[243] _arg2[814456]))
    unknown call_tmp[814683] "expr temp" "maybe param" "maybe type" "temp"
    (814686 'move' call_tmp[814683](814606 call != call_tmp[814673] call_tmp[814678]))
    if call_tmp[814683]
    {
      (814636 'move' ret[814621](814635 'deref' 1))
      gotoReturn _end_!=[814619] _end_!=[814619]
    }
    (814641 'move' ret[814621](814640 'deref' 0))
    label _end_!=[814619]
    (814623 return ret[814621])
  }
  where {
    unknown call_tmp[814688] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814691 'move' call_tmp[814688](814459 'typeof' _arg1[814455]))
    unknown call_tmp[814693] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (814696 'move' call_tmp[814693](814461 'typeof' _arg2[814456]))
    unknown call_tmp[814698] "expr temp" "maybe param" "maybe type" "temp"
    (814701 'move' call_tmp[814698](814463 call == call_tmp[814688] call_tmp[814693]))
    unknown call_tmp[814703] "expr temp" "maybe param" "maybe type" "temp"
    (814706 'move' call_tmp[814703](814564 call chpl_fields_are_comparable[814465] _arg1[814455] _arg2[814456]))
    (814568 '&' call_tmp[814698] call_tmp[814703])
  }
  function chpl_fields_are_comparable[814720](arg _arg1[814722]:chpl_byte_buffer[172131], arg _arg2[814723]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[814762]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[814769] "expr temp" "maybe param" "maybe type" "temp"
    (814772 'move' call_tmp[814769](814726 call isOwned _mt[243] _arg1[814722]))
    unknown call_tmp[814774] "expr temp" "maybe param" "maybe type" "temp"
    (814777 'move' call_tmp[814774](814730 call isOwned _mt[243] _arg2[814723]))
    unknown call_tmp[814779] "expr temp" "maybe param" "maybe type" "temp"
    (814782 'move' call_tmp[814779](814734 'call resolves' c"<" call_tmp[814769] call_tmp[814774]))
    unknown call_tmp[814784] "expr temp" "maybe param" "maybe type" "temp"
    (814787 'move' call_tmp[814784](814736 call data _mt[243] _arg1[814722]))
    unknown call_tmp[814789] "expr temp" "maybe param" "maybe type" "temp"
    (814792 'move' call_tmp[814789](814740 call data _mt[243] _arg2[814723]))
    unknown call_tmp[814794] "expr temp" "maybe param" "maybe type" "temp"
    (814797 'move' call_tmp[814794](814744 'call resolves' c"<" call_tmp[814784] call_tmp[814789]))
    unknown call_tmp[814799] "expr temp" "maybe param" "maybe type" "temp"
    (814802 'move' call_tmp[814799](814746 call size _mt[243] _arg1[814722]))
    unknown call_tmp[814804] "expr temp" "maybe param" "maybe type" "temp"
    (814807 'move' call_tmp[814804](814750 call size _mt[243] _arg2[814723]))
    unknown call_tmp[814809] "expr temp" "maybe param" "maybe type" "temp"
    (814812 'move' call_tmp[814809](814754 'call resolves' c"<" call_tmp[814799] call_tmp[814804]))
    unknown call_tmp[814814] "expr temp" "maybe param" "maybe type" "temp"
    (814817 'move' call_tmp[814814](814756 '&' call_tmp[814779] call_tmp[814794] call_tmp[814809]))
    (814767 'move' ret[814762](814766 'deref' call_tmp[814814]))
    (814764 return ret[814762])
  }
  function <[814708](arg _arg1[814710]:chpl_byte_buffer[172131], arg _arg2[814711]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[814921]:bool[10] "RVV" "temp"
    unknown call_tmp[814958] "expr temp" "maybe param" "maybe type" "temp"
    (814961 'move' call_tmp[814958](814825 call isOwned _mt[243] _arg1[814710]))
    unknown call_tmp[814963] "expr temp" "maybe param" "maybe type" "temp"
    (814966 'move' call_tmp[814963](814829 call isOwned _mt[243] _arg2[814711]))
    unknown call_tmp[814968] "expr temp" "maybe param" "maybe type" "temp"
    (814971 'move' call_tmp[814968](814833 call < call_tmp[814958] call_tmp[814963]))
    if call_tmp[814968]
    {
      (814926 'move' ret[814921](814925 'deref' 1))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    unknown call_tmp[814973] "expr temp" "maybe param" "maybe type" "temp"
    (814976 'move' call_tmp[814973](814839 call isOwned _mt[243] _arg1[814710]))
    unknown call_tmp[814978] "expr temp" "maybe param" "maybe type" "temp"
    (814981 'move' call_tmp[814978](814843 call isOwned _mt[243] _arg2[814711]))
    unknown call_tmp[814983] "expr temp" "maybe param" "maybe type" "temp"
    (814986 'move' call_tmp[814983](814847 call > call_tmp[814973] call_tmp[814978]))
    if call_tmp[814983]
    {
      (814931 'move' ret[814921](814930 'deref' 0))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    unknown call_tmp[814988] "expr temp" "maybe param" "maybe type" "temp"
    (814991 'move' call_tmp[814988](814853 call data _mt[243] _arg1[814710]))
    unknown call_tmp[814993] "expr temp" "maybe param" "maybe type" "temp"
    (814996 'move' call_tmp[814993](814857 call data _mt[243] _arg2[814711]))
    unknown call_tmp[814998] "expr temp" "maybe param" "maybe type" "temp"
    (815001 'move' call_tmp[814998](814861 call < call_tmp[814988] call_tmp[814993]))
    if call_tmp[814998]
    {
      (814936 'move' ret[814921](814935 'deref' 1))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    unknown call_tmp[815003] "expr temp" "maybe param" "maybe type" "temp"
    (815006 'move' call_tmp[815003](814867 call data _mt[243] _arg1[814710]))
    unknown call_tmp[815008] "expr temp" "maybe param" "maybe type" "temp"
    (815011 'move' call_tmp[815008](814871 call data _mt[243] _arg2[814711]))
    unknown call_tmp[815013] "expr temp" "maybe param" "maybe type" "temp"
    (815016 'move' call_tmp[815013](814875 call > call_tmp[815003] call_tmp[815008]))
    if call_tmp[815013]
    {
      (814941 'move' ret[814921](814940 'deref' 0))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    unknown call_tmp[815018] "expr temp" "maybe param" "maybe type" "temp"
    (815021 'move' call_tmp[815018](814881 call size _mt[243] _arg1[814710]))
    unknown call_tmp[815023] "expr temp" "maybe param" "maybe type" "temp"
    (815026 'move' call_tmp[815023](814885 call size _mt[243] _arg2[814711]))
    unknown call_tmp[815028] "expr temp" "maybe param" "maybe type" "temp"
    (815031 'move' call_tmp[815028](814889 call < call_tmp[815018] call_tmp[815023]))
    if call_tmp[815028]
    {
      (814946 'move' ret[814921](814945 'deref' 1))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    unknown call_tmp[815033] "expr temp" "maybe param" "maybe type" "temp"
    (815036 'move' call_tmp[815033](814895 call size _mt[243] _arg1[814710]))
    unknown call_tmp[815038] "expr temp" "maybe param" "maybe type" "temp"
    (815041 'move' call_tmp[815038](814899 call size _mt[243] _arg2[814711]))
    unknown call_tmp[815043] "expr temp" "maybe param" "maybe type" "temp"
    (815046 'move' call_tmp[815043](814903 call > call_tmp[815033] call_tmp[815038]))
    if call_tmp[815043]
    {
      (814951 'move' ret[814921](814950 'deref' 0))
      gotoReturn _end_<[814919] _end_<[814919]
    }
    (814956 'move' ret[814921](814955 'deref' 0))
    label _end_<[814919]
    (814923 return ret[814921])
  }
  where {
    unknown call_tmp[815048] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815051 'move' call_tmp[815048](814714 'typeof' _arg1[814710]))
    unknown call_tmp[815053] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815056 'move' call_tmp[815053](814716 'typeof' _arg2[814711]))
    unknown call_tmp[815058] "expr temp" "maybe param" "maybe type" "temp"
    (815061 'move' call_tmp[815058](814718 call == call_tmp[815048] call_tmp[815053]))
    unknown call_tmp[815063] "expr temp" "maybe param" "maybe type" "temp"
    (815066 'move' call_tmp[815063](814819 call chpl_fields_are_comparable[814720] _arg1[814710] _arg2[814711]))
    (814823 '&' call_tmp[815058] call_tmp[815063])
  }
  function chpl_fields_are_comparable[815080](arg _arg1[815082]:chpl_byte_buffer[172131], arg _arg2[815083]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815122]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815129] "expr temp" "maybe param" "maybe type" "temp"
    (815132 'move' call_tmp[815129](815086 call isOwned _mt[243] _arg1[815082]))
    unknown call_tmp[815134] "expr temp" "maybe param" "maybe type" "temp"
    (815137 'move' call_tmp[815134](815090 call isOwned _mt[243] _arg2[815083]))
    unknown call_tmp[815139] "expr temp" "maybe param" "maybe type" "temp"
    (815142 'move' call_tmp[815139](815094 'call resolves' c"<=" call_tmp[815129] call_tmp[815134]))
    unknown call_tmp[815144] "expr temp" "maybe param" "maybe type" "temp"
    (815147 'move' call_tmp[815144](815096 call data _mt[243] _arg1[815082]))
    unknown call_tmp[815149] "expr temp" "maybe param" "maybe type" "temp"
    (815152 'move' call_tmp[815149](815100 call data _mt[243] _arg2[815083]))
    unknown call_tmp[815154] "expr temp" "maybe param" "maybe type" "temp"
    (815157 'move' call_tmp[815154](815104 'call resolves' c"<=" call_tmp[815144] call_tmp[815149]))
    unknown call_tmp[815159] "expr temp" "maybe param" "maybe type" "temp"
    (815162 'move' call_tmp[815159](815106 call size _mt[243] _arg1[815082]))
    unknown call_tmp[815164] "expr temp" "maybe param" "maybe type" "temp"
    (815167 'move' call_tmp[815164](815110 call size _mt[243] _arg2[815083]))
    unknown call_tmp[815169] "expr temp" "maybe param" "maybe type" "temp"
    (815172 'move' call_tmp[815169](815114 'call resolves' c"<=" call_tmp[815159] call_tmp[815164]))
    unknown call_tmp[815174] "expr temp" "maybe param" "maybe type" "temp"
    (815177 'move' call_tmp[815174](815116 '&' call_tmp[815139] call_tmp[815154] call_tmp[815169]))
    (815127 'move' ret[815122](815126 'deref' call_tmp[815174]))
    (815124 return ret[815122])
  }
  function <=[815068](arg _arg1[815070]:chpl_byte_buffer[172131], arg _arg2[815071]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815281]:bool[10] "RVV" "temp"
    unknown call_tmp[815318] "expr temp" "maybe param" "maybe type" "temp"
    (815321 'move' call_tmp[815318](815185 call isOwned _mt[243] _arg1[815070]))
    unknown call_tmp[815323] "expr temp" "maybe param" "maybe type" "temp"
    (815326 'move' call_tmp[815323](815189 call isOwned _mt[243] _arg2[815071]))
    unknown call_tmp[815328] "expr temp" "maybe param" "maybe type" "temp"
    (815331 'move' call_tmp[815328](815193 call < call_tmp[815318] call_tmp[815323]))
    if call_tmp[815328]
    {
      (815286 'move' ret[815281](815285 'deref' 1))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    unknown call_tmp[815333] "expr temp" "maybe param" "maybe type" "temp"
    (815336 'move' call_tmp[815333](815199 call isOwned _mt[243] _arg1[815070]))
    unknown call_tmp[815338] "expr temp" "maybe param" "maybe type" "temp"
    (815341 'move' call_tmp[815338](815203 call isOwned _mt[243] _arg2[815071]))
    unknown call_tmp[815343] "expr temp" "maybe param" "maybe type" "temp"
    (815346 'move' call_tmp[815343](815207 call > call_tmp[815333] call_tmp[815338]))
    if call_tmp[815343]
    {
      (815291 'move' ret[815281](815290 'deref' 0))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    unknown call_tmp[815348] "expr temp" "maybe param" "maybe type" "temp"
    (815351 'move' call_tmp[815348](815213 call data _mt[243] _arg1[815070]))
    unknown call_tmp[815353] "expr temp" "maybe param" "maybe type" "temp"
    (815356 'move' call_tmp[815353](815217 call data _mt[243] _arg2[815071]))
    unknown call_tmp[815358] "expr temp" "maybe param" "maybe type" "temp"
    (815361 'move' call_tmp[815358](815221 call < call_tmp[815348] call_tmp[815353]))
    if call_tmp[815358]
    {
      (815296 'move' ret[815281](815295 'deref' 1))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    unknown call_tmp[815363] "expr temp" "maybe param" "maybe type" "temp"
    (815366 'move' call_tmp[815363](815227 call data _mt[243] _arg1[815070]))
    unknown call_tmp[815368] "expr temp" "maybe param" "maybe type" "temp"
    (815371 'move' call_tmp[815368](815231 call data _mt[243] _arg2[815071]))
    unknown call_tmp[815373] "expr temp" "maybe param" "maybe type" "temp"
    (815376 'move' call_tmp[815373](815235 call > call_tmp[815363] call_tmp[815368]))
    if call_tmp[815373]
    {
      (815301 'move' ret[815281](815300 'deref' 0))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    unknown call_tmp[815378] "expr temp" "maybe param" "maybe type" "temp"
    (815381 'move' call_tmp[815378](815241 call size _mt[243] _arg1[815070]))
    unknown call_tmp[815383] "expr temp" "maybe param" "maybe type" "temp"
    (815386 'move' call_tmp[815383](815245 call size _mt[243] _arg2[815071]))
    unknown call_tmp[815388] "expr temp" "maybe param" "maybe type" "temp"
    (815391 'move' call_tmp[815388](815249 call < call_tmp[815378] call_tmp[815383]))
    if call_tmp[815388]
    {
      (815306 'move' ret[815281](815305 'deref' 1))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    unknown call_tmp[815393] "expr temp" "maybe param" "maybe type" "temp"
    (815396 'move' call_tmp[815393](815255 call size _mt[243] _arg1[815070]))
    unknown call_tmp[815398] "expr temp" "maybe param" "maybe type" "temp"
    (815401 'move' call_tmp[815398](815259 call size _mt[243] _arg2[815071]))
    unknown call_tmp[815403] "expr temp" "maybe param" "maybe type" "temp"
    (815406 'move' call_tmp[815403](815263 call > call_tmp[815393] call_tmp[815398]))
    if call_tmp[815403]
    {
      (815311 'move' ret[815281](815310 'deref' 0))
      gotoReturn _end_<=[815279] _end_<=[815279]
    }
    (815316 'move' ret[815281](815315 'deref' 1))
    label _end_<=[815279]
    (815283 return ret[815281])
  }
  where {
    unknown call_tmp[815408] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815411 'move' call_tmp[815408](815074 'typeof' _arg1[815070]))
    unknown call_tmp[815413] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815416 'move' call_tmp[815413](815076 'typeof' _arg2[815071]))
    unknown call_tmp[815418] "expr temp" "maybe param" "maybe type" "temp"
    (815421 'move' call_tmp[815418](815078 call == call_tmp[815408] call_tmp[815413]))
    unknown call_tmp[815423] "expr temp" "maybe param" "maybe type" "temp"
    (815426 'move' call_tmp[815423](815179 call chpl_fields_are_comparable[815080] _arg1[815070] _arg2[815071]))
    (815183 '&' call_tmp[815418] call_tmp[815423])
  }
  function chpl_fields_are_comparable[815440](arg _arg1[815442]:chpl_byte_buffer[172131], arg _arg2[815443]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815482]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815489] "expr temp" "maybe param" "maybe type" "temp"
    (815492 'move' call_tmp[815489](815446 call isOwned _mt[243] _arg1[815442]))
    unknown call_tmp[815494] "expr temp" "maybe param" "maybe type" "temp"
    (815497 'move' call_tmp[815494](815450 call isOwned _mt[243] _arg2[815443]))
    unknown call_tmp[815499] "expr temp" "maybe param" "maybe type" "temp"
    (815502 'move' call_tmp[815499](815454 'call resolves' c">" call_tmp[815489] call_tmp[815494]))
    unknown call_tmp[815504] "expr temp" "maybe param" "maybe type" "temp"
    (815507 'move' call_tmp[815504](815456 call data _mt[243] _arg1[815442]))
    unknown call_tmp[815509] "expr temp" "maybe param" "maybe type" "temp"
    (815512 'move' call_tmp[815509](815460 call data _mt[243] _arg2[815443]))
    unknown call_tmp[815514] "expr temp" "maybe param" "maybe type" "temp"
    (815517 'move' call_tmp[815514](815464 'call resolves' c">" call_tmp[815504] call_tmp[815509]))
    unknown call_tmp[815519] "expr temp" "maybe param" "maybe type" "temp"
    (815522 'move' call_tmp[815519](815466 call size _mt[243] _arg1[815442]))
    unknown call_tmp[815524] "expr temp" "maybe param" "maybe type" "temp"
    (815527 'move' call_tmp[815524](815470 call size _mt[243] _arg2[815443]))
    unknown call_tmp[815529] "expr temp" "maybe param" "maybe type" "temp"
    (815532 'move' call_tmp[815529](815474 'call resolves' c">" call_tmp[815519] call_tmp[815524]))
    unknown call_tmp[815534] "expr temp" "maybe param" "maybe type" "temp"
    (815537 'move' call_tmp[815534](815476 '&' call_tmp[815499] call_tmp[815514] call_tmp[815529]))
    (815487 'move' ret[815482](815486 'deref' call_tmp[815534]))
    (815484 return ret[815482])
  }
  function >[815428](arg _arg1[815430]:chpl_byte_buffer[172131], arg _arg2[815431]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[815641]:bool[10] "RVV" "temp"
    unknown call_tmp[815678] "expr temp" "maybe param" "maybe type" "temp"
    (815681 'move' call_tmp[815678](815545 call isOwned _mt[243] _arg1[815430]))
    unknown call_tmp[815683] "expr temp" "maybe param" "maybe type" "temp"
    (815686 'move' call_tmp[815683](815549 call isOwned _mt[243] _arg2[815431]))
    unknown call_tmp[815688] "expr temp" "maybe param" "maybe type" "temp"
    (815691 'move' call_tmp[815688](815553 call > call_tmp[815678] call_tmp[815683]))
    if call_tmp[815688]
    {
      (815646 'move' ret[815641](815645 'deref' 1))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    unknown call_tmp[815693] "expr temp" "maybe param" "maybe type" "temp"
    (815696 'move' call_tmp[815693](815559 call isOwned _mt[243] _arg1[815430]))
    unknown call_tmp[815698] "expr temp" "maybe param" "maybe type" "temp"
    (815701 'move' call_tmp[815698](815563 call isOwned _mt[243] _arg2[815431]))
    unknown call_tmp[815703] "expr temp" "maybe param" "maybe type" "temp"
    (815706 'move' call_tmp[815703](815567 call < call_tmp[815693] call_tmp[815698]))
    if call_tmp[815703]
    {
      (815651 'move' ret[815641](815650 'deref' 0))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    unknown call_tmp[815708] "expr temp" "maybe param" "maybe type" "temp"
    (815711 'move' call_tmp[815708](815573 call data _mt[243] _arg1[815430]))
    unknown call_tmp[815713] "expr temp" "maybe param" "maybe type" "temp"
    (815716 'move' call_tmp[815713](815577 call data _mt[243] _arg2[815431]))
    unknown call_tmp[815718] "expr temp" "maybe param" "maybe type" "temp"
    (815721 'move' call_tmp[815718](815581 call > call_tmp[815708] call_tmp[815713]))
    if call_tmp[815718]
    {
      (815656 'move' ret[815641](815655 'deref' 1))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    unknown call_tmp[815723] "expr temp" "maybe param" "maybe type" "temp"
    (815726 'move' call_tmp[815723](815587 call data _mt[243] _arg1[815430]))
    unknown call_tmp[815728] "expr temp" "maybe param" "maybe type" "temp"
    (815731 'move' call_tmp[815728](815591 call data _mt[243] _arg2[815431]))
    unknown call_tmp[815733] "expr temp" "maybe param" "maybe type" "temp"
    (815736 'move' call_tmp[815733](815595 call < call_tmp[815723] call_tmp[815728]))
    if call_tmp[815733]
    {
      (815661 'move' ret[815641](815660 'deref' 0))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    unknown call_tmp[815738] "expr temp" "maybe param" "maybe type" "temp"
    (815741 'move' call_tmp[815738](815601 call size _mt[243] _arg1[815430]))
    unknown call_tmp[815743] "expr temp" "maybe param" "maybe type" "temp"
    (815746 'move' call_tmp[815743](815605 call size _mt[243] _arg2[815431]))
    unknown call_tmp[815748] "expr temp" "maybe param" "maybe type" "temp"
    (815751 'move' call_tmp[815748](815609 call > call_tmp[815738] call_tmp[815743]))
    if call_tmp[815748]
    {
      (815666 'move' ret[815641](815665 'deref' 1))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    unknown call_tmp[815753] "expr temp" "maybe param" "maybe type" "temp"
    (815756 'move' call_tmp[815753](815615 call size _mt[243] _arg1[815430]))
    unknown call_tmp[815758] "expr temp" "maybe param" "maybe type" "temp"
    (815761 'move' call_tmp[815758](815619 call size _mt[243] _arg2[815431]))
    unknown call_tmp[815763] "expr temp" "maybe param" "maybe type" "temp"
    (815766 'move' call_tmp[815763](815623 call < call_tmp[815753] call_tmp[815758]))
    if call_tmp[815763]
    {
      (815671 'move' ret[815641](815670 'deref' 0))
      gotoReturn _end_>[815639] _end_>[815639]
    }
    (815676 'move' ret[815641](815675 'deref' 0))
    label _end_>[815639]
    (815643 return ret[815641])
  }
  where {
    unknown call_tmp[815768] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815771 'move' call_tmp[815768](815434 'typeof' _arg1[815430]))
    unknown call_tmp[815773] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (815776 'move' call_tmp[815773](815436 'typeof' _arg2[815431]))
    unknown call_tmp[815778] "expr temp" "maybe param" "maybe type" "temp"
    (815781 'move' call_tmp[815778](815438 call == call_tmp[815768] call_tmp[815773]))
    unknown call_tmp[815783] "expr temp" "maybe param" "maybe type" "temp"
    (815786 'move' call_tmp[815783](815539 call chpl_fields_are_comparable[815440] _arg1[815430] _arg2[815431]))
    (815543 '&' call_tmp[815778] call_tmp[815783])
  }
  function chpl_fields_are_comparable[815800](arg _arg1[815802]:chpl_byte_buffer[172131], arg _arg2[815803]:chpl_byte_buffer[172131]) param : bool[10] "compiler generated" "last resort" "param"
  {
    val ret[815842]:bool[10] "RVV" "param" "temp"
    unknown call_tmp[815849] "expr temp" "maybe param" "maybe type" "temp"
    (815852 'move' call_tmp[815849](815806 call isOwned _mt[243] _arg1[815802]))
    unknown call_tmp[815854] "expr temp" "maybe param" "maybe type" "temp"
    (815857 'move' call_tmp[815854](815810 call isOwned _mt[243] _arg2[815803]))
    unknown call_tmp[815859] "expr temp" "maybe param" "maybe type" "temp"
    (815862 'move' call_tmp[815859](815814 'call resolves' c">=" call_tmp[815849] call_tmp[815854]))
    unknown call_tmp[815864] "expr temp" "maybe param" "maybe type" "temp"
    (815867 'move' call_tmp[815864](815816 call data _mt[243] _arg1[815802]))
    unknown call_tmp[815869] "expr temp" "maybe param" "maybe type" "temp"
    (815872 'move' call_tmp[815869](815820 call data _mt[243] _arg2[815803]))
    unknown call_tmp[815874] "expr temp" "maybe param" "maybe type" "temp"
    (815877 'move' call_tmp[815874](815824 'call resolves' c">=" call_tmp[815864] call_tmp[815869]))
    unknown call_tmp[815879] "expr temp" "maybe param" "maybe type" "temp"
    (815882 'move' call_tmp[815879](815826 call size _mt[243] _arg1[815802]))
    unknown call_tmp[815884] "expr temp" "maybe param" "maybe type" "temp"
    (815887 'move' call_tmp[815884](815830 call size _mt[243] _arg2[815803]))
    unknown call_tmp[815889] "expr temp" "maybe param" "maybe type" "temp"
    (815892 'move' call_tmp[815889](815834 'call resolves' c">=" call_tmp[815879] call_tmp[815884]))
    unknown call_tmp[815894] "expr temp" "maybe param" "maybe type" "temp"
    (815897 'move' call_tmp[815894](815836 '&' call_tmp[815859] call_tmp[815874] call_tmp[815889]))
    (815847 'move' ret[815842](815846 'deref' call_tmp[815894]))
    (815844 return ret[815842])
  }
  function >=[815788](arg _arg1[815790]:chpl_byte_buffer[172131], arg _arg2[815791]:chpl_byte_buffer[172131]) : bool[10] "compiler generated" "last resort"
  {
    val ret[816001]:bool[10] "RVV" "temp"
    unknown call_tmp[816038] "expr temp" "maybe param" "maybe type" "temp"
    (816041 'move' call_tmp[816038](815905 call isOwned _mt[243] _arg1[815790]))
    unknown call_tmp[816043] "expr temp" "maybe param" "maybe type" "temp"
    (816046 'move' call_tmp[816043](815909 call isOwned _mt[243] _arg2[815791]))
    unknown call_tmp[816048] "expr temp" "maybe param" "maybe type" "temp"
    (816051 'move' call_tmp[816048](815913 call > call_tmp[816038] call_tmp[816043]))
    if call_tmp[816048]
    {
      (816006 'move' ret[816001](816005 'deref' 1))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    unknown call_tmp[816053] "expr temp" "maybe param" "maybe type" "temp"
    (816056 'move' call_tmp[816053](815919 call isOwned _mt[243] _arg1[815790]))
    unknown call_tmp[816058] "expr temp" "maybe param" "maybe type" "temp"
    (816061 'move' call_tmp[816058](815923 call isOwned _mt[243] _arg2[815791]))
    unknown call_tmp[816063] "expr temp" "maybe param" "maybe type" "temp"
    (816066 'move' call_tmp[816063](815927 call < call_tmp[816053] call_tmp[816058]))
    if call_tmp[816063]
    {
      (816011 'move' ret[816001](816010 'deref' 0))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    unknown call_tmp[816068] "expr temp" "maybe param" "maybe type" "temp"
    (816071 'move' call_tmp[816068](815933 call data _mt[243] _arg1[815790]))
    unknown call_tmp[816073] "expr temp" "maybe param" "maybe type" "temp"
    (816076 'move' call_tmp[816073](815937 call data _mt[243] _arg2[815791]))
    unknown call_tmp[816078] "expr temp" "maybe param" "maybe type" "temp"
    (816081 'move' call_tmp[816078](815941 call > call_tmp[816068] call_tmp[816073]))
    if call_tmp[816078]
    {
      (816016 'move' ret[816001](816015 'deref' 1))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    unknown call_tmp[816083] "expr temp" "maybe param" "maybe type" "temp"
    (816086 'move' call_tmp[816083](815947 call data _mt[243] _arg1[815790]))
    unknown call_tmp[816088] "expr temp" "maybe param" "maybe type" "temp"
    (816091 'move' call_tmp[816088](815951 call data _mt[243] _arg2[815791]))
    unknown call_tmp[816093] "expr temp" "maybe param" "maybe type" "temp"
    (816096 'move' call_tmp[816093](815955 call < call_tmp[816083] call_tmp[816088]))
    if call_tmp[816093]
    {
      (816021 'move' ret[816001](816020 'deref' 0))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    unknown call_tmp[816098] "expr temp" "maybe param" "maybe type" "temp"
    (816101 'move' call_tmp[816098](815961 call size _mt[243] _arg1[815790]))
    unknown call_tmp[816103] "expr temp" "maybe param" "maybe type" "temp"
    (816106 'move' call_tmp[816103](815965 call size _mt[243] _arg2[815791]))
    unknown call_tmp[816108] "expr temp" "maybe param" "maybe type" "temp"
    (816111 'move' call_tmp[816108](815969 call > call_tmp[816098] call_tmp[816103]))
    if call_tmp[816108]
    {
      (816026 'move' ret[816001](816025 'deref' 1))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    unknown call_tmp[816113] "expr temp" "maybe param" "maybe type" "temp"
    (816116 'move' call_tmp[816113](815975 call size _mt[243] _arg1[815790]))
    unknown call_tmp[816118] "expr temp" "maybe param" "maybe type" "temp"
    (816121 'move' call_tmp[816118](815979 call size _mt[243] _arg2[815791]))
    unknown call_tmp[816123] "expr temp" "maybe param" "maybe type" "temp"
    (816126 'move' call_tmp[816123](815983 call < call_tmp[816113] call_tmp[816118]))
    if call_tmp[816123]
    {
      (816031 'move' ret[816001](816030 'deref' 0))
      gotoReturn _end_>=[815999] _end_>=[815999]
    }
    (816036 'move' ret[816001](816035 'deref' 1))
    label _end_>=[815999]
    (816003 return ret[816001])
  }
  where {
    unknown call_tmp[816128] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816131 'move' call_tmp[816128](815794 'typeof' _arg1[815790]))
    unknown call_tmp[816133] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816136 'move' call_tmp[816133](815796 'typeof' _arg2[815791]))
    unknown call_tmp[816138] "expr temp" "maybe param" "maybe type" "temp"
    (816141 'move' call_tmp[816138](815798 call == call_tmp[816128] call_tmp[816133]))
    unknown call_tmp[816143] "expr temp" "maybe param" "maybe type" "temp"
    (816146 'move' call_tmp[816143](815899 call chpl_fields_are_comparable[815800] _arg1[815790] _arg2[815791]))
    (815903 '&' call_tmp[816138] call_tmp[816143])
  }
  function =[816148](ref arg _arg1[816150]:chpl_byte_buffer[172131], const?  ref arg _arg2[816151]:chpl_byte_buffer[172131]) : void[4] "assignop" "compiler generated" "inline" "last resort"
  {
    (816161 '=' _arg1[816150] _arg2[816151])
    (816166 return _void[55])
  }
  where {
    unknown call_tmp[816168] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816171 'move' call_tmp[816168](816154 'typeof' _arg1[816150]))
    unknown call_tmp[816173] "expr temp" "maybe param" "maybe type" "temp" "type variable"
    (816176 'move' call_tmp[816173](816156 'typeof' _arg2[816151]))
    (816158 call == call_tmp[816168] call_tmp[816173])
  }
  function chpl__defaultHash[816178](arg r[816180]:chpl_byte_buffer[172131]) : _unknown[51] "compiler generated" "last resort"
  {
    unknown ret[816211] "RVV" "temp"
    unknown call_tmp[816218] "expr temp" "maybe param" "maybe type" "temp"
    (816221 'move' call_tmp[816218](816197 call size _mt[243] r[816180]))
    unknown call_tmp[816223] "expr temp" "maybe param" "maybe type" "temp"
    (816226 'move' call_tmp[816223](816201 call chpl__defaultHash call_tmp[816218]))
    unknown call_tmp[816228] "expr temp" "maybe param" "maybe type" "temp"
    (816231 'move' call_tmp[816228](816188 call data _mt[243] r[816180]))
    unknown call_tmp[816233] "expr temp" "maybe param" "maybe type" "temp"
    (816236 'move' call_tmp[816233](816192 call chpl__defaultHash call_tmp[816228]))
    unknown call_tmp[816238] "expr temp" "maybe param" "maybe type" "temp"
    (816241 'move' call_tmp[816238](816182 call isOwned _mt[243] r[816180]))
    unknown call_tmp[816243] "expr temp" "maybe param" "maybe type" "temp"
    (816246 'move' call_tmp[816243](816186 call chpl__defaultHash call_tmp[816238]))
    unknown call_tmp[816248] "expr temp" "maybe param" "maybe type" "temp"
    (816251 'move' call_tmp[816248](816194 call chpl__defaultHashCombine call_tmp[816233] call_tmp[816243] 2))
    unknown call_tmp[816253] "expr temp" "maybe param" "maybe type" "temp"
    (816256 'move' call_tmp[816253](816203 call chpl__defaultHashCombine call_tmp[816223] call_tmp[816248] 3))
    (816216 'move' ret[816211](816215 'deref' call_tmp[816253]))
    (816213 return ret[816211])
  }
  type chpl_byte_buffer[172131] val isOwned[172110]:int(8)[85](172109 call int(64)[13] 8) unknown data[172118](172117 call c_ptr[205045](?) c_char[20591]) val size[172126]:uint(64)[115](172125 call uint(64)[115] 64)
  function chpl_byte_buffer_free[172140](arg cb[172137]:chpl_byte_buffer[172131]) : void[4] "extern" "local args" "no fn body" "no return value for void"
  {
    (522330 return _void[55])
  }
  unknown chpl__exportTypeChplByteBuffer[172145] "dead at end of block" "insert auto destroy" "type variable" chpl_byte_buffer[172131]
  function chpl__exportRetStringOrBytes[172152](ref arg val[172150]:_any[178](?)) : _unknown[51]
  {
    unknown ret[522334] "RVV" "temp"
    unknown result[172156] "dead at end of block" "insert auto destroy"
    (544701 'default init var' result[172156] chpl_byte_buffer[172131])
    (172159 'end of statement')
    unknown call_tmp[681306] "expr temp" "maybe param" "maybe type" "temp"
    (681309 'move' call_tmp[681306](172162 call isOwned _mt[243] result[172156]))
    unknown call_tmp[681311] "expr temp" "maybe param" "maybe type" "temp"
    (681314 'move' call_tmp[681311](172172 call int(64)[13] 8))
    unknown call_tmp[681318] "expr temp" "maybe param" "maybe type" "temp"
    (681321 'move' call_tmp[681318](172166 call isOwned _mt[243] val[172150]))
    unknown call_tmp[681323] "expr temp" "maybe param" "maybe type" "temp"
    (681326 'move' call_tmp[681323](172173 call _cast call_tmp[681311] call_tmp[681318]))
    (172175 call = call_tmp[681306] call_tmp[681323])
    (483222 'end of statement' result[172156])
    unknown call_tmp[681330] "expr temp" "maybe param" "maybe type" "temp"
    (681333 'move' call_tmp[681330](172179 call data _mt[243] result[172156]))
    unknown call_tmp[681335] "expr temp" "maybe param" "maybe type" "temp"
    (681338 'move' call_tmp[681335](172189 call c_ptr[205045](?) c_char[20591]))
    unknown call_tmp[681342] "expr temp" "maybe param" "maybe type" "temp"
    (681345 'move' call_tmp[681342](172183 call buff _mt[243] val[172150]))
    unknown call_tmp[681347] "expr temp" "maybe param" "maybe type" "temp"
    (681350 'move' call_tmp[681347](172190 call _cast call_tmp[681335] call_tmp[681342]))
    (172192 call = call_tmp[681330] call_tmp[681347])
    (483224 'end of statement' result[172156])
    unknown call_tmp[681354] "expr temp" "maybe param" "maybe type" "temp"
    (681357 'move' call_tmp[681354](172196 call size _mt[243] result[172156]))
    unknown call_tmp[681359] "expr temp" "maybe param" "maybe type" "temp"
    (681362 'move' call_tmp[681359](172206 call uint(64)[115] 64))
    unknown call_tmp[681366] "expr temp" "maybe param" "maybe type" "temp"
    (681369 'move' call_tmp[681366](172200 call numBytes _mt[243] val[172150]))
    unknown call_tmp[681371] "expr temp" "maybe param" "maybe type" "temp"
    (681374 'move' call_tmp[681371](172207 call _cast call_tmp[681359] call_tmp[681366]))
    (172209 call = call_tmp[681354] call_tmp[681371])
    (483226 'end of statement' result[172156])
    unknown call_tmp[681378] "expr temp" "maybe param" "maybe type" "temp"
    (681381 'move' call_tmp[681378](172213 call isOwned _mt[243] val[172150]))
    (172217 call = call_tmp[681378] 0)
    (483228 'end of statement')
    (522340 'move' ret[522334](522339 'coerce' result[172156] chpl_byte_buffer[172131]))
    gotoReturn _end_chpl__exportRetStringOrBytes[522332] _end_chpl__exportRetStringOrBytes[522332]
    (483229 'end of statement' result[172156])
    label _end_chpl__exportRetStringOrBytes[522332]
    (522336 return ret[522334])
  }
  { scopeless type
    chpl_byte_buffer[172131]
  }
  function chpl__exportRet[172232](ref arg val[172229]:string[26], arg rt[172235]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522346] "RVV" "temp"
    unknown call_tmp[681383] "expr temp" "maybe param" "maybe type" "temp"
    (681386 'move' call_tmp[681383](172242 call chpl__exportRetStringOrBytes val[172229]))
    (522352 'move' ret[522346](522351 'coerce' call_tmp[681383] rt[172235]))
    (522348 return ret[522346])
  }
  { scopeless type
    rt[172235]
  }
  function chpl__exportRet[172255](ref arg val[172252]:bytes[24], arg rt[172258]:chpl_byte_buffer[172131]) : _unknown[51]
  {
    unknown ret[522356] "RVV" "temp"
    unknown call_tmp[681388] "expr temp" "maybe param" "maybe type" "temp"
    (681391 'move' call_tmp[681388](172265 call chpl__exportRetStringOrBytes val[172252]))
    (522362 'move' ret[522356](522361 'coerce' call_tmp[681388] rt[172258]))
    (522358 return ret[522356])
  }
  { scopeless type
    rt[172258]
  }
  function chpl__exportArg[172278](arg cp[172275]:bool[10], arg val[172281]:chpl_byte_buffer[172131], arg rt[172285]:string[26]) : _unknown[51]
  {
    unknown ret[522366] "RVV" "temp"
    unknown call_tmp[681395] "expr temp" "maybe param" "maybe type" "temp"
    (681398 'move' call_tmp[681395](172290 call data _mt[243] val[172281]))
    unknown call_tmp[681400] "maybe param" "maybe type" "temp"
    (681403 'move' call_tmp[681400](172294 call _cast c_string[19] call_tmp[681395]))
    unknown data[172296] "dead at end of block" "insert auto destroy"
    (544703 'init var' data[172296] call_tmp[681400])
    (172299 'end of statement')
    unknown call_tmp[681407] "expr temp" "maybe param" "maybe type" "temp"
    (681410 'move' call_tmp[681407](172302 call size _mt[243] val[172281]))
    unknown call_tmp[681414] "maybe param" "maybe type" "temp"
    (681417 'move' call_tmp[681414](172310 call(172305 call (partial) safeCast _mt[243] call_tmp[681407]) int(64)[13]))
    unknown size[172311] "dead at end of block" "insert auto destroy"
    (544705 'init var' size[172311] call_tmp[681414])
    (172314 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681419] "expr temp" "maybe param" "maybe type" "temp"
        (681422 'move' call_tmp[681419](172323 call _cond_test cp[172275]))
        if call_tmp[681419]
        {
          unknown call_tmp[681424] "expr temp" "maybe param" "maybe type" "temp"
          (681427 'move' call_tmp[681424](172320 call createStringWithNewBuffer data[172296] size[172311]))
          (522372 'move' ret[522366](522371 'coerce' call_tmp[681424] rt[172285]))
          gotoReturn _end_chpl__exportArg[522364] _end_chpl__exportArg[522364]
          (483233 'end of statement' data[172296] size[172311])
        }
        unknown call_tmp[681429] "expr temp" "maybe param" "maybe type" "temp"
        (681432 'move' call_tmp[681429](172333 call createStringWithBorrowedBuffer data[172296] size[172311]))
        (522378 'move' ret[522366](522377 'coerce' call_tmp[681429] rt[172285]))
        gotoReturn _end_chpl__exportArg[522364] _end_chpl__exportArg[522364]
        (483236 'end of statement' data[172296] size[172311])
      }
    }
    label _end_chpl__exportArg[522364]
    (522368 return ret[522366])
  }
  { scopeless type
    rt[172285]
  }
  function chpl__exportArg[172348](arg cp[172345]:bool[10], arg val[172351]:chpl_byte_buffer[172131], arg rt[172355]:bytes[24]) : _unknown[51]
  {
    unknown ret[522384] "RVV" "temp"
    unknown call_tmp[681436] "expr temp" "maybe param" "maybe type" "temp"
    (681439 'move' call_tmp[681436](172360 call data _mt[243] val[172351]))
    unknown call_tmp[681441] "maybe param" "maybe type" "temp"
    (681444 'move' call_tmp[681441](172364 call _cast c_string[19] call_tmp[681436]))
    unknown data[172366] "dead at end of block" "insert auto destroy"
    (544707 'init var' data[172366] call_tmp[681441])
    (172369 'end of statement')
    unknown call_tmp[681448] "expr temp" "maybe param" "maybe type" "temp"
    (681451 'move' call_tmp[681448](172372 call size _mt[243] val[172351]))
    unknown call_tmp[681455] "maybe param" "maybe type" "temp"
    (681458 'move' call_tmp[681455](172380 call(172375 call (partial) safeCast _mt[243] call_tmp[681448]) int(64)[13]))
    unknown size[172381] "dead at end of block" "insert auto destroy"
    (544709 'init var' size[172381] call_tmp[681455])
    (172384 'end of statement')
    Try!
    {
      {
        unknown call_tmp[681460] "expr temp" "maybe param" "maybe type" "temp"
        (681463 'move' call_tmp[681460](172393 call _cond_test cp[172345]))
        if call_tmp[681460]
        {
          unknown call_tmp[681465] "expr temp" "maybe param" "maybe type" "temp"
          (681468 'move' call_tmp[681465](172390 call createBytesWithNewBuffer data[172366] size[172381]))
          (522390 'move' ret[522384](522389 'coerce' call_tmp[681465] rt[172355]))
          gotoReturn _end_chpl__exportArg[522382] _end_chpl__exportArg[522382]
          (483239 'end of statement' data[172366] size[172381])
        }
        unknown call_tmp[681470] "expr temp" "maybe param" "maybe type" "temp"
        (681473 'move' call_tmp[681470](172403 call createBytesWithBorrowedBuffer data[172366] size[172381]))
        (522396 'move' ret[522384](522395 'coerce' call_tmp[681470] rt[172355]))
        gotoReturn _end_chpl__exportArg[522382] _end_chpl__exportArg[522382]
        (483242 'end of statement' data[172366] size[172381])
      }
    }
    label _end_chpl__exportArg[522382]
    (522386 return ret[522384])
  }
  { scopeless type
    rt[172355]
  }
  (355097 'used modules list'(172096 'use' ChapelStandard[20264])(172100 'use' CPtr[204934])(172103 'use' SysCTypes[20940]))
}